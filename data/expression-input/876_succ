[;, private, final, Map, <, String, ,, DiagnosticGroupWarningsGuard, >, suppressors, =, Maps, ., newHashMap, (, ), ;, SuppressDocWarningsGuard, (, Map]
[;, SuppressDocWarningsGuard, (, Map, <, String, ,, DiagnosticGroup, >, suppressibleGroups, ), {, for, (, Map, ., Entry, <, String, ,]
[., newHashMap, (, ), ;, SuppressDocWarningsGuard, (, Map, <, String, ,, DiagnosticGroup, >, suppressibleGroups, ), {, for, (, Map, .]
[), {, suppressors, ., put, (, entry, ., getKey, (, ), ,, new, DiagnosticGroupWarningsGuard, (, entry, ., getValue, (, )]
[., entrySet, (, ), ), {, suppressors, ., put, (, entry, ., getKey, (, ), ,, new, DiagnosticGroupWarningsGuard, (, entry]
[;, }, }, @, Override, public, CheckLevel, level, (, JSError, error, ), {, Node, node, =, error, ., node, ;]
[., put, (, entry, ., getKey, (, ), ,, new, DiagnosticGroupWarningsGuard, (, entry, ., getValue, (, ), ,, CheckLevel, .]
[,, new, DiagnosticGroupWarningsGuard, (, entry, ., getValue, (, ), ,, CheckLevel, ., OFF, ), ), ;, }, }, @, Override]
[., getKey, (, ), ,, new, DiagnosticGroupWarningsGuard, (, entry, ., getValue, (, ), ,, CheckLevel, ., OFF, ), ), ;]
[), ;, }, }, @, Override, public, CheckLevel, level, (, JSError, error, ), {, Node, node, =, error, ., node]
[,, CheckLevel, ., OFF, ), ), ;, }, }, @, Override, public, CheckLevel, level, (, JSError, error, ), {, Node]
[., getValue, (, ), ,, CheckLevel, ., OFF, ), ), ;, }, }, @, Override, public, CheckLevel, level, (, JSError]
[), ), ;, }, }, @, Override, public, CheckLevel, level, (, JSError, error, ), {, Node, node, =, error, .]
[., OFF, ), ), ;, }, }, @, Override, public, CheckLevel, level, (, JSError, error, ), {, Node, node, =]
[;, if, (, node, !=, null, ), {, for, (, Node, current, =, node, ;, current, !=, null, ;, current]
[., node, ;, if, (, node, !=, null, ), {, for, (, Node, current, =, node, ;, current, !=, null]
[), {, for, (, Node, current, =, node, ;, current, !=, null, ;, current, =, current, ., getParent, (, )]
[!=, null, ), {, for, (, Node, current, =, node, ;, current, !=, null, ;, current, =, current, ., getParent]
[), {, for, (, Node, current, =, node, ;, current, !=, null, ;, current, =, current, ., getParent, (, )]
[;, current, !=, null, ;, current, =, current, ., getParent, (, ), ), {, int, type, =, current, ., getType]
[;, current, =, current, ., getParent, (, ), ), {, int, type, =, current, ., getType, (, ), ;, JSDocInfo]
[!=, null, ;, current, =, current, ., getParent, (, ), ), {, int, type, =, current, ., getType, (, )]
[;, current, =, current, ., getParent, (, ), ), {, int, type, =, current, ., getType, (, ), ;, JSDocInfo]
[=, current, ., getParent, (, ), ), {, int, type, =, current, ., getType, (, ), ;, JSDocInfo, info, =]
[), {, int, type, =, current, ., getType, (, ), ;, JSDocInfo, info, =, null, ;, if, (, type, ==]
[., getParent, (, ), ), {, int, type, =, current, ., getType, (, ), ;, JSDocInfo, info, =, null, ;]
[;, JSDocInfo, info, =, null, ;, if, (, type, ==, Token, ., FUNCTION, ), {, info, =, NodeUtil, ., getFunctionJSDocInfo]
[., getType, (, ), ;, JSDocInfo, info, =, null, ;, if, (, type, ==, Token, ., FUNCTION, ), {, info]
[;, if, (, type, ==, Token, ., FUNCTION, ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, current, ), ;, }]
[), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, current, ), ;, }, else, if, (, type, ==, Token, ., SCRIPT]
[==, Token, ., FUNCTION, ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, current, ), ;, }, else, if, (, type]
[), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, current, ), ;, }, else, if, (, type, ==, Token, ., SCRIPT]
[., FUNCTION, ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, current, ), ;, }, else, if, (, type, ==, Token]
[=, NodeUtil, ., getFunctionJSDocInfo, (, current, ), ;, }, else, if, (, type, ==, Token, ., SCRIPT, ), {, info]
[;, }, else, if, (, type, ==, Token, ., SCRIPT, ), {, info, =, current, ., getJSDocInfo, (, ), ;]
[., getFunctionJSDocInfo, (, current, ), ;, }, else, if, (, type, ==, Token, ., SCRIPT, ), {, info, =, current]
[), ;, }, else, if, (, type, ==, Token, ., SCRIPT, ), {, info, =, current, ., getJSDocInfo, (, )]
[), {, info, =, current, ., getJSDocInfo, (, ), ;, }, else, if, (, type, ==, Token, ., ASSIGN, )]
[==, Token, ., SCRIPT, ), {, info, =, current, ., getJSDocInfo, (, ), ;, }, else, if, (, type, ==]
[), {, info, =, current, ., getJSDocInfo, (, ), ;, }, else, if, (, type, ==, Token, ., ASSIGN, )]
[., SCRIPT, ), {, info, =, current, ., getJSDocInfo, (, ), ;, }, else, if, (, type, ==, Token, .]
[=, current, ., getJSDocInfo, (, ), ;, }, else, if, (, type, ==, Token, ., ASSIGN, ), {, Node, rhs]
[;, }, else, if, (, type, ==, Token, ., ASSIGN, ), {, Node, rhs, =, current, ., getLastChild, (, )]
[., getJSDocInfo, (, ), ;, }, else, if, (, type, ==, Token, ., ASSIGN, ), {, Node, rhs, =, current]
[), {, Node, rhs, =, current, ., getLastChild, (, ), ;, if, (, rhs, ., isFunction, (, ), ), {]
[==, Token, ., ASSIGN, ), {, Node, rhs, =, current, ., getLastChild, (, ), ;, if, (, rhs, ., isFunction]
[), {, Node, rhs, =, current, ., getLastChild, (, ), ;, if, (, rhs, ., isFunction, (, ), ), {]
[., ASSIGN, ), {, Node, rhs, =, current, ., getLastChild, (, ), ;, if, (, rhs, ., isFunction, (, )]
[;, if, (, rhs, ., isFunction, (, ), ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, rhs, ), ;, }]
[., getLastChild, (, ), ;, if, (, rhs, ., isFunction, (, ), ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (]
[), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, rhs, ), ;, }, }, if, (, info, !=, null, ), {]
[., isFunction, (, ), ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, rhs, ), ;, }, }, if, (, info]
[=, NodeUtil, ., getFunctionJSDocInfo, (, rhs, ), ;, }, }, if, (, info, !=, null, ), {, for, (, String]
[;, }, }, if, (, info, !=, null, ), {, for, (, String, suppressor, :, info, ., getSuppressions, (, )]
[., getFunctionJSDocInfo, (, rhs, ), ;, }, }, if, (, info, !=, null, ), {, for, (, String, suppressor, :]
[), ;, }, }, if, (, info, !=, null, ), {, for, (, String, suppressor, :, info, ., getSuppressions, (]
[), {, for, (, String, suppressor, :, info, ., getSuppressions, (, ), ), {, WarningsGuard, guard, =, suppressors, ., get]
[!=, null, ), {, for, (, String, suppressor, :, info, ., getSuppressions, (, ), ), {, WarningsGuard, guard, =, suppressors]
[), {, for, (, String, suppressor, :, info, ., getSuppressions, (, ), ), {, WarningsGuard, guard, =, suppressors, ., get]
[), {, WarningsGuard, guard, =, suppressors, ., get, (, suppressor, ), ;, if, (, guard, !=, null, ), {, CheckLevel]
[., getSuppressions, (, ), ), {, WarningsGuard, guard, =, suppressors, ., get, (, suppressor, ), ;, if, (, guard, !=]
[;, if, (, guard, !=, null, ), {, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (]
[., get, (, suppressor, ), ;, if, (, guard, !=, null, ), {, CheckLevel, newLevel, =, guard, ., level, (]
[), ;, if, (, guard, !=, null, ), {, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if]
[), {, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (, newLevel, !=, null, ), {, return]
[!=, null, ), {, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (, newLevel, !=, null, )]
[), {, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (, newLevel, !=, null, ), {, return]
[;, if, (, newLevel, !=, null, ), {, return, newLevel, ;, }, }, }, }, }, }, return, null, ;]
[., level, (, error, ), ;, if, (, newLevel, !=, null, ), {, return, newLevel, ;, }, }, }, }]
[), ;, if, (, newLevel, !=, null, ), {, return, newLevel, ;, }, }, }, }, }, }, return, null]
[), {, return, newLevel, ;, }, }, }, }, }, }, return, null, ;, }, @, Override, public, int, getPriority]
[!=, null, ), {, return, newLevel, ;, }, }, }, }, }, }, return, null, ;, }, @, Override, public]
[), {, return, newLevel, ;, }, }, }, }, }, }, return, null, ;, }, @, Override, public, int, getPriority]
[;, }, }, }, }, }, }, return, null, ;, }, @, Override, public, int, getPriority, (, ), {, return]
[;, }, @, Override, public, int, getPriority, (, ), {, return, WarningsGuard, ., Priority, ., SUPPRESS_DOC, ., value, ;, }]
[;, }, }]
[., value, ;, }, }]
[., SUPPRESS_DOC, ., value, ;, }, }]
[., Priority, ., SUPPRESS_DOC, ., value, ;, }, }]
