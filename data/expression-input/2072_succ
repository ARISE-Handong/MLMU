[;, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, Arc2D, shape]
[;, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, Arc2D, shape]
[;, double, radius, =, plotArea, ., getHeight, (, ), ;, double, halfX, =, plotArea, ., getWidth, (, ), /, 2]
[), ;, double, radius, =, plotArea, ., getHeight, (, ), ;, double, halfX, =, plotArea, ., getWidth, (, ), /]
[., PIE, ), ;, double, radius, =, plotArea, ., getHeight, (, ), ;, double, halfX, =, plotArea, ., getWidth, (]
[;, double, halfX, =, plotArea, ., getWidth, (, ), /, 2, ;, double, diameter, =, 2, *, radius, ;, shape]
[., getHeight, (, ), ;, double, halfX, =, plotArea, ., getWidth, (, ), /, 2, ;, double, diameter, =, 2]
[;, double, diameter, =, 2, *, radius, ;, shape, ., setFrame, (, plotArea, ., getMinX, (, ), +, halfX, -]
[/, 2, ;, double, diameter, =, 2, *, radius, ;, shape, ., setFrame, (, plotArea, ., getMinX, (, ), +]
[., getWidth, (, ), /, 2, ;, double, diameter, =, 2, *, radius, ;, shape, ., setFrame, (, plotArea, .]
[;, double, diameter, =, 2, *, radius, ;, shape, ., setFrame, (, plotArea, ., getMinX, (, ), +, halfX, -]
[;, shape, ., setFrame, (, plotArea, ., getMinX, (, ), +, halfX, -, radius, ,, plotArea, ., getMinY, (, )]
[*, radius, ;, shape, ., setFrame, (, plotArea, ., getMinX, (, ), +, halfX, -, radius, ,, plotArea, ., getMinY]
[;, shape, ., setFrame, (, plotArea, ., getMinX, (, ), +, halfX, -, radius, ,, plotArea, ., getMinY, (, )]
[;, radius, =, Math, ., toDegrees, (, Math, ., asin, (, halfX, /, radius, ), ), ;, shape, ., setAngleStart]
[., setFrame, (, plotArea, ., getMinX, (, ), +, halfX, -, radius, ,, plotArea, ., getMinY, (, ), -, radius]
[,, plotArea, ., getMinY, (, ), -, radius, ,, diameter, ,, diameter, ), ;, radius, =, Math, ., toDegrees, (]
[-, radius, ,, plotArea, ., getMinY, (, ), -, radius, ,, diameter, ,, diameter, ), ;, radius, =, Math, .]
[+, halfX, -, radius, ,, plotArea, ., getMinY, (, ), -, radius, ,, diameter, ,, diameter, ), ;, radius, =]
[., getMinX, (, ), +, halfX, -, radius, ,, plotArea, ., getMinY, (, ), -, radius, ,, diameter, ,, diameter]
[-, radius, ,, plotArea, ., getMinY, (, ), -, radius, ,, diameter, ,, diameter, ), ;, radius, =, Math, .]
[,, plotArea, ., getMinY, (, ), -, radius, ,, diameter, ,, diameter, ), ;, radius, =, Math, ., toDegrees, (]
[,, diameter, ,, diameter, ), ;, radius, =, Math, ., toDegrees, (, Math, ., asin, (, halfX, /, radius, )]
[-, radius, ,, diameter, ,, diameter, ), ;, radius, =, Math, ., toDegrees, (, Math, ., asin, (, halfX, /]
[., getMinY, (, ), -, radius, ,, diameter, ,, diameter, ), ;, radius, =, Math, ., toDegrees, (, Math, .]
[,, diameter, ,, diameter, ), ;, radius, =, Math, ., toDegrees, (, Math, ., asin, (, halfX, /, radius, )]
[,, diameter, ), ;, radius, =, Math, ., toDegrees, (, Math, ., asin, (, halfX, /, radius, ), ), ;]
[), ;, radius, =, Math, ., toDegrees, (, Math, ., asin, (, halfX, /, radius, ), ), ;, shape, .]
[=, Math, ., toDegrees, (, Math, ., asin, (, halfX, /, radius, ), ), ;, shape, ., setAngleStart, (, 270]
[;, shape, ., setAngleStart, (, 270, -, radius, ), ;, shape, ., setAngleExtent, (, 2, *, radius, ), ;, Area]
[., toDegrees, (, Math, ., asin, (, halfX, /, radius, ), ), ;, shape, ., setAngleStart, (, 270, -, radius]
[), ;, shape, ., setAngleStart, (, 270, -, radius, ), ;, shape, ., setAngleExtent, (, 2, *, radius, ), ;]
[., asin, (, halfX, /, radius, ), ), ;, shape, ., setAngleStart, (, 270, -, radius, ), ;, shape, .]
[), ), ;, shape, ., setAngleStart, (, 270, -, radius, ), ;, shape, ., setAngleExtent, (, 2, *, radius, )]
[/, radius, ), ), ;, shape, ., setAngleStart, (, 270, -, radius, ), ;, shape, ., setAngleExtent, (, 2, *]
[), ), ;, shape, ., setAngleStart, (, 270, -, radius, ), ;, shape, ., setAngleExtent, (, 2, *, radius, )]
[;, shape, ., setAngleExtent, (, 2, *, radius, ), ;, Area, s, =, new, Area, (, shape, ), ;, if]
[., setAngleStart, (, 270, -, radius, ), ;, shape, ., setAngleExtent, (, 2, *, radius, ), ;, Area, s, =]
[), ;, shape, ., setAngleExtent, (, 2, *, radius, ), ;, Area, s, =, new, Area, (, shape, ), ;]
[-, radius, ), ;, shape, ., setAngleExtent, (, 2, *, radius, ), ;, Area, s, =, new, Area, (, shape]
[), ;, shape, ., setAngleExtent, (, 2, *, radius, ), ;, Area, s, =, new, Area, (, shape, ), ;]
[;, Area, s, =, new, Area, (, shape, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle]
[., setAngleExtent, (, 2, *, radius, ), ;, Area, s, =, new, Area, (, shape, ), ;, if, (, (]
[), ;, Area, s, =, new, Area, (, shape, ), ;, if, (, (, rotate, !=, null, ), &&, (]
[*, radius, ), ;, Area, s, =, new, Area, (, shape, ), ;, if, (, (, rotate, !=, null, )]
[), ;, Area, s, =, new, Area, (, shape, ), ;, if, (, (, rotate, !=, null, ), &&, (]
[;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), .]
[), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, )]
[), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (]
[&&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (]
[), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX]
[!=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate]
[), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX]
[), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (]
[), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY]
[!=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate]
[), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY]
[;, s, ., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (, g2, ,, s, ), ;, }, public]
[., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, s, .]
[,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, s, ., transform, (, getTransform, (]
[,, rotate, ., getY, (, ), ), ;, s, ., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (]
[., getX, (, ), ,, rotate, ., getY, (, ), ), ;, s, ., transform, (, getTransform, (, ), )]
[), ;, s, ., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (, g2, ,, s, ), ;, }]
[., getY, (, ), ), ;, s, ., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (, g2, ,]
[;, }, defaultDisplay, (, g2, ,, s, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (, g2, ,, s, ), ;, }, public, boolean, equals]
[), ;, }, defaultDisplay, (, g2, ,, s, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[,, s, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, PlumNeedle, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, PlumNeedle, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, PlumNeedle, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, PlumNeedle, ), ), {, return, false, ;, }, if, (, !, super]
[), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false]
[instanceof, PlumNeedle, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {]
[;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, return, true, ;]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode]
[., equals, (, obj, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, )]
[), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, super, .]
[;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode, (, ), ;, }]
[;, }, public, int, hashCode, (, ), {, return, super, ., hashCode, (, ), ;, }, public, Object, clone, (]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, }]
[., hashCode, (, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, )]
[;, }, }]
[., clone, (, ), ;, }, }]
