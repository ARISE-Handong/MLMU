[=, below, ;, this, ., above, =, above, ;, this, ., between, =, between, ;, }, public, NumericEntityEscaper, (, )]
[., below, =, below, ;, this, ., above, =, above, ;, this, ., between, =, between, ;, }, public, NumericEntityEscaper]
[;, this, ., above, =, above, ;, this, ., between, =, between, ;, }, public, NumericEntityEscaper, (, ), {, this]
[=, above, ;, this, ., between, =, between, ;, }, public, NumericEntityEscaper, (, ), {, this, (, 0, ,, Integer]
[., above, =, above, ;, this, ., between, =, between, ;, }, public, NumericEntityEscaper, (, ), {, this, (, 0]
[;, this, ., between, =, between, ;, }, public, NumericEntityEscaper, (, ), {, this, (, 0, ,, Integer, ., MAX_VALUE]
[=, between, ;, }, public, NumericEntityEscaper, (, ), {, this, (, 0, ,, Integer, ., MAX_VALUE, ,, true, ), ;]
[., between, =, between, ;, }, public, NumericEntityEscaper, (, ), {, this, (, 0, ,, Integer, ., MAX_VALUE, ,, true]
[;, }, public, NumericEntityEscaper, (, ), {, this, (, 0, ,, Integer, ., MAX_VALUE, ,, true, ), ;, }, public]
[,, Integer, ., MAX_VALUE, ,, true, ), ;, }, public, static, NumericEntityEscaper, below, (, final, int, codepoint, ), {, return]
[,, true, ), ;, }, public, static, NumericEntityEscaper, below, (, final, int, codepoint, ), {, return, outsideOf, (, codepoint, ,]
[., MAX_VALUE, ,, true, ), ;, }, public, static, NumericEntityEscaper, below, (, final, int, codepoint, ), {, return, outsideOf, (]
[), ;, }, public, static, NumericEntityEscaper, below, (, final, int, codepoint, ), {, return, outsideOf, (, codepoint, ,, Integer, .]
[;, }, public, static, NumericEntityEscaper, above, (, final, int, codepoint, ), {, return, outsideOf, (, 0, ,, codepoint, ), ;]
[,, Integer, ., MAX_VALUE, ), ;, }, public, static, NumericEntityEscaper, above, (, final, int, codepoint, ), {, return, outsideOf, (]
[), ;, }, public, static, NumericEntityEscaper, above, (, final, int, codepoint, ), {, return, outsideOf, (, 0, ,, codepoint, )]
[., MAX_VALUE, ), ;, }, public, static, NumericEntityEscaper, above, (, final, int, codepoint, ), {, return, outsideOf, (, 0, ,]
[;, }, public, static, NumericEntityEscaper, between, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, NumericEntityEscaper, (]
[,, codepoint, ), ;, }, public, static, NumericEntityEscaper, between, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return]
[), ;, }, public, static, NumericEntityEscaper, between, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, NumericEntityEscaper]
[;, }, public, static, NumericEntityEscaper, outsideOf, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, NumericEntityEscaper, (]
[,, codepointHigh, ,, true, ), ;, }, public, static, NumericEntityEscaper, outsideOf, (, final, int, codepointLow, ,, final, int, codepointHigh, )]
[,, true, ), ;, }, public, static, NumericEntityEscaper, outsideOf, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return]
[), ;, }, public, static, NumericEntityEscaper, outsideOf, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, NumericEntityEscaper]
[;, }, @, Override, public, boolean, translate, (, final, int, codepoint, ,, final, Writer, out, ), throws, IOException, {, if]
[,, codepointHigh, ,, false, ), ;, }, @, Override, public, boolean, translate, (, final, int, codepoint, ,, final, Writer, out]
[,, false, ), ;, }, @, Override, public, boolean, translate, (, final, int, codepoint, ,, final, Writer, out, ), throws]
[), ;, }, @, Override, public, boolean, translate, (, final, int, codepoint, ,, final, Writer, out, ), throws, IOException, {]
[), {, if, (, codepoint, <, below, ||, codepoint, >, above, ), {, return, false, ;, }, }, else, {]
[), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=, above, ), {]
[||, codepoint, >, above, ), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint]
[<, below, ||, codepoint, >, above, ), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below]
[||, codepoint, >, above, ), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint]
[), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=, above, ), {]
[>, above, ), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=, above]
[), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=, above, ), {]
[;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=, above, ), {, return, false, ;, }]
[), {, return, false, ;, }, }, out, ., write, (, "&#", ), ;, out, ., write, (, Integer, .]
[&&, codepoint, <=, above, ), {, return, false, ;, }, }, out, ., write, (, "&#", ), ;, out, .]
[>=, below, &&, codepoint, <=, above, ), {, return, false, ;, }, }, out, ., write, (, "&#", ), ;]
[&&, codepoint, <=, above, ), {, return, false, ;, }, }, out, ., write, (, "&#", ), ;, out, .]
[), {, return, false, ;, }, }, out, ., write, (, "&#", ), ;, out, ., write, (, Integer, .]
[<=, above, ), {, return, false, ;, }, }, out, ., write, (, "&#", ), ;, out, ., write, (]
[), {, return, false, ;, }, }, out, ., write, (, "&#", ), ;, out, ., write, (, Integer, .]
[;, }, }, out, ., write, (, "&#", ), ;, out, ., write, (, Integer, ., toString, (, codepoint, ,]
[;, out, ., write, (, Integer, ., toString, (, codepoint, ,, 10, ), ), ;, out, ., write, (, ';']
[., write, (, "&#", ), ;, out, ., write, (, Integer, ., toString, (, codepoint, ,, 10, ), ), ;]
[), ;, out, ., write, (, Integer, ., toString, (, codepoint, ,, 10, ), ), ;, out, ., write, (]
[;, out, ., write, (, ';', ), ;, return, true, ;, }, }]
[., write, (, Integer, ., toString, (, codepoint, ,, 10, ), ), ;, out, ., write, (, ';', ), ;]
[), ;, out, ., write, (, ';', ), ;, return, true, ;, }, }]
[., toString, (, codepoint, ,, 10, ), ), ;, out, ., write, (, ';', ), ;, return, true, ;, }]
[,, 10, ), ), ;, out, ., write, (, ';', ), ;, return, true, ;, }, }]
[), ), ;, out, ., write, (, ';', ), ;, return, true, ;, }, }]
[;, return, true, ;, }, }]
[., write, (, ';', ), ;, return, true, ;, }, }]
[), ;, return, true, ;, }, }]
[;, }, }]
