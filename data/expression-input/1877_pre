[SeriesException, ;, public, class, ComparableObjectSeries, extends, Series, implements, Cloneable, ,, Serializable, {, protected, List, data, ;, private, int, maximumItemCount, =]
[SeriesException, ;, public, class, ComparableObjectSeries, extends, Series, implements, Cloneable, ,, Serializable, {, protected, List, data, ;, private, int, maximumItemCount, =]
[., MAX_VALUE, ;, private, boolean, autoSort, ;, private, boolean, allowDuplicateXValues, ;, public, ComparableObjectSeries, (, Comparable, key, ), {, this, (]
[;, private, boolean, autoSort, ;, private, boolean, allowDuplicateXValues, ;, public, ComparableObjectSeries, (, Comparable, key, ), {, this, (, key, ,]
[boolean, autoSort, ;, private, boolean, allowDuplicateXValues, ;, public, ComparableObjectSeries, (, Comparable, key, ), {, this, (, key, ,, true, ,]
[,, true, ), ;, }, public, ComparableObjectSeries, (, Comparable, key, ,, boolean, autoSort, ,, boolean, allowDuplicateXValues, ), {, super, (]
[;, }, public, ComparableObjectSeries, (, Comparable, key, ,, boolean, autoSort, ,, boolean, allowDuplicateXValues, ), {, super, (, key, ), ;]
[;, }, public, ComparableObjectSeries, (, Comparable, key, ,, boolean, autoSort, ,, boolean, allowDuplicateXValues, ), {, super, (, key, ), ;]
[(, Comparable, key, ,, boolean, autoSort, ,, boolean, allowDuplicateXValues, ), {, super, (, key, ), ;, this, ., data, =]
[), {, super, (, key, ), ;, this, ., data, =, new, java, ., util, ., ArrayList, (, ), ;]
[), {, super, (, key, ), ;, this, ., data, =, new, java, ., util, ., ArrayList, (, ), ;]
[key, ), ;, this, ., data, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., autoSort, =]
[;, this, ., data, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., autoSort, =, autoSort, ;]
[;, this, ., data, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., autoSort, =, autoSort, ;]
[=, new, java, ., util, ., ArrayList, (, ), ;, this, ., autoSort, =, autoSort, ;, this, ., allowDuplicateXValues, =]
[this, ., autoSort, =, autoSort, ;, this, ., allowDuplicateXValues, =, allowDuplicateXValues, ;, }, public, boolean, getAutoSort, (, ), {, return]
[this, ., autoSort, =, autoSort, ;, this, ., allowDuplicateXValues, =, allowDuplicateXValues, ;, }, public, boolean, getAutoSort, (, ), {, return]
[}, public, boolean, getAutoSort, (, ), {, return, this, ., autoSort, ;, }, public, boolean, getAllowDuplicateXValues, (, ), {, return]
[}, public, boolean, getAutoSort, (, ), {, return, this, ., autoSort, ;, }, public, boolean, getAllowDuplicateXValues, (, ), {, return]
[}, public, boolean, getAllowDuplicateXValues, (, ), {, return, this, ., allowDuplicateXValues, ;, }, public, int, getItemCount, (, ), {, return]
[}, public, boolean, getAllowDuplicateXValues, (, ), {, return, this, ., allowDuplicateXValues, ;, }, public, int, getItemCount, (, ), {, return]
[}, public, boolean, getAllowDuplicateXValues, (, ), {, return, this, ., allowDuplicateXValues, ;, }, public, int, getItemCount, (, ), {, return]
[(, ), {, return, this, ., data, ., size, (, ), ;, }, public, int, getMaximumItemCount, (, ), {, return]
[(, ), {, return, this, ., data, ., size, (, ), ;, }, public, int, getMaximumItemCount, (, ), {, return]
[public, int, getMaximumItemCount, (, ), {, return, this, ., maximumItemCount, ;, }, public, void, setMaximumItemCount, (, int, maximum, ), {]
[public, int, getMaximumItemCount, (, ), {, return, this, ., maximumItemCount, ;, }, public, void, setMaximumItemCount, (, int, maximum, ), {]
[), {, return, this, ., maximumItemCount, ;, }, public, void, setMaximumItemCount, (, int, maximum, ), {, this, ., maximumItemCount, =]
[maximumItemCount, ;, }, public, void, setMaximumItemCount, (, int, maximum, ), {, this, ., maximumItemCount, =, maximum, ;, boolean, dataRemoved, =]
[void, setMaximumItemCount, (, int, maximum, ), {, this, ., maximumItemCount, =, maximum, ;, boolean, dataRemoved, =, false, ;, while, (]
[void, setMaximumItemCount, (, int, maximum, ), {, this, ., maximumItemCount, =, maximum, ;, boolean, dataRemoved, =, false, ;, while, (]
[void, setMaximumItemCount, (, int, maximum, ), {, this, ., maximumItemCount, =, maximum, ;, boolean, dataRemoved, =, false, ;, while, (]
[void, setMaximumItemCount, (, int, maximum, ), {, this, ., maximumItemCount, =, maximum, ;, boolean, dataRemoved, =, false, ;, while, (]
[., maximumItemCount, =, maximum, ;, boolean, dataRemoved, =, false, ;, while, (, this, ., data, ., size, (, ), >]
[maximum, ;, boolean, dataRemoved, =, false, ;, while, (, this, ., data, ., size, (, ), >, maximum, ), {]
[maximum, ;, boolean, dataRemoved, =, false, ;, while, (, this, ., data, ., size, (, ), >, maximum, ), {]
[maximum, ;, boolean, dataRemoved, =, false, ;, while, (, this, ., data, ., size, (, ), >, maximum, ), {]
[;, while, (, this, ., data, ., size, (, ), >, maximum, ), {, this, ., data, ., remove, (]
[this, ., data, ., size, (, ), >, maximum, ), {, this, ., data, ., remove, (, 0, ), ;]
[data, ., size, (, ), >, maximum, ), {, this, ., data, ., remove, (, 0, ), ;, dataRemoved, =]
[>, maximum, ), {, this, ., data, ., remove, (, 0, ), ;, dataRemoved, =, true, ;, }, if, (]
[{, this, ., data, ., remove, (, 0, ), ;, dataRemoved, =, true, ;, }, if, (, dataRemoved, ), {]
[dataRemoved, ), {, fireSeriesChanged, (, ), ;, }, }, protected, void, add, (, Comparable, x, ,, Object, y, ), {]
[{, fireSeriesChanged, (, ), ;, }, }, protected, void, add, (, Comparable, x, ,, Object, y, ), {, add, (]
[(, ), ;, }, }, protected, void, add, (, Comparable, x, ,, Object, y, ), {, add, (, x, ,]
[;, }, }, protected, void, add, (, Comparable, x, ,, Object, y, ), {, add, (, x, ,, y, ,]
[), ;, }, protected, void, add, (, Comparable, x, ,, Object, y, ,, boolean, notify, ), {, ComparableObjectItem, item, =]
[protected, void, add, (, Comparable, x, ,, Object, y, ,, boolean, notify, ), {, ComparableObjectItem, item, =, new, ComparableObjectItem, (]
[add, (, Comparable, x, ,, Object, y, ,, boolean, notify, ), {, ComparableObjectItem, item, =, new, ComparableObjectItem, (, x, ,]
[x, ,, Object, y, ,, boolean, notify, ), {, ComparableObjectItem, item, =, new, ComparableObjectItem, (, x, ,, y, ), ;]
[Object, y, ,, boolean, notify, ), {, ComparableObjectItem, item, =, new, ComparableObjectItem, (, x, ,, y, ), ;, add, (]
[,, boolean, notify, ), {, ComparableObjectItem, item, =, new, ComparableObjectItem, (, x, ,, y, ), ;, add, (, item, ,]
[(, item, ,, notify, ), ;, }, protected, void, add, (, ComparableObjectItem, item, ,, boolean, notify, ), {, if, (]
[(, item, ,, notify, ), ;, }, protected, void, add, (, ComparableObjectItem, item, ,, boolean, notify, ), {, if, (]
[,, notify, ), ;, }, protected, void, add, (, ComparableObjectItem, item, ,, boolean, notify, ), {, if, (, item, ==]
[}, protected, void, add, (, ComparableObjectItem, item, ,, boolean, notify, ), {, if, (, item, ==, null, ), {, throw]
[add, (, ComparableObjectItem, item, ,, boolean, notify, ), {, if, (, item, ==, null, ), {, throw, new, IllegalArgumentException, (]
[notify, ), {, if, (, item, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'item' argument.", ), ;, }, if, (]
[notify, ), {, if, (, item, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'item' argument.", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'item' argument.", ), ;, }, if, (, this, ., autoSort, ), {, int, index, =]
[), {, throw, new, IllegalArgumentException, (, "Null 'item' argument.", ), ;, }, if, (, this, ., autoSort, ), {, int, index, =]
[IllegalArgumentException, (, "Null 'item' argument.", ), ;, }, if, (, this, ., autoSort, ), {, int, index, =, Collections, ., binarySearch, (]
[IllegalArgumentException, (, "Null 'item' argument.", ), ;, }, if, (, this, ., autoSort, ), {, int, index, =, Collections, ., binarySearch, (]
[;, }, if, (, this, ., autoSort, ), {, int, index, =, Collections, ., binarySearch, (, this, ., data, ,]
[., autoSort, ), {, int, index, =, Collections, ., binarySearch, (, this, ., data, ,, item, ), ;, if, (]
[., autoSort, ), {, int, index, =, Collections, ., binarySearch, (, this, ., data, ,, item, ), ;, if, (]
[), {, int, index, =, Collections, ., binarySearch, (, this, ., data, ,, item, ), ;, if, (, index, <]
[index, =, Collections, ., binarySearch, (, this, ., data, ,, item, ), ;, if, (, index, <, 0, ), {]
[index, =, Collections, ., binarySearch, (, this, ., data, ,, item, ), ;, if, (, index, <, 0, ), {]
[index, =, Collections, ., binarySearch, (, this, ., data, ,, item, ), ;, if, (, index, <, 0, ), {]
[this, ., data, ,, item, ), ;, if, (, index, <, 0, ), {, this, ., data, ., add, (]
[this, ., data, ,, item, ), ;, if, (, index, <, 0, ), {, this, ., data, ., add, (]
[., data, ,, item, ), ;, if, (, index, <, 0, ), {, this, ., data, ., add, (, -]
[,, item, ), ;, if, (, index, <, 0, ), {, this, ., data, ., add, (, -, index, -]
[), ;, if, (, index, <, 0, ), {, this, ., data, ., add, (, -, index, -, 1, ,]
[{, this, ., data, ., add, (, -, index, -, 1, ,, item, ), ;, }, else, {, if, (]
[{, this, ., data, ., add, (, -, index, -, 1, ,, item, ), ;, }, else, {, if, (]
[index, -, 1, ,, item, ), ;, }, else, {, if, (, this, ., allowDuplicateXValues, ), {, int, size, =]
[index, -, 1, ,, item, ), ;, }, else, {, if, (, this, ., allowDuplicateXValues, ), {, int, size, =]
[index, -, 1, ,, item, ), ;, }, else, {, if, (, this, ., allowDuplicateXValues, ), {, int, size, =]
[if, (, this, ., allowDuplicateXValues, ), {, int, size, =, this, ., data, ., size, (, ), ;, while, (]
[if, (, this, ., allowDuplicateXValues, ), {, int, size, =, this, ., data, ., size, (, ), ;, while, (]
[if, (, this, ., allowDuplicateXValues, ), {, int, size, =, this, ., data, ., size, (, ), ;, while, (]
[this, ., allowDuplicateXValues, ), {, int, size, =, this, ., data, ., size, (, ), ;, while, (, index, <]
[allowDuplicateXValues, ), {, int, size, =, this, ., data, ., size, (, ), ;, while, (, index, <, size, &&]
[allowDuplicateXValues, ), {, int, size, =, this, ., data, ., size, (, ), ;, while, (, index, <, size, &&]
[allowDuplicateXValues, ), {, int, size, =, this, ., data, ., size, (, ), ;, while, (, index, <, size, &&]
[size, =, this, ., data, ., size, (, ), ;, while, (, index, <, size, &&, item, ., compareTo, (]
[size, =, this, ., data, ., size, (, ), ;, while, (, index, <, size, &&, item, ., compareTo, (]
[size, =, this, ., data, ., size, (, ), ;, while, (, index, <, size, &&, item, ., compareTo, (]
[size, (, ), ;, while, (, index, <, size, &&, item, ., compareTo, (, this, ., data, ., get, (]
[while, (, index, <, size, &&, item, ., compareTo, (, this, ., data, ., get, (, index, ), ), ==]
[<, size, &&, item, ., compareTo, (, this, ., data, ., get, (, index, ), ), ==, 0, ), {]
[<, size, &&, item, ., compareTo, (, this, ., data, ., get, (, index, ), ), ==, 0, ), {]
[(, this, ., data, ., get, (, index, ), ), ==, 0, ), {, index, ++, ;, }, if, (]
[(, this, ., data, ., get, (, index, ), ), ==, 0, ), {, index, ++, ;, }, if, (]
[., data, ., get, (, index, ), ), ==, 0, ), {, index, ++, ;, }, if, (, index, <]
[., data, ., get, (, index, ), ), ==, 0, ), {, index, ++, ;, }, if, (, index, <]
[., data, ., get, (, index, ), ), ==, 0, ), {, index, ++, ;, }, if, (, index, <]
[0, ), {, index, ++, ;, }, if, (, index, <, this, ., data, ., size, (, ), ), {]
[0, ), {, index, ++, ;, }, if, (, index, <, this, ., data, ., size, (, ), ), {]
[0, ), {, index, ++, ;, }, if, (, index, <, this, ., data, ., size, (, ), ), {]
[}, if, (, index, <, this, ., data, ., size, (, ), ), {, this, ., data, ., add, (]
[(, index, <, this, ., data, ., size, (, ), ), {, this, ., data, ., add, (, index, ,]
[., size, (, ), ), {, this, ., data, ., add, (, index, ,, item, ), ;, }, else, {]
[., size, (, ), ), {, this, ., data, ., add, (, index, ,, item, ), ;, }, else, {]
[., size, (, ), ), {, this, ., data, ., add, (, index, ,, item, ), ;, }, else, {]
[this, ., data, ., add, (, index, ,, item, ), ;, }, else, {, this, ., data, ., add, (]
[item, ), ;, }, else, {, this, ., data, ., add, (, item, ), ;, }, }, else, {, throw]
[}, else, {, this, ., data, ., add, (, item, ), ;, }, }, else, {, throw, new, SeriesException, (]
[), ;, }, }, else, {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }, }, else, {, if, (]
[;, }, }, else, {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }, }, else, {, if, (, !]
[;, }, }, else, {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }, }, else, {, if, (, !]
[(, "X-value already exists.", ), ;, }, }, }, else, {, if, (, !, this, ., allowDuplicateXValues, ), {, int, index, =]
[), ;, }, }, }, else, {, if, (, !, this, ., allowDuplicateXValues, ), {, int, index, =, indexOf, (]
[), ;, }, }, }, else, {, if, (, !, this, ., allowDuplicateXValues, ), {, int, index, =, indexOf, (]
[!, this, ., allowDuplicateXValues, ), {, int, index, =, indexOf, (, item, ., getComparable, (, ), ), ;, if, (]
[!, this, ., allowDuplicateXValues, ), {, int, index, =, indexOf, (, item, ., getComparable, (, ), ), ;, if, (]
[., allowDuplicateXValues, ), {, int, index, =, indexOf, (, item, ., getComparable, (, ), ), ;, if, (, index, >=]
[int, index, =, indexOf, (, item, ., getComparable, (, ), ), ;, if, (, index, >=, 0, ), {, throw]
[indexOf, (, item, ., getComparable, (, ), ), ;, if, (, index, >=, 0, ), {, throw, new, SeriesException, (]
[(, ), ), ;, if, (, index, >=, 0, ), {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }]
[(, ), ), ;, if, (, index, >=, 0, ), {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }]
[(, ), ), ;, if, (, index, >=, 0, ), {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }]
[index, >=, 0, ), {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }, this, ., data, ., add, (]
[new, SeriesException, (, "X-value already exists.", ), ;, }, }, this, ., data, ., add, (, item, ), ;, }, if, (]
[new, SeriesException, (, "X-value already exists.", ), ;, }, }, this, ., data, ., add, (, item, ), ;, }, if, (]
[), ;, }, }, this, ., data, ., add, (, item, ), ;, }, if, (, getItemCount, (, ), >]
[), ;, }, }, this, ., data, ., add, (, item, ), ;, }, if, (, getItemCount, (, ), >]
[., data, ., add, (, item, ), ;, }, if, (, getItemCount, (, ), >, this, ., maximumItemCount, ), {]
[., data, ., add, (, item, ), ;, }, if, (, getItemCount, (, ), >, this, ., maximumItemCount, ), {]
[., data, ., add, (, item, ), ;, }, if, (, getItemCount, (, ), >, this, ., maximumItemCount, ), {]
[), ;, }, if, (, getItemCount, (, ), >, this, ., maximumItemCount, ), {, this, ., data, ., remove, (]
[(, ), >, this, ., maximumItemCount, ), {, this, ., data, ., remove, (, 0, ), ;, }, if, (]
[this, ., maximumItemCount, ), {, this, ., data, ., remove, (, 0, ), ;, }, if, (, notify, ), {]
[(, notify, ), {, fireSeriesChanged, (, ), ;, }, }, public, int, indexOf, (, Comparable, x, ), {, if, (]
[(, notify, ), {, fireSeriesChanged, (, ), ;, }, }, public, int, indexOf, (, Comparable, x, ), {, if, (]
[), ;, }, }, public, int, indexOf, (, Comparable, x, ), {, if, (, this, ., autoSort, ), {, return]
[), ;, }, }, public, int, indexOf, (, Comparable, x, ), {, if, (, this, ., autoSort, ), {, return]
[public, int, indexOf, (, Comparable, x, ), {, if, (, this, ., autoSort, ), {, return, Collections, ., binarySearch, (]
[public, int, indexOf, (, Comparable, x, ), {, if, (, this, ., autoSort, ), {, return, Collections, ., binarySearch, (]
[Comparable, x, ), {, if, (, this, ., autoSort, ), {, return, Collections, ., binarySearch, (, this, ., data, ,]
[{, if, (, this, ., autoSort, ), {, return, Collections, ., binarySearch, (, this, ., data, ,, new, ComparableObjectItem, (]
[(, this, ., autoSort, ), {, return, Collections, ., binarySearch, (, this, ., data, ,, new, ComparableObjectItem, (, x, ,]
[., data, ,, new, ComparableObjectItem, (, x, ,, null, ), ), ;, }, else, {, for, (, int, i, =]
[,, new, ComparableObjectItem, (, x, ,, null, ), ), ;, }, else, {, for, (, int, i, =, 0, ;]
[,, new, ComparableObjectItem, (, x, ,, null, ), ), ;, }, else, {, for, (, int, i, =, 0, ;]
[ComparableObjectItem, (, x, ,, null, ), ), ;, }, else, {, for, (, int, i, =, 0, ;, i, <]
[ComparableObjectItem, (, x, ,, null, ), ), ;, }, else, {, for, (, int, i, =, 0, ;, i, <]
[ComparableObjectItem, (, x, ,, null, ), ), ;, }, else, {, for, (, int, i, =, 0, ;, i, <]
[}, else, {, for, (, int, i, =, 0, ;, i, <, this, ., data, ., size, (, ), ;]
[}, else, {, for, (, int, i, =, 0, ;, i, <, this, ., data, ., size, (, ), ;]
[=, 0, ;, i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, ComparableObjectItem, item, =]
[i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem, )]
[i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem, )]
[i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem, )]
[size, (, ), ;, i, ++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem, ), this, ., data, ., get, (]
[++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem, ), this, ., data, ., get, (, i, ), ;, if, (]
[++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem, ), this, ., data, ., get, (, i, ), ;, if, (]
[++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem, ), this, ., data, ., get, (, i, ), ;, if, (]
[), this, ., data, ., get, (, i, ), ;, if, (, item, ., getComparable, (, ), ., equals, (]
[get, (, i, ), ;, if, (, item, ., getComparable, (, ), ., equals, (, x, ), ), {, return]
[if, (, item, ., getComparable, (, ), ., equals, (, x, ), ), {, return, i, ;, }, }, return]
[(, item, ., getComparable, (, ), ., equals, (, x, ), ), {, return, i, ;, }, }, return, -]
[return, -, 1, ;, }, }, protected, void, update, (, Comparable, x, ,, Object, y, ), {, int, index, =]
[1, ;, }, }, protected, void, update, (, Comparable, x, ,, Object, y, ), {, int, index, =, indexOf, (]
[void, update, (, Comparable, x, ,, Object, y, ), {, int, index, =, indexOf, (, x, ), ;, if, (]
[void, update, (, Comparable, x, ,, Object, y, ), {, int, index, =, indexOf, (, x, ), ;, if, (]
[(, Comparable, x, ,, Object, y, ), {, int, index, =, indexOf, (, x, ), ;, if, (, index, <]
[Object, y, ), {, int, index, =, indexOf, (, x, ), ;, if, (, index, <, 0, ), {, throw]
[{, int, index, =, indexOf, (, x, ), ;, if, (, index, <, 0, ), {, throw, new, SeriesException, (]
[{, int, index, =, indexOf, (, x, ), ;, if, (, index, <, 0, ), {, throw, new, SeriesException, (]
[index, =, indexOf, (, x, ), ;, if, (, index, <, 0, ), {, throw, new, SeriesException, (, "No observation for x = ", +]
[index, <, 0, ), {, throw, new, SeriesException, (, "No observation for x = ", +, x, ), ;, }, else, {, ComparableObjectItem, item, =]
[0, ), {, throw, new, SeriesException, (, "No observation for x = ", +, x, ), ;, }, else, {, ComparableObjectItem, item, =, getDataItem, (]
[throw, new, SeriesException, (, "No observation for x = ", +, x, ), ;, }, else, {, ComparableObjectItem, item, =, getDataItem, (, index, ), ;]
[throw, new, SeriesException, (, "No observation for x = ", +, x, ), ;, }, else, {, ComparableObjectItem, item, =, getDataItem, (, index, ), ;]
["No observation for x = ", +, x, ), ;, }, else, {, ComparableObjectItem, item, =, getDataItem, (, index, ), ;, item, ., setObject, (]
[), ;, }, else, {, ComparableObjectItem, item, =, getDataItem, (, index, ), ;, item, ., setObject, (, y, ), ;]
[fireSeriesChanged, (, ), ;, }, }, protected, void, updateByIndex, (, int, index, ,, Object, y, ), {, ComparableObjectItem, item, =]
[), ;, }, }, protected, void, updateByIndex, (, int, index, ,, Object, y, ), {, ComparableObjectItem, item, =, getDataItem, (]
[}, protected, void, updateByIndex, (, int, index, ,, Object, y, ), {, ComparableObjectItem, item, =, getDataItem, (, index, ), ;]
[}, protected, void, updateByIndex, (, int, index, ,, Object, y, ), {, ComparableObjectItem, item, =, getDataItem, (, index, ), ;]
[(, int, index, ,, Object, y, ), {, ComparableObjectItem, item, =, getDataItem, (, index, ), ;, item, ., setObject, (]
[,, Object, y, ), {, ComparableObjectItem, item, =, getDataItem, (, index, ), ;, item, ., setObject, (, y, ), ;]
[., setObject, (, y, ), ;, fireSeriesChanged, (, ), ;, }, protected, ComparableObjectItem, getDataItem, (, int, index, ), {, return]
[y, ), ;, fireSeriesChanged, (, ), ;, }, protected, ComparableObjectItem, getDataItem, (, int, index, ), {, return, (, ComparableObjectItem, )]
[y, ), ;, fireSeriesChanged, (, ), ;, }, protected, ComparableObjectItem, getDataItem, (, int, index, ), {, return, (, ComparableObjectItem, )]
[y, ), ;, fireSeriesChanged, (, ), ;, }, protected, ComparableObjectItem, getDataItem, (, int, index, ), {, return, (, ComparableObjectItem, )]
[;, }, protected, ComparableObjectItem, getDataItem, (, int, index, ), {, return, (, ComparableObjectItem, ), this, ., data, ., get, (]
[index, ), ;, }, protected, void, delete, (, int, start, ,, int, end, ), {, for, (, int, i, =]
[;, }, protected, void, delete, (, int, start, ,, int, end, ), {, for, (, int, i, =, start, ;]
[;, }, protected, void, delete, (, int, start, ,, int, end, ), {, for, (, int, i, =, start, ;]
[protected, void, delete, (, int, start, ,, int, end, ), {, for, (, int, i, =, start, ;, i, <=]
[delete, (, int, start, ,, int, end, ), {, for, (, int, i, =, start, ;, i, <=, end, ;]
[delete, (, int, start, ,, int, end, ), {, for, (, int, i, =, start, ;, i, <=, end, ;]
[,, int, end, ), {, for, (, int, i, =, start, ;, i, <=, end, ;, i, ++, ), {]
[,, int, end, ), {, for, (, int, i, =, start, ;, i, <=, end, ;, i, ++, ), {]
[,, int, end, ), {, for, (, int, i, =, start, ;, i, <=, end, ;, i, ++, ), {]
[(, int, i, =, start, ;, i, <=, end, ;, i, ++, ), {, this, ., data, ., remove, (]
[start, ;, i, <=, end, ;, i, ++, ), {, this, ., data, ., remove, (, start, ), ;, }]
[., remove, (, start, ), ;, }, fireSeriesChanged, (, ), ;, }, public, void, clear, (, ), {, if, (]
[., remove, (, start, ), ;, }, fireSeriesChanged, (, ), ;, }, public, void, clear, (, ), {, if, (]
[., remove, (, start, ), ;, }, fireSeriesChanged, (, ), ;, }, public, void, clear, (, ), {, if, (]
[., remove, (, start, ), ;, }, fireSeriesChanged, (, ), ;, }, public, void, clear, (, ), {, if, (]
[(, ), ;, }, public, void, clear, (, ), {, if, (, this, ., data, ., size, (, ), >]
[}, public, void, clear, (, ), {, if, (, this, ., data, ., size, (, ), >, 0, ), {]
[}, public, void, clear, (, ), {, if, (, this, ., data, ., size, (, ), >, 0, ), {]
[}, public, void, clear, (, ), {, if, (, this, ., data, ., size, (, ), >, 0, ), {]
[(, this, ., data, ., size, (, ), >, 0, ), {, this, ., data, ., clear, (, ), ;]
[(, ), ;, fireSeriesChanged, (, ), ;, }, }, protected, ComparableObjectItem, remove, (, int, index, ), {, ComparableObjectItem, result, =]
[fireSeriesChanged, (, ), ;, }, }, protected, ComparableObjectItem, remove, (, int, index, ), {, ComparableObjectItem, result, =, (, ComparableObjectItem, )]
[fireSeriesChanged, (, ), ;, }, }, protected, ComparableObjectItem, remove, (, int, index, ), {, ComparableObjectItem, result, =, (, ComparableObjectItem, )]
[fireSeriesChanged, (, ), ;, }, }, protected, ComparableObjectItem, remove, (, int, index, ), {, ComparableObjectItem, result, =, (, ComparableObjectItem, )]
[protected, ComparableObjectItem, remove, (, int, index, ), {, ComparableObjectItem, result, =, (, ComparableObjectItem, ), this, ., data, ., remove, (]
[(, int, index, ), {, ComparableObjectItem, result, =, (, ComparableObjectItem, ), this, ., data, ., remove, (, index, ), ;]
[ComparableObjectItem, result, =, (, ComparableObjectItem, ), this, ., data, ., remove, (, index, ), ;, fireSeriesChanged, (, ), ;, return]
[index, ), ;, fireSeriesChanged, (, ), ;, return, result, ;, }, public, ComparableObjectItem, remove, (, Comparable, x, ), {, return]
[;, fireSeriesChanged, (, ), ;, return, result, ;, }, public, ComparableObjectItem, remove, (, Comparable, x, ), {, return, remove, (]
[(, ), ;, return, result, ;, }, public, ComparableObjectItem, remove, (, Comparable, x, ), {, return, remove, (, indexOf, (]
[return, remove, (, indexOf, (, x, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[return, remove, (, indexOf, (, x, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[(, indexOf, (, x, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, ComparableObjectSeries, ), ), {, return]
[return, true, ;, }, if, (, !, (, obj, instanceof, ComparableObjectSeries, ), ), {, return, false, ;, }, if, (]
[true, ;, }, if, (, !, (, obj, instanceof, ComparableObjectSeries, ), ), {, return, false, ;, }, if, (, !]
[true, ;, }, if, (, !, (, obj, instanceof, ComparableObjectSeries, ), ), {, return, false, ;, }, if, (, !]
[(, !, (, obj, instanceof, ComparableObjectSeries, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (]
[ComparableObjectSeries, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return]
[;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, ComparableObjectSeries, that, =]
[(, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, ComparableObjectSeries, that, =, (, ComparableObjectSeries, )]
[equals, (, obj, ), ), {, return, false, ;, }, ComparableObjectSeries, that, =, (, ComparableObjectSeries, ), obj, ;, if, (]
[equals, (, obj, ), ), {, return, false, ;, }, ComparableObjectSeries, that, =, (, ComparableObjectSeries, ), obj, ;, if, (]
[equals, (, obj, ), ), {, return, false, ;, }, ComparableObjectSeries, that, =, (, ComparableObjectSeries, ), obj, ;, if, (]
[), {, return, false, ;, }, ComparableObjectSeries, that, =, (, ComparableObjectSeries, ), obj, ;, if, (, this, ., maximumItemCount, !=]
[), {, return, false, ;, }, ComparableObjectSeries, that, =, (, ComparableObjectSeries, ), obj, ;, if, (, this, ., maximumItemCount, !=]
[ComparableObjectSeries, that, =, (, ComparableObjectSeries, ), obj, ;, if, (, this, ., maximumItemCount, !=, that, ., maximumItemCount, ), {, return]
[), obj, ;, if, (, this, ., maximumItemCount, !=, that, ., maximumItemCount, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., maximumItemCount, !=, that, ., maximumItemCount, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., maximumItemCount, !=, that, ., maximumItemCount, ), {, return, false, ;, }, if, (]
[(, this, ., maximumItemCount, !=, that, ., maximumItemCount, ), {, return, false, ;, }, if, (, this, ., autoSort, !=]
[(, this, ., maximumItemCount, !=, that, ., maximumItemCount, ), {, return, false, ;, }, if, (, this, ., autoSort, !=]
[., maximumItemCount, ), {, return, false, ;, }, if, (, this, ., autoSort, !=, that, ., autoSort, ), {, return]
[false, ;, }, if, (, this, ., autoSort, !=, that, ., autoSort, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., autoSort, !=, that, ., autoSort, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., autoSort, !=, that, ., autoSort, ), {, return, false, ;, }, if, (]
[(, this, ., autoSort, !=, that, ., autoSort, ), {, return, false, ;, }, if, (, this, ., allowDuplicateXValues, !=]
[(, this, ., autoSort, !=, that, ., autoSort, ), {, return, false, ;, }, if, (, this, ., allowDuplicateXValues, !=]
[., autoSort, ), {, return, false, ;, }, if, (, this, ., allowDuplicateXValues, !=, that, ., allowDuplicateXValues, ), {, return]
[false, ;, }, if, (, this, ., allowDuplicateXValues, !=, that, ., allowDuplicateXValues, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., allowDuplicateXValues, !=, that, ., allowDuplicateXValues, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., allowDuplicateXValues, !=, that, ., allowDuplicateXValues, ), {, return, false, ;, }, if, (, !]
[this, ., allowDuplicateXValues, !=, that, ., allowDuplicateXValues, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[this, ., allowDuplicateXValues, !=, that, ., allowDuplicateXValues, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[that, ., allowDuplicateXValues, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,]
[that, ., allowDuplicateXValues, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data, ), ), {, return]
[!, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data, ), ), {, return, false, ;, }, return]
[), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =]
[), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =]
[;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, int, count, =]
[), {, int, result, =, super, ., hashCode, (, ), ;, int, count, =, getItemCount, (, ), ;, if, (]
[), {, int, result, =, super, ., hashCode, (, ), ;, int, count, =, getItemCount, (, ), ;, if, (]
[int, result, =, super, ., hashCode, (, ), ;, int, count, =, getItemCount, (, ), ;, if, (, count, >]
[(, ), ;, int, count, =, getItemCount, (, ), ;, if, (, count, >, 0, ), {, ComparableObjectItem, item, =]
[;, int, count, =, getItemCount, (, ), ;, if, (, count, >, 0, ), {, ComparableObjectItem, item, =, getDataItem, (]
[=, getItemCount, (, ), ;, if, (, count, >, 0, ), {, ComparableObjectItem, item, =, getDataItem, (, 0, ), ;]
[(, ), ;, if, (, count, >, 0, ), {, ComparableObjectItem, item, =, getDataItem, (, 0, ), ;, result, =]
[(, ), ;, if, (, count, >, 0, ), {, ComparableObjectItem, item, =, getDataItem, (, 0, ), ;, result, =]
[(, ), ;, if, (, count, >, 0, ), {, ComparableObjectItem, item, =, getDataItem, (, 0, ), ;, result, =]
[;, if, (, count, >, 0, ), {, ComparableObjectItem, item, =, getDataItem, (, 0, ), ;, result, =, 29, *]
[(, count, >, 0, ), {, ComparableObjectItem, item, =, getDataItem, (, 0, ), ;, result, =, 29, *, result, +]
[(, count, >, 0, ), {, ComparableObjectItem, item, =, getDataItem, (, 0, ), ;, result, =, 29, *, result, +]
[getDataItem, (, 0, ), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (]
[getDataItem, (, 0, ), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (]
[0, ), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (, count, >]
[*, result, +, item, ., hashCode, (, ), ;, }, if, (, count, >, 1, ), {, ComparableObjectItem, item, =]
[+, item, ., hashCode, (, ), ;, }, if, (, count, >, 1, ), {, ComparableObjectItem, item, =, getDataItem, (]
[+, item, ., hashCode, (, ), ;, }, if, (, count, >, 1, ), {, ComparableObjectItem, item, =, getDataItem, (]
[., hashCode, (, ), ;, }, if, (, count, >, 1, ), {, ComparableObjectItem, item, =, getDataItem, (, count, -]
[), ;, }, if, (, count, >, 1, ), {, ComparableObjectItem, item, =, getDataItem, (, count, -, 1, ), ;]
[}, if, (, count, >, 1, ), {, ComparableObjectItem, item, =, getDataItem, (, count, -, 1, ), ;, result, =]
[}, if, (, count, >, 1, ), {, ComparableObjectItem, item, =, getDataItem, (, count, -, 1, ), ;, result, =]
[}, if, (, count, >, 1, ), {, ComparableObjectItem, item, =, getDataItem, (, count, -, 1, ), ;, result, =]
[(, count, >, 1, ), {, ComparableObjectItem, item, =, getDataItem, (, count, -, 1, ), ;, result, =, 29, *]
[>, 1, ), {, ComparableObjectItem, item, =, getDataItem, (, count, -, 1, ), ;, result, =, 29, *, result, +]
[>, 1, ), {, ComparableObjectItem, item, =, getDataItem, (, count, -, 1, ), ;, result, =, 29, *, result, +]
[count, -, 1, ), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (]
[count, -, 1, ), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (]
[1, ), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (, count, >]
[*, result, +, item, ., hashCode, (, ), ;, }, if, (, count, >, 2, ), {, ComparableObjectItem, item, =]
[+, item, ., hashCode, (, ), ;, }, if, (, count, >, 2, ), {, ComparableObjectItem, item, =, getDataItem, (]
[+, item, ., hashCode, (, ), ;, }, if, (, count, >, 2, ), {, ComparableObjectItem, item, =, getDataItem, (]
[., hashCode, (, ), ;, }, if, (, count, >, 2, ), {, ComparableObjectItem, item, =, getDataItem, (, count, /]
[), ;, }, if, (, count, >, 2, ), {, ComparableObjectItem, item, =, getDataItem, (, count, /, 2, ), ;]
[}, if, (, count, >, 2, ), {, ComparableObjectItem, item, =, getDataItem, (, count, /, 2, ), ;, result, =]
[}, if, (, count, >, 2, ), {, ComparableObjectItem, item, =, getDataItem, (, count, /, 2, ), ;, result, =]
[}, if, (, count, >, 2, ), {, ComparableObjectItem, item, =, getDataItem, (, count, /, 2, ), ;, result, =]
[(, count, >, 2, ), {, ComparableObjectItem, item, =, getDataItem, (, count, /, 2, ), ;, result, =, 29, *]
[>, 2, ), {, ComparableObjectItem, item, =, getDataItem, (, count, /, 2, ), ;, result, =, 29, *, result, +]
[>, 2, ), {, ComparableObjectItem, item, =, getDataItem, (, count, /, 2, ), ;, result, =, 29, *, result, +]
[getDataItem, (, count, /, 2, ), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }]
[count, /, 2, ), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, result, =]
[count, /, 2, ), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, result, =]
[count, /, 2, ), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, result, =]
[2, ), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, result, =, 29, *]
[;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, result, =, 29, *, result, +]
[;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, result, =, 29, *, result, +]
[*, result, +, item, ., hashCode, (, ), ;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;]
[+, item, ., hashCode, (, ), ;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;, result, =]
[+, item, ., hashCode, (, ), ;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;, result, =]
[+, item, ., hashCode, (, ), ;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;, result, =]
[., hashCode, (, ), ;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;, result, =, 29, *]
[(, ), ;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;, result, =, 29, *, result, +]
[), ;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;, result, =, 29, *, result, +, (]
[), ;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;, result, =, 29, *, result, +, (]
[), ;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;, result, =, 29, *, result, +, (]
[=, 29, *, result, +, this, ., maximumItemCount, ;, result, =, 29, *, result, +, (, this, ., autoSort, ?]
[*, result, +, this, ., maximumItemCount, ;, result, =, 29, *, result, +, (, this, ., autoSort, ?, 1, :]
[this, ., maximumItemCount, ;, result, =, 29, *, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;]
[maximumItemCount, ;, result, =, 29, *, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =]
[maximumItemCount, ;, result, =, 29, *, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =]
[maximumItemCount, ;, result, =, 29, *, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =]
[result, =, 29, *, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =, 29, *]
[29, *, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =, 29, *, result, +]
[*, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (]
[*, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (]
[*, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (]
[this, ., autoSort, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (, this, ., allowDuplicateXValues, ?]
[autoSort, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (, this, ., allowDuplicateXValues, ?, 1, :]
[0, ), ;, result, =, 29, *, result, +, (, this, ., allowDuplicateXValues, ?, 1, :, 0, ), ;, return]
