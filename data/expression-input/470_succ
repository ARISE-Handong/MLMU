[;, static, final, DiagnosticType, GOOG_CLASS_SUPER_CLASS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_SUPER_CLASS_NOT_VALID", ,, "The super class must be null or a valid name reference", ), ;, static, final, DiagnosticType, GOOG_CLASS_DESCRIPTOR_NOT_VALID, =]
[., error, (, "JSC_GOOG_CLASS_TARGET_INVALID", ,, "Unsupported class definition expression.", ), ;, static, final, DiagnosticType, GOOG_CLASS_SUPER_CLASS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_SUPER_CLASS_NOT_VALID", ,, "The super class must be null or a valid name reference"]
[,, "Unsupported class definition expression.", ), ;, static, final, DiagnosticType, GOOG_CLASS_SUPER_CLASS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_SUPER_CLASS_NOT_VALID", ,, "The super class must be null or a valid name reference", ), ;, static, final]
[), ;, static, final, DiagnosticType, GOOG_CLASS_SUPER_CLASS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_SUPER_CLASS_NOT_VALID", ,, "The super class must be null or a valid name reference", ), ;, static, final, DiagnosticType, GOOG_CLASS_DESCRIPTOR_NOT_VALID]
[;, static, final, DiagnosticType, GOOG_CLASS_DESCRIPTOR_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_DESCRIPTOR_NOT_VALID", ,, "The class descriptor must be an object literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_CONSTRUCTOR_MISING, =]
[., error, (, "JSC_GOOG_CLASS_SUPER_CLASS_NOT_VALID", ,, "The super class must be null or a valid name reference", ), ;, static, final, DiagnosticType, GOOG_CLASS_DESCRIPTOR_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_DESCRIPTOR_NOT_VALID", ,, "The class descriptor must be an object literal"]
[,, "The super class must be null or a valid name reference", ), ;, static, final, DiagnosticType, GOOG_CLASS_DESCRIPTOR_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_DESCRIPTOR_NOT_VALID", ,, "The class descriptor must be an object literal", ), ;, static, final]
[), ;, static, final, DiagnosticType, GOOG_CLASS_DESCRIPTOR_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_DESCRIPTOR_NOT_VALID", ,, "The class descriptor must be an object literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_CONSTRUCTOR_MISING]
[;, static, final, DiagnosticType, GOOG_CLASS_CONSTRUCTOR_MISING, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_CONSTRUCTOR_MISING", ,, "The constructor expression is missing for the class descriptor", ), ;, static, final, DiagnosticType, GOOG_CLASS_STATICS_NOT_VALID, =]
[., error, (, "JSC_GOOG_CLASS_DESCRIPTOR_NOT_VALID", ,, "The class descriptor must be an object literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_CONSTRUCTOR_MISING, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_CONSTRUCTOR_MISING", ,, "The constructor expression is missing for the class descriptor"]
[,, "The class descriptor must be an object literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_CONSTRUCTOR_MISING, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_CONSTRUCTOR_MISING", ,, "The constructor expression is missing for the class descriptor", ), ;, static, final]
[), ;, static, final, DiagnosticType, GOOG_CLASS_CONSTRUCTOR_MISING, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_CONSTRUCTOR_MISING", ,, "The constructor expression is missing for the class descriptor", ), ;, static, final, DiagnosticType, GOOG_CLASS_STATICS_NOT_VALID]
[;, static, final, DiagnosticType, GOOG_CLASS_STATICS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_STATICS_NOT_VALID", ,, "The class statics descriptor must be an object or function literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_UNEXPECTED_PARAMS, =]
[., error, (, "JSC_GOOG_CLASS_CONSTRUCTOR_MISING", ,, "The constructor expression is missing for the class descriptor", ), ;, static, final, DiagnosticType, GOOG_CLASS_STATICS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_STATICS_NOT_VALID", ,, "The class statics descriptor must be an object or function literal"]
[,, "The constructor expression is missing for the class descriptor", ), ;, static, final, DiagnosticType, GOOG_CLASS_STATICS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_STATICS_NOT_VALID", ,, "The class statics descriptor must be an object or function literal", ), ;, static, final]
[), ;, static, final, DiagnosticType, GOOG_CLASS_STATICS_NOT_VALID, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_STATICS_NOT_VALID", ,, "The class statics descriptor must be an object or function literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_UNEXPECTED_PARAMS]
[;, static, final, DiagnosticType, GOOG_CLASS_UNEXPECTED_PARAMS, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_UNEXPECTED_PARAMS", ,, "The class definition has too many arguments.", ), ;, private, final, AbstractCompiler, compiler, ;]
[., error, (, "JSC_GOOG_CLASS_STATICS_NOT_VALID", ,, "The class statics descriptor must be an object or function literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_UNEXPECTED_PARAMS, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_UNEXPECTED_PARAMS", ,, "The class definition has too many arguments."]
[,, "The class statics descriptor must be an object or function literal", ), ;, static, final, DiagnosticType, GOOG_CLASS_UNEXPECTED_PARAMS, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_UNEXPECTED_PARAMS", ,, "The class definition has too many arguments.", ), ;, private, final]
[), ;, static, final, DiagnosticType, GOOG_CLASS_UNEXPECTED_PARAMS, =, DiagnosticType, ., error, (, "JSC_GOOG_CLASS_UNEXPECTED_PARAMS", ,, "The class definition has too many arguments.", ), ;, private, final, AbstractCompiler, compiler]
[;, private, final, AbstractCompiler, compiler, ;, public, ClosureRewriteClass, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, }]
[., error, (, "JSC_GOOG_CLASS_UNEXPECTED_PARAMS", ,, "The class definition has too many arguments.", ), ;, private, final, AbstractCompiler, compiler, ;, public, ClosureRewriteClass, (, AbstractCompiler, compiler, ), {]
[,, "The class definition has too many arguments.", ), ;, private, final, AbstractCompiler, compiler, ;, public, ClosureRewriteClass, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
[), ;, private, final, AbstractCompiler, compiler, ;, public, ClosureRewriteClass, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;]
[=, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse]
[., compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler]
[;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, this, ., compiler, ., process]
[., traverse, (, compiler, ,, root, ,, this, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,]
[,, root, ,, this, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {]
[,, this, ), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, this, .]
[), ;, }, @, Override, public, void, hotSwapScript, (, Node, scriptRoot, ,, Node, originalRoot, ), {, this, ., compiler, .]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[., process, (, this, ), ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node]
[., compiler, ., process, (, this, ), ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n]
[), ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if]
[), {, if, (, !, validateUsage, (, n, ), ), {, compiler, ., report, (, JSError, ., make, (, n]
[&&, isGoogDefineClass, (, n, ), ), {, if, (, !, validateUsage, (, n, ), ), {, compiler, ., report, (]
[., isCall, (, ), &&, isGoogDefineClass, (, n, ), ), {, if, (, !, validateUsage, (, n, ), ), {]
[), {, if, (, !, validateUsage, (, n, ), ), {, compiler, ., report, (, JSError, ., make, (, n]
[), ), {, if, (, !, validateUsage, (, n, ), ), {, compiler, ., report, (, JSError, ., make, (]
[), {, compiler, ., report, (, JSError, ., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, }, maybeRewriteClassDefinition, (]
[), {, compiler, ., report, (, JSError, ., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, }, maybeRewriteClassDefinition, (]
[), ), {, compiler, ., report, (, JSError, ., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, }, maybeRewriteClassDefinition]
[;, }, }, maybeRewriteClassDefinition, (, n, ), ;, }, private, boolean, validateUsage, (, Node, n, ), {, Node, parent, =]
[., report, (, JSError, ., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, }, maybeRewriteClassDefinition, (, n, ), ;]
[), ;, }, }, maybeRewriteClassDefinition, (, n, ), ;, }, private, boolean, validateUsage, (, Node, n, ), {, Node, parent]
[., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, }, maybeRewriteClassDefinition, (, n, ), ;, }, private, boolean, validateUsage]
[,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, }, maybeRewriteClassDefinition, (, n, ), ;, }, private, boolean, validateUsage, (, Node, n, )]
[), ), ;, }, }, maybeRewriteClassDefinition, (, n, ), ;, }, private, boolean, validateUsage, (, Node, n, ), {, Node]
[;, }, private, boolean, validateUsage, (, Node, n, ), {, Node, parent, =, n, ., getParent, (, ), ;, switch]
[), ;, }, private, boolean, validateUsage, (, Node, n, ), {, Node, parent, =, n, ., getParent, (, ), ;]
[;, switch, (, parent, ., getType, (, ), ), {, case, Token, ., NAME, :, return, true, ;, case, Token]
[., getParent, (, ), ;, switch, (, parent, ., getType, (, ), ), {, case, Token, ., NAME, :, return]
[), {, case, Token, ., NAME, :, return, true, ;, case, Token, ., ASSIGN, :, return, n, ==, parent, .]
[., getType, (, ), ), {, case, Token, ., NAME, :, return, true, ;, case, Token, ., ASSIGN, :, return]
[:, return, true, ;, case, Token, ., ASSIGN, :, return, n, ==, parent, ., getLastChild, (, ), &&, parent, .]
[., NAME, :, return, true, ;, case, Token, ., ASSIGN, :, return, n, ==, parent, ., getLastChild, (, ), &&]
[;, case, Token, ., ASSIGN, :, return, n, ==, parent, ., getLastChild, (, ), &&, parent, ., getParent, (, )]
[:, return, n, ==, parent, ., getLastChild, (, ), &&, parent, ., getParent, (, ), ., isExprResult, (, ), ;]
[., ASSIGN, :, return, n, ==, parent, ., getLastChild, (, ), &&, parent, ., getParent, (, ), ., isExprResult, (]
[;, case, Token, ., STRING_KEY, :, return, isContainedInGoogDefineClass, (, parent, ), ;, }, return, false, ;, }, private, boolean, isContainedInGoogDefineClass]
[&&, parent, ., getParent, (, ), ., isExprResult, (, ), ;, case, Token, ., STRING_KEY, :, return, isContainedInGoogDefineClass, (, parent]
[==, parent, ., getLastChild, (, ), &&, parent, ., getParent, (, ), ., isExprResult, (, ), ;, case, Token, .]
[&&, parent, ., getParent, (, ), ., isExprResult, (, ), ;, case, Token, ., STRING_KEY, :, return, isContainedInGoogDefineClass, (, parent]
[., getLastChild, (, ), &&, parent, ., getParent, (, ), ., isExprResult, (, ), ;, case, Token, ., STRING_KEY, :]
[;, case, Token, ., STRING_KEY, :, return, isContainedInGoogDefineClass, (, parent, ), ;, }, return, false, ;, }, private, boolean, isContainedInGoogDefineClass]
[., isExprResult, (, ), ;, case, Token, ., STRING_KEY, :, return, isContainedInGoogDefineClass, (, parent, ), ;, }, return, false, ;]
[., getParent, (, ), ., isExprResult, (, ), ;, case, Token, ., STRING_KEY, :, return, isContainedInGoogDefineClass, (, parent, ), ;]
[:, return, isContainedInGoogDefineClass, (, parent, ), ;, }, return, false, ;, }, private, boolean, isContainedInGoogDefineClass, (, Node, n, ), {]
[., STRING_KEY, :, return, isContainedInGoogDefineClass, (, parent, ), ;, }, return, false, ;, }, private, boolean, isContainedInGoogDefineClass, (, Node, n]
[;, }, return, false, ;, }, private, boolean, isContainedInGoogDefineClass, (, Node, n, ), {, while, (, n, !=, null, )]
[), ;, }, return, false, ;, }, private, boolean, isContainedInGoogDefineClass, (, Node, n, ), {, while, (, n, !=, null]
[;, }, private, boolean, isContainedInGoogDefineClass, (, Node, n, ), {, while, (, n, !=, null, ), {, n, =, n]
[), {, n, =, n, ., getParent, (, ), ;, if, (, n, ., isCall, (, ), ), {, if]
[!=, null, ), {, n, =, n, ., getParent, (, ), ;, if, (, n, ., isCall, (, ), )]
[), {, n, =, n, ., getParent, (, ), ;, if, (, n, ., isCall, (, ), ), {, if]
[=, n, ., getParent, (, ), ;, if, (, n, ., isCall, (, ), ), {, if, (, isGoogDefineClass, (]
[;, if, (, n, ., isCall, (, ), ), {, if, (, isGoogDefineClass, (, n, ), ), {, return, true]
[., getParent, (, ), ;, if, (, n, ., isCall, (, ), ), {, if, (, isGoogDefineClass, (, n, )]
[), {, if, (, isGoogDefineClass, (, n, ), ), {, return, true, ;, }, }, else, if, (, !, n]
[., isCall, (, ), ), {, if, (, isGoogDefineClass, (, n, ), ), {, return, true, ;, }, }, else]
[), {, return, true, ;, }, }, else, if, (, !, n, ., isObjectLit, (, ), &&, !, n, .]
[), ), {, return, true, ;, }, }, else, if, (, !, n, ., isObjectLit, (, ), &&, !, n]
[;, }, }, else, if, (, !, n, ., isObjectLit, (, ), &&, !, n, ., isStringKey, (, ), )]
[), {, break, ;, }, }, return, false, ;, }, private, void, maybeRewriteClassDefinition, (, Node, n, ), {, if, (]
[&&, !, n, ., isStringKey, (, ), ), {, break, ;, }, }, return, false, ;, }, private, void, maybeRewriteClassDefinition]
[&&, !, n, ., isStringKey, (, ), ), {, break, ;, }, }, return, false, ;, }, private, void, maybeRewriteClassDefinition]
[., isObjectLit, (, ), &&, !, n, ., isStringKey, (, ), ), {, break, ;, }, }, return, false, ;]
[), {, break, ;, }, }, return, false, ;, }, private, void, maybeRewriteClassDefinition, (, Node, n, ), {, if, (]
[), {, break, ;, }, }, return, false, ;, }, private, void, maybeRewriteClassDefinition, (, Node, n, ), {, if, (]
[., isStringKey, (, ), ), {, break, ;, }, }, return, false, ;, }, private, void, maybeRewriteClassDefinition, (, Node, n]
[;, }, private, void, maybeRewriteClassDefinition, (, Node, n, ), {, if, (, n, ., isVar, (, ), ), {, Node]
[), {, Node, target, =, n, ., getFirstChild, (, ), ;, Node, value, =, target, ., getFirstChild, (, ), ;]
[., isVar, (, ), ), {, Node, target, =, n, ., getFirstChild, (, ), ;, Node, value, =, target, .]
[;, Node, value, =, target, ., getFirstChild, (, ), ;, maybeRewriteClassDefinition, (, n, ,, target, ,, value, ), ;, }]
[., getFirstChild, (, ), ;, Node, value, =, target, ., getFirstChild, (, ), ;, maybeRewriteClassDefinition, (, n, ,, target, ,]
[;, maybeRewriteClassDefinition, (, n, ,, target, ,, value, ), ;, }, else, if, (, NodeUtil, ., isExprAssign, (, n, )]
[., getFirstChild, (, ), ;, maybeRewriteClassDefinition, (, n, ,, target, ,, value, ), ;, }, else, if, (, NodeUtil, .]
[;, }, else, if, (, NodeUtil, ., isExprAssign, (, n, ), ), {, Node, assign, =, n, ., getFirstChild, (]
[,, target, ,, value, ), ;, }, else, if, (, NodeUtil, ., isExprAssign, (, n, ), ), {, Node, assign]
[,, value, ), ;, }, else, if, (, NodeUtil, ., isExprAssign, (, n, ), ), {, Node, assign, =, n]
[), ;, }, else, if, (, NodeUtil, ., isExprAssign, (, n, ), ), {, Node, assign, =, n, ., getFirstChild]
[), {, Node, assign, =, n, ., getFirstChild, (, ), ;, Node, target, =, assign, ., getFirstChild, (, ), ;]
[., isExprAssign, (, n, ), ), {, Node, assign, =, n, ., getFirstChild, (, ), ;, Node, target, =, assign]
[), ), {, Node, assign, =, n, ., getFirstChild, (, ), ;, Node, target, =, assign, ., getFirstChild, (, )]
[;, Node, target, =, assign, ., getFirstChild, (, ), ;, Node, value, =, assign, ., getLastChild, (, ), ;, maybeRewriteClassDefinition]
[., getFirstChild, (, ), ;, Node, target, =, assign, ., getFirstChild, (, ), ;, Node, value, =, assign, ., getLastChild]
[;, Node, value, =, assign, ., getLastChild, (, ), ;, maybeRewriteClassDefinition, (, n, ,, target, ,, value, ), ;, }]
[., getFirstChild, (, ), ;, Node, value, =, assign, ., getLastChild, (, ), ;, maybeRewriteClassDefinition, (, n, ,, target, ,]
[;, maybeRewriteClassDefinition, (, n, ,, target, ,, value, ), ;, }, }, private, void, maybeRewriteClassDefinition, (, Node, n, ,, Node]
[., getLastChild, (, ), ;, maybeRewriteClassDefinition, (, n, ,, target, ,, value, ), ;, }, }, private, void, maybeRewriteClassDefinition, (]
[;, }, }, private, void, maybeRewriteClassDefinition, (, Node, n, ,, Node, target, ,, Node, value, ), {, if, (, isGoogDefineClass]
[,, target, ,, value, ), ;, }, }, private, void, maybeRewriteClassDefinition, (, Node, n, ,, Node, target, ,, Node, value]
[,, value, ), ;, }, }, private, void, maybeRewriteClassDefinition, (, Node, n, ,, Node, target, ,, Node, value, ), {]
[), ;, }, }, private, void, maybeRewriteClassDefinition, (, Node, n, ,, Node, target, ,, Node, value, ), {, if, (]
[), {, if, (, !, target, ., isQualifiedName, (, ), ), {, compiler, ., report, (, JSError, ., make, (]
[), ), {, if, (, !, target, ., isQualifiedName, (, ), ), {, compiler, ., report, (, JSError, ., make]
[), {, compiler, ., report, (, JSError, ., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, ClassDefinition, def, =]
[), {, compiler, ., report, (, JSError, ., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, ClassDefinition, def, =]
[., isQualifiedName, (, ), ), {, compiler, ., report, (, JSError, ., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;]
[;, }, ClassDefinition, def, =, extractClassDefinition, (, target, ,, value, ), ;, if, (, def, !=, null, ), {, value]
[., report, (, JSError, ., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, ClassDefinition, def, =, extractClassDefinition, (, target]
[), ;, }, ClassDefinition, def, =, extractClassDefinition, (, target, ,, value, ), ;, if, (, def, !=, null, ), {]
[., make, (, n, ,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, ClassDefinition, def, =, extractClassDefinition, (, target, ,, value, ), ;]
[,, GOOG_CLASS_TARGET_INVALID, ), ), ;, }, ClassDefinition, def, =, extractClassDefinition, (, target, ,, value, ), ;, if, (, def, !=]
[), ), ;, }, ClassDefinition, def, =, extractClassDefinition, (, target, ,, value, ), ;, if, (, def, !=, null, )]
[;, if, (, def, !=, null, ), {, value, ., detachFromParent, (, ), ;, target, ., detachFromParent, (, ), ;]
[,, value, ), ;, if, (, def, !=, null, ), {, value, ., detachFromParent, (, ), ;, target, ., detachFromParent]
[), ;, if, (, def, !=, null, ), {, value, ., detachFromParent, (, ), ;, target, ., detachFromParent, (, )]
[), {, value, ., detachFromParent, (, ), ;, target, ., detachFromParent, (, ), ;, rewriteGoogDefineClass, (, n, ,, def, )]
[!=, null, ), {, value, ., detachFromParent, (, ), ;, target, ., detachFromParent, (, ), ;, rewriteGoogDefineClass, (, n, ,]
[), {, value, ., detachFromParent, (, ), ;, target, ., detachFromParent, (, ), ;, rewriteGoogDefineClass, (, n, ,, def, )]
[;, target, ., detachFromParent, (, ), ;, rewriteGoogDefineClass, (, n, ,, def, ), ;, }, }, }, private, static, class]
[., detachFromParent, (, ), ;, target, ., detachFromParent, (, ), ;, rewriteGoogDefineClass, (, n, ,, def, ), ;, }, }]
[;, rewriteGoogDefineClass, (, n, ,, def, ), ;, }, }, }, private, static, class, MemberDefinition, {, final, JSDocInfo, info, ;]
[., detachFromParent, (, ), ;, rewriteGoogDefineClass, (, n, ,, def, ), ;, }, }, }, private, static, class, MemberDefinition, {]
[;, }, }, }, private, static, class, MemberDefinition, {, final, JSDocInfo, info, ;, final, Node, name, ;, final, Node, value]
[,, def, ), ;, }, }, }, private, static, class, MemberDefinition, {, final, JSDocInfo, info, ;, final, Node, name, ;]
[), ;, }, }, }, private, static, class, MemberDefinition, {, final, JSDocInfo, info, ;, final, Node, name, ;, final, Node]
[=, info, ;, this, ., name, =, name, ;, this, ., value, =, value, ;, }, }, private, final, class]
[., info, =, info, ;, this, ., name, =, name, ;, this, ., value, =, value, ;, }, }, private]
[;, this, ., name, =, name, ;, this, ., value, =, value, ;, }, }, private, final, class, ClassDefinition, {]
[=, name, ;, this, ., value, =, value, ;, }, }, private, final, class, ClassDefinition, {, final, Node, name, ;]
[., name, =, name, ;, this, ., value, =, value, ;, }, }, private, final, class, ClassDefinition, {, final, Node]
[;, this, ., value, =, value, ;, }, }, private, final, class, ClassDefinition, {, final, Node, name, ;, final, Node]
[=, value, ;, }, }, private, final, class, ClassDefinition, {, final, Node, name, ;, final, Node, superClass, ;, final, MemberDefinition]
[., value, =, value, ;, }, }, private, final, class, ClassDefinition, {, final, Node, name, ;, final, Node, superClass, ;]
[;, }, }, private, final, class, ClassDefinition, {, final, Node, name, ;, final, Node, superClass, ;, final, MemberDefinition, constructor, ;]
[=, name, ;, this, ., superClass, =, superClass, ;, this, ., constructor, =, constructor, ;, this, ., staticProps, =, staticProps]
[., name, =, name, ;, this, ., superClass, =, superClass, ;, this, ., constructor, =, constructor, ;, this, ., staticProps]
[;, this, ., superClass, =, superClass, ;, this, ., constructor, =, constructor, ;, this, ., staticProps, =, staticProps, ;, this]
[=, superClass, ;, this, ., constructor, =, constructor, ;, this, ., staticProps, =, staticProps, ;, this, ., props, =, props]
[., superClass, =, superClass, ;, this, ., constructor, =, constructor, ;, this, ., staticProps, =, staticProps, ;, this, ., props]
[;, this, ., constructor, =, constructor, ;, this, ., staticProps, =, staticProps, ;, this, ., props, =, props, ;, this]
[=, constructor, ;, this, ., staticProps, =, staticProps, ;, this, ., props, =, props, ;, this, ., classModifier, =, classModifier]
[., constructor, =, constructor, ;, this, ., staticProps, =, staticProps, ;, this, ., props, =, props, ;, this, ., classModifier]
[;, this, ., staticProps, =, staticProps, ;, this, ., props, =, props, ;, this, ., classModifier, =, classModifier, ;, }]
[=, staticProps, ;, this, ., props, =, props, ;, this, ., classModifier, =, classModifier, ;, }, }, private, ClassDefinition, extractClassDefinition]
[., staticProps, =, staticProps, ;, this, ., props, =, props, ;, this, ., classModifier, =, classModifier, ;, }, }, private]
[;, this, ., props, =, props, ;, this, ., classModifier, =, classModifier, ;, }, }, private, ClassDefinition, extractClassDefinition, (, Node]
[=, props, ;, this, ., classModifier, =, classModifier, ;, }, }, private, ClassDefinition, extractClassDefinition, (, Node, targetName, ,, Node, callNode]
[., props, =, props, ;, this, ., classModifier, =, classModifier, ;, }, }, private, ClassDefinition, extractClassDefinition, (, Node, targetName, ,]
[;, this, ., classModifier, =, classModifier, ;, }, }, private, ClassDefinition, extractClassDefinition, (, Node, targetName, ,, Node, callNode, ), {]
[=, classModifier, ;, }, }, private, ClassDefinition, extractClassDefinition, (, Node, targetName, ,, Node, callNode, ), {, Node, superClass, =, NodeUtil]
[., classModifier, =, classModifier, ;, }, }, private, ClassDefinition, extractClassDefinition, (, Node, targetName, ,, Node, callNode, ), {, Node, superClass]
[;, }, }, private, ClassDefinition, extractClassDefinition, (, Node, targetName, ,, Node, callNode, ), {, Node, superClass, =, NodeUtil, ., getArgumentForCallOrNew]
[;, if, (, superClass, ==, null, ||, (, !, superClass, ., isNull, (, ), &&, !, superClass, ., isQualifiedName, (]
[., getArgumentForCallOrNew, (, callNode, ,, 0, ), ;, if, (, superClass, ==, null, ||, (, !, superClass, ., isNull, (]
[,, 0, ), ;, if, (, superClass, ==, null, ||, (, !, superClass, ., isNull, (, ), &&, !, superClass]
[), ;, if, (, superClass, ==, null, ||, (, !, superClass, ., isNull, (, ), &&, !, superClass, ., isQualifiedName]
[), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return, null, ;, }]
[||, (, !, superClass, ., isNull, (, ), &&, !, superClass, ., isQualifiedName, (, ), ), ), {, compiler, .]
[==, null, ||, (, !, superClass, ., isNull, (, ), &&, !, superClass, ., isQualifiedName, (, ), ), ), {]
[||, (, !, superClass, ., isNull, (, ), &&, !, superClass, ., isQualifiedName, (, ), ), ), {, compiler, .]
[), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return, null, ;, }]
[), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return, null, ;]
[&&, !, superClass, ., isQualifiedName, (, ), ), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,]
[&&, !, superClass, ., isQualifiedName, (, ), ), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,]
[., isNull, (, ), &&, !, superClass, ., isQualifiedName, (, ), ), ), {, compiler, ., report, (, JSError, .]
[), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return, null, ;]
[), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return, null, ;]
[., isQualifiedName, (, ), ), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), )]
[;, return, null, ;, }, if, (, NodeUtil, ., isNullOrUndefined, (, superClass, ), ), {, superClass, =, null, ;, }]
[., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return, null, ;, }, if, (, NodeUtil]
[), ;, return, null, ;, }, if, (, NodeUtil, ., isNullOrUndefined, (, superClass, ), ), {, superClass, =, null, ;]
[., make, (, callNode, ,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return, null, ;, }, if, (, NodeUtil, ., isNullOrUndefined, (, superClass]
[,, GOOG_CLASS_SUPER_CLASS_NOT_VALID, ), ), ;, return, null, ;, }, if, (, NodeUtil, ., isNullOrUndefined, (, superClass, ), ), {, superClass]
[), ), ;, return, null, ;, }, if, (, NodeUtil, ., isNullOrUndefined, (, superClass, ), ), {, superClass, =, null]
[;, }, if, (, NodeUtil, ., isNullOrUndefined, (, superClass, ), ), {, superClass, =, null, ;, }, Node, description, =]
[), {, superClass, =, null, ;, }, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 1, ), ;, if]
[., isNullOrUndefined, (, superClass, ), ), {, superClass, =, null, ;, }, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode]
[), ), {, superClass, =, null, ;, }, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 1, ), ;]
[=, null, ;, }, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 1, ), ;, if, (, description, ==]
[;, }, Node, description, =, NodeUtil, ., getArgumentForCallOrNew, (, callNode, ,, 1, ), ;, if, (, description, ==, null, ||]
[;, if, (, description, ==, null, ||, !, description, ., isObjectLit, (, ), ||, !, validateObjLit, (, description, ), )]
[., getArgumentForCallOrNew, (, callNode, ,, 1, ), ;, if, (, description, ==, null, ||, !, description, ., isObjectLit, (, )]
[,, 1, ), ;, if, (, description, ==, null, ||, !, description, ., isObjectLit, (, ), ||, !, validateObjLit, (]
[), ;, if, (, description, ==, null, ||, !, description, ., isObjectLit, (, ), ||, !, validateObjLit, (, description, )]
[), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, ), ), ;, return, null, ;, }]
[||, !, validateObjLit, (, description, ), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, )]
[||, !, description, ., isObjectLit, (, ), ||, !, validateObjLit, (, description, ), ), {, compiler, ., report, (, JSError]
[==, null, ||, !, description, ., isObjectLit, (, ), ||, !, validateObjLit, (, description, ), ), {, compiler, ., report]
[||, !, description, ., isObjectLit, (, ), ||, !, validateObjLit, (, description, ), ), {, compiler, ., report, (, JSError]
[||, !, validateObjLit, (, description, ), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, )]
[||, !, validateObjLit, (, description, ), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, )]
[., isObjectLit, (, ), ||, !, validateObjLit, (, description, ), ), {, compiler, ., report, (, JSError, ., make, (]
[), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, ), ), ;, return, null, ;, }]
[), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, ), ), ;, return, null, ;, }]
[), ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, ), ), ;, return, null, ;]
[;, return, null, ;, }, int, paramCount, =, callNode, ., getChildCount, (, ), -, 1, ;, if, (, paramCount, >]
[., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, ), ), ;, return, null, ;, }, int, paramCount, =]
[), ;, return, null, ;, }, int, paramCount, =, callNode, ., getChildCount, (, ), -, 1, ;, if, (, paramCount]
[., make, (, callNode, ,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, ), ), ;, return, null, ;, }, int, paramCount, =, callNode, ., getChildCount, (]
[,, GOOG_CLASS_DESCRIPTOR_NOT_VALID, ), ), ;, return, null, ;, }, int, paramCount, =, callNode, ., getChildCount, (, ), -, 1, ;]
[), ), ;, return, null, ;, }, int, paramCount, =, callNode, ., getChildCount, (, ), -, 1, ;, if, (]
[;, }, int, paramCount, =, callNode, ., getChildCount, (, ), -, 1, ;, if, (, paramCount, >, 2, ), {]
[;, if, (, paramCount, >, 2, ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_UNEXPECTED_PARAMS, )]
[-, 1, ;, if, (, paramCount, >, 2, ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,]
[., getChildCount, (, ), -, 1, ;, if, (, paramCount, >, 2, ), {, compiler, ., report, (, JSError, .]
[;, if, (, paramCount, >, 2, ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_UNEXPECTED_PARAMS, )]
[), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_UNEXPECTED_PARAMS, ), ), ;, return, null, ;, }]
[>, 2, ), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_UNEXPECTED_PARAMS, ), ), ;, return, null]
[), {, compiler, ., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_UNEXPECTED_PARAMS, ), ), ;, return, null, ;, }]
[;, return, null, ;, }, Node, constructor, =, extractProperty, (, description, ,, "constructor", ), ;, if, (, constructor, ==, null]
[., report, (, JSError, ., make, (, callNode, ,, GOOG_CLASS_UNEXPECTED_PARAMS, ), ), ;, return, null, ;, }, Node, constructor, =]
[), ;, return, null, ;, }, Node, constructor, =, extractProperty, (, description, ,, "constructor", ), ;, if, (, constructor, ==]
[., make, (, callNode, ,, GOOG_CLASS_UNEXPECTED_PARAMS, ), ), ;, return, null, ;, }, Node, constructor, =, extractProperty, (, description, ,]
[,, GOOG_CLASS_UNEXPECTED_PARAMS, ), ), ;, return, null, ;, }, Node, constructor, =, extractProperty, (, description, ,, "constructor", ), ;, if]
[), ), ;, return, null, ;, }, Node, constructor, =, extractProperty, (, description, ,, "constructor", ), ;, if, (, constructor]
[;, }, Node, constructor, =, extractProperty, (, description, ,, "constructor", ), ;, if, (, constructor, ==, null, ), {, compiler]
[;, if, (, constructor, ==, null, ), {, compiler, ., report, (, JSError, ., make, (, description, ,, GOOG_CLASS_CONSTRUCTOR_MISING, )]
[,, "constructor", ), ;, if, (, constructor, ==, null, ), {, compiler, ., report, (, JSError, ., make, (, description]
[), ;, if, (, constructor, ==, null, ), {, compiler, ., report, (, JSError, ., make, (, description, ,, GOOG_CLASS_CONSTRUCTOR_MISING]
[), {, compiler, ., report, (, JSError, ., make, (, description, ,, GOOG_CLASS_CONSTRUCTOR_MISING, ), ), ;, return, null, ;, }]
[==, null, ), {, compiler, ., report, (, JSError, ., make, (, description, ,, GOOG_CLASS_CONSTRUCTOR_MISING, ), ), ;, return, null]
[), {, compiler, ., report, (, JSError, ., make, (, description, ,, GOOG_CLASS_CONSTRUCTOR_MISING, ), ), ;, return, null, ;, }]
[;, return, null, ;, }, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, constructor, ), ;, Node, classModifier, =, null, ;]
[., report, (, JSError, ., make, (, description, ,, GOOG_CLASS_CONSTRUCTOR_MISING, ), ), ;, return, null, ;, }, JSDocInfo, info, =]
[), ;, return, null, ;, }, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, constructor, ), ;, Node, classModifier, =, null]
[., make, (, description, ,, GOOG_CLASS_CONSTRUCTOR_MISING, ), ), ;, return, null, ;, }, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (]
[,, GOOG_CLASS_CONSTRUCTOR_MISING, ), ), ;, return, null, ;, }, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, constructor, ), ;, Node]
[), ), ;, return, null, ;, }, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, constructor, ), ;, Node, classModifier, =]
[;, }, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, constructor, ), ;, Node, classModifier, =, null, ;, Node, statics, =]
[;, Node, classModifier, =, null, ;, Node, statics, =, null, ;, Node, staticsProp, =, extractProperty, (, description, ,, "statics", )]
[., getBestJSDocInfo, (, constructor, ), ;, Node, classModifier, =, null, ;, Node, statics, =, null, ;, Node, staticsProp, =, extractProperty]
[), ;, Node, classModifier, =, null, ;, Node, statics, =, null, ;, Node, staticsProp, =, extractProperty, (, description, ,, "statics"]
[;, Node, statics, =, null, ;, Node, staticsProp, =, extractProperty, (, description, ,, "statics", ), ;, if, (, staticsProp, !=]
[;, Node, staticsProp, =, extractProperty, (, description, ,, "statics", ), ;, if, (, staticsProp, !=, null, ), {, if, (]
[;, if, (, staticsProp, !=, null, ), {, if, (, staticsProp, ., isObjectLit, (, ), &&, validateObjLit, (, staticsProp, )]
[,, "statics", ), ;, if, (, staticsProp, !=, null, ), {, if, (, staticsProp, ., isObjectLit, (, ), &&, validateObjLit]
[), ;, if, (, staticsProp, !=, null, ), {, if, (, staticsProp, ., isObjectLit, (, ), &&, validateObjLit, (, staticsProp]
[), {, if, (, staticsProp, ., isObjectLit, (, ), &&, validateObjLit, (, staticsProp, ), ), {, statics, =, staticsProp, ;]
[!=, null, ), {, if, (, staticsProp, ., isObjectLit, (, ), &&, validateObjLit, (, staticsProp, ), ), {, statics, =]
[), {, if, (, staticsProp, ., isObjectLit, (, ), &&, validateObjLit, (, staticsProp, ), ), {, statics, =, staticsProp, ;]
[), {, statics, =, staticsProp, ;, }, else, if, (, staticsProp, ., isFunction, (, ), ), {, classModifier, =, staticsProp]
[&&, validateObjLit, (, staticsProp, ), ), {, statics, =, staticsProp, ;, }, else, if, (, staticsProp, ., isFunction, (, )]
[., isObjectLit, (, ), &&, validateObjLit, (, staticsProp, ), ), {, statics, =, staticsProp, ;, }, else, if, (, staticsProp]
[), {, statics, =, staticsProp, ;, }, else, if, (, staticsProp, ., isFunction, (, ), ), {, classModifier, =, staticsProp]
[), ), {, statics, =, staticsProp, ;, }, else, if, (, staticsProp, ., isFunction, (, ), ), {, classModifier, =]
[=, staticsProp, ;, }, else, if, (, staticsProp, ., isFunction, (, ), ), {, classModifier, =, staticsProp, ;, }, else]
[;, }, else, if, (, staticsProp, ., isFunction, (, ), ), {, classModifier, =, staticsProp, ;, }, else, {, compiler]
[), {, classModifier, =, staticsProp, ;, }, else, {, compiler, ., report, (, JSError, ., make, (, staticsProp, ,, GOOG_CLASS_STATICS_NOT_VALID]
[., isFunction, (, ), ), {, classModifier, =, staticsProp, ;, }, else, {, compiler, ., report, (, JSError, ., make]
[=, staticsProp, ;, }, else, {, compiler, ., report, (, JSError, ., make, (, staticsProp, ,, GOOG_CLASS_STATICS_NOT_VALID, ), ), ;]
[;, }, else, {, compiler, ., report, (, JSError, ., make, (, staticsProp, ,, GOOG_CLASS_STATICS_NOT_VALID, ), ), ;, return, null]
[;, return, null, ;, }, }, if, (, statics, ==, null, ), {, statics, =, IR, ., objectlit, (, )]
[., report, (, JSError, ., make, (, staticsProp, ,, GOOG_CLASS_STATICS_NOT_VALID, ), ), ;, return, null, ;, }, }, if, (]
[), ;, return, null, ;, }, }, if, (, statics, ==, null, ), {, statics, =, IR, ., objectlit, (]
[., make, (, staticsProp, ,, GOOG_CLASS_STATICS_NOT_VALID, ), ), ;, return, null, ;, }, }, if, (, statics, ==, null, )]
[,, GOOG_CLASS_STATICS_NOT_VALID, ), ), ;, return, null, ;, }, }, if, (, statics, ==, null, ), {, statics, =, IR]
[), ), ;, return, null, ;, }, }, if, (, statics, ==, null, ), {, statics, =, IR, ., objectlit]
[;, }, }, if, (, statics, ==, null, ), {, statics, =, IR, ., objectlit, (, ), ;, }, maybeDetach]
[), {, statics, =, IR, ., objectlit, (, ), ;, }, maybeDetach, (, constructor, ., getParent, (, ), ), ;]
[==, null, ), {, statics, =, IR, ., objectlit, (, ), ;, }, maybeDetach, (, constructor, ., getParent, (, )]
[), {, statics, =, IR, ., objectlit, (, ), ;, }, maybeDetach, (, constructor, ., getParent, (, ), ), ;]
[=, IR, ., objectlit, (, ), ;, }, maybeDetach, (, constructor, ., getParent, (, ), ), ;, maybeDetach, (, statics]
[;, }, maybeDetach, (, constructor, ., getParent, (, ), ), ;, maybeDetach, (, statics, ., getParent, (, ), ), ;]
[., objectlit, (, ), ;, }, maybeDetach, (, constructor, ., getParent, (, ), ), ;, maybeDetach, (, statics, ., getParent]
[;, maybeDetach, (, statics, ., getParent, (, ), ), ;, if, (, classModifier, !=, null, ), {, maybeDetach, (, classModifier]
[), ;, maybeDetach, (, statics, ., getParent, (, ), ), ;, if, (, classModifier, !=, null, ), {, maybeDetach, (]
[., getParent, (, ), ), ;, maybeDetach, (, statics, ., getParent, (, ), ), ;, if, (, classModifier, !=, null]
[;, if, (, classModifier, !=, null, ), {, maybeDetach, (, classModifier, ., getParent, (, ), ), ;, }, ClassDefinition, def]
[), ;, if, (, classModifier, !=, null, ), {, maybeDetach, (, classModifier, ., getParent, (, ), ), ;, }, ClassDefinition]
[., getParent, (, ), ), ;, if, (, classModifier, !=, null, ), {, maybeDetach, (, classModifier, ., getParent, (, )]
[), {, maybeDetach, (, classModifier, ., getParent, (, ), ), ;, }, ClassDefinition, def, =, new, ClassDefinition, (, targetName, ,]
[!=, null, ), {, maybeDetach, (, classModifier, ., getParent, (, ), ), ;, }, ClassDefinition, def, =, new, ClassDefinition, (]
[), {, maybeDetach, (, classModifier, ., getParent, (, ), ), ;, }, ClassDefinition, def, =, new, ClassDefinition, (, targetName, ,]
[;, }, ClassDefinition, def, =, new, ClassDefinition, (, targetName, ,, maybeDetach, (, superClass, ), ,, new, MemberDefinition, (, info, ,]
[), ;, }, ClassDefinition, def, =, new, ClassDefinition, (, targetName, ,, maybeDetach, (, superClass, ), ,, new, MemberDefinition, (, info]
[., getParent, (, ), ), ;, }, ClassDefinition, def, =, new, ClassDefinition, (, targetName, ,, maybeDetach, (, superClass, ), ,]
[;, return, def, ;, }, private, Node, maybeDetach, (, Node, node, ), {, if, (, node, !=, null, &&, node]
[,, maybeDetach, (, superClass, ), ,, new, MemberDefinition, (, info, ,, null, ,, maybeDetach, (, constructor, ), ), ,, objectLitToList]
[,, new, MemberDefinition, (, info, ,, null, ,, maybeDetach, (, constructor, ), ), ,, objectLitToList, (, maybeDetach, (, statics, )]
[), ,, new, MemberDefinition, (, info, ,, null, ,, maybeDetach, (, constructor, ), ), ,, objectLitToList, (, maybeDetach, (, statics]
[,, objectLitToList, (, maybeDetach, (, statics, ), ), ,, objectLitToList, (, description, ), ,, maybeDetach, (, classModifier, ), ), ;]
[,, null, ,, maybeDetach, (, constructor, ), ), ,, objectLitToList, (, maybeDetach, (, statics, ), ), ,, objectLitToList, (, description]
[,, maybeDetach, (, constructor, ), ), ,, objectLitToList, (, maybeDetach, (, statics, ), ), ,, objectLitToList, (, description, ), ,]
[), ,, objectLitToList, (, maybeDetach, (, statics, ), ), ,, objectLitToList, (, description, ), ,, maybeDetach, (, classModifier, ), )]
[), ), ,, objectLitToList, (, maybeDetach, (, statics, ), ), ,, objectLitToList, (, description, ), ,, maybeDetach, (, classModifier, )]
[,, objectLitToList, (, description, ), ,, maybeDetach, (, classModifier, ), ), ;, return, def, ;, }, private, Node, maybeDetach, (]
[), ,, objectLitToList, (, description, ), ,, maybeDetach, (, classModifier, ), ), ;, return, def, ;, }, private, Node, maybeDetach]
[), ), ,, objectLitToList, (, description, ), ,, maybeDetach, (, classModifier, ), ), ;, return, def, ;, }, private, Node]
[,, maybeDetach, (, classModifier, ), ), ;, return, def, ;, }, private, Node, maybeDetach, (, Node, node, ), {, if]
[), ,, maybeDetach, (, classModifier, ), ), ;, return, def, ;, }, private, Node, maybeDetach, (, Node, node, ), {]
[), ;, return, def, ;, }, private, Node, maybeDetach, (, Node, node, ), {, if, (, node, !=, null, &&]
[), ), ;, return, def, ;, }, private, Node, maybeDetach, (, Node, node, ), {, if, (, node, !=, null]
[;, }, private, Node, maybeDetach, (, Node, node, ), {, if, (, node, !=, null, &&, node, ., getParent, (]
[), {, node, ., detachFromParent, (, ), ;, }, return, node, ;, }, private, boolean, validateObjLit, (, Node, objlit, )]
[&&, node, ., getParent, (, ), !=, null, ), {, node, ., detachFromParent, (, ), ;, }, return, node, ;]
[!=, null, &&, node, ., getParent, (, ), !=, null, ), {, node, ., detachFromParent, (, ), ;, }, return]
[&&, node, ., getParent, (, ), !=, null, ), {, node, ., detachFromParent, (, ), ;, }, return, node, ;]
[), {, node, ., detachFromParent, (, ), ;, }, return, node, ;, }, private, boolean, validateObjLit, (, Node, objlit, )]
[!=, null, ), {, node, ., detachFromParent, (, ), ;, }, return, node, ;, }, private, boolean, validateObjLit, (, Node]
[., getParent, (, ), !=, null, ), {, node, ., detachFromParent, (, ), ;, }, return, node, ;, }, private]
[), {, node, ., detachFromParent, (, ), ;, }, return, node, ;, }, private, boolean, validateObjLit, (, Node, objlit, )]
[;, }, return, node, ;, }, private, boolean, validateObjLit, (, Node, objlit, ), {, for, (, Node, key, :, objlit]
[., detachFromParent, (, ), ;, }, return, node, ;, }, private, boolean, validateObjLit, (, Node, objlit, ), {, for, (]
[;, }, private, boolean, validateObjLit, (, Node, objlit, ), {, for, (, Node, key, :, objlit, ., children, (, )]
[), {, if, (, !, key, ., isStringKey, (, ), ||, key, ., isQuotedString, (, ), ), {, return, false]
[., children, (, ), ), {, if, (, !, key, ., isStringKey, (, ), ||, key, ., isQuotedString, (, )]
[), {, return, false, ;, }, }, return, true, ;, }, private, Node, extractProperty, (, Node, objlit, ,, String, keyName]
[||, key, ., isQuotedString, (, ), ), {, return, false, ;, }, }, return, true, ;, }, private, Node, extractProperty]
[||, key, ., isQuotedString, (, ), ), {, return, false, ;, }, }, return, true, ;, }, private, Node, extractProperty]
[., isStringKey, (, ), ||, key, ., isQuotedString, (, ), ), {, return, false, ;, }, }, return, true, ;]
[), {, return, false, ;, }, }, return, true, ;, }, private, Node, extractProperty, (, Node, objlit, ,, String, keyName]
[., isQuotedString, (, ), ), {, return, false, ;, }, }, return, true, ;, }, private, Node, extractProperty, (, Node]
[;, }, }, return, true, ;, }, private, Node, extractProperty, (, Node, objlit, ,, String, keyName, ), {, for, (]
[;, }, private, Node, extractProperty, (, Node, objlit, ,, String, keyName, ), {, for, (, Node, keyNode, :, objlit, .]
[), {, if, (, keyNode, ., getString, (, ), ., equals, (, keyName, ), ), {, return, keyNode, ., isStringKey]
[., children, (, ), ), {, if, (, keyNode, ., getString, (, ), ., equals, (, keyName, ), ), {]
[), {, return, keyNode, ., isStringKey, (, ), ?, keyNode, ., getFirstChild, (, ), :, null, ;, }, }, return]
[., equals, (, keyName, ), ), {, return, keyNode, ., isStringKey, (, ), ?, keyNode, ., getFirstChild, (, ), :]
[., getString, (, ), ., equals, (, keyName, ), ), {, return, keyNode, ., isStringKey, (, ), ?, keyNode, .]
[), ), {, return, keyNode, ., isStringKey, (, ), ?, keyNode, ., getFirstChild, (, ), :, null, ;, }, }]
[;, }, }, return, null, ;, }, private, List, <, MemberDefinition, >, objectLitToList, (, Node, objlit, ), {, List, <]
[?, keyNode, ., getFirstChild, (, ), :, null, ;, }, }, return, null, ;, }, private, List, <, MemberDefinition, >]
[., isStringKey, (, ), ?, keyNode, ., getFirstChild, (, ), :, null, ;, }, }, return, null, ;, }, private]
[:, null, ;, }, }, return, null, ;, }, private, List, <, MemberDefinition, >, objectLitToList, (, Node, objlit, ), {]
[., getFirstChild, (, ), :, null, ;, }, }, return, null, ;, }, private, List, <, MemberDefinition, >, objectLitToList, (]
[;, }, }, return, null, ;, }, private, List, <, MemberDefinition, >, objectLitToList, (, Node, objlit, ), {, List, <]
[;, }, private, List, <, MemberDefinition, >, objectLitToList, (, Node, objlit, ), {, List, <, MemberDefinition, >, result, =, Lists]
[;, for, (, Node, keyNode, :, objlit, ., children, (, ), ), {, result, ., add, (, new, MemberDefinition, (]
[., newArrayList, (, ), ;, for, (, Node, keyNode, :, objlit, ., children, (, ), ), {, result, ., add]
[), {, result, ., add, (, new, MemberDefinition, (, NodeUtil, ., getBestJSDocInfo, (, keyNode, ), ,, keyNode, ,, keyNode, .]
[., children, (, ), ), {, result, ., add, (, new, MemberDefinition, (, NodeUtil, ., getBestJSDocInfo, (, keyNode, ), ,]
[;, }, objlit, ., detachChildren, (, ), ;, return, result, ;, }, private, void, rewriteGoogDefineClass, (, Node, exprRoot, ,, ClassDefinition]
[., add, (, new, MemberDefinition, (, NodeUtil, ., getBestJSDocInfo, (, keyNode, ), ,, keyNode, ,, keyNode, ., removeFirstChild, (, )]
[), ;, }, objlit, ., detachChildren, (, ), ;, return, result, ;, }, private, void, rewriteGoogDefineClass, (, Node, exprRoot, ,]
[,, keyNode, ,, keyNode, ., removeFirstChild, (, ), ), ), ;, }, objlit, ., detachChildren, (, ), ;, return, result]
[., getBestJSDocInfo, (, keyNode, ), ,, keyNode, ,, keyNode, ., removeFirstChild, (, ), ), ), ;, }, objlit, ., detachChildren]
[), ,, keyNode, ,, keyNode, ., removeFirstChild, (, ), ), ), ;, }, objlit, ., detachChildren, (, ), ;, return]
[,, keyNode, ., removeFirstChild, (, ), ), ), ;, }, objlit, ., detachChildren, (, ), ;, return, result, ;, }]
[), ), ;, }, objlit, ., detachChildren, (, ), ;, return, result, ;, }, private, void, rewriteGoogDefineClass, (, Node, exprRoot]
[., removeFirstChild, (, ), ), ), ;, }, objlit, ., detachChildren, (, ), ;, return, result, ;, }, private, void]
[;, return, result, ;, }, private, void, rewriteGoogDefineClass, (, Node, exprRoot, ,, ClassDefinition, cls, ), {, Node, block, =, IR]
[., detachChildren, (, ), ;, return, result, ;, }, private, void, rewriteGoogDefineClass, (, Node, exprRoot, ,, ClassDefinition, cls, ), {]
[;, }, private, void, rewriteGoogDefineClass, (, Node, exprRoot, ,, ClassDefinition, cls, ), {, Node, block, =, IR, ., block, (]
[;, if, (, exprRoot, ., isVar, (, ), ), {, block, ., addChildToBack, (, IR, ., var, (, cls, .]
[., block, (, ), ;, if, (, exprRoot, ., isVar, (, ), ), {, block, ., addChildToBack, (, IR, .]
[), {, block, ., addChildToBack, (, IR, ., var, (, cls, ., name, ., cloneTree, (, ), ,, cls, .]
[., isVar, (, ), ), {, block, ., addChildToBack, (, IR, ., var, (, cls, ., name, ., cloneTree, (]
[;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., assign, (, cls, .]
[., addChildToBack, (, IR, ., var, (, cls, ., name, ., cloneTree, (, ), ,, cls, ., constructor, ., value]
[), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., assign, (, cls]
[., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (]
[., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, else, {, block]
[., var, (, cls, ., name, ., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (]
[,, cls, ., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info]
[., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls]
[., name, ., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo]
[), ., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, else, {]
[., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }]
[., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), )]
[), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref]
[), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., assign, (]
[., info, ), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, .]
[., constructor, ., info, ), ), ;, }, else, {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (]
[;, }, if, (, cls, ., superClass, !=, null, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult]
[., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., assign, (, cls, ., name, ., cloneTree, (, )]
[), ;, }, if, (, cls, ., superClass, !=, null, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, .]
[., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, if, (, cls, ., superClass, !=, null, )]
[), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, if, (, cls, ., superClass, !=, null]
[., exprResult, (, IR, ., assign, (, cls, ., name, ., cloneTree, (, ), ,, cls, ., constructor, ., value]
[), ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, if, (, cls, ., superClass, !=]
[., srcref, (, exprRoot, ), ), ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, if]
[., setJSDocInfo, (, cls, ., constructor, ., info, ), ., srcref, (, exprRoot, ), ), ), ., setJSDocInfo, (, cls]
[., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ., srcref, (, exprRoot, ), )]
[., assign, (, cls, ., name, ., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (]
[,, cls, ., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info]
[., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls]
[., name, ., cloneTree, (, ), ,, cls, ., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo]
[), ., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ., srcref, (, exprRoot, )]
[., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ., srcref, (]
[., constructor, ., value, ), ., srcref, (, exprRoot, ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), .]
[), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ., srcref, (, exprRoot, ), ), ), ., setJSDocInfo, (]
[), ., srcref, (, exprRoot, ), ), ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }]
[., info, ), ., srcref, (, exprRoot, ), ), ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), )]
[., constructor, ., info, ), ., srcref, (, exprRoot, ), ), ), ., setJSDocInfo, (, cls, ., constructor, ., info]
[), ), ), ., setJSDocInfo, (, cls, ., constructor, ., info, ), ), ;, }, if, (, cls, ., superClass]
[), ), ;, }, if, (, cls, ., superClass, !=, null, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR]
[., info, ), ), ;, }, if, (, cls, ., superClass, !=, null, ), {, block, ., addChildToBack, (, fixupSrcref]
[., constructor, ., info, ), ), ;, }, if, (, cls, ., superClass, !=, null, ), {, block, ., addChildToBack]
[), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (]
[!=, null, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., call, (, NodeUtil, .]
[., superClass, !=, null, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., call, (]
[), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (]
[;, }, for, (, MemberDefinition, def, :, cls, ., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, .]
[., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention]
[), ;, }, for, (, MemberDefinition, def, :, cls, ., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR]
[), ), ;, }, for, (, MemberDefinition, def, :, cls, ., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref, (]
[., exprResult, (, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, "goog.inherits", ), .]
[), ), ), ;, }, for, (, MemberDefinition, def, :, cls, ., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref]
[., srcref, (, cls, ., superClass, ), ), ), ), ;, }, for, (, MemberDefinition, def, :, cls, ., staticProps]
[., call, (, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, "goog.inherits", ), ., srcrefTree, (, cls, .]
[,, cls, ., name, ., cloneTree, (, ), ,, cls, ., superClass, ., cloneTree, (, ), ), ., srcref, (]
[., srcrefTree, (, cls, ., superClass, ), ,, cls, ., name, ., cloneTree, (, ), ,, cls, ., superClass, .]
[., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, "goog.inherits", ), ., srcrefTree, (, cls, ., superClass, ), ,, cls]
[,, "goog.inherits", ), ., srcrefTree, (, cls, ., superClass, ), ,, cls, ., name, ., cloneTree, (, ), ,, cls]
[., getCodingConvention, (, ), ,, "goog.inherits", ), ., srcrefTree, (, cls, ., superClass, ), ,, cls, ., name, ., cloneTree]
[), ., srcrefTree, (, cls, ., superClass, ), ,, cls, ., name, ., cloneTree, (, ), ,, cls, ., superClass]
[), ,, cls, ., name, ., cloneTree, (, ), ,, cls, ., superClass, ., cloneTree, (, ), ), ., srcref]
[., superClass, ), ,, cls, ., name, ., cloneTree, (, ), ,, cls, ., superClass, ., cloneTree, (, ), )]
[,, cls, ., superClass, ., cloneTree, (, ), ), ., srcref, (, cls, ., superClass, ), ), ), ), ;]
[., cloneTree, (, ), ,, cls, ., superClass, ., cloneTree, (, ), ), ., srcref, (, cls, ., superClass, )]
[., name, ., cloneTree, (, ), ,, cls, ., superClass, ., cloneTree, (, ), ), ., srcref, (, cls, .]
[), ., srcref, (, cls, ., superClass, ), ), ), ), ;, }, for, (, MemberDefinition, def, :, cls, .]
[., cloneTree, (, ), ), ., srcref, (, cls, ., superClass, ), ), ), ), ;, }, for, (, MemberDefinition]
[., superClass, ., cloneTree, (, ), ), ., srcref, (, cls, ., superClass, ), ), ), ), ;, }, for]
[), ), ), ), ;, }, for, (, MemberDefinition, def, :, cls, ., staticProps, ), {, block, ., addChildToBack, (]
[., superClass, ), ), ), ), ;, }, for, (, MemberDefinition, def, :, cls, ., staticProps, ), {, block, .]
[), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, .]
[., staticProps, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (]
[;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, for, (, MemberDefinition, def, :, cls, ., props, )]
[., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (, cls]
[), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, for, (, MemberDefinition, def, :, cls, ., props]
[), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, for, (, MemberDefinition, def, :, cls, .]
[., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, )]
[), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, for, (, MemberDefinition, def, :, cls]
[., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;]
[), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), )]
[., assign, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, ), ,, IR, ., string, (, def]
[,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block]
[., srcref, (, def, ., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, )]
[., getprop, (, cls, ., name, ., cloneTree, (, ), ,, IR, ., string, (, def, ., name, ., getString]
[,, IR, ., string, (, def, ., name, ., getString, (, ), ), ., srcref, (, def, ., name, )]
[., cloneTree, (, ), ,, IR, ., string, (, def, ., name, ., getString, (, ), ), ., srcref, (]
[., name, ., cloneTree, (, ), ,, IR, ., string, (, def, ., name, ., getString, (, ), ), .]
[), ., srcref, (, def, ., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info]
[., srcref, (, def, ., name, ), ), ., srcref, (, def, ., name, ), ,, def, ., value, )]
[., string, (, def, ., name, ., getString, (, ), ), ., srcref, (, def, ., name, ), ), .]
[), ., srcref, (, def, ., name, ), ), ., srcref, (, def, ., name, ), ,, def, ., value]
[., getString, (, ), ), ., srcref, (, def, ., name, ), ), ., srcref, (, def, ., name, )]
[., name, ., getString, (, ), ), ., srcref, (, def, ., name, ), ), ., srcref, (, def, .]
[), ), ., srcref, (, def, ., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (, def, .]
[., name, ), ), ., srcref, (, def, ., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (]
[), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (]
[., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;]
[), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, )]
[., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild]
[), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, for, (, MemberDefinition, def, :]
[., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, for, (, MemberDefinition]
[;, }, for, (, MemberDefinition, def, :, cls, ., props, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, .]
[), ;, }, for, (, MemberDefinition, def, :, cls, ., props, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR]
[., getLastChild, (, ), ), ;, }, for, (, MemberDefinition, def, :, cls, ., props, ), {, block, ., addChildToBack]
[), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, .]
[., props, ), {, block, ., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (]
[;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, if, (, cls, ., classModifier, !=, null, ), {]
[., addChildToBack, (, fixupSrcref, (, IR, ., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (, fixupSrcref]
[), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, if, (, cls, ., classModifier, !=, null, )]
[), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, if, (, cls, ., classModifier, !=, null]
[., exprResult, (, fixupSrcref, (, IR, ., assign, (, IR, ., getprop, (, fixupSrcref, (, IR, ., getprop, (, cls]
[), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, if, (, cls, ., classModifier, !=]
[., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;]
[), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), )]
[., assign, (, IR, ., getprop, (, fixupSrcref, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, )]
[,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block]
[., srcref, (, def, ., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, )]
[., getprop, (, fixupSrcref, (, IR, ., getprop, (, cls, ., name, ., cloneTree, (, ), ,, IR, ., string]
[,, IR, ., string, (, def, ., name, ., getString, (, ), ), ., srcref, (, def, ., name, )]
[), ,, IR, ., string, (, def, ., name, ., getString, (, ), ), ., srcref, (, def, ., name]
[., getprop, (, cls, ., name, ., cloneTree, (, ), ,, IR, ., string, (, "prototype", ), ., srcref, (]
[,, IR, ., string, (, "prototype", ), ., srcref, (, def, ., name, ), ), ), ,, IR, ., string]
[., cloneTree, (, ), ,, IR, ., string, (, "prototype", ), ., srcref, (, def, ., name, ), ), )]
[., name, ., cloneTree, (, ), ,, IR, ., string, (, "prototype", ), ., srcref, (, def, ., name, )]
[), ), ,, IR, ., string, (, def, ., name, ., getString, (, ), ), ., srcref, (, def, .]
[., srcref, (, def, ., name, ), ), ), ,, IR, ., string, (, def, ., name, ., getString, (]
[., string, (, "prototype", ), ., srcref, (, def, ., name, ), ), ), ,, IR, ., string, (, def]
[), ., srcref, (, def, ., name, ), ), ), ,, IR, ., string, (, def, ., name, ., getString]
[), ), ), ,, IR, ., string, (, def, ., name, ., getString, (, ), ), ., srcref, (, def]
[., name, ), ), ), ,, IR, ., string, (, def, ., name, ., getString, (, ), ), ., srcref]
[), ., srcref, (, def, ., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info]
[., srcref, (, def, ., name, ), ), ., srcref, (, def, ., name, ), ,, def, ., value, )]
[., string, (, def, ., name, ., getString, (, ), ), ., srcref, (, def, ., name, ), ), .]
[), ., srcref, (, def, ., name, ), ), ., srcref, (, def, ., name, ), ,, def, ., value]
[., getString, (, ), ), ., srcref, (, def, ., name, ), ), ., srcref, (, def, ., name, )]
[., name, ., getString, (, ), ), ., srcref, (, def, ., name, ), ), ., srcref, (, def, .]
[), ), ., srcref, (, def, ., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (, def, .]
[., name, ), ), ., srcref, (, def, ., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (]
[), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (]
[., name, ), ,, def, ., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;]
[), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, )]
[., value, ), ), ., setJSDocInfo, (, def, ., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild]
[), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, if, (, cls, ., classModifier]
[., info, ), ), ), ), ;, maybeRewriteClassDefinition, (, block, ., getLastChild, (, ), ), ;, }, if, (, cls]
[;, }, if, (, cls, ., classModifier, !=, null, ), {, block, ., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall]
[), ;, }, if, (, cls, ., classModifier, !=, null, ), {, block, ., addChildToBack, (, IR, ., exprResult, (]
[., getLastChild, (, ), ), ;, }, if, (, cls, ., classModifier, !=, null, ), {, block, ., addChildToBack, (]
[), {, block, ., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall, (, IR, ., call, (, cls, ., classModifier, ,]
[!=, null, ), {, block, ., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall, (, IR, ., call, (, cls, .]
[., classModifier, !=, null, ), {, block, ., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall, (, IR, ., call, (]
[), {, block, ., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall, (, IR, ., call, (, cls, ., classModifier, ,]
[;, }, exprRoot, ., getParent, (, ), ., replaceChild, (, exprRoot, ,, block, ), ;, compiler, ., reportCodeChange, (, )]
[., addChildToBack, (, IR, ., exprResult, (, fixupFreeCall, (, IR, ., call, (, cls, ., classModifier, ,, cls, ., name]
[), ;, }, exprRoot, ., getParent, (, ), ., replaceChild, (, exprRoot, ,, block, ), ;, compiler, ., reportCodeChange, (]
[., srcref, (, cls, ., classModifier, ), ), ;, }, exprRoot, ., getParent, (, ), ., replaceChild, (, exprRoot, ,]
[., exprResult, (, fixupFreeCall, (, IR, ., call, (, cls, ., classModifier, ,, cls, ., name, ., cloneTree, (, )]
[), ., srcref, (, cls, ., classModifier, ), ), ;, }, exprRoot, ., getParent, (, ), ., replaceChild, (, exprRoot]
[), ), ., srcref, (, cls, ., classModifier, ), ), ;, }, exprRoot, ., getParent, (, ), ., replaceChild, (]
[., srcref, (, cls, ., classModifier, ), ), ), ., srcref, (, cls, ., classModifier, ), ), ;, }, exprRoot]
[., call, (, cls, ., classModifier, ,, cls, ., name, ., cloneTree, (, ), ), ., srcref, (, cls, .]
[,, cls, ., name, ., cloneTree, (, ), ), ., srcref, (, cls, ., classModifier, ), ), ), ., srcref]
[., classModifier, ,, cls, ., name, ., cloneTree, (, ), ), ., srcref, (, cls, ., classModifier, ), ), )]
[), ., srcref, (, cls, ., classModifier, ), ), ), ., srcref, (, cls, ., classModifier, ), ), ;, }]
[., cloneTree, (, ), ), ., srcref, (, cls, ., classModifier, ), ), ), ., srcref, (, cls, ., classModifier]
[., name, ., cloneTree, (, ), ), ., srcref, (, cls, ., classModifier, ), ), ), ., srcref, (, cls]
[), ), ), ., srcref, (, cls, ., classModifier, ), ), ;, }, exprRoot, ., getParent, (, ), ., replaceChild]
[., classModifier, ), ), ), ., srcref, (, cls, ., classModifier, ), ), ;, }, exprRoot, ., getParent, (, )]
[), ), ;, }, exprRoot, ., getParent, (, ), ., replaceChild, (, exprRoot, ,, block, ), ;, compiler, ., reportCodeChange]
[., classModifier, ), ), ;, }, exprRoot, ., getParent, (, ), ., replaceChild, (, exprRoot, ,, block, ), ;, compiler]
[;, compiler, ., reportCodeChange, (, ), ;, }, private, Node, fixupSrcref, (, Node, node, ), {, node, ., srcref, (]
[., replaceChild, (, exprRoot, ,, block, ), ;, compiler, ., reportCodeChange, (, ), ;, }, private, Node, fixupSrcref, (, Node]
[., getParent, (, ), ., replaceChild, (, exprRoot, ,, block, ), ;, compiler, ., reportCodeChange, (, ), ;, }, private]
[,, block, ), ;, compiler, ., reportCodeChange, (, ), ;, }, private, Node, fixupSrcref, (, Node, node, ), {, node]
[), ;, compiler, ., reportCodeChange, (, ), ;, }, private, Node, fixupSrcref, (, Node, node, ), {, node, ., srcref]
[;, }, private, Node, fixupSrcref, (, Node, node, ), {, node, ., srcref, (, node, ., getFirstChild, (, ), )]
[., reportCodeChange, (, ), ;, }, private, Node, fixupSrcref, (, Node, node, ), {, node, ., srcref, (, node, .]
[;, return, node, ;, }, private, Node, fixupFreeCall, (, Node, call, ), {, Preconditions, ., checkState, (, call, ., isCall]
[., srcref, (, node, ., getFirstChild, (, ), ), ;, return, node, ;, }, private, Node, fixupFreeCall, (, Node, call]
[), ;, return, node, ;, }, private, Node, fixupFreeCall, (, Node, call, ), {, Preconditions, ., checkState, (, call, .]
[., getFirstChild, (, ), ), ;, return, node, ;, }, private, Node, fixupFreeCall, (, Node, call, ), {, Preconditions, .]
[;, }, private, Node, fixupFreeCall, (, Node, call, ), {, Preconditions, ., checkState, (, call, ., isCall, (, ), )]
[;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, return, call, ;, }, private, boolean, isGoogDefineClass, (]
[., checkState, (, call, ., isCall, (, ), ), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, )]
[), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, return, call, ;, }, private, boolean, isGoogDefineClass]
[., isCall, (, ), ), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, return, call, ;]
[;, return, call, ;, }, private, boolean, isGoogDefineClass, (, Node, value, ), {, if, (, value, !=, null, &&, value]
[., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, return, call, ;, }, private, boolean, isGoogDefineClass, (, Node, value]
[,, true, ), ;, return, call, ;, }, private, boolean, isGoogDefineClass, (, Node, value, ), {, if, (, value, !=]
[., FREE_CALL, ,, true, ), ;, return, call, ;, }, private, boolean, isGoogDefineClass, (, Node, value, ), {, if, (]
[), ;, return, call, ;, }, private, boolean, isGoogDefineClass, (, Node, value, ), {, if, (, value, !=, null, &&]
[;, }, private, boolean, isGoogDefineClass, (, Node, value, ), {, if, (, value, !=, null, &&, value, ., isCall, (]
[), {, String, targetName, =, value, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, return, (, "goog.defineClass", ., equals]
[&&, value, ., isCall, (, ), ), {, String, targetName, =, value, ., getFirstChild, (, ), ., getQualifiedName, (, )]
[!=, null, &&, value, ., isCall, (, ), ), {, String, targetName, =, value, ., getFirstChild, (, ), ., getQualifiedName]
[&&, value, ., isCall, (, ), ), {, String, targetName, =, value, ., getFirstChild, (, ), ., getQualifiedName, (, )]
[), {, String, targetName, =, value, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, return, (, "goog.defineClass", ., equals]
[., isCall, (, ), ), {, String, targetName, =, value, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, return]
[;, return, (, "goog.defineClass", ., equals, (, targetName, ), ||, "goog.labs.classdef.defineClass", ., equals, (, targetName, ), ), ;, }, return]
[., getQualifiedName, (, ), ;, return, (, "goog.defineClass", ., equals, (, targetName, ), ||, "goog.labs.classdef.defineClass", ., equals, (, targetName, )]
[., getFirstChild, (, ), ., getQualifiedName, (, ), ;, return, (, "goog.defineClass", ., equals, (, targetName, ), ||, "goog.labs.classdef.defineClass", .]
[;, }, return, false, ;, }, }]
[), ;, }, return, false, ;, }, }]
[||, "goog.labs.classdef.defineClass", ., equals, (, targetName, ), ), ;, }, return, false, ;, }, }]
[., equals, (, targetName, ), ||, "goog.labs.classdef.defineClass", ., equals, (, targetName, ), ), ;, }, return, false, ;, }, }]
[), ||, "goog.labs.classdef.defineClass", ., equals, (, targetName, ), ), ;, }, return, false, ;, }, }]
[), ;, }, return, false, ;, }, }]
[., equals, (, targetName, ), ), ;, }, return, false, ;, }, }]
[), ), ;, }, return, false, ;, }, }]
[;, }, }]
