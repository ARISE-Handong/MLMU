[), {, throw, new, DimensionMismatchException, (, points, ., length, ,, weights, ., length, ), ;, }, MathArrays, ., checkOrder, (]
[!=, weights, ., length, ), {, throw, new, DimensionMismatchException, (, points, ., length, ,, weights, ., length, ), ;, }]
[., length, !=, weights, ., length, ), {, throw, new, DimensionMismatchException, (, points, ., length, ,, weights, ., length, )]
[), {, throw, new, DimensionMismatchException, (, points, ., length, ,, weights, ., length, ), ;, }, MathArrays, ., checkOrder, (]
[., length, ), {, throw, new, DimensionMismatchException, (, points, ., length, ,, weights, ., length, ), ;, }, MathArrays, .]
[;, }, MathArrays, ., checkOrder, (, points, ,, MathArrays, ., OrderDirection, ., INCREASING, ,, true, ,, true, ), ;, this]
[,, weights, ., length, ), ;, }, MathArrays, ., checkOrder, (, points, ,, MathArrays, ., OrderDirection, ., INCREASING, ,, true]
[., length, ,, weights, ., length, ), ;, }, MathArrays, ., checkOrder, (, points, ,, MathArrays, ., OrderDirection, ., INCREASING]
[), ;, }, MathArrays, ., checkOrder, (, points, ,, MathArrays, ., OrderDirection, ., INCREASING, ,, true, ,, true, ), ;]
[., length, ), ;, }, MathArrays, ., checkOrder, (, points, ,, MathArrays, ., OrderDirection, ., INCREASING, ,, true, ,, true]
[;, this, ., points, =, points, ., clone, (, ), ;, this, ., weights, =, weights, ., clone, (, )]
[., checkOrder, (, points, ,, MathArrays, ., OrderDirection, ., INCREASING, ,, true, ,, true, ), ;, this, ., points, =]
[,, MathArrays, ., OrderDirection, ., INCREASING, ,, true, ,, true, ), ;, this, ., points, =, points, ., clone, (]
[,, true, ,, true, ), ;, this, ., points, =, points, ., clone, (, ), ;, this, ., weights, =]
[., INCREASING, ,, true, ,, true, ), ;, this, ., points, =, points, ., clone, (, ), ;, this, .]
[., OrderDirection, ., INCREASING, ,, true, ,, true, ), ;, this, ., points, =, points, ., clone, (, ), ;]
[,, true, ), ;, this, ., points, =, points, ., clone, (, ), ;, this, ., weights, =, weights, .]
[), ;, this, ., points, =, points, ., clone, (, ), ;, this, ., weights, =, weights, ., clone, (]
[=, points, ., clone, (, ), ;, this, ., weights, =, weights, ., clone, (, ), ;, }, public, GaussIntegrator]
[., points, =, points, ., clone, (, ), ;, this, ., weights, =, weights, ., clone, (, ), ;, }]
[;, this, ., weights, =, weights, ., clone, (, ), ;, }, public, GaussIntegrator, (, Pair, <, double, [, ]]
[., clone, (, ), ;, this, ., weights, =, weights, ., clone, (, ), ;, }, public, GaussIntegrator, (, Pair]
[=, weights, ., clone, (, ), ;, }, public, GaussIntegrator, (, Pair, <, double, [, ], ,, double, [, ]]
[., weights, =, weights, ., clone, (, ), ;, }, public, GaussIntegrator, (, Pair, <, double, [, ], ,, double]
[;, }, public, GaussIntegrator, (, Pair, <, double, [, ], ,, double, [, ], >, pointsAndWeights, ), throws, NonMonotonicSequenceException, {]
[., clone, (, ), ;, }, public, GaussIntegrator, (, Pair, <, double, [, ], ,, double, [, ], >, pointsAndWeights]
[,, pointsAndWeights, ., getSecond, (, ), ), ;, }, public, double, integrate, (, UnivariateFunction, f, ), {, double, s, =]
[., getFirst, (, ), ,, pointsAndWeights, ., getSecond, (, ), ), ;, }, public, double, integrate, (, UnivariateFunction, f, )]
[), ;, }, public, double, integrate, (, UnivariateFunction, f, ), {, double, s, =, 0, ;, double, c, =, 0]
[., getSecond, (, ), ), ;, }, public, double, integrate, (, UnivariateFunction, f, ), {, double, s, =, 0, ;]
[;, double, c, =, 0, ;, for, (, int, i, =, 0, ;, i, <, points, ., length, ;, i]
[;, for, (, int, i, =, 0, ;, i, <, points, ., length, ;, i, ++, ), {, final, double]
[;, i, <, points, ., length, ;, i, ++, ), {, final, double, x, =, points, [, i, ], ;]
[;, i, ++, ), {, final, double, x, =, points, [, i, ], ;, final, double, w, =, weights, []
[<, points, ., length, ;, i, ++, ), {, final, double, x, =, points, [, i, ], ;, final, double]
[;, i, ++, ), {, final, double, x, =, points, [, i, ], ;, final, double, w, =, weights, []
[., length, ;, i, ++, ), {, final, double, x, =, points, [, i, ], ;, final, double, w, =]
[), {, final, double, x, =, points, [, i, ], ;, final, double, w, =, weights, [, i, ], ;]
[++, ), {, final, double, x, =, points, [, i, ], ;, final, double, w, =, weights, [, i, ]]
[;, final, double, w, =, weights, [, i, ], ;, final, double, y, =, w, *, f, ., value, (]
[[, i, ], ;, final, double, w, =, weights, [, i, ], ;, final, double, y, =, w, *, f]
[], ;, final, double, w, =, weights, [, i, ], ;, final, double, y, =, w, *, f, ., value]
[;, final, double, y, =, w, *, f, ., value, (, x, ), -, c, ;, final, double, t, =]
[[, i, ], ;, final, double, y, =, w, *, f, ., value, (, x, ), -, c, ;, final]
[], ;, final, double, y, =, w, *, f, ., value, (, x, ), -, c, ;, final, double, t]
[;, final, double, t, =, s, +, y, ;, c, =, (, t, -, s, ), -, y, ;, s]
[-, c, ;, final, double, t, =, s, +, y, ;, c, =, (, t, -, s, ), -, y]
[*, f, ., value, (, x, ), -, c, ;, final, double, t, =, s, +, y, ;, c, =]
[-, c, ;, final, double, t, =, s, +, y, ;, c, =, (, t, -, s, ), -, y]
[., value, (, x, ), -, c, ;, final, double, t, =, s, +, y, ;, c, =, (, t]
[), -, c, ;, final, double, t, =, s, +, y, ;, c, =, (, t, -, s, ), -]
[;, final, double, t, =, s, +, y, ;, c, =, (, t, -, s, ), -, y, ;, s]
[;, c, =, (, t, -, s, ), -, y, ;, s, =, t, ;, }, return, s, ;, }]
[+, y, ;, c, =, (, t, -, s, ), -, y, ;, s, =, t, ;, }, return, s]
[;, c, =, (, t, -, s, ), -, y, ;, s, =, t, ;, }, return, s, ;, }]
[=, (, t, -, s, ), -, y, ;, s, =, t, ;, }, return, s, ;, }, public, int]
[;, s, =, t, ;, }, return, s, ;, }, public, int, getNumberOfPoints, (, ), {, return, points, ., length]
[-, y, ;, s, =, t, ;, }, return, s, ;, }, public, int, getNumberOfPoints, (, ), {, return, points]
[), -, y, ;, s, =, t, ;, }, return, s, ;, }, public, int, getNumberOfPoints, (, ), {, return]
[-, s, ), -, y, ;, s, =, t, ;, }, return, s, ;, }, public, int, getNumberOfPoints, (, )]
[), -, y, ;, s, =, t, ;, }, return, s, ;, }, public, int, getNumberOfPoints, (, ), {, return]
[;, s, =, t, ;, }, return, s, ;, }, public, int, getNumberOfPoints, (, ), {, return, points, ., length]
[=, t, ;, }, return, s, ;, }, public, int, getNumberOfPoints, (, ), {, return, points, ., length, ;, }]
[;, }, return, s, ;, }, public, int, getNumberOfPoints, (, ), {, return, points, ., length, ;, }, public, double]
[;, }, public, int, getNumberOfPoints, (, ), {, return, points, ., length, ;, }, public, double, getPoint, (, int, index]
[;, }, public, double, getPoint, (, int, index, ), {, return, points, [, index, ], ;, }, public, double, getWeight]
[., length, ;, }, public, double, getPoint, (, int, index, ), {, return, points, [, index, ], ;, }, public]
[;, }, public, double, getWeight, (, int, index, ), {, return, weights, [, index, ], ;, }, }]
[[, index, ], ;, }, public, double, getWeight, (, int, index, ), {, return, weights, [, index, ], ;, }]
[], ;, }, public, double, getWeight, (, int, index, ), {, return, weights, [, index, ], ;, }, }]
[;, }, }]
[[, index, ], ;, }, }]
[], ;, }, }]
