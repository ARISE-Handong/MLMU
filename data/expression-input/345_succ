[;, private, LifeCycleStage, stage, =, LifeCycleStage, ., RAW, ;, public, abstract, CompilerInput, getInput, (, InputId, inputId, ), ;, abstract, SourceFile]
[., error, (, "JSC_READ_ERROR", ,, "Cannot read: {0}", ), ;, private, LifeCycleStage, stage, =, LifeCycleStage, ., RAW, ;, public, abstract, CompilerInput, getInput]
[,, "Cannot read: {0}", ), ;, private, LifeCycleStage, stage, =, LifeCycleStage, ., RAW, ;, public, abstract, CompilerInput, getInput, (, InputId, inputId, )]
[), ;, private, LifeCycleStage, stage, =, LifeCycleStage, ., RAW, ;, public, abstract, CompilerInput, getInput, (, InputId, inputId, ), ;, abstract]
[;, public, abstract, CompilerInput, getInput, (, InputId, inputId, ), ;, abstract, SourceFile, getSourceFileByName, (, String, sourceName, ), ;, abstract, CompilerInput]
[., RAW, ;, public, abstract, CompilerInput, getInput, (, InputId, inputId, ), ;, abstract, SourceFile, getSourceFileByName, (, String, sourceName, ), ;]
[;, }, abstract, Supplier, <, String, >, getUniqueNameIdSupplier, (, ), ;, abstract, boolean, hasHaltingErrors, (, ), ;, abstract, void, addChangeHandler]
[=, stage, ;, }, abstract, boolean, areNodesEqualForInlining, (, Node, n1, ,, Node, n2, ), ;, abstract, void, setHasRegExpGlobalReferences, (, boolean]
[., stage, =, stage, ;, }, abstract, boolean, areNodesEqualForInlining, (, Node, n1, ,, Node, n2, ), ;, abstract, void, setHasRegExpGlobalReferences]
[;, }, abstract, boolean, areNodesEqualForInlining, (, Node, n1, ,, Node, n2, ), ;, abstract, void, setHasRegExpGlobalReferences, (, boolean, references, )]
[;, }, boolean, isNormalizedUnobfuscated, (, ), {, return, this, ==, NORMALIZED, ;, }, boolean, isNormalizedObfuscated, (, ), {, return, this]
[||, this, ==, NORMALIZED_OBFUSCATED, ;, }, boolean, isNormalizedUnobfuscated, (, ), {, return, this, ==, NORMALIZED, ;, }, boolean, isNormalizedObfuscated, (]
[==, NORMALIZED, ||, this, ==, NORMALIZED_OBFUSCATED, ;, }, boolean, isNormalizedUnobfuscated, (, ), {, return, this, ==, NORMALIZED, ;, }, boolean]
[||, this, ==, NORMALIZED_OBFUSCATED, ;, }, boolean, isNormalizedUnobfuscated, (, ), {, return, this, ==, NORMALIZED, ;, }, boolean, isNormalizedObfuscated, (]
[;, }, boolean, isNormalizedUnobfuscated, (, ), {, return, this, ==, NORMALIZED, ;, }, boolean, isNormalizedObfuscated, (, ), {, return, this]
[==, NORMALIZED_OBFUSCATED, ;, }, boolean, isNormalizedUnobfuscated, (, ), {, return, this, ==, NORMALIZED, ;, }, boolean, isNormalizedObfuscated, (, ), {]
[;, }, boolean, isNormalizedUnobfuscated, (, ), {, return, this, ==, NORMALIZED, ;, }, boolean, isNormalizedObfuscated, (, ), {, return, this]
[;, }, boolean, isNormalizedObfuscated, (, ), {, return, this, ==, NORMALIZED_OBFUSCATED, ;, }, }, abstract, void, process, (, CompilerPass, pass]
[==, NORMALIZED, ;, }, boolean, isNormalizedObfuscated, (, ), {, return, this, ==, NORMALIZED_OBFUSCATED, ;, }, }, abstract, void, process, (]
[;, }, boolean, isNormalizedObfuscated, (, ), {, return, this, ==, NORMALIZED_OBFUSCATED, ;, }, }, abstract, void, process, (, CompilerPass, pass]
[;, }, }, abstract, void, process, (, CompilerPass, pass, ), ;, abstract, Node, getRoot, (, ), ;, abstract, void, updateGlobalVarReferences]
[==, NORMALIZED_OBFUSCATED, ;, }, }, abstract, void, process, (, CompilerPass, pass, ), ;, abstract, Node, getRoot, (, ), ;, abstract]
[;, }, }, abstract, void, process, (, CompilerPass, pass, ), ;, abstract, Node, getRoot, (, ), ;, abstract, void, updateGlobalVarReferences]
