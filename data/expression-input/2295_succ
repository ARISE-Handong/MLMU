[;, private, boolean, centerBarAtStartValue, ;, public, ClusteredXYBarRenderer, (, ), {, this, (, 0.0, ,, false, ), ;, }, public, ClusteredXYBarRenderer]
[,, false, ), ;, }, public, ClusteredXYBarRenderer, (, double, margin, ,, boolean, centerBarAtStartValue, ), {, super, (, margin, ), ;]
[), ;, }, public, ClusteredXYBarRenderer, (, double, margin, ,, boolean, centerBarAtStartValue, ), {, super, (, margin, ), ;, this, .]
[), ;, this, ., centerBarAtStartValue, =, centerBarAtStartValue, ;, }, public, int, getPassCount, (, ), {, return, 2, ;, }, public]
[=, centerBarAtStartValue, ;, }, public, int, getPassCount, (, ), {, return, 2, ;, }, public, Range, findDomainBounds, (, XYDataset, dataset]
[., centerBarAtStartValue, =, centerBarAtStartValue, ;, }, public, int, getPassCount, (, ), {, return, 2, ;, }, public, Range, findDomainBounds, (]
[;, }, public, int, getPassCount, (, ), {, return, 2, ;, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {]
[;, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==, null, ), {, return, null, ;]
[), {, return, null, ;, }, if, (, this, ., centerBarAtStartValue, ), {, return, findDomainBoundsWithOffset, (, (, IntervalXYDataset, ), dataset]
[==, null, ), {, return, null, ;, }, if, (, this, ., centerBarAtStartValue, ), {, return, findDomainBoundsWithOffset, (, (, IntervalXYDataset]
[), {, return, null, ;, }, if, (, this, ., centerBarAtStartValue, ), {, return, findDomainBoundsWithOffset, (, (, IntervalXYDataset, ), dataset]
[;, }, if, (, this, ., centerBarAtStartValue, ), {, return, findDomainBoundsWithOffset, (, (, IntervalXYDataset, ), dataset, ), ;, }, else]
[), {, return, findDomainBoundsWithOffset, (, (, IntervalXYDataset, ), dataset, ), ;, }, else, {, return, super, ., findDomainBounds, (, dataset]
[., centerBarAtStartValue, ), {, return, findDomainBoundsWithOffset, (, (, IntervalXYDataset, ), dataset, ), ;, }, else, {, return, super, ., findDomainBounds]
[;, }, else, {, return, super, ., findDomainBounds, (, dataset, ), ;, }, }, protected, Range, findDomainBoundsWithOffset, (, IntervalXYDataset, dataset]
[), ;, }, else, {, return, super, ., findDomainBounds, (, dataset, ), ;, }, }, protected, Range, findDomainBoundsWithOffset, (, IntervalXYDataset]
[), ;, }, else, {, return, super, ., findDomainBounds, (, dataset, ), ;, }, }, protected, Range, findDomainBoundsWithOffset, (, IntervalXYDataset]
[;, }, }, protected, Range, findDomainBoundsWithOffset, (, IntervalXYDataset, dataset, ), {, if, (, dataset, ==, null, ), {, throw, new]
[., findDomainBounds, (, dataset, ), ;, }, }, protected, Range, findDomainBoundsWithOffset, (, IntervalXYDataset, dataset, ), {, if, (, dataset, ==]
[), ;, }, }, protected, Range, findDomainBoundsWithOffset, (, IntervalXYDataset, dataset, ), {, if, (, dataset, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =]
[;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset]
[), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =]
[;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double, lvalue, ;]
[., POSITIVE_INFINITY, ;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double]
[;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, for, (, int, series]
[., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, for, (]
[;, double, lvalue, ;, double, uvalue, ;, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++]
[., getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, for, (, int, series, =, 0, ;, series, <]
[;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[<, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item]
[++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;]
[;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset, .]
[., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, )]
[), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset]
[;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getStartXValue, (, series, ,, item, ), ;]
[;, item, ++, ), {, lvalue, =, dataset, ., getStartXValue, (, series, ,, item, ), ;, uvalue, =, dataset, .]
[<, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getStartXValue, (, series, ,, item, ), ;, uvalue, =]
[;, item, ++, ), {, lvalue, =, dataset, ., getStartXValue, (, series, ,, item, ), ;, uvalue, =, dataset, .]
[), {, lvalue, =, dataset, ., getStartXValue, (, series, ,, item, ), ;, uvalue, =, dataset, ., getEndXValue, (, series]
[++, ), {, lvalue, =, dataset, ., getStartXValue, (, series, ,, item, ), ;, uvalue, =, dataset, ., getEndXValue, (]
[=, dataset, ., getStartXValue, (, series, ,, item, ), ;, uvalue, =, dataset, ., getEndXValue, (, series, ,, item, )]
[;, uvalue, =, dataset, ., getEndXValue, (, series, ,, item, ), ;, double, offset, =, (, uvalue, -, lvalue, )]
[., getStartXValue, (, series, ,, item, ), ;, uvalue, =, dataset, ., getEndXValue, (, series, ,, item, ), ;, double]
[,, item, ), ;, uvalue, =, dataset, ., getEndXValue, (, series, ,, item, ), ;, double, offset, =, (, uvalue]
[), ;, uvalue, =, dataset, ., getEndXValue, (, series, ,, item, ), ;, double, offset, =, (, uvalue, -, lvalue]
[=, dataset, ., getEndXValue, (, series, ,, item, ), ;, double, offset, =, (, uvalue, -, lvalue, ), /, 2.0]
[;, double, offset, =, (, uvalue, -, lvalue, ), /, 2.0, ;, lvalue, =, lvalue, -, offset, ;, uvalue, =]
[., getEndXValue, (, series, ,, item, ), ;, double, offset, =, (, uvalue, -, lvalue, ), /, 2.0, ;, lvalue]
[,, item, ), ;, double, offset, =, (, uvalue, -, lvalue, ), /, 2.0, ;, lvalue, =, lvalue, -, offset]
[), ;, double, offset, =, (, uvalue, -, lvalue, ), /, 2.0, ;, lvalue, =, lvalue, -, offset, ;, uvalue]
[;, lvalue, =, lvalue, -, offset, ;, uvalue, =, uvalue, -, offset, ;, minimum, =, Math, ., min, (, minimum]
[/, 2.0, ;, lvalue, =, lvalue, -, offset, ;, uvalue, =, uvalue, -, offset, ;, minimum, =, Math, ., min]
[), /, 2.0, ;, lvalue, =, lvalue, -, offset, ;, uvalue, =, uvalue, -, offset, ;, minimum, =, Math, .]
[-, lvalue, ), /, 2.0, ;, lvalue, =, lvalue, -, offset, ;, uvalue, =, uvalue, -, offset, ;, minimum, =]
[), /, 2.0, ;, lvalue, =, lvalue, -, offset, ;, uvalue, =, uvalue, -, offset, ;, minimum, =, Math, .]
[;, lvalue, =, lvalue, -, offset, ;, uvalue, =, uvalue, -, offset, ;, minimum, =, Math, ., min, (, minimum]
[=, lvalue, -, offset, ;, uvalue, =, uvalue, -, offset, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue]
[;, uvalue, =, uvalue, -, offset, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =]
[-, offset, ;, uvalue, =, uvalue, -, offset, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;]
[;, uvalue, =, uvalue, -, offset, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =]
[=, uvalue, -, offset, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, .]
[;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,]
[-, offset, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (]
[;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,]
[=, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, )]
[;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, if, (, minimum, >, maximum, )]
[., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }]
[,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, if, (, minimum]
[), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, if, (, minimum, >, maximum]
[=, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, if, (, minimum, >, maximum, ), {, return]
[;, }, }, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {, return, new, Range, (]
[., max, (, maximum, ,, uvalue, ), ;, }, }, if, (, minimum, >, maximum, ), {, return, null, ;]
[,, uvalue, ), ;, }, }, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {, return]
[), ;, }, }, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {, return, new, Range]
[), {, return, null, ;, }, else, {, return, new, Range, (, minimum, ,, maximum, ), ;, }, }, public]
[>, maximum, ), {, return, null, ;, }, else, {, return, new, Range, (, minimum, ,, maximum, ), ;, }]
[), {, return, null, ;, }, else, {, return, new, Range, (, minimum, ,, maximum, ), ;, }, }, public]
[;, }, else, {, return, new, Range, (, minimum, ,, maximum, ), ;, }, }, public, void, drawItem, (, Graphics2D]
[;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, ValueAxis]
[,, maximum, ), ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot]
[), ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,]
[;, double, y0, ;, double, y1, ;, if, (, getUseYInterval, (, ), ), {, y0, =, intervalDataset, ., getStartYValue, (]
[;, double, y0, ;, double, y1, ;, if, (, getUseYInterval, (, ), ), {, y0, =, intervalDataset, ., getStartYValue, (]
[), {, y0, =, intervalDataset, ., getStartYValue, (, series, ,, item, ), ;, y1, =, intervalDataset, ., getEndYValue, (, series]
[=, intervalDataset, ., getStartYValue, (, series, ,, item, ), ;, y1, =, intervalDataset, ., getEndYValue, (, series, ,, item, )]
[;, y1, =, intervalDataset, ., getEndYValue, (, series, ,, item, ), ;, }, else, {, y0, =, getBase, (, )]
[., getStartYValue, (, series, ,, item, ), ;, y1, =, intervalDataset, ., getEndYValue, (, series, ,, item, ), ;, }]
[,, item, ), ;, y1, =, intervalDataset, ., getEndYValue, (, series, ,, item, ), ;, }, else, {, y0, =]
[), ;, y1, =, intervalDataset, ., getEndYValue, (, series, ,, item, ), ;, }, else, {, y0, =, getBase, (]
[=, intervalDataset, ., getEndYValue, (, series, ,, item, ), ;, }, else, {, y0, =, getBase, (, ), ;, y1]
[;, }, else, {, y0, =, getBase, (, ), ;, y1, =, intervalDataset, ., getYValue, (, series, ,, item, )]
[., getEndYValue, (, series, ,, item, ), ;, }, else, {, y0, =, getBase, (, ), ;, y1, =, intervalDataset]
[,, item, ), ;, }, else, {, y0, =, getBase, (, ), ;, y1, =, intervalDataset, ., getYValue, (, series]
[), ;, }, else, {, y0, =, getBase, (, ), ;, y1, =, intervalDataset, ., getYValue, (, series, ,, item]
[=, getBase, (, ), ;, y1, =, intervalDataset, ., getYValue, (, series, ,, item, ), ;, }, if, (, Double]
[;, y1, =, intervalDataset, ., getYValue, (, series, ,, item, ), ;, }, if, (, Double, ., isNaN, (, y0]
[=, intervalDataset, ., getYValue, (, series, ,, item, ), ;, }, if, (, Double, ., isNaN, (, y0, ), ||]
[;, }, if, (, Double, ., isNaN, (, y0, ), ||, Double, ., isNaN, (, y1, ), ), {, return]
[., getYValue, (, series, ,, item, ), ;, }, if, (, Double, ., isNaN, (, y0, ), ||, Double, .]
[,, item, ), ;, }, if, (, Double, ., isNaN, (, y0, ), ||, Double, ., isNaN, (, y1, )]
[), ;, }, if, (, Double, ., isNaN, (, y0, ), ||, Double, ., isNaN, (, y1, ), ), {]
[), {, return, ;, }, double, yy0, =, rangeAxis, ., valueToJava2D, (, y0, ,, dataArea, ,, plot, ., getRangeAxisEdge, (]
[||, Double, ., isNaN, (, y1, ), ), {, return, ;, }, double, yy0, =, rangeAxis, ., valueToJava2D, (, y0]
[., isNaN, (, y0, ), ||, Double, ., isNaN, (, y1, ), ), {, return, ;, }, double, yy0, =]
[), ||, Double, ., isNaN, (, y1, ), ), {, return, ;, }, double, yy0, =, rangeAxis, ., valueToJava2D, (]
[), {, return, ;, }, double, yy0, =, rangeAxis, ., valueToJava2D, (, y0, ,, dataArea, ,, plot, ., getRangeAxisEdge, (]
[., isNaN, (, y1, ), ), {, return, ;, }, double, yy0, =, rangeAxis, ., valueToJava2D, (, y0, ,, dataArea]
[), ), {, return, ;, }, double, yy0, =, rangeAxis, ., valueToJava2D, (, y0, ,, dataArea, ,, plot, ., getRangeAxisEdge]
[;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y1, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, RectangleEdge]
[., valueToJava2D, (, y0, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D]
[,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y1, ,, dataArea]
[,, plot, ., getRangeAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y1, ,, dataArea, ,, plot]
[), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y1, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;]
[., getRangeAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y1, ,, dataArea, ,, plot, ., getRangeAxisEdge]
[;, RectangleEdge, xAxisLocation, =, plot, ., getDomainAxisEdge, (, ), ;, double, x0, =, intervalDataset, ., getStartXValue, (, series, ,, item]
[., valueToJava2D, (, y1, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, RectangleEdge, xAxisLocation, =, plot, ., getDomainAxisEdge]
[,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, RectangleEdge, xAxisLocation, =, plot, ., getDomainAxisEdge, (, ), ;, double]
[,, plot, ., getRangeAxisEdge, (, ), ), ;, RectangleEdge, xAxisLocation, =, plot, ., getDomainAxisEdge, (, ), ;, double, x0, =]
[), ;, RectangleEdge, xAxisLocation, =, plot, ., getDomainAxisEdge, (, ), ;, double, x0, =, intervalDataset, ., getStartXValue, (, series, ,]
[., getRangeAxisEdge, (, ), ), ;, RectangleEdge, xAxisLocation, =, plot, ., getDomainAxisEdge, (, ), ;, double, x0, =, intervalDataset, .]
[;, double, x0, =, intervalDataset, ., getStartXValue, (, series, ,, item, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (]
[., getDomainAxisEdge, (, ), ;, double, x0, =, intervalDataset, ., getStartXValue, (, series, ,, item, ), ;, double, xx0, =]
[;, double, xx0, =, domainAxis, ., valueToJava2D, (, x0, ,, dataArea, ,, xAxisLocation, ), ;, double, x1, =, intervalDataset, .]
[., getStartXValue, (, series, ,, item, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (, x0, ,, dataArea, ,, xAxisLocation]
[,, item, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (, x0, ,, dataArea, ,, xAxisLocation, ), ;, double, x1]
[), ;, double, xx0, =, domainAxis, ., valueToJava2D, (, x0, ,, dataArea, ,, xAxisLocation, ), ;, double, x1, =, intervalDataset]
[;, double, x1, =, intervalDataset, ., getEndXValue, (, series, ,, item, ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (]
[., valueToJava2D, (, x0, ,, dataArea, ,, xAxisLocation, ), ;, double, x1, =, intervalDataset, ., getEndXValue, (, series, ,, item]
[,, dataArea, ,, xAxisLocation, ), ;, double, x1, =, intervalDataset, ., getEndXValue, (, series, ,, item, ), ;, double, xx1]
[,, xAxisLocation, ), ;, double, x1, =, intervalDataset, ., getEndXValue, (, series, ,, item, ), ;, double, xx1, =, domainAxis]
[), ;, double, x1, =, intervalDataset, ., getEndXValue, (, series, ,, item, ), ;, double, xx1, =, domainAxis, ., valueToJava2D]
[;, double, xx1, =, domainAxis, ., valueToJava2D, (, x1, ,, dataArea, ,, xAxisLocation, ), ;, double, intervalW, =, xx1, -]
[., getEndXValue, (, series, ,, item, ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x1, ,, dataArea, ,, xAxisLocation]
[,, item, ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x1, ,, dataArea, ,, xAxisLocation, ), ;, double, intervalW]
[), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x1, ,, dataArea, ,, xAxisLocation, ), ;, double, intervalW, =, xx1]
[;, double, intervalW, =, xx1, -, xx0, ;, double, baseX, =, xx0, ;, if, (, this, ., centerBarAtStartValue, ), {]
[., valueToJava2D, (, x1, ,, dataArea, ,, xAxisLocation, ), ;, double, intervalW, =, xx1, -, xx0, ;, double, baseX, =]
[,, dataArea, ,, xAxisLocation, ), ;, double, intervalW, =, xx1, -, xx0, ;, double, baseX, =, xx0, ;, if, (]
[,, xAxisLocation, ), ;, double, intervalW, =, xx1, -, xx0, ;, double, baseX, =, xx0, ;, if, (, this, .]
[), ;, double, intervalW, =, xx1, -, xx0, ;, double, baseX, =, xx0, ;, if, (, this, ., centerBarAtStartValue, )]
[;, double, baseX, =, xx0, ;, if, (, this, ., centerBarAtStartValue, ), {, baseX, =, baseX, -, intervalW, /, 2.0]
[-, xx0, ;, double, baseX, =, xx0, ;, if, (, this, ., centerBarAtStartValue, ), {, baseX, =, baseX, -, intervalW]
[;, double, baseX, =, xx0, ;, if, (, this, ., centerBarAtStartValue, ), {, baseX, =, baseX, -, intervalW, /, 2.0]
[;, if, (, this, ., centerBarAtStartValue, ), {, baseX, =, baseX, -, intervalW, /, 2.0, ;, }, double, m, =]
[), {, baseX, =, baseX, -, intervalW, /, 2.0, ;, }, double, m, =, getMargin, (, ), ;, if, (]
[., centerBarAtStartValue, ), {, baseX, =, baseX, -, intervalW, /, 2.0, ;, }, double, m, =, getMargin, (, ), ;]
[=, baseX, -, intervalW, /, 2.0, ;, }, double, m, =, getMargin, (, ), ;, if, (, m, >, 0.0]
[;, }, double, m, =, getMargin, (, ), ;, if, (, m, >, 0.0, ), {, double, cut, =, intervalW]
[-, intervalW, /, 2.0, ;, }, double, m, =, getMargin, (, ), ;, if, (, m, >, 0.0, ), {]
[;, }, double, m, =, getMargin, (, ), ;, if, (, m, >, 0.0, ), {, double, cut, =, intervalW]
[/, 2.0, ;, }, double, m, =, getMargin, (, ), ;, if, (, m, >, 0.0, ), {, double, cut]
[;, }, double, m, =, getMargin, (, ), ;, if, (, m, >, 0.0, ), {, double, cut, =, intervalW]
[;, if, (, m, >, 0.0, ), {, double, cut, =, intervalW, *, getMargin, (, ), ;, intervalW, =, intervalW]
[), {, double, cut, =, intervalW, *, getMargin, (, ), ;, intervalW, =, intervalW, -, cut, ;, baseX, =, baseX]
[>, 0.0, ), {, double, cut, =, intervalW, *, getMargin, (, ), ;, intervalW, =, intervalW, -, cut, ;, baseX]
[), {, double, cut, =, intervalW, *, getMargin, (, ), ;, intervalW, =, intervalW, -, cut, ;, baseX, =, baseX]
[;, intervalW, =, intervalW, -, cut, ;, baseX, =, baseX, +, (, cut, /, 2, ), ;, }, double, intervalH]
[*, getMargin, (, ), ;, intervalW, =, intervalW, -, cut, ;, baseX, =, baseX, +, (, cut, /, 2, )]
[;, intervalW, =, intervalW, -, cut, ;, baseX, =, baseX, +, (, cut, /, 2, ), ;, }, double, intervalH]
[=, intervalW, -, cut, ;, baseX, =, baseX, +, (, cut, /, 2, ), ;, }, double, intervalH, =, Math]
[;, baseX, =, baseX, +, (, cut, /, 2, ), ;, }, double, intervalH, =, Math, ., abs, (, yy0]
[-, cut, ;, baseX, =, baseX, +, (, cut, /, 2, ), ;, }, double, intervalH, =, Math, ., abs]
[;, baseX, =, baseX, +, (, cut, /, 2, ), ;, }, double, intervalH, =, Math, ., abs, (, yy0]
[=, baseX, +, (, cut, /, 2, ), ;, }, double, intervalH, =, Math, ., abs, (, yy0, -, yy1]
[;, }, double, intervalH, =, Math, ., abs, (, yy0, -, yy1, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation]
[+, (, cut, /, 2, ), ;, }, double, intervalH, =, Math, ., abs, (, yy0, -, yy1, ), ;]
[;, }, double, intervalH, =, Math, ., abs, (, yy0, -, yy1, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation]
[), ;, }, double, intervalH, =, Math, ., abs, (, yy0, -, yy1, ), ;, PlotOrientation, orientation, =, plot, .]
[/, 2, ), ;, }, double, intervalH, =, Math, ., abs, (, yy0, -, yy1, ), ;, PlotOrientation, orientation, =]
[), ;, }, double, intervalH, =, Math, ., abs, (, yy0, -, yy1, ), ;, PlotOrientation, orientation, =, plot, .]
[;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, int, numSeries, =, dataset, ., getSeriesCount, (, ), ;, double]
[., abs, (, yy0, -, yy1, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, int, numSeries, =]
[), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, int, numSeries, =, dataset, ., getSeriesCount, (, ), ;]
[-, yy1, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, int, numSeries, =, dataset, ., getSeriesCount, (]
[), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, int, numSeries, =, dataset, ., getSeriesCount, (, ), ;]
[;, int, numSeries, =, dataset, ., getSeriesCount, (, ), ;, double, seriesBarWidth, =, intervalW, /, numSeries, ;, Rectangle2D, bar, =]
[., getOrientation, (, ), ;, int, numSeries, =, dataset, ., getSeriesCount, (, ), ;, double, seriesBarWidth, =, intervalW, /, numSeries]
[;, double, seriesBarWidth, =, intervalW, /, numSeries, ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL]
[., getSeriesCount, (, ), ;, double, seriesBarWidth, =, intervalW, /, numSeries, ;, Rectangle2D, bar, =, null, ;, if, (, orientation]
[;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, double, barY0, =, baseX, +]
[/, numSeries, ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, double, barY0, =]
[;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, double, barY0, =, baseX, +]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, double, barY0, =, baseX, +, (, seriesBarWidth, *, series, )]
[), {, double, barY0, =, baseX, +, (, seriesBarWidth, *, series, ), ;, double, barY1, =, barY0, +, seriesBarWidth, ;]
[==, PlotOrientation, ., HORIZONTAL, ), {, double, barY0, =, baseX, +, (, seriesBarWidth, *, series, ), ;, double, barY1, =]
[), {, double, barY0, =, baseX, +, (, seriesBarWidth, *, series, ), ;, double, barY1, =, barY0, +, seriesBarWidth, ;]
[., HORIZONTAL, ), {, double, barY0, =, baseX, +, (, seriesBarWidth, *, series, ), ;, double, barY1, =, barY0, +]
[;, double, barY1, =, barY0, +, seriesBarWidth, ;, double, rx, =, Math, ., min, (, yy0, ,, yy1, ), ;]
[+, (, seriesBarWidth, *, series, ), ;, double, barY1, =, barY0, +, seriesBarWidth, ;, double, rx, =, Math, ., min]
[;, double, barY1, =, barY0, +, seriesBarWidth, ;, double, rx, =, Math, ., min, (, yy0, ,, yy1, ), ;]
[), ;, double, barY1, =, barY0, +, seriesBarWidth, ;, double, rx, =, Math, ., min, (, yy0, ,, yy1, )]
[*, series, ), ;, double, barY1, =, barY0, +, seriesBarWidth, ;, double, rx, =, Math, ., min, (, yy0, ,]
[), ;, double, barY1, =, barY0, +, seriesBarWidth, ;, double, rx, =, Math, ., min, (, yy0, ,, yy1, )]
[;, double, rx, =, Math, ., min, (, yy0, ,, yy1, ), ;, double, rw, =, intervalH, ;, double, ry]
[+, seriesBarWidth, ;, double, rx, =, Math, ., min, (, yy0, ,, yy1, ), ;, double, rw, =, intervalH, ;]
[;, double, rx, =, Math, ., min, (, yy0, ,, yy1, ), ;, double, rw, =, intervalH, ;, double, ry]
[;, double, rw, =, intervalH, ;, double, ry, =, Math, ., min, (, barY0, ,, barY1, ), ;, double, rh]
[., min, (, yy0, ,, yy1, ), ;, double, rw, =, intervalH, ;, double, ry, =, Math, ., min, (]
[,, yy1, ), ;, double, rw, =, intervalH, ;, double, ry, =, Math, ., min, (, barY0, ,, barY1, )]
[), ;, double, rw, =, intervalH, ;, double, ry, =, Math, ., min, (, barY0, ,, barY1, ), ;, double]
[;, double, ry, =, Math, ., min, (, barY0, ,, barY1, ), ;, double, rh, =, Math, ., abs, (]
[;, double, rh, =, Math, ., abs, (, barY1, -, barY0, ), ;, bar, =, new, Rectangle2D, ., Double, (]
[., min, (, barY0, ,, barY1, ), ;, double, rh, =, Math, ., abs, (, barY1, -, barY0, ), ;]
[,, barY1, ), ;, double, rh, =, Math, ., abs, (, barY1, -, barY0, ), ;, bar, =, new, Rectangle2D]
[), ;, double, rh, =, Math, ., abs, (, barY1, -, barY0, ), ;, bar, =, new, Rectangle2D, ., Double]
[;, bar, =, new, Rectangle2D, ., Double, (, rx, ,, ry, ,, rw, ,, rh, ), ;, }, else, if]
[., abs, (, barY1, -, barY0, ), ;, bar, =, new, Rectangle2D, ., Double, (, rx, ,, ry, ,, rw]
[), ;, bar, =, new, Rectangle2D, ., Double, (, rx, ,, ry, ,, rw, ,, rh, ), ;, }, else]
[-, barY0, ), ;, bar, =, new, Rectangle2D, ., Double, (, rx, ,, ry, ,, rw, ,, rh, ), ;]
[), ;, bar, =, new, Rectangle2D, ., Double, (, rx, ,, ry, ,, rw, ,, rh, ), ;, }, else]
[=, new, Rectangle2D, ., Double, (, rx, ,, ry, ,, rw, ,, rh, ), ;, }, else, if, (, orientation]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, double, barX0, =, baseX, +, (, seriesBarWidth, *]
[,, ry, ,, rw, ,, rh, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, double]
[,, rw, ,, rh, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, double, barX0, =]
[,, rh, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, double, barX0, =, baseX, +]
[), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, double, barX0, =, baseX, +, (, seriesBarWidth]
[), {, double, barX0, =, baseX, +, (, seriesBarWidth, *, series, ), ;, double, barX1, =, barX0, +, seriesBarWidth, ;]
[==, PlotOrientation, ., VERTICAL, ), {, double, barX0, =, baseX, +, (, seriesBarWidth, *, series, ), ;, double, barX1, =]
[), {, double, barX0, =, baseX, +, (, seriesBarWidth, *, series, ), ;, double, barX1, =, barX0, +, seriesBarWidth, ;]
[., VERTICAL, ), {, double, barX0, =, baseX, +, (, seriesBarWidth, *, series, ), ;, double, barX1, =, barX0, +]
[;, double, barX1, =, barX0, +, seriesBarWidth, ;, double, rx, =, Math, ., min, (, barX0, ,, barX1, ), ;]
[+, (, seriesBarWidth, *, series, ), ;, double, barX1, =, barX0, +, seriesBarWidth, ;, double, rx, =, Math, ., min]
[;, double, barX1, =, barX0, +, seriesBarWidth, ;, double, rx, =, Math, ., min, (, barX0, ,, barX1, ), ;]
[), ;, double, barX1, =, barX0, +, seriesBarWidth, ;, double, rx, =, Math, ., min, (, barX0, ,, barX1, )]
[*, series, ), ;, double, barX1, =, barX0, +, seriesBarWidth, ;, double, rx, =, Math, ., min, (, barX0, ,]
[), ;, double, barX1, =, barX0, +, seriesBarWidth, ;, double, rx, =, Math, ., min, (, barX0, ,, barX1, )]
[;, double, rx, =, Math, ., min, (, barX0, ,, barX1, ), ;, double, rw, =, Math, ., abs, (]
[+, seriesBarWidth, ;, double, rx, =, Math, ., min, (, barX0, ,, barX1, ), ;, double, rw, =, Math, .]
[;, double, rx, =, Math, ., min, (, barX0, ,, barX1, ), ;, double, rw, =, Math, ., abs, (]
[;, double, rw, =, Math, ., abs, (, barX1, -, barX0, ), ;, double, ry, =, Math, ., min, (]
[., min, (, barX0, ,, barX1, ), ;, double, rw, =, Math, ., abs, (, barX1, -, barX0, ), ;]
[,, barX1, ), ;, double, rw, =, Math, ., abs, (, barX1, -, barX0, ), ;, double, ry, =, Math]
[), ;, double, rw, =, Math, ., abs, (, barX1, -, barX0, ), ;, double, ry, =, Math, ., min]
[;, double, ry, =, Math, ., min, (, yy0, ,, yy1, ), ;, double, rh, =, intervalH, ;, bar, =]
[., abs, (, barX1, -, barX0, ), ;, double, ry, =, Math, ., min, (, yy0, ,, yy1, ), ;]
[), ;, double, ry, =, Math, ., min, (, yy0, ,, yy1, ), ;, double, rh, =, intervalH, ;, bar]
[-, barX0, ), ;, double, ry, =, Math, ., min, (, yy0, ,, yy1, ), ;, double, rh, =, intervalH]
[), ;, double, ry, =, Math, ., min, (, yy0, ,, yy1, ), ;, double, rh, =, intervalH, ;, bar]
[;, double, rh, =, intervalH, ;, bar, =, new, Rectangle2D, ., Double, (, rx, ,, ry, ,, rw, ,, rh]
[., min, (, yy0, ,, yy1, ), ;, double, rh, =, intervalH, ;, bar, =, new, Rectangle2D, ., Double, (]
[,, yy1, ), ;, double, rh, =, intervalH, ;, bar, =, new, Rectangle2D, ., Double, (, rx, ,, ry, ,]
[), ;, double, rh, =, intervalH, ;, bar, =, new, Rectangle2D, ., Double, (, rx, ,, ry, ,, rw, ,]
[;, bar, =, new, Rectangle2D, ., Double, (, rx, ,, ry, ,, rw, ,, rh, ), ;, }, boolean, positive]
[=, new, Rectangle2D, ., Double, (, rx, ,, ry, ,, rw, ,, rh, ), ;, }, boolean, positive, =, (]
[;, }, boolean, positive, =, (, y1, >, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;]
[,, ry, ,, rw, ,, rh, ), ;, }, boolean, positive, =, (, y1, >, 0.0, ), ;, boolean, inverted]
[,, rw, ,, rh, ), ;, }, boolean, positive, =, (, y1, >, 0.0, ), ;, boolean, inverted, =, rangeAxis]
[,, rh, ), ;, }, boolean, positive, =, (, y1, >, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted]
[), ;, }, boolean, positive, =, (, y1, >, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, )]
[;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, .]
[>, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, .]
[;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !]
[., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive]
[), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT]
[==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase]
[), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT]
[., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge]
[&&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase]
[||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[&&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;]
[&&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted]
[., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&]
[=, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =]
[., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {]
[), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if]
[||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, .]
[&&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase]
[||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, .]
[||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, .]
[), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if]
[&&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }]
[&&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }]
[), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if]
[=, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if, (, pass, ==]
[;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if, (, pass, ==, 0, &&, getShadowsVisible, (]
[., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if, (, pass, ==, 0, &&]
[=, RectangleEdge, ., TOP, ;, }, }, if, (, pass, ==, 0, &&, getShadowsVisible, (, ), ), {, getBarPainter, (]
[;, }, }, if, (, pass, ==, 0, &&, getShadowsVisible, (, ), ), {, getBarPainter, (, ), ., paintBarShadow, (]
[., TOP, ;, }, }, if, (, pass, ==, 0, &&, getShadowsVisible, (, ), ), {, getBarPainter, (, ), .]
[), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,]
[&&, getShadowsVisible, (, ), ), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, series, ,, item, ,]
[==, 0, &&, getShadowsVisible, (, ), ), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, series, ,]
[&&, getShadowsVisible, (, ), ), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, series, ,, item, ,]
[), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,]
[;, }, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, series]
[., paintBarShadow, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ,, !, getUseYInterval, (]
[,, this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ,, !, getUseYInterval, (, ), ), ;, }]
[,, series, ,, item, ,, selected, ,, bar, ,, barBase, ,, !, getUseYInterval, (, ), ), ;, }, if, (]
[,, item, ,, selected, ,, bar, ,, barBase, ,, !, getUseYInterval, (, ), ), ;, }, if, (, pass, ==]
[,, selected, ,, bar, ,, barBase, ,, !, getUseYInterval, (, ), ), ;, }, if, (, pass, ==, 1, )]
[,, bar, ,, barBase, ,, !, getUseYInterval, (, ), ), ;, }, if, (, pass, ==, 1, ), {, getBarPainter]
[,, barBase, ,, !, getUseYInterval, (, ), ), ;, }, if, (, pass, ==, 1, ), {, getBarPainter, (, )]
[,, !, getUseYInterval, (, ), ), ;, }, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar]
[), ;, }, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,]
[), ;, }, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,]
[), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,]
[==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, series, ,, item, ,, selected, ,]
[), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,]
[;, if, (, isItemLabelVisible, (, series, ,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,]
[., paintBar, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ), ;, if, (]
[,, this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ), ;, if, (, isItemLabelVisible, (, series, ,]
[,, series, ,, item, ,, selected, ,, bar, ,, barBase, ), ;, if, (, isItemLabelVisible, (, series, ,, item, ,]
[,, item, ,, selected, ,, bar, ,, barBase, ), ;, if, (, isItemLabelVisible, (, series, ,, item, ,, selected, )]
[,, selected, ,, bar, ,, barBase, ), ;, if, (, isItemLabelVisible, (, series, ,, item, ,, selected, ), ), {]
[,, bar, ,, barBase, ), ;, if, (, isItemLabelVisible, (, series, ,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator]
[,, barBase, ), ;, if, (, isItemLabelVisible, (, series, ,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator]
[), ;, if, (, isItemLabelVisible, (, series, ,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series]
[), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot, ,]
[,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;, drawItemLabelForBar]
[,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2]
[), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot]
[;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,, bar, ,, y1]
[,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,]
[,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,]
[), ;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,, bar, ,]
[;, }, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =, state, ., getInfo, (]
[,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,, bar, ,, y1, <, 0.0, ), ;]
[,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,, bar, ,, y1, <, 0.0, ), ;, }, if]
[,, series, ,, item, ,, selected, ,, generator, ,, bar, ,, y1, <, 0.0, ), ;, }, if, (, state]
[,, item, ,, selected, ,, generator, ,, bar, ,, y1, <, 0.0, ), ;, }, if, (, state, ., getInfo]
[,, selected, ,, generator, ,, bar, ,, y1, <, 0.0, ), ;, }, if, (, state, ., getInfo, (, )]
[,, generator, ,, bar, ,, y1, <, 0.0, ), ;, }, if, (, state, ., getInfo, (, ), !=, null]
[,, bar, ,, y1, <, 0.0, ), ;, }, if, (, state, ., getInfo, (, ), !=, null, ), {]
[,, y1, <, 0.0, ), ;, }, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection, entities]
[), ;, }, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =, state, ., getInfo]
[<, 0.0, ), ;, }, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =, state]
[), ;, }, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =, state, ., getInfo]
[), {, EntityCollection, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if]
[!=, null, ), {, EntityCollection, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, )]
[., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =, state, ., getInfo, (, ), ., getOwner, (, )]
[), {, EntityCollection, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,, item, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,, item, ,, selected, ,, bar, ., getCenterX, (]
[!=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,, item, ,, selected, ,, bar, .]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,, item, ,, selected, ,, bar, ., getCenterX, (]
[;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[,, bar, ,, dataset, ,, series, ,, item, ,, selected, ,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY]
[,, dataset, ,, series, ,, item, ,, selected, ,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY, (, )]
[,, series, ,, item, ,, selected, ,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY, (, ), ), ;]
[,, item, ,, selected, ,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY, (, ), ), ;, }, }]
[,, selected, ,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY, (, ), ), ;, }, }, }, }]
[,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY, (, ), ), ;, }, }, }, }, public, boolean]
[,, bar, ., getCenterY, (, ), ), ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {]
[., getCenterX, (, ), ,, bar, ., getCenterY, (, ), ), ;, }, }, }, }, public, boolean, equals, (]
[), ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[., getCenterY, (, ), ), ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, ClusteredXYBarRenderer, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, ClusteredXYBarRenderer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, ClusteredXYBarRenderer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, ClusteredXYBarRenderer, ), ), {, return, false, ;, }, ClusteredXYBarRenderer, that, =, (]
[), {, return, false, ;, }, ClusteredXYBarRenderer, that, =, (, ClusteredXYBarRenderer, ), obj, ;, if, (, this, ., centerBarAtStartValue, !=]
[), {, return, false, ;, }, ClusteredXYBarRenderer, that, =, (, ClusteredXYBarRenderer, ), obj, ;, if, (, this, ., centerBarAtStartValue, !=]
[), ), {, return, false, ;, }, ClusteredXYBarRenderer, that, =, (, ClusteredXYBarRenderer, ), obj, ;, if, (, this, ., centerBarAtStartValue]
[instanceof, ClusteredXYBarRenderer, ), ), {, return, false, ;, }, ClusteredXYBarRenderer, that, =, (, ClusteredXYBarRenderer, ), obj, ;, if, (, this]
[;, }, ClusteredXYBarRenderer, that, =, (, ClusteredXYBarRenderer, ), obj, ;, if, (, this, ., centerBarAtStartValue, !=, that, ., centerBarAtStartValue, )]
[;, if, (, this, ., centerBarAtStartValue, !=, that, ., centerBarAtStartValue, ), {, return, false, ;, }, return, super, ., equals]
[;, if, (, this, ., centerBarAtStartValue, !=, that, ., centerBarAtStartValue, ), {, return, false, ;, }, return, super, ., equals]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, )]
[!=, that, ., centerBarAtStartValue, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public]
[., centerBarAtStartValue, !=, that, ., centerBarAtStartValue, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, )]
[., centerBarAtStartValue, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, }]
[., equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (]
[), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, }]
[;, }, }]
[., clone, (, ), ;, }, }]
