[IntervalXYDataset, ;, public, class, DynamicTimeSeriesCollection, extends, AbstractIntervalXYDataset, implements, IntervalXYDataset, ,, DomainInfo, ,, RangeInfo, {, public, static, final, int, START, =]
[IntervalXYDataset, ,, DomainInfo, ,, RangeInfo, {, public, static, final, int, START, =, 0, ;, public, static, final, int, MIDDLE, =]
[final, int, START, =, 0, ;, public, static, final, int, MIDDLE, =, 1, ;, public, static, final, int, END, =]
[public, static, final, int, MIDDLE, =, 1, ;, public, static, final, int, END, =, 2, ;, private, int, maximumItemCount, =]
[private, int, maximumItemCount, =, 2000, ;, protected, int, historyCount, ;, private, Comparable, [, ], seriesKeys, ;, private, Class, timePeriodClass, =]
[private, int, seriesCount, ;, protected, class, ValueSequence, {, float, [, ], dataPoints, ;, public, ValueSequence, (, ), {, this, (]
[private, int, seriesCount, ;, protected, class, ValueSequence, {, float, [, ], dataPoints, ;, public, ValueSequence, (, ), {, this, (]
[(, ), {, this, (, DynamicTimeSeriesCollection, ., this, ., maximumItemCount, ), ;, }, public, ValueSequence, (, int, length, ), {]
[(, ), {, this, (, DynamicTimeSeriesCollection, ., this, ., maximumItemCount, ), ;, }, public, ValueSequence, (, int, length, ), {]
[(, DynamicTimeSeriesCollection, ., this, ., maximumItemCount, ), ;, }, public, ValueSequence, (, int, length, ), {, this, ., dataPoints, =]
[this, ., maximumItemCount, ), ;, }, public, ValueSequence, (, int, length, ), {, this, ., dataPoints, =, new, float, []
[(, int, length, ), {, this, ., dataPoints, =, new, float, [, length, ], ;, for, (, int, i, =]
[length, ), {, this, ., dataPoints, =, new, float, [, length, ], ;, for, (, int, i, =, 0, ;]
[length, ), {, this, ., dataPoints, =, new, float, [, length, ], ;, for, (, int, i, =, 0, ;]
[{, this, ., dataPoints, =, new, float, [, length, ], ;, for, (, int, i, =, 0, ;, i, <]
[., dataPoints, =, new, float, [, length, ], ;, for, (, int, i, =, 0, ;, i, <, length, ;]
[., dataPoints, =, new, float, [, length, ], ;, for, (, int, i, =, 0, ;, i, <, length, ;]
[float, [, length, ], ;, for, (, int, i, =, 0, ;, i, <, length, ;, i, ++, ), {]
[float, [, length, ], ;, for, (, int, i, =, 0, ;, i, <, length, ;, i, ++, ), {]
[float, [, length, ], ;, for, (, int, i, =, 0, ;, i, <, length, ;, i, ++, ), {]
[;, for, (, int, i, =, 0, ;, i, <, length, ;, i, ++, ), {, this, ., dataPoints, []
[int, i, =, 0, ;, i, <, length, ;, i, ++, ), {, this, ., dataPoints, [, i, ], =]
[dataPoints, [, i, ], =, 0.0f, ;, }, }, public, void, enterData, (, int, index, ,, float, value, ), {]
[dataPoints, [, i, ], =, 0.0f, ;, }, }, public, void, enterData, (, int, index, ,, float, value, ), {]
[dataPoints, [, i, ], =, 0.0f, ;, }, }, public, void, enterData, (, int, index, ,, float, value, ), {]
[=, 0.0f, ;, }, }, public, void, enterData, (, int, index, ,, float, value, ), {, this, ., dataPoints, []
[}, }, public, void, enterData, (, int, index, ,, float, value, ), {, this, ., dataPoints, [, index, ], =]
[{, this, ., dataPoints, [, index, ], =, value, ;, }, public, float, getData, (, int, index, ), {, return]
[{, this, ., dataPoints, [, index, ], =, value, ;, }, public, float, getData, (, int, index, ), {, return]
[{, this, ., dataPoints, [, index, ], =, value, ;, }, public, float, getData, (, int, index, ), {, return]
[[, index, ], =, value, ;, }, public, float, getData, (, int, index, ), {, return, this, ., dataPoints, []
[private, long, deltaTime, ;, private, Long, domainStart, ;, private, Long, domainEnd, ;, private, Range, domainRange, ;, private, Float, minValue, =]
[;, private, Long, domainStart, ;, private, Long, domainEnd, ;, private, Range, domainRange, ;, private, Float, minValue, =, new, Float, (]
[domainEnd, ;, private, Range, domainRange, ;, private, Float, minValue, =, new, Float, (, 0.0f, ), ;, private, Float, maxValue, =]
[maxValue, =, null, ;, private, Range, valueRange, ;, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ), {, this, (]
[null, ;, private, Range, valueRange, ;, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ), {, this, (, nSeries, ,]
[private, Range, valueRange, ;, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ), {, this, (, nSeries, ,, nMoments, ,]
[DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ), {, this, (, nSeries, ,, nMoments, ,, new, Millisecond, (, ), ,]
[DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ), {, this, (, nSeries, ,, nMoments, ,, new, Millisecond, (, ), ,]
[), {, this, (, nSeries, ,, nMoments, ,, new, Millisecond, (, ), ,, TimeZone, ., getDefault, (, ), ), ;]
[), {, this, (, nSeries, ,, nMoments, ,, new, Millisecond, (, ), ,, TimeZone, ., getDefault, (, ), ), ;]
[nSeries, ,, nMoments, ,, new, Millisecond, (, ), ,, TimeZone, ., getDefault, (, ), ), ;, this, ., newestAt, =]
[nSeries, ,, nMoments, ,, new, Millisecond, (, ), ,, TimeZone, ., getDefault, (, ), ), ;, this, ., newestAt, =]
[nMoments, ,, new, Millisecond, (, ), ,, TimeZone, ., getDefault, (, ), ), ;, this, ., newestAt, =, nMoments, -]
[nMoments, -, 1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, TimeZone, zone, ), {, this, (]
[1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, TimeZone, zone, ), {, this, (, nSeries, ,]
[}, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, TimeZone, zone, ), {, this, (, nSeries, ,, nMoments, ,]
[nSeries, ,, int, nMoments, ,, TimeZone, zone, ), {, this, (, nSeries, ,, nMoments, ,, new, Millisecond, (, ), ,]
[nMoments, ,, TimeZone, zone, ), {, this, (, nSeries, ,, nMoments, ,, new, Millisecond, (, ), ,, zone, ), ;]
[nMoments, ,, TimeZone, zone, ), {, this, (, nSeries, ,, nMoments, ,, new, Millisecond, (, ), ,, zone, ), ;]
[), {, this, (, nSeries, ,, nMoments, ,, new, Millisecond, (, ), ,, zone, ), ;, this, ., newestAt, =]
[), {, this, (, nSeries, ,, nMoments, ,, new, Millisecond, (, ), ,, zone, ), ;, this, ., newestAt, =]
[this, (, nSeries, ,, nMoments, ,, new, Millisecond, (, ), ,, zone, ), ;, this, ., newestAt, =, nMoments, -]
[nMoments, -, 1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ), {, this, (]
[1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ), {, this, (, nSeries, ,]
[}, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ), {, this, (, nSeries, ,, nMoments, ,]
[DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ), {, this, (, nSeries, ,, nMoments, ,, timeSample, ,]
[DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ), {, this, (, nSeries, ,, nMoments, ,, timeSample, ,]
[), ), ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ,, TimeZone, zone, ), {]
[), ), ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ,, TimeZone, zone, ), {]
[public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ,, TimeZone, zone, ), {, this, ., maximumItemCount, =]
[(, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ,, TimeZone, zone, ), {, this, ., maximumItemCount, =, nMoments, ;]
[(, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ,, TimeZone, zone, ), {, this, ., maximumItemCount, =, nMoments, ;]
[int, nMoments, ,, RegularTimePeriod, timeSample, ,, TimeZone, zone, ), {, this, ., maximumItemCount, =, nMoments, ;, this, ., historyCount, =]
[,, RegularTimePeriod, timeSample, ,, TimeZone, zone, ), {, this, ., maximumItemCount, =, nMoments, ;, this, ., historyCount, =, nMoments, ;]
[,, RegularTimePeriod, timeSample, ,, TimeZone, zone, ), {, this, ., maximumItemCount, =, nMoments, ;, this, ., historyCount, =, nMoments, ;]
[TimeZone, zone, ), {, this, ., maximumItemCount, =, nMoments, ;, this, ., historyCount, =, nMoments, ;, this, ., seriesKeys, =]
[{, this, ., maximumItemCount, =, nMoments, ;, this, ., historyCount, =, nMoments, ;, this, ., seriesKeys, =, new, Comparable, []
[., historyCount, =, nMoments, ;, this, ., seriesKeys, =, new, Comparable, [, nSeries, ], ;, for, (, int, i, =]
[=, nMoments, ;, this, ., seriesKeys, =, new, Comparable, [, nSeries, ], ;, for, (, int, i, =, 0, ;]
[=, nMoments, ;, this, ., seriesKeys, =, new, Comparable, [, nSeries, ], ;, for, (, int, i, =, 0, ;]
[;, this, ., seriesKeys, =, new, Comparable, [, nSeries, ], ;, for, (, int, i, =, 0, ;, i, <]
[., seriesKeys, =, new, Comparable, [, nSeries, ], ;, for, (, int, i, =, 0, ;, i, <, nSeries, ;]
[., seriesKeys, =, new, Comparable, [, nSeries, ], ;, for, (, int, i, =, 0, ;, i, <, nSeries, ;]
[Comparable, [, nSeries, ], ;, for, (, int, i, =, 0, ;, i, <, nSeries, ;, i, ++, ), {]
[Comparable, [, nSeries, ], ;, for, (, int, i, =, 0, ;, i, <, nSeries, ;, i, ++, ), {]
[Comparable, [, nSeries, ], ;, for, (, int, i, =, 0, ;, i, <, nSeries, ;, i, ++, ), {]
[;, for, (, int, i, =, 0, ;, i, <, nSeries, ;, i, ++, ), {, this, ., seriesKeys, []
[int, i, =, 0, ;, i, <, nSeries, ;, i, ++, ), {, this, ., seriesKeys, [, i, ], =]
[0, ;, i, <, nSeries, ;, i, ++, ), {, this, ., seriesKeys, [, i, ], =, "", ;, }]
[0, ;, i, <, nSeries, ;, i, ++, ), {, this, ., seriesKeys, [, i, ], =, "", ;, }]
[nSeries, ;, i, ++, ), {, this, ., seriesKeys, [, i, ], =, "", ;, }, this, ., newestAt, =]
[nSeries, ;, i, ++, ), {, this, ., seriesKeys, [, i, ], =, "", ;, }, this, ., newestAt, =]
[i, ++, ), {, this, ., seriesKeys, [, i, ], =, "", ;, }, this, ., newestAt, =, nMoments, -]
[), {, this, ., seriesKeys, [, i, ], =, "", ;, }, this, ., newestAt, =, nMoments, -, 1, ;]
[), {, this, ., seriesKeys, [, i, ], =, "", ;, }, this, ., newestAt, =, nMoments, -, 1, ;]
[seriesKeys, [, i, ], =, "", ;, }, this, ., newestAt, =, nMoments, -, 1, ;, this, ., valueHistory, =]
[], =, "", ;, }, this, ., newestAt, =, nMoments, -, 1, ;, this, ., valueHistory, =, new, ValueSequence, []
[;, }, this, ., newestAt, =, nMoments, -, 1, ;, this, ., valueHistory, =, new, ValueSequence, [, nSeries, ], ;]
[;, }, this, ., newestAt, =, nMoments, -, 1, ;, this, ., valueHistory, =, new, ValueSequence, [, nSeries, ], ;]
[newestAt, =, nMoments, -, 1, ;, this, ., valueHistory, =, new, ValueSequence, [, nSeries, ], ;, this, ., timePeriodClass, =]
[newestAt, =, nMoments, -, 1, ;, this, ., valueHistory, =, new, ValueSequence, [, nSeries, ], ;, this, ., timePeriodClass, =]
[valueHistory, =, new, ValueSequence, [, nSeries, ], ;, this, ., timePeriodClass, =, timeSample, ., getClass, (, ), ;, if, (]
[valueHistory, =, new, ValueSequence, [, nSeries, ], ;, this, ., timePeriodClass, =, timeSample, ., getClass, (, ), ;, if, (]
[valueHistory, =, new, ValueSequence, [, nSeries, ], ;, this, ., timePeriodClass, =, timeSample, ., getClass, (, ), ;, if, (]
[[, nSeries, ], ;, this, ., timePeriodClass, =, timeSample, ., getClass, (, ), ;, if, (, this, ., timePeriodClass, ==]
[., timePeriodClass, =, timeSample, ., getClass, (, ), ;, if, (, this, ., timePeriodClass, ==, Second, ., class, ), {]
[., timePeriodClass, =, timeSample, ., getClass, (, ), ;, if, (, this, ., timePeriodClass, ==, Second, ., class, ), {]
[., getClass, (, ), ;, if, (, this, ., timePeriodClass, ==, Second, ., class, ), {, this, ., pointsInTime, =]
[), ;, if, (, this, ., timePeriodClass, ==, Second, ., class, ), {, this, ., pointsInTime, =, new, Second, []
[==, Second, ., class, ), {, this, ., pointsInTime, =, new, Second, [, nMoments, ], ;, }, else, if, (]
[==, Second, ., class, ), {, this, ., pointsInTime, =, new, Second, [, nMoments, ], ;, }, else, if, (]
[==, Second, ., class, ), {, this, ., pointsInTime, =, new, Second, [, nMoments, ], ;, }, else, if, (]
[), {, this, ., pointsInTime, =, new, Second, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==]
[=, new, Second, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==, Minute, ., class, ), {]
[=, new, Second, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==, Minute, ., class, ), {]
[nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==, Minute, ., class, ), {, this, ., pointsInTime, =]
[}, else, if, (, this, ., timePeriodClass, ==, Minute, ., class, ), {, this, ., pointsInTime, =, new, Minute, []
[==, Minute, ., class, ), {, this, ., pointsInTime, =, new, Minute, [, nMoments, ], ;, }, else, if, (]
[==, Minute, ., class, ), {, this, ., pointsInTime, =, new, Minute, [, nMoments, ], ;, }, else, if, (]
[==, Minute, ., class, ), {, this, ., pointsInTime, =, new, Minute, [, nMoments, ], ;, }, else, if, (]
[), {, this, ., pointsInTime, =, new, Minute, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==]
[=, new, Minute, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==, Hour, ., class, ), {]
[=, new, Minute, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==, Hour, ., class, ), {]
[nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==, Hour, ., class, ), {, this, ., pointsInTime, =]
[}, else, if, (, this, ., timePeriodClass, ==, Hour, ., class, ), {, this, ., pointsInTime, =, new, Hour, []
[this, ., timePeriodClass, ==, Hour, ., class, ), {, this, ., pointsInTime, =, new, Hour, [, nMoments, ], ;, }]
[this, ., timePeriodClass, ==, Hour, ., class, ), {, this, ., pointsInTime, =, new, Hour, [, nMoments, ], ;, }]
[Hour, ., class, ), {, this, ., pointsInTime, =, new, Hour, [, nMoments, ], ;, }, this, ., workingCalendar, =]
[Hour, ., class, ), {, this, ., pointsInTime, =, new, Hour, [, nMoments, ], ;, }, this, ., workingCalendar, =]
[{, this, ., pointsInTime, =, new, Hour, [, nMoments, ], ;, }, this, ., workingCalendar, =, Calendar, ., getInstance, (]
[pointsInTime, =, new, Hour, [, nMoments, ], ;, }, this, ., workingCalendar, =, Calendar, ., getInstance, (, zone, ), ;]
[pointsInTime, =, new, Hour, [, nMoments, ], ;, }, this, ., workingCalendar, =, Calendar, ., getInstance, (, zone, ), ;]
[[, nMoments, ], ;, }, this, ., workingCalendar, =, Calendar, ., getInstance, (, zone, ), ;, this, ., position, =]
[], ;, }, this, ., workingCalendar, =, Calendar, ., getInstance, (, zone, ), ;, this, ., position, =, START, ;]
[], ;, }, this, ., workingCalendar, =, Calendar, ., getInstance, (, zone, ), ;, this, ., position, =, START, ;]
[., workingCalendar, =, Calendar, ., getInstance, (, zone, ), ;, this, ., position, =, START, ;, this, ., domainIsPointsInTime, =]
[START, ;, this, ., domainIsPointsInTime, =, true, ;, }, public, synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if, (]
[START, ;, this, ., domainIsPointsInTime, =, true, ;, }, public, synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if, (]
[START, ;, this, ., domainIsPointsInTime, =, true, ;, }, public, synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if, (]
[START, ;, this, ., domainIsPointsInTime, =, true, ;, }, public, synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if, (]
[domainIsPointsInTime, =, true, ;, }, public, synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if, (, this, ., pointsInTime, []
[;, }, public, synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if, (, this, ., pointsInTime, [, 0, ], ==]
[synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if, (, this, ., pointsInTime, [, 0, ], ==, null, ), {]
[synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if, (, this, ., pointsInTime, [, 0, ], ==, null, ), {]
[synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if, (, this, ., pointsInTime, [, 0, ], ==, null, ), {]
[RegularTimePeriod, start, ), {, if, (, this, ., pointsInTime, [, 0, ], ==, null, ), {, this, ., pointsInTime, []
[{, if, (, this, ., pointsInTime, [, 0, ], ==, null, ), {, this, ., pointsInTime, [, 0, ], =]
[0, ], ==, null, ), {, this, ., pointsInTime, [, 0, ], =, start, ;, for, (, int, i, =]
[==, null, ), {, this, ., pointsInTime, [, 0, ], =, start, ;, for, (, int, i, =, 1, ;]
[==, null, ), {, this, ., pointsInTime, [, 0, ], =, start, ;, for, (, int, i, =, 1, ;]
[), {, this, ., pointsInTime, [, 0, ], =, start, ;, for, (, int, i, =, 1, ;, i, <]
[), {, this, ., pointsInTime, [, 0, ], =, start, ;, for, (, int, i, =, 1, ;, i, <]
[pointsInTime, [, 0, ], =, start, ;, for, (, int, i, =, 1, ;, i, <, this, ., historyCount, ;]
[pointsInTime, [, 0, ], =, start, ;, for, (, int, i, =, 1, ;, i, <, this, ., historyCount, ;]
[=, start, ;, for, (, int, i, =, 1, ;, i, <, this, ., historyCount, ;, i, ++, ), {]
[=, start, ;, for, (, int, i, =, 1, ;, i, <, this, ., historyCount, ;, i, ++, ), {]
[=, start, ;, for, (, int, i, =, 1, ;, i, <, this, ., historyCount, ;, i, ++, ), {]
[(, int, i, =, 1, ;, i, <, this, ., historyCount, ;, i, ++, ), {, this, ., pointsInTime, []
[=, 1, ;, i, <, this, ., historyCount, ;, i, ++, ), {, this, ., pointsInTime, [, i, ], =]
[=, 1, ;, i, <, this, ., historyCount, ;, i, ++, ), {, this, ., pointsInTime, [, i, ], =]
[=, 1, ;, i, <, this, ., historyCount, ;, i, ++, ), {, this, ., pointsInTime, [, i, ], =]
[=, 1, ;, i, <, this, ., historyCount, ;, i, ++, ), {, this, ., pointsInTime, [, i, ], =]
[<, this, ., historyCount, ;, i, ++, ), {, this, ., pointsInTime, [, i, ], =, this, ., pointsInTime, []
[<, this, ., historyCount, ;, i, ++, ), {, this, ., pointsInTime, [, i, ], =, this, ., pointsInTime, []
[., historyCount, ;, i, ++, ), {, this, ., pointsInTime, [, i, ], =, this, ., pointsInTime, [, i, -]
[], =, this, ., pointsInTime, [, i, -, 1, ], ., next, (, ), ;, }, }, long, oldestL, =]
[], =, this, ., pointsInTime, [, i, -, 1, ], ., next, (, ), ;, }, }, long, oldestL, =]
[], =, this, ., pointsInTime, [, i, -, 1, ], ., next, (, ), ;, }, }, long, oldestL, =]
[], =, this, ., pointsInTime, [, i, -, 1, ], ., next, (, ), ;, }, }, long, oldestL, =]
[pointsInTime, [, i, -, 1, ], ., next, (, ), ;, }, }, long, oldestL, =, this, ., pointsInTime, []
[], ., next, (, ), ;, }, }, long, oldestL, =, this, ., pointsInTime, [, 0, ], ., getFirstMillisecond, (]
[], ., next, (, ), ;, }, }, long, oldestL, =, this, ., pointsInTime, [, 0, ], ., getFirstMillisecond, (]
[long, oldestL, =, this, ., pointsInTime, [, 0, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, nextL, =]
[long, oldestL, =, this, ., pointsInTime, [, 0, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, nextL, =]
[long, oldestL, =, this, ., pointsInTime, [, 0, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, nextL, =]
[long, oldestL, =, this, ., pointsInTime, [, 0, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, nextL, =]
[., pointsInTime, [, 0, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, nextL, =, this, ., pointsInTime, []
[., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, nextL, =, this, ., pointsInTime, [, 1, ], ., getFirstMillisecond, (]
[., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, nextL, =, this, ., pointsInTime, [, 1, ], ., getFirstMillisecond, (]
[workingCalendar, ), ;, long, nextL, =, this, ., pointsInTime, [, 1, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;]
[workingCalendar, ), ;, long, nextL, =, this, ., pointsInTime, [, 1, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;]
[nextL, =, this, ., pointsInTime, [, 1, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, this, ., deltaTime, =]
[nextL, =, this, ., pointsInTime, [, 1, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, this, ., deltaTime, =]
[this, ., pointsInTime, [, 1, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, this, ., deltaTime, =, nextL, -]
[pointsInTime, [, 1, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, this, ., deltaTime, =, nextL, -, oldestL, ;]
[pointsInTime, [, 1, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, this, ., deltaTime, =, nextL, -, oldestL, ;]
[., getFirstMillisecond, (, this, ., workingCalendar, ), ;, this, ., deltaTime, =, nextL, -, oldestL, ;, this, ., oldestAt, =]
[(, this, ., workingCalendar, ), ;, this, ., deltaTime, =, nextL, -, oldestL, ;, this, ., oldestAt, =, 0, ;]
[(, this, ., workingCalendar, ), ;, this, ., deltaTime, =, nextL, -, oldestL, ;, this, ., oldestAt, =, 0, ;]
[), ;, this, ., deltaTime, =, nextL, -, oldestL, ;, this, ., oldestAt, =, 0, ;, this, ., newestAt, =]
[), ;, this, ., deltaTime, =, nextL, -, oldestL, ;, this, ., oldestAt, =, 0, ;, this, ., newestAt, =]
[), ;, this, ., deltaTime, =, nextL, -, oldestL, ;, this, ., oldestAt, =, 0, ;, this, ., newestAt, =]
[deltaTime, =, nextL, -, oldestL, ;, this, ., oldestAt, =, 0, ;, this, ., newestAt, =, this, ., historyCount, -]
[nextL, -, oldestL, ;, this, ., oldestAt, =, 0, ;, this, ., newestAt, =, this, ., historyCount, -, 1, ;]
[., oldestAt, =, 0, ;, this, ., newestAt, =, this, ., historyCount, -, 1, ;, findDomainLimits, (, ), ;, return]
[., oldestAt, =, 0, ;, this, ., newestAt, =, this, ., historyCount, -, 1, ;, findDomainLimits, (, ), ;, return]
[;, findDomainLimits, (, ), ;, return, this, ., deltaTime, ;, }, protected, void, findDomainLimits, (, ), {, long, startL, =]
[;, findDomainLimits, (, ), ;, return, this, ., deltaTime, ;, }, protected, void, findDomainLimits, (, ), {, long, startL, =]
[this, ., deltaTime, ;, }, protected, void, findDomainLimits, (, ), {, long, startL, =, getOldestTime, (, ), ., getFirstMillisecond, (]
[this, ., deltaTime, ;, }, protected, void, findDomainLimits, (, ), {, long, startL, =, getOldestTime, (, ), ., getFirstMillisecond, (]
[{, long, startL, =, getOldestTime, (, ), ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, endL, ;, if, (]
[{, long, startL, =, getOldestTime, (, ), ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, endL, ;, if, (]
[(, ), ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, endL, ;, if, (, this, ., domainIsPointsInTime, ), {]
[., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, endL, ;, if, (, this, ., domainIsPointsInTime, ), {, endL, =]
[., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, endL, ;, if, (, this, ., domainIsPointsInTime, ), {, endL, =]
[), ;, long, endL, ;, if, (, this, ., domainIsPointsInTime, ), {, endL, =, getNewestTime, (, ), ., getFirstMillisecond, (]
[), ;, long, endL, ;, if, (, this, ., domainIsPointsInTime, ), {, endL, =, getNewestTime, (, ), ., getFirstMillisecond, (]
[., domainIsPointsInTime, ), {, endL, =, getNewestTime, (, ), ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, }, else, {]
[), {, endL, =, getNewestTime, (, ), ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, }, else, {, endL, =]
[), {, endL, =, getNewestTime, (, ), ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, }, else, {, endL, =]
[), ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, }, else, {, endL, =, getNewestTime, (, ), ., getLastMillisecond, (]
[), ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, }, else, {, endL, =, getNewestTime, (, ), ., getLastMillisecond, (]
[workingCalendar, ), ;, }, else, {, endL, =, getNewestTime, (, ), ., getLastMillisecond, (, this, ., workingCalendar, ), ;, }]
[workingCalendar, ), ;, }, else, {, endL, =, getNewestTime, (, ), ., getLastMillisecond, (, this, ., workingCalendar, ), ;, }]
[else, {, endL, =, getNewestTime, (, ), ., getLastMillisecond, (, this, ., workingCalendar, ), ;, }, this, ., domainStart, =]
[=, getNewestTime, (, ), ., getLastMillisecond, (, this, ., workingCalendar, ), ;, }, this, ., domainStart, =, new, Long, (]
[), ., getLastMillisecond, (, this, ., workingCalendar, ), ;, }, this, ., domainStart, =, new, Long, (, startL, ), ;]
[), ., getLastMillisecond, (, this, ., workingCalendar, ), ;, }, this, ., domainStart, =, new, Long, (, startL, ), ;]
[this, ., workingCalendar, ), ;, }, this, ., domainStart, =, new, Long, (, startL, ), ;, this, ., domainEnd, =]
[), ;, }, this, ., domainStart, =, new, Long, (, startL, ), ;, this, ., domainEnd, =, new, Long, (]
[this, ., domainStart, =, new, Long, (, startL, ), ;, this, ., domainEnd, =, new, Long, (, endL, ), ;]
[this, ., domainStart, =, new, Long, (, startL, ), ;, this, ., domainEnd, =, new, Long, (, endL, ), ;]
[new, Long, (, startL, ), ;, this, ., domainEnd, =, new, Long, (, endL, ), ;, this, ., domainRange, =]
[startL, ), ;, this, ., domainEnd, =, new, Long, (, endL, ), ;, this, ., domainRange, =, new, Range, (]
[;, this, ., domainEnd, =, new, Long, (, endL, ), ;, this, ., domainRange, =, new, Range, (, startL, ,]
[this, ., domainRange, =, new, Range, (, startL, ,, endL, ), ;, }, public, int, getPosition, (, ), {, return]
[this, ., domainRange, =, new, Range, (, startL, ,, endL, ), ;, }, public, int, getPosition, (, ), {, return]
[public, int, getPosition, (, ), {, return, this, ., position, ;, }, public, void, setPosition, (, int, position, ), {]
[public, int, getPosition, (, ), {, return, this, ., position, ;, }, public, void, setPosition, (, int, position, ), {]
[), {, return, this, ., position, ;, }, public, void, setPosition, (, int, position, ), {, this, ., position, =]
[=, position, ;, }, public, void, addSeries, (, float, [, ], values, ,, int, seriesNumber, ,, Comparable, seriesKey, ), {]
[[, ], values, ,, int, seriesNumber, ,, Comparable, seriesKey, ), {, invalidateRangeInfo, (, ), ;, int, i, ;, if, (]
[[, ], values, ,, int, seriesNumber, ,, Comparable, seriesKey, ), {, invalidateRangeInfo, (, ), ;, int, i, ;, if, (]
[values, ,, int, seriesNumber, ,, Comparable, seriesKey, ), {, invalidateRangeInfo, (, ), ;, int, i, ;, if, (, values, ==]
[,, Comparable, seriesKey, ), {, invalidateRangeInfo, (, ), ;, int, i, ;, if, (, values, ==, null, ), {, throw]
[), {, invalidateRangeInfo, (, ), ;, int, i, ;, if, (, values, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, invalidateRangeInfo, (, ), ;, int, i, ;, if, (, values, ==, null, ), {, throw, new, IllegalArgumentException, (]
[invalidateRangeInfo, (, ), ;, int, i, ;, if, (, values, ==, null, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +]
[;, if, (, values, ==, null, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add null array of values.", ), ;, }, if, (]
[;, if, (, values, ==, null, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add null array of values.", ), ;, }, if, (]
[(, values, ==, null, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add null array of values.", ), ;, }, if, (, seriesNumber, >=]
[(, values, ==, null, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add null array of values.", ), ;, }, if, (, seriesNumber, >=]
[(, values, ==, null, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add null array of values.", ), ;, }, if, (, seriesNumber, >=]
[IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add null array of values.", ), ;, }, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw]
[+, "cannot add null array of values.", ), ;, }, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (]
[+, "cannot add null array of values.", ), ;, }, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (]
[), ;, }, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +]
[>=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (]
[>=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (]
[>=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (]
[>=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (]
[., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (, this, ., valueHistory, []
[{, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==]
[IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {]
[IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {]
[IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {]
["cannot add more series than specified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, []
[}, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =]
[this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (]
[this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (]
[], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;]
[], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;]
[], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;]
[seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }, int, srcLength, =]
[seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }, int, srcLength, =]
[., historyCount, ), ;, this, ., seriesCount, ++, ;, }, int, srcLength, =, values, ., length, ;, int, copyLength, =]
[., historyCount, ), ;, this, ., seriesCount, ++, ;, }, int, srcLength, =, values, ., length, ;, int, copyLength, =]
[++, ;, }, int, srcLength, =, values, ., length, ;, int, copyLength, =, this, ., historyCount, ;, boolean, fillNeeded, =]
[srcLength, =, values, ., length, ;, int, copyLength, =, this, ., historyCount, ;, boolean, fillNeeded, =, false, ;, if, (]
[srcLength, =, values, ., length, ;, int, copyLength, =, this, ., historyCount, ;, boolean, fillNeeded, =, false, ;, if, (]
[values, ., length, ;, int, copyLength, =, this, ., historyCount, ;, boolean, fillNeeded, =, false, ;, if, (, srcLength, <]
[values, ., length, ;, int, copyLength, =, this, ., historyCount, ;, boolean, fillNeeded, =, false, ;, if, (, srcLength, <]
[copyLength, =, this, ., historyCount, ;, boolean, fillNeeded, =, false, ;, if, (, srcLength, <, this, ., historyCount, ), {]
[this, ., historyCount, ;, boolean, fillNeeded, =, false, ;, if, (, srcLength, <, this, ., historyCount, ), {, fillNeeded, =]
[historyCount, ;, boolean, fillNeeded, =, false, ;, if, (, srcLength, <, this, ., historyCount, ), {, fillNeeded, =, true, ;]
[boolean, fillNeeded, =, false, ;, if, (, srcLength, <, this, ., historyCount, ), {, fillNeeded, =, true, ;, copyLength, =]
[if, (, srcLength, <, this, ., historyCount, ), {, fillNeeded, =, true, ;, copyLength, =, srcLength, ;, }, for, (]
[srcLength, <, this, ., historyCount, ), {, fillNeeded, =, true, ;, copyLength, =, srcLength, ;, }, for, (, i, =]
[this, ., historyCount, ), {, fillNeeded, =, true, ;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;]
[this, ., historyCount, ), {, fillNeeded, =, true, ;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;]
[historyCount, ), {, fillNeeded, =, true, ;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;, i, <]
[{, fillNeeded, =, true, ;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;, i, <, copyLength, ;]
[{, fillNeeded, =, true, ;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;, i, <, copyLength, ;]
[;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;, i, <, copyLength, ;, i, ++, ), {]
[;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;, i, <, copyLength, ;, i, ++, ), {]
[;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;, i, <, copyLength, ;, i, ++, ), {]
[;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;, i, <, copyLength, ;, i, ++, ), {]
[;, }, for, (, i, =, 0, ;, i, <, copyLength, ;, i, ++, ), {, this, ., valueHistory, []
[=, 0, ;, i, <, copyLength, ;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (]
[;, i, <, copyLength, ;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,]
[;, i, <, copyLength, ;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,]
[<, copyLength, ;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, values, []
[this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, values, [, i, ], ), ;, }, if, (]
[], ., enterData, (, i, ,, values, [, i, ], ), ;, }, if, (, fillNeeded, ), {, for, (]
[enterData, (, i, ,, values, [, i, ], ), ;, }, if, (, fillNeeded, ), {, for, (, i, =]
[i, ,, values, [, i, ], ), ;, }, if, (, fillNeeded, ), {, for, (, i, =, copyLength, ;]
[i, ,, values, [, i, ], ), ;, }, if, (, fillNeeded, ), {, for, (, i, =, copyLength, ;]
[values, [, i, ], ), ;, }, if, (, fillNeeded, ), {, for, (, i, =, copyLength, ;, i, <]
[values, [, i, ], ), ;, }, if, (, fillNeeded, ), {, for, (, i, =, copyLength, ;, i, <]
[), ;, }, if, (, fillNeeded, ), {, for, (, i, =, copyLength, ;, i, <, this, ., historyCount, ;]
[), ;, }, if, (, fillNeeded, ), {, for, (, i, =, copyLength, ;, i, <, this, ., historyCount, ;]
[(, fillNeeded, ), {, for, (, i, =, copyLength, ;, i, <, this, ., historyCount, ;, i, ++, ), {]
[(, fillNeeded, ), {, for, (, i, =, copyLength, ;, i, <, this, ., historyCount, ;, i, ++, ), {]
[(, fillNeeded, ), {, for, (, i, =, copyLength, ;, i, <, this, ., historyCount, ;, i, ++, ), {]
[(, fillNeeded, ), {, for, (, i, =, copyLength, ;, i, <, this, ., historyCount, ;, i, ++, ), {]
[for, (, i, =, copyLength, ;, i, <, this, ., historyCount, ;, i, ++, ), {, this, ., valueHistory, []
[;, i, <, this, ., historyCount, ;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (]
[<, this, ., historyCount, ;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,]
[), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, 0.0f, ), ;, }, }, if, (]
[), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, 0.0f, ), ;, }, }, if, (]
[this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, 0.0f, ), ;, }, }, if, (, seriesKey, !=]
[[, seriesNumber, ], ., enterData, (, i, ,, 0.0f, ), ;, }, }, if, (, seriesKey, !=, null, ), {]
[[, seriesNumber, ], ., enterData, (, i, ,, 0.0f, ), ;, }, }, if, (, seriesKey, !=, null, ), {]
[[, seriesNumber, ], ., enterData, (, i, ,, 0.0f, ), ;, }, }, if, (, seriesKey, !=, null, ), {]
[enterData, (, i, ,, 0.0f, ), ;, }, }, if, (, seriesKey, !=, null, ), {, this, ., seriesKeys, []
[,, 0.0f, ), ;, }, }, if, (, seriesKey, !=, null, ), {, this, ., seriesKeys, [, seriesNumber, ], =]
[;, }, }, if, (, seriesKey, !=, null, ), {, this, ., seriesKeys, [, seriesNumber, ], =, seriesKey, ;, }]
[=, seriesKey, ;, }, fireSeriesChanged, (, ), ;, }, public, void, setSeriesKey, (, int, seriesNumber, ,, Comparable, key, ), {]
[=, seriesKey, ;, }, fireSeriesChanged, (, ), ;, }, public, void, setSeriesKey, (, int, seriesNumber, ,, Comparable, key, ), {]
[=, seriesKey, ;, }, fireSeriesChanged, (, ), ;, }, public, void, setSeriesKey, (, int, seriesNumber, ,, Comparable, key, ), {]
[fireSeriesChanged, (, ), ;, }, public, void, setSeriesKey, (, int, seriesNumber, ,, Comparable, key, ), {, this, ., seriesKeys, []
[;, }, public, void, setSeriesKey, (, int, seriesNumber, ,, Comparable, key, ), {, this, ., seriesKeys, [, seriesNumber, ], =]
[seriesNumber, ], =, key, ;, }, public, void, addValue, (, int, seriesNumber, ,, int, index, ,, float, value, ), {]
[public, void, addValue, (, int, seriesNumber, ,, int, index, ,, float, value, ), {, invalidateRangeInfo, (, ), ;, if, (]
[public, void, addValue, (, int, seriesNumber, ,, int, index, ,, float, value, ), {, invalidateRangeInfo, (, ), ;, if, (]
[addValue, (, int, seriesNumber, ,, int, index, ,, float, value, ), {, invalidateRangeInfo, (, ), ;, if, (, seriesNumber, >=]
[addValue, (, int, seriesNumber, ,, int, index, ,, float, value, ), {, invalidateRangeInfo, (, ), ;, if, (, seriesNumber, >=]
[addValue, (, int, seriesNumber, ,, int, index, ,, float, value, ), {, invalidateRangeInfo, (, ), ;, if, (, seriesNumber, >=]
[float, value, ), {, invalidateRangeInfo, (, ), ;, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw]
[{, invalidateRangeInfo, (, ), ;, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (]
[{, invalidateRangeInfo, (, ), ;, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (]
[{, invalidateRangeInfo, (, ), ;, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (]
[(, ), ;, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +]
[;, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +, seriesNumber, +]
[., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (]
[., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (]
[., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (]
[., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (, this, ., valueHistory, []
[new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==]
["TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {]
["TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {]
["TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {]
["unspecified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, []
[}, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =]
[this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (]
[this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (]
[], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;]
[], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;]
[], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;]
[., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }]
[., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }]
[., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }]
[., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }]
[], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }, this, ., valueHistory, []
[this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }, this, ., valueHistory, [, seriesNumber, ], ., enterData, (]
[historyCount, ), ;, this, ., seriesCount, ++, ;, }, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, index, ,]
[this, ., seriesCount, ++, ;, }, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, index, ,, value, ), ;]
[., enterData, (, index, ,, value, ), ;, fireSeriesChanged, (, ), ;, }, public, int, getSeriesCount, (, ), {, return]
[., enterData, (, index, ,, value, ), ;, fireSeriesChanged, (, ), ;, }, public, int, getSeriesCount, (, ), {, return]
[int, getSeriesCount, (, ), {, return, this, ., seriesCount, ;, }, public, int, getItemCount, (, int, series, ), {, return]
[int, getSeriesCount, (, ), {, return, this, ., seriesCount, ;, }, public, int, getItemCount, (, int, series, ), {, return]
[int, series, ), {, return, this, ., historyCount, ;, }, protected, int, translateGet, (, int, toFetch, ), {, if, (]
[int, series, ), {, return, this, ., historyCount, ;, }, protected, int, translateGet, (, int, toFetch, ), {, if, (]
[int, series, ), {, return, this, ., historyCount, ;, }, protected, int, translateGet, (, int, toFetch, ), {, if, (]
[return, this, ., historyCount, ;, }, protected, int, translateGet, (, int, toFetch, ), {, if, (, this, ., oldestAt, ==]
[;, }, protected, int, translateGet, (, int, toFetch, ), {, if, (, this, ., oldestAt, ==, 0, ), {, return]
[int, toFetch, ), {, if, (, this, ., oldestAt, ==, 0, ), {, return, toFetch, ;, }, int, newIndex, =]
[int, toFetch, ), {, if, (, this, ., oldestAt, ==, 0, ), {, return, toFetch, ;, }, int, newIndex, =]
[), {, if, (, this, ., oldestAt, ==, 0, ), {, return, toFetch, ;, }, int, newIndex, =, toFetch, +]
[), {, if, (, this, ., oldestAt, ==, 0, ), {, return, toFetch, ;, }, int, newIndex, =, toFetch, +]
[oldestAt, ==, 0, ), {, return, toFetch, ;, }, int, newIndex, =, toFetch, +, this, ., oldestAt, ;, if, (]
[oldestAt, ==, 0, ), {, return, toFetch, ;, }, int, newIndex, =, toFetch, +, this, ., oldestAt, ;, if, (]
[0, ), {, return, toFetch, ;, }, int, newIndex, =, toFetch, +, this, ., oldestAt, ;, if, (, newIndex, >=]
[0, ), {, return, toFetch, ;, }, int, newIndex, =, toFetch, +, this, ., oldestAt, ;, if, (, newIndex, >=]
[;, }, int, newIndex, =, toFetch, +, this, ., oldestAt, ;, if, (, newIndex, >=, this, ., historyCount, ), {]
[int, newIndex, =, toFetch, +, this, ., oldestAt, ;, if, (, newIndex, >=, this, ., historyCount, ), {, newIndex, -=]
[int, newIndex, =, toFetch, +, this, ., oldestAt, ;, if, (, newIndex, >=, this, ., historyCount, ), {, newIndex, -=]
[., oldestAt, ;, if, (, newIndex, >=, this, ., historyCount, ), {, newIndex, -=, this, ., historyCount, ;, }, return]
[newIndex, -=, this, ., historyCount, ;, }, return, newIndex, ;, }, public, int, offsetFromNewest, (, int, delta, ), {, return]
[this, ., historyCount, ;, }, return, newIndex, ;, }, public, int, offsetFromNewest, (, int, delta, ), {, return, wrapOffset, (]
[this, ., historyCount, ;, }, return, newIndex, ;, }, public, int, offsetFromNewest, (, int, delta, ), {, return, wrapOffset, (]
[this, ., historyCount, ;, }, return, newIndex, ;, }, public, int, offsetFromNewest, (, int, delta, ), {, return, wrapOffset, (]
[}, return, newIndex, ;, }, public, int, offsetFromNewest, (, int, delta, ), {, return, wrapOffset, (, this, ., newestAt, +]
[return, wrapOffset, (, this, ., newestAt, +, delta, ), ;, }, public, int, offsetFromOldest, (, int, delta, ), {, return]
[(, this, ., newestAt, +, delta, ), ;, }, public, int, offsetFromOldest, (, int, delta, ), {, return, wrapOffset, (]
[(, this, ., newestAt, +, delta, ), ;, }, public, int, offsetFromOldest, (, int, delta, ), {, return, wrapOffset, (]
[(, this, ., newestAt, +, delta, ), ;, }, public, int, offsetFromOldest, (, int, delta, ), {, return, wrapOffset, (]
[+, delta, ), ;, }, public, int, offsetFromOldest, (, int, delta, ), {, return, wrapOffset, (, this, ., oldestAt, +]
[(, this, ., oldestAt, +, delta, ), ;, }, protected, int, wrapOffset, (, int, protoIndex, ), {, int, tmp, =]
[+, delta, ), ;, }, protected, int, wrapOffset, (, int, protoIndex, ), {, int, tmp, =, protoIndex, ;, if, (]
[+, delta, ), ;, }, protected, int, wrapOffset, (, int, protoIndex, ), {, int, tmp, =, protoIndex, ;, if, (]
[), ;, }, protected, int, wrapOffset, (, int, protoIndex, ), {, int, tmp, =, protoIndex, ;, if, (, tmp, >=]
[), ;, }, protected, int, wrapOffset, (, int, protoIndex, ), {, int, tmp, =, protoIndex, ;, if, (, tmp, >=]
[wrapOffset, (, int, protoIndex, ), {, int, tmp, =, protoIndex, ;, if, (, tmp, >=, this, ., historyCount, ), {]
[int, protoIndex, ), {, int, tmp, =, protoIndex, ;, if, (, tmp, >=, this, ., historyCount, ), {, tmp, -=]
[int, protoIndex, ), {, int, tmp, =, protoIndex, ;, if, (, tmp, >=, this, ., historyCount, ), {, tmp, -=]
[;, if, (, tmp, >=, this, ., historyCount, ), {, tmp, -=, this, ., historyCount, ;, }, else, if, (]
[;, if, (, tmp, >=, this, ., historyCount, ), {, tmp, -=, this, ., historyCount, ;, }, else, if, (]
[(, tmp, >=, this, ., historyCount, ), {, tmp, -=, this, ., historyCount, ;, }, else, if, (, tmp, <]
[this, ., historyCount, ), {, tmp, -=, this, ., historyCount, ;, }, else, if, (, tmp, <, 0, ), {]
[historyCount, ), {, tmp, -=, this, ., historyCount, ;, }, else, if, (, tmp, <, 0, ), {, tmp, +=]
[historyCount, ), {, tmp, -=, this, ., historyCount, ;, }, else, if, (, tmp, <, 0, ), {, tmp, +=]
[., historyCount, ;, }, else, if, (, tmp, <, 0, ), {, tmp, +=, this, ., historyCount, ;, }, return]
[+=, this, ., historyCount, ;, }, return, tmp, ;, }, public, synchronized, RegularTimePeriod, advanceTime, (, ), {, RegularTimePeriod, nextInstant, =]
[+=, this, ., historyCount, ;, }, return, tmp, ;, }, public, synchronized, RegularTimePeriod, advanceTime, (, ), {, RegularTimePeriod, nextInstant, =]
[+=, this, ., historyCount, ;, }, return, tmp, ;, }, public, synchronized, RegularTimePeriod, advanceTime, (, ), {, RegularTimePeriod, nextInstant, =]
[+=, this, ., historyCount, ;, }, return, tmp, ;, }, public, synchronized, RegularTimePeriod, advanceTime, (, ), {, RegularTimePeriod, nextInstant, =]
[;, }, return, tmp, ;, }, public, synchronized, RegularTimePeriod, advanceTime, (, ), {, RegularTimePeriod, nextInstant, =, this, ., pointsInTime, []
[;, }, return, tmp, ;, }, public, synchronized, RegularTimePeriod, advanceTime, (, ), {, RegularTimePeriod, nextInstant, =, this, ., pointsInTime, []
[advanceTime, (, ), {, RegularTimePeriod, nextInstant, =, this, ., pointsInTime, [, this, ., newestAt, ], ., next, (, ), ;]
[advanceTime, (, ), {, RegularTimePeriod, nextInstant, =, this, ., pointsInTime, [, this, ., newestAt, ], ., next, (, ), ;]
[RegularTimePeriod, nextInstant, =, this, ., pointsInTime, [, this, ., newestAt, ], ., next, (, ), ;, this, ., newestAt, =]
[RegularTimePeriod, nextInstant, =, this, ., pointsInTime, [, this, ., newestAt, ], ., next, (, ), ;, this, ., newestAt, =]
[this, ., newestAt, ], ., next, (, ), ;, this, ., newestAt, =, this, ., oldestAt, ;, boolean, extremaChanged, =]
[next, (, ), ;, this, ., newestAt, =, this, ., oldestAt, ;, boolean, extremaChanged, =, false, ;, float, oldMax, =]
[this, ., newestAt, =, this, ., oldestAt, ;, boolean, extremaChanged, =, false, ;, float, oldMax, =, 0.0f, ;, if, (]
[this, ., newestAt, =, this, ., oldestAt, ;, boolean, extremaChanged, =, false, ;, float, oldMax, =, 0.0f, ;, if, (]
[this, ., newestAt, =, this, ., oldestAt, ;, boolean, extremaChanged, =, false, ;, float, oldMax, =, 0.0f, ;, if, (]
[this, ., oldestAt, ;, boolean, extremaChanged, =, false, ;, float, oldMax, =, 0.0f, ;, if, (, this, ., maxValue, !=]
[;, boolean, extremaChanged, =, false, ;, float, oldMax, =, 0.0f, ;, if, (, this, ., maxValue, !=, null, ), {]
[extremaChanged, =, false, ;, float, oldMax, =, 0.0f, ;, if, (, this, ., maxValue, !=, null, ), {, oldMax, =]
[extremaChanged, =, false, ;, float, oldMax, =, 0.0f, ;, if, (, this, ., maxValue, !=, null, ), {, oldMax, =]
[extremaChanged, =, false, ;, float, oldMax, =, 0.0f, ;, if, (, this, ., maxValue, !=, null, ), {, oldMax, =]
[!=, null, ), {, oldMax, =, this, ., maxValue, ., floatValue, (, ), ;, }, for, (, int, s, =]
[), {, oldMax, =, this, ., maxValue, ., floatValue, (, ), ;, }, for, (, int, s, =, 0, ;]
[), {, oldMax, =, this, ., maxValue, ., floatValue, (, ), ;, }, for, (, int, s, =, 0, ;]
[oldMax, =, this, ., maxValue, ., floatValue, (, ), ;, }, for, (, int, s, =, 0, ;, s, <]
[maxValue, ., floatValue, (, ), ;, }, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;]
[maxValue, ., floatValue, (, ), ;, }, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;]
[}, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, if, (]
[}, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, if, (]
[}, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, if, (]
[}, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, if, (]
[}, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, if, (]
[s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, if, (, this, ., valueHistory, []
[<, getSeriesCount, (, ), ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ., getData, (]
[<, getSeriesCount, (, ), ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ., getData, (]
[s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ., getData, (, this, ., oldestAt, ), ==]
[{, if, (, this, ., valueHistory, [, s, ], ., getData, (, this, ., oldestAt, ), ==, oldMax, ), {]
[(, this, ., valueHistory, [, s, ], ., getData, (, this, ., oldestAt, ), ==, oldMax, ), {, extremaChanged, =]
[s, ], ., getData, (, this, ., oldestAt, ), ==, oldMax, ), {, extremaChanged, =, true, ;, }, if, (]
[==, oldMax, ), {, extremaChanged, =, true, ;, }, if, (, extremaChanged, ), {, break, ;, }, }, if, (]
[{, extremaChanged, =, true, ;, }, if, (, extremaChanged, ), {, break, ;, }, }, if, (, extremaChanged, ), {]
[extremaChanged, ), {, break, ;, }, }, if, (, extremaChanged, ), {, invalidateRangeInfo, (, ), ;, }, float, wiper, =]
[break, ;, }, }, if, (, extremaChanged, ), {, invalidateRangeInfo, (, ), ;, }, float, wiper, =, (, float, )]
[), {, invalidateRangeInfo, (, ), ;, }, float, wiper, =, (, float, ), 0.0, ;, for, (, int, s, =]
[invalidateRangeInfo, (, ), ;, }, float, wiper, =, (, float, ), 0.0, ;, for, (, int, s, =, 0, ;]
[invalidateRangeInfo, (, ), ;, }, float, wiper, =, (, float, ), 0.0, ;, for, (, int, s, =, 0, ;]
[), ;, }, float, wiper, =, (, float, ), 0.0, ;, for, (, int, s, =, 0, ;, s, <]
[wiper, =, (, float, ), 0.0, ;, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;]
[wiper, =, (, float, ), 0.0, ;, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;]
[), 0.0, ;, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {]
[), 0.0, ;, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {]
[), 0.0, ;, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {]
[), 0.0, ;, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {]
[(, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, this, ., valueHistory, []
[;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, this, ., valueHistory, [, s, ], ., enterData, (]
[;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, this, ., valueHistory, [, s, ], ., enterData, (]
[(, ), ;, s, ++, ), {, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,]
[++, ), {, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, wiper, ), ;, }]
[++, ), {, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, wiper, ), ;, }]
[++, ), {, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, wiper, ), ;, }]
[., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, wiper, ), ;, }, this, ., pointsInTime, []
[., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, wiper, ), ;, }, this, ., pointsInTime, []
[., enterData, (, this, ., newestAt, ,, wiper, ), ;, }, this, ., pointsInTime, [, this, ., newestAt, ], =]
[(, this, ., newestAt, ,, wiper, ), ;, }, this, ., pointsInTime, [, this, ., newestAt, ], =, nextInstant, ;]
[(, this, ., newestAt, ,, wiper, ), ;, }, this, ., pointsInTime, [, this, ., newestAt, ], =, nextInstant, ;]
[(, this, ., newestAt, ,, wiper, ), ;, }, this, ., pointsInTime, [, this, ., newestAt, ], =, nextInstant, ;]
[;, }, this, ., pointsInTime, [, this, ., newestAt, ], =, nextInstant, ;, this, ., oldestAt, ++, ;, if, (]
[;, }, this, ., pointsInTime, [, this, ., newestAt, ], =, nextInstant, ;, this, ., oldestAt, ++, ;, if, (]
[;, }, this, ., pointsInTime, [, this, ., newestAt, ], =, nextInstant, ;, this, ., oldestAt, ++, ;, if, (]
[pointsInTime, [, this, ., newestAt, ], =, nextInstant, ;, this, ., oldestAt, ++, ;, if, (, this, ., oldestAt, >=]
[pointsInTime, [, this, ., newestAt, ], =, nextInstant, ;, this, ., oldestAt, ++, ;, if, (, this, ., oldestAt, >=]
[], =, nextInstant, ;, this, ., oldestAt, ++, ;, if, (, this, ., oldestAt, >=, this, ., historyCount, ), {]
[], =, nextInstant, ;, this, ., oldestAt, ++, ;, if, (, this, ., oldestAt, >=, this, ., historyCount, ), {]
[this, ., oldestAt, ++, ;, if, (, this, ., oldestAt, >=, this, ., historyCount, ), {, this, ., oldestAt, =]
[(, this, ., oldestAt, >=, this, ., historyCount, ), {, this, ., oldestAt, =, 0, ;, }, long, startL, =]
[(, this, ., oldestAt, >=, this, ., historyCount, ), {, this, ., oldestAt, =, 0, ;, }, long, startL, =]
[(, this, ., oldestAt, >=, this, ., historyCount, ), {, this, ., oldestAt, =, 0, ;, }, long, startL, =]
[), {, this, ., oldestAt, =, 0, ;, }, long, startL, =, this, ., domainStart, ., longValue, (, ), ;]
[), {, this, ., oldestAt, =, 0, ;, }, long, startL, =, this, ., domainStart, ., longValue, (, ), ;]
[oldestAt, =, 0, ;, }, long, startL, =, this, ., domainStart, ., longValue, (, ), ;, this, ., domainStart, =]
[;, }, long, startL, =, this, ., domainStart, ., longValue, (, ), ;, this, ., domainStart, =, new, Long, (]
[;, }, long, startL, =, this, ., domainStart, ., longValue, (, ), ;, this, ., domainStart, =, new, Long, (]
[long, startL, =, this, ., domainStart, ., longValue, (, ), ;, this, ., domainStart, =, new, Long, (, startL, +]
[long, startL, =, this, ., domainStart, ., longValue, (, ), ;, this, ., domainStart, =, new, Long, (, startL, +]
[(, ), ;, this, ., domainStart, =, new, Long, (, startL, +, this, ., deltaTime, ), ;, long, endL, =]
[(, ), ;, this, ., domainStart, =, new, Long, (, startL, +, this, ., deltaTime, ), ;, long, endL, =]
[(, ), ;, this, ., domainStart, =, new, Long, (, startL, +, this, ., deltaTime, ), ;, long, endL, =]
[Long, (, startL, +, this, ., deltaTime, ), ;, long, endL, =, this, ., domainEnd, ., longValue, (, ), ;]
[Long, (, startL, +, this, ., deltaTime, ), ;, long, endL, =, this, ., domainEnd, ., longValue, (, ), ;]
[this, ., deltaTime, ), ;, long, endL, =, this, ., domainEnd, ., longValue, (, ), ;, this, ., domainEnd, =]
[), ;, long, endL, =, this, ., domainEnd, ., longValue, (, ), ;, this, ., domainEnd, =, new, Long, (]
[), ;, long, endL, =, this, ., domainEnd, ., longValue, (, ), ;, this, ., domainEnd, =, new, Long, (]
[long, endL, =, this, ., domainEnd, ., longValue, (, ), ;, this, ., domainEnd, =, new, Long, (, endL, +]
[long, endL, =, this, ., domainEnd, ., longValue, (, ), ;, this, ., domainEnd, =, new, Long, (, endL, +]
[domainEnd, ., longValue, (, ), ;, this, ., domainEnd, =, new, Long, (, endL, +, this, ., deltaTime, ), ;]
[domainEnd, ., longValue, (, ), ;, this, ., domainEnd, =, new, Long, (, endL, +, this, ., deltaTime, ), ;]
[), ;, this, ., domainEnd, =, new, Long, (, endL, +, this, ., deltaTime, ), ;, this, ., domainRange, =]
[., domainEnd, =, new, Long, (, endL, +, this, ., deltaTime, ), ;, this, ., domainRange, =, new, Range, (]
[=, new, Long, (, endL, +, this, ., deltaTime, ), ;, this, ., domainRange, =, new, Range, (, startL, ,]
[(, endL, +, this, ., deltaTime, ), ;, this, ., domainRange, =, new, Range, (, startL, ,, endL, ), ;]
[deltaTime, ), ;, this, ., domainRange, =, new, Range, (, startL, ,, endL, ), ;, fireSeriesChanged, (, ), ;, return]
[(, startL, ,, endL, ), ;, fireSeriesChanged, (, ), ;, return, nextInstant, ;, }, public, void, invalidateRangeInfo, (, ), {]
[(, startL, ,, endL, ), ;, fireSeriesChanged, (, ), ;, return, nextInstant, ;, }, public, void, invalidateRangeInfo, (, ), {]
[), ;, fireSeriesChanged, (, ), ;, return, nextInstant, ;, }, public, void, invalidateRangeInfo, (, ), {, this, ., maxValue, =]
[fireSeriesChanged, (, ), ;, return, nextInstant, ;, }, public, void, invalidateRangeInfo, (, ), {, this, ., maxValue, =, null, ;]
[fireSeriesChanged, (, ), ;, return, nextInstant, ;, }, public, void, invalidateRangeInfo, (, ), {, this, ., maxValue, =, null, ;]
[return, nextInstant, ;, }, public, void, invalidateRangeInfo, (, ), {, this, ., maxValue, =, null, ;, this, ., valueRange, =]
[maxValue, =, null, ;, this, ., valueRange, =, null, ;, }, protected, double, findMaxValue, (, ), {, double, max, =]
[=, null, ;, }, protected, double, findMaxValue, (, ), {, double, max, =, 0.0f, ;, for, (, int, s, =]
[;, }, protected, double, findMaxValue, (, ), {, double, max, =, 0.0f, ;, for, (, int, s, =, 0, ;]
[;, }, protected, double, findMaxValue, (, ), {, double, max, =, 0.0f, ;, for, (, int, s, =, 0, ;]
[protected, double, findMaxValue, (, ), {, double, max, =, 0.0f, ;, for, (, int, s, =, 0, ;, s, <]
[), {, double, max, =, 0.0f, ;, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;]
[), {, double, max, =, 0.0f, ;, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;]
[int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, for, (, int, i, =]
[=, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, for, (, int, i, =, 0, ;]
[=, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, for, (, int, i, =, 0, ;]
[;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, for, (, int, i, =, 0, ;, i, <]
[;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, for, (, int, i, =, 0, ;, i, <]
[(, ), ;, s, ++, ), {, for, (, int, i, =, 0, ;, i, <, this, ., historyCount, ;]
[(, ), ;, s, ++, ), {, for, (, int, i, =, 0, ;, i, <, this, ., historyCount, ;]
[for, (, int, i, =, 0, ;, i, <, this, ., historyCount, ;, i, ++, ), {, double, tmp, =]
[int, i, =, 0, ;, i, <, this, ., historyCount, ;, i, ++, ), {, double, tmp, =, getYValue, (]
[=, 0, ;, i, <, this, ., historyCount, ;, i, ++, ), {, double, tmp, =, getYValue, (, s, ,]
[this, ., historyCount, ;, i, ++, ), {, double, tmp, =, getYValue, (, s, ,, i, ), ;, if, (]
[this, ., historyCount, ;, i, ++, ), {, double, tmp, =, getYValue, (, s, ,, i, ), ;, if, (]
[historyCount, ;, i, ++, ), {, double, tmp, =, getYValue, (, s, ,, i, ), ;, if, (, tmp, >]
[++, ), {, double, tmp, =, getYValue, (, s, ,, i, ), ;, if, (, tmp, >, max, ), {]
[{, double, tmp, =, getYValue, (, s, ,, i, ), ;, if, (, tmp, >, max, ), {, max, =]
[s, ,, i, ), ;, if, (, tmp, >, max, ), {, max, =, tmp, ;, }, }, }, return]
[), {, max, =, tmp, ;, }, }, }, return, max, ;, }, public, int, getOldestIndex, (, ), {, return]
[), {, max, =, tmp, ;, }, }, }, return, max, ;, }, public, int, getOldestIndex, (, ), {, return]
[}, public, int, getOldestIndex, (, ), {, return, this, ., oldestAt, ;, }, public, int, getNewestIndex, (, ), {, return]
[}, public, int, getOldestIndex, (, ), {, return, this, ., oldestAt, ;, }, public, int, getNewestIndex, (, ), {, return]
[{, return, this, ., newestAt, ;, }, public, void, appendData, (, float, [, ], newData, ), {, int, nDataPoints, =]
[{, return, this, ., newestAt, ;, }, public, void, appendData, (, float, [, ], newData, ), {, int, nDataPoints, =]
[}, public, void, appendData, (, float, [, ], newData, ), {, int, nDataPoints, =, newData, ., length, ;, if, (]
[}, public, void, appendData, (, float, [, ], newData, ), {, int, nDataPoints, =, newData, ., length, ;, if, (]
[void, appendData, (, float, [, ], newData, ), {, int, nDataPoints, =, newData, ., length, ;, if, (, nDataPoints, >]
[void, appendData, (, float, [, ], newData, ), {, int, nDataPoints, =, newData, ., length, ;, if, (, nDataPoints, >]
[void, appendData, (, float, [, ], newData, ), {, int, nDataPoints, =, newData, ., length, ;, if, (, nDataPoints, >]
[{, int, nDataPoints, =, newData, ., length, ;, if, (, nDataPoints, >, this, ., valueHistory, ., length, ), {, throw]
[=, newData, ., length, ;, if, (, nDataPoints, >, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (]
[this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them in", ), ;, }, int, s, ;, for, (]
[valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them in", ), ;, }, int, s, ;, for, (, s, =]
[length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them in", ), ;, }, int, s, ;, for, (, s, =, 0, ;]
[length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them in", ), ;, }, int, s, ;, for, (, s, =, 0, ;]
[{, throw, new, IllegalArgumentException, (, "More data than series to put them in", ), ;, }, int, s, ;, for, (, s, =, 0, ;, s, <]
[new, IllegalArgumentException, (, "More data than series to put them in", ), ;, }, int, s, ;, for, (, s, =, 0, ;, s, <, nDataPoints, ;]
[new, IllegalArgumentException, (, "More data than series to put them in", ), ;, }, int, s, ;, for, (, s, =, 0, ;, s, <, nDataPoints, ;]
[}, int, s, ;, for, (, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (]
[}, int, s, ;, for, (, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (]
[}, int, s, ;, for, (, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (]
[}, int, s, ;, for, (, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (]
[for, (, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, []
[=, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==]
[s, <, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {]
[s, <, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {]
[s, <, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {]
[s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, []
[{, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, [, s, ], =]
[this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (]
[this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (]
[==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }]
[==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }]
[==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }]
[==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }]
[this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, []
[], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (]
[], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (]
[(, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,]
[(, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,]
[., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, newData, []
[this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, newData, [, s, ], ), ;, }]
[}, public, void, appendData, (, float, [, ], newData, ,, int, insertionIndex, ,, int, refresh, ), {, int, nDataPoints, =]
[}, public, void, appendData, (, float, [, ], newData, ,, int, insertionIndex, ,, int, refresh, ), {, int, nDataPoints, =]
[[, ], newData, ,, int, insertionIndex, ,, int, refresh, ), {, int, nDataPoints, =, newData, ., length, ;, if, (]
[[, ], newData, ,, int, insertionIndex, ,, int, refresh, ), {, int, nDataPoints, =, newData, ., length, ;, if, (]
[newData, ,, int, insertionIndex, ,, int, refresh, ), {, int, nDataPoints, =, newData, ., length, ;, if, (, nDataPoints, >]
[newData, ,, int, insertionIndex, ,, int, refresh, ), {, int, nDataPoints, =, newData, ., length, ;, if, (, nDataPoints, >]
[newData, ,, int, insertionIndex, ,, int, refresh, ), {, int, nDataPoints, =, newData, ., length, ;, if, (, nDataPoints, >]
[{, int, nDataPoints, =, newData, ., length, ;, if, (, nDataPoints, >, this, ., valueHistory, ., length, ), {, throw]
[=, newData, ., length, ;, if, (, nDataPoints, >, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (]
[=, newData, ., length, ;, if, (, nDataPoints, >, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (]
[., length, ;, if, (, nDataPoints, >, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them ", +]
[valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them ", +, "in", ), ;, }, for, (, int, s, =]
[length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them ", +, "in", ), ;, }, for, (, int, s, =, 0, ;]
[length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them ", +, "in", ), ;, }, for, (, int, s, =, 0, ;]
[{, throw, new, IllegalArgumentException, (, "More data than series to put them ", +, "in", ), ;, }, for, (, int, s, =, 0, ;, s, <]
[new, IllegalArgumentException, (, "More data than series to put them ", +, "in", ), ;, }, for, (, int, s, =, 0, ;, s, <, nDataPoints, ;]
[new, IllegalArgumentException, (, "More data than series to put them ", +, "in", ), ;, }, for, (, int, s, =, 0, ;, s, <, nDataPoints, ;]
[), ;, }, for, (, int, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (]
[), ;, }, for, (, int, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (]
[), ;, }, for, (, int, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (]
[), ;, }, for, (, int, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (]
[(, int, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, []
[=, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==]
[s, <, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {]
[s, <, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {]
[s, <, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {]
[s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, []
[{, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, [, s, ], =]
[this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (]
[this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (]
[==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }]
[==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }]
[==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }]
[==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }]
[this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, []
[], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (]
[new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (, insertionIndex, ,]
[new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (, insertionIndex, ,]
[(, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (, insertionIndex, ,, newData, []
[this, ., valueHistory, [, s, ], ., enterData, (, insertionIndex, ,, newData, [, s, ], ), ;, }, if, (]
[this, ., valueHistory, [, s, ], ., enterData, (, insertionIndex, ,, newData, [, s, ], ), ;, }, if, (]
[valueHistory, [, s, ], ., enterData, (, insertionIndex, ,, newData, [, s, ], ), ;, }, if, (, refresh, >]
[], ., enterData, (, insertionIndex, ,, newData, [, s, ], ), ;, }, if, (, refresh, >, 0, ), {]
[], ., enterData, (, insertionIndex, ,, newData, [, s, ], ), ;, }, if, (, refresh, >, 0, ), {]
[,, newData, [, s, ], ), ;, }, if, (, refresh, >, 0, ), {, insertionIndex, ++, ;, if, (]
[,, newData, [, s, ], ), ;, }, if, (, refresh, >, 0, ), {, insertionIndex, ++, ;, if, (]
[,, newData, [, s, ], ), ;, }, if, (, refresh, >, 0, ), {, insertionIndex, ++, ;, if, (]
[[, s, ], ), ;, }, if, (, refresh, >, 0, ), {, insertionIndex, ++, ;, if, (, insertionIndex, %]
[], ), ;, }, if, (, refresh, >, 0, ), {, insertionIndex, ++, ;, if, (, insertionIndex, %, refresh, ==]
[}, if, (, refresh, >, 0, ), {, insertionIndex, ++, ;, if, (, insertionIndex, %, refresh, ==, 0, ), {]
[%, refresh, ==, 0, ), {, fireSeriesChanged, (, ), ;, }, }, }, public, RegularTimePeriod, getNewestTime, (, ), {, return]
[%, refresh, ==, 0, ), {, fireSeriesChanged, (, ), ;, }, }, }, public, RegularTimePeriod, getNewestTime, (, ), {, return]
[%, refresh, ==, 0, ), {, fireSeriesChanged, (, ), ;, }, }, }, public, RegularTimePeriod, getNewestTime, (, ), {, return]
[), {, fireSeriesChanged, (, ), ;, }, }, }, public, RegularTimePeriod, getNewestTime, (, ), {, return, this, ., pointsInTime, []
[), {, fireSeriesChanged, (, ), ;, }, }, }, public, RegularTimePeriod, getNewestTime, (, ), {, return, this, ., pointsInTime, []
[), {, return, this, ., pointsInTime, [, this, ., newestAt, ], ;, }, public, RegularTimePeriod, getOldestTime, (, ), {, return]
[), {, return, this, ., pointsInTime, [, this, ., newestAt, ], ;, }, public, RegularTimePeriod, getOldestTime, (, ), {, return]
[), {, return, this, ., pointsInTime, [, this, ., newestAt, ], ;, }, public, RegularTimePeriod, getOldestTime, (, ), {, return]
[., pointsInTime, [, this, ., newestAt, ], ;, }, public, RegularTimePeriod, getOldestTime, (, ), {, return, this, ., pointsInTime, []
[., pointsInTime, [, this, ., newestAt, ], ;, }, public, RegularTimePeriod, getOldestTime, (, ), {, return, this, ., pointsInTime, []
[this, ., oldestAt, ], ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =]
[this, ., oldestAt, ], ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =]
[this, ., oldestAt, ], ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =]
[;, }, public, Number, getX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, []
[public, Number, getX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, [, translateGet, (]
[series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, [, translateGet, (, item, ), ], ;, return]
[item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, [, translateGet, (, item, ), ], ;, return, new, Long, (]
[{, RegularTimePeriod, tp, =, this, ., pointsInTime, [, translateGet, (, item, ), ], ;, return, new, Long, (, getX, (]
[(, tp, ), ), ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, ValueSequence, values, =]
[(, tp, ), ), ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, ValueSequence, values, =]
[(, tp, ), ), ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, ValueSequence, values, =]
[;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, ValueSequence, values, =, this, ., valueHistory, []
[getYValue, (, int, series, ,, int, item, ), {, ValueSequence, values, =, this, ., valueHistory, [, series, ], ;, return]
[getYValue, (, int, series, ,, int, item, ), {, ValueSequence, values, =, this, ., valueHistory, [, series, ], ;, return]
[,, int, item, ), {, ValueSequence, values, =, this, ., valueHistory, [, series, ], ;, return, values, ., getData, (]
[item, ), {, ValueSequence, values, =, this, ., valueHistory, [, series, ], ;, return, values, ., getData, (, translateGet, (]
[(, translateGet, (, item, ), ), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return]
[item, ), ), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Float, (]
[), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Float, (, getYValue, (]
[}, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Float, (, getYValue, (, series, ,]
[,, item, ), ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =]
[,, item, ), ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =]
[,, item, ), ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =]
[;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, []
[public, Number, getStartX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, [, translateGet, (]
[series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, [, translateGet, (, item, ), ], ;, return]
[item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, [, translateGet, (, item, ), ], ;, return, new, Long, (]
[item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, [, translateGet, (, item, ), ], ;, return, new, Long, (]
[tp, =, this, ., pointsInTime, [, translateGet, (, item, ), ], ;, return, new, Long, (, tp, ., getFirstMillisecond, (]
[tp, =, this, ., pointsInTime, [, translateGet, (, item, ), ], ;, return, new, Long, (, tp, ., getFirstMillisecond, (]
[., workingCalendar, ), ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =]
[., workingCalendar, ), ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =]
[., workingCalendar, ), ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =]
[;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, []
[public, Number, getEndX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, [, translateGet, (]
[series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, [, translateGet, (, item, ), ], ;, return]
[item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, [, translateGet, (, item, ), ], ;, return, new, Long, (]
[item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, [, translateGet, (, item, ), ], ;, return, new, Long, (]
[tp, =, this, ., pointsInTime, [, translateGet, (, item, ), ], ;, return, new, Long, (, tp, ., getLastMillisecond, (]
[tp, =, this, ., pointsInTime, [, translateGet, (, item, ), ], ;, return, new, Long, (, tp, ., getLastMillisecond, (]
[(, this, ., workingCalendar, ), ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return]
[., workingCalendar, ), ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (]
[), ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,]
[getY, (, series, ,, item, ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return]
[series, ,, item, ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (]
[item, ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,]
[), {, return, getY, (, series, ,, item, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return]
[), {, return, getY, (, series, ,, item, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return]
[), {, return, getY, (, series, ,, item, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return]
[(, series, ,, item, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, this, ., seriesKeys, []
[(, int, series, ), {, return, this, ., seriesKeys, [, series, ], ;, }, protected, void, fireSeriesChanged, (, ), {]
[series, ), {, return, this, ., seriesKeys, [, series, ], ;, }, protected, void, fireSeriesChanged, (, ), {, seriesChanged, (]
[return, this, ., seriesKeys, [, series, ], ;, }, protected, void, fireSeriesChanged, (, ), {, seriesChanged, (, new, SeriesChangeEvent, (]
[{, seriesChanged, (, new, SeriesChangeEvent, (, this, ), ), ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return]
[{, seriesChanged, (, new, SeriesChangeEvent, (, this, ), ), ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return]
[{, seriesChanged, (, new, SeriesChangeEvent, (, this, ), ), ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return]
[{, return, this, ., domainStart, ., doubleValue, (, ), ;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return]
[{, return, this, ., domainStart, ., doubleValue, (, ), ;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return]
[{, return, this, ., domainStart, ., doubleValue, (, ), ;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return]
[return, this, ., domainEnd, ., doubleValue, (, ), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (]
[return, this, ., domainEnd, ., doubleValue, (, ), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (]
[return, this, ., domainEnd, ., doubleValue, (, ), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (]
[., doubleValue, (, ), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, this, ., domainRange, ==]
[), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, this, ., domainRange, ==, null, ), {]
[(, boolean, includeInterval, ), {, if, (, this, ., domainRange, ==, null, ), {, findDomainLimits, (, ), ;, }, return]
[(, boolean, includeInterval, ), {, if, (, this, ., domainRange, ==, null, ), {, findDomainLimits, (, ), ;, }, return]
[(, ), ;, }, return, this, ., domainRange, ;, }, private, long, getX, (, RegularTimePeriod, period, ), {, switch, (]
[(, ), ;, }, return, this, ., domainRange, ;, }, private, long, getX, (, RegularTimePeriod, period, ), {, switch, (]
[., domainRange, ;, }, private, long, getX, (, RegularTimePeriod, period, ), {, switch, (, this, ., position, ), {, case]
[domainRange, ;, }, private, long, getX, (, RegularTimePeriod, period, ), {, switch, (, this, ., position, ), {, case, (]
[long, getX, (, RegularTimePeriod, period, ), {, switch, (, this, ., position, ), {, case, (, START, ), :, return]
[long, getX, (, RegularTimePeriod, period, ), {, switch, (, this, ., position, ), {, case, (, START, ), :, return]
[period, ), {, switch, (, this, ., position, ), {, case, (, START, ), :, return, period, ., getFirstMillisecond, (]
[period, ), {, switch, (, this, ., position, ), {, case, (, START, ), :, return, period, ., getFirstMillisecond, (]
[., position, ), {, case, (, START, ), :, return, period, ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, case]
[position, ), {, case, (, START, ), :, return, period, ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, case, (]
[(, START, ), :, return, period, ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, case, (, MIDDLE, ), :, return]
[(, START, ), :, return, period, ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, case, (, MIDDLE, ), :, return]
[return, period, ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, case, (, MIDDLE, ), :, return, period, ., getMiddleMillisecond, (]
[return, period, ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, case, (, MIDDLE, ), :, return, period, ., getMiddleMillisecond, (]
[., workingCalendar, ), ;, case, (, MIDDLE, ), :, return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, case]
[workingCalendar, ), ;, case, (, MIDDLE, ), :, return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, case, (]
[(, MIDDLE, ), :, return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, case, (, END, ), :, return]
[(, MIDDLE, ), :, return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, case, (, END, ), :, return]
[return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, case, (, END, ), :, return, period, ., getLastMillisecond, (]
[return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, case, (, END, ), :, return, period, ., getLastMillisecond, (]
[), ;, case, (, END, ), :, return, period, ., getLastMillisecond, (, this, ., workingCalendar, ), ;, default, :, return]
[), ;, case, (, END, ), :, return, period, ., getLastMillisecond, (, this, ., workingCalendar, ), ;, default, :, return]
[END, ), :, return, period, ., getLastMillisecond, (, this, ., workingCalendar, ), ;, default, :, return, period, ., getMiddleMillisecond, (]
[END, ), :, return, period, ., getLastMillisecond, (, this, ., workingCalendar, ), ;, default, :, return, period, ., getMiddleMillisecond, (]
[getMiddleMillisecond, (, this, ., workingCalendar, ), ;, }, }, public, double, getRangeLowerBound, (, boolean, includeInterval, ), {, double, result, =]
[getMiddleMillisecond, (, this, ., workingCalendar, ), ;, }, }, public, double, getRangeLowerBound, (, boolean, includeInterval, ), {, double, result, =]
[;, }, }, public, double, getRangeLowerBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, if, (]
[;, }, }, public, double, getRangeLowerBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, if, (]
[;, }, }, public, double, getRangeLowerBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, if, (]
[double, getRangeLowerBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, if, (, this, ., minValue, !=]
[boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, if, (, this, ., minValue, !=, null, ), {]
[), {, double, result, =, Double, ., NaN, ;, if, (, this, ., minValue, !=, null, ), {, result, =]
[), {, double, result, =, Double, ., NaN, ;, if, (, this, ., minValue, !=, null, ), {, result, =]
[), {, double, result, =, Double, ., NaN, ;, if, (, this, ., minValue, !=, null, ), {, result, =]
[(, this, ., minValue, !=, null, ), {, result, =, this, ., minValue, ., doubleValue, (, ), ;, }, return]
[doubleValue, (, ), ;, }, return, result, ;, }, public, double, getRangeUpperBound, (, boolean, includeInterval, ), {, double, result, =]
[doubleValue, (, ), ;, }, return, result, ;, }, public, double, getRangeUpperBound, (, boolean, includeInterval, ), {, double, result, =]
[result, ;, }, public, double, getRangeUpperBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, if, (]
[result, ;, }, public, double, getRangeUpperBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, if, (]
[result, ;, }, public, double, getRangeUpperBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, if, (]
[double, getRangeUpperBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, if, (, this, ., maxValue, !=]
[boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, if, (, this, ., maxValue, !=, null, ), {]
[), {, double, result, =, Double, ., NaN, ;, if, (, this, ., maxValue, !=, null, ), {, result, =]
[), {, double, result, =, Double, ., NaN, ;, if, (, this, ., maxValue, !=, null, ), {, result, =]
[), {, double, result, =, Double, ., NaN, ;, if, (, this, ., maxValue, !=, null, ), {, result, =]
[(, this, ., maxValue, !=, null, ), {, result, =, this, ., maxValue, ., doubleValue, (, ), ;, }, return]
[., doubleValue, (, ), ;, }, return, result, ;, }, public, Range, getRangeBounds, (, boolean, includeInterval, ), {, if, (]
[., doubleValue, (, ), ;, }, return, result, ;, }, public, Range, getRangeBounds, (, boolean, includeInterval, ), {, if, (]
[., doubleValue, (, ), ;, }, return, result, ;, }, public, Range, getRangeBounds, (, boolean, includeInterval, ), {, if, (]
[;, }, return, result, ;, }, public, Range, getRangeBounds, (, boolean, includeInterval, ), {, if, (, this, ., valueRange, ==]
[public, Range, getRangeBounds, (, boolean, includeInterval, ), {, if, (, this, ., valueRange, ==, null, ), {, double, max, =]
[getRangeBounds, (, boolean, includeInterval, ), {, if, (, this, ., valueRange, ==, null, ), {, double, max, =, getRangeUpperBound, (]
[includeInterval, ), {, if, (, this, ., valueRange, ==, null, ), {, double, max, =, getRangeUpperBound, (, includeInterval, ), ;]
[includeInterval, ), {, if, (, this, ., valueRange, ==, null, ), {, double, max, =, getRangeUpperBound, (, includeInterval, ), ;]
[(, this, ., valueRange, ==, null, ), {, double, max, =, getRangeUpperBound, (, includeInterval, ), ;, this, ., valueRange, =]
[valueRange, ==, null, ), {, double, max, =, getRangeUpperBound, (, includeInterval, ), ;, this, ., valueRange, =, new, Range, (]
[null, ), {, double, max, =, getRangeUpperBound, (, includeInterval, ), ;, this, ., valueRange, =, new, Range, (, 0.0, ,]
[=, getRangeUpperBound, (, includeInterval, ), ;, this, ., valueRange, =, new, Range, (, 0.0, ,, max, ), ;, }, return]
[=, getRangeUpperBound, (, includeInterval, ), ;, this, ., valueRange, =, new, Range, (, 0.0, ,, max, ), ;, }, return]
