[implements, CompilerPass, {, private, final, AbstractCompiler, compiler, ;, private, class, FindObjectCreateCalls, extends, AbstractPostOrderCallback, {, List, <, Node, >, callNodes, =]
[implements, CompilerPass, {, private, final, AbstractCompiler, compiler, ;, private, class, FindObjectCreateCalls, extends, AbstractPostOrderCallback, {, List, <, Node, >, callNodes, =]
[), ;, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[), ;, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[,, Node, n, ,, Node, parent, ), {, if, (, n, ., isCall, (, ), ), {, String, fnName, =]
[,, Node, n, ,, Node, parent, ), {, if, (, n, ., isCall, (, ), ), {, String, fnName, =]
[,, Node, n, ,, Node, parent, ), {, if, (, n, ., isCall, (, ), ), {, String, fnName, =]
[isCall, (, ), ), {, String, fnName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, if, (]
[isCall, (, ), ), {, String, fnName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, if, (]
[isCall, (, ), ), {, String, fnName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, if, (]
[{, String, fnName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, if, (, "goog$object$create", ., equals, (]
[=, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, if, (, "goog$object$create", ., equals, (, fnName, ), ||]
[=, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, if, (, "goog$object$create", ., equals, (, fnName, ), ||]
[(, ), ., getQualifiedName, (, ), ;, if, (, "goog$object$create", ., equals, (, fnName, ), ||, "goog.object.create", ., equals, (]
[(, ), ;, if, (, "goog$object$create", ., equals, (, fnName, ), ||, "goog.object.create", ., equals, (, fnName, ), ), {]
[(, ), ;, if, (, "goog$object$create", ., equals, (, fnName, ), ||, "goog.object.create", ., equals, (, fnName, ), ), {]
[(, "goog$object$create", ., equals, (, fnName, ), ||, "goog.object.create", ., equals, (, fnName, ), ), {, callNodes, ., add, (]
[), ), {, callNodes, ., add, (, n, ), ;, }, }, }, }, ClosureOptimizePrimitives, (, AbstractCompiler, compiler, ), {]
[), ), {, callNodes, ., add, (, n, ), ;, }, }, }, }, ClosureOptimizePrimitives, (, AbstractCompiler, compiler, ), {]
[., add, (, n, ), ;, }, }, }, }, ClosureOptimizePrimitives, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
[=, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, FindObjectCreateCalls, pass, =]
[Override, public, void, process, (, Node, externs, ,, Node, root, ), {, FindObjectCreateCalls, pass, =, new, FindObjectCreateCalls, (, ), ;]
[Override, public, void, process, (, Node, externs, ,, Node, root, ), {, FindObjectCreateCalls, pass, =, new, FindObjectCreateCalls, (, ), ;]
[(, Node, externs, ,, Node, root, ), {, FindObjectCreateCalls, pass, =, new, FindObjectCreateCalls, (, ), ;, NodeTraversal, ., traverse, (]
[externs, ,, Node, root, ), {, FindObjectCreateCalls, pass, =, new, FindObjectCreateCalls, (, ), ;, NodeTraversal, ., traverse, (, compiler, ,]
[Node, root, ), {, FindObjectCreateCalls, pass, =, new, FindObjectCreateCalls, (, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,]
[{, FindObjectCreateCalls, pass, =, new, FindObjectCreateCalls, (, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, pass, ), ;]
[pass, =, new, FindObjectCreateCalls, (, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, pass, ), ;, processObjectCreateCalls, (]
[pass, =, new, FindObjectCreateCalls, (, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, pass, ), ;, processObjectCreateCalls, (]
[callNodes, ), ;, }, private, void, processObjectCreateCalls, (, List, <, Node, >, callNodes, ), {, for, (, Node, callNode, :]
[processObjectCreateCalls, (, List, <, Node, >, callNodes, ), {, for, (, Node, callNode, :, callNodes, ), {, Node, curParam, =]
[processObjectCreateCalls, (, List, <, Node, >, callNodes, ), {, for, (, Node, callNode, :, callNodes, ), {, Node, curParam, =]
[processObjectCreateCalls, (, List, <, Node, >, callNodes, ), {, for, (, Node, callNode, :, callNodes, ), {, Node, curParam, =]
[callNode, :, callNodes, ), {, Node, curParam, =, callNode, ., getFirstChild, (, ), ., getNext, (, ), ;, if, (]
[callNodes, ), {, Node, curParam, =, callNode, ., getFirstChild, (, ), ., getNext, (, ), ;, if, (, canOptimizeObjectCreate, (]
[., getFirstChild, (, ), ., getNext, (, ), ;, if, (, canOptimizeObjectCreate, (, curParam, ), ), {, Node, objNode, =]
[., getFirstChild, (, ), ., getNext, (, ), ;, if, (, canOptimizeObjectCreate, (, curParam, ), ), {, Node, objNode, =]
[., getFirstChild, (, ), ., getNext, (, ), ;, if, (, canOptimizeObjectCreate, (, curParam, ), ), {, Node, objNode, =]
[;, if, (, canOptimizeObjectCreate, (, curParam, ), ), {, Node, objNode, =, IR, ., objectlit, (, ), ., srcref, (]
[curParam, ), ), {, Node, objNode, =, IR, ., objectlit, (, ), ., srcref, (, callNode, ), ;, while, (]
[curParam, ), ), {, Node, objNode, =, IR, ., objectlit, (, ), ., srcref, (, callNode, ), ;, while, (]
[), {, Node, objNode, =, IR, ., objectlit, (, ), ., srcref, (, callNode, ), ;, while, (, curParam, !=]
[., objectlit, (, ), ., srcref, (, callNode, ), ;, while, (, curParam, !=, null, ), {, Node, keyNode, =]
[srcref, (, callNode, ), ;, while, (, curParam, !=, null, ), {, Node, keyNode, =, curParam, ;, Node, valueNode, =]
[srcref, (, callNode, ), ;, while, (, curParam, !=, null, ), {, Node, keyNode, =, curParam, ;, Node, valueNode, =]
[(, curParam, !=, null, ), {, Node, keyNode, =, curParam, ;, Node, valueNode, =, curParam, ., getNext, (, ), ;]
[!=, null, ), {, Node, keyNode, =, curParam, ;, Node, valueNode, =, curParam, ., getNext, (, ), ;, curParam, =]
[!=, null, ), {, Node, keyNode, =, curParam, ;, Node, valueNode, =, curParam, ., getNext, (, ), ;, curParam, =]
[=, curParam, ;, Node, valueNode, =, curParam, ., getNext, (, ), ;, curParam, =, valueNode, ., getNext, (, ), ;]
[=, curParam, ;, Node, valueNode, =, curParam, ., getNext, (, ), ;, curParam, =, valueNode, ., getNext, (, ), ;]
[valueNode, =, curParam, ., getNext, (, ), ;, curParam, =, valueNode, ., getNext, (, ), ;, callNode, ., removeChild, (]
[., getNext, (, ), ;, curParam, =, valueNode, ., getNext, (, ), ;, callNode, ., removeChild, (, keyNode, ), ;]
[., getNext, (, ), ;, curParam, =, valueNode, ., getNext, (, ), ;, callNode, ., removeChild, (, keyNode, ), ;]
[;, curParam, =, valueNode, ., getNext, (, ), ;, callNode, ., removeChild, (, keyNode, ), ;, callNode, ., removeChild, (]
[getNext, (, ), ;, callNode, ., removeChild, (, keyNode, ), ;, callNode, ., removeChild, (, valueNode, ), ;, if, (]
[(, ), ;, callNode, ., removeChild, (, keyNode, ), ;, callNode, ., removeChild, (, valueNode, ), ;, if, (, !]
[(, ), ;, callNode, ., removeChild, (, keyNode, ), ;, callNode, ., removeChild, (, valueNode, ), ;, if, (, !]
[keyNode, ), ;, callNode, ., removeChild, (, valueNode, ), ;, if, (, !, keyNode, ., isString, (, ), ), {]
[;, callNode, ., removeChild, (, valueNode, ), ;, if, (, !, keyNode, ., isString, (, ), ), {, keyNode, =]
[;, callNode, ., removeChild, (, valueNode, ), ;, if, (, !, keyNode, ., isString, (, ), ), {, keyNode, =]
[;, callNode, ., removeChild, (, valueNode, ), ;, if, (, !, keyNode, ., isString, (, ), ), {, keyNode, =]
[(, valueNode, ), ;, if, (, !, keyNode, ., isString, (, ), ), {, keyNode, =, IR, ., string, (]
[(, valueNode, ), ;, if, (, !, keyNode, ., isString, (, ), ), {, keyNode, =, IR, ., string, (]
[if, (, !, keyNode, ., isString, (, ), ), {, keyNode, =, IR, ., string, (, NodeUtil, ., getStringValue, (]
[(, ), ), {, keyNode, =, IR, ., string, (, NodeUtil, ., getStringValue, (, keyNode, ), ), ., srcref, (]
[keyNode, =, IR, ., string, (, NodeUtil, ., getStringValue, (, keyNode, ), ), ., srcref, (, keyNode, ), ;, }]
[keyNode, =, IR, ., string, (, NodeUtil, ., getStringValue, (, keyNode, ), ), ., srcref, (, keyNode, ), ;, }]
[string, (, NodeUtil, ., getStringValue, (, keyNode, ), ), ., srcref, (, keyNode, ), ;, }, keyNode, ., setType, (]
[string, (, NodeUtil, ., getStringValue, (, keyNode, ), ), ., srcref, (, keyNode, ), ;, }, keyNode, ., setType, (]
[(, keyNode, ), ), ., srcref, (, keyNode, ), ;, }, keyNode, ., setType, (, Token, ., STRING_KEY, ), ;]
[(, keyNode, ), ), ., srcref, (, keyNode, ), ;, }, keyNode, ., setType, (, Token, ., STRING_KEY, ), ;]
[(, keyNode, ), ;, }, keyNode, ., setType, (, Token, ., STRING_KEY, ), ;, keyNode, ., setQuotedString, (, ), ;]
[(, keyNode, ), ;, }, keyNode, ., setType, (, Token, ., STRING_KEY, ), ;, keyNode, ., setQuotedString, (, ), ;]
[}, keyNode, ., setType, (, Token, ., STRING_KEY, ), ;, keyNode, ., setQuotedString, (, ), ;, objNode, ., addChildToBack, (]
[}, keyNode, ., setType, (, Token, ., STRING_KEY, ), ;, keyNode, ., setQuotedString, (, ), ;, objNode, ., addChildToBack, (]
[(, Token, ., STRING_KEY, ), ;, keyNode, ., setQuotedString, (, ), ;, objNode, ., addChildToBack, (, IR, ., propdef, (]
[., STRING_KEY, ), ;, keyNode, ., setQuotedString, (, ), ;, objNode, ., addChildToBack, (, IR, ., propdef, (, keyNode, ,]
[., setQuotedString, (, ), ;, objNode, ., addChildToBack, (, IR, ., propdef, (, keyNode, ,, valueNode, ), ), ;, }]
[., setQuotedString, (, ), ;, objNode, ., addChildToBack, (, IR, ., propdef, (, keyNode, ,, valueNode, ), ), ;, }]
[., setQuotedString, (, ), ;, objNode, ., addChildToBack, (, IR, ., propdef, (, keyNode, ,, valueNode, ), ), ;, }]
[(, IR, ., propdef, (, keyNode, ,, valueNode, ), ), ;, }, callNode, ., getParent, (, ), ., replaceChild, (]
[., propdef, (, keyNode, ,, valueNode, ), ), ;, }, callNode, ., getParent, (, ), ., replaceChild, (, callNode, ,]
[keyNode, ,, valueNode, ), ), ;, }, callNode, ., getParent, (, ), ., replaceChild, (, callNode, ,, objNode, ), ;]
[keyNode, ,, valueNode, ), ), ;, }, callNode, ., getParent, (, ), ., replaceChild, (, callNode, ,, objNode, ), ;]
[compiler, ., reportCodeChange, (, ), ;, }, }, }, private, boolean, canOptimizeObjectCreate, (, Node, firstParam, ), {, Node, curParam, =]
[), ;, }, }, }, private, boolean, canOptimizeObjectCreate, (, Node, firstParam, ), {, Node, curParam, =, firstParam, ;, while, (]
[), ;, }, }, }, private, boolean, canOptimizeObjectCreate, (, Node, firstParam, ), {, Node, curParam, =, firstParam, ;, while, (]
[}, }, }, private, boolean, canOptimizeObjectCreate, (, Node, firstParam, ), {, Node, curParam, =, firstParam, ;, while, (, curParam, !=]
[canOptimizeObjectCreate, (, Node, firstParam, ), {, Node, curParam, =, firstParam, ;, while, (, curParam, !=, null, ), {, if, (]
[canOptimizeObjectCreate, (, Node, firstParam, ), {, Node, curParam, =, firstParam, ;, while, (, curParam, !=, null, ), {, if, (]
[(, Node, firstParam, ), {, Node, curParam, =, firstParam, ;, while, (, curParam, !=, null, ), {, if, (, !]
[(, Node, firstParam, ), {, Node, curParam, =, firstParam, ;, while, (, curParam, !=, null, ), {, if, (, !]
[curParam, =, firstParam, ;, while, (, curParam, !=, null, ), {, if, (, !, curParam, ., isString, (, ), &&]
[=, firstParam, ;, while, (, curParam, !=, null, ), {, if, (, !, curParam, ., isString, (, ), &&, !]
[=, firstParam, ;, while, (, curParam, !=, null, ), {, if, (, !, curParam, ., isString, (, ), &&, !]
[), {, if, (, !, curParam, ., isString, (, ), &&, !, curParam, ., isNumber, (, ), ), {, return]
[(, !, curParam, ., isString, (, ), &&, !, curParam, ., isNumber, (, ), ), {, return, false, ;, }]
[curParam, ., isString, (, ), &&, !, curParam, ., isNumber, (, ), ), {, return, false, ;, }, curParam, =]
[curParam, ., isString, (, ), &&, !, curParam, ., isNumber, (, ), ), {, return, false, ;, }, curParam, =]
[., isNumber, (, ), ), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, ), ;, if, (]
[., isNumber, (, ), ), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, ), ;, if, (]
[(, ), ), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, ), ;, if, (, curParam, ==]
[return, false, ;, }, curParam, =, curParam, ., getNext, (, ), ;, if, (, curParam, ==, null, ), {, return]
[}, curParam, =, curParam, ., getNext, (, ), ;, if, (, curParam, ==, null, ), {, return, false, ;, }]
[=, curParam, ., getNext, (, ), ;, if, (, curParam, ==, null, ), {, return, false, ;, }, curParam, =]
[=, curParam, ., getNext, (, ), ;, if, (, curParam, ==, null, ), {, return, false, ;, }, curParam, =]
[(, curParam, ==, null, ), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, ), ;, }, return]
