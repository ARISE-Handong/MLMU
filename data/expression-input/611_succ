[;, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, GeneralPath, shape1]
[;, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, GeneralPath, shape1]
[;, GeneralPath, shape2, =, new, GeneralPath, (, ), ;, float, minX, =, (, float, ), plotArea, ., getMinX, (, )]
[;, float, minX, =, (, float, ), plotArea, ., getMinX, (, ), ;, float, minY, =, (, float, ), plotArea]
[;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxX, =, (, float, ), plotArea]
[;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxX, =, (, float, ), plotArea]
[., getMinX, (, ), ;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxX, =]
[;, float, maxX, =, (, float, ), plotArea, ., getMaxX, (, ), ;, float, maxY, =, (, float, ), plotArea]
[;, float, maxX, =, (, float, ), plotArea, ., getMaxX, (, ), ;, float, maxY, =, (, float, ), plotArea]
[., getMinY, (, ), ;, float, maxX, =, (, float, ), plotArea, ., getMaxX, (, ), ;, float, maxY, =]
[;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (]
[;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (]
[., getMaxX, (, ), ;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =]
[;, float, midX, =, (, float, ), (, minX, +, (, plotArea, ., getWidth, (, ), /, 2, ), )]
[;, float, midX, =, (, float, ), (, minX, +, (, plotArea, ., getWidth, (, ), /, 2, ), )]
[., getMaxY, (, ), ;, float, midX, =, (, float, ), (, minX, +, (, plotArea, ., getWidth, (, )]
[;, float, midY, =, (, float, ), (, minY, +, (, plotArea, ., getHeight, (, ), /, 2, ), )]
[;, float, midY, =, (, float, ), (, minY, +, (, plotArea, ., getHeight, (, ), /, 2, ), )]
[), ;, float, midY, =, (, float, ), (, minY, +, (, plotArea, ., getHeight, (, ), /, 2, )]
[+, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, float, midY, =, (, float, ), (, minY]
[), ;, float, midY, =, (, float, ), (, minY, +, (, plotArea, ., getHeight, (, ), /, 2, )]
[), ), ;, float, midY, =, (, float, ), (, minY, +, (, plotArea, ., getHeight, (, ), /, 2]
[/, 2, ), ), ;, float, midY, =, (, float, ), (, minY, +, (, plotArea, ., getHeight, (, )]
[., getWidth, (, ), /, 2, ), ), ;, float, midY, =, (, float, ), (, minY, +, (, plotArea]
[), ), ;, float, midY, =, (, float, ), (, minY, +, (, plotArea, ., getHeight, (, ), /, 2]
[;, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1]
[;, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1]
[), ;, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;]
[+, (, plotArea, ., getHeight, (, ), /, 2, ), ), ;, shape1, ., moveTo, (, minX, ,, midY, )]
[), ;, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;]
[), ), ;, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, )]
[/, 2, ), ), ;, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,]
[., getHeight, (, ), /, 2, ), ), ;, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, .]
[), ), ;, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, )]
[;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1, ., lineTo, (, maxX, ,, midY, ), ;, shape1]
[., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1, ., lineTo]
[,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1, ., lineTo, (, maxX, ,, midY]
[), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1, ., lineTo, (, maxX, ,, midY, ), ;]
[;, shape1, ., lineTo, (, maxX, ,, midY, ), ;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (]
[., lineTo, (, midX, ,, minY, ), ;, shape1, ., lineTo, (, maxX, ,, midY, ), ;, shape1, ., closePath]
[,, minY, ), ;, shape1, ., lineTo, (, maxX, ,, midY, ), ;, shape1, ., closePath, (, ), ;, shape2]
[), ;, shape1, ., lineTo, (, maxX, ,, midY, ), ;, shape1, ., closePath, (, ), ;, shape2, ., moveTo]
[;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (, minX, ,, midY, ), ;, shape2, ., lineTo, (]
[., lineTo, (, maxX, ,, midY, ), ;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (, minX, ,]
[,, midY, ), ;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (, minX, ,, midY, ), ;, shape2]
[), ;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (, minX, ,, midY, ), ;, shape2, ., lineTo]
[;, shape2, ., moveTo, (, minX, ,, midY, ), ;, shape2, ., lineTo, (, midX, ,, maxY, ), ;, shape2]
[., closePath, (, ), ;, shape2, ., moveTo, (, minX, ,, midY, ), ;, shape2, ., lineTo, (, midX, ,]
[;, shape2, ., lineTo, (, midX, ,, maxY, ), ;, shape2, ., lineTo, (, maxX, ,, midY, ), ;, shape2]
[., moveTo, (, minX, ,, midY, ), ;, shape2, ., lineTo, (, midX, ,, maxY, ), ;, shape2, ., lineTo]
[,, midY, ), ;, shape2, ., lineTo, (, midX, ,, maxY, ), ;, shape2, ., lineTo, (, maxX, ,, midY]
[), ;, shape2, ., lineTo, (, midX, ,, maxY, ), ;, shape2, ., lineTo, (, maxX, ,, midY, ), ;]
[;, shape2, ., lineTo, (, maxX, ,, midY, ), ;, shape2, ., closePath, (, ), ;, if, (, (, rotate]
[., lineTo, (, midX, ,, maxY, ), ;, shape2, ., lineTo, (, maxX, ,, midY, ), ;, shape2, ., closePath]
[,, maxY, ), ;, shape2, ., lineTo, (, maxX, ,, midY, ), ;, shape2, ., closePath, (, ), ;, if]
[), ;, shape2, ., lineTo, (, maxX, ,, midY, ), ;, shape2, ., closePath, (, ), ;, if, (, (]
[;, shape2, ., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, )]
[., lineTo, (, maxX, ,, midY, ), ;, shape2, ., closePath, (, ), ;, if, (, (, rotate, !=, null]
[,, midY, ), ;, shape2, ., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle]
[), ;, shape2, ., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0]
[;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), .]
[., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {]
[), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (]
[&&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (]
[), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX]
[!=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate]
[), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX]
[), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (]
[), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY]
[!=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate]
[), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY]
[;, shape1, ., transform, (, getTransform, (, ), ), ;, shape2, ., transform, (, getTransform, (, ), ), ;, }]
[., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, shape1, .]
[,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, shape1, ., transform, (, getTransform, (]
[,, rotate, ., getY, (, ), ), ;, shape1, ., transform, (, getTransform, (, ), ), ;, shape2, ., transform]
[., getX, (, ), ,, rotate, ., getY, (, ), ), ;, shape1, ., transform, (, getTransform, (, ), )]
[), ;, shape1, ., transform, (, getTransform, (, ), ), ;, shape2, ., transform, (, getTransform, (, ), ), ;]
[., getY, (, ), ), ;, shape1, ., transform, (, getTransform, (, ), ), ;, shape2, ., transform, (, getTransform]
[;, shape2, ., transform, (, getTransform, (, ), ), ;, }, if, (, getFillPaint, (, ), !=, null, ), {]
[., transform, (, getTransform, (, ), ), ;, shape2, ., transform, (, getTransform, (, ), ), ;, }, if, (]
[), ;, shape2, ., transform, (, getTransform, (, ), ), ;, }, if, (, getFillPaint, (, ), !=, null, )]
[;, }, if, (, getFillPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getFillPaint, (, ), ), ;]
[., transform, (, getTransform, (, ), ), ;, }, if, (, getFillPaint, (, ), !=, null, ), {, g2, .]
[), ;, }, if, (, getFillPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getFillPaint, (, ), )]
[), {, g2, ., setPaint, (, getFillPaint, (, ), ), ;, g2, ., fill, (, shape1, ), ;, }, if]
[!=, null, ), {, g2, ., setPaint, (, getFillPaint, (, ), ), ;, g2, ., fill, (, shape1, ), ;]
[), {, g2, ., setPaint, (, getFillPaint, (, ), ), ;, g2, ., fill, (, shape1, ), ;, }, if]
[;, g2, ., fill, (, shape1, ), ;, }, if, (, getHighlightPaint, (, ), !=, null, ), {, g2, .]
[., setPaint, (, getFillPaint, (, ), ), ;, g2, ., fill, (, shape1, ), ;, }, if, (, getHighlightPaint, (]
[), ;, g2, ., fill, (, shape1, ), ;, }, if, (, getHighlightPaint, (, ), !=, null, ), {, g2]
[;, }, if, (, getHighlightPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;]
[., fill, (, shape1, ), ;, }, if, (, getHighlightPaint, (, ), !=, null, ), {, g2, ., setPaint, (]
[), ;, }, if, (, getHighlightPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getHighlightPaint, (, ), )]
[), {, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;, g2, ., fill, (, shape2, ), ;, }, if]
[!=, null, ), {, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;, g2, ., fill, (, shape2, ), ;]
[), {, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;, g2, ., fill, (, shape2, ), ;, }, if]
[;, g2, ., fill, (, shape2, ), ;, }, if, (, getOutlinePaint, (, ), !=, null, ), {, g2, .]
[., setPaint, (, getHighlightPaint, (, ), ), ;, g2, ., fill, (, shape2, ), ;, }, if, (, getOutlinePaint, (]
[), ;, g2, ., fill, (, shape2, ), ;, }, if, (, getOutlinePaint, (, ), !=, null, ), {, g2]
[;, }, if, (, getOutlinePaint, (, ), !=, null, ), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;]
[., fill, (, shape2, ), ;, }, if, (, getOutlinePaint, (, ), !=, null, ), {, g2, ., setStroke, (]
[), ;, }, if, (, getOutlinePaint, (, ), !=, null, ), {, g2, ., setStroke, (, getOutlineStroke, (, ), )]
[), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;]
[!=, null, ), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, )]
[), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;]
[;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;, g2, ., draw, (, shape1, ), ;, g2, ., draw]
[., setStroke, (, getOutlineStroke, (, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;, g2, ., draw]
[), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;, g2, ., draw, (, shape1, ), ;, g2, .]
[;, g2, ., draw, (, shape1, ), ;, g2, ., draw, (, shape2, ), ;, }, }, public, boolean, equals]
[., setPaint, (, getOutlinePaint, (, ), ), ;, g2, ., draw, (, shape1, ), ;, g2, ., draw, (, shape2]
[), ;, g2, ., draw, (, shape1, ), ;, g2, ., draw, (, shape2, ), ;, }, }, public, boolean]
[;, g2, ., draw, (, shape2, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., draw, (, shape1, ), ;, g2, ., draw, (, shape2, ), ;, }, }, public, boolean, equals, (, Object]
[), ;, g2, ., draw, (, shape2, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if]
[;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[., draw, (, shape2, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, PointerNeedle, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, PointerNeedle, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, PointerNeedle, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, PointerNeedle, ), ), {, return, false, ;, }, if, (, !, super]
[), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false]
[instanceof, PointerNeedle, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {]
[;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, return, true, ;]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode]
[., equals, (, obj, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, )]
[), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, super, .]
[;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode, (, ), ;, }]
[;, }, public, int, hashCode, (, ), {, return, super, ., hashCode, (, ), ;, }, public, Object, clone, (]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, }]
[., hashCode, (, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, )]
[;, }, }]
[., clone, (, ), ;, }, }]
