[import, java, ., util, ., zip, ., ZipInputStream, ;, public, class, CommandLineRunner, extends, AbstractCommandLineRunner, <, Compiler, ,, CompilerOptions, >, {]
[util, ., zip, ., ZipInputStream, ;, public, class, CommandLineRunner, extends, AbstractCommandLineRunner, <, Compiler, ,, CompilerOptions, >, {, @, SuppressWarnings, (]
[,, CompilerOptions, >, {, @, SuppressWarnings, (, "unchecked", ), private, static, class, Flags, {, private, static, final, WarningGuardSpec, warningGuardSpec, =]
[SuppressWarnings, (, "unchecked", ), private, static, class, Flags, {, private, static, final, WarningGuardSpec, warningGuardSpec, =, new, WarningGuardSpec, (, ), ;]
[static, class, Flags, {, private, static, final, WarningGuardSpec, warningGuardSpec, =, new, WarningGuardSpec, (, ), ;, @, Option, (, name, =]
[private, static, final, WarningGuardSpec, warningGuardSpec, =, new, WarningGuardSpec, (, ), ;, @, Option, (, name, =, "--help", ,, handler, =]
[new, WarningGuardSpec, (, ), ;, @, Option, (, name, =, "--help", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[Option, (, name, =, "--help", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Displays this message", ), private, boolean, display_help, =]
[name, =, "--help", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Displays this message", ), private, boolean, display_help, =, false, ;]
[=, BooleanOptionHandler, ., class, ,, usage, =, "Displays this message", ), private, boolean, display_help, =, false, ;, @, Option, (, name, =]
[,, usage, =, "Displays this message", ), private, boolean, display_help, =, false, ;, @, Option, (, name, =, "--print_tree", ,, handler, =]
[boolean, display_help, =, false, ;, @, Option, (, name, =, "--print_tree", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[Option, (, name, =, "--print_tree", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints out the parse tree and exits", ), private, boolean, print_tree, =]
[name, =, "--print_tree", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints out the parse tree and exits", ), private, boolean, print_tree, =, false, ;]
[=, BooleanOptionHandler, ., class, ,, usage, =, "Prints out the parse tree and exits", ), private, boolean, print_tree, =, false, ;, @, Option, (, name, =]
[,, usage, =, "Prints out the parse tree and exits", ), private, boolean, print_tree, =, false, ;, @, Option, (, name, =, "--print_ast", ,, handler, =]
[boolean, print_tree, =, false, ;, @, Option, (, name, =, "--print_ast", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[boolean, print_tree, =, false, ;, @, Option, (, name, =, "--print_ast", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[=, false, ;, @, Option, (, name, =, "--print_ast", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints a dot file describing the internal abstract syntax", +]
[name, =, "--print_ast", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints a dot file describing the internal abstract syntax", +, " tree and exits", ), private, boolean, print_ast, =]
["--print_ast", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints a dot file describing the internal abstract syntax", +, " tree and exits", ), private, boolean, print_ast, =, false, ;]
[., class, ,, usage, =, "Prints a dot file describing the internal abstract syntax", +, " tree and exits", ), private, boolean, print_ast, =, false, ;, @, Option, (, name, =]
[=, "Prints a dot file describing the internal abstract syntax", +, " tree and exits", ), private, boolean, print_ast, =, false, ;, @, Option, (, name, =, "--print_pass_graph", ,, handler, =]
[boolean, print_ast, =, false, ;, @, Option, (, name, =, "--print_pass_graph", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[boolean, print_ast, =, false, ;, @, Option, (, name, =, "--print_pass_graph", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[=, false, ;, @, Option, (, name, =, "--print_pass_graph", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints a dot file describing the passes that will get run", +]
[name, =, "--print_pass_graph", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints a dot file describing the passes that will get run", +, " and exits", ), private, boolean, print_pass_graph, =]
["--print_pass_graph", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints a dot file describing the passes that will get run", +, " and exits", ), private, boolean, print_pass_graph, =, false, ;]
[., class, ,, usage, =, "Prints a dot file describing the passes that will get run", +, " and exits", ), private, boolean, print_pass_graph, =, false, ;, @, Option, (, name, =]
[=, "Prints a dot file describing the passes that will get run", +, " and exits", ), private, boolean, print_pass_graph, =, false, ;, @, Option, (, name, =, "--jscomp_dev_mode", ,, aliases, =]
["Prints a dot file describing the passes that will get run", +, " and exits", ), private, boolean, print_pass_graph, =, false, ;, @, Option, (, name, =, "--jscomp_dev_mode", ,, aliases, =, {]
[;, @, Option, (, name, =, "--jscomp_dev_mode", ,, aliases, =, {, "--dev_mode", }, ), private, CompilerOptions, ., DevMode, jscomp_dev_mode, =]
[;, @, Option, (, name, =, "--jscomp_dev_mode", ,, aliases, =, {, "--dev_mode", }, ), private, CompilerOptions, ., DevMode, jscomp_dev_mode, =]
[;, @, Option, (, name, =, "--jscomp_dev_mode", ,, aliases, =, {, "--dev_mode", }, ), private, CompilerOptions, ., DevMode, jscomp_dev_mode, =]
["--jscomp_dev_mode", ,, aliases, =, {, "--dev_mode", }, ), private, CompilerOptions, ., DevMode, jscomp_dev_mode, =, CompilerOptions, ., DevMode, ., OFF, ;]
["--dev_mode", }, ), private, CompilerOptions, ., DevMode, jscomp_dev_mode, =, CompilerOptions, ., DevMode, ., OFF, ;, @, Option, (, name, =]
[CompilerOptions, ., DevMode, jscomp_dev_mode, =, CompilerOptions, ., DevMode, ., OFF, ;, @, Option, (, name, =, "--logging_level", ,, usage, =]
[CompilerOptions, ., DevMode, jscomp_dev_mode, =, CompilerOptions, ., DevMode, ., OFF, ;, @, Option, (, name, =, "--logging_level", ,, usage, =]
[CompilerOptions, ., DevMode, jscomp_dev_mode, =, CompilerOptions, ., DevMode, ., OFF, ;, @, Option, (, name, =, "--logging_level", ,, usage, =]
[DevMode, jscomp_dev_mode, =, CompilerOptions, ., DevMode, ., OFF, ;, @, Option, (, name, =, "--logging_level", ,, usage, =, "The logging level (standard java.util.logging.Level", +]
[=, CompilerOptions, ., DevMode, ., OFF, ;, @, Option, (, name, =, "--logging_level", ,, usage, =, "The logging level (standard java.util.logging.Level", +, " values) for Compiler progress. Does not control errors or", +]
[;, @, Option, (, name, =, "--logging_level", ,, usage, =, "The logging level (standard java.util.logging.Level", +, " values) for Compiler progress. Does not control errors or", +, " warnings for the JavaScript code under compilation", ), private, String, logging_level, =]
[;, @, Option, (, name, =, "--logging_level", ,, usage, =, "The logging level (standard java.util.logging.Level", +, " values) for Compiler progress. Does not control errors or", +, " warnings for the JavaScript code under compilation", ), private, String, logging_level, =]
[;, @, Option, (, name, =, "--logging_level", ,, usage, =, "The logging level (standard java.util.logging.Level", +, " values) for Compiler progress. Does not control errors or", +, " warnings for the JavaScript code under compilation", ), private, String, logging_level, =]
[usage, =, "The logging level (standard java.util.logging.Level", +, " values) for Compiler progress. Does not control errors or", +, " warnings for the JavaScript code under compilation", ), private, String, logging_level, =, Level, ., WARNING, ., getName, (, ), ;]
[+, " warnings for the JavaScript code under compilation", ), private, String, logging_level, =, Level, ., WARNING, ., getName, (, ), ;, @, Option, (, name, =]
[String, logging_level, =, Level, ., WARNING, ., getName, (, ), ;, @, Option, (, name, =, "--externs", ,, usage, =]
[String, logging_level, =, Level, ., WARNING, ., getName, (, ), ;, @, Option, (, name, =, "--externs", ,, usage, =]
[=, Level, ., WARNING, ., getName, (, ), ;, @, Option, (, name, =, "--externs", ,, usage, =, "The file containing JavaScript externs. You may specify", +]
[@, Option, (, name, =, "--externs", ,, usage, =, "The file containing JavaScript externs. You may specify", +, " multiple", ), private, List, <, String, >, externs, =]
[@, Option, (, name, =, "--externs", ,, usage, =, "The file containing JavaScript externs. You may specify", +, " multiple", ), private, List, <, String, >, externs, =]
[,, usage, =, "The file containing JavaScript externs. You may specify", +, " multiple", ), private, List, <, String, >, externs, =, Lists, ., newArrayList, (, ), ;]
[" multiple", ), private, List, <, String, >, externs, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =]
[<, String, >, externs, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--js", ,, usage, =]
[), ;, @, Option, (, name, =, "--js", ,, usage, =, "The JavaScript filename. You may specify multiple", ), private, List, <, String, >, js, =]
[), ;, @, Option, (, name, =, "--js", ,, usage, =, "The JavaScript filename. You may specify multiple", ), private, List, <, String, >, js, =]
[=, "--js", ,, usage, =, "The JavaScript filename. You may specify multiple", ), private, List, <, String, >, js, =, Lists, ., newArrayList, (, ), ;]
["The JavaScript filename. You may specify multiple", ), private, List, <, String, >, js, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =]
[<, String, >, js, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--js_output_file", ,, usage, =]
[<, String, >, js, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--js_output_file", ,, usage, =]
[>, js, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--js_output_file", ,, usage, =, "Primary output filename. If not specified, output is ", +]
[(, ), ;, @, Option, (, name, =, "--js_output_file", ,, usage, =, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String, js_output_file, =]
[;, @, Option, (, name, =, "--js_output_file", ,, usage, =, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String, js_output_file, =, "", ;]
[=, "--js_output_file", ,, usage, =, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String, js_output_file, =, "", ;, @, Option, (, name, =]
[=, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =]
[=, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =]
[=, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =]
[=, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =]
[=, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =]
[=, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =]
[=, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =]
[=, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =]
[+, "written to stdout", ), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =, "A JavaScript module specification. The format is ", +]
[), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =, "A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +]
[String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =, "A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +]
[=, "", ;, @, Option, (, name, =, "--module", ,, usage, =, "A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +]
[;, @, Option, (, name, =, "--module", ,, usage, =, "A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +]
[Option, (, name, =, "--module", ,, usage, =, "A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +]
[name, =, "--module", ,, usage, =, "A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +]
[+, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >, module, =]
[+, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >, module, =]
[+, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >, module, =, Lists, ., newArrayList, (, ), ;]
["modules.", ), private, List, <, String, >, module, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =]
[<, String, >, module, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--variable_map_input_file", ,, usage, =]
[<, String, >, module, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--variable_map_input_file", ,, usage, =]
[>, module, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--variable_map_input_file", ,, usage, =, "File containing the serialized version of the variable ", +]
[(, ), ;, @, Option, (, name, =, "--variable_map_input_file", ,, usage, =, "File containing the serialized version of the variable ", +, "renaming map produced by a previous compilation", ), private, String, variable_map_input_file, =]
[;, @, Option, (, name, =, "--variable_map_input_file", ,, usage, =, "File containing the serialized version of the variable ", +, "renaming map produced by a previous compilation", ), private, String, variable_map_input_file, =, "", ;]
[=, "--variable_map_input_file", ,, usage, =, "File containing the serialized version of the variable ", +, "renaming map produced by a previous compilation", ), private, String, variable_map_input_file, =, "", ;, @, Option, (, name, =]
[=, "File containing the serialized version of the variable ", +, "renaming map produced by a previous compilation", ), private, String, variable_map_input_file, =, "", ;, @, Option, (, name, =, "--property_map_input_file", ,, usage, =]
[=, "File containing the serialized version of the variable ", +, "renaming map produced by a previous compilation", ), private, String, variable_map_input_file, =, "", ;, @, Option, (, name, =, "--property_map_input_file", ,, usage, =]
[+, "renaming map produced by a previous compilation", ), private, String, variable_map_input_file, =, "", ;, @, Option, (, name, =, "--property_map_input_file", ,, usage, =, "File containing the serialized version of the property ", +]
[=, "", ;, @, Option, (, name, =, "--property_map_input_file", ,, usage, =, "File containing the serialized version of the property ", +, "renaming map produced by a previous compilation", ), private, String, property_map_input_file, =]
[;, @, Option, (, name, =, "--property_map_input_file", ,, usage, =, "File containing the serialized version of the property ", +, "renaming map produced by a previous compilation", ), private, String, property_map_input_file, =, "", ;]
[=, "--property_map_input_file", ,, usage, =, "File containing the serialized version of the property ", +, "renaming map produced by a previous compilation", ), private, String, property_map_input_file, =, "", ;, @, Option, (, name, =]
[=, "File containing the serialized version of the property ", +, "renaming map produced by a previous compilation", ), private, String, property_map_input_file, =, "", ;, @, Option, (, name, =, "--variable_map_output_file", ,, usage, =]
[=, "File containing the serialized version of the property ", +, "renaming map produced by a previous compilation", ), private, String, property_map_input_file, =, "", ;, @, Option, (, name, =, "--variable_map_output_file", ,, usage, =]
[+, "renaming map produced by a previous compilation", ), private, String, property_map_input_file, =, "", ;, @, Option, (, name, =, "--variable_map_output_file", ,, usage, =, "File where the serialized version of the variable ", +]
[=, "", ;, @, Option, (, name, =, "--variable_map_output_file", ,, usage, =, "File where the serialized version of the variable ", +, "renaming map produced should be saved", ), private, String, variable_map_output_file, =]
[;, @, Option, (, name, =, "--variable_map_output_file", ,, usage, =, "File where the serialized version of the variable ", +, "renaming map produced should be saved", ), private, String, variable_map_output_file, =, "", ;]
[=, "--variable_map_output_file", ,, usage, =, "File where the serialized version of the variable ", +, "renaming map produced should be saved", ), private, String, variable_map_output_file, =, "", ;, @, Option, (, name, =]
[=, "File where the serialized version of the variable ", +, "renaming map produced should be saved", ), private, String, variable_map_output_file, =, "", ;, @, Option, (, name, =, "--create_name_map_files", ,, handler, =]
[String, variable_map_output_file, =, "", ;, @, Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[String, variable_map_output_file, =, "", ;, @, Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[String, variable_map_output_file, =, "", ;, @, Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[String, variable_map_output_file, =, "", ;, @, Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[String, variable_map_output_file, =, "", ;, @, Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[=, "", ;, @, Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "If true, variable renaming and property renaming map ", +]
[;, @, Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "If true, variable renaming and property renaming map ", +, "files will be produced as {binary name}_vars_map.out and ", +]
[Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "If true, variable renaming and property renaming map ", +, "files will be produced as {binary name}_vars_map.out and ", +, "{binary name}_props_map.out. Note that this flag cannot be used ", +]
[name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "If true, variable renaming and property renaming map ", +, "files will be produced as {binary name}_vars_map.out and ", +, "{binary name}_props_map.out. Note that this flag cannot be used ", +, "in conjunction with either variable_map_output_file or ", +]
[BooleanOptionHandler, ., class, ,, usage, =, "If true, variable renaming and property renaming map ", +, "files will be produced as {binary name}_vars_map.out and ", +, "{binary name}_props_map.out. Note that this flag cannot be used ", +, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file", ), private, boolean, create_name_map_files, =]
[class, ,, usage, =, "If true, variable renaming and property renaming map ", +, "files will be produced as {binary name}_vars_map.out and ", +, "{binary name}_props_map.out. Note that this flag cannot be used ", +, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file", ), private, boolean, create_name_map_files, =, false, ;]
[+, "files will be produced as {binary name}_vars_map.out and ", +, "{binary name}_props_map.out. Note that this flag cannot be used ", +, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file", ), private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =]
[+, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file", ), private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =, "--property_map_output_file", ,, usage, =]
[+, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file", ), private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =, "--property_map_output_file", ,, usage, =]
[+, "property_map_output_file", ), private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =, "--property_map_output_file", ,, usage, =, "File where the serialized version of the property ", +]
[=, false, ;, @, Option, (, name, =, "--property_map_output_file", ,, usage, =, "File where the serialized version of the property ", +, "renaming map produced should be saved", ), private, String, property_map_output_file, =]
[;, @, Option, (, name, =, "--property_map_output_file", ,, usage, =, "File where the serialized version of the property ", +, "renaming map produced should be saved", ), private, String, property_map_output_file, =, "", ;]
[=, "--property_map_output_file", ,, usage, =, "File where the serialized version of the property ", +, "renaming map produced should be saved", ), private, String, property_map_output_file, =, "", ;, @, Option, (, name, =]
[=, "File where the serialized version of the property ", +, "renaming map produced should be saved", ), private, String, property_map_output_file, =, "", ;, @, Option, (, name, =, "--third_party", ,, handler, =]
[String, property_map_output_file, =, "", ;, @, Option, (, name, =, "--third_party", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[String, property_map_output_file, =, "", ;, @, Option, (, name, =, "--third_party", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[=, "", ;, @, Option, (, name, =, "--third_party", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Check source validity but do not enforce Closure style ", +]
[name, =, "--third_party", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Check source validity but do not enforce Closure style ", +, "rules and conventions", ), private, boolean, third_party, =]
["--third_party", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Check source validity but do not enforce Closure style ", +, "rules and conventions", ), private, boolean, third_party, =, false, ;]
[., class, ,, usage, =, "Check source validity but do not enforce Closure style ", +, "rules and conventions", ), private, boolean, third_party, =, false, ;, @, Option, (, name, =]
[=, "Check source validity but do not enforce Closure style ", +, "rules and conventions", ), private, boolean, third_party, =, false, ;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =]
[=, "Check source validity but do not enforce Closure style ", +, "rules and conventions", ), private, boolean, third_party, =, false, ;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =]
[=, "Check source validity but do not enforce Closure style ", +, "rules and conventions", ), private, boolean, third_party, =, false, ;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =]
[=, "Check source validity but do not enforce Closure style ", +, "rules and conventions", ), private, boolean, third_party, =, false, ;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =]
[=, "Check source validity but do not enforce Closure style ", +, "rules and conventions", ), private, boolean, third_party, =, false, ;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =]
[+, "rules and conventions", ), private, boolean, third_party, =, false, ;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =, "Controls how detailed the compilation summary is. Values:", +]
[), private, boolean, third_party, =, false, ;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =, "Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +]
[boolean, third_party, =, false, ;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =, "Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +, "errors or warnings), 2 (print summary if the 'checkTypes' ", +]
[=, false, ;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =, "Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +, "errors or warnings), 2 (print summary if the 'checkTypes' ", +, "diagnostic  group is enabled, see --jscomp_warning), ", +]
[name, =, "--summary_detail_level", ,, usage, =, "Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +, "errors or warnings), 2 (print summary if the 'checkTypes' ", +, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =]
["--summary_detail_level", ,, usage, =, "Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +, "errors or warnings), 2 (print summary if the 'checkTypes' ", +, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;]
[+, " 0 (never print summary), 1 (print summary only if there are ", +, "errors or warnings), 2 (print summary if the 'checkTypes' ", +, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =]
[+, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,, usage, =]
[+, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,, usage, =]
[+, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,, usage, =]
[+, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,, usage, =, "Interpolate output into this string at the place denoted", +]
[), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,, usage, =, "Interpolate output into this string at the place denoted", +, " by the marker token %output%. Use marker token %output|jsstring%", +]
[;, @, Option, (, name, =, "--output_wrapper", ,, usage, =, "Interpolate output into this string at the place denoted", +, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output.", ), private, String, output_wrapper, =]
[Option, (, name, =, "--output_wrapper", ,, usage, =, "Interpolate output into this string at the place denoted", +, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output.", ), private, String, output_wrapper, =, "", ;]
[,, usage, =, "Interpolate output into this string at the place denoted", +, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output.", ), private, String, output_wrapper, =, "", ;, @, Option, (, name, =]
[+, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output.", ), private, String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =]
[+, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output.", ), private, String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =]
[+, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output.", ), private, String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =]
[+, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output.", ), private, String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =]
[+, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output.", ), private, String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =]
[+, " to do js string escaping on the output.", ), private, String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =, "An output wrapper for a JavaScript module (optional). ", +]
[), private, String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =, "An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +]
[String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =, "An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +, "with a module specified using --module. The wrapper must ", +]
[=, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =, "An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +, "with a module specified using --module. The wrapper must ", +, "contain %s as the code placeholder. The %basename% placeholder can ", +]
[,, usage, =, "An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +, "with a module specified using --module. The wrapper must ", +, "contain %s as the code placeholder. The %basename% placeholder can ", +, "also be used to substitute the base name of the module output file.", ), private, List, <, String, >, module_wrapper, =]
[,, usage, =, "An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +, "with a module specified using --module. The wrapper must ", +, "contain %s as the code placeholder. The %basename% placeholder can ", +, "also be used to substitute the base name of the module output file.", ), private, List, <, String, >, module_wrapper, =]
[+, "with a module specified using --module. The wrapper must ", +, "contain %s as the code placeholder. The %basename% placeholder can ", +, "also be used to substitute the base name of the module output file.", ), private, List, <, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;]
["also be used to substitute the base name of the module output file.", ), private, List, <, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =]
[<, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--module_output_path_prefix", ,, usage, =]
[<, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--module_output_path_prefix", ,, usage, =]
[<, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--module_output_path_prefix", ,, usage, =]
[>, module_wrapper, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--module_output_path_prefix", ,, usage, =, "Prefix for filenames of compiled JS modules. ", +]
[=, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--module_output_path_prefix", ,, usage, =, "Prefix for filenames of compiled JS modules. ", +, "<module-name>.js will be appended to this prefix. Directories ", +]
[;, @, Option, (, name, =, "--module_output_path_prefix", ,, usage, =, "Prefix for filenames of compiled JS modules. ", +, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =]
[Option, (, name, =, "--module_output_path_prefix", ,, usage, =, "Prefix for filenames of compiled JS modules. ", +, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =, "./", ;]
[,, usage, =, "Prefix for filenames of compiled JS modules. ", +, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =]
[+, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =]
[+, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =]
[+, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =]
[+, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =]
[+, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =]
[+, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =, "If specified, a source map file mapping the generated ", +]
[), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =, "If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +]
[String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =, "If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +, "output to the specified path. The %outname% placeholder will ", +]
[=, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =, "If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +, "output to the specified path. The %outname% placeholder will ", +, "expand to the name of the output file that the source map ", +]
[name, =, "--create_source_map", ,, usage, =, "If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +, "output to the specified path. The %outname% placeholder will ", +, "expand to the name of the output file that the source map ", +, "corresponds to.", ), private, String, create_source_map, =]
["--create_source_map", ,, usage, =, "If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +, "output to the specified path. The %outname% placeholder will ", +, "expand to the name of the output file that the source map ", +, "corresponds to.", ), private, String, create_source_map, =, "", ;]
[+, "source files back to the original source file will be ", +, "output to the specified path. The %outname% placeholder will ", +, "expand to the name of the output file that the source map ", +, "corresponds to.", ), private, String, create_source_map, =, "", ;, @, Option, (, name, =]
[+, "expand to the name of the output file that the source map ", +, "corresponds to.", ), private, String, create_source_map, =, "", ;, @, Option, (, name, =, "--source_map_format", ,, usage, =]
[+, "expand to the name of the output file that the source map ", +, "corresponds to.", ), private, String, create_source_map, =, "", ;, @, Option, (, name, =, "--source_map_format", ,, usage, =]
[+, "corresponds to.", ), private, String, create_source_map, =, "", ;, @, Option, (, name, =, "--source_map_format", ,, usage, =, "The source map format to produce. ", +]
[;, @, Option, (, name, =, "--source_map_format", ,, usage, =, "The source map format to produce. ", +, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.", ), private, SourceMap, ., Format, source_map_format, =]
[;, @, Option, (, name, =, "--source_map_format", ,, usage, =, "The source map format to produce. ", +, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.", ), private, SourceMap, ., Format, source_map_format, =]
[;, @, Option, (, name, =, "--source_map_format", ,, usage, =, "The source map format to produce. ", +, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.", ), private, SourceMap, ., Format, source_map_format, =]
["--source_map_format", ,, usage, =, "The source map format to produce. ", +, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.", ), private, SourceMap, ., Format, source_map_format, =, SourceMap, ., Format, ., DEFAULT, ;]
[=, "The source map format to produce. ", +, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.", ), private, SourceMap, ., Format, source_map_format, =, SourceMap, ., Format, ., DEFAULT, ;, @, SuppressWarnings, (]
[+, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.", ), private, SourceMap, ., Format, source_map_format, =, SourceMap, ., Format, ., DEFAULT, ;, @, SuppressWarnings, (, "unused", )]
[., Format, source_map_format, =, SourceMap, ., Format, ., DEFAULT, ;, @, SuppressWarnings, (, "unused", ), @, Option, (, name, =]
[SourceMap, ., Format, ., DEFAULT, ;, @, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_error", ,, handler, =]
[@, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_error", ,, handler, =, WarningGuardErrorOptionHandler, ., class, ,, usage, =]
[@, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_error", ,, handler, =, WarningGuardErrorOptionHandler, ., class, ,, usage, =]
[(, "unused", ), @, Option, (, name, =, "--jscomp_error", ,, handler, =, WarningGuardErrorOptionHandler, ., class, ,, usage, =, "Make the named class of warnings an error. Options:", +]
[(, "unused", ), @, Option, (, name, =, "--jscomp_error", ,, handler, =, WarningGuardErrorOptionHandler, ., class, ,, usage, =, "Make the named class of warnings an error. Options:", +]
[=, WarningGuardErrorOptionHandler, ., class, ,, usage, =, "Make the named class of warnings an error. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_error, =]
[=, WarningGuardErrorOptionHandler, ., class, ,, usage, =, "Make the named class of warnings an error. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_error, =]
[=, "Make the named class of warnings an error. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_error, =, Lists, ., newArrayList, (, ), ;]
[DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_error, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (]
[DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_error, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", )]
[String, >, jscomp_error, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", ), @, Option, (, name, =]
[Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_warning", ,, handler, =]
[@, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_warning", ,, handler, =, WarningGuardWarningOptionHandler, ., class, ,, usage, =]
[@, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_warning", ,, handler, =, WarningGuardWarningOptionHandler, ., class, ,, usage, =]
[@, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_warning", ,, handler, =, WarningGuardWarningOptionHandler, ., class, ,, usage, =]
[(, "unused", ), @, Option, (, name, =, "--jscomp_warning", ,, handler, =, WarningGuardWarningOptionHandler, ., class, ,, usage, =, "Make the named class of warnings a normal warning. ", +]
[), @, Option, (, name, =, "--jscomp_warning", ,, handler, =, WarningGuardWarningOptionHandler, ., class, ,, usage, =, "Make the named class of warnings a normal warning. ", +, "Options:", +]
[), @, Option, (, name, =, "--jscomp_warning", ,, handler, =, WarningGuardWarningOptionHandler, ., class, ,, usage, =, "Make the named class of warnings a normal warning. ", +, "Options:", +]
[., class, ,, usage, =, "Make the named class of warnings a normal warning. ", +, "Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_warning, =]
[., class, ,, usage, =, "Make the named class of warnings a normal warning. ", +, "Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_warning, =]
[+, "Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_warning, =, Lists, ., newArrayList, (, ), ;]
[DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_warning, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (]
[DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_warning, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", )]
[String, >, jscomp_warning, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", ), @, Option, (, name, =]
[Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_off", ,, handler, =]
[@, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_off", ,, handler, =, WarningGuardOffOptionHandler, ., class, ,, usage, =]
[@, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_off", ,, handler, =, WarningGuardOffOptionHandler, ., class, ,, usage, =]
[(, "unused", ), @, Option, (, name, =, "--jscomp_off", ,, handler, =, WarningGuardOffOptionHandler, ., class, ,, usage, =, "Turn off the named class of warnings. Options:", +]
[(, "unused", ), @, Option, (, name, =, "--jscomp_off", ,, handler, =, WarningGuardOffOptionHandler, ., class, ,, usage, =, "Turn off the named class of warnings. Options:", +]
[=, WarningGuardOffOptionHandler, ., class, ,, usage, =, "Turn off the named class of warnings. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_off, =]
[=, WarningGuardOffOptionHandler, ., class, ,, usage, =, "Turn off the named class of warnings. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_off, =]
[=, "Turn off the named class of warnings. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_off, =, Lists, ., newArrayList, (, ), ;]
[DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_off, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =]
[<, String, >, jscomp_off, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--define", ,, aliases, =]
[String, >, jscomp_off, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--define", ,, aliases, =, {]
[jscomp_off, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--define", ,, aliases, =, {, "--D", ,]
[(, ), ;, @, Option, (, name, =, "--define", ,, aliases, =, {, "--D", ,, "-D", }, ,, usage, =]
[(, ), ;, @, Option, (, name, =, "--define", ,, aliases, =, {, "--D", ,, "-D", }, ,, usage, =]
[(, ), ;, @, Option, (, name, =, "--define", ,, aliases, =, {, "--D", ,, "-D", }, ,, usage, =]
[(, ), ;, @, Option, (, name, =, "--define", ,, aliases, =, {, "--D", ,, "-D", }, ,, usage, =]
[(, ), ;, @, Option, (, name, =, "--define", ,, aliases, =, {, "--D", ,, "-D", }, ,, usage, =]
[;, @, Option, (, name, =, "--define", ,, aliases, =, {, "--D", ,, "-D", }, ,, usage, =, "Override the value of a variable annotated @define. ", +]
[Option, (, name, =, "--define", ,, aliases, =, {, "--D", ,, "-D", }, ,, usage, =, "Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define ", +]
[name, =, "--define", ,, aliases, =, {, "--D", ,, "-D", }, ,, usage, =, "Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define ", +, "variable and <val> is a boolean, number, or a single-quoted string ", +]
["--define", ,, aliases, =, {, "--D", ,, "-D", }, ,, usage, =, "Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define ", +, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, ", +]
[,, usage, =, "Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define ", +, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true", ), private, List, <, String, >, define, =]
[,, usage, =, "Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define ", +, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true", ), private, List, <, String, >, define, =]
[+, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true", ), private, List, <, String, >, define, =, Lists, ., newArrayList, (, ), ;]
["the variable is marked true", ), private, List, <, String, >, define, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =]
[<, String, >, define, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--charset", ,, usage, =]
[<, String, >, define, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--charset", ,, usage, =]
[>, define, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--charset", ,, usage, =, "Input and output charset for all files. By default, we ", +]
[(, ), ;, @, Option, (, name, =, "--charset", ,, usage, =, "Input and output charset for all files. By default, we ", +, "accept UTF-8 as input and output US_ASCII", ), private, String, charset, =]
[;, @, Option, (, name, =, "--charset", ,, usage, =, "Input and output charset for all files. By default, we ", +, "accept UTF-8 as input and output US_ASCII", ), private, String, charset, =, "", ;]
[=, "--charset", ,, usage, =, "Input and output charset for all files. By default, we ", +, "accept UTF-8 as input and output US_ASCII", ), private, String, charset, =, "", ;, @, Option, (, name, =]
[=, "Input and output charset for all files. By default, we ", +, "accept UTF-8 as input and output US_ASCII", ), private, String, charset, =, "", ;, @, Option, (, name, =, "--compilation_level", ,, usage, =]
[=, "Input and output charset for all files. By default, we ", +, "accept UTF-8 as input and output US_ASCII", ), private, String, charset, =, "", ;, @, Option, (, name, =, "--compilation_level", ,, usage, =]
[+, "accept UTF-8 as input and output US_ASCII", ), private, String, charset, =, "", ;, @, Option, (, name, =, "--compilation_level", ,, usage, =, "Specifies the compilation level to use. Options: ", +]
[=, "", ;, @, Option, (, name, =, "--compilation_level", ,, usage, =, "Specifies the compilation level to use. Options: ", +, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", ), private, CompilationLevel, compilation_level, =]
[=, "", ;, @, Option, (, name, =, "--compilation_level", ,, usage, =, "Specifies the compilation level to use. Options: ", +, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", ), private, CompilationLevel, compilation_level, =]
[Option, (, name, =, "--compilation_level", ,, usage, =, "Specifies the compilation level to use. Options: ", +, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", ), private, CompilationLevel, compilation_level, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;]
[,, usage, =, "Specifies the compilation level to use. Options: ", +, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", ), private, CompilationLevel, compilation_level, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, @, Option, (, name, =]
[+, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", ), private, CompilationLevel, compilation_level, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, @, Option, (, name, =, "--use_types_for_optimization", ,, usage, =]
[+, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", ), private, CompilationLevel, compilation_level, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, @, Option, (, name, =, "--use_types_for_optimization", ,, usage, =]
[+, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", ), private, CompilationLevel, compilation_level, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, @, Option, (, name, =, "--use_types_for_optimization", ,, usage, =]
[), private, CompilationLevel, compilation_level, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, @, Option, (, name, =, "--use_types_for_optimization", ,, usage, =, "Experimental: perform additional optimizations ", +]
[CompilationLevel, compilation_level, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, @, Option, (, name, =, "--use_types_for_optimization", ,, usage, =, "Experimental: perform additional optimizations ", +, "based on available information.  Inaccurate type annotations ", +]
[;, @, Option, (, name, =, "--use_types_for_optimization", ,, usage, =, "Experimental: perform additional optimizations ", +, "based on available information.  Inaccurate type annotations ", +, "may result in incorrect results.", ), private, boolean, use_types_for_optimization, =]
[Option, (, name, =, "--use_types_for_optimization", ,, usage, =, "Experimental: perform additional optimizations ", +, "based on available information.  Inaccurate type annotations ", +, "may result in incorrect results.", ), private, boolean, use_types_for_optimization, =, false, ;]
[,, usage, =, "Experimental: perform additional optimizations ", +, "based on available information.  Inaccurate type annotations ", +, "may result in incorrect results.", ), private, boolean, use_types_for_optimization, =, false, ;, @, Option, (, name, =]
[+, "based on available information.  Inaccurate type annotations ", +, "may result in incorrect results.", ), private, boolean, use_types_for_optimization, =, false, ;, @, Option, (, name, =, "--warning_level", ,, usage, =]
[+, "based on available information.  Inaccurate type annotations ", +, "may result in incorrect results.", ), private, boolean, use_types_for_optimization, =, false, ;, @, Option, (, name, =, "--warning_level", ,, usage, =]
[+, "may result in incorrect results.", ), private, boolean, use_types_for_optimization, =, false, ;, @, Option, (, name, =, "--warning_level", ,, usage, =, "Specifies the warning level to use. Options: ", +]
[=, false, ;, @, Option, (, name, =, "--warning_level", ,, usage, =, "Specifies the warning level to use. Options: ", +, "QUIET, DEFAULT, VERBOSE", ), private, WarningLevel, warning_level, =]
[=, false, ;, @, Option, (, name, =, "--warning_level", ,, usage, =, "Specifies the warning level to use. Options: ", +, "QUIET, DEFAULT, VERBOSE", ), private, WarningLevel, warning_level, =]
[Option, (, name, =, "--warning_level", ,, usage, =, "Specifies the warning level to use. Options: ", +, "QUIET, DEFAULT, VERBOSE", ), private, WarningLevel, warning_level, =, WarningLevel, ., DEFAULT, ;]
[,, usage, =, "Specifies the warning level to use. Options: ", +, "QUIET, DEFAULT, VERBOSE", ), private, WarningLevel, warning_level, =, WarningLevel, ., DEFAULT, ;, @, Option, (, name, =]
[+, "QUIET, DEFAULT, VERBOSE", ), private, WarningLevel, warning_level, =, WarningLevel, ., DEFAULT, ;, @, Option, (, name, =, "--use_only_custom_externs", ,, handler, =]
[=, WarningLevel, ., DEFAULT, ;, @, Option, (, name, =, "--use_only_custom_externs", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[Option, (, name, =, "--use_only_custom_externs", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Specifies whether the default externs should be excluded", ), private, boolean, use_only_custom_externs, =]
[name, =, "--use_only_custom_externs", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Specifies whether the default externs should be excluded", ), private, boolean, use_only_custom_externs, =, false, ;]
[=, BooleanOptionHandler, ., class, ,, usage, =, "Specifies whether the default externs should be excluded", ), private, boolean, use_only_custom_externs, =, false, ;, @, Option, (, name, =]
[,, usage, =, "Specifies whether the default externs should be excluded", ), private, boolean, use_only_custom_externs, =, false, ;, @, Option, (, name, =, "--debug", ,, handler, =]
[boolean, use_only_custom_externs, =, false, ;, @, Option, (, name, =, "--debug", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[Option, (, name, =, "--debug", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Enable debugging options", ), private, boolean, debug, =]
[name, =, "--debug", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Enable debugging options", ), private, boolean, debug, =, false, ;]
[=, BooleanOptionHandler, ., class, ,, usage, =, "Enable debugging options", ), private, boolean, debug, =, false, ;, @, Option, (, name, =]
[,, usage, =, "Enable debugging options", ), private, boolean, debug, =, false, ;, @, Option, (, name, =, "--generate_exports", ,, handler, =]
[boolean, debug, =, false, ;, @, Option, (, name, =, "--generate_exports", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[Option, (, name, =, "--generate_exports", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Generates export code for those marked with @export", ), private, boolean, generate_exports, =]
[name, =, "--generate_exports", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Generates export code for those marked with @export", ), private, boolean, generate_exports, =, false, ;]
[=, BooleanOptionHandler, ., class, ,, usage, =, "Generates export code for those marked with @export", ), private, boolean, generate_exports, =, false, ;, @, Option, (, name, =]
[,, usage, =, "Generates export code for those marked with @export", ), private, boolean, generate_exports, =, false, ;, @, Option, (, name, =, "--formatting", ,, usage, =]
[,, usage, =, "Generates export code for those marked with @export", ), private, boolean, generate_exports, =, false, ;, @, Option, (, name, =, "--formatting", ,, usage, =]
[,, usage, =, "Generates export code for those marked with @export", ), private, boolean, generate_exports, =, false, ;, @, Option, (, name, =, "--formatting", ,, usage, =]
[=, "Generates export code for those marked with @export", ), private, boolean, generate_exports, =, false, ;, @, Option, (, name, =, "--formatting", ,, usage, =, "Specifies which formatting options, if any, should be ", +]
[), private, boolean, generate_exports, =, false, ;, @, Option, (, name, =, "--formatting", ,, usage, =, "Specifies which formatting options, if any, should be ", +, "applied to the output JS. Options: ", +]
[(, name, =, "--formatting", ,, usage, =, "Specifies which formatting options, if any, should be ", +, "applied to the output JS. Options: ", +, "PRETTY_PRINT, PRINT_INPUT_DELIMITER, SINGLE_QUOTES", ), private, List, <, FormattingOption, >, formatting, =]
[(, name, =, "--formatting", ,, usage, =, "Specifies which formatting options, if any, should be ", +, "applied to the output JS. Options: ", +, "PRETTY_PRINT, PRINT_INPUT_DELIMITER, SINGLE_QUOTES", ), private, List, <, FormattingOption, >, formatting, =]
[=, "Specifies which formatting options, if any, should be ", +, "applied to the output JS. Options: ", +, "PRETTY_PRINT, PRINT_INPUT_DELIMITER, SINGLE_QUOTES", ), private, List, <, FormattingOption, >, formatting, =, Lists, ., newArrayList, (, ), ;]
["PRETTY_PRINT, PRINT_INPUT_DELIMITER, SINGLE_QUOTES", ), private, List, <, FormattingOption, >, formatting, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =]
[<, FormattingOption, >, formatting, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--process_common_js_modules", ,, usage, =]
[., newArrayList, (, ), ;, @, Option, (, name, =, "--process_common_js_modules", ,, usage, =, "Process CommonJS modules to a concatenable form.", ), private, boolean, process_common_js_modules, =]
[(, ), ;, @, Option, (, name, =, "--process_common_js_modules", ,, usage, =, "Process CommonJS modules to a concatenable form.", ), private, boolean, process_common_js_modules, =, false, ;]
[(, name, =, "--process_common_js_modules", ,, usage, =, "Process CommonJS modules to a concatenable form.", ), private, boolean, process_common_js_modules, =, false, ;, @, Option, (, name, =]
[,, usage, =, "Process CommonJS modules to a concatenable form.", ), private, boolean, process_common_js_modules, =, false, ;, @, Option, (, name, =, "--common_js_module_path_prefix", ,, usage, =]
[boolean, process_common_js_modules, =, false, ;, @, Option, (, name, =, "--common_js_module_path_prefix", ,, usage, =, "Path prefix to be removed from CommonJS module names.", ), private, String, common_js_path_prefix, =]
[boolean, process_common_js_modules, =, false, ;, @, Option, (, name, =, "--common_js_module_path_prefix", ,, usage, =, "Path prefix to be removed from CommonJS module names.", ), private, String, common_js_path_prefix, =]
[;, @, Option, (, name, =, "--common_js_module_path_prefix", ,, usage, =, "Path prefix to be removed from CommonJS module names.", ), private, String, common_js_path_prefix, =, ProcessCommonJSModules, ., DEFAULT_FILENAME_PREFIX, ;]
[=, "--common_js_module_path_prefix", ,, usage, =, "Path prefix to be removed from CommonJS module names.", ), private, String, common_js_path_prefix, =, ProcessCommonJSModules, ., DEFAULT_FILENAME_PREFIX, ;, @, Option, (, name, =]
[=, "Path prefix to be removed from CommonJS module names.", ), private, String, common_js_path_prefix, =, ProcessCommonJSModules, ., DEFAULT_FILENAME_PREFIX, ;, @, Option, (, name, =, "--common_js_entry_module", ,, usage, =]
[=, "Path prefix to be removed from CommonJS module names.", ), private, String, common_js_path_prefix, =, ProcessCommonJSModules, ., DEFAULT_FILENAME_PREFIX, ;, @, Option, (, name, =, "--common_js_entry_module", ,, usage, =]
[), private, String, common_js_path_prefix, =, ProcessCommonJSModules, ., DEFAULT_FILENAME_PREFIX, ;, @, Option, (, name, =, "--common_js_entry_module", ,, usage, =, "Root of your common JS dependency hierarchy. ", +]
[., DEFAULT_FILENAME_PREFIX, ;, @, Option, (, name, =, "--common_js_entry_module", ,, usage, =, "Root of your common JS dependency hierarchy. ", +, "Your main script.", ), private, String, common_js_entry_module, ;]
[(, name, =, "--common_js_entry_module", ,, usage, =, "Root of your common JS dependency hierarchy. ", +, "Your main script.", ), private, String, common_js_entry_module, ;, @, Option, (, name, =]
[,, usage, =, "Root of your common JS dependency hierarchy. ", +, "Your main script.", ), private, String, common_js_entry_module, ;, @, Option, (, name, =, "--transform_amd_modules", ,, usage, =]
[), private, String, common_js_entry_module, ;, @, Option, (, name, =, "--transform_amd_modules", ,, usage, =, "Transform AMD to CommonJS modules.", ), private, boolean, transform_amd_modules, =]
[String, common_js_entry_module, ;, @, Option, (, name, =, "--transform_amd_modules", ,, usage, =, "Transform AMD to CommonJS modules.", ), private, boolean, transform_amd_modules, =, false, ;]
[(, name, =, "--transform_amd_modules", ,, usage, =, "Transform AMD to CommonJS modules.", ), private, boolean, transform_amd_modules, =, false, ;, @, Option, (, name, =]
[,, usage, =, "Transform AMD to CommonJS modules.", ), private, boolean, transform_amd_modules, =, false, ;, @, Option, (, name, =, "--process_closure_primitives", ,, handler, =]
[boolean, transform_amd_modules, =, false, ;, @, Option, (, name, =, "--process_closure_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[boolean, transform_amd_modules, =, false, ;, @, Option, (, name, =, "--process_closure_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[=, false, ;, @, Option, (, name, =, "--process_closure_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Processes built-ins from the Closure library, such as ", +]
[name, =, "--process_closure_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Processes built-ins from the Closure library, such as ", +, "goog.require(), goog.provide(), and goog.exportSymbol()", ), private, boolean, process_closure_primitives, =]
["--process_closure_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Processes built-ins from the Closure library, such as ", +, "goog.require(), goog.provide(), and goog.exportSymbol()", ), private, boolean, process_closure_primitives, =, true, ;]
[., class, ,, usage, =, "Processes built-ins from the Closure library, such as ", +, "goog.require(), goog.provide(), and goog.exportSymbol()", ), private, boolean, process_closure_primitives, =, true, ;, @, Option, (, name, =]
[=, "Processes built-ins from the Closure library, such as ", +, "goog.require(), goog.provide(), and goog.exportSymbol()", ), private, boolean, process_closure_primitives, =, true, ;, @, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =]
[boolean, process_closure_primitives, =, true, ;, @, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[boolean, process_closure_primitives, =, true, ;, @, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[boolean, process_closure_primitives, =, true, ;, @, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[boolean, process_closure_primitives, =, true, ;, @, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[boolean, process_closure_primitives, =, true, ;, @, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[=, true, ;, @, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Automatically sort dependencies so that a file that ", +]
[;, @, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Automatically sort dependencies so that a file that ", +, "goog.provides symbol X will always come before a file that ", +]
[Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Automatically sort dependencies so that a file that ", +, "goog.provides symbol X will always come before a file that ", +, "goog.requires symbol X. If an input provides symbols, and ", +]
[name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Automatically sort dependencies so that a file that ", +, "goog.provides symbol X will always come before a file that ", +, "goog.requires symbol X. If an input provides symbols, and ", +, "those symbols are never required, then that input will not ", +]
[BooleanOptionHandler, ., class, ,, usage, =, "Automatically sort dependencies so that a file that ", +, "goog.provides symbol X will always come before a file that ", +, "goog.requires symbol X. If an input provides symbols, and ", +, "those symbols are never required, then that input will not ", +, "be included in the compilation.", ), private, boolean, manage_closure_dependencies, =]
[class, ,, usage, =, "Automatically sort dependencies so that a file that ", +, "goog.provides symbol X will always come before a file that ", +, "goog.requires symbol X. If an input provides symbols, and ", +, "those symbols are never required, then that input will not ", +, "be included in the compilation.", ), private, boolean, manage_closure_dependencies, =, false, ;]
[+, "goog.provides symbol X will always come before a file that ", +, "goog.requires symbol X. If an input provides symbols, and ", +, "those symbols are never required, then that input will not ", +, "be included in the compilation.", ), private, boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =]
[+, "those symbols are never required, then that input will not ", +, "be included in the compilation.", ), private, boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =]
[boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[=, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Only include files in the transitive dependency of the ", +]
[;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Only include files in the transitive dependency of the ", +, "entry points (specified by closure_entry_point). Files that do ", +]
[Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Only include files in the transitive dependency of the ", +, "entry points (specified by closure_entry_point). Files that do ", +, "not provide dependencies will be removed. This supersedes", +]
[handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Only include files in the transitive dependency of the ", +, "entry points (specified by closure_entry_point). Files that do ", +, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =]
[BooleanOptionHandler, ., class, ,, usage, =, "Only include files in the transitive dependency of the ", +, "entry points (specified by closure_entry_point). Files that do ", +, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;]
[=, "Only include files in the transitive dependency of the ", +, "entry points (specified by closure_entry_point). Files that do ", +, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =]
[+, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =]
[+, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =]
[+, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =]
[+, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =]
[+, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =]
[+, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =]
[+, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =]
[+, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =, "Entry points to the program. Must be goog.provide'd ", +]
[), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =, "Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +]
[boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =, "Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +]
[=, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =, "Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +]
[;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =, "Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +]
[Option, (, name, =, "--closure_entry_point", ,, usage, =, "Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +]
[+, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =]
[+, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =]
[+, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =, Lists, ., newArrayList, (, ), ;]
["all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =]
[<, String, >, closure_entry_point, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--process_jquery_primitives", ,, handler, =]
[., newArrayList, (, ), ;, @, Option, (, name, =, "--process_jquery_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[., newArrayList, (, ), ;, @, Option, (, name, =, "--process_jquery_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[(, ), ;, @, Option, (, name, =, "--process_jquery_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Processes built-ins from the Jquery library, such as ", +]
[name, =, "--process_jquery_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()", ), private, boolean, process_jquery_primitives, =]
["--process_jquery_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()", ), private, boolean, process_jquery_primitives, =, false, ;]
[., class, ,, usage, =, "Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()", ), private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =]
[=, "Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()", ), private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =]
[=, "Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()", ), private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =]
[=, "Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()", ), private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =]
[=, "Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()", ), private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =]
[=, "Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()", ), private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =]
[=, "Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()", ), private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =]
[+, "jQuery.fn and jQuery.extend()", ), private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =, "Prints out a list of all the files in the compilation. ", +]
[), private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =, "Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +]
[boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =, "Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. ", +]
[=, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =, "Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. ", +]
[;, @, Option, (, name, =, "--output_manifest", ,, usage, =, "Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create ", +]
["--output_manifest", ,, usage, =, "Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create ", +, "a manifest for each module.", ), private, String, output_manifest, =]
[usage, =, "Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create ", +, "a manifest for each module.", ), private, String, output_manifest, =, "", ;]
[+, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create ", +, "a manifest for each module.", ), private, String, output_manifest, =, "", ;, @, Option, (, name, =]
[+, "If you're using modularization, using %outname% will create ", +, "a manifest for each module.", ), private, String, output_manifest, =, "", ;, @, Option, (, name, =, "--output_module_dependencies", ,, usage, =]
[String, output_manifest, =, "", ;, @, Option, (, name, =, "--output_module_dependencies", ,, usage, =, "Prints out a JSON file of dependencies between modules.", ), private, String, output_module_dependencies, =]
[=, "", ;, @, Option, (, name, =, "--output_module_dependencies", ,, usage, =, "Prints out a JSON file of dependencies between modules.", ), private, String, output_module_dependencies, =, "", ;]
[(, name, =, "--output_module_dependencies", ,, usage, =, "Prints out a JSON file of dependencies between modules.", ), private, String, output_module_dependencies, =, "", ;, @, Option, (, name, =]
[,, usage, =, "Prints out a JSON file of dependencies between modules.", ), private, String, output_module_dependencies, =, "", ;, @, Option, (, name, =, "--accept_const_keyword", ,, usage, =]
[String, output_module_dependencies, =, "", ;, @, Option, (, name, =, "--accept_const_keyword", ,, usage, =, "Allows usage of const keyword.", ), private, boolean, accept_const_keyword, =]
[=, "", ;, @, Option, (, name, =, "--accept_const_keyword", ,, usage, =, "Allows usage of const keyword.", ), private, boolean, accept_const_keyword, =, false, ;]
[(, name, =, "--accept_const_keyword", ,, usage, =, "Allows usage of const keyword.", ), private, boolean, accept_const_keyword, =, false, ;, @, Option, (, name, =]
[,, usage, =, "Allows usage of const keyword.", ), private, boolean, accept_const_keyword, =, false, ;, @, Option, (, name, =, "--language_in", ,, usage, =]
[,, usage, =, "Allows usage of const keyword.", ), private, boolean, accept_const_keyword, =, false, ;, @, Option, (, name, =, "--language_in", ,, usage, =]
[=, "Allows usage of const keyword.", ), private, boolean, accept_const_keyword, =, false, ;, @, Option, (, name, =, "--language_in", ,, usage, =, "Sets what language spec that input sources conform. ", +]
[=, false, ;, @, Option, (, name, =, "--language_in", ,, usage, =, "Sets what language spec that input sources conform. ", +, "Options: ECMASCRIPT3 (default), ECMASCRIPT5, ECMASCRIPT5_STRICT", ), private, String, language_in, =]
[;, @, Option, (, name, =, "--language_in", ,, usage, =, "Sets what language spec that input sources conform. ", +, "Options: ECMASCRIPT3 (default), ECMASCRIPT5, ECMASCRIPT5_STRICT", ), private, String, language_in, =, "ECMASCRIPT3", ;]
[=, "--language_in", ,, usage, =, "Sets what language spec that input sources conform. ", +, "Options: ECMASCRIPT3 (default), ECMASCRIPT5, ECMASCRIPT5_STRICT", ), private, String, language_in, =, "ECMASCRIPT3", ;, @, Option, (, name, =]
[=, "Sets what language spec that input sources conform. ", +, "Options: ECMASCRIPT3 (default), ECMASCRIPT5, ECMASCRIPT5_STRICT", ), private, String, language_in, =, "ECMASCRIPT3", ;, @, Option, (, name, =, "--version", ,, handler, =]
[String, language_in, =, "ECMASCRIPT3", ;, @, Option, (, name, =, "--version", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[Option, (, name, =, "--version", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints the compiler version to stderr.", ), private, boolean, version, =]
[name, =, "--version", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints the compiler version to stderr.", ), private, boolean, version, =, false, ;]
[=, BooleanOptionHandler, ., class, ,, usage, =, "Prints the compiler version to stderr.", ), private, boolean, version, =, false, ;, @, Option, (, name, =]
[,, usage, =, "Prints the compiler version to stderr.", ), private, boolean, version, =, false, ;, @, Option, (, name, =, "--translations_file", ,, usage, =]
[boolean, version, =, false, ;, @, Option, (, name, =, "--translations_file", ,, usage, =, "Source of translated messages. Currently only supports XTB.", ), private, String, translationsFile, =]
[=, false, ;, @, Option, (, name, =, "--translations_file", ,, usage, =, "Source of translated messages. Currently only supports XTB.", ), private, String, translationsFile, =, "", ;]
[(, name, =, "--translations_file", ,, usage, =, "Source of translated messages. Currently only supports XTB.", ), private, String, translationsFile, =, "", ;, @, Option, (, name, =]
[,, usage, =, "Source of translated messages. Currently only supports XTB.", ), private, String, translationsFile, =, "", ;, @, Option, (, name, =, "--translations_project", ,, usage, =]
[,, usage, =, "Source of translated messages. Currently only supports XTB.", ), private, String, translationsFile, =, "", ;, @, Option, (, name, =, "--translations_project", ,, usage, =]
[,, usage, =, "Source of translated messages. Currently only supports XTB.", ), private, String, translationsFile, =, "", ;, @, Option, (, name, =, "--translations_project", ,, usage, =]
[=, "Source of translated messages. Currently only supports XTB.", ), private, String, translationsFile, =, "", ;, @, Option, (, name, =, "--translations_project", ,, usage, =, "Scopes all translations to the specified project.", +]
[), private, String, translationsFile, =, "", ;, @, Option, (, name, =, "--translations_project", ,, usage, =, "Scopes all translations to the specified project.", +, "When specified, we will use different message ids so that messages ", +]
[;, @, Option, (, name, =, "--translations_project", ,, usage, =, "Scopes all translations to the specified project.", +, "When specified, we will use different message ids so that messages ", +, "in different projects can have different translations.", ), private, String, translationsProject, =]
[Option, (, name, =, "--translations_project", ,, usage, =, "Scopes all translations to the specified project.", +, "When specified, we will use different message ids so that messages ", +, "in different projects can have different translations.", ), private, String, translationsProject, =, null, ;]
[,, usage, =, "Scopes all translations to the specified project.", +, "When specified, we will use different message ids so that messages ", +, "in different projects can have different translations.", ), private, String, translationsProject, =, null, ;, @, Option, (, name, =]
[+, "When specified, we will use different message ids so that messages ", +, "in different projects can have different translations.", ), private, String, translationsProject, =, null, ;, @, Option, (, name, =, "--flagfile", ,, usage, =]
[String, translationsProject, =, null, ;, @, Option, (, name, =, "--flagfile", ,, usage, =, "A file containing additional command-line options.", ), private, String, flag_file, =]
[=, null, ;, @, Option, (, name, =, "--flagfile", ,, usage, =, "A file containing additional command-line options.", ), private, String, flag_file, =, "", ;]
[(, name, =, "--flagfile", ,, usage, =, "A file containing additional command-line options.", ), private, String, flag_file, =, "", ;, @, Option, (, name, =]
[,, usage, =, "A file containing additional command-line options.", ), private, String, flag_file, =, "", ;, @, Option, (, name, =, "--warnings_whitelist_file", ,, usage, =]
[,, usage, =, "A file containing additional command-line options.", ), private, String, flag_file, =, "", ;, @, Option, (, name, =, "--warnings_whitelist_file", ,, usage, =]
[,, usage, =, "A file containing additional command-line options.", ), private, String, flag_file, =, "", ;, @, Option, (, name, =, "--warnings_whitelist_file", ,, usage, =]
[=, "A file containing additional command-line options.", ), private, String, flag_file, =, "", ;, @, Option, (, name, =, "--warnings_whitelist_file", ,, usage, =, "A file containing warnings to suppress. Each line should be ", +]
[), private, String, flag_file, =, "", ;, @, Option, (, name, =, "--warnings_whitelist_file", ,, usage, =, "A file containing warnings to suppress. Each line should be ", +, "of the form\n", +]
[;, @, Option, (, name, =, "--warnings_whitelist_file", ,, usage, =, "A file containing warnings to suppress. Each line should be ", +, "of the form\n", +, "<file-name>:<line-number>?  <warning-description>", ), private, String, warnings_whitelist_file, =]
[+, "of the form\n", +, "<file-name>:<line-number>?  <warning-description>", ), private, String, warnings_whitelist_file, =, "", ;, @, Argument, private, List, <, String, >, arguments, =]
[+, "of the form\n", +, "<file-name>:<line-number>?  <warning-description>", ), private, String, warnings_whitelist_file, =, "", ;, @, Argument, private, List, <, String, >, arguments, =]
[Lists, ., newArrayList, (, ), ;, List, <, String, >, getJsFiles, (, ), {, List, <, String, >, allJsInputs, =]
[Lists, ., newArrayList, (, ), ;, List, <, String, >, getJsFiles, (, ), {, List, <, String, >, allJsInputs, =]
[), ;, List, <, String, >, getJsFiles, (, ), {, List, <, String, >, allJsInputs, =, Lists, ., newArrayListWithCapacity, (]
[), ;, List, <, String, >, getJsFiles, (, ), {, List, <, String, >, allJsInputs, =, Lists, ., newArrayListWithCapacity, (]
[), ;, List, <, String, >, getJsFiles, (, ), {, List, <, String, >, allJsInputs, =, Lists, ., newArrayListWithCapacity, (]
[getJsFiles, (, ), {, List, <, String, >, allJsInputs, =, Lists, ., newArrayListWithCapacity, (, js, ., size, (, ), +]
[getJsFiles, (, ), {, List, <, String, >, allJsInputs, =, Lists, ., newArrayListWithCapacity, (, js, ., size, (, ), +]
[>, allJsInputs, =, Lists, ., newArrayListWithCapacity, (, js, ., size, (, ), +, arguments, ., size, (, ), ), ;]
[>, allJsInputs, =, Lists, ., newArrayListWithCapacity, (, js, ., size, (, ), +, arguments, ., size, (, ), ), ;]
[., newArrayListWithCapacity, (, js, ., size, (, ), +, arguments, ., size, (, ), ), ;, allJsInputs, ., addAll, (]
[js, ., size, (, ), +, arguments, ., size, (, ), ), ;, allJsInputs, ., addAll, (, js, ), ;]
[js, ., size, (, ), +, arguments, ., size, (, ), ), ;, allJsInputs, ., addAll, (, js, ), ;]
[), +, arguments, ., size, (, ), ), ;, allJsInputs, ., addAll, (, js, ), ;, allJsInputs, ., addAll, (]
[size, (, ), ), ;, allJsInputs, ., addAll, (, js, ), ;, allJsInputs, ., addAll, (, arguments, ), ;, return]
[}, public, static, class, BooleanOptionHandler, extends, OptionHandler, <, Boolean, >, {, private, static, final, Set, <, String, >, TRUES, =]
[}, public, static, class, BooleanOptionHandler, extends, OptionHandler, <, Boolean, >, {, private, static, final, Set, <, String, >, TRUES, =]
[BooleanOptionHandler, extends, OptionHandler, <, Boolean, >, {, private, static, final, Set, <, String, >, TRUES, =, Sets, ., newHashSet, (]
[OptionHandler, <, Boolean, >, {, private, static, final, Set, <, String, >, TRUES, =, Sets, ., newHashSet, (, "true", ,]
[Boolean, >, {, private, static, final, Set, <, String, >, TRUES, =, Sets, ., newHashSet, (, "true", ,, "on", ,]
[{, private, static, final, Set, <, String, >, TRUES, =, Sets, ., newHashSet, (, "true", ,, "on", ,, "yes", ,]
[newHashSet, (, "true", ,, "on", ,, "yes", ,, "1", ), ;, private, static, final, Set, <, String, >, FALSES, =]
[newHashSet, (, "true", ,, "on", ,, "yes", ,, "1", ), ;, private, static, final, Set, <, String, >, FALSES, =]
["on", ,, "yes", ,, "1", ), ;, private, static, final, Set, <, String, >, FALSES, =, Sets, ., newHashSet, (]
["yes", ,, "1", ), ;, private, static, final, Set, <, String, >, FALSES, =, Sets, ., newHashSet, (, "false", ,]
["1", ), ;, private, static, final, Set, <, String, >, FALSES, =, Sets, ., newHashSet, (, "false", ,, "off", ,]
[;, private, static, final, Set, <, String, >, FALSES, =, Sets, ., newHashSet, (, "false", ,, "off", ,, "no", ,]
[public, BooleanOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option, ,, Setter, <, ?, super, Boolean, >, setter, ), {, super, (]
[(, CmdLineParser, parser, ,, OptionDef, option, ,, Setter, <, ?, super, Boolean, >, setter, ), {, super, (, parser, ,]
[parser, ,, OptionDef, option, ,, Setter, <, ?, super, Boolean, >, setter, ), {, super, (, parser, ,, option, ,]
[,, setter, ), ;, }, @, Override, public, int, parseArguments, (, Parameters, params, ), throws, CmdLineException, {, String, param, =]
[}, @, Override, public, int, parseArguments, (, Parameters, params, ), throws, CmdLineException, {, String, param, =, null, ;, try, {]
[Override, public, int, parseArguments, (, Parameters, params, ), throws, CmdLineException, {, String, param, =, null, ;, try, {, param, =]
[Override, public, int, parseArguments, (, Parameters, params, ), throws, CmdLineException, {, String, param, =, null, ;, try, {, param, =]
[(, Parameters, params, ), throws, CmdLineException, {, String, param, =, null, ;, try, {, param, =, params, ., getParameter, (]
[{, param, =, params, ., getParameter, (, 0, ), ;, }, catch, (, CmdLineException, e, ), {, }, if, (]
[{, param, =, params, ., getParameter, (, 0, ), ;, }, catch, (, CmdLineException, e, ), {, }, if, (]
[=, params, ., getParameter, (, 0, ), ;, }, catch, (, CmdLineException, e, ), {, }, if, (, param, ==]
[getParameter, (, 0, ), ;, }, catch, (, CmdLineException, e, ), {, }, if, (, param, ==, null, ), {]
[getParameter, (, 0, ), ;, }, catch, (, CmdLineException, e, ), {, }, if, (, param, ==, null, ), {]
[;, }, catch, (, CmdLineException, e, ), {, }, if, (, param, ==, null, ), {, setter, ., addValue, (]
[CmdLineException, e, ), {, }, if, (, param, ==, null, ), {, setter, ., addValue, (, true, ), ;, return]
[==, null, ), {, setter, ., addValue, (, true, ), ;, return, 0, ;, }, else, {, String, lowerParam, =]
[==, null, ), {, setter, ., addValue, (, true, ), ;, return, 0, ;, }, else, {, String, lowerParam, =]
[true, ), ;, return, 0, ;, }, else, {, String, lowerParam, =, param, ., toLowerCase, (, ), ;, if, (]
[true, ), ;, return, 0, ;, }, else, {, String, lowerParam, =, param, ., toLowerCase, (, ), ;, if, (]
[0, ;, }, else, {, String, lowerParam, =, param, ., toLowerCase, (, ), ;, if, (, TRUES, ., contains, (]
[{, String, lowerParam, =, param, ., toLowerCase, (, ), ;, if, (, TRUES, ., contains, (, lowerParam, ), ), {]
[{, String, lowerParam, =, param, ., toLowerCase, (, ), ;, if, (, TRUES, ., contains, (, lowerParam, ), ), {]
[param, ., toLowerCase, (, ), ;, if, (, TRUES, ., contains, (, lowerParam, ), ), {, setter, ., addValue, (]
[(, TRUES, ., contains, (, lowerParam, ), ), {, setter, ., addValue, (, true, ), ;, }, else, if, (]
[(, TRUES, ., contains, (, lowerParam, ), ), {, setter, ., addValue, (, true, ), ;, }, else, if, (]
[(, lowerParam, ), ), {, setter, ., addValue, (, true, ), ;, }, else, if, (, FALSES, ., contains, (]
[{, setter, ., addValue, (, true, ), ;, }, else, if, (, FALSES, ., contains, (, lowerParam, ), ), {]
[{, setter, ., addValue, (, true, ), ;, }, else, if, (, FALSES, ., contains, (, lowerParam, ), ), {]
[(, true, ), ;, }, else, if, (, FALSES, ., contains, (, lowerParam, ), ), {, setter, ., addValue, (]
[if, (, FALSES, ., contains, (, lowerParam, ), ), {, setter, ., addValue, (, false, ), ;, }, else, {]
[if, (, FALSES, ., contains, (, lowerParam, ), ), {, setter, ., addValue, (, false, ), ;, }, else, {]
[contains, (, lowerParam, ), ), {, setter, ., addValue, (, false, ), ;, }, else, {, setter, ., addValue, (]
[), {, setter, ., addValue, (, false, ), ;, }, else, {, setter, ., addValue, (, true, ), ;, return]
[addValue, (, false, ), ;, }, else, {, setter, ., addValue, (, true, ), ;, return, 0, ;, }, return]
[), ;, return, 0, ;, }, return, 1, ;, }, }, @, Override, public, String, getDefaultMetaVariable, (, ), {, return]
[public, WarningGuardErrorOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option, ,, Setter, <, ?, super, String, >, setter, ), {, super, (]
[(, CmdLineParser, parser, ,, OptionDef, option, ,, Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,]
[parser, ,, OptionDef, option, ,, Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,, option, ,]
[option, ,, Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,, option, ,, new, WarningGuardSetter, (]
[Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,, option, ,, new, WarningGuardSetter, (, setter, ,]
[Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,, option, ,, new, WarningGuardSetter, (, setter, ,]
[public, WarningGuardWarningOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option, ,, Setter, <, ?, super, String, >, setter, ), {, super, (]
[(, CmdLineParser, parser, ,, OptionDef, option, ,, Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,]
[parser, ,, OptionDef, option, ,, Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,, option, ,]
[option, ,, Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,, option, ,, new, WarningGuardSetter, (]
[Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,, option, ,, new, WarningGuardSetter, (, setter, ,]
[Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,, option, ,, new, WarningGuardSetter, (, setter, ,]
[public, WarningGuardOffOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option, ,, Setter, <, ?, super, String, >, setter, ), {, super, (]
[(, CmdLineParser, parser, ,, OptionDef, option, ,, Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,]
[parser, ,, OptionDef, option, ,, Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,, option, ,]
[option, ,, Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,, option, ,, new, WarningGuardSetter, (]
[Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,, option, ,, new, WarningGuardSetter, (, setter, ,]
[Setter, <, ?, super, String, >, setter, ), {, super, (, parser, ,, option, ,, new, WarningGuardSetter, (, setter, ,]
[private, final, CheckLevel, level, ;, private, WarningGuardSetter, (, Setter, <, ?, super, String, >, proxy, ,, CheckLevel, level, ), {]
[private, final, CheckLevel, level, ;, private, WarningGuardSetter, (, Setter, <, ?, super, String, >, proxy, ,, CheckLevel, level, ), {]
[;, private, WarningGuardSetter, (, Setter, <, ?, super, String, >, proxy, ,, CheckLevel, level, ), {, this, ., proxy, =]
[WarningGuardSetter, (, Setter, <, ?, super, String, >, proxy, ,, CheckLevel, level, ), {, this, ., proxy, =, proxy, ;]
[WarningGuardSetter, (, Setter, <, ?, super, String, >, proxy, ,, CheckLevel, level, ), {, this, ., proxy, =, proxy, ;]
[?, super, String, >, proxy, ,, CheckLevel, level, ), {, this, ., proxy, =, proxy, ;, this, ., level, =]
[proxy, =, proxy, ;, this, ., level, =, level, ;, }, @, Override, public, boolean, isMultiValued, (, ), {, return]
[proxy, =, proxy, ;, this, ., level, =, level, ;, }, @, Override, public, boolean, isMultiValued, (, ), {, return]
[return, proxy, ., isMultiValued, (, ), ;, }, @, Override, public, Class, <, String, >, getType, (, ), {, return]
[;, }, @, Override, public, Class, <, String, >, getType, (, ), {, return, (, Class, <, String, >, )]
[;, }, @, Override, public, Class, <, String, >, getType, (, ), {, return, (, Class, <, String, >, )]
[), proxy, ., getType, (, ), ;, }, @, Override, public, void, addValue, (, String, value, ), throws, CmdLineException, {]
[), proxy, ., getType, (, ), ;, }, @, Override, public, void, addValue, (, String, value, ), throws, CmdLineException, {]
[(, ), ;, }, @, Override, public, void, addValue, (, String, value, ), throws, CmdLineException, {, proxy, ., addValue, (]
[}, @, Override, public, void, addValue, (, String, value, ), throws, CmdLineException, {, proxy, ., addValue, (, value, ), ;]
[}, @, Override, public, void, addValue, (, String, value, ), throws, CmdLineException, {, proxy, ., addValue, (, value, ), ;]
[void, addValue, (, String, value, ), throws, CmdLineException, {, proxy, ., addValue, (, value, ), ;, warningGuardSpec, ., add, (]
[(, String, value, ), throws, CmdLineException, {, proxy, ., addValue, (, value, ), ;, warningGuardSpec, ., add, (, level, ,]
[static, enum, FormattingOption, {, PRETTY_PRINT, ,, PRINT_INPUT_DELIMITER, ,, SINGLE_QUOTES, ;, private, void, applyToOptions, (, CompilerOptions, options, ), {, switch, (]
[PRETTY_PRINT, ,, PRINT_INPUT_DELIMITER, ,, SINGLE_QUOTES, ;, private, void, applyToOptions, (, CompilerOptions, options, ), {, switch, (, this, ), {, case]
[PRINT_INPUT_DELIMITER, ,, SINGLE_QUOTES, ;, private, void, applyToOptions, (, CompilerOptions, options, ), {, switch, (, this, ), {, case, PRETTY_PRINT, :]
[PRINT_INPUT_DELIMITER, ,, SINGLE_QUOTES, ;, private, void, applyToOptions, (, CompilerOptions, options, ), {, switch, (, this, ), {, case, PRETTY_PRINT, :]
[private, void, applyToOptions, (, CompilerOptions, options, ), {, switch, (, this, ), {, case, PRETTY_PRINT, :, options, ., prettyPrint, =]
[options, ), {, switch, (, this, ), {, case, PRETTY_PRINT, :, options, ., prettyPrint, =, true, ;, break, ;, case]
[{, switch, (, this, ), {, case, PRETTY_PRINT, :, options, ., prettyPrint, =, true, ;, break, ;, case, PRINT_INPUT_DELIMITER, :]
[{, switch, (, this, ), {, case, PRETTY_PRINT, :, options, ., prettyPrint, =, true, ;, break, ;, case, PRINT_INPUT_DELIMITER, :]
[), {, case, PRETTY_PRINT, :, options, ., prettyPrint, =, true, ;, break, ;, case, PRINT_INPUT_DELIMITER, :, options, ., printInputDelimiter, =]
[options, ., prettyPrint, =, true, ;, break, ;, case, PRINT_INPUT_DELIMITER, :, options, ., printInputDelimiter, =, true, ;, break, ;, case]
[prettyPrint, =, true, ;, break, ;, case, PRINT_INPUT_DELIMITER, :, options, ., printInputDelimiter, =, true, ;, break, ;, case, SINGLE_QUOTES, :]
[prettyPrint, =, true, ;, break, ;, case, PRINT_INPUT_DELIMITER, :, options, ., printInputDelimiter, =, true, ;, break, ;, case, SINGLE_QUOTES, :]
[break, ;, case, PRINT_INPUT_DELIMITER, :, options, ., printInputDelimiter, =, true, ;, break, ;, case, SINGLE_QUOTES, :, options, ., setPreferSingleQuotes, (]
[=, true, ;, break, ;, case, SINGLE_QUOTES, :, options, ., setPreferSingleQuotes, (, true, ), ;, break, ;, default, :, throw]
[break, ;, case, SINGLE_QUOTES, :, options, ., setPreferSingleQuotes, (, true, ), ;, break, ;, default, :, throw, new, RuntimeException, (]
[break, ;, case, SINGLE_QUOTES, :, options, ., setPreferSingleQuotes, (, true, ), ;, break, ;, default, :, throw, new, RuntimeException, (]
[case, SINGLE_QUOTES, :, options, ., setPreferSingleQuotes, (, true, ), ;, break, ;, default, :, throw, new, RuntimeException, (, "Unknown formatting option: ", +]
[;, default, :, throw, new, RuntimeException, (, "Unknown formatting option: ", +, this, ), ;, }, }, }, private, final, Flags, flags, =]
[this, ), ;, }, }, }, private, final, Flags, flags, =, new, Flags, (, ), ;, private, boolean, isConfigValid, =]
[;, private, boolean, isConfigValid, =, false, ;, protected, CommandLineRunner, (, String, [, ], args, ), {, super, (, ), ;]
[boolean, isConfigValid, =, false, ;, protected, CommandLineRunner, (, String, [, ], args, ), {, super, (, ), ;, initConfigFromFlags, (]
[=, false, ;, protected, CommandLineRunner, (, String, [, ], args, ), {, super, (, ), ;, initConfigFromFlags, (, args, ,]
[=, false, ;, protected, CommandLineRunner, (, String, [, ], args, ), {, super, (, ), ;, initConfigFromFlags, (, args, ,]
[), ;, }, protected, CommandLineRunner, (, String, [, ], args, ,, PrintStream, out, ,, PrintStream, err, ), {, super, (]
[}, protected, CommandLineRunner, (, String, [, ], args, ,, PrintStream, out, ,, PrintStream, err, ), {, super, (, out, ,]
[(, String, [, ], args, ,, PrintStream, out, ,, PrintStream, err, ), {, super, (, out, ,, err, ), ;]
[[, ], args, ,, PrintStream, out, ,, PrintStream, err, ), {, super, (, out, ,, err, ), ;, initConfigFromFlags, (]
[args, ,, PrintStream, out, ,, PrintStream, err, ), {, super, (, out, ,, err, ), ;, initConfigFromFlags, (, args, ,]
[private, List, <, String, >, tokenizeKeepingQuotedStrings, (, List, <, String, >, lines, ), {, List, <, String, >, tokens, =]
[private, List, <, String, >, tokenizeKeepingQuotedStrings, (, List, <, String, >, lines, ), {, List, <, String, >, tokens, =]
[String, >, lines, ), {, List, <, String, >, tokens, =, Lists, ., newArrayList, (, ), ;, Pattern, tokenPattern, =]
[String, >, lines, ), {, List, <, String, >, tokens, =, Lists, ., newArrayList, (, ), ;, Pattern, tokenPattern, =]
[{, List, <, String, >, tokens, =, Lists, ., newArrayList, (, ), ;, Pattern, tokenPattern, =, Pattern, ., compile, (]
[., newArrayList, (, ), ;, Pattern, tokenPattern, =, Pattern, ., compile, (, "(?:[^ \t\f\\x0B'\"]|(?:'[^']*'|\"[^\"]*\"))+", ), ;, for, (, String, line, :]
[tokenPattern, =, Pattern, ., compile, (, "(?:[^ \t\f\\x0B'\"]|(?:'[^']*'|\"[^\"]*\"))+", ), ;, for, (, String, line, :, lines, ), {, Matcher, matcher, =]
[tokenPattern, =, Pattern, ., compile, (, "(?:[^ \t\f\\x0B'\"]|(?:'[^']*'|\"[^\"]*\"))+", ), ;, for, (, String, line, :, lines, ), {, Matcher, matcher, =]
[compile, (, "(?:[^ \t\f\\x0B'\"]|(?:'[^']*'|\"[^\"]*\"))+", ), ;, for, (, String, line, :, lines, ), {, Matcher, matcher, =, tokenPattern, ., matcher, (]
[for, (, String, line, :, lines, ), {, Matcher, matcher, =, tokenPattern, ., matcher, (, line, ), ;, while, (]
[for, (, String, line, :, lines, ), {, Matcher, matcher, =, tokenPattern, ., matcher, (, line, ), ;, while, (]
[{, Matcher, matcher, =, tokenPattern, ., matcher, (, line, ), ;, while, (, matcher, ., find, (, ), ), {]
[{, Matcher, matcher, =, tokenPattern, ., matcher, (, line, ), ;, while, (, matcher, ., find, (, ), ), {]
[tokenPattern, ., matcher, (, line, ), ;, while, (, matcher, ., find, (, ), ), {, tokens, ., add, (]
[tokenPattern, ., matcher, (, line, ), ;, while, (, matcher, ., find, (, ), ), {, tokens, ., add, (]
[line, ), ;, while, (, matcher, ., find, (, ), ), {, tokens, ., add, (, matcher, ., group, (]
[find, (, ), ), {, tokens, ., add, (, matcher, ., group, (, 0, ), ), ;, }, }, return]
[return, tokens, ;, }, private, List, <, String, >, processArgs, (, String, [, ], args, ), {, Pattern, argPattern, =]
[return, tokens, ;, }, private, List, <, String, >, processArgs, (, String, [, ], args, ), {, Pattern, argPattern, =]
[private, List, <, String, >, processArgs, (, String, [, ], args, ), {, Pattern, argPattern, =, Pattern, ., compile, (]
[(, String, [, ], args, ), {, Pattern, argPattern, =, Pattern, ., compile, (, "(--[a-zA-Z_]+)=(.*)", ), ;, Pattern, quotesPattern, =]
[(, String, [, ], args, ), {, Pattern, argPattern, =, Pattern, ., compile, (, "(--[a-zA-Z_]+)=(.*)", ), ;, Pattern, quotesPattern, =]
[args, ), {, Pattern, argPattern, =, Pattern, ., compile, (, "(--[a-zA-Z_]+)=(.*)", ), ;, Pattern, quotesPattern, =, Pattern, ., compile, (]
[(, "(--[a-zA-Z_]+)=(.*)", ), ;, Pattern, quotesPattern, =, Pattern, ., compile, (, "^['\"](.*)['\"]$", ), ;, List, <, String, >, processedArgs, =]
[(, "(--[a-zA-Z_]+)=(.*)", ), ;, Pattern, quotesPattern, =, Pattern, ., compile, (, "^['\"](.*)['\"]$", ), ;, List, <, String, >, processedArgs, =]
["^['\"](.*)['\"]$", ), ;, List, <, String, >, processedArgs, =, Lists, ., newArrayList, (, ), ;, for, (, String, arg, :]
[>, processedArgs, =, Lists, ., newArrayList, (, ), ;, for, (, String, arg, :, args, ), {, Matcher, matcher, =]
[>, processedArgs, =, Lists, ., newArrayList, (, ), ;, for, (, String, arg, :, args, ), {, Matcher, matcher, =]
[., newArrayList, (, ), ;, for, (, String, arg, :, args, ), {, Matcher, matcher, =, argPattern, ., matcher, (]
[for, (, String, arg, :, args, ), {, Matcher, matcher, =, argPattern, ., matcher, (, arg, ), ;, if, (]
[for, (, String, arg, :, args, ), {, Matcher, matcher, =, argPattern, ., matcher, (, arg, ), ;, if, (]
[{, Matcher, matcher, =, argPattern, ., matcher, (, arg, ), ;, if, (, matcher, ., matches, (, ), ), {]
[{, Matcher, matcher, =, argPattern, ., matcher, (, arg, ), ;, if, (, matcher, ., matches, (, ), ), {]
[argPattern, ., matcher, (, arg, ), ;, if, (, matcher, ., matches, (, ), ), {, processedArgs, ., add, (]
[argPattern, ., matcher, (, arg, ), ;, if, (, matcher, ., matches, (, ), ), {, processedArgs, ., add, (]
[arg, ), ;, if, (, matcher, ., matches, (, ), ), {, processedArgs, ., add, (, matcher, ., group, (]
[matches, (, ), ), {, processedArgs, ., add, (, matcher, ., group, (, 1, ), ), ;, String, value, =]
[matches, (, ), ), {, processedArgs, ., add, (, matcher, ., group, (, 1, ), ), ;, String, value, =]
[{, processedArgs, ., add, (, matcher, ., group, (, 1, ), ), ;, String, value, =, matcher, ., group, (]
[., group, (, 1, ), ), ;, String, value, =, matcher, ., group, (, 2, ), ;, Matcher, quotesMatcher, =]
[., group, (, 1, ), ), ;, String, value, =, matcher, ., group, (, 2, ), ;, Matcher, quotesMatcher, =]
[), ), ;, String, value, =, matcher, ., group, (, 2, ), ;, Matcher, quotesMatcher, =, quotesPattern, ., matcher, (]
[=, matcher, ., group, (, 2, ), ;, Matcher, quotesMatcher, =, quotesPattern, ., matcher, (, value, ), ;, if, (]
[=, matcher, ., group, (, 2, ), ;, Matcher, quotesMatcher, =, quotesPattern, ., matcher, (, value, ), ;, if, (]
[;, Matcher, quotesMatcher, =, quotesPattern, ., matcher, (, value, ), ;, if, (, quotesMatcher, ., matches, (, ), ), {]
[;, Matcher, quotesMatcher, =, quotesPattern, ., matcher, (, value, ), ;, if, (, quotesMatcher, ., matches, (, ), ), {]
[quotesPattern, ., matcher, (, value, ), ;, if, (, quotesMatcher, ., matches, (, ), ), {, processedArgs, ., add, (]
[quotesPattern, ., matcher, (, value, ), ;, if, (, quotesMatcher, ., matches, (, ), ), {, processedArgs, ., add, (]
[value, ), ;, if, (, quotesMatcher, ., matches, (, ), ), {, processedArgs, ., add, (, quotesMatcher, ., group, (]
[matches, (, ), ), {, processedArgs, ., add, (, quotesMatcher, ., group, (, 1, ), ), ;, }, else, {]
[matches, (, ), ), {, processedArgs, ., add, (, quotesMatcher, ., group, (, 1, ), ), ;, }, else, {]
[{, processedArgs, ., add, (, quotesMatcher, ., group, (, 1, ), ), ;, }, else, {, processedArgs, ., add, (]
[group, (, 1, ), ), ;, }, else, {, processedArgs, ., add, (, value, ), ;, }, }, else, {]
[group, (, 1, ), ), ;, }, else, {, processedArgs, ., add, (, value, ), ;, }, }, else, {]
[), ;, }, else, {, processedArgs, ., add, (, value, ), ;, }, }, else, {, processedArgs, ., add, (]
[., add, (, value, ), ;, }, }, else, {, processedArgs, ., add, (, arg, ), ;, }, }, return]
[}, return, processedArgs, ;, }, private, void, processFlagFile, (, PrintStream, err, ), throws, CmdLineException, ,, IOException, {, File, flagFileInput, =]
[;, }, private, void, processFlagFile, (, PrintStream, err, ), throws, CmdLineException, ,, IOException, {, File, flagFileInput, =, new, File, (]
[;, }, private, void, processFlagFile, (, PrintStream, err, ), throws, CmdLineException, ,, IOException, {, File, flagFileInput, =, new, File, (]
[,, IOException, {, File, flagFileInput, =, new, File, (, flags, ., flag_file, ), ;, List, <, String, >, argsInFile, =]
[{, File, flagFileInput, =, new, File, (, flags, ., flag_file, ), ;, List, <, String, >, argsInFile, =, tokenizeKeepingQuotedStrings, (]
[{, File, flagFileInput, =, new, File, (, flags, ., flag_file, ), ;, List, <, String, >, argsInFile, =, tokenizeKeepingQuotedStrings, (]
[new, File, (, flags, ., flag_file, ), ;, List, <, String, >, argsInFile, =, tokenizeKeepingQuotedStrings, (, Files, ., readLines, (]
[(, flags, ., flag_file, ), ;, List, <, String, >, argsInFile, =, tokenizeKeepingQuotedStrings, (, Files, ., readLines, (, flagFileInput, ,]
[(, flags, ., flag_file, ), ;, List, <, String, >, argsInFile, =, tokenizeKeepingQuotedStrings, (, Files, ., readLines, (, flagFileInput, ,]
[String, >, argsInFile, =, tokenizeKeepingQuotedStrings, (, Files, ., readLines, (, flagFileInput, ,, Charset, ., defaultCharset, (, ), ), ), ;]
[String, >, argsInFile, =, tokenizeKeepingQuotedStrings, (, Files, ., readLines, (, flagFileInput, ,, Charset, ., defaultCharset, (, ), ), ), ;]
[tokenizeKeepingQuotedStrings, (, Files, ., readLines, (, flagFileInput, ,, Charset, ., defaultCharset, (, ), ), ), ;, flags, ., flag_file, =]
[Charset, ., defaultCharset, (, ), ), ), ;, flags, ., flag_file, =, "", ;, List, <, String, >, processedFileArgs, =]
[defaultCharset, (, ), ), ), ;, flags, ., flag_file, =, "", ;, List, <, String, >, processedFileArgs, =, processArgs, (]
[defaultCharset, (, ), ), ), ;, flags, ., flag_file, =, "", ;, List, <, String, >, processedFileArgs, =, processArgs, (]
[), ;, flags, ., flag_file, =, "", ;, List, <, String, >, processedFileArgs, =, processArgs, (, argsInFile, ., toArray, (]
[flag_file, =, "", ;, List, <, String, >, processedFileArgs, =, processArgs, (, argsInFile, ., toArray, (, new, String, [, ]]
[processedFileArgs, =, processArgs, (, argsInFile, ., toArray, (, new, String, [, ], {, }, ), ), ;, CmdLineParser, parserFileArgs, =]
[(, argsInFile, ., toArray, (, new, String, [, ], {, }, ), ), ;, CmdLineParser, parserFileArgs, =, new, CmdLineParser, (]
[toArray, (, new, String, [, ], {, }, ), ), ;, CmdLineParser, parserFileArgs, =, new, CmdLineParser, (, flags, ), ;]
[toArray, (, new, String, [, ], {, }, ), ), ;, CmdLineParser, parserFileArgs, =, new, CmdLineParser, (, flags, ), ;]
[toArray, (, new, String, [, ], {, }, ), ), ;, CmdLineParser, parserFileArgs, =, new, CmdLineParser, (, flags, ), ;]
[), ), ;, CmdLineParser, parserFileArgs, =, new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;]
[), ), ;, CmdLineParser, parserFileArgs, =, new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;]
[parserFileArgs, =, new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, parserFileArgs, ., parseArgument, (]
[parserFileArgs, =, new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, parserFileArgs, ., parseArgument, (]
[(, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, parserFileArgs, ., parseArgument, (, processedFileArgs, ., toArray, (]
[Flags, ., warningGuardSpec, ., clear, (, ), ;, parserFileArgs, ., parseArgument, (, processedFileArgs, ., toArray, (, new, String, [, ]]
[;, parserFileArgs, ., parseArgument, (, processedFileArgs, ., toArray, (, new, String, [, ], {, }, ), ), ;, if, (]
[parserFileArgs, ., parseArgument, (, processedFileArgs, ., toArray, (, new, String, [, ], {, }, ), ), ;, if, (, !]
[parserFileArgs, ., parseArgument, (, processedFileArgs, ., toArray, (, new, String, [, ], {, }, ), ), ;, if, (, !]
[parserFileArgs, ., parseArgument, (, processedFileArgs, ., toArray, (, new, String, [, ], {, }, ), ), ;, if, (, !]
[toArray, (, new, String, [, ], {, }, ), ), ;, if, (, !, flags, ., flag_file, ., equals, (]
[[, ], {, }, ), ), ;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {]
[[, ], {, }, ), ), ;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {]
[), ), ;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {, err, ., println, (]
[), ), ;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {, err, ., println, (]
[;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {, err, ., println, (, "ERROR - Arguments in the file cannot contain ", +]
[!, flags, ., flag_file, ., equals, (, "", ), ), {, err, ., println, (, "ERROR - Arguments in the file cannot contain ", +, "--flagfile option.", ), ;]
[., flag_file, ., equals, (, "", ), ), {, err, ., println, (, "ERROR - Arguments in the file cannot contain ", +, "--flagfile option.", ), ;, isConfigValid, =]
[}, private, void, initConfigFromFlags, (, String, [, ], args, ,, PrintStream, err, ), {, List, <, String, >, processedArgs, =]
[void, initConfigFromFlags, (, String, [, ], args, ,, PrintStream, err, ), {, List, <, String, >, processedArgs, =, processArgs, (]
[args, ,, PrintStream, err, ), {, List, <, String, >, processedArgs, =, processArgs, (, args, ), ;, CmdLineParser, parser, =]
[err, ), {, List, <, String, >, processedArgs, =, processArgs, (, args, ), ;, CmdLineParser, parser, =, new, CmdLineParser, (]
[List, <, String, >, processedArgs, =, processArgs, (, args, ), ;, CmdLineParser, parser, =, new, CmdLineParser, (, flags, ), ;]
[List, <, String, >, processedArgs, =, processArgs, (, args, ), ;, CmdLineParser, parser, =, new, CmdLineParser, (, flags, ), ;]
[List, <, String, >, processedArgs, =, processArgs, (, args, ), ;, CmdLineParser, parser, =, new, CmdLineParser, (, flags, ), ;]
[args, ), ;, CmdLineParser, parser, =, new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;]
[;, CmdLineParser, parser, =, new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, isConfigValid, =]
[new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, isConfigValid, =, true, ;, try, {]
[new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, isConfigValid, =, true, ;, try, {]
[), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, isConfigValid, =, true, ;, try, {, parser, ., parseArgument, (]
[), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, isConfigValid, =, true, ;, try, {, parser, ., parseArgument, (]
[warningGuardSpec, ., clear, (, ), ;, isConfigValid, =, true, ;, try, {, parser, ., parseArgument, (, processedArgs, ., toArray, (]
[), ;, isConfigValid, =, true, ;, try, {, parser, ., parseArgument, (, processedArgs, ., toArray, (, new, String, [, ]]
[{, parser, ., parseArgument, (, processedArgs, ., toArray, (, new, String, [, ], {, }, ), ), ;, if, (]
[parser, ., parseArgument, (, processedArgs, ., toArray, (, new, String, [, ], {, }, ), ), ;, if, (, !]
[parser, ., parseArgument, (, processedArgs, ., toArray, (, new, String, [, ], {, }, ), ), ;, if, (, !]
[parser, ., parseArgument, (, processedArgs, ., toArray, (, new, String, [, ], {, }, ), ), ;, if, (, !]
[toArray, (, new, String, [, ], {, }, ), ), ;, if, (, !, flags, ., flag_file, ., equals, (]
[[, ], {, }, ), ), ;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {]
[{, }, ), ), ;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {, processFlagFile, (]
[., equals, (, "", ), ), {, processFlagFile, (, err, ), ;, }, }, catch, (, CmdLineException, e, ), {]
[., equals, (, "", ), ), {, processFlagFile, (, err, ), ;, }, }, catch, (, CmdLineException, e, ), {]
[), ), {, processFlagFile, (, err, ), ;, }, }, catch, (, CmdLineException, e, ), {, err, ., println, (]
[), ), {, processFlagFile, (, err, ), ;, }, }, catch, (, CmdLineException, e, ), {, err, ., println, (]
[;, }, }, catch, (, CmdLineException, e, ), {, err, ., println, (, e, ., getMessage, (, ), ), ;]
[}, catch, (, CmdLineException, e, ), {, err, ., println, (, e, ., getMessage, (, ), ), ;, isConfigValid, =]
[println, (, e, ., getMessage, (, ), ), ;, isConfigValid, =, false, ;, }, catch, (, IOException, ioErr, ), {]
[println, (, e, ., getMessage, (, ), ), ;, isConfigValid, =, false, ;, }, catch, (, IOException, ioErr, ), {]
[getMessage, (, ), ), ;, isConfigValid, =, false, ;, }, catch, (, IOException, ioErr, ), {, err, ., println, (]
[getMessage, (, ), ), ;, isConfigValid, =, false, ;, }, catch, (, IOException, ioErr, ), {, err, ., println, (]
[getMessage, (, ), ), ;, isConfigValid, =, false, ;, }, catch, (, IOException, ioErr, ), {, err, ., println, (]
[), ), ;, isConfigValid, =, false, ;, }, catch, (, IOException, ioErr, ), {, err, ., println, (, "ERROR - ", +]
[), ), ;, isConfigValid, =, false, ;, }, catch, (, IOException, ioErr, ), {, err, ., println, (, "ERROR - ", +]
[=, false, ;, }, catch, (, IOException, ioErr, ), {, err, ., println, (, "ERROR - ", +, flags, ., flag_file, +]
[}, catch, (, IOException, ioErr, ), {, err, ., println, (, "ERROR - ", +, flags, ., flag_file, +, " read error.", ), ;]
[(, IOException, ioErr, ), {, err, ., println, (, "ERROR - ", +, flags, ., flag_file, +, " read error.", ), ;, isConfigValid, =]
[err, ., println, (, "ERROR - ", +, flags, ., flag_file, +, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (]
[err, ., println, (, "ERROR - ", +, flags, ., flag_file, +, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (]
[+, flags, ., flag_file, +, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {]
[+, flags, ., flag_file, +, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {]
[+, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (]
[+, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (]
[+, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (]
[+, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (]
[+, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (]
[+, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (]
[), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +]
[isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +]
[isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +]
[(, flags, ., version, ), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +]
[., version, ), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +, "\n", +]
[), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +, "\n", +, "Built on: ", +]
[), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +, "\n", +, "Built on: ", +]
[+, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +, "\n", +, "Built on: ", +, Compiler, ., getReleaseDate, (, ), ), ;]
[+, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +, "\n", +, "Built on: ", +, Compiler, ., getReleaseDate, (, ), ), ;]
["\n", +, "Built on: ", +, Compiler, ., getReleaseDate, (, ), ), ;, err, ., flush, (, ), ;, }, if, (]
["\n", +, "Built on: ", +, Compiler, ., getReleaseDate, (, ), ), ;, err, ., flush, (, ), ;, }, if, (]
[., getReleaseDate, (, ), ), ;, err, ., flush, (, ), ;, }, if, (, flags, ., process_common_js_modules, ), {]
[., getReleaseDate, (, ), ), ;, err, ., flush, (, ), ;, }, if, (, flags, ., process_common_js_modules, ), {]
[), ;, err, ., flush, (, ), ;, }, if, (, flags, ., process_common_js_modules, ), {, flags, ., process_closure_primitives, =]
[err, ., flush, (, ), ;, }, if, (, flags, ., process_common_js_modules, ), {, flags, ., process_closure_primitives, =, true, ;]
[err, ., flush, (, ), ;, }, if, (, flags, ., process_common_js_modules, ), {, flags, ., process_closure_primitives, =, true, ;]
[), ;, }, if, (, flags, ., process_common_js_modules, ), {, flags, ., process_closure_primitives, =, true, ;, flags, ., manage_closure_dependencies, =]
[(, flags, ., process_common_js_modules, ), {, flags, ., process_closure_primitives, =, true, ;, flags, ., manage_closure_dependencies, =, true, ;, if, (]
[(, flags, ., process_common_js_modules, ), {, flags, ., process_closure_primitives, =, true, ;, flags, ., manage_closure_dependencies, =, true, ;, if, (]
[(, flags, ., process_common_js_modules, ), {, flags, ., process_closure_primitives, =, true, ;, flags, ., manage_closure_dependencies, =, true, ;, if, (]
[), {, flags, ., process_closure_primitives, =, true, ;, flags, ., manage_closure_dependencies, =, true, ;, if, (, flags, ., common_js_entry_module, ==]
[., process_closure_primitives, =, true, ;, flags, ., manage_closure_dependencies, =, true, ;, if, (, flags, ., common_js_entry_module, ==, null, ), {]
[., process_closure_primitives, =, true, ;, flags, ., manage_closure_dependencies, =, true, ;, if, (, flags, ., common_js_entry_module, ==, null, ), {]
[;, flags, ., manage_closure_dependencies, =, true, ;, if, (, flags, ., common_js_entry_module, ==, null, ), {, err, ., println, (]
[manage_closure_dependencies, =, true, ;, if, (, flags, ., common_js_entry_module, ==, null, ), {, err, ., println, (, "Please specify --common_js_entry_module.", ), ;]
[manage_closure_dependencies, =, true, ;, if, (, flags, ., common_js_entry_module, ==, null, ), {, err, ., println, (, "Please specify --common_js_entry_module.", ), ;]
[flags, ., common_js_entry_module, ==, null, ), {, err, ., println, (, "Please specify --common_js_entry_module.", ), ;, err, ., flush, (, ), ;]
[common_js_entry_module, ==, null, ), {, err, ., println, (, "Please specify --common_js_entry_module.", ), ;, err, ., flush, (, ), ;, isConfigValid, =]
[), {, err, ., println, (, "Please specify --common_js_entry_module.", ), ;, err, ., flush, (, ), ;, isConfigValid, =, false, ;, }]
[), {, err, ., println, (, "Please specify --common_js_entry_module.", ), ;, err, ., flush, (, ), ;, isConfigValid, =, false, ;, }]
[println, (, "Please specify --common_js_entry_module.", ), ;, err, ., flush, (, ), ;, isConfigValid, =, false, ;, }, flags, ., closure_entry_point, =]
[println, (, "Please specify --common_js_entry_module.", ), ;, err, ., flush, (, ), ;, isConfigValid, =, false, ;, }, flags, ., closure_entry_point, =]
[;, err, ., flush, (, ), ;, isConfigValid, =, false, ;, }, flags, ., closure_entry_point, =, Lists, ., newArrayList, (]
[;, err, ., flush, (, ), ;, isConfigValid, =, false, ;, }, flags, ., closure_entry_point, =, Lists, ., newArrayList, (]
[(, ), ;, isConfigValid, =, false, ;, }, flags, ., closure_entry_point, =, Lists, ., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (]
[(, ), ;, isConfigValid, =, false, ;, }, flags, ., closure_entry_point, =, Lists, ., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (]
[., closure_entry_point, =, Lists, ., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (, flags, ., common_js_entry_module, ), ), ;, }, if, (]
[., closure_entry_point, =, Lists, ., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (, flags, ., common_js_entry_module, ), ), ;, }, if, (]
[closure_entry_point, =, Lists, ., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (, flags, ., common_js_entry_module, ), ), ;, }, if, (, !]
[Lists, ., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (, flags, ., common_js_entry_module, ), ), ;, }, if, (, !, isConfigValid, ||]
[Lists, ., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (, flags, ., common_js_entry_module, ), ), ;, }, if, (, !, isConfigValid, ||]
[., toModuleName, (, flags, ., common_js_entry_module, ), ), ;, }, if, (, !, isConfigValid, ||, flags, ., display_help, ), {]
[(, flags, ., common_js_entry_module, ), ), ;, }, if, (, !, isConfigValid, ||, flags, ., display_help, ), {, isConfigValid, =]
[., common_js_entry_module, ), ), ;, }, if, (, !, isConfigValid, ||, flags, ., display_help, ), {, isConfigValid, =, false, ;]
[., common_js_entry_module, ), ), ;, }, if, (, !, isConfigValid, ||, flags, ., display_help, ), {, isConfigValid, =, false, ;]
[;, }, if, (, !, isConfigValid, ||, flags, ., display_help, ), {, isConfigValid, =, false, ;, parser, ., printUsage, (]
[{, isConfigValid, =, false, ;, parser, ., printUsage, (, err, ), ;, }, else, {, CodingConvention, conv, ;, if, (]
[{, isConfigValid, =, false, ;, parser, ., printUsage, (, err, ), ;, }, else, {, CodingConvention, conv, ;, if, (]
[parser, ., printUsage, (, err, ), ;, }, else, {, CodingConvention, conv, ;, if, (, flags, ., third_party, ), {]
[printUsage, (, err, ), ;, }, else, {, CodingConvention, conv, ;, if, (, flags, ., third_party, ), {, conv, =]
[printUsage, (, err, ), ;, }, else, {, CodingConvention, conv, ;, if, (, flags, ., third_party, ), {, conv, =]
[;, if, (, flags, ., third_party, ), {, conv, =, CodingConventions, ., getDefault, (, ), ;, }, else, if, (]
[;, if, (, flags, ., third_party, ), {, conv, =, CodingConventions, ., getDefault, (, ), ;, }, else, if, (]
[third_party, ), {, conv, =, CodingConventions, ., getDefault, (, ), ;, }, else, if, (, flags, ., process_jquery_primitives, ), {]
[{, conv, =, CodingConventions, ., getDefault, (, ), ;, }, else, if, (, flags, ., process_jquery_primitives, ), {, conv, =]
[;, }, else, if, (, flags, ., process_jquery_primitives, ), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {]
[else, if, (, flags, ., process_jquery_primitives, ), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[(, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }, getCommandLineConfig, (, ), ., setPrintTree, (]
[(, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }, getCommandLineConfig, (, ), ., setPrintTree, (]
[=, new, ClosureCodingConvention, (, ), ;, }, getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (]
[=, new, ClosureCodingConvention, (, ), ;, }, getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (]
[getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (]
[., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (]
[., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (]
[., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (]
[., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (]
[., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (]
[., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (]
[., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (]
[., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (]
[), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (]
[), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (]
[), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (]
[), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (]
[(, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (]
[(, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (]
[., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (]
[., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (]
[., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (]
[., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (]
[., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (]
[., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (]
[., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (]
[., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (]
[., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (]
[(, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (]
[(, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (]
[(, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (]
[(, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (]
[(, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (]
[(, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (]
[., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (]
[., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (]
[., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (]
[., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (]
[., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (]
[., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (]
[., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (]
[., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (]
[., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (]
[., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (]
[., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (]
[., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (]
[., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (]
[., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (]
[., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (]
[., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (]
[., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (]
[., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (]
[., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (]
[., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (]
[setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (]
[setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (]
[(, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (]
[(, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (]
[(, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (]
[(, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (]
[output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (]
[output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (]
[., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (]
[., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (]
[., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (]
[., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (]
[., language_in, ), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix, ), ., setTransformAMDToCJSModules, (]
[., language_in, ), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix, ), ., setTransformAMDToCJSModules, (]
[., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix, ), ., setTransformAMDToCJSModules, (, flags, ., transform_amd_modules, ), ., setWarningsWhitelistFile, (]
[., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix, ), ., setTransformAMDToCJSModules, (, flags, ., transform_amd_modules, ), ., setWarningsWhitelistFile, (]
[setWarningsWhitelistFile, (, flags, ., warnings_whitelist_file, ), ;, }, }, @, Override, protected, CompilerOptions, createOptions, (, ), {, CompilerOptions, options, =]
[}, }, @, Override, protected, CompilerOptions, createOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, if, (]
[}, }, @, Override, protected, CompilerOptions, createOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, if, (]
[CompilerOptions, createOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, if, (, flags, ., process_jquery_primitives, ), {]
[CompilerOptions, createOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, if, (, flags, ., process_jquery_primitives, ), {]
[{, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, if, (, flags, ., process_jquery_primitives, ), {, options, ., setCodingConvention, (]
[if, (, flags, ., process_jquery_primitives, ), {, options, ., setCodingConvention, (, new, JqueryCodingConvention, (, ), ), ;, }, else, {]
[if, (, flags, ., process_jquery_primitives, ), {, options, ., setCodingConvention, (, new, JqueryCodingConvention, (, ), ), ;, }, else, {]
[process_jquery_primitives, ), {, options, ., setCodingConvention, (, new, JqueryCodingConvention, (, ), ), ;, }, else, {, options, ., setCodingConvention, (]
[), ), ;, }, else, {, options, ., setCodingConvention, (, new, ClosureCodingConvention, (, ), ), ;, }, CompilationLevel, level, =]
[), ), ;, }, else, {, options, ., setCodingConvention, (, new, ClosureCodingConvention, (, ), ), ;, }, CompilationLevel, level, =]
[else, {, options, ., setCodingConvention, (, new, ClosureCodingConvention, (, ), ), ;, }, CompilationLevel, level, =, flags, ., compilation_level, ;]
[else, {, options, ., setCodingConvention, (, new, ClosureCodingConvention, (, ), ), ;, }, CompilationLevel, level, =, flags, ., compilation_level, ;]
[setCodingConvention, (, new, ClosureCodingConvention, (, ), ), ;, }, CompilationLevel, level, =, flags, ., compilation_level, ;, level, ., setOptionsForCompilationLevel, (]
[), ), ;, }, CompilationLevel, level, =, flags, ., compilation_level, ;, level, ., setOptionsForCompilationLevel, (, options, ), ;, if, (]
[), ), ;, }, CompilationLevel, level, =, flags, ., compilation_level, ;, level, ., setOptionsForCompilationLevel, (, options, ), ;, if, (]
[level, =, flags, ., compilation_level, ;, level, ., setOptionsForCompilationLevel, (, options, ), ;, if, (, flags, ., debug, ), {]
[level, =, flags, ., compilation_level, ;, level, ., setOptionsForCompilationLevel, (, options, ), ;, if, (, flags, ., debug, ), {]
[compilation_level, ;, level, ., setOptionsForCompilationLevel, (, options, ), ;, if, (, flags, ., debug, ), {, level, ., setDebugOptionsForCompilationLevel, (]
[options, ), ;, if, (, flags, ., debug, ), {, level, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, if, (]
[options, ), ;, if, (, flags, ., debug, ), {, level, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, if, (]
[flags, ., debug, ), {, level, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, if, (, flags, ., use_types_for_optimization, ), {]
[flags, ., debug, ), {, level, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, if, (, flags, ., use_types_for_optimization, ), {]
[{, level, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, if, (, flags, ., use_types_for_optimization, ), {, level, ., setTypeBasedOptimizationOptions, (]
[), ;, }, if, (, flags, ., use_types_for_optimization, ), {, level, ., setTypeBasedOptimizationOptions, (, options, ), ;, }, if, (]
[), ;, }, if, (, flags, ., use_types_for_optimization, ), {, level, ., setTypeBasedOptimizationOptions, (, options, ), ;, }, if, (]
[flags, ., use_types_for_optimization, ), {, level, ., setTypeBasedOptimizationOptions, (, options, ), ;, }, if, (, flags, ., generate_exports, ), {]
[flags, ., use_types_for_optimization, ), {, level, ., setTypeBasedOptimizationOptions, (, options, ), ;, }, if, (, flags, ., generate_exports, ), {]
[{, level, ., setTypeBasedOptimizationOptions, (, options, ), ;, }, if, (, flags, ., generate_exports, ), {, options, ., setGenerateExports, (]
[{, level, ., setTypeBasedOptimizationOptions, (, options, ), ;, }, if, (, flags, ., generate_exports, ), {, options, ., setGenerateExports, (]
[if, (, flags, ., generate_exports, ), {, options, ., setGenerateExports, (, flags, ., generate_exports, ), ;, }, WarningLevel, wLevel, =]
[if, (, flags, ., generate_exports, ), {, options, ., setGenerateExports, (, flags, ., generate_exports, ), ;, }, WarningLevel, wLevel, =]
[generate_exports, ), {, options, ., setGenerateExports, (, flags, ., generate_exports, ), ;, }, WarningLevel, wLevel, =, flags, ., warning_level, ;]
[generate_exports, ), {, options, ., setGenerateExports, (, flags, ., generate_exports, ), ;, }, WarningLevel, wLevel, =, flags, ., warning_level, ;]
[., setGenerateExports, (, flags, ., generate_exports, ), ;, }, WarningLevel, wLevel, =, flags, ., warning_level, ;, wLevel, ., setOptionsForWarningLevel, (]
[}, WarningLevel, wLevel, =, flags, ., warning_level, ;, wLevel, ., setOptionsForWarningLevel, (, options, ), ;, for, (, FormattingOption, formattingOption, :]
[}, WarningLevel, wLevel, =, flags, ., warning_level, ;, wLevel, ., setOptionsForWarningLevel, (, options, ), ;, for, (, FormattingOption, formattingOption, :]
[., warning_level, ;, wLevel, ., setOptionsForWarningLevel, (, options, ), ;, for, (, FormattingOption, formattingOption, :, flags, ., formatting, ), {]
[., warning_level, ;, wLevel, ., setOptionsForWarningLevel, (, options, ), ;, for, (, FormattingOption, formattingOption, :, flags, ., formatting, ), {]
[., setOptionsForWarningLevel, (, options, ), ;, for, (, FormattingOption, formattingOption, :, flags, ., formatting, ), {, formattingOption, ., applyToOptions, (]
[), ;, for, (, FormattingOption, formattingOption, :, flags, ., formatting, ), {, formattingOption, ., applyToOptions, (, options, ), ;, }]
[), ;, for, (, FormattingOption, formattingOption, :, flags, ., formatting, ), {, formattingOption, ., applyToOptions, (, options, ), ;, }]
[FormattingOption, formattingOption, :, flags, ., formatting, ), {, formattingOption, ., applyToOptions, (, options, ), ;, }, options, ., closurePass, =]
[FormattingOption, formattingOption, :, flags, ., formatting, ), {, formattingOption, ., applyToOptions, (, options, ), ;, }, options, ., closurePass, =]
[., formatting, ), {, formattingOption, ., applyToOptions, (, options, ), ;, }, options, ., closurePass, =, flags, ., process_closure_primitives, ;]
[., formatting, ), {, formattingOption, ., applyToOptions, (, options, ), ;, }, options, ., closurePass, =, flags, ., process_closure_primitives, ;]
[formattingOption, ., applyToOptions, (, options, ), ;, }, options, ., closurePass, =, flags, ., process_closure_primitives, ;, options, ., jqueryPass, =]
[formattingOption, ., applyToOptions, (, options, ), ;, }, options, ., closurePass, =, flags, ., process_closure_primitives, ;, options, ., jqueryPass, =]
[formattingOption, ., applyToOptions, (, options, ), ;, }, options, ., closurePass, =, flags, ., process_closure_primitives, ;, options, ., jqueryPass, =]
[options, ), ;, }, options, ., closurePass, =, flags, ., process_closure_primitives, ;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&]
[options, ), ;, }, options, ., closurePass, =, flags, ., process_closure_primitives, ;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&]
[options, ), ;, }, options, ., closurePass, =, flags, ., process_closure_primitives, ;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&]
[options, ., closurePass, =, flags, ., process_closure_primitives, ;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==]
[flags, ., process_closure_primitives, ;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ;, if, (]
[., process_closure_primitives, ;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ;, if, (, !]
[., process_closure_primitives, ;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ;, if, (, !]
[., process_closure_primitives, ;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ;, if, (, !]
[CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ;, if, (, !, flags, ., translationsFile, ., isEmpty, (, ), ), {, try, {]
[CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ;, if, (, !, flags, ., translationsFile, ., isEmpty, (, ), ), {, try, {]
[level, ;, if, (, !, flags, ., translationsFile, ., isEmpty, (, ), ), {, try, {, options, ., messageBundle, =]
[(, !, flags, ., translationsFile, ., isEmpty, (, ), ), {, try, {, options, ., messageBundle, =, new, XtbMessageBundle, (]
[., translationsFile, ., isEmpty, (, ), ), {, try, {, options, ., messageBundle, =, new, XtbMessageBundle, (, new, FileInputStream, (]
[., translationsFile, ., isEmpty, (, ), ), {, try, {, options, ., messageBundle, =, new, XtbMessageBundle, (, new, FileInputStream, (]
[), ), {, try, {, options, ., messageBundle, =, new, XtbMessageBundle, (, new, FileInputStream, (, flags, ., translationsFile, ), ,]
[), ), {, try, {, options, ., messageBundle, =, new, XtbMessageBundle, (, new, FileInputStream, (, flags, ., translationsFile, ), ,]
[FileInputStream, (, flags, ., translationsFile, ), ,, flags, ., translationsProject, ), ;, }, catch, (, IOException, e, ), {, throw]
[., translationsFile, ), ,, flags, ., translationsProject, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (]
[), ,, flags, ., translationsProject, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, "Reading XTB file", ,]
[catch, (, IOException, e, ), {, throw, new, RuntimeException, (, "Reading XTB file", ,, e, ), ;, }, }, else, if, (]
[catch, (, IOException, e, ), {, throw, new, RuntimeException, (, "Reading XTB file", ,, e, ), ;, }, }, else, if, (]
[catch, (, IOException, e, ), {, throw, new, RuntimeException, (, "Reading XTB file", ,, e, ), ;, }, }, else, if, (]
[), {, throw, new, RuntimeException, (, "Reading XTB file", ,, e, ), ;, }, }, else, if, (, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==]
[new, RuntimeException, (, "Reading XTB file", ,, e, ), ;, }, }, else, if, (, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ), {]
[new, RuntimeException, (, "Reading XTB file", ,, e, ), ;, }, }, else, if, (, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ), {]
[,, e, ), ;, }, }, else, if, (, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ), {, options, ., messageBundle, =]
[if, (, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ), {, options, ., messageBundle, =, new, EmptyMessageBundle, (, ), ;, }, return]
[=, new, EmptyMessageBundle, (, ), ;, }, return, options, ;, }, @, Override, protected, Compiler, createCompiler, (, ), {, return]
[(, ), ;, }, return, options, ;, }, @, Override, protected, Compiler, createCompiler, (, ), {, return, new, Compiler, (]
[Override, protected, List, <, SourceFile, >, createExterns, (, ), throws, FlagUsageException, ,, IOException, {, List, <, SourceFile, >, externs, =]
[Override, protected, List, <, SourceFile, >, createExterns, (, ), throws, FlagUsageException, ,, IOException, {, List, <, SourceFile, >, externs, =]
[), throws, FlagUsageException, ,, IOException, {, List, <, SourceFile, >, externs, =, super, ., createExterns, (, ), ;, if, (]
[), throws, FlagUsageException, ,, IOException, {, List, <, SourceFile, >, externs, =, super, ., createExterns, (, ), ;, if, (]
[), throws, FlagUsageException, ,, IOException, {, List, <, SourceFile, >, externs, =, super, ., createExterns, (, ), ;, if, (]
[IOException, {, List, <, SourceFile, >, externs, =, super, ., createExterns, (, ), ;, if, (, flags, ., use_only_custom_externs, ||]
[externs, =, super, ., createExterns, (, ), ;, if, (, flags, ., use_only_custom_externs, ||, isInTestMode, (, ), ), {, return]
[., use_only_custom_externs, ||, isInTestMode, (, ), ), {, return, externs, ;, }, else, {, List, <, SourceFile, >, defaultExterns, =]
[(, ), ), {, return, externs, ;, }, else, {, List, <, SourceFile, >, defaultExterns, =, getDefaultExterns, (, ), ;]
[(, ), ), {, return, externs, ;, }, else, {, List, <, SourceFile, >, defaultExterns, =, getDefaultExterns, (, ), ;]
[return, externs, ;, }, else, {, List, <, SourceFile, >, defaultExterns, =, getDefaultExterns, (, ), ;, defaultExterns, ., addAll, (]
[else, {, List, <, SourceFile, >, defaultExterns, =, getDefaultExterns, (, ), ;, defaultExterns, ., addAll, (, externs, ), ;, return]
[., addAll, (, externs, ), ;, return, defaultExterns, ;, }, }, private, static, final, List, <, String, >, DEFAULT_EXTERNS_NAMES, =]
[., addAll, (, externs, ), ;, return, defaultExterns, ;, }, }, private, static, final, List, <, String, >, DEFAULT_EXTERNS_NAMES, =]
[), ;, return, defaultExterns, ;, }, }, private, static, final, List, <, String, >, DEFAULT_EXTERNS_NAMES, =, ImmutableList, ., of, (]
[return, defaultExterns, ;, }, }, private, static, final, List, <, String, >, DEFAULT_EXTERNS_NAMES, =, ImmutableList, ., of, (, "es3.js", ,]
[;, }, }, private, static, final, List, <, String, >, DEFAULT_EXTERNS_NAMES, =, ImmutableList, ., of, (, "es3.js", ,, "es5.js", ,]
[}, private, static, final, List, <, String, >, DEFAULT_EXTERNS_NAMES, =, ImmutableList, ., of, (, "es3.js", ,, "es5.js", ,, "w3c_event.js", ,]
[static, final, List, <, String, >, DEFAULT_EXTERNS_NAMES, =, ImmutableList, ., of, (, "es3.js", ,, "es5.js", ,, "w3c_event.js", ,, "w3c_event3.js", ,]
[List, <, String, >, DEFAULT_EXTERNS_NAMES, =, ImmutableList, ., of, (, "es3.js", ,, "es5.js", ,, "w3c_event.js", ,, "w3c_event3.js", ,, "gecko_event.js", ,]
[String, >, DEFAULT_EXTERNS_NAMES, =, ImmutableList, ., of, (, "es3.js", ,, "es5.js", ,, "w3c_event.js", ,, "w3c_event3.js", ,, "gecko_event.js", ,, "ie_event.js", ,]
[DEFAULT_EXTERNS_NAMES, =, ImmutableList, ., of, (, "es3.js", ,, "es5.js", ,, "w3c_event.js", ,, "w3c_event3.js", ,, "gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,]
[ImmutableList, ., of, (, "es3.js", ,, "es5.js", ,, "w3c_event.js", ,, "w3c_event3.js", ,, "gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,]
[of, (, "es3.js", ,, "es5.js", ,, "w3c_event.js", ,, "w3c_event3.js", ,, "gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,]
["es3.js", ,, "es5.js", ,, "w3c_event.js", ,, "w3c_event3.js", ,, "gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,]
["es5.js", ,, "w3c_event.js", ,, "w3c_event3.js", ,, "gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,]
["w3c_event.js", ,, "w3c_event3.js", ,, "gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,]
["w3c_event3.js", ,, "gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,]
["gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,]
["ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,]
["webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,]
["w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,]
["w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,]
["w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,]
["gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,]
["ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,]
["webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,]
["w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,]
["gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,]
["ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,]
["webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,]
["google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,]
["deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,]
["fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,]
["flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,]
["gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,]
["gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,]
["gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,]
["html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,]
["ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,]
["iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,, "w3c_selectors.js", ,]
["webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,, "w3c_selectors.js", ,, "w3c_xml.js", ,]
["w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,, "w3c_selectors.js", ,, "w3c_xml.js", ,, "window.js", ,]
["w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,, "w3c_selectors.js", ,, "w3c_xml.js", ,, "window.js", ,, "webkit_notifications.js", ,]
["webkit_notifications.js", ,, "webgl.js", ), ;, public, static, List, <, SourceFile, >, getDefaultExterns, (, ), throws, IOException, {, InputStream, input, =]
["webkit_notifications.js", ,, "webgl.js", ), ;, public, static, List, <, SourceFile, >, getDefaultExterns, (, ), throws, IOException, {, InputStream, input, =]
[static, List, <, SourceFile, >, getDefaultExterns, (, ), throws, IOException, {, InputStream, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (]
[getDefaultExterns, (, ), throws, IOException, {, InputStream, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "/externs.zip", ), ;, if, (]
[getDefaultExterns, (, ), throws, IOException, {, InputStream, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "/externs.zip", ), ;, if, (]
[), throws, IOException, {, InputStream, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "/externs.zip", ), ;, if, (, input, ==]
[{, InputStream, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "/externs.zip", ), ;, if, (, input, ==, null, ), {]
[input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "/externs.zip", ), ;, if, (, input, ==, null, ), {, input, =]
[input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "/externs.zip", ), ;, if, (, input, ==, null, ), {, input, =]
[getResourceAsStream, (, "/externs.zip", ), ;, if, (, input, ==, null, ), {, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (]
[;, if, (, input, ==, null, ), {, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "externs.zip", ), ;, }]
[;, if, (, input, ==, null, ), {, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "externs.zip", ), ;, }]
[==, null, ), {, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "externs.zip", ), ;, }, Preconditions, ., checkNotNull, (]
[CommandLineRunner, ., class, ., getResourceAsStream, (, "externs.zip", ), ;, }, Preconditions, ., checkNotNull, (, input, ), ;, ZipInputStream, zip, =]
[., getResourceAsStream, (, "externs.zip", ), ;, }, Preconditions, ., checkNotNull, (, input, ), ;, ZipInputStream, zip, =, new, ZipInputStream, (]
[input, ), ;, ZipInputStream, zip, =, new, ZipInputStream, (, input, ), ;, Map, <, String, ,, SourceFile, >, externsMap, =]
[input, ), ;, ZipInputStream, zip, =, new, ZipInputStream, (, input, ), ;, Map, <, String, ,, SourceFile, >, externsMap, =]
[;, Map, <, String, ,, SourceFile, >, externsMap, =, Maps, ., newHashMap, (, ), ;, for, (, ZipEntry, entry, =]
[<, String, ,, SourceFile, >, externsMap, =, Maps, ., newHashMap, (, ), ;, for, (, ZipEntry, entry, =, null, ;]
[<, String, ,, SourceFile, >, externsMap, =, Maps, ., newHashMap, (, ), ;, for, (, ZipEntry, entry, =, null, ;]
[String, ,, SourceFile, >, externsMap, =, Maps, ., newHashMap, (, ), ;, for, (, ZipEntry, entry, =, null, ;, (]
[SourceFile, >, externsMap, =, Maps, ., newHashMap, (, ), ;, for, (, ZipEntry, entry, =, null, ;, (, entry, =]
[SourceFile, >, externsMap, =, Maps, ., newHashMap, (, ), ;, for, (, ZipEntry, entry, =, null, ;, (, entry, =]
[(, ), ;, for, (, ZipEntry, entry, =, null, ;, (, entry, =, zip, ., getNextEntry, (, ), ), !=]
[=, null, ;, (, entry, =, zip, ., getNextEntry, (, ), ), !=, null, ;, ), {, BufferedInputStream, entryStream, =]
[(, entry, =, zip, ., getNextEntry, (, ), ), !=, null, ;, ), {, BufferedInputStream, entryStream, =, new, BufferedInputStream, (]
[zip, ., getNextEntry, (, ), ), !=, null, ;, ), {, BufferedInputStream, entryStream, =, new, BufferedInputStream, (, new, LimitInputStream, (]
[getNextEntry, (, ), ), !=, null, ;, ), {, BufferedInputStream, entryStream, =, new, BufferedInputStream, (, new, LimitInputStream, (, zip, ,]
[getNextEntry, (, ), ), !=, null, ;, ), {, BufferedInputStream, entryStream, =, new, BufferedInputStream, (, new, LimitInputStream, (, zip, ,]
[{, BufferedInputStream, entryStream, =, new, BufferedInputStream, (, new, LimitInputStream, (, zip, ,, entry, ., getSize, (, ), ), ), ;]
[{, BufferedInputStream, entryStream, =, new, BufferedInputStream, (, new, LimitInputStream, (, zip, ,, entry, ., getSize, (, ), ), ), ;]
[new, BufferedInputStream, (, new, LimitInputStream, (, zip, ,, entry, ., getSize, (, ), ), ), ;, externsMap, ., put, (]
[new, BufferedInputStream, (, new, LimitInputStream, (, zip, ,, entry, ., getSize, (, ), ), ), ;, externsMap, ., put, (]
[zip, ,, entry, ., getSize, (, ), ), ), ;, externsMap, ., put, (, entry, ., getName, (, ), ,]
[zip, ,, entry, ., getSize, (, ), ), ), ;, externsMap, ., put, (, entry, ., getName, (, ), ,]
[getSize, (, ), ), ), ;, externsMap, ., put, (, entry, ., getName, (, ), ,, SourceFile, ., fromInputStream, (]
[getSize, (, ), ), ), ;, externsMap, ., put, (, entry, ., getName, (, ), ,, SourceFile, ., fromInputStream, (]
[), ), ), ;, externsMap, ., put, (, entry, ., getName, (, ), ,, SourceFile, ., fromInputStream, (, "externs.zip//", +]
[), ), ), ;, externsMap, ., put, (, entry, ., getName, (, ), ,, SourceFile, ., fromInputStream, (, "externs.zip//", +]
[put, (, entry, ., getName, (, ), ,, SourceFile, ., fromInputStream, (, "externs.zip//", +, entry, ., getName, (, ), ,]
[(, ), ,, SourceFile, ., fromInputStream, (, "externs.zip//", +, entry, ., getName, (, ), ,, entryStream, ), ), ;, }]
[(, ), ,, SourceFile, ., fromInputStream, (, "externs.zip//", +, entry, ., getName, (, ), ,, entryStream, ), ), ;, }]
[., fromInputStream, (, "externs.zip//", +, entry, ., getName, (, ), ,, entryStream, ), ), ;, }, Preconditions, ., checkState, (]
[., fromInputStream, (, "externs.zip//", +, entry, ., getName, (, ), ,, entryStream, ), ), ;, }, Preconditions, ., checkState, (]
[., fromInputStream, (, "externs.zip//", +, entry, ., getName, (, ), ,, entryStream, ), ), ;, }, Preconditions, ., checkState, (]
[(, ), ,, entryStream, ), ), ;, }, Preconditions, ., checkState, (, externsMap, ., keySet, (, ), ., equals, (]
[(, ), ,, entryStream, ), ), ;, }, Preconditions, ., checkState, (, externsMap, ., keySet, (, ), ., equals, (]
[), ), ;, }, Preconditions, ., checkState, (, externsMap, ., keySet, (, ), ., equals, (, Sets, ., newHashSet, (]
[Preconditions, ., checkState, (, externsMap, ., keySet, (, ), ., equals, (, Sets, ., newHashSet, (, DEFAULT_EXTERNS_NAMES, ), ), ,]
[., equals, (, Sets, ., newHashSet, (, DEFAULT_EXTERNS_NAMES, ), ), ,, "Externs zip must match our hard-coded list of externs.", ), ;, List, <, SourceFile, >, externs, =]
[., equals, (, Sets, ., newHashSet, (, DEFAULT_EXTERNS_NAMES, ), ), ,, "Externs zip must match our hard-coded list of externs.", ), ;, List, <, SourceFile, >, externs, =]
["Externs zip must match our hard-coded list of externs.", ), ;, List, <, SourceFile, >, externs, =, Lists, ., newArrayList, (, ), ;, for, (, String, key, :]
[List, <, SourceFile, >, externs, =, Lists, ., newArrayList, (, ), ;, for, (, String, key, :, DEFAULT_EXTERNS_NAMES, ), {]
[List, <, SourceFile, >, externs, =, Lists, ., newArrayList, (, ), ;, for, (, String, key, :, DEFAULT_EXTERNS_NAMES, ), {]
[externs, =, Lists, ., newArrayList, (, ), ;, for, (, String, key, :, DEFAULT_EXTERNS_NAMES, ), {, externs, ., add, (]
[externs, =, Lists, ., newArrayList, (, ), ;, for, (, String, key, :, DEFAULT_EXTERNS_NAMES, ), {, externs, ., add, (]
[newArrayList, (, ), ;, for, (, String, key, :, DEFAULT_EXTERNS_NAMES, ), {, externs, ., add, (, externsMap, ., get, (]
[String, key, :, DEFAULT_EXTERNS_NAMES, ), {, externs, ., add, (, externsMap, ., get, (, key, ), ), ;, }, return]
[externsMap, ., get, (, key, ), ), ;, }, return, externs, ;, }, public, boolean, shouldRunCompiler, (, ), {, return]
[externsMap, ., get, (, key, ), ), ;, }, return, externs, ;, }, public, boolean, shouldRunCompiler, (, ), {, return]
[return, this, ., isConfigValid, ;, }, public, static, void, main, (, String, [, ], args, ), {, CommandLineRunner, runner, =]
[isConfigValid, ;, }, public, static, void, main, (, String, [, ], args, ), {, CommandLineRunner, runner, =, new, CommandLineRunner, (]
[void, main, (, String, [, ], args, ), {, CommandLineRunner, runner, =, new, CommandLineRunner, (, args, ), ;, if, (]
[void, main, (, String, [, ], args, ), {, CommandLineRunner, runner, =, new, CommandLineRunner, (, args, ), ;, if, (]
[), {, CommandLineRunner, runner, =, new, CommandLineRunner, (, args, ), ;, if, (, runner, ., shouldRunCompiler, (, ), ), {]
[), {, CommandLineRunner, runner, =, new, CommandLineRunner, (, args, ), ;, if, (, runner, ., shouldRunCompiler, (, ), ), {]
[), ;, if, (, runner, ., shouldRunCompiler, (, ), ), {, runner, ., run, (, ), ;, }, else, {]
[), ;, if, (, runner, ., shouldRunCompiler, (, ), ), {, runner, ., run, (, ), ;, }, else, {]
[runner, ., shouldRunCompiler, (, ), ), {, runner, ., run, (, ), ;, }, else, {, System, ., exit, (]
[., shouldRunCompiler, (, ), ), {, runner, ., run, (, ), ;, }, else, {, System, ., exit, (, -]
