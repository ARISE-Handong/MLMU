[;, protected, void, registerTypeVariablesOn, (, Type, classType, ), {, if, (, !, (, classType, instanceof, ParameterizedType, ), ), {, return]
[), {, return, ;, }, ParameterizedType, parameterizedType, =, (, ParameterizedType, ), classType, ;, TypeVariable, [, ], typeParameters, =, (, (]
[), {, return, ;, }, ParameterizedType, parameterizedType, =, (, ParameterizedType, ), classType, ;, TypeVariable, [, ], typeParameters, =, (, (]
[), ), {, return, ;, }, ParameterizedType, parameterizedType, =, (, ParameterizedType, ), classType, ;, TypeVariable, [, ], typeParameters, =, (]
[instanceof, ParameterizedType, ), ), {, return, ;, }, ParameterizedType, parameterizedType, =, (, ParameterizedType, ), classType, ;, TypeVariable, [, ], typeParameters]
[;, TypeVariable, [, ], typeParameters, =, (, (, Class, <, ?, >, ), parameterizedType, ., getRawType, (, ), ), .]
[;, TypeVariable, [, ], typeParameters, =, (, (, Class, <, ?, >, ), parameterizedType, ., getRawType, (, ), ), .]
[;, Type, [, ], actualTypeArguments, =, parameterizedType, ., getActualTypeArguments, (, ), ;, for, (, int, i, =, 0, ;, i]
[., getTypeParameters, (, ), ;, Type, [, ], actualTypeArguments, =, parameterizedType, ., getActualTypeArguments, (, ), ;, for, (, int, i]
[), ., getTypeParameters, (, ), ;, Type, [, ], actualTypeArguments, =, parameterizedType, ., getActualTypeArguments, (, ), ;, for, (, int]
[), ., getTypeParameters, (, ), ;, Type, [, ], actualTypeArguments, =, parameterizedType, ., getActualTypeArguments, (, ), ;, for, (, int]
[., getRawType, (, ), ), ., getTypeParameters, (, ), ;, Type, [, ], actualTypeArguments, =, parameterizedType, ., getActualTypeArguments, (, )]
[;, for, (, int, i, =, 0, ;, i, <, actualTypeArguments, ., length, ;, i, ++, ), {, TypeVariable, typeParameter]
[., getActualTypeArguments, (, ), ;, for, (, int, i, =, 0, ;, i, <, actualTypeArguments, ., length, ;, i, ++]
[;, i, <, actualTypeArguments, ., length, ;, i, ++, ), {, TypeVariable, typeParameter, =, typeParameters, [, i, ], ;, Type]
[;, i, ++, ), {, TypeVariable, typeParameter, =, typeParameters, [, i, ], ;, Type, actualTypeArgument, =, actualTypeArguments, [, i, ]]
[<, actualTypeArguments, ., length, ;, i, ++, ), {, TypeVariable, typeParameter, =, typeParameters, [, i, ], ;, Type, actualTypeArgument, =]
[;, i, ++, ), {, TypeVariable, typeParameter, =, typeParameters, [, i, ], ;, Type, actualTypeArgument, =, actualTypeArguments, [, i, ]]
[., length, ;, i, ++, ), {, TypeVariable, typeParameter, =, typeParameters, [, i, ], ;, Type, actualTypeArgument, =, actualTypeArguments, []
[), {, TypeVariable, typeParameter, =, typeParameters, [, i, ], ;, Type, actualTypeArgument, =, actualTypeArguments, [, i, ], ;, if, (]
[++, ), {, TypeVariable, typeParameter, =, typeParameters, [, i, ], ;, Type, actualTypeArgument, =, actualTypeArguments, [, i, ], ;, if]
[;, Type, actualTypeArgument, =, actualTypeArguments, [, i, ], ;, if, (, actualTypeArgument, instanceof, WildcardType, ), {, contextualActualTypeParameters, ., put, (]
[[, i, ], ;, Type, actualTypeArgument, =, actualTypeArguments, [, i, ], ;, if, (, actualTypeArgument, instanceof, WildcardType, ), {, contextualActualTypeParameters]
[], ;, Type, actualTypeArgument, =, actualTypeArguments, [, i, ], ;, if, (, actualTypeArgument, instanceof, WildcardType, ), {, contextualActualTypeParameters, ., put]
[;, if, (, actualTypeArgument, instanceof, WildcardType, ), {, contextualActualTypeParameters, ., put, (, typeParameter, ,, boundsOf, (, (, WildcardType, ), actualTypeArgument]
[[, i, ], ;, if, (, actualTypeArgument, instanceof, WildcardType, ), {, contextualActualTypeParameters, ., put, (, typeParameter, ,, boundsOf, (, (]
[], ;, if, (, actualTypeArgument, instanceof, WildcardType, ), {, contextualActualTypeParameters, ., put, (, typeParameter, ,, boundsOf, (, (, WildcardType, )]
[), {, contextualActualTypeParameters, ., put, (, typeParameter, ,, boundsOf, (, (, WildcardType, ), actualTypeArgument, ), ), ;, }, else, if]
[instanceof, WildcardType, ), {, contextualActualTypeParameters, ., put, (, typeParameter, ,, boundsOf, (, (, WildcardType, ), actualTypeArgument, ), ), ;, }]
[;, }, else, if, (, typeParameter, !=, actualTypeArgument, ), {, contextualActualTypeParameters, ., put, (, typeParameter, ,, actualTypeArgument, ), ;, }]
[., put, (, typeParameter, ,, boundsOf, (, (, WildcardType, ), actualTypeArgument, ), ), ;, }, else, if, (, typeParameter, !=]
[,, boundsOf, (, (, WildcardType, ), actualTypeArgument, ), ), ;, }, else, if, (, typeParameter, !=, actualTypeArgument, ), {, contextualActualTypeParameters]
[), ;, }, else, if, (, typeParameter, !=, actualTypeArgument, ), {, contextualActualTypeParameters, ., put, (, typeParameter, ,, actualTypeArgument, ), ;]
[), ), ;, }, else, if, (, typeParameter, !=, actualTypeArgument, ), {, contextualActualTypeParameters, ., put, (, typeParameter, ,, actualTypeArgument, )]
[), ), ;, }, else, if, (, typeParameter, !=, actualTypeArgument, ), {, contextualActualTypeParameters, ., put, (, typeParameter, ,, actualTypeArgument, )]
[), {, contextualActualTypeParameters, ., put, (, typeParameter, ,, actualTypeArgument, ), ;, }, }, }, protected, void, registerTypeParametersOn, (, TypeVariable, []
[!=, actualTypeArgument, ), {, contextualActualTypeParameters, ., put, (, typeParameter, ,, actualTypeArgument, ), ;, }, }, }, protected, void, registerTypeParametersOn, (]
[), {, contextualActualTypeParameters, ., put, (, typeParameter, ,, actualTypeArgument, ), ;, }, }, }, protected, void, registerTypeParametersOn, (, TypeVariable, []
[;, }, }, }, protected, void, registerTypeParametersOn, (, TypeVariable, [, ], typeParameters, ), {, for, (, TypeVariable, type, :, typeParameters]
[., put, (, typeParameter, ,, actualTypeArgument, ), ;, }, }, }, protected, void, registerTypeParametersOn, (, TypeVariable, [, ], typeParameters, )]
[,, actualTypeArgument, ), ;, }, }, }, protected, void, registerTypeParametersOn, (, TypeVariable, [, ], typeParameters, ), {, for, (, TypeVariable]
[), ;, }, }, }, protected, void, registerTypeParametersOn, (, TypeVariable, [, ], typeParameters, ), {, for, (, TypeVariable, type, :]
[), {, registerTypeVariableIfNotPresent, (, type, ), ;, }, }, private, void, registerTypeVariableIfNotPresent, (, TypeVariable, typeVariable, ), {, if, (, !]
[;, }, }, private, void, registerTypeVariableIfNotPresent, (, TypeVariable, typeVariable, ), {, if, (, !, contextualActualTypeParameters, ., containsKey, (, typeVariable, )]
[), ;, }, }, private, void, registerTypeVariableIfNotPresent, (, TypeVariable, typeVariable, ), {, if, (, !, contextualActualTypeParameters, ., containsKey, (, typeVariable]
[), {, contextualActualTypeParameters, ., put, (, typeVariable, ,, boundsOf, (, typeVariable, ), ), ;, }, }, private, BoundedType, boundsOf, (]
[), {, contextualActualTypeParameters, ., put, (, typeVariable, ,, boundsOf, (, typeVariable, ), ), ;, }, }, private, BoundedType, boundsOf, (]
[., containsKey, (, typeVariable, ), ), {, contextualActualTypeParameters, ., put, (, typeVariable, ,, boundsOf, (, typeVariable, ), ), ;, }]
[), ), {, contextualActualTypeParameters, ., put, (, typeVariable, ,, boundsOf, (, typeVariable, ), ), ;, }, }, private, BoundedType, boundsOf]
[;, }, }, private, BoundedType, boundsOf, (, TypeVariable, typeParameter, ), {, if, (, typeParameter, ., getBounds, (, ), [, 0]
[., put, (, typeVariable, ,, boundsOf, (, typeVariable, ), ), ;, }, }, private, BoundedType, boundsOf, (, TypeVariable, typeParameter, )]
[,, boundsOf, (, typeVariable, ), ), ;, }, }, private, BoundedType, boundsOf, (, TypeVariable, typeParameter, ), {, if, (, typeParameter]
[), ;, }, }, private, BoundedType, boundsOf, (, TypeVariable, typeParameter, ), {, if, (, typeParameter, ., getBounds, (, ), []
[), ), ;, }, }, private, BoundedType, boundsOf, (, TypeVariable, typeParameter, ), {, if, (, typeParameter, ., getBounds, (, )]
[), {, return, boundsOf, (, (, TypeVariable, ), typeParameter, ., getBounds, (, ), [, 0, ], ), ;, }, return]
[instanceof, TypeVariable, ), {, return, boundsOf, (, (, TypeVariable, ), typeParameter, ., getBounds, (, ), [, 0, ], ), ;]
[[, 0, ], instanceof, TypeVariable, ), {, return, boundsOf, (, (, TypeVariable, ), typeParameter, ., getBounds, (, ), [, 0]
[., getBounds, (, ), [, 0, ], instanceof, TypeVariable, ), {, return, boundsOf, (, (, TypeVariable, ), typeParameter, ., getBounds]
[], instanceof, TypeVariable, ), {, return, boundsOf, (, (, TypeVariable, ), typeParameter, ., getBounds, (, ), [, 0, ], )]
[;, }, return, new, TypeVarBoundedType, (, typeParameter, ), ;, }, private, BoundedType, boundsOf, (, WildcardType, wildCard, ), {, WildCardBoundedType, wildCardBoundedType]
[), ;, }, return, new, TypeVarBoundedType, (, typeParameter, ), ;, }, private, BoundedType, boundsOf, (, WildcardType, wildCard, ), {, WildCardBoundedType]
[), ;, }, return, new, TypeVarBoundedType, (, typeParameter, ), ;, }, private, BoundedType, boundsOf, (, WildcardType, wildCard, ), {, WildCardBoundedType]
[[, 0, ], ), ;, }, return, new, TypeVarBoundedType, (, typeParameter, ), ;, }, private, BoundedType, boundsOf, (, WildcardType, wildCard]
[., getBounds, (, ), [, 0, ], ), ;, }, return, new, TypeVarBoundedType, (, typeParameter, ), ;, }, private, BoundedType]
[], ), ;, }, return, new, TypeVarBoundedType, (, typeParameter, ), ;, }, private, BoundedType, boundsOf, (, WildcardType, wildCard, ), {]
[;, }, private, BoundedType, boundsOf, (, WildcardType, wildCard, ), {, WildCardBoundedType, wildCardBoundedType, =, new, WildCardBoundedType, (, wildCard, ), ;, if]
[), ;, }, private, BoundedType, boundsOf, (, WildcardType, wildCard, ), {, WildCardBoundedType, wildCardBoundedType, =, new, WildCardBoundedType, (, wildCard, ), ;]
[;, if, (, wildCardBoundedType, ., firstBound, (, ), instanceof, TypeVariable, ), {, return, boundsOf, (, (, TypeVariable, ), wildCardBoundedType, .]
[), ;, if, (, wildCardBoundedType, ., firstBound, (, ), instanceof, TypeVariable, ), {, return, boundsOf, (, (, TypeVariable, ), wildCardBoundedType]
[), {, return, boundsOf, (, (, TypeVariable, ), wildCardBoundedType, ., firstBound, (, ), ), ;, }, return, wildCardBoundedType, ;, }]
[instanceof, TypeVariable, ), {, return, boundsOf, (, (, TypeVariable, ), wildCardBoundedType, ., firstBound, (, ), ), ;, }, return, wildCardBoundedType]
[., firstBound, (, ), instanceof, TypeVariable, ), {, return, boundsOf, (, (, TypeVariable, ), wildCardBoundedType, ., firstBound, (, ), )]
[;, }, return, wildCardBoundedType, ;, }, public, abstract, Class, <, ?, >, rawType, (, ), ;, public, List, <, Type]
[), ;, }, return, wildCardBoundedType, ;, }, public, abstract, Class, <, ?, >, rawType, (, ), ;, public, List, <]
[), ;, }, return, wildCardBoundedType, ;, }, public, abstract, Class, <, ?, >, rawType, (, ), ;, public, List, <]
[., firstBound, (, ), ), ;, }, return, wildCardBoundedType, ;, }, public, abstract, Class, <, ?, >, rawType, (, )]
[;, }, public, abstract, Class, <, ?, >, rawType, (, ), ;, public, List, <, Type, >, extraInterfaces, (, )]
[;, }, public, Class, <, ?, >, [, ], rawExtraInterfaces, (, ), {, return, new, Class, [, 0, ], ;]
[., emptyList, (, ), ;, }, public, Class, <, ?, >, [, ], rawExtraInterfaces, (, ), {, return, new, Class]
[;, }, public, boolean, hasRawExtraInterfaces, (, ), {, return, rawExtraInterfaces, (, ), ., length, >, 0, ;, }, public, Map]
[], ;, }, public, boolean, hasRawExtraInterfaces, (, ), {, return, rawExtraInterfaces, (, ), ., length, >, 0, ;, }, public]
[;, }, public, Map, <, TypeVariable, ,, Type, >, actualTypeArguments, (, ), {, TypeVariable, [, ], typeParameters, =, rawType, (]
[>, 0, ;, }, public, Map, <, TypeVariable, ,, Type, >, actualTypeArguments, (, ), {, TypeVariable, [, ], typeParameters, =]
[., length, >, 0, ;, }, public, Map, <, TypeVariable, ,, Type, >, actualTypeArguments, (, ), {, TypeVariable, [, ]]
[;, }, public, Map, <, TypeVariable, ,, Type, >, actualTypeArguments, (, ), {, TypeVariable, [, ], typeParameters, =, rawType, (]
[;, LinkedHashMap, <, TypeVariable, ,, Type, >, actualTypeArguments, =, new, LinkedHashMap, <, TypeVariable, ,, Type, >, (, ), ;, for]
[., getTypeParameters, (, ), ;, LinkedHashMap, <, TypeVariable, ,, Type, >, actualTypeArguments, =, new, LinkedHashMap, <, TypeVariable, ,, Type, >]
[;, for, (, TypeVariable, typeParameter, :, typeParameters, ), {, Type, actualType, =, getActualTypeArgumentFor, (, typeParameter, ), ;, actualTypeArguments, ., put]
[), {, Type, actualType, =, getActualTypeArgumentFor, (, typeParameter, ), ;, actualTypeArguments, ., put, (, typeParameter, ,, actualType, ), ;, }]
[;, actualTypeArguments, ., put, (, typeParameter, ,, actualType, ), ;, }, return, actualTypeArguments, ;, }, protected, Type, getActualTypeArgumentFor, (, TypeVariable]
[), ;, actualTypeArguments, ., put, (, typeParameter, ,, actualType, ), ;, }, return, actualTypeArguments, ;, }, protected, Type, getActualTypeArgumentFor, (]
[;, }, return, actualTypeArguments, ;, }, protected, Type, getActualTypeArgumentFor, (, TypeVariable, typeParameter, ), {, Type, type, =, this, ., contextualActualTypeParameters]
[., put, (, typeParameter, ,, actualType, ), ;, }, return, actualTypeArguments, ;, }, protected, Type, getActualTypeArgumentFor, (, TypeVariable, typeParameter, )]
[,, actualType, ), ;, }, return, actualTypeArguments, ;, }, protected, Type, getActualTypeArgumentFor, (, TypeVariable, typeParameter, ), {, Type, type, =]
[), ;, }, return, actualTypeArguments, ;, }, protected, Type, getActualTypeArgumentFor, (, TypeVariable, typeParameter, ), {, Type, type, =, this, .]
[;, }, protected, Type, getActualTypeArgumentFor, (, TypeVariable, typeParameter, ), {, Type, type, =, this, ., contextualActualTypeParameters, ., get, (, typeParameter]
[;, if, (, type, instanceof, TypeVariable, ), {, TypeVariable, typeVariable, =, (, TypeVariable, ), type, ;, return, getActualTypeArgumentFor, (, typeVariable]
[., get, (, typeParameter, ), ;, if, (, type, instanceof, TypeVariable, ), {, TypeVariable, typeVariable, =, (, TypeVariable, ), type]
[., contextualActualTypeParameters, ., get, (, typeParameter, ), ;, if, (, type, instanceof, TypeVariable, ), {, TypeVariable, typeVariable, =, (, TypeVariable]
[), ;, if, (, type, instanceof, TypeVariable, ), {, TypeVariable, typeVariable, =, (, TypeVariable, ), type, ;, return, getActualTypeArgumentFor, (]
[), {, TypeVariable, typeVariable, =, (, TypeVariable, ), type, ;, return, getActualTypeArgumentFor, (, typeVariable, ), ;, }, return, type, ;]
[instanceof, TypeVariable, ), {, TypeVariable, typeVariable, =, (, TypeVariable, ), type, ;, return, getActualTypeArgumentFor, (, typeVariable, ), ;, }, return]
[;, return, getActualTypeArgumentFor, (, typeVariable, ), ;, }, return, type, ;, }, public, GenericMetadataSupport, resolveGenericReturnType, (, Method, method, ), {]
[;, return, getActualTypeArgumentFor, (, typeVariable, ), ;, }, return, type, ;, }, public, GenericMetadataSupport, resolveGenericReturnType, (, Method, method, ), {]
[;, }, return, type, ;, }, public, GenericMetadataSupport, resolveGenericReturnType, (, Method, method, ), {, Type, genericReturnType, =, method, ., getGenericReturnType]
[), ;, }, return, type, ;, }, public, GenericMetadataSupport, resolveGenericReturnType, (, Method, method, ), {, Type, genericReturnType, =, method, .]
[;, }, public, GenericMetadataSupport, resolveGenericReturnType, (, Method, method, ), {, Type, genericReturnType, =, method, ., getGenericReturnType, (, ), ;, if]
[;, if, (, genericReturnType, instanceof, Class, ), {, return, new, NotGenericReturnTypeSupport, (, genericReturnType, ), ;, }, if, (, genericReturnType, instanceof]
[., getGenericReturnType, (, ), ;, if, (, genericReturnType, instanceof, Class, ), {, return, new, NotGenericReturnTypeSupport, (, genericReturnType, ), ;, }]
[), {, return, new, NotGenericReturnTypeSupport, (, genericReturnType, ), ;, }, if, (, genericReturnType, instanceof, ParameterizedType, ), {, return, new, ParameterizedReturnType]
[instanceof, Class, ), {, return, new, NotGenericReturnTypeSupport, (, genericReturnType, ), ;, }, if, (, genericReturnType, instanceof, ParameterizedType, ), {, return]
[;, }, if, (, genericReturnType, instanceof, ParameterizedType, ), {, return, new, ParameterizedReturnType, (, this, ,, method, ., getTypeParameters, (, )]
[), ;, }, if, (, genericReturnType, instanceof, ParameterizedType, ), {, return, new, ParameterizedReturnType, (, this, ,, method, ., getTypeParameters, (]
[), {, return, new, ParameterizedReturnType, (, this, ,, method, ., getTypeParameters, (, ), ,, (, ParameterizedType, ), method, ., getGenericReturnType]
[instanceof, ParameterizedType, ), {, return, new, ParameterizedReturnType, (, this, ,, method, ., getTypeParameters, (, ), ,, (, ParameterizedType, ), method]
[;, }, if, (, genericReturnType, instanceof, TypeVariable, ), {, return, new, TypeVariableReturnType, (, this, ,, method, ., getTypeParameters, (, )]
[,, method, ., getTypeParameters, (, ), ,, (, ParameterizedType, ), method, ., getGenericReturnType, (, ), ), ;, }, if, (]
[,, (, ParameterizedType, ), method, ., getGenericReturnType, (, ), ), ;, }, if, (, genericReturnType, instanceof, TypeVariable, ), {, return]
[., getTypeParameters, (, ), ,, (, ParameterizedType, ), method, ., getGenericReturnType, (, ), ), ;, }, if, (, genericReturnType, instanceof]
[), ;, }, if, (, genericReturnType, instanceof, TypeVariable, ), {, return, new, TypeVariableReturnType, (, this, ,, method, ., getTypeParameters, (]
[), ;, }, if, (, genericReturnType, instanceof, TypeVariable, ), {, return, new, TypeVariableReturnType, (, this, ,, method, ., getTypeParameters, (]
[., getGenericReturnType, (, ), ), ;, }, if, (, genericReturnType, instanceof, TypeVariable, ), {, return, new, TypeVariableReturnType, (, this, ,]
[), {, return, new, TypeVariableReturnType, (, this, ,, method, ., getTypeParameters, (, ), ,, (, TypeVariable, ), genericReturnType, ), ;]
[instanceof, TypeVariable, ), {, return, new, TypeVariableReturnType, (, this, ,, method, ., getTypeParameters, (, ), ,, (, TypeVariable, ), genericReturnType]
[;, }, throw, new, MockitoException, (, "Ouch, it shouldn't happen, type '", +, genericReturnType, ., getClass, (, ), ., getCanonicalName, (, ), +, "' on method : '", +]
[,, method, ., getTypeParameters, (, ), ,, (, TypeVariable, ), genericReturnType, ), ;, }, throw, new, MockitoException, (, "Ouch, it shouldn't happen, type '", +]
[,, (, TypeVariable, ), genericReturnType, ), ;, }, throw, new, MockitoException, (, "Ouch, it shouldn't happen, type '", +, genericReturnType, ., getClass, (, ), .]
[., getTypeParameters, (, ), ,, (, TypeVariable, ), genericReturnType, ), ;, }, throw, new, MockitoException, (, "Ouch, it shouldn't happen, type '", +, genericReturnType, .]
[), ;, }, throw, new, MockitoException, (, "Ouch, it shouldn't happen, type '", +, genericReturnType, ., getClass, (, ), ., getCanonicalName, (, ), +, "' on method : '"]
[), ;, }, throw, new, MockitoException, (, "Ouch, it shouldn't happen, type '", +, genericReturnType, ., getClass, (, ), ., getCanonicalName, (, ), +, "' on method : '"]
[;, }, public, static, GenericMetadataSupport, inferFrom, (, Type, type, ), {, Checks, ., checkNotNull, (, type, ,, "type", ), ;]
[), ;, }, public, static, GenericMetadataSupport, inferFrom, (, Type, type, ), {, Checks, ., checkNotNull, (, type, ,, "type", )]
[+, genericReturnType, ), ;, }, public, static, GenericMetadataSupport, inferFrom, (, Type, type, ), {, Checks, ., checkNotNull, (, type, ,]
[+, "' is not supported : ", +, genericReturnType, ), ;, }, public, static, GenericMetadataSupport, inferFrom, (, Type, type, ), {, Checks, ., checkNotNull, (]
[+, method, ., toGenericString, (, ), +, "' is not supported : ", +, genericReturnType, ), ;, }, public, static, GenericMetadataSupport, inferFrom, (, Type, type]
[+, "' on method : '", +, method, ., toGenericString, (, ), +, "' is not supported : ", +, genericReturnType, ), ;, }, public, static, GenericMetadataSupport, inferFrom, (]
[+, genericReturnType, ., getClass, (, ), ., getCanonicalName, (, ), +, "' on method : '", +, method, ., toGenericString, (, ), +, "' is not supported : "]
[+, "' on method : '", +, method, ., toGenericString, (, ), +, "' is not supported : ", +, genericReturnType, ), ;, }, public, static, GenericMetadataSupport, inferFrom, (]
[., getCanonicalName, (, ), +, "' on method : '", +, method, ., toGenericString, (, ), +, "' is not supported : ", +, genericReturnType, ), ;, }, public]
[., getClass, (, ), ., getCanonicalName, (, ), +, "' on method : '", +, method, ., toGenericString, (, ), +, "' is not supported : ", +, genericReturnType]
[+, method, ., toGenericString, (, ), +, "' is not supported : ", +, genericReturnType, ), ;, }, public, static, GenericMetadataSupport, inferFrom, (, Type, type]
[+, "' is not supported : ", +, genericReturnType, ), ;, }, public, static, GenericMetadataSupport, inferFrom, (, Type, type, ), {, Checks, ., checkNotNull, (]
[., toGenericString, (, ), +, "' is not supported : ", +, genericReturnType, ), ;, }, public, static, GenericMetadataSupport, inferFrom, (, Type, type, ), {]
[+, genericReturnType, ), ;, }, public, static, GenericMetadataSupport, inferFrom, (, Type, type, ), {, Checks, ., checkNotNull, (, type, ,]
[), ;, }, public, static, GenericMetadataSupport, inferFrom, (, Type, type, ), {, Checks, ., checkNotNull, (, type, ,, "type", )]
[;, if, (, type, instanceof, Class, ), {, return, new, FromClassGenericMetadataSupport, (, (, Class, <, ?, >, ), type, )]
[., checkNotNull, (, type, ,, "type", ), ;, if, (, type, instanceof, Class, ), {, return, new, FromClassGenericMetadataSupport, (, (]
[,, "type", ), ;, if, (, type, instanceof, Class, ), {, return, new, FromClassGenericMetadataSupport, (, (, Class, <, ?, >]
[), ;, if, (, type, instanceof, Class, ), {, return, new, FromClassGenericMetadataSupport, (, (, Class, <, ?, >, ), type]
[), {, return, new, FromClassGenericMetadataSupport, (, (, Class, <, ?, >, ), type, ), ;, }, if, (, type, instanceof]
[instanceof, Class, ), {, return, new, FromClassGenericMetadataSupport, (, (, Class, <, ?, >, ), type, ), ;, }, if, (]
[;, }, if, (, type, instanceof, ParameterizedType, ), {, return, new, FromParameterizedTypeGenericMetadataSupport, (, (, ParameterizedType, ), type, ), ;, }]
[), ;, }, if, (, type, instanceof, ParameterizedType, ), {, return, new, FromParameterizedTypeGenericMetadataSupport, (, (, ParameterizedType, ), type, ), ;]
[), ;, }, if, (, type, instanceof, ParameterizedType, ), {, return, new, FromParameterizedTypeGenericMetadataSupport, (, (, ParameterizedType, ), type, ), ;]
[), {, return, new, FromParameterizedTypeGenericMetadataSupport, (, (, ParameterizedType, ), type, ), ;, }, throw, new, MockitoException, (, "Type meta-data for this Type (", +, type]
[instanceof, ParameterizedType, ), {, return, new, FromParameterizedTypeGenericMetadataSupport, (, (, ParameterizedType, ), type, ), ;, }, throw, new, MockitoException, (, "Type meta-data for this Type ("]
[;, }, throw, new, MockitoException, (, "Type meta-data for this Type (", +, type, ., getClass, (, ), ., getCanonicalName, (, ), +, ") is not supported : ", +]
[), ;, }, throw, new, MockitoException, (, "Type meta-data for this Type (", +, type, ., getClass, (, ), ., getCanonicalName, (, ), +, ") is not supported : "]
[), ;, }, throw, new, MockitoException, (, "Type meta-data for this Type (", +, type, ., getClass, (, ), ., getCanonicalName, (, ), +, ") is not supported : "]
[;, }, private, static, class, FromClassGenericMetadataSupport, extends, GenericMetadataSupport, {, private, final, Class, <, ?, >, clazz, ;, public, FromClassGenericMetadataSupport, (]
[), ;, }, private, static, class, FromClassGenericMetadataSupport, extends, GenericMetadataSupport, {, private, final, Class, <, ?, >, clazz, ;, public, FromClassGenericMetadataSupport]
[+, type, ), ;, }, private, static, class, FromClassGenericMetadataSupport, extends, GenericMetadataSupport, {, private, final, Class, <, ?, >, clazz, ;]
[+, ") is not supported : ", +, type, ), ;, }, private, static, class, FromClassGenericMetadataSupport, extends, GenericMetadataSupport, {, private, final, Class, <, ?, >]
[+, type, ., getClass, (, ), ., getCanonicalName, (, ), +, ") is not supported : ", +, type, ), ;, }, private, static, class]
[+, ") is not supported : ", +, type, ), ;, }, private, static, class, FromClassGenericMetadataSupport, extends, GenericMetadataSupport, {, private, final, Class, <, ?, >]
[., getCanonicalName, (, ), +, ") is not supported : ", +, type, ), ;, }, private, static, class, FromClassGenericMetadataSupport, extends, GenericMetadataSupport, {, private, final]
[., getClass, (, ), ., getCanonicalName, (, ), +, ") is not supported : ", +, type, ), ;, }, private, static, class, FromClassGenericMetadataSupport, extends]
[+, type, ), ;, }, private, static, class, FromClassGenericMetadataSupport, extends, GenericMetadataSupport, {, private, final, Class, <, ?, >, clazz, ;]
[), ;, }, private, static, class, FromClassGenericMetadataSupport, extends, GenericMetadataSupport, {, private, final, Class, <, ?, >, clazz, ;, public, FromClassGenericMetadataSupport]
[=, clazz, ;, for, (, Class, currentExploredClass, =, clazz, ;, currentExploredClass, !=, null, &&, currentExploredClass, !=, Object, ., class, ;]
[., clazz, =, clazz, ;, for, (, Class, currentExploredClass, =, clazz, ;, currentExploredClass, !=, null, &&, currentExploredClass, !=, Object, .]
[;, for, (, Class, currentExploredClass, =, clazz, ;, currentExploredClass, !=, null, &&, currentExploredClass, !=, Object, ., class, ;, currentExploredClass, =]
[;, currentExploredClass, !=, null, &&, currentExploredClass, !=, Object, ., class, ;, currentExploredClass, =, superClassOf, (, currentExploredClass, ), ), {, readActualTypeParametersOnDeclaringClass]
[;, currentExploredClass, =, superClassOf, (, currentExploredClass, ), ), {, readActualTypeParametersOnDeclaringClass, (, currentExploredClass, ), ;, }, }, private, Class, superClassOf, (]
[&&, currentExploredClass, !=, Object, ., class, ;, currentExploredClass, =, superClassOf, (, currentExploredClass, ), ), {, readActualTypeParametersOnDeclaringClass, (, currentExploredClass, ), ;]
[!=, null, &&, currentExploredClass, !=, Object, ., class, ;, currentExploredClass, =, superClassOf, (, currentExploredClass, ), ), {, readActualTypeParametersOnDeclaringClass, (, currentExploredClass]
[&&, currentExploredClass, !=, Object, ., class, ;, currentExploredClass, =, superClassOf, (, currentExploredClass, ), ), {, readActualTypeParametersOnDeclaringClass, (, currentExploredClass, ), ;]
[;, currentExploredClass, =, superClassOf, (, currentExploredClass, ), ), {, readActualTypeParametersOnDeclaringClass, (, currentExploredClass, ), ;, }, }, private, Class, superClassOf, (]
[!=, Object, ., class, ;, currentExploredClass, =, superClassOf, (, currentExploredClass, ), ), {, readActualTypeParametersOnDeclaringClass, (, currentExploredClass, ), ;, }, }]
[;, currentExploredClass, =, superClassOf, (, currentExploredClass, ), ), {, readActualTypeParametersOnDeclaringClass, (, currentExploredClass, ), ;, }, }, private, Class, superClassOf, (]
[=, superClassOf, (, currentExploredClass, ), ), {, readActualTypeParametersOnDeclaringClass, (, currentExploredClass, ), ;, }, }, private, Class, superClassOf, (, Class, currentExploredClass]
[), {, readActualTypeParametersOnDeclaringClass, (, currentExploredClass, ), ;, }, }, private, Class, superClassOf, (, Class, currentExploredClass, ), {, Type, genericSuperclass, =]
[), ), {, readActualTypeParametersOnDeclaringClass, (, currentExploredClass, ), ;, }, }, private, Class, superClassOf, (, Class, currentExploredClass, ), {, Type, genericSuperclass]
[;, }, }, private, Class, superClassOf, (, Class, currentExploredClass, ), {, Type, genericSuperclass, =, currentExploredClass, ., getGenericSuperclass, (, ), ;]
[), ;, }, }, private, Class, superClassOf, (, Class, currentExploredClass, ), {, Type, genericSuperclass, =, currentExploredClass, ., getGenericSuperclass, (, )]
[;, if, (, genericSuperclass, instanceof, ParameterizedType, ), {, Type, rawType, =, (, (, ParameterizedType, ), genericSuperclass, ), ., getRawType, (]
[., getGenericSuperclass, (, ), ;, if, (, genericSuperclass, instanceof, ParameterizedType, ), {, Type, rawType, =, (, (, ParameterizedType, ), genericSuperclass]
[), {, Type, rawType, =, (, (, ParameterizedType, ), genericSuperclass, ), ., getRawType, (, ), ;, return, (, Class, )]
[instanceof, ParameterizedType, ), {, Type, rawType, =, (, (, ParameterizedType, ), genericSuperclass, ), ., getRawType, (, ), ;, return, (]
[;, return, (, Class, ), rawType, ;, }, return, (, Class, ), genericSuperclass, ;, }, private, void, readActualTypeParametersOnDeclaringClass, (, Class]
[., getRawType, (, ), ;, return, (, Class, ), rawType, ;, }, return, (, Class, ), genericSuperclass, ;, }, private]
[), ., getRawType, (, ), ;, return, (, Class, ), rawType, ;, }, return, (, Class, ), genericSuperclass, ;, }]
[), ., getRawType, (, ), ;, return, (, Class, ), rawType, ;, }, return, (, Class, ), genericSuperclass, ;, }]
[;, }, return, (, Class, ), genericSuperclass, ;, }, private, void, readActualTypeParametersOnDeclaringClass, (, Class, <, ?, >, clazz, ), {]
[;, }, return, (, Class, ), genericSuperclass, ;, }, private, void, readActualTypeParametersOnDeclaringClass, (, Class, <, ?, >, clazz, ), {]
[;, }, private, void, readActualTypeParametersOnDeclaringClass, (, Class, <, ?, >, clazz, ), {, registerTypeParametersOn, (, clazz, ., getTypeParameters, (, )]
[;, }, private, void, readActualTypeParametersOnDeclaringClass, (, Class, <, ?, >, clazz, ), {, registerTypeParametersOn, (, clazz, ., getTypeParameters, (, )]
[;, registerTypeVariablesOn, (, clazz, ., getGenericSuperclass, (, ), ), ;, for, (, Type, genericInterface, :, clazz, ., getGenericInterfaces, (, )]
[), ;, registerTypeVariablesOn, (, clazz, ., getGenericSuperclass, (, ), ), ;, for, (, Type, genericInterface, :, clazz, ., getGenericInterfaces, (]
[., getTypeParameters, (, ), ), ;, registerTypeVariablesOn, (, clazz, ., getGenericSuperclass, (, ), ), ;, for, (, Type, genericInterface, :]
[;, for, (, Type, genericInterface, :, clazz, ., getGenericInterfaces, (, ), ), {, registerTypeVariablesOn, (, genericInterface, ), ;, }, }]
[), ;, for, (, Type, genericInterface, :, clazz, ., getGenericInterfaces, (, ), ), {, registerTypeVariablesOn, (, genericInterface, ), ;, }]
[., getGenericSuperclass, (, ), ), ;, for, (, Type, genericInterface, :, clazz, ., getGenericInterfaces, (, ), ), {, registerTypeVariablesOn, (]
[), {, registerTypeVariablesOn, (, genericInterface, ), ;, }, }, @, Override, public, Class, <, ?, >, rawType, (, ), {]
[., getGenericInterfaces, (, ), ), {, registerTypeVariablesOn, (, genericInterface, ), ;, }, }, @, Override, public, Class, <, ?, >]
[;, }, }, @, Override, public, Class, <, ?, >, rawType, (, ), {, return, clazz, ;, }, }, private]
[), ;, }, }, @, Override, public, Class, <, ?, >, rawType, (, ), {, return, clazz, ;, }, }]
[;, }, }, private, static, class, FromParameterizedTypeGenericMetadataSupport, extends, GenericMetadataSupport, {, private, final, ParameterizedType, parameterizedType, ;, public, FromParameterizedTypeGenericMetadataSupport, (, ParameterizedType, parameterizedType]
[=, parameterizedType, ;, readActualTypeParameters, (, ), ;, }, private, void, readActualTypeParameters, (, ), {, registerTypeVariablesOn, (, parameterizedType, ., getRawType, (]
[., parameterizedType, =, parameterizedType, ;, readActualTypeParameters, (, ), ;, }, private, void, readActualTypeParameters, (, ), {, registerTypeVariablesOn, (, parameterizedType, .]
[;, readActualTypeParameters, (, ), ;, }, private, void, readActualTypeParameters, (, ), {, registerTypeVariablesOn, (, parameterizedType, ., getRawType, (, ), )]
[;, }, private, void, readActualTypeParameters, (, ), {, registerTypeVariablesOn, (, parameterizedType, ., getRawType, (, ), ), ;, registerTypeVariablesOn, (, parameterizedType]
[;, registerTypeVariablesOn, (, parameterizedType, ), ;, }, @, Override, public, Class, <, ?, >, rawType, (, ), {, return, (]
[), ;, registerTypeVariablesOn, (, parameterizedType, ), ;, }, @, Override, public, Class, <, ?, >, rawType, (, ), {, return]
[., getRawType, (, ), ), ;, registerTypeVariablesOn, (, parameterizedType, ), ;, }, @, Override, public, Class, <, ?, >, rawType]
[;, }, @, Override, public, Class, <, ?, >, rawType, (, ), {, return, (, Class, <, ?, >, )]
[), ;, }, @, Override, public, Class, <, ?, >, rawType, (, ), {, return, (, Class, <, ?, >]
[;, }, }, private, static, class, ParameterizedReturnType, extends, GenericMetadataSupport, {, private, final, ParameterizedType, parameterizedType, ;, private, final, TypeVariable, [, ]]
[;, }, }, private, static, class, ParameterizedReturnType, extends, GenericMetadataSupport, {, private, final, ParameterizedType, parameterizedType, ;, private, final, TypeVariable, [, ]]
[., getRawType, (, ), ;, }, }, private, static, class, ParameterizedReturnType, extends, GenericMetadataSupport, {, private, final, ParameterizedType, parameterizedType, ;, private]
[=, parameterizedType, ;, this, ., typeParameters, =, typeParameters, ;, this, ., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, )]
[., parameterizedType, =, parameterizedType, ;, this, ., typeParameters, =, typeParameters, ;, this, ., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters]
[;, this, ., typeParameters, =, typeParameters, ;, this, ., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables]
[=, typeParameters, ;, this, ., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables, (, ), ;, }]
[., typeParameters, =, typeParameters, ;, this, ., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables, (, )]
[;, this, ., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables, (, ), ;, }, private, void]
[=, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables, (, ), ;, }, private, void, readTypeParameters, (, ), {]
[., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables, (, ), ;, }, private, void, readTypeParameters, (]
[;, readTypeParameters, (, ), ;, readTypeVariables, (, ), ;, }, private, void, readTypeParameters, (, ), {, registerTypeParametersOn, (, typeParameters, )]
[., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables, (, ), ;, }, private, void, readTypeParameters, (, ), {, registerTypeParametersOn, (]
[;, readTypeVariables, (, ), ;, }, private, void, readTypeParameters, (, ), {, registerTypeParametersOn, (, typeParameters, ), ;, }, private, void]
[;, }, private, void, readTypeParameters, (, ), {, registerTypeParametersOn, (, typeParameters, ), ;, }, private, void, readTypeVariables, (, ), {]
[;, }, private, void, readTypeVariables, (, ), {, registerTypeVariablesOn, (, parameterizedType, ), ;, }, @, Override, public, Class, <, ?]
[), ;, }, private, void, readTypeVariables, (, ), {, registerTypeVariablesOn, (, parameterizedType, ), ;, }, @, Override, public, Class, <]
[;, }, @, Override, public, Class, <, ?, >, rawType, (, ), {, return, (, Class, <, ?, >, )]
[), ;, }, @, Override, public, Class, <, ?, >, rawType, (, ), {, return, (, Class, <, ?, >]
[;, }, }, private, static, class, TypeVariableReturnType, extends, GenericMetadataSupport, {, private, final, TypeVariable, typeVariable, ;, private, final, TypeVariable, [, ]]
[;, }, }, private, static, class, TypeVariableReturnType, extends, GenericMetadataSupport, {, private, final, TypeVariable, typeVariable, ;, private, final, TypeVariable, [, ]]
[., getRawType, (, ), ;, }, }, private, static, class, TypeVariableReturnType, extends, GenericMetadataSupport, {, private, final, TypeVariable, typeVariable, ;, private]
[=, typeParameters, ;, this, ., typeVariable, =, typeVariable, ;, this, ., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, )]
[., typeParameters, =, typeParameters, ;, this, ., typeVariable, =, typeVariable, ;, this, ., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters]
[;, this, ., typeVariable, =, typeVariable, ;, this, ., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables]
[=, typeVariable, ;, this, ., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables, (, ), ;, }]
[., typeVariable, =, typeVariable, ;, this, ., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables, (, )]
[;, this, ., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables, (, ), ;, }, private, void]
[=, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables, (, ), ;, }, private, void, readTypeParameters, (, ), {]
[., contextualActualTypeParameters, =, source, ., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables, (, ), ;, }, private, void, readTypeParameters, (]
[;, readTypeParameters, (, ), ;, readTypeVariables, (, ), ;, }, private, void, readTypeParameters, (, ), {, registerTypeParametersOn, (, typeParameters, )]
[., contextualActualTypeParameters, ;, readTypeParameters, (, ), ;, readTypeVariables, (, ), ;, }, private, void, readTypeParameters, (, ), {, registerTypeParametersOn, (]
[;, readTypeVariables, (, ), ;, }, private, void, readTypeParameters, (, ), {, registerTypeParametersOn, (, typeParameters, ), ;, }, private, void]
[;, }, private, void, readTypeParameters, (, ), {, registerTypeParametersOn, (, typeParameters, ), ;, }, private, void, readTypeVariables, (, ), {]
[;, }, private, void, readTypeVariables, (, ), {, for, (, Type, type, :, typeVariable, ., getBounds, (, ), ), {]
[), ;, }, private, void, readTypeVariables, (, ), {, for, (, Type, type, :, typeVariable, ., getBounds, (, ), )]
[), {, registerTypeVariablesOn, (, type, ), ;, }, registerTypeParametersOn, (, new, TypeVariable, [, ], {, typeVariable, }, ), ;, registerTypeVariablesOn]
[., getBounds, (, ), ), {, registerTypeVariablesOn, (, type, ), ;, }, registerTypeParametersOn, (, new, TypeVariable, [, ], {, typeVariable]
[;, }, registerTypeParametersOn, (, new, TypeVariable, [, ], {, typeVariable, }, ), ;, registerTypeVariablesOn, (, getActualTypeArgumentFor, (, typeVariable, ), )]
[), ;, }, registerTypeParametersOn, (, new, TypeVariable, [, ], {, typeVariable, }, ), ;, registerTypeVariablesOn, (, getActualTypeArgumentFor, (, typeVariable, )]
[;, registerTypeVariablesOn, (, getActualTypeArgumentFor, (, typeVariable, ), ), ;, }, @, Override, public, Class, <, ?, >, rawType, (, )]
[), ;, registerTypeVariablesOn, (, getActualTypeArgumentFor, (, typeVariable, ), ), ;, }, @, Override, public, Class, <, ?, >, rawType, (]
[), ;, registerTypeVariablesOn, (, getActualTypeArgumentFor, (, typeVariable, ), ), ;, }, @, Override, public, Class, <, ?, >, rawType, (]
[}, ), ;, registerTypeVariablesOn, (, getActualTypeArgumentFor, (, typeVariable, ), ), ;, }, @, Override, public, Class, <, ?, >, rawType]
[;, }, @, Override, public, Class, <, ?, >, rawType, (, ), {, if, (, rawType, ==, null, ), {]
[), ;, }, @, Override, public, Class, <, ?, >, rawType, (, ), {, if, (, rawType, ==, null, )]
[), ), ;, }, @, Override, public, Class, <, ?, >, rawType, (, ), {, if, (, rawType, ==, null]
[), {, rawType, =, extractRawTypeOf, (, typeVariable, ), ;, }, return, rawType, ;, }, private, Class, <, ?, >, extractRawTypeOf]
[==, null, ), {, rawType, =, extractRawTypeOf, (, typeVariable, ), ;, }, return, rawType, ;, }, private, Class, <, ?]
[), {, rawType, =, extractRawTypeOf, (, typeVariable, ), ;, }, return, rawType, ;, }, private, Class, <, ?, >, extractRawTypeOf]
[=, extractRawTypeOf, (, typeVariable, ), ;, }, return, rawType, ;, }, private, Class, <, ?, >, extractRawTypeOf, (, Type, type]
[;, }, return, rawType, ;, }, private, Class, <, ?, >, extractRawTypeOf, (, Type, type, ), {, if, (, type]
[), ;, }, return, rawType, ;, }, private, Class, <, ?, >, extractRawTypeOf, (, Type, type, ), {, if, (]
[;, }, private, Class, <, ?, >, extractRawTypeOf, (, Type, type, ), {, if, (, type, instanceof, Class, ), {]
[), {, return, (, Class, <, ?, >, ), type, ;, }, if, (, type, instanceof, ParameterizedType, ), {, return]
[instanceof, Class, ), {, return, (, Class, <, ?, >, ), type, ;, }, if, (, type, instanceof, ParameterizedType, )]
[;, }, if, (, type, instanceof, ParameterizedType, ), {, return, (, Class, <, ?, >, ), (, (, ParameterizedType, )]
[;, }, if, (, type, instanceof, ParameterizedType, ), {, return, (, Class, <, ?, >, ), (, (, ParameterizedType, )]
[), {, return, (, Class, <, ?, >, ), (, (, ParameterizedType, ), type, ), ., getRawType, (, ), ;]
[instanceof, ParameterizedType, ), {, return, (, Class, <, ?, >, ), (, (, ParameterizedType, ), type, ), ., getRawType, (]
[;, }, if, (, type, instanceof, BoundedType, ), {, return, extractRawTypeOf, (, (, (, BoundedType, ), type, ), ., firstBound]
[;, }, if, (, type, instanceof, BoundedType, ), {, return, extractRawTypeOf, (, (, (, BoundedType, ), type, ), ., firstBound]
[., getRawType, (, ), ;, }, if, (, type, instanceof, BoundedType, ), {, return, extractRawTypeOf, (, (, (, BoundedType, )]
[), ., getRawType, (, ), ;, }, if, (, type, instanceof, BoundedType, ), {, return, extractRawTypeOf, (, (, (, BoundedType]
[), ., getRawType, (, ), ;, }, if, (, type, instanceof, BoundedType, ), {, return, extractRawTypeOf, (, (, (, BoundedType]
[), {, return, extractRawTypeOf, (, (, (, BoundedType, ), type, ), ., firstBound, (, ), ), ;, }, if, (]
[instanceof, BoundedType, ), {, return, extractRawTypeOf, (, (, (, BoundedType, ), type, ), ., firstBound, (, ), ), ;, }]
[;, }, if, (, type, instanceof, TypeVariable, ), {, return, extractRawTypeOf, (, contextualActualTypeParameters, ., get, (, type, ), ), ;]
[), ;, }, if, (, type, instanceof, TypeVariable, ), {, return, extractRawTypeOf, (, contextualActualTypeParameters, ., get, (, type, ), )]
[., firstBound, (, ), ), ;, }, if, (, type, instanceof, TypeVariable, ), {, return, extractRawTypeOf, (, contextualActualTypeParameters, ., get]
[), ., firstBound, (, ), ), ;, }, if, (, type, instanceof, TypeVariable, ), {, return, extractRawTypeOf, (, contextualActualTypeParameters, .]
[), ., firstBound, (, ), ), ;, }, if, (, type, instanceof, TypeVariable, ), {, return, extractRawTypeOf, (, contextualActualTypeParameters, .]
[), {, return, extractRawTypeOf, (, contextualActualTypeParameters, ., get, (, type, ), ), ;, }, throw, new, MockitoException, (, "Raw extraction not supported for : '", +]
[instanceof, TypeVariable, ), {, return, extractRawTypeOf, (, contextualActualTypeParameters, ., get, (, type, ), ), ;, }, throw, new, MockitoException, (]
[;, }, throw, new, MockitoException, (, "Raw extraction not supported for : '", +, type, +, "'", ), ;, }, @, Override, public, List, <, Type]
[), ;, }, throw, new, MockitoException, (, "Raw extraction not supported for : '", +, type, +, "'", ), ;, }, @, Override, public, List, <]
[., get, (, type, ), ), ;, }, throw, new, MockitoException, (, "Raw extraction not supported for : '", +, type, +, "'", ), ;, }]
[), ), ;, }, throw, new, MockitoException, (, "Raw extraction not supported for : '", +, type, +, "'", ), ;, }, @, Override, public, List]
[;, }, @, Override, public, List, <, Type, >, extraInterfaces, (, ), {, Type, type, =, extractActualBoundedTypeOf, (, typeVariable, )]
[), ;, }, @, Override, public, List, <, Type, >, extraInterfaces, (, ), {, Type, type, =, extractActualBoundedTypeOf, (, typeVariable]
[+, "'", ), ;, }, @, Override, public, List, <, Type, >, extraInterfaces, (, ), {, Type, type, =, extractActualBoundedTypeOf]
[+, type, +, "'", ), ;, }, @, Override, public, List, <, Type, >, extraInterfaces, (, ), {, Type, type]
[+, "'", ), ;, }, @, Override, public, List, <, Type, >, extraInterfaces, (, ), {, Type, type, =, extractActualBoundedTypeOf]
[), ;, }, @, Override, public, List, <, Type, >, extraInterfaces, (, ), {, Type, type, =, extractActualBoundedTypeOf, (, typeVariable]
[;, if, (, type, instanceof, BoundedType, ), {, return, Arrays, ., asList, (, (, (, BoundedType, ), type, ), .]
[), ;, if, (, type, instanceof, BoundedType, ), {, return, Arrays, ., asList, (, (, (, BoundedType, ), type, )]
[), {, return, Arrays, ., asList, (, (, (, BoundedType, ), type, ), ., interfaceBounds, (, ), ), ;, }]
[instanceof, BoundedType, ), {, return, Arrays, ., asList, (, (, (, BoundedType, ), type, ), ., interfaceBounds, (, ), )]
[;, }, if, (, type, instanceof, ParameterizedType, ), {, return, Collections, ., singletonList, (, type, ), ;, }, if, (]
[., asList, (, (, (, BoundedType, ), type, ), ., interfaceBounds, (, ), ), ;, }, if, (, type, instanceof]
[), ;, }, if, (, type, instanceof, ParameterizedType, ), {, return, Collections, ., singletonList, (, type, ), ;, }, if]
[., interfaceBounds, (, ), ), ;, }, if, (, type, instanceof, ParameterizedType, ), {, return, Collections, ., singletonList, (, type]
[), ., interfaceBounds, (, ), ), ;, }, if, (, type, instanceof, ParameterizedType, ), {, return, Collections, ., singletonList, (]
[), ., interfaceBounds, (, ), ), ;, }, if, (, type, instanceof, ParameterizedType, ), {, return, Collections, ., singletonList, (]
[), {, return, Collections, ., singletonList, (, type, ), ;, }, if, (, type, instanceof, Class, ), {, return, Collections]
[instanceof, ParameterizedType, ), {, return, Collections, ., singletonList, (, type, ), ;, }, if, (, type, instanceof, Class, ), {]
[;, }, if, (, type, instanceof, Class, ), {, return, Collections, ., emptyList, (, ), ;, }, throw, new, MockitoException]
[., singletonList, (, type, ), ;, }, if, (, type, instanceof, Class, ), {, return, Collections, ., emptyList, (, )]
[), ;, }, if, (, type, instanceof, Class, ), {, return, Collections, ., emptyList, (, ), ;, }, throw, new]
[), {, return, Collections, ., emptyList, (, ), ;, }, throw, new, MockitoException, (, "Cannot extract extra-interfaces from '", +, typeVariable, +, "' : '", +]
[instanceof, Class, ), {, return, Collections, ., emptyList, (, ), ;, }, throw, new, MockitoException, (, "Cannot extract extra-interfaces from '", +, typeVariable, +]
[;, }, throw, new, MockitoException, (, "Cannot extract extra-interfaces from '", +, typeVariable, +, "' : '", +, type, +, "'", ), ;, }, public, Class]
[., emptyList, (, ), ;, }, throw, new, MockitoException, (, "Cannot extract extra-interfaces from '", +, typeVariable, +, "' : '", +, type, +, "'", )]
[;, }, public, Class, <, ?, >, [, ], rawExtraInterfaces, (, ), {, List, <, Type, >, extraInterfaces, =, extraInterfaces]
[), ;, }, public, Class, <, ?, >, [, ], rawExtraInterfaces, (, ), {, List, <, Type, >, extraInterfaces, =]
[+, "'", ), ;, }, public, Class, <, ?, >, [, ], rawExtraInterfaces, (, ), {, List, <, Type, >]
[+, type, +, "'", ), ;, }, public, Class, <, ?, >, [, ], rawExtraInterfaces, (, ), {, List, <]
[+, "' : '", +, type, +, "'", ), ;, }, public, Class, <, ?, >, [, ], rawExtraInterfaces, (, ), {]
[+, typeVariable, +, "' : '", +, type, +, "'", ), ;, }, public, Class, <, ?, >, [, ], rawExtraInterfaces, (]
[+, "' : '", +, type, +, "'", ), ;, }, public, Class, <, ?, >, [, ], rawExtraInterfaces, (, ), {]
[+, type, +, "'", ), ;, }, public, Class, <, ?, >, [, ], rawExtraInterfaces, (, ), {, List, <]
[+, "'", ), ;, }, public, Class, <, ?, >, [, ], rawExtraInterfaces, (, ), {, List, <, Type, >]
[), ;, }, public, Class, <, ?, >, [, ], rawExtraInterfaces, (, ), {, List, <, Type, >, extraInterfaces, =]
[;, List, <, Class, <, ?, >, >, rawExtraInterfaces, =, new, ArrayList, <, Class, <, ?, >, >, (, )]
[;, for, (, Type, extraInterface, :, extraInterfaces, ), {, Class, <, ?, >, rawInterface, =, extractRawTypeOf, (, extraInterface, ), ;]
[), {, Class, <, ?, >, rawInterface, =, extractRawTypeOf, (, extraInterface, ), ;, if, (, !, rawType, (, ), .]
[;, if, (, !, rawType, (, ), ., equals, (, rawInterface, ), ), {, rawExtraInterfaces, ., add, (, rawInterface, )]
[), ;, if, (, !, rawType, (, ), ., equals, (, rawInterface, ), ), {, rawExtraInterfaces, ., add, (, rawInterface]
[), {, rawExtraInterfaces, ., add, (, rawInterface, ), ;, }, }, return, rawExtraInterfaces, ., toArray, (, new, Class, [, rawExtraInterfaces]
[), {, rawExtraInterfaces, ., add, (, rawInterface, ), ;, }, }, return, rawExtraInterfaces, ., toArray, (, new, Class, [, rawExtraInterfaces]
[., equals, (, rawInterface, ), ), {, rawExtraInterfaces, ., add, (, rawInterface, ), ;, }, }, return, rawExtraInterfaces, ., toArray]
[), ), {, rawExtraInterfaces, ., add, (, rawInterface, ), ;, }, }, return, rawExtraInterfaces, ., toArray, (, new, Class, []
[;, }, }, return, rawExtraInterfaces, ., toArray, (, new, Class, [, rawExtraInterfaces, ., size, (, ), ], ), ;, }]
[., add, (, rawInterface, ), ;, }, }, return, rawExtraInterfaces, ., toArray, (, new, Class, [, rawExtraInterfaces, ., size, (]
[), ;, }, }, return, rawExtraInterfaces, ., toArray, (, new, Class, [, rawExtraInterfaces, ., size, (, ), ], ), ;]
[;, }, private, Type, extractActualBoundedTypeOf, (, Type, type, ), {, if, (, type, instanceof, TypeVariable, ), {, return, extractActualBoundedTypeOf, (]
[., toArray, (, new, Class, [, rawExtraInterfaces, ., size, (, ), ], ), ;, }, private, Type, extractActualBoundedTypeOf, (, Type]
[), ;, }, private, Type, extractActualBoundedTypeOf, (, Type, type, ), {, if, (, type, instanceof, TypeVariable, ), {, return, extractActualBoundedTypeOf]
[], ), ;, }, private, Type, extractActualBoundedTypeOf, (, Type, type, ), {, if, (, type, instanceof, TypeVariable, ), {, return]
[., size, (, ), ], ), ;, }, private, Type, extractActualBoundedTypeOf, (, Type, type, ), {, if, (, type, instanceof]
[), {, return, extractActualBoundedTypeOf, (, contextualActualTypeParameters, ., get, (, type, ), ), ;, }, if, (, type, instanceof, BoundedType, )]
[instanceof, TypeVariable, ), {, return, extractActualBoundedTypeOf, (, contextualActualTypeParameters, ., get, (, type, ), ), ;, }, if, (, type, instanceof]
[;, }, if, (, type, instanceof, BoundedType, ), {, Type, actualFirstBound, =, extractActualBoundedTypeOf, (, (, (, BoundedType, ), type, )]
[), ;, }, if, (, type, instanceof, BoundedType, ), {, Type, actualFirstBound, =, extractActualBoundedTypeOf, (, (, (, BoundedType, ), type]
[., get, (, type, ), ), ;, }, if, (, type, instanceof, BoundedType, ), {, Type, actualFirstBound, =, extractActualBoundedTypeOf, (]
[), ), ;, }, if, (, type, instanceof, BoundedType, ), {, Type, actualFirstBound, =, extractActualBoundedTypeOf, (, (, (, BoundedType, )]
[), {, Type, actualFirstBound, =, extractActualBoundedTypeOf, (, (, (, BoundedType, ), type, ), ., firstBound, (, ), ), ;, if]
[instanceof, BoundedType, ), {, Type, actualFirstBound, =, extractActualBoundedTypeOf, (, (, (, BoundedType, ), type, ), ., firstBound, (, ), )]
[;, if, (, !, (, actualFirstBound, instanceof, BoundedType, ), ), {, return, type, ;, }, return, actualFirstBound, ;, }, return]
[), ;, if, (, !, (, actualFirstBound, instanceof, BoundedType, ), ), {, return, type, ;, }, return, actualFirstBound, ;, }]
[., firstBound, (, ), ), ;, if, (, !, (, actualFirstBound, instanceof, BoundedType, ), ), {, return, type, ;, }]
[), ., firstBound, (, ), ), ;, if, (, !, (, actualFirstBound, instanceof, BoundedType, ), ), {, return, type, ;]
[), ., firstBound, (, ), ), ;, if, (, !, (, actualFirstBound, instanceof, BoundedType, ), ), {, return, type, ;]
[), {, return, type, ;, }, return, actualFirstBound, ;, }, return, type, ;, }, }, private, static, class, NotGenericReturnTypeSupport, extends]
[), {, return, type, ;, }, return, actualFirstBound, ;, }, return, type, ;, }, }, private, static, class, NotGenericReturnTypeSupport, extends]
[), ), {, return, type, ;, }, return, actualFirstBound, ;, }, return, type, ;, }, }, private, static, class, NotGenericReturnTypeSupport]
[instanceof, BoundedType, ), ), {, return, type, ;, }, return, actualFirstBound, ;, }, return, type, ;, }, }, private, static]
[;, }, return, actualFirstBound, ;, }, return, type, ;, }, }, private, static, class, NotGenericReturnTypeSupport, extends, GenericMetadataSupport, {, private, final]
[;, }, return, type, ;, }, }, private, static, class, NotGenericReturnTypeSupport, extends, GenericMetadataSupport, {, private, final, Class, <, ?, >]
[;, }, }, private, static, class, NotGenericReturnTypeSupport, extends, GenericMetadataSupport, {, private, final, Class, <, ?, >, returnType, ;, public, NotGenericReturnTypeSupport]
[=, (, Class, <, ?, >, ), genericReturnType, ;, }, @, Override, public, Class, <, ?, >, rawType, (, )]
[;, }, @, Override, public, Class, <, ?, >, rawType, (, ), {, return, returnType, ;, }, }, public, interface]
[;, }, @, Override, public, Class, <, ?, >, rawType, (, ), {, return, returnType, ;, }, }, public, interface]
[;, }, }, public, interface, BoundedType, extends, Type, {, Type, firstBound, (, ), ;, Type, [, ], interfaceBounds, (, )]
[=, typeVariable, ;, }, public, Type, firstBound, (, ), {, return, typeVariable, ., getBounds, (, ), [, 0, ], ;]
[., typeVariable, =, typeVariable, ;, }, public, Type, firstBound, (, ), {, return, typeVariable, ., getBounds, (, ), [, 0]
[;, }, public, Type, firstBound, (, ), {, return, typeVariable, ., getBounds, (, ), [, 0, ], ;, }, public]
[;, }, public, Type, [, ], interfaceBounds, (, ), {, Type, [, ], interfaceBounds, =, new, Type, [, typeVariable, .]
[[, 0, ], ;, }, public, Type, [, ], interfaceBounds, (, ), {, Type, [, ], interfaceBounds, =, new, Type]
[., getBounds, (, ), [, 0, ], ;, }, public, Type, [, ], interfaceBounds, (, ), {, Type, [, ]]
[], ;, }, public, Type, [, ], interfaceBounds, (, ), {, Type, [, ], interfaceBounds, =, new, Type, [, typeVariable]
[;, System, ., arraycopy, (, typeVariable, ., getBounds, (, ), ,, 1, ,, interfaceBounds, ,, 0, ,, typeVariable, ., getBounds]
[], ;, System, ., arraycopy, (, typeVariable, ., getBounds, (, ), ,, 1, ,, interfaceBounds, ,, 0, ,, typeVariable, .]
[-, 1, ], ;, System, ., arraycopy, (, typeVariable, ., getBounds, (, ), ,, 1, ,, interfaceBounds, ,, 0, ,]
[., length, -, 1, ], ;, System, ., arraycopy, (, typeVariable, ., getBounds, (, ), ,, 1, ,, interfaceBounds, ,]
[., getBounds, (, ), ., length, -, 1, ], ;, System, ., arraycopy, (, typeVariable, ., getBounds, (, ), ,]
[], ;, System, ., arraycopy, (, typeVariable, ., getBounds, (, ), ,, 1, ,, interfaceBounds, ,, 0, ,, typeVariable, .]
[;, return, interfaceBounds, ;, }, @, Override, public, boolean, equals, (, Object, o, ), {, if, (, this, ==, o]
[., arraycopy, (, typeVariable, ., getBounds, (, ), ,, 1, ,, interfaceBounds, ,, 0, ,, typeVariable, ., getBounds, (, )]
[,, 1, ,, interfaceBounds, ,, 0, ,, typeVariable, ., getBounds, (, ), ., length, -, 1, ), ;, return, interfaceBounds]
[., getBounds, (, ), ,, 1, ,, interfaceBounds, ,, 0, ,, typeVariable, ., getBounds, (, ), ., length, -, 1]
[,, interfaceBounds, ,, 0, ,, typeVariable, ., getBounds, (, ), ., length, -, 1, ), ;, return, interfaceBounds, ;, }]
[,, 0, ,, typeVariable, ., getBounds, (, ), ., length, -, 1, ), ;, return, interfaceBounds, ;, }, @, Override]
[,, typeVariable, ., getBounds, (, ), ., length, -, 1, ), ;, return, interfaceBounds, ;, }, @, Override, public, boolean]
[), ;, return, interfaceBounds, ;, }, @, Override, public, boolean, equals, (, Object, o, ), {, if, (, this, ==]
[-, 1, ), ;, return, interfaceBounds, ;, }, @, Override, public, boolean, equals, (, Object, o, ), {, if, (]
[., length, -, 1, ), ;, return, interfaceBounds, ;, }, @, Override, public, boolean, equals, (, Object, o, ), {]
[., getBounds, (, ), ., length, -, 1, ), ;, return, interfaceBounds, ;, }, @, Override, public, boolean, equals, (]
[), ;, return, interfaceBounds, ;, }, @, Override, public, boolean, equals, (, Object, o, ), {, if, (, this, ==]
[;, }, @, Override, public, boolean, equals, (, Object, o, ), {, if, (, this, ==, o, ), return, true]
[), return, true, ;, if, (, o, ==, null, ||, getClass, (, ), !=, o, ., getClass, (, ), )]
[==, o, ), return, true, ;, if, (, o, ==, null, ||, getClass, (, ), !=, o, ., getClass, (]
[), return, true, ;, if, (, o, ==, null, ||, getClass, (, ), !=, o, ., getClass, (, ), )]
[;, if, (, o, ==, null, ||, getClass, (, ), !=, o, ., getClass, (, ), ), return, false, ;]
[), return, false, ;, return, typeVariable, ., equals, (, (, (, TypeVarBoundedType, ), o, ), ., typeVariable, ), ;, }]
[||, getClass, (, ), !=, o, ., getClass, (, ), ), return, false, ;, return, typeVariable, ., equals, (, (]
[==, null, ||, getClass, (, ), !=, o, ., getClass, (, ), ), return, false, ;, return, typeVariable, ., equals]
[||, getClass, (, ), !=, o, ., getClass, (, ), ), return, false, ;, return, typeVariable, ., equals, (, (]
[), return, false, ;, return, typeVariable, ., equals, (, (, (, TypeVarBoundedType, ), o, ), ., typeVariable, ), ;, }]
[!=, o, ., getClass, (, ), ), return, false, ;, return, typeVariable, ., equals, (, (, (, TypeVarBoundedType, ), o]
[), return, false, ;, return, typeVariable, ., equals, (, (, (, TypeVarBoundedType, ), o, ), ., typeVariable, ), ;, }]
[., getClass, (, ), ), return, false, ;, return, typeVariable, ., equals, (, (, (, TypeVarBoundedType, ), o, ), .]
[;, return, typeVariable, ., equals, (, (, (, TypeVarBoundedType, ), o, ), ., typeVariable, ), ;, }, @, Override, public]
[;, }, @, Override, public, int, hashCode, (, ), {, return, typeVariable, ., hashCode, (, ), ;, }, @, Override]
[., equals, (, (, (, TypeVarBoundedType, ), o, ), ., typeVariable, ), ;, }, @, Override, public, int, hashCode, (]
[), ;, }, @, Override, public, int, hashCode, (, ), {, return, typeVariable, ., hashCode, (, ), ;, }, @]
[., typeVariable, ), ;, }, @, Override, public, int, hashCode, (, ), {, return, typeVariable, ., hashCode, (, ), ;]
[), ., typeVariable, ), ;, }, @, Override, public, int, hashCode, (, ), {, return, typeVariable, ., hashCode, (, )]
[), ., typeVariable, ), ;, }, @, Override, public, int, hashCode, (, ), {, return, typeVariable, ., hashCode, (, )]
[;, }, @, Override, public, String, toString, (, ), {, return, "{firstBound=", +, firstBound, (, ), +, ", interfaceBounds=", +, Arrays]
[., hashCode, (, ), ;, }, @, Override, public, String, toString, (, ), {, return, "{firstBound=", +, firstBound, (, )]
[;, }, public, TypeVariable, typeVariable, (, ), {, return, typeVariable, ;, }, }, public, static, class, WildCardBoundedType, implements, BoundedType, {]
[+, '}', ;, }, public, TypeVariable, typeVariable, (, ), {, return, typeVariable, ;, }, }, public, static, class, WildCardBoundedType, implements]
[+, Arrays, ., deepToString, (, interfaceBounds, (, ), ), +, '}', ;, }, public, TypeVariable, typeVariable, (, ), {, return]
[+, ", interfaceBounds=", +, Arrays, ., deepToString, (, interfaceBounds, (, ), ), +, '}', ;, }, public, TypeVariable, typeVariable, (, )]
[+, firstBound, (, ), +, ", interfaceBounds=", +, Arrays, ., deepToString, (, interfaceBounds, (, ), ), +, '}', ;, }, public]
[+, ", interfaceBounds=", +, Arrays, ., deepToString, (, interfaceBounds, (, ), ), +, '}', ;, }, public, TypeVariable, typeVariable, (, )]
[+, Arrays, ., deepToString, (, interfaceBounds, (, ), ), +, '}', ;, }, public, TypeVariable, typeVariable, (, ), {, return]
[+, '}', ;, }, public, TypeVariable, typeVariable, (, ), {, return, typeVariable, ;, }, }, public, static, class, WildCardBoundedType, implements]
[., deepToString, (, interfaceBounds, (, ), ), +, '}', ;, }, public, TypeVariable, typeVariable, (, ), {, return, typeVariable, ;]
[), +, '}', ;, }, public, TypeVariable, typeVariable, (, ), {, return, typeVariable, ;, }, }, public, static, class, WildCardBoundedType]
[;, }, public, TypeVariable, typeVariable, (, ), {, return, typeVariable, ;, }, }, public, static, class, WildCardBoundedType, implements, BoundedType, {]
[;, }, }, public, static, class, WildCardBoundedType, implements, BoundedType, {, private, final, WildcardType, wildcard, ;, public, WildCardBoundedType, (, WildcardType, wildcard]
[=, wildcard, ;, }, public, Type, firstBound, (, ), {, Type, [, ], lowerBounds, =, wildcard, ., getLowerBounds, (, )]
[., wildcard, =, wildcard, ;, }, public, Type, firstBound, (, ), {, Type, [, ], lowerBounds, =, wildcard, ., getLowerBounds]
[;, }, public, Type, firstBound, (, ), {, Type, [, ], lowerBounds, =, wildcard, ., getLowerBounds, (, ), ;, Type]
[;, Type, [, ], upperBounds, =, wildcard, ., getUpperBounds, (, ), ;, return, lowerBounds, ., length, !=, 0, ?, lowerBounds]
[., getLowerBounds, (, ), ;, Type, [, ], upperBounds, =, wildcard, ., getUpperBounds, (, ), ;, return, lowerBounds, ., length]
[;, return, lowerBounds, ., length, !=, 0, ?, lowerBounds, [, 0, ], :, upperBounds, [, 0, ], ;, }, public]
[., getUpperBounds, (, ), ;, return, lowerBounds, ., length, !=, 0, ?, lowerBounds, [, 0, ], :, upperBounds, [, 0]
[;, }, public, Type, [, ], interfaceBounds, (, ), {, return, new, Type, [, 0, ], ;, }, @, Override]
[?, lowerBounds, [, 0, ], :, upperBounds, [, 0, ], ;, }, public, Type, [, ], interfaceBounds, (, ), {]
[!=, 0, ?, lowerBounds, [, 0, ], :, upperBounds, [, 0, ], ;, }, public, Type, [, ], interfaceBounds, (]
[., length, !=, 0, ?, lowerBounds, [, 0, ], :, upperBounds, [, 0, ], ;, }, public, Type, [, ]]
[?, lowerBounds, [, 0, ], :, upperBounds, [, 0, ], ;, }, public, Type, [, ], interfaceBounds, (, ), {]
[:, upperBounds, [, 0, ], ;, }, public, Type, [, ], interfaceBounds, (, ), {, return, new, Type, [, 0]
[[, 0, ], :, upperBounds, [, 0, ], ;, }, public, Type, [, ], interfaceBounds, (, ), {, return, new]
[], :, upperBounds, [, 0, ], ;, }, public, Type, [, ], interfaceBounds, (, ), {, return, new, Type, []
[;, }, public, Type, [, ], interfaceBounds, (, ), {, return, new, Type, [, 0, ], ;, }, @, Override]
[[, 0, ], ;, }, public, Type, [, ], interfaceBounds, (, ), {, return, new, Type, [, 0, ], ;]
[], ;, }, public, Type, [, ], interfaceBounds, (, ), {, return, new, Type, [, 0, ], ;, }, @]
[;, }, @, Override, public, boolean, equals, (, Object, o, ), {, if, (, this, ==, o, ), return, true]
[], ;, }, @, Override, public, boolean, equals, (, Object, o, ), {, if, (, this, ==, o, ), return]
[), return, true, ;, if, (, o, ==, null, ||, getClass, (, ), !=, o, ., getClass, (, ), )]
[==, o, ), return, true, ;, if, (, o, ==, null, ||, getClass, (, ), !=, o, ., getClass, (]
[), return, true, ;, if, (, o, ==, null, ||, getClass, (, ), !=, o, ., getClass, (, ), )]
[;, if, (, o, ==, null, ||, getClass, (, ), !=, o, ., getClass, (, ), ), return, false, ;]
[), return, false, ;, return, wildcard, ., equals, (, (, (, TypeVarBoundedType, ), o, ), ., typeVariable, ), ;, }]
[||, getClass, (, ), !=, o, ., getClass, (, ), ), return, false, ;, return, wildcard, ., equals, (, (]
[==, null, ||, getClass, (, ), !=, o, ., getClass, (, ), ), return, false, ;, return, wildcard, ., equals]
[||, getClass, (, ), !=, o, ., getClass, (, ), ), return, false, ;, return, wildcard, ., equals, (, (]
[), return, false, ;, return, wildcard, ., equals, (, (, (, TypeVarBoundedType, ), o, ), ., typeVariable, ), ;, }]
[!=, o, ., getClass, (, ), ), return, false, ;, return, wildcard, ., equals, (, (, (, TypeVarBoundedType, ), o]
[), return, false, ;, return, wildcard, ., equals, (, (, (, TypeVarBoundedType, ), o, ), ., typeVariable, ), ;, }]
[., getClass, (, ), ), return, false, ;, return, wildcard, ., equals, (, (, (, TypeVarBoundedType, ), o, ), .]
[;, return, wildcard, ., equals, (, (, (, TypeVarBoundedType, ), o, ), ., typeVariable, ), ;, }, @, Override, public]
[;, }, @, Override, public, int, hashCode, (, ), {, return, wildcard, ., hashCode, (, ), ;, }, @, Override]
[., equals, (, (, (, TypeVarBoundedType, ), o, ), ., typeVariable, ), ;, }, @, Override, public, int, hashCode, (]
[), ;, }, @, Override, public, int, hashCode, (, ), {, return, wildcard, ., hashCode, (, ), ;, }, @]
[., typeVariable, ), ;, }, @, Override, public, int, hashCode, (, ), {, return, wildcard, ., hashCode, (, ), ;]
[), ., typeVariable, ), ;, }, @, Override, public, int, hashCode, (, ), {, return, wildcard, ., hashCode, (, )]
[), ., typeVariable, ), ;, }, @, Override, public, int, hashCode, (, ), {, return, wildcard, ., hashCode, (, )]
[;, }, @, Override, public, String, toString, (, ), {, return, "{firstBound=", +, firstBound, (, ), +, ", interfaceBounds=[]}", ;, }]
[., hashCode, (, ), ;, }, @, Override, public, String, toString, (, ), {, return, "{firstBound=", +, firstBound, (, )]
[;, }, public, WildcardType, wildCard, (, ), {, return, wildcard, ;, }, }, }]
[+, ", interfaceBounds=[]}", ;, }, public, WildcardType, wildCard, (, ), {, return, wildcard, ;, }, }, }]
[+, firstBound, (, ), +, ", interfaceBounds=[]}", ;, }, public, WildcardType, wildCard, (, ), {, return, wildcard, ;, }, }, }]
[+, ", interfaceBounds=[]}", ;, }, public, WildcardType, wildCard, (, ), {, return, wildcard, ;, }, }, }]
[;, }, public, WildcardType, wildCard, (, ), {, return, wildcard, ;, }, }, }]
[;, }, }, }]
