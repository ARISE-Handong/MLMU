[;, import, org, ., hamcrest, ., Description, ;, public, class, ArrayEquals, extends, Equals, {, private, static, final, long, serialVersionUID, =]
[import, org, ., hamcrest, ., Description, ;, public, class, ArrayEquals, extends, Equals, {, private, static, final, long, serialVersionUID, =, -]
[Equals, {, private, static, final, long, serialVersionUID, =, -, 7167812844261087583L, ;, public, ArrayEquals, (, Object, wanted, ), {, super, (]
[wanted, ), {, super, (, wanted, ), ;, }, public, boolean, matches, (, Object, actual, ), {, Object, wanted, =]
[), ;, }, public, boolean, matches, (, Object, actual, ), {, Object, wanted, =, getWanted, (, ), ;, if, (]
[), ;, }, public, boolean, matches, (, Object, actual, ), {, Object, wanted, =, getWanted, (, ), ;, if, (]
[), ;, }, public, boolean, matches, (, Object, actual, ), {, Object, wanted, =, getWanted, (, ), ;, if, (]
[}, public, boolean, matches, (, Object, actual, ), {, Object, wanted, =, getWanted, (, ), ;, if, (, wanted, ==]
[boolean, matches, (, Object, actual, ), {, Object, wanted, =, getWanted, (, ), ;, if, (, wanted, ==, null, ||]
[boolean, matches, (, Object, actual, ), {, Object, wanted, =, getWanted, (, ), ;, if, (, wanted, ==, null, ||]
[(, Object, actual, ), {, Object, wanted, =, getWanted, (, ), ;, if, (, wanted, ==, null, ||, actual, ==]
[{, Object, wanted, =, getWanted, (, ), ;, if, (, wanted, ==, null, ||, actual, ==, null, ), {, return]
[{, Object, wanted, =, getWanted, (, ), ;, if, (, wanted, ==, null, ||, actual, ==, null, ), {, return]
[getWanted, (, ), ;, if, (, wanted, ==, null, ||, actual, ==, null, ), {, return, super, ., matches, (]
[==, null, ||, actual, ==, null, ), {, return, super, ., matches, (, actual, ), ;, }, else, if, (]
[==, null, ||, actual, ==, null, ), {, return, super, ., matches, (, actual, ), ;, }, else, if, (]
[==, null, ||, actual, ==, null, ), {, return, super, ., matches, (, actual, ), ;, }, else, if, (]
[), {, return, super, ., matches, (, actual, ), ;, }, else, if, (, wanted, instanceof, boolean, [, ], &&]
[), {, return, super, ., matches, (, actual, ), ;, }, else, if, (, wanted, instanceof, boolean, [, ], &&]
[), ;, }, else, if, (, wanted, instanceof, boolean, [, ], &&, actual, instanceof, boolean, [, ], ), {, return]
[), ;, }, else, if, (, wanted, instanceof, boolean, [, ], &&, actual, instanceof, boolean, [, ], ), {, return]
[if, (, wanted, instanceof, boolean, [, ], &&, actual, instanceof, boolean, [, ], ), {, return, Arrays, ., equals, (]
[[, ], &&, actual, instanceof, boolean, [, ], ), {, return, Arrays, ., equals, (, (, boolean, [, ], )]
[&&, actual, instanceof, boolean, [, ], ), {, return, Arrays, ., equals, (, (, boolean, [, ], ), wanted, ,]
[], ), {, return, Arrays, ., equals, (, (, boolean, [, ], ), wanted, ,, (, boolean, [, ], )]
[(, (, boolean, [, ], ), wanted, ,, (, boolean, [, ], ), actual, ), ;, }, else, if, (]
[(, (, boolean, [, ], ), wanted, ,, (, boolean, [, ], ), actual, ), ;, }, else, if, (]
[(, (, boolean, [, ], ), wanted, ,, (, boolean, [, ], ), actual, ), ;, }, else, if, (]
[wanted, ,, (, boolean, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, byte, [, ], &&]
[wanted, ,, (, boolean, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, byte, [, ], &&]
[), ;, }, else, if, (, wanted, instanceof, byte, [, ], &&, actual, instanceof, byte, [, ], ), {, return]
[), ;, }, else, if, (, wanted, instanceof, byte, [, ], &&, actual, instanceof, byte, [, ], ), {, return]
[if, (, wanted, instanceof, byte, [, ], &&, actual, instanceof, byte, [, ], ), {, return, Arrays, ., equals, (]
[[, ], &&, actual, instanceof, byte, [, ], ), {, return, Arrays, ., equals, (, (, byte, [, ], )]
[&&, actual, instanceof, byte, [, ], ), {, return, Arrays, ., equals, (, (, byte, [, ], ), wanted, ,]
[], ), {, return, Arrays, ., equals, (, (, byte, [, ], ), wanted, ,, (, byte, [, ], )]
[(, (, byte, [, ], ), wanted, ,, (, byte, [, ], ), actual, ), ;, }, else, if, (]
[(, (, byte, [, ], ), wanted, ,, (, byte, [, ], ), actual, ), ;, }, else, if, (]
[(, (, byte, [, ], ), wanted, ,, (, byte, [, ], ), actual, ), ;, }, else, if, (]
[wanted, ,, (, byte, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, char, [, ], &&]
[wanted, ,, (, byte, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, char, [, ], &&]
[), ;, }, else, if, (, wanted, instanceof, char, [, ], &&, actual, instanceof, char, [, ], ), {, return]
[), ;, }, else, if, (, wanted, instanceof, char, [, ], &&, actual, instanceof, char, [, ], ), {, return]
[if, (, wanted, instanceof, char, [, ], &&, actual, instanceof, char, [, ], ), {, return, Arrays, ., equals, (]
[[, ], &&, actual, instanceof, char, [, ], ), {, return, Arrays, ., equals, (, (, char, [, ], )]
[&&, actual, instanceof, char, [, ], ), {, return, Arrays, ., equals, (, (, char, [, ], ), wanted, ,]
[], ), {, return, Arrays, ., equals, (, (, char, [, ], ), wanted, ,, (, char, [, ], )]
[(, (, char, [, ], ), wanted, ,, (, char, [, ], ), actual, ), ;, }, else, if, (]
[(, (, char, [, ], ), wanted, ,, (, char, [, ], ), actual, ), ;, }, else, if, (]
[(, (, char, [, ], ), wanted, ,, (, char, [, ], ), actual, ), ;, }, else, if, (]
[wanted, ,, (, char, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, double, [, ], &&]
[wanted, ,, (, char, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, double, [, ], &&]
[), ;, }, else, if, (, wanted, instanceof, double, [, ], &&, actual, instanceof, double, [, ], ), {, return]
[), ;, }, else, if, (, wanted, instanceof, double, [, ], &&, actual, instanceof, double, [, ], ), {, return]
[if, (, wanted, instanceof, double, [, ], &&, actual, instanceof, double, [, ], ), {, return, Arrays, ., equals, (]
[[, ], &&, actual, instanceof, double, [, ], ), {, return, Arrays, ., equals, (, (, double, [, ], )]
[&&, actual, instanceof, double, [, ], ), {, return, Arrays, ., equals, (, (, double, [, ], ), wanted, ,]
[], ), {, return, Arrays, ., equals, (, (, double, [, ], ), wanted, ,, (, double, [, ], )]
[(, (, double, [, ], ), wanted, ,, (, double, [, ], ), actual, ), ;, }, else, if, (]
[(, (, double, [, ], ), wanted, ,, (, double, [, ], ), actual, ), ;, }, else, if, (]
[(, (, double, [, ], ), wanted, ,, (, double, [, ], ), actual, ), ;, }, else, if, (]
[wanted, ,, (, double, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, float, [, ], &&]
[wanted, ,, (, double, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, float, [, ], &&]
[), ;, }, else, if, (, wanted, instanceof, float, [, ], &&, actual, instanceof, float, [, ], ), {, return]
[), ;, }, else, if, (, wanted, instanceof, float, [, ], &&, actual, instanceof, float, [, ], ), {, return]
[if, (, wanted, instanceof, float, [, ], &&, actual, instanceof, float, [, ], ), {, return, Arrays, ., equals, (]
[[, ], &&, actual, instanceof, float, [, ], ), {, return, Arrays, ., equals, (, (, float, [, ], )]
[&&, actual, instanceof, float, [, ], ), {, return, Arrays, ., equals, (, (, float, [, ], ), wanted, ,]
[], ), {, return, Arrays, ., equals, (, (, float, [, ], ), wanted, ,, (, float, [, ], )]
[(, (, float, [, ], ), wanted, ,, (, float, [, ], ), actual, ), ;, }, else, if, (]
[(, (, float, [, ], ), wanted, ,, (, float, [, ], ), actual, ), ;, }, else, if, (]
[(, (, float, [, ], ), wanted, ,, (, float, [, ], ), actual, ), ;, }, else, if, (]
[wanted, ,, (, float, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, int, [, ], &&]
[wanted, ,, (, float, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, int, [, ], &&]
[), ;, }, else, if, (, wanted, instanceof, int, [, ], &&, actual, instanceof, int, [, ], ), {, return]
[), ;, }, else, if, (, wanted, instanceof, int, [, ], &&, actual, instanceof, int, [, ], ), {, return]
[if, (, wanted, instanceof, int, [, ], &&, actual, instanceof, int, [, ], ), {, return, Arrays, ., equals, (]
[[, ], &&, actual, instanceof, int, [, ], ), {, return, Arrays, ., equals, (, (, int, [, ], )]
[&&, actual, instanceof, int, [, ], ), {, return, Arrays, ., equals, (, (, int, [, ], ), wanted, ,]
[], ), {, return, Arrays, ., equals, (, (, int, [, ], ), wanted, ,, (, int, [, ], )]
[(, (, int, [, ], ), wanted, ,, (, int, [, ], ), actual, ), ;, }, else, if, (]
[(, (, int, [, ], ), wanted, ,, (, int, [, ], ), actual, ), ;, }, else, if, (]
[(, (, int, [, ], ), wanted, ,, (, int, [, ], ), actual, ), ;, }, else, if, (]
[wanted, ,, (, int, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, long, [, ], &&]
[wanted, ,, (, int, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, long, [, ], &&]
[), ;, }, else, if, (, wanted, instanceof, long, [, ], &&, actual, instanceof, long, [, ], ), {, return]
[), ;, }, else, if, (, wanted, instanceof, long, [, ], &&, actual, instanceof, long, [, ], ), {, return]
[if, (, wanted, instanceof, long, [, ], &&, actual, instanceof, long, [, ], ), {, return, Arrays, ., equals, (]
[[, ], &&, actual, instanceof, long, [, ], ), {, return, Arrays, ., equals, (, (, long, [, ], )]
[&&, actual, instanceof, long, [, ], ), {, return, Arrays, ., equals, (, (, long, [, ], ), wanted, ,]
[], ), {, return, Arrays, ., equals, (, (, long, [, ], ), wanted, ,, (, long, [, ], )]
[(, (, long, [, ], ), wanted, ,, (, long, [, ], ), actual, ), ;, }, else, if, (]
[(, (, long, [, ], ), wanted, ,, (, long, [, ], ), actual, ), ;, }, else, if, (]
[(, (, long, [, ], ), wanted, ,, (, long, [, ], ), actual, ), ;, }, else, if, (]
[wanted, ,, (, long, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, short, [, ], &&]
[wanted, ,, (, long, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, short, [, ], &&]
[), ;, }, else, if, (, wanted, instanceof, short, [, ], &&, actual, instanceof, short, [, ], ), {, return]
[), ;, }, else, if, (, wanted, instanceof, short, [, ], &&, actual, instanceof, short, [, ], ), {, return]
[if, (, wanted, instanceof, short, [, ], &&, actual, instanceof, short, [, ], ), {, return, Arrays, ., equals, (]
[[, ], &&, actual, instanceof, short, [, ], ), {, return, Arrays, ., equals, (, (, short, [, ], )]
[&&, actual, instanceof, short, [, ], ), {, return, Arrays, ., equals, (, (, short, [, ], ), wanted, ,]
[], ), {, return, Arrays, ., equals, (, (, short, [, ], ), wanted, ,, (, short, [, ], )]
[(, (, short, [, ], ), wanted, ,, (, short, [, ], ), actual, ), ;, }, else, if, (]
[(, (, short, [, ], ), wanted, ,, (, short, [, ], ), actual, ), ;, }, else, if, (]
[(, (, short, [, ], ), wanted, ,, (, short, [, ], ), actual, ), ;, }, else, if, (]
[wanted, ,, (, short, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, Object, [, ], &&]
[wanted, ,, (, short, [, ], ), actual, ), ;, }, else, if, (, wanted, instanceof, Object, [, ], &&]
[), ;, }, else, if, (, wanted, instanceof, Object, [, ], &&, actual, instanceof, Object, [, ], ), {, return]
[), ;, }, else, if, (, wanted, instanceof, Object, [, ], &&, actual, instanceof, Object, [, ], ), {, return]
[if, (, wanted, instanceof, Object, [, ], &&, actual, instanceof, Object, [, ], ), {, return, Arrays, ., equals, (]
[[, ], &&, actual, instanceof, Object, [, ], ), {, return, Arrays, ., equals, (, (, Object, [, ], )]
[&&, actual, instanceof, Object, [, ], ), {, return, Arrays, ., equals, (, (, Object, [, ], ), wanted, ,]
[], ), {, return, Arrays, ., equals, (, (, Object, [, ], ), wanted, ,, (, Object, [, ], )]
[., equals, (, (, Object, [, ], ), wanted, ,, (, Object, [, ], ), actual, ), ;, }, return]
[], ), actual, ), ;, }, return, false, ;, }, public, void, describeTo, (, Description, description, ), {, if, (]
[], ), actual, ), ;, }, return, false, ;, }, public, void, describeTo, (, Description, description, ), {, if, (]
[], ), actual, ), ;, }, return, false, ;, }, public, void, describeTo, (, Description, description, ), {, if, (]
[;, }, return, false, ;, }, public, void, describeTo, (, Description, description, ), {, if, (, getWanted, (, ), !=]
[return, false, ;, }, public, void, describeTo, (, Description, description, ), {, if, (, getWanted, (, ), !=, null, &&]
[return, false, ;, }, public, void, describeTo, (, Description, description, ), {, if, (, getWanted, (, ), !=, null, &&]
[return, false, ;, }, public, void, describeTo, (, Description, description, ), {, if, (, getWanted, (, ), !=, null, &&]
[(, getWanted, (, ), !=, null, &&, getWanted, (, ), ., getClass, (, ), ., isArray, (, ), ), {]
[(, ), !=, null, &&, getWanted, (, ), ., getClass, (, ), ., isArray, (, ), ), {, appendArray, (]
[!=, null, &&, getWanted, (, ), ., getClass, (, ), ., isArray, (, ), ), {, appendArray, (, createObjectArray, (]
[), ., getClass, (, ), ., isArray, (, ), ), {, appendArray, (, createObjectArray, (, getWanted, (, ), ), ,]
[isArray, (, ), ), {, appendArray, (, createObjectArray, (, getWanted, (, ), ), ,, description, ), ;, }, else, {]
[isArray, (, ), ), {, appendArray, (, createObjectArray, (, getWanted, (, ), ), ,, description, ), ;, }, else, {]
[{, appendArray, (, createObjectArray, (, getWanted, (, ), ), ,, description, ), ;, }, else, {, super, ., describeTo, (]
[describeTo, (, description, ), ;, }, }, private, void, appendArray, (, Object, [, ], array, ,, Description, description, ), {]
[describeTo, (, description, ), ;, }, }, private, void, appendArray, (, Object, [, ], array, ,, Description, description, ), {]
[;, }, }, private, void, appendArray, (, Object, [, ], array, ,, Description, description, ), {, description, ., appendText, (]
[[, ], array, ,, Description, description, ), {, description, ., appendText, (, "[", ), ;, for, (, int, i, =]
[array, ,, Description, description, ), {, description, ., appendText, (, "[", ), ;, for, (, int, i, =, 0, ;]
[array, ,, Description, description, ), {, description, ., appendText, (, "[", ), ;, for, (, int, i, =, 0, ;]
[Description, description, ), {, description, ., appendText, (, "[", ), ;, for, (, int, i, =, 0, ;, i, <]
[Description, description, ), {, description, ., appendText, (, "[", ), ;, for, (, int, i, =, 0, ;, i, <]
[description, ., appendText, (, "[", ), ;, for, (, int, i, =, 0, ;, i, <, array, ., length, ;]
[description, ., appendText, (, "[", ), ;, for, (, int, i, =, 0, ;, i, <, array, ., length, ;]
["[", ), ;, for, (, int, i, =, 0, ;, i, <, array, ., length, ;, i, ++, ), {]
["[", ), ;, for, (, int, i, =, 0, ;, i, <, array, ., length, ;, i, ++, ), {]
[for, (, int, i, =, 0, ;, i, <, array, ., length, ;, i, ++, ), {, new, Equals, (]
[for, (, int, i, =, 0, ;, i, <, array, ., length, ;, i, ++, ), {, new, Equals, (]
[int, i, =, 0, ;, i, <, array, ., length, ;, i, ++, ), {, new, Equals, (, array, []
[<, array, ., length, ;, i, ++, ), {, new, Equals, (, array, [, i, ], ), ., describeTo, (]
[i, ++, ), {, new, Equals, (, array, [, i, ], ), ., describeTo, (, description, ), ;, if, (]
[i, ++, ), {, new, Equals, (, array, [, i, ], ), ., describeTo, (, description, ), ;, if, (]
[), {, new, Equals, (, array, [, i, ], ), ., describeTo, (, description, ), ;, if, (, i, !=]
[), {, new, Equals, (, array, [, i, ], ), ., describeTo, (, description, ), ;, if, (, i, !=]
[), {, new, Equals, (, array, [, i, ], ), ., describeTo, (, description, ), ;, if, (, i, !=]
[(, array, [, i, ], ), ., describeTo, (, description, ), ;, if, (, i, !=, array, ., length, -]
[i, ], ), ., describeTo, (, description, ), ;, if, (, i, !=, array, ., length, -, 1, ), {]
[i, ], ), ., describeTo, (, description, ), ;, if, (, i, !=, array, ., length, -, 1, ), {]
[describeTo, (, description, ), ;, if, (, i, !=, array, ., length, -, 1, ), {, description, ., appendText, (]
[if, (, i, !=, array, ., length, -, 1, ), {, description, ., appendText, (, ", ", ), ;, }, }]
[if, (, i, !=, array, ., length, -, 1, ), {, description, ., appendText, (, ", ", ), ;, }, }]
[array, ., length, -, 1, ), {, description, ., appendText, (, ", ", ), ;, }, }, description, ., appendText, (]
[., appendText, (, "]", ), ;, }, public, static, Object, [, ], createObjectArray, (, Object, array, ), {, if, (]
[., appendText, (, "]", ), ;, }, public, static, Object, [, ], createObjectArray, (, Object, array, ), {, if, (]
[static, Object, [, ], createObjectArray, (, Object, array, ), {, if, (, array, instanceof, Object, [, ], ), {, return]
[(, Object, array, ), {, if, (, array, instanceof, Object, [, ], ), {, return, (, Object, [, ], )]
[instanceof, Object, [, ], ), {, return, (, Object, [, ], ), array, ;, }, Object, [, ], result, =]
[], ), {, return, (, Object, [, ], ), array, ;, }, Object, [, ], result, =, new, Object, []
[], ), {, return, (, Object, [, ], ), array, ;, }, Object, [, ], result, =, new, Object, []
[(, Object, [, ], ), array, ;, }, Object, [, ], result, =, new, Object, [, Array, ., getLength, (]
[[, ], result, =, new, Object, [, Array, ., getLength, (, array, ), ], ;, for, (, int, i, =]
[result, =, new, Object, [, Array, ., getLength, (, array, ), ], ;, for, (, int, i, =, 0, ;]
[result, =, new, Object, [, Array, ., getLength, (, array, ), ], ;, for, (, int, i, =, 0, ;]
[new, Object, [, Array, ., getLength, (, array, ), ], ;, for, (, int, i, =, 0, ;, i, <]
[new, Object, [, Array, ., getLength, (, array, ), ], ;, for, (, int, i, =, 0, ;, i, <]
[., getLength, (, array, ), ], ;, for, (, int, i, =, 0, ;, i, <, Array, ., getLength, (]
[array, ), ], ;, for, (, int, i, =, 0, ;, i, <, Array, ., getLength, (, array, ), ;]
[array, ), ], ;, for, (, int, i, =, 0, ;, i, <, Array, ., getLength, (, array, ), ;]
[for, (, int, i, =, 0, ;, i, <, Array, ., getLength, (, array, ), ;, i, ++, ), {]
[for, (, int, i, =, 0, ;, i, <, Array, ., getLength, (, array, ), ;, i, ++, ), {]
[int, i, =, 0, ;, i, <, Array, ., getLength, (, array, ), ;, i, ++, ), {, result, []
[0, ;, i, <, Array, ., getLength, (, array, ), ;, i, ++, ), {, result, [, i, ], =]
[0, ;, i, <, Array, ., getLength, (, array, ), ;, i, ++, ), {, result, [, i, ], =]
[Array, ., getLength, (, array, ), ;, i, ++, ), {, result, [, i, ], =, Array, ., get, (]
[getLength, (, array, ), ;, i, ++, ), {, result, [, i, ], =, Array, ., get, (, array, ,]
[i, ++, ), {, result, [, i, ], =, Array, ., get, (, array, ,, i, ), ;, }, return]
