[,, int, row, ,, int, column, ,, boolean, selected, ,, RectangularShape, bar, ,, RectangleEdge, base, ), {, Paint, itemPaint, =]
[,, int, row, ,, int, column, ,, boolean, selected, ,, RectangularShape, bar, ,, RectangleEdge, base, ), {, Paint, itemPaint, =]
[int, column, ,, boolean, selected, ,, RectangularShape, bar, ,, RectangleEdge, base, ), {, Paint, itemPaint, =, renderer, ., getItemPaint, (]
[,, boolean, selected, ,, RectangularShape, bar, ,, RectangleEdge, base, ), {, Paint, itemPaint, =, renderer, ., getItemPaint, (, row, ,]
[selected, ,, RectangularShape, bar, ,, RectangleEdge, base, ), {, Paint, itemPaint, =, renderer, ., getItemPaint, (, row, ,, column, ,]
[base, ), {, Paint, itemPaint, =, renderer, ., getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =]
[base, ), {, Paint, itemPaint, =, renderer, ., getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =]
[getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, renderer, ., getGradientPaintTransformer, (, ), ;, if, (]
[getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, renderer, ., getGradientPaintTransformer, (, ), ;, if, (]
[getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, renderer, ., getGradientPaintTransformer, (, ), ;, if, (]
[row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, renderer, ., getGradientPaintTransformer, (, ), ;, if, (, t, !=]
[column, ,, selected, ), ;, GradientPaintTransformer, t, =, renderer, ., getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&]
[column, ,, selected, ), ;, GradientPaintTransformer, t, =, renderer, ., getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&]
[GradientPaintTransformer, t, =, renderer, ., getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {]
[=, renderer, ., getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =]
[=, renderer, ., getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =]
[(, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (]
[if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, )]
[t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,]
[itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }]
[itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }]
[{, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (]
[t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;]
[t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;]
[(, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (]
[bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (]
[bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (]
[;, g2, ., fill, (, bar, ), ;, if, (, renderer, ., isDrawBarOutline, (, ), ), {, Stroke, stroke, =]
[;, g2, ., fill, (, bar, ), ;, if, (, renderer, ., isDrawBarOutline, (, ), ), {, Stroke, stroke, =]
[(, bar, ), ;, if, (, renderer, ., isDrawBarOutline, (, ), ), {, Stroke, stroke, =, renderer, ., getItemOutlineStroke, (]
[), ;, if, (, renderer, ., isDrawBarOutline, (, ), ), {, Stroke, stroke, =, renderer, ., getItemOutlineStroke, (, row, ,]
[if, (, renderer, ., isDrawBarOutline, (, ), ), {, Stroke, stroke, =, renderer, ., getItemOutlineStroke, (, row, ,, column, ,]
[), ), {, Stroke, stroke, =, renderer, ., getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =]
[), ), {, Stroke, stroke, =, renderer, ., getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =]
[stroke, =, renderer, ., getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, renderer, ., getItemOutlinePaint, (]
[renderer, ., getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, renderer, ., getItemOutlinePaint, (, row, ,]
[getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, renderer, ., getItemOutlinePaint, (, row, ,, column, ,]
[,, selected, ), ;, Paint, paint, =, renderer, ., getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (]
[,, selected, ), ;, Paint, paint, =, renderer, ., getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (]
[,, selected, ), ;, Paint, paint, =, renderer, ., getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (]
[), ;, Paint, paint, =, renderer, ., getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=]
[Paint, paint, =, renderer, ., getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&]
[Paint, paint, =, renderer, ., getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&]
[=, renderer, ., getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=]
[getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {]
[getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {]
[column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (]
[), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;]
[), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;]
[stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (]
[&&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;]
[&&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;]
[), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (]
[,, int, column, ,, boolean, selected, ,, RectangularShape, bar, ,, RectangleEdge, base, ,, boolean, pegShadow, ), {, Paint, itemPaint, =]
[,, int, column, ,, boolean, selected, ,, RectangularShape, bar, ,, RectangleEdge, base, ,, boolean, pegShadow, ), {, Paint, itemPaint, =]
[boolean, selected, ,, RectangularShape, bar, ,, RectangleEdge, base, ,, boolean, pegShadow, ), {, Paint, itemPaint, =, renderer, ., getItemPaint, (]
[,, RectangularShape, bar, ,, RectangleEdge, base, ,, boolean, pegShadow, ), {, Paint, itemPaint, =, renderer, ., getItemPaint, (, row, ,]
[bar, ,, RectangleEdge, base, ,, boolean, pegShadow, ), {, Paint, itemPaint, =, renderer, ., getItemPaint, (, row, ,, column, ,]
[boolean, pegShadow, ), {, Paint, itemPaint, =, renderer, ., getItemPaint, (, row, ,, column, ,, selected, ), ;, if, (]
[boolean, pegShadow, ), {, Paint, itemPaint, =, renderer, ., getItemPaint, (, row, ,, column, ,, selected, ), ;, if, (]
[., getItemPaint, (, row, ,, column, ,, selected, ), ;, if, (, itemPaint, instanceof, Color, ), {, Color, c, =]
[row, ,, column, ,, selected, ), ;, if, (, itemPaint, instanceof, Color, ), {, Color, c, =, (, Color, )]
[selected, ), ;, if, (, itemPaint, instanceof, Color, ), {, Color, c, =, (, Color, ), itemPaint, ;, if, (]
[selected, ), ;, if, (, itemPaint, instanceof, Color, ), {, Color, c, =, (, Color, ), itemPaint, ;, if, (]
[selected, ), ;, if, (, itemPaint, instanceof, Color, ), {, Color, c, =, (, Color, ), itemPaint, ;, if, (]
[instanceof, Color, ), {, Color, c, =, (, Color, ), itemPaint, ;, if, (, c, ., getAlpha, (, ), ==]
[itemPaint, ;, if, (, c, ., getAlpha, (, ), ==, 0, ), {, return, ;, }, }, RectangularShape, shadow, =]
[if, (, c, ., getAlpha, (, ), ==, 0, ), {, return, ;, }, }, RectangularShape, shadow, =, createShadow, (]
[c, ., getAlpha, (, ), ==, 0, ), {, return, ;, }, }, RectangularShape, shadow, =, createShadow, (, bar, ,]
[c, ., getAlpha, (, ), ==, 0, ), {, return, ;, }, }, RectangularShape, shadow, =, createShadow, (, bar, ,]
[0, ), {, return, ;, }, }, RectangularShape, shadow, =, createShadow, (, bar, ,, renderer, ., getShadowXOffset, (, ), ,]
[0, ), {, return, ;, }, }, RectangularShape, shadow, =, createShadow, (, bar, ,, renderer, ., getShadowXOffset, (, ), ,]
[}, RectangularShape, shadow, =, createShadow, (, bar, ,, renderer, ., getShadowXOffset, (, ), ,, renderer, ., getShadowYOffset, (, ), ,]
[shadow, =, createShadow, (, bar, ,, renderer, ., getShadowXOffset, (, ), ,, renderer, ., getShadowYOffset, (, ), ,, base, ,]
[(, bar, ,, renderer, ., getShadowXOffset, (, ), ,, renderer, ., getShadowYOffset, (, ), ,, base, ,, pegShadow, ), ;]
[(, bar, ,, renderer, ., getShadowXOffset, (, ), ,, renderer, ., getShadowYOffset, (, ), ,, base, ,, pegShadow, ), ;]
[., getShadowXOffset, (, ), ,, renderer, ., getShadowYOffset, (, ), ,, base, ,, pegShadow, ), ;, g2, ., setPaint, (]
[., getShadowXOffset, (, ), ,, renderer, ., getShadowYOffset, (, ), ,, base, ,, pegShadow, ), ;, g2, ., setPaint, (]
[getShadowYOffset, (, ), ,, base, ,, pegShadow, ), ;, g2, ., setPaint, (, renderer, ., getShadowPaint, (, ), ), ;]
[getShadowYOffset, (, ), ,, base, ,, pegShadow, ), ;, g2, ., setPaint, (, renderer, ., getShadowPaint, (, ), ), ;]
[base, ,, pegShadow, ), ;, g2, ., setPaint, (, renderer, ., getShadowPaint, (, ), ), ;, g2, ., fill, (]
[(, RectangularShape, bar, ,, double, xOffset, ,, double, yOffset, ,, RectangleEdge, base, ,, boolean, pegShadow, ), {, double, x0, =]
[(, RectangularShape, bar, ,, double, xOffset, ,, double, yOffset, ,, RectangleEdge, base, ,, boolean, pegShadow, ), {, double, x0, =]
[,, RectangleEdge, base, ,, boolean, pegShadow, ), {, double, x0, =, bar, ., getMinX, (, ), ;, double, x1, =]
[,, RectangleEdge, base, ,, boolean, pegShadow, ), {, double, x0, =, bar, ., getMinX, (, ), ;, double, x1, =]
[x0, =, bar, ., getMinX, (, ), ;, double, x1, =, bar, ., getMaxX, (, ), ;, double, y0, =]
[x0, =, bar, ., getMinX, (, ), ;, double, x1, =, bar, ., getMaxX, (, ), ;, double, y0, =]
[x1, =, bar, ., getMaxX, (, ), ;, double, y0, =, bar, ., getMinY, (, ), ;, double, y1, =]
[x1, =, bar, ., getMaxX, (, ), ;, double, y0, =, bar, ., getMinY, (, ), ;, double, y1, =]
[double, y0, =, bar, ., getMinY, (, ), ;, double, y1, =, bar, ., getMaxY, (, ), ;, if, (]
[double, y0, =, bar, ., getMinY, (, ), ;, double, y1, =, bar, ., getMaxY, (, ), ;, if, (]
[=, bar, ., getMinY, (, ), ;, double, y1, =, bar, ., getMaxY, (, ), ;, if, (, base, ==]
[=, bar, ., getMinY, (, ), ;, double, y1, =, bar, ., getMaxY, (, ), ;, if, (, base, ==]
[), ;, double, y1, =, bar, ., getMaxY, (, ), ;, if, (, base, ==, RectangleEdge, ., TOP, ), {]
[double, y1, =, bar, ., getMaxY, (, ), ;, if, (, base, ==, RectangleEdge, ., TOP, ), {, x0, +=]
[=, bar, ., getMaxY, (, ), ;, if, (, base, ==, RectangleEdge, ., TOP, ), {, x0, +=, xOffset, ;]
[., getMaxY, (, ), ;, if, (, base, ==, RectangleEdge, ., TOP, ), {, x0, +=, xOffset, ;, x1, +=]
[;, if, (, base, ==, RectangleEdge, ., TOP, ), {, x0, +=, xOffset, ;, x1, +=, xOffset, ;, if, (]
[if, (, base, ==, RectangleEdge, ., TOP, ), {, x0, +=, xOffset, ;, x1, +=, xOffset, ;, if, (, !]
[==, RectangleEdge, ., TOP, ), {, x0, +=, xOffset, ;, x1, +=, xOffset, ;, if, (, !, pegShadow, ), {]
[., TOP, ), {, x0, +=, xOffset, ;, x1, +=, xOffset, ;, if, (, !, pegShadow, ), {, y0, +=]
[{, x0, +=, xOffset, ;, x1, +=, xOffset, ;, if, (, !, pegShadow, ), {, y0, +=, yOffset, ;, }]
[+=, xOffset, ;, x1, +=, xOffset, ;, if, (, !, pegShadow, ), {, y0, +=, yOffset, ;, }, y1, +=]
[;, if, (, !, pegShadow, ), {, y0, +=, yOffset, ;, }, y1, +=, yOffset, ;, }, else, if, (]
[;, if, (, !, pegShadow, ), {, y0, +=, yOffset, ;, }, y1, +=, yOffset, ;, }, else, if, (]
[(, !, pegShadow, ), {, y0, +=, yOffset, ;, }, y1, +=, yOffset, ;, }, else, if, (, base, ==]
[(, !, pegShadow, ), {, y0, +=, yOffset, ;, }, y1, +=, yOffset, ;, }, else, if, (, base, ==]
[y0, +=, yOffset, ;, }, y1, +=, yOffset, ;, }, else, if, (, base, ==, RectangleEdge, ., BOTTOM, ), {]
[yOffset, ;, }, y1, +=, yOffset, ;, }, else, if, (, base, ==, RectangleEdge, ., BOTTOM, ), {, x0, +=]
[}, y1, +=, yOffset, ;, }, else, if, (, base, ==, RectangleEdge, ., BOTTOM, ), {, x0, +=, xOffset, ;]
[+=, yOffset, ;, }, else, if, (, base, ==, RectangleEdge, ., BOTTOM, ), {, x0, +=, xOffset, ;, x1, +=]
[;, }, else, if, (, base, ==, RectangleEdge, ., BOTTOM, ), {, x0, +=, xOffset, ;, x1, +=, xOffset, ;]
[else, if, (, base, ==, RectangleEdge, ., BOTTOM, ), {, x0, +=, xOffset, ;, x1, +=, xOffset, ;, y0, +=]
[==, RectangleEdge, ., BOTTOM, ), {, x0, +=, xOffset, ;, x1, +=, xOffset, ;, y0, +=, yOffset, ;, if, (]
[RectangleEdge, ., BOTTOM, ), {, x0, +=, xOffset, ;, x1, +=, xOffset, ;, y0, +=, yOffset, ;, if, (, !]
[), {, x0, +=, xOffset, ;, x1, +=, xOffset, ;, y0, +=, yOffset, ;, if, (, !, pegShadow, ), {]
[x0, +=, xOffset, ;, x1, +=, xOffset, ;, y0, +=, yOffset, ;, if, (, !, pegShadow, ), {, y1, +=]
[;, y0, +=, yOffset, ;, if, (, !, pegShadow, ), {, y1, +=, yOffset, ;, }, }, else, if, (]
[;, y0, +=, yOffset, ;, if, (, !, pegShadow, ), {, y1, +=, yOffset, ;, }, }, else, if, (]
[+=, yOffset, ;, if, (, !, pegShadow, ), {, y1, +=, yOffset, ;, }, }, else, if, (, base, ==]
[+=, yOffset, ;, if, (, !, pegShadow, ), {, y1, +=, yOffset, ;, }, }, else, if, (, base, ==]
[), {, y1, +=, yOffset, ;, }, }, else, if, (, base, ==, RectangleEdge, ., LEFT, ), {, if, (]
[{, y1, +=, yOffset, ;, }, }, else, if, (, base, ==, RectangleEdge, ., LEFT, ), {, if, (, !]
[yOffset, ;, }, }, else, if, (, base, ==, RectangleEdge, ., LEFT, ), {, if, (, !, pegShadow, ), {]
[}, }, else, if, (, base, ==, RectangleEdge, ., LEFT, ), {, if, (, !, pegShadow, ), {, x0, +=]
[if, (, base, ==, RectangleEdge, ., LEFT, ), {, if, (, !, pegShadow, ), {, x0, +=, xOffset, ;, }]
[base, ==, RectangleEdge, ., LEFT, ), {, if, (, !, pegShadow, ), {, x0, +=, xOffset, ;, }, x1, +=]
[RectangleEdge, ., LEFT, ), {, if, (, !, pegShadow, ), {, x0, +=, xOffset, ;, }, x1, +=, xOffset, ;]
[LEFT, ), {, if, (, !, pegShadow, ), {, x0, +=, xOffset, ;, }, x1, +=, xOffset, ;, y0, +=]
[{, if, (, !, pegShadow, ), {, x0, +=, xOffset, ;, }, x1, +=, xOffset, ;, y0, +=, yOffset, ;]
[(, !, pegShadow, ), {, x0, +=, xOffset, ;, }, x1, +=, xOffset, ;, y0, +=, yOffset, ;, y1, +=]
[+=, xOffset, ;, }, x1, +=, xOffset, ;, y0, +=, yOffset, ;, y1, +=, yOffset, ;, }, else, if, (]
[+=, xOffset, ;, }, x1, +=, xOffset, ;, y0, +=, yOffset, ;, y1, +=, yOffset, ;, }, else, if, (]
[;, }, x1, +=, xOffset, ;, y0, +=, yOffset, ;, y1, +=, yOffset, ;, }, else, if, (, base, ==]
[;, }, x1, +=, xOffset, ;, y0, +=, yOffset, ;, y1, +=, yOffset, ;, }, else, if, (, base, ==]
[;, y0, +=, yOffset, ;, y1, +=, yOffset, ;, }, else, if, (, base, ==, RectangleEdge, ., RIGHT, ), {]
[+=, yOffset, ;, y1, +=, yOffset, ;, }, else, if, (, base, ==, RectangleEdge, ., RIGHT, ), {, x0, +=]
[+=, yOffset, ;, }, else, if, (, base, ==, RectangleEdge, ., RIGHT, ), {, x0, +=, xOffset, ;, if, (]
[yOffset, ;, }, else, if, (, base, ==, RectangleEdge, ., RIGHT, ), {, x0, +=, xOffset, ;, if, (, !]
[else, if, (, base, ==, RectangleEdge, ., RIGHT, ), {, x0, +=, xOffset, ;, if, (, !, pegShadow, ), {]
[(, base, ==, RectangleEdge, ., RIGHT, ), {, x0, +=, xOffset, ;, if, (, !, pegShadow, ), {, x1, +=]
[RectangleEdge, ., RIGHT, ), {, x0, +=, xOffset, ;, if, (, !, pegShadow, ), {, x1, +=, xOffset, ;, }]
[RIGHT, ), {, x0, +=, xOffset, ;, if, (, !, pegShadow, ), {, x1, +=, xOffset, ;, }, y0, +=]
[{, x0, +=, xOffset, ;, if, (, !, pegShadow, ), {, x1, +=, xOffset, ;, }, y0, +=, yOffset, ;]
[+=, xOffset, ;, if, (, !, pegShadow, ), {, x1, +=, xOffset, ;, }, y0, +=, yOffset, ;, y1, +=]
[(, !, pegShadow, ), {, x1, +=, xOffset, ;, }, y0, +=, yOffset, ;, y1, +=, yOffset, ;, }, return]
[x1, +=, xOffset, ;, }, y0, +=, yOffset, ;, y1, +=, yOffset, ;, }, return, new, Rectangle2D, ., Double, (]
[xOffset, ;, }, y0, +=, yOffset, ;, y1, +=, yOffset, ;, }, return, new, Rectangle2D, ., Double, (, x0, ,]
[}, y0, +=, yOffset, ;, y1, +=, yOffset, ;, }, return, new, Rectangle2D, ., Double, (, x0, ,, y0, ,]
[y0, +=, yOffset, ;, y1, +=, yOffset, ;, }, return, new, Rectangle2D, ., Double, (, x0, ,, y0, ,, (]
[y0, +=, yOffset, ;, y1, +=, yOffset, ;, }, return, new, Rectangle2D, ., Double, (, x0, ,, y0, ,, (]
[yOffset, ;, y1, +=, yOffset, ;, }, return, new, Rectangle2D, ., Double, (, x0, ,, y0, ,, (, x1, -]
[+=, yOffset, ;, }, return, new, Rectangle2D, ., Double, (, x0, ,, y0, ,, (, x1, -, x0, ), ,]
[yOffset, ;, }, return, new, Rectangle2D, ., Double, (, x0, ,, y0, ,, (, x1, -, x0, ), ,, (]
[yOffset, ;, }, return, new, Rectangle2D, ., Double, (, x0, ,, y0, ,, (, x1, -, x0, ), ,, (]
[}, return, new, Rectangle2D, ., Double, (, x0, ,, y0, ,, (, x1, -, x0, ), ,, (, y1, -]
[), ,, (, y1, -, y0, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ,, (, y1, -, y0, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[(, y1, -, y0, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, StandardBarPainter, ), ), {, return]
[{, return, true, ;, }, if, (, !, (, obj, instanceof, StandardBarPainter, ), ), {, return, false, ;, }, return]
[), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =]
[return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =, 37, ;, return]
