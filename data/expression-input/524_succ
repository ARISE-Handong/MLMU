[;, private, static, final, double, FACT, [, ], =, new, double, [, ], {, +, 1.0d, ,, +, 1.0d, ,]
[;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {, {, 2.0, ,, 0.0, }, ,, {, 0.6666666269302368]
[;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {, {, 2.0, ,, 0.0, }, ,, {, 0.6666666269302368]
[,, +, 1.0d, ,, +, 2.0d, ,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +]
[,, +, 1.0d, ,, +, 2.0d, ,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +]
[,, +, 2.0d, ,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +]
[,, +, 2.0d, ,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +]
[,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +]
[,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +]
[,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +]
[,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +]
[,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +]
[,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +]
[,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +]
[,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +]
[,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +]
[,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +]
[,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +]
[,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +]
[,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +]
[,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +]
[,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +]
[,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +]
[,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +]
[,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +]
[,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,, +]
[,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,, +]
[,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,, +, 6402373705728000.0d, ,, +]
[,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,, +, 6402373705728000.0d, ,, +]
[,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,, +, 6402373705728000.0d, ,, +, 121645100408832000.0d, ,, }]
[,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,, +, 6402373705728000.0d, ,, +, 121645100408832000.0d, ,, }]
[,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,, +, 6402373705728000.0d, ,, +, 121645100408832000.0d, ,, }, ;, private, static]
[,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,, +, 6402373705728000.0d, ,, +, 121645100408832000.0d, ,, }, ;, private, static]
[,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,, +, 6402373705728000.0d, ,, +, 121645100408832000.0d, ,, }, ;, private, static, final, double, LN_SPLIT_COEF]
[,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,, +, 6402373705728000.0d, ,, +, 121645100408832000.0d, ,, }, ;, private, static, final, double, LN_SPLIT_COEF]
[,, +, 355687428096000.0d, ,, +, 6402373705728000.0d, ,, +, 121645100408832000.0d, ,, }, ;, private, static, final, double, LN_SPLIT_COEF, [, ], []
[,, +, 355687428096000.0d, ,, +, 6402373705728000.0d, ,, +, 121645100408832000.0d, ,, }, ;, private, static, final, double, LN_SPLIT_COEF, [, ], []
[,, +, 6402373705728000.0d, ,, +, 121645100408832000.0d, ,, }, ;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {]
[,, +, 6402373705728000.0d, ,, +, 121645100408832000.0d, ,, }, ;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {]
[,, +, 121645100408832000.0d, ,, }, ;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {, {, 2.0, ,]
[,, +, 121645100408832000.0d, ,, }, ;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {, {, 2.0, ,]
[,, }, ;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {, {, 2.0, ,, 0.0, }, ,]
[,, }, ;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {, {, 2.0, ,, 0.0, }, ,]
[;, private, static, final, String, TABLE_START_DECL, =, "    {", ;, private, static, final, String, TABLE_END_DECL, =, "    };", ;, private, FastMathCalc, (]
[,, {, 0.6666666269302368, ,, 3.9736429850260626E-8, }, ,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {]
[,, 0.0, }, ,, {, 0.6666666269302368, ,, 3.9736429850260626E-8, }, ,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8]
[}, ,, {, 0.6666666269302368, ,, 3.9736429850260626E-8, }, ,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,]
[,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {]
[,, 3.9736429850260626E-8, }, ,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8]
[}, ,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,]
[,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {]
[,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8]
[}, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,]
[,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {]
[,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9]
[}, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,]
[,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {]
[,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9]
[}, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,]
[,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {]
[,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8]
[}, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,]
[,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {]
[,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9]
[}, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,]
[,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {]
[,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8]
[}, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,]
[,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {]
[,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8]
[}, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,]
[,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {]
[,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9]
[}, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,]
[,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,, {]
[,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8]
[}, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,]
[,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,, {, 0.030589580535888672, ,, 1.2958646899018938E-9, }, ,, {]
[,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,, {, 0.030589580535888672, ,, 1.2958646899018938E-9]
[}, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,, {, 0.030589580535888672, ,, 1.2958646899018938E-9, }, ,]
[,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,, {, 0.030589580535888672, ,, 1.2958646899018938E-9, }, ,, {, 0.14982303977012634, ,, 1.225743062930824E-8, }, ,, }]
[,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,, {, 0.030589580535888672, ,, 1.2958646899018938E-9, }, ,, {, 0.14982303977012634, ,, 1.225743062930824E-8]
[}, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,, {, 0.030589580535888672, ,, 1.2958646899018938E-9, }, ,, {, 0.14982303977012634, ,, 1.225743062930824E-8, }, ,]
[,, {, 0.030589580535888672, ,, 1.2958646899018938E-9, }, ,, {, 0.14982303977012634, ,, 1.225743062930824E-8, }, ,, }, ;, private, static, final, String, TABLE_START_DECL]
[,, 1.176342548272881E-8, }, ,, {, 0.030589580535888672, ,, 1.2958646899018938E-9, }, ,, {, 0.14982303977012634, ,, 1.225743062930824E-8, }, ,, }, ;, private, static]
[}, ,, {, 0.030589580535888672, ,, 1.2958646899018938E-9, }, ,, {, 0.14982303977012634, ,, 1.225743062930824E-8, }, ,, }, ;, private, static, final, String]
[,, {, 0.14982303977012634, ,, 1.225743062930824E-8, }, ,, }, ;, private, static, final, String, TABLE_START_DECL, =, "    {", ;, private, static, final]
[,, 1.2958646899018938E-9, }, ,, {, 0.14982303977012634, ,, 1.225743062930824E-8, }, ,, }, ;, private, static, final, String, TABLE_START_DECL, =, "    {", ;]
[}, ,, {, 0.14982303977012634, ,, 1.225743062930824E-8, }, ,, }, ;, private, static, final, String, TABLE_START_DECL, =, "    {", ;, private, static]
[,, }, ;, private, static, final, String, TABLE_START_DECL, =, "    {", ;, private, static, final, String, TABLE_END_DECL, =, "    };", ;, private]
[,, 1.225743062930824E-8, }, ,, }, ;, private, static, final, String, TABLE_START_DECL, =, "    {", ;, private, static, final, String, TABLE_END_DECL, =]
[}, ,, }, ;, private, static, final, String, TABLE_START_DECL, =, "    {", ;, private, static, final, String, TABLE_END_DECL, =, "    };", ;]
[;, private, static, final, String, TABLE_END_DECL, =, "    };", ;, private, FastMathCalc, (, ), {, }, @, SuppressWarnings, (, "unused", )]
[;, private, FastMathCalc, (, ), {, }, @, SuppressWarnings, (, "unused", ), private, static, void, buildSinCosTables, (, double, [, ]]
[private, static, void, buildSinCosTables, (, double, [, ], SINE_TABLE_A, ,, double, [, ], SINE_TABLE_B, ,, double, [, ], COSINE_TABLE_A, ,]
[), private, static, void, buildSinCosTables, (, double, [, ], SINE_TABLE_A, ,, double, [, ], SINE_TABLE_B, ,, double, [, ], COSINE_TABLE_A]
[;, for, (, int, i, =, 0, ;, i, <, 7, ;, i, ++, ), {, double, x, =, i]
[], ;, for, (, int, i, =, 0, ;, i, <, 7, ;, i, ++, ), {, double, x, =]
[;, i, <, 7, ;, i, ++, ), {, double, x, =, i, /, 8.0, ;, slowSin, (, x, ,]
[;, i, ++, ), {, double, x, =, i, /, 8.0, ;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A]
[<, 7, ;, i, ++, ), {, double, x, =, i, /, 8.0, ;, slowSin, (, x, ,, result, )]
[;, i, ++, ), {, double, x, =, i, /, 8.0, ;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A]
[), {, double, x, =, i, /, 8.0, ;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A, [, i, ]]
[++, ), {, double, x, =, i, /, 8.0, ;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A, [, i]
[;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, []
[/, 8.0, ;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, []
[;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ]]
[,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result]
[), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1]
[=, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, slowCos, (, x, ,]
[[, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, slowCos]
[], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, slowCos, (, x]
[;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, []
[[, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, slowCos, (, x, ,, result, )]
[], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A]
[=, result, [, 1, ], ;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, []
[[, i, ], =, result, [, 1, ], ;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, [, i, ]]
[], =, result, [, 1, ], ;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result]
[;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, []
[[, 1, ], ;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ]]
[], ;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B]
[;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ]]
[,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result]
[), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1]
[=, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, for, (, int]
[[, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }]
[], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, for, (]
[;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, for, (, int, i, =, 7, ;, i]
[[, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, for, (, int, i, =]
[], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, for, (, int, i, =, 7, ;]
[=, result, [, 1, ], ;, }, for, (, int, i, =, 7, ;, i, <, SINE_TABLE_LEN, ;, i, ++]
[[, i, ], =, result, [, 1, ], ;, }, for, (, int, i, =, 7, ;, i, <, SINE_TABLE_LEN]
[], =, result, [, 1, ], ;, }, for, (, int, i, =, 7, ;, i, <, SINE_TABLE_LEN, ;, i]
[;, }, for, (, int, i, =, 7, ;, i, <, SINE_TABLE_LEN, ;, i, ++, ), {, double, xs, []
[[, 1, ], ;, }, for, (, int, i, =, 7, ;, i, <, SINE_TABLE_LEN, ;, i, ++, ), {]
[], ;, }, for, (, int, i, =, 7, ;, i, <, SINE_TABLE_LEN, ;, i, ++, ), {, double, xs]
[;, i, <, SINE_TABLE_LEN, ;, i, ++, ), {, double, xs, [, ], =, new, double, [, 2, ], ;]
[;, i, ++, ), {, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys, [, ]]
[<, SINE_TABLE_LEN, ;, i, ++, ), {, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys]
[;, i, ++, ), {, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys, [, ]]
[), {, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys, [, ], =, new, double]
[++, ), {, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys, [, ], =, new]
[;, double, ys, [, ], =, new, double, [, 2, ], ;, double, as, [, ], =, new, double, []
[], ;, double, ys, [, ], =, new, double, [, 2, ], ;, double, as, [, ], =, new, double]
[;, double, as, [, ], =, new, double, [, 2, ], ;, double, bs, [, ], =, new, double, []
[], ;, double, as, [, ], =, new, double, [, 2, ], ;, double, bs, [, ], =, new, double]
[;, double, bs, [, ], =, new, double, [, 2, ], ;, double, temps, [, ], =, new, double, []
[], ;, double, bs, [, ], =, new, double, [, 2, ], ;, double, temps, [, ], =, new, double]
[;, double, temps, [, ], =, new, double, [, 2, ], ;, if, (, (, i, &, 1, ), ==]
[], ;, double, temps, [, ], =, new, double, [, 2, ], ;, if, (, (, i, &, 1, )]
[;, if, (, (, i, &, 1, ), ==, 0, ), {, xs, [, 0, ], =, SINE_TABLE_A, [, i]
[], ;, if, (, (, i, &, 1, ), ==, 0, ), {, xs, [, 0, ], =, SINE_TABLE_A, []
[), {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B]
[==, 0, ), {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ]]
[), ==, 0, ), {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1]
[&, 1, ), ==, 0, ), {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs]
[), ==, 0, ), {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1]
[), {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B]
[=, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;]
[[, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /]
[], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ]]
[;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, []
[[, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, []
[], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A]
[/, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ]]
[], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A]
[=, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;]
[[, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /]
[], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ]]
[;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, []
[[, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, []
[], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B]
[/, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ]]
[], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B]
[=, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;]
[[, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /]
[], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ]]
[;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,, result]
[[, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (]
[], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,]
[/, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (, xs, ,]
[], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,]
[=, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, [, i]
[[, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,, result, ), ;]
[], =, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, []
[;, splitMult, (, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], *]
[[, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =]
[], ;, splitMult, (, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ]]
[/, 2, ], ;, splitMult, (, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, []
[], ;, splitMult, (, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ]]
[;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ], =, result, []
[,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, []
[,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ]]
[), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ], =, result]
[=, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], *, 2.0, ;]
[[, i, ], =, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ]]
[], =, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], *, 2.0]
[;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], *, 2.0, ;, splitMult, (, ys, ,, ys, ,, as]
[*, 2.0, ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], *, 2.0, ;, splitMult, (, ys, ,, ys]
[[, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], *, 2.0, ;, splitMult, (]
[], *, 2.0, ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], *, 2.0, ;, splitMult, (, ys, ,]
[;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], *, 2.0, ;, splitMult, (, ys, ,, ys, ,, as]
[=, result, [, 1, ], *, 2.0, ;, splitMult, (, ys, ,, ys, ,, as, ), ;, splitMult, (, xs]
[[, i, ], =, result, [, 1, ], *, 2.0, ;, splitMult, (, ys, ,, ys, ,, as, ), ;]
[], =, result, [, 1, ], *, 2.0, ;, splitMult, (, ys, ,, ys, ,, as, ), ;, splitMult, (]
[;, splitMult, (, ys, ,, ys, ,, as, ), ;, splitMult, (, xs, ,, xs, ,, temps, ), ;, temps]
[*, 2.0, ;, splitMult, (, ys, ,, ys, ,, as, ), ;, splitMult, (, xs, ,, xs, ,, temps, )]
[[, 1, ], *, 2.0, ;, splitMult, (, ys, ,, ys, ,, as, ), ;, splitMult, (, xs, ,, xs]
[], *, 2.0, ;, splitMult, (, ys, ,, ys, ,, as, ), ;, splitMult, (, xs, ,, xs, ,, temps]
[;, splitMult, (, ys, ,, ys, ,, as, ), ;, splitMult, (, xs, ,, xs, ,, temps, ), ;, temps]
[;, splitMult, (, xs, ,, xs, ,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ]]
[,, ys, ,, as, ), ;, splitMult, (, xs, ,, xs, ,, temps, ), ;, temps, [, 0, ], =]
[,, as, ), ;, splitMult, (, xs, ,, xs, ,, temps, ), ;, temps, [, 0, ], =, -, temps]
[), ;, splitMult, (, xs, ,, xs, ,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0]
[;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, []
[,, xs, ,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1]
[,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =]
[), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps]
[=, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (]
[[, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ]]
[], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd]
[;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, as, ,, temps, ,, result, )]
[;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, as, ,, temps, ,, result, )]
[[, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, as, ,, temps]
[], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, as, ,, temps, ,, result]
[=, -, temps, [, 1, ], ;, splitAdd, (, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ]]
[[, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A]
[], =, -, temps, [, 1, ], ;, splitAdd, (, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i]
[;, splitAdd, (, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[;, splitAdd, (, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[[, 1, ], ;, splitAdd, (, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, []
[], ;, splitAdd, (, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ]]
[;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ]]
[,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ]]
[,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result]
[), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1]
[=, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, else, {, xs]
[[, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }]
[], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, else, {]
[;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, else, {, xs, [, 0, ], =, SINE_TABLE_A]
[[, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, else, {, xs, [, 0]
[], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, else, {, xs, [, 0, ], =]
[=, result, [, 1, ], ;, }, else, {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ]]
[[, i, ], =, result, [, 1, ], ;, }, else, {, xs, [, 0, ], =, SINE_TABLE_A, [, i]
[], =, result, [, 1, ], ;, }, else, {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2]
[;, }, else, {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ]]
[[, 1, ], ;, }, else, {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs]
[], ;, }, else, {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1]
[=, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;]
[[, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /]
[], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ]]
[;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, []
[[, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, []
[], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A]
[/, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ]]
[], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A]
[=, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;]
[[, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /]
[], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ]]
[;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, []
[[, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, []
[], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B]
[/, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ]]
[], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B]
[=, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;]
[[, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /]
[], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ]]
[;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, []
[[, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, []
[], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A]
[/, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ]]
[], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A]
[=, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1]
[[, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, [, i, /]
[], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, +]
[;, as, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, [, 1, ], =]
[[, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;]
[], ;, as, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, [, 1, ]]
[/, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, []
[], ;, as, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, [, 1, ]]
[=, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2]
[[, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, []
[], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, [, i, /]
[;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, [, 0, ], =]
[[, i, /, 2, +, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1]
[], ;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, [, 0, ]]
[+, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, []
[/, 2, +, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;]
[+, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, []
[], ;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, [, 0, ]]
[=, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2]
[[, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, []
[], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /]
[;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, [, 1, ], =]
[[, i, /, 2, +, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1]
[], ;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, [, 1, ]]
[+, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, []
[/, 2, +, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;]
[+, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, []
[], ;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, [, 1, ]]
[=, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2]
[[, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, []
[], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /]
[;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;, splitMult, (, xs, ,, bs]
[[, i, /, 2, +, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, +, 1]
[], ;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;, splitMult, (, xs, ,]
[+, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;, splitMult, (]
[/, 2, +, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;]
[+, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;, splitMult, (]
[], ;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;, splitMult, (, xs, ,]
[=, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;, splitMult, (, xs, ,, bs, ,, temps, ), ;, splitMult]
[[, 1, ], =, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;, splitMult, (, xs, ,, bs, ,, temps]
[], =, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;, splitMult, (, xs, ,, bs, ,, temps, ), ;]
[;, splitMult, (, xs, ,, bs, ,, temps, ), ;, splitMult, (, ys, ,, as, ,, result, ), ;, splitAdd]
[[, i, /, 2, +, 1, ], ;, splitMult, (, xs, ,, bs, ,, temps, ), ;, splitMult, (, ys]
[], ;, splitMult, (, xs, ,, bs, ,, temps, ), ;, splitMult, (, ys, ,, as, ,, result, ), ;]
[+, 1, ], ;, splitMult, (, xs, ,, bs, ,, temps, ), ;, splitMult, (, ys, ,, as, ,, result]
[/, 2, +, 1, ], ;, splitMult, (, xs, ,, bs, ,, temps, ), ;, splitMult, (, ys, ,, as]
[+, 1, ], ;, splitMult, (, xs, ,, bs, ,, temps, ), ;, splitMult, (, ys, ,, as, ,, result]
[], ;, splitMult, (, xs, ,, bs, ,, temps, ), ;, splitMult, (, ys, ,, as, ,, result, ), ;]
[;, splitMult, (, ys, ,, as, ,, result, ), ;, splitAdd, (, result, ,, temps, ,, result, ), ;, SINE_TABLE_A]
[,, bs, ,, temps, ), ;, splitMult, (, ys, ,, as, ,, result, ), ;, splitAdd, (, result, ,, temps]
[,, temps, ), ;, splitMult, (, ys, ,, as, ,, result, ), ;, splitAdd, (, result, ,, temps, ,, result]
[), ;, splitMult, (, ys, ,, as, ,, result, ), ;, splitAdd, (, result, ,, temps, ,, result, ), ;]
[;, splitAdd, (, result, ,, temps, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[,, as, ,, result, ), ;, splitAdd, (, result, ,, temps, ,, result, ), ;, SINE_TABLE_A, [, i, ], =]
[,, result, ), ;, splitAdd, (, result, ,, temps, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, []
[), ;, splitAdd, (, result, ,, temps, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ]]
[;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ]]
[,, temps, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ]]
[,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result]
[), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1]
[=, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, splitMult, (, ys, ,]
[[, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, splitMult]
[], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, splitMult, (, ys]
[;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, splitMult, (, ys, ,, bs, ,, result, ), ;]
[[, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, splitMult, (, ys, ,, bs, ,]
[], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, splitMult, (, ys, ,, bs, ,, result, )]
[=, result, [, 1, ], ;, splitMult, (, ys, ,, bs, ,, result, ), ;, splitMult, (, xs, ,, as]
[[, i, ], =, result, [, 1, ], ;, splitMult, (, ys, ,, bs, ,, result, ), ;, splitMult, (]
[], =, result, [, 1, ], ;, splitMult, (, ys, ,, bs, ,, result, ), ;, splitMult, (, xs, ,]
[;, splitMult, (, ys, ,, bs, ,, result, ), ;, splitMult, (, xs, ,, as, ,, temps, ), ;, temps]
[[, 1, ], ;, splitMult, (, ys, ,, bs, ,, result, ), ;, splitMult, (, xs, ,, as, ,, temps]
[], ;, splitMult, (, ys, ,, bs, ,, result, ), ;, splitMult, (, xs, ,, as, ,, temps, ), ;]
[;, splitMult, (, xs, ,, as, ,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ]]
[,, bs, ,, result, ), ;, splitMult, (, xs, ,, as, ,, temps, ), ;, temps, [, 0, ], =]
[,, result, ), ;, splitMult, (, xs, ,, as, ,, temps, ), ;, temps, [, 0, ], =, -, temps]
[), ;, splitMult, (, xs, ,, as, ,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0]
[;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, []
[,, as, ,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1]
[,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =]
[), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps]
[=, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (]
[[, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ]]
[], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd]
[;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, result, ,, temps, ,, result, )]
[;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, result, ,, temps, ,, result, )]
[[, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, result, ,, temps]
[], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, result, ,, temps, ,, result]
[=, -, temps, [, 1, ], ;, splitAdd, (, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ]]
[[, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A]
[], =, -, temps, [, 1, ], ;, splitAdd, (, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i]
[;, splitAdd, (, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[;, splitAdd, (, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[[, 1, ], ;, splitAdd, (, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, []
[], ;, splitAdd, (, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ]]
[;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ]]
[,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ]]
[,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result]
[), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1]
[=, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, }, for, (]
[[, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }]
[], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, }, for]
[;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, }, for, (, int, i, =, 0, ;]
[[, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, }, for, (, int, i]
[], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, }, for, (, int, i, =, 0]
[=, result, [, 1, ], ;, }, }, for, (, int, i, =, 0, ;, i, <, SINE_TABLE_LEN, ;, i]
[[, i, ], =, result, [, 1, ], ;, }, }, for, (, int, i, =, 0, ;, i, <]
[], =, result, [, 1, ], ;, }, }, for, (, int, i, =, 0, ;, i, <, SINE_TABLE_LEN, ;]
[;, }, }, for, (, int, i, =, 0, ;, i, <, SINE_TABLE_LEN, ;, i, ++, ), {, double, xs]
[[, 1, ], ;, }, }, for, (, int, i, =, 0, ;, i, <, SINE_TABLE_LEN, ;, i, ++, )]
[], ;, }, }, for, (, int, i, =, 0, ;, i, <, SINE_TABLE_LEN, ;, i, ++, ), {, double]
[;, i, <, SINE_TABLE_LEN, ;, i, ++, ), {, double, xs, [, ], =, new, double, [, 2, ], ;]
[;, i, ++, ), {, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys, [, ]]
[<, SINE_TABLE_LEN, ;, i, ++, ), {, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys]
[;, i, ++, ), {, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys, [, ]]
[), {, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys, [, ], =, new, double]
[++, ), {, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys, [, ], =, new]
[;, double, ys, [, ], =, new, double, [, 2, ], ;, double, as, [, ], =, new, double, []
[], ;, double, ys, [, ], =, new, double, [, 2, ], ;, double, as, [, ], =, new, double]
[;, double, as, [, ], =, new, double, [, 2, ], ;, as, [, 0, ], =, COSINE_TABLE_A, [, i]
[], ;, double, as, [, ], =, new, double, [, 2, ], ;, as, [, 0, ], =, COSINE_TABLE_A, []
[;, as, [, 0, ], =, COSINE_TABLE_A, [, i, ], ;, as, [, 1, ], =, COSINE_TABLE_B, [, i, ]]
[], ;, as, [, 0, ], =, COSINE_TABLE_A, [, i, ], ;, as, [, 1, ], =, COSINE_TABLE_B, [, i]
[=, COSINE_TABLE_A, [, i, ], ;, as, [, 1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,]
[[, 0, ], =, COSINE_TABLE_A, [, i, ], ;, as, [, 1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal]
[], =, COSINE_TABLE_A, [, i, ], ;, as, [, 1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as]
[;, as, [, 1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,, ys, ), ;, xs, []
[[, i, ], ;, as, [, 1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,, ys, )]
[], ;, as, [, 1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,, ys, ), ;, xs]
[=, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,, ys, ), ;, xs, [, 0, ], =, SINE_TABLE_A, []
[[, 1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,, ys, ), ;, xs, [, 0, ]]
[], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,, ys, ), ;, xs, [, 0, ], =, SINE_TABLE_A]
[;, splitReciprocal, (, as, ,, ys, ), ;, xs, [, 0, ], =, SINE_TABLE_A, [, i, ], ;, xs, []
[[, i, ], ;, splitReciprocal, (, as, ,, ys, ), ;, xs, [, 0, ], =, SINE_TABLE_A, [, i, ]]
[], ;, splitReciprocal, (, as, ,, ys, ), ;, xs, [, 0, ], =, SINE_TABLE_A, [, i, ], ;, xs]
[;, xs, [, 0, ], =, SINE_TABLE_A, [, i, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, ]]
[,, ys, ), ;, xs, [, 0, ], =, SINE_TABLE_A, [, i, ], ;, xs, [, 1, ], =, SINE_TABLE_B]
[), ;, xs, [, 0, ], =, SINE_TABLE_A, [, i, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i]
[=, SINE_TABLE_A, [, i, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,]
[[, 0, ], =, SINE_TABLE_A, [, i, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, ], ;, splitMult]
[], =, SINE_TABLE_A, [, i, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs]
[;, xs, [, 1, ], =, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,, ys, ,, as, ), ;]
[[, i, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,, ys, ,]
[], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,, ys, ,, as, )]
[=, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,, ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ], =]
[[, 1, ], =, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,, ys, ,, as, ), ;, TANGENT_TABLE_A, []
[], =, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,, ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ]]
[;, splitMult, (, xs, ,, ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ], =, as, [, 0, ], ;]
[[, i, ], ;, splitMult, (, xs, ,, ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ], =, as, []
[], ;, splitMult, (, xs, ,, ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ], =, as, [, 0, ]]
[;, TANGENT_TABLE_A, [, i, ], =, as, [, 0, ], ;, TANGENT_TABLE_B, [, i, ], =, as, [, 1, ]]
[,, ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ], =, as, [, 0, ], ;, TANGENT_TABLE_B, [, i, ]]
[,, as, ), ;, TANGENT_TABLE_A, [, i, ], =, as, [, 0, ], ;, TANGENT_TABLE_B, [, i, ], =, as]
[), ;, TANGENT_TABLE_A, [, i, ], =, as, [, 0, ], ;, TANGENT_TABLE_B, [, i, ], =, as, [, 1]
[=, as, [, 0, ], ;, TANGENT_TABLE_B, [, i, ], =, as, [, 1, ], ;, }, }, static, double]
[[, i, ], =, as, [, 0, ], ;, TANGENT_TABLE_B, [, i, ], =, as, [, 1, ], ;, }]
[], =, as, [, 0, ], ;, TANGENT_TABLE_B, [, i, ], =, as, [, 1, ], ;, }, }, static]
[;, TANGENT_TABLE_B, [, i, ], =, as, [, 1, ], ;, }, }, static, double, slowCos, (, final, double, x]
[[, 0, ], ;, TANGENT_TABLE_B, [, i, ], =, as, [, 1, ], ;, }, }, static, double, slowCos, (]
[], ;, TANGENT_TABLE_B, [, i, ], =, as, [, 1, ], ;, }, }, static, double, slowCos, (, final, double]
[=, as, [, 1, ], ;, }, }, static, double, slowCos, (, final, double, x, ,, final, double, result, []
[[, i, ], =, as, [, 1, ], ;, }, }, static, double, slowCos, (, final, double, x, ,, final]
[], =, as, [, 1, ], ;, }, }, static, double, slowCos, (, final, double, x, ,, final, double, result]
[;, }, }, static, double, slowCos, (, final, double, x, ,, final, double, result, [, ], ), {, final, double]
[[, 1, ], ;, }, }, static, double, slowCos, (, final, double, x, ,, final, double, result, [, ], )]
[], ;, }, }, static, double, slowCos, (, final, double, x, ,, final, double, result, [, ], ), {, final]
[;, final, double, ys, [, ], =, new, double, [, 2, ], ;, final, double, facts, [, ], =, new]
[], ;, final, double, ys, [, ], =, new, double, [, 2, ], ;, final, double, facts, [, ], =]
[;, final, double, facts, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =, new]
[], ;, final, double, facts, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =]
[;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;]
[], ;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, )]
[;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;]
[], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0]
[;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, .]
[,, xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i]
[), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT]
[=, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i]
[[, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -]
[], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;]
[=, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --]
[[, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0]
[], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i]
[;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {]
[;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, []
[-, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;]
[., length, -, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as]
[;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, []
[;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as]
[>=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ]]
[;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as]
[), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ]]
[--, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0]
[;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ]]
[,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ]]
[,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as]
[), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1]
[=, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (, i]
[[, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (]
[;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (, i, &, 1, ), !=, 0]
[[, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (, i, &, 1]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (, i, &, 1, ), !=]
[=, as, [, 1, ], ;, if, (, (, i, &, 1, ), !=, 0, ), {, continue, ;, }]
[[, 1, ], =, as, [, 1, ], ;, if, (, (, i, &, 1, ), !=, 0, ), {]
[], =, as, [, 1, ], ;, if, (, (, i, &, 1, ), !=, 0, ), {, continue, ;]
[;, if, (, (, i, &, 1, ), !=, 0, ), {, continue, ;, }, split, (, FACT, [, i]
[[, 1, ], ;, if, (, (, i, &, 1, ), !=, 0, ), {, continue, ;, }, split, (]
[], ;, if, (, (, i, &, 1, ), !=, 0, ), {, continue, ;, }, split, (, FACT, []
[), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts]
[!=, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as]
[), !=, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (]
[&, 1, ), !=, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;]
[), !=, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (]
[), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts]
[;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts]
[,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0]
[[, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2]
[], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=]
[), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {]
[;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts, []
[,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =]
[), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts]
[), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts]
[!=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =]
[), !=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ]]
[&, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, []
[), !=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ]]
[), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts]
[=, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd]
[[, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ]]
[], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }]
[;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as]
[;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as]
[[, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,]
[], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,]
[=, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0]
[[, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;]
[], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, []
[;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ]]
[;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ]]
[[, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as]
[], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0]
[;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ]]
[,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ]]
[,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as]
[), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1]
[=, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result]
[[, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (]
[;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result]
[[, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {]
[=, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys]
[[, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0]
[], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =]
[;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result]
[[, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0]
[], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;]
[), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1]
[!=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys]
[), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1]
[=, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, []
[[, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }]
[], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys]
[;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, []
[[, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ]]
[], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys]
[=, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, static]
[[, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, [, 1, ]]
[], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }]
[;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, static, double, slowSin, (, final, double]
[[, 1, ], ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, static, double, slowSin]
[], ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, static, double, slowSin, (, final]
[;, }, static, double, slowSin, (, final, double, x, ,, final, double, result, [, ], ), {, final, double, xs]
[+, ys, [, 1, ], ;, }, static, double, slowSin, (, final, double, x, ,, final, double, result, [, ]]
[[, 0, ], +, ys, [, 1, ], ;, }, static, double, slowSin, (, final, double, x, ,, final, double]
[], +, ys, [, 1, ], ;, }, static, double, slowSin, (, final, double, x, ,, final, double, result, []
[;, }, static, double, slowSin, (, final, double, x, ,, final, double, result, [, ], ), {, final, double, xs]
[[, 1, ], ;, }, static, double, slowSin, (, final, double, x, ,, final, double, result, [, ], ), {]
[], ;, }, static, double, slowSin, (, final, double, x, ,, final, double, result, [, ], ), {, final, double]
[;, final, double, ys, [, ], =, new, double, [, 2, ], ;, final, double, facts, [, ], =, new]
[], ;, final, double, ys, [, ], =, new, double, [, 2, ], ;, final, double, facts, [, ], =]
[;, final, double, facts, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =, new]
[], ;, final, double, facts, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =]
[;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;]
[], ;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, )]
[;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;]
[], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0]
[;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, .]
[,, xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i]
[), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT]
[=, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i]
[[, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -]
[], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;]
[=, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --]
[[, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0]
[], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i]
[;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {]
[;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, []
[-, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;]
[., length, -, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as]
[;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, []
[;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as]
[>=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ]]
[;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as]
[), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ]]
[--, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0]
[;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ]]
[,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ]]
[,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as]
[), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1]
[=, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (, i]
[[, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (]
[;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (, i, &, 1, ), ==, 0]
[[, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (, i, &, 1]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (, i, &, 1, ), ==]
[=, as, [, 1, ], ;, if, (, (, i, &, 1, ), ==, 0, ), {, continue, ;, }]
[[, 1, ], =, as, [, 1, ], ;, if, (, (, i, &, 1, ), ==, 0, ), {]
[], =, as, [, 1, ], ;, if, (, (, i, &, 1, ), ==, 0, ), {, continue, ;]
[;, if, (, (, i, &, 1, ), ==, 0, ), {, continue, ;, }, split, (, FACT, [, i]
[[, 1, ], ;, if, (, (, i, &, 1, ), ==, 0, ), {, continue, ;, }, split, (]
[], ;, if, (, (, i, &, 1, ), ==, 0, ), {, continue, ;, }, split, (, FACT, []
[), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts]
[==, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as]
[), ==, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (]
[&, 1, ), ==, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;]
[), ==, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (]
[), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts]
[;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts]
[,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0]
[[, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2]
[], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=]
[), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {]
[;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts, []
[,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =]
[), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts]
[), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts]
[!=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =]
[), !=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ]]
[&, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, []
[), !=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ]]
[), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts]
[=, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd]
[[, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ]]
[], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }]
[;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as]
[;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as]
[[, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,]
[], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,]
[=, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0]
[[, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;]
[], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, []
[;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ]]
[;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ]]
[[, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as]
[], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0]
[;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ]]
[,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ]]
[,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as]
[), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1]
[=, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result]
[[, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (]
[;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result]
[[, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {]
[=, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys]
[[, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0]
[], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =]
[;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result]
[[, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0]
[], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;]
[), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1]
[!=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys]
[), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1]
[=, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, []
[[, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }]
[], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys]
[;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, []
[[, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ]]
[], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys]
[=, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, static]
[[, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, [, 1, ]]
[], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }]
[;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, static, double, slowexp, (, final, double]
[[, 1, ], ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, static, double, slowexp]
[], ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, static, double, slowexp, (, final]
[;, }, static, double, slowexp, (, final, double, x, ,, final, double, result, [, ], ), {, final, double, xs]
[+, ys, [, 1, ], ;, }, static, double, slowexp, (, final, double, x, ,, final, double, result, [, ]]
[[, 0, ], +, ys, [, 1, ], ;, }, static, double, slowexp, (, final, double, x, ,, final, double]
[], +, ys, [, 1, ], ;, }, static, double, slowexp, (, final, double, x, ,, final, double, result, []
[;, }, static, double, slowexp, (, final, double, x, ,, final, double, result, [, ], ), {, final, double, xs]
[[, 1, ], ;, }, static, double, slowexp, (, final, double, x, ,, final, double, result, [, ], ), {]
[], ;, }, static, double, slowexp, (, final, double, x, ,, final, double, result, [, ], ), {, final, double]
[;, final, double, ys, [, ], =, new, double, [, 2, ], ;, final, double, facts, [, ], =, new]
[], ;, final, double, ys, [, ], =, new, double, [, 2, ], ;, final, double, facts, [, ], =]
[;, final, double, facts, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =, new]
[], ;, final, double, facts, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =]
[;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;]
[], ;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, )]
[;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;]
[], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0]
[;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, .]
[,, xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i]
[), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT]
[=, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i]
[[, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -]
[], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;]
[=, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --]
[[, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0]
[], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i]
[;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {]
[;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, []
[-, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;]
[., length, -, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as]
[;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, []
[;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as]
[>=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ]]
[;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as]
[), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ]]
[--, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0]
[;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ]]
[,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ]]
[,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as]
[), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1]
[=, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, split, (, FACT, []
[[, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, split]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, split, (, FACT]
[;, ys, [, 1, ], =, as, [, 1, ], ;, split, (, FACT, [, i, ], ,, as, )]
[[, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, split, (, FACT, [, i, ]]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, split, (, FACT, [, i, ], ,, as]
[=, as, [, 1, ], ;, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,]
[[, 1, ], =, as, [, 1, ], ;, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal]
[], =, as, [, 1, ], ;, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as]
[;, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, splitAdd, (]
[[, 1, ], ;, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, )]
[], ;, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, splitAdd]
[;, splitReciprocal, (, as, ,, facts, ), ;, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0]
[,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, splitAdd, (, ys, ,, facts, ,, as, ), ;]
[[, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, splitAdd, (, ys, ,, facts, ,]
[], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, splitAdd, (, ys, ,, facts, ,, as, )]
[), ;, splitReciprocal, (, as, ,, facts, ), ;, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, []
[;, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[,, facts, ), ;, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, []
[), ;, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ]]
[;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ]]
[,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ]]
[,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as]
[), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1]
[=, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result]
[[, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (]
[;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result]
[[, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {]
[=, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys]
[[, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0]
[], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =]
[;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result]
[[, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0]
[], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;]
[), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1]
[!=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys]
[), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1]
[=, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, []
[[, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }]
[], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys]
[;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, []
[[, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ]]
[], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys]
[=, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, private]
[[, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, [, 1, ]]
[], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }]
[;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, private, static, void, split, (, final]
[[, 1, ], ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, private, static, void]
[], ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, private, static, void, split, (]
[;, }, private, static, void, split, (, final, double, d, ,, final, double, split, [, ], ), {, if, (]
[+, ys, [, 1, ], ;, }, private, static, void, split, (, final, double, d, ,, final, double, split, []
[[, 0, ], +, ys, [, 1, ], ;, }, private, static, void, split, (, final, double, d, ,, final]
[], +, ys, [, 1, ], ;, }, private, static, void, split, (, final, double, d, ,, final, double, split]
[;, }, private, static, void, split, (, final, double, d, ,, final, double, split, [, ], ), {, if, (]
[[, 1, ], ;, }, private, static, void, split, (, final, double, d, ,, final, double, split, [, ], )]
[], ;, }, private, static, void, split, (, final, double, d, ,, final, double, split, [, ], ), {, if]
[), {, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =, (, d, +, a, )]
[&&, d, >, -, 8e298, ), {, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =]
[<, 8e298, &&, d, >, -, 8e298, ), {, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0]
[&&, d, >, -, 8e298, ), {, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =]
[), {, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =, (, d, +, a, )]
[>, -, 8e298, ), {, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =, (, d]
[), {, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =, (, d, +, a, )]
[), {, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =, (, d, +, a, )]
[;, split, [, 0, ], =, (, d, +, a, ), -, a, ;, split, [, 1, ], =, d]
[*, HEX_40000000, ;, split, [, 0, ], =, (, d, +, a, ), -, a, ;, split, [, 1, ]]
[;, split, [, 0, ], =, (, d, +, a, ), -, a, ;, split, [, 1, ], =, d]
[=, (, d, +, a, ), -, a, ;, split, [, 1, ], =, d, -, split, [, 0, ]]
[[, 0, ], =, (, d, +, a, ), -, a, ;, split, [, 1, ], =, d, -, split]
[], =, (, d, +, a, ), -, a, ;, split, [, 1, ], =, d, -, split, [, 0]
[;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, else, {, final, double, a, =]
[-, a, ;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, else, {, final, double]
[), -, a, ;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, else, {, final]
[+, a, ), -, a, ;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, else]
[), -, a, ;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, else, {, final]
[;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, else, {, final, double, a, =]
[=, d, -, split, [, 0, ], ;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split]
[[, 1, ], =, d, -, split, [, 0, ], ;, }, else, {, final, double, a, =, d, *]
[], =, d, -, split, [, 0, ], ;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;]
[;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =, (, d, +]
[-, split, [, 0, ], ;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split, [, 0]
[;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =, (, d, +]
[[, 0, ], ;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =]
[], ;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =, (, d]
[;, split, [, 0, ], =, (, d, +, a, -, d, ), *, HEX_40000000, ;, split, [, 1, ]]
[*, 9.31322574615478515625E-10, ;, split, [, 0, ], =, (, d, +, a, -, d, ), *, HEX_40000000, ;, split, []
[;, split, [, 0, ], =, (, d, +, a, -, d, ), *, HEX_40000000, ;, split, [, 1, ]]
[=, (, d, +, a, -, d, ), *, HEX_40000000, ;, split, [, 1, ], =, d, -, split, []
[[, 0, ], =, (, d, +, a, -, d, ), *, HEX_40000000, ;, split, [, 1, ], =, d]
[], =, (, d, +, a, -, d, ), *, HEX_40000000, ;, split, [, 1, ], =, d, -, split]
[;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, }, private, static, void, resplit, (]
[*, HEX_40000000, ;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, }, private, static, void]
[), *, HEX_40000000, ;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, }, private, static]
[-, d, ), *, HEX_40000000, ;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, }]
[+, a, -, d, ), *, HEX_40000000, ;, split, [, 1, ], =, d, -, split, [, 0, ], ;]
[-, d, ), *, HEX_40000000, ;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, }]
[), *, HEX_40000000, ;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, }, private, static]
[;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, }, private, static, void, resplit, (]
[=, d, -, split, [, 0, ], ;, }, }, private, static, void, resplit, (, final, double, a, [, ]]
[[, 1, ], =, d, -, split, [, 0, ], ;, }, }, private, static, void, resplit, (, final, double]
[], =, d, -, split, [, 0, ], ;, }, }, private, static, void, resplit, (, final, double, a, []
[;, }, }, private, static, void, resplit, (, final, double, a, [, ], ), {, final, double, c, =, a]
[-, split, [, 0, ], ;, }, }, private, static, void, resplit, (, final, double, a, [, ], ), {]
[;, }, }, private, static, void, resplit, (, final, double, a, [, ], ), {, final, double, c, =, a]
[[, 0, ], ;, }, }, private, static, void, resplit, (, final, double, a, [, ], ), {, final, double]
[], ;, }, }, private, static, void, resplit, (, final, double, a, [, ], ), {, final, double, c, =]
[;, final, double, d, =, -, (, c, -, a, [, 0, ], -, a, [, 1, ], ), ;]
[+, a, [, 1, ], ;, final, double, d, =, -, (, c, -, a, [, 0, ], -, a]
[[, 0, ], +, a, [, 1, ], ;, final, double, d, =, -, (, c, -, a, [, 0]
[], +, a, [, 1, ], ;, final, double, d, =, -, (, c, -, a, [, 0, ], -]
[;, final, double, d, =, -, (, c, -, a, [, 0, ], -, a, [, 1, ], ), ;]
[[, 1, ], ;, final, double, d, =, -, (, c, -, a, [, 0, ], -, a, [, 1]
[], ;, final, double, d, =, -, (, c, -, a, [, 0, ], -, a, [, 1, ], )]
[;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;]
[;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;]
[), ;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000]
[-, a, [, 1, ], ), ;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {, double]
[-, a, [, 0, ], -, a, [, 1, ], ), ;, if, (, c, <, 8e298, &&, c, >]
[-, a, [, 1, ], ), ;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {, double]
[[, 0, ], -, a, [, 1, ], ), ;, if, (, c, <, 8e298, &&, c, >, -, 8e298]
[], -, a, [, 1, ], ), ;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {]
[), ;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000]
[[, 1, ], ), ;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {, double, z, =]
[], ), ;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {, double, z, =, c, *]
[), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =, (, c, +, z, ), -]
[&&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =, (]
[<, 8e298, &&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ]]
[&&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =, (]
[), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =, (, c, +, z, ), -]
[>, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =, (, c, +]
[), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =, (, c, +, z, ), -]
[), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =, (, c, +, z, ), -]
[;, a, [, 0, ], =, (, c, +, z, ), -, z, ;, a, [, 1, ], =, c]
[*, HEX_40000000, ;, a, [, 0, ], =, (, c, +, z, ), -, z, ;, a, [, 1, ]]
[;, a, [, 0, ], =, (, c, +, z, ), -, z, ;, a, [, 1, ], =, c]
[=, (, c, +, z, ), -, z, ;, a, [, 1, ], =, c, -, a, [, 0, ]]
[[, 0, ], =, (, c, +, z, ), -, z, ;, a, [, 1, ], =, c, -, a]
[], =, (, c, +, z, ), -, z, ;, a, [, 1, ], =, c, -, a, [, 0]
[;, a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, else, {, double, z]
[-, z, ;, a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, else, {]
[), -, z, ;, a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, else]
[+, z, ), -, z, ;, a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;]
[), -, z, ;, a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, else]
[;, a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, else, {, double, z]
[=, c, -, a, [, 0, ], +, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;]
[[, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, else, {, double, z, =, c]
[], =, c, -, a, [, 0, ], +, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10]
[;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (, c, +, z]
[+, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (, c]
[-, a, [, 0, ], +, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, []
[+, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (, c]
[[, 0, ], +, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ]]
[], +, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (]
[;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (, c, +, z]
[;, a, [, 0, ], =, (, c, +, z, -, c, ), *, HEX_40000000, ;, a, [, 1, ]]
[*, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (, c, +, z, -, c, ), *, HEX_40000000, ;, a, []
[;, a, [, 0, ], =, (, c, +, z, -, c, ), *, HEX_40000000, ;, a, [, 1, ]]
[=, (, c, +, z, -, c, ), *, HEX_40000000, ;, a, [, 1, ], =, c, -, a, []
[[, 0, ], =, (, c, +, z, -, c, ), *, HEX_40000000, ;, a, [, 1, ], =, c]
[], =, (, c, +, z, -, c, ), *, HEX_40000000, ;, a, [, 1, ], =, c, -, a]
[;, a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, }, private, static, void]
[*, HEX_40000000, ;, a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, }, private]
[), *, HEX_40000000, ;, a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, }]
[-, c, ), *, HEX_40000000, ;, a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;]
[+, z, -, c, ), *, HEX_40000000, ;, a, [, 1, ], =, c, -, a, [, 0, ], +]
[-, c, ), *, HEX_40000000, ;, a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;]
[), *, HEX_40000000, ;, a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, }]
[;, a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, }, private, static, void]
[=, c, -, a, [, 0, ], +, d, ;, }, }, private, static, void, splitMult, (, double, a, []
[[, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, }, private, static, void, splitMult, (]
[], =, c, -, a, [, 0, ], +, d, ;, }, }, private, static, void, splitMult, (, double, a]
[;, }, }, private, static, void, splitMult, (, double, a, [, ], ,, double, b, [, ], ,, double, ans]
[+, d, ;, }, }, private, static, void, splitMult, (, double, a, [, ], ,, double, b, [, ], ,]
[-, a, [, 0, ], +, d, ;, }, }, private, static, void, splitMult, (, double, a, [, ], ,]
[+, d, ;, }, }, private, static, void, splitMult, (, double, a, [, ], ,, double, b, [, ], ,]
[[, 0, ], +, d, ;, }, }, private, static, void, splitMult, (, double, a, [, ], ,, double, b]
[], +, d, ;, }, }, private, static, void, splitMult, (, double, a, [, ], ,, double, b, [, ]]
[;, }, }, private, static, void, splitMult, (, double, a, [, ], ,, double, b, [, ], ,, double, ans]
[=, a, [, 0, ], *, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 0, ]]
[[, 0, ], =, a, [, 0, ], *, b, [, 0, ], ;, ans, [, 1, ], =, a]
[], =, a, [, 0, ], *, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 0]
[;, ans, [, 1, ], =, a, [, 0, ], *, b, [, 1, ], +, a, [, 1, ]]
[*, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 0, ], *, b, [, 1, ]]
[[, 0, ], *, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 0, ], *, b]
[], *, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 0, ], *, b, [, 1]
[;, ans, [, 1, ], =, a, [, 0, ], *, b, [, 1, ], +, a, [, 1, ]]
[[, 0, ], ;, ans, [, 1, ], =, a, [, 0, ], *, b, [, 1, ], +, a]
[], ;, ans, [, 1, ], =, a, [, 0, ], *, b, [, 1, ], +, a, [, 1]
[=, a, [, 0, ], *, b, [, 1, ], +, a, [, 1, ], *, b, [, 0, ]]
[[, 1, ], =, a, [, 0, ], *, b, [, 1, ], +, a, [, 1, ], *, b]
[], =, a, [, 0, ], *, b, [, 1, ], +, a, [, 1, ], *, b, [, 0]
[;, resplit, (, ans, ), ;, }, private, static, void, splitAdd, (, final, double, a, [, ], ,, final, double]
[+, a, [, 1, ], *, b, [, 1, ], ;, resplit, (, ans, ), ;, }, private, static, void]
[+, a, [, 1, ], *, b, [, 0, ], +, a, [, 1, ], *, b, [, 1, ]]
[*, b, [, 1, ], +, a, [, 1, ], *, b, [, 0, ], +, a, [, 1, ]]
[[, 0, ], *, b, [, 1, ], +, a, [, 1, ], *, b, [, 0, ], +, a]
[], *, b, [, 1, ], +, a, [, 1, ], *, b, [, 0, ], +, a, [, 1]
[+, a, [, 1, ], *, b, [, 0, ], +, a, [, 1, ], *, b, [, 1, ]]
[[, 1, ], +, a, [, 1, ], *, b, [, 0, ], +, a, [, 1, ], *, b]
[], +, a, [, 1, ], *, b, [, 0, ], +, a, [, 1, ], *, b, [, 1]
[+, a, [, 1, ], *, b, [, 1, ], ;, resplit, (, ans, ), ;, }, private, static, void]
[*, b, [, 0, ], +, a, [, 1, ], *, b, [, 1, ], ;, resplit, (, ans, )]
[[, 1, ], *, b, [, 0, ], +, a, [, 1, ], *, b, [, 1, ], ;, resplit]
[], *, b, [, 0, ], +, a, [, 1, ], *, b, [, 1, ], ;, resplit, (, ans]
[+, a, [, 1, ], *, b, [, 1, ], ;, resplit, (, ans, ), ;, }, private, static, void]
[[, 0, ], +, a, [, 1, ], *, b, [, 1, ], ;, resplit, (, ans, ), ;, }]
[], +, a, [, 1, ], *, b, [, 1, ], ;, resplit, (, ans, ), ;, }, private, static]
[;, resplit, (, ans, ), ;, }, private, static, void, splitAdd, (, final, double, a, [, ], ,, final, double]
[*, b, [, 1, ], ;, resplit, (, ans, ), ;, }, private, static, void, splitAdd, (, final, double, a]
[[, 1, ], *, b, [, 1, ], ;, resplit, (, ans, ), ;, }, private, static, void, splitAdd, (]
[], *, b, [, 1, ], ;, resplit, (, ans, ), ;, }, private, static, void, splitAdd, (, final, double]
[;, resplit, (, ans, ), ;, }, private, static, void, splitAdd, (, final, double, a, [, ], ,, final, double]
[[, 1, ], ;, resplit, (, ans, ), ;, }, private, static, void, splitAdd, (, final, double, a, [, ]]
[], ;, resplit, (, ans, ), ;, }, private, static, void, splitAdd, (, final, double, a, [, ], ,, final]
[;, }, private, static, void, splitAdd, (, final, double, a, [, ], ,, final, double, b, [, ], ,, final]
[), ;, }, private, static, void, splitAdd, (, final, double, a, [, ], ,, final, double, b, [, ], ,]
[=, a, [, 0, ], +, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 1, ]]
[[, 0, ], =, a, [, 0, ], +, b, [, 0, ], ;, ans, [, 1, ], =, a]
[], =, a, [, 0, ], +, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 1]
[;, ans, [, 1, ], =, a, [, 1, ], +, b, [, 1, ], ;, resplit, (, ans, )]
[+, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 1, ], +, b, [, 1, ]]
[[, 0, ], +, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 1, ], +, b]
[], +, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 1, ], +, b, [, 1]
[;, ans, [, 1, ], =, a, [, 1, ], +, b, [, 1, ], ;, resplit, (, ans, )]
[[, 0, ], ;, ans, [, 1, ], =, a, [, 1, ], +, b, [, 1, ], ;, resplit]
[], ;, ans, [, 1, ], =, a, [, 1, ], +, b, [, 1, ], ;, resplit, (, ans]
[=, a, [, 1, ], +, b, [, 1, ], ;, resplit, (, ans, ), ;, }, static, void, splitReciprocal]
[[, 1, ], =, a, [, 1, ], +, b, [, 1, ], ;, resplit, (, ans, ), ;, }]
[], =, a, [, 1, ], +, b, [, 1, ], ;, resplit, (, ans, ), ;, }, static, void]
[;, resplit, (, ans, ), ;, }, static, void, splitReciprocal, (, final, double, in, [, ], ,, final, double, result]
[+, b, [, 1, ], ;, resplit, (, ans, ), ;, }, static, void, splitReciprocal, (, final, double, in, []
[[, 1, ], +, b, [, 1, ], ;, resplit, (, ans, ), ;, }, static, void, splitReciprocal, (, final]
[], +, b, [, 1, ], ;, resplit, (, ans, ), ;, }, static, void, splitReciprocal, (, final, double, in]
[;, resplit, (, ans, ), ;, }, static, void, splitReciprocal, (, final, double, in, [, ], ,, final, double, result]
[[, 1, ], ;, resplit, (, ans, ), ;, }, static, void, splitReciprocal, (, final, double, in, [, ], ,]
[], ;, resplit, (, ans, ), ;, }, static, void, splitReciprocal, (, final, double, in, [, ], ,, final, double]
[;, }, static, void, splitReciprocal, (, final, double, in, [, ], ,, final, double, result, [, ], ), {, final]
[), ;, }, static, void, splitReciprocal, (, final, double, in, [, ], ,, final, double, result, [, ], ), {]
[;, final, double, a, =, 1.0, -, b, ;, if, (, in, [, 0, ], ==, 0.0, ), {, in]
[/, 4194304.0, ;, final, double, a, =, 1.0, -, b, ;, if, (, in, [, 0, ], ==, 0.0, )]
[;, final, double, a, =, 1.0, -, b, ;, if, (, in, [, 0, ], ==, 0.0, ), {, in]
[;, if, (, in, [, 0, ], ==, 0.0, ), {, in, [, 0, ], =, in, [, 1, ]]
[-, b, ;, if, (, in, [, 0, ], ==, 0.0, ), {, in, [, 0, ], =, in, []
[;, if, (, in, [, 0, ], ==, 0.0, ), {, in, [, 0, ], =, in, [, 1, ]]
[), {, in, [, 0, ], =, in, [, 1, ], ;, in, [, 1, ], =, 0.0, ;, }]
[==, 0.0, ), {, in, [, 0, ], =, in, [, 1, ], ;, in, [, 1, ], =, 0.0]
[[, 0, ], ==, 0.0, ), {, in, [, 0, ], =, in, [, 1, ], ;, in, [, 1]
[], ==, 0.0, ), {, in, [, 0, ], =, in, [, 1, ], ;, in, [, 1, ], =]
[), {, in, [, 0, ], =, in, [, 1, ], ;, in, [, 1, ], =, 0.0, ;, }]
[=, in, [, 1, ], ;, in, [, 1, ], =, 0.0, ;, }, result, [, 0, ], =, a]
[[, 0, ], =, in, [, 1, ], ;, in, [, 1, ], =, 0.0, ;, }, result, [, 0]
[], =, in, [, 1, ], ;, in, [, 1, ], =, 0.0, ;, }, result, [, 0, ], =]
[;, in, [, 1, ], =, 0.0, ;, }, result, [, 0, ], =, a, /, in, [, 0, ]]
[[, 1, ], ;, in, [, 1, ], =, 0.0, ;, }, result, [, 0, ], =, a, /, in]
[], ;, in, [, 1, ], =, 0.0, ;, }, result, [, 0, ], =, a, /, in, [, 0]
[=, 0.0, ;, }, result, [, 0, ], =, a, /, in, [, 0, ], ;, result, [, 1, ]]
[[, 1, ], =, 0.0, ;, }, result, [, 0, ], =, a, /, in, [, 0, ], ;, result]
[], =, 0.0, ;, }, result, [, 0, ], =, a, /, in, [, 0, ], ;, result, [, 1]
[;, }, result, [, 0, ], =, a, /, in, [, 0, ], ;, result, [, 1, ], =, (]
[=, a, /, in, [, 0, ], ;, result, [, 1, ], =, (, b, *, in, [, 0, ]]
[[, 0, ], =, a, /, in, [, 0, ], ;, result, [, 1, ], =, (, b, *, in]
[], =, a, /, in, [, 0, ], ;, result, [, 1, ], =, (, b, *, in, [, 0]
[;, result, [, 1, ], =, (, b, *, in, [, 0, ], -, a, *, in, [, 1, ]]
[/, in, [, 0, ], ;, result, [, 1, ], =, (, b, *, in, [, 0, ], -, a]
[;, result, [, 1, ], =, (, b, *, in, [, 0, ], -, a, *, in, [, 1, ]]
[[, 0, ], ;, result, [, 1, ], =, (, b, *, in, [, 0, ], -, a, *, in]
[], ;, result, [, 1, ], =, (, b, *, in, [, 0, ], -, a, *, in, [, 1]
[=, (, b, *, in, [, 0, ], -, a, *, in, [, 1, ], ), /, (, in, []
[[, 1, ], =, (, b, *, in, [, 0, ], -, a, *, in, [, 1, ], ), /]
[], =, (, b, *, in, [, 0, ], -, a, *, in, [, 1, ], ), /, (, in]
[;, if, (, result, [, 1, ], !=, result, [, 1, ], ), {, result, [, 1, ], =, 0.0]
[/, (, in, [, 0, ], *, in, [, 0, ], +, in, [, 0, ], *, in, [, 1]
[), /, (, in, [, 0, ], *, in, [, 0, ], +, in, [, 0, ], *, in, []
[-, a, *, in, [, 1, ], ), /, (, in, [, 0, ], *, in, [, 0, ], +]
[*, in, [, 0, ], -, a, *, in, [, 1, ], ), /, (, in, [, 0, ], *]
[-, a, *, in, [, 1, ], ), /, (, in, [, 0, ], *, in, [, 0, ], +]
[[, 0, ], -, a, *, in, [, 1, ], ), /, (, in, [, 0, ], *, in, []
[], -, a, *, in, [, 1, ], ), /, (, in, [, 0, ], *, in, [, 0, ]]
[), /, (, in, [, 0, ], *, in, [, 0, ], +, in, [, 0, ], *, in, []
[*, in, [, 1, ], ), /, (, in, [, 0, ], *, in, [, 0, ], +, in, []
[), /, (, in, [, 0, ], *, in, [, 0, ], +, in, [, 0, ], *, in, []
[[, 1, ], ), /, (, in, [, 0, ], *, in, [, 0, ], +, in, [, 0, ]]
[], ), /, (, in, [, 0, ], *, in, [, 0, ], +, in, [, 0, ], *, in]
[;, if, (, result, [, 1, ], !=, result, [, 1, ], ), {, result, [, 1, ], =, 0.0]
[), ;, if, (, result, [, 1, ], !=, result, [, 1, ], ), {, result, [, 1, ], =]
[+, in, [, 0, ], *, in, [, 1, ], ), ;, if, (, result, [, 1, ], !=, result]
[*, in, [, 0, ], +, in, [, 0, ], *, in, [, 1, ], ), ;, if, (, result]
[[, 0, ], *, in, [, 0, ], +, in, [, 0, ], *, in, [, 1, ], ), ;]
[], *, in, [, 0, ], +, in, [, 0, ], *, in, [, 1, ], ), ;, if, (]
[+, in, [, 0, ], *, in, [, 1, ], ), ;, if, (, result, [, 1, ], !=, result]
[[, 0, ], +, in, [, 0, ], *, in, [, 1, ], ), ;, if, (, result, [, 1]
[], +, in, [, 0, ], *, in, [, 1, ], ), ;, if, (, result, [, 1, ], !=]
[), ;, if, (, result, [, 1, ], !=, result, [, 1, ], ), {, result, [, 1, ], =]
[*, in, [, 1, ], ), ;, if, (, result, [, 1, ], !=, result, [, 1, ], ), {]
[[, 0, ], *, in, [, 1, ], ), ;, if, (, result, [, 1, ], !=, result, [, 1]
[], *, in, [, 1, ], ), ;, if, (, result, [, 1, ], !=, result, [, 1, ], )]
[), ;, if, (, result, [, 1, ], !=, result, [, 1, ], ), {, result, [, 1, ], =]
[[, 1, ], ), ;, if, (, result, [, 1, ], !=, result, [, 1, ], ), {, result, []
[], ), ;, if, (, result, [, 1, ], !=, result, [, 1, ], ), {, result, [, 1, ]]
[), {, result, [, 1, ], =, 0.0, ;, }, resplit, (, result, ), ;, for, (, int, i, =]
[!=, result, [, 1, ], ), {, result, [, 1, ], =, 0.0, ;, }, resplit, (, result, ), ;]
[[, 1, ], !=, result, [, 1, ], ), {, result, [, 1, ], =, 0.0, ;, }, resplit, (]
[], !=, result, [, 1, ], ), {, result, [, 1, ], =, 0.0, ;, }, resplit, (, result, )]
[), {, result, [, 1, ], =, 0.0, ;, }, resplit, (, result, ), ;, for, (, int, i, =]
[[, 1, ], ), {, result, [, 1, ], =, 0.0, ;, }, resplit, (, result, ), ;, for, (]
[], ), {, result, [, 1, ], =, 0.0, ;, }, resplit, (, result, ), ;, for, (, int, i]
[=, 0.0, ;, }, resplit, (, result, ), ;, for, (, int, i, =, 0, ;, i, <, 2, ;]
[[, 1, ], =, 0.0, ;, }, resplit, (, result, ), ;, for, (, int, i, =, 0, ;, i]
[], =, 0.0, ;, }, resplit, (, result, ), ;, for, (, int, i, =, 0, ;, i, <, 2]
[;, }, resplit, (, result, ), ;, for, (, int, i, =, 0, ;, i, <, 2, ;, i, ++]
[;, for, (, int, i, =, 0, ;, i, <, 2, ;, i, ++, ), {, double, err, =, 1.0]
[), ;, for, (, int, i, =, 0, ;, i, <, 2, ;, i, ++, ), {, double, err, =]
[;, i, <, 2, ;, i, ++, ), {, double, err, =, 1.0, -, result, [, 0, ], *, in]
[;, i, ++, ), {, double, err, =, 1.0, -, result, [, 0, ], *, in, [, 0, ], -]
[<, 2, ;, i, ++, ), {, double, err, =, 1.0, -, result, [, 0, ], *, in, [, 0]
[;, i, ++, ), {, double, err, =, 1.0, -, result, [, 0, ], *, in, [, 0, ], -]
[), {, double, err, =, 1.0, -, result, [, 0, ], *, in, [, 0, ], -, result, [, 0]
[++, ), {, double, err, =, 1.0, -, result, [, 0, ], *, in, [, 0, ], -, result, []
[;, err, =, err, *, (, result, [, 0, ], +, result, [, 1, ], ), ;, result, [, 1]
[-, result, [, 1, ], *, in, [, 1, ], ;, err, =, err, *, (, result, [, 0, ]]
[-, result, [, 1, ], *, in, [, 0, ], -, result, [, 1, ], *, in, [, 1, ]]
[-, result, [, 0, ], *, in, [, 1, ], -, result, [, 1, ], *, in, [, 0, ]]
[-, result, [, 0, ], *, in, [, 0, ], -, result, [, 0, ], *, in, [, 1, ]]
[-, result, [, 0, ], *, in, [, 1, ], -, result, [, 1, ], *, in, [, 0, ]]
[*, in, [, 0, ], -, result, [, 0, ], *, in, [, 1, ], -, result, [, 1, ]]
[[, 0, ], *, in, [, 0, ], -, result, [, 0, ], *, in, [, 1, ], -, result]
[], *, in, [, 0, ], -, result, [, 0, ], *, in, [, 1, ], -, result, [, 1]
[-, result, [, 0, ], *, in, [, 1, ], -, result, [, 1, ], *, in, [, 0, ]]
[[, 0, ], -, result, [, 0, ], *, in, [, 1, ], -, result, [, 1, ], *, in]
[], -, result, [, 0, ], *, in, [, 1, ], -, result, [, 1, ], *, in, [, 0]
[-, result, [, 1, ], *, in, [, 0, ], -, result, [, 1, ], *, in, [, 1, ]]
[*, in, [, 1, ], -, result, [, 1, ], *, in, [, 0, ], -, result, [, 1, ]]
[[, 0, ], *, in, [, 1, ], -, result, [, 1, ], *, in, [, 0, ], -, result]
[], *, in, [, 1, ], -, result, [, 1, ], *, in, [, 0, ], -, result, [, 1]
[-, result, [, 1, ], *, in, [, 0, ], -, result, [, 1, ], *, in, [, 1, ]]
[[, 1, ], -, result, [, 1, ], *, in, [, 0, ], -, result, [, 1, ], *, in]
[], -, result, [, 1, ], *, in, [, 0, ], -, result, [, 1, ], *, in, [, 1]
[-, result, [, 1, ], *, in, [, 1, ], ;, err, =, err, *, (, result, [, 0, ]]
[*, in, [, 0, ], -, result, [, 1, ], *, in, [, 1, ], ;, err, =, err, *]
[[, 1, ], *, in, [, 0, ], -, result, [, 1, ], *, in, [, 1, ], ;, err]
[], *, in, [, 0, ], -, result, [, 1, ], *, in, [, 1, ], ;, err, =, err]
[-, result, [, 1, ], *, in, [, 1, ], ;, err, =, err, *, (, result, [, 0, ]]
[[, 0, ], -, result, [, 1, ], *, in, [, 1, ], ;, err, =, err, *, (, result]
[], -, result, [, 1, ], *, in, [, 1, ], ;, err, =, err, *, (, result, [, 0]
[;, err, =, err, *, (, result, [, 0, ], +, result, [, 1, ], ), ;, result, [, 1]
[*, in, [, 1, ], ;, err, =, err, *, (, result, [, 0, ], +, result, [, 1, ]]
[[, 1, ], *, in, [, 1, ], ;, err, =, err, *, (, result, [, 0, ], +, result]
[], *, in, [, 1, ], ;, err, =, err, *, (, result, [, 0, ], +, result, [, 1]
[;, err, =, err, *, (, result, [, 0, ], +, result, [, 1, ], ), ;, result, [, 1]
[[, 1, ], ;, err, =, err, *, (, result, [, 0, ], +, result, [, 1, ], ), ;]
[], ;, err, =, err, *, (, result, [, 0, ], +, result, [, 1, ], ), ;, result, []
[=, err, *, (, result, [, 0, ], +, result, [, 1, ], ), ;, result, [, 1, ], +=]
[;, result, [, 1, ], +=, err, ;, }, }, private, static, void, quadMult, (, final, double, a, [, ]]
[*, (, result, [, 0, ], +, result, [, 1, ], ), ;, result, [, 1, ], +=, err, ;]
[;, result, [, 1, ], +=, err, ;, }, }, private, static, void, quadMult, (, final, double, a, [, ]]
[), ;, result, [, 1, ], +=, err, ;, }, }, private, static, void, quadMult, (, final, double, a, []
[+, result, [, 1, ], ), ;, result, [, 1, ], +=, err, ;, }, }, private, static, void, quadMult]
[[, 0, ], +, result, [, 1, ], ), ;, result, [, 1, ], +=, err, ;, }, }, private]
[], +, result, [, 1, ], ), ;, result, [, 1, ], +=, err, ;, }, }, private, static, void]
[), ;, result, [, 1, ], +=, err, ;, }, }, private, static, void, quadMult, (, final, double, a, []
[[, 1, ], ), ;, result, [, 1, ], +=, err, ;, }, }, private, static, void, quadMult, (, final]
[], ), ;, result, [, 1, ], +=, err, ;, }, }, private, static, void, quadMult, (, final, double, a]
[+=, err, ;, }, }, private, static, void, quadMult, (, final, double, a, [, ], ,, final, double, b, []
[[, 1, ], +=, err, ;, }, }, private, static, void, quadMult, (, final, double, a, [, ], ,, final]
[], +=, err, ;, }, }, private, static, void, quadMult, (, final, double, a, [, ], ,, final, double, b]
[;, }, }, private, static, void, quadMult, (, final, double, a, [, ], ,, final, double, b, [, ], ,]
[;, final, double, ys, [, ], =, new, double, [, 2, ], ;, final, double, zs, [, ], =, new]
[], ;, final, double, ys, [, ], =, new, double, [, 2, ], ;, final, double, zs, [, ], =]
[;, final, double, zs, [, ], =, new, double, [, 2, ], ;, split, (, a, [, 0, ], ,]
[], ;, final, double, zs, [, ], =, new, double, [, 2, ], ;, split, (, a, [, 0, ]]
[;, split, (, a, [, 0, ], ,, xs, ), ;, split, (, b, [, 0, ], ,, ys, )]
[], ;, split, (, a, [, 0, ], ,, xs, ), ;, split, (, b, [, 0, ], ,, ys]
[;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;]
[,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,]
[[, 0, ], ,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs]
[], ,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys]
[), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, )]
[;, splitMult, (, xs, ,, ys, ,, zs, ), ;, result, [, 0, ], =, zs, [, 0, ], ;]
[,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, result, [, 0, ], =, zs, []
[[, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, result, [, 0, ]]
[], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, result, [, 0, ], =, zs]
[), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, result, [, 0, ], =, zs, [, 0, ]]
[;, result, [, 0, ], =, zs, [, 0, ], ;, result, [, 1, ], =, zs, [, 1, ]]
[,, ys, ,, zs, ), ;, result, [, 0, ], =, zs, [, 0, ], ;, result, [, 1, ]]
[,, zs, ), ;, result, [, 0, ], =, zs, [, 0, ], ;, result, [, 1, ], =, zs]
[), ;, result, [, 0, ], =, zs, [, 0, ], ;, result, [, 1, ], =, zs, [, 1]
[=, zs, [, 0, ], ;, result, [, 1, ], =, zs, [, 1, ], ;, split, (, b, []
[[, 0, ], =, zs, [, 0, ], ;, result, [, 1, ], =, zs, [, 1, ], ;, split]
[], =, zs, [, 0, ], ;, result, [, 1, ], =, zs, [, 1, ], ;, split, (, b]
[;, result, [, 1, ], =, zs, [, 1, ], ;, split, (, b, [, 1, ], ,, ys, )]
[[, 0, ], ;, result, [, 1, ], =, zs, [, 1, ], ;, split, (, b, [, 1, ]]
[], ;, result, [, 1, ], =, zs, [, 1, ], ;, split, (, b, [, 1, ], ,, ys]
[=, zs, [, 1, ], ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,]
[[, 1, ], =, zs, [, 1, ], ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult]
[], =, zs, [, 1, ], ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs]
[;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;]
[[, 1, ], ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,]
[], ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, )]
[;, splitMult, (, xs, ,, ys, ,, zs, ), ;, double, tmp, =, result, [, 0, ], +, zs, []
[,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, double, tmp, =, result, [, 0, ]]
[[, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, double, tmp, =, result]
[], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, double, tmp, =, result, [, 0]
[), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, double, tmp, =, result, [, 0, ], +, zs]
[;, double, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result]
[,, ys, ,, zs, ), ;, double, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result]
[,, zs, ), ;, double, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1]
[), ;, double, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =]
[;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs]
[+, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result]
[[, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs]
[[, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0]
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;]
[[, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0]
[], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], )]
[;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;]
[-, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =]
[[, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, []
[], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ]]
[;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;]
[), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ]]
[-, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ]]
[-, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp]
[-, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ]]
[[, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result]
[], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0]
[), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ]]
[[, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs]
[], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1]
[=, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =]
[[, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, []
[], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ]]
[;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, []
[=, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ]]
[;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs]
[+, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result]
[[, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs]
[[, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0]
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;]
[[, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1]
[], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], )]
[;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (]
[-, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =]
[[, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, []
[], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ]]
[;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (]
[), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split]
[-, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ]]
[-, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split]
[-, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ]]
[[, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a]
[], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1]
[), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split]
[[, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs]
[], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;]
[=, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, [, 0, ], ,]
[[, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, []
[], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, [, 0, ]]
[;, split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, [, 0, ], ,, ys, )]
[;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;]
[,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,]
[[, 1, ], ,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs]
[], ,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys]
[), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, )]
[;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0]
[,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +]
[[, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, []
[], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ]]
[), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, []
[;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, []
[,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, []
[,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ]]
[), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result]
[=, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ]]
[;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs]
[+, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result]
[[, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs]
[[, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0]
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;]
[[, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0]
[], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], )]
[;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;]
[-, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =]
[[, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, []
[], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ]]
[;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;]
[), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ]]
[-, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ]]
[-, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp]
[-, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ]]
[[, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result]
[], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0]
[), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ]]
[[, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs]
[], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1]
[=, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =]
[[, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, []
[], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ]]
[;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, []
[=, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ]]
[;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs]
[+, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result]
[[, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs]
[[, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0]
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;]
[[, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1]
[], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], )]
[;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (]
[-, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =]
[[, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, []
[], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ]]
[;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (]
[), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split]
[-, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ]]
[-, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split]
[-, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ]]
[[, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a]
[], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1]
[), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split]
[[, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs]
[], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;]
[=, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, [, 1, ], ,]
[[, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, []
[], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, [, 1, ]]
[;, split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, [, 1, ], ,, ys, )]
[;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;]
[,, xs, ), ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,]
[[, 1, ], ,, xs, ), ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs]
[], ,, xs, ), ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys]
[), ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, )]
[;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0]
[,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +]
[[, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, []
[], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ]]
[), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, []
[;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, []
[,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, []
[,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ]]
[), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result]
[=, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ]]
[;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs]
[+, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result]
[[, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs]
[[, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0]
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;]
[[, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0]
[], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], )]
[;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;]
[-, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =]
[[, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, []
[], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ]]
[;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;]
[), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ]]
[-, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ]]
[-, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp]
[-, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ]]
[[, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result]
[], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0]
[), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ]]
[[, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs]
[], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1]
[=, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =]
[[, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, []
[], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ]]
[;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, []
[=, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ]]
[;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs]
[+, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result]
[[, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs]
[[, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0]
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;]
[[, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1]
[], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], )]
[;, result, [, 0, ], =, tmp, ;, }, static, double, expint, (, int, p, ,, final, double, result, []
[-, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =]
[[, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, []
[], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ]]
[;, result, [, 0, ], =, tmp, ;, }, static, double, expint, (, int, p, ,, final, double, result, []
[), ;, result, [, 0, ], =, tmp, ;, }, static, double, expint, (, int, p, ,, final, double, result]
[-, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, }, static, double, expint, (, int]
[-, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, }]
[-, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, }, static, double, expint, (, int]
[[, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, }, static, double]
[], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, }, static, double, expint, (]
[), ;, result, [, 0, ], =, tmp, ;, }, static, double, expint, (, int, p, ,, final, double, result]
[[, 1, ], ), ;, result, [, 0, ], =, tmp, ;, }, static, double, expint, (, int, p, ,]
[], ), ;, result, [, 0, ], =, tmp, ;, }, static, double, expint, (, int, p, ,, final, double]
[=, tmp, ;, }, static, double, expint, (, int, p, ,, final, double, result, [, ], ), {, final, double]
[[, 0, ], =, tmp, ;, }, static, double, expint, (, int, p, ,, final, double, result, [, ], )]
[], =, tmp, ;, }, static, double, expint, (, int, p, ,, final, double, result, [, ], ), {, final]
[;, }, static, double, expint, (, int, p, ,, final, double, result, [, ], ), {, final, double, xs, []
[;, final, double, as, [, ], =, new, double, [, 2, ], ;, final, double, ys, [, ], =, new]
[], ;, final, double, as, [, ], =, new, double, [, 2, ], ;, final, double, ys, [, ], =]
[;, final, double, ys, [, ], =, new, double, [, 2, ], ;, xs, [, 0, ], =, 2.718281828459045, ;]
[], ;, final, double, ys, [, ], =, new, double, [, 2, ], ;, xs, [, 0, ], =, 2.718281828459045]
[;, xs, [, 0, ], =, 2.718281828459045, ;, xs, [, 1, ], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys]
[], ;, xs, [, 0, ], =, 2.718281828459045, ;, xs, [, 1, ], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,]
[=, 2.718281828459045, ;, xs, [, 1, ], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;, while, (, p]
[[, 0, ], =, 2.718281828459045, ;, xs, [, 1, ], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;]
[], =, 2.718281828459045, ;, xs, [, 1, ], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;, while, (]
[;, xs, [, 1, ], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;, while, (, p, >, 0]
[=, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;, while, (, p, >, 0, ), {, if, (, (]
[[, 1, ], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;, while, (, p, >, 0, ), {]
[], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;, while, (, p, >, 0, ), {, if, (]
[;, split, (, 1.0, ,, ys, ), ;, while, (, p, >, 0, ), {, if, (, (, p, &]
[;, while, (, p, >, 0, ), {, if, (, (, p, &, 1, ), !=, 0, ), {, quadMult]
[,, ys, ), ;, while, (, p, >, 0, ), {, if, (, (, p, &, 1, ), !=, 0]
[), ;, while, (, p, >, 0, ), {, if, (, (, p, &, 1, ), !=, 0, ), {]
[), {, if, (, (, p, &, 1, ), !=, 0, ), {, quadMult, (, ys, ,, xs, ,, as]
[>, 0, ), {, if, (, (, p, &, 1, ), !=, 0, ), {, quadMult, (, ys, ,, xs]
[), {, if, (, (, p, &, 1, ), !=, 0, ), {, quadMult, (, ys, ,, xs, ,, as]
[), {, quadMult, (, ys, ,, xs, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ]]
[!=, 0, ), {, quadMult, (, ys, ,, xs, ,, as, ), ;, ys, [, 0, ], =, as, []
[), !=, 0, ), {, quadMult, (, ys, ,, xs, ,, as, ), ;, ys, [, 0, ], =, as]
[&, 1, ), !=, 0, ), {, quadMult, (, ys, ,, xs, ,, as, ), ;, ys, [, 0, ]]
[), !=, 0, ), {, quadMult, (, ys, ,, xs, ,, as, ), ;, ys, [, 0, ], =, as]
[), {, quadMult, (, ys, ,, xs, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ]]
[;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ]]
[,, xs, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ]]
[,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as]
[), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1]
[=, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, quadMult, (, xs]
[[, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, quadMult, (]
[;, ys, [, 1, ], =, as, [, 1, ], ;, }, quadMult, (, xs, ,, xs, ,, as, )]
[[, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, quadMult, (, xs, ,, xs]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, quadMult, (, xs, ,, xs, ,, as]
[=, as, [, 1, ], ;, }, quadMult, (, xs, ,, xs, ,, as, ), ;, xs, [, 0, ]]
[[, 1, ], =, as, [, 1, ], ;, }, quadMult, (, xs, ,, xs, ,, as, ), ;, xs]
[], =, as, [, 1, ], ;, }, quadMult, (, xs, ,, xs, ,, as, ), ;, xs, [, 0]
[;, }, quadMult, (, xs, ,, xs, ,, as, ), ;, xs, [, 0, ], =, as, [, 0, ]]
[[, 1, ], ;, }, quadMult, (, xs, ,, xs, ,, as, ), ;, xs, [, 0, ], =, as]
[], ;, }, quadMult, (, xs, ,, xs, ,, as, ), ;, xs, [, 0, ], =, as, [, 0]
[;, xs, [, 0, ], =, as, [, 0, ], ;, xs, [, 1, ], =, as, [, 1, ]]
[,, xs, ,, as, ), ;, xs, [, 0, ], =, as, [, 0, ], ;, xs, [, 1, ]]
[,, as, ), ;, xs, [, 0, ], =, as, [, 0, ], ;, xs, [, 1, ], =, as]
[), ;, xs, [, 0, ], =, as, [, 0, ], ;, xs, [, 1, ], =, as, [, 1]
[=, as, [, 0, ], ;, xs, [, 1, ], =, as, [, 1, ], ;, p, >>=, 1, ;]
[[, 0, ], =, as, [, 0, ], ;, xs, [, 1, ], =, as, [, 1, ], ;, p]
[], =, as, [, 0, ], ;, xs, [, 1, ], =, as, [, 1, ], ;, p, >>=, 1]
[;, xs, [, 1, ], =, as, [, 1, ], ;, p, >>=, 1, ;, }, if, (, result, !=]
[[, 0, ], ;, xs, [, 1, ], =, as, [, 1, ], ;, p, >>=, 1, ;, }, if]
[], ;, xs, [, 1, ], =, as, [, 1, ], ;, p, >>=, 1, ;, }, if, (, result]
[=, as, [, 1, ], ;, p, >>=, 1, ;, }, if, (, result, !=, null, ), {, result, []
[[, 1, ], =, as, [, 1, ], ;, p, >>=, 1, ;, }, if, (, result, !=, null, )]
[], =, as, [, 1, ], ;, p, >>=, 1, ;, }, if, (, result, !=, null, ), {, result]
[;, p, >>=, 1, ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, []
[[, 1, ], ;, p, >>=, 1, ;, }, if, (, result, !=, null, ), {, result, [, 0, ]]
[], ;, p, >>=, 1, ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys]
[>>=, 1, ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ]]
[;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result]
[), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1]
[!=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys]
[), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1]
[=, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, resplit, (, result, )]
[[, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, resplit]
[], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, resplit, (, result]
[;, result, [, 1, ], =, ys, [, 1, ], ;, resplit, (, result, ), ;, }, return, ys, []
[[, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, resplit, (, result, ), ;, }]
[], ;, result, [, 1, ], =, ys, [, 1, ], ;, resplit, (, result, ), ;, }, return, ys]
[=, ys, [, 1, ], ;, resplit, (, result, ), ;, }, return, ys, [, 0, ], +, ys, []
[[, 1, ], =, ys, [, 1, ], ;, resplit, (, result, ), ;, }, return, ys, [, 0, ]]
[], =, ys, [, 1, ], ;, resplit, (, result, ), ;, }, return, ys, [, 0, ], +, ys]
[;, resplit, (, result, ), ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, static]
[[, 1, ], ;, resplit, (, result, ), ;, }, return, ys, [, 0, ], +, ys, [, 1, ]]
[], ;, resplit, (, result, ), ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }]
[;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, static, double, [, ], slowLog, (]
[), ;, }, return, ys, [, 0, ], +, ys, [, 1, ], ;, }, static, double, [, ], slowLog]
[;, }, static, double, [, ], slowLog, (, double, xi, ), {, double, x, [, ], =, new, double, []
[+, ys, [, 1, ], ;, }, static, double, [, ], slowLog, (, double, xi, ), {, double, x, []
[[, 0, ], +, ys, [, 1, ], ;, }, static, double, [, ], slowLog, (, double, xi, ), {]
[], +, ys, [, 1, ], ;, }, static, double, [, ], slowLog, (, double, xi, ), {, double, x]
[;, }, static, double, [, ], slowLog, (, double, xi, ), {, double, x, [, ], =, new, double, []
[[, 1, ], ;, }, static, double, [, ], slowLog, (, double, xi, ), {, double, x, [, ], =]
[], ;, }, static, double, [, ], slowLog, (, double, xi, ), {, double, x, [, ], =, new, double]
[;, double, x2, [, ], =, new, double, [, 2, ], ;, double, y, [, ], =, new, double, []
[], ;, double, x2, [, ], =, new, double, [, 2, ], ;, double, y, [, ], =, new, double]
[;, double, y, [, ], =, new, double, [, 2, ], ;, double, a, [, ], =, new, double, []
[], ;, double, y, [, ], =, new, double, [, 2, ], ;, double, a, [, ], =, new, double]
[;, double, a, [, ], =, new, double, [, 2, ], ;, split, (, xi, ,, x, ), ;, x]
[], ;, double, a, [, ], =, new, double, [, 2, ], ;, split, (, xi, ,, x, ), ;]
[;, split, (, xi, ,, x, ), ;, x, [, 0, ], +=, 1.0, ;, resplit, (, x, ), ;]
[], ;, split, (, xi, ,, x, ), ;, x, [, 0, ], +=, 1.0, ;, resplit, (, x, )]
[;, x, [, 0, ], +=, 1.0, ;, resplit, (, x, ), ;, splitReciprocal, (, x, ,, a, ), ;]
[,, x, ), ;, x, [, 0, ], +=, 1.0, ;, resplit, (, x, ), ;, splitReciprocal, (, x, ,]
[), ;, x, [, 0, ], +=, 1.0, ;, resplit, (, x, ), ;, splitReciprocal, (, x, ,, a, )]
[+=, 1.0, ;, resplit, (, x, ), ;, splitReciprocal, (, x, ,, a, ), ;, x, [, 0, ], -=]
[[, 0, ], +=, 1.0, ;, resplit, (, x, ), ;, splitReciprocal, (, x, ,, a, ), ;, x, []
[], +=, 1.0, ;, resplit, (, x, ), ;, splitReciprocal, (, x, ,, a, ), ;, x, [, 0, ]]
[;, resplit, (, x, ), ;, splitReciprocal, (, x, ,, a, ), ;, x, [, 0, ], -=, 2.0, ;]
[;, splitReciprocal, (, x, ,, a, ), ;, x, [, 0, ], -=, 2.0, ;, resplit, (, x, ), ;]
[), ;, splitReciprocal, (, x, ,, a, ), ;, x, [, 0, ], -=, 2.0, ;, resplit, (, x, )]
[;, x, [, 0, ], -=, 2.0, ;, resplit, (, x, ), ;, splitMult, (, x, ,, a, ,, y]
[,, a, ), ;, x, [, 0, ], -=, 2.0, ;, resplit, (, x, ), ;, splitMult, (, x, ,]
[), ;, x, [, 0, ], -=, 2.0, ;, resplit, (, x, ), ;, splitMult, (, x, ,, a, ,]
[-=, 2.0, ;, resplit, (, x, ), ;, splitMult, (, x, ,, a, ,, y, ), ;, x, [, 0]
[[, 0, ], -=, 2.0, ;, resplit, (, x, ), ;, splitMult, (, x, ,, a, ,, y, ), ;]
[], -=, 2.0, ;, resplit, (, x, ), ;, splitMult, (, x, ,, a, ,, y, ), ;, x, []
[;, resplit, (, x, ), ;, splitMult, (, x, ,, a, ,, y, ), ;, x, [, 0, ], =]
[;, splitMult, (, x, ,, a, ,, y, ), ;, x, [, 0, ], =, y, [, 0, ], ;]
[), ;, splitMult, (, x, ,, a, ,, y, ), ;, x, [, 0, ], =, y, [, 0, ]]
[;, x, [, 0, ], =, y, [, 0, ], ;, x, [, 1, ], =, y, [, 1, ]]
[,, a, ,, y, ), ;, x, [, 0, ], =, y, [, 0, ], ;, x, [, 1, ]]
[,, y, ), ;, x, [, 0, ], =, y, [, 0, ], ;, x, [, 1, ], =, y]
[), ;, x, [, 0, ], =, y, [, 0, ], ;, x, [, 1, ], =, y, [, 1]
[=, y, [, 0, ], ;, x, [, 1, ], =, y, [, 1, ], ;, splitMult, (, x, ,]
[[, 0, ], =, y, [, 0, ], ;, x, [, 1, ], =, y, [, 1, ], ;, splitMult]
[], =, y, [, 0, ], ;, x, [, 1, ], =, y, [, 1, ], ;, splitMult, (, x]
[;, x, [, 1, ], =, y, [, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;]
[[, 0, ], ;, x, [, 1, ], =, y, [, 1, ], ;, splitMult, (, x, ,, x, ,]
[], ;, x, [, 1, ], =, y, [, 1, ], ;, splitMult, (, x, ,, x, ,, x2, )]
[=, y, [, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;, y, [, 0, ], =]
[[, 1, ], =, y, [, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;, y, []
[], =, y, [, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;, y, [, 0, ]]
[;, splitMult, (, x, ,, x, ,, x2, ), ;, y, [, 0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length]
[[, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;, y, [, 0, ], =, LN_SPLIT_COEF, []
[], ;, splitMult, (, x, ,, x, ,, x2, ), ;, y, [, 0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, .]
[;, y, [, 0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;, y, []
[,, x, ,, x2, ), ;, y, [, 0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], []
[,, x2, ), ;, y, [, 0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ]]
[), ;, y, [, 0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;, y]
[=, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;, y, [, 1, ], =, LN_SPLIT_COEF, []
[[, 0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;, y, [, 1, ]]
[], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;, y, [, 1, ], =, LN_SPLIT_COEF]
[;, y, [, 1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 1, ], ;, for, (]
[[, 0, ], ;, y, [, 1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 1, ]]
[[, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;, y, [, 1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, .]
[], [, 0, ], ;, y, [, 1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 1]
[-, 1, ], [, 0, ], ;, y, [, 1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ]]
[., length, -, 1, ], [, 0, ], ;, y, [, 1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -]
[], [, 0, ], ;, y, [, 1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 1]
[], ;, y, [, 1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 1, ], ;, for]
[=, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF, .]
[[, 1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 1, ], ;, for, (, int, i]
[], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF]
[;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;, i, >=, 0, ;, i, --, ), {]
[[, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;, i, >=, 0, ;, i]
[[, LN_SPLIT_COEF, ., length, -, 1, ], [, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -]
[], [, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;, i, >=, 0, ;]
[-, 1, ], [, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;, i, >=]
[., length, -, 1, ], [, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;]
[], [, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;, i, >=, 0, ;]
[], ;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;, i, >=, 0, ;, i, --, )]
[;, i, >=, 0, ;, i, --, ), {, splitMult, (, y, ,, x2, ,, a, ), ;, y, []
[-, 2, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, y, ,, x2, ,, a, ), ;]
[., length, -, 2, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, y, ,, x2, ,, a]
[;, i, >=, 0, ;, i, --, ), {, splitMult, (, y, ,, x2, ,, a, ), ;, y, []
[;, i, --, ), {, splitMult, (, y, ,, x2, ,, a, ), ;, y, [, 0, ], =, a]
[>=, 0, ;, i, --, ), {, splitMult, (, y, ,, x2, ,, a, ), ;, y, [, 0, ]]
[;, i, --, ), {, splitMult, (, y, ,, x2, ,, a, ), ;, y, [, 0, ], =, a]
[), {, splitMult, (, y, ,, x2, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ]]
[--, ), {, splitMult, (, y, ,, x2, ,, a, ), ;, y, [, 0, ], =, a, [, 0]
[;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ]]
[,, x2, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ]]
[,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a]
[), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1]
[=, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, splitAdd, (, y, ,]
[[, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, splitAdd]
[], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, splitAdd, (, y]
[;, y, [, 1, ], =, a, [, 1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,]
[[, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, []
[], ;, y, [, 1, ], =, a, [, 1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ]]
[=, a, [, 1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;, y, []
[[, 1, ], =, a, [, 1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,, a, )]
[], =, a, [, 1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;, y]
[;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;, y, [, 0, ], =, a, []
[[, 1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;, y, [, 0, ]]
[], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;, y, [, 0, ], =, a]
[;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ]]
[,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y]
[,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a]
[[, i, ], ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1]
[], ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =]
[), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1]
[=, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, }, splitMult, (, y]
[[, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, }]
[], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, }, splitMult, (]
[;, y, [, 1, ], =, a, [, 1, ], ;, }, splitMult, (, y, ,, x, ,, a, )]
[[, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, }, splitMult, (, y, ,, x]
[], ;, y, [, 1, ], =, a, [, 1, ], ;, }, splitMult, (, y, ,, x, ,, a]
[=, a, [, 1, ], ;, }, splitMult, (, y, ,, x, ,, a, ), ;, y, [, 0, ]]
[[, 1, ], =, a, [, 1, ], ;, }, splitMult, (, y, ,, x, ,, a, ), ;, y]
[], =, a, [, 1, ], ;, }, splitMult, (, y, ,, x, ,, a, ), ;, y, [, 0]
[;, }, splitMult, (, y, ,, x, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ]]
[[, 1, ], ;, }, splitMult, (, y, ,, x, ,, a, ), ;, y, [, 0, ], =, a]
[], ;, }, splitMult, (, y, ,, x, ,, a, ), ;, y, [, 0, ], =, a, [, 0]
[;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ]]
[,, x, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ]]
[,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a]
[), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1]
[=, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, return, y, ;, }]
[[, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, return]
[], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, return, y, ;]
[;, y, [, 1, ], =, a, [, 1, ], ;, return, y, ;, }, static, void, printarray, (, PrintStream]
[[, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, return, y, ;, }, static, void]
[], ;, y, [, 1, ], =, a, [, 1, ], ;, return, y, ;, }, static, void, printarray, (]
[=, a, [, 1, ], ;, return, y, ;, }, static, void, printarray, (, PrintStream, out, ,, String, name, ,]
[[, 1, ], =, a, [, 1, ], ;, return, y, ;, }, static, void, printarray, (, PrintStream, out, ,]
[], =, a, [, 1, ], ;, return, y, ;, }, static, void, printarray, (, PrintStream, out, ,, String, name]
[;, return, y, ;, }, static, void, printarray, (, PrintStream, out, ,, String, name, ,, int, expectedLen, ,, double, []
[[, 1, ], ;, return, y, ;, }, static, void, printarray, (, PrintStream, out, ,, String, name, ,, int, expectedLen]
[], ;, return, y, ;, }, static, void, printarray, (, PrintStream, out, ,, String, name, ,, int, expectedLen, ,, double]
[;, }, static, void, printarray, (, PrintStream, out, ,, String, name, ,, int, expectedLen, ,, double, [, ], [, ]]
[;, checkLen, (, expectedLen, ,, array2d, ., length, ), ;, out, ., println, (, TABLE_START_DECL, +, " ", ), ;, int]
[., println, (, name, ), ;, checkLen, (, expectedLen, ,, array2d, ., length, ), ;, out, ., println, (, TABLE_START_DECL]
[), ;, checkLen, (, expectedLen, ,, array2d, ., length, ), ;, out, ., println, (, TABLE_START_DECL, +, " ", ), ;]
[;, out, ., println, (, TABLE_START_DECL, +, " ", ), ;, int, i, =, 0, ;, for, (, double, [, ]]
[,, array2d, ., length, ), ;, out, ., println, (, TABLE_START_DECL, +, " ", ), ;, int, i, =, 0, ;]
[), ;, out, ., println, (, TABLE_START_DECL, +, " ", ), ;, int, i, =, 0, ;, for, (, double, []
[., length, ), ;, out, ., println, (, TABLE_START_DECL, +, " ", ), ;, int, i, =, 0, ;, for, (]
[;, int, i, =, 0, ;, for, (, double, [, ], array, :, array2d, ), {, out, ., print, (]
[., println, (, TABLE_START_DECL, +, " ", ), ;, int, i, =, 0, ;, for, (, double, [, ], array, :]
[), ;, int, i, =, 0, ;, for, (, double, [, ], array, :, array2d, ), {, out, ., print]
[+, " ", ), ;, int, i, =, 0, ;, for, (, double, [, ], array, :, array2d, ), {, out]
[), ;, int, i, =, 0, ;, for, (, double, [, ], array, :, array2d, ), {, out, ., print]
[;, for, (, double, [, ], array, :, array2d, ), {, out, ., print, (, "        {", ), ;, for, (]
[), {, out, ., print, (, "        {", ), ;, for, (, double, d, :, array, ), {, out, ., printf]
[;, for, (, double, d, :, array, ), {, out, ., printf, (, "%-25.25s", ,, format, (, d, ), )]
[., print, (, "        {", ), ;, for, (, double, d, :, array, ), {, out, ., printf, (, "%-25.25s", ,]
[), ;, for, (, double, d, :, array, ), {, out, ., printf, (, "%-25.25s", ,, format, (, d, )]
[), {, out, ., printf, (, "%-25.25s", ,, format, (, d, ), ), ;, }, out, ., println, (, "}, // "]
[;, }, out, ., println, (, "}, // ", +, i, ++, ), ;, }, out, ., println, (, TABLE_END_DECL, ), ;]
[., printf, (, "%-25.25s", ,, format, (, d, ), ), ;, }, out, ., println, (, "}, // ", +, i, ++]
[,, format, (, d, ), ), ;, }, out, ., println, (, "}, // ", +, i, ++, ), ;, }, out]
[), ;, }, out, ., println, (, "}, // ", +, i, ++, ), ;, }, out, ., println, (, TABLE_END_DECL, )]
[), ), ;, }, out, ., println, (, "}, // ", +, i, ++, ), ;, }, out, ., println, (, TABLE_END_DECL]
[;, }, out, ., println, (, TABLE_END_DECL, ), ;, }, static, void, printarray, (, PrintStream, out, ,, String, name, ,]
[., println, (, "}, // ", +, i, ++, ), ;, }, out, ., println, (, TABLE_END_DECL, ), ;, }, static, void]
[), ;, }, out, ., println, (, TABLE_END_DECL, ), ;, }, static, void, printarray, (, PrintStream, out, ,, String, name]
[+, i, ++, ), ;, }, out, ., println, (, TABLE_END_DECL, ), ;, }, static, void, printarray, (, PrintStream, out]
[), ;, }, out, ., println, (, TABLE_END_DECL, ), ;, }, static, void, printarray, (, PrintStream, out, ,, String, name]
[++, ), ;, }, out, ., println, (, TABLE_END_DECL, ), ;, }, static, void, printarray, (, PrintStream, out, ,, String]
[;, }, static, void, printarray, (, PrintStream, out, ,, String, name, ,, int, expectedLen, ,, double, [, ], array, )]
[., println, (, TABLE_END_DECL, ), ;, }, static, void, printarray, (, PrintStream, out, ,, String, name, ,, int, expectedLen, ,]
[), ;, }, static, void, printarray, (, PrintStream, out, ,, String, name, ,, int, expectedLen, ,, double, [, ], array]
[;, checkLen, (, expectedLen, ,, array, ., length, ), ;, out, ., println, (, TABLE_START_DECL, ), ;, for, (, double]
[., println, (, name, +, "=", ), ;, checkLen, (, expectedLen, ,, array, ., length, ), ;, out, ., println]
[), ;, checkLen, (, expectedLen, ,, array, ., length, ), ;, out, ., println, (, TABLE_START_DECL, ), ;, for, (]
[+, "=", ), ;, checkLen, (, expectedLen, ,, array, ., length, ), ;, out, ., println, (, TABLE_START_DECL, ), ;]
[), ;, checkLen, (, expectedLen, ,, array, ., length, ), ;, out, ., println, (, TABLE_START_DECL, ), ;, for, (]
[;, out, ., println, (, TABLE_START_DECL, ), ;, for, (, double, d, :, array, ), {, out, ., printf, (]
[,, array, ., length, ), ;, out, ., println, (, TABLE_START_DECL, ), ;, for, (, double, d, :, array, )]
[), ;, out, ., println, (, TABLE_START_DECL, ), ;, for, (, double, d, :, array, ), {, out, ., printf]
[., length, ), ;, out, ., println, (, TABLE_START_DECL, ), ;, for, (, double, d, :, array, ), {, out]
[;, for, (, double, d, :, array, ), {, out, ., printf, (, "        %s%n", ,, format, (, d, ), )]
[., println, (, TABLE_START_DECL, ), ;, for, (, double, d, :, array, ), {, out, ., printf, (, "        %s%n", ,]
[), ;, for, (, double, d, :, array, ), {, out, ., printf, (, "        %s%n", ,, format, (, d, )]
[), {, out, ., printf, (, "        %s%n", ,, format, (, d, ), ), ;, }, out, ., println, (, TABLE_END_DECL]
[;, }, out, ., println, (, TABLE_END_DECL, ), ;, }, static, String, format, (, double, d, ), {, if, (]
[., printf, (, "        %s%n", ,, format, (, d, ), ), ;, }, out, ., println, (, TABLE_END_DECL, ), ;, }]
[,, format, (, d, ), ), ;, }, out, ., println, (, TABLE_END_DECL, ), ;, }, static, String, format, (]
[), ;, }, out, ., println, (, TABLE_END_DECL, ), ;, }, static, String, format, (, double, d, ), {, if]
[), ), ;, }, out, ., println, (, TABLE_END_DECL, ), ;, }, static, String, format, (, double, d, ), {]
[;, }, static, String, format, (, double, d, ), {, if, (, d, !=, d, ), {, return, "Double.NaN,", ;]
[., println, (, TABLE_END_DECL, ), ;, }, static, String, format, (, double, d, ), {, if, (, d, !=, d]
[), ;, }, static, String, format, (, double, d, ), {, if, (, d, !=, d, ), {, return, "Double.NaN,"]
[), {, return, "Double.NaN,", ;, }, else, {, return, (, (, d, >=, 0, ), ?, "+", :, "", )]
[!=, d, ), {, return, "Double.NaN,", ;, }, else, {, return, (, (, d, >=, 0, ), ?, "+", :]
[), {, return, "Double.NaN,", ;, }, else, {, return, (, (, d, >=, 0, ), ?, "+", :, "", )]
[;, }, else, {, return, (, (, d, >=, 0, ), ?, "+", :, "", ), +, Double, ., toString]
[;, }, }, private, static, void, checkLen, (, int, expectedLen, ,, int, actual, ), throws, DimensionMismatchException, {, if, (, expectedLen]
[+, "d,", ;, }, }, private, static, void, checkLen, (, int, expectedLen, ,, int, actual, ), throws, DimensionMismatchException, {, if]
[+, Double, ., toString, (, d, ), +, "d,", ;, }, }, private, static, void, checkLen, (, int, expectedLen, ,]
[), +, Double, ., toString, (, d, ), +, "d,", ;, }, }, private, static, void, checkLen, (, int, expectedLen]
[?, "+", :, "", ), +, Double, ., toString, (, d, ), +, "d,", ;, }, }, private, static, void]
[), ?, "+", :, "", ), +, Double, ., toString, (, d, ), +, "d,", ;, }, }, private, static]
[>=, 0, ), ?, "+", :, "", ), +, Double, ., toString, (, d, ), +, "d,", ;, }, }]
[), ?, "+", :, "", ), +, Double, ., toString, (, d, ), +, "d,", ;, }, }, private, static]
[:, "", ), +, Double, ., toString, (, d, ), +, "d,", ;, }, }, private, static, void, checkLen, (]
[), +, Double, ., toString, (, d, ), +, "d,", ;, }, }, private, static, void, checkLen, (, int, expectedLen]
[+, "d,", ;, }, }, private, static, void, checkLen, (, int, expectedLen, ,, int, actual, ), throws, DimensionMismatchException, {, if]
[., toString, (, d, ), +, "d,", ;, }, }, private, static, void, checkLen, (, int, expectedLen, ,, int, actual]
[), +, "d,", ;, }, }, private, static, void, checkLen, (, int, expectedLen, ,, int, actual, ), throws, DimensionMismatchException, {]
[;, }, }, private, static, void, checkLen, (, int, expectedLen, ,, int, actual, ), throws, DimensionMismatchException, {, if, (, expectedLen]
[), {, throw, new, DimensionMismatchException, (, actual, ,, expectedLen, ), ;, }, }, }]
[!=, actual, ), {, throw, new, DimensionMismatchException, (, actual, ,, expectedLen, ), ;, }, }, }]
[), {, throw, new, DimensionMismatchException, (, actual, ,, expectedLen, ), ;, }, }, }]
[;, }, }, }]
[,, expectedLen, ), ;, }, }, }]
[), ;, }, }, }]
