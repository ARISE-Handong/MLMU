[java, ., util, ., LinkedList, ;, import, java, ., util, ., List, ;, import, java, ., util, ., Stack, ;]
[., LinkedList, ;, import, java, ., util, ., List, ;, import, java, ., util, ., Stack, ;, @, SuppressWarnings, (]
[., Stack, ;, @, SuppressWarnings, (, "unchecked", ), public, class, ArgumentMatcherStorageImpl, implements, ArgumentMatcherStorage, {, public, static, final, int, TWO_SUB_MATCHERS, =]
[public, class, ArgumentMatcherStorageImpl, implements, ArgumentMatcherStorage, {, public, static, final, int, TWO_SUB_MATCHERS, =, 2, ;, public, static, final, int, ONE_SUB_MATCHER, =]
[TWO_SUB_MATCHERS, =, 2, ;, public, static, final, int, ONE_SUB_MATCHER, =, 1, ;, private, final, Stack, <, LocalizedMatcher, >, matcherStack, =]
[LocalizedMatcher, >, matcherStack, =, new, Stack, <, LocalizedMatcher, >, (, ), ;, public, HandyReturnValues, reportMatcher, (, Matcher, matcher, ), {]
[LocalizedMatcher, >, matcherStack, =, new, Stack, <, LocalizedMatcher, >, (, ), ;, public, HandyReturnValues, reportMatcher, (, Matcher, matcher, ), {]
[new, Stack, <, LocalizedMatcher, >, (, ), ;, public, HandyReturnValues, reportMatcher, (, Matcher, matcher, ), {, matcherStack, ., push, (]
[LocalizedMatcher, >, (, ), ;, public, HandyReturnValues, reportMatcher, (, Matcher, matcher, ), {, matcherStack, ., push, (, new, LocalizedMatcher, (]
[public, HandyReturnValues, reportMatcher, (, Matcher, matcher, ), {, matcherStack, ., push, (, new, LocalizedMatcher, (, matcher, ), ), ;, return]
[), ;, return, new, HandyReturnValues, (, ), ;, }, public, List, <, LocalizedMatcher, >, pullLocalizedMatchers, (, ), {, if, (]
[), ;, return, new, HandyReturnValues, (, ), ;, }, public, List, <, LocalizedMatcher, >, pullLocalizedMatchers, (, ), {, if, (]
[}, public, List, <, LocalizedMatcher, >, pullLocalizedMatchers, (, ), {, if, (, matcherStack, ., isEmpty, (, ), ), {, return]
[}, public, List, <, LocalizedMatcher, >, pullLocalizedMatchers, (, ), {, if, (, matcherStack, ., isEmpty, (, ), ), {, return]
[., isEmpty, (, ), ), {, return, Collections, ., emptyList, (, ), ;, }, List, <, LocalizedMatcher, >, matchers, =]
[return, Collections, ., emptyList, (, ), ;, }, List, <, LocalizedMatcher, >, matchers, =, new, ArrayList, <, LocalizedMatcher, >, (]
[emptyList, (, ), ;, }, List, <, LocalizedMatcher, >, matchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;]
[emptyList, (, ), ;, }, List, <, LocalizedMatcher, >, matchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;]
[LocalizedMatcher, >, matchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, ., clear, (, ), ;, return]
[=, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, ., clear, (, ), ;, return, (, List, )]
[;, matcherStack, ., clear, (, ), ;, return, (, List, ), matchers, ;, }, public, HandyReturnValues, reportAnd, (, ), {]
[., clear, (, ), ;, return, (, List, ), matchers, ;, }, public, HandyReturnValues, reportAnd, (, ), {, assertStateFor, (]
[(, ), ;, return, (, List, ), matchers, ;, }, public, HandyReturnValues, reportAnd, (, ), {, assertStateFor, (, "And(?)", ,]
[), matchers, ;, }, public, HandyReturnValues, reportAnd, (, ), {, assertStateFor, (, "And(?)", ,, TWO_SUB_MATCHERS, ), ;, And, and, =]
[}, public, HandyReturnValues, reportAnd, (, ), {, assertStateFor, (, "And(?)", ,, TWO_SUB_MATCHERS, ), ;, And, and, =, new, And, (]
[HandyReturnValues, reportAnd, (, ), {, assertStateFor, (, "And(?)", ,, TWO_SUB_MATCHERS, ), ;, And, and, =, new, And, (, popLastArgumentMatchers, (]
[{, assertStateFor, (, "And(?)", ,, TWO_SUB_MATCHERS, ), ;, And, and, =, new, And, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;]
[{, assertStateFor, (, "And(?)", ,, TWO_SUB_MATCHERS, ), ;, And, and, =, new, And, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;]
[,, TWO_SUB_MATCHERS, ), ;, And, and, =, new, And, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;, matcherStack, ., push, (]
[;, And, and, =, new, And, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;, matcherStack, ., push, (, new, LocalizedMatcher, (]
[And, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;, matcherStack, ., push, (, new, LocalizedMatcher, (, and, ), ), ;, return]
[new, LocalizedMatcher, (, and, ), ), ;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportOr, (, ), {]
[(, and, ), ), ;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportOr, (, ), {, assertStateFor, (]
[), ), ;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportOr, (, ), {, assertStateFor, (, "Or(?)", ,]
[(, ), ;, }, public, HandyReturnValues, reportOr, (, ), {, assertStateFor, (, "Or(?)", ,, TWO_SUB_MATCHERS, ), ;, Or, or, =]
[}, public, HandyReturnValues, reportOr, (, ), {, assertStateFor, (, "Or(?)", ,, TWO_SUB_MATCHERS, ), ;, Or, or, =, new, Or, (]
[HandyReturnValues, reportOr, (, ), {, assertStateFor, (, "Or(?)", ,, TWO_SUB_MATCHERS, ), ;, Or, or, =, new, Or, (, popLastArgumentMatchers, (]
[{, assertStateFor, (, "Or(?)", ,, TWO_SUB_MATCHERS, ), ;, Or, or, =, new, Or, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;]
[{, assertStateFor, (, "Or(?)", ,, TWO_SUB_MATCHERS, ), ;, Or, or, =, new, Or, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;]
[,, TWO_SUB_MATCHERS, ), ;, Or, or, =, new, Or, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;, matcherStack, ., push, (]
[;, Or, or, =, new, Or, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;, matcherStack, ., push, (, new, LocalizedMatcher, (]
[Or, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;, matcherStack, ., push, (, new, LocalizedMatcher, (, or, ), ), ;, return]
[new, LocalizedMatcher, (, or, ), ), ;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportNot, (, ), {]
[(, or, ), ), ;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportNot, (, ), {, assertStateFor, (]
[), ), ;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportNot, (, ), {, assertStateFor, (, "Not(?)", ,]
[(, ), ;, }, public, HandyReturnValues, reportNot, (, ), {, assertStateFor, (, "Not(?)", ,, ONE_SUB_MATCHER, ), ;, Not, not, =]
[}, public, HandyReturnValues, reportNot, (, ), {, assertStateFor, (, "Not(?)", ,, ONE_SUB_MATCHER, ), ;, Not, not, =, new, Not, (]
[}, public, HandyReturnValues, reportNot, (, ), {, assertStateFor, (, "Not(?)", ,, ONE_SUB_MATCHER, ), ;, Not, not, =, new, Not, (]
[HandyReturnValues, reportNot, (, ), {, assertStateFor, (, "Not(?)", ,, ONE_SUB_MATCHER, ), ;, Not, not, =, new, Not, (, popLastArgumentMatchers, (]
[assertStateFor, (, "Not(?)", ,, ONE_SUB_MATCHER, ), ;, Not, not, =, new, Not, (, popLastArgumentMatchers, (, ONE_SUB_MATCHER, ), ., get, (]
[ONE_SUB_MATCHER, ), ;, Not, not, =, new, Not, (, popLastArgumentMatchers, (, ONE_SUB_MATCHER, ), ., get, (, 0, ), ), ;]
[ONE_SUB_MATCHER, ), ;, Not, not, =, new, Not, (, popLastArgumentMatchers, (, ONE_SUB_MATCHER, ), ., get, (, 0, ), ), ;]
[not, =, new, Not, (, popLastArgumentMatchers, (, ONE_SUB_MATCHER, ), ., get, (, 0, ), ), ;, matcherStack, ., push, (]
[Not, (, popLastArgumentMatchers, (, ONE_SUB_MATCHER, ), ., get, (, 0, ), ), ;, matcherStack, ., push, (, new, LocalizedMatcher, (]
[), ., get, (, 0, ), ), ;, matcherStack, ., push, (, new, LocalizedMatcher, (, not, ), ), ;, return]
[), ;, return, new, HandyReturnValues, (, ), ;, }, private, void, assertStateFor, (, String, additionalMatcherName, ,, int, subMatchersCount, ), {]
[return, new, HandyReturnValues, (, ), ;, }, private, void, assertStateFor, (, String, additionalMatcherName, ,, int, subMatchersCount, ), {, assertMatchersFoundFor, (]
[(, ), ;, }, private, void, assertStateFor, (, String, additionalMatcherName, ,, int, subMatchersCount, ), {, assertMatchersFoundFor, (, additionalMatcherName, ), ;]
[;, }, private, void, assertStateFor, (, String, additionalMatcherName, ,, int, subMatchersCount, ), {, assertMatchersFoundFor, (, additionalMatcherName, ), ;, assertIncorrectUseOfAdditionalMatchers, (]
[private, void, assertStateFor, (, String, additionalMatcherName, ,, int, subMatchersCount, ), {, assertMatchersFoundFor, (, additionalMatcherName, ), ;, assertIncorrectUseOfAdditionalMatchers, (, additionalMatcherName, ,]
[), ;, }, private, List, <, Matcher, >, popLastArgumentMatchers, (, int, count, ), {, List, <, Matcher, >, result, =]
[popLastArgumentMatchers, (, int, count, ), {, List, <, Matcher, >, result, =, new, LinkedList, <, Matcher, >, (, ), ;]
[popLastArgumentMatchers, (, int, count, ), {, List, <, Matcher, >, result, =, new, LinkedList, <, Matcher, >, (, ), ;]
[), {, List, <, Matcher, >, result, =, new, LinkedList, <, Matcher, >, (, ), ;, result, ., addAll, (]
[), {, List, <, Matcher, >, result, =, new, LinkedList, <, Matcher, >, (, ), ;, result, ., addAll, (]
[Matcher, >, result, =, new, LinkedList, <, Matcher, >, (, ), ;, result, ., addAll, (, matcherStack, ., subList, (]
[Matcher, >, result, =, new, LinkedList, <, Matcher, >, (, ), ;, result, ., addAll, (, matcherStack, ., subList, (]
[Matcher, >, result, =, new, LinkedList, <, Matcher, >, (, ), ;, result, ., addAll, (, matcherStack, ., subList, (]
[<, Matcher, >, (, ), ;, result, ., addAll, (, matcherStack, ., subList, (, matcherStack, ., size, (, ), -]
[>, (, ), ;, result, ., addAll, (, matcherStack, ., subList, (, matcherStack, ., size, (, ), -, count, ,]
[>, (, ), ;, result, ., addAll, (, matcherStack, ., subList, (, matcherStack, ., size, (, ), -, count, ,]
[., size, (, ), -, count, ,, matcherStack, ., size, (, ), ), ), ;, for, (, int, i, =]
[(, ), -, count, ,, matcherStack, ., size, (, ), ), ), ;, for, (, int, i, =, 0, ;]
[(, ), -, count, ,, matcherStack, ., size, (, ), ), ), ;, for, (, int, i, =, 0, ;]
[-, count, ,, matcherStack, ., size, (, ), ), ), ;, for, (, int, i, =, 0, ;, i, <]
[,, matcherStack, ., size, (, ), ), ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[,, matcherStack, ., size, (, ), ), ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[(, ), ), ), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {]
[(, ), ), ), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {]
[i, =, 0, ;, i, <, count, ;, i, ++, ), {, matcherStack, ., pop, (, ), ;, }, return]
[., pop, (, ), ;, }, return, result, ;, }, private, void, assertMatchersFoundFor, (, String, additionalMatcherName, ), {, if, (]
[., pop, (, ), ;, }, return, result, ;, }, private, void, assertMatchersFoundFor, (, String, additionalMatcherName, ), {, if, (]
[result, ;, }, private, void, assertMatchersFoundFor, (, String, additionalMatcherName, ), {, if, (, matcherStack, ., isEmpty, (, ), ), {]
[result, ;, }, private, void, assertMatchersFoundFor, (, String, additionalMatcherName, ), {, if, (, matcherStack, ., isEmpty, (, ), ), {]
[(, String, additionalMatcherName, ), {, if, (, matcherStack, ., isEmpty, (, ), ), {, matcherStack, ., clear, (, ), ;]
[(, String, additionalMatcherName, ), {, if, (, matcherStack, ., isEmpty, (, ), ), {, matcherStack, ., clear, (, ), ;]
[matcherStack, ., isEmpty, (, ), ), {, matcherStack, ., clear, (, ), ;, new, Reporter, (, ), ., reportNoSubMatchersFound, (]
[reportNoSubMatchersFound, (, additionalMatcherName, ), ;, }, }, private, void, assertIncorrectUseOfAdditionalMatchers, (, String, additionalMatcherName, ,, int, count, ), {, if, (]
[reportNoSubMatchersFound, (, additionalMatcherName, ), ;, }, }, private, void, assertIncorrectUseOfAdditionalMatchers, (, String, additionalMatcherName, ,, int, count, ), {, if, (]
[reportNoSubMatchersFound, (, additionalMatcherName, ), ;, }, }, private, void, assertIncorrectUseOfAdditionalMatchers, (, String, additionalMatcherName, ,, int, count, ), {, if, (]
[}, private, void, assertIncorrectUseOfAdditionalMatchers, (, String, additionalMatcherName, ,, int, count, ), {, if, (, matcherStack, ., size, (, ), <]
[count, ), {, if, (, matcherStack, ., size, (, ), <, count, ), {, ArrayList, <, LocalizedMatcher, >, lastMatchers, =]
[., size, (, ), <, count, ), {, ArrayList, <, LocalizedMatcher, >, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (]
[), <, count, ), {, ArrayList, <, LocalizedMatcher, >, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;]
[), <, count, ), {, ArrayList, <, LocalizedMatcher, >, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;]
[<, LocalizedMatcher, >, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, ., clear, (, ), ;]
[<, LocalizedMatcher, >, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, ., clear, (, ), ;]
[<, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, ., clear, (, ), ;, new, Reporter, (, ), ., incorrectUseOfAdditionalMatchers, (]
[>, (, matcherStack, ), ;, matcherStack, ., clear, (, ), ;, new, Reporter, (, ), ., incorrectUseOfAdditionalMatchers, (, additionalMatcherName, ,]
[matcherStack, ), ;, matcherStack, ., clear, (, ), ;, new, Reporter, (, ), ., incorrectUseOfAdditionalMatchers, (, additionalMatcherName, ,, count, ,]
[., incorrectUseOfAdditionalMatchers, (, additionalMatcherName, ,, count, ,, lastMatchers, ), ;, }, }, public, void, validateState, (, ), {, if, (]
[incorrectUseOfAdditionalMatchers, (, additionalMatcherName, ,, count, ,, lastMatchers, ), ;, }, }, public, void, validateState, (, ), {, if, (, !]
[incorrectUseOfAdditionalMatchers, (, additionalMatcherName, ,, count, ,, lastMatchers, ), ;, }, }, public, void, validateState, (, ), {, if, (, !]
[}, public, void, validateState, (, ), {, if, (, !, matcherStack, ., isEmpty, (, ), ), {, ArrayList, lastMatchers, =]
[{, if, (, !, matcherStack, ., isEmpty, (, ), ), {, ArrayList, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (]
[!, matcherStack, ., isEmpty, (, ), ), {, ArrayList, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;]
[!, matcherStack, ., isEmpty, (, ), ), {, ArrayList, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;]
[), {, ArrayList, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, ., clear, (, ), ;]
[), {, ArrayList, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, ., clear, (, ), ;]
[<, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, ., clear, (, ), ;, new, Reporter, (, ), ., misplacedArgumentMatcher, (]
[), ;, new, Reporter, (, ), ., misplacedArgumentMatcher, (, lastMatchers, ), ;, }, }, public, void, reset, (, ), {]
[), ;, new, Reporter, (, ), ., misplacedArgumentMatcher, (, lastMatchers, ), ;, }, }, public, void, reset, (, ), {]
