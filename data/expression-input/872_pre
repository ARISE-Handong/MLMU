[PublicCloneable, ;, public, class, SimpleHistogramBin, implements, Comparable, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[private, int, itemCount, ;, private, boolean, selected, ;, public, SimpleHistogramBin, (, double, lowerBound, ,, double, upperBound, ), {, this, (]
[itemCount, ;, private, boolean, selected, ;, public, SimpleHistogramBin, (, double, lowerBound, ,, double, upperBound, ), {, this, (, lowerBound, ,]
[private, boolean, selected, ;, public, SimpleHistogramBin, (, double, lowerBound, ,, double, upperBound, ), {, this, (, lowerBound, ,, upperBound, ,]
[selected, ;, public, SimpleHistogramBin, (, double, lowerBound, ,, double, upperBound, ), {, this, (, lowerBound, ,, upperBound, ,, true, ,]
[;, }, public, SimpleHistogramBin, (, double, lowerBound, ,, double, upperBound, ,, boolean, includeLowerBound, ,, boolean, includeUpperBound, ), {, if, (]
[;, }, public, SimpleHistogramBin, (, double, lowerBound, ,, double, upperBound, ,, boolean, includeLowerBound, ,, boolean, includeUpperBound, ), {, if, (]
[public, SimpleHistogramBin, (, double, lowerBound, ,, double, upperBound, ,, boolean, includeLowerBound, ,, boolean, includeUpperBound, ), {, if, (, lowerBound, >=]
[lowerBound, ,, double, upperBound, ,, boolean, includeLowerBound, ,, boolean, includeUpperBound, ), {, if, (, lowerBound, >=, upperBound, ), {, throw]
[upperBound, ,, boolean, includeLowerBound, ,, boolean, includeUpperBound, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (]
[upperBound, ,, boolean, includeLowerBound, ,, boolean, includeUpperBound, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (]
[upperBound, ,, boolean, includeLowerBound, ,, boolean, includeUpperBound, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (]
[upperBound, ,, boolean, includeLowerBound, ,, boolean, includeUpperBound, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (]
[boolean, includeLowerBound, ,, boolean, includeUpperBound, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Invalid bounds; ", +]
[,, boolean, includeUpperBound, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Invalid bounds; ", +, lowerBound, +]
[includeUpperBound, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Invalid bounds; ", +, lowerBound, +, " to ", +]
[(, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Invalid bounds; ", +, lowerBound, +, " to ", +, upperBound, ), ;, }]
[(, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Invalid bounds; ", +, lowerBound, +, " to ", +, upperBound, ), ;, }]
[), {, throw, new, IllegalArgumentException, (, "Invalid bounds; ", +, lowerBound, +, " to ", +, upperBound, ), ;, }, this, ., lowerBound, =]
[throw, new, IllegalArgumentException, (, "Invalid bounds; ", +, lowerBound, +, " to ", +, upperBound, ), ;, }, this, ., lowerBound, =, lowerBound, ;]
[throw, new, IllegalArgumentException, (, "Invalid bounds; ", +, lowerBound, +, " to ", +, upperBound, ), ;, }, this, ., lowerBound, =, lowerBound, ;]
["Invalid bounds; ", +, lowerBound, +, " to ", +, upperBound, ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =]
[lowerBound, +, " to ", +, upperBound, ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;]
[lowerBound, +, " to ", +, upperBound, ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;]
[upperBound, ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., includeLowerBound, =]
[;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., includeLowerBound, =, includeLowerBound, ;]
[;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., includeLowerBound, =, includeLowerBound, ;]
[lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., includeLowerBound, =, includeLowerBound, ;, this, ., includeUpperBound, =]
[lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., includeLowerBound, =, includeLowerBound, ;, this, ., includeUpperBound, =, includeUpperBound, ;]
[lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., includeLowerBound, =, includeLowerBound, ;, this, ., includeUpperBound, =, includeUpperBound, ;]
[upperBound, =, upperBound, ;, this, ., includeLowerBound, =, includeLowerBound, ;, this, ., includeUpperBound, =, includeUpperBound, ;, this, ., itemCount, =]
[upperBound, ;, this, ., includeLowerBound, =, includeLowerBound, ;, this, ., includeUpperBound, =, includeUpperBound, ;, this, ., itemCount, =, 0, ;]
[upperBound, ;, this, ., includeLowerBound, =, includeLowerBound, ;, this, ., includeUpperBound, =, includeUpperBound, ;, this, ., itemCount, =, 0, ;]
[includeLowerBound, =, includeLowerBound, ;, this, ., includeUpperBound, =, includeUpperBound, ;, this, ., itemCount, =, 0, ;, this, ., selected, =]
[this, ., itemCount, =, 0, ;, this, ., selected, =, false, ;, }, public, double, getLowerBound, (, ), {, return]
[this, ., itemCount, =, 0, ;, this, ., selected, =, false, ;, }, public, double, getLowerBound, (, ), {, return]
[}, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, double, getUpperBound, (, ), {, return]
[}, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, double, getUpperBound, (, ), {, return]
[}, public, double, getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, int, getItemCount, (, ), {, return]
[}, public, double, getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, int, getItemCount, (, ), {, return]
[public, int, getItemCount, (, ), {, return, this, ., itemCount, ;, }, public, void, setItemCount, (, int, count, ), {]
[public, int, getItemCount, (, ), {, return, this, ., itemCount, ;, }, public, void, setItemCount, (, int, count, ), {]
[), {, return, this, ., itemCount, ;, }, public, void, setItemCount, (, int, count, ), {, this, ., itemCount, =]
[setItemCount, (, int, count, ), {, this, ., itemCount, =, count, ;, }, public, boolean, isSelected, (, ), {, return]
[setItemCount, (, int, count, ), {, this, ., itemCount, =, count, ;, }, public, boolean, isSelected, (, ), {, return]
[public, boolean, isSelected, (, ), {, return, this, ., selected, ;, }, public, void, setSelected, (, boolean, selected, ), {]
[public, boolean, isSelected, (, ), {, return, this, ., selected, ;, }, public, void, setSelected, (, boolean, selected, ), {]
[), {, return, this, ., selected, ;, }, public, void, setSelected, (, boolean, selected, ), {, this, ., selected, =]
[selected, ), {, this, ., selected, =, selected, ;, }, public, boolean, accepts, (, double, value, ), {, if, (]
[selected, ), {, this, ., selected, =, selected, ;, }, public, boolean, accepts, (, double, value, ), {, if, (]
[., selected, =, selected, ;, }, public, boolean, accepts, (, double, value, ), {, if, (, Double, ., isNaN, (]
[}, public, boolean, accepts, (, double, value, ), {, if, (, Double, ., isNaN, (, value, ), ), {, return]
[double, value, ), {, if, (, Double, ., isNaN, (, value, ), ), {, return, false, ;, }, if, (]
[double, value, ), {, if, (, Double, ., isNaN, (, value, ), ), {, return, false, ;, }, if, (]
[), {, if, (, Double, ., isNaN, (, value, ), ), {, return, false, ;, }, if, (, value, <]
[), {, if, (, Double, ., isNaN, (, value, ), ), {, return, false, ;, }, if, (, value, <]
[isNaN, (, value, ), ), {, return, false, ;, }, if, (, value, <, this, ., lowerBound, ), {, return]
[{, return, false, ;, }, if, (, value, <, this, ., lowerBound, ), {, return, false, ;, }, if, (]
[{, return, false, ;, }, if, (, value, <, this, ., lowerBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, value, <, this, ., lowerBound, ), {, return, false, ;, }, if, (, value, >]
[false, ;, }, if, (, value, <, this, ., lowerBound, ), {, return, false, ;, }, if, (, value, >]
[<, this, ., lowerBound, ), {, return, false, ;, }, if, (, value, >, this, ., upperBound, ), {, return]
[{, return, false, ;, }, if, (, value, >, this, ., upperBound, ), {, return, false, ;, }, if, (]
[{, return, false, ;, }, if, (, value, >, this, ., upperBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, value, >, this, ., upperBound, ), {, return, false, ;, }, if, (, value, ==]
[false, ;, }, if, (, value, >, this, ., upperBound, ), {, return, false, ;, }, if, (, value, ==]
[>, this, ., upperBound, ), {, return, false, ;, }, if, (, value, ==, this, ., lowerBound, ), {, return]
[>, this, ., upperBound, ), {, return, false, ;, }, if, (, value, ==, this, ., lowerBound, ), {, return]
[false, ;, }, if, (, value, ==, this, ., lowerBound, ), {, return, this, ., includeLowerBound, ;, }, if, (]
[false, ;, }, if, (, value, ==, this, ., lowerBound, ), {, return, this, ., includeLowerBound, ;, }, if, (]
[}, if, (, value, ==, this, ., lowerBound, ), {, return, this, ., includeLowerBound, ;, }, if, (, value, ==]
[}, if, (, value, ==, this, ., lowerBound, ), {, return, this, ., includeLowerBound, ;, }, if, (, value, ==]
[., lowerBound, ), {, return, this, ., includeLowerBound, ;, }, if, (, value, ==, this, ., upperBound, ), {, return]
[., lowerBound, ), {, return, this, ., includeLowerBound, ;, }, if, (, value, ==, this, ., upperBound, ), {, return]
[., includeLowerBound, ;, }, if, (, value, ==, this, ., upperBound, ), {, return, this, ., includeUpperBound, ;, }, return]
[return, this, ., includeUpperBound, ;, }, return, true, ;, }, public, boolean, overlapsWith, (, SimpleHistogramBin, bin, ), {, if, (]
[return, this, ., includeUpperBound, ;, }, return, true, ;, }, public, boolean, overlapsWith, (, SimpleHistogramBin, bin, ), {, if, (]
[return, this, ., includeUpperBound, ;, }, return, true, ;, }, public, boolean, overlapsWith, (, SimpleHistogramBin, bin, ), {, if, (]
[;, }, return, true, ;, }, public, boolean, overlapsWith, (, SimpleHistogramBin, bin, ), {, if, (, this, ., upperBound, <]
[;, }, return, true, ;, }, public, boolean, overlapsWith, (, SimpleHistogramBin, bin, ), {, if, (, this, ., upperBound, <]
[public, boolean, overlapsWith, (, SimpleHistogramBin, bin, ), {, if, (, this, ., upperBound, <, bin, ., lowerBound, ), {, return]
[bin, ), {, if, (, this, ., upperBound, <, bin, ., lowerBound, ), {, return, false, ;, }, if, (]
[bin, ), {, if, (, this, ., upperBound, <, bin, ., lowerBound, ), {, return, false, ;, }, if, (]
[bin, ), {, if, (, this, ., upperBound, <, bin, ., lowerBound, ), {, return, false, ;, }, if, (]
[(, this, ., upperBound, <, bin, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., lowerBound, >]
[(, this, ., upperBound, <, bin, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., lowerBound, >]
[., lowerBound, ), {, return, false, ;, }, if, (, this, ., lowerBound, >, bin, ., upperBound, ), {, return]
[false, ;, }, if, (, this, ., lowerBound, >, bin, ., upperBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., lowerBound, >, bin, ., upperBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., lowerBound, >, bin, ., upperBound, ), {, return, false, ;, }, if, (]
[(, this, ., lowerBound, >, bin, ., upperBound, ), {, return, false, ;, }, if, (, this, ., upperBound, ==]
[(, this, ., lowerBound, >, bin, ., upperBound, ), {, return, false, ;, }, if, (, this, ., upperBound, ==]
[., upperBound, ), {, return, false, ;, }, if, (, this, ., upperBound, ==, bin, ., lowerBound, ), {, return]
[., upperBound, ), {, return, false, ;, }, if, (, this, ., upperBound, ==, bin, ., lowerBound, ), {, return]
[., upperBound, ), {, return, false, ;, }, if, (, this, ., upperBound, ==, bin, ., lowerBound, ), {, return]
[return, false, ;, }, if, (, this, ., upperBound, ==, bin, ., lowerBound, ), {, return, this, ., includeUpperBound, &&]
[return, false, ;, }, if, (, this, ., upperBound, ==, bin, ., lowerBound, ), {, return, this, ., includeUpperBound, &&]
[., upperBound, ==, bin, ., lowerBound, ), {, return, this, ., includeUpperBound, &&, bin, ., includeLowerBound, ;, }, if, (]
[., upperBound, ==, bin, ., lowerBound, ), {, return, this, ., includeUpperBound, &&, bin, ., includeLowerBound, ;, }, if, (]
[., upperBound, ==, bin, ., lowerBound, ), {, return, this, ., includeUpperBound, &&, bin, ., includeLowerBound, ;, }, if, (]
[., lowerBound, ), {, return, this, ., includeUpperBound, &&, bin, ., includeLowerBound, ;, }, if, (, this, ., lowerBound, ==]
[., lowerBound, ), {, return, this, ., includeUpperBound, &&, bin, ., includeLowerBound, ;, }, if, (, this, ., lowerBound, ==]
[., includeUpperBound, &&, bin, ., includeLowerBound, ;, }, if, (, this, ., lowerBound, ==, bin, ., upperBound, ), {, return]
[., includeUpperBound, &&, bin, ., includeLowerBound, ;, }, if, (, this, ., lowerBound, ==, bin, ., upperBound, ), {, return]
[., includeUpperBound, &&, bin, ., includeLowerBound, ;, }, if, (, this, ., lowerBound, ==, bin, ., upperBound, ), {, return]
[., includeLowerBound, ;, }, if, (, this, ., lowerBound, ==, bin, ., upperBound, ), {, return, this, ., includeLowerBound, &&]
[., includeLowerBound, ;, }, if, (, this, ., lowerBound, ==, bin, ., upperBound, ), {, return, this, ., includeLowerBound, &&]
[this, ., lowerBound, ==, bin, ., upperBound, ), {, return, this, ., includeLowerBound, &&, bin, ., includeUpperBound, ;, }, return]
[&&, bin, ., includeUpperBound, ;, }, return, true, ;, }, public, int, compareTo, (, Object, obj, ), {, if, (]
[bin, ., includeUpperBound, ;, }, return, true, ;, }, public, int, compareTo, (, Object, obj, ), {, if, (, !]
[., includeUpperBound, ;, }, return, true, ;, }, public, int, compareTo, (, Object, obj, ), {, if, (, !, (]
[., includeUpperBound, ;, }, return, true, ;, }, public, int, compareTo, (, Object, obj, ), {, if, (, !, (]
[}, public, int, compareTo, (, Object, obj, ), {, if, (, !, (, obj, instanceof, SimpleHistogramBin, ), ), {, return]
[obj, ), {, if, (, !, (, obj, instanceof, SimpleHistogramBin, ), ), {, return, 0, ;, }, SimpleHistogramBin, bin, =]
[if, (, !, (, obj, instanceof, SimpleHistogramBin, ), ), {, return, 0, ;, }, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, )]
[obj, instanceof, SimpleHistogramBin, ), ), {, return, 0, ;, }, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), obj, ;, if, (]
[obj, instanceof, SimpleHistogramBin, ), ), {, return, 0, ;, }, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), obj, ;, if, (]
[obj, instanceof, SimpleHistogramBin, ), ), {, return, 0, ;, }, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), obj, ;, if, (]
[), {, return, 0, ;, }, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), obj, ;, if, (, this, ., lowerBound, <]
[), {, return, 0, ;, }, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), obj, ;, if, (, this, ., lowerBound, <]
[SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), obj, ;, if, (, this, ., lowerBound, <, bin, ., lowerBound, ), {, return]
[bin, =, (, SimpleHistogramBin, ), obj, ;, if, (, this, ., lowerBound, <, bin, ., lowerBound, ), {, return, -]
[obj, ;, if, (, this, ., lowerBound, <, bin, ., lowerBound, ), {, return, -, 1, ;, }, if, (]
[obj, ;, if, (, this, ., lowerBound, <, bin, ., lowerBound, ), {, return, -, 1, ;, }, if, (]
[obj, ;, if, (, this, ., lowerBound, <, bin, ., lowerBound, ), {, return, -, 1, ;, }, if, (]
[this, ., lowerBound, <, bin, ., lowerBound, ), {, return, -, 1, ;, }, if, (, this, ., lowerBound, >]
[this, ., lowerBound, <, bin, ., lowerBound, ), {, return, -, 1, ;, }, if, (, this, ., lowerBound, >]
[lowerBound, ), {, return, -, 1, ;, }, if, (, this, ., lowerBound, >, bin, ., lowerBound, ), {, return]
[1, ;, }, if, (, this, ., lowerBound, >, bin, ., lowerBound, ), {, return, 1, ;, }, if, (]
[1, ;, }, if, (, this, ., lowerBound, >, bin, ., lowerBound, ), {, return, 1, ;, }, if, (]
[1, ;, }, if, (, this, ., lowerBound, >, bin, ., lowerBound, ), {, return, 1, ;, }, if, (]
[(, this, ., lowerBound, >, bin, ., lowerBound, ), {, return, 1, ;, }, if, (, this, ., upperBound, <]
[(, this, ., lowerBound, >, bin, ., lowerBound, ), {, return, 1, ;, }, if, (, this, ., upperBound, <]
[., lowerBound, ), {, return, 1, ;, }, if, (, this, ., upperBound, <, bin, ., upperBound, ), {, return]
[lowerBound, ), {, return, 1, ;, }, if, (, this, ., upperBound, <, bin, ., upperBound, ), {, return, -]
[;, }, if, (, this, ., upperBound, <, bin, ., upperBound, ), {, return, -, 1, ;, }, if, (]
[;, }, if, (, this, ., upperBound, <, bin, ., upperBound, ), {, return, -, 1, ;, }, if, (]
[;, }, if, (, this, ., upperBound, <, bin, ., upperBound, ), {, return, -, 1, ;, }, if, (]
[this, ., upperBound, <, bin, ., upperBound, ), {, return, -, 1, ;, }, if, (, this, ., upperBound, >]
[this, ., upperBound, <, bin, ., upperBound, ), {, return, -, 1, ;, }, if, (, this, ., upperBound, >]
[upperBound, ), {, return, -, 1, ;, }, if, (, this, ., upperBound, >, bin, ., upperBound, ), {, return]
[-, 1, ;, }, if, (, this, ., upperBound, >, bin, ., upperBound, ), {, return, 1, ;, }, return]
[), {, return, 1, ;, }, return, 0, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[{, return, 1, ;, }, return, 0, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, !]
[return, 1, ;, }, return, 0, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, !, (]
[return, 1, ;, }, return, 0, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, !, (]
[}, public, boolean, equals, (, Object, obj, ), {, if, (, !, (, obj, instanceof, SimpleHistogramBin, ), ), {, return]
[obj, ), {, if, (, !, (, obj, instanceof, SimpleHistogramBin, ), ), {, return, false, ;, }, SimpleHistogramBin, that, =]
[if, (, !, (, obj, instanceof, SimpleHistogramBin, ), ), {, return, false, ;, }, SimpleHistogramBin, that, =, (, SimpleHistogramBin, )]
[obj, instanceof, SimpleHistogramBin, ), ), {, return, false, ;, }, SimpleHistogramBin, that, =, (, SimpleHistogramBin, ), obj, ;, if, (]
[obj, instanceof, SimpleHistogramBin, ), ), {, return, false, ;, }, SimpleHistogramBin, that, =, (, SimpleHistogramBin, ), obj, ;, if, (]
[obj, instanceof, SimpleHistogramBin, ), ), {, return, false, ;, }, SimpleHistogramBin, that, =, (, SimpleHistogramBin, ), obj, ;, if, (]
[), {, return, false, ;, }, SimpleHistogramBin, that, =, (, SimpleHistogramBin, ), obj, ;, if, (, this, ., lowerBound, !=]
[), {, return, false, ;, }, SimpleHistogramBin, that, =, (, SimpleHistogramBin, ), obj, ;, if, (, this, ., lowerBound, !=]
[SimpleHistogramBin, that, =, (, SimpleHistogramBin, ), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return]
[), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (]
[(, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=]
[(, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=]
[., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return]
[false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (]
[(, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, this, ., includeLowerBound, !=]
[(, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, this, ., includeLowerBound, !=]
[., upperBound, ), {, return, false, ;, }, if, (, this, ., includeLowerBound, !=, that, ., includeLowerBound, ), {, return]
[false, ;, }, if, (, this, ., includeLowerBound, !=, that, ., includeLowerBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., includeLowerBound, !=, that, ., includeLowerBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., includeLowerBound, !=, that, ., includeLowerBound, ), {, return, false, ;, }, if, (]
[(, this, ., includeLowerBound, !=, that, ., includeLowerBound, ), {, return, false, ;, }, if, (, this, ., includeUpperBound, !=]
[(, this, ., includeLowerBound, !=, that, ., includeLowerBound, ), {, return, false, ;, }, if, (, this, ., includeUpperBound, !=]
[., includeLowerBound, ), {, return, false, ;, }, if, (, this, ., includeUpperBound, !=, that, ., includeUpperBound, ), {, return]
[false, ;, }, if, (, this, ., includeUpperBound, !=, that, ., includeUpperBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., includeUpperBound, !=, that, ., includeUpperBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., includeUpperBound, !=, that, ., includeUpperBound, ), {, return, false, ;, }, if, (]
[(, this, ., includeUpperBound, !=, that, ., includeUpperBound, ), {, return, false, ;, }, if, (, this, ., itemCount, !=]
[(, this, ., includeUpperBound, !=, that, ., includeUpperBound, ), {, return, false, ;, }, if, (, this, ., itemCount, !=]
[., includeUpperBound, ), {, return, false, ;, }, if, (, this, ., itemCount, !=, that, ., itemCount, ), {, return]
[false, ;, }, if, (, this, ., itemCount, !=, that, ., itemCount, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., itemCount, !=, that, ., itemCount, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., itemCount, !=, that, ., itemCount, ), {, return, false, ;, }, if, (]
[(, this, ., itemCount, !=, that, ., itemCount, ), {, return, false, ;, }, if, (, this, ., selected, !=]
[(, this, ., itemCount, !=, that, ., itemCount, ), {, return, false, ;, }, if, (, this, ., selected, !=]
[., itemCount, ), {, return, false, ;, }, if, (, this, ., selected, !=, that, ., selected, ), {, return]
[return, false, ;, }, if, (, this, ., selected, !=, that, ., selected, ), {, return, false, ;, }, return]
[selected, ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[selected, ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
