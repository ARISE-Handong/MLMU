[MapBasedScope, extends, AbstractStaticScope, <, JSType, >, {, private, final, Map, <, String, ,, StaticSlot, <, JSType, >, >, slots, =]
[MapBasedScope, extends, AbstractStaticScope, <, JSType, >, {, private, final, Map, <, String, ,, StaticSlot, <, JSType, >, >, slots, =]
[extends, JSType, >, namesToTypes, ), {, for, (, Map, ., Entry, <, String, ,, ?, extends, JSType, >, entry, :]
[extends, JSType, >, namesToTypes, ), {, for, (, Map, ., Entry, <, String, ,, ?, extends, JSType, >, entry, :]
[(, Map, ., Entry, <, String, ,, ?, extends, JSType, >, entry, :, namesToTypes, ., entrySet, (, ), ), {]
[(, Map, ., Entry, <, String, ,, ?, extends, JSType, >, entry, :, namesToTypes, ., entrySet, (, ), ), {]
[<, String, ,, ?, extends, JSType, >, entry, :, namesToTypes, ., entrySet, (, ), ), {, slots, ., put, (]
[<, String, ,, ?, extends, JSType, >, entry, :, namesToTypes, ., entrySet, (, ), ), {, slots, ., put, (]
[>, entry, :, namesToTypes, ., entrySet, (, ), ), {, slots, ., put, (, entry, ., getKey, (, ), ,]
[namesToTypes, ., entrySet, (, ), ), {, slots, ., put, (, entry, ., getKey, (, ), ,, new, SimpleSlot, (]
[namesToTypes, ., entrySet, (, ), ), {, slots, ., put, (, entry, ., getKey, (, ), ,, new, SimpleSlot, (]
[{, slots, ., put, (, entry, ., getKey, (, ), ,, new, SimpleSlot, (, entry, ., getKey, (, ), ,]
[{, slots, ., put, (, entry, ., getKey, (, ), ,, new, SimpleSlot, (, entry, ., getKey, (, ), ,]
[., getKey, (, ), ,, new, SimpleSlot, (, entry, ., getKey, (, ), ,, entry, ., getValue, (, ), ,]
[entry, ., getValue, (, ), ,, false, ), ), ;, }, }, public, static, MapBasedScope, emptyScope, (, ), {, return]
[(, ), ,, false, ), ), ;, }, }, public, static, MapBasedScope, emptyScope, (, ), {, return, new, MapBasedScope, (]
[(, ), ,, false, ), ), ;, }, }, public, static, MapBasedScope, emptyScope, (, ), {, return, new, MapBasedScope, (]
[of, (, ), ), ;, }, @, Override, public, StaticSlot, <, JSType, >, getSlot, (, String, name, ), {, return]
[of, (, ), ), ;, }, @, Override, public, StaticSlot, <, JSType, >, getSlot, (, String, name, ), {, return]
[;, }, @, Override, public, StaticSlot, <, JSType, >, getSlot, (, String, name, ), {, return, slots, ., get, (]
