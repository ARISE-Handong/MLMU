[;, private, final, DurationField, iField, ;, public, DecoratedDurationField, (, DurationField, field, ,, DurationFieldType, type, ), {, super, (, type, )]
[), ;, if, (, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }, if, (, !]
[), {, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }, if, (, !, field, ., isSupported, (, ), ), {]
[==, null, ), {, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }, if, (, !, field, ., isSupported, (, )]
[), {, throw, new, IllegalArgumentException, (, "The field must not be null", ), ;, }, if, (, !, field, ., isSupported, (, ), ), {]
[;, }, if, (, !, field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, "The field must be supported", ), ;, }]
[), ;, }, if, (, !, field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, "The field must be supported", ), ;]
[), {, throw, new, IllegalArgumentException, (, "The field must be supported", ), ;, }, iField, =, field, ;, }, public, final, DurationField, getWrappedField, (]
[), {, throw, new, IllegalArgumentException, (, "The field must be supported", ), ;, }, iField, =, field, ;, }, public, final, DurationField, getWrappedField, (]
[., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, "The field must be supported", ), ;, }, iField, =, field, ;, }, public]
[;, }, iField, =, field, ;, }, public, final, DurationField, getWrappedField, (, ), {, return, iField, ;, }, public, boolean]
[), ;, }, iField, =, field, ;, }, public, final, DurationField, getWrappedField, (, ), {, return, iField, ;, }, public]
[=, field, ;, }, public, final, DurationField, getWrappedField, (, ), {, return, iField, ;, }, public, boolean, isPrecise, (, )]
[;, }, public, final, DurationField, getWrappedField, (, ), {, return, iField, ;, }, public, boolean, isPrecise, (, ), {, return]
[;, }, public, boolean, isPrecise, (, ), {, return, iField, ., isPrecise, (, ), ;, }, public, long, getValueAsLong, (]
[;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, iField, ., getValueAsLong, (, duration, ,]
[., isPrecise, (, ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, iField, .]
[;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value, ,]
[., getValueAsLong, (, duration, ,, instant, ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {]
[,, instant, ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, iField, ., getMillis]
[), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value]
[;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value, ,]
[., getMillis, (, value, ,, instant, ), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {]
[,, instant, ), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, iField, ., getMillis]
[), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value]
[;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, iField, ., add, (, instant, ,]
[., getMillis, (, value, ,, instant, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {]
[,, instant, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, iField, ., add]
[), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, iField, ., add, (, instant]
[;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, iField, ., add, (, instant, ,]
[., add, (, instant, ,, value, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {]
[,, value, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, iField, ., add]
[), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, iField, ., add, (, instant]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, iField, ., getDifferenceAsLong, (, minuendInstant, ,]
[., add, (, instant, ,, value, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {]
[,, value, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, iField, ., getDifferenceAsLong]
[), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, iField, ., getDifferenceAsLong, (, minuendInstant]
[;, }, public, long, getUnitMillis, (, ), {, return, iField, ., getUnitMillis, (, ), ;, }, }]
[., getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, getUnitMillis, (, ), {, return, iField, ., getUnitMillis, (]
[,, subtrahendInstant, ), ;, }, public, long, getUnitMillis, (, ), {, return, iField, ., getUnitMillis, (, ), ;, }, }]
[), ;, }, public, long, getUnitMillis, (, ), {, return, iField, ., getUnitMillis, (, ), ;, }, }]
[;, }, }]
[., getUnitMillis, (, ), ;, }, }]
