[java, ., text, ., DecimalFormat, ;, public, class, StandardTickUnitSource, implements, TickUnitSource, ,, Serializable, {, private, static, final, double, LOG_10_VALUE, =]
[java, ., text, ., DecimalFormat, ;, public, class, StandardTickUnitSource, implements, TickUnitSource, ,, Serializable, {, private, static, final, double, LOG_10_VALUE, =]
[DecimalFormat, ;, public, class, StandardTickUnitSource, implements, TickUnitSource, ,, Serializable, {, private, static, final, double, LOG_10_VALUE, =, Math, ., log, (]
[StandardTickUnitSource, (, ), {, super, (, ), ;, }, public, TickUnit, getLargerTickUnit, (, TickUnit, unit, ), {, double, x, =]
[StandardTickUnitSource, (, ), {, super, (, ), ;, }, public, TickUnit, getLargerTickUnit, (, TickUnit, unit, ), {, double, x, =]
[public, TickUnit, getLargerTickUnit, (, TickUnit, unit, ), {, double, x, =, unit, ., getSize, (, ), ;, double, log, =]
[public, TickUnit, getLargerTickUnit, (, TickUnit, unit, ), {, double, x, =, unit, ., getSize, (, ), ;, double, log, =]
[public, TickUnit, getLargerTickUnit, (, TickUnit, unit, ), {, double, x, =, unit, ., getSize, (, ), ;, double, log, =]
[TickUnit, unit, ), {, double, x, =, unit, ., getSize, (, ), ;, double, log, =, Math, ., log, (]
[{, double, x, =, unit, ., getSize, (, ), ;, double, log, =, Math, ., log, (, x, ), /]
[., getSize, (, ), ;, double, log, =, Math, ., log, (, x, ), /, LOG_10_VALUE, ;, double, higher, =]
[., getSize, (, ), ;, double, log, =, Math, ., log, (, x, ), /, LOG_10_VALUE, ;, double, higher, =]
[;, double, log, =, Math, ., log, (, x, ), /, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (]
[Math, ., log, (, x, ), /, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return]
[(, x, ), /, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (]
[(, x, ), /, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (]
[LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (]
[double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10, ,]
[Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10, ,, higher, ), ,]
[(, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10, ,, higher, ), ,, new, DecimalFormat, (]
[higher, ), ,, new, DecimalFormat, (, "0.0E0", ), ), ;, }, public, TickUnit, getCeilingTickUnit, (, TickUnit, unit, ), {, return]
[,, new, DecimalFormat, (, "0.0E0", ), ), ;, }, public, TickUnit, getCeilingTickUnit, (, TickUnit, unit, ), {, return, getLargerTickUnit, (]
[), {, return, getLargerTickUnit, (, unit, ), ;, }, public, TickUnit, getCeilingTickUnit, (, double, size, ), {, double, log, =]
[), {, return, getLargerTickUnit, (, unit, ), ;, }, public, TickUnit, getCeilingTickUnit, (, double, size, ), {, double, log, =]
[), {, return, getLargerTickUnit, (, unit, ), ;, }, public, TickUnit, getCeilingTickUnit, (, double, size, ), {, double, log, =]
[(, unit, ), ;, }, public, TickUnit, getCeilingTickUnit, (, double, size, ), {, double, log, =, Math, ., log, (]
[;, }, public, TickUnit, getCeilingTickUnit, (, double, size, ), {, double, log, =, Math, ., log, (, size, ), /]
[(, double, size, ), {, double, log, =, Math, ., log, (, size, ), /, LOG_10_VALUE, ;, double, higher, =]
[(, double, size, ), {, double, log, =, Math, ., log, (, size, ), /, LOG_10_VALUE, ;, double, higher, =]
[{, double, log, =, Math, ., log, (, size, ), /, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (]
[Math, ., log, (, size, ), /, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return]
[(, size, ), /, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (]
[(, size, ), /, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (]
[LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (]
[double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10, ,]
[Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10, ,, higher, ), ,]
[(, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10, ,, higher, ), ,, new, DecimalFormat, (]
[), ,, new, DecimalFormat, (, "0.0E0", ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ,, new, DecimalFormat, (, "0.0E0", ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[new, DecimalFormat, (, "0.0E0", ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, return, (]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, return, (]
[{, return, true, ;, }, return, (, obj, instanceof, StandardTickUnitSource, ), ;, }, public, int, hashCode, (, ), {, return]
