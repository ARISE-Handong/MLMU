[;, public, class, DialTextAnnotation, extends, AbstractDialLayer, implements, DialLayer, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, static, final, long, serialVersionUID, =]
[double, angle, ;, private, double, radius, ;, private, TextAnchor, anchor, ;, public, DialTextAnnotation, (, String, label, ), {, if, (]
[double, angle, ;, private, double, radius, ;, private, TextAnchor, anchor, ;, public, DialTextAnnotation, (, String, label, ), {, if, (]
[;, private, double, radius, ;, private, TextAnchor, anchor, ;, public, DialTextAnnotation, (, String, label, ), {, if, (, label, ==]
[;, private, TextAnchor, anchor, ;, public, DialTextAnnotation, (, String, label, ), {, if, (, label, ==, null, ), {, throw]
[anchor, ;, public, DialTextAnnotation, (, String, label, ), {, if, (, label, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, String, label, ), {, if, (, label, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }]
[(, String, label, ), {, if, (, label, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }]
[{, if, (, label, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }, this, ., angle, =]
[if, (, label, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }, this, ., angle, =, -]
[label, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }, this, ., angle, =, -, 90.0, ;]
[label, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }, this, ., angle, =, -, 90.0, ;]
[{, throw, new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }, this, ., angle, =, -, 90.0, ;, this, ., radius, =]
[new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }, this, ., angle, =, -, 90.0, ;, this, ., radius, =, 0.3, ;]
[new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }, this, ., angle, =, -, 90.0, ;, this, ., radius, =, 0.3, ;]
[), ;, }, this, ., angle, =, -, 90.0, ;, this, ., radius, =, 0.3, ;, this, ., font, =]
[this, ., angle, =, -, 90.0, ;, this, ., radius, =, 0.3, ;, this, ., font, =, new, Font, (]
[angle, =, -, 90.0, ;, this, ., radius, =, 0.3, ;, this, ., font, =, new, Font, (, "Tahoma", ,]
[angle, =, -, 90.0, ;, this, ., radius, =, 0.3, ;, this, ., font, =, new, Font, (, "Tahoma", ,]
[;, this, ., radius, =, 0.3, ;, this, ., font, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,]
[radius, =, 0.3, ;, this, ., font, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 14, ), ;]
[radius, =, 0.3, ;, this, ., font, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 14, ), ;]
[this, ., font, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 14, ), ;, this, ., paint, =]
[this, ., font, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 14, ), ;, this, ., paint, =]
[new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 14, ), ;, this, ., paint, =, Color, ., black, ;]
[new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 14, ), ;, this, ., paint, =, Color, ., black, ;]
[,, Font, ., BOLD, ,, 14, ), ;, this, ., paint, =, Color, ., black, ;, this, ., label, =]
[., BOLD, ,, 14, ), ;, this, ., paint, =, Color, ., black, ;, this, ., label, =, label, ;]
[., BOLD, ,, 14, ), ;, this, ., paint, =, Color, ., black, ;, this, ., label, =, label, ;]
[), ;, this, ., paint, =, Color, ., black, ;, this, ., label, =, label, ;, this, ., anchor, =]
[), ;, this, ., paint, =, Color, ., black, ;, this, ., label, =, label, ;, this, ., anchor, =]
[label, =, label, ;, this, ., anchor, =, TextAnchor, ., TOP_CENTER, ;, }, public, String, getLabel, (, ), {, return]
[label, =, label, ;, this, ., anchor, =, TextAnchor, ., TOP_CENTER, ;, }, public, String, getLabel, (, ), {, return]
[getLabel, (, ), {, return, this, ., label, ;, }, public, void, setLabel, (, String, label, ), {, if, (]
[getLabel, (, ), {, return, this, ., label, ;, }, public, void, setLabel, (, String, label, ), {, if, (]
[), {, return, this, ., label, ;, }, public, void, setLabel, (, String, label, ), {, if, (, label, ==]
[., label, ;, }, public, void, setLabel, (, String, label, ), {, if, (, label, ==, null, ), {, throw]
[}, public, void, setLabel, (, String, label, ), {, if, (, label, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, String, label, ), {, if, (, label, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }]
[(, String, label, ), {, if, (, label, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }]
[{, if, (, label, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }, this, ., label, =]
[(, label, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }, this, ., label, =, label, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }, this, ., label, =, label, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'label' argument.", ), ;, }, this, ., label, =, label, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, label, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Font, getFont, (, ), {, return]
[=, label, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Font, getFont, (, ), {, return]
[getFont, (, ), {, return, this, ., font, ;, }, public, void, setFont, (, Font, font, ), {, if, (]
[getFont, (, ), {, return, this, ., font, ;, }, public, void, setFont, (, Font, font, ), {, if, (]
[), {, return, this, ., font, ;, }, public, void, setFont, (, Font, font, ), {, if, (, font, ==]
[., font, ;, }, public, void, setFont, (, Font, font, ), {, if, (, font, ==, null, ), {, throw]
[}, public, void, setFont, (, Font, font, ), {, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Font, font, ), {, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }]
[(, Font, font, ), {, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }]
[{, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, this, ., font, =]
[(, font, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, this, ., font, =, font, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, this, ., font, =, font, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, this, ., font, =, font, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, font, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getPaint, (, ), {, return]
[=, font, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getPaint, (, ), {, return]
[getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (]
[getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (]
[), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==]
[., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[}, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getAngle, (, ), {, return]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getAngle, (, ), {, return]
[public, double, getAngle, (, ), {, return, this, ., angle, ;, }, public, void, setAngle, (, double, angle, ), {]
[public, double, getAngle, (, ), {, return, this, ., angle, ;, }, public, void, setAngle, (, double, angle, ), {]
[), {, return, this, ., angle, ;, }, public, void, setAngle, (, double, angle, ), {, this, ., angle, =]
[return, this, ., angle, ;, }, public, void, setAngle, (, double, angle, ), {, this, ., angle, =, angle, ;]
[., angle, ;, }, public, void, setAngle, (, double, angle, ), {, this, ., angle, =, angle, ;, notifyListeners, (]
[}, public, void, setAngle, (, double, angle, ), {, this, ., angle, =, angle, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, angle, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getRadius, (, ), {, return]
[=, angle, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getRadius, (, ), {, return]
[getRadius, (, ), {, return, this, ., radius, ;, }, public, void, setRadius, (, double, radius, ), {, if, (]
[getRadius, (, ), {, return, this, ., radius, ;, }, public, void, setRadius, (, double, radius, ), {, if, (]
[), {, return, this, ., radius, ;, }, public, void, setRadius, (, double, radius, ), {, if, (, radius, <]
[., radius, ;, }, public, void, setRadius, (, double, radius, ), {, if, (, radius, <, 0.0, ), {, throw]
[}, public, void, setRadius, (, double, radius, ), {, if, (, radius, <, 0.0, ), {, throw, new, IllegalArgumentException, (]
[(, double, radius, ), {, if, (, radius, <, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'radius' cannot be negative.", ), ;, }]
[(, double, radius, ), {, if, (, radius, <, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'radius' cannot be negative.", ), ;, }]
[{, if, (, radius, <, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'radius' cannot be negative.", ), ;, }, this, ., radius, =]
[(, radius, <, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'radius' cannot be negative.", ), ;, }, this, ., radius, =, radius, ;]
[<, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'radius' cannot be negative.", ), ;, }, this, ., radius, =, radius, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "The 'radius' cannot be negative.", ), ;, }, this, ., radius, =, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, TextAnchor, getAnchor, (, ), {, return]
[=, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, TextAnchor, getAnchor, (, ), {, return]
[getAnchor, (, ), {, return, this, ., anchor, ;, }, public, void, setAnchor, (, TextAnchor, anchor, ), {, if, (]
[getAnchor, (, ), {, return, this, ., anchor, ;, }, public, void, setAnchor, (, TextAnchor, anchor, ), {, if, (]
[), {, return, this, ., anchor, ;, }, public, void, setAnchor, (, TextAnchor, anchor, ), {, if, (, anchor, ==]
[., anchor, ;, }, public, void, setAnchor, (, TextAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw]
[}, public, void, setAnchor, (, TextAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, TextAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }]
[(, TextAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }]
[{, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., anchor, =]
[(, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., anchor, =, anchor, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., anchor, =, anchor, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., anchor, =, anchor, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, anchor, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, isClippedToWindow, (, ), {, return]
[public, void, draw, (, Graphics2D, g2, ,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =]
[public, void, draw, (, Graphics2D, g2, ,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =]
[Graphics2D, g2, ,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =, DialPlot, ., rectangleByRadius, (]
[,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =, DialPlot, ., rectangleByRadius, (, frame, ,]
[,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =, DialPlot, ., rectangleByRadius, (, frame, ,]
[Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., radius, ,]
[Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., radius, ,]
[f, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., radius, ,, this, ., radius, ), ;, Arc2D, arc, =]
[(, frame, ,, this, ., radius, ,, this, ., radius, ), ;, Arc2D, arc, =, new, Arc2D, ., Double, (]
[,, this, ., radius, ,, this, ., radius, ), ;, Arc2D, arc, =, new, Arc2D, ., Double, (, f, ,]
[,, this, ., radius, ,, this, ., radius, ), ;, Arc2D, arc, =, new, Arc2D, ., Double, (, f, ,]
[,, this, ., radius, ), ;, Arc2D, arc, =, new, Arc2D, ., Double, (, f, ,, this, ., angle, ,]
[., radius, ), ;, Arc2D, arc, =, new, Arc2D, ., Double, (, f, ,, this, ., angle, ,, 0.0, ,]
[., radius, ), ;, Arc2D, arc, =, new, Arc2D, ., Double, (, f, ,, this, ., angle, ,, 0.0, ,]
[Arc2D, ., Double, (, f, ,, this, ., angle, ,, 0.0, ,, Arc2D, ., OPEN, ), ;, Point2D, pt, =]
[Arc2D, ., Double, (, f, ,, this, ., angle, ,, 0.0, ,, Arc2D, ., OPEN, ), ;, Point2D, pt, =]
[this, ., angle, ,, 0.0, ,, Arc2D, ., OPEN, ), ;, Point2D, pt, =, arc, ., getStartPoint, (, ), ;]
[this, ., angle, ,, 0.0, ,, Arc2D, ., OPEN, ), ;, Point2D, pt, =, arc, ., getStartPoint, (, ), ;]
[0.0, ,, Arc2D, ., OPEN, ), ;, Point2D, pt, =, arc, ., getStartPoint, (, ), ;, g2, ., setPaint, (]
[0.0, ,, Arc2D, ., OPEN, ), ;, Point2D, pt, =, arc, ., getStartPoint, (, ), ;, g2, ., setPaint, (]
[), ;, Point2D, pt, =, arc, ., getStartPoint, (, ), ;, g2, ., setPaint, (, this, ., paint, ), ;]
[), ;, Point2D, pt, =, arc, ., getStartPoint, (, ), ;, g2, ., setPaint, (, this, ., paint, ), ;]
[=, arc, ., getStartPoint, (, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setFont, (]
[=, arc, ., getStartPoint, (, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setFont, (]
[), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setFont, (, this, ., font, ), ;]
[), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setFont, (, this, ., font, ), ;]
[setPaint, (, this, ., paint, ), ;, g2, ., setFont, (, this, ., font, ), ;, TextUtilities, ., drawAlignedString, (]
[setPaint, (, this, ., paint, ), ;, g2, ., setFont, (, this, ., font, ), ;, TextUtilities, ., drawAlignedString, (]
[paint, ), ;, g2, ., setFont, (, this, ., font, ), ;, TextUtilities, ., drawAlignedString, (, this, ., label, ,]
[;, g2, ., setFont, (, this, ., font, ), ;, TextUtilities, ., drawAlignedString, (, this, ., label, ,, g2, ,]
[setFont, (, this, ., font, ), ;, TextUtilities, ., drawAlignedString, (, this, ., label, ,, g2, ,, (, float, )]
[setFont, (, this, ., font, ), ;, TextUtilities, ., drawAlignedString, (, this, ., label, ,, g2, ,, (, float, )]
[;, TextUtilities, ., drawAlignedString, (, this, ., label, ,, g2, ,, (, float, ), pt, ., getX, (, ), ,]
[drawAlignedString, (, this, ., label, ,, g2, ,, (, float, ), pt, ., getX, (, ), ,, (, float, )]
[drawAlignedString, (, this, ., label, ,, g2, ,, (, float, ), pt, ., getX, (, ), ,, (, float, )]
[g2, ,, (, float, ), pt, ., getX, (, ), ,, (, float, ), pt, ., getY, (, ), ,]
[g2, ,, (, float, ), pt, ., getX, (, ), ,, (, float, ), pt, ., getY, (, ), ,]
[getY, (, ), ,, this, ., anchor, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[getY, (, ), ,, this, ., anchor, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ,, this, ., anchor, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[anchor, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DialTextAnnotation, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, DialTextAnnotation, ), ), {, return, false, ;, }, DialTextAnnotation, that, =]
[if, (, !, (, obj, instanceof, DialTextAnnotation, ), ), {, return, false, ;, }, DialTextAnnotation, that, =, (, DialTextAnnotation, )]
[obj, instanceof, DialTextAnnotation, ), ), {, return, false, ;, }, DialTextAnnotation, that, =, (, DialTextAnnotation, ), obj, ;, if, (]
[instanceof, DialTextAnnotation, ), ), {, return, false, ;, }, DialTextAnnotation, that, =, (, DialTextAnnotation, ), obj, ;, if, (, !]
[instanceof, DialTextAnnotation, ), ), {, return, false, ;, }, DialTextAnnotation, that, =, (, DialTextAnnotation, ), obj, ;, if, (, !]
[instanceof, DialTextAnnotation, ), ), {, return, false, ;, }, DialTextAnnotation, that, =, (, DialTextAnnotation, ), obj, ;, if, (, !]
[false, ;, }, DialTextAnnotation, that, =, (, DialTextAnnotation, ), obj, ;, if, (, !, this, ., label, ., equals, (]
[false, ;, }, DialTextAnnotation, that, =, (, DialTextAnnotation, ), obj, ;, if, (, !, this, ., label, ., equals, (]
[DialTextAnnotation, ), obj, ;, if, (, !, this, ., label, ., equals, (, that, ., label, ), ), {, return]
[(, !, this, ., label, ., equals, (, that, ., label, ), ), {, return, false, ;, }, if, (]
[!, this, ., label, ., equals, (, that, ., label, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., label, ., equals, (, that, ., label, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., label, ., equals, (, that, ., label, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., label, ), ), {, return, false, ;, }, if, (, !, this, ., font, ., equals, (]
[(, that, ., label, ), ), {, return, false, ;, }, if, (, !, this, ., font, ., equals, (]
[return, false, ;, }, if, (, !, this, ., font, ., equals, (, that, ., font, ), ), {, return]
[(, !, this, ., font, ., equals, (, that, ., font, ), ), {, return, false, ;, }, if, (]
[!, this, ., font, ., equals, (, that, ., font, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., font, ., equals, (, that, ., font, ), ), {, return, false, ;, }, if, (, !]
[., equals, (, that, ., font, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., equals, (, that, ., font, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., font, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[., font, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (]
[PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (]
[PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (]
[this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, this, ., radius, !=]
[this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, this, ., radius, !=]
[paint, ), ), {, return, false, ;, }, if, (, this, ., radius, !=, that, ., radius, ), {, return]
[false, ;, }, if, (, this, ., radius, !=, that, ., radius, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., radius, !=, that, ., radius, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., radius, !=, that, ., radius, ), {, return, false, ;, }, if, (]
[(, this, ., radius, !=, that, ., radius, ), {, return, false, ;, }, if, (, this, ., angle, !=]
[(, this, ., radius, !=, that, ., radius, ), {, return, false, ;, }, if, (, this, ., angle, !=]
[., radius, ), {, return, false, ;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return]
[false, ;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (, !]
[angle, !=, that, ., angle, ), {, return, false, ;, }, if, (, !, this, ., anchor, ., equals, (]
[angle, !=, that, ., angle, ), {, return, false, ;, }, if, (, !, this, ., anchor, ., equals, (]
[return, false, ;, }, if, (, !, this, ., anchor, ., equals, (, that, ., anchor, ), ), {, return]
[if, (, !, this, ., anchor, ., equals, (, that, ., anchor, ), ), {, return, false, ;, }, return]
[if, (, !, this, ., anchor, ., equals, (, that, ., anchor, ), ), {, return, false, ;, }, return]
[., anchor, ., equals, (, that, ., anchor, ), ), {, return, false, ;, }, return, super, ., equals, (]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[(, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +]
[int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[int, result, =, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;]
[=, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =]
[=, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =]
[=, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =]
[;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =, 37, *]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =, 37, *, result, +]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =, 37, *, result, +]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =, 37, *, result, +]
[(, this, ., paint, ), ;, result, =, 37, *, result, +, this, ., font, ., hashCode, (, ), ;]
[., paint, ), ;, result, =, 37, *, result, +, this, ., font, ., hashCode, (, ), ;, result, =]
[., paint, ), ;, result, =, 37, *, result, +, this, ., font, ., hashCode, (, ), ;, result, =]
[., paint, ), ;, result, =, 37, *, result, +, this, ., font, ., hashCode, (, ), ;, result, =]
[), ;, result, =, 37, *, result, +, this, ., font, ., hashCode, (, ), ;, result, =, 37, *]
[result, =, 37, *, result, +, this, ., font, ., hashCode, (, ), ;, result, =, 37, *, result, +]
[result, =, 37, *, result, +, this, ., font, ., hashCode, (, ), ;, result, =, 37, *, result, +]
[result, =, 37, *, result, +, this, ., font, ., hashCode, (, ), ;, result, =, 37, *, result, +]
[font, ., hashCode, (, ), ;, result, =, 37, *, result, +, this, ., label, ., hashCode, (, ), ;]
[hashCode, (, ), ;, result, =, 37, *, result, +, this, ., label, ., hashCode, (, ), ;, result, =]
[hashCode, (, ), ;, result, =, 37, *, result, +, this, ., label, ., hashCode, (, ), ;, result, =]
[hashCode, (, ), ;, result, =, 37, *, result, +, this, ., label, ., hashCode, (, ), ;, result, =]
[), ;, result, =, 37, *, result, +, this, ., label, ., hashCode, (, ), ;, result, =, 37, *]
[result, =, 37, *, result, +, this, ., label, ., hashCode, (, ), ;, result, =, 37, *, result, +]
[result, =, 37, *, result, +, this, ., label, ., hashCode, (, ), ;, result, =, 37, *, result, +]
[result, =, 37, *, result, +, this, ., label, ., hashCode, (, ), ;, result, =, 37, *, result, +]
[(, ), ;, result, =, 37, *, result, +, this, ., anchor, ., hashCode, (, ), ;, long, temp, =]
[(, ), ;, result, =, 37, *, result, +, this, ., anchor, ., hashCode, (, ), ;, long, temp, =]
[=, 37, *, result, +, this, ., anchor, ., hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (]
[=, 37, *, result, +, this, ., anchor, ., hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (]
[this, ., anchor, ., hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., angle, ), ;]
[anchor, ., hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., angle, ), ;, result, =]
[anchor, ., hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., angle, ), ;, result, =]
[anchor, ., hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., angle, ), ;, result, =]
[hashCode, (, ), ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., angle, ), ;, result, =, 37, *]
[), ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., angle, ), ;, result, =, 37, *, result, +]
[temp, =, Double, ., doubleToLongBits, (, this, ., angle, ), ;, result, =, 37, *, result, +, (, int, )]
[=, Double, ., doubleToLongBits, (, this, ., angle, ), ;, result, =, 37, *, result, +, (, int, ), (]
[=, Double, ., doubleToLongBits, (, this, ., angle, ), ;, result, =, 37, *, result, +, (, int, ), (]
[., doubleToLongBits, (, this, ., angle, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[doubleToLongBits, (, this, ., angle, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[doubleToLongBits, (, this, ., angle, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[angle, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[(, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., radius, ), ;]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., radius, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., radius, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., radius, ), ;, result, =]
[>, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., radius, ), ;, result, =, 37, *]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., radius, ), ;, result, =, 37, *, result, +]
[temp, =, Double, ., doubleToLongBits, (, this, ., radius, ), ;, result, =, 37, *, result, +, (, int, )]
[=, Double, ., doubleToLongBits, (, this, ., radius, ), ;, result, =, 37, *, result, +, (, int, ), (]
[=, Double, ., doubleToLongBits, (, this, ., radius, ), ;, result, =, 37, *, result, +, (, int, ), (]
[., doubleToLongBits, (, this, ., radius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[doubleToLongBits, (, this, ., radius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[doubleToLongBits, (, this, ., radius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[radius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >]
[37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, return]
[>, >, >, 32, ), ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[>, >, >, 32, ), ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[(, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[(, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,]
[this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (]
