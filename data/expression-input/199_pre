[private, final, LinkedList, <, Object, >, elements, ;, public, ReturnsElementsOf, (, Collection, <, ?, >, elements, ), {, if, (]
[private, final, LinkedList, <, Object, >, elements, ;, public, ReturnsElementsOf, (, Collection, <, ?, >, elements, ), {, if, (]
[LinkedList, <, Object, >, elements, ;, public, ReturnsElementsOf, (, Collection, <, ?, >, elements, ), {, if, (, elements, ==]
[elements, ;, public, ReturnsElementsOf, (, Collection, <, ?, >, elements, ), {, if, (, elements, ==, null, ), {, throw]
[ReturnsElementsOf, (, Collection, <, ?, >, elements, ), {, if, (, elements, ==, null, ), {, throw, new, MockitoException, (]
[ReturnsElementsOf, (, Collection, <, ?, >, elements, ), {, if, (, elements, ==, null, ), {, throw, new, MockitoException, (]
[Collection, <, ?, >, elements, ), {, if, (, elements, ==, null, ), {, throw, new, MockitoException, (, "ReturnsElementsOf does not accept null as constructor argument.\n", +]
[elements, ), {, if, (, elements, ==, null, ), {, throw, new, MockitoException, (, "ReturnsElementsOf does not accept null as constructor argument.\n", +, "Please pass a collection instance", ), ;, }]
[elements, ), {, if, (, elements, ==, null, ), {, throw, new, MockitoException, (, "ReturnsElementsOf does not accept null as constructor argument.\n", +, "Please pass a collection instance", ), ;, }]
[(, elements, ==, null, ), {, throw, new, MockitoException, (, "ReturnsElementsOf does not accept null as constructor argument.\n", +, "Please pass a collection instance", ), ;, }, this, ., elements, =]
[throw, new, MockitoException, (, "ReturnsElementsOf does not accept null as constructor argument.\n", +, "Please pass a collection instance", ), ;, }, this, ., elements, =, new, LinkedList, <, Object, >, (]
[<, Object, >, (, elements, ), ;, }, public, Object, answer, (, InvocationOnMock, invocation, ), throws, Throwable, {, if, (]
[<, Object, >, (, elements, ), ;, }, public, Object, answer, (, InvocationOnMock, invocation, ), throws, Throwable, {, if, (]
[<, Object, >, (, elements, ), ;, }, public, Object, answer, (, InvocationOnMock, invocation, ), throws, Throwable, {, if, (]
[;, }, public, Object, answer, (, InvocationOnMock, invocation, ), throws, Throwable, {, if, (, elements, ., size, (, ), ==]
[Object, answer, (, InvocationOnMock, invocation, ), throws, Throwable, {, if, (, elements, ., size, (, ), ==, 1, ), return]
[Object, answer, (, InvocationOnMock, invocation, ), throws, Throwable, {, if, (, elements, ., size, (, ), ==, 1, ), return]
[invocation, ), throws, Throwable, {, if, (, elements, ., size, (, ), ==, 1, ), return, elements, ., get, (]
[if, (, elements, ., size, (, ), ==, 1, ), return, elements, ., get, (, 0, ), ;, else, return]
[if, (, elements, ., size, (, ), ==, 1, ), return, elements, ., get, (, 0, ), ;, else, return]
