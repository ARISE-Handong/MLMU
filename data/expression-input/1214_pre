[HeatMapUtilities, {, public, static, XYDataset, extractRowFromHeatMapDataset, (, HeatMapDataset, dataset, ,, int, row, ,, Comparable, seriesName, ), {, XYSeries, series, =]
[static, XYDataset, extractRowFromHeatMapDataset, (, HeatMapDataset, dataset, ,, int, row, ,, Comparable, seriesName, ), {, XYSeries, series, =, new, XYSeries, (]
[,, int, row, ,, Comparable, seriesName, ), {, XYSeries, series, =, new, XYSeries, (, seriesName, ), ;, int, cols, =]
[,, int, row, ,, Comparable, seriesName, ), {, XYSeries, series, =, new, XYSeries, (, seriesName, ), ;, int, cols, =]
[new, XYSeries, (, seriesName, ), ;, int, cols, =, dataset, ., getXSampleCount, (, ), ;, for, (, int, c, =]
[(, seriesName, ), ;, int, cols, =, dataset, ., getXSampleCount, (, ), ;, for, (, int, c, =, 0, ;]
[(, seriesName, ), ;, int, cols, =, dataset, ., getXSampleCount, (, ), ;, for, (, int, c, =, 0, ;]
[), ;, int, cols, =, dataset, ., getXSampleCount, (, ), ;, for, (, int, c, =, 0, ;, c, <]
[int, cols, =, dataset, ., getXSampleCount, (, ), ;, for, (, int, c, =, 0, ;, c, <, cols, ;]
[int, cols, =, dataset, ., getXSampleCount, (, ), ;, for, (, int, c, =, 0, ;, c, <, cols, ;]
[., getXSampleCount, (, ), ;, for, (, int, c, =, 0, ;, c, <, cols, ;, c, ++, ), {]
[., getXSampleCount, (, ), ;, for, (, int, c, =, 0, ;, c, <, cols, ;, c, ++, ), {]
[;, for, (, int, c, =, 0, ;, c, <, cols, ;, c, ++, ), {, series, ., add, (]
[;, for, (, int, c, =, 0, ;, c, <, cols, ;, c, ++, ), {, series, ., add, (]
[c, =, 0, ;, c, <, cols, ;, c, ++, ), {, series, ., add, (, dataset, ., getXValue, (]
[;, c, <, cols, ;, c, ++, ), {, series, ., add, (, dataset, ., getXValue, (, c, ), ,]
[;, c, <, cols, ;, c, ++, ), {, series, ., add, (, dataset, ., getXValue, (, c, ), ,]
[;, c, ++, ), {, series, ., add, (, dataset, ., getXValue, (, c, ), ,, dataset, ., getZValue, (]
[++, ), {, series, ., add, (, dataset, ., getXValue, (, c, ), ,, dataset, ., getZValue, (, c, ,]
[., getXValue, (, c, ), ,, dataset, ., getZValue, (, c, ,, row, ), ), ;, }, XYSeriesCollection, result, =]
[c, ), ,, dataset, ., getZValue, (, c, ,, row, ), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (]
[., getZValue, (, c, ,, row, ), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, ), ;, return]
[;, }, public, static, XYDataset, extractColumnFromHeatMapDataset, (, HeatMapDataset, dataset, ,, int, column, ,, Comparable, seriesName, ), {, XYSeries, series, =]
[static, XYDataset, extractColumnFromHeatMapDataset, (, HeatMapDataset, dataset, ,, int, column, ,, Comparable, seriesName, ), {, XYSeries, series, =, new, XYSeries, (]
[,, int, column, ,, Comparable, seriesName, ), {, XYSeries, series, =, new, XYSeries, (, seriesName, ), ;, int, rows, =]
[,, int, column, ,, Comparable, seriesName, ), {, XYSeries, series, =, new, XYSeries, (, seriesName, ), ;, int, rows, =]
[new, XYSeries, (, seriesName, ), ;, int, rows, =, dataset, ., getYSampleCount, (, ), ;, for, (, int, r, =]
[(, seriesName, ), ;, int, rows, =, dataset, ., getYSampleCount, (, ), ;, for, (, int, r, =, 0, ;]
[(, seriesName, ), ;, int, rows, =, dataset, ., getYSampleCount, (, ), ;, for, (, int, r, =, 0, ;]
[), ;, int, rows, =, dataset, ., getYSampleCount, (, ), ;, for, (, int, r, =, 0, ;, r, <]
[int, rows, =, dataset, ., getYSampleCount, (, ), ;, for, (, int, r, =, 0, ;, r, <, rows, ;]
[int, rows, =, dataset, ., getYSampleCount, (, ), ;, for, (, int, r, =, 0, ;, r, <, rows, ;]
[., getYSampleCount, (, ), ;, for, (, int, r, =, 0, ;, r, <, rows, ;, r, ++, ), {]
[., getYSampleCount, (, ), ;, for, (, int, r, =, 0, ;, r, <, rows, ;, r, ++, ), {]
[;, for, (, int, r, =, 0, ;, r, <, rows, ;, r, ++, ), {, series, ., add, (]
[;, for, (, int, r, =, 0, ;, r, <, rows, ;, r, ++, ), {, series, ., add, (]
[r, =, 0, ;, r, <, rows, ;, r, ++, ), {, series, ., add, (, dataset, ., getYValue, (]
[;, r, <, rows, ;, r, ++, ), {, series, ., add, (, dataset, ., getYValue, (, r, ), ,]
[;, r, <, rows, ;, r, ++, ), {, series, ., add, (, dataset, ., getYValue, (, r, ), ,]
[;, r, ++, ), {, series, ., add, (, dataset, ., getYValue, (, r, ), ,, dataset, ., getZValue, (]
[++, ), {, series, ., add, (, dataset, ., getYValue, (, r, ), ,, dataset, ., getZValue, (, column, ,]
[., getYValue, (, r, ), ,, dataset, ., getZValue, (, column, ,, r, ), ), ;, }, XYSeriesCollection, result, =]
[r, ), ,, dataset, ., getZValue, (, column, ,, r, ), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (]
[., getZValue, (, column, ,, r, ), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, ), ;, return]
[), ;, return, result, ;, }, public, static, BufferedImage, createHeatMapImage, (, HeatMapDataset, dataset, ,, PaintScale, paintScale, ), {, if, (]
[), ;, return, result, ;, }, public, static, BufferedImage, createHeatMapImage, (, HeatMapDataset, dataset, ,, PaintScale, paintScale, ), {, if, (]
[return, result, ;, }, public, static, BufferedImage, createHeatMapImage, (, HeatMapDataset, dataset, ,, PaintScale, paintScale, ), {, if, (, dataset, ==]
[public, static, BufferedImage, createHeatMapImage, (, HeatMapDataset, dataset, ,, PaintScale, paintScale, ), {, if, (, dataset, ==, null, ), {, throw]
[createHeatMapImage, (, HeatMapDataset, dataset, ,, PaintScale, paintScale, ), {, if, (, dataset, ==, null, ), {, throw, new, IllegalArgumentException, (]
[paintScale, ), {, if, (, dataset, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, if, (]
[paintScale, ), {, if, (, dataset, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, if, (]
[{, if, (, dataset, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, if, (, paintScale, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, if, (, paintScale, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, if, (, paintScale, ==, null, ), {, throw, new, IllegalArgumentException, (]
[;, }, if, (, paintScale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paintScale' argument.", ), ;, }, int, xCount, =]
[;, }, if, (, paintScale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paintScale' argument.", ), ;, }, int, xCount, =]
[throw, new, IllegalArgumentException, (, "Null 'paintScale' argument.", ), ;, }, int, xCount, =, dataset, ., getXSampleCount, (, ), ;, int, yCount, =]
[throw, new, IllegalArgumentException, (, "Null 'paintScale' argument.", ), ;, }, int, xCount, =, dataset, ., getXSampleCount, (, ), ;, int, yCount, =]
[xCount, =, dataset, ., getXSampleCount, (, ), ;, int, yCount, =, dataset, ., getYSampleCount, (, ), ;, BufferedImage, image, =]
[., getXSampleCount, (, ), ;, int, yCount, =, dataset, ., getYSampleCount, (, ), ;, BufferedImage, image, =, new, BufferedImage, (]
[(, ), ;, int, yCount, =, dataset, ., getYSampleCount, (, ), ;, BufferedImage, image, =, new, BufferedImage, (, xCount, ,]
[;, int, yCount, =, dataset, ., getYSampleCount, (, ), ;, BufferedImage, image, =, new, BufferedImage, (, xCount, ,, yCount, ,]
[;, int, yCount, =, dataset, ., getYSampleCount, (, ), ;, BufferedImage, image, =, new, BufferedImage, (, xCount, ,, yCount, ,]
[), ;, BufferedImage, image, =, new, BufferedImage, (, xCount, ,, yCount, ,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =]
[), ;, BufferedImage, image, =, new, BufferedImage, (, xCount, ,, yCount, ,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =]
[,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, image, ., createGraphics, (, ), ;, for, (, int, xIndex, =]
[., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, image, ., createGraphics, (, ), ;, for, (, int, xIndex, =, 0, ;]
[., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, image, ., createGraphics, (, ), ;, for, (, int, xIndex, =, 0, ;]
[), ;, Graphics2D, g2, =, image, ., createGraphics, (, ), ;, for, (, int, xIndex, =, 0, ;, xIndex, <]
[Graphics2D, g2, =, image, ., createGraphics, (, ), ;, for, (, int, xIndex, =, 0, ;, xIndex, <, xCount, ;]
[Graphics2D, g2, =, image, ., createGraphics, (, ), ;, for, (, int, xIndex, =, 0, ;, xIndex, <, xCount, ;]
[for, (, int, xIndex, =, 0, ;, xIndex, <, xCount, ;, xIndex, ++, ), {, for, (, int, yIndex, =]
[int, xIndex, =, 0, ;, xIndex, <, xCount, ;, xIndex, ++, ), {, for, (, int, yIndex, =, 0, ;]
[int, xIndex, =, 0, ;, xIndex, <, xCount, ;, xIndex, ++, ), {, for, (, int, yIndex, =, 0, ;]
[=, 0, ;, xIndex, <, xCount, ;, xIndex, ++, ), {, for, (, int, yIndex, =, 0, ;, yIndex, <]
[;, xIndex, <, xCount, ;, xIndex, ++, ), {, for, (, int, yIndex, =, 0, ;, yIndex, <, yCount, ;]
[;, xIndex, <, xCount, ;, xIndex, ++, ), {, for, (, int, yIndex, =, 0, ;, yIndex, <, yCount, ;]
[), {, for, (, int, yIndex, =, 0, ;, yIndex, <, yCount, ;, yIndex, ++, ), {, double, z, =]
[), {, for, (, int, yIndex, =, 0, ;, yIndex, <, yCount, ;, yIndex, ++, ), {, double, z, =]
[int, yIndex, =, 0, ;, yIndex, <, yCount, ;, yIndex, ++, ), {, double, z, =, dataset, ., getZValue, (]
[=, 0, ;, yIndex, <, yCount, ;, yIndex, ++, ), {, double, z, =, dataset, ., getZValue, (, xIndex, ,]
[;, yIndex, ++, ), {, double, z, =, dataset, ., getZValue, (, xIndex, ,, yIndex, ), ;, Paint, p, =]
[;, yIndex, ++, ), {, double, z, =, dataset, ., getZValue, (, xIndex, ,, yIndex, ), ;, Paint, p, =]
[{, double, z, =, dataset, ., getZValue, (, xIndex, ,, yIndex, ), ;, Paint, p, =, paintScale, ., getPaint, (]
[=, dataset, ., getZValue, (, xIndex, ,, yIndex, ), ;, Paint, p, =, paintScale, ., getPaint, (, z, ), ;]
[=, dataset, ., getZValue, (, xIndex, ,, yIndex, ), ;, Paint, p, =, paintScale, ., getPaint, (, z, ), ;]
[(, xIndex, ,, yIndex, ), ;, Paint, p, =, paintScale, ., getPaint, (, z, ), ;, g2, ., setPaint, (]
[yIndex, ), ;, Paint, p, =, paintScale, ., getPaint, (, z, ), ;, g2, ., setPaint, (, p, ), ;]
[yIndex, ), ;, Paint, p, =, paintScale, ., getPaint, (, z, ), ;, g2, ., setPaint, (, p, ), ;]
[p, =, paintScale, ., getPaint, (, z, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fillRect, (]
[paintScale, ., getPaint, (, z, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fillRect, (, xIndex, ,]
[paintScale, ., getPaint, (, z, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fillRect, (, xIndex, ,]
[paintScale, ., getPaint, (, z, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fillRect, (, xIndex, ,]
[getPaint, (, z, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fillRect, (, xIndex, ,, yCount, -]
[z, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fillRect, (, xIndex, ,, yCount, -, yIndex, -]
[;, g2, ., setPaint, (, p, ), ;, g2, ., fillRect, (, xIndex, ,, yCount, -, yIndex, -, 1, ,]
[., setPaint, (, p, ), ;, g2, ., fillRect, (, xIndex, ,, yCount, -, yIndex, -, 1, ,, 1, ,]
[g2, ., fillRect, (, xIndex, ,, yCount, -, yIndex, -, 1, ,, 1, ,, 1, ), ;, }, }, return]
