[;, import, java, ., util, ., Deque, ;, public, class, JsonMLAst, implements, SourceAst, {, private, static, final, long, serialVersionUID, =]
[public, class, JsonMLAst, implements, SourceAst, {, private, static, final, long, serialVersionUID, =, 1L, ;, private, static, final, String, DEFAULT_SOURCE_NAME, =]
[Node, root, ;, private, final, SourceFile, sourceFile, ;, private, final, InputId, inputId, ;, public, JsonMLAst, (, JsonML, jsonml, ), {]
[Node, root, ;, private, final, SourceFile, sourceFile, ;, private, final, InputId, inputId, ;, public, JsonMLAst, (, JsonML, jsonml, ), {]
[final, SourceFile, sourceFile, ;, private, final, InputId, inputId, ;, public, JsonMLAst, (, JsonML, jsonml, ), {, this, ., jsonml, =]
[sourceFile, ;, private, final, InputId, inputId, ;, public, JsonMLAst, (, JsonML, jsonml, ), {, this, ., jsonml, =, jsonml, ;]
[sourceFile, ;, private, final, InputId, inputId, ;, public, JsonMLAst, (, JsonML, jsonml, ), {, this, ., jsonml, =, jsonml, ;]
[InputId, inputId, ;, public, JsonMLAst, (, JsonML, jsonml, ), {, this, ., jsonml, =, jsonml, ;, this, ., inputId, =]
[public, JsonMLAst, (, JsonML, jsonml, ), {, this, ., jsonml, =, jsonml, ;, this, ., inputId, =, new, InputId, (]
[), {, this, ., jsonml, =, jsonml, ;, this, ., inputId, =, new, InputId, (, getSourceName, (, ), ), ;]
[), {, this, ., jsonml, =, jsonml, ;, this, ., inputId, =, new, InputId, (, getSourceName, (, ), ), ;]
[jsonml, =, jsonml, ;, this, ., inputId, =, new, InputId, (, getSourceName, (, ), ), ;, this, ., sourceFile, =]
[;, this, ., inputId, =, new, InputId, (, getSourceName, (, ), ), ;, this, ., sourceFile, =, new, SourceFile, (]
[., sourceFile, =, new, SourceFile, (, getSourceName, (, ), ), ;, }, @, Override, public, void, clearAst, (, ), {]
[=, new, SourceFile, (, getSourceName, (, ), ), ;, }, @, Override, public, void, clearAst, (, ), {, root, =]
[(, ), {, root, =, null, ;, }, @, Override, public, Node, getAstRoot, (, AbstractCompiler, compiler, ), {, if, (]
[(, ), {, root, =, null, ;, }, @, Override, public, Node, getAstRoot, (, AbstractCompiler, compiler, ), {, if, (]
[{, root, =, null, ;, }, @, Override, public, Node, getAstRoot, (, AbstractCompiler, compiler, ), {, if, (, root, ==]
[null, ;, }, @, Override, public, Node, getAstRoot, (, AbstractCompiler, compiler, ), {, if, (, root, ==, null, ), {]
[}, @, Override, public, Node, getAstRoot, (, AbstractCompiler, compiler, ), {, if, (, root, ==, null, ), {, createAst, (]
[getAstRoot, (, AbstractCompiler, compiler, ), {, if, (, root, ==, null, ), {, createAst, (, compiler, ), ;, }, return]
[{, createAst, (, compiler, ), ;, }, return, root, ;, }, @, Override, public, SourceFile, getSourceFile, (, ), {, return]
[SourceFile, getSourceFile, (, ), {, return, null, ;, }, @, Override, public, void, setSourceFile, (, SourceFile, file, ), {, throw]
[), {, return, null, ;, }, @, Override, public, void, setSourceFile, (, SourceFile, file, ), {, throw, new, UnsupportedOperationException, (]
[file, ), {, throw, new, UnsupportedOperationException, (, "JsonMLAst cannot be associated with a SourceFile instance.", ), ;, }, public, String, getSourceName, (, ), {, Object, obj, =]
[file, ), {, throw, new, UnsupportedOperationException, (, "JsonMLAst cannot be associated with a SourceFile instance.", ), ;, }, public, String, getSourceName, (, ), {, Object, obj, =]
[new, UnsupportedOperationException, (, "JsonMLAst cannot be associated with a SourceFile instance.", ), ;, }, public, String, getSourceName, (, ), {, Object, obj, =, jsonml, ., getAttribute, (]
[new, UnsupportedOperationException, (, "JsonMLAst cannot be associated with a SourceFile instance.", ), ;, }, public, String, getSourceName, (, ), {, Object, obj, =, jsonml, ., getAttribute, (]
[public, String, getSourceName, (, ), {, Object, obj, =, jsonml, ., getAttribute, (, TagAttr, ., SOURCE, ), ;, if, (]
[public, String, getSourceName, (, ), {, Object, obj, =, jsonml, ., getAttribute, (, TagAttr, ., SOURCE, ), ;, if, (]
[Object, obj, =, jsonml, ., getAttribute, (, TagAttr, ., SOURCE, ), ;, if, (, obj, instanceof, String, ), {, return]
[jsonml, ., getAttribute, (, TagAttr, ., SOURCE, ), ;, if, (, obj, instanceof, String, ), {, return, (, String, )]
[SOURCE, ), ;, if, (, obj, instanceof, String, ), {, return, (, String, ), obj, ;, }, else, {, return]
[;, }, else, {, return, DEFAULT_SOURCE_NAME, ;, }, }, private, void, createAst, (, AbstractCompiler, compiler, ), {, Reader, translator, =]
[DEFAULT_SOURCE_NAME, ;, }, }, private, void, createAst, (, AbstractCompiler, compiler, ), {, Reader, translator, =, new, Reader, (, ), ;]
[DEFAULT_SOURCE_NAME, ;, }, }, private, void, createAst, (, AbstractCompiler, compiler, ), {, Reader, translator, =, new, Reader, (, ), ;]
[private, void, createAst, (, AbstractCompiler, compiler, ), {, Reader, translator, =, new, Reader, (, ), ;, translator, ., setRootElement, (]
[compiler, ), {, Reader, translator, =, new, Reader, (, ), ;, translator, ., setRootElement, (, jsonml, ), ;, try, {]
[{, Reader, translator, =, new, Reader, (, ), ;, translator, ., setRootElement, (, jsonml, ), ;, try, {, root, =]
[{, Reader, translator, =, new, Reader, (, ), ;, translator, ., setRootElement, (, jsonml, ), ;, try, {, root, =]
[new, Reader, (, ), ;, translator, ., setRootElement, (, jsonml, ), ;, try, {, root, =, translator, ., parse, (]
[), ;, translator, ., setRootElement, (, jsonml, ), ;, try, {, root, =, translator, ., parse, (, compiler, ), ;]
[), ;, translator, ., setRootElement, (, jsonml, ), ;, try, {, root, =, translator, ., parse, (, compiler, ), ;]
[setRootElement, (, jsonml, ), ;, try, {, root, =, translator, ., parse, (, compiler, ), ;, root, ., setInputId, (]
[), ;, try, {, root, =, translator, ., parse, (, compiler, ), ;, root, ., setInputId, (, inputId, ), ;]
[), ;, try, {, root, =, translator, ., parse, (, compiler, ), ;, root, ., setInputId, (, inputId, ), ;]
[root, =, translator, ., parse, (, compiler, ), ;, root, ., setInputId, (, inputId, ), ;, root, ., setStaticSourceFile, (]
[., parse, (, compiler, ), ;, root, ., setInputId, (, inputId, ), ;, root, ., setStaticSourceFile, (, sourceFile, ), ;]
[., parse, (, compiler, ), ;, root, ., setInputId, (, inputId, ), ;, root, ., setStaticSourceFile, (, sourceFile, ), ;]
[., setInputId, (, inputId, ), ;, root, ., setStaticSourceFile, (, sourceFile, ), ;, new, AstValidator, (, ), ., validateScript, (]
[root, ), ;, }, catch, (, JsonMLException, e, ), {, }, }, public, JsonML, convertToJsonML, (, ), {, if, (]
[root, ), ;, }, catch, (, JsonMLException, e, ), {, }, }, public, JsonML, convertToJsonML, (, ), {, if, (]
[;, }, catch, (, JsonMLException, e, ), {, }, }, public, JsonML, convertToJsonML, (, ), {, if, (, root, !=]
[), {, }, }, public, JsonML, convertToJsonML, (, ), {, if, (, root, !=, null, ), {, Writer, converter, =]
[convertToJsonML, (, ), {, if, (, root, !=, null, ), {, Writer, converter, =, new, Writer, (, ), ;, return]
[convertToJsonML, (, ), {, if, (, root, !=, null, ), {, Writer, converter, =, new, Writer, (, ), ;, return]
[if, (, root, !=, null, ), {, Writer, converter, =, new, Writer, (, ), ;, return, converter, ., processAst, (]
[), {, Writer, converter, =, new, Writer, (, ), ;, return, converter, ., processAst, (, root, ), ;, }, return]
[converter, ., processAst, (, root, ), ;, }, return, null, ;, }, public, JsonML, getElementPreOrder, (, int, n, ), {]
[converter, ., processAst, (, root, ), ;, }, return, null, ;, }, public, JsonML, getElementPreOrder, (, int, n, ), {]
[root, ), ;, }, return, null, ;, }, public, JsonML, getElementPreOrder, (, int, n, ), {, Preconditions, ., checkState, (]
[root, ), ;, }, return, null, ;, }, public, JsonML, getElementPreOrder, (, int, n, ), {, Preconditions, ., checkState, (]
[;, }, return, null, ;, }, public, JsonML, getElementPreOrder, (, int, n, ), {, Preconditions, ., checkState, (, jsonml, !=]
[}, public, JsonML, getElementPreOrder, (, int, n, ), {, Preconditions, ., checkState, (, jsonml, !=, null, ), ;, if, (]
[}, public, JsonML, getElementPreOrder, (, int, n, ), {, Preconditions, ., checkState, (, jsonml, !=, null, ), ;, if, (]
[JsonML, getElementPreOrder, (, int, n, ), {, Preconditions, ., checkState, (, jsonml, !=, null, ), ;, if, (, n, ==]
[n, ), {, Preconditions, ., checkState, (, jsonml, !=, null, ), ;, if, (, n, ==, 0, ), {, return]
[null, ), ;, if, (, n, ==, 0, ), {, return, jsonml, ;, }, Deque, <, WalkHelper, >, stack, =]
[), {, return, jsonml, ;, }, Deque, <, WalkHelper, >, stack, =, new, ArrayDeque, <, WalkHelper, >, (, ), ;]
[), {, return, jsonml, ;, }, Deque, <, WalkHelper, >, stack, =, new, ArrayDeque, <, WalkHelper, >, (, ), ;]
[;, }, Deque, <, WalkHelper, >, stack, =, new, ArrayDeque, <, WalkHelper, >, (, ), ;, stack, ., push, (]
[<, WalkHelper, >, stack, =, new, ArrayDeque, <, WalkHelper, >, (, ), ;, stack, ., push, (, new, WalkHelper, (]
[>, stack, =, new, ArrayDeque, <, WalkHelper, >, (, ), ;, stack, ., push, (, new, WalkHelper, (, jsonml, ,]
[>, (, ), ;, stack, ., push, (, new, WalkHelper, (, jsonml, ,, 0, ), ), ;, int, i, =]
[stack, ., push, (, new, WalkHelper, (, jsonml, ,, 0, ), ), ;, int, i, =, 0, ;, while, (]
[stack, ., push, (, new, WalkHelper, (, jsonml, ,, 0, ), ), ;, int, i, =, 0, ;, while, (]
[stack, ., push, (, new, WalkHelper, (, jsonml, ,, 0, ), ), ;, int, i, =, 0, ;, while, (]
[push, (, new, WalkHelper, (, jsonml, ,, 0, ), ), ;, int, i, =, 0, ;, while, (, i, <=]
[new, WalkHelper, (, jsonml, ,, 0, ), ), ;, int, i, =, 0, ;, while, (, i, <=, n, &&]
[WalkHelper, (, jsonml, ,, 0, ), ), ;, int, i, =, 0, ;, while, (, i, <=, n, &&, !]
[WalkHelper, (, jsonml, ,, 0, ), ), ;, int, i, =, 0, ;, while, (, i, <=, n, &&, !]
[=, 0, ;, while, (, i, <=, n, &&, !, stack, ., isEmpty, (, ), ), {, WalkHelper, current, =]
[=, 0, ;, while, (, i, <=, n, &&, !, stack, ., isEmpty, (, ), ), {, WalkHelper, current, =]
[!, stack, ., isEmpty, (, ), ), {, WalkHelper, current, =, stack, ., pop, (, ), ;, JsonML, element, =]
[!, stack, ., isEmpty, (, ), ), {, WalkHelper, current, =, stack, ., pop, (, ), ;, JsonML, element, =]
[{, WalkHelper, current, =, stack, ., pop, (, ), ;, JsonML, element, =, current, ., element, ;, Integer, childno, =]
[{, WalkHelper, current, =, stack, ., pop, (, ), ;, JsonML, element, =, current, ., element, ;, Integer, childno, =]
[pop, (, ), ;, JsonML, element, =, current, ., element, ;, Integer, childno, =, current, ., childno, ;, if, (]
[pop, (, ), ;, JsonML, element, =, current, ., element, ;, Integer, childno, =, current, ., childno, ;, if, (]
[), ;, JsonML, element, =, current, ., element, ;, Integer, childno, =, current, ., childno, ;, if, (, childno, <]
[), ;, JsonML, element, =, current, ., element, ;, Integer, childno, =, current, ., childno, ;, if, (, childno, <]
[element, ;, Integer, childno, =, current, ., childno, ;, if, (, childno, <, element, ., childrenSize, (, ), ), {]
[element, ;, Integer, childno, =, current, ., childno, ;, if, (, childno, <, element, ., childrenSize, (, ), ), {]
[=, current, ., childno, ;, if, (, childno, <, element, ., childrenSize, (, ), ), {, stack, ., push, (]
[childno, ;, if, (, childno, <, element, ., childrenSize, (, ), ), {, stack, ., push, (, new, WalkHelper, (]
[if, (, childno, <, element, ., childrenSize, (, ), ), {, stack, ., push, (, new, WalkHelper, (, element, ,]
[if, (, childno, <, element, ., childrenSize, (, ), ), {, stack, ., push, (, new, WalkHelper, (, element, ,]
[childno, <, element, ., childrenSize, (, ), ), {, stack, ., push, (, new, WalkHelper, (, element, ,, childno, +]
[childrenSize, (, ), ), {, stack, ., push, (, new, WalkHelper, (, element, ,, childno, +, 1, ), ), ;]
[childrenSize, (, ), ), {, stack, ., push, (, new, WalkHelper, (, element, ,, childno, +, 1, ), ), ;]
[), {, stack, ., push, (, new, WalkHelper, (, element, ,, childno, +, 1, ), ), ;, i, ++, ;]
[stack, ., push, (, new, WalkHelper, (, element, ,, childno, +, 1, ), ), ;, i, ++, ;, element, =]
[stack, ., push, (, new, WalkHelper, (, element, ,, childno, +, 1, ), ), ;, i, ++, ;, element, =]
[new, WalkHelper, (, element, ,, childno, +, 1, ), ), ;, i, ++, ;, element, =, element, ., getChild, (]
[childno, +, 1, ), ), ;, i, ++, ;, element, =, element, ., getChild, (, childno, ), ;, if, (]
[childno, +, 1, ), ), ;, i, ++, ;, element, =, element, ., getChild, (, childno, ), ;, if, (]
[1, ), ), ;, i, ++, ;, element, =, element, ., getChild, (, childno, ), ;, if, (, i, ==]
[i, ++, ;, element, =, element, ., getChild, (, childno, ), ;, if, (, i, ==, n, ), {, return]
[element, =, element, ., getChild, (, childno, ), ;, if, (, i, ==, n, ), {, return, element, ;, }]
[element, =, element, ., getChild, (, childno, ), ;, if, (, i, ==, n, ), {, return, element, ;, }]
[getChild, (, childno, ), ;, if, (, i, ==, n, ), {, return, element, ;, }, stack, ., push, (]
[), ;, if, (, i, ==, n, ), {, return, element, ;, }, stack, ., push, (, new, WalkHelper, (]
[if, (, i, ==, n, ), {, return, element, ;, }, stack, ., push, (, new, WalkHelper, (, element, ,]
[return, element, ;, }, stack, ., push, (, new, WalkHelper, (, element, ,, 0, ), ), ;, }, }, return]
[class, WalkHelper, {, final, JsonML, element, ;, final, int, childno, ;, WalkHelper, (, JsonML, element, ,, int, childno, ), {]
[class, WalkHelper, {, final, JsonML, element, ;, final, int, childno, ;, WalkHelper, (, JsonML, element, ,, int, childno, ), {]
[JsonML, element, ;, final, int, childno, ;, WalkHelper, (, JsonML, element, ,, int, childno, ), {, this, ., element, =]
[;, final, int, childno, ;, WalkHelper, (, JsonML, element, ,, int, childno, ), {, this, ., element, =, element, ;]
[;, final, int, childno, ;, WalkHelper, (, JsonML, element, ,, int, childno, ), {, this, ., element, =, element, ;]
[;, WalkHelper, (, JsonML, element, ,, int, childno, ), {, this, ., element, =, element, ;, this, ., childno, =]
[=, element, ;, this, ., childno, =, childno, ;, }, }, @, Override, public, InputId, getInputId, (, ), {, return]
