[FastScatterPlot, extends, Plot, implements, ValueAxisPlot, ,, Pannable, ,, Zoomable, ,, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[Zoomable, ,, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, 7871545897358563521L, ;, public, static, final, Stroke, DEFAULT_GRIDLINE_STROKE, =]
[,, Serializable, {, private, static, final, long, serialVersionUID, =, 7871545897358563521L, ;, public, static, final, Stroke, DEFAULT_GRIDLINE_STROKE, =, new, BasicStroke, (]
[{, private, static, final, long, serialVersionUID, =, 7871545897358563521L, ;, public, static, final, Stroke, DEFAULT_GRIDLINE_STROKE, =, new, BasicStroke, (, 0.5f, ,]
[{, private, static, final, long, serialVersionUID, =, 7871545897358563521L, ;, public, static, final, Stroke, DEFAULT_GRIDLINE_STROKE, =, new, BasicStroke, (, 0.5f, ,]
[long, serialVersionUID, =, 7871545897358563521L, ;, public, static, final, Stroke, DEFAULT_GRIDLINE_STROKE, =, new, BasicStroke, (, 0.5f, ,, BasicStroke, ., CAP_BUTT, ,]
[long, serialVersionUID, =, 7871545897358563521L, ;, public, static, final, Stroke, DEFAULT_GRIDLINE_STROKE, =, new, BasicStroke, (, 0.5f, ,, BasicStroke, ., CAP_BUTT, ,]
[;, public, static, final, Stroke, DEFAULT_GRIDLINE_STROKE, =, new, BasicStroke, (, 0.5f, ,, BasicStroke, ., CAP_BUTT, ,, BasicStroke, ., JOIN_BEVEL, ,]
[static, final, Stroke, DEFAULT_GRIDLINE_STROKE, =, new, BasicStroke, (, 0.5f, ,, BasicStroke, ., CAP_BUTT, ,, BasicStroke, ., JOIN_BEVEL, ,, 0.0f, ,]
[=, new, BasicStroke, (, 0.5f, ,, BasicStroke, ., CAP_BUTT, ,, BasicStroke, ., JOIN_BEVEL, ,, 0.0f, ,, new, float, [, ]]
[new, BasicStroke, (, 0.5f, ,, BasicStroke, ., CAP_BUTT, ,, BasicStroke, ., JOIN_BEVEL, ,, 0.0f, ,, new, float, [, ], {]
[(, 0.5f, ,, BasicStroke, ., CAP_BUTT, ,, BasicStroke, ., JOIN_BEVEL, ,, 0.0f, ,, new, float, [, ], {, 2.0f, ,]
[BasicStroke, ., CAP_BUTT, ,, BasicStroke, ., JOIN_BEVEL, ,, 0.0f, ,, new, float, [, ], {, 2.0f, ,, 2.0f, }, ,]
[,, new, float, [, ], {, 2.0f, ,, 2.0f, }, ,, 0.0f, ), ;, public, static, final, Paint, DEFAULT_GRIDLINE_PAINT, =]
[,, new, float, [, ], {, 2.0f, ,, 2.0f, }, ,, 0.0f, ), ;, public, static, final, Paint, DEFAULT_GRIDLINE_PAINT, =]
[rangeGridlineStroke, ;, private, transient, Paint, rangeGridlinePaint, ;, private, boolean, domainPannable, ;, private, boolean, rangePannable, ;, protected, static, ResourceBundle, localizationResources, =]
[rangeGridlineStroke, ;, private, transient, Paint, rangeGridlinePaint, ;, private, boolean, domainPannable, ;, private, boolean, rangePannable, ;, protected, static, ResourceBundle, localizationResources, =]
[Paint, rangeGridlinePaint, ;, private, boolean, domainPannable, ;, private, boolean, rangePannable, ;, protected, static, ResourceBundle, localizationResources, =, ResourceBundleWrapper, ., getBundle, (]
[;, protected, static, ResourceBundle, localizationResources, =, ResourceBundleWrapper, ., getBundle, (, "org.jfree.chart.plot.LocalizationBundle", ), ;, public, FastScatterPlot, (, ), {, this, (]
[static, ResourceBundle, localizationResources, =, ResourceBundleWrapper, ., getBundle, (, "org.jfree.chart.plot.LocalizationBundle", ), ;, public, FastScatterPlot, (, ), {, this, (, null, ,]
[=, ResourceBundleWrapper, ., getBundle, (, "org.jfree.chart.plot.LocalizationBundle", ), ;, public, FastScatterPlot, (, ), {, this, (, null, ,, new, NumberAxis, (]
[getBundle, (, "org.jfree.chart.plot.LocalizationBundle", ), ;, public, FastScatterPlot, (, ), {, this, (, null, ,, new, NumberAxis, (, "X", ), ,]
[), ;, public, FastScatterPlot, (, ), {, this, (, null, ,, new, NumberAxis, (, "X", ), ,, new, NumberAxis, (]
[float, [, ], [, ], data, ,, ValueAxis, domainAxis, ,, ValueAxis, rangeAxis, ), {, super, (, ), ;, if, (]
[float, [, ], [, ], data, ,, ValueAxis, domainAxis, ,, ValueAxis, rangeAxis, ), {, super, (, ), ;, if, (]
[], [, ], data, ,, ValueAxis, domainAxis, ,, ValueAxis, rangeAxis, ), {, super, (, ), ;, if, (, domainAxis, ==]
[,, ValueAxis, domainAxis, ,, ValueAxis, rangeAxis, ), {, super, (, ), ;, if, (, domainAxis, ==, null, ), {, throw]
[,, ValueAxis, rangeAxis, ), {, super, (, ), ;, if, (, domainAxis, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, ), ;, if, (, domainAxis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'domainAxis' argument.", ), ;, }, if, (]
[(, ), ;, if, (, domainAxis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'domainAxis' argument.", ), ;, }, if, (]
[;, if, (, domainAxis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'domainAxis' argument.", ), ;, }, if, (, rangeAxis, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'domainAxis' argument.", ), ;, }, if, (, rangeAxis, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'domainAxis' argument.", ), ;, }, if, (, rangeAxis, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, "Null 'domainAxis' argument.", ), ;, }, if, (, rangeAxis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rangeAxis' argument.", ), ;, }]
[(, "Null 'domainAxis' argument.", ), ;, }, if, (, rangeAxis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rangeAxis' argument.", ), ;, }]
[}, if, (, rangeAxis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rangeAxis' argument.", ), ;, }, this, ., data, =]
[(, rangeAxis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rangeAxis' argument.", ), ;, }, this, ., data, =, data, ;]
[(, rangeAxis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rangeAxis' argument.", ), ;, }, this, ., data, =, data, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'rangeAxis' argument.", ), ;, }, this, ., data, =, data, ;, this, ., xDataRange, =]
[throw, new, IllegalArgumentException, (, "Null 'rangeAxis' argument.", ), ;, }, this, ., data, =, data, ;, this, ., xDataRange, =, calculateXDataRange, (]
[(, "Null 'rangeAxis' argument.", ), ;, }, this, ., data, =, data, ;, this, ., xDataRange, =, calculateXDataRange, (, data, ), ;]
[(, "Null 'rangeAxis' argument.", ), ;, }, this, ., data, =, data, ;, this, ., xDataRange, =, calculateXDataRange, (, data, ), ;]
[}, this, ., data, =, data, ;, this, ., xDataRange, =, calculateXDataRange, (, data, ), ;, this, ., yDataRange, =]
[., data, =, data, ;, this, ., xDataRange, =, calculateXDataRange, (, data, ), ;, this, ., yDataRange, =, calculateYDataRange, (]
[data, ;, this, ., xDataRange, =, calculateXDataRange, (, data, ), ;, this, ., yDataRange, =, calculateYDataRange, (, data, ), ;]
[data, ;, this, ., xDataRange, =, calculateXDataRange, (, data, ), ;, this, ., yDataRange, =, calculateYDataRange, (, data, ), ;]
[xDataRange, =, calculateXDataRange, (, data, ), ;, this, ., yDataRange, =, calculateYDataRange, (, data, ), ;, this, ., domainAxis, =]
[calculateXDataRange, (, data, ), ;, this, ., yDataRange, =, calculateYDataRange, (, data, ), ;, this, ., domainAxis, =, domainAxis, ;]
[calculateXDataRange, (, data, ), ;, this, ., yDataRange, =, calculateYDataRange, (, data, ), ;, this, ., domainAxis, =, domainAxis, ;]
[calculateXDataRange, (, data, ), ;, this, ., yDataRange, =, calculateYDataRange, (, data, ), ;, this, ., domainAxis, =, domainAxis, ;]
[., yDataRange, =, calculateYDataRange, (, data, ), ;, this, ., domainAxis, =, domainAxis, ;, this, ., domainAxis, ., setPlot, (]
[calculateYDataRange, (, data, ), ;, this, ., domainAxis, =, domainAxis, ;, this, ., domainAxis, ., setPlot, (, this, ), ;]
[calculateYDataRange, (, data, ), ;, this, ., domainAxis, =, domainAxis, ;, this, ., domainAxis, ., setPlot, (, this, ), ;]
[calculateYDataRange, (, data, ), ;, this, ., domainAxis, =, domainAxis, ;, this, ., domainAxis, ., setPlot, (, this, ), ;]
[., domainAxis, =, domainAxis, ;, this, ., domainAxis, ., setPlot, (, this, ), ;, this, ., domainAxis, ., addChangeListener, (]
[domainAxis, ;, this, ., domainAxis, ., setPlot, (, this, ), ;, this, ., domainAxis, ., addChangeListener, (, this, ), ;]
[domainAxis, ;, this, ., domainAxis, ., setPlot, (, this, ), ;, this, ., domainAxis, ., addChangeListener, (, this, ), ;]
[domainAxis, ., setPlot, (, this, ), ;, this, ., domainAxis, ., addChangeListener, (, this, ), ;, this, ., rangeAxis, =]
[setPlot, (, this, ), ;, this, ., domainAxis, ., addChangeListener, (, this, ), ;, this, ., rangeAxis, =, rangeAxis, ;]
[setPlot, (, this, ), ;, this, ., domainAxis, ., addChangeListener, (, this, ), ;, this, ., rangeAxis, =, rangeAxis, ;]
[setPlot, (, this, ), ;, this, ., domainAxis, ., addChangeListener, (, this, ), ;, this, ., rangeAxis, =, rangeAxis, ;]
[., domainAxis, ., addChangeListener, (, this, ), ;, this, ., rangeAxis, =, rangeAxis, ;, this, ., rangeAxis, ., setPlot, (]
[addChangeListener, (, this, ), ;, this, ., rangeAxis, =, rangeAxis, ;, this, ., rangeAxis, ., setPlot, (, this, ), ;]
[addChangeListener, (, this, ), ;, this, ., rangeAxis, =, rangeAxis, ;, this, ., rangeAxis, ., setPlot, (, this, ), ;]
[addChangeListener, (, this, ), ;, this, ., rangeAxis, =, rangeAxis, ;, this, ., rangeAxis, ., setPlot, (, this, ), ;]
[., rangeAxis, =, rangeAxis, ;, this, ., rangeAxis, ., setPlot, (, this, ), ;, this, ., rangeAxis, ., addChangeListener, (]
[rangeAxis, ;, this, ., rangeAxis, ., setPlot, (, this, ), ;, this, ., rangeAxis, ., addChangeListener, (, this, ), ;]
[rangeAxis, ;, this, ., rangeAxis, ., setPlot, (, this, ), ;, this, ., rangeAxis, ., addChangeListener, (, this, ), ;]
[rangeAxis, ., setPlot, (, this, ), ;, this, ., rangeAxis, ., addChangeListener, (, this, ), ;, this, ., paint, =]
[rangeAxis, ., setPlot, (, this, ), ;, this, ., rangeAxis, ., addChangeListener, (, this, ), ;, this, ., paint, =]
[this, ), ;, this, ., rangeAxis, ., addChangeListener, (, this, ), ;, this, ., paint, =, Color, ., red, ;]
[this, ), ;, this, ., rangeAxis, ., addChangeListener, (, this, ), ;, this, ., paint, =, Color, ., red, ;]
[., rangeAxis, ., addChangeListener, (, this, ), ;, this, ., paint, =, Color, ., red, ;, this, ., domainGridlinesVisible, =]
[., addChangeListener, (, this, ), ;, this, ., paint, =, Color, ., red, ;, this, ., domainGridlinesVisible, =, true, ;]
[., addChangeListener, (, this, ), ;, this, ., paint, =, Color, ., red, ;, this, ., domainGridlinesVisible, =, true, ;]
[), ;, this, ., paint, =, Color, ., red, ;, this, ., domainGridlinesVisible, =, true, ;, this, ., domainGridlinePaint, =]
[), ;, this, ., paint, =, Color, ., red, ;, this, ., domainGridlinesVisible, =, true, ;, this, ., domainGridlinePaint, =]
[paint, =, Color, ., red, ;, this, ., domainGridlinesVisible, =, true, ;, this, ., domainGridlinePaint, =, FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;]
[paint, =, Color, ., red, ;, this, ., domainGridlinesVisible, =, true, ;, this, ., domainGridlinePaint, =, FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;]
[red, ;, this, ., domainGridlinesVisible, =, true, ;, this, ., domainGridlinePaint, =, FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;, this, ., domainGridlineStroke, =]
[red, ;, this, ., domainGridlinesVisible, =, true, ;, this, ., domainGridlinePaint, =, FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;, this, ., domainGridlineStroke, =]
[domainGridlinesVisible, =, true, ;, this, ., domainGridlinePaint, =, FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;, this, ., domainGridlineStroke, =, FastScatterPlot, ., DEFAULT_GRIDLINE_STROKE, ;]
[domainGridlinesVisible, =, true, ;, this, ., domainGridlinePaint, =, FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;, this, ., domainGridlineStroke, =, FastScatterPlot, ., DEFAULT_GRIDLINE_STROKE, ;]
[this, ., domainGridlinePaint, =, FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;, this, ., domainGridlineStroke, =, FastScatterPlot, ., DEFAULT_GRIDLINE_STROKE, ;, this, ., rangeGridlinesVisible, =]
[domainGridlinePaint, =, FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;, this, ., domainGridlineStroke, =, FastScatterPlot, ., DEFAULT_GRIDLINE_STROKE, ;, this, ., rangeGridlinesVisible, =, true, ;]
[domainGridlinePaint, =, FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;, this, ., domainGridlineStroke, =, FastScatterPlot, ., DEFAULT_GRIDLINE_STROKE, ;, this, ., rangeGridlinesVisible, =, true, ;]
[DEFAULT_GRIDLINE_PAINT, ;, this, ., domainGridlineStroke, =, FastScatterPlot, ., DEFAULT_GRIDLINE_STROKE, ;, this, ., rangeGridlinesVisible, =, true, ;, this, ., rangeGridlinePaint, =]
[DEFAULT_GRIDLINE_PAINT, ;, this, ., domainGridlineStroke, =, FastScatterPlot, ., DEFAULT_GRIDLINE_STROKE, ;, this, ., rangeGridlinesVisible, =, true, ;, this, ., rangeGridlinePaint, =]
[domainGridlineStroke, =, FastScatterPlot, ., DEFAULT_GRIDLINE_STROKE, ;, this, ., rangeGridlinesVisible, =, true, ;, this, ., rangeGridlinePaint, =, FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;]
[domainGridlineStroke, =, FastScatterPlot, ., DEFAULT_GRIDLINE_STROKE, ;, this, ., rangeGridlinesVisible, =, true, ;, this, ., rangeGridlinePaint, =, FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;]
[DEFAULT_GRIDLINE_STROKE, ;, this, ., rangeGridlinesVisible, =, true, ;, this, ., rangeGridlinePaint, =, FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;, this, ., rangeGridlineStroke, =]
[DEFAULT_GRIDLINE_STROKE, ;, this, ., rangeGridlinesVisible, =, true, ;, this, ., rangeGridlinePaint, =, FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;, this, ., rangeGridlineStroke, =]
[FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;, this, ., rangeGridlineStroke, =, FastScatterPlot, ., DEFAULT_GRIDLINE_STROKE, ;, }, public, String, getPlotType, (, ), {, return]
[FastScatterPlot, ., DEFAULT_GRIDLINE_PAINT, ;, this, ., rangeGridlineStroke, =, FastScatterPlot, ., DEFAULT_GRIDLINE_STROKE, ;, }, public, String, getPlotType, (, ), {, return]
[this, ., rangeGridlineStroke, =, FastScatterPlot, ., DEFAULT_GRIDLINE_STROKE, ;, }, public, String, getPlotType, (, ), {, return, localizationResources, ., getString, (]
[return, localizationResources, ., getString, (, "Fast_Scatter_Plot", ), ;, }, public, float, [, ], [, ], getData, (, ), {, return]
[return, localizationResources, ., getString, (, "Fast_Scatter_Plot", ), ;, }, public, float, [, ], [, ], getData, (, ), {, return]
[), {, return, this, ., data, ;, }, public, void, setData, (, float, [, ], [, ], data, ), {]
[), {, return, this, ., data, ;, }, public, void, setData, (, float, [, ], [, ], data, ), {]
[., data, ;, }, public, void, setData, (, float, [, ], [, ], data, ), {, this, ., data, =]
[;, }, public, void, setData, (, float, [, ], [, ], data, ), {, this, ., data, =, data, ;]
[), {, this, ., data, =, data, ;, fireChangeEvent, (, ), ;, }, public, PlotOrientation, getOrientation, (, ), {, return]
[), {, this, ., data, =, data, ;, fireChangeEvent, (, ), ;, }, public, PlotOrientation, getOrientation, (, ), {, return]
[}, public, PlotOrientation, getOrientation, (, ), {, return, PlotOrientation, ., VERTICAL, ;, }, public, ValueAxis, getDomainAxis, (, ), {, return]
[}, public, PlotOrientation, getOrientation, (, ), {, return, PlotOrientation, ., VERTICAL, ;, }, public, ValueAxis, getDomainAxis, (, ), {, return]
[getDomainAxis, (, ), {, return, this, ., domainAxis, ;, }, public, void, setDomainAxis, (, ValueAxis, axis, ), {, if, (]
[getDomainAxis, (, ), {, return, this, ., domainAxis, ;, }, public, void, setDomainAxis, (, ValueAxis, axis, ), {, if, (]
[), {, return, this, ., domainAxis, ;, }, public, void, setDomainAxis, (, ValueAxis, axis, ), {, if, (, axis, ==]
[., domainAxis, ;, }, public, void, setDomainAxis, (, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw]
[}, public, void, setDomainAxis, (, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }]
[(, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }]
[{, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., domainAxis, =]
[(, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., domainAxis, =, axis, ;]
[;, }, this, ., domainAxis, =, axis, ;, fireChangeEvent, (, ), ;, }, public, ValueAxis, getRangeAxis, (, ), {, return]
[;, }, this, ., domainAxis, =, axis, ;, fireChangeEvent, (, ), ;, }, public, ValueAxis, getRangeAxis, (, ), {, return]
[getRangeAxis, (, ), {, return, this, ., rangeAxis, ;, }, public, void, setRangeAxis, (, ValueAxis, axis, ), {, if, (]
[getRangeAxis, (, ), {, return, this, ., rangeAxis, ;, }, public, void, setRangeAxis, (, ValueAxis, axis, ), {, if, (]
[), {, return, this, ., rangeAxis, ;, }, public, void, setRangeAxis, (, ValueAxis, axis, ), {, if, (, axis, ==]
[., rangeAxis, ;, }, public, void, setRangeAxis, (, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw]
[}, public, void, setRangeAxis, (, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }]
[(, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }]
[{, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., rangeAxis, =]
[(, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., rangeAxis, =, axis, ;]
[;, }, this, ., rangeAxis, =, axis, ;, fireChangeEvent, (, ), ;, }, public, Paint, getPaint, (, ), {, return]
[;, }, this, ., rangeAxis, =, axis, ;, fireChangeEvent, (, ), ;, }, public, Paint, getPaint, (, ), {, return]
[getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (]
[getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (]
[), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==]
[., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[}, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;]
[;, }, this, ., paint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, boolean, isDomainGridlinesVisible, (, ), {, return]
[;, }, this, ., paint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, boolean, isDomainGridlinesVisible, (, ), {, return]
[isDomainGridlinesVisible, (, ), {, return, this, ., domainGridlinesVisible, ;, }, public, void, setDomainGridlinesVisible, (, boolean, visible, ), {, if, (]
[isDomainGridlinesVisible, (, ), {, return, this, ., domainGridlinesVisible, ;, }, public, void, setDomainGridlinesVisible, (, boolean, visible, ), {, if, (]
[isDomainGridlinesVisible, (, ), {, return, this, ., domainGridlinesVisible, ;, }, public, void, setDomainGridlinesVisible, (, boolean, visible, ), {, if, (]
[return, this, ., domainGridlinesVisible, ;, }, public, void, setDomainGridlinesVisible, (, boolean, visible, ), {, if, (, this, ., domainGridlinesVisible, !=]
[domainGridlinesVisible, ;, }, public, void, setDomainGridlinesVisible, (, boolean, visible, ), {, if, (, this, ., domainGridlinesVisible, !=, visible, ), {]
[domainGridlinesVisible, ;, }, public, void, setDomainGridlinesVisible, (, boolean, visible, ), {, if, (, this, ., domainGridlinesVisible, !=, visible, ), {]
[void, setDomainGridlinesVisible, (, boolean, visible, ), {, if, (, this, ., domainGridlinesVisible, !=, visible, ), {, this, ., domainGridlinesVisible, =]
[(, boolean, visible, ), {, if, (, this, ., domainGridlinesVisible, !=, visible, ), {, this, ., domainGridlinesVisible, =, visible, ;]
[{, this, ., domainGridlinesVisible, =, visible, ;, fireChangeEvent, (, ), ;, }, }, public, Stroke, getDomainGridlineStroke, (, ), {, return]
[{, this, ., domainGridlinesVisible, =, visible, ;, fireChangeEvent, (, ), ;, }, }, public, Stroke, getDomainGridlineStroke, (, ), {, return]
[getDomainGridlineStroke, (, ), {, return, this, ., domainGridlineStroke, ;, }, public, void, setDomainGridlineStroke, (, Stroke, stroke, ), {, if, (]
[getDomainGridlineStroke, (, ), {, return, this, ., domainGridlineStroke, ;, }, public, void, setDomainGridlineStroke, (, Stroke, stroke, ), {, if, (]
[), {, return, this, ., domainGridlineStroke, ;, }, public, void, setDomainGridlineStroke, (, Stroke, stroke, ), {, if, (, stroke, ==]
[., domainGridlineStroke, ;, }, public, void, setDomainGridlineStroke, (, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw]
[}, public, void, setDomainGridlineStroke, (, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }]
[(, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }]
[{, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., domainGridlineStroke, =]
[(, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., domainGridlineStroke, =, stroke, ;]
[;, }, this, ., domainGridlineStroke, =, stroke, ;, fireChangeEvent, (, ), ;, }, public, Paint, getDomainGridlinePaint, (, ), {, return]
[;, }, this, ., domainGridlineStroke, =, stroke, ;, fireChangeEvent, (, ), ;, }, public, Paint, getDomainGridlinePaint, (, ), {, return]
[getDomainGridlinePaint, (, ), {, return, this, ., domainGridlinePaint, ;, }, public, void, setDomainGridlinePaint, (, Paint, paint, ), {, if, (]
[getDomainGridlinePaint, (, ), {, return, this, ., domainGridlinePaint, ;, }, public, void, setDomainGridlinePaint, (, Paint, paint, ), {, if, (]
[), {, return, this, ., domainGridlinePaint, ;, }, public, void, setDomainGridlinePaint, (, Paint, paint, ), {, if, (, paint, ==]
[., domainGridlinePaint, ;, }, public, void, setDomainGridlinePaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[}, public, void, setDomainGridlinePaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., domainGridlinePaint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., domainGridlinePaint, =, paint, ;]
[;, }, this, ., domainGridlinePaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, boolean, isRangeGridlinesVisible, (, ), {, return]
[;, }, this, ., domainGridlinePaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, boolean, isRangeGridlinesVisible, (, ), {, return]
[isRangeGridlinesVisible, (, ), {, return, this, ., rangeGridlinesVisible, ;, }, public, void, setRangeGridlinesVisible, (, boolean, visible, ), {, if, (]
[isRangeGridlinesVisible, (, ), {, return, this, ., rangeGridlinesVisible, ;, }, public, void, setRangeGridlinesVisible, (, boolean, visible, ), {, if, (]
[isRangeGridlinesVisible, (, ), {, return, this, ., rangeGridlinesVisible, ;, }, public, void, setRangeGridlinesVisible, (, boolean, visible, ), {, if, (]
[return, this, ., rangeGridlinesVisible, ;, }, public, void, setRangeGridlinesVisible, (, boolean, visible, ), {, if, (, this, ., rangeGridlinesVisible, !=]
[rangeGridlinesVisible, ;, }, public, void, setRangeGridlinesVisible, (, boolean, visible, ), {, if, (, this, ., rangeGridlinesVisible, !=, visible, ), {]
[rangeGridlinesVisible, ;, }, public, void, setRangeGridlinesVisible, (, boolean, visible, ), {, if, (, this, ., rangeGridlinesVisible, !=, visible, ), {]
[void, setRangeGridlinesVisible, (, boolean, visible, ), {, if, (, this, ., rangeGridlinesVisible, !=, visible, ), {, this, ., rangeGridlinesVisible, =]
[(, boolean, visible, ), {, if, (, this, ., rangeGridlinesVisible, !=, visible, ), {, this, ., rangeGridlinesVisible, =, visible, ;]
[{, this, ., rangeGridlinesVisible, =, visible, ;, fireChangeEvent, (, ), ;, }, }, public, Stroke, getRangeGridlineStroke, (, ), {, return]
[{, this, ., rangeGridlinesVisible, =, visible, ;, fireChangeEvent, (, ), ;, }, }, public, Stroke, getRangeGridlineStroke, (, ), {, return]
[getRangeGridlineStroke, (, ), {, return, this, ., rangeGridlineStroke, ;, }, public, void, setRangeGridlineStroke, (, Stroke, stroke, ), {, if, (]
[getRangeGridlineStroke, (, ), {, return, this, ., rangeGridlineStroke, ;, }, public, void, setRangeGridlineStroke, (, Stroke, stroke, ), {, if, (]
[), {, return, this, ., rangeGridlineStroke, ;, }, public, void, setRangeGridlineStroke, (, Stroke, stroke, ), {, if, (, stroke, ==]
[., rangeGridlineStroke, ;, }, public, void, setRangeGridlineStroke, (, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw]
[}, public, void, setRangeGridlineStroke, (, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }]
[(, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }]
[{, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., rangeGridlineStroke, =]
[(, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., rangeGridlineStroke, =, stroke, ;]
[;, }, this, ., rangeGridlineStroke, =, stroke, ;, fireChangeEvent, (, ), ;, }, public, Paint, getRangeGridlinePaint, (, ), {, return]
[;, }, this, ., rangeGridlineStroke, =, stroke, ;, fireChangeEvent, (, ), ;, }, public, Paint, getRangeGridlinePaint, (, ), {, return]
[getRangeGridlinePaint, (, ), {, return, this, ., rangeGridlinePaint, ;, }, public, void, setRangeGridlinePaint, (, Paint, paint, ), {, if, (]
[getRangeGridlinePaint, (, ), {, return, this, ., rangeGridlinePaint, ;, }, public, void, setRangeGridlinePaint, (, Paint, paint, ), {, if, (]
[), {, return, this, ., rangeGridlinePaint, ;, }, public, void, setRangeGridlinePaint, (, Paint, paint, ), {, if, (, paint, ==]
[., rangeGridlinePaint, ;, }, public, void, setRangeGridlinePaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[}, public, void, setRangeGridlinePaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., rangeGridlinePaint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., rangeGridlinePaint, =, paint, ;]
[draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Point2D, anchor, ,, PlotState, parentState, ,, PlotRenderingInfo, info, ), {, if, (]
[draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Point2D, anchor, ,, PlotState, parentState, ,, PlotRenderingInfo, info, ), {, if, (]
[Graphics2D, g2, ,, Rectangle2D, area, ,, Point2D, anchor, ,, PlotState, parentState, ,, PlotRenderingInfo, info, ), {, if, (, info, !=]
[Rectangle2D, area, ,, Point2D, anchor, ,, PlotState, parentState, ,, PlotRenderingInfo, info, ), {, if, (, info, !=, null, ), {]
[Rectangle2D, area, ,, Point2D, anchor, ,, PlotState, parentState, ,, PlotRenderingInfo, info, ), {, if, (, info, !=, null, ), {]
[anchor, ,, PlotState, parentState, ,, PlotRenderingInfo, info, ), {, if, (, info, !=, null, ), {, info, ., setPlotArea, (]
[), {, if, (, info, !=, null, ), {, info, ., setPlotArea, (, area, ), ;, }, RectangleInsets, insets, =]
[info, !=, null, ), {, info, ., setPlotArea, (, area, ), ;, }, RectangleInsets, insets, =, getInsets, (, ), ;]
[info, !=, null, ), {, info, ., setPlotArea, (, area, ), ;, }, RectangleInsets, insets, =, getInsets, (, ), ;]
[{, info, ., setPlotArea, (, area, ), ;, }, RectangleInsets, insets, =, getInsets, (, ), ;, insets, ., trim, (]
[), ;, }, RectangleInsets, insets, =, getInsets, (, ), ;, insets, ., trim, (, area, ), ;, AxisSpace, space, =]
[=, getInsets, (, ), ;, insets, ., trim, (, area, ), ;, AxisSpace, space, =, new, AxisSpace, (, ), ;]
[(, ), ;, insets, ., trim, (, area, ), ;, AxisSpace, space, =, new, AxisSpace, (, ), ;, space, =]
[(, ), ;, insets, ., trim, (, area, ), ;, AxisSpace, space, =, new, AxisSpace, (, ), ;, space, =]
[(, ), ;, insets, ., trim, (, area, ), ;, AxisSpace, space, =, new, AxisSpace, (, ), ;, space, =]
[(, area, ), ;, AxisSpace, space, =, new, AxisSpace, (, ), ;, space, =, this, ., domainAxis, ., reserveSpace, (]
[), ;, AxisSpace, space, =, new, AxisSpace, (, ), ;, space, =, this, ., domainAxis, ., reserveSpace, (, g2, ,]
[AxisSpace, space, =, new, AxisSpace, (, ), ;, space, =, this, ., domainAxis, ., reserveSpace, (, g2, ,, this, ,]
[=, new, AxisSpace, (, ), ;, space, =, this, ., domainAxis, ., reserveSpace, (, g2, ,, this, ,, area, ,]
[=, new, AxisSpace, (, ), ;, space, =, this, ., domainAxis, ., reserveSpace, (, g2, ,, this, ,, area, ,]
[), ;, space, =, this, ., domainAxis, ., reserveSpace, (, g2, ,, this, ,, area, ,, RectangleEdge, ., BOTTOM, ,]
[=, this, ., domainAxis, ., reserveSpace, (, g2, ,, this, ,, area, ,, RectangleEdge, ., BOTTOM, ,, space, ), ;]
[., domainAxis, ., reserveSpace, (, g2, ,, this, ,, area, ,, RectangleEdge, ., BOTTOM, ,, space, ), ;, space, =]
[., domainAxis, ., reserveSpace, (, g2, ,, this, ,, area, ,, RectangleEdge, ., BOTTOM, ,, space, ), ;, space, =]
[., domainAxis, ., reserveSpace, (, g2, ,, this, ,, area, ,, RectangleEdge, ., BOTTOM, ,, space, ), ;, space, =]
[,, this, ,, area, ,, RectangleEdge, ., BOTTOM, ,, space, ), ;, space, =, this, ., rangeAxis, ., reserveSpace, (]
[,, area, ,, RectangleEdge, ., BOTTOM, ,, space, ), ;, space, =, this, ., rangeAxis, ., reserveSpace, (, g2, ,]
[,, RectangleEdge, ., BOTTOM, ,, space, ), ;, space, =, this, ., rangeAxis, ., reserveSpace, (, g2, ,, this, ,]
[., BOTTOM, ,, space, ), ;, space, =, this, ., rangeAxis, ., reserveSpace, (, g2, ,, this, ,, area, ,]
[., BOTTOM, ,, space, ), ;, space, =, this, ., rangeAxis, ., reserveSpace, (, g2, ,, this, ,, area, ,]
[), ;, space, =, this, ., rangeAxis, ., reserveSpace, (, g2, ,, this, ,, area, ,, RectangleEdge, ., LEFT, ,]
[rangeAxis, ., reserveSpace, (, g2, ,, this, ,, area, ,, RectangleEdge, ., LEFT, ,, space, ), ;, Rectangle2D, dataArea, =]
[rangeAxis, ., reserveSpace, (, g2, ,, this, ,, area, ,, RectangleEdge, ., LEFT, ,, space, ), ;, Rectangle2D, dataArea, =]
[g2, ,, this, ,, area, ,, RectangleEdge, ., LEFT, ,, space, ), ;, Rectangle2D, dataArea, =, space, ., shrink, (]
[this, ,, area, ,, RectangleEdge, ., LEFT, ,, space, ), ;, Rectangle2D, dataArea, =, space, ., shrink, (, area, ,]
[., LEFT, ,, space, ), ;, Rectangle2D, dataArea, =, space, ., shrink, (, area, ,, null, ), ;, if, (]
[., LEFT, ,, space, ), ;, Rectangle2D, dataArea, =, space, ., shrink, (, area, ,, null, ), ;, if, (]
[,, space, ), ;, Rectangle2D, dataArea, =, space, ., shrink, (, area, ,, null, ), ;, if, (, info, !=]
[;, Rectangle2D, dataArea, =, space, ., shrink, (, area, ,, null, ), ;, if, (, info, !=, null, ), {]
[;, Rectangle2D, dataArea, =, space, ., shrink, (, area, ,, null, ), ;, if, (, info, !=, null, ), {]
[space, ., shrink, (, area, ,, null, ), ;, if, (, info, !=, null, ), {, info, ., setDataArea, (]
[area, ,, null, ), ;, if, (, info, !=, null, ), {, info, ., setDataArea, (, dataArea, ), ;, }]
[null, ), ;, if, (, info, !=, null, ), {, info, ., setDataArea, (, dataArea, ), ;, }, drawBackground, (]
[;, if, (, info, !=, null, ), {, info, ., setDataArea, (, dataArea, ), ;, }, drawBackground, (, g2, ,]
[), {, info, ., setDataArea, (, dataArea, ), ;, }, drawBackground, (, g2, ,, dataArea, ), ;, AxisState, domainAxisState, =]
[), {, info, ., setDataArea, (, dataArea, ), ;, }, drawBackground, (, g2, ,, dataArea, ), ;, AxisState, domainAxisState, =]
[), {, info, ., setDataArea, (, dataArea, ), ;, }, drawBackground, (, g2, ,, dataArea, ), ;, AxisState, domainAxisState, =]
[dataArea, ), ;, }, drawBackground, (, g2, ,, dataArea, ), ;, AxisState, domainAxisState, =, this, ., domainAxis, ., draw, (]
[;, }, drawBackground, (, g2, ,, dataArea, ), ;, AxisState, domainAxisState, =, this, ., domainAxis, ., draw, (, g2, ,]
[;, }, drawBackground, (, g2, ,, dataArea, ), ;, AxisState, domainAxisState, =, this, ., domainAxis, ., draw, (, g2, ,]
[dataArea, ), ;, AxisState, domainAxisState, =, this, ., domainAxis, ., draw, (, g2, ,, dataArea, ., getMaxY, (, ), ,]
[;, AxisState, domainAxisState, =, this, ., domainAxis, ., draw, (, g2, ,, dataArea, ., getMaxY, (, ), ,, area, ,]
[domainAxisState, =, this, ., domainAxis, ., draw, (, g2, ,, dataArea, ., getMaxY, (, ), ,, area, ,, dataArea, ,]
[domainAxisState, =, this, ., domainAxis, ., draw, (, g2, ,, dataArea, ., getMaxY, (, ), ,, area, ,, dataArea, ,]
[domainAxis, ., draw, (, g2, ,, dataArea, ., getMaxY, (, ), ,, area, ,, dataArea, ,, RectangleEdge, ., BOTTOM, ,]
[dataArea, ., getMaxY, (, ), ,, area, ,, dataArea, ,, RectangleEdge, ., BOTTOM, ,, info, ), ;, AxisState, rangeAxisState, =]
[dataArea, ., getMaxY, (, ), ,, area, ,, dataArea, ,, RectangleEdge, ., BOTTOM, ,, info, ), ;, AxisState, rangeAxisState, =]
[dataArea, ., getMaxY, (, ), ,, area, ,, dataArea, ,, RectangleEdge, ., BOTTOM, ,, info, ), ;, AxisState, rangeAxisState, =]
[area, ,, dataArea, ,, RectangleEdge, ., BOTTOM, ,, info, ), ;, AxisState, rangeAxisState, =, this, ., rangeAxis, ., draw, (]
[dataArea, ,, RectangleEdge, ., BOTTOM, ,, info, ), ;, AxisState, rangeAxisState, =, this, ., rangeAxis, ., draw, (, g2, ,]
[dataArea, ,, RectangleEdge, ., BOTTOM, ,, info, ), ;, AxisState, rangeAxisState, =, this, ., rangeAxis, ., draw, (, g2, ,]
[info, ), ;, AxisState, rangeAxisState, =, this, ., rangeAxis, ., draw, (, g2, ,, dataArea, ., getMinX, (, ), ,]
[;, AxisState, rangeAxisState, =, this, ., rangeAxis, ., draw, (, g2, ,, dataArea, ., getMinX, (, ), ,, area, ,]
[rangeAxisState, =, this, ., rangeAxis, ., draw, (, g2, ,, dataArea, ., getMinX, (, ), ,, area, ,, dataArea, ,]
[rangeAxisState, =, this, ., rangeAxis, ., draw, (, g2, ,, dataArea, ., getMinX, (, ), ,, area, ,, dataArea, ,]
[rangeAxis, ., draw, (, g2, ,, dataArea, ., getMinX, (, ), ,, area, ,, dataArea, ,, RectangleEdge, ., LEFT, ,]
[(, g2, ,, dataArea, ., getMinX, (, ), ,, area, ,, dataArea, ,, RectangleEdge, ., LEFT, ,, info, ), ;]
[,, dataArea, ., getMinX, (, ), ,, area, ,, dataArea, ,, RectangleEdge, ., LEFT, ,, info, ), ;, drawDomainGridlines, (]
[., getMinX, (, ), ,, area, ,, dataArea, ,, RectangleEdge, ., LEFT, ,, info, ), ;, drawDomainGridlines, (, g2, ,]
[(, ), ,, area, ,, dataArea, ,, RectangleEdge, ., LEFT, ,, info, ), ;, drawDomainGridlines, (, g2, ,, dataArea, ,]
[(, ), ,, area, ,, dataArea, ,, RectangleEdge, ., LEFT, ,, info, ), ;, drawDomainGridlines, (, g2, ,, dataArea, ,]
[RectangleEdge, ., LEFT, ,, info, ), ;, drawDomainGridlines, (, g2, ,, dataArea, ,, domainAxisState, ., getTicks, (, ), ), ;]
[LEFT, ,, info, ), ;, drawDomainGridlines, (, g2, ,, dataArea, ,, domainAxisState, ., getTicks, (, ), ), ;, drawRangeGridlines, (]
[info, ), ;, drawDomainGridlines, (, g2, ,, dataArea, ,, domainAxisState, ., getTicks, (, ), ), ;, drawRangeGridlines, (, g2, ,]
[;, drawDomainGridlines, (, g2, ,, dataArea, ,, domainAxisState, ., getTicks, (, ), ), ;, drawRangeGridlines, (, g2, ,, dataArea, ,]
[;, drawDomainGridlines, (, g2, ,, dataArea, ,, domainAxisState, ., getTicks, (, ), ), ;, drawRangeGridlines, (, g2, ,, dataArea, ,]
[(, ), ), ;, drawRangeGridlines, (, g2, ,, dataArea, ,, rangeAxisState, ., getTicks, (, ), ), ;, Shape, originalClip, =]
[(, ), ), ;, drawRangeGridlines, (, g2, ,, dataArea, ,, rangeAxisState, ., getTicks, (, ), ), ;, Shape, originalClip, =]
[,, rangeAxisState, ., getTicks, (, ), ), ;, Shape, originalClip, =, g2, ., getClip, (, ), ;, Composite, originalComposite, =]
[,, rangeAxisState, ., getTicks, (, ), ), ;, Shape, originalClip, =, g2, ., getClip, (, ), ;, Composite, originalComposite, =]
[), ;, Shape, originalClip, =, g2, ., getClip, (, ), ;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;]
[), ;, Shape, originalClip, =, g2, ., getClip, (, ), ;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;]
[=, g2, ., getClip, (, ), ;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., clip, (]
[getClip, (, ), ;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., clip, (, dataArea, ), ;]
[getClip, (, ), ;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., clip, (, dataArea, ), ;]
[Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., clip, (, dataArea, ), ;, g2, ., setComposite, (]
[Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., clip, (, dataArea, ), ;, g2, ., setComposite, (]
[., getComposite, (, ), ;, g2, ., clip, (, dataArea, ), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (]
[., getComposite, (, ), ;, g2, ., clip, (, dataArea, ), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (]
[;, g2, ., clip, (, dataArea, ), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,]
[), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), ), ), ;]
[g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), ), ), ;, render, (]
[setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), ), ), ;, render, (, g2, ,]
[AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), ), ), ;, render, (, g2, ,, dataArea, ,]
[getInstance, (, AlphaComposite, ., SRC_OVER, ,, getForegroundAlpha, (, ), ), ), ;, render, (, g2, ,, dataArea, ,, info, ,]
[., SRC_OVER, ,, getForegroundAlpha, (, ), ), ), ;, render, (, g2, ,, dataArea, ,, info, ,, null, ), ;]
[., SRC_OVER, ,, getForegroundAlpha, (, ), ), ), ;, render, (, g2, ,, dataArea, ,, info, ,, null, ), ;]
[(, ), ), ), ;, render, (, g2, ,, dataArea, ,, info, ,, null, ), ;, g2, ., setClip, (]
[), ;, render, (, g2, ,, dataArea, ,, info, ,, null, ), ;, g2, ., setClip, (, originalClip, ), ;]
[), ;, render, (, g2, ,, dataArea, ,, info, ,, null, ), ;, g2, ., setClip, (, originalClip, ), ;]
[g2, ,, dataArea, ,, info, ,, null, ), ;, g2, ., setClip, (, originalClip, ), ;, g2, ., setComposite, (]
[,, info, ,, null, ), ;, g2, ., setClip, (, originalClip, ), ;, g2, ., setComposite, (, originalComposite, ), ;]
[,, null, ), ;, g2, ., setClip, (, originalClip, ), ;, g2, ., setComposite, (, originalComposite, ), ;, drawOutline, (]
[), ;, g2, ., setClip, (, originalClip, ), ;, g2, ., setComposite, (, originalComposite, ), ;, drawOutline, (, g2, ,]
[), ;, }, public, void, render, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, PlotRenderingInfo, info, ,, CrosshairState, crosshairState, ), {]
[), ;, }, public, void, render, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, PlotRenderingInfo, info, ,, CrosshairState, crosshairState, ), {]
[void, render, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, PlotRenderingInfo, info, ,, CrosshairState, crosshairState, ), {, g2, ., setPaint, (]
[void, render, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, PlotRenderingInfo, info, ,, CrosshairState, crosshairState, ), {, g2, ., setPaint, (]
[dataArea, ,, PlotRenderingInfo, info, ,, CrosshairState, crosshairState, ), {, g2, ., setPaint, (, this, ., paint, ), ;, if, (]
[dataArea, ,, PlotRenderingInfo, info, ,, CrosshairState, crosshairState, ), {, g2, ., setPaint, (, this, ., paint, ), ;, if, (]
[dataArea, ,, PlotRenderingInfo, info, ,, CrosshairState, crosshairState, ), {, g2, ., setPaint, (, this, ., paint, ), ;, if, (]
[,, CrosshairState, crosshairState, ), {, g2, ., setPaint, (, this, ., paint, ), ;, if, (, this, ., data, !=]
[(, this, ., paint, ), ;, if, (, this, ., data, !=, null, ), {, for, (, int, i, =]
[., paint, ), ;, if, (, this, ., data, !=, null, ), {, for, (, int, i, =, 0, ;]
[., paint, ), ;, if, (, this, ., data, !=, null, ), {, for, (, int, i, =, 0, ;]
[), ;, if, (, this, ., data, !=, null, ), {, for, (, int, i, =, 0, ;, i, <]
[), ;, if, (, this, ., data, !=, null, ), {, for, (, int, i, =, 0, ;, i, <]
[), ;, if, (, this, ., data, !=, null, ), {, for, (, int, i, =, 0, ;, i, <]
[), ;, if, (, this, ., data, !=, null, ), {, for, (, int, i, =, 0, ;, i, <]
[this, ., data, !=, null, ), {, for, (, int, i, =, 0, ;, i, <, this, ., data, []
[), {, for, (, int, i, =, 0, ;, i, <, this, ., data, [, 0, ], ., length, ;]
[), {, for, (, int, i, =, 0, ;, i, <, this, ., data, [, 0, ], ., length, ;]
[0, ;, i, <, this, ., data, [, 0, ], ., length, ;, i, ++, ), {, float, x, =]
[0, ;, i, <, this, ., data, [, 0, ], ., length, ;, i, ++, ), {, float, x, =]
[0, ;, i, <, this, ., data, [, 0, ], ., length, ;, i, ++, ), {, float, x, =]
[0, ;, i, <, this, ., data, [, 0, ], ., length, ;, i, ++, ), {, float, x, =]
[this, ., data, [, 0, ], ., length, ;, i, ++, ), {, float, x, =, this, ., data, []
[[, 0, ], ., length, ;, i, ++, ), {, float, x, =, this, ., data, [, 0, ], []
[i, ++, ), {, float, x, =, this, ., data, [, 0, ], [, i, ], ;, float, y, =]
[i, ++, ), {, float, x, =, this, ., data, [, 0, ], [, i, ], ;, float, y, =]
[i, ++, ), {, float, x, =, this, ., data, [, 0, ], [, i, ], ;, float, y, =]
[i, ++, ), {, float, x, =, this, ., data, [, 0, ], [, i, ], ;, float, y, =]
[float, x, =, this, ., data, [, 0, ], [, i, ], ;, float, y, =, this, ., data, []
[this, ., data, [, 0, ], [, i, ], ;, float, y, =, this, ., data, [, 1, ], []
[[, i, ], ;, float, y, =, this, ., data, [, 1, ], [, i, ], ;, int, transX, =]
[;, float, y, =, this, ., data, [, 1, ], [, i, ], ;, int, transX, =, (, int, )]
[;, float, y, =, this, ., data, [, 1, ], [, i, ], ;, int, transX, =, (, int, )]
[;, float, y, =, this, ., data, [, 1, ], [, i, ], ;, int, transX, =, (, int, )]
[data, [, 1, ], [, i, ], ;, int, transX, =, (, int, ), this, ., domainAxis, ., valueToJava2D, (]
[1, ], [, i, ], ;, int, transX, =, (, int, ), this, ., domainAxis, ., valueToJava2D, (, x, ,]
[[, i, ], ;, int, transX, =, (, int, ), this, ., domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,]
[[, i, ], ;, int, transX, =, (, int, ), this, ., domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,]
[int, ), this, ., domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,, RectangleEdge, ., BOTTOM, ), ;, int, transY, =]
[., domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,, RectangleEdge, ., BOTTOM, ), ;, int, transY, =, (, int, )]
[., domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,, RectangleEdge, ., BOTTOM, ), ;, int, transY, =, (, int, )]
[., domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,, RectangleEdge, ., BOTTOM, ), ;, int, transY, =, (, int, )]
[,, dataArea, ,, RectangleEdge, ., BOTTOM, ), ;, int, transY, =, (, int, ), this, ., rangeAxis, ., valueToJava2D, (]
[,, RectangleEdge, ., BOTTOM, ), ;, int, transY, =, (, int, ), this, ., rangeAxis, ., valueToJava2D, (, y, ,]
[., BOTTOM, ), ;, int, transY, =, (, int, ), this, ., rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,]
[., BOTTOM, ), ;, int, transY, =, (, int, ), this, ., rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,]
[transY, =, (, int, ), this, ., rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,, RectangleEdge, ., LEFT, ), ;]
[transY, =, (, int, ), this, ., rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,, RectangleEdge, ., LEFT, ), ;]
[), this, ., rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,, RectangleEdge, ., LEFT, ), ;, g2, ., fillRect, (]
[., rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,, RectangleEdge, ., LEFT, ), ;, g2, ., fillRect, (, transX, ,]
[., valueToJava2D, (, y, ,, dataArea, ,, RectangleEdge, ., LEFT, ), ;, g2, ., fillRect, (, transX, ,, transY, ,]
[(, y, ,, dataArea, ,, RectangleEdge, ., LEFT, ), ;, g2, ., fillRect, (, transX, ,, transY, ,, 1, ,]
[;, }, }, }, protected, void, drawDomainGridlines, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, List, ticks, ), {, if, (]
[Graphics2D, g2, ,, Rectangle2D, dataArea, ,, List, ticks, ), {, if, (, isDomainGridlinesVisible, (, ), ), {, Iterator, iterator, =]
[Graphics2D, g2, ,, Rectangle2D, dataArea, ,, List, ticks, ), {, if, (, isDomainGridlinesVisible, (, ), ), {, Iterator, iterator, =]
[), {, if, (, isDomainGridlinesVisible, (, ), ), {, Iterator, iterator, =, ticks, ., iterator, (, ), ;, while, (]
[), {, if, (, isDomainGridlinesVisible, (, ), ), {, Iterator, iterator, =, ticks, ., iterator, (, ), ;, while, (]
[iterator, =, ticks, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, ValueTick, tick, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, ValueTick, tick, =, (, ValueTick, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, ValueTick, tick, =, (, ValueTick, )]
[hasNext, (, ), ), {, ValueTick, tick, =, (, ValueTick, ), iterator, ., next, (, ), ;, double, v, =]
[hasNext, (, ), ), {, ValueTick, tick, =, (, ValueTick, ), iterator, ., next, (, ), ;, double, v, =]
[hasNext, (, ), ), {, ValueTick, tick, =, (, ValueTick, ), iterator, ., next, (, ), ;, double, v, =]
[tick, =, (, ValueTick, ), iterator, ., next, (, ), ;, double, v, =, this, ., domainAxis, ., valueToJava2D, (]
[tick, =, (, ValueTick, ), iterator, ., next, (, ), ;, double, v, =, this, ., domainAxis, ., valueToJava2D, (]
[., next, (, ), ;, double, v, =, this, ., domainAxis, ., valueToJava2D, (, tick, ., getValue, (, ), ,]
[(, ), ;, double, v, =, this, ., domainAxis, ., valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,]
[(, ), ;, double, v, =, this, ., domainAxis, ., valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,]
[domainAxis, ., valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,, RectangleEdge, ., BOTTOM, ), ;, Line2D, line, =]
[., getValue, (, ), ,, dataArea, ,, RectangleEdge, ., BOTTOM, ), ;, Line2D, line, =, new, Line2D, ., Double, (]
[(, ), ,, dataArea, ,, RectangleEdge, ., BOTTOM, ), ;, Line2D, line, =, new, Line2D, ., Double, (, v, ,]
[(, ), ,, dataArea, ,, RectangleEdge, ., BOTTOM, ), ;, Line2D, line, =, new, Line2D, ., Double, (, v, ,]
[., BOTTOM, ), ;, Line2D, line, =, new, Line2D, ., Double, (, v, ,, dataArea, ., getMinY, (, ), ,]
[), ;, Line2D, line, =, new, Line2D, ., Double, (, v, ,, dataArea, ., getMinY, (, ), ,, v, ,]
[), ;, Line2D, line, =, new, Line2D, ., Double, (, v, ,, dataArea, ., getMinY, (, ), ,, v, ,]
[., Double, (, v, ,, dataArea, ., getMinY, (, ), ,, v, ,, dataArea, ., getMaxY, (, ), ), ;]
[., Double, (, v, ,, dataArea, ., getMinY, (, ), ,, v, ,, dataArea, ., getMaxY, (, ), ), ;]
[,, dataArea, ., getMinY, (, ), ,, v, ,, dataArea, ., getMaxY, (, ), ), ;, g2, ., setPaint, (]
[), ,, v, ,, dataArea, ., getMaxY, (, ), ), ;, g2, ., setPaint, (, getDomainGridlinePaint, (, ), ), ;]
[), ,, v, ,, dataArea, ., getMaxY, (, ), ), ;, g2, ., setPaint, (, getDomainGridlinePaint, (, ), ), ;]
[dataArea, ., getMaxY, (, ), ), ;, g2, ., setPaint, (, getDomainGridlinePaint, (, ), ), ;, g2, ., setStroke, (]
[), ;, g2, ., setPaint, (, getDomainGridlinePaint, (, ), ), ;, g2, ., setStroke, (, getDomainGridlineStroke, (, ), ), ;]
[), ;, g2, ., setPaint, (, getDomainGridlinePaint, (, ), ), ;, g2, ., setStroke, (, getDomainGridlineStroke, (, ), ), ;]
[setPaint, (, getDomainGridlinePaint, (, ), ), ;, g2, ., setStroke, (, getDomainGridlineStroke, (, ), ), ;, g2, ., draw, (]
[;, }, }, }, protected, void, drawRangeGridlines, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, List, ticks, ), {, if, (]
[Graphics2D, g2, ,, Rectangle2D, dataArea, ,, List, ticks, ), {, if, (, isRangeGridlinesVisible, (, ), ), {, Iterator, iterator, =]
[Graphics2D, g2, ,, Rectangle2D, dataArea, ,, List, ticks, ), {, if, (, isRangeGridlinesVisible, (, ), ), {, Iterator, iterator, =]
[), {, if, (, isRangeGridlinesVisible, (, ), ), {, Iterator, iterator, =, ticks, ., iterator, (, ), ;, while, (]
[), {, if, (, isRangeGridlinesVisible, (, ), ), {, Iterator, iterator, =, ticks, ., iterator, (, ), ;, while, (]
[iterator, =, ticks, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, ValueTick, tick, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, ValueTick, tick, =, (, ValueTick, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, ValueTick, tick, =, (, ValueTick, )]
[hasNext, (, ), ), {, ValueTick, tick, =, (, ValueTick, ), iterator, ., next, (, ), ;, double, v, =]
[hasNext, (, ), ), {, ValueTick, tick, =, (, ValueTick, ), iterator, ., next, (, ), ;, double, v, =]
[hasNext, (, ), ), {, ValueTick, tick, =, (, ValueTick, ), iterator, ., next, (, ), ;, double, v, =]
[tick, =, (, ValueTick, ), iterator, ., next, (, ), ;, double, v, =, this, ., rangeAxis, ., valueToJava2D, (]
[tick, =, (, ValueTick, ), iterator, ., next, (, ), ;, double, v, =, this, ., rangeAxis, ., valueToJava2D, (]
[., next, (, ), ;, double, v, =, this, ., rangeAxis, ., valueToJava2D, (, tick, ., getValue, (, ), ,]
[(, ), ;, double, v, =, this, ., rangeAxis, ., valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,]
[(, ), ;, double, v, =, this, ., rangeAxis, ., valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,]
[rangeAxis, ., valueToJava2D, (, tick, ., getValue, (, ), ,, dataArea, ,, RectangleEdge, ., LEFT, ), ;, Line2D, line, =]
[., getValue, (, ), ,, dataArea, ,, RectangleEdge, ., LEFT, ), ;, Line2D, line, =, new, Line2D, ., Double, (]
[., getValue, (, ), ,, dataArea, ,, RectangleEdge, ., LEFT, ), ;, Line2D, line, =, new, Line2D, ., Double, (]
[,, RectangleEdge, ., LEFT, ), ;, Line2D, line, =, new, Line2D, ., Double, (, dataArea, ., getMinX, (, ), ,]
[., LEFT, ), ;, Line2D, line, =, new, Line2D, ., Double, (, dataArea, ., getMinX, (, ), ,, v, ,]
[., LEFT, ), ;, Line2D, line, =, new, Line2D, ., Double, (, dataArea, ., getMinX, (, ), ,, v, ,]
[=, new, Line2D, ., Double, (, dataArea, ., getMinX, (, ), ,, v, ,, dataArea, ., getMaxX, (, ), ,]
[., Double, (, dataArea, ., getMinX, (, ), ,, v, ,, dataArea, ., getMaxX, (, ), ,, v, ), ;]
[., Double, (, dataArea, ., getMinX, (, ), ,, v, ,, dataArea, ., getMaxX, (, ), ,, v, ), ;]
[., getMinX, (, ), ,, v, ,, dataArea, ., getMaxX, (, ), ,, v, ), ;, g2, ., setPaint, (]
[v, ,, dataArea, ., getMaxX, (, ), ,, v, ), ;, g2, ., setPaint, (, getRangeGridlinePaint, (, ), ), ;]
[v, ,, dataArea, ., getMaxX, (, ), ,, v, ), ;, g2, ., setPaint, (, getRangeGridlinePaint, (, ), ), ;]
[getMaxX, (, ), ,, v, ), ;, g2, ., setPaint, (, getRangeGridlinePaint, (, ), ), ;, g2, ., setStroke, (]
[), ;, g2, ., setPaint, (, getRangeGridlinePaint, (, ), ), ;, g2, ., setStroke, (, getRangeGridlineStroke, (, ), ), ;]
[), ;, g2, ., setPaint, (, getRangeGridlinePaint, (, ), ), ;, g2, ., setStroke, (, getRangeGridlineStroke, (, ), ), ;]
[setPaint, (, getRangeGridlinePaint, (, ), ), ;, g2, ., setStroke, (, getRangeGridlineStroke, (, ), ), ;, g2, ., draw, (]
[., draw, (, line, ), ;, }, }, }, public, Range, getDataRange, (, ValueAxis, axis, ), {, Range, result, =]
[), ;, }, }, }, public, Range, getDataRange, (, ValueAxis, axis, ), {, Range, result, =, null, ;, if, (]
[), ;, }, }, }, public, Range, getDataRange, (, ValueAxis, axis, ), {, Range, result, =, null, ;, if, (]
[}, }, }, public, Range, getDataRange, (, ValueAxis, axis, ), {, Range, result, =, null, ;, if, (, axis, ==]
[}, }, }, public, Range, getDataRange, (, ValueAxis, axis, ), {, Range, result, =, null, ;, if, (, axis, ==]
[getDataRange, (, ValueAxis, axis, ), {, Range, result, =, null, ;, if, (, axis, ==, this, ., domainAxis, ), {]
[ValueAxis, axis, ), {, Range, result, =, null, ;, if, (, axis, ==, this, ., domainAxis, ), {, result, =]
[ValueAxis, axis, ), {, Range, result, =, null, ;, if, (, axis, ==, this, ., domainAxis, ), {, result, =]
[;, if, (, axis, ==, this, ., domainAxis, ), {, result, =, this, ., xDataRange, ;, }, else, if, (]
[;, if, (, axis, ==, this, ., domainAxis, ), {, result, =, this, ., xDataRange, ;, }, else, if, (]
[(, axis, ==, this, ., domainAxis, ), {, result, =, this, ., xDataRange, ;, }, else, if, (, axis, ==]
[(, axis, ==, this, ., domainAxis, ), {, result, =, this, ., xDataRange, ;, }, else, if, (, axis, ==]
[domainAxis, ), {, result, =, this, ., xDataRange, ;, }, else, if, (, axis, ==, this, ., rangeAxis, ), {]
[{, result, =, this, ., xDataRange, ;, }, else, if, (, axis, ==, this, ., rangeAxis, ), {, result, =]
[{, result, =, this, ., xDataRange, ;, }, else, if, (, axis, ==, this, ., rangeAxis, ), {, result, =]
[;, }, else, if, (, axis, ==, this, ., rangeAxis, ), {, result, =, this, ., yDataRange, ;, }, return]
[}, return, result, ;, }, private, Range, calculateXDataRange, (, float, [, ], [, ], data, ), {, Range, result, =]
[}, private, Range, calculateXDataRange, (, float, [, ], [, ], data, ), {, Range, result, =, null, ;, if, (]
[}, private, Range, calculateXDataRange, (, float, [, ], [, ], data, ), {, Range, result, =, null, ;, if, (]
[Range, calculateXDataRange, (, float, [, ], [, ], data, ), {, Range, result, =, null, ;, if, (, data, !=]
[[, ], data, ), {, Range, result, =, null, ;, if, (, data, !=, null, ), {, float, lowest, =]
[[, ], data, ), {, Range, result, =, null, ;, if, (, data, !=, null, ), {, float, lowest, =]
[=, null, ;, if, (, data, !=, null, ), {, float, lowest, =, Float, ., POSITIVE_INFINITY, ;, float, highest, =]
[=, null, ;, if, (, data, !=, null, ), {, float, lowest, =, Float, ., POSITIVE_INFINITY, ;, float, highest, =]
[{, float, lowest, =, Float, ., POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =]
[lowest, =, Float, ., POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;]
[lowest, =, Float, ., POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;]
[Float, ., POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <]
[Float, ., POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <]
[Float, ., POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <]
[POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <, data, []
[Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <, data, [, 0, ], ., length, ;]
[Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <, data, [, 0, ], ., length, ;]
[i, =, 0, ;, i, <, data, [, 0, ], ., length, ;, i, ++, ), {, float, v, =]
[i, =, 0, ;, i, <, data, [, 0, ], ., length, ;, i, ++, ), {, float, v, =]
[i, =, 0, ;, i, <, data, [, 0, ], ., length, ;, i, ++, ), {, float, v, =]
[0, ;, i, <, data, [, 0, ], ., length, ;, i, ++, ), {, float, v, =, data, []
[<, data, [, 0, ], ., length, ;, i, ++, ), {, float, v, =, data, [, 0, ], []
[., length, ;, i, ++, ), {, float, v, =, data, [, 0, ], [, i, ], ;, if, (]
[., length, ;, i, ++, ), {, float, v, =, data, [, 0, ], [, i, ], ;, if, (]
[;, i, ++, ), {, float, v, =, data, [, 0, ], [, i, ], ;, if, (, v, <]
[), {, float, v, =, data, [, 0, ], [, i, ], ;, if, (, v, <, lowest, ), {]
[float, v, =, data, [, 0, ], [, i, ], ;, if, (, v, <, lowest, ), {, lowest, =]
[0, ], [, i, ], ;, if, (, v, <, lowest, ), {, lowest, =, v, ;, }, if, (]
[0, ], [, i, ], ;, if, (, v, <, lowest, ), {, lowest, =, v, ;, }, if, (]
[[, i, ], ;, if, (, v, <, lowest, ), {, lowest, =, v, ;, }, if, (, v, >]
[;, if, (, v, <, lowest, ), {, lowest, =, v, ;, }, if, (, v, >, highest, ), {]
[(, v, <, lowest, ), {, lowest, =, v, ;, }, if, (, v, >, highest, ), {, highest, =]
[lowest, =, v, ;, }, if, (, v, >, highest, ), {, highest, =, v, ;, }, }, if, (]
[lowest, =, v, ;, }, if, (, v, >, highest, ), {, highest, =, v, ;, }, }, if, (]
[v, ;, }, if, (, v, >, highest, ), {, highest, =, v, ;, }, }, if, (, lowest, <=]
[if, (, v, >, highest, ), {, highest, =, v, ;, }, }, if, (, lowest, <=, highest, ), {]
[v, >, highest, ), {, highest, =, v, ;, }, }, if, (, lowest, <=, highest, ), {, result, =]
[), {, highest, =, v, ;, }, }, if, (, lowest, <=, highest, ), {, result, =, new, Range, (]
[highest, =, v, ;, }, }, if, (, lowest, <=, highest, ), {, result, =, new, Range, (, lowest, ,]
[if, (, lowest, <=, highest, ), {, result, =, new, Range, (, lowest, ,, highest, ), ;, }, }, return]
[}, return, result, ;, }, private, Range, calculateYDataRange, (, float, [, ], [, ], data, ), {, Range, result, =]
[}, private, Range, calculateYDataRange, (, float, [, ], [, ], data, ), {, Range, result, =, null, ;, if, (]
[}, private, Range, calculateYDataRange, (, float, [, ], [, ], data, ), {, Range, result, =, null, ;, if, (]
[Range, calculateYDataRange, (, float, [, ], [, ], data, ), {, Range, result, =, null, ;, if, (, data, !=]
[[, ], data, ), {, Range, result, =, null, ;, if, (, data, !=, null, ), {, float, lowest, =]
[[, ], data, ), {, Range, result, =, null, ;, if, (, data, !=, null, ), {, float, lowest, =]
[=, null, ;, if, (, data, !=, null, ), {, float, lowest, =, Float, ., POSITIVE_INFINITY, ;, float, highest, =]
[=, null, ;, if, (, data, !=, null, ), {, float, lowest, =, Float, ., POSITIVE_INFINITY, ;, float, highest, =]
[{, float, lowest, =, Float, ., POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =]
[lowest, =, Float, ., POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;]
[lowest, =, Float, ., POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;]
[Float, ., POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <]
[Float, ., POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <]
[Float, ., POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <]
[POSITIVE_INFINITY, ;, float, highest, =, Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <, data, []
[Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <, data, [, 0, ], ., length, ;]
[Float, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <, data, [, 0, ], ., length, ;]
[i, =, 0, ;, i, <, data, [, 0, ], ., length, ;, i, ++, ), {, float, v, =]
[i, =, 0, ;, i, <, data, [, 0, ], ., length, ;, i, ++, ), {, float, v, =]
[i, =, 0, ;, i, <, data, [, 0, ], ., length, ;, i, ++, ), {, float, v, =]
[0, ;, i, <, data, [, 0, ], ., length, ;, i, ++, ), {, float, v, =, data, []
[<, data, [, 0, ], ., length, ;, i, ++, ), {, float, v, =, data, [, 1, ], []
[., length, ;, i, ++, ), {, float, v, =, data, [, 1, ], [, i, ], ;, if, (]
[., length, ;, i, ++, ), {, float, v, =, data, [, 1, ], [, i, ], ;, if, (]
[;, i, ++, ), {, float, v, =, data, [, 1, ], [, i, ], ;, if, (, v, <]
[), {, float, v, =, data, [, 1, ], [, i, ], ;, if, (, v, <, lowest, ), {]
[float, v, =, data, [, 1, ], [, i, ], ;, if, (, v, <, lowest, ), {, lowest, =]
[1, ], [, i, ], ;, if, (, v, <, lowest, ), {, lowest, =, v, ;, }, if, (]
[1, ], [, i, ], ;, if, (, v, <, lowest, ), {, lowest, =, v, ;, }, if, (]
[[, i, ], ;, if, (, v, <, lowest, ), {, lowest, =, v, ;, }, if, (, v, >]
[;, if, (, v, <, lowest, ), {, lowest, =, v, ;, }, if, (, v, >, highest, ), {]
[(, v, <, lowest, ), {, lowest, =, v, ;, }, if, (, v, >, highest, ), {, highest, =]
[lowest, =, v, ;, }, if, (, v, >, highest, ), {, highest, =, v, ;, }, }, if, (]
[lowest, =, v, ;, }, if, (, v, >, highest, ), {, highest, =, v, ;, }, }, if, (]
[v, ;, }, if, (, v, >, highest, ), {, highest, =, v, ;, }, }, if, (, lowest, <=]
[if, (, v, >, highest, ), {, highest, =, v, ;, }, }, if, (, lowest, <=, highest, ), {]
[v, >, highest, ), {, highest, =, v, ;, }, }, if, (, lowest, <=, highest, ), {, result, =]
[), {, highest, =, v, ;, }, }, if, (, lowest, <=, highest, ), {, result, =, new, Range, (]
[highest, =, v, ;, }, }, if, (, lowest, <=, highest, ), {, result, =, new, Range, (, lowest, ,]
[if, (, lowest, <=, highest, ), {, result, =, new, Range, (, lowest, ,, highest, ), ;, }, }, return]
[}, }, return, result, ;, }, public, void, zoomDomainAxes, (, double, factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {]
[}, }, return, result, ;, }, public, void, zoomDomainAxes, (, double, factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {]
[}, }, return, result, ;, }, public, void, zoomDomainAxes, (, double, factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {]
[public, void, zoomDomainAxes, (, double, factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, this, ., domainAxis, ., resizeRange, (]
[}, public, void, zoomDomainAxes, (, double, factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ,, boolean, useAnchor, ), {, if, (]
[factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ,, boolean, useAnchor, ), {, if, (, useAnchor, ), {, double, sourceX, =]
[factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ,, boolean, useAnchor, ), {, if, (, useAnchor, ), {, double, sourceX, =]
[useAnchor, ), {, if, (, useAnchor, ), {, double, sourceX, =, source, ., getX, (, ), ;, double, anchorX, =]
[useAnchor, ), {, if, (, useAnchor, ), {, double, sourceX, =, source, ., getX, (, ), ;, double, anchorX, =]
[useAnchor, ), {, if, (, useAnchor, ), {, double, sourceX, =, source, ., getX, (, ), ;, double, anchorX, =]
[), {, double, sourceX, =, source, ., getX, (, ), ;, double, anchorX, =, this, ., domainAxis, ., java2DToValue, (]
[double, sourceX, =, source, ., getX, (, ), ;, double, anchorX, =, this, ., domainAxis, ., java2DToValue, (, sourceX, ,]
[double, sourceX, =, source, ., getX, (, ), ;, double, anchorX, =, this, ., domainAxis, ., java2DToValue, (, sourceX, ,]
[(, ), ;, double, anchorX, =, this, ., domainAxis, ., java2DToValue, (, sourceX, ,, info, ., getDataArea, (, ), ,]
[(, ), ;, double, anchorX, =, this, ., domainAxis, ., java2DToValue, (, sourceX, ,, info, ., getDataArea, (, ), ,]
[=, this, ., domainAxis, ., java2DToValue, (, sourceX, ,, info, ., getDataArea, (, ), ,, RectangleEdge, ., BOTTOM, ), ;]
[=, this, ., domainAxis, ., java2DToValue, (, sourceX, ,, info, ., getDataArea, (, ), ,, RectangleEdge, ., BOTTOM, ), ;]
[=, this, ., domainAxis, ., java2DToValue, (, sourceX, ,, info, ., getDataArea, (, ), ,, RectangleEdge, ., BOTTOM, ), ;]
[(, sourceX, ,, info, ., getDataArea, (, ), ,, RectangleEdge, ., BOTTOM, ), ;, this, ., domainAxis, ., resizeRange2, (]
[,, info, ., getDataArea, (, ), ,, RectangleEdge, ., BOTTOM, ), ;, this, ., domainAxis, ., resizeRange2, (, factor, ,]
[,, RectangleEdge, ., BOTTOM, ), ;, this, ., domainAxis, ., resizeRange2, (, factor, ,, anchorX, ), ;, }, else, {]
[,, RectangleEdge, ., BOTTOM, ), ;, this, ., domainAxis, ., resizeRange2, (, factor, ,, anchorX, ), ;, }, else, {]
[,, RectangleEdge, ., BOTTOM, ), ;, this, ., domainAxis, ., resizeRange2, (, factor, ,, anchorX, ), ;, }, else, {]
[this, ., domainAxis, ., resizeRange2, (, factor, ,, anchorX, ), ;, }, else, {, this, ., domainAxis, ., resizeRange, (]
[;, }, }, public, void, zoomDomainAxes, (, double, lowerPercent, ,, double, upperPercent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {]
[;, }, }, public, void, zoomDomainAxes, (, double, lowerPercent, ,, double, upperPercent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {]
[;, }, }, public, void, zoomDomainAxes, (, double, lowerPercent, ,, double, upperPercent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {]
[(, double, lowerPercent, ,, double, upperPercent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, this, ., domainAxis, ., zoomRange, (]
[lowerPercent, ,, double, upperPercent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, this, ., domainAxis, ., zoomRange, (, lowerPercent, ,]
[lowerPercent, ,, upperPercent, ), ;, }, public, void, zoomRangeAxes, (, double, factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {]
[lowerPercent, ,, upperPercent, ), ;, }, public, void, zoomRangeAxes, (, double, factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {]
[lowerPercent, ,, upperPercent, ), ;, }, public, void, zoomRangeAxes, (, double, factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {]
[public, void, zoomRangeAxes, (, double, factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, this, ., rangeAxis, ., resizeRange, (]
[}, public, void, zoomRangeAxes, (, double, factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ,, boolean, useAnchor, ), {, if, (]
[factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ,, boolean, useAnchor, ), {, if, (, useAnchor, ), {, double, sourceY, =]
[factor, ,, PlotRenderingInfo, info, ,, Point2D, source, ,, boolean, useAnchor, ), {, if, (, useAnchor, ), {, double, sourceY, =]
[useAnchor, ), {, if, (, useAnchor, ), {, double, sourceY, =, source, ., getY, (, ), ;, double, anchorY, =]
[useAnchor, ), {, if, (, useAnchor, ), {, double, sourceY, =, source, ., getY, (, ), ;, double, anchorY, =]
[useAnchor, ), {, if, (, useAnchor, ), {, double, sourceY, =, source, ., getY, (, ), ;, double, anchorY, =]
[), {, double, sourceY, =, source, ., getY, (, ), ;, double, anchorY, =, this, ., rangeAxis, ., java2DToValue, (]
[double, sourceY, =, source, ., getY, (, ), ;, double, anchorY, =, this, ., rangeAxis, ., java2DToValue, (, sourceY, ,]
[double, sourceY, =, source, ., getY, (, ), ;, double, anchorY, =, this, ., rangeAxis, ., java2DToValue, (, sourceY, ,]
[(, ), ;, double, anchorY, =, this, ., rangeAxis, ., java2DToValue, (, sourceY, ,, info, ., getDataArea, (, ), ,]
[(, ), ;, double, anchorY, =, this, ., rangeAxis, ., java2DToValue, (, sourceY, ,, info, ., getDataArea, (, ), ,]
[=, this, ., rangeAxis, ., java2DToValue, (, sourceY, ,, info, ., getDataArea, (, ), ,, RectangleEdge, ., LEFT, ), ;]
[=, this, ., rangeAxis, ., java2DToValue, (, sourceY, ,, info, ., getDataArea, (, ), ,, RectangleEdge, ., LEFT, ), ;]
[=, this, ., rangeAxis, ., java2DToValue, (, sourceY, ,, info, ., getDataArea, (, ), ,, RectangleEdge, ., LEFT, ), ;]
[(, sourceY, ,, info, ., getDataArea, (, ), ,, RectangleEdge, ., LEFT, ), ;, this, ., rangeAxis, ., resizeRange2, (]
[,, info, ., getDataArea, (, ), ,, RectangleEdge, ., LEFT, ), ;, this, ., rangeAxis, ., resizeRange2, (, factor, ,]
[,, RectangleEdge, ., LEFT, ), ;, this, ., rangeAxis, ., resizeRange2, (, factor, ,, anchorY, ), ;, }, else, {]
[,, RectangleEdge, ., LEFT, ), ;, this, ., rangeAxis, ., resizeRange2, (, factor, ,, anchorY, ), ;, }, else, {]
[,, RectangleEdge, ., LEFT, ), ;, this, ., rangeAxis, ., resizeRange2, (, factor, ,, anchorY, ), ;, }, else, {]
[this, ., rangeAxis, ., resizeRange2, (, factor, ,, anchorY, ), ;, }, else, {, this, ., rangeAxis, ., resizeRange, (]
[;, }, }, public, void, zoomRangeAxes, (, double, lowerPercent, ,, double, upperPercent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {]
[;, }, }, public, void, zoomRangeAxes, (, double, lowerPercent, ,, double, upperPercent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {]
[;, }, }, public, void, zoomRangeAxes, (, double, lowerPercent, ,, double, upperPercent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {]
[(, double, lowerPercent, ,, double, upperPercent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, this, ., rangeAxis, ., zoomRange, (]
[lowerPercent, ,, double, upperPercent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, this, ., rangeAxis, ., zoomRange, (, lowerPercent, ,]
[{, this, ., rangeAxis, ., zoomRange, (, lowerPercent, ,, upperPercent, ), ;, }, public, boolean, isDomainZoomable, (, ), {, return]
[), ;, }, public, boolean, isDomainZoomable, (, ), {, return, true, ;, }, public, boolean, isRangeZoomable, (, ), {, return]
[true, ;, }, public, boolean, isRangeZoomable, (, ), {, return, true, ;, }, public, boolean, isDomainPannable, (, ), {, return]
[true, ;, }, public, boolean, isRangeZoomable, (, ), {, return, true, ;, }, public, boolean, isDomainPannable, (, ), {, return]
[public, boolean, isDomainPannable, (, ), {, return, this, ., domainPannable, ;, }, public, void, setDomainPannable, (, boolean, pannable, ), {]
[public, boolean, isDomainPannable, (, ), {, return, this, ., domainPannable, ;, }, public, void, setDomainPannable, (, boolean, pannable, ), {]
[), {, return, this, ., domainPannable, ;, }, public, void, setDomainPannable, (, boolean, pannable, ), {, this, ., domainPannable, =]
[setDomainPannable, (, boolean, pannable, ), {, this, ., domainPannable, =, pannable, ;, }, public, boolean, isRangePannable, (, ), {, return]
[setDomainPannable, (, boolean, pannable, ), {, this, ., domainPannable, =, pannable, ;, }, public, boolean, isRangePannable, (, ), {, return]
[public, boolean, isRangePannable, (, ), {, return, this, ., rangePannable, ;, }, public, void, setRangePannable, (, boolean, pannable, ), {]
[public, boolean, isRangePannable, (, ), {, return, this, ., rangePannable, ;, }, public, void, setRangePannable, (, boolean, pannable, ), {]
[), {, return, this, ., rangePannable, ;, }, public, void, setRangePannable, (, boolean, pannable, ), {, this, ., rangePannable, =]
[=, pannable, ;, }, public, void, panDomainAxes, (, double, percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (]
[=, pannable, ;, }, public, void, panDomainAxes, (, double, percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (]
[pannable, ;, }, public, void, panDomainAxes, (, double, percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (, !]
[void, panDomainAxes, (, double, percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (, !, isDomainPannable, (, ), ||]
[void, panDomainAxes, (, double, percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (, !, isDomainPannable, (, ), ||]
[void, panDomainAxes, (, double, percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (, !, isDomainPannable, (, ), ||]
[percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (, !, isDomainPannable, (, ), ||, this, ., domainAxis, ==]
[if, (, !, isDomainPannable, (, ), ||, this, ., domainAxis, ==, null, ), {, return, ;, }, double, length, =]
[if, (, !, isDomainPannable, (, ), ||, this, ., domainAxis, ==, null, ), {, return, ;, }, double, length, =]
[if, (, !, isDomainPannable, (, ), ||, this, ., domainAxis, ==, null, ), {, return, ;, }, double, length, =]
[if, (, !, isDomainPannable, (, ), ||, this, ., domainAxis, ==, null, ), {, return, ;, }, double, length, =]
[;, }, double, length, =, this, ., domainAxis, ., getRange, (, ), ., getLength, (, ), ;, double, adj, =]
[;, }, double, length, =, this, ., domainAxis, ., getRange, (, ), ., getLength, (, ), ;, double, adj, =]
[}, double, length, =, this, ., domainAxis, ., getRange, (, ), ., getLength, (, ), ;, double, adj, =, -]
[length, =, this, ., domainAxis, ., getRange, (, ), ., getLength, (, ), ;, double, adj, =, -, percent, *]
[domainAxis, ., getRange, (, ), ., getLength, (, ), ;, double, adj, =, -, percent, *, length, ;, if, (]
[domainAxis, ., getRange, (, ), ., getLength, (, ), ;, double, adj, =, -, percent, *, length, ;, if, (]
[domainAxis, ., getRange, (, ), ., getLength, (, ), ;, double, adj, =, -, percent, *, length, ;, if, (]
[;, double, adj, =, -, percent, *, length, ;, if, (, this, ., domainAxis, ., isInverted, (, ), ), {]
[adj, =, -, percent, *, length, ;, if, (, this, ., domainAxis, ., isInverted, (, ), ), {, adj, =]
[=, -, percent, *, length, ;, if, (, this, ., domainAxis, ., isInverted, (, ), ), {, adj, =, -]
[*, length, ;, if, (, this, ., domainAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }]
[*, length, ;, if, (, this, ., domainAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }]
[*, length, ;, if, (, this, ., domainAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }]
[., domainAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }, this, ., domainAxis, ., setRange, (]
[., domainAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }, this, ., domainAxis, ., setRange, (]
[., domainAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }, this, ., domainAxis, ., setRange, (]
[., domainAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }, this, ., domainAxis, ., setRange, (]
[adj, =, -, adj, ;, }, this, ., domainAxis, ., setRange, (, this, ., domainAxis, ., getLowerBound, (, ), +]
[-, adj, ;, }, this, ., domainAxis, ., setRange, (, this, ., domainAxis, ., getLowerBound, (, ), +, adj, ,]
[-, adj, ;, }, this, ., domainAxis, ., setRange, (, this, ., domainAxis, ., getLowerBound, (, ), +, adj, ,]
[-, adj, ;, }, this, ., domainAxis, ., setRange, (, this, ., domainAxis, ., getLowerBound, (, ), +, adj, ,]
[-, adj, ;, }, this, ., domainAxis, ., setRange, (, this, ., domainAxis, ., getLowerBound, (, ), +, adj, ,]
[setRange, (, this, ., domainAxis, ., getLowerBound, (, ), +, adj, ,, this, ., domainAxis, ., getUpperBound, (, ), +]
[adj, ), ;, }, public, void, panRangeAxes, (, double, percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (]
[adj, ), ;, }, public, void, panRangeAxes, (, double, percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (]
[), ;, }, public, void, panRangeAxes, (, double, percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (, !]
[void, panRangeAxes, (, double, percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (, !, isRangePannable, (, ), ||]
[void, panRangeAxes, (, double, percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (, !, isRangePannable, (, ), ||]
[void, panRangeAxes, (, double, percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (, !, isRangePannable, (, ), ||]
[percent, ,, PlotRenderingInfo, info, ,, Point2D, source, ), {, if, (, !, isRangePannable, (, ), ||, this, ., rangeAxis, ==]
[if, (, !, isRangePannable, (, ), ||, this, ., rangeAxis, ==, null, ), {, return, ;, }, double, length, =]
[if, (, !, isRangePannable, (, ), ||, this, ., rangeAxis, ==, null, ), {, return, ;, }, double, length, =]
[if, (, !, isRangePannable, (, ), ||, this, ., rangeAxis, ==, null, ), {, return, ;, }, double, length, =]
[if, (, !, isRangePannable, (, ), ||, this, ., rangeAxis, ==, null, ), {, return, ;, }, double, length, =]
[;, }, double, length, =, this, ., rangeAxis, ., getRange, (, ), ., getLength, (, ), ;, double, adj, =]
[;, }, double, length, =, this, ., rangeAxis, ., getRange, (, ), ., getLength, (, ), ;, double, adj, =]
[double, length, =, this, ., rangeAxis, ., getRange, (, ), ., getLength, (, ), ;, double, adj, =, percent, *]
[., rangeAxis, ., getRange, (, ), ., getLength, (, ), ;, double, adj, =, percent, *, length, ;, if, (]
[., rangeAxis, ., getRange, (, ), ., getLength, (, ), ;, double, adj, =, percent, *, length, ;, if, (]
[., rangeAxis, ., getRange, (, ), ., getLength, (, ), ;, double, adj, =, percent, *, length, ;, if, (]
[), ;, double, adj, =, percent, *, length, ;, if, (, this, ., rangeAxis, ., isInverted, (, ), ), {]
[double, adj, =, percent, *, length, ;, if, (, this, ., rangeAxis, ., isInverted, (, ), ), {, adj, =]
[adj, =, percent, *, length, ;, if, (, this, ., rangeAxis, ., isInverted, (, ), ), {, adj, =, -]
[*, length, ;, if, (, this, ., rangeAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }]
[*, length, ;, if, (, this, ., rangeAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }]
[*, length, ;, if, (, this, ., rangeAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }]
[., rangeAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }, this, ., rangeAxis, ., setRange, (]
[., rangeAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }, this, ., rangeAxis, ., setRange, (]
[., rangeAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }, this, ., rangeAxis, ., setRange, (]
[., rangeAxis, ., isInverted, (, ), ), {, adj, =, -, adj, ;, }, this, ., rangeAxis, ., setRange, (]
[adj, =, -, adj, ;, }, this, ., rangeAxis, ., setRange, (, this, ., rangeAxis, ., getLowerBound, (, ), +]
[-, adj, ;, }, this, ., rangeAxis, ., setRange, (, this, ., rangeAxis, ., getLowerBound, (, ), +, adj, ,]
[-, adj, ;, }, this, ., rangeAxis, ., setRange, (, this, ., rangeAxis, ., getLowerBound, (, ), +, adj, ,]
[-, adj, ;, }, this, ., rangeAxis, ., setRange, (, this, ., rangeAxis, ., getLowerBound, (, ), +, adj, ,]
[-, adj, ;, }, this, ., rangeAxis, ., setRange, (, this, ., rangeAxis, ., getLowerBound, (, ), +, adj, ,]
[setRange, (, this, ., rangeAxis, ., getLowerBound, (, ), +, adj, ,, this, ., rangeAxis, ., getUpperBound, (, ), +]
[rangeAxis, ., getUpperBound, (, ), +, adj, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[rangeAxis, ., getUpperBound, (, ), +, adj, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[getUpperBound, (, ), +, adj, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[adj, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, super, ., equals, (]
[==, this, ), {, return, true, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return]
[true, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, if, (]
[;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, if, (, !]
[}, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, if, (, !, (]
[}, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, if, (, !, (]
[(, obj, ), ), {, return, false, ;, }, if, (, !, (, obj, instanceof, FastScatterPlot, ), ), {, return]
[false, ;, }, if, (, !, (, obj, instanceof, FastScatterPlot, ), ), {, return, false, ;, }, FastScatterPlot, that, =]
[if, (, !, (, obj, instanceof, FastScatterPlot, ), ), {, return, false, ;, }, FastScatterPlot, that, =, (, FastScatterPlot, )]
[obj, instanceof, FastScatterPlot, ), ), {, return, false, ;, }, FastScatterPlot, that, =, (, FastScatterPlot, ), obj, ;, if, (]
[obj, instanceof, FastScatterPlot, ), ), {, return, false, ;, }, FastScatterPlot, that, =, (, FastScatterPlot, ), obj, ;, if, (]
[obj, instanceof, FastScatterPlot, ), ), {, return, false, ;, }, FastScatterPlot, that, =, (, FastScatterPlot, ), obj, ;, if, (]
[), {, return, false, ;, }, FastScatterPlot, that, =, (, FastScatterPlot, ), obj, ;, if, (, this, ., domainPannable, !=]
[), {, return, false, ;, }, FastScatterPlot, that, =, (, FastScatterPlot, ), obj, ;, if, (, this, ., domainPannable, !=]
[FastScatterPlot, that, =, (, FastScatterPlot, ), obj, ;, if, (, this, ., domainPannable, !=, that, ., domainPannable, ), {, return]
[), obj, ;, if, (, this, ., domainPannable, !=, that, ., domainPannable, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., domainPannable, !=, that, ., domainPannable, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., domainPannable, !=, that, ., domainPannable, ), {, return, false, ;, }, if, (]
[(, this, ., domainPannable, !=, that, ., domainPannable, ), {, return, false, ;, }, if, (, this, ., rangePannable, !=]
[(, this, ., domainPannable, !=, that, ., domainPannable, ), {, return, false, ;, }, if, (, this, ., rangePannable, !=]
[., domainPannable, ), {, return, false, ;, }, if, (, this, ., rangePannable, !=, that, ., rangePannable, ), {, return]
[false, ;, }, if, (, this, ., rangePannable, !=, that, ., rangePannable, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., rangePannable, !=, that, ., rangePannable, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., rangePannable, !=, that, ., rangePannable, ), {, return, false, ;, }, if, (, !]
[this, ., rangePannable, !=, that, ., rangePannable, ), {, return, false, ;, }, if, (, !, ArrayUtilities, ., equal, (]
[this, ., rangePannable, !=, that, ., rangePannable, ), {, return, false, ;, }, if, (, !, ArrayUtilities, ., equal, (]
[that, ., rangePannable, ), {, return, false, ;, }, if, (, !, ArrayUtilities, ., equal, (, this, ., data, ,]
[that, ., rangePannable, ), {, return, false, ;, }, if, (, !, ArrayUtilities, ., equal, (, this, ., data, ,]
[;, }, if, (, !, ArrayUtilities, ., equal, (, this, ., data, ,, that, ., data, ), ), {, return]
[ArrayUtilities, ., equal, (, this, ., data, ,, that, ., data, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., data, ,, that, ., data, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., data, ,, that, ., data, ), ), {, return, false, ;, }, if, (, !]
[., data, ,, that, ., data, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., data, ,, that, ., data, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., data, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., domainAxis, ,]
[., data, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., domainAxis, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., domainAxis, ,, that, ., domainAxis, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., domainAxis, ,, that, ., domainAxis, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., domainAxis, ,, that, ., domainAxis, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., domainAxis, ,, that, ., domainAxis, ), ), {, return, false, ;, }, if, (, !]
[., domainAxis, ,, that, ., domainAxis, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., domainAxis, ,, that, ., domainAxis, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., domainAxis, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rangeAxis, ,]
[., domainAxis, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rangeAxis, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rangeAxis, ,, that, ., rangeAxis, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., rangeAxis, ,, that, ., rangeAxis, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., rangeAxis, ,, that, ., rangeAxis, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., rangeAxis, ,, that, ., rangeAxis, ), ), {, return, false, ;, }, if, (, !]
[., rangeAxis, ,, that, ., rangeAxis, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., rangeAxis, ,, that, ., rangeAxis, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., rangeAxis, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[., rangeAxis, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (]
[PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (]
[PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (]
[this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, this, ., domainGridlinesVisible, !=]
[this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, this, ., domainGridlinesVisible, !=]
[paint, ), ), {, return, false, ;, }, if, (, this, ., domainGridlinesVisible, !=, that, ., domainGridlinesVisible, ), {, return]
[false, ;, }, if, (, this, ., domainGridlinesVisible, !=, that, ., domainGridlinesVisible, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., domainGridlinesVisible, !=, that, ., domainGridlinesVisible, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., domainGridlinesVisible, !=, that, ., domainGridlinesVisible, ), {, return, false, ;, }, if, (, !]
[this, ., domainGridlinesVisible, !=, that, ., domainGridlinesVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[this, ., domainGridlinesVisible, !=, that, ., domainGridlinesVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[that, ., domainGridlinesVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., domainGridlinePaint, ,]
[that, ., domainGridlinesVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., domainGridlinePaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., domainGridlinePaint, ,, that, ., domainGridlinePaint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., domainGridlinePaint, ,, that, ., domainGridlinePaint, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., domainGridlinePaint, ,, that, ., domainGridlinePaint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., domainGridlinePaint, ,, that, ., domainGridlinePaint, ), ), {, return, false, ;, }, if, (, !]
[., domainGridlinePaint, ,, that, ., domainGridlinePaint, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., domainGridlinePaint, ,, that, ., domainGridlinePaint, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., domainGridlinePaint, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., domainGridlineStroke, ,]
[., domainGridlinePaint, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., domainGridlineStroke, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., domainGridlineStroke, ,, that, ., domainGridlineStroke, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., domainGridlineStroke, ,, that, ., domainGridlineStroke, ), ), {, return, false, ;, }, if, (]
[ObjectUtilities, ., equal, (, this, ., domainGridlineStroke, ,, that, ., domainGridlineStroke, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., domainGridlineStroke, ,, that, ., domainGridlineStroke, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., domainGridlineStroke, ,, that, ., domainGridlineStroke, ), ), {, return, false, ;, }, if, (, !]
[., domainGridlineStroke, ,, that, ., domainGridlineStroke, ), ), {, return, false, ;, }, if, (, !, this, ., rangeGridlinesVisible, ==]
[., domainGridlineStroke, ,, that, ., domainGridlineStroke, ), ), {, return, false, ;, }, if, (, !, this, ., rangeGridlinesVisible, ==]
[), ), {, return, false, ;, }, if, (, !, this, ., rangeGridlinesVisible, ==, that, ., rangeGridlinesVisible, ), {, return]
[;, }, if, (, !, this, ., rangeGridlinesVisible, ==, that, ., rangeGridlinesVisible, ), {, return, false, ;, }, if, (]
[}, if, (, !, this, ., rangeGridlinesVisible, ==, that, ., rangeGridlinesVisible, ), {, return, false, ;, }, if, (, !]
[}, if, (, !, this, ., rangeGridlinesVisible, ==, that, ., rangeGridlinesVisible, ), {, return, false, ;, }, if, (, !]
[this, ., rangeGridlinesVisible, ==, that, ., rangeGridlinesVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[this, ., rangeGridlinesVisible, ==, that, ., rangeGridlinesVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[that, ., rangeGridlinesVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., rangeGridlinePaint, ,]
[that, ., rangeGridlinesVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., rangeGridlinePaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., rangeGridlinePaint, ,, that, ., rangeGridlinePaint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., rangeGridlinePaint, ,, that, ., rangeGridlinePaint, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., rangeGridlinePaint, ,, that, ., rangeGridlinePaint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., rangeGridlinePaint, ,, that, ., rangeGridlinePaint, ), ), {, return, false, ;, }, if, (, !]
[., rangeGridlinePaint, ,, that, ., rangeGridlinePaint, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., rangeGridlinePaint, ,, that, ., rangeGridlinePaint, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., rangeGridlinePaint, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rangeGridlineStroke, ,]
[., rangeGridlinePaint, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rangeGridlineStroke, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rangeGridlineStroke, ,, that, ., rangeGridlineStroke, ), ), {, return]
[!, ObjectUtilities, ., equal, (, this, ., rangeGridlineStroke, ,, that, ., rangeGridlineStroke, ), ), {, return, false, ;, }, return]
[{, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, FastScatterPlot, clone, =]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, FastScatterPlot, clone, =, (, FastScatterPlot, )]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, FastScatterPlot, clone, =, (, FastScatterPlot, )]
[clone, (, ), throws, CloneNotSupportedException, {, FastScatterPlot, clone, =, (, FastScatterPlot, ), super, ., clone, (, ), ;, if, (]
[clone, (, ), throws, CloneNotSupportedException, {, FastScatterPlot, clone, =, (, FastScatterPlot, ), super, ., clone, (, ), ;, if, (]
[clone, (, ), throws, CloneNotSupportedException, {, FastScatterPlot, clone, =, (, FastScatterPlot, ), super, ., clone, (, ), ;, if, (]
[CloneNotSupportedException, {, FastScatterPlot, clone, =, (, FastScatterPlot, ), super, ., clone, (, ), ;, if, (, this, ., data, !=]
[clone, =, (, FastScatterPlot, ), super, ., clone, (, ), ;, if, (, this, ., data, !=, null, ), {]
[clone, =, (, FastScatterPlot, ), super, ., clone, (, ), ;, if, (, this, ., data, !=, null, ), {]
[), super, ., clone, (, ), ;, if, (, this, ., data, !=, null, ), {, clone, ., data, =]
[), super, ., clone, (, ), ;, if, (, this, ., data, !=, null, ), {, clone, ., data, =]
[(, ), ;, if, (, this, ., data, !=, null, ), {, clone, ., data, =, ArrayUtilities, ., clone, (]
[(, ), ;, if, (, this, ., data, !=, null, ), {, clone, ., data, =, ArrayUtilities, ., clone, (]
[!=, null, ), {, clone, ., data, =, ArrayUtilities, ., clone, (, this, ., data, ), ;, }, if, (]
[!=, null, ), {, clone, ., data, =, ArrayUtilities, ., clone, (, this, ., data, ), ;, }, if, (]
[!=, null, ), {, clone, ., data, =, ArrayUtilities, ., clone, (, this, ., data, ), ;, }, if, (]
[clone, ., data, =, ArrayUtilities, ., clone, (, this, ., data, ), ;, }, if, (, this, ., domainAxis, !=]
[=, ArrayUtilities, ., clone, (, this, ., data, ), ;, }, if, (, this, ., domainAxis, !=, null, ), {]
[=, ArrayUtilities, ., clone, (, this, ., data, ), ;, }, if, (, this, ., domainAxis, !=, null, ), {]
[(, this, ., data, ), ;, }, if, (, this, ., domainAxis, !=, null, ), {, clone, ., domainAxis, =]
[data, ), ;, }, if, (, this, ., domainAxis, !=, null, ), {, clone, ., domainAxis, =, (, ValueAxis, )]
[data, ), ;, }, if, (, this, ., domainAxis, !=, null, ), {, clone, ., domainAxis, =, (, ValueAxis, )]
[data, ), ;, }, if, (, this, ., domainAxis, !=, null, ), {, clone, ., domainAxis, =, (, ValueAxis, )]
[domainAxis, !=, null, ), {, clone, ., domainAxis, =, (, ValueAxis, ), this, ., domainAxis, ., clone, (, ), ;]
[domainAxis, !=, null, ), {, clone, ., domainAxis, =, (, ValueAxis, ), this, ., domainAxis, ., clone, (, ), ;]
[domainAxis, !=, null, ), {, clone, ., domainAxis, =, (, ValueAxis, ), this, ., domainAxis, ., clone, (, ), ;]
[., domainAxis, =, (, ValueAxis, ), this, ., domainAxis, ., clone, (, ), ;, clone, ., domainAxis, ., setPlot, (]
[(, ValueAxis, ), this, ., domainAxis, ., clone, (, ), ;, clone, ., domainAxis, ., setPlot, (, clone, ), ;]
[(, ValueAxis, ), this, ., domainAxis, ., clone, (, ), ;, clone, ., domainAxis, ., setPlot, (, clone, ), ;]
[(, ValueAxis, ), this, ., domainAxis, ., clone, (, ), ;, clone, ., domainAxis, ., setPlot, (, clone, ), ;]
[., clone, (, ), ;, clone, ., domainAxis, ., setPlot, (, clone, ), ;, clone, ., domainAxis, ., addChangeListener, (]
[., domainAxis, ., setPlot, (, clone, ), ;, clone, ., domainAxis, ., addChangeListener, (, clone, ), ;, }, if, (]
[., domainAxis, ., setPlot, (, clone, ), ;, clone, ., domainAxis, ., addChangeListener, (, clone, ), ;, }, if, (]
[., domainAxis, ., setPlot, (, clone, ), ;, clone, ., domainAxis, ., addChangeListener, (, clone, ), ;, }, if, (]
[(, clone, ), ;, clone, ., domainAxis, ., addChangeListener, (, clone, ), ;, }, if, (, this, ., rangeAxis, !=]
[;, clone, ., domainAxis, ., addChangeListener, (, clone, ), ;, }, if, (, this, ., rangeAxis, !=, null, ), {]
[;, clone, ., domainAxis, ., addChangeListener, (, clone, ), ;, }, if, (, this, ., rangeAxis, !=, null, ), {]
[., addChangeListener, (, clone, ), ;, }, if, (, this, ., rangeAxis, !=, null, ), {, clone, ., rangeAxis, =]
[clone, ), ;, }, if, (, this, ., rangeAxis, !=, null, ), {, clone, ., rangeAxis, =, (, ValueAxis, )]
[clone, ), ;, }, if, (, this, ., rangeAxis, !=, null, ), {, clone, ., rangeAxis, =, (, ValueAxis, )]
[clone, ), ;, }, if, (, this, ., rangeAxis, !=, null, ), {, clone, ., rangeAxis, =, (, ValueAxis, )]
[rangeAxis, !=, null, ), {, clone, ., rangeAxis, =, (, ValueAxis, ), this, ., rangeAxis, ., clone, (, ), ;]
[rangeAxis, !=, null, ), {, clone, ., rangeAxis, =, (, ValueAxis, ), this, ., rangeAxis, ., clone, (, ), ;]
[rangeAxis, !=, null, ), {, clone, ., rangeAxis, =, (, ValueAxis, ), this, ., rangeAxis, ., clone, (, ), ;]
[., rangeAxis, =, (, ValueAxis, ), this, ., rangeAxis, ., clone, (, ), ;, clone, ., rangeAxis, ., setPlot, (]
[(, ValueAxis, ), this, ., rangeAxis, ., clone, (, ), ;, clone, ., rangeAxis, ., setPlot, (, clone, ), ;]
[(, ValueAxis, ), this, ., rangeAxis, ., clone, (, ), ;, clone, ., rangeAxis, ., setPlot, (, clone, ), ;]
[(, ValueAxis, ), this, ., rangeAxis, ., clone, (, ), ;, clone, ., rangeAxis, ., setPlot, (, clone, ), ;]
[., clone, (, ), ;, clone, ., rangeAxis, ., setPlot, (, clone, ), ;, clone, ., rangeAxis, ., addChangeListener, (]
[clone, ., rangeAxis, ., setPlot, (, clone, ), ;, clone, ., rangeAxis, ., addChangeListener, (, clone, ), ;, }, return]
[addChangeListener, (, clone, ), ;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[addChangeListener, (, clone, ), ;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,]
[throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;]
[throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (]
[;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., domainGridlineStroke, ,]
[writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., domainGridlineStroke, ,, stream, ), ;]
[writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., domainGridlineStroke, ,, stream, ), ;]
[paint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., domainGridlineStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (]
[paint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., domainGridlineStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (]
[;, SerialUtilities, ., writeStroke, (, this, ., domainGridlineStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., domainGridlinePaint, ,]
[writeStroke, (, this, ., domainGridlineStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., domainGridlinePaint, ,, stream, ), ;]
[writeStroke, (, this, ., domainGridlineStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., domainGridlinePaint, ,, stream, ), ;]
[domainGridlineStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., domainGridlinePaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (]
[domainGridlineStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., domainGridlinePaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (]
[;, SerialUtilities, ., writePaint, (, this, ., domainGridlinePaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., rangeGridlineStroke, ,]
[writePaint, (, this, ., domainGridlinePaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., rangeGridlineStroke, ,, stream, ), ;]
[writePaint, (, this, ., domainGridlinePaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., rangeGridlineStroke, ,, stream, ), ;]
[domainGridlinePaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., rangeGridlineStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (]
[domainGridlinePaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., rangeGridlineStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (]
[;, SerialUtilities, ., writeStroke, (, this, ., rangeGridlineStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., rangeGridlinePaint, ,]
[this, ., rangeGridlinePaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[this, ., rangeGridlinePaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (]
[,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., domainGridlineStroke, =]
[., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., domainGridlineStroke, =]
[;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., domainGridlineStroke, =, SerialUtilities, ., readStroke, (]
[paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., domainGridlineStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;]
[paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., domainGridlineStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;]
[readPaint, (, stream, ), ;, this, ., domainGridlineStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., domainGridlinePaint, =]
[readPaint, (, stream, ), ;, this, ., domainGridlineStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., domainGridlinePaint, =]
[;, this, ., domainGridlineStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., domainGridlinePaint, =, SerialUtilities, ., readPaint, (]
[domainGridlineStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., domainGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[domainGridlineStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., domainGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[readStroke, (, stream, ), ;, this, ., domainGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., rangeGridlineStroke, =]
[readStroke, (, stream, ), ;, this, ., domainGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., rangeGridlineStroke, =]
[;, this, ., domainGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., rangeGridlineStroke, =, SerialUtilities, ., readStroke, (]
[domainGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., rangeGridlineStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;]
[domainGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., rangeGridlineStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;]
[readPaint, (, stream, ), ;, this, ., rangeGridlineStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., rangeGridlinePaint, =]
[readPaint, (, stream, ), ;, this, ., rangeGridlineStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., rangeGridlinePaint, =]
[;, this, ., rangeGridlineStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., rangeGridlinePaint, =, SerialUtilities, ., readPaint, (]
[SerialUtilities, ., readStroke, (, stream, ), ;, this, ., rangeGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, if, (]
[SerialUtilities, ., readStroke, (, stream, ), ;, this, ., rangeGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, if, (]
[SerialUtilities, ., readStroke, (, stream, ), ;, this, ., rangeGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, if, (]
[stream, ), ;, this, ., rangeGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, if, (, this, ., domainAxis, !=]
[this, ., rangeGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, if, (, this, ., domainAxis, !=, null, ), {]
[this, ., rangeGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, if, (, this, ., domainAxis, !=, null, ), {]
[this, ., rangeGridlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, if, (, this, ., domainAxis, !=, null, ), {]
[readPaint, (, stream, ), ;, if, (, this, ., domainAxis, !=, null, ), {, this, ., domainAxis, ., addChangeListener, (]
[(, this, ., domainAxis, !=, null, ), {, this, ., domainAxis, ., addChangeListener, (, this, ), ;, }, if, (]
[(, this, ., domainAxis, !=, null, ), {, this, ., domainAxis, ., addChangeListener, (, this, ), ;, }, if, (]
[(, this, ., domainAxis, !=, null, ), {, this, ., domainAxis, ., addChangeListener, (, this, ), ;, }, if, (]
[!=, null, ), {, this, ., domainAxis, ., addChangeListener, (, this, ), ;, }, if, (, this, ., rangeAxis, !=]
[{, this, ., domainAxis, ., addChangeListener, (, this, ), ;, }, if, (, this, ., rangeAxis, !=, null, ), {]
[{, this, ., domainAxis, ., addChangeListener, (, this, ), ;, }, if, (, this, ., rangeAxis, !=, null, ), {]
[{, this, ., domainAxis, ., addChangeListener, (, this, ), ;, }, if, (, this, ., rangeAxis, !=, null, ), {]
[(, this, ), ;, }, if, (, this, ., rangeAxis, !=, null, ), {, this, ., rangeAxis, ., addChangeListener, (]
