[public, class, FieldRotation, <, T, extends, RealFieldElement, <, T, >, >, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[,, final, T, q1, ,, final, T, q2, ,, final, T, q3, ,, final, boolean, needsNormalization, ), {, if, (]
[q2, ,, final, T, q3, ,, final, boolean, needsNormalization, ), {, if, (, needsNormalization, ), {, final, T, inv, =]
[q2, ,, final, T, q3, ,, final, boolean, needsNormalization, ), {, if, (, needsNormalization, ), {, final, T, inv, =]
[q2, ,, final, T, q3, ,, final, boolean, needsNormalization, ), {, if, (, needsNormalization, ), {, final, T, inv, =]
[q2, ,, final, T, q3, ,, final, boolean, needsNormalization, ), {, if, (, needsNormalization, ), {, final, T, inv, =]
[q2, ,, final, T, q3, ,, final, boolean, needsNormalization, ), {, if, (, needsNormalization, ), {, final, T, inv, =]
[q2, ,, final, T, q3, ,, final, boolean, needsNormalization, ), {, if, (, needsNormalization, ), {, final, T, inv, =]
[q2, ,, final, T, q3, ,, final, boolean, needsNormalization, ), {, if, (, needsNormalization, ), {, final, T, inv, =]
[q3, ,, final, boolean, needsNormalization, ), {, if, (, needsNormalization, ), {, final, T, inv, =, q0, ., multiply, (]
[), {, if, (, needsNormalization, ), {, final, T, inv, =, q0, ., multiply, (, q0, ), ., add, (]
[), {, if, (, needsNormalization, ), {, final, T, inv, =, q0, ., multiply, (, q0, ), ., add, (]
[needsNormalization, ), {, final, T, inv, =, q0, ., multiply, (, q0, ), ., add, (, q1, ., multiply, (]
[=, q0, ., multiply, (, q0, ), ., add, (, q1, ., multiply, (, q1, ), ), ., add, (]
[=, q0, ., multiply, (, q0, ), ., add, (, q1, ., multiply, (, q1, ), ), ., add, (]
[(, q0, ), ., add, (, q1, ., multiply, (, q1, ), ), ., add, (, q2, ., multiply, (]
[q1, ., multiply, (, q1, ), ), ., add, (, q2, ., multiply, (, q2, ), ), ., add, (]
[q1, ., multiply, (, q1, ), ), ., add, (, q2, ., multiply, (, q2, ), ), ., add, (]
[q1, ), ), ., add, (, q2, ., multiply, (, q2, ), ), ., add, (, q3, ., multiply, (]
[), ., add, (, q3, ., multiply, (, q3, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;]
[), ., add, (, q3, ., multiply, (, q3, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;]
[q3, ., multiply, (, q3, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, this, ., q0, =]
[q3, ., multiply, (, q3, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, this, ., q0, =]
[q3, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, this, ., q0, =, inv, ., multiply, (]
[., sqrt, (, ), ., reciprocal, (, ), ;, this, ., q0, =, inv, ., multiply, (, q0, ), ;]
[., sqrt, (, ), ., reciprocal, (, ), ;, this, ., q0, =, inv, ., multiply, (, q0, ), ;]
[., reciprocal, (, ), ;, this, ., q0, =, inv, ., multiply, (, q0, ), ;, this, ., q1, =]
[., reciprocal, (, ), ;, this, ., q0, =, inv, ., multiply, (, q0, ), ;, this, ., q1, =]
[;, this, ., q0, =, inv, ., multiply, (, q0, ), ;, this, ., q1, =, inv, ., multiply, (]
[q0, =, inv, ., multiply, (, q0, ), ;, this, ., q1, =, inv, ., multiply, (, q1, ), ;]
[q0, =, inv, ., multiply, (, q0, ), ;, this, ., q1, =, inv, ., multiply, (, q1, ), ;]
[multiply, (, q0, ), ;, this, ., q1, =, inv, ., multiply, (, q1, ), ;, this, ., q2, =]
[multiply, (, q0, ), ;, this, ., q1, =, inv, ., multiply, (, q1, ), ;, this, ., q2, =]
[;, this, ., q1, =, inv, ., multiply, (, q1, ), ;, this, ., q2, =, inv, ., multiply, (]
[q1, =, inv, ., multiply, (, q1, ), ;, this, ., q2, =, inv, ., multiply, (, q2, ), ;]
[q1, =, inv, ., multiply, (, q1, ), ;, this, ., q2, =, inv, ., multiply, (, q2, ), ;]
[multiply, (, q1, ), ;, this, ., q2, =, inv, ., multiply, (, q2, ), ;, this, ., q3, =]
[multiply, (, q1, ), ;, this, ., q2, =, inv, ., multiply, (, q2, ), ;, this, ., q3, =]
[;, this, ., q2, =, inv, ., multiply, (, q2, ), ;, this, ., q3, =, inv, ., multiply, (]
[., multiply, (, q2, ), ;, this, ., q3, =, inv, ., multiply, (, q3, ), ;, }, else, {]
[., multiply, (, q2, ), ;, this, ., q3, =, inv, ., multiply, (, q3, ), ;, }, else, {]
[), ;, this, ., q3, =, inv, ., multiply, (, q3, ), ;, }, else, {, this, ., q0, =]
[this, ., q3, =, inv, ., multiply, (, q3, ), ;, }, else, {, this, ., q0, =, q0, ;]
[this, ., q3, =, inv, ., multiply, (, q3, ), ;, }, else, {, this, ., q0, =, q0, ;]
[inv, ., multiply, (, q3, ), ;, }, else, {, this, ., q0, =, q0, ;, this, ., q1, =]
[multiply, (, q3, ), ;, }, else, {, this, ., q0, =, q0, ;, this, ., q1, =, q1, ;]
[multiply, (, q3, ), ;, }, else, {, this, ., q0, =, q0, ;, this, ., q1, =, q1, ;]
[;, }, else, {, this, ., q0, =, q0, ;, this, ., q1, =, q1, ;, this, ., q2, =]
[else, {, this, ., q0, =, q0, ;, this, ., q1, =, q1, ;, this, ., q2, =, q2, ;]
[else, {, this, ., q0, =, q0, ;, this, ., q1, =, q1, ;, this, ., q2, =, q2, ;]
[q0, =, q0, ;, this, ., q1, =, q1, ;, this, ., q2, =, q2, ;, this, ., q3, =]
[FieldRotation, (, final, FieldVector3D, <, T, >, axis, ,, final, T, angle, ), throws, MathIllegalArgumentException, {, final, T, norm, =]
[FieldRotation, (, final, FieldVector3D, <, T, >, axis, ,, final, T, angle, ), throws, MathIllegalArgumentException, {, final, T, norm, =]
[,, final, T, angle, ), throws, MathIllegalArgumentException, {, final, T, norm, =, axis, ., getNorm, (, ), ;, if, (]
[,, final, T, angle, ), throws, MathIllegalArgumentException, {, final, T, norm, =, axis, ., getNorm, (, ), ;, if, (]
[,, final, T, angle, ), throws, MathIllegalArgumentException, {, final, T, norm, =, axis, ., getNorm, (, ), ;, if, (]
[MathIllegalArgumentException, {, final, T, norm, =, axis, ., getNorm, (, ), ;, if, (, norm, ., getReal, (, ), ==]
[norm, =, axis, ., getNorm, (, ), ;, if, (, norm, ., getReal, (, ), ==, 0, ), {, throw]
[., getNorm, (, ), ;, if, (, norm, ., getReal, (, ), ==, 0, ), {, throw, new, MathIllegalArgumentException, (]
[., getNorm, (, ), ;, if, (, norm, ., getReal, (, ), ==, 0, ), {, throw, new, MathIllegalArgumentException, (]
[(, ), ==, 0, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., ZERO_NORM_FOR_ROTATION_AXIS, ), ;, }, final, T, halfAngle, =]
[(, ), ==, 0, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., ZERO_NORM_FOR_ROTATION_AXIS, ), ;, }, final, T, halfAngle, =]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., ZERO_NORM_FOR_ROTATION_AXIS, ), ;, }, final, T, halfAngle, =, angle, ., multiply, (]
[{, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., ZERO_NORM_FOR_ROTATION_AXIS, ), ;, }, final, T, halfAngle, =, angle, ., multiply, (, -]
[ZERO_NORM_FOR_ROTATION_AXIS, ), ;, }, final, T, halfAngle, =, angle, ., multiply, (, -, 0.5, ), ;, final, T, coeff, =]
[ZERO_NORM_FOR_ROTATION_AXIS, ), ;, }, final, T, halfAngle, =, angle, ., multiply, (, -, 0.5, ), ;, final, T, coeff, =]
[ZERO_NORM_FOR_ROTATION_AXIS, ), ;, }, final, T, halfAngle, =, angle, ., multiply, (, -, 0.5, ), ;, final, T, coeff, =]
[angle, ., multiply, (, -, 0.5, ), ;, final, T, coeff, =, halfAngle, ., sin, (, ), ., divide, (]
[(, -, 0.5, ), ;, final, T, coeff, =, halfAngle, ., sin, (, ), ., divide, (, norm, ), ;]
[0.5, ), ;, final, T, coeff, =, halfAngle, ., sin, (, ), ., divide, (, norm, ), ;, q0, =]
[0.5, ), ;, final, T, coeff, =, halfAngle, ., sin, (, ), ., divide, (, norm, ), ;, q0, =]
[=, halfAngle, ., sin, (, ), ., divide, (, norm, ), ;, q0, =, halfAngle, ., cos, (, ), ;]
[., sin, (, ), ., divide, (, norm, ), ;, q0, =, halfAngle, ., cos, (, ), ;, q1, =]
[., sin, (, ), ., divide, (, norm, ), ;, q0, =, halfAngle, ., cos, (, ), ;, q1, =]
[., divide, (, norm, ), ;, q0, =, halfAngle, ., cos, (, ), ;, q1, =, coeff, ., multiply, (]
[., divide, (, norm, ), ;, q0, =, halfAngle, ., cos, (, ), ;, q1, =, coeff, ., multiply, (]
[=, halfAngle, ., cos, (, ), ;, q1, =, coeff, ., multiply, (, axis, ., getX, (, ), ), ;]
[., cos, (, ), ;, q1, =, coeff, ., multiply, (, axis, ., getX, (, ), ), ;, q2, =]
[., cos, (, ), ;, q1, =, coeff, ., multiply, (, axis, ., getX, (, ), ), ;, q2, =]
[;, q1, =, coeff, ., multiply, (, axis, ., getX, (, ), ), ;, q2, =, coeff, ., multiply, (]
[;, q1, =, coeff, ., multiply, (, axis, ., getX, (, ), ), ;, q2, =, coeff, ., multiply, (]
[axis, ., getX, (, ), ), ;, q2, =, coeff, ., multiply, (, axis, ., getY, (, ), ), ;]
[getX, (, ), ), ;, q2, =, coeff, ., multiply, (, axis, ., getY, (, ), ), ;, q3, =]
[getX, (, ), ), ;, q2, =, coeff, ., multiply, (, axis, ., getY, (, ), ), ;, q3, =]
[;, q2, =, coeff, ., multiply, (, axis, ., getY, (, ), ), ;, q3, =, coeff, ., multiply, (]
[;, q2, =, coeff, ., multiply, (, axis, ., getY, (, ), ), ;, q3, =, coeff, ., multiply, (]
[public, FieldRotation, (, final, T, [, ], [, ], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, if, (]
[public, FieldRotation, (, final, T, [, ], [, ], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, if, (]
[public, FieldRotation, (, final, T, [, ], [, ], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, if, (]
[public, FieldRotation, (, final, T, [, ], [, ], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, if, (]
[FieldRotation, (, final, T, [, ], [, ], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, if, (, (]
[FieldRotation, (, final, T, [, ], [, ], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, if, (, (]
[FieldRotation, (, final, T, [, ], [, ], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, if, (, (]
[[, ], [, ], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, if, (, (, m, ., length, !=]
[], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, if, (, (, m, ., length, !=, 3, ), ||]
[m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, if, (, (, m, ., length, !=, 3, ), ||, (]
[m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, if, (, (, m, ., length, !=, 3, ), ||, (]
[m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, if, (, (, m, ., length, !=, 3, ), ||, (]
[m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, if, (, (, m, ., length, !=, 3, ), ||, (]
[final, double, threshold, ), throws, NotARotationMatrixException, {, if, (, (, m, ., length, !=, 3, ), ||, (, m, []
[NotARotationMatrixException, {, if, (, (, m, ., length, !=, 3, ), ||, (, m, [, 0, ], ., length, !=]
[(, (, m, ., length, !=, 3, ), ||, (, m, [, 0, ], ., length, !=, 3, ), ||]
[(, m, ., length, !=, 3, ), ||, (, m, [, 0, ], ., length, !=, 3, ), ||, (]
[(, m, ., length, !=, 3, ), ||, (, m, [, 0, ], ., length, !=, 3, ), ||, (]
[(, m, ., length, !=, 3, ), ||, (, m, [, 0, ], ., length, !=, 3, ), ||, (]
[(, m, ., length, !=, 3, ), ||, (, m, [, 0, ], ., length, !=, 3, ), ||, (]
[., length, !=, 3, ), ||, (, m, [, 0, ], ., length, !=, 3, ), ||, (, m, []
[||, (, m, [, 0, ], ., length, !=, 3, ), ||, (, m, [, 1, ], ., length, !=]
[[, 0, ], ., length, !=, 3, ), ||, (, m, [, 1, ], ., length, !=, 3, ), ||]
[0, ], ., length, !=, 3, ), ||, (, m, [, 1, ], ., length, !=, 3, ), ||, (]
[0, ], ., length, !=, 3, ), ||, (, m, [, 1, ], ., length, !=, 3, ), ||, (]
[0, ], ., length, !=, 3, ), ||, (, m, [, 1, ], ., length, !=, 3, ), ||, (]
[0, ], ., length, !=, 3, ), ||, (, m, [, 1, ], ., length, !=, 3, ), ||, (]
[., length, !=, 3, ), ||, (, m, [, 1, ], ., length, !=, 3, ), ||, (, m, []
[||, (, m, [, 1, ], ., length, !=, 3, ), ||, (, m, [, 2, ], ., length, !=]
[], ., length, !=, 3, ), ||, (, m, [, 2, ], ., length, !=, 3, ), ), {, throw]
[!=, 3, ), ||, (, m, [, 2, ], ., length, !=, 3, ), ), {, throw, new, NotARotationMatrixException, (]
[!=, 3, ), ||, (, m, [, 2, ], ., length, !=, 3, ), ), {, throw, new, NotARotationMatrixException, (]
[(, m, [, 2, ], ., length, !=, 3, ), ), {, throw, new, NotARotationMatrixException, (, LocalizedFormats, ., ROTATION_MATRIX_DIMENSIONS, ,]
[(, m, [, 2, ], ., length, !=, 3, ), ), {, throw, new, NotARotationMatrixException, (, LocalizedFormats, ., ROTATION_MATRIX_DIMENSIONS, ,]
[], ., length, !=, 3, ), ), {, throw, new, NotARotationMatrixException, (, LocalizedFormats, ., ROTATION_MATRIX_DIMENSIONS, ,, m, ., length, ,]
[], ., length, !=, 3, ), ), {, throw, new, NotARotationMatrixException, (, LocalizedFormats, ., ROTATION_MATRIX_DIMENSIONS, ,, m, ., length, ,]
[], ., length, !=, 3, ), ), {, throw, new, NotARotationMatrixException, (, LocalizedFormats, ., ROTATION_MATRIX_DIMENSIONS, ,, m, ., length, ,]
[length, !=, 3, ), ), {, throw, new, NotARotationMatrixException, (, LocalizedFormats, ., ROTATION_MATRIX_DIMENSIONS, ,, m, ., length, ,, m, []
[., length, ,, m, [, 0, ], ., length, ), ;, }, final, T, [, ], [, ], ort, =]
[,, m, [, 0, ], ., length, ), ;, }, final, T, [, ], [, ], ort, =, orthogonalizeMatrix, (]
[[, 0, ], ., length, ), ;, }, final, T, [, ], [, ], ort, =, orthogonalizeMatrix, (, m, ,]
[}, final, T, [, ], [, ], ort, =, orthogonalizeMatrix, (, m, ,, threshold, ), ;, final, T, d0, =]
[}, final, T, [, ], [, ], ort, =, orthogonalizeMatrix, (, m, ,, threshold, ), ;, final, T, d0, =]
[}, final, T, [, ], [, ], ort, =, orthogonalizeMatrix, (, m, ,, threshold, ), ;, final, T, d0, =]
[}, final, T, [, ], [, ], ort, =, orthogonalizeMatrix, (, m, ,, threshold, ), ;, final, T, d0, =]
[}, final, T, [, ], [, ], ort, =, orthogonalizeMatrix, (, m, ,, threshold, ), ;, final, T, d0, =]
[T, [, ], [, ], ort, =, orthogonalizeMatrix, (, m, ,, threshold, ), ;, final, T, d0, =, ort, []
[[, ], ort, =, orthogonalizeMatrix, (, m, ,, threshold, ), ;, final, T, d0, =, ort, [, 1, ], []
[(, m, ,, threshold, ), ;, final, T, d0, =, ort, [, 1, ], [, 1, ], ., multiply, (]
[(, m, ,, threshold, ), ;, final, T, d0, =, ort, [, 1, ], [, 1, ], ., multiply, (]
[(, m, ,, threshold, ), ;, final, T, d0, =, ort, [, 1, ], [, 1, ], ., multiply, (]
[,, threshold, ), ;, final, T, d0, =, ort, [, 1, ], [, 1, ], ., multiply, (, ort, []
[;, final, T, d0, =, ort, [, 1, ], [, 1, ], ., multiply, (, ort, [, 2, ], []
[[, 1, ], [, 1, ], ., multiply, (, ort, [, 2, ], [, 2, ], ), ., subtract, (]
[[, 1, ], [, 1, ], ., multiply, (, ort, [, 2, ], [, 2, ], ), ., subtract, (]
[[, 1, ], [, 1, ], ., multiply, (, ort, [, 2, ], [, 2, ], ), ., subtract, (]
[[, 1, ], [, 1, ], ., multiply, (, ort, [, 2, ], [, 2, ], ), ., subtract, (]
[], [, 1, ], ., multiply, (, ort, [, 2, ], [, 2, ], ), ., subtract, (, ort, []
[], ., multiply, (, ort, [, 2, ], [, 2, ], ), ., subtract, (, ort, [, 2, ], []
[[, 2, ], [, 2, ], ), ., subtract, (, ort, [, 2, ], [, 1, ], ., multiply, (]
[[, 2, ], [, 2, ], ), ., subtract, (, ort, [, 2, ], [, 1, ], ., multiply, (]
[[, 2, ], [, 2, ], ), ., subtract, (, ort, [, 2, ], [, 1, ], ., multiply, (]
[], [, 2, ], ), ., subtract, (, ort, [, 2, ], [, 1, ], ., multiply, (, ort, []
[], ), ., subtract, (, ort, [, 2, ], [, 1, ], ., multiply, (, ort, [, 1, ], []
[[, 1, ], ., multiply, (, ort, [, 1, ], [, 2, ], ), ), ;, final, T, d1, =]
[[, 1, ], ., multiply, (, ort, [, 1, ], [, 2, ], ), ), ;, final, T, d1, =]
[[, 1, ], ., multiply, (, ort, [, 1, ], [, 2, ], ), ), ;, final, T, d1, =]
[[, 1, ], ., multiply, (, ort, [, 1, ], [, 2, ], ), ), ;, final, T, d1, =]
[[, 1, ], ., multiply, (, ort, [, 1, ], [, 2, ], ), ), ;, final, T, d1, =]
[], ., multiply, (, ort, [, 1, ], [, 2, ], ), ), ;, final, T, d1, =, ort, []
[(, ort, [, 1, ], [, 2, ], ), ), ;, final, T, d1, =, ort, [, 0, ], []
[[, 2, ], ), ), ;, final, T, d1, =, ort, [, 0, ], [, 1, ], ., multiply, (]
[[, 2, ], ), ), ;, final, T, d1, =, ort, [, 0, ], [, 1, ], ., multiply, (]
[[, 2, ], ), ), ;, final, T, d1, =, ort, [, 0, ], [, 1, ], ., multiply, (]
[], ), ), ;, final, T, d1, =, ort, [, 0, ], [, 1, ], ., multiply, (, ort, []
[;, final, T, d1, =, ort, [, 0, ], [, 1, ], ., multiply, (, ort, [, 2, ], []
[[, 0, ], [, 1, ], ., multiply, (, ort, [, 2, ], [, 2, ], ), ., subtract, (]
[[, 0, ], [, 1, ], ., multiply, (, ort, [, 2, ], [, 2, ], ), ., subtract, (]
[[, 0, ], [, 1, ], ., multiply, (, ort, [, 2, ], [, 2, ], ), ., subtract, (]
[[, 0, ], [, 1, ], ., multiply, (, ort, [, 2, ], [, 2, ], ), ., subtract, (]
[], [, 1, ], ., multiply, (, ort, [, 2, ], [, 2, ], ), ., subtract, (, ort, []
[], ., multiply, (, ort, [, 2, ], [, 2, ], ), ., subtract, (, ort, [, 2, ], []
[[, 2, ], [, 2, ], ), ., subtract, (, ort, [, 2, ], [, 1, ], ., multiply, (]
[[, 2, ], [, 2, ], ), ., subtract, (, ort, [, 2, ], [, 1, ], ., multiply, (]
[[, 2, ], [, 2, ], ), ., subtract, (, ort, [, 2, ], [, 1, ], ., multiply, (]
[], [, 2, ], ), ., subtract, (, ort, [, 2, ], [, 1, ], ., multiply, (, ort, []
[], ), ., subtract, (, ort, [, 2, ], [, 1, ], ., multiply, (, ort, [, 0, ], []
[[, 1, ], ., multiply, (, ort, [, 0, ], [, 2, ], ), ), ;, final, T, d2, =]
[[, 1, ], ., multiply, (, ort, [, 0, ], [, 2, ], ), ), ;, final, T, d2, =]
[[, 1, ], ., multiply, (, ort, [, 0, ], [, 2, ], ), ), ;, final, T, d2, =]
[[, 1, ], ., multiply, (, ort, [, 0, ], [, 2, ], ), ), ;, final, T, d2, =]
[[, 1, ], ., multiply, (, ort, [, 0, ], [, 2, ], ), ), ;, final, T, d2, =]
[], ., multiply, (, ort, [, 0, ], [, 2, ], ), ), ;, final, T, d2, =, ort, []
[(, ort, [, 0, ], [, 2, ], ), ), ;, final, T, d2, =, ort, [, 0, ], []
[[, 2, ], ), ), ;, final, T, d2, =, ort, [, 0, ], [, 1, ], ., multiply, (]
[[, 2, ], ), ), ;, final, T, d2, =, ort, [, 0, ], [, 1, ], ., multiply, (]
[[, 2, ], ), ), ;, final, T, d2, =, ort, [, 0, ], [, 1, ], ., multiply, (]
[], ), ), ;, final, T, d2, =, ort, [, 0, ], [, 1, ], ., multiply, (, ort, []
[;, final, T, d2, =, ort, [, 0, ], [, 1, ], ., multiply, (, ort, [, 1, ], []
[[, 0, ], [, 1, ], ., multiply, (, ort, [, 1, ], [, 2, ], ), ., subtract, (]
[[, 0, ], [, 1, ], ., multiply, (, ort, [, 1, ], [, 2, ], ), ., subtract, (]
[[, 0, ], [, 1, ], ., multiply, (, ort, [, 1, ], [, 2, ], ), ., subtract, (]
[[, 0, ], [, 1, ], ., multiply, (, ort, [, 1, ], [, 2, ], ), ., subtract, (]
[], [, 1, ], ., multiply, (, ort, [, 1, ], [, 2, ], ), ., subtract, (, ort, []
[], ., multiply, (, ort, [, 1, ], [, 2, ], ), ., subtract, (, ort, [, 1, ], []
[[, 1, ], [, 2, ], ), ., subtract, (, ort, [, 1, ], [, 1, ], ., multiply, (]
[[, 1, ], [, 2, ], ), ., subtract, (, ort, [, 1, ], [, 1, ], ., multiply, (]
[[, 1, ], [, 2, ], ), ., subtract, (, ort, [, 1, ], [, 1, ], ., multiply, (]
[], [, 2, ], ), ., subtract, (, ort, [, 1, ], [, 1, ], ., multiply, (, ort, []
[], ), ., subtract, (, ort, [, 1, ], [, 1, ], ., multiply, (, ort, [, 0, ], []
[[, 1, ], ., multiply, (, ort, [, 0, ], [, 2, ], ), ), ;, final, T, det, =]
[[, 1, ], ., multiply, (, ort, [, 0, ], [, 2, ], ), ), ;, final, T, det, =]
[[, 1, ], ., multiply, (, ort, [, 0, ], [, 2, ], ), ), ;, final, T, det, =]
[[, 1, ], ., multiply, (, ort, [, 0, ], [, 2, ], ), ), ;, final, T, det, =]
[[, 1, ], ., multiply, (, ort, [, 0, ], [, 2, ], ), ), ;, final, T, det, =]
[[, 1, ], ., multiply, (, ort, [, 0, ], [, 2, ], ), ), ;, final, T, det, =]
[], ., multiply, (, ort, [, 0, ], [, 2, ], ), ), ;, final, T, det, =, ort, []
[(, ort, [, 0, ], [, 2, ], ), ), ;, final, T, det, =, ort, [, 0, ], []
[[, 2, ], ), ), ;, final, T, det, =, ort, [, 0, ], [, 0, ], ., multiply, (]
[;, final, T, det, =, ort, [, 0, ], [, 0, ], ., multiply, (, d0, ), ., subtract, (]
[;, final, T, det, =, ort, [, 0, ], [, 0, ], ., multiply, (, d0, ), ., subtract, (]
[;, final, T, det, =, ort, [, 0, ], [, 0, ], ., multiply, (, d0, ), ., subtract, (]
[;, final, T, det, =, ort, [, 0, ], [, 0, ], ., multiply, (, d0, ), ., subtract, (]
[T, det, =, ort, [, 0, ], [, 0, ], ., multiply, (, d0, ), ., subtract, (, ort, []
[ort, [, 0, ], [, 0, ], ., multiply, (, d0, ), ., subtract, (, ort, [, 1, ], []
[0, ], ., multiply, (, d0, ), ., subtract, (, ort, [, 1, ], [, 0, ], ., multiply, (]
[), ., subtract, (, ort, [, 1, ], [, 0, ], ., multiply, (, d1, ), ), ., add, (]
[), ., subtract, (, ort, [, 1, ], [, 0, ], ., multiply, (, d1, ), ), ., add, (]
[), ., subtract, (, ort, [, 1, ], [, 0, ], ., multiply, (, d1, ), ), ., add, (]
[), ., subtract, (, ort, [, 1, ], [, 0, ], ., multiply, (, d1, ), ), ., add, (]
[subtract, (, ort, [, 1, ], [, 0, ], ., multiply, (, d1, ), ), ., add, (, ort, []
[[, 1, ], [, 0, ], ., multiply, (, d1, ), ), ., add, (, ort, [, 2, ], []
[], ., multiply, (, d1, ), ), ., add, (, ort, [, 2, ], [, 0, ], ., multiply, (]
[), ., add, (, ort, [, 2, ], [, 0, ], ., multiply, (, d2, ), ), ;, if, (]
[), ., add, (, ort, [, 2, ], [, 0, ], ., multiply, (, d2, ), ), ;, if, (]
[), ., add, (, ort, [, 2, ], [, 0, ], ., multiply, (, d2, ), ), ;, if, (]
[2, ], [, 0, ], ., multiply, (, d2, ), ), ;, if, (, det, ., getReal, (, ), <]
[], ., multiply, (, d2, ), ), ;, if, (, det, ., getReal, (, ), <, 0.0, ), {, throw]
[(, d2, ), ), ;, if, (, det, ., getReal, (, ), <, 0.0, ), {, throw, new, NotARotationMatrixException, (]
[(, d2, ), ), ;, if, (, det, ., getReal, (, ), <, 0.0, ), {, throw, new, NotARotationMatrixException, (]
[;, if, (, det, ., getReal, (, ), <, 0.0, ), {, throw, new, NotARotationMatrixException, (, LocalizedFormats, ., CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT, ,]
[), {, throw, new, NotARotationMatrixException, (, LocalizedFormats, ., CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT, ,, det, ), ;, }, final, T, [, ], quat, =]
[throw, new, NotARotationMatrixException, (, LocalizedFormats, ., CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT, ,, det, ), ;, }, final, T, [, ], quat, =, mat2quat, (]
[(, LocalizedFormats, ., CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT, ,, det, ), ;, }, final, T, [, ], quat, =, mat2quat, (, ort, ), ;]
[., CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT, ,, det, ), ;, }, final, T, [, ], quat, =, mat2quat, (, ort, ), ;, q0, =]
[., CLOSEST_ORTHOGONAL_MATRIX_HAS_NEGATIVE_DETERMINANT, ,, det, ), ;, }, final, T, [, ], quat, =, mat2quat, (, ort, ), ;, q0, =]
[,, det, ), ;, }, final, T, [, ], quat, =, mat2quat, (, ort, ), ;, q0, =, quat, []
[;, }, final, T, [, ], quat, =, mat2quat, (, ort, ), ;, q0, =, quat, [, 0, ], ;]
[final, T, [, ], quat, =, mat2quat, (, ort, ), ;, q0, =, quat, [, 0, ], ;, q1, =]
[final, T, [, ], quat, =, mat2quat, (, ort, ), ;, q0, =, quat, [, 0, ], ;, q1, =]
[[, ], quat, =, mat2quat, (, ort, ), ;, q0, =, quat, [, 0, ], ;, q1, =, quat, []
[=, mat2quat, (, ort, ), ;, q0, =, quat, [, 0, ], ;, q1, =, quat, [, 1, ], ;]
[(, ort, ), ;, q0, =, quat, [, 0, ], ;, q1, =, quat, [, 1, ], ;, q2, =]
[(, ort, ), ;, q0, =, quat, [, 0, ], ;, q1, =, quat, [, 1, ], ;, q2, =]
[), ;, q0, =, quat, [, 0, ], ;, q1, =, quat, [, 1, ], ;, q2, =, quat, []
[=, quat, [, 0, ], ;, q1, =, quat, [, 1, ], ;, q2, =, quat, [, 2, ], ;]
[[, 0, ], ;, q1, =, quat, [, 1, ], ;, q2, =, quat, [, 2, ], ;, q3, =]
[[, 0, ], ;, q1, =, quat, [, 1, ], ;, q2, =, quat, [, 2, ], ;, q3, =]
[], ;, q1, =, quat, [, 1, ], ;, q2, =, quat, [, 2, ], ;, q3, =, quat, []
[T, >, v1, ,, FieldVector3D, <, T, >, v2, ), throws, MathArithmeticException, {, final, FieldVector3D, <, T, >, u3, =]
[T, >, v1, ,, FieldVector3D, <, T, >, v2, ), throws, MathArithmeticException, {, final, FieldVector3D, <, T, >, u3, =]
[T, >, v1, ,, FieldVector3D, <, T, >, v2, ), throws, MathArithmeticException, {, final, FieldVector3D, <, T, >, u3, =]
[FieldVector3D, <, T, >, v2, ), throws, MathArithmeticException, {, final, FieldVector3D, <, T, >, u3, =, FieldVector3D, ., crossProduct, (]
[T, >, v2, ), throws, MathArithmeticException, {, final, FieldVector3D, <, T, >, u3, =, FieldVector3D, ., crossProduct, (, u1, ,]
[final, FieldVector3D, <, T, >, u3, =, FieldVector3D, ., crossProduct, (, u1, ,, u2, ), ., normalize, (, ), ;]
[<, T, >, u3, =, FieldVector3D, ., crossProduct, (, u1, ,, u2, ), ., normalize, (, ), ;, u2, =]
[<, T, >, u3, =, FieldVector3D, ., crossProduct, (, u1, ,, u2, ), ., normalize, (, ), ;, u2, =]
[<, T, >, u3, =, FieldVector3D, ., crossProduct, (, u1, ,, u2, ), ., normalize, (, ), ;, u2, =]
[=, FieldVector3D, ., crossProduct, (, u1, ,, u2, ), ., normalize, (, ), ;, u2, =, FieldVector3D, ., crossProduct, (]
[., crossProduct, (, u1, ,, u2, ), ., normalize, (, ), ;, u2, =, FieldVector3D, ., crossProduct, (, u3, ,]
[., normalize, (, ), ;, u2, =, FieldVector3D, ., crossProduct, (, u3, ,, u1, ), ., normalize, (, ), ;]
[(, ), ;, u2, =, FieldVector3D, ., crossProduct, (, u3, ,, u1, ), ., normalize, (, ), ;, u1, =]
[(, ), ;, u2, =, FieldVector3D, ., crossProduct, (, u3, ,, u1, ), ., normalize, (, ), ;, u1, =]
[., normalize, (, ), ;, u1, =, u1, ., normalize, (, ), ;, final, FieldVector3D, <, T, >, v3, =]
[., normalize, (, ), ;, u1, =, u1, ., normalize, (, ), ;, final, FieldVector3D, <, T, >, v3, =]
[., normalize, (, ), ;, u1, =, u1, ., normalize, (, ), ;, final, FieldVector3D, <, T, >, v3, =]
[;, u1, =, u1, ., normalize, (, ), ;, final, FieldVector3D, <, T, >, v3, =, FieldVector3D, ., crossProduct, (]
[=, u1, ., normalize, (, ), ;, final, FieldVector3D, <, T, >, v3, =, FieldVector3D, ., crossProduct, (, v1, ,]
[final, FieldVector3D, <, T, >, v3, =, FieldVector3D, ., crossProduct, (, v1, ,, v2, ), ., normalize, (, ), ;]
[<, T, >, v3, =, FieldVector3D, ., crossProduct, (, v1, ,, v2, ), ., normalize, (, ), ;, v2, =]
[<, T, >, v3, =, FieldVector3D, ., crossProduct, (, v1, ,, v2, ), ., normalize, (, ), ;, v2, =]
[<, T, >, v3, =, FieldVector3D, ., crossProduct, (, v1, ,, v2, ), ., normalize, (, ), ;, v2, =]
[=, FieldVector3D, ., crossProduct, (, v1, ,, v2, ), ., normalize, (, ), ;, v2, =, FieldVector3D, ., crossProduct, (]
[., crossProduct, (, v1, ,, v2, ), ., normalize, (, ), ;, v2, =, FieldVector3D, ., crossProduct, (, v3, ,]
[., normalize, (, ), ;, v2, =, FieldVector3D, ., crossProduct, (, v3, ,, v1, ), ., normalize, (, ), ;]
[(, ), ;, v2, =, FieldVector3D, ., crossProduct, (, v3, ,, v1, ), ., normalize, (, ), ;, v1, =]
[(, ), ;, v2, =, FieldVector3D, ., crossProduct, (, v3, ,, v1, ), ., normalize, (, ), ;, v1, =]
[normalize, (, ), ;, v1, =, v1, ., normalize, (, ), ;, final, T, [, ], [, ], array, =]
[normalize, (, ), ;, v1, =, v1, ., normalize, (, ), ;, final, T, [, ], [, ], array, =]
[v1, =, v1, ., normalize, (, ), ;, final, T, [, ], [, ], array, =, MathArrays, ., buildArray, (]
[v1, =, v1, ., normalize, (, ), ;, final, T, [, ], [, ], array, =, MathArrays, ., buildArray, (]
[v1, =, v1, ., normalize, (, ), ;, final, T, [, ], [, ], array, =, MathArrays, ., buildArray, (]
[[, ], [, ], array, =, MathArrays, ., buildArray, (, u1, ., getX, (, ), ., getField, (, ), ,]
[[, ], array, =, MathArrays, ., buildArray, (, u1, ., getX, (, ), ., getField, (, ), ,, 3, ,]
[=, MathArrays, ., buildArray, (, u1, ., getX, (, ), ., getField, (, ), ,, 3, ,, 3, ), ;]
[=, MathArrays, ., buildArray, (, u1, ., getX, (, ), ., getField, (, ), ,, 3, ,, 3, ), ;]
[=, MathArrays, ., buildArray, (, u1, ., getX, (, ), ., getField, (, ), ,, 3, ,, 3, ), ;]
[., buildArray, (, u1, ., getX, (, ), ., getField, (, ), ,, 3, ,, 3, ), ;, array, []
[u1, ., getX, (, ), ., getField, (, ), ,, 3, ,, 3, ), ;, array, [, 0, ], []
[(, ), ., getField, (, ), ,, 3, ,, 3, ), ;, array, [, 0, ], [, 0, ], =]
[(, ), ., getField, (, ), ,, 3, ,, 3, ), ;, array, [, 0, ], [, 0, ], =]
[(, ), ., getField, (, ), ,, 3, ,, 3, ), ;, array, [, 0, ], [, 0, ], =]
[(, ), ., getField, (, ), ,, 3, ,, 3, ), ;, array, [, 0, ], [, 0, ], =]
[(, ), ., getField, (, ), ,, 3, ,, 3, ), ;, array, [, 0, ], [, 0, ], =]
[,, 3, ), ;, array, [, 0, ], [, 0, ], =, u1, ., getX, (, ), ., multiply, (]
[,, 3, ), ;, array, [, 0, ], [, 0, ], =, u1, ., getX, (, ), ., multiply, (]
[0, ], =, u1, ., getX, (, ), ., multiply, (, v1, ., getX, (, ), ), ., add, (]
[0, ], =, u1, ., getX, (, ), ., multiply, (, v1, ., getX, (, ), ), ., add, (]
[0, ], =, u1, ., getX, (, ), ., multiply, (, v1, ., getX, (, ), ), ., add, (]
[., multiply, (, v1, ., getX, (, ), ), ., add, (, u2, ., getX, (, ), ., multiply, (]
[., multiply, (, v1, ., getX, (, ), ), ., add, (, u2, ., getX, (, ), ., multiply, (]
[add, (, u2, ., getX, (, ), ., multiply, (, v2, ., getX, (, ), ), ), ., add, (]
[add, (, u2, ., getX, (, ), ., multiply, (, v2, ., getX, (, ), ), ), ., add, (]
[add, (, u2, ., getX, (, ), ., multiply, (, v2, ., getX, (, ), ), ), ., add, (]
[multiply, (, v2, ., getX, (, ), ), ), ., add, (, u3, ., getX, (, ), ., multiply, (]
[multiply, (, v2, ., getX, (, ), ), ), ., add, (, u3, ., getX, (, ), ., multiply, (]
[), ., add, (, u3, ., getX, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;]
[), ., add, (, u3, ., getX, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;]
[), ., add, (, u3, ., getX, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;]
[add, (, u3, ., getX, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, []
[., getX, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 0, ], []
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 0, ], [, 1, ], =]
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 0, ], [, 1, ], =]
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 0, ], [, 1, ], =]
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 0, ], [, 1, ], =]
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 0, ], [, 1, ], =]
[), ), ), ;, array, [, 0, ], [, 1, ], =, u1, ., getY, (, ), ., multiply, (]
[), ), ), ;, array, [, 0, ], [, 1, ], =, u1, ., getY, (, ), ., multiply, (]
[1, ], =, u1, ., getY, (, ), ., multiply, (, v1, ., getX, (, ), ), ., add, (]
[1, ], =, u1, ., getY, (, ), ., multiply, (, v1, ., getX, (, ), ), ., add, (]
[1, ], =, u1, ., getY, (, ), ., multiply, (, v1, ., getX, (, ), ), ., add, (]
[., multiply, (, v1, ., getX, (, ), ), ., add, (, u2, ., getY, (, ), ., multiply, (]
[., multiply, (, v1, ., getX, (, ), ), ., add, (, u2, ., getY, (, ), ., multiply, (]
[add, (, u2, ., getY, (, ), ., multiply, (, v2, ., getX, (, ), ), ), ., add, (]
[add, (, u2, ., getY, (, ), ., multiply, (, v2, ., getX, (, ), ), ), ., add, (]
[add, (, u2, ., getY, (, ), ., multiply, (, v2, ., getX, (, ), ), ), ., add, (]
[multiply, (, v2, ., getX, (, ), ), ), ., add, (, u3, ., getY, (, ), ., multiply, (]
[multiply, (, v2, ., getX, (, ), ), ), ., add, (, u3, ., getY, (, ), ., multiply, (]
[), ., add, (, u3, ., getY, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;]
[), ., add, (, u3, ., getY, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;]
[), ., add, (, u3, ., getY, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;]
[add, (, u3, ., getY, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, []
[., getY, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 0, ], []
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 0, ], [, 2, ], =]
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 0, ], [, 2, ], =]
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 0, ], [, 2, ], =]
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 0, ], [, 2, ], =]
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 0, ], [, 2, ], =]
[), ), ), ;, array, [, 0, ], [, 2, ], =, u1, ., getZ, (, ), ., multiply, (]
[), ), ), ;, array, [, 0, ], [, 2, ], =, u1, ., getZ, (, ), ., multiply, (]
[2, ], =, u1, ., getZ, (, ), ., multiply, (, v1, ., getX, (, ), ), ., add, (]
[2, ], =, u1, ., getZ, (, ), ., multiply, (, v1, ., getX, (, ), ), ., add, (]
[2, ], =, u1, ., getZ, (, ), ., multiply, (, v1, ., getX, (, ), ), ., add, (]
[., multiply, (, v1, ., getX, (, ), ), ., add, (, u2, ., getZ, (, ), ., multiply, (]
[., multiply, (, v1, ., getX, (, ), ), ., add, (, u2, ., getZ, (, ), ., multiply, (]
[add, (, u2, ., getZ, (, ), ., multiply, (, v2, ., getX, (, ), ), ), ., add, (]
[add, (, u2, ., getZ, (, ), ., multiply, (, v2, ., getX, (, ), ), ), ., add, (]
[add, (, u2, ., getZ, (, ), ., multiply, (, v2, ., getX, (, ), ), ), ., add, (]
[multiply, (, v2, ., getX, (, ), ), ), ., add, (, u3, ., getZ, (, ), ., multiply, (]
[multiply, (, v2, ., getX, (, ), ), ), ., add, (, u3, ., getZ, (, ), ., multiply, (]
[), ., add, (, u3, ., getZ, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;]
[), ., add, (, u3, ., getZ, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;]
[), ., add, (, u3, ., getZ, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;]
[add, (, u3, ., getZ, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, []
[., getZ, (, ), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 1, ], []
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 1, ], [, 0, ], =]
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 1, ], [, 0, ], =]
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 1, ], [, 0, ], =]
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 1, ], [, 0, ], =]
[), ., multiply, (, v3, ., getX, (, ), ), ), ;, array, [, 1, ], [, 0, ], =]
[), ), ), ;, array, [, 1, ], [, 0, ], =, u1, ., getX, (, ), ., multiply, (]
[), ), ), ;, array, [, 1, ], [, 0, ], =, u1, ., getX, (, ), ., multiply, (]
[0, ], =, u1, ., getX, (, ), ., multiply, (, v1, ., getY, (, ), ), ., add, (]
[0, ], =, u1, ., getX, (, ), ., multiply, (, v1, ., getY, (, ), ), ., add, (]
[0, ], =, u1, ., getX, (, ), ., multiply, (, v1, ., getY, (, ), ), ., add, (]
[., multiply, (, v1, ., getY, (, ), ), ., add, (, u2, ., getX, (, ), ., multiply, (]
[., multiply, (, v1, ., getY, (, ), ), ., add, (, u2, ., getX, (, ), ., multiply, (]
[add, (, u2, ., getX, (, ), ., multiply, (, v2, ., getY, (, ), ), ), ., add, (]
[add, (, u2, ., getX, (, ), ., multiply, (, v2, ., getY, (, ), ), ), ., add, (]
[add, (, u2, ., getX, (, ), ., multiply, (, v2, ., getY, (, ), ), ), ., add, (]
[multiply, (, v2, ., getY, (, ), ), ), ., add, (, u3, ., getX, (, ), ., multiply, (]
[multiply, (, v2, ., getY, (, ), ), ), ., add, (, u3, ., getX, (, ), ., multiply, (]
[), ., add, (, u3, ., getX, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;]
[), ., add, (, u3, ., getX, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;]
[), ., add, (, u3, ., getX, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;]
[add, (, u3, ., getX, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, []
[., getX, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 1, ], []
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 1, ], [, 1, ], =]
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 1, ], [, 1, ], =]
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 1, ], [, 1, ], =]
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 1, ], [, 1, ], =]
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 1, ], [, 1, ], =]
[), ), ), ;, array, [, 1, ], [, 1, ], =, u1, ., getY, (, ), ., multiply, (]
[), ), ), ;, array, [, 1, ], [, 1, ], =, u1, ., getY, (, ), ., multiply, (]
[1, ], =, u1, ., getY, (, ), ., multiply, (, v1, ., getY, (, ), ), ., add, (]
[1, ], =, u1, ., getY, (, ), ., multiply, (, v1, ., getY, (, ), ), ., add, (]
[1, ], =, u1, ., getY, (, ), ., multiply, (, v1, ., getY, (, ), ), ., add, (]
[., multiply, (, v1, ., getY, (, ), ), ., add, (, u2, ., getY, (, ), ., multiply, (]
[., multiply, (, v1, ., getY, (, ), ), ., add, (, u2, ., getY, (, ), ., multiply, (]
[add, (, u2, ., getY, (, ), ., multiply, (, v2, ., getY, (, ), ), ), ., add, (]
[add, (, u2, ., getY, (, ), ., multiply, (, v2, ., getY, (, ), ), ), ., add, (]
[add, (, u2, ., getY, (, ), ., multiply, (, v2, ., getY, (, ), ), ), ., add, (]
[multiply, (, v2, ., getY, (, ), ), ), ., add, (, u3, ., getY, (, ), ., multiply, (]
[multiply, (, v2, ., getY, (, ), ), ), ., add, (, u3, ., getY, (, ), ., multiply, (]
[), ., add, (, u3, ., getY, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;]
[), ., add, (, u3, ., getY, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;]
[), ., add, (, u3, ., getY, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;]
[add, (, u3, ., getY, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, []
[., getY, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 1, ], []
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 1, ], [, 2, ], =]
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 1, ], [, 2, ], =]
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 1, ], [, 2, ], =]
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 1, ], [, 2, ], =]
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 1, ], [, 2, ], =]
[), ), ), ;, array, [, 1, ], [, 2, ], =, u1, ., getZ, (, ), ., multiply, (]
[), ), ), ;, array, [, 1, ], [, 2, ], =, u1, ., getZ, (, ), ., multiply, (]
[2, ], =, u1, ., getZ, (, ), ., multiply, (, v1, ., getY, (, ), ), ., add, (]
[2, ], =, u1, ., getZ, (, ), ., multiply, (, v1, ., getY, (, ), ), ., add, (]
[2, ], =, u1, ., getZ, (, ), ., multiply, (, v1, ., getY, (, ), ), ., add, (]
[., multiply, (, v1, ., getY, (, ), ), ., add, (, u2, ., getZ, (, ), ., multiply, (]
[., multiply, (, v1, ., getY, (, ), ), ., add, (, u2, ., getZ, (, ), ., multiply, (]
[add, (, u2, ., getZ, (, ), ., multiply, (, v2, ., getY, (, ), ), ), ., add, (]
[add, (, u2, ., getZ, (, ), ., multiply, (, v2, ., getY, (, ), ), ), ., add, (]
[add, (, u2, ., getZ, (, ), ., multiply, (, v2, ., getY, (, ), ), ), ., add, (]
[multiply, (, v2, ., getY, (, ), ), ), ., add, (, u3, ., getZ, (, ), ., multiply, (]
[multiply, (, v2, ., getY, (, ), ), ), ., add, (, u3, ., getZ, (, ), ., multiply, (]
[), ., add, (, u3, ., getZ, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;]
[), ., add, (, u3, ., getZ, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;]
[), ., add, (, u3, ., getZ, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;]
[add, (, u3, ., getZ, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, []
[., getZ, (, ), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 2, ], []
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 2, ], [, 0, ], =]
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 2, ], [, 0, ], =]
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 2, ], [, 0, ], =]
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 2, ], [, 0, ], =]
[), ., multiply, (, v3, ., getY, (, ), ), ), ;, array, [, 2, ], [, 0, ], =]
[), ), ), ;, array, [, 2, ], [, 0, ], =, u1, ., getX, (, ), ., multiply, (]
[), ), ), ;, array, [, 2, ], [, 0, ], =, u1, ., getX, (, ), ., multiply, (]
[0, ], =, u1, ., getX, (, ), ., multiply, (, v1, ., getZ, (, ), ), ., add, (]
[0, ], =, u1, ., getX, (, ), ., multiply, (, v1, ., getZ, (, ), ), ., add, (]
[0, ], =, u1, ., getX, (, ), ., multiply, (, v1, ., getZ, (, ), ), ., add, (]
[., multiply, (, v1, ., getZ, (, ), ), ., add, (, u2, ., getX, (, ), ., multiply, (]
[., multiply, (, v1, ., getZ, (, ), ), ., add, (, u2, ., getX, (, ), ., multiply, (]
[add, (, u2, ., getX, (, ), ., multiply, (, v2, ., getZ, (, ), ), ), ., add, (]
[add, (, u2, ., getX, (, ), ., multiply, (, v2, ., getZ, (, ), ), ), ., add, (]
[add, (, u2, ., getX, (, ), ., multiply, (, v2, ., getZ, (, ), ), ), ., add, (]
[multiply, (, v2, ., getZ, (, ), ), ), ., add, (, u3, ., getX, (, ), ., multiply, (]
[multiply, (, v2, ., getZ, (, ), ), ), ., add, (, u3, ., getX, (, ), ., multiply, (]
[), ., add, (, u3, ., getX, (, ), ., multiply, (, v3, ., getZ, (, ), ), ), ;]
[), ., add, (, u3, ., getX, (, ), ., multiply, (, v3, ., getZ, (, ), ), ), ;]
[), ., add, (, u3, ., getX, (, ), ., multiply, (, v3, ., getZ, (, ), ), ), ;]
[add, (, u3, ., getX, (, ), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, []
[., getX, (, ), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, [, 2, ], []
[), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, [, 2, ], [, 1, ], =]
[), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, [, 2, ], [, 1, ], =]
[), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, [, 2, ], [, 1, ], =]
[), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, [, 2, ], [, 1, ], =]
[), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, [, 2, ], [, 1, ], =]
[), ), ), ;, array, [, 2, ], [, 1, ], =, u1, ., getY, (, ), ., multiply, (]
[), ), ), ;, array, [, 2, ], [, 1, ], =, u1, ., getY, (, ), ., multiply, (]
[1, ], =, u1, ., getY, (, ), ., multiply, (, v1, ., getZ, (, ), ), ., add, (]
[1, ], =, u1, ., getY, (, ), ., multiply, (, v1, ., getZ, (, ), ), ., add, (]
[1, ], =, u1, ., getY, (, ), ., multiply, (, v1, ., getZ, (, ), ), ., add, (]
[., multiply, (, v1, ., getZ, (, ), ), ., add, (, u2, ., getY, (, ), ., multiply, (]
[., multiply, (, v1, ., getZ, (, ), ), ., add, (, u2, ., getY, (, ), ., multiply, (]
[add, (, u2, ., getY, (, ), ., multiply, (, v2, ., getZ, (, ), ), ), ., add, (]
[add, (, u2, ., getY, (, ), ., multiply, (, v2, ., getZ, (, ), ), ), ., add, (]
[add, (, u2, ., getY, (, ), ., multiply, (, v2, ., getZ, (, ), ), ), ., add, (]
[multiply, (, v2, ., getZ, (, ), ), ), ., add, (, u3, ., getY, (, ), ., multiply, (]
[multiply, (, v2, ., getZ, (, ), ), ), ., add, (, u3, ., getY, (, ), ., multiply, (]
[), ., add, (, u3, ., getY, (, ), ., multiply, (, v3, ., getZ, (, ), ), ), ;]
[), ., add, (, u3, ., getY, (, ), ., multiply, (, v3, ., getZ, (, ), ), ), ;]
[), ., add, (, u3, ., getY, (, ), ., multiply, (, v3, ., getZ, (, ), ), ), ;]
[add, (, u3, ., getY, (, ), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, []
[., getY, (, ), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, [, 2, ], []
[), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, [, 2, ], [, 2, ], =]
[), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, [, 2, ], [, 2, ], =]
[), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, [, 2, ], [, 2, ], =]
[), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, [, 2, ], [, 2, ], =]
[), ., multiply, (, v3, ., getZ, (, ), ), ), ;, array, [, 2, ], [, 2, ], =]
[), ), ), ;, array, [, 2, ], [, 2, ], =, u1, ., getZ, (, ), ., multiply, (]
[), ), ), ;, array, [, 2, ], [, 2, ], =, u1, ., getZ, (, ), ., multiply, (]
[2, ], =, u1, ., getZ, (, ), ., multiply, (, v1, ., getZ, (, ), ), ., add, (]
[2, ], =, u1, ., getZ, (, ), ., multiply, (, v1, ., getZ, (, ), ), ., add, (]
[2, ], =, u1, ., getZ, (, ), ., multiply, (, v1, ., getZ, (, ), ), ., add, (]
[., multiply, (, v1, ., getZ, (, ), ), ., add, (, u2, ., getZ, (, ), ., multiply, (]
[., multiply, (, v1, ., getZ, (, ), ), ., add, (, u2, ., getZ, (, ), ., multiply, (]
[add, (, u2, ., getZ, (, ), ., multiply, (, v2, ., getZ, (, ), ), ), ., add, (]
[add, (, u2, ., getZ, (, ), ., multiply, (, v2, ., getZ, (, ), ), ), ., add, (]
[add, (, u2, ., getZ, (, ), ., multiply, (, v2, ., getZ, (, ), ), ), ., add, (]
[multiply, (, v2, ., getZ, (, ), ), ), ., add, (, u3, ., getZ, (, ), ., multiply, (]
[multiply, (, v2, ., getZ, (, ), ), ), ., add, (, u3, ., getZ, (, ), ., multiply, (]
[., getZ, (, ), ., multiply, (, v3, ., getZ, (, ), ), ), ;, T, [, ], quat, =]
[(, ), ., multiply, (, v3, ., getZ, (, ), ), ), ;, T, [, ], quat, =, mat2quat, (]
[multiply, (, v3, ., getZ, (, ), ), ), ;, T, [, ], quat, =, mat2quat, (, array, ), ;]
[v3, ., getZ, (, ), ), ), ;, T, [, ], quat, =, mat2quat, (, array, ), ;, q0, =]
[v3, ., getZ, (, ), ), ), ;, T, [, ], quat, =, mat2quat, (, array, ), ;, q0, =]
[getZ, (, ), ), ), ;, T, [, ], quat, =, mat2quat, (, array, ), ;, q0, =, quat, []
[), ), ;, T, [, ], quat, =, mat2quat, (, array, ), ;, q0, =, quat, [, 0, ], ;]
[;, T, [, ], quat, =, mat2quat, (, array, ), ;, q0, =, quat, [, 0, ], ;, q1, =]
[;, T, [, ], quat, =, mat2quat, (, array, ), ;, q0, =, quat, [, 0, ], ;, q1, =]
[[, ], quat, =, mat2quat, (, array, ), ;, q0, =, quat, [, 0, ], ;, q1, =, quat, []
[=, mat2quat, (, array, ), ;, q0, =, quat, [, 0, ], ;, q1, =, quat, [, 1, ], ;]
[(, array, ), ;, q0, =, quat, [, 0, ], ;, q1, =, quat, [, 1, ], ;, q2, =]
[(, array, ), ;, q0, =, quat, [, 0, ], ;, q1, =, quat, [, 1, ], ;, q2, =]
[), ;, q0, =, quat, [, 0, ], ;, q1, =, quat, [, 1, ], ;, q2, =, quat, []
[=, quat, [, 0, ], ;, q1, =, quat, [, 1, ], ;, q2, =, quat, [, 2, ], ;]
[[, 0, ], ;, q1, =, quat, [, 1, ], ;, q2, =, quat, [, 2, ], ;, q3, =]
[[, 0, ], ;, q1, =, quat, [, 1, ], ;, q2, =, quat, [, 2, ], ;, q3, =]
[], ;, q1, =, quat, [, 1, ], ;, q2, =, quat, [, 2, ], ;, q3, =, quat, []
[FieldVector3D, <, T, >, u, ,, final, FieldVector3D, <, T, >, v, ), throws, MathArithmeticException, {, final, T, normProduct, =]
[FieldVector3D, <, T, >, u, ,, final, FieldVector3D, <, T, >, v, ), throws, MathArithmeticException, {, final, T, normProduct, =]
[FieldVector3D, <, T, >, u, ,, final, FieldVector3D, <, T, >, v, ), throws, MathArithmeticException, {, final, T, normProduct, =]
[<, T, >, v, ), throws, MathArithmeticException, {, final, T, normProduct, =, u, ., getNorm, (, ), ., multiply, (]
[<, T, >, v, ), throws, MathArithmeticException, {, final, T, normProduct, =, u, ., getNorm, (, ), ., multiply, (]
[T, normProduct, =, u, ., getNorm, (, ), ., multiply, (, v, ., getNorm, (, ), ), ;, if, (]
[T, normProduct, =, u, ., getNorm, (, ), ., multiply, (, v, ., getNorm, (, ), ), ;, if, (]
[T, normProduct, =, u, ., getNorm, (, ), ., multiply, (, v, ., getNorm, (, ), ), ;, if, (]
[(, ), ., multiply, (, v, ., getNorm, (, ), ), ;, if, (, normProduct, ., getReal, (, ), ==]
[(, v, ., getNorm, (, ), ), ;, if, (, normProduct, ., getReal, (, ), ==, 0, ), {, throw]
[getNorm, (, ), ), ;, if, (, normProduct, ., getReal, (, ), ==, 0, ), {, throw, new, MathArithmeticException, (]
[getNorm, (, ), ), ;, if, (, normProduct, ., getReal, (, ), ==, 0, ), {, throw, new, MathArithmeticException, (]
[(, ), ==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR, ), ;, }, final, T, dot, =]
[(, ), ==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR, ), ;, }, final, T, dot, =]
[), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR, ), ;, }, final, T, dot, =, FieldVector3D, ., dotProduct, (]
[throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR, ), ;, }, final, T, dot, =, FieldVector3D, ., dotProduct, (, u, ,]
[., ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR, ), ;, }, final, T, dot, =, FieldVector3D, ., dotProduct, (, u, ,, v, ), ;, if, (]
[., ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR, ), ;, }, final, T, dot, =, FieldVector3D, ., dotProduct, (, u, ,, v, ), ;, if, (]
[., ZERO_NORM_FOR_ROTATION_DEFINING_VECTOR, ), ;, }, final, T, dot, =, FieldVector3D, ., dotProduct, (, u, ,, v, ), ;, if, (]
[T, dot, =, FieldVector3D, ., dotProduct, (, u, ,, v, ), ;, if, (, dot, ., getReal, (, ), <]
[dot, =, FieldVector3D, ., dotProduct, (, u, ,, v, ), ;, if, (, dot, ., getReal, (, ), <, (]
[dot, =, FieldVector3D, ., dotProduct, (, u, ,, v, ), ;, if, (, dot, ., getReal, (, ), <, (]
[=, FieldVector3D, ., dotProduct, (, u, ,, v, ), ;, if, (, dot, ., getReal, (, ), <, (, (]
[=, FieldVector3D, ., dotProduct, (, u, ,, v, ), ;, if, (, dot, ., getReal, (, ), <, (, (]
[., dotProduct, (, u, ,, v, ), ;, if, (, dot, ., getReal, (, ), <, (, (, 2.0e-15, -]
[u, ,, v, ), ;, if, (, dot, ., getReal, (, ), <, (, (, 2.0e-15, -, 1.0, ), *]
[u, ,, v, ), ;, if, (, dot, ., getReal, (, ), <, (, (, 2.0e-15, -, 1.0, ), *]
[2.0e-15, -, 1.0, ), *, normProduct, ., getReal, (, ), ), ), {, final, FieldVector3D, <, T, >, w, =]
[2.0e-15, -, 1.0, ), *, normProduct, ., getReal, (, ), ), ), {, final, FieldVector3D, <, T, >, w, =]
[., getReal, (, ), ), ), {, final, FieldVector3D, <, T, >, w, =, u, ., orthogonal, (, ), ;]
[(, ), ), ), {, final, FieldVector3D, <, T, >, w, =, u, ., orthogonal, (, ), ;, q0, =]
[(, ), ), ), {, final, FieldVector3D, <, T, >, w, =, u, ., orthogonal, (, ), ;, q0, =]
[(, ), ), ), {, final, FieldVector3D, <, T, >, w, =, u, ., orthogonal, (, ), ;, q0, =]
[w, =, u, ., orthogonal, (, ), ;, q0, =, normProduct, ., getField, (, ), ., getZero, (, ), ;]
[u, ., orthogonal, (, ), ;, q0, =, normProduct, ., getField, (, ), ., getZero, (, ), ;, q1, =]
[u, ., orthogonal, (, ), ;, q0, =, normProduct, ., getField, (, ), ., getZero, (, ), ;, q1, =]
[u, ., orthogonal, (, ), ;, q0, =, normProduct, ., getField, (, ), ., getZero, (, ), ;, q1, =]
[getField, (, ), ., getZero, (, ), ;, q1, =, w, ., getX, (, ), ., negate, (, ), ;]
[), ., getZero, (, ), ;, q1, =, w, ., getX, (, ), ., negate, (, ), ;, q2, =]
[), ., getZero, (, ), ;, q1, =, w, ., getX, (, ), ., negate, (, ), ;, q2, =]
[), ., getZero, (, ), ;, q1, =, w, ., getX, (, ), ., negate, (, ), ;, q2, =]
[getX, (, ), ., negate, (, ), ;, q2, =, w, ., getY, (, ), ., negate, (, ), ;]
[), ., negate, (, ), ;, q2, =, w, ., getY, (, ), ., negate, (, ), ;, q3, =]
[), ., negate, (, ), ;, q2, =, w, ., getY, (, ), ., negate, (, ), ;, q3, =]
[), ., negate, (, ), ;, q2, =, w, ., getY, (, ), ., negate, (, ), ;, q3, =]
[., negate, (, ), ;, q3, =, w, ., getZ, (, ), ., negate, (, ), ;, }, else, {]
[(, ), ;, q3, =, w, ., getZ, (, ), ., negate, (, ), ;, }, else, {, q0, =]
[(, ), ;, q3, =, w, ., getZ, (, ), ., negate, (, ), ;, }, else, {, q0, =]
[(, ), ;, q3, =, w, ., getZ, (, ), ., negate, (, ), ;, }, else, {, q0, =]
[(, ), ;, q3, =, w, ., getZ, (, ), ., negate, (, ), ;, }, else, {, q0, =]
[(, ), ;, q3, =, w, ., getZ, (, ), ., negate, (, ), ;, }, else, {, q0, =]
[=, w, ., getZ, (, ), ., negate, (, ), ;, }, else, {, q0, =, dot, ., divide, (]
[), ., negate, (, ), ;, }, else, {, q0, =, dot, ., divide, (, normProduct, ), ., add, (]
[;, }, else, {, q0, =, dot, ., divide, (, normProduct, ), ., add, (, 1.0, ), ., multiply, (]
[), ., add, (, 1.0, ), ., multiply, (, 0.5, ), ., sqrt, (, ), ;, final, T, coeff, =]
[), ., add, (, 1.0, ), ., multiply, (, 0.5, ), ., sqrt, (, ), ;, final, T, coeff, =]
[), ., add, (, 1.0, ), ., multiply, (, 0.5, ), ., sqrt, (, ), ;, final, T, coeff, =]
[), ., add, (, 1.0, ), ., multiply, (, 0.5, ), ., sqrt, (, ), ;, final, T, coeff, =]
[1.0, ), ., multiply, (, 0.5, ), ., sqrt, (, ), ;, final, T, coeff, =, q0, ., multiply, (]
[0.5, ), ., sqrt, (, ), ;, final, T, coeff, =, q0, ., multiply, (, normProduct, ), ., multiply, (]
[(, normProduct, ), ., multiply, (, 2.0, ), ., reciprocal, (, ), ;, final, FieldVector3D, <, T, >, q, =]
[(, normProduct, ), ., multiply, (, 2.0, ), ., reciprocal, (, ), ;, final, FieldVector3D, <, T, >, q, =]
[multiply, (, 2.0, ), ., reciprocal, (, ), ;, final, FieldVector3D, <, T, >, q, =, FieldVector3D, ., crossProduct, (]
[2.0, ), ., reciprocal, (, ), ;, final, FieldVector3D, <, T, >, q, =, FieldVector3D, ., crossProduct, (, v, ,]
[reciprocal, (, ), ;, final, FieldVector3D, <, T, >, q, =, FieldVector3D, ., crossProduct, (, v, ,, u, ), ;]
[), ;, final, FieldVector3D, <, T, >, q, =, FieldVector3D, ., crossProduct, (, v, ,, u, ), ;, q1, =]
[), ;, final, FieldVector3D, <, T, >, q, =, FieldVector3D, ., crossProduct, (, v, ,, u, ), ;, q1, =]
[<, T, >, q, =, FieldVector3D, ., crossProduct, (, v, ,, u, ), ;, q1, =, coeff, ., multiply, (]
[<, T, >, q, =, FieldVector3D, ., crossProduct, (, v, ,, u, ), ;, q1, =, coeff, ., multiply, (]
[crossProduct, (, v, ,, u, ), ;, q1, =, coeff, ., multiply, (, q, ., getX, (, ), ), ;]
[v, ,, u, ), ;, q1, =, coeff, ., multiply, (, q, ., getX, (, ), ), ;, q2, =]
[v, ,, u, ), ;, q1, =, coeff, ., multiply, (, q, ., getX, (, ), ), ;, q2, =]
[;, q1, =, coeff, ., multiply, (, q, ., getX, (, ), ), ;, q2, =, coeff, ., multiply, (]
[;, q1, =, coeff, ., multiply, (, q, ., getX, (, ), ), ;, q2, =, coeff, ., multiply, (]
[q, ., getX, (, ), ), ;, q2, =, coeff, ., multiply, (, q, ., getY, (, ), ), ;]
[getX, (, ), ), ;, q2, =, coeff, ., multiply, (, q, ., getY, (, ), ), ;, q3, =]
[getX, (, ), ), ;, q2, =, coeff, ., multiply, (, q, ., getY, (, ), ), ;, q3, =]
[;, q2, =, coeff, ., multiply, (, q, ., getY, (, ), ), ;, q3, =, coeff, ., multiply, (]
[;, q2, =, coeff, ., multiply, (, q, ., getY, (, ), ), ;, q3, =, coeff, ., multiply, (]
[RotationOrder, order, ,, final, T, alpha1, ,, final, T, alpha2, ,, final, T, alpha3, ), {, final, T, one, =]
[RotationOrder, order, ,, final, T, alpha1, ,, final, T, alpha2, ,, final, T, alpha3, ), {, final, T, one, =]
[RotationOrder, order, ,, final, T, alpha1, ,, final, T, alpha2, ,, final, T, alpha3, ), {, final, T, one, =]
[T, one, =, alpha1, ., getField, (, ), ., getOne, (, ), ;, final, FieldRotation, <, T, >, r1, =]
[(, ), ., getOne, (, ), ;, final, FieldRotation, <, T, >, r1, =, new, FieldRotation, <, T, >, (]
[;, final, FieldRotation, <, T, >, r1, =, new, FieldRotation, <, T, >, (, new, FieldVector3D, <, T, >, (]
[FieldRotation, <, T, >, r1, =, new, FieldRotation, <, T, >, (, new, FieldVector3D, <, T, >, (, one, ,]
[FieldRotation, <, T, >, r1, =, new, FieldRotation, <, T, >, (, new, FieldVector3D, <, T, >, (, one, ,]
[FieldRotation, <, T, >, (, new, FieldVector3D, <, T, >, (, one, ,, order, ., getA1, (, ), ), ,]
[(, one, ,, order, ., getA1, (, ), ), ,, alpha1, ), ;, final, FieldRotation, <, T, >, r2, =]
[(, ), ), ,, alpha1, ), ;, final, FieldRotation, <, T, >, r2, =, new, FieldRotation, <, T, >, (]
[;, final, FieldRotation, <, T, >, r2, =, new, FieldRotation, <, T, >, (, new, FieldVector3D, <, T, >, (]
[FieldRotation, <, T, >, r2, =, new, FieldRotation, <, T, >, (, new, FieldVector3D, <, T, >, (, one, ,]
[FieldRotation, <, T, >, r2, =, new, FieldRotation, <, T, >, (, new, FieldVector3D, <, T, >, (, one, ,]
[FieldRotation, <, T, >, (, new, FieldVector3D, <, T, >, (, one, ,, order, ., getA2, (, ), ), ,]
[(, one, ,, order, ., getA2, (, ), ), ,, alpha2, ), ;, final, FieldRotation, <, T, >, r3, =]
[(, ), ), ,, alpha2, ), ;, final, FieldRotation, <, T, >, r3, =, new, FieldRotation, <, T, >, (]
[;, final, FieldRotation, <, T, >, r3, =, new, FieldRotation, <, T, >, (, new, FieldVector3D, <, T, >, (]
[FieldRotation, <, T, >, r3, =, new, FieldRotation, <, T, >, (, new, FieldVector3D, <, T, >, (, one, ,]
[FieldRotation, <, T, >, r3, =, new, FieldRotation, <, T, >, (, new, FieldVector3D, <, T, >, (, one, ,]
[FieldRotation, <, T, >, (, new, FieldVector3D, <, T, >, (, one, ,, order, ., getA3, (, ), ), ,]
[(, one, ,, order, ., getA3, (, ), ), ,, alpha3, ), ;, final, FieldRotation, <, T, >, composed, =]
[(, one, ,, order, ., getA3, (, ), ), ,, alpha3, ), ;, final, FieldRotation, <, T, >, composed, =]
[., getA3, (, ), ), ,, alpha3, ), ;, final, FieldRotation, <, T, >, composed, =, r1, ., applyTo, (]
[., getA3, (, ), ), ,, alpha3, ), ;, final, FieldRotation, <, T, >, composed, =, r1, ., applyTo, (]
[), ,, alpha3, ), ;, final, FieldRotation, <, T, >, composed, =, r1, ., applyTo, (, r2, ., applyTo, (]
[;, final, FieldRotation, <, T, >, composed, =, r1, ., applyTo, (, r2, ., applyTo, (, r3, ), ), ;]
[FieldRotation, <, T, >, composed, =, r1, ., applyTo, (, r2, ., applyTo, (, r3, ), ), ;, q0, =]
[FieldRotation, <, T, >, composed, =, r1, ., applyTo, (, r2, ., applyTo, (, r3, ), ), ;, q0, =]
[composed, =, r1, ., applyTo, (, r2, ., applyTo, (, r3, ), ), ;, q0, =, composed, ., q0, ;]
[r1, ., applyTo, (, r2, ., applyTo, (, r3, ), ), ;, q0, =, composed, ., q0, ;, q1, =]
[r1, ., applyTo, (, r2, ., applyTo, (, r3, ), ), ;, q0, =, composed, ., q0, ;, q1, =]
[r2, ., applyTo, (, r3, ), ), ;, q0, =, composed, ., q0, ;, q1, =, composed, ., q1, ;]
[applyTo, (, r3, ), ), ;, q0, =, composed, ., q0, ;, q1, =, composed, ., q1, ;, q2, =]
[applyTo, (, r3, ), ), ;, q0, =, composed, ., q0, ;, q1, =, composed, ., q1, ;, q2, =]
[), ;, q0, =, composed, ., q0, ;, q1, =, composed, ., q1, ;, q2, =, composed, ., q2, ;]
[q0, =, composed, ., q0, ;, q1, =, composed, ., q1, ;, q2, =, composed, ., q2, ;, q3, =]
[q0, =, composed, ., q0, ;, q1, =, composed, ., q1, ;, q2, =, composed, ., q2, ;, q3, =]
[T, [, ], mat2quat, (, final, T, [, ], [, ], ort, ), {, final, T, [, ], quat, =]
[T, [, ], mat2quat, (, final, T, [, ], [, ], ort, ), {, final, T, [, ], quat, =]
[(, final, T, [, ], [, ], ort, ), {, final, T, [, ], quat, =, MathArrays, ., buildArray, (]
[(, final, T, [, ], [, ], ort, ), {, final, T, [, ], quat, =, MathArrays, ., buildArray, (]
[(, final, T, [, ], [, ], ort, ), {, final, T, [, ], quat, =, MathArrays, ., buildArray, (]
[(, final, T, [, ], [, ], ort, ), {, final, T, [, ], quat, =, MathArrays, ., buildArray, (]
[T, [, ], [, ], ort, ), {, final, T, [, ], quat, =, MathArrays, ., buildArray, (, ort, []
[[, ], ort, ), {, final, T, [, ], quat, =, MathArrays, ., buildArray, (, ort, [, 0, ], []
[[, ], quat, =, MathArrays, ., buildArray, (, ort, [, 0, ], [, 0, ], ., getField, (, ), ,]
[buildArray, (, ort, [, 0, ], [, 0, ], ., getField, (, ), ,, 4, ), ;, T, s, =]
[buildArray, (, ort, [, 0, ], [, 0, ], ., getField, (, ), ,, 4, ), ;, T, s, =]
[buildArray, (, ort, [, 0, ], [, 0, ], ., getField, (, ), ,, 4, ), ;, T, s, =]
[buildArray, (, ort, [, 0, ], [, 0, ], ., getField, (, ), ,, 4, ), ;, T, s, =]
[buildArray, (, ort, [, 0, ], [, 0, ], ., getField, (, ), ,, 4, ), ;, T, s, =]
[ort, [, 0, ], [, 0, ], ., getField, (, ), ,, 4, ), ;, T, s, =, ort, []
[], [, 0, ], ., getField, (, ), ,, 4, ), ;, T, s, =, ort, [, 0, ], []
[getField, (, ), ,, 4, ), ;, T, s, =, ort, [, 0, ], [, 0, ], ., add, (]
[getField, (, ), ,, 4, ), ;, T, s, =, ort, [, 0, ], [, 0, ], ., add, (]
[getField, (, ), ,, 4, ), ;, T, s, =, ort, [, 0, ], [, 0, ], ., add, (]
[), ,, 4, ), ;, T, s, =, ort, [, 0, ], [, 0, ], ., add, (, ort, []
[), ;, T, s, =, ort, [, 0, ], [, 0, ], ., add, (, ort, [, 1, ], []
[[, 0, ], [, 0, ], ., add, (, ort, [, 1, ], [, 1, ], ), ., add, (]
[[, 0, ], [, 0, ], ., add, (, ort, [, 1, ], [, 1, ], ), ., add, (]
[[, 0, ], [, 0, ], ., add, (, ort, [, 1, ], [, 1, ], ), ., add, (]
[], [, 0, ], ., add, (, ort, [, 1, ], [, 1, ], ), ., add, (, ort, []
[], ., add, (, ort, [, 1, ], [, 1, ], ), ., add, (, ort, [, 2, ], []
[1, ], [, 1, ], ), ., add, (, ort, [, 2, ], [, 2, ], ), ;, if, (]
[1, ], [, 1, ], ), ., add, (, ort, [, 2, ], [, 2, ], ), ;, if, (]
[1, ], [, 1, ], ), ., add, (, ort, [, 2, ], [, 2, ], ), ;, if, (]
[., add, (, ort, [, 2, ], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >]
[add, (, ort, [, 2, ], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >, -]
[[, 2, ], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {]
[[, 2, ], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {]
[], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, []
[], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 0, ], =]
[], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 0, ], =]
[], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 0, ], =]
[], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 0, ], =]
[(, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 0, ], =, s, ., add, (]
[), {, quat, [, 0, ], =, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =, quat, []
[., multiply, (, 0.5, ), ;, T, inv, =, quat, [, 0, ], ., reciprocal, (, ), ., multiply, (]
[0.5, ), ;, T, inv, =, quat, [, 0, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;]
[0.5, ), ;, T, inv, =, quat, [, 0, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;]
[;, T, inv, =, quat, [, 0, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, []
[=, quat, [, 0, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 1, ], =]
[=, quat, [, 0, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 1, ], =]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 1, ], =, inv, ., multiply, (]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 1, ], =, inv, ., multiply, (]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 1, ], =, inv, ., multiply, (]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 1, ], =, inv, ., multiply, (]
[reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 1, ], =, inv, ., multiply, (, ort, []
[., multiply, (, 0.25, ), ;, quat, [, 1, ], =, inv, ., multiply, (, ort, [, 1, ], []
[;, quat, [, 1, ], =, inv, ., multiply, (, ort, [, 1, ], [, 2, ], ., subtract, (]
[;, quat, [, 1, ], =, inv, ., multiply, (, ort, [, 1, ], [, 2, ], ., subtract, (]
[;, quat, [, 1, ], =, inv, ., multiply, (, ort, [, 1, ], [, 2, ], ., subtract, (]
[[, 1, ], =, inv, ., multiply, (, ort, [, 1, ], [, 2, ], ., subtract, (, ort, []
[=, inv, ., multiply, (, ort, [, 1, ], [, 2, ], ., subtract, (, ort, [, 2, ], []
[ort, [, 1, ], [, 2, ], ., subtract, (, ort, [, 2, ], [, 1, ], ), ), ;]
[ort, [, 1, ], [, 2, ], ., subtract, (, ort, [, 2, ], [, 1, ], ), ), ;]
[1, ], [, 2, ], ., subtract, (, ort, [, 2, ], [, 1, ], ), ), ;, quat, []
[2, ], ., subtract, (, ort, [, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =]
[2, ], ., subtract, (, ort, [, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =]
[(, ort, [, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (]
[(, ort, [, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (]
[(, ort, [, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (]
[(, ort, [, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (]
[[, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (, ort, []
[[, 1, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (, ort, [, 2, ], []
[;, quat, [, 2, ], =, inv, ., multiply, (, ort, [, 2, ], [, 0, ], ., subtract, (]
[;, quat, [, 2, ], =, inv, ., multiply, (, ort, [, 2, ], [, 0, ], ., subtract, (]
[;, quat, [, 2, ], =, inv, ., multiply, (, ort, [, 2, ], [, 0, ], ., subtract, (]
[[, 2, ], =, inv, ., multiply, (, ort, [, 2, ], [, 0, ], ., subtract, (, ort, []
[=, inv, ., multiply, (, ort, [, 2, ], [, 0, ], ., subtract, (, ort, [, 0, ], []
[ort, [, 2, ], [, 0, ], ., subtract, (, ort, [, 0, ], [, 2, ], ), ), ;]
[ort, [, 2, ], [, 0, ], ., subtract, (, ort, [, 0, ], [, 2, ], ), ), ;]
[2, ], [, 0, ], ., subtract, (, ort, [, 0, ], [, 2, ], ), ), ;, quat, []
[0, ], ., subtract, (, ort, [, 0, ], [, 2, ], ), ), ;, quat, [, 3, ], =]
[0, ], ., subtract, (, ort, [, 0, ], [, 2, ], ), ), ;, quat, [, 3, ], =]
[(, ort, [, 0, ], [, 2, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (]
[(, ort, [, 0, ], [, 2, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (]
[(, ort, [, 0, ], [, 2, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (]
[(, ort, [, 0, ], [, 2, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (]
[[, 0, ], [, 2, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (, ort, []
[[, 2, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (, ort, [, 0, ], []
[;, quat, [, 3, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., subtract, (]
[;, quat, [, 3, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., subtract, (]
[;, quat, [, 3, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., subtract, (]
[[, 3, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., subtract, (, ort, []
[=, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., subtract, (, ort, [, 1, ], []
[], [, 1, ], ., subtract, (, ort, [, 1, ], [, 0, ], ), ), ;, }, else, {]
[1, ], ., subtract, (, ort, [, 1, ], [, 0, ], ), ), ;, }, else, {, s, =]
[1, ], ., subtract, (, ort, [, 1, ], [, 0, ], ), ), ;, }, else, {, s, =]
[1, ], ., subtract, (, ort, [, 1, ], [, 0, ], ), ), ;, }, else, {, s, =]
[1, ], ., subtract, (, ort, [, 1, ], [, 0, ], ), ), ;, }, else, {, s, =]
[1, ], ., subtract, (, ort, [, 1, ], [, 0, ], ), ), ;, }, else, {, s, =]
[., subtract, (, ort, [, 1, ], [, 0, ], ), ), ;, }, else, {, s, =, ort, []
[ort, [, 1, ], [, 0, ], ), ), ;, }, else, {, s, =, ort, [, 0, ], []
[0, ], ), ), ;, }, else, {, s, =, ort, [, 0, ], [, 0, ], ., subtract, (]
[0, ], ), ), ;, }, else, {, s, =, ort, [, 0, ], [, 0, ], ., subtract, (]
[0, ], ), ), ;, }, else, {, s, =, ort, [, 0, ], [, 0, ], ., subtract, (]
[), ), ;, }, else, {, s, =, ort, [, 0, ], [, 0, ], ., subtract, (, ort, []
[}, else, {, s, =, ort, [, 0, ], [, 0, ], ., subtract, (, ort, [, 1, ], []
[[, 0, ], [, 0, ], ., subtract, (, ort, [, 1, ], [, 1, ], ), ., subtract, (]
[[, 0, ], [, 0, ], ., subtract, (, ort, [, 1, ], [, 1, ], ), ., subtract, (]
[[, 0, ], [, 0, ], ., subtract, (, ort, [, 1, ], [, 1, ], ), ., subtract, (]
[], [, 0, ], ., subtract, (, ort, [, 1, ], [, 1, ], ), ., subtract, (, ort, []
[], ., subtract, (, ort, [, 1, ], [, 1, ], ), ., subtract, (, ort, [, 2, ], []
[1, ], [, 1, ], ), ., subtract, (, ort, [, 2, ], [, 2, ], ), ;, if, (]
[1, ], [, 1, ], ), ., subtract, (, ort, [, 2, ], [, 2, ], ), ;, if, (]
[1, ], [, 1, ], ), ., subtract, (, ort, [, 2, ], [, 2, ], ), ;, if, (]
[., subtract, (, ort, [, 2, ], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >]
[subtract, (, ort, [, 2, ], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >, -]
[[, 2, ], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {]
[[, 2, ], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {]
[], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, []
[], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 1, ], =]
[], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 1, ], =]
[], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 1, ], =]
[], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 1, ], =]
[(, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 1, ], =, s, ., add, (]
[), {, quat, [, 1, ], =, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =, quat, []
[., multiply, (, 0.5, ), ;, T, inv, =, quat, [, 1, ], ., reciprocal, (, ), ., multiply, (]
[0.5, ), ;, T, inv, =, quat, [, 1, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;]
[0.5, ), ;, T, inv, =, quat, [, 1, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;]
[;, T, inv, =, quat, [, 1, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, []
[=, quat, [, 1, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =]
[=, quat, [, 1, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (]
[reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (, ort, []
[., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (, ort, [, 1, ], []
[;, quat, [, 0, ], =, inv, ., multiply, (, ort, [, 1, ], [, 2, ], ., subtract, (]
[;, quat, [, 0, ], =, inv, ., multiply, (, ort, [, 1, ], [, 2, ], ., subtract, (]
[;, quat, [, 0, ], =, inv, ., multiply, (, ort, [, 1, ], [, 2, ], ., subtract, (]
[[, 0, ], =, inv, ., multiply, (, ort, [, 1, ], [, 2, ], ., subtract, (, ort, []
[=, inv, ., multiply, (, ort, [, 1, ], [, 2, ], ., subtract, (, ort, [, 2, ], []
[ort, [, 1, ], [, 2, ], ., subtract, (, ort, [, 2, ], [, 1, ], ), ), ;]
[ort, [, 1, ], [, 2, ], ., subtract, (, ort, [, 2, ], [, 1, ], ), ), ;]
[1, ], [, 2, ], ., subtract, (, ort, [, 2, ], [, 1, ], ), ), ;, quat, []
[2, ], ., subtract, (, ort, [, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =]
[2, ], ., subtract, (, ort, [, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =]
[(, ort, [, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (]
[(, ort, [, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (]
[(, ort, [, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (]
[(, ort, [, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (]
[[, 2, ], [, 1, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (, ort, []
[[, 1, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (, ort, [, 0, ], []
[;, quat, [, 2, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., add, (]
[;, quat, [, 2, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., add, (]
[;, quat, [, 2, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., add, (]
[[, 2, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., add, (, ort, []
[=, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., add, (, ort, [, 1, ], []
[ort, [, 0, ], [, 1, ], ., add, (, ort, [, 1, ], [, 0, ], ), ), ;]
[ort, [, 0, ], [, 1, ], ., add, (, ort, [, 1, ], [, 0, ], ), ), ;]
[0, ], [, 1, ], ., add, (, ort, [, 1, ], [, 0, ], ), ), ;, quat, []
[1, ], ., add, (, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =]
[1, ], ., add, (, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =]
[(, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (]
[(, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (]
[(, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (]
[(, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (]
[[, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (, ort, []
[[, 0, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (, ort, [, 0, ], []
[;, quat, [, 3, ], =, inv, ., multiply, (, ort, [, 0, ], [, 2, ], ., add, (]
[;, quat, [, 3, ], =, inv, ., multiply, (, ort, [, 0, ], [, 2, ], ., add, (]
[;, quat, [, 3, ], =, inv, ., multiply, (, ort, [, 0, ], [, 2, ], ., add, (]
[[, 3, ], =, inv, ., multiply, (, ort, [, 0, ], [, 2, ], ., add, (, ort, []
[=, inv, ., multiply, (, ort, [, 0, ], [, 2, ], ., add, (, ort, [, 2, ], []
[], [, 2, ], ., add, (, ort, [, 2, ], [, 0, ], ), ), ;, }, else, {]
[2, ], ., add, (, ort, [, 2, ], [, 0, ], ), ), ;, }, else, {, s, =]
[2, ], ., add, (, ort, [, 2, ], [, 0, ], ), ), ;, }, else, {, s, =]
[2, ], ., add, (, ort, [, 2, ], [, 0, ], ), ), ;, }, else, {, s, =]
[2, ], ., add, (, ort, [, 2, ], [, 0, ], ), ), ;, }, else, {, s, =]
[2, ], ., add, (, ort, [, 2, ], [, 0, ], ), ), ;, }, else, {, s, =]
[., add, (, ort, [, 2, ], [, 0, ], ), ), ;, }, else, {, s, =, ort, []
[ort, [, 2, ], [, 0, ], ), ), ;, }, else, {, s, =, ort, [, 1, ], []
[0, ], ), ), ;, }, else, {, s, =, ort, [, 1, ], [, 1, ], ., subtract, (]
[0, ], ), ), ;, }, else, {, s, =, ort, [, 1, ], [, 1, ], ., subtract, (]
[0, ], ), ), ;, }, else, {, s, =, ort, [, 1, ], [, 1, ], ., subtract, (]
[), ), ;, }, else, {, s, =, ort, [, 1, ], [, 1, ], ., subtract, (, ort, []
[}, else, {, s, =, ort, [, 1, ], [, 1, ], ., subtract, (, ort, [, 0, ], []
[[, 1, ], [, 1, ], ., subtract, (, ort, [, 0, ], [, 0, ], ), ., subtract, (]
[[, 1, ], [, 1, ], ., subtract, (, ort, [, 0, ], [, 0, ], ), ., subtract, (]
[[, 1, ], [, 1, ], ., subtract, (, ort, [, 0, ], [, 0, ], ), ., subtract, (]
[], [, 1, ], ., subtract, (, ort, [, 0, ], [, 0, ], ), ., subtract, (, ort, []
[], ., subtract, (, ort, [, 0, ], [, 0, ], ), ., subtract, (, ort, [, 2, ], []
[0, ], [, 0, ], ), ., subtract, (, ort, [, 2, ], [, 2, ], ), ;, if, (]
[0, ], [, 0, ], ), ., subtract, (, ort, [, 2, ], [, 2, ], ), ;, if, (]
[0, ], [, 0, ], ), ., subtract, (, ort, [, 2, ], [, 2, ], ), ;, if, (]
[., subtract, (, ort, [, 2, ], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >]
[subtract, (, ort, [, 2, ], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >, -]
[[, 2, ], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {]
[[, 2, ], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {]
[], [, 2, ], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, []
[], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 2, ], =]
[], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 2, ], =]
[], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 2, ], =]
[], ), ;, if, (, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 2, ], =]
[(, s, ., getReal, (, ), >, -, 0.19, ), {, quat, [, 2, ], =, s, ., add, (]
[), {, quat, [, 2, ], =, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =, quat, []
[., multiply, (, 0.5, ), ;, T, inv, =, quat, [, 2, ], ., reciprocal, (, ), ., multiply, (]
[0.5, ), ;, T, inv, =, quat, [, 2, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;]
[0.5, ), ;, T, inv, =, quat, [, 2, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;]
[;, T, inv, =, quat, [, 2, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, []
[=, quat, [, 2, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =]
[=, quat, [, 2, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (]
[reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (, ort, []
[., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (, ort, [, 2, ], []
[;, quat, [, 0, ], =, inv, ., multiply, (, ort, [, 2, ], [, 0, ], ., subtract, (]
[;, quat, [, 0, ], =, inv, ., multiply, (, ort, [, 2, ], [, 0, ], ., subtract, (]
[;, quat, [, 0, ], =, inv, ., multiply, (, ort, [, 2, ], [, 0, ], ., subtract, (]
[[, 0, ], =, inv, ., multiply, (, ort, [, 2, ], [, 0, ], ., subtract, (, ort, []
[=, inv, ., multiply, (, ort, [, 2, ], [, 0, ], ., subtract, (, ort, [, 0, ], []
[ort, [, 2, ], [, 0, ], ., subtract, (, ort, [, 0, ], [, 2, ], ), ), ;]
[ort, [, 2, ], [, 0, ], ., subtract, (, ort, [, 0, ], [, 2, ], ), ), ;]
[2, ], [, 0, ], ., subtract, (, ort, [, 0, ], [, 2, ], ), ), ;, quat, []
[0, ], ., subtract, (, ort, [, 0, ], [, 2, ], ), ), ;, quat, [, 1, ], =]
[0, ], ., subtract, (, ort, [, 0, ], [, 2, ], ), ), ;, quat, [, 1, ], =]
[(, ort, [, 0, ], [, 2, ], ), ), ;, quat, [, 1, ], =, inv, ., multiply, (]
[(, ort, [, 0, ], [, 2, ], ), ), ;, quat, [, 1, ], =, inv, ., multiply, (]
[(, ort, [, 0, ], [, 2, ], ), ), ;, quat, [, 1, ], =, inv, ., multiply, (]
[(, ort, [, 0, ], [, 2, ], ), ), ;, quat, [, 1, ], =, inv, ., multiply, (]
[[, 0, ], [, 2, ], ), ), ;, quat, [, 1, ], =, inv, ., multiply, (, ort, []
[[, 2, ], ), ), ;, quat, [, 1, ], =, inv, ., multiply, (, ort, [, 0, ], []
[;, quat, [, 1, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., add, (]
[;, quat, [, 1, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., add, (]
[;, quat, [, 1, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., add, (]
[[, 1, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., add, (, ort, []
[=, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., add, (, ort, [, 1, ], []
[ort, [, 0, ], [, 1, ], ., add, (, ort, [, 1, ], [, 0, ], ), ), ;]
[ort, [, 0, ], [, 1, ], ., add, (, ort, [, 1, ], [, 0, ], ), ), ;]
[0, ], [, 1, ], ., add, (, ort, [, 1, ], [, 0, ], ), ), ;, quat, []
[1, ], ., add, (, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =]
[1, ], ., add, (, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =]
[(, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (]
[(, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (]
[(, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (]
[(, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (]
[[, 1, ], [, 0, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (, ort, []
[[, 0, ], ), ), ;, quat, [, 3, ], =, inv, ., multiply, (, ort, [, 2, ], []
[;, quat, [, 3, ], =, inv, ., multiply, (, ort, [, 2, ], [, 1, ], ., add, (]
[;, quat, [, 3, ], =, inv, ., multiply, (, ort, [, 2, ], [, 1, ], ., add, (]
[;, quat, [, 3, ], =, inv, ., multiply, (, ort, [, 2, ], [, 1, ], ., add, (]
[[, 3, ], =, inv, ., multiply, (, ort, [, 2, ], [, 1, ], ., add, (, ort, []
[=, inv, ., multiply, (, ort, [, 2, ], [, 1, ], ., add, (, ort, [, 1, ], []
[], [, 1, ], ., add, (, ort, [, 1, ], [, 2, ], ), ), ;, }, else, {]
[1, ], ., add, (, ort, [, 1, ], [, 2, ], ), ), ;, }, else, {, s, =]
[1, ], ., add, (, ort, [, 1, ], [, 2, ], ), ), ;, }, else, {, s, =]
[1, ], ., add, (, ort, [, 1, ], [, 2, ], ), ), ;, }, else, {, s, =]
[1, ], ., add, (, ort, [, 1, ], [, 2, ], ), ), ;, }, else, {, s, =]
[1, ], ., add, (, ort, [, 1, ], [, 2, ], ), ), ;, }, else, {, s, =]
[., add, (, ort, [, 1, ], [, 2, ], ), ), ;, }, else, {, s, =, ort, []
[ort, [, 1, ], [, 2, ], ), ), ;, }, else, {, s, =, ort, [, 2, ], []
[2, ], ), ), ;, }, else, {, s, =, ort, [, 2, ], [, 2, ], ., subtract, (]
[2, ], ), ), ;, }, else, {, s, =, ort, [, 2, ], [, 2, ], ., subtract, (]
[2, ], ), ), ;, }, else, {, s, =, ort, [, 2, ], [, 2, ], ., subtract, (]
[), ), ;, }, else, {, s, =, ort, [, 2, ], [, 2, ], ., subtract, (, ort, []
[}, else, {, s, =, ort, [, 2, ], [, 2, ], ., subtract, (, ort, [, 0, ], []
[[, 2, ], [, 2, ], ., subtract, (, ort, [, 0, ], [, 0, ], ), ., subtract, (]
[[, 2, ], [, 2, ], ., subtract, (, ort, [, 0, ], [, 0, ], ), ., subtract, (]
[[, 2, ], [, 2, ], ., subtract, (, ort, [, 0, ], [, 0, ], ), ., subtract, (]
[], [, 2, ], ., subtract, (, ort, [, 0, ], [, 0, ], ), ., subtract, (, ort, []
[], ., subtract, (, ort, [, 0, ], [, 0, ], ), ., subtract, (, ort, [, 1, ], []
[ort, [, 0, ], [, 0, ], ), ., subtract, (, ort, [, 1, ], [, 1, ], ), ;]
[ort, [, 0, ], [, 0, ], ), ., subtract, (, ort, [, 1, ], [, 1, ], ), ;]
[0, ], [, 0, ], ), ., subtract, (, ort, [, 1, ], [, 1, ], ), ;, quat, []
[0, ], ), ., subtract, (, ort, [, 1, ], [, 1, ], ), ;, quat, [, 3, ], =]
[0, ], ), ., subtract, (, ort, [, 1, ], [, 1, ], ), ;, quat, [, 3, ], =]
[0, ], ), ., subtract, (, ort, [, 1, ], [, 1, ], ), ;, quat, [, 3, ], =]
[0, ], ), ., subtract, (, ort, [, 1, ], [, 1, ], ), ;, quat, [, 3, ], =]
[subtract, (, ort, [, 1, ], [, 1, ], ), ;, quat, [, 3, ], =, s, ., add, (]
[), ;, quat, [, 3, ], =, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[=, s, ., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =]
[., add, (, 1.0, ), ., sqrt, (, ), ., multiply, (, 0.5, ), ;, T, inv, =, quat, []
[., multiply, (, 0.5, ), ;, T, inv, =, quat, [, 3, ], ., reciprocal, (, ), ., multiply, (]
[0.5, ), ;, T, inv, =, quat, [, 3, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;]
[0.5, ), ;, T, inv, =, quat, [, 3, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;]
[;, T, inv, =, quat, [, 3, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, []
[=, quat, [, 3, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =]
[=, quat, [, 3, ], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (]
[], ., reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (]
[reciprocal, (, ), ., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (, ort, []
[., multiply, (, 0.25, ), ;, quat, [, 0, ], =, inv, ., multiply, (, ort, [, 0, ], []
[;, quat, [, 0, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., subtract, (]
[;, quat, [, 0, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., subtract, (]
[;, quat, [, 0, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., subtract, (]
[[, 0, ], =, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., subtract, (, ort, []
[=, inv, ., multiply, (, ort, [, 0, ], [, 1, ], ., subtract, (, ort, [, 1, ], []
[ort, [, 0, ], [, 1, ], ., subtract, (, ort, [, 1, ], [, 0, ], ), ), ;]
[ort, [, 0, ], [, 1, ], ., subtract, (, ort, [, 1, ], [, 0, ], ), ), ;]
[0, ], [, 1, ], ., subtract, (, ort, [, 1, ], [, 0, ], ), ), ;, quat, []
[1, ], ., subtract, (, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 1, ], =]
[1, ], ., subtract, (, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 1, ], =]
[(, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 1, ], =, inv, ., multiply, (]
[(, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 1, ], =, inv, ., multiply, (]
[(, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 1, ], =, inv, ., multiply, (]
[(, ort, [, 1, ], [, 0, ], ), ), ;, quat, [, 1, ], =, inv, ., multiply, (]
[[, 1, ], [, 0, ], ), ), ;, quat, [, 1, ], =, inv, ., multiply, (, ort, []
[[, 0, ], ), ), ;, quat, [, 1, ], =, inv, ., multiply, (, ort, [, 0, ], []
[;, quat, [, 1, ], =, inv, ., multiply, (, ort, [, 0, ], [, 2, ], ., add, (]
[;, quat, [, 1, ], =, inv, ., multiply, (, ort, [, 0, ], [, 2, ], ., add, (]
[;, quat, [, 1, ], =, inv, ., multiply, (, ort, [, 0, ], [, 2, ], ., add, (]
[[, 1, ], =, inv, ., multiply, (, ort, [, 0, ], [, 2, ], ., add, (, ort, []
[=, inv, ., multiply, (, ort, [, 0, ], [, 2, ], ., add, (, ort, [, 2, ], []
[ort, [, 0, ], [, 2, ], ., add, (, ort, [, 2, ], [, 0, ], ), ), ;]
[ort, [, 0, ], [, 2, ], ., add, (, ort, [, 2, ], [, 0, ], ), ), ;]
[0, ], [, 2, ], ., add, (, ort, [, 2, ], [, 0, ], ), ), ;, quat, []
[2, ], ., add, (, ort, [, 2, ], [, 0, ], ), ), ;, quat, [, 2, ], =]
[2, ], ., add, (, ort, [, 2, ], [, 0, ], ), ), ;, quat, [, 2, ], =]
[(, ort, [, 2, ], [, 0, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (]
[(, ort, [, 2, ], [, 0, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (]
[(, ort, [, 2, ], [, 0, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (]
[(, ort, [, 2, ], [, 0, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (]
[[, 2, ], [, 0, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (, ort, []
[[, 0, ], ), ), ;, quat, [, 2, ], =, inv, ., multiply, (, ort, [, 2, ], []
[;, quat, [, 2, ], =, inv, ., multiply, (, ort, [, 2, ], [, 1, ], ., add, (]
[;, quat, [, 2, ], =, inv, ., multiply, (, ort, [, 2, ], [, 1, ], ., add, (]
[;, quat, [, 2, ], =, inv, ., multiply, (, ort, [, 2, ], [, 1, ], ., add, (]
[[, 2, ], =, inv, ., multiply, (, ort, [, 2, ], [, 1, ], ., add, (, ort, []
[=, inv, ., multiply, (, ort, [, 2, ], [, 1, ], ., add, (, ort, [, 1, ], []
[[, 1, ], ., add, (, ort, [, 1, ], [, 2, ], ), ), ;, }, }, }, return]
[), ), ;, }, }, }, return, quat, ;, }, public, FieldRotation, <, T, >, revert, (, ), {, return]
[return, quat, ;, }, public, FieldRotation, <, T, >, revert, (, ), {, return, new, FieldRotation, <, T, >, (]
[return, quat, ;, }, public, FieldRotation, <, T, >, revert, (, ), {, return, new, FieldRotation, <, T, >, (]
[<, T, >, revert, (, ), {, return, new, FieldRotation, <, T, >, (, q0, ., negate, (, ), ,]
[>, revert, (, ), {, return, new, FieldRotation, <, T, >, (, q0, ., negate, (, ), ,, q1, ,]
[(, ), {, return, new, FieldRotation, <, T, >, (, q0, ., negate, (, ), ,, q1, ,, q2, ,]
[{, return, new, FieldRotation, <, T, >, (, q0, ., negate, (, ), ,, q1, ,, q2, ,, q3, ,]
[(, ), ,, q1, ,, q2, ,, q3, ,, false, ), ;, }, public, T, getQ0, (, ), {, return]
[), ;, }, public, T, getQ0, (, ), {, return, q0, ;, }, public, T, getQ1, (, ), {, return]
[q0, ;, }, public, T, getQ1, (, ), {, return, q1, ;, }, public, T, getQ2, (, ), {, return]
[q1, ;, }, public, T, getQ2, (, ), {, return, q2, ;, }, public, T, getQ3, (, ), {, return]
[(, ), {, return, q3, ;, }, public, FieldVector3D, <, T, >, getAxis, (, ), {, final, T, squaredSine, =]
[(, ), {, return, q3, ;, }, public, FieldVector3D, <, T, >, getAxis, (, ), {, final, T, squaredSine, =]
[(, ), {, return, q3, ;, }, public, FieldVector3D, <, T, >, getAxis, (, ), {, final, T, squaredSine, =]
[(, ), {, return, q3, ;, }, public, FieldVector3D, <, T, >, getAxis, (, ), {, final, T, squaredSine, =]
[q3, ;, }, public, FieldVector3D, <, T, >, getAxis, (, ), {, final, T, squaredSine, =, q1, ., multiply, (]
[<, T, >, getAxis, (, ), {, final, T, squaredSine, =, q1, ., multiply, (, q1, ), ., add, (]
[<, T, >, getAxis, (, ), {, final, T, squaredSine, =, q1, ., multiply, (, q1, ), ., add, (]
[(, ), {, final, T, squaredSine, =, q1, ., multiply, (, q1, ), ., add, (, q2, ., multiply, (]
[=, q1, ., multiply, (, q1, ), ., add, (, q2, ., multiply, (, q2, ), ), ., add, (]
[=, q1, ., multiply, (, q1, ), ., add, (, q2, ., multiply, (, q2, ), ), ., add, (]
[(, q1, ), ., add, (, q2, ., multiply, (, q2, ), ), ., add, (, q3, ., multiply, (]
[q2, ., multiply, (, q2, ), ), ., add, (, q3, ., multiply, (, q3, ), ), ;, if, (]
[q2, ., multiply, (, q2, ), ), ., add, (, q3, ., multiply, (, q3, ), ), ;, if, (]
[q2, ., multiply, (, q2, ), ), ., add, (, q3, ., multiply, (, q3, ), ), ;, if, (]
[), ., add, (, q3, ., multiply, (, q3, ), ), ;, if, (, squaredSine, ., getReal, (, ), ==]
[), ;, if, (, squaredSine, ., getReal, (, ), ==, 0, ), {, final, Field, <, T, >, field, =]
[), ;, if, (, squaredSine, ., getReal, (, ), ==, 0, ), {, final, Field, <, T, >, field, =]
[(, ), ==, 0, ), {, final, Field, <, T, >, field, =, squaredSine, ., getField, (, ), ;, return]
[final, Field, <, T, >, field, =, squaredSine, ., getField, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[final, Field, <, T, >, field, =, squaredSine, ., getField, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[=, squaredSine, ., getField, (, ), ;, return, new, FieldVector3D, <, T, >, (, field, ., getOne, (, ), ,]
[=, squaredSine, ., getField, (, ), ;, return, new, FieldVector3D, <, T, >, (, field, ., getOne, (, ), ,]
[;, return, new, FieldVector3D, <, T, >, (, field, ., getOne, (, ), ,, field, ., getZero, (, ), ,]
[;, return, new, FieldVector3D, <, T, >, (, field, ., getOne, (, ), ,, field, ., getZero, (, ), ,]
[(, ), ,, field, ., getZero, (, ), ,, field, ., getZero, (, ), ), ;, }, else, if, (]
[(, ), ,, field, ., getZero, (, ), ,, field, ., getZero, (, ), ), ;, }, else, if, (]
[(, ), ,, field, ., getZero, (, ), ,, field, ., getZero, (, ), ), ;, }, else, if, (]
[(, ), ,, field, ., getZero, (, ), ), ;, }, else, if, (, q0, ., getReal, (, ), <]
[(, ), ), ;, }, else, if, (, q0, ., getReal, (, ), <, 0, ), {, T, inverse, =]
[(, ), ), ;, }, else, if, (, q0, ., getReal, (, ), <, 0, ), {, T, inverse, =]
[(, ), ), ;, }, else, if, (, q0, ., getReal, (, ), <, 0, ), {, T, inverse, =]
[(, ), <, 0, ), {, T, inverse, =, squaredSine, ., sqrt, (, ), ., reciprocal, (, ), ;, return]
[T, inverse, =, squaredSine, ., sqrt, (, ), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[T, inverse, =, squaredSine, ., sqrt, (, ), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[., sqrt, (, ), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (, q1, ., multiply, (]
[), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (, q1, ., multiply, (, inverse, ), ,]
[), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (, q1, ., multiply, (, inverse, ), ,]
[), ;, return, new, FieldVector3D, <, T, >, (, q1, ., multiply, (, inverse, ), ,, q2, ., multiply, (]
[new, FieldVector3D, <, T, >, (, q1, ., multiply, (, inverse, ), ,, q2, ., multiply, (, inverse, ), ,]
[new, FieldVector3D, <, T, >, (, q1, ., multiply, (, inverse, ), ,, q2, ., multiply, (, inverse, ), ,]
[>, (, q1, ., multiply, (, inverse, ), ,, q2, ., multiply, (, inverse, ), ,, q3, ., multiply, (]
[q2, ., multiply, (, inverse, ), ,, q3, ., multiply, (, inverse, ), ), ;, }, final, T, inverse, =]
[q2, ., multiply, (, inverse, ), ,, q3, ., multiply, (, inverse, ), ), ;, }, final, T, inverse, =]
[q2, ., multiply, (, inverse, ), ,, q3, ., multiply, (, inverse, ), ), ;, }, final, T, inverse, =]
[q2, ., multiply, (, inverse, ), ,, q3, ., multiply, (, inverse, ), ), ;, }, final, T, inverse, =]
[}, final, T, inverse, =, squaredSine, ., sqrt, (, ), ., reciprocal, (, ), ., negate, (, ), ;, return]
[., sqrt, (, ), ., reciprocal, (, ), ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[., sqrt, (, ), ., reciprocal, (, ), ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[., reciprocal, (, ), ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (, q1, ., multiply, (]
[), ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (, q1, ., multiply, (, inverse, ), ,]
[), ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (, q1, ., multiply, (, inverse, ), ,]
[), ;, return, new, FieldVector3D, <, T, >, (, q1, ., multiply, (, inverse, ), ,, q2, ., multiply, (]
[new, FieldVector3D, <, T, >, (, q1, ., multiply, (, inverse, ), ,, q2, ., multiply, (, inverse, ), ,]
[new, FieldVector3D, <, T, >, (, q1, ., multiply, (, inverse, ), ,, q2, ., multiply, (, inverse, ), ,]
[>, (, q1, ., multiply, (, inverse, ), ,, q2, ., multiply, (, inverse, ), ,, q3, ., multiply, (]
[inverse, ), ,, q3, ., multiply, (, inverse, ), ), ;, }, public, T, getAngle, (, ), {, if, (]
[inverse, ), ,, q3, ., multiply, (, inverse, ), ), ;, }, public, T, getAngle, (, ), {, if, (]
[), ,, q3, ., multiply, (, inverse, ), ), ;, }, public, T, getAngle, (, ), {, if, (, (]
[), ,, q3, ., multiply, (, inverse, ), ), ;, }, public, T, getAngle, (, ), {, if, (, (]
[), ,, q3, ., multiply, (, inverse, ), ), ;, }, public, T, getAngle, (, ), {, if, (, (]
[inverse, ), ), ;, }, public, T, getAngle, (, ), {, if, (, (, q0, ., getReal, (, ), <]
[), ), ;, }, public, T, getAngle, (, ), {, if, (, (, q0, ., getReal, (, ), <, -]
[}, public, T, getAngle, (, ), {, if, (, (, q0, ., getReal, (, ), <, -, 0.1, ), ||]
[public, T, getAngle, (, ), {, if, (, (, q0, ., getReal, (, ), <, -, 0.1, ), ||, (]
[public, T, getAngle, (, ), {, if, (, (, q0, ., getReal, (, ), <, -, 0.1, ), ||, (]
[public, T, getAngle, (, ), {, if, (, (, q0, ., getReal, (, ), <, -, 0.1, ), ||, (]
[if, (, (, q0, ., getReal, (, ), <, -, 0.1, ), ||, (, q0, ., getReal, (, ), >]
[getReal, (, ), <, -, 0.1, ), ||, (, q0, ., getReal, (, ), >, 0.1, ), ), {, return]
[getReal, (, ), <, -, 0.1, ), ||, (, q0, ., getReal, (, ), >, 0.1, ), ), {, return]
[getReal, (, ), <, -, 0.1, ), ||, (, q0, ., getReal, (, ), >, 0.1, ), ), {, return]
[getReal, (, ), <, -, 0.1, ), ||, (, q0, ., getReal, (, ), >, 0.1, ), ), {, return]
[getReal, (, ), <, -, 0.1, ), ||, (, q0, ., getReal, (, ), >, 0.1, ), ), {, return]
[getReal, (, ), <, -, 0.1, ), ||, (, q0, ., getReal, (, ), >, 0.1, ), ), {, return]
[getReal, (, ), <, -, 0.1, ), ||, (, q0, ., getReal, (, ), >, 0.1, ), ), {, return]
[-, 0.1, ), ||, (, q0, ., getReal, (, ), >, 0.1, ), ), {, return, q1, ., multiply, (]
[q0, ., getReal, (, ), >, 0.1, ), ), {, return, q1, ., multiply, (, q1, ), ., add, (]
[q0, ., getReal, (, ), >, 0.1, ), ), {, return, q1, ., multiply, (, q1, ), ., add, (]
[), >, 0.1, ), ), {, return, q1, ., multiply, (, q1, ), ., add, (, q2, ., multiply, (]
[return, q1, ., multiply, (, q1, ), ., add, (, q2, ., multiply, (, q2, ), ), ., add, (]
[return, q1, ., multiply, (, q1, ), ., add, (, q2, ., multiply, (, q2, ), ), ., add, (]
[(, q1, ), ., add, (, q2, ., multiply, (, q2, ), ), ., add, (, q3, ., multiply, (]
[add, (, q3, ., multiply, (, q3, ), ), ., sqrt, (, ), ., asin, (, ), ., multiply, (]
[), ), ., sqrt, (, ), ., asin, (, ), ., multiply, (, 2, ), ;, }, else, if, (]
[), ), ., sqrt, (, ), ., asin, (, ), ., multiply, (, 2, ), ;, }, else, if, (]
[), ), ., sqrt, (, ), ., asin, (, ), ., multiply, (, 2, ), ;, }, else, if, (]
[., asin, (, ), ., multiply, (, 2, ), ;, }, else, if, (, q0, ., getReal, (, ), <]
[., multiply, (, 2, ), ;, }, else, if, (, q0, ., getReal, (, ), <, 0, ), {, return]
[., multiply, (, 2, ), ;, }, else, if, (, q0, ., getReal, (, ), <, 0, ), {, return]
[., multiply, (, 2, ), ;, }, else, if, (, q0, ., getReal, (, ), <, 0, ), {, return]
[., multiply, (, 2, ), ;, }, else, if, (, q0, ., getReal, (, ), <, 0, ), {, return]
[getReal, (, ), <, 0, ), {, return, q0, ., negate, (, ), ., acos, (, ), ., multiply, (]
[), {, return, q0, ., negate, (, ), ., acos, (, ), ., multiply, (, 2, ), ;, }, return]
[), {, return, q0, ., negate, (, ), ., acos, (, ), ., multiply, (, 2, ), ;, }, return]
[), {, return, q0, ., negate, (, ), ., acos, (, ), ., multiply, (, 2, ), ;, }, return]
[., acos, (, ), ., multiply, (, 2, ), ;, }, return, q0, ., acos, (, ), ., multiply, (]
[(, 2, ), ;, }, public, T, [, ], getAngles, (, final, RotationOrder, order, ), throws, CardanEulerSingularityException, {, if, (]
[(, 2, ), ;, }, public, T, [, ], getAngles, (, final, RotationOrder, order, ), throws, CardanEulerSingularityException, {, if, (]
[), ;, }, public, T, [, ], getAngles, (, final, RotationOrder, order, ), throws, CardanEulerSingularityException, {, if, (, order, ==]
[), ;, }, public, T, [, ], getAngles, (, final, RotationOrder, order, ), throws, CardanEulerSingularityException, {, if, (, order, ==]
[), throws, CardanEulerSingularityException, {, if, (, order, ==, RotationOrder, ., XYZ, ), {, final, FieldVector3D, <, T, >, v1, =]
[CardanEulerSingularityException, {, if, (, order, ==, RotationOrder, ., XYZ, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (]
[if, (, order, ==, RotationOrder, ., XYZ, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (]
[order, ==, RotationOrder, ., XYZ, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,]
[RotationOrder, ., XYZ, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,, 0, ,]
[=, applyTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =]
[(, vector, (, 0, ,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (]
[(, 0, ,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (]
[,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,]
[,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[,, 0, ,, 0, ), ), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <]
[0, ,, 0, ), ), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -]
[), ), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[., getReal, (, ), <, -, 0.9999999999, ), ||, (, v2, ., getZ, (, ), ., getReal, (, ), >]
[-, 0.9999999999, ), ||, (, v2, ., getZ, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw]
[||, (, v2, ., getZ, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (]
[(, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[(, true, ), ;, }, return, buildArray, (, v1, ., getY, (, ), ., negate, (, ), ., atan2, (]
[(, true, ), ;, }, return, buildArray, (, v1, ., getY, (, ), ., negate, (, ), ., atan2, (]
[(, v1, ., getY, (, ), ., negate, (, ), ., atan2, (, v1, ., getZ, (, ), ), ,]
[(, v1, ., getY, (, ), ., negate, (, ), ., atan2, (, v1, ., getZ, (, ), ), ,]
[(, v1, ., getY, (, ), ., negate, (, ), ., atan2, (, v1, ., getZ, (, ), ), ,]
[., atan2, (, v1, ., getZ, (, ), ), ,, v2, ., getZ, (, ), ., asin, (, ), ,]
[., atan2, (, v1, ., getZ, (, ), ), ,, v2, ., getZ, (, ), ., asin, (, ), ,]
[., atan2, (, v1, ., getZ, (, ), ), ,, v2, ., getZ, (, ), ., asin, (, ), ,]
[., atan2, (, v1, ., getZ, (, ), ), ,, v2, ., getZ, (, ), ., asin, (, ), ,]
[getZ, (, ), ., asin, (, ), ,, v2, ., getY, (, ), ., negate, (, ), ., atan2, (]
[getZ, (, ), ., asin, (, ), ,, v2, ., getY, (, ), ., negate, (, ), ., atan2, (]
[), ., negate, (, ), ., atan2, (, v2, ., getX, (, ), ), ), ;, }, else, if, (]
[), ., negate, (, ), ., atan2, (, v2, ., getX, (, ), ), ), ;, }, else, if, (]
[negate, (, ), ., atan2, (, v2, ., getX, (, ), ), ), ;, }, else, if, (, order, ==]
[negate, (, ), ., atan2, (, v2, ., getX, (, ), ), ), ;, }, else, if, (, order, ==]
[), ;, }, else, if, (, order, ==, RotationOrder, ., XZY, ), {, final, FieldVector3D, <, T, >, v1, =]
[}, else, if, (, order, ==, RotationOrder, ., XZY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (]
[if, (, order, ==, RotationOrder, ., XZY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (]
[order, ==, RotationOrder, ., XZY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,]
[RotationOrder, ., XZY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,, 1, ,]
[=, applyTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =]
[(, vector, (, 0, ,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (]
[(, 0, ,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (]
[,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,]
[,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[,, 0, ,, 0, ), ), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <]
[0, ,, 0, ), ), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -]
[), ), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[., getReal, (, ), <, -, 0.9999999999, ), ||, (, v2, ., getY, (, ), ., getReal, (, ), >]
[-, 0.9999999999, ), ||, (, v2, ., getY, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw]
[||, (, v2, ., getY, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (]
[(, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[{, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (]
[{, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (]
[;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (, v1, ., getY, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (, v1, ., getY, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (, v1, ., getY, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (, v1, ., getY, (, ), ), ,]
[., getY, (, ), ), ,, v2, ., getY, (, ), ., asin, (, ), ., negate, (, ), ,]
[., getY, (, ), ), ,, v2, ., getY, (, ), ., asin, (, ), ., negate, (, ), ,]
[., getY, (, ), ), ,, v2, ., getY, (, ), ., asin, (, ), ., negate, (, ), ,]
[getY, (, ), ., asin, (, ), ., negate, (, ), ,, v2, ., getZ, (, ), ., atan2, (]
[getY, (, ), ., asin, (, ), ., negate, (, ), ,, v2, ., getZ, (, ), ., atan2, (]
[v2, ., getZ, (, ), ., atan2, (, v2, ., getX, (, ), ), ), ;, }, else, if, (]
[v2, ., getZ, (, ), ., atan2, (, v2, ., getX, (, ), ), ), ;, }, else, if, (]
[getZ, (, ), ., atan2, (, v2, ., getX, (, ), ), ), ;, }, else, if, (, order, ==]
[getZ, (, ), ., atan2, (, v2, ., getX, (, ), ), ), ;, }, else, if, (, order, ==]
[), ;, }, else, if, (, order, ==, RotationOrder, ., YXZ, ), {, final, FieldVector3D, <, T, >, v1, =]
[}, else, if, (, order, ==, RotationOrder, ., YXZ, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (]
[if, (, order, ==, RotationOrder, ., YXZ, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (]
[order, ==, RotationOrder, ., YXZ, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,]
[RotationOrder, ., YXZ, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,, 0, ,]
[=, applyTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =]
[(, vector, (, 0, ,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (]
[(, 0, ,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (]
[,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,]
[,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[,, 1, ,, 0, ), ), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <]
[1, ,, 0, ), ), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -]
[), ), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[., getReal, (, ), <, -, 0.9999999999, ), ||, (, v2, ., getZ, (, ), ., getReal, (, ), >]
[-, 0.9999999999, ), ||, (, v2, ., getZ, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw]
[||, (, v2, ., getZ, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (]
[(, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[{, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (]
[{, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (]
[;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (, v1, ., getZ, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (, v1, ., getZ, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (, v1, ., getZ, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (, v1, ., getZ, (, ), ), ,]
[., getZ, (, ), ), ,, v2, ., getZ, (, ), ., asin, (, ), ., negate, (, ), ,]
[., getZ, (, ), ), ,, v2, ., getZ, (, ), ., asin, (, ), ., negate, (, ), ,]
[., getZ, (, ), ), ,, v2, ., getZ, (, ), ., asin, (, ), ., negate, (, ), ,]
[getZ, (, ), ., asin, (, ), ., negate, (, ), ,, v2, ., getX, (, ), ., atan2, (]
[getZ, (, ), ., asin, (, ), ., negate, (, ), ,, v2, ., getX, (, ), ., atan2, (]
[v2, ., getX, (, ), ., atan2, (, v2, ., getY, (, ), ), ), ;, }, else, if, (]
[v2, ., getX, (, ), ., atan2, (, v2, ., getY, (, ), ), ), ;, }, else, if, (]
[getX, (, ), ., atan2, (, v2, ., getY, (, ), ), ), ;, }, else, if, (, order, ==]
[getX, (, ), ., atan2, (, v2, ., getY, (, ), ), ), ;, }, else, if, (, order, ==]
[), ;, }, else, if, (, order, ==, RotationOrder, ., YZX, ), {, final, FieldVector3D, <, T, >, v1, =]
[}, else, if, (, order, ==, RotationOrder, ., YZX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (]
[if, (, order, ==, RotationOrder, ., YZX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (]
[order, ==, RotationOrder, ., YZX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 1, ,]
[RotationOrder, ., YZX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 1, ,, 0, ,]
[=, applyTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =]
[(, vector, (, 1, ,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (]
[(, 1, ,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (]
[,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,]
[,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[,, 1, ,, 0, ), ), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <]
[1, ,, 0, ), ), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -]
[), ), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[., getReal, (, ), <, -, 0.9999999999, ), ||, (, v2, ., getX, (, ), ., getReal, (, ), >]
[-, 0.9999999999, ), ||, (, v2, ., getX, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw]
[||, (, v2, ., getX, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (]
[(, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[(, true, ), ;, }, return, buildArray, (, v1, ., getZ, (, ), ., negate, (, ), ., atan2, (]
[(, true, ), ;, }, return, buildArray, (, v1, ., getZ, (, ), ., negate, (, ), ., atan2, (]
[(, v1, ., getZ, (, ), ., negate, (, ), ., atan2, (, v1, ., getX, (, ), ), ,]
[(, v1, ., getZ, (, ), ., negate, (, ), ., atan2, (, v1, ., getX, (, ), ), ,]
[(, v1, ., getZ, (, ), ., negate, (, ), ., atan2, (, v1, ., getX, (, ), ), ,]
[., atan2, (, v1, ., getX, (, ), ), ,, v2, ., getX, (, ), ., asin, (, ), ,]
[., atan2, (, v1, ., getX, (, ), ), ,, v2, ., getX, (, ), ., asin, (, ), ,]
[., atan2, (, v1, ., getX, (, ), ), ,, v2, ., getX, (, ), ., asin, (, ), ,]
[., atan2, (, v1, ., getX, (, ), ), ,, v2, ., getX, (, ), ., asin, (, ), ,]
[getX, (, ), ., asin, (, ), ,, v2, ., getZ, (, ), ., negate, (, ), ., atan2, (]
[getX, (, ), ., asin, (, ), ,, v2, ., getZ, (, ), ., negate, (, ), ., atan2, (]
[), ., negate, (, ), ., atan2, (, v2, ., getY, (, ), ), ), ;, }, else, if, (]
[), ., negate, (, ), ., atan2, (, v2, ., getY, (, ), ), ), ;, }, else, if, (]
[negate, (, ), ., atan2, (, v2, ., getY, (, ), ), ), ;, }, else, if, (, order, ==]
[negate, (, ), ., atan2, (, v2, ., getY, (, ), ), ), ;, }, else, if, (, order, ==]
[), ;, }, else, if, (, order, ==, RotationOrder, ., ZXY, ), {, final, FieldVector3D, <, T, >, v1, =]
[}, else, if, (, order, ==, RotationOrder, ., ZXY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (]
[if, (, order, ==, RotationOrder, ., ZXY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (]
[order, ==, RotationOrder, ., ZXY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,]
[RotationOrder, ., ZXY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,, 1, ,]
[=, applyTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =]
[(, vector, (, 0, ,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (]
[(, 0, ,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (]
[,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,]
[,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[,, 0, ,, 1, ), ), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <]
[0, ,, 1, ), ), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -]
[), ), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[., getReal, (, ), <, -, 0.9999999999, ), ||, (, v2, ., getY, (, ), ., getReal, (, ), >]
[-, 0.9999999999, ), ||, (, v2, ., getY, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw]
[||, (, v2, ., getY, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (]
[(, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[(, true, ), ;, }, return, buildArray, (, v1, ., getX, (, ), ., negate, (, ), ., atan2, (]
[(, true, ), ;, }, return, buildArray, (, v1, ., getX, (, ), ., negate, (, ), ., atan2, (]
[(, v1, ., getX, (, ), ., negate, (, ), ., atan2, (, v1, ., getY, (, ), ), ,]
[(, v1, ., getX, (, ), ., negate, (, ), ., atan2, (, v1, ., getY, (, ), ), ,]
[(, v1, ., getX, (, ), ., negate, (, ), ., atan2, (, v1, ., getY, (, ), ), ,]
[., atan2, (, v1, ., getY, (, ), ), ,, v2, ., getY, (, ), ., asin, (, ), ,]
[., atan2, (, v1, ., getY, (, ), ), ,, v2, ., getY, (, ), ., asin, (, ), ,]
[., atan2, (, v1, ., getY, (, ), ), ,, v2, ., getY, (, ), ., asin, (, ), ,]
[., atan2, (, v1, ., getY, (, ), ), ,, v2, ., getY, (, ), ., asin, (, ), ,]
[getY, (, ), ., asin, (, ), ,, v2, ., getX, (, ), ., negate, (, ), ., atan2, (]
[getY, (, ), ., asin, (, ), ,, v2, ., getX, (, ), ., negate, (, ), ., atan2, (]
[), ., negate, (, ), ., atan2, (, v2, ., getZ, (, ), ), ), ;, }, else, if, (]
[), ., negate, (, ), ., atan2, (, v2, ., getZ, (, ), ), ), ;, }, else, if, (]
[negate, (, ), ., atan2, (, v2, ., getZ, (, ), ), ), ;, }, else, if, (, order, ==]
[negate, (, ), ., atan2, (, v2, ., getZ, (, ), ), ), ;, }, else, if, (, order, ==]
[), ;, }, else, if, (, order, ==, RotationOrder, ., ZYX, ), {, final, FieldVector3D, <, T, >, v1, =]
[}, else, if, (, order, ==, RotationOrder, ., ZYX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (]
[if, (, order, ==, RotationOrder, ., ZYX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (]
[order, ==, RotationOrder, ., ZYX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 1, ,]
[RotationOrder, ., ZYX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 1, ,, 0, ,]
[=, applyTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =]
[(, vector, (, 1, ,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (]
[(, 1, ,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (]
[,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,]
[,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[,, 0, ,, 1, ), ), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <]
[0, ,, 1, ), ), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -]
[), ), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[., getReal, (, ), <, -, 0.9999999999, ), ||, (, v2, ., getX, (, ), ., getReal, (, ), >]
[-, 0.9999999999, ), ||, (, v2, ., getX, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw]
[||, (, v2, ., getX, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (]
[(, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (]
[{, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (]
[{, throw, new, CardanEulerSingularityException, (, true, ), ;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (]
[;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (, v1, ., getX, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (, v1, ., getX, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (, v1, ., getX, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (, v1, ., getX, (, ), ), ,]
[., getX, (, ), ), ,, v2, ., getX, (, ), ., asin, (, ), ., negate, (, ), ,]
[., getX, (, ), ), ,, v2, ., getX, (, ), ., asin, (, ), ., negate, (, ), ,]
[., getX, (, ), ), ,, v2, ., getX, (, ), ., asin, (, ), ., negate, (, ), ,]
[getX, (, ), ., asin, (, ), ., negate, (, ), ,, v2, ., getY, (, ), ., atan2, (]
[getX, (, ), ., asin, (, ), ., negate, (, ), ,, v2, ., getY, (, ), ., atan2, (]
[v2, ., getY, (, ), ., atan2, (, v2, ., getZ, (, ), ), ), ;, }, else, if, (]
[v2, ., getY, (, ), ., atan2, (, v2, ., getZ, (, ), ), ), ;, }, else, if, (]
[getY, (, ), ., atan2, (, v2, ., getZ, (, ), ), ), ;, }, else, if, (, order, ==]
[getY, (, ), ., atan2, (, v2, ., getZ, (, ), ), ), ;, }, else, if, (, order, ==]
[), ;, }, else, if, (, order, ==, RotationOrder, ., XYX, ), {, final, FieldVector3D, <, T, >, v1, =]
[}, else, if, (, order, ==, RotationOrder, ., XYX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (]
[if, (, order, ==, RotationOrder, ., XYX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (]
[order, ==, RotationOrder, ., XYX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 1, ,]
[RotationOrder, ., XYX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 1, ,, 0, ,]
[=, applyTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =]
[(, vector, (, 1, ,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (]
[(, 1, ,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (]
[,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,]
[,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[,, 0, ,, 0, ), ), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <]
[0, ,, 0, ), ), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -]
[), ), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[., getReal, (, ), <, -, 0.9999999999, ), ||, (, v2, ., getX, (, ), ., getReal, (, ), >]
[-, 0.9999999999, ), ||, (, v2, ., getX, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw]
[||, (, v2, ., getX, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (]
[(, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (]
[(, v1, ., getY, (, ), ., atan2, (, v1, ., getZ, (, ), ., negate, (, ), ), ,]
[(, v1, ., getY, (, ), ., atan2, (, v1, ., getZ, (, ), ., negate, (, ), ), ,]
[(, v1, ., getY, (, ), ., atan2, (, v1, ., getZ, (, ), ., negate, (, ), ), ,]
[., getZ, (, ), ., negate, (, ), ), ,, v2, ., getX, (, ), ., acos, (, ), ,]
[., getZ, (, ), ., negate, (, ), ), ,, v2, ., getX, (, ), ., acos, (, ), ,]
[., getZ, (, ), ., negate, (, ), ), ,, v2, ., getX, (, ), ., acos, (, ), ,]
[), ,, v2, ., getX, (, ), ., acos, (, ), ,, v2, ., getY, (, ), ., atan2, (]
[), ,, v2, ., getX, (, ), ., acos, (, ), ,, v2, ., getY, (, ), ., atan2, (]
[v2, ., getY, (, ), ., atan2, (, v2, ., getZ, (, ), ), ), ;, }, else, if, (]
[v2, ., getY, (, ), ., atan2, (, v2, ., getZ, (, ), ), ), ;, }, else, if, (]
[getY, (, ), ., atan2, (, v2, ., getZ, (, ), ), ), ;, }, else, if, (, order, ==]
[getY, (, ), ., atan2, (, v2, ., getZ, (, ), ), ), ;, }, else, if, (, order, ==]
[), ;, }, else, if, (, order, ==, RotationOrder, ., XZX, ), {, final, FieldVector3D, <, T, >, v1, =]
[}, else, if, (, order, ==, RotationOrder, ., XZX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (]
[if, (, order, ==, RotationOrder, ., XZX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (]
[order, ==, RotationOrder, ., XZX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 1, ,]
[RotationOrder, ., XZX, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 1, ,, 0, ,]
[=, applyTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =]
[(, vector, (, 1, ,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (]
[(, 1, ,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (]
[,, 0, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,]
[,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 1, ,, 0, ,, 0, ), ), ;, if, (, (]
[,, 0, ,, 0, ), ), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <]
[0, ,, 0, ), ), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -]
[), ), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getX, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[., getReal, (, ), <, -, 0.9999999999, ), ||, (, v2, ., getX, (, ), ., getReal, (, ), >]
[-, 0.9999999999, ), ||, (, v2, ., getX, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw]
[||, (, v2, ., getX, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (]
[(, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (]
[;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (, v1, ., getY, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (, v1, ., getY, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (, v1, ., getY, (, ), ), ,]
[., atan2, (, v1, ., getY, (, ), ), ,, v2, ., getX, (, ), ., acos, (, ), ,]
[., atan2, (, v1, ., getY, (, ), ), ,, v2, ., getX, (, ), ., acos, (, ), ,]
[., atan2, (, v1, ., getY, (, ), ), ,, v2, ., getX, (, ), ., acos, (, ), ,]
[), ,, v2, ., getX, (, ), ., acos, (, ), ,, v2, ., getZ, (, ), ., atan2, (]
[), ,, v2, ., getX, (, ), ., acos, (, ), ,, v2, ., getZ, (, ), ., atan2, (]
[), ,, v2, ., getX, (, ), ., acos, (, ), ,, v2, ., getZ, (, ), ., atan2, (]
[), ., atan2, (, v2, ., getY, (, ), ., negate, (, ), ), ), ;, }, else, if, (]
[), ., atan2, (, v2, ., getY, (, ), ., negate, (, ), ), ), ;, }, else, if, (]
[atan2, (, v2, ., getY, (, ), ., negate, (, ), ), ), ;, }, else, if, (, order, ==]
[atan2, (, v2, ., getY, (, ), ., negate, (, ), ), ), ;, }, else, if, (, order, ==]
[), ;, }, else, if, (, order, ==, RotationOrder, ., YXY, ), {, final, FieldVector3D, <, T, >, v1, =]
[}, else, if, (, order, ==, RotationOrder, ., YXY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (]
[if, (, order, ==, RotationOrder, ., YXY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (]
[order, ==, RotationOrder, ., YXY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,]
[RotationOrder, ., YXY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,, 1, ,]
[=, applyTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =]
[(, vector, (, 0, ,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (]
[(, 0, ,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (]
[,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,]
[,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[,, 1, ,, 0, ), ), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <]
[1, ,, 0, ), ), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -]
[), ), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[., getReal, (, ), <, -, 0.9999999999, ), ||, (, v2, ., getY, (, ), ., getReal, (, ), >]
[-, 0.9999999999, ), ||, (, v2, ., getY, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw]
[||, (, v2, ., getY, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (]
[(, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (]
[;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (, v1, ., getZ, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (, v1, ., getZ, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (, v1, ., getZ, (, ), ), ,]
[., atan2, (, v1, ., getZ, (, ), ), ,, v2, ., getY, (, ), ., acos, (, ), ,]
[., atan2, (, v1, ., getZ, (, ), ), ,, v2, ., getY, (, ), ., acos, (, ), ,]
[., atan2, (, v1, ., getZ, (, ), ), ,, v2, ., getY, (, ), ., acos, (, ), ,]
[), ,, v2, ., getY, (, ), ., acos, (, ), ,, v2, ., getX, (, ), ., atan2, (]
[), ,, v2, ., getY, (, ), ., acos, (, ), ,, v2, ., getX, (, ), ., atan2, (]
[), ,, v2, ., getY, (, ), ., acos, (, ), ,, v2, ., getX, (, ), ., atan2, (]
[), ., atan2, (, v2, ., getZ, (, ), ., negate, (, ), ), ), ;, }, else, if, (]
[), ., atan2, (, v2, ., getZ, (, ), ., negate, (, ), ), ), ;, }, else, if, (]
[atan2, (, v2, ., getZ, (, ), ., negate, (, ), ), ), ;, }, else, if, (, order, ==]
[atan2, (, v2, ., getZ, (, ), ., negate, (, ), ), ), ;, }, else, if, (, order, ==]
[), ;, }, else, if, (, order, ==, RotationOrder, ., YZY, ), {, final, FieldVector3D, <, T, >, v1, =]
[}, else, if, (, order, ==, RotationOrder, ., YZY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (]
[if, (, order, ==, RotationOrder, ., YZY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (]
[order, ==, RotationOrder, ., YZY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,]
[RotationOrder, ., YZY, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,, 1, ,]
[=, applyTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =]
[(, vector, (, 0, ,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (]
[(, 0, ,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (]
[,, 1, ,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,]
[,, 0, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 1, ,, 0, ), ), ;, if, (, (]
[,, 1, ,, 0, ), ), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <]
[1, ,, 0, ), ), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -]
[), ), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getY, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[., getReal, (, ), <, -, 0.9999999999, ), ||, (, v2, ., getY, (, ), ., getReal, (, ), >]
[-, 0.9999999999, ), ||, (, v2, ., getY, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw]
[||, (, v2, ., getY, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (]
[(, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getZ, (, ), ., atan2, (]
[(, v1, ., getZ, (, ), ., atan2, (, v1, ., getX, (, ), ., negate, (, ), ), ,]
[(, v1, ., getZ, (, ), ., atan2, (, v1, ., getX, (, ), ., negate, (, ), ), ,]
[(, v1, ., getZ, (, ), ., atan2, (, v1, ., getX, (, ), ., negate, (, ), ), ,]
[., getX, (, ), ., negate, (, ), ), ,, v2, ., getY, (, ), ., acos, (, ), ,]
[., getX, (, ), ., negate, (, ), ), ,, v2, ., getY, (, ), ., acos, (, ), ,]
[., getX, (, ), ., negate, (, ), ), ,, v2, ., getY, (, ), ., acos, (, ), ,]
[), ,, v2, ., getY, (, ), ., acos, (, ), ,, v2, ., getZ, (, ), ., atan2, (]
[), ,, v2, ., getY, (, ), ., acos, (, ), ,, v2, ., getZ, (, ), ., atan2, (]
[v2, ., getZ, (, ), ., atan2, (, v2, ., getX, (, ), ), ), ;, }, else, if, (]
[v2, ., getZ, (, ), ., atan2, (, v2, ., getX, (, ), ), ), ;, }, else, if, (]
[getZ, (, ), ., atan2, (, v2, ., getX, (, ), ), ), ;, }, else, if, (, order, ==]
[getZ, (, ), ., atan2, (, v2, ., getX, (, ), ), ), ;, }, else, if, (, order, ==]
[), ;, }, else, if, (, order, ==, RotationOrder, ., ZXZ, ), {, final, FieldVector3D, <, T, >, v1, =]
[}, else, if, (, order, ==, RotationOrder, ., ZXZ, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (]
[if, (, order, ==, RotationOrder, ., ZXZ, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (]
[order, ==, RotationOrder, ., ZXZ, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,]
[RotationOrder, ., ZXZ, ), {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,, 0, ,]
[=, applyTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =]
[(, vector, (, 0, ,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (]
[(, 0, ,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (]
[,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,]
[,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[,, 0, ,, 1, ), ), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <]
[0, ,, 1, ), ), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -]
[), ), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[., getReal, (, ), <, -, 0.9999999999, ), ||, (, v2, ., getZ, (, ), ., getReal, (, ), >]
[-, 0.9999999999, ), ||, (, v2, ., getZ, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw]
[||, (, v2, ., getZ, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (]
[(, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getX, (, ), ., atan2, (]
[(, v1, ., getX, (, ), ., atan2, (, v1, ., getY, (, ), ., negate, (, ), ), ,]
[(, v1, ., getX, (, ), ., atan2, (, v1, ., getY, (, ), ., negate, (, ), ), ,]
[(, v1, ., getX, (, ), ., atan2, (, v1, ., getY, (, ), ., negate, (, ), ), ,]
[., getY, (, ), ., negate, (, ), ), ,, v2, ., getZ, (, ), ., acos, (, ), ,]
[., getY, (, ), ., negate, (, ), ), ,, v2, ., getZ, (, ), ., acos, (, ), ,]
[., getY, (, ), ., negate, (, ), ), ,, v2, ., getZ, (, ), ., acos, (, ), ,]
[), ,, v2, ., getZ, (, ), ., acos, (, ), ,, v2, ., getX, (, ), ., atan2, (]
[), ,, v2, ., getZ, (, ), ., acos, (, ), ,, v2, ., getX, (, ), ., atan2, (]
[atan2, (, v2, ., getY, (, ), ), ), ;, }, else, {, final, FieldVector3D, <, T, >, v1, =]
[v2, ., getY, (, ), ), ), ;, }, else, {, final, FieldVector3D, <, T, >, v1, =, applyTo, (]
[getY, (, ), ), ), ;, }, else, {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (]
[), ), ), ;, }, else, {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,]
[), ;, }, else, {, final, FieldVector3D, <, T, >, v1, =, applyTo, (, vector, (, 0, ,, 0, ,]
[=, applyTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =]
[(, vector, (, 0, ,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (]
[(, 0, ,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (]
[,, 0, ,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,]
[,, 1, ), ), ;, final, FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (]
[FieldVector3D, <, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[<, T, >, v2, =, applyInverseTo, (, vector, (, 0, ,, 0, ,, 1, ), ), ;, if, (, (]
[,, 0, ,, 1, ), ), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <]
[0, ,, 1, ), ), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -]
[), ), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[), ;, if, (, (, v2, ., getZ, (, ), ., getReal, (, ), <, -, 0.9999999999, ), ||, (]
[., getReal, (, ), <, -, 0.9999999999, ), ||, (, v2, ., getZ, (, ), ., getReal, (, ), >]
[-, 0.9999999999, ), ||, (, v2, ., getZ, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw]
[||, (, v2, ., getZ, (, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (]
[(, ), ., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[., getReal, (, ), >, 0.9999999999, ), ), {, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (]
[{, throw, new, CardanEulerSingularityException, (, false, ), ;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (]
[;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (, v1, ., getX, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (, v1, ., getX, (, ), ), ,]
[;, }, return, buildArray, (, v1, ., getY, (, ), ., atan2, (, v1, ., getX, (, ), ), ,]
[., atan2, (, v1, ., getX, (, ), ), ,, v2, ., getZ, (, ), ., acos, (, ), ,]
[., atan2, (, v1, ., getX, (, ), ), ,, v2, ., getZ, (, ), ., acos, (, ), ,]
[., atan2, (, v1, ., getX, (, ), ), ,, v2, ., getZ, (, ), ., acos, (, ), ,]
[), ,, v2, ., getZ, (, ), ., acos, (, ), ,, v2, ., getY, (, ), ., atan2, (]
[), ,, v2, ., getZ, (, ), ., acos, (, ), ,, v2, ., getY, (, ), ., atan2, (]
[), ,, v2, ., getZ, (, ), ., acos, (, ), ,, v2, ., getY, (, ), ., atan2, (]
[(, final, T, a0, ,, final, T, a1, ,, final, T, a2, ), {, final, T, [, ], array, =]
[(, final, T, a0, ,, final, T, a1, ,, final, T, a2, ), {, final, T, [, ], array, =]
[,, final, T, a1, ,, final, T, a2, ), {, final, T, [, ], array, =, MathArrays, ., buildArray, (]
[,, final, T, a1, ,, final, T, a2, ), {, final, T, [, ], array, =, MathArrays, ., buildArray, (]
[T, a2, ), {, final, T, [, ], array, =, MathArrays, ., buildArray, (, a0, ., getField, (, ), ,]
[{, final, T, [, ], array, =, MathArrays, ., buildArray, (, a0, ., getField, (, ), ,, 3, ), ;]
[{, final, T, [, ], array, =, MathArrays, ., buildArray, (, a0, ., getField, (, ), ,, 3, ), ;]
[T, [, ], array, =, MathArrays, ., buildArray, (, a0, ., getField, (, ), ,, 3, ), ;, array, []
[array, =, MathArrays, ., buildArray, (, a0, ., getField, (, ), ,, 3, ), ;, array, [, 0, ], =]
[MathArrays, ., buildArray, (, a0, ., getField, (, ), ,, 3, ), ;, array, [, 0, ], =, a0, ;]
[MathArrays, ., buildArray, (, a0, ., getField, (, ), ,, 3, ), ;, array, [, 0, ], =, a0, ;]
[buildArray, (, a0, ., getField, (, ), ,, 3, ), ;, array, [, 0, ], =, a0, ;, array, []
[., getField, (, ), ,, 3, ), ;, array, [, 0, ], =, a0, ;, array, [, 1, ], =]
[(, ), ,, 3, ), ;, array, [, 0, ], =, a0, ;, array, [, 1, ], =, a1, ;]
[(, ), ,, 3, ), ;, array, [, 0, ], =, a0, ;, array, [, 1, ], =, a1, ;]
[,, 3, ), ;, array, [, 0, ], =, a0, ;, array, [, 1, ], =, a1, ;, array, []
[;, array, [, 0, ], =, a0, ;, array, [, 1, ], =, a1, ;, array, [, 2, ], =]
[0, ], =, a0, ;, array, [, 1, ], =, a1, ;, array, [, 2, ], =, a2, ;, return]
[>, vector, (, final, double, x, ,, final, double, y, ,, final, double, z, ), {, final, T, zero, =]
[>, vector, (, final, double, x, ,, final, double, y, ,, final, double, z, ), {, final, T, zero, =]
[>, vector, (, final, double, x, ,, final, double, y, ,, final, double, z, ), {, final, T, zero, =]
[final, double, z, ), {, final, T, zero, =, q0, ., getField, (, ), ., getZero, (, ), ;, return]
[T, zero, =, q0, ., getField, (, ), ., getZero, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[T, zero, =, q0, ., getField, (, ), ., getZero, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[., getField, (, ), ., getZero, (, ), ;, return, new, FieldVector3D, <, T, >, (, zero, ., add, (]
[), ., getZero, (, ), ;, return, new, FieldVector3D, <, T, >, (, zero, ., add, (, x, ), ,]
[), ., getZero, (, ), ;, return, new, FieldVector3D, <, T, >, (, zero, ., add, (, x, ), ,]
[), ;, return, new, FieldVector3D, <, T, >, (, zero, ., add, (, x, ), ,, zero, ., add, (]
[new, FieldVector3D, <, T, >, (, zero, ., add, (, x, ), ,, zero, ., add, (, y, ), ,]
[new, FieldVector3D, <, T, >, (, zero, ., add, (, x, ), ,, zero, ., add, (, y, ), ,]
[>, (, zero, ., add, (, x, ), ,, zero, ., add, (, y, ), ,, zero, ., add, (]
[(, z, ), ), ;, }, public, T, [, ], [, ], getMatrix, (, ), {, final, T, q0q0, =]
[(, z, ), ), ;, }, public, T, [, ], [, ], getMatrix, (, ), {, final, T, q0q0, =]
[;, }, public, T, [, ], [, ], getMatrix, (, ), {, final, T, q0q0, =, q0, ., multiply, (]
[], getMatrix, (, ), {, final, T, q0q0, =, q0, ., multiply, (, q0, ), ;, final, T, q0q1, =]
[], getMatrix, (, ), {, final, T, q0q0, =, q0, ., multiply, (, q0, ), ;, final, T, q0q1, =]
[{, final, T, q0q0, =, q0, ., multiply, (, q0, ), ;, final, T, q0q1, =, q0, ., multiply, (]
[multiply, (, q0, ), ;, final, T, q0q1, =, q0, ., multiply, (, q1, ), ;, final, T, q0q2, =]
[multiply, (, q0, ), ;, final, T, q0q1, =, q0, ., multiply, (, q1, ), ;, final, T, q0q2, =]
[;, final, T, q0q1, =, q0, ., multiply, (, q1, ), ;, final, T, q0q2, =, q0, ., multiply, (]
[multiply, (, q1, ), ;, final, T, q0q2, =, q0, ., multiply, (, q2, ), ;, final, T, q0q3, =]
[multiply, (, q1, ), ;, final, T, q0q2, =, q0, ., multiply, (, q2, ), ;, final, T, q0q3, =]
[;, final, T, q0q2, =, q0, ., multiply, (, q2, ), ;, final, T, q0q3, =, q0, ., multiply, (]
[multiply, (, q2, ), ;, final, T, q0q3, =, q0, ., multiply, (, q3, ), ;, final, T, q1q1, =]
[multiply, (, q2, ), ;, final, T, q0q3, =, q0, ., multiply, (, q3, ), ;, final, T, q1q1, =]
[;, final, T, q0q3, =, q0, ., multiply, (, q3, ), ;, final, T, q1q1, =, q1, ., multiply, (]
[multiply, (, q3, ), ;, final, T, q1q1, =, q1, ., multiply, (, q1, ), ;, final, T, q1q2, =]
[multiply, (, q3, ), ;, final, T, q1q1, =, q1, ., multiply, (, q1, ), ;, final, T, q1q2, =]
[;, final, T, q1q1, =, q1, ., multiply, (, q1, ), ;, final, T, q1q2, =, q1, ., multiply, (]
[multiply, (, q1, ), ;, final, T, q1q2, =, q1, ., multiply, (, q2, ), ;, final, T, q1q3, =]
[multiply, (, q1, ), ;, final, T, q1q2, =, q1, ., multiply, (, q2, ), ;, final, T, q1q3, =]
[;, final, T, q1q2, =, q1, ., multiply, (, q2, ), ;, final, T, q1q3, =, q1, ., multiply, (]
[multiply, (, q2, ), ;, final, T, q1q3, =, q1, ., multiply, (, q3, ), ;, final, T, q2q2, =]
[multiply, (, q2, ), ;, final, T, q1q3, =, q1, ., multiply, (, q3, ), ;, final, T, q2q2, =]
[;, final, T, q1q3, =, q1, ., multiply, (, q3, ), ;, final, T, q2q2, =, q2, ., multiply, (]
[multiply, (, q3, ), ;, final, T, q2q2, =, q2, ., multiply, (, q2, ), ;, final, T, q2q3, =]
[multiply, (, q3, ), ;, final, T, q2q2, =, q2, ., multiply, (, q2, ), ;, final, T, q2q3, =]
[;, final, T, q2q2, =, q2, ., multiply, (, q2, ), ;, final, T, q2q3, =, q2, ., multiply, (]
[multiply, (, q2, ), ;, final, T, q2q3, =, q2, ., multiply, (, q3, ), ;, final, T, q3q3, =]
[multiply, (, q2, ), ;, final, T, q2q3, =, q2, ., multiply, (, q3, ), ;, final, T, q3q3, =]
[;, final, T, q2q3, =, q2, ., multiply, (, q3, ), ;, final, T, q3q3, =, q3, ., multiply, (]
[;, final, T, q3q3, =, q3, ., multiply, (, q3, ), ;, final, T, [, ], [, ], m, =]
[;, final, T, q3q3, =, q3, ., multiply, (, q3, ), ;, final, T, [, ], [, ], m, =]
[=, q3, ., multiply, (, q3, ), ;, final, T, [, ], [, ], m, =, MathArrays, ., buildArray, (]
[=, q3, ., multiply, (, q3, ), ;, final, T, [, ], [, ], m, =, MathArrays, ., buildArray, (]
[), ;, final, T, [, ], [, ], m, =, MathArrays, ., buildArray, (, q0, ., getField, (, ), ,]
[final, T, [, ], [, ], m, =, MathArrays, ., buildArray, (, q0, ., getField, (, ), ,, 3, ,]
[], [, ], m, =, MathArrays, ., buildArray, (, q0, ., getField, (, ), ,, 3, ,, 3, ), ;]
[], [, ], m, =, MathArrays, ., buildArray, (, q0, ., getField, (, ), ,, 3, ,, 3, ), ;]
[], [, ], m, =, MathArrays, ., buildArray, (, q0, ., getField, (, ), ,, 3, ,, 3, ), ;]
[], m, =, MathArrays, ., buildArray, (, q0, ., getField, (, ), ,, 3, ,, 3, ), ;, m, []
[MathArrays, ., buildArray, (, q0, ., getField, (, ), ,, 3, ,, 3, ), ;, m, [, 0, ], []
[(, q0, ., getField, (, ), ,, 3, ,, 3, ), ;, m, [, 0, ], [, 0, ], =]
[(, q0, ., getField, (, ), ,, 3, ,, 3, ), ;, m, [, 0, ], [, 0, ], =]
[(, q0, ., getField, (, ), ,, 3, ,, 3, ), ;, m, [, 0, ], [, 0, ], =]
[(, q0, ., getField, (, ), ,, 3, ,, 3, ), ;, m, [, 0, ], [, 0, ], =]
[(, ), ,, 3, ,, 3, ), ;, m, [, 0, ], [, 0, ], =, q0q0, ., add, (]
[3, ), ;, m, [, 0, ], [, 0, ], =, q0q0, ., add, (, q1q1, ), ., multiply, (]
[0, ], [, 0, ], =, q0q0, ., add, (, q1q1, ), ., multiply, (, 2, ), ., subtract, (]
[0, ], =, q0q0, ., add, (, q1q1, ), ., multiply, (, 2, ), ., subtract, (, 1, ), ;]
[0, ], =, q0q0, ., add, (, q1q1, ), ., multiply, (, 2, ), ., subtract, (, 1, ), ;]
[0, ], =, q0q0, ., add, (, q1q1, ), ., multiply, (, 2, ), ., subtract, (, 1, ), ;]
[=, q0q0, ., add, (, q1q1, ), ., multiply, (, 2, ), ., subtract, (, 1, ), ;, m, []
[add, (, q1q1, ), ., multiply, (, 2, ), ., subtract, (, 1, ), ;, m, [, 1, ], []
[), ., multiply, (, 2, ), ., subtract, (, 1, ), ;, m, [, 1, ], [, 0, ], =]
[), ., multiply, (, 2, ), ., subtract, (, 1, ), ;, m, [, 1, ], [, 0, ], =]
[), ., multiply, (, 2, ), ., subtract, (, 1, ), ;, m, [, 1, ], [, 0, ], =]
[2, ), ., subtract, (, 1, ), ;, m, [, 1, ], [, 0, ], =, q1q2, ., subtract, (]
[1, ), ;, m, [, 1, ], [, 0, ], =, q1q2, ., subtract, (, q0q3, ), ., multiply, (]
[m, [, 1, ], [, 0, ], =, q1q2, ., subtract, (, q0q3, ), ., multiply, (, 2, ), ;]
[m, [, 1, ], [, 0, ], =, q1q2, ., subtract, (, q0q3, ), ., multiply, (, 2, ), ;]
[m, [, 1, ], [, 0, ], =, q1q2, ., subtract, (, q0q3, ), ., multiply, (, 2, ), ;]
[1, ], [, 0, ], =, q1q2, ., subtract, (, q0q3, ), ., multiply, (, 2, ), ;, m, []
[0, ], =, q1q2, ., subtract, (, q0q3, ), ., multiply, (, 2, ), ;, m, [, 2, ], []
[q1q2, ., subtract, (, q0q3, ), ., multiply, (, 2, ), ;, m, [, 2, ], [, 0, ], =]
[q1q2, ., subtract, (, q0q3, ), ., multiply, (, 2, ), ;, m, [, 2, ], [, 0, ], =]
[q1q2, ., subtract, (, q0q3, ), ., multiply, (, 2, ), ;, m, [, 2, ], [, 0, ], =]
[q0q3, ), ., multiply, (, 2, ), ;, m, [, 2, ], [, 0, ], =, q1q3, ., add, (]
[2, ), ;, m, [, 2, ], [, 0, ], =, q1q3, ., add, (, q0q2, ), ., multiply, (]
[m, [, 2, ], [, 0, ], =, q1q3, ., add, (, q0q2, ), ., multiply, (, 2, ), ;]
[m, [, 2, ], [, 0, ], =, q1q3, ., add, (, q0q2, ), ., multiply, (, 2, ), ;]
[m, [, 2, ], [, 0, ], =, q1q3, ., add, (, q0q2, ), ., multiply, (, 2, ), ;]
[2, ], [, 0, ], =, q1q3, ., add, (, q0q2, ), ., multiply, (, 2, ), ;, m, []
[0, ], =, q1q3, ., add, (, q0q2, ), ., multiply, (, 2, ), ;, m, [, 0, ], []
[q1q3, ., add, (, q0q2, ), ., multiply, (, 2, ), ;, m, [, 0, ], [, 1, ], =]
[q1q3, ., add, (, q0q2, ), ., multiply, (, 2, ), ;, m, [, 0, ], [, 1, ], =]
[q1q3, ., add, (, q0q2, ), ., multiply, (, 2, ), ;, m, [, 0, ], [, 1, ], =]
[q0q2, ), ., multiply, (, 2, ), ;, m, [, 0, ], [, 1, ], =, q1q2, ., add, (]
[2, ), ;, m, [, 0, ], [, 1, ], =, q1q2, ., add, (, q0q3, ), ., multiply, (]
[m, [, 0, ], [, 1, ], =, q1q2, ., add, (, q0q3, ), ., multiply, (, 2, ), ;]
[m, [, 0, ], [, 1, ], =, q1q2, ., add, (, q0q3, ), ., multiply, (, 2, ), ;]
[m, [, 0, ], [, 1, ], =, q1q2, ., add, (, q0q3, ), ., multiply, (, 2, ), ;]
[0, ], [, 1, ], =, q1q2, ., add, (, q0q3, ), ., multiply, (, 2, ), ;, m, []
[1, ], =, q1q2, ., add, (, q0q3, ), ., multiply, (, 2, ), ;, m, [, 1, ], []
[q1q2, ., add, (, q0q3, ), ., multiply, (, 2, ), ;, m, [, 1, ], [, 1, ], =]
[q1q2, ., add, (, q0q3, ), ., multiply, (, 2, ), ;, m, [, 1, ], [, 1, ], =]
[q1q2, ., add, (, q0q3, ), ., multiply, (, 2, ), ;, m, [, 1, ], [, 1, ], =]
[q1q2, ., add, (, q0q3, ), ., multiply, (, 2, ), ;, m, [, 1, ], [, 1, ], =]
[q0q3, ), ., multiply, (, 2, ), ;, m, [, 1, ], [, 1, ], =, q0q0, ., add, (]
[2, ), ;, m, [, 1, ], [, 1, ], =, q0q0, ., add, (, q2q2, ), ., multiply, (]
[1, ], [, 1, ], =, q0q0, ., add, (, q2q2, ), ., multiply, (, 2, ), ., subtract, (]
[1, ], =, q0q0, ., add, (, q2q2, ), ., multiply, (, 2, ), ., subtract, (, 1, ), ;]
[1, ], =, q0q0, ., add, (, q2q2, ), ., multiply, (, 2, ), ., subtract, (, 1, ), ;]
[1, ], =, q0q0, ., add, (, q2q2, ), ., multiply, (, 2, ), ., subtract, (, 1, ), ;]
[=, q0q0, ., add, (, q2q2, ), ., multiply, (, 2, ), ., subtract, (, 1, ), ;, m, []
[add, (, q2q2, ), ., multiply, (, 2, ), ., subtract, (, 1, ), ;, m, [, 2, ], []
[), ., multiply, (, 2, ), ., subtract, (, 1, ), ;, m, [, 2, ], [, 1, ], =]
[), ., multiply, (, 2, ), ., subtract, (, 1, ), ;, m, [, 2, ], [, 1, ], =]
[), ., multiply, (, 2, ), ., subtract, (, 1, ), ;, m, [, 2, ], [, 1, ], =]
[2, ), ., subtract, (, 1, ), ;, m, [, 2, ], [, 1, ], =, q2q3, ., subtract, (]
[1, ), ;, m, [, 2, ], [, 1, ], =, q2q3, ., subtract, (, q0q1, ), ., multiply, (]
[m, [, 2, ], [, 1, ], =, q2q3, ., subtract, (, q0q1, ), ., multiply, (, 2, ), ;]
[m, [, 2, ], [, 1, ], =, q2q3, ., subtract, (, q0q1, ), ., multiply, (, 2, ), ;]
[m, [, 2, ], [, 1, ], =, q2q3, ., subtract, (, q0q1, ), ., multiply, (, 2, ), ;]
[2, ], [, 1, ], =, q2q3, ., subtract, (, q0q1, ), ., multiply, (, 2, ), ;, m, []
[1, ], =, q2q3, ., subtract, (, q0q1, ), ., multiply, (, 2, ), ;, m, [, 0, ], []
[q2q3, ., subtract, (, q0q1, ), ., multiply, (, 2, ), ;, m, [, 0, ], [, 2, ], =]
[q2q3, ., subtract, (, q0q1, ), ., multiply, (, 2, ), ;, m, [, 0, ], [, 2, ], =]
[q2q3, ., subtract, (, q0q1, ), ., multiply, (, 2, ), ;, m, [, 0, ], [, 2, ], =]
[q0q1, ), ., multiply, (, 2, ), ;, m, [, 0, ], [, 2, ], =, q1q3, ., subtract, (]
[2, ), ;, m, [, 0, ], [, 2, ], =, q1q3, ., subtract, (, q0q2, ), ., multiply, (]
[m, [, 0, ], [, 2, ], =, q1q3, ., subtract, (, q0q2, ), ., multiply, (, 2, ), ;]
[m, [, 0, ], [, 2, ], =, q1q3, ., subtract, (, q0q2, ), ., multiply, (, 2, ), ;]
[m, [, 0, ], [, 2, ], =, q1q3, ., subtract, (, q0q2, ), ., multiply, (, 2, ), ;]
[0, ], [, 2, ], =, q1q3, ., subtract, (, q0q2, ), ., multiply, (, 2, ), ;, m, []
[2, ], =, q1q3, ., subtract, (, q0q2, ), ., multiply, (, 2, ), ;, m, [, 1, ], []
[q1q3, ., subtract, (, q0q2, ), ., multiply, (, 2, ), ;, m, [, 1, ], [, 2, ], =]
[q1q3, ., subtract, (, q0q2, ), ., multiply, (, 2, ), ;, m, [, 1, ], [, 2, ], =]
[q1q3, ., subtract, (, q0q2, ), ., multiply, (, 2, ), ;, m, [, 1, ], [, 2, ], =]
[q0q2, ), ., multiply, (, 2, ), ;, m, [, 1, ], [, 2, ], =, q2q3, ., add, (]
[2, ), ;, m, [, 1, ], [, 2, ], =, q2q3, ., add, (, q0q1, ), ., multiply, (]
[m, [, 1, ], [, 2, ], =, q2q3, ., add, (, q0q1, ), ., multiply, (, 2, ), ;]
[m, [, 1, ], [, 2, ], =, q2q3, ., add, (, q0q1, ), ., multiply, (, 2, ), ;]
[m, [, 1, ], [, 2, ], =, q2q3, ., add, (, q0q1, ), ., multiply, (, 2, ), ;]
[1, ], [, 2, ], =, q2q3, ., add, (, q0q1, ), ., multiply, (, 2, ), ;, m, []
[2, ], =, q2q3, ., add, (, q0q1, ), ., multiply, (, 2, ), ;, m, [, 2, ], []
[q2q3, ., add, (, q0q1, ), ., multiply, (, 2, ), ;, m, [, 2, ], [, 2, ], =]
[q2q3, ., add, (, q0q1, ), ., multiply, (, 2, ), ;, m, [, 2, ], [, 2, ], =]
[q2q3, ., add, (, q0q1, ), ., multiply, (, 2, ), ;, m, [, 2, ], [, 2, ], =]
[q2q3, ., add, (, q0q1, ), ., multiply, (, 2, ), ;, m, [, 2, ], [, 2, ], =]
[q0q1, ), ., multiply, (, 2, ), ;, m, [, 2, ], [, 2, ], =, q0q0, ., add, (]
[2, ), ;, m, [, 2, ], [, 2, ], =, q0q0, ., add, (, q3q3, ), ., multiply, (]
[2, ], [, 2, ], =, q0q0, ., add, (, q3q3, ), ., multiply, (, 2, ), ., subtract, (]
[], =, q0q0, ., add, (, q3q3, ), ., multiply, (, 2, ), ., subtract, (, 1, ), ;, return]
[(, 2, ), ., subtract, (, 1, ), ;, return, m, ;, }, public, Rotation, toRotation, (, ), {, return]
[., subtract, (, 1, ), ;, return, m, ;, }, public, Rotation, toRotation, (, ), {, return, new, Rotation, (]
[., subtract, (, 1, ), ;, return, m, ;, }, public, Rotation, toRotation, (, ), {, return, new, Rotation, (]
[return, m, ;, }, public, Rotation, toRotation, (, ), {, return, new, Rotation, (, q0, ., getReal, (, ), ,]
[return, m, ;, }, public, Rotation, toRotation, (, ), {, return, new, Rotation, (, q0, ., getReal, (, ), ,]
[toRotation, (, ), {, return, new, Rotation, (, q0, ., getReal, (, ), ,, q1, ., getReal, (, ), ,]
[toRotation, (, ), {, return, new, Rotation, (, q0, ., getReal, (, ), ,, q1, ., getReal, (, ), ,]
[Rotation, (, q0, ., getReal, (, ), ,, q1, ., getReal, (, ), ,, q2, ., getReal, (, ), ,]
[Rotation, (, q0, ., getReal, (, ), ,, q1, ., getReal, (, ), ,, q2, ., getReal, (, ), ,]
[), ,, q1, ., getReal, (, ), ,, q2, ., getReal, (, ), ,, q3, ., getReal, (, ), ,]
[}, public, FieldVector3D, <, T, >, applyTo, (, final, FieldVector3D, <, T, >, u, ), {, final, T, x, =]
[}, public, FieldVector3D, <, T, >, applyTo, (, final, FieldVector3D, <, T, >, u, ), {, final, T, x, =]
[<, T, >, u, ), {, final, T, x, =, u, ., getX, (, ), ;, final, T, y, =]
[<, T, >, u, ), {, final, T, x, =, u, ., getX, (, ), ;, final, T, y, =]
[u, ., getX, (, ), ;, final, T, y, =, u, ., getY, (, ), ;, final, T, z, =]
[u, ., getX, (, ), ;, final, T, y, =, u, ., getY, (, ), ;, final, T, z, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =, q1, ., multiply, (]
[=, u, ., getZ, (, ), ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[=, u, ., getZ, (, ), ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[(, ), ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[(, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (]
[(, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, return]
[), ), ., add, (, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ., add, (, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ., add, (, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ., add, (, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ., add, (, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (]
[(, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (]
[(, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (]
[(, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (]
[(, z, ), ), ;, return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (, x, ., multiply, (]
[return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (, x, ., multiply, (, q0, ), ., subtract, (]
[return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (, x, ., multiply, (, q0, ), ., subtract, (]
[return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (, x, ., multiply, (, q0, ), ., subtract, (]
[T, >, (, q0, ., multiply, (, x, ., multiply, (, q0, ), ., subtract, (, q2, ., multiply, (]
[multiply, (, x, ., multiply, (, q0, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, x, ., multiply, (, q0, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, q0, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (, q3, ., multiply, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, q0, ., multiply, (]
[multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, q0, ., multiply, (]
[multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, q0, ., multiply, (]
[), ., multiply, (, 2, ), ., subtract, (, x, ), ,, q0, ., multiply, (, y, ., multiply, (]
[), ., subtract, (, x, ), ,, q0, ., multiply, (, y, ., multiply, (, q0, ), ., subtract, (]
[), ., subtract, (, x, ), ,, q0, ., multiply, (, y, ., multiply, (, q0, ), ., subtract, (]
[), ., subtract, (, x, ), ,, q0, ., multiply, (, y, ., multiply, (, q0, ), ., subtract, (]
[x, ), ,, q0, ., multiply, (, y, ., multiply, (, q0, ), ., subtract, (, q3, ., multiply, (]
[multiply, (, y, ., multiply, (, q0, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, y, ., multiply, (, q0, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, q0, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (, q1, ., multiply, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, q0, ., multiply, (]
[multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, q0, ., multiply, (]
[multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, q0, ., multiply, (]
[), ., multiply, (, 2, ), ., subtract, (, y, ), ,, q0, ., multiply, (, z, ., multiply, (]
[), ., subtract, (, y, ), ,, q0, ., multiply, (, z, ., multiply, (, q0, ), ., subtract, (]
[), ., subtract, (, y, ), ,, q0, ., multiply, (, z, ., multiply, (, q0, ), ., subtract, (]
[), ., subtract, (, y, ), ,, q0, ., multiply, (, z, ., multiply, (, q0, ), ., subtract, (]
[y, ), ,, q0, ., multiply, (, z, ., multiply, (, q0, ), ., subtract, (, q1, ., multiply, (]
[multiply, (, z, ., multiply, (, q0, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, z, ., multiply, (, q0, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, q0, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (, q2, ., multiply, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (, 2, ), ., subtract, (]
[), ), ;, }, public, FieldVector3D, <, T, >, applyTo, (, final, Vector3D, u, ), {, final, double, x, =]
[), ), ;, }, public, FieldVector3D, <, T, >, applyTo, (, final, Vector3D, u, ), {, final, double, x, =]
[(, final, Vector3D, u, ), {, final, double, x, =, u, ., getX, (, ), ;, final, double, y, =]
[(, final, Vector3D, u, ), {, final, double, x, =, u, ., getX, (, ), ;, final, double, y, =]
[u, ., getX, (, ), ;, final, double, y, =, u, ., getY, (, ), ;, final, double, z, =]
[u, ., getX, (, ), ;, final, double, y, =, u, ., getY, (, ), ;, final, double, z, =]
[u, ., getY, (, ), ;, final, double, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, double, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, double, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, double, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[), ;, final, double, z, =, u, ., getZ, (, ), ;, final, T, s, =, q1, ., multiply, (]
[=, u, ., getZ, (, ), ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[=, u, ., getZ, (, ), ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[(, ), ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[(, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (]
[(, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, return]
[), ), ., add, (, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ., add, (, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ., add, (, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ., add, (, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ., add, (, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (]
[(, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (]
[(, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (]
[(, q3, ., multiply, (, z, ), ), ;, return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (]
[(, z, ), ), ;, return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (, q0, ., multiply, (]
[return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (, q0, ., multiply, (, x, ), ., subtract, (]
[return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (, q0, ., multiply, (, x, ), ., subtract, (]
[return, new, FieldVector3D, <, T, >, (, q0, ., multiply, (, q0, ., multiply, (, x, ), ., subtract, (]
[T, >, (, q0, ., multiply, (, q0, ., multiply, (, x, ), ., subtract, (, q2, ., multiply, (]
[multiply, (, q0, ., multiply, (, x, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, q0, ., multiply, (, x, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, x, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (, q3, ., multiply, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, q0, ., multiply, (]
[multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, q0, ., multiply, (]
[multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, q0, ., multiply, (]
[), ., multiply, (, 2, ), ., subtract, (, x, ), ,, q0, ., multiply, (, q0, ., multiply, (]
[), ., subtract, (, x, ), ,, q0, ., multiply, (, q0, ., multiply, (, y, ), ., subtract, (]
[), ., subtract, (, x, ), ,, q0, ., multiply, (, q0, ., multiply, (, y, ), ., subtract, (]
[), ., subtract, (, x, ), ,, q0, ., multiply, (, q0, ., multiply, (, y, ), ., subtract, (]
[x, ), ,, q0, ., multiply, (, q0, ., multiply, (, y, ), ., subtract, (, q3, ., multiply, (]
[multiply, (, q0, ., multiply, (, y, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, q0, ., multiply, (, y, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, y, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (, q1, ., multiply, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, q0, ., multiply, (]
[multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, q0, ., multiply, (]
[multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, q0, ., multiply, (]
[), ., multiply, (, 2, ), ., subtract, (, y, ), ,, q0, ., multiply, (, q0, ., multiply, (]
[), ., subtract, (, y, ), ,, q0, ., multiply, (, q0, ., multiply, (, z, ), ., subtract, (]
[), ., subtract, (, y, ), ,, q0, ., multiply, (, q0, ., multiply, (, z, ), ., subtract, (]
[), ., subtract, (, y, ), ,, q0, ., multiply, (, q0, ., multiply, (, z, ), ., subtract, (]
[y, ), ,, q0, ., multiply, (, q0, ., multiply, (, z, ), ., subtract, (, q1, ., multiply, (]
[multiply, (, q0, ., multiply, (, z, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, q0, ., multiply, (, z, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, z, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (, q2, ., multiply, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (, 2, ), ., subtract, (]
[void, applyTo, (, final, T, [, ], in, ,, final, T, [, ], out, ), {, final, T, x, =]
[void, applyTo, (, final, T, [, ], in, ,, final, T, [, ], out, ), {, final, T, x, =]
[(, final, T, [, ], in, ,, final, T, [, ], out, ), {, final, T, x, =, in, []
[final, T, [, ], out, ), {, final, T, x, =, in, [, 0, ], ;, final, T, y, =]
[final, T, [, ], out, ), {, final, T, x, =, in, [, 0, ], ;, final, T, y, =]
[[, ], out, ), {, final, T, x, =, in, [, 0, ], ;, final, T, y, =, in, []
[x, =, in, [, 0, ], ;, final, T, y, =, in, [, 1, ], ;, final, T, z, =]
[x, =, in, [, 0, ], ;, final, T, y, =, in, [, 1, ], ;, final, T, z, =]
[in, [, 0, ], ;, final, T, y, =, in, [, 1, ], ;, final, T, z, =, in, []
[y, =, in, [, 1, ], ;, final, T, z, =, in, [, 2, ], ;, final, T, s, =]
[y, =, in, [, 1, ], ;, final, T, z, =, in, [, 2, ], ;, final, T, s, =]
[y, =, in, [, 1, ], ;, final, T, z, =, in, [, 2, ], ;, final, T, s, =]
[y, =, in, [, 1, ], ;, final, T, z, =, in, [, 2, ], ;, final, T, s, =]
[1, ], ;, final, T, z, =, in, [, 2, ], ;, final, T, s, =, q1, ., multiply, (]
[z, =, in, [, 2, ], ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[z, =, in, [, 2, ], ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[2, ], ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[(, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (]
[add, (, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;]
[add, (, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;]
[q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, out, []
[(, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =]
[(, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =]
[(, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =]
[(, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =]
[(, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =]
[., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =, q0, ., multiply, (]
[., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =, q0, ., multiply, (]
[., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =, q0, ., multiply, (]
[., multiply, (, z, ), ), ;, out, [, 0, ], =, q0, ., multiply, (, x, ., multiply, (]
[), ;, out, [, 0, ], =, q0, ., multiply, (, x, ., multiply, (, q0, ), ., subtract, (]
[), ;, out, [, 0, ], =, q0, ., multiply, (, x, ., multiply, (, q0, ), ., subtract, (]
[), ;, out, [, 0, ], =, q0, ., multiply, (, x, ., multiply, (, q0, ), ., subtract, (]
[0, ], =, q0, ., multiply, (, x, ., multiply, (, q0, ), ., subtract, (, q2, ., multiply, (]
[multiply, (, x, ., multiply, (, q0, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, x, ., multiply, (, q0, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, q0, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (, q3, ., multiply, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;]
[s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, []
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =, q0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =, q0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =, q0, ., multiply, (]
[), ., subtract, (, x, ), ;, out, [, 1, ], =, q0, ., multiply, (, y, ., multiply, (]
[), ;, out, [, 1, ], =, q0, ., multiply, (, y, ., multiply, (, q0, ), ., subtract, (]
[), ;, out, [, 1, ], =, q0, ., multiply, (, y, ., multiply, (, q0, ), ., subtract, (]
[), ;, out, [, 1, ], =, q0, ., multiply, (, y, ., multiply, (, q0, ), ., subtract, (]
[1, ], =, q0, ., multiply, (, y, ., multiply, (, q0, ), ., subtract, (, q3, ., multiply, (]
[multiply, (, y, ., multiply, (, q0, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, y, ., multiply, (, q0, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, q0, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (, q1, ., multiply, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;]
[s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, []
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =, q0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =, q0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =, q0, ., multiply, (]
[), ., subtract, (, y, ), ;, out, [, 2, ], =, q0, ., multiply, (, z, ., multiply, (]
[), ;, out, [, 2, ], =, q0, ., multiply, (, z, ., multiply, (, q0, ), ., subtract, (]
[), ;, out, [, 2, ], =, q0, ., multiply, (, z, ., multiply, (, q0, ), ., subtract, (]
[), ;, out, [, 2, ], =, q0, ., multiply, (, z, ., multiply, (, q0, ), ., subtract, (]
[2, ], =, q0, ., multiply, (, z, ., multiply, (, q0, ), ., subtract, (, q1, ., multiply, (]
[multiply, (, z, ., multiply, (, q0, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, z, ., multiply, (, q0, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, q0, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (, q2, ., multiply, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (, 2, ), ., subtract, (]
[void, applyTo, (, final, double, [, ], in, ,, final, T, [, ], out, ), {, final, double, x, =]
[void, applyTo, (, final, double, [, ], in, ,, final, T, [, ], out, ), {, final, double, x, =]
[(, final, double, [, ], in, ,, final, T, [, ], out, ), {, final, double, x, =, in, []
[final, T, [, ], out, ), {, final, double, x, =, in, [, 0, ], ;, final, double, y, =]
[final, T, [, ], out, ), {, final, double, x, =, in, [, 0, ], ;, final, double, y, =]
[[, ], out, ), {, final, double, x, =, in, [, 0, ], ;, final, double, y, =, in, []
[x, =, in, [, 0, ], ;, final, double, y, =, in, [, 1, ], ;, final, double, z, =]
[x, =, in, [, 0, ], ;, final, double, y, =, in, [, 1, ], ;, final, double, z, =]
[in, [, 0, ], ;, final, double, y, =, in, [, 1, ], ;, final, double, z, =, in, []
[y, =, in, [, 1, ], ;, final, double, z, =, in, [, 2, ], ;, final, T, s, =]
[y, =, in, [, 1, ], ;, final, double, z, =, in, [, 2, ], ;, final, T, s, =]
[y, =, in, [, 1, ], ;, final, double, z, =, in, [, 2, ], ;, final, T, s, =]
[y, =, in, [, 1, ], ;, final, double, z, =, in, [, 2, ], ;, final, T, s, =]
[1, ], ;, final, double, z, =, in, [, 2, ], ;, final, T, s, =, q1, ., multiply, (]
[z, =, in, [, 2, ], ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[z, =, in, [, 2, ], ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[2, ], ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[(, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (]
[add, (, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;]
[add, (, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;]
[q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, out, []
[(, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =]
[(, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =]
[(, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =]
[(, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =]
[(, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =]
[., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =, q0, ., multiply, (]
[., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =, q0, ., multiply, (]
[., add, (, q3, ., multiply, (, z, ), ), ;, out, [, 0, ], =, q0, ., multiply, (]
[., multiply, (, z, ), ), ;, out, [, 0, ], =, q0, ., multiply, (, q0, ., multiply, (]
[), ;, out, [, 0, ], =, q0, ., multiply, (, q0, ., multiply, (, x, ), ., subtract, (]
[), ;, out, [, 0, ], =, q0, ., multiply, (, q0, ., multiply, (, x, ), ., subtract, (]
[), ;, out, [, 0, ], =, q0, ., multiply, (, q0, ., multiply, (, x, ), ., subtract, (]
[0, ], =, q0, ., multiply, (, q0, ., multiply, (, x, ), ., subtract, (, q2, ., multiply, (]
[multiply, (, q0, ., multiply, (, x, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, q0, ., multiply, (, x, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, x, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (, q3, ., multiply, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;]
[s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, []
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =, q0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =, q0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =, q0, ., multiply, (]
[), ., subtract, (, x, ), ;, out, [, 1, ], =, q0, ., multiply, (, q0, ., multiply, (]
[), ;, out, [, 1, ], =, q0, ., multiply, (, q0, ., multiply, (, y, ), ., subtract, (]
[), ;, out, [, 1, ], =, q0, ., multiply, (, q0, ., multiply, (, y, ), ., subtract, (]
[), ;, out, [, 1, ], =, q0, ., multiply, (, q0, ., multiply, (, y, ), ., subtract, (]
[1, ], =, q0, ., multiply, (, q0, ., multiply, (, y, ), ., subtract, (, q3, ., multiply, (]
[multiply, (, q0, ., multiply, (, y, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, q0, ., multiply, (, y, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, y, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (, q1, ., multiply, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;]
[s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, []
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =, q0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =, q0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =, q0, ., multiply, (]
[), ., subtract, (, y, ), ;, out, [, 2, ], =, q0, ., multiply, (, q0, ., multiply, (]
[), ;, out, [, 2, ], =, q0, ., multiply, (, q0, ., multiply, (, z, ), ., subtract, (]
[), ;, out, [, 2, ], =, q0, ., multiply, (, q0, ., multiply, (, z, ), ., subtract, (]
[), ;, out, [, 2, ], =, q0, ., multiply, (, q0, ., multiply, (, z, ), ., subtract, (]
[2, ], =, q0, ., multiply, (, q0, ., multiply, (, z, ), ., subtract, (, q1, ., multiply, (]
[multiply, (, q0, ., multiply, (, z, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, q0, ., multiply, (, z, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, z, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (, q2, ., multiply, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (, 2, ), ., subtract, (]
[T, >, applyTo, (, final, Rotation, r, ,, final, FieldVector3D, <, T, >, u, ), {, final, T, x, =]
[T, >, applyTo, (, final, Rotation, r, ,, final, FieldVector3D, <, T, >, u, ), {, final, T, x, =]
[<, T, >, u, ), {, final, T, x, =, u, ., getX, (, ), ;, final, T, y, =]
[<, T, >, u, ), {, final, T, x, =, u, ., getX, (, ), ;, final, T, y, =]
[u, ., getX, (, ), ;, final, T, y, =, u, ., getY, (, ), ;, final, T, z, =]
[u, ., getX, (, ), ;, final, T, y, =, u, ., getY, (, ), ;, final, T, z, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =, x, ., multiply, (]
[), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =, x, ., multiply, (]
[(, ), ;, final, T, s, =, x, ., multiply, (, r, ., getQ1, (, ), ), ., add, (]
[(, ), ;, final, T, s, =, x, ., multiply, (, r, ., getQ1, (, ), ), ., add, (]
[T, s, =, x, ., multiply, (, r, ., getQ1, (, ), ), ., add, (, y, ., multiply, (]
[T, s, =, x, ., multiply, (, r, ., getQ1, (, ), ), ., add, (, y, ., multiply, (]
[(, ), ), ., add, (, y, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (]
[(, ), ), ., add, (, y, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (]
[add, (, y, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (, z, ., multiply, (]
[add, (, y, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (, z, ., multiply, (]
[(, ), ), ), ., add, (, z, ., multiply, (, r, ., getQ3, (, ), ), ), ;, return]
[(, z, ., multiply, (, r, ., getQ3, (, ), ), ), ;, return, new, FieldVector3D, <, T, >, (]
[(, z, ., multiply, (, r, ., getQ3, (, ), ), ), ;, return, new, FieldVector3D, <, T, >, (]
[(, z, ., multiply, (, r, ., getQ3, (, ), ), ), ;, return, new, FieldVector3D, <, T, >, (]
[(, z, ., multiply, (, r, ., getQ3, (, ), ), ), ;, return, new, FieldVector3D, <, T, >, (]
[(, z, ., multiply, (, r, ., getQ3, (, ), ), ), ;, return, new, FieldVector3D, <, T, >, (]
[(, z, ., multiply, (, r, ., getQ3, (, ), ), ), ;, return, new, FieldVector3D, <, T, >, (]
[(, z, ., multiply, (, r, ., getQ3, (, ), ), ), ;, return, new, FieldVector3D, <, T, >, (]
[(, r, ., getQ3, (, ), ), ), ;, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (]
[(, r, ., getQ3, (, ), ), ), ;, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (]
[return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (]
[return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (]
[return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (]
[T, >, (, x, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (, z, ., multiply, (]
[T, >, (, x, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (, z, ., multiply, (]
[getQ0, (, ), ), ., subtract, (, z, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (]
[getQ0, (, ), ), ., subtract, (, z, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (]
[., subtract, (, z, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (, y, ., multiply, (]
[., subtract, (, z, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (, y, ., multiply, (]
[), ), ., subtract, (, y, ., multiply, (, r, ., getQ3, (, ), ), ), ), ., multiply, (]
[), ), ., subtract, (, y, ., multiply, (, r, ., getQ3, (, ), ), ), ), ., multiply, (]
[r, ., getQ3, (, ), ), ), ), ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[r, ., getQ3, (, ), ), ), ), ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[), ), ), ), ., multiply, (, r, ., getQ0, (, ), ), ., add, (, s, ., multiply, (]
[), ), ), ), ., multiply, (, r, ., getQ0, (, ), ), ., add, (, s, ., multiply, (]
[(, ), ), ., add, (, s, ., multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (]
[(, s, ., multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, y, ., multiply, (]
[getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, y, ., multiply, (]
[), ., subtract, (, x, ), ,, y, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (]
[), ., subtract, (, x, ), ,, y, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (]
[), ., subtract, (, x, ), ,, y, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (]
[x, ), ,, y, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (, x, ., multiply, (]
[x, ), ,, y, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (, x, ., multiply, (]
[getQ0, (, ), ), ., subtract, (, x, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (]
[getQ0, (, ), ), ., subtract, (, x, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (]
[., subtract, (, x, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (, z, ., multiply, (]
[., subtract, (, x, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (, z, ., multiply, (]
[), ), ., subtract, (, z, ., multiply, (, r, ., getQ1, (, ), ), ), ), ., multiply, (]
[), ), ., subtract, (, z, ., multiply, (, r, ., getQ1, (, ), ), ), ), ., multiply, (]
[r, ., getQ1, (, ), ), ), ), ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[r, ., getQ1, (, ), ), ), ), ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[), ), ), ), ., multiply, (, r, ., getQ0, (, ), ), ., add, (, s, ., multiply, (]
[), ), ), ), ., multiply, (, r, ., getQ0, (, ), ), ., add, (, s, ., multiply, (]
[(, ), ), ., add, (, s, ., multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (]
[(, s, ., multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, z, ., multiply, (]
[getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, z, ., multiply, (]
[), ., subtract, (, y, ), ,, z, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (]
[), ., subtract, (, y, ), ,, z, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (]
[), ., subtract, (, y, ), ,, z, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (]
[y, ), ,, z, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (, y, ., multiply, (]
[y, ), ,, z, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (, y, ., multiply, (]
[getQ0, (, ), ), ., subtract, (, y, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (]
[getQ0, (, ), ), ., subtract, (, y, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (]
[., subtract, (, y, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (, x, ., multiply, (]
[., subtract, (, y, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (, x, ., multiply, (]
[), ), ., subtract, (, x, ., multiply, (, r, ., getQ2, (, ), ), ), ), ., multiply, (]
[), ), ., subtract, (, x, ., multiply, (, r, ., getQ2, (, ), ), ), ), ., multiply, (]
[r, ., getQ2, (, ), ), ), ), ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[r, ., getQ2, (, ), ), ), ), ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[), ), ), ), ., multiply, (, r, ., getQ0, (, ), ), ., add, (, s, ., multiply, (]
[), ), ), ), ., multiply, (, r, ., getQ0, (, ), ), ., add, (, s, ., multiply, (]
[(, ), ), ., add, (, s, ., multiply, (, r, ., getQ3, (, ), ), ), ., multiply, (]
[(, s, ., multiply, (, r, ., getQ3, (, ), ), ), ., multiply, (, 2, ), ., subtract, (]
[}, public, FieldVector3D, <, T, >, applyInverseTo, (, final, FieldVector3D, <, T, >, u, ), {, final, T, x, =]
[}, public, FieldVector3D, <, T, >, applyInverseTo, (, final, FieldVector3D, <, T, >, u, ), {, final, T, x, =]
[<, T, >, u, ), {, final, T, x, =, u, ., getX, (, ), ;, final, T, y, =]
[<, T, >, u, ), {, final, T, x, =, u, ., getX, (, ), ;, final, T, y, =]
[u, ., getX, (, ), ;, final, T, y, =, u, ., getY, (, ), ;, final, T, z, =]
[u, ., getX, (, ), ;, final, T, y, =, u, ., getY, (, ), ;, final, T, z, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =, q1, ., multiply, (]
[=, u, ., getZ, (, ), ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[=, u, ., getZ, (, ), ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[(, ), ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[(, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (]
[multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, final, T, m0, =]
[multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, final, T, m0, =]
[(, q3, ., multiply, (, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, return]
[), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (]
[T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (]
[T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (]
[., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (, x, ., multiply, (]
[return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (, x, ., multiply, (, m0, ), ., subtract, (]
[return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (, x, ., multiply, (, m0, ), ., subtract, (]
[return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (, x, ., multiply, (, m0, ), ., subtract, (]
[T, >, (, m0, ., multiply, (, x, ., multiply, (, m0, ), ., subtract, (, q2, ., multiply, (]
[multiply, (, x, ., multiply, (, m0, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, x, ., multiply, (, m0, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, m0, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (, q3, ., multiply, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, m0, ., multiply, (]
[multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, m0, ., multiply, (]
[multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, m0, ., multiply, (]
[), ., multiply, (, 2, ), ., subtract, (, x, ), ,, m0, ., multiply, (, y, ., multiply, (]
[), ., subtract, (, x, ), ,, m0, ., multiply, (, y, ., multiply, (, m0, ), ., subtract, (]
[), ., subtract, (, x, ), ,, m0, ., multiply, (, y, ., multiply, (, m0, ), ., subtract, (]
[), ., subtract, (, x, ), ,, m0, ., multiply, (, y, ., multiply, (, m0, ), ., subtract, (]
[x, ), ,, m0, ., multiply, (, y, ., multiply, (, m0, ), ., subtract, (, q3, ., multiply, (]
[multiply, (, y, ., multiply, (, m0, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, y, ., multiply, (, m0, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, m0, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (, q1, ., multiply, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, m0, ., multiply, (]
[multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, m0, ., multiply, (]
[multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, m0, ., multiply, (]
[), ., multiply, (, 2, ), ., subtract, (, y, ), ,, m0, ., multiply, (, z, ., multiply, (]
[), ., subtract, (, y, ), ,, m0, ., multiply, (, z, ., multiply, (, m0, ), ., subtract, (]
[), ., subtract, (, y, ), ,, m0, ., multiply, (, z, ., multiply, (, m0, ), ., subtract, (]
[), ., subtract, (, y, ), ,, m0, ., multiply, (, z, ., multiply, (, m0, ), ., subtract, (]
[y, ), ,, m0, ., multiply, (, z, ., multiply, (, m0, ), ., subtract, (, q1, ., multiply, (]
[multiply, (, z, ., multiply, (, m0, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, z, ., multiply, (, m0, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, m0, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (, q2, ., multiply, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (, 2, ), ., subtract, (]
[), ), ;, }, public, FieldVector3D, <, T, >, applyInverseTo, (, final, Vector3D, u, ), {, final, double, x, =]
[), ), ;, }, public, FieldVector3D, <, T, >, applyInverseTo, (, final, Vector3D, u, ), {, final, double, x, =]
[(, final, Vector3D, u, ), {, final, double, x, =, u, ., getX, (, ), ;, final, double, y, =]
[(, final, Vector3D, u, ), {, final, double, x, =, u, ., getX, (, ), ;, final, double, y, =]
[u, ., getX, (, ), ;, final, double, y, =, u, ., getY, (, ), ;, final, double, z, =]
[u, ., getX, (, ), ;, final, double, y, =, u, ., getY, (, ), ;, final, double, z, =]
[u, ., getY, (, ), ;, final, double, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, double, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, double, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, double, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[), ;, final, double, z, =, u, ., getZ, (, ), ;, final, T, s, =, q1, ., multiply, (]
[=, u, ., getZ, (, ), ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[=, u, ., getZ, (, ), ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[(, ), ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[(, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (]
[multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, final, T, m0, =]
[multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, final, T, m0, =]
[(, q3, ., multiply, (, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, return]
[), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (]
[T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (]
[T, m0, =, q0, ., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (]
[., negate, (, ), ;, return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (, m0, ., multiply, (]
[return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (, m0, ., multiply, (, x, ), ., subtract, (]
[return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (, m0, ., multiply, (, x, ), ., subtract, (]
[return, new, FieldVector3D, <, T, >, (, m0, ., multiply, (, m0, ., multiply, (, x, ), ., subtract, (]
[T, >, (, m0, ., multiply, (, m0, ., multiply, (, x, ), ., subtract, (, q2, ., multiply, (]
[multiply, (, m0, ., multiply, (, x, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, m0, ., multiply, (, x, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, x, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (, q3, ., multiply, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, m0, ., multiply, (]
[multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, m0, ., multiply, (]
[multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, m0, ., multiply, (]
[), ., multiply, (, 2, ), ., subtract, (, x, ), ,, m0, ., multiply, (, m0, ., multiply, (]
[), ., subtract, (, x, ), ,, m0, ., multiply, (, m0, ., multiply, (, y, ), ., subtract, (]
[), ., subtract, (, x, ), ,, m0, ., multiply, (, m0, ., multiply, (, y, ), ., subtract, (]
[), ., subtract, (, x, ), ,, m0, ., multiply, (, m0, ., multiply, (, y, ), ., subtract, (]
[x, ), ,, m0, ., multiply, (, m0, ., multiply, (, y, ), ., subtract, (, q3, ., multiply, (]
[multiply, (, m0, ., multiply, (, y, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, m0, ., multiply, (, y, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, y, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (, q1, ., multiply, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, m0, ., multiply, (]
[multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, m0, ., multiply, (]
[multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, m0, ., multiply, (]
[), ., multiply, (, 2, ), ., subtract, (, y, ), ,, m0, ., multiply, (, m0, ., multiply, (]
[), ., subtract, (, y, ), ,, m0, ., multiply, (, m0, ., multiply, (, z, ), ., subtract, (]
[), ., subtract, (, y, ), ,, m0, ., multiply, (, m0, ., multiply, (, z, ), ., subtract, (]
[), ., subtract, (, y, ), ,, m0, ., multiply, (, m0, ., multiply, (, z, ), ., subtract, (]
[y, ), ,, m0, ., multiply, (, m0, ., multiply, (, z, ), ., subtract, (, q1, ., multiply, (]
[multiply, (, m0, ., multiply, (, z, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, m0, ., multiply, (, z, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, z, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (, q2, ., multiply, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (, 2, ), ., subtract, (]
[void, applyInverseTo, (, final, T, [, ], in, ,, final, T, [, ], out, ), {, final, T, x, =]
[void, applyInverseTo, (, final, T, [, ], in, ,, final, T, [, ], out, ), {, final, T, x, =]
[(, final, T, [, ], in, ,, final, T, [, ], out, ), {, final, T, x, =, in, []
[final, T, [, ], out, ), {, final, T, x, =, in, [, 0, ], ;, final, T, y, =]
[final, T, [, ], out, ), {, final, T, x, =, in, [, 0, ], ;, final, T, y, =]
[[, ], out, ), {, final, T, x, =, in, [, 0, ], ;, final, T, y, =, in, []
[x, =, in, [, 0, ], ;, final, T, y, =, in, [, 1, ], ;, final, T, z, =]
[x, =, in, [, 0, ], ;, final, T, y, =, in, [, 1, ], ;, final, T, z, =]
[in, [, 0, ], ;, final, T, y, =, in, [, 1, ], ;, final, T, z, =, in, []
[y, =, in, [, 1, ], ;, final, T, z, =, in, [, 2, ], ;, final, T, s, =]
[y, =, in, [, 1, ], ;, final, T, z, =, in, [, 2, ], ;, final, T, s, =]
[y, =, in, [, 1, ], ;, final, T, z, =, in, [, 2, ], ;, final, T, s, =]
[y, =, in, [, 1, ], ;, final, T, z, =, in, [, 2, ], ;, final, T, s, =]
[1, ], ;, final, T, z, =, in, [, 2, ], ;, final, T, s, =, q1, ., multiply, (]
[z, =, in, [, 2, ], ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[z, =, in, [, 2, ], ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[2, ], ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[(, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (]
[multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, final, T, m0, =]
[multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, final, T, m0, =]
[add, (, q3, ., multiply, (, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;]
[add, (, q3, ., multiply, (, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;]
[q3, ., multiply, (, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, out, []
[(, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =]
[(, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =]
[(, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =]
[(, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =]
[(, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =]
[;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =, m0, ., multiply, (]
[;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =, m0, ., multiply, (]
[;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =, m0, ., multiply, (]
[=, q0, ., negate, (, ), ;, out, [, 0, ], =, m0, ., multiply, (, x, ., multiply, (]
[), ;, out, [, 0, ], =, m0, ., multiply, (, x, ., multiply, (, m0, ), ., subtract, (]
[), ;, out, [, 0, ], =, m0, ., multiply, (, x, ., multiply, (, m0, ), ., subtract, (]
[), ;, out, [, 0, ], =, m0, ., multiply, (, x, ., multiply, (, m0, ), ., subtract, (]
[0, ], =, m0, ., multiply, (, x, ., multiply, (, m0, ), ., subtract, (, q2, ., multiply, (]
[multiply, (, x, ., multiply, (, m0, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, x, ., multiply, (, m0, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, m0, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (, q3, ., multiply, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;]
[s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, []
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =, m0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =, m0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =, m0, ., multiply, (]
[), ., subtract, (, x, ), ;, out, [, 1, ], =, m0, ., multiply, (, y, ., multiply, (]
[), ;, out, [, 1, ], =, m0, ., multiply, (, y, ., multiply, (, m0, ), ., subtract, (]
[), ;, out, [, 1, ], =, m0, ., multiply, (, y, ., multiply, (, m0, ), ., subtract, (]
[), ;, out, [, 1, ], =, m0, ., multiply, (, y, ., multiply, (, m0, ), ., subtract, (]
[1, ], =, m0, ., multiply, (, y, ., multiply, (, m0, ), ., subtract, (, q3, ., multiply, (]
[multiply, (, y, ., multiply, (, m0, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, y, ., multiply, (, m0, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, m0, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (, q1, ., multiply, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;]
[s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, []
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =, m0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =, m0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =, m0, ., multiply, (]
[), ., subtract, (, y, ), ;, out, [, 2, ], =, m0, ., multiply, (, z, ., multiply, (]
[), ;, out, [, 2, ], =, m0, ., multiply, (, z, ., multiply, (, m0, ), ., subtract, (]
[), ;, out, [, 2, ], =, m0, ., multiply, (, z, ., multiply, (, m0, ), ., subtract, (]
[), ;, out, [, 2, ], =, m0, ., multiply, (, z, ., multiply, (, m0, ), ., subtract, (]
[2, ], =, m0, ., multiply, (, z, ., multiply, (, m0, ), ., subtract, (, q1, ., multiply, (]
[multiply, (, z, ., multiply, (, m0, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, z, ., multiply, (, m0, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, m0, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (, q2, ., multiply, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (, 2, ), ., subtract, (]
[void, applyInverseTo, (, final, double, [, ], in, ,, final, T, [, ], out, ), {, final, double, x, =]
[void, applyInverseTo, (, final, double, [, ], in, ,, final, T, [, ], out, ), {, final, double, x, =]
[(, final, double, [, ], in, ,, final, T, [, ], out, ), {, final, double, x, =, in, []
[final, T, [, ], out, ), {, final, double, x, =, in, [, 0, ], ;, final, double, y, =]
[final, T, [, ], out, ), {, final, double, x, =, in, [, 0, ], ;, final, double, y, =]
[[, ], out, ), {, final, double, x, =, in, [, 0, ], ;, final, double, y, =, in, []
[x, =, in, [, 0, ], ;, final, double, y, =, in, [, 1, ], ;, final, double, z, =]
[x, =, in, [, 0, ], ;, final, double, y, =, in, [, 1, ], ;, final, double, z, =]
[in, [, 0, ], ;, final, double, y, =, in, [, 1, ], ;, final, double, z, =, in, []
[y, =, in, [, 1, ], ;, final, double, z, =, in, [, 2, ], ;, final, T, s, =]
[y, =, in, [, 1, ], ;, final, double, z, =, in, [, 2, ], ;, final, T, s, =]
[y, =, in, [, 1, ], ;, final, double, z, =, in, [, 2, ], ;, final, T, s, =]
[y, =, in, [, 1, ], ;, final, double, z, =, in, [, 2, ], ;, final, T, s, =]
[1, ], ;, final, double, z, =, in, [, 2, ], ;, final, T, s, =, q1, ., multiply, (]
[z, =, in, [, 2, ], ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[z, =, in, [, 2, ], ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (]
[2, ], ;, final, T, s, =, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[=, q1, ., multiply, (, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (]
[(, x, ), ., add, (, q2, ., multiply, (, y, ), ), ., add, (, q3, ., multiply, (]
[multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, final, T, m0, =]
[multiply, (, y, ), ), ., add, (, q3, ., multiply, (, z, ), ), ;, final, T, m0, =]
[add, (, q3, ., multiply, (, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;]
[add, (, q3, ., multiply, (, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;]
[q3, ., multiply, (, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, out, []
[(, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =]
[(, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =]
[(, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =]
[(, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =]
[(, z, ), ), ;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =]
[;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =, m0, ., multiply, (]
[;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =, m0, ., multiply, (]
[;, final, T, m0, =, q0, ., negate, (, ), ;, out, [, 0, ], =, m0, ., multiply, (]
[=, q0, ., negate, (, ), ;, out, [, 0, ], =, m0, ., multiply, (, m0, ., multiply, (]
[), ;, out, [, 0, ], =, m0, ., multiply, (, m0, ., multiply, (, x, ), ., subtract, (]
[), ;, out, [, 0, ], =, m0, ., multiply, (, m0, ., multiply, (, x, ), ., subtract, (]
[), ;, out, [, 0, ], =, m0, ., multiply, (, m0, ., multiply, (, x, ), ., subtract, (]
[0, ], =, m0, ., multiply, (, m0, ., multiply, (, x, ), ., subtract, (, q2, ., multiply, (]
[multiply, (, m0, ., multiply, (, x, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, m0, ., multiply, (, x, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (]
[multiply, (, x, ), ., subtract, (, q2, ., multiply, (, z, ), ., subtract, (, q3, ., multiply, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[., multiply, (, z, ), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (]
[), ., subtract, (, q3, ., multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, y, ), ), ), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;]
[add, (, s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;]
[s, ., multiply, (, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, []
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[(, q1, ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =]
[., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =, m0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =, m0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, x, ), ;, out, [, 1, ], =, m0, ., multiply, (]
[), ., subtract, (, x, ), ;, out, [, 1, ], =, m0, ., multiply, (, m0, ., multiply, (]
[), ;, out, [, 1, ], =, m0, ., multiply, (, m0, ., multiply, (, y, ), ., subtract, (]
[), ;, out, [, 1, ], =, m0, ., multiply, (, m0, ., multiply, (, y, ), ., subtract, (]
[), ;, out, [, 1, ], =, m0, ., multiply, (, m0, ., multiply, (, y, ), ., subtract, (]
[1, ], =, m0, ., multiply, (, m0, ., multiply, (, y, ), ., subtract, (, q3, ., multiply, (]
[multiply, (, m0, ., multiply, (, y, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, m0, ., multiply, (, y, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (]
[multiply, (, y, ), ., subtract, (, q3, ., multiply, (, x, ), ., subtract, (, q1, ., multiply, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[., multiply, (, x, ), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (]
[), ., subtract, (, q1, ., multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, z, ), ), ), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;]
[add, (, s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;]
[s, ., multiply, (, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, []
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[(, q2, ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =]
[., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =, m0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =, m0, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, y, ), ;, out, [, 2, ], =, m0, ., multiply, (]
[), ., subtract, (, y, ), ;, out, [, 2, ], =, m0, ., multiply, (, m0, ., multiply, (]
[), ;, out, [, 2, ], =, m0, ., multiply, (, m0, ., multiply, (, z, ), ., subtract, (]
[), ;, out, [, 2, ], =, m0, ., multiply, (, m0, ., multiply, (, z, ), ., subtract, (]
[), ;, out, [, 2, ], =, m0, ., multiply, (, m0, ., multiply, (, z, ), ., subtract, (]
[2, ], =, m0, ., multiply, (, m0, ., multiply, (, z, ), ., subtract, (, q1, ., multiply, (]
[multiply, (, m0, ., multiply, (, z, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, m0, ., multiply, (, z, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (]
[multiply, (, z, ), ., subtract, (, q1, ., multiply, (, y, ), ., subtract, (, q2, ., multiply, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[., multiply, (, y, ), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (]
[), ., subtract, (, q2, ., multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (]
[multiply, (, x, ), ), ), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (]
[), ), ., add, (, s, ., multiply, (, q3, ), ), ., multiply, (, 2, ), ., subtract, (]
[T, >, applyInverseTo, (, final, Rotation, r, ,, final, FieldVector3D, <, T, >, u, ), {, final, T, x, =]
[T, >, applyInverseTo, (, final, Rotation, r, ,, final, FieldVector3D, <, T, >, u, ), {, final, T, x, =]
[<, T, >, u, ), {, final, T, x, =, u, ., getX, (, ), ;, final, T, y, =]
[<, T, >, u, ), {, final, T, x, =, u, ., getX, (, ), ;, final, T, y, =]
[u, ., getX, (, ), ;, final, T, y, =, u, ., getY, (, ), ;, final, T, z, =]
[u, ., getX, (, ), ;, final, T, y, =, u, ., getY, (, ), ;, final, T, z, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[u, ., getY, (, ), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =]
[), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =, x, ., multiply, (]
[), ;, final, T, z, =, u, ., getZ, (, ), ;, final, T, s, =, x, ., multiply, (]
[(, ), ;, final, T, s, =, x, ., multiply, (, r, ., getQ1, (, ), ), ., add, (]
[(, ), ;, final, T, s, =, x, ., multiply, (, r, ., getQ1, (, ), ), ., add, (]
[T, s, =, x, ., multiply, (, r, ., getQ1, (, ), ), ., add, (, y, ., multiply, (]
[T, s, =, x, ., multiply, (, r, ., getQ1, (, ), ), ., add, (, y, ., multiply, (]
[(, ), ), ., add, (, y, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (]
[(, ), ), ., add, (, y, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (]
[add, (, y, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (, z, ., multiply, (]
[add, (, y, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (, z, ., multiply, (]
[), ., add, (, z, ., multiply, (, r, ., getQ3, (, ), ), ), ;, final, double, m0, =]
[., add, (, z, ., multiply, (, r, ., getQ3, (, ), ), ), ;, final, double, m0, =, -]
[., add, (, z, ., multiply, (, r, ., getQ3, (, ), ), ), ;, final, double, m0, =, -]
[r, ., getQ3, (, ), ), ), ;, final, double, m0, =, -, r, ., getQ0, (, ), ;, return]
[), ;, final, double, m0, =, -, r, ., getQ0, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ;, final, double, m0, =, -, r, ., getQ0, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ;, final, double, m0, =, -, r, ., getQ0, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ;, final, double, m0, =, -, r, ., getQ0, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ;, final, double, m0, =, -, r, ., getQ0, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ;, final, double, m0, =, -, r, ., getQ0, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[), ;, final, double, m0, =, -, r, ., getQ0, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[m0, =, -, r, ., getQ0, (, ), ;, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (]
[getQ0, (, ), ;, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, m0, ), ., subtract, (]
[getQ0, (, ), ;, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, m0, ), ., subtract, (]
[getQ0, (, ), ;, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, m0, ), ., subtract, (]
[return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, m0, ), ., subtract, (, z, ., multiply, (]
[return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, m0, ), ., subtract, (, z, ., multiply, (]
[multiply, (, m0, ), ., subtract, (, z, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (]
[multiply, (, m0, ), ., subtract, (, z, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (]
[., subtract, (, z, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (, y, ., multiply, (]
[., subtract, (, z, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (, y, ., multiply, (]
[), ), ., subtract, (, y, ., multiply, (, r, ., getQ3, (, ), ), ), ), ., multiply, (]
[y, ., multiply, (, r, ., getQ3, (, ), ), ), ), ., multiply, (, m0, ), ., add, (]
[y, ., multiply, (, r, ., getQ3, (, ), ), ), ), ., multiply, (, m0, ), ., add, (]
[r, ., getQ3, (, ), ), ), ), ., multiply, (, m0, ), ., add, (, s, ., multiply, (]
[r, ., getQ3, (, ), ), ), ), ., multiply, (, m0, ), ., add, (, s, ., multiply, (]
[(, m0, ), ., add, (, s, ., multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (]
[(, s, ., multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[multiply, (, r, ., getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,]
[getQ1, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, x, ), ,, y, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, x, ), ,, y, ., multiply, (, m0, ), ., subtract, (]
[., multiply, (, 2, ), ., subtract, (, x, ), ,, y, ., multiply, (, m0, ), ., subtract, (]
[., multiply, (, 2, ), ., subtract, (, x, ), ,, y, ., multiply, (, m0, ), ., subtract, (]
[), ., subtract, (, x, ), ,, y, ., multiply, (, m0, ), ., subtract, (, x, ., multiply, (]
[), ., subtract, (, x, ), ,, y, ., multiply, (, m0, ), ., subtract, (, x, ., multiply, (]
[multiply, (, m0, ), ., subtract, (, x, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (]
[multiply, (, m0, ), ., subtract, (, x, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (]
[., subtract, (, x, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (, z, ., multiply, (]
[., subtract, (, x, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (, z, ., multiply, (]
[), ), ., subtract, (, z, ., multiply, (, r, ., getQ1, (, ), ), ), ), ., multiply, (]
[z, ., multiply, (, r, ., getQ1, (, ), ), ), ), ., multiply, (, m0, ), ., add, (]
[z, ., multiply, (, r, ., getQ1, (, ), ), ), ), ., multiply, (, m0, ), ., add, (]
[r, ., getQ1, (, ), ), ), ), ., multiply, (, m0, ), ., add, (, s, ., multiply, (]
[r, ., getQ1, (, ), ), ), ), ., multiply, (, m0, ), ., add, (, s, ., multiply, (]
[(, m0, ), ., add, (, s, ., multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (]
[(, s, ., multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[multiply, (, r, ., getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,]
[getQ2, (, ), ), ), ., multiply, (, 2, ), ., subtract, (, y, ), ,, z, ., multiply, (]
[., multiply, (, 2, ), ., subtract, (, y, ), ,, z, ., multiply, (, m0, ), ., subtract, (]
[., multiply, (, 2, ), ., subtract, (, y, ), ,, z, ., multiply, (, m0, ), ., subtract, (]
[., multiply, (, 2, ), ., subtract, (, y, ), ,, z, ., multiply, (, m0, ), ., subtract, (]
[), ., subtract, (, y, ), ,, z, ., multiply, (, m0, ), ., subtract, (, y, ., multiply, (]
[), ., subtract, (, y, ), ,, z, ., multiply, (, m0, ), ., subtract, (, y, ., multiply, (]
[multiply, (, m0, ), ., subtract, (, y, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (]
[multiply, (, m0, ), ., subtract, (, y, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (]
[., subtract, (, y, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (, x, ., multiply, (]
[., subtract, (, y, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (, x, ., multiply, (]
[), ), ., subtract, (, x, ., multiply, (, r, ., getQ2, (, ), ), ), ), ., multiply, (]
[x, ., multiply, (, r, ., getQ2, (, ), ), ), ), ., multiply, (, m0, ), ., add, (]
[x, ., multiply, (, r, ., getQ2, (, ), ), ), ), ., multiply, (, m0, ), ., add, (]
[r, ., getQ2, (, ), ), ), ), ., multiply, (, m0, ), ., add, (, s, ., multiply, (]
[r, ., getQ2, (, ), ), ), ), ., multiply, (, m0, ), ., add, (, s, ., multiply, (]
[(, m0, ), ., add, (, s, ., multiply, (, r, ., getQ3, (, ), ), ), ., multiply, (]
[(, s, ., multiply, (, r, ., getQ3, (, ), ), ), ., multiply, (, 2, ), ., subtract, (]
[), ), ;, }, public, FieldRotation, <, T, >, applyTo, (, final, FieldRotation, <, T, >, r, ), {, return]
[<, T, >, applyTo, (, final, FieldRotation, <, T, >, r, ), {, return, new, FieldRotation, <, T, >, (]
[<, T, >, applyTo, (, final, FieldRotation, <, T, >, r, ), {, return, new, FieldRotation, <, T, >, (]
[<, T, >, applyTo, (, final, FieldRotation, <, T, >, r, ), {, return, new, FieldRotation, <, T, >, (]
[<, T, >, applyTo, (, final, FieldRotation, <, T, >, r, ), {, return, new, FieldRotation, <, T, >, (]
[FieldRotation, <, T, >, r, ), {, return, new, FieldRotation, <, T, >, (, r, ., q0, ., multiply, (]
[), {, return, new, FieldRotation, <, T, >, (, r, ., q0, ., multiply, (, q0, ), ., subtract, (]
[), {, return, new, FieldRotation, <, T, >, (, r, ., q0, ., multiply, (, q0, ), ., subtract, (]
[), {, return, new, FieldRotation, <, T, >, (, r, ., q0, ., multiply, (, q0, ), ., subtract, (]
[), {, return, new, FieldRotation, <, T, >, (, r, ., q0, ., multiply, (, q0, ), ., subtract, (]
[), {, return, new, FieldRotation, <, T, >, (, r, ., q0, ., multiply, (, q0, ), ., subtract, (]
[T, >, (, r, ., q0, ., multiply, (, q0, ), ., subtract, (, r, ., q1, ., multiply, (]
[q0, ., multiply, (, q0, ), ., subtract, (, r, ., q1, ., multiply, (, q1, ), ., add, (]
[q0, ., multiply, (, q0, ), ., subtract, (, r, ., q1, ., multiply, (, q1, ), ., add, (]
[q0, ., multiply, (, q0, ), ., subtract, (, r, ., q1, ., multiply, (, q1, ), ., add, (]
[., subtract, (, r, ., q1, ., multiply, (, q1, ), ., add, (, r, ., q2, ., multiply, (]
[., multiply, (, q1, ), ., add, (, r, ., q2, ., multiply, (, q2, ), ), ., add, (]
[., multiply, (, q1, ), ., add, (, r, ., q2, ., multiply, (, q2, ), ), ., add, (]
[., multiply, (, q1, ), ., add, (, r, ., q2, ., multiply, (, q2, ), ), ., add, (]
[add, (, r, ., q2, ., multiply, (, q2, ), ), ., add, (, r, ., q3, ., multiply, (]
[., multiply, (, q2, ), ), ., add, (, r, ., q3, ., multiply, (, q3, ), ), ), ,]
[., multiply, (, q2, ), ), ., add, (, r, ., q3, ., multiply, (, q3, ), ), ), ,]
[., multiply, (, q2, ), ), ., add, (, r, ., q3, ., multiply, (, q3, ), ), ), ,]
[., multiply, (, q2, ), ), ., add, (, r, ., q3, ., multiply, (, q3, ), ), ), ,]
[., multiply, (, q2, ), ), ., add, (, r, ., q3, ., multiply, (, q3, ), ), ), ,]
[., add, (, r, ., q3, ., multiply, (, q3, ), ), ), ,, r, ., q1, ., multiply, (]
[q3, ., multiply, (, q3, ), ), ), ,, r, ., q1, ., multiply, (, q0, ), ., add, (]
[q3, ., multiply, (, q3, ), ), ), ,, r, ., q1, ., multiply, (, q0, ), ., add, (]
[q3, ., multiply, (, q3, ), ), ), ,, r, ., q1, ., multiply, (, q0, ), ., add, (]
[), ), ,, r, ., q1, ., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (]
[., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (, q1, ), ), ., add, (]
[., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (, q1, ), ), ., add, (]
[., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (, q1, ), ), ., add, (]
[., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (, q1, ), ), ., add, (]
[add, (, r, ., q0, ., multiply, (, q1, ), ), ., add, (, r, ., q2, ., multiply, (]
[., multiply, (, q1, ), ), ., add, (, r, ., q2, ., multiply, (, q3, ), ., subtract, (]
[., multiply, (, q1, ), ), ., add, (, r, ., q2, ., multiply, (, q3, ), ., subtract, (]
[., multiply, (, q1, ), ), ., add, (, r, ., q2, ., multiply, (, q3, ), ., subtract, (]
[., add, (, r, ., q2, ., multiply, (, q3, ), ., subtract, (, r, ., q3, ., multiply, (]
[q2, ., multiply, (, q3, ), ., subtract, (, r, ., q3, ., multiply, (, q2, ), ), ), ,]
[q2, ., multiply, (, q3, ), ., subtract, (, r, ., q3, ., multiply, (, q2, ), ), ), ,]
[q2, ., multiply, (, q3, ), ., subtract, (, r, ., q3, ., multiply, (, q2, ), ), ), ,]
[q2, ., multiply, (, q3, ), ., subtract, (, r, ., q3, ., multiply, (, q2, ), ), ), ,]
[q2, ., multiply, (, q3, ), ., subtract, (, r, ., q3, ., multiply, (, q2, ), ), ), ,]
[., subtract, (, r, ., q3, ., multiply, (, q2, ), ), ), ,, r, ., q2, ., multiply, (]
[q3, ., multiply, (, q2, ), ), ), ,, r, ., q2, ., multiply, (, q0, ), ., add, (]
[q3, ., multiply, (, q2, ), ), ), ,, r, ., q2, ., multiply, (, q0, ), ., add, (]
[q3, ., multiply, (, q2, ), ), ), ,, r, ., q2, ., multiply, (, q0, ), ., add, (]
[), ), ,, r, ., q2, ., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (]
[., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (, q2, ), ), ., add, (]
[., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (, q2, ), ), ., add, (]
[., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (, q2, ), ), ., add, (]
[., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (, q2, ), ), ., add, (]
[add, (, r, ., q0, ., multiply, (, q2, ), ), ., add, (, r, ., q3, ., multiply, (]
[., multiply, (, q2, ), ), ., add, (, r, ., q3, ., multiply, (, q1, ), ., subtract, (]
[., multiply, (, q2, ), ), ., add, (, r, ., q3, ., multiply, (, q1, ), ., subtract, (]
[., multiply, (, q2, ), ), ., add, (, r, ., q3, ., multiply, (, q1, ), ., subtract, (]
[., add, (, r, ., q3, ., multiply, (, q1, ), ., subtract, (, r, ., q1, ., multiply, (]
[q3, ., multiply, (, q1, ), ., subtract, (, r, ., q1, ., multiply, (, q3, ), ), ), ,]
[q3, ., multiply, (, q1, ), ., subtract, (, r, ., q1, ., multiply, (, q3, ), ), ), ,]
[q3, ., multiply, (, q1, ), ., subtract, (, r, ., q1, ., multiply, (, q3, ), ), ), ,]
[q3, ., multiply, (, q1, ), ., subtract, (, r, ., q1, ., multiply, (, q3, ), ), ), ,]
[q3, ., multiply, (, q1, ), ., subtract, (, r, ., q1, ., multiply, (, q3, ), ), ), ,]
[., subtract, (, r, ., q1, ., multiply, (, q3, ), ), ), ,, r, ., q3, ., multiply, (]
[q1, ., multiply, (, q3, ), ), ), ,, r, ., q3, ., multiply, (, q0, ), ., add, (]
[q1, ., multiply, (, q3, ), ), ), ,, r, ., q3, ., multiply, (, q0, ), ., add, (]
[q1, ., multiply, (, q3, ), ), ), ,, r, ., q3, ., multiply, (, q0, ), ., add, (]
[), ), ,, r, ., q3, ., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (]
[., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (, q3, ), ), ., add, (]
[., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (, q3, ), ), ., add, (]
[., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (, q3, ), ), ., add, (]
[., multiply, (, q0, ), ., add, (, r, ., q0, ., multiply, (, q3, ), ), ., add, (]
[add, (, r, ., q0, ., multiply, (, q3, ), ), ., add, (, r, ., q1, ., multiply, (]
[., multiply, (, q3, ), ), ., add, (, r, ., q1, ., multiply, (, q2, ), ., subtract, (]
[., multiply, (, q3, ), ), ., add, (, r, ., q1, ., multiply, (, q2, ), ., subtract, (]
[., multiply, (, q3, ), ), ., add, (, r, ., q1, ., multiply, (, q2, ), ., subtract, (]
[., add, (, r, ., q1, ., multiply, (, q2, ), ., subtract, (, r, ., q2, ., multiply, (]
[q1, ., multiply, (, q2, ), ., subtract, (, r, ., q2, ., multiply, (, q1, ), ), ), ,]
[), ), ,, false, ), ;, }, public, FieldRotation, <, T, >, applyTo, (, final, Rotation, r, ), {, return]
[}, public, FieldRotation, <, T, >, applyTo, (, final, Rotation, r, ), {, return, new, FieldRotation, <, T, >, (]
[}, public, FieldRotation, <, T, >, applyTo, (, final, Rotation, r, ), {, return, new, FieldRotation, <, T, >, (]
[}, public, FieldRotation, <, T, >, applyTo, (, final, Rotation, r, ), {, return, new, FieldRotation, <, T, >, (]
[T, >, applyTo, (, final, Rotation, r, ), {, return, new, FieldRotation, <, T, >, (, q0, ., multiply, (]
[T, >, applyTo, (, final, Rotation, r, ), {, return, new, FieldRotation, <, T, >, (, q0, ., multiply, (]
[return, new, FieldRotation, <, T, >, (, q0, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (]
[return, new, FieldRotation, <, T, >, (, q0, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (]
[return, new, FieldRotation, <, T, >, (, q0, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (]
[return, new, FieldRotation, <, T, >, (, q0, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (]
[T, >, (, q0, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (, q1, ., multiply, (]
[T, >, (, q0, ., multiply, (, r, ., getQ0, (, ), ), ., subtract, (, q1, ., multiply, (]
[getQ0, (, ), ), ., subtract, (, q1, ., multiply, (, r, ., getQ1, (, ), ), ., add, (]
[getQ0, (, ), ), ., subtract, (, q1, ., multiply, (, r, ., getQ1, (, ), ), ., add, (]
[., subtract, (, q1, ., multiply, (, r, ., getQ1, (, ), ), ., add, (, q2, ., multiply, (]
[., subtract, (, q1, ., multiply, (, r, ., getQ1, (, ), ), ., add, (, q2, ., multiply, (]
[(, ), ), ., add, (, q2, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (]
[(, ), ), ., add, (, q2, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (]
[add, (, q2, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (, q3, ., multiply, (]
[add, (, q2, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (, q3, ., multiply, (]
[(, ), ), ), ., add, (, q3, ., multiply, (, r, ., getQ3, (, ), ), ), ), ,]
[(, ), ), ), ., add, (, q3, ., multiply, (, r, ., getQ3, (, ), ), ), ), ,]
[(, ), ), ), ., add, (, q3, ., multiply, (, r, ., getQ3, (, ), ), ), ), ,]
[(, ), ), ), ., add, (, q3, ., multiply, (, r, ., getQ3, (, ), ), ), ), ,]
[., add, (, q3, ., multiply, (, r, ., getQ3, (, ), ), ), ), ,, q0, ., multiply, (]
[., add, (, q3, ., multiply, (, r, ., getQ3, (, ), ), ), ), ,, q0, ., multiply, (]
[getQ3, (, ), ), ), ), ,, q0, ., multiply, (, r, ., getQ1, (, ), ), ., add, (]
[getQ3, (, ), ), ), ), ,, q0, ., multiply, (, r, ., getQ1, (, ), ), ., add, (]
[), ), ,, q0, ., multiply, (, r, ., getQ1, (, ), ), ., add, (, q1, ., multiply, (]
[), ), ,, q0, ., multiply, (, r, ., getQ1, (, ), ), ., add, (, q1, ., multiply, (]
[(, ), ), ., add, (, q1, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (]
[(, ), ), ., add, (, q1, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (]
[(, ), ), ., add, (, q1, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (]
[add, (, q1, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (, q3, ., multiply, (]
[add, (, q1, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (, q3, ., multiply, (]
[(, ), ), ), ., add, (, q3, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (]
[(, ), ), ), ., add, (, q3, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (]
[., add, (, q3, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (, q2, ., multiply, (]
[., add, (, q3, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (, q2, ., multiply, (]
[getQ2, (, ), ), ., subtract, (, q2, ., multiply, (, r, ., getQ3, (, ), ), ), ), ,]
[getQ2, (, ), ), ., subtract, (, q2, ., multiply, (, r, ., getQ3, (, ), ), ), ), ,]
[getQ2, (, ), ), ., subtract, (, q2, ., multiply, (, r, ., getQ3, (, ), ), ), ), ,]
[getQ2, (, ), ), ., subtract, (, q2, ., multiply, (, r, ., getQ3, (, ), ), ), ), ,]
[., subtract, (, q2, ., multiply, (, r, ., getQ3, (, ), ), ), ), ,, q0, ., multiply, (]
[., subtract, (, q2, ., multiply, (, r, ., getQ3, (, ), ), ), ), ,, q0, ., multiply, (]
[getQ3, (, ), ), ), ), ,, q0, ., multiply, (, r, ., getQ2, (, ), ), ., add, (]
[getQ3, (, ), ), ), ), ,, q0, ., multiply, (, r, ., getQ2, (, ), ), ., add, (]
[), ), ,, q0, ., multiply, (, r, ., getQ2, (, ), ), ., add, (, q2, ., multiply, (]
[), ), ,, q0, ., multiply, (, r, ., getQ2, (, ), ), ., add, (, q2, ., multiply, (]
[(, ), ), ., add, (, q2, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (]
[(, ), ), ., add, (, q2, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (]
[(, ), ), ., add, (, q2, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (]
[add, (, q2, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (, q1, ., multiply, (]
[add, (, q2, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (, q1, ., multiply, (]
[(, ), ), ), ., add, (, q1, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (]
[(, ), ), ), ., add, (, q1, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (]
[., add, (, q1, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (, q3, ., multiply, (]
[., add, (, q1, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (, q3, ., multiply, (]
[getQ3, (, ), ), ., subtract, (, q3, ., multiply, (, r, ., getQ1, (, ), ), ), ), ,]
[getQ3, (, ), ), ., subtract, (, q3, ., multiply, (, r, ., getQ1, (, ), ), ), ), ,]
[getQ3, (, ), ), ., subtract, (, q3, ., multiply, (, r, ., getQ1, (, ), ), ), ), ,]
[getQ3, (, ), ), ., subtract, (, q3, ., multiply, (, r, ., getQ1, (, ), ), ), ), ,]
[., subtract, (, q3, ., multiply, (, r, ., getQ1, (, ), ), ), ), ,, q0, ., multiply, (]
[., subtract, (, q3, ., multiply, (, r, ., getQ1, (, ), ), ), ), ,, q0, ., multiply, (]
[getQ1, (, ), ), ), ), ,, q0, ., multiply, (, r, ., getQ3, (, ), ), ., add, (]
[getQ1, (, ), ), ), ), ,, q0, ., multiply, (, r, ., getQ3, (, ), ), ., add, (]
[), ), ,, q0, ., multiply, (, r, ., getQ3, (, ), ), ., add, (, q3, ., multiply, (]
[), ), ,, q0, ., multiply, (, r, ., getQ3, (, ), ), ., add, (, q3, ., multiply, (]
[(, ), ), ., add, (, q3, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (]
[(, ), ), ., add, (, q3, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (]
[(, ), ), ., add, (, q3, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (]
[add, (, q3, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (, q2, ., multiply, (]
[add, (, q3, ., multiply, (, r, ., getQ0, (, ), ), ), ., add, (, q2, ., multiply, (]
[(, ), ), ), ., add, (, q2, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (]
[(, ), ), ), ., add, (, q2, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (]
[., add, (, q2, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (, q1, ., multiply, (]
[., add, (, q2, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (, q1, ., multiply, (]
[getQ1, (, ), ), ., subtract, (, q1, ., multiply, (, r, ., getQ2, (, ), ), ), ), ,]
[>, FieldRotation, <, T, >, applyTo, (, final, Rotation, r1, ,, final, FieldRotation, <, T, >, rInner, ), {, return]
[(, final, Rotation, r1, ,, final, FieldRotation, <, T, >, rInner, ), {, return, new, FieldRotation, <, T, >, (]
[(, final, Rotation, r1, ,, final, FieldRotation, <, T, >, rInner, ), {, return, new, FieldRotation, <, T, >, (]
[(, final, Rotation, r1, ,, final, FieldRotation, <, T, >, rInner, ), {, return, new, FieldRotation, <, T, >, (]
[(, final, Rotation, r1, ,, final, FieldRotation, <, T, >, rInner, ), {, return, new, FieldRotation, <, T, >, (]
[FieldRotation, <, T, >, rInner, ), {, return, new, FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (]
[FieldRotation, <, T, >, rInner, ), {, return, new, FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (]
[FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (, r1, ., getQ0, (, ), ), ., subtract, (]
[FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (, r1, ., getQ0, (, ), ), ., subtract, (]
[FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (, r1, ., getQ0, (, ), ), ., subtract, (]
[FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (, r1, ., getQ0, (, ), ), ., subtract, (]
[FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (, r1, ., getQ0, (, ), ), ., subtract, (]
[., q0, ., multiply, (, r1, ., getQ0, (, ), ), ., subtract, (, rInner, ., q1, ., multiply, (]
[., q0, ., multiply, (, r1, ., getQ0, (, ), ), ., subtract, (, rInner, ., q1, ., multiply, (]
[), ), ., subtract, (, rInner, ., q1, ., multiply, (, r1, ., getQ1, (, ), ), ., add, (]
[), ), ., subtract, (, rInner, ., q1, ., multiply, (, r1, ., getQ1, (, ), ), ., add, (]
[), ), ., subtract, (, rInner, ., q1, ., multiply, (, r1, ., getQ1, (, ), ), ., add, (]
[., q1, ., multiply, (, r1, ., getQ1, (, ), ), ., add, (, rInner, ., q2, ., multiply, (]
[., q1, ., multiply, (, r1, ., getQ1, (, ), ), ., add, (, rInner, ., q2, ., multiply, (]
[), ., add, (, rInner, ., q2, ., multiply, (, r1, ., getQ2, (, ), ), ), ., add, (]
[), ., add, (, rInner, ., q2, ., multiply, (, r1, ., getQ2, (, ), ), ), ., add, (]
[), ., add, (, rInner, ., q2, ., multiply, (, r1, ., getQ2, (, ), ), ), ., add, (]
[q2, ., multiply, (, r1, ., getQ2, (, ), ), ), ., add, (, rInner, ., q3, ., multiply, (]
[q2, ., multiply, (, r1, ., getQ2, (, ), ), ), ., add, (, rInner, ., q3, ., multiply, (]
[), ), ., add, (, rInner, ., q3, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,]
[), ), ., add, (, rInner, ., q3, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,]
[), ), ., add, (, rInner, ., q3, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,]
[), ), ., add, (, rInner, ., q3, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,]
[), ), ., add, (, rInner, ., q3, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,]
[., q3, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,, rInner, ., q1, ., multiply, (]
[., q3, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,, rInner, ., q1, ., multiply, (]
[), ), ), ), ,, rInner, ., q1, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (]
[), ), ), ), ,, rInner, ., q1, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (]
[), ), ), ), ,, rInner, ., q1, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (]
[., q1, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (, rInner, ., q0, ., multiply, (]
[., q1, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (, rInner, ., q0, ., multiply, (]
[), ., add, (, rInner, ., q0, ., multiply, (, r1, ., getQ1, (, ), ), ), ., add, (]
[), ., add, (, rInner, ., q0, ., multiply, (, r1, ., getQ1, (, ), ), ), ., add, (]
[), ., add, (, rInner, ., q0, ., multiply, (, r1, ., getQ1, (, ), ), ), ., add, (]
[), ., add, (, rInner, ., q0, ., multiply, (, r1, ., getQ1, (, ), ), ), ., add, (]
[q0, ., multiply, (, r1, ., getQ1, (, ), ), ), ., add, (, rInner, ., q2, ., multiply, (]
[q0, ., multiply, (, r1, ., getQ1, (, ), ), ), ., add, (, rInner, ., q2, ., multiply, (]
[), ), ., add, (, rInner, ., q2, ., multiply, (, r1, ., getQ3, (, ), ), ., subtract, (]
[), ), ., add, (, rInner, ., q2, ., multiply, (, r1, ., getQ3, (, ), ), ., subtract, (]
[), ), ., add, (, rInner, ., q2, ., multiply, (, r1, ., getQ3, (, ), ), ., subtract, (]
[., q2, ., multiply, (, r1, ., getQ3, (, ), ), ., subtract, (, rInner, ., q3, ., multiply, (]
[., q2, ., multiply, (, r1, ., getQ3, (, ), ), ., subtract, (, rInner, ., q3, ., multiply, (]
[), ), ., subtract, (, rInner, ., q3, ., multiply, (, r1, ., getQ2, (, ), ), ), ), ,]
[), ), ., subtract, (, rInner, ., q3, ., multiply, (, r1, ., getQ2, (, ), ), ), ), ,]
[), ), ., subtract, (, rInner, ., q3, ., multiply, (, r1, ., getQ2, (, ), ), ), ), ,]
[), ), ., subtract, (, rInner, ., q3, ., multiply, (, r1, ., getQ2, (, ), ), ), ), ,]
[), ), ., subtract, (, rInner, ., q3, ., multiply, (, r1, ., getQ2, (, ), ), ), ), ,]
[., q3, ., multiply, (, r1, ., getQ2, (, ), ), ), ), ,, rInner, ., q2, ., multiply, (]
[., q3, ., multiply, (, r1, ., getQ2, (, ), ), ), ), ,, rInner, ., q2, ., multiply, (]
[), ), ), ), ,, rInner, ., q2, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (]
[), ), ), ), ,, rInner, ., q2, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (]
[), ), ), ), ,, rInner, ., q2, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (]
[., q2, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (, rInner, ., q0, ., multiply, (]
[., q2, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (, rInner, ., q0, ., multiply, (]
[), ., add, (, rInner, ., q0, ., multiply, (, r1, ., getQ2, (, ), ), ), ., add, (]
[), ., add, (, rInner, ., q0, ., multiply, (, r1, ., getQ2, (, ), ), ), ., add, (]
[), ., add, (, rInner, ., q0, ., multiply, (, r1, ., getQ2, (, ), ), ), ., add, (]
[), ., add, (, rInner, ., q0, ., multiply, (, r1, ., getQ2, (, ), ), ), ., add, (]
[q0, ., multiply, (, r1, ., getQ2, (, ), ), ), ., add, (, rInner, ., q3, ., multiply, (]
[q0, ., multiply, (, r1, ., getQ2, (, ), ), ), ., add, (, rInner, ., q3, ., multiply, (]
[), ), ., add, (, rInner, ., q3, ., multiply, (, r1, ., getQ1, (, ), ), ., subtract, (]
[), ), ., add, (, rInner, ., q3, ., multiply, (, r1, ., getQ1, (, ), ), ., subtract, (]
[), ), ., add, (, rInner, ., q3, ., multiply, (, r1, ., getQ1, (, ), ), ., subtract, (]
[., q3, ., multiply, (, r1, ., getQ1, (, ), ), ., subtract, (, rInner, ., q1, ., multiply, (]
[., q3, ., multiply, (, r1, ., getQ1, (, ), ), ., subtract, (, rInner, ., q1, ., multiply, (]
[), ), ., subtract, (, rInner, ., q1, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,]
[), ), ., subtract, (, rInner, ., q1, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,]
[), ), ., subtract, (, rInner, ., q1, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,]
[), ), ., subtract, (, rInner, ., q1, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,]
[), ), ., subtract, (, rInner, ., q1, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,]
[., q1, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,, rInner, ., q3, ., multiply, (]
[., q1, ., multiply, (, r1, ., getQ3, (, ), ), ), ), ,, rInner, ., q3, ., multiply, (]
[), ), ), ), ,, rInner, ., q3, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (]
[), ), ), ), ,, rInner, ., q3, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (]
[), ), ), ), ,, rInner, ., q3, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (]
[., q3, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (, rInner, ., q0, ., multiply, (]
[., q3, ., multiply, (, r1, ., getQ0, (, ), ), ., add, (, rInner, ., q0, ., multiply, (]
[), ., add, (, rInner, ., q0, ., multiply, (, r1, ., getQ3, (, ), ), ), ., add, (]
[), ., add, (, rInner, ., q0, ., multiply, (, r1, ., getQ3, (, ), ), ), ., add, (]
[), ., add, (, rInner, ., q0, ., multiply, (, r1, ., getQ3, (, ), ), ), ., add, (]
[), ., add, (, rInner, ., q0, ., multiply, (, r1, ., getQ3, (, ), ), ), ., add, (]
[q0, ., multiply, (, r1, ., getQ3, (, ), ), ), ., add, (, rInner, ., q1, ., multiply, (]
[q0, ., multiply, (, r1, ., getQ3, (, ), ), ), ., add, (, rInner, ., q1, ., multiply, (]
[), ), ., add, (, rInner, ., q1, ., multiply, (, r1, ., getQ2, (, ), ), ., subtract, (]
[), ), ., add, (, rInner, ., q1, ., multiply, (, r1, ., getQ2, (, ), ), ., subtract, (]
[), ), ., add, (, rInner, ., q1, ., multiply, (, r1, ., getQ2, (, ), ), ., subtract, (]
[., q1, ., multiply, (, r1, ., getQ2, (, ), ), ., subtract, (, rInner, ., q2, ., multiply, (]
[., q1, ., multiply, (, r1, ., getQ2, (, ), ), ., subtract, (, rInner, ., q2, ., multiply, (]
[), ), ., subtract, (, rInner, ., q2, ., multiply, (, r1, ., getQ1, (, ), ), ), ), ,]
[false, ), ;, }, public, FieldRotation, <, T, >, applyInverseTo, (, final, FieldRotation, <, T, >, r, ), {, return]
[<, T, >, applyInverseTo, (, final, FieldRotation, <, T, >, r, ), {, return, new, FieldRotation, <, T, >, (]
[<, T, >, applyInverseTo, (, final, FieldRotation, <, T, >, r, ), {, return, new, FieldRotation, <, T, >, (]
[<, T, >, applyInverseTo, (, final, FieldRotation, <, T, >, r, ), {, return, new, FieldRotation, <, T, >, (]
[<, T, >, applyInverseTo, (, final, FieldRotation, <, T, >, r, ), {, return, new, FieldRotation, <, T, >, (]
[<, T, >, applyInverseTo, (, final, FieldRotation, <, T, >, r, ), {, return, new, FieldRotation, <, T, >, (]
[FieldRotation, <, T, >, r, ), {, return, new, FieldRotation, <, T, >, (, r, ., q0, ., multiply, (]
[), {, return, new, FieldRotation, <, T, >, (, r, ., q0, ., multiply, (, q0, ), ., add, (]
[), {, return, new, FieldRotation, <, T, >, (, r, ., q0, ., multiply, (, q0, ), ., add, (]
[), {, return, new, FieldRotation, <, T, >, (, r, ., q0, ., multiply, (, q0, ), ., add, (]
[), {, return, new, FieldRotation, <, T, >, (, r, ., q0, ., multiply, (, q0, ), ., add, (]
[), {, return, new, FieldRotation, <, T, >, (, r, ., q0, ., multiply, (, q0, ), ., add, (]
[T, >, (, r, ., q0, ., multiply, (, q0, ), ., add, (, r, ., q1, ., multiply, (]
[q0, ., multiply, (, q0, ), ., add, (, r, ., q1, ., multiply, (, q1, ), ., add, (]
[q0, ., multiply, (, q0, ), ., add, (, r, ., q1, ., multiply, (, q1, ), ., add, (]
[q0, ., multiply, (, q0, ), ., add, (, r, ., q1, ., multiply, (, q1, ), ., add, (]
[., add, (, r, ., q1, ., multiply, (, q1, ), ., add, (, r, ., q2, ., multiply, (]
[., multiply, (, q1, ), ., add, (, r, ., q2, ., multiply, (, q2, ), ), ., add, (]
[., multiply, (, q1, ), ., add, (, r, ., q2, ., multiply, (, q2, ), ), ., add, (]
[., multiply, (, q1, ), ., add, (, r, ., q2, ., multiply, (, q2, ), ), ., add, (]
[add, (, r, ., q2, ., multiply, (, q2, ), ), ., add, (, r, ., q3, ., multiply, (]
[), ), ., add, (, r, ., q3, ., multiply, (, q3, ), ), ), ., negate, (, ), ,]
[), ), ., add, (, r, ., q3, ., multiply, (, q3, ), ), ), ., negate, (, ), ,]
[), ), ., add, (, r, ., q3, ., multiply, (, q3, ), ), ), ., negate, (, ), ,]
[), ), ., add, (, r, ., q3, ., multiply, (, q3, ), ), ), ., negate, (, ), ,]
[), ), ., add, (, r, ., q3, ., multiply, (, q3, ), ), ), ., negate, (, ), ,]
[., q3, ., multiply, (, q3, ), ), ), ., negate, (, ), ,, r, ., q0, ., multiply, (]
[q3, ), ), ), ., negate, (, ), ,, r, ., q0, ., multiply, (, q1, ), ., add, (]
[q3, ), ), ), ., negate, (, ), ,, r, ., q0, ., multiply, (, q1, ), ., add, (]
[q3, ), ), ), ., negate, (, ), ,, r, ., q0, ., multiply, (, q1, ), ., add, (]
[q3, ), ), ), ., negate, (, ), ,, r, ., q0, ., multiply, (, q1, ), ., add, (]
[(, ), ,, r, ., q0, ., multiply, (, q1, ), ., add, (, r, ., q2, ., multiply, (]
[q0, ., multiply, (, q1, ), ., add, (, r, ., q2, ., multiply, (, q3, ), ., subtract, (]
[q0, ., multiply, (, q1, ), ., add, (, r, ., q2, ., multiply, (, q3, ), ., subtract, (]
[q0, ., multiply, (, q1, ), ., add, (, r, ., q2, ., multiply, (, q3, ), ., subtract, (]
[., add, (, r, ., q2, ., multiply, (, q3, ), ., subtract, (, r, ., q3, ., multiply, (]
[multiply, (, q3, ), ., subtract, (, r, ., q3, ., multiply, (, q2, ), ), ), ., subtract, (]
[multiply, (, q3, ), ., subtract, (, r, ., q3, ., multiply, (, q2, ), ), ), ., subtract, (]
[multiply, (, q3, ), ., subtract, (, r, ., q3, ., multiply, (, q2, ), ), ), ., subtract, (]
[(, r, ., q3, ., multiply, (, q2, ), ), ), ., subtract, (, r, ., q1, ., multiply, (]
[., multiply, (, q2, ), ), ), ., subtract, (, r, ., q1, ., multiply, (, q0, ), ), ,]
[., multiply, (, q2, ), ), ), ., subtract, (, r, ., q1, ., multiply, (, q0, ), ), ,]
[., multiply, (, q2, ), ), ), ., subtract, (, r, ., q1, ., multiply, (, q0, ), ), ,]
[., multiply, (, q2, ), ), ), ., subtract, (, r, ., q1, ., multiply, (, q0, ), ), ,]
[., multiply, (, q2, ), ), ), ., subtract, (, r, ., q1, ., multiply, (, q0, ), ), ,]
[), ., subtract, (, r, ., q1, ., multiply, (, q0, ), ), ,, r, ., q0, ., multiply, (]
[., q1, ., multiply, (, q0, ), ), ,, r, ., q0, ., multiply, (, q2, ), ., add, (]
[., q1, ., multiply, (, q0, ), ), ,, r, ., q0, ., multiply, (, q2, ), ., add, (]
[., q1, ., multiply, (, q0, ), ), ,, r, ., q0, ., multiply, (, q2, ), ., add, (]
[., q1, ., multiply, (, q0, ), ), ,, r, ., q0, ., multiply, (, q2, ), ., add, (]
[), ), ,, r, ., q0, ., multiply, (, q2, ), ., add, (, r, ., q3, ., multiply, (]
[q0, ., multiply, (, q2, ), ., add, (, r, ., q3, ., multiply, (, q1, ), ., subtract, (]
[q0, ., multiply, (, q2, ), ., add, (, r, ., q3, ., multiply, (, q1, ), ., subtract, (]
[q0, ., multiply, (, q2, ), ., add, (, r, ., q3, ., multiply, (, q1, ), ., subtract, (]
[., add, (, r, ., q3, ., multiply, (, q1, ), ., subtract, (, r, ., q1, ., multiply, (]
[multiply, (, q1, ), ., subtract, (, r, ., q1, ., multiply, (, q3, ), ), ), ., subtract, (]
[multiply, (, q1, ), ., subtract, (, r, ., q1, ., multiply, (, q3, ), ), ), ., subtract, (]
[multiply, (, q1, ), ., subtract, (, r, ., q1, ., multiply, (, q3, ), ), ), ., subtract, (]
[(, r, ., q1, ., multiply, (, q3, ), ), ), ., subtract, (, r, ., q2, ., multiply, (]
[., multiply, (, q3, ), ), ), ., subtract, (, r, ., q2, ., multiply, (, q0, ), ), ,]
[., multiply, (, q3, ), ), ), ., subtract, (, r, ., q2, ., multiply, (, q0, ), ), ,]
[., multiply, (, q3, ), ), ), ., subtract, (, r, ., q2, ., multiply, (, q0, ), ), ,]
[., multiply, (, q3, ), ), ), ., subtract, (, r, ., q2, ., multiply, (, q0, ), ), ,]
[., multiply, (, q3, ), ), ), ., subtract, (, r, ., q2, ., multiply, (, q0, ), ), ,]
[), ., subtract, (, r, ., q2, ., multiply, (, q0, ), ), ,, r, ., q0, ., multiply, (]
[., q2, ., multiply, (, q0, ), ), ,, r, ., q0, ., multiply, (, q3, ), ., add, (]
[., q2, ., multiply, (, q0, ), ), ,, r, ., q0, ., multiply, (, q3, ), ., add, (]
[., q2, ., multiply, (, q0, ), ), ,, r, ., q0, ., multiply, (, q3, ), ., add, (]
[., q2, ., multiply, (, q0, ), ), ,, r, ., q0, ., multiply, (, q3, ), ., add, (]
[), ), ,, r, ., q0, ., multiply, (, q3, ), ., add, (, r, ., q1, ., multiply, (]
[q0, ., multiply, (, q3, ), ., add, (, r, ., q1, ., multiply, (, q2, ), ., subtract, (]
[q0, ., multiply, (, q3, ), ., add, (, r, ., q1, ., multiply, (, q2, ), ., subtract, (]
[q0, ., multiply, (, q3, ), ., add, (, r, ., q1, ., multiply, (, q2, ), ., subtract, (]
[., add, (, r, ., q1, ., multiply, (, q2, ), ., subtract, (, r, ., q2, ., multiply, (]
[multiply, (, q2, ), ., subtract, (, r, ., q2, ., multiply, (, q1, ), ), ), ., subtract, (]
[multiply, (, q2, ), ., subtract, (, r, ., q2, ., multiply, (, q1, ), ), ), ., subtract, (]
[multiply, (, q2, ), ., subtract, (, r, ., q2, ., multiply, (, q1, ), ), ), ., subtract, (]
[(, r, ., q2, ., multiply, (, q1, ), ), ), ., subtract, (, r, ., q3, ., multiply, (]
[., multiply, (, q1, ), ), ), ., subtract, (, r, ., q3, ., multiply, (, q0, ), ), ,]
[), ), ,, false, ), ;, }, public, FieldRotation, <, T, >, applyInverseTo, (, final, Rotation, r, ), {, return]
[}, public, FieldRotation, <, T, >, applyInverseTo, (, final, Rotation, r, ), {, return, new, FieldRotation, <, T, >, (]
[}, public, FieldRotation, <, T, >, applyInverseTo, (, final, Rotation, r, ), {, return, new, FieldRotation, <, T, >, (]
[}, public, FieldRotation, <, T, >, applyInverseTo, (, final, Rotation, r, ), {, return, new, FieldRotation, <, T, >, (]
[}, public, FieldRotation, <, T, >, applyInverseTo, (, final, Rotation, r, ), {, return, new, FieldRotation, <, T, >, (]
[T, >, applyInverseTo, (, final, Rotation, r, ), {, return, new, FieldRotation, <, T, >, (, q0, ., multiply, (]
[T, >, applyInverseTo, (, final, Rotation, r, ), {, return, new, FieldRotation, <, T, >, (, q0, ., multiply, (]
[return, new, FieldRotation, <, T, >, (, q0, ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[return, new, FieldRotation, <, T, >, (, q0, ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[return, new, FieldRotation, <, T, >, (, q0, ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[return, new, FieldRotation, <, T, >, (, q0, ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[T, >, (, q0, ., multiply, (, r, ., getQ0, (, ), ), ., add, (, q1, ., multiply, (]
[T, >, (, q0, ., multiply, (, r, ., getQ0, (, ), ), ., add, (, q1, ., multiply, (]
[getQ0, (, ), ), ., add, (, q1, ., multiply, (, r, ., getQ1, (, ), ), ., add, (]
[getQ0, (, ), ), ., add, (, q1, ., multiply, (, r, ., getQ1, (, ), ), ., add, (]
[., add, (, q1, ., multiply, (, r, ., getQ1, (, ), ), ., add, (, q2, ., multiply, (]
[., add, (, q1, ., multiply, (, r, ., getQ1, (, ), ), ., add, (, q2, ., multiply, (]
[(, ), ), ., add, (, q2, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (]
[(, ), ), ., add, (, q2, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (]
[add, (, q2, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (, q3, ., multiply, (]
[add, (, q2, ., multiply, (, r, ., getQ2, (, ), ), ), ., add, (, q3, ., multiply, (]
[., add, (, q3, ., multiply, (, r, ., getQ3, (, ), ), ), ), ., negate, (, ), ,]
[., add, (, q3, ., multiply, (, r, ., getQ3, (, ), ), ), ), ., negate, (, ), ,]
[., add, (, q3, ., multiply, (, r, ., getQ3, (, ), ), ), ), ., negate, (, ), ,]
[., add, (, q3, ., multiply, (, r, ., getQ3, (, ), ), ), ), ., negate, (, ), ,]
[., multiply, (, r, ., getQ3, (, ), ), ), ), ., negate, (, ), ,, q1, ., multiply, (]
[., multiply, (, r, ., getQ3, (, ), ), ), ), ., negate, (, ), ,, q1, ., multiply, (]
[), ), ., negate, (, ), ,, q1, ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[), ), ., negate, (, ), ,, q1, ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[), ), ., negate, (, ), ,, q1, ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[(, ), ,, q1, ., multiply, (, r, ., getQ0, (, ), ), ., add, (, q3, ., multiply, (]
[(, ), ,, q1, ., multiply, (, r, ., getQ0, (, ), ), ., add, (, q3, ., multiply, (]
[getQ0, (, ), ), ., add, (, q3, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (]
[getQ0, (, ), ), ., add, (, q3, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (]
[., add, (, q3, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (, q2, ., multiply, (]
[., add, (, q3, ., multiply, (, r, ., getQ2, (, ), ), ., subtract, (, q2, ., multiply, (]
[), ), ., subtract, (, q2, ., multiply, (, r, ., getQ3, (, ), ), ), ), ., subtract, (]
[), ), ., subtract, (, q2, ., multiply, (, r, ., getQ3, (, ), ), ), ), ., subtract, (]
[(, q2, ., multiply, (, r, ., getQ3, (, ), ), ), ), ., subtract, (, q0, ., multiply, (]
[(, q2, ., multiply, (, r, ., getQ3, (, ), ), ), ), ., subtract, (, q0, ., multiply, (]
[(, ), ), ), ), ., subtract, (, q0, ., multiply, (, r, ., getQ1, (, ), ), ), ,]
[(, ), ), ), ), ., subtract, (, q0, ., multiply, (, r, ., getQ1, (, ), ), ), ,]
[(, ), ), ), ), ., subtract, (, q0, ., multiply, (, r, ., getQ1, (, ), ), ), ,]
[(, ), ), ), ), ., subtract, (, q0, ., multiply, (, r, ., getQ1, (, ), ), ), ,]
[), ., subtract, (, q0, ., multiply, (, r, ., getQ1, (, ), ), ), ,, q2, ., multiply, (]
[), ., subtract, (, q0, ., multiply, (, r, ., getQ1, (, ), ), ), ,, q2, ., multiply, (]
[., getQ1, (, ), ), ), ,, q2, ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[., getQ1, (, ), ), ), ,, q2, ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[., getQ1, (, ), ), ), ,, q2, ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[), ), ,, q2, ., multiply, (, r, ., getQ0, (, ), ), ., add, (, q1, ., multiply, (]
[), ), ,, q2, ., multiply, (, r, ., getQ0, (, ), ), ., add, (, q1, ., multiply, (]
[getQ0, (, ), ), ., add, (, q1, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (]
[getQ0, (, ), ), ., add, (, q1, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (]
[., add, (, q1, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (, q3, ., multiply, (]
[., add, (, q1, ., multiply, (, r, ., getQ3, (, ), ), ., subtract, (, q3, ., multiply, (]
[), ), ., subtract, (, q3, ., multiply, (, r, ., getQ1, (, ), ), ), ), ., subtract, (]
[), ), ., subtract, (, q3, ., multiply, (, r, ., getQ1, (, ), ), ), ), ., subtract, (]
[(, q3, ., multiply, (, r, ., getQ1, (, ), ), ), ), ., subtract, (, q0, ., multiply, (]
[(, q3, ., multiply, (, r, ., getQ1, (, ), ), ), ), ., subtract, (, q0, ., multiply, (]
[(, ), ), ), ), ., subtract, (, q0, ., multiply, (, r, ., getQ2, (, ), ), ), ,]
[(, ), ), ), ), ., subtract, (, q0, ., multiply, (, r, ., getQ2, (, ), ), ), ,]
[(, ), ), ), ), ., subtract, (, q0, ., multiply, (, r, ., getQ2, (, ), ), ), ,]
[(, ), ), ), ), ., subtract, (, q0, ., multiply, (, r, ., getQ2, (, ), ), ), ,]
[), ., subtract, (, q0, ., multiply, (, r, ., getQ2, (, ), ), ), ,, q3, ., multiply, (]
[), ., subtract, (, q0, ., multiply, (, r, ., getQ2, (, ), ), ), ,, q3, ., multiply, (]
[., getQ2, (, ), ), ), ,, q3, ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[., getQ2, (, ), ), ), ,, q3, ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[., getQ2, (, ), ), ), ,, q3, ., multiply, (, r, ., getQ0, (, ), ), ., add, (]
[), ), ,, q3, ., multiply, (, r, ., getQ0, (, ), ), ., add, (, q2, ., multiply, (]
[), ), ,, q3, ., multiply, (, r, ., getQ0, (, ), ), ., add, (, q2, ., multiply, (]
[getQ0, (, ), ), ., add, (, q2, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (]
[getQ0, (, ), ), ., add, (, q2, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (]
[., add, (, q2, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (, q1, ., multiply, (]
[., add, (, q2, ., multiply, (, r, ., getQ1, (, ), ), ., subtract, (, q1, ., multiply, (]
[), ), ., subtract, (, q1, ., multiply, (, r, ., getQ2, (, ), ), ), ), ., subtract, (]
[), ), ., subtract, (, q1, ., multiply, (, r, ., getQ2, (, ), ), ), ), ., subtract, (]
[(, q1, ., multiply, (, r, ., getQ2, (, ), ), ), ), ., subtract, (, q0, ., multiply, (]
[(, q1, ., multiply, (, r, ., getQ2, (, ), ), ), ), ., subtract, (, q0, ., multiply, (]
[(, ), ), ), ), ., subtract, (, q0, ., multiply, (, r, ., getQ3, (, ), ), ), ,]
[>, FieldRotation, <, T, >, applyInverseTo, (, final, Rotation, rOuter, ,, final, FieldRotation, <, T, >, rInner, ), {, return]
[(, final, Rotation, rOuter, ,, final, FieldRotation, <, T, >, rInner, ), {, return, new, FieldRotation, <, T, >, (]
[(, final, Rotation, rOuter, ,, final, FieldRotation, <, T, >, rInner, ), {, return, new, FieldRotation, <, T, >, (]
[(, final, Rotation, rOuter, ,, final, FieldRotation, <, T, >, rInner, ), {, return, new, FieldRotation, <, T, >, (]
[(, final, Rotation, rOuter, ,, final, FieldRotation, <, T, >, rInner, ), {, return, new, FieldRotation, <, T, >, (]
[(, final, Rotation, rOuter, ,, final, FieldRotation, <, T, >, rInner, ), {, return, new, FieldRotation, <, T, >, (]
[FieldRotation, <, T, >, rInner, ), {, return, new, FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (]
[FieldRotation, <, T, >, rInner, ), {, return, new, FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (]
[FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (, rOuter, ., getQ0, (, ), ), ., add, (]
[FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (, rOuter, ., getQ0, (, ), ), ., add, (]
[FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (, rOuter, ., getQ0, (, ), ), ., add, (]
[FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (, rOuter, ., getQ0, (, ), ), ., add, (]
[FieldRotation, <, T, >, (, rInner, ., q0, ., multiply, (, rOuter, ., getQ0, (, ), ), ., add, (]
[., q0, ., multiply, (, rOuter, ., getQ0, (, ), ), ., add, (, rInner, ., q1, ., multiply, (]
[., q0, ., multiply, (, rOuter, ., getQ0, (, ), ), ., add, (, rInner, ., q1, ., multiply, (]
[), ), ., add, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ1, (, ), ), ., add, (]
[), ), ., add, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ1, (, ), ), ., add, (]
[), ), ., add, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ1, (, ), ), ., add, (]
[., q1, ., multiply, (, rOuter, ., getQ1, (, ), ), ., add, (, rInner, ., q2, ., multiply, (]
[., q1, ., multiply, (, rOuter, ., getQ1, (, ), ), ., add, (, rInner, ., q2, ., multiply, (]
[), ., add, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ2, (, ), ), ), ., add, (]
[), ., add, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ2, (, ), ), ), ., add, (]
[), ., add, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ2, (, ), ), ), ., add, (]
[q2, ., multiply, (, rOuter, ., getQ2, (, ), ), ), ., add, (, rInner, ., q3, ., multiply, (]
[q2, ., multiply, (, rOuter, ., getQ2, (, ), ), ), ., add, (, rInner, ., q3, ., multiply, (]
[(, rInner, ., q3, ., multiply, (, rOuter, ., getQ3, (, ), ), ), ), ., negate, (, ), ,]
[(, rInner, ., q3, ., multiply, (, rOuter, ., getQ3, (, ), ), ), ), ., negate, (, ), ,]
[(, rInner, ., q3, ., multiply, (, rOuter, ., getQ3, (, ), ), ), ), ., negate, (, ), ,]
[(, rInner, ., q3, ., multiply, (, rOuter, ., getQ3, (, ), ), ), ), ., negate, (, ), ,]
[(, rInner, ., q3, ., multiply, (, rOuter, ., getQ3, (, ), ), ), ), ., negate, (, ), ,]
[(, rOuter, ., getQ3, (, ), ), ), ), ., negate, (, ), ,, rInner, ., q0, ., multiply, (]
[(, rOuter, ., getQ3, (, ), ), ), ), ., negate, (, ), ,, rInner, ., q0, ., multiply, (]
[., negate, (, ), ,, rInner, ., q0, ., multiply, (, rOuter, ., getQ1, (, ), ), ., add, (]
[., negate, (, ), ,, rInner, ., q0, ., multiply, (, rOuter, ., getQ1, (, ), ), ., add, (]
[., negate, (, ), ,, rInner, ., q0, ., multiply, (, rOuter, ., getQ1, (, ), ), ., add, (]
[., negate, (, ), ,, rInner, ., q0, ., multiply, (, rOuter, ., getQ1, (, ), ), ., add, (]
[., q0, ., multiply, (, rOuter, ., getQ1, (, ), ), ., add, (, rInner, ., q2, ., multiply, (]
[., q0, ., multiply, (, rOuter, ., getQ1, (, ), ), ., add, (, rInner, ., q2, ., multiply, (]
[), ), ., add, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ3, (, ), ), ., subtract, (]
[), ), ., add, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ3, (, ), ), ., subtract, (]
[), ), ., add, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ3, (, ), ), ., subtract, (]
[., q2, ., multiply, (, rOuter, ., getQ3, (, ), ), ., subtract, (, rInner, ., q3, ., multiply, (]
[., q2, ., multiply, (, rOuter, ., getQ3, (, ), ), ., subtract, (, rInner, ., q3, ., multiply, (]
[., subtract, (, rInner, ., q3, ., multiply, (, rOuter, ., getQ2, (, ), ), ), ), ., subtract, (]
[., subtract, (, rInner, ., q3, ., multiply, (, rOuter, ., getQ2, (, ), ), ), ), ., subtract, (]
[., subtract, (, rInner, ., q3, ., multiply, (, rOuter, ., getQ2, (, ), ), ), ), ., subtract, (]
[., multiply, (, rOuter, ., getQ2, (, ), ), ), ), ., subtract, (, rInner, ., q1, ., multiply, (]
[., multiply, (, rOuter, ., getQ2, (, ), ), ), ), ., subtract, (, rInner, ., q1, ., multiply, (]
[), ), ), ., subtract, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,]
[), ), ), ., subtract, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,]
[), ), ), ., subtract, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,]
[), ), ), ., subtract, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,]
[), ), ), ., subtract, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,]
[rInner, ., q1, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,, rInner, ., q0, ., multiply, (]
[rInner, ., q1, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,, rInner, ., q0, ., multiply, (]
[(, ), ), ), ,, rInner, ., q0, ., multiply, (, rOuter, ., getQ2, (, ), ), ., add, (]
[(, ), ), ), ,, rInner, ., q0, ., multiply, (, rOuter, ., getQ2, (, ), ), ., add, (]
[(, ), ), ), ,, rInner, ., q0, ., multiply, (, rOuter, ., getQ2, (, ), ), ., add, (]
[(, ), ), ), ,, rInner, ., q0, ., multiply, (, rOuter, ., getQ2, (, ), ), ., add, (]
[., q0, ., multiply, (, rOuter, ., getQ2, (, ), ), ., add, (, rInner, ., q3, ., multiply, (]
[., q0, ., multiply, (, rOuter, ., getQ2, (, ), ), ., add, (, rInner, ., q3, ., multiply, (]
[), ), ., add, (, rInner, ., q3, ., multiply, (, rOuter, ., getQ1, (, ), ), ., subtract, (]
[), ), ., add, (, rInner, ., q3, ., multiply, (, rOuter, ., getQ1, (, ), ), ., subtract, (]
[), ), ., add, (, rInner, ., q3, ., multiply, (, rOuter, ., getQ1, (, ), ), ., subtract, (]
[., q3, ., multiply, (, rOuter, ., getQ1, (, ), ), ., subtract, (, rInner, ., q1, ., multiply, (]
[., q3, ., multiply, (, rOuter, ., getQ1, (, ), ), ., subtract, (, rInner, ., q1, ., multiply, (]
[., subtract, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ3, (, ), ), ), ), ., subtract, (]
[., subtract, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ3, (, ), ), ), ), ., subtract, (]
[., subtract, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ3, (, ), ), ), ), ., subtract, (]
[., multiply, (, rOuter, ., getQ3, (, ), ), ), ), ., subtract, (, rInner, ., q2, ., multiply, (]
[., multiply, (, rOuter, ., getQ3, (, ), ), ), ), ., subtract, (, rInner, ., q2, ., multiply, (]
[), ), ), ., subtract, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,]
[), ), ), ., subtract, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,]
[), ), ), ., subtract, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,]
[), ), ), ., subtract, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,]
[), ), ), ., subtract, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,]
[rInner, ., q2, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,, rInner, ., q0, ., multiply, (]
[rInner, ., q2, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,, rInner, ., q0, ., multiply, (]
[(, ), ), ), ,, rInner, ., q0, ., multiply, (, rOuter, ., getQ3, (, ), ), ., add, (]
[(, ), ), ), ,, rInner, ., q0, ., multiply, (, rOuter, ., getQ3, (, ), ), ., add, (]
[(, ), ), ), ,, rInner, ., q0, ., multiply, (, rOuter, ., getQ3, (, ), ), ., add, (]
[(, ), ), ), ,, rInner, ., q0, ., multiply, (, rOuter, ., getQ3, (, ), ), ., add, (]
[., q0, ., multiply, (, rOuter, ., getQ3, (, ), ), ., add, (, rInner, ., q1, ., multiply, (]
[., q0, ., multiply, (, rOuter, ., getQ3, (, ), ), ., add, (, rInner, ., q1, ., multiply, (]
[), ), ., add, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ2, (, ), ), ., subtract, (]
[), ), ., add, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ2, (, ), ), ., subtract, (]
[), ), ., add, (, rInner, ., q1, ., multiply, (, rOuter, ., getQ2, (, ), ), ., subtract, (]
[., q1, ., multiply, (, rOuter, ., getQ2, (, ), ), ., subtract, (, rInner, ., q2, ., multiply, (]
[., q1, ., multiply, (, rOuter, ., getQ2, (, ), ), ., subtract, (, rInner, ., q2, ., multiply, (]
[., subtract, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ1, (, ), ), ), ), ., subtract, (]
[., subtract, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ1, (, ), ), ), ), ., subtract, (]
[., subtract, (, rInner, ., q2, ., multiply, (, rOuter, ., getQ1, (, ), ), ), ), ., subtract, (]
[., multiply, (, rOuter, ., getQ1, (, ), ), ), ), ., subtract, (, rInner, ., q3, ., multiply, (]
[., multiply, (, rOuter, ., getQ1, (, ), ), ), ), ., subtract, (, rInner, ., q3, ., multiply, (]
[), ), ), ., subtract, (, rInner, ., q3, ., multiply, (, rOuter, ., getQ0, (, ), ), ), ,]
[orthogonalizeMatrix, (, final, T, [, ], [, ], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, T, x00, =]
[orthogonalizeMatrix, (, final, T, [, ], [, ], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, T, x00, =]
[orthogonalizeMatrix, (, final, T, [, ], [, ], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, T, x00, =]
[final, T, [, ], [, ], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, T, x00, =, m, []
[], [, ], m, ,, final, double, threshold, ), throws, NotARotationMatrixException, {, T, x00, =, m, [, 0, ], []
[double, threshold, ), throws, NotARotationMatrixException, {, T, x00, =, m, [, 0, ], [, 0, ], ;, T, x01, =]
[double, threshold, ), throws, NotARotationMatrixException, {, T, x00, =, m, [, 0, ], [, 0, ], ;, T, x01, =]
[double, threshold, ), throws, NotARotationMatrixException, {, T, x00, =, m, [, 0, ], [, 0, ], ;, T, x01, =]
[), throws, NotARotationMatrixException, {, T, x00, =, m, [, 0, ], [, 0, ], ;, T, x01, =, m, []
[{, T, x00, =, m, [, 0, ], [, 0, ], ;, T, x01, =, m, [, 0, ], []
[0, ], [, 0, ], ;, T, x01, =, m, [, 0, ], [, 1, ], ;, T, x02, =]
[0, ], [, 0, ], ;, T, x01, =, m, [, 0, ], [, 1, ], ;, T, x02, =]
[0, ], [, 0, ], ;, T, x01, =, m, [, 0, ], [, 1, ], ;, T, x02, =]
[[, 0, ], ;, T, x01, =, m, [, 0, ], [, 1, ], ;, T, x02, =, m, []
[;, T, x01, =, m, [, 0, ], [, 1, ], ;, T, x02, =, m, [, 0, ], []
[0, ], [, 1, ], ;, T, x02, =, m, [, 0, ], [, 2, ], ;, T, x10, =]
[0, ], [, 1, ], ;, T, x02, =, m, [, 0, ], [, 2, ], ;, T, x10, =]
[0, ], [, 1, ], ;, T, x02, =, m, [, 0, ], [, 2, ], ;, T, x10, =]
[[, 1, ], ;, T, x02, =, m, [, 0, ], [, 2, ], ;, T, x10, =, m, []
[;, T, x02, =, m, [, 0, ], [, 2, ], ;, T, x10, =, m, [, 1, ], []
[0, ], [, 2, ], ;, T, x10, =, m, [, 1, ], [, 0, ], ;, T, x11, =]
[0, ], [, 2, ], ;, T, x10, =, m, [, 1, ], [, 0, ], ;, T, x11, =]
[0, ], [, 2, ], ;, T, x10, =, m, [, 1, ], [, 0, ], ;, T, x11, =]
[[, 2, ], ;, T, x10, =, m, [, 1, ], [, 0, ], ;, T, x11, =, m, []
[;, T, x10, =, m, [, 1, ], [, 0, ], ;, T, x11, =, m, [, 1, ], []
[1, ], [, 0, ], ;, T, x11, =, m, [, 1, ], [, 1, ], ;, T, x12, =]
[1, ], [, 0, ], ;, T, x11, =, m, [, 1, ], [, 1, ], ;, T, x12, =]
[1, ], [, 0, ], ;, T, x11, =, m, [, 1, ], [, 1, ], ;, T, x12, =]
[[, 0, ], ;, T, x11, =, m, [, 1, ], [, 1, ], ;, T, x12, =, m, []
[;, T, x11, =, m, [, 1, ], [, 1, ], ;, T, x12, =, m, [, 1, ], []
[1, ], [, 1, ], ;, T, x12, =, m, [, 1, ], [, 2, ], ;, T, x20, =]
[1, ], [, 1, ], ;, T, x12, =, m, [, 1, ], [, 2, ], ;, T, x20, =]
[1, ], [, 1, ], ;, T, x12, =, m, [, 1, ], [, 2, ], ;, T, x20, =]
[[, 1, ], ;, T, x12, =, m, [, 1, ], [, 2, ], ;, T, x20, =, m, []
[;, T, x12, =, m, [, 1, ], [, 2, ], ;, T, x20, =, m, [, 2, ], []
[1, ], [, 2, ], ;, T, x20, =, m, [, 2, ], [, 0, ], ;, T, x21, =]
[1, ], [, 2, ], ;, T, x20, =, m, [, 2, ], [, 0, ], ;, T, x21, =]
[1, ], [, 2, ], ;, T, x20, =, m, [, 2, ], [, 0, ], ;, T, x21, =]
[[, 2, ], ;, T, x20, =, m, [, 2, ], [, 0, ], ;, T, x21, =, m, []
[;, T, x20, =, m, [, 2, ], [, 0, ], ;, T, x21, =, m, [, 2, ], []
[2, ], [, 0, ], ;, T, x21, =, m, [, 2, ], [, 1, ], ;, T, x22, =]
[2, ], [, 0, ], ;, T, x21, =, m, [, 2, ], [, 1, ], ;, T, x22, =]
[2, ], [, 0, ], ;, T, x21, =, m, [, 2, ], [, 1, ], ;, T, x22, =]
[[, 0, ], ;, T, x21, =, m, [, 2, ], [, 1, ], ;, T, x22, =, m, []
[;, T, x21, =, m, [, 2, ], [, 1, ], ;, T, x22, =, m, [, 2, ], []
[2, ], [, 1, ], ;, T, x22, =, m, [, 2, ], [, 2, ], ;, double, fn, =]
[[, 2, ], ;, double, fn, =, 0, ;, double, fn1, ;, final, T, [, ], [, ], o, =]
[[, 2, ], ;, double, fn, =, 0, ;, double, fn1, ;, final, T, [, ], [, ], o, =]
[double, fn, =, 0, ;, double, fn1, ;, final, T, [, ], [, ], o, =, MathArrays, ., buildArray, (]
[double, fn, =, 0, ;, double, fn1, ;, final, T, [, ], [, ], o, =, MathArrays, ., buildArray, (]
[double, fn, =, 0, ;, double, fn1, ;, final, T, [, ], [, ], o, =, MathArrays, ., buildArray, (]
[double, fn, =, 0, ;, double, fn1, ;, final, T, [, ], [, ], o, =, MathArrays, ., buildArray, (]
[=, 0, ;, double, fn1, ;, final, T, [, ], [, ], o, =, MathArrays, ., buildArray, (, m, []
[double, fn1, ;, final, T, [, ], [, ], o, =, MathArrays, ., buildArray, (, m, [, 0, ], []
[[, ], o, =, MathArrays, ., buildArray, (, m, [, 0, ], [, 0, ], ., getField, (, ), ,]
[o, =, MathArrays, ., buildArray, (, m, [, 0, ], [, 0, ], ., getField, (, ), ,, 3, ,]
[m, [, 0, ], [, 0, ], ., getField, (, ), ,, 3, ,, 3, ), ;, int, i, =]
[[, 0, ], ., getField, (, ), ,, 3, ,, 3, ), ;, int, i, =, 0, ;, while, (]
[[, 0, ], ., getField, (, ), ,, 3, ,, 3, ), ;, int, i, =, 0, ;, while, (]
[0, ], ., getField, (, ), ,, 3, ,, 3, ), ;, int, i, =, 0, ;, while, (, ++]
[., getField, (, ), ,, 3, ,, 3, ), ;, int, i, =, 0, ;, while, (, ++, i, <]
[3, ), ;, int, i, =, 0, ;, while, (, ++, i, <, 11, ), {, final, T, mx00, =]
[3, ), ;, int, i, =, 0, ;, while, (, ++, i, <, 11, ), {, final, T, mx00, =]
[3, ), ;, int, i, =, 0, ;, while, (, ++, i, <, 11, ), {, final, T, mx00, =]
[3, ), ;, int, i, =, 0, ;, while, (, ++, i, <, 11, ), {, final, T, mx00, =]
[3, ), ;, int, i, =, 0, ;, while, (, ++, i, <, 11, ), {, final, T, mx00, =]
[3, ), ;, int, i, =, 0, ;, while, (, ++, i, <, 11, ), {, final, T, mx00, =]
[;, int, i, =, 0, ;, while, (, ++, i, <, 11, ), {, final, T, mx00, =, m, []
[=, 0, ;, while, (, ++, i, <, 11, ), {, final, T, mx00, =, m, [, 0, ], []
[++, i, <, 11, ), {, final, T, mx00, =, m, [, 0, ], [, 0, ], ., multiply, (]
[{, final, T, mx00, =, m, [, 0, ], [, 0, ], ., multiply, (, x00, ), ., add, (]
[{, final, T, mx00, =, m, [, 0, ], [, 0, ], ., multiply, (, x00, ), ., add, (]
[{, final, T, mx00, =, m, [, 0, ], [, 0, ], ., multiply, (, x00, ), ., add, (]
[{, final, T, mx00, =, m, [, 0, ], [, 0, ], ., multiply, (, x00, ), ., add, (]
[T, mx00, =, m, [, 0, ], [, 0, ], ., multiply, (, x00, ), ., add, (, m, []
[m, [, 0, ], [, 0, ], ., multiply, (, x00, ), ., add, (, m, [, 1, ], []
[0, ], ., multiply, (, x00, ), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (]
[), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (, x10, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (, x10, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (, x10, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (, x10, ), ), ., add, (]
[add, (, m, [, 1, ], [, 0, ], ., multiply, (, x10, ), ), ., add, (, m, []
[[, 1, ], [, 0, ], ., multiply, (, x10, ), ), ., add, (, m, [, 2, ], []
[], ., multiply, (, x10, ), ), ., add, (, m, [, 2, ], [, 0, ], ., multiply, (]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x20, ), ), ;, final, T, mx10, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x20, ), ), ;, final, T, mx10, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x20, ), ), ;, final, T, mx10, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x20, ), ), ;, final, T, mx10, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x20, ), ), ;, final, T, mx10, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x20, ), ), ;, final, T, mx10, =]
[m, [, 2, ], [, 0, ], ., multiply, (, x20, ), ), ;, final, T, mx10, =, m, []
[], [, 0, ], ., multiply, (, x20, ), ), ;, final, T, mx10, =, m, [, 0, ], []
[multiply, (, x20, ), ), ;, final, T, mx10, =, m, [, 0, ], [, 1, ], ., multiply, (]
[;, final, T, mx10, =, m, [, 0, ], [, 1, ], ., multiply, (, x00, ), ., add, (]
[;, final, T, mx10, =, m, [, 0, ], [, 1, ], ., multiply, (, x00, ), ., add, (]
[;, final, T, mx10, =, m, [, 0, ], [, 1, ], ., multiply, (, x00, ), ., add, (]
[;, final, T, mx10, =, m, [, 0, ], [, 1, ], ., multiply, (, x00, ), ., add, (]
[T, mx10, =, m, [, 0, ], [, 1, ], ., multiply, (, x00, ), ., add, (, m, []
[m, [, 0, ], [, 1, ], ., multiply, (, x00, ), ., add, (, m, [, 1, ], []
[1, ], ., multiply, (, x00, ), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (]
[), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (, x10, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (, x10, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (, x10, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (, x10, ), ), ., add, (]
[add, (, m, [, 1, ], [, 1, ], ., multiply, (, x10, ), ), ., add, (, m, []
[[, 1, ], [, 1, ], ., multiply, (, x10, ), ), ., add, (, m, [, 2, ], []
[], ., multiply, (, x10, ), ), ., add, (, m, [, 2, ], [, 1, ], ., multiply, (]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x20, ), ), ;, final, T, mx20, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x20, ), ), ;, final, T, mx20, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x20, ), ), ;, final, T, mx20, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x20, ), ), ;, final, T, mx20, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x20, ), ), ;, final, T, mx20, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x20, ), ), ;, final, T, mx20, =]
[m, [, 2, ], [, 1, ], ., multiply, (, x20, ), ), ;, final, T, mx20, =, m, []
[], [, 1, ], ., multiply, (, x20, ), ), ;, final, T, mx20, =, m, [, 0, ], []
[multiply, (, x20, ), ), ;, final, T, mx20, =, m, [, 0, ], [, 2, ], ., multiply, (]
[;, final, T, mx20, =, m, [, 0, ], [, 2, ], ., multiply, (, x00, ), ., add, (]
[;, final, T, mx20, =, m, [, 0, ], [, 2, ], ., multiply, (, x00, ), ., add, (]
[;, final, T, mx20, =, m, [, 0, ], [, 2, ], ., multiply, (, x00, ), ., add, (]
[;, final, T, mx20, =, m, [, 0, ], [, 2, ], ., multiply, (, x00, ), ., add, (]
[T, mx20, =, m, [, 0, ], [, 2, ], ., multiply, (, x00, ), ., add, (, m, []
[m, [, 0, ], [, 2, ], ., multiply, (, x00, ), ., add, (, m, [, 1, ], []
[2, ], ., multiply, (, x00, ), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (]
[), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (, x10, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (, x10, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (, x10, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (, x10, ), ), ., add, (]
[add, (, m, [, 1, ], [, 2, ], ., multiply, (, x10, ), ), ., add, (, m, []
[[, 1, ], [, 2, ], ., multiply, (, x10, ), ), ., add, (, m, [, 2, ], []
[], ., multiply, (, x10, ), ), ., add, (, m, [, 2, ], [, 2, ], ., multiply, (]
[add, (, m, [, 2, ], [, 2, ], ., multiply, (, x20, ), ), ;, final, T, mx01, =]
[add, (, m, [, 2, ], [, 2, ], ., multiply, (, x20, ), ), ;, final, T, mx01, =]
[add, (, m, [, 2, ], [, 2, ], ., multiply, (, x20, ), ), ;, final, T, mx01, =]
[add, (, m, [, 2, ], [, 2, ], ., multiply, (, x20, ), ), ;, final, T, mx01, =]
[add, (, m, [, 2, ], [, 2, ], ., multiply, (, x20, ), ), ;, final, T, mx01, =]
[add, (, m, [, 2, ], [, 2, ], ., multiply, (, x20, ), ), ;, final, T, mx01, =]
[m, [, 2, ], [, 2, ], ., multiply, (, x20, ), ), ;, final, T, mx01, =, m, []
[], [, 2, ], ., multiply, (, x20, ), ), ;, final, T, mx01, =, m, [, 0, ], []
[multiply, (, x20, ), ), ;, final, T, mx01, =, m, [, 0, ], [, 0, ], ., multiply, (]
[;, final, T, mx01, =, m, [, 0, ], [, 0, ], ., multiply, (, x01, ), ., add, (]
[;, final, T, mx01, =, m, [, 0, ], [, 0, ], ., multiply, (, x01, ), ., add, (]
[;, final, T, mx01, =, m, [, 0, ], [, 0, ], ., multiply, (, x01, ), ., add, (]
[;, final, T, mx01, =, m, [, 0, ], [, 0, ], ., multiply, (, x01, ), ., add, (]
[T, mx01, =, m, [, 0, ], [, 0, ], ., multiply, (, x01, ), ., add, (, m, []
[m, [, 0, ], [, 0, ], ., multiply, (, x01, ), ., add, (, m, [, 1, ], []
[0, ], ., multiply, (, x01, ), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (]
[), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (, x11, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (, x11, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (, x11, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (, x11, ), ), ., add, (]
[add, (, m, [, 1, ], [, 0, ], ., multiply, (, x11, ), ), ., add, (, m, []
[[, 1, ], [, 0, ], ., multiply, (, x11, ), ), ., add, (, m, [, 2, ], []
[], ., multiply, (, x11, ), ), ., add, (, m, [, 2, ], [, 0, ], ., multiply, (]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x21, ), ), ;, final, T, mx11, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x21, ), ), ;, final, T, mx11, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x21, ), ), ;, final, T, mx11, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x21, ), ), ;, final, T, mx11, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x21, ), ), ;, final, T, mx11, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x21, ), ), ;, final, T, mx11, =]
[m, [, 2, ], [, 0, ], ., multiply, (, x21, ), ), ;, final, T, mx11, =, m, []
[], [, 0, ], ., multiply, (, x21, ), ), ;, final, T, mx11, =, m, [, 0, ], []
[multiply, (, x21, ), ), ;, final, T, mx11, =, m, [, 0, ], [, 1, ], ., multiply, (]
[;, final, T, mx11, =, m, [, 0, ], [, 1, ], ., multiply, (, x01, ), ., add, (]
[;, final, T, mx11, =, m, [, 0, ], [, 1, ], ., multiply, (, x01, ), ., add, (]
[;, final, T, mx11, =, m, [, 0, ], [, 1, ], ., multiply, (, x01, ), ., add, (]
[;, final, T, mx11, =, m, [, 0, ], [, 1, ], ., multiply, (, x01, ), ., add, (]
[T, mx11, =, m, [, 0, ], [, 1, ], ., multiply, (, x01, ), ., add, (, m, []
[m, [, 0, ], [, 1, ], ., multiply, (, x01, ), ., add, (, m, [, 1, ], []
[1, ], ., multiply, (, x01, ), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (]
[), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (, x11, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (, x11, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (, x11, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (, x11, ), ), ., add, (]
[add, (, m, [, 1, ], [, 1, ], ., multiply, (, x11, ), ), ., add, (, m, []
[[, 1, ], [, 1, ], ., multiply, (, x11, ), ), ., add, (, m, [, 2, ], []
[], ., multiply, (, x11, ), ), ., add, (, m, [, 2, ], [, 1, ], ., multiply, (]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x21, ), ), ;, final, T, mx21, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x21, ), ), ;, final, T, mx21, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x21, ), ), ;, final, T, mx21, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x21, ), ), ;, final, T, mx21, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x21, ), ), ;, final, T, mx21, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x21, ), ), ;, final, T, mx21, =]
[m, [, 2, ], [, 1, ], ., multiply, (, x21, ), ), ;, final, T, mx21, =, m, []
[], [, 1, ], ., multiply, (, x21, ), ), ;, final, T, mx21, =, m, [, 0, ], []
[multiply, (, x21, ), ), ;, final, T, mx21, =, m, [, 0, ], [, 2, ], ., multiply, (]
[;, final, T, mx21, =, m, [, 0, ], [, 2, ], ., multiply, (, x01, ), ., add, (]
[;, final, T, mx21, =, m, [, 0, ], [, 2, ], ., multiply, (, x01, ), ., add, (]
[;, final, T, mx21, =, m, [, 0, ], [, 2, ], ., multiply, (, x01, ), ., add, (]
[;, final, T, mx21, =, m, [, 0, ], [, 2, ], ., multiply, (, x01, ), ., add, (]
[T, mx21, =, m, [, 0, ], [, 2, ], ., multiply, (, x01, ), ., add, (, m, []
[m, [, 0, ], [, 2, ], ., multiply, (, x01, ), ., add, (, m, [, 1, ], []
[2, ], ., multiply, (, x01, ), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (]
[), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (, x11, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (, x11, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (, x11, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (, x11, ), ), ., add, (]
[add, (, m, [, 1, ], [, 2, ], ., multiply, (, x11, ), ), ., add, (, m, []
[[, 1, ], [, 2, ], ., multiply, (, x11, ), ), ., add, (, m, [, 2, ], []
[], ., multiply, (, x11, ), ), ., add, (, m, [, 2, ], [, 2, ], ., multiply, (]
[add, (, m, [, 2, ], [, 2, ], ., multiply, (, x21, ), ), ;, final, T, mx02, =]
[add, (, m, [, 2, ], [, 2, ], ., multiply, (, x21, ), ), ;, final, T, mx02, =]
[add, (, m, [, 2, ], [, 2, ], ., multiply, (, x21, ), ), ;, final, T, mx02, =]
[add, (, m, [, 2, ], [, 2, ], ., multiply, (, x21, ), ), ;, final, T, mx02, =]
[add, (, m, [, 2, ], [, 2, ], ., multiply, (, x21, ), ), ;, final, T, mx02, =]
[add, (, m, [, 2, ], [, 2, ], ., multiply, (, x21, ), ), ;, final, T, mx02, =]
[m, [, 2, ], [, 2, ], ., multiply, (, x21, ), ), ;, final, T, mx02, =, m, []
[], [, 2, ], ., multiply, (, x21, ), ), ;, final, T, mx02, =, m, [, 0, ], []
[multiply, (, x21, ), ), ;, final, T, mx02, =, m, [, 0, ], [, 0, ], ., multiply, (]
[;, final, T, mx02, =, m, [, 0, ], [, 0, ], ., multiply, (, x02, ), ., add, (]
[;, final, T, mx02, =, m, [, 0, ], [, 0, ], ., multiply, (, x02, ), ., add, (]
[;, final, T, mx02, =, m, [, 0, ], [, 0, ], ., multiply, (, x02, ), ., add, (]
[;, final, T, mx02, =, m, [, 0, ], [, 0, ], ., multiply, (, x02, ), ., add, (]
[T, mx02, =, m, [, 0, ], [, 0, ], ., multiply, (, x02, ), ., add, (, m, []
[m, [, 0, ], [, 0, ], ., multiply, (, x02, ), ., add, (, m, [, 1, ], []
[0, ], ., multiply, (, x02, ), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (]
[), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (, x12, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (, x12, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (, x12, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 0, ], ., multiply, (, x12, ), ), ., add, (]
[add, (, m, [, 1, ], [, 0, ], ., multiply, (, x12, ), ), ., add, (, m, []
[[, 1, ], [, 0, ], ., multiply, (, x12, ), ), ., add, (, m, [, 2, ], []
[], ., multiply, (, x12, ), ), ., add, (, m, [, 2, ], [, 0, ], ., multiply, (]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x22, ), ), ;, final, T, mx12, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x22, ), ), ;, final, T, mx12, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x22, ), ), ;, final, T, mx12, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x22, ), ), ;, final, T, mx12, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x22, ), ), ;, final, T, mx12, =]
[add, (, m, [, 2, ], [, 0, ], ., multiply, (, x22, ), ), ;, final, T, mx12, =]
[m, [, 2, ], [, 0, ], ., multiply, (, x22, ), ), ;, final, T, mx12, =, m, []
[], [, 0, ], ., multiply, (, x22, ), ), ;, final, T, mx12, =, m, [, 0, ], []
[multiply, (, x22, ), ), ;, final, T, mx12, =, m, [, 0, ], [, 1, ], ., multiply, (]
[;, final, T, mx12, =, m, [, 0, ], [, 1, ], ., multiply, (, x02, ), ., add, (]
[;, final, T, mx12, =, m, [, 0, ], [, 1, ], ., multiply, (, x02, ), ., add, (]
[;, final, T, mx12, =, m, [, 0, ], [, 1, ], ., multiply, (, x02, ), ., add, (]
[;, final, T, mx12, =, m, [, 0, ], [, 1, ], ., multiply, (, x02, ), ., add, (]
[T, mx12, =, m, [, 0, ], [, 1, ], ., multiply, (, x02, ), ., add, (, m, []
[m, [, 0, ], [, 1, ], ., multiply, (, x02, ), ., add, (, m, [, 1, ], []
[1, ], ., multiply, (, x02, ), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (]
[), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (, x12, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (, x12, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (, x12, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 1, ], ., multiply, (, x12, ), ), ., add, (]
[add, (, m, [, 1, ], [, 1, ], ., multiply, (, x12, ), ), ., add, (, m, []
[[, 1, ], [, 1, ], ., multiply, (, x12, ), ), ., add, (, m, [, 2, ], []
[], ., multiply, (, x12, ), ), ., add, (, m, [, 2, ], [, 1, ], ., multiply, (]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x22, ), ), ;, final, T, mx22, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x22, ), ), ;, final, T, mx22, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x22, ), ), ;, final, T, mx22, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x22, ), ), ;, final, T, mx22, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x22, ), ), ;, final, T, mx22, =]
[add, (, m, [, 2, ], [, 1, ], ., multiply, (, x22, ), ), ;, final, T, mx22, =]
[m, [, 2, ], [, 1, ], ., multiply, (, x22, ), ), ;, final, T, mx22, =, m, []
[], [, 1, ], ., multiply, (, x22, ), ), ;, final, T, mx22, =, m, [, 0, ], []
[multiply, (, x22, ), ), ;, final, T, mx22, =, m, [, 0, ], [, 2, ], ., multiply, (]
[;, final, T, mx22, =, m, [, 0, ], [, 2, ], ., multiply, (, x02, ), ., add, (]
[;, final, T, mx22, =, m, [, 0, ], [, 2, ], ., multiply, (, x02, ), ., add, (]
[;, final, T, mx22, =, m, [, 0, ], [, 2, ], ., multiply, (, x02, ), ., add, (]
[;, final, T, mx22, =, m, [, 0, ], [, 2, ], ., multiply, (, x02, ), ., add, (]
[T, mx22, =, m, [, 0, ], [, 2, ], ., multiply, (, x02, ), ., add, (, m, []
[m, [, 0, ], [, 2, ], ., multiply, (, x02, ), ., add, (, m, [, 1, ], []
[2, ], ., multiply, (, x02, ), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (]
[), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (, x12, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (, x12, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (, x12, ), ), ., add, (]
[), ., add, (, m, [, 1, ], [, 2, ], ., multiply, (, x12, ), ), ., add, (]
[add, (, m, [, 1, ], [, 2, ], ., multiply, (, x12, ), ), ., add, (, m, []
[[, 1, ], [, 2, ], ., multiply, (, x12, ), ), ., add, (, m, [, 2, ], []
[], ., multiply, (, x12, ), ), ., add, (, m, [, 2, ], [, 2, ], ., multiply, (]
[x12, ), ), ., add, (, m, [, 2, ], [, 2, ], ., multiply, (, x22, ), ), ;]
[x12, ), ), ., add, (, m, [, 2, ], [, 2, ], ., multiply, (, x22, ), ), ;]
[x12, ), ), ., add, (, m, [, 2, ], [, 2, ], ., multiply, (, x22, ), ), ;]
[), ., add, (, m, [, 2, ], [, 2, ], ., multiply, (, x22, ), ), ;, o, []
[(, m, [, 2, ], [, 2, ], ., multiply, (, x22, ), ), ;, o, [, 0, ], []
[2, ], [, 2, ], ., multiply, (, x22, ), ), ;, o, [, 0, ], [, 0, ], =]
[2, ], [, 2, ], ., multiply, (, x22, ), ), ;, o, [, 0, ], [, 0, ], =]
[], ., multiply, (, x22, ), ), ;, o, [, 0, ], [, 0, ], =, x00, ., subtract, (]
[], ., multiply, (, x22, ), ), ;, o, [, 0, ], [, 0, ], =, x00, ., subtract, (]
[], ., multiply, (, x22, ), ), ;, o, [, 0, ], [, 0, ], =, x00, ., subtract, (]
[], ., multiply, (, x22, ), ), ;, o, [, 0, ], [, 0, ], =, x00, ., subtract, (]
[], ., multiply, (, x22, ), ), ;, o, [, 0, ], [, 0, ], =, x00, ., subtract, (]
[], ., multiply, (, x22, ), ), ;, o, [, 0, ], [, 0, ], =, x00, ., subtract, (]
[x22, ), ), ;, o, [, 0, ], [, 0, ], =, x00, ., subtract, (, x00, ., multiply, (]
[[, 0, ], [, 0, ], =, x00, ., subtract, (, x00, ., multiply, (, mx00, ), ., add, (]
[[, 0, ], [, 0, ], =, x00, ., subtract, (, x00, ., multiply, (, mx00, ), ., add, (]
[0, ], =, x00, ., subtract, (, x00, ., multiply, (, mx00, ), ., add, (, x01, ., multiply, (]
[(, x00, ., multiply, (, mx00, ), ., add, (, x01, ., multiply, (, mx10, ), ), ., add, (]
[(, x00, ., multiply, (, mx00, ), ., add, (, x01, ., multiply, (, mx10, ), ), ., add, (]
[(, mx00, ), ., add, (, x01, ., multiply, (, mx10, ), ), ., add, (, x02, ., multiply, (]
[x01, ., multiply, (, mx10, ), ), ., add, (, x02, ., multiply, (, mx20, ), ), ., subtract, (]
[x01, ., multiply, (, mx10, ), ), ., add, (, x02, ., multiply, (, mx20, ), ), ., subtract, (]
[x01, ., multiply, (, mx10, ), ), ., add, (, x02, ., multiply, (, mx20, ), ), ., subtract, (]
[multiply, (, mx10, ), ), ., add, (, x02, ., multiply, (, mx20, ), ), ., subtract, (, m, []
[), ), ., add, (, x02, ., multiply, (, mx20, ), ), ., subtract, (, m, [, 0, ], []
[., multiply, (, mx20, ), ), ., subtract, (, m, [, 0, ], [, 0, ], ), ., multiply, (]
[), ), ., subtract, (, m, [, 0, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 0, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 0, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;]
[., subtract, (, m, [, 0, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;, o, []
[m, [, 0, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], []
[], [, 0, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 1, ], =]
[], [, 0, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 1, ], =]
[), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 1, ], =, x01, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 1, ], =, x01, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 1, ], =, x01, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 1, ], =, x01, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 1, ], =, x01, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 1, ], =, x01, ., subtract, (]
[0.5, ), ), ;, o, [, 0, ], [, 1, ], =, x01, ., subtract, (, x00, ., multiply, (]
[[, 0, ], [, 1, ], =, x01, ., subtract, (, x00, ., multiply, (, mx01, ), ., add, (]
[[, 0, ], [, 1, ], =, x01, ., subtract, (, x00, ., multiply, (, mx01, ), ., add, (]
[1, ], =, x01, ., subtract, (, x00, ., multiply, (, mx01, ), ., add, (, x01, ., multiply, (]
[(, x00, ., multiply, (, mx01, ), ., add, (, x01, ., multiply, (, mx11, ), ), ., add, (]
[(, x00, ., multiply, (, mx01, ), ., add, (, x01, ., multiply, (, mx11, ), ), ., add, (]
[(, mx01, ), ., add, (, x01, ., multiply, (, mx11, ), ), ., add, (, x02, ., multiply, (]
[x01, ., multiply, (, mx11, ), ), ., add, (, x02, ., multiply, (, mx21, ), ), ., subtract, (]
[x01, ., multiply, (, mx11, ), ), ., add, (, x02, ., multiply, (, mx21, ), ), ., subtract, (]
[x01, ., multiply, (, mx11, ), ), ., add, (, x02, ., multiply, (, mx21, ), ), ., subtract, (]
[multiply, (, mx11, ), ), ., add, (, x02, ., multiply, (, mx21, ), ), ., subtract, (, m, []
[), ), ., add, (, x02, ., multiply, (, mx21, ), ), ., subtract, (, m, [, 0, ], []
[., multiply, (, mx21, ), ), ., subtract, (, m, [, 0, ], [, 1, ], ), ., multiply, (]
[), ), ., subtract, (, m, [, 0, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 0, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 0, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;]
[., subtract, (, m, [, 0, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;, o, []
[m, [, 0, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], []
[], [, 1, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 2, ], =]
[], [, 1, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 2, ], =]
[), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 2, ], =, x02, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 2, ], =, x02, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 2, ], =, x02, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 2, ], =, x02, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 2, ], =, x02, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 0, ], [, 2, ], =, x02, ., subtract, (]
[0.5, ), ), ;, o, [, 0, ], [, 2, ], =, x02, ., subtract, (, x00, ., multiply, (]
[[, 0, ], [, 2, ], =, x02, ., subtract, (, x00, ., multiply, (, mx02, ), ., add, (]
[[, 0, ], [, 2, ], =, x02, ., subtract, (, x00, ., multiply, (, mx02, ), ., add, (]
[2, ], =, x02, ., subtract, (, x00, ., multiply, (, mx02, ), ., add, (, x01, ., multiply, (]
[(, x00, ., multiply, (, mx02, ), ., add, (, x01, ., multiply, (, mx12, ), ), ., add, (]
[(, x00, ., multiply, (, mx02, ), ., add, (, x01, ., multiply, (, mx12, ), ), ., add, (]
[(, mx02, ), ., add, (, x01, ., multiply, (, mx12, ), ), ., add, (, x02, ., multiply, (]
[x01, ., multiply, (, mx12, ), ), ., add, (, x02, ., multiply, (, mx22, ), ), ., subtract, (]
[x01, ., multiply, (, mx12, ), ), ., add, (, x02, ., multiply, (, mx22, ), ), ., subtract, (]
[x01, ., multiply, (, mx12, ), ), ., add, (, x02, ., multiply, (, mx22, ), ), ., subtract, (]
[multiply, (, mx12, ), ), ., add, (, x02, ., multiply, (, mx22, ), ), ., subtract, (, m, []
[), ), ., add, (, x02, ., multiply, (, mx22, ), ), ., subtract, (, m, [, 0, ], []
[., multiply, (, mx22, ), ), ., subtract, (, m, [, 0, ], [, 2, ], ), ., multiply, (]
[), ), ., subtract, (, m, [, 0, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 0, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 0, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;]
[., subtract, (, m, [, 0, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, o, []
[m, [, 0, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], []
[], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 0, ], =]
[], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 0, ], =]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 0, ], =, x10, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 0, ], =, x10, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 0, ], =, x10, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 0, ], =, x10, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 0, ], =, x10, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 0, ], =, x10, ., subtract, (]
[0.5, ), ), ;, o, [, 1, ], [, 0, ], =, x10, ., subtract, (, x10, ., multiply, (]
[[, 1, ], [, 0, ], =, x10, ., subtract, (, x10, ., multiply, (, mx00, ), ., add, (]
[[, 1, ], [, 0, ], =, x10, ., subtract, (, x10, ., multiply, (, mx00, ), ., add, (]
[0, ], =, x10, ., subtract, (, x10, ., multiply, (, mx00, ), ., add, (, x11, ., multiply, (]
[(, x10, ., multiply, (, mx00, ), ., add, (, x11, ., multiply, (, mx10, ), ), ., add, (]
[(, x10, ., multiply, (, mx00, ), ., add, (, x11, ., multiply, (, mx10, ), ), ., add, (]
[(, mx00, ), ., add, (, x11, ., multiply, (, mx10, ), ), ., add, (, x12, ., multiply, (]
[x11, ., multiply, (, mx10, ), ), ., add, (, x12, ., multiply, (, mx20, ), ), ., subtract, (]
[x11, ., multiply, (, mx10, ), ), ., add, (, x12, ., multiply, (, mx20, ), ), ., subtract, (]
[x11, ., multiply, (, mx10, ), ), ., add, (, x12, ., multiply, (, mx20, ), ), ., subtract, (]
[multiply, (, mx10, ), ), ., add, (, x12, ., multiply, (, mx20, ), ), ., subtract, (, m, []
[), ), ., add, (, x12, ., multiply, (, mx20, ), ), ., subtract, (, m, [, 1, ], []
[., multiply, (, mx20, ), ), ., subtract, (, m, [, 1, ], [, 0, ], ), ., multiply, (]
[), ), ., subtract, (, m, [, 1, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 1, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 1, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;]
[., subtract, (, m, [, 1, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;, o, []
[m, [, 1, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], []
[], [, 0, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 1, ], =]
[], [, 0, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 1, ], =]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 1, ], =, x11, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 1, ], =, x11, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 1, ], =, x11, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 1, ], =, x11, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 1, ], =, x11, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 1, ], =, x11, ., subtract, (]
[0.5, ), ), ;, o, [, 1, ], [, 1, ], =, x11, ., subtract, (, x10, ., multiply, (]
[[, 1, ], [, 1, ], =, x11, ., subtract, (, x10, ., multiply, (, mx01, ), ., add, (]
[[, 1, ], [, 1, ], =, x11, ., subtract, (, x10, ., multiply, (, mx01, ), ., add, (]
[1, ], =, x11, ., subtract, (, x10, ., multiply, (, mx01, ), ., add, (, x11, ., multiply, (]
[(, x10, ., multiply, (, mx01, ), ., add, (, x11, ., multiply, (, mx11, ), ), ., add, (]
[(, x10, ., multiply, (, mx01, ), ., add, (, x11, ., multiply, (, mx11, ), ), ., add, (]
[(, mx01, ), ., add, (, x11, ., multiply, (, mx11, ), ), ., add, (, x12, ., multiply, (]
[x11, ., multiply, (, mx11, ), ), ., add, (, x12, ., multiply, (, mx21, ), ), ., subtract, (]
[x11, ., multiply, (, mx11, ), ), ., add, (, x12, ., multiply, (, mx21, ), ), ., subtract, (]
[x11, ., multiply, (, mx11, ), ), ., add, (, x12, ., multiply, (, mx21, ), ), ., subtract, (]
[multiply, (, mx11, ), ), ., add, (, x12, ., multiply, (, mx21, ), ), ., subtract, (, m, []
[), ), ., add, (, x12, ., multiply, (, mx21, ), ), ., subtract, (, m, [, 1, ], []
[., multiply, (, mx21, ), ), ., subtract, (, m, [, 1, ], [, 1, ], ), ., multiply, (]
[), ), ., subtract, (, m, [, 1, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 1, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 1, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;]
[., subtract, (, m, [, 1, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;, o, []
[m, [, 1, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], []
[], [, 1, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 2, ], =]
[], [, 1, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 2, ], =]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 2, ], =, x12, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 2, ], =, x12, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 2, ], =, x12, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 2, ], =, x12, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 2, ], =, x12, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 1, ], [, 2, ], =, x12, ., subtract, (]
[0.5, ), ), ;, o, [, 1, ], [, 2, ], =, x12, ., subtract, (, x10, ., multiply, (]
[[, 1, ], [, 2, ], =, x12, ., subtract, (, x10, ., multiply, (, mx02, ), ., add, (]
[[, 1, ], [, 2, ], =, x12, ., subtract, (, x10, ., multiply, (, mx02, ), ., add, (]
[2, ], =, x12, ., subtract, (, x10, ., multiply, (, mx02, ), ., add, (, x11, ., multiply, (]
[(, x10, ., multiply, (, mx02, ), ., add, (, x11, ., multiply, (, mx12, ), ), ., add, (]
[(, x10, ., multiply, (, mx02, ), ., add, (, x11, ., multiply, (, mx12, ), ), ., add, (]
[(, mx02, ), ., add, (, x11, ., multiply, (, mx12, ), ), ., add, (, x12, ., multiply, (]
[x11, ., multiply, (, mx12, ), ), ., add, (, x12, ., multiply, (, mx22, ), ), ., subtract, (]
[x11, ., multiply, (, mx12, ), ), ., add, (, x12, ., multiply, (, mx22, ), ), ., subtract, (]
[x11, ., multiply, (, mx12, ), ), ., add, (, x12, ., multiply, (, mx22, ), ), ., subtract, (]
[multiply, (, mx12, ), ), ., add, (, x12, ., multiply, (, mx22, ), ), ., subtract, (, m, []
[), ), ., add, (, x12, ., multiply, (, mx22, ), ), ., subtract, (, m, [, 1, ], []
[., multiply, (, mx22, ), ), ., subtract, (, m, [, 1, ], [, 2, ], ), ., multiply, (]
[), ), ., subtract, (, m, [, 1, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 1, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 1, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;]
[., subtract, (, m, [, 1, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, o, []
[m, [, 1, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], []
[], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 0, ], =]
[], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 0, ], =]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 0, ], =, x20, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 0, ], =, x20, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 0, ], =, x20, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 0, ], =, x20, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 0, ], =, x20, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 0, ], =, x20, ., subtract, (]
[0.5, ), ), ;, o, [, 2, ], [, 0, ], =, x20, ., subtract, (, x20, ., multiply, (]
[[, 2, ], [, 0, ], =, x20, ., subtract, (, x20, ., multiply, (, mx00, ), ., add, (]
[[, 2, ], [, 0, ], =, x20, ., subtract, (, x20, ., multiply, (, mx00, ), ., add, (]
[0, ], =, x20, ., subtract, (, x20, ., multiply, (, mx00, ), ., add, (, x21, ., multiply, (]
[(, x20, ., multiply, (, mx00, ), ., add, (, x21, ., multiply, (, mx10, ), ), ., add, (]
[(, x20, ., multiply, (, mx00, ), ., add, (, x21, ., multiply, (, mx10, ), ), ., add, (]
[(, mx00, ), ., add, (, x21, ., multiply, (, mx10, ), ), ., add, (, x22, ., multiply, (]
[x21, ., multiply, (, mx10, ), ), ., add, (, x22, ., multiply, (, mx20, ), ), ., subtract, (]
[x21, ., multiply, (, mx10, ), ), ., add, (, x22, ., multiply, (, mx20, ), ), ., subtract, (]
[x21, ., multiply, (, mx10, ), ), ., add, (, x22, ., multiply, (, mx20, ), ), ., subtract, (]
[multiply, (, mx10, ), ), ., add, (, x22, ., multiply, (, mx20, ), ), ., subtract, (, m, []
[), ), ., add, (, x22, ., multiply, (, mx20, ), ), ., subtract, (, m, [, 2, ], []
[., multiply, (, mx20, ), ), ., subtract, (, m, [, 2, ], [, 0, ], ), ., multiply, (]
[), ), ., subtract, (, m, [, 2, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 2, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 2, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;]
[., subtract, (, m, [, 2, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;, o, []
[m, [, 2, ], [, 0, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], []
[], [, 0, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 1, ], =]
[], [, 0, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 1, ], =]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 1, ], =, x21, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 1, ], =, x21, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 1, ], =, x21, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 1, ], =, x21, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 1, ], =, x21, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 1, ], =, x21, ., subtract, (]
[0.5, ), ), ;, o, [, 2, ], [, 1, ], =, x21, ., subtract, (, x20, ., multiply, (]
[[, 2, ], [, 1, ], =, x21, ., subtract, (, x20, ., multiply, (, mx01, ), ., add, (]
[[, 2, ], [, 1, ], =, x21, ., subtract, (, x20, ., multiply, (, mx01, ), ., add, (]
[1, ], =, x21, ., subtract, (, x20, ., multiply, (, mx01, ), ., add, (, x21, ., multiply, (]
[(, x20, ., multiply, (, mx01, ), ., add, (, x21, ., multiply, (, mx11, ), ), ., add, (]
[(, x20, ., multiply, (, mx01, ), ., add, (, x21, ., multiply, (, mx11, ), ), ., add, (]
[(, mx01, ), ., add, (, x21, ., multiply, (, mx11, ), ), ., add, (, x22, ., multiply, (]
[x21, ., multiply, (, mx11, ), ), ., add, (, x22, ., multiply, (, mx21, ), ), ., subtract, (]
[x21, ., multiply, (, mx11, ), ), ., add, (, x22, ., multiply, (, mx21, ), ), ., subtract, (]
[x21, ., multiply, (, mx11, ), ), ., add, (, x22, ., multiply, (, mx21, ), ), ., subtract, (]
[multiply, (, mx11, ), ), ., add, (, x22, ., multiply, (, mx21, ), ), ., subtract, (, m, []
[), ), ., add, (, x22, ., multiply, (, mx21, ), ), ., subtract, (, m, [, 2, ], []
[., multiply, (, mx21, ), ), ., subtract, (, m, [, 2, ], [, 1, ], ), ., multiply, (]
[), ), ., subtract, (, m, [, 2, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 2, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;]
[), ), ., subtract, (, m, [, 2, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;]
[., subtract, (, m, [, 2, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;, o, []
[m, [, 2, ], [, 1, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], []
[], [, 1, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 2, ], =]
[], [, 1, ], ), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 2, ], =]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 2, ], =, x22, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 2, ], =, x22, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 2, ], =, x22, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 2, ], =, x22, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 2, ], =, x22, ., subtract, (]
[), ., multiply, (, 0.5, ), ), ;, o, [, 2, ], [, 2, ], =, x22, ., subtract, (]
[0.5, ), ), ;, o, [, 2, ], [, 2, ], =, x22, ., subtract, (, x20, ., multiply, (]
[[, 2, ], [, 2, ], =, x22, ., subtract, (, x20, ., multiply, (, mx02, ), ., add, (]
[[, 2, ], [, 2, ], =, x22, ., subtract, (, x20, ., multiply, (, mx02, ), ., add, (]
[2, ], =, x22, ., subtract, (, x20, ., multiply, (, mx02, ), ., add, (, x21, ., multiply, (]
[(, x20, ., multiply, (, mx02, ), ., add, (, x21, ., multiply, (, mx12, ), ), ., add, (]
[(, x20, ., multiply, (, mx02, ), ., add, (, x21, ., multiply, (, mx12, ), ), ., add, (]
[(, mx02, ), ., add, (, x21, ., multiply, (, mx12, ), ), ., add, (, x22, ., multiply, (]
[x21, ., multiply, (, mx12, ), ), ., add, (, x22, ., multiply, (, mx22, ), ), ., subtract, (]
[x21, ., multiply, (, mx12, ), ), ., add, (, x22, ., multiply, (, mx22, ), ), ., subtract, (]
[x21, ., multiply, (, mx12, ), ), ., add, (, x22, ., multiply, (, mx22, ), ), ., subtract, (]
[multiply, (, mx12, ), ), ., add, (, x22, ., multiply, (, mx22, ), ), ., subtract, (, m, []
[), ), ., add, (, x22, ., multiply, (, mx22, ), ), ., subtract, (, m, [, 2, ], []
[., multiply, (, mx22, ), ), ., subtract, (, m, [, 2, ], [, 2, ], ), ., multiply, (]
[(, m, [, 2, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, final, double, corr00, =]
[(, m, [, 2, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, final, double, corr00, =]
[(, m, [, 2, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, final, double, corr00, =]
[(, m, [, 2, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, final, double, corr00, =]
[(, m, [, 2, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, final, double, corr00, =]
[[, 2, ], [, 2, ], ), ., multiply, (, 0.5, ), ), ;, final, double, corr00, =, o, []
[[, 2, ], ), ., multiply, (, 0.5, ), ), ;, final, double, corr00, =, o, [, 0, ], []
[0.5, ), ), ;, final, double, corr00, =, o, [, 0, ], [, 0, ], ., getReal, (, ), -]
[0.5, ), ), ;, final, double, corr00, =, o, [, 0, ], [, 0, ], ., getReal, (, ), -]
[0.5, ), ), ;, final, double, corr00, =, o, [, 0, ], [, 0, ], ., getReal, (, ), -]
[0.5, ), ), ;, final, double, corr00, =, o, [, 0, ], [, 0, ], ., getReal, (, ), -]
[), ;, final, double, corr00, =, o, [, 0, ], [, 0, ], ., getReal, (, ), -, m, []
[double, corr00, =, o, [, 0, ], [, 0, ], ., getReal, (, ), -, m, [, 0, ], []
[getReal, (, ), -, m, [, 0, ], [, 0, ], ., getReal, (, ), ;, final, double, corr01, =]
[getReal, (, ), -, m, [, 0, ], [, 0, ], ., getReal, (, ), ;, final, double, corr01, =]
[getReal, (, ), -, m, [, 0, ], [, 0, ], ., getReal, (, ), ;, final, double, corr01, =]
[getReal, (, ), -, m, [, 0, ], [, 0, ], ., getReal, (, ), ;, final, double, corr01, =]
[getReal, (, ), -, m, [, 0, ], [, 0, ], ., getReal, (, ), ;, final, double, corr01, =]
[), -, m, [, 0, ], [, 0, ], ., getReal, (, ), ;, final, double, corr01, =, o, []
[[, 0, ], [, 0, ], ., getReal, (, ), ;, final, double, corr01, =, o, [, 0, ], []
[getReal, (, ), ;, final, double, corr01, =, o, [, 0, ], [, 1, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr01, =, o, [, 0, ], [, 1, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr01, =, o, [, 0, ], [, 1, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr01, =, o, [, 0, ], [, 1, ], ., getReal, (, ), -]
[), ;, final, double, corr01, =, o, [, 0, ], [, 1, ], ., getReal, (, ), -, m, []
[double, corr01, =, o, [, 0, ], [, 1, ], ., getReal, (, ), -, m, [, 0, ], []
[getReal, (, ), -, m, [, 0, ], [, 1, ], ., getReal, (, ), ;, final, double, corr02, =]
[getReal, (, ), -, m, [, 0, ], [, 1, ], ., getReal, (, ), ;, final, double, corr02, =]
[getReal, (, ), -, m, [, 0, ], [, 1, ], ., getReal, (, ), ;, final, double, corr02, =]
[getReal, (, ), -, m, [, 0, ], [, 1, ], ., getReal, (, ), ;, final, double, corr02, =]
[getReal, (, ), -, m, [, 0, ], [, 1, ], ., getReal, (, ), ;, final, double, corr02, =]
[), -, m, [, 0, ], [, 1, ], ., getReal, (, ), ;, final, double, corr02, =, o, []
[[, 0, ], [, 1, ], ., getReal, (, ), ;, final, double, corr02, =, o, [, 0, ], []
[getReal, (, ), ;, final, double, corr02, =, o, [, 0, ], [, 2, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr02, =, o, [, 0, ], [, 2, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr02, =, o, [, 0, ], [, 2, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr02, =, o, [, 0, ], [, 2, ], ., getReal, (, ), -]
[), ;, final, double, corr02, =, o, [, 0, ], [, 2, ], ., getReal, (, ), -, m, []
[double, corr02, =, o, [, 0, ], [, 2, ], ., getReal, (, ), -, m, [, 0, ], []
[getReal, (, ), -, m, [, 0, ], [, 2, ], ., getReal, (, ), ;, final, double, corr10, =]
[getReal, (, ), -, m, [, 0, ], [, 2, ], ., getReal, (, ), ;, final, double, corr10, =]
[getReal, (, ), -, m, [, 0, ], [, 2, ], ., getReal, (, ), ;, final, double, corr10, =]
[getReal, (, ), -, m, [, 0, ], [, 2, ], ., getReal, (, ), ;, final, double, corr10, =]
[getReal, (, ), -, m, [, 0, ], [, 2, ], ., getReal, (, ), ;, final, double, corr10, =]
[), -, m, [, 0, ], [, 2, ], ., getReal, (, ), ;, final, double, corr10, =, o, []
[[, 0, ], [, 2, ], ., getReal, (, ), ;, final, double, corr10, =, o, [, 1, ], []
[getReal, (, ), ;, final, double, corr10, =, o, [, 1, ], [, 0, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr10, =, o, [, 1, ], [, 0, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr10, =, o, [, 1, ], [, 0, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr10, =, o, [, 1, ], [, 0, ], ., getReal, (, ), -]
[), ;, final, double, corr10, =, o, [, 1, ], [, 0, ], ., getReal, (, ), -, m, []
[double, corr10, =, o, [, 1, ], [, 0, ], ., getReal, (, ), -, m, [, 1, ], []
[getReal, (, ), -, m, [, 1, ], [, 0, ], ., getReal, (, ), ;, final, double, corr11, =]
[getReal, (, ), -, m, [, 1, ], [, 0, ], ., getReal, (, ), ;, final, double, corr11, =]
[getReal, (, ), -, m, [, 1, ], [, 0, ], ., getReal, (, ), ;, final, double, corr11, =]
[getReal, (, ), -, m, [, 1, ], [, 0, ], ., getReal, (, ), ;, final, double, corr11, =]
[getReal, (, ), -, m, [, 1, ], [, 0, ], ., getReal, (, ), ;, final, double, corr11, =]
[), -, m, [, 1, ], [, 0, ], ., getReal, (, ), ;, final, double, corr11, =, o, []
[[, 1, ], [, 0, ], ., getReal, (, ), ;, final, double, corr11, =, o, [, 1, ], []
[getReal, (, ), ;, final, double, corr11, =, o, [, 1, ], [, 1, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr11, =, o, [, 1, ], [, 1, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr11, =, o, [, 1, ], [, 1, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr11, =, o, [, 1, ], [, 1, ], ., getReal, (, ), -]
[), ;, final, double, corr11, =, o, [, 1, ], [, 1, ], ., getReal, (, ), -, m, []
[double, corr11, =, o, [, 1, ], [, 1, ], ., getReal, (, ), -, m, [, 1, ], []
[getReal, (, ), -, m, [, 1, ], [, 1, ], ., getReal, (, ), ;, final, double, corr12, =]
[getReal, (, ), -, m, [, 1, ], [, 1, ], ., getReal, (, ), ;, final, double, corr12, =]
[getReal, (, ), -, m, [, 1, ], [, 1, ], ., getReal, (, ), ;, final, double, corr12, =]
[getReal, (, ), -, m, [, 1, ], [, 1, ], ., getReal, (, ), ;, final, double, corr12, =]
[getReal, (, ), -, m, [, 1, ], [, 1, ], ., getReal, (, ), ;, final, double, corr12, =]
[), -, m, [, 1, ], [, 1, ], ., getReal, (, ), ;, final, double, corr12, =, o, []
[[, 1, ], [, 1, ], ., getReal, (, ), ;, final, double, corr12, =, o, [, 1, ], []
[getReal, (, ), ;, final, double, corr12, =, o, [, 1, ], [, 2, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr12, =, o, [, 1, ], [, 2, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr12, =, o, [, 1, ], [, 2, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr12, =, o, [, 1, ], [, 2, ], ., getReal, (, ), -]
[), ;, final, double, corr12, =, o, [, 1, ], [, 2, ], ., getReal, (, ), -, m, []
[double, corr12, =, o, [, 1, ], [, 2, ], ., getReal, (, ), -, m, [, 1, ], []
[getReal, (, ), -, m, [, 1, ], [, 2, ], ., getReal, (, ), ;, final, double, corr20, =]
[getReal, (, ), -, m, [, 1, ], [, 2, ], ., getReal, (, ), ;, final, double, corr20, =]
[getReal, (, ), -, m, [, 1, ], [, 2, ], ., getReal, (, ), ;, final, double, corr20, =]
[getReal, (, ), -, m, [, 1, ], [, 2, ], ., getReal, (, ), ;, final, double, corr20, =]
[getReal, (, ), -, m, [, 1, ], [, 2, ], ., getReal, (, ), ;, final, double, corr20, =]
[), -, m, [, 1, ], [, 2, ], ., getReal, (, ), ;, final, double, corr20, =, o, []
[[, 1, ], [, 2, ], ., getReal, (, ), ;, final, double, corr20, =, o, [, 2, ], []
[getReal, (, ), ;, final, double, corr20, =, o, [, 2, ], [, 0, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr20, =, o, [, 2, ], [, 0, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr20, =, o, [, 2, ], [, 0, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr20, =, o, [, 2, ], [, 0, ], ., getReal, (, ), -]
[), ;, final, double, corr20, =, o, [, 2, ], [, 0, ], ., getReal, (, ), -, m, []
[double, corr20, =, o, [, 2, ], [, 0, ], ., getReal, (, ), -, m, [, 2, ], []
[getReal, (, ), -, m, [, 2, ], [, 0, ], ., getReal, (, ), ;, final, double, corr21, =]
[getReal, (, ), -, m, [, 2, ], [, 0, ], ., getReal, (, ), ;, final, double, corr21, =]
[getReal, (, ), -, m, [, 2, ], [, 0, ], ., getReal, (, ), ;, final, double, corr21, =]
[getReal, (, ), -, m, [, 2, ], [, 0, ], ., getReal, (, ), ;, final, double, corr21, =]
[getReal, (, ), -, m, [, 2, ], [, 0, ], ., getReal, (, ), ;, final, double, corr21, =]
[), -, m, [, 2, ], [, 0, ], ., getReal, (, ), ;, final, double, corr21, =, o, []
[[, 2, ], [, 0, ], ., getReal, (, ), ;, final, double, corr21, =, o, [, 2, ], []
[getReal, (, ), ;, final, double, corr21, =, o, [, 2, ], [, 1, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr21, =, o, [, 2, ], [, 1, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr21, =, o, [, 2, ], [, 1, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr21, =, o, [, 2, ], [, 1, ], ., getReal, (, ), -]
[), ;, final, double, corr21, =, o, [, 2, ], [, 1, ], ., getReal, (, ), -, m, []
[double, corr21, =, o, [, 2, ], [, 1, ], ., getReal, (, ), -, m, [, 2, ], []
[getReal, (, ), -, m, [, 2, ], [, 1, ], ., getReal, (, ), ;, final, double, corr22, =]
[getReal, (, ), -, m, [, 2, ], [, 1, ], ., getReal, (, ), ;, final, double, corr22, =]
[getReal, (, ), -, m, [, 2, ], [, 1, ], ., getReal, (, ), ;, final, double, corr22, =]
[getReal, (, ), -, m, [, 2, ], [, 1, ], ., getReal, (, ), ;, final, double, corr22, =]
[getReal, (, ), -, m, [, 2, ], [, 1, ], ., getReal, (, ), ;, final, double, corr22, =]
[), -, m, [, 2, ], [, 1, ], ., getReal, (, ), ;, final, double, corr22, =, o, []
[[, 2, ], [, 1, ], ., getReal, (, ), ;, final, double, corr22, =, o, [, 2, ], []
[getReal, (, ), ;, final, double, corr22, =, o, [, 2, ], [, 2, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr22, =, o, [, 2, ], [, 2, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr22, =, o, [, 2, ], [, 2, ], ., getReal, (, ), -]
[getReal, (, ), ;, final, double, corr22, =, o, [, 2, ], [, 2, ], ., getReal, (, ), -]
[), ;, final, double, corr22, =, o, [, 2, ], [, 2, ], ., getReal, (, ), -, m, []
[double, corr22, =, o, [, 2, ], [, 2, ], ., getReal, (, ), -, m, [, 2, ], []
[[, 2, ], ., getReal, (, ), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;]
[], ., getReal, (, ), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =]
[], ., getReal, (, ), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =]
[], ., getReal, (, ), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =]
[], ., getReal, (, ), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =]
[], ., getReal, (, ), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =]
[], ., getReal, (, ), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =]
[], ., getReal, (, ), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =]
[], ., getReal, (, ), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =]
[], ., getReal, (, ), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =]
[], ., getReal, (, ), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =]
[getReal, (, ), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =, corr00, *]
[), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =, corr00, *, corr00, +]
[), -, m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =, corr00, *, corr00, +]
[m, [, 2, ], [, 2, ], ., getReal, (, ), ;, fn1, =, corr00, *, corr00, +, corr01, *]
[2, ], [, 2, ], ., getReal, (, ), ;, fn1, =, corr00, *, corr00, +, corr01, *, corr01, +]
[2, ], [, 2, ], ., getReal, (, ), ;, fn1, =, corr00, *, corr00, +, corr01, *, corr01, +]
[[, 2, ], ., getReal, (, ), ;, fn1, =, corr00, *, corr00, +, corr01, *, corr01, +, corr02, *]
[], ., getReal, (, ), ;, fn1, =, corr00, *, corr00, +, corr01, *, corr01, +, corr02, *, corr02, +]
[], ., getReal, (, ), ;, fn1, =, corr00, *, corr00, +, corr01, *, corr01, +, corr02, *, corr02, +]
[getReal, (, ), ;, fn1, =, corr00, *, corr00, +, corr01, *, corr01, +, corr02, *, corr02, +, corr10, *]
[), ;, fn1, =, corr00, *, corr00, +, corr01, *, corr01, +, corr02, *, corr02, +, corr10, *, corr10, +]
[), ;, fn1, =, corr00, *, corr00, +, corr01, *, corr01, +, corr02, *, corr02, +, corr10, *, corr10, +]
[fn1, =, corr00, *, corr00, +, corr01, *, corr01, +, corr02, *, corr02, +, corr10, *, corr10, +, corr11, *]
[corr00, *, corr00, +, corr01, *, corr01, +, corr02, *, corr02, +, corr10, *, corr10, +, corr11, *, corr11, +]
[corr00, *, corr00, +, corr01, *, corr01, +, corr02, *, corr02, +, corr10, *, corr10, +, corr11, *, corr11, +]
[corr00, +, corr01, *, corr01, +, corr02, *, corr02, +, corr10, *, corr10, +, corr11, *, corr11, +, corr12, *]
[corr01, *, corr01, +, corr02, *, corr02, +, corr10, *, corr10, +, corr11, *, corr11, +, corr12, *, corr12, +]
[corr01, *, corr01, +, corr02, *, corr02, +, corr10, *, corr10, +, corr11, *, corr11, +, corr12, *, corr12, +]
[corr01, +, corr02, *, corr02, +, corr10, *, corr10, +, corr11, *, corr11, +, corr12, *, corr12, +, corr20, *]
[corr02, *, corr02, +, corr10, *, corr10, +, corr11, *, corr11, +, corr12, *, corr12, +, corr20, *, corr20, +]
[corr02, *, corr02, +, corr10, *, corr10, +, corr11, *, corr11, +, corr12, *, corr12, +, corr20, *, corr20, +]
[corr02, +, corr10, *, corr10, +, corr11, *, corr11, +, corr12, *, corr12, +, corr20, *, corr20, +, corr21, *]
[corr10, *, corr10, +, corr11, *, corr11, +, corr12, *, corr12, +, corr20, *, corr20, +, corr21, *, corr21, +]
[corr10, *, corr10, +, corr11, *, corr11, +, corr12, *, corr12, +, corr20, *, corr20, +, corr21, *, corr21, +]
[corr10, +, corr11, *, corr11, +, corr12, *, corr12, +, corr20, *, corr20, +, corr21, *, corr21, +, corr22, *]
[corr11, +, corr12, *, corr12, +, corr20, *, corr20, +, corr21, *, corr21, +, corr22, *, corr22, ;, if, (]
[corr11, +, corr12, *, corr12, +, corr20, *, corr20, +, corr21, *, corr21, +, corr22, *, corr22, ;, if, (]
[corr11, +, corr12, *, corr12, +, corr20, *, corr20, +, corr21, *, corr21, +, corr22, *, corr22, ;, if, (]
[corr12, +, corr20, *, corr20, +, corr21, *, corr21, +, corr22, *, corr22, ;, if, (, FastMath, ., abs, (]
[corr12, +, corr20, *, corr20, +, corr21, *, corr21, +, corr22, *, corr22, ;, if, (, FastMath, ., abs, (]
[corr20, *, corr20, +, corr21, *, corr21, +, corr22, *, corr22, ;, if, (, FastMath, ., abs, (, fn1, -]
[+, corr21, *, corr21, +, corr22, *, corr22, ;, if, (, FastMath, ., abs, (, fn1, -, fn, ), <=]
[+, corr22, *, corr22, ;, if, (, FastMath, ., abs, (, fn1, -, fn, ), <=, threshold, ), {, return]
[corr22, ;, if, (, FastMath, ., abs, (, fn1, -, fn, ), <=, threshold, ), {, return, o, ;, }]
[if, (, FastMath, ., abs, (, fn1, -, fn, ), <=, threshold, ), {, return, o, ;, }, x00, =]
[if, (, FastMath, ., abs, (, fn1, -, fn, ), <=, threshold, ), {, return, o, ;, }, x00, =]
[if, (, FastMath, ., abs, (, fn1, -, fn, ), <=, threshold, ), {, return, o, ;, }, x00, =]
[FastMath, ., abs, (, fn1, -, fn, ), <=, threshold, ), {, return, o, ;, }, x00, =, o, []
[(, fn1, -, fn, ), <=, threshold, ), {, return, o, ;, }, x00, =, o, [, 0, ], []
[fn, ), <=, threshold, ), {, return, o, ;, }, x00, =, o, [, 0, ], [, 0, ], ;]
[<=, threshold, ), {, return, o, ;, }, x00, =, o, [, 0, ], [, 0, ], ;, x01, =]
[<=, threshold, ), {, return, o, ;, }, x00, =, o, [, 0, ], [, 0, ], ;, x01, =]
[<=, threshold, ), {, return, o, ;, }, x00, =, o, [, 0, ], [, 0, ], ;, x01, =]
[), {, return, o, ;, }, x00, =, o, [, 0, ], [, 0, ], ;, x01, =, o, []
[o, ;, }, x00, =, o, [, 0, ], [, 0, ], ;, x01, =, o, [, 0, ], []
[x00, =, o, [, 0, ], [, 0, ], ;, x01, =, o, [, 0, ], [, 1, ], ;]
[o, [, 0, ], [, 0, ], ;, x01, =, o, [, 0, ], [, 1, ], ;, x02, =]
[o, [, 0, ], [, 0, ], ;, x01, =, o, [, 0, ], [, 1, ], ;, x02, =]
[o, [, 0, ], [, 0, ], ;, x01, =, o, [, 0, ], [, 1, ], ;, x02, =]
[0, ], [, 0, ], ;, x01, =, o, [, 0, ], [, 1, ], ;, x02, =, o, []
[0, ], ;, x01, =, o, [, 0, ], [, 1, ], ;, x02, =, o, [, 0, ], []
[x01, =, o, [, 0, ], [, 1, ], ;, x02, =, o, [, 0, ], [, 2, ], ;]
[o, [, 0, ], [, 1, ], ;, x02, =, o, [, 0, ], [, 2, ], ;, x10, =]
[o, [, 0, ], [, 1, ], ;, x02, =, o, [, 0, ], [, 2, ], ;, x10, =]
[o, [, 0, ], [, 1, ], ;, x02, =, o, [, 0, ], [, 2, ], ;, x10, =]
[0, ], [, 1, ], ;, x02, =, o, [, 0, ], [, 2, ], ;, x10, =, o, []
[1, ], ;, x02, =, o, [, 0, ], [, 2, ], ;, x10, =, o, [, 1, ], []
[x02, =, o, [, 0, ], [, 2, ], ;, x10, =, o, [, 1, ], [, 0, ], ;]
[o, [, 0, ], [, 2, ], ;, x10, =, o, [, 1, ], [, 0, ], ;, x11, =]
[o, [, 0, ], [, 2, ], ;, x10, =, o, [, 1, ], [, 0, ], ;, x11, =]
[o, [, 0, ], [, 2, ], ;, x10, =, o, [, 1, ], [, 0, ], ;, x11, =]
[0, ], [, 2, ], ;, x10, =, o, [, 1, ], [, 0, ], ;, x11, =, o, []
[2, ], ;, x10, =, o, [, 1, ], [, 0, ], ;, x11, =, o, [, 1, ], []
[x10, =, o, [, 1, ], [, 0, ], ;, x11, =, o, [, 1, ], [, 1, ], ;]
[o, [, 1, ], [, 0, ], ;, x11, =, o, [, 1, ], [, 1, ], ;, x12, =]
[o, [, 1, ], [, 0, ], ;, x11, =, o, [, 1, ], [, 1, ], ;, x12, =]
[o, [, 1, ], [, 0, ], ;, x11, =, o, [, 1, ], [, 1, ], ;, x12, =]
[1, ], [, 0, ], ;, x11, =, o, [, 1, ], [, 1, ], ;, x12, =, o, []
[0, ], ;, x11, =, o, [, 1, ], [, 1, ], ;, x12, =, o, [, 1, ], []
[x11, =, o, [, 1, ], [, 1, ], ;, x12, =, o, [, 1, ], [, 2, ], ;]
[o, [, 1, ], [, 1, ], ;, x12, =, o, [, 1, ], [, 2, ], ;, x20, =]
[o, [, 1, ], [, 1, ], ;, x12, =, o, [, 1, ], [, 2, ], ;, x20, =]
[o, [, 1, ], [, 1, ], ;, x12, =, o, [, 1, ], [, 2, ], ;, x20, =]
[1, ], [, 1, ], ;, x12, =, o, [, 1, ], [, 2, ], ;, x20, =, o, []
[1, ], ;, x12, =, o, [, 1, ], [, 2, ], ;, x20, =, o, [, 2, ], []
[x12, =, o, [, 1, ], [, 2, ], ;, x20, =, o, [, 2, ], [, 0, ], ;]
[o, [, 1, ], [, 2, ], ;, x20, =, o, [, 2, ], [, 0, ], ;, x21, =]
[o, [, 1, ], [, 2, ], ;, x20, =, o, [, 2, ], [, 0, ], ;, x21, =]
[o, [, 1, ], [, 2, ], ;, x20, =, o, [, 2, ], [, 0, ], ;, x21, =]
[1, ], [, 2, ], ;, x20, =, o, [, 2, ], [, 0, ], ;, x21, =, o, []
[2, ], ;, x20, =, o, [, 2, ], [, 0, ], ;, x21, =, o, [, 2, ], []
[x20, =, o, [, 2, ], [, 0, ], ;, x21, =, o, [, 2, ], [, 1, ], ;]
[o, [, 2, ], [, 0, ], ;, x21, =, o, [, 2, ], [, 1, ], ;, x22, =]
[o, [, 2, ], [, 0, ], ;, x21, =, o, [, 2, ], [, 1, ], ;, x22, =]
[o, [, 2, ], [, 0, ], ;, x21, =, o, [, 2, ], [, 1, ], ;, x22, =]
[2, ], [, 0, ], ;, x21, =, o, [, 2, ], [, 1, ], ;, x22, =, o, []
[0, ], ;, x21, =, o, [, 2, ], [, 1, ], ;, x22, =, o, [, 2, ], []
[x21, =, o, [, 2, ], [, 1, ], ;, x22, =, o, [, 2, ], [, 2, ], ;]
[o, [, 2, ], [, 1, ], ;, x22, =, o, [, 2, ], [, 2, ], ;, fn, =]
[[, 1, ], ;, x22, =, o, [, 2, ], [, 2, ], ;, fn, =, fn1, ;, }, throw]
[;, x22, =, o, [, 2, ], [, 2, ], ;, fn, =, fn1, ;, }, throw, new, NotARotationMatrixException, (]
[;, x22, =, o, [, 2, ], [, 2, ], ;, fn, =, fn1, ;, }, throw, new, NotARotationMatrixException, (]
[[, 2, ], [, 2, ], ;, fn, =, fn1, ;, }, throw, new, NotARotationMatrixException, (, LocalizedFormats, ., UNABLE_TO_ORTHOGONOLIZE_MATRIX, ,]
[[, 2, ], [, 2, ], ;, fn, =, fn1, ;, }, throw, new, NotARotationMatrixException, (, LocalizedFormats, ., UNABLE_TO_ORTHOGONOLIZE_MATRIX, ,]
[], [, 2, ], ;, fn, =, fn1, ;, }, throw, new, NotARotationMatrixException, (, LocalizedFormats, ., UNABLE_TO_ORTHOGONOLIZE_MATRIX, ,, i, -]
[>, T, distance, (, final, FieldRotation, <, T, >, r1, ,, final, FieldRotation, <, T, >, r2, ), {, return]
[>, T, distance, (, final, FieldRotation, <, T, >, r1, ,, final, FieldRotation, <, T, >, r2, ), {, return]
[>, T, distance, (, final, FieldRotation, <, T, >, r1, ,, final, FieldRotation, <, T, >, r2, ), {, return]
[final, FieldRotation, <, T, >, r1, ,, final, FieldRotation, <, T, >, r2, ), {, return, r1, ., applyInverseTo, (]
