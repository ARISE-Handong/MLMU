[;, import, java, ., util, ., List, ;, public, class, ByPathWarningsGuard, extends, WarningsGuard, {, private, static, final, long, serialVersionUID, =]
[private, CheckLevel, level, ;, private, ByPathWarningsGuard, (, List, <, String, >, paths, ,, boolean, include, ,, CheckLevel, level, ), {]
[private, CheckLevel, level, ;, private, ByPathWarningsGuard, (, List, <, String, >, paths, ,, boolean, include, ,, CheckLevel, level, ), {]
[private, ByPathWarningsGuard, (, List, <, String, >, paths, ,, boolean, include, ,, CheckLevel, level, ), {, Preconditions, ., checkArgument, (]
[private, ByPathWarningsGuard, (, List, <, String, >, paths, ,, boolean, include, ,, CheckLevel, level, ), {, Preconditions, ., checkArgument, (]
[(, List, <, String, >, paths, ,, boolean, include, ,, CheckLevel, level, ), {, Preconditions, ., checkArgument, (, paths, !=]
[String, >, paths, ,, boolean, include, ,, CheckLevel, level, ), {, Preconditions, ., checkArgument, (, paths, !=, null, ), ;]
[String, >, paths, ,, boolean, include, ,, CheckLevel, level, ), {, Preconditions, ., checkArgument, (, paths, !=, null, ), ;]
[boolean, include, ,, CheckLevel, level, ), {, Preconditions, ., checkArgument, (, paths, !=, null, ), ;, Preconditions, ., checkArgument, (]
[boolean, include, ,, CheckLevel, level, ), {, Preconditions, ., checkArgument, (, paths, !=, null, ), ;, Preconditions, ., checkArgument, (]
[boolean, include, ,, CheckLevel, level, ), {, Preconditions, ., checkArgument, (, paths, !=, null, ), ;, Preconditions, ., checkArgument, (]
[,, CheckLevel, level, ), {, Preconditions, ., checkArgument, (, paths, !=, null, ), ;, Preconditions, ., checkArgument, (, level, ==]
[,, CheckLevel, level, ), {, Preconditions, ., checkArgument, (, paths, !=, null, ), ;, Preconditions, ., checkArgument, (, level, ==]
[{, Preconditions, ., checkArgument, (, paths, !=, null, ), ;, Preconditions, ., checkArgument, (, level, ==, CheckLevel, ., OFF, ||]
[{, Preconditions, ., checkArgument, (, paths, !=, null, ), ;, Preconditions, ., checkArgument, (, level, ==, CheckLevel, ., OFF, ||]
[., checkArgument, (, paths, !=, null, ), ;, Preconditions, ., checkArgument, (, level, ==, CheckLevel, ., OFF, ||, level, ==]
[., checkArgument, (, paths, !=, null, ), ;, Preconditions, ., checkArgument, (, level, ==, CheckLevel, ., OFF, ||, level, ==]
[null, ), ;, Preconditions, ., checkArgument, (, level, ==, CheckLevel, ., OFF, ||, level, ==, CheckLevel, ., ERROR, ), ;]
[null, ), ;, Preconditions, ., checkArgument, (, level, ==, CheckLevel, ., OFF, ||, level, ==, CheckLevel, ., ERROR, ), ;]
[., checkArgument, (, level, ==, CheckLevel, ., OFF, ||, level, ==, CheckLevel, ., ERROR, ), ;, this, ., paths, =]
[(, level, ==, CheckLevel, ., OFF, ||, level, ==, CheckLevel, ., ERROR, ), ;, this, ., paths, =, paths, ;]
[(, level, ==, CheckLevel, ., OFF, ||, level, ==, CheckLevel, ., ERROR, ), ;, this, ., paths, =, paths, ;]
[., OFF, ||, level, ==, CheckLevel, ., ERROR, ), ;, this, ., paths, =, paths, ;, this, ., include, =]
[||, level, ==, CheckLevel, ., ERROR, ), ;, this, ., paths, =, paths, ;, this, ., include, =, include, ;]
[||, level, ==, CheckLevel, ., ERROR, ), ;, this, ., paths, =, paths, ;, this, ., include, =, include, ;]
[., ERROR, ), ;, this, ., paths, =, paths, ;, this, ., include, =, include, ;, this, ., level, =]
[), ;, this, ., paths, =, paths, ;, this, ., include, =, include, ;, this, ., level, =, level, ;]
[), ;, this, ., paths, =, paths, ;, this, ., include, =, include, ;, this, ., level, =, level, ;]
[paths, =, paths, ;, this, ., include, =, include, ;, this, ., level, =, level, ;, this, ., priority, =]
[paths, =, paths, ;, this, ., include, =, include, ;, this, ., level, =, level, ;, this, ., priority, =]
[paths, =, paths, ;, this, ., include, =, include, ;, this, ., level, =, level, ;, this, ., priority, =]
[paths, ;, this, ., include, =, include, ;, this, ., level, =, level, ;, this, ., priority, =, level, ==]
[paths, ;, this, ., include, =, include, ;, this, ., level, =, level, ;, this, ., priority, =, level, ==]
[include, =, include, ;, this, ., level, =, level, ;, this, ., priority, =, level, ==, CheckLevel, ., ERROR, ?]
[include, =, include, ;, this, ., level, =, level, ;, this, ., priority, =, level, ==, CheckLevel, ., ERROR, ?]
[include, =, include, ;, this, ., level, =, level, ;, this, ., priority, =, level, ==, CheckLevel, ., ERROR, ?]
[include, =, include, ;, this, ., level, =, level, ;, this, ., priority, =, level, ==, CheckLevel, ., ERROR, ?]
[level, ;, this, ., priority, =, level, ==, CheckLevel, ., ERROR, ?, WarningsGuard, ., Priority, ., STRICT, ., value, :]
[level, ;, this, ., priority, =, level, ==, CheckLevel, ., ERROR, ?, WarningsGuard, ., Priority, ., STRICT, ., value, :]
[level, ;, this, ., priority, =, level, ==, CheckLevel, ., ERROR, ?, WarningsGuard, ., Priority, ., STRICT, ., value, :]
[level, ;, this, ., priority, =, level, ==, CheckLevel, ., ERROR, ?, WarningsGuard, ., Priority, ., STRICT, ., value, :]
[., value, ;, }, public, static, ByPathWarningsGuard, forPath, (, List, <, String, >, paths, ,, CheckLevel, level, ), {, return]
[}, public, static, ByPathWarningsGuard, forPath, (, List, <, String, >, paths, ,, CheckLevel, level, ), {, return, new, ByPathWarningsGuard, (]
[static, ByPathWarningsGuard, forPath, (, List, <, String, >, paths, ,, CheckLevel, level, ), {, return, new, ByPathWarningsGuard, (, paths, ,]
[forPath, (, List, <, String, >, paths, ,, CheckLevel, level, ), {, return, new, ByPathWarningsGuard, (, paths, ,, true, ,]
[level, ), ;, }, public, static, ByPathWarningsGuard, exceptPath, (, List, <, String, >, paths, ,, CheckLevel, level, ), {, return]
[}, public, static, ByPathWarningsGuard, exceptPath, (, List, <, String, >, paths, ,, CheckLevel, level, ), {, return, new, ByPathWarningsGuard, (]
[static, ByPathWarningsGuard, exceptPath, (, List, <, String, >, paths, ,, CheckLevel, level, ), {, return, new, ByPathWarningsGuard, (, paths, ,]
[exceptPath, (, List, <, String, >, paths, ,, CheckLevel, level, ), {, return, new, ByPathWarningsGuard, (, paths, ,, false, ,]
[false, ,, level, ), ;, }, @, Override, public, CheckLevel, level, (, JSError, error, ), {, final, String, errorPath, =]
[false, ,, level, ), ;, }, @, Override, public, CheckLevel, level, (, JSError, error, ), {, final, String, errorPath, =]
[Override, public, CheckLevel, level, (, JSError, error, ), {, final, String, errorPath, =, error, ., sourceName, ;, CheckLevel, defaultLevel, =]
[Override, public, CheckLevel, level, (, JSError, error, ), {, final, String, errorPath, =, error, ., sourceName, ;, CheckLevel, defaultLevel, =]
[{, final, String, errorPath, =, error, ., sourceName, ;, CheckLevel, defaultLevel, =, error, ., getDefaultLevel, (, ), ;, if, (]
[{, final, String, errorPath, =, error, ., sourceName, ;, CheckLevel, defaultLevel, =, error, ., getDefaultLevel, (, ), ;, if, (]
[{, final, String, errorPath, =, error, ., sourceName, ;, CheckLevel, defaultLevel, =, error, ., getDefaultLevel, (, ), ;, if, (]
[String, errorPath, =, error, ., sourceName, ;, CheckLevel, defaultLevel, =, error, ., getDefaultLevel, (, ), ;, if, (, defaultLevel, !=]
[String, errorPath, =, error, ., sourceName, ;, CheckLevel, defaultLevel, =, error, ., getDefaultLevel, (, ), ;, if, (, defaultLevel, !=]
[., sourceName, ;, CheckLevel, defaultLevel, =, error, ., getDefaultLevel, (, ), ;, if, (, defaultLevel, !=, CheckLevel, ., ERROR, &&]
[., sourceName, ;, CheckLevel, defaultLevel, =, error, ., getDefaultLevel, (, ), ;, if, (, defaultLevel, !=, CheckLevel, ., ERROR, &&]
[;, CheckLevel, defaultLevel, =, error, ., getDefaultLevel, (, ), ;, if, (, defaultLevel, !=, CheckLevel, ., ERROR, &&, errorPath, !=]
[getDefaultLevel, (, ), ;, if, (, defaultLevel, !=, CheckLevel, ., ERROR, &&, errorPath, !=, null, ), {, boolean, inPath, =]
[!=, CheckLevel, ., ERROR, &&, errorPath, !=, null, ), {, boolean, inPath, =, false, ;, for, (, String, path, :]
[ERROR, &&, errorPath, !=, null, ), {, boolean, inPath, =, false, ;, for, (, String, path, :, paths, ), {]
[errorPath, !=, null, ), {, boolean, inPath, =, false, ;, for, (, String, path, :, paths, ), {, inPath, |=]
[errorPath, !=, null, ), {, boolean, inPath, =, false, ;, for, (, String, path, :, paths, ), {, inPath, |=]
[{, boolean, inPath, =, false, ;, for, (, String, path, :, paths, ), {, inPath, |=, errorPath, ., contains, (]
[for, (, String, path, :, paths, ), {, inPath, |=, errorPath, ., contains, (, path, ), ;, }, if, (]
[for, (, String, path, :, paths, ), {, inPath, |=, errorPath, ., contains, (, path, ), ;, }, if, (]
[String, path, :, paths, ), {, inPath, |=, errorPath, ., contains, (, path, ), ;, }, if, (, inPath, ==]
[), {, inPath, |=, errorPath, ., contains, (, path, ), ;, }, if, (, inPath, ==, include, ), {, return]
[., contains, (, path, ), ;, }, if, (, inPath, ==, include, ), {, return, level, ;, }, }, return]
[), {, return, level, ;, }, }, return, null, ;, }, @, Override, protected, int, getPriority, (, ), {, return]
