[;, protected, ObjectList, seriesBarWidthList, ;, public, LayeredBarRenderer, (, ), {, super, (, ), ;, this, ., seriesBarWidthList, =, new, ObjectList]
[;, protected, ObjectList, seriesBarWidthList, ;, public, LayeredBarRenderer, (, ), {, super, (, ), ;, this, ., seriesBarWidthList, =, new, ObjectList]
[=, new, ObjectList, (, ), ;, }, public, double, getSeriesBarWidth, (, int, series, ), {, double, result, =, Double, .]
[., seriesBarWidthList, =, new, ObjectList, (, ), ;, }, public, double, getSeriesBarWidth, (, int, series, ), {, double, result, =]
[;, }, public, double, getSeriesBarWidth, (, int, series, ), {, double, result, =, Double, ., NaN, ;, Number, n, =]
[;, Number, n, =, (, Number, ), this, ., seriesBarWidthList, ., get, (, series, ), ;, if, (, n, !=]
[., NaN, ;, Number, n, =, (, Number, ), this, ., seriesBarWidthList, ., get, (, series, ), ;, if, (]
[;, if, (, n, !=, null, ), {, result, =, n, ., doubleValue, (, ), ;, }, return, result, ;]
[;, if, (, n, !=, null, ), {, result, =, n, ., doubleValue, (, ), ;, }, return, result, ;]
[., get, (, series, ), ;, if, (, n, !=, null, ), {, result, =, n, ., doubleValue, (, )]
[., seriesBarWidthList, ., get, (, series, ), ;, if, (, n, !=, null, ), {, result, =, n, ., doubleValue]
[), ;, if, (, n, !=, null, ), {, result, =, n, ., doubleValue, (, ), ;, }, return, result]
[), {, result, =, n, ., doubleValue, (, ), ;, }, return, result, ;, }, public, void, setSeriesBarWidth, (, int]
[!=, null, ), {, result, =, n, ., doubleValue, (, ), ;, }, return, result, ;, }, public, void, setSeriesBarWidth]
[), {, result, =, n, ., doubleValue, (, ), ;, }, return, result, ;, }, public, void, setSeriesBarWidth, (, int]
[=, n, ., doubleValue, (, ), ;, }, return, result, ;, }, public, void, setSeriesBarWidth, (, int, series, ,, double]
[;, }, return, result, ;, }, public, void, setSeriesBarWidth, (, int, series, ,, double, width, ), {, this, ., seriesBarWidthList]
[., doubleValue, (, ), ;, }, return, result, ;, }, public, void, setSeriesBarWidth, (, int, series, ,, double, width, )]
[;, }, public, void, setSeriesBarWidth, (, int, series, ,, double, width, ), {, this, ., seriesBarWidthList, ., set, (, series]
[;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis]
[., set, (, series, ,, new, Double, (, width, ), ), ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,]
[., seriesBarWidthList, ., set, (, series, ,, new, Double, (, width, ), ), ;, }, protected, void, calculateBarWidth, (, CategoryPlot]
[,, new, Double, (, width, ), ), ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset]
[), ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {]
[), ), ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, )]
[;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =]
[,, dataset, ), ;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;]
[), ;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows]
[), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, dataset, ., getRowCount, (, ), ;]
[!=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, dataset, ., getRowCount, (]
[), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, dataset, ., getRowCount, (, ), ;]
[;, int, rows, =, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, .]
[., getColumnCount, (, ), ;, int, rows, =, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation]
[;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation]
[., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if]
[;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else]
[., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, .]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;]
[., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, .]
[), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;]
[==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *]
[), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;]
[., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (]
[=, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =]
[;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (, columns, >]
[., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;]
[;, double, categoryMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, )]
[*, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis]
[;, double, categoryMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, )]
[;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =]
[), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis]
[>, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1]
[), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis]
[=, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (]
[;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (]
[., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -]
[;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[*, (, 1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if]
[;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min]
[-, categoryMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math]
[-, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, )]
[-, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, (, rows]
[-, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, )]
[., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, (, rows, *, columns]
[-, categoryMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math]
[., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state]
[), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min]
[), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, dataset, ., getColumnCount, (, ), ), ,]
[>, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, dataset, ., getColumnCount, (, )]
[), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, dataset, ., getColumnCount, (]
[*, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, dataset, .]
[), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, dataset, ., getColumnCount, (]
[), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, dataset, ., getColumnCount, (, ), ), ,]
[;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }, }]
[., setBarWidth, (, Math, ., min, (, used, /, (, dataset, ., getColumnCount, (, ), ), ,, maxWidth, ), )]
[), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }]
[., min, (, used, /, (, dataset, ., getColumnCount, (, ), ), ,, maxWidth, ), ), ;, }, else, {]
[,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, )]
[/, (, dataset, ., getColumnCount, (, ), ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (]
[,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, )]
[), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth]
[., getColumnCount, (, ), ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min]
[), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;]
[;, }, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,]
[., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }, }, }, public, void, drawItem, (]
[), ;, }, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot]
[., min, (, used, ,, maxWidth, ), ), ;, }, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState]
[,, maxWidth, ), ), ;, }, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea]
[), ), ;, }, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,]
[., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,]
[), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,]
[==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,]
[), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,]
[., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,]
[,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;]
[,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, else]
[,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, else, if, (]
[,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, else, if, (, orientation, ==]
[,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, else, if, (, orientation, ==, PlotOrientation, .]
[,, dataset, ,, row, ,, column, ,, selected, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[,, row, ,, column, ,, selected, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem]
[,, column, ,, selected, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2]
[,, selected, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state]
[), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea]
[), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,]
[==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,]
[), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,]
[., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,]
[;, }, }, protected, void, drawHorizontalItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryAxis]
[,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;]
[,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }]
[,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, void]
[,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, void, drawHorizontalItem, (]
[,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, void, drawHorizontalItem, (, Graphics2D, g2]
[,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, void, drawHorizontalItem, (, Graphics2D, g2, ,, CategoryItemRendererState]
[,, row, ,, column, ,, selected, ), ;, }, }, protected, void, drawHorizontalItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,]
[,, column, ,, selected, ), ;, }, }, protected, void, drawHorizontalItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea]
[,, selected, ), ;, }, }, protected, void, drawHorizontalItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot]
[), ;, }, }, protected, void, drawHorizontalItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,]
[;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;]
[., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value]
[,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue]
[), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, )]
[), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, double, base, =, 0.0, ;, double]
[==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, double, base, =, 0.0]
[), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, double, base, =, 0.0, ;, double]
[;, double, base, =, 0.0, ;, double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =, rangeAxis, .]
[., doubleValue, (, ), ;, double, base, =, 0.0, ;, double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double]
[;, double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if]
[;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (, uclip, <=, 0.0, ), {, if, (, value]
[., getLowerBound, (, ), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (, uclip, <=, 0.0, )]
[;, if, (, uclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =]
[., getUpperBound, (, ), ;, if, (, uclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {, return]
[), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (, value, <=]
[<=, 0.0, ), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (]
[), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (, value, <=]
[), {, return, ;, }, base, =, uclip, ;, if, (, value, <=, lclip, ), {, value, =, lclip, ;]
[>=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (, value, <=, lclip, ), {, value, =]
[), {, return, ;, }, base, =, uclip, ;, if, (, value, <=, lclip, ), {, value, =, lclip, ;]
[=, uclip, ;, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (, lclip]
[;, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0]
[), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=]
[<=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (]
[), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=]
[=, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {]
[;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {, value, =]
[), {, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (, value, <=]
[<=, 0.0, ), {, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (]
[), {, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (, value, <=]
[), {, value, =, uclip, ;, }, else, {, if, (, value, <=, lclip, ), {, value, =, lclip, ;]
[>=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (, value, <=, lclip, ), {, value, =]
[), {, value, =, uclip, ;, }, else, {, if, (, value, <=, lclip, ), {, value, =, lclip, ;]
[=, uclip, ;, }, else, {, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, }]
[;, }, else, {, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, }, else, {]
[), {, value, =, lclip, ;, }, }, }, else, {, if, (, value, <=, lclip, ), {, return, ;]
[<=, lclip, ), {, value, =, lclip, ;, }, }, }, else, {, if, (, value, <=, lclip, ), {]
[), {, value, =, lclip, ;, }, }, }, else, {, if, (, value, <=, lclip, ), {, return, ;]
[=, lclip, ;, }, }, }, else, {, if, (, value, <=, lclip, ), {, return, ;, }, base, =]
[;, }, }, }, else, {, if, (, value, <=, lclip, ), {, return, ;, }, base, =, lclip, ;]
[), {, return, ;, }, base, =, lclip, ;, if, (, value, >=, uclip, ), {, value, =, uclip, ;]
[<=, lclip, ), {, return, ;, }, base, =, lclip, ;, if, (, value, >=, uclip, ), {, value, =]
[), {, return, ;, }, base, =, lclip, ;, if, (, value, >=, uclip, ), {, value, =, uclip, ;]
[=, lclip, ;, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =, plot]
[;, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge]
[), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transX1, =]
[>=, uclip, ), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double]
[), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transX1, =]
[=, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transX1, =, rangeAxis, ., valueToJava2D]
[;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transX1, =, rangeAxis, ., valueToJava2D, (, base]
[;, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =, rangeAxis, .]
[., getRangeAxisEdge, (, ), ;, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double]
[;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectX, =, Math, .]
[., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea]
[,, dataArea, ,, edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;]
[,, edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectX]
[), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectX, =, Math]
[;, double, rectX, =, Math, ., min, (, transX1, ,, transX2, ), ;, double, rectWidth, =, Math, ., abs, (]
[., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectX, =, Math, ., min, (, transX1, ,, transX2]
[,, dataArea, ,, edge, ), ;, double, rectX, =, Math, ., min, (, transX1, ,, transX2, ), ;, double, rectWidth]
[,, edge, ), ;, double, rectX, =, Math, ., min, (, transX1, ,, transX2, ), ;, double, rectWidth, =, Math]
[), ;, double, rectX, =, Math, ., min, (, transX1, ,, transX2, ), ;, double, rectWidth, =, Math, ., abs]
[;, double, rectWidth, =, Math, ., abs, (, transX2, -, transX1, ), ;, double, rectY, =, domainAxis, ., getCategoryMiddle, (]
[., min, (, transX1, ,, transX2, ), ;, double, rectWidth, =, Math, ., abs, (, transX2, -, transX1, ), ;]
[,, transX2, ), ;, double, rectWidth, =, Math, ., abs, (, transX2, -, transX1, ), ;, double, rectY, =, domainAxis]
[), ;, double, rectWidth, =, Math, ., abs, (, transX2, -, transX1, ), ;, double, rectY, =, domainAxis, ., getCategoryMiddle]
[;, double, rectY, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (]
[., abs, (, transX2, -, transX1, ), ;, double, rectY, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, )]
[), ;, double, rectY, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge]
[-, transX1, ), ;, double, rectY, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot]
[), ;, double, rectY, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge]
[;, int, seriesCount, =, getRowCount, (, ), ;, double, shift, =, 0.0, ;, double, rectHeight, =, 0.0, ;, double, widthFactor]
[-, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =, getRowCount, (, ), ;, double, shift, =, 0.0]
[., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, .]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount]
[,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =, getRowCount]
[), -, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =, getRowCount, (, ), ;, double, shift, =]
[., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =, getRowCount, (, )]
[;, int, seriesCount, =, getRowCount, (, ), ;, double, shift, =, 0.0, ;, double, rectHeight, =, 0.0, ;, double, widthFactor]
[/, 2.0, ;, int, seriesCount, =, getRowCount, (, ), ;, double, shift, =, 0.0, ;, double, rectHeight, =, 0.0, ;]
[., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =, getRowCount, (, ), ;, double, shift, =, 0.0, ;, double]
[;, int, seriesCount, =, getRowCount, (, ), ;, double, shift, =, 0.0, ;, double, rectHeight, =, 0.0, ;, double, widthFactor]
[;, double, shift, =, 0.0, ;, double, rectHeight, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth]
[;, double, rectHeight, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if]
[;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !, Double, ., isNaN]
[;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {]
[;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor]
[), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =]
[), {, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =, rectY]
[), {, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =, rectY]
[., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (]
[), ), {, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =]
[=, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =, rectY, +, (, 1]
[;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =, rectY, +, (, 1, -, widthFactor]
[=, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =, rectY, +, (, 1, -, widthFactor, ), *, state]
[;, rectY, =, rectY, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if]
[*, state, ., getBarWidth, (, ), ;, rectY, =, rectY, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth]
[;, rectY, =, rectY, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if]
[., getBarWidth, (, ), ;, rectY, =, rectY, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, )]
[=, rectY, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount]
[;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight, *, 0.20, /, (, seriesCount, -, 1, ), ;]
[+, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1]
[;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight, *, 0.20, /, (, seriesCount, -, 1, ), ;]
[/, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight, *, 0.20, /, (, seriesCount, -, 1]
[*, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight, *]
[), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight]
[-, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift]
[), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight]
[/, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight, *, 0.20, /, (, seriesCount, -, 1]
[., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight, *, 0.20, /]
[;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight, *, 0.20, /, (, seriesCount, -, 1, ), ;]
[), {, shift, =, rectHeight, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D]
[>, 1, ), {, shift, =, rectHeight, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =]
[), {, shift, =, rectHeight, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D]
[=, rectHeight, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (]
[;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +, (, (, seriesCount, -, 1]
[/, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY]
[*, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,]
[/, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY]
[;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +, (, (, seriesCount, -, 1]
[), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +, (, (, seriesCount, -]
[-, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +, (, (]
[), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +, (, (, seriesCount, -]
[;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;]
[,, (, rectY, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,, (]
[,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ), ;]
[), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), )]
[+, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (]
[), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), )]
[), ), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, )]
[*, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -, row, ), *, shift, *]
[), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -, row, ), *, shift]
[-, row, ), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -, row, )]
[-, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -]
[-, row, ), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -, row, )]
[), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -, row, ), *, shift]
[), ), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, )]
[,, (, rectHeight, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ), ;, Paint, itemPaint]
[), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, )]
[), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (]
[-, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ), ;, Paint, itemPaint, =, getItemPaint, (]
[), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (]
[*, 2, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =]
[*, shift, *, 2, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer]
[), *, shift, *, 2, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;]
[-, row, ), *, shift, *, 2, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected]
[-, 1, -, row, ), *, shift, *, 2, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column]
[-, row, ), *, shift, *, 2, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected]
[), *, shift, *, 2, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;]
[*, 2, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =]
[), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (]
[;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint]
[,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint]
[,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint]
[), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {]
[;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint]
[), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint]
[&&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;]
[!=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar]
[&&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;]
[), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint]
[instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2]
[=, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, )]
[;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (]
[., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2]
[,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if]
[,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if]
[), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline]
[;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >]
[., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state]
[), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, )]
[;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke]
[., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, )]
[), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =]
[), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row]
[&&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected]
[), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row]
[>, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint]
[., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;]
[), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row]
[;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint]
[,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (]
[,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=]
[), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&]
[;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2]
[,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke]
[,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke]
[), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;]
[), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (]
[&&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;]
[!=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint]
[&&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;]
[), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (]
[!=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, .]
[), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =]
[., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator]
[;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected]
[., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (]
[), ;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,]
[;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null]
[., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;]
[), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=]
[;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2]
[,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, )]
[,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {]
[), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[!=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected]
[,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator]
[), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar]
[;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, )]
[,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;]
[,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =]
[,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, .]
[,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (]
[,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;]
[,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity]
[), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[>, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null]
[), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected]
[!=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected]
[;, }, }, protected, void, drawVerticalItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryAxis]
[,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, void, drawVerticalItem, (, Graphics2D, g2]
[,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, void, drawVerticalItem, (, Graphics2D, g2, ,, CategoryItemRendererState]
[,, row, ,, column, ,, selected, ), ;, }, }, protected, void, drawVerticalItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,]
[,, column, ,, selected, ), ;, }, }, protected, void, drawVerticalItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea]
[,, selected, ), ;, }, }, protected, void, drawVerticalItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot]
[), ;, }, }, protected, void, drawVerticalItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,]
[;, if, (, dataValue, ==, null, ), {, return, ;, }, double, rectX, =, domainAxis, ., getCategoryMiddle, (, column, ,]
[., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, rectX]
[,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, rectX, =, domainAxis, ., getCategoryMiddle]
[), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, rectX, =, domainAxis, ., getCategoryMiddle, (, column]
[), {, return, ;, }, double, rectX, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[==, null, ), {, return, ;, }, double, rectX, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,]
[), {, return, ;, }, double, rectX, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[;, int, seriesCount, =, getRowCount, (, ), ;, double, value, =, dataValue, ., doubleValue, (, ), ;, double, base, =]
[-, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =, getRowCount, (, ), ;, double, value, =, dataValue]
[., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, .]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount]
[,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =, getRowCount]
[), -, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =, getRowCount, (, ), ;, double, value, =]
[., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =, getRowCount, (, )]
[;, int, seriesCount, =, getRowCount, (, ), ;, double, value, =, dataValue, ., doubleValue, (, ), ;, double, base, =]
[/, 2.0, ;, int, seriesCount, =, getRowCount, (, ), ;, double, value, =, dataValue, ., doubleValue, (, ), ;, double]
[., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =, getRowCount, (, ), ;, double, value, =, dataValue, ., doubleValue]
[;, int, seriesCount, =, getRowCount, (, ), ;, double, value, =, dataValue, ., doubleValue, (, ), ;, double, base, =]
[;, double, value, =, dataValue, ., doubleValue, (, ), ;, double, base, =, 0.0, ;, double, lclip, =, rangeAxis, .]
[;, double, base, =, 0.0, ;, double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =, rangeAxis, .]
[., doubleValue, (, ), ;, double, base, =, 0.0, ;, double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double]
[;, double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if]
[;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (, uclip, <=, 0.0, ), {, if, (, value]
[., getLowerBound, (, ), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (, uclip, <=, 0.0, )]
[;, if, (, uclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =]
[., getUpperBound, (, ), ;, if, (, uclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {, return]
[), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (, value, <=]
[<=, 0.0, ), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (]
[), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (, value, <=]
[), {, return, ;, }, base, =, uclip, ;, if, (, value, <=, lclip, ), {, value, =, lclip, ;]
[>=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (, value, <=, lclip, ), {, value, =]
[), {, return, ;, }, base, =, uclip, ;, if, (, value, <=, lclip, ), {, value, =, lclip, ;]
[=, uclip, ;, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (, lclip]
[;, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0]
[), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=]
[<=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (]
[), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=]
[=, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {]
[;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {, value, =]
[), {, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (, value, <=]
[<=, 0.0, ), {, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (]
[), {, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (, value, <=]
[), {, value, =, uclip, ;, }, else, {, if, (, value, <=, lclip, ), {, value, =, lclip, ;]
[>=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (, value, <=, lclip, ), {, value, =]
[), {, value, =, uclip, ;, }, else, {, if, (, value, <=, lclip, ), {, value, =, lclip, ;]
[=, uclip, ;, }, else, {, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, }]
[;, }, else, {, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, }, else, {]
[), {, value, =, lclip, ;, }, }, }, else, {, if, (, value, <=, lclip, ), {, return, ;]
[<=, lclip, ), {, value, =, lclip, ;, }, }, }, else, {, if, (, value, <=, lclip, ), {]
[), {, value, =, lclip, ;, }, }, }, else, {, if, (, value, <=, lclip, ), {, return, ;]
[=, lclip, ;, }, }, }, else, {, if, (, value, <=, lclip, ), {, return, ;, }, base, =]
[;, }, }, }, else, {, if, (, value, <=, lclip, ), {, return, ;, }, base, =, rangeAxis, .]
[), {, return, ;, }, base, =, rangeAxis, ., getLowerBound, (, ), ;, if, (, value, >=, uclip, ), {]
[<=, lclip, ), {, return, ;, }, base, =, rangeAxis, ., getLowerBound, (, ), ;, if, (, value, >=, uclip]
[), {, return, ;, }, base, =, rangeAxis, ., getLowerBound, (, ), ;, if, (, value, >=, uclip, ), {]
[=, rangeAxis, ., getLowerBound, (, ), ;, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, }]
[;, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge]
[., getLowerBound, (, ), ;, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, }, RectangleEdge, edge]
[), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transY1, =]
[>=, uclip, ), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double]
[), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transY1, =]
[=, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transY1, =, rangeAxis, ., valueToJava2D]
[;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transY1, =, rangeAxis, ., valueToJava2D, (, base]
[;, double, transY1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transY2, =, rangeAxis, .]
[., getRangeAxisEdge, (, ), ;, double, transY1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double]
[;, double, transY2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectY, =, Math, .]
[., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transY2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea]
[,, dataArea, ,, edge, ), ;, double, transY2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;]
[,, edge, ), ;, double, transY2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectY]
[), ;, double, transY2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectY, =, Math]
[;, double, rectY, =, Math, ., min, (, transY2, ,, transY1, ), ;, double, rectWidth, =, state, ., getBarWidth, (]
[., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectY, =, Math, ., min, (, transY2, ,, transY1]
[,, dataArea, ,, edge, ), ;, double, rectY, =, Math, ., min, (, transY2, ,, transY1, ), ;, double, rectWidth]
[,, edge, ), ;, double, rectY, =, Math, ., min, (, transY2, ,, transY1, ), ;, double, rectWidth, =, state]
[), ;, double, rectY, =, Math, ., min, (, transY2, ,, transY1, ), ;, double, rectWidth, =, state, ., getBarWidth]
[;, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., abs, (, transY2, -, transY1]
[., min, (, transY2, ,, transY1, ), ;, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =]
[,, transY1, ), ;, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., abs, (]
[), ;, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., abs, (, transY2, -]
[;, double, rectHeight, =, Math, ., abs, (, transY2, -, transY1, ), ;, double, shift, =, 0.0, ;, rectWidth, =]
[., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., abs, (, transY2, -, transY1, ), ;, double, shift, =]
[;, double, shift, =, 0.0, ;, rectWidth, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (]
[., abs, (, transY2, -, transY1, ), ;, double, shift, =, 0.0, ;, rectWidth, =, 0.0, ;, double, widthFactor, =]
[), ;, double, shift, =, 0.0, ;, rectWidth, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth]
[-, transY1, ), ;, double, shift, =, 0.0, ;, rectWidth, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth]
[), ;, double, shift, =, 0.0, ;, rectWidth, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth]
[;, rectWidth, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (]
[=, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !, Double]
[;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !, Double, ., isNaN]
[;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {]
[;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor]
[), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =]
[), {, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =, rectX]
[), {, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =, rectX]
[., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (]
[), ), {, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =]
[=, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =, rectX, +, (, 1]
[;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =, rectX, +, (, 1, -, widthFactor]
[=, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =, rectX, +, (, 1, -, widthFactor, ), *, state]
[;, rectX, =, rectX, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if]
[*, state, ., getBarWidth, (, ), ;, rectX, =, rectX, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth]
[;, rectX, =, rectX, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if]
[., getBarWidth, (, ), ;, rectX, =, rectX, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, )]
[=, rectX, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount]
[;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth, *, 0.20, /, (, seriesCount, -, 1, ), ;]
[+, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1]
[;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth, *, 0.20, /, (, seriesCount, -, 1, ), ;]
[/, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth, *, 0.20, /, (, seriesCount, -, 1]
[*, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth, *]
[), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth]
[-, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift]
[), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth]
[/, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth, *, 0.20, /, (, seriesCount, -, 1]
[., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth, *, 0.20, /]
[;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth, *, 0.20, /, (, seriesCount, -, 1, ), ;]
[), {, shift, =, rectWidth, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D]
[>, 1, ), {, shift, =, rectWidth, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =]
[), {, shift, =, rectWidth, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D]
[=, rectWidth, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (]
[;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (, (, seriesCount, -, 1, -, row]
[/, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (]
[*, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX]
[/, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (]
[;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (, (, seriesCount, -, 1, -, row]
[), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (, (, seriesCount, -, 1, -]
[-, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (, (, seriesCount, -]
[), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (, (, seriesCount, -, 1, -]
[;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;]
[,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ,, rectHeight]
[), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ,]
[+, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectY, ,, (, rectWidth, -, (]
[), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ,]
[), ), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, )]
[*, shift, ), ), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -, row, ), *, shift, *]
[), *, shift, ), ), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -, row, ), *, shift]
[-, row, ), *, shift, ), ), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -, row, )]
[-, 1, -, row, ), *, shift, ), ), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -]
[-, row, ), *, shift, ), ), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -, row, )]
[), *, shift, ), ), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -, row, ), *, shift]
[), ), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, )]
[,, (, rectWidth, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ,, rectHeight, ), ;]
[,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer]
[), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =]
[-, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ,, rectHeight, ), ;, Paint, itemPaint, =]
[), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =]
[*, 2, ), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer]
[*, shift, *, 2, ), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, )]
[), *, shift, *, 2, ), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected]
[-, row, ), *, shift, *, 2, ), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column]
[-, 1, -, row, ), *, shift, *, 2, ), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row]
[-, row, ), *, shift, *, 2, ), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column]
[), *, shift, *, 2, ), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected]
[*, 2, ), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer]
[), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =]
[), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, )]
[;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint]
[,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint]
[,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint]
[), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {]
[;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint]
[), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint]
[&&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;]
[!=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar]
[&&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;]
[), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint]
[instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2]
[=, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, )]
[;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (]
[., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2]
[,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if]
[,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if]
[), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline]
[;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >]
[., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state]
[), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, )]
[;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke]
[., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, )]
[), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =]
[), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row]
[&&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected]
[), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row]
[>, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint]
[., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;]
[), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row]
[;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint]
[,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (]
[,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=]
[), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&]
[;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2]
[,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke]
[,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke]
[), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;]
[), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (]
[&&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;]
[!=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint]
[&&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;]
[), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (]
[!=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, .]
[), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, double, transX1, =]
[., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, double, transX1]
[;, g2, ., draw, (, bar, ), ;, }, }, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea]
[., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, double, transX1, =, rangeAxis, .]
[), ;, g2, ., draw, (, bar, ), ;, }, }, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,]
[;, }, }, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =]
[., draw, (, bar, ), ;, }, }, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge]
[), ;, }, }, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2]
[;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (]
[., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea]
[,, dataArea, ,, edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;]
[,, edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, CategoryItemLabelGenerator, generator]
[), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator]
[;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible]
[., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected]
[,, dataArea, ,, edge, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[,, edge, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=]
[), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&]
[;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2]
[,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, )]
[,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {]
[), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[!=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected]
[,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator]
[), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar]
[;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, )]
[,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;]
[,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =]
[,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, .]
[,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (]
[,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;]
[,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity]
[), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[>, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null]
[), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, }]
[!=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, }]
[;, }, }, }]
[,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, }]
[,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, }]
[,, row, ,, column, ,, selected, ), ;, }, }, }]
[,, column, ,, selected, ), ;, }, }, }]
[,, selected, ), ;, }, }, }]
[), ;, }, }, }]
