[final, boolean, between, ;, private, NumericEntityEscaper, (, final, int, below, ,, final, int, above, ,, final, boolean, between, ), {]
[final, boolean, between, ;, private, NumericEntityEscaper, (, final, int, below, ,, final, int, above, ,, final, boolean, between, ), {]
[private, NumericEntityEscaper, (, final, int, below, ,, final, int, above, ,, final, boolean, between, ), {, this, ., below, =]
[(, final, int, below, ,, final, int, above, ,, final, boolean, between, ), {, this, ., below, =, below, ;]
[(, final, int, below, ,, final, int, above, ,, final, boolean, between, ), {, this, ., below, =, below, ;]
[,, final, int, above, ,, final, boolean, between, ), {, this, ., below, =, below, ;, this, ., above, =]
[int, above, ,, final, boolean, between, ), {, this, ., below, =, below, ;, this, ., above, =, above, ;]
[int, above, ,, final, boolean, between, ), {, this, ., below, =, below, ;, this, ., above, =, above, ;]
[boolean, between, ), {, this, ., below, =, below, ;, this, ., above, =, above, ;, this, ., between, =]
[this, ., above, =, above, ;, this, ., between, =, between, ;, }, public, NumericEntityEscaper, (, ), {, this, (]
[above, =, above, ;, this, ., between, =, between, ;, }, public, NumericEntityEscaper, (, ), {, this, (, 0, ,]
[above, =, above, ;, this, ., between, =, between, ;, }, public, NumericEntityEscaper, (, ), {, this, (, 0, ,]
[this, ., between, =, between, ;, }, public, NumericEntityEscaper, (, ), {, this, (, 0, ,, Integer, ., MAX_VALUE, ,]
[,, Integer, ., MAX_VALUE, ,, true, ), ;, }, public, static, NumericEntityEscaper, below, (, final, int, codepoint, ), {, return]
[., MAX_VALUE, ,, true, ), ;, }, public, static, NumericEntityEscaper, below, (, final, int, codepoint, ), {, return, outsideOf, (]
[,, true, ), ;, }, public, static, NumericEntityEscaper, below, (, final, int, codepoint, ), {, return, outsideOf, (, codepoint, ,]
[,, true, ), ;, }, public, static, NumericEntityEscaper, below, (, final, int, codepoint, ), {, return, outsideOf, (, codepoint, ,]
[(, codepoint, ,, Integer, ., MAX_VALUE, ), ;, }, public, static, NumericEntityEscaper, above, (, final, int, codepoint, ), {, return]
[,, Integer, ., MAX_VALUE, ), ;, }, public, static, NumericEntityEscaper, above, (, final, int, codepoint, ), {, return, outsideOf, (]
[., MAX_VALUE, ), ;, }, public, static, NumericEntityEscaper, above, (, final, int, codepoint, ), {, return, outsideOf, (, 0, ,]
[,, codepoint, ), ;, }, public, static, NumericEntityEscaper, between, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return]
[;, }, public, static, NumericEntityEscaper, between, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, NumericEntityEscaper, (]
[public, static, NumericEntityEscaper, between, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, NumericEntityEscaper, (, codepointLow, ,]
[NumericEntityEscaper, between, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, NumericEntityEscaper, (, codepointLow, ,, codepointHigh, ,]
[,, true, ), ;, }, public, static, NumericEntityEscaper, outsideOf, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return]
[;, }, public, static, NumericEntityEscaper, outsideOf, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, NumericEntityEscaper, (]
[public, static, NumericEntityEscaper, outsideOf, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, NumericEntityEscaper, (, codepointLow, ,]
[NumericEntityEscaper, outsideOf, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, NumericEntityEscaper, (, codepointLow, ,, codepointHigh, ,]
[}, @, Override, public, boolean, translate, (, final, int, codepoint, ,, final, Writer, out, ), throws, IOException, {, if, (]
[translate, (, final, int, codepoint, ,, final, Writer, out, ), throws, IOException, {, if, (, between, ), {, if, (]
[translate, (, final, int, codepoint, ,, final, Writer, out, ), throws, IOException, {, if, (, between, ), {, if, (]
[translate, (, final, int, codepoint, ,, final, Writer, out, ), throws, IOException, {, if, (, between, ), {, if, (]
[final, int, codepoint, ,, final, Writer, out, ), throws, IOException, {, if, (, between, ), {, if, (, codepoint, <]
[codepoint, ,, final, Writer, out, ), throws, IOException, {, if, (, between, ), {, if, (, codepoint, <, below, ||]
[codepoint, ,, final, Writer, out, ), throws, IOException, {, if, (, between, ), {, if, (, codepoint, <, below, ||]
[final, Writer, out, ), throws, IOException, {, if, (, between, ), {, if, (, codepoint, <, below, ||, codepoint, >]
[throws, IOException, {, if, (, between, ), {, if, (, codepoint, <, below, ||, codepoint, >, above, ), {, return]
[if, (, codepoint, <, below, ||, codepoint, >, above, ), {, return, false, ;, }, }, else, {, if, (]
[if, (, codepoint, <, below, ||, codepoint, >, above, ), {, return, false, ;, }, }, else, {, if, (]
[if, (, codepoint, <, below, ||, codepoint, >, above, ), {, return, false, ;, }, }, else, {, if, (]
[codepoint, <, below, ||, codepoint, >, above, ), {, return, false, ;, }, }, else, {, if, (, codepoint, >=]
[below, ||, codepoint, >, above, ), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&]
[below, ||, codepoint, >, above, ), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&]
[codepoint, >, above, ), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=]
[{, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=, above, ), {, return]
[}, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=, above, ), {, return, false, ;, }, }]
[}, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=, above, ), {, return, false, ;, }, }]
[if, (, codepoint, >=, below, &&, codepoint, <=, above, ), {, return, false, ;, }, }, out, ., write, (]
[>=, below, &&, codepoint, <=, above, ), {, return, false, ;, }, }, out, ., write, (, "&#", ), ;]
[>=, below, &&, codepoint, <=, above, ), {, return, false, ;, }, }, out, ., write, (, "&#", ), ;]
[<=, above, ), {, return, false, ;, }, }, out, ., write, (, "&#", ), ;, out, ., write, (]
[<=, above, ), {, return, false, ;, }, }, out, ., write, (, "&#", ), ;, out, ., write, (]
[return, false, ;, }, }, out, ., write, (, "&#", ), ;, out, ., write, (, Integer, ., toString, (]
[;, }, }, out, ., write, (, "&#", ), ;, out, ., write, (, Integer, ., toString, (, codepoint, ,]
[., write, (, "&#", ), ;, out, ., write, (, Integer, ., toString, (, codepoint, ,, 10, ), ), ;]
[., write, (, "&#", ), ;, out, ., write, (, Integer, ., toString, (, codepoint, ,, 10, ), ), ;]
[), ;, out, ., write, (, Integer, ., toString, (, codepoint, ,, 10, ), ), ;, out, ., write, (]
[write, (, Integer, ., toString, (, codepoint, ,, 10, ), ), ;, out, ., write, (, ';', ), ;, return]
