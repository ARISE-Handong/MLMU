[., google, ., javascript, ., rhino, ., Token, ;, public, class, ObjectPropertyStringPreprocess, implements, CompilerPass, {, static, final, String, OBJECT_PROPERTY_STRING, =]
[;, public, class, ObjectPropertyStringPreprocess, implements, CompilerPass, {, static, final, String, OBJECT_PROPERTY_STRING, =, "goog.testing.ObjectPropertyString", ;, public, static, final, String, EXTERN_OBJECT_PROPERTY_STRING, =]
[static, final, String, OBJECT_PROPERTY_STRING, =, "goog.testing.ObjectPropertyString", ;, public, static, final, String, EXTERN_OBJECT_PROPERTY_STRING, =, "JSCompiler_ObjectPropertyString", ;, static, final, DiagnosticType, INVALID_NUM_ARGUMENTS_ERROR, =]
[static, final, String, OBJECT_PROPERTY_STRING, =, "goog.testing.ObjectPropertyString", ;, public, static, final, String, EXTERN_OBJECT_PROPERTY_STRING, =, "JSCompiler_ObjectPropertyString", ;, static, final, DiagnosticType, INVALID_NUM_ARGUMENTS_ERROR, =]
[=, "goog.testing.ObjectPropertyString", ;, public, static, final, String, EXTERN_OBJECT_PROPERTY_STRING, =, "JSCompiler_ObjectPropertyString", ;, static, final, DiagnosticType, INVALID_NUM_ARGUMENTS_ERROR, =, DiagnosticType, ., error, (]
[;, public, static, final, String, EXTERN_OBJECT_PROPERTY_STRING, =, "JSCompiler_ObjectPropertyString", ;, static, final, DiagnosticType, INVALID_NUM_ARGUMENTS_ERROR, =, DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_NUM_ARGS", ,]
[;, public, static, final, String, EXTERN_OBJECT_PROPERTY_STRING, =, "JSCompiler_ObjectPropertyString", ;, static, final, DiagnosticType, INVALID_NUM_ARGUMENTS_ERROR, =, DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_NUM_ARGS", ,]
[static, final, String, EXTERN_OBJECT_PROPERTY_STRING, =, "JSCompiler_ObjectPropertyString", ;, static, final, DiagnosticType, INVALID_NUM_ARGUMENTS_ERROR, =, DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_NUM_ARGS", ,, "goog.testing.ObjectPropertyString instantiated with \"{0}\" ", +]
[final, DiagnosticType, INVALID_NUM_ARGUMENTS_ERROR, =, DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_NUM_ARGS", ,, "goog.testing.ObjectPropertyString instantiated with \"{0}\" ", +, "arguments, expected 2.", ), ;, static, final, DiagnosticType, QUALIFIED_NAME_EXPECTED_ERROR, =]
[final, DiagnosticType, INVALID_NUM_ARGUMENTS_ERROR, =, DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_NUM_ARGS", ,, "goog.testing.ObjectPropertyString instantiated with \"{0}\" ", +, "arguments, expected 2.", ), ;, static, final, DiagnosticType, QUALIFIED_NAME_EXPECTED_ERROR, =]
[DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_NUM_ARGS", ,, "goog.testing.ObjectPropertyString instantiated with \"{0}\" ", +, "arguments, expected 2.", ), ;, static, final, DiagnosticType, QUALIFIED_NAME_EXPECTED_ERROR, =, DiagnosticType, ., error, (]
[error, (, "JSC_OBJECT_PROPERTY_STRING_NUM_ARGS", ,, "goog.testing.ObjectPropertyString instantiated with \"{0}\" ", +, "arguments, expected 2.", ), ;, static, final, DiagnosticType, QUALIFIED_NAME_EXPECTED_ERROR, =, DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_QUALIFIED_NAME_EXPECTED", ,]
[error, (, "JSC_OBJECT_PROPERTY_STRING_NUM_ARGS", ,, "goog.testing.ObjectPropertyString instantiated with \"{0}\" ", +, "arguments, expected 2.", ), ;, static, final, DiagnosticType, QUALIFIED_NAME_EXPECTED_ERROR, =, DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_QUALIFIED_NAME_EXPECTED", ,]
["JSC_OBJECT_PROPERTY_STRING_NUM_ARGS", ,, "goog.testing.ObjectPropertyString instantiated with \"{0}\" ", +, "arguments, expected 2.", ), ;, static, final, DiagnosticType, QUALIFIED_NAME_EXPECTED_ERROR, =, DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_QUALIFIED_NAME_EXPECTED", ,, "goog.testing.ObjectPropertyString instantiated with invalid ", +]
[final, DiagnosticType, QUALIFIED_NAME_EXPECTED_ERROR, =, DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_QUALIFIED_NAME_EXPECTED", ,, "goog.testing.ObjectPropertyString instantiated with invalid ", +, "argument, qualified name expected. Was \"{0}\".", ), ;, static, final, DiagnosticType, STRING_LITERAL_EXPECTED_ERROR, =]
[final, DiagnosticType, QUALIFIED_NAME_EXPECTED_ERROR, =, DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_QUALIFIED_NAME_EXPECTED", ,, "goog.testing.ObjectPropertyString instantiated with invalid ", +, "argument, qualified name expected. Was \"{0}\".", ), ;, static, final, DiagnosticType, STRING_LITERAL_EXPECTED_ERROR, =]
[DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_QUALIFIED_NAME_EXPECTED", ,, "goog.testing.ObjectPropertyString instantiated with invalid ", +, "argument, qualified name expected. Was \"{0}\".", ), ;, static, final, DiagnosticType, STRING_LITERAL_EXPECTED_ERROR, =, DiagnosticType, ., error, (]
[error, (, "JSC_OBJECT_PROPERTY_STRING_QUALIFIED_NAME_EXPECTED", ,, "goog.testing.ObjectPropertyString instantiated with invalid ", +, "argument, qualified name expected. Was \"{0}\".", ), ;, static, final, DiagnosticType, STRING_LITERAL_EXPECTED_ERROR, =, DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_STRING_LITERAL_EXPECTED", ,]
[error, (, "JSC_OBJECT_PROPERTY_STRING_QUALIFIED_NAME_EXPECTED", ,, "goog.testing.ObjectPropertyString instantiated with invalid ", +, "argument, qualified name expected. Was \"{0}\".", ), ;, static, final, DiagnosticType, STRING_LITERAL_EXPECTED_ERROR, =, DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_STRING_LITERAL_EXPECTED", ,]
["JSC_OBJECT_PROPERTY_STRING_QUALIFIED_NAME_EXPECTED", ,, "goog.testing.ObjectPropertyString instantiated with invalid ", +, "argument, qualified name expected. Was \"{0}\".", ), ;, static, final, DiagnosticType, STRING_LITERAL_EXPECTED_ERROR, =, DiagnosticType, ., error, (, "JSC_OBJECT_PROPERTY_STRING_STRING_LITERAL_EXPECTED", ,, "goog.testing.ObjectPropertyString instantiated with invalid ", +]
[error, (, "JSC_OBJECT_PROPERTY_STRING_STRING_LITERAL_EXPECTED", ,, "goog.testing.ObjectPropertyString instantiated with invalid ", +, "argument, string literal expected. Was \"{0}\".", ), ;, private, final, AbstractCompiler, compiler, ;, ObjectPropertyStringPreprocess, (, AbstractCompiler, compiler, ), {]
[error, (, "JSC_OBJECT_PROPERTY_STRING_STRING_LITERAL_EXPECTED", ,, "goog.testing.ObjectPropertyString instantiated with invalid ", +, "argument, string literal expected. Was \"{0}\".", ), ;, private, final, AbstractCompiler, compiler, ;, ObjectPropertyStringPreprocess, (, AbstractCompiler, compiler, ), {]
["goog.testing.ObjectPropertyString instantiated with invalid ", +, "argument, string literal expected. Was \"{0}\".", ), ;, private, final, AbstractCompiler, compiler, ;, ObjectPropertyStringPreprocess, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
[this, ., compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, addExternDeclaration, (]
[compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, addExternDeclaration, (, externs, ,]
[compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, addExternDeclaration, (, externs, ,]
[Override, public, void, process, (, Node, externs, ,, Node, root, ), {, addExternDeclaration, (, externs, ,, IR, ., var, (]
[Override, public, void, process, (, Node, externs, ,, Node, root, ), {, addExternDeclaration, (, externs, ,, IR, ., var, (]
[(, Node, externs, ,, Node, root, ), {, addExternDeclaration, (, externs, ,, IR, ., var, (, IR, ., name, (]
[root, ), {, addExternDeclaration, (, externs, ,, IR, ., var, (, IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), ), ), ;]
[root, ), {, addExternDeclaration, (, externs, ,, IR, ., var, (, IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), ), ), ;]
[(, externs, ,, IR, ., var, (, IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), ), ), ;, NodeTraversal, ., traverse, (]
[,, IR, ., var, (, IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), ), ), ;, NodeTraversal, ., traverse, (, compiler, ,]
[., var, (, IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), ), ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,]
[Callback, (, ), ), ;, }, private, void, addExternDeclaration, (, Node, externs, ,, Node, declarationStmt, ), {, Node, script, =]
[Callback, (, ), ), ;, }, private, void, addExternDeclaration, (, Node, externs, ,, Node, declarationStmt, ), {, Node, script, =]
[addExternDeclaration, (, Node, externs, ,, Node, declarationStmt, ), {, Node, script, =, externs, ., getLastChild, (, ), ;, if, (]
[addExternDeclaration, (, Node, externs, ,, Node, declarationStmt, ), {, Node, script, =, externs, ., getLastChild, (, ), ;, if, (]
[addExternDeclaration, (, Node, externs, ,, Node, declarationStmt, ), {, Node, script, =, externs, ., getLastChild, (, ), ;, if, (]
[Node, externs, ,, Node, declarationStmt, ), {, Node, script, =, externs, ., getLastChild, (, ), ;, if, (, script, ==]
[,, Node, declarationStmt, ), {, Node, script, =, externs, ., getLastChild, (, ), ;, if, (, script, ==, null, ||]
[Node, declarationStmt, ), {, Node, script, =, externs, ., getLastChild, (, ), ;, if, (, script, ==, null, ||, !]
[Node, declarationStmt, ), {, Node, script, =, externs, ., getLastChild, (, ), ;, if, (, script, ==, null, ||, !]
[externs, ., getLastChild, (, ), ;, if, (, script, ==, null, ||, !, script, ., isScript, (, ), ), {]
[getLastChild, (, ), ;, if, (, script, ==, null, ||, !, script, ., isScript, (, ), ), {, script, =]
[getLastChild, (, ), ;, if, (, script, ==, null, ||, !, script, ., isScript, (, ), ), {, script, =]
[script, ==, null, ||, !, script, ., isScript, (, ), ), {, script, =, IR, ., script, (, ), ;]
[script, ==, null, ||, !, script, ., isScript, (, ), ), {, script, =, IR, ., script, (, ), ;]
[!, script, ., isScript, (, ), ), {, script, =, IR, ., script, (, ), ;, externs, ., addChildToBack, (]
[(, ), ), {, script, =, IR, ., script, (, ), ;, externs, ., addChildToBack, (, script, ), ;, }]
[(, ), ), {, script, =, IR, ., script, (, ), ;, externs, ., addChildToBack, (, script, ), ;, }]
[script, =, IR, ., script, (, ), ;, externs, ., addChildToBack, (, script, ), ;, }, script, ., addChildToBack, (]
[AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, OBJECT_PROPERTY_STRING, ., equals, (]
[public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, OBJECT_PROPERTY_STRING, ., equals, (]
[parent, ), {, if, (, OBJECT_PROPERTY_STRING, ., equals, (, n, ., getQualifiedName, (, ), ), ), {, Node, newName, =]
[parent, ), {, if, (, OBJECT_PROPERTY_STRING, ., equals, (, n, ., getQualifiedName, (, ), ), ), {, Node, newName, =]
[(, OBJECT_PROPERTY_STRING, ., equals, (, n, ., getQualifiedName, (, ), ), ), {, Node, newName, =, IR, ., name, (]
[equals, (, n, ., getQualifiedName, (, ), ), ), {, Node, newName, =, IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), ;]
[equals, (, n, ., getQualifiedName, (, ), ), ), {, Node, newName, =, IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), ;]
[getQualifiedName, (, ), ), ), {, Node, newName, =, IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), ;, newName, ., copyInformationFrom, (]
[), ), {, Node, newName, =, IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), ;, newName, ., copyInformationFrom, (, n, ), ;]
[), ), {, Node, newName, =, IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), ;, newName, ., copyInformationFrom, (, n, ), ;]
[newName, =, IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), ;, newName, ., copyInformationFrom, (, n, ), ;, parent, ., replaceChild, (]
[IR, ., name, (, EXTERN_OBJECT_PROPERTY_STRING, ), ;, newName, ., copyInformationFrom, (, n, ), ;, parent, ., replaceChild, (, n, ,]
[(, EXTERN_OBJECT_PROPERTY_STRING, ), ;, newName, ., copyInformationFrom, (, n, ), ;, parent, ., replaceChild, (, n, ,, newName, ), ;]
[(, EXTERN_OBJECT_PROPERTY_STRING, ), ;, newName, ., copyInformationFrom, (, n, ), ;, parent, ., replaceChild, (, n, ,, newName, ), ;]
[parent, ., replaceChild, (, n, ,, newName, ), ;, compiler, ., reportCodeChange, (, ), ;, return, ;, }, if, (]
[., replaceChild, (, n, ,, newName, ), ;, compiler, ., reportCodeChange, (, ), ;, return, ;, }, if, (, !]
[., replaceChild, (, n, ,, newName, ), ;, compiler, ., reportCodeChange, (, ), ;, return, ;, }, if, (, !]
[;, return, ;, }, if, (, !, n, ., isNew, (, ), ), {, return, ;, }, Node, objectName, =]
[;, return, ;, }, if, (, !, n, ., isNew, (, ), ), {, return, ;, }, Node, objectName, =]
[., isNew, (, ), ), {, return, ;, }, Node, objectName, =, n, ., getFirstChild, (, ), ;, if, (]
[isNew, (, ), ), {, return, ;, }, Node, objectName, =, n, ., getFirstChild, (, ), ;, if, (, !]
[isNew, (, ), ), {, return, ;, }, Node, objectName, =, n, ., getFirstChild, (, ), ;, if, (, !]
[{, return, ;, }, Node, objectName, =, n, ., getFirstChild, (, ), ;, if, (, !, EXTERN_OBJECT_PROPERTY_STRING, ., equals, (]
[{, return, ;, }, Node, objectName, =, n, ., getFirstChild, (, ), ;, if, (, !, EXTERN_OBJECT_PROPERTY_STRING, ., equals, (]
[if, (, !, EXTERN_OBJECT_PROPERTY_STRING, ., equals, (, objectName, ., getQualifiedName, (, ), ), ), {, return, ;, }, if, (]
[if, (, !, EXTERN_OBJECT_PROPERTY_STRING, ., equals, (, objectName, ., getQualifiedName, (, ), ), ), {, return, ;, }, if, (]
[if, (, !, EXTERN_OBJECT_PROPERTY_STRING, ., equals, (, objectName, ., getQualifiedName, (, ), ), ), {, return, ;, }, if, (]
[(, objectName, ., getQualifiedName, (, ), ), ), {, return, ;, }, if, (, n, ., getChildCount, (, ), !=]
[getQualifiedName, (, ), ), ), {, return, ;, }, if, (, n, ., getChildCount, (, ), !=, 3, ), {]
[getQualifiedName, (, ), ), ), {, return, ;, }, if, (, n, ., getChildCount, (, ), !=, 3, ), {]
[), {, return, ;, }, if, (, n, ., getChildCount, (, ), !=, 3, ), {, compiler, ., report, (]
[), {, return, ;, }, if, (, n, ., getChildCount, (, ), !=, 3, ), {, compiler, ., report, (]
[}, if, (, n, ., getChildCount, (, ), !=, 3, ), {, compiler, ., report, (, t, ., makeError, (]
[(, n, ., getChildCount, (, ), !=, 3, ), {, compiler, ., report, (, t, ., makeError, (, n, ,]
[., getChildCount, (, ), !=, 3, ), {, compiler, ., report, (, t, ., makeError, (, n, ,, INVALID_NUM_ARGUMENTS_ERROR, ,]
[., getChildCount, (, ), !=, 3, ), {, compiler, ., report, (, t, ., makeError, (, n, ,, INVALID_NUM_ARGUMENTS_ERROR, ,]
[(, ), !=, 3, ), {, compiler, ., report, (, t, ., makeError, (, n, ,, INVALID_NUM_ARGUMENTS_ERROR, ,, "", +]
[(, ), !=, 3, ), {, compiler, ., report, (, t, ., makeError, (, n, ,, INVALID_NUM_ARGUMENTS_ERROR, ,, "", +]
[n, ,, INVALID_NUM_ARGUMENTS_ERROR, ,, "", +, n, ., getChildCount, (, ), ), ), ;, return, ;, }, Node, firstArgument, =]
[n, ,, INVALID_NUM_ARGUMENTS_ERROR, ,, "", +, n, ., getChildCount, (, ), ), ), ;, return, ;, }, Node, firstArgument, =]
[getChildCount, (, ), ), ), ;, return, ;, }, Node, firstArgument, =, objectName, ., getNext, (, ), ;, if, (]
[(, ), ), ), ;, return, ;, }, Node, firstArgument, =, objectName, ., getNext, (, ), ;, if, (, !]
[(, ), ), ), ;, return, ;, }, Node, firstArgument, =, objectName, ., getNext, (, ), ;, if, (, !]
[}, Node, firstArgument, =, objectName, ., getNext, (, ), ;, if, (, !, firstArgument, ., isQualifiedName, (, ), ), {]
[}, Node, firstArgument, =, objectName, ., getNext, (, ), ;, if, (, !, firstArgument, ., isQualifiedName, (, ), ), {]
[objectName, ., getNext, (, ), ;, if, (, !, firstArgument, ., isQualifiedName, (, ), ), {, compiler, ., report, (]
[objectName, ., getNext, (, ), ;, if, (, !, firstArgument, ., isQualifiedName, (, ), ), {, compiler, ., report, (]
[), ;, if, (, !, firstArgument, ., isQualifiedName, (, ), ), {, compiler, ., report, (, t, ., makeError, (]
[if, (, !, firstArgument, ., isQualifiedName, (, ), ), {, compiler, ., report, (, t, ., makeError, (, firstArgument, ,]
[!, firstArgument, ., isQualifiedName, (, ), ), {, compiler, ., report, (, t, ., makeError, (, firstArgument, ,, QUALIFIED_NAME_EXPECTED_ERROR, ,]
[!, firstArgument, ., isQualifiedName, (, ), ), {, compiler, ., report, (, t, ., makeError, (, firstArgument, ,, QUALIFIED_NAME_EXPECTED_ERROR, ,]
[(, ), ), {, compiler, ., report, (, t, ., makeError, (, firstArgument, ,, QUALIFIED_NAME_EXPECTED_ERROR, ,, Token, ., name, (]
[(, ), ), {, compiler, ., report, (, t, ., makeError, (, firstArgument, ,, QUALIFIED_NAME_EXPECTED_ERROR, ,, Token, ., name, (]
[,, Token, ., name, (, firstArgument, ., getType, (, ), ), ), ), ;, return, ;, }, Node, secondArgument, =]
[,, Token, ., name, (, firstArgument, ., getType, (, ), ), ), ), ;, return, ;, }, Node, secondArgument, =]
[(, ), ), ), ), ;, return, ;, }, Node, secondArgument, =, firstArgument, ., getNext, (, ), ;, if, (]
[), ), ), ), ;, return, ;, }, Node, secondArgument, =, firstArgument, ., getNext, (, ), ;, if, (, !]
[), ), ), ), ;, return, ;, }, Node, secondArgument, =, firstArgument, ., getNext, (, ), ;, if, (, !]
[}, Node, secondArgument, =, firstArgument, ., getNext, (, ), ;, if, (, !, secondArgument, ., isString, (, ), ), {]
[}, Node, secondArgument, =, firstArgument, ., getNext, (, ), ;, if, (, !, secondArgument, ., isString, (, ), ), {]
[firstArgument, ., getNext, (, ), ;, if, (, !, secondArgument, ., isString, (, ), ), {, compiler, ., report, (]
[firstArgument, ., getNext, (, ), ;, if, (, !, secondArgument, ., isString, (, ), ), {, compiler, ., report, (]
[), ;, if, (, !, secondArgument, ., isString, (, ), ), {, compiler, ., report, (, t, ., makeError, (]
[if, (, !, secondArgument, ., isString, (, ), ), {, compiler, ., report, (, t, ., makeError, (, secondArgument, ,]
[!, secondArgument, ., isString, (, ), ), {, compiler, ., report, (, t, ., makeError, (, secondArgument, ,, STRING_LITERAL_EXPECTED_ERROR, ,]
[!, secondArgument, ., isString, (, ), ), {, compiler, ., report, (, t, ., makeError, (, secondArgument, ,, STRING_LITERAL_EXPECTED_ERROR, ,]
[(, ), ), {, compiler, ., report, (, t, ., makeError, (, secondArgument, ,, STRING_LITERAL_EXPECTED_ERROR, ,, Token, ., name, (]
[(, ), ), {, compiler, ., report, (, t, ., makeError, (, secondArgument, ,, STRING_LITERAL_EXPECTED_ERROR, ,, Token, ., name, (]
[,, Token, ., name, (, secondArgument, ., getType, (, ), ), ), ), ;, return, ;, }, Node, newFirstArgument, =]
[,, Token, ., name, (, secondArgument, ., getType, (, ), ), ), ), ;, return, ;, }, Node, newFirstArgument, =]
[,, Token, ., name, (, secondArgument, ., getType, (, ), ), ), ), ;, return, ;, }, Node, newFirstArgument, =]
[(, secondArgument, ., getType, (, ), ), ), ), ;, return, ;, }, Node, newFirstArgument, =, NodeUtil, ., newQualifiedNameNode, (]
[(, secondArgument, ., getType, (, ), ), ), ), ;, return, ;, }, Node, newFirstArgument, =, NodeUtil, ., newQualifiedNameNode, (]
[), ), ), ;, return, ;, }, Node, newFirstArgument, =, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,]
[), ), ), ;, return, ;, }, Node, newFirstArgument, =, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,]
[), ), ), ;, return, ;, }, Node, newFirstArgument, =, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,]
[(, compiler, ., getCodingConvention, (, ), ,, compiler, ., getCodingConvention, (, ), ., getGlobalObject, (, ), ), ., srcrefTree, (]
[,, compiler, ., getCodingConvention, (, ), ., getGlobalObject, (, ), ), ., srcrefTree, (, firstArgument, ), ;, Node, newSecondArgument, =]
[,, compiler, ., getCodingConvention, (, ), ., getGlobalObject, (, ), ), ., srcrefTree, (, firstArgument, ), ;, Node, newSecondArgument, =]
[,, compiler, ., getCodingConvention, (, ), ., getGlobalObject, (, ), ), ., srcrefTree, (, firstArgument, ), ;, Node, newSecondArgument, =]
[(, ), ., getGlobalObject, (, ), ), ., srcrefTree, (, firstArgument, ), ;, Node, newSecondArgument, =, NodeUtil, ., newQualifiedNameNode, (]
[(, ), ., getGlobalObject, (, ), ), ., srcrefTree, (, firstArgument, ), ;, Node, newSecondArgument, =, NodeUtil, ., newQualifiedNameNode, (]
[), ., srcrefTree, (, firstArgument, ), ;, Node, newSecondArgument, =, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,]
[), ., srcrefTree, (, firstArgument, ), ;, Node, newSecondArgument, =, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,]
[), ., srcrefTree, (, firstArgument, ), ;, Node, newSecondArgument, =, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,]
[), ., srcrefTree, (, firstArgument, ), ;, Node, newSecondArgument, =, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,]
[;, Node, newSecondArgument, =, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, firstArgument, ., getQualifiedName, (, ), +]
[newSecondArgument, =, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, firstArgument, ., getQualifiedName, (, ), +, ".", +]
[newSecondArgument, =, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, firstArgument, ., getQualifiedName, (, ), +, ".", +]
[newSecondArgument, =, NodeUtil, ., newQualifiedNameNode, (, compiler, ., getCodingConvention, (, ), ,, firstArgument, ., getQualifiedName, (, ), +, ".", +]
[., getQualifiedName, (, ), +, ".", +, firstArgument, ., getNext, (, ), ., getString, (, ), ), ., srcrefTree, (]
[), +, ".", +, firstArgument, ., getNext, (, ), ., getString, (, ), ), ., srcrefTree, (, secondArgument, ), ;]
[), +, ".", +, firstArgument, ., getNext, (, ), ., getString, (, ), ), ., srcrefTree, (, secondArgument, ), ;]
[firstArgument, ., getNext, (, ), ., getString, (, ), ), ., srcrefTree, (, secondArgument, ), ;, n, ., replaceChild, (]
[getNext, (, ), ., getString, (, ), ), ., srcrefTree, (, secondArgument, ), ;, n, ., replaceChild, (, firstArgument, ,]
[., getString, (, ), ), ., srcrefTree, (, secondArgument, ), ;, n, ., replaceChild, (, firstArgument, ,, newFirstArgument, ), ;]
[., getString, (, ), ), ., srcrefTree, (, secondArgument, ), ;, n, ., replaceChild, (, firstArgument, ,, newFirstArgument, ), ;]
[), ., srcrefTree, (, secondArgument, ), ;, n, ., replaceChild, (, firstArgument, ,, newFirstArgument, ), ;, n, ., replaceChild, (]
[srcrefTree, (, secondArgument, ), ;, n, ., replaceChild, (, firstArgument, ,, newFirstArgument, ), ;, n, ., replaceChild, (, secondArgument, ,]
[), ;, n, ., replaceChild, (, firstArgument, ,, newFirstArgument, ), ;, n, ., replaceChild, (, secondArgument, ,, newSecondArgument, ), ;]
[), ;, n, ., replaceChild, (, firstArgument, ,, newFirstArgument, ), ;, n, ., replaceChild, (, secondArgument, ,, newSecondArgument, ), ;]
