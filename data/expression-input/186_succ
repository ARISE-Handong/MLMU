[), {, throw, new, IllegalArgumentException, (, "Requires 'xSamples' > 0", ), ;, }, if, (, ySamples, <, 1, ), {, throw, new, IllegalArgumentException]
[<, 1, ), {, throw, new, IllegalArgumentException, (, "Requires 'xSamples' > 0", ), ;, }, if, (, ySamples, <, 1, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Requires 'xSamples' > 0", ), ;, }, if, (, ySamples, <, 1, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, ySamples, <, 1, ), {, throw, new, IllegalArgumentException, (, "Requires 'ySamples' > 0", ), ;, }, if, (, Double]
[), ;, }, if, (, ySamples, <, 1, ), {, throw, new, IllegalArgumentException, (, "Requires 'ySamples' > 0", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "Requires 'ySamples' > 0", ), ;, }, if, (, Double, ., isInfinite, (, minX, ), ||, Double]
[<, 1, ), {, throw, new, IllegalArgumentException, (, "Requires 'ySamples' > 0", ), ;, }, if, (, Double, ., isInfinite, (, minX, )]
[), {, throw, new, IllegalArgumentException, (, "Requires 'ySamples' > 0", ), ;, }, if, (, Double, ., isInfinite, (, minX, ), ||, Double]
[;, }, if, (, Double, ., isInfinite, (, minX, ), ||, Double, ., isNaN, (, minX, ), ), {, throw]
[), ;, }, if, (, Double, ., isInfinite, (, minX, ), ||, Double, ., isNaN, (, minX, ), ), {]
[), {, throw, new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, maxX, ), ||, Double]
[||, Double, ., isNaN, (, minX, ), ), {, throw, new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", ), ;, }, if, (, Double]
[., isInfinite, (, minX, ), ||, Double, ., isNaN, (, minX, ), ), {, throw, new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", )]
[), ||, Double, ., isNaN, (, minX, ), ), {, throw, new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, maxX, ), ||, Double]
[., isNaN, (, minX, ), ), {, throw, new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite]
[), ), {, throw, new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, maxX, ), ||]
[;, }, if, (, Double, ., isInfinite, (, maxX, ), ||, Double, ., isNaN, (, maxX, ), ), {, throw]
[), ;, }, if, (, Double, ., isInfinite, (, maxX, ), ||, Double, ., isNaN, (, maxX, ), ), {]
[), {, throw, new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, minY, ), ||, Double]
[||, Double, ., isNaN, (, maxX, ), ), {, throw, new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", ), ;, }, if, (, Double]
[., isInfinite, (, maxX, ), ||, Double, ., isNaN, (, maxX, ), ), {, throw, new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", )]
[), ||, Double, ., isNaN, (, maxX, ), ), {, throw, new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, minY, ), ||, Double]
[., isNaN, (, maxX, ), ), {, throw, new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite]
[), ), {, throw, new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, minY, ), ||]
[;, }, if, (, Double, ., isInfinite, (, minY, ), ||, Double, ., isNaN, (, minY, ), ), {, throw]
[), ;, }, if, (, Double, ., isInfinite, (, minY, ), ||, Double, ., isNaN, (, minY, ), ), {]
[), {, throw, new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, maxY, ), ||, Double]
[||, Double, ., isNaN, (, minY, ), ), {, throw, new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", ), ;, }, if, (, Double]
[., isInfinite, (, minY, ), ||, Double, ., isNaN, (, minY, ), ), {, throw, new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", )]
[), ||, Double, ., isNaN, (, minY, ), ), {, throw, new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, maxY, ), ||, Double]
[., isNaN, (, minY, ), ), {, throw, new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite]
[), ), {, throw, new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, maxY, ), ||]
[;, }, if, (, Double, ., isInfinite, (, maxY, ), ||, Double, ., isNaN, (, maxY, ), ), {, throw]
[), ;, }, if, (, Double, ., isInfinite, (, maxY, ), ||, Double, ., isNaN, (, maxY, ), ), {]
[), {, throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }, this, ., xSamples, =, xSamples, ;, this, ., ySamples, =]
[||, Double, ., isNaN, (, maxY, ), ), {, throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }, this, ., xSamples]
[., isInfinite, (, maxY, ), ||, Double, ., isNaN, (, maxY, ), ), {, throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", )]
[), ||, Double, ., isNaN, (, maxY, ), ), {, throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }, this, .]
[), {, throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }, this, ., xSamples, =, xSamples, ;, this, ., ySamples, =]
[., isNaN, (, maxY, ), ), {, throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }, this, ., xSamples, =, xSamples]
[), ), {, throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }, this, ., xSamples, =, xSamples, ;, this, ., ySamples]
[;, }, this, ., xSamples, =, xSamples, ;, this, ., ySamples, =, ySamples, ;, this, ., minX, =, minX, ;]
[), ;, }, this, ., xSamples, =, xSamples, ;, this, ., ySamples, =, ySamples, ;, this, ., minX, =, minX]
[=, xSamples, ;, this, ., ySamples, =, ySamples, ;, this, ., minX, =, minX, ;, this, ., maxX, =, maxX]
[., xSamples, =, xSamples, ;, this, ., ySamples, =, ySamples, ;, this, ., minX, =, minX, ;, this, ., maxX]
[;, this, ., ySamples, =, ySamples, ;, this, ., minX, =, minX, ;, this, ., maxX, =, maxX, ;, this]
[=, ySamples, ;, this, ., minX, =, minX, ;, this, ., maxX, =, maxX, ;, this, ., minY, =, minY]
[., ySamples, =, ySamples, ;, this, ., minX, =, minX, ;, this, ., maxX, =, maxX, ;, this, ., minY]
[;, this, ., minX, =, minX, ;, this, ., maxX, =, maxX, ;, this, ., minY, =, minY, ;, this]
[=, minX, ;, this, ., maxX, =, maxX, ;, this, ., minY, =, minY, ;, this, ., maxY, =, maxY]
[., minX, =, minX, ;, this, ., maxX, =, maxX, ;, this, ., minY, =, minY, ;, this, ., maxY]
[;, this, ., maxX, =, maxX, ;, this, ., minY, =, minY, ;, this, ., maxY, =, maxY, ;, this]
[=, maxX, ;, this, ., minY, =, minY, ;, this, ., maxY, =, maxY, ;, this, ., zValues, =, new]
[., maxX, =, maxX, ;, this, ., minY, =, minY, ;, this, ., maxY, =, maxY, ;, this, ., zValues]
[;, this, ., minY, =, minY, ;, this, ., maxY, =, maxY, ;, this, ., zValues, =, new, double, []
[=, minY, ;, this, ., maxY, =, maxY, ;, this, ., zValues, =, new, double, [, xSamples, ], [, ]]
[., minY, =, minY, ;, this, ., maxY, =, maxY, ;, this, ., zValues, =, new, double, [, xSamples, ]]
[;, this, ., maxY, =, maxY, ;, this, ., zValues, =, new, double, [, xSamples, ], [, ], ;, for]
[=, maxY, ;, this, ., zValues, =, new, double, [, xSamples, ], [, ], ;, for, (, int, x, =]
[., maxY, =, maxY, ;, this, ., zValues, =, new, double, [, xSamples, ], [, ], ;, for, (, int]
[;, this, ., zValues, =, new, double, [, xSamples, ], [, ], ;, for, (, int, x, =, 0, ;]
[=, new, double, [, xSamples, ], [, ], ;, for, (, int, x, =, 0, ;, x, <, xSamples, ;]
[., zValues, =, new, double, [, xSamples, ], [, ], ;, for, (, int, x, =, 0, ;, x, <]
[;, for, (, int, x, =, 0, ;, x, <, xSamples, ;, x, ++, ), {, this, ., zValues, []
[], [, ], ;, for, (, int, x, =, 0, ;, x, <, xSamples, ;, x, ++, ), {, this]
[;, x, <, xSamples, ;, x, ++, ), {, this, ., zValues, [, x, ], =, new, double, [, ySamples]
[;, x, ++, ), {, this, ., zValues, [, x, ], =, new, double, [, ySamples, ], ;, }, }]
[<, xSamples, ;, x, ++, ), {, this, ., zValues, [, x, ], =, new, double, [, ySamples, ], ;]
[;, x, ++, ), {, this, ., zValues, [, x, ], =, new, double, [, ySamples, ], ;, }, }]
[), {, this, ., zValues, [, x, ], =, new, double, [, ySamples, ], ;, }, }, public, int, getXSampleCount]
[++, ), {, this, ., zValues, [, x, ], =, new, double, [, ySamples, ], ;, }, }, public, int]
[=, new, double, [, ySamples, ], ;, }, }, public, int, getXSampleCount, (, ), {, return, this, ., xSamples, ;]
[[, x, ], =, new, double, [, ySamples, ], ;, }, }, public, int, getXSampleCount, (, ), {, return, this]
[., zValues, [, x, ], =, new, double, [, ySamples, ], ;, }, }, public, int, getXSampleCount, (, ), {]
[], =, new, double, [, ySamples, ], ;, }, }, public, int, getXSampleCount, (, ), {, return, this, ., xSamples]
[;, }, }, public, int, getXSampleCount, (, ), {, return, this, ., xSamples, ;, }, public, int, getYSampleCount, (, )]
[], ;, }, }, public, int, getXSampleCount, (, ), {, return, this, ., xSamples, ;, }, public, int, getYSampleCount, (]
[;, }, public, int, getYSampleCount, (, ), {, return, this, ., ySamples, ;, }, public, double, getMinimumXValue, (, ), {]
[., xSamples, ;, }, public, int, getYSampleCount, (, ), {, return, this, ., ySamples, ;, }, public, double, getMinimumXValue, (]
[;, }, public, double, getMinimumXValue, (, ), {, return, this, ., minX, ;, }, public, double, getMaximumXValue, (, ), {]
[., ySamples, ;, }, public, double, getMinimumXValue, (, ), {, return, this, ., minX, ;, }, public, double, getMaximumXValue, (]
[;, }, public, double, getMaximumXValue, (, ), {, return, this, ., maxX, ;, }, public, double, getMinimumYValue, (, ), {]
[., minX, ;, }, public, double, getMaximumXValue, (, ), {, return, this, ., maxX, ;, }, public, double, getMinimumYValue, (]
[;, }, public, double, getMinimumYValue, (, ), {, return, this, ., minY, ;, }, public, double, getMaximumYValue, (, ), {]
[., maxX, ;, }, public, double, getMinimumYValue, (, ), {, return, this, ., minY, ;, }, public, double, getMaximumYValue, (]
[;, }, public, double, getMaximumYValue, (, ), {, return, this, ., maxY, ;, }, public, double, getXValue, (, int, xIndex]
[., minY, ;, }, public, double, getMaximumYValue, (, ), {, return, this, ., maxY, ;, }, public, double, getXValue, (]
[;, }, public, double, getXValue, (, int, xIndex, ), {, double, x, =, this, ., minX, +, (, this, .]
[., maxY, ;, }, public, double, getXValue, (, int, xIndex, ), {, double, x, =, this, ., minX, +, (]
[;, return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY, +]
[+, (, this, ., maxX, -, this, ., minX, ), *, (, xIndex, /, (, double, ), this, ., xSamples]
[., minX, +, (, this, ., maxX, -, this, ., minX, ), *, (, xIndex, /, (, double, ), this]
[;, return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY, +]
[*, (, xIndex, /, (, double, ), this, ., xSamples, ), ;, return, x, ;, }, public, double, getYValue, (]
[), *, (, xIndex, /, (, double, ), this, ., xSamples, ), ;, return, x, ;, }, public, double, getYValue]
[-, this, ., minX, ), *, (, xIndex, /, (, double, ), this, ., xSamples, ), ;, return, x, ;]
[., maxX, -, this, ., minX, ), *, (, xIndex, /, (, double, ), this, ., xSamples, ), ;, return]
[), *, (, xIndex, /, (, double, ), this, ., xSamples, ), ;, return, x, ;, }, public, double, getYValue]
[., minX, ), *, (, xIndex, /, (, double, ), this, ., xSamples, ), ;, return, x, ;, }, public]
[;, return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY, +]
[), ;, return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY]
[/, (, double, ), this, ., xSamples, ), ;, return, x, ;, }, public, double, getYValue, (, int, yIndex, )]
[), ;, return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY]
[), ;, return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY]
[., xSamples, ), ;, return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =, this]
[;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY, +, (, this, .]
[;, return, y, ;, }, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return, this, ., zValues]
[+, (, this, ., maxY, -, this, ., minY, ), *, (, yIndex, /, (, double, ), this, ., ySamples]
[., minY, +, (, this, ., maxY, -, this, ., minY, ), *, (, yIndex, /, (, double, ), this]
[;, return, y, ;, }, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return, this, ., zValues]
[*, (, yIndex, /, (, double, ), this, ., ySamples, ), ;, return, y, ;, }, public, double, getZValue, (]
[), *, (, yIndex, /, (, double, ), this, ., ySamples, ), ;, return, y, ;, }, public, double, getZValue]
[-, this, ., minY, ), *, (, yIndex, /, (, double, ), this, ., ySamples, ), ;, return, y, ;]
[., maxY, -, this, ., minY, ), *, (, yIndex, /, (, double, ), this, ., ySamples, ), ;, return]
[), *, (, yIndex, /, (, double, ), this, ., ySamples, ), ;, return, y, ;, }, public, double, getZValue]
[., minY, ), *, (, yIndex, /, (, double, ), this, ., ySamples, ), ;, return, y, ;, }, public]
[;, return, y, ;, }, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return, this, ., zValues]
[), ;, return, y, ;, }, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return, this, .]
[/, (, double, ), this, ., ySamples, ), ;, return, y, ;, }, public, double, getZValue, (, int, xIndex, ,]
[), ;, return, y, ;, }, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return, this, .]
[), ;, return, y, ;, }, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return, this, .]
[., ySamples, ), ;, return, y, ;, }, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return]
[;, }, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return, this, ., zValues, [, xIndex, ]]
[;, }, public, Number, getZ, (, int, xIndex, ,, int, yIndex, ), {, return, new, Double, (, getZValue, (, xIndex]
[[, yIndex, ], ;, }, public, Number, getZ, (, int, xIndex, ,, int, yIndex, ), {, return, new, Double, (]
[[, xIndex, ], [, yIndex, ], ;, }, public, Number, getZ, (, int, xIndex, ,, int, yIndex, ), {, return]
[., zValues, [, xIndex, ], [, yIndex, ], ;, }, public, Number, getZ, (, int, xIndex, ,, int, yIndex, )]
[], [, yIndex, ], ;, }, public, Number, getZ, (, int, xIndex, ,, int, yIndex, ), {, return, new, Double]
[], ;, }, public, Number, getZ, (, int, xIndex, ,, int, yIndex, ), {, return, new, Double, (, getZValue, (]
[;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ), {, setZValue, (, xIndex, ,]
[), ;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ), {, setZValue, (, xIndex]
[,, yIndex, ), ), ;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ), {]
[), ), ;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ), {, setZValue, (]
[;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ,, boolean, notify, ), {, this]
[,, yIndex, ,, z, ,, true, ), ;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double]
[,, z, ,, true, ), ;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ,]
[,, true, ), ;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ,, boolean, notify]
[), ;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ,, boolean, notify, ), {]
[=, z, ;, if, (, notify, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, boolean]
[[, yIndex, ], =, z, ;, if, (, notify, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }]
[[, xIndex, ], [, yIndex, ], =, z, ;, if, (, notify, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, )]
[., zValues, [, xIndex, ], [, yIndex, ], =, z, ;, if, (, notify, ), {, fireDatasetChanged, (, new, DatasetChangeInfo]
[], [, yIndex, ], =, z, ;, if, (, notify, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;]
[], =, z, ;, if, (, notify, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public]
[;, if, (, notify, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, boolean, equals, (]
[), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, boolean, equals, (, Object, obj, ), {]
[;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultHeatMapDataset, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultHeatMapDataset, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultHeatMapDataset, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, DefaultHeatMapDataset, ), ), {, return, false, ;, }, DefaultHeatMapDataset, that, =, (]
[), {, return, false, ;, }, DefaultHeatMapDataset, that, =, (, DefaultHeatMapDataset, ), obj, ;, if, (, this, ., xSamples, !=]
[), {, return, false, ;, }, DefaultHeatMapDataset, that, =, (, DefaultHeatMapDataset, ), obj, ;, if, (, this, ., xSamples, !=]
[), ), {, return, false, ;, }, DefaultHeatMapDataset, that, =, (, DefaultHeatMapDataset, ), obj, ;, if, (, this, ., xSamples]
[instanceof, DefaultHeatMapDataset, ), ), {, return, false, ;, }, DefaultHeatMapDataset, that, =, (, DefaultHeatMapDataset, ), obj, ;, if, (, this]
[;, }, DefaultHeatMapDataset, that, =, (, DefaultHeatMapDataset, ), obj, ;, if, (, this, ., xSamples, !=, that, ., xSamples, )]
[;, if, (, this, ., xSamples, !=, that, ., xSamples, ), {, return, false, ;, }, if, (, this, .]
[;, if, (, this, ., xSamples, !=, that, ., xSamples, ), {, return, false, ;, }, if, (, this, .]
[), {, return, false, ;, }, if, (, this, ., ySamples, !=, that, ., ySamples, ), {, return, false, ;]
[!=, that, ., xSamples, ), {, return, false, ;, }, if, (, this, ., ySamples, !=, that, ., ySamples, )]
[., xSamples, !=, that, ., xSamples, ), {, return, false, ;, }, if, (, this, ., ySamples, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., ySamples, !=, that, ., ySamples, ), {, return, false, ;]
[., xSamples, ), {, return, false, ;, }, if, (, this, ., ySamples, !=, that, ., ySamples, ), {, return]
[;, }, if, (, this, ., ySamples, !=, that, ., ySamples, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., minX, !=, that, ., minX, ), {, return, false, ;]
[!=, that, ., ySamples, ), {, return, false, ;, }, if, (, this, ., minX, !=, that, ., minX, )]
[., ySamples, !=, that, ., ySamples, ), {, return, false, ;, }, if, (, this, ., minX, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., minX, !=, that, ., minX, ), {, return, false, ;]
[., ySamples, ), {, return, false, ;, }, if, (, this, ., minX, !=, that, ., minX, ), {, return]
[;, }, if, (, this, ., minX, !=, that, ., minX, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., maxX, !=, that, ., maxX, ), {, return, false, ;]
[!=, that, ., minX, ), {, return, false, ;, }, if, (, this, ., maxX, !=, that, ., maxX, )]
[., minX, !=, that, ., minX, ), {, return, false, ;, }, if, (, this, ., maxX, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., maxX, !=, that, ., maxX, ), {, return, false, ;]
[., minX, ), {, return, false, ;, }, if, (, this, ., maxX, !=, that, ., maxX, ), {, return]
[;, }, if, (, this, ., maxX, !=, that, ., maxX, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., minY, !=, that, ., minY, ), {, return, false, ;]
[!=, that, ., maxX, ), {, return, false, ;, }, if, (, this, ., minY, !=, that, ., minY, )]
[., maxX, !=, that, ., maxX, ), {, return, false, ;, }, if, (, this, ., minY, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., minY, !=, that, ., minY, ), {, return, false, ;]
[., maxX, ), {, return, false, ;, }, if, (, this, ., minY, !=, that, ., minY, ), {, return]
[;, }, if, (, this, ., minY, !=, that, ., minY, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., maxY, !=, that, ., maxY, ), {, return, false, ;]
[!=, that, ., minY, ), {, return, false, ;, }, if, (, this, ., maxY, !=, that, ., maxY, )]
[., minY, !=, that, ., minY, ), {, return, false, ;, }, if, (, this, ., maxY, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., maxY, !=, that, ., maxY, ), {, return, false, ;]
[., minY, ), {, return, false, ;, }, if, (, this, ., maxY, !=, that, ., maxY, ), {, return]
[;, }, if, (, this, ., maxY, !=, that, ., maxY, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, DataUtilities, ., equal, (, this, ., zValues, ,, that, ., zValues]
[!=, that, ., maxY, ), {, return, false, ;, }, if, (, !, DataUtilities, ., equal, (, this, ., zValues]
[., maxY, !=, that, ., maxY, ), {, return, false, ;, }, if, (, !, DataUtilities, ., equal, (, this]
[), {, return, false, ;, }, if, (, !, DataUtilities, ., equal, (, this, ., zValues, ,, that, ., zValues]
[., maxY, ), {, return, false, ;, }, if, (, !, DataUtilities, ., equal, (, this, ., zValues, ,, that]
[;, }, if, (, !, DataUtilities, ., equal, (, this, ., zValues, ,, that, ., zValues, ), ), {, return]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultHeatMapDataset, clone]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultHeatMapDataset, clone]
[., equal, (, this, ., zValues, ,, that, ., zValues, ), ), {, return, false, ;, }, return, true, ;]
[,, that, ., zValues, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, )]
[., zValues, ,, that, ., zValues, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone]
[), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultHeatMapDataset]
[., zValues, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultHeatMapDataset, clone, =, (, DefaultHeatMapDataset, )]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultHeatMapDataset, clone, =, (, DefaultHeatMapDataset, ), super, ., clone, (]
[;, clone, ., zValues, =, DataUtilities, ., clone, (, this, ., zValues, ), ;, return, clone, ;, }, }]
[;, clone, ., zValues, =, DataUtilities, ., clone, (, this, ., zValues, ), ;, return, clone, ;, }, }]
[., clone, (, ), ;, clone, ., zValues, =, DataUtilities, ., clone, (, this, ., zValues, ), ;, return, clone]
[=, DataUtilities, ., clone, (, this, ., zValues, ), ;, return, clone, ;, }, }]
[., zValues, =, DataUtilities, ., clone, (, this, ., zValues, ), ;, return, clone, ;, }, }]
[;, return, clone, ;, }, }]
[., clone, (, this, ., zValues, ), ;, return, clone, ;, }, }]
[), ;, return, clone, ;, }, }]
[., zValues, ), ;, return, clone, ;, }, }]
[;, }, }]
