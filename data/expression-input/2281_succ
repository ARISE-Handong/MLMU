[;, private, static, final, int, VLQ_BASE, =, 1, <<, VLQ_BASE_SHIFT, ;, private, static, final, int, VLQ_BASE_MASK, =, VLQ_BASE, -, 1]
[;, private, static, final, int, VLQ_BASE_MASK, =, VLQ_BASE, -, 1, ;, private, static, final, int, VLQ_CONTINUATION_BIT, =, VLQ_BASE, ;, private]
[<<, VLQ_BASE_SHIFT, ;, private, static, final, int, VLQ_BASE_MASK, =, VLQ_BASE, -, 1, ;, private, static, final, int, VLQ_CONTINUATION_BIT, =, VLQ_BASE]
[;, private, static, final, int, VLQ_BASE_MASK, =, VLQ_BASE, -, 1, ;, private, static, final, int, VLQ_CONTINUATION_BIT, =, VLQ_BASE, ;, private]
[;, private, static, final, int, VLQ_CONTINUATION_BIT, =, VLQ_BASE, ;, private, static, int, toVLQSigned, (, int, value, ), {, if, (]
[-, 1, ;, private, static, final, int, VLQ_CONTINUATION_BIT, =, VLQ_BASE, ;, private, static, int, toVLQSigned, (, int, value, ), {]
[;, private, static, final, int, VLQ_CONTINUATION_BIT, =, VLQ_BASE, ;, private, static, int, toVLQSigned, (, int, value, ), {, if, (]
[;, private, static, int, toVLQSigned, (, int, value, ), {, if, (, value, <, 0, ), {, return, (, (]
[), {, return, (, (, -, value, ), <<, 1, ), +, 1, ;, }, else, {, return, (, value]
[<, 0, ), {, return, (, (, -, value, ), <<, 1, ), +, 1, ;, }, else, {, return]
[), {, return, (, (, -, value, ), <<, 1, ), +, 1, ;, }, else, {, return, (, value]
[;, }, else, {, return, (, value, <<, 1, ), +, 0, ;, }, }, private, static, int, fromVLQSigned, (]
[+, 1, ;, }, else, {, return, (, value, <<, 1, ), +, 0, ;, }, }, private, static, int]
[), +, 1, ;, }, else, {, return, (, value, <<, 1, ), +, 0, ;, }, }, private, static]
[<<, 1, ), +, 1, ;, }, else, {, return, (, value, <<, 1, ), +, 0, ;, }, }]
[), <<, 1, ), +, 1, ;, }, else, {, return, (, value, <<, 1, ), +, 0, ;, }]
[), <<, 1, ), +, 1, ;, }, else, {, return, (, value, <<, 1, ), +, 0, ;, }]
[), +, 1, ;, }, else, {, return, (, value, <<, 1, ), +, 0, ;, }, }, private, static]
[;, }, else, {, return, (, value, <<, 1, ), +, 0, ;, }, }, private, static, int, fromVLQSigned, (]
[;, }, }, private, static, int, fromVLQSigned, (, int, value, ), {, boolean, negate, =, (, value, &, 1, )]
[+, 0, ;, }, }, private, static, int, fromVLQSigned, (, int, value, ), {, boolean, negate, =, (, value, &]
[), +, 0, ;, }, }, private, static, int, fromVLQSigned, (, int, value, ), {, boolean, negate, =, (, value]
[<<, 1, ), +, 0, ;, }, }, private, static, int, fromVLQSigned, (, int, value, ), {, boolean, negate, =]
[), +, 0, ;, }, }, private, static, int, fromVLQSigned, (, int, value, ), {, boolean, negate, =, (, value]
[;, }, }, private, static, int, fromVLQSigned, (, int, value, ), {, boolean, negate, =, (, value, &, 1, )]
[;, value, =, value, >, >, 1, ;, return, negate, ?, -, value, :, value, ;, }, public, static, void]
[==, 1, ;, value, =, value, >, >, 1, ;, return, negate, ?, -, value, :, value, ;, }, public]
[), ==, 1, ;, value, =, value, >, >, 1, ;, return, negate, ?, -, value, :, value, ;, }]
[&, 1, ), ==, 1, ;, value, =, value, >, >, 1, ;, return, negate, ?, -, value, :, value]
[), ==, 1, ;, value, =, value, >, >, 1, ;, return, negate, ?, -, value, :, value, ;, }]
[;, value, =, value, >, >, 1, ;, return, negate, ?, -, value, :, value, ;, }, public, static, void]
[=, value, >, >, 1, ;, return, negate, ?, -, value, :, value, ;, }, public, static, void, encode, (]
[;, return, negate, ?, -, value, :, value, ;, }, public, static, void, encode, (, Appendable, out, ,, int, value]
[>, >, 1, ;, return, negate, ?, -, value, :, value, ;, }, public, static, void, encode, (, Appendable, out]
[;, return, negate, ?, -, value, :, value, ;, }, public, static, void, encode, (, Appendable, out, ,, int, value]
[;, }, public, static, void, encode, (, Appendable, out, ,, int, value, ), throws, IOException, {, value, =, toVLQSigned, (]
[?, -, value, :, value, ;, }, public, static, void, encode, (, Appendable, out, ,, int, value, ), throws, IOException]
[:, value, ;, }, public, static, void, encode, (, Appendable, out, ,, int, value, ), throws, IOException, {, value, =]
[:, value, ;, }, public, static, void, encode, (, Appendable, out, ,, int, value, ), throws, IOException, {, value, =]
[;, }, public, static, void, encode, (, Appendable, out, ,, int, value, ), throws, IOException, {, value, =, toVLQSigned, (]
[=, toVLQSigned, (, value, ), ;, do, {, int, digit, =, value, &, VLQ_BASE_MASK, ;, value, >>>=, VLQ_BASE_SHIFT, ;, if]
[;, do, {, int, digit, =, value, &, VLQ_BASE_MASK, ;, value, >>>=, VLQ_BASE_SHIFT, ;, if, (, value, >, 0, )]
[), ;, do, {, int, digit, =, value, &, VLQ_BASE_MASK, ;, value, >>>=, VLQ_BASE_SHIFT, ;, if, (, value, >, 0]
[;, value, >>>=, VLQ_BASE_SHIFT, ;, if, (, value, >, 0, ), {, digit, |=, VLQ_CONTINUATION_BIT, ;, }, out, ., append]
[&, VLQ_BASE_MASK, ;, value, >>>=, VLQ_BASE_SHIFT, ;, if, (, value, >, 0, ), {, digit, |=, VLQ_CONTINUATION_BIT, ;, }, out]
[;, value, >>>=, VLQ_BASE_SHIFT, ;, if, (, value, >, 0, ), {, digit, |=, VLQ_CONTINUATION_BIT, ;, }, out, ., append]
[>>>=, VLQ_BASE_SHIFT, ;, if, (, value, >, 0, ), {, digit, |=, VLQ_CONTINUATION_BIT, ;, }, out, ., append, (, Base64]
[;, if, (, value, >, 0, ), {, digit, |=, VLQ_CONTINUATION_BIT, ;, }, out, ., append, (, Base64, ., toBase64]
[), {, digit, |=, VLQ_CONTINUATION_BIT, ;, }, out, ., append, (, Base64, ., toBase64, (, digit, ), ), ;, }]
[>, 0, ), {, digit, |=, VLQ_CONTINUATION_BIT, ;, }, out, ., append, (, Base64, ., toBase64, (, digit, ), )]
[), {, digit, |=, VLQ_CONTINUATION_BIT, ;, }, out, ., append, (, Base64, ., toBase64, (, digit, ), ), ;, }]
[|=, VLQ_CONTINUATION_BIT, ;, }, out, ., append, (, Base64, ., toBase64, (, digit, ), ), ;, }, while, (, value]
[;, }, out, ., append, (, Base64, ., toBase64, (, digit, ), ), ;, }, while, (, value, >, 0]
[;, }, while, (, value, >, 0, ), ;, }, interface, CharIterator, {, boolean, hasNext, (, ), ;, char, next]
[., append, (, Base64, ., toBase64, (, digit, ), ), ;, }, while, (, value, >, 0, ), ;, }]
[), ;, }, while, (, value, >, 0, ), ;, }, interface, CharIterator, {, boolean, hasNext, (, ), ;, char]
[., toBase64, (, digit, ), ), ;, }, while, (, value, >, 0, ), ;, }, interface, CharIterator, {, boolean]
[), ), ;, }, while, (, value, >, 0, ), ;, }, interface, CharIterator, {, boolean, hasNext, (, ), ;]
[), ;, }, interface, CharIterator, {, boolean, hasNext, (, ), ;, char, next, (, ), ;, }, public, static, int]
[>, 0, ), ;, }, interface, CharIterator, {, boolean, hasNext, (, ), ;, char, next, (, ), ;, }, public]
[), ;, }, interface, CharIterator, {, boolean, hasNext, (, ), ;, char, next, (, ), ;, }, public, static, int]
[;, boolean, continuation, ;, int, shift, =, 0, ;, do, {, char, c, =, in, ., next, (, ), ;]
[;, do, {, char, c, =, in, ., next, (, ), ;, int, digit, =, Base64, ., fromBase64, (, c]
[;, int, digit, =, Base64, ., fromBase64, (, c, ), ;, continuation, =, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0]
[., next, (, ), ;, int, digit, =, Base64, ., fromBase64, (, c, ), ;, continuation, =, (, digit, &]
[;, continuation, =, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (]
[., fromBase64, (, c, ), ;, continuation, =, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;]
[), ;, continuation, =, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +]
[=, (, digit, &, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (, digit, <<]
[;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (, digit, <<, shift, ), ;, shift, =, shift, +, VLQ_BASE_SHIFT]
[!=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (, digit, <<, shift, ), ;, shift, =, shift]
[), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (, digit, <<, shift, ), ;, shift, =]
[&, VLQ_CONTINUATION_BIT, ), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (, digit, <<, shift, ), ;]
[), !=, 0, ;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (, digit, <<, shift, ), ;, shift, =]
[;, digit, &=, VLQ_BASE_MASK, ;, result, =, result, +, (, digit, <<, shift, ), ;, shift, =, shift, +, VLQ_BASE_SHIFT]
[&=, VLQ_BASE_MASK, ;, result, =, result, +, (, digit, <<, shift, ), ;, shift, =, shift, +, VLQ_BASE_SHIFT, ;, }]
[;, result, =, result, +, (, digit, <<, shift, ), ;, shift, =, shift, +, VLQ_BASE_SHIFT, ;, }, while, (]
[=, result, +, (, digit, <<, shift, ), ;, shift, =, shift, +, VLQ_BASE_SHIFT, ;, }, while, (, continuation, )]
[;, shift, =, shift, +, VLQ_BASE_SHIFT, ;, }, while, (, continuation, ), ;, return, fromVLQSigned, (, result, ), ;, }]
[+, (, digit, <<, shift, ), ;, shift, =, shift, +, VLQ_BASE_SHIFT, ;, }, while, (, continuation, ), ;, return]
[;, shift, =, shift, +, VLQ_BASE_SHIFT, ;, }, while, (, continuation, ), ;, return, fromVLQSigned, (, result, ), ;, }]
[), ;, shift, =, shift, +, VLQ_BASE_SHIFT, ;, }, while, (, continuation, ), ;, return, fromVLQSigned, (, result, ), ;]
[<<, shift, ), ;, shift, =, shift, +, VLQ_BASE_SHIFT, ;, }, while, (, continuation, ), ;, return, fromVLQSigned, (, result]
[), ;, shift, =, shift, +, VLQ_BASE_SHIFT, ;, }, while, (, continuation, ), ;, return, fromVLQSigned, (, result, ), ;]
[=, shift, +, VLQ_BASE_SHIFT, ;, }, while, (, continuation, ), ;, return, fromVLQSigned, (, result, ), ;, }, }]
[;, }, while, (, continuation, ), ;, return, fromVLQSigned, (, result, ), ;, }, }]
[+, VLQ_BASE_SHIFT, ;, }, while, (, continuation, ), ;, return, fromVLQSigned, (, result, ), ;, }, }]
[;, }, while, (, continuation, ), ;, return, fromVLQSigned, (, result, ), ;, }, }]
[), ;, return, fromVLQSigned, (, result, ), ;, }, }]
[;, }, }]
[), ;, }, }]
