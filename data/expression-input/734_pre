[class, AtLeast, implements, VerificationInOrderMode, ,, VerificationMode, {, final, int, wantedCount, ;, public, AtLeast, (, int, wantedNumberOfInvocations, ), {, if, (]
[class, AtLeast, implements, VerificationInOrderMode, ,, VerificationMode, {, final, int, wantedCount, ;, public, AtLeast, (, int, wantedNumberOfInvocations, ), {, if, (]
[implements, VerificationInOrderMode, ,, VerificationMode, {, final, int, wantedCount, ;, public, AtLeast, (, int, wantedNumberOfInvocations, ), {, if, (, wantedNumberOfInvocations, <]
[{, final, int, wantedCount, ;, public, AtLeast, (, int, wantedNumberOfInvocations, ), {, if, (, wantedNumberOfInvocations, <, 0, ), {, throw]
[wantedCount, ;, public, AtLeast, (, int, wantedNumberOfInvocations, ), {, if, (, wantedNumberOfInvocations, <, 0, ), {, throw, new, MockitoException, (]
[(, int, wantedNumberOfInvocations, ), {, if, (, wantedNumberOfInvocations, <, 0, ), {, throw, new, MockitoException, (, "Negative value is not allowed here", ), ;, }]
[(, int, wantedNumberOfInvocations, ), {, if, (, wantedNumberOfInvocations, <, 0, ), {, throw, new, MockitoException, (, "Negative value is not allowed here", ), ;, }]
[{, if, (, wantedNumberOfInvocations, <, 0, ), {, throw, new, MockitoException, (, "Negative value is not allowed here", ), ;, }, this, ., wantedCount, =]
[;, }, this, ., wantedCount, =, wantedNumberOfInvocations, ;, }, public, void, verify, (, VerificationData, data, ), {, MissingInvocationChecker, missingInvocation, =]
[}, public, void, verify, (, VerificationData, data, ), {, MissingInvocationChecker, missingInvocation, =, new, MissingInvocationChecker, (, ), ;, AtLeastXNumberOfInvocationsChecker, numberOfInvocations, =]
[), {, MissingInvocationChecker, missingInvocation, =, new, MissingInvocationChecker, (, ), ;, AtLeastXNumberOfInvocationsChecker, numberOfInvocations, =, new, AtLeastXNumberOfInvocationsChecker, (, ), ;, if, (]
[), {, MissingInvocationChecker, missingInvocation, =, new, MissingInvocationChecker, (, ), ;, AtLeastXNumberOfInvocationsChecker, numberOfInvocations, =, new, AtLeastXNumberOfInvocationsChecker, (, ), ;, if, (]
[MissingInvocationChecker, missingInvocation, =, new, MissingInvocationChecker, (, ), ;, AtLeastXNumberOfInvocationsChecker, numberOfInvocations, =, new, AtLeastXNumberOfInvocationsChecker, (, ), ;, if, (, wantedCount, ==]
[new, MissingInvocationChecker, (, ), ;, AtLeastXNumberOfInvocationsChecker, numberOfInvocations, =, new, AtLeastXNumberOfInvocationsChecker, (, ), ;, if, (, wantedCount, ==, 1, ), {]
[new, MissingInvocationChecker, (, ), ;, AtLeastXNumberOfInvocationsChecker, numberOfInvocations, =, new, AtLeastXNumberOfInvocationsChecker, (, ), ;, if, (, wantedCount, ==, 1, ), {]
[;, AtLeastXNumberOfInvocationsChecker, numberOfInvocations, =, new, AtLeastXNumberOfInvocationsChecker, (, ), ;, if, (, wantedCount, ==, 1, ), {, missingInvocation, ., check, (]
[;, AtLeastXNumberOfInvocationsChecker, numberOfInvocations, =, new, AtLeastXNumberOfInvocationsChecker, (, ), ;, if, (, wantedCount, ==, 1, ), {, missingInvocation, ., check, (]
[(, ), ;, if, (, wantedCount, ==, 1, ), {, missingInvocation, ., check, (, data, ., getAllInvocations, (, ), ,]
[(, ), ;, if, (, wantedCount, ==, 1, ), {, missingInvocation, ., check, (, data, ., getAllInvocations, (, ), ,]
[), {, missingInvocation, ., check, (, data, ., getAllInvocations, (, ), ,, data, ., getWanted, (, ), ), ;, }]
[), {, missingInvocation, ., check, (, data, ., getAllInvocations, (, ), ,, data, ., getWanted, (, ), ), ;, }]
[check, (, data, ., getAllInvocations, (, ), ,, data, ., getWanted, (, ), ), ;, }, numberOfInvocations, ., check, (]
[check, (, data, ., getAllInvocations, (, ), ,, data, ., getWanted, (, ), ), ;, }, numberOfInvocations, ., check, (]
[), ,, data, ., getWanted, (, ), ), ;, }, numberOfInvocations, ., check, (, data, ., getAllInvocations, (, ), ,]
[), ,, data, ., getWanted, (, ), ), ;, }, numberOfInvocations, ., check, (, data, ., getAllInvocations, (, ), ,]
[), ), ;, }, numberOfInvocations, ., check, (, data, ., getAllInvocations, (, ), ,, data, ., getWanted, (, ), ,]
[), ,, wantedCount, ), ;, }, public, void, verifyInOrder, (, VerificationDataInOrder, data, ), {, List, <, Invocation, >, allInvocations, =]
[), ,, wantedCount, ), ;, }, public, void, verifyInOrder, (, VerificationDataInOrder, data, ), {, List, <, Invocation, >, allInvocations, =]
[(, VerificationDataInOrder, data, ), {, List, <, Invocation, >, allInvocations, =, data, ., getAllInvocations, (, ), ;, InvocationMatcher, wanted, =]
[(, VerificationDataInOrder, data, ), {, List, <, Invocation, >, allInvocations, =, data, ., getAllInvocations, (, ), ;, InvocationMatcher, wanted, =]
[allInvocations, =, data, ., getAllInvocations, (, ), ;, InvocationMatcher, wanted, =, data, ., getWanted, (, ), ;, MissingInvocationInOrderChecker, missingInvocation, =]
[InvocationMatcher, wanted, =, data, ., getWanted, (, ), ;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (, ), ;, AtLeastXNumberOfInvocationsInOrderChecker, numberOfCalls, =]
[data, ., getWanted, (, ), ;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (, ), ;, AtLeastXNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, AtLeastXNumberOfInvocationsInOrderChecker, (]
[data, ., getWanted, (, ), ;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (, ), ;, AtLeastXNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, AtLeastXNumberOfInvocationsInOrderChecker, (]
[new, MissingInvocationInOrderChecker, (, ), ;, AtLeastXNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, AtLeastXNumberOfInvocationsInOrderChecker, (, data, ., getOrderingContext, (, ), ), ;, if, (]
[new, MissingInvocationInOrderChecker, (, ), ;, AtLeastXNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, AtLeastXNumberOfInvocationsInOrderChecker, (, data, ., getOrderingContext, (, ), ), ;, if, (]
[(, ), ;, AtLeastXNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, AtLeastXNumberOfInvocationsInOrderChecker, (, data, ., getOrderingContext, (, ), ), ;, if, (, wantedCount, ==]
[AtLeastXNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, AtLeastXNumberOfInvocationsInOrderChecker, (, data, ., getOrderingContext, (, ), ), ;, if, (, wantedCount, ==, 1, ), {]
[AtLeastXNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, AtLeastXNumberOfInvocationsInOrderChecker, (, data, ., getOrderingContext, (, ), ), ;, if, (, wantedCount, ==, 1, ), {]
[AtLeastXNumberOfInvocationsInOrderChecker, (, data, ., getOrderingContext, (, ), ), ;, if, (, wantedCount, ==, 1, ), {, missingInvocation, ., check, (]
[data, ., getOrderingContext, (, ), ), ;, if, (, wantedCount, ==, 1, ), {, missingInvocation, ., check, (, allInvocations, ,]
[getOrderingContext, (, ), ), ;, if, (, wantedCount, ==, 1, ), {, missingInvocation, ., check, (, allInvocations, ,, wanted, ,]
[), ), ;, if, (, wantedCount, ==, 1, ), {, missingInvocation, ., check, (, allInvocations, ,, wanted, ,, this, ,]
[), ), ;, if, (, wantedCount, ==, 1, ), {, missingInvocation, ., check, (, allInvocations, ,, wanted, ,, this, ,]
[), {, missingInvocation, ., check, (, allInvocations, ,, wanted, ,, this, ,, data, ., getOrderingContext, (, ), ), ;, }]
[), {, missingInvocation, ., check, (, allInvocations, ,, wanted, ,, this, ,, data, ., getOrderingContext, (, ), ), ;, }]
[check, (, allInvocations, ,, wanted, ,, this, ,, data, ., getOrderingContext, (, ), ), ;, }, numberOfCalls, ., check, (]
[allInvocations, ,, wanted, ,, this, ,, data, ., getOrderingContext, (, ), ), ;, }, numberOfCalls, ., check, (, allInvocations, ,]
[wanted, ,, this, ,, data, ., getOrderingContext, (, ), ), ;, }, numberOfCalls, ., check, (, allInvocations, ,, wanted, ,]
[., check, (, allInvocations, ,, wanted, ,, wantedCount, ), ;, }, @, Override, public, String, toString, (, ), {, return]
[., check, (, allInvocations, ,, wanted, ,, wantedCount, ), ;, }, @, Override, public, String, toString, (, ), {, return]
[(, allInvocations, ,, wanted, ,, wantedCount, ), ;, }, @, Override, public, String, toString, (, ), {, return, "Wanted invocations count: at least ", +]
