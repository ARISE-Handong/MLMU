[util, ., Size2D, ;, public, class, CompositeTitle, extends, Title, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[., Size2D, ;, public, class, CompositeTitle, extends, Title, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[=, -, 6770854036232562290L, ;, private, transient, Paint, backgroundPaint, ;, private, BlockContainer, container, ;, public, CompositeTitle, (, ), {, this, (]
[;, private, transient, Paint, backgroundPaint, ;, private, BlockContainer, container, ;, public, CompositeTitle, (, ), {, this, (, new, BlockContainer, (]
[new, BlockContainer, (, new, BorderArrangement, (, ), ), ), ;, }, public, CompositeTitle, (, BlockContainer, container, ), {, if, (]
[new, BlockContainer, (, new, BorderArrangement, (, ), ), ), ;, }, public, CompositeTitle, (, BlockContainer, container, ), {, if, (]
[(, new, BorderArrangement, (, ), ), ), ;, }, public, CompositeTitle, (, BlockContainer, container, ), {, if, (, container, ==]
[), ), ), ;, }, public, CompositeTitle, (, BlockContainer, container, ), {, if, (, container, ==, null, ), {, throw]
[;, }, public, CompositeTitle, (, BlockContainer, container, ), {, if, (, container, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, BlockContainer, container, ), {, if, (, container, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'container' argument.", ), ;, }]
[(, BlockContainer, container, ), {, if, (, container, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'container' argument.", ), ;, }]
[{, if, (, container, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'container' argument.", ), ;, }, this, ., container, =]
[(, container, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'container' argument.", ), ;, }, this, ., container, =, container, ;]
[(, container, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'container' argument.", ), ;, }, this, ., container, =, container, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'container' argument.", ), ;, }, this, ., container, =, container, ;, this, ., backgroundPaint, =]
[this, ., container, =, container, ;, this, ., backgroundPaint, =, null, ;, }, public, Paint, getBackgroundPaint, (, ), {, return]
[this, ., container, =, container, ;, this, ., backgroundPaint, =, null, ;, }, public, Paint, getBackgroundPaint, (, ), {, return]
[public, Paint, getBackgroundPaint, (, ), {, return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {]
[public, Paint, getBackgroundPaint, (, ), {, return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {]
[), {, return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {, this, ., backgroundPaint, =]
[return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {, this, ., backgroundPaint, =, paint, ;]
[., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {, this, ., backgroundPaint, =, paint, ;, notifyListeners, (]
[}, public, void, setBackgroundPaint, (, Paint, paint, ), {, this, ., backgroundPaint, =, paint, ;, notifyListeners, (, new, TitleChangeEvent, (]
[=, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, BlockContainer, getContainer, (, ), {, return]
[=, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, BlockContainer, getContainer, (, ), {, return]
[getContainer, (, ), {, return, this, ., container, ;, }, public, void, setTitleContainer, (, BlockContainer, container, ), {, if, (]
[getContainer, (, ), {, return, this, ., container, ;, }, public, void, setTitleContainer, (, BlockContainer, container, ), {, if, (]
[), {, return, this, ., container, ;, }, public, void, setTitleContainer, (, BlockContainer, container, ), {, if, (, container, ==]
[., container, ;, }, public, void, setTitleContainer, (, BlockContainer, container, ), {, if, (, container, ==, null, ), {, throw]
[}, public, void, setTitleContainer, (, BlockContainer, container, ), {, if, (, container, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, BlockContainer, container, ), {, if, (, container, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'container' argument.", ), ;, }]
[(, BlockContainer, container, ), {, if, (, container, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'container' argument.", ), ;, }]
[{, if, (, container, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'container' argument.", ), ;, }, this, ., container, =]
[., container, =, container, ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, RectangleConstraint, contentConstraint, =]
[=, container, ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, RectangleConstraint, contentConstraint, =, toContentConstraint, (]
[arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, RectangleConstraint, contentConstraint, =, toContentConstraint, (, constraint, ), ;, Size2D, contentSize, =]
[arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, RectangleConstraint, contentConstraint, =, toContentConstraint, (, constraint, ), ;, Size2D, contentSize, =]
[arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, RectangleConstraint, contentConstraint, =, toContentConstraint, (, constraint, ), ;, Size2D, contentSize, =]
[constraint, ), {, RectangleConstraint, contentConstraint, =, toContentConstraint, (, constraint, ), ;, Size2D, contentSize, =, this, ., container, ., arrange, (]
[{, RectangleConstraint, contentConstraint, =, toContentConstraint, (, constraint, ), ;, Size2D, contentSize, =, this, ., container, ., arrange, (, g2, ,]
[toContentConstraint, (, constraint, ), ;, Size2D, contentSize, =, this, ., container, ., arrange, (, g2, ,, contentConstraint, ), ;, return]
[), ;, Size2D, contentSize, =, this, ., container, ., arrange, (, g2, ,, contentConstraint, ), ;, return, new, Size2D, (]
[Size2D, contentSize, =, this, ., container, ., arrange, (, g2, ,, contentConstraint, ), ;, return, new, Size2D, (, calculateTotalWidth, (]
[Size2D, contentSize, =, this, ., container, ., arrange, (, g2, ,, contentConstraint, ), ;, return, new, Size2D, (, calculateTotalWidth, (]
[arrange, (, g2, ,, contentConstraint, ), ;, return, new, Size2D, (, calculateTotalWidth, (, contentSize, ., getWidth, (, ), ), ,]
[g2, ,, contentConstraint, ), ;, return, new, Size2D, (, calculateTotalWidth, (, contentSize, ., getWidth, (, ), ), ,, calculateTotalHeight, (]
[g2, ,, contentConstraint, ), ;, return, new, Size2D, (, calculateTotalWidth, (, contentSize, ., getWidth, (, ), ), ,, calculateTotalHeight, (]
[contentSize, ., getHeight, (, ), ), ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {]
[getHeight, (, ), ), ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (]
[), ), ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (, g2, ,]
[), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (, g2, ,, area, ,]
[area, ,, null, ), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {]
[null, ), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, area, =]
[;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, area, =, trimMargin, (]
[Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, area, =, trimMargin, (, area, ), ;]
[(, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, area, =, trimMargin, (, area, ), ;, drawBorder, (]
[g2, ,, Rectangle2D, area, ,, Object, params, ), {, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,]
[area, ,, Object, params, ), {, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,, area, ), ;]
[Object, params, ), {, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,, area, ), ;, area, =]
[), {, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,, area, ), ;, area, =, trimBorder, (]
[(, area, ), ;, drawBorder, (, g2, ,, area, ), ;, area, =, trimBorder, (, area, ), ;, if, (]
[(, area, ), ;, drawBorder, (, g2, ,, area, ), ;, area, =, trimBorder, (, area, ), ;, if, (]
[(, area, ), ;, drawBorder, (, g2, ,, area, ), ;, area, =, trimBorder, (, area, ), ;, if, (]
[drawBorder, (, g2, ,, area, ), ;, area, =, trimBorder, (, area, ), ;, if, (, this, ., backgroundPaint, !=]
[,, area, ), ;, area, =, trimBorder, (, area, ), ;, if, (, this, ., backgroundPaint, !=, null, ), {]
[,, area, ), ;, area, =, trimBorder, (, area, ), ;, if, (, this, ., backgroundPaint, !=, null, ), {]
[area, =, trimBorder, (, area, ), ;, if, (, this, ., backgroundPaint, !=, null, ), {, g2, ., setPaint, (]
[area, =, trimBorder, (, area, ), ;, if, (, this, ., backgroundPaint, !=, null, ), {, g2, ., setPaint, (]
[), ;, if, (, this, ., backgroundPaint, !=, null, ), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;]
[), ;, if, (, this, ., backgroundPaint, !=, null, ), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;]
[this, ., backgroundPaint, !=, null, ), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (]
[null, ), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, area, ), ;, }]
[{, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, area, ), ;, }, area, =]
[., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, area, ), ;, }, area, =, trimPadding, (]
[., backgroundPaint, ), ;, g2, ., fill, (, area, ), ;, }, area, =, trimPadding, (, area, ), ;, return]
[., backgroundPaint, ), ;, g2, ., fill, (, area, ), ;, }, area, =, trimPadding, (, area, ), ;, return]
[., backgroundPaint, ), ;, g2, ., fill, (, area, ), ;, }, area, =, trimPadding, (, area, ), ;, return]
[fill, (, area, ), ;, }, area, =, trimPadding, (, area, ), ;, return, this, ., container, ., draw, (]
[area, ), ;, }, area, =, trimPadding, (, area, ), ;, return, this, ., container, ., draw, (, g2, ,]
[;, }, area, =, trimPadding, (, area, ), ;, return, this, ., container, ., draw, (, g2, ,, area, ,]
[draw, (, g2, ,, area, ,, params, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[draw, (, g2, ,, area, ,, params, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[g2, ,, area, ,, params, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[params, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, CompositeTitle, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, CompositeTitle, ), ), {, return, false, ;, }, CompositeTitle, that, =]
[if, (, !, (, obj, instanceof, CompositeTitle, ), ), {, return, false, ;, }, CompositeTitle, that, =, (, CompositeTitle, )]
[obj, instanceof, CompositeTitle, ), ), {, return, false, ;, }, CompositeTitle, that, =, (, CompositeTitle, ), obj, ;, if, (]
[instanceof, CompositeTitle, ), ), {, return, false, ;, }, CompositeTitle, that, =, (, CompositeTitle, ), obj, ;, if, (, !]
[instanceof, CompositeTitle, ), ), {, return, false, ;, }, CompositeTitle, that, =, (, CompositeTitle, ), obj, ;, if, (, !]
[instanceof, CompositeTitle, ), ), {, return, false, ;, }, CompositeTitle, that, =, (, CompositeTitle, ), obj, ;, if, (, !]
[false, ;, }, CompositeTitle, that, =, (, CompositeTitle, ), obj, ;, if, (, !, this, ., container, ., equals, (]
[false, ;, }, CompositeTitle, that, =, (, CompositeTitle, ), obj, ;, if, (, !, this, ., container, ., equals, (]
[CompositeTitle, ), obj, ;, if, (, !, this, ., container, ., equals, (, that, ., container, ), ), {, return]
[(, !, this, ., container, ., equals, (, that, ., container, ), ), {, return, false, ;, }, if, (]
[!, this, ., container, ., equals, (, that, ., container, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., container, ., equals, (, that, ., container, ), ), {, return, false, ;, }, if, (, !]
[., equals, (, that, ., container, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., equals, (, that, ., container, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., container, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,]
[., container, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return]
[!, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, return]
[!, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, return]
[(, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, return, super, ., equals, (]
[}, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[}, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,]
[this, ., backgroundPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[this, ., backgroundPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., backgroundPaint, =]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., backgroundPaint, =]
[), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (]
