[;, private, static, volatile, boolean, defaultPrettyPrint, ;, private, static, List, <, TracingStatistic, >, extraTracingStatistics, =, new, CopyOnWriteArrayList, <, TracingStatistic, >]
[., getLogger, (, Tracer, ., class, ., getName, (, ), ), ;, private, static, volatile, boolean, defaultPrettyPrint, ;, private, static]
[), ;, private, static, volatile, boolean, defaultPrettyPrint, ;, private, static, List, <, TracingStatistic, >, extraTracingStatistics, =, new, CopyOnWriteArrayList, <, TracingStatistic]
[., getName, (, ), ), ;, private, static, volatile, boolean, defaultPrettyPrint, ;, private, static, List, <, TracingStatistic, >, extraTracingStatistics, =]
[;, private, long, [, ], extraTracingValues, ;, private, final, @, Nullable, String, type, ;, private, final, String, comment, ;, private]
[;, static, interface, InternalClock, {, long, currentTimeMillis, (, ), ;, }, static, InternalClock, clock, =, new, InternalClock, (, ), {]
[;, Tracer, (, @, Nullable, String, type, ,, @, Nullable, String, comment, ), {, this, ., type, =, type, ;]
[;, }, }, ;, Tracer, (, @, Nullable, String, type, ,, @, Nullable, String, comment, ), {, this, ., type]
[., currentTimeMillis, (, ), ;, }, }, ;, Tracer, (, @, Nullable, String, type, ,, @, Nullable, String, comment, )]
[=, type, ;, this, ., comment, =, comment, ==, null, ?, "", :, comment, ;, startTimeMs, =, clock, ., currentTimeMillis]
[., type, =, type, ;, this, ., comment, =, comment, ==, null, ?, "", :, comment, ;, startTimeMs, =, clock]
[;, this, ., comment, =, comment, ==, null, ?, "", :, comment, ;, startTimeMs, =, clock, ., currentTimeMillis, (, )]
[=, comment, ==, null, ?, "", :, comment, ;, startTimeMs, =, clock, ., currentTimeMillis, (, ), ;, startThread, =, Thread]
[., comment, =, comment, ==, null, ?, "", :, comment, ;, startTimeMs, =, clock, ., currentTimeMillis, (, ), ;, startThread]
[;, startTimeMs, =, clock, ., currentTimeMillis, (, ), ;, startThread, =, Thread, ., currentThread, (, ), ;, if, (, !]
[?, "", :, comment, ;, startTimeMs, =, clock, ., currentTimeMillis, (, ), ;, startThread, =, Thread, ., currentThread, (, )]
[==, null, ?, "", :, comment, ;, startTimeMs, =, clock, ., currentTimeMillis, (, ), ;, startThread, =, Thread, ., currentThread]
[?, "", :, comment, ;, startTimeMs, =, clock, ., currentTimeMillis, (, ), ;, startThread, =, Thread, ., currentThread, (, )]
[:, comment, ;, startTimeMs, =, clock, ., currentTimeMillis, (, ), ;, startThread, =, Thread, ., currentThread, (, ), ;, if]
[;, startTimeMs, =, clock, ., currentTimeMillis, (, ), ;, startThread, =, Thread, ., currentThread, (, ), ;, if, (, !]
[=, clock, ., currentTimeMillis, (, ), ;, startThread, =, Thread, ., currentThread, (, ), ;, if, (, !, extraTracingStatistics, .]
[;, startThread, =, Thread, ., currentThread, (, ), ;, if, (, !, extraTracingStatistics, ., isEmpty, (, ), ), {, int]
[., currentTimeMillis, (, ), ;, startThread, =, Thread, ., currentThread, (, ), ;, if, (, !, extraTracingStatistics, ., isEmpty, (]
[=, Thread, ., currentThread, (, ), ;, if, (, !, extraTracingStatistics, ., isEmpty, (, ), ), {, int, size, =]
[;, if, (, !, extraTracingStatistics, ., isEmpty, (, ), ), {, int, size, =, extraTracingStatistics, ., size, (, ), ;]
[., currentThread, (, ), ;, if, (, !, extraTracingStatistics, ., isEmpty, (, ), ), {, int, size, =, extraTracingStatistics, .]
[), {, int, size, =, extraTracingStatistics, ., size, (, ), ;, extraTracingValues, =, new, long, [, size, ], ;, int]
[), {, int, size, =, extraTracingStatistics, ., size, (, ), ;, extraTracingValues, =, new, long, [, size, ], ;, int]
[., isEmpty, (, ), ), {, int, size, =, extraTracingStatistics, ., size, (, ), ;, extraTracingValues, =, new, long, []
[;, extraTracingValues, =, new, long, [, size, ], ;, int, i, =, 0, ;, for, (, TracingStatistic, tracingStatistic, :, extraTracingStatistics]
[., size, (, ), ;, extraTracingValues, =, new, long, [, size, ], ;, int, i, =, 0, ;, for, (]
[=, new, long, [, size, ], ;, int, i, =, 0, ;, for, (, TracingStatistic, tracingStatistic, :, extraTracingStatistics, ), {]
[;, int, i, =, 0, ;, for, (, TracingStatistic, tracingStatistic, :, extraTracingStatistics, ), {, extraTracingValues, [, i, ], =, tracingStatistic]
[], ;, int, i, =, 0, ;, for, (, TracingStatistic, tracingStatistic, :, extraTracingStatistics, ), {, extraTracingValues, [, i, ], =]
[;, for, (, TracingStatistic, tracingStatistic, :, extraTracingStatistics, ), {, extraTracingValues, [, i, ], =, tracingStatistic, ., start, (, startThread, )]
[), {, extraTracingValues, [, i, ], =, tracingStatistic, ., start, (, startThread, ), ;, i, ++, ;, }, }, ThreadTrace]
[=, tracingStatistic, ., start, (, startThread, ), ;, i, ++, ;, }, }, ThreadTrace, trace, =, getThreadTrace, (, ), ;]
[[, i, ], =, tracingStatistic, ., start, (, startThread, ), ;, i, ++, ;, }, }, ThreadTrace, trace, =, getThreadTrace]
[], =, tracingStatistic, ., start, (, startThread, ), ;, i, ++, ;, }, }, ThreadTrace, trace, =, getThreadTrace, (, )]
[;, i, ++, ;, }, }, ThreadTrace, trace, =, getThreadTrace, (, ), ;, if, (, !, trace, ., isInitialized, (]
[., start, (, startThread, ), ;, i, ++, ;, }, }, ThreadTrace, trace, =, getThreadTrace, (, ), ;, if, (]
[), ;, i, ++, ;, }, }, ThreadTrace, trace, =, getThreadTrace, (, ), ;, if, (, !, trace, ., isInitialized]
[;, }, }, ThreadTrace, trace, =, getThreadTrace, (, ), ;, if, (, !, trace, ., isInitialized, (, ), ), {]
[++, ;, }, }, ThreadTrace, trace, =, getThreadTrace, (, ), ;, if, (, !, trace, ., isInitialized, (, ), )]
[;, if, (, !, trace, ., isInitialized, (, ), ), {, return, ;, }, if, (, trace, ., events, .]
[), {, return, ;, }, if, (, trace, ., events, ., size, (, ), >=, MAX_TRACE_SIZE, ), {, logger, .]
[), {, return, ;, }, if, (, trace, ., events, ., size, (, ), >=, MAX_TRACE_SIZE, ), {, logger, .]
[., isInitialized, (, ), ), {, return, ;, }, if, (, trace, ., events, ., size, (, ), >=, MAX_TRACE_SIZE]
[), {, logger, ., log, (, Level, ., WARNING, ,, "Giant thread trace. Too many Tracers created. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString]
[>=, MAX_TRACE_SIZE, ), {, logger, ., log, (, Level, ., WARNING, ,, "Giant thread trace. Too many Tracers created. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace]
[., size, (, ), >=, MAX_TRACE_SIZE, ), {, logger, ., log, (, Level, ., WARNING, ,, "Giant thread trace. Too many Tracers created. ", +, "Clearing to avoid memory leak.", ,]
[., events, ., size, (, ), >=, MAX_TRACE_SIZE, ), {, logger, ., log, (, Level, ., WARNING, ,, "Giant thread trace. Too many Tracers created. ", +]
[), {, logger, ., log, (, Level, ., WARNING, ,, "Giant thread trace. Too many Tracers created. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString]
[;, trace, ., truncateEvents, (, ), ;, }, if, (, trace, ., outstandingEvents, ., size, (, ), >=, MAX_TRACE_SIZE, )]
[., log, (, Level, ., WARNING, ,, "Giant thread trace. Too many Tracers created. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString, (, ), )]
[,, "Giant thread trace. Too many Tracers created. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString, (, ), ), ), ;, trace, ., truncateEvents, (]
[., WARNING, ,, "Giant thread trace. Too many Tracers created. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString, (, ), ), ), ;, trace, .]
[,, new, Throwable, (, trace, ., toString, (, ), ), ), ;, trace, ., truncateEvents, (, ), ;, }, if]
[+, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString, (, ), ), ), ;, trace, ., truncateEvents, (, ), ;]
[,, new, Throwable, (, trace, ., toString, (, ), ), ), ;, trace, ., truncateEvents, (, ), ;, }, if]
[), ;, trace, ., truncateEvents, (, ), ;, }, if, (, trace, ., outstandingEvents, ., size, (, ), >=, MAX_TRACE_SIZE]
[), ), ;, trace, ., truncateEvents, (, ), ;, }, if, (, trace, ., outstandingEvents, ., size, (, ), >=]
[., toString, (, ), ), ), ;, trace, ., truncateEvents, (, ), ;, }, if, (, trace, ., outstandingEvents, .]
[;, }, if, (, trace, ., outstandingEvents, ., size, (, ), >=, MAX_TRACE_SIZE, ), {, logger, ., log, (, Level]
[., truncateEvents, (, ), ;, }, if, (, trace, ., outstandingEvents, ., size, (, ), >=, MAX_TRACE_SIZE, ), {, logger]
[), {, logger, ., log, (, Level, ., WARNING, ,, "Too many outstanding Tracers. Tracer.stop() is missing ", +, "or Tracer.stop() is not wrapped in a ", +, "try/finally block. ", +, "Clearing to avoid memory leak.", ,, new, Throwable]
[>=, MAX_TRACE_SIZE, ), {, logger, ., log, (, Level, ., WARNING, ,, "Too many outstanding Tracers. Tracer.stop() is missing ", +, "or Tracer.stop() is not wrapped in a ", +, "try/finally block. ", +, "Clearing to avoid memory leak.", ,]
[., size, (, ), >=, MAX_TRACE_SIZE, ), {, logger, ., log, (, Level, ., WARNING, ,, "Too many outstanding Tracers. Tracer.stop() is missing ", +, "or Tracer.stop() is not wrapped in a ", +]
[., outstandingEvents, ., size, (, ), >=, MAX_TRACE_SIZE, ), {, logger, ., log, (, Level, ., WARNING, ,, "Too many outstanding Tracers. Tracer.stop() is missing ", +]
[), {, logger, ., log, (, Level, ., WARNING, ,, "Too many outstanding Tracers. Tracer.stop() is missing ", +, "or Tracer.stop() is not wrapped in a ", +, "try/finally block. ", +, "Clearing to avoid memory leak.", ,, new, Throwable]
[;, trace, ., truncateOutstandingEvents, (, ), ;, }, trace, ., startEvent, (, this, ), ;, }, Tracer, (, String, comment]
[., log, (, Level, ., WARNING, ,, "Too many outstanding Tracers. Tracer.stop() is missing ", +, "or Tracer.stop() is not wrapped in a ", +, "try/finally block. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, .]
[,, "Too many outstanding Tracers. Tracer.stop() is missing ", +, "or Tracer.stop() is not wrapped in a ", +, "try/finally block. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString, (, ), ), ), ;]
[., WARNING, ,, "Too many outstanding Tracers. Tracer.stop() is missing ", +, "or Tracer.stop() is not wrapped in a ", +, "try/finally block. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString, (, ), )]
[,, new, Throwable, (, trace, ., toString, (, ), ), ), ;, trace, ., truncateOutstandingEvents, (, ), ;, }, trace]
[+, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString, (, ), ), ), ;, trace, ., truncateOutstandingEvents, (, ), ;]
[+, "try/finally block. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString, (, ), ), ), ;, trace, ., truncateOutstandingEvents, (]
[+, "or Tracer.stop() is not wrapped in a ", +, "try/finally block. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString, (, ), ), ), ;, trace, .]
[+, "try/finally block. ", +, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString, (, ), ), ), ;, trace, ., truncateOutstandingEvents, (]
[+, "Clearing to avoid memory leak.", ,, new, Throwable, (, trace, ., toString, (, ), ), ), ;, trace, ., truncateOutstandingEvents, (, ), ;]
[,, new, Throwable, (, trace, ., toString, (, ), ), ), ;, trace, ., truncateOutstandingEvents, (, ), ;, }, trace]
[), ;, trace, ., truncateOutstandingEvents, (, ), ;, }, trace, ., startEvent, (, this, ), ;, }, Tracer, (, String]
[), ), ;, trace, ., truncateOutstandingEvents, (, ), ;, }, trace, ., startEvent, (, this, ), ;, }, Tracer, (]
[., toString, (, ), ), ), ;, trace, ., truncateOutstandingEvents, (, ), ;, }, trace, ., startEvent, (, this, )]
[;, }, trace, ., startEvent, (, this, ), ;, }, Tracer, (, String, comment, ), {, this, (, null, ,]
[., truncateOutstandingEvents, (, ), ;, }, trace, ., startEvent, (, this, ), ;, }, Tracer, (, String, comment, ), {]
[;, }, Tracer, (, String, comment, ), {, this, (, null, ,, comment, ), ;, }, static, Tracer, shortName, (]
[., startEvent, (, this, ), ;, }, Tracer, (, String, comment, ), {, this, (, null, ,, comment, ), ;]
[), ;, }, Tracer, (, String, comment, ), {, this, (, null, ,, comment, ), ;, }, static, Tracer, shortName]
[,, comment, ), ;, }, static, Tracer, shortName, (, Object, object, ,, String, comment, ), {, if, (, object, ==]
[), ;, }, static, Tracer, shortName, (, Object, object, ,, String, comment, ), {, if, (, object, ==, null, )]
[), {, return, new, Tracer, (, comment, ), ;, }, return, new, Tracer, (, object, ., getClass, (, ), .]
[==, null, ), {, return, new, Tracer, (, comment, ), ;, }, return, new, Tracer, (, object, ., getClass, (]
[), {, return, new, Tracer, (, comment, ), ;, }, return, new, Tracer, (, object, ., getClass, (, ), .]
[;, }, return, new, Tracer, (, object, ., getClass, (, ), ., getSimpleName, (, ), ,, comment, ), ;, }]
[), ;, }, return, new, Tracer, (, object, ., getClass, (, ), ., getSimpleName, (, ), ,, comment, ), ;]
[;, }, private, static, String, longToPaddedString, (, long, v, ,, int, digits_column_width, ), {, int, digit_width, =, numDigits, (, v]
[,, comment, ), ;, }, private, static, String, longToPaddedString, (, long, v, ,, int, digits_column_width, ), {, int, digit_width, =]
[., getSimpleName, (, ), ,, comment, ), ;, }, private, static, String, longToPaddedString, (, long, v, ,, int, digits_column_width, )]
[., getClass, (, ), ., getSimpleName, (, ), ,, comment, ), ;, }, private, static, String, longToPaddedString, (, long, v]
[), ;, }, private, static, String, longToPaddedString, (, long, v, ,, int, digits_column_width, ), {, int, digit_width, =, numDigits, (]
[;, StringBuilder, sb, =, new, StringBuilder, (, ), ;, appendSpaces, (, sb, ,, digits_column_width, -, digit_width, ), ;, sb, .]
[), ;, StringBuilder, sb, =, new, StringBuilder, (, ), ;, appendSpaces, (, sb, ,, digits_column_width, -, digit_width, ), ;, sb]
[;, appendSpaces, (, sb, ,, digits_column_width, -, digit_width, ), ;, sb, ., append, (, v, ), ;, return, sb, .]
[;, sb, ., append, (, v, ), ;, return, sb, ., toString, (, ), ;, }, private, static, int, numDigits]
[,, digits_column_width, -, digit_width, ), ;, sb, ., append, (, v, ), ;, return, sb, ., toString, (, ), ;]
[), ;, sb, ., append, (, v, ), ;, return, sb, ., toString, (, ), ;, }, private, static, int]
[-, digit_width, ), ;, sb, ., append, (, v, ), ;, return, sb, ., toString, (, ), ;, }, private]
[), ;, sb, ., append, (, v, ), ;, return, sb, ., toString, (, ), ;, }, private, static, int]
[;, return, sb, ., toString, (, ), ;, }, private, static, int, numDigits, (, long, n, ), {, int, i]
[., append, (, v, ), ;, return, sb, ., toString, (, ), ;, }, private, static, int, numDigits, (, long]
[), ;, return, sb, ., toString, (, ), ;, }, private, static, int, numDigits, (, long, n, ), {, int]
[;, }, private, static, int, numDigits, (, long, n, ), {, int, i, =, 0, ;, do, {, i, ++]
[., toString, (, ), ;, }, private, static, int, numDigits, (, long, n, ), {, int, i, =, 0, ;]
[;, do, {, i, ++, ;, n, =, n, /, 10, ;, }, while, (, n, >, 0, ), ;]
[;, n, =, n, /, 10, ;, }, while, (, n, >, 0, ), ;, return, i, ;, }, @]
[++, ;, n, =, n, /, 10, ;, }, while, (, n, >, 0, ), ;, return, i, ;, }]
[=, n, /, 10, ;, }, while, (, n, >, 0, ), ;, return, i, ;, }, @, VisibleForTesting, static]
[;, }, while, (, n, >, 0, ), ;, return, i, ;, }, @, VisibleForTesting, static, void, appendSpaces, (, StringBuilder]
[/, 10, ;, }, while, (, n, >, 0, ), ;, return, i, ;, }, @, VisibleForTesting, static, void, appendSpaces]
[;, }, while, (, n, >, 0, ), ;, return, i, ;, }, @, VisibleForTesting, static, void, appendSpaces, (, StringBuilder]
[), ;, return, i, ;, }, @, VisibleForTesting, static, void, appendSpaces, (, StringBuilder, sb, ,, int, numSpaces, ), {, if]
[>, 0, ), ;, return, i, ;, }, @, VisibleForTesting, static, void, appendSpaces, (, StringBuilder, sb, ,, int, numSpaces, )]
[), ;, return, i, ;, }, @, VisibleForTesting, static, void, appendSpaces, (, StringBuilder, sb, ,, int, numSpaces, ), {, if]
[;, }, @, VisibleForTesting, static, void, appendSpaces, (, StringBuilder, sb, ,, int, numSpaces, ), {, if, (, numSpaces, >, 16]
[), {, logger, ., warning, (, "Tracer.appendSpaces called with large numSpaces", ), ;, numSpaces, =, 16, ;, }, while, (, numSpaces, >=, 5, )]
[>, 16, ), {, logger, ., warning, (, "Tracer.appendSpaces called with large numSpaces", ), ;, numSpaces, =, 16, ;, }, while, (, numSpaces, >=]
[), {, logger, ., warning, (, "Tracer.appendSpaces called with large numSpaces", ), ;, numSpaces, =, 16, ;, }, while, (, numSpaces, >=, 5, )]
[;, numSpaces, =, 16, ;, }, while, (, numSpaces, >=, 5, ), {, sb, ., append, (, "     ", ), ;]
[., warning, (, "Tracer.appendSpaces called with large numSpaces", ), ;, numSpaces, =, 16, ;, }, while, (, numSpaces, >=, 5, ), {, sb, .]
[), ;, numSpaces, =, 16, ;, }, while, (, numSpaces, >=, 5, ), {, sb, ., append, (, "     ", )]
[=, 16, ;, }, while, (, numSpaces, >=, 5, ), {, sb, ., append, (, "     ", ), ;, numSpaces, -=]
[;, }, while, (, numSpaces, >=, 5, ), {, sb, ., append, (, "     ", ), ;, numSpaces, -=, 5, ;]
[), {, sb, ., append, (, "     ", ), ;, numSpaces, -=, 5, ;, }, switch, (, numSpaces, ), {, case]
[>=, 5, ), {, sb, ., append, (, "     ", ), ;, numSpaces, -=, 5, ;, }, switch, (, numSpaces, )]
[), {, sb, ., append, (, "     ", ), ;, numSpaces, -=, 5, ;, }, switch, (, numSpaces, ), {, case]
[;, numSpaces, -=, 5, ;, }, switch, (, numSpaces, ), {, case, 1, :, sb, ., append, (, " ", )]
[., append, (, "     ", ), ;, numSpaces, -=, 5, ;, }, switch, (, numSpaces, ), {, case, 1, :, sb]
[), ;, numSpaces, -=, 5, ;, }, switch, (, numSpaces, ), {, case, 1, :, sb, ., append, (, " "]
[-=, 5, ;, }, switch, (, numSpaces, ), {, case, 1, :, sb, ., append, (, " ", ), ;, break]
[;, }, switch, (, numSpaces, ), {, case, 1, :, sb, ., append, (, " ", ), ;, break, ;, case]
[), {, case, 1, :, sb, ., append, (, " ", ), ;, break, ;, case, 2, :, sb, ., append]
[:, sb, ., append, (, " ", ), ;, break, ;, case, 2, :, sb, ., append, (, "  ", ), ;]
[;, break, ;, case, 2, :, sb, ., append, (, "  ", ), ;, break, ;, case, 3, :, sb, .]
[., append, (, " ", ), ;, break, ;, case, 2, :, sb, ., append, (, "  ", ), ;, break, ;]
[), ;, break, ;, case, 2, :, sb, ., append, (, "  ", ), ;, break, ;, case, 3, :, sb]
[:, sb, ., append, (, "  ", ), ;, break, ;, case, 3, :, sb, ., append, (, "   ", ), ;]
[;, break, ;, case, 3, :, sb, ., append, (, "   ", ), ;, break, ;, case, 4, :, sb, .]
[., append, (, "  ", ), ;, break, ;, case, 3, :, sb, ., append, (, "   ", ), ;, break, ;]
[), ;, break, ;, case, 3, :, sb, ., append, (, "   ", ), ;, break, ;, case, 4, :, sb]
[:, sb, ., append, (, "   ", ), ;, break, ;, case, 4, :, sb, ., append, (, "    ", ), ;]
[;, break, ;, case, 4, :, sb, ., append, (, "    ", ), ;, break, ;, }, }, static, int, addTracingStatistic]
[., append, (, "   ", ), ;, break, ;, case, 4, :, sb, ., append, (, "    ", ), ;, break, ;]
[), ;, break, ;, case, 4, :, sb, ., append, (, "    ", ), ;, break, ;, }, }, static, int]
[:, sb, ., append, (, "    ", ), ;, break, ;, }, }, static, int, addTracingStatistic, (, TracingStatistic, tracingStatistic, ), {]
[;, break, ;, }, }, static, int, addTracingStatistic, (, TracingStatistic, tracingStatistic, ), {, if, (, tracingStatistic, ., enable, (, )]
[., append, (, "    ", ), ;, break, ;, }, }, static, int, addTracingStatistic, (, TracingStatistic, tracingStatistic, ), {, if, (]
[), ;, break, ;, }, }, static, int, addTracingStatistic, (, TracingStatistic, tracingStatistic, ), {, if, (, tracingStatistic, ., enable, (]
[), {, extraTracingStatistics, ., add, (, tracingStatistic, ), ;, return, extraTracingStatistics, ., lastIndexOf, (, tracingStatistic, ), ;, }, else, {]
[., enable, (, ), ), {, extraTracingStatistics, ., add, (, tracingStatistic, ), ;, return, extraTracingStatistics, ., lastIndexOf, (, tracingStatistic, )]
[;, return, extraTracingStatistics, ., lastIndexOf, (, tracingStatistic, ), ;, }, else, {, return, -, 1, ;, }, }, @, VisibleForTesting]
[., add, (, tracingStatistic, ), ;, return, extraTracingStatistics, ., lastIndexOf, (, tracingStatistic, ), ;, }, else, {, return, -, 1]
[), ;, return, extraTracingStatistics, ., lastIndexOf, (, tracingStatistic, ), ;, }, else, {, return, -, 1, ;, }, }, @]
[;, }, else, {, return, -, 1, ;, }, }, @, VisibleForTesting, static, void, clearTracingStatisticsTestingOnly, (, ), {, extraTracingStatistics, .]
[., lastIndexOf, (, tracingStatistic, ), ;, }, else, {, return, -, 1, ;, }, }, @, VisibleForTesting, static, void, clearTracingStatisticsTestingOnly]
[), ;, }, else, {, return, -, 1, ;, }, }, @, VisibleForTesting, static, void, clearTracingStatisticsTestingOnly, (, ), {, extraTracingStatistics]
[;, }, }, @, VisibleForTesting, static, void, clearTracingStatisticsTestingOnly, (, ), {, extraTracingStatistics, ., clear, (, ), ;, }, long, stop]
[;, }, }, @, VisibleForTesting, static, void, clearTracingStatisticsTestingOnly, (, ), {, extraTracingStatistics, ., clear, (, ), ;, }, long, stop]
[;, }, long, stop, (, int, silence_threshold, ), {, Preconditions, ., checkState, (, Thread, ., currentThread, (, ), ==, startThread]
[., clear, (, ), ;, }, long, stop, (, int, silence_threshold, ), {, Preconditions, ., checkState, (, Thread, ., currentThread]
[;, ThreadTrace, trace, =, getThreadTrace, (, ), ;, if, (, !, trace, ., isInitialized, (, ), ), {, return, 0]
[., checkState, (, Thread, ., currentThread, (, ), ==, startThread, ), ;, ThreadTrace, trace, =, getThreadTrace, (, ), ;, if]
[), ;, ThreadTrace, trace, =, getThreadTrace, (, ), ;, if, (, !, trace, ., isInitialized, (, ), ), {, return]
[==, startThread, ), ;, ThreadTrace, trace, =, getThreadTrace, (, ), ;, if, (, !, trace, ., isInitialized, (, ), )]
[., currentThread, (, ), ==, startThread, ), ;, ThreadTrace, trace, =, getThreadTrace, (, ), ;, if, (, !, trace, .]
[), ;, ThreadTrace, trace, =, getThreadTrace, (, ), ;, if, (, !, trace, ., isInitialized, (, ), ), {, return]
[;, if, (, !, trace, ., isInitialized, (, ), ), {, return, 0, ;, }, stopTimeMs, =, clock, ., currentTimeMillis]
[), {, return, 0, ;, }, stopTimeMs, =, clock, ., currentTimeMillis, (, ), ;, if, (, extraTracingValues, !=, null, )]
[), {, return, 0, ;, }, stopTimeMs, =, clock, ., currentTimeMillis, (, ), ;, if, (, extraTracingValues, !=, null, )]
[., isInitialized, (, ), ), {, return, 0, ;, }, stopTimeMs, =, clock, ., currentTimeMillis, (, ), ;, if, (]
[;, }, stopTimeMs, =, clock, ., currentTimeMillis, (, ), ;, if, (, extraTracingValues, !=, null, ), {, for, (, int]
[=, clock, ., currentTimeMillis, (, ), ;, if, (, extraTracingValues, !=, null, ), {, for, (, int, i, =, 0]
[;, if, (, extraTracingValues, !=, null, ), {, for, (, int, i, =, 0, ;, i, <, extraTracingValues, ., length]
[., currentTimeMillis, (, ), ;, if, (, extraTracingValues, !=, null, ), {, for, (, int, i, =, 0, ;, i]
[), {, for, (, int, i, =, 0, ;, i, <, extraTracingValues, ., length, ;, i, ++, ), {, long]
[!=, null, ), {, for, (, int, i, =, 0, ;, i, <, extraTracingValues, ., length, ;, i, ++, )]
[), {, for, (, int, i, =, 0, ;, i, <, extraTracingValues, ., length, ;, i, ++, ), {, long]
[;, i, <, extraTracingValues, ., length, ;, i, ++, ), {, long, value, =, extraTracingStatistics, ., get, (, i, )]
[;, i, ++, ), {, long, value, =, extraTracingStatistics, ., get, (, i, ), ., stop, (, startThread, ), ;]
[<, extraTracingValues, ., length, ;, i, ++, ), {, long, value, =, extraTracingStatistics, ., get, (, i, ), ., stop]
[;, i, ++, ), {, long, value, =, extraTracingStatistics, ., get, (, i, ), ., stop, (, startThread, ), ;]
[., length, ;, i, ++, ), {, long, value, =, extraTracingStatistics, ., get, (, i, ), ., stop, (, startThread]
[), {, long, value, =, extraTracingStatistics, ., get, (, i, ), ., stop, (, startThread, ), ;, extraTracingValues, [, i]
[++, ), {, long, value, =, extraTracingStatistics, ., get, (, i, ), ., stop, (, startThread, ), ;, extraTracingValues, []
[;, extraTracingValues, [, i, ], =, value, -, extraTracingValues, [, i, ], ;, }, }, if, (, !, trace, .]
[., stop, (, startThread, ), ;, extraTracingValues, [, i, ], =, value, -, extraTracingValues, [, i, ], ;, }, }]
[., get, (, i, ), ., stop, (, startThread, ), ;, extraTracingValues, [, i, ], =, value, -, extraTracingValues, []
[), ., stop, (, startThread, ), ;, extraTracingValues, [, i, ], =, value, -, extraTracingValues, [, i, ], ;, }]
[), ;, extraTracingValues, [, i, ], =, value, -, extraTracingValues, [, i, ], ;, }, }, if, (, !, trace]
[=, value, -, extraTracingValues, [, i, ], ;, }, }, if, (, !, trace, ., isInitialized, (, ), ), {]
[[, i, ], =, value, -, extraTracingValues, [, i, ], ;, }, }, if, (, !, trace, ., isInitialized, (]
[], =, value, -, extraTracingValues, [, i, ], ;, }, }, if, (, !, trace, ., isInitialized, (, ), )]
[;, }, }, if, (, !, trace, ., isInitialized, (, ), ), {, return, 0, ;, }, trace, ., endEvent]
[-, extraTracingValues, [, i, ], ;, }, }, if, (, !, trace, ., isInitialized, (, ), ), {, return, 0]
[;, }, }, if, (, !, trace, ., isInitialized, (, ), ), {, return, 0, ;, }, trace, ., endEvent]
[[, i, ], ;, }, }, if, (, !, trace, ., isInitialized, (, ), ), {, return, 0, ;, }]
[], ;, }, }, if, (, !, trace, ., isInitialized, (, ), ), {, return, 0, ;, }, trace, .]
[), {, return, 0, ;, }, trace, ., endEvent, (, this, ,, silence_threshold, ), ;, return, stopTimeMs, -, startTimeMs, ;]
[), {, return, 0, ;, }, trace, ., endEvent, (, this, ,, silence_threshold, ), ;, return, stopTimeMs, -, startTimeMs, ;]
[., isInitialized, (, ), ), {, return, 0, ;, }, trace, ., endEvent, (, this, ,, silence_threshold, ), ;, return]
[;, }, trace, ., endEvent, (, this, ,, silence_threshold, ), ;, return, stopTimeMs, -, startTimeMs, ;, }, long, stop, (]
[;, return, stopTimeMs, -, startTimeMs, ;, }, long, stop, (, ), {, return, stop, (, -, 1, ), ;, }]
[., endEvent, (, this, ,, silence_threshold, ), ;, return, stopTimeMs, -, startTimeMs, ;, }, long, stop, (, ), {, return]
[,, silence_threshold, ), ;, return, stopTimeMs, -, startTimeMs, ;, }, long, stop, (, ), {, return, stop, (, -, 1]
[), ;, return, stopTimeMs, -, startTimeMs, ;, }, long, stop, (, ), {, return, stop, (, -, 1, ), ;]
[;, }, long, stop, (, ), {, return, stop, (, -, 1, ), ;, }, @, Override, public, String, toString]
[-, startTimeMs, ;, }, long, stop, (, ), {, return, stop, (, -, 1, ), ;, }, @, Override, public]
[;, }, long, stop, (, ), {, return, stop, (, -, 1, ), ;, }, @, Override, public, String, toString]
[;, }, @, Override, public, String, toString, (, ), {, if, (, type, ==, null, ), {, return, comment, ;]
[), ;, }, @, Override, public, String, toString, (, ), {, if, (, type, ==, null, ), {, return, comment]
[), ;, }, @, Override, public, String, toString, (, ), {, if, (, type, ==, null, ), {, return, comment]
[), {, return, comment, ;, }, else, {, return, "[", +, type, +, "] ", +, comment, ;, }, }, static]
[==, null, ), {, return, comment, ;, }, else, {, return, "[", +, type, +, "] ", +, comment, ;, }]
[), {, return, comment, ;, }, else, {, return, "[", +, type, +, "] ", +, comment, ;, }, }, static]
[;, }, else, {, return, "[", +, type, +, "] ", +, comment, ;, }, }, static, void, setDefaultSilenceThreshold, (, int]
[;, }, }, static, void, setDefaultSilenceThreshold, (, int, threshold, ), {, getThreadTrace, (, ), ., defaultSilenceThreshold, =, threshold, ;, }]
[+, comment, ;, }, }, static, void, setDefaultSilenceThreshold, (, int, threshold, ), {, getThreadTrace, (, ), ., defaultSilenceThreshold, =, threshold]
[+, "] ", +, comment, ;, }, }, static, void, setDefaultSilenceThreshold, (, int, threshold, ), {, getThreadTrace, (, ), ., defaultSilenceThreshold]
[+, type, +, "] ", +, comment, ;, }, }, static, void, setDefaultSilenceThreshold, (, int, threshold, ), {, getThreadTrace, (, )]
[+, "] ", +, comment, ;, }, }, static, void, setDefaultSilenceThreshold, (, int, threshold, ), {, getThreadTrace, (, ), ., defaultSilenceThreshold]
[+, comment, ;, }, }, static, void, setDefaultSilenceThreshold, (, int, threshold, ), {, getThreadTrace, (, ), ., defaultSilenceThreshold, =, threshold]
[;, }, }, static, void, setDefaultSilenceThreshold, (, int, threshold, ), {, getThreadTrace, (, ), ., defaultSilenceThreshold, =, threshold, ;, }]
[=, threshold, ;, }, static, void, initCurrentThreadTrace, (, ), {, ThreadTrace, events, =, getThreadTrace, (, ), ;, if, (, !]
[., defaultSilenceThreshold, =, threshold, ;, }, static, void, initCurrentThreadTrace, (, ), {, ThreadTrace, events, =, getThreadTrace, (, ), ;, if]
[;, }, static, void, initCurrentThreadTrace, (, ), {, ThreadTrace, events, =, getThreadTrace, (, ), ;, if, (, !, events, .]
[;, if, (, !, events, ., isEmpty, (, ), ), {, logger, ., log, (, Level, ., WARNING, ,, "Non-empty timer log:\n"]
[), {, logger, ., log, (, Level, ., WARNING, ,, "Non-empty timer log:\n", +, events, ,, new, Throwable, (, ), ), ;]
[), {, logger, ., log, (, Level, ., WARNING, ,, "Non-empty timer log:\n", +, events, ,, new, Throwable, (, ), ), ;]
[., isEmpty, (, ), ), {, logger, ., log, (, Level, ., WARNING, ,, "Non-empty timer log:\n", +, events, ,, new, Throwable]
[;, clearThreadTrace, (, ), ;, events, =, getThreadTrace, (, ), ;, }, events, ., init, (, ), ;, }, static]
[., log, (, Level, ., WARNING, ,, "Non-empty timer log:\n", +, events, ,, new, Throwable, (, ), ), ;, clearThreadTrace, (, )]
[,, "Non-empty timer log:\n", +, events, ,, new, Throwable, (, ), ), ;, clearThreadTrace, (, ), ;, events, =, getThreadTrace, (, )]
[., WARNING, ,, "Non-empty timer log:\n", +, events, ,, new, Throwable, (, ), ), ;, clearThreadTrace, (, ), ;, events, =, getThreadTrace]
[,, new, Throwable, (, ), ), ;, clearThreadTrace, (, ), ;, events, =, getThreadTrace, (, ), ;, }, events, .]
[+, events, ,, new, Throwable, (, ), ), ;, clearThreadTrace, (, ), ;, events, =, getThreadTrace, (, ), ;, }]
[,, new, Throwable, (, ), ), ;, clearThreadTrace, (, ), ;, events, =, getThreadTrace, (, ), ;, }, events, .]
[), ;, clearThreadTrace, (, ), ;, events, =, getThreadTrace, (, ), ;, }, events, ., init, (, ), ;, }]
[;, events, =, getThreadTrace, (, ), ;, }, events, ., init, (, ), ;, }, static, void, initCurrentThreadTrace, (, int]
[=, getThreadTrace, (, ), ;, }, events, ., init, (, ), ;, }, static, void, initCurrentThreadTrace, (, int, default_silence_threshold, )]
[;, }, events, ., init, (, ), ;, }, static, void, initCurrentThreadTrace, (, int, default_silence_threshold, ), {, initCurrentThreadTrace, (, )]
[;, }, static, void, initCurrentThreadTrace, (, int, default_silence_threshold, ), {, initCurrentThreadTrace, (, ), ;, setDefaultSilenceThreshold, (, default_silence_threshold, ), ;, }]
[., init, (, ), ;, }, static, void, initCurrentThreadTrace, (, int, default_silence_threshold, ), {, initCurrentThreadTrace, (, ), ;, setDefaultSilenceThreshold, (]
[;, setDefaultSilenceThreshold, (, default_silence_threshold, ), ;, }, static, String, getCurrentThreadTraceReport, (, ), {, return, getThreadTrace, (, ), ., toString, (]
[;, }, static, String, getCurrentThreadTraceReport, (, ), {, return, getThreadTrace, (, ), ., toString, (, ), ;, }, static, void]
[), ;, }, static, String, getCurrentThreadTraceReport, (, ), {, return, getThreadTrace, (, ), ., toString, (, ), ;, }, static]
[;, }, static, void, logCurrentThreadTrace, (, ), {, ThreadTrace, trace, =, getThreadTrace, (, ), ;, if, (, !, trace, .]
[., toString, (, ), ;, }, static, void, logCurrentThreadTrace, (, ), {, ThreadTrace, trace, =, getThreadTrace, (, ), ;, if]
[;, if, (, !, trace, ., isInitialized, (, ), ), {, logger, ., log, (, Level, ., WARNING, ,, "Tracer log requested for this thread but was not "]
[), {, logger, ., log, (, Level, ., WARNING, ,, "Tracer log requested for this thread but was not ", +, "initialized using Tracer.initCurrentThreadTrace().", ,, new, Throwable, (, ), ), ;]
[), {, logger, ., log, (, Level, ., WARNING, ,, "Tracer log requested for this thread but was not ", +, "initialized using Tracer.initCurrentThreadTrace().", ,, new, Throwable, (, ), ), ;]
[., isInitialized, (, ), ), {, logger, ., log, (, Level, ., WARNING, ,, "Tracer log requested for this thread but was not ", +, "initialized using Tracer.initCurrentThreadTrace().", ,, new, Throwable]
[;, return, ;, }, if, (, !, trace, ., isEmpty, (, ), ), {, logger, ., log, (, Level, .]
[., log, (, Level, ., WARNING, ,, "Tracer log requested for this thread but was not ", +, "initialized using Tracer.initCurrentThreadTrace().", ,, new, Throwable, (, ), ), ;, return, ;, }]
[,, "Tracer log requested for this thread but was not ", +, "initialized using Tracer.initCurrentThreadTrace().", ,, new, Throwable, (, ), ), ;, return, ;, }, if, (, !, trace, ., isEmpty]
[., WARNING, ,, "Tracer log requested for this thread but was not ", +, "initialized using Tracer.initCurrentThreadTrace().", ,, new, Throwable, (, ), ), ;, return, ;, }, if, (, !, trace]
[,, new, Throwable, (, ), ), ;, return, ;, }, if, (, !, trace, ., isEmpty, (, ), ), {]
[+, "initialized using Tracer.initCurrentThreadTrace().", ,, new, Throwable, (, ), ), ;, return, ;, }, if, (, !, trace, ., isEmpty, (, )]
[,, new, Throwable, (, ), ), ;, return, ;, }, if, (, !, trace, ., isEmpty, (, ), ), {]
[), ;, return, ;, }, if, (, !, trace, ., isEmpty, (, ), ), {, logger, ., log, (, Level]
[), {, logger, ., log, (, Level, ., WARNING, ,, "timers:\n{0}", ,, getCurrentThreadTraceReport, (, ), ), ;, }, }, static]
[), {, logger, ., log, (, Level, ., WARNING, ,, "timers:\n{0}", ,, getCurrentThreadTraceReport, (, ), ), ;, }, }, static]
[., isEmpty, (, ), ), {, logger, ., log, (, Level, ., WARNING, ,, "timers:\n{0}", ,, getCurrentThreadTraceReport, (, ), )]
[;, }, }, static, void, clearCurrentThreadTrace, (, ), {, clearThreadTrace, (, ), ;, }, static, void, logAndClearCurrentThreadTrace, (, ), {]
[., log, (, Level, ., WARNING, ,, "timers:\n{0}", ,, getCurrentThreadTraceReport, (, ), ), ;, }, }, static, void, clearCurrentThreadTrace, (]
[,, "timers:\n{0}", ,, getCurrentThreadTraceReport, (, ), ), ;, }, }, static, void, clearCurrentThreadTrace, (, ), {, clearThreadTrace, (, ), ;]
[., WARNING, ,, "timers:\n{0}", ,, getCurrentThreadTraceReport, (, ), ), ;, }, }, static, void, clearCurrentThreadTrace, (, ), {, clearThreadTrace, (]
[,, getCurrentThreadTraceReport, (, ), ), ;, }, }, static, void, clearCurrentThreadTrace, (, ), {, clearThreadTrace, (, ), ;, }, static]
[), ;, }, }, static, void, clearCurrentThreadTrace, (, ), {, clearThreadTrace, (, ), ;, }, static, void, logAndClearCurrentThreadTrace, (, )]
[;, }, static, void, logAndClearCurrentThreadTrace, (, ), {, logCurrentThreadTrace, (, ), ;, clearThreadTrace, (, ), ;, }, static, void, setPrettyPrint]
[;, clearThreadTrace, (, ), ;, }, static, void, setPrettyPrint, (, boolean, enabled, ), {, defaultPrettyPrint, =, enabled, ;, }, static]
[;, }, static, void, setPrettyPrint, (, boolean, enabled, ), {, defaultPrettyPrint, =, enabled, ;, }, static, final, class, Stat, {]
[=, enabled, ;, }, static, final, class, Stat, {, private, int, count, ;, private, int, silent, ;, private, int, clockTime]
[;, }, static, final, class, Stat, {, private, int, count, ;, private, int, silent, ;, private, int, clockTime, ;, private]
[;, }, int, getSilentCount, (, ), {, return, silent, ;, }, int, getTotalTime, (, ), {, return, clockTime, ;, }]
[;, }, int, getTotalTime, (, ), {, return, clockTime, ;, }, @, VisibleForTesting, int, getExtraInfo, (, int, index, ), {]
[;, }, @, VisibleForTesting, int, getExtraInfo, (, int, index, ), {, return, index, >=, extraInfo, ., length, ?, 0, :]
[;, }, }, private, static, @, Nullable, AtomicTracerStatMap, typeToCountMap, ;, private, static, @, Nullable, AtomicTracerStatMap, typeToSilentMap, ;, private, static, @]
[?, 0, :, extraInfo, [, index, ], ;, }, }, private, static, @, Nullable, AtomicTracerStatMap, typeToCountMap, ;, private, static, @]
[>=, extraInfo, ., length, ?, 0, :, extraInfo, [, index, ], ;, }, }, private, static, @, Nullable, AtomicTracerStatMap, typeToCountMap]
[?, 0, :, extraInfo, [, index, ], ;, }, }, private, static, @, Nullable, AtomicTracerStatMap, typeToCountMap, ;, private, static, @]
[., length, ?, 0, :, extraInfo, [, index, ], ;, }, }, private, static, @, Nullable, AtomicTracerStatMap, typeToCountMap, ;, private]
[:, extraInfo, [, index, ], ;, }, }, private, static, @, Nullable, AtomicTracerStatMap, typeToCountMap, ;, private, static, @, Nullable, AtomicTracerStatMap]
[;, }, }, private, static, @, Nullable, AtomicTracerStatMap, typeToCountMap, ;, private, static, @, Nullable, AtomicTracerStatMap, typeToSilentMap, ;, private, static, @]
[[, index, ], ;, }, }, private, static, @, Nullable, AtomicTracerStatMap, typeToCountMap, ;, private, static, @, Nullable, AtomicTracerStatMap, typeToSilentMap, ;]
[], ;, }, }, private, static, @, Nullable, AtomicTracerStatMap, typeToCountMap, ;, private, static, @, Nullable, AtomicTracerStatMap, typeToSilentMap, ;, private, static]
[), {, typeToCountMap, =, new, AtomicTracerStatMap, (, ), ;, typeToSilentMap, =, new, AtomicTracerStatMap, (, ), ;, typeToTimeMap, =, new, AtomicTracerStatMap]
[==, null, ), {, typeToCountMap, =, new, AtomicTracerStatMap, (, ), ;, typeToSilentMap, =, new, AtomicTracerStatMap, (, ), ;, typeToTimeMap, =]
[), {, typeToCountMap, =, new, AtomicTracerStatMap, (, ), ;, typeToSilentMap, =, new, AtomicTracerStatMap, (, ), ;, typeToTimeMap, =, new, AtomicTracerStatMap]
[=, new, AtomicTracerStatMap, (, ), ;, typeToSilentMap, =, new, AtomicTracerStatMap, (, ), ;, typeToTimeMap, =, new, AtomicTracerStatMap, (, ), ;]
[;, typeToSilentMap, =, new, AtomicTracerStatMap, (, ), ;, typeToTimeMap, =, new, AtomicTracerStatMap, (, ), ;, }, }, static, @, Nullable]
[=, new, AtomicTracerStatMap, (, ), ;, typeToTimeMap, =, new, AtomicTracerStatMap, (, ), ;, }, }, static, @, Nullable, Map, <]
[;, typeToTimeMap, =, new, AtomicTracerStatMap, (, ), ;, }, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToCountMap]
[=, new, AtomicTracerStatMap, (, ), ;, }, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToCountMap, (, )]
[;, }, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToCountMap, (, ), {, return, typeToCountMap, !=, null]
[;, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToSilentMap, (, ), {, return, typeToSilentMap, !=, null, ?]
[?, typeToCountMap, ., getMap, (, ), :, null, ;, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToSilentMap]
[!=, null, ?, typeToCountMap, ., getMap, (, ), :, null, ;, }, static, @, Nullable, Map, <, String, ,, Long]
[?, typeToCountMap, ., getMap, (, ), :, null, ;, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToSilentMap]
[:, null, ;, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToSilentMap, (, ), {, return, typeToSilentMap, !=]
[., getMap, (, ), :, null, ;, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToSilentMap, (, )]
[;, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToSilentMap, (, ), {, return, typeToSilentMap, !=, null, ?]
[;, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToTimeMap, (, ), {, return, typeToTimeMap, !=, null, ?]
[?, typeToSilentMap, ., getMap, (, ), :, null, ;, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToTimeMap]
[!=, null, ?, typeToSilentMap, ., getMap, (, ), :, null, ;, }, static, @, Nullable, Map, <, String, ,, Long]
[?, typeToSilentMap, ., getMap, (, ), :, null, ;, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToTimeMap]
[:, null, ;, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToTimeMap, (, ), {, return, typeToTimeMap, !=]
[., getMap, (, ), :, null, ;, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToTimeMap, (, )]
[;, }, static, @, Nullable, Map, <, String, ,, Long, >, getTypeToTimeMap, (, ), {, return, typeToTimeMap, !=, null, ?]
[;, }, static, Stat, getStatsForType, (, String, type, ), {, Stat, stat, =, getThreadTrace, (, ), ., stats, ., get]
[?, typeToTimeMap, ., getMap, (, ), :, null, ;, }, static, Stat, getStatsForType, (, String, type, ), {, Stat, stat]
[!=, null, ?, typeToTimeMap, ., getMap, (, ), :, null, ;, }, static, Stat, getStatsForType, (, String, type, ), {]
[?, typeToTimeMap, ., getMap, (, ), :, null, ;, }, static, Stat, getStatsForType, (, String, type, ), {, Stat, stat]
[:, null, ;, }, static, Stat, getStatsForType, (, String, type, ), {, Stat, stat, =, getThreadTrace, (, ), ., stats]
[., getMap, (, ), :, null, ;, }, static, Stat, getStatsForType, (, String, type, ), {, Stat, stat, =, getThreadTrace]
[;, }, static, Stat, getStatsForType, (, String, type, ), {, Stat, stat, =, getThreadTrace, (, ), ., stats, ., get]
[;, return, stat, !=, null, ?, stat, :, ZERO_STAT, ;, }, private, static, final, Stat, ZERO_STAT, =, new, Stat, (]
[., get, (, type, ), ;, return, stat, !=, null, ?, stat, :, ZERO_STAT, ;, }, private, static, final, Stat]
[., stats, ., get, (, type, ), ;, return, stat, !=, null, ?, stat, :, ZERO_STAT, ;, }, private, static]
[), ;, return, stat, !=, null, ?, stat, :, ZERO_STAT, ;, }, private, static, final, Stat, ZERO_STAT, =, new, Stat]
[;, }, private, static, final, Stat, ZERO_STAT, =, new, Stat, (, ), ;, private, static, String, formatTime, (, long, time]
[?, stat, :, ZERO_STAT, ;, }, private, static, final, Stat, ZERO_STAT, =, new, Stat, (, ), ;, private, static, String]
[!=, null, ?, stat, :, ZERO_STAT, ;, }, private, static, final, Stat, ZERO_STAT, =, new, Stat, (, ), ;, private]
[?, stat, :, ZERO_STAT, ;, }, private, static, final, Stat, ZERO_STAT, =, new, Stat, (, ), ;, private, static, String]
[:, ZERO_STAT, ;, }, private, static, final, Stat, ZERO_STAT, =, new, Stat, (, ), ;, private, static, String, formatTime, (]
[;, }, private, static, final, Stat, ZERO_STAT, =, new, Stat, (, ), ;, private, static, String, formatTime, (, long, time]
[;, private, static, String, formatTime, (, long, time, ), {, int, sec, =, (, int, ), (, (, time, /]
[;, int, ms, =, (, int, ), (, time, %, 1000, ), ;, return, String, ., format, (, "%02d.%03d", ,]
[;, int, ms, =, (, int, ), (, time, %, 1000, ), ;, return, String, ., format, (, "%02d.%03d", ,]
[), ;, int, ms, =, (, int, ), (, time, %, 1000, ), ;, return, String, ., format, (, "%02d.%03d"]
[%, 60, ), ;, int, ms, =, (, int, ), (, time, %, 1000, ), ;, return, String, ., format]
[), %, 60, ), ;, int, ms, =, (, int, ), (, time, %, 1000, ), ;, return, String, .]
[/, 1000, ), %, 60, ), ;, int, ms, =, (, int, ), (, time, %, 1000, ), ;, return]
[), %, 60, ), ;, int, ms, =, (, int, ), (, time, %, 1000, ), ;, return, String, .]
[), ;, int, ms, =, (, int, ), (, time, %, 1000, ), ;, return, String, ., format, (, "%02d.%03d"]
[;, return, String, ., format, (, "%02d.%03d", ,, sec, ,, ms, ), ;, }, private, static, final, class, Event, {]
[;, return, String, ., format, (, "%02d.%03d", ,, sec, ,, ms, ), ;, }, private, static, final, class, Event, {]
[), ;, return, String, ., format, (, "%02d.%03d", ,, sec, ,, ms, ), ;, }, private, static, final, class, Event]
[%, 1000, ), ;, return, String, ., format, (, "%02d.%03d", ,, sec, ,, ms, ), ;, }, private, static, final]
[), ;, return, String, ., format, (, "%02d.%03d", ,, sec, ,, ms, ), ;, }, private, static, final, class, Event]
[;, }, private, static, final, class, Event, {, boolean, isStart, ;, Tracer, tracer, ;, Event, (, boolean, start, ,, Tracer]
[., format, (, "%02d.%03d", ,, sec, ,, ms, ), ;, }, private, static, final, class, Event, {, boolean, isStart, ;]
[,, sec, ,, ms, ), ;, }, private, static, final, class, Event, {, boolean, isStart, ;, Tracer, tracer, ;, Event]
[,, ms, ), ;, }, private, static, final, class, Event, {, boolean, isStart, ;, Tracer, tracer, ;, Event, (, boolean]
[), ;, }, private, static, final, class, Event, {, boolean, isStart, ;, Tracer, tracer, ;, Event, (, boolean, start, ,]
[=, start, ;, tracer, =, t, ;, }, long, eventTime, (, ), {, return, isStart, ?, tracer, ., startTimeMs, :]
[;, tracer, =, t, ;, }, long, eventTime, (, ), {, return, isStart, ?, tracer, ., startTimeMs, :, tracer, .]
[=, t, ;, }, long, eventTime, (, ), {, return, isStart, ?, tracer, ., startTimeMs, :, tracer, ., stopTimeMs, ;]
[;, }, long, eventTime, (, ), {, return, isStart, ?, tracer, ., startTimeMs, :, tracer, ., stopTimeMs, ;, }, String]
[;, }, String, toString, (, long, prevEventTime, ,, String, indent, ,, int, digitsColWidth, ), {, StringBuilder, sb, =, new, StringBuilder]
[?, tracer, ., startTimeMs, :, tracer, ., stopTimeMs, ;, }, String, toString, (, long, prevEventTime, ,, String, indent, ,, int]
[:, tracer, ., stopTimeMs, ;, }, String, toString, (, long, prevEventTime, ,, String, indent, ,, int, digitsColWidth, ), {, StringBuilder]
[., startTimeMs, :, tracer, ., stopTimeMs, ;, }, String, toString, (, long, prevEventTime, ,, String, indent, ,, int, digitsColWidth, )]
[;, }, String, toString, (, long, prevEventTime, ,, String, indent, ,, int, digitsColWidth, ), {, StringBuilder, sb, =, new, StringBuilder]
[., stopTimeMs, ;, }, String, toString, (, long, prevEventTime, ,, String, indent, ,, int, digitsColWidth, ), {, StringBuilder, sb, =]
[;, if, (, prevEventTime, ==, -, 1, ), {, appendSpaces, (, sb, ,, digitsColWidth, ), ;, }, else, {, sb]
[), ;, if, (, prevEventTime, ==, -, 1, ), {, appendSpaces, (, sb, ,, digitsColWidth, ), ;, }, else, {]
[), {, appendSpaces, (, sb, ,, digitsColWidth, ), ;, }, else, {, sb, ., append, (, longToPaddedString, (, eventTime, (]
[==, -, 1, ), {, appendSpaces, (, sb, ,, digitsColWidth, ), ;, }, else, {, sb, ., append, (, longToPaddedString]
[), {, appendSpaces, (, sb, ,, digitsColWidth, ), ;, }, else, {, sb, ., append, (, longToPaddedString, (, eventTime, (]
[), {, appendSpaces, (, sb, ,, digitsColWidth, ), ;, }, else, {, sb, ., append, (, longToPaddedString, (, eventTime, (]
[;, }, else, {, sb, ., append, (, longToPaddedString, (, eventTime, (, ), -, prevEventTime, ,, digitsColWidth, ), ), ;]
[,, digitsColWidth, ), ;, }, else, {, sb, ., append, (, longToPaddedString, (, eventTime, (, ), -, prevEventTime, ,, digitsColWidth]
[), ;, }, else, {, sb, ., append, (, longToPaddedString, (, eventTime, (, ), -, prevEventTime, ,, digitsColWidth, ), )]
[;, }, sb, ., append, (, ' ', ), ;, sb, ., append, (, formatTime, (, eventTime, (, ), ), )]
[., append, (, longToPaddedString, (, eventTime, (, ), -, prevEventTime, ,, digitsColWidth, ), ), ;, }, sb, ., append, (]
[), ;, }, sb, ., append, (, ' ', ), ;, sb, ., append, (, formatTime, (, eventTime, (, ), )]
[,, digitsColWidth, ), ), ;, }, sb, ., append, (, ' ', ), ;, sb, ., append, (, formatTime, (, eventTime]
[-, prevEventTime, ,, digitsColWidth, ), ), ;, }, sb, ., append, (, ' ', ), ;, sb, ., append, (, formatTime]
[,, digitsColWidth, ), ), ;, }, sb, ., append, (, ' ', ), ;, sb, ., append, (, formatTime, (, eventTime]
[), ), ;, }, sb, ., append, (, ' ', ), ;, sb, ., append, (, formatTime, (, eventTime, (, )]
[;, sb, ., append, (, formatTime, (, eventTime, (, ), ), ), ;, if, (, isStart, ), {, sb, .]
[., append, (, ' ', ), ;, sb, ., append, (, formatTime, (, eventTime, (, ), ), ), ;, if, (]
[), ;, sb, ., append, (, formatTime, (, eventTime, (, ), ), ), ;, if, (, isStart, ), {, sb]
[;, if, (, isStart, ), {, sb, ., append, (, " Start ", ), ;, appendSpaces, (, sb, ,, digitsColWidth, ), ;]
[., append, (, formatTime, (, eventTime, (, ), ), ), ;, if, (, isStart, ), {, sb, ., append, (]
[), ;, if, (, isStart, ), {, sb, ., append, (, " Start ", ), ;, appendSpaces, (, sb, ,, digitsColWidth, )]
[), ), ;, if, (, isStart, ), {, sb, ., append, (, " Start ", ), ;, appendSpaces, (, sb, ,, digitsColWidth]
[), {, sb, ., append, (, " Start ", ), ;, appendSpaces, (, sb, ,, digitsColWidth, ), ;, sb, ., append, (]
[;, appendSpaces, (, sb, ,, digitsColWidth, ), ;, sb, ., append, (, "   ", ), ;, }, else, {, sb, .]
[., append, (, " Start ", ), ;, appendSpaces, (, sb, ,, digitsColWidth, ), ;, sb, ., append, (, "   ", ), ;]
[), ;, appendSpaces, (, sb, ,, digitsColWidth, ), ;, sb, ., append, (, "   ", ), ;, }, else, {, sb]
[;, sb, ., append, (, "   ", ), ;, }, else, {, sb, ., append, (, " Done ", ), ;, long, delta]
[,, digitsColWidth, ), ;, sb, ., append, (, "   ", ), ;, }, else, {, sb, ., append, (, " Done ", )]
[), ;, sb, ., append, (, "   ", ), ;, }, else, {, sb, ., append, (, " Done ", ), ;, long]
[;, }, else, {, sb, ., append, (, " Done ", ), ;, long, delta, =, tracer, ., stopTimeMs, -, tracer, .]
[., append, (, "   ", ), ;, }, else, {, sb, ., append, (, " Done ", ), ;, long, delta, =, tracer]
[), ;, }, else, {, sb, ., append, (, " Done ", ), ;, long, delta, =, tracer, ., stopTimeMs, -, tracer]
[;, long, delta, =, tracer, ., stopTimeMs, -, tracer, ., startTimeMs, ;, sb, ., append, (, longToPaddedString, (, delta, ,]
[., append, (, " Done ", ), ;, long, delta, =, tracer, ., stopTimeMs, -, tracer, ., startTimeMs, ;, sb, ., append]
[), ;, long, delta, =, tracer, ., stopTimeMs, -, tracer, ., startTimeMs, ;, sb, ., append, (, longToPaddedString, (, delta]
[;, sb, ., append, (, longToPaddedString, (, delta, ,, digitsColWidth, ), ), ;, sb, ., append, (, " ms ", ), ;]
[-, tracer, ., startTimeMs, ;, sb, ., append, (, longToPaddedString, (, delta, ,, digitsColWidth, ), ), ;, sb, ., append]
[., stopTimeMs, -, tracer, ., startTimeMs, ;, sb, ., append, (, longToPaddedString, (, delta, ,, digitsColWidth, ), ), ;, sb]
[;, sb, ., append, (, longToPaddedString, (, delta, ,, digitsColWidth, ), ), ;, sb, ., append, (, " ms ", ), ;]
[., startTimeMs, ;, sb, ., append, (, longToPaddedString, (, delta, ,, digitsColWidth, ), ), ;, sb, ., append, (, " ms "]
[;, sb, ., append, (, " ms ", ), ;, if, (, tracer, ., extraTracingValues, !=, null, ), {, for, (, int]
[., append, (, longToPaddedString, (, delta, ,, digitsColWidth, ), ), ;, sb, ., append, (, " ms ", ), ;, if, (]
[), ;, sb, ., append, (, " ms ", ), ;, if, (, tracer, ., extraTracingValues, !=, null, ), {, for, (]
[,, digitsColWidth, ), ), ;, sb, ., append, (, " ms ", ), ;, if, (, tracer, ., extraTracingValues, !=, null, )]
[), ), ;, sb, ., append, (, " ms ", ), ;, if, (, tracer, ., extraTracingValues, !=, null, ), {, for]
[;, if, (, tracer, ., extraTracingValues, !=, null, ), {, for, (, int, i, =, 0, ;, i, <, tracer]
[., append, (, " ms ", ), ;, if, (, tracer, ., extraTracingValues, !=, null, ), {, for, (, int, i, =]
[), ;, if, (, tracer, ., extraTracingValues, !=, null, ), {, for, (, int, i, =, 0, ;, i, <]
[), {, for, (, int, i, =, 0, ;, i, <, tracer, ., extraTracingValues, ., length, ;, i, ++, )]
[!=, null, ), {, for, (, int, i, =, 0, ;, i, <, tracer, ., extraTracingValues, ., length, ;, i]
[., extraTracingValues, !=, null, ), {, for, (, int, i, =, 0, ;, i, <, tracer, ., extraTracingValues, ., length]
[), {, for, (, int, i, =, 0, ;, i, <, tracer, ., extraTracingValues, ., length, ;, i, ++, )]
[;, i, <, tracer, ., extraTracingValues, ., length, ;, i, ++, ), {, delta, =, tracer, ., extraTracingValues, [, i]
[;, i, ++, ), {, delta, =, tracer, ., extraTracingValues, [, i, ], ;, sb, ., append, (, String, .]
[<, tracer, ., extraTracingValues, ., length, ;, i, ++, ), {, delta, =, tracer, ., extraTracingValues, [, i, ], ;]
[;, i, ++, ), {, delta, =, tracer, ., extraTracingValues, [, i, ], ;, sb, ., append, (, String, .]
[., length, ;, i, ++, ), {, delta, =, tracer, ., extraTracingValues, [, i, ], ;, sb, ., append, (]
[., extraTracingValues, ., length, ;, i, ++, ), {, delta, =, tracer, ., extraTracingValues, [, i, ], ;, sb, .]
[), {, delta, =, tracer, ., extraTracingValues, [, i, ], ;, sb, ., append, (, String, ., format, (, "%4d"]
[++, ), {, delta, =, tracer, ., extraTracingValues, [, i, ], ;, sb, ., append, (, String, ., format, (]
[=, tracer, ., extraTracingValues, [, i, ], ;, sb, ., append, (, String, ., format, (, "%4d", ,, delta, )]
[;, sb, ., append, (, String, ., format, (, "%4d", ,, delta, ), ), ;, sb, ., append, (, extraTracingStatistics]
[[, i, ], ;, sb, ., append, (, String, ., format, (, "%4d", ,, delta, ), ), ;, sb, .]
[., extraTracingValues, [, i, ], ;, sb, ., append, (, String, ., format, (, "%4d", ,, delta, ), ), ;]
[], ;, sb, ., append, (, String, ., format, (, "%4d", ,, delta, ), ), ;, sb, ., append, (]
[;, sb, ., append, (, extraTracingStatistics, ., get, (, i, ), ., getUnits, (, ), ), ;, sb, ., append]
[., append, (, String, ., format, (, "%4d", ,, delta, ), ), ;, sb, ., append, (, extraTracingStatistics, ., get]
[), ;, sb, ., append, (, extraTracingStatistics, ., get, (, i, ), ., getUnits, (, ), ), ;, sb, .]
[., format, (, "%4d", ,, delta, ), ), ;, sb, ., append, (, extraTracingStatistics, ., get, (, i, ), .]
[,, delta, ), ), ;, sb, ., append, (, extraTracingStatistics, ., get, (, i, ), ., getUnits, (, ), )]
[), ), ;, sb, ., append, (, extraTracingStatistics, ., get, (, i, ), ., getUnits, (, ), ), ;, sb]
[;, sb, ., append, (, ";  ", ), ;, }, }, }, sb, ., append, (, indent, ), ;, sb, .]
[., append, (, extraTracingStatistics, ., get, (, i, ), ., getUnits, (, ), ), ;, sb, ., append, (, ";  "]
[), ;, sb, ., append, (, ";  ", ), ;, }, }, }, sb, ., append, (, indent, ), ;, sb]
[., getUnits, (, ), ), ;, sb, ., append, (, ";  ", ), ;, }, }, }, sb, ., append, (]
[., get, (, i, ), ., getUnits, (, ), ), ;, sb, ., append, (, ";  ", ), ;, }, }]
[), ., getUnits, (, ), ), ;, sb, ., append, (, ";  ", ), ;, }, }, }, sb, ., append]
[;, }, }, }, sb, ., append, (, indent, ), ;, sb, ., append, (, tracer, ., toString, (, )]
[., append, (, ";  ", ), ;, }, }, }, sb, ., append, (, indent, ), ;, sb, ., append, (]
[), ;, }, }, }, sb, ., append, (, indent, ), ;, sb, ., append, (, tracer, ., toString, (]
[;, sb, ., append, (, tracer, ., toString, (, ), ), ;, return, sb, ., toString, (, ), ;, }]
[., append, (, indent, ), ;, sb, ., append, (, tracer, ., toString, (, ), ), ;, return, sb, .]
[), ;, sb, ., append, (, tracer, ., toString, (, ), ), ;, return, sb, ., toString, (, ), ;]
[;, return, sb, ., toString, (, ), ;, }, }, static, final, class, ThreadTrace, {, int, defaultSilenceThreshold, ;, final, ArrayList]
[., append, (, tracer, ., toString, (, ), ), ;, return, sb, ., toString, (, ), ;, }, }, static]
[), ;, return, sb, ., toString, (, ), ;, }, }, static, final, class, ThreadTrace, {, int, defaultSilenceThreshold, ;, final]
[., toString, (, ), ), ;, return, sb, ., toString, (, ), ;, }, }, static, final, class, ThreadTrace, {]
[;, }, }, static, final, class, ThreadTrace, {, int, defaultSilenceThreshold, ;, final, ArrayList, <, Event, >, events, =, new, ArrayList]
[., toString, (, ), ;, }, }, static, final, class, ThreadTrace, {, int, defaultSilenceThreshold, ;, final, ArrayList, <, Event, >]
[;, final, HashSet, <, Tracer, >, outstandingEvents, =, new, HashSet, <, Tracer, >, (, ), ;, final, Map, <, String]
[;, final, Map, <, String, ,, Stat, >, stats, =, new, HashMap, <, String, ,, Stat, >, (, ), ;]
[;, boolean, isOutstandingEventsTruncated, =, false, ;, boolean, isEventsTruncated, =, false, ;, boolean, isInitialized, =, false, ;, boolean, prettyPrint, =, false]
[;, boolean, isEventsTruncated, =, false, ;, boolean, isInitialized, =, false, ;, boolean, prettyPrint, =, false, ;, void, init, (, )]
[;, boolean, isInitialized, =, false, ;, boolean, prettyPrint, =, false, ;, void, init, (, ), {, isInitialized, =, true, ;]
[;, boolean, prettyPrint, =, false, ;, void, init, (, ), {, isInitialized, =, true, ;, }, boolean, isInitialized, (, )]
[;, void, init, (, ), {, isInitialized, =, true, ;, }, boolean, isInitialized, (, ), {, return, isInitialized, ;, }]
[=, true, ;, }, boolean, isInitialized, (, ), {, return, isInitialized, ;, }, void, startEvent, (, Tracer, t, ), {]
[;, }, boolean, isInitialized, (, ), {, return, isInitialized, ;, }, void, startEvent, (, Tracer, t, ), {, events, .]
[;, }, void, startEvent, (, Tracer, t, ), {, events, ., add, (, new, Event, (, true, ,, t, )]
[;, boolean, notAlreadyOutstanding, =, outstandingEvents, ., add, (, t, ), ;, Preconditions, ., checkState, (, notAlreadyOutstanding, ), ;, }, void]
[., add, (, new, Event, (, true, ,, t, ), ), ;, boolean, notAlreadyOutstanding, =, outstandingEvents, ., add, (, t]
[), ;, boolean, notAlreadyOutstanding, =, outstandingEvents, ., add, (, t, ), ;, Preconditions, ., checkState, (, notAlreadyOutstanding, ), ;, }]
[,, t, ), ), ;, boolean, notAlreadyOutstanding, =, outstandingEvents, ., add, (, t, ), ;, Preconditions, ., checkState, (, notAlreadyOutstanding]
[), ), ;, boolean, notAlreadyOutstanding, =, outstandingEvents, ., add, (, t, ), ;, Preconditions, ., checkState, (, notAlreadyOutstanding, ), ;]
[;, Preconditions, ., checkState, (, notAlreadyOutstanding, ), ;, }, void, endEvent, (, Tracer, t, ,, int, silenceThreshold, ), {, boolean]
[., add, (, t, ), ;, Preconditions, ., checkState, (, notAlreadyOutstanding, ), ;, }, void, endEvent, (, Tracer, t, ,]
[), ;, Preconditions, ., checkState, (, notAlreadyOutstanding, ), ;, }, void, endEvent, (, Tracer, t, ,, int, silenceThreshold, ), {]
[;, }, void, endEvent, (, Tracer, t, ,, int, silenceThreshold, ), {, boolean, wasOutstanding, =, outstandingEvents, ., remove, (, t]
[., checkState, (, notAlreadyOutstanding, ), ;, }, void, endEvent, (, Tracer, t, ,, int, silenceThreshold, ), {, boolean, wasOutstanding, =]
[), ;, }, void, endEvent, (, Tracer, t, ,, int, silenceThreshold, ), {, boolean, wasOutstanding, =, outstandingEvents, ., remove, (]
[;, if, (, !, wasOutstanding, ), {, if, (, isOutstandingEventsTruncated, ), {, logger, ., log, (, Level, ., WARNING, ,]
[., remove, (, t, ), ;, if, (, !, wasOutstanding, ), {, if, (, isOutstandingEventsTruncated, ), {, logger, ., log]
[), ;, if, (, !, wasOutstanding, ), {, if, (, isOutstandingEventsTruncated, ), {, logger, ., log, (, Level, ., WARNING]
[), {, if, (, isOutstandingEventsTruncated, ), {, logger, ., log, (, Level, ., WARNING, ,, "event not found, probably because the event stack ", +, "overflowed and was truncated", ,, new]
[), {, if, (, isOutstandingEventsTruncated, ), {, logger, ., log, (, Level, ., WARNING, ,, "event not found, probably because the event stack ", +, "overflowed and was truncated", ,, new]
[), {, logger, ., log, (, Level, ., WARNING, ,, "event not found, probably because the event stack ", +, "overflowed and was truncated", ,, new, Throwable, (, ), ), ;]
[;, }, else, {, throw, new, IllegalStateException, (, ), ;, }, }, long, elapsed, =, t, ., stopTimeMs, -, t]
[., log, (, Level, ., WARNING, ,, "event not found, probably because the event stack ", +, "overflowed and was truncated", ,, new, Throwable, (, ), ), ;, }, else, {]
[,, "event not found, probably because the event stack ", +, "overflowed and was truncated", ,, new, Throwable, (, ), ), ;, }, else, {, throw, new, IllegalStateException, (, ), ;]
[., WARNING, ,, "event not found, probably because the event stack ", +, "overflowed and was truncated", ,, new, Throwable, (, ), ), ;, }, else, {, throw, new, IllegalStateException, (]
[,, new, Throwable, (, ), ), ;, }, else, {, throw, new, IllegalStateException, (, ), ;, }, }, long, elapsed]
[+, "overflowed and was truncated", ,, new, Throwable, (, ), ), ;, }, else, {, throw, new, IllegalStateException, (, ), ;, }, }]
[,, new, Throwable, (, ), ), ;, }, else, {, throw, new, IllegalStateException, (, ), ;, }, }, long, elapsed]
[), ;, }, else, {, throw, new, IllegalStateException, (, ), ;, }, }, long, elapsed, =, t, ., stopTimeMs, -]
[;, }, }, long, elapsed, =, t, ., stopTimeMs, -, t, ., startTimeMs, ;, if, (, silenceThreshold, ==, -, 1]
[;, if, (, silenceThreshold, ==, -, 1, ), {, silenceThreshold, =, defaultSilenceThreshold, ;, }, if, (, elapsed, <, silenceThreshold, )]
[-, t, ., startTimeMs, ;, if, (, silenceThreshold, ==, -, 1, ), {, silenceThreshold, =, defaultSilenceThreshold, ;, }, if, (]
[., stopTimeMs, -, t, ., startTimeMs, ;, if, (, silenceThreshold, ==, -, 1, ), {, silenceThreshold, =, defaultSilenceThreshold, ;, }]
[;, if, (, silenceThreshold, ==, -, 1, ), {, silenceThreshold, =, defaultSilenceThreshold, ;, }, if, (, elapsed, <, silenceThreshold, )]
[., startTimeMs, ;, if, (, silenceThreshold, ==, -, 1, ), {, silenceThreshold, =, defaultSilenceThreshold, ;, }, if, (, elapsed, <]
[), {, silenceThreshold, =, defaultSilenceThreshold, ;, }, if, (, elapsed, <, silenceThreshold, ), {, boolean, removed, =, false, ;, for]
[==, -, 1, ), {, silenceThreshold, =, defaultSilenceThreshold, ;, }, if, (, elapsed, <, silenceThreshold, ), {, boolean, removed, =]
[), {, silenceThreshold, =, defaultSilenceThreshold, ;, }, if, (, elapsed, <, silenceThreshold, ), {, boolean, removed, =, false, ;, for]
[), {, silenceThreshold, =, defaultSilenceThreshold, ;, }, if, (, elapsed, <, silenceThreshold, ), {, boolean, removed, =, false, ;, for]
[=, defaultSilenceThreshold, ;, }, if, (, elapsed, <, silenceThreshold, ), {, boolean, removed, =, false, ;, for, (, int, i]
[;, }, if, (, elapsed, <, silenceThreshold, ), {, boolean, removed, =, false, ;, for, (, int, i, =, 0]
[), {, boolean, removed, =, false, ;, for, (, int, i, =, 0, ;, i, <, events, ., size, (]
[<, silenceThreshold, ), {, boolean, removed, =, false, ;, for, (, int, i, =, 0, ;, i, <, events, .]
[), {, boolean, removed, =, false, ;, for, (, int, i, =, 0, ;, i, <, events, ., size, (]
[;, for, (, int, i, =, 0, ;, i, <, events, ., size, (, ), ;, i, ++, ), {]
[;, i, <, events, ., size, (, ), ;, i, ++, ), {, Event, e, =, events, ., get, (]
[;, i, ++, ), {, Event, e, =, events, ., get, (, i, ), ;, if, (, e, ., tracer]
[<, events, ., size, (, ), ;, i, ++, ), {, Event, e, =, events, ., get, (, i, )]
[;, i, ++, ), {, Event, e, =, events, ., get, (, i, ), ;, if, (, e, ., tracer]
[., size, (, ), ;, i, ++, ), {, Event, e, =, events, ., get, (, i, ), ;, if]
[), {, Event, e, =, events, ., get, (, i, ), ;, if, (, e, ., tracer, ==, t, )]
[++, ), {, Event, e, =, events, ., get, (, i, ), ;, if, (, e, ., tracer, ==, t]
[;, if, (, e, ., tracer, ==, t, ), {, Preconditions, ., checkState, (, e, ., isStart, ), ;, events]
[., get, (, i, ), ;, if, (, e, ., tracer, ==, t, ), {, Preconditions, ., checkState, (, e]
[), ;, if, (, e, ., tracer, ==, t, ), {, Preconditions, ., checkState, (, e, ., isStart, ), ;]
[), {, Preconditions, ., checkState, (, e, ., isStart, ), ;, events, ., remove, (, i, ), ;, removed, =]
[==, t, ), {, Preconditions, ., checkState, (, e, ., isStart, ), ;, events, ., remove, (, i, ), ;]
[., tracer, ==, t, ), {, Preconditions, ., checkState, (, e, ., isStart, ), ;, events, ., remove, (, i]
[), {, Preconditions, ., checkState, (, e, ., isStart, ), ;, events, ., remove, (, i, ), ;, removed, =]
[;, events, ., remove, (, i, ), ;, removed, =, true, ;, break, ;, }, }, Preconditions, ., checkState, (]
[., checkState, (, e, ., isStart, ), ;, events, ., remove, (, i, ), ;, removed, =, true, ;, break]
[), ;, events, ., remove, (, i, ), ;, removed, =, true, ;, break, ;, }, }, Preconditions, ., checkState]
[., isStart, ), ;, events, ., remove, (, i, ), ;, removed, =, true, ;, break, ;, }, }, Preconditions]
[;, removed, =, true, ;, break, ;, }, }, Preconditions, ., checkState, (, removed, ||, isEventsTruncated, ), ;, }, else]
[., remove, (, i, ), ;, removed, =, true, ;, break, ;, }, }, Preconditions, ., checkState, (, removed, ||]
[), ;, removed, =, true, ;, break, ;, }, }, Preconditions, ., checkState, (, removed, ||, isEventsTruncated, ), ;, }]
[=, true, ;, break, ;, }, }, Preconditions, ., checkState, (, removed, ||, isEventsTruncated, ), ;, }, else, {, events]
[;, break, ;, }, }, Preconditions, ., checkState, (, removed, ||, isEventsTruncated, ), ;, }, else, {, events, ., add]
[;, }, else, {, events, ., add, (, new, Event, (, false, ,, t, ), ), ;, }, if, (]
[., checkState, (, removed, ||, isEventsTruncated, ), ;, }, else, {, events, ., add, (, new, Event, (, false, ,]
[), ;, }, else, {, events, ., add, (, new, Event, (, false, ,, t, ), ), ;, }, if]
[||, isEventsTruncated, ), ;, }, else, {, events, ., add, (, new, Event, (, false, ,, t, ), ), ;]
[), ;, }, else, {, events, ., add, (, new, Event, (, false, ,, t, ), ), ;, }, if]
[;, }, if, (, t, ., type, !=, null, ), {, Stat, stat, =, stats, ., get, (, t, .]
[., add, (, new, Event, (, false, ,, t, ), ), ;, }, if, (, t, ., type, !=, null]
[), ;, }, if, (, t, ., type, !=, null, ), {, Stat, stat, =, stats, ., get, (, t]
[,, t, ), ), ;, }, if, (, t, ., type, !=, null, ), {, Stat, stat, =, stats, .]
[), ), ;, }, if, (, t, ., type, !=, null, ), {, Stat, stat, =, stats, ., get, (]
[), {, Stat, stat, =, stats, ., get, (, t, ., type, ), ;, if, (, stat, ==, null, )]
[!=, null, ), {, Stat, stat, =, stats, ., get, (, t, ., type, ), ;, if, (, stat, ==]
[., type, !=, null, ), {, Stat, stat, =, stats, ., get, (, t, ., type, ), ;, if, (]
[), {, Stat, stat, =, stats, ., get, (, t, ., type, ), ;, if, (, stat, ==, null, )]
[;, if, (, stat, ==, null, ), {, stat, =, new, Stat, (, ), ;, if, (, !, extraTracingStatistics, .]
[., get, (, t, ., type, ), ;, if, (, stat, ==, null, ), {, stat, =, new, Stat, (]
[), ;, if, (, stat, ==, null, ), {, stat, =, new, Stat, (, ), ;, if, (, !, extraTracingStatistics]
[., type, ), ;, if, (, stat, ==, null, ), {, stat, =, new, Stat, (, ), ;, if, (]
[), {, stat, =, new, Stat, (, ), ;, if, (, !, extraTracingStatistics, ., isEmpty, (, ), ), {, stat]
[==, null, ), {, stat, =, new, Stat, (, ), ;, if, (, !, extraTracingStatistics, ., isEmpty, (, ), )]
[), {, stat, =, new, Stat, (, ), ;, if, (, !, extraTracingStatistics, ., isEmpty, (, ), ), {, stat]
[=, new, Stat, (, ), ;, if, (, !, extraTracingStatistics, ., isEmpty, (, ), ), {, stat, ., extraInfo, =]
[;, if, (, !, extraTracingStatistics, ., isEmpty, (, ), ), {, stat, ., extraInfo, =, new, int, [, extraTracingStatistics, .]
[), {, stat, ., extraInfo, =, new, int, [, extraTracingStatistics, ., size, (, ), ], ;, }, stats, ., put]
[), {, stat, ., extraInfo, =, new, int, [, extraTracingStatistics, ., size, (, ), ], ;, }, stats, ., put]
[., isEmpty, (, ), ), {, stat, ., extraInfo, =, new, int, [, extraTracingStatistics, ., size, (, ), ], ;]
[=, new, int, [, extraTracingStatistics, ., size, (, ), ], ;, }, stats, ., put, (, t, ., type, ,]
[., extraInfo, =, new, int, [, extraTracingStatistics, ., size, (, ), ], ;, }, stats, ., put, (, t, .]
[;, }, stats, ., put, (, t, ., type, ,, stat, ), ;, }, stat, ., count, ++, ;, if]
[], ;, }, stats, ., put, (, t, ., type, ,, stat, ), ;, }, stat, ., count, ++, ;]
[., size, (, ), ], ;, }, stats, ., put, (, t, ., type, ,, stat, ), ;, }, stat]
[;, }, stat, ., count, ++, ;, if, (, typeToCountMap, !=, null, ), {, typeToCountMap, ., incrementBy, (, t, .]
[., put, (, t, ., type, ,, stat, ), ;, }, stat, ., count, ++, ;, if, (, typeToCountMap, !=]
[,, stat, ), ;, }, stat, ., count, ++, ;, if, (, typeToCountMap, !=, null, ), {, typeToCountMap, ., incrementBy]
[., type, ,, stat, ), ;, }, stat, ., count, ++, ;, if, (, typeToCountMap, !=, null, ), {, typeToCountMap]
[), ;, }, stat, ., count, ++, ;, if, (, typeToCountMap, !=, null, ), {, typeToCountMap, ., incrementBy, (, t]
[;, if, (, typeToCountMap, !=, null, ), {, typeToCountMap, ., incrementBy, (, t, ., type, ,, 1, ), ;, }]
[++, ;, if, (, typeToCountMap, !=, null, ), {, typeToCountMap, ., incrementBy, (, t, ., type, ,, 1, ), ;]
[., count, ++, ;, if, (, typeToCountMap, !=, null, ), {, typeToCountMap, ., incrementBy, (, t, ., type, ,, 1]
[), {, typeToCountMap, ., incrementBy, (, t, ., type, ,, 1, ), ;, }, stat, ., clockTime, +=, elapsed, ;]
[!=, null, ), {, typeToCountMap, ., incrementBy, (, t, ., type, ,, 1, ), ;, }, stat, ., clockTime, +=]
[), {, typeToCountMap, ., incrementBy, (, t, ., type, ,, 1, ), ;, }, stat, ., clockTime, +=, elapsed, ;]
[;, }, stat, ., clockTime, +=, elapsed, ;, if, (, typeToTimeMap, !=, null, ), {, typeToTimeMap, ., incrementBy, (, t]
[., incrementBy, (, t, ., type, ,, 1, ), ;, }, stat, ., clockTime, +=, elapsed, ;, if, (, typeToTimeMap]
[,, 1, ), ;, }, stat, ., clockTime, +=, elapsed, ;, if, (, typeToTimeMap, !=, null, ), {, typeToTimeMap, .]
[., type, ,, 1, ), ;, }, stat, ., clockTime, +=, elapsed, ;, if, (, typeToTimeMap, !=, null, ), {]
[), ;, }, stat, ., clockTime, +=, elapsed, ;, if, (, typeToTimeMap, !=, null, ), {, typeToTimeMap, ., incrementBy, (]
[+=, elapsed, ;, if, (, typeToTimeMap, !=, null, ), {, typeToTimeMap, ., incrementBy, (, t, ., type, ,, elapsed, )]
[., clockTime, +=, elapsed, ;, if, (, typeToTimeMap, !=, null, ), {, typeToTimeMap, ., incrementBy, (, t, ., type, ,]
[;, if, (, typeToTimeMap, !=, null, ), {, typeToTimeMap, ., incrementBy, (, t, ., type, ,, elapsed, ), ;, }]
[), {, typeToTimeMap, ., incrementBy, (, t, ., type, ,, elapsed, ), ;, }, if, (, stat, ., extraInfo, !=]
[!=, null, ), {, typeToTimeMap, ., incrementBy, (, t, ., type, ,, elapsed, ), ;, }, if, (, stat, .]
[), {, typeToTimeMap, ., incrementBy, (, t, ., type, ,, elapsed, ), ;, }, if, (, stat, ., extraInfo, !=]
[;, }, if, (, stat, ., extraInfo, !=, null, &&, t, ., extraTracingValues, !=, null, ), {, int, overlapLength, =]
[., incrementBy, (, t, ., type, ,, elapsed, ), ;, }, if, (, stat, ., extraInfo, !=, null, &&, t]
[,, elapsed, ), ;, }, if, (, stat, ., extraInfo, !=, null, &&, t, ., extraTracingValues, !=, null, ), {]
[., type, ,, elapsed, ), ;, }, if, (, stat, ., extraInfo, !=, null, &&, t, ., extraTracingValues, !=, null]
[), ;, }, if, (, stat, ., extraInfo, !=, null, &&, t, ., extraTracingValues, !=, null, ), {, int, overlapLength]
[), {, int, overlapLength, =, Math, ., min, (, stat, ., extraInfo, ., length, ,, t, ., extraTracingValues, ., length]
[&&, t, ., extraTracingValues, !=, null, ), {, int, overlapLength, =, Math, ., min, (, stat, ., extraInfo, ., length]
[!=, null, &&, t, ., extraTracingValues, !=, null, ), {, int, overlapLength, =, Math, ., min, (, stat, ., extraInfo]
[., extraInfo, !=, null, &&, t, ., extraTracingValues, !=, null, ), {, int, overlapLength, =, Math, ., min, (, stat]
[&&, t, ., extraTracingValues, !=, null, ), {, int, overlapLength, =, Math, ., min, (, stat, ., extraInfo, ., length]
[), {, int, overlapLength, =, Math, ., min, (, stat, ., extraInfo, ., length, ,, t, ., extraTracingValues, ., length]
[!=, null, ), {, int, overlapLength, =, Math, ., min, (, stat, ., extraInfo, ., length, ,, t, ., extraTracingValues]
[., extraTracingValues, !=, null, ), {, int, overlapLength, =, Math, ., min, (, stat, ., extraInfo, ., length, ,, t]
[), {, int, overlapLength, =, Math, ., min, (, stat, ., extraInfo, ., length, ,, t, ., extraTracingValues, ., length]
[;, for, (, int, i, =, 0, ;, i, <, overlapLength, ;, i, ++, ), {, stat, ., extraInfo, []
[., min, (, stat, ., extraInfo, ., length, ,, t, ., extraTracingValues, ., length, ), ;, for, (, int, i]
[,, t, ., extraTracingValues, ., length, ), ;, for, (, int, i, =, 0, ;, i, <, overlapLength, ;, i]
[., length, ,, t, ., extraTracingValues, ., length, ), ;, for, (, int, i, =, 0, ;, i, <, overlapLength]
[., extraInfo, ., length, ,, t, ., extraTracingValues, ., length, ), ;, for, (, int, i, =, 0, ;, i]
[), ;, for, (, int, i, =, 0, ;, i, <, overlapLength, ;, i, ++, ), {, stat, ., extraInfo]
[., length, ), ;, for, (, int, i, =, 0, ;, i, <, overlapLength, ;, i, ++, ), {, stat]
[., extraTracingValues, ., length, ), ;, for, (, int, i, =, 0, ;, i, <, overlapLength, ;, i, ++, )]
[;, i, <, overlapLength, ;, i, ++, ), {, stat, ., extraInfo, [, i, ], +=, t, ., extraTracingValues, []
[;, i, ++, ), {, stat, ., extraInfo, [, i, ], +=, t, ., extraTracingValues, [, i, ], ;, AtomicTracerStatMap]
[<, overlapLength, ;, i, ++, ), {, stat, ., extraInfo, [, i, ], +=, t, ., extraTracingValues, [, i, ]]
[;, i, ++, ), {, stat, ., extraInfo, [, i, ], +=, t, ., extraTracingValues, [, i, ], ;, AtomicTracerStatMap]
[), {, stat, ., extraInfo, [, i, ], +=, t, ., extraTracingValues, [, i, ], ;, AtomicTracerStatMap, map, =, extraTracingStatistics]
[++, ), {, stat, ., extraInfo, [, i, ], +=, t, ., extraTracingValues, [, i, ], ;, AtomicTracerStatMap, map, =]
[+=, t, ., extraTracingValues, [, i, ], ;, AtomicTracerStatMap, map, =, extraTracingStatistics, ., get, (, i, ), ., getTracingStat, (]
[[, i, ], +=, t, ., extraTracingValues, [, i, ], ;, AtomicTracerStatMap, map, =, extraTracingStatistics, ., get, (, i, )]
[., extraInfo, [, i, ], +=, t, ., extraTracingValues, [, i, ], ;, AtomicTracerStatMap, map, =, extraTracingStatistics, ., get, (]
[], +=, t, ., extraTracingValues, [, i, ], ;, AtomicTracerStatMap, map, =, extraTracingStatistics, ., get, (, i, ), ., getTracingStat]
[;, AtomicTracerStatMap, map, =, extraTracingStatistics, ., get, (, i, ), ., getTracingStat, (, ), ;, if, (, map, !=, null]
[[, i, ], ;, AtomicTracerStatMap, map, =, extraTracingStatistics, ., get, (, i, ), ., getTracingStat, (, ), ;, if, (]
[., extraTracingValues, [, i, ], ;, AtomicTracerStatMap, map, =, extraTracingStatistics, ., get, (, i, ), ., getTracingStat, (, ), ;]
[], ;, AtomicTracerStatMap, map, =, extraTracingStatistics, ., get, (, i, ), ., getTracingStat, (, ), ;, if, (, map, !=]
[;, if, (, map, !=, null, ), {, map, ., incrementBy, (, t, ., type, ,, t, ., extraTracingValues, []
[., getTracingStat, (, ), ;, if, (, map, !=, null, ), {, map, ., incrementBy, (, t, ., type, ,]
[., get, (, i, ), ., getTracingStat, (, ), ;, if, (, map, !=, null, ), {, map, ., incrementBy]
[), ., getTracingStat, (, ), ;, if, (, map, !=, null, ), {, map, ., incrementBy, (, t, ., type]
[), {, map, ., incrementBy, (, t, ., type, ,, t, ., extraTracingValues, [, i, ], ), ;, }, }]
[!=, null, ), {, map, ., incrementBy, (, t, ., type, ,, t, ., extraTracingValues, [, i, ], ), ;]
[), {, map, ., incrementBy, (, t, ., type, ,, t, ., extraTracingValues, [, i, ], ), ;, }, }]
[;, }, }, }, if, (, elapsed, <, silenceThreshold, ), {, stat, ., silent, ++, ;, if, (, typeToSilentMap, !=]
[., incrementBy, (, t, ., type, ,, t, ., extraTracingValues, [, i, ], ), ;, }, }, }, if, (]
[,, t, ., extraTracingValues, [, i, ], ), ;, }, }, }, if, (, elapsed, <, silenceThreshold, ), {, stat]
[., type, ,, t, ., extraTracingValues, [, i, ], ), ;, }, }, }, if, (, elapsed, <, silenceThreshold, )]
[), ;, }, }, }, if, (, elapsed, <, silenceThreshold, ), {, stat, ., silent, ++, ;, if, (, typeToSilentMap]
[[, i, ], ), ;, }, }, }, if, (, elapsed, <, silenceThreshold, ), {, stat, ., silent, ++, ;]
[., extraTracingValues, [, i, ], ), ;, }, }, }, if, (, elapsed, <, silenceThreshold, ), {, stat, ., silent]
[], ), ;, }, }, }, if, (, elapsed, <, silenceThreshold, ), {, stat, ., silent, ++, ;, if, (]
[), {, stat, ., silent, ++, ;, if, (, typeToSilentMap, !=, null, ), {, typeToSilentMap, ., incrementBy, (, t, .]
[<, silenceThreshold, ), {, stat, ., silent, ++, ;, if, (, typeToSilentMap, !=, null, ), {, typeToSilentMap, ., incrementBy, (]
[), {, stat, ., silent, ++, ;, if, (, typeToSilentMap, !=, null, ), {, typeToSilentMap, ., incrementBy, (, t, .]
[;, if, (, typeToSilentMap, !=, null, ), {, typeToSilentMap, ., incrementBy, (, t, ., type, ,, 1, ), ;, }]
[++, ;, if, (, typeToSilentMap, !=, null, ), {, typeToSilentMap, ., incrementBy, (, t, ., type, ,, 1, ), ;]
[., silent, ++, ;, if, (, typeToSilentMap, !=, null, ), {, typeToSilentMap, ., incrementBy, (, t, ., type, ,, 1]
[), {, typeToSilentMap, ., incrementBy, (, t, ., type, ,, 1, ), ;, }, }, }, }, boolean, isEmpty, (]
[!=, null, ), {, typeToSilentMap, ., incrementBy, (, t, ., type, ,, 1, ), ;, }, }, }, }, boolean]
[), {, typeToSilentMap, ., incrementBy, (, t, ., type, ,, 1, ), ;, }, }, }, }, boolean, isEmpty, (]
[;, }, }, }, }, boolean, isEmpty, (, ), {, return, events, ., size, (, ), ==, 0, &&, outstandingEvents]
[., incrementBy, (, t, ., type, ,, 1, ), ;, }, }, }, }, boolean, isEmpty, (, ), {, return]
[,, 1, ), ;, }, }, }, }, boolean, isEmpty, (, ), {, return, events, ., size, (, ), ==]
[., type, ,, 1, ), ;, }, }, }, }, boolean, isEmpty, (, ), {, return, events, ., size, (]
[), ;, }, }, }, }, boolean, isEmpty, (, ), {, return, events, ., size, (, ), ==, 0, &&]
[;, }, void, truncateOutstandingEvents, (, ), {, isOutstandingEventsTruncated, =, true, ;, outstandingEvents, ., clear, (, ), ;, }, void, truncateEvents]
[&&, outstandingEvents, ., size, (, ), ==, 0, ;, }, void, truncateOutstandingEvents, (, ), {, isOutstandingEventsTruncated, =, true, ;, outstandingEvents]
[==, 0, &&, outstandingEvents, ., size, (, ), ==, 0, ;, }, void, truncateOutstandingEvents, (, ), {, isOutstandingEventsTruncated, =, true]
[., size, (, ), ==, 0, &&, outstandingEvents, ., size, (, ), ==, 0, ;, }, void, truncateOutstandingEvents, (, )]
[&&, outstandingEvents, ., size, (, ), ==, 0, ;, }, void, truncateOutstandingEvents, (, ), {, isOutstandingEventsTruncated, =, true, ;, outstandingEvents]
[;, }, void, truncateOutstandingEvents, (, ), {, isOutstandingEventsTruncated, =, true, ;, outstandingEvents, ., clear, (, ), ;, }, void, truncateEvents]
[==, 0, ;, }, void, truncateOutstandingEvents, (, ), {, isOutstandingEventsTruncated, =, true, ;, outstandingEvents, ., clear, (, ), ;, }]
[., size, (, ), ==, 0, ;, }, void, truncateOutstandingEvents, (, ), {, isOutstandingEventsTruncated, =, true, ;, outstandingEvents, ., clear]
[;, }, void, truncateOutstandingEvents, (, ), {, isOutstandingEventsTruncated, =, true, ;, outstandingEvents, ., clear, (, ), ;, }, void, truncateEvents]
[=, true, ;, outstandingEvents, ., clear, (, ), ;, }, void, truncateEvents, (, ), {, isEventsTruncated, =, true, ;, events]
[;, outstandingEvents, ., clear, (, ), ;, }, void, truncateEvents, (, ), {, isEventsTruncated, =, true, ;, events, ., clear]
[;, }, void, truncateEvents, (, ), {, isEventsTruncated, =, true, ;, events, ., clear, (, ), ;, }, @, SuppressWarnings]
[., clear, (, ), ;, }, void, truncateEvents, (, ), {, isEventsTruncated, =, true, ;, events, ., clear, (, )]
[=, true, ;, events, ., clear, (, ), ;, }, @, SuppressWarnings, (, "nullness", ), @, Override, public, String, toString]
[;, events, ., clear, (, ), ;, }, @, SuppressWarnings, (, "nullness", ), @, Override, public, String, toString, (, )]
[;, }, @, SuppressWarnings, (, "nullness", ), @, Override, public, String, toString, (, ), {, int, numDigits, =, getMaxDigits, (]
[., clear, (, ), ;, }, @, SuppressWarnings, (, "nullness", ), @, Override, public, String, toString, (, ), {, int]
[@, Override, public, String, toString, (, ), {, int, numDigits, =, getMaxDigits, (, ), ;, StringBuilder, sb, =, new, StringBuilder]
[), @, Override, public, String, toString, (, ), {, int, numDigits, =, getMaxDigits, (, ), ;, StringBuilder, sb, =, new]
[;, StringBuilder, sb, =, new, StringBuilder, (, ), ;, long, etime, =, -, 1, ;, LinkedList, <, String, >, indent]
[;, long, etime, =, -, 1, ;, LinkedList, <, String, >, indent, =, prettyPrint, ?, new, LinkedList, <, String, >]
[;, LinkedList, <, String, >, indent, =, prettyPrint, ?, new, LinkedList, <, String, >, (, ), :, null, ;, for]
[;, LinkedList, <, String, >, indent, =, prettyPrint, ?, new, LinkedList, <, String, >, (, ), :, null, ;, for]
[;, for, (, Event, e, :, events, ), {, if, (, prettyPrint, &&, !, e, ., isStart, &&, !, indent]
[?, new, LinkedList, <, String, >, (, ), :, null, ;, for, (, Event, e, :, events, ), {, if]
[:, null, ;, for, (, Event, e, :, events, ), {, if, (, prettyPrint, &&, !, e, ., isStart, &&]
[;, for, (, Event, e, :, events, ), {, if, (, prettyPrint, &&, !, e, ., isStart, &&, !, indent]
[), {, if, (, prettyPrint, &&, !, e, ., isStart, &&, !, indent, ., isEmpty, (, ), ), {, indent]
[), {, indent, ., pop, (, ), ;, }, sb, ., append, (, " ", ), ;, if, (, prettyPrint, )]
[&&, !, indent, ., isEmpty, (, ), ), {, indent, ., pop, (, ), ;, }, sb, ., append, (]
[&&, !, e, ., isStart, &&, !, indent, ., isEmpty, (, ), ), {, indent, ., pop, (, ), ;]
[&&, !, indent, ., isEmpty, (, ), ), {, indent, ., pop, (, ), ;, }, sb, ., append, (]
[&&, !, indent, ., isEmpty, (, ), ), {, indent, ., pop, (, ), ;, }, sb, ., append, (]
[., isStart, &&, !, indent, ., isEmpty, (, ), ), {, indent, ., pop, (, ), ;, }, sb, .]
[), {, indent, ., pop, (, ), ;, }, sb, ., append, (, " ", ), ;, if, (, prettyPrint, )]
[), {, indent, ., pop, (, ), ;, }, sb, ., append, (, " ", ), ;, if, (, prettyPrint, )]
[., isEmpty, (, ), ), {, indent, ., pop, (, ), ;, }, sb, ., append, (, " ", ), ;]
[;, }, sb, ., append, (, " ", ), ;, if, (, prettyPrint, ), {, sb, ., append, (, e, .]
[., pop, (, ), ;, }, sb, ., append, (, " ", ), ;, if, (, prettyPrint, ), {, sb, .]
[;, if, (, prettyPrint, ), {, sb, ., append, (, e, ., toString, (, etime, ,, Joiner, ., on, (]
[., append, (, " ", ), ;, if, (, prettyPrint, ), {, sb, ., append, (, e, ., toString, (, etime]
[), ;, if, (, prettyPrint, ), {, sb, ., append, (, e, ., toString, (, etime, ,, Joiner, ., on]
[), {, sb, ., append, (, e, ., toString, (, etime, ,, Joiner, ., on, (, "", ), ., join]
[;, }, else, {, sb, ., append, (, e, ., toString, (, etime, ,, "", ,, 4, ), ), ;]
[., append, (, e, ., toString, (, etime, ,, Joiner, ., on, (, "", ), ., join, (, indent, )]
[), ;, }, else, {, sb, ., append, (, e, ., toString, (, etime, ,, "", ,, 4, ), )]
[., toString, (, etime, ,, Joiner, ., on, (, "", ), ., join, (, indent, ), ,, numDigits, ), )]
[,, Joiner, ., on, (, "", ), ., join, (, indent, ), ,, numDigits, ), ), ;, }, else, {]
[,, numDigits, ), ), ;, }, else, {, sb, ., append, (, e, ., toString, (, etime, ,, "", ,]
[., join, (, indent, ), ,, numDigits, ), ), ;, }, else, {, sb, ., append, (, e, ., toString]
[., on, (, "", ), ., join, (, indent, ), ,, numDigits, ), ), ;, }, else, {, sb, .]
[), ., join, (, indent, ), ,, numDigits, ), ), ;, }, else, {, sb, ., append, (, e, .]
[), ,, numDigits, ), ), ;, }, else, {, sb, ., append, (, e, ., toString, (, etime, ,, ""]
[), ), ;, }, else, {, sb, ., append, (, e, ., toString, (, etime, ,, "", ,, 4, )]
[;, }, etime, =, e, ., eventTime, (, ), ;, sb, ., append, (, '\n', ), ;, if, (, prettyPrint]
[., append, (, e, ., toString, (, etime, ,, "", ,, 4, ), ), ;, }, etime, =, e, .]
[), ;, }, etime, =, e, ., eventTime, (, ), ;, sb, ., append, (, '\n', ), ;, if, (]
[., toString, (, etime, ,, "", ,, 4, ), ), ;, }, etime, =, e, ., eventTime, (, ), ;]
[,, "", ,, 4, ), ), ;, }, etime, =, e, ., eventTime, (, ), ;, sb, ., append, (]
[,, 4, ), ), ;, }, etime, =, e, ., eventTime, (, ), ;, sb, ., append, (, '\n', )]
[), ), ;, }, etime, =, e, ., eventTime, (, ), ;, sb, ., append, (, '\n', ), ;, if]
[=, e, ., eventTime, (, ), ;, sb, ., append, (, '\n', ), ;, if, (, prettyPrint, &&, e, .]
[;, sb, ., append, (, '\n', ), ;, if, (, prettyPrint, &&, e, ., isStart, ), {, indent, ., push]
[., eventTime, (, ), ;, sb, ., append, (, '\n', ), ;, if, (, prettyPrint, &&, e, ., isStart, )]
[;, if, (, prettyPrint, &&, e, ., isStart, ), {, indent, ., push, (, "|  ", ), ;, }, }, if]
[., append, (, '\n', ), ;, if, (, prettyPrint, &&, e, ., isStart, ), {, indent, ., push, (, "|  "]
[), ;, if, (, prettyPrint, &&, e, ., isStart, ), {, indent, ., push, (, "|  ", ), ;, }, }]
[), {, indent, ., push, (, "|  ", ), ;, }, }, if, (, outstandingEvents, ., size, (, ), !=, 0]
[&&, e, ., isStart, ), {, indent, ., push, (, "|  ", ), ;, }, }, if, (, outstandingEvents, ., size]
[), {, indent, ., push, (, "|  ", ), ;, }, }, if, (, outstandingEvents, ., size, (, ), !=, 0]
[., isStart, ), {, indent, ., push, (, "|  ", ), ;, }, }, if, (, outstandingEvents, ., size, (, )]
[;, }, }, if, (, outstandingEvents, ., size, (, ), !=, 0, ), {, long, now, =, clock, ., currentTimeMillis]
[., push, (, "|  ", ), ;, }, }, if, (, outstandingEvents, ., size, (, ), !=, 0, ), {, long]
[), ;, }, }, if, (, outstandingEvents, ., size, (, ), !=, 0, ), {, long, now, =, clock, .]
[), {, long, now, =, clock, ., currentTimeMillis, (, ), ;, sb, ., append, (, " Unstopped timers:\n", ), ;, for, (]
[!=, 0, ), {, long, now, =, clock, ., currentTimeMillis, (, ), ;, sb, ., append, (, " Unstopped timers:\n", ), ;]
[., size, (, ), !=, 0, ), {, long, now, =, clock, ., currentTimeMillis, (, ), ;, sb, ., append]
[), {, long, now, =, clock, ., currentTimeMillis, (, ), ;, sb, ., append, (, " Unstopped timers:\n", ), ;, for, (]
[;, sb, ., append, (, " Unstopped timers:\n", ), ;, for, (, Tracer, t, :, outstandingEvents, ), {, sb, ., append, (]
[., currentTimeMillis, (, ), ;, sb, ., append, (, " Unstopped timers:\n", ), ;, for, (, Tracer, t, :, outstandingEvents, ), {]
[;, for, (, Tracer, t, :, outstandingEvents, ), {, sb, ., append, (, "  ", ), ., append, (, t, )]
[., append, (, " Unstopped timers:\n", ), ;, for, (, Tracer, t, :, outstandingEvents, ), {, sb, ., append, (, "  ", )]
[), ;, for, (, Tracer, t, :, outstandingEvents, ), {, sb, ., append, (, "  ", ), ., append, (, t]
[), {, sb, ., append, (, "  ", ), ., append, (, t, ), ., append, (, " (", ), ., append]
[;, }, }, for, (, String, key, :, stats, ., keySet, (, ), ), {, Stat, stat, =, stats, .]
[., append, (, ")\n", ), ;, }, }, for, (, String, key, :, stats, ., keySet, (, ), ), {]
[., append, (, formatTime, (, t, ., startTimeMs, ), ), ., append, (, ")\n", ), ;, }, }, for, (]
[., append, (, " ms, started at ", ), ., append, (, formatTime, (, t, ., startTimeMs, ), ), ., append, (, ")\n", )]
[., append, (, now, -, t, ., startTimeMs, ), ., append, (, " ms, started at ", ), ., append, (, formatTime, (, t]
[., append, (, " (", ), ., append, (, now, -, t, ., startTimeMs, ), ., append, (, " ms, started at ", ), .]
[., append, (, t, ), ., append, (, " (", ), ., append, (, now, -, t, ., startTimeMs, ), .]
[., append, (, "  ", ), ., append, (, t, ), ., append, (, " (", ), ., append, (, now, -]
[), ., append, (, t, ), ., append, (, " (", ), ., append, (, now, -, t, ., startTimeMs, )]
[), ., append, (, " (", ), ., append, (, now, -, t, ., startTimeMs, ), ., append, (, " ms, started at ", )]
[), ., append, (, now, -, t, ., startTimeMs, ), ., append, (, " ms, started at ", ), ., append, (, formatTime, (]
[), ., append, (, " ms, started at ", ), ., append, (, formatTime, (, t, ., startTimeMs, ), ), ., append, (, ")\n"]
[-, t, ., startTimeMs, ), ., append, (, " ms, started at ", ), ., append, (, formatTime, (, t, ., startTimeMs, ), )]
[), ., append, (, " ms, started at ", ), ., append, (, formatTime, (, t, ., startTimeMs, ), ), ., append, (, ")\n"]
[., startTimeMs, ), ., append, (, " ms, started at ", ), ., append, (, formatTime, (, t, ., startTimeMs, ), ), ., append]
[), ., append, (, formatTime, (, t, ., startTimeMs, ), ), ., append, (, ")\n", ), ;, }, }, for]
[), ., append, (, ")\n", ), ;, }, }, for, (, String, key, :, stats, ., keySet, (, ), )]
[), ), ., append, (, ")\n", ), ;, }, }, for, (, String, key, :, stats, ., keySet, (, )]
[., startTimeMs, ), ), ., append, (, ")\n", ), ;, }, }, for, (, String, key, :, stats, ., keySet]
[), ;, }, }, for, (, String, key, :, stats, ., keySet, (, ), ), {, Stat, stat, =, stats]
[), {, Stat, stat, =, stats, ., get, (, key, ), ;, if, (, stat, ., count, >, 1, )]
[., keySet, (, ), ), {, Stat, stat, =, stats, ., get, (, key, ), ;, if, (, stat, .]
[;, if, (, stat, ., count, >, 1, ), {, sb, ., append, (, " TOTAL ", ), ., append, (, key]
[., get, (, key, ), ;, if, (, stat, ., count, >, 1, ), {, sb, ., append, (, " TOTAL "]
[), ;, if, (, stat, ., count, >, 1, ), {, sb, ., append, (, " TOTAL ", ), ., append, (]
[), {, sb, ., append, (, " TOTAL ", ), ., append, (, key, ), ., append, (, " ", ), ., append]
[>, 1, ), {, sb, ., append, (, " TOTAL ", ), ., append, (, key, ), ., append, (, " ", )]
[., count, >, 1, ), {, sb, ., append, (, " TOTAL ", ), ., append, (, key, ), ., append, (]
[), {, sb, ., append, (, " TOTAL ", ), ., append, (, key, ), ., append, (, " ", ), ., append]
[;, if, (, stat, ., extraInfo, !=, null, ), {, for, (, int, i, =, 0, ;, i, <, stat]
[., append, (, " ms", ), ;, if, (, stat, ., extraInfo, !=, null, ), {, for, (, int, i, =]
[., append, (, stat, ., clockTime, ), ., append, (, " ms", ), ;, if, (, stat, ., extraInfo, !=, null]
[., append, (, " (", ), ., append, (, stat, ., clockTime, ), ., append, (, " ms", ), ;, if, (]
[., append, (, stat, ., count, ), ., append, (, " (", ), ., append, (, stat, ., clockTime, ), .]
[., append, (, " ", ), ., append, (, stat, ., count, ), ., append, (, " (", ), ., append, (]
[., append, (, key, ), ., append, (, " ", ), ., append, (, stat, ., count, ), ., append, (]
[., append, (, " TOTAL ", ), ., append, (, key, ), ., append, (, " ", ), ., append, (, stat, .]
[), ., append, (, key, ), ., append, (, " ", ), ., append, (, stat, ., count, ), ., append]
[), ., append, (, " ", ), ., append, (, stat, ., count, ), ., append, (, " (", ), ., append]
[), ., append, (, stat, ., count, ), ., append, (, " (", ), ., append, (, stat, ., clockTime, )]
[), ., append, (, " (", ), ., append, (, stat, ., clockTime, ), ., append, (, " ms", ), ;, if]
[., count, ), ., append, (, " (", ), ., append, (, stat, ., clockTime, ), ., append, (, " ms", )]
[), ., append, (, stat, ., clockTime, ), ., append, (, " ms", ), ;, if, (, stat, ., extraInfo, !=]
[), ., append, (, " ms", ), ;, if, (, stat, ., extraInfo, !=, null, ), {, for, (, int, i]
[., clockTime, ), ., append, (, " ms", ), ;, if, (, stat, ., extraInfo, !=, null, ), {, for, (]
[), ;, if, (, stat, ., extraInfo, !=, null, ), {, for, (, int, i, =, 0, ;, i, <]
[), {, for, (, int, i, =, 0, ;, i, <, stat, ., extraInfo, ., length, ;, i, ++, )]
[!=, null, ), {, for, (, int, i, =, 0, ;, i, <, stat, ., extraInfo, ., length, ;, i]
[., extraInfo, !=, null, ), {, for, (, int, i, =, 0, ;, i, <, stat, ., extraInfo, ., length]
[), {, for, (, int, i, =, 0, ;, i, <, stat, ., extraInfo, ., length, ;, i, ++, )]
[;, i, <, stat, ., extraInfo, ., length, ;, i, ++, ), {, sb, ., append, (, "; ", ), ;]
[;, i, ++, ), {, sb, ., append, (, "; ", ), ;, sb, ., append, (, stat, ., extraInfo, []
[<, stat, ., extraInfo, ., length, ;, i, ++, ), {, sb, ., append, (, "; ", ), ;, sb, .]
[;, i, ++, ), {, sb, ., append, (, "; ", ), ;, sb, ., append, (, stat, ., extraInfo, []
[., length, ;, i, ++, ), {, sb, ., append, (, "; ", ), ;, sb, ., append, (, stat, .]
[., extraInfo, ., length, ;, i, ++, ), {, sb, ., append, (, "; ", ), ;, sb, ., append, (]
[), {, sb, ., append, (, "; ", ), ;, sb, ., append, (, stat, ., extraInfo, [, i, ], )]
[++, ), {, sb, ., append, (, "; ", ), ;, sb, ., append, (, stat, ., extraInfo, [, i, ]]
[;, sb, ., append, (, stat, ., extraInfo, [, i, ], ), ., append, (, ' ', ), ., append, (]
[., append, (, "; ", ), ;, sb, ., append, (, stat, ., extraInfo, [, i, ], ), ., append, (]
[), ;, sb, ., append, (, stat, ., extraInfo, [, i, ], ), ., append, (, ' ', ), ., append]
[;, }, }, sb, ., append, (, ")\n", ), ;, }, }, return, sb, ., toString, (, ), ;, }]
[., append, (, extraTracingStatistics, ., get, (, i, ), ., getUnits, (, ), ), ;, }, }, sb, ., append]
[., append, (, ' ', ), ., append, (, extraTracingStatistics, ., get, (, i, ), ., getUnits, (, ), ), ;]
[., append, (, stat, ., extraInfo, [, i, ], ), ., append, (, ' ', ), ., append, (, extraTracingStatistics, .]
[), ., append, (, ' ', ), ., append, (, extraTracingStatistics, ., get, (, i, ), ., getUnits, (, ), )]
[[, i, ], ), ., append, (, ' ', ), ., append, (, extraTracingStatistics, ., get, (, i, ), ., getUnits]
[., extraInfo, [, i, ], ), ., append, (, ' ', ), ., append, (, extraTracingStatistics, ., get, (, i, )]
[], ), ., append, (, ' ', ), ., append, (, extraTracingStatistics, ., get, (, i, ), ., getUnits, (, )]
[), ., append, (, extraTracingStatistics, ., get, (, i, ), ., getUnits, (, ), ), ;, }, }, sb, .]
[), ;, }, }, sb, ., append, (, ")\n", ), ;, }, }, return, sb, ., toString, (, ), ;]
[., getUnits, (, ), ), ;, }, }, sb, ., append, (, ")\n", ), ;, }, }, return, sb, .]
[., get, (, i, ), ., getUnits, (, ), ), ;, }, }, sb, ., append, (, ")\n", ), ;]
[), ., getUnits, (, ), ), ;, }, }, sb, ., append, (, ")\n", ), ;, }, }, return, sb]
[;, }, }, return, sb, ., toString, (, ), ;, }, private, int, getMaxDigits, (, ), {, long, etime, =]
[., append, (, ")\n", ), ;, }, }, return, sb, ., toString, (, ), ;, }, private, int, getMaxDigits, (]
[), ;, }, }, return, sb, ., toString, (, ), ;, }, private, int, getMaxDigits, (, ), {, long, etime]
[;, }, private, int, getMaxDigits, (, ), {, long, etime, =, -, 1, ;, long, max_time, =, 0, ;, for]
[., toString, (, ), ;, }, private, int, getMaxDigits, (, ), {, long, etime, =, -, 1, ;, long, max_time]
[;, long, max_time, =, 0, ;, for, (, Event, e, :, events, ), {, if, (, etime, !=, -, 1]
[;, long, max_time, =, 0, ;, for, (, Event, e, :, events, ), {, if, (, etime, !=, -, 1]
[;, for, (, Event, e, :, events, ), {, if, (, etime, !=, -, 1, ), {, long, time, =]
[), {, if, (, etime, !=, -, 1, ), {, long, time, =, e, ., eventTime, (, ), -, etime]
[), {, long, time, =, e, ., eventTime, (, ), -, etime, ;, max_time, =, Math, ., max, (, max_time]
[!=, -, 1, ), {, long, time, =, e, ., eventTime, (, ), -, etime, ;, max_time, =, Math, .]
[), {, long, time, =, e, ., eventTime, (, ), -, etime, ;, max_time, =, Math, ., max, (, max_time]
[), {, long, time, =, e, ., eventTime, (, ), -, etime, ;, max_time, =, Math, ., max, (, max_time]
[;, max_time, =, Math, ., max, (, max_time, ,, time, ), ;, }, if, (, !, e, ., isStart, )]
[-, etime, ;, max_time, =, Math, ., max, (, max_time, ,, time, ), ;, }, if, (, !, e, .]
[., eventTime, (, ), -, etime, ;, max_time, =, Math, ., max, (, max_time, ,, time, ), ;, }, if]
[;, max_time, =, Math, ., max, (, max_time, ,, time, ), ;, }, if, (, !, e, ., isStart, )]
[=, Math, ., max, (, max_time, ,, time, ), ;, }, if, (, !, e, ., isStart, ), {, long]
[;, }, if, (, !, e, ., isStart, ), {, long, time, =, e, ., tracer, ., stopTimeMs, -, e]
[., max, (, max_time, ,, time, ), ;, }, if, (, !, e, ., isStart, ), {, long, time, =]
[,, time, ), ;, }, if, (, !, e, ., isStart, ), {, long, time, =, e, ., tracer, .]
[), ;, }, if, (, !, e, ., isStart, ), {, long, time, =, e, ., tracer, ., stopTimeMs, -]
[), {, long, time, =, e, ., tracer, ., stopTimeMs, -, e, ., tracer, ., startTimeMs, ;, max_time, =, Math]
[), {, long, time, =, e, ., tracer, ., stopTimeMs, -, e, ., tracer, ., startTimeMs, ;, max_time, =, Math]
[., isStart, ), {, long, time, =, e, ., tracer, ., stopTimeMs, -, e, ., tracer, ., startTimeMs, ;, max_time]
[;, max_time, =, Math, ., max, (, max_time, ,, time, ), ;, }, etime, =, e, ., eventTime, (, )]
[-, e, ., tracer, ., startTimeMs, ;, max_time, =, Math, ., max, (, max_time, ,, time, ), ;, }, etime]
[., stopTimeMs, -, e, ., tracer, ., startTimeMs, ;, max_time, =, Math, ., max, (, max_time, ,, time, ), ;]
[., tracer, ., stopTimeMs, -, e, ., tracer, ., startTimeMs, ;, max_time, =, Math, ., max, (, max_time, ,, time]
[;, max_time, =, Math, ., max, (, max_time, ,, time, ), ;, }, etime, =, e, ., eventTime, (, )]
[., startTimeMs, ;, max_time, =, Math, ., max, (, max_time, ,, time, ), ;, }, etime, =, e, ., eventTime]
[., tracer, ., startTimeMs, ;, max_time, =, Math, ., max, (, max_time, ,, time, ), ;, }, etime, =, e]
[=, Math, ., max, (, max_time, ,, time, ), ;, }, etime, =, e, ., eventTime, (, ), ;, }]
[;, }, etime, =, e, ., eventTime, (, ), ;, }, return, Math, ., max, (, 3, ,, numDigits, (]
[., max, (, max_time, ,, time, ), ;, }, etime, =, e, ., eventTime, (, ), ;, }, return, Math]
[,, time, ), ;, }, etime, =, e, ., eventTime, (, ), ;, }, return, Math, ., max, (, 3]
[), ;, }, etime, =, e, ., eventTime, (, ), ;, }, return, Math, ., max, (, 3, ,, numDigits]
[=, e, ., eventTime, (, ), ;, }, return, Math, ., max, (, 3, ,, numDigits, (, max_time, ), )]
[;, }, return, Math, ., max, (, 3, ,, numDigits, (, max_time, ), ), ;, }, }, private, static, ThreadLocal]
[., eventTime, (, ), ;, }, return, Math, ., max, (, 3, ,, numDigits, (, max_time, ), ), ;, }]
[;, }, }, private, static, ThreadLocal, <, ThreadTrace, >, traces, =, new, ThreadLocal, <, ThreadTrace, >, (, ), ;, static]
[., max, (, 3, ,, numDigits, (, max_time, ), ), ;, }, }, private, static, ThreadLocal, <, ThreadTrace, >, traces]
[,, numDigits, (, max_time, ), ), ;, }, }, private, static, ThreadLocal, <, ThreadTrace, >, traces, =, new, ThreadLocal, <]
[), ;, }, }, private, static, ThreadLocal, <, ThreadTrace, >, traces, =, new, ThreadLocal, <, ThreadTrace, >, (, ), ;]
[), ), ;, }, }, private, static, ThreadLocal, <, ThreadTrace, >, traces, =, new, ThreadLocal, <, ThreadTrace, >, (, )]
[;, static, ThreadTrace, getThreadTrace, (, ), {, ThreadTrace, t, =, traces, ., get, (, ), ;, if, (, t, ==]
[;, if, (, t, ==, null, ), {, t, =, new, ThreadTrace, (, ), ;, t, ., prettyPrint, =, defaultPrettyPrint]
[., get, (, ), ;, if, (, t, ==, null, ), {, t, =, new, ThreadTrace, (, ), ;, t]
[), {, t, =, new, ThreadTrace, (, ), ;, t, ., prettyPrint, =, defaultPrettyPrint, ;, traces, ., set, (, t]
[==, null, ), {, t, =, new, ThreadTrace, (, ), ;, t, ., prettyPrint, =, defaultPrettyPrint, ;, traces, ., set]
[), {, t, =, new, ThreadTrace, (, ), ;, t, ., prettyPrint, =, defaultPrettyPrint, ;, traces, ., set, (, t]
[=, new, ThreadTrace, (, ), ;, t, ., prettyPrint, =, defaultPrettyPrint, ;, traces, ., set, (, t, ), ;, }]
[;, t, ., prettyPrint, =, defaultPrettyPrint, ;, traces, ., set, (, t, ), ;, }, return, t, ;, }, static]
[=, defaultPrettyPrint, ;, traces, ., set, (, t, ), ;, }, return, t, ;, }, static, void, clearThreadTrace, (, )]
[., prettyPrint, =, defaultPrettyPrint, ;, traces, ., set, (, t, ), ;, }, return, t, ;, }, static, void, clearThreadTrace]
[;, traces, ., set, (, t, ), ;, }, return, t, ;, }, static, void, clearThreadTrace, (, ), {, traces]
[;, }, return, t, ;, }, static, void, clearThreadTrace, (, ), {, traces, ., remove, (, ), ;, }, static]
[., set, (, t, ), ;, }, return, t, ;, }, static, void, clearThreadTrace, (, ), {, traces, ., remove]
[), ;, }, return, t, ;, }, static, void, clearThreadTrace, (, ), {, traces, ., remove, (, ), ;, }]
[;, }, static, void, clearThreadTrace, (, ), {, traces, ., remove, (, ), ;, }, static, interface, TracingStatistic, {, long]
[;, }, static, interface, TracingStatistic, {, long, start, (, Thread, thread, ), ;, long, stop, (, Thread, thread, ), ;]
[., remove, (, ), ;, }, static, interface, TracingStatistic, {, long, start, (, Thread, thread, ), ;, long, stop, (]
[;, @, SuppressWarnings, (, "nullness", ), void, incrementBy, (, String, key, ,, long, delta, ), {, Long, oldValue, =, map]
[void, incrementBy, (, String, key, ,, long, delta, ), {, Long, oldValue, =, map, ., get, (, key, ), ;]
[), void, incrementBy, (, String, key, ,, long, delta, ), {, Long, oldValue, =, map, ., get, (, key, )]
[;, if, (, oldValue, ==, null, ), {, oldValue, =, map, ., putIfAbsent, (, key, ,, delta, ), ;, if]
[., get, (, key, ), ;, if, (, oldValue, ==, null, ), {, oldValue, =, map, ., putIfAbsent, (, key]
[), ;, if, (, oldValue, ==, null, ), {, oldValue, =, map, ., putIfAbsent, (, key, ,, delta, ), ;]
[), {, oldValue, =, map, ., putIfAbsent, (, key, ,, delta, ), ;, if, (, oldValue, ==, null, ), {]
[==, null, ), {, oldValue, =, map, ., putIfAbsent, (, key, ,, delta, ), ;, if, (, oldValue, ==, null]
[), {, oldValue, =, map, ., putIfAbsent, (, key, ,, delta, ), ;, if, (, oldValue, ==, null, ), {]
[=, map, ., putIfAbsent, (, key, ,, delta, ), ;, if, (, oldValue, ==, null, ), {, return, ;, }]
[;, if, (, oldValue, ==, null, ), {, return, ;, }, else, {, }, }, while, (, true, ), {]
[., putIfAbsent, (, key, ,, delta, ), ;, if, (, oldValue, ==, null, ), {, return, ;, }, else, {]
[,, delta, ), ;, if, (, oldValue, ==, null, ), {, return, ;, }, else, {, }, }, while, (]
[), ;, if, (, oldValue, ==, null, ), {, return, ;, }, else, {, }, }, while, (, true, )]
[), {, return, ;, }, else, {, }, }, while, (, true, ), {, if, (, map, ., replace, (]
[==, null, ), {, return, ;, }, else, {, }, }, while, (, true, ), {, if, (, map, .]
[), {, return, ;, }, else, {, }, }, while, (, true, ), {, if, (, map, ., replace, (]
[), {, if, (, map, ., replace, (, key, ,, oldValue, ,, oldValue, +, delta, ), ), {, break, ;]
[), {, break, ;, }, oldValue, =, map, ., get, (, key, ), ;, }, }, Map, <, String, ,]
[., replace, (, key, ,, oldValue, ,, oldValue, +, delta, ), ), {, break, ;, }, oldValue, =, map, .]
[,, oldValue, ,, oldValue, +, delta, ), ), {, break, ;, }, oldValue, =, map, ., get, (, key, )]
[,, oldValue, +, delta, ), ), {, break, ;, }, oldValue, =, map, ., get, (, key, ), ;, }]
[), ), {, break, ;, }, oldValue, =, map, ., get, (, key, ), ;, }, }, Map, <, String]
[+, delta, ), ), {, break, ;, }, oldValue, =, map, ., get, (, key, ), ;, }, }, Map]
[), ), {, break, ;, }, oldValue, =, map, ., get, (, key, ), ;, }, }, Map, <, String]
[=, map, ., get, (, key, ), ;, }, }, Map, <, String, ,, Long, >, getMap, (, ), {]
[;, }, }, Map, <, String, ,, Long, >, getMap, (, ), {, return, map, ;, }, }, }]
[., get, (, key, ), ;, }, }, Map, <, String, ,, Long, >, getMap, (, ), {, return, map]
[), ;, }, }, Map, <, String, ,, Long, >, getMap, (, ), {, return, map, ;, }, }, }]
[;, }, }, }]
