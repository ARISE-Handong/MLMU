[com, ., google, ., javascript, ., rhino, ;, public, abstract, class, SourcePosition, <, T, >, {, private, T, item, =]
[rhino, ;, public, abstract, class, SourcePosition, <, T, >, {, private, T, item, =, null, ;, private, int, startLineno, =]
[<, T, >, {, private, T, item, =, null, ;, private, int, startLineno, =, 0, ;, private, int, startCharno, =]
[item, =, null, ;, private, int, startLineno, =, 0, ;, private, int, startCharno, =, 0, ;, private, int, endLineno, =]
[startLineno, =, 0, ;, private, int, startCharno, =, 0, ;, private, int, endLineno, =, 0, ;, private, int, endCharno, =]
[private, int, endLineno, =, 0, ;, private, int, endCharno, =, 0, ;, public, void, setItem, (, T, item, ), {]
[private, int, endLineno, =, 0, ;, private, int, endCharno, =, 0, ;, public, void, setItem, (, T, item, ), {]
[0, ;, private, int, endCharno, =, 0, ;, public, void, setItem, (, T, item, ), {, this, ., item, =]
[}, public, void, setPositionInformation, (, int, startLineno, ,, int, startCharno, ,, int, endLineno, ,, int, endCharno, ), {, if, (]
[}, public, void, setPositionInformation, (, int, startLineno, ,, int, startCharno, ,, int, endLineno, ,, int, endCharno, ), {, if, (]
[void, setPositionInformation, (, int, startLineno, ,, int, startCharno, ,, int, endLineno, ,, int, endCharno, ), {, if, (, startLineno, ==]
[,, int, startCharno, ,, int, endLineno, ,, int, endCharno, ), {, if, (, startLineno, ==, endLineno, ), {, if, (]
[,, int, startCharno, ,, int, endLineno, ,, int, endCharno, ), {, if, (, startLineno, ==, endLineno, ), {, if, (]
[startCharno, ,, int, endLineno, ,, int, endCharno, ), {, if, (, startLineno, ==, endLineno, ), {, if, (, startCharno, >=]
[,, int, endCharno, ), {, if, (, startLineno, ==, endLineno, ), {, if, (, startCharno, >=, endCharno, ), {, throw]
[), {, if, (, startLineno, ==, endLineno, ), {, if, (, startCharno, >=, endCharno, ), {, throw, new, IllegalStateException, (]
[), {, if, (, startLineno, ==, endLineno, ), {, if, (, startCharno, >=, endCharno, ), {, throw, new, IllegalStateException, (]
[), {, if, (, startLineno, ==, endLineno, ), {, if, (, startCharno, >=, endCharno, ), {, throw, new, IllegalStateException, (]
[), {, if, (, startLineno, ==, endLineno, ), {, if, (, startCharno, >=, endCharno, ), {, throw, new, IllegalStateException, (]
[), {, if, (, startLineno, ==, endLineno, ), {, if, (, startCharno, >=, endCharno, ), {, throw, new, IllegalStateException, (]
[), {, if, (, startLineno, ==, endLineno, ), {, if, (, startCharno, >=, endCharno, ), {, throw, new, IllegalStateException, (]
[if, (, startLineno, ==, endLineno, ), {, if, (, startCharno, >=, endCharno, ), {, throw, new, IllegalStateException, (, "Recorded bad position information\n", +]
[startLineno, ==, endLineno, ), {, if, (, startCharno, >=, endCharno, ), {, throw, new, IllegalStateException, (, "Recorded bad position information\n", +, "start-char: ", +]
[endLineno, ), {, if, (, startCharno, >=, endCharno, ), {, throw, new, IllegalStateException, (, "Recorded bad position information\n", +, "start-char: ", +, startCharno, +]
[{, if, (, startCharno, >=, endCharno, ), {, throw, new, IllegalStateException, (, "Recorded bad position information\n", +, "start-char: ", +, startCharno, +, "\n", +]
[(, startCharno, >=, endCharno, ), {, throw, new, IllegalStateException, (, "Recorded bad position information\n", +, "start-char: ", +, startCharno, +, "\n", +, "end-char: ", +]
[(, "Recorded bad position information\n", +, "start-char: ", +, startCharno, +, "\n", +, "end-char: ", +, endCharno, ), ;, }, }, else, {, if, (]
[(, "Recorded bad position information\n", +, "start-char: ", +, startCharno, +, "\n", +, "end-char: ", +, endCharno, ), ;, }, }, else, {, if, (]
[+, "start-char: ", +, startCharno, +, "\n", +, "end-char: ", +, endCharno, ), ;, }, }, else, {, if, (, startLineno, >]
[+, "\n", +, "end-char: ", +, endCharno, ), ;, }, }, else, {, if, (, startLineno, >, endLineno, ), {, throw]
["end-char: ", +, endCharno, ), ;, }, }, else, {, if, (, startLineno, >, endLineno, ), {, throw, new, IllegalStateException, (]
["end-char: ", +, endCharno, ), ;, }, }, else, {, if, (, startLineno, >, endLineno, ), {, throw, new, IllegalStateException, (]
["end-char: ", +, endCharno, ), ;, }, }, else, {, if, (, startLineno, >, endLineno, ), {, throw, new, IllegalStateException, (]
["end-char: ", +, endCharno, ), ;, }, }, else, {, if, (, startLineno, >, endLineno, ), {, throw, new, IllegalStateException, (]
["end-char: ", +, endCharno, ), ;, }, }, else, {, if, (, startLineno, >, endLineno, ), {, throw, new, IllegalStateException, (]
["end-char: ", +, endCharno, ), ;, }, }, else, {, if, (, startLineno, >, endLineno, ), {, throw, new, IllegalStateException, (]
[endCharno, ), ;, }, }, else, {, if, (, startLineno, >, endLineno, ), {, throw, new, IllegalStateException, (, "Recorded bad position information\n", +]
[;, }, }, else, {, if, (, startLineno, >, endLineno, ), {, throw, new, IllegalStateException, (, "Recorded bad position information\n", +, "start-line: ", +]
[}, else, {, if, (, startLineno, >, endLineno, ), {, throw, new, IllegalStateException, (, "Recorded bad position information\n", +, "start-line: ", +, startLineno, +]
[{, if, (, startLineno, >, endLineno, ), {, throw, new, IllegalStateException, (, "Recorded bad position information\n", +, "start-line: ", +, startLineno, +, "\n", +]
[(, startLineno, >, endLineno, ), {, throw, new, IllegalStateException, (, "Recorded bad position information\n", +, "start-line: ", +, startLineno, +, "\n", +, "end-line: ", +]
[{, throw, new, IllegalStateException, (, "Recorded bad position information\n", +, "start-line: ", +, startLineno, +, "\n", +, "end-line: ", +, endLineno, ), ;, }, }]
[{, throw, new, IllegalStateException, (, "Recorded bad position information\n", +, "start-line: ", +, startLineno, +, "\n", +, "end-line: ", +, endLineno, ), ;, }, }]
[(, "Recorded bad position information\n", +, "start-line: ", +, startLineno, +, "\n", +, "end-line: ", +, endLineno, ), ;, }, }, this, ., startLineno, =]
[+, "start-line: ", +, startLineno, +, "\n", +, "end-line: ", +, endLineno, ), ;, }, }, this, ., startLineno, =, startLineno, ;]
[+, "start-line: ", +, startLineno, +, "\n", +, "end-line: ", +, endLineno, ), ;, }, }, this, ., startLineno, =, startLineno, ;]
[+, "\n", +, "end-line: ", +, endLineno, ), ;, }, }, this, ., startLineno, =, startLineno, ;, this, ., startCharno, =]
[+, "end-line: ", +, endLineno, ), ;, }, }, this, ., startLineno, =, startLineno, ;, this, ., startCharno, =, startCharno, ;]
[+, "end-line: ", +, endLineno, ), ;, }, }, this, ., startLineno, =, startLineno, ;, this, ., startCharno, =, startCharno, ;]
[), ;, }, }, this, ., startLineno, =, startLineno, ;, this, ., startCharno, =, startCharno, ;, this, ., endLineno, =]
[}, }, this, ., startLineno, =, startLineno, ;, this, ., startCharno, =, startCharno, ;, this, ., endLineno, =, endLineno, ;]
[}, }, this, ., startLineno, =, startLineno, ;, this, ., startCharno, =, startCharno, ;, this, ., endLineno, =, endLineno, ;]
[startLineno, =, startLineno, ;, this, ., startCharno, =, startCharno, ;, this, ., endLineno, =, endLineno, ;, this, ., endCharno, =]
[this, ., endLineno, =, endLineno, ;, this, ., endCharno, =, endCharno, ;, }, public, T, getItem, (, ), {, return]
[endCharno, ;, }, public, T, getItem, (, ), {, return, item, ;, }, public, int, getStartLine, (, ), {, return]
[item, ;, }, public, int, getStartLine, (, ), {, return, startLineno, ;, }, public, int, getPositionOnStartLine, (, ), {, return]
[startLineno, ;, }, public, int, getPositionOnStartLine, (, ), {, return, startCharno, ;, }, public, int, getEndLine, (, ), {, return]
[startCharno, ;, }, public, int, getEndLine, (, ), {, return, endLineno, ;, }, public, int, getPositionOnEndLine, (, ), {, return]
