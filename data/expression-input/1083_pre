[commons, ., math3, ., exception, ., OutOfRangeException, ;, public, class, RegressionResults, implements, Serializable, {, private, static, final, int, SSE_IDX, =]
[public, class, RegressionResults, implements, Serializable, {, private, static, final, int, SSE_IDX, =, 0, ;, private, static, final, int, SST_IDX, =]
[final, int, SSE_IDX, =, 0, ;, private, static, final, int, SST_IDX, =, 1, ;, private, static, final, int, RSQ_IDX, =]
[final, int, SST_IDX, =, 1, ;, private, static, final, int, RSQ_IDX, =, 2, ;, private, static, final, int, MSE_IDX, =]
[final, int, RSQ_IDX, =, 2, ;, private, static, final, int, MSE_IDX, =, 3, ;, private, static, final, int, ADJRSQ_IDX, =]
[final, int, MSE_IDX, =, 3, ;, private, static, final, int, ADJRSQ_IDX, =, 4, ;, private, static, final, long, serialVersionUID, =]
[final, double, [, ], parameters, ;, private, final, double, [, ], [, ], varCovData, ;, private, final, boolean, isSymmetricVCD, ;]
[], parameters, ;, private, final, double, [, ], [, ], varCovData, ;, private, final, boolean, isSymmetricVCD, ;, @, SuppressWarnings, (]
[int, rank, ;, private, final, long, nobs, ;, private, final, boolean, containsConstant, ;, private, final, double, [, ], globalFitInfo, ;]
[private, final, long, nobs, ;, private, final, boolean, containsConstant, ;, private, final, double, [, ], globalFitInfo, ;, @, SuppressWarnings, (]
[boolean, containsConstant, ;, private, final, double, [, ], globalFitInfo, ;, @, SuppressWarnings, (, "unused", ), private, RegressionResults, (, ), {]
[boolean, containsConstant, ;, private, final, double, [, ], globalFitInfo, ;, @, SuppressWarnings, (, "unused", ), private, RegressionResults, (, ), {]
[final, double, [, ], globalFitInfo, ;, @, SuppressWarnings, (, "unused", ), private, RegressionResults, (, ), {, this, ., parameters, =]
[[, ], globalFitInfo, ;, @, SuppressWarnings, (, "unused", ), private, RegressionResults, (, ), {, this, ., parameters, =, null, ;]
[[, ], globalFitInfo, ;, @, SuppressWarnings, (, "unused", ), private, RegressionResults, (, ), {, this, ., parameters, =, null, ;]
[@, SuppressWarnings, (, "unused", ), private, RegressionResults, (, ), {, this, ., parameters, =, null, ;, this, ., varCovData, =]
[(, "unused", ), private, RegressionResults, (, ), {, this, ., parameters, =, null, ;, this, ., varCovData, =, null, ;]
[(, "unused", ), private, RegressionResults, (, ), {, this, ., parameters, =, null, ;, this, ., varCovData, =, null, ;]
[RegressionResults, (, ), {, this, ., parameters, =, null, ;, this, ., varCovData, =, null, ;, this, ., rank, =]
[(, ), {, this, ., parameters, =, null, ;, this, ., varCovData, =, null, ;, this, ., rank, =, -]
[{, this, ., parameters, =, null, ;, this, ., varCovData, =, null, ;, this, ., rank, =, -, 1, ;]
[{, this, ., parameters, =, null, ;, this, ., varCovData, =, null, ;, this, ., rank, =, -, 1, ;]
[=, null, ;, this, ., varCovData, =, null, ;, this, ., rank, =, -, 1, ;, this, ., nobs, =]
[null, ;, this, ., varCovData, =, null, ;, this, ., rank, =, -, 1, ;, this, ., nobs, =, -]
[this, ., varCovData, =, null, ;, this, ., rank, =, -, 1, ;, this, ., nobs, =, -, 1, ;]
[this, ., varCovData, =, null, ;, this, ., rank, =, -, 1, ;, this, ., nobs, =, -, 1, ;]
[null, ;, this, ., rank, =, -, 1, ;, this, ., nobs, =, -, 1, ;, this, ., containsConstant, =]
[this, ., rank, =, -, 1, ;, this, ., nobs, =, -, 1, ;, this, ., containsConstant, =, false, ;]
[this, ., rank, =, -, 1, ;, this, ., nobs, =, -, 1, ;, this, ., containsConstant, =, false, ;]
[-, 1, ;, this, ., nobs, =, -, 1, ;, this, ., containsConstant, =, false, ;, this, ., isSymmetricVCD, =]
[;, this, ., nobs, =, -, 1, ;, this, ., containsConstant, =, false, ;, this, ., isSymmetricVCD, =, false, ;]
[;, this, ., nobs, =, -, 1, ;, this, ., containsConstant, =, false, ;, this, ., isSymmetricVCD, =, false, ;]
[=, -, 1, ;, this, ., containsConstant, =, false, ;, this, ., isSymmetricVCD, =, false, ;, this, ., globalFitInfo, =]
[,, final, double, sumysq, ,, final, double, sse, ,, final, boolean, containsConstant, ,, final, boolean, copyData, ), {, if, (]
[sumysq, ,, final, double, sse, ,, final, boolean, containsConstant, ,, final, boolean, copyData, ), {, if, (, copyData, ), {]
[sumysq, ,, final, double, sse, ,, final, boolean, containsConstant, ,, final, boolean, copyData, ), {, if, (, copyData, ), {]
[sse, ,, final, boolean, containsConstant, ,, final, boolean, copyData, ), {, if, (, copyData, ), {, this, ., parameters, =]
[sse, ,, final, boolean, containsConstant, ,, final, boolean, copyData, ), {, if, (, copyData, ), {, this, ., parameters, =]
[containsConstant, ,, final, boolean, copyData, ), {, if, (, copyData, ), {, this, ., parameters, =, MathArrays, ., copyOf, (]
[boolean, copyData, ), {, if, (, copyData, ), {, this, ., parameters, =, MathArrays, ., copyOf, (, parameters, ), ;]
[boolean, copyData, ), {, if, (, copyData, ), {, this, ., parameters, =, MathArrays, ., copyOf, (, parameters, ), ;]
[if, (, copyData, ), {, this, ., parameters, =, MathArrays, ., copyOf, (, parameters, ), ;, this, ., varCovData, =]
[), {, this, ., parameters, =, MathArrays, ., copyOf, (, parameters, ), ;, this, ., varCovData, =, new, double, []
[), {, this, ., parameters, =, MathArrays, ., copyOf, (, parameters, ), ;, this, ., varCovData, =, new, double, []
[;, this, ., varCovData, =, new, double, [, varcov, ., length, ], [, ], ;, for, (, int, i, =]
[., varCovData, =, new, double, [, varcov, ., length, ], [, ], ;, for, (, int, i, =, 0, ;]
[., varCovData, =, new, double, [, varcov, ., length, ], [, ], ;, for, (, int, i, =, 0, ;]
[=, new, double, [, varcov, ., length, ], [, ], ;, for, (, int, i, =, 0, ;, i, <]
[=, new, double, [, varcov, ., length, ], [, ], ;, for, (, int, i, =, 0, ;, i, <]
[varcov, ., length, ], [, ], ;, for, (, int, i, =, 0, ;, i, <, varcov, ., length, ;]
[varcov, ., length, ], [, ], ;, for, (, int, i, =, 0, ;, i, <, varcov, ., length, ;]
[[, ], ;, for, (, int, i, =, 0, ;, i, <, varcov, ., length, ;, i, ++, ), {]
[[, ], ;, for, (, int, i, =, 0, ;, i, <, varcov, ., length, ;, i, ++, ), {]
[[, ], ;, for, (, int, i, =, 0, ;, i, <, varcov, ., length, ;, i, ++, ), {]
[(, int, i, =, 0, ;, i, <, varcov, ., length, ;, i, ++, ), {, this, ., varCovData, []
[=, 0, ;, i, <, varcov, ., length, ;, i, ++, ), {, this, ., varCovData, [, i, ], =]
[=, 0, ;, i, <, varcov, ., length, ;, i, ++, ), {, this, ., varCovData, [, i, ], =]
[<, varcov, ., length, ;, i, ++, ), {, this, ., varCovData, [, i, ], =, MathArrays, ., copyOf, (]
[<, varcov, ., length, ;, i, ++, ), {, this, ., varCovData, [, i, ], =, MathArrays, ., copyOf, (]
[., length, ;, i, ++, ), {, this, ., varCovData, [, i, ], =, MathArrays, ., copyOf, (, varcov, []
[., varCovData, [, i, ], =, MathArrays, ., copyOf, (, varcov, [, i, ], ), ;, }, }, else, {]
[., varCovData, [, i, ], =, MathArrays, ., copyOf, (, varcov, [, i, ], ), ;, }, }, else, {]
[], =, MathArrays, ., copyOf, (, varcov, [, i, ], ), ;, }, }, else, {, this, ., parameters, =]
[MathArrays, ., copyOf, (, varcov, [, i, ], ), ;, }, }, else, {, this, ., parameters, =, parameters, ;]
[MathArrays, ., copyOf, (, varcov, [, i, ], ), ;, }, }, else, {, this, ., parameters, =, parameters, ;]
[varcov, [, i, ], ), ;, }, }, else, {, this, ., parameters, =, parameters, ;, this, ., varCovData, =]
[], ), ;, }, }, else, {, this, ., parameters, =, parameters, ;, this, ., varCovData, =, varcov, ;, }]
[], ), ;, }, }, else, {, this, ., parameters, =, parameters, ;, this, ., varCovData, =, varcov, ;, }]
[}, else, {, this, ., parameters, =, parameters, ;, this, ., varCovData, =, varcov, ;, }, this, ., isSymmetricVCD, =]
[{, this, ., parameters, =, parameters, ;, this, ., varCovData, =, varcov, ;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;]
[{, this, ., parameters, =, parameters, ;, this, ., varCovData, =, varcov, ;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;]
[=, parameters, ;, this, ., varCovData, =, varcov, ;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;, this, ., nobs, =]
[;, this, ., varCovData, =, varcov, ;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;]
[;, this, ., varCovData, =, varcov, ;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;]
[=, varcov, ;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;, this, ., rank, =]
[;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;, this, ., rank, =, rank, ;]
[;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;, this, ., rank, =, rank, ;]
[isSymmetricVCD, =, isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;, this, ., rank, =, rank, ;, this, ., containsConstant, =]
[isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;, this, ., rank, =, rank, ;, this, ., containsConstant, =, containsConstant, ;]
[isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;, this, ., rank, =, rank, ;, this, ., containsConstant, =, containsConstant, ;]
[nobs, =, nobs, ;, this, ., rank, =, rank, ;, this, ., containsConstant, =, containsConstant, ;, this, ., globalFitInfo, =]
[;, this, ., rank, =, rank, ;, this, ., containsConstant, =, containsConstant, ;, this, ., globalFitInfo, =, new, double, []
[rank, =, rank, ;, this, ., containsConstant, =, containsConstant, ;, this, ., globalFitInfo, =, new, double, [, 5, ], ;]
[rank, =, rank, ;, this, ., containsConstant, =, containsConstant, ;, this, ., globalFitInfo, =, new, double, [, 5, ], ;]
[this, ., containsConstant, =, containsConstant, ;, this, ., globalFitInfo, =, new, double, [, 5, ], ;, Arrays, ., fill, (]
[this, ., containsConstant, =, containsConstant, ;, this, ., globalFitInfo, =, new, double, [, 5, ], ;, Arrays, ., fill, (]
[containsConstant, ;, this, ., globalFitInfo, =, new, double, [, 5, ], ;, Arrays, ., fill, (, this, ., globalFitInfo, ,]
[containsConstant, ;, this, ., globalFitInfo, =, new, double, [, 5, ], ;, Arrays, ., fill, (, this, ., globalFitInfo, ,]
[double, [, 5, ], ;, Arrays, ., fill, (, this, ., globalFitInfo, ,, Double, ., NaN, ), ;, if, (]
[double, [, 5, ], ;, Arrays, ., fill, (, this, ., globalFitInfo, ,, Double, ., NaN, ), ;, if, (]
[5, ], ;, Arrays, ., fill, (, this, ., globalFitInfo, ,, Double, ., NaN, ), ;, if, (, rank, >]
[Arrays, ., fill, (, this, ., globalFitInfo, ,, Double, ., NaN, ), ;, if, (, rank, >, 0, ), {]
[Arrays, ., fill, (, this, ., globalFitInfo, ,, Double, ., NaN, ), ;, if, (, rank, >, 0, ), {]
[Arrays, ., fill, (, this, ., globalFitInfo, ,, Double, ., NaN, ), ;, if, (, rank, >, 0, ), {]
[this, ., globalFitInfo, ,, Double, ., NaN, ), ;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, []
[,, Double, ., NaN, ), ;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =]
[,, Double, ., NaN, ), ;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =]
[., NaN, ), ;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?]
[NaN, ), ;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (]
[NaN, ), ;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (]
[;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -]
[;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -]
[;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -]
[(, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -, sumy, *]
[>, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -, sumy, *, sumy, /]
[{, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -, sumy, *, sumy, /, nobs, ), :]
[globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -, sumy, *, sumy, /, nobs, ), :, sumysq, ;, }]
[globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -, sumy, *, sumy, /, nobs, ), :, sumysq, ;, }]
[globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -, sumy, *, sumy, /, nobs, ), :, sumysq, ;, }]
[=, containsConstant, ?, (, sumysq, -, sumy, *, sumy, /, nobs, ), :, sumysq, ;, }, this, ., globalFitInfo, []
[(, sumysq, -, sumy, *, sumy, /, nobs, ), :, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =]
[-, sumy, *, sumy, /, nobs, ), :, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;]
[-, sumy, *, sumy, /, nobs, ), :, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;]
[-, sumy, *, sumy, /, nobs, ), :, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;]
[/, nobs, ), :, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, []
[:, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =]
[:, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =]
[:, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =]
[:, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =]
[this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, []
[[, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /]
[SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /, (]
[SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /, (]
[=, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -]
[this, ., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;]
[this, ., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;]
[this, ., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;]
[MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;, this, ., globalFitInfo, []
[this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =]
[this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =]
[globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -]
[globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -]
[globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -]
[globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -]
[/, (, nobs, -, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo, []
[-, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /]
[-, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /]
[-, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /]
[this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo, []
[], =, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo, [, SST_IDX, ], ;, if, (]
[=, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo, [, SST_IDX, ], ;, if, (, !]
[this, ., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, ), {]
[this, ., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, ), {]
[this, ., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, ), {]
[SSE_IDX, ], /, this, ., globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, []
[this, ., globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =]
[this, ., globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =]
[globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -]
[globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -]
[[, SST_IDX, ], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (]
[[, SST_IDX, ], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (]
[], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -]
[], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -]
[], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -]
[!, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -, this, ., globalFitInfo, []
[this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ], ), *]
[., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (]
[., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (]
[ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (, (, double, )]
[=, 1.0, -, (, 1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (, (, double, ), nobs, /]
[1.0, -, (, 1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (, (, double, ), nobs, /, (]
[1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (, (, double, ), nobs, /, (, (, double, )]
[-, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (, (, double, ), nobs, /, (, (, double, ), (]
[-, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (, (, double, ), nobs, /, (, (, double, ), (]
[., globalFitInfo, [, RSQ_IDX, ], ), *, (, (, double, ), nobs, /, (, (, double, ), (, nobs, -]
[(, double, ), nobs, /, (, (, double, ), (, nobs, -, rank, ), ), ), ;, }, else, {]
[(, double, ), nobs, /, (, (, double, ), (, nobs, -, rank, ), ), ), ;, }, else, {]
[(, double, ), nobs, /, (, (, double, ), (, nobs, -, rank, ), ), ), ;, }, else, {]
[/, (, (, double, ), (, nobs, -, rank, ), ), ), ;, }, else, {, this, ., globalFitInfo, []
[double, ), (, nobs, -, rank, ), ), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =]
[double, ), (, nobs, -, rank, ), ), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =]
[(, nobs, -, rank, ), ), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -]
[(, nobs, -, rank, ), ), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -]
[nobs, -, rank, ), ), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (]
[nobs, -, rank, ), ), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (]
[rank, ), ), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *]
[), ), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (]
[), ), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (]
[), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs, -]
[{, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs, -, 1.0, ), ), /]
[this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs, -, 1.0, ), ), /, (]
[this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs, -, 1.0, ), ), /, (]
[this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs, -, 1.0, ), ), /, (]
[globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs, -, 1.0, ), ), /, (, globalFitInfo, []
[], =, 1.0, -, (, sse, *, (, nobs, -, 1.0, ), ), /, (, globalFitInfo, [, SST_IDX, ], *]
[=, 1.0, -, (, sse, *, (, nobs, -, 1.0, ), ), /, (, globalFitInfo, [, SST_IDX, ], *, (]
[=, 1.0, -, (, sse, *, (, nobs, -, 1.0, ), ), /, (, globalFitInfo, [, SST_IDX, ], *, (]
[-, (, sse, *, (, nobs, -, 1.0, ), ), /, (, globalFitInfo, [, SST_IDX, ], *, (, nobs, -]
[nobs, -, rank, ), ), ;, }, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (]
[nobs, -, rank, ), ), ;, }, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (]
[rank, ), ), ;, }, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==]
[}, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return]
[}, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return]
[index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (]
[index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (]
[index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (]
[throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <]
[{, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||]
[{, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||]
[(, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||, index, >=]
[(, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||, index, >=]
[(, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||, index, >=]
[., NaN, ;, }, if, (, index, <, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw]
[}, if, (, index, <, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (]
[(, index, <, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,]
[<, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,]
[<, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,]
[<, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,]
[<, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,]
[., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -]
[{, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, return]
[{, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, return]
[{, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, return]
[(, index, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, return, this, ., parameters, []
[}, return, this, ., parameters, [, index, ], ;, }, public, double, [, ], getParameterEstimates, (, ), {, if, (]
[}, return, this, ., parameters, [, index, ], ;, }, public, double, [, ], getParameterEstimates, (, ), {, if, (]
[}, return, this, ., parameters, [, index, ], ;, }, public, double, [, ], getParameterEstimates, (, ), {, if, (]
[parameters, [, index, ], ;, }, public, double, [, ], getParameterEstimates, (, ), {, if, (, this, ., parameters, ==]
[;, }, public, double, [, ], getParameterEstimates, (, ), {, if, (, this, ., parameters, ==, null, ), {, return]
[[, ], getParameterEstimates, (, ), {, if, (, this, ., parameters, ==, null, ), {, return, null, ;, }, return]
[[, ], getParameterEstimates, (, ), {, if, (, this, ., parameters, ==, null, ), {, return, null, ;, }, return]
[), {, if, (, this, ., parameters, ==, null, ), {, return, null, ;, }, return, MathArrays, ., copyOf, (]
[MathArrays, ., copyOf, (, parameters, ), ;, }, public, double, getStdErrorOfEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (]
[MathArrays, ., copyOf, (, parameters, ), ;, }, public, double, getStdErrorOfEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (]
[copyOf, (, parameters, ), ;, }, public, double, getStdErrorOfEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==]
[;, }, public, double, getStdErrorOfEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return]
[;, }, public, double, getStdErrorOfEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return]
[index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (]
[index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (]
[index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (]
[throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <]
[{, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||]
[{, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||]
[(, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||, index, >=]
[(, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||, index, >=]
[(, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||, index, >=]
[., NaN, ;, }, if, (, index, <, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw]
[}, if, (, index, <, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (]
[(, index, <, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,]
[<, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,]
[<, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,]
[<, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,]
[<, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,]
[., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -]
[new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, double, var, =]
[new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, double, var, =]
[,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, double, var, =, this, ., getVcvElement, (]
[,, this, ., parameters, ., length, -, 1, ), ;, }, double, var, =, this, ., getVcvElement, (, index, ,]
[length, -, 1, ), ;, }, double, var, =, this, ., getVcvElement, (, index, ,, index, ), ;, if, (]
[length, -, 1, ), ;, }, double, var, =, this, ., getVcvElement, (, index, ,, index, ), ;, if, (]
[-, 1, ), ;, }, double, var, =, this, ., getVcvElement, (, index, ,, index, ), ;, if, (, !]
[-, 1, ), ;, }, double, var, =, this, ., getVcvElement, (, index, ,, index, ), ;, if, (, !]
[}, double, var, =, this, ., getVcvElement, (, index, ,, index, ), ;, if, (, !, Double, ., isNaN, (]
[=, this, ., getVcvElement, (, index, ,, index, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&]
[=, this, ., getVcvElement, (, index, ,, index, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&]
[., getVcvElement, (, index, ,, index, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >]
[., getVcvElement, (, index, ,, index, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >]
[), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {, return]
[), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {, return]
[!, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {, return, FastMath, ., sqrt, (]
[var, ), &&, var, >, Double, ., MIN_VALUE, ), {, return, FastMath, ., sqrt, (, var, ), ;, }, return]
[var, ), &&, var, >, Double, ., MIN_VALUE, ), {, return, FastMath, ., sqrt, (, var, ), ;, }, return]
[var, ), ;, }, return, Double, ., NaN, ;, }, public, double, [, ], getStdErrorOfEstimates, (, ), {, if, (]
[var, ), ;, }, return, Double, ., NaN, ;, }, public, double, [, ], getStdErrorOfEstimates, (, ), {, if, (]
[;, }, return, Double, ., NaN, ;, }, public, double, [, ], getStdErrorOfEstimates, (, ), {, if, (, parameters, ==]
[., NaN, ;, }, public, double, [, ], getStdErrorOfEstimates, (, ), {, if, (, parameters, ==, null, ), {, return]
[getStdErrorOfEstimates, (, ), {, if, (, parameters, ==, null, ), {, return, null, ;, }, double, [, ], se, =]
[{, if, (, parameters, ==, null, ), {, return, null, ;, }, double, [, ], se, =, new, double, []
[{, if, (, parameters, ==, null, ), {, return, null, ;, }, double, [, ], se, =, new, double, []
[{, if, (, parameters, ==, null, ), {, return, null, ;, }, double, [, ], se, =, new, double, []
[double, [, ], se, =, new, double, [, this, ., parameters, ., length, ], ;, for, (, int, i, =]
[], se, =, new, double, [, this, ., parameters, ., length, ], ;, for, (, int, i, =, 0, ;]
[], se, =, new, double, [, this, ., parameters, ., length, ], ;, for, (, int, i, =, 0, ;]
[=, new, double, [, this, ., parameters, ., length, ], ;, for, (, int, i, =, 0, ;, i, <]
[=, new, double, [, this, ., parameters, ., length, ], ;, for, (, int, i, =, 0, ;, i, <]
[=, new, double, [, this, ., parameters, ., length, ], ;, for, (, int, i, =, 0, ;, i, <]
[parameters, ., length, ], ;, for, (, int, i, =, 0, ;, i, <, this, ., parameters, ., length, ;]
[parameters, ., length, ], ;, for, (, int, i, =, 0, ;, i, <, this, ., parameters, ., length, ;]
[int, i, =, 0, ;, i, <, this, ., parameters, ., length, ;, i, ++, ), {, double, var, =]
[int, i, =, 0, ;, i, <, this, ., parameters, ., length, ;, i, ++, ), {, double, var, =]
[;, i, <, this, ., parameters, ., length, ;, i, ++, ), {, double, var, =, this, ., getVcvElement, (]
[<, this, ., parameters, ., length, ;, i, ++, ), {, double, var, =, this, ., getVcvElement, (, i, ,]
[length, ;, i, ++, ), {, double, var, =, this, ., getVcvElement, (, i, ,, i, ), ;, if, (]
[length, ;, i, ++, ), {, double, var, =, this, ., getVcvElement, (, i, ,, i, ), ;, if, (]
[;, i, ++, ), {, double, var, =, this, ., getVcvElement, (, i, ,, i, ), ;, if, (, !]
[;, i, ++, ), {, double, var, =, this, ., getVcvElement, (, i, ,, i, ), ;, if, (, !]
[{, double, var, =, this, ., getVcvElement, (, i, ,, i, ), ;, if, (, !, Double, ., isNaN, (]
[=, this, ., getVcvElement, (, i, ,, i, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&]
[=, this, ., getVcvElement, (, i, ,, i, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&]
[., getVcvElement, (, i, ,, i, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >]
[., getVcvElement, (, i, ,, i, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >]
[i, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {]
[i, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {]
[;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {, se, []
[!, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {, se, [, i, ], =]
[!, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {, se, [, i, ], =]
[(, var, ), &&, var, >, Double, ., MIN_VALUE, ), {, se, [, i, ], =, FastMath, ., sqrt, (]
[Double, ., MIN_VALUE, ), {, se, [, i, ], =, FastMath, ., sqrt, (, var, ), ;, continue, ;, }]
[Double, ., MIN_VALUE, ), {, se, [, i, ], =, FastMath, ., sqrt, (, var, ), ;, continue, ;, }]
[MIN_VALUE, ), {, se, [, i, ], =, FastMath, ., sqrt, (, var, ), ;, continue, ;, }, se, []
[se, [, i, ], =, FastMath, ., sqrt, (, var, ), ;, continue, ;, }, se, [, i, ], =]
[se, [, i, ], =, FastMath, ., sqrt, (, var, ), ;, continue, ;, }, se, [, i, ], =]
[., sqrt, (, var, ), ;, continue, ;, }, se, [, i, ], =, Double, ., NaN, ;, }, return]
[}, return, se, ;, }, public, double, getCovarianceOfParameters, (, int, i, ,, int, j, ), throws, OutOfRangeException, {, if, (]
[}, return, se, ;, }, public, double, getCovarianceOfParameters, (, int, i, ,, int, j, ), throws, OutOfRangeException, {, if, (]
[se, ;, }, public, double, getCovarianceOfParameters, (, int, i, ,, int, j, ), throws, OutOfRangeException, {, if, (, parameters, ==]
[double, getCovarianceOfParameters, (, int, i, ,, int, j, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return]
[double, getCovarianceOfParameters, (, int, i, ,, int, j, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return]
[j, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (]
[j, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (]
[j, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (]
[throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, i, <]
[{, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, i, <, 0, ||]
[{, if, (, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, i, <, 0, ||]
[(, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, i, <, 0, ||, i, >=]
[(, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, i, <, 0, ||, i, >=]
[(, parameters, ==, null, ), {, return, Double, ., NaN, ;, }, if, (, i, <, 0, ||, i, >=]
[., NaN, ;, }, if, (, i, <, 0, ||, i, >=, this, ., parameters, ., length, ), {, throw]
[}, if, (, i, <, 0, ||, i, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (]
[(, i, <, 0, ||, i, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, i, ,]
[<, 0, ||, i, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, i, ,, 0, ,]
[<, 0, ||, i, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, i, ,, 0, ,]
[<, 0, ||, i, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, i, ,, 0, ,]
[<, 0, ||, i, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, i, ,, 0, ,]
[., parameters, ., length, ), {, throw, new, OutOfRangeException, (, i, ,, 0, ,, this, ., parameters, ., length, -]
[throw, new, OutOfRangeException, (, i, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, if, (]
[throw, new, OutOfRangeException, (, i, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, if, (]
[throw, new, OutOfRangeException, (, i, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, if, (]
[OutOfRangeException, (, i, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, if, (, j, <]
[i, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, if, (, j, <, 0, ||]
[i, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, if, (, j, <, 0, ||]
[0, ,, this, ., parameters, ., length, -, 1, ), ;, }, if, (, j, <, 0, ||, j, >=]
[0, ,, this, ., parameters, ., length, -, 1, ), ;, }, if, (, j, <, 0, ||, j, >=]
[0, ,, this, ., parameters, ., length, -, 1, ), ;, }, if, (, j, <, 0, ||, j, >=]
[1, ), ;, }, if, (, j, <, 0, ||, j, >=, this, ., parameters, ., length, ), {, throw]
[}, if, (, j, <, 0, ||, j, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (]
[(, j, <, 0, ||, j, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, j, ,]
[<, 0, ||, j, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, j, ,, 0, ,]
[<, 0, ||, j, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, j, ,, 0, ,]
[<, 0, ||, j, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, j, ,, 0, ,]
[<, 0, ||, j, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, j, ,, 0, ,]
[., parameters, ., length, ), {, throw, new, OutOfRangeException, (, j, ,, 0, ,, this, ., parameters, ., length, -]
[{, throw, new, OutOfRangeException, (, j, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, return]
[{, throw, new, OutOfRangeException, (, j, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, return]
[(, j, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, return, this, ., getVcvElement, (]
[,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, return, this, ., getVcvElement, (, i, ,]
[}, return, this, ., getVcvElement, (, i, ,, j, ), ;, }, public, int, getNumberOfParameters, (, ), {, if, (]
[}, return, this, ., getVcvElement, (, i, ,, j, ), ;, }, public, int, getNumberOfParameters, (, ), {, if, (]
[}, return, this, ., getVcvElement, (, i, ,, j, ), ;, }, public, int, getNumberOfParameters, (, ), {, if, (]
[getVcvElement, (, i, ,, j, ), ;, }, public, int, getNumberOfParameters, (, ), {, if, (, this, ., parameters, ==]
[j, ), ;, }, public, int, getNumberOfParameters, (, ), {, if, (, this, ., parameters, ==, null, ), {, return]
[), ;, }, public, int, getNumberOfParameters, (, ), {, if, (, this, ., parameters, ==, null, ), {, return, -]
[int, getNumberOfParameters, (, ), {, if, (, this, ., parameters, ==, null, ), {, return, -, 1, ;, }, return]
[int, getNumberOfParameters, (, ), {, if, (, this, ., parameters, ==, null, ), {, return, -, 1, ;, }, return]
[int, getNumberOfParameters, (, ), {, if, (, this, ., parameters, ==, null, ), {, return, -, 1, ;, }, return]
[return, -, 1, ;, }, return, this, ., parameters, ., length, ;, }, public, long, getN, (, ), {, return]
[return, -, 1, ;, }, return, this, ., parameters, ., length, ;, }, public, long, getN, (, ), {, return]
[}, public, long, getN, (, ), {, return, this, ., nobs, ;, }, public, double, getTotalSumSquares, (, ), {, return]
[}, public, long, getN, (, ), {, return, this, ., nobs, ;, }, public, double, getTotalSumSquares, (, ), {, return]
[}, public, long, getN, (, ), {, return, this, ., nobs, ;, }, public, double, getTotalSumSquares, (, ), {, return]
[(, ), {, return, this, ., nobs, ;, }, public, double, getTotalSumSquares, (, ), {, return, this, ., globalFitInfo, []
[getTotalSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ], ;, }, public, double, getRegressionSumSquares, (, ), {, return]
[getTotalSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ], ;, }, public, double, getRegressionSumSquares, (, ), {, return]
[getTotalSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ], ;, }, public, double, getRegressionSumSquares, (, ), {, return]
[getTotalSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ], ;, }, public, double, getRegressionSumSquares, (, ), {, return]
[return, this, ., globalFitInfo, [, SST_IDX, ], ;, }, public, double, getRegressionSumSquares, (, ), {, return, this, ., globalFitInfo, []
[globalFitInfo, [, SST_IDX, ], ;, }, public, double, getRegressionSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ], -]
[globalFitInfo, [, SST_IDX, ], ;, }, public, double, getRegressionSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ], -]
[globalFitInfo, [, SST_IDX, ], ;, }, public, double, getRegressionSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ], -]
[;, }, public, double, getRegressionSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ], -, this, ., globalFitInfo, []
[globalFitInfo, [, SST_IDX, ], -, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getErrorSumSquares, (, ), {, return]
[globalFitInfo, [, SST_IDX, ], -, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getErrorSumSquares, (, ), {, return]
[globalFitInfo, [, SST_IDX, ], -, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getErrorSumSquares, (, ), {, return]
[-, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getErrorSumSquares, (, ), {, return, this, ., globalFitInfo, []
[getErrorSumSquares, (, ), {, return, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getMeanSquareError, (, ), {, return]
[getErrorSumSquares, (, ), {, return, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getMeanSquareError, (, ), {, return]
[getErrorSumSquares, (, ), {, return, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getMeanSquareError, (, ), {, return]
[return, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getMeanSquareError, (, ), {, return, this, ., globalFitInfo, []
[getMeanSquareError, (, ), {, return, this, ., globalFitInfo, [, MSE_IDX, ], ;, }, public, double, getRSquared, (, ), {, return]
[getMeanSquareError, (, ), {, return, this, ., globalFitInfo, [, MSE_IDX, ], ;, }, public, double, getRSquared, (, ), {, return]
[getMeanSquareError, (, ), {, return, this, ., globalFitInfo, [, MSE_IDX, ], ;, }, public, double, getRSquared, (, ), {, return]
[return, this, ., globalFitInfo, [, MSE_IDX, ], ;, }, public, double, getRSquared, (, ), {, return, this, ., globalFitInfo, []
[getRSquared, (, ), {, return, this, ., globalFitInfo, [, RSQ_IDX, ], ;, }, public, double, getAdjustedRSquared, (, ), {, return]
[getRSquared, (, ), {, return, this, ., globalFitInfo, [, RSQ_IDX, ], ;, }, public, double, getAdjustedRSquared, (, ), {, return]
[getRSquared, (, ), {, return, this, ., globalFitInfo, [, RSQ_IDX, ], ;, }, public, double, getAdjustedRSquared, (, ), {, return]
[return, this, ., globalFitInfo, [, RSQ_IDX, ], ;, }, public, double, getAdjustedRSquared, (, ), {, return, this, ., globalFitInfo, []
[getAdjustedRSquared, (, ), {, return, this, ., globalFitInfo, [, ADJRSQ_IDX, ], ;, }, public, boolean, hasIntercept, (, ), {, return]
[getAdjustedRSquared, (, ), {, return, this, ., globalFitInfo, [, ADJRSQ_IDX, ], ;, }, public, boolean, hasIntercept, (, ), {, return]
[{, return, this, ., containsConstant, ;, }, private, double, getVcvElement, (, int, i, ,, int, j, ), {, if, (]
[{, return, this, ., containsConstant, ;, }, private, double, getVcvElement, (, int, i, ,, int, j, ), {, if, (]
[private, double, getVcvElement, (, int, i, ,, int, j, ), {, if, (, this, ., isSymmetricVCD, ), {, if, (]
[private, double, getVcvElement, (, int, i, ,, int, j, ), {, if, (, this, ., isSymmetricVCD, ), {, if, (]
[private, double, getVcvElement, (, int, i, ,, int, j, ), {, if, (, this, ., isSymmetricVCD, ), {, if, (]
[private, double, getVcvElement, (, int, i, ,, int, j, ), {, if, (, this, ., isSymmetricVCD, ), {, if, (]
[,, int, j, ), {, if, (, this, ., isSymmetricVCD, ), {, if, (, this, ., varCovData, ., length, >]
[if, (, this, ., isSymmetricVCD, ), {, if, (, this, ., varCovData, ., length, >, 1, ), {, if, (]
[if, (, this, ., isSymmetricVCD, ), {, if, (, this, ., varCovData, ., length, >, 1, ), {, if, (]
[this, ., isSymmetricVCD, ), {, if, (, this, ., varCovData, ., length, >, 1, ), {, if, (, i, ==]
[{, if, (, this, ., varCovData, ., length, >, 1, ), {, if, (, i, ==, j, ), {, return]
[{, if, (, this, ., varCovData, ., length, >, 1, ), {, if, (, i, ==, j, ), {, return]
[{, if, (, this, ., varCovData, ., length, >, 1, ), {, if, (, i, ==, j, ), {, return]
[(, this, ., varCovData, ., length, >, 1, ), {, if, (, i, ==, j, ), {, return, varCovData, []
[varCovData, ., length, >, 1, ), {, if, (, i, ==, j, ), {, return, varCovData, [, i, ], []
[if, (, i, ==, j, ), {, return, varCovData, [, i, ], [, i, ], ;, }, else, if, (]
[if, (, i, ==, j, ), {, return, varCovData, [, i, ], [, i, ], ;, }, else, if, (]
[i, ==, j, ), {, return, varCovData, [, i, ], [, i, ], ;, }, else, if, (, i, >=]
[i, ==, j, ), {, return, varCovData, [, i, ], [, i, ], ;, }, else, if, (, i, >=]
[i, ==, j, ), {, return, varCovData, [, i, ], [, i, ], ;, }, else, if, (, i, >=]
[j, ), {, return, varCovData, [, i, ], [, i, ], ;, }, else, if, (, i, >=, varCovData, []
[], [, i, ], ;, }, else, if, (, i, >=, varCovData, [, j, ], ., length, ), {, return]
[], [, i, ], ;, }, else, if, (, i, >=, varCovData, [, j, ], ., length, ), {, return]
[], [, i, ], ;, }, else, if, (, i, >=, varCovData, [, j, ], ., length, ), {, return]
[i, ], ;, }, else, if, (, i, >=, varCovData, [, j, ], ., length, ), {, return, varCovData, []
[}, else, if, (, i, >=, varCovData, [, j, ], ., length, ), {, return, varCovData, [, i, ], []
[[, j, ], ., length, ), {, return, varCovData, [, i, ], [, j, ], ;, }, else, {, return]
[[, j, ], ., length, ), {, return, varCovData, [, i, ], [, j, ], ;, }, else, {, return]
[[, j, ], ., length, ), {, return, varCovData, [, i, ], [, j, ], ;, }, else, {, return]
[], ., length, ), {, return, varCovData, [, i, ], [, j, ], ;, }, else, {, return, varCovData, []
[), {, return, varCovData, [, i, ], [, j, ], ;, }, else, {, return, varCovData, [, j, ], []
[], ;, }, else, {, return, varCovData, [, j, ], [, i, ], ;, }, }, else, {, if, (]
[], ;, }, else, {, return, varCovData, [, j, ], [, i, ], ;, }, }, else, {, if, (]
[}, else, {, return, varCovData, [, j, ], [, i, ], ;, }, }, else, {, if, (, i, >]
[varCovData, [, j, ], [, i, ], ;, }, }, else, {, if, (, i, >, j, ), {, return]
[varCovData, [, j, ], [, i, ], ;, }, }, else, {, if, (, i, >, j, ), {, return]
[varCovData, [, j, ], [, i, ], ;, }, }, else, {, if, (, i, >, j, ), {, return]
[j, ], [, i, ], ;, }, }, else, {, if, (, i, >, j, ), {, return, varCovData, []
[i, ], ;, }, }, else, {, if, (, i, >, j, ), {, return, varCovData, [, 0, ], []
[i, ], ;, }, }, else, {, if, (, i, >, j, ), {, return, varCovData, [, 0, ], []
[i, ], ;, }, }, else, {, if, (, i, >, j, ), {, return, varCovData, [, 0, ], []
[i, ], ;, }, }, else, {, if, (, i, >, j, ), {, return, varCovData, [, 0, ], []
[], ;, }, }, else, {, if, (, i, >, j, ), {, return, varCovData, [, 0, ], [, (]
[], ;, }, }, else, {, if, (, i, >, j, ), {, return, varCovData, [, 0, ], [, (]
[}, }, else, {, if, (, i, >, j, ), {, return, varCovData, [, 0, ], [, (, i, +]
[{, if, (, i, >, j, ), {, return, varCovData, [, 0, ], [, (, i, +, 1, ), *]
[(, i, >, j, ), {, return, varCovData, [, 0, ], [, (, i, +, 1, ), *, i, /]
[>, j, ), {, return, varCovData, [, 0, ], [, (, i, +, 1, ), *, i, /, 2, +]
[0, ], [, (, i, +, 1, ), *, i, /, 2, +, j, ], ;, }, else, {, return]
[0, ], [, (, i, +, 1, ), *, i, /, 2, +, j, ], ;, }, else, {, return]
[0, ], [, (, i, +, 1, ), *, i, /, 2, +, j, ], ;, }, else, {, return]
[[, (, i, +, 1, ), *, i, /, 2, +, j, ], ;, }, else, {, return, varCovData, []
[+, 1, ), *, i, /, 2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], []
[+, 1, ), *, i, /, 2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], []
[+, 1, ), *, i, /, 2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], []
[+, 1, ), *, i, /, 2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], []
[1, ), *, i, /, 2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], [, (]
[1, ), *, i, /, 2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], [, (]
[*, i, /, 2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], [, (, j, +]
[2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], [, (, j, +, 1, ), *]
[j, ], ;, }, else, {, return, varCovData, [, 0, ], [, (, j, +, 1, ), *, j, /]
[;, }, else, {, return, varCovData, [, 0, ], [, (, j, +, 1, ), *, j, /, 2, +]
[[, (, j, +, 1, ), *, j, /, 2, +, i, ], ;, }, }, }, else, {, return]
[[, (, j, +, 1, ), *, j, /, 2, +, i, ], ;, }, }, }, else, {, return]
[[, (, j, +, 1, ), *, j, /, 2, +, i, ], ;, }, }, }, else, {, return]
[[, (, j, +, 1, ), *, j, /, 2, +, i, ], ;, }, }, }, else, {, return]
[1, ), *, j, /, 2, +, i, ], ;, }, }, }, else, {, return, this, ., varCovData, []
[j, /, 2, +, i, ], ;, }, }, }, else, {, return, this, ., varCovData, [, i, ], []
