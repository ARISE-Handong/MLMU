[;, private, static, final, int, N, =, 624, ;, private, static, final, int, M, =, 397, ;, private, static, final]
[;, private, static, final, int, M, =, 397, ;, private, static, final, int, [, ], MAG01, =, {, 0x0, ,]
[;, private, static, final, int, [, ], MAG01, =, {, 0x0, ,, 0x9908b0df, }, ;, private, int, [, ], mt]
[;, private, int, [, ], mt, ;, private, int, mti, ;, public, MersenneTwister, (, ), {, mt, =, new, int]
[,, 0x9908b0df, }, ;, private, int, [, ], mt, ;, private, int, mti, ;, public, MersenneTwister, (, ), {, mt]
[}, ;, private, int, [, ], mt, ;, private, int, mti, ;, public, MersenneTwister, (, ), {, mt, =, new]
[=, new, int, [, N, ], ;, setSeed, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this]
[;, setSeed, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), ), ;, }, public, MersenneTwister]
[], ;, setSeed, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), ), ;, }, public]
[;, }, public, MersenneTwister, (, int, seed, ), {, mt, =, new, int, [, N, ], ;, setSeed, (, seed]
[), ;, }, public, MersenneTwister, (, int, seed, ), {, mt, =, new, int, [, N, ], ;, setSeed, (]
[+, System, ., identityHashCode, (, this, ), ), ;, }, public, MersenneTwister, (, int, seed, ), {, mt, =, new]
[., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), ), ;, }, public, MersenneTwister, (, int, seed, )]
[), ;, }, public, MersenneTwister, (, int, seed, ), {, mt, =, new, int, [, N, ], ;, setSeed, (]
[., identityHashCode, (, this, ), ), ;, }, public, MersenneTwister, (, int, seed, ), {, mt, =, new, int, []
[), ), ;, }, public, MersenneTwister, (, int, seed, ), {, mt, =, new, int, [, N, ], ;, setSeed]
[=, new, int, [, N, ], ;, setSeed, (, seed, ), ;, }, public, MersenneTwister, (, int, [, ], seed]
[;, setSeed, (, seed, ), ;, }, public, MersenneTwister, (, int, [, ], seed, ), {, mt, =, new, int]
[], ;, setSeed, (, seed, ), ;, }, public, MersenneTwister, (, int, [, ], seed, ), {, mt, =, new]
[;, }, public, MersenneTwister, (, int, [, ], seed, ), {, mt, =, new, int, [, N, ], ;, setSeed]
[), ;, }, public, MersenneTwister, (, int, [, ], seed, ), {, mt, =, new, int, [, N, ], ;]
[=, new, int, [, N, ], ;, setSeed, (, seed, ), ;, }, public, MersenneTwister, (, long, seed, ), {]
[;, setSeed, (, seed, ), ;, }, public, MersenneTwister, (, long, seed, ), {, mt, =, new, int, [, N]
[], ;, setSeed, (, seed, ), ;, }, public, MersenneTwister, (, long, seed, ), {, mt, =, new, int, []
[;, }, public, MersenneTwister, (, long, seed, ), {, mt, =, new, int, [, N, ], ;, setSeed, (, seed]
[), ;, }, public, MersenneTwister, (, long, seed, ), {, mt, =, new, int, [, N, ], ;, setSeed, (]
[=, new, int, [, N, ], ;, setSeed, (, seed, ), ;, }, @, Override, public, void, setSeed, (, int]
[;, setSeed, (, seed, ), ;, }, @, Override, public, void, setSeed, (, int, seed, ), {, long, longMT, =]
[], ;, setSeed, (, seed, ), ;, }, @, Override, public, void, setSeed, (, int, seed, ), {, long, longMT]
[;, }, @, Override, public, void, setSeed, (, int, seed, ), {, long, longMT, =, seed, ;, mt, [, 0]
[), ;, }, @, Override, public, void, setSeed, (, int, seed, ), {, long, longMT, =, seed, ;, mt, []
[;, mt, [, 0, ], =, (, int, ), longMT, ;, for, (, mti, =, 1, ;, mti, <, N]
[=, (, int, ), longMT, ;, for, (, mti, =, 1, ;, mti, <, N, ;, ++, mti, ), {]
[[, 0, ], =, (, int, ), longMT, ;, for, (, mti, =, 1, ;, mti, <, N, ;, ++]
[], =, (, int, ), longMT, ;, for, (, mti, =, 1, ;, mti, <, N, ;, ++, mti, )]
[;, for, (, mti, =, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =, (, 1812433253l, *]
[;, for, (, mti, =, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =, (, 1812433253l, *]
[=, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =, (, 1812433253l, *, (, longMT, ^, (]
[;, mti, <, N, ;, ++, mti, ), {, longMT, =, (, 1812433253l, *, (, longMT, ^, (, longMT, >]
[;, ++, mti, ), {, longMT, =, (, 1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), )]
[<, N, ;, ++, mti, ), {, longMT, =, (, 1812433253l, *, (, longMT, ^, (, longMT, >, >, 30]
[;, ++, mti, ), {, longMT, =, (, 1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), )]
[), {, longMT, =, (, 1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), ), +, mti, )]
[), {, longMT, =, (, 1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), ), +, mti, )]
[=, (, 1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), ), +, mti, ), &, 0xffffffffL, ;]
[;, mt, [, mti, ], =, (, int, ), longMT, ;, }, clear, (, ), ;, }, @, Override, public]
[&, 0xffffffffL, ;, mt, [, mti, ], =, (, int, ), longMT, ;, }, clear, (, ), ;, }, @]
[), &, 0xffffffffL, ;, mt, [, mti, ], =, (, int, ), longMT, ;, }, clear, (, ), ;, }]
[+, mti, ), &, 0xffffffffL, ;, mt, [, mti, ], =, (, int, ), longMT, ;, }, clear, (, )]
[*, (, longMT, ^, (, longMT, >, >, 30, ), ), +, mti, ), &, 0xffffffffL, ;, mt, [, mti]
[+, mti, ), &, 0xffffffffL, ;, mt, [, mti, ], =, (, int, ), longMT, ;, }, clear, (, )]
[), +, mti, ), &, 0xffffffffL, ;, mt, [, mti, ], =, (, int, ), longMT, ;, }, clear, (]
[^, (, longMT, >, >, 30, ), ), +, mti, ), &, 0xffffffffL, ;, mt, [, mti, ], =, (]
[), +, mti, ), &, 0xffffffffL, ;, mt, [, mti, ], =, (, int, ), longMT, ;, }, clear, (]
[), ), +, mti, ), &, 0xffffffffL, ;, mt, [, mti, ], =, (, int, ), longMT, ;, }, clear]
[>, >, 30, ), ), +, mti, ), &, 0xffffffffL, ;, mt, [, mti, ], =, (, int, ), longMT]
[), ), +, mti, ), &, 0xffffffffL, ;, mt, [, mti, ], =, (, int, ), longMT, ;, }, clear]
[), &, 0xffffffffL, ;, mt, [, mti, ], =, (, int, ), longMT, ;, }, clear, (, ), ;, }]
[;, mt, [, mti, ], =, (, int, ), longMT, ;, }, clear, (, ), ;, }, @, Override, public]
[=, (, int, ), longMT, ;, }, clear, (, ), ;, }, @, Override, public, void, setSeed, (, int, []
[[, mti, ], =, (, int, ), longMT, ;, }, clear, (, ), ;, }, @, Override, public, void, setSeed]
[], =, (, int, ), longMT, ;, }, clear, (, ), ;, }, @, Override, public, void, setSeed, (, int]
[;, }, clear, (, ), ;, }, @, Override, public, void, setSeed, (, int, [, ], seed, ), {, if]
[;, }, clear, (, ), ;, }, @, Override, public, void, setSeed, (, int, [, ], seed, ), {, if]
[;, }, @, Override, public, void, setSeed, (, int, [, ], seed, ), {, if, (, seed, ==, null, )]
[), {, setSeed, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), ), ;, return, ;]
[==, null, ), {, setSeed, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), ), ;]
[), {, setSeed, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), ), ;, return, ;]
[;, return, ;, }, setSeed, (, 19650218, ), ;, int, i, =, 1, ;, int, j, =, 0, ;, for]
[), ;, return, ;, }, setSeed, (, 19650218, ), ;, int, i, =, 1, ;, int, j, =, 0, ;]
[+, System, ., identityHashCode, (, this, ), ), ;, return, ;, }, setSeed, (, 19650218, ), ;, int, i, =]
[., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), ), ;, return, ;, }, setSeed, (, 19650218, )]
[), ;, return, ;, }, setSeed, (, 19650218, ), ;, int, i, =, 1, ;, int, j, =, 0, ;]
[., identityHashCode, (, this, ), ), ;, return, ;, }, setSeed, (, 19650218, ), ;, int, i, =, 1, ;]
[), ), ;, return, ;, }, setSeed, (, 19650218, ), ;, int, i, =, 1, ;, int, j, =, 0]
[;, int, i, =, 1, ;, int, j, =, 0, ;, for, (, int, k, =, FastMath, ., max, (]
[), ;, int, i, =, 1, ;, int, j, =, 0, ;, for, (, int, k, =, FastMath, ., max]
[;, int, j, =, 0, ;, for, (, int, k, =, FastMath, ., max, (, N, ,, seed, ., length]
[;, for, (, int, k, =, FastMath, ., max, (, N, ,, seed, ., length, ), ;, k, !=, 0]
[;, k, !=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, )]
[., max, (, N, ,, seed, ., length, ), ;, k, !=, 0, ;, k, --, ), {, long, l0]
[,, seed, ., length, ), ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (, mt, []
[), ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl]
[., length, ), ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ]]
[;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt]
[!=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (]
[;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt]
[), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, ]]
[--, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i]
[;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i]
[|, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (]
[), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =]
[&, 0x7fffffffl, ), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long]
[[, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l]
[], &, 0x7fffffffl, ), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;]
[), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =]
[;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i]
[), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, []
[?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |]
[), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, )]
[<, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &]
[[, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -]
[], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ]]
[), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, )]
[:, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (]
[), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, []
[;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1664525l]
[|, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l]
[), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long]
[&, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, )]
[[, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, )]
[], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l]
[-, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l]
[], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l]
[), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long]
[;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1664525l]
[), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *]
[?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >]
[), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >]
[<, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (]
[[, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^]
[], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^]
[-, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (]
[], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^]
[), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >]
[:, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, )]
[), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *]
[;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffl, ), ;, i, ++, ;, j, ++]
[+, j, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffl, ), ;, i, ++, ;]
[+, seed, [, j, ], +, j, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffl]
[), +, seed, [, j, ], +, j, ;, mt, [, i, ], =, (, int, ), (, l, &]
[^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1664525l, ), ), +, seed, [, j]
[), +, seed, [, j, ], +, j, ;, mt, [, i, ], =, (, int, ), (, l, &]
[), ), +, seed, [, j, ], +, j, ;, mt, [, i, ], =, (, int, ), (, l]
[*, 1664525l, ), ), +, seed, [, j, ], +, j, ;, mt, [, i, ], =, (, int, )]
[), *, 1664525l, ), ), +, seed, [, j, ], +, j, ;, mt, [, i, ], =, (, int]
[^, (, l1, >, >, 30, ), ), *, 1664525l, ), ), +, seed, [, j, ], +, j, ;]
[), *, 1664525l, ), ), +, seed, [, j, ], +, j, ;, mt, [, i, ], =, (, int]
[), ), *, 1664525l, ), ), +, seed, [, j, ], +, j, ;, mt, [, i, ], =, (]
[>, >, 30, ), ), *, 1664525l, ), ), +, seed, [, j, ], +, j, ;, mt, [, i]
[), ), *, 1664525l, ), ), +, seed, [, j, ], +, j, ;, mt, [, i, ], =, (]
[), ), +, seed, [, j, ], +, j, ;, mt, [, i, ], =, (, int, ), (, l]
[+, j, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffl, ), ;, i, ++, ;]
[[, j, ], +, j, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffl, ), ;]
[], +, j, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffl, ), ;, i, ++]
[;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffl, ), ;, i, ++, ;, j, ++]
[=, (, int, ), (, l, &, 0xffffffffl, ), ;, i, ++, ;, j, ++, ;, if, (, i, >=]
[[, i, ], =, (, int, ), (, l, &, 0xffffffffl, ), ;, i, ++, ;, j, ++, ;, if]
[], =, (, int, ), (, l, &, 0xffffffffl, ), ;, i, ++, ;, j, ++, ;, if, (, i]
[;, i, ++, ;, j, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt]
[;, i, ++, ;, j, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt]
[), ;, i, ++, ;, j, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =]
[&, 0xffffffffl, ), ;, i, ++, ;, j, ++, ;, if, (, i, >=, N, ), {, mt, [, 0]
[), ;, i, ++, ;, j, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =]
[;, j, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N, -]
[++, ;, j, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N]
[;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;]
[++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N, -, 1, ]]
[), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, if]
[>=, N, ), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;]
[), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, if]
[=, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, if, (, j, >=, seed, ., length]
[[, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, if, (, j, >=]
[], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, if, (, j, >=, seed, .]
[;, i, =, 1, ;, }, if, (, j, >=, seed, ., length, ), {, j, =, 0, ;, }]
[[, N, -, 1, ], ;, i, =, 1, ;, }, if, (, j, >=, seed, ., length, ), {]
[], ;, i, =, 1, ;, }, if, (, j, >=, seed, ., length, ), {, j, =, 0, ;]
[-, 1, ], ;, i, =, 1, ;, }, if, (, j, >=, seed, ., length, ), {, j, =]
[], ;, i, =, 1, ;, }, if, (, j, >=, seed, ., length, ), {, j, =, 0, ;]
[=, 1, ;, }, if, (, j, >=, seed, ., length, ), {, j, =, 0, ;, }, }, for]
[;, }, if, (, j, >=, seed, ., length, ), {, j, =, 0, ;, }, }, for, (, int]
[), {, j, =, 0, ;, }, }, for, (, int, k, =, N, -, 1, ;, k, !=, 0]
[>=, seed, ., length, ), {, j, =, 0, ;, }, }, for, (, int, k, =, N, -, 1]
[), {, j, =, 0, ;, }, }, for, (, int, k, =, N, -, 1, ;, k, !=, 0]
[., length, ), {, j, =, 0, ;, }, }, for, (, int, k, =, N, -, 1, ;, k]
[=, 0, ;, }, }, for, (, int, k, =, N, -, 1, ;, k, !=, 0, ;, k, --]
[;, }, }, for, (, int, k, =, N, -, 1, ;, k, !=, 0, ;, k, --, ), {]
[;, k, !=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, )]
[-, 1, ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &]
[;, k, !=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, )]
[;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt]
[!=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (]
[;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt]
[), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, ]]
[--, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i]
[;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i]
[|, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (]
[), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =]
[&, 0x7fffffffl, ), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long]
[[, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l]
[], &, 0x7fffffffl, ), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;]
[), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =]
[;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i]
[), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, []
[?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |]
[), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, )]
[<, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &]
[[, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -]
[], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ]]
[), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, )]
[:, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (]
[), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, []
[;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1566083941l]
[|, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l]
[), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long]
[&, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, )]
[[, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, )]
[], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l]
[-, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l]
[], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l]
[), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long]
[;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1566083941l]
[), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *]
[?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >]
[), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >]
[<, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (]
[[, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^]
[], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^]
[-, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (]
[], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^]
[), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >]
[:, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, )]
[), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *]
[;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL, ), ;, i, ++, ;, if, (]
[-, i, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL, ), ;, i, ++, ;]
[), -, i, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL, ), ;, i, ++]
[^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1566083941l, ), ), -, i, ;, mt]
[), -, i, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL, ), ;, i, ++]
[), ), -, i, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL, ), ;, i]
[*, 1566083941l, ), ), -, i, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL, )]
[), *, 1566083941l, ), ), -, i, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL]
[^, (, l1, >, >, 30, ), ), *, 1566083941l, ), ), -, i, ;, mt, [, i, ], =]
[), *, 1566083941l, ), ), -, i, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL]
[), ), *, 1566083941l, ), ), -, i, ;, mt, [, i, ], =, (, int, ), (, l, &]
[>, >, 30, ), ), *, 1566083941l, ), ), -, i, ;, mt, [, i, ], =, (, int, )]
[), ), *, 1566083941l, ), ), -, i, ;, mt, [, i, ], =, (, int, ), (, l, &]
[), ), -, i, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL, ), ;, i]
[;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL, ), ;, i, ++, ;, if, (]
[=, (, int, ), (, l, &, 0xffffffffL, ), ;, i, ++, ;, if, (, i, >=, N, ), {]
[[, i, ], =, (, int, ), (, l, &, 0xffffffffL, ), ;, i, ++, ;, if, (, i, >=]
[], =, (, int, ), (, l, &, 0xffffffffL, ), ;, i, ++, ;, if, (, i, >=, N, )]
[;, i, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N, -]
[;, i, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N, -]
[), ;, i, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N]
[&, 0xffffffffL, ), ;, i, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt]
[), ;, i, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N]
[;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;]
[++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N, -, 1, ]]
[), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, }]
[>=, N, ), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;]
[), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, }]
[=, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, }, mt, [, 0, ], =, 0x80000000]
[[, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, }, mt, [, 0]
[], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, }, mt, [, 0, ], =]
[;, i, =, 1, ;, }, }, mt, [, 0, ], =, 0x80000000, ;, clear, (, ), ;, }, @]
[[, N, -, 1, ], ;, i, =, 1, ;, }, }, mt, [, 0, ], =, 0x80000000, ;, clear]
[], ;, i, =, 1, ;, }, }, mt, [, 0, ], =, 0x80000000, ;, clear, (, ), ;, }]
[-, 1, ], ;, i, =, 1, ;, }, }, mt, [, 0, ], =, 0x80000000, ;, clear, (, )]
[], ;, i, =, 1, ;, }, }, mt, [, 0, ], =, 0x80000000, ;, clear, (, ), ;, }]
[=, 1, ;, }, }, mt, [, 0, ], =, 0x80000000, ;, clear, (, ), ;, }, @, Override, public]
[;, }, }, mt, [, 0, ], =, 0x80000000, ;, clear, (, ), ;, }, @, Override, public, void, setSeed]
[=, 0x80000000, ;, clear, (, ), ;, }, @, Override, public, void, setSeed, (, long, seed, ), {, setSeed, (]
[[, 0, ], =, 0x80000000, ;, clear, (, ), ;, }, @, Override, public, void, setSeed, (, long, seed, )]
[], =, 0x80000000, ;, clear, (, ), ;, }, @, Override, public, void, setSeed, (, long, seed, ), {, setSeed]
[;, clear, (, ), ;, }, @, Override, public, void, setSeed, (, long, seed, ), {, setSeed, (, new, int]
[;, }, @, Override, public, void, setSeed, (, long, seed, ), {, setSeed, (, new, int, [, ], {, (]
[;, }, @, Override, protected, int, next, (, int, bits, ), {, int, y, ;, if, (, mti, >=, N]
[), ;, }, @, Override, protected, int, next, (, int, bits, ), {, int, y, ;, if, (, mti, >=]
[), ;, }, @, Override, protected, int, next, (, int, bits, ), {, int, y, ;, if, (, mti, >=]
[,, (, int, ), (, seed, &, 0xffffffffl, ), }, ), ;, }, @, Override, protected, int, next, (, int]
[,, (, int, ), (, seed, &, 0xffffffffl, ), }, ), ;, }, @, Override, protected, int, next, (, int]
[), ,, (, int, ), (, seed, &, 0xffffffffl, ), }, ), ;, }, @, Override, protected, int, next, (]
[>, >, >, 32, ), ,, (, int, ), (, seed, &, 0xffffffffl, ), }, ), ;, }, @, Override]
[), ,, (, int, ), (, seed, &, 0xffffffffl, ), }, ), ;, }, @, Override, protected, int, next, (]
[}, ), ;, }, @, Override, protected, int, next, (, int, bits, ), {, int, y, ;, if, (, mti]
[}, ), ;, }, @, Override, protected, int, next, (, int, bits, ), {, int, y, ;, if, (, mti]
[), }, ), ;, }, @, Override, protected, int, next, (, int, bits, ), {, int, y, ;, if, (]
[&, 0xffffffffl, ), }, ), ;, }, @, Override, protected, int, next, (, int, bits, ), {, int, y, ;]
[), }, ), ;, }, @, Override, protected, int, next, (, int, bits, ), {, int, y, ;, if, (]
[), {, int, mtNext, =, mt, [, 0, ], ;, for, (, int, k, =, 0, ;, k, <, N]
[>=, N, ), {, int, mtNext, =, mt, [, 0, ], ;, for, (, int, k, =, 0, ;, k]
[), {, int, mtNext, =, mt, [, 0, ], ;, for, (, int, k, =, 0, ;, k, <, N]
[;, for, (, int, k, =, 0, ;, k, <, N, -, M, ;, ++, k, ), {, int, mtCurr]
[[, 0, ], ;, for, (, int, k, =, 0, ;, k, <, N, -, M, ;, ++, k, )]
[], ;, for, (, int, k, =, 0, ;, k, <, N, -, M, ;, ++, k, ), {, int]
[;, k, <, N, -, M, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, []
[;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y]
[<, N, -, M, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +]
[;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y]
[-, M, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ]]
[;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y]
[), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr]
[), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr]
[;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext]
[=, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff]
[;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =]
[[, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;]
[], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ]]
[+, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, []
[], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ]]
[=, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, []
[;, mt, [, k, ], =, mt, [, k, +, M, ], ^, (, y, >, >, >, 1, )]
[|, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, M, ], ^, (]
[), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, M, ], ^]
[&, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, M]
[), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, M, ], ^]
[;, mt, [, k, ], =, mt, [, k, +, M, ], ^, (, y, >, >, >, 1, )]
[), ;, mt, [, k, ], =, mt, [, k, +, M, ], ^, (, y, >, >, >, 1]
[&, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, M, ], ^, (, y, >, >]
[), ;, mt, [, k, ], =, mt, [, k, +, M, ], ^, (, y, >, >, >, 1]
[=, mt, [, k, +, M, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &]
[[, k, ], =, mt, [, k, +, M, ], ^, (, y, >, >, >, 1, ), ^, MAG01]
[], =, mt, [, k, +, M, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y]
[;, }, for, (, int, k, =, N, -, M, ;, k, <, N, -, 1, ;, ++, k, )]
[^, MAG01, [, y, &, 0x1, ], ;, }, for, (, int, k, =, N, -, M, ;, k, <]
[^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, for, (, int]
[[, k, +, M, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ]]
[], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, for, (]
[+, M, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }]
[], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, for, (]
[^, MAG01, [, y, &, 0x1, ], ;, }, for, (, int, k, =, N, -, M, ;, k, <]
[), ^, MAG01, [, y, &, 0x1, ], ;, }, for, (, int, k, =, N, -, M, ;, k]
[>, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, for, (, int, k, =, N]
[), ^, MAG01, [, y, &, 0x1, ], ;, }, for, (, int, k, =, N, -, M, ;, k]
[;, }, for, (, int, k, =, N, -, M, ;, k, <, N, -, 1, ;, ++, k, )]
[[, y, &, 0x1, ], ;, }, for, (, int, k, =, N, -, M, ;, k, <, N, -]
[], ;, }, for, (, int, k, =, N, -, M, ;, k, <, N, -, 1, ;, ++, k]
[&, 0x1, ], ;, }, for, (, int, k, =, N, -, M, ;, k, <, N, -, 1, ;]
[], ;, }, for, (, int, k, =, N, -, M, ;, k, <, N, -, 1, ;, ++, k]
[;, k, <, N, -, 1, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, []
[-, M, ;, k, <, N, -, 1, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =]
[;, k, <, N, -, 1, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, []
[;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y]
[<, N, -, 1, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +]
[;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y]
[-, 1, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ]]
[;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y]
[), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr]
[), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr]
[;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext]
[=, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff]
[;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =]
[[, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;]
[], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ]]
[+, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, []
[], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ]]
[=, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, []
[;, mt, [, k, ], =, mt, [, k, +, (, M, -, N, ), ], ^, (, y, >]
[|, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, (, M, -, N]
[), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, (, M, -]
[&, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, (]
[), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, (, M, -]
[;, mt, [, k, ], =, mt, [, k, +, (, M, -, N, ), ], ^, (, y, >]
[), ;, mt, [, k, ], =, mt, [, k, +, (, M, -, N, ), ], ^, (, y]
[&, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, (, M, -, N, ), ], ^]
[), ;, mt, [, k, ], =, mt, [, k, +, (, M, -, N, ), ], ^, (, y]
[=, mt, [, k, +, (, M, -, N, ), ], ^, (, y, >, >, >, 1, ), ^]
[[, k, ], =, mt, [, k, +, (, M, -, N, ), ], ^, (, y, >, >, >]
[], =, mt, [, k, +, (, M, -, N, ), ], ^, (, y, >, >, >, 1, )]
[;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt]
[^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, []
[^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (]
[[, k, +, (, M, -, N, ), ], ^, (, y, >, >, >, 1, ), ^, MAG01, []
[], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =]
[+, (, M, -, N, ), ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &]
[], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =]
[), ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y]
[-, N, ), ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;]
[), ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y]
[^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, []
[), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt]
[>, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (, mtNext, &, 0x80000000]
[), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt]
[;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt]
[[, y, &, 0x1, ], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ]]
[], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;]
[&, 0x1, ], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff]
[], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;]
[=, (, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -]
[;, mt, [, N, -, 1, ], =, mt, [, M, -, 1, ], ^, (, y, >, >, >]
[|, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =, mt, [, M]
[), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =, mt, []
[&, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =]
[), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =, mt, []
[;, mt, [, N, -, 1, ], =, mt, [, M, -, 1, ], ^, (, y, >, >, >]
[), ;, mt, [, N, -, 1, ], =, mt, [, M, -, 1, ], ^, (, y, >, >]
[&, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =, mt, [, M, -, 1, ], ^, (, y]
[[, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =, mt, [, M, -, 1, ]]
[], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =, mt, [, M, -, 1, ], ^, (]
[), ;, mt, [, N, -, 1, ], =, mt, [, M, -, 1, ], ^, (, y, >, >]
[=, mt, [, M, -, 1, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &]
[[, N, -, 1, ], =, mt, [, M, -, 1, ], ^, (, y, >, >, >, 1, )]
[], =, mt, [, M, -, 1, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y]
[-, 1, ], =, mt, [, M, -, 1, ], ^, (, y, >, >, >, 1, ), ^, MAG01]
[], =, mt, [, M, -, 1, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y]
[;, mti, =, 0, ;, }, y, =, mt, [, mti, ++, ], ;, y, ^=, y, >, >, >]
[^, MAG01, [, y, &, 0x1, ], ;, mti, =, 0, ;, }, y, =, mt, [, mti, ++, ]]
[^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, mti, =, 0, ;]
[[, M, -, 1, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ]]
[], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, mti, =, 0]
[-, 1, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, mti]
[], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, mti, =, 0]
[^, MAG01, [, y, &, 0x1, ], ;, mti, =, 0, ;, }, y, =, mt, [, mti, ++, ]]
[), ^, MAG01, [, y, &, 0x1, ], ;, mti, =, 0, ;, }, y, =, mt, [, mti, ++]
[>, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, mti, =, 0, ;, }, y, =]
[), ^, MAG01, [, y, &, 0x1, ], ;, mti, =, 0, ;, }, y, =, mt, [, mti, ++]
[;, mti, =, 0, ;, }, y, =, mt, [, mti, ++, ], ;, y, ^=, y, >, >, >]
[[, y, &, 0x1, ], ;, mti, =, 0, ;, }, y, =, mt, [, mti, ++, ], ;, y]
[], ;, mti, =, 0, ;, }, y, =, mt, [, mti, ++, ], ;, y, ^=, y, >, >]
[&, 0x1, ], ;, mti, =, 0, ;, }, y, =, mt, [, mti, ++, ], ;, y, ^=, y]
[], ;, mti, =, 0, ;, }, y, =, mt, [, mti, ++, ], ;, y, ^=, y, >, >]
[=, 0, ;, }, y, =, mt, [, mti, ++, ], ;, y, ^=, y, >, >, >, 11, ;]
[;, }, y, =, mt, [, mti, ++, ], ;, y, ^=, y, >, >, >, 11, ;, y, ^=]
[=, mt, [, mti, ++, ], ;, y, ^=, y, >, >, >, 11, ;, y, ^=, (, y, <<]
[;, y, ^=, y, >, >, >, 11, ;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;, y]
[[, mti, ++, ], ;, y, ^=, y, >, >, >, 11, ;, y, ^=, (, y, <<, 7, )]
[], ;, y, ^=, y, >, >, >, 11, ;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;]
[++, ], ;, y, ^=, y, >, >, >, 11, ;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680]
[^=, y, >, >, >, 11, ;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=, (]
[;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=, (, y, <<, 15, ), &, 0xefc60000]
[>, >, >, 11, ;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=, (, y, <<]
[;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=, (, y, <<, 15, ), &, 0xefc60000]
[^=, (, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=, (, y, <<, 15, ), &, 0xefc60000, ;, y]
[;, y, ^=, (, y, <<, 15, ), &, 0xefc60000, ;, y, ^=, y, >, >, >, 18, ;, return]
[&, 0x9d2c5680, ;, y, ^=, (, y, <<, 15, ), &, 0xefc60000, ;, y, ^=, y, >, >, >, 18]
[), &, 0x9d2c5680, ;, y, ^=, (, y, <<, 15, ), &, 0xefc60000, ;, y, ^=, y, >, >, >]
[<<, 7, ), &, 0x9d2c5680, ;, y, ^=, (, y, <<, 15, ), &, 0xefc60000, ;, y, ^=, y, >]
[), &, 0x9d2c5680, ;, y, ^=, (, y, <<, 15, ), &, 0xefc60000, ;, y, ^=, y, >, >, >]
[;, y, ^=, (, y, <<, 15, ), &, 0xefc60000, ;, y, ^=, y, >, >, >, 18, ;, return]
[^=, (, y, <<, 15, ), &, 0xefc60000, ;, y, ^=, y, >, >, >, 18, ;, return, y, >]
[;, y, ^=, y, >, >, >, 18, ;, return, y, >, >, >, (, 32, -, bits, ), ;]
[&, 0xefc60000, ;, y, ^=, y, >, >, >, 18, ;, return, y, >, >, >, (, 32, -, bits]
[), &, 0xefc60000, ;, y, ^=, y, >, >, >, 18, ;, return, y, >, >, >, (, 32, -]
[<<, 15, ), &, 0xefc60000, ;, y, ^=, y, >, >, >, 18, ;, return, y, >, >, >, (]
[), &, 0xefc60000, ;, y, ^=, y, >, >, >, 18, ;, return, y, >, >, >, (, 32, -]
[;, y, ^=, y, >, >, >, 18, ;, return, y, >, >, >, (, 32, -, bits, ), ;]
[^=, y, >, >, >, 18, ;, return, y, >, >, >, (, 32, -, bits, ), ;, }, }]
[;, return, y, >, >, >, (, 32, -, bits, ), ;, }, }]
[>, >, >, 18, ;, return, y, >, >, >, (, 32, -, bits, ), ;, }, }]
[;, return, y, >, >, >, (, 32, -, bits, ), ;, }, }]
[;, }, }]
[>, >, >, (, 32, -, bits, ), ;, }, }]
[;, }, }]
[), ;, }, }]
[-, bits, ), ;, }, }]
[), ;, }, }]
