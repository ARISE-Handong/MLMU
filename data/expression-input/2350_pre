[., net, ., URL, ;, class, PluginFinder, {, private, final, PluginSwitch, pluginSwitch, ;, public, PluginFinder, (, PluginSwitch, pluginSwitch, ), {]
[., net, ., URL, ;, class, PluginFinder, {, private, final, PluginSwitch, pluginSwitch, ;, public, PluginFinder, (, PluginSwitch, pluginSwitch, ), {]
[;, class, PluginFinder, {, private, final, PluginSwitch, pluginSwitch, ;, public, PluginFinder, (, PluginSwitch, pluginSwitch, ), {, this, ., pluginSwitch, =]
[pluginSwitch, =, pluginSwitch, ;, }, String, findPluginClass, (, Iterable, <, URL, >, resources, ), {, for, (, URL, resource, :]
[findPluginClass, (, Iterable, <, URL, >, resources, ), {, for, (, URL, resource, :, resources, ), {, InputStream, s, =]
[URL, >, resources, ), {, for, (, URL, resource, :, resources, ), {, InputStream, s, =, null, ;, try, {]
[resources, ), {, for, (, URL, resource, :, resources, ), {, InputStream, s, =, null, ;, try, {, s, =]
[resources, ), {, for, (, URL, resource, :, resources, ), {, InputStream, s, =, null, ;, try, {, s, =]
[), {, InputStream, s, =, null, ;, try, {, s, =, resource, ., openStream, (, ), ;, String, pluginClassName, =]
[), {, InputStream, s, =, null, ;, try, {, s, =, resource, ., openStream, (, ), ;, String, pluginClassName, =]
[try, {, s, =, resource, ., openStream, (, ), ;, String, pluginClassName, =, new, PluginFileReader, (, ), ., readPluginClass, (]
[., openStream, (, ), ;, String, pluginClassName, =, new, PluginFileReader, (, ), ., readPluginClass, (, s, ), ;, if, (]
[., openStream, (, ), ;, String, pluginClassName, =, new, PluginFileReader, (, ), ., readPluginClass, (, s, ), ;, if, (]
[(, ), ;, String, pluginClassName, =, new, PluginFileReader, (, ), ., readPluginClass, (, s, ), ;, if, (, pluginClassName, ==]
[(, ), ., readPluginClass, (, s, ), ;, if, (, pluginClassName, ==, null, ), {, continue, ;, }, if, (]
[), ., readPluginClass, (, s, ), ;, if, (, pluginClassName, ==, null, ), {, continue, ;, }, if, (, !]
[), ., readPluginClass, (, s, ), ;, if, (, pluginClassName, ==, null, ), {, continue, ;, }, if, (, !]
[s, ), ;, if, (, pluginClassName, ==, null, ), {, continue, ;, }, if, (, !, pluginSwitch, ., isEnabled, (]
[), {, continue, ;, }, if, (, !, pluginSwitch, ., isEnabled, (, pluginClassName, ), ), {, continue, ;, }, return]
[isEnabled, (, pluginClassName, ), ), {, continue, ;, }, return, pluginClassName, ;, }, catch, (, Exception, e, ), {, throw]
[), ), {, continue, ;, }, return, pluginClassName, ;, }, catch, (, Exception, e, ), {, throw, new, MockitoException, (]
[), ), {, continue, ;, }, return, pluginClassName, ;, }, catch, (, Exception, e, ), {, throw, new, MockitoException, (]
[{, continue, ;, }, return, pluginClassName, ;, }, catch, (, Exception, e, ), {, throw, new, MockitoException, (, "Problems reading plugin implementation from: ", +]
[;, }, return, pluginClassName, ;, }, catch, (, Exception, e, ), {, throw, new, MockitoException, (, "Problems reading plugin implementation from: ", +, resource, ,]
[catch, (, Exception, e, ), {, throw, new, MockitoException, (, "Problems reading plugin implementation from: ", +, resource, ,, e, ), ;, }, finally, {]
[catch, (, Exception, e, ), {, throw, new, MockitoException, (, "Problems reading plugin implementation from: ", +, resource, ,, e, ), ;, }, finally, {]
[), {, throw, new, MockitoException, (, "Problems reading plugin implementation from: ", +, resource, ,, e, ), ;, }, finally, {, IOUtil, ., closeQuietly, (]
["Problems reading plugin implementation from: ", +, resource, ,, e, ), ;, }, finally, {, IOUtil, ., closeQuietly, (, s, ), ;, }, }, return]
