[;, private, static, HashMap, <, DateTimeFieldType, ,, UnsupportedDateTimeField, >, cCache, ;, public, static, synchronized, UnsupportedDateTimeField, getInstance, (, DateTimeFieldType, type, ,]
[;, private, static, HashMap, <, DateTimeFieldType, ,, UnsupportedDateTimeField, >, cCache, ;, public, static, synchronized, UnsupportedDateTimeField, getInstance, (, DateTimeFieldType, type, ,]
[), {, cCache, =, new, HashMap, <, DateTimeFieldType, ,, UnsupportedDateTimeField, >, (, 7, ), ;, field, =, null, ;, }]
[==, null, ), {, cCache, =, new, HashMap, <, DateTimeFieldType, ,, UnsupportedDateTimeField, >, (, 7, ), ;, field, =, null]
[), {, cCache, =, new, HashMap, <, DateTimeFieldType, ,, UnsupportedDateTimeField, >, (, 7, ), ;, field, =, null, ;, }]
[=, new, HashMap, <, DateTimeFieldType, ,, UnsupportedDateTimeField, >, (, 7, ), ;, field, =, null, ;, }, else, {, field]
[;, field, =, null, ;, }, else, {, field, =, cCache, ., get, (, type, ), ;, if, (, field]
[), ;, field, =, null, ;, }, else, {, field, =, cCache, ., get, (, type, ), ;, if, (]
[=, null, ;, }, else, {, field, =, cCache, ., get, (, type, ), ;, if, (, field, !=, null]
[;, }, else, {, field, =, cCache, ., get, (, type, ), ;, if, (, field, !=, null, &&, field]
[=, cCache, ., get, (, type, ), ;, if, (, field, !=, null, &&, field, ., getDurationField, (, ), !=]
[;, if, (, field, !=, null, &&, field, ., getDurationField, (, ), !=, durationField, ), {, field, =, null, ;]
[., get, (, type, ), ;, if, (, field, !=, null, &&, field, ., getDurationField, (, ), !=, durationField, )]
[), ;, if, (, field, !=, null, &&, field, ., getDurationField, (, ), !=, durationField, ), {, field, =, null]
[), {, field, =, null, ;, }, }, if, (, field, ==, null, ), {, field, =, new, UnsupportedDateTimeField, (]
[&&, field, ., getDurationField, (, ), !=, durationField, ), {, field, =, null, ;, }, }, if, (, field, ==]
[!=, null, &&, field, ., getDurationField, (, ), !=, durationField, ), {, field, =, null, ;, }, }, if, (]
[&&, field, ., getDurationField, (, ), !=, durationField, ), {, field, =, null, ;, }, }, if, (, field, ==]
[), {, field, =, null, ;, }, }, if, (, field, ==, null, ), {, field, =, new, UnsupportedDateTimeField, (]
[!=, durationField, ), {, field, =, null, ;, }, }, if, (, field, ==, null, ), {, field, =, new]
[., getDurationField, (, ), !=, durationField, ), {, field, =, null, ;, }, }, if, (, field, ==, null, )]
[), {, field, =, null, ;, }, }, if, (, field, ==, null, ), {, field, =, new, UnsupportedDateTimeField, (]
[=, null, ;, }, }, if, (, field, ==, null, ), {, field, =, new, UnsupportedDateTimeField, (, type, ,, durationField]
[;, }, }, if, (, field, ==, null, ), {, field, =, new, UnsupportedDateTimeField, (, type, ,, durationField, ), ;]
[), {, field, =, new, UnsupportedDateTimeField, (, type, ,, durationField, ), ;, cCache, ., put, (, type, ,, field, )]
[==, null, ), {, field, =, new, UnsupportedDateTimeField, (, type, ,, durationField, ), ;, cCache, ., put, (, type, ,]
[), {, field, =, new, UnsupportedDateTimeField, (, type, ,, durationField, ), ;, cCache, ., put, (, type, ,, field, )]
[=, new, UnsupportedDateTimeField, (, type, ,, durationField, ), ;, cCache, ., put, (, type, ,, field, ), ;, }, return]
[;, cCache, ., put, (, type, ,, field, ), ;, }, return, field, ;, }, private, final, DateTimeFieldType, iType, ;]
[,, durationField, ), ;, cCache, ., put, (, type, ,, field, ), ;, }, return, field, ;, }, private, final]
[), ;, cCache, ., put, (, type, ,, field, ), ;, }, return, field, ;, }, private, final, DateTimeFieldType, iType]
[;, }, return, field, ;, }, private, final, DateTimeFieldType, iType, ;, private, final, DurationField, iDurationField, ;, private, UnsupportedDateTimeField, (, DateTimeFieldType]
[., put, (, type, ,, field, ), ;, }, return, field, ;, }, private, final, DateTimeFieldType, iType, ;, private, final]
[,, field, ), ;, }, return, field, ;, }, private, final, DateTimeFieldType, iType, ;, private, final, DurationField, iDurationField, ;, private]
[), ;, }, return, field, ;, }, private, final, DateTimeFieldType, iType, ;, private, final, DurationField, iDurationField, ;, private, UnsupportedDateTimeField, (]
[;, }, private, final, DateTimeFieldType, iType, ;, private, final, DurationField, iDurationField, ;, private, UnsupportedDateTimeField, (, DateTimeFieldType, type, ,, DurationField, durationField]
[), {, throw, new, IllegalArgumentException, (, ), ;, }, iType, =, type, ;, iDurationField, =, durationField, ;, }, public, DateTimeFieldType]
[||, durationField, ==, null, ), {, throw, new, IllegalArgumentException, (, ), ;, }, iType, =, type, ;, iDurationField, =, durationField]
[==, null, ||, durationField, ==, null, ), {, throw, new, IllegalArgumentException, (, ), ;, }, iType, =, type, ;, iDurationField]
[||, durationField, ==, null, ), {, throw, new, IllegalArgumentException, (, ), ;, }, iType, =, type, ;, iDurationField, =, durationField]
[), {, throw, new, IllegalArgumentException, (, ), ;, }, iType, =, type, ;, iDurationField, =, durationField, ;, }, public, DateTimeFieldType]
[==, null, ), {, throw, new, IllegalArgumentException, (, ), ;, }, iType, =, type, ;, iDurationField, =, durationField, ;, }]
[), {, throw, new, IllegalArgumentException, (, ), ;, }, iType, =, type, ;, iDurationField, =, durationField, ;, }, public, DateTimeFieldType]
[;, }, iType, =, type, ;, iDurationField, =, durationField, ;, }, public, DateTimeFieldType, getType, (, ), {, return, iType, ;]
[=, type, ;, iDurationField, =, durationField, ;, }, public, DateTimeFieldType, getType, (, ), {, return, iType, ;, }, public, String]
[;, iDurationField, =, durationField, ;, }, public, DateTimeFieldType, getType, (, ), {, return, iType, ;, }, public, String, getName, (]
[=, durationField, ;, }, public, DateTimeFieldType, getType, (, ), {, return, iType, ;, }, public, String, getName, (, ), {]
[;, }, public, DateTimeFieldType, getType, (, ), {, return, iType, ;, }, public, String, getName, (, ), {, return, iType]
[;, }, public, String, getName, (, ), {, return, iType, ., getName, (, ), ;, }, public, boolean, isSupported, (]
[;, }, public, boolean, isSupported, (, ), {, return, false, ;, }, public, boolean, isLenient, (, ), {, return, false]
[., getName, (, ), ;, }, public, boolean, isSupported, (, ), {, return, false, ;, }, public, boolean, isLenient, (]
[;, }, public, boolean, isLenient, (, ), {, return, false, ;, }, public, int, get, (, long, instant, ), {]
[;, }, public, int, get, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, String, getAsText, (]
[;, }, public, String, getAsText, (, long, instant, ,, Locale, locale, ), {, throw, unsupported, (, ), ;, }, public]
[;, }, public, String, getAsText, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, String, getAsText, (]
[;, }, public, String, getAsText, (, ReadablePartial, partial, ,, int, fieldValue, ,, Locale, locale, ), {, throw, unsupported, (, )]
[;, }, public, String, getAsText, (, ReadablePartial, partial, ,, Locale, locale, ), {, throw, unsupported, (, ), ;, }, public]
[;, }, public, String, getAsText, (, int, fieldValue, ,, Locale, locale, ), {, throw, unsupported, (, ), ;, }, public]
[;, }, public, String, getAsShortText, (, long, instant, ,, Locale, locale, ), {, throw, unsupported, (, ), ;, }, public]
[;, }, public, String, getAsShortText, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, String, getAsShortText, (]
[;, }, public, String, getAsShortText, (, ReadablePartial, partial, ,, int, fieldValue, ,, Locale, locale, ), {, throw, unsupported, (, )]
[;, }, public, String, getAsShortText, (, ReadablePartial, partial, ,, Locale, locale, ), {, throw, unsupported, (, ), ;, }, public]
[;, }, public, String, getAsShortText, (, int, fieldValue, ,, Locale, locale, ), {, throw, unsupported, (, ), ;, }, public]
[;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, getDurationField, (, ), ., add, (]
[;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, getDurationField, (, ), ., add, (]
[., add, (, instant, ,, value, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {]
[,, value, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, getDurationField, (, )]
[), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, getDurationField, (, ), ., add]
[;, }, public, int, [, ], add, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,, int]
[., add, (, instant, ,, value, ), ;, }, public, int, [, ], add, (, ReadablePartial, instant, ,, int, fieldIndex]
[,, value, ), ;, }, public, int, [, ], add, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ]]
[), ;, }, public, int, [, ], add, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,]
[;, }, public, int, [, ], addWrapPartial, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,, int]
[;, }, public, long, addWrapField, (, long, instant, ,, int, value, ), {, throw, unsupported, (, ), ;, }, public]
[;, }, public, int, [, ], addWrapField, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,, int]
[;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getDurationField, (, ), ., getDifference, (]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getDurationField, (, ), ., getDifferenceAsLong, (]
[., getDifference, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {]
[,, subtrahendInstant, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getDurationField, (, )]
[), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getDurationField, (, ), ., getDifferenceAsLong]
[;, }, public, long, set, (, long, instant, ,, int, value, ), {, throw, unsupported, (, ), ;, }, public]
[., getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, set, (, long, instant, ,, int, value, ), {]
[,, subtrahendInstant, ), ;, }, public, long, set, (, long, instant, ,, int, value, ), {, throw, unsupported, (, )]
[), ;, }, public, long, set, (, long, instant, ,, int, value, ), {, throw, unsupported, (, ), ;, }]
[;, }, public, int, [, ], set, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,, int]
[;, }, public, long, set, (, long, instant, ,, String, text, ,, Locale, locale, ), {, throw, unsupported, (, )]
[;, }, public, long, set, (, long, instant, ,, String, text, ), {, throw, unsupported, (, ), ;, }, public]
[;, }, public, int, [, ], set, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,, String]
[;, }, public, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public, DurationField, getRangeDurationField, (, ), {, return, null]
[;, }, public, DurationField, getRangeDurationField, (, ), {, return, null, ;, }, public, boolean, isLeap, (, long, instant, ), {]
[;, }, public, boolean, isLeap, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, int, getLeapAmount, (]
[;, }, public, int, getLeapAmount, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, DurationField, getLeapDurationField, (]
[;, }, public, DurationField, getLeapDurationField, (, ), {, return, null, ;, }, public, int, getMinimumValue, (, ), {, throw, unsupported]
[;, }, public, int, getMinimumValue, (, ), {, throw, unsupported, (, ), ;, }, public, int, getMinimumValue, (, long, instant]
[;, }, public, int, getMinimumValue, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, int, getMinimumValue, (]
[;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ), {, throw, unsupported, (, ), ;, }, public, int, getMinimumValue, (]
[;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, throw, unsupported, (, ), ;]
[;, }, public, int, getMaximumValue, (, ), {, throw, unsupported, (, ), ;, }, public, int, getMaximumValue, (, long, instant]
[;, }, public, int, getMaximumValue, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, int, getMaximumValue, (]
[;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, throw, unsupported, (, ), ;, }, public, int, getMaximumValue, (]
[;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, throw, unsupported, (, ), ;]
[;, }, public, int, getMaximumTextLength, (, Locale, locale, ), {, throw, unsupported, (, ), ;, }, public, int, getMaximumShortTextLength, (]
[;, }, public, int, getMaximumShortTextLength, (, Locale, locale, ), {, throw, unsupported, (, ), ;, }, public, long, roundFloor, (]
[;, }, public, long, roundFloor, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, long, roundCeiling, (]
[;, }, public, long, roundCeiling, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, long, roundHalfFloor, (]
[;, }, public, long, roundHalfFloor, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, long, roundHalfCeiling, (]
[;, }, public, long, roundHalfCeiling, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, long, roundHalfEven, (]
[;, }, public, long, roundHalfEven, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, long, remainder, (]
[;, }, public, long, remainder, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, String, toString, (]
[;, }, public, String, toString, (, ), {, return, "UnsupportedDateTimeField", ;, }, private, Object, readResolve, (, ), {, return, getInstance]
[;, }, private, Object, readResolve, (, ), {, return, getInstance, (, iType, ,, iDurationField, ), ;, }, private, UnsupportedOperationException, unsupported]
[;, }, private, UnsupportedOperationException, unsupported, (, ), {, return, new, UnsupportedOperationException, (, iType, +, " field is unsupported", ), ;, }, }]
[,, iDurationField, ), ;, }, private, UnsupportedOperationException, unsupported, (, ), {, return, new, UnsupportedOperationException, (, iType, +, " field is unsupported", ), ;]
[), ;, }, private, UnsupportedOperationException, unsupported, (, ), {, return, new, UnsupportedOperationException, (, iType, +, " field is unsupported", ), ;, }, }]
[;, }, }]
[), ;, }, }]
[+, " field is unsupported", ), ;, }, }]
[), ;, }, }]
