[abstract, class, Sets, {, public, static, Set, <, Object, >, newMockSafeHashSet, (, Iterable, <, Object, >, mocks, ), {, return]
[abstract, class, Sets, {, public, static, Set, <, Object, >, newMockSafeHashSet, (, Iterable, <, Object, >, mocks, ), {, return]
[public, static, Set, <, Object, >, newMockSafeHashSet, (, Iterable, <, Object, >, mocks, ), {, return, HashCodeAndEqualsSafeSet, ., of, (]
[of, (, mocks, ), ;, }, public, static, Set, <, Object, >, newMockSafeHashSet, (, Object, ..., mocks, ), {, return]
[of, (, mocks, ), ;, }, public, static, Set, <, Object, >, newMockSafeHashSet, (, Object, ..., mocks, ), {, return]
[;, }, public, static, Set, <, Object, >, newMockSafeHashSet, (, Object, ..., mocks, ), {, return, HashCodeAndEqualsSafeSet, ., of, (]
[mocks, ), {, return, HashCodeAndEqualsSafeSet, ., of, (, mocks, ), ;, }, public, static, IdentitySet, newIdentitySet, (, ), {, return]
[;, }, public, static, <, T, >, Set, <, T, >, newSet, (, T, ..., elements, ), {, if, (]
[;, }, public, static, <, T, >, Set, <, T, >, newSet, (, T, ..., elements, ), {, if, (]
[public, static, <, T, >, Set, <, T, >, newSet, (, T, ..., elements, ), {, if, (, elements, ==]
[>, Set, <, T, >, newSet, (, T, ..., elements, ), {, if, (, elements, ==, null, ), {, throw]
[T, >, newSet, (, T, ..., elements, ), {, if, (, elements, ==, null, ), {, throw, new, IllegalArgumentException, (]
[..., elements, ), {, if, (, elements, ==, null, ), {, throw, new, IllegalArgumentException, (, "Expected an array of elements (or empty array) but received a null.", ), ;, }, return]
[elements, ==, null, ), {, throw, new, IllegalArgumentException, (, "Expected an array of elements (or empty array) but received a null.", ), ;, }, return, new, LinkedHashSet, <, T, >, (]
[null, ), {, throw, new, IllegalArgumentException, (, "Expected an array of elements (or empty array) but received a null.", ), ;, }, return, new, LinkedHashSet, <, T, >, (, asList, (]
