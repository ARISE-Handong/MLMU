[., chrono, ., JulianChronology, ;, final, class, CalendarConverter, extends, AbstractConverter, implements, InstantConverter, ,, PartialConverter, {, static, final, CalendarConverter, INSTANCE, =]
[), {, super, (, ), ;, }, public, Chronology, getChronology, (, Object, object, ,, Chronology, chrono, ), {, if, (]
[), {, super, (, ), ;, }, public, Chronology, getChronology, (, Object, object, ,, Chronology, chrono, ), {, if, (]
[super, (, ), ;, }, public, Chronology, getChronology, (, Object, object, ,, Chronology, chrono, ), {, if, (, chrono, !=]
[}, public, Chronology, getChronology, (, Object, object, ,, Chronology, chrono, ), {, if, (, chrono, !=, null, ), {, return]
[object, ,, Chronology, chrono, ), {, if, (, chrono, !=, null, ), {, return, chrono, ;, }, Calendar, cal, =]
[chrono, ), {, if, (, chrono, !=, null, ), {, return, chrono, ;, }, Calendar, cal, =, (, Calendar, )]
[chrono, !=, null, ), {, return, chrono, ;, }, Calendar, cal, =, (, Calendar, ), object, ;, DateTimeZone, zone, =]
[{, return, chrono, ;, }, Calendar, cal, =, (, Calendar, ), object, ;, DateTimeZone, zone, =, null, ;, try, {]
[chrono, ;, }, Calendar, cal, =, (, Calendar, ), object, ;, DateTimeZone, zone, =, null, ;, try, {, zone, =]
[chrono, ;, }, Calendar, cal, =, (, Calendar, ), object, ;, DateTimeZone, zone, =, null, ;, try, {, zone, =]
[cal, =, (, Calendar, ), object, ;, DateTimeZone, zone, =, null, ;, try, {, zone, =, DateTimeZone, ., forTimeZone, (]
[cal, =, (, Calendar, ), object, ;, DateTimeZone, zone, =, null, ;, try, {, zone, =, DateTimeZone, ., forTimeZone, (]
[zone, =, DateTimeZone, ., forTimeZone, (, cal, ., getTimeZone, (, ), ), ;, }, catch, (, IllegalArgumentException, ex, ), {]
[DateTimeZone, ., forTimeZone, (, cal, ., getTimeZone, (, ), ), ;, }, catch, (, IllegalArgumentException, ex, ), {, zone, =]
[DateTimeZone, ., forTimeZone, (, cal, ., getTimeZone, (, ), ), ;, }, catch, (, IllegalArgumentException, ex, ), {, zone, =]
[), ), ;, }, catch, (, IllegalArgumentException, ex, ), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, return]
[;, }, catch, (, IllegalArgumentException, ex, ), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, return, getChronology, (]
[catch, (, IllegalArgumentException, ex, ), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, return, getChronology, (, cal, ,]
[(, cal, ,, zone, ), ;, }, public, Chronology, getChronology, (, Object, object, ,, DateTimeZone, zone, ), {, if, (]
[(, cal, ,, zone, ), ;, }, public, Chronology, getChronology, (, Object, object, ,, DateTimeZone, zone, ), {, if, (]
[(, cal, ,, zone, ), ;, }, public, Chronology, getChronology, (, Object, object, ,, DateTimeZone, zone, ), {, if, (]
[(, cal, ,, zone, ), ;, }, public, Chronology, getChronology, (, Object, object, ,, DateTimeZone, zone, ), {, if, (]
[object, ,, DateTimeZone, zone, ), {, if, (, object, ., getClass, (, ), ., getName, (, ), ., endsWith, (]
[{, if, (, object, ., getClass, (, ), ., getName, (, ), ., endsWith, (, ".BuddhistCalendar", ), ), {, return]
[{, if, (, object, ., getClass, (, ), ., getName, (, ), ., endsWith, (, ".BuddhistCalendar", ), ), {, return]
[., getClass, (, ), ., getName, (, ), ., endsWith, (, ".BuddhistCalendar", ), ), {, return, BuddhistChronology, ., getInstance, (]
[), ., endsWith, (, ".BuddhistCalendar", ), ), {, return, BuddhistChronology, ., getInstance, (, zone, ), ;, }, else, if, (]
[), ., endsWith, (, ".BuddhistCalendar", ), ), {, return, BuddhistChronology, ., getInstance, (, zone, ), ;, }, else, if, (]
[return, BuddhistChronology, ., getInstance, (, zone, ), ;, }, else, if, (, object, instanceof, GregorianCalendar, ), {, GregorianCalendar, gc, =]
[getInstance, (, zone, ), ;, }, else, if, (, object, instanceof, GregorianCalendar, ), {, GregorianCalendar, gc, =, (, GregorianCalendar, )]
[}, else, if, (, object, instanceof, GregorianCalendar, ), {, GregorianCalendar, gc, =, (, GregorianCalendar, ), object, ;, long, cutover, =]
[}, else, if, (, object, instanceof, GregorianCalendar, ), {, GregorianCalendar, gc, =, (, GregorianCalendar, ), object, ;, long, cutover, =]
[}, else, if, (, object, instanceof, GregorianCalendar, ), {, GregorianCalendar, gc, =, (, GregorianCalendar, ), object, ;, long, cutover, =]
[(, GregorianCalendar, ), object, ;, long, cutover, =, gc, ., getGregorianChange, (, ), ., getTime, (, ), ;, if, (]
[(, GregorianCalendar, ), object, ;, long, cutover, =, gc, ., getGregorianChange, (, ), ., getTime, (, ), ;, if, (]
[), object, ;, long, cutover, =, gc, ., getGregorianChange, (, ), ., getTime, (, ), ;, if, (, cutover, ==]
[), object, ;, long, cutover, =, gc, ., getGregorianChange, (, ), ., getTime, (, ), ;, if, (, cutover, ==]
[gc, ., getGregorianChange, (, ), ., getTime, (, ), ;, if, (, cutover, ==, Long, ., MIN_VALUE, ), {, return]
[gc, ., getGregorianChange, (, ), ., getTime, (, ), ;, if, (, cutover, ==, Long, ., MIN_VALUE, ), {, return]
[), ., getTime, (, ), ;, if, (, cutover, ==, Long, ., MIN_VALUE, ), {, return, GregorianChronology, ., getInstance, (]
[(, cutover, ==, Long, ., MIN_VALUE, ), {, return, GregorianChronology, ., getInstance, (, zone, ), ;, }, else, if, (]
[(, cutover, ==, Long, ., MIN_VALUE, ), {, return, GregorianChronology, ., getInstance, (, zone, ), ;, }, else, if, (]
[==, Long, ., MIN_VALUE, ), {, return, GregorianChronology, ., getInstance, (, zone, ), ;, }, else, if, (, cutover, ==]
[==, Long, ., MIN_VALUE, ), {, return, GregorianChronology, ., getInstance, (, zone, ), ;, }, else, if, (, cutover, ==]
[return, GregorianChronology, ., getInstance, (, zone, ), ;, }, else, if, (, cutover, ==, Long, ., MAX_VALUE, ), {, return]
[return, GregorianChronology, ., getInstance, (, zone, ), ;, }, else, if, (, cutover, ==, Long, ., MAX_VALUE, ), {, return]
[(, zone, ), ;, }, else, if, (, cutover, ==, Long, ., MAX_VALUE, ), {, return, JulianChronology, ., getInstance, (]
[(, cutover, ==, Long, ., MAX_VALUE, ), {, return, JulianChronology, ., getInstance, (, zone, ), ;, }, else, {, return]
[(, cutover, ==, Long, ., MAX_VALUE, ), {, return, JulianChronology, ., getInstance, (, zone, ), ;, }, else, {, return]
[., MAX_VALUE, ), {, return, JulianChronology, ., getInstance, (, zone, ), ;, }, else, {, return, GJChronology, ., getInstance, (]
[), {, return, JulianChronology, ., getInstance, (, zone, ), ;, }, else, {, return, GJChronology, ., getInstance, (, zone, ,]
[return, JulianChronology, ., getInstance, (, zone, ), ;, }, else, {, return, GJChronology, ., getInstance, (, zone, ,, cutover, ,]
[}, else, {, return, GJChronology, ., getInstance, (, zone, ,, cutover, ,, 4, ), ;, }, }, else, {, return]
[}, else, {, return, GJChronology, ., getInstance, (, zone, ,, cutover, ,, 4, ), ;, }, }, else, {, return]
[GJChronology, ., getInstance, (, zone, ,, cutover, ,, 4, ), ;, }, }, else, {, return, ISOChronology, ., getInstance, (]
[(, zone, ), ;, }, }, public, long, getInstantMillis, (, Object, object, ,, Chronology, chrono, ), {, Calendar, calendar, =]
[;, }, }, public, long, getInstantMillis, (, Object, object, ,, Chronology, chrono, ), {, Calendar, calendar, =, (, Calendar, )]
[public, long, getInstantMillis, (, Object, object, ,, Chronology, chrono, ), {, Calendar, calendar, =, (, Calendar, ), object, ;, return]
[public, long, getInstantMillis, (, Object, object, ,, Chronology, chrono, ), {, Calendar, calendar, =, (, Calendar, ), object, ;, return]
[public, long, getInstantMillis, (, Object, object, ,, Chronology, chrono, ), {, Calendar, calendar, =, (, Calendar, ), object, ;, return]
[., getTime, (, ), ., getTime, (, ), ;, }, public, Class, <, ?, >, getSupportedType, (, ), {, return]
