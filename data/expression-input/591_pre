[commons, ., math3, ., exception, ., TooManyEvaluationsException, ;, public, class, NewtonRaphsonSolver, extends, AbstractUnivariateDifferentiableSolver, {, private, static, final, double, DEFAULT_ABSOLUTE_ACCURACY, =]
[class, NewtonRaphsonSolver, extends, AbstractUnivariateDifferentiableSolver, {, private, static, final, double, DEFAULT_ABSOLUTE_ACCURACY, =, 1e-6, ;, public, NewtonRaphsonSolver, (, ), {, this, (]
[public, NewtonRaphsonSolver, (, ), {, this, (, DEFAULT_ABSOLUTE_ACCURACY, ), ;, }, public, NewtonRaphsonSolver, (, double, absoluteAccuracy, ), {, super, (]
[(, int, maxEval, ,, final, UnivariateDifferentiableFunction, f, ,, final, double, min, ,, final, double, max, ), throws, TooManyEvaluationsException, {, return]
[(, int, maxEval, ,, final, UnivariateDifferentiableFunction, f, ,, final, double, min, ,, final, double, max, ), throws, TooManyEvaluationsException, {, return]
[final, UnivariateDifferentiableFunction, f, ,, final, double, min, ,, final, double, max, ), throws, TooManyEvaluationsException, {, return, super, ., solve, (]
[f, ,, final, double, min, ,, final, double, max, ), throws, TooManyEvaluationsException, {, return, super, ., solve, (, maxEval, ,]
[final, double, min, ,, final, double, max, ), throws, TooManyEvaluationsException, {, return, super, ., solve, (, maxEval, ,, f, ,]
[final, double, min, ,, final, double, max, ), throws, TooManyEvaluationsException, {, return, super, ., solve, (, maxEval, ,, f, ,]
[final, double, max, ), throws, TooManyEvaluationsException, {, return, super, ., solve, (, maxEval, ,, f, ,, UnivariateSolverUtils, ., midpoint, (]
[max, ), throws, TooManyEvaluationsException, {, return, super, ., solve, (, maxEval, ,, f, ,, UnivariateSolverUtils, ., midpoint, (, min, ,]
[,, max, ), ), ;, }, @, Override, protected, double, doSolve, (, ), throws, TooManyEvaluationsException, {, final, double, startValue, =]
[protected, double, doSolve, (, ), throws, TooManyEvaluationsException, {, final, double, startValue, =, getStartValue, (, ), ;, final, double, absoluteAccuracy, =]
[{, final, double, startValue, =, getStartValue, (, ), ;, final, double, absoluteAccuracy, =, getAbsoluteAccuracy, (, ), ;, double, x0, =]
[), ;, final, double, absoluteAccuracy, =, getAbsoluteAccuracy, (, ), ;, double, x0, =, startValue, ;, double, x1, ;, while, (]
[(, ), ;, double, x0, =, startValue, ;, double, x1, ;, while, (, true, ), {, final, DerivativeStructure, y0, =]
[;, double, x0, =, startValue, ;, double, x1, ;, while, (, true, ), {, final, DerivativeStructure, y0, =, computeObjectiveValueAndDerivative, (]
[=, startValue, ;, double, x1, ;, while, (, true, ), {, final, DerivativeStructure, y0, =, computeObjectiveValueAndDerivative, (, x0, ), ;]
[;, double, x1, ;, while, (, true, ), {, final, DerivativeStructure, y0, =, computeObjectiveValueAndDerivative, (, x0, ), ;, x1, =]
[;, double, x1, ;, while, (, true, ), {, final, DerivativeStructure, y0, =, computeObjectiveValueAndDerivative, (, x0, ), ;, x1, =]
[x1, ;, while, (, true, ), {, final, DerivativeStructure, y0, =, computeObjectiveValueAndDerivative, (, x0, ), ;, x1, =, x0, -]
[;, while, (, true, ), {, final, DerivativeStructure, y0, =, computeObjectiveValueAndDerivative, (, x0, ), ;, x1, =, x0, -, (]
[;, while, (, true, ), {, final, DerivativeStructure, y0, =, computeObjectiveValueAndDerivative, (, x0, ), ;, x1, =, x0, -, (]
[;, while, (, true, ), {, final, DerivativeStructure, y0, =, computeObjectiveValueAndDerivative, (, x0, ), ;, x1, =, x0, -, (]
[final, DerivativeStructure, y0, =, computeObjectiveValueAndDerivative, (, x0, ), ;, x1, =, x0, -, (, y0, ., getValue, (, ), /]
[final, DerivativeStructure, y0, =, computeObjectiveValueAndDerivative, (, x0, ), ;, x1, =, x0, -, (, y0, ., getValue, (, ), /]
[computeObjectiveValueAndDerivative, (, x0, ), ;, x1, =, x0, -, (, y0, ., getValue, (, ), /, y0, ., getPartialDerivative, (]
[=, x0, -, (, y0, ., getValue, (, ), /, y0, ., getPartialDerivative, (, 1, ), ), ;, if, (]
[=, x0, -, (, y0, ., getValue, (, ), /, y0, ., getPartialDerivative, (, 1, ), ), ;, if, (]
[=, x0, -, (, y0, ., getValue, (, ), /, y0, ., getPartialDerivative, (, 1, ), ), ;, if, (]
[y0, ., getValue, (, ), /, y0, ., getPartialDerivative, (, 1, ), ), ;, if, (, FastMath, ., abs, (]
[y0, ., getValue, (, ), /, y0, ., getPartialDerivative, (, 1, ), ), ;, if, (, FastMath, ., abs, (]
[getValue, (, ), /, y0, ., getPartialDerivative, (, 1, ), ), ;, if, (, FastMath, ., abs, (, x1, -]
[/, y0, ., getPartialDerivative, (, 1, ), ), ;, if, (, FastMath, ., abs, (, x1, -, x0, ), <=]
[(, 1, ), ), ;, if, (, FastMath, ., abs, (, x1, -, x0, ), <=, absoluteAccuracy, ), {, return]
[), ;, if, (, FastMath, ., abs, (, x1, -, x0, ), <=, absoluteAccuracy, ), {, return, x1, ;, }]
[if, (, FastMath, ., abs, (, x1, -, x0, ), <=, absoluteAccuracy, ), {, return, x1, ;, }, x0, =]
