[;, public, class, StandardDialRange, extends, AbstractDialLayer, implements, DialLayer, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, static, final, long, serialVersionUID, =]
[private, transient, Paint, paint, ;, private, double, innerRadius, ;, private, double, outerRadius, ;, public, StandardDialRange, (, ), {, this, (]
[Paint, paint, ;, private, double, innerRadius, ;, private, double, outerRadius, ;, public, StandardDialRange, (, ), {, this, (, 0.0, ,]
[;, private, double, innerRadius, ;, private, double, outerRadius, ;, public, StandardDialRange, (, ), {, this, (, 0.0, ,, 100.0, ,]
[;, private, double, innerRadius, ;, private, double, outerRadius, ;, public, StandardDialRange, (, ), {, this, (, 0.0, ,, 100.0, ,]
[., white, ), ;, }, public, StandardDialRange, (, double, lower, ,, double, upper, ,, Paint, paint, ), {, if, (]
[., white, ), ;, }, public, StandardDialRange, (, double, lower, ,, double, upper, ,, Paint, paint, ), {, if, (]
[), ;, }, public, StandardDialRange, (, double, lower, ,, double, upper, ,, Paint, paint, ), {, if, (, paint, ==]
[StandardDialRange, (, double, lower, ,, double, upper, ,, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[lower, ,, double, upper, ,, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[,, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[,, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., scaleIndex, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., scaleIndex, =, 0, ;]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., scaleIndex, =, 0, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., scaleIndex, =, 0, ;, this, ., lowerBound, =]
[throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., scaleIndex, =, 0, ;, this, ., lowerBound, =, lower, ;]
[throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., scaleIndex, =, 0, ;, this, ., lowerBound, =, lower, ;]
["Null 'paint' argument.", ), ;, }, this, ., scaleIndex, =, 0, ;, this, ., lowerBound, =, lower, ;, this, ., upperBound, =]
[;, }, this, ., scaleIndex, =, 0, ;, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;]
[;, }, this, ., scaleIndex, =, 0, ;, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;]
[scaleIndex, =, 0, ;, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;, this, ., innerRadius, =]
[0, ;, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;, this, ., innerRadius, =, 0.48, ;]
[0, ;, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;, this, ., innerRadius, =, 0.48, ;]
[lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;, this, ., innerRadius, =, 0.48, ;, this, ., outerRadius, =]
[lower, ;, this, ., upperBound, =, upper, ;, this, ., innerRadius, =, 0.48, ;, this, ., outerRadius, =, 0.52, ;]
[lower, ;, this, ., upperBound, =, upper, ;, this, ., innerRadius, =, 0.48, ;, this, ., outerRadius, =, 0.52, ;]
[upperBound, =, upper, ;, this, ., innerRadius, =, 0.48, ;, this, ., outerRadius, =, 0.52, ;, this, ., paint, =]
[this, ., outerRadius, =, 0.52, ;, this, ., paint, =, paint, ;, }, public, int, getScaleIndex, (, ), {, return]
[this, ., outerRadius, =, 0.52, ;, this, ., paint, =, paint, ;, }, public, int, getScaleIndex, (, ), {, return]
[public, int, getScaleIndex, (, ), {, return, this, ., scaleIndex, ;, }, public, void, setScaleIndex, (, int, index, ), {]
[public, int, getScaleIndex, (, ), {, return, this, ., scaleIndex, ;, }, public, void, setScaleIndex, (, int, index, ), {]
[), {, return, this, ., scaleIndex, ;, }, public, void, setScaleIndex, (, int, index, ), {, this, ., scaleIndex, =]
[return, this, ., scaleIndex, ;, }, public, void, setScaleIndex, (, int, index, ), {, this, ., scaleIndex, =, index, ;]
[., scaleIndex, ;, }, public, void, setScaleIndex, (, int, index, ), {, this, ., scaleIndex, =, index, ;, notifyListeners, (]
[}, public, void, setScaleIndex, (, int, index, ), {, this, ., scaleIndex, =, index, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, index, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getLowerBound, (, ), {, return]
[=, index, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getLowerBound, (, ), {, return]
[getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, void, setLowerBound, (, double, bound, ), {, if, (]
[getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, void, setLowerBound, (, double, bound, ), {, if, (]
[), {, return, this, ., lowerBound, ;, }, public, void, setLowerBound, (, double, bound, ), {, if, (, bound, >=]
[), {, return, this, ., lowerBound, ;, }, public, void, setLowerBound, (, double, bound, ), {, if, (, bound, >=]
[;, }, public, void, setLowerBound, (, double, bound, ), {, if, (, bound, >=, this, ., upperBound, ), {, throw]
[void, setLowerBound, (, double, bound, ), {, if, (, bound, >=, this, ., upperBound, ), {, throw, new, IllegalArgumentException, (]
[bound, ), {, if, (, bound, >=, this, ., upperBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }]
[bound, ), {, if, (, bound, >=, this, ., upperBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }]
[(, bound, >=, this, ., upperBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., lowerBound, =]
[>=, this, ., upperBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., lowerBound, =, bound, ;]
[., upperBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., lowerBound, =, bound, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., lowerBound, =, bound, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, bound, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getUpperBound, (, ), {, return]
[=, bound, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getUpperBound, (, ), {, return]
[getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, void, setUpperBound, (, double, bound, ), {, if, (]
[getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, void, setUpperBound, (, double, bound, ), {, if, (]
[), {, return, this, ., upperBound, ;, }, public, void, setUpperBound, (, double, bound, ), {, if, (, bound, <=]
[), {, return, this, ., upperBound, ;, }, public, void, setUpperBound, (, double, bound, ), {, if, (, bound, <=]
[;, }, public, void, setUpperBound, (, double, bound, ), {, if, (, bound, <=, this, ., lowerBound, ), {, throw]
[void, setUpperBound, (, double, bound, ), {, if, (, bound, <=, this, ., lowerBound, ), {, throw, new, IllegalArgumentException, (]
[bound, ), {, if, (, bound, <=, this, ., lowerBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }]
[bound, ), {, if, (, bound, <=, this, ., lowerBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }]
[(, bound, <=, this, ., lowerBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., upperBound, =]
[<=, this, ., lowerBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., upperBound, =, bound, ;]
[., lowerBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., upperBound, =, bound, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., upperBound, =, bound, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[DialLayerChangeEvent, (, this, ), ), ;, }, public, void, setBounds, (, double, lower, ,, double, upper, ), {, if, (]
[DialLayerChangeEvent, (, this, ), ), ;, }, public, void, setBounds, (, double, lower, ,, double, upper, ), {, if, (]
[this, ), ), ;, }, public, void, setBounds, (, double, lower, ,, double, upper, ), {, if, (, lower, >=]
[}, public, void, setBounds, (, double, lower, ,, double, upper, ), {, if, (, lower, >=, upper, ), {, throw]
[setBounds, (, double, lower, ,, double, upper, ), {, if, (, lower, >=, upper, ), {, throw, new, IllegalArgumentException, (]
[,, double, upper, ), {, if, (, lower, >=, upper, ), {, throw, new, IllegalArgumentException, (, "Lower must be less than upper.", ), ;, }]
[,, double, upper, ), {, if, (, lower, >=, upper, ), {, throw, new, IllegalArgumentException, (, "Lower must be less than upper.", ), ;, }]
[{, if, (, lower, >=, upper, ), {, throw, new, IllegalArgumentException, (, "Lower must be less than upper.", ), ;, }, this, ., lowerBound, =]
[(, lower, >=, upper, ), {, throw, new, IllegalArgumentException, (, "Lower must be less than upper.", ), ;, }, this, ., lowerBound, =, lower, ;]
[(, lower, >=, upper, ), {, throw, new, IllegalArgumentException, (, "Lower must be less than upper.", ), ;, }, this, ., lowerBound, =, lower, ;]
[), {, throw, new, IllegalArgumentException, (, "Lower must be less than upper.", ), ;, }, this, ., lowerBound, =, lower, ;, this, ., upperBound, =]
[throw, new, IllegalArgumentException, (, "Lower must be less than upper.", ), ;, }, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;]
[IllegalArgumentException, (, "Lower must be less than upper.", ), ;, }, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;, notifyListeners, (]
[), ;, }, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, upper, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getPaint, (, ), {, return]
[=, upper, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getPaint, (, ), {, return]
[getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (]
[getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (]
[), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==]
[., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[}, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getInnerRadius, (, ), {, return]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getInnerRadius, (, ), {, return]
[public, double, getInnerRadius, (, ), {, return, this, ., innerRadius, ;, }, public, void, setInnerRadius, (, double, radius, ), {]
[public, double, getInnerRadius, (, ), {, return, this, ., innerRadius, ;, }, public, void, setInnerRadius, (, double, radius, ), {]
[), {, return, this, ., innerRadius, ;, }, public, void, setInnerRadius, (, double, radius, ), {, this, ., innerRadius, =]
[return, this, ., innerRadius, ;, }, public, void, setInnerRadius, (, double, radius, ), {, this, ., innerRadius, =, radius, ;]
[., innerRadius, ;, }, public, void, setInnerRadius, (, double, radius, ), {, this, ., innerRadius, =, radius, ;, notifyListeners, (]
[}, public, void, setInnerRadius, (, double, radius, ), {, this, ., innerRadius, =, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getOuterRadius, (, ), {, return]
[=, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getOuterRadius, (, ), {, return]
[public, double, getOuterRadius, (, ), {, return, this, ., outerRadius, ;, }, public, void, setOuterRadius, (, double, radius, ), {]
[public, double, getOuterRadius, (, ), {, return, this, ., outerRadius, ;, }, public, void, setOuterRadius, (, double, radius, ), {]
[), {, return, this, ., outerRadius, ;, }, public, void, setOuterRadius, (, double, radius, ), {, this, ., outerRadius, =]
[return, this, ., outerRadius, ;, }, public, void, setOuterRadius, (, double, radius, ), {, this, ., outerRadius, =, radius, ;]
[., outerRadius, ;, }, public, void, setOuterRadius, (, double, radius, ), {, this, ., outerRadius, =, radius, ;, notifyListeners, (]
[}, public, void, setOuterRadius, (, double, radius, ), {, this, ., outerRadius, =, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, isClippedToWindow, (, ), {, return]
[public, void, draw, (, Graphics2D, g2, ,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, arcRectInner, =]
[public, void, draw, (, Graphics2D, g2, ,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, arcRectInner, =]
[Graphics2D, g2, ,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, arcRectInner, =, DialPlot, ., rectangleByRadius, (]
[,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, arcRectInner, =, DialPlot, ., rectangleByRadius, (, frame, ,]
[,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, arcRectInner, =, DialPlot, ., rectangleByRadius, (, frame, ,]
[Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, arcRectInner, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., innerRadius, ,]
[Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, arcRectInner, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., innerRadius, ,]
[arcRectInner, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., innerRadius, ,, this, ., innerRadius, ), ;, Rectangle2D, arcRectOuter, =]
[arcRectInner, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., innerRadius, ,, this, ., innerRadius, ), ;, Rectangle2D, arcRectOuter, =]
[rectangleByRadius, (, frame, ,, this, ., innerRadius, ,, this, ., innerRadius, ), ;, Rectangle2D, arcRectOuter, =, DialPlot, ., rectangleByRadius, (]
[frame, ,, this, ., innerRadius, ,, this, ., innerRadius, ), ;, Rectangle2D, arcRectOuter, =, DialPlot, ., rectangleByRadius, (, frame, ,]
[frame, ,, this, ., innerRadius, ,, this, ., innerRadius, ), ;, Rectangle2D, arcRectOuter, =, DialPlot, ., rectangleByRadius, (, frame, ,]
[innerRadius, ,, this, ., innerRadius, ), ;, Rectangle2D, arcRectOuter, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., outerRadius, ,]
[innerRadius, ,, this, ., innerRadius, ), ;, Rectangle2D, arcRectOuter, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., outerRadius, ,]
[arcRectOuter, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., outerRadius, ,, this, ., outerRadius, ), ;, DialScale, scale, =]
[arcRectOuter, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., outerRadius, ,, this, ., outerRadius, ), ;, DialScale, scale, =]
[rectangleByRadius, (, frame, ,, this, ., outerRadius, ,, this, ., outerRadius, ), ;, DialScale, scale, =, plot, ., getScale, (]
[rectangleByRadius, (, frame, ,, this, ., outerRadius, ,, this, ., outerRadius, ), ;, DialScale, scale, =, plot, ., getScale, (]
[,, this, ., outerRadius, ), ;, DialScale, scale, =, plot, ., getScale, (, this, ., scaleIndex, ), ;, if, (]
[,, this, ., outerRadius, ), ;, DialScale, scale, =, plot, ., getScale, (, this, ., scaleIndex, ), ;, if, (]
[., outerRadius, ), ;, DialScale, scale, =, plot, ., getScale, (, this, ., scaleIndex, ), ;, if, (, scale, ==]
[DialScale, scale, =, plot, ., getScale, (, this, ., scaleIndex, ), ;, if, (, scale, ==, null, ), {, throw]
[plot, ., getScale, (, this, ., scaleIndex, ), ;, if, (, scale, ==, null, ), {, throw, new, RuntimeException, (]
[plot, ., getScale, (, this, ., scaleIndex, ), ;, if, (, scale, ==, null, ), {, throw, new, RuntimeException, (]
[getScale, (, this, ., scaleIndex, ), ;, if, (, scale, ==, null, ), {, throw, new, RuntimeException, (, "No scale for scaleIndex = ", +]
[getScale, (, this, ., scaleIndex, ), ;, if, (, scale, ==, null, ), {, throw, new, RuntimeException, (, "No scale for scaleIndex = ", +]
[scale, ==, null, ), {, throw, new, RuntimeException, (, "No scale for scaleIndex = ", +, this, ., scaleIndex, ), ;, }, double, angleMin, =]
[scale, ==, null, ), {, throw, new, RuntimeException, (, "No scale for scaleIndex = ", +, this, ., scaleIndex, ), ;, }, double, angleMin, =]
[{, throw, new, RuntimeException, (, "No scale for scaleIndex = ", +, this, ., scaleIndex, ), ;, }, double, angleMin, =, scale, ., valueToAngle, (]
[{, throw, new, RuntimeException, (, "No scale for scaleIndex = ", +, this, ., scaleIndex, ), ;, }, double, angleMin, =, scale, ., valueToAngle, (]
[., scaleIndex, ), ;, }, double, angleMin, =, scale, ., valueToAngle, (, this, ., lowerBound, ), ;, double, angleMax, =]
[., scaleIndex, ), ;, }, double, angleMin, =, scale, ., valueToAngle, (, this, ., lowerBound, ), ;, double, angleMax, =]
[}, double, angleMin, =, scale, ., valueToAngle, (, this, ., lowerBound, ), ;, double, angleMax, =, scale, ., valueToAngle, (]
[}, double, angleMin, =, scale, ., valueToAngle, (, this, ., lowerBound, ), ;, double, angleMax, =, scale, ., valueToAngle, (]
[this, ., lowerBound, ), ;, double, angleMax, =, scale, ., valueToAngle, (, this, ., upperBound, ), ;, Arc2D, arcInner, =]
[double, angleMax, =, scale, ., valueToAngle, (, this, ., upperBound, ), ;, Arc2D, arcInner, =, new, Arc2D, ., Double, (]
[=, scale, ., valueToAngle, (, this, ., upperBound, ), ;, Arc2D, arcInner, =, new, Arc2D, ., Double, (, arcRectInner, ,]
[., valueToAngle, (, this, ., upperBound, ), ;, Arc2D, arcInner, =, new, Arc2D, ., Double, (, arcRectInner, ,, angleMin, ,]
[., valueToAngle, (, this, ., upperBound, ), ;, Arc2D, arcInner, =, new, Arc2D, ., Double, (, arcRectInner, ,, angleMin, ,]
[(, this, ., upperBound, ), ;, Arc2D, arcInner, =, new, Arc2D, ., Double, (, arcRectInner, ,, angleMin, ,, angleMax, -]
[., upperBound, ), ;, Arc2D, arcInner, =, new, Arc2D, ., Double, (, arcRectInner, ,, angleMin, ,, angleMax, -, angleMin, ,]
[., upperBound, ), ;, Arc2D, arcInner, =, new, Arc2D, ., Double, (, arcRectInner, ,, angleMin, ,, angleMax, -, angleMin, ,]
[Arc2D, ., Double, (, arcRectInner, ,, angleMin, ,, angleMax, -, angleMin, ,, Arc2D, ., OPEN, ), ;, Arc2D, arcOuter, =]
[,, angleMin, ,, angleMax, -, angleMin, ,, Arc2D, ., OPEN, ), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (]
[,, angleMax, -, angleMin, ,, Arc2D, ., OPEN, ), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,]
[-, angleMin, ,, Arc2D, ., OPEN, ), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,, angleMax, ,]
[-, angleMin, ,, Arc2D, ., OPEN, ), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,, angleMax, ,]
[,, Arc2D, ., OPEN, ), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,, angleMax, ,, angleMin, -]
[., OPEN, ), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,, angleMax, ,, angleMin, -, angleMax, ,]
[., OPEN, ), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,, angleMax, ,, angleMin, -, angleMax, ,]
[arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,, angleMax, ,, angleMin, -, angleMax, ,, Arc2D, ., OPEN, ), ;]
[arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,, angleMax, ,, angleMin, -, angleMax, ,, Arc2D, ., OPEN, ), ;]
[., Double, (, arcRectOuter, ,, angleMax, ,, angleMin, -, angleMax, ,, Arc2D, ., OPEN, ), ;, g2, ., setPaint, (]
[., Double, (, arcRectOuter, ,, angleMax, ,, angleMin, -, angleMax, ,, Arc2D, ., OPEN, ), ;, g2, ., setPaint, (]
[angleMax, ,, angleMin, -, angleMax, ,, Arc2D, ., OPEN, ), ;, g2, ., setPaint, (, this, ., paint, ), ;]
[angleMax, ,, angleMin, -, angleMax, ,, Arc2D, ., OPEN, ), ;, g2, ., setPaint, (, this, ., paint, ), ;]
[angleMax, ,, Arc2D, ., OPEN, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setStroke, (]
[., OPEN, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setStroke, (, new, BasicStroke, (]
[g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setStroke, (, new, BasicStroke, (, 2.0f, ), ), ;]
[g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setStroke, (, new, BasicStroke, (, 2.0f, ), ), ;]
[this, ., paint, ), ;, g2, ., setStroke, (, new, BasicStroke, (, 2.0f, ), ), ;, g2, ., draw, (]
[), ;, g2, ., setStroke, (, new, BasicStroke, (, 2.0f, ), ), ;, g2, ., draw, (, arcInner, ), ;]
[), ;, g2, ., setStroke, (, new, BasicStroke, (, 2.0f, ), ), ;, g2, ., draw, (, arcInner, ), ;]
[setStroke, (, new, BasicStroke, (, 2.0f, ), ), ;, g2, ., draw, (, arcInner, ), ;, g2, ., draw, (]
[), ;, g2, ., draw, (, arcOuter, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ;, g2, ., draw, (, arcOuter, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[g2, ., draw, (, arcOuter, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[arcOuter, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, StandardDialRange, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, StandardDialRange, ), ), {, return, false, ;, }, StandardDialRange, that, =]
[if, (, !, (, obj, instanceof, StandardDialRange, ), ), {, return, false, ;, }, StandardDialRange, that, =, (, StandardDialRange, )]
[obj, instanceof, StandardDialRange, ), ), {, return, false, ;, }, StandardDialRange, that, =, (, StandardDialRange, ), obj, ;, if, (]
[obj, instanceof, StandardDialRange, ), ), {, return, false, ;, }, StandardDialRange, that, =, (, StandardDialRange, ), obj, ;, if, (]
[obj, instanceof, StandardDialRange, ), ), {, return, false, ;, }, StandardDialRange, that, =, (, StandardDialRange, ), obj, ;, if, (]
[), {, return, false, ;, }, StandardDialRange, that, =, (, StandardDialRange, ), obj, ;, if, (, this, ., scaleIndex, !=]
[), {, return, false, ;, }, StandardDialRange, that, =, (, StandardDialRange, ), obj, ;, if, (, this, ., scaleIndex, !=]
[StandardDialRange, that, =, (, StandardDialRange, ), obj, ;, if, (, this, ., scaleIndex, !=, that, ., scaleIndex, ), {, return]
[), obj, ;, if, (, this, ., scaleIndex, !=, that, ., scaleIndex, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., scaleIndex, !=, that, ., scaleIndex, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., scaleIndex, !=, that, ., scaleIndex, ), {, return, false, ;, }, if, (]
[(, this, ., scaleIndex, !=, that, ., scaleIndex, ), {, return, false, ;, }, if, (, this, ., lowerBound, !=]
[(, this, ., scaleIndex, !=, that, ., scaleIndex, ), {, return, false, ;, }, if, (, this, ., lowerBound, !=]
[., scaleIndex, ), {, return, false, ;, }, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return]
[false, ;, }, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (]
[(, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=]
[(, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=]
[., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return]
[false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, !]
[this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[that, ., upperBound, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[that, ., upperBound, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (]
[PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (]
[PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (]
[this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, this, ., innerRadius, !=]
[this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, this, ., innerRadius, !=]
[paint, ), ), {, return, false, ;, }, if, (, this, ., innerRadius, !=, that, ., innerRadius, ), {, return]
[false, ;, }, if, (, this, ., innerRadius, !=, that, ., innerRadius, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., innerRadius, !=, that, ., innerRadius, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., innerRadius, !=, that, ., innerRadius, ), {, return, false, ;, }, if, (]
[(, this, ., innerRadius, !=, that, ., innerRadius, ), {, return, false, ;, }, if, (, this, ., outerRadius, !=]
[(, this, ., innerRadius, !=, that, ., innerRadius, ), {, return, false, ;, }, if, (, this, ., outerRadius, !=]
[., innerRadius, ), {, return, false, ;, }, if, (, this, ., outerRadius, !=, that, ., outerRadius, ), {, return]
[return, false, ;, }, if, (, this, ., outerRadius, !=, that, ., outerRadius, ), {, return, false, ;, }, return]
[return, false, ;, }, if, (, this, ., outerRadius, !=, that, ., outerRadius, ), {, return, false, ;, }, return]
[if, (, this, ., outerRadius, !=, that, ., outerRadius, ), {, return, false, ;, }, return, super, ., equals, (]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, long, temp, =]
[equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, long, temp, =]
[;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, long, temp, =, Double, ., doubleToLongBits, (]
[;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, long, temp, =, Double, ., doubleToLongBits, (]
[(, ), {, int, result, =, 193, ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., lowerBound, ), ;]
[{, int, result, =, 193, ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., lowerBound, ), ;, result, =]
[{, int, result, =, 193, ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., lowerBound, ), ;, result, =]
[{, int, result, =, 193, ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., lowerBound, ), ;, result, =]
[result, =, 193, ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., lowerBound, ), ;, result, =, 37, *]
[193, ;, long, temp, =, Double, ., doubleToLongBits, (, this, ., lowerBound, ), ;, result, =, 37, *, result, +]
[temp, =, Double, ., doubleToLongBits, (, this, ., lowerBound, ), ;, result, =, 37, *, result, +, (, int, )]
[=, Double, ., doubleToLongBits, (, this, ., lowerBound, ), ;, result, =, 37, *, result, +, (, int, ), (]
[=, Double, ., doubleToLongBits, (, this, ., lowerBound, ), ;, result, =, 37, *, result, +, (, int, ), (]
[., doubleToLongBits, (, this, ., lowerBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[doubleToLongBits, (, this, ., lowerBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[doubleToLongBits, (, this, ., lowerBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[lowerBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[(, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =]
[>, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +]
[temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int, )]
[=, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int, ), (]
[=, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int, ), (]
[., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[upperBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[(, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =]
[>, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +]
[temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +, (, int, )]
[=, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (]
[=, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (]
[., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[innerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (]
[(, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =]
[>, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +]
[temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +, (, int, )]
[=, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (]
[=, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (]
[., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (]
[outerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, result, =]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, result, =]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, result, =]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, result, =, 37, *]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, result, =, 37, *, result, +]
[int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, result, =, 37, *, result, +]
[^, (, temp, >, >, >, 32, ), ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[^, (, temp, >, >, >, 32, ), ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[32, ), ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, return]
[hashCodeForPaint, (, this, ., paint, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[hashCodeForPaint, (, this, ., paint, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[(, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[(, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,]
[this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (]
