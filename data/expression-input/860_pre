[jfree, ., data, ., xy, ., XYDataset, ;, public, class, StackedXYBarRenderer, extends, XYBarRenderer, {, private, static, final, long, serialVersionUID, =]
[., data, ., xy, ., XYDataset, ;, public, class, StackedXYBarRenderer, extends, XYBarRenderer, {, private, static, final, long, serialVersionUID, =, -]
[private, static, final, long, serialVersionUID, =, -, 7049101055533436444L, ;, private, boolean, renderAsPercentages, ;, public, StackedXYBarRenderer, (, ), {, this, (]
[public, StackedXYBarRenderer, (, ), {, this, (, 0.0, ), ;, }, public, StackedXYBarRenderer, (, double, margin, ), {, super, (]
[), {, this, (, 0.0, ), ;, }, public, StackedXYBarRenderer, (, double, margin, ), {, super, (, margin, ), ;]
[), {, this, (, 0.0, ), ;, }, public, StackedXYBarRenderer, (, double, margin, ), {, super, (, margin, ), ;]
[0.0, ), ;, }, public, StackedXYBarRenderer, (, double, margin, ), {, super, (, margin, ), ;, this, ., renderAsPercentages, =]
[StackedXYBarRenderer, (, double, margin, ), {, super, (, margin, ), ;, this, ., renderAsPercentages, =, false, ;, ItemLabelPosition, p, =]
[margin, ), {, super, (, margin, ), ;, this, ., renderAsPercentages, =, false, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (]
[margin, ), {, super, (, margin, ), ;, this, ., renderAsPercentages, =, false, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (]
[(, margin, ), ;, this, ., renderAsPercentages, =, false, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,]
[(, margin, ), ;, this, ., renderAsPercentages, =, false, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,]
[., renderAsPercentages, =, false, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;]
[=, false, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (]
[ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;]
[=, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (]
[(, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;]
[., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (]
[TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;]
[CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (]
[), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return]
[), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return]
[public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {]
[public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {]
[), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {, this, ., renderAsPercentages, =]
[return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {, this, ., renderAsPercentages, =, asPercentages, ;]
[), {, this, ., renderAsPercentages, =, asPercentages, ;, fireChangeEvent, (, ), ;, }, public, int, getPassCount, (, ), {, return]
[XYItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, XYDataset, data, ,, PlotRenderingInfo, info, ), {, return]
[Graphics2D, g2, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, XYDataset, data, ,, PlotRenderingInfo, info, ), {, return, new, XYBarRendererState, (]
[), {, return, new, XYBarRendererState, (, info, ), ;, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (]
[), {, return, new, XYBarRendererState, (, info, ), ;, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (]
[return, new, XYBarRendererState, (, info, ), ;, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=]
[), ;, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, if, (]
[), ;, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, if, (]
[(, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, if, (, this, ., renderAsPercentages, ), {, return]
[), {, if, (, dataset, !=, null, ), {, if, (, this, ., renderAsPercentages, ), {, return, new, Range, (]
[if, (, dataset, !=, null, ), {, if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,]
[if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return]
[if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return]
[renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (]
[return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, (, TableXYDataset, )]
[;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, (, TableXYDataset, ), dataset, ), ;, }, }, else, {, return]
[rangeAxis, ,, XYDataset, dataset, ,, int, series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, if, (]
[,, XYDataset, dataset, ,, int, series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, if, (, !]
[XYDataset, dataset, ,, int, series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, if, (, !, (]
[XYDataset, dataset, ,, int, series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, if, (, !, (]
[XYDataset, dataset, ,, int, series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, if, (, !, (]
[series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, if, (, !, (, dataset, instanceof, IntervalXYDataset, &&]
[series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, if, (, !, (, dataset, instanceof, IntervalXYDataset, &&]
[pass, ), {, if, (, !, (, dataset, instanceof, IntervalXYDataset, &&, dataset, instanceof, TableXYDataset, ), ), {, String, message, =]
[pass, ), {, if, (, !, (, dataset, instanceof, IntervalXYDataset, &&, dataset, instanceof, TableXYDataset, ), ), {, String, message, =]
[pass, ), {, if, (, !, (, dataset, instanceof, IntervalXYDataset, &&, dataset, instanceof, TableXYDataset, ), ), {, String, message, =]
[{, if, (, !, (, dataset, instanceof, IntervalXYDataset, &&, dataset, instanceof, TableXYDataset, ), ), {, String, message, =, "dataset (type ", +]
[{, if, (, !, (, dataset, instanceof, IntervalXYDataset, &&, dataset, instanceof, TableXYDataset, ), ), {, String, message, =, "dataset (type ", +]
[{, if, (, !, (, dataset, instanceof, IntervalXYDataset, &&, dataset, instanceof, TableXYDataset, ), ), {, String, message, =, "dataset (type ", +]
[instanceof, TableXYDataset, ), ), {, String, message, =, "dataset (type ", +, dataset, ., getClass, (, ), ., getName, (, ), +]
[String, message, =, "dataset (type ", +, dataset, ., getClass, (, ), ., getName, (, ), +, ") has wrong type:", ;, boolean, and, =]
[+, dataset, ., getClass, (, ), ., getName, (, ), +, ") has wrong type:", ;, boolean, and, =, false, ;, if, (]
[dataset, ., getClass, (, ), ., getName, (, ), +, ") has wrong type:", ;, boolean, and, =, false, ;, if, (, !]
[dataset, ., getClass, (, ), ., getName, (, ), +, ") has wrong type:", ;, boolean, and, =, false, ;, if, (, !]
[getName, (, ), +, ") has wrong type:", ;, boolean, and, =, false, ;, if, (, !, IntervalXYDataset, ., class, ., isAssignableFrom, (]
[getName, (, ), +, ") has wrong type:", ;, boolean, and, =, false, ;, if, (, !, IntervalXYDataset, ., class, ., isAssignableFrom, (]
[=, false, ;, if, (, !, IntervalXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass, (, ), ), ), {]
[;, if, (, !, IntervalXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass, (, ), ), ), {, message, +=]
[(, !, IntervalXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass, (, ), ), ), {, message, +=, " it is no IntervalXYDataset", ;]
[IntervalXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass, (, ), ), ), {, message, +=, " it is no IntervalXYDataset", ;, and, =]
[(, dataset, ., getClass, (, ), ), ), {, message, +=, " it is no IntervalXYDataset", ;, and, =, true, ;, }, if, (]
[dataset, ., getClass, (, ), ), ), {, message, +=, " it is no IntervalXYDataset", ;, and, =, true, ;, }, if, (, !]
[dataset, ., getClass, (, ), ), ), {, message, +=, " it is no IntervalXYDataset", ;, and, =, true, ;, }, if, (, !]
[), {, message, +=, " it is no IntervalXYDataset", ;, and, =, true, ;, }, if, (, !, TableXYDataset, ., class, ., isAssignableFrom, (]
[), {, message, +=, " it is no IntervalXYDataset", ;, and, =, true, ;, }, if, (, !, TableXYDataset, ., class, ., isAssignableFrom, (]
[}, if, (, !, TableXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass, (, ), ), ), {, if, (]
[!, TableXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass, (, ), ), ), {, if, (, and, ), {]
[., class, ., isAssignableFrom, (, dataset, ., getClass, (, ), ), ), {, if, (, and, ), {, message, +=]
[isAssignableFrom, (, dataset, ., getClass, (, ), ), ), {, if, (, and, ), {, message, +=, " and", ;, }]
[dataset, ., getClass, (, ), ), ), {, if, (, and, ), {, message, +=, " and", ;, }, message, +=]
[), ), ), {, if, (, and, ), {, message, +=, " and", ;, }, message, +=, " it is no TableXYDataset", ;, }, throw]
[{, if, (, and, ), {, message, +=, " and", ;, }, message, +=, " it is no TableXYDataset", ;, }, throw, new, IllegalArgumentException, (]
[+=, " and", ;, }, message, +=, " it is no TableXYDataset", ;, }, throw, new, IllegalArgumentException, (, message, ), ;, }, IntervalXYDataset, intervalDataset, =]
[}, message, +=, " it is no TableXYDataset", ;, }, throw, new, IllegalArgumentException, (, message, ), ;, }, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, )]
[}, throw, new, IllegalArgumentException, (, message, ), ;, }, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset, ;, double, value, =]
[}, throw, new, IllegalArgumentException, (, message, ), ;, }, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset, ;, double, value, =]
[(, message, ), ;, }, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset, ;, double, value, =, intervalDataset, ., getYValue, (]
[), ;, }, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset, ;, double, value, =, intervalDataset, ., getYValue, (, series, ,]
[=, (, IntervalXYDataset, ), dataset, ;, double, value, =, intervalDataset, ., getYValue, (, series, ,, item, ), ;, if, (]
[=, (, IntervalXYDataset, ), dataset, ;, double, value, =, intervalDataset, ., getYValue, (, series, ,, item, ), ;, if, (]
[dataset, ;, double, value, =, intervalDataset, ., getYValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (]
[,, item, ), ;, if, (, Double, ., isNaN, (, value, ), ), {, return, ;, }, double, total, =]
[if, (, Double, ., isNaN, (, value, ), ), {, return, ;, }, double, total, =, 0.0, ;, if, (]
[if, (, Double, ., isNaN, (, value, ), ), {, return, ;, }, double, total, =, 0.0, ;, if, (]
[(, value, ), ), {, return, ;, }, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {]
[), ), {, return, ;, }, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =]
[), ), {, return, ;, }, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =]
[;, }, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =, DatasetUtilities, ., calculateStackTotal, (]
[total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =, DatasetUtilities, ., calculateStackTotal, (, (, TableXYDataset, )]
[0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =, DatasetUtilities, ., calculateStackTotal, (, (, TableXYDataset, ), dataset, ,]
[(, this, ., renderAsPercentages, ), {, total, =, DatasetUtilities, ., calculateStackTotal, (, (, TableXYDataset, ), dataset, ,, item, ), ;]
[., renderAsPercentages, ), {, total, =, DatasetUtilities, ., calculateStackTotal, (, (, TableXYDataset, ), dataset, ,, item, ), ;, value, =]
[., renderAsPercentages, ), {, total, =, DatasetUtilities, ., calculateStackTotal, (, (, TableXYDataset, ), dataset, ,, item, ), ;, value, =]
[), {, total, =, DatasetUtilities, ., calculateStackTotal, (, (, TableXYDataset, ), dataset, ,, item, ), ;, value, =, value, /]
[calculateStackTotal, (, (, TableXYDataset, ), dataset, ,, item, ), ;, value, =, value, /, total, ;, }, double, positiveBase, =]
[dataset, ,, item, ), ;, value, =, value, /, total, ;, }, double, positiveBase, =, 0.0, ;, double, negativeBase, =]
[value, /, total, ;, }, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =]
[total, ;, }, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;]
[total, ;, }, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;]
[}, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <]
[positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <, series, ;]
[positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <, series, ;]
[0.0, ;, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, double, v, =]
[0.0, ;, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, double, v, =]
[int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, double, v, =, dataset, ., getYValue, (]
[=, 0, ;, i, <, series, ;, i, ++, ), {, double, v, =, dataset, ., getYValue, (, i, ,]
[series, ;, i, ++, ), {, double, v, =, dataset, ., getYValue, (, i, ,, item, ), ;, if, (]
[;, i, ++, ), {, double, v, =, dataset, ., getYValue, (, i, ,, item, ), ;, if, (, !]
[;, i, ++, ), {, double, v, =, dataset, ., getYValue, (, i, ,, item, ), ;, if, (, !]
[{, double, v, =, dataset, ., getYValue, (, i, ,, item, ), ;, if, (, !, Double, ., isNaN, (]
[getYValue, (, i, ,, item, ), ;, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (]
[getYValue, (, i, ,, item, ), ;, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (]
[), ;, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, this, ., renderAsPercentages, ), {]
[if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, this, ., renderAsPercentages, ), {, v, =]
[if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, this, ., renderAsPercentages, ), {, v, =]
[!, Double, ., isNaN, (, v, ), ), {, if, (, this, ., renderAsPercentages, ), {, v, =, v, /]
[v, ), ), {, if, (, this, ., renderAsPercentages, ), {, v, =, v, /, total, ;, }, if, (]
[v, ), ), {, if, (, this, ., renderAsPercentages, ), {, v, =, v, /, total, ;, }, if, (]
[), {, if, (, this, ., renderAsPercentages, ), {, v, =, v, /, total, ;, }, if, (, v, >]
[(, this, ., renderAsPercentages, ), {, v, =, v, /, total, ;, }, if, (, v, >, 0, ), {]
[., renderAsPercentages, ), {, v, =, v, /, total, ;, }, if, (, v, >, 0, ), {, positiveBase, =]
[., renderAsPercentages, ), {, v, =, v, /, total, ;, }, if, (, v, >, 0, ), {, positiveBase, =]
[), {, v, =, v, /, total, ;, }, if, (, v, >, 0, ), {, positiveBase, =, positiveBase, +]
[/, total, ;, }, if, (, v, >, 0, ), {, positiveBase, =, positiveBase, +, v, ;, }, else, {]
[;, }, if, (, v, >, 0, ), {, positiveBase, =, positiveBase, +, v, ;, }, else, {, negativeBase, =]
[;, }, if, (, v, >, 0, ), {, positiveBase, =, positiveBase, +, v, ;, }, else, {, negativeBase, =]
[if, (, v, >, 0, ), {, positiveBase, =, positiveBase, +, v, ;, }, else, {, negativeBase, =, negativeBase, +]
[else, {, negativeBase, =, negativeBase, +, v, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, RectangleEdge, edgeR, =]
[else, {, negativeBase, =, negativeBase, +, v, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, RectangleEdge, edgeR, =]
[}, }, }, double, translatedBase, ;, double, translatedValue, ;, RectangleEdge, edgeR, =, plot, ., getRangeAxisEdge, (, ), ;, if, (]
[}, }, }, double, translatedBase, ;, double, translatedValue, ;, RectangleEdge, edgeR, =, plot, ., getRangeAxisEdge, (, ), ;, if, (]
[}, double, translatedBase, ;, double, translatedValue, ;, RectangleEdge, edgeR, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, value, >]
[;, double, translatedValue, ;, RectangleEdge, edgeR, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, ), {]
[translatedValue, ;, RectangleEdge, edgeR, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, ), {, translatedBase, =]
[translatedValue, ;, RectangleEdge, edgeR, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, ), {, translatedBase, =]
[=, plot, ., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (]
[., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,]
[(, ), ;, if, (, value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,]
[if, (, value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, edgeR, ), ;]
[value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =]
[value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =]
[{, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (]
[{, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (]
[=, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +]
[., valueToJava2D, (, positiveBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,]
[(, positiveBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,]
[), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, else, {]
[translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, else, {, translatedBase, =]
[translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, else, {, translatedBase, =]
[valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (]
[positiveBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,]
[value, ,, dataArea, ,, edgeR, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,]
[,, edgeR, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR, ), ;]
[), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =]
[), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =]
[{, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (]
[{, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (]
[=, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +]
[., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,]
[(, negativeBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,]
[;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, RectangleEdge, edgeD, =]
[;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, RectangleEdge, edgeD, =]
[value, ,, dataArea, ,, edgeR, ), ;, }, RectangleEdge, edgeD, =, plot, ., getDomainAxisEdge, (, ), ;, double, startX, =]
[value, ,, dataArea, ,, edgeR, ), ;, }, RectangleEdge, edgeD, =, plot, ., getDomainAxisEdge, (, ), ;, double, startX, =]
[edgeR, ), ;, }, RectangleEdge, edgeD, =, plot, ., getDomainAxisEdge, (, ), ;, double, startX, =, intervalDataset, ., getStartXValue, (]
[;, }, RectangleEdge, edgeD, =, plot, ., getDomainAxisEdge, (, ), ;, double, startX, =, intervalDataset, ., getStartXValue, (, series, ,]
[plot, ., getDomainAxisEdge, (, ), ;, double, startX, =, intervalDataset, ., getStartXValue, (, series, ,, item, ), ;, if, (]
[plot, ., getDomainAxisEdge, (, ), ;, double, startX, =, intervalDataset, ., getStartXValue, (, series, ,, item, ), ;, if, (]
[), ;, double, startX, =, intervalDataset, ., getStartXValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (]
[,, item, ), ;, if, (, Double, ., isNaN, (, startX, ), ), {, return, ;, }, double, translatedStartX, =]
[,, item, ), ;, if, (, Double, ., isNaN, (, startX, ), ), {, return, ;, }, double, translatedStartX, =]
[if, (, Double, ., isNaN, (, startX, ), ), {, return, ;, }, double, translatedStartX, =, domainAxis, ., valueToJava2D, (]
[Double, ., isNaN, (, startX, ), ), {, return, ;, }, double, translatedStartX, =, domainAxis, ., valueToJava2D, (, startX, ,]
[isNaN, (, startX, ), ), {, return, ;, }, double, translatedStartX, =, domainAxis, ., valueToJava2D, (, startX, ,, dataArea, ,]
[return, ;, }, double, translatedStartX, =, domainAxis, ., valueToJava2D, (, startX, ,, dataArea, ,, edgeD, ), ;, double, endX, =]
[return, ;, }, double, translatedStartX, =, domainAxis, ., valueToJava2D, (, startX, ,, dataArea, ,, edgeD, ), ;, double, endX, =]
[translatedStartX, =, domainAxis, ., valueToJava2D, (, startX, ,, dataArea, ,, edgeD, ), ;, double, endX, =, intervalDataset, ., getEndXValue, (]
[domainAxis, ., valueToJava2D, (, startX, ,, dataArea, ,, edgeD, ), ;, double, endX, =, intervalDataset, ., getEndXValue, (, series, ,]
[,, dataArea, ,, edgeD, ), ;, double, endX, =, intervalDataset, ., getEndXValue, (, series, ,, item, ), ;, if, (]
[,, dataArea, ,, edgeD, ), ;, double, endX, =, intervalDataset, ., getEndXValue, (, series, ,, item, ), ;, if, (]
[), ;, double, endX, =, intervalDataset, ., getEndXValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (]
[,, item, ), ;, if, (, Double, ., isNaN, (, endX, ), ), {, return, ;, }, double, translatedEndX, =]
[,, item, ), ;, if, (, Double, ., isNaN, (, endX, ), ), {, return, ;, }, double, translatedEndX, =]
[if, (, Double, ., isNaN, (, endX, ), ), {, return, ;, }, double, translatedEndX, =, domainAxis, ., valueToJava2D, (]
[Double, ., isNaN, (, endX, ), ), {, return, ;, }, double, translatedEndX, =, domainAxis, ., valueToJava2D, (, endX, ,]
[isNaN, (, endX, ), ), {, return, ;, }, double, translatedEndX, =, domainAxis, ., valueToJava2D, (, endX, ,, dataArea, ,]
[return, ;, }, double, translatedEndX, =, domainAxis, ., valueToJava2D, (, endX, ,, dataArea, ,, edgeD, ), ;, double, translatedWidth, =]
[return, ;, }, double, translatedEndX, =, domainAxis, ., valueToJava2D, (, endX, ,, dataArea, ,, edgeD, ), ;, double, translatedWidth, =]
[translatedEndX, =, domainAxis, ., valueToJava2D, (, endX, ,, dataArea, ,, edgeD, ), ;, double, translatedWidth, =, Math, ., max, (]
[domainAxis, ., valueToJava2D, (, endX, ,, dataArea, ,, edgeD, ), ;, double, translatedWidth, =, Math, ., max, (, 1, ,]
[domainAxis, ., valueToJava2D, (, endX, ,, dataArea, ,, edgeD, ), ;, double, translatedWidth, =, Math, ., max, (, 1, ,]
[endX, ,, dataArea, ,, edgeD, ), ;, double, translatedWidth, =, Math, ., max, (, 1, ,, Math, ., abs, (]
[endX, ,, dataArea, ,, edgeD, ), ;, double, translatedWidth, =, Math, ., max, (, 1, ,, Math, ., abs, (]
[dataArea, ,, edgeD, ), ;, double, translatedWidth, =, Math, ., max, (, 1, ,, Math, ., abs, (, translatedEndX, -]
[=, Math, ., max, (, 1, ,, Math, ., abs, (, translatedEndX, -, translatedStartX, ), ), ;, double, translatedHeight, =]
[=, Math, ., max, (, 1, ,, Math, ., abs, (, translatedEndX, -, translatedStartX, ), ), ;, double, translatedHeight, =]
[(, 1, ,, Math, ., abs, (, translatedEndX, -, translatedStartX, ), ), ;, double, translatedHeight, =, Math, ., abs, (]
[(, 1, ,, Math, ., abs, (, translatedEndX, -, translatedStartX, ), ), ;, double, translatedHeight, =, Math, ., abs, (]
[,, Math, ., abs, (, translatedEndX, -, translatedStartX, ), ), ;, double, translatedHeight, =, Math, ., abs, (, translatedValue, -]
[translatedEndX, -, translatedStartX, ), ), ;, double, translatedHeight, =, Math, ., abs, (, translatedValue, -, translatedBase, ), ;, if, (]
[translatedEndX, -, translatedStartX, ), ), ;, double, translatedHeight, =, Math, ., abs, (, translatedValue, -, translatedBase, ), ;, if, (]
[), ;, double, translatedHeight, =, Math, ., abs, (, translatedValue, -, translatedBase, ), ;, if, (, getMargin, (, ), >]
[., abs, (, translatedValue, -, translatedBase, ), ;, if, (, getMargin, (, ), >, 0.0, ), {, double, cut, =]
[., abs, (, translatedValue, -, translatedBase, ), ;, if, (, getMargin, (, ), >, 0.0, ), {, double, cut, =]
[(, translatedValue, -, translatedBase, ), ;, if, (, getMargin, (, ), >, 0.0, ), {, double, cut, =, translatedWidth, *]
[), ;, if, (, getMargin, (, ), >, 0.0, ), {, double, cut, =, translatedWidth, *, getMargin, (, ), ;]
[if, (, getMargin, (, ), >, 0.0, ), {, double, cut, =, translatedWidth, *, getMargin, (, ), ;, translatedWidth, =]
[if, (, getMargin, (, ), >, 0.0, ), {, double, cut, =, translatedWidth, *, getMargin, (, ), ;, translatedWidth, =]
[getMargin, (, ), >, 0.0, ), {, double, cut, =, translatedWidth, *, getMargin, (, ), ;, translatedWidth, =, translatedWidth, -]
[), >, 0.0, ), {, double, cut, =, translatedWidth, *, getMargin, (, ), ;, translatedWidth, =, translatedWidth, -, cut, ;]
[0.0, ), {, double, cut, =, translatedWidth, *, getMargin, (, ), ;, translatedWidth, =, translatedWidth, -, cut, ;, translatedStartX, =]
[0.0, ), {, double, cut, =, translatedWidth, *, getMargin, (, ), ;, translatedWidth, =, translatedWidth, -, cut, ;, translatedStartX, =]
[{, double, cut, =, translatedWidth, *, getMargin, (, ), ;, translatedWidth, =, translatedWidth, -, cut, ;, translatedStartX, =, translatedStartX, +]
[{, double, cut, =, translatedWidth, *, getMargin, (, ), ;, translatedWidth, =, translatedWidth, -, cut, ;, translatedStartX, =, translatedStartX, +]
[cut, =, translatedWidth, *, getMargin, (, ), ;, translatedWidth, =, translatedWidth, -, cut, ;, translatedStartX, =, translatedStartX, +, cut, /]
[), ;, translatedWidth, =, translatedWidth, -, cut, ;, translatedStartX, =, translatedStartX, +, cut, /, 2, ;, }, Rectangle2D, bar, =]
[-, cut, ;, translatedStartX, =, translatedStartX, +, cut, /, 2, ;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =]
[-, cut, ;, translatedStartX, =, translatedStartX, +, cut, /, 2, ;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =]
[/, 2, ;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[/, 2, ;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[null, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =]
[getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (]
[getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (]
[if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, Math, ., min, (]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, Math, ., min, (, translatedBase, ,]
[., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, Math, ., min, (, translatedBase, ,, translatedValue, ), ,]
[), {, bar, =, new, Rectangle2D, ., Double, (, Math, ., min, (, translatedBase, ,, translatedValue, ), ,, translatedEndX, ,]
[bar, =, new, Rectangle2D, ., Double, (, Math, ., min, (, translatedBase, ,, translatedValue, ), ,, translatedEndX, ,, translatedHeight, ,]
[Math, ., min, (, translatedBase, ,, translatedValue, ), ,, translatedEndX, ,, translatedHeight, ,, translatedWidth, ), ;, }, else, if, (]
[Math, ., min, (, translatedBase, ,, translatedValue, ), ,, translatedEndX, ,, translatedHeight, ,, translatedWidth, ), ;, }, else, if, (]
[min, (, translatedBase, ,, translatedValue, ), ,, translatedEndX, ,, translatedHeight, ,, translatedWidth, ), ;, }, else, if, (, orientation, ==]
[min, (, translatedBase, ,, translatedValue, ), ,, translatedEndX, ,, translatedHeight, ,, translatedWidth, ), ;, }, else, if, (, orientation, ==]
[), ,, translatedEndX, ,, translatedHeight, ,, translatedWidth, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[translatedEndX, ,, translatedHeight, ,, translatedWidth, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, bar, =]
[), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, bar, =, new, Rectangle2D, ., Double, (]
[}, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, bar, =, new, Rectangle2D, ., Double, (, translatedStartX, ,]
[}, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, bar, =, new, Rectangle2D, ., Double, (, translatedStartX, ,]
[orientation, ==, PlotOrientation, ., VERTICAL, ), {, bar, =, new, Rectangle2D, ., Double, (, translatedStartX, ,, Math, ., min, (]
[PlotOrientation, ., VERTICAL, ), {, bar, =, new, Rectangle2D, ., Double, (, translatedStartX, ,, Math, ., min, (, translatedBase, ,]
[), {, bar, =, new, Rectangle2D, ., Double, (, translatedStartX, ,, Math, ., min, (, translatedBase, ,, translatedValue, ), ,]
[bar, =, new, Rectangle2D, ., Double, (, translatedStartX, ,, Math, ., min, (, translatedBase, ,, translatedValue, ), ,, translatedWidth, ,]
[translatedStartX, ,, Math, ., min, (, translatedBase, ,, translatedValue, ), ,, translatedWidth, ,, translatedHeight, ), ;, }, boolean, positive, =]
[,, Math, ., min, (, translatedBase, ,, translatedValue, ), ,, translatedWidth, ,, translatedHeight, ), ;, }, boolean, positive, =, (]
[,, Math, ., min, (, translatedBase, ,, translatedValue, ), ,, translatedWidth, ,, translatedHeight, ), ;, }, boolean, positive, =, (]
[., min, (, translatedBase, ,, translatedValue, ), ,, translatedWidth, ,, translatedHeight, ), ;, }, boolean, positive, =, (, value, >]
[), ,, translatedWidth, ,, translatedHeight, ), ;, }, boolean, positive, =, (, value, >, 0.0, ), ;, boolean, inverted, =]
[), ,, translatedWidth, ,, translatedHeight, ), ;, }, boolean, positive, =, (, value, >, 0.0, ), ;, boolean, inverted, =]
[(, value, >, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (]
[(, value, >, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (]
[>, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[>, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&]
[), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||]
[), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||]
[;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !]
[barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {]
[PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =]
[PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =]
[positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {]
[inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&]
[RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !]
[}, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||]
[}, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||]
[else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !]
[barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&]
[., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =]
[positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {]
[!, inverted, ||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =]
[!, inverted, ||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =]
[{, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if, (]
[{, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if, (]
[=, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if, (, pass, ==]
[}, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if, (, pass, ==, 0, ), {, if, (]
[RectangleEdge, ., TOP, ;, }, }, if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {]
[RectangleEdge, ., TOP, ;, }, }, if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {]
[if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, getBarPainter, (, ), ., paintBarShadow, (]
[pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,]
[0, ), {, if, (, getShadowsVisible, (, ), ), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,]
[{, if, (, getShadowsVisible, (, ), ), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, series, ,]
[(, getShadowsVisible, (, ), ), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, series, ,, item, ,]
[(, ), ), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, series, ,, item, ,, selected, ,]
[), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,]
[getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ,]
[this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ,, false, ), ;, }, }, else, if, (]
[this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ,, false, ), ;, }, }, else, if, (]
[series, ,, item, ,, selected, ,, bar, ,, barBase, ,, false, ), ;, }, }, else, if, (, pass, ==]
[,, selected, ,, bar, ,, barBase, ,, false, ), ;, }, }, else, if, (, pass, ==, 1, ), {]
[,, selected, ,, bar, ,, barBase, ,, false, ), ;, }, }, else, if, (, pass, ==, 1, ), {]
[,, false, ), ;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (]
[), ;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,]
[}, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,]
[else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, series, ,]
[(, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, series, ,, item, ,]
[==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, series, ,, item, ,, selected, ,]
[), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,]
[., paintBar, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ), ;, if, (]
[., paintBar, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ), ;, if, (]
[., paintBar, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ), ;, if, (]
[,, series, ,, item, ,, selected, ,, bar, ,, barBase, ), ;, if, (, state, ., getInfo, (, ), !=]
[,, bar, ,, barBase, ), ;, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =]
[,, bar, ,, barBase, ), ;, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =]
[,, bar, ,, barBase, ), ;, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =]
[,, bar, ,, barBase, ), ;, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =]
[{, EntityCollection, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (]
[{, EntityCollection, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (]
[entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=]
[., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[(, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[(, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[(, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,, item, ,]
[(, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,, item, ,, selected, ,]
[(, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,, item, ,, selected, ,]
[addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,, item, ,, selected, ,, bar, ., getCenterX, (, ), ,]
[addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,, item, ,, selected, ,, bar, ., getCenterX, (, ), ,]
[,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY, (, ), ), ;, }, }, }, else, if, (]
[,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY, (, ), ), ;, }, }, }, else, if, (]
[., getCenterX, (, ), ,, bar, ., getCenterY, (, ), ), ;, }, }, }, else, if, (, pass, ==]
[bar, ., getCenterY, (, ), ), ;, }, }, }, else, if, (, pass, ==, 2, ), {, if, (]
[getCenterY, (, ), ), ;, }, }, }, else, if, (, pass, ==, 2, ), {, if, (, isItemLabelVisible, (]
[), ), ;, }, }, }, else, if, (, pass, ==, 2, ), {, if, (, isItemLabelVisible, (, series, ,]
[;, }, }, }, else, if, (, pass, ==, 2, ), {, if, (, isItemLabelVisible, (, series, ,, item, ,]
[pass, ==, 2, ), {, if, (, isItemLabelVisible, (, series, ,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =]
[2, ), {, if, (, isItemLabelVisible, (, series, ,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (]
[{, if, (, isItemLabelVisible, (, series, ,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,]
[(, isItemLabelVisible, (, series, ,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,]
[series, ,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;]
[item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;, drawItemLabelForBar, (]
[selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2, ,]
[), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot, ,]
[XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,]
[=, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,]
[(, series, ,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,]
[,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,]
[,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,]
[), ;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,, bar, ,]
[), ;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,, bar, ,]
[drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,, bar, ,, value, <]
[bar, ,, value, <, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[bar, ,, value, <, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[value, <, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, StackedXYBarRenderer, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, StackedXYBarRenderer, ), ), {, return, false, ;, }, StackedXYBarRenderer, that, =]
[if, (, !, (, obj, instanceof, StackedXYBarRenderer, ), ), {, return, false, ;, }, StackedXYBarRenderer, that, =, (, StackedXYBarRenderer, )]
[obj, instanceof, StackedXYBarRenderer, ), ), {, return, false, ;, }, StackedXYBarRenderer, that, =, (, StackedXYBarRenderer, ), obj, ;, if, (]
[obj, instanceof, StackedXYBarRenderer, ), ), {, return, false, ;, }, StackedXYBarRenderer, that, =, (, StackedXYBarRenderer, ), obj, ;, if, (]
[obj, instanceof, StackedXYBarRenderer, ), ), {, return, false, ;, }, StackedXYBarRenderer, that, =, (, StackedXYBarRenderer, ), obj, ;, if, (]
[), {, return, false, ;, }, StackedXYBarRenderer, that, =, (, StackedXYBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=]
[), {, return, false, ;, }, StackedXYBarRenderer, that, =, (, StackedXYBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=]
[StackedXYBarRenderer, that, =, (, StackedXYBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return]
[StackedXYBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return]
[StackedXYBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return]
[if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals, (]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[(, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, result, =]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, result, =]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, result, =]
[}, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, result, =, result, *]
[int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, result, =, result, *, 37, +]
[hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, result, =, result, *, 37, +, (]
[hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, result, =, result, *, 37, +, (]
[hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, result, =, result, *, 37, +, (]
[int, result, =, super, ., hashCode, (, ), ;, result, =, result, *, 37, +, (, this, ., renderAsPercentages, ?]
[=, super, ., hashCode, (, ), ;, result, =, result, *, 37, +, (, this, ., renderAsPercentages, ?, 1, :]
[(, ), ;, result, =, result, *, 37, +, (, this, ., renderAsPercentages, ?, 1, :, 0, ), ;, return]
