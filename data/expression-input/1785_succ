[;, private, double, width, ;, private, Range, widthRange, ;, private, LengthConstraintType, widthConstraintType, ;, private, double, height, ;, private, Range, heightRange]
[,, null, ,, LengthConstraintType, ., NONE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, private, double, width, ;]
[,, LengthConstraintType, ., NONE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, private, double, width, ;, private, Range]
[,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, private, double, width, ;, private, Range, widthRange, ;, private, LengthConstraintType]
[., NONE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, private, double, width, ;, private, Range, widthRange, ;]
[,, null, ,, LengthConstraintType, ., NONE, ), ;, private, double, width, ;, private, Range, widthRange, ;, private, LengthConstraintType, widthConstraintType, ;]
[,, LengthConstraintType, ., NONE, ), ;, private, double, width, ;, private, Range, widthRange, ;, private, LengthConstraintType, widthConstraintType, ;, private, double]
[), ;, private, double, width, ;, private, Range, widthRange, ;, private, LengthConstraintType, widthConstraintType, ;, private, double, height, ;, private, Range]
[., NONE, ), ;, private, double, width, ;, private, Range, widthRange, ;, private, LengthConstraintType, widthConstraintType, ;, private, double, height, ;]
[,, null, ,, LengthConstraintType, ., FIXED, ,, h, ,, null, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, (]
[,, LengthConstraintType, ., FIXED, ,, h, ,, null, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, (, Range, w]
[,, h, ,, null, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, (, Range, w, ,, Range, h, )]
[., FIXED, ,, h, ,, null, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, (, Range, w, ,, Range]
[,, null, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, (, Range, w, ,, Range, h, ), {, this]
[,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, (, Range, w, ,, Range, h, ), {, this, (, 0.0]
[), ;, }, public, RectangleConstraint, (, Range, w, ,, Range, h, ), {, this, (, 0.0, ,, w, ,, LengthConstraintType]
[., FIXED, ), ;, }, public, RectangleConstraint, (, Range, w, ,, Range, h, ), {, this, (, 0.0, ,, w]
[,, w, ,, LengthConstraintType, ., RANGE, ,, 0.0, ,, h, ,, LengthConstraintType, ., RANGE, ), ;, }, public, RectangleConstraint, (]
[,, LengthConstraintType, ., RANGE, ,, 0.0, ,, h, ,, LengthConstraintType, ., RANGE, ), ;, }, public, RectangleConstraint, (, Range, w]
[,, 0.0, ,, h, ,, LengthConstraintType, ., RANGE, ), ;, }, public, RectangleConstraint, (, Range, w, ,, double, h, )]
[., RANGE, ,, 0.0, ,, h, ,, LengthConstraintType, ., RANGE, ), ;, }, public, RectangleConstraint, (, Range, w, ,, double]
[,, h, ,, LengthConstraintType, ., RANGE, ), ;, }, public, RectangleConstraint, (, Range, w, ,, double, h, ), {, this]
[,, LengthConstraintType, ., RANGE, ), ;, }, public, RectangleConstraint, (, Range, w, ,, double, h, ), {, this, (, 0.0]
[), ;, }, public, RectangleConstraint, (, Range, w, ,, double, h, ), {, this, (, 0.0, ,, w, ,, LengthConstraintType]
[., RANGE, ), ;, }, public, RectangleConstraint, (, Range, w, ,, double, h, ), {, this, (, 0.0, ,, w]
[,, w, ,, LengthConstraintType, ., RANGE, ,, h, ,, null, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, (]
[,, LengthConstraintType, ., RANGE, ,, h, ,, null, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, (, double, w]
[,, h, ,, null, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, (, double, w, ,, Range, h, )]
[., RANGE, ,, h, ,, null, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, (, double, w, ,, Range]
[,, null, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, (, double, w, ,, Range, h, ), {, this]
[,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, (, double, w, ,, Range, h, ), {, this, (, w]
[), ;, }, public, RectangleConstraint, (, double, w, ,, Range, h, ), {, this, (, w, ,, null, ,, LengthConstraintType]
[., FIXED, ), ;, }, public, RectangleConstraint, (, double, w, ,, Range, h, ), {, this, (, w, ,, null]
[,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, h, ,, LengthConstraintType, ., RANGE, ), ;, }, public, RectangleConstraint, (]
[,, LengthConstraintType, ., FIXED, ,, 0.0, ,, h, ,, LengthConstraintType, ., RANGE, ), ;, }, public, RectangleConstraint, (, double, w]
[,, 0.0, ,, h, ,, LengthConstraintType, ., RANGE, ), ;, }, public, RectangleConstraint, (, double, w, ,, Range, widthRange, ,]
[., FIXED, ,, 0.0, ,, h, ,, LengthConstraintType, ., RANGE, ), ;, }, public, RectangleConstraint, (, double, w, ,, Range]
[,, h, ,, LengthConstraintType, ., RANGE, ), ;, }, public, RectangleConstraint, (, double, w, ,, Range, widthRange, ,, LengthConstraintType, widthConstraintType]
[,, LengthConstraintType, ., RANGE, ), ;, }, public, RectangleConstraint, (, double, w, ,, Range, widthRange, ,, LengthConstraintType, widthConstraintType, ,, double]
[), ;, }, public, RectangleConstraint, (, double, w, ,, Range, widthRange, ,, LengthConstraintType, widthConstraintType, ,, double, h, ,, Range, heightRange]
[., RANGE, ), ;, }, public, RectangleConstraint, (, double, w, ,, Range, widthRange, ,, LengthConstraintType, widthConstraintType, ,, double, h, ,]
[), {, throw, new, IllegalArgumentException, (, "Null 'widthType' argument.", ), ;, }, if, (, heightConstraintType, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'widthType' argument.", ), ;, }, if, (, heightConstraintType, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'widthType' argument.", ), ;, }, if, (, heightConstraintType, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, heightConstraintType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'heightType' argument.", ), ;, }, this, ., width]
[), ;, }, if, (, heightConstraintType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'heightType' argument.", ), ;, }, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'heightType' argument.", ), ;, }, this, ., width, =, w, ;, this, ., widthRange, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'heightType' argument.", ), ;, }, this, ., width, =, w, ;, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'heightType' argument.", ), ;, }, this, ., width, =, w, ;, this, ., widthRange, =]
[;, }, this, ., width, =, w, ;, this, ., widthRange, =, widthRange, ;, this, ., widthConstraintType, =, widthConstraintType, ;]
[), ;, }, this, ., width, =, w, ;, this, ., widthRange, =, widthRange, ;, this, ., widthConstraintType, =, widthConstraintType]
[=, w, ;, this, ., widthRange, =, widthRange, ;, this, ., widthConstraintType, =, widthConstraintType, ;, this, ., height, =, h]
[., width, =, w, ;, this, ., widthRange, =, widthRange, ;, this, ., widthConstraintType, =, widthConstraintType, ;, this, ., height]
[;, this, ., widthRange, =, widthRange, ;, this, ., widthConstraintType, =, widthConstraintType, ;, this, ., height, =, h, ;, this]
[=, widthRange, ;, this, ., widthConstraintType, =, widthConstraintType, ;, this, ., height, =, h, ;, this, ., heightRange, =, heightRange]
[., widthRange, =, widthRange, ;, this, ., widthConstraintType, =, widthConstraintType, ;, this, ., height, =, h, ;, this, ., heightRange]
[;, this, ., widthConstraintType, =, widthConstraintType, ;, this, ., height, =, h, ;, this, ., heightRange, =, heightRange, ;, this]
[=, widthConstraintType, ;, this, ., height, =, h, ;, this, ., heightRange, =, heightRange, ;, this, ., heightConstraintType, =, heightConstraintType]
[., widthConstraintType, =, widthConstraintType, ;, this, ., height, =, h, ;, this, ., heightRange, =, heightRange, ;, this, ., heightConstraintType]
[;, this, ., height, =, h, ;, this, ., heightRange, =, heightRange, ;, this, ., heightConstraintType, =, heightConstraintType, ;, }]
[=, h, ;, this, ., heightRange, =, heightRange, ;, this, ., heightConstraintType, =, heightConstraintType, ;, }, public, double, getWidth, (]
[., height, =, h, ;, this, ., heightRange, =, heightRange, ;, this, ., heightConstraintType, =, heightConstraintType, ;, }, public, double]
[;, this, ., heightRange, =, heightRange, ;, this, ., heightConstraintType, =, heightConstraintType, ;, }, public, double, getWidth, (, ), {]
[=, heightRange, ;, this, ., heightConstraintType, =, heightConstraintType, ;, }, public, double, getWidth, (, ), {, return, this, ., width]
[., heightRange, =, heightRange, ;, this, ., heightConstraintType, =, heightConstraintType, ;, }, public, double, getWidth, (, ), {, return, this]
[;, this, ., heightConstraintType, =, heightConstraintType, ;, }, public, double, getWidth, (, ), {, return, this, ., width, ;, }]
[=, heightConstraintType, ;, }, public, double, getWidth, (, ), {, return, this, ., width, ;, }, public, Range, getWidthRange, (]
[., heightConstraintType, =, heightConstraintType, ;, }, public, double, getWidth, (, ), {, return, this, ., width, ;, }, public, Range]
[;, }, public, double, getWidth, (, ), {, return, this, ., width, ;, }, public, Range, getWidthRange, (, ), {]
[;, }, public, Range, getWidthRange, (, ), {, return, this, ., widthRange, ;, }, public, LengthConstraintType, getWidthConstraintType, (, ), {]
[., width, ;, }, public, Range, getWidthRange, (, ), {, return, this, ., widthRange, ;, }, public, LengthConstraintType, getWidthConstraintType, (]
[;, }, public, LengthConstraintType, getWidthConstraintType, (, ), {, return, this, ., widthConstraintType, ;, }, public, double, getHeight, (, ), {]
[., widthRange, ;, }, public, LengthConstraintType, getWidthConstraintType, (, ), {, return, this, ., widthConstraintType, ;, }, public, double, getHeight, (]
[;, }, public, double, getHeight, (, ), {, return, this, ., height, ;, }, public, Range, getHeightRange, (, ), {]
[., widthConstraintType, ;, }, public, double, getHeight, (, ), {, return, this, ., height, ;, }, public, Range, getHeightRange, (]
[;, }, public, Range, getHeightRange, (, ), {, return, this, ., heightRange, ;, }, public, LengthConstraintType, getHeightConstraintType, (, ), {]
[., height, ;, }, public, Range, getHeightRange, (, ), {, return, this, ., heightRange, ;, }, public, LengthConstraintType, getHeightConstraintType, (]
[;, }, public, LengthConstraintType, getHeightConstraintType, (, ), {, return, this, ., heightConstraintType, ;, }, public, RectangleConstraint, toUnconstrainedWidth, (, ), {]
[., heightRange, ;, }, public, LengthConstraintType, getHeightConstraintType, (, ), {, return, this, ., heightConstraintType, ;, }, public, RectangleConstraint, toUnconstrainedWidth, (]
[;, }, public, RectangleConstraint, toUnconstrainedWidth, (, ), {, if, (, this, ., widthConstraintType, ==, LengthConstraintType, ., NONE, ), {, return]
[., heightConstraintType, ;, }, public, RectangleConstraint, toUnconstrainedWidth, (, ), {, if, (, this, ., widthConstraintType, ==, LengthConstraintType, ., NONE, )]
[), {, return, this, ;, }, else, {, return, new, RectangleConstraint, (, this, ., width, ,, this, ., widthRange, ,]
[==, LengthConstraintType, ., NONE, ), {, return, this, ;, }, else, {, return, new, RectangleConstraint, (, this, ., width, ,]
[., widthConstraintType, ==, LengthConstraintType, ., NONE, ), {, return, this, ;, }, else, {, return, new, RectangleConstraint, (, this, .]
[), {, return, this, ;, }, else, {, return, new, RectangleConstraint, (, this, ., width, ,, this, ., widthRange, ,]
[., NONE, ), {, return, this, ;, }, else, {, return, new, RectangleConstraint, (, this, ., width, ,, this, .]
[;, }, else, {, return, new, RectangleConstraint, (, this, ., width, ,, this, ., widthRange, ,, LengthConstraintType, ., NONE, ,]
[;, }, }, public, RectangleConstraint, toUnconstrainedHeight, (, ), {, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {]
[,, this, ., widthRange, ,, LengthConstraintType, ., NONE, ,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType]
[., width, ,, this, ., widthRange, ,, LengthConstraintType, ., NONE, ,, this, ., height, ,, this, ., heightRange, ,, this]
[,, LengthConstraintType, ., NONE, ,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, }]
[., widthRange, ,, LengthConstraintType, ., NONE, ,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;]
[,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, }, public, RectangleConstraint, toUnconstrainedHeight, (]
[., NONE, ,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, }, public, RectangleConstraint]
[,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, }, public, RectangleConstraint, toUnconstrainedHeight, (, ), {, if, (]
[., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, }, public, RectangleConstraint, toUnconstrainedHeight, (, ), {]
[,, this, ., heightConstraintType, ), ;, }, }, public, RectangleConstraint, toUnconstrainedHeight, (, ), {, if, (, this, ., heightConstraintType, ==]
[., heightRange, ,, this, ., heightConstraintType, ), ;, }, }, public, RectangleConstraint, toUnconstrainedHeight, (, ), {, if, (, this, .]
[), ;, }, }, public, RectangleConstraint, toUnconstrainedHeight, (, ), {, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, )]
[., heightConstraintType, ), ;, }, }, public, RectangleConstraint, toUnconstrainedHeight, (, ), {, if, (, this, ., heightConstraintType, ==, LengthConstraintType, .]
[), {, return, this, ;, }, else, {, return, new, RectangleConstraint, (, this, ., width, ,, this, ., widthRange, ,]
[==, LengthConstraintType, ., NONE, ), {, return, this, ;, }, else, {, return, new, RectangleConstraint, (, this, ., width, ,]
[., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, return, this, ;, }, else, {, return, new, RectangleConstraint, (, this, .]
[), {, return, this, ;, }, else, {, return, new, RectangleConstraint, (, this, ., width, ,, this, ., widthRange, ,]
[., NONE, ), {, return, this, ;, }, else, {, return, new, RectangleConstraint, (, this, ., width, ,, this, .]
[;, }, else, {, return, new, RectangleConstraint, (, this, ., width, ,, this, ., widthRange, ,, this, ., widthConstraintType, ,]
[;, }, }, public, RectangleConstraint, toFixedWidth, (, double, width, ), {, return, new, RectangleConstraint, (, width, ,, this, ., widthRange]
[,, this, ., widthRange, ,, this, ., widthConstraintType, ,, 0.0, ,, this, ., heightRange, ,, LengthConstraintType, ., NONE, ), ;]
[., width, ,, this, ., widthRange, ,, this, ., widthConstraintType, ,, 0.0, ,, this, ., heightRange, ,, LengthConstraintType, ., NONE]
[,, this, ., widthConstraintType, ,, 0.0, ,, this, ., heightRange, ,, LengthConstraintType, ., NONE, ), ;, }, }, public, RectangleConstraint]
[., widthRange, ,, this, ., widthConstraintType, ,, 0.0, ,, this, ., heightRange, ,, LengthConstraintType, ., NONE, ), ;, }, }]
[,, 0.0, ,, this, ., heightRange, ,, LengthConstraintType, ., NONE, ), ;, }, }, public, RectangleConstraint, toFixedWidth, (, double, width]
[., widthConstraintType, ,, 0.0, ,, this, ., heightRange, ,, LengthConstraintType, ., NONE, ), ;, }, }, public, RectangleConstraint, toFixedWidth, (]
[,, this, ., heightRange, ,, LengthConstraintType, ., NONE, ), ;, }, }, public, RectangleConstraint, toFixedWidth, (, double, width, ), {]
[,, LengthConstraintType, ., NONE, ), ;, }, }, public, RectangleConstraint, toFixedWidth, (, double, width, ), {, return, new, RectangleConstraint, (]
[., heightRange, ,, LengthConstraintType, ., NONE, ), ;, }, }, public, RectangleConstraint, toFixedWidth, (, double, width, ), {, return, new]
[), ;, }, }, public, RectangleConstraint, toFixedWidth, (, double, width, ), {, return, new, RectangleConstraint, (, width, ,, this, .]
[., NONE, ), ;, }, }, public, RectangleConstraint, toFixedWidth, (, double, width, ), {, return, new, RectangleConstraint, (, width, ,]
[;, }, public, RectangleConstraint, toFixedHeight, (, double, height, ), {, return, new, RectangleConstraint, (, this, ., width, ,, this, .]
[,, this, ., widthRange, ,, LengthConstraintType, ., FIXED, ,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType]
[,, LengthConstraintType, ., FIXED, ,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, public]
[., widthRange, ,, LengthConstraintType, ., FIXED, ,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;]
[,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, public, RectangleConstraint, toFixedHeight, (, double]
[., FIXED, ,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, public, RectangleConstraint, toFixedHeight]
[,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, public, RectangleConstraint, toFixedHeight, (, double, height, ), {, return]
[., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, public, RectangleConstraint, toFixedHeight, (, double, height, )]
[,, this, ., heightConstraintType, ), ;, }, public, RectangleConstraint, toFixedHeight, (, double, height, ), {, return, new, RectangleConstraint, (, this]
[., heightRange, ,, this, ., heightConstraintType, ), ;, }, public, RectangleConstraint, toFixedHeight, (, double, height, ), {, return, new, RectangleConstraint]
[), ;, }, public, RectangleConstraint, toFixedHeight, (, double, height, ), {, return, new, RectangleConstraint, (, this, ., width, ,, this]
[., heightConstraintType, ), ;, }, public, RectangleConstraint, toFixedHeight, (, double, height, ), {, return, new, RectangleConstraint, (, this, ., width]
[;, }, public, RectangleConstraint, toRangeWidth, (, Range, range, ), {, if, (, range, ==, null, ), {, throw, new, IllegalArgumentException]
[,, this, ., widthRange, ,, this, ., widthConstraintType, ,, height, ,, this, ., heightRange, ,, LengthConstraintType, ., FIXED, ), ;]
[., width, ,, this, ., widthRange, ,, this, ., widthConstraintType, ,, height, ,, this, ., heightRange, ,, LengthConstraintType, ., FIXED]
[,, this, ., widthConstraintType, ,, height, ,, this, ., heightRange, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, toRangeWidth]
[., widthRange, ,, this, ., widthConstraintType, ,, height, ,, this, ., heightRange, ,, LengthConstraintType, ., FIXED, ), ;, }, public]
[,, height, ,, this, ., heightRange, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, toRangeWidth, (, Range, range, )]
[., widthConstraintType, ,, height, ,, this, ., heightRange, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, toRangeWidth, (, Range]
[,, this, ., heightRange, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, toRangeWidth, (, Range, range, ), {, if]
[,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, toRangeWidth, (, Range, range, ), {, if, (, range, ==, null]
[., heightRange, ,, LengthConstraintType, ., FIXED, ), ;, }, public, RectangleConstraint, toRangeWidth, (, Range, range, ), {, if, (, range]
[), ;, }, public, RectangleConstraint, toRangeWidth, (, Range, range, ), {, if, (, range, ==, null, ), {, throw, new]
[., FIXED, ), ;, }, public, RectangleConstraint, toRangeWidth, (, Range, range, ), {, if, (, range, ==, null, ), {]
[), {, throw, new, IllegalArgumentException, (, "Null 'range' argument.", ), ;, }, return, new, RectangleConstraint, (, range, ., getUpperBound, (, ), ,]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'range' argument.", ), ;, }, return, new, RectangleConstraint, (, range, ., getUpperBound, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'range' argument.", ), ;, }, return, new, RectangleConstraint, (, range, ., getUpperBound, (, ), ,]
[;, }, return, new, RectangleConstraint, (, range, ., getUpperBound, (, ), ,, range, ,, LengthConstraintType, ., RANGE, ,, this, .]
[), ;, }, return, new, RectangleConstraint, (, range, ., getUpperBound, (, ), ,, range, ,, LengthConstraintType, ., RANGE, ,, this]
[;, }, public, RectangleConstraint, toRangeHeight, (, Range, range, ), {, if, (, range, ==, null, ), {, throw, new, IllegalArgumentException]
[,, range, ,, LengthConstraintType, ., RANGE, ,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;]
[., getUpperBound, (, ), ,, range, ,, LengthConstraintType, ., RANGE, ,, this, ., height, ,, this, ., heightRange, ,, this]
[,, LengthConstraintType, ., RANGE, ,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, public]
[,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, public, RectangleConstraint, toRangeHeight, (, Range]
[., RANGE, ,, this, ., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, public, RectangleConstraint, toRangeHeight]
[,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, public, RectangleConstraint, toRangeHeight, (, Range, range, ), {, if]
[., height, ,, this, ., heightRange, ,, this, ., heightConstraintType, ), ;, }, public, RectangleConstraint, toRangeHeight, (, Range, range, )]
[,, this, ., heightConstraintType, ), ;, }, public, RectangleConstraint, toRangeHeight, (, Range, range, ), {, if, (, range, ==, null]
[., heightRange, ,, this, ., heightConstraintType, ), ;, }, public, RectangleConstraint, toRangeHeight, (, Range, range, ), {, if, (, range]
[), ;, }, public, RectangleConstraint, toRangeHeight, (, Range, range, ), {, if, (, range, ==, null, ), {, throw, new]
[., heightConstraintType, ), ;, }, public, RectangleConstraint, toRangeHeight, (, Range, range, ), {, if, (, range, ==, null, ), {]
[), {, throw, new, IllegalArgumentException, (, "Null 'range' argument.", ), ;, }, return, new, RectangleConstraint, (, this, ., width, ,, this, .]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'range' argument.", ), ;, }, return, new, RectangleConstraint, (, this, ., width, ,]
[), {, throw, new, IllegalArgumentException, (, "Null 'range' argument.", ), ;, }, return, new, RectangleConstraint, (, this, ., width, ,, this, .]
[;, }, return, new, RectangleConstraint, (, this, ., width, ,, this, ., widthRange, ,, this, ., widthConstraintType, ,, range, .]
[), ;, }, return, new, RectangleConstraint, (, this, ., width, ,, this, ., widthRange, ,, this, ., widthConstraintType, ,, range]
[;, }, public, String, toString, (, ), {, return, "RectangleConstraint[", +, this, ., widthConstraintType, ., toString, (, ), +, ": width="]
[,, this, ., widthRange, ,, this, ., widthConstraintType, ,, range, ., getUpperBound, (, ), ,, range, ,, LengthConstraintType, ., RANGE]
[., width, ,, this, ., widthRange, ,, this, ., widthConstraintType, ,, range, ., getUpperBound, (, ), ,, range, ,, LengthConstraintType]
[,, this, ., widthConstraintType, ,, range, ., getUpperBound, (, ), ,, range, ,, LengthConstraintType, ., RANGE, ), ;, }, public]
[., widthRange, ,, this, ., widthConstraintType, ,, range, ., getUpperBound, (, ), ,, range, ,, LengthConstraintType, ., RANGE, ), ;]
[,, range, ., getUpperBound, (, ), ,, range, ,, LengthConstraintType, ., RANGE, ), ;, }, public, String, toString, (, )]
[., widthConstraintType, ,, range, ., getUpperBound, (, ), ,, range, ,, LengthConstraintType, ., RANGE, ), ;, }, public, String, toString]
[,, range, ,, LengthConstraintType, ., RANGE, ), ;, }, public, String, toString, (, ), {, return, "RectangleConstraint[", +, this, .]
[., getUpperBound, (, ), ,, range, ,, LengthConstraintType, ., RANGE, ), ;, }, public, String, toString, (, ), {, return]
[,, LengthConstraintType, ., RANGE, ), ;, }, public, String, toString, (, ), {, return, "RectangleConstraint[", +, this, ., widthConstraintType, .]
[), ;, }, public, String, toString, (, ), {, return, "RectangleConstraint[", +, this, ., widthConstraintType, ., toString, (, ), +]
[., RANGE, ), ;, }, public, String, toString, (, ), {, return, "RectangleConstraint[", +, this, ., widthConstraintType, ., toString, (]
[;, }, public, Size2D, calculateConstrainedSize, (, Size2D, base, ), {, Size2D, result, =, new, Size2D, (, ), ;, if, (]
[+, "]", ;, }, public, Size2D, calculateConstrainedSize, (, Size2D, base, ), {, Size2D, result, =, new, Size2D, (, ), ;]
[+, this, ., height, +, "]", ;, }, public, Size2D, calculateConstrainedSize, (, Size2D, base, ), {, Size2D, result, =, new]
[+, ", height=", +, this, ., height, +, "]", ;, }, public, Size2D, calculateConstrainedSize, (, Size2D, base, ), {, Size2D, result]
[+, this, ., width, +, ", height=", +, this, ., height, +, "]", ;, }, public, Size2D, calculateConstrainedSize, (, Size2D, base]
[+, ": width=", +, this, ., width, +, ", height=", +, this, ., height, +, "]", ;, }, public, Size2D, calculateConstrainedSize, (]
[+, this, ., widthConstraintType, ., toString, (, ), +, ": width=", +, this, ., width, +, ", height=", +, this, ., height]
[+, ": width=", +, this, ., width, +, ", height=", +, this, ., height, +, "]", ;, }, public, Size2D, calculateConstrainedSize, (]
[., toString, (, ), +, ": width=", +, this, ., width, +, ", height=", +, this, ., height, +, "]", ;, }]
[., widthConstraintType, ., toString, (, ), +, ": width=", +, this, ., width, +, ", height=", +, this, ., height, +, "]"]
[+, this, ., width, +, ", height=", +, this, ., height, +, "]", ;, }, public, Size2D, calculateConstrainedSize, (, Size2D, base]
[+, ", height=", +, this, ., height, +, "]", ;, }, public, Size2D, calculateConstrainedSize, (, Size2D, base, ), {, Size2D, result]
[., width, +, ", height=", +, this, ., height, +, "]", ;, }, public, Size2D, calculateConstrainedSize, (, Size2D, base, ), {]
[+, this, ., height, +, "]", ;, }, public, Size2D, calculateConstrainedSize, (, Size2D, base, ), {, Size2D, result, =, new]
[+, "]", ;, }, public, Size2D, calculateConstrainedSize, (, Size2D, base, ), {, Size2D, result, =, new, Size2D, (, ), ;]
[., height, +, "]", ;, }, public, Size2D, calculateConstrainedSize, (, Size2D, base, ), {, Size2D, result, =, new, Size2D, (]
[;, }, public, Size2D, calculateConstrainedSize, (, Size2D, base, ), {, Size2D, result, =, new, Size2D, (, ), ;, if, (]
[;, if, (, this, ., widthConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., width, =, base, ., width, ;]
[), {, result, ., width, =, base, ., width, ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, )]
[==, LengthConstraintType, ., NONE, ), {, result, ., width, =, base, ., width, ;, if, (, this, ., heightConstraintType, ==]
[., widthConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., width, =, base, ., width, ;, if, (, this, .]
[), {, result, ., width, =, base, ., width, ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, )]
[., NONE, ), {, result, ., width, =, base, ., width, ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, .]
[=, base, ., width, ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., height, =]
[., width, =, base, ., width, ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, .]
[;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., height, =, base, ., height, ;]
[., width, ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., height, =, base, .]
[), {, result, ., height, =, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, .]
[==, LengthConstraintType, ., NONE, ), {, result, ., height, =, base, ., height, ;, }, else, if, (, this, .]
[., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., height, =, base, ., height, ;, }, else, if, (]
[), {, result, ., height, =, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, .]
[., NONE, ), {, result, ., height, =, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==]
[=, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, .]
[., height, =, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {]
[;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, ., height, =, this, .]
[., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, ., height, =]
[), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if]
[==, LengthConstraintType, ., RANGE, ), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, ., height, )]
[., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, .]
[), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if]
[., RANGE, ), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }]
[=, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if, (, this, ., heightConstraintType, ==]
[., height, =, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if, (, this, .]
[;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., height, =, this, .]
[., constrain, (, base, ., height, ), ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., FIXED, )]
[., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, .]
[), ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., height, =, this]
[., height, ), ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., height]
[), {, result, ., height, =, this, ., height, ;, }, }, else, if, (, this, ., widthConstraintType, ==, LengthConstraintType]
[==, LengthConstraintType, ., FIXED, ), {, result, ., height, =, this, ., height, ;, }, }, else, if, (, this]
[., heightConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., height, =, this, ., height, ;, }, }, else, if]
[), {, result, ., height, =, this, ., height, ;, }, }, else, if, (, this, ., widthConstraintType, ==, LengthConstraintType]
[., FIXED, ), {, result, ., height, =, this, ., height, ;, }, }, else, if, (, this, ., widthConstraintType]
[=, this, ., height, ;, }, }, else, if, (, this, ., widthConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result]
[., height, =, this, ., height, ;, }, }, else, if, (, this, ., widthConstraintType, ==, LengthConstraintType, ., RANGE, )]
[;, }, }, else, if, (, this, ., widthConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, ., width, =, this]
[., height, ;, }, }, else, if, (, this, ., widthConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, ., width]
[), {, result, ., width, =, this, ., widthRange, ., constrain, (, base, ., width, ), ;, if, (, this]
[==, LengthConstraintType, ., RANGE, ), {, result, ., width, =, this, ., widthRange, ., constrain, (, base, ., width, )]
[., widthConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, ., width, =, this, ., widthRange, ., constrain, (, base, .]
[), {, result, ., width, =, this, ., widthRange, ., constrain, (, base, ., width, ), ;, if, (, this]
[., RANGE, ), {, result, ., width, =, this, ., widthRange, ., constrain, (, base, ., width, ), ;, if]
[=, this, ., widthRange, ., constrain, (, base, ., width, ), ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, .]
[., width, =, this, ., widthRange, ., constrain, (, base, ., width, ), ;, if, (, this, ., heightConstraintType, ==]
[;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., height, =, base, ., height, ;]
[., constrain, (, base, ., width, ), ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result]
[., widthRange, ., constrain, (, base, ., width, ), ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, )]
[), ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., height, =, base, ., height]
[., width, ), ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., height, =, base]
[), {, result, ., height, =, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, .]
[==, LengthConstraintType, ., NONE, ), {, result, ., height, =, base, ., height, ;, }, else, if, (, this, .]
[., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., height, =, base, ., height, ;, }, else, if, (]
[), {, result, ., height, =, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, .]
[., NONE, ), {, result, ., height, =, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==]
[=, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, .]
[., height, =, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {]
[;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, ., height, =, this, .]
[., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, ., height, =]
[), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if]
[==, LengthConstraintType, ., RANGE, ), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, ., height, )]
[., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, .]
[), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if]
[., RANGE, ), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }]
[=, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if, (, this, ., heightConstraintType, ==]
[., height, =, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if, (, this, .]
[;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., height, =, this, .]
[., constrain, (, base, ., height, ), ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., FIXED, )]
[., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, .]
[), ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., height, =, this]
[., height, ), ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., height]
[), {, result, ., height, =, this, ., height, ;, }, }, else, if, (, this, ., widthConstraintType, ==, LengthConstraintType]
[==, LengthConstraintType, ., FIXED, ), {, result, ., height, =, this, ., height, ;, }, }, else, if, (, this]
[., heightConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., height, =, this, ., height, ;, }, }, else, if]
[), {, result, ., height, =, this, ., height, ;, }, }, else, if, (, this, ., widthConstraintType, ==, LengthConstraintType]
[., FIXED, ), {, result, ., height, =, this, ., height, ;, }, }, else, if, (, this, ., widthConstraintType]
[=, this, ., height, ;, }, }, else, if, (, this, ., widthConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result]
[., height, =, this, ., height, ;, }, }, else, if, (, this, ., widthConstraintType, ==, LengthConstraintType, ., FIXED, )]
[;, }, }, else, if, (, this, ., widthConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., width, =, this]
[., height, ;, }, }, else, if, (, this, ., widthConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., width]
[), {, result, ., width, =, this, ., width, ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, )]
[==, LengthConstraintType, ., FIXED, ), {, result, ., width, =, this, ., width, ;, if, (, this, ., heightConstraintType, ==]
[., widthConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., width, =, this, ., width, ;, if, (, this, .]
[), {, result, ., width, =, this, ., width, ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, )]
[., FIXED, ), {, result, ., width, =, this, ., width, ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, .]
[=, this, ., width, ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., height, =]
[., width, =, this, ., width, ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, .]
[;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., height, =, base, ., height, ;]
[., width, ;, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., height, =, base, .]
[), {, result, ., height, =, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, .]
[==, LengthConstraintType, ., NONE, ), {, result, ., height, =, base, ., height, ;, }, else, if, (, this, .]
[., heightConstraintType, ==, LengthConstraintType, ., NONE, ), {, result, ., height, =, base, ., height, ;, }, else, if, (]
[), {, result, ., height, =, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, .]
[., NONE, ), {, result, ., height, =, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==]
[=, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, .]
[., height, =, base, ., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {]
[;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, ., height, =, this, .]
[., height, ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, ., height, =]
[), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if]
[==, LengthConstraintType, ., RANGE, ), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, ., height, )]
[., heightConstraintType, ==, LengthConstraintType, ., RANGE, ), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, .]
[), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if]
[., RANGE, ), {, result, ., height, =, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }]
[=, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if, (, this, ., heightConstraintType, ==]
[., height, =, this, ., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if, (, this, .]
[;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., height, =, this, .]
[., constrain, (, base, ., height, ), ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., FIXED, )]
[., heightRange, ., constrain, (, base, ., height, ), ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, .]
[), ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., height, =, this]
[., height, ), ;, }, else, if, (, this, ., heightConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., height]
[), {, result, ., height, =, this, ., height, ;, }, }, return, result, ;, }, }]
[==, LengthConstraintType, ., FIXED, ), {, result, ., height, =, this, ., height, ;, }, }, return, result, ;, }]
[., heightConstraintType, ==, LengthConstraintType, ., FIXED, ), {, result, ., height, =, this, ., height, ;, }, }, return, result]
[), {, result, ., height, =, this, ., height, ;, }, }, return, result, ;, }, }]
[., FIXED, ), {, result, ., height, =, this, ., height, ;, }, }, return, result, ;, }, }]
[=, this, ., height, ;, }, }, return, result, ;, }, }]
[., height, =, this, ., height, ;, }, }, return, result, ;, }, }]
[;, }, }, return, result, ;, }, }]
[., height, ;, }, }, return, result, ;, }, }]
[;, }, }]
