[., util, ., ObjectUtilities, ;, public, abstract, class, Tick, implements, Serializable, ,, Cloneable, {, private, static, final, long, serialVersionUID, =]
[angle, ;, public, Tick, (, String, text, ,, TextAnchor, textAnchor, ,, TextAnchor, rotationAnchor, ,, double, angle, ), {, if, (]
[angle, ;, public, Tick, (, String, text, ,, TextAnchor, textAnchor, ,, TextAnchor, rotationAnchor, ,, double, angle, ), {, if, (]
[public, Tick, (, String, text, ,, TextAnchor, textAnchor, ,, TextAnchor, rotationAnchor, ,, double, angle, ), {, if, (, textAnchor, ==]
[text, ,, TextAnchor, textAnchor, ,, TextAnchor, rotationAnchor, ,, double, angle, ), {, if, (, textAnchor, ==, null, ), {, throw]
[textAnchor, ,, TextAnchor, rotationAnchor, ,, double, angle, ), {, if, (, textAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (]
[angle, ), {, if, (, textAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'textAnchor' argument.", ), ;, }, if, (]
[angle, ), {, if, (, textAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'textAnchor' argument.", ), ;, }, if, (]
[{, if, (, textAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'textAnchor' argument.", ), ;, }, if, (, rotationAnchor, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'textAnchor' argument.", ), ;, }, if, (, rotationAnchor, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'textAnchor' argument.", ), ;, }, if, (, rotationAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, "Null 'textAnchor' argument.", ), ;, }, if, (, rotationAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rotationAnchor' argument.", ), ;, }]
[(, "Null 'textAnchor' argument.", ), ;, }, if, (, rotationAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rotationAnchor' argument.", ), ;, }]
[}, if, (, rotationAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rotationAnchor' argument.", ), ;, }, this, ., text, =]
[(, rotationAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rotationAnchor' argument.", ), ;, }, this, ., text, =, text, ;]
[(, rotationAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rotationAnchor' argument.", ), ;, }, this, ., text, =, text, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'rotationAnchor' argument.", ), ;, }, this, ., text, =, text, ;, this, ., textAnchor, =]
[throw, new, IllegalArgumentException, (, "Null 'rotationAnchor' argument.", ), ;, }, this, ., text, =, text, ;, this, ., textAnchor, =, textAnchor, ;]
[throw, new, IllegalArgumentException, (, "Null 'rotationAnchor' argument.", ), ;, }, this, ., text, =, text, ;, this, ., textAnchor, =, textAnchor, ;]
["Null 'rotationAnchor' argument.", ), ;, }, this, ., text, =, text, ;, this, ., textAnchor, =, textAnchor, ;, this, ., rotationAnchor, =]
[;, }, this, ., text, =, text, ;, this, ., textAnchor, =, textAnchor, ;, this, ., rotationAnchor, =, rotationAnchor, ;]
[;, }, this, ., text, =, text, ;, this, ., textAnchor, =, textAnchor, ;, this, ., rotationAnchor, =, rotationAnchor, ;]
[text, =, text, ;, this, ., textAnchor, =, textAnchor, ;, this, ., rotationAnchor, =, rotationAnchor, ;, this, ., angle, =]
[this, ., rotationAnchor, =, rotationAnchor, ;, this, ., angle, =, angle, ;, }, public, String, getText, (, ), {, return]
[this, ., rotationAnchor, =, rotationAnchor, ;, this, ., angle, =, angle, ;, }, public, String, getText, (, ), {, return]
[}, public, String, getText, (, ), {, return, this, ., text, ;, }, public, TextAnchor, getTextAnchor, (, ), {, return]
[}, public, String, getText, (, ), {, return, this, ., text, ;, }, public, TextAnchor, getTextAnchor, (, ), {, return]
[}, public, TextAnchor, getTextAnchor, (, ), {, return, this, ., textAnchor, ;, }, public, TextAnchor, getRotationAnchor, (, ), {, return]
[}, public, TextAnchor, getTextAnchor, (, ), {, return, this, ., textAnchor, ;, }, public, TextAnchor, getRotationAnchor, (, ), {, return]
[}, public, TextAnchor, getRotationAnchor, (, ), {, return, this, ., rotationAnchor, ;, }, public, double, getAngle, (, ), {, return]
[}, public, TextAnchor, getRotationAnchor, (, ), {, return, this, ., rotationAnchor, ;, }, public, double, getAngle, (, ), {, return]
[getAngle, (, ), {, return, this, ., angle, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[getAngle, (, ), {, return, this, ., angle, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), {, return, this, ., angle, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[., angle, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (]
[boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (]
[(, this, ==, obj, ), {, return, true, ;, }, if, (, obj, instanceof, Tick, ), {, Tick, t, =]
[obj, ), {, return, true, ;, }, if, (, obj, instanceof, Tick, ), {, Tick, t, =, (, Tick, )]
[true, ;, }, if, (, obj, instanceof, Tick, ), {, Tick, t, =, (, Tick, ), obj, ;, if, (]
[;, }, if, (, obj, instanceof, Tick, ), {, Tick, t, =, (, Tick, ), obj, ;, if, (, !]
[;, }, if, (, obj, instanceof, Tick, ), {, Tick, t, =, (, Tick, ), obj, ;, if, (, !]
[obj, instanceof, Tick, ), {, Tick, t, =, (, Tick, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (]
[obj, instanceof, Tick, ), {, Tick, t, =, (, Tick, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (]
[{, Tick, t, =, (, Tick, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., text, ,]
[{, Tick, t, =, (, Tick, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., text, ,]
[obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., text, ,, t, ., text, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., text, ,, t, ., text, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., text, ,, t, ., text, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., text, ,, t, ., text, ), ), {, return, false, ;, }, if, (, !]
[., text, ,, t, ., text, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., text, ,, t, ., text, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., text, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., textAnchor, ,]
[., text, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., textAnchor, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., textAnchor, ,, t, ., textAnchor, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., textAnchor, ,, t, ., textAnchor, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., textAnchor, ,, t, ., textAnchor, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., textAnchor, ,, t, ., textAnchor, ), ), {, return, false, ;, }, if, (, !]
[., textAnchor, ,, t, ., textAnchor, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., textAnchor, ,, t, ., textAnchor, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., textAnchor, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rotationAnchor, ,]
[., textAnchor, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rotationAnchor, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rotationAnchor, ,, t, ., rotationAnchor, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., rotationAnchor, ,, t, ., rotationAnchor, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., rotationAnchor, ,, t, ., rotationAnchor, ), ), {, return, false, ;, }, if, (, !]
[equal, (, this, ., rotationAnchor, ,, t, ., rotationAnchor, ), ), {, return, false, ;, }, if, (, !, (]
[equal, (, this, ., rotationAnchor, ,, t, ., rotationAnchor, ), ), {, return, false, ;, }, if, (, !, (]
[equal, (, this, ., rotationAnchor, ,, t, ., rotationAnchor, ), ), {, return, false, ;, }, if, (, !, (]
[rotationAnchor, ,, t, ., rotationAnchor, ), ), {, return, false, ;, }, if, (, !, (, this, ., angle, ==]
[rotationAnchor, ,, t, ., rotationAnchor, ), ), {, return, false, ;, }, if, (, !, (, this, ., angle, ==]
[{, return, false, ;, }, if, (, !, (, this, ., angle, ==, t, ., angle, ), ), {, return]
[}, if, (, !, (, this, ., angle, ==, t, ., angle, ), ), {, return, false, ;, }, return]
[(, this, ., angle, ==, t, ., angle, ), ), {, return, false, ;, }, return, true, ;, }, return]
[}, return, true, ;, }, return, false, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, Tick, clone, =]
[;, }, return, false, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, Tick, clone, =, (, Tick, )]
[;, }, return, false, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, Tick, clone, =, (, Tick, )]
[Object, clone, (, ), throws, CloneNotSupportedException, {, Tick, clone, =, (, Tick, ), super, ., clone, (, ), ;, return]
[(, Tick, ), super, ., clone, (, ), ;, return, clone, ;, }, public, String, toString, (, ), {, return]
[(, Tick, ), super, ., clone, (, ), ;, return, clone, ;, }, public, String, toString, (, ), {, return]
