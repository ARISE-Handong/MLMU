[boolean, first, ;, private, final, boolean, last, ;, private, StepNormalizerBounds, (, final, boolean, first, ,, final, boolean, last, ), {]
[boolean, first, ;, private, final, boolean, last, ;, private, StepNormalizerBounds, (, final, boolean, first, ,, final, boolean, last, ), {]
[final, boolean, last, ;, private, StepNormalizerBounds, (, final, boolean, first, ,, final, boolean, last, ), {, this, ., first, =]
[last, ;, private, StepNormalizerBounds, (, final, boolean, first, ,, final, boolean, last, ), {, this, ., first, =, first, ;]
[last, ;, private, StepNormalizerBounds, (, final, boolean, first, ,, final, boolean, last, ), {, this, ., first, =, first, ;]
[(, final, boolean, first, ,, final, boolean, last, ), {, this, ., first, =, first, ;, this, ., last, =]
[this, ., first, =, first, ;, this, ., last, =, last, ;, }, public, boolean, firstIncluded, (, ), {, return]
[last, ;, }, public, boolean, firstIncluded, (, ), {, return, first, ;, }, public, boolean, lastIncluded, (, ), {, return]
[package, org, ., apache, ., commons, ., math3, ., ode, ., sampling, ;, public, enum, StepNormalizerBounds, {, NEITHER, (]
[org, ., apache, ., commons, ., math3, ., ode, ., sampling, ;, public, enum, StepNormalizerBounds, {, NEITHER, (, false, ,]
[., math3, ., ode, ., sampling, ;, public, enum, StepNormalizerBounds, {, NEITHER, (, false, ,, false, ), ,, FIRST, (]
[., ode, ., sampling, ;, public, enum, StepNormalizerBounds, {, NEITHER, (, false, ,, false, ), ,, FIRST, (, true, ,]
[public, enum, StepNormalizerBounds, {, NEITHER, (, false, ,, false, ), ,, FIRST, (, true, ,, false, ), ,, LAST, (]
[StepNormalizerBounds, {, NEITHER, (, false, ,, false, ), ,, FIRST, (, true, ,, false, ), ,, LAST, (, false, ,]
[,, false, ), ,, FIRST, (, true, ,, false, ), ,, LAST, (, false, ,, true, ), ,, BOTH, (]
[), ,, FIRST, (, true, ,, false, ), ,, LAST, (, false, ,, true, ), ,, BOTH, (, true, ,]
