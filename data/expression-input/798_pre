[charset, ., Charset, ;, @, Deprecated, public, class, JSSourceFile, extends, SourceFile, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[static, final, long, serialVersionUID, =, 1L, ;, public, static, JSSourceFile, fromFile, (, String, fileName, ,, Charset, charSet, ), {, return]
[serialVersionUID, =, 1L, ;, public, static, JSSourceFile, fromFile, (, String, fileName, ,, Charset, charSet, ), {, return, new, JSSourceFile, (]
[serialVersionUID, =, 1L, ;, public, static, JSSourceFile, fromFile, (, String, fileName, ,, Charset, charSet, ), {, return, new, JSSourceFile, (]
[public, static, JSSourceFile, fromFile, (, String, fileName, ,, Charset, charSet, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (]
[JSSourceFile, fromFile, (, String, fileName, ,, Charset, charSet, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (, fileName, ,]
[., fromFile, (, fileName, ,, charSet, ), ), ;, }, public, static, JSSourceFile, fromFile, (, String, fileName, ), {, return]
[fileName, ,, charSet, ), ), ;, }, public, static, JSSourceFile, fromFile, (, String, fileName, ), {, return, new, JSSourceFile, (]
[fileName, ,, charSet, ), ), ;, }, public, static, JSSourceFile, fromFile, (, String, fileName, ), {, return, new, JSSourceFile, (]
[), ;, }, public, static, JSSourceFile, fromFile, (, String, fileName, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (]
[}, public, static, JSSourceFile, fromFile, (, String, fileName, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (, fileName, ,]
[}, public, static, JSSourceFile, fromFile, (, String, fileName, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (, fileName, ,]
[Charsets, ., UTF_8, ), ), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ,, Charset, charSet, ), {, return]
[), ), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ,, Charset, charSet, ), {, return, new, JSSourceFile, (]
[), ), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ,, Charset, charSet, ), {, return, new, JSSourceFile, (]
[public, static, JSSourceFile, fromFile, (, File, file, ,, Charset, charSet, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (]
[JSSourceFile, fromFile, (, File, file, ,, Charset, charSet, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (, file, ,]
[., fromFile, (, file, ,, charSet, ), ), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ), {, return]
[file, ,, charSet, ), ), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ), {, return, new, JSSourceFile, (]
[file, ,, charSet, ), ), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ), {, return, new, JSSourceFile, (]
[), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (]
[}, public, static, JSSourceFile, fromFile, (, File, file, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (, file, ,]
[}, public, static, JSSourceFile, fromFile, (, File, file, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (, file, ,]
[Charsets, ., UTF_8, ), ), ;, }, public, static, JSSourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return]
[), ), ;, }, public, static, JSSourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return, new, JSSourceFile, (]
[), ), ;, }, public, static, JSSourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return, new, JSSourceFile, (]
[public, static, JSSourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return, new, JSSourceFile, (, SourceFile, ., fromCode, (]
[JSSourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return, new, JSSourceFile, (, SourceFile, ., fromCode, (, fileName, ,]
[code, ), ), ;, }, public, static, JSSourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return]
[;, }, public, static, JSSourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, new, JSSourceFile, (]
[;, }, public, static, JSSourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, new, JSSourceFile, (]
[JSSourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, new, JSSourceFile, (, SourceFile, ., fromInputStream, (]
[(, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, new, JSSourceFile, (, SourceFile, ., fromInputStream, (, fileName, ,]
[fileName, ,, s, ), ), ;, }, public, static, JSSourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return]
[), ), ;, }, public, static, JSSourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new, JSSourceFile, (]
[), ), ;, }, public, static, JSSourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new, JSSourceFile, (]
[public, static, JSSourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new, JSSourceFile, (, SourceFile, ., fromGenerator, (]
[JSSourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new, JSSourceFile, (, SourceFile, ., fromGenerator, (, fileName, ,]
[fileName, ,, generator, ), ), ;, }, private, SourceFile, referenced, ;, private, JSSourceFile, (, SourceFile, referenced, ), {, super, (]
[fileName, ,, generator, ), ), ;, }, private, SourceFile, referenced, ;, private, JSSourceFile, (, SourceFile, referenced, ), {, super, (]
[private, SourceFile, referenced, ;, private, JSSourceFile, (, SourceFile, referenced, ), {, super, (, referenced, ., getName, (, ), ), ;]
[private, SourceFile, referenced, ;, private, JSSourceFile, (, SourceFile, referenced, ), {, super, (, referenced, ., getName, (, ), ), ;]
[private, JSSourceFile, (, SourceFile, referenced, ), {, super, (, referenced, ., getName, (, ), ), ;, this, ., referenced, =]
[), ;, this, ., referenced, =, referenced, ;, }, @, Override, public, String, getCode, (, ), throws, IOException, {, return]
[), ;, this, ., referenced, =, referenced, ;, }, @, Override, public, String, getCode, (, ), throws, IOException, {, return]
[), throws, IOException, {, return, referenced, ., getCode, (, ), ;, }, @, Override, public, void, clearCachedSource, (, ), {]
[), throws, IOException, {, return, referenced, ., getCode, (, ), ;, }, @, Override, public, void, clearCachedSource, (, ), {]
[(, ), {, referenced, ., clearCachedSource, (, ), ;, }, @, Override, @, VisibleForTesting, String, getCodeNoCache, (, ), {, return]
[(, ), {, referenced, ., clearCachedSource, (, ), ;, }, @, Override, @, VisibleForTesting, String, getCodeNoCache, (, ), {, return]
