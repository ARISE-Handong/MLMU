[;, }, public, Period, toPeriod, (, ), {, return, new, Period, (, getMillis, (, ), ), ;, }, public, int]
[), ;, }, public, Period, toPeriod, (, ), {, return, new, Period, (, getMillis, (, ), ), ;, }, public]
[;, }, public, int, compareTo, (, ReadableDuration, other, ), {, long, thisMillis, =, this, ., getMillis, (, ), ;, long]
[), ;, }, public, int, compareTo, (, ReadableDuration, other, ), {, long, thisMillis, =, this, ., getMillis, (, ), ;]
[;, long, otherMillis, =, other, ., getMillis, (, ), ;, if, (, thisMillis, <, otherMillis, ), {, return, -, 1]
[., getMillis, (, ), ;, long, otherMillis, =, other, ., getMillis, (, ), ;, if, (, thisMillis, <, otherMillis, )]
[;, if, (, thisMillis, <, otherMillis, ), {, return, -, 1, ;, }, if, (, thisMillis, >, otherMillis, ), {]
[., getMillis, (, ), ;, if, (, thisMillis, <, otherMillis, ), {, return, -, 1, ;, }, if, (, thisMillis]
[), {, return, -, 1, ;, }, if, (, thisMillis, >, otherMillis, ), {, return, 1, ;, }, return, 0]
[<, otherMillis, ), {, return, -, 1, ;, }, if, (, thisMillis, >, otherMillis, ), {, return, 1, ;, }]
[), {, return, -, 1, ;, }, if, (, thisMillis, >, otherMillis, ), {, return, 1, ;, }, return, 0]
[;, }, if, (, thisMillis, >, otherMillis, ), {, return, 1, ;, }, return, 0, ;, }, public, boolean, isEqual]
[;, }, if, (, thisMillis, >, otherMillis, ), {, return, 1, ;, }, return, 0, ;, }, public, boolean, isEqual]
[), {, return, 1, ;, }, return, 0, ;, }, public, boolean, isEqual, (, ReadableDuration, duration, ), {, if, (]
[>, otherMillis, ), {, return, 1, ;, }, return, 0, ;, }, public, boolean, isEqual, (, ReadableDuration, duration, ), {]
[), {, return, 1, ;, }, return, 0, ;, }, public, boolean, isEqual, (, ReadableDuration, duration, ), {, if, (]
[;, }, return, 0, ;, }, public, boolean, isEqual, (, ReadableDuration, duration, ), {, if, (, duration, ==, null, )]
[;, }, public, boolean, isEqual, (, ReadableDuration, duration, ), {, if, (, duration, ==, null, ), {, duration, =, Duration]
[), {, duration, =, Duration, ., ZERO, ;, }, return, compareTo, (, duration, ), ==, 0, ;, }, public, boolean]
[==, null, ), {, duration, =, Duration, ., ZERO, ;, }, return, compareTo, (, duration, ), ==, 0, ;, }]
[), {, duration, =, Duration, ., ZERO, ;, }, return, compareTo, (, duration, ), ==, 0, ;, }, public, boolean]
[=, Duration, ., ZERO, ;, }, return, compareTo, (, duration, ), ==, 0, ;, }, public, boolean, isLongerThan, (, ReadableDuration]
[;, }, return, compareTo, (, duration, ), ==, 0, ;, }, public, boolean, isLongerThan, (, ReadableDuration, duration, ), {, if]
[., ZERO, ;, }, return, compareTo, (, duration, ), ==, 0, ;, }, public, boolean, isLongerThan, (, ReadableDuration, duration, )]
[;, }, public, boolean, isLongerThan, (, ReadableDuration, duration, ), {, if, (, duration, ==, null, ), {, duration, =, Duration]
[==, 0, ;, }, public, boolean, isLongerThan, (, ReadableDuration, duration, ), {, if, (, duration, ==, null, ), {, duration]
[), ==, 0, ;, }, public, boolean, isLongerThan, (, ReadableDuration, duration, ), {, if, (, duration, ==, null, ), {]
[;, }, public, boolean, isLongerThan, (, ReadableDuration, duration, ), {, if, (, duration, ==, null, ), {, duration, =, Duration]
[), {, duration, =, Duration, ., ZERO, ;, }, return, compareTo, (, duration, ), >, 0, ;, }, public, boolean]
[==, null, ), {, duration, =, Duration, ., ZERO, ;, }, return, compareTo, (, duration, ), >, 0, ;, }]
[), {, duration, =, Duration, ., ZERO, ;, }, return, compareTo, (, duration, ), >, 0, ;, }, public, boolean]
[=, Duration, ., ZERO, ;, }, return, compareTo, (, duration, ), >, 0, ;, }, public, boolean, isShorterThan, (, ReadableDuration]
[;, }, return, compareTo, (, duration, ), >, 0, ;, }, public, boolean, isShorterThan, (, ReadableDuration, duration, ), {, if]
[., ZERO, ;, }, return, compareTo, (, duration, ), >, 0, ;, }, public, boolean, isShorterThan, (, ReadableDuration, duration, )]
[;, }, public, boolean, isShorterThan, (, ReadableDuration, duration, ), {, if, (, duration, ==, null, ), {, duration, =, Duration]
[>, 0, ;, }, public, boolean, isShorterThan, (, ReadableDuration, duration, ), {, if, (, duration, ==, null, ), {, duration]
[), >, 0, ;, }, public, boolean, isShorterThan, (, ReadableDuration, duration, ), {, if, (, duration, ==, null, ), {]
[;, }, public, boolean, isShorterThan, (, ReadableDuration, duration, ), {, if, (, duration, ==, null, ), {, duration, =, Duration]
[), {, duration, =, Duration, ., ZERO, ;, }, return, compareTo, (, duration, ), <, 0, ;, }, public, boolean]
[==, null, ), {, duration, =, Duration, ., ZERO, ;, }, return, compareTo, (, duration, ), <, 0, ;, }]
[), {, duration, =, Duration, ., ZERO, ;, }, return, compareTo, (, duration, ), <, 0, ;, }, public, boolean]
[=, Duration, ., ZERO, ;, }, return, compareTo, (, duration, ), <, 0, ;, }, public, boolean, equals, (, Object]
[;, }, return, compareTo, (, duration, ), <, 0, ;, }, public, boolean, equals, (, Object, duration, ), {, if]
[., ZERO, ;, }, return, compareTo, (, duration, ), <, 0, ;, }, public, boolean, equals, (, Object, duration, )]
[;, }, public, boolean, equals, (, Object, duration, ), {, if, (, this, ==, duration, ), {, return, true, ;]
[<, 0, ;, }, public, boolean, equals, (, Object, duration, ), {, if, (, this, ==, duration, ), {, return]
[), <, 0, ;, }, public, boolean, equals, (, Object, duration, ), {, if, (, this, ==, duration, ), {]
[;, }, public, boolean, equals, (, Object, duration, ), {, if, (, this, ==, duration, ), {, return, true, ;]
[), {, return, true, ;, }, if, (, duration, instanceof, ReadableDuration, ==, false, ), {, return, false, ;, }, ReadableDuration]
[==, duration, ), {, return, true, ;, }, if, (, duration, instanceof, ReadableDuration, ==, false, ), {, return, false, ;]
[), {, return, true, ;, }, if, (, duration, instanceof, ReadableDuration, ==, false, ), {, return, false, ;, }, ReadableDuration]
[;, }, if, (, duration, instanceof, ReadableDuration, ==, false, ), {, return, false, ;, }, ReadableDuration, other, =, (, ReadableDuration]
[), {, return, false, ;, }, ReadableDuration, other, =, (, ReadableDuration, ), duration, ;, return, (, getMillis, (, ), ==]
[==, false, ), {, return, false, ;, }, ReadableDuration, other, =, (, ReadableDuration, ), duration, ;, return, (, getMillis, (]
[instanceof, ReadableDuration, ==, false, ), {, return, false, ;, }, ReadableDuration, other, =, (, ReadableDuration, ), duration, ;, return, (]
[), {, return, false, ;, }, ReadableDuration, other, =, (, ReadableDuration, ), duration, ;, return, (, getMillis, (, ), ==]
[;, }, ReadableDuration, other, =, (, ReadableDuration, ), duration, ;, return, (, getMillis, (, ), ==, other, ., getMillis, (]
[;, return, (, getMillis, (, ), ==, other, ., getMillis, (, ), ), ;, }, public, int, hashCode, (, )]
[;, return, (, getMillis, (, ), ==, other, ., getMillis, (, ), ), ;, }, public, int, hashCode, (, )]
[;, }, public, int, hashCode, (, ), {, long, len, =, getMillis, (, ), ;, return, (, int, ), (]
[), ;, }, public, int, hashCode, (, ), {, long, len, =, getMillis, (, ), ;, return, (, int, )]
[==, other, ., getMillis, (, ), ), ;, }, public, int, hashCode, (, ), {, long, len, =, getMillis, (]
[), ;, }, public, int, hashCode, (, ), {, long, len, =, getMillis, (, ), ;, return, (, int, )]
[., getMillis, (, ), ), ;, }, public, int, hashCode, (, ), {, long, len, =, getMillis, (, ), ;]
[;, return, (, int, ), (, len, ^, (, len, >, >, >, 32, ), ), ;, }, @, ToString]
[;, }, @, ToString, public, String, toString, (, ), {, long, millis, =, getMillis, (, ), ;, StringBuffer, buf, =]
[;, }, @, ToString, public, String, toString, (, ), {, long, millis, =, getMillis, (, ), ;, StringBuffer, buf, =]
[), ;, }, @, ToString, public, String, toString, (, ), {, long, millis, =, getMillis, (, ), ;, StringBuffer, buf]
[^, (, len, >, >, >, 32, ), ), ;, }, @, ToString, public, String, toString, (, ), {, long]
[), ;, }, @, ToString, public, String, toString, (, ), {, long, millis, =, getMillis, (, ), ;, StringBuffer, buf]
[), ), ;, }, @, ToString, public, String, toString, (, ), {, long, millis, =, getMillis, (, ), ;, StringBuffer]
[>, >, >, 32, ), ), ;, }, @, ToString, public, String, toString, (, ), {, long, millis, =, getMillis]
[), ), ;, }, @, ToString, public, String, toString, (, ), {, long, millis, =, getMillis, (, ), ;, StringBuffer]
[;, StringBuffer, buf, =, new, StringBuffer, (, ), ;, buf, ., append, (, "PT", ), ;, boolean, negative, =, (]
[;, buf, ., append, (, "PT", ), ;, boolean, negative, =, (, millis, <, 0, ), ;, FormatUtils, ., appendUnpaddedInteger]
[;, boolean, negative, =, (, millis, <, 0, ), ;, FormatUtils, ., appendUnpaddedInteger, (, buf, ,, millis, ), ;, while]
[., append, (, "PT", ), ;, boolean, negative, =, (, millis, <, 0, ), ;, FormatUtils, ., appendUnpaddedInteger, (, buf]
[), ;, boolean, negative, =, (, millis, <, 0, ), ;, FormatUtils, ., appendUnpaddedInteger, (, buf, ,, millis, ), ;]
[;, FormatUtils, ., appendUnpaddedInteger, (, buf, ,, millis, ), ;, while, (, buf, ., length, (, ), <, (, negative]
[), ;, FormatUtils, ., appendUnpaddedInteger, (, buf, ,, millis, ), ;, while, (, buf, ., length, (, ), <, (]
[<, 0, ), ;, FormatUtils, ., appendUnpaddedInteger, (, buf, ,, millis, ), ;, while, (, buf, ., length, (, )]
[), ;, FormatUtils, ., appendUnpaddedInteger, (, buf, ,, millis, ), ;, while, (, buf, ., length, (, ), <, (]
[;, while, (, buf, ., length, (, ), <, (, negative, ?, 7, :, 6, ), ), {, buf, .]
[., appendUnpaddedInteger, (, buf, ,, millis, ), ;, while, (, buf, ., length, (, ), <, (, negative, ?, 7]
[,, millis, ), ;, while, (, buf, ., length, (, ), <, (, negative, ?, 7, :, 6, ), )]
[), ;, while, (, buf, ., length, (, ), <, (, negative, ?, 7, :, 6, ), ), {, buf]
[), {, buf, ., insert, (, negative, ?, 3, :, 2, ,, "0", ), ;, }, if, (, (, millis]
[<, (, negative, ?, 7, :, 6, ), ), {, buf, ., insert, (, negative, ?, 3, :, 2, ,]
[., length, (, ), <, (, negative, ?, 7, :, 6, ), ), {, buf, ., insert, (, negative, ?]
[), {, buf, ., insert, (, negative, ?, 3, :, 2, ,, "0", ), ;, }, if, (, (, millis]
[), ), {, buf, ., insert, (, negative, ?, 3, :, 2, ,, "0", ), ;, }, if, (, (]
[?, 7, :, 6, ), ), {, buf, ., insert, (, negative, ?, 3, :, 2, ,, "0", ), ;]
[:, 6, ), ), {, buf, ., insert, (, negative, ?, 3, :, 2, ,, "0", ), ;, }, if]
[), ), {, buf, ., insert, (, negative, ?, 3, :, 2, ,, "0", ), ;, }, if, (, (]
[;, }, if, (, (, millis, /, 1000, ), *, 1000, ==, millis, ), {, buf, ., setLength, (, buf]
[., insert, (, negative, ?, 3, :, 2, ,, "0", ), ;, }, if, (, (, millis, /, 1000, )]
[,, "0", ), ;, }, if, (, (, millis, /, 1000, ), *, 1000, ==, millis, ), {, buf, .]
[?, 3, :, 2, ,, "0", ), ;, }, if, (, (, millis, /, 1000, ), *, 1000, ==, millis]
[:, 2, ,, "0", ), ;, }, if, (, (, millis, /, 1000, ), *, 1000, ==, millis, ), {]
[,, "0", ), ;, }, if, (, (, millis, /, 1000, ), *, 1000, ==, millis, ), {, buf, .]
[), ;, }, if, (, (, millis, /, 1000, ), *, 1000, ==, millis, ), {, buf, ., setLength, (]
[), {, buf, ., setLength, (, buf, ., length, (, ), -, 3, ), ;, }, else, {, buf, .]
[==, millis, ), {, buf, ., setLength, (, buf, ., length, (, ), -, 3, ), ;, }, else, {]
[*, 1000, ==, millis, ), {, buf, ., setLength, (, buf, ., length, (, ), -, 3, ), ;, }]
[), *, 1000, ==, millis, ), {, buf, ., setLength, (, buf, ., length, (, ), -, 3, ), ;]
[/, 1000, ), *, 1000, ==, millis, ), {, buf, ., setLength, (, buf, ., length, (, ), -, 3]
[), *, 1000, ==, millis, ), {, buf, ., setLength, (, buf, ., length, (, ), -, 3, ), ;]
[==, millis, ), {, buf, ., setLength, (, buf, ., length, (, ), -, 3, ), ;, }, else, {]
[), {, buf, ., setLength, (, buf, ., length, (, ), -, 3, ), ;, }, else, {, buf, .]
[;, }, else, {, buf, ., insert, (, buf, ., length, (, ), -, 3, ,, ".", ), ;, }]
[., setLength, (, buf, ., length, (, ), -, 3, ), ;, }, else, {, buf, ., insert, (, buf]
[), ;, }, else, {, buf, ., insert, (, buf, ., length, (, ), -, 3, ,, ".", ), ;]
[-, 3, ), ;, }, else, {, buf, ., insert, (, buf, ., length, (, ), -, 3, ,, "."]
[., length, (, ), -, 3, ), ;, }, else, {, buf, ., insert, (, buf, ., length, (, )]
[), ;, }, else, {, buf, ., insert, (, buf, ., length, (, ), -, 3, ,, ".", ), ;]
[;, }, buf, ., append, (, 'S', ), ;, return, buf, ., toString, (, ), ;, }, }]
[., insert, (, buf, ., length, (, ), -, 3, ,, ".", ), ;, }, buf, ., append, (, 'S']
[,, ".", ), ;, }, buf, ., append, (, 'S', ), ;, return, buf, ., toString, (, ), ;, }]
[-, 3, ,, ".", ), ;, }, buf, ., append, (, 'S', ), ;, return, buf, ., toString, (, )]
[., length, (, ), -, 3, ,, ".", ), ;, }, buf, ., append, (, 'S', ), ;, return, buf]
[,, ".", ), ;, }, buf, ., append, (, 'S', ), ;, return, buf, ., toString, (, ), ;, }]
[), ;, }, buf, ., append, (, 'S', ), ;, return, buf, ., toString, (, ), ;, }, }]
[;, return, buf, ., toString, (, ), ;, }, }]
[., append, (, 'S', ), ;, return, buf, ., toString, (, ), ;, }, }]
[), ;, return, buf, ., toString, (, ), ;, }, }]
[;, }, }]
[., toString, (, ), ;, }, }]
