[T, >, ,, DeprecatedOngoingStubbing, <, T, >, {, public, OngoingStubbing, <, T, >, thenReturn, (, T, value, ), {, return]
[,, DeprecatedOngoingStubbing, <, T, >, {, public, OngoingStubbing, <, T, >, thenReturn, (, T, value, ), {, return, thenAnswer, (]
[T, >, {, public, OngoingStubbing, <, T, >, thenReturn, (, T, value, ), {, return, thenAnswer, (, new, Returns, (]
[OngoingStubbing, <, T, >, thenReturn, (, T, value, ,, T, ..., values, ), {, OngoingStubbing, <, T, >, stubbing, =]
[T, >, thenReturn, (, T, value, ,, T, ..., values, ), {, OngoingStubbing, <, T, >, stubbing, =, thenReturn, (]
[value, ,, T, ..., values, ), {, OngoingStubbing, <, T, >, stubbing, =, thenReturn, (, value, ), ;, if, (]
[value, ,, T, ..., values, ), {, OngoingStubbing, <, T, >, stubbing, =, thenReturn, (, value, ), ;, if, (]
[T, ..., values, ), {, OngoingStubbing, <, T, >, stubbing, =, thenReturn, (, value, ), ;, if, (, values, ==]
[{, OngoingStubbing, <, T, >, stubbing, =, thenReturn, (, value, ), ;, if, (, values, ==, null, ), {, return]
[{, OngoingStubbing, <, T, >, stubbing, =, thenReturn, (, value, ), ;, if, (, values, ==, null, ), {, return]
[>, stubbing, =, thenReturn, (, value, ), ;, if, (, values, ==, null, ), {, return, stubbing, ., thenReturn, (]
[(, values, ==, null, ), {, return, stubbing, ., thenReturn, (, null, ), ;, }, for, (, T, v, :]
[null, ), {, return, stubbing, ., thenReturn, (, null, ), ;, }, for, (, T, v, :, values, ), {]
[{, return, stubbing, ., thenReturn, (, null, ), ;, }, for, (, T, v, :, values, ), {, stubbing, =]
[{, return, stubbing, ., thenReturn, (, null, ), ;, }, for, (, T, v, :, values, ), {, stubbing, =]
[thenReturn, (, null, ), ;, }, for, (, T, v, :, values, ), {, stubbing, =, stubbing, ., thenReturn, (]
[}, for, (, T, v, :, values, ), {, stubbing, =, stubbing, ., thenReturn, (, v, ), ;, }, return]
[v, ), ;, }, return, stubbing, ;, }, private, OngoingStubbing, <, T, >, thenThrow, (, Throwable, throwable, ), {, return]
[;, }, return, stubbing, ;, }, private, OngoingStubbing, <, T, >, thenThrow, (, Throwable, throwable, ), {, return, thenAnswer, (]
[stubbing, ;, }, private, OngoingStubbing, <, T, >, thenThrow, (, Throwable, throwable, ), {, return, thenAnswer, (, new, ThrowsException, (]
[(, throwable, ), ), ;, }, public, OngoingStubbing, <, T, >, thenThrow, (, Throwable, ..., throwables, ), {, if, (]
[(, throwable, ), ), ;, }, public, OngoingStubbing, <, T, >, thenThrow, (, Throwable, ..., throwables, ), {, if, (]
[), ), ;, }, public, OngoingStubbing, <, T, >, thenThrow, (, Throwable, ..., throwables, ), {, if, (, throwables, ==]
[}, public, OngoingStubbing, <, T, >, thenThrow, (, Throwable, ..., throwables, ), {, if, (, throwables, ==, null, ), {]
[OngoingStubbing, <, T, >, thenThrow, (, Throwable, ..., throwables, ), {, if, (, throwables, ==, null, ), {, thenThrow, (]
[>, thenThrow, (, Throwable, ..., throwables, ), {, if, (, throwables, ==, null, ), {, thenThrow, (, (, Throwable, )]
[throwables, ==, null, ), {, thenThrow, (, (, Throwable, ), null, ), ;, }, OngoingStubbing, <, T, >, stubbing, =]
[(, Throwable, ), null, ), ;, }, OngoingStubbing, <, T, >, stubbing, =, null, ;, for, (, Throwable, t, :]
[;, }, OngoingStubbing, <, T, >, stubbing, =, null, ;, for, (, Throwable, t, :, throwables, ), {, if, (]
[;, }, OngoingStubbing, <, T, >, stubbing, =, null, ;, for, (, Throwable, t, :, throwables, ), {, if, (]
[OngoingStubbing, <, T, >, stubbing, =, null, ;, for, (, Throwable, t, :, throwables, ), {, if, (, stubbing, ==]
[>, stubbing, =, null, ;, for, (, Throwable, t, :, throwables, ), {, if, (, stubbing, ==, null, ), {]
[=, null, ;, for, (, Throwable, t, :, throwables, ), {, if, (, stubbing, ==, null, ), {, stubbing, =]
[;, for, (, Throwable, t, :, throwables, ), {, if, (, stubbing, ==, null, ), {, stubbing, =, thenThrow, (]
[throwables, ), {, if, (, stubbing, ==, null, ), {, stubbing, =, thenThrow, (, t, ), ;, }, else, {]
[{, if, (, stubbing, ==, null, ), {, stubbing, =, thenThrow, (, t, ), ;, }, else, {, stubbing, =]
[{, if, (, stubbing, ==, null, ), {, stubbing, =, thenThrow, (, t, ), ;, }, else, {, stubbing, =]
[==, null, ), {, stubbing, =, thenThrow, (, t, ), ;, }, else, {, stubbing, =, stubbing, ., thenThrow, (]
[thenThrow, (, t, ), ;, }, else, {, stubbing, =, stubbing, ., thenThrow, (, t, ), ;, }, }, return]
[stubbing, ;, }, private, OngoingStubbing, <, T, >, thenThrow, (, Class, <, ?, extends, Throwable, >, throwableClass, ), {, return]
[}, private, OngoingStubbing, <, T, >, thenThrow, (, Class, <, ?, extends, Throwable, >, throwableClass, ), {, return, thenAnswer, (]
[<, T, >, thenThrow, (, Class, <, ?, extends, Throwable, >, throwableClass, ), {, return, thenAnswer, (, new, ThrowsExceptionClass, (]
[}, public, OngoingStubbing, <, T, >, thenThrow, (, Class, <, ?, extends, Throwable, >, ..., throwableClasses, ), {, if, (]
[}, public, OngoingStubbing, <, T, >, thenThrow, (, Class, <, ?, extends, Throwable, >, ..., throwableClasses, ), {, if, (]
[OngoingStubbing, <, T, >, thenThrow, (, Class, <, ?, extends, Throwable, >, ..., throwableClasses, ), {, if, (, throwableClasses, ==]
[>, thenThrow, (, Class, <, ?, extends, Throwable, >, ..., throwableClasses, ), {, if, (, throwableClasses, ==, null, ), {]
[(, Class, <, ?, extends, Throwable, >, ..., throwableClasses, ), {, if, (, throwableClasses, ==, null, ), {, thenThrow, (]
[?, extends, Throwable, >, ..., throwableClasses, ), {, if, (, throwableClasses, ==, null, ), {, thenThrow, (, (, Throwable, )]
[throwableClasses, ==, null, ), {, thenThrow, (, (, Throwable, ), null, ), ;, }, OngoingStubbing, <, T, >, stubbing, =]
[;, }, OngoingStubbing, <, T, >, stubbing, =, null, ;, for, (, Class, <, ?, extends, Throwable, >, t, :]
[>, stubbing, =, null, ;, for, (, Class, <, ?, extends, Throwable, >, t, :, throwableClasses, ), {, if, (]
[>, stubbing, =, null, ;, for, (, Class, <, ?, extends, Throwable, >, t, :, throwableClasses, ), {, if, (]
[=, null, ;, for, (, Class, <, ?, extends, Throwable, >, t, :, throwableClasses, ), {, if, (, stubbing, ==]
[for, (, Class, <, ?, extends, Throwable, >, t, :, throwableClasses, ), {, if, (, stubbing, ==, null, ), {]
[Class, <, ?, extends, Throwable, >, t, :, throwableClasses, ), {, if, (, stubbing, ==, null, ), {, stubbing, =]
[?, extends, Throwable, >, t, :, throwableClasses, ), {, if, (, stubbing, ==, null, ), {, stubbing, =, thenThrow, (]
[throwableClasses, ), {, if, (, stubbing, ==, null, ), {, stubbing, =, thenThrow, (, t, ), ;, }, else, {]
[{, if, (, stubbing, ==, null, ), {, stubbing, =, thenThrow, (, t, ), ;, }, else, {, stubbing, =]
[{, if, (, stubbing, ==, null, ), {, stubbing, =, thenThrow, (, t, ), ;, }, else, {, stubbing, =]
[==, null, ), {, stubbing, =, thenThrow, (, t, ), ;, }, else, {, stubbing, =, stubbing, ., thenThrow, (]
[thenThrow, (, t, ), ;, }, else, {, stubbing, =, stubbing, ., thenThrow, (, t, ), ;, }, }, return]
[(, t, ), ;, }, }, return, stubbing, ;, }, public, OngoingStubbing, <, T, >, thenCallRealMethod, (, ), {, return]
[), ;, }, }, return, stubbing, ;, }, public, OngoingStubbing, <, T, >, thenCallRealMethod, (, ), {, return, thenAnswer, (]
[(, new, CallsRealMethods, (, ), ), ;, }, public, DeprecatedOngoingStubbing, <, T, >, toReturn, (, T, value, ), {, return]
[CallsRealMethods, (, ), ), ;, }, public, DeprecatedOngoingStubbing, <, T, >, toReturn, (, T, value, ), {, return, toAnswer, (]
[), ;, }, public, DeprecatedOngoingStubbing, <, T, >, toReturn, (, T, value, ), {, return, toAnswer, (, new, Returns, (]
[new, Returns, (, value, ), ), ;, }, public, DeprecatedOngoingStubbing, <, T, >, toThrow, (, Throwable, throwable, ), {, return]
[(, value, ), ), ;, }, public, DeprecatedOngoingStubbing, <, T, >, toThrow, (, Throwable, throwable, ), {, return, toAnswer, (]
[), ;, }, public, DeprecatedOngoingStubbing, <, T, >, toThrow, (, Throwable, throwable, ), {, return, toAnswer, (, new, ThrowsException, (]
