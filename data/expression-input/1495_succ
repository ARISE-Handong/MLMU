[,, Integer, ., MAX_VALUE, ,, true, ), ;, }, protected, UnicodeEscaper, (, final, int, below, ,, final, int, above, ,]
[,, true, ), ;, }, protected, UnicodeEscaper, (, final, int, below, ,, final, int, above, ,, final, boolean, between, )]
[., MAX_VALUE, ,, true, ), ;, }, protected, UnicodeEscaper, (, final, int, below, ,, final, int, above, ,, final, boolean]
[), ;, }, protected, UnicodeEscaper, (, final, int, below, ,, final, int, above, ,, final, boolean, between, ), {, this]
[=, below, ;, this, ., above, =, above, ;, this, ., between, =, between, ;, }, public, static, UnicodeEscaper, below]
[., below, =, below, ;, this, ., above, =, above, ;, this, ., between, =, between, ;, }, public, static]
[;, this, ., above, =, above, ;, this, ., between, =, between, ;, }, public, static, UnicodeEscaper, below, (, final]
[=, above, ;, this, ., between, =, between, ;, }, public, static, UnicodeEscaper, below, (, final, int, codepoint, ), {]
[., above, =, above, ;, this, ., between, =, between, ;, }, public, static, UnicodeEscaper, below, (, final, int, codepoint]
[;, this, ., between, =, between, ;, }, public, static, UnicodeEscaper, below, (, final, int, codepoint, ), {, return, outsideOf]
[=, between, ;, }, public, static, UnicodeEscaper, below, (, final, int, codepoint, ), {, return, outsideOf, (, codepoint, ,, Integer]
[., between, =, between, ;, }, public, static, UnicodeEscaper, below, (, final, int, codepoint, ), {, return, outsideOf, (, codepoint]
[;, }, public, static, UnicodeEscaper, below, (, final, int, codepoint, ), {, return, outsideOf, (, codepoint, ,, Integer, ., MAX_VALUE]
[;, }, public, static, UnicodeEscaper, above, (, final, int, codepoint, ), {, return, outsideOf, (, 0, ,, codepoint, ), ;]
[,, Integer, ., MAX_VALUE, ), ;, }, public, static, UnicodeEscaper, above, (, final, int, codepoint, ), {, return, outsideOf, (]
[), ;, }, public, static, UnicodeEscaper, above, (, final, int, codepoint, ), {, return, outsideOf, (, 0, ,, codepoint, )]
[., MAX_VALUE, ), ;, }, public, static, UnicodeEscaper, above, (, final, int, codepoint, ), {, return, outsideOf, (, 0, ,]
[;, }, public, static, UnicodeEscaper, outsideOf, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, UnicodeEscaper, (]
[,, codepoint, ), ;, }, public, static, UnicodeEscaper, outsideOf, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return]
[), ;, }, public, static, UnicodeEscaper, outsideOf, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, UnicodeEscaper]
[;, }, public, static, UnicodeEscaper, between, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, UnicodeEscaper, (]
[,, codepointHigh, ,, false, ), ;, }, public, static, UnicodeEscaper, between, (, final, int, codepointLow, ,, final, int, codepointHigh, )]
[,, false, ), ;, }, public, static, UnicodeEscaper, between, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return]
[), ;, }, public, static, UnicodeEscaper, between, (, final, int, codepointLow, ,, final, int, codepointHigh, ), {, return, new, UnicodeEscaper]
[;, }, @, Override, public, boolean, translate, (, final, int, codepoint, ,, final, Writer, out, ), throws, IOException, {, if]
[,, codepointHigh, ,, true, ), ;, }, @, Override, public, boolean, translate, (, final, int, codepoint, ,, final, Writer, out]
[,, true, ), ;, }, @, Override, public, boolean, translate, (, final, int, codepoint, ,, final, Writer, out, ), throws]
[), ;, }, @, Override, public, boolean, translate, (, final, int, codepoint, ,, final, Writer, out, ), throws, IOException, {]
[), {, if, (, codepoint, <, below, ||, codepoint, >, above, ), {, return, false, ;, }, }, else, {]
[), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=, above, ), {]
[||, codepoint, >, above, ), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint]
[<, below, ||, codepoint, >, above, ), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below]
[||, codepoint, >, above, ), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint]
[), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=, above, ), {]
[>, above, ), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=, above]
[), {, return, false, ;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=, above, ), {]
[;, }, }, else, {, if, (, codepoint, >=, below, &&, codepoint, <=, above, ), {, return, false, ;, }]
[), {, return, false, ;, }, }, if, (, codepoint, >, 0xffff, ), {, out, ., write, (, toUtf16Escape, (]
[&&, codepoint, <=, above, ), {, return, false, ;, }, }, if, (, codepoint, >, 0xffff, ), {, out, .]
[>=, below, &&, codepoint, <=, above, ), {, return, false, ;, }, }, if, (, codepoint, >, 0xffff, ), {]
[&&, codepoint, <=, above, ), {, return, false, ;, }, }, if, (, codepoint, >, 0xffff, ), {, out, .]
[), {, return, false, ;, }, }, if, (, codepoint, >, 0xffff, ), {, out, ., write, (, toUtf16Escape, (]
[<=, above, ), {, return, false, ;, }, }, if, (, codepoint, >, 0xffff, ), {, out, ., write, (]
[), {, return, false, ;, }, }, if, (, codepoint, >, 0xffff, ), {, out, ., write, (, toUtf16Escape, (]
[;, }, }, if, (, codepoint, >, 0xffff, ), {, out, ., write, (, toUtf16Escape, (, codepoint, ), ), ;]
[), {, out, ., write, (, toUtf16Escape, (, codepoint, ), ), ;, }, else, if, (, codepoint, >, 0xfff, )]
[>, 0xffff, ), {, out, ., write, (, toUtf16Escape, (, codepoint, ), ), ;, }, else, if, (, codepoint, >]
[), {, out, ., write, (, toUtf16Escape, (, codepoint, ), ), ;, }, else, if, (, codepoint, >, 0xfff, )]
[;, }, else, if, (, codepoint, >, 0xfff, ), {, out, ., write, (, "\\u", +, hex, (, codepoint, )]
[., write, (, toUtf16Escape, (, codepoint, ), ), ;, }, else, if, (, codepoint, >, 0xfff, ), {, out, .]
[), ;, }, else, if, (, codepoint, >, 0xfff, ), {, out, ., write, (, "\\u", +, hex, (, codepoint]
[), ), ;, }, else, if, (, codepoint, >, 0xfff, ), {, out, ., write, (, "\\u", +, hex, (]
[), {, out, ., write, (, "\\u", +, hex, (, codepoint, ), ), ;, }, else, if, (, codepoint, >]
[>, 0xfff, ), {, out, ., write, (, "\\u", +, hex, (, codepoint, ), ), ;, }, else, if, (]
[), {, out, ., write, (, "\\u", +, hex, (, codepoint, ), ), ;, }, else, if, (, codepoint, >]
[;, }, else, if, (, codepoint, >, 0xff, ), {, out, ., write, (, "\\u0", +, hex, (, codepoint, )]
[., write, (, "\\u", +, hex, (, codepoint, ), ), ;, }, else, if, (, codepoint, >, 0xff, ), {]
[), ;, }, else, if, (, codepoint, >, 0xff, ), {, out, ., write, (, "\\u0", +, hex, (, codepoint]
[+, hex, (, codepoint, ), ), ;, }, else, if, (, codepoint, >, 0xff, ), {, out, ., write, (]
[), ;, }, else, if, (, codepoint, >, 0xff, ), {, out, ., write, (, "\\u0", +, hex, (, codepoint]
[), ), ;, }, else, if, (, codepoint, >, 0xff, ), {, out, ., write, (, "\\u0", +, hex, (]
[), {, out, ., write, (, "\\u0", +, hex, (, codepoint, ), ), ;, }, else, if, (, codepoint, >]
[>, 0xff, ), {, out, ., write, (, "\\u0", +, hex, (, codepoint, ), ), ;, }, else, if, (]
[), {, out, ., write, (, "\\u0", +, hex, (, codepoint, ), ), ;, }, else, if, (, codepoint, >]
[;, }, else, if, (, codepoint, >, 0xf, ), {, out, ., write, (, "\\u00", +, hex, (, codepoint, )]
[., write, (, "\\u0", +, hex, (, codepoint, ), ), ;, }, else, if, (, codepoint, >, 0xf, ), {]
[), ;, }, else, if, (, codepoint, >, 0xf, ), {, out, ., write, (, "\\u00", +, hex, (, codepoint]
[+, hex, (, codepoint, ), ), ;, }, else, if, (, codepoint, >, 0xf, ), {, out, ., write, (]
[), ;, }, else, if, (, codepoint, >, 0xf, ), {, out, ., write, (, "\\u00", +, hex, (, codepoint]
[), ), ;, }, else, if, (, codepoint, >, 0xf, ), {, out, ., write, (, "\\u00", +, hex, (]
[), {, out, ., write, (, "\\u00", +, hex, (, codepoint, ), ), ;, }, else, {, out, ., write]
[>, 0xf, ), {, out, ., write, (, "\\u00", +, hex, (, codepoint, ), ), ;, }, else, {, out]
[), {, out, ., write, (, "\\u00", +, hex, (, codepoint, ), ), ;, }, else, {, out, ., write]
[;, }, else, {, out, ., write, (, "\\u000", +, hex, (, codepoint, ), ), ;, }, return, true, ;]
[., write, (, "\\u00", +, hex, (, codepoint, ), ), ;, }, else, {, out, ., write, (, "\\u000", +]
[), ;, }, else, {, out, ., write, (, "\\u000", +, hex, (, codepoint, ), ), ;, }, return, true]
[+, hex, (, codepoint, ), ), ;, }, else, {, out, ., write, (, "\\u000", +, hex, (, codepoint, )]
[), ;, }, else, {, out, ., write, (, "\\u000", +, hex, (, codepoint, ), ), ;, }, return, true]
[), ), ;, }, else, {, out, ., write, (, "\\u000", +, hex, (, codepoint, ), ), ;, }, return]
[;, }, return, true, ;, }, protected, String, toUtf16Escape, (, final, int, codepoint, ), {, return, "\\u", +, hex, (]
[., write, (, "\\u000", +, hex, (, codepoint, ), ), ;, }, return, true, ;, }, protected, String, toUtf16Escape, (]
[), ;, }, return, true, ;, }, protected, String, toUtf16Escape, (, final, int, codepoint, ), {, return, "\\u", +, hex]
[+, hex, (, codepoint, ), ), ;, }, return, true, ;, }, protected, String, toUtf16Escape, (, final, int, codepoint, )]
[), ;, }, return, true, ;, }, protected, String, toUtf16Escape, (, final, int, codepoint, ), {, return, "\\u", +, hex]
[), ), ;, }, return, true, ;, }, protected, String, toUtf16Escape, (, final, int, codepoint, ), {, return, "\\u", +]
[;, }, protected, String, toUtf16Escape, (, final, int, codepoint, ), {, return, "\\u", +, hex, (, codepoint, ), ;, }]
[;, }, }]
[+, hex, (, codepoint, ), ;, }, }]
[;, }, }]
[), ;, }, }]
