[., time, ., DurationFieldType, ;, public, abstract, class, BaseDurationField, extends, DurationField, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[time, ., DurationFieldType, ;, public, abstract, class, BaseDurationField, extends, DurationField, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[2554245107589433218L, ;, private, final, DurationFieldType, iType, ;, protected, BaseDurationField, (, DurationFieldType, type, ), {, super, (, ), ;, if, (]
[2554245107589433218L, ;, private, final, DurationFieldType, iType, ;, protected, BaseDurationField, (, DurationFieldType, type, ), {, super, (, ), ;, if, (]
[private, final, DurationFieldType, iType, ;, protected, BaseDurationField, (, DurationFieldType, type, ), {, super, (, ), ;, if, (, type, ==]
[;, protected, BaseDurationField, (, DurationFieldType, type, ), {, super, (, ), ;, if, (, type, ==, null, ), {, throw]
[(, DurationFieldType, type, ), {, super, (, ), ;, if, (, type, ==, null, ), {, throw, new, IllegalArgumentException, (]
[{, super, (, ), ;, if, (, type, ==, null, ), {, throw, new, IllegalArgumentException, (, "The type must not be null", ), ;, }]
[(, ), ;, if, (, type, ==, null, ), {, throw, new, IllegalArgumentException, (, "The type must not be null", ), ;, }, iType, =]
[new, IllegalArgumentException, (, "The type must not be null", ), ;, }, iType, =, type, ;, }, public, final, DurationFieldType, getType, (, ), {, return]
[}, public, final, DurationFieldType, getType, (, ), {, return, iType, ;, }, public, final, String, getName, (, ), {, return]
[}, public, final, DurationFieldType, getType, (, ), {, return, iType, ;, }, public, final, String, getName, (, ), {, return]
[getName, (, ), {, return, iType, ., getName, (, ), ;, }, public, final, boolean, isSupported, (, ), {, return]
[public, final, boolean, isSupported, (, ), {, return, true, ;, }, public, int, getValue, (, long, duration, ), {, return]
[public, final, boolean, isSupported, (, ), {, return, true, ;, }, public, int, getValue, (, long, duration, ), {, return]
[(, ), {, return, true, ;, }, public, int, getValue, (, long, duration, ), {, return, FieldUtils, ., safeToInt, (]
[{, return, true, ;, }, public, int, getValue, (, long, duration, ), {, return, FieldUtils, ., safeToInt, (, getValueAsLong, (]
[FieldUtils, ., safeToInt, (, getValueAsLong, (, duration, ), ), ;, }, public, long, getValueAsLong, (, long, duration, ), {, return]
[FieldUtils, ., safeToInt, (, getValueAsLong, (, duration, ), ), ;, }, public, long, getValueAsLong, (, long, duration, ), {, return]
[safeToInt, (, getValueAsLong, (, duration, ), ), ;, }, public, long, getValueAsLong, (, long, duration, ), {, return, duration, /]
[return, duration, /, getUnitMillis, (, ), ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return]
[return, duration, /, getUnitMillis, (, ), ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return]
[(, ), ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return, FieldUtils, ., safeToInt, (]
[;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return, FieldUtils, ., safeToInt, (, getValueAsLong, (]
[public, int, getValue, (, long, duration, ,, long, instant, ), {, return, FieldUtils, ., safeToInt, (, getValueAsLong, (, duration, ,]
[safeToInt, (, getValueAsLong, (, duration, ,, instant, ), ), ;, }, public, long, getMillis, (, int, value, ), {, return]
[safeToInt, (, getValueAsLong, (, duration, ,, instant, ), ), ;, }, public, long, getMillis, (, int, value, ), {, return]
[getValueAsLong, (, duration, ,, instant, ), ), ;, }, public, long, getMillis, (, int, value, ), {, return, value, *]
[value, ), {, return, value, *, getUnitMillis, (, ), ;, }, public, long, getMillis, (, long, value, ), {, return]
[value, ), {, return, value, *, getUnitMillis, (, ), ;, }, public, long, getMillis, (, long, value, ), {, return]
[value, *, getUnitMillis, (, ), ;, }, public, long, getMillis, (, long, value, ), {, return, FieldUtils, ., safeMultiply, (]
[getUnitMillis, (, ), ;, }, public, long, getMillis, (, long, value, ), {, return, FieldUtils, ., safeMultiply, (, value, ,]
[value, ,, getUnitMillis, (, ), ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[value, ,, getUnitMillis, (, ), ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[), ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, FieldUtils, ., safeToInt, (]
[;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, FieldUtils, ., safeToInt, (, getDifferenceAsLong, (]
[public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, FieldUtils, ., safeToInt, (, getDifferenceAsLong, (, minuendInstant, ,]
[getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), ), ;, }, public, int, compareTo, (, DurationField, otherField, ), {, long, otherMillis, =]
[getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), ), ;, }, public, int, compareTo, (, DurationField, otherField, ), {, long, otherMillis, =]
[public, int, compareTo, (, DurationField, otherField, ), {, long, otherMillis, =, otherField, ., getUnitMillis, (, ), ;, long, thisMillis, =]
[), {, long, otherMillis, =, otherField, ., getUnitMillis, (, ), ;, long, thisMillis, =, getUnitMillis, (, ), ;, if, (]
[), {, long, otherMillis, =, otherField, ., getUnitMillis, (, ), ;, long, thisMillis, =, getUnitMillis, (, ), ;, if, (]
[long, otherMillis, =, otherField, ., getUnitMillis, (, ), ;, long, thisMillis, =, getUnitMillis, (, ), ;, if, (, thisMillis, ==]
[., getUnitMillis, (, ), ;, long, thisMillis, =, getUnitMillis, (, ), ;, if, (, thisMillis, ==, otherMillis, ), {, return]
[long, thisMillis, =, getUnitMillis, (, ), ;, if, (, thisMillis, ==, otherMillis, ), {, return, 0, ;, }, if, (]
[long, thisMillis, =, getUnitMillis, (, ), ;, if, (, thisMillis, ==, otherMillis, ), {, return, 0, ;, }, if, (]
[=, getUnitMillis, (, ), ;, if, (, thisMillis, ==, otherMillis, ), {, return, 0, ;, }, if, (, thisMillis, <]
[;, if, (, thisMillis, ==, otherMillis, ), {, return, 0, ;, }, if, (, thisMillis, <, otherMillis, ), {, return]
[if, (, thisMillis, ==, otherMillis, ), {, return, 0, ;, }, if, (, thisMillis, <, otherMillis, ), {, return, -]
[{, return, 0, ;, }, if, (, thisMillis, <, otherMillis, ), {, return, -, 1, ;, }, else, {, return]
[{, return, -, 1, ;, }, else, {, return, 1, ;, }, }, public, String, toString, (, ), {, return]
[{, return, -, 1, ;, }, else, {, return, 1, ;, }, }, public, String, toString, (, ), {, return]
[{, return, -, 1, ;, }, else, {, return, 1, ;, }, }, public, String, toString, (, ), {, return]
[-, 1, ;, }, else, {, return, 1, ;, }, }, public, String, toString, (, ), {, return, "DurationField[", +]
[else, {, return, 1, ;, }, }, public, String, toString, (, ), {, return, "DurationField[", +, getName, (, ), +]
