[;, slope, =, a, ;, intercept, =, b, ;, error, =, new, NormalDistribution, (, rng, ,, 0, ,, sigma, ,]
[), ;, slope, =, a, ;, intercept, =, b, ;, error, =, new, NormalDistribution, (, rng, ,, 0, ,, sigma]
[=, a, ;, intercept, =, b, ;, error, =, new, NormalDistribution, (, rng, ,, 0, ,, sigma, ,, NormalDistribution, .]
[;, intercept, =, b, ;, error, =, new, NormalDistribution, (, rng, ,, 0, ,, sigma, ,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, )]
[=, b, ;, error, =, new, NormalDistribution, (, rng, ,, 0, ,, sigma, ,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, x]
[;, error, =, new, NormalDistribution, (, rng, ,, 0, ,, sigma, ,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, x, =, new]
[=, new, NormalDistribution, (, rng, ,, 0, ,, sigma, ,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, x, =, new, UniformRealDistribution, (]
[;, x, =, new, UniformRealDistribution, (, rng, ,, lo, ,, hi, ,, UniformRealDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, }, public, Point2D]
[,, 0, ,, sigma, ,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, x, =, new, UniformRealDistribution, (, rng, ,, lo, ,, hi]
[,, sigma, ,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, x, =, new, UniformRealDistribution, (, rng, ,, lo, ,, hi, ,, UniformRealDistribution]
[,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, x, =, new, UniformRealDistribution, (, rng, ,, lo, ,, hi, ,, UniformRealDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY]
[), ;, x, =, new, UniformRealDistribution, (, rng, ,, lo, ,, hi, ,, UniformRealDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, }, public]
[., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, x, =, new, UniformRealDistribution, (, rng, ,, lo, ,, hi, ,, UniformRealDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;]
[=, new, UniformRealDistribution, (, rng, ,, lo, ,, hi, ,, UniformRealDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, }, public, Point2D, ., Double]
[;, }, public, Point2D, ., Double, [, ], generate, (, int, n, ), {, final, Point2D, ., Double, [, ]]
[,, lo, ,, hi, ,, UniformRealDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, }, public, Point2D, ., Double, [, ], generate, (, int]
[,, hi, ,, UniformRealDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, }, public, Point2D, ., Double, [, ], generate, (, int, n, )]
[,, UniformRealDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, }, public, Point2D, ., Double, [, ], generate, (, int, n, ), {, final]
[), ;, }, public, Point2D, ., Double, [, ], generate, (, int, n, ), {, final, Point2D, ., Double, []
[., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, }, public, Point2D, ., Double, [, ], generate, (, int, n, ), {, final, Point2D, .]
[;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, ), {, cloud, [, i, ]]
[], ;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, ), {, cloud, [, i]
[;, i, <, n, ;, i, ++, ), {, cloud, [, i, ], =, create, (, ), ;, }, return]
[;, i, ++, ), {, cloud, [, i, ], =, create, (, ), ;, }, return, cloud, ;, }, private]
[<, n, ;, i, ++, ), {, cloud, [, i, ], =, create, (, ), ;, }, return, cloud, ;]
[;, i, ++, ), {, cloud, [, i, ], =, create, (, ), ;, }, return, cloud, ;, }, private]
[), {, cloud, [, i, ], =, create, (, ), ;, }, return, cloud, ;, }, private, Point2D, ., Double]
[++, ), {, cloud, [, i, ], =, create, (, ), ;, }, return, cloud, ;, }, private, Point2D, .]
[=, create, (, ), ;, }, return, cloud, ;, }, private, Point2D, ., Double, create, (, ), {, final, double]
[[, i, ], =, create, (, ), ;, }, return, cloud, ;, }, private, Point2D, ., Double, create, (, )]
[], =, create, (, ), ;, }, return, cloud, ;, }, private, Point2D, ., Double, create, (, ), {, final]
[;, }, return, cloud, ;, }, private, Point2D, ., Double, create, (, ), {, final, double, abscissa, =, x, .]
[;, }, private, Point2D, ., Double, create, (, ), {, final, double, abscissa, =, x, ., sample, (, ), ;]
[;, final, double, yModel, =, slope, *, abscissa, +, intercept, ;, final, double, ordinate, =, yModel, +, error, ., sample]
[., sample, (, ), ;, final, double, yModel, =, slope, *, abscissa, +, intercept, ;, final, double, ordinate, =, yModel]
[;, final, double, ordinate, =, yModel, +, error, ., sample, (, ), ;, return, new, Point2D, ., Double, (, abscissa]
[+, intercept, ;, final, double, ordinate, =, yModel, +, error, ., sample, (, ), ;, return, new, Point2D, ., Double]
[*, abscissa, +, intercept, ;, final, double, ordinate, =, yModel, +, error, ., sample, (, ), ;, return, new, Point2D]
[+, intercept, ;, final, double, ordinate, =, yModel, +, error, ., sample, (, ), ;, return, new, Point2D, ., Double]
[;, final, double, ordinate, =, yModel, +, error, ., sample, (, ), ;, return, new, Point2D, ., Double, (, abscissa]
[;, return, new, Point2D, ., Double, (, abscissa, ,, ordinate, ), ;, }, }]
[+, error, ., sample, (, ), ;, return, new, Point2D, ., Double, (, abscissa, ,, ordinate, ), ;, }, }]
[;, return, new, Point2D, ., Double, (, abscissa, ,, ordinate, ), ;, }, }]
[., sample, (, ), ;, return, new, Point2D, ., Double, (, abscissa, ,, ordinate, ), ;, }, }]
[;, }, }]
[,, ordinate, ), ;, }, }]
[), ;, }, }]
