[., Entry, ;, import, java, ., util, ., regex, ., Pattern, ;, class, RhinoErrorReporter, {, static, final, DiagnosticType, PARSE_ERROR, =]
[., Entry, ;, import, java, ., util, ., regex, ., Pattern, ;, class, RhinoErrorReporter, {, static, final, DiagnosticType, PARSE_ERROR, =]
[java, ., util, ., regex, ., Pattern, ;, class, RhinoErrorReporter, {, static, final, DiagnosticType, PARSE_ERROR, =, DiagnosticType, ., error, (]
[util, ., regex, ., Pattern, ;, class, RhinoErrorReporter, {, static, final, DiagnosticType, PARSE_ERROR, =, DiagnosticType, ., error, (, "JSC_PARSE_ERROR", ,]
[{, static, final, DiagnosticType, PARSE_ERROR, =, DiagnosticType, ., error, (, "JSC_PARSE_ERROR", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, TYPE_PARSE_ERROR, =]
[{, static, final, DiagnosticType, PARSE_ERROR, =, DiagnosticType, ., error, (, "JSC_PARSE_ERROR", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, TYPE_PARSE_ERROR, =]
[PARSE_ERROR, =, DiagnosticType, ., error, (, "JSC_PARSE_ERROR", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, TYPE_PARSE_ERROR, =, DiagnosticType, ., warning, (]
[DiagnosticType, ., error, (, "JSC_PARSE_ERROR", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, TYPE_PARSE_ERROR, =, DiagnosticType, ., warning, (, "JSC_TYPE_PARSE_ERROR", ,]
[;, static, final, DiagnosticType, TYPE_PARSE_ERROR, =, DiagnosticType, ., warning, (, "JSC_TYPE_PARSE_ERROR", ,, "{0}", ), ;, static, final, DiagnosticType, TRAILING_COMMA, =]
[;, static, final, DiagnosticType, TYPE_PARSE_ERROR, =, DiagnosticType, ., warning, (, "JSC_TYPE_PARSE_ERROR", ,, "{0}", ), ;, static, final, DiagnosticType, TRAILING_COMMA, =]
[TYPE_PARSE_ERROR, =, DiagnosticType, ., warning, (, "JSC_TYPE_PARSE_ERROR", ,, "{0}", ), ;, static, final, DiagnosticType, TRAILING_COMMA, =, DiagnosticType, ., error, (]
[DiagnosticType, ., warning, (, "JSC_TYPE_PARSE_ERROR", ,, "{0}", ), ;, static, final, DiagnosticType, TRAILING_COMMA, =, DiagnosticType, ., error, (, "JSC_TRAILING_COMMA", ,]
[DiagnosticType, ., warning, (, "JSC_TYPE_PARSE_ERROR", ,, "{0}", ), ;, static, final, DiagnosticType, TRAILING_COMMA, =, DiagnosticType, ., error, (, "JSC_TRAILING_COMMA", ,]
[DiagnosticType, ., warning, (, "JSC_TYPE_PARSE_ERROR", ,, "{0}", ), ;, static, final, DiagnosticType, TRAILING_COMMA, =, DiagnosticType, ., error, (, "JSC_TRAILING_COMMA", ,]
[DiagnosticType, ., warning, (, "JSC_TYPE_PARSE_ERROR", ,, "{0}", ), ;, static, final, DiagnosticType, TRAILING_COMMA, =, DiagnosticType, ., error, (, "JSC_TRAILING_COMMA", ,]
[warning, (, "JSC_TYPE_PARSE_ERROR", ,, "{0}", ), ;, static, final, DiagnosticType, TRAILING_COMMA, =, DiagnosticType, ., error, (, "JSC_TRAILING_COMMA", ,, "Parse error. IE8 (and below) will parse trailing commas in ", +]
["JSC_TYPE_PARSE_ERROR", ,, "{0}", ), ;, static, final, DiagnosticType, TRAILING_COMMA, =, DiagnosticType, ., error, (, "JSC_TRAILING_COMMA", ,, "Parse error. IE8 (and below) will parse trailing commas in ", +, "array and object literals incorrectly. ", +]
["{0}", ), ;, static, final, DiagnosticType, TRAILING_COMMA, =, DiagnosticType, ., error, (, "JSC_TRAILING_COMMA", ,, "Parse error. IE8 (and below) will parse trailing commas in ", +, "array and object literals incorrectly. ", +, "If you are targeting newer versions of JS, ", +]
[DiagnosticType, ., error, (, "JSC_TRAILING_COMMA", ,, "Parse error. IE8 (and below) will parse trailing commas in ", +, "array and object literals incorrectly. ", +, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option.", ), ;, static, final, DiagnosticType, DUPLICATE_PARAM, =]
[DiagnosticType, ., error, (, "JSC_TRAILING_COMMA", ,, "Parse error. IE8 (and below) will parse trailing commas in ", +, "array and object literals incorrectly. ", +, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option.", ), ;, static, final, DiagnosticType, DUPLICATE_PARAM, =]
["JSC_TRAILING_COMMA", ,, "Parse error. IE8 (and below) will parse trailing commas in ", +, "array and object literals incorrectly. ", +, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option.", ), ;, static, final, DiagnosticType, DUPLICATE_PARAM, =, DiagnosticType, ., error, (]
["Parse error. IE8 (and below) will parse trailing commas in ", +, "array and object literals incorrectly. ", +, "If you are targeting newer versions of JS, ", +, "set the appropriate language_in option.", ), ;, static, final, DiagnosticType, DUPLICATE_PARAM, =, DiagnosticType, ., error, (, "JSC_DUPLICATE_PARAM", ,]
[;, static, final, DiagnosticType, DUPLICATE_PARAM, =, DiagnosticType, ., error, (, "JSC_DUPLICATE_PARAM", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, BAD_JSDOC_ANNOTATION, =]
[;, static, final, DiagnosticType, DUPLICATE_PARAM, =, DiagnosticType, ., error, (, "JSC_DUPLICATE_PARAM", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, BAD_JSDOC_ANNOTATION, =]
[DUPLICATE_PARAM, =, DiagnosticType, ., error, (, "JSC_DUPLICATE_PARAM", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, BAD_JSDOC_ANNOTATION, =, DiagnosticType, ., warning, (]
[DiagnosticType, ., error, (, "JSC_DUPLICATE_PARAM", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, BAD_JSDOC_ANNOTATION, =, DiagnosticType, ., warning, (, "JSC_BAD_JSDOC_ANNOTATION", ,]
[;, static, final, DiagnosticType, BAD_JSDOC_ANNOTATION, =, DiagnosticType, ., warning, (, "JSC_BAD_JSDOC_ANNOTATION", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, MISPLACED_TYPE_ANNOTATION, =]
[;, static, final, DiagnosticType, BAD_JSDOC_ANNOTATION, =, DiagnosticType, ., warning, (, "JSC_BAD_JSDOC_ANNOTATION", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, MISPLACED_TYPE_ANNOTATION, =]
[BAD_JSDOC_ANNOTATION, =, DiagnosticType, ., warning, (, "JSC_BAD_JSDOC_ANNOTATION", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, MISPLACED_TYPE_ANNOTATION, =, DiagnosticType, ., warning, (]
[DiagnosticType, ., warning, (, "JSC_BAD_JSDOC_ANNOTATION", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, MISPLACED_TYPE_ANNOTATION, =, DiagnosticType, ., warning, (, "JSC_MISPLACED_TYPE_ANNOTATION", ,]
[DiagnosticType, ., warning, (, "JSC_BAD_JSDOC_ANNOTATION", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, MISPLACED_TYPE_ANNOTATION, =, DiagnosticType, ., warning, (, "JSC_MISPLACED_TYPE_ANNOTATION", ,]
[warning, (, "JSC_BAD_JSDOC_ANNOTATION", ,, "Parse error. {0}", ), ;, static, final, DiagnosticType, MISPLACED_TYPE_ANNOTATION, =, DiagnosticType, ., warning, (, "JSC_MISPLACED_TYPE_ANNOTATION", ,, "Type annotations are not allowed here. ", +]
[Map, <, Pattern, ,, DiagnosticType, >, typeMap, ;, final, AbstractCompiler, compiler, ;, private, Pattern, replacePlaceHolders, (, String, s, ), {]
[Pattern, ,, DiagnosticType, >, typeMap, ;, final, AbstractCompiler, compiler, ;, private, Pattern, replacePlaceHolders, (, String, s, ), {, s, =]
[Pattern, ,, DiagnosticType, >, typeMap, ;, final, AbstractCompiler, compiler, ;, private, Pattern, replacePlaceHolders, (, String, s, ), {, s, =]
[typeMap, ;, final, AbstractCompiler, compiler, ;, private, Pattern, replacePlaceHolders, (, String, s, ), {, s, =, Pattern, ., quote, (]
[compiler, ;, private, Pattern, replacePlaceHolders, (, String, s, ), {, s, =, Pattern, ., quote, (, s, ), ;, return]
[compiler, ;, private, Pattern, replacePlaceHolders, (, String, s, ), {, s, =, Pattern, ., quote, (, s, ), ;, return]
[replacePlaceHolders, (, String, s, ), {, s, =, Pattern, ., quote, (, s, ), ;, return, Pattern, ., compile, (]
[replacePlaceHolders, (, String, s, ), {, s, =, Pattern, ., quote, (, s, ), ;, return, Pattern, ., compile, (]
[), {, s, =, Pattern, ., quote, (, s, ), ;, return, Pattern, ., compile, (, s, ., replaceAll, (]
[s, =, Pattern, ., quote, (, s, ), ;, return, Pattern, ., compile, (, s, ., replaceAll, (, "\\{\\d+\\}", ,]
[compile, (, s, ., replaceAll, (, "\\{\\d+\\}", ,, "\\\\E.*\\\\Q", ), ), ;, }, private, RhinoErrorReporter, (, AbstractCompiler, compiler, ), {]
[compile, (, s, ., replaceAll, (, "\\{\\d+\\}", ,, "\\\\E.*\\\\Q", ), ), ;, }, private, RhinoErrorReporter, (, AbstractCompiler, compiler, ), {]
[replaceAll, (, "\\{\\d+\\}", ,, "\\\\E.*\\\\Q", ), ), ;, }, private, RhinoErrorReporter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
["\\{\\d+\\}", ,, "\\\\E.*\\\\Q", ), ), ;, }, private, RhinoErrorReporter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;]
["\\\\E.*\\\\Q", ), ), ;, }, private, RhinoErrorReporter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, typeMap, =]
["\\\\E.*\\\\Q", ), ), ;, }, private, RhinoErrorReporter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, typeMap, =]
[}, private, RhinoErrorReporter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, typeMap, =, ImmutableMap, ., of, (]
[RhinoErrorReporter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, typeMap, =, ImmutableMap, ., of, (, replacePlaceHolders, (]
[RhinoErrorReporter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, typeMap, =, ImmutableMap, ., of, (, replacePlaceHolders, (]
[RhinoErrorReporter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, typeMap, =, ImmutableMap, ., of, (, replacePlaceHolders, (]
[RhinoErrorReporter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, typeMap, =, ImmutableMap, ., of, (, replacePlaceHolders, (]
[RhinoErrorReporter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, typeMap, =, ImmutableMap, ., of, (, replacePlaceHolders, (]
[RhinoErrorReporter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, typeMap, =, ImmutableMap, ., of, (, replacePlaceHolders, (]
[RhinoErrorReporter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, typeMap, =, ImmutableMap, ., of, (, replacePlaceHolders, (]
[ImmutableMap, ., of, (, replacePlaceHolders, (, com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (]
[replacePlaceHolders, (, com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.extra.trailing.comma", ), ), ,]
[com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.extra.trailing.comma", ), ), ,, TRAILING_COMMA, ,]
[google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.extra.trailing.comma", ), ), ,, TRAILING_COMMA, ,, replacePlaceHolders, (]
[google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.extra.trailing.comma", ), ), ,, TRAILING_COMMA, ,, replacePlaceHolders, (]
[google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.extra.trailing.comma", ), ), ,, TRAILING_COMMA, ,, replacePlaceHolders, (]
[google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.extra.trailing.comma", ), ), ,, TRAILING_COMMA, ,, replacePlaceHolders, (]
[google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.extra.trailing.comma", ), ), ,, TRAILING_COMMA, ,, replacePlaceHolders, (]
[google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.extra.trailing.comma", ), ), ,, TRAILING_COMMA, ,, replacePlaceHolders, (]
[google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.extra.trailing.comma", ), ), ,, TRAILING_COMMA, ,, replacePlaceHolders, (]
[), ,, TRAILING_COMMA, ,, replacePlaceHolders, (, com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (]
[replacePlaceHolders, (, com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.dup.parms", ), ), ,]
[com, ., google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.dup.parms", ), ), ,, DUPLICATE_PARAM, ,]
[google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.dup.parms", ), ), ,, DUPLICATE_PARAM, ,, replacePlaceHolders, (]
[google, ., javascript, ., rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.dup.parms", ), ), ,, DUPLICATE_PARAM, ,, replacePlaceHolders, (]
[rhino, ., head, ., ScriptRuntime, ., getMessage0, (, "msg.dup.parms", ), ), ,, DUPLICATE_PARAM, ,, replacePlaceHolders, (, ScriptRuntime, ., getMessage0, (]
[ScriptRuntime, ., getMessage0, (, "msg.dup.parms", ), ), ,, DUPLICATE_PARAM, ,, replacePlaceHolders, (, ScriptRuntime, ., getMessage0, (, "msg.bad.jsdoc.tag", ), ), ,]
[getMessage0, (, "msg.dup.parms", ), ), ,, DUPLICATE_PARAM, ,, replacePlaceHolders, (, ScriptRuntime, ., getMessage0, (, "msg.bad.jsdoc.tag", ), ), ,, BAD_JSDOC_ANNOTATION, ,]
[getMessage0, (, "msg.dup.parms", ), ), ,, DUPLICATE_PARAM, ,, replacePlaceHolders, (, ScriptRuntime, ., getMessage0, (, "msg.bad.jsdoc.tag", ), ), ,, BAD_JSDOC_ANNOTATION, ,]
[), ,, DUPLICATE_PARAM, ,, replacePlaceHolders, (, ScriptRuntime, ., getMessage0, (, "msg.bad.jsdoc.tag", ), ), ,, BAD_JSDOC_ANNOTATION, ,, Pattern, ., compile, (]
[,, replacePlaceHolders, (, ScriptRuntime, ., getMessage0, (, "msg.bad.jsdoc.tag", ), ), ,, BAD_JSDOC_ANNOTATION, ,, Pattern, ., compile, (, "^Type annotations are not allowed here.*", ), ,]
[(, ScriptRuntime, ., getMessage0, (, "msg.bad.jsdoc.tag", ), ), ,, BAD_JSDOC_ANNOTATION, ,, Pattern, ., compile, (, "^Type annotations are not allowed here.*", ), ,, MISPLACED_TYPE_ANNOTATION, ,]
[(, ScriptRuntime, ., getMessage0, (, "msg.bad.jsdoc.tag", ), ), ,, BAD_JSDOC_ANNOTATION, ,, Pattern, ., compile, (, "^Type annotations are not allowed here.*", ), ,, MISPLACED_TYPE_ANNOTATION, ,]
[(, "msg.bad.jsdoc.tag", ), ), ,, BAD_JSDOC_ANNOTATION, ,, Pattern, ., compile, (, "^Type annotations are not allowed here.*", ), ,, MISPLACED_TYPE_ANNOTATION, ,, Pattern, ., compile, (]
[), ,, BAD_JSDOC_ANNOTATION, ,, Pattern, ., compile, (, "^Type annotations are not allowed here.*", ), ,, MISPLACED_TYPE_ANNOTATION, ,, Pattern, ., compile, (, "^Bad type annotation.*", ), ,]
[public, static, com, ., google, ., javascript, ., rhino, ., head, ., ErrorReporter, forNewRhino, (, AbstractCompiler, compiler, ), {, return]
[., google, ., javascript, ., rhino, ., head, ., ErrorReporter, forNewRhino, (, AbstractCompiler, compiler, ), {, return, new, NewRhinoErrorReporter, (]
[), {, return, new, NewRhinoErrorReporter, (, compiler, ), ;, }, public, static, ErrorReporter, forOldRhino, (, AbstractCompiler, compiler, ), {, return]
[new, NewRhinoErrorReporter, (, compiler, ), ;, }, public, static, ErrorReporter, forOldRhino, (, AbstractCompiler, compiler, ), {, return, new, OldRhinoErrorReporter, (]
[compiler, ), ;, }, void, warningAtLine, (, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {]
[compiler, ), ;, }, void, warningAtLine, (, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {]
[void, warningAtLine, (, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {, compiler, ., report, (]
[(, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {, compiler, ., report, (, makeError, (]
[message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {, compiler, ., report, (, makeError, (, message, ,]
[String, sourceName, ,, int, line, ,, int, lineOffset, ), {, compiler, ., report, (, makeError, (, message, ,, sourceName, ,]
[,, int, line, ,, int, lineOffset, ), {, compiler, ., report, (, makeError, (, message, ,, sourceName, ,, line, ,]
[line, ,, int, lineOffset, ), {, compiler, ., report, (, makeError, (, message, ,, sourceName, ,, line, ,, lineOffset, ,]
[line, ,, int, lineOffset, ), {, compiler, ., report, (, makeError, (, message, ,, sourceName, ,, line, ,, lineOffset, ,]
[), ), ;, }, void, errorAtLine, (, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {]
[), ), ;, }, void, errorAtLine, (, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {]
[void, errorAtLine, (, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {, compiler, ., report, (]
[(, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {, compiler, ., report, (, makeError, (]
[message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {, compiler, ., report, (, makeError, (, message, ,]
[String, sourceName, ,, int, line, ,, int, lineOffset, ), {, compiler, ., report, (, makeError, (, message, ,, sourceName, ,]
[,, int, line, ,, int, lineOffset, ), {, compiler, ., report, (, makeError, (, message, ,, sourceName, ,, line, ,]
[line, ,, int, lineOffset, ), {, compiler, ., report, (, makeError, (, message, ,, sourceName, ,, line, ,, lineOffset, ,]
[line, ,, int, lineOffset, ), {, compiler, ., report, (, makeError, (, message, ,, sourceName, ,, line, ,, lineOffset, ,]
[int, line, ,, int, lineOffset, ,, CheckLevel, defaultLevel, ), {, for, (, Entry, <, Pattern, ,, DiagnosticType, >, entry, :]
[int, line, ,, int, lineOffset, ,, CheckLevel, defaultLevel, ), {, for, (, Entry, <, Pattern, ,, DiagnosticType, >, entry, :]
[{, for, (, Entry, <, Pattern, ,, DiagnosticType, >, entry, :, typeMap, ., entrySet, (, ), ), {, if, (]
[{, for, (, Entry, <, Pattern, ,, DiagnosticType, >, entry, :, typeMap, ., entrySet, (, ), ), {, if, (]
[{, for, (, Entry, <, Pattern, ,, DiagnosticType, >, entry, :, typeMap, ., entrySet, (, ), ), {, if, (]
[{, for, (, Entry, <, Pattern, ,, DiagnosticType, >, entry, :, typeMap, ., entrySet, (, ), ), {, if, (]
[>, entry, :, typeMap, ., entrySet, (, ), ), {, if, (, entry, ., getKey, (, ), ., matcher, (]
[{, if, (, entry, ., getKey, (, ), ., matcher, (, message, ), ., matches, (, ), ), {, return]
[{, if, (, entry, ., getKey, (, ), ., matcher, (, message, ), ., matches, (, ), ), {, return]
[., getKey, (, ), ., matcher, (, message, ), ., matches, (, ), ), {, return, JSError, ., make, (]
[(, ), ., matcher, (, message, ), ., matches, (, ), ), {, return, JSError, ., make, (, sourceName, ,]
[., matcher, (, message, ), ., matches, (, ), ), {, return, JSError, ., make, (, sourceName, ,, line, ,]
[(, message, ), ., matches, (, ), ), {, return, JSError, ., make, (, sourceName, ,, line, ,, lineOffset, ,]
[(, message, ), ., matches, (, ), ), {, return, JSError, ., make, (, sourceName, ,, line, ,, lineOffset, ,]
[), ), {, return, JSError, ., make, (, sourceName, ,, line, ,, lineOffset, ,, entry, ., getValue, (, ), ,]
[make, (, sourceName, ,, line, ,, lineOffset, ,, entry, ., getValue, (, ), ,, message, ), ;, }, }, return]
[make, (, sourceName, ,, line, ,, lineOffset, ,, entry, ., getValue, (, ), ,, message, ), ;, }, }, return]
[line, ,, lineOffset, ,, entry, ., getValue, (, ), ,, message, ), ;, }, }, return, JSError, ., make, (]
[lineOffset, ,, entry, ., getValue, (, ), ,, message, ), ;, }, }, return, JSError, ., make, (, sourceName, ,]
[entry, ., getValue, (, ), ,, message, ), ;, }, }, return, JSError, ., make, (, sourceName, ,, line, ,]
[getValue, (, ), ,, message, ), ;, }, }, return, JSError, ., make, (, sourceName, ,, line, ,, lineOffset, ,]
[), ,, message, ), ;, }, }, return, JSError, ., make, (, sourceName, ,, line, ,, lineOffset, ,, defaultLevel, ,]
[message, ), ;, }, }, return, JSError, ., make, (, sourceName, ,, line, ,, lineOffset, ,, defaultLevel, ,, PARSE_ERROR, ,]
[;, }, private, static, class, OldRhinoErrorReporter, extends, RhinoErrorReporter, implements, ErrorReporter, {, private, OldRhinoErrorReporter, (, AbstractCompiler, compiler, ), {, super, (]
[}, @, Override, public, void, error, (, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {]
[}, @, Override, public, void, error, (, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {]
[void, error, (, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {, super, ., errorAtLine, (]
[(, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {, super, ., errorAtLine, (, message, ,]
[message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {, super, ., errorAtLine, (, message, ,, sourceName, ,]
[String, sourceName, ,, int, line, ,, int, lineOffset, ), {, super, ., errorAtLine, (, message, ,, sourceName, ,, line, ,]
[}, @, Override, public, void, warning, (, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {]
[}, @, Override, public, void, warning, (, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {]
[void, warning, (, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {, super, ., warningAtLine, (]
[(, String, message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {, super, ., warningAtLine, (, message, ,]
[message, ,, String, sourceName, ,, int, line, ,, int, lineOffset, ), {, super, ., warningAtLine, (, message, ,, sourceName, ,]
[String, sourceName, ,, int, line, ,, int, lineOffset, ), {, super, ., warningAtLine, (, message, ,, sourceName, ,, line, ,]
[., javascript, ., rhino, ., head, ., ast, ., IdeErrorReporter, {, private, NewRhinoErrorReporter, (, AbstractCompiler, compiler, ), {, super, (]
[EvaluatorException, runtimeError, (, String, message, ,, String, sourceName, ,, int, line, ,, String, lineSource, ,, int, lineOffset, ), {, return]
[lineSource, ,, int, lineOffset, ), {, return, new, com, ., google, ., javascript, ., rhino, ., head, ., EvaluatorException, (]
[int, lineOffset, ), {, return, new, com, ., google, ., javascript, ., rhino, ., head, ., EvaluatorException, (, message, ,]
[), {, return, new, com, ., google, ., javascript, ., rhino, ., head, ., EvaluatorException, (, message, ,, sourceName, ,]
[return, new, com, ., google, ., javascript, ., rhino, ., head, ., EvaluatorException, (, message, ,, sourceName, ,, line, ,]
[com, ., google, ., javascript, ., rhino, ., head, ., EvaluatorException, (, message, ,, sourceName, ,, line, ,, lineSource, ,]
[public, void, error, (, String, message, ,, String, sourceName, ,, int, line, ,, String, sourceLine, ,, int, lineOffset, ), {]
[public, void, error, (, String, message, ,, String, sourceName, ,, int, line, ,, String, sourceLine, ,, int, lineOffset, ), {]
[String, message, ,, String, sourceName, ,, int, line, ,, String, sourceLine, ,, int, lineOffset, ), {, super, ., errorAtLine, (]
[,, String, sourceName, ,, int, line, ,, String, sourceLine, ,, int, lineOffset, ), {, super, ., errorAtLine, (, message, ,]
[sourceName, ,, int, line, ,, String, sourceLine, ,, int, lineOffset, ), {, super, ., errorAtLine, (, message, ,, sourceName, ,]
[int, line, ,, String, sourceLine, ,, int, lineOffset, ), {, super, ., errorAtLine, (, message, ,, sourceName, ,, line, ,]
[public, void, error, (, String, message, ,, String, sourceName, ,, int, offset, ,, int, length, ), {, int, line, =]
[message, ,, String, sourceName, ,, int, offset, ,, int, length, ), {, int, line, =, 1, ;, int, column, =]
[int, offset, ,, int, length, ), {, int, line, =, 1, ;, int, column, =, 0, ;, SourceFile, file, =]
[int, offset, ,, int, length, ), {, int, line, =, 1, ;, int, column, =, 0, ;, SourceFile, file, =]
[int, offset, ,, int, length, ), {, int, line, =, 1, ;, int, column, =, 0, ;, SourceFile, file, =]
[{, int, line, =, 1, ;, int, column, =, 0, ;, SourceFile, file, =, this, ., compiler, ., getSourceFileByName, (]
[;, int, column, =, 0, ;, SourceFile, file, =, this, ., compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (]
[;, int, column, =, 0, ;, SourceFile, file, =, this, ., compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (]
[column, =, 0, ;, SourceFile, file, =, this, ., compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (, file, !=]
[;, SourceFile, file, =, this, ., compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (, file, !=, null, ), {]
[file, =, this, ., compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (, file, !=, null, ), {, line, =]
[file, =, this, ., compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (, file, !=, null, ), {, line, =]
[compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (, file, !=, null, ), {, line, =, file, ., getLineOfOffset, (]
[(, sourceName, ), ;, if, (, file, !=, null, ), {, line, =, file, ., getLineOfOffset, (, offset, ), ;]
[), ;, if, (, file, !=, null, ), {, line, =, file, ., getLineOfOffset, (, offset, ), ;, column, =]
[), ;, if, (, file, !=, null, ), {, line, =, file, ., getLineOfOffset, (, offset, ), ;, column, =]
[file, !=, null, ), {, line, =, file, ., getLineOfOffset, (, offset, ), ;, column, =, file, ., getColumnOfOffset, (]
[{, line, =, file, ., getLineOfOffset, (, offset, ), ;, column, =, file, ., getColumnOfOffset, (, offset, ), ;, }]
[{, line, =, file, ., getLineOfOffset, (, offset, ), ;, column, =, file, ., getColumnOfOffset, (, offset, ), ;, }]
[., getLineOfOffset, (, offset, ), ;, column, =, file, ., getColumnOfOffset, (, offset, ), ;, }, super, ., errorAtLine, (]
[(, offset, ), ;, column, =, file, ., getColumnOfOffset, (, offset, ), ;, }, super, ., errorAtLine, (, message, ,]
[), ;, column, =, file, ., getColumnOfOffset, (, offset, ), ;, }, super, ., errorAtLine, (, message, ,, sourceName, ,]
[column, =, file, ., getColumnOfOffset, (, offset, ), ;, }, super, ., errorAtLine, (, message, ,, sourceName, ,, line, ,]
[public, void, warning, (, String, message, ,, String, sourceName, ,, int, line, ,, String, sourceLine, ,, int, lineOffset, ), {]
[public, void, warning, (, String, message, ,, String, sourceName, ,, int, line, ,, String, sourceLine, ,, int, lineOffset, ), {]
[String, message, ,, String, sourceName, ,, int, line, ,, String, sourceLine, ,, int, lineOffset, ), {, super, ., warningAtLine, (]
[,, String, sourceName, ,, int, line, ,, String, sourceLine, ,, int, lineOffset, ), {, super, ., warningAtLine, (, message, ,]
[sourceName, ,, int, line, ,, String, sourceLine, ,, int, lineOffset, ), {, super, ., warningAtLine, (, message, ,, sourceName, ,]
[int, line, ,, String, sourceLine, ,, int, lineOffset, ), {, super, ., warningAtLine, (, message, ,, sourceName, ,, line, ,]
[public, void, warning, (, String, message, ,, String, sourceName, ,, int, offset, ,, int, length, ), {, int, line, =]
[message, ,, String, sourceName, ,, int, offset, ,, int, length, ), {, int, line, =, 1, ;, int, column, =]
[int, offset, ,, int, length, ), {, int, line, =, 1, ;, int, column, =, 0, ;, SourceFile, file, =]
[int, offset, ,, int, length, ), {, int, line, =, 1, ;, int, column, =, 0, ;, SourceFile, file, =]
[int, offset, ,, int, length, ), {, int, line, =, 1, ;, int, column, =, 0, ;, SourceFile, file, =]
[{, int, line, =, 1, ;, int, column, =, 0, ;, SourceFile, file, =, this, ., compiler, ., getSourceFileByName, (]
[;, int, column, =, 0, ;, SourceFile, file, =, this, ., compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (]
[;, int, column, =, 0, ;, SourceFile, file, =, this, ., compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (]
[column, =, 0, ;, SourceFile, file, =, this, ., compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (, file, !=]
[;, SourceFile, file, =, this, ., compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (, file, !=, null, ), {]
[file, =, this, ., compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (, file, !=, null, ), {, line, =]
[file, =, this, ., compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (, file, !=, null, ), {, line, =]
[compiler, ., getSourceFileByName, (, sourceName, ), ;, if, (, file, !=, null, ), {, line, =, file, ., getLineOfOffset, (]
[(, sourceName, ), ;, if, (, file, !=, null, ), {, line, =, file, ., getLineOfOffset, (, offset, ), ;]
[), ;, if, (, file, !=, null, ), {, line, =, file, ., getLineOfOffset, (, offset, ), ;, column, =]
[), ;, if, (, file, !=, null, ), {, line, =, file, ., getLineOfOffset, (, offset, ), ;, column, =]
[file, !=, null, ), {, line, =, file, ., getLineOfOffset, (, offset, ), ;, column, =, file, ., getColumnOfOffset, (]
[{, line, =, file, ., getLineOfOffset, (, offset, ), ;, column, =, file, ., getColumnOfOffset, (, offset, ), ;, }]
[{, line, =, file, ., getLineOfOffset, (, offset, ), ;, column, =, file, ., getColumnOfOffset, (, offset, ), ;, }]
[., getLineOfOffset, (, offset, ), ;, column, =, file, ., getColumnOfOffset, (, offset, ), ;, }, super, ., errorAtLine, (]
[(, offset, ), ;, column, =, file, ., getColumnOfOffset, (, offset, ), ;, }, super, ., errorAtLine, (, message, ,]
[), ;, column, =, file, ., getColumnOfOffset, (, offset, ), ;, }, super, ., errorAtLine, (, message, ,, sourceName, ,]
[column, =, file, ., getColumnOfOffset, (, offset, ), ;, }, super, ., errorAtLine, (, message, ,, sourceName, ,, line, ,]
