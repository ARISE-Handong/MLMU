[javascript, ., rhino, ., Token, ;, public, class, FunctionParamBuilder, {, private, final, JSTypeRegistry, registry, ;, private, final, Node, root, =]
[., Token, ;, public, class, FunctionParamBuilder, {, private, final, JSTypeRegistry, registry, ;, private, final, Node, root, =, new, Node, (]
[., Token, ;, public, class, FunctionParamBuilder, {, private, final, JSTypeRegistry, registry, ;, private, final, Node, root, =, new, Node, (]
[private, final, Node, root, =, new, Node, (, Token, ., PARAM_LIST, ), ;, public, FunctionParamBuilder, (, JSTypeRegistry, registry, ), {]
[private, final, Node, root, =, new, Node, (, Token, ., PARAM_LIST, ), ;, public, FunctionParamBuilder, (, JSTypeRegistry, registry, ), {]
[=, new, Node, (, Token, ., PARAM_LIST, ), ;, public, FunctionParamBuilder, (, JSTypeRegistry, registry, ), {, this, ., registry, =]
[), {, this, ., registry, =, registry, ;, }, public, boolean, addRequiredParams, (, JSType, ..., types, ), {, if, (]
[registry, ;, }, public, boolean, addRequiredParams, (, JSType, ..., types, ), {, if, (, hasOptionalOrVarArgs, (, ), ), {, return]
[..., types, ), {, if, (, hasOptionalOrVarArgs, (, ), ), {, return, false, ;, }, for, (, JSType, type, :]
[{, if, (, hasOptionalOrVarArgs, (, ), ), {, return, false, ;, }, for, (, JSType, type, :, types, ), {]
[(, hasOptionalOrVarArgs, (, ), ), {, return, false, ;, }, for, (, JSType, type, :, types, ), {, newParameter, (]
[{, return, false, ;, }, for, (, JSType, type, :, types, ), {, newParameter, (, type, ), ;, }, return]
[(, type, ), ;, }, return, true, ;, }, public, boolean, addOptionalParams, (, JSType, ..., types, ), {, if, (]
[true, ;, }, public, boolean, addOptionalParams, (, JSType, ..., types, ), {, if, (, hasVarArgs, (, ), ), {, return]
[..., types, ), {, if, (, hasVarArgs, (, ), ), {, return, false, ;, }, for, (, JSType, type, :]
[{, if, (, hasVarArgs, (, ), ), {, return, false, ;, }, for, (, JSType, type, :, types, ), {]
[{, if, (, hasVarArgs, (, ), ), {, return, false, ;, }, for, (, JSType, type, :, types, ), {]
[(, hasVarArgs, (, ), ), {, return, false, ;, }, for, (, JSType, type, :, types, ), {, newParameter, (]
[(, hasVarArgs, (, ), ), {, return, false, ;, }, for, (, JSType, type, :, types, ), {, newParameter, (]
[), {, return, false, ;, }, for, (, JSType, type, :, types, ), {, newParameter, (, registry, ., createOptionalType, (]
[for, (, JSType, type, :, types, ), {, newParameter, (, registry, ., createOptionalType, (, type, ), ), ., setOptionalArg, (]
[types, ), {, newParameter, (, registry, ., createOptionalType, (, type, ), ), ., setOptionalArg, (, true, ), ;, }, return]
[setOptionalArg, (, true, ), ;, }, return, true, ;, }, public, boolean, addVarArgs, (, JSType, type, ), {, if, (]
[return, true, ;, }, public, boolean, addVarArgs, (, JSType, type, ), {, if, (, hasVarArgs, (, ), ), {, return]
[boolean, addVarArgs, (, JSType, type, ), {, if, (, hasVarArgs, (, ), ), {, return, false, ;, }, if, (]
[addVarArgs, (, JSType, type, ), {, if, (, hasVarArgs, (, ), ), {, return, false, ;, }, if, (, !]
[addVarArgs, (, JSType, type, ), {, if, (, hasVarArgs, (, ), ), {, return, false, ;, }, if, (, !]
[(, hasVarArgs, (, ), ), {, return, false, ;, }, if, (, !, type, ., isEmptyType, (, ), ), {]
[(, ), ), {, return, false, ;, }, if, (, !, type, ., isEmptyType, (, ), ), {, type, =]
[(, ), ), {, return, false, ;, }, if, (, !, type, ., isEmptyType, (, ), ), {, type, =]
[return, false, ;, }, if, (, !, type, ., isEmptyType, (, ), ), {, type, =, registry, ., createOptionalType, (]
[if, (, !, type, ., isEmptyType, (, ), ), {, type, =, registry, ., createOptionalType, (, type, ), ;, }]
[if, (, !, type, ., isEmptyType, (, ), ), {, type, =, registry, ., createOptionalType, (, type, ), ;, }]
[!, type, ., isEmptyType, (, ), ), {, type, =, registry, ., createOptionalType, (, type, ), ;, }, newParameter, (]
[), ), {, type, =, registry, ., createOptionalType, (, type, ), ;, }, newParameter, (, type, ), ., setVarArgs, (]
[=, registry, ., createOptionalType, (, type, ), ;, }, newParameter, (, type, ), ., setVarArgs, (, true, ), ;, return]
[setVarArgs, (, true, ), ;, return, true, ;, }, public, Node, newParameterFromNode, (, Node, n, ), {, Node, newParam, =]
[true, ), ;, return, true, ;, }, public, Node, newParameterFromNode, (, Node, n, ), {, Node, newParam, =, newParameter, (]
[true, ), ;, return, true, ;, }, public, Node, newParameterFromNode, (, Node, n, ), {, Node, newParam, =, newParameter, (]
[public, Node, newParameterFromNode, (, Node, n, ), {, Node, newParam, =, newParameter, (, n, ., getJSType, (, ), ), ;]
[public, Node, newParameterFromNode, (, Node, n, ), {, Node, newParam, =, newParameter, (, n, ., getJSType, (, ), ), ;]
[Node, n, ), {, Node, newParam, =, newParameter, (, n, ., getJSType, (, ), ), ;, newParam, ., setVarArgs, (]
[Node, n, ), {, Node, newParam, =, newParameter, (, n, ., getJSType, (, ), ), ;, newParam, ., setVarArgs, (]
[newParameter, (, n, ., getJSType, (, ), ), ;, newParam, ., setVarArgs, (, n, ., isVarArgs, (, ), ), ;]
[newParameter, (, n, ., getJSType, (, ), ), ;, newParam, ., setVarArgs, (, n, ., isVarArgs, (, ), ), ;]
[getJSType, (, ), ), ;, newParam, ., setVarArgs, (, n, ., isVarArgs, (, ), ), ;, newParam, ., setOptionalArg, (]
[getJSType, (, ), ), ;, newParam, ., setVarArgs, (, n, ., isVarArgs, (, ), ), ;, newParam, ., setOptionalArg, (]
[(, n, ., isVarArgs, (, ), ), ;, newParam, ., setOptionalArg, (, n, ., isOptionalArg, (, ), ), ;, return]
[isOptionalArg, (, ), ), ;, return, newParam, ;, }, public, Node, newOptionalParameterFromNode, (, Node, n, ), {, Node, newParam, =]
[), ), ;, return, newParam, ;, }, public, Node, newOptionalParameterFromNode, (, Node, n, ), {, Node, newParam, =, newParameterFromNode, (]
[;, }, public, Node, newOptionalParameterFromNode, (, Node, n, ), {, Node, newParam, =, newParameterFromNode, (, n, ), ;, if, (]
[;, }, public, Node, newOptionalParameterFromNode, (, Node, n, ), {, Node, newParam, =, newParameterFromNode, (, n, ), ;, if, (]
[}, public, Node, newOptionalParameterFromNode, (, Node, n, ), {, Node, newParam, =, newParameterFromNode, (, n, ), ;, if, (, !]
[}, public, Node, newOptionalParameterFromNode, (, Node, n, ), {, Node, newParam, =, newParameterFromNode, (, n, ), ;, if, (, !]
[n, ), {, Node, newParam, =, newParameterFromNode, (, n, ), ;, if, (, !, newParam, ., isVarArgs, (, ), &&]
[), {, Node, newParam, =, newParameterFromNode, (, n, ), ;, if, (, !, newParam, ., isVarArgs, (, ), &&, !]
[), {, Node, newParam, =, newParameterFromNode, (, n, ), ;, if, (, !, newParam, ., isVarArgs, (, ), &&, !]
[n, ), ;, if, (, !, newParam, ., isVarArgs, (, ), &&, !, newParam, ., isOptionalArg, (, ), ), {]
[n, ), ;, if, (, !, newParam, ., isVarArgs, (, ), &&, !, newParam, ., isOptionalArg, (, ), ), {]
[(, !, newParam, ., isVarArgs, (, ), &&, !, newParam, ., isOptionalArg, (, ), ), {, newParam, ., setOptionalArg, (]
[(, ), &&, !, newParam, ., isOptionalArg, (, ), ), {, newParam, ., setOptionalArg, (, true, ), ;, }, return]
[(, true, ), ;, }, return, newParam, ;, }, private, Node, newParameter, (, JSType, type, ), {, Node, paramNode, =]
[(, true, ), ;, }, return, newParam, ;, }, private, Node, newParameter, (, JSType, type, ), {, Node, paramNode, =]
[}, return, newParam, ;, }, private, Node, newParameter, (, JSType, type, ), {, Node, paramNode, =, Node, ., newString, (]
[}, return, newParam, ;, }, private, Node, newParameter, (, JSType, type, ), {, Node, paramNode, =, Node, ., newString, (]
[}, private, Node, newParameter, (, JSType, type, ), {, Node, paramNode, =, Node, ., newString, (, Token, ., NAME, ,]
[newParameter, (, JSType, type, ), {, Node, paramNode, =, Node, ., newString, (, Token, ., NAME, ,, "", ), ;]
[newParameter, (, JSType, type, ), {, Node, paramNode, =, Node, ., newString, (, Token, ., NAME, ,, "", ), ;]
[), {, Node, paramNode, =, Node, ., newString, (, Token, ., NAME, ,, "", ), ;, paramNode, ., setJSType, (]
[paramNode, =, Node, ., newString, (, Token, ., NAME, ,, "", ), ;, paramNode, ., setJSType, (, type, ), ;]
[paramNode, =, Node, ., newString, (, Token, ., NAME, ,, "", ), ;, paramNode, ., setJSType, (, type, ), ;]
[newString, (, Token, ., NAME, ,, "", ), ;, paramNode, ., setJSType, (, type, ), ;, root, ., addChildToBack, (]
[NAME, ,, "", ), ;, paramNode, ., setJSType, (, type, ), ;, root, ., addChildToBack, (, paramNode, ), ;, return]
[), ;, root, ., addChildToBack, (, paramNode, ), ;, return, paramNode, ;, }, public, Node, build, (, ), {, return]
[}, public, Node, build, (, ), {, return, root, ;, }, private, boolean, hasOptionalOrVarArgs, (, ), {, Node, lastChild, =]
[}, public, Node, build, (, ), {, return, root, ;, }, private, boolean, hasOptionalOrVarArgs, (, ), {, Node, lastChild, =]
[return, root, ;, }, private, boolean, hasOptionalOrVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return]
[return, root, ;, }, private, boolean, hasOptionalOrVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return]
[return, root, ;, }, private, boolean, hasOptionalOrVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return]
[;, }, private, boolean, hasOptionalOrVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return, lastChild, !=]
[private, boolean, hasOptionalOrVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return, lastChild, !=, null, &&]
[boolean, hasOptionalOrVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return, lastChild, !=, null, &&, (]
[boolean, hasOptionalOrVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return, lastChild, !=, null, &&, (]
[boolean, hasOptionalOrVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return, lastChild, !=, null, &&, (]
[lastChild, =, root, ., getLastChild, (, ), ;, return, lastChild, !=, null, &&, (, lastChild, ., isOptionalArg, (, ), ||]
[lastChild, =, root, ., getLastChild, (, ), ;, return, lastChild, !=, null, &&, (, lastChild, ., isOptionalArg, (, ), ||]
[(, ), ||, lastChild, ., isVarArgs, (, ), ), ;, }, public, boolean, hasVarArgs, (, ), {, Node, lastChild, =]
[(, ), ||, lastChild, ., isVarArgs, (, ), ), ;, }, public, boolean, hasVarArgs, (, ), {, Node, lastChild, =]
[), ), ;, }, public, boolean, hasVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return]
[), ), ;, }, public, boolean, hasVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return]
[), ), ;, }, public, boolean, hasVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return]
[;, }, public, boolean, hasVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return, lastChild, !=]
[public, boolean, hasVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return, lastChild, !=, null, &&]
[public, boolean, hasVarArgs, (, ), {, Node, lastChild, =, root, ., getLastChild, (, ), ;, return, lastChild, !=, null, &&]
