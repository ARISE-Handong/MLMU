[;, static, final, DiagnosticType, UNKNOWN_TWEAK_WARNING, =, DiagnosticType, ., warning, (, "JSC_UNKNOWN_TWEAK_WARNING", ,, "no tweak registered with ID {0}", ), ;, static, final, DiagnosticType, TWEAK_MULTIPLY_REGISTERED_ERROR, =]
[., or, (, CharMatcher, ., anyOf, (, "0123456789_.", ), ), ;, static, final, DiagnosticType, UNKNOWN_TWEAK_WARNING, =, DiagnosticType, ., warning, (]
[., or, (, CharMatcher, ., inRange, (, 'A', ,, 'Z', ), ), ., or, (, CharMatcher, ., anyOf, (, "0123456789_."]
[., inRange, (, 'a', ,, 'z', ), ., or, (, CharMatcher, ., inRange, (, 'A', ,, 'Z', ), ), .]
[,, 'z', ), ., or, (, CharMatcher, ., inRange, (, 'A', ,, 'Z', ), ), ., or, (, CharMatcher, .]
[), ., or, (, CharMatcher, ., inRange, (, 'A', ,, 'Z', ), ), ., or, (, CharMatcher, ., anyOf, (]
[), ., or, (, CharMatcher, ., anyOf, (, "0123456789_.", ), ), ;, static, final, DiagnosticType, UNKNOWN_TWEAK_WARNING, =, DiagnosticType, ., warning]
[., inRange, (, 'A', ,, 'Z', ), ), ., or, (, CharMatcher, ., anyOf, (, "0123456789_.", ), ), ;, static]
[,, 'Z', ), ), ., or, (, CharMatcher, ., anyOf, (, "0123456789_.", ), ), ;, static, final, DiagnosticType, UNKNOWN_TWEAK_WARNING, =]
[), ), ., or, (, CharMatcher, ., anyOf, (, "0123456789_.", ), ), ;, static, final, DiagnosticType, UNKNOWN_TWEAK_WARNING, =, DiagnosticType, .]
[), ;, static, final, DiagnosticType, UNKNOWN_TWEAK_WARNING, =, DiagnosticType, ., warning, (, "JSC_UNKNOWN_TWEAK_WARNING", ,, "no tweak registered with ID {0}", ), ;, static, final, DiagnosticType, TWEAK_MULTIPLY_REGISTERED_ERROR]
[., anyOf, (, "0123456789_.", ), ), ;, static, final, DiagnosticType, UNKNOWN_TWEAK_WARNING, =, DiagnosticType, ., warning, (, "JSC_UNKNOWN_TWEAK_WARNING", ,, "no tweak registered with ID {0}", )]
[), ), ;, static, final, DiagnosticType, UNKNOWN_TWEAK_WARNING, =, DiagnosticType, ., warning, (, "JSC_UNKNOWN_TWEAK_WARNING", ,, "no tweak registered with ID {0}", ), ;, static, final, DiagnosticType]
[;, static, final, DiagnosticType, TWEAK_MULTIPLY_REGISTERED_ERROR, =, DiagnosticType, ., error, (, "JSC_TWEAK_MULTIPLY_REGISTERED_ERROR", ,, "Tweak {0} has already been registered.", ), ;, static, final, DiagnosticType, NON_LITERAL_TWEAK_ID_ERROR, =]
[., warning, (, "JSC_UNKNOWN_TWEAK_WARNING", ,, "no tweak registered with ID {0}", ), ;, static, final, DiagnosticType, TWEAK_MULTIPLY_REGISTERED_ERROR, =, DiagnosticType, ., error, (, "JSC_TWEAK_MULTIPLY_REGISTERED_ERROR", ,, "Tweak {0} has already been registered."]
[,, "no tweak registered with ID {0}", ), ;, static, final, DiagnosticType, TWEAK_MULTIPLY_REGISTERED_ERROR, =, DiagnosticType, ., error, (, "JSC_TWEAK_MULTIPLY_REGISTERED_ERROR", ,, "Tweak {0} has already been registered.", ), ;, static, final]
[), ;, static, final, DiagnosticType, TWEAK_MULTIPLY_REGISTERED_ERROR, =, DiagnosticType, ., error, (, "JSC_TWEAK_MULTIPLY_REGISTERED_ERROR", ,, "Tweak {0} has already been registered.", ), ;, static, final, DiagnosticType, NON_LITERAL_TWEAK_ID_ERROR]
[;, static, final, DiagnosticType, NON_LITERAL_TWEAK_ID_ERROR, =, DiagnosticType, ., error, (, "JSC_NON_LITERAL_TWEAK_ID_ERROR", ,, "tweak ID must be a string literal", ), ;, static, final, DiagnosticType, INVALID_TWEAK_DEFAULT_VALUE_WARNING, =]
[., error, (, "JSC_TWEAK_MULTIPLY_REGISTERED_ERROR", ,, "Tweak {0} has already been registered.", ), ;, static, final, DiagnosticType, NON_LITERAL_TWEAK_ID_ERROR, =, DiagnosticType, ., error, (, "JSC_NON_LITERAL_TWEAK_ID_ERROR", ,, "tweak ID must be a string literal"]
[,, "Tweak {0} has already been registered.", ), ;, static, final, DiagnosticType, NON_LITERAL_TWEAK_ID_ERROR, =, DiagnosticType, ., error, (, "JSC_NON_LITERAL_TWEAK_ID_ERROR", ,, "tweak ID must be a string literal", ), ;, static, final]
[), ;, static, final, DiagnosticType, NON_LITERAL_TWEAK_ID_ERROR, =, DiagnosticType, ., error, (, "JSC_NON_LITERAL_TWEAK_ID_ERROR", ,, "tweak ID must be a string literal", ), ;, static, final, DiagnosticType, INVALID_TWEAK_DEFAULT_VALUE_WARNING]
[;, static, final, DiagnosticType, INVALID_TWEAK_DEFAULT_VALUE_WARNING, =, DiagnosticType, ., warning, (, "JSC_INVALID_TWEAK_DEFAULT_VALUE_WARNING", ,, "tweak {0} registered with {1} must have a default value that is a ", +, "literal of type {2}", ), ;, static, final, DiagnosticType]
[., error, (, "JSC_NON_LITERAL_TWEAK_ID_ERROR", ,, "tweak ID must be a string literal", ), ;, static, final, DiagnosticType, INVALID_TWEAK_DEFAULT_VALUE_WARNING, =, DiagnosticType, ., warning, (, "JSC_INVALID_TWEAK_DEFAULT_VALUE_WARNING", ,, "tweak {0} registered with {1} must have a default value that is a "]
[,, "tweak ID must be a string literal", ), ;, static, final, DiagnosticType, INVALID_TWEAK_DEFAULT_VALUE_WARNING, =, DiagnosticType, ., warning, (, "JSC_INVALID_TWEAK_DEFAULT_VALUE_WARNING", ,, "tweak {0} registered with {1} must have a default value that is a ", +, "literal of type {2}", ), ;]
[), ;, static, final, DiagnosticType, INVALID_TWEAK_DEFAULT_VALUE_WARNING, =, DiagnosticType, ., warning, (, "JSC_INVALID_TWEAK_DEFAULT_VALUE_WARNING", ,, "tweak {0} registered with {1} must have a default value that is a ", +, "literal of type {2}", ), ;, static, final]
[;, static, final, DiagnosticType, NON_GLOBAL_TWEAK_INIT_ERROR, =, DiagnosticType, ., error, (, "JSC_NON_GLOBAL_TWEAK_INIT_ERROR", ,, "tweak declaration {0} must occur in the global scope", ), ;, static, final, DiagnosticType, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR, =]
[., warning, (, "JSC_INVALID_TWEAK_DEFAULT_VALUE_WARNING", ,, "tweak {0} registered with {1} must have a default value that is a ", +, "literal of type {2}", ), ;, static, final, DiagnosticType, NON_GLOBAL_TWEAK_INIT_ERROR, =, DiagnosticType, ., error, (, "JSC_NON_GLOBAL_TWEAK_INIT_ERROR"]
[,, "tweak {0} registered with {1} must have a default value that is a ", +, "literal of type {2}", ), ;, static, final, DiagnosticType, NON_GLOBAL_TWEAK_INIT_ERROR, =, DiagnosticType, ., error, (, "JSC_NON_GLOBAL_TWEAK_INIT_ERROR", ,, "tweak declaration {0} must occur in the global scope", ), ;]
[), ;, static, final, DiagnosticType, NON_GLOBAL_TWEAK_INIT_ERROR, =, DiagnosticType, ., error, (, "JSC_NON_GLOBAL_TWEAK_INIT_ERROR", ,, "tweak declaration {0} must occur in the global scope", ), ;, static, final, DiagnosticType, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR]
[+, "literal of type {2}", ), ;, static, final, DiagnosticType, NON_GLOBAL_TWEAK_INIT_ERROR, =, DiagnosticType, ., error, (, "JSC_NON_GLOBAL_TWEAK_INIT_ERROR", ,, "tweak declaration {0} must occur in the global scope", ), ;, static, final]
[), ;, static, final, DiagnosticType, NON_GLOBAL_TWEAK_INIT_ERROR, =, DiagnosticType, ., error, (, "JSC_NON_GLOBAL_TWEAK_INIT_ERROR", ,, "tweak declaration {0} must occur in the global scope", ), ;, static, final, DiagnosticType, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR]
[;, static, final, DiagnosticType, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR, =, DiagnosticType, ., error, (, "JSC_TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR", ,, "Cannot override the default value of tweak {0} after it has been ", +, "registered", ), ;, static, final, DiagnosticType]
[., error, (, "JSC_NON_GLOBAL_TWEAK_INIT_ERROR", ,, "tweak declaration {0} must occur in the global scope", ), ;, static, final, DiagnosticType, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR, =, DiagnosticType, ., error, (, "JSC_TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR", ,, "Cannot override the default value of tweak {0} after it has been "]
[,, "tweak declaration {0} must occur in the global scope", ), ;, static, final, DiagnosticType, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR, =, DiagnosticType, ., error, (, "JSC_TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR", ,, "Cannot override the default value of tweak {0} after it has been ", +, "registered", ), ;]
[), ;, static, final, DiagnosticType, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR, =, DiagnosticType, ., error, (, "JSC_TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR", ,, "Cannot override the default value of tweak {0} after it has been ", +, "registered", ), ;, static, final]
[;, static, final, DiagnosticType, TWEAK_WRONG_GETTER_TYPE_WARNING, =, DiagnosticType, ., warning, (, "JSC_TWEAK_WRONG_GETTER_TYPE_WARNING", ,, "tweak getter function {0} used for tweak registered using {1}", ), ;, static, final, DiagnosticType, INVALID_TWEAK_ID_ERROR, =]
[., error, (, "JSC_TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR", ,, "Cannot override the default value of tweak {0} after it has been ", +, "registered", ), ;, static, final, DiagnosticType, TWEAK_WRONG_GETTER_TYPE_WARNING, =, DiagnosticType, ., warning, (, "JSC_TWEAK_WRONG_GETTER_TYPE_WARNING"]
[,, "Cannot override the default value of tweak {0} after it has been ", +, "registered", ), ;, static, final, DiagnosticType, TWEAK_WRONG_GETTER_TYPE_WARNING, =, DiagnosticType, ., warning, (, "JSC_TWEAK_WRONG_GETTER_TYPE_WARNING", ,, "tweak getter function {0} used for tweak registered using {1}", ), ;]
[), ;, static, final, DiagnosticType, TWEAK_WRONG_GETTER_TYPE_WARNING, =, DiagnosticType, ., warning, (, "JSC_TWEAK_WRONG_GETTER_TYPE_WARNING", ,, "tweak getter function {0} used for tweak registered using {1}", ), ;, static, final, DiagnosticType, INVALID_TWEAK_ID_ERROR]
[+, "registered", ), ;, static, final, DiagnosticType, TWEAK_WRONG_GETTER_TYPE_WARNING, =, DiagnosticType, ., warning, (, "JSC_TWEAK_WRONG_GETTER_TYPE_WARNING", ,, "tweak getter function {0} used for tweak registered using {1}", ), ;, static, final]
[), ;, static, final, DiagnosticType, TWEAK_WRONG_GETTER_TYPE_WARNING, =, DiagnosticType, ., warning, (, "JSC_TWEAK_WRONG_GETTER_TYPE_WARNING", ,, "tweak getter function {0} used for tweak registered using {1}", ), ;, static, final, DiagnosticType, INVALID_TWEAK_ID_ERROR]
[;, static, final, DiagnosticType, INVALID_TWEAK_ID_ERROR, =, DiagnosticType, ., error, (, "JSC_INVALID_TWEAK_ID_ERROR", ,, "tweak ID contains illegal characters. Only letters, numbers, _ ", +, "and . are allowed", ), ;, private, static, enum]
[., warning, (, "JSC_TWEAK_WRONG_GETTER_TYPE_WARNING", ,, "tweak getter function {0} used for tweak registered using {1}", ), ;, static, final, DiagnosticType, INVALID_TWEAK_ID_ERROR, =, DiagnosticType, ., error, (, "JSC_INVALID_TWEAK_ID_ERROR", ,, "tweak ID contains illegal characters. Only letters, numbers, _ "]
[,, "tweak getter function {0} used for tweak registered using {1}", ), ;, static, final, DiagnosticType, INVALID_TWEAK_ID_ERROR, =, DiagnosticType, ., error, (, "JSC_INVALID_TWEAK_ID_ERROR", ,, "tweak ID contains illegal characters. Only letters, numbers, _ ", +, "and . are allowed", ), ;]
[), ;, static, final, DiagnosticType, INVALID_TWEAK_ID_ERROR, =, DiagnosticType, ., error, (, "JSC_INVALID_TWEAK_ID_ERROR", ,, "tweak ID contains illegal characters. Only letters, numbers, _ ", +, "and . are allowed", ), ;, private, static]
[;, private, static, enum, TweakFunction, {, REGISTER_BOOLEAN, (, "goog.tweak.registerBoolean", ,, "boolean", ,, Token, ., TRUE, ,, Token, ., FALSE, )]
[., error, (, "JSC_INVALID_TWEAK_ID_ERROR", ,, "tweak ID contains illegal characters. Only letters, numbers, _ ", +, "and . are allowed", ), ;, private, static, enum, TweakFunction, {, REGISTER_BOOLEAN, (, "goog.tweak.registerBoolean", ,, "boolean"]
[,, "tweak ID contains illegal characters. Only letters, numbers, _ ", +, "and . are allowed", ), ;, private, static, enum, TweakFunction, {, REGISTER_BOOLEAN, (, "goog.tweak.registerBoolean", ,, "boolean", ,, Token, ., TRUE]
[), ;, private, static, enum, TweakFunction, {, REGISTER_BOOLEAN, (, "goog.tweak.registerBoolean", ,, "boolean", ,, Token, ., TRUE, ,, Token, ., FALSE]
[+, "and . are allowed", ), ;, private, static, enum, TweakFunction, {, REGISTER_BOOLEAN, (, "goog.tweak.registerBoolean", ,, "boolean", ,, Token, ., TRUE, ,, Token]
[), ;, private, static, enum, TweakFunction, {, REGISTER_BOOLEAN, (, "goog.tweak.registerBoolean", ,, "boolean", ,, Token, ., TRUE, ,, Token, ., FALSE]
[,, null, ,, Token, ., ERROR, ,, Token, ., ERROR, ,, null, ), ;, }, TweakFunction, (, String, name, ,]
[,, Token, ., ERROR, ,, Token, ., ERROR, ,, null, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName]
[,, Token, ., ERROR, ,, null, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int, validNodeTypeA, )]
[., ERROR, ,, Token, ., ERROR, ,, null, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int]
[,, null, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int, validNodeTypeA, ), {, this, (, name]
[., ERROR, ,, null, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int, validNodeTypeA, ), {, this]
[), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int, validNodeTypeA, ), {, this, (, name, ,, expectedTypeName]
[,, expectedTypeName, ,, validNodeTypeA, ,, Token, ., ERROR, ,, null, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName]
[,, validNodeTypeA, ,, Token, ., ERROR, ,, null, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int]
[,, Token, ., ERROR, ,, null, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int, validNodeTypeA, ,]
[,, null, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int, validNodeTypeA, ,, int, validNodeTypeB, ), {]
[., ERROR, ,, null, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int, validNodeTypeA, ,, int, validNodeTypeB]
[), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int, validNodeTypeA, ,, int, validNodeTypeB, ), {, this, (]
[,, expectedTypeName, ,, validNodeTypeA, ,, validNodeTypeB, ,, null, ), ;, }, TweakFunction, (, String, name, ,, TweakFunction, registerFunction, ), {]
[,, validNodeTypeA, ,, validNodeTypeB, ,, null, ), ;, }, TweakFunction, (, String, name, ,, TweakFunction, registerFunction, ), {, this, (]
[,, validNodeTypeB, ,, null, ), ;, }, TweakFunction, (, String, name, ,, TweakFunction, registerFunction, ), {, this, (, name, ,]
[,, null, ), ;, }, TweakFunction, (, String, name, ,, TweakFunction, registerFunction, ), {, this, (, name, ,, null, ,]
[), ;, }, TweakFunction, (, String, name, ,, TweakFunction, registerFunction, ), {, this, (, name, ,, null, ,, Token, .]
[,, null, ,, Token, ., ERROR, ,, Token, ., ERROR, ,, registerFunction, ), ;, }, TweakFunction, (, String, name, ,]
[,, Token, ., ERROR, ,, Token, ., ERROR, ,, registerFunction, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName]
[,, Token, ., ERROR, ,, registerFunction, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int, validNodeTypeA, ,]
[., ERROR, ,, Token, ., ERROR, ,, registerFunction, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int]
[,, registerFunction, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int, validNodeTypeA, ,, int, validNodeTypeB, ,, TweakFunction]
[., ERROR, ,, registerFunction, ), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int, validNodeTypeA, ,, int, validNodeTypeB]
[), ;, }, TweakFunction, (, String, name, ,, String, expectedTypeName, ,, int, validNodeTypeA, ,, int, validNodeTypeB, ,, TweakFunction, registerFunction, )]
[=, name, ;, this, ., expectedTypeName, =, expectedTypeName, ;, this, ., validNodeTypeA, =, validNodeTypeA, ;, this, ., validNodeTypeB, =, validNodeTypeB]
[., name, =, name, ;, this, ., expectedTypeName, =, expectedTypeName, ;, this, ., validNodeTypeA, =, validNodeTypeA, ;, this, ., validNodeTypeB]
[;, this, ., expectedTypeName, =, expectedTypeName, ;, this, ., validNodeTypeA, =, validNodeTypeA, ;, this, ., validNodeTypeB, =, validNodeTypeB, ;, this]
[=, expectedTypeName, ;, this, ., validNodeTypeA, =, validNodeTypeA, ;, this, ., validNodeTypeB, =, validNodeTypeB, ;, this, ., registerFunction, =, registerFunction]
[., expectedTypeName, =, expectedTypeName, ;, this, ., validNodeTypeA, =, validNodeTypeA, ;, this, ., validNodeTypeB, =, validNodeTypeB, ;, this, ., registerFunction]
[;, this, ., validNodeTypeA, =, validNodeTypeA, ;, this, ., validNodeTypeB, =, validNodeTypeB, ;, this, ., registerFunction, =, registerFunction, ;, }]
[=, validNodeTypeA, ;, this, ., validNodeTypeB, =, validNodeTypeB, ;, this, ., registerFunction, =, registerFunction, ;, }, boolean, isValidNodeType, (, int]
[., validNodeTypeA, =, validNodeTypeA, ;, this, ., validNodeTypeB, =, validNodeTypeB, ;, this, ., registerFunction, =, registerFunction, ;, }, boolean, isValidNodeType]
[;, this, ., validNodeTypeB, =, validNodeTypeB, ;, this, ., registerFunction, =, registerFunction, ;, }, boolean, isValidNodeType, (, int, type, )]
[=, validNodeTypeB, ;, this, ., registerFunction, =, registerFunction, ;, }, boolean, isValidNodeType, (, int, type, ), {, return, type, ==]
[., validNodeTypeB, =, validNodeTypeB, ;, this, ., registerFunction, =, registerFunction, ;, }, boolean, isValidNodeType, (, int, type, ), {, return]
[;, this, ., registerFunction, =, registerFunction, ;, }, boolean, isValidNodeType, (, int, type, ), {, return, type, ==, validNodeTypeA, ||]
[=, registerFunction, ;, }, boolean, isValidNodeType, (, int, type, ), {, return, type, ==, validNodeTypeA, ||, type, ==, validNodeTypeB, ;]
[., registerFunction, =, registerFunction, ;, }, boolean, isValidNodeType, (, int, type, ), {, return, type, ==, validNodeTypeA, ||, type, ==]
[;, }, boolean, isValidNodeType, (, int, type, ), {, return, type, ==, validNodeTypeA, ||, type, ==, validNodeTypeB, ;, }, boolean]
[;, }, boolean, isCorrectRegisterFunction, (, TweakFunction, registerFunction, ), {, Preconditions, ., checkNotNull, (, registerFunction, ), ;, return, this, ., registerFunction]
[||, type, ==, validNodeTypeB, ;, }, boolean, isCorrectRegisterFunction, (, TweakFunction, registerFunction, ), {, Preconditions, ., checkNotNull, (, registerFunction, ), ;]
[==, validNodeTypeA, ||, type, ==, validNodeTypeB, ;, }, boolean, isCorrectRegisterFunction, (, TweakFunction, registerFunction, ), {, Preconditions, ., checkNotNull, (, registerFunction]
[||, type, ==, validNodeTypeB, ;, }, boolean, isCorrectRegisterFunction, (, TweakFunction, registerFunction, ), {, Preconditions, ., checkNotNull, (, registerFunction, ), ;]
[;, }, boolean, isCorrectRegisterFunction, (, TweakFunction, registerFunction, ), {, Preconditions, ., checkNotNull, (, registerFunction, ), ;, return, this, ., registerFunction]
[==, validNodeTypeB, ;, }, boolean, isCorrectRegisterFunction, (, TweakFunction, registerFunction, ), {, Preconditions, ., checkNotNull, (, registerFunction, ), ;, return, this]
[;, }, boolean, isCorrectRegisterFunction, (, TweakFunction, registerFunction, ), {, Preconditions, ., checkNotNull, (, registerFunction, ), ;, return, this, ., registerFunction]
[;, return, this, ., registerFunction, ==, registerFunction, ;, }, boolean, isGetterFunction, (, ), {, return, registerFunction, !=, null, ;, }]
[., checkNotNull, (, registerFunction, ), ;, return, this, ., registerFunction, ==, registerFunction, ;, }, boolean, isGetterFunction, (, ), {, return]
[), ;, return, this, ., registerFunction, ==, registerFunction, ;, }, boolean, isGetterFunction, (, ), {, return, registerFunction, !=, null, ;]
[;, }, boolean, isGetterFunction, (, ), {, return, registerFunction, !=, null, ;, }, String, getName, (, ), {, return, name]
[==, registerFunction, ;, }, boolean, isGetterFunction, (, ), {, return, registerFunction, !=, null, ;, }, String, getName, (, ), {]
[., registerFunction, ==, registerFunction, ;, }, boolean, isGetterFunction, (, ), {, return, registerFunction, !=, null, ;, }, String, getName, (]
[;, }, boolean, isGetterFunction, (, ), {, return, registerFunction, !=, null, ;, }, String, getName, (, ), {, return, name]
[;, }, String, getName, (, ), {, return, name, ;, }, String, getExpectedTypeName, (, ), {, return, expectedTypeName, ;, }]
[!=, null, ;, }, String, getName, (, ), {, return, name, ;, }, String, getExpectedTypeName, (, ), {, return, expectedTypeName]
[;, }, String, getName, (, ), {, return, name, ;, }, String, getExpectedTypeName, (, ), {, return, expectedTypeName, ;, }]
[;, }, String, getExpectedTypeName, (, ), {, return, expectedTypeName, ;, }, Node, createDefaultValueNode, (, ), {, switch, (, this, )]
[;, }, Node, createDefaultValueNode, (, ), {, switch, (, this, ), {, case, REGISTER_BOOLEAN, :, return, IR, ., falseNode, (]
[), {, case, REGISTER_BOOLEAN, :, return, IR, ., falseNode, (, ), ;, case, REGISTER_NUMBER, :, return, IR, ., number, (]
[:, return, IR, ., falseNode, (, ), ;, case, REGISTER_NUMBER, :, return, IR, ., number, (, 0, ), ;, case]
[;, case, REGISTER_NUMBER, :, return, IR, ., number, (, 0, ), ;, case, REGISTER_STRING, :, return, IR, ., string, (]
[., falseNode, (, ), ;, case, REGISTER_NUMBER, :, return, IR, ., number, (, 0, ), ;, case, REGISTER_STRING, :, return]
[:, return, IR, ., number, (, 0, ), ;, case, REGISTER_STRING, :, return, IR, ., string, (, "", ), ;]
[;, case, REGISTER_STRING, :, return, IR, ., string, (, "", ), ;, default, :, throw, new, IllegalStateException, (, ), ;]
[., number, (, 0, ), ;, case, REGISTER_STRING, :, return, IR, ., string, (, "", ), ;, default, :, throw]
[), ;, case, REGISTER_STRING, :, return, IR, ., string, (, "", ), ;, default, :, throw, new, IllegalStateException, (, )]
[:, return, IR, ., string, (, "", ), ;, default, :, throw, new, IllegalStateException, (, ), ;, }, }, }]
[;, default, :, throw, new, IllegalStateException, (, ), ;, }, }, }, private, static, final, Map, <, String, ,, TweakFunction]
[., string, (, "", ), ;, default, :, throw, new, IllegalStateException, (, ), ;, }, }, }, private, static, final]
[), ;, default, :, throw, new, IllegalStateException, (, ), ;, }, }, }, private, static, final, Map, <, String, ,]
[;, }, }, }, private, static, final, Map, <, String, ,, TweakFunction, >, TWEAK_FUNCTIONS_MAP, ;, static, {, TWEAK_FUNCTIONS_MAP, =, Maps]
[,, "boolean", ,, Token, ., TRUE, ,, Token, ., FALSE, ), ,, REGISTER_NUMBER, (, "goog.tweak.registerNumber", ,, "number", ,, Token, .]
[,, Token, ., TRUE, ,, Token, ., FALSE, ), ,, REGISTER_NUMBER, (, "goog.tweak.registerNumber", ,, "number", ,, Token, ., NUMBER, )]
[,, Token, ., FALSE, ), ,, REGISTER_NUMBER, (, "goog.tweak.registerNumber", ,, "number", ,, Token, ., NUMBER, ), ,, REGISTER_STRING, (, "goog.tweak.registerString"]
[., TRUE, ,, Token, ., FALSE, ), ,, REGISTER_NUMBER, (, "goog.tweak.registerNumber", ,, "number", ,, Token, ., NUMBER, ), ,, REGISTER_STRING]
[), ,, REGISTER_NUMBER, (, "goog.tweak.registerNumber", ,, "number", ,, Token, ., NUMBER, ), ,, REGISTER_STRING, (, "goog.tweak.registerString", ,, "string", ,, Token]
[., FALSE, ), ,, REGISTER_NUMBER, (, "goog.tweak.registerNumber", ,, "number", ,, Token, ., NUMBER, ), ,, REGISTER_STRING, (, "goog.tweak.registerString", ,, "string"]
[,, "number", ,, Token, ., NUMBER, ), ,, REGISTER_STRING, (, "goog.tweak.registerString", ,, "string", ,, Token, ., STRING, ), ,, OVERRIDE_DEFAULT_VALUE]
[,, Token, ., NUMBER, ), ,, REGISTER_STRING, (, "goog.tweak.registerString", ,, "string", ,, Token, ., STRING, ), ,, OVERRIDE_DEFAULT_VALUE, (, "goog.tweak.overrideDefaultValue"]
[), ,, REGISTER_STRING, (, "goog.tweak.registerString", ,, "string", ,, Token, ., STRING, ), ,, OVERRIDE_DEFAULT_VALUE, (, "goog.tweak.overrideDefaultValue", ), ,, GET_COMPILER_OVERRIDES, (]
[., NUMBER, ), ,, REGISTER_STRING, (, "goog.tweak.registerString", ,, "string", ,, Token, ., STRING, ), ,, OVERRIDE_DEFAULT_VALUE, (, "goog.tweak.overrideDefaultValue", ), ,]
[,, "string", ,, Token, ., STRING, ), ,, OVERRIDE_DEFAULT_VALUE, (, "goog.tweak.overrideDefaultValue", ), ,, GET_COMPILER_OVERRIDES, (, "goog.tweak.getCompilerOverrides_", ), ,, GET_BOOLEAN, (]
[,, Token, ., STRING, ), ,, OVERRIDE_DEFAULT_VALUE, (, "goog.tweak.overrideDefaultValue", ), ,, GET_COMPILER_OVERRIDES, (, "goog.tweak.getCompilerOverrides_", ), ,, GET_BOOLEAN, (, "goog.tweak.getBoolean", ,]
[), ,, OVERRIDE_DEFAULT_VALUE, (, "goog.tweak.overrideDefaultValue", ), ,, GET_COMPILER_OVERRIDES, (, "goog.tweak.getCompilerOverrides_", ), ,, GET_BOOLEAN, (, "goog.tweak.getBoolean", ,, REGISTER_BOOLEAN, ), ,, GET_NUMBER]
[., STRING, ), ,, OVERRIDE_DEFAULT_VALUE, (, "goog.tweak.overrideDefaultValue", ), ,, GET_COMPILER_OVERRIDES, (, "goog.tweak.getCompilerOverrides_", ), ,, GET_BOOLEAN, (, "goog.tweak.getBoolean", ,, REGISTER_BOOLEAN, )]
[), ,, GET_COMPILER_OVERRIDES, (, "goog.tweak.getCompilerOverrides_", ), ,, GET_BOOLEAN, (, "goog.tweak.getBoolean", ,, REGISTER_BOOLEAN, ), ,, GET_NUMBER, (, "goog.tweak.getNumber", ,, REGISTER_NUMBER, )]
[), ,, GET_BOOLEAN, (, "goog.tweak.getBoolean", ,, REGISTER_BOOLEAN, ), ,, GET_NUMBER, (, "goog.tweak.getNumber", ,, REGISTER_NUMBER, ), ,, GET_STRING, (, "goog.tweak.getString", ,]
[,, REGISTER_BOOLEAN, ), ,, GET_NUMBER, (, "goog.tweak.getNumber", ,, REGISTER_NUMBER, ), ,, GET_STRING, (, "goog.tweak.getString", ,, REGISTER_STRING, ), ;, final, String]
[), ,, GET_NUMBER, (, "goog.tweak.getNumber", ,, REGISTER_NUMBER, ), ,, GET_STRING, (, "goog.tweak.getString", ,, REGISTER_STRING, ), ;, final, String, name, ;]
[,, REGISTER_NUMBER, ), ,, GET_STRING, (, "goog.tweak.getString", ,, REGISTER_STRING, ), ;, final, String, name, ;, final, String, expectedTypeName, ;, final]
[), ,, GET_STRING, (, "goog.tweak.getString", ,, REGISTER_STRING, ), ;, final, String, name, ;, final, String, expectedTypeName, ;, final, int, validNodeTypeA]
[,, REGISTER_STRING, ), ;, final, String, name, ;, final, String, expectedTypeName, ;, final, int, validNodeTypeA, ;, final, int, validNodeTypeB, ;]
[), ;, final, String, name, ;, final, String, expectedTypeName, ;, final, int, validNodeTypeA, ;, final, int, validNodeTypeB, ;, final, TweakFunction]
[=, Maps, ., newHashMap, (, ), ;, for, (, TweakFunction, func, :, TweakFunction, ., values, (, ), ), {, TWEAK_FUNCTIONS_MAP]
[;, for, (, TweakFunction, func, :, TweakFunction, ., values, (, ), ), {, TWEAK_FUNCTIONS_MAP, ., put, (, func, ., getName]
[., newHashMap, (, ), ;, for, (, TweakFunction, func, :, TweakFunction, ., values, (, ), ), {, TWEAK_FUNCTIONS_MAP, ., put]
[), {, TWEAK_FUNCTIONS_MAP, ., put, (, func, ., getName, (, ), ,, func, ), ;, }, }, ProcessTweaks, (, AbstractCompiler]
[., values, (, ), ), {, TWEAK_FUNCTIONS_MAP, ., put, (, func, ., getName, (, ), ,, func, ), ;, }]
[;, }, }, ProcessTweaks, (, AbstractCompiler, compiler, ,, boolean, stripTweaks, ,, Map, <, String, ,, Node, >, compilerDefaultValueOverrides, ), {]
[., put, (, func, ., getName, (, ), ,, func, ), ;, }, }, ProcessTweaks, (, AbstractCompiler, compiler, ,, boolean]
[,, func, ), ;, }, }, ProcessTweaks, (, AbstractCompiler, compiler, ,, boolean, stripTweaks, ,, Map, <, String, ,, Node, >]
[., getName, (, ), ,, func, ), ;, }, }, ProcessTweaks, (, AbstractCompiler, compiler, ,, boolean, stripTweaks, ,, Map, <]
[), ;, }, }, ProcessTweaks, (, AbstractCompiler, compiler, ,, boolean, stripTweaks, ,, Map, <, String, ,, Node, >, compilerDefaultValueOverrides, )]
[=, compiler, ;, this, ., stripTweaks, =, stripTweaks, ;, this, ., compilerDefaultValueOverrides, =, Maps, ., newTreeMap, (, ), ;, this]
[., compiler, =, compiler, ;, this, ., stripTweaks, =, stripTweaks, ;, this, ., compilerDefaultValueOverrides, =, Maps, ., newTreeMap, (, )]
[;, this, ., stripTweaks, =, stripTweaks, ;, this, ., compilerDefaultValueOverrides, =, Maps, ., newTreeMap, (, ), ;, this, ., compilerDefaultValueOverrides]
[=, stripTweaks, ;, this, ., compilerDefaultValueOverrides, =, Maps, ., newTreeMap, (, ), ;, this, ., compilerDefaultValueOverrides, ., putAll, (, compilerDefaultValueOverrides]
[., stripTweaks, =, stripTweaks, ;, this, ., compilerDefaultValueOverrides, =, Maps, ., newTreeMap, (, ), ;, this, ., compilerDefaultValueOverrides, ., putAll]
[;, this, ., compilerDefaultValueOverrides, =, Maps, ., newTreeMap, (, ), ;, this, ., compilerDefaultValueOverrides, ., putAll, (, compilerDefaultValueOverrides, ), ;]
[=, Maps, ., newTreeMap, (, ), ;, this, ., compilerDefaultValueOverrides, ., putAll, (, compilerDefaultValueOverrides, ), ;, }, @, Override, public]
[., compilerDefaultValueOverrides, =, Maps, ., newTreeMap, (, ), ;, this, ., compilerDefaultValueOverrides, ., putAll, (, compilerDefaultValueOverrides, ), ;, }, @]
[;, this, ., compilerDefaultValueOverrides, ., putAll, (, compilerDefaultValueOverrides, ), ;, }, @, Override, public, void, process, (, Node, externs, ,]
[., newTreeMap, (, ), ;, this, ., compilerDefaultValueOverrides, ., putAll, (, compilerDefaultValueOverrides, ), ;, }, @, Override, public, void, process]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, CollectTweaksResult, result, =, collectTweaks, (]
[., putAll, (, compilerDefaultValueOverrides, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[., compilerDefaultValueOverrides, ., putAll, (, compilerDefaultValueOverrides, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root]
[), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, CollectTweaksResult, result, =, collectTweaks]
[;, applyCompilerDefaultValueOverrides, (, result, ., tweakInfos, ), ;, boolean, changed, =, false, ;, if, (, stripTweaks, ), {, changed, =]
[), ;, applyCompilerDefaultValueOverrides, (, result, ., tweakInfos, ), ;, boolean, changed, =, false, ;, if, (, stripTweaks, ), {, changed]
[;, boolean, changed, =, false, ;, if, (, stripTweaks, ), {, changed, =, stripAllCalls, (, result, ., tweakInfos, ), ;]
[), ;, boolean, changed, =, false, ;, if, (, stripTweaks, ), {, changed, =, stripAllCalls, (, result, ., tweakInfos, )]
[., tweakInfos, ), ;, boolean, changed, =, false, ;, if, (, stripTweaks, ), {, changed, =, stripAllCalls, (, result, .]
[;, if, (, stripTweaks, ), {, changed, =, stripAllCalls, (, result, ., tweakInfos, ), ;, }, else, if, (, !]
[), {, changed, =, stripAllCalls, (, result, ., tweakInfos, ), ;, }, else, if, (, !, compilerDefaultValueOverrides, ., isEmpty, (]
[=, stripAllCalls, (, result, ., tweakInfos, ), ;, }, else, if, (, !, compilerDefaultValueOverrides, ., isEmpty, (, ), ), {]
[;, }, else, if, (, !, compilerDefaultValueOverrides, ., isEmpty, (, ), ), {, changed, =, replaceGetCompilerOverridesCalls, (, result, ., getOverridesCalls]
[), ;, }, else, if, (, !, compilerDefaultValueOverrides, ., isEmpty, (, ), ), {, changed, =, replaceGetCompilerOverridesCalls, (, result, .]
[., tweakInfos, ), ;, }, else, if, (, !, compilerDefaultValueOverrides, ., isEmpty, (, ), ), {, changed, =, replaceGetCompilerOverridesCalls, (]
[), {, changed, =, replaceGetCompilerOverridesCalls, (, result, ., getOverridesCalls, ), ;, }, if, (, changed, ), {, compiler, ., reportCodeChange]
[), {, changed, =, replaceGetCompilerOverridesCalls, (, result, ., getOverridesCalls, ), ;, }, if, (, changed, ), {, compiler, ., reportCodeChange]
[., isEmpty, (, ), ), {, changed, =, replaceGetCompilerOverridesCalls, (, result, ., getOverridesCalls, ), ;, }, if, (, changed, )]
[=, replaceGetCompilerOverridesCalls, (, result, ., getOverridesCalls, ), ;, }, if, (, changed, ), {, compiler, ., reportCodeChange, (, ), ;]
[;, }, if, (, changed, ), {, compiler, ., reportCodeChange, (, ), ;, }, }, private, boolean, replaceGetCompilerOverridesCalls, (, List]
[), ;, }, if, (, changed, ), {, compiler, ., reportCodeChange, (, ), ;, }, }, private, boolean, replaceGetCompilerOverridesCalls, (]
[., getOverridesCalls, ), ;, }, if, (, changed, ), {, compiler, ., reportCodeChange, (, ), ;, }, }, private, boolean]
[), {, compiler, ., reportCodeChange, (, ), ;, }, }, private, boolean, replaceGetCompilerOverridesCalls, (, List, <, TweakFunctionCall, >, calls, )]
[;, }, }, private, boolean, replaceGetCompilerOverridesCalls, (, List, <, TweakFunctionCall, >, calls, ), {, for, (, TweakFunctionCall, call, :, calls]
[., reportCodeChange, (, ), ;, }, }, private, boolean, replaceGetCompilerOverridesCalls, (, List, <, TweakFunctionCall, >, calls, ), {, for, (]
[), {, Node, callNode, =, call, ., callNode, ;, Node, objNode, =, createCompilerDefaultValueOverridesVarNode, (, callNode, ), ;, callNode, ., getParent]
[;, Node, objNode, =, createCompilerDefaultValueOverridesVarNode, (, callNode, ), ;, callNode, ., getParent, (, ), ., replaceChild, (, callNode, ,, objNode]
[., callNode, ;, Node, objNode, =, createCompilerDefaultValueOverridesVarNode, (, callNode, ), ;, callNode, ., getParent, (, ), ., replaceChild, (, callNode]
[;, callNode, ., getParent, (, ), ., replaceChild, (, callNode, ,, objNode, ), ;, }, return, !, calls, ., isEmpty]
[), ;, callNode, ., getParent, (, ), ., replaceChild, (, callNode, ,, objNode, ), ;, }, return, !, calls, .]
[;, }, return, !, calls, ., isEmpty, (, ), ;, }, private, boolean, stripAllCalls, (, Map, <, String, ,, TweakInfo]
[., replaceChild, (, callNode, ,, objNode, ), ;, }, return, !, calls, ., isEmpty, (, ), ;, }, private, boolean]
[., getParent, (, ), ., replaceChild, (, callNode, ,, objNode, ), ;, }, return, !, calls, ., isEmpty, (, )]
[,, objNode, ), ;, }, return, !, calls, ., isEmpty, (, ), ;, }, private, boolean, stripAllCalls, (, Map, <]
[), ;, }, return, !, calls, ., isEmpty, (, ), ;, }, private, boolean, stripAllCalls, (, Map, <, String, ,]
[;, }, private, boolean, stripAllCalls, (, Map, <, String, ,, TweakInfo, >, tweakInfos, ), {, for, (, TweakInfo, tweakInfo, :]
[;, }, private, boolean, stripAllCalls, (, Map, <, String, ,, TweakInfo, >, tweakInfos, ), {, for, (, TweakInfo, tweakInfo, :]
[., isEmpty, (, ), ;, }, private, boolean, stripAllCalls, (, Map, <, String, ,, TweakInfo, >, tweakInfos, ), {, for]
[), {, boolean, isRegistered, =, tweakInfo, ., isRegistered, (, ), ;, for, (, TweakFunctionCall, functionCall, :, tweakInfo, ., functionCalls, )]
[., values, (, ), ), {, boolean, isRegistered, =, tweakInfo, ., isRegistered, (, ), ;, for, (, TweakFunctionCall, functionCall, :]
[;, for, (, TweakFunctionCall, functionCall, :, tweakInfo, ., functionCalls, ), {, Node, callNode, =, functionCall, ., callNode, ;, Node, parent]
[., isRegistered, (, ), ;, for, (, TweakFunctionCall, functionCall, :, tweakInfo, ., functionCalls, ), {, Node, callNode, =, functionCall, .]
[), {, Node, callNode, =, functionCall, ., callNode, ;, Node, parent, =, callNode, ., getParent, (, ), ;, if, (]
[., functionCalls, ), {, Node, callNode, =, functionCall, ., callNode, ;, Node, parent, =, callNode, ., getParent, (, ), ;]
[;, Node, parent, =, callNode, ., getParent, (, ), ;, if, (, functionCall, ., tweakFunc, ., isGetterFunction, (, ), )]
[., callNode, ;, Node, parent, =, callNode, ., getParent, (, ), ;, if, (, functionCall, ., tweakFunc, ., isGetterFunction, (]
[;, if, (, functionCall, ., tweakFunc, ., isGetterFunction, (, ), ), {, Node, newValue, ;, if, (, isRegistered, ), {]
[., getParent, (, ), ;, if, (, functionCall, ., tweakFunc, ., isGetterFunction, (, ), ), {, Node, newValue, ;, if]
[), {, Node, newValue, ;, if, (, isRegistered, ), {, newValue, =, tweakInfo, ., getDefaultValueNode, (, ), ., cloneNode, (]
[., isGetterFunction, (, ), ), {, Node, newValue, ;, if, (, isRegistered, ), {, newValue, =, tweakInfo, ., getDefaultValueNode, (]
[., tweakFunc, ., isGetterFunction, (, ), ), {, Node, newValue, ;, if, (, isRegistered, ), {, newValue, =, tweakInfo, .]
[), {, newValue, =, tweakInfo, ., getDefaultValueNode, (, ), ., cloneNode, (, ), ;, }, else, {, TweakFunction, registerFunction, =]
[=, tweakInfo, ., getDefaultValueNode, (, ), ., cloneNode, (, ), ;, }, else, {, TweakFunction, registerFunction, =, functionCall, ., tweakFunc]
[;, }, else, {, TweakFunction, registerFunction, =, functionCall, ., tweakFunc, ., registerFunction, ;, newValue, =, registerFunction, ., createDefaultValueNode, (, )]
[., cloneNode, (, ), ;, }, else, {, TweakFunction, registerFunction, =, functionCall, ., tweakFunc, ., registerFunction, ;, newValue, =, registerFunction]
[., getDefaultValueNode, (, ), ., cloneNode, (, ), ;, }, else, {, TweakFunction, registerFunction, =, functionCall, ., tweakFunc, ., registerFunction]
[;, newValue, =, registerFunction, ., createDefaultValueNode, (, ), ;, }, parent, ., replaceChild, (, callNode, ,, newValue, ), ;, }]
[., registerFunction, ;, newValue, =, registerFunction, ., createDefaultValueNode, (, ), ;, }, parent, ., replaceChild, (, callNode, ,, newValue, )]
[., tweakFunc, ., registerFunction, ;, newValue, =, registerFunction, ., createDefaultValueNode, (, ), ;, }, parent, ., replaceChild, (, callNode, ,]
[=, registerFunction, ., createDefaultValueNode, (, ), ;, }, parent, ., replaceChild, (, callNode, ,, newValue, ), ;, }, else, {]
[;, }, parent, ., replaceChild, (, callNode, ,, newValue, ), ;, }, else, {, Node, voidZeroNode, =, IR, ., voidNode]
[., createDefaultValueNode, (, ), ;, }, parent, ., replaceChild, (, callNode, ,, newValue, ), ;, }, else, {, Node, voidZeroNode]
[;, }, else, {, Node, voidZeroNode, =, IR, ., voidNode, (, IR, ., number, (, 0, ), ., srcref, (]
[., replaceChild, (, callNode, ,, newValue, ), ;, }, else, {, Node, voidZeroNode, =, IR, ., voidNode, (, IR, .]
[,, newValue, ), ;, }, else, {, Node, voidZeroNode, =, IR, ., voidNode, (, IR, ., number, (, 0, )]
[), ;, }, else, {, Node, voidZeroNode, =, IR, ., voidNode, (, IR, ., number, (, 0, ), ., srcref]
[;, parent, ., replaceChild, (, callNode, ,, voidZeroNode, ), ;, }, }, }, return, !, tweakInfos, ., isEmpty, (, )]
[., srcref, (, callNode, ), ;, parent, ., replaceChild, (, callNode, ,, voidZeroNode, ), ;, }, }, }, return, !]
[., voidNode, (, IR, ., number, (, 0, ), ., srcref, (, callNode, ), ), ., srcref, (, callNode, )]
[), ., srcref, (, callNode, ), ;, parent, ., replaceChild, (, callNode, ,, voidZeroNode, ), ;, }, }, }, return]
[., srcref, (, callNode, ), ), ., srcref, (, callNode, ), ;, parent, ., replaceChild, (, callNode, ,, voidZeroNode, )]
[., number, (, 0, ), ., srcref, (, callNode, ), ), ., srcref, (, callNode, ), ;, parent, ., replaceChild]
[), ., srcref, (, callNode, ), ), ., srcref, (, callNode, ), ;, parent, ., replaceChild, (, callNode, ,, voidZeroNode]
[), ), ., srcref, (, callNode, ), ;, parent, ., replaceChild, (, callNode, ,, voidZeroNode, ), ;, }, }, }]
[), ;, parent, ., replaceChild, (, callNode, ,, voidZeroNode, ), ;, }, }, }, return, !, tweakInfos, ., isEmpty, (]
[;, }, }, }, return, !, tweakInfos, ., isEmpty, (, ), ;, }, private, Node, createCompilerDefaultValueOverridesVarNode, (, Node, sourceInformationNode, )]
[., replaceChild, (, callNode, ,, voidZeroNode, ), ;, }, }, }, return, !, tweakInfos, ., isEmpty, (, ), ;, }]
[,, voidZeroNode, ), ;, }, }, }, return, !, tweakInfos, ., isEmpty, (, ), ;, }, private, Node, createCompilerDefaultValueOverridesVarNode, (]
[), ;, }, }, }, return, !, tweakInfos, ., isEmpty, (, ), ;, }, private, Node, createCompilerDefaultValueOverridesVarNode, (, Node, sourceInformationNode]
[;, }, private, Node, createCompilerDefaultValueOverridesVarNode, (, Node, sourceInformationNode, ), {, Node, objNode, =, IR, ., objectlit, (, ), ., srcref]
[;, }, private, Node, createCompilerDefaultValueOverridesVarNode, (, Node, sourceInformationNode, ), {, Node, objNode, =, IR, ., objectlit, (, ), ., srcref]
[., isEmpty, (, ), ;, }, private, Node, createCompilerDefaultValueOverridesVarNode, (, Node, sourceInformationNode, ), {, Node, objNode, =, IR, ., objectlit]
[;, for, (, Entry, <, String, ,, Node, >, entry, :, compilerDefaultValueOverrides, ., entrySet, (, ), ), {, Node, objKeyNode]
[., srcref, (, sourceInformationNode, ), ;, for, (, Entry, <, String, ,, Node, >, entry, :, compilerDefaultValueOverrides, ., entrySet, (]
[., objectlit, (, ), ., srcref, (, sourceInformationNode, ), ;, for, (, Entry, <, String, ,, Node, >, entry, :]
[), ;, for, (, Entry, <, String, ,, Node, >, entry, :, compilerDefaultValueOverrides, ., entrySet, (, ), ), {, Node]
[), {, Node, objKeyNode, =, IR, ., stringKey, (, entry, ., getKey, (, ), ), ., copyInformationFrom, (, sourceInformationNode, )]
[., entrySet, (, ), ), {, Node, objKeyNode, =, IR, ., stringKey, (, entry, ., getKey, (, ), ), .]
[;, Node, objValueNode, =, entry, ., getValue, (, ), ., cloneNode, (, ), ., copyInformationFrom, (, sourceInformationNode, ), ;, objKeyNode]
[., copyInformationFrom, (, sourceInformationNode, ), ;, Node, objValueNode, =, entry, ., getValue, (, ), ., cloneNode, (, ), ., copyInformationFrom]
[., stringKey, (, entry, ., getKey, (, ), ), ., copyInformationFrom, (, sourceInformationNode, ), ;, Node, objValueNode, =, entry, .]
[), ., copyInformationFrom, (, sourceInformationNode, ), ;, Node, objValueNode, =, entry, ., getValue, (, ), ., cloneNode, (, ), .]
[., getKey, (, ), ), ., copyInformationFrom, (, sourceInformationNode, ), ;, Node, objValueNode, =, entry, ., getValue, (, ), .]
[), ;, Node, objValueNode, =, entry, ., getValue, (, ), ., cloneNode, (, ), ., copyInformationFrom, (, sourceInformationNode, ), ;]
[;, objKeyNode, ., addChildToBack, (, objValueNode, ), ;, objNode, ., addChildToBack, (, objKeyNode, ), ;, }, return, objNode, ;, }]
[., copyInformationFrom, (, sourceInformationNode, ), ;, objKeyNode, ., addChildToBack, (, objValueNode, ), ;, objNode, ., addChildToBack, (, objKeyNode, ), ;]
[., cloneNode, (, ), ., copyInformationFrom, (, sourceInformationNode, ), ;, objKeyNode, ., addChildToBack, (, objValueNode, ), ;, objNode, ., addChildToBack]
[., getValue, (, ), ., cloneNode, (, ), ., copyInformationFrom, (, sourceInformationNode, ), ;, objKeyNode, ., addChildToBack, (, objValueNode, )]
[), ;, objKeyNode, ., addChildToBack, (, objValueNode, ), ;, objNode, ., addChildToBack, (, objKeyNode, ), ;, }, return, objNode, ;]
[;, objNode, ., addChildToBack, (, objKeyNode, ), ;, }, return, objNode, ;, }, private, void, applyCompilerDefaultValueOverrides, (, Map, <, String]
[., addChildToBack, (, objValueNode, ), ;, objNode, ., addChildToBack, (, objKeyNode, ), ;, }, return, objNode, ;, }, private, void]
[), ;, objNode, ., addChildToBack, (, objKeyNode, ), ;, }, return, objNode, ;, }, private, void, applyCompilerDefaultValueOverrides, (, Map, <]
[;, }, return, objNode, ;, }, private, void, applyCompilerDefaultValueOverrides, (, Map, <, String, ,, TweakInfo, >, tweakInfos, ), {, for]
[., addChildToBack, (, objKeyNode, ), ;, }, return, objNode, ;, }, private, void, applyCompilerDefaultValueOverrides, (, Map, <, String, ,, TweakInfo]
[), ;, }, return, objNode, ;, }, private, void, applyCompilerDefaultValueOverrides, (, Map, <, String, ,, TweakInfo, >, tweakInfos, ), {]
[;, }, private, void, applyCompilerDefaultValueOverrides, (, Map, <, String, ,, TweakInfo, >, tweakInfos, ), {, for, (, Entry, <, String]
[), {, String, tweakId, =, entry, ., getKey, (, ), ;, TweakInfo, tweakInfo, =, tweakInfos, ., get, (, tweakId, )]
[., entrySet, (, ), ), {, String, tweakId, =, entry, ., getKey, (, ), ;, TweakInfo, tweakInfo, =, tweakInfos, .]
[;, TweakInfo, tweakInfo, =, tweakInfos, ., get, (, tweakId, ), ;, if, (, tweakInfo, ==, null, ), {, compiler, .]
[., getKey, (, ), ;, TweakInfo, tweakInfo, =, tweakInfos, ., get, (, tweakId, ), ;, if, (, tweakInfo, ==, null]
[;, if, (, tweakInfo, ==, null, ), {, compiler, ., report, (, JSError, ., make, (, UNKNOWN_TWEAK_WARNING, ,, tweakId, )]
[., get, (, tweakId, ), ;, if, (, tweakInfo, ==, null, ), {, compiler, ., report, (, JSError, ., make]
[), ;, if, (, tweakInfo, ==, null, ), {, compiler, ., report, (, JSError, ., make, (, UNKNOWN_TWEAK_WARNING, ,, tweakId]
[), {, compiler, ., report, (, JSError, ., make, (, UNKNOWN_TWEAK_WARNING, ,, tweakId, ), ), ;, }, else, {, TweakFunction]
[==, null, ), {, compiler, ., report, (, JSError, ., make, (, UNKNOWN_TWEAK_WARNING, ,, tweakId, ), ), ;, }, else]
[), {, compiler, ., report, (, JSError, ., make, (, UNKNOWN_TWEAK_WARNING, ,, tweakId, ), ), ;, }, else, {, TweakFunction]
[;, }, else, {, TweakFunction, registerFunc, =, tweakInfo, ., registerCall, ., tweakFunc, ;, Node, value, =, entry, ., getValue, (]
[., report, (, JSError, ., make, (, UNKNOWN_TWEAK_WARNING, ,, tweakId, ), ), ;, }, else, {, TweakFunction, registerFunc, =, tweakInfo]
[), ;, }, else, {, TweakFunction, registerFunc, =, tweakInfo, ., registerCall, ., tweakFunc, ;, Node, value, =, entry, ., getValue]
[., make, (, UNKNOWN_TWEAK_WARNING, ,, tweakId, ), ), ;, }, else, {, TweakFunction, registerFunc, =, tweakInfo, ., registerCall, ., tweakFunc]
[,, tweakId, ), ), ;, }, else, {, TweakFunction, registerFunc, =, tweakInfo, ., registerCall, ., tweakFunc, ;, Node, value, =]
[), ), ;, }, else, {, TweakFunction, registerFunc, =, tweakInfo, ., registerCall, ., tweakFunc, ;, Node, value, =, entry, .]
[;, Node, value, =, entry, ., getValue, (, ), ;, if, (, !, registerFunc, ., isValidNodeType, (, value, ., getType]
[., tweakFunc, ;, Node, value, =, entry, ., getValue, (, ), ;, if, (, !, registerFunc, ., isValidNodeType, (, value]
[., registerCall, ., tweakFunc, ;, Node, value, =, entry, ., getValue, (, ), ;, if, (, !, registerFunc, ., isValidNodeType]
[;, if, (, !, registerFunc, ., isValidNodeType, (, value, ., getType, (, ), ), ), {, compiler, ., report, (]
[., getValue, (, ), ;, if, (, !, registerFunc, ., isValidNodeType, (, value, ., getType, (, ), ), ), {]
[), {, compiler, ., report, (, JSError, ., make, (, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName, (, ), ,]
[), {, compiler, ., report, (, JSError, ., make, (, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName, (, ), ,]
[., isValidNodeType, (, value, ., getType, (, ), ), ), {, compiler, ., report, (, JSError, ., make, (, INVALID_TWEAK_DEFAULT_VALUE_WARNING]
[), ), {, compiler, ., report, (, JSError, ., make, (, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName, (, )]
[., getType, (, ), ), ), {, compiler, ., report, (, JSError, ., make, (, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc]
[;, }, else, {, tweakInfo, ., defaultValueNode, =, value, ;, }, }, }, }, private, CollectTweaksResult, collectTweaks, (, Node, root]
[., report, (, JSError, ., make, (, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName, (, ), ,, registerFunc, ., getExpectedTypeName]
[), ;, }, else, {, tweakInfo, ., defaultValueNode, =, value, ;, }, }, }, }, private, CollectTweaksResult, collectTweaks, (, Node]
[., make, (, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, ), ), )]
[,, tweakId, ,, registerFunc, ., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, ), ), ), ;, }, else, {]
[,, registerFunc, ., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, ), ), ), ;, }, else, {, tweakInfo, .]
[,, registerFunc, ., getExpectedTypeName, (, ), ), ), ;, }, else, {, tweakInfo, ., defaultValueNode, =, value, ;, }, }]
[., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, ), ), ), ;, }, else, {, tweakInfo, ., defaultValueNode, =]
[), ), ;, }, else, {, tweakInfo, ., defaultValueNode, =, value, ;, }, }, }, }, private, CollectTweaksResult, collectTweaks, (]
[., getExpectedTypeName, (, ), ), ), ;, }, else, {, tweakInfo, ., defaultValueNode, =, value, ;, }, }, }, }]
[=, value, ;, }, }, }, }, private, CollectTweaksResult, collectTweaks, (, Node, root, ), {, CollectTweaks, pass, =, new, CollectTweaks]
[., defaultValueNode, =, value, ;, }, }, }, }, private, CollectTweaksResult, collectTweaks, (, Node, root, ), {, CollectTweaks, pass, =]
[;, }, }, }, }, private, CollectTweaksResult, collectTweaks, (, Node, root, ), {, CollectTweaks, pass, =, new, CollectTweaks, (, )]
[;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, pass, ), ;, Map, <, String, ,, TweakInfo, >, tweakInfos, =]
[;, Map, <, String, ,, TweakInfo, >, tweakInfos, =, pass, ., allTweaks, ;, for, (, TweakInfo, tweakInfo, :, tweakInfos, .]
[., traverse, (, compiler, ,, root, ,, pass, ), ;, Map, <, String, ,, TweakInfo, >, tweakInfos, =, pass, .]
[,, root, ,, pass, ), ;, Map, <, String, ,, TweakInfo, >, tweakInfos, =, pass, ., allTweaks, ;, for, (]
[,, pass, ), ;, Map, <, String, ,, TweakInfo, >, tweakInfos, =, pass, ., allTweaks, ;, for, (, TweakInfo, tweakInfo]
[), ;, Map, <, String, ,, TweakInfo, >, tweakInfos, =, pass, ., allTweaks, ;, for, (, TweakInfo, tweakInfo, :, tweakInfos]
[;, for, (, TweakInfo, tweakInfo, :, tweakInfos, ., values, (, ), ), {, tweakInfo, ., emitAllWarnings, (, ), ;, }]
[., allTweaks, ;, for, (, TweakInfo, tweakInfo, :, tweakInfos, ., values, (, ), ), {, tweakInfo, ., emitAllWarnings, (, )]
[), {, tweakInfo, ., emitAllWarnings, (, ), ;, }, return, new, CollectTweaksResult, (, tweakInfos, ,, pass, ., getOverridesCalls, ), ;]
[., values, (, ), ), {, tweakInfo, ., emitAllWarnings, (, ), ;, }, return, new, CollectTweaksResult, (, tweakInfos, ,, pass]
[;, }, return, new, CollectTweaksResult, (, tweakInfos, ,, pass, ., getOverridesCalls, ), ;, }, private, final, static, class, CollectTweaksResult, {]
[., emitAllWarnings, (, ), ;, }, return, new, CollectTweaksResult, (, tweakInfos, ,, pass, ., getOverridesCalls, ), ;, }, private, final]
[;, }, private, final, static, class, CollectTweaksResult, {, final, Map, <, String, ,, TweakInfo, >, tweakInfos, ;, final, List, <]
[,, pass, ., getOverridesCalls, ), ;, }, private, final, static, class, CollectTweaksResult, {, final, Map, <, String, ,, TweakInfo, >]
[), ;, }, private, final, static, class, CollectTweaksResult, {, final, Map, <, String, ,, TweakInfo, >, tweakInfos, ;, final, List]
[., getOverridesCalls, ), ;, }, private, final, static, class, CollectTweaksResult, {, final, Map, <, String, ,, TweakInfo, >, tweakInfos, ;]
[=, tweakInfos, ;, this, ., getOverridesCalls, =, getOverridesCalls, ;, }, }, private, final, class, CollectTweaks, extends, AbstractPostOrderCallback, {, final, Map]
[., tweakInfos, =, tweakInfos, ;, this, ., getOverridesCalls, =, getOverridesCalls, ;, }, }, private, final, class, CollectTweaks, extends, AbstractPostOrderCallback, {]
[;, this, ., getOverridesCalls, =, getOverridesCalls, ;, }, }, private, final, class, CollectTweaks, extends, AbstractPostOrderCallback, {, final, Map, <, String]
[=, getOverridesCalls, ;, }, }, private, final, class, CollectTweaks, extends, AbstractPostOrderCallback, {, final, Map, <, String, ,, TweakInfo, >, allTweaks]
[., getOverridesCalls, =, getOverridesCalls, ;, }, }, private, final, class, CollectTweaks, extends, AbstractPostOrderCallback, {, final, Map, <, String, ,, TweakInfo]
[;, }, }, private, final, class, CollectTweaks, extends, AbstractPostOrderCallback, {, final, Map, <, String, ,, TweakInfo, >, allTweaks, =, Maps]
[;, final, List, <, TweakFunctionCall, >, getOverridesCalls, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "incomplete-switch", ), @]
[., newHashMap, (, ), ;, final, List, <, TweakFunctionCall, >, getOverridesCalls, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings]
[;, @, SuppressWarnings, (, "incomplete-switch", ), @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent]
[., newArrayList, (, ), ;, @, SuppressWarnings, (, "incomplete-switch", ), @, Override, public, void, visit, (, NodeTraversal, t, ,, Node]
[@, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, !, n]
[), @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, !]
[), {, return, ;, }, String, callName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, TweakFunction, tweakFunc]
[), {, return, ;, }, String, callName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, TweakFunction, tweakFunc]
[., isCall, (, ), ), {, return, ;, }, String, callName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (]
[;, TweakFunction, tweakFunc, =, TWEAK_FUNCTIONS_MAP, ., get, (, callName, ), ;, if, (, tweakFunc, ==, null, ), {, return, ;]
[., getQualifiedName, (, ), ;, TweakFunction, tweakFunc, =, TWEAK_FUNCTIONS_MAP, ., get, (, callName, ), ;, if, (, tweakFunc, ==, null]
[., getFirstChild, (, ), ., getQualifiedName, (, ), ;, TweakFunction, tweakFunc, =, TWEAK_FUNCTIONS_MAP, ., get, (, callName, ), ;, if]
[;, if, (, tweakFunc, ==, null, ), {, return, ;, }, if, (, tweakFunc, ==, TweakFunction, ., GET_COMPILER_OVERRIDES, ), {]
[., get, (, callName, ), ;, if, (, tweakFunc, ==, null, ), {, return, ;, }, if, (, tweakFunc, ==]
[), ;, if, (, tweakFunc, ==, null, ), {, return, ;, }, if, (, tweakFunc, ==, TweakFunction, ., GET_COMPILER_OVERRIDES, )]
[), {, return, ;, }, if, (, tweakFunc, ==, TweakFunction, ., GET_COMPILER_OVERRIDES, ), {, getOverridesCalls, ., add, (, new, TweakFunctionCall]
[==, null, ), {, return, ;, }, if, (, tweakFunc, ==, TweakFunction, ., GET_COMPILER_OVERRIDES, ), {, getOverridesCalls, ., add, (]
[), {, return, ;, }, if, (, tweakFunc, ==, TweakFunction, ., GET_COMPILER_OVERRIDES, ), {, getOverridesCalls, ., add, (, new, TweakFunctionCall]
[), {, getOverridesCalls, ., add, (, new, TweakFunctionCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ), )]
[==, TweakFunction, ., GET_COMPILER_OVERRIDES, ), {, getOverridesCalls, ., add, (, new, TweakFunctionCall, (, t, ., getSourceName, (, ), ,, tweakFunc]
[), {, getOverridesCalls, ., add, (, new, TweakFunctionCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ), )]
[., GET_COMPILER_OVERRIDES, ), {, getOverridesCalls, ., add, (, new, TweakFunctionCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n]
[;, return, ;, }, Node, tweakIdNode, =, n, ., getFirstChild, (, ), ., getNext, (, ), ;, if, (, !]
[., add, (, new, TweakFunctionCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ), ), ;, return, ;]
[), ;, return, ;, }, Node, tweakIdNode, =, n, ., getFirstChild, (, ), ., getNext, (, ), ;, if, (]
[,, tweakFunc, ,, n, ), ), ;, return, ;, }, Node, tweakIdNode, =, n, ., getFirstChild, (, ), ., getNext]
[., getSourceName, (, ), ,, tweakFunc, ,, n, ), ), ;, return, ;, }, Node, tweakIdNode, =, n, ., getFirstChild]
[,, n, ), ), ;, return, ;, }, Node, tweakIdNode, =, n, ., getFirstChild, (, ), ., getNext, (, )]
[), ), ;, return, ;, }, Node, tweakIdNode, =, n, ., getFirstChild, (, ), ., getNext, (, ), ;, if]
[;, if, (, !, tweakIdNode, ., isString, (, ), ), {, compiler, ., report, (, t, ., makeError, (, tweakIdNode]
[., getNext, (, ), ;, if, (, !, tweakIdNode, ., isString, (, ), ), {, compiler, ., report, (, t]
[., getFirstChild, (, ), ., getNext, (, ), ;, if, (, !, tweakIdNode, ., isString, (, ), ), {, compiler]
[), {, compiler, ., report, (, t, ., makeError, (, tweakIdNode, ,, NON_LITERAL_TWEAK_ID_ERROR, ), ), ;, return, ;, }, String]
[), {, compiler, ., report, (, t, ., makeError, (, tweakIdNode, ,, NON_LITERAL_TWEAK_ID_ERROR, ), ), ;, return, ;, }, String]
[., isString, (, ), ), {, compiler, ., report, (, t, ., makeError, (, tweakIdNode, ,, NON_LITERAL_TWEAK_ID_ERROR, ), ), ;]
[;, return, ;, }, String, tweakId, =, tweakIdNode, ., getString, (, ), ;, TweakInfo, tweakInfo, =, allTweaks, ., get, (]
[., report, (, t, ., makeError, (, tweakIdNode, ,, NON_LITERAL_TWEAK_ID_ERROR, ), ), ;, return, ;, }, String, tweakId, =, tweakIdNode]
[), ;, return, ;, }, String, tweakId, =, tweakIdNode, ., getString, (, ), ;, TweakInfo, tweakInfo, =, allTweaks, ., get]
[., makeError, (, tweakIdNode, ,, NON_LITERAL_TWEAK_ID_ERROR, ), ), ;, return, ;, }, String, tweakId, =, tweakIdNode, ., getString, (, )]
[,, NON_LITERAL_TWEAK_ID_ERROR, ), ), ;, return, ;, }, String, tweakId, =, tweakIdNode, ., getString, (, ), ;, TweakInfo, tweakInfo, =]
[), ), ;, return, ;, }, String, tweakId, =, tweakIdNode, ., getString, (, ), ;, TweakInfo, tweakInfo, =, allTweaks, .]
[;, TweakInfo, tweakInfo, =, allTweaks, ., get, (, tweakId, ), ;, if, (, tweakInfo, ==, null, ), {, tweakInfo, =]
[., getString, (, ), ;, TweakInfo, tweakInfo, =, allTweaks, ., get, (, tweakId, ), ;, if, (, tweakInfo, ==, null]
[;, if, (, tweakInfo, ==, null, ), {, tweakInfo, =, new, TweakInfo, (, tweakId, ), ;, allTweaks, ., put, (]
[., get, (, tweakId, ), ;, if, (, tweakInfo, ==, null, ), {, tweakInfo, =, new, TweakInfo, (, tweakId, )]
[), ;, if, (, tweakInfo, ==, null, ), {, tweakInfo, =, new, TweakInfo, (, tweakId, ), ;, allTweaks, ., put]
[), {, tweakInfo, =, new, TweakInfo, (, tweakId, ), ;, allTweaks, ., put, (, tweakId, ,, tweakInfo, ), ;, }]
[==, null, ), {, tweakInfo, =, new, TweakInfo, (, tweakId, ), ;, allTweaks, ., put, (, tweakId, ,, tweakInfo, )]
[), {, tweakInfo, =, new, TweakInfo, (, tweakId, ), ;, allTweaks, ., put, (, tweakId, ,, tweakInfo, ), ;, }]
[=, new, TweakInfo, (, tweakId, ), ;, allTweaks, ., put, (, tweakId, ,, tweakInfo, ), ;, }, switch, (, tweakFunc]
[;, allTweaks, ., put, (, tweakId, ,, tweakInfo, ), ;, }, switch, (, tweakFunc, ), {, case, REGISTER_BOOLEAN, :, case]
[), ;, allTweaks, ., put, (, tweakId, ,, tweakInfo, ), ;, }, switch, (, tweakFunc, ), {, case, REGISTER_BOOLEAN, :]
[;, }, switch, (, tweakFunc, ), {, case, REGISTER_BOOLEAN, :, case, REGISTER_NUMBER, :, case, REGISTER_STRING, :, if, (, !, ID_MATCHER]
[., put, (, tweakId, ,, tweakInfo, ), ;, }, switch, (, tweakFunc, ), {, case, REGISTER_BOOLEAN, :, case, REGISTER_NUMBER, :]
[,, tweakInfo, ), ;, }, switch, (, tweakFunc, ), {, case, REGISTER_BOOLEAN, :, case, REGISTER_NUMBER, :, case, REGISTER_STRING, :, if]
[), ;, }, switch, (, tweakFunc, ), {, case, REGISTER_BOOLEAN, :, case, REGISTER_NUMBER, :, case, REGISTER_STRING, :, if, (, !]
[), {, case, REGISTER_BOOLEAN, :, case, REGISTER_NUMBER, :, case, REGISTER_STRING, :, if, (, !, ID_MATCHER, ., matchesAllOf, (, tweakId, )]
[:, case, REGISTER_NUMBER, :, case, REGISTER_STRING, :, if, (, !, ID_MATCHER, ., matchesAllOf, (, tweakId, ), ), {, compiler, .]
[:, case, REGISTER_STRING, :, if, (, !, ID_MATCHER, ., matchesAllOf, (, tweakId, ), ), {, compiler, ., report, (, t]
[:, if, (, !, ID_MATCHER, ., matchesAllOf, (, tweakId, ), ), {, compiler, ., report, (, t, ., makeError, (]
[), {, compiler, ., report, (, t, ., makeError, (, tweakIdNode, ,, INVALID_TWEAK_ID_ERROR, ), ), ;, }, if, (, !]
[), {, compiler, ., report, (, t, ., makeError, (, tweakIdNode, ,, INVALID_TWEAK_ID_ERROR, ), ), ;, }, if, (, !]
[., matchesAllOf, (, tweakId, ), ), {, compiler, ., report, (, t, ., makeError, (, tweakIdNode, ,, INVALID_TWEAK_ID_ERROR, ), )]
[), ), {, compiler, ., report, (, t, ., makeError, (, tweakIdNode, ,, INVALID_TWEAK_ID_ERROR, ), ), ;, }, if, (]
[;, }, if, (, !, t, ., inGlobalScope, (, ), ), {, compiler, ., report, (, t, ., makeError, (]
[., report, (, t, ., makeError, (, tweakIdNode, ,, INVALID_TWEAK_ID_ERROR, ), ), ;, }, if, (, !, t, ., inGlobalScope]
[), ;, }, if, (, !, t, ., inGlobalScope, (, ), ), {, compiler, ., report, (, t, ., makeError]
[., makeError, (, tweakIdNode, ,, INVALID_TWEAK_ID_ERROR, ), ), ;, }, if, (, !, t, ., inGlobalScope, (, ), ), {]
[,, INVALID_TWEAK_ID_ERROR, ), ), ;, }, if, (, !, t, ., inGlobalScope, (, ), ), {, compiler, ., report, (]
[), ), ;, }, if, (, !, t, ., inGlobalScope, (, ), ), {, compiler, ., report, (, t, .]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, ), ), ;, break, ;]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, ), ), ;, break, ;]
[., inGlobalScope, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, )]
[;, break, ;, }, if, (, tweakInfo, ., isRegistered, (, ), ), {, compiler, ., report, (, t, ., makeError]
[., report, (, t, ., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, ), ), ;, break, ;, }, if, (]
[), ;, break, ;, }, if, (, tweakInfo, ., isRegistered, (, ), ), {, compiler, ., report, (, t, .]
[., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, ), ), ;, break, ;, }, if, (, tweakInfo, ., isRegistered, (]
[,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, ), ), ;, break, ;, }, if, (, tweakInfo, ., isRegistered, (, ), ), {, compiler]
[,, tweakId, ), ), ;, break, ;, }, if, (, tweakInfo, ., isRegistered, (, ), ), {, compiler, ., report]
[), ), ;, break, ;, }, if, (, tweakInfo, ., isRegistered, (, ), ), {, compiler, ., report, (, t]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, TWEAK_MULTIPLY_REGISTERED_ERROR, ,, tweakId, ), ), ;, break, ;]
[., isRegistered, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, TWEAK_MULTIPLY_REGISTERED_ERROR, ,, tweakId, )]
[;, break, ;, }, Node, tweakDefaultValueNode, =, tweakIdNode, ., getNext, (, ), ., getNext, (, ), ;, tweakInfo, ., addRegisterCall]
[., report, (, t, ., makeError, (, n, ,, TWEAK_MULTIPLY_REGISTERED_ERROR, ,, tweakId, ), ), ;, break, ;, }, Node, tweakDefaultValueNode]
[), ;, break, ;, }, Node, tweakDefaultValueNode, =, tweakIdNode, ., getNext, (, ), ., getNext, (, ), ;, tweakInfo, .]
[., makeError, (, n, ,, TWEAK_MULTIPLY_REGISTERED_ERROR, ,, tweakId, ), ), ;, break, ;, }, Node, tweakDefaultValueNode, =, tweakIdNode, ., getNext]
[,, TWEAK_MULTIPLY_REGISTERED_ERROR, ,, tweakId, ), ), ;, break, ;, }, Node, tweakDefaultValueNode, =, tweakIdNode, ., getNext, (, ), ., getNext]
[,, tweakId, ), ), ;, break, ;, }, Node, tweakDefaultValueNode, =, tweakIdNode, ., getNext, (, ), ., getNext, (, )]
[), ), ;, break, ;, }, Node, tweakDefaultValueNode, =, tweakIdNode, ., getNext, (, ), ., getNext, (, ), ;, tweakInfo]
[;, tweakInfo, ., addRegisterCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ,, tweakDefaultValueNode, ), ;, break, ;]
[., getNext, (, ), ;, tweakInfo, ., addRegisterCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ,, tweakDefaultValueNode]
[., getNext, (, ), ., getNext, (, ), ;, tweakInfo, ., addRegisterCall, (, t, ., getSourceName, (, ), ,, tweakFunc]
[;, break, ;, case, OVERRIDE_DEFAULT_VALUE, :, if, (, !, t, ., inGlobalScope, (, ), ), {, compiler, ., report, (]
[., addRegisterCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ,, tweakDefaultValueNode, ), ;, break, ;, case, OVERRIDE_DEFAULT_VALUE]
[,, tweakFunc, ,, n, ,, tweakDefaultValueNode, ), ;, break, ;, case, OVERRIDE_DEFAULT_VALUE, :, if, (, !, t, ., inGlobalScope, (]
[., getSourceName, (, ), ,, tweakFunc, ,, n, ,, tweakDefaultValueNode, ), ;, break, ;, case, OVERRIDE_DEFAULT_VALUE, :, if, (, !]
[,, n, ,, tweakDefaultValueNode, ), ;, break, ;, case, OVERRIDE_DEFAULT_VALUE, :, if, (, !, t, ., inGlobalScope, (, ), )]
[,, tweakDefaultValueNode, ), ;, break, ;, case, OVERRIDE_DEFAULT_VALUE, :, if, (, !, t, ., inGlobalScope, (, ), ), {, compiler]
[), ;, break, ;, case, OVERRIDE_DEFAULT_VALUE, :, if, (, !, t, ., inGlobalScope, (, ), ), {, compiler, ., report]
[:, if, (, !, t, ., inGlobalScope, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, ), ), ;, break, ;]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, ), ), ;, break, ;]
[., inGlobalScope, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, )]
[;, break, ;, }, if, (, tweakInfo, ., isRegistered, (, ), ), {, compiler, ., report, (, t, ., makeError]
[., report, (, t, ., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, ), ), ;, break, ;, }, if, (]
[), ;, break, ;, }, if, (, tweakInfo, ., isRegistered, (, ), ), {, compiler, ., report, (, t, .]
[., makeError, (, n, ,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, ), ), ;, break, ;, }, if, (, tweakInfo, ., isRegistered, (]
[,, NON_GLOBAL_TWEAK_INIT_ERROR, ,, tweakId, ), ), ;, break, ;, }, if, (, tweakInfo, ., isRegistered, (, ), ), {, compiler]
[,, tweakId, ), ), ;, break, ;, }, if, (, tweakInfo, ., isRegistered, (, ), ), {, compiler, ., report]
[), ), ;, break, ;, }, if, (, tweakInfo, ., isRegistered, (, ), ), {, compiler, ., report, (, t]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR, ,, tweakId, ), ), ;, break, ;]
[., isRegistered, (, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR, ,, tweakId, )]
[;, break, ;, }, tweakDefaultValueNode, =, tweakIdNode, ., getNext, (, ), ;, tweakInfo, ., addOverrideDefaultValueCall, (, t, ., getSourceName, (]
[., report, (, t, ., makeError, (, n, ,, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR, ,, tweakId, ), ), ;, break, ;, }, tweakDefaultValueNode, =]
[), ;, break, ;, }, tweakDefaultValueNode, =, tweakIdNode, ., getNext, (, ), ;, tweakInfo, ., addOverrideDefaultValueCall, (, t, ., getSourceName]
[., makeError, (, n, ,, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR, ,, tweakId, ), ), ;, break, ;, }, tweakDefaultValueNode, =, tweakIdNode, ., getNext, (]
[,, TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR, ,, tweakId, ), ), ;, break, ;, }, tweakDefaultValueNode, =, tweakIdNode, ., getNext, (, ), ;, tweakInfo, .]
[,, tweakId, ), ), ;, break, ;, }, tweakDefaultValueNode, =, tweakIdNode, ., getNext, (, ), ;, tweakInfo, ., addOverrideDefaultValueCall, (]
[), ), ;, break, ;, }, tweakDefaultValueNode, =, tweakIdNode, ., getNext, (, ), ;, tweakInfo, ., addOverrideDefaultValueCall, (, t, .]
[=, tweakIdNode, ., getNext, (, ), ;, tweakInfo, ., addOverrideDefaultValueCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n]
[;, tweakInfo, ., addOverrideDefaultValueCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ,, tweakDefaultValueNode, ), ;, break, ;]
[., getNext, (, ), ;, tweakInfo, ., addOverrideDefaultValueCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ,, tweakDefaultValueNode]
[;, break, ;, case, GET_BOOLEAN, :, case, GET_NUMBER, :, case, GET_STRING, :, tweakInfo, ., addGetterCall, (, t, ., getSourceName, (]
[., addOverrideDefaultValueCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ,, tweakDefaultValueNode, ), ;, break, ;, case, GET_BOOLEAN]
[,, tweakFunc, ,, n, ,, tweakDefaultValueNode, ), ;, break, ;, case, GET_BOOLEAN, :, case, GET_NUMBER, :, case, GET_STRING, :, tweakInfo]
[., getSourceName, (, ), ,, tweakFunc, ,, n, ,, tweakDefaultValueNode, ), ;, break, ;, case, GET_BOOLEAN, :, case, GET_NUMBER, :]
[,, n, ,, tweakDefaultValueNode, ), ;, break, ;, case, GET_BOOLEAN, :, case, GET_NUMBER, :, case, GET_STRING, :, tweakInfo, ., addGetterCall]
[,, tweakDefaultValueNode, ), ;, break, ;, case, GET_BOOLEAN, :, case, GET_NUMBER, :, case, GET_STRING, :, tweakInfo, ., addGetterCall, (, t]
[), ;, break, ;, case, GET_BOOLEAN, :, case, GET_NUMBER, :, case, GET_STRING, :, tweakInfo, ., addGetterCall, (, t, ., getSourceName]
[:, case, GET_NUMBER, :, case, GET_STRING, :, tweakInfo, ., addGetterCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n]
[:, case, GET_STRING, :, tweakInfo, ., addGetterCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ), ;, }]
[:, tweakInfo, ., addGetterCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ), ;, }, }, }, private]
[;, }, }, }, private, static, final, class, TweakFunctionCall, {, final, String, sourceName, ;, final, TweakFunction, tweakFunc, ;, final, Node]
[., addGetterCall, (, t, ., getSourceName, (, ), ,, tweakFunc, ,, n, ), ;, }, }, }, private, static, final]
[,, tweakFunc, ,, n, ), ;, }, }, }, private, static, final, class, TweakFunctionCall, {, final, String, sourceName, ;, final]
[., getSourceName, (, ), ,, tweakFunc, ,, n, ), ;, }, }, }, private, static, final, class, TweakFunctionCall, {, final]
[,, n, ), ;, }, }, }, private, static, final, class, TweakFunctionCall, {, final, String, sourceName, ;, final, TweakFunction, tweakFunc]
[), ;, }, }, }, private, static, final, class, TweakFunctionCall, {, final, String, sourceName, ;, final, TweakFunction, tweakFunc, ;, final]
[,, tweakFunc, ,, callNode, ,, null, ), ;, }, TweakFunctionCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ,]
[,, callNode, ,, null, ), ;, }, TweakFunctionCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ,, Node, valueNode]
[,, null, ), ;, }, TweakFunctionCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ,, Node, valueNode, ), {]
[), ;, }, TweakFunctionCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ,, Node, valueNode, ), {, this, .]
[=, sourceName, ;, this, ., callNode, =, callNode, ;, this, ., tweakFunc, =, tweakFunc, ;, this, ., valueNode, =, valueNode]
[., sourceName, =, sourceName, ;, this, ., callNode, =, callNode, ;, this, ., tweakFunc, =, tweakFunc, ;, this, ., valueNode]
[;, this, ., callNode, =, callNode, ;, this, ., tweakFunc, =, tweakFunc, ;, this, ., valueNode, =, valueNode, ;, }]
[=, callNode, ;, this, ., tweakFunc, =, tweakFunc, ;, this, ., valueNode, =, valueNode, ;, }, Node, getIdNode, (, )]
[., callNode, =, callNode, ;, this, ., tweakFunc, =, tweakFunc, ;, this, ., valueNode, =, valueNode, ;, }, Node, getIdNode]
[;, this, ., tweakFunc, =, tweakFunc, ;, this, ., valueNode, =, valueNode, ;, }, Node, getIdNode, (, ), {, return]
[=, tweakFunc, ;, this, ., valueNode, =, valueNode, ;, }, Node, getIdNode, (, ), {, return, callNode, ., getFirstChild, (]
[., tweakFunc, =, tweakFunc, ;, this, ., valueNode, =, valueNode, ;, }, Node, getIdNode, (, ), {, return, callNode, .]
[;, this, ., valueNode, =, valueNode, ;, }, Node, getIdNode, (, ), {, return, callNode, ., getFirstChild, (, ), .]
[=, valueNode, ;, }, Node, getIdNode, (, ), {, return, callNode, ., getFirstChild, (, ), ., getNext, (, ), ;]
[., valueNode, =, valueNode, ;, }, Node, getIdNode, (, ), {, return, callNode, ., getFirstChild, (, ), ., getNext, (]
[;, }, Node, getIdNode, (, ), {, return, callNode, ., getFirstChild, (, ), ., getNext, (, ), ;, }, }]
[;, }, }, private, final, class, TweakInfo, {, final, String, tweakId, ;, final, List, <, TweakFunctionCall, >, functionCalls, ;, TweakFunctionCall]
[., getNext, (, ), ;, }, }, private, final, class, TweakInfo, {, final, String, tweakId, ;, final, List, <, TweakFunctionCall]
[., getFirstChild, (, ), ., getNext, (, ), ;, }, }, private, final, class, TweakInfo, {, final, String, tweakId, ;]
[=, tweakId, ;, functionCalls, =, Lists, ., newArrayList, (, ), ;, }, void, emitAllWarnings, (, ), {, if, (, isRegistered]
[., tweakId, =, tweakId, ;, functionCalls, =, Lists, ., newArrayList, (, ), ;, }, void, emitAllWarnings, (, ), {, if]
[;, functionCalls, =, Lists, ., newArrayList, (, ), ;, }, void, emitAllWarnings, (, ), {, if, (, isRegistered, (, )]
[=, Lists, ., newArrayList, (, ), ;, }, void, emitAllWarnings, (, ), {, if, (, isRegistered, (, ), ), {]
[;, }, void, emitAllWarnings, (, ), {, if, (, isRegistered, (, ), ), {, emitAllTypeWarnings, (, ), ;, }, else]
[., newArrayList, (, ), ;, }, void, emitAllWarnings, (, ), {, if, (, isRegistered, (, ), ), {, emitAllTypeWarnings, (]
[), {, emitAllTypeWarnings, (, ), ;, }, else, {, emitUnknownTweakErrors, (, ), ;, }, }, void, emitAllTypeWarnings, (, ), {]
[;, }, else, {, emitUnknownTweakErrors, (, ), ;, }, }, void, emitAllTypeWarnings, (, ), {, for, (, TweakFunctionCall, call, :]
[;, }, }, void, emitAllTypeWarnings, (, ), {, for, (, TweakFunctionCall, call, :, functionCalls, ), {, Node, valueNode, =, call]
[), {, Node, valueNode, =, call, ., valueNode, ;, TweakFunction, tweakFunc, =, call, ., tweakFunc, ;, TweakFunction, registerFunc, =, registerCall]
[;, TweakFunction, tweakFunc, =, call, ., tweakFunc, ;, TweakFunction, registerFunc, =, registerCall, ., tweakFunc, ;, if, (, valueNode, !=, null]
[., valueNode, ;, TweakFunction, tweakFunc, =, call, ., tweakFunc, ;, TweakFunction, registerFunc, =, registerCall, ., tweakFunc, ;, if, (, valueNode]
[;, TweakFunction, registerFunc, =, registerCall, ., tweakFunc, ;, if, (, valueNode, !=, null, ), {, if, (, !, registerFunc, .]
[., tweakFunc, ;, TweakFunction, registerFunc, =, registerCall, ., tweakFunc, ;, if, (, valueNode, !=, null, ), {, if, (, !]
[;, if, (, valueNode, !=, null, ), {, if, (, !, registerFunc, ., isValidNodeType, (, valueNode, ., getType, (, )]
[., tweakFunc, ;, if, (, valueNode, !=, null, ), {, if, (, !, registerFunc, ., isValidNodeType, (, valueNode, ., getType]
[), {, if, (, !, registerFunc, ., isValidNodeType, (, valueNode, ., getType, (, ), ), ), {, compiler, ., report]
[!=, null, ), {, if, (, !, registerFunc, ., isValidNodeType, (, valueNode, ., getType, (, ), ), ), {, compiler]
[), {, if, (, !, registerFunc, ., isValidNodeType, (, valueNode, ., getType, (, ), ), ), {, compiler, ., report]
[), {, compiler, ., report, (, JSError, ., make, (, call, ., sourceName, ,, valueNode, ,, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,]
[), {, compiler, ., report, (, JSError, ., make, (, call, ., sourceName, ,, valueNode, ,, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,]
[., isValidNodeType, (, valueNode, ., getType, (, ), ), ), {, compiler, ., report, (, JSError, ., make, (, call]
[), ), {, compiler, ., report, (, JSError, ., make, (, call, ., sourceName, ,, valueNode, ,, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId]
[., getType, (, ), ), ), {, compiler, ., report, (, JSError, ., make, (, call, ., sourceName, ,, valueNode]
[;, }, }, else, if, (, tweakFunc, ., isGetterFunction, (, ), ), {, if, (, !, tweakFunc, ., isCorrectRegisterFunction, (]
[., report, (, JSError, ., make, (, call, ., sourceName, ,, valueNode, ,, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName]
[), ;, }, }, else, if, (, tweakFunc, ., isGetterFunction, (, ), ), {, if, (, !, tweakFunc, ., isCorrectRegisterFunction]
[., make, (, call, ., sourceName, ,, valueNode, ,, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName, (, ), ,, registerFunc]
[,, valueNode, ,, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, ), ), )]
[., sourceName, ,, valueNode, ,, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, )]
[,, INVALID_TWEAK_DEFAULT_VALUE_WARNING, ,, tweakId, ,, registerFunc, ., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, ), ), ), ;, }]
[,, tweakId, ,, registerFunc, ., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, ), ), ), ;, }, }, else]
[,, registerFunc, ., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, ), ), ), ;, }, }, else, if, (]
[,, registerFunc, ., getExpectedTypeName, (, ), ), ), ;, }, }, else, if, (, tweakFunc, ., isGetterFunction, (, ), )]
[., getName, (, ), ,, registerFunc, ., getExpectedTypeName, (, ), ), ), ;, }, }, else, if, (, tweakFunc, .]
[), ), ;, }, }, else, if, (, tweakFunc, ., isGetterFunction, (, ), ), {, if, (, !, tweakFunc, .]
[., getExpectedTypeName, (, ), ), ), ;, }, }, else, if, (, tweakFunc, ., isGetterFunction, (, ), ), {, if]
[), {, if, (, !, tweakFunc, ., isCorrectRegisterFunction, (, registerFunc, ), ), {, compiler, ., report, (, JSError, ., make]
[., isGetterFunction, (, ), ), {, if, (, !, tweakFunc, ., isCorrectRegisterFunction, (, registerFunc, ), ), {, compiler, ., report]
[), {, compiler, ., report, (, JSError, ., make, (, call, ., sourceName, ,, call, ., callNode, ,, TWEAK_WRONG_GETTER_TYPE_WARNING, ,]
[), {, compiler, ., report, (, JSError, ., make, (, call, ., sourceName, ,, call, ., callNode, ,, TWEAK_WRONG_GETTER_TYPE_WARNING, ,]
[., isCorrectRegisterFunction, (, registerFunc, ), ), {, compiler, ., report, (, JSError, ., make, (, call, ., sourceName, ,, call]
[), ), {, compiler, ., report, (, JSError, ., make, (, call, ., sourceName, ,, call, ., callNode, ,, TWEAK_WRONG_GETTER_TYPE_WARNING]
[;, }, }, }, }, void, emitUnknownTweakErrors, (, ), {, for, (, TweakFunctionCall, call, :, functionCalls, ), {, compiler, .]
[., report, (, JSError, ., make, (, call, ., sourceName, ,, call, ., callNode, ,, TWEAK_WRONG_GETTER_TYPE_WARNING, ,, tweakFunc, ., getName]
[), ;, }, }, }, }, void, emitUnknownTweakErrors, (, ), {, for, (, TweakFunctionCall, call, :, functionCalls, ), {, compiler]
[., make, (, call, ., sourceName, ,, call, ., callNode, ,, TWEAK_WRONG_GETTER_TYPE_WARNING, ,, tweakFunc, ., getName, (, ), ,, registerFunc]
[,, call, ., callNode, ,, TWEAK_WRONG_GETTER_TYPE_WARNING, ,, tweakFunc, ., getName, (, ), ,, registerFunc, ., getName, (, ), ), )]
[., sourceName, ,, call, ., callNode, ,, TWEAK_WRONG_GETTER_TYPE_WARNING, ,, tweakFunc, ., getName, (, ), ,, registerFunc, ., getName, (, )]
[,, TWEAK_WRONG_GETTER_TYPE_WARNING, ,, tweakFunc, ., getName, (, ), ,, registerFunc, ., getName, (, ), ), ), ;, }, }, }]
[., callNode, ,, TWEAK_WRONG_GETTER_TYPE_WARNING, ,, tweakFunc, ., getName, (, ), ,, registerFunc, ., getName, (, ), ), ), ;, }]
[,, tweakFunc, ., getName, (, ), ,, registerFunc, ., getName, (, ), ), ), ;, }, }, }, }, void]
[,, registerFunc, ., getName, (, ), ), ), ;, }, }, }, }, void, emitUnknownTweakErrors, (, ), {, for, (]
[., getName, (, ), ,, registerFunc, ., getName, (, ), ), ), ;, }, }, }, }, void, emitUnknownTweakErrors, (]
[), ), ;, }, }, }, }, void, emitUnknownTweakErrors, (, ), {, for, (, TweakFunctionCall, call, :, functionCalls, ), {]
[., getName, (, ), ), ), ;, }, }, }, }, void, emitUnknownTweakErrors, (, ), {, for, (, TweakFunctionCall, call]
[), {, compiler, ., report, (, JSError, ., make, (, call, ., sourceName, ,, call, ., getIdNode, (, ), ,]
[;, }, }, void, addRegisterCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ,, Node, defaultValueNode, ), {, registerCall]
[., report, (, JSError, ., make, (, call, ., sourceName, ,, call, ., getIdNode, (, ), ,, UNKNOWN_TWEAK_WARNING, ,, tweakId]
[), ;, }, }, void, addRegisterCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ,, Node, defaultValueNode, ), {]
[., make, (, call, ., sourceName, ,, call, ., getIdNode, (, ), ,, UNKNOWN_TWEAK_WARNING, ,, tweakId, ), ), ;, }]
[,, call, ., getIdNode, (, ), ,, UNKNOWN_TWEAK_WARNING, ,, tweakId, ), ), ;, }, }, void, addRegisterCall, (, String, sourceName]
[., sourceName, ,, call, ., getIdNode, (, ), ,, UNKNOWN_TWEAK_WARNING, ,, tweakId, ), ), ;, }, }, void, addRegisterCall, (]
[,, UNKNOWN_TWEAK_WARNING, ,, tweakId, ), ), ;, }, }, void, addRegisterCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode]
[., getIdNode, (, ), ,, UNKNOWN_TWEAK_WARNING, ,, tweakId, ), ), ;, }, }, void, addRegisterCall, (, String, sourceName, ,, TweakFunction]
[,, tweakId, ), ), ;, }, }, void, addRegisterCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ,, Node]
[), ), ;, }, }, void, addRegisterCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ,, Node, defaultValueNode, )]
[=, new, TweakFunctionCall, (, sourceName, ,, tweakFunc, ,, callNode, ,, defaultValueNode, ), ;, functionCalls, ., add, (, registerCall, ), ;]
[;, functionCalls, ., add, (, registerCall, ), ;, }, void, addOverrideDefaultValueCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode]
[,, tweakFunc, ,, callNode, ,, defaultValueNode, ), ;, functionCalls, ., add, (, registerCall, ), ;, }, void, addOverrideDefaultValueCall, (, String]
[,, callNode, ,, defaultValueNode, ), ;, functionCalls, ., add, (, registerCall, ), ;, }, void, addOverrideDefaultValueCall, (, String, sourceName, ,]
[,, defaultValueNode, ), ;, functionCalls, ., add, (, registerCall, ), ;, }, void, addOverrideDefaultValueCall, (, String, sourceName, ,, TweakFunction, tweakFunc]
[), ;, functionCalls, ., add, (, registerCall, ), ;, }, void, addOverrideDefaultValueCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node]
[;, }, void, addOverrideDefaultValueCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ,, Node, defaultValueNode, ), {, functionCalls, .]
[., add, (, registerCall, ), ;, }, void, addOverrideDefaultValueCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ,, Node]
[), ;, }, void, addOverrideDefaultValueCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ,, Node, defaultValueNode, ), {, functionCalls]
[;, this, ., defaultValueNode, =, defaultValueNode, ;, }, void, addGetterCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, )]
[., add, (, new, TweakFunctionCall, (, sourceName, ,, tweakFunc, ,, callNode, ,, defaultValueNode, ), ), ;, this, ., defaultValueNode, =]
[), ;, this, ., defaultValueNode, =, defaultValueNode, ;, }, void, addGetterCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode]
[,, tweakFunc, ,, callNode, ,, defaultValueNode, ), ), ;, this, ., defaultValueNode, =, defaultValueNode, ;, }, void, addGetterCall, (, String]
[,, callNode, ,, defaultValueNode, ), ), ;, this, ., defaultValueNode, =, defaultValueNode, ;, }, void, addGetterCall, (, String, sourceName, ,]
[,, defaultValueNode, ), ), ;, this, ., defaultValueNode, =, defaultValueNode, ;, }, void, addGetterCall, (, String, sourceName, ,, TweakFunction, tweakFunc]
[), ), ;, this, ., defaultValueNode, =, defaultValueNode, ;, }, void, addGetterCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node]
[=, defaultValueNode, ;, }, void, addGetterCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ), {, functionCalls, ., add]
[., defaultValueNode, =, defaultValueNode, ;, }, void, addGetterCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ), {, functionCalls]
[;, }, void, addGetterCall, (, String, sourceName, ,, TweakFunction, tweakFunc, ,, Node, callNode, ), {, functionCalls, ., add, (, new]
[;, }, boolean, isRegistered, (, ), {, return, registerCall, !=, null, ;, }, Node, getDefaultValueNode, (, ), {, Preconditions, .]
[., add, (, new, TweakFunctionCall, (, sourceName, ,, tweakFunc, ,, callNode, ), ), ;, }, boolean, isRegistered, (, ), {]
[), ;, }, boolean, isRegistered, (, ), {, return, registerCall, !=, null, ;, }, Node, getDefaultValueNode, (, ), {, Preconditions]
[,, tweakFunc, ,, callNode, ), ), ;, }, boolean, isRegistered, (, ), {, return, registerCall, !=, null, ;, }, Node]
[,, callNode, ), ), ;, }, boolean, isRegistered, (, ), {, return, registerCall, !=, null, ;, }, Node, getDefaultValueNode, (]
[), ), ;, }, boolean, isRegistered, (, ), {, return, registerCall, !=, null, ;, }, Node, getDefaultValueNode, (, ), {]
[;, }, Node, getDefaultValueNode, (, ), {, Preconditions, ., checkState, (, isRegistered, (, ), ), ;, if, (, defaultValueNode, !=]
[!=, null, ;, }, Node, getDefaultValueNode, (, ), {, Preconditions, ., checkState, (, isRegistered, (, ), ), ;, if, (]
[;, }, Node, getDefaultValueNode, (, ), {, Preconditions, ., checkState, (, isRegistered, (, ), ), ;, if, (, defaultValueNode, !=]
[;, if, (, defaultValueNode, !=, null, ), {, return, defaultValueNode, ;, }, if, (, registerCall, ., valueNode, !=, null, )]
[., checkState, (, isRegistered, (, ), ), ;, if, (, defaultValueNode, !=, null, ), {, return, defaultValueNode, ;, }, if]
[), ;, if, (, defaultValueNode, !=, null, ), {, return, defaultValueNode, ;, }, if, (, registerCall, ., valueNode, !=, null]
[), {, return, defaultValueNode, ;, }, if, (, registerCall, ., valueNode, !=, null, ), {, return, registerCall, ., valueNode, ;]
[!=, null, ), {, return, defaultValueNode, ;, }, if, (, registerCall, ., valueNode, !=, null, ), {, return, registerCall, .]
[), {, return, defaultValueNode, ;, }, if, (, registerCall, ., valueNode, !=, null, ), {, return, registerCall, ., valueNode, ;]
[;, }, if, (, registerCall, ., valueNode, !=, null, ), {, return, registerCall, ., valueNode, ;, }, return, registerCall, .]
[), {, return, registerCall, ., valueNode, ;, }, return, registerCall, ., tweakFunc, ., createDefaultValueNode, (, ), ;, }, }, }]
[!=, null, ), {, return, registerCall, ., valueNode, ;, }, return, registerCall, ., tweakFunc, ., createDefaultValueNode, (, ), ;, }]
[., valueNode, !=, null, ), {, return, registerCall, ., valueNode, ;, }, return, registerCall, ., tweakFunc, ., createDefaultValueNode, (, )]
[), {, return, registerCall, ., valueNode, ;, }, return, registerCall, ., tweakFunc, ., createDefaultValueNode, (, ), ;, }, }, }]
[;, }, return, registerCall, ., tweakFunc, ., createDefaultValueNode, (, ), ;, }, }, }]
[., valueNode, ;, }, return, registerCall, ., tweakFunc, ., createDefaultValueNode, (, ), ;, }, }, }]
[;, }, }, }]
[., createDefaultValueNode, (, ), ;, }, }, }]
[., tweakFunc, ., createDefaultValueNode, (, ), ;, }, }, }]
