[;, private, final, Set, <, DiagnosticType, >, types, ;, private, final, String, name, ;, DiagnosticGroup, (, String, name, ,, DiagnosticType]
[=, name, ;, this, ., types, =, ImmutableSet, ., copyOf, (, Arrays, ., asList, (, types, ), ), ;, }]
[., name, =, name, ;, this, ., types, =, ImmutableSet, ., copyOf, (, Arrays, ., asList, (, types, ), )]
[;, this, ., types, =, ImmutableSet, ., copyOf, (, Arrays, ., asList, (, types, ), ), ;, }, public, DiagnosticGroup]
[=, ImmutableSet, ., copyOf, (, Arrays, ., asList, (, types, ), ), ;, }, public, DiagnosticGroup, (, DiagnosticType, ..., types]
[., types, =, ImmutableSet, ., copyOf, (, Arrays, ., asList, (, types, ), ), ;, }, public, DiagnosticGroup, (, DiagnosticType]
[;, }, public, DiagnosticGroup, (, DiagnosticType, ..., types, ), {, this, (, null, ,, types, ), ;, }, private, DiagnosticGroup]
[., copyOf, (, Arrays, ., asList, (, types, ), ), ;, }, public, DiagnosticGroup, (, DiagnosticType, ..., types, ), {]
[), ;, }, public, DiagnosticGroup, (, DiagnosticType, ..., types, ), {, this, (, null, ,, types, ), ;, }, private]
[., asList, (, types, ), ), ;, }, public, DiagnosticGroup, (, DiagnosticType, ..., types, ), {, this, (, null, ,]
[), ), ;, }, public, DiagnosticGroup, (, DiagnosticType, ..., types, ), {, this, (, null, ,, types, ), ;, }]
[,, types, ), ;, }, private, DiagnosticGroup, (, DiagnosticType, type, ), {, this, ., name, =, null, ;, this, .]
[), ;, }, private, DiagnosticGroup, (, DiagnosticType, type, ), {, this, ., name, =, null, ;, this, ., types, =]
[=, null, ;, this, ., types, =, ImmutableSet, ., of, (, type, ), ;, }, private, static, final, Map, <]
[., name, =, null, ;, this, ., types, =, ImmutableSet, ., of, (, type, ), ;, }, private, static, final]
[;, this, ., types, =, ImmutableSet, ., of, (, type, ), ;, }, private, static, final, Map, <, DiagnosticType, ,]
[=, ImmutableSet, ., of, (, type, ), ;, }, private, static, final, Map, <, DiagnosticType, ,, DiagnosticGroup, >, singletons, =]
[., types, =, ImmutableSet, ., of, (, type, ), ;, }, private, static, final, Map, <, DiagnosticType, ,, DiagnosticGroup, >]
[;, }, private, static, final, Map, <, DiagnosticType, ,, DiagnosticGroup, >, singletons, =, Maps, ., newHashMap, (, ), ;, public]
[., of, (, type, ), ;, }, private, static, final, Map, <, DiagnosticType, ,, DiagnosticGroup, >, singletons, =, Maps, .]
[), ;, }, private, static, final, Map, <, DiagnosticType, ,, DiagnosticGroup, >, singletons, =, Maps, ., newHashMap, (, ), ;]
[;, public, static, DiagnosticGroup, forType, (, DiagnosticType, type, ), {, if, (, !, singletons, ., containsKey, (, type, ), )]
[., newHashMap, (, ), ;, public, static, DiagnosticGroup, forType, (, DiagnosticType, type, ), {, if, (, !, singletons, ., containsKey]
[), {, singletons, ., put, (, type, ,, new, DiagnosticGroup, (, type, ), ), ;, }, return, singletons, ., get]
[), {, singletons, ., put, (, type, ,, new, DiagnosticGroup, (, type, ), ), ;, }, return, singletons, ., get]
[., containsKey, (, type, ), ), {, singletons, ., put, (, type, ,, new, DiagnosticGroup, (, type, ), ), ;]
[), ), {, singletons, ., put, (, type, ,, new, DiagnosticGroup, (, type, ), ), ;, }, return, singletons, .]
[;, }, return, singletons, ., get, (, type, ), ;, }, public, DiagnosticGroup, (, DiagnosticGroup, ..., groups, ), {, this]
[., put, (, type, ,, new, DiagnosticGroup, (, type, ), ), ;, }, return, singletons, ., get, (, type, )]
[,, new, DiagnosticGroup, (, type, ), ), ;, }, return, singletons, ., get, (, type, ), ;, }, public, DiagnosticGroup]
[), ;, }, return, singletons, ., get, (, type, ), ;, }, public, DiagnosticGroup, (, DiagnosticGroup, ..., groups, ), {]
[), ), ;, }, return, singletons, ., get, (, type, ), ;, }, public, DiagnosticGroup, (, DiagnosticGroup, ..., groups, )]
[;, }, public, DiagnosticGroup, (, DiagnosticGroup, ..., groups, ), {, this, (, null, ,, groups, ), ;, }, public, DiagnosticGroup]
[., get, (, type, ), ;, }, public, DiagnosticGroup, (, DiagnosticGroup, ..., groups, ), {, this, (, null, ,, groups]
[), ;, }, public, DiagnosticGroup, (, DiagnosticGroup, ..., groups, ), {, this, (, null, ,, groups, ), ;, }, public]
[,, groups, ), ;, }, public, DiagnosticGroup, (, String, name, ,, DiagnosticGroup, ..., groups, ), {, Set, <, DiagnosticType, >]
[), ;, }, public, DiagnosticGroup, (, String, name, ,, DiagnosticGroup, ..., groups, ), {, Set, <, DiagnosticType, >, set, =]
[;, for, (, DiagnosticGroup, group, :, groups, ), {, set, ., addAll, (, group, ., types, ), ;, }, this]
[., newHashSet, (, ), ;, for, (, DiagnosticGroup, group, :, groups, ), {, set, ., addAll, (, group, ., types]
[), {, set, ., addAll, (, group, ., types, ), ;, }, this, ., name, =, name, ;, this, .]
[;, }, this, ., name, =, name, ;, this, ., types, =, ImmutableSet, ., copyOf, (, set, ), ;, }]
[., addAll, (, group, ., types, ), ;, }, this, ., name, =, name, ;, this, ., types, =, ImmutableSet]
[), ;, }, this, ., name, =, name, ;, this, ., types, =, ImmutableSet, ., copyOf, (, set, ), ;]
[., types, ), ;, }, this, ., name, =, name, ;, this, ., types, =, ImmutableSet, ., copyOf, (, set]
[=, name, ;, this, ., types, =, ImmutableSet, ., copyOf, (, set, ), ;, }, public, boolean, matches, (, JSError]
[., name, =, name, ;, this, ., types, =, ImmutableSet, ., copyOf, (, set, ), ;, }, public, boolean, matches]
[;, this, ., types, =, ImmutableSet, ., copyOf, (, set, ), ;, }, public, boolean, matches, (, JSError, error, )]
[=, ImmutableSet, ., copyOf, (, set, ), ;, }, public, boolean, matches, (, JSError, error, ), {, return, matches, (]
[., types, =, ImmutableSet, ., copyOf, (, set, ), ;, }, public, boolean, matches, (, JSError, error, ), {, return]
[;, }, public, boolean, matches, (, JSError, error, ), {, return, matches, (, error, ., getType, (, ), ), ;]
[., copyOf, (, set, ), ;, }, public, boolean, matches, (, JSError, error, ), {, return, matches, (, error, .]
[), ;, }, public, boolean, matches, (, JSError, error, ), {, return, matches, (, error, ., getType, (, ), )]
[;, }, public, boolean, matches, (, DiagnosticType, type, ), {, return, types, ., contains, (, type, ), ;, }, boolean]
[), ;, }, public, boolean, matches, (, DiagnosticType, type, ), {, return, types, ., contains, (, type, ), ;, }]
[., getType, (, ), ), ;, }, public, boolean, matches, (, DiagnosticType, type, ), {, return, types, ., contains, (]
[;, }, boolean, isSubGroup, (, DiagnosticGroup, group, ), {, for, (, DiagnosticType, type, :, group, ., types, ), {, if]
[., contains, (, type, ), ;, }, boolean, isSubGroup, (, DiagnosticGroup, group, ), {, for, (, DiagnosticType, type, :, group]
[), ;, }, boolean, isSubGroup, (, DiagnosticGroup, group, ), {, for, (, DiagnosticType, type, :, group, ., types, ), {]
[), {, if, (, !, matches, (, type, ), ), {, return, false, ;, }, }, return, true, ;, }]
[., types, ), {, if, (, !, matches, (, type, ), ), {, return, false, ;, }, }, return, true]
[), {, return, false, ;, }, }, return, true, ;, }, public, Iterable, <, DiagnosticType, >, getTypes, (, ), {]
[), {, return, false, ;, }, }, return, true, ;, }, public, Iterable, <, DiagnosticType, >, getTypes, (, ), {]
[), ), {, return, false, ;, }, }, return, true, ;, }, public, Iterable, <, DiagnosticType, >, getTypes, (, )]
[;, }, }, return, true, ;, }, public, Iterable, <, DiagnosticType, >, getTypes, (, ), {, return, types, ;, }]
[;, }, public, Iterable, <, DiagnosticType, >, getTypes, (, ), {, return, types, ;, }, @, Override, public, String, toString]
[;, }, @, Override, public, String, toString, (, ), {, return, name, ==, null, ?, super, ., toString, (, )]
[;, }, }]
[?, super, ., toString, (, ), :, "DiagnosticGroup<", +, name, +, ">", ;, }, }]
[==, null, ?, super, ., toString, (, ), :, "DiagnosticGroup<", +, name, +, ">", ;, }, }]
[?, super, ., toString, (, ), :, "DiagnosticGroup<", +, name, +, ">", ;, }, }]
[:, "DiagnosticGroup<", +, name, +, ">", ;, }, }]
[., toString, (, ), :, "DiagnosticGroup<", +, name, +, ">", ;, }, }]
[;, }, }]
[+, ">", ;, }, }]
[+, name, +, ">", ;, }, }]
[+, ">", ;, }, }]
[;, }, }]
