[;, newYSampleData, (, y, ), ;, newXSampleData, (, x, ), ;, validateCovarianceData, (, x, ,, covariance, ), ;, newCovarianceData, (]
[,, y, ), ;, newYSampleData, (, y, ), ;, newXSampleData, (, x, ), ;, validateCovarianceData, (, x, ,, covariance, )]
[), ;, newYSampleData, (, y, ), ;, newXSampleData, (, x, ), ;, validateCovarianceData, (, x, ,, covariance, ), ;, newCovarianceData]
[;, newXSampleData, (, x, ), ;, validateCovarianceData, (, x, ,, covariance, ), ;, newCovarianceData, (, covariance, ), ;, }, protected]
[), ;, newXSampleData, (, x, ), ;, validateCovarianceData, (, x, ,, covariance, ), ;, newCovarianceData, (, covariance, ), ;, }]
[;, validateCovarianceData, (, x, ,, covariance, ), ;, newCovarianceData, (, covariance, ), ;, }, protected, void, newCovarianceData, (, double, []
[), ;, validateCovarianceData, (, x, ,, covariance, ), ;, newCovarianceData, (, covariance, ), ;, }, protected, void, newCovarianceData, (, double]
[;, newCovarianceData, (, covariance, ), ;, }, protected, void, newCovarianceData, (, double, [, ], [, ], omega, ), {, this]
[,, covariance, ), ;, newCovarianceData, (, covariance, ), ;, }, protected, void, newCovarianceData, (, double, [, ], [, ], omega]
[), ;, newCovarianceData, (, covariance, ), ;, }, protected, void, newCovarianceData, (, double, [, ], [, ], omega, ), {]
[;, }, protected, void, newCovarianceData, (, double, [, ], [, ], omega, ), {, this, ., Omega, =, new, Array2DRowRealMatrix]
[), ;, }, protected, void, newCovarianceData, (, double, [, ], [, ], omega, ), {, this, ., Omega, =, new]
[=, new, Array2DRowRealMatrix, (, omega, ), ;, this, ., OmegaInverse, =, null, ;, }, protected, RealMatrix, getOmegaInverse, (, ), {]
[., Omega, =, new, Array2DRowRealMatrix, (, omega, ), ;, this, ., OmegaInverse, =, null, ;, }, protected, RealMatrix, getOmegaInverse, (]
[;, this, ., OmegaInverse, =, null, ;, }, protected, RealMatrix, getOmegaInverse, (, ), {, if, (, OmegaInverse, ==, null, )]
[), ;, this, ., OmegaInverse, =, null, ;, }, protected, RealMatrix, getOmegaInverse, (, ), {, if, (, OmegaInverse, ==, null]
[=, null, ;, }, protected, RealMatrix, getOmegaInverse, (, ), {, if, (, OmegaInverse, ==, null, ), {, OmegaInverse, =, new]
[., OmegaInverse, =, null, ;, }, protected, RealMatrix, getOmegaInverse, (, ), {, if, (, OmegaInverse, ==, null, ), {, OmegaInverse]
[;, }, protected, RealMatrix, getOmegaInverse, (, ), {, if, (, OmegaInverse, ==, null, ), {, OmegaInverse, =, new, LUDecomposition, (]
[), {, OmegaInverse, =, new, LUDecomposition, (, Omega, ), ., getSolver, (, ), ., getInverse, (, ), ;, }, return]
[==, null, ), {, OmegaInverse, =, new, LUDecomposition, (, Omega, ), ., getSolver, (, ), ., getInverse, (, ), ;]
[), {, OmegaInverse, =, new, LUDecomposition, (, Omega, ), ., getSolver, (, ), ., getInverse, (, ), ;, }, return]
[=, new, LUDecomposition, (, Omega, ), ., getSolver, (, ), ., getInverse, (, ), ;, }, return, OmegaInverse, ;, }]
[;, }, return, OmegaInverse, ;, }, @, Override, protected, RealVector, calculateBeta, (, ), {, RealMatrix, OI, =, getOmegaInverse, (, )]
[., getInverse, (, ), ;, }, return, OmegaInverse, ;, }, @, Override, protected, RealVector, calculateBeta, (, ), {, RealMatrix, OI]
[., getSolver, (, ), ., getInverse, (, ), ;, }, return, OmegaInverse, ;, }, @, Override, protected, RealVector, calculateBeta, (]
[), ., getSolver, (, ), ., getInverse, (, ), ;, }, return, OmegaInverse, ;, }, @, Override, protected, RealVector, calculateBeta]
[;, }, @, Override, protected, RealVector, calculateBeta, (, ), {, RealMatrix, OI, =, getOmegaInverse, (, ), ;, RealMatrix, XT, =]
[;, RealMatrix, XT, =, getX, (, ), ., transpose, (, ), ;, RealMatrix, XTOIX, =, XT, ., multiply, (, OI]
[;, RealMatrix, XTOIX, =, XT, ., multiply, (, OI, ), ., multiply, (, getX, (, ), ), ;, RealMatrix, inverse]
[., transpose, (, ), ;, RealMatrix, XTOIX, =, XT, ., multiply, (, OI, ), ., multiply, (, getX, (, )]
[;, RealMatrix, inverse, =, new, LUDecomposition, (, XTOIX, ), ., getSolver, (, ), ., getInverse, (, ), ;, return, inverse]
[., multiply, (, getX, (, ), ), ;, RealMatrix, inverse, =, new, LUDecomposition, (, XTOIX, ), ., getSolver, (, )]
[., multiply, (, OI, ), ., multiply, (, getX, (, ), ), ;, RealMatrix, inverse, =, new, LUDecomposition, (, XTOIX]
[), ., multiply, (, getX, (, ), ), ;, RealMatrix, inverse, =, new, LUDecomposition, (, XTOIX, ), ., getSolver, (]
[), ;, RealMatrix, inverse, =, new, LUDecomposition, (, XTOIX, ), ., getSolver, (, ), ., getInverse, (, ), ;, return]
[;, return, inverse, ., multiply, (, XT, ), ., multiply, (, OI, ), ., operate, (, getY, (, ), )]
[., getInverse, (, ), ;, return, inverse, ., multiply, (, XT, ), ., multiply, (, OI, ), ., operate, (]
[., getSolver, (, ), ., getInverse, (, ), ;, return, inverse, ., multiply, (, XT, ), ., multiply, (, OI]
[), ., getSolver, (, ), ., getInverse, (, ), ;, return, inverse, ., multiply, (, XT, ), ., multiply, (]
[;, }, @, Override, protected, RealMatrix, calculateBetaVariance, (, ), {, RealMatrix, OI, =, getOmegaInverse, (, ), ;, RealMatrix, XTOIX, =]
[., operate, (, getY, (, ), ), ;, }, @, Override, protected, RealMatrix, calculateBetaVariance, (, ), {, RealMatrix, OI, =]
[., multiply, (, OI, ), ., operate, (, getY, (, ), ), ;, }, @, Override, protected, RealMatrix, calculateBetaVariance, (]
[., multiply, (, XT, ), ., multiply, (, OI, ), ., operate, (, getY, (, ), ), ;, }, @]
[), ., multiply, (, OI, ), ., operate, (, getY, (, ), ), ;, }, @, Override, protected, RealMatrix, calculateBetaVariance]
[), ., operate, (, getY, (, ), ), ;, }, @, Override, protected, RealMatrix, calculateBetaVariance, (, ), {, RealMatrix, OI]
[), ;, }, @, Override, protected, RealMatrix, calculateBetaVariance, (, ), {, RealMatrix, OI, =, getOmegaInverse, (, ), ;, RealMatrix, XTOIX]
[;, RealMatrix, XTOIX, =, getX, (, ), ., transpose, (, ), ., multiply, (, OI, ), ., multiply, (, getX]
[;, return, new, LUDecomposition, (, XTOIX, ), ., getSolver, (, ), ., getInverse, (, ), ;, }, @, Override, protected]
[., multiply, (, getX, (, ), ), ;, return, new, LUDecomposition, (, XTOIX, ), ., getSolver, (, ), ., getInverse]
[., multiply, (, OI, ), ., multiply, (, getX, (, ), ), ;, return, new, LUDecomposition, (, XTOIX, ), .]
[., transpose, (, ), ., multiply, (, OI, ), ., multiply, (, getX, (, ), ), ;, return, new, LUDecomposition]
[), ., multiply, (, getX, (, ), ), ;, return, new, LUDecomposition, (, XTOIX, ), ., getSolver, (, ), .]
[), ;, return, new, LUDecomposition, (, XTOIX, ), ., getSolver, (, ), ., getInverse, (, ), ;, }, @, Override]
[;, }, @, Override, protected, double, calculateErrorVariance, (, ), {, RealVector, residuals, =, calculateResiduals, (, ), ;, double, t, =]
[., getInverse, (, ), ;, }, @, Override, protected, double, calculateErrorVariance, (, ), {, RealVector, residuals, =, calculateResiduals, (, )]
[., getSolver, (, ), ., getInverse, (, ), ;, }, @, Override, protected, double, calculateErrorVariance, (, ), {, RealVector, residuals]
[), ., getSolver, (, ), ., getInverse, (, ), ;, }, @, Override, protected, double, calculateErrorVariance, (, ), {, RealVector]
[;, double, t, =, residuals, ., dotProduct, (, getOmegaInverse, (, ), ., operate, (, residuals, ), ), ;, return, t]
[;, return, t, /, (, getX, (, ), ., getRowDimension, (, ), -, getX, (, ), ., getColumnDimension, (, )]
[., dotProduct, (, getOmegaInverse, (, ), ., operate, (, residuals, ), ), ;, return, t, /, (, getX, (, )]
[), ;, return, t, /, (, getX, (, ), ., getRowDimension, (, ), -, getX, (, ), ., getColumnDimension, (]
[., operate, (, residuals, ), ), ;, return, t, /, (, getX, (, ), ., getRowDimension, (, ), -, getX]
[), ), ;, return, t, /, (, getX, (, ), ., getRowDimension, (, ), -, getX, (, ), ., getColumnDimension]
[;, }, }]
[/, (, getX, (, ), ., getRowDimension, (, ), -, getX, (, ), ., getColumnDimension, (, ), ), ;, }]
[;, }, }]
[), ;, }, }]
[-, getX, (, ), ., getColumnDimension, (, ), ), ;, }, }]
[., getRowDimension, (, ), -, getX, (, ), ., getColumnDimension, (, ), ), ;, }, }]
[), ;, }, }]
[., getColumnDimension, (, ), ), ;, }, }]
