[import, java, ., io, ., Serializable, ;, public, final, class, RectangleAnchor, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[java, ., io, ., Serializable, ;, public, final, class, RectangleAnchor, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[class, RectangleAnchor, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -, 2457494205644416327L, ;, public, static, final, RectangleAnchor, CENTER, =]
[Serializable, {, private, static, final, long, serialVersionUID, =, -, 2457494205644416327L, ;, public, static, final, RectangleAnchor, CENTER, =, new, RectangleAnchor, (]
[2457494205644416327L, ;, public, static, final, RectangleAnchor, CENTER, =, new, RectangleAnchor, (, "RectangleAnchor.CENTER", ), ;, public, static, final, RectangleAnchor, TOP, =]
[static, final, RectangleAnchor, CENTER, =, new, RectangleAnchor, (, "RectangleAnchor.CENTER", ), ;, public, static, final, RectangleAnchor, TOP, =, new, RectangleAnchor, (]
[), ;, public, static, final, RectangleAnchor, TOP, =, new, RectangleAnchor, (, "RectangleAnchor.TOP", ), ;, public, static, final, RectangleAnchor, TOP_LEFT, =]
[static, final, RectangleAnchor, TOP, =, new, RectangleAnchor, (, "RectangleAnchor.TOP", ), ;, public, static, final, RectangleAnchor, TOP_LEFT, =, new, RectangleAnchor, (]
[), ;, public, static, final, RectangleAnchor, TOP_LEFT, =, new, RectangleAnchor, (, "RectangleAnchor.TOP_LEFT", ), ;, public, static, final, RectangleAnchor, TOP_RIGHT, =]
[static, final, RectangleAnchor, TOP_LEFT, =, new, RectangleAnchor, (, "RectangleAnchor.TOP_LEFT", ), ;, public, static, final, RectangleAnchor, TOP_RIGHT, =, new, RectangleAnchor, (]
[), ;, public, static, final, RectangleAnchor, TOP_RIGHT, =, new, RectangleAnchor, (, "RectangleAnchor.TOP_RIGHT", ), ;, public, static, final, RectangleAnchor, BOTTOM, =]
[static, final, RectangleAnchor, TOP_RIGHT, =, new, RectangleAnchor, (, "RectangleAnchor.TOP_RIGHT", ), ;, public, static, final, RectangleAnchor, BOTTOM, =, new, RectangleAnchor, (]
[), ;, public, static, final, RectangleAnchor, BOTTOM, =, new, RectangleAnchor, (, "RectangleAnchor.BOTTOM", ), ;, public, static, final, RectangleAnchor, BOTTOM_LEFT, =]
[static, final, RectangleAnchor, BOTTOM, =, new, RectangleAnchor, (, "RectangleAnchor.BOTTOM", ), ;, public, static, final, RectangleAnchor, BOTTOM_LEFT, =, new, RectangleAnchor, (]
[), ;, public, static, final, RectangleAnchor, BOTTOM_LEFT, =, new, RectangleAnchor, (, "RectangleAnchor.BOTTOM_LEFT", ), ;, public, static, final, RectangleAnchor, BOTTOM_RIGHT, =]
[static, final, RectangleAnchor, BOTTOM_LEFT, =, new, RectangleAnchor, (, "RectangleAnchor.BOTTOM_LEFT", ), ;, public, static, final, RectangleAnchor, BOTTOM_RIGHT, =, new, RectangleAnchor, (]
[), ;, public, static, final, RectangleAnchor, BOTTOM_RIGHT, =, new, RectangleAnchor, (, "RectangleAnchor.BOTTOM_RIGHT", ), ;, public, static, final, RectangleAnchor, LEFT, =]
[static, final, RectangleAnchor, BOTTOM_RIGHT, =, new, RectangleAnchor, (, "RectangleAnchor.BOTTOM_RIGHT", ), ;, public, static, final, RectangleAnchor, LEFT, =, new, RectangleAnchor, (]
[), ;, public, static, final, RectangleAnchor, LEFT, =, new, RectangleAnchor, (, "RectangleAnchor.LEFT", ), ;, public, static, final, RectangleAnchor, RIGHT, =]
[static, final, RectangleAnchor, LEFT, =, new, RectangleAnchor, (, "RectangleAnchor.LEFT", ), ;, public, static, final, RectangleAnchor, RIGHT, =, new, RectangleAnchor, (]
[RIGHT, =, new, RectangleAnchor, (, "RectangleAnchor.RIGHT", ), ;, private, String, name, ;, private, RectangleAnchor, (, final, String, name, ), {]
[RIGHT, =, new, RectangleAnchor, (, "RectangleAnchor.RIGHT", ), ;, private, String, name, ;, private, RectangleAnchor, (, final, String, name, ), {]
[(, "RectangleAnchor.RIGHT", ), ;, private, String, name, ;, private, RectangleAnchor, (, final, String, name, ), {, this, ., name, =]
[(, final, String, name, ), {, this, ., name, =, name, ;, }, public, String, toString, (, ), {, return]
[(, final, String, name, ), {, this, ., name, =, name, ;, }, public, String, toString, (, ), {, return]
[(, ), {, return, this, ., name, ;, }, public, boolean, equals, (, final, Object, obj, ), {, if, (]
[(, ), {, return, this, ., name, ;, }, public, boolean, equals, (, final, Object, obj, ), {, if, (]
[{, return, this, ., name, ;, }, public, boolean, equals, (, final, Object, obj, ), {, if, (, this, ==]
[name, ;, }, public, boolean, equals, (, final, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[equals, (, final, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (]
[(, final, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (, !]
[final, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (, !, (]
[final, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (, !, (]
[this, ==, obj, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, RectangleAnchor, ), ), {, return]
[;, }, if, (, !, (, obj, instanceof, RectangleAnchor, ), ), {, return, false, ;, }, final, RectangleAnchor, order, =]
[(, !, (, obj, instanceof, RectangleAnchor, ), ), {, return, false, ;, }, final, RectangleAnchor, order, =, (, RectangleAnchor, )]
[instanceof, RectangleAnchor, ), ), {, return, false, ;, }, final, RectangleAnchor, order, =, (, RectangleAnchor, ), obj, ;, if, (]
[RectangleAnchor, ), ), {, return, false, ;, }, final, RectangleAnchor, order, =, (, RectangleAnchor, ), obj, ;, if, (, !]
[RectangleAnchor, ), ), {, return, false, ;, }, final, RectangleAnchor, order, =, (, RectangleAnchor, ), obj, ;, if, (, !]
[RectangleAnchor, ), ), {, return, false, ;, }, final, RectangleAnchor, order, =, (, RectangleAnchor, ), obj, ;, if, (, !]
[;, }, final, RectangleAnchor, order, =, (, RectangleAnchor, ), obj, ;, if, (, !, this, ., name, ., equals, (]
[;, }, final, RectangleAnchor, order, =, (, RectangleAnchor, ), obj, ;, if, (, !, this, ., name, ., equals, (]
[RectangleAnchor, ), obj, ;, if, (, !, this, ., name, ., equals, (, order, ., name, ), ), {, return]
[if, (, !, this, ., name, ., equals, (, order, ., name, ), ), {, return, false, ;, }, return]
[., name, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[., name, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[., name, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[), ;, }, public, static, Point2D, coordinates, (, final, Rectangle2D, rectangle, ,, final, RectangleAnchor, anchor, ), {, Point2D, result, =]
[Rectangle2D, rectangle, ,, final, RectangleAnchor, anchor, ), {, Point2D, result, =, new, Point2D, ., Double, (, ), ;, if, (]
[Rectangle2D, rectangle, ,, final, RectangleAnchor, anchor, ), {, Point2D, result, =, new, Point2D, ., Double, (, ), ;, if, (]
[,, final, RectangleAnchor, anchor, ), {, Point2D, result, =, new, Point2D, ., Double, (, ), ;, if, (, anchor, ==]
[,, final, RectangleAnchor, anchor, ), {, Point2D, result, =, new, Point2D, ., Double, (, ), ;, if, (, anchor, ==]
[{, Point2D, result, =, new, Point2D, ., Double, (, ), ;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {]
[{, Point2D, result, =, new, Point2D, ., Double, (, ), ;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {]
[new, Point2D, ., Double, (, ), ;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {, result, ., setLocation, (]
[new, Point2D, ., Double, (, ), ;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {, result, ., setLocation, (]
[;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,]
[;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,]
[., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (]
[., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (]
[(, rectangle, ., getCenterX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==]
[(, rectangle, ., getCenterX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==]
[), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {]
[), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {]
[getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, ., setLocation, (]
[getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, ., setLocation, (]
[else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,]
[else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,]
[., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (]
[., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (]
[(, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==]
[(, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==]
[), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {]
[), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {]
[getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, ., setLocation, (]
[getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, ., setLocation, (]
[else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,]
[else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,]
[., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (]
[., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (]
[(, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==]
[(, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==]
[), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {]
[), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {]
[getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, ., setLocation, (]
[getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, ., setLocation, (]
[else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,]
[else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,]
[., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (]
[., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (]
[(, rectangle, ., getMinX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==]
[(, rectangle, ., getMinX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==]
[), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {]
[), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {]
[getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, ., setLocation, (]
[getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, ., setLocation, (]
[else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,]
[else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,]
[., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (]
[., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (]
[(, rectangle, ., getMaxX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==]
[(, rectangle, ., getMaxX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==]
[), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {]
[), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {]
[getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, ., setLocation, (]
[getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, ., setLocation, (]
[else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,]
[else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,]
[., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (]
[., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (]
[(, rectangle, ., getMinX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==]
[(, rectangle, ., getMinX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==]
[), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {]
[), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {]
[getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, ., setLocation, (]
[getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, ., setLocation, (]
[else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,]
[else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,]
[., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (]
[., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (]
[(, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==]
[(, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==]
[), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {]
[), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {]
[getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, ., setLocation, (]
[getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, ., setLocation, (]
[else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,]
[else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,]
[., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (]
[., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (]
[(, rectangle, ., getMinX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==]
[(, rectangle, ., getMinX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==]
[), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {]
[), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {]
[getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, ., setLocation, (]
[getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, ., setLocation, (]
[else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,]
[else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,]
[{, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, return]
[final, Size2D, dimensions, ,, final, double, anchorX, ,, final, double, anchorY, ,, final, RectangleAnchor, anchor, ), {, Rectangle2D, result, =]
[anchorX, ,, final, double, anchorY, ,, final, RectangleAnchor, anchor, ), {, Rectangle2D, result, =, null, ;, final, double, w, =]
[anchorX, ,, final, double, anchorY, ,, final, RectangleAnchor, anchor, ), {, Rectangle2D, result, =, null, ;, final, double, w, =]
[{, Rectangle2D, result, =, null, ;, final, double, w, =, dimensions, ., getWidth, (, ), ;, final, double, h, =]
[{, Rectangle2D, result, =, null, ;, final, double, w, =, dimensions, ., getWidth, (, ), ;, final, double, h, =]
[w, =, dimensions, ., getWidth, (, ), ;, final, double, h, =, dimensions, ., getHeight, (, ), ;, if, (]
[w, =, dimensions, ., getWidth, (, ), ;, final, double, h, =, dimensions, ., getHeight, (, ), ;, if, (]
[dimensions, ., getWidth, (, ), ;, final, double, h, =, dimensions, ., getHeight, (, ), ;, if, (, anchor, ==]
[dimensions, ., getWidth, (, ), ;, final, double, h, =, dimensions, ., getHeight, (, ), ;, if, (, anchor, ==]
[;, final, double, h, =, dimensions, ., getHeight, (, ), ;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {]
[double, h, =, dimensions, ., getHeight, (, ), ;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {, result, =]
[getHeight, (, ), ;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {, result, =, new, Rectangle2D, ., Double, (]
[getHeight, (, ), ;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {, result, =, new, Rectangle2D, ., Double, (]
[), ;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[), ;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /]
[anchor, ==, RectangleAnchor, ., CENTER, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[anchor, ==, RectangleAnchor, ., CENTER, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[RectangleAnchor, ., CENTER, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[RectangleAnchor, ., CENTER, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[CENTER, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /]
[{, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {]
[2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, =, new, Rectangle2D, ., Double, (]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, =, new, Rectangle2D, ., Double, (]
[}, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[}, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /]
[anchor, ==, RectangleAnchor, ., TOP, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[anchor, ==, RectangleAnchor, ., TOP, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[RectangleAnchor, ., TOP, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[RectangleAnchor, ., TOP, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[TOP, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /]
[{, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {]
[2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (]
[}, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[}, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /]
[anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[RectangleAnchor, ., BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[RectangleAnchor, ., BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /]
[{, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {]
[2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, =, new, Rectangle2D, ., Double, (]
[}, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, ,]
[}, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, ,]
[if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, ,, anchorY, -]
[if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, ,, anchorY, -]
[anchor, ==, RectangleAnchor, ., LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, ,, anchorY, -, h, /]
[RectangleAnchor, ., LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, ,, anchorY, -, h, /, 2.0, ,]
[LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[., Double, (, anchorX, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[., Double, (, anchorX, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[(, anchorX, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[(, anchorX, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {]
[2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (]
[}, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, ,]
[if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, ,]
[anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, ,, anchorY, -]
[anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, ,, anchorY, -]
[RectangleAnchor, ., RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, ,, anchorY, -, h, /]
[RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, ,, anchorY, -, h, /, 2.0, ,]
[{, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[(, anchorX, -, w, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[(, anchorX, -, w, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[-, w, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[-, w, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {]
[2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (]
[}, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[}, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /]
[anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[RectangleAnchor, ., TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[RectangleAnchor, ., TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /]
[{, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {]
[2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (]
[}, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[}, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /]
[anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /]
[{, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {]
[2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (]
[}, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[}, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /]
[anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /]
[{, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {]
[2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (]
[}, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[}, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -]
[if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /]
[anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,]
[RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -]
[BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /]
[{, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[(, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, return]
[,, h, ), ;, }, return, result, ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, RectangleAnchor, result, =]
[}, return, result, ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, RectangleAnchor, result, =, null, ;, if, (]
[}, return, result, ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, RectangleAnchor, result, =, null, ;, if, (]
[}, private, Object, readResolve, (, ), throws, ObjectStreamException, {, RectangleAnchor, result, =, null, ;, if, (, this, ., equals, (]
[}, private, Object, readResolve, (, ), throws, ObjectStreamException, {, RectangleAnchor, result, =, null, ;, if, (, this, ., equals, (]
[throws, ObjectStreamException, {, RectangleAnchor, result, =, null, ;, if, (, this, ., equals, (, RectangleAnchor, ., CENTER, ), ), {]
[{, RectangleAnchor, result, =, null, ;, if, (, this, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, result, =]
[{, RectangleAnchor, result, =, null, ;, if, (, this, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, result, =]
[this, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, result, =, RectangleAnchor, ., CENTER, ;, }, else, if, (]
[this, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, result, =, RectangleAnchor, ., CENTER, ;, }, else, if, (]
[RectangleAnchor, ., CENTER, ), ), {, result, =, RectangleAnchor, ., CENTER, ;, }, else, if, (, this, ., equals, (]
[RectangleAnchor, ., CENTER, ), ), {, result, =, RectangleAnchor, ., CENTER, ;, }, else, if, (, this, ., equals, (]
[result, =, RectangleAnchor, ., CENTER, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP, ), ), {]
[RectangleAnchor, ., CENTER, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =]
[RectangleAnchor, ., CENTER, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =]
[this, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (]
[this, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (]
[RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, this, ., equals, (]
[RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, this, ., equals, (]
[result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {]
[RectangleAnchor, ., TOP, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =]
[RectangleAnchor, ., TOP, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =]
[this, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (]
[this, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (]
[RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, this, ., equals, (]
[RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, this, ., equals, (]
[result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., LEFT, ), ), {]
[RectangleAnchor, ., BOTTOM, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =]
[RectangleAnchor, ., BOTTOM, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =]
[this, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (]
[this, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (]
[RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, this, ., equals, (]
[RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, this, ., equals, (]
[result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {]
[RectangleAnchor, ., LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =]
[RectangleAnchor, ., LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =]
[this, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (]
[this, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (]
[RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, this, ., equals, (]
[RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, this, ., equals, (]
[result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {]
[RectangleAnchor, ., RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =]
[RectangleAnchor, ., RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =]
[this, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (]
[this, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (]
[RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, this, ., equals, (]
[RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, this, ., equals, (]
[result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {]
[RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =]
[RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =]
[this, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (]
[this, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (]
[RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, this, ., equals, (]
[RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, this, ., equals, (]
[result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {]
[RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =]
[RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =]
[this, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (]
[this, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (]
[RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, this, ., equals, (]
[RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, this, ., equals, (]
[result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {]
[RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =]
[RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =]
[if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, return]
