[DatasetUtilities, ;, public, class, GroupedStackedBarRenderer, extends, StackedBarRenderer, implements, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[;, public, class, GroupedStackedBarRenderer, extends, StackedBarRenderer, implements, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[final, long, serialVersionUID, =, -, 2725921399005922939L, ;, private, KeyToGroupMap, seriesToGroupMap, ;, public, GroupedStackedBarRenderer, (, ), {, super, (, ), ;]
[final, long, serialVersionUID, =, -, 2725921399005922939L, ;, private, KeyToGroupMap, seriesToGroupMap, ;, public, GroupedStackedBarRenderer, (, ), {, super, (, ), ;]
[-, 2725921399005922939L, ;, private, KeyToGroupMap, seriesToGroupMap, ;, public, GroupedStackedBarRenderer, (, ), {, super, (, ), ;, this, ., seriesToGroupMap, =]
[this, ., seriesToGroupMap, =, new, KeyToGroupMap, (, ), ;, }, public, void, setSeriesToGroupMap, (, KeyToGroupMap, map, ), {, if, (]
[this, ., seriesToGroupMap, =, new, KeyToGroupMap, (, ), ;, }, public, void, setSeriesToGroupMap, (, KeyToGroupMap, map, ), {, if, (]
[seriesToGroupMap, =, new, KeyToGroupMap, (, ), ;, }, public, void, setSeriesToGroupMap, (, KeyToGroupMap, map, ), {, if, (, map, ==]
[(, ), ;, }, public, void, setSeriesToGroupMap, (, KeyToGroupMap, map, ), {, if, (, map, ==, null, ), {, throw]
[}, public, void, setSeriesToGroupMap, (, KeyToGroupMap, map, ), {, if, (, map, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, KeyToGroupMap, map, ), {, if, (, map, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'map' argument.", ), ;, }]
[(, KeyToGroupMap, map, ), {, if, (, map, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'map' argument.", ), ;, }]
[{, if, (, map, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'map' argument.", ), ;, }, this, ., seriesToGroupMap, =]
[(, map, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'map' argument.", ), ;, }, this, ., seriesToGroupMap, =, map, ;]
[., seriesToGroupMap, =, map, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (]
[., seriesToGroupMap, =, map, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (]
[=, map, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==]
[(, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==, null, ), {, return]
[findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==, null, ), {, return, null, ;, }, Range, r, =]
[findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==, null, ), {, return, null, ;, }, Range, r, =]
[), {, if, (, dataset, ==, null, ), {, return, null, ;, }, Range, r, =, DatasetUtilities, ., findStackedRangeBounds, (]
[if, (, dataset, ==, null, ), {, return, null, ;, }, Range, r, =, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ,]
[if, (, dataset, ==, null, ), {, return, null, ;, }, Range, r, =, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ,]
[{, return, null, ;, }, Range, r, =, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ,, this, ., seriesToGroupMap, ), ;, return]
[protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, int, rendererIndex, ,, CategoryItemRendererState, state, ), {, CategoryAxis, xAxis, =]
[protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, int, rendererIndex, ,, CategoryItemRendererState, state, ), {, CategoryAxis, xAxis, =]
[CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, int, rendererIndex, ,, CategoryItemRendererState, state, ), {, CategoryAxis, xAxis, =, plot, ., getDomainAxisForDataset, (]
[int, rendererIndex, ,, CategoryItemRendererState, state, ), {, CategoryAxis, xAxis, =, plot, ., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =]
[int, rendererIndex, ,, CategoryItemRendererState, state, ), {, CategoryAxis, xAxis, =, plot, ., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =]
[state, ), {, CategoryAxis, xAxis, =, plot, ., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =, plot, ., getDataset, (]
[=, plot, ., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (]
[=, plot, ., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (]
[., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (, data, !=]
[CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (, data, !=, null, ), {, PlotOrientation, orientation, =]
[CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (, data, !=, null, ), {, PlotOrientation, orientation, =]
[;, if, (, data, !=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =]
[!=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (]
[!=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (]
[), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==]
[), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==]
[plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[(, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (]
[(, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[{, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[(, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =]
[(, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =]
[==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *]
[=, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, int, groups, =]
[=, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, int, groups, =]
[=, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, int, groups, =]
[space, *, getMaximumBarWidth, (, ), ;, int, groups, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, categories, =]
[space, *, getMaximumBarWidth, (, ), ;, int, groups, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, categories, =]
[this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, categories, =, data, ., getColumnCount, (, ), ;, int, columns, =]
[this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, categories, =, data, ., getColumnCount, (, ), ;, int, columns, =]
[seriesToGroupMap, ., getGroupCount, (, ), ;, int, categories, =, data, ., getColumnCount, (, ), ;, int, columns, =, groups, *]
[;, int, categories, =, data, ., getColumnCount, (, ), ;, int, columns, =, groups, *, categories, ;, double, categoryMargin, =]
[., getColumnCount, (, ), ;, int, columns, =, groups, *, categories, ;, double, categoryMargin, =, 0.0, ;, double, itemMargin, =]
[;, int, columns, =, groups, *, categories, ;, double, categoryMargin, =, 0.0, ;, double, itemMargin, =, 0.0, ;, if, (]
[;, int, columns, =, groups, *, categories, ;, double, categoryMargin, =, 0.0, ;, double, itemMargin, =, 0.0, ;, if, (]
[columns, =, groups, *, categories, ;, double, categoryMargin, =, 0.0, ;, double, itemMargin, =, 0.0, ;, if, (, categories, >]
[*, categories, ;, double, categoryMargin, =, 0.0, ;, double, itemMargin, =, 0.0, ;, if, (, categories, >, 1, ), {]
[;, double, categoryMargin, =, 0.0, ;, double, itemMargin, =, 0.0, ;, if, (, categories, >, 1, ), {, categoryMargin, =]
[;, double, categoryMargin, =, 0.0, ;, double, itemMargin, =, 0.0, ;, if, (, categories, >, 1, ), {, categoryMargin, =]
[0.0, ;, if, (, categories, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, if, (]
[0.0, ;, if, (, categories, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, if, (]
[if, (, categories, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, if, (, groups, >]
[>, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, if, (, groups, >, 1, ), {]
[), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, if, (, groups, >, 1, ), {, itemMargin, =]
[), ;, }, if, (, groups, >, 1, ), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =]
[), ;, }, if, (, groups, >, 1, ), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =]
[}, if, (, groups, >, 1, ), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *]
[if, (, groups, >, 1, ), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[if, (, groups, >, 1, ), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[if, (, groups, >, 1, ), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[if, (, groups, >, 1, ), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[if, (, groups, >, 1, ), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (]
[groups, >, 1, ), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -]
[groups, >, 1, ), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -]
[=, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, xAxis, ., getLowerMargin, (, ), -]
[=, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, xAxis, ., getLowerMargin, (, ), -]
[double, used, =, space, *, (, 1, -, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -]
[=, space, *, (, 1, -, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, -]
[-, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, -, itemMargin, ), ;, if, (]
[-, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, -, itemMargin, ), ;, if, (]
[., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, -, itemMargin, ), ;, if, (, columns, >]
[), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, -, itemMargin, ), ;, if, (, columns, >, 0, ), {]
[), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, -, itemMargin, ), ;, if, (, columns, >, 0, ), {]
[getUpperMargin, (, ), -, categoryMargin, -, itemMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (]
[getUpperMargin, (, ), -, categoryMargin, -, itemMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (]
[categoryMargin, -, itemMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[categoryMargin, -, itemMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[itemMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /]
[;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,]
[{, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else, {]
[{, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else, {]
[(, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (]
[(, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (]
[(, used, /, columns, ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (]
[/, columns, ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,]
[,, Rectangle2D, dataArea, ,, CategoryAxis, domainAxis, ,, CategoryItemRendererState, state, ,, int, row, ,, int, column, ), {, double, space, =]
[CategoryAxis, domainAxis, ,, CategoryItemRendererState, state, ,, int, row, ,, int, column, ), {, double, space, =, 0.0, ;, if, (]
[CategoryAxis, domainAxis, ,, CategoryItemRendererState, state, ,, int, row, ,, int, column, ), {, double, space, =, 0.0, ;, if, (]
[,, CategoryItemRendererState, state, ,, int, row, ,, int, column, ), {, double, space, =, 0.0, ;, if, (, orientation, ==]
[,, CategoryItemRendererState, state, ,, int, row, ,, int, column, ), {, double, space, =, 0.0, ;, if, (, orientation, ==]
[row, ,, int, column, ), {, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[int, column, ), {, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[int, column, ), {, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =]
[., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =]
[., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =]
[;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (]
[else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,]
[dataArea, ., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,]
[getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, groupCount, =]
[getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, groupCount, =]
[getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, groupCount, =]
[., getDomainAxisEdge, (, ), ), ;, int, groupCount, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, groupIndex, =]
[., getDomainAxisEdge, (, ), ), ;, int, groupCount, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, groupIndex, =]
[., getDomainAxisEdge, (, ), ), ;, int, groupCount, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, groupIndex, =]
[int, groupCount, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, groupIndex, =, this, ., seriesToGroupMap, ., getGroupIndex, (]
[int, groupCount, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, groupIndex, =, this, ., seriesToGroupMap, ., getGroupIndex, (]
[int, groupCount, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, groupIndex, =, this, ., seriesToGroupMap, ., getGroupIndex, (]
[., getGroupCount, (, ), ;, int, groupIndex, =, this, ., seriesToGroupMap, ., getGroupIndex, (, this, ., seriesToGroupMap, ., getGroup, (]
[., getGroupCount, (, ), ;, int, groupIndex, =, this, ., seriesToGroupMap, ., getGroupIndex, (, this, ., seriesToGroupMap, ., getGroup, (]
[., getGroupCount, (, ), ;, int, groupIndex, =, this, ., seriesToGroupMap, ., getGroupIndex, (, this, ., seriesToGroupMap, ., getGroup, (]
[;, int, groupIndex, =, this, ., seriesToGroupMap, ., getGroupIndex, (, this, ., seriesToGroupMap, ., getGroup, (, plot, ., getDataset, (]
[;, int, groupIndex, =, this, ., seriesToGroupMap, ., getGroupIndex, (, this, ., seriesToGroupMap, ., getGroup, (, plot, ., getDataset, (]
[this, ., seriesToGroupMap, ., getGroupIndex, (, this, ., seriesToGroupMap, ., getGroup, (, plot, ., getDataset, (, plot, ., getIndexOf, (]
[this, ., seriesToGroupMap, ., getGroup, (, plot, ., getDataset, (, plot, ., getIndexOf, (, this, ), ), ., getRowKey, (]
[getDataset, (, plot, ., getIndexOf, (, this, ), ), ., getRowKey, (, row, ), ), ), ;, int, categoryCount, =]
[this, ), ), ., getRowKey, (, row, ), ), ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (]
[this, ), ), ., getRowKey, (, row, ), ), ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (]
[), ., getRowKey, (, row, ), ), ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, groupCount, >]
[), ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, groupCount, >, 1, ), {, double, groupGap, =]
[), ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, groupCount, >, 1, ), {, double, groupGap, =]
[), ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, groupCount, >, 1, ), {, double, groupGap, =]
[;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, groupCount, >, 1, ), {, double, groupGap, =, space, *]
[getColumnCount, (, ), ;, if, (, groupCount, >, 1, ), {, double, groupGap, =, space, *, getItemMargin, (, ), /]
[(, ), ;, if, (, groupCount, >, 1, ), {, double, groupGap, =, space, *, getItemMargin, (, ), /, (]
[(, ), ;, if, (, groupCount, >, 1, ), {, double, groupGap, =, space, *, getItemMargin, (, ), /, (]
[;, if, (, groupCount, >, 1, ), {, double, groupGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *]
[if, (, groupCount, >, 1, ), {, double, groupGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (]
[if, (, groupCount, >, 1, ), {, double, groupGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (]
[groupCount, >, 1, ), {, double, groupGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (, groupCount, -]
[=, space, *, getItemMargin, (, ), /, (, categoryCount, *, (, groupCount, -, 1, ), ), ;, double, groupW, =]
[*, getItemMargin, (, ), /, (, categoryCount, *, (, groupCount, -, 1, ), ), ;, double, groupW, =, calculateSeriesWidth, (]
[(, ), /, (, categoryCount, *, (, groupCount, -, 1, ), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,]
[/, (, categoryCount, *, (, groupCount, -, 1, ), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,]
[categoryCount, *, (, groupCount, -, 1, ), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,]
[groupCount, -, 1, ), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;]
[1, ), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =]
[1, ), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =]
[1, ), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =]
[1, ), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =]
[), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +]
[), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +]
[double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +, groupIndex, *]
[groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +, groupIndex, *, (]
[groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +, groupIndex, *, (]
[calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +, groupIndex, *, (, groupW, +]
[,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +]
[domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +, (]
[domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +, (]
[categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +, (, groupW, /]
[), ;, barW0, =, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +, (, groupW, /, 2.0, ), -]
[;, barW0, =, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +, (, groupW, /, 2.0, ), -, (]
[;, barW0, =, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +, (, groupW, /, 2.0, ), -, (]
[;, barW0, =, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +, (, groupW, /, 2.0, ), -, (]
[*, (, groupW, +, groupGap, ), +, (, groupW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /]
[+, (, groupW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {]
[groupW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =]
[groupW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =]
[groupW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =]
[-, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (]
[state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,]
[), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,]
[2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return]
[,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, Number, dataValue, =]
[,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, Number, dataValue, =]
[int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, Number, dataValue, =, dataset, ., getValue, (]
[,, int, column, ,, boolean, selected, ,, int, pass, ), {, Number, dataValue, =, dataset, ., getValue, (, row, ,]
[selected, ,, int, pass, ), {, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[selected, ,, int, pass, ), {, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[int, pass, ), {, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==]
[getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =]
[getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =]
[dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, Comparable, group, =]
[dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, Comparable, group, =]
[dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, Comparable, group, =]
[;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, Comparable, group, =, this, ., seriesToGroupMap, ., getGroup, (]
[;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, Comparable, group, =, this, ., seriesToGroupMap, ., getGroup, (]
[=, dataValue, ., doubleValue, (, ), ;, Comparable, group, =, this, ., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey, (]
[Comparable, group, =, this, ., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey, (, row, ), ), ;, PlotOrientation, orientation, =]
[Comparable, group, =, this, ., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey, (, row, ), ), ;, PlotOrientation, orientation, =]
[dataset, ., getRowKey, (, row, ), ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =]
[getRowKey, (, row, ), ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (]
[row, ), ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,]
[), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,]
[PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,]
[=, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,]
[., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,]
[(, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, row, ,]
[calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, row, ,, column, ), ;, double, positiveBase, =]
[,, dataArea, ,, domainAxis, ,, state, ,, row, ,, column, ), ;, double, positiveBase, =, 0.0, ;, double, negativeBase, =]
[row, ,, column, ), ;, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =]
[column, ), ;, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;]
[column, ), ;, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;]
[;, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <]
[positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <, row, ;]
[positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <, row, ;]
[=, 0.0, ;, for, (, int, i, =, 0, ;, i, <, row, ;, i, ++, ), {, if, (]
[=, 0.0, ;, for, (, int, i, =, 0, ;, i, <, row, ;, i, ++, ), {, if, (]
[(, int, i, =, 0, ;, i, <, row, ;, i, ++, ), {, if, (, group, ., equals, (]
[(, int, i, =, 0, ;, i, <, row, ;, i, ++, ), {, if, (, group, ., equals, (]
[(, int, i, =, 0, ;, i, <, row, ;, i, ++, ), {, if, (, group, ., equals, (]
[i, <, row, ;, i, ++, ), {, if, (, group, ., equals, (, this, ., seriesToGroupMap, ., getGroup, (]
[i, <, row, ;, i, ++, ), {, if, (, group, ., equals, (, this, ., seriesToGroupMap, ., getGroup, (]
[i, ++, ), {, if, (, group, ., equals, (, this, ., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey, (]
[(, this, ., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey, (, i, ), ), ), ), {, Number, v, =]
[(, this, ., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey, (, i, ), ), ), ), {, Number, v, =]
[., getGroup, (, dataset, ., getRowKey, (, i, ), ), ), ), {, Number, v, =, dataset, ., getValue, (]
[(, dataset, ., getRowKey, (, i, ), ), ), ), {, Number, v, =, dataset, ., getValue, (, i, ,]
[i, ), ), ), ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (]
[i, ), ), ), ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (]
[), ), ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v, !=]
[=, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v, !=, null, ), {, double, d, =]
[=, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v, !=, null, ), {, double, d, =]
[), ;, if, (, v, !=, null, ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (]
[), ;, if, (, v, !=, null, ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (]
[if, (, v, !=, null, ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, d, >]
[!=, null, ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, d, >, 0, ), {]
[), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, d, >, 0, ), {, positiveBase, =]
[), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, d, >, 0, ), {, positiveBase, =]
[double, d, =, v, ., doubleValue, (, ), ;, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +]
[doubleValue, (, ), ;, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {]
[), ;, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =]
[), ;, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =]
[if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =, negativeBase, +]
[{, negativeBase, =, negativeBase, +, d, ;, }, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =]
[negativeBase, =, negativeBase, +, d, ;, }, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (]
[negativeBase, =, negativeBase, +, d, ;, }, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (]
[negativeBase, +, d, ;, }, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value, >]
[}, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value, >, 0.0, ), ;, boolean, inverted, =]
[}, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value, >, 0.0, ), ;, boolean, inverted, =]
[(, value, >, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (]
[(, value, >, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (]
[>, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[>, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&]
[), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||]
[), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||]
[;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !]
[barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {]
[PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =]
[PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =]
[positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {]
[inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&]
[RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !]
[}, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||]
[}, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||]
[else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !]
[barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&]
[., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =]
[positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {]
[!, inverted, ||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =]
[!, inverted, ||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =]
[barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =]
[barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =]
[{, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (]
[{, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (]
[=, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, value, >]
[TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, ), {]
[}, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, ), {, translatedBase, =]
[}, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, ), {, translatedBase, =]
[=, plot, ., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (]
[., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,]
[(, ), ;, if, (, value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,]
[if, (, value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;]
[value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =]
[value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =]
[{, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (]
[{, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (]
[=, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +]
[., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,]
[(, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,]
[), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {]
[translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =]
[translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =]
[valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (]
[positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,]
[value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,]
[,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;]
[), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =]
[), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =]
[{, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (]
[{, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (]
[=, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +]
[., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,]
[(, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,]
[;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =]
[;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =]
[., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, ., min, (]
[(, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,]
[,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =]
[,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =]
[}, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max, (]
[}, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max, (]
[Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (]
[Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (]
[min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (, translatedValue, -]
[,, translatedValue, ), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (, translatedValue, -, translatedBase, ), ,]
[., max, (, Math, ., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =]
[., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (]
[., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (]
[(, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==]
[(, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==]
[,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[(, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =]
[bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (]
[null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,]
[if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,]
[Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,, state, ., getBarWidth, (, ), ), ;, }, else, {]
[Double, (, barL0, ,, barW0, ,, barLength, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =]
[,, barLength, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (]
[,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,]
[., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,]
[., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,]
[}, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,, state, ., getBarWidth, (, ), ,]
[=, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }]
[=, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }]
[barW0, ,, barL0, ,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }, getBarPainter, (, ), ., paintBar, (]
[barL0, ,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,]
[state, ., getBarWidth, (, ), ,, barLength, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,]
[getBarWidth, (, ), ,, barLength, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,]
[), ,, barLength, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,]
[barLength, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,]
[;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,]
[paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =]
[g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (]
[this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,]
[row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,]
[,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=]
[), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&]
[CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (]
[=, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,]
[(, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,]
[,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {]
[), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (]
[if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,]
[generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,]
[null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,]
[isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,]
[row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,]
[column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,]
[selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[{, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (]
[{, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (]
[(, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, EntityCollection, entities, =]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, EntityCollection, entities, =]
[,, (, value, <, 0.0, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[,, (, value, <, 0.0, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[value, <, 0.0, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=]
[), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[=, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[(, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,]
[,, row, ,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, row, ,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, GroupedStackedBarRenderer, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, GroupedStackedBarRenderer, ), ), {, return, false, ;, }, GroupedStackedBarRenderer, that, =]
[if, (, !, (, obj, instanceof, GroupedStackedBarRenderer, ), ), {, return, false, ;, }, GroupedStackedBarRenderer, that, =, (, GroupedStackedBarRenderer, )]
[obj, instanceof, GroupedStackedBarRenderer, ), ), {, return, false, ;, }, GroupedStackedBarRenderer, that, =, (, GroupedStackedBarRenderer, ), obj, ;, if, (]
[instanceof, GroupedStackedBarRenderer, ), ), {, return, false, ;, }, GroupedStackedBarRenderer, that, =, (, GroupedStackedBarRenderer, ), obj, ;, if, (, !]
[instanceof, GroupedStackedBarRenderer, ), ), {, return, false, ;, }, GroupedStackedBarRenderer, that, =, (, GroupedStackedBarRenderer, ), obj, ;, if, (, !]
[instanceof, GroupedStackedBarRenderer, ), ), {, return, false, ;, }, GroupedStackedBarRenderer, that, =, (, GroupedStackedBarRenderer, ), obj, ;, if, (, !]
[false, ;, }, GroupedStackedBarRenderer, that, =, (, GroupedStackedBarRenderer, ), obj, ;, if, (, !, this, ., seriesToGroupMap, ., equals, (]
[false, ;, }, GroupedStackedBarRenderer, that, =, (, GroupedStackedBarRenderer, ), obj, ;, if, (, !, this, ., seriesToGroupMap, ., equals, (]
[GroupedStackedBarRenderer, ), obj, ;, if, (, !, this, ., seriesToGroupMap, ., equals, (, that, ., seriesToGroupMap, ), ), {, return]
[if, (, !, this, ., seriesToGroupMap, ., equals, (, that, ., seriesToGroupMap, ), ), {, return, false, ;, }, return]
[if, (, !, this, ., seriesToGroupMap, ., equals, (, that, ., seriesToGroupMap, ), ), {, return, false, ;, }, return]
[., seriesToGroupMap, ., equals, (, that, ., seriesToGroupMap, ), ), {, return, false, ;, }, return, super, ., equals, (]
