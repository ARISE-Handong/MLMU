[;, private, boolean, renderAsPercentages, ;, public, StackedXYBarRenderer, (, ), {, this, (, 0.0, ), ;, }, public, StackedXYBarRenderer, (, double]
[;, private, boolean, renderAsPercentages, ;, public, StackedXYBarRenderer, (, ), {, this, (, 0.0, ), ;, }, public, StackedXYBarRenderer, (, double]
[), ;, }, public, StackedXYBarRenderer, (, double, margin, ), {, super, (, margin, ), ;, this, ., renderAsPercentages, =, false]
[), ;, this, ., renderAsPercentages, =, false, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, .]
[=, false, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (]
[., renderAsPercentages, =, false, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;]
[;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, )]
[;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, )]
[,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, )]
[., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (]
[), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null]
[., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback]
[;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages]
[), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean]
[;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return, this]
[), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return]
[;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public]
[), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }]
[;, }, public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages]
[), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean]
[;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {, this, ., renderAsPercentages, =, asPercentages, ;, fireChangeEvent, (, ), ;]
[., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {, this, ., renderAsPercentages, =, asPercentages, ;, fireChangeEvent, (]
[=, asPercentages, ;, fireChangeEvent, (, ), ;, }, public, int, getPassCount, (, ), {, return, 3, ;, }, public, XYItemRendererState]
[., renderAsPercentages, =, asPercentages, ;, fireChangeEvent, (, ), ;, }, public, int, getPassCount, (, ), {, return, 3, ;, }]
[;, fireChangeEvent, (, ), ;, }, public, int, getPassCount, (, ), {, return, 3, ;, }, public, XYItemRendererState, initialise, (]
[;, }, public, int, getPassCount, (, ), {, return, 3, ;, }, public, XYItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D]
[;, }, public, XYItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, XYDataset, data, ,, PlotRenderingInfo, info]
[;, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, if, (, this]
[), ;, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, if, (]
[), {, if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else]
[!=, null, ), {, if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;]
[), {, if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else]
[), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, (]
[., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds]
[;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, (, TableXYDataset, ), dataset, ), ;, }, }, else, {, return]
[,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, (, TableXYDataset, ), dataset, ), ;, }, }]
[), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, (, TableXYDataset, ), dataset, ), ;, }, }, else, {]
[;, }, }, else, {, return, null, ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,]
[., findStackedRangeBounds, (, (, TableXYDataset, ), dataset, ), ;, }, }, else, {, return, null, ;, }, }, public, void]
[), ;, }, }, else, {, return, null, ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state]
[), ;, }, }, else, {, return, null, ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state]
[;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, ValueAxis]
[), {, String, message, =, "dataset (type ", +, dataset, ., getClass, (, ), ., getName, (, ), +, ") has wrong type:", ;, boolean]
[), {, String, message, =, "dataset (type ", +, dataset, ., getClass, (, ), ., getName, (, ), +, ") has wrong type:", ;, boolean]
[), ), {, String, message, =, "dataset (type ", +, dataset, ., getClass, (, ), ., getName, (, ), +, ") has wrong type:", ;]
[&&, dataset, instanceof, TableXYDataset, ), ), {, String, message, =, "dataset (type ", +, dataset, ., getClass, (, ), ., getName, (]
[instanceof, IntervalXYDataset, &&, dataset, instanceof, TableXYDataset, ), ), {, String, message, =, "dataset (type ", +, dataset, ., getClass, (, ), .]
[), ), {, String, message, =, "dataset (type ", +, dataset, ., getClass, (, ), ., getName, (, ), +, ") has wrong type:", ;]
[instanceof, TableXYDataset, ), ), {, String, message, =, "dataset (type ", +, dataset, ., getClass, (, ), ., getName, (, ), +]
[;, boolean, and, =, false, ;, if, (, !, IntervalXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass, (, )]
[+, ") has wrong type:", ;, boolean, and, =, false, ;, if, (, !, IntervalXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass]
[+, dataset, ., getClass, (, ), ., getName, (, ), +, ") has wrong type:", ;, boolean, and, =, false, ;, if, (]
[+, ") has wrong type:", ;, boolean, and, =, false, ;, if, (, !, IntervalXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass]
[., getName, (, ), +, ") has wrong type:", ;, boolean, and, =, false, ;, if, (, !, IntervalXYDataset, ., class, ., isAssignableFrom]
[., getClass, (, ), ., getName, (, ), +, ") has wrong type:", ;, boolean, and, =, false, ;, if, (, !, IntervalXYDataset]
[;, boolean, and, =, false, ;, if, (, !, IntervalXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass, (, )]
[;, if, (, !, IntervalXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass, (, ), ), ), {, message, +=]
[), {, message, +=, " it is no IntervalXYDataset", ;, and, =, true, ;, }, if, (, !, TableXYDataset, ., class, ., isAssignableFrom, (]
[), {, message, +=, " it is no IntervalXYDataset", ;, and, =, true, ;, }, if, (, !, TableXYDataset, ., class, ., isAssignableFrom, (]
[., isAssignableFrom, (, dataset, ., getClass, (, ), ), ), {, message, +=, " it is no IntervalXYDataset", ;, and, =, true, ;, }]
[), ), {, message, +=, " it is no IntervalXYDataset", ;, and, =, true, ;, }, if, (, !, TableXYDataset, ., class, ., isAssignableFrom]
[., getClass, (, ), ), ), {, message, +=, " it is no IntervalXYDataset", ;, and, =, true, ;, }, if, (, !, TableXYDataset]
[+=, " it is no IntervalXYDataset", ;, and, =, true, ;, }, if, (, !, TableXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass]
[;, and, =, true, ;, }, if, (, !, TableXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass, (, )]
[=, true, ;, }, if, (, !, TableXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass, (, ), ), )]
[;, }, if, (, !, TableXYDataset, ., class, ., isAssignableFrom, (, dataset, ., getClass, (, ), ), ), {, if]
[), {, if, (, and, ), {, message, +=, " and", ;, }, message, +=, " it is no TableXYDataset", ;, }, throw, new, IllegalArgumentException]
[), {, if, (, and, ), {, message, +=, " and", ;, }, message, +=, " it is no TableXYDataset", ;, }, throw, new, IllegalArgumentException]
[., isAssignableFrom, (, dataset, ., getClass, (, ), ), ), {, if, (, and, ), {, message, +=, " and", ;]
[), ), {, if, (, and, ), {, message, +=, " and", ;, }, message, +=, " it is no TableXYDataset", ;, }, throw, new]
[., getClass, (, ), ), ), {, if, (, and, ), {, message, +=, " and", ;, }, message, +=, " it is no TableXYDataset"]
[), {, message, +=, " and", ;, }, message, +=, " it is no TableXYDataset", ;, }, throw, new, IllegalArgumentException, (, message, ), ;, }]
[+=, " and", ;, }, message, +=, " it is no TableXYDataset", ;, }, throw, new, IllegalArgumentException, (, message, ), ;, }, IntervalXYDataset, intervalDataset, =]
[;, }, message, +=, " it is no TableXYDataset", ;, }, throw, new, IllegalArgumentException, (, message, ), ;, }, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset]
[+=, " it is no TableXYDataset", ;, }, throw, new, IllegalArgumentException, (, message, ), ;, }, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset, ;]
[;, }, throw, new, IllegalArgumentException, (, message, ), ;, }, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset, ;, double, value]
[;, }, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset, ;, double, value, =, intervalDataset, ., getYValue, (, series, ,, item]
[), ;, }, IntervalXYDataset, intervalDataset, =, (, IntervalXYDataset, ), dataset, ;, double, value, =, intervalDataset, ., getYValue, (, series, ,]
[;, double, value, =, intervalDataset, ., getYValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (, value]
[;, double, value, =, intervalDataset, ., getYValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (, value]
[;, if, (, Double, ., isNaN, (, value, ), ), {, return, ;, }, double, total, =, 0.0, ;, if]
[., getYValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (, value, ), ), {, return, ;]
[,, item, ), ;, if, (, Double, ., isNaN, (, value, ), ), {, return, ;, }, double, total, =]
[), ;, if, (, Double, ., isNaN, (, value, ), ), {, return, ;, }, double, total, =, 0.0, ;]
[), {, return, ;, }, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =, DatasetUtilities]
[., isNaN, (, value, ), ), {, return, ;, }, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages]
[), ), {, return, ;, }, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =]
[;, if, (, this, ., renderAsPercentages, ), {, total, =, DatasetUtilities, ., calculateStackTotal, (, (, TableXYDataset, ), dataset, ,, item]
[), {, total, =, DatasetUtilities, ., calculateStackTotal, (, (, TableXYDataset, ), dataset, ,, item, ), ;, value, =, value, /]
[., renderAsPercentages, ), {, total, =, DatasetUtilities, ., calculateStackTotal, (, (, TableXYDataset, ), dataset, ,, item, ), ;, value, =]
[=, DatasetUtilities, ., calculateStackTotal, (, (, TableXYDataset, ), dataset, ,, item, ), ;, value, =, value, /, total, ;, }]
[;, value, =, value, /, total, ;, }, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (]
[., calculateStackTotal, (, (, TableXYDataset, ), dataset, ,, item, ), ;, value, =, value, /, total, ;, }, double, positiveBase]
[,, item, ), ;, value, =, value, /, total, ;, }, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0]
[,, item, ), ;, value, =, value, /, total, ;, }, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0]
[), ;, value, =, value, /, total, ;, }, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for]
[=, value, /, total, ;, }, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i]
[;, }, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;, i]
[/, total, ;, }, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0]
[;, }, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;, i]
[;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, )]
[;, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, double, v, =, dataset]
[;, i, <, series, ;, i, ++, ), {, double, v, =, dataset, ., getYValue, (, i, ,, item, )]
[;, i, ++, ), {, double, v, =, dataset, ., getYValue, (, i, ,, item, ), ;, if, (, !]
[<, series, ;, i, ++, ), {, double, v, =, dataset, ., getYValue, (, i, ,, item, ), ;, if]
[;, i, ++, ), {, double, v, =, dataset, ., getYValue, (, i, ,, item, ), ;, if, (, !]
[), {, double, v, =, dataset, ., getYValue, (, i, ,, item, ), ;, if, (, !, Double, ., isNaN]
[++, ), {, double, v, =, dataset, ., getYValue, (, i, ,, item, ), ;, if, (, !, Double, .]
[;, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, this, ., renderAsPercentages, ), {, v]
[., getYValue, (, i, ,, item, ), ;, if, (, !, Double, ., isNaN, (, v, ), ), {, if]
[,, item, ), ;, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, this, ., renderAsPercentages]
[), ;, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, this, ., renderAsPercentages, ), {]
[), {, if, (, this, ., renderAsPercentages, ), {, v, =, v, /, total, ;, }, if, (, v, >]
[), {, if, (, this, ., renderAsPercentages, ), {, v, =, v, /, total, ;, }, if, (, v, >]
[., isNaN, (, v, ), ), {, if, (, this, ., renderAsPercentages, ), {, v, =, v, /, total, ;]
[), ), {, if, (, this, ., renderAsPercentages, ), {, v, =, v, /, total, ;, }, if, (, v]
[), {, v, =, v, /, total, ;, }, if, (, v, >, 0, ), {, positiveBase, =, positiveBase, +]
[., renderAsPercentages, ), {, v, =, v, /, total, ;, }, if, (, v, >, 0, ), {, positiveBase, =]
[=, v, /, total, ;, }, if, (, v, >, 0, ), {, positiveBase, =, positiveBase, +, v, ;, }]
[;, }, if, (, v, >, 0, ), {, positiveBase, =, positiveBase, +, v, ;, }, else, {, negativeBase, =]
[/, total, ;, }, if, (, v, >, 0, ), {, positiveBase, =, positiveBase, +, v, ;, }, else, {]
[;, }, if, (, v, >, 0, ), {, positiveBase, =, positiveBase, +, v, ;, }, else, {, negativeBase, =]
[), {, positiveBase, =, positiveBase, +, v, ;, }, else, {, negativeBase, =, negativeBase, +, v, ;, }, }, }]
[>, 0, ), {, positiveBase, =, positiveBase, +, v, ;, }, else, {, negativeBase, =, negativeBase, +, v, ;, }]
[), {, positiveBase, =, positiveBase, +, v, ;, }, else, {, negativeBase, =, negativeBase, +, v, ;, }, }, }]
[=, positiveBase, +, v, ;, }, else, {, negativeBase, =, negativeBase, +, v, ;, }, }, }, double, translatedBase, ;]
[;, }, else, {, negativeBase, =, negativeBase, +, v, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, RectangleEdge]
[+, v, ;, }, else, {, negativeBase, =, negativeBase, +, v, ;, }, }, }, double, translatedBase, ;, double, translatedValue]
[;, }, else, {, negativeBase, =, negativeBase, +, v, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, RectangleEdge]
[=, negativeBase, +, v, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, RectangleEdge, edgeR, =, plot, ., getRangeAxisEdge]
[;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, RectangleEdge, edgeR, =, plot, ., getRangeAxisEdge, (, ), ;, if]
[+, v, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, RectangleEdge, edgeR, =, plot, ., getRangeAxisEdge, (, )]
[;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, RectangleEdge, edgeR, =, plot, ., getRangeAxisEdge, (, ), ;, if]
[;, if, (, value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, edgeR, )]
[., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,]
[), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D]
[>, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis]
[), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D]
[=, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +]
[;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, else, {, translatedBase]
[., valueToJava2D, (, positiveBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,]
[,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, edgeR, )]
[,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, edgeR, ), ;, }]
[), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, else, {]
[=, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, else, {, translatedBase, =, rangeAxis]
[;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis]
[., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D]
[,, dataArea, ,, edgeR, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR]
[+, value, ,, dataArea, ,, edgeR, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea]
[,, dataArea, ,, edgeR, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR]
[,, edgeR, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR, ), ;]
[), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =]
[=, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +]
[;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, RectangleEdge, edgeD, =]
[., valueToJava2D, (, negativeBase, ,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,]
[,, dataArea, ,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, edgeR, )]
[,, edgeR, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, edgeR, ), ;, }]
[), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, RectangleEdge, edgeD]
[=, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, RectangleEdge, edgeD, =, plot, .]
[;, }, RectangleEdge, edgeD, =, plot, ., getDomainAxisEdge, (, ), ;, double, startX, =, intervalDataset, ., getStartXValue, (, series, ,]
[., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, edgeR, ), ;, }, RectangleEdge, edgeD, =, plot, ., getDomainAxisEdge, (]
[,, dataArea, ,, edgeR, ), ;, }, RectangleEdge, edgeD, =, plot, ., getDomainAxisEdge, (, ), ;, double, startX, =, intervalDataset]
[+, value, ,, dataArea, ,, edgeR, ), ;, }, RectangleEdge, edgeD, =, plot, ., getDomainAxisEdge, (, ), ;, double, startX]
[,, dataArea, ,, edgeR, ), ;, }, RectangleEdge, edgeD, =, plot, ., getDomainAxisEdge, (, ), ;, double, startX, =, intervalDataset]
[,, edgeR, ), ;, }, RectangleEdge, edgeD, =, plot, ., getDomainAxisEdge, (, ), ;, double, startX, =, intervalDataset, ., getStartXValue]
[), ;, }, RectangleEdge, edgeD, =, plot, ., getDomainAxisEdge, (, ), ;, double, startX, =, intervalDataset, ., getStartXValue, (, series]
[;, double, startX, =, intervalDataset, ., getStartXValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (, startX]
[., getDomainAxisEdge, (, ), ;, double, startX, =, intervalDataset, ., getStartXValue, (, series, ,, item, ), ;, if, (, Double]
[;, if, (, Double, ., isNaN, (, startX, ), ), {, return, ;, }, double, translatedStartX, =, domainAxis, ., valueToJava2D]
[., getStartXValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (, startX, ), ), {, return, ;]
[,, item, ), ;, if, (, Double, ., isNaN, (, startX, ), ), {, return, ;, }, double, translatedStartX, =]
[), ;, if, (, Double, ., isNaN, (, startX, ), ), {, return, ;, }, double, translatedStartX, =, domainAxis, .]
[), {, return, ;, }, double, translatedStartX, =, domainAxis, ., valueToJava2D, (, startX, ,, dataArea, ,, edgeD, ), ;, double]
[., isNaN, (, startX, ), ), {, return, ;, }, double, translatedStartX, =, domainAxis, ., valueToJava2D, (, startX, ,, dataArea]
[), ), {, return, ;, }, double, translatedStartX, =, domainAxis, ., valueToJava2D, (, startX, ,, dataArea, ,, edgeD, ), ;]
[;, double, endX, =, intervalDataset, ., getEndXValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (, endX]
[., valueToJava2D, (, startX, ,, dataArea, ,, edgeD, ), ;, double, endX, =, intervalDataset, ., getEndXValue, (, series, ,, item]
[,, dataArea, ,, edgeD, ), ;, double, endX, =, intervalDataset, ., getEndXValue, (, series, ,, item, ), ;, if, (]
[,, edgeD, ), ;, double, endX, =, intervalDataset, ., getEndXValue, (, series, ,, item, ), ;, if, (, Double, .]
[), ;, double, endX, =, intervalDataset, ., getEndXValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (]
[;, if, (, Double, ., isNaN, (, endX, ), ), {, return, ;, }, double, translatedEndX, =, domainAxis, ., valueToJava2D]
[., getEndXValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (, endX, ), ), {, return, ;]
[,, item, ), ;, if, (, Double, ., isNaN, (, endX, ), ), {, return, ;, }, double, translatedEndX, =]
[), ;, if, (, Double, ., isNaN, (, endX, ), ), {, return, ;, }, double, translatedEndX, =, domainAxis, .]
[), {, return, ;, }, double, translatedEndX, =, domainAxis, ., valueToJava2D, (, endX, ,, dataArea, ,, edgeD, ), ;, double]
[., isNaN, (, endX, ), ), {, return, ;, }, double, translatedEndX, =, domainAxis, ., valueToJava2D, (, endX, ,, dataArea]
[), ), {, return, ;, }, double, translatedEndX, =, domainAxis, ., valueToJava2D, (, endX, ,, dataArea, ,, edgeD, ), ;]
[;, double, translatedWidth, =, Math, ., max, (, 1, ,, Math, ., abs, (, translatedEndX, -, translatedStartX, ), ), ;]
[., valueToJava2D, (, endX, ,, dataArea, ,, edgeD, ), ;, double, translatedWidth, =, Math, ., max, (, 1, ,, Math]
[,, dataArea, ,, edgeD, ), ;, double, translatedWidth, =, Math, ., max, (, 1, ,, Math, ., abs, (, translatedEndX]
[,, edgeD, ), ;, double, translatedWidth, =, Math, ., max, (, 1, ,, Math, ., abs, (, translatedEndX, -, translatedStartX]
[), ;, double, translatedWidth, =, Math, ., max, (, 1, ,, Math, ., abs, (, translatedEndX, -, translatedStartX, ), )]
[;, double, translatedHeight, =, Math, ., abs, (, translatedValue, -, translatedBase, ), ;, if, (, getMargin, (, ), >, 0.0]
[., max, (, 1, ,, Math, ., abs, (, translatedEndX, -, translatedStartX, ), ), ;, double, translatedHeight, =, Math, .]
[,, Math, ., abs, (, translatedEndX, -, translatedStartX, ), ), ;, double, translatedHeight, =, Math, ., abs, (, translatedValue, -]
[), ;, double, translatedHeight, =, Math, ., abs, (, translatedValue, -, translatedBase, ), ;, if, (, getMargin, (, ), >]
[., abs, (, translatedEndX, -, translatedStartX, ), ), ;, double, translatedHeight, =, Math, ., abs, (, translatedValue, -, translatedBase, )]
[), ), ;, double, translatedHeight, =, Math, ., abs, (, translatedValue, -, translatedBase, ), ;, if, (, getMargin, (, )]
[-, translatedStartX, ), ), ;, double, translatedHeight, =, Math, ., abs, (, translatedValue, -, translatedBase, ), ;, if, (, getMargin]
[), ), ;, double, translatedHeight, =, Math, ., abs, (, translatedValue, -, translatedBase, ), ;, if, (, getMargin, (, )]
[;, if, (, getMargin, (, ), >, 0.0, ), {, double, cut, =, translatedWidth, *, getMargin, (, ), ;, translatedWidth]
[., abs, (, translatedValue, -, translatedBase, ), ;, if, (, getMargin, (, ), >, 0.0, ), {, double, cut, =]
[), ;, if, (, getMargin, (, ), >, 0.0, ), {, double, cut, =, translatedWidth, *, getMargin, (, ), ;]
[-, translatedBase, ), ;, if, (, getMargin, (, ), >, 0.0, ), {, double, cut, =, translatedWidth, *, getMargin, (]
[), ;, if, (, getMargin, (, ), >, 0.0, ), {, double, cut, =, translatedWidth, *, getMargin, (, ), ;]
[), {, double, cut, =, translatedWidth, *, getMargin, (, ), ;, translatedWidth, =, translatedWidth, -, cut, ;, translatedStartX, =, translatedStartX]
[>, 0.0, ), {, double, cut, =, translatedWidth, *, getMargin, (, ), ;, translatedWidth, =, translatedWidth, -, cut, ;, translatedStartX]
[), {, double, cut, =, translatedWidth, *, getMargin, (, ), ;, translatedWidth, =, translatedWidth, -, cut, ;, translatedStartX, =, translatedStartX]
[;, translatedWidth, =, translatedWidth, -, cut, ;, translatedStartX, =, translatedStartX, +, cut, /, 2, ;, }, Rectangle2D, bar, =, null]
[*, getMargin, (, ), ;, translatedWidth, =, translatedWidth, -, cut, ;, translatedStartX, =, translatedStartX, +, cut, /, 2, ;, }]
[;, translatedWidth, =, translatedWidth, -, cut, ;, translatedStartX, =, translatedStartX, +, cut, /, 2, ;, }, Rectangle2D, bar, =, null]
[=, translatedWidth, -, cut, ;, translatedStartX, =, translatedStartX, +, cut, /, 2, ;, }, Rectangle2D, bar, =, null, ;, PlotOrientation]
[;, translatedStartX, =, translatedStartX, +, cut, /, 2, ;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =, plot, .]
[-, cut, ;, translatedStartX, =, translatedStartX, +, cut, /, 2, ;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =]
[;, translatedStartX, =, translatedStartX, +, cut, /, 2, ;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =, plot, .]
[=, translatedStartX, +, cut, /, 2, ;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (]
[;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[+, cut, /, 2, ;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;]
[;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[/, 2, ;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[;, }, Rectangle2D, bar, =, null, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, Math, ., min]
[., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double]
[), {, bar, =, new, Rectangle2D, ., Double, (, Math, ., min, (, translatedBase, ,, translatedValue, ), ,, translatedEndX, ,]
[==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, Math, ., min, (, translatedBase, ,, translatedValue]
[), {, bar, =, new, Rectangle2D, ., Double, (, Math, ., min, (, translatedBase, ,, translatedValue, ), ,, translatedEndX, ,]
[., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, Math, ., min, (, translatedBase, ,, translatedValue, ), ,]
[=, new, Rectangle2D, ., Double, (, Math, ., min, (, translatedBase, ,, translatedValue, ), ,, translatedEndX, ,, translatedHeight, ,, translatedWidth]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, bar, =, new, Rectangle2D, ., Double, (, translatedStartX]
[,, translatedEndX, ,, translatedHeight, ,, translatedWidth, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, bar]
[., min, (, translatedBase, ,, translatedValue, ), ,, translatedEndX, ,, translatedHeight, ,, translatedWidth, ), ;, }, else, if, (, orientation]
[,, translatedValue, ), ,, translatedEndX, ,, translatedHeight, ,, translatedWidth, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL]
[), ,, translatedEndX, ,, translatedHeight, ,, translatedWidth, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[,, translatedHeight, ,, translatedWidth, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, bar, =, new]
[,, translatedWidth, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, bar, =, new, Rectangle2D, .]
[), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, bar, =, new, Rectangle2D, ., Double, (]
[), {, bar, =, new, Rectangle2D, ., Double, (, translatedStartX, ,, Math, ., min, (, translatedBase, ,, translatedValue, ), ,]
[==, PlotOrientation, ., VERTICAL, ), {, bar, =, new, Rectangle2D, ., Double, (, translatedStartX, ,, Math, ., min, (, translatedBase]
[), {, bar, =, new, Rectangle2D, ., Double, (, translatedStartX, ,, Math, ., min, (, translatedBase, ,, translatedValue, ), ,]
[., VERTICAL, ), {, bar, =, new, Rectangle2D, ., Double, (, translatedStartX, ,, Math, ., min, (, translatedBase, ,, translatedValue]
[=, new, Rectangle2D, ., Double, (, translatedStartX, ,, Math, ., min, (, translatedBase, ,, translatedValue, ), ,, translatedWidth, ,, translatedHeight]
[;, }, boolean, positive, =, (, value, >, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;]
[,, Math, ., min, (, translatedBase, ,, translatedValue, ), ,, translatedWidth, ,, translatedHeight, ), ;, }, boolean, positive, =, (]
[,, translatedWidth, ,, translatedHeight, ), ;, }, boolean, positive, =, (, value, >, 0.0, ), ;, boolean, inverted, =, rangeAxis]
[., min, (, translatedBase, ,, translatedValue, ), ,, translatedWidth, ,, translatedHeight, ), ;, }, boolean, positive, =, (, value, >]
[,, translatedValue, ), ,, translatedWidth, ,, translatedHeight, ), ;, }, boolean, positive, =, (, value, >, 0.0, ), ;, boolean]
[), ,, translatedWidth, ,, translatedHeight, ), ;, }, boolean, positive, =, (, value, >, 0.0, ), ;, boolean, inverted, =]
[,, translatedHeight, ), ;, }, boolean, positive, =, (, value, >, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted]
[), ;, }, boolean, positive, =, (, value, >, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, )]
[;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, .]
[>, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, .]
[;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !]
[., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive]
[), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT]
[==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase]
[), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT]
[., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge]
[&&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase]
[||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[&&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;]
[&&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted]
[., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&]
[=, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =]
[., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {]
[), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if]
[||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, .]
[&&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase]
[||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, .]
[||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, .]
[), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if]
[&&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }]
[&&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }]
[), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if]
[=, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if, (, pass, ==]
[;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if, (, pass, ==, 0, ), {, if]
[., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, if, (, pass, ==, 0, )]
[=, RectangleEdge, ., TOP, ;, }, }, if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), )]
[;, }, }, if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, getBarPainter, (, )]
[., TOP, ;, }, }, if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, getBarPainter]
[), {, if, (, getShadowsVisible, (, ), ), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, series]
[==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this]
[), {, if, (, getShadowsVisible, (, ), ), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, series]
[), {, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,]
[;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this]
[., paintBarShadow, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ,, false, ), ;]
[,, this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ,, false, ), ;, }, }, else, if]
[,, series, ,, item, ,, selected, ,, bar, ,, barBase, ,, false, ), ;, }, }, else, if, (, pass]
[,, item, ,, selected, ,, bar, ,, barBase, ,, false, ), ;, }, }, else, if, (, pass, ==, 1]
[,, selected, ,, bar, ,, barBase, ,, false, ), ;, }, }, else, if, (, pass, ==, 1, ), {]
[,, bar, ,, barBase, ,, false, ), ;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (]
[,, barBase, ,, false, ), ;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), .]
[,, false, ), ;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (]
[), ;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,]
[), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,]
[==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, series, ,, item, ,, selected, ,]
[), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,]
[;, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =, state, ., getInfo, (, )]
[., paintBar, (, g2, ,, this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ), ;, if, (]
[,, this, ,, series, ,, item, ,, selected, ,, bar, ,, barBase, ), ;, if, (, state, ., getInfo, (]
[,, series, ,, item, ,, selected, ,, bar, ,, barBase, ), ;, if, (, state, ., getInfo, (, ), !=]
[,, item, ,, selected, ,, bar, ,, barBase, ), ;, if, (, state, ., getInfo, (, ), !=, null, )]
[,, selected, ,, bar, ,, barBase, ), ;, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection]
[,, bar, ,, barBase, ), ;, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =]
[,, barBase, ), ;, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =, state, .]
[), ;, if, (, state, ., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =, state, ., getInfo, (]
[), {, EntityCollection, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if]
[!=, null, ), {, EntityCollection, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, )]
[., getInfo, (, ), !=, null, ), {, EntityCollection, entities, =, state, ., getInfo, (, ), ., getOwner, (, )]
[), {, EntityCollection, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,, item, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,, item, ,, selected, ,, bar, ., getCenterX, (]
[!=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,, item, ,, selected, ,, bar, .]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, series, ,, item, ,, selected, ,, bar, ., getCenterX, (]
[;, }, }, }, else, if, (, pass, ==, 2, ), {, if, (, isItemLabelVisible, (, series, ,, item, ,]
[,, bar, ,, dataset, ,, series, ,, item, ,, selected, ,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY]
[,, dataset, ,, series, ,, item, ,, selected, ,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY, (, )]
[,, series, ,, item, ,, selected, ,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY, (, ), ), ;]
[,, item, ,, selected, ,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY, (, ), ), ;, }, }]
[,, selected, ,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY, (, ), ), ;, }, }, }, else]
[,, bar, ., getCenterX, (, ), ,, bar, ., getCenterY, (, ), ), ;, }, }, }, else, if, (]
[,, bar, ., getCenterY, (, ), ), ;, }, }, }, else, if, (, pass, ==, 2, ), {, if]
[., getCenterX, (, ), ,, bar, ., getCenterY, (, ), ), ;, }, }, }, else, if, (, pass, ==]
[), ;, }, }, }, else, if, (, pass, ==, 2, ), {, if, (, isItemLabelVisible, (, series, ,, item]
[., getCenterY, (, ), ), ;, }, }, }, else, if, (, pass, ==, 2, ), {, if, (, isItemLabelVisible]
[), {, if, (, isItemLabelVisible, (, series, ,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series]
[==, 2, ), {, if, (, isItemLabelVisible, (, series, ,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator]
[), {, if, (, isItemLabelVisible, (, series, ,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series]
[), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot, ,]
[,, item, ,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;, drawItemLabelForBar]
[,, selected, ), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2]
[), ), {, XYItemLabelGenerator, generator, =, getItemLabelGenerator, (, series, ,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot]
[;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,, bar, ,, value]
[,, item, ,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,]
[,, selected, ), ;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,]
[), ;, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,, bar, ,]
[;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[,, plot, ,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,, bar, ,, value, <, 0.0, ), ;]
[,, dataset, ,, series, ,, item, ,, selected, ,, generator, ,, bar, ,, value, <, 0.0, ), ;, }, }]
[,, series, ,, item, ,, selected, ,, generator, ,, bar, ,, value, <, 0.0, ), ;, }, }, }, public]
[,, item, ,, selected, ,, generator, ,, bar, ,, value, <, 0.0, ), ;, }, }, }, public, boolean, equals]
[,, selected, ,, generator, ,, bar, ,, value, <, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object]
[,, generator, ,, bar, ,, value, <, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, )]
[,, bar, ,, value, <, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if]
[,, value, <, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj]
[), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[<, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this]
[), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, StackedXYBarRenderer, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, StackedXYBarRenderer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, StackedXYBarRenderer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, StackedXYBarRenderer, ), ), {, return, false, ;, }, StackedXYBarRenderer, that, =, (]
[), {, return, false, ;, }, StackedXYBarRenderer, that, =, (, StackedXYBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=]
[), {, return, false, ;, }, StackedXYBarRenderer, that, =, (, StackedXYBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=]
[), ), {, return, false, ;, }, StackedXYBarRenderer, that, =, (, StackedXYBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages]
[instanceof, StackedXYBarRenderer, ), ), {, return, false, ;, }, StackedXYBarRenderer, that, =, (, StackedXYBarRenderer, ), obj, ;, if, (, this]
[;, }, StackedXYBarRenderer, that, =, (, StackedXYBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, )]
[;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals]
[;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[!=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public]
[., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, result, =, result]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, result, =]
[;, result, =, result, *, 37, +, (, this, ., renderAsPercentages, ?, 1, :, 0, ), ;, return, result, ;]
[., hashCode, (, ), ;, result, =, result, *, 37, +, (, this, ., renderAsPercentages, ?, 1, :, 0, )]
[=, result, *, 37, +, (, this, ., renderAsPercentages, ?, 1, :, 0, ), ;, return, result, ;, }, }]
[;, return, result, ;, }, }]
[+, (, this, ., renderAsPercentages, ?, 1, :, 0, ), ;, return, result, ;, }, }]
[*, 37, +, (, this, ., renderAsPercentages, ?, 1, :, 0, ), ;, return, result, ;, }, }]
[+, (, this, ., renderAsPercentages, ?, 1, :, 0, ), ;, return, result, ;, }, }]
[;, return, result, ;, }, }]
[), ;, return, result, ;, }, }]
[?, 1, :, 0, ), ;, return, result, ;, }, }]
[., renderAsPercentages, ?, 1, :, 0, ), ;, return, result, ;, }, }]
[:, 0, ), ;, return, result, ;, }, }]
[), ;, return, result, ;, }, }]
[;, }, }]
