[), ;, }, protected, double, [, ], [, ], computeJacobian, (, final, double, [, ], params, ), {, return, jacobian]
[;, }, @, Override, public, PointVectorValuePair, optimize, (, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, return, super, .]
[., value, (, params, ), ;, }, @, Override, public, PointVectorValuePair, optimize, (, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,]
[), ;, }, @, Override, public, PointVectorValuePair, optimize, (, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, return, super]
[;, }, @, Override, protected, void, parseOptimizationData, (, OptimizationData, ..., optData, ), {, super, ., parseOptimizationData, (, optData, ), ;]
[., optimize, (, optData, ), ;, }, @, Override, protected, void, parseOptimizationData, (, OptimizationData, ..., optData, ), {, super, .]
[), ;, }, @, Override, protected, void, parseOptimizationData, (, OptimizationData, ..., optData, ), {, super, ., parseOptimizationData, (, optData, )]
[;, for, (, OptimizationData, data, :, optData, ), {, if, (, data, instanceof, ModelFunctionJacobian, ), {, jacobian, =, (, (]
[., parseOptimizationData, (, optData, ), ;, for, (, OptimizationData, data, :, optData, ), {, if, (, data, instanceof, ModelFunctionJacobian, )]
[), ;, for, (, OptimizationData, data, :, optData, ), {, if, (, data, instanceof, ModelFunctionJacobian, ), {, jacobian, =, (]
[), {, if, (, data, instanceof, ModelFunctionJacobian, ), {, jacobian, =, (, (, ModelFunctionJacobian, ), data, ), ., getModelFunctionJacobian, (]
[), {, jacobian, =, (, (, ModelFunctionJacobian, ), data, ), ., getModelFunctionJacobian, (, ), ;, break, ;, }, }, }]
[instanceof, ModelFunctionJacobian, ), {, jacobian, =, (, (, ModelFunctionJacobian, ), data, ), ., getModelFunctionJacobian, (, ), ;, break, ;, }]
[=, (, (, ModelFunctionJacobian, ), data, ), ., getModelFunctionJacobian, (, ), ;, break, ;, }, }, }, }]
[;, break, ;, }, }, }, }]
[., getModelFunctionJacobian, (, ), ;, break, ;, }, }, }, }]
[), ., getModelFunctionJacobian, (, ), ;, break, ;, }, }, }, }]
[), ., getModelFunctionJacobian, (, ), ;, break, ;, }, }, }, }]
