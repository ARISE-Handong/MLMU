[), ;, }, public, static, <, T, extends, Serializable, >, T, clone, (, final, T, object, ), {, if, (]
[), ;, }, public, static, <, T, extends, Serializable, >, T, clone, (, final, T, object, ), {, if, (]
[}, public, static, <, T, extends, Serializable, >, T, clone, (, final, T, object, ), {, if, (, object, ==]
[T, extends, Serializable, >, T, clone, (, final, T, object, ), {, if, (, object, ==, null, ), {, return]
[object, ), {, if, (, object, ==, null, ), {, return, null, ;, }, final, byte, [, ], objectData, =]
[{, if, (, object, ==, null, ), {, return, null, ;, }, final, byte, [, ], objectData, =, serialize, (]
[{, return, null, ;, }, final, byte, [, ], objectData, =, serialize, (, object, ), ;, final, ByteArrayInputStream, bais, =]
[;, }, final, byte, [, ], objectData, =, serialize, (, object, ), ;, final, ByteArrayInputStream, bais, =, new, ByteArrayInputStream, (]
[objectData, =, serialize, (, object, ), ;, final, ByteArrayInputStream, bais, =, new, ByteArrayInputStream, (, objectData, ), ;, ClassLoaderAwareObjectInputStream, in, =]
[object, ), ;, final, ByteArrayInputStream, bais, =, new, ByteArrayInputStream, (, objectData, ), ;, ClassLoaderAwareObjectInputStream, in, =, null, ;, try, {]
[;, final, ByteArrayInputStream, bais, =, new, ByteArrayInputStream, (, objectData, ), ;, ClassLoaderAwareObjectInputStream, in, =, null, ;, try, {, in, =]
[bais, =, new, ByteArrayInputStream, (, objectData, ), ;, ClassLoaderAwareObjectInputStream, in, =, null, ;, try, {, in, =, new, ClassLoaderAwareObjectInputStream, (]
[new, ByteArrayInputStream, (, objectData, ), ;, ClassLoaderAwareObjectInputStream, in, =, null, ;, try, {, in, =, new, ClassLoaderAwareObjectInputStream, (, bais, ,]
[new, ByteArrayInputStream, (, objectData, ), ;, ClassLoaderAwareObjectInputStream, in, =, null, ;, try, {, in, =, new, ClassLoaderAwareObjectInputStream, (, bais, ,]
[new, ByteArrayInputStream, (, objectData, ), ;, ClassLoaderAwareObjectInputStream, in, =, null, ;, try, {, in, =, new, ClassLoaderAwareObjectInputStream, (, bais, ,]
[try, {, in, =, new, ClassLoaderAwareObjectInputStream, (, bais, ,, object, ., getClass, (, ), ., getClassLoader, (, ), ), ;]
[=, new, ClassLoaderAwareObjectInputStream, (, bais, ,, object, ., getClass, (, ), ., getClassLoader, (, ), ), ;, @, SuppressWarnings, (]
[object, ., getClass, (, ), ., getClassLoader, (, ), ), ;, @, SuppressWarnings, (, "unchecked", ), final, T, readObject, =]
[(, ), ., getClassLoader, (, ), ), ;, @, SuppressWarnings, (, "unchecked", ), final, T, readObject, =, (, T, )]
[(, ), ., getClassLoader, (, ), ), ;, @, SuppressWarnings, (, "unchecked", ), final, T, readObject, =, (, T, )]
[;, @, SuppressWarnings, (, "unchecked", ), final, T, readObject, =, (, T, ), in, ., readObject, (, ), ;, return]
[T, ), in, ., readObject, (, ), ;, return, readObject, ;, }, catch, (, final, ClassNotFoundException, ex, ), {, throw]
[., readObject, (, ), ;, return, readObject, ;, }, catch, (, final, ClassNotFoundException, ex, ), {, throw, new, SerializationException, (]
[(, ), ;, return, readObject, ;, }, catch, (, final, ClassNotFoundException, ex, ), {, throw, new, SerializationException, (, "ClassNotFoundException while reading cloned object data", ,]
[), {, throw, new, SerializationException, (, "ClassNotFoundException while reading cloned object data", ,, ex, ), ;, }, catch, (, final, IOException, ex, ), {, throw]
[new, SerializationException, (, "ClassNotFoundException while reading cloned object data", ,, ex, ), ;, }, catch, (, final, IOException, ex, ), {, throw, new, SerializationException, (]
[(, "ClassNotFoundException while reading cloned object data", ,, ex, ), ;, }, catch, (, final, IOException, ex, ), {, throw, new, SerializationException, (, "IOException while reading cloned object data", ,]
[IOException, ex, ), {, throw, new, SerializationException, (, "IOException while reading cloned object data", ,, ex, ), ;, }, finally, {, try, {, if, (]
[IOException, ex, ), {, throw, new, SerializationException, (, "IOException while reading cloned object data", ,, ex, ), ;, }, finally, {, try, {, if, (]
[), {, throw, new, SerializationException, (, "IOException while reading cloned object data", ,, ex, ), ;, }, finally, {, try, {, if, (, in, !=]
[new, SerializationException, (, "IOException while reading cloned object data", ,, ex, ), ;, }, finally, {, try, {, if, (, in, !=, null, ), {]
[new, SerializationException, (, "IOException while reading cloned object data", ,, ex, ), ;, }, finally, {, try, {, if, (, in, !=, null, ), {]
[!=, null, ), {, in, ., close, (, ), ;, }, }, catch, (, final, IOException, ex, ), {, throw]
[{, in, ., close, (, ), ;, }, }, catch, (, final, IOException, ex, ), {, throw, new, SerializationException, (]
[., close, (, ), ;, }, }, catch, (, final, IOException, ex, ), {, throw, new, SerializationException, (, "IOException on closing cloned object data InputStream.", ,]
[;, }, }, }, public, static, void, serialize, (, final, Serializable, obj, ,, final, OutputStream, outputStream, ), {, if, (]
[;, }, }, }, public, static, void, serialize, (, final, Serializable, obj, ,, final, OutputStream, outputStream, ), {, if, (]
[}, }, public, static, void, serialize, (, final, Serializable, obj, ,, final, OutputStream, outputStream, ), {, if, (, outputStream, ==]
[void, serialize, (, final, Serializable, obj, ,, final, OutputStream, outputStream, ), {, if, (, outputStream, ==, null, ), {, throw]
[final, Serializable, obj, ,, final, OutputStream, outputStream, ), {, if, (, outputStream, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, outputStream, ==, null, ), {, throw, new, IllegalArgumentException, (, "The OutputStream must not be null", ), ;, }, ObjectOutputStream, out, =]
[outputStream, ==, null, ), {, throw, new, IllegalArgumentException, (, "The OutputStream must not be null", ), ;, }, ObjectOutputStream, out, =, null, ;, try, {]
[null, ), {, throw, new, IllegalArgumentException, (, "The OutputStream must not be null", ), ;, }, ObjectOutputStream, out, =, null, ;, try, {, out, =]
[throw, new, IllegalArgumentException, (, "The OutputStream must not be null", ), ;, }, ObjectOutputStream, out, =, null, ;, try, {, out, =, new, ObjectOutputStream, (]
[(, "The OutputStream must not be null", ), ;, }, ObjectOutputStream, out, =, null, ;, try, {, out, =, new, ObjectOutputStream, (, outputStream, ), ;]
[(, "The OutputStream must not be null", ), ;, }, ObjectOutputStream, out, =, null, ;, try, {, out, =, new, ObjectOutputStream, (, outputStream, ), ;]
[}, ObjectOutputStream, out, =, null, ;, try, {, out, =, new, ObjectOutputStream, (, outputStream, ), ;, out, ., writeObject, (]
[(, outputStream, ), ;, out, ., writeObject, (, obj, ), ;, }, catch, (, final, IOException, ex, ), {, throw]
[;, out, ., writeObject, (, obj, ), ;, }, catch, (, final, IOException, ex, ), {, throw, new, SerializationException, (]
[(, final, IOException, ex, ), {, throw, new, SerializationException, (, ex, ), ;, }, finally, {, try, {, if, (]
[(, final, IOException, ex, ), {, throw, new, SerializationException, (, ex, ), ;, }, finally, {, try, {, if, (]
[IOException, ex, ), {, throw, new, SerializationException, (, ex, ), ;, }, finally, {, try, {, if, (, out, !=]
[{, throw, new, SerializationException, (, ex, ), ;, }, finally, {, try, {, if, (, out, !=, null, ), {]
[{, throw, new, SerializationException, (, ex, ), ;, }, finally, {, try, {, if, (, out, !=, null, ), {]
[{, }, }, }, public, static, byte, [, ], serialize, (, final, Serializable, obj, ), {, final, ByteArrayOutputStream, baos, =]
[}, public, static, byte, [, ], serialize, (, final, Serializable, obj, ), {, final, ByteArrayOutputStream, baos, =, new, ByteArrayOutputStream, (]
[byte, [, ], serialize, (, final, Serializable, obj, ), {, final, ByteArrayOutputStream, baos, =, new, ByteArrayOutputStream, (, 512, ), ;]
[], serialize, (, final, Serializable, obj, ), {, final, ByteArrayOutputStream, baos, =, new, ByteArrayOutputStream, (, 512, ), ;, serialize, (]
[(, final, Serializable, obj, ), {, final, ByteArrayOutputStream, baos, =, new, ByteArrayOutputStream, (, 512, ), ;, serialize, (, obj, ,]
[), {, final, ByteArrayOutputStream, baos, =, new, ByteArrayOutputStream, (, 512, ), ;, serialize, (, obj, ,, baos, ), ;, return]
[), {, final, ByteArrayOutputStream, baos, =, new, ByteArrayOutputStream, (, 512, ), ;, serialize, (, obj, ,, baos, ), ;, return]
[toByteArray, (, ), ;, }, public, static, <, T, >, T, deserialize, (, final, InputStream, inputStream, ), {, if, (]
[toByteArray, (, ), ;, }, public, static, <, T, >, T, deserialize, (, final, InputStream, inputStream, ), {, if, (]
[), ;, }, public, static, <, T, >, T, deserialize, (, final, InputStream, inputStream, ), {, if, (, inputStream, ==]
[static, <, T, >, T, deserialize, (, final, InputStream, inputStream, ), {, if, (, inputStream, ==, null, ), {, throw]
[>, T, deserialize, (, final, InputStream, inputStream, ), {, if, (, inputStream, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, inputStream, ==, null, ), {, throw, new, IllegalArgumentException, (, "The InputStream must not be null", ), ;, }, ObjectInputStream, in, =]
[inputStream, ==, null, ), {, throw, new, IllegalArgumentException, (, "The InputStream must not be null", ), ;, }, ObjectInputStream, in, =, null, ;, try, {]
[null, ), {, throw, new, IllegalArgumentException, (, "The InputStream must not be null", ), ;, }, ObjectInputStream, in, =, null, ;, try, {, in, =]
[throw, new, IllegalArgumentException, (, "The InputStream must not be null", ), ;, }, ObjectInputStream, in, =, null, ;, try, {, in, =, new, ObjectInputStream, (]
[(, "The InputStream must not be null", ), ;, }, ObjectInputStream, in, =, null, ;, try, {, in, =, new, ObjectInputStream, (, inputStream, ), ;]
[;, }, ObjectInputStream, in, =, null, ;, try, {, in, =, new, ObjectInputStream, (, inputStream, ), ;, @, SuppressWarnings, (]
[;, try, {, in, =, new, ObjectInputStream, (, inputStream, ), ;, @, SuppressWarnings, (, "unchecked", ), final, T, obj, =]
[in, =, new, ObjectInputStream, (, inputStream, ), ;, @, SuppressWarnings, (, "unchecked", ), final, T, obj, =, (, T, )]
[in, =, new, ObjectInputStream, (, inputStream, ), ;, @, SuppressWarnings, (, "unchecked", ), final, T, obj, =, (, T, )]
[;, @, SuppressWarnings, (, "unchecked", ), final, T, obj, =, (, T, ), in, ., readObject, (, ), ;, return]
[T, ), in, ., readObject, (, ), ;, return, obj, ;, }, catch, (, final, ClassCastException, ex, ), {, throw]
[., readObject, (, ), ;, return, obj, ;, }, catch, (, final, ClassCastException, ex, ), {, throw, new, SerializationException, (]
[ClassCastException, ex, ), {, throw, new, SerializationException, (, ex, ), ;, }, catch, (, final, ClassNotFoundException, ex, ), {, throw]
[{, throw, new, SerializationException, (, ex, ), ;, }, catch, (, final, ClassNotFoundException, ex, ), {, throw, new, SerializationException, (]
[ClassNotFoundException, ex, ), {, throw, new, SerializationException, (, ex, ), ;, }, catch, (, final, IOException, ex, ), {, throw]
[{, throw, new, SerializationException, (, ex, ), ;, }, catch, (, final, IOException, ex, ), {, throw, new, SerializationException, (]
[(, final, IOException, ex, ), {, throw, new, SerializationException, (, ex, ), ;, }, finally, {, try, {, if, (]
[(, final, IOException, ex, ), {, throw, new, SerializationException, (, ex, ), ;, }, finally, {, try, {, if, (]
[IOException, ex, ), {, throw, new, SerializationException, (, ex, ), ;, }, finally, {, try, {, if, (, in, !=]
[{, throw, new, SerializationException, (, ex, ), ;, }, finally, {, try, {, if, (, in, !=, null, ), {]
[{, throw, new, SerializationException, (, ex, ), ;, }, finally, {, try, {, if, (, in, !=, null, ), {]
[}, }, }, public, static, <, T, >, T, deserialize, (, final, byte, [, ], objectData, ), {, if, (]
[}, }, }, public, static, <, T, >, T, deserialize, (, final, byte, [, ], objectData, ), {, if, (]
[}, public, static, <, T, >, T, deserialize, (, final, byte, [, ], objectData, ), {, if, (, objectData, ==]
[T, >, T, deserialize, (, final, byte, [, ], objectData, ), {, if, (, objectData, ==, null, ), {, throw]
[deserialize, (, final, byte, [, ], objectData, ), {, if, (, objectData, ==, null, ), {, throw, new, IllegalArgumentException, (]
[], objectData, ), {, if, (, objectData, ==, null, ), {, throw, new, IllegalArgumentException, (, "The byte[] must not be null", ), ;, }, return]
[], objectData, ), {, if, (, objectData, ==, null, ), {, throw, new, IllegalArgumentException, (, "The byte[] must not be null", ), ;, }, return]
[==, null, ), {, throw, new, IllegalArgumentException, (, "The byte[] must not be null", ), ;, }, return, SerializationUtils, ., <, T, >, deserialize, (]
[{, throw, new, IllegalArgumentException, (, "The byte[] must not be null", ), ;, }, return, SerializationUtils, ., <, T, >, deserialize, (, new, ByteArrayInputStream, (]
[static, class, ClassLoaderAwareObjectInputStream, extends, ObjectInputStream, {, private, static, final, Map, <, String, ,, Class, <, ?, >, >, primitiveTypes, =]
[final, ClassLoader, classLoader, ;, public, ClassLoaderAwareObjectInputStream, (, final, InputStream, in, ,, final, ClassLoader, classLoader, ), throws, IOException, {, super, (]
[;, public, ClassLoaderAwareObjectInputStream, (, final, InputStream, in, ,, final, ClassLoader, classLoader, ), throws, IOException, {, super, (, in, ), ;]
[;, public, ClassLoaderAwareObjectInputStream, (, final, InputStream, in, ,, final, ClassLoader, classLoader, ), throws, IOException, {, super, (, in, ), ;]
[final, InputStream, in, ,, final, ClassLoader, classLoader, ), throws, IOException, {, super, (, in, ), ;, this, ., classLoader, =]
[in, ,, final, ClassLoader, classLoader, ), throws, IOException, {, super, (, in, ), ;, this, ., classLoader, =, classLoader, ;]
[in, ,, final, ClassLoader, classLoader, ), throws, IOException, {, super, (, in, ), ;, this, ., classLoader, =, classLoader, ;]
[classLoader, ), throws, IOException, {, super, (, in, ), ;, this, ., classLoader, =, classLoader, ;, primitiveTypes, ., put, (]
[throws, IOException, {, super, (, in, ), ;, this, ., classLoader, =, classLoader, ;, primitiveTypes, ., put, (, "byte", ,]
[in, ), ;, this, ., classLoader, =, classLoader, ;, primitiveTypes, ., put, (, "byte", ,, byte, ., class, ), ;]
[in, ), ;, this, ., classLoader, =, classLoader, ;, primitiveTypes, ., put, (, "byte", ,, byte, ., class, ), ;]
[., classLoader, =, classLoader, ;, primitiveTypes, ., put, (, "byte", ,, byte, ., class, ), ;, primitiveTypes, ., put, (]
[=, classLoader, ;, primitiveTypes, ., put, (, "byte", ,, byte, ., class, ), ;, primitiveTypes, ., put, (, "short", ,]
[put, (, "byte", ,, byte, ., class, ), ;, primitiveTypes, ., put, (, "short", ,, short, ., class, ), ;]
[put, (, "byte", ,, byte, ., class, ), ;, primitiveTypes, ., put, (, "short", ,, short, ., class, ), ;]
[byte, ., class, ), ;, primitiveTypes, ., put, (, "short", ,, short, ., class, ), ;, primitiveTypes, ., put, (]
[class, ), ;, primitiveTypes, ., put, (, "short", ,, short, ., class, ), ;, primitiveTypes, ., put, (, "int", ,]
[put, (, "short", ,, short, ., class, ), ;, primitiveTypes, ., put, (, "int", ,, int, ., class, ), ;]
[put, (, "short", ,, short, ., class, ), ;, primitiveTypes, ., put, (, "int", ,, int, ., class, ), ;]
[short, ., class, ), ;, primitiveTypes, ., put, (, "int", ,, int, ., class, ), ;, primitiveTypes, ., put, (]
[class, ), ;, primitiveTypes, ., put, (, "int", ,, int, ., class, ), ;, primitiveTypes, ., put, (, "long", ,]
[put, (, "int", ,, int, ., class, ), ;, primitiveTypes, ., put, (, "long", ,, long, ., class, ), ;]
[put, (, "int", ,, int, ., class, ), ;, primitiveTypes, ., put, (, "long", ,, long, ., class, ), ;]
[int, ., class, ), ;, primitiveTypes, ., put, (, "long", ,, long, ., class, ), ;, primitiveTypes, ., put, (]
[class, ), ;, primitiveTypes, ., put, (, "long", ,, long, ., class, ), ;, primitiveTypes, ., put, (, "float", ,]
[put, (, "long", ,, long, ., class, ), ;, primitiveTypes, ., put, (, "float", ,, float, ., class, ), ;]
[put, (, "long", ,, long, ., class, ), ;, primitiveTypes, ., put, (, "float", ,, float, ., class, ), ;]
[long, ., class, ), ;, primitiveTypes, ., put, (, "float", ,, float, ., class, ), ;, primitiveTypes, ., put, (]
[class, ), ;, primitiveTypes, ., put, (, "float", ,, float, ., class, ), ;, primitiveTypes, ., put, (, "double", ,]
[put, (, "float", ,, float, ., class, ), ;, primitiveTypes, ., put, (, "double", ,, double, ., class, ), ;]
[put, (, "float", ,, float, ., class, ), ;, primitiveTypes, ., put, (, "double", ,, double, ., class, ), ;]
[float, ., class, ), ;, primitiveTypes, ., put, (, "double", ,, double, ., class, ), ;, primitiveTypes, ., put, (]
[class, ), ;, primitiveTypes, ., put, (, "double", ,, double, ., class, ), ;, primitiveTypes, ., put, (, "boolean", ,]
[put, (, "double", ,, double, ., class, ), ;, primitiveTypes, ., put, (, "boolean", ,, boolean, ., class, ), ;]
[put, (, "double", ,, double, ., class, ), ;, primitiveTypes, ., put, (, "boolean", ,, boolean, ., class, ), ;]
[double, ., class, ), ;, primitiveTypes, ., put, (, "boolean", ,, boolean, ., class, ), ;, primitiveTypes, ., put, (]
[class, ), ;, primitiveTypes, ., put, (, "boolean", ,, boolean, ., class, ), ;, primitiveTypes, ., put, (, "char", ,]
[put, (, "boolean", ,, boolean, ., class, ), ;, primitiveTypes, ., put, (, "char", ,, char, ., class, ), ;]
[put, (, "boolean", ,, boolean, ., class, ), ;, primitiveTypes, ., put, (, "char", ,, char, ., class, ), ;]
[boolean, ., class, ), ;, primitiveTypes, ., put, (, "char", ,, char, ., class, ), ;, primitiveTypes, ., put, (]
[class, ), ;, primitiveTypes, ., put, (, "char", ,, char, ., class, ), ;, primitiveTypes, ., put, (, "void", ,]
[protected, Class, <, ?, >, resolveClass, (, final, ObjectStreamClass, desc, ), throws, IOException, ,, ClassNotFoundException, {, final, String, name, =]
[protected, Class, <, ?, >, resolveClass, (, final, ObjectStreamClass, desc, ), throws, IOException, ,, ClassNotFoundException, {, final, String, name, =]
[desc, ), throws, IOException, ,, ClassNotFoundException, {, final, String, name, =, desc, ., getName, (, ), ;, try, {, return]
[desc, ), throws, IOException, ,, ClassNotFoundException, {, final, String, name, =, desc, ., getName, (, ), ;, try, {, return]
[,, ClassNotFoundException, {, final, String, name, =, desc, ., getName, (, ), ;, try, {, return, Class, ., forName, (]
[{, final, String, name, =, desc, ., getName, (, ), ;, try, {, return, Class, ., forName, (, name, ,]
[String, name, =, desc, ., getName, (, ), ;, try, {, return, Class, ., forName, (, name, ,, false, ,]
[forName, (, name, ,, false, ,, classLoader, ), ;, }, catch, (, final, ClassNotFoundException, ex, ), {, try, {, return]
[forName, (, name, ,, false, ,, classLoader, ), ;, }, catch, (, final, ClassNotFoundException, ex, ), {, try, {, return]
[false, ,, classLoader, ), ;, }, catch, (, final, ClassNotFoundException, ex, ), {, try, {, return, Class, ., forName, (]
[classLoader, ), ;, }, catch, (, final, ClassNotFoundException, ex, ), {, try, {, return, Class, ., forName, (, name, ,]
[;, }, catch, (, final, ClassNotFoundException, ex, ), {, try, {, return, Class, ., forName, (, name, ,, false, ,]
[;, }, catch, (, final, ClassNotFoundException, ex, ), {, try, {, return, Class, ., forName, (, name, ,, false, ,]
[;, }, catch, (, final, ClassNotFoundException, ex, ), {, try, {, return, Class, ., forName, (, name, ,, false, ,]
[getContextClassLoader, (, ), ), ;, }, catch, (, final, ClassNotFoundException, cnfe, ), {, final, Class, <, ?, >, cls, =]
[getContextClassLoader, (, ), ), ;, }, catch, (, final, ClassNotFoundException, cnfe, ), {, final, Class, <, ?, >, cls, =]
[;, }, catch, (, final, ClassNotFoundException, cnfe, ), {, final, Class, <, ?, >, cls, =, primitiveTypes, ., get, (]
[ClassNotFoundException, cnfe, ), {, final, Class, <, ?, >, cls, =, primitiveTypes, ., get, (, name, ), ;, if, (]
[ClassNotFoundException, cnfe, ), {, final, Class, <, ?, >, cls, =, primitiveTypes, ., get, (, name, ), ;, if, (]
[), {, final, Class, <, ?, >, cls, =, primitiveTypes, ., get, (, name, ), ;, if, (, cls, !=]
[<, ?, >, cls, =, primitiveTypes, ., get, (, name, ), ;, if, (, cls, !=, null, ), {, return]
[., get, (, name, ), ;, if, (, cls, !=, null, ), {, return, cls, ;, }, else, {, throw]
