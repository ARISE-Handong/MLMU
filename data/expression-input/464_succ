[;, private, static, final, int, [, ], BASE64_DECODE_MAP, =, new, int, [, 256, ], ;, static, {, Arrays, ., fill]
[+, "0123456789+/", ;, private, static, final, int, [, ], BASE64_DECODE_MAP, =, new, int, [, 256, ], ;, static, {, Arrays]
[+, "abcdefghijklmnopqrstuvwxyz", +, "0123456789+/", ;, private, static, final, int, [, ], BASE64_DECODE_MAP, =, new, int, [, 256, ], ;, static]
[+, "0123456789+/", ;, private, static, final, int, [, ], BASE64_DECODE_MAP, =, new, int, [, 256, ], ;, static, {, Arrays]
[;, private, static, final, int, [, ], BASE64_DECODE_MAP, =, new, int, [, 256, ], ;, static, {, Arrays, ., fill]
[;, static, {, Arrays, ., fill, (, BASE64_DECODE_MAP, ,, -, 1, ), ;, for, (, int, i, =, 0, ;]
[], ;, static, {, Arrays, ., fill, (, BASE64_DECODE_MAP, ,, -, 1, ), ;, for, (, int, i, =, 0]
[;, for, (, int, i, =, 0, ;, i, <, BASE64_MAP, ., length, (, ), ;, i, ++, ), {]
[., fill, (, BASE64_DECODE_MAP, ,, -, 1, ), ;, for, (, int, i, =, 0, ;, i, <, BASE64_MAP, .]
[,, -, 1, ), ;, for, (, int, i, =, 0, ;, i, <, BASE64_MAP, ., length, (, ), ;]
[), ;, for, (, int, i, =, 0, ;, i, <, BASE64_MAP, ., length, (, ), ;, i, ++, )]
[), ;, for, (, int, i, =, 0, ;, i, <, BASE64_MAP, ., length, (, ), ;, i, ++, )]
[;, i, <, BASE64_MAP, ., length, (, ), ;, i, ++, ), {, BASE64_DECODE_MAP, [, BASE64_MAP, ., charAt, (, i]
[;, i, ++, ), {, BASE64_DECODE_MAP, [, BASE64_MAP, ., charAt, (, i, ), ], =, i, ;, }, }, public]
[<, BASE64_MAP, ., length, (, ), ;, i, ++, ), {, BASE64_DECODE_MAP, [, BASE64_MAP, ., charAt, (, i, ), ]]
[;, i, ++, ), {, BASE64_DECODE_MAP, [, BASE64_MAP, ., charAt, (, i, ), ], =, i, ;, }, }, public]
[., length, (, ), ;, i, ++, ), {, BASE64_DECODE_MAP, [, BASE64_MAP, ., charAt, (, i, ), ], =, i]
[), {, BASE64_DECODE_MAP, [, BASE64_MAP, ., charAt, (, i, ), ], =, i, ;, }, }, public, static, char, toBase64]
[++, ), {, BASE64_DECODE_MAP, [, BASE64_MAP, ., charAt, (, i, ), ], =, i, ;, }, }, public, static, char]
[=, i, ;, }, }, public, static, char, toBase64, (, int, value, ), {, assert, (, value, <=, 63, &&]
[[, BASE64_MAP, ., charAt, (, i, ), ], =, i, ;, }, }, public, static, char, toBase64, (, int, value]
[], =, i, ;, }, }, public, static, char, toBase64, (, int, value, ), {, assert, (, value, <=, 63]
[., charAt, (, i, ), ], =, i, ;, }, }, public, static, char, toBase64, (, int, value, ), {]
[), ], =, i, ;, }, }, public, static, char, toBase64, (, int, value, ), {, assert, (, value, <=]
[;, }, }, public, static, char, toBase64, (, int, value, ), {, assert, (, value, <=, 63, &&, value, >=]
[:, "value out of range:", +, value, ;, return, BASE64_MAP, ., charAt, (, value, ), ;, }, public, static, int, fromBase64, (, char]
[), :, "value out of range:", +, value, ;, return, BASE64_MAP, ., charAt, (, value, ), ;, }, public, static, int, fromBase64, (]
[&&, value, >=, 0, ), :, "value out of range:", +, value, ;, return, BASE64_MAP, ., charAt, (, value, ), ;, }, public]
[<=, 63, &&, value, >=, 0, ), :, "value out of range:", +, value, ;, return, BASE64_MAP, ., charAt, (, value, ), ;]
[&&, value, >=, 0, ), :, "value out of range:", +, value, ;, return, BASE64_MAP, ., charAt, (, value, ), ;, }, public]
[), :, "value out of range:", +, value, ;, return, BASE64_MAP, ., charAt, (, value, ), ;, }, public, static, int, fromBase64, (]
[>=, 0, ), :, "value out of range:", +, value, ;, return, BASE64_MAP, ., charAt, (, value, ), ;, }, public, static, int]
[), :, "value out of range:", +, value, ;, return, BASE64_MAP, ., charAt, (, value, ), ;, }, public, static, int, fromBase64, (]
[;, return, BASE64_MAP, ., charAt, (, value, ), ;, }, public, static, int, fromBase64, (, char, c, ), {, int]
[+, value, ;, return, BASE64_MAP, ., charAt, (, value, ), ;, }, public, static, int, fromBase64, (, char, c, )]
[;, return, BASE64_MAP, ., charAt, (, value, ), ;, }, public, static, int, fromBase64, (, char, c, ), {, int]
[;, }, public, static, int, fromBase64, (, char, c, ), {, int, result, =, BASE64_DECODE_MAP, [, c, ], ;, assert]
[., charAt, (, value, ), ;, }, public, static, int, fromBase64, (, char, c, ), {, int, result, =, BASE64_DECODE_MAP]
[), ;, }, public, static, int, fromBase64, (, char, c, ), {, int, result, =, BASE64_DECODE_MAP, [, c, ], ;]
[;, assert, (, result, !=, -, 1, ), :, "invalid char", ;, return, BASE64_DECODE_MAP, [, c, ], ;, }, public, static]
[[, c, ], ;, assert, (, result, !=, -, 1, ), :, "invalid char", ;, return, BASE64_DECODE_MAP, [, c, ], ;]
[], ;, assert, (, result, !=, -, 1, ), :, "invalid char", ;, return, BASE64_DECODE_MAP, [, c, ], ;, }, public]
[:, "invalid char", ;, return, BASE64_DECODE_MAP, [, c, ], ;, }, public, static, String, base64EncodeInt, (, int, value, ), {, char]
[), :, "invalid char", ;, return, BASE64_DECODE_MAP, [, c, ], ;, }, public, static, String, base64EncodeInt, (, int, value, ), {]
[!=, -, 1, ), :, "invalid char", ;, return, BASE64_DECODE_MAP, [, c, ], ;, }, public, static, String, base64EncodeInt, (, int]
[), :, "invalid char", ;, return, BASE64_DECODE_MAP, [, c, ], ;, }, public, static, String, base64EncodeInt, (, int, value, ), {]
[), :, "invalid char", ;, return, BASE64_DECODE_MAP, [, c, ], ;, }, public, static, String, base64EncodeInt, (, int, value, ), {]
[;, return, BASE64_DECODE_MAP, [, c, ], ;, }, public, static, String, base64EncodeInt, (, int, value, ), {, char, [, ]]
[;, }, public, static, String, base64EncodeInt, (, int, value, ), {, char, [, ], c, =, new, char, [, 6]
[[, c, ], ;, }, public, static, String, base64EncodeInt, (, int, value, ), {, char, [, ], c, =, new]
[], ;, }, public, static, String, base64EncodeInt, (, int, value, ), {, char, [, ], c, =, new, char, []
[;, for, (, int, i, =, 0, ;, i, <, 5, ;, i, ++, ), {, c, [, i, ]]
[], ;, for, (, int, i, =, 0, ;, i, <, 5, ;, i, ++, ), {, c, [, i]
[;, i, <, 5, ;, i, ++, ), {, c, [, i, ], =, Base64, ., toBase64, (, (, value]
[;, i, ++, ), {, c, [, i, ], =, Base64, ., toBase64, (, (, value, >, >, (, 26]
[<, 5, ;, i, ++, ), {, c, [, i, ], =, Base64, ., toBase64, (, (, value, >, >]
[;, i, ++, ), {, c, [, i, ], =, Base64, ., toBase64, (, (, value, >, >, (, 26]
[), {, c, [, i, ], =, Base64, ., toBase64, (, (, value, >, >, (, 26, -, i, *]
[++, ), {, c, [, i, ], =, Base64, ., toBase64, (, (, value, >, >, (, 26, -, i]
[=, Base64, ., toBase64, (, (, value, >, >, (, 26, -, i, *, 6, ), ), &, 0x3f, )]
[[, i, ], =, Base64, ., toBase64, (, (, value, >, >, (, 26, -, i, *, 6, ), )]
[], =, Base64, ., toBase64, (, (, value, >, >, (, 26, -, i, *, 6, ), ), &, 0x3f]
[;, }, c, [, 5, ], =, Base64, ., toBase64, (, (, value, <<, 4, ), &, 0x3f, ), ;]
[., toBase64, (, (, value, >, >, (, 26, -, i, *, 6, ), ), &, 0x3f, ), ;, }]
[), ;, }, c, [, 5, ], =, Base64, ., toBase64, (, (, value, <<, 4, ), &, 0x3f, )]
[&, 0x3f, ), ;, }, c, [, 5, ], =, Base64, ., toBase64, (, (, value, <<, 4, ), &]
[), &, 0x3f, ), ;, }, c, [, 5, ], =, Base64, ., toBase64, (, (, value, <<, 4, )]
[>, >, (, 26, -, i, *, 6, ), ), &, 0x3f, ), ;, }, c, [, 5, ], =]
[), &, 0x3f, ), ;, }, c, [, 5, ], =, Base64, ., toBase64, (, (, value, <<, 4, )]
[), ), &, 0x3f, ), ;, }, c, [, 5, ], =, Base64, ., toBase64, (, (, value, <<, 4]
[-, i, *, 6, ), ), &, 0x3f, ), ;, }, c, [, 5, ], =, Base64, ., toBase64, (]
[), ), &, 0x3f, ), ;, }, c, [, 5, ], =, Base64, ., toBase64, (, (, value, <<, 4]
[*, 6, ), ), &, 0x3f, ), ;, }, c, [, 5, ], =, Base64, ., toBase64, (, (, value]
[), ), &, 0x3f, ), ;, }, c, [, 5, ], =, Base64, ., toBase64, (, (, value, <<, 4]
[), ;, }, c, [, 5, ], =, Base64, ., toBase64, (, (, value, <<, 4, ), &, 0x3f, )]
[=, Base64, ., toBase64, (, (, value, <<, 4, ), &, 0x3f, ), ;, return, new, String, (, c, )]
[[, 5, ], =, Base64, ., toBase64, (, (, value, <<, 4, ), &, 0x3f, ), ;, return, new, String]
[], =, Base64, ., toBase64, (, (, value, <<, 4, ), &, 0x3f, ), ;, return, new, String, (, c]
[;, return, new, String, (, c, ), ;, }, }]
[., toBase64, (, (, value, <<, 4, ), &, 0x3f, ), ;, return, new, String, (, c, ), ;, }]
[), ;, return, new, String, (, c, ), ;, }, }]
[&, 0x3f, ), ;, return, new, String, (, c, ), ;, }, }]
[), &, 0x3f, ), ;, return, new, String, (, c, ), ;, }, }]
[<<, 4, ), &, 0x3f, ), ;, return, new, String, (, c, ), ;, }, }]
[), &, 0x3f, ), ;, return, new, String, (, c, ), ;, }, }]
[), ;, return, new, String, (, c, ), ;, }, }]
[;, }, }]
[), ;, }, }]
