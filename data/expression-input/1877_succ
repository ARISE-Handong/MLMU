[;, private, boolean, autoSort, ;, private, boolean, allowDuplicateXValues, ;, public, ComparableObjectSeries, (, Comparable, key, ), {, this, (, key, ,]
[., MAX_VALUE, ;, private, boolean, autoSort, ;, private, boolean, allowDuplicateXValues, ;, public, ComparableObjectSeries, (, Comparable, key, ), {, this, (]
[,, true, ,, true, ), ;, }, public, ComparableObjectSeries, (, Comparable, key, ,, boolean, autoSort, ,, boolean, allowDuplicateXValues, ), {]
[,, true, ), ;, }, public, ComparableObjectSeries, (, Comparable, key, ,, boolean, autoSort, ,, boolean, allowDuplicateXValues, ), {, super, (]
[), ;, }, public, ComparableObjectSeries, (, Comparable, key, ,, boolean, autoSort, ,, boolean, allowDuplicateXValues, ), {, super, (, key, )]
[), ;, this, ., data, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., autoSort, =, autoSort]
[=, new, java, ., util, ., ArrayList, (, ), ;, this, ., autoSort, =, autoSort, ;, this, ., allowDuplicateXValues, =]
[., data, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., autoSort, =, autoSort, ;, this, .]
[;, this, ., autoSort, =, autoSort, ;, this, ., allowDuplicateXValues, =, allowDuplicateXValues, ;, }, public, boolean, getAutoSort, (, ), {]
[=, autoSort, ;, this, ., allowDuplicateXValues, =, allowDuplicateXValues, ;, }, public, boolean, getAutoSort, (, ), {, return, this, ., autoSort]
[., autoSort, =, autoSort, ;, this, ., allowDuplicateXValues, =, allowDuplicateXValues, ;, }, public, boolean, getAutoSort, (, ), {, return, this]
[;, this, ., allowDuplicateXValues, =, allowDuplicateXValues, ;, }, public, boolean, getAutoSort, (, ), {, return, this, ., autoSort, ;, }]
[=, allowDuplicateXValues, ;, }, public, boolean, getAutoSort, (, ), {, return, this, ., autoSort, ;, }, public, boolean, getAllowDuplicateXValues, (]
[., allowDuplicateXValues, =, allowDuplicateXValues, ;, }, public, boolean, getAutoSort, (, ), {, return, this, ., autoSort, ;, }, public, boolean]
[;, }, public, boolean, getAutoSort, (, ), {, return, this, ., autoSort, ;, }, public, boolean, getAllowDuplicateXValues, (, ), {]
[;, }, public, boolean, getAllowDuplicateXValues, (, ), {, return, this, ., allowDuplicateXValues, ;, }, public, int, getItemCount, (, ), {]
[., autoSort, ;, }, public, boolean, getAllowDuplicateXValues, (, ), {, return, this, ., allowDuplicateXValues, ;, }, public, int, getItemCount, (]
[;, }, public, int, getItemCount, (, ), {, return, this, ., data, ., size, (, ), ;, }, public, int]
[., allowDuplicateXValues, ;, }, public, int, getItemCount, (, ), {, return, this, ., data, ., size, (, ), ;, }]
[;, }, public, int, getMaximumItemCount, (, ), {, return, this, ., maximumItemCount, ;, }, public, void, setMaximumItemCount, (, int, maximum]
[., size, (, ), ;, }, public, int, getMaximumItemCount, (, ), {, return, this, ., maximumItemCount, ;, }, public, void]
[., data, ., size, (, ), ;, }, public, int, getMaximumItemCount, (, ), {, return, this, ., maximumItemCount, ;, }]
[;, }, public, void, setMaximumItemCount, (, int, maximum, ), {, this, ., maximumItemCount, =, maximum, ;, boolean, dataRemoved, =, false]
[., maximumItemCount, ;, }, public, void, setMaximumItemCount, (, int, maximum, ), {, this, ., maximumItemCount, =, maximum, ;, boolean, dataRemoved]
[=, maximum, ;, boolean, dataRemoved, =, false, ;, while, (, this, ., data, ., size, (, ), >, maximum, )]
[., maximumItemCount, =, maximum, ;, boolean, dataRemoved, =, false, ;, while, (, this, ., data, ., size, (, ), >]
[;, boolean, dataRemoved, =, false, ;, while, (, this, ., data, ., size, (, ), >, maximum, ), {, this]
[;, while, (, this, ., data, ., size, (, ), >, maximum, ), {, this, ., data, ., remove, (]
[), {, this, ., data, ., remove, (, 0, ), ;, dataRemoved, =, true, ;, }, if, (, dataRemoved, )]
[>, maximum, ), {, this, ., data, ., remove, (, 0, ), ;, dataRemoved, =, true, ;, }, if, (]
[., size, (, ), >, maximum, ), {, this, ., data, ., remove, (, 0, ), ;, dataRemoved, =, true]
[., data, ., size, (, ), >, maximum, ), {, this, ., data, ., remove, (, 0, ), ;, dataRemoved]
[), {, this, ., data, ., remove, (, 0, ), ;, dataRemoved, =, true, ;, }, if, (, dataRemoved, )]
[;, dataRemoved, =, true, ;, }, if, (, dataRemoved, ), {, fireSeriesChanged, (, ), ;, }, }, protected, void, add]
[., remove, (, 0, ), ;, dataRemoved, =, true, ;, }, if, (, dataRemoved, ), {, fireSeriesChanged, (, ), ;]
[., data, ., remove, (, 0, ), ;, dataRemoved, =, true, ;, }, if, (, dataRemoved, ), {, fireSeriesChanged, (]
[), ;, dataRemoved, =, true, ;, }, if, (, dataRemoved, ), {, fireSeriesChanged, (, ), ;, }, }, protected, void]
[=, true, ;, }, if, (, dataRemoved, ), {, fireSeriesChanged, (, ), ;, }, }, protected, void, add, (, Comparable]
[;, }, if, (, dataRemoved, ), {, fireSeriesChanged, (, ), ;, }, }, protected, void, add, (, Comparable, x, ,]
[), {, fireSeriesChanged, (, ), ;, }, }, protected, void, add, (, Comparable, x, ,, Object, y, ), {, add]
[;, }, }, protected, void, add, (, Comparable, x, ,, Object, y, ), {, add, (, x, ,, y, ,]
[;, }, protected, void, add, (, Comparable, x, ,, Object, y, ,, boolean, notify, ), {, ComparableObjectItem, item, =, new]
[,, y, ,, true, ), ;, }, protected, void, add, (, Comparable, x, ,, Object, y, ,, boolean, notify, )]
[,, true, ), ;, }, protected, void, add, (, Comparable, x, ,, Object, y, ,, boolean, notify, ), {, ComparableObjectItem]
[), ;, }, protected, void, add, (, Comparable, x, ,, Object, y, ,, boolean, notify, ), {, ComparableObjectItem, item, =]
[;, add, (, item, ,, notify, ), ;, }, protected, void, add, (, ComparableObjectItem, item, ,, boolean, notify, ), {]
[,, y, ), ;, add, (, item, ,, notify, ), ;, }, protected, void, add, (, ComparableObjectItem, item, ,, boolean]
[), ;, add, (, item, ,, notify, ), ;, }, protected, void, add, (, ComparableObjectItem, item, ,, boolean, notify, )]
[;, }, protected, void, add, (, ComparableObjectItem, item, ,, boolean, notify, ), {, if, (, item, ==, null, ), {]
[,, notify, ), ;, }, protected, void, add, (, ComparableObjectItem, item, ,, boolean, notify, ), {, if, (, item, ==]
[), ;, }, protected, void, add, (, ComparableObjectItem, item, ,, boolean, notify, ), {, if, (, item, ==, null, )]
[), {, throw, new, IllegalArgumentException, (, "Null 'item' argument.", ), ;, }, if, (, this, ., autoSort, ), {, int, index, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'item' argument.", ), ;, }, if, (, this, ., autoSort, ), {, int]
[), {, throw, new, IllegalArgumentException, (, "Null 'item' argument.", ), ;, }, if, (, this, ., autoSort, ), {, int, index, =]
[;, }, if, (, this, ., autoSort, ), {, int, index, =, Collections, ., binarySearch, (, this, ., data, ,]
[), ;, }, if, (, this, ., autoSort, ), {, int, index, =, Collections, ., binarySearch, (, this, ., data]
[), {, int, index, =, Collections, ., binarySearch, (, this, ., data, ,, item, ), ;, if, (, index, <]
[., autoSort, ), {, int, index, =, Collections, ., binarySearch, (, this, ., data, ,, item, ), ;, if, (]
[;, if, (, index, <, 0, ), {, this, ., data, ., add, (, -, index, -, 1, ,, item]
[., binarySearch, (, this, ., data, ,, item, ), ;, if, (, index, <, 0, ), {, this, ., data]
[,, item, ), ;, if, (, index, <, 0, ), {, this, ., data, ., add, (, -, index, -]
[., data, ,, item, ), ;, if, (, index, <, 0, ), {, this, ., data, ., add, (, -]
[), ;, if, (, index, <, 0, ), {, this, ., data, ., add, (, -, index, -, 1, ,]
[), {, this, ., data, ., add, (, -, index, -, 1, ,, item, ), ;, }, else, {, if]
[<, 0, ), {, this, ., data, ., add, (, -, index, -, 1, ,, item, ), ;, }, else]
[), {, this, ., data, ., add, (, -, index, -, 1, ,, item, ), ;, }, else, {, if]
[;, }, else, {, if, (, this, ., allowDuplicateXValues, ), {, int, size, =, this, ., data, ., size, (]
[., add, (, -, index, -, 1, ,, item, ), ;, }, else, {, if, (, this, ., allowDuplicateXValues, )]
[., data, ., add, (, -, index, -, 1, ,, item, ), ;, }, else, {, if, (, this, .]
[,, item, ), ;, }, else, {, if, (, this, ., allowDuplicateXValues, ), {, int, size, =, this, ., data]
[-, 1, ,, item, ), ;, }, else, {, if, (, this, ., allowDuplicateXValues, ), {, int, size, =, this]
[-, 1, ,, item, ), ;, }, else, {, if, (, this, ., allowDuplicateXValues, ), {, int, size, =, this]
[,, item, ), ;, }, else, {, if, (, this, ., allowDuplicateXValues, ), {, int, size, =, this, ., data]
[), ;, }, else, {, if, (, this, ., allowDuplicateXValues, ), {, int, size, =, this, ., data, ., size]
[), {, int, size, =, this, ., data, ., size, (, ), ;, while, (, index, <, size, &&, item]
[., allowDuplicateXValues, ), {, int, size, =, this, ., data, ., size, (, ), ;, while, (, index, <, size]
[;, while, (, index, <, size, &&, item, ., compareTo, (, this, ., data, ., get, (, index, ), )]
[., size, (, ), ;, while, (, index, <, size, &&, item, ., compareTo, (, this, ., data, ., get]
[., data, ., size, (, ), ;, while, (, index, <, size, &&, item, ., compareTo, (, this, ., data]
[), {, index, ++, ;, }, if, (, index, <, this, ., data, ., size, (, ), ), {, this]
[&&, item, ., compareTo, (, this, ., data, ., get, (, index, ), ), ==, 0, ), {, index, ++]
[<, size, &&, item, ., compareTo, (, this, ., data, ., get, (, index, ), ), ==, 0, ), {]
[&&, item, ., compareTo, (, this, ., data, ., get, (, index, ), ), ==, 0, ), {, index, ++]
[), {, index, ++, ;, }, if, (, index, <, this, ., data, ., size, (, ), ), {, this]
[==, 0, ), {, index, ++, ;, }, if, (, index, <, this, ., data, ., size, (, ), )]
[., compareTo, (, this, ., data, ., get, (, index, ), ), ==, 0, ), {, index, ++, ;, }]
[), ==, 0, ), {, index, ++, ;, }, if, (, index, <, this, ., data, ., size, (, )]
[., get, (, index, ), ), ==, 0, ), {, index, ++, ;, }, if, (, index, <, this, .]
[., data, ., get, (, index, ), ), ==, 0, ), {, index, ++, ;, }, if, (, index, <]
[), ), ==, 0, ), {, index, ++, ;, }, if, (, index, <, this, ., data, ., size, (]
[), {, index, ++, ;, }, if, (, index, <, this, ., data, ., size, (, ), ), {, this]
[;, }, if, (, index, <, this, ., data, ., size, (, ), ), {, this, ., data, ., add]
[++, ;, }, if, (, index, <, this, ., data, ., size, (, ), ), {, this, ., data, .]
[), {, this, ., data, ., add, (, index, ,, item, ), ;, }, else, {, this, ., data, .]
[<, this, ., data, ., size, (, ), ), {, this, ., data, ., add, (, index, ,, item, )]
[), {, this, ., data, ., add, (, index, ,, item, ), ;, }, else, {, this, ., data, .]
[., size, (, ), ), {, this, ., data, ., add, (, index, ,, item, ), ;, }, else, {]
[., data, ., size, (, ), ), {, this, ., data, ., add, (, index, ,, item, ), ;, }]
[;, }, else, {, this, ., data, ., add, (, item, ), ;, }, }, else, {, throw, new, SeriesException]
[., add, (, index, ,, item, ), ;, }, else, {, this, ., data, ., add, (, item, ), ;]
[., data, ., add, (, index, ,, item, ), ;, }, else, {, this, ., data, ., add, (, item]
[,, item, ), ;, }, else, {, this, ., data, ., add, (, item, ), ;, }, }, else, {]
[), ;, }, else, {, this, ., data, ., add, (, item, ), ;, }, }, else, {, throw, new]
[;, }, }, else, {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }, }, else, {, if, (, !]
[., add, (, item, ), ;, }, }, else, {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }, }]
[., data, ., add, (, item, ), ;, }, }, else, {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }]
[), ;, }, }, else, {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }, }, else, {, if, (]
[;, }, }, }, else, {, if, (, !, this, ., allowDuplicateXValues, ), {, int, index, =, indexOf, (, item]
[), ;, }, }, }, else, {, if, (, !, this, ., allowDuplicateXValues, ), {, int, index, =, indexOf, (]
[), {, int, index, =, indexOf, (, item, ., getComparable, (, ), ), ;, if, (, index, >=, 0, )]
[), {, int, index, =, indexOf, (, item, ., getComparable, (, ), ), ;, if, (, index, >=, 0, )]
[., allowDuplicateXValues, ), {, int, index, =, indexOf, (, item, ., getComparable, (, ), ), ;, if, (, index, >=]
[;, if, (, index, >=, 0, ), {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }, this, ., data]
[), ;, if, (, index, >=, 0, ), {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }, this, .]
[., getComparable, (, ), ), ;, if, (, index, >=, 0, ), {, throw, new, SeriesException, (, "X-value already exists.", ), ;]
[), {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }, this, ., data, ., add, (, item, ), ;]
[>=, 0, ), {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }, this, ., data, ., add, (, item]
[), {, throw, new, SeriesException, (, "X-value already exists.", ), ;, }, }, this, ., data, ., add, (, item, ), ;]
[;, }, }, this, ., data, ., add, (, item, ), ;, }, if, (, getItemCount, (, ), >, this]
[), ;, }, }, this, ., data, ., add, (, item, ), ;, }, if, (, getItemCount, (, ), >]
[;, }, if, (, getItemCount, (, ), >, this, ., maximumItemCount, ), {, this, ., data, ., remove, (, 0]
[., add, (, item, ), ;, }, if, (, getItemCount, (, ), >, this, ., maximumItemCount, ), {, this, .]
[., data, ., add, (, item, ), ;, }, if, (, getItemCount, (, ), >, this, ., maximumItemCount, ), {]
[), ;, }, if, (, getItemCount, (, ), >, this, ., maximumItemCount, ), {, this, ., data, ., remove, (]
[), {, this, ., data, ., remove, (, 0, ), ;, }, if, (, notify, ), {, fireSeriesChanged, (, )]
[>, this, ., maximumItemCount, ), {, this, ., data, ., remove, (, 0, ), ;, }, if, (, notify, )]
[), {, this, ., data, ., remove, (, 0, ), ;, }, if, (, notify, ), {, fireSeriesChanged, (, )]
[., maximumItemCount, ), {, this, ., data, ., remove, (, 0, ), ;, }, if, (, notify, ), {, fireSeriesChanged]
[;, }, if, (, notify, ), {, fireSeriesChanged, (, ), ;, }, }, public, int, indexOf, (, Comparable, x, )]
[., remove, (, 0, ), ;, }, if, (, notify, ), {, fireSeriesChanged, (, ), ;, }, }, public, int]
[., data, ., remove, (, 0, ), ;, }, if, (, notify, ), {, fireSeriesChanged, (, ), ;, }, }]
[), ;, }, if, (, notify, ), {, fireSeriesChanged, (, ), ;, }, }, public, int, indexOf, (, Comparable, x]
[), {, fireSeriesChanged, (, ), ;, }, }, public, int, indexOf, (, Comparable, x, ), {, if, (, this, .]
[;, }, }, public, int, indexOf, (, Comparable, x, ), {, if, (, this, ., autoSort, ), {, return, Collections]
[), {, return, Collections, ., binarySearch, (, this, ., data, ,, new, ComparableObjectItem, (, x, ,, null, ), ), ;]
[., autoSort, ), {, return, Collections, ., binarySearch, (, this, ., data, ,, new, ComparableObjectItem, (, x, ,, null, )]
[;, }, else, {, for, (, int, i, =, 0, ;, i, <, this, ., data, ., size, (, )]
[., binarySearch, (, this, ., data, ,, new, ComparableObjectItem, (, x, ,, null, ), ), ;, }, else, {, for]
[,, new, ComparableObjectItem, (, x, ,, null, ), ), ;, }, else, {, for, (, int, i, =, 0, ;]
[., data, ,, new, ComparableObjectItem, (, x, ,, null, ), ), ;, }, else, {, for, (, int, i, =]
[), ;, }, else, {, for, (, int, i, =, 0, ;, i, <, this, ., data, ., size, (]
[,, null, ), ), ;, }, else, {, for, (, int, i, =, 0, ;, i, <, this, ., data]
[), ), ;, }, else, {, for, (, int, i, =, 0, ;, i, <, this, ., data, ., size]
[;, i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem]
[;, i, ++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem, ), this, ., data, ., get, (, i, ), ;]
[<, this, ., data, ., size, (, ), ;, i, ++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem, ), this]
[;, i, ++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem, ), this, ., data, ., get, (, i, ), ;]
[., size, (, ), ;, i, ++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem, ), this, ., data, ., get]
[., data, ., size, (, ), ;, i, ++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem, ), this, ., data]
[), {, ComparableObjectItem, item, =, (, ComparableObjectItem, ), this, ., data, ., get, (, i, ), ;, if, (, item]
[++, ), {, ComparableObjectItem, item, =, (, ComparableObjectItem, ), this, ., data, ., get, (, i, ), ;, if, (]
[;, if, (, item, ., getComparable, (, ), ., equals, (, x, ), ), {, return, i, ;, }, }]
[;, if, (, item, ., getComparable, (, ), ., equals, (, x, ), ), {, return, i, ;, }, }]
[., get, (, i, ), ;, if, (, item, ., getComparable, (, ), ., equals, (, x, ), ), {]
[., data, ., get, (, i, ), ;, if, (, item, ., getComparable, (, ), ., equals, (, x, )]
[), ;, if, (, item, ., getComparable, (, ), ., equals, (, x, ), ), {, return, i, ;, }]
[), {, return, i, ;, }, }, return, -, 1, ;, }, }, protected, void, update, (, Comparable, x, ,]
[., equals, (, x, ), ), {, return, i, ;, }, }, return, -, 1, ;, }, }, protected, void]
[., getComparable, (, ), ., equals, (, x, ), ), {, return, i, ;, }, }, return, -, 1, ;]
[), ), {, return, i, ;, }, }, return, -, 1, ;, }, }, protected, void, update, (, Comparable, x]
[;, }, }, return, -, 1, ;, }, }, protected, void, update, (, Comparable, x, ,, Object, y, ), {]
[;, }, }, protected, void, update, (, Comparable, x, ,, Object, y, ), {, int, index, =, indexOf, (, x]
[;, }, }, protected, void, update, (, Comparable, x, ,, Object, y, ), {, int, index, =, indexOf, (, x]
[;, if, (, index, <, 0, ), {, throw, new, SeriesException, (, "No observation for x = ", +, x, ), ;, }, else, {]
[), ;, if, (, index, <, 0, ), {, throw, new, SeriesException, (, "No observation for x = ", +, x, ), ;, }, else]
[), {, throw, new, SeriesException, (, "No observation for x = ", +, x, ), ;, }, else, {, ComparableObjectItem, item, =, getDataItem, (, index]
[<, 0, ), {, throw, new, SeriesException, (, "No observation for x = ", +, x, ), ;, }, else, {, ComparableObjectItem, item, =, getDataItem]
[), {, throw, new, SeriesException, (, "No observation for x = ", +, x, ), ;, }, else, {, ComparableObjectItem, item, =, getDataItem, (, index]
[;, }, else, {, ComparableObjectItem, item, =, getDataItem, (, index, ), ;, item, ., setObject, (, y, ), ;, fireSeriesChanged]
[), ;, }, else, {, ComparableObjectItem, item, =, getDataItem, (, index, ), ;, item, ., setObject, (, y, ), ;]
[+, x, ), ;, }, else, {, ComparableObjectItem, item, =, getDataItem, (, index, ), ;, item, ., setObject, (, y]
[), ;, }, else, {, ComparableObjectItem, item, =, getDataItem, (, index, ), ;, item, ., setObject, (, y, ), ;]
[;, item, ., setObject, (, y, ), ;, fireSeriesChanged, (, ), ;, }, }, protected, void, updateByIndex, (, int, index]
[), ;, item, ., setObject, (, y, ), ;, fireSeriesChanged, (, ), ;, }, }, protected, void, updateByIndex, (, int]
[;, fireSeriesChanged, (, ), ;, }, }, protected, void, updateByIndex, (, int, index, ,, Object, y, ), {, ComparableObjectItem, item]
[., setObject, (, y, ), ;, fireSeriesChanged, (, ), ;, }, }, protected, void, updateByIndex, (, int, index, ,, Object]
[), ;, fireSeriesChanged, (, ), ;, }, }, protected, void, updateByIndex, (, int, index, ,, Object, y, ), {, ComparableObjectItem]
[;, }, }, protected, void, updateByIndex, (, int, index, ,, Object, y, ), {, ComparableObjectItem, item, =, getDataItem, (, index]
[;, item, ., setObject, (, y, ), ;, fireSeriesChanged, (, ), ;, }, protected, ComparableObjectItem, getDataItem, (, int, index, )]
[), ;, item, ., setObject, (, y, ), ;, fireSeriesChanged, (, ), ;, }, protected, ComparableObjectItem, getDataItem, (, int, index]
[;, fireSeriesChanged, (, ), ;, }, protected, ComparableObjectItem, getDataItem, (, int, index, ), {, return, (, ComparableObjectItem, ), this, .]
[., setObject, (, y, ), ;, fireSeriesChanged, (, ), ;, }, protected, ComparableObjectItem, getDataItem, (, int, index, ), {, return]
[), ;, fireSeriesChanged, (, ), ;, }, protected, ComparableObjectItem, getDataItem, (, int, index, ), {, return, (, ComparableObjectItem, ), this]
[;, }, protected, ComparableObjectItem, getDataItem, (, int, index, ), {, return, (, ComparableObjectItem, ), this, ., data, ., get, (]
[;, }, protected, void, delete, (, int, start, ,, int, end, ), {, for, (, int, i, =, start, ;]
[;, }, protected, void, delete, (, int, start, ,, int, end, ), {, for, (, int, i, =, start, ;]
[., get, (, index, ), ;, }, protected, void, delete, (, int, start, ,, int, end, ), {, for, (]
[., data, ., get, (, index, ), ;, }, protected, void, delete, (, int, start, ,, int, end, ), {]
[), ;, }, protected, void, delete, (, int, start, ,, int, end, ), {, for, (, int, i, =, start]
[;, i, <=, end, ;, i, ++, ), {, this, ., data, ., remove, (, start, ), ;, }, fireSeriesChanged]
[;, i, ++, ), {, this, ., data, ., remove, (, start, ), ;, }, fireSeriesChanged, (, ), ;, }]
[<=, end, ;, i, ++, ), {, this, ., data, ., remove, (, start, ), ;, }, fireSeriesChanged, (, )]
[;, i, ++, ), {, this, ., data, ., remove, (, start, ), ;, }, fireSeriesChanged, (, ), ;, }]
[), {, this, ., data, ., remove, (, start, ), ;, }, fireSeriesChanged, (, ), ;, }, public, void, clear]
[++, ), {, this, ., data, ., remove, (, start, ), ;, }, fireSeriesChanged, (, ), ;, }, public, void]
[;, }, fireSeriesChanged, (, ), ;, }, public, void, clear, (, ), {, if, (, this, ., data, ., size]
[., remove, (, start, ), ;, }, fireSeriesChanged, (, ), ;, }, public, void, clear, (, ), {, if, (]
[., data, ., remove, (, start, ), ;, }, fireSeriesChanged, (, ), ;, }, public, void, clear, (, ), {]
[), ;, }, fireSeriesChanged, (, ), ;, }, public, void, clear, (, ), {, if, (, this, ., data, .]
[;, }, public, void, clear, (, ), {, if, (, this, ., data, ., size, (, ), >, 0, )]
[), {, this, ., data, ., clear, (, ), ;, fireSeriesChanged, (, ), ;, }, }, protected, ComparableObjectItem, remove, (]
[>, 0, ), {, this, ., data, ., clear, (, ), ;, fireSeriesChanged, (, ), ;, }, }, protected, ComparableObjectItem]
[., size, (, ), >, 0, ), {, this, ., data, ., clear, (, ), ;, fireSeriesChanged, (, ), ;]
[., data, ., size, (, ), >, 0, ), {, this, ., data, ., clear, (, ), ;, fireSeriesChanged, (]
[), {, this, ., data, ., clear, (, ), ;, fireSeriesChanged, (, ), ;, }, }, protected, ComparableObjectItem, remove, (]
[;, fireSeriesChanged, (, ), ;, }, }, protected, ComparableObjectItem, remove, (, int, index, ), {, ComparableObjectItem, result, =, (, ComparableObjectItem]
[., clear, (, ), ;, fireSeriesChanged, (, ), ;, }, }, protected, ComparableObjectItem, remove, (, int, index, ), {, ComparableObjectItem]
[., data, ., clear, (, ), ;, fireSeriesChanged, (, ), ;, }, }, protected, ComparableObjectItem, remove, (, int, index, )]
[;, }, }, protected, ComparableObjectItem, remove, (, int, index, ), {, ComparableObjectItem, result, =, (, ComparableObjectItem, ), this, ., data]
[;, fireSeriesChanged, (, ), ;, return, result, ;, }, public, ComparableObjectItem, remove, (, Comparable, x, ), {, return, remove, (]
[;, fireSeriesChanged, (, ), ;, return, result, ;, }, public, ComparableObjectItem, remove, (, Comparable, x, ), {, return, remove, (]
[., remove, (, index, ), ;, fireSeriesChanged, (, ), ;, return, result, ;, }, public, ComparableObjectItem, remove, (, Comparable, x]
[., data, ., remove, (, index, ), ;, fireSeriesChanged, (, ), ;, return, result, ;, }, public, ComparableObjectItem, remove, (]
[), ;, fireSeriesChanged, (, ), ;, return, result, ;, }, public, ComparableObjectItem, remove, (, Comparable, x, ), {, return, remove]
[;, return, result, ;, }, public, ComparableObjectItem, remove, (, Comparable, x, ), {, return, remove, (, indexOf, (, x, )]
[;, }, public, ComparableObjectItem, remove, (, Comparable, x, ), {, return, remove, (, indexOf, (, x, ), ), ;, }]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, ComparableObjectSeries, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, ComparableObjectSeries, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, ComparableObjectSeries, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, ComparableObjectSeries, ), ), {, return, false, ;, }, if, (, !, super]
[), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false]
[instanceof, ComparableObjectSeries, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {]
[;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, ComparableObjectSeries, that, =]
[), {, return, false, ;, }, ComparableObjectSeries, that, =, (, ComparableObjectSeries, ), obj, ;, if, (, this, ., maximumItemCount, !=]
[), {, return, false, ;, }, ComparableObjectSeries, that, =, (, ComparableObjectSeries, ), obj, ;, if, (, this, ., maximumItemCount, !=]
[., equals, (, obj, ), ), {, return, false, ;, }, ComparableObjectSeries, that, =, (, ComparableObjectSeries, ), obj, ;, if]
[), ), {, return, false, ;, }, ComparableObjectSeries, that, =, (, ComparableObjectSeries, ), obj, ;, if, (, this, ., maximumItemCount]
[;, }, ComparableObjectSeries, that, =, (, ComparableObjectSeries, ), obj, ;, if, (, this, ., maximumItemCount, !=, that, ., maximumItemCount, )]
[;, if, (, this, ., maximumItemCount, !=, that, ., maximumItemCount, ), {, return, false, ;, }, if, (, this, .]
[;, if, (, this, ., maximumItemCount, !=, that, ., maximumItemCount, ), {, return, false, ;, }, if, (, this, .]
[), {, return, false, ;, }, if, (, this, ., autoSort, !=, that, ., autoSort, ), {, return, false, ;]
[!=, that, ., maximumItemCount, ), {, return, false, ;, }, if, (, this, ., autoSort, !=, that, ., autoSort, )]
[., maximumItemCount, !=, that, ., maximumItemCount, ), {, return, false, ;, }, if, (, this, ., autoSort, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., autoSort, !=, that, ., autoSort, ), {, return, false, ;]
[., maximumItemCount, ), {, return, false, ;, }, if, (, this, ., autoSort, !=, that, ., autoSort, ), {, return]
[;, }, if, (, this, ., autoSort, !=, that, ., autoSort, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., allowDuplicateXValues, !=, that, ., allowDuplicateXValues, ), {, return, false, ;]
[!=, that, ., autoSort, ), {, return, false, ;, }, if, (, this, ., allowDuplicateXValues, !=, that, ., allowDuplicateXValues, )]
[., autoSort, !=, that, ., autoSort, ), {, return, false, ;, }, if, (, this, ., allowDuplicateXValues, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., allowDuplicateXValues, !=, that, ., allowDuplicateXValues, ), {, return, false, ;]
[., autoSort, ), {, return, false, ;, }, if, (, this, ., allowDuplicateXValues, !=, that, ., allowDuplicateXValues, ), {, return]
[;, }, if, (, this, ., allowDuplicateXValues, !=, that, ., allowDuplicateXValues, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data]
[!=, that, ., allowDuplicateXValues, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data]
[., allowDuplicateXValues, !=, that, ., allowDuplicateXValues, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data]
[., allowDuplicateXValues, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,, that]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data, ), ), {, return]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, super]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, super]
[., equal, (, this, ., data, ,, that, ., data, ), ), {, return, false, ;, }, return, true, ;]
[,, that, ., data, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, )]
[., data, ,, that, ., data, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode]
[), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =]
[., data, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int]
[;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, )]
[;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, int, count, =]
[;, int, count, =, getItemCount, (, ), ;, if, (, count, >, 0, ), {, ComparableObjectItem, item, =, getDataItem, (]
[., hashCode, (, ), ;, int, count, =, getItemCount, (, ), ;, if, (, count, >, 0, ), {, ComparableObjectItem]
[;, if, (, count, >, 0, ), {, ComparableObjectItem, item, =, getDataItem, (, 0, ), ;, result, =, 29, *]
[), {, ComparableObjectItem, item, =, getDataItem, (, 0, ), ;, result, =, 29, *, result, +, item, ., hashCode, (]
[>, 0, ), {, ComparableObjectItem, item, =, getDataItem, (, 0, ), ;, result, =, 29, *, result, +, item, .]
[), {, ComparableObjectItem, item, =, getDataItem, (, 0, ), ;, result, =, 29, *, result, +, item, ., hashCode, (]
[;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (, count, >, 1, )]
[), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (, count, >, 1]
[=, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (, count, >, 1, ), {, ComparableObjectItem]
[;, }, if, (, count, >, 1, ), {, ComparableObjectItem, item, =, getDataItem, (, count, -, 1, ), ;, result]
[+, item, ., hashCode, (, ), ;, }, if, (, count, >, 1, ), {, ComparableObjectItem, item, =, getDataItem, (]
[*, result, +, item, ., hashCode, (, ), ;, }, if, (, count, >, 1, ), {, ComparableObjectItem, item, =]
[+, item, ., hashCode, (, ), ;, }, if, (, count, >, 1, ), {, ComparableObjectItem, item, =, getDataItem, (]
[;, }, if, (, count, >, 1, ), {, ComparableObjectItem, item, =, getDataItem, (, count, -, 1, ), ;, result]
[., hashCode, (, ), ;, }, if, (, count, >, 1, ), {, ComparableObjectItem, item, =, getDataItem, (, count, -]
[), {, ComparableObjectItem, item, =, getDataItem, (, count, -, 1, ), ;, result, =, 29, *, result, +, item, .]
[>, 1, ), {, ComparableObjectItem, item, =, getDataItem, (, count, -, 1, ), ;, result, =, 29, *, result, +]
[), {, ComparableObjectItem, item, =, getDataItem, (, count, -, 1, ), ;, result, =, 29, *, result, +, item, .]
[;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (, count, >, 2, )]
[), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (, count, >, 2]
[-, 1, ), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (, count]
[), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (, count, >, 2]
[=, 29, *, result, +, item, ., hashCode, (, ), ;, }, if, (, count, >, 2, ), {, ComparableObjectItem]
[;, }, if, (, count, >, 2, ), {, ComparableObjectItem, item, =, getDataItem, (, count, /, 2, ), ;, result]
[+, item, ., hashCode, (, ), ;, }, if, (, count, >, 2, ), {, ComparableObjectItem, item, =, getDataItem, (]
[*, result, +, item, ., hashCode, (, ), ;, }, if, (, count, >, 2, ), {, ComparableObjectItem, item, =]
[+, item, ., hashCode, (, ), ;, }, if, (, count, >, 2, ), {, ComparableObjectItem, item, =, getDataItem, (]
[;, }, if, (, count, >, 2, ), {, ComparableObjectItem, item, =, getDataItem, (, count, /, 2, ), ;, result]
[., hashCode, (, ), ;, }, if, (, count, >, 2, ), {, ComparableObjectItem, item, =, getDataItem, (, count, /]
[), {, ComparableObjectItem, item, =, getDataItem, (, count, /, 2, ), ;, result, =, 29, *, result, +, item, .]
[>, 2, ), {, ComparableObjectItem, item, =, getDataItem, (, count, /, 2, ), ;, result, =, 29, *, result, +]
[), {, ComparableObjectItem, item, =, getDataItem, (, count, /, 2, ), ;, result, =, 29, *, result, +, item, .]
[;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, result, =, 29, *, result, +]
[), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, result, =, 29, *, result]
[/, 2, ), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, result, =, 29]
[), ;, result, =, 29, *, result, +, item, ., hashCode, (, ), ;, }, result, =, 29, *, result]
[=, 29, *, result, +, item, ., hashCode, (, ), ;, }, result, =, 29, *, result, +, this, .]
[;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;, result, =, 29, *, result, +, (, this]
[+, item, ., hashCode, (, ), ;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;, result, =]
[*, result, +, item, ., hashCode, (, ), ;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;]
[+, item, ., hashCode, (, ), ;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;, result, =]
[;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;, result, =, 29, *, result, +, (, this]
[., hashCode, (, ), ;, }, result, =, 29, *, result, +, this, ., maximumItemCount, ;, result, =, 29, *]
[=, 29, *, result, +, this, ., maximumItemCount, ;, result, =, 29, *, result, +, (, this, ., autoSort, ?]
[;, result, =, 29, *, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =, 29]
[+, this, ., maximumItemCount, ;, result, =, 29, *, result, +, (, this, ., autoSort, ?, 1, :, 0, )]
[*, result, +, this, ., maximumItemCount, ;, result, =, 29, *, result, +, (, this, ., autoSort, ?, 1, :]
[+, this, ., maximumItemCount, ;, result, =, 29, *, result, +, (, this, ., autoSort, ?, 1, :, 0, )]
[;, result, =, 29, *, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =, 29]
[., maximumItemCount, ;, result, =, 29, *, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;, result]
[=, 29, *, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =, 29, *, result]
[;, result, =, 29, *, result, +, (, this, ., allowDuplicateXValues, ?, 1, :, 0, ), ;, return, result, ;]
[+, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (, this, .]
[*, result, +, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (]
[+, (, this, ., autoSort, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (, this, .]
[;, result, =, 29, *, result, +, (, this, ., allowDuplicateXValues, ?, 1, :, 0, ), ;, return, result, ;]
[), ;, result, =, 29, *, result, +, (, this, ., allowDuplicateXValues, ?, 1, :, 0, ), ;, return, result]
[?, 1, :, 0, ), ;, result, =, 29, *, result, +, (, this, ., allowDuplicateXValues, ?, 1, :, 0]
[., autoSort, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (, this, ., allowDuplicateXValues, ?, 1]
[:, 0, ), ;, result, =, 29, *, result, +, (, this, ., allowDuplicateXValues, ?, 1, :, 0, ), ;]
[), ;, result, =, 29, *, result, +, (, this, ., allowDuplicateXValues, ?, 1, :, 0, ), ;, return, result]
[=, 29, *, result, +, (, this, ., allowDuplicateXValues, ?, 1, :, 0, ), ;, return, result, ;, }, }]
[;, return, result, ;, }, }]
[+, (, this, ., allowDuplicateXValues, ?, 1, :, 0, ), ;, return, result, ;, }, }]
[*, result, +, (, this, ., allowDuplicateXValues, ?, 1, :, 0, ), ;, return, result, ;, }, }]
[+, (, this, ., allowDuplicateXValues, ?, 1, :, 0, ), ;, return, result, ;, }, }]
[;, return, result, ;, }, }]
[), ;, return, result, ;, }, }]
[?, 1, :, 0, ), ;, return, result, ;, }, }]
[., allowDuplicateXValues, ?, 1, :, 0, ), ;, return, result, ;, }, }]
[:, 0, ), ;, return, result, ;, }, }]
[), ;, return, result, ;, }, }]
[;, }, }]
