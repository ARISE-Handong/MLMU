[implements, RelationshipVisitor, <, Boolean, >, {, @, Override, public, Boolean, caseUnknownType, (, JSType, thisType, ,, JSType, thatType, ), {, return]
[,, JSType, thatType, ), {, return, true, ;, }, @, Override, public, Boolean, caseNoType, (, JSType, thatType, ), {, return]
[(, JSType, thatType, ), {, return, true, ;, }, @, Override, public, Boolean, caseNoObjectType, (, JSType, thatType, ), {, return]
[(, JSType, thatType, ), {, return, true, ;, }, @, Override, public, Boolean, caseAllType, (, JSType, thatType, ), {, return]
[{, return, true, ;, }, boolean, canCastToUnion, (, JSType, thisType, ,, UnionType, unionType, ), {, for, (, JSType, type, :]
[{, return, true, ;, }, boolean, canCastToUnion, (, JSType, thisType, ,, UnionType, unionType, ), {, for, (, JSType, type, :]
[thisType, ,, UnionType, unionType, ), {, for, (, JSType, type, :, unionType, ., getAlternates, (, ), ), {, if, (]
[thisType, ,, UnionType, unionType, ), {, for, (, JSType, type, :, unionType, ., getAlternates, (, ), ), {, if, (]
[), {, for, (, JSType, type, :, unionType, ., getAlternates, (, ), ), {, if, (, thisType, ., visit, (]
[for, (, JSType, type, :, unionType, ., getAlternates, (, ), ), {, if, (, thisType, ., visit, (, this, ,]
[unionType, ., getAlternates, (, ), ), {, if, (, thisType, ., visit, (, this, ,, type, ), ), {, return]
[), {, if, (, thisType, ., visit, (, this, ,, type, ), ), {, return, true, ;, }, }, return]
[true, ;, }, }, return, false, ;, }, boolean, canCastToFunction, (, JSType, thisType, ,, FunctionType, functionType, ), {, if, (]
[true, ;, }, }, return, false, ;, }, boolean, canCastToFunction, (, JSType, thisType, ,, FunctionType, functionType, ), {, if, (]
[boolean, canCastToFunction, (, JSType, thisType, ,, FunctionType, functionType, ), {, if, (, thisType, ., isFunctionType, (, ), ), {, return]
[FunctionType, functionType, ), {, if, (, thisType, ., isFunctionType, (, ), ), {, return, true, ;, }, else, {, return]
[FunctionType, functionType, ), {, if, (, thisType, ., isFunctionType, (, ), ), {, return, true, ;, }, else, {, return]
[FunctionType, functionType, ), {, if, (, thisType, ., isFunctionType, (, ), ), {, return, true, ;, }, else, {, return]
[if, (, thisType, ., isFunctionType, (, ), ), {, return, true, ;, }, else, {, return, thisType, ., isSubtype, (]
[., isFunctionType, (, ), ), {, return, true, ;, }, else, {, return, thisType, ., isSubtype, (, functionType, ), ||]
[., isFunctionType, (, ), ), {, return, true, ;, }, else, {, return, thisType, ., isSubtype, (, functionType, ), ||]
[), {, return, true, ;, }, else, {, return, thisType, ., isSubtype, (, functionType, ), ||, functionType, ., isSubtype, (]
[functionType, ., isSubtype, (, thisType, ), ;, }, }, private, boolean, isInterface, (, JSType, type, ), {, ObjectType, objType, =]
[functionType, ., isSubtype, (, thisType, ), ;, }, }, private, boolean, isInterface, (, JSType, type, ), {, ObjectType, objType, =]
[}, private, boolean, isInterface, (, JSType, type, ), {, ObjectType, objType, =, type, ., toObjectType, (, ), ;, if, (]
[}, private, boolean, isInterface, (, JSType, type, ), {, ObjectType, objType, =, type, ., toObjectType, (, ), ;, if, (]
[boolean, isInterface, (, JSType, type, ), {, ObjectType, objType, =, type, ., toObjectType, (, ), ;, if, (, objType, !=]
[{, ObjectType, objType, =, type, ., toObjectType, (, ), ;, if, (, objType, !=, null, ), {, JSType, constructor, =]
[{, ObjectType, objType, =, type, ., toObjectType, (, ), ;, if, (, objType, !=, null, ), {, JSType, constructor, =]
[(, ), ;, if, (, objType, !=, null, ), {, JSType, constructor, =, objType, ., getConstructor, (, ), ;, return]
[(, ), ;, if, (, objType, !=, null, ), {, JSType, constructor, =, objType, ., getConstructor, (, ), ;, return]
[(, ), ;, if, (, objType, !=, null, ), {, JSType, constructor, =, objType, ., getConstructor, (, ), ;, return]
[;, if, (, objType, !=, null, ), {, JSType, constructor, =, objType, ., getConstructor, (, ), ;, return, constructor, !=]
[(, objType, !=, null, ), {, JSType, constructor, =, objType, ., getConstructor, (, ), ;, return, constructor, !=, null, &&]
[(, objType, !=, null, ), {, JSType, constructor, =, objType, ., getConstructor, (, ), ;, return, constructor, !=, null, &&]
[=, objType, ., getConstructor, (, ), ;, return, constructor, !=, null, &&, constructor, ., isInterface, (, ), ;, }, return]
[(, ), ;, }, return, false, ;, }, Boolean, castCastToHelper, (, JSType, thisType, ,, JSType, thatType, ), {, if, (]
[(, ), ;, }, return, false, ;, }, Boolean, castCastToHelper, (, JSType, thisType, ,, JSType, thatType, ), {, if, (]
[(, ), ;, }, return, false, ;, }, Boolean, castCastToHelper, (, JSType, thisType, ,, JSType, thatType, ), {, if, (]
[(, ), ;, }, return, false, ;, }, Boolean, castCastToHelper, (, JSType, thisType, ,, JSType, thatType, ), {, if, (]
[(, ), ;, }, return, false, ;, }, Boolean, castCastToHelper, (, JSType, thisType, ,, JSType, thatType, ), {, if, (]
[;, }, Boolean, castCastToHelper, (, JSType, thisType, ,, JSType, thatType, ), {, if, (, thatType, ., isUnknownType, (, ), ||]
[;, }, Boolean, castCastToHelper, (, JSType, thisType, ,, JSType, thatType, ), {, if, (, thatType, ., isUnknownType, (, ), ||]
[thisType, ,, JSType, thatType, ), {, if, (, thatType, ., isUnknownType, (, ), ||, thatType, ., isAllType, (, ), ||]
[thisType, ,, JSType, thatType, ), {, if, (, thatType, ., isUnknownType, (, ), ||, thatType, ., isAllType, (, ), ||]
[if, (, thatType, ., isUnknownType, (, ), ||, thatType, ., isAllType, (, ), ||, thatType, ., isNoObjectType, (, ), ||]
[if, (, thatType, ., isUnknownType, (, ), ||, thatType, ., isAllType, (, ), ||, thatType, ., isNoObjectType, (, ), ||]
[thatType, ., isAllType, (, ), ||, thatType, ., isNoObjectType, (, ), ||, thatType, ., isNoType, (, ), ), {, return]
[thatType, ., isNoObjectType, (, ), ||, thatType, ., isNoType, (, ), ), {, return, true, ;, }, else, if, (]
[thatType, ., isNoObjectType, (, ), ||, thatType, ., isNoType, (, ), ), {, return, true, ;, }, else, if, (]
[thatType, ., isNoObjectType, (, ), ||, thatType, ., isNoType, (, ), ), {, return, true, ;, }, else, if, (]
[thatType, ., isNoType, (, ), ), {, return, true, ;, }, else, if, (, thisType, ., isRecordType, (, ), ||]
[thatType, ., isNoType, (, ), ), {, return, true, ;, }, else, if, (, thisType, ., isRecordType, (, ), ||]
[true, ;, }, else, if, (, thisType, ., isRecordType, (, ), ||, thatType, ., isRecordType, (, ), ), {, return]
[thisType, ., isRecordType, (, ), ||, thatType, ., isRecordType, (, ), ), {, return, true, ;, }, else, if, (]
[thisType, ., isRecordType, (, ), ||, thatType, ., isRecordType, (, ), ), {, return, true, ;, }, else, if, (]
[isRecordType, (, ), ||, thatType, ., isRecordType, (, ), ), {, return, true, ;, }, else, if, (, isInterface, (]
[||, thatType, ., isRecordType, (, ), ), {, return, true, ;, }, else, if, (, isInterface, (, thisType, ), ||]
[., isRecordType, (, ), ), {, return, true, ;, }, else, if, (, isInterface, (, thisType, ), ||, isInterface, (]
[{, return, true, ;, }, else, if, (, isInterface, (, thisType, ), ||, isInterface, (, thatType, ), ), {, return]
[if, (, isInterface, (, thisType, ), ||, isInterface, (, thatType, ), ), {, return, true, ;, }, else, if, (]
[if, (, isInterface, (, thisType, ), ||, isInterface, (, thatType, ), ), {, return, true, ;, }, else, if, (]
[(, thatType, ), ), {, return, true, ;, }, else, if, (, thatType, ., isEnumElementType, (, ), ), {, return]
[(, thatType, ), ), {, return, true, ;, }, else, if, (, thatType, ., isEnumElementType, (, ), ), {, return]
[{, return, true, ;, }, else, if, (, thatType, ., isEnumElementType, (, ), ), {, return, thisType, ., visit, (]
[true, ;, }, else, if, (, thatType, ., isEnumElementType, (, ), ), {, return, thisType, ., visit, (, this, ,]
[true, ;, }, else, if, (, thatType, ., isEnumElementType, (, ), ), {, return, thisType, ., visit, (, this, ,]
[true, ;, }, else, if, (, thatType, ., isEnumElementType, (, ), ), {, return, thisType, ., visit, (, this, ,]
[., visit, (, this, ,, thatType, ., toMaybeEnumElementType, (, ), ., getPrimitiveType, (, ), ), ;, }, else, if, (]
[., visit, (, this, ,, thatType, ., toMaybeEnumElementType, (, ), ., getPrimitiveType, (, ), ), ;, }, else, if, (]
[(, ), ., getPrimitiveType, (, ), ), ;, }, else, if, (, thatType, ., isUnionType, (, ), ), {, return]
[., getPrimitiveType, (, ), ), ;, }, else, if, (, thatType, ., isUnionType, (, ), ), {, return, canCastToUnion, (]
[(, ), ), ;, }, else, if, (, thatType, ., isUnionType, (, ), ), {, return, canCastToUnion, (, thisType, ,]
[(, ), ), ;, }, else, if, (, thatType, ., isUnionType, (, ), ), {, return, canCastToUnion, (, thisType, ,]
[(, ), ), {, return, canCastToUnion, (, thisType, ,, thatType, ., toMaybeUnionType, (, ), ), ;, }, else, if, (]
[(, ), ), {, return, canCastToUnion, (, thisType, ,, thatType, ., toMaybeUnionType, (, ), ), ;, }, else, if, (]
[,, thatType, ., toMaybeUnionType, (, ), ), ;, }, else, if, (, thatType, ., isFunctionType, (, ), ), {, return]
[., toMaybeUnionType, (, ), ), ;, }, else, if, (, thatType, ., isFunctionType, (, ), ), {, return, canCastToFunction, (]
[(, ), ), ;, }, else, if, (, thatType, ., isFunctionType, (, ), ), {, return, canCastToFunction, (, thisType, ,]
[(, ), ), ;, }, else, if, (, thatType, ., isFunctionType, (, ), ), {, return, canCastToFunction, (, thisType, ,]
[(, ), ), {, return, canCastToFunction, (, thisType, ,, thatType, ., toMaybeFunctionType, (, ), ), ;, }, else, if, (]
[(, ), ), {, return, canCastToFunction, (, thisType, ,, thatType, ., toMaybeFunctionType, (, ), ), ;, }, else, if, (]
[,, thatType, ., toMaybeFunctionType, (, ), ), ;, }, else, if, (, thatType, ., isParameterizedType, (, ), ), {, return]
[,, thatType, ., toMaybeFunctionType, (, ), ), ;, }, else, if, (, thatType, ., isParameterizedType, (, ), ), {, return]
[(, ), ), ;, }, else, if, (, thatType, ., isParameterizedType, (, ), ), {, return, thisType, ., visit, (]
[), ;, }, else, if, (, thatType, ., isParameterizedType, (, ), ), {, return, thisType, ., visit, (, this, ,]
[), ;, }, else, if, (, thatType, ., isParameterizedType, (, ), ), {, return, thisType, ., visit, (, this, ,]
[), ;, }, else, if, (, thatType, ., isParameterizedType, (, ), ), {, return, thisType, ., visit, (, this, ,]
[return, thisType, ., visit, (, this, ,, thatType, ., toMaybeParameterizedType, (, ), ., getReferencedTypeInternal, (, ), ), ;, }, return]
[return, thisType, ., visit, (, this, ,, thatType, ., toMaybeParameterizedType, (, ), ., getReferencedTypeInternal, (, ), ), ;, }, return]
[return, thisType, ., visit, (, this, ,, thatType, ., toMaybeParameterizedType, (, ), ., getReferencedTypeInternal, (, ), ), ;, }, return]
[(, this, ,, thatType, ., toMaybeParameterizedType, (, ), ., getReferencedTypeInternal, (, ), ), ;, }, return, thisType, ., isSubtype, (]
[thatType, ., toMaybeParameterizedType, (, ), ., getReferencedTypeInternal, (, ), ), ;, }, return, thisType, ., isSubtype, (, thatType, ), ||]
[thatType, ., toMaybeParameterizedType, (, ), ., getReferencedTypeInternal, (, ), ), ;, }, return, thisType, ., isSubtype, (, thatType, ), ||]
[), ., getReferencedTypeInternal, (, ), ), ;, }, return, thisType, ., isSubtype, (, thatType, ), ||, thatType, ., isSubtype, (]
[isSubtype, (, thisType, ), ;, }, @, Override, public, Boolean, caseValueType, (, ValueType, thisType, ,, JSType, thatType, ), {, return]
[thisType, ), ;, }, @, Override, public, Boolean, caseValueType, (, ValueType, thisType, ,, JSType, thatType, ), {, return, castCastToHelper, (]
[;, }, @, Override, public, Boolean, caseValueType, (, ValueType, thisType, ,, JSType, thatType, ), {, return, castCastToHelper, (, thisType, ,]
[thisType, ,, thatType, ), ;, }, @, Override, public, Boolean, caseObjectType, (, ObjectType, thisType, ,, JSType, thatType, ), {, return]
[thatType, ), ;, }, @, Override, public, Boolean, caseObjectType, (, ObjectType, thisType, ,, JSType, thatType, ), {, return, castCastToHelper, (]
[;, }, @, Override, public, Boolean, caseObjectType, (, ObjectType, thisType, ,, JSType, thatType, ), {, return, castCastToHelper, (, thisType, ,]
[thisType, ,, thatType, ), ;, }, @, Override, public, Boolean, caseFunctionType, (, FunctionType, thisType, ,, JSType, thatType, ), {, return]
[thatType, ), ;, }, @, Override, public, Boolean, caseFunctionType, (, FunctionType, thisType, ,, JSType, thatType, ), {, return, castCastToHelper, (]
[;, }, @, Override, public, Boolean, caseFunctionType, (, FunctionType, thisType, ,, JSType, thatType, ), {, return, castCastToHelper, (, thisType, ,]
[thatType, ), ;, }, @, Override, public, Boolean, caseUnionType, (, UnionType, thisType, ,, JSType, thatType, ), {, boolean, visited, =]
[Boolean, caseUnionType, (, UnionType, thisType, ,, JSType, thatType, ), {, boolean, visited, =, false, ;, for, (, JSType, type, :]
[Boolean, caseUnionType, (, UnionType, thisType, ,, JSType, thatType, ), {, boolean, visited, =, false, ;, for, (, JSType, type, :]
[{, boolean, visited, =, false, ;, for, (, JSType, type, :, thisType, ., getAlternates, (, ), ), {, if, (]
[{, boolean, visited, =, false, ;, for, (, JSType, type, :, thisType, ., getAlternates, (, ), ), {, if, (]
[{, boolean, visited, =, false, ;, for, (, JSType, type, :, thisType, ., getAlternates, (, ), ), {, if, (]
[for, (, JSType, type, :, thisType, ., getAlternates, (, ), ), {, if, (, type, ., isVoidType, (, ), ||]
[for, (, JSType, type, :, thisType, ., getAlternates, (, ), ), {, if, (, type, ., isVoidType, (, ), ||]
[), {, if, (, type, ., isVoidType, (, ), ||, type, ., isNullType, (, ), ), {, }, else, {]
[if, (, type, ., isVoidType, (, ), ||, type, ., isNullType, (, ), ), {, }, else, {, visited, =]
[isVoidType, (, ), ||, type, ., isNullType, (, ), ), {, }, else, {, visited, =, true, ;, if, (]
[isVoidType, (, ), ||, type, ., isNullType, (, ), ), {, }, else, {, visited, =, true, ;, if, (]
[type, ., isNullType, (, ), ), {, }, else, {, visited, =, true, ;, if, (, type, ., visit, (]
[isNullType, (, ), ), {, }, else, {, visited, =, true, ;, if, (, type, ., visit, (, this, ,]
[}, else, {, visited, =, true, ;, if, (, type, ., visit, (, this, ,, thatType, ), ), {, return]
[if, (, type, ., visit, (, this, ,, thatType, ), ), {, return, true, ;, }, }, }, if, (]
[(, type, ., visit, (, this, ,, thatType, ), ), {, return, true, ;, }, }, }, if, (, !]
[,, thatType, ), ), {, return, true, ;, }, }, }, if, (, !, visited, ), {, JSType, NULL_TYPE, =]
[,, thatType, ), ), {, return, true, ;, }, }, }, if, (, !, visited, ), {, JSType, NULL_TYPE, =]
[{, return, true, ;, }, }, }, if, (, !, visited, ), {, JSType, NULL_TYPE, =, thisType, ., getNativeType, (]
[{, return, true, ;, }, }, }, if, (, !, visited, ), {, JSType, NULL_TYPE, =, thisType, ., getNativeType, (]
[(, !, visited, ), {, JSType, NULL_TYPE, =, thisType, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ;, JSType, VOID_TYPE, =]
[(, !, visited, ), {, JSType, NULL_TYPE, =, thisType, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ;, JSType, VOID_TYPE, =]
[{, JSType, NULL_TYPE, =, thisType, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ;, JSType, VOID_TYPE, =, thisType, ., getNativeType, (]
[{, JSType, NULL_TYPE, =, thisType, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ;, JSType, VOID_TYPE, =, thisType, ., getNativeType, (]
[getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ;, JSType, VOID_TYPE, =, thisType, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ;, return]
[getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ;, JSType, VOID_TYPE, =, thisType, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ;, return]
[getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ;, JSType, VOID_TYPE, =, thisType, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ;, return]
[NULL_TYPE, ), ;, JSType, VOID_TYPE, =, thisType, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ;, return, NULL_TYPE, ., visit, (]
[;, JSType, VOID_TYPE, =, thisType, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ;, return, NULL_TYPE, ., visit, (, this, ,]
[=, thisType, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ;, return, NULL_TYPE, ., visit, (, this, ,, thatType, ), ||]
[=, thisType, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ;, return, NULL_TYPE, ., visit, (, this, ,, thatType, ), ||]
[(, JSTypeNative, ., VOID_TYPE, ), ;, return, NULL_TYPE, ., visit, (, this, ,, thatType, ), ||, VOID_TYPE, ., visit, (]
[., VOID_TYPE, ), ;, return, NULL_TYPE, ., visit, (, this, ,, thatType, ), ||, VOID_TYPE, ., visit, (, this, ,]
[NULL_TYPE, ., visit, (, this, ,, thatType, ), ||, VOID_TYPE, ., visit, (, this, ,, thatType, ), ;, }, return]
[;, }, return, false, ;, }, @, Override, public, Boolean, caseParameterizedType, (, ParameterizedType, thisType, ,, JSType, thatType, ), {, return]
[;, }, return, false, ;, }, @, Override, public, Boolean, caseParameterizedType, (, ParameterizedType, thisType, ,, JSType, thatType, ), {, return]
[;, }, return, false, ;, }, @, Override, public, Boolean, caseParameterizedType, (, ParameterizedType, thisType, ,, JSType, thatType, ), {, return]
[public, Boolean, caseParameterizedType, (, ParameterizedType, thisType, ,, JSType, thatType, ), {, return, thisType, ., getReferencedTypeInternal, (, ), ., visit, (]
[caseParameterizedType, (, ParameterizedType, thisType, ,, JSType, thatType, ), {, return, thisType, ., getReferencedTypeInternal, (, ), ., visit, (, this, ,]
[this, ,, thatType, ), ;, }, @, Override, public, Boolean, caseTemplateType, (, TemplateType, thisType, ,, JSType, thatType, ), {, return]
[), {, return, true, ;, }, @, Override, public, Boolean, caseEnumElementType, (, EnumElementType, typeType, ,, JSType, thatType, ), {, return]
[), {, return, true, ;, }, @, Override, public, Boolean, caseEnumElementType, (, EnumElementType, typeType, ,, JSType, thatType, ), {, return]
[), {, return, true, ;, }, @, Override, public, Boolean, caseEnumElementType, (, EnumElementType, typeType, ,, JSType, thatType, ), {, return]
[public, Boolean, caseEnumElementType, (, EnumElementType, typeType, ,, JSType, thatType, ), {, return, typeType, ., getPrimitiveType, (, ), ., visit, (]
[caseEnumElementType, (, EnumElementType, typeType, ,, JSType, thatType, ), {, return, typeType, ., getPrimitiveType, (, ), ., visit, (, this, ,]
