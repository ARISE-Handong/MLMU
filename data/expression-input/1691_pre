[{, public, StrokeList, (, ), {, super, (, ), ;, }, public, Stroke, getStroke, (, int, index, ), {, return]
[(, ), {, super, (, ), ;, }, public, Stroke, getStroke, (, int, index, ), {, return, (, Stroke, )]
[{, super, (, ), ;, }, public, Stroke, getStroke, (, int, index, ), {, return, (, Stroke, ), get, (]
[(, Stroke, ), get, (, index, ), ;, }, public, void, setStroke, (, int, index, ,, Stroke, stroke, ), {]
[), get, (, index, ), ;, }, public, void, setStroke, (, int, index, ,, Stroke, stroke, ), {, set, (]
[(, index, ), ;, }, public, void, setStroke, (, int, index, ,, Stroke, stroke, ), {, set, (, index, ,]
[stroke, ), {, set, (, index, ,, stroke, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[stroke, ), {, set, (, index, ,, stroke, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[return, super, ., clone, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[(, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null, ), {, return, false, ;, }, if, (]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null, ), {, return, false, ;, }, if, (]
[(, Object, obj, ), {, if, (, obj, ==, null, ), {, return, false, ;, }, if, (, obj, ==]
[{, if, (, obj, ==, null, ), {, return, false, ;, }, if, (, obj, ==, this, ), {, return]
[null, ), {, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[null, ), {, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[}, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, obj, instanceof, StrokeList, ), {, return]
[}, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, obj, instanceof, StrokeList, ), {, return]
[==, this, ), {, return, true, ;, }, if, (, obj, instanceof, StrokeList, ), {, return, super, ., equals, (]
[true, ;, }, if, (, obj, instanceof, StrokeList, ), {, return, super, ., equals, (, obj, ), ;, }, return]
[return, super, ., equals, (, obj, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return]
[return, super, ., equals, (, obj, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return]
[), {, return, super, ., hashCode, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[), {, return, super, ., hashCode, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[}, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, int, count, =]
[(, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, int, count, =, size, (, ), ;]
[(, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, int, count, =, size, (, ), ;]
[throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, int, count, =, size, (, ), ;, stream, ., writeInt, (]
[;, int, count, =, size, (, ), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =]
[count, =, size, (, ), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;]
[count, =, size, (, ), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;]
[size, (, ), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;, i, <]
[), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, Stroke, stroke, =]
[for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, Stroke, stroke, =, getStroke, (]
[0, ;, i, <, count, ;, i, ++, ), {, Stroke, stroke, =, getStroke, (, i, ), ;, if, (]
[0, ;, i, <, count, ;, i, ++, ), {, Stroke, stroke, =, getStroke, (, i, ), ;, if, (]
[i, <, count, ;, i, ++, ), {, Stroke, stroke, =, getStroke, (, i, ), ;, if, (, stroke, !=]
[;, i, ++, ), {, Stroke, stroke, =, getStroke, (, i, ), ;, if, (, stroke, !=, null, ), {]
[;, i, ++, ), {, Stroke, stroke, =, getStroke, (, i, ), ;, if, (, stroke, !=, null, ), {]
[{, Stroke, stroke, =, getStroke, (, i, ), ;, if, (, stroke, !=, null, ), {, stream, ., writeInt, (]
[=, getStroke, (, i, ), ;, if, (, stroke, !=, null, ), {, stream, ., writeInt, (, i, ), ;]
[=, getStroke, (, i, ), ;, if, (, stroke, !=, null, ), {, stream, ., writeInt, (, i, ), ;]
[), ;, if, (, stroke, !=, null, ), {, stream, ., writeInt, (, i, ), ;, SerialUtilities, ., writeStroke, (]
[if, (, stroke, !=, null, ), {, stream, ., writeInt, (, i, ), ;, SerialUtilities, ., writeStroke, (, stroke, ,]
[{, stream, ., writeInt, (, i, ), ;, SerialUtilities, ., writeStroke, (, stroke, ,, stream, ), ;, }, else, {]
[{, stream, ., writeInt, (, i, ), ;, SerialUtilities, ., writeStroke, (, stroke, ,, stream, ), ;, }, else, {]
[(, i, ), ;, SerialUtilities, ., writeStroke, (, stroke, ,, stream, ), ;, }, else, {, stream, ., writeInt, (]
[i, ), ;, SerialUtilities, ., writeStroke, (, stroke, ,, stream, ), ;, }, else, {, stream, ., writeInt, (, -]
[(, -, 1, ), ;, }, }, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[(, -, 1, ), ;, }, }, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, int, count, =]
[void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, int, count, =]
[stream, ., defaultReadObject, (, ), ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =]
[defaultReadObject, (, ), ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;]
[defaultReadObject, (, ), ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;]
[), ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, int, index, =]
[), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, int, index, =]
[;, i, <, count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (]
[;, i, <, count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (]
[<, count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=]
[count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -]
[++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {]
[{, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {, setStroke, (]
[index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {, setStroke, (, index, ,]
[index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {, setStroke, (, index, ,]
[readInt, (, ), ;, if, (, index, !=, -, 1, ), {, setStroke, (, index, ,, SerialUtilities, ., readStroke, (]
