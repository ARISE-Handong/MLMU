[data, ., general, ., DatasetSelectionState, ;, public, class, BufferedImageRenderingSource, implements, RenderingSource, {, private, BufferedImage, image, ;, private, List, selectionStates, =]
[selectionStates, =, new, java, ., util, ., ArrayList, (, ), ;, public, BufferedImageRenderingSource, (, BufferedImage, image, ), {, if, (]
[selectionStates, =, new, java, ., util, ., ArrayList, (, ), ;, public, BufferedImageRenderingSource, (, BufferedImage, image, ), {, if, (]
[new, java, ., util, ., ArrayList, (, ), ;, public, BufferedImageRenderingSource, (, BufferedImage, image, ), {, if, (, image, ==]
[., ArrayList, (, ), ;, public, BufferedImageRenderingSource, (, BufferedImage, image, ), {, if, (, image, ==, null, ), {, throw]
[), ;, public, BufferedImageRenderingSource, (, BufferedImage, image, ), {, if, (, image, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, BufferedImage, image, ), {, if, (, image, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'image' argument.", ), ;, }]
[(, BufferedImage, image, ), {, if, (, image, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'image' argument.", ), ;, }]
[{, if, (, image, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'image' argument.", ), ;, }, this, ., image, =]
[IllegalArgumentException, (, "Null 'image' argument.", ), ;, }, this, ., image, =, image, ;, }, public, Graphics2D, createGraphics2D, (, ), {, return]
[IllegalArgumentException, (, "Null 'image' argument.", ), ;, }, this, ., image, =, image, ;, }, public, Graphics2D, createGraphics2D, (, ), {, return]
[IllegalArgumentException, (, "Null 'image' argument.", ), ;, }, this, ., image, =, image, ;, }, public, Graphics2D, createGraphics2D, (, ), {, return]
[this, ., image, ., createGraphics, (, ), ;, }, public, DatasetSelectionState, getSelectionState, (, Dataset, dataset, ), {, Iterator, iterator, =]
[this, ., image, ., createGraphics, (, ), ;, }, public, DatasetSelectionState, getSelectionState, (, Dataset, dataset, ), {, Iterator, iterator, =]
[this, ., image, ., createGraphics, (, ), ;, }, public, DatasetSelectionState, getSelectionState, (, Dataset, dataset, ), {, Iterator, iterator, =]
[DatasetSelectionState, getSelectionState, (, Dataset, dataset, ), {, Iterator, iterator, =, this, ., selectionStates, ., iterator, (, ), ;, while, (]
[DatasetSelectionState, getSelectionState, (, Dataset, dataset, ), {, Iterator, iterator, =, this, ., selectionStates, ., iterator, (, ), ;, while, (]
[this, ., selectionStates, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, DatasetAndSelection, das, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, DatasetAndSelection, das, =, (, DatasetAndSelection, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, DatasetAndSelection, das, =, (, DatasetAndSelection, )]
[., hasNext, (, ), ), {, DatasetAndSelection, das, =, (, DatasetAndSelection, ), iterator, ., next, (, ), ;, if, (]
[., hasNext, (, ), ), {, DatasetAndSelection, das, =, (, DatasetAndSelection, ), iterator, ., next, (, ), ;, if, (]
[., hasNext, (, ), ), {, DatasetAndSelection, das, =, (, DatasetAndSelection, ), iterator, ., next, (, ), ;, if, (]
[DatasetAndSelection, das, =, (, DatasetAndSelection, ), iterator, ., next, (, ), ;, if, (, das, ., getDataset, (, ), ==]
[DatasetAndSelection, ), iterator, ., next, (, ), ;, if, (, das, ., getDataset, (, ), ==, dataset, ), {, return]
[DatasetAndSelection, ), iterator, ., next, (, ), ;, if, (, das, ., getDataset, (, ), ==, dataset, ), {, return]
[(, das, ., getDataset, (, ), ==, dataset, ), {, return, das, ., getSelection, (, ), ;, }, }, return]
[(, ), ;, }, }, return, null, ;, }, public, void, putSelectionState, (, Dataset, dataset, ,, DatasetSelectionState, state, ), {]
[(, ), ;, }, }, return, null, ;, }, public, void, putSelectionState, (, Dataset, dataset, ,, DatasetSelectionState, state, ), {]
[(, ), ;, }, }, return, null, ;, }, public, void, putSelectionState, (, Dataset, dataset, ,, DatasetSelectionState, state, ), {]
[null, ;, }, public, void, putSelectionState, (, Dataset, dataset, ,, DatasetSelectionState, state, ), {, this, ., selectionStates, ., add, (]
[public, void, putSelectionState, (, Dataset, dataset, ,, DatasetSelectionState, state, ), {, this, ., selectionStates, ., add, (, new, DatasetAndSelection, (]
[putSelectionState, (, Dataset, dataset, ,, DatasetSelectionState, state, ), {, this, ., selectionStates, ., add, (, new, DatasetAndSelection, (, dataset, ,]
