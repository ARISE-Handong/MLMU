[;, public, static, final, BigReal, ONE, =, new, BigReal, (, BigDecimal, ., ONE, ), ;, private, static, final, long, serialVersionUID]
[), ;, public, static, final, BigReal, ONE, =, new, BigReal, (, BigDecimal, ., ONE, ), ;, private, static, final, long]
[., ZERO, ), ;, public, static, final, BigReal, ONE, =, new, BigReal, (, BigDecimal, ., ONE, ), ;, private, static]
[;, private, static, final, long, serialVersionUID, =, 4984534880991310382L, ;, private, final, BigDecimal, d, ;, private, RoundingMode, roundingMode, =, RoundingMode, .]
[), ;, private, static, final, long, serialVersionUID, =, 4984534880991310382L, ;, private, final, BigDecimal, d, ;, private, RoundingMode, roundingMode, =, RoundingMode]
[., ONE, ), ;, private, static, final, long, serialVersionUID, =, 4984534880991310382L, ;, private, final, BigDecimal, d, ;, private, RoundingMode, roundingMode]
[;, private, final, BigDecimal, d, ;, private, RoundingMode, roundingMode, =, RoundingMode, ., HALF_UP, ;, private, int, scale, =, 64, ;]
[;, private, int, scale, =, 64, ;, public, BigReal, (, BigDecimal, val, ), {, d, =, val, ;, }, public]
[., HALF_UP, ;, private, int, scale, =, 64, ;, public, BigReal, (, BigDecimal, val, ), {, d, =, val, ;]
[;, public, BigReal, (, BigDecimal, val, ), {, d, =, val, ;, }, public, BigReal, (, BigInteger, val, ), {]
[=, val, ;, }, public, BigReal, (, BigInteger, val, ), {, d, =, new, BigDecimal, (, val, ), ;, }]
[;, }, public, BigReal, (, BigInteger, val, ), {, d, =, new, BigDecimal, (, val, ), ;, }, public, BigReal]
[=, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ), {, d, =]
[;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ), {, d, =, new, BigDecimal, (, unscaledVal, ,, scale]
[), ;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ), {, d, =, new, BigDecimal, (, unscaledVal, ,]
[=, new, BigDecimal, (, unscaledVal, ,, scale, ), ;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ,, MathContext]
[;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (]
[,, scale, ), ;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ,, MathContext, mc, ), {, d, =]
[), ;, }, public, BigReal, (, BigInteger, unscaledVal, ,, int, scale, ,, MathContext, mc, ), {, d, =, new, BigDecimal]
[=, new, BigDecimal, (, unscaledVal, ,, scale, ,, mc, ), ;, }, public, BigReal, (, BigInteger, val, ,, MathContext, mc]
[;, }, public, BigReal, (, BigInteger, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,, mc]
[,, scale, ,, mc, ), ;, }, public, BigReal, (, BigInteger, val, ,, MathContext, mc, ), {, d, =, new]
[,, mc, ), ;, }, public, BigReal, (, BigInteger, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (]
[), ;, }, public, BigReal, (, BigInteger, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,]
[=, new, BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, char, [, ], in, ), {, d]
[;, }, public, BigReal, (, char, [, ], in, ), {, d, =, new, BigDecimal, (, in, ), ;, }]
[,, mc, ), ;, }, public, BigReal, (, char, [, ], in, ), {, d, =, new, BigDecimal, (, in]
[), ;, }, public, BigReal, (, char, [, ], in, ), {, d, =, new, BigDecimal, (, in, ), ;]
[=, new, BigDecimal, (, in, ), ;, }, public, BigReal, (, char, [, ], in, ,, int, offset, ,, int]
[;, }, public, BigReal, (, char, [, ], in, ,, int, offset, ,, int, len, ), {, d, =, new]
[), ;, }, public, BigReal, (, char, [, ], in, ,, int, offset, ,, int, len, ), {, d, =]
[=, new, BigDecimal, (, in, ,, offset, ,, len, ), ;, }, public, BigReal, (, char, [, ], in, ,]
[;, }, public, BigReal, (, char, [, ], in, ,, int, offset, ,, int, len, ,, MathContext, mc, ), {]
[,, offset, ,, len, ), ;, }, public, BigReal, (, char, [, ], in, ,, int, offset, ,, int, len]
[,, len, ), ;, }, public, BigReal, (, char, [, ], in, ,, int, offset, ,, int, len, ,, MathContext]
[), ;, }, public, BigReal, (, char, [, ], in, ,, int, offset, ,, int, len, ,, MathContext, mc, )]
[=, new, BigDecimal, (, in, ,, offset, ,, len, ,, mc, ), ;, }, public, BigReal, (, char, [, ]]
[;, }, public, BigReal, (, char, [, ], in, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, in]
[,, offset, ,, len, ,, mc, ), ;, }, public, BigReal, (, char, [, ], in, ,, MathContext, mc, )]
[,, len, ,, mc, ), ;, }, public, BigReal, (, char, [, ], in, ,, MathContext, mc, ), {, d]
[,, mc, ), ;, }, public, BigReal, (, char, [, ], in, ,, MathContext, mc, ), {, d, =, new]
[), ;, }, public, BigReal, (, char, [, ], in, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (]
[=, new, BigDecimal, (, in, ,, mc, ), ;, }, public, BigReal, (, double, val, ), {, d, =, new]
[;, }, public, BigReal, (, double, val, ), {, d, =, new, BigDecimal, (, val, ), ;, }, public, BigReal]
[,, mc, ), ;, }, public, BigReal, (, double, val, ), {, d, =, new, BigDecimal, (, val, ), ;]
[), ;, }, public, BigReal, (, double, val, ), {, d, =, new, BigDecimal, (, val, ), ;, }, public]
[=, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, double, val, ,, MathContext, mc, ), {, d, =]
[;, }, public, BigReal, (, double, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,, mc]
[), ;, }, public, BigReal, (, double, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,]
[=, new, BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, int, val, ), {, d, =, new]
[;, }, public, BigReal, (, int, val, ), {, d, =, new, BigDecimal, (, val, ), ;, }, public, BigReal]
[,, mc, ), ;, }, public, BigReal, (, int, val, ), {, d, =, new, BigDecimal, (, val, ), ;]
[), ;, }, public, BigReal, (, int, val, ), {, d, =, new, BigDecimal, (, val, ), ;, }, public]
[=, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, int, val, ,, MathContext, mc, ), {, d, =]
[;, }, public, BigReal, (, int, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,, mc]
[), ;, }, public, BigReal, (, int, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,]
[=, new, BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, long, val, ), {, d, =, new]
[;, }, public, BigReal, (, long, val, ), {, d, =, new, BigDecimal, (, val, ), ;, }, public, BigReal]
[,, mc, ), ;, }, public, BigReal, (, long, val, ), {, d, =, new, BigDecimal, (, val, ), ;]
[), ;, }, public, BigReal, (, long, val, ), {, d, =, new, BigDecimal, (, val, ), ;, }, public]
[=, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, long, val, ,, MathContext, mc, ), {, d, =]
[;, }, public, BigReal, (, long, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,, mc]
[), ;, }, public, BigReal, (, long, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,]
[=, new, BigDecimal, (, val, ,, mc, ), ;, }, public, BigReal, (, String, val, ), {, d, =, new]
[;, }, public, BigReal, (, String, val, ), {, d, =, new, BigDecimal, (, val, ), ;, }, public, BigReal]
[,, mc, ), ;, }, public, BigReal, (, String, val, ), {, d, =, new, BigDecimal, (, val, ), ;]
[), ;, }, public, BigReal, (, String, val, ), {, d, =, new, BigDecimal, (, val, ), ;, }, public]
[=, new, BigDecimal, (, val, ), ;, }, public, BigReal, (, String, val, ,, MathContext, mc, ), {, d, =]
[;, }, public, BigReal, (, String, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,, mc]
[), ;, }, public, BigReal, (, String, val, ,, MathContext, mc, ), {, d, =, new, BigDecimal, (, val, ,]
[=, new, BigDecimal, (, val, ,, mc, ), ;, }, public, RoundingMode, getRoundingMode, (, ), {, return, roundingMode, ;, }]
[;, }, public, RoundingMode, getRoundingMode, (, ), {, return, roundingMode, ;, }, public, void, setRoundingMode, (, RoundingMode, roundingMode, ), {]
[,, mc, ), ;, }, public, RoundingMode, getRoundingMode, (, ), {, return, roundingMode, ;, }, public, void, setRoundingMode, (, RoundingMode]
[), ;, }, public, RoundingMode, getRoundingMode, (, ), {, return, roundingMode, ;, }, public, void, setRoundingMode, (, RoundingMode, roundingMode, )]
[;, }, public, void, setRoundingMode, (, RoundingMode, roundingMode, ), {, this, ., roundingMode, =, roundingMode, ;, }, public, int, getScale]
[=, roundingMode, ;, }, public, int, getScale, (, ), {, return, scale, ;, }, public, void, setScale, (, int, scale]
[., roundingMode, =, roundingMode, ;, }, public, int, getScale, (, ), {, return, scale, ;, }, public, void, setScale, (]
[;, }, public, int, getScale, (, ), {, return, scale, ;, }, public, void, setScale, (, int, scale, ), {]
[;, }, public, void, setScale, (, int, scale, ), {, this, ., scale, =, scale, ;, }, public, BigReal, add]
[=, scale, ;, }, public, BigReal, add, (, BigReal, a, ), {, return, new, BigReal, (, d, ., add, (]
[., scale, =, scale, ;, }, public, BigReal, add, (, BigReal, a, ), {, return, new, BigReal, (, d, .]
[;, }, public, BigReal, add, (, BigReal, a, ), {, return, new, BigReal, (, d, ., add, (, a, .]
[;, }, public, BigReal, subtract, (, BigReal, a, ), {, return, new, BigReal, (, d, ., subtract, (, a, .]
[), ;, }, public, BigReal, subtract, (, BigReal, a, ), {, return, new, BigReal, (, d, ., subtract, (, a]
[., add, (, a, ., d, ), ), ;, }, public, BigReal, subtract, (, BigReal, a, ), {, return, new]
[), ), ;, }, public, BigReal, subtract, (, BigReal, a, ), {, return, new, BigReal, (, d, ., subtract, (]
[., d, ), ), ;, }, public, BigReal, subtract, (, BigReal, a, ), {, return, new, BigReal, (, d, .]
[;, }, public, BigReal, negate, (, ), {, return, new, BigReal, (, d, ., negate, (, ), ), ;, }]
[), ;, }, public, BigReal, negate, (, ), {, return, new, BigReal, (, d, ., negate, (, ), ), ;]
[., subtract, (, a, ., d, ), ), ;, }, public, BigReal, negate, (, ), {, return, new, BigReal, (]
[), ), ;, }, public, BigReal, negate, (, ), {, return, new, BigReal, (, d, ., negate, (, ), )]
[., d, ), ), ;, }, public, BigReal, negate, (, ), {, return, new, BigReal, (, d, ., negate, (]
[;, }, public, BigReal, divide, (, BigReal, a, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (, d, .]
[), ;, }, public, BigReal, divide, (, BigReal, a, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (, d]
[., negate, (, ), ), ;, }, public, BigReal, divide, (, BigReal, a, ), throws, MathArithmeticException, {, try, {, return]
[;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NOT_ALLOWED, ), ;, }, }, public]
[), ;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NOT_ALLOWED, ), ;, }, }]
[., divide, (, a, ., d, ,, scale, ,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {]
[,, scale, ,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, .]
[., d, ,, scale, ,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (]
[,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NOT_ALLOWED, )]
[), ), ;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NOT_ALLOWED, ), ;, }]
[;, }, }, public, BigReal, reciprocal, (, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (, BigDecimal, ., ONE]
[), ;, }, }, public, BigReal, reciprocal, (, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (, BigDecimal, .]
[., ZERO_NOT_ALLOWED, ), ;, }, }, public, BigReal, reciprocal, (, ), throws, MathArithmeticException, {, try, {, return, new, BigReal, (]
[;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NOT_ALLOWED, ), ;, }, }, public]
[), ;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NOT_ALLOWED, ), ;, }, }]
[., divide, (, d, ,, scale, ,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {, throw, new]
[., ONE, ., divide, (, d, ,, scale, ,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {]
[,, scale, ,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, .]
[,, roundingMode, ), ), ;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NOT_ALLOWED, )]
[), ), ;, }, catch, (, ArithmeticException, e, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NOT_ALLOWED, ), ;, }]
[;, }, }, public, BigReal, multiply, (, BigReal, a, ), {, return, new, BigReal, (, d, ., multiply, (, a]
[), ;, }, }, public, BigReal, multiply, (, BigReal, a, ), {, return, new, BigReal, (, d, ., multiply, (]
[., ZERO_NOT_ALLOWED, ), ;, }, }, public, BigReal, multiply, (, BigReal, a, ), {, return, new, BigReal, (, d, .]
[;, }, public, BigReal, multiply, (, final, int, n, ), {, return, new, BigReal, (, d, ., multiply, (, new]
[), ;, }, public, BigReal, multiply, (, final, int, n, ), {, return, new, BigReal, (, d, ., multiply, (]
[., multiply, (, a, ., d, ), ), ;, }, public, BigReal, multiply, (, final, int, n, ), {, return]
[), ), ;, }, public, BigReal, multiply, (, final, int, n, ), {, return, new, BigReal, (, d, ., multiply]
[., d, ), ), ;, }, public, BigReal, multiply, (, final, int, n, ), {, return, new, BigReal, (, d]
[;, }, public, int, compareTo, (, BigReal, a, ), {, return, d, ., compareTo, (, a, ., d, ), ;]
[), ;, }, public, int, compareTo, (, BigReal, a, ), {, return, d, ., compareTo, (, a, ., d, )]
[., multiply, (, new, BigDecimal, (, n, ), ), ), ;, }, public, int, compareTo, (, BigReal, a, ), {]
[), ), ;, }, public, int, compareTo, (, BigReal, a, ), {, return, d, ., compareTo, (, a, ., d]
[), ), ), ;, }, public, int, compareTo, (, BigReal, a, ), {, return, d, ., compareTo, (, a, .]
[;, }, public, double, doubleValue, (, ), {, return, d, ., doubleValue, (, ), ;, }, public, BigDecimal, bigDecimalValue, (]
[., compareTo, (, a, ., d, ), ;, }, public, double, doubleValue, (, ), {, return, d, ., doubleValue, (]
[), ;, }, public, double, doubleValue, (, ), {, return, d, ., doubleValue, (, ), ;, }, public, BigDecimal, bigDecimalValue]
[., d, ), ;, }, public, double, doubleValue, (, ), {, return, d, ., doubleValue, (, ), ;, }, public]
[;, }, public, BigDecimal, bigDecimalValue, (, ), {, return, d, ;, }, @, Override, public, boolean, equals, (, Object, other]
[., doubleValue, (, ), ;, }, public, BigDecimal, bigDecimalValue, (, ), {, return, d, ;, }, @, Override, public, boolean]
[;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (, this, ==, other, ), {, return]
[), {, return, true, ;, }, if, (, other, instanceof, BigReal, ), {, return, d, ., equals, (, (, (]
[==, other, ), {, return, true, ;, }, if, (, other, instanceof, BigReal, ), {, return, d, ., equals, (]
[), {, return, true, ;, }, if, (, other, instanceof, BigReal, ), {, return, d, ., equals, (, (, (]
[;, }, if, (, other, instanceof, BigReal, ), {, return, d, ., equals, (, (, (, BigReal, ), other, )]
[), {, return, d, ., equals, (, (, (, BigReal, ), other, ), ., d, ), ;, }, return, false]
[instanceof, BigReal, ), {, return, d, ., equals, (, (, (, BigReal, ), other, ), ., d, ), ;, }]
[;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, d, ., hashCode, (, )]
[., equals, (, (, (, BigReal, ), other, ), ., d, ), ;, }, return, false, ;, }, @, Override]
[), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, d, ., hashCode, (]
[., d, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, d, .]
[), ., d, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, d]
[), ., d, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, d]
[;, }, @, Override, public, int, hashCode, (, ), {, return, d, ., hashCode, (, ), ;, }, public, Field]
[;, }, public, Field, <, BigReal, >, getField, (, ), {, return, BigRealField, ., getInstance, (, ), ;, }, }]
[., hashCode, (, ), ;, }, public, Field, <, BigReal, >, getField, (, ), {, return, BigRealField, ., getInstance, (]
[;, }, }]
[., getInstance, (, ), ;, }, }]
