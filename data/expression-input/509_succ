[), {, return, null, ;, }, try, {, final, StringWriter, writer, =, new, StringWriter, (, input, ., length, (, )]
[==, null, ), {, return, null, ;, }, try, {, final, StringWriter, writer, =, new, StringWriter, (, input, ., length]
[), {, return, null, ;, }, try, {, final, StringWriter, writer, =, new, StringWriter, (, input, ., length, (, )]
[;, }, try, {, final, StringWriter, writer, =, new, StringWriter, (, input, ., length, (, ), *, 2, ), ;]
[;, translate, (, input, ,, writer, ), ;, return, writer, ., toString, (, ), ;, }, catch, (, final, IOException]
[), ;, translate, (, input, ,, writer, ), ;, return, writer, ., toString, (, ), ;, }, catch, (, final]
[*, 2, ), ;, translate, (, input, ,, writer, ), ;, return, writer, ., toString, (, ), ;, }, catch]
[., length, (, ), *, 2, ), ;, translate, (, input, ,, writer, ), ;, return, writer, ., toString, (]
[), ;, translate, (, input, ,, writer, ), ;, return, writer, ., toString, (, ), ;, }, catch, (, final]
[;, return, writer, ., toString, (, ), ;, }, catch, (, final, IOException, ioe, ), {, throw, new, RuntimeException, (]
[,, writer, ), ;, return, writer, ., toString, (, ), ;, }, catch, (, final, IOException, ioe, ), {, throw]
[), ;, return, writer, ., toString, (, ), ;, }, catch, (, final, IOException, ioe, ), {, throw, new, RuntimeException]
[;, }, catch, (, final, IOException, ioe, ), {, throw, new, RuntimeException, (, ioe, ), ;, }, }, public, final]
[., toString, (, ), ;, }, catch, (, final, IOException, ioe, ), {, throw, new, RuntimeException, (, ioe, ), ;]
[;, }, }, public, final, void, translate, (, final, CharSequence, input, ,, final, Writer, out, ), throws, IOException, {, if]
[), ;, }, }, public, final, void, translate, (, final, CharSequence, input, ,, final, Writer, out, ), throws, IOException, {]
[), {, throw, new, IllegalArgumentException, (, "The Writer must not be null", ), ;, }, if, (, input, ==, null, ), {, return, ;, }]
[==, null, ), {, throw, new, IllegalArgumentException, (, "The Writer must not be null", ), ;, }, if, (, input, ==, null, ), {, return]
[), {, throw, new, IllegalArgumentException, (, "The Writer must not be null", ), ;, }, if, (, input, ==, null, ), {, return, ;, }]
[;, }, if, (, input, ==, null, ), {, return, ;, }, int, pos, =, 0, ;, final, int, len]
[), ;, }, if, (, input, ==, null, ), {, return, ;, }, int, pos, =, 0, ;, final, int]
[), {, return, ;, }, int, pos, =, 0, ;, final, int, len, =, input, ., length, (, ), ;]
[==, null, ), {, return, ;, }, int, pos, =, 0, ;, final, int, len, =, input, ., length, (]
[), {, return, ;, }, int, pos, =, 0, ;, final, int, len, =, input, ., length, (, ), ;]
[;, final, int, len, =, input, ., length, (, ), ;, while, (, pos, <, len, ), {, final, int]
[;, while, (, pos, <, len, ), {, final, int, consumed, =, translate, (, input, ,, pos, ,, out, )]
[., length, (, ), ;, while, (, pos, <, len, ), {, final, int, consumed, =, translate, (, input, ,]
[), {, final, int, consumed, =, translate, (, input, ,, pos, ,, out, ), ;, if, (, consumed, ==, 0]
[<, len, ), {, final, int, consumed, =, translate, (, input, ,, pos, ,, out, ), ;, if, (, consumed]
[), {, final, int, consumed, =, translate, (, input, ,, pos, ,, out, ), ;, if, (, consumed, ==, 0]
[;, if, (, consumed, ==, 0, ), {, final, char, [, ], c, =, Character, ., toChars, (, Character, .]
[,, pos, ,, out, ), ;, if, (, consumed, ==, 0, ), {, final, char, [, ], c, =, Character]
[,, out, ), ;, if, (, consumed, ==, 0, ), {, final, char, [, ], c, =, Character, ., toChars]
[), ;, if, (, consumed, ==, 0, ), {, final, char, [, ], c, =, Character, ., toChars, (, Character]
[), {, final, char, [, ], c, =, Character, ., toChars, (, Character, ., codePointAt, (, input, ,, pos, )]
[==, 0, ), {, final, char, [, ], c, =, Character, ., toChars, (, Character, ., codePointAt, (, input, ,]
[), {, final, char, [, ], c, =, Character, ., toChars, (, Character, ., codePointAt, (, input, ,, pos, )]
[;, out, ., write, (, c, ), ;, pos, +=, c, ., length, ;, continue, ;, }, for, (, int]
[., toChars, (, Character, ., codePointAt, (, input, ,, pos, ), ), ;, out, ., write, (, c, ), ;]
[), ;, out, ., write, (, c, ), ;, pos, +=, c, ., length, ;, continue, ;, }, for, (]
[., codePointAt, (, input, ,, pos, ), ), ;, out, ., write, (, c, ), ;, pos, +=, c, .]
[,, pos, ), ), ;, out, ., write, (, c, ), ;, pos, +=, c, ., length, ;, continue, ;]
[), ), ;, out, ., write, (, c, ), ;, pos, +=, c, ., length, ;, continue, ;, }, for]
[;, pos, +=, c, ., length, ;, continue, ;, }, for, (, int, pt, =, 0, ;, pt, <, consumed]
[., write, (, c, ), ;, pos, +=, c, ., length, ;, continue, ;, }, for, (, int, pt, =]
[), ;, pos, +=, c, ., length, ;, continue, ;, }, for, (, int, pt, =, 0, ;, pt, <]
[+=, c, ., length, ;, continue, ;, }, for, (, int, pt, =, 0, ;, pt, <, consumed, ;, pt]
[;, continue, ;, }, for, (, int, pt, =, 0, ;, pt, <, consumed, ;, pt, ++, ), {, pos]
[., length, ;, continue, ;, }, for, (, int, pt, =, 0, ;, pt, <, consumed, ;, pt, ++, )]
[;, pt, <, consumed, ;, pt, ++, ), {, pos, +=, Character, ., charCount, (, Character, ., codePointAt, (, input]
[;, pt, ++, ), {, pos, +=, Character, ., charCount, (, Character, ., codePointAt, (, input, ,, pt, ), )]
[<, consumed, ;, pt, ++, ), {, pos, +=, Character, ., charCount, (, Character, ., codePointAt, (, input, ,, pt]
[;, pt, ++, ), {, pos, +=, Character, ., charCount, (, Character, ., codePointAt, (, input, ,, pt, ), )]
[), {, pos, +=, Character, ., charCount, (, Character, ., codePointAt, (, input, ,, pt, ), ), ;, }, }]
[++, ), {, pos, +=, Character, ., charCount, (, Character, ., codePointAt, (, input, ,, pt, ), ), ;, }]
[+=, Character, ., charCount, (, Character, ., codePointAt, (, input, ,, pt, ), ), ;, }, }, }, public, final]
[;, }, }, }, public, final, CharSequenceTranslator, with, (, final, CharSequenceTranslator, ..., translators, ), {, final, CharSequenceTranslator, [, ], newArray]
[., charCount, (, Character, ., codePointAt, (, input, ,, pt, ), ), ;, }, }, }, public, final, CharSequenceTranslator, with]
[), ;, }, }, }, public, final, CharSequenceTranslator, with, (, final, CharSequenceTranslator, ..., translators, ), {, final, CharSequenceTranslator, [, ]]
[., codePointAt, (, input, ,, pt, ), ), ;, }, }, }, public, final, CharSequenceTranslator, with, (, final, CharSequenceTranslator, ...]
[,, pt, ), ), ;, }, }, }, public, final, CharSequenceTranslator, with, (, final, CharSequenceTranslator, ..., translators, ), {, final]
[), ), ;, }, }, }, public, final, CharSequenceTranslator, with, (, final, CharSequenceTranslator, ..., translators, ), {, final, CharSequenceTranslator, []
[;, newArray, [, 0, ], =, this, ;, System, ., arraycopy, (, translators, ,, 0, ,, newArray, ,, 1, ,]
[], ;, newArray, [, 0, ], =, this, ;, System, ., arraycopy, (, translators, ,, 0, ,, newArray, ,, 1]
[+, 1, ], ;, newArray, [, 0, ], =, this, ;, System, ., arraycopy, (, translators, ,, 0, ,, newArray]
[., length, +, 1, ], ;, newArray, [, 0, ], =, this, ;, System, ., arraycopy, (, translators, ,, 0]
[], ;, newArray, [, 0, ], =, this, ;, System, ., arraycopy, (, translators, ,, 0, ,, newArray, ,, 1]
[=, this, ;, System, ., arraycopy, (, translators, ,, 0, ,, newArray, ,, 1, ,, translators, ., length, ), ;]
[[, 0, ], =, this, ;, System, ., arraycopy, (, translators, ,, 0, ,, newArray, ,, 1, ,, translators, .]
[], =, this, ;, System, ., arraycopy, (, translators, ,, 0, ,, newArray, ,, 1, ,, translators, ., length, )]
[;, System, ., arraycopy, (, translators, ,, 0, ,, newArray, ,, 1, ,, translators, ., length, ), ;, return, new]
[;, return, new, AggregateTranslator, (, newArray, ), ;, }, public, static, String, hex, (, final, int, codepoint, ), {, return]
[., arraycopy, (, translators, ,, 0, ,, newArray, ,, 1, ,, translators, ., length, ), ;, return, new, AggregateTranslator, (]
[,, 0, ,, newArray, ,, 1, ,, translators, ., length, ), ;, return, new, AggregateTranslator, (, newArray, ), ;, }]
[,, newArray, ,, 1, ,, translators, ., length, ), ;, return, new, AggregateTranslator, (, newArray, ), ;, }, public, static]
[,, 1, ,, translators, ., length, ), ;, return, new, AggregateTranslator, (, newArray, ), ;, }, public, static, String, hex]
[,, translators, ., length, ), ;, return, new, AggregateTranslator, (, newArray, ), ;, }, public, static, String, hex, (, final]
[), ;, return, new, AggregateTranslator, (, newArray, ), ;, }, public, static, String, hex, (, final, int, codepoint, ), {]
[., length, ), ;, return, new, AggregateTranslator, (, newArray, ), ;, }, public, static, String, hex, (, final, int, codepoint]
[;, }, public, static, String, hex, (, final, int, codepoint, ), {, return, Integer, ., toHexString, (, codepoint, ), .]
[), ;, }, public, static, String, hex, (, final, int, codepoint, ), {, return, Integer, ., toHexString, (, codepoint, )]
[;, }, }]
[., toUpperCase, (, Locale, ., ENGLISH, ), ;, }, }]
[., toHexString, (, codepoint, ), ., toUpperCase, (, Locale, ., ENGLISH, ), ;, }, }]
[), ., toUpperCase, (, Locale, ., ENGLISH, ), ;, }, }]
[), ;, }, }]
[., ENGLISH, ), ;, }, }]
