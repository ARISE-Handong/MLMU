[(, ), {, }, static, String, truncateAtMaxLength, (, String, source, ,, int, maxLength, ,, boolean, addEllipsis, ), {, if, (]
[(, ), {, }, static, String, truncateAtMaxLength, (, String, source, ,, int, maxLength, ,, boolean, addEllipsis, ), {, if, (]
[(, ), {, }, static, String, truncateAtMaxLength, (, String, source, ,, int, maxLength, ,, boolean, addEllipsis, ), {, if, (]
[truncateAtMaxLength, (, String, source, ,, int, maxLength, ,, boolean, addEllipsis, ), {, if, (, source, ., length, (, ), <=]
[,, int, maxLength, ,, boolean, addEllipsis, ), {, if, (, source, ., length, (, ), <=, maxLength, ), {, return]
[addEllipsis, ), {, if, (, source, ., length, (, ), <=, maxLength, ), {, return, source, ;, }, if, (]
[addEllipsis, ), {, if, (, source, ., length, (, ), <=, maxLength, ), {, return, source, ;, }, if, (]
[{, if, (, source, ., length, (, ), <=, maxLength, ), {, return, source, ;, }, if, (, addEllipsis, &&]
[{, if, (, source, ., length, (, ), <=, maxLength, ), {, return, source, ;, }, if, (, addEllipsis, &&]
[(, source, ., length, (, ), <=, maxLength, ), {, return, source, ;, }, if, (, addEllipsis, &&, maxLength, >]
[(, ), <=, maxLength, ), {, return, source, ;, }, if, (, addEllipsis, &&, maxLength, >, 3, ), {, return]
[(, ), <=, maxLength, ), {, return, source, ;, }, if, (, addEllipsis, &&, maxLength, >, 3, ), {, return]
[<=, maxLength, ), {, return, source, ;, }, if, (, addEllipsis, &&, maxLength, >, 3, ), {, return, unicodePreservingSubstring, (]
[), {, return, source, ;, }, if, (, addEllipsis, &&, maxLength, >, 3, ), {, return, unicodePreservingSubstring, (, source, ,]
[return, source, ;, }, if, (, addEllipsis, &&, maxLength, >, 3, ), {, return, unicodePreservingSubstring, (, source, ,, 0, ,]
[return, source, ;, }, if, (, addEllipsis, &&, maxLength, >, 3, ), {, return, unicodePreservingSubstring, (, source, ,, 0, ,]
[;, }, if, (, addEllipsis, &&, maxLength, >, 3, ), {, return, unicodePreservingSubstring, (, source, ,, 0, ,, maxLength, -]
[(, addEllipsis, &&, maxLength, >, 3, ), {, return, unicodePreservingSubstring, (, source, ,, 0, ,, maxLength, -, 3, ), +]
[>, 3, ), {, return, unicodePreservingSubstring, (, source, ,, 0, ,, maxLength, -, 3, ), +, "...", ;, }, return]
[), {, return, unicodePreservingSubstring, (, source, ,, 0, ,, maxLength, -, 3, ), +, "...", ;, }, return, unicodePreservingSubstring, (]
[return, unicodePreservingSubstring, (, source, ,, 0, ,, maxLength, -, 3, ), +, "...", ;, }, return, unicodePreservingSubstring, (, source, ,]
[(, source, ,, 0, ,, maxLength, -, 3, ), +, "...", ;, }, return, unicodePreservingSubstring, (, source, ,, 0, ,]
[0, ,, maxLength, ), ;, }, private, static, int, unicodePreservingIndex, (, String, str, ,, int, index, ), {, if, (]
[0, ,, maxLength, ), ;, }, private, static, int, unicodePreservingIndex, (, String, str, ,, int, index, ), {, if, (]
[0, ,, maxLength, ), ;, }, private, static, int, unicodePreservingIndex, (, String, str, ,, int, index, ), {, if, (]
[maxLength, ), ;, }, private, static, int, unicodePreservingIndex, (, String, str, ,, int, index, ), {, if, (, index, >]
[;, }, private, static, int, unicodePreservingIndex, (, String, str, ,, int, index, ), {, if, (, index, >, 0, &&]
[;, }, private, static, int, unicodePreservingIndex, (, String, str, ,, int, index, ), {, if, (, index, >, 0, &&]
[private, static, int, unicodePreservingIndex, (, String, str, ,, int, index, ), {, if, (, index, >, 0, &&, index, <]
[private, static, int, unicodePreservingIndex, (, String, str, ,, int, index, ), {, if, (, index, >, 0, &&, index, <]
[index, ), {, if, (, index, >, 0, &&, index, <, str, ., length, (, ), ), {, if, (]
[index, ), {, if, (, index, >, 0, &&, index, <, str, ., length, (, ), ), {, if, (]
[index, ), {, if, (, index, >, 0, &&, index, <, str, ., length, (, ), ), {, if, (]
[(, index, >, 0, &&, index, <, str, ., length, (, ), ), {, if, (, Character, ., isHighSurrogate, (]
[(, index, >, 0, &&, index, <, str, ., length, (, ), ), {, if, (, Character, ., isHighSurrogate, (]
[&&, index, <, str, ., length, (, ), ), {, if, (, Character, ., isHighSurrogate, (, str, ., charAt, (]
[&&, index, <, str, ., length, (, ), ), {, if, (, Character, ., isHighSurrogate, (, str, ., charAt, (]
[<, str, ., length, (, ), ), {, if, (, Character, ., isHighSurrogate, (, str, ., charAt, (, index, -]
[(, ), ), {, if, (, Character, ., isHighSurrogate, (, str, ., charAt, (, index, -, 1, ), ), &&]
[(, ), ), {, if, (, Character, ., isHighSurrogate, (, str, ., charAt, (, index, -, 1, ), ), &&]
[if, (, Character, ., isHighSurrogate, (, str, ., charAt, (, index, -, 1, ), ), &&, Character, ., isLowSurrogate, (]
[if, (, Character, ., isHighSurrogate, (, str, ., charAt, (, index, -, 1, ), ), &&, Character, ., isLowSurrogate, (]
[isHighSurrogate, (, str, ., charAt, (, index, -, 1, ), ), &&, Character, ., isLowSurrogate, (, str, ., charAt, (]
[index, -, 1, ), ), &&, Character, ., isLowSurrogate, (, str, ., charAt, (, index, ), ), ), {, return]
[index, -, 1, ), ), &&, Character, ., isLowSurrogate, (, str, ., charAt, (, index, ), ), ), {, return]
[1, ), ), &&, Character, ., isLowSurrogate, (, str, ., charAt, (, index, ), ), ), {, return, index, -]
[., isLowSurrogate, (, str, ., charAt, (, index, ), ), ), {, return, index, -, 1, ;, }, }, return]
[return, index, ;, }, private, static, String, unicodePreservingSubstring, (, String, str, ,, int, begin, ,, int, end, ), {, return]
[return, index, ;, }, private, static, String, unicodePreservingSubstring, (, String, str, ,, int, begin, ,, int, end, ), {, return]
[private, static, String, unicodePreservingSubstring, (, String, str, ,, int, begin, ,, int, end, ), {, return, str, ., substring, (]
[String, unicodePreservingSubstring, (, String, str, ,, int, begin, ,, int, end, ), {, return, str, ., substring, (, unicodePreservingIndex, (]
[(, String, str, ,, int, begin, ,, int, end, ), {, return, str, ., substring, (, unicodePreservingIndex, (, str, ,]
[,, int, begin, ,, int, end, ), {, return, str, ., substring, (, unicodePreservingIndex, (, str, ,, begin, ), ,]
[begin, ,, int, end, ), {, return, str, ., substring, (, unicodePreservingIndex, (, str, ,, begin, ), ,, unicodePreservingIndex, (]
[int, end, ), {, return, str, ., substring, (, unicodePreservingIndex, (, str, ,, begin, ), ,, unicodePreservingIndex, (, str, ,]
