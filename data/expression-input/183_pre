[public, static, Object, [, ], expandVarArgs, (, final, boolean, isVarArgs, ,, final, Object, [, ], args, ), {, if, (]
[public, static, Object, [, ], expandVarArgs, (, final, boolean, isVarArgs, ,, final, Object, [, ], args, ), {, if, (]
[public, static, Object, [, ], expandVarArgs, (, final, boolean, isVarArgs, ,, final, Object, [, ], args, ), {, if, (]
[static, Object, [, ], expandVarArgs, (, final, boolean, isVarArgs, ,, final, Object, [, ], args, ), {, if, (, !]
[[, ], expandVarArgs, (, final, boolean, isVarArgs, ,, final, Object, [, ], args, ), {, if, (, !, isVarArgs, ||]
[[, ], expandVarArgs, (, final, boolean, isVarArgs, ,, final, Object, [, ], args, ), {, if, (, !, isVarArgs, ||]
[,, final, Object, [, ], args, ), {, if, (, !, isVarArgs, ||, new, ArrayUtils, (, ), ., isEmpty, (]
[[, ], args, ), {, if, (, !, isVarArgs, ||, new, ArrayUtils, (, ), ., isEmpty, (, args, ), ||]
[[, ], args, ), {, if, (, !, isVarArgs, ||, new, ArrayUtils, (, ), ., isEmpty, (, args, ), ||]
[[, ], args, ), {, if, (, !, isVarArgs, ||, new, ArrayUtils, (, ), ., isEmpty, (, args, ), ||]
[[, ], args, ), {, if, (, !, isVarArgs, ||, new, ArrayUtils, (, ), ., isEmpty, (, args, ), ||]
[args, ), {, if, (, !, isVarArgs, ||, new, ArrayUtils, (, ), ., isEmpty, (, args, ), ||, args, []
[args, ), {, if, (, !, isVarArgs, ||, new, ArrayUtils, (, ), ., isEmpty, (, args, ), ||, args, []
[args, ), {, if, (, !, isVarArgs, ||, new, ArrayUtils, (, ), ., isEmpty, (, args, ), ||, args, []
[(, !, isVarArgs, ||, new, ArrayUtils, (, ), ., isEmpty, (, args, ), ||, args, [, args, ., length, -]
[||, new, ArrayUtils, (, ), ., isEmpty, (, args, ), ||, args, [, args, ., length, -, 1, ], !=]
[ArrayUtils, (, ), ., isEmpty, (, args, ), ||, args, [, args, ., length, -, 1, ], !=, null, &&]
[(, ), ., isEmpty, (, args, ), ||, args, [, args, ., length, -, 1, ], !=, null, &&, !]
[(, ), ., isEmpty, (, args, ), ||, args, [, args, ., length, -, 1, ], !=, null, &&, !]
[(, ), ., isEmpty, (, args, ), ||, args, [, args, ., length, -, 1, ], !=, null, &&, !]
[(, ), ., isEmpty, (, args, ), ||, args, [, args, ., length, -, 1, ], !=, null, &&, !]
[., isEmpty, (, args, ), ||, args, [, args, ., length, -, 1, ], !=, null, &&, !, args, []
[., isEmpty, (, args, ), ||, args, [, args, ., length, -, 1, ], !=, null, &&, !, args, []
[., isEmpty, (, args, ), ||, args, [, args, ., length, -, 1, ], !=, null, &&, !, args, []
[), ||, args, [, args, ., length, -, 1, ], !=, null, &&, !, args, [, args, ., length, -]
[!, args, [, args, ., length, -, 1, ], ., getClass, (, ), ., isArray, (, ), ), {, return]
[!, args, [, args, ., length, -, 1, ], ., getClass, (, ), ., isArray, (, ), ), {, return]
[!, args, [, args, ., length, -, 1, ], ., getClass, (, ), ., isArray, (, ), ), {, return]
[[, args, ., length, -, 1, ], ., getClass, (, ), ., isArray, (, ), ), {, return, args, ==]
[., length, -, 1, ], ., getClass, (, ), ., isArray, (, ), ), {, return, args, ==, null, ?]
[1, ], ., getClass, (, ), ., isArray, (, ), ), {, return, args, ==, null, ?, new, Object, []
[getClass, (, ), ., isArray, (, ), ), {, return, args, ==, null, ?, new, Object, [, 0, ], :]
[), {, return, args, ==, null, ?, new, Object, [, 0, ], :, args, ;, }, final, int, nonVarArgsCount, =]
[), {, return, args, ==, null, ?, new, Object, [, 0, ], :, args, ;, }, final, int, nonVarArgsCount, =]
[), {, return, args, ==, null, ?, new, Object, [, 0, ], :, args, ;, }, final, int, nonVarArgsCount, =]
[==, null, ?, new, Object, [, 0, ], :, args, ;, }, final, int, nonVarArgsCount, =, args, ., length, -]
[args, ;, }, final, int, nonVarArgsCount, =, args, ., length, -, 1, ;, Object, [, ], varArgs, ;, if, (]
[args, ;, }, final, int, nonVarArgsCount, =, args, ., length, -, 1, ;, Object, [, ], varArgs, ;, if, (]
[args, ;, }, final, int, nonVarArgsCount, =, args, ., length, -, 1, ;, Object, [, ], varArgs, ;, if, (]
[}, final, int, nonVarArgsCount, =, args, ., length, -, 1, ;, Object, [, ], varArgs, ;, if, (, args, []
[nonVarArgsCount, =, args, ., length, -, 1, ;, Object, [, ], varArgs, ;, if, (, args, [, nonVarArgsCount, ], ==]
[., length, -, 1, ;, Object, [, ], varArgs, ;, if, (, args, [, nonVarArgsCount, ], ==, null, ), {]
[-, 1, ;, Object, [, ], varArgs, ;, if, (, args, [, nonVarArgsCount, ], ==, null, ), {, varArgs, =]
[[, ], varArgs, ;, if, (, args, [, nonVarArgsCount, ], ==, null, ), {, varArgs, =, new, Object, [, ]]
[], varArgs, ;, if, (, args, [, nonVarArgsCount, ], ==, null, ), {, varArgs, =, new, Object, [, ], {]
[[, nonVarArgsCount, ], ==, null, ), {, varArgs, =, new, Object, [, ], {, null, }, ;, }, else, {]
[], ==, null, ), {, varArgs, =, new, Object, [, ], {, null, }, ;, }, else, {, varArgs, =]
[], ==, null, ), {, varArgs, =, new, Object, [, ], {, null, }, ;, }, else, {, varArgs, =]
[{, varArgs, =, new, Object, [, ], {, null, }, ;, }, else, {, varArgs, =, ArrayEquals, ., createObjectArray, (]
[{, varArgs, =, new, Object, [, ], {, null, }, ;, }, else, {, varArgs, =, ArrayEquals, ., createObjectArray, (]
[=, new, Object, [, ], {, null, }, ;, }, else, {, varArgs, =, ArrayEquals, ., createObjectArray, (, args, []
[}, else, {, varArgs, =, ArrayEquals, ., createObjectArray, (, args, [, nonVarArgsCount, ], ), ;, }, final, int, varArgsCount, =]
[}, else, {, varArgs, =, ArrayEquals, ., createObjectArray, (, args, [, nonVarArgsCount, ], ), ;, }, final, int, varArgsCount, =]
[args, [, nonVarArgsCount, ], ), ;, }, final, int, varArgsCount, =, varArgs, ., length, ;, Object, [, ], newArgs, =]
[], ), ;, }, final, int, varArgsCount, =, varArgs, ., length, ;, Object, [, ], newArgs, =, new, Object, []
[], ), ;, }, final, int, varArgsCount, =, varArgs, ., length, ;, Object, [, ], newArgs, =, new, Object, []
[;, }, final, int, varArgsCount, =, varArgs, ., length, ;, Object, [, ], newArgs, =, new, Object, [, nonVarArgsCount, +]
[int, varArgsCount, =, varArgs, ., length, ;, Object, [, ], newArgs, =, new, Object, [, nonVarArgsCount, +, varArgsCount, ], ;]
[int, varArgsCount, =, varArgs, ., length, ;, Object, [, ], newArgs, =, new, Object, [, nonVarArgsCount, +, varArgsCount, ], ;]
[., length, ;, Object, [, ], newArgs, =, new, Object, [, nonVarArgsCount, +, varArgsCount, ], ;, System, ., arraycopy, (]
[;, Object, [, ], newArgs, =, new, Object, [, nonVarArgsCount, +, varArgsCount, ], ;, System, ., arraycopy, (, args, ,]
[[, ], newArgs, =, new, Object, [, nonVarArgsCount, +, varArgsCount, ], ;, System, ., arraycopy, (, args, ,, 0, ,]
[newArgs, =, new, Object, [, nonVarArgsCount, +, varArgsCount, ], ;, System, ., arraycopy, (, args, ,, 0, ,, newArgs, ,]
[new, Object, [, nonVarArgsCount, +, varArgsCount, ], ;, System, ., arraycopy, (, args, ,, 0, ,, newArgs, ,, 0, ,]
[nonVarArgsCount, +, varArgsCount, ], ;, System, ., arraycopy, (, args, ,, 0, ,, newArgs, ,, 0, ,, nonVarArgsCount, ), ;]
[nonVarArgsCount, +, varArgsCount, ], ;, System, ., arraycopy, (, args, ,, 0, ,, newArgs, ,, 0, ,, nonVarArgsCount, ), ;]
[;, System, ., arraycopy, (, args, ,, 0, ,, newArgs, ,, 0, ,, nonVarArgsCount, ), ;, System, ., arraycopy, (]
[., arraycopy, (, args, ,, 0, ,, newArgs, ,, 0, ,, nonVarArgsCount, ), ;, System, ., arraycopy, (, varArgs, ,]
[(, args, ,, 0, ,, newArgs, ,, 0, ,, nonVarArgsCount, ), ;, System, ., arraycopy, (, varArgs, ,, 0, ,]
[,, 0, ,, newArgs, ,, 0, ,, nonVarArgsCount, ), ;, System, ., arraycopy, (, varArgs, ,, 0, ,, newArgs, ,]
[,, newArgs, ,, 0, ,, nonVarArgsCount, ), ;, System, ., arraycopy, (, varArgs, ,, 0, ,, newArgs, ,, nonVarArgsCount, ,]
[,, nonVarArgsCount, ), ;, System, ., arraycopy, (, varArgs, ,, 0, ,, newArgs, ,, nonVarArgsCount, ,, varArgsCount, ), ;, return]
[public, static, List, <, Matcher, >, argumentsToMatchers, (, Object, [, ], arguments, ), {, List, <, Matcher, >, matchers, =]
[argumentsToMatchers, (, Object, [, ], arguments, ), {, List, <, Matcher, >, matchers, =, new, ArrayList, <, Matcher, >, (]
[argumentsToMatchers, (, Object, [, ], arguments, ), {, List, <, Matcher, >, matchers, =, new, ArrayList, <, Matcher, >, (]
[Matcher, >, matchers, =, new, ArrayList, <, Matcher, >, (, arguments, ., length, ), ;, for, (, Object, arg, :]
[ArrayList, <, Matcher, >, (, arguments, ., length, ), ;, for, (, Object, arg, :, arguments, ), {, if, (]
[ArrayList, <, Matcher, >, (, arguments, ., length, ), ;, for, (, Object, arg, :, arguments, ), {, if, (]
[ArrayList, <, Matcher, >, (, arguments, ., length, ), ;, for, (, Object, arg, :, arguments, ), {, if, (]
[Matcher, >, (, arguments, ., length, ), ;, for, (, Object, arg, :, arguments, ), {, if, (, arg, !=]
[(, arguments, ., length, ), ;, for, (, Object, arg, :, arguments, ), {, if, (, arg, !=, null, &&]
[(, arguments, ., length, ), ;, for, (, Object, arg, :, arguments, ), {, if, (, arg, !=, null, &&]
[(, arguments, ., length, ), ;, for, (, Object, arg, :, arguments, ), {, if, (, arg, !=, null, &&]
[arguments, ), {, if, (, arg, !=, null, &&, arg, ., getClass, (, ), ., isArray, (, ), ), {]
[arguments, ), {, if, (, arg, !=, null, &&, arg, ., getClass, (, ), ., isArray, (, ), ), {]
[(, arg, !=, null, &&, arg, ., getClass, (, ), ., isArray, (, ), ), {, matchers, ., add, (]
[null, &&, arg, ., getClass, (, ), ., isArray, (, ), ), {, matchers, ., add, (, new, ArrayEquals, (]
[., isArray, (, ), ), {, matchers, ., add, (, new, ArrayEquals, (, arg, ), ), ;, }, else, {]
[., isArray, (, ), ), {, matchers, ., add, (, new, ArrayEquals, (, arg, ), ), ;, }, else, {]
[), {, matchers, ., add, (, new, ArrayEquals, (, arg, ), ), ;, }, else, {, matchers, ., add, (]
[., add, (, new, ArrayEquals, (, arg, ), ), ;, }, else, {, matchers, ., add, (, new, Equals, (]
[), ), ;, }, else, {, matchers, ., add, (, new, Equals, (, arg, ), ), ;, }, }, return]
