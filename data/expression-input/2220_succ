[;, private, final, RandomDataGenerator, delegate, ;, public, RandomDataImpl, (, ), {, delegate, =, new, RandomDataGenerator, (, ), ;, }, public]
[;, private, final, RandomDataGenerator, delegate, ;, public, RandomDataImpl, (, ), {, delegate, =, new, RandomDataGenerator, (, ), ;, }, public]
[=, new, RandomDataGenerator, (, ), ;, }, public, RandomDataImpl, (, RandomGenerator, rand, ), {, delegate, =, new, RandomDataGenerator, (, rand]
[;, }, public, RandomDataImpl, (, RandomGenerator, rand, ), {, delegate, =, new, RandomDataGenerator, (, rand, ), ;, }, @, Deprecated]
[=, new, RandomDataGenerator, (, rand, ), ;, }, @, Deprecated, RandomDataGenerator, getDelegate, (, ), {, return, delegate, ;, }, public]
[;, }, @, Deprecated, RandomDataGenerator, getDelegate, (, ), {, return, delegate, ;, }, public, String, nextHexString, (, int, len, )]
[), ;, }, @, Deprecated, RandomDataGenerator, getDelegate, (, ), {, return, delegate, ;, }, public, String, nextHexString, (, int, len]
[;, }, public, String, nextHexString, (, int, len, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextHexString, (, len, ), ;]
[;, }, public, int, nextInt, (, int, lower, ,, int, upper, ), throws, NumberIsTooLargeException, {, return, delegate, ., nextInt, (]
[., nextHexString, (, len, ), ;, }, public, int, nextInt, (, int, lower, ,, int, upper, ), throws, NumberIsTooLargeException, {]
[), ;, }, public, int, nextInt, (, int, lower, ,, int, upper, ), throws, NumberIsTooLargeException, {, return, delegate, ., nextInt]
[;, }, public, long, nextLong, (, long, lower, ,, long, upper, ), throws, NumberIsTooLargeException, {, return, delegate, ., nextLong, (]
[., nextInt, (, lower, ,, upper, ), ;, }, public, long, nextLong, (, long, lower, ,, long, upper, ), throws]
[,, upper, ), ;, }, public, long, nextLong, (, long, lower, ,, long, upper, ), throws, NumberIsTooLargeException, {, return, delegate]
[), ;, }, public, long, nextLong, (, long, lower, ,, long, upper, ), throws, NumberIsTooLargeException, {, return, delegate, ., nextLong]
[;, }, public, String, nextSecureHexString, (, int, len, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextSecureHexString, (, len, ), ;]
[., nextLong, (, lower, ,, upper, ), ;, }, public, String, nextSecureHexString, (, int, len, ), throws, NotStrictlyPositiveException, {, return]
[,, upper, ), ;, }, public, String, nextSecureHexString, (, int, len, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextSecureHexString, (]
[), ;, }, public, String, nextSecureHexString, (, int, len, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextSecureHexString, (, len, )]
[;, }, public, int, nextSecureInt, (, int, lower, ,, int, upper, ), throws, NumberIsTooLargeException, {, return, delegate, ., nextSecureInt, (]
[., nextSecureHexString, (, len, ), ;, }, public, int, nextSecureInt, (, int, lower, ,, int, upper, ), throws, NumberIsTooLargeException, {]
[), ;, }, public, int, nextSecureInt, (, int, lower, ,, int, upper, ), throws, NumberIsTooLargeException, {, return, delegate, ., nextSecureInt]
[;, }, public, long, nextSecureLong, (, long, lower, ,, long, upper, ), throws, NumberIsTooLargeException, {, return, delegate, ., nextSecureLong, (]
[., nextSecureInt, (, lower, ,, upper, ), ;, }, public, long, nextSecureLong, (, long, lower, ,, long, upper, ), throws]
[,, upper, ), ;, }, public, long, nextSecureLong, (, long, lower, ,, long, upper, ), throws, NumberIsTooLargeException, {, return, delegate]
[), ;, }, public, long, nextSecureLong, (, long, lower, ,, long, upper, ), throws, NumberIsTooLargeException, {, return, delegate, ., nextSecureLong]
[;, }, public, long, nextPoisson, (, double, mean, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextPoisson, (, mean, ), ;]
[., nextSecureLong, (, lower, ,, upper, ), ;, }, public, long, nextPoisson, (, double, mean, ), throws, NotStrictlyPositiveException, {, return]
[,, upper, ), ;, }, public, long, nextPoisson, (, double, mean, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextPoisson, (]
[), ;, }, public, long, nextPoisson, (, double, mean, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextPoisson, (, mean, )]
[;, }, public, double, nextGaussian, (, double, mu, ,, double, sigma, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextGaussian, (]
[., nextPoisson, (, mean, ), ;, }, public, double, nextGaussian, (, double, mu, ,, double, sigma, ), throws, NotStrictlyPositiveException, {]
[), ;, }, public, double, nextGaussian, (, double, mu, ,, double, sigma, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextGaussian]
[;, }, public, double, nextExponential, (, double, mean, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextExponential, (, mean, ), ;]
[., nextGaussian, (, mu, ,, sigma, ), ;, }, public, double, nextExponential, (, double, mean, ), throws, NotStrictlyPositiveException, {, return]
[,, sigma, ), ;, }, public, double, nextExponential, (, double, mean, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextExponential, (]
[), ;, }, public, double, nextExponential, (, double, mean, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextExponential, (, mean, )]
[;, }, public, double, nextUniform, (, double, lower, ,, double, upper, ), throws, NumberIsTooLargeException, ,, NotFiniteNumberException, ,, NotANumberException, {, return]
[., nextExponential, (, mean, ), ;, }, public, double, nextUniform, (, double, lower, ,, double, upper, ), throws, NumberIsTooLargeException, ,]
[), ;, }, public, double, nextUniform, (, double, lower, ,, double, upper, ), throws, NumberIsTooLargeException, ,, NotFiniteNumberException, ,, NotANumberException, {]
[;, }, public, double, nextUniform, (, double, lower, ,, double, upper, ,, boolean, lowerInclusive, ), throws, NumberIsTooLargeException, ,, NotFiniteNumberException, ,]
[., nextUniform, (, lower, ,, upper, ), ;, }, public, double, nextUniform, (, double, lower, ,, double, upper, ,, boolean]
[,, upper, ), ;, }, public, double, nextUniform, (, double, lower, ,, double, upper, ,, boolean, lowerInclusive, ), throws, NumberIsTooLargeException]
[), ;, }, public, double, nextUniform, (, double, lower, ,, double, upper, ,, boolean, lowerInclusive, ), throws, NumberIsTooLargeException, ,, NotFiniteNumberException]
[;, }, public, double, nextBeta, (, double, alpha, ,, double, beta, ), {, return, delegate, ., nextBeta, (, alpha, ,]
[., nextUniform, (, lower, ,, upper, ,, lowerInclusive, ), ;, }, public, double, nextBeta, (, double, alpha, ,, double, beta]
[,, upper, ,, lowerInclusive, ), ;, }, public, double, nextBeta, (, double, alpha, ,, double, beta, ), {, return, delegate]
[,, lowerInclusive, ), ;, }, public, double, nextBeta, (, double, alpha, ,, double, beta, ), {, return, delegate, ., nextBeta]
[), ;, }, public, double, nextBeta, (, double, alpha, ,, double, beta, ), {, return, delegate, ., nextBeta, (, alpha]
[;, }, public, int, nextBinomial, (, int, numberOfTrials, ,, double, probabilityOfSuccess, ), {, return, delegate, ., nextBinomial, (, numberOfTrials, ,]
[., nextBeta, (, alpha, ,, beta, ), ;, }, public, int, nextBinomial, (, int, numberOfTrials, ,, double, probabilityOfSuccess, ), {]
[,, beta, ), ;, }, public, int, nextBinomial, (, int, numberOfTrials, ,, double, probabilityOfSuccess, ), {, return, delegate, ., nextBinomial]
[), ;, }, public, int, nextBinomial, (, int, numberOfTrials, ,, double, probabilityOfSuccess, ), {, return, delegate, ., nextBinomial, (, numberOfTrials]
[;, }, public, double, nextCauchy, (, double, median, ,, double, scale, ), {, return, delegate, ., nextCauchy, (, median, ,]
[., nextBinomial, (, numberOfTrials, ,, probabilityOfSuccess, ), ;, }, public, double, nextCauchy, (, double, median, ,, double, scale, ), {]
[,, probabilityOfSuccess, ), ;, }, public, double, nextCauchy, (, double, median, ,, double, scale, ), {, return, delegate, ., nextCauchy]
[), ;, }, public, double, nextCauchy, (, double, median, ,, double, scale, ), {, return, delegate, ., nextCauchy, (, median]
[;, }, public, double, nextChiSquare, (, double, df, ), {, return, delegate, ., nextChiSquare, (, df, ), ;, }, public]
[., nextCauchy, (, median, ,, scale, ), ;, }, public, double, nextChiSquare, (, double, df, ), {, return, delegate, .]
[,, scale, ), ;, }, public, double, nextChiSquare, (, double, df, ), {, return, delegate, ., nextChiSquare, (, df, )]
[), ;, }, public, double, nextChiSquare, (, double, df, ), {, return, delegate, ., nextChiSquare, (, df, ), ;, }]
[;, }, public, double, nextF, (, double, numeratorDf, ,, double, denominatorDf, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextF, (]
[., nextChiSquare, (, df, ), ;, }, public, double, nextF, (, double, numeratorDf, ,, double, denominatorDf, ), throws, NotStrictlyPositiveException, {]
[), ;, }, public, double, nextF, (, double, numeratorDf, ,, double, denominatorDf, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextF]
[;, }, public, double, nextGamma, (, double, shape, ,, double, scale, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextGamma, (]
[., nextF, (, numeratorDf, ,, denominatorDf, ), ;, }, public, double, nextGamma, (, double, shape, ,, double, scale, ), throws]
[,, denominatorDf, ), ;, }, public, double, nextGamma, (, double, shape, ,, double, scale, ), throws, NotStrictlyPositiveException, {, return, delegate]
[), ;, }, public, double, nextGamma, (, double, shape, ,, double, scale, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextGamma]
[;, }, public, int, nextHypergeometric, (, int, populationSize, ,, int, numberOfSuccesses, ,, int, sampleSize, ), throws, NotPositiveException, ,, NotStrictlyPositiveException, ,]
[., nextGamma, (, shape, ,, scale, ), ;, }, public, int, nextHypergeometric, (, int, populationSize, ,, int, numberOfSuccesses, ,, int]
[,, scale, ), ;, }, public, int, nextHypergeometric, (, int, populationSize, ,, int, numberOfSuccesses, ,, int, sampleSize, ), throws, NotPositiveException]
[), ;, }, public, int, nextHypergeometric, (, int, populationSize, ,, int, numberOfSuccesses, ,, int, sampleSize, ), throws, NotPositiveException, ,, NotStrictlyPositiveException]
[;, }, public, int, nextPascal, (, int, r, ,, double, p, ), throws, NotStrictlyPositiveException, ,, OutOfRangeException, {, return, delegate, .]
[., nextHypergeometric, (, populationSize, ,, numberOfSuccesses, ,, sampleSize, ), ;, }, public, int, nextPascal, (, int, r, ,, double, p]
[,, numberOfSuccesses, ,, sampleSize, ), ;, }, public, int, nextPascal, (, int, r, ,, double, p, ), throws, NotStrictlyPositiveException, ,]
[,, sampleSize, ), ;, }, public, int, nextPascal, (, int, r, ,, double, p, ), throws, NotStrictlyPositiveException, ,, OutOfRangeException, {]
[), ;, }, public, int, nextPascal, (, int, r, ,, double, p, ), throws, NotStrictlyPositiveException, ,, OutOfRangeException, {, return, delegate]
[;, }, public, double, nextT, (, double, df, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextT, (, df, ), ;]
[., nextPascal, (, r, ,, p, ), ;, }, public, double, nextT, (, double, df, ), throws, NotStrictlyPositiveException, {, return]
[,, p, ), ;, }, public, double, nextT, (, double, df, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextT, (]
[), ;, }, public, double, nextT, (, double, df, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextT, (, df, )]
[;, }, public, double, nextWeibull, (, double, shape, ,, double, scale, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextWeibull, (]
[., nextT, (, df, ), ;, }, public, double, nextWeibull, (, double, shape, ,, double, scale, ), throws, NotStrictlyPositiveException, {]
[), ;, }, public, double, nextWeibull, (, double, shape, ,, double, scale, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextWeibull]
[;, }, public, int, nextZipf, (, int, numberOfElements, ,, double, exponent, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextZipf, (]
[., nextWeibull, (, shape, ,, scale, ), ;, }, public, int, nextZipf, (, int, numberOfElements, ,, double, exponent, ), throws]
[,, scale, ), ;, }, public, int, nextZipf, (, int, numberOfElements, ,, double, exponent, ), throws, NotStrictlyPositiveException, {, return, delegate]
[), ;, }, public, int, nextZipf, (, int, numberOfElements, ,, double, exponent, ), throws, NotStrictlyPositiveException, {, return, delegate, ., nextZipf]
[;, }, public, void, reSeed, (, long, seed, ), {, delegate, ., reSeed, (, seed, ), ;, }, public, void]
[., nextZipf, (, numberOfElements, ,, exponent, ), ;, }, public, void, reSeed, (, long, seed, ), {, delegate, ., reSeed]
[,, exponent, ), ;, }, public, void, reSeed, (, long, seed, ), {, delegate, ., reSeed, (, seed, ), ;]
[), ;, }, public, void, reSeed, (, long, seed, ), {, delegate, ., reSeed, (, seed, ), ;, }, public]
[;, }, public, void, reSeedSecure, (, ), {, delegate, ., reSeedSecure, (, ), ;, }, public, void, reSeedSecure, (, long]
[., reSeed, (, seed, ), ;, }, public, void, reSeedSecure, (, ), {, delegate, ., reSeedSecure, (, ), ;, }]
[), ;, }, public, void, reSeedSecure, (, ), {, delegate, ., reSeedSecure, (, ), ;, }, public, void, reSeedSecure, (]
[;, }, public, void, reSeedSecure, (, long, seed, ), {, delegate, ., reSeedSecure, (, seed, ), ;, }, public, void]
[., reSeedSecure, (, ), ;, }, public, void, reSeedSecure, (, long, seed, ), {, delegate, ., reSeedSecure, (, seed, )]
[;, }, public, void, reSeed, (, ), {, delegate, ., reSeed, (, ), ;, }, public, void, setSecureAlgorithm, (, String]
[., reSeedSecure, (, seed, ), ;, }, public, void, reSeed, (, ), {, delegate, ., reSeed, (, ), ;, }]
[), ;, }, public, void, reSeed, (, ), {, delegate, ., reSeed, (, ), ;, }, public, void, setSecureAlgorithm, (]
[;, }, public, void, setSecureAlgorithm, (, String, algorithm, ,, String, provider, ), throws, NoSuchAlgorithmException, ,, NoSuchProviderException, {, delegate, ., setSecureAlgorithm]
[., reSeed, (, ), ;, }, public, void, setSecureAlgorithm, (, String, algorithm, ,, String, provider, ), throws, NoSuchAlgorithmException, ,, NoSuchProviderException]
[;, }, public, int, [, ], nextPermutation, (, int, n, ,, int, k, ), throws, NotStrictlyPositiveException, ,, NumberIsTooLargeException, {, return]
[., setSecureAlgorithm, (, algorithm, ,, provider, ), ;, }, public, int, [, ], nextPermutation, (, int, n, ,, int, k]
[,, provider, ), ;, }, public, int, [, ], nextPermutation, (, int, n, ,, int, k, ), throws, NotStrictlyPositiveException, ,]
[), ;, }, public, int, [, ], nextPermutation, (, int, n, ,, int, k, ), throws, NotStrictlyPositiveException, ,, NumberIsTooLargeException, {]
[;, }, public, Object, [, ], nextSample, (, Collection, <, ?, >, c, ,, int, k, ), throws, NotStrictlyPositiveException, ,]
[., nextPermutation, (, n, ,, k, ), ;, }, public, Object, [, ], nextSample, (, Collection, <, ?, >, c]
[,, k, ), ;, }, public, Object, [, ], nextSample, (, Collection, <, ?, >, c, ,, int, k, )]
[), ;, }, public, Object, [, ], nextSample, (, Collection, <, ?, >, c, ,, int, k, ), throws, NotStrictlyPositiveException]
[;, }, @, Deprecated, public, double, nextInversionDeviate, (, RealDistribution, distribution, ), throws, MathIllegalArgumentException, {, return, distribution, ., inverseCumulativeProbability, (, nextUniform]
[., nextSample, (, c, ,, k, ), ;, }, @, Deprecated, public, double, nextInversionDeviate, (, RealDistribution, distribution, ), throws, MathIllegalArgumentException]
[,, k, ), ;, }, @, Deprecated, public, double, nextInversionDeviate, (, RealDistribution, distribution, ), throws, MathIllegalArgumentException, {, return, distribution, .]
[), ;, }, @, Deprecated, public, double, nextInversionDeviate, (, RealDistribution, distribution, ), throws, MathIllegalArgumentException, {, return, distribution, ., inverseCumulativeProbability, (]
[;, }, @, Deprecated, public, int, nextInversionDeviate, (, IntegerDistribution, distribution, ), throws, MathIllegalArgumentException, {, return, distribution, ., inverseCumulativeProbability, (, nextUniform]
[., inverseCumulativeProbability, (, nextUniform, (, 0, ,, 1, ), ), ;, }, @, Deprecated, public, int, nextInversionDeviate, (, IntegerDistribution, distribution]
[), ;, }, @, Deprecated, public, int, nextInversionDeviate, (, IntegerDistribution, distribution, ), throws, MathIllegalArgumentException, {, return, distribution, ., inverseCumulativeProbability, (]
[,, 1, ), ), ;, }, @, Deprecated, public, int, nextInversionDeviate, (, IntegerDistribution, distribution, ), throws, MathIllegalArgumentException, {, return, distribution]
[), ), ;, }, @, Deprecated, public, int, nextInversionDeviate, (, IntegerDistribution, distribution, ), throws, MathIllegalArgumentException, {, return, distribution, ., inverseCumulativeProbability]
[;, }, }]
[., inverseCumulativeProbability, (, nextUniform, (, 0, ,, 1, ), ), ;, }, }]
[), ;, }, }]
[,, 1, ), ), ;, }, }]
[), ), ;, }, }]
