[;, import, java, ., util, ., Set, ;, public, class, DiagnosticGroup, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[<, DiagnosticType, >, types, ;, private, final, String, name, ;, DiagnosticGroup, (, String, name, ,, DiagnosticType, ..., types, ), {]
[<, DiagnosticType, >, types, ;, private, final, String, name, ;, DiagnosticGroup, (, String, name, ,, DiagnosticType, ..., types, ), {]
[;, private, final, String, name, ;, DiagnosticGroup, (, String, name, ,, DiagnosticType, ..., types, ), {, this, ., name, =]
[final, String, name, ;, DiagnosticGroup, (, String, name, ,, DiagnosticType, ..., types, ), {, this, ., name, =, name, ;]
[final, String, name, ;, DiagnosticGroup, (, String, name, ,, DiagnosticType, ..., types, ), {, this, ., name, =, name, ;]
[DiagnosticGroup, (, String, name, ,, DiagnosticType, ..., types, ), {, this, ., name, =, name, ;, this, ., types, =]
[DiagnosticGroup, (, String, name, ,, DiagnosticType, ..., types, ), {, this, ., name, =, name, ;, this, ., types, =]
[,, DiagnosticType, ..., types, ), {, this, ., name, =, name, ;, this, ., types, =, ImmutableSet, ., copyOf, (]
[,, DiagnosticType, ..., types, ), {, this, ., name, =, name, ;, this, ., types, =, ImmutableSet, ., copyOf, (]
[), {, this, ., name, =, name, ;, this, ., types, =, ImmutableSet, ., copyOf, (, Arrays, ., asList, (]
[(, Arrays, ., asList, (, types, ), ), ;, }, public, DiagnosticGroup, (, DiagnosticType, ..., types, ), {, this, (]
[., asList, (, types, ), ), ;, }, public, DiagnosticGroup, (, DiagnosticType, ..., types, ), {, this, (, null, ,]
[DiagnosticType, ..., types, ), {, this, (, null, ,, types, ), ;, }, private, DiagnosticGroup, (, DiagnosticType, type, ), {]
[DiagnosticType, ..., types, ), {, this, (, null, ,, types, ), ;, }, private, DiagnosticGroup, (, DiagnosticType, type, ), {]
[{, this, (, null, ,, types, ), ;, }, private, DiagnosticGroup, (, DiagnosticType, type, ), {, this, ., name, =]
[(, null, ,, types, ), ;, }, private, DiagnosticGroup, (, DiagnosticType, type, ), {, this, ., name, =, null, ;]
[(, null, ,, types, ), ;, }, private, DiagnosticGroup, (, DiagnosticType, type, ), {, this, ., name, =, null, ;]
[), ;, }, private, DiagnosticGroup, (, DiagnosticType, type, ), {, this, ., name, =, null, ;, this, ., types, =]
[), ;, }, private, DiagnosticGroup, (, DiagnosticType, type, ), {, this, ., name, =, null, ;, this, ., types, =]
[DiagnosticGroup, (, DiagnosticType, type, ), {, this, ., name, =, null, ;, this, ., types, =, ImmutableSet, ., of, (]
[=, ImmutableSet, ., of, (, type, ), ;, }, private, static, final, Map, <, DiagnosticType, ,, DiagnosticGroup, >, singletons, =]
[=, ImmutableSet, ., of, (, type, ), ;, }, private, static, final, Map, <, DiagnosticType, ,, DiagnosticGroup, >, singletons, =]
[>, singletons, =, Maps, ., newHashMap, (, ), ;, public, static, DiagnosticGroup, forType, (, DiagnosticType, type, ), {, if, (]
[singletons, =, Maps, ., newHashMap, (, ), ;, public, static, DiagnosticGroup, forType, (, DiagnosticType, type, ), {, if, (, !]
[singletons, =, Maps, ., newHashMap, (, ), ;, public, static, DiagnosticGroup, forType, (, DiagnosticType, type, ), {, if, (, !]
[newHashMap, (, ), ;, public, static, DiagnosticGroup, forType, (, DiagnosticType, type, ), {, if, (, !, singletons, ., containsKey, (]
[public, static, DiagnosticGroup, forType, (, DiagnosticType, type, ), {, if, (, !, singletons, ., containsKey, (, type, ), ), {]
[public, static, DiagnosticGroup, forType, (, DiagnosticType, type, ), {, if, (, !, singletons, ., containsKey, (, type, ), ), {]
[(, DiagnosticType, type, ), {, if, (, !, singletons, ., containsKey, (, type, ), ), {, singletons, ., put, (]
[type, ), {, if, (, !, singletons, ., containsKey, (, type, ), ), {, singletons, ., put, (, type, ,]
[if, (, !, singletons, ., containsKey, (, type, ), ), {, singletons, ., put, (, type, ,, new, DiagnosticGroup, (]
[(, type, ), ), {, singletons, ., put, (, type, ,, new, DiagnosticGroup, (, type, ), ), ;, }, return]
[(, type, ), ), {, singletons, ., put, (, type, ,, new, DiagnosticGroup, (, type, ), ), ;, }, return]
[{, singletons, ., put, (, type, ,, new, DiagnosticGroup, (, type, ), ), ;, }, return, singletons, ., get, (]
[}, return, singletons, ., get, (, type, ), ;, }, public, DiagnosticGroup, (, DiagnosticGroup, ..., groups, ), {, this, (]
[singletons, ., get, (, type, ), ;, }, public, DiagnosticGroup, (, DiagnosticGroup, ..., groups, ), {, this, (, null, ,]
[), ;, }, public, DiagnosticGroup, (, String, name, ,, DiagnosticGroup, ..., groups, ), {, Set, <, DiagnosticType, >, set, =]
[), ;, }, public, DiagnosticGroup, (, String, name, ,, DiagnosticGroup, ..., groups, ), {, Set, <, DiagnosticType, >, set, =]
[groups, ), {, Set, <, DiagnosticType, >, set, =, Sets, ., newHashSet, (, ), ;, for, (, DiagnosticGroup, group, :]
[Set, <, DiagnosticType, >, set, =, Sets, ., newHashSet, (, ), ;, for, (, DiagnosticGroup, group, :, groups, ), {]
[Set, <, DiagnosticType, >, set, =, Sets, ., newHashSet, (, ), ;, for, (, DiagnosticGroup, group, :, groups, ), {]
[set, =, Sets, ., newHashSet, (, ), ;, for, (, DiagnosticGroup, group, :, groups, ), {, set, ., addAll, (]
[set, =, Sets, ., newHashSet, (, ), ;, for, (, DiagnosticGroup, group, :, groups, ), {, set, ., addAll, (]
[), ;, for, (, DiagnosticGroup, group, :, groups, ), {, set, ., addAll, (, group, ., types, ), ;, }]
[), ;, for, (, DiagnosticGroup, group, :, groups, ), {, set, ., addAll, (, group, ., types, ), ;, }]
[DiagnosticGroup, group, :, groups, ), {, set, ., addAll, (, group, ., types, ), ;, }, this, ., name, =]
[:, groups, ), {, set, ., addAll, (, group, ., types, ), ;, }, this, ., name, =, name, ;]
[:, groups, ), {, set, ., addAll, (, group, ., types, ), ;, }, this, ., name, =, name, ;]
[set, ., addAll, (, group, ., types, ), ;, }, this, ., name, =, name, ;, this, ., types, =]
[set, ., addAll, (, group, ., types, ), ;, }, this, ., name, =, name, ;, this, ., types, =]
[group, ., types, ), ;, }, this, ., name, =, name, ;, this, ., types, =, ImmutableSet, ., copyOf, (]
[., types, =, ImmutableSet, ., copyOf, (, set, ), ;, }, public, boolean, matches, (, JSError, error, ), {, return]
[=, ImmutableSet, ., copyOf, (, set, ), ;, }, public, boolean, matches, (, JSError, error, ), {, return, matches, (]
[=, ImmutableSet, ., copyOf, (, set, ), ;, }, public, boolean, matches, (, JSError, error, ), {, return, matches, (]
[return, matches, (, error, ., getType, (, ), ), ;, }, public, boolean, matches, (, DiagnosticType, type, ), {, return]
[return, matches, (, error, ., getType, (, ), ), ;, }, public, boolean, matches, (, DiagnosticType, type, ), {, return]
[., getType, (, ), ), ;, }, public, boolean, matches, (, DiagnosticType, type, ), {, return, types, ., contains, (]
[types, ., contains, (, type, ), ;, }, boolean, isSubGroup, (, DiagnosticGroup, group, ), {, for, (, DiagnosticType, type, :]
[types, ., contains, (, type, ), ;, }, boolean, isSubGroup, (, DiagnosticGroup, group, ), {, for, (, DiagnosticType, type, :]
[}, boolean, isSubGroup, (, DiagnosticGroup, group, ), {, for, (, DiagnosticType, type, :, group, ., types, ), {, if, (]
[boolean, isSubGroup, (, DiagnosticGroup, group, ), {, for, (, DiagnosticType, type, :, group, ., types, ), {, if, (, !]
[(, DiagnosticGroup, group, ), {, for, (, DiagnosticType, type, :, group, ., types, ), {, if, (, !, matches, (]
[for, (, DiagnosticType, type, :, group, ., types, ), {, if, (, !, matches, (, type, ), ), {, return]
[group, ., types, ), {, if, (, !, matches, (, type, ), ), {, return, false, ;, }, }, return]
[{, return, false, ;, }, }, return, true, ;, }, public, Iterable, <, DiagnosticType, >, getTypes, (, ), {, return]
[<, DiagnosticType, >, getTypes, (, ), {, return, types, ;, }, @, Override, public, String, toString, (, ), {, return]
[<, DiagnosticType, >, getTypes, (, ), {, return, types, ;, }, @, Override, public, String, toString, (, ), {, return]
[<, DiagnosticType, >, getTypes, (, ), {, return, types, ;, }, @, Override, public, String, toString, (, ), {, return]
[>, getTypes, (, ), {, return, types, ;, }, @, Override, public, String, toString, (, ), {, return, name, ==]
[(, ), {, return, types, ;, }, @, Override, public, String, toString, (, ), {, return, name, ==, null, ?]
[(, ), {, return, types, ;, }, @, Override, public, String, toString, (, ), {, return, name, ==, null, ?]
[}, @, Override, public, String, toString, (, ), {, return, name, ==, null, ?, super, ., toString, (, ), :]
[}, @, Override, public, String, toString, (, ), {, return, name, ==, null, ?, super, ., toString, (, ), :]
[}, @, Override, public, String, toString, (, ), {, return, name, ==, null, ?, super, ., toString, (, ), :]
[Override, public, String, toString, (, ), {, return, name, ==, null, ?, super, ., toString, (, ), :, "DiagnosticGroup<", +]
[String, toString, (, ), {, return, name, ==, null, ?, super, ., toString, (, ), :, "DiagnosticGroup<", +, name, +]
