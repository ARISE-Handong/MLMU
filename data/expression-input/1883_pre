[., math3, ., util, ., MathUtils, ;, public, abstract, class, BaseAbstractUnivariateIntegrator, implements, UnivariateIntegrator, {, public, static, final, double, DEFAULT_ABSOLUTE_ACCURACY, =]
[abstract, class, BaseAbstractUnivariateIntegrator, implements, UnivariateIntegrator, {, public, static, final, double, DEFAULT_ABSOLUTE_ACCURACY, =, 1.0e-15, ;, public, static, final, double, DEFAULT_RELATIVE_ACCURACY, =]
[final, double, DEFAULT_ABSOLUTE_ACCURACY, =, 1.0e-15, ;, public, static, final, double, DEFAULT_RELATIVE_ACCURACY, =, 1.0e-6, ;, public, static, final, int, DEFAULT_MIN_ITERATIONS_COUNT, =]
[final, double, DEFAULT_RELATIVE_ACCURACY, =, 1.0e-6, ;, public, static, final, int, DEFAULT_MIN_ITERATIONS_COUNT, =, 3, ;, public, static, final, int, DEFAULT_MAX_ITERATIONS_COUNT, =]
[final, double, DEFAULT_RELATIVE_ACCURACY, =, 1.0e-6, ;, public, static, final, int, DEFAULT_MIN_ITERATIONS_COUNT, =, 3, ;, public, static, final, int, DEFAULT_MAX_ITERATIONS_COUNT, =]
[double, relativeAccuracy, ,, final, double, absoluteAccuracy, ,, final, int, minimalIterationCount, ,, final, int, maximalIterationCount, ), throws, NotStrictlyPositiveException, ,, NumberIsTooSmallException, {]
[double, relativeAccuracy, ,, final, double, absoluteAccuracy, ,, final, int, minimalIterationCount, ,, final, int, maximalIterationCount, ), throws, NotStrictlyPositiveException, ,, NumberIsTooSmallException, {]
[double, absoluteAccuracy, ,, final, int, minimalIterationCount, ,, final, int, maximalIterationCount, ), throws, NotStrictlyPositiveException, ,, NumberIsTooSmallException, {, this, ., relativeAccuracy, =]
[,, final, int, minimalIterationCount, ,, final, int, maximalIterationCount, ), throws, NotStrictlyPositiveException, ,, NumberIsTooSmallException, {, this, ., relativeAccuracy, =, relativeAccuracy, ;]
[,, final, int, minimalIterationCount, ,, final, int, maximalIterationCount, ), throws, NotStrictlyPositiveException, ,, NumberIsTooSmallException, {, this, ., relativeAccuracy, =, relativeAccuracy, ;]
[,, final, int, maximalIterationCount, ), throws, NotStrictlyPositiveException, ,, NumberIsTooSmallException, {, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., absoluteAccuracy, =]
[), throws, NotStrictlyPositiveException, ,, NumberIsTooSmallException, {, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, if, (]
[), throws, NotStrictlyPositiveException, ,, NumberIsTooSmallException, {, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, if, (]
[NotStrictlyPositiveException, ,, NumberIsTooSmallException, {, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, if, (, minimalIterationCount, <=]
[this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, if, (, minimalIterationCount, <=, 0, ), {, throw]
[=, relativeAccuracy, ;, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, if, (, minimalIterationCount, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (]
[=, absoluteAccuracy, ;, if, (, minimalIterationCount, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, minimalIterationCount, ), ;, }, if, (]
[=, absoluteAccuracy, ;, if, (, minimalIterationCount, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, minimalIterationCount, ), ;, }, if, (]
[;, if, (, minimalIterationCount, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, minimalIterationCount, ), ;, }, if, (, maximalIterationCount, <=]
[<=, 0, ), {, throw, new, NotStrictlyPositiveException, (, minimalIterationCount, ), ;, }, if, (, maximalIterationCount, <=, minimalIterationCount, ), {, throw]
[{, throw, new, NotStrictlyPositiveException, (, minimalIterationCount, ), ;, }, if, (, maximalIterationCount, <=, minimalIterationCount, ), {, throw, new, NumberIsTooSmallException, (]
[new, NotStrictlyPositiveException, (, minimalIterationCount, ), ;, }, if, (, maximalIterationCount, <=, minimalIterationCount, ), {, throw, new, NumberIsTooSmallException, (, maximalIterationCount, ,]
[(, minimalIterationCount, ), ;, }, if, (, maximalIterationCount, <=, minimalIterationCount, ), {, throw, new, NumberIsTooSmallException, (, maximalIterationCount, ,, minimalIterationCount, ,]
[}, if, (, maximalIterationCount, <=, minimalIterationCount, ), {, throw, new, NumberIsTooSmallException, (, maximalIterationCount, ,, minimalIterationCount, ,, false, ), ;, }]
[}, if, (, maximalIterationCount, <=, minimalIterationCount, ), {, throw, new, NumberIsTooSmallException, (, maximalIterationCount, ,, minimalIterationCount, ,, false, ), ;, }]
[<=, minimalIterationCount, ), {, throw, new, NumberIsTooSmallException, (, maximalIterationCount, ,, minimalIterationCount, ,, false, ), ;, }, this, ., minimalIterationCount, =]
[), {, throw, new, NumberIsTooSmallException, (, maximalIterationCount, ,, minimalIterationCount, ,, false, ), ;, }, this, ., minimalIterationCount, =, minimalIterationCount, ;]
[), {, throw, new, NumberIsTooSmallException, (, maximalIterationCount, ,, minimalIterationCount, ,, false, ), ;, }, this, ., minimalIterationCount, =, minimalIterationCount, ;]
[NumberIsTooSmallException, (, maximalIterationCount, ,, minimalIterationCount, ,, false, ), ;, }, this, ., minimalIterationCount, =, minimalIterationCount, ;, this, ., iterations, =]
[,, false, ), ;, }, this, ., minimalIterationCount, =, minimalIterationCount, ;, this, ., iterations, =, new, Incrementor, (, ), ;]
[,, false, ), ;, }, this, ., minimalIterationCount, =, minimalIterationCount, ;, this, ., iterations, =, new, Incrementor, (, ), ;]
[}, this, ., minimalIterationCount, =, minimalIterationCount, ;, this, ., iterations, =, new, Incrementor, (, ), ;, iterations, ., setMaximalCount, (]
[minimalIterationCount, =, minimalIterationCount, ;, this, ., iterations, =, new, Incrementor, (, ), ;, iterations, ., setMaximalCount, (, maximalIterationCount, ), ;]
[minimalIterationCount, ;, this, ., iterations, =, new, Incrementor, (, ), ;, iterations, ., setMaximalCount, (, maximalIterationCount, ), ;, evaluations, =]
[new, Incrementor, (, ), ;, }, protected, BaseAbstractUnivariateIntegrator, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ), {, this, (]
[(, ), ;, }, protected, BaseAbstractUnivariateIntegrator, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ), {, this, (, relativeAccuracy, ,]
[;, }, protected, BaseAbstractUnivariateIntegrator, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ), {, this, (, relativeAccuracy, ,, absoluteAccuracy, ,]
[protected, BaseAbstractUnivariateIntegrator, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ), {, this, (, relativeAccuracy, ,, absoluteAccuracy, ,, DEFAULT_MIN_ITERATIONS_COUNT, ,]
[;, }, protected, BaseAbstractUnivariateIntegrator, (, final, int, minimalIterationCount, ,, final, int, maximalIterationCount, ), throws, NotStrictlyPositiveException, ,, NumberIsTooSmallException, {, this, (]
[protected, BaseAbstractUnivariateIntegrator, (, final, int, minimalIterationCount, ,, final, int, maximalIterationCount, ), throws, NotStrictlyPositiveException, ,, NumberIsTooSmallException, {, this, (, DEFAULT_RELATIVE_ACCURACY, ,]
[(, final, int, minimalIterationCount, ,, final, int, maximalIterationCount, ), throws, NotStrictlyPositiveException, ,, NumberIsTooSmallException, {, this, (, DEFAULT_RELATIVE_ACCURACY, ,, DEFAULT_ABSOLUTE_ACCURACY, ,]
[int, minimalIterationCount, ,, final, int, maximalIterationCount, ), throws, NotStrictlyPositiveException, ,, NumberIsTooSmallException, {, this, (, DEFAULT_RELATIVE_ACCURACY, ,, DEFAULT_ABSOLUTE_ACCURACY, ,, minimalIterationCount, ,]
[{, this, (, DEFAULT_RELATIVE_ACCURACY, ,, DEFAULT_ABSOLUTE_ACCURACY, ,, minimalIterationCount, ,, maximalIterationCount, ), ;, }, public, double, getRelativeAccuracy, (, ), {, return]
[), ;, }, public, double, getRelativeAccuracy, (, ), {, return, relativeAccuracy, ;, }, public, double, getAbsoluteAccuracy, (, ), {, return]
[relativeAccuracy, ;, }, public, double, getAbsoluteAccuracy, (, ), {, return, absoluteAccuracy, ;, }, public, int, getMinimalIterationCount, (, ), {, return]
[absoluteAccuracy, ;, }, public, int, getMinimalIterationCount, (, ), {, return, minimalIterationCount, ;, }, public, int, getMaximalIterationCount, (, ), {, return]
[absoluteAccuracy, ;, }, public, int, getMinimalIterationCount, (, ), {, return, minimalIterationCount, ;, }, public, int, getMaximalIterationCount, (, ), {, return]
[int, getMaximalIterationCount, (, ), {, return, iterations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (, ), {, return]
[int, getMaximalIterationCount, (, ), {, return, iterations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (, ), {, return]
[int, getEvaluations, (, ), {, return, evaluations, ., getCount, (, ), ;, }, public, int, getIterations, (, ), {, return]
[int, getEvaluations, (, ), {, return, evaluations, ., getCount, (, ), ;, }, public, int, getIterations, (, ), {, return]
[int, getIterations, (, ), {, return, iterations, ., getCount, (, ), ;, }, protected, double, getMin, (, ), {, return]
[), ;, }, protected, double, getMin, (, ), {, return, min, ;, }, protected, double, getMax, (, ), {, return]
[(, ), {, return, max, ;, }, protected, double, computeObjectiveValue, (, final, double, point, ), throws, TooManyEvaluationsException, {, try, {]
[(, ), {, return, max, ;, }, protected, double, computeObjectiveValue, (, final, double, point, ), throws, TooManyEvaluationsException, {, try, {]
[), throws, TooManyEvaluationsException, {, try, {, evaluations, ., incrementCount, (, ), ;, }, catch, (, MaxCountExceededException, e, ), {, throw]
[{, try, {, evaluations, ., incrementCount, (, ), ;, }, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (]
[{, try, {, evaluations, ., incrementCount, (, ), ;, }, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (]
[}, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (, e, ., getMax, (, ), ), ;, }, return]
[}, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (, e, ., getMax, (, ), ), ;, }, return]
[e, ), {, throw, new, TooManyEvaluationsException, (, e, ., getMax, (, ), ), ;, }, return, function, ., value, (]
[int, maxEval, ,, final, UnivariateFunction, f, ,, final, double, lower, ,, final, double, upper, ), throws, NullArgumentException, ,, MathIllegalArgumentException, {]
[int, maxEval, ,, final, UnivariateFunction, f, ,, final, double, lower, ,, final, double, upper, ), throws, NullArgumentException, ,, MathIllegalArgumentException, {]
[UnivariateFunction, f, ,, final, double, lower, ,, final, double, upper, ), throws, NullArgumentException, ,, MathIllegalArgumentException, {, MathUtils, ., checkNotNull, (]
[final, double, lower, ,, final, double, upper, ), throws, NullArgumentException, ,, MathIllegalArgumentException, {, MathUtils, ., checkNotNull, (, f, ), ;]
[final, double, lower, ,, final, double, upper, ), throws, NullArgumentException, ,, MathIllegalArgumentException, {, MathUtils, ., checkNotNull, (, f, ), ;]
[final, double, upper, ), throws, NullArgumentException, ,, MathIllegalArgumentException, {, MathUtils, ., checkNotNull, (, f, ), ;, UnivariateSolverUtils, ., verifyInterval, (]
[upper, ), throws, NullArgumentException, ,, MathIllegalArgumentException, {, MathUtils, ., checkNotNull, (, f, ), ;, UnivariateSolverUtils, ., verifyInterval, (, lower, ,]
[NullArgumentException, ,, MathIllegalArgumentException, {, MathUtils, ., checkNotNull, (, f, ), ;, UnivariateSolverUtils, ., verifyInterval, (, lower, ,, upper, ), ;]
[MathIllegalArgumentException, {, MathUtils, ., checkNotNull, (, f, ), ;, UnivariateSolverUtils, ., verifyInterval, (, lower, ,, upper, ), ;, min, =]
[MathUtils, ., checkNotNull, (, f, ), ;, UnivariateSolverUtils, ., verifyInterval, (, lower, ,, upper, ), ;, min, =, lower, ;]
[checkNotNull, (, f, ), ;, UnivariateSolverUtils, ., verifyInterval, (, lower, ,, upper, ), ;, min, =, lower, ;, max, =]
[f, ), ;, UnivariateSolverUtils, ., verifyInterval, (, lower, ,, upper, ), ;, min, =, lower, ;, max, =, upper, ;]
[;, UnivariateSolverUtils, ., verifyInterval, (, lower, ,, upper, ), ;, min, =, lower, ;, max, =, upper, ;, function, =]
[., verifyInterval, (, lower, ,, upper, ), ;, min, =, lower, ;, max, =, upper, ;, function, =, f, ;]
[., verifyInterval, (, lower, ,, upper, ), ;, min, =, lower, ;, max, =, upper, ;, function, =, f, ;]
[,, upper, ), ;, min, =, lower, ;, max, =, upper, ;, function, =, f, ;, evaluations, ., setMaximalCount, (]
[;, min, =, lower, ;, max, =, upper, ;, function, =, f, ;, evaluations, ., setMaximalCount, (, maxEval, ), ;]
[;, min, =, lower, ;, max, =, upper, ;, function, =, f, ;, evaluations, ., setMaximalCount, (, maxEval, ), ;]
[=, upper, ;, function, =, f, ;, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;]
[=, upper, ;, function, =, f, ;, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;]
[UnivariateFunction, f, ,, final, double, lower, ,, final, double, upper, ), throws, TooManyEvaluationsException, ,, MaxCountExceededException, ,, MathIllegalArgumentException, ,, NullArgumentException, {]
[,, final, double, lower, ,, final, double, upper, ), throws, TooManyEvaluationsException, ,, MaxCountExceededException, ,, MathIllegalArgumentException, ,, NullArgumentException, {, setup, (]
[double, lower, ,, final, double, upper, ), throws, TooManyEvaluationsException, ,, MaxCountExceededException, ,, MathIllegalArgumentException, ,, NullArgumentException, {, setup, (, maxEval, ,]
[,, final, double, upper, ), throws, TooManyEvaluationsException, ,, MaxCountExceededException, ,, MathIllegalArgumentException, ,, NullArgumentException, {, setup, (, maxEval, ,, f, ,]
[double, upper, ), throws, TooManyEvaluationsException, ,, MaxCountExceededException, ,, MathIllegalArgumentException, ,, NullArgumentException, {, setup, (, maxEval, ,, f, ,, lower, ,]
[TooManyEvaluationsException, ,, MaxCountExceededException, ,, MathIllegalArgumentException, ,, NullArgumentException, {, setup, (, maxEval, ,, f, ,, lower, ,, upper, ), ;, return]
