[util, ., PublicCloneable, ;, public, class, KeyToGroupMap, implements, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[., PublicCloneable, ;, public, class, KeyToGroupMap, implements, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[;, private, Comparable, defaultGroup, ;, private, List, groups, ;, private, Map, keyToGroupMap, ;, public, KeyToGroupMap, (, ), {, this, (]
[public, KeyToGroupMap, (, ), {, this, (, "Default Group", ), ;, }, public, KeyToGroupMap, (, Comparable, defaultGroup, ), {, if, (]
[public, KeyToGroupMap, (, ), {, this, (, "Default Group", ), ;, }, public, KeyToGroupMap, (, Comparable, defaultGroup, ), {, if, (]
[(, ), {, this, (, "Default Group", ), ;, }, public, KeyToGroupMap, (, Comparable, defaultGroup, ), {, if, (, defaultGroup, ==]
[(, "Default Group", ), ;, }, public, KeyToGroupMap, (, Comparable, defaultGroup, ), {, if, (, defaultGroup, ==, null, ), {, throw]
[;, }, public, KeyToGroupMap, (, Comparable, defaultGroup, ), {, if, (, defaultGroup, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Comparable, defaultGroup, ), {, if, (, defaultGroup, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'defaultGroup' argument.", ), ;, }]
[(, Comparable, defaultGroup, ), {, if, (, defaultGroup, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'defaultGroup' argument.", ), ;, }]
[{, if, (, defaultGroup, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'defaultGroup' argument.", ), ;, }, this, ., defaultGroup, =]
[(, defaultGroup, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'defaultGroup' argument.", ), ;, }, this, ., defaultGroup, =, defaultGroup, ;]
[(, defaultGroup, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'defaultGroup' argument.", ), ;, }, this, ., defaultGroup, =, defaultGroup, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'defaultGroup' argument.", ), ;, }, this, ., defaultGroup, =, defaultGroup, ;, this, ., groups, =]
[(, "Null 'defaultGroup' argument.", ), ;, }, this, ., defaultGroup, =, defaultGroup, ;, this, ., groups, =, new, ArrayList, (, ), ;]
[(, "Null 'defaultGroup' argument.", ), ;, }, this, ., defaultGroup, =, defaultGroup, ;, this, ., groups, =, new, ArrayList, (, ), ;]
[}, this, ., defaultGroup, =, defaultGroup, ;, this, ., groups, =, new, ArrayList, (, ), ;, this, ., keyToGroupMap, =]
[(, ), ;, this, ., keyToGroupMap, =, new, HashMap, (, ), ;, }, public, int, getGroupCount, (, ), {, return]
[(, ), ;, this, ., keyToGroupMap, =, new, HashMap, (, ), ;, }, public, int, getGroupCount, (, ), {, return]
[(, ), ;, this, ., keyToGroupMap, =, new, HashMap, (, ), ;, }, public, int, getGroupCount, (, ), {, return]
[(, ), ;, this, ., keyToGroupMap, =, new, HashMap, (, ), ;, }, public, int, getGroupCount, (, ), {, return]
[HashMap, (, ), ;, }, public, int, getGroupCount, (, ), {, return, this, ., groups, ., size, (, ), +]
[this, ., groups, ., size, (, ), +, 1, ;, }, public, List, getGroups, (, ), {, List, result, =]
[(, ), +, 1, ;, }, public, List, getGroups, (, ), {, List, result, =, new, ArrayList, (, ), ;]
[(, ), +, 1, ;, }, public, List, getGroups, (, ), {, List, result, =, new, ArrayList, (, ), ;]
[;, }, public, List, getGroups, (, ), {, List, result, =, new, ArrayList, (, ), ;, result, ., add, (]
[;, }, public, List, getGroups, (, ), {, List, result, =, new, ArrayList, (, ), ;, result, ., add, (]
[List, result, =, new, ArrayList, (, ), ;, result, ., add, (, this, ., defaultGroup, ), ;, Iterator, iterator, =]
[List, result, =, new, ArrayList, (, ), ;, result, ., add, (, this, ., defaultGroup, ), ;, Iterator, iterator, =]
[List, result, =, new, ArrayList, (, ), ;, result, ., add, (, this, ., defaultGroup, ), ;, Iterator, iterator, =]
[add, (, this, ., defaultGroup, ), ;, Iterator, iterator, =, this, ., groups, ., iterator, (, ), ;, while, (]
[add, (, this, ., defaultGroup, ), ;, Iterator, iterator, =, this, ., groups, ., iterator, (, ), ;, while, (]
[this, ., groups, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, group, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, group, =, (, Comparable, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, group, =, (, Comparable, )]
[., hasNext, (, ), ), {, Comparable, group, =, (, Comparable, ), iterator, ., next, (, ), ;, if, (]
[hasNext, (, ), ), {, Comparable, group, =, (, Comparable, ), iterator, ., next, (, ), ;, if, (, !]
[hasNext, (, ), ), {, Comparable, group, =, (, Comparable, ), iterator, ., next, (, ), ;, if, (, !]
[{, Comparable, group, =, (, Comparable, ), iterator, ., next, (, ), ;, if, (, !, result, ., contains, (]
[(, Comparable, ), iterator, ., next, (, ), ;, if, (, !, result, ., contains, (, group, ), ), {]
[(, Comparable, ), iterator, ., next, (, ), ;, if, (, !, result, ., contains, (, group, ), ), {]
[., next, (, ), ;, if, (, !, result, ., contains, (, group, ), ), {, result, ., add, (]
[(, !, result, ., contains, (, group, ), ), {, result, ., add, (, group, ), ;, }, }, return]
[group, ), ;, }, }, return, result, ;, }, public, int, getGroupIndex, (, Comparable, group, ), {, int, result, =]
[group, ), ;, }, }, return, result, ;, }, public, int, getGroupIndex, (, Comparable, group, ), {, int, result, =]
[group, ), ;, }, }, return, result, ;, }, public, int, getGroupIndex, (, Comparable, group, ), {, int, result, =]
[result, ;, }, public, int, getGroupIndex, (, Comparable, group, ), {, int, result, =, this, ., groups, ., indexOf, (]
[getGroupIndex, (, Comparable, group, ), {, int, result, =, this, ., groups, ., indexOf, (, group, ), ;, if, (]
[getGroupIndex, (, Comparable, group, ), {, int, result, =, this, ., groups, ., indexOf, (, group, ), ;, if, (]
[Comparable, group, ), {, int, result, =, this, ., groups, ., indexOf, (, group, ), ;, if, (, result, <]
[result, =, this, ., groups, ., indexOf, (, group, ), ;, if, (, result, <, 0, ), {, if, (]
[result, =, this, ., groups, ., indexOf, (, group, ), ;, if, (, result, <, 0, ), {, if, (]
[result, =, this, ., groups, ., indexOf, (, group, ), ;, if, (, result, <, 0, ), {, if, (]
[indexOf, (, group, ), ;, if, (, result, <, 0, ), {, if, (, this, ., defaultGroup, ., equals, (]
[;, if, (, result, <, 0, ), {, if, (, this, ., defaultGroup, ., equals, (, group, ), ), {]
[(, result, <, 0, ), {, if, (, this, ., defaultGroup, ., equals, (, group, ), ), {, result, =]
[if, (, this, ., defaultGroup, ., equals, (, group, ), ), {, result, =, 0, ;, }, }, else, {]
[this, ., defaultGroup, ., equals, (, group, ), ), {, result, =, 0, ;, }, }, else, {, result, =]
[this, ., defaultGroup, ., equals, (, group, ), ), {, result, =, 0, ;, }, }, else, {, result, =]
[defaultGroup, ., equals, (, group, ), ), {, result, =, 0, ;, }, }, else, {, result, =, result, +]
[group, ), ), {, result, =, 0, ;, }, }, else, {, result, =, result, +, 1, ;, }, return]
[=, result, +, 1, ;, }, return, result, ;, }, public, Comparable, getGroup, (, Comparable, key, ), {, if, (]
[=, result, +, 1, ;, }, return, result, ;, }, public, Comparable, getGroup, (, Comparable, key, ), {, if, (]
[+, 1, ;, }, return, result, ;, }, public, Comparable, getGroup, (, Comparable, key, ), {, if, (, key, ==]
[return, result, ;, }, public, Comparable, getGroup, (, Comparable, key, ), {, if, (, key, ==, null, ), {, throw]
[}, public, Comparable, getGroup, (, Comparable, key, ), {, if, (, key, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, key, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, result, =]
[), {, if, (, key, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, result, =]
[), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, result, =, this, ., defaultGroup, ;, Comparable, group, =]
[new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, result, =, this, ., defaultGroup, ;, Comparable, group, =, (, Comparable, )]
[new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, result, =, this, ., defaultGroup, ;, Comparable, group, =, (, Comparable, )]
[new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, result, =, this, ., defaultGroup, ;, Comparable, group, =, (, Comparable, )]
[}, Comparable, result, =, this, ., defaultGroup, ;, Comparable, group, =, (, Comparable, ), this, ., keyToGroupMap, ., get, (]
[., defaultGroup, ;, Comparable, group, =, (, Comparable, ), this, ., keyToGroupMap, ., get, (, key, ), ;, if, (]
[., defaultGroup, ;, Comparable, group, =, (, Comparable, ), this, ., keyToGroupMap, ., get, (, key, ), ;, if, (]
[;, Comparable, group, =, (, Comparable, ), this, ., keyToGroupMap, ., get, (, key, ), ;, if, (, group, !=]
[=, (, Comparable, ), this, ., keyToGroupMap, ., get, (, key, ), ;, if, (, group, !=, null, ), {]
[Comparable, ), this, ., keyToGroupMap, ., get, (, key, ), ;, if, (, group, !=, null, ), {, result, =]
[keyToGroupMap, ., get, (, key, ), ;, if, (, group, !=, null, ), {, result, =, group, ;, }, return]
[group, ;, }, return, result, ;, }, public, void, mapKeyToGroup, (, Comparable, key, ,, Comparable, group, ), {, if, (]
[group, ;, }, return, result, ;, }, public, void, mapKeyToGroup, (, Comparable, key, ,, Comparable, group, ), {, if, (]
[}, return, result, ;, }, public, void, mapKeyToGroup, (, Comparable, key, ,, Comparable, group, ), {, if, (, key, ==]
[}, public, void, mapKeyToGroup, (, Comparable, key, ,, Comparable, group, ), {, if, (, key, ==, null, ), {, throw]
[mapKeyToGroup, (, Comparable, key, ,, Comparable, group, ), {, if, (, key, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, key, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, currentGroup, =]
[if, (, key, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, currentGroup, =, getGroup, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, currentGroup, =, getGroup, (, key, ), ;, if, (]
[{, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, currentGroup, =, getGroup, (, key, ), ;, if, (, !]
[{, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, currentGroup, =, getGroup, (, key, ), ;, if, (, !]
[(, "Null 'key' argument.", ), ;, }, Comparable, currentGroup, =, getGroup, (, key, ), ;, if, (, !, currentGroup, ., equals, (]
[(, "Null 'key' argument.", ), ;, }, Comparable, currentGroup, =, getGroup, (, key, ), ;, if, (, !, currentGroup, ., equals, (]
[getGroup, (, key, ), ;, if, (, !, currentGroup, ., equals, (, this, ., defaultGroup, ), ), {, if, (]
[(, key, ), ;, if, (, !, currentGroup, ., equals, (, this, ., defaultGroup, ), ), {, if, (, !]
[(, key, ), ;, if, (, !, currentGroup, ., equals, (, this, ., defaultGroup, ), ), {, if, (, !]
[if, (, !, currentGroup, ., equals, (, this, ., defaultGroup, ), ), {, if, (, !, currentGroup, ., equals, (]
[this, ., defaultGroup, ), ), {, if, (, !, currentGroup, ., equals, (, group, ), ), {, int, count, =]
[defaultGroup, ), ), {, if, (, !, currentGroup, ., equals, (, group, ), ), {, int, count, =, getKeyCount, (]
[(, !, currentGroup, ., equals, (, group, ), ), {, int, count, =, getKeyCount, (, currentGroup, ), ;, if, (]
[(, !, currentGroup, ., equals, (, group, ), ), {, int, count, =, getKeyCount, (, currentGroup, ), ;, if, (]
[currentGroup, ., equals, (, group, ), ), {, int, count, =, getKeyCount, (, currentGroup, ), ;, if, (, count, ==]
[(, group, ), ), {, int, count, =, getKeyCount, (, currentGroup, ), ;, if, (, count, ==, 1, ), {]
[(, group, ), ), {, int, count, =, getKeyCount, (, currentGroup, ), ;, if, (, count, ==, 1, ), {]
[(, group, ), ), {, int, count, =, getKeyCount, (, currentGroup, ), ;, if, (, count, ==, 1, ), {]
[count, =, getKeyCount, (, currentGroup, ), ;, if, (, count, ==, 1, ), {, this, ., groups, ., remove, (]
[(, count, ==, 1, ), {, this, ., groups, ., remove, (, currentGroup, ), ;, }, }, }, if, (]
[(, count, ==, 1, ), {, this, ., groups, ., remove, (, currentGroup, ), ;, }, }, }, if, (]
[==, 1, ), {, this, ., groups, ., remove, (, currentGroup, ), ;, }, }, }, if, (, group, ==]
[{, this, ., groups, ., remove, (, currentGroup, ), ;, }, }, }, if, (, group, ==, null, ), {]
[{, this, ., groups, ., remove, (, currentGroup, ), ;, }, }, }, if, (, group, ==, null, ), {]
[{, this, ., groups, ., remove, (, currentGroup, ), ;, }, }, }, if, (, group, ==, null, ), {]
[(, currentGroup, ), ;, }, }, }, if, (, group, ==, null, ), {, this, ., keyToGroupMap, ., remove, (]
[(, group, ==, null, ), {, this, ., keyToGroupMap, ., remove, (, key, ), ;, }, else, {, if, (]
[group, ==, null, ), {, this, ., keyToGroupMap, ., remove, (, key, ), ;, }, else, {, if, (, !]
[group, ==, null, ), {, this, ., keyToGroupMap, ., remove, (, key, ), ;, }, else, {, if, (, !]
[group, ==, null, ), {, this, ., keyToGroupMap, ., remove, (, key, ), ;, }, else, {, if, (, !]
[., keyToGroupMap, ., remove, (, key, ), ;, }, else, {, if, (, !, this, ., groups, ., contains, (]
[), ;, }, else, {, if, (, !, this, ., groups, ., contains, (, group, ), ), {, if, (]
[;, }, else, {, if, (, !, this, ., groups, ., contains, (, group, ), ), {, if, (, !]
[;, }, else, {, if, (, !, this, ., groups, ., contains, (, group, ), ), {, if, (, !]
[;, }, else, {, if, (, !, this, ., groups, ., contains, (, group, ), ), {, if, (, !]
[!, this, ., groups, ., contains, (, group, ), ), {, if, (, !, this, ., defaultGroup, ., equals, (]
[., contains, (, group, ), ), {, if, (, !, this, ., defaultGroup, ., equals, (, group, ), ), {]
[., contains, (, group, ), ), {, if, (, !, this, ., defaultGroup, ., equals, (, group, ), ), {]
[., contains, (, group, ), ), {, if, (, !, this, ., defaultGroup, ., equals, (, group, ), ), {]
[{, if, (, !, this, ., defaultGroup, ., equals, (, group, ), ), {, this, ., groups, ., add, (]
[., defaultGroup, ., equals, (, group, ), ), {, this, ., groups, ., add, (, group, ), ;, }, }]
[., defaultGroup, ., equals, (, group, ), ), {, this, ., groups, ., add, (, group, ), ;, }, }]
[., defaultGroup, ., equals, (, group, ), ), {, this, ., groups, ., add, (, group, ), ;, }, }]
[), ), {, this, ., groups, ., add, (, group, ), ;, }, }, this, ., keyToGroupMap, ., put, (]
[{, this, ., groups, ., add, (, group, ), ;, }, }, this, ., keyToGroupMap, ., put, (, key, ,]
[., put, (, key, ,, group, ), ;, }, }, public, int, getKeyCount, (, Comparable, group, ), {, if, (]
[., put, (, key, ,, group, ), ;, }, }, public, int, getKeyCount, (, Comparable, group, ), {, if, (]
[(, key, ,, group, ), ;, }, }, public, int, getKeyCount, (, Comparable, group, ), {, if, (, group, ==]
[), ;, }, }, public, int, getKeyCount, (, Comparable, group, ), {, if, (, group, ==, null, ), {, throw]
[}, public, int, getKeyCount, (, Comparable, group, ), {, if, (, group, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, group, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'group' argument.", ), ;, }, int, result, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'group' argument.", ), ;, }, int, result, =, 0, ;, Iterator, iterator, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'group' argument.", ), ;, }, int, result, =, 0, ;, Iterator, iterator, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'group' argument.", ), ;, }, int, result, =, 0, ;, Iterator, iterator, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'group' argument.", ), ;, }, int, result, =, 0, ;, Iterator, iterator, =]
[=, 0, ;, Iterator, iterator, =, this, ., keyToGroupMap, ., values, (, ), ., iterator, (, ), ;, while, (]
[=, 0, ;, Iterator, iterator, =, this, ., keyToGroupMap, ., values, (, ), ., iterator, (, ), ;, while, (]
[values, (, ), ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, g, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, g, =, (, Comparable, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, g, =, (, Comparable, )]
[., hasNext, (, ), ), {, Comparable, g, =, (, Comparable, ), iterator, ., next, (, ), ;, if, (]
[., hasNext, (, ), ), {, Comparable, g, =, (, Comparable, ), iterator, ., next, (, ), ;, if, (]
[), {, Comparable, g, =, (, Comparable, ), iterator, ., next, (, ), ;, if, (, group, ., equals, (]
[=, (, Comparable, ), iterator, ., next, (, ), ;, if, (, group, ., equals, (, g, ), ), {]
[=, (, Comparable, ), iterator, ., next, (, ), ;, if, (, group, ., equals, (, g, ), ), {]
[next, (, ), ;, if, (, group, ., equals, (, g, ), ), {, result, ++, ;, }, }, return]
[{, result, ++, ;, }, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[{, result, ++, ;, }, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[++, ;, }, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, KeyToGroupMap, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, KeyToGroupMap, ), ), {, return, false, ;, }, KeyToGroupMap, that, =]
[if, (, !, (, obj, instanceof, KeyToGroupMap, ), ), {, return, false, ;, }, KeyToGroupMap, that, =, (, KeyToGroupMap, )]
[obj, instanceof, KeyToGroupMap, ), ), {, return, false, ;, }, KeyToGroupMap, that, =, (, KeyToGroupMap, ), obj, ;, if, (]
[instanceof, KeyToGroupMap, ), ), {, return, false, ;, }, KeyToGroupMap, that, =, (, KeyToGroupMap, ), obj, ;, if, (, !]
[instanceof, KeyToGroupMap, ), ), {, return, false, ;, }, KeyToGroupMap, that, =, (, KeyToGroupMap, ), obj, ;, if, (, !]
[{, return, false, ;, }, KeyToGroupMap, that, =, (, KeyToGroupMap, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (]
[{, return, false, ;, }, KeyToGroupMap, that, =, (, KeyToGroupMap, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (]
[}, KeyToGroupMap, that, =, (, KeyToGroupMap, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., defaultGroup, ,]
[}, KeyToGroupMap, that, =, (, KeyToGroupMap, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., defaultGroup, ,]
[obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., defaultGroup, ,, that, ., defaultGroup, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., defaultGroup, ,, that, ., defaultGroup, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., defaultGroup, ,, that, ., defaultGroup, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., defaultGroup, ,, that, ., defaultGroup, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., defaultGroup, ,, that, ., defaultGroup, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., defaultGroup, ), ), {, return, false, ;, }, if, (, !, this, ., keyToGroupMap, ., equals, (]
[,, that, ., defaultGroup, ), ), {, return, false, ;, }, if, (, !, this, ., keyToGroupMap, ., equals, (]
[return, false, ;, }, if, (, !, this, ., keyToGroupMap, ., equals, (, that, ., keyToGroupMap, ), ), {, return]
[if, (, !, this, ., keyToGroupMap, ., equals, (, that, ., keyToGroupMap, ), ), {, return, false, ;, }, return]
[{, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, KeyToGroupMap, result, =]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, KeyToGroupMap, result, =, (, KeyToGroupMap, )]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, KeyToGroupMap, result, =, (, KeyToGroupMap, )]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, KeyToGroupMap, result, =, (, KeyToGroupMap, ), super, ., clone, (, ), ;]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, KeyToGroupMap, result, =, (, KeyToGroupMap, ), super, ., clone, (, ), ;]
[), throws, CloneNotSupportedException, {, KeyToGroupMap, result, =, (, KeyToGroupMap, ), super, ., clone, (, ), ;, result, ., defaultGroup, =]
[{, KeyToGroupMap, result, =, (, KeyToGroupMap, ), super, ., clone, (, ), ;, result, ., defaultGroup, =, (, Comparable, )]
[{, KeyToGroupMap, result, =, (, KeyToGroupMap, ), super, ., clone, (, ), ;, result, ., defaultGroup, =, (, Comparable, )]
[(, KeyToGroupMap, ), super, ., clone, (, ), ;, result, ., defaultGroup, =, (, Comparable, ), KeyToGroupMap, ., clone, (]
[(, KeyToGroupMap, ), super, ., clone, (, ), ;, result, ., defaultGroup, =, (, Comparable, ), KeyToGroupMap, ., clone, (]
[clone, (, ), ;, result, ., defaultGroup, =, (, Comparable, ), KeyToGroupMap, ., clone, (, this, ., defaultGroup, ), ;]
[clone, (, ), ;, result, ., defaultGroup, =, (, Comparable, ), KeyToGroupMap, ., clone, (, this, ., defaultGroup, ), ;]
[result, ., defaultGroup, =, (, Comparable, ), KeyToGroupMap, ., clone, (, this, ., defaultGroup, ), ;, result, ., groups, =]
[=, (, Comparable, ), KeyToGroupMap, ., clone, (, this, ., defaultGroup, ), ;, result, ., groups, =, (, List, )]
[=, (, Comparable, ), KeyToGroupMap, ., clone, (, this, ., defaultGroup, ), ;, result, ., groups, =, (, List, )]
[KeyToGroupMap, ., clone, (, this, ., defaultGroup, ), ;, result, ., groups, =, (, List, ), KeyToGroupMap, ., clone, (]
[KeyToGroupMap, ., clone, (, this, ., defaultGroup, ), ;, result, ., groups, =, (, List, ), KeyToGroupMap, ., clone, (]
[., defaultGroup, ), ;, result, ., groups, =, (, List, ), KeyToGroupMap, ., clone, (, this, ., groups, ), ;]
[., defaultGroup, ), ;, result, ., groups, =, (, List, ), KeyToGroupMap, ., clone, (, this, ., groups, ), ;]
[result, ., groups, =, (, List, ), KeyToGroupMap, ., clone, (, this, ., groups, ), ;, result, ., keyToGroupMap, =]
[=, (, List, ), KeyToGroupMap, ., clone, (, this, ., groups, ), ;, result, ., keyToGroupMap, =, (, Map, )]
[=, (, List, ), KeyToGroupMap, ., clone, (, this, ., groups, ), ;, result, ., keyToGroupMap, =, (, Map, )]
[KeyToGroupMap, ., clone, (, this, ., groups, ), ;, result, ., keyToGroupMap, =, (, Map, ), KeyToGroupMap, ., clone, (]
[KeyToGroupMap, ., clone, (, this, ., groups, ), ;, result, ., keyToGroupMap, =, (, Map, ), KeyToGroupMap, ., clone, (]
[groups, ), ;, result, ., keyToGroupMap, =, (, Map, ), KeyToGroupMap, ., clone, (, this, ., keyToGroupMap, ), ;, return]
[this, ., keyToGroupMap, ), ;, return, result, ;, }, private, static, Object, clone, (, Object, object, ), {, if, (]
[this, ., keyToGroupMap, ), ;, return, result, ;, }, private, static, Object, clone, (, Object, object, ), {, if, (]
[keyToGroupMap, ), ;, return, result, ;, }, private, static, Object, clone, (, Object, object, ), {, if, (, object, ==]
[result, ;, }, private, static, Object, clone, (, Object, object, ), {, if, (, object, ==, null, ), {, return]
[clone, (, Object, object, ), {, if, (, object, ==, null, ), {, return, null, ;, }, Class, c, =]
[clone, (, Object, object, ), {, if, (, object, ==, null, ), {, return, null, ;, }, Class, c, =]
[==, null, ), {, return, null, ;, }, Class, c, =, object, ., getClass, (, ), ;, Object, result, =]
[}, Class, c, =, object, ., getClass, (, ), ;, Object, result, =, null, ;, try, {, Method, m, =]
[}, Class, c, =, object, ., getClass, (, ), ;, Object, result, =, null, ;, try, {, Method, m, =]
[object, ., getClass, (, ), ;, Object, result, =, null, ;, try, {, Method, m, =, c, ., getMethod, (]
[getClass, (, ), ;, Object, result, =, null, ;, try, {, Method, m, =, c, ., getMethod, (, "clone", ,]
[result, =, null, ;, try, {, Method, m, =, c, ., getMethod, (, "clone", ,, (, Class, [, ], )]
[{, Method, m, =, c, ., getMethod, (, "clone", ,, (, Class, [, ], ), null, ), ;, if, (]
[{, Method, m, =, c, ., getMethod, (, "clone", ,, (, Class, [, ], ), null, ), ;, if, (]
[c, ., getMethod, (, "clone", ,, (, Class, [, ], ), null, ), ;, if, (, Modifier, ., isPublic, (]
[c, ., getMethod, (, "clone", ,, (, Class, [, ], ), null, ), ;, if, (, Modifier, ., isPublic, (]
[), null, ), ;, if, (, Modifier, ., isPublic, (, m, ., getModifiers, (, ), ), ), {, try, {]
[), ;, if, (, Modifier, ., isPublic, (, m, ., getModifiers, (, ), ), ), {, try, {, result, =]
[), ;, if, (, Modifier, ., isPublic, (, m, ., getModifiers, (, ), ), ), {, try, {, result, =]
[Modifier, ., isPublic, (, m, ., getModifiers, (, ), ), ), {, try, {, result, =, m, ., invoke, (]
[isPublic, (, m, ., getModifiers, (, ), ), ), {, try, {, result, =, m, ., invoke, (, object, ,]
[(, ), ), ), {, try, {, result, =, m, ., invoke, (, object, ,, (, Object, [, ], )]
[., invoke, (, object, ,, (, Object, [, ], ), null, ), ;, }, catch, (, Exception, e, ), {]
[., invoke, (, object, ,, (, Object, [, ], ), null, ), ;, }, catch, (, Exception, e, ), {]
[(, Exception, e, ), {, e, ., printStackTrace, (, ), ;, }, }, }, catch, (, NoSuchMethodException, e, ), {]
[e, ), {, e, ., printStackTrace, (, ), ;, }, }, }, catch, (, NoSuchMethodException, e, ), {, result, =]
[., printStackTrace, (, ), ;, }, }, }, catch, (, NoSuchMethodException, e, ), {, result, =, object, ;, }, return]
[;, }, return, result, ;, }, private, static, Collection, clone, (, Collection, list, ), throws, CloneNotSupportedException, {, Collection, result, =]
[;, }, private, static, Collection, clone, (, Collection, list, ), throws, CloneNotSupportedException, {, Collection, result, =, null, ;, if, (]
[;, }, private, static, Collection, clone, (, Collection, list, ), throws, CloneNotSupportedException, {, Collection, result, =, null, ;, if, (]
[private, static, Collection, clone, (, Collection, list, ), throws, CloneNotSupportedException, {, Collection, result, =, null, ;, if, (, list, !=]
[throws, CloneNotSupportedException, {, Collection, result, =, null, ;, if, (, list, !=, null, ), {, try, {, List, clone, =]
[Collection, result, =, null, ;, if, (, list, !=, null, ), {, try, {, List, clone, =, (, List, )]
[Collection, result, =, null, ;, if, (, list, !=, null, ), {, try, {, List, clone, =, (, List, )]
[Collection, result, =, null, ;, if, (, list, !=, null, ), {, try, {, List, clone, =, (, List, )]
[{, List, clone, =, (, List, ), list, ., getClass, (, ), ., newInstance, (, ), ;, Iterator, iterator, =]
[{, List, clone, =, (, List, ), list, ., getClass, (, ), ., newInstance, (, ), ;, Iterator, iterator, =]
[., getClass, (, ), ., newInstance, (, ), ;, Iterator, iterator, =, list, ., iterator, (, ), ;, while, (]
[., getClass, (, ), ., newInstance, (, ), ;, Iterator, iterator, =, list, ., iterator, (, ), ;, while, (]
[), ;, Iterator, iterator, =, list, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {]
[), ;, Iterator, iterator, =, list, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {]
[=, list, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, clone, ., add, (]
[=, list, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, clone, ., add, (]
[(, ), ;, while, (, iterator, ., hasNext, (, ), ), {, clone, ., add, (, KeyToGroupMap, ., clone, (]
[(, ), ;, while, (, iterator, ., hasNext, (, ), ), {, clone, ., add, (, KeyToGroupMap, ., clone, (]
[), ), {, clone, ., add, (, KeyToGroupMap, ., clone, (, iterator, ., next, (, ), ), ), ;, }]
[{, clone, ., add, (, KeyToGroupMap, ., clone, (, iterator, ., next, (, ), ), ), ;, }, result, =]
[., next, (, ), ), ), ;, }, result, =, clone, ;, }, catch, (, Exception, e, ), {, throw]
[), ), ), ;, }, result, =, clone, ;, }, catch, (, Exception, e, ), {, throw, new, CloneNotSupportedException, (]
[=, clone, ;, }, catch, (, Exception, e, ), {, throw, new, CloneNotSupportedException, (, "Exception.", ), ;, }, }, return]
