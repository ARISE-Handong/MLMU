[;, public, static, final, BlockBorder, NONE, =, new, BlockBorder, (, RectangleInsets, ., ZERO_INSETS, ,, Color, ., white, ), ;, private]
[;, private, RectangleInsets, insets, ;, private, transient, Paint, paint, ;, public, BlockBorder, (, ), {, this, (, Color, ., black]
[,, Color, ., white, ), ;, private, RectangleInsets, insets, ;, private, transient, Paint, paint, ;, public, BlockBorder, (, ), {]
[., ZERO_INSETS, ,, Color, ., white, ), ;, private, RectangleInsets, insets, ;, private, transient, Paint, paint, ;, public, BlockBorder, (]
[), ;, private, RectangleInsets, insets, ;, private, transient, Paint, paint, ;, public, BlockBorder, (, ), {, this, (, Color, .]
[., white, ), ;, private, RectangleInsets, insets, ;, private, transient, Paint, paint, ;, public, BlockBorder, (, ), {, this, (]
[), ;, }, public, BlockBorder, (, Paint, paint, ), {, this, (, new, RectangleInsets, (, 1, ,, 1, ,, 1]
[., black, ), ;, }, public, BlockBorder, (, Paint, paint, ), {, this, (, new, RectangleInsets, (, 1, ,, 1]
[,, paint, ), ;, }, public, BlockBorder, (, double, top, ,, double, left, ,, double, bottom, ,, double, right, )]
[,, 1, ,, 1, ,, 1, ), ,, paint, ), ;, }, public, BlockBorder, (, double, top, ,, double, left]
[,, 1, ,, 1, ), ,, paint, ), ;, }, public, BlockBorder, (, double, top, ,, double, left, ,, double]
[,, 1, ), ,, paint, ), ;, }, public, BlockBorder, (, double, top, ,, double, left, ,, double, bottom, ,]
[), ,, paint, ), ;, }, public, BlockBorder, (, double, top, ,, double, left, ,, double, bottom, ,, double, right]
[), ;, }, public, BlockBorder, (, double, top, ,, double, left, ,, double, bottom, ,, double, right, ), {, this]
[,, Color, ., black, ), ;, }, public, BlockBorder, (, double, top, ,, double, left, ,, double, bottom, ,, double]
[,, left, ,, bottom, ,, right, ), ,, Color, ., black, ), ;, }, public, BlockBorder, (, double, top, ,]
[,, bottom, ,, right, ), ,, Color, ., black, ), ;, }, public, BlockBorder, (, double, top, ,, double, left]
[,, right, ), ,, Color, ., black, ), ;, }, public, BlockBorder, (, double, top, ,, double, left, ,, double]
[), ,, Color, ., black, ), ;, }, public, BlockBorder, (, double, top, ,, double, left, ,, double, bottom, ,]
[), ;, }, public, BlockBorder, (, double, top, ,, double, left, ,, double, bottom, ,, double, right, ,, Paint, paint]
[., black, ), ;, }, public, BlockBorder, (, double, top, ,, double, left, ,, double, bottom, ,, double, right, ,]
[,, paint, ), ;, }, public, BlockBorder, (, RectangleInsets, insets, ,, Paint, paint, ), {, if, (, insets, ==, null]
[,, left, ,, bottom, ,, right, ), ,, paint, ), ;, }, public, BlockBorder, (, RectangleInsets, insets, ,, Paint, paint]
[,, bottom, ,, right, ), ,, paint, ), ;, }, public, BlockBorder, (, RectangleInsets, insets, ,, Paint, paint, ), {]
[,, right, ), ,, paint, ), ;, }, public, BlockBorder, (, RectangleInsets, insets, ,, Paint, paint, ), {, if, (]
[), ,, paint, ), ;, }, public, BlockBorder, (, RectangleInsets, insets, ,, Paint, paint, ), {, if, (, insets, ==]
[), ;, }, public, BlockBorder, (, RectangleInsets, insets, ,, Paint, paint, ), {, if, (, insets, ==, null, ), {]
[), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., insets]
[), ;, }, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., insets, =, insets, ;, this, ., paint, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., insets, =, insets, ;, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., insets, =, insets, ;, this, ., paint, =]
[;, }, this, ., insets, =, insets, ;, this, ., paint, =, paint, ;, }, public, RectangleInsets, getInsets, (, )]
[), ;, }, this, ., insets, =, insets, ;, this, ., paint, =, paint, ;, }, public, RectangleInsets, getInsets, (]
[=, insets, ;, this, ., paint, =, paint, ;, }, public, RectangleInsets, getInsets, (, ), {, return, this, ., insets]
[., insets, =, insets, ;, this, ., paint, =, paint, ;, }, public, RectangleInsets, getInsets, (, ), {, return, this]
[;, this, ., paint, =, paint, ;, }, public, RectangleInsets, getInsets, (, ), {, return, this, ., insets, ;, }]
[=, paint, ;, }, public, RectangleInsets, getInsets, (, ), {, return, this, ., insets, ;, }, public, Paint, getPaint, (]
[., paint, =, paint, ;, }, public, RectangleInsets, getInsets, (, ), {, return, this, ., insets, ;, }, public, Paint]
[;, }, public, RectangleInsets, getInsets, (, ), {, return, this, ., insets, ;, }, public, Paint, getPaint, (, ), {]
[;, }, public, Paint, getPaint, (, ), {, return, this, ., paint, ;, }, public, void, draw, (, Graphics2D, g2]
[., insets, ;, }, public, Paint, getPaint, (, ), {, return, this, ., paint, ;, }, public, void, draw, (]
[;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, double, t, =, this, ., insets, .]
[., paint, ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, double, t, =, this, .]
[;, double, b, =, this, ., insets, ., calculateBottomInset, (, area, ., getHeight, (, ), ), ;, double, l, =]
[., calculateTopInset, (, area, ., getHeight, (, ), ), ;, double, b, =, this, ., insets, ., calculateBottomInset, (, area]
[., insets, ., calculateTopInset, (, area, ., getHeight, (, ), ), ;, double, b, =, this, ., insets, ., calculateBottomInset]
[), ;, double, b, =, this, ., insets, ., calculateBottomInset, (, area, ., getHeight, (, ), ), ;, double, l]
[., getHeight, (, ), ), ;, double, b, =, this, ., insets, ., calculateBottomInset, (, area, ., getHeight, (, )]
[;, double, l, =, this, ., insets, ., calculateLeftInset, (, area, ., getWidth, (, ), ), ;, double, r, =]
[., calculateBottomInset, (, area, ., getHeight, (, ), ), ;, double, l, =, this, ., insets, ., calculateLeftInset, (, area]
[., insets, ., calculateBottomInset, (, area, ., getHeight, (, ), ), ;, double, l, =, this, ., insets, ., calculateLeftInset]
[), ;, double, l, =, this, ., insets, ., calculateLeftInset, (, area, ., getWidth, (, ), ), ;, double, r]
[., getHeight, (, ), ), ;, double, l, =, this, ., insets, ., calculateLeftInset, (, area, ., getWidth, (, )]
[;, double, r, =, this, ., insets, ., calculateRightInset, (, area, ., getWidth, (, ), ), ;, double, x, =]
[., calculateLeftInset, (, area, ., getWidth, (, ), ), ;, double, r, =, this, ., insets, ., calculateRightInset, (, area]
[., insets, ., calculateLeftInset, (, area, ., getWidth, (, ), ), ;, double, r, =, this, ., insets, ., calculateRightInset]
[), ;, double, r, =, this, ., insets, ., calculateRightInset, (, area, ., getWidth, (, ), ), ;, double, x]
[., getWidth, (, ), ), ;, double, r, =, this, ., insets, ., calculateRightInset, (, area, ., getWidth, (, )]
[;, double, x, =, area, ., getX, (, ), ;, double, y, =, area, ., getY, (, ), ;, double]
[., calculateRightInset, (, area, ., getWidth, (, ), ), ;, double, x, =, area, ., getX, (, ), ;, double]
[., insets, ., calculateRightInset, (, area, ., getWidth, (, ), ), ;, double, x, =, area, ., getX, (, )]
[), ;, double, x, =, area, ., getX, (, ), ;, double, y, =, area, ., getY, (, ), ;]
[., getWidth, (, ), ), ;, double, x, =, area, ., getX, (, ), ;, double, y, =, area, .]
[;, double, y, =, area, ., getY, (, ), ;, double, w, =, area, ., getWidth, (, ), ;, double]
[., getX, (, ), ;, double, y, =, area, ., getY, (, ), ;, double, w, =, area, ., getWidth]
[;, double, w, =, area, ., getWidth, (, ), ;, double, h, =, area, ., getHeight, (, ), ;, g2]
[., getY, (, ), ;, double, w, =, area, ., getWidth, (, ), ;, double, h, =, area, ., getHeight]
[;, double, h, =, area, ., getHeight, (, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, Rectangle2D]
[., getWidth, (, ), ;, double, h, =, area, ., getHeight, (, ), ;, g2, ., setPaint, (, this, .]
[;, g2, ., setPaint, (, this, ., paint, ), ;, Rectangle2D, rect, =, new, Rectangle2D, ., Double, (, ), ;]
[., getHeight, (, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, Rectangle2D, rect, =, new, Rectangle2D, .]
[;, Rectangle2D, rect, =, new, Rectangle2D, ., Double, (, ), ;, if, (, t, >, 0.0, ), {, rect, .]
[., setPaint, (, this, ., paint, ), ;, Rectangle2D, rect, =, new, Rectangle2D, ., Double, (, ), ;, if, (]
[), ;, Rectangle2D, rect, =, new, Rectangle2D, ., Double, (, ), ;, if, (, t, >, 0.0, ), {, rect]
[., paint, ), ;, Rectangle2D, rect, =, new, Rectangle2D, ., Double, (, ), ;, if, (, t, >, 0.0, )]
[;, if, (, t, >, 0.0, ), {, rect, ., setRect, (, x, ,, y, ,, w, ,, t, )]
[), {, rect, ., setRect, (, x, ,, y, ,, w, ,, t, ), ;, g2, ., fill, (, rect]
[>, 0.0, ), {, rect, ., setRect, (, x, ,, y, ,, w, ,, t, ), ;, g2, ., fill]
[), {, rect, ., setRect, (, x, ,, y, ,, w, ,, t, ), ;, g2, ., fill, (, rect]
[;, g2, ., fill, (, rect, ), ;, }, if, (, b, >, 0.0, ), {, rect, ., setRect, (]
[., setRect, (, x, ,, y, ,, w, ,, t, ), ;, g2, ., fill, (, rect, ), ;, }]
[,, y, ,, w, ,, t, ), ;, g2, ., fill, (, rect, ), ;, }, if, (, b, >]
[,, w, ,, t, ), ;, g2, ., fill, (, rect, ), ;, }, if, (, b, >, 0.0, )]
[,, t, ), ;, g2, ., fill, (, rect, ), ;, }, if, (, b, >, 0.0, ), {, rect]
[), ;, g2, ., fill, (, rect, ), ;, }, if, (, b, >, 0.0, ), {, rect, ., setRect]
[;, }, if, (, b, >, 0.0, ), {, rect, ., setRect, (, x, ,, y, +, h, -, b]
[., fill, (, rect, ), ;, }, if, (, b, >, 0.0, ), {, rect, ., setRect, (, x, ,]
[), ;, }, if, (, b, >, 0.0, ), {, rect, ., setRect, (, x, ,, y, +, h, -]
[), {, rect, ., setRect, (, x, ,, y, +, h, -, b, ,, w, ,, b, ), ;, g2]
[>, 0.0, ), {, rect, ., setRect, (, x, ,, y, +, h, -, b, ,, w, ,, b, )]
[), {, rect, ., setRect, (, x, ,, y, +, h, -, b, ,, w, ,, b, ), ;, g2]
[;, g2, ., fill, (, rect, ), ;, }, if, (, l, >, 0.0, ), {, rect, ., setRect, (]
[., setRect, (, x, ,, y, +, h, -, b, ,, w, ,, b, ), ;, g2, ., fill, (]
[,, y, +, h, -, b, ,, w, ,, b, ), ;, g2, ., fill, (, rect, ), ;, }]
[,, w, ,, b, ), ;, g2, ., fill, (, rect, ), ;, }, if, (, l, >, 0.0, )]
[-, b, ,, w, ,, b, ), ;, g2, ., fill, (, rect, ), ;, }, if, (, l, >]
[+, h, -, b, ,, w, ,, b, ), ;, g2, ., fill, (, rect, ), ;, }, if, (]
[-, b, ,, w, ,, b, ), ;, g2, ., fill, (, rect, ), ;, }, if, (, l, >]
[,, w, ,, b, ), ;, g2, ., fill, (, rect, ), ;, }, if, (, l, >, 0.0, )]
[,, b, ), ;, g2, ., fill, (, rect, ), ;, }, if, (, l, >, 0.0, ), {, rect]
[), ;, g2, ., fill, (, rect, ), ;, }, if, (, l, >, 0.0, ), {, rect, ., setRect]
[;, }, if, (, l, >, 0.0, ), {, rect, ., setRect, (, x, ,, y, ,, l, ,, h]
[., fill, (, rect, ), ;, }, if, (, l, >, 0.0, ), {, rect, ., setRect, (, x, ,]
[), ;, }, if, (, l, >, 0.0, ), {, rect, ., setRect, (, x, ,, y, ,, l, ,]
[), {, rect, ., setRect, (, x, ,, y, ,, l, ,, h, ), ;, g2, ., fill, (, rect]
[>, 0.0, ), {, rect, ., setRect, (, x, ,, y, ,, l, ,, h, ), ;, g2, ., fill]
[), {, rect, ., setRect, (, x, ,, y, ,, l, ,, h, ), ;, g2, ., fill, (, rect]
[;, g2, ., fill, (, rect, ), ;, }, if, (, r, >, 0.0, ), {, rect, ., setRect, (]
[., setRect, (, x, ,, y, ,, l, ,, h, ), ;, g2, ., fill, (, rect, ), ;, }]
[,, y, ,, l, ,, h, ), ;, g2, ., fill, (, rect, ), ;, }, if, (, r, >]
[,, l, ,, h, ), ;, g2, ., fill, (, rect, ), ;, }, if, (, r, >, 0.0, )]
[,, h, ), ;, g2, ., fill, (, rect, ), ;, }, if, (, r, >, 0.0, ), {, rect]
[), ;, g2, ., fill, (, rect, ), ;, }, if, (, r, >, 0.0, ), {, rect, ., setRect]
[;, }, if, (, r, >, 0.0, ), {, rect, ., setRect, (, x, +, w, -, r, ,, y]
[., fill, (, rect, ), ;, }, if, (, r, >, 0.0, ), {, rect, ., setRect, (, x, +]
[), ;, }, if, (, r, >, 0.0, ), {, rect, ., setRect, (, x, +, w, -, r, ,]
[), {, rect, ., setRect, (, x, +, w, -, r, ,, y, ,, r, ,, h, ), ;, g2]
[>, 0.0, ), {, rect, ., setRect, (, x, +, w, -, r, ,, y, ,, r, ,, h, )]
[), {, rect, ., setRect, (, x, +, w, -, r, ,, y, ,, r, ,, h, ), ;, g2]
[;, g2, ., fill, (, rect, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., setRect, (, x, +, w, -, r, ,, y, ,, r, ,, h, ), ;, g2, ., fill, (]
[,, y, ,, r, ,, h, ), ;, g2, ., fill, (, rect, ), ;, }, }, public, boolean, equals]
[-, r, ,, y, ,, r, ,, h, ), ;, g2, ., fill, (, rect, ), ;, }, }, public]
[+, w, -, r, ,, y, ,, r, ,, h, ), ;, g2, ., fill, (, rect, ), ;, }]
[-, r, ,, y, ,, r, ,, h, ), ;, g2, ., fill, (, rect, ), ;, }, }, public]
[,, y, ,, r, ,, h, ), ;, g2, ., fill, (, rect, ), ;, }, }, public, boolean, equals]
[,, r, ,, h, ), ;, g2, ., fill, (, rect, ), ;, }, }, public, boolean, equals, (, Object]
[,, h, ), ;, g2, ., fill, (, rect, ), ;, }, }, public, boolean, equals, (, Object, obj, )]
[), ;, g2, ., fill, (, rect, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if]
[;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[., fill, (, rect, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, BlockBorder, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, BlockBorder, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, BlockBorder, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, BlockBorder, ), ), {, return, false, ;, }, BlockBorder, that, =, (]
[), {, return, false, ;, }, BlockBorder, that, =, (, BlockBorder, ), obj, ;, if, (, !, this, ., insets]
[), {, return, false, ;, }, BlockBorder, that, =, (, BlockBorder, ), obj, ;, if, (, !, this, ., insets]
[), ), {, return, false, ;, }, BlockBorder, that, =, (, BlockBorder, ), obj, ;, if, (, !, this, .]
[instanceof, BlockBorder, ), ), {, return, false, ;, }, BlockBorder, that, =, (, BlockBorder, ), obj, ;, if, (, !]
[;, }, BlockBorder, that, =, (, BlockBorder, ), obj, ;, if, (, !, this, ., insets, ., equals, (, that]
[;, if, (, !, this, ., insets, ., equals, (, that, ., insets, ), ), {, return, false, ;, }]
[;, if, (, !, this, ., insets, ., equals, (, that, ., insets, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint]
[., equals, (, that, ., insets, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., insets, ., equals, (, that, ., insets, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, .]
[), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, .]
[., insets, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return]
[), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, return, true, ;]
[,, that, ., paint, ), ), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream]
[., paint, ,, that, ., paint, ), ), {, return, false, ;, }, return, true, ;, }, private, void, writeObject]
[), ), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException]
[., paint, ), ), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, )]
[;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (]
[;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, .]
[;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, )]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, }, private, void, readObject]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[., writePaint, (, this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException]
[,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject]
[., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream]
[), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, )]
[;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[;, }, }]
[., readPaint, (, stream, ), ;, }, }]
[), ;, }, }]
