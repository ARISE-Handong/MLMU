[private, static, final, long, serialVersionUID, =, 961749798233026866L, ;, public, ZeroIsMaxDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType, type, ), {, super, (]
[), private, static, final, long, serialVersionUID, =, 961749798233026866L, ;, public, ZeroIsMaxDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType, type, ), {, super]
[;, public, ZeroIsMaxDateTimeField, (, DateTimeField, field, ,, DateTimeFieldType, type, ), {, super, (, field, ,, type, ), ;, if, (]
[,, type, ), ;, if, (, field, ., getMinimumValue, (, ), !=, 0, ), {, throw, new, IllegalArgumentException, (, "Wrapped field's minumum value must be zero"]
[), ;, if, (, field, ., getMinimumValue, (, ), !=, 0, ), {, throw, new, IllegalArgumentException, (, "Wrapped field's minumum value must be zero", ), ;]
[), {, throw, new, IllegalArgumentException, (, "Wrapped field's minumum value must be zero", ), ;, }, }, public, int, get, (, long, instant, ), {, int]
[!=, 0, ), {, throw, new, IllegalArgumentException, (, "Wrapped field's minumum value must be zero", ), ;, }, }, public, int, get, (, long, instant, )]
[., getMinimumValue, (, ), !=, 0, ), {, throw, new, IllegalArgumentException, (, "Wrapped field's minumum value must be zero", ), ;, }, }, public, int, get]
[), {, throw, new, IllegalArgumentException, (, "Wrapped field's minumum value must be zero", ), ;, }, }, public, int, get, (, long, instant, ), {, int]
[;, }, }, public, int, get, (, long, instant, ), {, int, value, =, getWrappedField, (, ), ., get, (]
[), ;, }, }, public, int, get, (, long, instant, ), {, int, value, =, getWrappedField, (, ), ., get]
[;, if, (, value, ==, 0, ), {, value, =, getMaximumValue, (, ), ;, }, return, value, ;, }, public]
[., get, (, instant, ), ;, if, (, value, ==, 0, ), {, value, =, getMaximumValue, (, ), ;, }]
[), ;, if, (, value, ==, 0, ), {, value, =, getMaximumValue, (, ), ;, }, return, value, ;, }]
[), {, value, =, getMaximumValue, (, ), ;, }, return, value, ;, }, public, long, add, (, long, instant, ,]
[==, 0, ), {, value, =, getMaximumValue, (, ), ;, }, return, value, ;, }, public, long, add, (, long]
[), {, value, =, getMaximumValue, (, ), ;, }, return, value, ;, }, public, long, add, (, long, instant, ,]
[=, getMaximumValue, (, ), ;, }, return, value, ;, }, public, long, add, (, long, instant, ,, int, value, )]
[;, }, return, value, ;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, getWrappedField, (]
[;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, getWrappedField, (, ), ., add, (]
[;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, getWrappedField, (, ), ., add, (]
[., add, (, instant, ,, value, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {]
[,, value, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, getWrappedField, (, )]
[), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, getWrappedField, (, ), ., add]
[;, }, public, long, addWrapField, (, long, instant, ,, int, value, ), {, return, getWrappedField, (, ), ., addWrapField, (]
[., add, (, instant, ,, value, ), ;, }, public, long, addWrapField, (, long, instant, ,, int, value, ), {]
[,, value, ), ;, }, public, long, addWrapField, (, long, instant, ,, int, value, ), {, return, getWrappedField, (, )]
[), ;, }, public, long, addWrapField, (, long, instant, ,, int, value, ), {, return, getWrappedField, (, ), ., addWrapField]
[;, }, public, int, [, ], addWrapField, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,, int]
[., addWrapField, (, instant, ,, value, ), ;, }, public, int, [, ], addWrapField, (, ReadablePartial, instant, ,, int, fieldIndex]
[,, value, ), ;, }, public, int, [, ], addWrapField, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ]]
[), ;, }, public, int, [, ], addWrapField, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,]
[;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifference, (]
[., addWrapField, (, instant, ,, fieldIndex, ,, values, ,, valueToAdd, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,]
[,, fieldIndex, ,, values, ,, valueToAdd, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {]
[,, values, ,, valueToAdd, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField]
[,, valueToAdd, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, )]
[), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifference]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifferenceAsLong, (]
[., getDifference, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {]
[,, subtrahendInstant, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, )]
[), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getWrappedField, (, ), ., getDifferenceAsLong]
[;, }, public, long, set, (, long, instant, ,, int, value, ), {, int, max, =, getMaximumValue, (, ), ;]
[., getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, set, (, long, instant, ,, int, value, ), {]
[,, subtrahendInstant, ), ;, }, public, long, set, (, long, instant, ,, int, value, ), {, int, max, =, getMaximumValue]
[), ;, }, public, long, set, (, long, instant, ,, int, value, ), {, int, max, =, getMaximumValue, (, )]
[;, FieldUtils, ., verifyValueBounds, (, this, ,, value, ,, 1, ,, max, ), ;, if, (, value, ==, max, )]
[;, if, (, value, ==, max, ), {, value, =, 0, ;, }, return, getWrappedField, (, ), ., set, (]
[., verifyValueBounds, (, this, ,, value, ,, 1, ,, max, ), ;, if, (, value, ==, max, ), {, value]
[,, value, ,, 1, ,, max, ), ;, if, (, value, ==, max, ), {, value, =, 0, ;, }]
[,, 1, ,, max, ), ;, if, (, value, ==, max, ), {, value, =, 0, ;, }, return, getWrappedField]
[,, max, ), ;, if, (, value, ==, max, ), {, value, =, 0, ;, }, return, getWrappedField, (, )]
[), ;, if, (, value, ==, max, ), {, value, =, 0, ;, }, return, getWrappedField, (, ), ., set]
[), {, value, =, 0, ;, }, return, getWrappedField, (, ), ., set, (, instant, ,, value, ), ;, }]
[==, max, ), {, value, =, 0, ;, }, return, getWrappedField, (, ), ., set, (, instant, ,, value, )]
[), {, value, =, 0, ;, }, return, getWrappedField, (, ), ., set, (, instant, ,, value, ), ;, }]
[=, 0, ;, }, return, getWrappedField, (, ), ., set, (, instant, ,, value, ), ;, }, public, boolean, isLeap]
[;, }, return, getWrappedField, (, ), ., set, (, instant, ,, value, ), ;, }, public, boolean, isLeap, (, long]
[;, }, public, boolean, isLeap, (, long, instant, ), {, return, getWrappedField, (, ), ., isLeap, (, instant, ), ;]
[., set, (, instant, ,, value, ), ;, }, public, boolean, isLeap, (, long, instant, ), {, return, getWrappedField, (]
[,, value, ), ;, }, public, boolean, isLeap, (, long, instant, ), {, return, getWrappedField, (, ), ., isLeap, (]
[), ;, }, public, boolean, isLeap, (, long, instant, ), {, return, getWrappedField, (, ), ., isLeap, (, instant, )]
[;, }, public, int, getLeapAmount, (, long, instant, ), {, return, getWrappedField, (, ), ., getLeapAmount, (, instant, ), ;]
[., isLeap, (, instant, ), ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, getWrappedField, (, ), ., getLeapAmount, (, instant, )]
[;, }, public, DurationField, getLeapDurationField, (, ), {, return, getWrappedField, (, ), ., getLeapDurationField, (, ), ;, }, public, int]
[., getLeapAmount, (, instant, ), ;, }, public, DurationField, getLeapDurationField, (, ), {, return, getWrappedField, (, ), ., getLeapDurationField, (]
[), ;, }, public, DurationField, getLeapDurationField, (, ), {, return, getWrappedField, (, ), ., getLeapDurationField, (, ), ;, }, public]
[;, }, public, int, getMinimumValue, (, ), {, return, 1, ;, }, public, int, getMinimumValue, (, long, instant, ), {]
[., getLeapDurationField, (, ), ;, }, public, int, getMinimumValue, (, ), {, return, 1, ;, }, public, int, getMinimumValue, (]
[;, }, public, int, getMinimumValue, (, long, instant, ), {, return, 1, ;, }, public, int, getMinimumValue, (, ReadablePartial, instant]
[;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ), {, return, 1, ;, }, public, int, getMinimumValue, (, ReadablePartial, instant]
[;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return, 1, ;, }, public]
[;, }, public, int, getMaximumValue, (, ), {, return, getWrappedField, (, ), ., getMaximumValue, (, ), +, 1, ;, }]
[;, }, public, int, getMaximumValue, (, long, instant, ), {, return, getWrappedField, (, ), ., getMaximumValue, (, instant, ), +]
[+, 1, ;, }, public, int, getMaximumValue, (, long, instant, ), {, return, getWrappedField, (, ), ., getMaximumValue, (, instant]
[., getMaximumValue, (, ), +, 1, ;, }, public, int, getMaximumValue, (, long, instant, ), {, return, getWrappedField, (, )]
[;, }, public, int, getMaximumValue, (, long, instant, ), {, return, getWrappedField, (, ), ., getMaximumValue, (, instant, ), +]
[;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, return, getWrappedField, (, ), ., getMaximumValue, (, instant, ), +]
[+, 1, ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, return, getWrappedField, (, ), ., getMaximumValue, (, instant]
[., getMaximumValue, (, instant, ), +, 1, ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, return, getWrappedField, (]
[), +, 1, ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, return, getWrappedField, (, ), ., getMaximumValue, (]
[;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, return, getWrappedField, (, ), ., getMaximumValue, (, instant, ), +]
[;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return, getWrappedField, (, ), .]
[+, 1, ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return, getWrappedField, (]
[., getMaximumValue, (, instant, ), +, 1, ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values]
[), +, 1, ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return, getWrappedField]
[;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return, getWrappedField, (, ), .]
[;, }, public, long, roundFloor, (, long, instant, ), {, return, getWrappedField, (, ), ., roundFloor, (, instant, ), ;]
[+, 1, ;, }, public, long, roundFloor, (, long, instant, ), {, return, getWrappedField, (, ), ., roundFloor, (, instant]
[., getMaximumValue, (, instant, ,, values, ), +, 1, ;, }, public, long, roundFloor, (, long, instant, ), {, return]
[,, values, ), +, 1, ;, }, public, long, roundFloor, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), +, 1, ;, }, public, long, roundFloor, (, long, instant, ), {, return, getWrappedField, (, ), ., roundFloor, (]
[;, }, public, long, roundFloor, (, long, instant, ), {, return, getWrappedField, (, ), ., roundFloor, (, instant, ), ;]
[;, }, public, long, roundCeiling, (, long, instant, ), {, return, getWrappedField, (, ), ., roundCeiling, (, instant, ), ;]
[., roundFloor, (, instant, ), ;, }, public, long, roundCeiling, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, long, roundCeiling, (, long, instant, ), {, return, getWrappedField, (, ), ., roundCeiling, (, instant, )]
[;, }, public, long, roundHalfFloor, (, long, instant, ), {, return, getWrappedField, (, ), ., roundHalfFloor, (, instant, ), ;]
[., roundCeiling, (, instant, ), ;, }, public, long, roundHalfFloor, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, long, roundHalfFloor, (, long, instant, ), {, return, getWrappedField, (, ), ., roundHalfFloor, (, instant, )]
[;, }, public, long, roundHalfCeiling, (, long, instant, ), {, return, getWrappedField, (, ), ., roundHalfCeiling, (, instant, ), ;]
[., roundHalfFloor, (, instant, ), ;, }, public, long, roundHalfCeiling, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, long, roundHalfCeiling, (, long, instant, ), {, return, getWrappedField, (, ), ., roundHalfCeiling, (, instant, )]
[;, }, public, long, roundHalfEven, (, long, instant, ), {, return, getWrappedField, (, ), ., roundHalfEven, (, instant, ), ;]
[., roundHalfCeiling, (, instant, ), ;, }, public, long, roundHalfEven, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, long, roundHalfEven, (, long, instant, ), {, return, getWrappedField, (, ), ., roundHalfEven, (, instant, )]
[;, }, public, long, remainder, (, long, instant, ), {, return, getWrappedField, (, ), ., remainder, (, instant, ), ;]
[., roundHalfEven, (, instant, ), ;, }, public, long, remainder, (, long, instant, ), {, return, getWrappedField, (, ), .]
[), ;, }, public, long, remainder, (, long, instant, ), {, return, getWrappedField, (, ), ., remainder, (, instant, )]
[;, }, }]
[., remainder, (, instant, ), ;, }, }]
[), ;, }, }]
