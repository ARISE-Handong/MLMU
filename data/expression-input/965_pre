[java, ., util, ., Arrays, ;, public, class, AbstractObjectList, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[AbstractObjectList, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, 7789833772597351595L, ;, public, static, final, int, DEFAULT_INITIAL_CAPACITY, =]
[;, public, static, final, int, DEFAULT_INITIAL_CAPACITY, =, 8, ;, private, transient, Object, [, ], objects, ;, private, int, size, =]
[=, 8, ;, private, transient, Object, [, ], objects, ;, private, int, size, =, 0, ;, private, int, increment, =]
[;, private, int, size, =, 0, ;, private, int, increment, =, DEFAULT_INITIAL_CAPACITY, ;, protected, AbstractObjectList, (, ), {, this, (]
[protected, AbstractObjectList, (, ), {, this, (, DEFAULT_INITIAL_CAPACITY, ), ;, }, protected, AbstractObjectList, (, int, initialCapacity, ), {, this, (]
[(, ), {, this, (, DEFAULT_INITIAL_CAPACITY, ), ;, }, protected, AbstractObjectList, (, int, initialCapacity, ), {, this, (, initialCapacity, ,]
[), {, this, (, initialCapacity, ,, initialCapacity, ), ;, }, protected, AbstractObjectList, (, int, initialCapacity, ,, int, increment, ), {]
[), {, this, (, initialCapacity, ,, initialCapacity, ), ;, }, protected, AbstractObjectList, (, int, initialCapacity, ,, int, increment, ), {]
[initialCapacity, ,, initialCapacity, ), ;, }, protected, AbstractObjectList, (, int, initialCapacity, ,, int, increment, ), {, this, ., objects, =]
[), ;, }, protected, AbstractObjectList, (, int, initialCapacity, ,, int, increment, ), {, this, ., objects, =, new, Object, []
[protected, AbstractObjectList, (, int, initialCapacity, ,, int, increment, ), {, this, ., objects, =, new, Object, [, initialCapacity, ], ;]
[protected, AbstractObjectList, (, int, initialCapacity, ,, int, increment, ), {, this, ., objects, =, new, Object, [, initialCapacity, ], ;]
[initialCapacity, ,, int, increment, ), {, this, ., objects, =, new, Object, [, initialCapacity, ], ;, this, ., increment, =]
[], ;, this, ., increment, =, increment, ;, }, protected, Object, get, (, int, index, ), {, Object, result, =]
[increment, =, increment, ;, }, protected, Object, get, (, int, index, ), {, Object, result, =, null, ;, if, (]
[increment, =, increment, ;, }, protected, Object, get, (, int, index, ), {, Object, result, =, null, ;, if, (]
[increment, =, increment, ;, }, protected, Object, get, (, int, index, ), {, Object, result, =, null, ;, if, (]
[increment, ;, }, protected, Object, get, (, int, index, ), {, Object, result, =, null, ;, if, (, index, >=]
[}, protected, Object, get, (, int, index, ), {, Object, result, =, null, ;, if, (, index, >=, 0, &&]
[}, protected, Object, get, (, int, index, ), {, Object, result, =, null, ;, if, (, index, >=, 0, &&]
[Object, get, (, int, index, ), {, Object, result, =, null, ;, if, (, index, >=, 0, &&, index, <]
[Object, get, (, int, index, ), {, Object, result, =, null, ;, if, (, index, >=, 0, &&, index, <]
[), {, Object, result, =, null, ;, if, (, index, >=, 0, &&, index, <, this, ., size, ), {]
[Object, result, =, null, ;, if, (, index, >=, 0, &&, index, <, this, ., size, ), {, result, =]
[Object, result, =, null, ;, if, (, index, >=, 0, &&, index, <, this, ., size, ), {, result, =]
[Object, result, =, null, ;, if, (, index, >=, 0, &&, index, <, this, ., size, ), {, result, =]
[;, if, (, index, >=, 0, &&, index, <, this, ., size, ), {, result, =, this, ., objects, []
[0, &&, index, <, this, ., size, ), {, result, =, this, ., objects, [, index, ], ;, }, return]
[], ;, }, return, result, ;, }, protected, void, set, (, int, index, ,, Object, object, ), {, if, (]
[], ;, }, return, result, ;, }, protected, void, set, (, int, index, ,, Object, object, ), {, if, (]
[}, return, result, ;, }, protected, void, set, (, int, index, ,, Object, object, ), {, if, (, index, <]
[}, protected, void, set, (, int, index, ,, Object, object, ), {, if, (, index, <, 0, ), {, throw]
[set, (, int, index, ,, Object, object, ), {, if, (, index, <, 0, ), {, throw, new, IllegalArgumentException, (]
[object, ), {, if, (, index, <, 0, ), {, throw, new, IllegalArgumentException, (, "Requires index >= 0.", ), ;, }, if, (]
[object, ), {, if, (, index, <, 0, ), {, throw, new, IllegalArgumentException, (, "Requires index >= 0.", ), ;, }, if, (]
[{, if, (, index, <, 0, ), {, throw, new, IllegalArgumentException, (, "Requires index >= 0.", ), ;, }, if, (, index, >=]
[{, if, (, index, <, 0, ), {, throw, new, IllegalArgumentException, (, "Requires index >= 0.", ), ;, }, if, (, index, >=]
[{, if, (, index, <, 0, ), {, throw, new, IllegalArgumentException, (, "Requires index >= 0.", ), ;, }, if, (, index, >=]
["Requires index >= 0.", ), ;, }, if, (, index, >=, this, ., objects, ., length, ), {, Object, [, ], enlarged, =]
[}, if, (, index, >=, this, ., objects, ., length, ), {, Object, [, ], enlarged, =, new, Object, []
[}, if, (, index, >=, this, ., objects, ., length, ), {, Object, [, ], enlarged, =, new, Object, []
[(, index, >=, this, ., objects, ., length, ), {, Object, [, ], enlarged, =, new, Object, [, index, +]
[(, index, >=, this, ., objects, ., length, ), {, Object, [, ], enlarged, =, new, Object, [, index, +]
[objects, ., length, ), {, Object, [, ], enlarged, =, new, Object, [, index, +, this, ., increment, ], ;]
[objects, ., length, ), {, Object, [, ], enlarged, =, new, Object, [, index, +, this, ., increment, ], ;]
[{, Object, [, ], enlarged, =, new, Object, [, index, +, this, ., increment, ], ;, System, ., arraycopy, (]
[{, Object, [, ], enlarged, =, new, Object, [, index, +, this, ., increment, ], ;, System, ., arraycopy, (]
[enlarged, =, new, Object, [, index, +, this, ., increment, ], ;, System, ., arraycopy, (, this, ., objects, ,]
[new, Object, [, index, +, this, ., increment, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,]
[[, index, +, this, ., increment, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, enlarged, ,]
[+, this, ., increment, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, enlarged, ,, 0, ,]
[+, this, ., increment, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, enlarged, ,, 0, ,]
[+, this, ., increment, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, enlarged, ,, 0, ,]
[., arraycopy, (, this, ., objects, ,, 0, ,, enlarged, ,, 0, ,, this, ., objects, ., length, ), ;]
[., arraycopy, (, this, ., objects, ,, 0, ,, enlarged, ,, 0, ,, this, ., objects, ., length, ), ;]
[., objects, ,, 0, ,, enlarged, ,, 0, ,, this, ., objects, ., length, ), ;, this, ., objects, =]
[0, ,, enlarged, ,, 0, ,, this, ., objects, ., length, ), ;, this, ., objects, =, enlarged, ;, }]
[0, ,, enlarged, ,, 0, ,, this, ., objects, ., length, ), ;, this, ., objects, =, enlarged, ;, }]
[0, ,, enlarged, ,, 0, ,, this, ., objects, ., length, ), ;, this, ., objects, =, enlarged, ;, }]
[0, ,, this, ., objects, ., length, ), ;, this, ., objects, =, enlarged, ;, }, this, ., objects, []
[., objects, ., length, ), ;, this, ., objects, =, enlarged, ;, }, this, ., objects, [, index, ], =]
[., length, ), ;, this, ., objects, =, enlarged, ;, }, this, ., objects, [, index, ], =, object, ;]
[., length, ), ;, this, ., objects, =, enlarged, ;, }, this, ., objects, [, index, ], =, object, ;]
[this, ., objects, =, enlarged, ;, }, this, ., objects, [, index, ], =, object, ;, this, ., size, =]
[this, ., objects, =, enlarged, ;, }, this, ., objects, [, index, ], =, object, ;, this, ., size, =]
[enlarged, ;, }, this, ., objects, [, index, ], =, object, ;, this, ., size, =, Math, ., max, (]
[enlarged, ;, }, this, ., objects, [, index, ], =, object, ;, this, ., size, =, Math, ., max, (]
[., objects, [, index, ], =, object, ;, this, ., size, =, Math, ., max, (, this, ., size, ,]
[., objects, [, index, ], =, object, ;, this, ., size, =, Math, ., max, (, this, ., size, ,]
[[, index, ], =, object, ;, this, ., size, =, Math, ., max, (, this, ., size, ,, index, +]
[Math, ., max, (, this, ., size, ,, index, +, 1, ), ;, }, public, void, clear, (, ), {]
[Math, ., max, (, this, ., size, ,, index, +, 1, ), ;, }, public, void, clear, (, ), {]
[this, ., size, ,, index, +, 1, ), ;, }, public, void, clear, (, ), {, Arrays, ., fill, (]
[this, ., size, ,, index, +, 1, ), ;, }, public, void, clear, (, ), {, Arrays, ., fill, (]
[index, +, 1, ), ;, }, public, void, clear, (, ), {, Arrays, ., fill, (, this, ., objects, ,]
[), ;, }, public, void, clear, (, ), {, Arrays, ., fill, (, this, ., objects, ,, null, ), ;]
[), ;, }, public, void, clear, (, ), {, Arrays, ., fill, (, this, ., objects, ,, null, ), ;]
[void, clear, (, ), {, Arrays, ., fill, (, this, ., objects, ,, null, ), ;, this, ., size, =]
[., objects, ,, null, ), ;, this, ., size, =, 0, ;, }, public, int, size, (, ), {, return]
[., objects, ,, null, ), ;, this, ., size, =, 0, ;, }, public, int, size, (, ), {, return]
[{, return, this, ., size, ;, }, protected, int, indexOf, (, Object, object, ), {, for, (, int, index, =]
[this, ., size, ;, }, protected, int, indexOf, (, Object, object, ), {, for, (, int, index, =, 0, ;]
[this, ., size, ;, }, protected, int, indexOf, (, Object, object, ), {, for, (, int, index, =, 0, ;]
[size, ;, }, protected, int, indexOf, (, Object, object, ), {, for, (, int, index, =, 0, ;, index, <]
[size, ;, }, protected, int, indexOf, (, Object, object, ), {, for, (, int, index, =, 0, ;, index, <]
[int, indexOf, (, Object, object, ), {, for, (, int, index, =, 0, ;, index, <, this, ., size, ;]
[int, indexOf, (, Object, object, ), {, for, (, int, index, =, 0, ;, index, <, this, ., size, ;]
[{, for, (, int, index, =, 0, ;, index, <, this, ., size, ;, index, ++, ), {, if, (]
[{, for, (, int, index, =, 0, ;, index, <, this, ., size, ;, index, ++, ), {, if, (]
[{, for, (, int, index, =, 0, ;, index, <, this, ., size, ;, index, ++, ), {, if, (]
[{, for, (, int, index, =, 0, ;, index, <, this, ., size, ;, index, ++, ), {, if, (]
[index, =, 0, ;, index, <, this, ., size, ;, index, ++, ), {, if, (, this, ., objects, []
[;, index, <, this, ., size, ;, index, ++, ), {, if, (, this, ., objects, [, index, ], ==]
[., size, ;, index, ++, ), {, if, (, this, ., objects, [, index, ], ==, object, ), {, return]
[size, ;, index, ++, ), {, if, (, this, ., objects, [, index, ], ==, object, ), {, return, (]
[if, (, this, ., objects, [, index, ], ==, object, ), {, return, (, index, ), ;, }, }, return]
[(, this, ., objects, [, index, ], ==, object, ), {, return, (, index, ), ;, }, }, return, -]
[index, ), ;, }, }, return, -, 1, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[index, ), ;, }, }, return, -, 1, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[;, }, }, return, -, 1, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[-, 1, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null, ), {, return, false, ;, }, if, (]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null, ), {, return, false, ;, }, if, (]
[(, Object, obj, ), {, if, (, obj, ==, null, ), {, return, false, ;, }, if, (, obj, ==]
[{, if, (, obj, ==, null, ), {, return, false, ;, }, if, (, obj, ==, this, ), {, return]
[null, ), {, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[), {, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[{, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[{, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, AbstractObjectList, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, AbstractObjectList, ), ), {, return, false, ;, }, AbstractObjectList, other, =]
[if, (, !, (, obj, instanceof, AbstractObjectList, ), ), {, return, false, ;, }, AbstractObjectList, other, =, (, AbstractObjectList, )]
[instanceof, AbstractObjectList, ), ), {, return, false, ;, }, AbstractObjectList, other, =, (, AbstractObjectList, ), obj, ;, int, listSize, =]
[AbstractObjectList, other, =, (, AbstractObjectList, ), obj, ;, int, listSize, =, size, (, ), ;, for, (, int, i, =]
[=, (, AbstractObjectList, ), obj, ;, int, listSize, =, size, (, ), ;, for, (, int, i, =, 0, ;]
[=, (, AbstractObjectList, ), obj, ;, int, listSize, =, size, (, ), ;, for, (, int, i, =, 0, ;]
[AbstractObjectList, ), obj, ;, int, listSize, =, size, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[obj, ;, int, listSize, =, size, (, ), ;, for, (, int, i, =, 0, ;, i, <, listSize, ;]
[obj, ;, int, listSize, =, size, (, ), ;, for, (, int, i, =, 0, ;, i, <, listSize, ;]
[(, ), ;, for, (, int, i, =, 0, ;, i, <, listSize, ;, i, ++, ), {, if, (]
[), ;, for, (, int, i, =, 0, ;, i, <, listSize, ;, i, ++, ), {, if, (, !]
[), ;, for, (, int, i, =, 0, ;, i, <, listSize, ;, i, ++, ), {, if, (, !]
[int, i, =, 0, ;, i, <, listSize, ;, i, ++, ), {, if, (, !, ObjectUtilities, ., equal, (]
[=, 0, ;, i, <, listSize, ;, i, ++, ), {, if, (, !, ObjectUtilities, ., equal, (, get, (]
[i, <, listSize, ;, i, ++, ), {, if, (, !, ObjectUtilities, ., equal, (, get, (, i, ), ,]
[i, <, listSize, ;, i, ++, ), {, if, (, !, ObjectUtilities, ., equal, (, get, (, i, ), ,]
[i, ++, ), {, if, (, !, ObjectUtilities, ., equal, (, get, (, i, ), ,, other, ., get, (]
[!, ObjectUtilities, ., equal, (, get, (, i, ), ,, other, ., get, (, i, ), ), ), {, return]
[get, (, i, ), ,, other, ., get, (, i, ), ), ), {, return, false, ;, }, }, return]
[), {, return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =]
[}, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 127, ;, int, size, =]
[;, }, public, int, hashCode, (, ), {, int, result, =, 127, ;, int, size, =, size, (, ), ;]
[public, int, hashCode, (, ), {, int, result, =, 127, ;, int, size, =, size, (, ), ;, result, =]
[public, int, hashCode, (, ), {, int, result, =, 127, ;, int, size, =, size, (, ), ;, result, =]
[), {, int, result, =, 127, ;, int, size, =, size, (, ), ;, result, =, HashUtilities, ., hashCode, (]
[int, result, =, 127, ;, int, size, =, size, (, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,]
[=, size, (, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,, size, (, ), ), ;, if, (]
[=, size, (, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,, size, (, ), ), ;, if, (]
[(, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,, size, (, ), ), ;, if, (, size, >]
[result, =, HashUtilities, ., hashCode, (, result, ,, size, (, ), ), ;, if, (, size, >, 0, ), {]
[HashUtilities, ., hashCode, (, result, ,, size, (, ), ), ;, if, (, size, >, 0, ), {, result, =]
[HashUtilities, ., hashCode, (, result, ,, size, (, ), ), ;, if, (, size, >, 0, ), {, result, =]
[result, ,, size, (, ), ), ;, if, (, size, >, 0, ), {, result, =, HashUtilities, ., hashCode, (]
[size, (, ), ), ;, if, (, size, >, 0, ), {, result, =, HashUtilities, ., hashCode, (, result, ,]
[size, (, ), ), ;, if, (, size, >, 0, ), {, result, =, HashUtilities, ., hashCode, (, result, ,]
[size, (, ), ), ;, if, (, size, >, 0, ), {, result, =, HashUtilities, ., hashCode, (, result, ,]
[;, if, (, size, >, 0, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, []
[), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, 0, ], ), ;, if, (]
[), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, 0, ], ), ;, if, (]
[result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, 0, ], ), ;, if, (, size, >]
[., hashCode, (, result, ,, this, ., objects, [, 0, ], ), ;, if, (, size, >, 1, ), {]
[(, result, ,, this, ., objects, [, 0, ], ), ;, if, (, size, >, 1, ), {, result, =]
[(, result, ,, this, ., objects, [, 0, ], ), ;, if, (, size, >, 1, ), {, result, =]
[., objects, [, 0, ], ), ;, if, (, size, >, 1, ), {, result, =, HashUtilities, ., hashCode, (]
[[, 0, ], ), ;, if, (, size, >, 1, ), {, result, =, HashUtilities, ., hashCode, (, result, ,]
[[, 0, ], ), ;, if, (, size, >, 1, ), {, result, =, HashUtilities, ., hashCode, (, result, ,]
[[, 0, ], ), ;, if, (, size, >, 1, ), {, result, =, HashUtilities, ., hashCode, (, result, ,]
[;, if, (, size, >, 1, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, []
[;, if, (, size, >, 1, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, []
[(, size, >, 1, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, -]
[result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, -, 1, ], ), ;, if, (]
[result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, -, 1, ], ), ;, if, (]
[HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, -, 1, ], ), ;, if, (, size, >]
[(, result, ,, this, ., objects, [, size, -, 1, ], ), ;, if, (, size, >, 2, ), {]
[,, this, ., objects, [, size, -, 1, ], ), ;, if, (, size, >, 2, ), {, result, =]
[,, this, ., objects, [, size, -, 1, ], ), ;, if, (, size, >, 2, ), {, result, =]
[[, size, -, 1, ], ), ;, if, (, size, >, 2, ), {, result, =, HashUtilities, ., hashCode, (]
[-, 1, ], ), ;, if, (, size, >, 2, ), {, result, =, HashUtilities, ., hashCode, (, result, ,]
[-, 1, ], ), ;, if, (, size, >, 2, ), {, result, =, HashUtilities, ., hashCode, (, result, ,]
[-, 1, ], ), ;, if, (, size, >, 2, ), {, result, =, HashUtilities, ., hashCode, (, result, ,]
[;, if, (, size, >, 2, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, []
[;, if, (, size, >, 2, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, []
[(, size, >, 2, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, /]
[HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, /, 2, ], ), ;, }, }, }, return]
[), ;, }, }, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractObjectList, clone, =]
[}, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractObjectList, clone, =, (, AbstractObjectList, )]
[}, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractObjectList, clone, =, (, AbstractObjectList, )]
[clone, (, ), throws, CloneNotSupportedException, {, AbstractObjectList, clone, =, (, AbstractObjectList, ), super, ., clone, (, ), ;, if, (]
[clone, (, ), throws, CloneNotSupportedException, {, AbstractObjectList, clone, =, (, AbstractObjectList, ), super, ., clone, (, ), ;, if, (]
[clone, (, ), throws, CloneNotSupportedException, {, AbstractObjectList, clone, =, (, AbstractObjectList, ), super, ., clone, (, ), ;, if, (]
[CloneNotSupportedException, {, AbstractObjectList, clone, =, (, AbstractObjectList, ), super, ., clone, (, ), ;, if, (, this, ., objects, !=]
[clone, =, (, AbstractObjectList, ), super, ., clone, (, ), ;, if, (, this, ., objects, !=, null, ), {]
[clone, =, (, AbstractObjectList, ), super, ., clone, (, ), ;, if, (, this, ., objects, !=, null, ), {]
[), super, ., clone, (, ), ;, if, (, this, ., objects, !=, null, ), {, clone, ., objects, =]
[clone, (, ), ;, if, (, this, ., objects, !=, null, ), {, clone, ., objects, =, new, Object, []
[clone, (, ), ;, if, (, this, ., objects, !=, null, ), {, clone, ., objects, =, new, Object, []
[clone, (, ), ;, if, (, this, ., objects, !=, null, ), {, clone, ., objects, =, new, Object, []
[., objects, !=, null, ), {, clone, ., objects, =, new, Object, [, this, ., objects, ., length, ], ;]
[., objects, !=, null, ), {, clone, ., objects, =, new, Object, [, this, ., objects, ., length, ], ;]
[), {, clone, ., objects, =, new, Object, [, this, ., objects, ., length, ], ;, System, ., arraycopy, (]
[), {, clone, ., objects, =, new, Object, [, this, ., objects, ., length, ], ;, System, ., arraycopy, (]
[objects, =, new, Object, [, this, ., objects, ., length, ], ;, System, ., arraycopy, (, this, ., objects, ,]
[new, Object, [, this, ., objects, ., length, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,]
[new, Object, [, this, ., objects, ., length, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,]
[., objects, ., length, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, clone, ., objects, ,]
[., length, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, clone, ., objects, ,, 0, ,]
[., length, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, clone, ., objects, ,, 0, ,]
[., length, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, clone, ., objects, ,, 0, ,]
[., objects, ,, 0, ,, clone, ., objects, ,, 0, ,, this, ., objects, ., length, ), ;, }, return]
[objects, ., length, ), ;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[objects, ., length, ), ;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[}, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, int, count, =]
[(, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, int, count, =, size, (, ), ;]
[(, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, int, count, =, size, (, ), ;]
[throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, int, count, =, size, (, ), ;, stream, ., writeInt, (]
[;, int, count, =, size, (, ), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =]
[count, =, size, (, ), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;]
[count, =, size, (, ), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;]
[size, (, ), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;, i, <]
[), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, final, Object, object, =]
[(, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, final, Object, object, =, get, (]
[;, i, <, count, ;, i, ++, ), {, final, Object, object, =, get, (, i, ), ;, if, (]
[;, i, <, count, ;, i, ++, ), {, final, Object, object, =, get, (, i, ), ;, if, (]
[;, i, <, count, ;, i, ++, ), {, final, Object, object, =, get, (, i, ), ;, if, (]
[<, count, ;, i, ++, ), {, final, Object, object, =, get, (, i, ), ;, if, (, object, !=]
[;, i, ++, ), {, final, Object, object, =, get, (, i, ), ;, if, (, object, !=, null, &&]
[;, i, ++, ), {, final, Object, object, =, get, (, i, ), ;, if, (, object, !=, null, &&]
[final, Object, object, =, get, (, i, ), ;, if, (, object, !=, null, &&, object, instanceof, Serializable, ), {]
[final, Object, object, =, get, (, i, ), ;, if, (, object, !=, null, &&, object, instanceof, Serializable, ), {]
[get, (, i, ), ;, if, (, object, !=, null, &&, object, instanceof, Serializable, ), {, stream, ., writeInt, (]
[), ;, if, (, object, !=, null, &&, object, instanceof, Serializable, ), {, stream, ., writeInt, (, i, ), ;]
[), ;, if, (, object, !=, null, &&, object, instanceof, Serializable, ), {, stream, ., writeInt, (, i, ), ;]
[object, !=, null, &&, object, instanceof, Serializable, ), {, stream, ., writeInt, (, i, ), ;, stream, ., writeObject, (]
[Serializable, ), {, stream, ., writeInt, (, i, ), ;, stream, ., writeObject, (, object, ), ;, }, else, {]
[Serializable, ), {, stream, ., writeInt, (, i, ), ;, stream, ., writeObject, (, object, ), ;, }, else, {]
[., writeInt, (, i, ), ;, stream, ., writeObject, (, object, ), ;, }, else, {, stream, ., writeInt, (]
[writeInt, (, i, ), ;, stream, ., writeObject, (, object, ), ;, }, else, {, stream, ., writeInt, (, -]
[(, -, 1, ), ;, }, }, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[(, -, 1, ), ;, }, }, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[}, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[}, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., objects, =]
[stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., objects, =, new, Object, []
[stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., objects, =, new, Object, []
[., defaultReadObject, (, ), ;, this, ., objects, =, new, Object, [, this, ., size, ], ;, int, count, =]
[., defaultReadObject, (, ), ;, this, ., objects, =, new, Object, [, this, ., size, ], ;, int, count, =]
[[, this, ., size, ], ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =]
[., size, ], ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;]
[., size, ], ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;]
[], ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, int, index, =]
[), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, int, index, =]
[;, i, <, count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (]
[;, i, <, count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (]
[<, count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=]
[count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -]
[++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {]
[{, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {, set, (]
[index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {, set, (, index, ,]
[index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {, set, (, index, ,]
