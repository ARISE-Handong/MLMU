[;, private, transient, Paint, firstBarPaint, ;, private, transient, Paint, lastBarPaint, ;, private, transient, Paint, positiveBarPaint, ;, private, transient, Paint, negativeBarPaint]
[;, private, transient, Paint, firstBarPaint, ;, private, transient, Paint, lastBarPaint, ;, private, transient, Paint, positiveBarPaint, ;, private, transient, Paint, negativeBarPaint]
[,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0x22, ,, 0xFF, ,, 0x22, ), ,, 0.0f, ,]
[,, 0.0f, ,, new, Color, (, 0x22, ,, 0x22, ,, 0xFF, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (]
[,, new, Color, (, 0x22, ,, 0x22, ,, 0xFF, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0x66, ,]
[,, 0.0f, ,, 0.0f, ,, new, Color, (, 0x66, ,, 0x66, ,, 0xFF, ), ), ,, new, GradientPaint, (, 0.0f]
[,, 0x22, ,, 0xFF, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0x66, ,, 0x66, ,, 0xFF, ), )]
[,, 0xFF, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0x66, ,, 0x66, ,, 0xFF, ), ), ,, new]
[), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0x66, ,, 0x66, ,, 0xFF, ), ), ,, new, GradientPaint, (]
[,, 0.0f, ,, new, Color, (, 0x66, ,, 0x66, ,, 0xFF, ), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f]
[,, new, Color, (, 0x66, ,, 0x66, ,, 0xFF, ), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new]
[), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0x22, ,, 0xFF, ,, 0x22, ), ,, 0.0f]
[,, 0x66, ,, 0xFF, ), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0x22, ,, 0xFF]
[,, 0xFF, ), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0x22, ,, 0xFF, ,, 0x22]
[), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0x22, ,, 0xFF, ,, 0x22, ), ,]
[,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0x22, ,, 0x22, ), ,, 0.0f, ,]
[,, 0.0f, ,, new, Color, (, 0x22, ,, 0xFF, ,, 0x22, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (]
[,, new, Color, (, 0x22, ,, 0xFF, ,, 0x22, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0x66, ,]
[,, 0.0f, ,, 0.0f, ,, new, Color, (, 0x66, ,, 0xFF, ,, 0x66, ), ), ,, new, GradientPaint, (, 0.0f]
[,, 0xFF, ,, 0x22, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0x66, ,, 0xFF, ,, 0x66, ), )]
[,, 0x22, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0x66, ,, 0xFF, ,, 0x66, ), ), ,, new]
[), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0x66, ,, 0xFF, ,, 0x66, ), ), ,, new, GradientPaint, (]
[,, 0.0f, ,, new, Color, (, 0x66, ,, 0xFF, ,, 0x66, ), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f]
[,, new, Color, (, 0x66, ,, 0xFF, ,, 0x66, ), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new]
[), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0x22, ,, 0x22, ), ,, 0.0f]
[,, 0xFF, ,, 0x66, ), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0x22]
[,, 0x66, ), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0x22, ,, 0x22]
[), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0x22, ,, 0x22, ), ,]
[,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0xFF, ,, 0x22, ), ,, 0.0f, ,]
[,, 0.0f, ,, new, Color, (, 0xFF, ,, 0x22, ,, 0x22, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (]
[,, new, Color, (, 0xFF, ,, 0x22, ,, 0x22, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,]
[,, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0x66, ,, 0x66, ), ), ,, new, GradientPaint, (, 0.0f]
[,, 0x22, ,, 0x22, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0x66, ,, 0x66, ), )]
[,, 0x22, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0x66, ,, 0x66, ), ), ,, new]
[), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0x66, ,, 0x66, ), ), ,, new, GradientPaint, (]
[,, 0.0f, ,, new, Color, (, 0xFF, ,, 0x66, ,, 0x66, ), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f]
[,, new, Color, (, 0xFF, ,, 0x66, ,, 0x66, ), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new]
[), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0xFF, ,, 0x22, ), ,, 0.0f]
[,, 0x66, ,, 0x66, ), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0xFF]
[,, 0x66, ), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0xFF, ,, 0x22]
[), ), ,, new, GradientPaint, (, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0xFF, ,, 0x22, ), ,]
[), ;, }, public, WaterfallBarRenderer, (, Paint, firstBarPaint, ,, Paint, positiveBarPaint, ,, Paint, negativeBarPaint, ,, Paint, lastBarPaint, ), {, super]
[,, 0.0f, ,, new, Color, (, 0xFF, ,, 0xFF, ,, 0x22, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (]
[,, new, Color, (, 0xFF, ,, 0xFF, ,, 0x22, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,]
[,, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0xFF, ,, 0x66, ), ), ), ;, }, public, WaterfallBarRenderer]
[,, 0xFF, ,, 0x22, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0xFF, ,, 0x66, ), )]
[,, 0x22, ), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0xFF, ,, 0x66, ), ), ), ;]
[), ,, 0.0f, ,, 0.0f, ,, new, Color, (, 0xFF, ,, 0xFF, ,, 0x66, ), ), ), ;, }, public]
[,, 0.0f, ,, new, Color, (, 0xFF, ,, 0xFF, ,, 0x66, ), ), ), ;, }, public, WaterfallBarRenderer, (, Paint]
[,, new, Color, (, 0xFF, ,, 0xFF, ,, 0x66, ), ), ), ;, }, public, WaterfallBarRenderer, (, Paint, firstBarPaint, ,]
[), ), ;, }, public, WaterfallBarRenderer, (, Paint, firstBarPaint, ,, Paint, positiveBarPaint, ,, Paint, negativeBarPaint, ,, Paint, lastBarPaint, ), {]
[,, 0xFF, ,, 0x66, ), ), ), ;, }, public, WaterfallBarRenderer, (, Paint, firstBarPaint, ,, Paint, positiveBarPaint, ,, Paint, negativeBarPaint]
[,, 0x66, ), ), ), ;, }, public, WaterfallBarRenderer, (, Paint, firstBarPaint, ,, Paint, positiveBarPaint, ,, Paint, negativeBarPaint, ,, Paint]
[), ), ), ;, }, public, WaterfallBarRenderer, (, Paint, firstBarPaint, ,, Paint, positiveBarPaint, ,, Paint, negativeBarPaint, ,, Paint, lastBarPaint, )]
[), {, throw, new, IllegalArgumentException, (, "Null 'firstBarPaint' argument", ), ;, }, if, (, positiveBarPaint, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'firstBarPaint' argument", ), ;, }, if, (, positiveBarPaint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'firstBarPaint' argument", ), ;, }, if, (, positiveBarPaint, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, positiveBarPaint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'positiveBarPaint' argument", ), ;, }, if, (, negativeBarPaint]
[), ;, }, if, (, positiveBarPaint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'positiveBarPaint' argument", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'positiveBarPaint' argument", ), ;, }, if, (, negativeBarPaint, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'positiveBarPaint' argument", ), ;, }, if, (, negativeBarPaint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'positiveBarPaint' argument", ), ;, }, if, (, negativeBarPaint, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, negativeBarPaint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'negativeBarPaint' argument", ), ;, }, if, (, lastBarPaint]
[), ;, }, if, (, negativeBarPaint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'negativeBarPaint' argument", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'negativeBarPaint' argument", ), ;, }, if, (, lastBarPaint, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'negativeBarPaint' argument", ), ;, }, if, (, lastBarPaint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'negativeBarPaint' argument", ), ;, }, if, (, lastBarPaint, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, lastBarPaint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'lastBarPaint' argument", ), ;, }, this, ., firstBarPaint]
[), ;, }, if, (, lastBarPaint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'lastBarPaint' argument", ), ;, }, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'lastBarPaint' argument", ), ;, }, this, ., firstBarPaint, =, firstBarPaint, ;, this, ., lastBarPaint, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'lastBarPaint' argument", ), ;, }, this, ., firstBarPaint, =, firstBarPaint, ;, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'lastBarPaint' argument", ), ;, }, this, ., firstBarPaint, =, firstBarPaint, ;, this, ., lastBarPaint, =]
[;, }, this, ., firstBarPaint, =, firstBarPaint, ;, this, ., lastBarPaint, =, lastBarPaint, ;, this, ., positiveBarPaint, =, positiveBarPaint, ;]
[), ;, }, this, ., firstBarPaint, =, firstBarPaint, ;, this, ., lastBarPaint, =, lastBarPaint, ;, this, ., positiveBarPaint, =, positiveBarPaint]
[=, firstBarPaint, ;, this, ., lastBarPaint, =, lastBarPaint, ;, this, ., positiveBarPaint, =, positiveBarPaint, ;, this, ., negativeBarPaint, =, negativeBarPaint]
[., firstBarPaint, =, firstBarPaint, ;, this, ., lastBarPaint, =, lastBarPaint, ;, this, ., positiveBarPaint, =, positiveBarPaint, ;, this, ., negativeBarPaint]
[;, this, ., lastBarPaint, =, lastBarPaint, ;, this, ., positiveBarPaint, =, positiveBarPaint, ;, this, ., negativeBarPaint, =, negativeBarPaint, ;, setGradientPaintTransformer]
[=, lastBarPaint, ;, this, ., positiveBarPaint, =, positiveBarPaint, ;, this, ., negativeBarPaint, =, negativeBarPaint, ;, setGradientPaintTransformer, (, new, StandardGradientPaintTransformer, (]
[., lastBarPaint, =, lastBarPaint, ;, this, ., positiveBarPaint, =, positiveBarPaint, ;, this, ., negativeBarPaint, =, negativeBarPaint, ;, setGradientPaintTransformer, (, new]
[;, this, ., positiveBarPaint, =, positiveBarPaint, ;, this, ., negativeBarPaint, =, negativeBarPaint, ;, setGradientPaintTransformer, (, new, StandardGradientPaintTransformer, (, GradientPaintTransformType, .]
[=, positiveBarPaint, ;, this, ., negativeBarPaint, =, negativeBarPaint, ;, setGradientPaintTransformer, (, new, StandardGradientPaintTransformer, (, GradientPaintTransformType, ., CENTER_VERTICAL, ), ), ;]
[., positiveBarPaint, =, positiveBarPaint, ;, this, ., negativeBarPaint, =, negativeBarPaint, ;, setGradientPaintTransformer, (, new, StandardGradientPaintTransformer, (, GradientPaintTransformType, ., CENTER_VERTICAL, )]
[;, this, ., negativeBarPaint, =, negativeBarPaint, ;, setGradientPaintTransformer, (, new, StandardGradientPaintTransformer, (, GradientPaintTransformType, ., CENTER_VERTICAL, ), ), ;, setMinimumBarLength, (]
[=, negativeBarPaint, ;, setGradientPaintTransformer, (, new, StandardGradientPaintTransformer, (, GradientPaintTransformType, ., CENTER_VERTICAL, ), ), ;, setMinimumBarLength, (, 1.0, ), ;, }]
[., negativeBarPaint, =, negativeBarPaint, ;, setGradientPaintTransformer, (, new, StandardGradientPaintTransformer, (, GradientPaintTransformType, ., CENTER_VERTICAL, ), ), ;, setMinimumBarLength, (, 1.0, )]
[;, setGradientPaintTransformer, (, new, StandardGradientPaintTransformer, (, GradientPaintTransformType, ., CENTER_VERTICAL, ), ), ;, setMinimumBarLength, (, 1.0, ), ;, }, public, Paint]
[;, setMinimumBarLength, (, 1.0, ), ;, }, public, Paint, getFirstBarPaint, (, ), {, return, this, ., firstBarPaint, ;, }, public]
[), ;, setMinimumBarLength, (, 1.0, ), ;, }, public, Paint, getFirstBarPaint, (, ), {, return, this, ., firstBarPaint, ;, }]
[), ), ;, setMinimumBarLength, (, 1.0, ), ;, }, public, Paint, getFirstBarPaint, (, ), {, return, this, ., firstBarPaint, ;]
[., CENTER_VERTICAL, ), ), ;, setMinimumBarLength, (, 1.0, ), ;, }, public, Paint, getFirstBarPaint, (, ), {, return, this, .]
[;, }, public, Paint, getFirstBarPaint, (, ), {, return, this, ., firstBarPaint, ;, }, public, void, setFirstBarPaint, (, Paint, paint]
[), ;, }, public, Paint, getFirstBarPaint, (, ), {, return, this, ., firstBarPaint, ;, }, public, void, setFirstBarPaint, (, Paint]
[;, }, public, void, setFirstBarPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[., firstBarPaint, ;, }, public, void, setFirstBarPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument", ), ;, }, this, ., firstBarPaint, =, paint, ;, fireChangeEvent, (, ), ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument", ), ;, }, this, ., firstBarPaint, =, paint, ;, fireChangeEvent, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument", ), ;, }, this, ., firstBarPaint, =, paint, ;, fireChangeEvent, (, ), ;]
[;, }, this, ., firstBarPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getLastBarPaint, (, ), {, return]
[), ;, }, this, ., firstBarPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getLastBarPaint, (, ), {]
[=, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getLastBarPaint, (, ), {, return, this, ., lastBarPaint, ;, }]
[., firstBarPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getLastBarPaint, (, ), {, return, this, ., lastBarPaint]
[;, fireChangeEvent, (, ), ;, }, public, Paint, getLastBarPaint, (, ), {, return, this, ., lastBarPaint, ;, }, public, void]
[;, }, public, Paint, getLastBarPaint, (, ), {, return, this, ., lastBarPaint, ;, }, public, void, setLastBarPaint, (, Paint, paint]
[;, }, public, void, setLastBarPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[., lastBarPaint, ;, }, public, void, setLastBarPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument", ), ;, }, this, ., lastBarPaint, =, paint, ;, fireChangeEvent, (, ), ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument", ), ;, }, this, ., lastBarPaint, =, paint, ;, fireChangeEvent, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument", ), ;, }, this, ., lastBarPaint, =, paint, ;, fireChangeEvent, (, ), ;]
[;, }, this, ., lastBarPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getPositiveBarPaint, (, ), {, return]
[), ;, }, this, ., lastBarPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getPositiveBarPaint, (, ), {]
[=, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getPositiveBarPaint, (, ), {, return, this, ., positiveBarPaint, ;, }]
[., lastBarPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getPositiveBarPaint, (, ), {, return, this, ., positiveBarPaint]
[;, fireChangeEvent, (, ), ;, }, public, Paint, getPositiveBarPaint, (, ), {, return, this, ., positiveBarPaint, ;, }, public, void]
[;, }, public, Paint, getPositiveBarPaint, (, ), {, return, this, ., positiveBarPaint, ;, }, public, void, setPositiveBarPaint, (, Paint, paint]
[;, }, public, void, setPositiveBarPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[., positiveBarPaint, ;, }, public, void, setPositiveBarPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument", ), ;, }, this, ., positiveBarPaint, =, paint, ;, fireChangeEvent, (, ), ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument", ), ;, }, this, ., positiveBarPaint, =, paint, ;, fireChangeEvent, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument", ), ;, }, this, ., positiveBarPaint, =, paint, ;, fireChangeEvent, (, ), ;]
[;, }, this, ., positiveBarPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getNegativeBarPaint, (, ), {, return]
[), ;, }, this, ., positiveBarPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getNegativeBarPaint, (, ), {]
[=, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getNegativeBarPaint, (, ), {, return, this, ., negativeBarPaint, ;, }]
[., positiveBarPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getNegativeBarPaint, (, ), {, return, this, ., negativeBarPaint]
[;, fireChangeEvent, (, ), ;, }, public, Paint, getNegativeBarPaint, (, ), {, return, this, ., negativeBarPaint, ;, }, public, void]
[;, }, public, Paint, getNegativeBarPaint, (, ), {, return, this, ., negativeBarPaint, ;, }, public, void, setNegativeBarPaint, (, Paint, paint]
[;, }, public, void, setNegativeBarPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[., negativeBarPaint, ;, }, public, void, setNegativeBarPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument", ), ;, }, this, ., negativeBarPaint, =, paint, ;, fireChangeEvent, (, ), ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument", ), ;, }, this, ., negativeBarPaint, =, paint, ;, fireChangeEvent, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument", ), ;, }, this, ., negativeBarPaint, =, paint, ;, fireChangeEvent, (, ), ;]
[;, }, this, ., negativeBarPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, )]
[), ;, }, this, ., negativeBarPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset]
[=, paint, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==]
[., negativeBarPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (]
[;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==, null, )]
[;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==, null, ), {, return, null, ;]
[), {, return, null, ;, }, boolean, allItemsNull, =, true, ;, double, minimum, =, 0.0, ;, double, maximum, =, 0.0]
[==, null, ), {, return, null, ;, }, boolean, allItemsNull, =, true, ;, double, minimum, =, 0.0, ;, double, maximum]
[), {, return, null, ;, }, boolean, allItemsNull, =, true, ;, double, minimum, =, 0.0, ;, double, maximum, =, 0.0]
[;, }, boolean, allItemsNull, =, true, ;, double, minimum, =, 0.0, ;, double, maximum, =, 0.0, ;, int, columnCount, =]
[;, double, minimum, =, 0.0, ;, double, maximum, =, 0.0, ;, int, columnCount, =, dataset, ., getColumnCount, (, ), ;]
[;, double, maximum, =, 0.0, ;, int, columnCount, =, dataset, ., getColumnCount, (, ), ;, for, (, int, row, =]
[;, int, columnCount, =, dataset, ., getColumnCount, (, ), ;, for, (, int, row, =, 0, ;, row, <, dataset]
[;, for, (, int, row, =, 0, ;, row, <, dataset, ., getRowCount, (, ), ;, row, ++, ), {]
[., getColumnCount, (, ), ;, for, (, int, row, =, 0, ;, row, <, dataset, ., getRowCount, (, ), ;]
[;, row, <, dataset, ., getRowCount, (, ), ;, row, ++, ), {, double, runningTotal, =, 0.0, ;, for, (]
[;, row, ++, ), {, double, runningTotal, =, 0.0, ;, for, (, int, column, =, 0, ;, column, <=, columnCount]
[<, dataset, ., getRowCount, (, ), ;, row, ++, ), {, double, runningTotal, =, 0.0, ;, for, (, int, column]
[;, row, ++, ), {, double, runningTotal, =, 0.0, ;, for, (, int, column, =, 0, ;, column, <=, columnCount]
[., getRowCount, (, ), ;, row, ++, ), {, double, runningTotal, =, 0.0, ;, for, (, int, column, =, 0]
[), {, double, runningTotal, =, 0.0, ;, for, (, int, column, =, 0, ;, column, <=, columnCount, -, 1, ;]
[++, ), {, double, runningTotal, =, 0.0, ;, for, (, int, column, =, 0, ;, column, <=, columnCount, -, 1]
[;, for, (, int, column, =, 0, ;, column, <=, columnCount, -, 1, ;, column, ++, ), {, Number, n]
[;, column, <=, columnCount, -, 1, ;, column, ++, ), {, Number, n, =, dataset, ., getValue, (, row, ,]
[;, column, ++, ), {, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, n]
[<=, columnCount, -, 1, ;, column, ++, ), {, Number, n, =, dataset, ., getValue, (, row, ,, column, )]
[;, column, ++, ), {, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, n]
[-, 1, ;, column, ++, ), {, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if]
[;, column, ++, ), {, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, n]
[), {, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, n, !=, null, )]
[++, ), {, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, n, !=, null]
[;, if, (, n, !=, null, ), {, allItemsNull, =, false, ;, double, value, =, n, ., doubleValue, (, )]
[., getValue, (, row, ,, column, ), ;, if, (, n, !=, null, ), {, allItemsNull, =, false, ;, double]
[,, column, ), ;, if, (, n, !=, null, ), {, allItemsNull, =, false, ;, double, value, =, n, .]
[), ;, if, (, n, !=, null, ), {, allItemsNull, =, false, ;, double, value, =, n, ., doubleValue, (]
[), {, allItemsNull, =, false, ;, double, value, =, n, ., doubleValue, (, ), ;, if, (, column, ==, columnCount]
[!=, null, ), {, allItemsNull, =, false, ;, double, value, =, n, ., doubleValue, (, ), ;, if, (, column]
[), {, allItemsNull, =, false, ;, double, value, =, n, ., doubleValue, (, ), ;, if, (, column, ==, columnCount]
[=, false, ;, double, value, =, n, ., doubleValue, (, ), ;, if, (, column, ==, columnCount, -, 1, )]
[;, double, value, =, n, ., doubleValue, (, ), ;, if, (, column, ==, columnCount, -, 1, ), {, runningTotal]
[;, if, (, column, ==, columnCount, -, 1, ), {, runningTotal, =, value, ;, }, else, {, runningTotal, =, runningTotal]
[., doubleValue, (, ), ;, if, (, column, ==, columnCount, -, 1, ), {, runningTotal, =, value, ;, }, else]
[), {, runningTotal, =, value, ;, }, else, {, runningTotal, =, runningTotal, +, value, ;, }, minimum, =, Math, .]
[==, columnCount, -, 1, ), {, runningTotal, =, value, ;, }, else, {, runningTotal, =, runningTotal, +, value, ;, }]
[), {, runningTotal, =, value, ;, }, else, {, runningTotal, =, runningTotal, +, value, ;, }, minimum, =, Math, .]
[-, 1, ), {, runningTotal, =, value, ;, }, else, {, runningTotal, =, runningTotal, +, value, ;, }, minimum, =]
[), {, runningTotal, =, value, ;, }, else, {, runningTotal, =, runningTotal, +, value, ;, }, minimum, =, Math, .]
[=, value, ;, }, else, {, runningTotal, =, runningTotal, +, value, ;, }, minimum, =, Math, ., min, (, minimum]
[;, }, else, {, runningTotal, =, runningTotal, +, value, ;, }, minimum, =, Math, ., min, (, minimum, ,, runningTotal]
[=, runningTotal, +, value, ;, }, minimum, =, Math, ., min, (, minimum, ,, runningTotal, ), ;, maximum, =, Math]
[;, }, minimum, =, Math, ., min, (, minimum, ,, runningTotal, ), ;, maximum, =, Math, ., max, (, maximum]
[+, value, ;, }, minimum, =, Math, ., min, (, minimum, ,, runningTotal, ), ;, maximum, =, Math, ., max]
[;, }, minimum, =, Math, ., min, (, minimum, ,, runningTotal, ), ;, maximum, =, Math, ., max, (, maximum]
[=, Math, ., min, (, minimum, ,, runningTotal, ), ;, maximum, =, Math, ., max, (, maximum, ,, runningTotal, )]
[;, maximum, =, Math, ., max, (, maximum, ,, runningTotal, ), ;, }, }, }, if, (, !, allItemsNull, )]
[., min, (, minimum, ,, runningTotal, ), ;, maximum, =, Math, ., max, (, maximum, ,, runningTotal, ), ;, }]
[,, runningTotal, ), ;, maximum, =, Math, ., max, (, maximum, ,, runningTotal, ), ;, }, }, }, if, (]
[), ;, maximum, =, Math, ., max, (, maximum, ,, runningTotal, ), ;, }, }, }, if, (, !, allItemsNull]
[=, Math, ., max, (, maximum, ,, runningTotal, ), ;, }, }, }, if, (, !, allItemsNull, ), {, return]
[;, }, }, }, if, (, !, allItemsNull, ), {, return, new, Range, (, minimum, ,, maximum, ), ;, }]
[., max, (, maximum, ,, runningTotal, ), ;, }, }, }, if, (, !, allItemsNull, ), {, return, new, Range]
[,, runningTotal, ), ;, }, }, }, if, (, !, allItemsNull, ), {, return, new, Range, (, minimum, ,, maximum]
[), ;, }, }, }, if, (, !, allItemsNull, ), {, return, new, Range, (, minimum, ,, maximum, ), ;]
[), {, return, new, Range, (, minimum, ,, maximum, ), ;, }, else, {, return, null, ;, }, }, public]
[), {, return, new, Range, (, minimum, ,, maximum, ), ;, }, else, {, return, null, ;, }, }, public]
[;, }, else, {, return, null, ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D]
[,, maximum, ), ;, }, else, {, return, null, ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState]
[), ;, }, else, {, return, null, ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,]
[;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryAxis]
[;, if, (, column, ==, dataset, ., getColumnCount, (, ), -, 1, ), {, previous, =, 0.0, ;, }, double]
[., getSeriesRunningTotal, (, ), ;, if, (, column, ==, dataset, ., getColumnCount, (, ), -, 1, ), {, previous, =]
[), {, previous, =, 0.0, ;, }, double, current, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, row]
[==, dataset, ., getColumnCount, (, ), -, 1, ), {, previous, =, 0.0, ;, }, double, current, =, 0.0, ;]
[), {, previous, =, 0.0, ;, }, double, current, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, row]
[-, 1, ), {, previous, =, 0.0, ;, }, double, current, =, 0.0, ;, Number, n, =, dataset, ., getValue]
[., getColumnCount, (, ), -, 1, ), {, previous, =, 0.0, ;, }, double, current, =, 0.0, ;, Number, n]
[), {, previous, =, 0.0, ;, }, double, current, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, row]
[=, 0.0, ;, }, double, current, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, row, ,, column, )]
[;, }, double, current, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if]
[;, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, n, !=, null, ), {]
[;, if, (, n, !=, null, ), {, current, =, previous, +, n, ., doubleValue, (, ), ;, }, state]
[., getValue, (, row, ,, column, ), ;, if, (, n, !=, null, ), {, current, =, previous, +, n]
[,, column, ), ;, if, (, n, !=, null, ), {, current, =, previous, +, n, ., doubleValue, (, )]
[), ;, if, (, n, !=, null, ), {, current, =, previous, +, n, ., doubleValue, (, ), ;, }]
[), {, current, =, previous, +, n, ., doubleValue, (, ), ;, }, state, ., setSeriesRunningTotal, (, current, ), ;]
[!=, null, ), {, current, =, previous, +, n, ., doubleValue, (, ), ;, }, state, ., setSeriesRunningTotal, (, current]
[), {, current, =, previous, +, n, ., doubleValue, (, ), ;, }, state, ., setSeriesRunningTotal, (, current, ), ;]
[=, previous, +, n, ., doubleValue, (, ), ;, }, state, ., setSeriesRunningTotal, (, current, ), ;, int, categoryCount, =]
[;, }, state, ., setSeriesRunningTotal, (, current, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, PlotOrientation, orientation, =, plot]
[+, n, ., doubleValue, (, ), ;, }, state, ., setSeriesRunningTotal, (, current, ), ;, int, categoryCount, =, getColumnCount, (]
[;, }, state, ., setSeriesRunningTotal, (, current, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, PlotOrientation, orientation, =, plot]
[., doubleValue, (, ), ;, }, state, ., setSeriesRunningTotal, (, current, ), ;, int, categoryCount, =, getColumnCount, (, ), ;]
[;, int, categoryCount, =, getColumnCount, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, rectX, =]
[., setSeriesRunningTotal, (, current, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (]
[), ;, int, categoryCount, =, getColumnCount, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, rectX]
[;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, rectX, =, 0.0, ;, double, rectY, =, 0.0, ;]
[;, double, rectX, =, 0.0, ;, double, rectY, =, 0.0, ;, RectangleEdge, rangeAxisLocation, =, plot, ., getRangeAxisEdge, (, ), ;]
[., getOrientation, (, ), ;, double, rectX, =, 0.0, ;, double, rectY, =, 0.0, ;, RectangleEdge, rangeAxisLocation, =, plot, .]
[;, double, rectY, =, 0.0, ;, RectangleEdge, rangeAxisLocation, =, plot, ., getRangeAxisEdge, (, ), ;, double, j2dy0, =, rangeAxis, .]
[;, RectangleEdge, rangeAxisLocation, =, plot, ., getRangeAxisEdge, (, ), ;, double, j2dy0, =, rangeAxis, ., valueToJava2D, (, previous, ,, dataArea]
[;, double, j2dy0, =, rangeAxis, ., valueToJava2D, (, previous, ,, dataArea, ,, rangeAxisLocation, ), ;, double, j2dy1, =, rangeAxis, .]
[., getRangeAxisEdge, (, ), ;, double, j2dy0, =, rangeAxis, ., valueToJava2D, (, previous, ,, dataArea, ,, rangeAxisLocation, ), ;, double]
[;, double, j2dy1, =, rangeAxis, ., valueToJava2D, (, current, ,, dataArea, ,, rangeAxisLocation, ), ;, double, valDiff, =, current, -]
[., valueToJava2D, (, previous, ,, dataArea, ,, rangeAxisLocation, ), ;, double, j2dy1, =, rangeAxis, ., valueToJava2D, (, current, ,, dataArea]
[,, dataArea, ,, rangeAxisLocation, ), ;, double, j2dy1, =, rangeAxis, ., valueToJava2D, (, current, ,, dataArea, ,, rangeAxisLocation, ), ;]
[,, rangeAxisLocation, ), ;, double, j2dy1, =, rangeAxis, ., valueToJava2D, (, current, ,, dataArea, ,, rangeAxisLocation, ), ;, double, valDiff]
[), ;, double, j2dy1, =, rangeAxis, ., valueToJava2D, (, current, ,, dataArea, ,, rangeAxisLocation, ), ;, double, valDiff, =, current]
[;, double, valDiff, =, current, -, previous, ;, if, (, j2dy1, <, j2dy0, ), {, double, temp, =, j2dy1, ;]
[., valueToJava2D, (, current, ,, dataArea, ,, rangeAxisLocation, ), ;, double, valDiff, =, current, -, previous, ;, if, (, j2dy1]
[,, dataArea, ,, rangeAxisLocation, ), ;, double, valDiff, =, current, -, previous, ;, if, (, j2dy1, <, j2dy0, ), {]
[,, rangeAxisLocation, ), ;, double, valDiff, =, current, -, previous, ;, if, (, j2dy1, <, j2dy0, ), {, double, temp]
[), ;, double, valDiff, =, current, -, previous, ;, if, (, j2dy1, <, j2dy0, ), {, double, temp, =, j2dy1]
[;, if, (, j2dy1, <, j2dy0, ), {, double, temp, =, j2dy1, ;, j2dy1, =, j2dy0, ;, j2dy0, =, temp]
[-, previous, ;, if, (, j2dy1, <, j2dy0, ), {, double, temp, =, j2dy1, ;, j2dy1, =, j2dy0, ;, j2dy0]
[;, if, (, j2dy1, <, j2dy0, ), {, double, temp, =, j2dy1, ;, j2dy1, =, j2dy0, ;, j2dy0, =, temp]
[), {, double, temp, =, j2dy1, ;, j2dy1, =, j2dy0, ;, j2dy0, =, temp, ;, }, double, rectWidth, =, state]
[<, j2dy0, ), {, double, temp, =, j2dy1, ;, j2dy1, =, j2dy0, ;, j2dy0, =, temp, ;, }, double, rectWidth]
[), {, double, temp, =, j2dy1, ;, j2dy1, =, j2dy0, ;, j2dy0, =, temp, ;, }, double, rectWidth, =, state]
[;, j2dy1, =, j2dy0, ;, j2dy0, =, temp, ;, }, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double]
[=, j2dy0, ;, j2dy0, =, temp, ;, }, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =]
[;, j2dy0, =, temp, ;, }, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =, Math, .]
[=, temp, ;, }, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., max, (]
[;, }, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., max, (, getMinimumBarLength, (]
[;, double, rectHeight, =, Math, ., max, (, getMinimumBarLength, (, ), ,, Math, ., abs, (, j2dy1, -, j2dy0, )]
[., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., max, (, getMinimumBarLength, (, ), ,, Math, ., abs, (]
[;, Comparable, seriesKey, =, dataset, ., getRowKey, (, row, ), ;, Comparable, categoryKey, =, dataset, ., getColumnKey, (, column, )]
[., max, (, getMinimumBarLength, (, ), ,, Math, ., abs, (, j2dy1, -, j2dy0, ), ), ;, Comparable, seriesKey, =]
[,, Math, ., abs, (, j2dy1, -, j2dy0, ), ), ;, Comparable, seriesKey, =, dataset, ., getRowKey, (, row, )]
[), ;, Comparable, seriesKey, =, dataset, ., getRowKey, (, row, ), ;, Comparable, categoryKey, =, dataset, ., getColumnKey, (, column]
[., abs, (, j2dy1, -, j2dy0, ), ), ;, Comparable, seriesKey, =, dataset, ., getRowKey, (, row, ), ;, Comparable]
[), ), ;, Comparable, seriesKey, =, dataset, ., getRowKey, (, row, ), ;, Comparable, categoryKey, =, dataset, ., getColumnKey, (]
[-, j2dy0, ), ), ;, Comparable, seriesKey, =, dataset, ., getRowKey, (, row, ), ;, Comparable, categoryKey, =, dataset, .]
[), ), ;, Comparable, seriesKey, =, dataset, ., getRowKey, (, row, ), ;, Comparable, categoryKey, =, dataset, ., getColumnKey, (]
[;, Comparable, categoryKey, =, dataset, ., getColumnKey, (, column, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[., getRowKey, (, row, ), ;, Comparable, categoryKey, =, dataset, ., getColumnKey, (, column, ), ;, if, (, orientation, ==]
[), ;, Comparable, categoryKey, =, dataset, ., getColumnKey, (, column, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, )]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, rectY, =, domainAxis, ., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey, ,]
[., getColumnKey, (, column, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, rectY, =, domainAxis, ., getCategorySeriesMiddle]
[), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, rectY, =, domainAxis, ., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey]
[), {, rectY, =, domainAxis, ., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey, ,, dataset, ,, getItemMargin, (, ), ,, dataArea, ,]
[==, PlotOrientation, ., HORIZONTAL, ), {, rectY, =, domainAxis, ., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey, ,, dataset, ,, getItemMargin, (]
[), {, rectY, =, domainAxis, ., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey, ,, dataset, ,, getItemMargin, (, ), ,, dataArea, ,]
[., HORIZONTAL, ), {, rectY, =, domainAxis, ., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey, ,, dataset, ,, getItemMargin, (, ), ,]
[=, domainAxis, ., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey, ,, dataset, ,, getItemMargin, (, ), ,, dataArea, ,, RectangleEdge, ., LEFT]
[;, rectX, =, j2dy0, ;, rectHeight, =, state, ., getBarWidth, (, ), ;, rectY, =, rectY, -, rectHeight, /, 2.0]
[., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey, ,, dataset, ,, getItemMargin, (, ), ,, dataArea, ,, RectangleEdge, ., LEFT, ), ;]
[,, seriesKey, ,, dataset, ,, getItemMargin, (, ), ,, dataArea, ,, RectangleEdge, ., LEFT, ), ;, rectX, =, j2dy0, ;]
[,, dataset, ,, getItemMargin, (, ), ,, dataArea, ,, RectangleEdge, ., LEFT, ), ;, rectX, =, j2dy0, ;, rectHeight, =]
[,, getItemMargin, (, ), ,, dataArea, ,, RectangleEdge, ., LEFT, ), ;, rectX, =, j2dy0, ;, rectHeight, =, state, .]
[,, dataArea, ,, RectangleEdge, ., LEFT, ), ;, rectX, =, j2dy0, ;, rectHeight, =, state, ., getBarWidth, (, ), ;]
[,, RectangleEdge, ., LEFT, ), ;, rectX, =, j2dy0, ;, rectHeight, =, state, ., getBarWidth, (, ), ;, rectY, =]
[), ;, rectX, =, j2dy0, ;, rectHeight, =, state, ., getBarWidth, (, ), ;, rectY, =, rectY, -, rectHeight, /]
[., LEFT, ), ;, rectX, =, j2dy0, ;, rectHeight, =, state, ., getBarWidth, (, ), ;, rectY, =, rectY, -]
[=, j2dy0, ;, rectHeight, =, state, ., getBarWidth, (, ), ;, rectY, =, rectY, -, rectHeight, /, 2.0, ;, rectWidth]
[;, rectHeight, =, state, ., getBarWidth, (, ), ;, rectY, =, rectY, -, rectHeight, /, 2.0, ;, rectWidth, =, Math]
[=, state, ., getBarWidth, (, ), ;, rectY, =, rectY, -, rectHeight, /, 2.0, ;, rectWidth, =, Math, ., max]
[;, rectY, =, rectY, -, rectHeight, /, 2.0, ;, rectWidth, =, Math, ., max, (, getMinimumBarLength, (, ), ,, Math]
[., getBarWidth, (, ), ;, rectY, =, rectY, -, rectHeight, /, 2.0, ;, rectWidth, =, Math, ., max, (, getMinimumBarLength]
[=, rectY, -, rectHeight, /, 2.0, ;, rectWidth, =, Math, ., max, (, getMinimumBarLength, (, ), ,, Math, ., abs]
[;, rectWidth, =, Math, ., max, (, getMinimumBarLength, (, ), ,, Math, ., abs, (, j2dy1, -, j2dy0, ), )]
[-, rectHeight, /, 2.0, ;, rectWidth, =, Math, ., max, (, getMinimumBarLength, (, ), ,, Math, ., abs, (, j2dy1]
[;, rectWidth, =, Math, ., max, (, getMinimumBarLength, (, ), ,, Math, ., abs, (, j2dy1, -, j2dy0, ), )]
[/, 2.0, ;, rectWidth, =, Math, ., max, (, getMinimumBarLength, (, ), ,, Math, ., abs, (, j2dy1, -, j2dy0]
[;, rectWidth, =, Math, ., max, (, getMinimumBarLength, (, ), ,, Math, ., abs, (, j2dy1, -, j2dy0, ), )]
[=, Math, ., max, (, getMinimumBarLength, (, ), ,, Math, ., abs, (, j2dy1, -, j2dy0, ), ), ;, }]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, rectX, =, domainAxis, ., getCategorySeriesMiddle, (, categoryKey, ,]
[., max, (, getMinimumBarLength, (, ), ,, Math, ., abs, (, j2dy1, -, j2dy0, ), ), ;, }, else, if]
[,, Math, ., abs, (, j2dy1, -, j2dy0, ), ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL]
[), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, rectX, =, domainAxis, ., getCategorySeriesMiddle, (, categoryKey]
[., abs, (, j2dy1, -, j2dy0, ), ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[), ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, rectX, =, domainAxis, ., getCategorySeriesMiddle, (]
[-, j2dy0, ), ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, rectX, =, domainAxis, .]
[), ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, rectX, =, domainAxis, ., getCategorySeriesMiddle, (]
[), {, rectX, =, domainAxis, ., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey, ,, dataset, ,, getItemMargin, (, ), ,, dataArea, ,]
[==, PlotOrientation, ., VERTICAL, ), {, rectX, =, domainAxis, ., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey, ,, dataset, ,, getItemMargin, (]
[), {, rectX, =, domainAxis, ., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey, ,, dataset, ,, getItemMargin, (, ), ,, dataArea, ,]
[., VERTICAL, ), {, rectX, =, domainAxis, ., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey, ,, dataset, ,, getItemMargin, (, ), ,]
[=, domainAxis, ., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey, ,, dataset, ,, getItemMargin, (, ), ,, dataArea, ,, RectangleEdge, ., TOP]
[;, rectX, =, rectX, -, rectWidth, /, 2.0, ;, rectY, =, j2dy0, ;, }, Rectangle2D, bar, =, new, Rectangle2D, .]
[., getCategorySeriesMiddle, (, categoryKey, ,, seriesKey, ,, dataset, ,, getItemMargin, (, ), ,, dataArea, ,, RectangleEdge, ., TOP, ), ;]
[,, seriesKey, ,, dataset, ,, getItemMargin, (, ), ,, dataArea, ,, RectangleEdge, ., TOP, ), ;, rectX, =, rectX, -]
[,, dataset, ,, getItemMargin, (, ), ,, dataArea, ,, RectangleEdge, ., TOP, ), ;, rectX, =, rectX, -, rectWidth, /]
[,, getItemMargin, (, ), ,, dataArea, ,, RectangleEdge, ., TOP, ), ;, rectX, =, rectX, -, rectWidth, /, 2.0, ;]
[,, dataArea, ,, RectangleEdge, ., TOP, ), ;, rectX, =, rectX, -, rectWidth, /, 2.0, ;, rectY, =, j2dy0, ;]
[,, RectangleEdge, ., TOP, ), ;, rectX, =, rectX, -, rectWidth, /, 2.0, ;, rectY, =, j2dy0, ;, }, Rectangle2D]
[), ;, rectX, =, rectX, -, rectWidth, /, 2.0, ;, rectY, =, j2dy0, ;, }, Rectangle2D, bar, =, new, Rectangle2D]
[., TOP, ), ;, rectX, =, rectX, -, rectWidth, /, 2.0, ;, rectY, =, j2dy0, ;, }, Rectangle2D, bar, =]
[=, rectX, -, rectWidth, /, 2.0, ;, rectY, =, j2dy0, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (]
[;, rectY, =, j2dy0, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, rectY, ,, rectWidth, ,]
[-, rectWidth, /, 2.0, ;, rectY, =, j2dy0, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,]
[;, rectY, =, j2dy0, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, rectY, ,, rectWidth, ,]
[/, 2.0, ;, rectY, =, j2dy0, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, rectY, ,]
[;, rectY, =, j2dy0, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, rectY, ,, rectWidth, ,]
[=, j2dy0, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, rectY, ,, rectWidth, ,, rectHeight, )]
[;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, rectY, ,, rectWidth, ,, rectHeight, ), ;, Paint]
[;, Paint, seriesPaint, =, getFirstBarPaint, (, ), ;, if, (, column, ==, 0, ), {, seriesPaint, =, getFirstBarPaint, (, )]
[,, rectY, ,, rectWidth, ,, rectHeight, ), ;, Paint, seriesPaint, =, getFirstBarPaint, (, ), ;, if, (, column, ==, 0]
[,, rectWidth, ,, rectHeight, ), ;, Paint, seriesPaint, =, getFirstBarPaint, (, ), ;, if, (, column, ==, 0, ), {]
[,, rectHeight, ), ;, Paint, seriesPaint, =, getFirstBarPaint, (, ), ;, if, (, column, ==, 0, ), {, seriesPaint, =]
[), ;, Paint, seriesPaint, =, getFirstBarPaint, (, ), ;, if, (, column, ==, 0, ), {, seriesPaint, =, getFirstBarPaint, (]
[;, if, (, column, ==, 0, ), {, seriesPaint, =, getFirstBarPaint, (, ), ;, }, else, if, (, column, ==]
[), {, seriesPaint, =, getFirstBarPaint, (, ), ;, }, else, if, (, column, ==, categoryCount, -, 1, ), {, seriesPaint]
[==, 0, ), {, seriesPaint, =, getFirstBarPaint, (, ), ;, }, else, if, (, column, ==, categoryCount, -, 1, )]
[), {, seriesPaint, =, getFirstBarPaint, (, ), ;, }, else, if, (, column, ==, categoryCount, -, 1, ), {, seriesPaint]
[=, getFirstBarPaint, (, ), ;, }, else, if, (, column, ==, categoryCount, -, 1, ), {, seriesPaint, =, getLastBarPaint, (]
[;, }, else, if, (, column, ==, categoryCount, -, 1, ), {, seriesPaint, =, getLastBarPaint, (, ), ;, }, else]
[), {, seriesPaint, =, getLastBarPaint, (, ), ;, }, else, {, if, (, valDiff, <, 0.0, ), {, seriesPaint, =]
[==, categoryCount, -, 1, ), {, seriesPaint, =, getLastBarPaint, (, ), ;, }, else, {, if, (, valDiff, <, 0.0]
[), {, seriesPaint, =, getLastBarPaint, (, ), ;, }, else, {, if, (, valDiff, <, 0.0, ), {, seriesPaint, =]
[-, 1, ), {, seriesPaint, =, getLastBarPaint, (, ), ;, }, else, {, if, (, valDiff, <, 0.0, ), {]
[), {, seriesPaint, =, getLastBarPaint, (, ), ;, }, else, {, if, (, valDiff, <, 0.0, ), {, seriesPaint, =]
[=, getLastBarPaint, (, ), ;, }, else, {, if, (, valDiff, <, 0.0, ), {, seriesPaint, =, getNegativeBarPaint, (, )]
[;, }, else, {, if, (, valDiff, <, 0.0, ), {, seriesPaint, =, getNegativeBarPaint, (, ), ;, }, else, if]
[), {, seriesPaint, =, getNegativeBarPaint, (, ), ;, }, else, if, (, valDiff, >, 0.0, ), {, seriesPaint, =, getPositiveBarPaint]
[<, 0.0, ), {, seriesPaint, =, getNegativeBarPaint, (, ), ;, }, else, if, (, valDiff, >, 0.0, ), {, seriesPaint]
[), {, seriesPaint, =, getNegativeBarPaint, (, ), ;, }, else, if, (, valDiff, >, 0.0, ), {, seriesPaint, =, getPositiveBarPaint]
[=, getNegativeBarPaint, (, ), ;, }, else, if, (, valDiff, >, 0.0, ), {, seriesPaint, =, getPositiveBarPaint, (, ), ;]
[;, }, else, if, (, valDiff, >, 0.0, ), {, seriesPaint, =, getPositiveBarPaint, (, ), ;, }, else, {, seriesPaint]
[), {, seriesPaint, =, getPositiveBarPaint, (, ), ;, }, else, {, seriesPaint, =, getLastBarPaint, (, ), ;, }, }, if]
[>, 0.0, ), {, seriesPaint, =, getPositiveBarPaint, (, ), ;, }, else, {, seriesPaint, =, getLastBarPaint, (, ), ;, }]
[), {, seriesPaint, =, getPositiveBarPaint, (, ), ;, }, else, {, seriesPaint, =, getLastBarPaint, (, ), ;, }, }, if]
[=, getPositiveBarPaint, (, ), ;, }, else, {, seriesPaint, =, getLastBarPaint, (, ), ;, }, }, if, (, getGradientPaintTransformer, (]
[;, }, else, {, seriesPaint, =, getLastBarPaint, (, ), ;, }, }, if, (, getGradientPaintTransformer, (, ), !=, null, &&]
[=, getLastBarPaint, (, ), ;, }, }, if, (, getGradientPaintTransformer, (, ), !=, null, &&, seriesPaint, instanceof, GradientPaint, ), {]
[;, }, }, if, (, getGradientPaintTransformer, (, ), !=, null, &&, seriesPaint, instanceof, GradientPaint, ), {, GradientPaint, gp, =, (]
[), {, GradientPaint, gp, =, (, GradientPaint, ), seriesPaint, ;, seriesPaint, =, getGradientPaintTransformer, (, ), ., transform, (, gp, ,]
[&&, seriesPaint, instanceof, GradientPaint, ), {, GradientPaint, gp, =, (, GradientPaint, ), seriesPaint, ;, seriesPaint, =, getGradientPaintTransformer, (, ), .]
[!=, null, &&, seriesPaint, instanceof, GradientPaint, ), {, GradientPaint, gp, =, (, GradientPaint, ), seriesPaint, ;, seriesPaint, =, getGradientPaintTransformer, (]
[&&, seriesPaint, instanceof, GradientPaint, ), {, GradientPaint, gp, =, (, GradientPaint, ), seriesPaint, ;, seriesPaint, =, getGradientPaintTransformer, (, ), .]
[), {, GradientPaint, gp, =, (, GradientPaint, ), seriesPaint, ;, seriesPaint, =, getGradientPaintTransformer, (, ), ., transform, (, gp, ,]
[instanceof, GradientPaint, ), {, GradientPaint, gp, =, (, GradientPaint, ), seriesPaint, ;, seriesPaint, =, getGradientPaintTransformer, (, ), ., transform, (]
[;, seriesPaint, =, getGradientPaintTransformer, (, ), ., transform, (, gp, ,, bar, ), ;, }, g2, ., setPaint, (, seriesPaint]
[;, seriesPaint, =, getGradientPaintTransformer, (, ), ., transform, (, gp, ,, bar, ), ;, }, g2, ., setPaint, (, seriesPaint]
[=, getGradientPaintTransformer, (, ), ., transform, (, gp, ,, bar, ), ;, }, g2, ., setPaint, (, seriesPaint, ), ;]
[;, }, g2, ., setPaint, (, seriesPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (]
[., transform, (, gp, ,, bar, ), ;, }, g2, ., setPaint, (, seriesPaint, ), ;, g2, ., fill, (]
[,, bar, ), ;, }, g2, ., setPaint, (, seriesPaint, ), ;, g2, ., fill, (, bar, ), ;, if]
[), ;, }, g2, ., setPaint, (, seriesPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline]
[;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >]
[., setPaint, (, seriesPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state]
[), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, )]
[;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke]
[., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, )]
[), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =]
[), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row]
[&&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected]
[), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row]
[>, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint]
[., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;]
[), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row]
[;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint]
[,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (]
[,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=]
[), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&]
[;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2]
[,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke]
[,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke]
[), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;]
[), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (]
[&&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;]
[!=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint]
[&&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;]
[), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (]
[!=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, .]
[), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =]
[., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;]
[), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator]
[;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected]
[., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (]
[), ;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,]
[;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null]
[., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;]
[), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=]
[;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2]
[,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, )]
[,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {]
[), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[!=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected]
[,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator]
[), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar]
[;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, valDiff, <, 0.0, )]
[,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, valDiff, <, 0.0, ), ), ;]
[,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, valDiff, <, 0.0, ), ), ;, }, EntityCollection]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, valDiff, <, 0.0, ), ), ;, }, EntityCollection, entities, =]
[,, selected, ,, generator, ,, bar, ,, (, valDiff, <, 0.0, ), ), ;, }, EntityCollection, entities, =, state, .]
[,, generator, ,, bar, ,, (, valDiff, <, 0.0, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (]
[,, bar, ,, (, valDiff, <, 0.0, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;]
[,, (, valDiff, <, 0.0, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity]
[), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[<, 0.0, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null]
[), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, public]
[!=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, public]
[;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj]
[,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {]
[,, row, ,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[==, this, ), {, return, true, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return]
[), {, return, true, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, (, obj, instanceof, WaterfallBarRenderer, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, if, (, !, (, obj, instanceof, WaterfallBarRenderer, ), ), {, return, false, ;, }]
[., equals, (, obj, ), ), {, return, false, ;, }, if, (, !, (, obj, instanceof, WaterfallBarRenderer, ), )]
[), ), {, return, false, ;, }, if, (, !, (, obj, instanceof, WaterfallBarRenderer, ), ), {, return, false, ;]
[;, }, if, (, !, (, obj, instanceof, WaterfallBarRenderer, ), ), {, return, false, ;, }, WaterfallBarRenderer, that, =, (]
[), {, return, false, ;, }, WaterfallBarRenderer, that, =, (, WaterfallBarRenderer, ), obj, ;, if, (, !, PaintUtilities, ., equal]
[), {, return, false, ;, }, WaterfallBarRenderer, that, =, (, WaterfallBarRenderer, ), obj, ;, if, (, !, PaintUtilities, ., equal]
[), ), {, return, false, ;, }, WaterfallBarRenderer, that, =, (, WaterfallBarRenderer, ), obj, ;, if, (, !, PaintUtilities, .]
[instanceof, WaterfallBarRenderer, ), ), {, return, false, ;, }, WaterfallBarRenderer, that, =, (, WaterfallBarRenderer, ), obj, ;, if, (, !]
[;, }, WaterfallBarRenderer, that, =, (, WaterfallBarRenderer, ), obj, ;, if, (, !, PaintUtilities, ., equal, (, this, ., firstBarPaint]
[;, if, (, !, PaintUtilities, ., equal, (, this, ., firstBarPaint, ,, that, ., firstBarPaint, ), ), {, return, false]
[;, if, (, !, PaintUtilities, ., equal, (, this, ., firstBarPaint, ,, that, ., firstBarPaint, ), ), {, return, false]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., lastBarPaint, ,, that, ., lastBarPaint]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., lastBarPaint, ,, that, ., lastBarPaint]
[., equal, (, this, ., firstBarPaint, ,, that, ., firstBarPaint, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., firstBarPaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, .]
[., firstBarPaint, ,, that, ., firstBarPaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., lastBarPaint, ,, that, .]
[., firstBarPaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., lastBarPaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., lastBarPaint, ,, that, ., lastBarPaint, ), ), {, return]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., positiveBarPaint, ,, that, ., positiveBarPaint]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., positiveBarPaint, ,, that, ., positiveBarPaint]
[., equal, (, this, ., lastBarPaint, ,, that, ., lastBarPaint, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., lastBarPaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, .]
[., lastBarPaint, ,, that, ., lastBarPaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., positiveBarPaint, ,, that, .]
[., lastBarPaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., positiveBarPaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., positiveBarPaint, ,, that, ., positiveBarPaint, ), ), {, return]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., negativeBarPaint, ,, that, ., negativeBarPaint]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., negativeBarPaint, ,, that, ., negativeBarPaint]
[., equal, (, this, ., positiveBarPaint, ,, that, ., positiveBarPaint, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., positiveBarPaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, .]
[., positiveBarPaint, ,, that, ., positiveBarPaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., negativeBarPaint, ,, that, .]
[., positiveBarPaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., negativeBarPaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., negativeBarPaint, ,, that, ., negativeBarPaint, ), ), {, return]
[), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[., equal, (, this, ., negativeBarPaint, ,, that, ., negativeBarPaint, ), ), {, return, false, ;, }, return, true, ;]
[,, that, ., negativeBarPaint, ), ), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream]
[., negativeBarPaint, ,, that, ., negativeBarPaint, ), ), {, return, false, ;, }, return, true, ;, }, private, void, writeObject]
[), ), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException]
[., negativeBarPaint, ), ), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, )]
[;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (]
[;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, .]
[;, SerialUtilities, ., writePaint, (, this, ., firstBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., lastBarPaint, ,]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., firstBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (]
[;, SerialUtilities, ., writePaint, (, this, ., lastBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., positiveBarPaint, ,]
[., writePaint, (, this, ., firstBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., lastBarPaint, ,, stream, )]
[,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., lastBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this]
[., firstBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., lastBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint]
[), ;, SerialUtilities, ., writePaint, (, this, ., lastBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., positiveBarPaint]
[;, SerialUtilities, ., writePaint, (, this, ., positiveBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., negativeBarPaint, ,]
[., writePaint, (, this, ., lastBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., positiveBarPaint, ,, stream, )]
[,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., positiveBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this]
[., lastBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., positiveBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint]
[), ;, SerialUtilities, ., writePaint, (, this, ., positiveBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., negativeBarPaint]
[;, SerialUtilities, ., writePaint, (, this, ., negativeBarPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, )]
[., writePaint, (, this, ., positiveBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., negativeBarPaint, ,, stream, )]
[,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., negativeBarPaint, ,, stream, ), ;, }, private, void, readObject, (]
[., positiveBarPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., negativeBarPaint, ,, stream, ), ;, }, private, void]
[), ;, SerialUtilities, ., writePaint, (, this, ., negativeBarPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[., writePaint, (, this, ., negativeBarPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException]
[,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject]
[., negativeBarPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream]
[), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, )]
[;, this, ., firstBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., lastBarPaint, =, SerialUtilities, ., readPaint, (]
[., defaultReadObject, (, ), ;, this, ., firstBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., lastBarPaint, =]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., lastBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this]
[., firstBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., lastBarPaint, =, SerialUtilities, ., readPaint, (, stream, )]
[;, this, ., lastBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., positiveBarPaint, =, SerialUtilities, ., readPaint, (]
[., readPaint, (, stream, ), ;, this, ., lastBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., positiveBarPaint]
[), ;, this, ., lastBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., positiveBarPaint, =, SerialUtilities, ., readPaint]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., positiveBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this]
[., lastBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., positiveBarPaint, =, SerialUtilities, ., readPaint, (, stream, )]
[;, this, ., positiveBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., negativeBarPaint, =, SerialUtilities, ., readPaint, (]
[., readPaint, (, stream, ), ;, this, ., positiveBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., negativeBarPaint]
[), ;, this, ., positiveBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., negativeBarPaint, =, SerialUtilities, ., readPaint]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., negativeBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }]
[., positiveBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., negativeBarPaint, =, SerialUtilities, ., readPaint, (, stream, )]
[;, this, ., negativeBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[., readPaint, (, stream, ), ;, this, ., negativeBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[), ;, this, ., negativeBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[., negativeBarPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[;, }, }]
[., readPaint, (, stream, ), ;, }, }]
[), ;, }, }]
