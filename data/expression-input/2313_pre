[math3, ., util, ., FastMath, ;, public, class, MersenneTwister, extends, BitsStreamGenerator, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[MersenneTwister, extends, BitsStreamGenerator, implements, Serializable, {, private, static, final, long, serialVersionUID, =, 8661194735290153518L, ;, private, static, final, int, N, =]
[final, long, serialVersionUID, =, 8661194735290153518L, ;, private, static, final, int, N, =, 624, ;, private, static, final, int, M, =]
[N, =, 624, ;, private, static, final, int, M, =, 397, ;, private, static, final, int, [, ], MAG01, =]
[=, 624, ;, private, static, final, int, M, =, 397, ;, private, static, final, int, [, ], MAG01, =, {]
[;, private, static, final, int, M, =, 397, ;, private, static, final, int, [, ], MAG01, =, {, 0x0, ,]
[0x0, ,, 0x9908b0df, }, ;, private, int, [, ], mt, ;, private, int, mti, ;, public, MersenneTwister, (, ), {]
[0x9908b0df, }, ;, private, int, [, ], mt, ;, private, int, mti, ;, public, MersenneTwister, (, ), {, mt, =]
[private, int, [, ], mt, ;, private, int, mti, ;, public, MersenneTwister, (, ), {, mt, =, new, int, []
[], mt, ;, private, int, mti, ;, public, MersenneTwister, (, ), {, mt, =, new, int, [, N, ], ;]
[;, private, int, mti, ;, public, MersenneTwister, (, ), {, mt, =, new, int, [, N, ], ;, setSeed, (]
[;, private, int, mti, ;, public, MersenneTwister, (, ), {, mt, =, new, int, [, N, ], ;, setSeed, (]
[;, private, int, mti, ;, public, MersenneTwister, (, ), {, mt, =, new, int, [, N, ], ;, setSeed, (]
[MersenneTwister, (, ), {, mt, =, new, int, [, N, ], ;, setSeed, (, System, ., currentTimeMillis, (, ), +]
[MersenneTwister, (, ), {, mt, =, new, int, [, N, ], ;, setSeed, (, System, ., currentTimeMillis, (, ), +]
[mt, =, new, int, [, N, ], ;, setSeed, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (]
[currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), ), ;, }, public, MersenneTwister, (, int, seed, ), {]
[), +, System, ., identityHashCode, (, this, ), ), ;, }, public, MersenneTwister, (, int, seed, ), {, mt, =]
[., identityHashCode, (, this, ), ), ;, }, public, MersenneTwister, (, int, seed, ), {, mt, =, new, int, []
[this, ), ), ;, }, public, MersenneTwister, (, int, seed, ), {, mt, =, new, int, [, N, ], ;]
[), ;, }, public, MersenneTwister, (, int, seed, ), {, mt, =, new, int, [, N, ], ;, setSeed, (]
[int, [, N, ], ;, setSeed, (, seed, ), ;, }, public, MersenneTwister, (, int, [, ], seed, ), {]
[N, ], ;, setSeed, (, seed, ), ;, }, public, MersenneTwister, (, int, [, ], seed, ), {, mt, =]
[setSeed, (, seed, ), ;, }, public, MersenneTwister, (, int, [, ], seed, ), {, mt, =, new, int, []
[), ;, }, public, MersenneTwister, (, int, [, ], seed, ), {, mt, =, new, int, [, N, ], ;]
[}, public, MersenneTwister, (, int, [, ], seed, ), {, mt, =, new, int, [, N, ], ;, setSeed, (]
[=, new, int, [, N, ], ;, setSeed, (, seed, ), ;, }, public, MersenneTwister, (, long, seed, ), {]
[int, [, N, ], ;, setSeed, (, seed, ), ;, }, public, MersenneTwister, (, long, seed, ), {, mt, =]
[], ;, setSeed, (, seed, ), ;, }, public, MersenneTwister, (, long, seed, ), {, mt, =, new, int, []
[(, seed, ), ;, }, public, MersenneTwister, (, long, seed, ), {, mt, =, new, int, [, N, ], ;]
[), ;, }, public, MersenneTwister, (, long, seed, ), {, mt, =, new, int, [, N, ], ;, setSeed, (]
[;, setSeed, (, seed, ), ;, }, @, Override, public, void, setSeed, (, int, seed, ), {, long, longMT, =]
[(, seed, ), ;, }, @, Override, public, void, setSeed, (, int, seed, ), {, long, longMT, =, seed, ;]
[(, seed, ), ;, }, @, Override, public, void, setSeed, (, int, seed, ), {, long, longMT, =, seed, ;]
[), ;, }, @, Override, public, void, setSeed, (, int, seed, ), {, long, longMT, =, seed, ;, mt, []
[@, Override, public, void, setSeed, (, int, seed, ), {, long, longMT, =, seed, ;, mt, [, 0, ], =]
[void, setSeed, (, int, seed, ), {, long, longMT, =, seed, ;, mt, [, 0, ], =, (, int, )]
[seed, ), {, long, longMT, =, seed, ;, mt, [, 0, ], =, (, int, ), longMT, ;, for, (]
[{, long, longMT, =, seed, ;, mt, [, 0, ], =, (, int, ), longMT, ;, for, (, mti, =]
[longMT, =, seed, ;, mt, [, 0, ], =, (, int, ), longMT, ;, for, (, mti, =, 1, ;]
[longMT, =, seed, ;, mt, [, 0, ], =, (, int, ), longMT, ;, for, (, mti, =, 1, ;]
[seed, ;, mt, [, 0, ], =, (, int, ), longMT, ;, for, (, mti, =, 1, ;, mti, <]
[mt, [, 0, ], =, (, int, ), longMT, ;, for, (, mti, =, 1, ;, mti, <, N, ;]
[[, 0, ], =, (, int, ), longMT, ;, for, (, mti, =, 1, ;, mti, <, N, ;, ++]
[=, (, int, ), longMT, ;, for, (, mti, =, 1, ;, mti, <, N, ;, ++, mti, ), {]
[int, ), longMT, ;, for, (, mti, =, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =]
[int, ), longMT, ;, for, (, mti, =, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =]
[), longMT, ;, for, (, mti, =, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =, (]
[), longMT, ;, for, (, mti, =, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =, (]
[), longMT, ;, for, (, mti, =, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =, (]
[;, for, (, mti, =, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =, (, 1812433253l, *]
[for, (, mti, =, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =, (, 1812433253l, *, (]
[for, (, mti, =, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =, (, 1812433253l, *, (]
[mti, =, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =, (, 1812433253l, *, (, longMT, ^]
[=, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =, (, 1812433253l, *, (, longMT, ^, (]
[=, 1, ;, mti, <, N, ;, ++, mti, ), {, longMT, =, (, 1812433253l, *, (, longMT, ^, (]
[mti, <, N, ;, ++, mti, ), {, longMT, =, (, 1812433253l, *, (, longMT, ^, (, longMT, >, >]
[++, mti, ), {, longMT, =, (, 1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), ), +]
[{, longMT, =, (, 1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), ), +, mti, ), &]
[=, (, 1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), ), +, mti, ), &, 0xffffffffL, ;]
[=, (, 1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), ), +, mti, ), &, 0xffffffffL, ;]
[1812433253l, *, (, longMT, ^, (, longMT, >, >, 30, ), ), +, mti, ), &, 0xffffffffL, ;, mt, []
[longMT, ^, (, longMT, >, >, 30, ), ), +, mti, ), &, 0xffffffffL, ;, mt, [, mti, ], =]
[longMT, >, >, 30, ), ), +, mti, ), &, 0xffffffffL, ;, mt, [, mti, ], =, (, int, )]
[30, ), ), +, mti, ), &, 0xffffffffL, ;, mt, [, mti, ], =, (, int, ), longMT, ;, }]
[}, clear, (, ), ;, }, @, Override, public, void, setSeed, (, int, [, ], seed, ), {, if, (]
[}, clear, (, ), ;, }, @, Override, public, void, setSeed, (, int, [, ], seed, ), {, if, (]
[(, ), ;, }, @, Override, public, void, setSeed, (, int, [, ], seed, ), {, if, (, seed, ==]
[}, @, Override, public, void, setSeed, (, int, [, ], seed, ), {, if, (, seed, ==, null, ), {]
[Override, public, void, setSeed, (, int, [, ], seed, ), {, if, (, seed, ==, null, ), {, setSeed, (]
[Override, public, void, setSeed, (, int, [, ], seed, ), {, if, (, seed, ==, null, ), {, setSeed, (]
[Override, public, void, setSeed, (, int, [, ], seed, ), {, if, (, seed, ==, null, ), {, setSeed, (]
[[, ], seed, ), {, if, (, seed, ==, null, ), {, setSeed, (, System, ., currentTimeMillis, (, ), +]
[[, ], seed, ), {, if, (, seed, ==, null, ), {, setSeed, (, System, ., currentTimeMillis, (, ), +]
[{, if, (, seed, ==, null, ), {, setSeed, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (]
[{, setSeed, (, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), ), ;, return, ;, }]
[(, System, ., currentTimeMillis, (, ), +, System, ., identityHashCode, (, this, ), ), ;, return, ;, }, setSeed, (]
[+, System, ., identityHashCode, (, this, ), ), ;, return, ;, }, setSeed, (, 19650218, ), ;, int, i, =]
[this, ), ), ;, return, ;, }, setSeed, (, 19650218, ), ;, int, i, =, 1, ;, int, j, =]
[setSeed, (, 19650218, ), ;, int, i, =, 1, ;, int, j, =, 0, ;, for, (, int, k, =]
[setSeed, (, 19650218, ), ;, int, i, =, 1, ;, int, j, =, 0, ;, for, (, int, k, =]
[;, int, i, =, 1, ;, int, j, =, 0, ;, for, (, int, k, =, FastMath, ., max, (]
[i, =, 1, ;, int, j, =, 0, ;, for, (, int, k, =, FastMath, ., max, (, N, ,]
[i, =, 1, ;, int, j, =, 0, ;, for, (, int, k, =, FastMath, ., max, (, N, ,]
[j, =, 0, ;, for, (, int, k, =, FastMath, ., max, (, N, ,, seed, ., length, ), ;]
[j, =, 0, ;, for, (, int, k, =, FastMath, ., max, (, N, ,, seed, ., length, ), ;]
[0, ;, for, (, int, k, =, FastMath, ., max, (, N, ,, seed, ., length, ), ;, k, !=]
[for, (, int, k, =, FastMath, ., max, (, N, ,, seed, ., length, ), ;, k, !=, 0, ;]
[for, (, int, k, =, FastMath, ., max, (, N, ,, seed, ., length, ), ;, k, !=, 0, ;]
[max, (, N, ,, seed, ., length, ), ;, k, !=, 0, ;, k, --, ), {, long, l0, =]
[max, (, N, ,, seed, ., length, ), ;, k, !=, 0, ;, k, --, ), {, long, l0, =]
[(, N, ,, seed, ., length, ), ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (]
[(, N, ,, seed, ., length, ), ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (]
[(, N, ,, seed, ., length, ), ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (]
[,, seed, ., length, ), ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (, mt, []
[length, ), ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &]
[k, !=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |]
[!=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (]
[!=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (]
[0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (]
[0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (]
[0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (]
[k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, []
[{, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, ], <]
[=, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, ], <, 0, ), ?]
[mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :]
[), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =]
[), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =]
[|, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (]
[|, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (]
[|, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (]
[(, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, []
[(, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, []
[[, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -]
[<, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &]
[?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |]
[0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (]
[0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (]
[:, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (]
[:, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (]
[:, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (]
[), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, []
[), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, []
[long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -]
[(, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <]
[i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?]
[1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :]
[(, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =]
[(, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =]
[(, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =]
[(, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (]
[(, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (]
[[, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^]
[i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (]
[i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (]
[-, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (]
[-, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (]
[], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^]
[<, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (]
[<, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (]
[?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >]
[), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *]
[=, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1664525l, ), ), +]
[=, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1664525l, ), ), +]
[l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1664525l, ), ), +, seed, []
[(, l1, ^, (, l1, >, >, 30, ), ), *, 1664525l, ), ), +, seed, [, j, ], +]
[^, (, l1, >, >, 30, ), ), *, 1664525l, ), ), +, seed, [, j, ], +, j, ;]
[^, (, l1, >, >, 30, ), ), *, 1664525l, ), ), +, seed, [, j, ], +, j, ;]
[l1, >, >, 30, ), ), *, 1664525l, ), ), +, seed, [, j, ], +, j, ;, mt, []
[30, ), ), *, 1664525l, ), ), +, seed, [, j, ], +, j, ;, mt, [, i, ], =]
[*, 1664525l, ), ), +, seed, [, j, ], +, j, ;, mt, [, i, ], =, (, int, )]
[1664525l, ), ), +, seed, [, j, ], +, j, ;, mt, [, i, ], =, (, int, ), (]
[1664525l, ), ), +, seed, [, j, ], +, j, ;, mt, [, i, ], =, (, int, ), (]
[), +, seed, [, j, ], +, j, ;, mt, [, i, ], =, (, int, ), (, l, &]
[[, j, ], +, j, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffl, ), ;]
[[, j, ], +, j, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffl, ), ;]
[+, j, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffl, ), ;, i, ++, ;]
[+, j, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffl, ), ;, i, ++, ;]
[i, ], =, (, int, ), (, l, &, 0xffffffffl, ), ;, i, ++, ;, j, ++, ;, if, (]
[i, ], =, (, int, ), (, l, &, 0xffffffffl, ), ;, i, ++, ;, j, ++, ;, if, (]
[=, (, int, ), (, l, &, 0xffffffffl, ), ;, i, ++, ;, j, ++, ;, if, (, i, >=]
[), (, l, &, 0xffffffffl, ), ;, i, ++, ;, j, ++, ;, if, (, i, >=, N, ), {]
[), (, l, &, 0xffffffffl, ), ;, i, ++, ;, j, ++, ;, if, (, i, >=, N, ), {]
[l, &, 0xffffffffl, ), ;, i, ++, ;, j, ++, ;, if, (, i, >=, N, ), {, mt, []
[), ;, i, ++, ;, j, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =]
[), ;, i, ++, ;, j, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =]
[i, ++, ;, j, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, []
[i, ++, ;, j, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, []
[;, j, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N, -]
[;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;]
[(, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;, i, =]
[{, mt, [, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, if, (]
[{, mt, [, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, if, (]
[[, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, if, (, j, >=]
[[, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, if, (, j, >=]
[[, N, -, 1, ], ;, i, =, 1, ;, }, if, (, j, >=, seed, ., length, ), {]
[-, 1, ], ;, i, =, 1, ;, }, if, (, j, >=, seed, ., length, ), {, j, =]
[if, (, j, >=, seed, ., length, ), {, j, =, 0, ;, }, }, for, (, int, k, =]
[if, (, j, >=, seed, ., length, ), {, j, =, 0, ;, }, }, for, (, int, k, =]
[j, >=, seed, ., length, ), {, j, =, 0, ;, }, }, for, (, int, k, =, N, -]
[seed, ., length, ), {, j, =, 0, ;, }, }, for, (, int, k, =, N, -, 1, ;]
[seed, ., length, ), {, j, =, 0, ;, }, }, for, (, int, k, =, N, -, 1, ;]
[length, ), {, j, =, 0, ;, }, }, for, (, int, k, =, N, -, 1, ;, k, !=]
[{, j, =, 0, ;, }, }, for, (, int, k, =, N, -, 1, ;, k, !=, 0, ;]
[{, j, =, 0, ;, }, }, for, (, int, k, =, N, -, 1, ;, k, !=, 0, ;]
[for, (, int, k, =, N, -, 1, ;, k, !=, 0, ;, k, --, ), {, long, l0, =]
[for, (, int, k, =, N, -, 1, ;, k, !=, 0, ;, k, --, ), {, long, l0, =]
[(, int, k, =, N, -, 1, ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (]
[(, int, k, =, N, -, 1, ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (]
[(, int, k, =, N, -, 1, ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (]
[k, =, N, -, 1, ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (, mt, []
[-, 1, ;, k, !=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &]
[k, !=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |]
[!=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (]
[!=, 0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (]
[0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (]
[0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (]
[0, ;, k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (]
[k, --, ), {, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, []
[{, long, l0, =, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, ], <]
[=, (, mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, ], <, 0, ), ?]
[mt, [, i, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :]
[), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =]
[), |, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =]
[|, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (]
[|, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (]
[|, (, (, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (]
[(, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, []
[(, mt, [, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, []
[[, i, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -]
[<, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &]
[?, 0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |]
[0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (]
[0x80000000l, :, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (]
[:, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (]
[:, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (]
[:, 0x0l, ), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (]
[), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, []
[), ;, long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, []
[long, l1, =, (, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -]
[(, mt, [, i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <]
[i, -, 1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?]
[1, ], &, 0x7fffffffl, ), |, (, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :]
[(, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =]
[(, (, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =]
[(, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (]
[(, mt, [, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (]
[[, i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^]
[i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (]
[i, -, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (]
[-, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (]
[-, 1, ], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (]
[], <, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^]
[<, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (]
[<, 0, ), ?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (]
[?, 0x80000000l, :, 0x0l, ), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >]
[), ;, long, l, =, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *]
[=, (, l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1566083941l, ), ), -]
[l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1566083941l, ), ), -, i, ;]
[l0, ^, (, (, l1, ^, (, l1, >, >, 30, ), ), *, 1566083941l, ), ), -, i, ;]
[(, (, l1, ^, (, l1, >, >, 30, ), ), *, 1566083941l, ), ), -, i, ;, mt, []
[^, (, l1, >, >, 30, ), ), *, 1566083941l, ), ), -, i, ;, mt, [, i, ], =]
[>, >, 30, ), ), *, 1566083941l, ), ), -, i, ;, mt, [, i, ], =, (, int, )]
[>, 30, ), ), *, 1566083941l, ), ), -, i, ;, mt, [, i, ], =, (, int, ), (]
[>, 30, ), ), *, 1566083941l, ), ), -, i, ;, mt, [, i, ], =, (, int, ), (]
[), ), *, 1566083941l, ), ), -, i, ;, mt, [, i, ], =, (, int, ), (, l, &]
[1566083941l, ), ), -, i, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL, ), ;]
[1566083941l, ), ), -, i, ;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL, ), ;]
[;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL, ), ;, i, ++, ;, if, (]
[;, mt, [, i, ], =, (, int, ), (, l, &, 0xffffffffL, ), ;, i, ++, ;, if, (]
[[, i, ], =, (, int, ), (, l, &, 0xffffffffL, ), ;, i, ++, ;, if, (, i, >=]
[=, (, int, ), (, l, &, 0xffffffffL, ), ;, i, ++, ;, if, (, i, >=, N, ), {]
[=, (, int, ), (, l, &, 0xffffffffL, ), ;, i, ++, ;, if, (, i, >=, N, ), {]
[int, ), (, l, &, 0xffffffffL, ), ;, i, ++, ;, if, (, i, >=, N, ), {, mt, []
[l, &, 0xffffffffL, ), ;, i, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =]
[l, &, 0xffffffffL, ), ;, i, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =]
[0xffffffffL, ), ;, i, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, []
[0xffffffffL, ), ;, i, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, []
[;, i, ++, ;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N, -]
[;, if, (, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;]
[(, i, >=, N, ), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;, i, =]
[), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, }]
[), {, mt, [, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, }]
[mt, [, 0, ], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, }, mt, []
[], =, mt, [, N, -, 1, ], ;, i, =, 1, ;, }, }, mt, [, 0, ], =]
[mt, [, N, -, 1, ], ;, i, =, 1, ;, }, }, mt, [, 0, ], =, 0x80000000, ;]
[0, ], =, 0x80000000, ;, clear, (, ), ;, }, @, Override, public, void, setSeed, (, long, seed, ), {]
[=, 0x80000000, ;, clear, (, ), ;, }, @, Override, public, void, setSeed, (, long, seed, ), {, setSeed, (]
[(, ), ;, }, @, Override, public, void, setSeed, (, long, seed, ), {, setSeed, (, new, int, [, ]]
[), ;, }, @, Override, public, void, setSeed, (, long, seed, ), {, setSeed, (, new, int, [, ], {]
[@, Override, public, void, setSeed, (, long, seed, ), {, setSeed, (, new, int, [, ], {, (, int, )]
[Override, public, void, setSeed, (, long, seed, ), {, setSeed, (, new, int, [, ], {, (, int, ), (]
[Override, public, void, setSeed, (, long, seed, ), {, setSeed, (, new, int, [, ], {, (, int, ), (]
[(, long, seed, ), {, setSeed, (, new, int, [, ], {, (, int, ), (, seed, >, >, >]
[), {, setSeed, (, new, int, [, ], {, (, int, ), (, seed, >, >, >, 32, ), ,]
[(, new, int, [, ], {, (, int, ), (, seed, >, >, >, 32, ), ,, (, int, )]
[new, int, [, ], {, (, int, ), (, seed, >, >, >, 32, ), ,, (, int, ), (]
[new, int, [, ], {, (, int, ), (, seed, >, >, >, 32, ), ,, (, int, ), (]
[[, ], {, (, int, ), (, seed, >, >, >, 32, ), ,, (, int, ), (, seed, &]
[), }, ), ;, }, @, Override, protected, int, next, (, int, bits, ), {, int, y, ;, if, (]
[), }, ), ;, }, @, Override, protected, int, next, (, int, bits, ), {, int, y, ;, if, (]
[), ;, }, @, Override, protected, int, next, (, int, bits, ), {, int, y, ;, if, (, mti, >=]
[int, next, (, int, bits, ), {, int, y, ;, if, (, mti, >=, N, ), {, int, mtNext, =]
[int, next, (, int, bits, ), {, int, y, ;, if, (, mti, >=, N, ), {, int, mtNext, =]
[(, int, bits, ), {, int, y, ;, if, (, mti, >=, N, ), {, int, mtNext, =, mt, []
[if, (, mti, >=, N, ), {, int, mtNext, =, mt, [, 0, ], ;, for, (, int, k, =]
[mti, >=, N, ), {, int, mtNext, =, mt, [, 0, ], ;, for, (, int, k, =, 0, ;]
[mti, >=, N, ), {, int, mtNext, =, mt, [, 0, ], ;, for, (, int, k, =, 0, ;]
[N, ), {, int, mtNext, =, mt, [, 0, ], ;, for, (, int, k, =, 0, ;, k, <]
[N, ), {, int, mtNext, =, mt, [, 0, ], ;, for, (, int, k, =, 0, ;, k, <]
[{, int, mtNext, =, mt, [, 0, ], ;, for, (, int, k, =, 0, ;, k, <, N, -]
[mtNext, =, mt, [, 0, ], ;, for, (, int, k, =, 0, ;, k, <, N, -, M, ;]
[=, mt, [, 0, ], ;, for, (, int, k, =, 0, ;, k, <, N, -, M, ;, ++]
[for, (, int, k, =, 0, ;, k, <, N, -, M, ;, ++, k, ), {, int, mtCurr, =]
[int, k, =, 0, ;, k, <, N, -, M, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;]
[=, 0, ;, k, <, N, -, M, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =]
[=, 0, ;, k, <, N, -, M, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =]
[;, k, <, N, -, M, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, []
[;, k, <, N, -, M, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, []
[<, N, -, M, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +]
[M, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;]
[++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =]
[++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =]
[k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (]
[k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (]
[{, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &]
[=, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |]
[mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (]
[mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (]
[mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &]
[[, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;]
[[, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;]
[+, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, []
[;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =]
[;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =]
[;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =]
[;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =]
[=, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, []
[=, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, []
[mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +]
[), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, M, ], ^]
[|, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, M, ], ^, (]
[|, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, M, ], ^, (]
[0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, M, ], ^, (, y, >, >, >]
[mt, [, k, ], =, mt, [, k, +, M, ], ^, (, y, >, >, >, 1, ), ^]
[mt, [, k, ], =, mt, [, k, +, M, ], ^, (, y, >, >, >, 1, ), ^]
[k, ], =, mt, [, k, +, M, ], ^, (, y, >, >, >, 1, ), ^, MAG01, []
[k, ], =, mt, [, k, +, M, ], ^, (, y, >, >, >, 1, ), ^, MAG01, []
[=, mt, [, k, +, M, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &]
[y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, for, (, int, k, =]
[y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, for, (, int, k, =]
[>, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, for, (, int, k, =, N, -]
[1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, for, (, int, k, =, N, -, M, ;]
[1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, for, (, int, k, =, N, -, M, ;]
[^, MAG01, [, y, &, 0x1, ], ;, }, for, (, int, k, =, N, -, M, ;, k, <]
[^, MAG01, [, y, &, 0x1, ], ;, }, for, (, int, k, =, N, -, M, ;, k, <]
[[, y, &, 0x1, ], ;, }, for, (, int, k, =, N, -, M, ;, k, <, N, -]
[&, 0x1, ], ;, }, for, (, int, k, =, N, -, M, ;, k, <, N, -, 1, ;]
[0x1, ], ;, }, for, (, int, k, =, N, -, M, ;, k, <, N, -, 1, ;, ++]
[int, k, =, N, -, M, ;, k, <, N, -, 1, ;, ++, k, ), {, int, mtCurr, =]
[=, N, -, M, ;, k, <, N, -, 1, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;]
[-, M, ;, k, <, N, -, 1, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =]
[-, M, ;, k, <, N, -, 1, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =]
[;, k, <, N, -, 1, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, []
[;, k, <, N, -, 1, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, []
[<, N, -, 1, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +]
[1, ;, ++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;]
[++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =]
[++, k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =]
[k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (]
[k, ), {, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (]
[{, int, mtCurr, =, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &]
[=, mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |]
[mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (]
[mtNext, ;, mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (]
[mtNext, =, mt, [, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &]
[[, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;]
[[, k, +, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;]
[+, 1, ], ;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, []
[;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =]
[;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =]
[;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =]
[;, y, =, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =]
[=, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, []
[=, (, mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, []
[mtCurr, &, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +]
[&, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, (]
[&, 0x80000000, ), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, (]
[), |, (, mtNext, &, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, (, M, -]
[&, 0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, (, M, -, N, ), ], ^]
[0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, (, M, -, N, ), ], ^, (]
[0x7fffffff, ), ;, mt, [, k, ], =, mt, [, k, +, (, M, -, N, ), ], ^, (]
[[, k, ], =, mt, [, k, +, (, M, -, N, ), ], ^, (, y, >, >, >]
[=, mt, [, k, +, (, M, -, N, ), ], ^, (, y, >, >, >, 1, ), ^]
[=, mt, [, k, +, (, M, -, N, ), ], ^, (, y, >, >, >, 1, ), ^]
[[, k, +, (, M, -, N, ), ], ^, (, y, >, >, >, 1, ), ^, MAG01, []
[[, k, +, (, M, -, N, ), ], ^, (, y, >, >, >, 1, ), ^, MAG01, []
[+, (, M, -, N, ), ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &]
[N, ), ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }]
[], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =]
[], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =]
[^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (]
[^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (]
[y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (, mtNext, &]
[>, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (, mtNext, &, 0x80000000, ), |]
[1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (]
[1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (]
[1, ), ^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (]
[^, MAG01, [, y, &, 0x1, ], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, []
[y, &, 0x1, ], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ], &]
[], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;]
[], ;, }, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;]
[}, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, []
[}, y, =, (, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, []
[=, (, mtNext, &, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -]
[&, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =]
[&, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =]
[&, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =]
[&, 0x80000000, ), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =]
[), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =, mt, []
[), |, (, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =, mt, []
[(, mt, [, 0, ], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =, mt, [, M, -]
[0, ], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =, mt, [, M, -, 1, ], ^]
[], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =, mt, [, M, -, 1, ], ^, (]
[], &, 0x7fffffff, ), ;, mt, [, N, -, 1, ], =, mt, [, M, -, 1, ], ^, (]
[;, mt, [, N, -, 1, ], =, mt, [, M, -, 1, ], ^, (, y, >, >, >]
[N, -, 1, ], =, mt, [, M, -, 1, ], ^, (, y, >, >, >, 1, ), ^]
[N, -, 1, ], =, mt, [, M, -, 1, ], ^, (, y, >, >, >, 1, ), ^]
[1, ], =, mt, [, M, -, 1, ], ^, (, y, >, >, >, 1, ), ^, MAG01, []
[1, ], =, mt, [, M, -, 1, ], ^, (, y, >, >, >, 1, ), ^, MAG01, []
[=, mt, [, M, -, 1, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &]
[M, -, 1, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;]
[1, ], ^, (, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, mti, =]
[(, y, >, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, mti, =, 0, ;, }]
[>, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, mti, =, 0, ;, }, y, =]
[>, >, >, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, mti, =, 0, ;, }, y, =]
[>, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, mti, =, 0, ;, }, y, =, mt, []
[>, 1, ), ^, MAG01, [, y, &, 0x1, ], ;, mti, =, 0, ;, }, y, =, mt, []
[MAG01, [, y, &, 0x1, ], ;, mti, =, 0, ;, }, y, =, mt, [, mti, ++, ], ;]
[y, &, 0x1, ], ;, mti, =, 0, ;, }, y, =, mt, [, mti, ++, ], ;, y, ^=]
[y, &, 0x1, ], ;, mti, =, 0, ;, }, y, =, mt, [, mti, ++, ], ;, y, ^=]
[;, mti, =, 0, ;, }, y, =, mt, [, mti, ++, ], ;, y, ^=, y, >, >, >]
[=, 0, ;, }, y, =, mt, [, mti, ++, ], ;, y, ^=, y, >, >, >, 11, ;]
[;, }, y, =, mt, [, mti, ++, ], ;, y, ^=, y, >, >, >, 11, ;, y, ^=]
[;, }, y, =, mt, [, mti, ++, ], ;, y, ^=, y, >, >, >, 11, ;, y, ^=]
[}, y, =, mt, [, mti, ++, ], ;, y, ^=, y, >, >, >, 11, ;, y, ^=, (]
[}, y, =, mt, [, mti, ++, ], ;, y, ^=, y, >, >, >, 11, ;, y, ^=, (]
[=, mt, [, mti, ++, ], ;, y, ^=, y, >, >, >, 11, ;, y, ^=, (, y, <<]
[mti, ++, ], ;, y, ^=, y, >, >, >, 11, ;, y, ^=, (, y, <<, 7, ), &]
[], ;, y, ^=, y, >, >, >, 11, ;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;]
[y, ^=, y, >, >, >, 11, ;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=]
[y, ^=, y, >, >, >, 11, ;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=]
[^=, y, >, >, >, 11, ;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=, (]
[^=, y, >, >, >, 11, ;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=, (]
[>, >, >, 11, ;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=, (, y, <<]
[11, ;, y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=, (, y, <<, 15, ), &]
[y, ^=, (, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=, (, y, <<, 15, ), &, 0xefc60000, ;]
[(, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=, (, y, <<, 15, ), &, 0xefc60000, ;, y, ^=]
[(, y, <<, 7, ), &, 0x9d2c5680, ;, y, ^=, (, y, <<, 15, ), &, 0xefc60000, ;, y, ^=]
[), &, 0x9d2c5680, ;, y, ^=, (, y, <<, 15, ), &, 0xefc60000, ;, y, ^=, y, >, >, >]
[;, y, ^=, (, y, <<, 15, ), &, 0xefc60000, ;, y, ^=, y, >, >, >, 18, ;, return]
[;, y, ^=, (, y, <<, 15, ), &, 0xefc60000, ;, y, ^=, y, >, >, >, 18, ;, return]
[y, <<, 15, ), &, 0xefc60000, ;, y, ^=, y, >, >, >, 18, ;, return, y, >, >, >]
[<<, 15, ), &, 0xefc60000, ;, y, ^=, y, >, >, >, 18, ;, return, y, >, >, >, (]
[<<, 15, ), &, 0xefc60000, ;, y, ^=, y, >, >, >, 18, ;, return, y, >, >, >, (]
[), &, 0xefc60000, ;, y, ^=, y, >, >, >, 18, ;, return, y, >, >, >, (, 32, -]
