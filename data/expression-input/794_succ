[;, private, Comparable, defaultGroup, ;, private, List, groups, ;, private, Map, keyToGroupMap, ;, public, KeyToGroupMap, (, ), {, this, (]
[;, private, Comparable, defaultGroup, ;, private, List, groups, ;, private, Map, keyToGroupMap, ;, public, KeyToGroupMap, (, ), {, this, (]
[), ;, }, public, KeyToGroupMap, (, Comparable, defaultGroup, ), {, if, (, defaultGroup, ==, null, ), {, throw, new, IllegalArgumentException]
[), {, throw, new, IllegalArgumentException, (, "Null 'defaultGroup' argument.", ), ;, }, this, ., defaultGroup, =, defaultGroup, ;, this, ., groups, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'defaultGroup' argument.", ), ;, }, this, ., defaultGroup, =, defaultGroup, ;, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'defaultGroup' argument.", ), ;, }, this, ., defaultGroup, =, defaultGroup, ;, this, ., groups, =]
[;, }, this, ., defaultGroup, =, defaultGroup, ;, this, ., groups, =, new, ArrayList, (, ), ;, this, ., keyToGroupMap]
[), ;, }, this, ., defaultGroup, =, defaultGroup, ;, this, ., groups, =, new, ArrayList, (, ), ;, this, .]
[=, defaultGroup, ;, this, ., groups, =, new, ArrayList, (, ), ;, this, ., keyToGroupMap, =, new, HashMap, (, )]
[., defaultGroup, =, defaultGroup, ;, this, ., groups, =, new, ArrayList, (, ), ;, this, ., keyToGroupMap, =, new, HashMap]
[;, this, ., groups, =, new, ArrayList, (, ), ;, this, ., keyToGroupMap, =, new, HashMap, (, ), ;, }]
[=, new, ArrayList, (, ), ;, this, ., keyToGroupMap, =, new, HashMap, (, ), ;, }, public, int, getGroupCount, (]
[., groups, =, new, ArrayList, (, ), ;, this, ., keyToGroupMap, =, new, HashMap, (, ), ;, }, public, int]
[;, this, ., keyToGroupMap, =, new, HashMap, (, ), ;, }, public, int, getGroupCount, (, ), {, return, this, .]
[=, new, HashMap, (, ), ;, }, public, int, getGroupCount, (, ), {, return, this, ., groups, ., size, (]
[., keyToGroupMap, =, new, HashMap, (, ), ;, }, public, int, getGroupCount, (, ), {, return, this, ., groups, .]
[;, }, public, int, getGroupCount, (, ), {, return, this, ., groups, ., size, (, ), +, 1, ;, }]
[;, }, public, List, getGroups, (, ), {, List, result, =, new, ArrayList, (, ), ;, result, ., add, (]
[+, 1, ;, }, public, List, getGroups, (, ), {, List, result, =, new, ArrayList, (, ), ;, result, .]
[., size, (, ), +, 1, ;, }, public, List, getGroups, (, ), {, List, result, =, new, ArrayList, (]
[., groups, ., size, (, ), +, 1, ;, }, public, List, getGroups, (, ), {, List, result, =, new]
[;, }, public, List, getGroups, (, ), {, List, result, =, new, ArrayList, (, ), ;, result, ., add, (]
[;, result, ., add, (, this, ., defaultGroup, ), ;, Iterator, iterator, =, this, ., groups, ., iterator, (, )]
[;, Iterator, iterator, =, this, ., groups, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), )]
[., add, (, this, ., defaultGroup, ), ;, Iterator, iterator, =, this, ., groups, ., iterator, (, ), ;, while]
[), ;, Iterator, iterator, =, this, ., groups, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, )]
[., defaultGroup, ), ;, Iterator, iterator, =, this, ., groups, ., iterator, (, ), ;, while, (, iterator, ., hasNext]
[;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, group, =, (, Comparable, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, group, =, (, Comparable, )]
[., groups, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, group, =, (]
[), {, Comparable, group, =, (, Comparable, ), iterator, ., next, (, ), ;, if, (, !, result, ., contains]
[., hasNext, (, ), ), {, Comparable, group, =, (, Comparable, ), iterator, ., next, (, ), ;, if, (]
[;, if, (, !, result, ., contains, (, group, ), ), {, result, ., add, (, group, ), ;, }]
[;, if, (, !, result, ., contains, (, group, ), ), {, result, ., add, (, group, ), ;, }]
[., next, (, ), ;, if, (, !, result, ., contains, (, group, ), ), {, result, ., add, (]
[), {, result, ., add, (, group, ), ;, }, }, return, result, ;, }, public, int, getGroupIndex, (, Comparable]
[), {, result, ., add, (, group, ), ;, }, }, return, result, ;, }, public, int, getGroupIndex, (, Comparable]
[., contains, (, group, ), ), {, result, ., add, (, group, ), ;, }, }, return, result, ;, }]
[), ), {, result, ., add, (, group, ), ;, }, }, return, result, ;, }, public, int, getGroupIndex, (]
[;, }, }, return, result, ;, }, public, int, getGroupIndex, (, Comparable, group, ), {, int, result, =, this, .]
[., add, (, group, ), ;, }, }, return, result, ;, }, public, int, getGroupIndex, (, Comparable, group, ), {]
[), ;, }, }, return, result, ;, }, public, int, getGroupIndex, (, Comparable, group, ), {, int, result, =, this]
[;, }, public, int, getGroupIndex, (, Comparable, group, ), {, int, result, =, this, ., groups, ., indexOf, (, group]
[;, if, (, result, <, 0, ), {, if, (, this, ., defaultGroup, ., equals, (, group, ), ), {]
[., indexOf, (, group, ), ;, if, (, result, <, 0, ), {, if, (, this, ., defaultGroup, ., equals]
[., groups, ., indexOf, (, group, ), ;, if, (, result, <, 0, ), {, if, (, this, ., defaultGroup]
[), ;, if, (, result, <, 0, ), {, if, (, this, ., defaultGroup, ., equals, (, group, ), )]
[), {, if, (, this, ., defaultGroup, ., equals, (, group, ), ), {, result, =, 0, ;, }, }]
[<, 0, ), {, if, (, this, ., defaultGroup, ., equals, (, group, ), ), {, result, =, 0, ;]
[), {, if, (, this, ., defaultGroup, ., equals, (, group, ), ), {, result, =, 0, ;, }, }]
[), {, result, =, 0, ;, }, }, else, {, result, =, result, +, 1, ;, }, return, result, ;]
[., equals, (, group, ), ), {, result, =, 0, ;, }, }, else, {, result, =, result, +, 1]
[., defaultGroup, ., equals, (, group, ), ), {, result, =, 0, ;, }, }, else, {, result, =, result]
[), ), {, result, =, 0, ;, }, }, else, {, result, =, result, +, 1, ;, }, return, result]
[=, 0, ;, }, }, else, {, result, =, result, +, 1, ;, }, return, result, ;, }, public, Comparable]
[;, }, }, else, {, result, =, result, +, 1, ;, }, return, result, ;, }, public, Comparable, getGroup, (]
[=, result, +, 1, ;, }, return, result, ;, }, public, Comparable, getGroup, (, Comparable, key, ), {, if, (]
[;, }, return, result, ;, }, public, Comparable, getGroup, (, Comparable, key, ), {, if, (, key, ==, null, )]
[+, 1, ;, }, return, result, ;, }, public, Comparable, getGroup, (, Comparable, key, ), {, if, (, key, ==]
[;, }, return, result, ;, }, public, Comparable, getGroup, (, Comparable, key, ), {, if, (, key, ==, null, )]
[;, }, public, Comparable, getGroup, (, Comparable, key, ), {, if, (, key, ==, null, ), {, throw, new, IllegalArgumentException]
[), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, result, =, this, ., defaultGroup, ;, Comparable, group, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, result, =, this, ., defaultGroup, ;, Comparable]
[), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, result, =, this, ., defaultGroup, ;, Comparable, group, =]
[;, }, Comparable, result, =, this, ., defaultGroup, ;, Comparable, group, =, (, Comparable, ), this, ., keyToGroupMap, ., get]
[), ;, }, Comparable, result, =, this, ., defaultGroup, ;, Comparable, group, =, (, Comparable, ), this, ., keyToGroupMap, .]
[;, Comparable, group, =, (, Comparable, ), this, ., keyToGroupMap, ., get, (, key, ), ;, if, (, group, !=]
[., defaultGroup, ;, Comparable, group, =, (, Comparable, ), this, ., keyToGroupMap, ., get, (, key, ), ;, if, (]
[;, if, (, group, !=, null, ), {, result, =, group, ;, }, return, result, ;, }, public, void, mapKeyToGroup]
[;, if, (, group, !=, null, ), {, result, =, group, ;, }, return, result, ;, }, public, void, mapKeyToGroup]
[., get, (, key, ), ;, if, (, group, !=, null, ), {, result, =, group, ;, }, return, result]
[., keyToGroupMap, ., get, (, key, ), ;, if, (, group, !=, null, ), {, result, =, group, ;, }]
[), ;, if, (, group, !=, null, ), {, result, =, group, ;, }, return, result, ;, }, public, void]
[), {, result, =, group, ;, }, return, result, ;, }, public, void, mapKeyToGroup, (, Comparable, key, ,, Comparable, group]
[!=, null, ), {, result, =, group, ;, }, return, result, ;, }, public, void, mapKeyToGroup, (, Comparable, key, ,]
[), {, result, =, group, ;, }, return, result, ;, }, public, void, mapKeyToGroup, (, Comparable, key, ,, Comparable, group]
[=, group, ;, }, return, result, ;, }, public, void, mapKeyToGroup, (, Comparable, key, ,, Comparable, group, ), {, if]
[;, }, return, result, ;, }, public, void, mapKeyToGroup, (, Comparable, key, ,, Comparable, group, ), {, if, (, key]
[;, }, public, void, mapKeyToGroup, (, Comparable, key, ,, Comparable, group, ), {, if, (, key, ==, null, ), {]
[), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, currentGroup, =, getGroup, (, key, ), ;, if, (]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, currentGroup, =, getGroup, (, key, ), ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, Comparable, currentGroup, =, getGroup, (, key, ), ;, if, (]
[;, }, Comparable, currentGroup, =, getGroup, (, key, ), ;, if, (, !, currentGroup, ., equals, (, this, ., defaultGroup]
[), ;, }, Comparable, currentGroup, =, getGroup, (, key, ), ;, if, (, !, currentGroup, ., equals, (, this, .]
[;, if, (, !, currentGroup, ., equals, (, this, ., defaultGroup, ), ), {, if, (, !, currentGroup, ., equals]
[), ;, if, (, !, currentGroup, ., equals, (, this, ., defaultGroup, ), ), {, if, (, !, currentGroup, .]
[), {, if, (, !, currentGroup, ., equals, (, group, ), ), {, int, count, =, getKeyCount, (, currentGroup, )]
[), {, if, (, !, currentGroup, ., equals, (, group, ), ), {, int, count, =, getKeyCount, (, currentGroup, )]
[., equals, (, this, ., defaultGroup, ), ), {, if, (, !, currentGroup, ., equals, (, group, ), ), {]
[), ), {, if, (, !, currentGroup, ., equals, (, group, ), ), {, int, count, =, getKeyCount, (, currentGroup]
[., defaultGroup, ), ), {, if, (, !, currentGroup, ., equals, (, group, ), ), {, int, count, =, getKeyCount]
[), {, int, count, =, getKeyCount, (, currentGroup, ), ;, if, (, count, ==, 1, ), {, this, ., groups]
[), {, int, count, =, getKeyCount, (, currentGroup, ), ;, if, (, count, ==, 1, ), {, this, ., groups]
[., equals, (, group, ), ), {, int, count, =, getKeyCount, (, currentGroup, ), ;, if, (, count, ==, 1]
[), ), {, int, count, =, getKeyCount, (, currentGroup, ), ;, if, (, count, ==, 1, ), {, this, .]
[;, if, (, count, ==, 1, ), {, this, ., groups, ., remove, (, currentGroup, ), ;, }, }, }]
[), ;, if, (, count, ==, 1, ), {, this, ., groups, ., remove, (, currentGroup, ), ;, }, }]
[), {, this, ., groups, ., remove, (, currentGroup, ), ;, }, }, }, if, (, group, ==, null, )]
[==, 1, ), {, this, ., groups, ., remove, (, currentGroup, ), ;, }, }, }, if, (, group, ==]
[), {, this, ., groups, ., remove, (, currentGroup, ), ;, }, }, }, if, (, group, ==, null, )]
[;, }, }, }, if, (, group, ==, null, ), {, this, ., keyToGroupMap, ., remove, (, key, ), ;]
[., remove, (, currentGroup, ), ;, }, }, }, if, (, group, ==, null, ), {, this, ., keyToGroupMap, .]
[., groups, ., remove, (, currentGroup, ), ;, }, }, }, if, (, group, ==, null, ), {, this, .]
[), ;, }, }, }, if, (, group, ==, null, ), {, this, ., keyToGroupMap, ., remove, (, key, )]
[), {, this, ., keyToGroupMap, ., remove, (, key, ), ;, }, else, {, if, (, !, this, ., groups]
[==, null, ), {, this, ., keyToGroupMap, ., remove, (, key, ), ;, }, else, {, if, (, !, this]
[), {, this, ., keyToGroupMap, ., remove, (, key, ), ;, }, else, {, if, (, !, this, ., groups]
[;, }, else, {, if, (, !, this, ., groups, ., contains, (, group, ), ), {, if, (, !]
[., remove, (, key, ), ;, }, else, {, if, (, !, this, ., groups, ., contains, (, group, )]
[., keyToGroupMap, ., remove, (, key, ), ;, }, else, {, if, (, !, this, ., groups, ., contains, (]
[), ;, }, else, {, if, (, !, this, ., groups, ., contains, (, group, ), ), {, if, (]
[), {, if, (, !, this, ., defaultGroup, ., equals, (, group, ), ), {, this, ., groups, ., add]
[), {, if, (, !, this, ., defaultGroup, ., equals, (, group, ), ), {, this, ., groups, ., add]
[., contains, (, group, ), ), {, if, (, !, this, ., defaultGroup, ., equals, (, group, ), ), {]
[., groups, ., contains, (, group, ), ), {, if, (, !, this, ., defaultGroup, ., equals, (, group, )]
[), ), {, if, (, !, this, ., defaultGroup, ., equals, (, group, ), ), {, this, ., groups, .]
[), {, this, ., groups, ., add, (, group, ), ;, }, }, this, ., keyToGroupMap, ., put, (, key]
[), {, this, ., groups, ., add, (, group, ), ;, }, }, this, ., keyToGroupMap, ., put, (, key]
[., equals, (, group, ), ), {, this, ., groups, ., add, (, group, ), ;, }, }, this, .]
[., defaultGroup, ., equals, (, group, ), ), {, this, ., groups, ., add, (, group, ), ;, }, }]
[), ), {, this, ., groups, ., add, (, group, ), ;, }, }, this, ., keyToGroupMap, ., put, (]
[;, }, }, this, ., keyToGroupMap, ., put, (, key, ,, group, ), ;, }, }, public, int, getKeyCount, (]
[., add, (, group, ), ;, }, }, this, ., keyToGroupMap, ., put, (, key, ,, group, ), ;, }]
[., groups, ., add, (, group, ), ;, }, }, this, ., keyToGroupMap, ., put, (, key, ,, group, )]
[), ;, }, }, this, ., keyToGroupMap, ., put, (, key, ,, group, ), ;, }, }, public, int, getKeyCount]
[;, }, }, public, int, getKeyCount, (, Comparable, group, ), {, if, (, group, ==, null, ), {, throw, new]
[., put, (, key, ,, group, ), ;, }, }, public, int, getKeyCount, (, Comparable, group, ), {, if, (]
[., keyToGroupMap, ., put, (, key, ,, group, ), ;, }, }, public, int, getKeyCount, (, Comparable, group, ), {]
[,, group, ), ;, }, }, public, int, getKeyCount, (, Comparable, group, ), {, if, (, group, ==, null, )]
[), ;, }, }, public, int, getKeyCount, (, Comparable, group, ), {, if, (, group, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'group' argument.", ), ;, }, int, result, =, 0, ;, Iterator, iterator, =, this, .]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'group' argument.", ), ;, }, int, result, =, 0, ;, Iterator, iterator, =]
[), {, throw, new, IllegalArgumentException, (, "Null 'group' argument.", ), ;, }, int, result, =, 0, ;, Iterator, iterator, =, this, .]
[;, }, int, result, =, 0, ;, Iterator, iterator, =, this, ., keyToGroupMap, ., values, (, ), ., iterator, (]
[), ;, }, int, result, =, 0, ;, Iterator, iterator, =, this, ., keyToGroupMap, ., values, (, ), ., iterator]
[;, Iterator, iterator, =, this, ., keyToGroupMap, ., values, (, ), ., iterator, (, ), ;, while, (, iterator, .]
[;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, g, =, (, Comparable, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, g, =, (, Comparable, )]
[., values, (, ), ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Comparable, g]
[., keyToGroupMap, ., values, (, ), ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {]
[), {, Comparable, g, =, (, Comparable, ), iterator, ., next, (, ), ;, if, (, group, ., equals, (]
[., hasNext, (, ), ), {, Comparable, g, =, (, Comparable, ), iterator, ., next, (, ), ;, if, (]
[;, if, (, group, ., equals, (, g, ), ), {, result, ++, ;, }, }, return, result, ;, }]
[;, if, (, group, ., equals, (, g, ), ), {, result, ++, ;, }, }, return, result, ;, }]
[., next, (, ), ;, if, (, group, ., equals, (, g, ), ), {, result, ++, ;, }, }]
[), {, result, ++, ;, }, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if]
[., equals, (, g, ), ), {, result, ++, ;, }, }, return, result, ;, }, public, boolean, equals, (]
[), ), {, result, ++, ;, }, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {]
[;, }, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this]
[++, ;, }, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, KeyToGroupMap, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, KeyToGroupMap, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, KeyToGroupMap, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, KeyToGroupMap, ), ), {, return, false, ;, }, KeyToGroupMap, that, =, (]
[), {, return, false, ;, }, KeyToGroupMap, that, =, (, KeyToGroupMap, ), obj, ;, if, (, !, ObjectUtilities, ., equal]
[), {, return, false, ;, }, KeyToGroupMap, that, =, (, KeyToGroupMap, ), obj, ;, if, (, !, ObjectUtilities, ., equal]
[), ), {, return, false, ;, }, KeyToGroupMap, that, =, (, KeyToGroupMap, ), obj, ;, if, (, !, ObjectUtilities, .]
[instanceof, KeyToGroupMap, ), ), {, return, false, ;, }, KeyToGroupMap, that, =, (, KeyToGroupMap, ), obj, ;, if, (, !]
[;, }, KeyToGroupMap, that, =, (, KeyToGroupMap, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., defaultGroup]
[;, if, (, !, ObjectUtilities, ., equal, (, this, ., defaultGroup, ,, that, ., defaultGroup, ), ), {, return, false]
[;, if, (, !, ObjectUtilities, ., equal, (, this, ., defaultGroup, ,, that, ., defaultGroup, ), ), {, return, false]
[), {, return, false, ;, }, if, (, !, this, ., keyToGroupMap, ., equals, (, that, ., keyToGroupMap, ), )]
[), {, return, false, ;, }, if, (, !, this, ., keyToGroupMap, ., equals, (, that, ., keyToGroupMap, ), )]
[., equal, (, this, ., defaultGroup, ,, that, ., defaultGroup, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., defaultGroup, ), ), {, return, false, ;, }, if, (, !, this, ., keyToGroupMap, ., equals, (]
[., defaultGroup, ,, that, ., defaultGroup, ), ), {, return, false, ;, }, if, (, !, this, ., keyToGroupMap, .]
[), ), {, return, false, ;, }, if, (, !, this, ., keyToGroupMap, ., equals, (, that, ., keyToGroupMap, )]
[., defaultGroup, ), ), {, return, false, ;, }, if, (, !, this, ., keyToGroupMap, ., equals, (, that, .]
[;, }, if, (, !, this, ., keyToGroupMap, ., equals, (, that, ., keyToGroupMap, ), ), {, return, false, ;]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, KeyToGroupMap, result]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, KeyToGroupMap, result]
[., equals, (, that, ., keyToGroupMap, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone]
[., keyToGroupMap, ., equals, (, that, ., keyToGroupMap, ), ), {, return, false, ;, }, return, true, ;, }, public]
[), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, KeyToGroupMap]
[., keyToGroupMap, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, KeyToGroupMap, result, =, (, KeyToGroupMap, )]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, KeyToGroupMap, result, =, (, KeyToGroupMap, ), super, ., clone, (]
[;, result, ., defaultGroup, =, (, Comparable, ), KeyToGroupMap, ., clone, (, this, ., defaultGroup, ), ;, result, ., groups]
[;, result, ., defaultGroup, =, (, Comparable, ), KeyToGroupMap, ., clone, (, this, ., defaultGroup, ), ;, result, ., groups]
[., clone, (, ), ;, result, ., defaultGroup, =, (, Comparable, ), KeyToGroupMap, ., clone, (, this, ., defaultGroup, )]
[=, (, Comparable, ), KeyToGroupMap, ., clone, (, this, ., defaultGroup, ), ;, result, ., groups, =, (, List, )]
[., defaultGroup, =, (, Comparable, ), KeyToGroupMap, ., clone, (, this, ., defaultGroup, ), ;, result, ., groups, =, (]
[;, result, ., groups, =, (, List, ), KeyToGroupMap, ., clone, (, this, ., groups, ), ;, result, ., keyToGroupMap]
[;, result, ., groups, =, (, List, ), KeyToGroupMap, ., clone, (, this, ., groups, ), ;, result, ., keyToGroupMap]
[., clone, (, this, ., defaultGroup, ), ;, result, ., groups, =, (, List, ), KeyToGroupMap, ., clone, (, this]
[), ;, result, ., groups, =, (, List, ), KeyToGroupMap, ., clone, (, this, ., groups, ), ;, result, .]
[., defaultGroup, ), ;, result, ., groups, =, (, List, ), KeyToGroupMap, ., clone, (, this, ., groups, ), ;]
[=, (, List, ), KeyToGroupMap, ., clone, (, this, ., groups, ), ;, result, ., keyToGroupMap, =, (, Map, )]
[., groups, =, (, List, ), KeyToGroupMap, ., clone, (, this, ., groups, ), ;, result, ., keyToGroupMap, =, (]
[;, result, ., keyToGroupMap, =, (, Map, ), KeyToGroupMap, ., clone, (, this, ., keyToGroupMap, ), ;, return, result, ;]
[;, result, ., keyToGroupMap, =, (, Map, ), KeyToGroupMap, ., clone, (, this, ., keyToGroupMap, ), ;, return, result, ;]
[., clone, (, this, ., groups, ), ;, result, ., keyToGroupMap, =, (, Map, ), KeyToGroupMap, ., clone, (, this]
[), ;, result, ., keyToGroupMap, =, (, Map, ), KeyToGroupMap, ., clone, (, this, ., keyToGroupMap, ), ;, return, result]
[., groups, ), ;, result, ., keyToGroupMap, =, (, Map, ), KeyToGroupMap, ., clone, (, this, ., keyToGroupMap, ), ;]
[=, (, Map, ), KeyToGroupMap, ., clone, (, this, ., keyToGroupMap, ), ;, return, result, ;, }, private, static, Object]
[., keyToGroupMap, =, (, Map, ), KeyToGroupMap, ., clone, (, this, ., keyToGroupMap, ), ;, return, result, ;, }, private]
[;, return, result, ;, }, private, static, Object, clone, (, Object, object, ), {, if, (, object, ==, null, )]
[;, return, result, ;, }, private, static, Object, clone, (, Object, object, ), {, if, (, object, ==, null, )]
[., clone, (, this, ., keyToGroupMap, ), ;, return, result, ;, }, private, static, Object, clone, (, Object, object, )]
[), ;, return, result, ;, }, private, static, Object, clone, (, Object, object, ), {, if, (, object, ==, null]
[., keyToGroupMap, ), ;, return, result, ;, }, private, static, Object, clone, (, Object, object, ), {, if, (, object]
[;, }, private, static, Object, clone, (, Object, object, ), {, if, (, object, ==, null, ), {, return, null]
[), {, return, null, ;, }, Class, c, =, object, ., getClass, (, ), ;, Object, result, =, null, ;]
[==, null, ), {, return, null, ;, }, Class, c, =, object, ., getClass, (, ), ;, Object, result, =]
[), {, return, null, ;, }, Class, c, =, object, ., getClass, (, ), ;, Object, result, =, null, ;]
[;, }, Class, c, =, object, ., getClass, (, ), ;, Object, result, =, null, ;, try, {, Method, m]
[;, Object, result, =, null, ;, try, {, Method, m, =, c, ., getMethod, (, "clone", ,, (, Class, []
[., getClass, (, ), ;, Object, result, =, null, ;, try, {, Method, m, =, c, ., getMethod, (, "clone"]
[;, try, {, Method, m, =, c, ., getMethod, (, "clone", ,, (, Class, [, ], ), null, ), ;]
[;, if, (, Modifier, ., isPublic, (, m, ., getModifiers, (, ), ), ), {, try, {, result, =, m]
[., getMethod, (, "clone", ,, (, Class, [, ], ), null, ), ;, if, (, Modifier, ., isPublic, (, m]
[,, (, Class, [, ], ), null, ), ;, if, (, Modifier, ., isPublic, (, m, ., getModifiers, (, )]
[), ;, if, (, Modifier, ., isPublic, (, m, ., getModifiers, (, ), ), ), {, try, {, result, =]
[), ;, if, (, Modifier, ., isPublic, (, m, ., getModifiers, (, ), ), ), {, try, {, result, =]
[), {, try, {, result, =, m, ., invoke, (, object, ,, (, Object, [, ], ), null, ), ;]
[., isPublic, (, m, ., getModifiers, (, ), ), ), {, try, {, result, =, m, ., invoke, (, object]
[), ), {, try, {, result, =, m, ., invoke, (, object, ,, (, Object, [, ], ), null, )]
[., getModifiers, (, ), ), ), {, try, {, result, =, m, ., invoke, (, object, ,, (, Object, []
[=, m, ., invoke, (, object, ,, (, Object, [, ], ), null, ), ;, }, catch, (, Exception, e]
[;, }, catch, (, Exception, e, ), {, e, ., printStackTrace, (, ), ;, }, }, }, catch, (, NoSuchMethodException]
[., invoke, (, object, ,, (, Object, [, ], ), null, ), ;, }, catch, (, Exception, e, ), {]
[,, (, Object, [, ], ), null, ), ;, }, catch, (, Exception, e, ), {, e, ., printStackTrace, (]
[), ;, }, catch, (, Exception, e, ), {, e, ., printStackTrace, (, ), ;, }, }, }, catch, (]
[), ;, }, catch, (, Exception, e, ), {, e, ., printStackTrace, (, ), ;, }, }, }, catch, (]
[;, }, }, }, catch, (, NoSuchMethodException, e, ), {, result, =, object, ;, }, return, result, ;, }, private]
[., printStackTrace, (, ), ;, }, }, }, catch, (, NoSuchMethodException, e, ), {, result, =, object, ;, }, return]
[=, object, ;, }, return, result, ;, }, private, static, Collection, clone, (, Collection, list, ), throws, CloneNotSupportedException, {, Collection]
[;, }, return, result, ;, }, private, static, Collection, clone, (, Collection, list, ), throws, CloneNotSupportedException, {, Collection, result, =]
[;, }, private, static, Collection, clone, (, Collection, list, ), throws, CloneNotSupportedException, {, Collection, result, =, null, ;, if, (]
[;, if, (, list, !=, null, ), {, try, {, List, clone, =, (, List, ), list, ., getClass, (]
[), {, try, {, List, clone, =, (, List, ), list, ., getClass, (, ), ., newInstance, (, ), ;]
[!=, null, ), {, try, {, List, clone, =, (, List, ), list, ., getClass, (, ), ., newInstance, (]
[), {, try, {, List, clone, =, (, List, ), list, ., getClass, (, ), ., newInstance, (, ), ;]
[;, Iterator, iterator, =, list, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, clone]
[;, Iterator, iterator, =, list, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, clone]
[., newInstance, (, ), ;, Iterator, iterator, =, list, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (]
[., getClass, (, ), ., newInstance, (, ), ;, Iterator, iterator, =, list, ., iterator, (, ), ;, while, (]
[;, while, (, iterator, ., hasNext, (, ), ), {, clone, ., add, (, KeyToGroupMap, ., clone, (, iterator, .]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, clone, ., add, (, KeyToGroupMap, .]
[), {, clone, ., add, (, KeyToGroupMap, ., clone, (, iterator, ., next, (, ), ), ), ;, }, result]
[., hasNext, (, ), ), {, clone, ., add, (, KeyToGroupMap, ., clone, (, iterator, ., next, (, ), )]
[;, }, result, =, clone, ;, }, catch, (, Exception, e, ), {, throw, new, CloneNotSupportedException, (, "Exception.", ), ;]
[., add, (, KeyToGroupMap, ., clone, (, iterator, ., next, (, ), ), ), ;, }, result, =, clone, ;]
[), ;, }, result, =, clone, ;, }, catch, (, Exception, e, ), {, throw, new, CloneNotSupportedException, (, "Exception.", )]
[., clone, (, iterator, ., next, (, ), ), ), ;, }, result, =, clone, ;, }, catch, (, Exception]
[), ), ;, }, result, =, clone, ;, }, catch, (, Exception, e, ), {, throw, new, CloneNotSupportedException, (, "Exception."]
[., next, (, ), ), ), ;, }, result, =, clone, ;, }, catch, (, Exception, e, ), {, throw]
[=, clone, ;, }, catch, (, Exception, e, ), {, throw, new, CloneNotSupportedException, (, "Exception.", ), ;, }, }, return]
[;, }, catch, (, Exception, e, ), {, throw, new, CloneNotSupportedException, (, "Exception.", ), ;, }, }, return, result, ;]
[;, }, }, return, result, ;, }, }]
[), ;, }, }, return, result, ;, }, }]
[;, }, }]
