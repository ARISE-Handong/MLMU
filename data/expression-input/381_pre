[., internal, ., util, ., collections, ., Sets, ., newMockSafeHashSet, ;, public, class, MockScanner, {, private, final, MockUtil, mockUtil, =]
[final, Class, <, ?, >, clazz, ;, public, MockScanner, (, Object, instance, ,, Class, <, ?, >, clazz, ), {]
[final, Class, <, ?, >, clazz, ;, public, MockScanner, (, Object, instance, ,, Class, <, ?, >, clazz, ), {]
[>, clazz, ;, public, MockScanner, (, Object, instance, ,, Class, <, ?, >, clazz, ), {, this, ., instance, =]
[;, public, MockScanner, (, Object, instance, ,, Class, <, ?, >, clazz, ), {, this, ., instance, =, instance, ;]
[;, public, MockScanner, (, Object, instance, ,, Class, <, ?, >, clazz, ), {, this, ., instance, =, instance, ;]
[Object, instance, ,, Class, <, ?, >, clazz, ), {, this, ., instance, =, instance, ;, this, ., clazz, =]
[instance, ;, this, ., clazz, =, clazz, ;, }, public, void, addPreparedMocks, (, Set, <, Object, >, mocks, ), {]
[instance, ;, this, ., clazz, =, clazz, ;, }, public, void, addPreparedMocks, (, Set, <, Object, >, mocks, ), {]
[clazz, =, clazz, ;, }, public, void, addPreparedMocks, (, Set, <, Object, >, mocks, ), {, mocks, ., addAll, (]
[(, ), ), ;, }, private, Set, <, Object, >, scan, (, ), {, Set, <, Object, >, mocks, =]
[>, scan, (, ), {, Set, <, Object, >, mocks, =, newMockSafeHashSet, (, ), ;, for, (, Field, field, :]
[>, scan, (, ), {, Set, <, Object, >, mocks, =, newMockSafeHashSet, (, ), ;, for, (, Field, field, :]
[=, newMockSafeHashSet, (, ), ;, for, (, Field, field, :, clazz, ., getDeclaredFields, (, ), ), {, FieldReader, fieldReader, =]
[), ;, for, (, Field, field, :, clazz, ., getDeclaredFields, (, ), ), {, FieldReader, fieldReader, =, new, FieldReader, (]
[for, (, Field, field, :, clazz, ., getDeclaredFields, (, ), ), {, FieldReader, fieldReader, =, new, FieldReader, (, instance, ,]
[., getDeclaredFields, (, ), ), {, FieldReader, fieldReader, =, new, FieldReader, (, instance, ,, field, ), ;, Object, mockInstance, =]
[(, ), ), {, FieldReader, fieldReader, =, new, FieldReader, (, instance, ,, field, ), ;, Object, mockInstance, =, preparedMock, (]
[(, ), ), {, FieldReader, fieldReader, =, new, FieldReader, (, instance, ,, field, ), ;, Object, mockInstance, =, preparedMock, (]
[=, new, FieldReader, (, instance, ,, field, ), ;, Object, mockInstance, =, preparedMock, (, fieldReader, ., read, (, ), ,]
[,, field, ), ;, Object, mockInstance, =, preparedMock, (, fieldReader, ., read, (, ), ,, field, ), ;, if, (]
[,, field, ), ;, Object, mockInstance, =, preparedMock, (, fieldReader, ., read, (, ), ,, field, ), ;, if, (]
[), ;, Object, mockInstance, =, preparedMock, (, fieldReader, ., read, (, ), ,, field, ), ;, if, (, mockInstance, !=]
[mockInstance, =, preparedMock, (, fieldReader, ., read, (, ), ,, field, ), ;, if, (, mockInstance, !=, null, ), {]
[mockInstance, =, preparedMock, (, fieldReader, ., read, (, ), ,, field, ), ;, if, (, mockInstance, !=, null, ), {]
[fieldReader, ., read, (, ), ,, field, ), ;, if, (, mockInstance, !=, null, ), {, mocks, ., add, (]
[field, ), ;, if, (, mockInstance, !=, null, ), {, mocks, ., add, (, mockInstance, ), ;, }, }, return]
[;, }, }, return, mocks, ;, }, private, Object, preparedMock, (, Object, instance, ,, Field, field, ), {, if, (]
[}, return, mocks, ;, }, private, Object, preparedMock, (, Object, instance, ,, Field, field, ), {, if, (, isAnnotatedByMockOrSpy, (]
[private, Object, preparedMock, (, Object, instance, ,, Field, field, ), {, if, (, isAnnotatedByMockOrSpy, (, field, ), ), {, return]
[,, Field, field, ), {, if, (, isAnnotatedByMockOrSpy, (, field, ), ), {, return, instance, ;, }, else, if, (]
[field, ), {, if, (, isAnnotatedByMockOrSpy, (, field, ), ), {, return, instance, ;, }, else, if, (, isMockOrSpy, (]
[(, isAnnotatedByMockOrSpy, (, field, ), ), {, return, instance, ;, }, else, if, (, isMockOrSpy, (, instance, ), ), {]
[(, isAnnotatedByMockOrSpy, (, field, ), ), {, return, instance, ;, }, else, if, (, isMockOrSpy, (, instance, ), ), {]
[), ), {, return, instance, ;, }, else, if, (, isMockOrSpy, (, instance, ), ), {, mockUtil, ., maybeRedefineMockName, (]
[{, return, instance, ;, }, else, if, (, isMockOrSpy, (, instance, ), ), {, mockUtil, ., maybeRedefineMockName, (, instance, ,]
[{, return, instance, ;, }, else, if, (, isMockOrSpy, (, instance, ), ), {, mockUtil, ., maybeRedefineMockName, (, instance, ,]
[isMockOrSpy, (, instance, ), ), {, mockUtil, ., maybeRedefineMockName, (, instance, ,, field, ., getName, (, ), ), ;, return]
[), {, mockUtil, ., maybeRedefineMockName, (, instance, ,, field, ., getName, (, ), ), ;, return, instance, ;, }, return]
[), ), ;, return, instance, ;, }, return, null, ;, }, private, boolean, isAnnotatedByMockOrSpy, (, Field, field, ), {, return]
[), ), ;, return, instance, ;, }, return, null, ;, }, private, boolean, isAnnotatedByMockOrSpy, (, Field, field, ), {, return]
[), ), ;, return, instance, ;, }, return, null, ;, }, private, boolean, isAnnotatedByMockOrSpy, (, Field, field, ), {, return]
[), ), ;, return, instance, ;, }, return, null, ;, }, private, boolean, isAnnotatedByMockOrSpy, (, Field, field, ), {, return]
[;, return, instance, ;, }, return, null, ;, }, private, boolean, isAnnotatedByMockOrSpy, (, Field, field, ), {, return, null, !=]
[;, return, instance, ;, }, return, null, ;, }, private, boolean, isAnnotatedByMockOrSpy, (, Field, field, ), {, return, null, !=]
[}, return, null, ;, }, private, boolean, isAnnotatedByMockOrSpy, (, Field, field, ), {, return, null, !=, field, ., getAnnotation, (]
[private, boolean, isAnnotatedByMockOrSpy, (, Field, field, ), {, return, null, !=, field, ., getAnnotation, (, Spy, ., class, ), ||]
[private, boolean, isAnnotatedByMockOrSpy, (, Field, field, ), {, return, null, !=, field, ., getAnnotation, (, Spy, ., class, ), ||]
[isAnnotatedByMockOrSpy, (, Field, field, ), {, return, null, !=, field, ., getAnnotation, (, Spy, ., class, ), ||, null, !=]
[isAnnotatedByMockOrSpy, (, Field, field, ), {, return, null, !=, field, ., getAnnotation, (, Spy, ., class, ), ||, null, !=]
[), {, return, null, !=, field, ., getAnnotation, (, Spy, ., class, ), ||, null, !=, field, ., getAnnotation, (]
[field, ., getAnnotation, (, Spy, ., class, ), ||, null, !=, field, ., getAnnotation, (, Mock, ., class, ), ||]
[field, ., getAnnotation, (, Spy, ., class, ), ||, null, !=, field, ., getAnnotation, (, Mock, ., class, ), ||]
[getAnnotation, (, Spy, ., class, ), ||, null, !=, field, ., getAnnotation, (, Mock, ., class, ), ||, null, !=]
[getAnnotation, (, Spy, ., class, ), ||, null, !=, field, ., getAnnotation, (, Mock, ., class, ), ||, null, !=]
[class, ), ||, null, !=, field, ., getAnnotation, (, Mock, ., class, ), ||, null, !=, field, ., getAnnotation, (]
[., getAnnotation, (, MockitoAnnotations, ., Mock, ., class, ), ;, }, private, boolean, isMockOrSpy, (, Object, instance, ), {, return]
[., getAnnotation, (, MockitoAnnotations, ., Mock, ., class, ), ;, }, private, boolean, isMockOrSpy, (, Object, instance, ), {, return]
[., getAnnotation, (, MockitoAnnotations, ., Mock, ., class, ), ;, }, private, boolean, isMockOrSpy, (, Object, instance, ), {, return]
[., Mock, ., class, ), ;, }, private, boolean, isMockOrSpy, (, Object, instance, ), {, return, mockUtil, ., isMock, (]
[class, ), ;, }, private, boolean, isMockOrSpy, (, Object, instance, ), {, return, mockUtil, ., isMock, (, instance, ), ||]
[class, ), ;, }, private, boolean, isMockOrSpy, (, Object, instance, ), {, return, mockUtil, ., isMock, (, instance, ), ||]
[private, boolean, isMockOrSpy, (, Object, instance, ), {, return, mockUtil, ., isMock, (, instance, ), ||, mockUtil, ., isSpy, (]
