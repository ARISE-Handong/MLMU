[;, private, ConvergenceChecker, <, PointVectorValuePair, >, checker, ;, private, double, [, ], target, ;, private, RealMatrix, weightMatrix, ;, @, Deprecated]
[), ;, }, protected, BaseAbstractMultivariateVectorOptimizer, (, ConvergenceChecker, <, PointVectorValuePair, >, checker, ), {, this, ., checker, =, checker, ;, }]
[=, checker, ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int]
[., checker, =, checker, ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }]
[;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (]
[;, }, public, int, getEvaluations, (, ), {, return, evaluations, ., getCount, (, ), ;, }, public, ConvergenceChecker, <, PointVectorValuePair]
[., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (, ), {, return, evaluations, ., getCount, (, ), ;, }]
[;, }, public, ConvergenceChecker, <, PointVectorValuePair, >, getConvergenceChecker, (, ), {, return, checker, ;, }, protected, double, [, ], computeObjectiveValue]
[., getCount, (, ), ;, }, public, ConvergenceChecker, <, PointVectorValuePair, >, getConvergenceChecker, (, ), {, return, checker, ;, }, protected]
[;, }, protected, double, [, ], computeObjectiveValue, (, double, [, ], point, ), {, try, {, evaluations, ., incrementCount, (]
[;, }, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (, e, ., getMax, (, ), ), ;, }]
[., incrementCount, (, ), ;, }, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (, e, ., getMax, (]
[;, }, return, function, ., value, (, point, ), ;, }, @, Deprecated, public, PointVectorValuePair, optimize, (, int, maxEval, ,]
[), ;, }, return, function, ., value, (, point, ), ;, }, @, Deprecated, public, PointVectorValuePair, optimize, (, int, maxEval]
[., getMax, (, ), ), ;, }, return, function, ., value, (, point, ), ;, }, @, Deprecated, public, PointVectorValuePair]
[;, }, @, Deprecated, public, PointVectorValuePair, optimize, (, int, maxEval, ,, FUNC, f, ,, double, [, ], t, ,, double]
[., value, (, point, ), ;, }, @, Deprecated, public, PointVectorValuePair, optimize, (, int, maxEval, ,, FUNC, f, ,, double]
[), ;, }, @, Deprecated, public, PointVectorValuePair, optimize, (, int, maxEval, ,, FUNC, f, ,, double, [, ], t, ,]
[;, }, protected, PointVectorValuePair, optimize, (, int, maxEval, ,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException]
[,, f, ,, t, ,, w, ,, startPoint, ), ;, }, protected, PointVectorValuePair, optimize, (, int, maxEval, ,, FUNC, f]
[,, t, ,, w, ,, startPoint, ), ;, }, protected, PointVectorValuePair, optimize, (, int, maxEval, ,, FUNC, f, ,, OptimizationData]
[,, w, ,, startPoint, ), ;, }, protected, PointVectorValuePair, optimize, (, int, maxEval, ,, FUNC, f, ,, OptimizationData, ..., optData]
[,, startPoint, ), ;, }, protected, PointVectorValuePair, optimize, (, int, maxEval, ,, FUNC, f, ,, OptimizationData, ..., optData, ), throws]
[), ;, }, protected, PointVectorValuePair, optimize, (, int, maxEval, ,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,]
[;, }, @, Deprecated, protected, PointVectorValuePair, optimizeInternal, (, final, int, maxEval, ,, final, FUNC, f, ,, final, double, [, ]]
[,, f, ,, optData, ), ;, }, @, Deprecated, protected, PointVectorValuePair, optimizeInternal, (, final, int, maxEval, ,, final, FUNC, f]
[,, optData, ), ;, }, @, Deprecated, protected, PointVectorValuePair, optimizeInternal, (, final, int, maxEval, ,, final, FUNC, f, ,, final]
[), ;, }, @, Deprecated, protected, PointVectorValuePair, optimizeInternal, (, final, int, maxEval, ,, final, FUNC, f, ,, final, double, []
[), {, throw, new, NullArgumentException, (, ), ;, }, if, (, t, ==, null, ), {, throw, new, NullArgumentException, (]
[==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, t, ==, null, ), {, throw, new]
[), {, throw, new, NullArgumentException, (, ), ;, }, if, (, t, ==, null, ), {, throw, new, NullArgumentException, (]
[;, }, if, (, t, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, w, ==]
[), {, throw, new, NullArgumentException, (, ), ;, }, if, (, w, ==, null, ), {, throw, new, NullArgumentException, (]
[==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, w, ==, null, ), {, throw, new]
[), {, throw, new, NullArgumentException, (, ), ;, }, if, (, w, ==, null, ), {, throw, new, NullArgumentException, (]
[;, }, if, (, w, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, startPoint, ==]
[), {, throw, new, NullArgumentException, (, ), ;, }, if, (, startPoint, ==, null, ), {, throw, new, NullArgumentException, (]
[==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, startPoint, ==, null, ), {, throw, new]
[), {, throw, new, NullArgumentException, (, ), ;, }, if, (, startPoint, ==, null, ), {, throw, new, NullArgumentException, (]
[;, }, if, (, startPoint, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, t, .]
[), {, throw, new, NullArgumentException, (, ), ;, }, if, (, t, ., length, !=, w, ., length, ), {]
[==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, t, ., length, !=, w, ., length]
[), {, throw, new, NullArgumentException, (, ), ;, }, if, (, t, ., length, !=, w, ., length, ), {]
[;, }, if, (, t, ., length, !=, w, ., length, ), {, throw, new, DimensionMismatchException, (, t, ., length]
[), {, throw, new, DimensionMismatchException, (, t, ., length, ,, w, ., length, ), ;, }, return, optimizeInternal, (, maxEval]
[!=, w, ., length, ), {, throw, new, DimensionMismatchException, (, t, ., length, ,, w, ., length, ), ;, }]
[., length, !=, w, ., length, ), {, throw, new, DimensionMismatchException, (, t, ., length, ,, w, ., length, )]
[), {, throw, new, DimensionMismatchException, (, t, ., length, ,, w, ., length, ), ;, }, return, optimizeInternal, (, maxEval]
[., length, ), {, throw, new, DimensionMismatchException, (, t, ., length, ,, w, ., length, ), ;, }, return, optimizeInternal]
[;, }, return, optimizeInternal, (, maxEval, ,, f, ,, new, Target, (, t, ), ,, new, Weight, (, w, )]
[,, w, ., length, ), ;, }, return, optimizeInternal, (, maxEval, ,, f, ,, new, Target, (, t, ), ,]
[., length, ,, w, ., length, ), ;, }, return, optimizeInternal, (, maxEval, ,, f, ,, new, Target, (, t]
[), ;, }, return, optimizeInternal, (, maxEval, ,, f, ,, new, Target, (, t, ), ,, new, Weight, (, w]
[., length, ), ;, }, return, optimizeInternal, (, maxEval, ,, f, ,, new, Target, (, t, ), ,, new, Weight]
[;, }, protected, PointVectorValuePair, optimizeInternal, (, int, maxEval, ,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException]
[,, f, ,, new, Target, (, t, ), ,, new, Weight, (, w, ), ,, new, InitialGuess, (, startPoint, )]
[,, new, Target, (, t, ), ,, new, Weight, (, w, ), ,, new, InitialGuess, (, startPoint, ), ), ;]
[,, new, Weight, (, w, ), ,, new, InitialGuess, (, startPoint, ), ), ;, }, protected, PointVectorValuePair, optimizeInternal, (, int]
[), ,, new, Weight, (, w, ), ,, new, InitialGuess, (, startPoint, ), ), ;, }, protected, PointVectorValuePair, optimizeInternal, (]
[,, new, InitialGuess, (, startPoint, ), ), ;, }, protected, PointVectorValuePair, optimizeInternal, (, int, maxEval, ,, FUNC, f, ,, OptimizationData]
[), ,, new, InitialGuess, (, startPoint, ), ), ;, }, protected, PointVectorValuePair, optimizeInternal, (, int, maxEval, ,, FUNC, f, ,]
[), ;, }, protected, PointVectorValuePair, optimizeInternal, (, int, maxEval, ,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,]
[), ), ;, }, protected, PointVectorValuePair, optimizeInternal, (, int, maxEval, ,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException]
[;, evaluations, ., resetCount, (, ), ;, function, =, f, ;, parseOptimizationData, (, optData, ), ;, checkParameters, (, ), ;]
[., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;, function, =, f, ;, parseOptimizationData, (, optData, )]
[), ;, evaluations, ., resetCount, (, ), ;, function, =, f, ;, parseOptimizationData, (, optData, ), ;, checkParameters, (, )]
[;, function, =, f, ;, parseOptimizationData, (, optData, ), ;, checkParameters, (, ), ;, setUp, (, ), ;, return, doOptimize]
[., resetCount, (, ), ;, function, =, f, ;, parseOptimizationData, (, optData, ), ;, checkParameters, (, ), ;, setUp, (]
[=, f, ;, parseOptimizationData, (, optData, ), ;, checkParameters, (, ), ;, setUp, (, ), ;, return, doOptimize, (, )]
[;, parseOptimizationData, (, optData, ), ;, checkParameters, (, ), ;, setUp, (, ), ;, return, doOptimize, (, ), ;, }]
[;, checkParameters, (, ), ;, setUp, (, ), ;, return, doOptimize, (, ), ;, }, public, double, [, ], getStartPoint]
[), ;, checkParameters, (, ), ;, setUp, (, ), ;, return, doOptimize, (, ), ;, }, public, double, [, ]]
[;, setUp, (, ), ;, return, doOptimize, (, ), ;, }, public, double, [, ], getStartPoint, (, ), {, return]
[;, return, doOptimize, (, ), ;, }, public, double, [, ], getStartPoint, (, ), {, return, start, ., clone, (]
[;, }, public, double, [, ], getStartPoint, (, ), {, return, start, ., clone, (, ), ;, }, public, RealMatrix]
[;, }, public, RealMatrix, getWeight, (, ), {, return, weightMatrix, ., copy, (, ), ;, }, public, double, [, ]]
[., clone, (, ), ;, }, public, RealMatrix, getWeight, (, ), {, return, weightMatrix, ., copy, (, ), ;, }]
[;, }, public, double, [, ], getTarget, (, ), {, return, target, ., clone, (, ), ;, }, protected, FUNC]
[., copy, (, ), ;, }, public, double, [, ], getTarget, (, ), {, return, target, ., clone, (, )]
[;, }, protected, FUNC, getObjectiveFunction, (, ), {, return, function, ;, }, protected, abstract, PointVectorValuePair, doOptimize, (, ), ;, @]
[., clone, (, ), ;, }, protected, FUNC, getObjectiveFunction, (, ), {, return, function, ;, }, protected, abstract, PointVectorValuePair, doOptimize]
[;, }, protected, abstract, PointVectorValuePair, doOptimize, (, ), ;, @, Deprecated, protected, double, [, ], getTargetRef, (, ), {, return]
[;, }, @, Deprecated, protected, double, [, ], getWeightRef, (, ), {, return, weight, ;, }, protected, void, setUp, (]
[;, }, protected, void, setUp, (, ), {, final, int, dim, =, target, ., length, ;, weight, =, new, double]
[;, weight, =, new, double, [, dim, ], ;, for, (, int, i, =, 0, ;, i, <, dim, ;]
[., length, ;, weight, =, new, double, [, dim, ], ;, for, (, int, i, =, 0, ;, i, <]
[=, new, double, [, dim, ], ;, for, (, int, i, =, 0, ;, i, <, dim, ;, i, ++]
[;, for, (, int, i, =, 0, ;, i, <, dim, ;, i, ++, ), {, weight, [, i, ]]
[], ;, for, (, int, i, =, 0, ;, i, <, dim, ;, i, ++, ), {, weight, [, i]
[;, i, <, dim, ;, i, ++, ), {, weight, [, i, ], =, weightMatrix, ., getEntry, (, i, ,]
[;, i, ++, ), {, weight, [, i, ], =, weightMatrix, ., getEntry, (, i, ,, i, ), ;, }]
[<, dim, ;, i, ++, ), {, weight, [, i, ], =, weightMatrix, ., getEntry, (, i, ,, i, )]
[;, i, ++, ), {, weight, [, i, ], =, weightMatrix, ., getEntry, (, i, ,, i, ), ;, }]
[), {, weight, [, i, ], =, weightMatrix, ., getEntry, (, i, ,, i, ), ;, }, }, private, void]
[++, ), {, weight, [, i, ], =, weightMatrix, ., getEntry, (, i, ,, i, ), ;, }, }, private]
[=, weightMatrix, ., getEntry, (, i, ,, i, ), ;, }, }, private, void, parseOptimizationData, (, OptimizationData, ..., optData, )]
[[, i, ], =, weightMatrix, ., getEntry, (, i, ,, i, ), ;, }, }, private, void, parseOptimizationData, (, OptimizationData]
[], =, weightMatrix, ., getEntry, (, i, ,, i, ), ;, }, }, private, void, parseOptimizationData, (, OptimizationData, ..., optData]
[;, }, }, private, void, parseOptimizationData, (, OptimizationData, ..., optData, ), {, for, (, OptimizationData, data, :, optData, ), {]
[., getEntry, (, i, ,, i, ), ;, }, }, private, void, parseOptimizationData, (, OptimizationData, ..., optData, ), {, for]
[,, i, ), ;, }, }, private, void, parseOptimizationData, (, OptimizationData, ..., optData, ), {, for, (, OptimizationData, data, :]
[), ;, }, }, private, void, parseOptimizationData, (, OptimizationData, ..., optData, ), {, for, (, OptimizationData, data, :, optData, )]
[), {, if, (, data, instanceof, Target, ), {, target, =, (, (, Target, ), data, ), ., getTarget, (]
[), {, target, =, (, (, Target, ), data, ), ., getTarget, (, ), ;, continue, ;, }, if, (]
[instanceof, Target, ), {, target, =, (, (, Target, ), data, ), ., getTarget, (, ), ;, continue, ;, }]
[=, (, (, Target, ), data, ), ., getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight]
[;, continue, ;, }, if, (, data, instanceof, Weight, ), {, weightMatrix, =, (, (, Weight, ), data, ), .]
[., getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight, ), {, weightMatrix, =, (, (, Weight]
[), ., getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight, ), {, weightMatrix, =, (, (]
[), ., getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight, ), {, weightMatrix, =, (, (]
[), {, weightMatrix, =, (, (, Weight, ), data, ), ., getWeight, (, ), ;, continue, ;, }, if, (]
[instanceof, Weight, ), {, weightMatrix, =, (, (, Weight, ), data, ), ., getWeight, (, ), ;, continue, ;, }]
[=, (, (, Weight, ), data, ), ., getWeight, (, ), ;, continue, ;, }, if, (, data, instanceof, InitialGuess]
[;, continue, ;, }, if, (, data, instanceof, InitialGuess, ), {, start, =, (, (, InitialGuess, ), data, ), .]
[., getWeight, (, ), ;, continue, ;, }, if, (, data, instanceof, InitialGuess, ), {, start, =, (, (, InitialGuess]
[), ., getWeight, (, ), ;, continue, ;, }, if, (, data, instanceof, InitialGuess, ), {, start, =, (, (]
[), ., getWeight, (, ), ;, continue, ;, }, if, (, data, instanceof, InitialGuess, ), {, start, =, (, (]
[), {, start, =, (, (, InitialGuess, ), data, ), ., getInitialGuess, (, ), ;, continue, ;, }, }, }]
[instanceof, InitialGuess, ), {, start, =, (, (, InitialGuess, ), data, ), ., getInitialGuess, (, ), ;, continue, ;, }]
[=, (, (, InitialGuess, ), data, ), ., getInitialGuess, (, ), ;, continue, ;, }, }, }, private, void, checkParameters]
[;, continue, ;, }, }, }, private, void, checkParameters, (, ), {, if, (, target, ., length, !=, weightMatrix, .]
[., getInitialGuess, (, ), ;, continue, ;, }, }, }, private, void, checkParameters, (, ), {, if, (, target, .]
[), ., getInitialGuess, (, ), ;, continue, ;, }, }, }, private, void, checkParameters, (, ), {, if, (, target]
[), ., getInitialGuess, (, ), ;, continue, ;, }, }, }, private, void, checkParameters, (, ), {, if, (, target]
[), {, throw, new, DimensionMismatchException, (, target, ., length, ,, weightMatrix, ., getColumnDimension, (, ), ), ;, }, }, }]
[!=, weightMatrix, ., getColumnDimension, (, ), ), {, throw, new, DimensionMismatchException, (, target, ., length, ,, weightMatrix, ., getColumnDimension, (]
[., length, !=, weightMatrix, ., getColumnDimension, (, ), ), {, throw, new, DimensionMismatchException, (, target, ., length, ,, weightMatrix, .]
[), {, throw, new, DimensionMismatchException, (, target, ., length, ,, weightMatrix, ., getColumnDimension, (, ), ), ;, }, }, }]
[., getColumnDimension, (, ), ), {, throw, new, DimensionMismatchException, (, target, ., length, ,, weightMatrix, ., getColumnDimension, (, ), )]
[;, }, }, }]
[,, weightMatrix, ., getColumnDimension, (, ), ), ;, }, }, }]
[., length, ,, weightMatrix, ., getColumnDimension, (, ), ), ;, }, }, }]
[), ;, }, }, }]
[., getColumnDimension, (, ), ), ;, }, }, }]
