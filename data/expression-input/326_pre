[apache, ., commons, ., math3, ., exception, ., NumberIsTooSmallException, ;, public, class, FixedGenerationCount, implements, StoppingCondition, {, private, int, numGenerations, =]
[=, 0, ;, private, final, int, maxGenerations, ;, public, FixedGenerationCount, (, final, int, maxGenerations, ), throws, NumberIsTooSmallException, {, if, (]
[=, 0, ;, private, final, int, maxGenerations, ;, public, FixedGenerationCount, (, final, int, maxGenerations, ), throws, NumberIsTooSmallException, {, if, (]
[;, private, final, int, maxGenerations, ;, public, FixedGenerationCount, (, final, int, maxGenerations, ), throws, NumberIsTooSmallException, {, if, (, maxGenerations, <=]
[maxGenerations, ;, public, FixedGenerationCount, (, final, int, maxGenerations, ), throws, NumberIsTooSmallException, {, if, (, maxGenerations, <=, 0, ), {, throw]
[FixedGenerationCount, (, final, int, maxGenerations, ), throws, NumberIsTooSmallException, {, if, (, maxGenerations, <=, 0, ), {, throw, new, NumberIsTooSmallException, (]
[final, int, maxGenerations, ), throws, NumberIsTooSmallException, {, if, (, maxGenerations, <=, 0, ), {, throw, new, NumberIsTooSmallException, (, maxGenerations, ,]
[maxGenerations, ), throws, NumberIsTooSmallException, {, if, (, maxGenerations, <=, 0, ), {, throw, new, NumberIsTooSmallException, (, maxGenerations, ,, 1, ,]
[{, if, (, maxGenerations, <=, 0, ), {, throw, new, NumberIsTooSmallException, (, maxGenerations, ,, 1, ,, true, ), ;, }]
[{, if, (, maxGenerations, <=, 0, ), {, throw, new, NumberIsTooSmallException, (, maxGenerations, ,, 1, ,, true, ), ;, }]
[<=, 0, ), {, throw, new, NumberIsTooSmallException, (, maxGenerations, ,, 1, ,, true, ), ;, }, this, ., maxGenerations, =]
[;, }, this, ., maxGenerations, =, maxGenerations, ;, }, public, boolean, isSatisfied, (, final, Population, population, ), {, if, (]
[;, }, this, ., maxGenerations, =, maxGenerations, ;, }, public, boolean, isSatisfied, (, final, Population, population, ), {, if, (]
[;, }, this, ., maxGenerations, =, maxGenerations, ;, }, public, boolean, isSatisfied, (, final, Population, population, ), {, if, (]
[maxGenerations, =, maxGenerations, ;, }, public, boolean, isSatisfied, (, final, Population, population, ), {, if, (, this, ., numGenerations, <]
[maxGenerations, =, maxGenerations, ;, }, public, boolean, isSatisfied, (, final, Population, population, ), {, if, (, this, ., numGenerations, <]
[public, boolean, isSatisfied, (, final, Population, population, ), {, if, (, this, ., numGenerations, <, this, ., maxGenerations, ), {]
[public, boolean, isSatisfied, (, final, Population, population, ), {, if, (, this, ., numGenerations, <, this, ., maxGenerations, ), {]
[final, Population, population, ), {, if, (, this, ., numGenerations, <, this, ., maxGenerations, ), {, numGenerations, ++, ;, return]
[{, if, (, this, ., numGenerations, <, this, ., maxGenerations, ), {, numGenerations, ++, ;, return, false, ;, }, return]
[), {, numGenerations, ++, ;, return, false, ;, }, return, true, ;, }, public, int, getNumGenerations, (, ), {, return]
