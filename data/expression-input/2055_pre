[SeriesChangeEvent, ;, public, class, DefaultTableXYDataset, extends, AbstractIntervalXYDataset, implements, TableXYDataset, ,, IntervalXYDataset, ,, DomainInfo, ,, PublicCloneable, {, private, List, data, =]
[AbstractIntervalXYDataset, implements, TableXYDataset, ,, IntervalXYDataset, ,, DomainInfo, ,, PublicCloneable, {, private, List, data, =, null, ;, private, HashSet, xPoints, =]
[DomainInfo, ,, PublicCloneable, {, private, List, data, =, null, ;, private, HashSet, xPoints, =, null, ;, private, boolean, propagateEvents, =]
[data, =, null, ;, private, HashSet, xPoints, =, null, ;, private, boolean, propagateEvents, =, true, ;, private, boolean, autoPrune, =]
[=, true, ;, private, boolean, autoPrune, =, false, ;, private, IntervalXYDelegate, intervalDelegate, ;, public, DefaultTableXYDataset, (, ), {, this, (]
[intervalDelegate, ;, public, DefaultTableXYDataset, (, ), {, this, (, false, ), ;, }, public, DefaultTableXYDataset, (, boolean, autoPrune, ), {]
[intervalDelegate, ;, public, DefaultTableXYDataset, (, ), {, this, (, false, ), ;, }, public, DefaultTableXYDataset, (, boolean, autoPrune, ), {]
[(, ), {, this, (, false, ), ;, }, public, DefaultTableXYDataset, (, boolean, autoPrune, ), {, this, ., autoPrune, =]
[{, this, (, false, ), ;, }, public, DefaultTableXYDataset, (, boolean, autoPrune, ), {, this, ., autoPrune, =, autoPrune, ;]
[{, this, (, false, ), ;, }, public, DefaultTableXYDataset, (, boolean, autoPrune, ), {, this, ., autoPrune, =, autoPrune, ;]
[), ;, }, public, DefaultTableXYDataset, (, boolean, autoPrune, ), {, this, ., autoPrune, =, autoPrune, ;, this, ., data, =]
[(, boolean, autoPrune, ), {, this, ., autoPrune, =, autoPrune, ;, this, ., data, =, new, ArrayList, (, ), ;]
[(, boolean, autoPrune, ), {, this, ., autoPrune, =, autoPrune, ;, this, ., data, =, new, ArrayList, (, ), ;]
[{, this, ., autoPrune, =, autoPrune, ;, this, ., data, =, new, ArrayList, (, ), ;, this, ., xPoints, =]
[autoPrune, ;, this, ., data, =, new, ArrayList, (, ), ;, this, ., xPoints, =, new, HashSet, (, ), ;]
[autoPrune, ;, this, ., data, =, new, ArrayList, (, ), ;, this, ., xPoints, =, new, HashSet, (, ), ;]
[data, =, new, ArrayList, (, ), ;, this, ., xPoints, =, new, HashSet, (, ), ;, this, ., intervalDelegate, =]
[ArrayList, (, ), ;, this, ., xPoints, =, new, HashSet, (, ), ;, this, ., intervalDelegate, =, new, IntervalXYDelegate, (]
[), ;, this, ., xPoints, =, new, HashSet, (, ), ;, this, ., intervalDelegate, =, new, IntervalXYDelegate, (, this, ,]
[., xPoints, =, new, HashSet, (, ), ;, this, ., intervalDelegate, =, new, IntervalXYDelegate, (, this, ,, false, ), ;]
[=, new, HashSet, (, ), ;, this, ., intervalDelegate, =, new, IntervalXYDelegate, (, this, ,, false, ), ;, addChangeListener, (]
[=, new, HashSet, (, ), ;, this, ., intervalDelegate, =, new, IntervalXYDelegate, (, this, ,, false, ), ;, addChangeListener, (]
[this, ,, false, ), ;, addChangeListener, (, this, ., intervalDelegate, ), ;, }, public, boolean, isAutoPrune, (, ), {, return]
[this, ,, false, ), ;, addChangeListener, (, this, ., intervalDelegate, ), ;, }, public, boolean, isAutoPrune, (, ), {, return]
[isAutoPrune, (, ), {, return, this, ., autoPrune, ;, }, public, void, addSeries, (, XYSeries, series, ), {, if, (]
[isAutoPrune, (, ), {, return, this, ., autoPrune, ;, }, public, void, addSeries, (, XYSeries, series, ), {, if, (]
[), {, return, this, ., autoPrune, ;, }, public, void, addSeries, (, XYSeries, series, ), {, if, (, series, ==]
[., autoPrune, ;, }, public, void, addSeries, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw]
[}, public, void, addSeries, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (]
[series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (]
[series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, series, ., getAllowDuplicateXValues, (, ), ), {, throw]
[new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, series, ., getAllowDuplicateXValues, (, ), ), {, throw, new, IllegalArgumentException, (]
[new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, series, ., getAllowDuplicateXValues, (, ), ), {, throw, new, IllegalArgumentException, (]
[(, "Null 'series' argument.", ), ;, }, if, (, series, ., getAllowDuplicateXValues, (, ), ), {, throw, new, IllegalArgumentException, (, "Cannot accept XYSeries that allow duplicate values. ", +]
[}, if, (, series, ., getAllowDuplicateXValues, (, ), ), {, throw, new, IllegalArgumentException, (, "Cannot accept XYSeries that allow duplicate values. ", +, "Use XYSeries(seriesName, <sort>, false) constructor.", ), ;, }]
[(, series, ., getAllowDuplicateXValues, (, ), ), {, throw, new, IllegalArgumentException, (, "Cannot accept XYSeries that allow duplicate values. ", +, "Use XYSeries(seriesName, <sort>, false) constructor.", ), ;, }, updateXPoints, (]
[getAllowDuplicateXValues, (, ), ), {, throw, new, IllegalArgumentException, (, "Cannot accept XYSeries that allow duplicate values. ", +, "Use XYSeries(seriesName, <sort>, false) constructor.", ), ;, }, updateXPoints, (, series, ), ;]
[getAllowDuplicateXValues, (, ), ), {, throw, new, IllegalArgumentException, (, "Cannot accept XYSeries that allow duplicate values. ", +, "Use XYSeries(seriesName, <sort>, false) constructor.", ), ;, }, updateXPoints, (, series, ), ;]
[getAllowDuplicateXValues, (, ), ), {, throw, new, IllegalArgumentException, (, "Cannot accept XYSeries that allow duplicate values. ", +, "Use XYSeries(seriesName, <sort>, false) constructor.", ), ;, }, updateXPoints, (, series, ), ;]
[new, IllegalArgumentException, (, "Cannot accept XYSeries that allow duplicate values. ", +, "Use XYSeries(seriesName, <sort>, false) constructor.", ), ;, }, updateXPoints, (, series, ), ;, this, ., data, ., add, (]
["Cannot accept XYSeries that allow duplicate values. ", +, "Use XYSeries(seriesName, <sort>, false) constructor.", ), ;, }, updateXPoints, (, series, ), ;, this, ., data, ., add, (, series, ), ;]
["Cannot accept XYSeries that allow duplicate values. ", +, "Use XYSeries(seriesName, <sort>, false) constructor.", ), ;, }, updateXPoints, (, series, ), ;, this, ., data, ., add, (, series, ), ;]
[;, }, updateXPoints, (, series, ), ;, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (]
[(, series, ), ;, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;]
[), ;, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged, (]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, private, void, updateXPoints, (, XYSeries, series, ), {, if, (]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, private, void, updateXPoints, (, XYSeries, series, ), {, if, (]
[(, new, DatasetChangeInfo, (, ), ), ;, }, private, void, updateXPoints, (, XYSeries, series, ), {, if, (, series, ==]
[), ), ;, }, private, void, updateXPoints, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw]
[}, private, void, updateXPoints, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' not permitted.", ), ;, }, HashSet, seriesXPoints, =]
[{, throw, new, IllegalArgumentException, (, "Null 'series' not permitted.", ), ;, }, HashSet, seriesXPoints, =, new, HashSet, (, ), ;, boolean, savedState, =]
[{, throw, new, IllegalArgumentException, (, "Null 'series' not permitted.", ), ;, }, HashSet, seriesXPoints, =, new, HashSet, (, ), ;, boolean, savedState, =]
[(, "Null 'series' not permitted.", ), ;, }, HashSet, seriesXPoints, =, new, HashSet, (, ), ;, boolean, savedState, =, this, ., propagateEvents, ;]
[(, "Null 'series' not permitted.", ), ;, }, HashSet, seriesXPoints, =, new, HashSet, (, ), ;, boolean, savedState, =, this, ., propagateEvents, ;]
[}, HashSet, seriesXPoints, =, new, HashSet, (, ), ;, boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents, =]
[), ;, boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, itemNo, =]
[boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, itemNo, =, 0, ;]
[boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, itemNo, =, 0, ;]
[=, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, itemNo, =, 0, ;, itemNo, <]
[=, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, itemNo, =, 0, ;, itemNo, <]
[., propagateEvents, =, false, ;, for, (, int, itemNo, =, 0, ;, itemNo, <, series, ., getItemCount, (, ), ;]
[., propagateEvents, =, false, ;, for, (, int, itemNo, =, 0, ;, itemNo, <, series, ., getItemCount, (, ), ;]
[int, itemNo, =, 0, ;, itemNo, <, series, ., getItemCount, (, ), ;, itemNo, ++, ), {, Number, xValue, =]
[int, itemNo, =, 0, ;, itemNo, <, series, ., getItemCount, (, ), ;, itemNo, ++, ), {, Number, xValue, =]
[;, itemNo, <, series, ., getItemCount, (, ), ;, itemNo, ++, ), {, Number, xValue, =, series, ., getX, (]
[series, ., getItemCount, (, ), ;, itemNo, ++, ), {, Number, xValue, =, series, ., getX, (, itemNo, ), ;]
[series, ., getItemCount, (, ), ;, itemNo, ++, ), {, Number, xValue, =, series, ., getX, (, itemNo, ), ;]
[), ;, itemNo, ++, ), {, Number, xValue, =, series, ., getX, (, itemNo, ), ;, seriesXPoints, ., add, (]
[{, Number, xValue, =, series, ., getX, (, itemNo, ), ;, seriesXPoints, ., add, (, xValue, ), ;, if, (]
[Number, xValue, =, series, ., getX, (, itemNo, ), ;, seriesXPoints, ., add, (, xValue, ), ;, if, (, !]
[Number, xValue, =, series, ., getX, (, itemNo, ), ;, seriesXPoints, ., add, (, xValue, ), ;, if, (, !]
[Number, xValue, =, series, ., getX, (, itemNo, ), ;, seriesXPoints, ., add, (, xValue, ), ;, if, (, !]
[(, itemNo, ), ;, seriesXPoints, ., add, (, xValue, ), ;, if, (, !, this, ., xPoints, ., contains, (]
[seriesXPoints, ., add, (, xValue, ), ;, if, (, !, this, ., xPoints, ., contains, (, xValue, ), ), {]
[seriesXPoints, ., add, (, xValue, ), ;, if, (, !, this, ., xPoints, ., contains, (, xValue, ), ), {]
[seriesXPoints, ., add, (, xValue, ), ;, if, (, !, this, ., xPoints, ., contains, (, xValue, ), ), {]
[;, if, (, !, this, ., xPoints, ., contains, (, xValue, ), ), {, this, ., xPoints, ., add, (]
[xPoints, ., contains, (, xValue, ), ), {, this, ., xPoints, ., add, (, xValue, ), ;, int, seriesCount, =]
[xPoints, ., contains, (, xValue, ), ), {, this, ., xPoints, ., add, (, xValue, ), ;, int, seriesCount, =]
[xPoints, ., contains, (, xValue, ), ), {, this, ., xPoints, ., add, (, xValue, ), ;, int, seriesCount, =]
[(, xValue, ), ;, int, seriesCount, =, this, ., data, ., size, (, ), ;, for, (, int, seriesNo, =]
[), ;, int, seriesCount, =, this, ., data, ., size, (, ), ;, for, (, int, seriesNo, =, 0, ;]
[), ;, int, seriesCount, =, this, ., data, ., size, (, ), ;, for, (, int, seriesNo, =, 0, ;]
[int, seriesCount, =, this, ., data, ., size, (, ), ;, for, (, int, seriesNo, =, 0, ;, seriesNo, <]
[=, this, ., data, ., size, (, ), ;, for, (, int, seriesNo, =, 0, ;, seriesNo, <, seriesCount, ;]
[=, this, ., data, ., size, (, ), ;, for, (, int, seriesNo, =, 0, ;, seriesNo, <, seriesCount, ;]
[), ;, for, (, int, seriesNo, =, 0, ;, seriesNo, <, seriesCount, ;, seriesNo, ++, ), {, XYSeries, dataSeries, =]
[(, int, seriesNo, =, 0, ;, seriesNo, <, seriesCount, ;, seriesNo, ++, ), {, XYSeries, dataSeries, =, (, XYSeries, )]
[(, int, seriesNo, =, 0, ;, seriesNo, <, seriesCount, ;, seriesNo, ++, ), {, XYSeries, dataSeries, =, (, XYSeries, )]
[(, int, seriesNo, =, 0, ;, seriesNo, <, seriesCount, ;, seriesNo, ++, ), {, XYSeries, dataSeries, =, (, XYSeries, )]
[seriesNo, <, seriesCount, ;, seriesNo, ++, ), {, XYSeries, dataSeries, =, (, XYSeries, ), this, ., data, ., get, (]
[++, ), {, XYSeries, dataSeries, =, (, XYSeries, ), this, ., data, ., get, (, seriesNo, ), ;, if, (]
[), {, XYSeries, dataSeries, =, (, XYSeries, ), this, ., data, ., get, (, seriesNo, ), ;, if, (, !]
[), {, XYSeries, dataSeries, =, (, XYSeries, ), this, ., data, ., get, (, seriesNo, ), ;, if, (, !]
[=, (, XYSeries, ), this, ., data, ., get, (, seriesNo, ), ;, if, (, !, dataSeries, ., equals, (]
[this, ., data, ., get, (, seriesNo, ), ;, if, (, !, dataSeries, ., equals, (, series, ), ), {]
[this, ., data, ., get, (, seriesNo, ), ;, if, (, !, dataSeries, ., equals, (, series, ), ), {]
[get, (, seriesNo, ), ;, if, (, !, dataSeries, ., equals, (, series, ), ), {, dataSeries, ., add, (]
[seriesNo, ), ;, if, (, !, dataSeries, ., equals, (, series, ), ), {, dataSeries, ., add, (, xValue, ,]
[series, ), ), {, dataSeries, ., add, (, xValue, ,, null, ), ;, }, }, }, }, Iterator, iterator, =]
[series, ), ), {, dataSeries, ., add, (, xValue, ,, null, ), ;, }, }, }, }, Iterator, iterator, =]
[series, ), ), {, dataSeries, ., add, (, xValue, ,, null, ), ;, }, }, }, }, Iterator, iterator, =]
[null, ), ;, }, }, }, }, Iterator, iterator, =, this, ., xPoints, ., iterator, (, ), ;, while, (]
[null, ), ;, }, }, }, }, Iterator, iterator, =, this, ., xPoints, ., iterator, (, ), ;, while, (]
[this, ., xPoints, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Number, xPoint, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Number, xPoint, =, (, Number, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Number, xPoint, =, (, Number, )]
[., hasNext, (, ), ), {, Number, xPoint, =, (, Number, ), iterator, ., next, (, ), ;, if, (]
[hasNext, (, ), ), {, Number, xPoint, =, (, Number, ), iterator, ., next, (, ), ;, if, (, !]
[hasNext, (, ), ), {, Number, xPoint, =, (, Number, ), iterator, ., next, (, ), ;, if, (, !]
[{, Number, xPoint, =, (, Number, ), iterator, ., next, (, ), ;, if, (, !, seriesXPoints, ., contains, (]
[(, Number, ), iterator, ., next, (, ), ;, if, (, !, seriesXPoints, ., contains, (, xPoint, ), ), {]
[(, Number, ), iterator, ., next, (, ), ;, if, (, !, seriesXPoints, ., contains, (, xPoint, ), ), {]
[., next, (, ), ;, if, (, !, seriesXPoints, ., contains, (, xPoint, ), ), {, series, ., add, (]
[(, ), ;, if, (, !, seriesXPoints, ., contains, (, xPoint, ), ), {, series, ., add, (, xPoint, ,]
[!, seriesXPoints, ., contains, (, xPoint, ), ), {, series, ., add, (, xPoint, ,, null, ), ;, }, }]
[!, seriesXPoints, ., contains, (, xPoint, ), ), {, series, ., add, (, xPoint, ,, null, ), ;, }, }]
[(, xPoint, ), ), {, series, ., add, (, xPoint, ,, null, ), ;, }, }, this, ., propagateEvents, =]
[xPoint, ,, null, ), ;, }, }, this, ., propagateEvents, =, savedState, ;, }, public, void, updateXPoints, (, ), {]
[xPoint, ,, null, ), ;, }, }, this, ., propagateEvents, =, savedState, ;, }, public, void, updateXPoints, (, ), {]
[;, }, }, this, ., propagateEvents, =, savedState, ;, }, public, void, updateXPoints, (, ), {, this, ., propagateEvents, =]
[savedState, ;, }, public, void, updateXPoints, (, ), {, this, ., propagateEvents, =, false, ;, for, (, int, s, =]
[}, public, void, updateXPoints, (, ), {, this, ., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;]
[}, public, void, updateXPoints, (, ), {, this, ., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;]
[void, updateXPoints, (, ), {, this, ., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;, s, <]
[void, updateXPoints, (, ), {, this, ., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;, s, <]
[void, updateXPoints, (, ), {, this, ., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;, s, <]
[=, false, ;, for, (, int, s, =, 0, ;, s, <, this, ., data, ., size, (, ), ;]
[=, false, ;, for, (, int, s, =, 0, ;, s, <, this, ., data, ., size, (, ), ;]
[(, int, s, =, 0, ;, s, <, this, ., data, ., size, (, ), ;, s, ++, ), {]
[s, =, 0, ;, s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, updateXPoints, (]
[;, s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, updateXPoints, (, (, XYSeries, )]
[;, s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, updateXPoints, (, (, XYSeries, )]
[;, s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, updateXPoints, (, (, XYSeries, )]
[., size, (, ), ;, s, ++, ), {, updateXPoints, (, (, XYSeries, ), this, ., data, ., get, (]
[), {, updateXPoints, (, (, XYSeries, ), this, ., data, ., get, (, s, ), ), ;, }, if, (]
[), {, updateXPoints, (, (, XYSeries, ), this, ., data, ., get, (, s, ), ), ;, }, if, (]
[XYSeries, ), this, ., data, ., get, (, s, ), ), ;, }, if, (, this, ., autoPrune, ), {]
[., get, (, s, ), ), ;, }, if, (, this, ., autoPrune, ), {, prune, (, ), ;, }]
[., get, (, s, ), ), ;, }, if, (, this, ., autoPrune, ), {, prune, (, ), ;, }]
[), ), ;, }, if, (, this, ., autoPrune, ), {, prune, (, ), ;, }, this, ., propagateEvents, =]
[{, prune, (, ), ;, }, this, ., propagateEvents, =, true, ;, }, public, int, getSeriesCount, (, ), {, return]
[{, prune, (, ), ;, }, this, ., propagateEvents, =, true, ;, }, public, int, getSeriesCount, (, ), {, return]
[{, prune, (, ), ;, }, this, ., propagateEvents, =, true, ;, }, public, int, getSeriesCount, (, ), {, return]
[), {, return, this, ., data, ., size, (, ), ;, }, public, int, getItemCount, (, ), {, if, (]
[), {, return, this, ., data, ., size, (, ), ;, }, public, int, getItemCount, (, ), {, if, (]
[), {, return, this, ., data, ., size, (, ), ;, }, public, int, getItemCount, (, ), {, if, (]
[., data, ., size, (, ), ;, }, public, int, getItemCount, (, ), {, if, (, this, ., xPoints, ==]
[(, ), ;, }, public, int, getItemCount, (, ), {, if, (, this, ., xPoints, ==, null, ), {, return]
[getItemCount, (, ), {, if, (, this, ., xPoints, ==, null, ), {, return, 0, ;, }, else, {, return]
[getItemCount, (, ), {, if, (, this, ., xPoints, ==, null, ), {, return, 0, ;, }, else, {, return]
[getItemCount, (, ), {, if, (, this, ., xPoints, ==, null, ), {, return, 0, ;, }, else, {, return]
[this, ., xPoints, ., size, (, ), ;, }, }, public, XYSeries, getSeries, (, int, series, ), {, if, (]
[this, ., xPoints, ., size, (, ), ;, }, }, public, XYSeries, getSeries, (, int, series, ), {, if, (]
[., xPoints, ., size, (, ), ;, }, }, public, XYSeries, getSeries, (, int, series, ), {, if, (, (]
[., xPoints, ., size, (, ), ;, }, }, public, XYSeries, getSeries, (, int, series, ), {, if, (, (]
[., size, (, ), ;, }, }, public, XYSeries, getSeries, (, int, series, ), {, if, (, (, series, <]
[), ;, }, }, public, XYSeries, getSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||]
[;, }, }, public, XYSeries, getSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[;, }, }, public, XYSeries, getSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[}, public, XYSeries, getSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (, series, >=]
[), {, if, (, (, series, <, 0, ), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw]
[(, (, series, <, 0, ), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (]
[), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, return]
[series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, return, (, XYSeries, )]
[series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, return, (, XYSeries, )]
[series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, return, (, XYSeries, )]
[), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, return, (, XYSeries, ), this, ., data, ., get, (]
[), this, ., data, ., get, (, series, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return]
[), this, ., data, ., get, (, series, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return]
[., data, ., get, (, series, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, getSeries, (]
[return, getSeries, (, series, ), ., getKey, (, ), ;, }, public, int, getItemCount, (, int, series, ), {, return]
[return, getSeries, (, series, ), ., getKey, (, ), ;, }, public, int, getItemCount, (, int, series, ), {, return]
[(, series, ), ., getKey, (, ), ;, }, public, int, getItemCount, (, int, series, ), {, return, getSeries, (]
[., getItemCount, (, ), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, XYSeries, s, =]
[), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, XYSeries, s, =, (, XYSeries, )]
[), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, XYSeries, s, =, (, XYSeries, )]
[), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, XYSeries, s, =, (, XYSeries, )]
[(, int, series, ,, int, item, ), {, XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (]
[int, item, ), {, XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, return]
[int, item, ), {, XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, return]
[XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, return, s, ., getX, (]
[s, ., getX, (, item, ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return]
[s, ., getX, (, item, ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return]
[s, ., getX, (, item, ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return]
[;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate, ., getStartX, (]
[public, Number, getStartX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate, ., getStartX, (, series, ,]
[getStartX, (, series, ,, item, ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return]
[getStartX, (, series, ,, item, ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return]
[getStartX, (, series, ,, item, ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return]
[;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate, ., getEndX, (]
[public, Number, getEndX, (, int, series, ,, int, item, ), {, return, this, ., intervalDelegate, ., getEndX, (, series, ,]
[series, ,, item, ), ;, }, public, Number, getY, (, int, series, ,, int, index, ), {, XYSeries, s, =]
[), ;, }, public, Number, getY, (, int, series, ,, int, index, ), {, XYSeries, s, =, (, XYSeries, )]
[), ;, }, public, Number, getY, (, int, series, ,, int, index, ), {, XYSeries, s, =, (, XYSeries, )]
[), ;, }, public, Number, getY, (, int, series, ,, int, index, ), {, XYSeries, s, =, (, XYSeries, )]
[(, int, series, ,, int, index, ), {, XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (]
[int, index, ), {, XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, return]
[int, index, ), {, XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, return]
[XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, return, s, ., getY, (]
[s, ., getY, (, index, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return]
[getY, (, index, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (]
[index, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,]
[getY, (, series, ,, item, ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return]
[series, ,, item, ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (]
[item, ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,]
[return, getY, (, series, ,, item, ), ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =]
[(, series, ,, item, ), ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;]
[(, series, ,, item, ), ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;]
[,, item, ), ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;, i, <]
[,, item, ), ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;, i, <]
[,, item, ), ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;, i, <]
[(, ), {, for, (, int, i, =, 0, ;, i, <, this, ., data, ., size, (, ), ;]
[(, ), {, for, (, int, i, =, 0, ;, i, <, this, ., data, ., size, (, ), ;]
[=, 0, ;, i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, XYSeries, series, =]
[i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, )]
[i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, )]
[i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, )]
[size, (, ), ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (]
[;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;]
[;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;]
[{, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;, series, ., removeChangeListener, (]
[(, XYSeries, ), this, ., data, ., get, (, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }]
[(, XYSeries, ), this, ., data, ., get, (, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }]
[(, XYSeries, ), this, ., data, ., get, (, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }]
[(, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (, ), ;]
[(, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (, ), ;]
[(, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (, ), ;]
[this, ), ;, }, this, ., data, ., clear, (, ), ;, this, ., xPoints, ., clear, (, ), ;]
[;, }, this, ., data, ., clear, (, ), ;, this, ., xPoints, ., clear, (, ), ;, fireDatasetChanged, (]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries, (, XYSeries, series, ), {, if, (]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries, (, XYSeries, series, ), {, if, (]
[(, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeSeries, (, XYSeries, series, ), {, if, (, series, ==]
[), ), ;, }, public, void, removeSeries, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw]
[}, public, void, removeSeries, (, XYSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (]
[series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (]
[series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (]
[series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, this, ., data, ., contains, (]
[throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, this, ., data, ., contains, (, series, ), ), {]
[throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, if, (, this, ., data, ., contains, (, series, ), ), {]
["Null 'series' argument.", ), ;, }, if, (, this, ., data, ., contains, (, series, ), ), {, series, ., removeChangeListener, (]
[}, if, (, this, ., data, ., contains, (, series, ), ), {, series, ., removeChangeListener, (, this, ), ;]
[}, if, (, this, ., data, ., contains, (, series, ), ), {, series, ., removeChangeListener, (, this, ), ;]
[}, if, (, this, ., data, ., contains, (, series, ), ), {, series, ., removeChangeListener, (, this, ), ;]
[., contains, (, series, ), ), {, series, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (]
[), {, series, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (]
[), {, series, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (]
[), {, series, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (]
[), {, series, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (]
[;, this, ., data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==]
[data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==, 0, ), {]
[data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==, 0, ), {]
[data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==, 0, ), {]
[this, ., data, ., size, (, ), ==, 0, ), {, this, ., xPoints, ., clear, (, ), ;, }]
[data, ., size, (, ), ==, 0, ), {, this, ., xPoints, ., clear, (, ), ;, }, fireDatasetChanged, (]
[fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void, removeSeries, (, int, series, ), {, if, (]
[fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void, removeSeries, (, int, series, ), {, if, (]
[(, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void, removeSeries, (, int, series, ), {, if, (, (]
[(, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void, removeSeries, (, int, series, ), {, if, (, (]
[DatasetChangeInfo, (, ), ), ;, }, }, public, void, removeSeries, (, int, series, ), {, if, (, (, series, <]
[), ;, }, }, public, void, removeSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||]
[;, }, }, public, void, removeSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[;, }, }, public, void, removeSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[}, public, void, removeSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (, series, >]
[), {, if, (, (, series, <, 0, ), ||, (, series, >, getSeriesCount, (, ), ), ), {, throw]
[(, (, series, <, 0, ), ||, (, series, >, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (]
[(, series, >, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, XYSeries, s, =]
[getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, XYSeries, s, =, (, XYSeries, )]
[getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, XYSeries, s, =, (, XYSeries, )]
[getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, XYSeries, s, =, (, XYSeries, )]
[throw, new, IllegalArgumentException, (, "Index outside valid range.", ), ;, }, XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (]
[(, "Index outside valid range.", ), ;, }, XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (, series, ), ;]
[(, "Index outside valid range.", ), ;, }, XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (, series, ), ;]
[}, XYSeries, s, =, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, s, ., removeChangeListener, (]
[=, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, s, ., removeChangeListener, (, this, ), ;]
[=, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, s, ., removeChangeListener, (, this, ), ;]
[=, (, XYSeries, ), this, ., data, ., get, (, series, ), ;, s, ., removeChangeListener, (, this, ), ;]
[data, ., get, (, series, ), ;, s, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (]
[), ;, s, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (]
[), ;, s, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (]
[), ;, s, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (]
[), ;, s, ., removeChangeListener, (, this, ), ;, this, ., data, ., remove, (, series, ), ;, if, (]
[;, this, ., data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==]
[data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==, 0, ), {]
[data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==, 0, ), {]
[data, ., remove, (, series, ), ;, if, (, this, ., data, ., size, (, ), ==, 0, ), {]
[., size, (, ), ==, 0, ), {, this, ., xPoints, ., clear, (, ), ;, }, else, if, (]
[., size, (, ), ==, 0, ), {, this, ., xPoints, ., clear, (, ), ;, }, else, if, (]
[0, ), {, this, ., xPoints, ., clear, (, ), ;, }, else, if, (, this, ., autoPrune, ), {]
[xPoints, ., clear, (, ), ;, }, else, if, (, this, ., autoPrune, ), {, prune, (, ), ;, }]
[clear, (, ), ;, }, else, if, (, this, ., autoPrune, ), {, prune, (, ), ;, }, fireDatasetChanged, (]
[}, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeAllValuesForX, (, Number, x, ), {, if, (]
[}, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeAllValuesForX, (, Number, x, ), {, if, (]
[(, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeAllValuesForX, (, Number, x, ), {, if, (, x, ==]
[), ), ;, }, public, void, removeAllValuesForX, (, Number, x, ), {, if, (, x, ==, null, ), {, throw]
[}, public, void, removeAllValuesForX, (, Number, x, ), {, if, (, x, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, x, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'x' argument.", ), ;, }, boolean, savedState, =]
[), {, if, (, x, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'x' argument.", ), ;, }, boolean, savedState, =]
[x, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'x' argument.", ), ;, }, boolean, savedState, =, this, ., propagateEvents, ;]
[x, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'x' argument.", ), ;, }, boolean, savedState, =, this, ., propagateEvents, ;]
[{, throw, new, IllegalArgumentException, (, "Null 'x' argument.", ), ;, }, boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents, =]
[;, }, boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, s, =]
[boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;]
[boolean, savedState, =, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;]
[=, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;, s, <]
[=, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;, s, <]
[=, this, ., propagateEvents, ;, this, ., propagateEvents, =, false, ;, for, (, int, s, =, 0, ;, s, <]
[=, false, ;, for, (, int, s, =, 0, ;, s, <, this, ., data, ., size, (, ), ;]
[=, false, ;, for, (, int, s, =, 0, ;, s, <, this, ., data, ., size, (, ), ;]
[=, 0, ;, s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =]
[s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, )]
[s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, )]
[s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, )]
[size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (]
[;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;]
[;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;]
[{, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;, series, ., remove, (]
[(, XYSeries, ), this, ., data, ., get, (, s, ), ;, series, ., remove, (, x, ), ;, }]
[(, XYSeries, ), this, ., data, ., get, (, s, ), ;, series, ., remove, (, x, ), ;, }]
[., data, ., get, (, s, ), ;, series, ., remove, (, x, ), ;, }, this, ., propagateEvents, =]
[., get, (, s, ), ;, series, ., remove, (, x, ), ;, }, this, ., propagateEvents, =, savedState, ;]
[., get, (, s, ), ;, series, ., remove, (, x, ), ;, }, this, ., propagateEvents, =, savedState, ;]
[., get, (, s, ), ;, series, ., remove, (, x, ), ;, }, this, ., propagateEvents, =, savedState, ;]
[series, ., remove, (, x, ), ;, }, this, ., propagateEvents, =, savedState, ;, this, ., xPoints, ., remove, (]
[(, x, ), ;, }, this, ., propagateEvents, =, savedState, ;, this, ., xPoints, ., remove, (, x, ), ;]
[), ;, }, this, ., propagateEvents, =, savedState, ;, this, ., xPoints, ., remove, (, x, ), ;, fireDatasetChanged, (]
[new, DatasetChangeInfo, (, ), ), ;, }, protected, boolean, canPrune, (, Number, x, ), {, for, (, int, s, =]
[(, ), ), ;, }, protected, boolean, canPrune, (, Number, x, ), {, for, (, int, s, =, 0, ;]
[(, ), ), ;, }, protected, boolean, canPrune, (, Number, x, ), {, for, (, int, s, =, 0, ;]
[), ;, }, protected, boolean, canPrune, (, Number, x, ), {, for, (, int, s, =, 0, ;, s, <]
[), ;, }, protected, boolean, canPrune, (, Number, x, ), {, for, (, int, s, =, 0, ;, s, <]
[), ;, }, protected, boolean, canPrune, (, Number, x, ), {, for, (, int, s, =, 0, ;, s, <]
[x, ), {, for, (, int, s, =, 0, ;, s, <, this, ., data, ., size, (, ), ;]
[x, ), {, for, (, int, s, =, 0, ;, s, <, this, ., data, ., size, (, ), ;]
[=, 0, ;, s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =]
[s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, )]
[s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, )]
[s, <, this, ., data, ., size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, )]
[size, (, ), ;, s, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (]
[++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;, if, (]
[++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;, if, (]
[++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;, if, (]
[series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;, if, (, series, ., getY, (]
[series, =, (, XYSeries, ), this, ., data, ., get, (, s, ), ;, if, (, series, ., getY, (]
[), this, ., data, ., get, (, s, ), ;, if, (, series, ., getY, (, series, ., indexOf, (]
[., get, (, s, ), ;, if, (, series, ., getY, (, series, ., indexOf, (, x, ), ), !=]
[), ;, if, (, series, ., getY, (, series, ., indexOf, (, x, ), ), !=, null, ), {, return]
[., getY, (, series, ., indexOf, (, x, ), ), !=, null, ), {, return, false, ;, }, }, return]
[), {, return, false, ;, }, }, return, true, ;, }, public, void, prune, (, ), {, HashSet, hs, =]
[false, ;, }, }, return, true, ;, }, public, void, prune, (, ), {, HashSet, hs, =, (, HashSet, )]
[false, ;, }, }, return, true, ;, }, public, void, prune, (, ), {, HashSet, hs, =, (, HashSet, )]
[false, ;, }, }, return, true, ;, }, public, void, prune, (, ), {, HashSet, hs, =, (, HashSet, )]
[(, ), {, HashSet, hs, =, (, HashSet, ), this, ., xPoints, ., clone, (, ), ;, Iterator, iterator, =]
[(, ), {, HashSet, hs, =, (, HashSet, ), this, ., xPoints, ., clone, (, ), ;, Iterator, iterator, =]
[), this, ., xPoints, ., clone, (, ), ;, Iterator, iterator, =, hs, ., iterator, (, ), ;, while, (]
[), this, ., xPoints, ., clone, (, ), ;, Iterator, iterator, =, hs, ., iterator, (, ), ;, while, (]
[iterator, =, hs, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Number, x, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Number, x, =, (, Number, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Number, x, =, (, Number, )]
[., hasNext, (, ), ), {, Number, x, =, (, Number, ), iterator, ., next, (, ), ;, if, (]
[(, ), ), {, Number, x, =, (, Number, ), iterator, ., next, (, ), ;, if, (, canPrune, (]
[Number, x, =, (, Number, ), iterator, ., next, (, ), ;, if, (, canPrune, (, x, ), ), {]
[=, (, Number, ), iterator, ., next, (, ), ;, if, (, canPrune, (, x, ), ), {, removeAllValuesForX, (]
[), {, removeAllValuesForX, (, x, ), ;, }, }, }, public, void, seriesChanged, (, SeriesChangeEvent, event, ), {, if, (]
[), {, removeAllValuesForX, (, x, ), ;, }, }, }, public, void, seriesChanged, (, SeriesChangeEvent, event, ), {, if, (]
[), ;, }, }, }, public, void, seriesChanged, (, SeriesChangeEvent, event, ), {, if, (, this, ., propagateEvents, ), {]
[}, public, void, seriesChanged, (, SeriesChangeEvent, event, ), {, if, (, this, ., propagateEvents, ), {, updateXPoints, (, ), ;]
[void, seriesChanged, (, SeriesChangeEvent, event, ), {, if, (, this, ., propagateEvents, ), {, updateXPoints, (, ), ;, fireDatasetChanged, (]
[fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[new, DatasetChangeInfo, (, ), ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultTableXYDataset, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, DefaultTableXYDataset, ), ), {, return, false, ;, }, DefaultTableXYDataset, that, =]
[if, (, !, (, obj, instanceof, DefaultTableXYDataset, ), ), {, return, false, ;, }, DefaultTableXYDataset, that, =, (, DefaultTableXYDataset, )]
[obj, instanceof, DefaultTableXYDataset, ), ), {, return, false, ;, }, DefaultTableXYDataset, that, =, (, DefaultTableXYDataset, ), obj, ;, if, (]
[obj, instanceof, DefaultTableXYDataset, ), ), {, return, false, ;, }, DefaultTableXYDataset, that, =, (, DefaultTableXYDataset, ), obj, ;, if, (]
[obj, instanceof, DefaultTableXYDataset, ), ), {, return, false, ;, }, DefaultTableXYDataset, that, =, (, DefaultTableXYDataset, ), obj, ;, if, (]
[), {, return, false, ;, }, DefaultTableXYDataset, that, =, (, DefaultTableXYDataset, ), obj, ;, if, (, this, ., autoPrune, !=]
[), {, return, false, ;, }, DefaultTableXYDataset, that, =, (, DefaultTableXYDataset, ), obj, ;, if, (, this, ., autoPrune, !=]
[DefaultTableXYDataset, that, =, (, DefaultTableXYDataset, ), obj, ;, if, (, this, ., autoPrune, !=, that, ., autoPrune, ), {, return]
[), obj, ;, if, (, this, ., autoPrune, !=, that, ., autoPrune, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., autoPrune, !=, that, ., autoPrune, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., autoPrune, !=, that, ., autoPrune, ), {, return, false, ;, }, if, (]
[(, this, ., autoPrune, !=, that, ., autoPrune, ), {, return, false, ;, }, if, (, this, ., propagateEvents, !=]
[(, this, ., autoPrune, !=, that, ., autoPrune, ), {, return, false, ;, }, if, (, this, ., propagateEvents, !=]
[., autoPrune, ), {, return, false, ;, }, if, (, this, ., propagateEvents, !=, that, ., propagateEvents, ), {, return]
[false, ;, }, if, (, this, ., propagateEvents, !=, that, ., propagateEvents, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., propagateEvents, !=, that, ., propagateEvents, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., propagateEvents, !=, that, ., propagateEvents, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., propagateEvents, !=, that, ., propagateEvents, ), {, return, false, ;, }, if, (, !]
[propagateEvents, !=, that, ., propagateEvents, ), {, return, false, ;, }, if, (, !, this, ., intervalDelegate, ., equals, (]
[propagateEvents, !=, that, ., propagateEvents, ), {, return, false, ;, }, if, (, !, this, ., intervalDelegate, ., equals, (]
[return, false, ;, }, if, (, !, this, ., intervalDelegate, ., equals, (, that, ., intervalDelegate, ), ), {, return]
[(, !, this, ., intervalDelegate, ., equals, (, that, ., intervalDelegate, ), ), {, return, false, ;, }, if, (]
[!, this, ., intervalDelegate, ., equals, (, that, ., intervalDelegate, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., intervalDelegate, ., equals, (, that, ., intervalDelegate, ), ), {, return, false, ;, }, if, (, !]
[., equals, (, that, ., intervalDelegate, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., equals, (, that, ., intervalDelegate, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., intervalDelegate, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,]
[., intervalDelegate, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data, ), ), {, return]
[!, ObjectUtilities, ., equal, (, this, ., data, ,, that, ., data, ), ), {, return, false, ;, }, return]
[), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;]
[{, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;, result, =]
[return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;, result, =, (]
[return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;, result, =, (]
[return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;, result, =, (]
[return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;, result, =, (]
[return, true, ;, }, public, int, hashCode, (, ), {, int, result, ;, result, =, (, this, ., data, !=]
[;, }, public, int, hashCode, (, ), {, int, result, ;, result, =, (, this, ., data, !=, null, ?]
[;, }, public, int, hashCode, (, ), {, int, result, ;, result, =, (, this, ., data, !=, null, ?]
[;, }, public, int, hashCode, (, ), {, int, result, ;, result, =, (, this, ., data, !=, null, ?]
[int, result, ;, result, =, (, this, ., data, !=, null, ?, this, ., data, ., hashCode, (, ), :]
[result, =, (, this, ., data, !=, null, ?, this, ., data, ., hashCode, (, ), :, 0, ), ;]
[(, this, ., data, !=, null, ?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result, =]
[(, this, ., data, !=, null, ?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result, =]
[(, this, ., data, !=, null, ?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result, =]
[., data, !=, null, ?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *]
[!=, null, ?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +]
[null, ?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (]
[null, ?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (]
[null, ?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (]
[null, ?, this, ., data, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (]
[data, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., xPoints, !=]
[hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., xPoints, !=, null, ?]
[hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., xPoints, !=, null, ?]
[hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., xPoints, !=, null, ?]
[=, 29, *, result, +, (, this, ., xPoints, !=, null, ?, this, ., xPoints, ., hashCode, (, ), :]
[result, +, (, this, ., xPoints, !=, null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;]
[(, this, ., xPoints, !=, null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result, =]
[(, this, ., xPoints, !=, null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result, =]
[(, this, ., xPoints, !=, null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result, =]
[., xPoints, !=, null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *]
[!=, null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +]
[null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (]
[null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (]
[null, ?, this, ., xPoints, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (]
[xPoints, ., hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., propagateEvents, ?]
[hashCode, (, ), :, 0, ), ;, result, =, 29, *, result, +, (, this, ., propagateEvents, ?, 1, :]
[:, 0, ), ;, result, =, 29, *, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;]
[), ;, result, =, 29, *, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =]
[), ;, result, =, 29, *, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =]
[), ;, result, =, 29, *, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =]
[result, =, 29, *, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =, 29, *]
[29, *, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =, 29, *, result, +]
[*, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (]
[*, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (]
[*, result, +, (, this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (]
[this, ., propagateEvents, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (, this, ., autoPrune, ?]
[propagateEvents, ?, 1, :, 0, ), ;, result, =, 29, *, result, +, (, this, ., autoPrune, ?, 1, :]
[0, ), ;, result, =, 29, *, result, +, (, this, ., autoPrune, ?, 1, :, 0, ), ;, return]
[1, :, 0, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultTableXYDataset, clone, =]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultTableXYDataset, clone, =, (, DefaultTableXYDataset, )]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultTableXYDataset, clone, =, (, DefaultTableXYDataset, )]
[(, ), throws, CloneNotSupportedException, {, DefaultTableXYDataset, clone, =, (, DefaultTableXYDataset, ), super, ., clone, (, ), ;, int, seriesCount, =]
[(, ), throws, CloneNotSupportedException, {, DefaultTableXYDataset, clone, =, (, DefaultTableXYDataset, ), super, ., clone, (, ), ;, int, seriesCount, =]
[(, ), throws, CloneNotSupportedException, {, DefaultTableXYDataset, clone, =, (, DefaultTableXYDataset, ), super, ., clone, (, ), ;, int, seriesCount, =]
[(, DefaultTableXYDataset, ), super, ., clone, (, ), ;, int, seriesCount, =, this, ., data, ., size, (, ), ;]
[(, DefaultTableXYDataset, ), super, ., clone, (, ), ;, int, seriesCount, =, this, ., data, ., size, (, ), ;]
[., clone, (, ), ;, int, seriesCount, =, this, ., data, ., size, (, ), ;, clone, ., data, =]
[=, this, ., data, ., size, (, ), ;, clone, ., data, =, new, java, ., util, ., ArrayList, (]
[;, clone, ., data, =, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =]
[., data, =, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;]
[., data, =, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;]
[=, new, java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;, i, <]
[java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;, i, <, seriesCount, ;]
[java, ., util, ., ArrayList, (, seriesCount, ), ;, for, (, int, i, =, 0, ;, i, <, seriesCount, ;]
[), ;, for, (, int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {, XYSeries, series, =]
[(, int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, )]
[(, int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, )]
[(, int, i, =, 0, ;, i, <, seriesCount, ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, )]
[i, <, seriesCount, ;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (]
[;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;]
[;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;]
[;, i, ++, ), {, XYSeries, series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;]
[series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;, clone, ., data, ., add, (]
[series, =, (, XYSeries, ), this, ., data, ., get, (, i, ), ;, clone, ., data, ., add, (]
[., get, (, i, ), ;, clone, ., data, ., add, (, series, ., clone, (, ), ), ;, }]
[., get, (, i, ), ;, clone, ., data, ., add, (, series, ., clone, (, ), ), ;, }]
[), ;, clone, ., data, ., add, (, series, ., clone, (, ), ), ;, }, clone, ., intervalDelegate, =]
[., data, ., add, (, series, ., clone, (, ), ), ;, }, clone, ., intervalDelegate, =, new, IntervalXYDelegate, (]
[add, (, series, ., clone, (, ), ), ;, }, clone, ., intervalDelegate, =, new, IntervalXYDelegate, (, clone, ), ;]
[add, (, series, ., clone, (, ), ), ;, }, clone, ., intervalDelegate, =, new, IntervalXYDelegate, (, clone, ), ;]
[add, (, series, ., clone, (, ), ), ;, }, clone, ., intervalDelegate, =, new, IntervalXYDelegate, (, clone, ), ;]
[), ), ;, }, clone, ., intervalDelegate, =, new, IntervalXYDelegate, (, clone, ), ;, clone, ., intervalDelegate, ., setFixedIntervalWidth, (]
[., intervalDelegate, =, new, IntervalXYDelegate, (, clone, ), ;, clone, ., intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth, (, ), ), ;]
[., intervalDelegate, =, new, IntervalXYDelegate, (, clone, ), ;, clone, ., intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth, (, ), ), ;]
[., intervalDelegate, =, new, IntervalXYDelegate, (, clone, ), ;, clone, ., intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth, (, ), ), ;]
[clone, ), ;, clone, ., intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth, (, ), ), ;, clone, ., intervalDelegate, ., setAutoWidth, (]
[intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth, (, ), ), ;, clone, ., intervalDelegate, ., setAutoWidth, (, isAutoWidth, (, ), ), ;]
[intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth, (, ), ), ;, clone, ., intervalDelegate, ., setAutoWidth, (, isAutoWidth, (, ), ), ;]
[intervalDelegate, ., setFixedIntervalWidth, (, getIntervalWidth, (, ), ), ;, clone, ., intervalDelegate, ., setAutoWidth, (, isAutoWidth, (, ), ), ;]
[), ), ;, clone, ., intervalDelegate, ., setAutoWidth, (, isAutoWidth, (, ), ), ;, clone, ., intervalDelegate, ., setIntervalPositionFactor, (]
[intervalDelegate, ., setAutoWidth, (, isAutoWidth, (, ), ), ;, clone, ., intervalDelegate, ., setIntervalPositionFactor, (, getIntervalPositionFactor, (, ), ), ;]
[intervalDelegate, ., setAutoWidth, (, isAutoWidth, (, ), ), ;, clone, ., intervalDelegate, ., setIntervalPositionFactor, (, getIntervalPositionFactor, (, ), ), ;]
[), ;, clone, ., intervalDelegate, ., setIntervalPositionFactor, (, getIntervalPositionFactor, (, ), ), ;, clone, ., updateXPoints, (, ), ;, return]
[;, clone, ., updateXPoints, (, ), ;, return, clone, ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return]
[;, clone, ., updateXPoints, (, ), ;, return, clone, ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return]
[;, clone, ., updateXPoints, (, ), ;, return, clone, ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return]
[;, return, clone, ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return, this, ., intervalDelegate, ., getDomainLowerBound, (]
[return, this, ., intervalDelegate, ., getDomainLowerBound, (, includeInterval, ), ;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return]
[return, this, ., intervalDelegate, ., getDomainLowerBound, (, includeInterval, ), ;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return]
[return, this, ., intervalDelegate, ., getDomainLowerBound, (, includeInterval, ), ;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return]
[(, includeInterval, ), ;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return, this, ., intervalDelegate, ., getDomainUpperBound, (]
[this, ., intervalDelegate, ., getDomainUpperBound, (, includeInterval, ), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (]
[getDomainUpperBound, (, includeInterval, ), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, includeInterval, ), {, return]
[getDomainUpperBound, (, includeInterval, ), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, includeInterval, ), {, return]
[getDomainUpperBound, (, includeInterval, ), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, includeInterval, ), {, return]
[public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, includeInterval, ), {, return, this, ., intervalDelegate, ., getDomainBounds, (]
[{, if, (, includeInterval, ), {, return, this, ., intervalDelegate, ., getDomainBounds, (, includeInterval, ), ;, }, else, {, return]
[{, if, (, includeInterval, ), {, return, this, ., intervalDelegate, ., getDomainBounds, (, includeInterval, ), ;, }, else, {, return]
[), {, return, this, ., intervalDelegate, ., getDomainBounds, (, includeInterval, ), ;, }, else, {, return, DatasetUtilities, ., iterateDomainBounds, (]
[return, this, ., intervalDelegate, ., getDomainBounds, (, includeInterval, ), ;, }, else, {, return, DatasetUtilities, ., iterateDomainBounds, (, this, ,]
[{, return, DatasetUtilities, ., iterateDomainBounds, (, this, ,, includeInterval, ), ;, }, }, public, double, getIntervalPositionFactor, (, ), {, return]
[{, return, DatasetUtilities, ., iterateDomainBounds, (, this, ,, includeInterval, ), ;, }, }, public, double, getIntervalPositionFactor, (, ), {, return]
[{, return, DatasetUtilities, ., iterateDomainBounds, (, this, ,, includeInterval, ), ;, }, }, public, double, getIntervalPositionFactor, (, ), {, return]
[), {, return, this, ., intervalDelegate, ., getIntervalPositionFactor, (, ), ;, }, public, void, setIntervalPositionFactor, (, double, d, ), {]
[), {, return, this, ., intervalDelegate, ., getIntervalPositionFactor, (, ), ;, }, public, void, setIntervalPositionFactor, (, double, d, ), {]
[), {, return, this, ., intervalDelegate, ., getIntervalPositionFactor, (, ), ;, }, public, void, setIntervalPositionFactor, (, double, d, ), {]
[., getIntervalPositionFactor, (, ), ;, }, public, void, setIntervalPositionFactor, (, double, d, ), {, this, ., intervalDelegate, ., setIntervalPositionFactor, (]
[), ;, }, public, void, setIntervalPositionFactor, (, double, d, ), {, this, ., intervalDelegate, ., setIntervalPositionFactor, (, d, ), ;]
[}, public, void, setIntervalPositionFactor, (, double, d, ), {, this, ., intervalDelegate, ., setIntervalPositionFactor, (, d, ), ;, fireDatasetChanged, (]
[(, d, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, double, getIntervalWidth, (, ), {, return]
[(, d, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, double, getIntervalWidth, (, ), {, return]
[(, d, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, double, getIntervalWidth, (, ), {, return]
[), {, return, this, ., intervalDelegate, ., getIntervalWidth, (, ), ;, }, public, void, setIntervalWidth, (, double, d, ), {]
[), {, return, this, ., intervalDelegate, ., getIntervalWidth, (, ), ;, }, public, void, setIntervalWidth, (, double, d, ), {]
[), {, return, this, ., intervalDelegate, ., getIntervalWidth, (, ), ;, }, public, void, setIntervalWidth, (, double, d, ), {]
[., getIntervalWidth, (, ), ;, }, public, void, setIntervalWidth, (, double, d, ), {, this, ., intervalDelegate, ., setFixedIntervalWidth, (]
[), ;, }, public, void, setIntervalWidth, (, double, d, ), {, this, ., intervalDelegate, ., setFixedIntervalWidth, (, d, ), ;]
[}, public, void, setIntervalWidth, (, double, d, ), {, this, ., intervalDelegate, ., setFixedIntervalWidth, (, d, ), ;, fireDatasetChanged, (]
[(, d, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, isAutoWidth, (, ), {, return]
[(, d, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, isAutoWidth, (, ), {, return]
[(, d, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, isAutoWidth, (, ), {, return]
[), {, return, this, ., intervalDelegate, ., isAutoWidth, (, ), ;, }, public, void, setAutoWidth, (, boolean, b, ), {]
[), {, return, this, ., intervalDelegate, ., isAutoWidth, (, ), ;, }, public, void, setAutoWidth, (, boolean, b, ), {]
[), {, return, this, ., intervalDelegate, ., isAutoWidth, (, ), ;, }, public, void, setAutoWidth, (, boolean, b, ), {]
[., isAutoWidth, (, ), ;, }, public, void, setAutoWidth, (, boolean, b, ), {, this, ., intervalDelegate, ., setAutoWidth, (]
[), ;, }, public, void, setAutoWidth, (, boolean, b, ), {, this, ., intervalDelegate, ., setAutoWidth, (, b, ), ;]
[}, public, void, setAutoWidth, (, boolean, b, ), {, this, ., intervalDelegate, ., setAutoWidth, (, b, ), ;, fireDatasetChanged, (]
