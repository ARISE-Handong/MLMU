[;, private, boolean, renderAsPercentages, ;, public, StackedAreaRenderer, (, ), {, this, (, false, ), ;, }, public, StackedAreaRenderer, (, boolean]
[;, private, boolean, renderAsPercentages, ;, public, StackedAreaRenderer, (, ), {, this, (, false, ), ;, }, public, StackedAreaRenderer, (, boolean]
[), ;, }, public, StackedAreaRenderer, (, boolean, renderAsPercentages, ), {, super, (, ), ;, this, ., renderAsPercentages, =, renderAsPercentages, ;]
[=, renderAsPercentages, ;, }, public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (]
[., renderAsPercentages, =, renderAsPercentages, ;, }, public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public, void]
[;, }, public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages]
[;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {, this, ., renderAsPercentages, =, asPercentages, ;, fireChangeEvent, (, ), ;]
[., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {, this, ., renderAsPercentages, =, asPercentages, ;, fireChangeEvent, (]
[=, asPercentages, ;, fireChangeEvent, (, ), ;, }, public, int, getPassCount, (, ), {, return, 2, ;, }, public, Range]
[., renderAsPercentages, =, asPercentages, ;, fireChangeEvent, (, ), ;, }, public, int, getPassCount, (, ), {, return, 2, ;, }]
[;, fireChangeEvent, (, ), ;, }, public, int, getPassCount, (, ), {, return, 2, ;, }, public, Range, findRangeBounds, (]
[;, }, public, int, getPassCount, (, ), {, return, 2, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {]
[;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, this, ., renderAsPercentages, ), {, return, new, Range]
[), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, dataset]
[., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds]
[;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ), ;, }, }, public, void, drawItem, (, Graphics2D, g2]
[,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ), ;, }, }, public, void, drawItem]
[), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ), ;, }, }, public, void, drawItem, (, Graphics2D]
[;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryAxis]
[., findStackedRangeBounds, (, dataset, ), ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea]
[), ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,]
[;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, double, y1, =, 0.0, ;, Number, n, =, dataset, .]
[;, double, y1, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[., getEntityCollection, (, ), ;, double, y1, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, row, ,, column]
[;, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, n, !=, null, ), {]
[;, if, (, n, !=, null, ), {, y1, =, n, ., doubleValue, (, ), ;, }, double, [, ]]
[., getValue, (, row, ,, column, ), ;, if, (, n, !=, null, ), {, y1, =, n, ., doubleValue]
[,, column, ), ;, if, (, n, !=, null, ), {, y1, =, n, ., doubleValue, (, ), ;, }]
[), ;, if, (, n, !=, null, ), {, y1, =, n, ., doubleValue, (, ), ;, }, double, []
[), {, y1, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack1, =, getStackValues, (, dataset, ,]
[!=, null, ), {, y1, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack1, =, getStackValues, (]
[), {, y1, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack1, =, getStackValues, (, dataset, ,]
[=, n, ., doubleValue, (, ), ;, }, double, [, ], stack1, =, getStackValues, (, dataset, ,, row, ,, column]
[;, }, double, [, ], stack1, =, getStackValues, (, dataset, ,, row, ,, column, ), ;, double, xx1, =, domainAxis]
[., doubleValue, (, ), ;, }, double, [, ], stack1, =, getStackValues, (, dataset, ,, row, ,, column, ), ;]
[;, double, xx1, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (]
[,, row, ,, column, ), ;, double, xx1, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea]
[,, column, ), ;, double, xx1, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot]
[), ;, double, xx1, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge]
[;, double, y0, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, ., max, (, column, -]
[., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, y0]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, y0, =, 0.0, ;, n]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, y0, =, 0.0, ;, n, =, dataset, ., getValue]
[,, plot, ., getDomainAxisEdge, (, ), ), ;, double, y0, =, 0.0, ;, n, =, dataset, ., getValue, (, row]
[), ;, double, y0, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, ., max, (, column]
[., getDomainAxisEdge, (, ), ), ;, double, y0, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math]
[;, n, =, dataset, ., getValue, (, row, ,, Math, ., max, (, column, -, 1, ,, 0, ), )]
[=, dataset, ., getValue, (, row, ,, Math, ., max, (, column, -, 1, ,, 0, ), ), ;, if]
[;, if, (, n, !=, null, ), {, y0, =, n, ., doubleValue, (, ), ;, }, double, [, ]]
[., getValue, (, row, ,, Math, ., max, (, column, -, 1, ,, 0, ), ), ;, if, (, n]
[,, Math, ., max, (, column, -, 1, ,, 0, ), ), ;, if, (, n, !=, null, ), {]
[), ;, if, (, n, !=, null, ), {, y0, =, n, ., doubleValue, (, ), ;, }, double, []
[., max, (, column, -, 1, ,, 0, ), ), ;, if, (, n, !=, null, ), {, y0, =]
[,, 0, ), ), ;, if, (, n, !=, null, ), {, y0, =, n, ., doubleValue, (, ), ;]
[-, 1, ,, 0, ), ), ;, if, (, n, !=, null, ), {, y0, =, n, ., doubleValue, (]
[,, 0, ), ), ;, if, (, n, !=, null, ), {, y0, =, n, ., doubleValue, (, ), ;]
[), ), ;, if, (, n, !=, null, ), {, y0, =, n, ., doubleValue, (, ), ;, }, double]
[), {, y0, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack0, =, getStackValues, (, dataset, ,]
[!=, null, ), {, y0, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack0, =, getStackValues, (]
[), {, y0, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack0, =, getStackValues, (, dataset, ,]
[=, n, ., doubleValue, (, ), ;, }, double, [, ], stack0, =, getStackValues, (, dataset, ,, row, ,, Math]
[;, }, double, [, ], stack0, =, getStackValues, (, dataset, ,, row, ,, Math, ., max, (, column, -, 1]
[., doubleValue, (, ), ;, }, double, [, ], stack0, =, getStackValues, (, dataset, ,, row, ,, Math, ., max]
[;, double, xx0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (]
[,, row, ,, Math, ., max, (, column, -, 1, ,, 0, ), ), ;, double, xx0, =, domainAxis, .]
[,, Math, ., max, (, column, -, 1, ,, 0, ), ), ;, double, xx0, =, domainAxis, ., getCategoryStart, (]
[), ;, double, xx0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge]
[., max, (, column, -, 1, ,, 0, ), ), ;, double, xx0, =, domainAxis, ., getCategoryStart, (, column, ,]
[,, 0, ), ), ;, double, xx0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[-, 1, ,, 0, ), ), ;, double, xx0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,]
[,, 0, ), ), ;, double, xx0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[), ), ;, double, xx0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, .]
[;, int, itemCount, =, dataset, ., getColumnCount, (, ), ;, double, y2, =, 0.0, ;, n, =, dataset, ., getValue]
[., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, itemCount]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, itemCount, =, dataset, ., getColumnCount]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, itemCount, =, dataset, ., getColumnCount, (, ), ;, double]
[,, plot, ., getDomainAxisEdge, (, ), ), ;, int, itemCount, =, dataset, ., getColumnCount, (, ), ;, double, y2, =]
[), ;, int, itemCount, =, dataset, ., getColumnCount, (, ), ;, double, y2, =, 0.0, ;, n, =, dataset, .]
[., getDomainAxisEdge, (, ), ), ;, int, itemCount, =, dataset, ., getColumnCount, (, ), ;, double, y2, =, 0.0, ;]
[;, double, y2, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, ., min, (, column, +]
[., getColumnCount, (, ), ;, double, y2, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, .]
[;, n, =, dataset, ., getValue, (, row, ,, Math, ., min, (, column, +, 1, ,, itemCount, -, 1]
[=, dataset, ., getValue, (, row, ,, Math, ., min, (, column, +, 1, ,, itemCount, -, 1, ), )]
[;, if, (, n, !=, null, ), {, y2, =, n, ., doubleValue, (, ), ;, }, double, [, ]]
[., getValue, (, row, ,, Math, ., min, (, column, +, 1, ,, itemCount, -, 1, ), ), ;, if]
[,, Math, ., min, (, column, +, 1, ,, itemCount, -, 1, ), ), ;, if, (, n, !=, null]
[), ;, if, (, n, !=, null, ), {, y2, =, n, ., doubleValue, (, ), ;, }, double, []
[., min, (, column, +, 1, ,, itemCount, -, 1, ), ), ;, if, (, n, !=, null, ), {]
[,, itemCount, -, 1, ), ), ;, if, (, n, !=, null, ), {, y2, =, n, ., doubleValue, (]
[+, 1, ,, itemCount, -, 1, ), ), ;, if, (, n, !=, null, ), {, y2, =, n, .]
[,, itemCount, -, 1, ), ), ;, if, (, n, !=, null, ), {, y2, =, n, ., doubleValue, (]
[), ), ;, if, (, n, !=, null, ), {, y2, =, n, ., doubleValue, (, ), ;, }, double]
[-, 1, ), ), ;, if, (, n, !=, null, ), {, y2, =, n, ., doubleValue, (, ), ;]
[), ), ;, if, (, n, !=, null, ), {, y2, =, n, ., doubleValue, (, ), ;, }, double]
[), {, y2, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack2, =, getStackValues, (, dataset, ,]
[!=, null, ), {, y2, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack2, =, getStackValues, (]
[), {, y2, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack2, =, getStackValues, (, dataset, ,]
[=, n, ., doubleValue, (, ), ;, }, double, [, ], stack2, =, getStackValues, (, dataset, ,, row, ,, Math]
[;, }, double, [, ], stack2, =, getStackValues, (, dataset, ,, row, ,, Math, ., min, (, column, +, 1]
[., doubleValue, (, ), ;, }, double, [, ], stack2, =, getStackValues, (, dataset, ,, row, ,, Math, ., min]
[;, double, xx2, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (]
[,, row, ,, Math, ., min, (, column, +, 1, ,, itemCount, -, 1, ), ), ;, double, xx2, =]
[,, Math, ., min, (, column, +, 1, ,, itemCount, -, 1, ), ), ;, double, xx2, =, domainAxis, .]
[), ;, double, xx2, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge]
[., min, (, column, +, 1, ,, itemCount, -, 1, ), ), ;, double, xx2, =, domainAxis, ., getCategoryEnd, (]
[,, itemCount, -, 1, ), ), ;, double, xx2, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,]
[+, 1, ,, itemCount, -, 1, ), ), ;, double, xx2, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (]
[,, itemCount, -, 1, ), ), ;, double, xx2, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,]
[), ), ;, double, xx2, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, .]
[-, 1, ), ), ;, double, xx2, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[), ), ;, double, xx2, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, .]
[;, double, xxLeft, =, xx0, ;, double, xxRight, =, xx2, ;, double, [, ], stackLeft, =, averageStackValues, (, stack0, ,]
[., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, xxLeft]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, xxLeft, =, xx0, ;, double]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, xxLeft, =, xx0, ;, double, xxRight, =, xx2, ;]
[,, plot, ., getDomainAxisEdge, (, ), ), ;, double, xxLeft, =, xx0, ;, double, xxRight, =, xx2, ;, double, []
[), ;, double, xxLeft, =, xx0, ;, double, xxRight, =, xx2, ;, double, [, ], stackLeft, =, averageStackValues, (, stack0]
[., getDomainAxisEdge, (, ), ), ;, double, xxLeft, =, xx0, ;, double, xxRight, =, xx2, ;, double, [, ], stackLeft]
[;, double, xxRight, =, xx2, ;, double, [, ], stackLeft, =, averageStackValues, (, stack0, ,, stack1, ), ;, double, []
[;, double, [, ], stackLeft, =, averageStackValues, (, stack0, ,, stack1, ), ;, double, [, ], stackRight, =, averageStackValues, (]
[;, double, [, ], stackRight, =, averageStackValues, (, stack1, ,, stack2, ), ;, double, [, ], adjStackLeft, =, adjustedStackValues, (]
[,, stack1, ), ;, double, [, ], stackRight, =, averageStackValues, (, stack1, ,, stack2, ), ;, double, [, ], adjStackLeft]
[), ;, double, [, ], stackRight, =, averageStackValues, (, stack1, ,, stack2, ), ;, double, [, ], adjStackLeft, =, adjustedStackValues]
[;, double, [, ], adjStackLeft, =, adjustedStackValues, (, stack0, ,, stack1, ), ;, double, [, ], adjStackRight, =, adjustedStackValues, (]
[,, stack2, ), ;, double, [, ], adjStackLeft, =, adjustedStackValues, (, stack0, ,, stack1, ), ;, double, [, ], adjStackRight]
[), ;, double, [, ], adjStackLeft, =, adjustedStackValues, (, stack0, ,, stack1, ), ;, double, [, ], adjStackRight, =, adjustedStackValues]
[;, double, [, ], adjStackRight, =, adjustedStackValues, (, stack1, ,, stack2, ), ;, float, transY1, ;, RectangleEdge, edge1, =, plot]
[,, stack1, ), ;, double, [, ], adjStackRight, =, adjustedStackValues, (, stack1, ,, stack2, ), ;, float, transY1, ;, RectangleEdge]
[), ;, double, [, ], adjStackRight, =, adjustedStackValues, (, stack1, ,, stack2, ), ;, float, transY1, ;, RectangleEdge, edge1, =]
[;, float, transY1, ;, RectangleEdge, edge1, =, plot, ., getRangeAxisEdge, (, ), ;, GeneralPath, left, =, new, GeneralPath, (, )]
[,, stack2, ), ;, float, transY1, ;, RectangleEdge, edge1, =, plot, ., getRangeAxisEdge, (, ), ;, GeneralPath, left, =, new]
[), ;, float, transY1, ;, RectangleEdge, edge1, =, plot, ., getRangeAxisEdge, (, ), ;, GeneralPath, left, =, new, GeneralPath, (]
[;, GeneralPath, left, =, new, GeneralPath, (, ), ;, GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (, y1]
[., getRangeAxisEdge, (, ), ;, GeneralPath, left, =, new, GeneralPath, (, ), ;, GeneralPath, right, =, new, GeneralPath, (, )]
[;, GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float]
[;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1]
[), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,]
[>=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 1, ], ,]
[), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;]
[;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,, edge1, )]
[;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,, edge1, )]
[., valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float]
[,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1, ]]
[+, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D]
[,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1, ]]
[[, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1]
[], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1]
[,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea]
[), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,, edge1]
[;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, )]
[;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, )]
[., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis]
[,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ]]
[[, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft]
[], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1]
[,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea]
[), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,, edge1]
[;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft]
[;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft]
[., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {]
[,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +, y1]
[[, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (]
[], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +]
[,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +, y1, ), /]
[), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +]
[), {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft]
[>=, 0.0, ), {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 1, ], ;]
[), {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft]
[;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left, .]
[+, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,]
[/, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,]
[), /, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft]
[+, y1, ), /, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D]
[), /, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft]
[+, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,]
[;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left, .]
[[, 1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, )]
[], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left]
[;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, )]
[;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, )]
[., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1]
[,, dataArea, ,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, .]
[,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (]
[), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float]
[;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,]
[,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (]
[,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (]
[), ;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float]
[;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,]
[,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (]
[,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (]
[), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float]
[;, left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (, ), ;, }]
[., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,]
[,, transStackLeft, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (]
[,, transStackLeft, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (]
[), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (, ), ;]
[;, left, ., closePath, (, ), ;, }, else, {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1]
[., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (, ), ;, }, else, {]
[,, transYLeft, ), ;, left, ., closePath, (, ), ;, }, else, {, left, ., moveTo, (, (, float, )]
[,, transYLeft, ), ;, left, ., closePath, (, ), ;, }, else, {, left, ., moveTo, (, (, float, )]
[), ;, left, ., closePath, (, ), ;, }, else, {, left, ., moveTo, (, (, float, ), xx1, ,]
[;, }, else, {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (]
[., closePath, (, ), ;, }, else, {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,]
[,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (]
[,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (]
[), ;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float]
[;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., closePath, (, ), ;, }]
[., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,]
[,, transY1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., closePath, (]
[,, transY1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., closePath, (]
[), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., closePath, (, ), ;]
[;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, []
[., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight]
[,, transStackLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D]
[,, transStackLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D]
[), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight]
[;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ], ,, dataArea, ,, edge1]
[., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ]]
[;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight]
[;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight]
[., valueToJava2D, (, adjStackRight, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {]
[,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +, y2]
[[, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (]
[], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +]
[,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +, y2, ), /]
[), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +, y2, ), /, 2.0, +]
[), {, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 1, ], ;, float, transYRight]
[>=, 0.0, ), {, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 1, ], ;]
[), {, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 1, ], ;, float, transYRight]
[;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right, .]
[+, stackRight, [, 1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,]
[/, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,]
[), /, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright]
[+, y2, ), /, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D]
[), /, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright]
[+, stackRight, [, 1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,]
[;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right, .]
[[, 1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, )]
[], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right]
[;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, )]
[;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, )]
[., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1]
[,, dataArea, ,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, .]
[,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (]
[), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float]
[;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,]
[,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (]
[,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (]
[), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float]
[;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,]
[,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (]
[,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (]
[), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float]
[;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }]
[., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,]
[,, transYRight, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (]
[,, transYRight, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (]
[), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;]
[;, right, ., closePath, (, ), ;, }, else, {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1]
[., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {]
[,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {, right, ., moveTo, (, (, float, )]
[,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {, right, ., moveTo, (, (, float, )]
[), ;, right, ., closePath, (, ), ;, }, else, {, right, ., moveTo, (, (, float, ), xx1, ,]
[;, }, else, {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (]
[., closePath, (, ), ;, }, else, {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,]
[,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (]
[,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (]
[), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float]
[;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }]
[., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,]
[,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (]
[,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (]
[), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;]
[;, right, ., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }, else]
[,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis]
[,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis]
[), ;, right, ., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D]
[;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 0, ]]
[., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;]
[;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,, edge1, )]
[;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,, edge1, )]
[., valueToJava2D, (, y1, +, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float]
[,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0, ]]
[+, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D]
[,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0, ]]
[[, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1]
[], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0]
[,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea]
[), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,, edge1]
[;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, )]
[;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, )]
[., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis]
[,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ]]
[[, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft]
[], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0]
[,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea]
[), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1]
[;, if, (, y0, >=, 0.0, ), {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[;, if, (, y0, >=, 0.0, ), {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {]
[,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, left, ., moveTo, (, (, float, )]
[[, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, left, ., moveTo, (]
[], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, left, ., moveTo, (, (, float]
[,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, left, ., moveTo, (, (, float, ), xx1, ,]
[), ;, if, (, y0, >=, 0.0, ), {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, )]
[), {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float]
[>=, 0.0, ), {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (]
[), {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float]
[;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,]
[,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (]
[,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (]
[), ;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float]
[;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., clone, (, ), ;, }]
[., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,]
[,, transY1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., clone, (]
[,, transY1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., clone, (]
[), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., clone, (, ), ;]
[;, left, ., clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +, y1, ), /, 2.0]
[., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., clone, (, ), ;, }, else, {]
[,, transStackLeft, ), ;, left, ., clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +, y1]
[,, transStackLeft, ), ;, left, ., clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +, y1]
[), ;, left, ., clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +, y1, ), /]
[;, }, else, {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 0, ], ;]
[., clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft]
[;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left, .]
[+, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,]
[/, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,]
[), /, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft]
[+, y1, ), /, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D]
[), /, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft]
[+, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,]
[;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left, .]
[[, 0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, )]
[], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left]
[;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, )]
[;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, )]
[., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1]
[,, dataArea, ,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, .]
[,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (]
[), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float]
[;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,]
[,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (]
[,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (]
[), ;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float]
[;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,]
[,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (]
[,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (]
[), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float]
[;, left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (, ), ;, }]
[., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,]
[,, transStackLeft, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (]
[,, transStackLeft, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (]
[), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (, ), ;]
[;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, []
[., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight]
[,, transYLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D]
[,, transYLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D]
[), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight]
[;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,, edge1]
[., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ]]
[;, if, (, y2, >=, 0.0, ), {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[;, if, (, y2, >=, 0.0, ), {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {]
[,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, right, ., moveTo, (, (, float, )]
[[, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, right, ., moveTo, (]
[], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, right, ., moveTo, (, (, float]
[,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, right, ., moveTo, (, (, float, ), xx1, ,]
[), ;, if, (, y2, >=, 0.0, ), {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, )]
[), {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float]
[>=, 0.0, ), {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (]
[), {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float]
[;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,]
[,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (]
[,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (]
[), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float]
[;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }]
[., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,]
[,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (]
[,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (]
[), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;]
[;, right, ., closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +, y2, ), /, 2.0]
[., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {]
[,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +, y2]
[,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +, y2]
[), ;, right, ., closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +, y2, ), /]
[;, }, else, {, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 0, ], ;]
[., closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight]
[;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right, .]
[+, stackRight, [, 0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,]
[/, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,]
[), /, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright]
[+, y2, ), /, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D]
[), /, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright]
[+, stackRight, [, 0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,]
[;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right, .]
[[, 0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, )]
[], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right]
[;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, )]
[;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, )]
[., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1]
[,, dataArea, ,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, .]
[,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (]
[), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float]
[;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,]
[,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (]
[,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (]
[), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float]
[;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,]
[,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (]
[,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (]
[), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float]
[;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }]
[., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,]
[,, transYRight, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (]
[,, transYRight, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (]
[), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;]
[;, right, ., closePath, (, ), ;, }, }, g2, ., setPaint, (, getItemPaint, (, row, ,, column, ,, selected]
[., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }, g2]
[,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }, g2, ., setPaint, (, getItemPaint, (, row, ,]
[,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }, g2, ., setPaint, (, getItemPaint, (, row, ,]
[), ;, right, ., closePath, (, ), ;, }, }, g2, ., setPaint, (, getItemPaint, (, row, ,, column, ,]
[;, }, }, g2, ., setPaint, (, getItemPaint, (, row, ,, column, ,, selected, ), ), ;, g2, ., setStroke]
[., closePath, (, ), ;, }, }, g2, ., setPaint, (, getItemPaint, (, row, ,, column, ,, selected, ), )]
[;, g2, ., setStroke, (, getItemStroke, (, row, ,, column, ,, selected, ), ), ;, Paint, itemPaint, =, getItemPaint, (]
[., setPaint, (, getItemPaint, (, row, ,, column, ,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (, row]
[), ;, g2, ., setStroke, (, getItemStroke, (, row, ,, column, ,, selected, ), ), ;, Paint, itemPaint, =, getItemPaint]
[,, column, ,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (, row, ,, column, ,, selected, ), )]
[,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (, row, ,, column, ,, selected, ), ), ;, Paint]
[), ), ;, g2, ., setStroke, (, getItemStroke, (, row, ,, column, ,, selected, ), ), ;, Paint, itemPaint, =]
[;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, if, (, pass, ==, 0, ), {]
[., setStroke, (, getItemStroke, (, row, ,, column, ,, selected, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,]
[), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, if, (, pass, ==, 0, )]
[,, column, ,, selected, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, if]
[,, selected, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, if, (, pass]
[), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, if, (, pass, ==, 0]
[;, if, (, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, left]
[,, column, ,, selected, ), ;, if, (, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;]
[,, selected, ), ;, if, (, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;, g2, .]
[), ;, if, (, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (]
[), {, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, left, ), ;, g2, ., fill, (]
[==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, left, ), ;, g2, .]
[), {, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, left, ), ;, g2, ., fill, (]
[;, g2, ., fill, (, left, ), ;, g2, ., fill, (, right, ), ;, }, if, (, entities, !=]
[., setPaint, (, itemPaint, ), ;, g2, ., fill, (, left, ), ;, g2, ., fill, (, right, ), ;]
[), ;, g2, ., fill, (, left, ), ;, g2, ., fill, (, right, ), ;, }, if, (, entities]
[;, g2, ., fill, (, right, ), ;, }, if, (, entities, !=, null, ), {, GeneralPath, gp, =, new]
[., fill, (, left, ), ;, g2, ., fill, (, right, ), ;, }, if, (, entities, !=, null, )]
[), ;, g2, ., fill, (, right, ), ;, }, if, (, entities, !=, null, ), {, GeneralPath, gp, =]
[;, }, if, (, entities, !=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;, gp, .]
[., fill, (, right, ), ;, }, if, (, entities, !=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (]
[), ;, }, if, (, entities, !=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;, gp]
[), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;, gp, ., append, (, right, ,, false, ), ;]
[!=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;, gp, ., append, (, right, ,, false]
[), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;, gp, ., append, (, right, ,, false, ), ;]
[;, gp, ., append, (, right, ,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,]
[), ;, gp, ., append, (, right, ,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea]
[;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,, dataset, ,, row, ,, column, ,, selected, ), ;]
[., append, (, right, ,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,, dataset, ,]
[,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,, dataset, ,, row, ,, column, ,]
[), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,, dataset, ,, row, ,, column, ,, selected, )]
[=, gp, ;, addEntity, (, entities, ,, entityArea, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }]
[;, addEntity, (, entities, ,, entityArea, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, double]
[;, }, }, protected, double, getPreviousHeight, (, CategoryDataset, dataset, ,, int, series, ,, int, category, ), {, double, result, =]
[,, entityArea, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, double, getPreviousHeight, (, CategoryDataset, dataset]
[,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, double, getPreviousHeight, (, CategoryDataset, dataset, ,, int]
[,, row, ,, column, ,, selected, ), ;, }, }, protected, double, getPreviousHeight, (, CategoryDataset, dataset, ,, int, series, ,]
[,, column, ,, selected, ), ;, }, }, protected, double, getPreviousHeight, (, CategoryDataset, dataset, ,, int, series, ,, int, category]
[,, selected, ), ;, }, }, protected, double, getPreviousHeight, (, CategoryDataset, dataset, ,, int, series, ,, int, category, ), {]
[), ;, }, }, protected, double, getPreviousHeight, (, CategoryDataset, dataset, ,, int, series, ,, int, category, ), {, double, result]
[;, Number, n, ;, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =, DataUtilities, .]
[;, if, (, this, ., renderAsPercentages, ), {, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, category, ), ;, }]
[), {, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, category, ), ;, }, for, (, int, i, =, 0]
[., renderAsPercentages, ), {, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, category, ), ;, }, for, (, int, i]
[=, DataUtilities, ., calculateColumnTotal, (, dataset, ,, category, ), ;, }, for, (, int, i, =, 0, ;, i, <]
[;, }, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, n, =, dataset]
[., calculateColumnTotal, (, dataset, ,, category, ), ;, }, for, (, int, i, =, 0, ;, i, <, series, ;]
[,, category, ), ;, }, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {]
[), ;, }, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, n, =]
[;, i, <, series, ;, i, ++, ), {, n, =, dataset, ., getValue, (, i, ,, category, ), ;]
[;, i, ++, ), {, n, =, dataset, ., getValue, (, i, ,, category, ), ;, if, (, n, !=]
[<, series, ;, i, ++, ), {, n, =, dataset, ., getValue, (, i, ,, category, ), ;, if, (]
[;, i, ++, ), {, n, =, dataset, ., getValue, (, i, ,, category, ), ;, if, (, n, !=]
[), {, n, =, dataset, ., getValue, (, i, ,, category, ), ;, if, (, n, !=, null, ), {]
[++, ), {, n, =, dataset, ., getValue, (, i, ,, category, ), ;, if, (, n, !=, null, )]
[=, dataset, ., getValue, (, i, ,, category, ), ;, if, (, n, !=, null, ), {, double, v, =]
[;, if, (, n, !=, null, ), {, double, v, =, n, ., doubleValue, (, ), ;, if, (, this]
[., getValue, (, i, ,, category, ), ;, if, (, n, !=, null, ), {, double, v, =, n, .]
[,, category, ), ;, if, (, n, !=, null, ), {, double, v, =, n, ., doubleValue, (, ), ;]
[), ;, if, (, n, !=, null, ), {, double, v, =, n, ., doubleValue, (, ), ;, if, (]
[), {, double, v, =, n, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, v, =]
[!=, null, ), {, double, v, =, n, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {]
[), {, double, v, =, n, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, v, =]
[;, if, (, this, ., renderAsPercentages, ), {, v, =, v, /, total, ;, }, result, +=, v, ;, }]
[., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, v, =, v, /, total, ;, }, result]
[), {, v, =, v, /, total, ;, }, result, +=, v, ;, }, }, return, result, ;, }, protected]
[., renderAsPercentages, ), {, v, =, v, /, total, ;, }, result, +=, v, ;, }, }, return, result, ;]
[=, v, /, total, ;, }, result, +=, v, ;, }, }, return, result, ;, }, protected, double, [, ]]
[;, }, result, +=, v, ;, }, }, return, result, ;, }, protected, double, [, ], getStackValues, (, CategoryDataset, dataset]
[/, total, ;, }, result, +=, v, ;, }, }, return, result, ;, }, protected, double, [, ], getStackValues, (]
[;, }, result, +=, v, ;, }, }, return, result, ;, }, protected, double, [, ], getStackValues, (, CategoryDataset, dataset]
[+=, v, ;, }, }, return, result, ;, }, protected, double, [, ], getStackValues, (, CategoryDataset, dataset, ,, int, series]
[;, }, }, return, result, ;, }, protected, double, [, ], getStackValues, (, CategoryDataset, dataset, ,, int, series, ,, int]
[;, }, protected, double, [, ], getStackValues, (, CategoryDataset, dataset, ,, int, series, ,, int, index, ), {, double, []
[;, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, if, (, isSeriesVisible, (]
[], ;, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, if, (, isSeriesVisible]
[;, i, <, series, ;, i, ++, ), {, if, (, isSeriesVisible, (, i, ), ), {, double, v, =]
[;, i, ++, ), {, if, (, isSeriesVisible, (, i, ), ), {, double, v, =, 0.0, ;, Number, n]
[<, series, ;, i, ++, ), {, if, (, isSeriesVisible, (, i, ), ), {, double, v, =, 0.0, ;]
[;, i, ++, ), {, if, (, isSeriesVisible, (, i, ), ), {, double, v, =, 0.0, ;, Number, n]
[), {, if, (, isSeriesVisible, (, i, ), ), {, double, v, =, 0.0, ;, Number, n, =, dataset, .]
[++, ), {, if, (, isSeriesVisible, (, i, ), ), {, double, v, =, 0.0, ;, Number, n, =, dataset]
[), {, double, v, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, i, ,, index, ), ;, if]
[), ), {, double, v, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, i, ,, index, ), ;]
[;, Number, n, =, dataset, ., getValue, (, i, ,, index, ), ;, if, (, n, !=, null, ), {]
[;, if, (, n, !=, null, ), {, v, =, n, ., doubleValue, (, ), ;, }, if, (, !]
[., getValue, (, i, ,, index, ), ;, if, (, n, !=, null, ), {, v, =, n, ., doubleValue]
[,, index, ), ;, if, (, n, !=, null, ), {, v, =, n, ., doubleValue, (, ), ;, }]
[), ;, if, (, n, !=, null, ), {, v, =, n, ., doubleValue, (, ), ;, }, if, (]
[), {, v, =, n, ., doubleValue, (, ), ;, }, if, (, !, Double, ., isNaN, (, v, )]
[!=, null, ), {, v, =, n, ., doubleValue, (, ), ;, }, if, (, !, Double, ., isNaN, (]
[), {, v, =, n, ., doubleValue, (, ), ;, }, if, (, !, Double, ., isNaN, (, v, )]
[=, n, ., doubleValue, (, ), ;, }, if, (, !, Double, ., isNaN, (, v, ), ), {, if]
[;, }, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, v, >=, 0.0, ), {]
[., doubleValue, (, ), ;, }, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, v]
[), {, if, (, v, >=, 0.0, ), {, result, [, 1, ], +=, v, ;, }, else, {, result]
[), {, if, (, v, >=, 0.0, ), {, result, [, 1, ], +=, v, ;, }, else, {, result]
[., isNaN, (, v, ), ), {, if, (, v, >=, 0.0, ), {, result, [, 1, ], +=, v]
[), ), {, if, (, v, >=, 0.0, ), {, result, [, 1, ], +=, v, ;, }, else, {]
[), {, result, [, 1, ], +=, v, ;, }, else, {, result, [, 0, ], +=, v, ;, }]
[>=, 0.0, ), {, result, [, 1, ], +=, v, ;, }, else, {, result, [, 0, ], +=, v]
[), {, result, [, 1, ], +=, v, ;, }, else, {, result, [, 0, ], +=, v, ;, }]
[+=, v, ;, }, else, {, result, [, 0, ], +=, v, ;, }, }, }, }, return, result, ;]
[[, 1, ], +=, v, ;, }, else, {, result, [, 0, ], +=, v, ;, }, }, }, }]
[], +=, v, ;, }, else, {, result, [, 0, ], +=, v, ;, }, }, }, }, return, result]
[;, }, else, {, result, [, 0, ], +=, v, ;, }, }, }, }, return, result, ;, }, private]
[+=, v, ;, }, }, }, }, return, result, ;, }, private, double, [, ], averageStackValues, (, double, [, ]]
[[, 0, ], +=, v, ;, }, }, }, }, return, result, ;, }, private, double, [, ], averageStackValues, (]
[], +=, v, ;, }, }, }, }, return, result, ;, }, private, double, [, ], averageStackValues, (, double, []
[;, }, }, }, }, return, result, ;, }, private, double, [, ], averageStackValues, (, double, [, ], stack1, ,]
[;, }, private, double, [, ], averageStackValues, (, double, [, ], stack1, ,, double, [, ], stack2, ), {, double]
[;, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;]
[], ;, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0]
[=, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =]
[[, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, []
[], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ]]
[;, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;]
[/, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /]
[), /, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], )]
[+, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +]
[[, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (, stack1, []
[], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ]]
[), /, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], )]
[[, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, []
[], ), /, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ]]
[;, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;]
[=, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;, return, result, ;, }, private]
[[, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;, return, result]
[], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;, return, result, ;, }]
[;, return, result, ;, }, private, double, [, ], adjustedStackValues, (, double, [, ], stack1, ,, double, [, ], stack2]
[/, 2.0, ;, return, result, ;, }, private, double, [, ], adjustedStackValues, (, double, [, ], stack1, ,, double, []
[), /, 2.0, ;, return, result, ;, }, private, double, [, ], adjustedStackValues, (, double, [, ], stack1, ,, double]
[+, stack2, [, 1, ], ), /, 2.0, ;, return, result, ;, }, private, double, [, ], adjustedStackValues, (, double]
[[, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;, return, result, ;, }, private, double, [, ]]
[], +, stack2, [, 1, ], ), /, 2.0, ;, return, result, ;, }, private, double, [, ], adjustedStackValues, (]
[), /, 2.0, ;, return, result, ;, }, private, double, [, ], adjustedStackValues, (, double, [, ], stack1, ,, double]
[[, 1, ], ), /, 2.0, ;, return, result, ;, }, private, double, [, ], adjustedStackValues, (, double, [, ]]
[], ), /, 2.0, ;, return, result, ;, }, private, double, [, ], adjustedStackValues, (, double, [, ], stack1, ,]
[;, return, result, ;, }, private, double, [, ], adjustedStackValues, (, double, [, ], stack1, ,, double, [, ], stack2]
[;, }, private, double, [, ], adjustedStackValues, (, double, [, ], stack1, ,, double, [, ], stack2, ), {, double]
[;, if, (, stack1, [, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==, 0.0, ), {, result, []
[], ;, if, (, stack1, [, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==, 0.0, ), {, result]
[), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, []
[||, stack2, [, 0, ], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result]
[==, 0.0, ||, stack2, [, 0, ], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else]
[[, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==, 0.0, ), {, result, [, 0, ], =, 0.0]
[], ==, 0.0, ||, stack2, [, 0, ], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }]
[||, stack2, [, 0, ], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result]
[), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, []
[==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (]
[[, 0, ], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0]
[], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =]
[), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, []
[=, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0]
[[, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, [, 0, ], +]
[], =, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, []
[;, }, else, {, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], )]
[=, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, []
[[, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if]
[], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1]
[;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0, ), {, result]
[/, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0, )]
[), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0]
[+, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2]
[[, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==]
[], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||]
[), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0]
[[, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1]
[], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==]
[;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0, ), {, result]
[), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, []
[||, stack2, [, 1, ], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result]
[==, 0.0, ||, stack2, [, 1, ], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else]
[[, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0, ), {, result, [, 1, ], =, 0.0]
[], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }]
[||, stack2, [, 1, ], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result]
[), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, []
[==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (]
[[, 1, ], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1]
[], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =]
[), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, []
[=, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1]
[[, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, [, 1, ], +]
[], =, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, []
[;, }, else, {, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], )]
[=, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;, }, return, result, ;, }]
[[, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;, }, return]
[], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;, }, return, result, ;]
[;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[/, 2.0, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), /, 2.0, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj]
[+, stack2, [, 1, ], ), /, 2.0, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj]
[[, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;, }, return, result, ;, }, public, boolean, equals]
[], +, stack2, [, 1, ], ), /, 2.0, ;, }, return, result, ;, }, public, boolean, equals, (, Object]
[), /, 2.0, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj]
[[, 1, ], ), /, 2.0, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {]
[], ), /, 2.0, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, StackedAreaRenderer, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, StackedAreaRenderer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, StackedAreaRenderer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, StackedAreaRenderer, ), ), {, return, false, ;, }, StackedAreaRenderer, that, =, (]
[), {, return, false, ;, }, StackedAreaRenderer, that, =, (, StackedAreaRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=]
[), {, return, false, ;, }, StackedAreaRenderer, that, =, (, StackedAreaRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=]
[), ), {, return, false, ;, }, StackedAreaRenderer, that, =, (, StackedAreaRenderer, ), obj, ;, if, (, this, ., renderAsPercentages]
[instanceof, StackedAreaRenderer, ), ), {, return, false, ;, }, StackedAreaRenderer, that, =, (, StackedAreaRenderer, ), obj, ;, if, (, this]
[;, }, StackedAreaRenderer, that, =, (, StackedAreaRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, )]
[;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals]
[;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[!=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[;, }, return, super, ., equals, (, obj, ), ;, }, }]
[;, }, }]
[., equals, (, obj, ), ;, }, }]
[), ;, }, }]
