[=, functionName, ;, this, ., symbol, =, symbol, ;, }, }, private, static, Logger, logger, =, Logger, ., getLogger, (]
[., functionName, =, functionName, ;, this, ., symbol, =, symbol, ;, }, }, private, static, Logger, logger, =, Logger, .]
[;, this, ., symbol, =, symbol, ;, }, }, private, static, Logger, logger, =, Logger, ., getLogger, (, JsFunctionParser, .]
[=, symbol, ;, }, }, private, static, Logger, logger, =, Logger, ., getLogger, (, JsFunctionParser, ., class, ., getName, (]
[., symbol, =, symbol, ;, }, }, private, static, Logger, logger, =, Logger, ., getLogger, (, JsFunctionParser, ., class, .]
[;, }, }, private, static, Logger, logger, =, Logger, ., getLogger, (, JsFunctionParser, ., class, ., getName, (, ), )]
[;, private, Pattern, pattern, ;, private, Matcher, matcher, ;, private, Collection, <, SymbolInfo, >, symbols, ;, private, Collection, <, String]
[., getLogger, (, JsFunctionParser, ., class, ., getName, (, ), ), ;, private, Pattern, pattern, ;, private, Matcher, matcher, ;]
[), ;, private, Pattern, pattern, ;, private, Matcher, matcher, ;, private, Collection, <, SymbolInfo, >, symbols, ;, private, Collection, <]
[., getName, (, ), ), ;, private, Pattern, pattern, ;, private, Matcher, matcher, ;, private, Collection, <, SymbolInfo, >, symbols]
[), ;, functionsToParse, =, functions, ;, pattern, =, getPattern, (, functions, ), ;, matcher, =, pattern, ., matcher, (, ""]
[=, functions, ;, pattern, =, getPattern, (, functions, ), ;, matcher, =, pattern, ., matcher, (, "", ), ;, }]
[;, pattern, =, getPattern, (, functions, ), ;, matcher, =, pattern, ., matcher, (, "", ), ;, }, private, Pattern]
[=, getPattern, (, functions, ), ;, matcher, =, pattern, ., matcher, (, "", ), ;, }, private, Pattern, getPattern, (]
[;, matcher, =, pattern, ., matcher, (, "", ), ;, }, private, Pattern, getPattern, (, Collection, <, String, >, functions]
[), ;, matcher, =, pattern, ., matcher, (, "", ), ;, }, private, Pattern, getPattern, (, Collection, <, String, >]
[=, pattern, ., matcher, (, "", ), ;, }, private, Pattern, getPattern, (, Collection, <, String, >, functions, ), {]
[;, }, private, Pattern, getPattern, (, Collection, <, String, >, functions, ), {, StringBuilder, sb, =, new, StringBuilder, (, "(?:^|;)\\s*("]
[., matcher, (, "", ), ;, }, private, Pattern, getPattern, (, Collection, <, String, >, functions, ), {, StringBuilder, sb]
[), ;, }, private, Pattern, getPattern, (, Collection, <, String, >, functions, ), {, StringBuilder, sb, =, new, StringBuilder, (]
[;, for, (, String, function, :, functions, ), {, sb, ., append, (, Pattern, ., quote, (, function, ), +]
[), ;, for, (, String, function, :, functions, ), {, sb, ., append, (, Pattern, ., quote, (, function, )]
[), {, sb, ., append, (, Pattern, ., quote, (, function, ), +, "|", ), ;, }, sb, ., deleteCharAt]
[;, }, sb, ., deleteCharAt, (, sb, ., length, (, ), -, 1, ), ;, sb, ., append, (, ")\\s*\\((.*?)\\)"]
[., append, (, Pattern, ., quote, (, function, ), +, "|", ), ;, }, sb, ., deleteCharAt, (, sb, .]
[), ;, }, sb, ., deleteCharAt, (, sb, ., length, (, ), -, 1, ), ;, sb, ., append, (]
[+, "|", ), ;, }, sb, ., deleteCharAt, (, sb, ., length, (, ), -, 1, ), ;, sb, .]
[., quote, (, function, ), +, "|", ), ;, }, sb, ., deleteCharAt, (, sb, ., length, (, ), -]
[), +, "|", ), ;, }, sb, ., deleteCharAt, (, sb, ., length, (, ), -, 1, ), ;, sb]
[), ;, }, sb, ., deleteCharAt, (, sb, ., length, (, ), -, 1, ), ;, sb, ., append, (]
[;, sb, ., append, (, ")\\s*\\((.*?)\\)", ), ;, return, Pattern, ., compile, (, sb, ., toString, (, ), ), ;]
[., deleteCharAt, (, sb, ., length, (, ), -, 1, ), ;, sb, ., append, (, ")\\s*\\((.*?)\\)", ), ;, return]
[), ;, sb, ., append, (, ")\\s*\\((.*?)\\)", ), ;, return, Pattern, ., compile, (, sb, ., toString, (, ), )]
[-, 1, ), ;, sb, ., append, (, ")\\s*\\((.*?)\\)", ), ;, return, Pattern, ., compile, (, sb, ., toString, (]
[., length, (, ), -, 1, ), ;, sb, ., append, (, ")\\s*\\((.*?)\\)", ), ;, return, Pattern, ., compile, (]
[), ;, sb, ., append, (, ")\\s*\\((.*?)\\)", ), ;, return, Pattern, ., compile, (, sb, ., toString, (, ), )]
[;, return, Pattern, ., compile, (, sb, ., toString, (, ), ), ;, }, public, Collection, <, SymbolInfo, >, parseFile]
[., append, (, ")\\s*\\((.*?)\\)", ), ;, return, Pattern, ., compile, (, sb, ., toString, (, ), ), ;, }, public]
[), ;, return, Pattern, ., compile, (, sb, ., toString, (, ), ), ;, }, public, Collection, <, SymbolInfo, >]
[;, }, public, Collection, <, SymbolInfo, >, parseFile, (, String, filePath, ,, String, fileContents, ), {, return, parseReader, (, filePath]
[., compile, (, sb, ., toString, (, ), ), ;, }, public, Collection, <, SymbolInfo, >, parseFile, (, String, filePath]
[), ;, }, public, Collection, <, SymbolInfo, >, parseFile, (, String, filePath, ,, String, fileContents, ), {, return, parseReader, (]
[., toString, (, ), ), ;, }, public, Collection, <, SymbolInfo, >, parseFile, (, String, filePath, ,, String, fileContents, )]
[;, }, private, Collection, <, SymbolInfo, >, parseReader, (, String, filePath, ,, Reader, fileContents, ), {, symbols, =, Lists, .]
[,, new, StringReader, (, fileContents, ), ), ;, }, private, Collection, <, SymbolInfo, >, parseReader, (, String, filePath, ,, Reader]
[), ;, }, private, Collection, <, SymbolInfo, >, parseReader, (, String, filePath, ,, Reader, fileContents, ), {, symbols, =, Lists]
[), ), ;, }, private, Collection, <, SymbolInfo, >, parseReader, (, String, filePath, ,, Reader, fileContents, ), {, symbols, =]
[=, Lists, ., newArrayList, (, ), ;, logger, ., fine, (, "Parsing Source: ", +, filePath, ), ;, doParse, (, filePath, ,]
[;, logger, ., fine, (, "Parsing Source: ", +, filePath, ), ;, doParse, (, filePath, ,, fileContents, ), ;, return, symbols, ;]
[., newArrayList, (, ), ;, logger, ., fine, (, "Parsing Source: ", +, filePath, ), ;, doParse, (, filePath, ,, fileContents, )]
[;, doParse, (, filePath, ,, fileContents, ), ;, return, symbols, ;, }, @, Override, protected, boolean, parseLine, (, String, line]
[., fine, (, "Parsing Source: ", +, filePath, ), ;, doParse, (, filePath, ,, fileContents, ), ;, return, symbols, ;, }, @]
[), ;, doParse, (, filePath, ,, fileContents, ), ;, return, symbols, ;, }, @, Override, protected, boolean, parseLine, (, String]
[+, filePath, ), ;, doParse, (, filePath, ,, fileContents, ), ;, return, symbols, ;, }, @, Override, protected, boolean, parseLine]
[), ;, doParse, (, filePath, ,, fileContents, ), ;, return, symbols, ;, }, @, Override, protected, boolean, parseLine, (, String]
[;, return, symbols, ;, }, @, Override, protected, boolean, parseLine, (, String, line, ), throws, ParseException, {, boolean, hasFunctions, =]
[,, fileContents, ), ;, return, symbols, ;, }, @, Override, protected, boolean, parseLine, (, String, line, ), throws, ParseException, {]
[), ;, return, symbols, ;, }, @, Override, protected, boolean, parseLine, (, String, line, ), throws, ParseException, {, boolean, hasFunctions]
[;, }, @, Override, protected, boolean, parseLine, (, String, line, ), throws, ParseException, {, boolean, hasFunctions, =, false, ;, boolean]
[;, boolean, parseLine, =, false, ;, for, (, String, function, :, functionsToParse, ), {, if, (, line, ., indexOf, (]
[;, for, (, String, function, :, functionsToParse, ), {, if, (, line, ., indexOf, (, function, ), !=, -, 1]
[), {, if, (, line, ., indexOf, (, function, ), !=, -, 1, ), {, parseLine, =, true, ;, break]
[), {, parseLine, =, true, ;, break, ;, }, }, if, (, parseLine, ), {, matcher, ., reset, (, line]
[!=, -, 1, ), {, parseLine, =, true, ;, break, ;, }, }, if, (, parseLine, ), {, matcher, .]
[., indexOf, (, function, ), !=, -, 1, ), {, parseLine, =, true, ;, break, ;, }, }, if, (]
[), !=, -, 1, ), {, parseLine, =, true, ;, break, ;, }, }, if, (, parseLine, ), {, matcher]
[), {, parseLine, =, true, ;, break, ;, }, }, if, (, parseLine, ), {, matcher, ., reset, (, line]
[), {, parseLine, =, true, ;, break, ;, }, }, if, (, parseLine, ), {, matcher, ., reset, (, line]
[=, true, ;, break, ;, }, }, if, (, parseLine, ), {, matcher, ., reset, (, line, ), ;, while]
[;, break, ;, }, }, if, (, parseLine, ), {, matcher, ., reset, (, line, ), ;, while, (, matcher]
[), {, matcher, ., reset, (, line, ), ;, while, (, matcher, ., find, (, ), ), {, hasFunctions, =]
[;, while, (, matcher, ., find, (, ), ), {, hasFunctions, =, true, ;, String, functionName, =, matcher, ., group]
[., reset, (, line, ), ;, while, (, matcher, ., find, (, ), ), {, hasFunctions, =, true, ;, String]
[), ;, while, (, matcher, ., find, (, ), ), {, hasFunctions, =, true, ;, String, functionName, =, matcher, .]
[), {, hasFunctions, =, true, ;, String, functionName, =, matcher, ., group, (, 1, ), ;, String, arg, =, parseJsString]
[., find, (, ), ), {, hasFunctions, =, true, ;, String, functionName, =, matcher, ., group, (, 1, ), ;]
[=, true, ;, String, functionName, =, matcher, ., group, (, 1, ), ;, String, arg, =, parseJsString, (, matcher, .]
[;, String, functionName, =, matcher, ., group, (, 1, ), ;, String, arg, =, parseJsString, (, matcher, ., group, (]
[;, String, arg, =, parseJsString, (, matcher, ., group, (, 2, ), ), ;, symbols, ., add, (, new, SymbolInfo]
[., group, (, 1, ), ;, String, arg, =, parseJsString, (, matcher, ., group, (, 2, ), ), ;, symbols]
[), ;, String, arg, =, parseJsString, (, matcher, ., group, (, 2, ), ), ;, symbols, ., add, (, new]
[;, symbols, ., add, (, new, SymbolInfo, (, functionName, ,, arg, ), ), ;, }, }, return, !, shortcutMode, ||]
[), ;, symbols, ., add, (, new, SymbolInfo, (, functionName, ,, arg, ), ), ;, }, }, return, !, shortcutMode]
[., group, (, 2, ), ), ;, symbols, ., add, (, new, SymbolInfo, (, functionName, ,, arg, ), ), ;]
[), ), ;, symbols, ., add, (, new, SymbolInfo, (, functionName, ,, arg, ), ), ;, }, }, return, !]
[;, }, }, return, !, shortcutMode, ||, hasFunctions, ||, CharMatcher, ., WHITESPACE, ., matchesAllOf, (, line, ), ;, }, }]
[., add, (, new, SymbolInfo, (, functionName, ,, arg, ), ), ;, }, }, return, !, shortcutMode, ||, hasFunctions, ||]
[), ;, }, }, return, !, shortcutMode, ||, hasFunctions, ||, CharMatcher, ., WHITESPACE, ., matchesAllOf, (, line, ), ;, }]
[,, arg, ), ), ;, }, }, return, !, shortcutMode, ||, hasFunctions, ||, CharMatcher, ., WHITESPACE, ., matchesAllOf, (, line]
[), ), ;, }, }, return, !, shortcutMode, ||, hasFunctions, ||, CharMatcher, ., WHITESPACE, ., matchesAllOf, (, line, ), ;]
[;, }, }]
[||, CharMatcher, ., WHITESPACE, ., matchesAllOf, (, line, ), ;, }, }]
[||, hasFunctions, ||, CharMatcher, ., WHITESPACE, ., matchesAllOf, (, line, ), ;, }, }]
[||, hasFunctions, ||, CharMatcher, ., WHITESPACE, ., matchesAllOf, (, line, ), ;, }, }]
[||, CharMatcher, ., WHITESPACE, ., matchesAllOf, (, line, ), ;, }, }]
[;, }, }]
[., matchesAllOf, (, line, ), ;, }, }]
[., WHITESPACE, ., matchesAllOf, (, line, ), ;, }, }]
[), ;, }, }]
