[public, List, <, Invocation, >, find, (, List, <, ?, >, mocks, ), {, List, <, Invocation, >, unused, =]
[{, List, <, Invocation, >, unused, =, new, LinkedList, <, Invocation, >, (, ), ;, for, (, Object, mock, :]
[<, Invocation, >, (, ), ;, for, (, Object, mock, :, mocks, ), {, InternalMockHandler, <, Object, >, handler, =]
[<, Invocation, >, (, ), ;, for, (, Object, mock, :, mocks, ), {, InternalMockHandler, <, Object, >, handler, =]
[(, Object, mock, :, mocks, ), {, InternalMockHandler, <, Object, >, handler, =, new, MockUtil, (, ), ., getMockHandler, (]
[Object, >, handler, =, new, MockUtil, (, ), ., getMockHandler, (, mock, ), ;, List, <, StubbedInvocationMatcher, >, fromSingleMock, =]
[Object, >, handler, =, new, MockUtil, (, ), ., getMockHandler, (, mock, ), ;, List, <, StubbedInvocationMatcher, >, fromSingleMock, =]
[Object, >, handler, =, new, MockUtil, (, ), ., getMockHandler, (, mock, ), ;, List, <, StubbedInvocationMatcher, >, fromSingleMock, =]
[<, StubbedInvocationMatcher, >, fromSingleMock, =, handler, ., getInvocationContainer, (, ), ., getStubbedInvocations, (, ), ;, for, (, StubbedInvocationMatcher, s, :]
[handler, ., getInvocationContainer, (, ), ., getStubbedInvocations, (, ), ;, for, (, StubbedInvocationMatcher, s, :, fromSingleMock, ), {, if, (]
[., getInvocationContainer, (, ), ., getStubbedInvocations, (, ), ;, for, (, StubbedInvocationMatcher, s, :, fromSingleMock, ), {, if, (, !]
[., getInvocationContainer, (, ), ., getStubbedInvocations, (, ), ;, for, (, StubbedInvocationMatcher, s, :, fromSingleMock, ), {, if, (, !]
[), ;, for, (, StubbedInvocationMatcher, s, :, fromSingleMock, ), {, if, (, !, s, ., wasUsed, (, ), ), {]
[), ;, for, (, StubbedInvocationMatcher, s, :, fromSingleMock, ), {, if, (, !, s, ., wasUsed, (, ), ), {]
[StubbedInvocationMatcher, s, :, fromSingleMock, ), {, if, (, !, s, ., wasUsed, (, ), ), {, unused, ., add, (]
[StubbedInvocationMatcher, s, :, fromSingleMock, ), {, if, (, !, s, ., wasUsed, (, ), ), {, unused, ., add, (]
[wasUsed, (, ), ), {, unused, ., add, (, s, ., getInvocation, (, ), ), ;, }, }, }, return]
