[;, static, final, char, DELIMITER, =, '$', ;, private, final, AbstractCompiler, compiler, ;, private, int, namedCount, =, 0, ;, private]
[., getLogger, (, NameAnonymousFunctions, ., class, ., getName, (, ), ), ;, static, final, char, DELIMITER, =, '$', ;, private]
[), ;, static, final, char, DELIMITER, =, '$', ;, private, final, AbstractCompiler, compiler, ;, private, int, namedCount, =, 0, ;]
[., getName, (, ), ), ;, static, final, char, DELIMITER, =, '$', ;, private, final, AbstractCompiler, compiler, ;, private, int]
[;, private, final, AbstractCompiler, compiler, ;, private, int, namedCount, =, 0, ;, private, int, bytesUsed, =, 0, ;, NameAnonymousFunctions, (]
[;, private, int, bytesUsed, =, 0, ;, NameAnonymousFunctions, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, }]
[;, NameAnonymousFunctions, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, }, @, Override, public, void, process, (]
[=, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, AnonymousFunctionNamingCallback, namingCallback, =]
[., compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, AnonymousFunctionNamingCallback]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, AnonymousFunctionNamingCallback, namingCallback, =, new, AnonymousFunctionNamingCallback]
[;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, namingCallback, ), ;, logger, ., fine, (, "Named ", +, namedCount, +]
[), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, namingCallback, ), ;, logger, ., fine, (, "Named ", +, namedCount]
[;, logger, ., fine, (, "Named ", +, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, }, private, class, AnonymousFunctionNamer]
[., traverse, (, compiler, ,, root, ,, namingCallback, ), ;, logger, ., fine, (, "Named ", +, namedCount, +, " anon functions using ", +]
[,, root, ,, namingCallback, ), ;, logger, ., fine, (, "Named ", +, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes", )]
[,, namingCallback, ), ;, logger, ., fine, (, "Named ", +, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, }]
[), ;, logger, ., fine, (, "Named ", +, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, }, private, class]
[;, }, private, class, AnonymousFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, private, NodeNameExtractor, nameExtractor, ;, AnonymousFunctionNamer, (, ), {, this, .]
[., fine, (, "Named ", +, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, }, private, class, AnonymousFunctionNamer, implements, AnonymousFunctionNamingCallback]
[), ;, }, private, class, AnonymousFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, private, NodeNameExtractor, nameExtractor, ;, AnonymousFunctionNamer, (, ), {, this]
[+, " bytes", ), ;, }, private, class, AnonymousFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, private, NodeNameExtractor, nameExtractor, ;, AnonymousFunctionNamer, (, )]
[+, bytesUsed, +, " bytes", ), ;, }, private, class, AnonymousFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, private, NodeNameExtractor, nameExtractor, ;, AnonymousFunctionNamer]
[+, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, }, private, class, AnonymousFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, private, NodeNameExtractor, nameExtractor]
[+, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, }, private, class, AnonymousFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, private]
[+, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, }, private, class, AnonymousFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, private, NodeNameExtractor, nameExtractor]
[+, bytesUsed, +, " bytes", ), ;, }, private, class, AnonymousFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, private, NodeNameExtractor, nameExtractor, ;, AnonymousFunctionNamer]
[+, " bytes", ), ;, }, private, class, AnonymousFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, private, NodeNameExtractor, nameExtractor, ;, AnonymousFunctionNamer, (, )]
[), ;, }, private, class, AnonymousFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, private, NodeNameExtractor, nameExtractor, ;, AnonymousFunctionNamer, (, ), {, this]
[=, new, NodeNameExtractor, (, DELIMITER, ), ;, }, private, String, getLikelyNonConflictingName, (, String, name, ), {, return, DELIMITER, +, name]
[., nameExtractor, =, new, NodeNameExtractor, (, DELIMITER, ), ;, }, private, String, getLikelyNonConflictingName, (, String, name, ), {, return, DELIMITER]
[;, }, private, String, getLikelyNonConflictingName, (, String, name, ), {, return, DELIMITER, +, name, +, DELIMITER, ;, }, @, Override]
[), ;, }, private, String, getLikelyNonConflictingName, (, String, name, ), {, return, DELIMITER, +, name, +, DELIMITER, ;, }, @]
[;, }, @, Override, public, final, String, getName, (, Node, node, ), {, return, nameExtractor, ., getName, (, node, )]
[+, DELIMITER, ;, }, @, Override, public, final, String, getName, (, Node, node, ), {, return, nameExtractor, ., getName, (]
[+, name, +, DELIMITER, ;, }, @, Override, public, final, String, getName, (, Node, node, ), {, return, nameExtractor, .]
[+, DELIMITER, ;, }, @, Override, public, final, String, getName, (, Node, node, ), {, return, nameExtractor, ., getName, (]
[;, }, @, Override, public, final, String, getName, (, Node, node, ), {, return, nameExtractor, ., getName, (, node, )]
[;, }, @, Override, public, final, void, setFunctionName, (, String, name, ,, Node, fnNode, ), {, Node, fnNameNode, =, fnNode]
[., getName, (, node, ), ;, }, @, Override, public, final, void, setFunctionName, (, String, name, ,, Node, fnNode, )]
[), ;, }, @, Override, public, final, void, setFunctionName, (, String, name, ,, Node, fnNode, ), {, Node, fnNameNode, =]
[;, String, uniqueName, =, getLikelyNonConflictingName, (, name, ), ;, fnNameNode, ., setString, (, uniqueName, ), ;, compiler, ., reportCodeChange, (]
[., getFirstChild, (, ), ;, String, uniqueName, =, getLikelyNonConflictingName, (, name, ), ;, fnNameNode, ., setString, (, uniqueName, ), ;]
[;, fnNameNode, ., setString, (, uniqueName, ), ;, compiler, ., reportCodeChange, (, ), ;, namedCount, ++, ;, bytesUsed, +=, uniqueName]
[), ;, fnNameNode, ., setString, (, uniqueName, ), ;, compiler, ., reportCodeChange, (, ), ;, namedCount, ++, ;, bytesUsed, +=]
[;, compiler, ., reportCodeChange, (, ), ;, namedCount, ++, ;, bytesUsed, +=, uniqueName, ., length, (, ), ;, }, @]
[., setString, (, uniqueName, ), ;, compiler, ., reportCodeChange, (, ), ;, namedCount, ++, ;, bytesUsed, +=, uniqueName, ., length]
[), ;, compiler, ., reportCodeChange, (, ), ;, namedCount, ++, ;, bytesUsed, +=, uniqueName, ., length, (, ), ;, }]
[;, namedCount, ++, ;, bytesUsed, +=, uniqueName, ., length, (, ), ;, }, @, Override, public, final, String, getCombinedName, (]
[., reportCodeChange, (, ), ;, namedCount, ++, ;, bytesUsed, +=, uniqueName, ., length, (, ), ;, }, @, Override, public]
[;, bytesUsed, +=, uniqueName, ., length, (, ), ;, }, @, Override, public, final, String, getCombinedName, (, String, lhs, ,]
[++, ;, bytesUsed, +=, uniqueName, ., length, (, ), ;, }, @, Override, public, final, String, getCombinedName, (, String, lhs]
[+=, uniqueName, ., length, (, ), ;, }, @, Override, public, final, String, getCombinedName, (, String, lhs, ,, String, rhs]
[;, }, @, Override, public, final, String, getCombinedName, (, String, lhs, ,, String, rhs, ), {, return, lhs, +, DELIMITER]
[., length, (, ), ;, }, @, Override, public, final, String, getCombinedName, (, String, lhs, ,, String, rhs, ), {]
[;, }, }, }]
[+, rhs, ;, }, }, }]
[+, DELIMITER, +, rhs, ;, }, }, }]
[+, rhs, ;, }, }, }]
[;, }, }, }]
