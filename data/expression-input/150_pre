[XYDataset, ;, public, class, StackedXYAreaRenderer2, extends, XYAreaRenderer2, implements, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[{, private, static, final, long, serialVersionUID, =, 7752676509764539182L, ;, private, boolean, roundXCoordinates, ;, public, StackedXYAreaRenderer2, (, ), {, this, (]
[static, final, long, serialVersionUID, =, 7752676509764539182L, ;, private, boolean, roundXCoordinates, ;, public, StackedXYAreaRenderer2, (, ), {, this, (, null, ,]
[this, (, null, ,, null, ), ;, }, public, StackedXYAreaRenderer2, (, XYToolTipGenerator, labelGenerator, ,, XYURLGenerator, urlGenerator, ), {, super, (]
[null, ,, null, ), ;, }, public, StackedXYAreaRenderer2, (, XYToolTipGenerator, labelGenerator, ,, XYURLGenerator, urlGenerator, ), {, super, (, labelGenerator, ,]
[), ;, }, public, StackedXYAreaRenderer2, (, XYToolTipGenerator, labelGenerator, ,, XYURLGenerator, urlGenerator, ), {, super, (, labelGenerator, ,, urlGenerator, ), ;]
[), ;, }, public, StackedXYAreaRenderer2, (, XYToolTipGenerator, labelGenerator, ,, XYURLGenerator, urlGenerator, ), {, super, (, labelGenerator, ,, urlGenerator, ), ;]
[StackedXYAreaRenderer2, (, XYToolTipGenerator, labelGenerator, ,, XYURLGenerator, urlGenerator, ), {, super, (, labelGenerator, ,, urlGenerator, ), ;, this, ., roundXCoordinates, =]
[(, labelGenerator, ,, urlGenerator, ), ;, this, ., roundXCoordinates, =, true, ;, }, public, boolean, getRoundXCoordinates, (, ), {, return]
[(, labelGenerator, ,, urlGenerator, ), ;, this, ., roundXCoordinates, =, true, ;, }, public, boolean, getRoundXCoordinates, (, ), {, return]
[public, boolean, getRoundXCoordinates, (, ), {, return, this, ., roundXCoordinates, ;, }, public, void, setRoundXCoordinates, (, boolean, round, ), {]
[public, boolean, getRoundXCoordinates, (, ), {, return, this, ., roundXCoordinates, ;, }, public, void, setRoundXCoordinates, (, boolean, round, ), {]
[), {, return, this, ., roundXCoordinates, ;, }, public, void, setRoundXCoordinates, (, boolean, round, ), {, this, ., roundXCoordinates, =]
[return, this, ., roundXCoordinates, ;, }, public, void, setRoundXCoordinates, (, boolean, round, ), {, this, ., roundXCoordinates, =, round, ;]
[., roundXCoordinates, =, round, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (]
[., roundXCoordinates, =, round, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (]
[=, round, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==]
[(, ), ;, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==, null, ), {, return]
[findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==, null, ), {, return, null, ;, }, double, min, =]
[findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==, null, ), {, return, null, ;, }, double, min, =]
[(, dataset, ==, null, ), {, return, null, ;, }, double, min, =, Double, ., POSITIVE_INFINITY, ;, double, max, =]
[(, dataset, ==, null, ), {, return, null, ;, }, double, min, =, Double, ., POSITIVE_INFINITY, ;, double, max, =]
[null, ;, }, double, min, =, Double, ., POSITIVE_INFINITY, ;, double, max, =, Double, ., NEGATIVE_INFINITY, ;, TableXYDataset, d, =]
[double, min, =, Double, ., POSITIVE_INFINITY, ;, double, max, =, Double, ., NEGATIVE_INFINITY, ;, TableXYDataset, d, =, (, TableXYDataset, )]
[POSITIVE_INFINITY, ;, double, max, =, Double, ., NEGATIVE_INFINITY, ;, TableXYDataset, d, =, (, TableXYDataset, ), dataset, ;, int, itemCount, =]
[POSITIVE_INFINITY, ;, double, max, =, Double, ., NEGATIVE_INFINITY, ;, TableXYDataset, d, =, (, TableXYDataset, ), dataset, ;, int, itemCount, =]
[=, (, TableXYDataset, ), dataset, ;, int, itemCount, =, d, ., getItemCount, (, ), ;, for, (, int, i, =]
[TableXYDataset, ), dataset, ;, int, itemCount, =, d, ., getItemCount, (, ), ;, for, (, int, i, =, 0, ;]
[TableXYDataset, ), dataset, ;, int, itemCount, =, d, ., getItemCount, (, ), ;, for, (, int, i, =, 0, ;]
[dataset, ;, int, itemCount, =, d, ., getItemCount, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[int, itemCount, =, d, ., getItemCount, (, ), ;, for, (, int, i, =, 0, ;, i, <, itemCount, ;]
[int, itemCount, =, d, ., getItemCount, (, ), ;, for, (, int, i, =, 0, ;, i, <, itemCount, ;]
[for, (, int, i, =, 0, ;, i, <, itemCount, ;, i, ++, ), {, double, [, ], stackValues, =]
[int, i, =, 0, ;, i, <, itemCount, ;, i, ++, ), {, double, [, ], stackValues, =, getStackValues, (]
[0, ;, i, <, itemCount, ;, i, ++, ), {, double, [, ], stackValues, =, getStackValues, (, (, TableXYDataset, )]
[i, <, itemCount, ;, i, ++, ), {, double, [, ], stackValues, =, getStackValues, (, (, TableXYDataset, ), dataset, ,]
[i, <, itemCount, ;, i, ++, ), {, double, [, ], stackValues, =, getStackValues, (, (, TableXYDataset, ), dataset, ,]
[), {, double, [, ], stackValues, =, getStackValues, (, (, TableXYDataset, ), dataset, ,, d, ., getSeriesCount, (, ), ,]
[[, ], stackValues, =, getStackValues, (, (, TableXYDataset, ), dataset, ,, d, ., getSeriesCount, (, ), ,, i, ), ;]
[stackValues, =, getStackValues, (, (, TableXYDataset, ), dataset, ,, d, ., getSeriesCount, (, ), ,, i, ), ;, min, =]
[stackValues, =, getStackValues, (, (, TableXYDataset, ), dataset, ,, d, ., getSeriesCount, (, ), ,, i, ), ;, min, =]
[(, TableXYDataset, ), dataset, ,, d, ., getSeriesCount, (, ), ,, i, ), ;, min, =, Math, ., min, (]
[), dataset, ,, d, ., getSeriesCount, (, ), ,, i, ), ;, min, =, Math, ., min, (, min, ,]
[), dataset, ,, d, ., getSeriesCount, (, ), ,, i, ), ;, min, =, Math, ., min, (, min, ,]
[,, d, ., getSeriesCount, (, ), ,, i, ), ;, min, =, Math, ., min, (, min, ,, stackValues, []
[(, ), ,, i, ), ;, min, =, Math, ., min, (, min, ,, stackValues, [, 0, ], ), ;]
[,, i, ), ;, min, =, Math, ., min, (, min, ,, stackValues, [, 0, ], ), ;, max, =]
[,, i, ), ;, min, =, Math, ., min, (, min, ,, stackValues, [, 0, ], ), ;, max, =]
[min, =, Math, ., min, (, min, ,, stackValues, [, 0, ], ), ;, max, =, Math, ., max, (]
[Math, ., min, (, min, ,, stackValues, [, 0, ], ), ;, max, =, Math, ., max, (, max, ,]
[Math, ., min, (, min, ,, stackValues, [, 0, ], ), ;, max, =, Math, ., max, (, max, ,]
[min, (, min, ,, stackValues, [, 0, ], ), ;, max, =, Math, ., max, (, max, ,, stackValues, []
[], ), ;, max, =, Math, ., max, (, max, ,, stackValues, [, 1, ], ), ;, }, if, (]
[], ), ;, max, =, Math, ., max, (, max, ,, stackValues, [, 1, ], ), ;, }, if, (]
[;, max, =, Math, ., max, (, max, ,, stackValues, [, 1, ], ), ;, }, if, (, min, ==]
[;, max, =, Math, ., max, (, max, ,, stackValues, [, 1, ], ), ;, }, if, (, min, ==]
[(, max, ,, stackValues, [, 1, ], ), ;, }, if, (, min, ==, Double, ., POSITIVE_INFINITY, ), {, return]
[[, 1, ], ), ;, }, if, (, min, ==, Double, ., POSITIVE_INFINITY, ), {, return, null, ;, }, return]
[), ;, }, if, (, min, ==, Double, ., POSITIVE_INFINITY, ), {, return, null, ;, }, return, new, Range, (]
[}, if, (, min, ==, Double, ., POSITIVE_INFINITY, ), {, return, null, ;, }, return, new, Range, (, min, ,]
[null, ;, }, return, new, Range, (, min, ,, max, ), ;, }, public, int, getPassCount, (, ), {, return]
[,, XYDataset, dataset, ,, int, series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, Shape, entityArea, =]
[series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, Shape, entityArea, =, null, ;, EntityCollection, entities, =]
[,, boolean, selected, ,, int, pass, ), {, Shape, entityArea, =, null, ;, EntityCollection, entities, =, null, ;, if, (]
[,, boolean, selected, ,, int, pass, ), {, Shape, entityArea, =, null, ;, EntityCollection, entities, =, null, ;, if, (]
[,, boolean, selected, ,, int, pass, ), {, Shape, entityArea, =, null, ;, EntityCollection, entities, =, null, ;, if, (]
[), {, Shape, entityArea, =, null, ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=]
[entityArea, =, null, ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {]
[null, ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =]
[null, ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =]
[null, ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =]
[null, ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =]
[entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, }, TableXYDataset, tdataset, =]
[., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, }, TableXYDataset, tdataset, =, (, TableXYDataset, )]
[getOwner, (, ), ., getEntityCollection, (, ), ;, }, TableXYDataset, tdataset, =, (, TableXYDataset, ), dataset, ;, PlotOrientation, orientation, =]
[getOwner, (, ), ., getEntityCollection, (, ), ;, }, TableXYDataset, tdataset, =, (, TableXYDataset, ), dataset, ;, PlotOrientation, orientation, =]
[TableXYDataset, tdataset, =, (, TableXYDataset, ), dataset, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, x1, =]
[TableXYDataset, tdataset, =, (, TableXYDataset, ), dataset, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, x1, =]
[TableXYDataset, ), dataset, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, x1, =, dataset, ., getXValue, (]
[dataset, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, x1, =, dataset, ., getXValue, (, series, ,]
[., getOrientation, (, ), ;, double, x1, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y1, =]
[., getOrientation, (, ), ;, double, x1, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y1, =]
[;, double, x1, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y1, =, dataset, ., getYValue, (]
[x1, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y1, =, dataset, ., getYValue, (, series, ,]
[(, series, ,, item, ), ;, double, y1, =, dataset, ., getYValue, (, series, ,, item, ), ;, if, (]
[(, series, ,, item, ), ;, double, y1, =, dataset, ., getYValue, (, series, ,, item, ), ;, if, (]
[), ;, double, y1, =, dataset, ., getYValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (]
[=, dataset, ., getYValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (, y1, ), ), {]
[., getYValue, (, series, ,, item, ), ;, if, (, Double, ., isNaN, (, y1, ), ), {, y1, =]
[if, (, Double, ., isNaN, (, y1, ), ), {, y1, =, 0.0, ;, }, double, [, ], stack1, =]
[Double, ., isNaN, (, y1, ), ), {, y1, =, 0.0, ;, }, double, [, ], stack1, =, getStackValues, (]
[isNaN, (, y1, ), ), {, y1, =, 0.0, ;, }, double, [, ], stack1, =, getStackValues, (, tdataset, ,]
[y1, ), ), {, y1, =, 0.0, ;, }, double, [, ], stack1, =, getStackValues, (, tdataset, ,, series, ,]
[0.0, ;, }, double, [, ], stack1, =, getStackValues, (, tdataset, ,, series, ,, item, ), ;, double, x0, =]
[0.0, ;, }, double, [, ], stack1, =, getStackValues, (, tdataset, ,, series, ,, item, ), ;, double, x0, =]
[[, ], stack1, =, getStackValues, (, tdataset, ,, series, ,, item, ), ;, double, x0, =, dataset, ., getXValue, (]
[stack1, =, getStackValues, (, tdataset, ,, series, ,, item, ), ;, double, x0, =, dataset, ., getXValue, (, series, ,]
[stack1, =, getStackValues, (, tdataset, ,, series, ,, item, ), ;, double, x0, =, dataset, ., getXValue, (, series, ,]
[tdataset, ,, series, ,, item, ), ;, double, x0, =, dataset, ., getXValue, (, series, ,, Math, ., max, (]
[tdataset, ,, series, ,, item, ), ;, double, x0, =, dataset, ., getXValue, (, series, ,, Math, ., max, (]
[series, ,, item, ), ;, double, x0, =, dataset, ., getXValue, (, series, ,, Math, ., max, (, item, -]
[item, ), ;, double, x0, =, dataset, ., getXValue, (, series, ,, Math, ., max, (, item, -, 1, ,]
[., getXValue, (, series, ,, Math, ., max, (, item, -, 1, ,, 0, ), ), ;, double, y0, =]
[., getXValue, (, series, ,, Math, ., max, (, item, -, 1, ,, 0, ), ), ;, double, y0, =]
[,, Math, ., max, (, item, -, 1, ,, 0, ), ), ;, double, y0, =, dataset, ., getYValue, (]
[., max, (, item, -, 1, ,, 0, ), ), ;, double, y0, =, dataset, ., getYValue, (, series, ,]
[., max, (, item, -, 1, ,, 0, ), ), ;, double, y0, =, dataset, ., getYValue, (, series, ,]
[-, 1, ,, 0, ), ), ;, double, y0, =, dataset, ., getYValue, (, series, ,, Math, ., max, (]
[-, 1, ,, 0, ), ), ;, double, y0, =, dataset, ., getYValue, (, series, ,, Math, ., max, (]
[,, 0, ), ), ;, double, y0, =, dataset, ., getYValue, (, series, ,, Math, ., max, (, item, -]
[), ), ;, double, y0, =, dataset, ., getYValue, (, series, ,, Math, ., max, (, item, -, 1, ,]
[dataset, ., getYValue, (, series, ,, Math, ., max, (, item, -, 1, ,, 0, ), ), ;, if, (]
[dataset, ., getYValue, (, series, ,, Math, ., max, (, item, -, 1, ,, 0, ), ), ;, if, (]
[series, ,, Math, ., max, (, item, -, 1, ,, 0, ), ), ;, if, (, Double, ., isNaN, (]
[max, (, item, -, 1, ,, 0, ), ), ;, if, (, Double, ., isNaN, (, y0, ), ), {]
[item, -, 1, ,, 0, ), ), ;, if, (, Double, ., isNaN, (, y0, ), ), {, y0, =]
[if, (, Double, ., isNaN, (, y0, ), ), {, y0, =, 0.0, ;, }, double, [, ], stack0, =]
[Double, ., isNaN, (, y0, ), ), {, y0, =, 0.0, ;, }, double, [, ], stack0, =, getStackValues, (]
[isNaN, (, y0, ), ), {, y0, =, 0.0, ;, }, double, [, ], stack0, =, getStackValues, (, tdataset, ,]
[y0, ), ), {, y0, =, 0.0, ;, }, double, [, ], stack0, =, getStackValues, (, tdataset, ,, series, ,]
[y0, ), ), {, y0, =, 0.0, ;, }, double, [, ], stack0, =, getStackValues, (, tdataset, ,, series, ,]
[y0, =, 0.0, ;, }, double, [, ], stack0, =, getStackValues, (, tdataset, ,, series, ,, Math, ., max, (]
[y0, =, 0.0, ;, }, double, [, ], stack0, =, getStackValues, (, tdataset, ,, series, ,, Math, ., max, (]
[0.0, ;, }, double, [, ], stack0, =, getStackValues, (, tdataset, ,, series, ,, Math, ., max, (, item, -]
[}, double, [, ], stack0, =, getStackValues, (, tdataset, ,, series, ,, Math, ., max, (, item, -, 1, ,]
[(, tdataset, ,, series, ,, Math, ., max, (, item, -, 1, ,, 0, ), ), ;, int, itemCount, =]
[(, tdataset, ,, series, ,, Math, ., max, (, item, -, 1, ,, 0, ), ), ;, int, itemCount, =]
[,, Math, ., max, (, item, -, 1, ,, 0, ), ), ;, int, itemCount, =, dataset, ., getItemCount, (]
[-, 1, ,, 0, ), ), ;, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, double, x2, =]
[-, 1, ,, 0, ), ), ;, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, double, x2, =]
[), ), ;, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, double, x2, =, dataset, ., getXValue, (]
[;, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, double, x2, =, dataset, ., getXValue, (, series, ,]
[;, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, double, x2, =, dataset, ., getXValue, (, series, ,]
[dataset, ., getItemCount, (, series, ), ;, double, x2, =, dataset, ., getXValue, (, series, ,, Math, ., min, (]
[dataset, ., getItemCount, (, series, ), ;, double, x2, =, dataset, ., getXValue, (, series, ,, Math, ., min, (]
[getItemCount, (, series, ), ;, double, x2, =, dataset, ., getXValue, (, series, ,, Math, ., min, (, item, +]
[series, ), ;, double, x2, =, dataset, ., getXValue, (, series, ,, Math, ., min, (, item, +, 1, ,]
[series, ), ;, double, x2, =, dataset, ., getXValue, (, series, ,, Math, ., min, (, item, +, 1, ,]
[;, double, x2, =, dataset, ., getXValue, (, series, ,, Math, ., min, (, item, +, 1, ,, itemCount, -]
[(, series, ,, Math, ., min, (, item, +, 1, ,, itemCount, -, 1, ), ), ;, double, y2, =]
[(, series, ,, Math, ., min, (, item, +, 1, ,, itemCount, -, 1, ), ), ;, double, y2, =]
[., min, (, item, +, 1, ,, itemCount, -, 1, ), ), ;, double, y2, =, dataset, ., getYValue, (]
[(, item, +, 1, ,, itemCount, -, 1, ), ), ;, double, y2, =, dataset, ., getYValue, (, series, ,]
[(, item, +, 1, ,, itemCount, -, 1, ), ), ;, double, y2, =, dataset, ., getYValue, (, series, ,]
[,, itemCount, -, 1, ), ), ;, double, y2, =, dataset, ., getYValue, (, series, ,, Math, ., min, (]
[,, itemCount, -, 1, ), ), ;, double, y2, =, dataset, ., getYValue, (, series, ,, Math, ., min, (]
[-, 1, ), ), ;, double, y2, =, dataset, ., getYValue, (, series, ,, Math, ., min, (, item, +]
[), ), ;, double, y2, =, dataset, ., getYValue, (, series, ,, Math, ., min, (, item, +, 1, ,]
[), ), ;, double, y2, =, dataset, ., getYValue, (, series, ,, Math, ., min, (, item, +, 1, ,]
[;, double, y2, =, dataset, ., getYValue, (, series, ,, Math, ., min, (, item, +, 1, ,, itemCount, -]
[getYValue, (, series, ,, Math, ., min, (, item, +, 1, ,, itemCount, -, 1, ), ), ;, if, (]
[getYValue, (, series, ,, Math, ., min, (, item, +, 1, ,, itemCount, -, 1, ), ), ;, if, (]
[Math, ., min, (, item, +, 1, ,, itemCount, -, 1, ), ), ;, if, (, Double, ., isNaN, (]
[item, +, 1, ,, itemCount, -, 1, ), ), ;, if, (, Double, ., isNaN, (, y2, ), ), {]
[1, ,, itemCount, -, 1, ), ), ;, if, (, Double, ., isNaN, (, y2, ), ), {, y2, =]
[if, (, Double, ., isNaN, (, y2, ), ), {, y2, =, 0.0, ;, }, double, [, ], stack2, =]
[Double, ., isNaN, (, y2, ), ), {, y2, =, 0.0, ;, }, double, [, ], stack2, =, getStackValues, (]
[isNaN, (, y2, ), ), {, y2, =, 0.0, ;, }, double, [, ], stack2, =, getStackValues, (, tdataset, ,]
[y2, ), ), {, y2, =, 0.0, ;, }, double, [, ], stack2, =, getStackValues, (, tdataset, ,, series, ,]
[y2, ), ), {, y2, =, 0.0, ;, }, double, [, ], stack2, =, getStackValues, (, tdataset, ,, series, ,]
[y2, =, 0.0, ;, }, double, [, ], stack2, =, getStackValues, (, tdataset, ,, series, ,, Math, ., min, (]
[y2, =, 0.0, ;, }, double, [, ], stack2, =, getStackValues, (, tdataset, ,, series, ,, Math, ., min, (]
[0.0, ;, }, double, [, ], stack2, =, getStackValues, (, tdataset, ,, series, ,, Math, ., min, (, item, +]
[}, double, [, ], stack2, =, getStackValues, (, tdataset, ,, series, ,, Math, ., min, (, item, +, 1, ,]
[}, double, [, ], stack2, =, getStackValues, (, tdataset, ,, series, ,, Math, ., min, (, item, +, 1, ,]
[[, ], stack2, =, getStackValues, (, tdataset, ,, series, ,, Math, ., min, (, item, +, 1, ,, itemCount, -]
[,, series, ,, Math, ., min, (, item, +, 1, ,, itemCount, -, 1, ), ), ;, double, xleft, =]
[,, series, ,, Math, ., min, (, item, +, 1, ,, itemCount, -, 1, ), ), ;, double, xleft, =]
[series, ,, Math, ., min, (, item, +, 1, ,, itemCount, -, 1, ), ), ;, double, xleft, =, (]
[series, ,, Math, ., min, (, item, +, 1, ,, itemCount, -, 1, ), ), ;, double, xleft, =, (]
[Math, ., min, (, item, +, 1, ,, itemCount, -, 1, ), ), ;, double, xleft, =, (, x0, +]
[(, item, +, 1, ,, itemCount, -, 1, ), ), ;, double, xleft, =, (, x0, +, x1, ), /]
[itemCount, -, 1, ), ), ;, double, xleft, =, (, x0, +, x1, ), /, 2.0, ;, double, xright, =]
[itemCount, -, 1, ), ), ;, double, xleft, =, (, x0, +, x1, ), /, 2.0, ;, double, xright, =]
[-, 1, ), ), ;, double, xleft, =, (, x0, +, x1, ), /, 2.0, ;, double, xright, =, (]
[-, 1, ), ), ;, double, xleft, =, (, x0, +, x1, ), /, 2.0, ;, double, xright, =, (]
[), ), ;, double, xleft, =, (, x0, +, x1, ), /, 2.0, ;, double, xright, =, (, x1, +]
[double, xleft, =, (, x0, +, x1, ), /, 2.0, ;, double, xright, =, (, x1, +, x2, ), /]
[), /, 2.0, ;, double, xright, =, (, x1, +, x2, ), /, 2.0, ;, double, [, ], stackLeft, =]
[2.0, ;, double, xright, =, (, x1, +, x2, ), /, 2.0, ;, double, [, ], stackLeft, =, averageStackValues, (]
[double, xright, =, (, x1, +, x2, ), /, 2.0, ;, double, [, ], stackLeft, =, averageStackValues, (, stack0, ,]
[/, 2.0, ;, double, [, ], stackLeft, =, averageStackValues, (, stack0, ,, stack1, ), ;, double, [, ], stackRight, =]
[;, double, [, ], stackLeft, =, averageStackValues, (, stack0, ,, stack1, ), ;, double, [, ], stackRight, =, averageStackValues, (]
[[, ], stackLeft, =, averageStackValues, (, stack0, ,, stack1, ), ;, double, [, ], stackRight, =, averageStackValues, (, stack1, ,]
[stack1, ), ;, double, [, ], stackRight, =, averageStackValues, (, stack1, ,, stack2, ), ;, double, [, ], adjStackLeft, =]
[;, double, [, ], stackRight, =, averageStackValues, (, stack1, ,, stack2, ), ;, double, [, ], adjStackLeft, =, adjustedStackValues, (]
[[, ], stackRight, =, averageStackValues, (, stack1, ,, stack2, ), ;, double, [, ], adjStackLeft, =, adjustedStackValues, (, stack0, ,]
[stack2, ), ;, double, [, ], adjStackLeft, =, adjustedStackValues, (, stack0, ,, stack1, ), ;, double, [, ], adjStackRight, =]
[;, double, [, ], adjStackLeft, =, adjustedStackValues, (, stack0, ,, stack1, ), ;, double, [, ], adjStackRight, =, adjustedStackValues, (]
[[, ], adjStackLeft, =, adjustedStackValues, (, stack0, ,, stack1, ), ;, double, [, ], adjStackRight, =, adjustedStackValues, (, stack1, ,]
[stack0, ,, stack1, ), ;, double, [, ], adjStackRight, =, adjustedStackValues, (, stack1, ,, stack2, ), ;, RectangleEdge, edge0, =]
[stack0, ,, stack1, ), ;, double, [, ], adjStackRight, =, adjustedStackValues, (, stack1, ,, stack2, ), ;, RectangleEdge, edge0, =]
[=, adjustedStackValues, (, stack1, ,, stack2, ), ;, RectangleEdge, edge0, =, plot, ., getDomainAxisEdge, (, ), ;, float, transX1, =]
[stack1, ,, stack2, ), ;, RectangleEdge, edge0, =, plot, ., getDomainAxisEdge, (, ), ;, float, transX1, =, (, float, )]
[stack1, ,, stack2, ), ;, RectangleEdge, edge0, =, plot, ., getDomainAxisEdge, (, ), ;, float, transX1, =, (, float, )]
[;, RectangleEdge, edge0, =, plot, ., getDomainAxisEdge, (, ), ;, float, transX1, =, (, float, ), domainAxis, ., valueToJava2D, (]
[edge0, =, plot, ., getDomainAxisEdge, (, ), ;, float, transX1, =, (, float, ), domainAxis, ., valueToJava2D, (, x1, ,]
[plot, ., getDomainAxisEdge, (, ), ;, float, transX1, =, (, float, ), domainAxis, ., valueToJava2D, (, x1, ,, dataArea, ,]
[float, transX1, =, (, float, ), domainAxis, ., valueToJava2D, (, x1, ,, dataArea, ,, edge0, ), ;, float, transXLeft, =]
[(, float, ), domainAxis, ., valueToJava2D, (, x1, ,, dataArea, ,, edge0, ), ;, float, transXLeft, =, (, float, )]
[(, float, ), domainAxis, ., valueToJava2D, (, x1, ,, dataArea, ,, edge0, ), ;, float, transXLeft, =, (, float, )]
[., valueToJava2D, (, x1, ,, dataArea, ,, edge0, ), ;, float, transXLeft, =, (, float, ), domainAxis, ., valueToJava2D, (]
[(, x1, ,, dataArea, ,, edge0, ), ;, float, transXLeft, =, (, float, ), domainAxis, ., valueToJava2D, (, xleft, ,]
[,, dataArea, ,, edge0, ), ;, float, transXLeft, =, (, float, ), domainAxis, ., valueToJava2D, (, xleft, ,, dataArea, ,]
[float, transXLeft, =, (, float, ), domainAxis, ., valueToJava2D, (, xleft, ,, dataArea, ,, edge0, ), ;, float, transXRight, =]
[(, float, ), domainAxis, ., valueToJava2D, (, xleft, ,, dataArea, ,, edge0, ), ;, float, transXRight, =, (, float, )]
[(, float, ), domainAxis, ., valueToJava2D, (, xleft, ,, dataArea, ,, edge0, ), ;, float, transXRight, =, (, float, )]
[., valueToJava2D, (, xleft, ,, dataArea, ,, edge0, ), ;, float, transXRight, =, (, float, ), domainAxis, ., valueToJava2D, (]
[(, xleft, ,, dataArea, ,, edge0, ), ;, float, transXRight, =, (, float, ), domainAxis, ., valueToJava2D, (, xright, ,]
[,, dataArea, ,, edge0, ), ;, float, transXRight, =, (, float, ), domainAxis, ., valueToJava2D, (, xright, ,, dataArea, ,]
[;, float, transXRight, =, (, float, ), domainAxis, ., valueToJava2D, (, xright, ,, dataArea, ,, edge0, ), ;, if, (]
[;, float, transXRight, =, (, float, ), domainAxis, ., valueToJava2D, (, xright, ,, dataArea, ,, edge0, ), ;, if, (]
[float, ), domainAxis, ., valueToJava2D, (, xright, ,, dataArea, ,, edge0, ), ;, if, (, this, ., roundXCoordinates, ), {]
[domainAxis, ., valueToJava2D, (, xright, ,, dataArea, ,, edge0, ), ;, if, (, this, ., roundXCoordinates, ), {, transX1, =]
[domainAxis, ., valueToJava2D, (, xright, ,, dataArea, ,, edge0, ), ;, if, (, this, ., roundXCoordinates, ), {, transX1, =]
[xright, ,, dataArea, ,, edge0, ), ;, if, (, this, ., roundXCoordinates, ), {, transX1, =, Math, ., round, (]
[,, edge0, ), ;, if, (, this, ., roundXCoordinates, ), {, transX1, =, Math, ., round, (, transX1, ), ;]
[), ;, if, (, this, ., roundXCoordinates, ), {, transX1, =, Math, ., round, (, transX1, ), ;, transXLeft, =]
[), ;, if, (, this, ., roundXCoordinates, ), {, transX1, =, Math, ., round, (, transX1, ), ;, transXLeft, =]
[this, ., roundXCoordinates, ), {, transX1, =, Math, ., round, (, transX1, ), ;, transXLeft, =, Math, ., round, (]
[), {, transX1, =, Math, ., round, (, transX1, ), ;, transXLeft, =, Math, ., round, (, transXLeft, ), ;]
[transX1, =, Math, ., round, (, transX1, ), ;, transXLeft, =, Math, ., round, (, transXLeft, ), ;, transXRight, =]
[transX1, =, Math, ., round, (, transX1, ), ;, transXLeft, =, Math, ., round, (, transXLeft, ), ;, transXRight, =]
[round, (, transX1, ), ;, transXLeft, =, Math, ., round, (, transXLeft, ), ;, transXRight, =, Math, ., round, (]
[(, transXLeft, ), ;, transXRight, =, Math, ., round, (, transXRight, ), ;, }, float, transY1, ;, RectangleEdge, edge1, =]
[(, transXLeft, ), ;, transXRight, =, Math, ., round, (, transXRight, ), ;, }, float, transY1, ;, RectangleEdge, edge1, =]
[(, transXRight, ), ;, }, float, transY1, ;, RectangleEdge, edge1, =, plot, ., getRangeAxisEdge, (, ), ;, GeneralPath, left, =]
[RectangleEdge, edge1, =, plot, ., getRangeAxisEdge, (, ), ;, GeneralPath, left, =, new, GeneralPath, (, ), ;, GeneralPath, right, =]
[), ;, GeneralPath, left, =, new, GeneralPath, (, ), ;, GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (]
[), ;, GeneralPath, left, =, new, GeneralPath, (, ), ;, GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (]
[GeneralPath, left, =, new, GeneralPath, (, ), ;, GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (, y1, >=]
[new, GeneralPath, (, ), ;, GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (, y1, >=, 0.0, ), {]
[(, ), ;, GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (, y1, >=, 0.0, ), {, transY1, =]
[GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float, )]
[GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float, )]
[GeneralPath, (, ), ;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[GeneralPath, (, ), ;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[), ;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +]
[), ;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +]
[if, (, y1, >=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, []
[>=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 1, ], ,]
[), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,]
[), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =]
[valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, )]
[valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, )]
[stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, []
[dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,]
[edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,]
[(, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =]
[rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, )]
[rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, )]
[stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, []
[dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,]
[edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (]
[float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=]
[adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =]
[adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =]
[adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =]
[[, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (]
[[, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (]
[], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +]
[,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +, y1, ), /]
[), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +]
[), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +]
[if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft, []
[{, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =]
[=, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, )]
[=, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, )]
[y1, ), /, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[/, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,]
[+, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,]
[;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, if, (]
[;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, if, (]
[transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==]
[transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==]
[rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[yleft, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (]
[dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,]
[), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transY1, ), ;]
[), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transY1, ), ;]
[orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (]
[PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transX1, ,]
[), {, left, ., moveTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transX1, ,, transStack1, ), ;]
[), {, left, ., moveTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transX1, ,, transStack1, ), ;]
[moveTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (]
[transX1, ,, transY1, ), ;, left, ., lineTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transXLeft, ,]
[), ;, left, ., lineTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;]
[), ;, left, ., lineTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;]
[lineTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;, left, ., lineTo, (]
[transX1, ,, transStack1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, transXLeft, ,]
[., lineTo, (, transXLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, transXLeft, ,, transYLeft, ), ;, }, else, {]
[., lineTo, (, transXLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, transXLeft, ,, transYLeft, ), ;, }, else, {]
[,, transStackLeft, ), ;, left, ., lineTo, (, transXLeft, ,, transYLeft, ), ;, }, else, {, left, ., moveTo, (]
[), ;, left, ., lineTo, (, transXLeft, ,, transYLeft, ), ;, }, else, {, left, ., moveTo, (, transY1, ,]
[., lineTo, (, transXLeft, ,, transYLeft, ), ;, }, else, {, left, ., moveTo, (, transY1, ,, transX1, ), ;]
[., lineTo, (, transXLeft, ,, transYLeft, ), ;, }, else, {, left, ., moveTo, (, transY1, ,, transX1, ), ;]
[,, transYLeft, ), ;, }, else, {, left, ., moveTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (]
[), ;, }, else, {, left, ., moveTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStack1, ,]
[else, {, left, ., moveTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStack1, ,, transX1, ), ;]
[else, {, left, ., moveTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStack1, ,, transX1, ), ;]
[moveTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (]
[transY1, ,, transX1, ), ;, left, ., lineTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,]
[), ;, left, ., lineTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;]
[), ;, left, ., lineTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;]
[lineTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;, left, ., lineTo, (]
[transStack1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;, left, ., lineTo, (, transYLeft, ,]
[;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;, left, ., lineTo, (, transYLeft, ,, transXLeft, ), ;, }]
[;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;, left, ., lineTo, (, transYLeft, ,, transXLeft, ), ;, }]
[., lineTo, (, transYLeft, ,, transXLeft, ), ;, }, left, ., closePath, (, ), ;, }, else, {, if, (]
[., lineTo, (, transYLeft, ,, transXLeft, ), ;, }, left, ., closePath, (, ), ;, }, else, {, if, (]
[(, transYLeft, ,, transXLeft, ), ;, }, left, ., closePath, (, ), ;, }, else, {, if, (, orientation, ==]
[(, transYLeft, ,, transXLeft, ), ;, }, left, ., closePath, (, ), ;, }, else, {, if, (, orientation, ==]
[;, }, left, ., closePath, (, ), ;, }, else, {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[;, }, left, ., closePath, (, ), ;, }, else, {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[closePath, (, ), ;, }, else, {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (]
[), ;, }, else, {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,]
[else, {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transStack1, ), ;]
[else, {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transStack1, ), ;]
[orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (]
[PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transX1, ,]
[), {, left, ., moveTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transX1, ,, transY1, ), ;]
[), {, left, ., moveTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transX1, ,, transY1, ), ;]
[moveTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (]
[transX1, ,, transStack1, ), ;, left, ., lineTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transXLeft, ,]
[., lineTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;, }, else, {]
[., lineTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;, }, else, {]
[,, transY1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;, }, else, {, left, ., moveTo, (]
[), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;, }, else, {, left, ., moveTo, (, transStack1, ,]
[., lineTo, (, transXLeft, ,, transStackLeft, ), ;, }, else, {, left, ., moveTo, (, transStack1, ,, transX1, ), ;]
[., lineTo, (, transXLeft, ,, transStackLeft, ), ;, }, else, {, left, ., moveTo, (, transStack1, ,, transX1, ), ;]
[,, transStackLeft, ), ;, }, else, {, left, ., moveTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (]
[), ;, }, else, {, left, ., moveTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transY1, ,]
[else, {, left, ., moveTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transY1, ,, transX1, ), ;]
[else, {, left, ., moveTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transY1, ,, transX1, ), ;]
[moveTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (]
[transStack1, ,, transX1, ), ;, left, ., lineTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,]
[;, left, ., lineTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;, }]
[;, left, ., lineTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;, }]
[left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;, }, left, ., closePath, (, ), ;, }, float, transStackRight, =]
[(, transStackLeft, ,, transXLeft, ), ;, }, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, )]
[(, transStackLeft, ,, transXLeft, ), ;, }, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, )]
[), ;, }, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[), ;, }, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[}, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, []
[closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ], ,]
[), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ], ,, dataArea, ,]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (]
[float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=]
[adjStackRight, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =]
[adjStackRight, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =]
[adjStackRight, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =]
[[, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (]
[[, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (]
[], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +]
[,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +, y2, ), /]
[), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +, y2, ), /, 2.0, +]
[), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +, y2, ), /, 2.0, +]
[if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight, []
[{, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =]
[=, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =, (, float, )]
[=, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =, (, float, )]
[y2, ), /, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[/, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,]
[+, stackRight, [, 1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,]
[;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, if, (]
[;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, if, (]
[transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==]
[transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==]
[rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[yright, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (]
[dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,]
[), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;]
[), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;]
[orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (]
[PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,]
[), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;]
[), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;]
[moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (]
[transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,]
[), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transYRight, ), ;]
[), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transYRight, ), ;]
[lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transYRight, ), ;, right, ., lineTo, (]
[transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transYRight, ), ;, right, ., lineTo, (, transXRight, ,]
[., lineTo, (, transXRight, ,, transYRight, ), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {]
[., lineTo, (, transXRight, ,, transYRight, ), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {]
[,, transYRight, ), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (]
[), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,]
[., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;]
[., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;]
[,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (]
[), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,]
[else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;]
[else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;]
[moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (]
[transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transYRight, ,]
[), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transYRight, ,, transXRight, ), ;]
[), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transYRight, ,, transXRight, ), ;]
[lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transYRight, ,, transXRight, ), ;, right, ., lineTo, (]
[transY1, ,, transX1, ), ;, right, ., lineTo, (, transYRight, ,, transXRight, ), ;, right, ., lineTo, (, transStackRight, ,]
[;, right, ., lineTo, (, transYRight, ,, transXRight, ), ;, right, ., lineTo, (, transStackRight, ,, transXRight, ), ;, }]
[;, right, ., lineTo, (, transYRight, ,, transXRight, ), ;, right, ., lineTo, (, transStackRight, ,, transXRight, ), ;, }]
[., lineTo, (, transStackRight, ,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, else, {, if, (]
[., lineTo, (, transStackRight, ,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, else, {, if, (]
[(, transStackRight, ,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, else, {, if, (, orientation, ==]
[(, transStackRight, ,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, else, {, if, (, orientation, ==]
[;, }, right, ., closePath, (, ), ;, }, else, {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[;, }, right, ., closePath, (, ), ;, }, else, {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[closePath, (, ), ;, }, else, {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (]
[), ;, }, else, {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,]
[else, {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;]
[else, {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;]
[orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (]
[PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,]
[), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;]
[), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;]
[moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (]
[transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,]
[., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {]
[., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {]
[,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (]
[), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,]
[., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;]
[., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;]
[,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (]
[), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,]
[else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;]
[else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;]
[moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (]
[transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transStackRight, ,]
[;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transStackRight, ,, transXRight, ), ;, }]
[;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transStackRight, ,, transXRight, ), ;, }]
[right, ., lineTo, (, transStackRight, ,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, }, else, {]
[lineTo, (, transStackRight, ,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, }, else, {, transY1, =]
[,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, )]
[,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, )]
[}, right, ., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[}, right, ., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +]
[., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +]
[(, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, []
[}, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 0, ], ,]
[else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 0, ], ,, dataArea, ,]
[), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =]
[valueToJava2D, (, y1, +, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, )]
[valueToJava2D, (, y1, +, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, )]
[stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, []
[dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,]
[edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,]
[(, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =]
[rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, )]
[rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, )]
[stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, []
[dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,]
[edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (]
[float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=]
[(, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, if, (]
[(, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, if, (]
[[, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, if, (, orientation, ==]
[[, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, if, (, orientation, ==]
[,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[if, (, y0, >=, 0.0, ), {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (]
[y0, >=, 0.0, ), {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,]
[), {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transStack1, ), ;]
[), {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transStack1, ), ;]
[orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (]
[PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transX1, ,]
[), {, left, ., moveTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transX1, ,, transY1, ), ;]
[), {, left, ., moveTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transX1, ,, transY1, ), ;]
[moveTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (]
[transX1, ,, transStack1, ), ;, left, ., lineTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transXLeft, ,]
[., lineTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;, }, else, {]
[., lineTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;, }, else, {]
[,, transY1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;, }, else, {, left, ., moveTo, (]
[), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;, }, else, {, left, ., moveTo, (, transStack1, ,]
[., lineTo, (, transXLeft, ,, transStackLeft, ), ;, }, else, {, left, ., moveTo, (, transStack1, ,, transX1, ), ;]
[., lineTo, (, transXLeft, ,, transStackLeft, ), ;, }, else, {, left, ., moveTo, (, transStack1, ,, transX1, ), ;]
[,, transStackLeft, ), ;, }, else, {, left, ., moveTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (]
[), ;, }, else, {, left, ., moveTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transY1, ,]
[else, {, left, ., moveTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transY1, ,, transX1, ), ;]
[else, {, left, ., moveTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transY1, ,, transX1, ), ;]
[moveTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (]
[transStack1, ,, transX1, ), ;, left, ., lineTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,]
[;, left, ., lineTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;, }]
[;, left, ., lineTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;, }]
[lineTo, (, transStackLeft, ,, transXLeft, ), ;, }, left, ., clone, (, ), ;, }, else, {, double, yleft, =]
[lineTo, (, transStackLeft, ,, transXLeft, ), ;, }, left, ., clone, (, ), ;, }, else, {, double, yleft, =]
[lineTo, (, transStackLeft, ,, transXLeft, ), ;, }, left, ., clone, (, ), ;, }, else, {, double, yleft, =]
[(, transStackLeft, ,, transXLeft, ), ;, }, left, ., clone, (, ), ;, }, else, {, double, yleft, =, (]
[(, transStackLeft, ,, transXLeft, ), ;, }, left, ., clone, (, ), ;, }, else, {, double, yleft, =, (]
[,, transXLeft, ), ;, }, left, ., clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +]
[;, }, left, ., clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +, y1, ), /]
[left, ., clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +]
[left, ., clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +]
[clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft, []
[{, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =]
[=, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, )]
[=, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, )]
[y1, ), /, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[/, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,]
[+, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,]
[;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, if, (]
[;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, if, (]
[transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==]
[transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==]
[rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[yleft, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (]
[dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,]
[), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transY1, ), ;]
[), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transY1, ), ;]
[orientation, ==, PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (]
[PlotOrientation, ., VERTICAL, ), {, left, ., moveTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transX1, ,]
[), {, left, ., moveTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transX1, ,, transStack1, ), ;]
[), {, left, ., moveTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transX1, ,, transStack1, ), ;]
[moveTo, (, transX1, ,, transY1, ), ;, left, ., lineTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (]
[transX1, ,, transY1, ), ;, left, ., lineTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transXLeft, ,]
[), ;, left, ., lineTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;]
[), ;, left, ., lineTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;]
[lineTo, (, transX1, ,, transStack1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;, left, ., lineTo, (]
[transX1, ,, transStack1, ), ;, left, ., lineTo, (, transXLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, transXLeft, ,]
[., lineTo, (, transXLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, transXLeft, ,, transYLeft, ), ;, }, else, {]
[., lineTo, (, transXLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, transXLeft, ,, transYLeft, ), ;, }, else, {]
[,, transStackLeft, ), ;, left, ., lineTo, (, transXLeft, ,, transYLeft, ), ;, }, else, {, left, ., moveTo, (]
[), ;, left, ., lineTo, (, transXLeft, ,, transYLeft, ), ;, }, else, {, left, ., moveTo, (, transY1, ,]
[., lineTo, (, transXLeft, ,, transYLeft, ), ;, }, else, {, left, ., moveTo, (, transY1, ,, transX1, ), ;]
[., lineTo, (, transXLeft, ,, transYLeft, ), ;, }, else, {, left, ., moveTo, (, transY1, ,, transX1, ), ;]
[,, transYLeft, ), ;, }, else, {, left, ., moveTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (]
[), ;, }, else, {, left, ., moveTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStack1, ,]
[else, {, left, ., moveTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStack1, ,, transX1, ), ;]
[else, {, left, ., moveTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStack1, ,, transX1, ), ;]
[moveTo, (, transY1, ,, transX1, ), ;, left, ., lineTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (]
[transY1, ,, transX1, ), ;, left, ., lineTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,]
[), ;, left, ., lineTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;]
[), ;, left, ., lineTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;]
[lineTo, (, transStack1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;, left, ., lineTo, (]
[transStack1, ,, transX1, ), ;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;, left, ., lineTo, (, transYLeft, ,]
[;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;, left, ., lineTo, (, transYLeft, ,, transXLeft, ), ;, }]
[;, left, ., lineTo, (, transStackLeft, ,, transXLeft, ), ;, left, ., lineTo, (, transYLeft, ,, transXLeft, ), ;, }]
[left, ., lineTo, (, transYLeft, ,, transXLeft, ), ;, }, left, ., closePath, (, ), ;, }, float, transStackRight, =]
[(, transYLeft, ,, transXLeft, ), ;, }, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, )]
[(, transYLeft, ,, transXLeft, ), ;, }, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, )]
[), ;, }, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[), ;, }, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[}, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, []
[closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ], ,]
[), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (]
[float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=]
[(, adjStackRight, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, if, (]
[(, adjStackRight, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, if, (]
[[, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, if, (, orientation, ==]
[[, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, if, (, orientation, ==]
[,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[if, (, y2, >=, 0.0, ), {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (]
[y2, >=, 0.0, ), {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,]
[), {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;]
[), {, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;]
[orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (]
[PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,]
[), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;]
[), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;]
[moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (]
[transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,]
[., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {]
[., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {]
[,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (]
[), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,]
[., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;]
[., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;]
[,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (]
[), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,]
[else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;]
[else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;]
[moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (]
[transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transStackRight, ,]
[;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transStackRight, ,, transXRight, ), ;, }]
[;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transStackRight, ,, transXRight, ), ;, }]
[lineTo, (, transStackRight, ,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, else, {, double, yright, =]
[lineTo, (, transStackRight, ,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, else, {, double, yright, =]
[lineTo, (, transStackRight, ,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, else, {, double, yright, =]
[(, transStackRight, ,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, else, {, double, yright, =, (]
[(, transStackRight, ,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, else, {, double, yright, =, (]
[,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +]
[;, }, right, ., closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +, y2, ), /]
[right, ., closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +, y2, ), /, 2.0, +]
[right, ., closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +, y2, ), /, 2.0, +]
[closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight, []
[{, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =]
[=, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =, (, float, )]
[=, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =, (, float, )]
[y2, ), /, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[/, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,]
[+, stackRight, [, 0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,]
[;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, if, (]
[;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, if, (]
[transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==]
[transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==]
[rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[yright, ,, dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (]
[dataArea, ,, edge1, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,]
[), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;]
[), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;]
[orientation, ==, PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (]
[PlotOrientation, ., VERTICAL, ), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,]
[), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;]
[), {, right, ., moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;]
[moveTo, (, transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (]
[transX1, ,, transStack1, ), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,]
[), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transYRight, ), ;]
[), ;, right, ., lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transYRight, ), ;]
[lineTo, (, transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transYRight, ), ;, right, ., lineTo, (]
[transX1, ,, transY1, ), ;, right, ., lineTo, (, transXRight, ,, transYRight, ), ;, right, ., lineTo, (, transXRight, ,]
[., lineTo, (, transXRight, ,, transYRight, ), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {]
[., lineTo, (, transXRight, ,, transYRight, ), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {]
[,, transYRight, ), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (]
[), ;, right, ., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,]
[., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;]
[., lineTo, (, transXRight, ,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;]
[,, transStackRight, ), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (]
[), ;, }, else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,]
[else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;]
[else, {, right, ., moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;]
[moveTo, (, transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (]
[transStack1, ,, transX1, ), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transYRight, ,]
[), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transYRight, ,, transXRight, ), ;]
[), ;, right, ., lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transYRight, ,, transXRight, ), ;]
[lineTo, (, transY1, ,, transX1, ), ;, right, ., lineTo, (, transYRight, ,, transXRight, ), ;, right, ., lineTo, (]
[transY1, ,, transX1, ), ;, right, ., lineTo, (, transYRight, ,, transXRight, ), ;, right, ., lineTo, (, transStackRight, ,]
[;, right, ., lineTo, (, transYRight, ,, transXRight, ), ;, right, ., lineTo, (, transStackRight, ,, transXRight, ), ;, }]
[;, right, ., lineTo, (, transYRight, ,, transXRight, ), ;, right, ., lineTo, (, transStackRight, ,, transXRight, ), ;, }]
[., lineTo, (, transStackRight, ,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, }, Paint, itemPaint, =]
[(, transStackRight, ,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, }, Paint, itemPaint, =, getItemPaint, (]
[,, transXRight, ), ;, }, right, ., closePath, (, ), ;, }, }, Paint, itemPaint, =, getItemPaint, (, series, ,]
[), ;, }, right, ., closePath, (, ), ;, }, }, Paint, itemPaint, =, getItemPaint, (, series, ,, item, ,]
[closePath, (, ), ;, }, }, Paint, itemPaint, =, getItemPaint, (, series, ,, item, ,, selected, ), ;, if, (]
[closePath, (, ), ;, }, }, Paint, itemPaint, =, getItemPaint, (, series, ,, item, ,, selected, ), ;, if, (]
[), ;, }, }, Paint, itemPaint, =, getItemPaint, (, series, ,, item, ,, selected, ), ;, if, (, pass, ==]
[}, Paint, itemPaint, =, getItemPaint, (, series, ,, item, ,, selected, ), ;, if, (, pass, ==, 0, ), {]
[}, Paint, itemPaint, =, getItemPaint, (, series, ,, item, ,, selected, ), ;, if, (, pass, ==, 0, ), {]
[getItemPaint, (, series, ,, item, ,, selected, ), ;, if, (, pass, ==, 0, ), {, g2, ., setPaint, (]
[,, item, ,, selected, ), ;, if, (, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;]
[,, item, ,, selected, ), ;, if, (, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;]
[), ;, if, (, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (]
[(, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, left, ), ;]
[(, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, left, ), ;]
[), {, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, left, ), ;, g2, ., fill, (]
[itemPaint, ), ;, g2, ., fill, (, left, ), ;, g2, ., fill, (, right, ), ;, }, if, (]
[itemPaint, ), ;, g2, ., fill, (, left, ), ;, g2, ., fill, (, right, ), ;, }, if, (]
[;, g2, ., fill, (, left, ), ;, g2, ., fill, (, right, ), ;, }, if, (, entities, !=]
[), ;, g2, ., fill, (, right, ), ;, }, if, (, entities, !=, null, ), {, GeneralPath, gp, =]
[., fill, (, right, ), ;, }, if, (, entities, !=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (]
[right, ), ;, }, if, (, entities, !=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;]
[right, ), ;, }, if, (, entities, !=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;]
[if, (, entities, !=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;, gp, ., append, (]
[entities, !=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;, gp, ., append, (, right, ,]
[), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;, gp, ., append, (, right, ,, false, ), ;]
[GeneralPath, gp, =, new, GeneralPath, (, left, ), ;, gp, ., append, (, right, ,, false, ), ;, entityArea, =]
[=, new, GeneralPath, (, left, ), ;, gp, ., append, (, right, ,, false, ), ;, entityArea, =, gp, ;]
[GeneralPath, (, left, ), ;, gp, ., append, (, right, ,, false, ), ;, entityArea, =, gp, ;, addEntity, (]
[left, ), ;, gp, ., append, (, right, ,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,]
[;, gp, ., append, (, right, ,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,]
[., append, (, right, ,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,, dataset, ,]
[(, right, ,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,, dataset, ,, series, ,]
[,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,, dataset, ,, series, ,, item, ,]
[), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,, dataset, ,, series, ,, item, ,, selected, ,]
[entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,, dataset, ,, series, ,, item, ,, selected, ,, transX1, ,]
[double, [, ], getStackValues, (, TableXYDataset, dataset, ,, int, series, ,, int, index, ), {, double, [, ], result, =]
[getStackValues, (, TableXYDataset, dataset, ,, int, series, ,, int, index, ), {, double, [, ], result, =, new, double, []
[int, index, ), {, double, [, ], result, =, new, double, [, 2, ], ;, for, (, int, i, =]
[), {, double, [, ], result, =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;]
[), {, double, [, ], result, =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;]
[double, [, ], result, =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;, i, <]
[], result, =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;, i, <, series, ;]
[], result, =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;, i, <, series, ;]
[], ;, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, double, v, =]
[], ;, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, double, v, =]
[int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, double, v, =, dataset, ., getYValue, (]
[=, 0, ;, i, <, series, ;, i, ++, ), {, double, v, =, dataset, ., getYValue, (, i, ,]
[series, ;, i, ++, ), {, double, v, =, dataset, ., getYValue, (, i, ,, index, ), ;, if, (]
[;, i, ++, ), {, double, v, =, dataset, ., getYValue, (, i, ,, index, ), ;, if, (, !]
[;, i, ++, ), {, double, v, =, dataset, ., getYValue, (, i, ,, index, ), ;, if, (, !]
[{, double, v, =, dataset, ., getYValue, (, i, ,, index, ), ;, if, (, !, Double, ., isNaN, (]
[getYValue, (, i, ,, index, ), ;, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (]
[getYValue, (, i, ,, index, ), ;, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (]
[i, ,, index, ), ;, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, v, >=]
[), ;, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, v, >=, 0.0, ), {]
[), ;, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, v, >=, 0.0, ), {]
[if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, v, >=, 0.0, ), {, result, []
[Double, ., isNaN, (, v, ), ), {, if, (, v, >=, 0.0, ), {, result, [, 1, ], +=]
[), ), {, if, (, v, >=, 0.0, ), {, result, [, 1, ], +=, v, ;, }, else, {]
[), ), {, if, (, v, >=, 0.0, ), {, result, [, 1, ], +=, v, ;, }, else, {]
[{, if, (, v, >=, 0.0, ), {, result, [, 1, ], +=, v, ;, }, else, {, result, []
[v, >=, 0.0, ), {, result, [, 1, ], +=, v, ;, }, else, {, result, [, 0, ], +=]
[[, 1, ], +=, v, ;, }, else, {, result, [, 0, ], +=, v, ;, }, }, }, return]
[[, ], averageStackValues, (, double, [, ], stack1, ,, double, [, ], stack2, ), {, double, [, ], result, =]
[(, double, [, ], stack1, ,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, []
[], stack1, ,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;]
[], stack1, ,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;]
[,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, result, []
[], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 0, ], =]
[], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 0, ], =]
[stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 0, ], =, (]
[stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 0, ], =, (]
[stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 0, ], =, (]
[{, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 0, ], =, (, stack1, []
[], result, =, new, double, [, 2, ], ;, result, [, 0, ], =, (, stack1, [, 0, ], +]
[], result, =, new, double, [, 2, ], ;, result, [, 0, ], =, (, stack1, [, 0, ], +]
[=, new, double, [, 2, ], ;, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, []
[2, ], ;, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /]
[;, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;]
[;, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;]
[[, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, []
[=, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =]
[=, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =]
[(, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (]
[(, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (]
[(, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (]
[[, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (, stack1, []
[+, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +]
[+, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +]
[[, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, []
[/, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /]
[result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;, return]
[[, ], adjustedStackValues, (, double, [, ], stack1, ,, double, [, ], stack2, ), {, double, [, ], result, =]
[(, double, [, ], stack1, ,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, []
[,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, if, (]
[,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, if, (]
[,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, if, (]
[,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, if, (]
[[, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, if, (, stack1, []
[), {, double, [, ], result, =, new, double, [, 2, ], ;, if, (, stack1, [, 0, ], ==]
[double, [, ], result, =, new, double, [, 2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||]
[double, [, ], result, =, new, double, [, 2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||]
[double, [, ], result, =, new, double, [, 2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||]
[], result, =, new, double, [, 2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||, stack2, []
[new, double, [, 2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==]
[2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==, 0.0, ), {]
[2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==, 0.0, ), {]
[;, if, (, stack1, [, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==, 0.0, ), {, result, []
[stack1, [, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==, 0.0, ), {, result, [, 0, ], =]
[0.0, ||, stack2, [, 0, ], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {]
[0.0, ||, stack2, [, 0, ], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {]
[stack2, [, 0, ], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, []
[], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =]
[], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =]
[==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (]
[==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (]
[==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (]
[), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, []
[[, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, [, 0, ], +]
[[, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, [, 0, ], +]
[], =, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, []
[}, else, {, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /]
[0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (]
[0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (]
[0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (]
[0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (]
[=, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, []
[[, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==]
[], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||]
[], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||]
[], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||]
[stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, []
[], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==]
[2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0, ), {]
[2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0, ), {]
[}, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0, ), {, result, []
[stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0, ), {, result, [, 1, ], =]
[0.0, ||, stack2, [, 1, ], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {]
[0.0, ||, stack2, [, 1, ], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {]
[stack2, [, 1, ], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, []
[], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =]
[], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =]
[==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (]
[==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (]
[==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (]
[), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, []
[[, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, [, 1, ], +]
[[, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, [, 1, ], +]
[], =, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, []
[}, else, {, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /]
[[, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;, }, return]
[], ), /, 2.0, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[], ), /, 2.0, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[/, 2.0, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, StackedXYAreaRenderer2, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, StackedXYAreaRenderer2, ), ), {, return, false, ;, }, StackedXYAreaRenderer2, that, =]
[if, (, !, (, obj, instanceof, StackedXYAreaRenderer2, ), ), {, return, false, ;, }, StackedXYAreaRenderer2, that, =, (, StackedXYAreaRenderer2, )]
[obj, instanceof, StackedXYAreaRenderer2, ), ), {, return, false, ;, }, StackedXYAreaRenderer2, that, =, (, StackedXYAreaRenderer2, ), obj, ;, if, (]
[obj, instanceof, StackedXYAreaRenderer2, ), ), {, return, false, ;, }, StackedXYAreaRenderer2, that, =, (, StackedXYAreaRenderer2, ), obj, ;, if, (]
[obj, instanceof, StackedXYAreaRenderer2, ), ), {, return, false, ;, }, StackedXYAreaRenderer2, that, =, (, StackedXYAreaRenderer2, ), obj, ;, if, (]
[), {, return, false, ;, }, StackedXYAreaRenderer2, that, =, (, StackedXYAreaRenderer2, ), obj, ;, if, (, this, ., roundXCoordinates, !=]
[), {, return, false, ;, }, StackedXYAreaRenderer2, that, =, (, StackedXYAreaRenderer2, ), obj, ;, if, (, this, ., roundXCoordinates, !=]
[StackedXYAreaRenderer2, that, =, (, StackedXYAreaRenderer2, ), obj, ;, if, (, this, ., roundXCoordinates, !=, that, ., roundXCoordinates, ), {, return]
[StackedXYAreaRenderer2, ), obj, ;, if, (, this, ., roundXCoordinates, !=, that, ., roundXCoordinates, ), {, return, false, ;, }, return]
[StackedXYAreaRenderer2, ), obj, ;, if, (, this, ., roundXCoordinates, !=, that, ., roundXCoordinates, ), {, return, false, ;, }, return]
[if, (, this, ., roundXCoordinates, !=, that, ., roundXCoordinates, ), {, return, false, ;, }, return, super, ., equals, (]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
