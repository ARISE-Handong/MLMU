[import, java, ., util, ., Map, ;, public, class, SourceMapConsumerV3, implements, SourceMapConsumer, ,, SourceMappingReversable, {, static, final, int, UNMAPPED, =]
[java, ., util, ., Map, ;, public, class, SourceMapConsumerV3, implements, SourceMapConsumer, ,, SourceMappingReversable, {, static, final, int, UNMAPPED, =, -]
[private, String, [, ], names, ;, private, int, lineCount, ;, private, ArrayList, <, ArrayList, <, Entry, >, >, lines, =]
[), {, }, static, class, DefaultSourceMapSupplier, implements, SourceMapSupplier, {, @, Override, public, String, getSourceMap, (, String, url, ), {, return]
[url, ), {, return, null, ;, }, }, @, Override, public, void, parse, (, String, contents, ), throws, SourceMapParseException, {]
[{, return, null, ;, }, }, @, Override, public, void, parse, (, String, contents, ), throws, SourceMapParseException, {, parse, (]
[null, ;, }, }, @, Override, public, void, parse, (, String, contents, ), throws, SourceMapParseException, {, parse, (, contents, ,]
[;, }, public, void, parse, (, String, contents, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {, JSONObject, sourceMapRoot, =]
[void, parse, (, String, contents, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {, JSONObject, sourceMapRoot, =, new, JSONObject, (]
[String, contents, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {, JSONObject, sourceMapRoot, =, new, JSONObject, (, contents, ), ;]
[,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {, JSONObject, sourceMapRoot, =, new, JSONObject, (, contents, ), ;, parse, (]
[sectionSupplier, ), throws, SourceMapParseException, {, try, {, JSONObject, sourceMapRoot, =, new, JSONObject, (, contents, ), ;, parse, (, sourceMapRoot, ,]
[JSONObject, (, contents, ), ;, parse, (, sourceMapRoot, ,, sectionSupplier, ), ;, }, catch, (, JSONException, ex, ), {, throw]
[), ;, parse, (, sourceMapRoot, ,, sectionSupplier, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (]
[), ;, parse, (, sourceMapRoot, ,, sectionSupplier, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (]
[parse, (, sourceMapRoot, ,, sectionSupplier, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +]
[new, SourceMapParseException, (, "JSON parse exception: ", +, ex, ), ;, }, }, public, void, parse, (, JSONObject, sourceMapRoot, ), throws, SourceMapParseException, {]
[(, "JSON parse exception: ", +, ex, ), ;, }, }, public, void, parse, (, JSONObject, sourceMapRoot, ), throws, SourceMapParseException, {, parse, (]
[+, ex, ), ;, }, }, public, void, parse, (, JSONObject, sourceMapRoot, ), throws, SourceMapParseException, {, parse, (, sourceMapRoot, ,]
[;, }, public, void, parse, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {, int, version, =]
[;, }, public, void, parse, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {, int, version, =]
[parse, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {, int, version, =, sourceMapRoot, ., getInt, (]
[SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {, int, version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if, (]
[SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {, int, version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if, (]
[), throws, SourceMapParseException, {, try, {, int, version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if, (, version, !=]
[try, {, int, version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if, (, version, !=, 3, ), {, throw]
[version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (]
[version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (]
[sourceMapRoot, ., getInt, (, "version", ), ;, if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +]
[if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =]
[if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =]
[3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (]
[SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (]
[SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (]
[String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, ), ), {, throw]
[sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (]
[;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (]
[;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (]
[., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (]
[), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (, "sections", ), ), {]
[throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (, "sections", ), ), {, parseMetaMap, (]
[SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (, "sections", ), ), {, parseMetaMap, (, sourceMapRoot, ,]
[if, (, sourceMapRoot, ., has, (, "sections", ), ), {, parseMetaMap, (, sourceMapRoot, ,, sectionSupplier, ), ;, return, ;, }]
[sourceMapRoot, ., has, (, "sections", ), ), {, parseMetaMap, (, sourceMapRoot, ,, sectionSupplier, ), ;, return, ;, }, lineCount, =]
[sourceMapRoot, ., has, (, "sections", ), ), {, parseMetaMap, (, sourceMapRoot, ,, sectionSupplier, ), ;, return, ;, }, lineCount, =]
["sections", ), ), {, parseMetaMap, (, sourceMapRoot, ,, sectionSupplier, ), ;, return, ;, }, lineCount, =, sourceMapRoot, ., getInt, (]
[sourceMapRoot, ,, sectionSupplier, ), ;, return, ;, }, lineCount, =, sourceMapRoot, ., getInt, (, "lineCount", ), ;, String, lineMap, =]
[sourceMapRoot, ,, sectionSupplier, ), ;, return, ;, }, lineCount, =, sourceMapRoot, ., getInt, (, "lineCount", ), ;, String, lineMap, =]
[;, return, ;, }, lineCount, =, sourceMapRoot, ., getInt, (, "lineCount", ), ;, String, lineMap, =, sourceMapRoot, ., getString, (]
[}, lineCount, =, sourceMapRoot, ., getInt, (, "lineCount", ), ;, String, lineMap, =, sourceMapRoot, ., getString, (, "mappings", ), ;]
[=, sourceMapRoot, ., getInt, (, "lineCount", ), ;, String, lineMap, =, sourceMapRoot, ., getString, (, "mappings", ), ;, sources, =]
[., getInt, (, "lineCount", ), ;, String, lineMap, =, sourceMapRoot, ., getString, (, "mappings", ), ;, sources, =, getJavaStringArray, (]
[., getInt, (, "lineCount", ), ;, String, lineMap, =, sourceMapRoot, ., getString, (, "mappings", ), ;, sources, =, getJavaStringArray, (]
[), ;, String, lineMap, =, sourceMapRoot, ., getString, (, "mappings", ), ;, sources, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (]
[=, sourceMapRoot, ., getString, (, "mappings", ), ;, sources, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "sources", ), ), ;]
[., getString, (, "mappings", ), ;, sources, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "sources", ), ), ;, names, =]
[(, "mappings", ), ;, sources, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "sources", ), ), ;, names, =, getJavaStringArray, (]
[(, "mappings", ), ;, sources, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "sources", ), ), ;, names, =, getJavaStringArray, (]
[sources, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "sources", ), ), ;, names, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (]
[sourceMapRoot, ., getJSONArray, (, "sources", ), ), ;, names, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "names", ), ), ;]
[getJSONArray, (, "sources", ), ), ;, names, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "names", ), ), ;, lines, =]
[getJSONArray, (, "sources", ), ), ;, names, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "names", ), ), ;, lines, =]
[), ;, names, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "names", ), ), ;, lines, =, Lists, ., newArrayListWithCapacity, (]
[=, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "names", ), ), ;, lines, =, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;]
[=, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "names", ), ), ;, lines, =, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;]
[sourceMapRoot, ., getJSONArray, (, "names", ), ), ;, lines, =, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;, new, MappingBuilder, (]
[), ;, new, MappingBuilder, (, lineMap, ), ., build, (, ), ;, }, catch, (, JSONException, ex, ), {, throw]
[MappingBuilder, (, lineMap, ), ., build, (, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (]
[MappingBuilder, (, lineMap, ), ., build, (, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (]
[lineMap, ), ., build, (, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +]
[ex, ), ;, }, }, private, void, parseMetaMap, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, if, (]
[ex, ), ;, }, }, private, void, parseMetaMap, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, if, (]
[;, }, }, private, void, parseMetaMap, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, if, (, sectionSupplier, ==]
[private, void, parseMetaMap, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, if, (, sectionSupplier, ==, null, ), {]
[parseMetaMap, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, if, (, sectionSupplier, ==, null, ), {, sectionSupplier, =]
[if, (, sectionSupplier, ==, null, ), {, sectionSupplier, =, new, DefaultSourceMapSupplier, (, ), ;, }, try, {, int, version, =]
[if, (, sectionSupplier, ==, null, ), {, sectionSupplier, =, new, DefaultSourceMapSupplier, (, ), ;, }, try, {, int, version, =]
[null, ), {, sectionSupplier, =, new, DefaultSourceMapSupplier, (, ), ;, }, try, {, int, version, =, sourceMapRoot, ., getInt, (]
[new, DefaultSourceMapSupplier, (, ), ;, }, try, {, int, version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if, (]
[new, DefaultSourceMapSupplier, (, ), ;, }, try, {, int, version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if, (]
[(, ), ;, }, try, {, int, version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if, (, version, !=]
[try, {, int, version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if, (, version, !=, 3, ), {, throw]
[version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (]
[version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (]
[sourceMapRoot, ., getInt, (, "version", ), ;, if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +]
[if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =]
[if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =]
[3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (]
[SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (]
[SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (]
[String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, ), ), {, throw]
[sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (]
[;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (]
[;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (]
[;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (]
[;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (]
[;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (]
[., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (]
[), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (, "lineCount", ), ||]
[), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (, "lineCount", ), ||]
[new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (, "lineCount", ), ||, sourceMapRoot, ., has, (]
["File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (, "lineCount", ), ||, sourceMapRoot, ., has, (, "mappings", ), ||]
["File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (, "lineCount", ), ||, sourceMapRoot, ., has, (, "mappings", ), ||]
[if, (, sourceMapRoot, ., has, (, "lineCount", ), ||, sourceMapRoot, ., has, (, "mappings", ), ||, sourceMapRoot, ., has, (]
[., has, (, "lineCount", ), ||, sourceMapRoot, ., has, (, "mappings", ), ||, sourceMapRoot, ., has, (, "sources", ), ||]
[., has, (, "lineCount", ), ||, sourceMapRoot, ., has, (, "mappings", ), ||, sourceMapRoot, ., has, (, "sources", ), ||]
[), ||, sourceMapRoot, ., has, (, "mappings", ), ||, sourceMapRoot, ., has, (, "sources", ), ||, sourceMapRoot, ., has, (]
[(, "mappings", ), ||, sourceMapRoot, ., has, (, "sources", ), ||, sourceMapRoot, ., has, (, "names", ), ), {, throw]
[||, sourceMapRoot, ., has, (, "sources", ), ||, sourceMapRoot, ., has, (, "names", ), ), {, throw, new, SourceMapParseException, (]
[||, sourceMapRoot, ., has, (, "names", ), ), {, throw, new, SourceMapParseException, (, "Invalid map format", ), ;, }, SourceMapGeneratorV3, generator, =]
[{, throw, new, SourceMapParseException, (, "Invalid map format", ), ;, }, SourceMapGeneratorV3, generator, =, new, SourceMapGeneratorV3, (, ), ;, JSONArray, sections, =]
[{, throw, new, SourceMapParseException, (, "Invalid map format", ), ;, }, SourceMapGeneratorV3, generator, =, new, SourceMapGeneratorV3, (, ), ;, JSONArray, sections, =]
[(, "Invalid map format", ), ;, }, SourceMapGeneratorV3, generator, =, new, SourceMapGeneratorV3, (, ), ;, JSONArray, sections, =, sourceMapRoot, ., getJSONArray, (]
[new, SourceMapGeneratorV3, (, ), ;, JSONArray, sections, =, sourceMapRoot, ., getJSONArray, (, "sections", ), ;, for, (, int, i, =]
[;, JSONArray, sections, =, sourceMapRoot, ., getJSONArray, (, "sections", ), ;, for, (, int, i, =, 0, ,, count, =]
[;, JSONArray, sections, =, sourceMapRoot, ., getJSONArray, (, "sections", ), ;, for, (, int, i, =, 0, ,, count, =]
[getJSONArray, (, "sections", ), ;, for, (, int, i, =, 0, ,, count, =, sections, ., length, (, ), ;]
[getJSONArray, (, "sections", ), ;, for, (, int, i, =, 0, ,, count, =, sections, ., length, (, ), ;]
["sections", ), ;, for, (, int, i, =, 0, ,, count, =, sections, ., length, (, ), ;, i, <]
[;, for, (, int, i, =, 0, ,, count, =, sections, ., length, (, ), ;, i, <, count, ;]
[;, for, (, int, i, =, 0, ,, count, =, sections, ., length, (, ), ;, i, <, count, ;]
[,, count, =, sections, ., length, (, ), ;, i, <, count, ;, i, ++, ), {, JSONObject, section, =]
[,, count, =, sections, ., length, (, ), ;, i, <, count, ;, i, ++, ), {, JSONObject, section, =]
[., length, (, ), ;, i, <, count, ;, i, ++, ), {, JSONObject, section, =, sections, ., getJSONObject, (]
[i, <, count, ;, i, ++, ), {, JSONObject, section, =, sections, ., getJSONObject, (, i, ), ;, if, (]
[i, <, count, ;, i, ++, ), {, JSONObject, section, =, sections, ., getJSONObject, (, i, ), ;, if, (]
[i, <, count, ;, i, ++, ), {, JSONObject, section, =, sections, ., getJSONObject, (, i, ), ;, if, (]
[i, ++, ), {, JSONObject, section, =, sections, ., getJSONObject, (, i, ), ;, if, (, section, ., has, (]
[{, JSONObject, section, =, sections, ., getJSONObject, (, i, ), ;, if, (, section, ., has, (, "map", ), &&]
[{, JSONObject, section, =, sections, ., getJSONObject, (, i, ), ;, if, (, section, ., has, (, "map", ), &&]
[sections, ., getJSONObject, (, i, ), ;, if, (, section, ., has, (, "map", ), &&, section, ., has, (]
[), ;, if, (, section, ., has, (, "map", ), &&, section, ., has, (, "url", ), ), {, throw]
[(, section, ., has, (, "map", ), &&, section, ., has, (, "url", ), ), {, throw, new, SourceMapParseException, (]
[&&, section, ., has, (, "url", ), ), {, throw, new, SourceMapParseException, (, "Invalid map format: section may not have both 'map' and 'url'", ), ;, }, JSONObject, offset, =]
[&&, section, ., has, (, "url", ), ), {, throw, new, SourceMapParseException, (, "Invalid map format: section may not have both 'map' and 'url'", ), ;, }, JSONObject, offset, =]
[(, "url", ), ), {, throw, new, SourceMapParseException, (, "Invalid map format: section may not have both 'map' and 'url'", ), ;, }, JSONObject, offset, =, section, ., getJSONObject, (]
[new, SourceMapParseException, (, "Invalid map format: section may not have both 'map' and 'url'", ), ;, }, JSONObject, offset, =, section, ., getJSONObject, (, "offset", ), ;, int, line, =]
[new, SourceMapParseException, (, "Invalid map format: section may not have both 'map' and 'url'", ), ;, }, JSONObject, offset, =, section, ., getJSONObject, (, "offset", ), ;, int, line, =]
[), ;, }, JSONObject, offset, =, section, ., getJSONObject, (, "offset", ), ;, int, line, =, offset, ., getInt, (]
[section, ., getJSONObject, (, "offset", ), ;, int, line, =, offset, ., getInt, (, "line", ), ;, int, column, =]
[section, ., getJSONObject, (, "offset", ), ;, int, line, =, offset, ., getInt, (, "line", ), ;, int, column, =]
["offset", ), ;, int, line, =, offset, ., getInt, (, "line", ), ;, int, column, =, offset, ., getInt, (]
[getInt, (, "line", ), ;, int, column, =, offset, ., getInt, (, "column", ), ;, String, mapSectionContents, ;, if, (]
[getInt, (, "line", ), ;, int, column, =, offset, ., getInt, (, "column", ), ;, String, mapSectionContents, ;, if, (]
[;, int, column, =, offset, ., getInt, (, "column", ), ;, String, mapSectionContents, ;, if, (, section, ., has, (]
[(, "column", ), ;, String, mapSectionContents, ;, if, (, section, ., has, (, "url", ), ), {, String, url, =]
[(, "column", ), ;, String, mapSectionContents, ;, if, (, section, ., has, (, "url", ), ), {, String, url, =]
[String, mapSectionContents, ;, if, (, section, ., has, (, "url", ), ), {, String, url, =, section, ., getString, (]
[if, (, section, ., has, (, "url", ), ), {, String, url, =, section, ., getString, (, "url", ), ;]
[section, ., has, (, "url", ), ), {, String, url, =, section, ., getString, (, "url", ), ;, mapSectionContents, =]
[section, ., has, (, "url", ), ), {, String, url, =, section, ., getString, (, "url", ), ;, mapSectionContents, =]
["url", ), ), {, String, url, =, section, ., getString, (, "url", ), ;, mapSectionContents, =, sectionSupplier, ., getSourceMap, (]
[url, =, section, ., getString, (, "url", ), ;, mapSectionContents, =, sectionSupplier, ., getSourceMap, (, url, ), ;, if, (]
[url, =, section, ., getString, (, "url", ), ;, mapSectionContents, =, sectionSupplier, ., getSourceMap, (, url, ), ;, if, (]
[section, ., getString, (, "url", ), ;, mapSectionContents, =, sectionSupplier, ., getSourceMap, (, url, ), ;, if, (, mapSectionContents, ==]
["url", ), ;, mapSectionContents, =, sectionSupplier, ., getSourceMap, (, url, ), ;, if, (, mapSectionContents, ==, null, ), {, throw]
[mapSectionContents, =, sectionSupplier, ., getSourceMap, (, url, ), ;, if, (, mapSectionContents, ==, null, ), {, throw, new, SourceMapParseException, (]
[mapSectionContents, =, sectionSupplier, ., getSourceMap, (, url, ), ;, if, (, mapSectionContents, ==, null, ), {, throw, new, SourceMapParseException, (]
[sectionSupplier, ., getSourceMap, (, url, ), ;, if, (, mapSectionContents, ==, null, ), {, throw, new, SourceMapParseException, (, "Unable to retrieve: ", +]
[(, mapSectionContents, ==, null, ), {, throw, new, SourceMapParseException, (, "Unable to retrieve: ", +, url, ), ;, }, }, else, if, (]
[(, mapSectionContents, ==, null, ), {, throw, new, SourceMapParseException, (, "Unable to retrieve: ", +, url, ), ;, }, }, else, if, (]
[), {, throw, new, SourceMapParseException, (, "Unable to retrieve: ", +, url, ), ;, }, }, else, if, (, section, ., has, (]
[SourceMapParseException, (, "Unable to retrieve: ", +, url, ), ;, }, }, else, if, (, section, ., has, (, "map", ), ), {]
["Unable to retrieve: ", +, url, ), ;, }, }, else, if, (, section, ., has, (, "map", ), ), {, mapSectionContents, =]
["Unable to retrieve: ", +, url, ), ;, }, }, else, if, (, section, ., has, (, "map", ), ), {, mapSectionContents, =]
[;, }, }, else, if, (, section, ., has, (, "map", ), ), {, mapSectionContents, =, section, ., getString, (]
[., has, (, "map", ), ), {, mapSectionContents, =, section, ., getString, (, "map", ), ;, }, else, {, throw]
["map", ), ), {, mapSectionContents, =, section, ., getString, (, "map", ), ;, }, else, {, throw, new, SourceMapParseException, (]
[mapSectionContents, =, section, ., getString, (, "map", ), ;, }, else, {, throw, new, SourceMapParseException, (, "Invalid map format: section must have either 'map' or 'url'", ), ;, }]
[mapSectionContents, =, section, ., getString, (, "map", ), ;, }, else, {, throw, new, SourceMapParseException, (, "Invalid map format: section must have either 'map' or 'url'", ), ;, }]
[getString, (, "map", ), ;, }, else, {, throw, new, SourceMapParseException, (, "Invalid map format: section must have either 'map' or 'url'", ), ;, }, generator, ., mergeMapSection, (]
["map", ), ;, }, else, {, throw, new, SourceMapParseException, (, "Invalid map format: section must have either 'map' or 'url'", ), ;, }, generator, ., mergeMapSection, (, line, ,]
[;, }, else, {, throw, new, SourceMapParseException, (, "Invalid map format: section must have either 'map' or 'url'", ), ;, }, generator, ., mergeMapSection, (, line, ,, column, ,]
[(, "Invalid map format: section must have either 'map' or 'url'", ), ;, }, generator, ., mergeMapSection, (, line, ,, column, ,, mapSectionContents, ), ;, }, StringBuilder, sb, =]
[mergeMapSection, (, line, ,, column, ,, mapSectionContents, ), ;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;, try, {]
[mergeMapSection, (, line, ,, column, ,, mapSectionContents, ), ;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;, try, {]
[column, ,, mapSectionContents, ), ;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;, try, {, generator, ., appendTo, (]
[mapSectionContents, ), ;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;, try, {, generator, ., appendTo, (, sb, ,]
[;, try, {, generator, ., appendTo, (, sb, ,, file, ), ;, }, catch, (, IOException, e, ), {, throw]
[generator, ., appendTo, (, sb, ,, file, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (]
[sb, ,, file, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }]
[file, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, parse, (]
[file, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, parse, (]
[), ;, }, parse, (, sb, ., toString, (, ), ), ;, }, catch, (, IOException, ex, ), {, throw]
[parse, (, sb, ., toString, (, ), ), ;, }, catch, (, IOException, ex, ), {, throw, new, SourceMapParseException, (]
[parse, (, sb, ., toString, (, ), ), ;, }, catch, (, IOException, ex, ), {, throw, new, SourceMapParseException, (]
[sb, ., toString, (, ), ), ;, }, catch, (, IOException, ex, ), {, throw, new, SourceMapParseException, (, "IO exception: ", +]
[ex, ), {, throw, new, SourceMapParseException, (, "IO exception: ", +, ex, ), ;, }, catch, (, JSONException, ex, ), {, throw]
[throw, new, SourceMapParseException, (, "IO exception: ", +, ex, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (]
[throw, new, SourceMapParseException, (, "IO exception: ", +, ex, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (]
[SourceMapParseException, (, "IO exception: ", +, ex, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +]
["JSON parse exception: ", +, ex, ), ;, }, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, column, ), {]
["JSON parse exception: ", +, ex, ), ;, }, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, column, ), {]
[), ;, }, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, column, ), {, lineNumber, --, ;]
[), ;, }, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, column, ), {, lineNumber, --, ;]
[Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, column, ), {, lineNumber, --, ;, column, --, ;, if, (]
[Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, column, ), {, lineNumber, --, ;, column, --, ;, if, (]
[Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, column, ), {, lineNumber, --, ;, column, --, ;, if, (]
[OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, column, ), {, lineNumber, --, ;, column, --, ;, if, (, lineNumber, <]
[(, int, lineNumber, ,, int, column, ), {, lineNumber, --, ;, column, --, ;, if, (, lineNumber, <, 0, ||]
[(, int, lineNumber, ,, int, column, ), {, lineNumber, --, ;, column, --, ;, if, (, lineNumber, <, 0, ||]
[lineNumber, ,, int, column, ), {, lineNumber, --, ;, column, --, ;, if, (, lineNumber, <, 0, ||, lineNumber, >=]
[lineNumber, ,, int, column, ), {, lineNumber, --, ;, column, --, ;, if, (, lineNumber, <, 0, ||, lineNumber, >=]
[;, column, --, ;, if, (, lineNumber, <, 0, ||, lineNumber, >=, lines, ., size, (, ), ), {, return]
[;, if, (, lineNumber, <, 0, ||, lineNumber, >=, lines, ., size, (, ), ), {, return, null, ;, }]
[;, if, (, lineNumber, <, 0, ||, lineNumber, >=, lines, ., size, (, ), ), {, return, null, ;, }]
[<, 0, ||, lineNumber, >=, lines, ., size, (, ), ), {, return, null, ;, }, Preconditions, ., checkState, (]
[<, 0, ||, lineNumber, >=, lines, ., size, (, ), ), {, return, null, ;, }, Preconditions, ., checkState, (]
[||, lineNumber, >=, lines, ., size, (, ), ), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=]
[lines, ., size, (, ), ), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ), ;]
[lines, ., size, (, ), ), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ), ;]
[), ), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ), ;, Preconditions, ., checkState, (]
[), ), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ), ;, Preconditions, ., checkState, (]
[{, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ), ;, Preconditions, ., checkState, (, column, >=]
[Preconditions, ., checkState, (, lineNumber, >=, 0, ), ;, Preconditions, ., checkState, (, column, >=, 0, ), ;, if, (]
[Preconditions, ., checkState, (, lineNumber, >=, 0, ), ;, Preconditions, ., checkState, (, column, >=, 0, ), ;, if, (]
[Preconditions, ., checkState, (, lineNumber, >=, 0, ), ;, Preconditions, ., checkState, (, column, >=, 0, ), ;, if, (]
[lineNumber, >=, 0, ), ;, Preconditions, ., checkState, (, column, >=, 0, ), ;, if, (, lines, ., get, (]
[), ;, Preconditions, ., checkState, (, column, >=, 0, ), ;, if, (, lines, ., get, (, lineNumber, ), ==]
[checkState, (, column, >=, 0, ), ;, if, (, lines, ., get, (, lineNumber, ), ==, null, ), {, return]
[column, >=, 0, ), ;, if, (, lines, ., get, (, lineNumber, ), ==, null, ), {, return, getPreviousMapping, (]
[(, lineNumber, ), ==, null, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }, ArrayList, <, Entry, >, entries, =]
[(, lineNumber, ), ==, null, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }, ArrayList, <, Entry, >, entries, =]
[null, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }, ArrayList, <, Entry, >, entries, =, lines, ., get, (]
[return, getPreviousMapping, (, lineNumber, ), ;, }, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;]
[return, getPreviousMapping, (, lineNumber, ), ;, }, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;]
[), ;, }, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, Preconditions, ., checkState, (]
[), ;, }, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, Preconditions, ., checkState, (]
[), ;, }, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, Preconditions, ., checkState, (]
[>, entries, =, lines, ., get, (, lineNumber, ), ;, Preconditions, ., checkState, (, entries, ., size, (, ), >]
[get, (, lineNumber, ), ;, Preconditions, ., checkState, (, entries, ., size, (, ), >, 0, ), ;, if, (]
[get, (, lineNumber, ), ;, Preconditions, ., checkState, (, entries, ., size, (, ), >, 0, ), ;, if, (]
[get, (, lineNumber, ), ;, Preconditions, ., checkState, (, entries, ., size, (, ), >, 0, ), ;, if, (]
[get, (, lineNumber, ), ;, Preconditions, ., checkState, (, entries, ., size, (, ), >, 0, ), ;, if, (]
[;, Preconditions, ., checkState, (, entries, ., size, (, ), >, 0, ), ;, if, (, entries, ., get, (]
[size, (, ), >, 0, ), ;, if, (, entries, ., get, (, 0, ), ., getGeneratedColumn, (, ), >]
[0, ), ;, if, (, entries, ., get, (, 0, ), ., getGeneratedColumn, (, ), >, column, ), {, return]
[;, if, (, entries, ., get, (, 0, ), ., getGeneratedColumn, (, ), >, column, ), {, return, getPreviousMapping, (]
[0, ), ., getGeneratedColumn, (, ), >, column, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }, int, index, =]
[., getGeneratedColumn, (, ), >, column, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }, int, index, =, search, (]
[(, ), >, column, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }, int, index, =, search, (, entries, ,]
[>, column, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }, int, index, =, search, (, entries, ,, column, ,]
[), {, return, getPreviousMapping, (, lineNumber, ), ;, }, int, index, =, search, (, entries, ,, column, ,, 0, ,]
[), {, return, getPreviousMapping, (, lineNumber, ), ;, }, int, index, =, search, (, entries, ,, column, ,, 0, ,]
[), {, return, getPreviousMapping, (, lineNumber, ), ;, }, int, index, =, search, (, entries, ,, column, ,, 0, ,]
[), ;, }, int, index, =, search, (, entries, ,, column, ,, 0, ,, entries, ., size, (, ), -]
[int, index, =, search, (, entries, ,, column, ,, 0, ,, entries, ., size, (, ), -, 1, ), ;]
[int, index, =, search, (, entries, ,, column, ,, 0, ,, entries, ., size, (, ), -, 1, ), ;]
[(, entries, ,, column, ,, 0, ,, entries, ., size, (, ), -, 1, ), ;, Preconditions, ., checkState, (]
[(, entries, ,, column, ,, 0, ,, entries, ., size, (, ), -, 1, ), ;, Preconditions, ., checkState, (]
[,, column, ,, 0, ,, entries, ., size, (, ), -, 1, ), ;, Preconditions, ., checkState, (, index, >=]
[,, 0, ,, entries, ., size, (, ), -, 1, ), ;, Preconditions, ., checkState, (, index, >=, 0, ,]
[,, entries, ., size, (, ), -, 1, ), ;, Preconditions, ., checkState, (, index, >=, 0, ,, "unexpected:%s", ,]
[(, ), -, 1, ), ;, Preconditions, ., checkState, (, index, >=, 0, ,, "unexpected:%s", ,, index, ), ;, return]
[-, 1, ), ;, Preconditions, ., checkState, (, index, >=, 0, ,, "unexpected:%s", ,, index, ), ;, return, getOriginalMappingForEntry, (]
[-, 1, ), ;, Preconditions, ., checkState, (, index, >=, 0, ,, "unexpected:%s", ,, index, ), ;, return, getOriginalMappingForEntry, (]
[Preconditions, ., checkState, (, index, >=, 0, ,, "unexpected:%s", ,, index, ), ;, return, getOriginalMappingForEntry, (, entries, ., get, (]
[., get, (, index, ), ), ;, }, @, Override, public, Collection, <, String, >, getOriginalSources, (, ), {, return]
[., get, (, index, ), ), ;, }, @, Override, public, Collection, <, String, >, getOriginalSources, (, ), {, return]
[), ), ;, }, @, Override, public, Collection, <, String, >, getOriginalSources, (, ), {, return, Arrays, ., asList, (]
[Override, public, Collection, <, OriginalMapping, >, getReverseMapping, (, String, originalFile, ,, int, line, ,, int, column, ), {, if, (]
[Override, public, Collection, <, OriginalMapping, >, getReverseMapping, (, String, originalFile, ,, int, line, ,, int, column, ), {, if, (]
[Collection, <, OriginalMapping, >, getReverseMapping, (, String, originalFile, ,, int, line, ,, int, column, ), {, if, (, reverseSourceMapping, ==]
[>, getReverseMapping, (, String, originalFile, ,, int, line, ,, int, column, ), {, if, (, reverseSourceMapping, ==, null, ), {]
[==, null, ), {, createReverseMapping, (, ), ;, }, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, sourceLineToCollectionMap, =]
[==, null, ), {, createReverseMapping, (, ), ;, }, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, sourceLineToCollectionMap, =]
[createReverseMapping, (, ), ;, }, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, sourceLineToCollectionMap, =, reverseSourceMapping, ., get, (]
[Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, sourceLineToCollectionMap, =, reverseSourceMapping, ., get, (, originalFile, ), ;, if, (]
[Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, sourceLineToCollectionMap, =, reverseSourceMapping, ., get, (, originalFile, ), ;, if, (]
[Integer, ,, Collection, <, OriginalMapping, >, >, sourceLineToCollectionMap, =, reverseSourceMapping, ., get, (, originalFile, ), ;, if, (, sourceLineToCollectionMap, ==]
[OriginalMapping, >, >, sourceLineToCollectionMap, =, reverseSourceMapping, ., get, (, originalFile, ), ;, if, (, sourceLineToCollectionMap, ==, null, ), {, return]
[OriginalMapping, >, >, sourceLineToCollectionMap, =, reverseSourceMapping, ., get, (, originalFile, ), ;, if, (, sourceLineToCollectionMap, ==, null, ), {, return]
[==, null, ), {, return, Collections, ., emptyList, (, ), ;, }, else, {, Collection, <, OriginalMapping, >, mappings, =]
[==, null, ), {, return, Collections, ., emptyList, (, ), ;, }, else, {, Collection, <, OriginalMapping, >, mappings, =]
[return, Collections, ., emptyList, (, ), ;, }, else, {, Collection, <, OriginalMapping, >, mappings, =, sourceLineToCollectionMap, ., get, (]
[), ;, }, else, {, Collection, <, OriginalMapping, >, mappings, =, sourceLineToCollectionMap, ., get, (, line, ), ;, if, (]
[), ;, }, else, {, Collection, <, OriginalMapping, >, mappings, =, sourceLineToCollectionMap, ., get, (, line, ), ;, if, (]
[}, else, {, Collection, <, OriginalMapping, >, mappings, =, sourceLineToCollectionMap, ., get, (, line, ), ;, if, (, mappings, ==]
[<, OriginalMapping, >, mappings, =, sourceLineToCollectionMap, ., get, (, line, ), ;, if, (, mappings, ==, null, ), {, return]
[<, OriginalMapping, >, mappings, =, sourceLineToCollectionMap, ., get, (, line, ), ;, if, (, mappings, ==, null, ), {, return]
[), ;, if, (, mappings, ==, null, ), {, return, Collections, ., emptyList, (, ), ;, }, else, {, return]
[mappings, ;, }, }, }, private, String, [, ], getJavaStringArray, (, JSONArray, array, ), throws, JSONException, {, int, len, =]
[mappings, ;, }, }, }, private, String, [, ], getJavaStringArray, (, JSONArray, array, ), throws, JSONException, {, int, len, =]
[JSONArray, array, ), throws, JSONException, {, int, len, =, array, ., length, (, ), ;, String, [, ], result, =]
[throws, JSONException, {, int, len, =, array, ., length, (, ), ;, String, [, ], result, =, new, String, []
[length, (, ), ;, String, [, ], result, =, new, String, [, len, ], ;, for, (, int, i, =]
[), ;, String, [, ], result, =, new, String, [, len, ], ;, for, (, int, i, =, 0, ;]
[), ;, String, [, ], result, =, new, String, [, len, ], ;, for, (, int, i, =, 0, ;]
[String, [, ], result, =, new, String, [, len, ], ;, for, (, int, i, =, 0, ;, i, <]
[], result, =, new, String, [, len, ], ;, for, (, int, i, =, 0, ;, i, <, len, ;]
[], result, =, new, String, [, len, ], ;, for, (, int, i, =, 0, ;, i, <, len, ;]
[String, [, len, ], ;, for, (, int, i, =, 0, ;, i, <, len, ;, i, ++, ), {]
[String, [, len, ], ;, for, (, int, i, =, 0, ;, i, <, len, ;, i, ++, ), {]
[len, ], ;, for, (, int, i, =, 0, ;, i, <, len, ;, i, ++, ), {, result, []
[for, (, int, i, =, 0, ;, i, <, len, ;, i, ++, ), {, result, [, i, ], =]
[for, (, int, i, =, 0, ;, i, <, len, ;, i, ++, ), {, result, [, i, ], =]
[=, 0, ;, i, <, len, ;, i, ++, ), {, result, [, i, ], =, array, ., getString, (]
[len, ;, i, ++, ), {, result, [, i, ], =, array, ., getString, (, i, ), ;, }, return]
[getString, (, i, ), ;, }, return, result, ;, }, private, class, MappingBuilder, {, private, static, final, int, MAX_ENTRY_VALUES, =]
[class, MappingBuilder, {, private, static, final, int, MAX_ENTRY_VALUES, =, 5, ;, private, final, StringCharIterator, content, ;, private, int, line, =]
[int, MAX_ENTRY_VALUES, =, 5, ;, private, final, StringCharIterator, content, ;, private, int, line, =, 0, ;, private, int, previousCol, =]
[final, StringCharIterator, content, ;, private, int, line, =, 0, ;, private, int, previousCol, =, 0, ;, private, int, previousSrcId, =]
[line, =, 0, ;, private, int, previousCol, =, 0, ;, private, int, previousSrcId, =, 0, ;, private, int, previousSrcLine, =]
[previousCol, =, 0, ;, private, int, previousSrcId, =, 0, ;, private, int, previousSrcLine, =, 0, ;, private, int, previousSrcColumn, =]
[previousSrcId, =, 0, ;, private, int, previousSrcLine, =, 0, ;, private, int, previousSrcColumn, =, 0, ;, private, int, previousNameId, =]
[0, ;, private, int, previousSrcColumn, =, 0, ;, private, int, previousNameId, =, 0, ;, MappingBuilder, (, String, lineMap, ), {]
[0, ;, private, int, previousSrcColumn, =, 0, ;, private, int, previousNameId, =, 0, ;, MappingBuilder, (, String, lineMap, ), {]
[previousSrcColumn, =, 0, ;, private, int, previousNameId, =, 0, ;, MappingBuilder, (, String, lineMap, ), {, this, ., content, =]
[;, private, int, previousNameId, =, 0, ;, MappingBuilder, (, String, lineMap, ), {, this, ., content, =, new, StringCharIterator, (]
[., content, =, new, StringCharIterator, (, lineMap, ), ;, }, void, build, (, ), {, int, [, ], temp, =]
[new, StringCharIterator, (, lineMap, ), ;, }, void, build, (, ), {, int, [, ], temp, =, new, int, []
[(, ), {, int, [, ], temp, =, new, int, [, MAX_ENTRY_VALUES, ], ;, ArrayList, <, Entry, >, entries, =]
[[, MAX_ENTRY_VALUES, ], ;, ArrayList, <, Entry, >, entries, =, new, ArrayList, <, Entry, >, (, ), ;, while, (]
[[, MAX_ENTRY_VALUES, ], ;, ArrayList, <, Entry, >, entries, =, new, ArrayList, <, Entry, >, (, ), ;, while, (]
[=, new, ArrayList, <, Entry, >, (, ), ;, while, (, content, ., hasNext, (, ), ), {, if, (]
[ArrayList, <, Entry, >, (, ), ;, while, (, content, ., hasNext, (, ), ), {, if, (, tryConsumeToken, (]
[(, ), ), {, if, (, tryConsumeToken, (, ';', ), ), {, ArrayList, <, Entry, >, result, ;, if, (]
[(, ), ), {, if, (, tryConsumeToken, (, ';', ), ), {, ArrayList, <, Entry, >, result, ;, if, (]
[(, ), ), {, if, (, tryConsumeToken, (, ';', ), ), {, ArrayList, <, Entry, >, result, ;, if, (]
[tryConsumeToken, (, ';', ), ), {, ArrayList, <, Entry, >, result, ;, if, (, entries, ., size, (, ), >]
[), ), {, ArrayList, <, Entry, >, result, ;, if, (, entries, ., size, (, ), >, 0, ), {]
[{, ArrayList, <, Entry, >, result, ;, if, (, entries, ., size, (, ), >, 0, ), {, result, =]
[<, Entry, >, result, ;, if, (, entries, ., size, (, ), >, 0, ), {, result, =, entries, ;]
[>, result, ;, if, (, entries, ., size, (, ), >, 0, ), {, result, =, entries, ;, entries, =]
[0, ), {, result, =, entries, ;, entries, =, new, ArrayList, <, Entry, >, (, ), ;, }, else, {]
[{, result, =, entries, ;, entries, =, new, ArrayList, <, Entry, >, (, ), ;, }, else, {, result, =]
[entries, ;, entries, =, new, ArrayList, <, Entry, >, (, ), ;, }, else, {, result, =, null, ;, }]
[entries, ;, entries, =, new, ArrayList, <, Entry, >, (, ), ;, }, else, {, result, =, null, ;, }]
[new, ArrayList, <, Entry, >, (, ), ;, }, else, {, result, =, null, ;, }, lines, ., add, (]
[Entry, >, (, ), ;, }, else, {, result, =, null, ;, }, lines, ., add, (, result, ), ;]
[Entry, >, (, ), ;, }, else, {, result, =, null, ;, }, lines, ., add, (, result, ), ;]
[else, {, result, =, null, ;, }, lines, ., add, (, result, ), ;, entries, ., clear, (, ), ;]
[else, {, result, =, null, ;, }, lines, ., add, (, result, ), ;, entries, ., clear, (, ), ;]
[=, null, ;, }, lines, ., add, (, result, ), ;, entries, ., clear, (, ), ;, line, ++, ;]
[;, }, lines, ., add, (, result, ), ;, entries, ., clear, (, ), ;, line, ++, ;, previousCol, =]
[;, entries, ., clear, (, ), ;, line, ++, ;, previousCol, =, 0, ;, }, else, {, int, entryValues, =]
[(, ), ;, line, ++, ;, previousCol, =, 0, ;, }, else, {, int, entryValues, =, 0, ;, while, (]
[), ;, line, ++, ;, previousCol, =, 0, ;, }, else, {, int, entryValues, =, 0, ;, while, (, !]
[previousCol, =, 0, ;, }, else, {, int, entryValues, =, 0, ;, while, (, !, entryComplete, (, ), ), {]
[previousCol, =, 0, ;, }, else, {, int, entryValues, =, 0, ;, while, (, !, entryComplete, (, ), ), {]
[0, ;, }, else, {, int, entryValues, =, 0, ;, while, (, !, entryComplete, (, ), ), {, temp, []
[else, {, int, entryValues, =, 0, ;, while, (, !, entryComplete, (, ), ), {, temp, [, entryValues, ], =]
[=, 0, ;, while, (, !, entryComplete, (, ), ), {, temp, [, entryValues, ], =, nextValue, (, ), ;]
[=, 0, ;, while, (, !, entryComplete, (, ), ), {, temp, [, entryValues, ], =, nextValue, (, ), ;]
[(, ), ), {, temp, [, entryValues, ], =, nextValue, (, ), ;, entryValues, ++, ;, }, Entry, entry, =]
[), {, temp, [, entryValues, ], =, nextValue, (, ), ;, entryValues, ++, ;, }, Entry, entry, =, decodeEntry, (]
[temp, [, entryValues, ], =, nextValue, (, ), ;, entryValues, ++, ;, }, Entry, entry, =, decodeEntry, (, temp, ,]
[], =, nextValue, (, ), ;, entryValues, ++, ;, }, Entry, entry, =, decodeEntry, (, temp, ,, entryValues, ), ;]
[nextValue, (, ), ;, entryValues, ++, ;, }, Entry, entry, =, decodeEntry, (, temp, ,, entryValues, ), ;, validateEntry, (]
[;, entryValues, ++, ;, }, Entry, entry, =, decodeEntry, (, temp, ,, entryValues, ), ;, validateEntry, (, entry, ), ;]
[;, entryValues, ++, ;, }, Entry, entry, =, decodeEntry, (, temp, ,, entryValues, ), ;, validateEntry, (, entry, ), ;]
[}, Entry, entry, =, decodeEntry, (, temp, ,, entryValues, ), ;, validateEntry, (, entry, ), ;, entries, ., add, (]
[=, decodeEntry, (, temp, ,, entryValues, ), ;, validateEntry, (, entry, ), ;, entries, ., add, (, entry, ), ;]
[(, temp, ,, entryValues, ), ;, validateEntry, (, entry, ), ;, entries, ., add, (, entry, ), ;, tryConsumeToken, (]
[(, entry, ), ;, tryConsumeToken, (, ',', ), ;, }, }, }, private, void, validateEntry, (, Entry, entry, ), {]
[(, entry, ), ;, tryConsumeToken, (, ',', ), ;, }, }, }, private, void, validateEntry, (, Entry, entry, ), {]
[tryConsumeToken, (, ',', ), ;, }, }, }, private, void, validateEntry, (, Entry, entry, ), {, Preconditions, ., checkState, (]
[tryConsumeToken, (, ',', ), ;, }, }, }, private, void, validateEntry, (, Entry, entry, ), {, Preconditions, ., checkState, (]
[',', ), ;, }, }, }, private, void, validateEntry, (, Entry, entry, ), {, Preconditions, ., checkState, (, line, <]
[}, }, }, private, void, validateEntry, (, Entry, entry, ), {, Preconditions, ., checkState, (, line, <, lineCount, ), ;]
[}, }, }, private, void, validateEntry, (, Entry, entry, ), {, Preconditions, ., checkState, (, line, <, lineCount, ), ;]
[void, validateEntry, (, Entry, entry, ), {, Preconditions, ., checkState, (, line, <, lineCount, ), ;, Preconditions, ., checkState, (]
[void, validateEntry, (, Entry, entry, ), {, Preconditions, ., checkState, (, line, <, lineCount, ), ;, Preconditions, ., checkState, (]
[void, validateEntry, (, Entry, entry, ), {, Preconditions, ., checkState, (, line, <, lineCount, ), ;, Preconditions, ., checkState, (]
[void, validateEntry, (, Entry, entry, ), {, Preconditions, ., checkState, (, line, <, lineCount, ), ;, Preconditions, ., checkState, (]
[{, Preconditions, ., checkState, (, line, <, lineCount, ), ;, Preconditions, ., checkState, (, entry, ., getSourceFileId, (, ), ==]
[., checkState, (, line, <, lineCount, ), ;, Preconditions, ., checkState, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ||]
[., checkState, (, line, <, lineCount, ), ;, Preconditions, ., checkState, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ||]
[., checkState, (, line, <, lineCount, ), ;, Preconditions, ., checkState, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ||]
[), ;, Preconditions, ., checkState, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <]
[), ;, Preconditions, ., checkState, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <]
[(, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <, sources, ., length, ), ;]
[(, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <, sources, ., length, ), ;]
[(, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <, sources, ., length, ), ;, Preconditions, ., checkState, (]
[(, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <, sources, ., length, ), ;, Preconditions, ., checkState, (]
[(, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <, sources, ., length, ), ;, Preconditions, ., checkState, (]
[(, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <, sources, ., length, ), ;, Preconditions, ., checkState, (]
[., getSourceFileId, (, ), <, sources, ., length, ), ;, Preconditions, ., checkState, (, entry, ., getNameId, (, ), ==]
[(, ), <, sources, ., length, ), ;, Preconditions, ., checkState, (, entry, ., getNameId, (, ), ==, UNMAPPED, ||]
[(, ), <, sources, ., length, ), ;, Preconditions, ., checkState, (, entry, ., getNameId, (, ), ==, UNMAPPED, ||]
[(, ), <, sources, ., length, ), ;, Preconditions, ., checkState, (, entry, ., getNameId, (, ), ==, UNMAPPED, ||]
[), ;, Preconditions, ., checkState, (, entry, ., getNameId, (, ), ==, UNMAPPED, ||, entry, ., getNameId, (, ), <]
[), ;, Preconditions, ., checkState, (, entry, ., getNameId, (, ), ==, UNMAPPED, ||, entry, ., getNameId, (, ), <]
[;, }, private, Entry, decodeEntry, (, int, [, ], vals, ,, int, entryValues, ), {, Entry, entry, ;, switch, (]
[decodeEntry, (, int, [, ], vals, ,, int, entryValues, ), {, Entry, entry, ;, switch, (, entryValues, ), {, case]
[int, [, ], vals, ,, int, entryValues, ), {, Entry, entry, ;, switch, (, entryValues, ), {, case, 1, :]
[], vals, ,, int, entryValues, ), {, Entry, entry, ;, switch, (, entryValues, ), {, case, 1, :, entry, =]
[int, entryValues, ), {, Entry, entry, ;, switch, (, entryValues, ), {, case, 1, :, entry, =, new, UnmappedEntry, (]
[int, entryValues, ), {, Entry, entry, ;, switch, (, entryValues, ), {, case, 1, :, entry, =, new, UnmappedEntry, (]
[int, entryValues, ), {, Entry, entry, ;, switch, (, entryValues, ), {, case, 1, :, entry, =, new, UnmappedEntry, (]
[), {, Entry, entry, ;, switch, (, entryValues, ), {, case, 1, :, entry, =, new, UnmappedEntry, (, vals, []
[entry, ;, switch, (, entryValues, ), {, case, 1, :, entry, =, new, UnmappedEntry, (, vals, [, 0, ], +]
[(, entryValues, ), {, case, 1, :, entry, =, new, UnmappedEntry, (, vals, [, 0, ], +, previousCol, ), ;]
[), {, case, 1, :, entry, =, new, UnmappedEntry, (, vals, [, 0, ], +, previousCol, ), ;, previousCol, =]
[), {, case, 1, :, entry, =, new, UnmappedEntry, (, vals, [, 0, ], +, previousCol, ), ;, previousCol, =]
[new, UnmappedEntry, (, vals, [, 0, ], +, previousCol, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, return]
[vals, [, 0, ], +, previousCol, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case]
[0, ], +, previousCol, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :]
[+, previousCol, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :, entry, =]
[;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry, (]
[;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry, (]
[;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry, (]
[=, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry, (, vals, []
[getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry, (, vals, [, 0, ], +]
[), ;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry, (, vals, [, 0, ], +, previousCol, ,]
[), ;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry, (, vals, [, 0, ], +, previousCol, ,]
[), ;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry, (, vals, [, 0, ], +, previousCol, ,]
[return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, []
[case, 4, :, entry, =, new, UnnamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +]
[:, entry, =, new, UnnamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,]
[:, entry, =, new, UnnamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,]
[:, entry, =, new, UnnamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,]
[=, new, UnnamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, []
[(, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +]
[[, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,]
[[, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,]
[[, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,]
[], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, []
[,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +]
[1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ), ;]
[+, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol, =]
[+, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol, =]
[], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;]
[previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =]
[previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =]
[+, previousSrcColumn, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;]
[), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =]
[), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =]
[getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;]
[), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =]
[), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =]
[(, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, return]
[previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, return, entry, ;, case]
[entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, return, entry, ;, case, 5, :]
[getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, return, entry, ;, case, 5, :, entry, =]
[;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, return, entry, ;, case, 5, :, entry, =, new, NamedEntry, (]
[;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, return, entry, ;, case, 5, :, entry, =, new, NamedEntry, (]
[;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, return, entry, ;, case, 5, :, entry, =, new, NamedEntry, (]
[=, entry, ., getSourceColumn, (, ), ;, return, entry, ;, case, 5, :, entry, =, new, NamedEntry, (, vals, []
[getSourceColumn, (, ), ;, return, entry, ;, case, 5, :, entry, =, new, NamedEntry, (, vals, [, 0, ], +]
[), ;, return, entry, ;, case, 5, :, entry, =, new, NamedEntry, (, vals, [, 0, ], +, previousCol, ,]
[), ;, return, entry, ;, case, 5, :, entry, =, new, NamedEntry, (, vals, [, 0, ], +, previousCol, ,]
[), ;, return, entry, ;, case, 5, :, entry, =, new, NamedEntry, (, vals, [, 0, ], +, previousCol, ,]
[return, entry, ;, case, 5, :, entry, =, new, NamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, []
[case, 5, :, entry, =, new, NamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +]
[:, entry, =, new, NamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,]
[:, entry, =, new, NamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,]
[:, entry, =, new, NamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,]
[=, new, NamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, []
[(, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +]
[[, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,]
[[, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,]
[[, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,]
[], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, []
[,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +]
[[, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,]
[[, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,]
[[, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,]
[], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,, vals, []
[,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,, vals, [, 4, ], +]
[2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, ), ;]
[+, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, ), ;, previousCol, =]
[+, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, ), ;, previousCol, =]
[], +, previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;]
[previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =]
[previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =]
[+, previousNameId, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;]
[), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =]
[), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =]
[getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;]
[), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =]
[), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =]
[getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;]
[), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, previousNameId, =]
[), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, previousNameId, =]
[(, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, previousNameId, =, entry, ., getNameId, (, ), ;, return]
[entry, ., getSourceColumn, (, ), ;, previousNameId, =, entry, ., getNameId, (, ), ;, return, entry, ;, default, :, throw]
[(, ), ;, previousNameId, =, entry, ., getNameId, (, ), ;, return, entry, ;, default, :, throw, new, IllegalStateException, (]
[(, ), ;, previousNameId, =, entry, ., getNameId, (, ), ;, return, entry, ;, default, :, throw, new, IllegalStateException, (]
[;, previousNameId, =, entry, ., getNameId, (, ), ;, return, entry, ;, default, :, throw, new, IllegalStateException, (, "Unexpected number of values for entry:", +]
[new, IllegalStateException, (, "Unexpected number of values for entry:", +, entryValues, ), ;, }, }, private, boolean, tryConsumeToken, (, char, token, ), {, if, (]
[new, IllegalStateException, (, "Unexpected number of values for entry:", +, entryValues, ), ;, }, }, private, boolean, tryConsumeToken, (, char, token, ), {, if, (]
[new, IllegalStateException, (, "Unexpected number of values for entry:", +, entryValues, ), ;, }, }, private, boolean, tryConsumeToken, (, char, token, ), {, if, (]
[), ;, }, }, private, boolean, tryConsumeToken, (, char, token, ), {, if, (, content, ., hasNext, (, ), &&]
[), ;, }, }, private, boolean, tryConsumeToken, (, char, token, ), {, if, (, content, ., hasNext, (, ), &&]
[), ;, }, }, private, boolean, tryConsumeToken, (, char, token, ), {, if, (, content, ., hasNext, (, ), &&]
[tryConsumeToken, (, char, token, ), {, if, (, content, ., hasNext, (, ), &&, content, ., peek, (, ), ==]
[token, ), {, if, (, content, ., hasNext, (, ), &&, content, ., peek, (, ), ==, token, ), {]
[token, ), {, if, (, content, ., hasNext, (, ), &&, content, ., peek, (, ), ==, token, ), {]
[hasNext, (, ), &&, content, ., peek, (, ), ==, token, ), {, content, ., next, (, ), ;, return]
[content, ., peek, (, ), ==, token, ), {, content, ., next, (, ), ;, return, true, ;, }, return]
[next, (, ), ;, return, true, ;, }, return, false, ;, }, private, boolean, entryComplete, (, ), {, if, (]
[(, ), ;, return, true, ;, }, return, false, ;, }, private, boolean, entryComplete, (, ), {, if, (, !]
[(, ), ;, return, true, ;, }, return, false, ;, }, private, boolean, entryComplete, (, ), {, if, (, !]
[false, ;, }, private, boolean, entryComplete, (, ), {, if, (, !, content, ., hasNext, (, ), ), {, return]
[(, ), {, if, (, !, content, ., hasNext, (, ), ), {, return, true, ;, }, char, c, =]
[(, ), {, if, (, !, content, ., hasNext, (, ), ), {, return, true, ;, }, char, c, =]
[., hasNext, (, ), ), {, return, true, ;, }, char, c, =, content, ., peek, (, ), ;, return]
[hasNext, (, ), ), {, return, true, ;, }, char, c, =, content, ., peek, (, ), ;, return, (]
[hasNext, (, ), ), {, return, true, ;, }, char, c, =, content, ., peek, (, ), ;, return, (]
[hasNext, (, ), ), {, return, true, ;, }, char, c, =, content, ., peek, (, ), ;, return, (]
[), ), {, return, true, ;, }, char, c, =, content, ., peek, (, ), ;, return, (, c, ==]
[{, return, true, ;, }, char, c, =, content, ., peek, (, ), ;, return, (, c, ==, ';', ||]
[{, return, true, ;, }, char, c, =, content, ., peek, (, ), ;, return, (, c, ==, ';', ||]
[true, ;, }, char, c, =, content, ., peek, (, ), ;, return, (, c, ==, ';', ||, c, ==]
[;, return, (, c, ==, ';', ||, c, ==, ',', ), ;, }, private, int, nextValue, (, ), {, return]
[;, return, (, c, ==, ';', ||, c, ==, ',', ), ;, }, private, int, nextValue, (, ), {, return]
[==, ';', ||, c, ==, ',', ), ;, }, private, int, nextValue, (, ), {, return, Base64VLQ, ., decode, (]
[search, (, ArrayList, <, Entry, >, entries, ,, int, target, ,, int, start, ,, int, end, ), {, while, (]
[entries, ,, int, target, ,, int, start, ,, int, end, ), {, while, (, true, ), {, int, mid, =]
[entries, ,, int, target, ,, int, start, ,, int, end, ), {, while, (, true, ), {, int, mid, =]
[,, int, target, ,, int, start, ,, int, end, ), {, while, (, true, ), {, int, mid, =, (]
[,, int, target, ,, int, start, ,, int, end, ), {, while, (, true, ), {, int, mid, =, (]
[int, target, ,, int, start, ,, int, end, ), {, while, (, true, ), {, int, mid, =, (, (]
[int, target, ,, int, start, ,, int, end, ), {, while, (, true, ), {, int, mid, =, (, (]
[,, int, start, ,, int, end, ), {, while, (, true, ), {, int, mid, =, (, (, end, -]
[,, int, end, ), {, while, (, true, ), {, int, mid, =, (, (, end, -, start, ), /]
[), {, while, (, true, ), {, int, mid, =, (, (, end, -, start, ), /, 2, ), +]
[), {, int, mid, =, (, (, end, -, start, ), /, 2, ), +, start, ;, int, compare, =]
[int, mid, =, (, (, end, -, start, ), /, 2, ), +, start, ;, int, compare, =, compareEntry, (]
[=, (, (, end, -, start, ), /, 2, ), +, start, ;, int, compare, =, compareEntry, (, entries, ,]
[(, end, -, start, ), /, 2, ), +, start, ;, int, compare, =, compareEntry, (, entries, ,, mid, ,]
[/, 2, ), +, start, ;, int, compare, =, compareEntry, (, entries, ,, mid, ,, target, ), ;, if, (]
[/, 2, ), +, start, ;, int, compare, =, compareEntry, (, entries, ,, mid, ,, target, ), ;, if, (]
[), +, start, ;, int, compare, =, compareEntry, (, entries, ,, mid, ,, target, ), ;, if, (, compare, ==]
[int, compare, =, compareEntry, (, entries, ,, mid, ,, target, ), ;, if, (, compare, ==, 0, ), {, return]
[,, mid, ,, target, ), ;, if, (, compare, ==, 0, ), {, return, mid, ;, }, else, if, (]
[,, mid, ,, target, ), ;, if, (, compare, ==, 0, ), {, return, mid, ;, }, else, if, (]
[,, target, ), ;, if, (, compare, ==, 0, ), {, return, mid, ;, }, else, if, (, compare, <]
[;, if, (, compare, ==, 0, ), {, return, mid, ;, }, else, if, (, compare, <, 0, ), {]
[(, compare, ==, 0, ), {, return, mid, ;, }, else, if, (, compare, <, 0, ), {, start, =]
[(, compare, ==, 0, ), {, return, mid, ;, }, else, if, (, compare, <, 0, ), {, start, =]
[==, 0, ), {, return, mid, ;, }, else, if, (, compare, <, 0, ), {, start, =, mid, +]
[return, mid, ;, }, else, if, (, compare, <, 0, ), {, start, =, mid, +, 1, ;, if, (]
[return, mid, ;, }, else, if, (, compare, <, 0, ), {, start, =, mid, +, 1, ;, if, (]
[;, }, else, if, (, compare, <, 0, ), {, start, =, mid, +, 1, ;, if, (, start, >]
[(, compare, <, 0, ), {, start, =, mid, +, 1, ;, if, (, start, >, end, ), {, return]
[start, =, mid, +, 1, ;, if, (, start, >, end, ), {, return, end, ;, }, }, else, {]
[mid, +, 1, ;, if, (, start, >, end, ), {, return, end, ;, }, }, else, {, end, =]
[mid, +, 1, ;, if, (, start, >, end, ), {, return, end, ;, }, }, else, {, end, =]
[1, ;, if, (, start, >, end, ), {, return, end, ;, }, }, else, {, end, =, mid, -]
[start, >, end, ), {, return, end, ;, }, }, else, {, end, =, mid, -, 1, ;, if, (]
[start, >, end, ), {, return, end, ;, }, }, else, {, end, =, mid, -, 1, ;, if, (]
[end, ), {, return, end, ;, }, }, else, {, end, =, mid, -, 1, ;, if, (, end, <]
[end, ;, }, }, else, {, end, =, mid, -, 1, ;, if, (, end, <, start, ), {, return]
[}, }, private, int, compareEntry, (, ArrayList, <, Entry, >, entries, ,, int, entry, ,, int, target, ), {, return]
[}, }, private, int, compareEntry, (, ArrayList, <, Entry, >, entries, ,, int, entry, ,, int, target, ), {, return]
[}, }, private, int, compareEntry, (, ArrayList, <, Entry, >, entries, ,, int, entry, ,, int, target, ), {, return]
[}, }, private, int, compareEntry, (, ArrayList, <, Entry, >, entries, ,, int, entry, ,, int, target, ), {, return]
[compareEntry, (, ArrayList, <, Entry, >, entries, ,, int, entry, ,, int, target, ), {, return, entries, ., get, (]
[,, int, entry, ,, int, target, ), {, return, entries, ., get, (, entry, ), ., getGeneratedColumn, (, ), -]
[., getGeneratedColumn, (, ), -, target, ;, }, private, OriginalMapping, getPreviousMapping, (, int, lineNumber, ), {, do, {, if, (]
[., getGeneratedColumn, (, ), -, target, ;, }, private, OriginalMapping, getPreviousMapping, (, int, lineNumber, ), {, do, {, if, (]
[(, ), -, target, ;, }, private, OriginalMapping, getPreviousMapping, (, int, lineNumber, ), {, do, {, if, (, lineNumber, ==]
[;, }, private, OriginalMapping, getPreviousMapping, (, int, lineNumber, ), {, do, {, if, (, lineNumber, ==, 0, ), {, return]
[OriginalMapping, getPreviousMapping, (, int, lineNumber, ), {, do, {, if, (, lineNumber, ==, 0, ), {, return, null, ;, }]
[OriginalMapping, getPreviousMapping, (, int, lineNumber, ), {, do, {, if, (, lineNumber, ==, 0, ), {, return, null, ;, }]
[{, do, {, if, (, lineNumber, ==, 0, ), {, return, null, ;, }, lineNumber, --, ;, }, while, (]
[{, do, {, if, (, lineNumber, ==, 0, ), {, return, null, ;, }, lineNumber, --, ;, }, while, (]
[{, do, {, if, (, lineNumber, ==, 0, ), {, return, null, ;, }, lineNumber, --, ;, }, while, (]
[(, lineNumber, ==, 0, ), {, return, null, ;, }, lineNumber, --, ;, }, while, (, lines, ., get, (]
[0, ), {, return, null, ;, }, lineNumber, --, ;, }, while, (, lines, ., get, (, lineNumber, ), ==]
[;, }, while, (, lines, ., get, (, lineNumber, ), ==, null, ), ;, ArrayList, <, Entry, >, entries, =]
[;, }, while, (, lines, ., get, (, lineNumber, ), ==, null, ), ;, ArrayList, <, Entry, >, entries, =]
[lines, ., get, (, lineNumber, ), ==, null, ), ;, ArrayList, <, Entry, >, entries, =, lines, ., get, (]
[lineNumber, ), ==, null, ), ;, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, return]
[==, null, ), ;, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, return, getOriginalMappingForEntry, (]
[==, null, ), ;, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, return, getOriginalMappingForEntry, (]
[ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, return, getOriginalMappingForEntry, (, entries, ., get, (]
[ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, return, getOriginalMappingForEntry, (, entries, ., get, (]
[ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, return, getOriginalMappingForEntry, (, entries, ., get, (]
[lines, ., get, (, lineNumber, ), ;, return, getOriginalMappingForEntry, (, entries, ., get, (, entries, ., size, (, ), -]
[., size, (, ), -, 1, ), ), ;, }, private, OriginalMapping, getOriginalMappingForEntry, (, Entry, entry, ), {, if, (]
[., size, (, ), -, 1, ), ), ;, }, private, OriginalMapping, getOriginalMappingForEntry, (, Entry, entry, ), {, if, (]
[., size, (, ), -, 1, ), ), ;, }, private, OriginalMapping, getOriginalMappingForEntry, (, Entry, entry, ), {, if, (]
[), ), ;, }, private, OriginalMapping, getOriginalMappingForEntry, (, Entry, entry, ), {, if, (, entry, ., getSourceFileId, (, ), ==]
[private, OriginalMapping, getOriginalMappingForEntry, (, Entry, entry, ), {, if, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ), {, return]
[if, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ), {, return, null, ;, }, else, {, Builder, x, =]
[if, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ), {, return, null, ;, }, else, {, Builder, x, =]
[if, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ), {, return, null, ;, }, else, {, Builder, x, =]
[if, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ), {, return, null, ;, }, else, {, Builder, x, =]
[if, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ), {, return, null, ;, }, else, {, Builder, x, =]
[UNMAPPED, ), {, return, null, ;, }, else, {, Builder, x, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (]
[UNMAPPED, ), {, return, null, ;, }, else, {, Builder, x, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (]
[{, return, null, ;, }, else, {, Builder, x, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, sources, []
[{, return, null, ;, }, else, {, Builder, x, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, sources, []
[OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, sources, [, entry, ., getSourceFileId, (, ), ], ), ., setLineNumber, (]
[OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, sources, [, entry, ., getSourceFileId, (, ), ], ), ., setLineNumber, (]
[OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, sources, [, entry, ., getSourceFileId, (, ), ], ), ., setLineNumber, (]
[setOriginalFile, (, sources, [, entry, ., getSourceFileId, (, ), ], ), ., setLineNumber, (, entry, ., getSourceLine, (, ), +]
[., getSourceFileId, (, ), ], ), ., setLineNumber, (, entry, ., getSourceLine, (, ), +, 1, ), ., setColumnPosition, (]
[., getSourceFileId, (, ), ], ), ., setLineNumber, (, entry, ., getSourceLine, (, ), +, 1, ), ., setColumnPosition, (]
[., getSourceFileId, (, ), ], ), ., setLineNumber, (, entry, ., getSourceLine, (, ), +, 1, ), ., setColumnPosition, (]
[., setLineNumber, (, entry, ., getSourceLine, (, ), +, 1, ), ., setColumnPosition, (, entry, ., getSourceColumn, (, ), +]
[getSourceLine, (, ), +, 1, ), ., setColumnPosition, (, entry, ., getSourceColumn, (, ), +, 1, ), ;, if, (]
[getSourceLine, (, ), +, 1, ), ., setColumnPosition, (, entry, ., getSourceColumn, (, ), +, 1, ), ;, if, (]
[getSourceLine, (, ), +, 1, ), ., setColumnPosition, (, entry, ., getSourceColumn, (, ), +, 1, ), ;, if, (]
[., setColumnPosition, (, entry, ., getSourceColumn, (, ), +, 1, ), ;, if, (, entry, ., getNameId, (, ), !=]
[entry, ., getSourceColumn, (, ), +, 1, ), ;, if, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), {]
[entry, ., getSourceColumn, (, ), +, 1, ), ;, if, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), {]
[), +, 1, ), ;, if, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), {, x, ., setIdentifier, (]
[), +, 1, ), ;, if, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), {, x, ., setIdentifier, (]
[1, ), ;, if, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), {, x, ., setIdentifier, (, names, []
[1, ), ;, if, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), {, x, ., setIdentifier, (, names, []
[!=, UNMAPPED, ), {, x, ., setIdentifier, (, names, [, entry, ., getNameId, (, ), ], ), ;, }, return]
[!=, UNMAPPED, ), {, x, ., setIdentifier, (, names, [, entry, ., getNameId, (, ), ], ), ;, }, return]
[), ], ), ;, }, return, x, ., build, (, ), ;, }, }, private, void, createReverseMapping, (, ), {]
[), ;, }, return, x, ., build, (, ), ;, }, }, private, void, createReverseMapping, (, ), {, reverseSourceMapping, =]
[String, ,, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, >, (, ), ;, for, (, int, targetLine, =]
[Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, >, (, ), ;, for, (, int, targetLine, =, 0, ;]
[Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, >, (, ), ;, for, (, int, targetLine, =, 0, ;]
[Integer, ,, Collection, <, OriginalMapping, >, >, >, (, ), ;, for, (, int, targetLine, =, 0, ;, targetLine, <]
[Integer, ,, Collection, <, OriginalMapping, >, >, >, (, ), ;, for, (, int, targetLine, =, 0, ;, targetLine, <]
[>, >, (, ), ;, for, (, int, targetLine, =, 0, ;, targetLine, <, lines, ., size, (, ), ;]
[>, >, (, ), ;, for, (, int, targetLine, =, 0, ;, targetLine, <, lines, ., size, (, ), ;]
[0, ;, targetLine, <, lines, ., size, (, ), ;, targetLine, ++, ), {, ArrayList, <, Entry, >, entries, =]
[0, ;, targetLine, <, lines, ., size, (, ), ;, targetLine, ++, ), {, ArrayList, <, Entry, >, entries, =]
[lines, ., size, (, ), ;, targetLine, ++, ), {, ArrayList, <, Entry, >, entries, =, lines, ., get, (]
[;, targetLine, ++, ), {, ArrayList, <, Entry, >, entries, =, lines, ., get, (, targetLine, ), ;, if, (]
[;, targetLine, ++, ), {, ArrayList, <, Entry, >, entries, =, lines, ., get, (, targetLine, ), ;, if, (]
[++, ), {, ArrayList, <, Entry, >, entries, =, lines, ., get, (, targetLine, ), ;, if, (, entries, !=]
[=, lines, ., get, (, targetLine, ), ;, if, (, entries, !=, null, ), {, for, (, Entry, entry, :]
[targetLine, ), ;, if, (, entries, !=, null, ), {, for, (, Entry, entry, :, entries, ), {, if, (]
[targetLine, ), ;, if, (, entries, !=, null, ), {, for, (, Entry, entry, :, entries, ), {, if, (]
[targetLine, ), ;, if, (, entries, !=, null, ), {, for, (, Entry, entry, :, entries, ), {, if, (]
[targetLine, ), ;, if, (, entries, !=, null, ), {, for, (, Entry, entry, :, entries, ), {, if, (]
[!=, null, ), {, for, (, Entry, entry, :, entries, ), {, if, (, entry, ., getSourceFileId, (, ), !=]
[), {, for, (, Entry, entry, :, entries, ), {, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, &&]
[), {, for, (, Entry, entry, :, entries, ), {, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, &&]
[), {, for, (, Entry, entry, :, entries, ), {, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, &&]
[:, entries, ), {, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, &&, entry, ., getSourceLine, (, ), !=]
[entry, ., getSourceFileId, (, ), !=, UNMAPPED, &&, entry, ., getSourceLine, (, ), !=, UNMAPPED, ), {, String, originalFile, =]
[entry, ., getSourceFileId, (, ), !=, UNMAPPED, &&, entry, ., getSourceLine, (, ), !=, UNMAPPED, ), {, String, originalFile, =]
[getSourceFileId, (, ), !=, UNMAPPED, &&, entry, ., getSourceLine, (, ), !=, UNMAPPED, ), {, String, originalFile, =, sources, []
[getSourceFileId, (, ), !=, UNMAPPED, &&, entry, ., getSourceLine, (, ), !=, UNMAPPED, ), {, String, originalFile, =, sources, []
[(, ), !=, UNMAPPED, ), {, String, originalFile, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, if, (]
[), !=, UNMAPPED, ), {, String, originalFile, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, if, (, !]
[), !=, UNMAPPED, ), {, String, originalFile, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, if, (, !]
[{, String, originalFile, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, if, (, !, reverseSourceMapping, ., containsKey, (]
[sources, [, entry, ., getSourceFileId, (, ), ], ;, if, (, !, reverseSourceMapping, ., containsKey, (, originalFile, ), ), {]
[sources, [, entry, ., getSourceFileId, (, ), ], ;, if, (, !, reverseSourceMapping, ., containsKey, (, originalFile, ), ), {]
[getSourceFileId, (, ), ], ;, if, (, !, reverseSourceMapping, ., containsKey, (, originalFile, ), ), {, reverseSourceMapping, ., put, (]
[), ], ;, if, (, !, reverseSourceMapping, ., containsKey, (, originalFile, ), ), {, reverseSourceMapping, ., put, (, originalFile, ,]
[<, OriginalMapping, >, >, (, ), ), ;, }, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, lineToCollectionMap, =]
[<, OriginalMapping, >, >, (, ), ), ;, }, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, lineToCollectionMap, =]
[(, ), ), ;, }, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, lineToCollectionMap, =, reverseSourceMapping, ., get, (]
[<, Integer, ,, Collection, <, OriginalMapping, >, >, lineToCollectionMap, =, reverseSourceMapping, ., get, (, originalFile, ), ;, int, sourceLine, =]
[<, Integer, ,, Collection, <, OriginalMapping, >, >, lineToCollectionMap, =, reverseSourceMapping, ., get, (, originalFile, ), ;, int, sourceLine, =]
[lineToCollectionMap, =, reverseSourceMapping, ., get, (, originalFile, ), ;, int, sourceLine, =, entry, ., getSourceLine, (, ), ;, if, (]
[=, reverseSourceMapping, ., get, (, originalFile, ), ;, int, sourceLine, =, entry, ., getSourceLine, (, ), ;, if, (, !]
[=, reverseSourceMapping, ., get, (, originalFile, ), ;, int, sourceLine, =, entry, ., getSourceLine, (, ), ;, if, (, !]
[(, originalFile, ), ;, int, sourceLine, =, entry, ., getSourceLine, (, ), ;, if, (, !, lineToCollectionMap, ., containsKey, (]
[int, sourceLine, =, entry, ., getSourceLine, (, ), ;, if, (, !, lineToCollectionMap, ., containsKey, (, sourceLine, ), ), {]
[int, sourceLine, =, entry, ., getSourceLine, (, ), ;, if, (, !, lineToCollectionMap, ., containsKey, (, sourceLine, ), ), {]
[., getSourceLine, (, ), ;, if, (, !, lineToCollectionMap, ., containsKey, (, sourceLine, ), ), {, lineToCollectionMap, ., put, (]
[(, ), ;, if, (, !, lineToCollectionMap, ., containsKey, (, sourceLine, ), ), {, lineToCollectionMap, ., put, (, sourceLine, ,]
[lineToCollectionMap, ., containsKey, (, sourceLine, ), ), {, lineToCollectionMap, ., put, (, sourceLine, ,, new, ArrayList, <, OriginalMapping, >, (]
[(, sourceLine, ,, new, ArrayList, <, OriginalMapping, >, (, 1, ), ), ;, }, Collection, <, OriginalMapping, >, mappings, =]
[(, sourceLine, ,, new, ArrayList, <, OriginalMapping, >, (, 1, ), ), ;, }, Collection, <, OriginalMapping, >, mappings, =]
[ArrayList, <, OriginalMapping, >, (, 1, ), ), ;, }, Collection, <, OriginalMapping, >, mappings, =, lineToCollectionMap, ., get, (]
[), ), ;, }, Collection, <, OriginalMapping, >, mappings, =, lineToCollectionMap, ., get, (, sourceLine, ), ;, Builder, builder, =]
[), ), ;, }, Collection, <, OriginalMapping, >, mappings, =, lineToCollectionMap, ., get, (, sourceLine, ), ;, Builder, builder, =]
[), ), ;, }, Collection, <, OriginalMapping, >, mappings, =, lineToCollectionMap, ., get, (, sourceLine, ), ;, Builder, builder, =]
[), ), ;, }, Collection, <, OriginalMapping, >, mappings, =, lineToCollectionMap, ., get, (, sourceLine, ), ;, Builder, builder, =]
[mappings, =, lineToCollectionMap, ., get, (, sourceLine, ), ;, Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setLineNumber, (]
[(, sourceLine, ), ;, Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setLineNumber, (, targetLine, ), ., setColumnPosition, (]
[(, sourceLine, ), ;, Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setLineNumber, (, targetLine, ), ., setColumnPosition, (]
[OriginalMapping, ., newBuilder, (, ), ., setLineNumber, (, targetLine, ), ., setColumnPosition, (, entry, ., getGeneratedColumn, (, ), ), ;]
[OriginalMapping, ., newBuilder, (, ), ., setLineNumber, (, targetLine, ), ., setColumnPosition, (, entry, ., getGeneratedColumn, (, ), ), ;]
[), ., setLineNumber, (, targetLine, ), ., setColumnPosition, (, entry, ., getGeneratedColumn, (, ), ), ;, mappings, ., add, (]
[), ., setLineNumber, (, targetLine, ), ., setColumnPosition, (, entry, ., getGeneratedColumn, (, ), ), ;, mappings, ., add, (]
[}, }, private, static, class, StringCharIterator, implements, CharIterator, {, final, String, content, ;, final, int, length, ;, int, current, =]
[{, final, String, content, ;, final, int, length, ;, int, current, =, 0, ;, StringCharIterator, (, String, content, ), {]
[{, final, String, content, ;, final, int, length, ;, int, current, =, 0, ;, StringCharIterator, (, String, content, ), {]
[;, final, int, length, ;, int, current, =, 0, ;, StringCharIterator, (, String, content, ), {, this, ., content, =]
[int, length, ;, int, current, =, 0, ;, StringCharIterator, (, String, content, ), {, this, ., content, =, content, ;]
[int, length, ;, int, current, =, 0, ;, StringCharIterator, (, String, content, ), {, this, ., content, =, content, ;]
[current, =, 0, ;, StringCharIterator, (, String, content, ), {, this, ., content, =, content, ;, this, ., length, =]
[current, =, 0, ;, StringCharIterator, (, String, content, ), {, this, ., content, =, content, ;, this, ., length, =]
[this, ., length, =, content, ., length, (, ), ;, }, @, Override, public, char, next, (, ), {, return]
[this, ., length, =, content, ., length, (, ), ;, }, @, Override, public, char, next, (, ), {, return]
[content, ., length, (, ), ;, }, @, Override, public, char, next, (, ), {, return, content, ., charAt, (]
[content, ., length, (, ), ;, }, @, Override, public, char, next, (, ), {, return, content, ., charAt, (]
[next, (, ), {, return, content, ., charAt, (, current, ++, ), ;, }, char, peek, (, ), {, return]
[next, (, ), {, return, content, ., charAt, (, current, ++, ), ;, }, char, peek, (, ), {, return]
[return, content, ., charAt, (, current, ++, ), ;, }, char, peek, (, ), {, return, content, ., charAt, (]
[), {, return, content, ., charAt, (, current, ), ;, }, @, Override, public, boolean, hasNext, (, ), {, return]
[), {, return, content, ., charAt, (, current, ), ;, }, @, Override, public, boolean, hasNext, (, ), {, return]
[return, content, ., charAt, (, current, ), ;, }, @, Override, public, boolean, hasNext, (, ), {, return, current, <]
[;, }, private, static, class, UnmappedEntry, implements, Entry, {, private, final, int, column, ;, UnmappedEntry, (, int, column, ), {]
[;, }, private, static, class, UnmappedEntry, implements, Entry, {, private, final, int, column, ;, UnmappedEntry, (, int, column, ), {]
[class, UnmappedEntry, implements, Entry, {, private, final, int, column, ;, UnmappedEntry, (, int, column, ), {, this, ., column, =]
[int, column, ), {, this, ., column, =, column, ;, }, @, Override, public, int, getGeneratedColumn, (, ), {, return]
[Override, public, int, getGeneratedColumn, (, ), {, return, column, ;, }, @, Override, public, int, getSourceFileId, (, ), {, return]
[Override, public, int, getSourceFileId, (, ), {, return, UNMAPPED, ;, }, @, Override, public, int, getSourceLine, (, ), {, return]
[Override, public, int, getSourceLine, (, ), {, return, UNMAPPED, ;, }, @, Override, public, int, getSourceColumn, (, ), {, return]
[Override, public, int, getSourceColumn, (, ), {, return, UNMAPPED, ;, }, @, Override, public, int, getNameId, (, ), {, return]
[int, srcColumn, ;, UnnamedEntry, (, int, column, ,, int, srcFile, ,, int, srcLine, ,, int, srcColumn, ), {, super, (]
[UnnamedEntry, (, int, column, ,, int, srcFile, ,, int, srcLine, ,, int, srcColumn, ), {, super, (, column, ), ;]
[UnnamedEntry, (, int, column, ,, int, srcFile, ,, int, srcLine, ,, int, srcColumn, ), {, super, (, column, ), ;]
[,, int, srcFile, ,, int, srcLine, ,, int, srcColumn, ), {, super, (, column, ), ;, this, ., srcFile, =]
[srcFile, ,, int, srcLine, ,, int, srcColumn, ), {, super, (, column, ), ;, this, ., srcFile, =, srcFile, ;]
[srcFile, ,, int, srcLine, ,, int, srcColumn, ), {, super, (, column, ), ;, this, ., srcFile, =, srcFile, ;]
[,, int, srcColumn, ), {, super, (, column, ), ;, this, ., srcFile, =, srcFile, ;, this, ., srcLine, =]
[srcColumn, ), {, super, (, column, ), ;, this, ., srcFile, =, srcFile, ;, this, ., srcLine, =, srcLine, ;]
[srcColumn, ), {, super, (, column, ), ;, this, ., srcFile, =, srcFile, ;, this, ., srcLine, =, srcLine, ;]
[(, column, ), ;, this, ., srcFile, =, srcFile, ;, this, ., srcLine, =, srcLine, ;, this, ., srcColumn, =]
[srcLine, =, srcLine, ;, this, ., srcColumn, =, srcColumn, ;, }, @, Override, public, int, getSourceFileId, (, ), {, return]
[Override, public, int, getSourceFileId, (, ), {, return, srcFile, ;, }, @, Override, public, int, getSourceLine, (, ), {, return]
[Override, public, int, getSourceLine, (, ), {, return, srcLine, ;, }, @, Override, public, int, getSourceColumn, (, ), {, return]
[Override, public, int, getSourceColumn, (, ), {, return, srcColumn, ;, }, @, Override, public, int, getNameId, (, ), {, return]
[NamedEntry, (, int, column, ,, int, srcFile, ,, int, srcLine, ,, int, srcColumn, ,, int, name, ), {, super, (]
[int, column, ,, int, srcFile, ,, int, srcLine, ,, int, srcColumn, ,, int, name, ), {, super, (, column, ,]
[,, int, srcFile, ,, int, srcLine, ,, int, srcColumn, ,, int, name, ), {, super, (, column, ,, srcFile, ,]
[srcFile, ,, int, srcLine, ,, int, srcColumn, ,, int, name, ), {, super, (, column, ,, srcFile, ,, srcLine, ,]
[srcLine, ,, int, srcColumn, ,, int, name, ), {, super, (, column, ,, srcFile, ,, srcLine, ,, srcColumn, ), ;]
[srcLine, ,, int, srcColumn, ,, int, name, ), {, super, (, column, ,, srcFile, ,, srcLine, ,, srcColumn, ), ;]
[,, int, name, ), {, super, (, column, ,, srcFile, ,, srcLine, ,, srcColumn, ), ;, this, ., name, =]
[,, srcColumn, ), ;, this, ., name, =, name, ;, }, @, Override, public, int, getNameId, (, ), {, return]
[,, FilePosition, startPosition, ,, FilePosition, endPosition, ), ;, }, public, void, visitMappings, (, EntryVisitor, visitor, ), {, boolean, pending, =]
[endPosition, ), ;, }, public, void, visitMappings, (, EntryVisitor, visitor, ), {, boolean, pending, =, false, ;, String, sourceName, =]
[void, visitMappings, (, EntryVisitor, visitor, ), {, boolean, pending, =, false, ;, String, sourceName, =, null, ;, String, symbolName, =]
[), {, boolean, pending, =, false, ;, String, sourceName, =, null, ;, String, symbolName, =, null, ;, FilePosition, sourceStartPosition, =]
[false, ;, String, sourceName, =, null, ;, String, symbolName, =, null, ;, FilePosition, sourceStartPosition, =, null, ;, FilePosition, startPosition, =]
[;, String, symbolName, =, null, ;, FilePosition, sourceStartPosition, =, null, ;, FilePosition, startPosition, =, null, ;, final, int, lineCount, =]
[;, String, symbolName, =, null, ;, FilePosition, sourceStartPosition, =, null, ;, FilePosition, startPosition, =, null, ;, final, int, lineCount, =]
[FilePosition, startPosition, =, null, ;, final, int, lineCount, =, lines, ., size, (, ), ;, for, (, int, i, =]
[=, null, ;, final, int, lineCount, =, lines, ., size, (, ), ;, for, (, int, i, =, 0, ;]
[=, null, ;, final, int, lineCount, =, lines, ., size, (, ), ;, for, (, int, i, =, 0, ;]
[;, final, int, lineCount, =, lines, ., size, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[int, lineCount, =, lines, ., size, (, ), ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;]
[int, lineCount, =, lines, ., size, (, ), ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;]
[(, int, i, =, 0, ;, i, <, lineCount, ;, i, ++, ), {, ArrayList, <, Entry, >, line, =]
[(, int, i, =, 0, ;, i, <, lineCount, ;, i, ++, ), {, ArrayList, <, Entry, >, line, =]
[0, ;, i, <, lineCount, ;, i, ++, ), {, ArrayList, <, Entry, >, line, =, lines, ., get, (]
[;, i, ++, ), {, ArrayList, <, Entry, >, line, =, lines, ., get, (, i, ), ;, if, (]
[;, i, ++, ), {, ArrayList, <, Entry, >, line, =, lines, ., get, (, i, ), ;, if, (]
[++, ), {, ArrayList, <, Entry, >, line, =, lines, ., get, (, i, ), ;, if, (, line, !=]
[line, =, lines, ., get, (, i, ), ;, if, (, line, !=, null, ), {, final, int, entryCount, =]
[line, =, lines, ., get, (, i, ), ;, if, (, line, !=, null, ), {, final, int, entryCount, =]
[line, !=, null, ), {, final, int, entryCount, =, line, ., size, (, ), ;, for, (, int, j, =]
[null, ), {, final, int, entryCount, =, line, ., size, (, ), ;, for, (, int, j, =, 0, ;]
[null, ), {, final, int, entryCount, =, line, ., size, (, ), ;, for, (, int, j, =, 0, ;]
[{, final, int, entryCount, =, line, ., size, (, ), ;, for, (, int, j, =, 0, ;, j, <]
[int, entryCount, =, line, ., size, (, ), ;, for, (, int, j, =, 0, ;, j, <, entryCount, ;]
[int, entryCount, =, line, ., size, (, ), ;, for, (, int, j, =, 0, ;, j, <, entryCount, ;]
[), ;, for, (, int, j, =, 0, ;, j, <, entryCount, ;, j, ++, ), {, Entry, entry, =]
[), ;, for, (, int, j, =, 0, ;, j, <, entryCount, ;, j, ++, ), {, Entry, entry, =]
[int, j, =, 0, ;, j, <, entryCount, ;, j, ++, ), {, Entry, entry, =, line, ., get, (]
[j, <, entryCount, ;, j, ++, ), {, Entry, entry, =, line, ., get, (, j, ), ;, if, (]
[), {, Entry, entry, =, line, ., get, (, j, ), ;, if, (, pending, ), {, FilePosition, endPosition, =]
[entry, =, line, ., get, (, j, ), ;, if, (, pending, ), {, FilePosition, endPosition, =, new, FilePosition, (]
[line, ., get, (, j, ), ;, if, (, pending, ), {, FilePosition, endPosition, =, new, FilePosition, (, i, ,]
[line, ., get, (, j, ), ;, if, (, pending, ), {, FilePosition, endPosition, =, new, FilePosition, (, i, ,]
[if, (, pending, ), {, FilePosition, endPosition, =, new, FilePosition, (, i, ,, entry, ., getGeneratedColumn, (, ), ), ;]
[if, (, pending, ), {, FilePosition, endPosition, =, new, FilePosition, (, i, ,, entry, ., getGeneratedColumn, (, ), ), ;]
[{, FilePosition, endPosition, =, new, FilePosition, (, i, ,, entry, ., getGeneratedColumn, (, ), ), ;, visitor, ., visit, (]
[endPosition, =, new, FilePosition, (, i, ,, entry, ., getGeneratedColumn, (, ), ), ;, visitor, ., visit, (, sourceName, ,]
[new, FilePosition, (, i, ,, entry, ., getGeneratedColumn, (, ), ), ;, visitor, ., visit, (, sourceName, ,, symbolName, ,]
[(, i, ,, entry, ., getGeneratedColumn, (, ), ), ;, visitor, ., visit, (, sourceName, ,, symbolName, ,, sourceStartPosition, ,]
[,, entry, ., getGeneratedColumn, (, ), ), ;, visitor, ., visit, (, sourceName, ,, symbolName, ,, sourceStartPosition, ,, startPosition, ,]
[getGeneratedColumn, (, ), ), ;, visitor, ., visit, (, sourceName, ,, symbolName, ,, sourceStartPosition, ,, startPosition, ,, endPosition, ), ;]
[), ), ;, visitor, ., visit, (, sourceName, ,, symbolName, ,, sourceStartPosition, ,, startPosition, ,, endPosition, ), ;, pending, =]
[visit, (, sourceName, ,, symbolName, ,, sourceStartPosition, ,, startPosition, ,, endPosition, ), ;, pending, =, false, ;, }, if, (]
[visit, (, sourceName, ,, symbolName, ,, sourceStartPosition, ,, startPosition, ,, endPosition, ), ;, pending, =, false, ;, }, if, (]
[visit, (, sourceName, ,, symbolName, ,, sourceStartPosition, ,, startPosition, ,, endPosition, ), ;, pending, =, false, ;, }, if, (]
[sourceStartPosition, ,, startPosition, ,, endPosition, ), ;, pending, =, false, ;, }, if, (, entry, ., getSourceFileId, (, ), !=]
[,, endPosition, ), ;, pending, =, false, ;, }, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, ), {]
[), ;, pending, =, false, ;, }, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, ), {, pending, =]
[pending, =, false, ;, }, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, ), {, pending, =, true, ;]
[false, ;, }, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, ), {, pending, =, true, ;, sourceName, =]
[false, ;, }, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, ), {, pending, =, true, ;, sourceName, =]
[}, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, ), {, pending, =, true, ;, sourceName, =, sources, []
[}, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, ), {, pending, =, true, ;, sourceName, =, sources, []
[), !=, UNMAPPED, ), {, pending, =, true, ;, sourceName, =, sources, [, entry, ., getSourceFileId, (, ), ], ;]
[UNMAPPED, ), {, pending, =, true, ;, sourceName, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, symbolName, =]
[UNMAPPED, ), {, pending, =, true, ;, sourceName, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, symbolName, =]
[), {, pending, =, true, ;, sourceName, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, symbolName, =, (]
[), {, pending, =, true, ;, sourceName, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, symbolName, =, (]
[), {, pending, =, true, ;, sourceName, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, symbolName, =, (]
[sourceName, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, symbolName, =, (, entry, ., getNameId, (, ), !=]
[[, entry, ., getSourceFileId, (, ), ], ;, symbolName, =, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), ?]
[[, entry, ., getSourceFileId, (, ), ], ;, symbolName, =, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), ?]
[., getSourceFileId, (, ), ], ;, symbolName, =, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), ?, names, []
[., getSourceFileId, (, ), ], ;, symbolName, =, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), ?, names, []
[=, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), ?, names, [, entry, ., getNameId, (, ), ], :]
[entry, ., getNameId, (, ), !=, UNMAPPED, ), ?, names, [, entry, ., getNameId, (, ), ], :, null, ;]
[getNameId, (, ), !=, UNMAPPED, ), ?, names, [, entry, ., getNameId, (, ), ], :, null, ;, sourceStartPosition, =]
[!=, UNMAPPED, ), ?, names, [, entry, ., getNameId, (, ), ], :, null, ;, sourceStartPosition, =, new, FilePosition, (]
[!=, UNMAPPED, ), ?, names, [, entry, ., getNameId, (, ), ], :, null, ;, sourceStartPosition, =, new, FilePosition, (]
[entry, ., getNameId, (, ), ], :, null, ;, sourceStartPosition, =, new, FilePosition, (, entry, ., getSourceLine, (, ), ,]
[entry, ., getNameId, (, ), ], :, null, ;, sourceStartPosition, =, new, FilePosition, (, entry, ., getSourceLine, (, ), ,]
[null, ;, sourceStartPosition, =, new, FilePosition, (, entry, ., getSourceLine, (, ), ,, entry, ., getSourceColumn, (, ), ), ;]
[sourceStartPosition, =, new, FilePosition, (, entry, ., getSourceLine, (, ), ,, entry, ., getSourceColumn, (, ), ), ;, startPosition, =]
[FilePosition, (, entry, ., getSourceLine, (, ), ,, entry, ., getSourceColumn, (, ), ), ;, startPosition, =, new, FilePosition, (]
[entry, ., getSourceLine, (, ), ,, entry, ., getSourceColumn, (, ), ), ;, startPosition, =, new, FilePosition, (, i, ,]
[entry, ., getSourceLine, (, ), ,, entry, ., getSourceColumn, (, ), ), ;, startPosition, =, new, FilePosition, (, i, ,]
