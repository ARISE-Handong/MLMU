[;, private, final, int, numberOfTrials, ;, private, final, double, probabilityOfSuccess, ;, public, BinomialDistribution, (, int, trials, ,, double, p, )]
[,, trials, ,, p, ), ;, }, public, BinomialDistribution, (, RandomGenerator, rng, ,, int, trials, ,, double, p, ), {]
[,, p, ), ;, }, public, BinomialDistribution, (, RandomGenerator, rng, ,, int, trials, ,, double, p, ), {, super, (]
[), ;, }, public, BinomialDistribution, (, RandomGenerator, rng, ,, int, trials, ,, double, p, ), {, super, (, rng, )]
[), ;, if, (, trials, <, 0, ), {, throw, new, NotPositiveException, (, LocalizedFormats, ., NUMBER_OF_TRIALS, ,, trials, ), ;]
[), {, throw, new, NotPositiveException, (, LocalizedFormats, ., NUMBER_OF_TRIALS, ,, trials, ), ;, }, if, (, p, <, 0, ||]
[<, 0, ), {, throw, new, NotPositiveException, (, LocalizedFormats, ., NUMBER_OF_TRIALS, ,, trials, ), ;, }, if, (, p, <]
[), {, throw, new, NotPositiveException, (, LocalizedFormats, ., NUMBER_OF_TRIALS, ,, trials, ), ;, }, if, (, p, <, 0, ||]
[;, }, if, (, p, <, 0, ||, p, >, 1, ), {, throw, new, OutOfRangeException, (, p, ,, 0]
[,, trials, ), ;, }, if, (, p, <, 0, ||, p, >, 1, ), {, throw, new, OutOfRangeException, (]
[., NUMBER_OF_TRIALS, ,, trials, ), ;, }, if, (, p, <, 0, ||, p, >, 1, ), {, throw, new]
[), ;, }, if, (, p, <, 0, ||, p, >, 1, ), {, throw, new, OutOfRangeException, (, p, ,]
[), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }, probabilityOfSuccess, =, p, ;, numberOfTrials, =]
[||, p, >, 1, ), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }, probabilityOfSuccess, =]
[<, 0, ||, p, >, 1, ), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }]
[||, p, >, 1, ), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }, probabilityOfSuccess, =]
[), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }, probabilityOfSuccess, =, p, ;, numberOfTrials, =]
[>, 1, ), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }, probabilityOfSuccess, =, p, ;]
[), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }, probabilityOfSuccess, =, p, ;, numberOfTrials, =]
[;, }, probabilityOfSuccess, =, p, ;, numberOfTrials, =, trials, ;, }, public, int, getNumberOfTrials, (, ), {, return, numberOfTrials, ;]
[,, 0, ,, 1, ), ;, }, probabilityOfSuccess, =, p, ;, numberOfTrials, =, trials, ;, }, public, int, getNumberOfTrials, (]
[,, 1, ), ;, }, probabilityOfSuccess, =, p, ;, numberOfTrials, =, trials, ;, }, public, int, getNumberOfTrials, (, ), {]
[), ;, }, probabilityOfSuccess, =, p, ;, numberOfTrials, =, trials, ;, }, public, int, getNumberOfTrials, (, ), {, return, numberOfTrials]
[=, p, ;, numberOfTrials, =, trials, ;, }, public, int, getNumberOfTrials, (, ), {, return, numberOfTrials, ;, }, public, double]
[;, numberOfTrials, =, trials, ;, }, public, int, getNumberOfTrials, (, ), {, return, numberOfTrials, ;, }, public, double, getProbabilityOfSuccess, (]
[=, trials, ;, }, public, int, getNumberOfTrials, (, ), {, return, numberOfTrials, ;, }, public, double, getProbabilityOfSuccess, (, ), {]
[;, }, public, int, getNumberOfTrials, (, ), {, return, numberOfTrials, ;, }, public, double, getProbabilityOfSuccess, (, ), {, return, probabilityOfSuccess]
[;, }, public, double, getProbabilityOfSuccess, (, ), {, return, probabilityOfSuccess, ;, }, public, double, probability, (, int, x, ), {]
[;, }, public, double, probability, (, int, x, ), {, double, ret, ;, if, (, x, <, 0, ||, x]
[), {, ret, =, 0.0, ;, }, else, {, ret, =, FastMath, ., exp, (, SaddlePointExpansion, ., logBinomialProbability, (, x]
[||, x, >, numberOfTrials, ), {, ret, =, 0.0, ;, }, else, {, ret, =, FastMath, ., exp, (, SaddlePointExpansion]
[<, 0, ||, x, >, numberOfTrials, ), {, ret, =, 0.0, ;, }, else, {, ret, =, FastMath, ., exp]
[||, x, >, numberOfTrials, ), {, ret, =, 0.0, ;, }, else, {, ret, =, FastMath, ., exp, (, SaddlePointExpansion]
[), {, ret, =, 0.0, ;, }, else, {, ret, =, FastMath, ., exp, (, SaddlePointExpansion, ., logBinomialProbability, (, x]
[>, numberOfTrials, ), {, ret, =, 0.0, ;, }, else, {, ret, =, FastMath, ., exp, (, SaddlePointExpansion, ., logBinomialProbability]
[), {, ret, =, 0.0, ;, }, else, {, ret, =, FastMath, ., exp, (, SaddlePointExpansion, ., logBinomialProbability, (, x]
[=, 0.0, ;, }, else, {, ret, =, FastMath, ., exp, (, SaddlePointExpansion, ., logBinomialProbability, (, x, ,, numberOfTrials, ,]
[;, }, else, {, ret, =, FastMath, ., exp, (, SaddlePointExpansion, ., logBinomialProbability, (, x, ,, numberOfTrials, ,, probabilityOfSuccess, ,]
[=, FastMath, ., exp, (, SaddlePointExpansion, ., logBinomialProbability, (, x, ,, numberOfTrials, ,, probabilityOfSuccess, ,, 1.0, -, probabilityOfSuccess, ), )]
[;, }, return, ret, ;, }, public, double, cumulativeProbability, (, int, x, ), {, double, ret, ;, if, (, x]
[., exp, (, SaddlePointExpansion, ., logBinomialProbability, (, x, ,, numberOfTrials, ,, probabilityOfSuccess, ,, 1.0, -, probabilityOfSuccess, ), ), ;, }]
[), ;, }, return, ret, ;, }, public, double, cumulativeProbability, (, int, x, ), {, double, ret, ;, if, (]
[., logBinomialProbability, (, x, ,, numberOfTrials, ,, probabilityOfSuccess, ,, 1.0, -, probabilityOfSuccess, ), ), ;, }, return, ret, ;, }]
[,, numberOfTrials, ,, probabilityOfSuccess, ,, 1.0, -, probabilityOfSuccess, ), ), ;, }, return, ret, ;, }, public, double, cumulativeProbability, (]
[,, probabilityOfSuccess, ,, 1.0, -, probabilityOfSuccess, ), ), ;, }, return, ret, ;, }, public, double, cumulativeProbability, (, int, x]
[,, 1.0, -, probabilityOfSuccess, ), ), ;, }, return, ret, ;, }, public, double, cumulativeProbability, (, int, x, ), {]
[), ), ;, }, return, ret, ;, }, public, double, cumulativeProbability, (, int, x, ), {, double, ret, ;, if]
[-, probabilityOfSuccess, ), ), ;, }, return, ret, ;, }, public, double, cumulativeProbability, (, int, x, ), {, double, ret]
[), ), ;, }, return, ret, ;, }, public, double, cumulativeProbability, (, int, x, ), {, double, ret, ;, if]
[;, }, public, double, cumulativeProbability, (, int, x, ), {, double, ret, ;, if, (, x, <, 0, ), {]
[), {, ret, =, 0.0, ;, }, else, if, (, x, >=, numberOfTrials, ), {, ret, =, 1.0, ;, }]
[<, 0, ), {, ret, =, 0.0, ;, }, else, if, (, x, >=, numberOfTrials, ), {, ret, =, 1.0]
[), {, ret, =, 0.0, ;, }, else, if, (, x, >=, numberOfTrials, ), {, ret, =, 1.0, ;, }]
[=, 0.0, ;, }, else, if, (, x, >=, numberOfTrials, ), {, ret, =, 1.0, ;, }, else, {, ret]
[;, }, else, if, (, x, >=, numberOfTrials, ), {, ret, =, 1.0, ;, }, else, {, ret, =, 1.0]
[), {, ret, =, 1.0, ;, }, else, {, ret, =, 1.0, -, Beta, ., regularizedBeta, (, probabilityOfSuccess, ,, x]
[>=, numberOfTrials, ), {, ret, =, 1.0, ;, }, else, {, ret, =, 1.0, -, Beta, ., regularizedBeta, (, probabilityOfSuccess]
[), {, ret, =, 1.0, ;, }, else, {, ret, =, 1.0, -, Beta, ., regularizedBeta, (, probabilityOfSuccess, ,, x]
[=, 1.0, ;, }, else, {, ret, =, 1.0, -, Beta, ., regularizedBeta, (, probabilityOfSuccess, ,, x, +, 1.0, ,]
[;, }, else, {, ret, =, 1.0, -, Beta, ., regularizedBeta, (, probabilityOfSuccess, ,, x, +, 1.0, ,, numberOfTrials, -]
[=, 1.0, -, Beta, ., regularizedBeta, (, probabilityOfSuccess, ,, x, +, 1.0, ,, numberOfTrials, -, x, ), ;, }, return]
[;, }, return, ret, ;, }, public, double, getNumericalMean, (, ), {, return, numberOfTrials, *, probabilityOfSuccess, ;, }, public, double]
[-, Beta, ., regularizedBeta, (, probabilityOfSuccess, ,, x, +, 1.0, ,, numberOfTrials, -, x, ), ;, }, return, ret, ;]
[;, }, return, ret, ;, }, public, double, getNumericalMean, (, ), {, return, numberOfTrials, *, probabilityOfSuccess, ;, }, public, double]
[., regularizedBeta, (, probabilityOfSuccess, ,, x, +, 1.0, ,, numberOfTrials, -, x, ), ;, }, return, ret, ;, }, public]
[,, x, +, 1.0, ,, numberOfTrials, -, x, ), ;, }, return, ret, ;, }, public, double, getNumericalMean, (, )]
[,, numberOfTrials, -, x, ), ;, }, return, ret, ;, }, public, double, getNumericalMean, (, ), {, return, numberOfTrials, *]
[+, 1.0, ,, numberOfTrials, -, x, ), ;, }, return, ret, ;, }, public, double, getNumericalMean, (, ), {, return]
[,, numberOfTrials, -, x, ), ;, }, return, ret, ;, }, public, double, getNumericalMean, (, ), {, return, numberOfTrials, *]
[), ;, }, return, ret, ;, }, public, double, getNumericalMean, (, ), {, return, numberOfTrials, *, probabilityOfSuccess, ;, }, public]
[-, x, ), ;, }, return, ret, ;, }, public, double, getNumericalMean, (, ), {, return, numberOfTrials, *, probabilityOfSuccess, ;]
[), ;, }, return, ret, ;, }, public, double, getNumericalMean, (, ), {, return, numberOfTrials, *, probabilityOfSuccess, ;, }, public]
[;, }, public, double, getNumericalMean, (, ), {, return, numberOfTrials, *, probabilityOfSuccess, ;, }, public, double, getNumericalVariance, (, ), {]
[;, }, public, double, getNumericalVariance, (, ), {, final, double, p, =, probabilityOfSuccess, ;, return, numberOfTrials, *, p, *, (]
[*, probabilityOfSuccess, ;, }, public, double, getNumericalVariance, (, ), {, final, double, p, =, probabilityOfSuccess, ;, return, numberOfTrials, *, p]
[;, }, public, double, getNumericalVariance, (, ), {, final, double, p, =, probabilityOfSuccess, ;, return, numberOfTrials, *, p, *, (]
[;, return, numberOfTrials, *, p, *, (, 1, -, p, ), ;, }, public, int, getSupportLowerBound, (, ), {, return]
[;, }, public, int, getSupportLowerBound, (, ), {, return, probabilityOfSuccess, <, 1.0, ?, 0, :, numberOfTrials, ;, }, public, int]
[*, (, 1, -, p, ), ;, }, public, int, getSupportLowerBound, (, ), {, return, probabilityOfSuccess, <, 1.0, ?, 0]
[*, p, *, (, 1, -, p, ), ;, }, public, int, getSupportLowerBound, (, ), {, return, probabilityOfSuccess, <, 1.0]
[*, (, 1, -, p, ), ;, }, public, int, getSupportLowerBound, (, ), {, return, probabilityOfSuccess, <, 1.0, ?, 0]
[;, }, public, int, getSupportLowerBound, (, ), {, return, probabilityOfSuccess, <, 1.0, ?, 0, :, numberOfTrials, ;, }, public, int]
[), ;, }, public, int, getSupportLowerBound, (, ), {, return, probabilityOfSuccess, <, 1.0, ?, 0, :, numberOfTrials, ;, }, public]
[-, p, ), ;, }, public, int, getSupportLowerBound, (, ), {, return, probabilityOfSuccess, <, 1.0, ?, 0, :, numberOfTrials, ;]
[), ;, }, public, int, getSupportLowerBound, (, ), {, return, probabilityOfSuccess, <, 1.0, ?, 0, :, numberOfTrials, ;, }, public]
[;, }, public, int, getSupportUpperBound, (, ), {, return, probabilityOfSuccess, >, 0.0, ?, numberOfTrials, :, 0, ;, }, public, boolean]
[?, 0, :, numberOfTrials, ;, }, public, int, getSupportUpperBound, (, ), {, return, probabilityOfSuccess, >, 0.0, ?, numberOfTrials, :, 0]
[<, 1.0, ?, 0, :, numberOfTrials, ;, }, public, int, getSupportUpperBound, (, ), {, return, probabilityOfSuccess, >, 0.0, ?, numberOfTrials]
[?, 0, :, numberOfTrials, ;, }, public, int, getSupportUpperBound, (, ), {, return, probabilityOfSuccess, >, 0.0, ?, numberOfTrials, :, 0]
[:, numberOfTrials, ;, }, public, int, getSupportUpperBound, (, ), {, return, probabilityOfSuccess, >, 0.0, ?, numberOfTrials, :, 0, ;, }]
[;, }, public, int, getSupportUpperBound, (, ), {, return, probabilityOfSuccess, >, 0.0, ?, numberOfTrials, :, 0, ;, }, public, boolean]
[;, }, public, boolean, isSupportConnected, (, ), {, return, true, ;, }, }]
[?, numberOfTrials, :, 0, ;, }, public, boolean, isSupportConnected, (, ), {, return, true, ;, }, }]
[>, 0.0, ?, numberOfTrials, :, 0, ;, }, public, boolean, isSupportConnected, (, ), {, return, true, ;, }, }]
[?, numberOfTrials, :, 0, ;, }, public, boolean, isSupportConnected, (, ), {, return, true, ;, }, }]
[:, 0, ;, }, public, boolean, isSupportConnected, (, ), {, return, true, ;, }, }]
[;, }, public, boolean, isSupportConnected, (, ), {, return, true, ;, }, }]
[;, }, }]
