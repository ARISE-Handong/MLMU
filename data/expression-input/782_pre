[commons, ., math3, ., util, ., FastMath, ;, public, class, UniformRandomGenerator, implements, NormalizedRandomGenerator, {, private, static, final, double, SQRT3, =]
[commons, ., math3, ., util, ., FastMath, ;, public, class, UniformRandomGenerator, implements, NormalizedRandomGenerator, {, private, static, final, double, SQRT3, =]
[util, ., FastMath, ;, public, class, UniformRandomGenerator, implements, NormalizedRandomGenerator, {, private, static, final, double, SQRT3, =, FastMath, ., sqrt, (]
[=, FastMath, ., sqrt, (, 3.0, ), ;, private, final, RandomGenerator, generator, ;, public, UniformRandomGenerator, (, RandomGenerator, generator, ), {]
[=, FastMath, ., sqrt, (, 3.0, ), ;, private, final, RandomGenerator, generator, ;, public, UniformRandomGenerator, (, RandomGenerator, generator, ), {]
[(, 3.0, ), ;, private, final, RandomGenerator, generator, ;, public, UniformRandomGenerator, (, RandomGenerator, generator, ), {, this, ., generator, =]
[UniformRandomGenerator, (, RandomGenerator, generator, ), {, this, ., generator, =, generator, ;, }, public, double, nextNormalizedDouble, (, ), {, return]
[UniformRandomGenerator, (, RandomGenerator, generator, ), {, this, ., generator, =, generator, ;, }, public, double, nextNormalizedDouble, (, ), {, return]
[RandomGenerator, generator, ), {, this, ., generator, =, generator, ;, }, public, double, nextNormalizedDouble, (, ), {, return, SQRT3, *]
[generator, ), {, this, ., generator, =, generator, ;, }, public, double, nextNormalizedDouble, (, ), {, return, SQRT3, *, (]
[generator, ), {, this, ., generator, =, generator, ;, }, public, double, nextNormalizedDouble, (, ), {, return, SQRT3, *, (]
[generator, ), {, this, ., generator, =, generator, ;, }, public, double, nextNormalizedDouble, (, ), {, return, SQRT3, *, (]
[{, this, ., generator, =, generator, ;, }, public, double, nextNormalizedDouble, (, ), {, return, SQRT3, *, (, 2, *]
[{, this, ., generator, =, generator, ;, }, public, double, nextNormalizedDouble, (, ), {, return, SQRT3, *, (, 2, *]
[;, }, public, double, nextNormalizedDouble, (, ), {, return, SQRT3, *, (, 2, *, generator, ., nextDouble, (, ), -]
