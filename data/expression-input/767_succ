[=, graph, ;, }, public, LinkedDirectedGraph, <, N, ,, E, >, prune, (, Predicate, <, N, >, keep, ), {]
[., graph, =, graph, ;, }, public, LinkedDirectedGraph, <, N, ,, E, >, prune, (, Predicate, <, N, >, keep]
[;, }, public, LinkedDirectedGraph, <, N, ,, E, >, prune, (, Predicate, <, N, >, keep, ), {, LinkedDirectedGraph, <]
[;, for, (, DiGraphNode, <, N, ,, E, >, node, :, workGraph, ., getDirectedGraphNodes, (, ), ), {, for, (]
[), ;, for, (, DiGraphNode, <, N, ,, E, >, node, :, workGraph, ., getDirectedGraphNodes, (, ), ), {, for]
[), {, for, (, DiGraphEdge, <, N, ,, E, >, inEdge, :, node, ., getInEdges, (, ), ), {, for]
[., getDirectedGraphNodes, (, ), ), {, for, (, DiGraphEdge, <, N, ,, E, >, inEdge, :, node, ., getInEdges, (]
[), {, for, (, DiGraphEdge, <, N, ,, E, >, outEdge, :, node, ., getOutEdges, (, ), ), {, N]
[., getInEdges, (, ), ), {, for, (, DiGraphEdge, <, N, ,, E, >, outEdge, :, node, ., getOutEdges, (]
[), {, N, source, =, inEdge, ., getSource, (, ), ., getValue, (, ), ;, N, dest, =, outEdge, .]
[., getOutEdges, (, ), ), {, N, source, =, inEdge, ., getSource, (, ), ., getValue, (, ), ;, N]
[;, N, dest, =, outEdge, ., getDestination, (, ), ., getValue, (, ), ;, if, (, !, workGraph, ., isConnectedInDirection]
[., getValue, (, ), ;, N, dest, =, outEdge, ., getDestination, (, ), ., getValue, (, ), ;, if, (]
[., getSource, (, ), ., getValue, (, ), ;, N, dest, =, outEdge, ., getDestination, (, ), ., getValue, (]
[;, if, (, !, workGraph, ., isConnectedInDirection, (, source, ,, dest, ), ), {, workGraph, ., connect, (, source, ,]
[., getValue, (, ), ;, if, (, !, workGraph, ., isConnectedInDirection, (, source, ,, dest, ), ), {, workGraph, .]
[., getDestination, (, ), ., getValue, (, ), ;, if, (, !, workGraph, ., isConnectedInDirection, (, source, ,, dest, )]
[), {, workGraph, ., connect, (, source, ,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }, }]
[), {, workGraph, ., connect, (, source, ,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }, }]
[., isConnectedInDirection, (, source, ,, dest, ), ), {, workGraph, ., connect, (, source, ,, outEdge, ., getValue, (, )]
[,, dest, ), ), {, workGraph, ., connect, (, source, ,, outEdge, ., getValue, (, ), ,, dest, ), ;]
[), ), {, workGraph, ., connect, (, source, ,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }]
[;, }, }, }, }, LinkedDirectedGraph, <, N, ,, E, >, resultGraph, =, LinkedDirectedGraph, ., create, (, ), ;, for]
[., connect, (, source, ,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }, }, }, LinkedDirectedGraph, <]
[,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }, }, }, LinkedDirectedGraph, <, N, ,, E, >]
[,, dest, ), ;, }, }, }, }, LinkedDirectedGraph, <, N, ,, E, >, resultGraph, =, LinkedDirectedGraph, ., create, (]
[., getValue, (, ), ,, dest, ), ;, }, }, }, }, LinkedDirectedGraph, <, N, ,, E, >, resultGraph, =]
[), ;, }, }, }, }, LinkedDirectedGraph, <, N, ,, E, >, resultGraph, =, LinkedDirectedGraph, ., create, (, ), ;]
[;, for, (, DiGraphNode, <, N, ,, E, >, node, :, workGraph, ., getDirectedGraphNodes, (, ), ), {, if, (]
[., create, (, ), ;, for, (, DiGraphNode, <, N, ,, E, >, node, :, workGraph, ., getDirectedGraphNodes, (, )]
[), {, if, (, keep, ., apply, (, node, ., getValue, (, ), ), ), {, resultGraph, ., createNode, (]
[., getDirectedGraphNodes, (, ), ), {, if, (, keep, ., apply, (, node, ., getValue, (, ), ), ), {]
[), {, resultGraph, ., createNode, (, node, ., getValue, (, ), ), ;, for, (, DiGraphEdge, <, N, ,, E]
[., apply, (, node, ., getValue, (, ), ), ), {, resultGraph, ., createNode, (, node, ., getValue, (, )]
[), ), {, resultGraph, ., createNode, (, node, ., getValue, (, ), ), ;, for, (, DiGraphEdge, <, N, ,]
[., getValue, (, ), ), ), {, resultGraph, ., createNode, (, node, ., getValue, (, ), ), ;, for, (]
[;, for, (, DiGraphEdge, <, N, ,, E, >, outEdge, :, node, ., getOutEdges, (, ), ), {, N, source]
[., createNode, (, node, ., getValue, (, ), ), ;, for, (, DiGraphEdge, <, N, ,, E, >, outEdge, :]
[), ;, for, (, DiGraphEdge, <, N, ,, E, >, outEdge, :, node, ., getOutEdges, (, ), ), {, N]
[., getValue, (, ), ), ;, for, (, DiGraphEdge, <, N, ,, E, >, outEdge, :, node, ., getOutEdges, (]
[), {, N, source, =, node, ., getValue, (, ), ;, N, dest, =, outEdge, ., getDestination, (, ), .]
[., getOutEdges, (, ), ), {, N, source, =, node, ., getValue, (, ), ;, N, dest, =, outEdge, .]
[;, N, dest, =, outEdge, ., getDestination, (, ), ., getValue, (, ), ;, if, (, keep, ., apply, (]
[., getValue, (, ), ;, N, dest, =, outEdge, ., getDestination, (, ), ., getValue, (, ), ;, if, (]
[;, if, (, keep, ., apply, (, dest, ), ), {, resultGraph, ., createNode, (, dest, ), ;, if, (]
[., getValue, (, ), ;, if, (, keep, ., apply, (, dest, ), ), {, resultGraph, ., createNode, (, dest]
[., getDestination, (, ), ., getValue, (, ), ;, if, (, keep, ., apply, (, dest, ), ), {, resultGraph]
[), {, resultGraph, ., createNode, (, dest, ), ;, if, (, source, !=, dest, &&, !, resultGraph, ., isConnectedInDirection, (]
[., apply, (, dest, ), ), {, resultGraph, ., createNode, (, dest, ), ;, if, (, source, !=, dest, &&]
[), ), {, resultGraph, ., createNode, (, dest, ), ;, if, (, source, !=, dest, &&, !, resultGraph, ., isConnectedInDirection]
[;, if, (, source, !=, dest, &&, !, resultGraph, ., isConnectedInDirection, (, source, ,, dest, ), ), {, resultGraph, .]
[., createNode, (, dest, ), ;, if, (, source, !=, dest, &&, !, resultGraph, ., isConnectedInDirection, (, source, ,, dest]
[), ;, if, (, source, !=, dest, &&, !, resultGraph, ., isConnectedInDirection, (, source, ,, dest, ), ), {, resultGraph]
[), {, resultGraph, ., connect, (, source, ,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }, }]
[&&, !, resultGraph, ., isConnectedInDirection, (, source, ,, dest, ), ), {, resultGraph, ., connect, (, source, ,, outEdge, .]
[!=, dest, &&, !, resultGraph, ., isConnectedInDirection, (, source, ,, dest, ), ), {, resultGraph, ., connect, (, source, ,]
[&&, !, resultGraph, ., isConnectedInDirection, (, source, ,, dest, ), ), {, resultGraph, ., connect, (, source, ,, outEdge, .]
[), {, resultGraph, ., connect, (, source, ,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }, }]
[), {, resultGraph, ., connect, (, source, ,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }, }]
[., isConnectedInDirection, (, source, ,, dest, ), ), {, resultGraph, ., connect, (, source, ,, outEdge, ., getValue, (, )]
[,, dest, ), ), {, resultGraph, ., connect, (, source, ,, outEdge, ., getValue, (, ), ,, dest, ), ;]
[), ), {, resultGraph, ., connect, (, source, ,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }]
[;, }, }, }, }, }, return, resultGraph, ;, }, private, static, <, N, ,, E, >, LinkedDirectedGraph, <, N]
[., connect, (, source, ,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }, }, }, }, return]
[,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }, }, }, }, return, resultGraph, ;, }, private]
[,, dest, ), ;, }, }, }, }, }, return, resultGraph, ;, }, private, static, <, N, ,, E, >]
[., getValue, (, ), ,, dest, ), ;, }, }, }, }, }, return, resultGraph, ;, }, private, static, <]
[), ;, }, }, }, }, }, return, resultGraph, ;, }, private, static, <, N, ,, E, >, LinkedDirectedGraph, <]
[;, }, private, static, <, N, ,, E, >, LinkedDirectedGraph, <, N, ,, E, >, cloneGraph, (, DiGraph, <, N]
[;, for, (, DiGraphNode, <, N, ,, E, >, node, :, graph, ., getDirectedGraphNodes, (, ), ), {, newGraph, .]
[., create, (, ), ;, for, (, DiGraphNode, <, N, ,, E, >, node, :, graph, ., getDirectedGraphNodes, (, )]
[), {, newGraph, ., createNode, (, node, ., getValue, (, ), ), ;, for, (, DiGraphEdge, <, N, ,, E]
[., getDirectedGraphNodes, (, ), ), {, newGraph, ., createNode, (, node, ., getValue, (, ), ), ;, for, (, DiGraphEdge]
[;, for, (, DiGraphEdge, <, N, ,, E, >, outEdge, :, node, ., getOutEdges, (, ), ), {, N, dest]
[., createNode, (, node, ., getValue, (, ), ), ;, for, (, DiGraphEdge, <, N, ,, E, >, outEdge, :]
[), ;, for, (, DiGraphEdge, <, N, ,, E, >, outEdge, :, node, ., getOutEdges, (, ), ), {, N]
[., getValue, (, ), ), ;, for, (, DiGraphEdge, <, N, ,, E, >, outEdge, :, node, ., getOutEdges, (]
[), {, N, dest, =, outEdge, ., getDestination, (, ), ., getValue, (, ), ;, newGraph, ., createNode, (, dest]
[., getOutEdges, (, ), ), {, N, dest, =, outEdge, ., getDestination, (, ), ., getValue, (, ), ;, newGraph]
[;, newGraph, ., createNode, (, dest, ), ;, newGraph, ., connect, (, node, ., getValue, (, ), ,, outEdge, .]
[., getValue, (, ), ;, newGraph, ., createNode, (, dest, ), ;, newGraph, ., connect, (, node, ., getValue, (]
[., getDestination, (, ), ., getValue, (, ), ;, newGraph, ., createNode, (, dest, ), ;, newGraph, ., connect, (]
[;, newGraph, ., connect, (, node, ., getValue, (, ), ,, outEdge, ., getValue, (, ), ,, dest, ), ;]
[., createNode, (, dest, ), ;, newGraph, ., connect, (, node, ., getValue, (, ), ,, outEdge, ., getValue, (]
[), ;, newGraph, ., connect, (, node, ., getValue, (, ), ,, outEdge, ., getValue, (, ), ,, dest, )]
[;, }, }, return, newGraph, ;, }, }]
[., connect, (, node, ., getValue, (, ), ,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }]
[,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }, return, newGraph, ;, }, }]
[., getValue, (, ), ,, outEdge, ., getValue, (, ), ,, dest, ), ;, }, }, return, newGraph, ;, }]
[,, dest, ), ;, }, }, return, newGraph, ;, }, }]
[., getValue, (, ), ,, dest, ), ;, }, }, return, newGraph, ;, }, }]
[), ;, }, }, return, newGraph, ;, }, }]
[;, }, }]
