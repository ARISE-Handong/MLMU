[private, static, final, long, serialVersionUID, =, 7190739608550251860L, ;, final, long, iUnitMillis, ;, private, final, DurationField, iDurationField, ;, public, ImpreciseDateTimeField, (]
[), private, static, final, long, serialVersionUID, =, 7190739608550251860L, ;, final, long, iUnitMillis, ;, private, final, DurationField, iDurationField, ;, public, ImpreciseDateTimeField]
[;, final, long, iUnitMillis, ;, private, final, DurationField, iDurationField, ;, public, ImpreciseDateTimeField, (, DateTimeFieldType, type, ,, long, unitMillis, ), {]
[), ;, iUnitMillis, =, unitMillis, ;, iDurationField, =, new, LinkedDurationField, (, type, ., getDurationType, (, ), ), ;, }, public]
[=, unitMillis, ;, iDurationField, =, new, LinkedDurationField, (, type, ., getDurationType, (, ), ), ;, }, public, abstract, int, get]
[;, iDurationField, =, new, LinkedDurationField, (, type, ., getDurationType, (, ), ), ;, }, public, abstract, int, get, (, long]
[=, new, LinkedDurationField, (, type, ., getDurationType, (, ), ), ;, }, public, abstract, int, get, (, long, instant, )]
[;, }, public, abstract, int, get, (, long, instant, ), ;, public, abstract, long, set, (, long, instant, ,, int]
[), ;, }, public, abstract, int, get, (, long, instant, ), ;, public, abstract, long, set, (, long, instant, ,]
[., getDurationType, (, ), ), ;, }, public, abstract, int, get, (, long, instant, ), ;, public, abstract, long, set]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant, ), {]
[., safeToInt, (, getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long]
[), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant, )]
[,, subtrahendInstant, ), ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant]
[), ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant]
[), {, return, -, getDifferenceAsLong, (, subtrahendInstant, ,, minuendInstant, ), ;, }, long, difference, =, (, minuendInstant, -, subtrahendInstant, )]
[<, subtrahendInstant, ), {, return, -, getDifferenceAsLong, (, subtrahendInstant, ,, minuendInstant, ), ;, }, long, difference, =, (, minuendInstant, -]
[), {, return, -, getDifferenceAsLong, (, subtrahendInstant, ,, minuendInstant, ), ;, }, long, difference, =, (, minuendInstant, -, subtrahendInstant, )]
[;, }, long, difference, =, (, minuendInstant, -, subtrahendInstant, ), /, iUnitMillis, ;, if, (, add, (, subtrahendInstant, ,, difference]
[;, }, long, difference, =, (, minuendInstant, -, subtrahendInstant, ), /, iUnitMillis, ;, if, (, add, (, subtrahendInstant, ,, difference]
[,, minuendInstant, ), ;, }, long, difference, =, (, minuendInstant, -, subtrahendInstant, ), /, iUnitMillis, ;, if, (, add, (]
[), ;, }, long, difference, =, (, minuendInstant, -, subtrahendInstant, ), /, iUnitMillis, ;, if, (, add, (, subtrahendInstant, ,]
[;, if, (, add, (, subtrahendInstant, ,, difference, ), <, minuendInstant, ), {, do, {, difference, ++, ;, }, while]
[/, iUnitMillis, ;, if, (, add, (, subtrahendInstant, ,, difference, ), <, minuendInstant, ), {, do, {, difference, ++, ;]
[), /, iUnitMillis, ;, if, (, add, (, subtrahendInstant, ,, difference, ), <, minuendInstant, ), {, do, {, difference, ++]
[-, subtrahendInstant, ), /, iUnitMillis, ;, if, (, add, (, subtrahendInstant, ,, difference, ), <, minuendInstant, ), {, do, {]
[), /, iUnitMillis, ;, if, (, add, (, subtrahendInstant, ,, difference, ), <, minuendInstant, ), {, do, {, difference, ++]
[;, if, (, add, (, subtrahendInstant, ,, difference, ), <, minuendInstant, ), {, do, {, difference, ++, ;, }, while]
[), {, do, {, difference, ++, ;, }, while, (, add, (, subtrahendInstant, ,, difference, ), <=, minuendInstant, ), ;]
[<, minuendInstant, ), {, do, {, difference, ++, ;, }, while, (, add, (, subtrahendInstant, ,, difference, ), <=, minuendInstant]
[,, difference, ), <, minuendInstant, ), {, do, {, difference, ++, ;, }, while, (, add, (, subtrahendInstant, ,, difference]
[), <, minuendInstant, ), {, do, {, difference, ++, ;, }, while, (, add, (, subtrahendInstant, ,, difference, ), <=]
[), {, do, {, difference, ++, ;, }, while, (, add, (, subtrahendInstant, ,, difference, ), <=, minuendInstant, ), ;]
[;, }, while, (, add, (, subtrahendInstant, ,, difference, ), <=, minuendInstant, ), ;, difference, --, ;, }, else, if]
[++, ;, }, while, (, add, (, subtrahendInstant, ,, difference, ), <=, minuendInstant, ), ;, difference, --, ;, }, else]
[), ;, difference, --, ;, }, else, if, (, add, (, subtrahendInstant, ,, difference, ), >, minuendInstant, ), {, do]
[<=, minuendInstant, ), ;, difference, --, ;, }, else, if, (, add, (, subtrahendInstant, ,, difference, ), >, minuendInstant, )]
[,, difference, ), <=, minuendInstant, ), ;, difference, --, ;, }, else, if, (, add, (, subtrahendInstant, ,, difference, )]
[), <=, minuendInstant, ), ;, difference, --, ;, }, else, if, (, add, (, subtrahendInstant, ,, difference, ), >, minuendInstant]
[), ;, difference, --, ;, }, else, if, (, add, (, subtrahendInstant, ,, difference, ), >, minuendInstant, ), {, do]
[;, }, else, if, (, add, (, subtrahendInstant, ,, difference, ), >, minuendInstant, ), {, do, {, difference, --, ;]
[--, ;, }, else, if, (, add, (, subtrahendInstant, ,, difference, ), >, minuendInstant, ), {, do, {, difference, --]
[), {, do, {, difference, --, ;, }, while, (, add, (, subtrahendInstant, ,, difference, ), >, minuendInstant, ), ;]
[>, minuendInstant, ), {, do, {, difference, --, ;, }, while, (, add, (, subtrahendInstant, ,, difference, ), >, minuendInstant]
[,, difference, ), >, minuendInstant, ), {, do, {, difference, --, ;, }, while, (, add, (, subtrahendInstant, ,, difference]
[), >, minuendInstant, ), {, do, {, difference, --, ;, }, while, (, add, (, subtrahendInstant, ,, difference, ), >]
[), {, do, {, difference, --, ;, }, while, (, add, (, subtrahendInstant, ,, difference, ), >, minuendInstant, ), ;]
[;, }, while, (, add, (, subtrahendInstant, ,, difference, ), >, minuendInstant, ), ;, }, return, difference, ;, }, public]
[--, ;, }, while, (, add, (, subtrahendInstant, ,, difference, ), >, minuendInstant, ), ;, }, return, difference, ;, }]
[), ;, }, return, difference, ;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public, abstract]
[>, minuendInstant, ), ;, }, return, difference, ;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }]
[,, difference, ), >, minuendInstant, ), ;, }, return, difference, ;, }, public, final, DurationField, getDurationField, (, ), {, return]
[), >, minuendInstant, ), ;, }, return, difference, ;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;]
[), ;, }, return, difference, ;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public, abstract]
[;, }, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public, abstract, DurationField, getRangeDurationField, (, ), ;]
[;, }, public, abstract, DurationField, getRangeDurationField, (, ), ;, public, abstract, long, roundFloor, (, long, instant, ), ;, protected, final]
[;, }, private, final, class, LinkedDurationField, extends, BaseDurationField, {, private, static, final, long, serialVersionUID, =, -, 203813474600094134L, ;, LinkedDurationField, (]
[;, LinkedDurationField, (, DurationFieldType, type, ), {, super, (, type, ), ;, }, public, boolean, isPrecise, (, ), {, return]
[;, LinkedDurationField, (, DurationFieldType, type, ), {, super, (, type, ), ;, }, public, boolean, isPrecise, (, ), {, return]
[), ;, }, public, boolean, isPrecise, (, ), {, return, false, ;, }, public, long, getUnitMillis, (, ), {, return]
[;, }, public, long, getUnitMillis, (, ), {, return, iUnitMillis, ;, }, public, int, getValue, (, long, duration, ,, long]
[;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return, ImpreciseDateTimeField, ., this, ., getDifference, (]
[;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, ImpreciseDateTimeField, ., this, ., getDifferenceAsLong, (]
[., getDifference, (, instant, +, duration, ,, instant, ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant]
[,, instant, ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, ImpreciseDateTimeField, ., this]
[+, duration, ,, instant, ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, ImpreciseDateTimeField]
[,, instant, ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, ImpreciseDateTimeField, ., this]
[), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, ImpreciseDateTimeField, ., this, ., getDifferenceAsLong]
[;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, ImpreciseDateTimeField, ., this, ., add, (]
[., getDifferenceAsLong, (, instant, +, duration, ,, instant, ), ;, }, public, long, getMillis, (, int, value, ,, long, instant]
[,, instant, ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, ImpreciseDateTimeField, ., this]
[+, duration, ,, instant, ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, ImpreciseDateTimeField]
[,, instant, ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, ImpreciseDateTimeField, ., this]
[), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, ImpreciseDateTimeField, ., this, ., add]
[;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, ImpreciseDateTimeField, ., this, ., add, (]
[-, instant, ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, ImpreciseDateTimeField, ., this, .]
[., add, (, instant, ,, value, ), -, instant, ;, }, public, long, getMillis, (, long, value, ,, long, instant]
[,, value, ), -, instant, ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, ImpreciseDateTimeField]
[), -, instant, ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, ImpreciseDateTimeField, ., this]
[;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, ImpreciseDateTimeField, ., this, ., add, (]
[;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, ImpreciseDateTimeField, ., this, ., add, (]
[-, instant, ;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, ImpreciseDateTimeField, ., this, .]
[., add, (, instant, ,, value, ), -, instant, ;, }, public, long, add, (, long, instant, ,, int, value]
[,, value, ), -, instant, ;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, ImpreciseDateTimeField]
[), -, instant, ;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, ImpreciseDateTimeField, ., this]
[;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, ImpreciseDateTimeField, ., this, ., add, (]
[;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, ImpreciseDateTimeField, ., this, ., add, (]
[., add, (, instant, ,, value, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {]
[,, value, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, ImpreciseDateTimeField, ., this]
[), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, ImpreciseDateTimeField, ., this, ., add]
[;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, ImpreciseDateTimeField, ., this, ., getDifference, (]
[., add, (, instant, ,, value, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {]
[,, value, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, ImpreciseDateTimeField, ., this]
[), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, ImpreciseDateTimeField, ., this, ., getDifference]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, ImpreciseDateTimeField, ., this, ., getDifferenceAsLong, (]
[., getDifference, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {]
[,, subtrahendInstant, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, ImpreciseDateTimeField, ., this]
[), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, ImpreciseDateTimeField, ., this, ., getDifferenceAsLong]
[;, }, }, }]
[., getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), ;, }, }, }]
[,, subtrahendInstant, ), ;, }, }, }]
[), ;, }, }, }]
