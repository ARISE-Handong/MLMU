[util, ., Primitives, ., defaultValueForPrimitiveOrWrapper, ;, import, static, org, ., mockito, ., internal, ., util, ., Primitives, ., isPrimitiveOrWrapper, ;]
[., defaultValueForPrimitiveOrWrapper, ;, import, static, org, ., mockito, ., internal, ., util, ., Primitives, ., isPrimitiveOrWrapper, ;, @, SuppressWarnings, (]
[Primitives, ., isPrimitiveOrWrapper, ;, @, SuppressWarnings, (, "unchecked", ), public, class, HandyReturnValues, {, public, byte, returnZero, (, ), {, return]
[class, HandyReturnValues, {, public, byte, returnZero, (, ), {, return, 0, ;, }, public, char, returnChar, (, ), {, return]
[public, char, returnChar, (, ), {, return, 0, ;, }, public, <, T, >, T, returnNull, (, ), {, return]
[public, <, T, >, T, returnNull, (, ), {, return, null, ;, }, public, boolean, returnFalse, (, ), {, return]
[null, ;, }, public, boolean, returnFalse, (, ), {, return, false, ;, }, public, String, returnString, (, ), {, return]
[return, "", ;, }, public, <, T, >, T, returnFor, (, Class, <, T, >, clazz, ), {, if, (]
[;, }, public, <, T, >, T, returnFor, (, Class, <, T, >, clazz, ), {, if, (, isPrimitiveOrWrapper, (]
[>, T, returnFor, (, Class, <, T, >, clazz, ), {, if, (, isPrimitiveOrWrapper, (, clazz, ), ), {, return]
[returnFor, (, Class, <, T, >, clazz, ), {, if, (, isPrimitiveOrWrapper, (, clazz, ), ), {, return, defaultValueForPrimitiveOrWrapper, (]
[>, clazz, ), {, if, (, isPrimitiveOrWrapper, (, clazz, ), ), {, return, defaultValueForPrimitiveOrWrapper, (, clazz, ), ;, }, return]
[), {, return, defaultValueForPrimitiveOrWrapper, (, clazz, ), ;, }, return, null, ;, }, public, Map, returnMap, (, ), {, return]
[public, Map, returnMap, (, ), {, return, new, HashMap, (, ), ;, }, public, List, returnList, (, ), {, return]
[public, List, returnList, (, ), {, return, new, LinkedList, (, ), ;, }, public, Set, returnSet, (, ), {, return]
[{, return, new, HashSet, (, ), ;, }, public, <, T, >, T, returnFor, (, T, instance, ), {, return]
[{, return, new, HashSet, (, ), ;, }, public, <, T, >, T, returnFor, (, T, instance, ), {, return]
[{, return, new, HashSet, (, ), ;, }, public, <, T, >, T, returnFor, (, T, instance, ), {, return]
[new, HashSet, (, ), ;, }, public, <, T, >, T, returnFor, (, T, instance, ), {, return, instance, ==]
[(, ), ;, }, public, <, T, >, T, returnFor, (, T, instance, ), {, return, instance, ==, null, ?]
[;, }, public, <, T, >, T, returnFor, (, T, instance, ), {, return, instance, ==, null, ?, null, :]
[<, T, >, T, returnFor, (, T, instance, ), {, return, instance, ==, null, ?, null, :, (, T, )]
[>, T, returnFor, (, T, instance, ), {, return, instance, ==, null, ?, null, :, (, T, ), returnFor, (]
[>, T, returnFor, (, T, instance, ), {, return, instance, ==, null, ?, null, :, (, T, ), returnFor, (]
