[<, Node, >, aliasedFunctions, ;, private, Set, <, Node, >, functionsExposedToCallOrApply, ;, public, boolean, isAliased, (, Node, functionNode, ), {]
[<, Node, >, aliasedFunctions, ;, private, Set, <, Node, >, functionsExposedToCallOrApply, ;, public, boolean, isAliased, (, Node, functionNode, ), {]
[;, private, Set, <, Node, >, functionsExposedToCallOrApply, ;, public, boolean, isAliased, (, Node, functionNode, ), {, Preconditions, ., checkNotNull, (]
[<, Node, >, functionsExposedToCallOrApply, ;, public, boolean, isAliased, (, Node, functionNode, ), {, Preconditions, ., checkNotNull, (, aliasedFunctions, ), ;]
[<, Node, >, functionsExposedToCallOrApply, ;, public, boolean, isAliased, (, Node, functionNode, ), {, Preconditions, ., checkNotNull, (, aliasedFunctions, ), ;]
[;, public, boolean, isAliased, (, Node, functionNode, ), {, Preconditions, ., checkNotNull, (, aliasedFunctions, ), ;, Preconditions, ., checkArgument, (]
[;, public, boolean, isAliased, (, Node, functionNode, ), {, Preconditions, ., checkNotNull, (, aliasedFunctions, ), ;, Preconditions, ., checkArgument, (]
[{, Preconditions, ., checkNotNull, (, aliasedFunctions, ), ;, Preconditions, ., checkArgument, (, functionNode, ., isFunction, (, ), ), ;, return]
[{, Preconditions, ., checkNotNull, (, aliasedFunctions, ), ;, Preconditions, ., checkArgument, (, functionNode, ., isFunction, (, ), ), ;, return]
[(, aliasedFunctions, ), ;, Preconditions, ., checkArgument, (, functionNode, ., isFunction, (, ), ), ;, return, aliasedFunctions, ., contains, (]
[), ), ;, return, aliasedFunctions, ., contains, (, functionNode, ), ;, }, public, boolean, isExposedToCallOrApply, (, Node, functionNode, ), {]
[), ), ;, return, aliasedFunctions, ., contains, (, functionNode, ), ;, }, public, boolean, isExposedToCallOrApply, (, Node, functionNode, ), {]
[aliasedFunctions, ., contains, (, functionNode, ), ;, }, public, boolean, isExposedToCallOrApply, (, Node, functionNode, ), {, Preconditions, ., checkNotNull, (]
[(, functionNode, ), ;, }, public, boolean, isExposedToCallOrApply, (, Node, functionNode, ), {, Preconditions, ., checkNotNull, (, functionsExposedToCallOrApply, ), ;]
[(, functionNode, ), ;, }, public, boolean, isExposedToCallOrApply, (, Node, functionNode, ), {, Preconditions, ., checkNotNull, (, functionsExposedToCallOrApply, ), ;]
[}, public, boolean, isExposedToCallOrApply, (, Node, functionNode, ), {, Preconditions, ., checkNotNull, (, functionsExposedToCallOrApply, ), ;, Preconditions, ., checkArgument, (]
[}, public, boolean, isExposedToCallOrApply, (, Node, functionNode, ), {, Preconditions, ., checkNotNull, (, functionsExposedToCallOrApply, ), ;, Preconditions, ., checkArgument, (]
[{, Preconditions, ., checkNotNull, (, functionsExposedToCallOrApply, ), ;, Preconditions, ., checkArgument, (, functionNode, ., isFunction, (, ), ), ;, return]
[{, Preconditions, ., checkNotNull, (, functionsExposedToCallOrApply, ), ;, Preconditions, ., checkArgument, (, functionNode, ., isFunction, (, ), ), ;, return]
[(, functionsExposedToCallOrApply, ), ;, Preconditions, ., checkArgument, (, functionNode, ., isFunction, (, ), ), ;, return, functionsExposedToCallOrApply, ., contains, (]
[), ), ;, return, functionsExposedToCallOrApply, ., contains, (, functionNode, ), ;, }, public, void, analyze, (, SimpleDefinitionFinder, finder, ), {]
[), ), ;, return, functionsExposedToCallOrApply, ., contains, (, functionNode, ), ;, }, public, void, analyze, (, SimpleDefinitionFinder, finder, ), {]
[functionsExposedToCallOrApply, ., contains, (, functionNode, ), ;, }, public, void, analyze, (, SimpleDefinitionFinder, finder, ), {, Preconditions, ., checkState, (]
[functionsExposedToCallOrApply, ., contains, (, functionNode, ), ;, }, public, void, analyze, (, SimpleDefinitionFinder, finder, ), {, Preconditions, ., checkState, (]
[contains, (, functionNode, ), ;, }, public, void, analyze, (, SimpleDefinitionFinder, finder, ), {, Preconditions, ., checkState, (, aliasedFunctions, ==]
[), ;, }, public, void, analyze, (, SimpleDefinitionFinder, finder, ), {, Preconditions, ., checkState, (, aliasedFunctions, ==, null, ), ;]
[}, public, void, analyze, (, SimpleDefinitionFinder, finder, ), {, Preconditions, ., checkState, (, aliasedFunctions, ==, null, ), ;, aliasedFunctions, =]
[}, public, void, analyze, (, SimpleDefinitionFinder, finder, ), {, Preconditions, ., checkState, (, aliasedFunctions, ==, null, ), ;, aliasedFunctions, =]
[finder, ), {, Preconditions, ., checkState, (, aliasedFunctions, ==, null, ), ;, aliasedFunctions, =, Sets, ., newHashSet, (, ), ;]
[{, Preconditions, ., checkState, (, aliasedFunctions, ==, null, ), ;, aliasedFunctions, =, Sets, ., newHashSet, (, ), ;, functionsExposedToCallOrApply, =]
[{, Preconditions, ., checkState, (, aliasedFunctions, ==, null, ), ;, aliasedFunctions, =, Sets, ., newHashSet, (, ), ;, functionsExposedToCallOrApply, =]
[=, Sets, ., newHashSet, (, ), ;, functionsExposedToCallOrApply, =, Sets, ., newHashSet, (, ), ;, for, (, DefinitionSite, definitionSite, :]
[=, Sets, ., newHashSet, (, ), ;, functionsExposedToCallOrApply, =, Sets, ., newHashSet, (, ), ;, for, (, DefinitionSite, definitionSite, :]
[., newHashSet, (, ), ;, for, (, DefinitionSite, definitionSite, :, finder, ., getDefinitionSites, (, ), ), {, Definition, definition, =]
[., newHashSet, (, ), ;, for, (, DefinitionSite, definitionSite, :, finder, ., getDefinitionSites, (, ), ), {, Definition, definition, =]
[(, DefinitionSite, definitionSite, :, finder, ., getDefinitionSites, (, ), ), {, Definition, definition, =, definitionSite, ., definition, ;, if, (]
[DefinitionSite, definitionSite, :, finder, ., getDefinitionSites, (, ), ), {, Definition, definition, =, definitionSite, ., definition, ;, if, (, !]
[DefinitionSite, definitionSite, :, finder, ., getDefinitionSites, (, ), ), {, Definition, definition, =, definitionSite, ., definition, ;, if, (, !]
[Definition, definition, =, definitionSite, ., definition, ;, if, (, !, definition, ., isExtern, (, ), ), {, Node, rValue, =]
[Definition, definition, =, definitionSite, ., definition, ;, if, (, !, definition, ., isExtern, (, ), ), {, Node, rValue, =]
[(, !, definition, ., isExtern, (, ), ), {, Node, rValue, =, definition, ., getRValue, (, ), ;, if, (]
[(, !, definition, ., isExtern, (, ), ), {, Node, rValue, =, definition, ., getRValue, (, ), ;, if, (]
[(, !, definition, ., isExtern, (, ), ), {, Node, rValue, =, definition, ., getRValue, (, ), ;, if, (]
[definition, ., isExtern, (, ), ), {, Node, rValue, =, definition, ., getRValue, (, ), ;, if, (, rValue, !=]
[isExtern, (, ), ), {, Node, rValue, =, definition, ., getRValue, (, ), ;, if, (, rValue, !=, null, &&]
[isExtern, (, ), ), {, Node, rValue, =, definition, ., getRValue, (, ), ;, if, (, rValue, !=, null, &&]
[), ;, if, (, rValue, !=, null, &&, rValue, ., isFunction, (, ), ), {, for, (, UseSite, useSite, :]
[), ;, if, (, rValue, !=, null, &&, rValue, ., isFunction, (, ), ), {, for, (, UseSite, useSite, :]
[rValue, !=, null, &&, rValue, ., isFunction, (, ), ), {, for, (, UseSite, useSite, :, finder, ., getUseSites, (]
[rValue, ., isFunction, (, ), ), {, for, (, UseSite, useSite, :, finder, ., getUseSites, (, definition, ), ), {]
[isFunction, (, ), ), {, for, (, UseSite, useSite, :, finder, ., getUseSites, (, definition, ), ), {, updateFunctionForUse, (]
[), ), {, for, (, UseSite, useSite, :, finder, ., getUseSites, (, definition, ), ), {, updateFunctionForUse, (, rValue, ,]
[), ), {, for, (, UseSite, useSite, :, finder, ., getUseSites, (, definition, ), ), {, updateFunctionForUse, (, rValue, ,]
[;, }, }, }, }, }, private, void, updateFunctionForUse, (, Node, function, ,, Node, useNode, ), {, Node, useParent, =]
[;, }, }, }, }, }, private, void, updateFunctionForUse, (, Node, function, ,, Node, useNode, ), {, Node, useParent, =]
[(, Node, function, ,, Node, useNode, ), {, Node, useParent, =, useNode, ., getParent, (, ), ;, int, parentType, =]
[(, Node, function, ,, Node, useNode, ), {, Node, useParent, =, useNode, ., getParent, (, ), ;, int, parentType, =]
[Node, useParent, =, useNode, ., getParent, (, ), ;, int, parentType, =, useParent, ., getType, (, ), ;, if, (]
[Node, useParent, =, useNode, ., getParent, (, ), ;, int, parentType, =, useParent, ., getType, (, ), ;, if, (]
[useParent, =, useNode, ., getParent, (, ), ;, int, parentType, =, useParent, ., getType, (, ), ;, if, (, (]
[useParent, =, useNode, ., getParent, (, ), ;, int, parentType, =, useParent, ., getType, (, ), ;, if, (, (]
[useParent, =, useNode, ., getParent, (, ), ;, int, parentType, =, useParent, ., getType, (, ), ;, if, (, (]
[useNode, ., getParent, (, ), ;, int, parentType, =, useParent, ., getType, (, ), ;, if, (, (, parentType, ==]
[useNode, ., getParent, (, ), ;, int, parentType, =, useParent, ., getType, (, ), ;, if, (, (, parentType, ==]
[), ;, int, parentType, =, useParent, ., getType, (, ), ;, if, (, (, parentType, ==, Token, ., CALL, ||]
[), ;, int, parentType, =, useParent, ., getType, (, ), ;, if, (, (, parentType, ==, Token, ., CALL, ||]
[int, parentType, =, useParent, ., getType, (, ), ;, if, (, (, parentType, ==, Token, ., CALL, ||, parentType, ==]
[int, parentType, =, useParent, ., getType, (, ), ;, if, (, (, parentType, ==, Token, ., CALL, ||, parentType, ==]
[getType, (, ), ;, if, (, (, parentType, ==, Token, ., CALL, ||, parentType, ==, Token, ., NEW, ), &&]
[getType, (, ), ;, if, (, (, parentType, ==, Token, ., CALL, ||, parentType, ==, Token, ., NEW, ), &&]
[getType, (, ), ;, if, (, (, parentType, ==, Token, ., CALL, ||, parentType, ==, Token, ., NEW, ), &&]
[(, parentType, ==, Token, ., CALL, ||, parentType, ==, Token, ., NEW, ), &&, useParent, ., getFirstChild, (, ), ==]
[parentType, ==, Token, ., NEW, ), &&, useParent, ., getFirstChild, (, ), ==, useNode, ), {, }, else, if, (]
[parentType, ==, Token, ., NEW, ), &&, useParent, ., getFirstChild, (, ), ==, useNode, ), {, }, else, if, (]
[NEW, ), &&, useParent, ., getFirstChild, (, ), ==, useNode, ), {, }, else, if, (, NodeUtil, ., isGet, (]
[(, ), ==, useNode, ), {, }, else, if, (, NodeUtil, ., isGet, (, useParent, ), ), {, if, (]
[(, ), ==, useNode, ), {, }, else, if, (, NodeUtil, ., isGet, (, useParent, ), ), {, if, (]
[NodeUtil, ., isGet, (, useParent, ), ), {, if, (, useParent, ., isGetProp, (, ), ), {, Node, gramps, =]
[NodeUtil, ., isGet, (, useParent, ), ), {, if, (, useParent, ., isGetProp, (, ), ), {, Node, gramps, =]
[if, (, useParent, ., isGetProp, (, ), ), {, Node, gramps, =, useParent, ., getParent, (, ), ;, if, (]
[if, (, useParent, ., isGetProp, (, ), ), {, Node, gramps, =, useParent, ., getParent, (, ), ;, if, (]
[if, (, useParent, ., isGetProp, (, ), ), {, Node, gramps, =, useParent, ., getParent, (, ), ;, if, (]
[isGetProp, (, ), ), {, Node, gramps, =, useParent, ., getParent, (, ), ;, if, (, NodeUtil, ., isFunctionObjectApply, (]
[), {, Node, gramps, =, useParent, ., getParent, (, ), ;, if, (, NodeUtil, ., isFunctionObjectApply, (, gramps, ), ||]
[), {, Node, gramps, =, useParent, ., getParent, (, ), ;, if, (, NodeUtil, ., isFunctionObjectApply, (, gramps, ), ||]
[=, useParent, ., getParent, (, ), ;, if, (, NodeUtil, ., isFunctionObjectApply, (, gramps, ), ||, NodeUtil, ., isFunctionObjectCall, (]
[(, ), ;, if, (, NodeUtil, ., isFunctionObjectApply, (, gramps, ), ||, NodeUtil, ., isFunctionObjectCall, (, gramps, ), ), {]
[(, ), ;, if, (, NodeUtil, ., isFunctionObjectApply, (, gramps, ), ||, NodeUtil, ., isFunctionObjectCall, (, gramps, ), ), {]
[(, NodeUtil, ., isFunctionObjectApply, (, gramps, ), ||, NodeUtil, ., isFunctionObjectCall, (, gramps, ), ), {, functionsExposedToCallOrApply, ., add, (]
[NodeUtil, ., isFunctionObjectCall, (, gramps, ), ), {, functionsExposedToCallOrApply, ., add, (, function, ), ;, }, }, }, else, {]
[NodeUtil, ., isFunctionObjectCall, (, gramps, ), ), {, functionsExposedToCallOrApply, ., add, (, function, ), ;, }, }, }, else, {]
[gramps, ), ), {, functionsExposedToCallOrApply, ., add, (, function, ), ;, }, }, }, else, {, aliasedFunctions, ., add, (]
