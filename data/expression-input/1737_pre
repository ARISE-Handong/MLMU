[import, java, ., io, ., Serializable, ;, public, final, class, DomainOrder, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[final, class, DomainOrder, implements, Serializable, {, private, static, final, long, serialVersionUID, =, 4902774943512072627L, ;, public, static, final, DomainOrder, NONE, =]
[implements, Serializable, {, private, static, final, long, serialVersionUID, =, 4902774943512072627L, ;, public, static, final, DomainOrder, NONE, =, new, DomainOrder, (]
[4902774943512072627L, ;, public, static, final, DomainOrder, NONE, =, new, DomainOrder, (, "DomainOrder.NONE", ), ;, public, static, final, DomainOrder, ASCENDING, =]
[static, final, DomainOrder, NONE, =, new, DomainOrder, (, "DomainOrder.NONE", ), ;, public, static, final, DomainOrder, ASCENDING, =, new, DomainOrder, (]
[), ;, public, static, final, DomainOrder, ASCENDING, =, new, DomainOrder, (, "DomainOrder.ASCENDING", ), ;, public, static, final, DomainOrder, DESCENDING, =]
[static, final, DomainOrder, ASCENDING, =, new, DomainOrder, (, "DomainOrder.ASCENDING", ), ;, public, static, final, DomainOrder, DESCENDING, =, new, DomainOrder, (]
[DomainOrder, DESCENDING, =, new, DomainOrder, (, "DomainOrder.DESCENDING", ), ;, private, String, name, ;, private, DomainOrder, (, String, name, ), {]
[DomainOrder, DESCENDING, =, new, DomainOrder, (, "DomainOrder.DESCENDING", ), ;, private, String, name, ;, private, DomainOrder, (, String, name, ), {]
[DomainOrder, (, "DomainOrder.DESCENDING", ), ;, private, String, name, ;, private, DomainOrder, (, String, name, ), {, this, ., name, =]
[DomainOrder, (, String, name, ), {, this, ., name, =, name, ;, }, public, String, toString, (, ), {, return]
[DomainOrder, (, String, name, ), {, this, ., name, =, name, ;, }, public, String, toString, (, ), {, return]
[toString, (, ), {, return, this, ., name, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[toString, (, ), {, return, this, ., name, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), {, return, this, ., name, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[., name, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (, !, (]
[this, ==, obj, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DomainOrder, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, DomainOrder, ), ), {, return, false, ;, }, DomainOrder, that, =]
[if, (, !, (, obj, instanceof, DomainOrder, ), ), {, return, false, ;, }, DomainOrder, that, =, (, DomainOrder, )]
[obj, instanceof, DomainOrder, ), ), {, return, false, ;, }, DomainOrder, that, =, (, DomainOrder, ), obj, ;, if, (]
[instanceof, DomainOrder, ), ), {, return, false, ;, }, DomainOrder, that, =, (, DomainOrder, ), obj, ;, if, (, !]
[instanceof, DomainOrder, ), ), {, return, false, ;, }, DomainOrder, that, =, (, DomainOrder, ), obj, ;, if, (, !]
[instanceof, DomainOrder, ), ), {, return, false, ;, }, DomainOrder, that, =, (, DomainOrder, ), obj, ;, if, (, !]
[false, ;, }, DomainOrder, that, =, (, DomainOrder, ), obj, ;, if, (, !, this, ., name, ., equals, (]
[false, ;, }, DomainOrder, that, =, (, DomainOrder, ), obj, ;, if, (, !, this, ., name, ., equals, (]
[obj, ;, if, (, !, this, ., name, ., equals, (, that, ., toString, (, ), ), ), {, return]
[!, this, ., name, ., equals, (, that, ., toString, (, ), ), ), {, return, false, ;, }, return]
[(, ), ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[(, ), ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[(, ), ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[return, this, ., name, ., hashCode, (, ), ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, if, (]
[return, this, ., name, ., hashCode, (, ), ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, if, (]
[., hashCode, (, ), ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, if, (, this, ., equals, (]
[., hashCode, (, ), ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, if, (, this, ., equals, (]
[Object, readResolve, (, ), throws, ObjectStreamException, {, if, (, this, ., equals, (, DomainOrder, ., ASCENDING, ), ), {, return]
[Object, readResolve, (, ), throws, ObjectStreamException, {, if, (, this, ., equals, (, DomainOrder, ., ASCENDING, ), ), {, return]
[(, this, ., equals, (, DomainOrder, ., ASCENDING, ), ), {, return, DomainOrder, ., ASCENDING, ;, }, else, if, (]
[(, this, ., equals, (, DomainOrder, ., ASCENDING, ), ), {, return, DomainOrder, ., ASCENDING, ;, }, else, if, (]
[(, DomainOrder, ., ASCENDING, ), ), {, return, DomainOrder, ., ASCENDING, ;, }, else, if, (, this, ., equals, (]
[(, DomainOrder, ., ASCENDING, ), ), {, return, DomainOrder, ., ASCENDING, ;, }, else, if, (, this, ., equals, (]
[return, DomainOrder, ., ASCENDING, ;, }, else, if, (, this, ., equals, (, DomainOrder, ., DESCENDING, ), ), {, return]
[return, DomainOrder, ., ASCENDING, ;, }, else, if, (, this, ., equals, (, DomainOrder, ., DESCENDING, ), ), {, return]
[(, this, ., equals, (, DomainOrder, ., DESCENDING, ), ), {, return, DomainOrder, ., DESCENDING, ;, }, else, if, (]
[(, this, ., equals, (, DomainOrder, ., DESCENDING, ), ), {, return, DomainOrder, ., DESCENDING, ;, }, else, if, (]
[(, DomainOrder, ., DESCENDING, ), ), {, return, DomainOrder, ., DESCENDING, ;, }, else, if, (, this, ., equals, (]
[(, DomainOrder, ., DESCENDING, ), ), {, return, DomainOrder, ., DESCENDING, ;, }, else, if, (, this, ., equals, (]
[return, DomainOrder, ., DESCENDING, ;, }, else, if, (, this, ., equals, (, DomainOrder, ., NONE, ), ), {, return]
[return, DomainOrder, ., DESCENDING, ;, }, else, if, (, this, ., equals, (, DomainOrder, ., NONE, ), ), {, return]
[else, if, (, this, ., equals, (, DomainOrder, ., NONE, ), ), {, return, DomainOrder, ., NONE, ;, }, return]
