[DatasetUtilities, ;, public, class, StackedAreaRenderer, extends, AreaRenderer, implements, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[;, public, class, StackedAreaRenderer, extends, AreaRenderer, implements, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[private, static, final, long, serialVersionUID, =, -, 3595635038460823663L, ;, private, boolean, renderAsPercentages, ;, public, StackedAreaRenderer, (, ), {, this, (]
[(, ), {, this, (, false, ), ;, }, public, StackedAreaRenderer, (, boolean, renderAsPercentages, ), {, super, (, ), ;]
[(, ), {, this, (, false, ), ;, }, public, StackedAreaRenderer, (, boolean, renderAsPercentages, ), {, super, (, ), ;]
[(, false, ), ;, }, public, StackedAreaRenderer, (, boolean, renderAsPercentages, ), {, super, (, ), ;, this, ., renderAsPercentages, =]
[), {, super, (, ), ;, this, ., renderAsPercentages, =, renderAsPercentages, ;, }, public, boolean, getRenderAsPercentages, (, ), {, return]
[), {, super, (, ), ;, this, ., renderAsPercentages, =, renderAsPercentages, ;, }, public, boolean, getRenderAsPercentages, (, ), {, return]
[public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {]
[public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {]
[), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {, this, ., renderAsPercentages, =]
[return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {, this, ., renderAsPercentages, =, asPercentages, ;]
[), {, this, ., renderAsPercentages, =, asPercentages, ;, fireChangeEvent, (, ), ;, }, public, int, getPassCount, (, ), {, return]
[public, int, getPassCount, (, ), {, return, 2, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (]
[public, int, getPassCount, (, ), {, return, 2, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (]
[return, 2, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, this, ., renderAsPercentages, ), {, return]
[}, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, this, ., renderAsPercentages, ), {, return, new, Range, (]
[Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,]
[if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return]
[if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return]
[renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (]
[,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, Shape, entityArea, =]
[row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, Shape, entityArea, =, null, ;, EntityCollection, entities, =]
[row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, Shape, entityArea, =, null, ;, EntityCollection, entities, =]
[pass, ), {, Shape, entityArea, =, null, ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, double, y1, =]
[=, null, ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, double, y1, =, 0.0, ;, Number, n, =]
[=, null, ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, double, y1, =, 0.0, ;, Number, n, =]
[entities, =, state, ., getEntityCollection, (, ), ;, double, y1, =, 0.0, ;, Number, n, =, dataset, ., getValue, (]
[state, ., getEntityCollection, (, ), ;, double, y1, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, row, ,]
[;, double, y1, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[;, double, y1, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[y1, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, n, !=]
[;, Number, n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, n, !=, null, ), {]
[n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, n, !=, null, ), {, y1, =]
[n, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, n, !=, null, ), {, y1, =]
[(, n, !=, null, ), {, y1, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack1, =]
[!=, null, ), {, y1, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack1, =, getStackValues, (]
[), {, y1, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack1, =, getStackValues, (, dataset, ,]
[y1, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack1, =, getStackValues, (, dataset, ,, row, ,]
[), ;, }, double, [, ], stack1, =, getStackValues, (, dataset, ,, row, ,, column, ), ;, double, xx1, =]
[), ;, }, double, [, ], stack1, =, getStackValues, (, dataset, ,, row, ,, column, ), ;, double, xx1, =]
[[, ], stack1, =, getStackValues, (, dataset, ,, row, ,, column, ), ;, double, xx1, =, domainAxis, ., getCategoryMiddle, (]
[stack1, =, getStackValues, (, dataset, ,, row, ,, column, ), ;, double, xx1, =, domainAxis, ., getCategoryMiddle, (, column, ,]
[dataset, ,, row, ,, column, ), ;, double, xx1, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,]
[row, ,, column, ), ;, double, xx1, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[row, ,, column, ), ;, double, xx1, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, y0, =]
[column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, y0, =, 0.0, ;]
[getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, y0, =, 0.0, ;, n, =]
[getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, y0, =, 0.0, ;, n, =]
[dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, y0, =, 0.0, ;, n, =, dataset, ., getValue, (]
[plot, ., getDomainAxisEdge, (, ), ), ;, double, y0, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,]
[plot, ., getDomainAxisEdge, (, ), ), ;, double, y0, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,]
[), ), ;, double, y0, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, ., max, (]
[), ), ;, double, y0, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, ., max, (]
[;, double, y0, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, ., max, (, column, -]
[y0, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, ., max, (, column, -, 1, ,]
[dataset, ., getValue, (, row, ,, Math, ., max, (, column, -, 1, ,, 0, ), ), ;, if, (]
[dataset, ., getValue, (, row, ,, Math, ., max, (, column, -, 1, ,, 0, ), ), ;, if, (]
[getValue, (, row, ,, Math, ., max, (, column, -, 1, ,, 0, ), ), ;, if, (, n, !=]
[,, Math, ., max, (, column, -, 1, ,, 0, ), ), ;, if, (, n, !=, null, ), {]
[., max, (, column, -, 1, ,, 0, ), ), ;, if, (, n, !=, null, ), {, y0, =]
[., max, (, column, -, 1, ,, 0, ), ), ;, if, (, n, !=, null, ), {, y0, =]
[(, n, !=, null, ), {, y0, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack0, =]
[!=, null, ), {, y0, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack0, =, getStackValues, (]
[), {, y0, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack0, =, getStackValues, (, dataset, ,]
[y0, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack0, =, getStackValues, (, dataset, ,, row, ,]
[y0, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack0, =, getStackValues, (, dataset, ,, row, ,]
[doubleValue, (, ), ;, }, double, [, ], stack0, =, getStackValues, (, dataset, ,, row, ,, Math, ., max, (]
[doubleValue, (, ), ;, }, double, [, ], stack0, =, getStackValues, (, dataset, ,, row, ,, Math, ., max, (]
[), ;, }, double, [, ], stack0, =, getStackValues, (, dataset, ,, row, ,, Math, ., max, (, column, -]
[}, double, [, ], stack0, =, getStackValues, (, dataset, ,, row, ,, Math, ., max, (, column, -, 1, ,]
[(, dataset, ,, row, ,, Math, ., max, (, column, -, 1, ,, 0, ), ), ;, double, xx0, =]
[(, dataset, ,, row, ,, Math, ., max, (, column, -, 1, ,, 0, ), ), ;, double, xx0, =]
[,, Math, ., max, (, column, -, 1, ,, 0, ), ), ;, double, xx0, =, domainAxis, ., getCategoryStart, (]
[., max, (, column, -, 1, ,, 0, ), ), ;, double, xx0, =, domainAxis, ., getCategoryStart, (, column, ,]
[-, 1, ,, 0, ), ), ;, double, xx0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,]
[,, 0, ), ), ;, double, xx0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[,, 0, ), ), ;, double, xx0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, itemCount, =]
[getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, itemCount, =]
[,, plot, ., getDomainAxisEdge, (, ), ), ;, int, itemCount, =, dataset, ., getColumnCount, (, ), ;, double, y2, =]
[., getDomainAxisEdge, (, ), ), ;, int, itemCount, =, dataset, ., getColumnCount, (, ), ;, double, y2, =, 0.0, ;]
[(, ), ), ;, int, itemCount, =, dataset, ., getColumnCount, (, ), ;, double, y2, =, 0.0, ;, n, =]
[(, ), ), ;, int, itemCount, =, dataset, ., getColumnCount, (, ), ;, double, y2, =, 0.0, ;, n, =]
[int, itemCount, =, dataset, ., getColumnCount, (, ), ;, double, y2, =, 0.0, ;, n, =, dataset, ., getValue, (]
[=, dataset, ., getColumnCount, (, ), ;, double, y2, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,]
[=, dataset, ., getColumnCount, (, ), ;, double, y2, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,]
[(, ), ;, double, y2, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, ., min, (]
[(, ), ;, double, y2, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, ., min, (]
[;, double, y2, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, ., min, (, column, +]
[y2, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, ., min, (, column, +, 1, ,]
[y2, =, 0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, ., min, (, column, +, 1, ,]
[0.0, ;, n, =, dataset, ., getValue, (, row, ,, Math, ., min, (, column, +, 1, ,, itemCount, -]
[getValue, (, row, ,, Math, ., min, (, column, +, 1, ,, itemCount, -, 1, ), ), ;, if, (]
[getValue, (, row, ,, Math, ., min, (, column, +, 1, ,, itemCount, -, 1, ), ), ;, if, (]
[row, ,, Math, ., min, (, column, +, 1, ,, itemCount, -, 1, ), ), ;, if, (, n, !=]
[., min, (, column, +, 1, ,, itemCount, -, 1, ), ), ;, if, (, n, !=, null, ), {]
[(, column, +, 1, ,, itemCount, -, 1, ), ), ;, if, (, n, !=, null, ), {, y2, =]
[(, column, +, 1, ,, itemCount, -, 1, ), ), ;, if, (, n, !=, null, ), {, y2, =]
[(, n, !=, null, ), {, y2, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack2, =]
[!=, null, ), {, y2, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack2, =, getStackValues, (]
[), {, y2, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack2, =, getStackValues, (, dataset, ,]
[y2, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack2, =, getStackValues, (, dataset, ,, row, ,]
[y2, =, n, ., doubleValue, (, ), ;, }, double, [, ], stack2, =, getStackValues, (, dataset, ,, row, ,]
[doubleValue, (, ), ;, }, double, [, ], stack2, =, getStackValues, (, dataset, ,, row, ,, Math, ., min, (]
[doubleValue, (, ), ;, }, double, [, ], stack2, =, getStackValues, (, dataset, ,, row, ,, Math, ., min, (]
[), ;, }, double, [, ], stack2, =, getStackValues, (, dataset, ,, row, ,, Math, ., min, (, column, +]
[}, double, [, ], stack2, =, getStackValues, (, dataset, ,, row, ,, Math, ., min, (, column, +, 1, ,]
[}, double, [, ], stack2, =, getStackValues, (, dataset, ,, row, ,, Math, ., min, (, column, +, 1, ,]
[[, ], stack2, =, getStackValues, (, dataset, ,, row, ,, Math, ., min, (, column, +, 1, ,, itemCount, -]
[,, row, ,, Math, ., min, (, column, +, 1, ,, itemCount, -, 1, ), ), ;, double, xx2, =]
[,, row, ,, Math, ., min, (, column, +, 1, ,, itemCount, -, 1, ), ), ;, double, xx2, =]
[., min, (, column, +, 1, ,, itemCount, -, 1, ), ), ;, double, xx2, =, domainAxis, ., getCategoryEnd, (]
[(, column, +, 1, ,, itemCount, -, 1, ), ), ;, double, xx2, =, domainAxis, ., getCategoryEnd, (, column, ,]
[,, itemCount, -, 1, ), ), ;, double, xx2, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,]
[-, 1, ), ), ;, double, xx2, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[-, 1, ), ), ;, double, xx2, =, domainAxis, ., getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[getCategoryEnd, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, xxLeft, =]
[(, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, xxLeft, =, xx0, ;, double, xxRight, =]
[getDomainAxisEdge, (, ), ), ;, double, xxLeft, =, xx0, ;, double, xxRight, =, xx2, ;, double, [, ], stackLeft, =]
[), ), ;, double, xxLeft, =, xx0, ;, double, xxRight, =, xx2, ;, double, [, ], stackLeft, =, averageStackValues, (]
[;, double, xxLeft, =, xx0, ;, double, xxRight, =, xx2, ;, double, [, ], stackLeft, =, averageStackValues, (, stack0, ,]
[=, xx2, ;, double, [, ], stackLeft, =, averageStackValues, (, stack0, ,, stack1, ), ;, double, [, ], stackRight, =]
[;, double, [, ], stackLeft, =, averageStackValues, (, stack0, ,, stack1, ), ;, double, [, ], stackRight, =, averageStackValues, (]
[[, ], stackLeft, =, averageStackValues, (, stack0, ,, stack1, ), ;, double, [, ], stackRight, =, averageStackValues, (, stack1, ,]
[stack1, ), ;, double, [, ], stackRight, =, averageStackValues, (, stack1, ,, stack2, ), ;, double, [, ], adjStackLeft, =]
[;, double, [, ], stackRight, =, averageStackValues, (, stack1, ,, stack2, ), ;, double, [, ], adjStackLeft, =, adjustedStackValues, (]
[[, ], stackRight, =, averageStackValues, (, stack1, ,, stack2, ), ;, double, [, ], adjStackLeft, =, adjustedStackValues, (, stack0, ,]
[stack2, ), ;, double, [, ], adjStackLeft, =, adjustedStackValues, (, stack0, ,, stack1, ), ;, double, [, ], adjStackRight, =]
[;, double, [, ], adjStackLeft, =, adjustedStackValues, (, stack0, ,, stack1, ), ;, double, [, ], adjStackRight, =, adjustedStackValues, (]
[[, ], adjStackLeft, =, adjustedStackValues, (, stack0, ,, stack1, ), ;, double, [, ], adjStackRight, =, adjustedStackValues, (, stack1, ,]
[), ;, double, [, ], adjStackRight, =, adjustedStackValues, (, stack1, ,, stack2, ), ;, float, transY1, ;, RectangleEdge, edge1, =]
[), ;, double, [, ], adjStackRight, =, adjustedStackValues, (, stack1, ,, stack2, ), ;, float, transY1, ;, RectangleEdge, edge1, =]
[stack1, ,, stack2, ), ;, float, transY1, ;, RectangleEdge, edge1, =, plot, ., getRangeAxisEdge, (, ), ;, GeneralPath, left, =]
[RectangleEdge, edge1, =, plot, ., getRangeAxisEdge, (, ), ;, GeneralPath, left, =, new, GeneralPath, (, ), ;, GeneralPath, right, =]
[), ;, GeneralPath, left, =, new, GeneralPath, (, ), ;, GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (]
[), ;, GeneralPath, left, =, new, GeneralPath, (, ), ;, GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (]
[GeneralPath, left, =, new, GeneralPath, (, ), ;, GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (, y1, >=]
[new, GeneralPath, (, ), ;, GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (, y1, >=, 0.0, ), {]
[(, ), ;, GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (, y1, >=, 0.0, ), {, transY1, =]
[GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float, )]
[GeneralPath, right, =, new, GeneralPath, (, ), ;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float, )]
[GeneralPath, (, ), ;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[GeneralPath, (, ), ;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[), ;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +]
[), ;, if, (, y1, >=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +]
[if, (, y1, >=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, []
[>=, 0.0, ), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 1, ], ,]
[), {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,]
[), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =]
[valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, )]
[valueToJava2D, (, y1, +, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, )]
[stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[1, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, []
[dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,]
[edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,]
[(, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =]
[rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, )]
[rangeAxis, ., valueToJava2D, (, stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, )]
[stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[stack1, [, 1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[1, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, []
[dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,]
[edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (]
[float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=]
[adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =]
[adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =]
[adjStackLeft, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =]
[[, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (]
[[, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (]
[], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +]
[,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +, y1, ), /]
[), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +]
[), ;, if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +]
[if, (, y0, >=, 0.0, ), {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft, []
[{, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =]
[=, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, )]
[=, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, )]
[y1, ), /, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[/, 2.0, +, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,]
[+, stackLeft, [, 1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,]
[1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;]
[1, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;]
[transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left, ., moveTo, (]
[float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left, ., moveTo, (, (, float, )]
[rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,]
[(, yleft, ,, dataArea, ,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;]
[(, yleft, ,, dataArea, ,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;]
[,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (]
[;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,]
[(, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[(, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (]
[;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,]
[(, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;]
[(, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;]
[,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (]
[;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,]
[(, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;]
[(, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;]
[., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (, ), ;, }, else, {]
[., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (, ), ;, }, else, {]
[float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (, ), ;, }, else, {, left, ., moveTo, (]
[,, transYLeft, ), ;, left, ., closePath, (, ), ;, }, else, {, left, ., moveTo, (, (, float, )]
[), ;, left, ., closePath, (, ), ;, }, else, {, left, ., moveTo, (, (, float, ), xx1, ,]
[., closePath, (, ), ;, }, else, {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[., closePath, (, ), ;, }, else, {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[;, }, else, {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (]
[{, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,]
[(, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;]
[(, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;]
[,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (]
[;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,]
[(, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;]
[(, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;]
[lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =]
[float, ), xxLeft, ,, transStackLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, )]
[float, ), xxLeft, ,, transStackLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, )]
[transStackLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[transStackLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, []
[closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ], ,]
[), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ], ,, dataArea, ,]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (]
[float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=]
[adjStackRight, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =]
[adjStackRight, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =]
[adjStackRight, [, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =]
[[, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (]
[[, 1, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (]
[], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +]
[,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +, y2, ), /]
[), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +, y2, ), /, 2.0, +]
[), ;, if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +, y2, ), /, 2.0, +]
[if, (, y2, >=, 0.0, ), {, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight, []
[{, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =]
[=, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =, (, float, )]
[=, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =, (, float, )]
[y2, ), /, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[/, 2.0, +, stackRight, [, 1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,]
[+, stackRight, [, 1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,]
[1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;]
[1, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;]
[transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right, ., moveTo, (]
[float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right, ., moveTo, (, (, float, )]
[rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,]
[(, yright, ,, dataArea, ,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[(, yright, ,, dataArea, ,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (]
[;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,]
[(, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;]
[(, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;]
[,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (]
[;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,]
[(, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;]
[(, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;]
[,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (]
[;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,]
[(, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;]
[(, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;]
[., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {]
[., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {]
[float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {, right, ., moveTo, (]
[,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {, right, ., moveTo, (, (, float, )]
[), ;, right, ., closePath, (, ), ;, }, else, {, right, ., moveTo, (, (, float, ), xx1, ,]
[., closePath, (, ), ;, }, else, {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[., closePath, (, ), ;, }, else, {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[;, }, else, {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (]
[{, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,]
[(, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;]
[(, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;]
[,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (]
[;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,]
[(, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;]
[(, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;]
[lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }, else, {]
[(, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }, else, {, transY1, =]
[xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, )]
[xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, )]
[;, right, ., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[;, right, ., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +]
[., closePath, (, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +]
[(, ), ;, }, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, []
[}, }, else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 0, ], ,]
[else, {, transY1, =, (, float, ), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 0, ], ,, dataArea, ,]
[), rangeAxis, ., valueToJava2D, (, y1, +, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =]
[valueToJava2D, (, y1, +, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, )]
[valueToJava2D, (, y1, +, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, )]
[stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[0, ], ,, dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, []
[dataArea, ,, edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,]
[edge1, ), ;, float, transStack1, =, (, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,]
[(, float, ), rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =]
[rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, )]
[rangeAxis, ., valueToJava2D, (, stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, )]
[stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[stack1, [, 0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[0, ], ,, dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, []
[dataArea, ,, edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,]
[edge1, ), ;, float, transStackLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (]
[float, ), rangeAxis, ., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=]
[., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {]
[., valueToJava2D, (, adjStackLeft, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {]
[[, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, left, ., moveTo, (]
[,, dataArea, ,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, left, ., moveTo, (, (, float, )]
[,, edge1, ), ;, if, (, y0, >=, 0.0, ), {, left, ., moveTo, (, (, float, ), xx1, ,]
[;, if, (, y0, >=, 0.0, ), {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[;, if, (, y0, >=, 0.0, ), {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[>=, 0.0, ), {, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (]
[{, left, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,]
[(, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;]
[(, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;]
[,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (]
[;, left, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,]
[(, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;]
[(, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;]
[(, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., clone, (, ), ;, }, else, {, double, yleft, =]
[(, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., clone, (, ), ;, }, else, {, double, yleft, =]
[(, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., clone, (, ), ;, }, else, {, double, yleft, =]
[float, ), xxLeft, ,, transStackLeft, ), ;, left, ., clone, (, ), ;, }, else, {, double, yleft, =, (]
[float, ), xxLeft, ,, transStackLeft, ), ;, left, ., clone, (, ), ;, }, else, {, double, yleft, =, (]
[xxLeft, ,, transStackLeft, ), ;, left, ., clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +]
[), ;, left, ., clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +, y1, ), /]
[left, ., clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +]
[left, ., clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +]
[clone, (, ), ;, }, else, {, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft, []
[{, double, yleft, =, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =]
[=, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, )]
[=, (, y0, +, y1, ), /, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, )]
[y1, ), /, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[/, 2.0, +, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,]
[+, stackLeft, [, 0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,]
[0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;]
[0, ], ;, float, transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;]
[transYLeft, =, (, float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left, ., moveTo, (]
[float, ), rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left, ., moveTo, (, (, float, )]
[rangeAxis, ., valueToJava2D, (, yleft, ,, dataArea, ,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,]
[(, yleft, ,, dataArea, ,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;]
[(, yleft, ,, dataArea, ,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;]
[,, edge1, ), ;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (]
[;, left, ., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,]
[(, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[(, float, ), xx1, ,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[,, transY1, ), ;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (]
[;, left, ., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,]
[(, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;]
[(, float, ), xx1, ,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;]
[,, transStack1, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (]
[;, left, ., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,]
[(, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;]
[(, float, ), xxLeft, ,, transStackLeft, ), ;, left, ., lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;]
[lineTo, (, (, float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =]
[float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, )]
[float, ), xxLeft, ,, transYLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, )]
[transYLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[transYLeft, ), ;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[;, left, ., closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, []
[closePath, (, ), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ], ,]
[), ;, }, float, transStackRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (]
[=, (, float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (]
[float, ), rangeAxis, ., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=]
[., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {]
[., valueToJava2D, (, adjStackRight, [, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {]
[[, 0, ], ,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, right, ., moveTo, (]
[,, dataArea, ,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, right, ., moveTo, (, (, float, )]
[,, edge1, ), ;, if, (, y2, >=, 0.0, ), {, right, ., moveTo, (, (, float, ), xx1, ,]
[;, if, (, y2, >=, 0.0, ), {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[;, if, (, y2, >=, 0.0, ), {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[>=, 0.0, ), {, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (]
[{, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,]
[(, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;]
[(, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;]
[,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (]
[;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,]
[(, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;]
[(, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;]
[(, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {, double, yright, =]
[(, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {, double, yright, =]
[(, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {, double, yright, =]
[float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {, double, yright, =, (]
[float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {, double, yright, =, (]
[xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +]
[), ;, right, ., closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +, y2, ), /]
[right, ., closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +, y2, ), /, 2.0, +]
[right, ., closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +, y2, ), /, 2.0, +]
[closePath, (, ), ;, }, else, {, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight, []
[{, double, yright, =, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =]
[=, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =, (, float, )]
[=, (, y1, +, y2, ), /, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =, (, float, )]
[y2, ), /, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (]
[/, 2.0, +, stackRight, [, 0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,]
[+, stackRight, [, 0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,]
[0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;]
[0, ], ;, float, transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;]
[transYRight, =, (, float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right, ., moveTo, (]
[float, ), rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right, ., moveTo, (, (, float, )]
[rangeAxis, ., valueToJava2D, (, yright, ,, dataArea, ,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,]
[(, yright, ,, dataArea, ,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[(, yright, ,, dataArea, ,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;]
[,, edge1, ), ;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (]
[;, right, ., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, )]
[., moveTo, (, (, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,]
[(, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;]
[(, float, ), xx1, ,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;]
[,, transStack1, ), ;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (]
[;, right, ., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,]
[(, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;]
[(, float, ), xx1, ,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;]
[,, transY1, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (]
[;, right, ., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float, )]
[., lineTo, (, (, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,]
[(, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;]
[(, float, ), xxRight, ,, transYRight, ), ;, right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;]
[right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }]
[right, ., lineTo, (, (, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }]
[(, float, ), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }, g2, ., setPaint, (]
[), xxRight, ,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }, g2, ., setPaint, (, getItemPaint, (]
[,, transStackRight, ), ;, right, ., closePath, (, ), ;, }, }, g2, ., setPaint, (, getItemPaint, (, row, ,]
[), ;, right, ., closePath, (, ), ;, }, }, g2, ., setPaint, (, getItemPaint, (, row, ,, column, ,]
[closePath, (, ), ;, }, }, g2, ., setPaint, (, getItemPaint, (, row, ,, column, ,, selected, ), ), ;]
[closePath, (, ), ;, }, }, g2, ., setPaint, (, getItemPaint, (, row, ,, column, ,, selected, ), ), ;]
[}, }, g2, ., setPaint, (, getItemPaint, (, row, ,, column, ,, selected, ), ), ;, g2, ., setStroke, (]
[g2, ., setPaint, (, getItemPaint, (, row, ,, column, ,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (]
[setPaint, (, getItemPaint, (, row, ,, column, ,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (, row, ,]
[getItemPaint, (, row, ,, column, ,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (, row, ,, column, ,]
[), ), ;, g2, ., setStroke, (, getItemStroke, (, row, ,, column, ,, selected, ), ), ;, Paint, itemPaint, =]
[;, g2, ., setStroke, (, getItemStroke, (, row, ,, column, ,, selected, ), ), ;, Paint, itemPaint, =, getItemPaint, (]
[., setStroke, (, getItemStroke, (, row, ,, column, ,, selected, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,]
[(, getItemStroke, (, row, ,, column, ,, selected, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,]
[column, ,, selected, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, if, (]
[column, ,, selected, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, if, (]
[selected, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, if, (, pass, ==]
[;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, if, (, pass, ==, 0, ), {]
[;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, if, (, pass, ==, 0, ), {]
[getItemPaint, (, row, ,, column, ,, selected, ), ;, if, (, pass, ==, 0, ), {, g2, ., setPaint, (]
[,, column, ,, selected, ), ;, if, (, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;]
[,, column, ,, selected, ), ;, if, (, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;]
[), ;, if, (, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (]
[(, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, left, ), ;]
[(, pass, ==, 0, ), {, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, left, ), ;]
[), {, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, left, ), ;, g2, ., fill, (]
[itemPaint, ), ;, g2, ., fill, (, left, ), ;, g2, ., fill, (, right, ), ;, }, if, (]
[itemPaint, ), ;, g2, ., fill, (, left, ), ;, g2, ., fill, (, right, ), ;, }, if, (]
[;, g2, ., fill, (, left, ), ;, g2, ., fill, (, right, ), ;, }, if, (, entities, !=]
[), ;, g2, ., fill, (, right, ), ;, }, if, (, entities, !=, null, ), {, GeneralPath, gp, =]
[., fill, (, right, ), ;, }, if, (, entities, !=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (]
[right, ), ;, }, if, (, entities, !=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;]
[right, ), ;, }, if, (, entities, !=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;]
[if, (, entities, !=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;, gp, ., append, (]
[entities, !=, null, ), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;, gp, ., append, (, right, ,]
[), {, GeneralPath, gp, =, new, GeneralPath, (, left, ), ;, gp, ., append, (, right, ,, false, ), ;]
[GeneralPath, gp, =, new, GeneralPath, (, left, ), ;, gp, ., append, (, right, ,, false, ), ;, entityArea, =]
[=, new, GeneralPath, (, left, ), ;, gp, ., append, (, right, ,, false, ), ;, entityArea, =, gp, ;]
[GeneralPath, (, left, ), ;, gp, ., append, (, right, ,, false, ), ;, entityArea, =, gp, ;, addEntity, (]
[left, ), ;, gp, ., append, (, right, ,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,]
[;, gp, ., append, (, right, ,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,]
[., append, (, right, ,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,, dataset, ,]
[(, right, ,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,, dataset, ,, row, ,]
[,, false, ), ;, entityArea, =, gp, ;, addEntity, (, entities, ,, entityArea, ,, dataset, ,, row, ,, column, ,]
[;, }, }, protected, double, getPreviousHeight, (, CategoryDataset, dataset, ,, int, series, ,, int, category, ), {, double, result, =]
[dataset, ,, int, series, ,, int, category, ), {, double, result, =, 0.0, ;, Number, n, ;, double, total, =]
[,, int, category, ), {, double, result, =, 0.0, ;, Number, n, ;, double, total, =, 0.0, ;, if, (]
[,, int, category, ), {, double, result, =, 0.0, ;, Number, n, ;, double, total, =, 0.0, ;, if, (]
[double, result, =, 0.0, ;, Number, n, ;, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {]
[=, 0.0, ;, Number, n, ;, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =]
[=, 0.0, ;, Number, n, ;, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =]
[n, ;, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =, DataUtilities, ., calculateColumnTotal, (]
[double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,]
[renderAsPercentages, ), {, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, category, ), ;, }, for, (, int, i, =]
[{, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, category, ), ;, }, for, (, int, i, =, 0, ;]
[{, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, category, ), ;, }, for, (, int, i, =, 0, ;]
[=, DataUtilities, ., calculateColumnTotal, (, dataset, ,, category, ), ;, }, for, (, int, i, =, 0, ;, i, <]
[., calculateColumnTotal, (, dataset, ,, category, ), ;, }, for, (, int, i, =, 0, ;, i, <, series, ;]
[., calculateColumnTotal, (, dataset, ,, category, ), ;, }, for, (, int, i, =, 0, ;, i, <, series, ;]
[,, category, ), ;, }, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {]
[), ;, }, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, n, =]
[), ;, }, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, n, =]
[(, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, n, =, dataset, ., getValue, (]
[i, =, 0, ;, i, <, series, ;, i, ++, ), {, n, =, dataset, ., getValue, (, i, ,]
[<, series, ;, i, ++, ), {, n, =, dataset, ., getValue, (, i, ,, category, ), ;, if, (]
[<, series, ;, i, ++, ), {, n, =, dataset, ., getValue, (, i, ,, category, ), ;, if, (]
[;, i, ++, ), {, n, =, dataset, ., getValue, (, i, ,, category, ), ;, if, (, n, !=]
[=, dataset, ., getValue, (, i, ,, category, ), ;, if, (, n, !=, null, ), {, double, v, =]
[=, dataset, ., getValue, (, i, ,, category, ), ;, if, (, n, !=, null, ), {, double, v, =]
[), ;, if, (, n, !=, null, ), {, double, v, =, n, ., doubleValue, (, ), ;, if, (]
[), ;, if, (, n, !=, null, ), {, double, v, =, n, ., doubleValue, (, ), ;, if, (]
[!=, null, ), {, double, v, =, n, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {]
[), {, double, v, =, n, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, v, =]
[), {, double, v, =, n, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, v, =]
[double, v, =, n, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, v, =, v, /]
[n, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, v, =, v, /, total, ;, }]
[doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, v, =, v, /, total, ;, }, result, +=]
[(, this, ., renderAsPercentages, ), {, v, =, v, /, total, ;, }, result, +=, v, ;, }, }, return]
[double, [, ], getStackValues, (, CategoryDataset, dataset, ,, int, series, ,, int, index, ), {, double, [, ], result, =]
[getStackValues, (, CategoryDataset, dataset, ,, int, series, ,, int, index, ), {, double, [, ], result, =, new, double, []
[int, index, ), {, double, [, ], result, =, new, double, [, 2, ], ;, for, (, int, i, =]
[), {, double, [, ], result, =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;]
[), {, double, [, ], result, =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;]
[double, [, ], result, =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;, i, <]
[], result, =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;, i, <, series, ;]
[], result, =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;, i, <, series, ;]
[2, ], ;, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, if, (]
[;, for, (, int, i, =, 0, ;, i, <, series, ;, i, ++, ), {, if, (, isSeriesVisible, (]
[;, i, <, series, ;, i, ++, ), {, if, (, isSeriesVisible, (, i, ), ), {, double, v, =]
[i, ++, ), {, if, (, isSeriesVisible, (, i, ), ), {, double, v, =, 0.0, ;, Number, n, =]
[i, ++, ), {, if, (, isSeriesVisible, (, i, ), ), {, double, v, =, 0.0, ;, Number, n, =]
[if, (, isSeriesVisible, (, i, ), ), {, double, v, =, 0.0, ;, Number, n, =, dataset, ., getValue, (]
[isSeriesVisible, (, i, ), ), {, double, v, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, i, ,]
[{, double, v, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, i, ,, index, ), ;, if, (]
[{, double, v, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, i, ,, index, ), ;, if, (]
[v, =, 0.0, ;, Number, n, =, dataset, ., getValue, (, i, ,, index, ), ;, if, (, n, !=]
[;, Number, n, =, dataset, ., getValue, (, i, ,, index, ), ;, if, (, n, !=, null, ), {]
[n, =, dataset, ., getValue, (, i, ,, index, ), ;, if, (, n, !=, null, ), {, v, =]
[n, =, dataset, ., getValue, (, i, ,, index, ), ;, if, (, n, !=, null, ), {, v, =]
[), ;, if, (, n, !=, null, ), {, v, =, n, ., doubleValue, (, ), ;, }, if, (]
[;, if, (, n, !=, null, ), {, v, =, n, ., doubleValue, (, ), ;, }, if, (, !]
[;, if, (, n, !=, null, ), {, v, =, n, ., doubleValue, (, ), ;, }, if, (, !]
[!=, null, ), {, v, =, n, ., doubleValue, (, ), ;, }, if, (, !, Double, ., isNaN, (]
[n, ., doubleValue, (, ), ;, }, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (]
[n, ., doubleValue, (, ), ;, }, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (]
[doubleValue, (, ), ;, }, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, v, >=]
[;, }, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, v, >=, 0.0, ), {]
[;, }, if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, v, >=, 0.0, ), {]
[if, (, !, Double, ., isNaN, (, v, ), ), {, if, (, v, >=, 0.0, ), {, result, []
[Double, ., isNaN, (, v, ), ), {, if, (, v, >=, 0.0, ), {, result, [, 1, ], +=]
[), ), {, if, (, v, >=, 0.0, ), {, result, [, 1, ], +=, v, ;, }, else, {]
[), ), {, if, (, v, >=, 0.0, ), {, result, [, 1, ], +=, v, ;, }, else, {]
[{, if, (, v, >=, 0.0, ), {, result, [, 1, ], +=, v, ;, }, else, {, result, []
[v, >=, 0.0, ), {, result, [, 1, ], +=, v, ;, }, else, {, result, [, 0, ], +=]
[1, ], +=, v, ;, }, else, {, result, [, 0, ], +=, v, ;, }, }, }, }, return]
[[, ], averageStackValues, (, double, [, ], stack1, ,, double, [, ], stack2, ), {, double, [, ], result, =]
[(, double, [, ], stack1, ,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, []
[], stack1, ,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;]
[], stack1, ,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;]
[,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, result, []
[], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 0, ], =]
[], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 0, ], =]
[stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 0, ], =, (]
[stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 0, ], =, (]
[stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 0, ], =, (]
[{, double, [, ], result, =, new, double, [, 2, ], ;, result, [, 0, ], =, (, stack1, []
[], result, =, new, double, [, 2, ], ;, result, [, 0, ], =, (, stack1, [, 0, ], +]
[], result, =, new, double, [, 2, ], ;, result, [, 0, ], =, (, stack1, [, 0, ], +]
[=, new, double, [, 2, ], ;, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, []
[2, ], ;, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /]
[;, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;]
[;, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;]
[[, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, []
[=, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =]
[=, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =]
[(, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (]
[(, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (]
[(, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (]
[[, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (, stack1, []
[+, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +]
[+, stack2, [, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +]
[[, 0, ], ), /, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, []
[/, 2.0, ;, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /]
[result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;, return]
[[, ], adjustedStackValues, (, double, [, ], stack1, ,, double, [, ], stack2, ), {, double, [, ], result, =]
[(, double, [, ], stack1, ,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, []
[,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, if, (]
[,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, if, (]
[,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, if, (]
[,, double, [, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, if, (]
[[, ], stack2, ), {, double, [, ], result, =, new, double, [, 2, ], ;, if, (, stack1, []
[), {, double, [, ], result, =, new, double, [, 2, ], ;, if, (, stack1, [, 0, ], ==]
[double, [, ], result, =, new, double, [, 2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||]
[double, [, ], result, =, new, double, [, 2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||]
[double, [, ], result, =, new, double, [, 2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||]
[], result, =, new, double, [, 2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||, stack2, []
[new, double, [, 2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==]
[2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==, 0.0, ), {]
[2, ], ;, if, (, stack1, [, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==, 0.0, ), {]
[;, if, (, stack1, [, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==, 0.0, ), {, result, []
[stack1, [, 0, ], ==, 0.0, ||, stack2, [, 0, ], ==, 0.0, ), {, result, [, 0, ], =]
[0.0, ||, stack2, [, 0, ], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {]
[0.0, ||, stack2, [, 0, ], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {]
[stack2, [, 0, ], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, []
[], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =]
[], ==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =]
[==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (]
[==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (]
[==, 0.0, ), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (]
[), {, result, [, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, []
[[, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, [, 0, ], +]
[[, 0, ], =, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, [, 0, ], +]
[], =, 0.0, ;, }, else, {, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, []
[}, else, {, result, [, 0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /]
[0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (]
[0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (]
[0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (]
[0, ], =, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (]
[=, (, stack1, [, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, []
[[, 0, ], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==]
[], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||]
[], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||]
[], +, stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||]
[stack2, [, 0, ], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, []
[], ), /, 2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==]
[2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0, ), {]
[2.0, ;, }, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0, ), {]
[}, if, (, stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0, ), {, result, []
[stack1, [, 1, ], ==, 0.0, ||, stack2, [, 1, ], ==, 0.0, ), {, result, [, 1, ], =]
[0.0, ||, stack2, [, 1, ], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {]
[0.0, ||, stack2, [, 1, ], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {]
[stack2, [, 1, ], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, []
[], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =]
[], ==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =]
[==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (]
[==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (]
[==, 0.0, ), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (]
[), {, result, [, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, []
[[, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, [, 1, ], +]
[[, 1, ], =, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, [, 1, ], +]
[], =, 0.0, ;, }, else, {, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, []
[}, else, {, result, [, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /]
[[, 1, ], =, (, stack1, [, 1, ], +, stack2, [, 1, ], ), /, 2.0, ;, }, return]
[], ), /, 2.0, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[], ), /, 2.0, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[/, 2.0, ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, StackedAreaRenderer, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, StackedAreaRenderer, ), ), {, return, false, ;, }, StackedAreaRenderer, that, =]
[if, (, !, (, obj, instanceof, StackedAreaRenderer, ), ), {, return, false, ;, }, StackedAreaRenderer, that, =, (, StackedAreaRenderer, )]
[obj, instanceof, StackedAreaRenderer, ), ), {, return, false, ;, }, StackedAreaRenderer, that, =, (, StackedAreaRenderer, ), obj, ;, if, (]
[obj, instanceof, StackedAreaRenderer, ), ), {, return, false, ;, }, StackedAreaRenderer, that, =, (, StackedAreaRenderer, ), obj, ;, if, (]
[obj, instanceof, StackedAreaRenderer, ), ), {, return, false, ;, }, StackedAreaRenderer, that, =, (, StackedAreaRenderer, ), obj, ;, if, (]
[), {, return, false, ;, }, StackedAreaRenderer, that, =, (, StackedAreaRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=]
[), {, return, false, ;, }, StackedAreaRenderer, that, =, (, StackedAreaRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=]
[StackedAreaRenderer, that, =, (, StackedAreaRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return]
[StackedAreaRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return]
[StackedAreaRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return]
[if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals, (]
