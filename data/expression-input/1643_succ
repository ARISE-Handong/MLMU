[;, public, StandardTickUnitSource, (, ), {, super, (, ), ;, }, public, TickUnit, getLargerTickUnit, (, TickUnit, unit, ), {, double]
[., log, (, 10.0, ), ;, public, StandardTickUnitSource, (, ), {, super, (, ), ;, }, public, TickUnit, getLargerTickUnit, (]
[), ;, public, StandardTickUnitSource, (, ), {, super, (, ), ;, }, public, TickUnit, getLargerTickUnit, (, TickUnit, unit, ), {]
[;, double, log, =, Math, ., log, (, x, ), /, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (]
[., getSize, (, ), ;, double, log, =, Math, ., log, (, x, ), /, LOG_10_VALUE, ;, double, higher, =]
[;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10]
[/, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow]
[., log, (, x, ), /, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new]
[), /, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, .]
[;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10]
[;, return, new, NumberTickUnit, (, Math, ., pow, (, 10, ,, higher, ), ,, new, DecimalFormat, (, "0.0E0", ), )]
[., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10, ,, higher, ), ,, new]
[), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10, ,, higher, ), ,, new, DecimalFormat, (, "0.0E0", )]
[;, }, public, TickUnit, getCeilingTickUnit, (, TickUnit, unit, ), {, return, getLargerTickUnit, (, unit, ), ;, }, public, TickUnit, getCeilingTickUnit]
[,, new, DecimalFormat, (, "0.0E0", ), ), ;, }, public, TickUnit, getCeilingTickUnit, (, TickUnit, unit, ), {, return, getLargerTickUnit, (]
[., pow, (, 10, ,, higher, ), ,, new, DecimalFormat, (, "0.0E0", ), ), ;, }, public, TickUnit, getCeilingTickUnit, (]
[,, higher, ), ,, new, DecimalFormat, (, "0.0E0", ), ), ;, }, public, TickUnit, getCeilingTickUnit, (, TickUnit, unit, ), {]
[), ,, new, DecimalFormat, (, "0.0E0", ), ), ;, }, public, TickUnit, getCeilingTickUnit, (, TickUnit, unit, ), {, return, getLargerTickUnit]
[), ;, }, public, TickUnit, getCeilingTickUnit, (, TickUnit, unit, ), {, return, getLargerTickUnit, (, unit, ), ;, }, public, TickUnit]
[), ), ;, }, public, TickUnit, getCeilingTickUnit, (, TickUnit, unit, ), {, return, getLargerTickUnit, (, unit, ), ;, }, public]
[;, }, public, TickUnit, getCeilingTickUnit, (, double, size, ), {, double, log, =, Math, ., log, (, size, ), /]
[), ;, }, public, TickUnit, getCeilingTickUnit, (, double, size, ), {, double, log, =, Math, ., log, (, size, )]
[;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10]
[/, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow]
[., log, (, size, ), /, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new]
[), /, LOG_10_VALUE, ;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, .]
[;, double, higher, =, Math, ., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10]
[;, return, new, NumberTickUnit, (, Math, ., pow, (, 10, ,, higher, ), ,, new, DecimalFormat, (, "0.0E0", ), )]
[., ceil, (, log, ), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10, ,, higher, ), ,, new]
[), ;, return, new, NumberTickUnit, (, Math, ., pow, (, 10, ,, higher, ), ,, new, DecimalFormat, (, "0.0E0", )]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[,, new, DecimalFormat, (, "0.0E0", ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj]
[., pow, (, 10, ,, higher, ), ,, new, DecimalFormat, (, "0.0E0", ), ), ;, }, public, boolean, equals, (]
[,, higher, ), ,, new, DecimalFormat, (, "0.0E0", ), ), ;, }, public, boolean, equals, (, Object, obj, ), {]
[), ,, new, DecimalFormat, (, "0.0E0", ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, return, (, obj, instanceof, StandardTickUnitSource, ), ;, }, public, int, hashCode, (, ), {]
[==, this, ), {, return, true, ;, }, return, (, obj, instanceof, StandardTickUnitSource, ), ;, }, public, int, hashCode, (]
[), {, return, true, ;, }, return, (, obj, instanceof, StandardTickUnitSource, ), ;, }, public, int, hashCode, (, ), {]
[;, }, return, (, obj, instanceof, StandardTickUnitSource, ), ;, }, public, int, hashCode, (, ), {, return, 0, ;, }]
[;, }, public, int, hashCode, (, ), {, return, 0, ;, }, }]
[), ;, }, public, int, hashCode, (, ), {, return, 0, ;, }, }]
[instanceof, StandardTickUnitSource, ), ;, }, public, int, hashCode, (, ), {, return, 0, ;, }, }]
[;, }, }]
