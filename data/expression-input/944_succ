[;, public, interface, Generator, {, public, String, getCode, (, ), ;, }, private, static, final, int, SOURCE_EXCERPT_REGION_LENGTH, =, 5, ;]
[;, private, final, String, fileName, ;, private, boolean, isExternFile, =, false, ;, private, String, originalPath, =, null, ;, private, int]
[;, private, String, originalPath, =, null, ;, private, int, [, ], lineOffsets, =, null, ;, private, String, code, =, null]
[;, private, int, [, ], lineOffsets, =, null, ;, private, String, code, =, null, ;, public, SourceFile, (, String, fileName]
[;, private, String, code, =, null, ;, public, SourceFile, (, String, fileName, ), {, if, (, fileName, ==, null, ||]
[;, public, SourceFile, (, String, fileName, ), {, if, (, fileName, ==, null, ||, fileName, ., isEmpty, (, ), )]
[), {, throw, new, IllegalArgumentException, (, "a source must have a name", ), ;, }, this, ., fileName, =, fileName, ;, }, @, Override, public]
[||, fileName, ., isEmpty, (, ), ), {, throw, new, IllegalArgumentException, (, "a source must have a name", ), ;, }, this, ., fileName, =]
[==, null, ||, fileName, ., isEmpty, (, ), ), {, throw, new, IllegalArgumentException, (, "a source must have a name", ), ;, }, this, .]
[||, fileName, ., isEmpty, (, ), ), {, throw, new, IllegalArgumentException, (, "a source must have a name", ), ;, }, this, ., fileName, =]
[), {, throw, new, IllegalArgumentException, (, "a source must have a name", ), ;, }, this, ., fileName, =, fileName, ;, }, @, Override, public]
[., isEmpty, (, ), ), {, throw, new, IllegalArgumentException, (, "a source must have a name", ), ;, }, this, ., fileName, =, fileName, ;]
[;, }, this, ., fileName, =, fileName, ;, }, @, Override, public, int, getLineOffset, (, int, lineno, ), {, findLineOffsets]
[), ;, }, this, ., fileName, =, fileName, ;, }, @, Override, public, int, getLineOffset, (, int, lineno, ), {]
[=, fileName, ;, }, @, Override, public, int, getLineOffset, (, int, lineno, ), {, findLineOffsets, (, ), ;, if, (]
[., fileName, =, fileName, ;, }, @, Override, public, int, getLineOffset, (, int, lineno, ), {, findLineOffsets, (, ), ;]
[;, }, @, Override, public, int, getLineOffset, (, int, lineno, ), {, findLineOffsets, (, ), ;, if, (, lineno, <]
[;, if, (, lineno, <, 1, ||, lineno, >, lineOffsets, ., length, ), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +]
[), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +, lineno, ), ;, }, return, lineOffsets]
[||, lineno, >, lineOffsets, ., length, ), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +]
[<, 1, ||, lineno, >, lineOffsets, ., length, ), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +]
[||, lineno, >, lineOffsets, ., length, ), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +]
[), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +, lineno, ), ;, }, return, lineOffsets]
[>, lineOffsets, ., length, ), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +, lineno, )]
[), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +, lineno, ), ;, }, return, lineOffsets]
[., length, ), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +, lineno, ), ;, }]
[;, }, return, lineOffsets, [, lineno, -, 1, ], ;, }, int, getNumLines, (, ), {, findLineOffsets, (, ), ;]
[), ;, }, return, lineOffsets, [, lineno, -, 1, ], ;, }, int, getNumLines, (, ), {, findLineOffsets, (, )]
[+, lineno, ), ;, }, return, lineOffsets, [, lineno, -, 1, ], ;, }, int, getNumLines, (, ), {, findLineOffsets]
[+, "\nActual: ", +, lineno, ), ;, }, return, lineOffsets, [, lineno, -, 1, ], ;, }, int, getNumLines, (, )]
[+, lineOffsets, ., length, +, "\nActual: ", +, lineno, ), ;, }, return, lineOffsets, [, lineno, -, 1, ], ;, }]
[+, "\nActual: ", +, lineno, ), ;, }, return, lineOffsets, [, lineno, -, 1, ], ;, }, int, getNumLines, (, )]
[., length, +, "\nActual: ", +, lineno, ), ;, }, return, lineOffsets, [, lineno, -, 1, ], ;, }, int, getNumLines]
[+, lineno, ), ;, }, return, lineOffsets, [, lineno, -, 1, ], ;, }, int, getNumLines, (, ), {, findLineOffsets]
[), ;, }, return, lineOffsets, [, lineno, -, 1, ], ;, }, int, getNumLines, (, ), {, findLineOffsets, (, )]
[;, }, int, getNumLines, (, ), {, findLineOffsets, (, ), ;, return, lineOffsets, ., length, ;, }, private, void, findLineOffsets]
[[, lineno, -, 1, ], ;, }, int, getNumLines, (, ), {, findLineOffsets, (, ), ;, return, lineOffsets, ., length]
[], ;, }, int, getNumLines, (, ), {, findLineOffsets, (, ), ;, return, lineOffsets, ., length, ;, }, private, void]
[-, 1, ], ;, }, int, getNumLines, (, ), {, findLineOffsets, (, ), ;, return, lineOffsets, ., length, ;, }]
[], ;, }, int, getNumLines, (, ), {, findLineOffsets, (, ), ;, return, lineOffsets, ., length, ;, }, private, void]
[;, return, lineOffsets, ., length, ;, }, private, void, findLineOffsets, (, ), {, if, (, lineOffsets, !=, null, ), {]
[;, }, private, void, findLineOffsets, (, ), {, if, (, lineOffsets, !=, null, ), {, return, ;, }, try, {]
[., length, ;, }, private, void, findLineOffsets, (, ), {, if, (, lineOffsets, !=, null, ), {, return, ;, }]
[), {, return, ;, }, try, {, String, [, ], sourceLines, =, getCode, (, ), ., split, (, "\n", )]
[!=, null, ), {, return, ;, }, try, {, String, [, ], sourceLines, =, getCode, (, ), ., split, (]
[), {, return, ;, }, try, {, String, [, ], sourceLines, =, getCode, (, ), ., split, (, "\n", )]
[;, lineOffsets, =, new, int, [, sourceLines, ., length, ], ;, for, (, int, ii, =, 1, ;, ii, <]
[., split, (, "\n", ), ;, lineOffsets, =, new, int, [, sourceLines, ., length, ], ;, for, (, int, ii]
[), ;, lineOffsets, =, new, int, [, sourceLines, ., length, ], ;, for, (, int, ii, =, 1, ;, ii]
[=, new, int, [, sourceLines, ., length, ], ;, for, (, int, ii, =, 1, ;, ii, <, sourceLines, .]
[;, for, (, int, ii, =, 1, ;, ii, <, sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, []
[], ;, for, (, int, ii, =, 1, ;, ii, <, sourceLines, ., length, ;, ++, ii, ), {, lineOffsets]
[., length, ], ;, for, (, int, ii, =, 1, ;, ii, <, sourceLines, ., length, ;, ++, ii, )]
[;, ii, <, sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -]
[;, ++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -, 1, ], +, sourceLines, [, ii]
[<, sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -, 1, ]]
[;, ++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -, 1, ], +, sourceLines, [, ii]
[., length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -, 1, ], +, sourceLines]
[), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -, 1, ], +, sourceLines, [, ii, -, 1, ]]
[), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -, 1, ], +, sourceLines, [, ii, -, 1, ]]
[=, lineOffsets, [, ii, -, 1, ], +, sourceLines, [, ii, -, 1, ], ., length, (, ), +, 1]
[[, ii, ], =, lineOffsets, [, ii, -, 1, ], +, sourceLines, [, ii, -, 1, ], ., length, (]
[], =, lineOffsets, [, ii, -, 1, ], +, sourceLines, [, ii, -, 1, ], ., length, (, ), +]
[;, }, }, catch, (, IOException, e, ), {, lineOffsets, =, new, int, [, 1, ], ;, lineOffsets, [, 0]
[+, 1, ;, }, }, catch, (, IOException, e, ), {, lineOffsets, =, new, int, [, 1, ], ;, lineOffsets]
[+, sourceLines, [, ii, -, 1, ], ., length, (, ), +, 1, ;, }, }, catch, (, IOException, e]
[[, ii, -, 1, ], +, sourceLines, [, ii, -, 1, ], ., length, (, ), +, 1, ;, }]
[], +, sourceLines, [, ii, -, 1, ], ., length, (, ), +, 1, ;, }, }, catch, (, IOException]
[-, 1, ], +, sourceLines, [, ii, -, 1, ], ., length, (, ), +, 1, ;, }, }, catch]
[], +, sourceLines, [, ii, -, 1, ], ., length, (, ), +, 1, ;, }, }, catch, (, IOException]
[+, 1, ;, }, }, catch, (, IOException, e, ), {, lineOffsets, =, new, int, [, 1, ], ;, lineOffsets]
[., length, (, ), +, 1, ;, }, }, catch, (, IOException, e, ), {, lineOffsets, =, new, int, []
[[, ii, -, 1, ], ., length, (, ), +, 1, ;, }, }, catch, (, IOException, e, ), {]
[], ., length, (, ), +, 1, ;, }, }, catch, (, IOException, e, ), {, lineOffsets, =, new, int]
[-, 1, ], ., length, (, ), +, 1, ;, }, }, catch, (, IOException, e, ), {, lineOffsets, =]
[], ., length, (, ), +, 1, ;, }, }, catch, (, IOException, e, ), {, lineOffsets, =, new, int]
[;, }, }, catch, (, IOException, e, ), {, lineOffsets, =, new, int, [, 1, ], ;, lineOffsets, [, 0]
[=, new, int, [, 1, ], ;, lineOffsets, [, 0, ], =, 0, ;, }, }, public, String, getCode, (]
[;, lineOffsets, [, 0, ], =, 0, ;, }, }, public, String, getCode, (, ), throws, IOException, {, return, code]
[], ;, lineOffsets, [, 0, ], =, 0, ;, }, }, public, String, getCode, (, ), throws, IOException, {, return]
[=, 0, ;, }, }, public, String, getCode, (, ), throws, IOException, {, return, code, ;, }, public, Reader, getCodeReader]
[[, 0, ], =, 0, ;, }, }, public, String, getCode, (, ), throws, IOException, {, return, code, ;, }]
[], =, 0, ;, }, }, public, String, getCode, (, ), throws, IOException, {, return, code, ;, }, public, Reader]
[;, }, }, public, String, getCode, (, ), throws, IOException, {, return, code, ;, }, public, Reader, getCodeReader, (, )]
[;, }, public, Reader, getCodeReader, (, ), throws, IOException, {, return, new, StringReader, (, getCode, (, ), ), ;, }]
[;, }, @, VisibleForTesting, String, getCodeNoCache, (, ), {, return, code, ;, }, private, void, setCode, (, String, sourceCode, )]
[), ;, }, @, VisibleForTesting, String, getCodeNoCache, (, ), {, return, code, ;, }, private, void, setCode, (, String, sourceCode]
[;, }, private, void, setCode, (, String, sourceCode, ), {, code, =, sourceCode, ;, }, public, String, getOriginalPath, (, )]
[=, sourceCode, ;, }, public, String, getOriginalPath, (, ), {, return, originalPath, !=, null, ?, originalPath, :, fileName, ;, }]
[;, }, public, String, getOriginalPath, (, ), {, return, originalPath, !=, null, ?, originalPath, :, fileName, ;, }, public, void]
[;, }, public, void, setOriginalPath, (, String, originalPath, ), {, this, ., originalPath, =, originalPath, ;, }, public, void, clearCachedSource]
[?, originalPath, :, fileName, ;, }, public, void, setOriginalPath, (, String, originalPath, ), {, this, ., originalPath, =, originalPath, ;]
[!=, null, ?, originalPath, :, fileName, ;, }, public, void, setOriginalPath, (, String, originalPath, ), {, this, ., originalPath, =]
[?, originalPath, :, fileName, ;, }, public, void, setOriginalPath, (, String, originalPath, ), {, this, ., originalPath, =, originalPath, ;]
[:, fileName, ;, }, public, void, setOriginalPath, (, String, originalPath, ), {, this, ., originalPath, =, originalPath, ;, }, public]
[;, }, public, void, setOriginalPath, (, String, originalPath, ), {, this, ., originalPath, =, originalPath, ;, }, public, void, clearCachedSource]
[=, originalPath, ;, }, public, void, clearCachedSource, (, ), {, }, boolean, hasSourceInMemory, (, ), {, return, code, !=, null]
[., originalPath, =, originalPath, ;, }, public, void, clearCachedSource, (, ), {, }, boolean, hasSourceInMemory, (, ), {, return, code]
[;, }, public, void, clearCachedSource, (, ), {, }, boolean, hasSourceInMemory, (, ), {, return, code, !=, null, ;, }]
[;, }, @, Override, public, String, getName, (, ), {, return, fileName, ;, }, @, Override, public, boolean, isExtern, (]
[!=, null, ;, }, @, Override, public, String, getName, (, ), {, return, fileName, ;, }, @, Override, public, boolean]
[;, }, @, Override, public, String, getName, (, ), {, return, fileName, ;, }, @, Override, public, boolean, isExtern, (]
[;, }, @, Override, public, boolean, isExtern, (, ), {, return, isExternFile, ;, }, void, setIsExtern, (, boolean, newVal, )]
[;, }, void, setIsExtern, (, boolean, newVal, ), {, isExternFile, =, newVal, ;, }, @, Override, public, int, getLineOfOffset, (]
[=, newVal, ;, }, @, Override, public, int, getLineOfOffset, (, int, offset, ), {, findLineOffsets, (, ), ;, int, search]
[;, }, @, Override, public, int, getLineOfOffset, (, int, offset, ), {, findLineOffsets, (, ), ;, int, search, =, Arrays]
[;, int, search, =, Arrays, ., binarySearch, (, lineOffsets, ,, offset, ), ;, if, (, search, >=, 0, ), {]
[;, if, (, search, >=, 0, ), {, return, search, +, 1, ;, }, else, {, int, insertionPoint, =, -]
[., binarySearch, (, lineOffsets, ,, offset, ), ;, if, (, search, >=, 0, ), {, return, search, +, 1, ;]
[,, offset, ), ;, if, (, search, >=, 0, ), {, return, search, +, 1, ;, }, else, {, int]
[), ;, if, (, search, >=, 0, ), {, return, search, +, 1, ;, }, else, {, int, insertionPoint, =]
[), {, return, search, +, 1, ;, }, else, {, int, insertionPoint, =, -, 1, *, (, search, +, 1]
[>=, 0, ), {, return, search, +, 1, ;, }, else, {, int, insertionPoint, =, -, 1, *, (, search]
[), {, return, search, +, 1, ;, }, else, {, int, insertionPoint, =, -, 1, *, (, search, +, 1]
[;, }, else, {, int, insertionPoint, =, -, 1, *, (, search, +, 1, ), ;, return, Math, ., min]
[+, 1, ;, }, else, {, int, insertionPoint, =, -, 1, *, (, search, +, 1, ), ;, return, Math]
[;, }, else, {, int, insertionPoint, =, -, 1, *, (, search, +, 1, ), ;, return, Math, ., min]
[;, return, Math, ., min, (, insertionPoint, -, 1, ,, lineOffsets, ., length, -, 1, ), +, 1, ;, }]
[*, (, search, +, 1, ), ;, return, Math, ., min, (, insertionPoint, -, 1, ,, lineOffsets, ., length, -]
[*, (, search, +, 1, ), ;, return, Math, ., min, (, insertionPoint, -, 1, ,, lineOffsets, ., length, -]
[;, return, Math, ., min, (, insertionPoint, -, 1, ,, lineOffsets, ., length, -, 1, ), +, 1, ;, }]
[), ;, return, Math, ., min, (, insertionPoint, -, 1, ,, lineOffsets, ., length, -, 1, ), +, 1, ;]
[+, 1, ), ;, return, Math, ., min, (, insertionPoint, -, 1, ,, lineOffsets, ., length, -, 1, ), +]
[), ;, return, Math, ., min, (, insertionPoint, -, 1, ,, lineOffsets, ., length, -, 1, ), +, 1, ;]
[;, }, }, @, Override, public, int, getColumnOfOffset, (, int, offset, ), {, int, line, =, getLineOfOffset, (, offset, )]
[+, 1, ;, }, }, @, Override, public, int, getColumnOfOffset, (, int, offset, ), {, int, line, =, getLineOfOffset, (]
[., min, (, insertionPoint, -, 1, ,, lineOffsets, ., length, -, 1, ), +, 1, ;, }, }, @, Override]
[,, lineOffsets, ., length, -, 1, ), +, 1, ;, }, }, @, Override, public, int, getColumnOfOffset, (, int, offset]
[-, 1, ,, lineOffsets, ., length, -, 1, ), +, 1, ;, }, }, @, Override, public, int, getColumnOfOffset, (]
[,, lineOffsets, ., length, -, 1, ), +, 1, ;, }, }, @, Override, public, int, getColumnOfOffset, (, int, offset]
[), +, 1, ;, }, }, @, Override, public, int, getColumnOfOffset, (, int, offset, ), {, int, line, =, getLineOfOffset]
[-, 1, ), +, 1, ;, }, }, @, Override, public, int, getColumnOfOffset, (, int, offset, ), {, int, line]
[., length, -, 1, ), +, 1, ;, }, }, @, Override, public, int, getColumnOfOffset, (, int, offset, ), {]
[), +, 1, ;, }, }, @, Override, public, int, getColumnOfOffset, (, int, offset, ), {, int, line, =, getLineOfOffset]
[;, }, }, @, Override, public, int, getColumnOfOffset, (, int, offset, ), {, int, line, =, getLineOfOffset, (, offset, )]
[;, return, offset, -, lineOffsets, [, line, -, 1, ], ;, }, public, String, getLine, (, int, lineNumber, ), {]
[), ;, return, offset, -, lineOffsets, [, line, -, 1, ], ;, }, public, String, getLine, (, int, lineNumber, )]
[;, }, public, String, getLine, (, int, lineNumber, ), {, findLineOffsets, (, ), ;, if, (, lineNumber, >, lineOffsets, .]
[-, lineOffsets, [, line, -, 1, ], ;, }, public, String, getLine, (, int, lineNumber, ), {, findLineOffsets, (, )]
[;, }, public, String, getLine, (, int, lineNumber, ), {, findLineOffsets, (, ), ;, if, (, lineNumber, >, lineOffsets, .]
[[, line, -, 1, ], ;, }, public, String, getLine, (, int, lineNumber, ), {, findLineOffsets, (, ), ;, if]
[], ;, }, public, String, getLine, (, int, lineNumber, ), {, findLineOffsets, (, ), ;, if, (, lineNumber, >, lineOffsets]
[-, 1, ], ;, }, public, String, getLine, (, int, lineNumber, ), {, findLineOffsets, (, ), ;, if, (, lineNumber]
[], ;, }, public, String, getLine, (, int, lineNumber, ), {, findLineOffsets, (, ), ;, if, (, lineNumber, >, lineOffsets]
[;, if, (, lineNumber, >, lineOffsets, ., length, ), {, return, null, ;, }, if, (, lineNumber, <, 1, )]
[), {, return, null, ;, }, if, (, lineNumber, <, 1, ), {, lineNumber, =, 1, ;, }, int, pos]
[>, lineOffsets, ., length, ), {, return, null, ;, }, if, (, lineNumber, <, 1, ), {, lineNumber, =, 1]
[), {, return, null, ;, }, if, (, lineNumber, <, 1, ), {, lineNumber, =, 1, ;, }, int, pos]
[., length, ), {, return, null, ;, }, if, (, lineNumber, <, 1, ), {, lineNumber, =, 1, ;, }]
[;, }, if, (, lineNumber, <, 1, ), {, lineNumber, =, 1, ;, }, int, pos, =, lineOffsets, [, lineNumber]
[), {, lineNumber, =, 1, ;, }, int, pos, =, lineOffsets, [, lineNumber, -, 1, ], ;, String, js, =]
[<, 1, ), {, lineNumber, =, 1, ;, }, int, pos, =, lineOffsets, [, lineNumber, -, 1, ], ;, String]
[), {, lineNumber, =, 1, ;, }, int, pos, =, lineOffsets, [, lineNumber, -, 1, ], ;, String, js, =]
[=, 1, ;, }, int, pos, =, lineOffsets, [, lineNumber, -, 1, ], ;, String, js, =, "", ;, try]
[;, }, int, pos, =, lineOffsets, [, lineNumber, -, 1, ], ;, String, js, =, "", ;, try, {, js]
[;, String, js, =, "", ;, try, {, js, =, getCode, (, ), ;, }, catch, (, IOException, e, )]
[[, lineNumber, -, 1, ], ;, String, js, =, "", ;, try, {, js, =, getCode, (, ), ;, }]
[], ;, String, js, =, "", ;, try, {, js, =, getCode, (, ), ;, }, catch, (, IOException, e]
[-, 1, ], ;, String, js, =, "", ;, try, {, js, =, getCode, (, ), ;, }, catch, (]
[], ;, String, js, =, "", ;, try, {, js, =, getCode, (, ), ;, }, catch, (, IOException, e]
[;, try, {, js, =, getCode, (, ), ;, }, catch, (, IOException, e, ), {, return, null, ;, }]
[=, getCode, (, ), ;, }, catch, (, IOException, e, ), {, return, null, ;, }, if, (, js, .]
[;, }, catch, (, IOException, e, ), {, return, null, ;, }, if, (, js, ., indexOf, (, '\n', ,]
[;, }, if, (, js, ., indexOf, (, '\n', ,, pos, ), ==, -, 1, ), {, if, (, pos]
[), {, if, (, pos, >=, js, ., length, (, ), ), {, return, null, ;, }, else, {, return]
[==, -, 1, ), {, if, (, pos, >=, js, ., length, (, ), ), {, return, null, ;, }]
[., indexOf, (, '\n', ,, pos, ), ==, -, 1, ), {, if, (, pos, >=, js, ., length, (]
[,, pos, ), ==, -, 1, ), {, if, (, pos, >=, js, ., length, (, ), ), {, return]
[), ==, -, 1, ), {, if, (, pos, >=, js, ., length, (, ), ), {, return, null, ;]
[), {, if, (, pos, >=, js, ., length, (, ), ), {, return, null, ;, }, else, {, return]
[), {, if, (, pos, >=, js, ., length, (, ), ), {, return, null, ;, }, else, {, return]
[), {, return, null, ;, }, else, {, return, js, ., substring, (, pos, ,, js, ., length, (, )]
[>=, js, ., length, (, ), ), {, return, null, ;, }, else, {, return, js, ., substring, (, pos]
[), {, return, null, ;, }, else, {, return, js, ., substring, (, pos, ,, js, ., length, (, )]
[., length, (, ), ), {, return, null, ;, }, else, {, return, js, ., substring, (, pos, ,, js]
[;, }, else, {, return, js, ., substring, (, pos, ,, js, ., length, (, ), ), ;, }, }]
[;, }, }, else, {, return, js, ., substring, (, pos, ,, js, ., indexOf, (, '\n', ,, pos, )]
[., substring, (, pos, ,, js, ., length, (, ), ), ;, }, }, else, {, return, js, ., substring]
[,, js, ., length, (, ), ), ;, }, }, else, {, return, js, ., substring, (, pos, ,, js]
[), ;, }, }, else, {, return, js, ., substring, (, pos, ,, js, ., indexOf, (, '\n', ,, pos]
[., length, (, ), ), ;, }, }, else, {, return, js, ., substring, (, pos, ,, js, ., indexOf]
[;, }, }, public, Region, getRegion, (, int, lineNumber, ), {, String, js, =, "", ;, try, {, js, =]
[., substring, (, pos, ,, js, ., indexOf, (, '\n', ,, pos, ), ), ;, }, }, public, Region, getRegion]
[,, js, ., indexOf, (, '\n', ,, pos, ), ), ;, }, }, public, Region, getRegion, (, int, lineNumber, )]
[), ;, }, }, public, Region, getRegion, (, int, lineNumber, ), {, String, js, =, "", ;, try, {, js]
[., indexOf, (, '\n', ,, pos, ), ), ;, }, }, public, Region, getRegion, (, int, lineNumber, ), {, String]
[,, pos, ), ), ;, }, }, public, Region, getRegion, (, int, lineNumber, ), {, String, js, =, "", ;]
[), ), ;, }, }, public, Region, getRegion, (, int, lineNumber, ), {, String, js, =, "", ;, try, {]
[;, try, {, js, =, getCode, (, ), ;, }, catch, (, IOException, e, ), {, return, null, ;, }]
[=, getCode, (, ), ;, }, catch, (, IOException, e, ), {, return, null, ;, }, int, pos, =, 0]
[;, }, catch, (, IOException, e, ), {, return, null, ;, }, int, pos, =, 0, ;, int, startLine, =]
[;, }, int, pos, =, 0, ;, int, startLine, =, Math, ., max, (, 1, ,, lineNumber, -, (, SOURCE_EXCERPT_REGION_LENGTH]
[;, int, startLine, =, Math, ., max, (, 1, ,, lineNumber, -, (, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /, 2, +]
[;, for, (, int, n, =, 1, ;, n, <, startLine, ;, n, ++, ), {, int, nextpos, =, js]
[., max, (, 1, ,, lineNumber, -, (, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /, 2, +, 1, ), ;, for, (]
[,, lineNumber, -, (, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /, 2, +, 1, ), ;, for, (, int, n, =, 1]
[), ;, for, (, int, n, =, 1, ;, n, <, startLine, ;, n, ++, ), {, int, nextpos, =]
[+, 1, ), ;, for, (, int, n, =, 1, ;, n, <, startLine, ;, n, ++, ), {, int]
[-, (, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /, 2, +, 1, ), ;, for, (, int, n, =, 1, ;, n]
[+, 1, ), ;, for, (, int, n, =, 1, ;, n, <, startLine, ;, n, ++, ), {, int]
[/, 2, +, 1, ), ;, for, (, int, n, =, 1, ;, n, <, startLine, ;, n, ++, )]
[), /, 2, +, 1, ), ;, for, (, int, n, =, 1, ;, n, <, startLine, ;, n, ++]
[+, 1, ), /, 2, +, 1, ), ;, for, (, int, n, =, 1, ;, n, <, startLine, ;]
[), /, 2, +, 1, ), ;, for, (, int, n, =, 1, ;, n, <, startLine, ;, n, ++]
[+, 1, ), ;, for, (, int, n, =, 1, ;, n, <, startLine, ;, n, ++, ), {, int]
[), ;, for, (, int, n, =, 1, ;, n, <, startLine, ;, n, ++, ), {, int, nextpos, =]
[;, n, <, startLine, ;, n, ++, ), {, int, nextpos, =, js, ., indexOf, (, '\n', ,, pos, )]
[;, n, ++, ), {, int, nextpos, =, js, ., indexOf, (, '\n', ,, pos, ), ;, if, (, nextpos]
[<, startLine, ;, n, ++, ), {, int, nextpos, =, js, ., indexOf, (, '\n', ,, pos, ), ;, if]
[;, n, ++, ), {, int, nextpos, =, js, ., indexOf, (, '\n', ,, pos, ), ;, if, (, nextpos]
[), {, int, nextpos, =, js, ., indexOf, (, '\n', ,, pos, ), ;, if, (, nextpos, ==, -, 1]
[++, ), {, int, nextpos, =, js, ., indexOf, (, '\n', ,, pos, ), ;, if, (, nextpos, ==, -]
[;, if, (, nextpos, ==, -, 1, ), {, break, ;, }, pos, =, nextpos, +, 1, ;, }, int]
[., indexOf, (, '\n', ,, pos, ), ;, if, (, nextpos, ==, -, 1, ), {, break, ;, }, pos]
[,, pos, ), ;, if, (, nextpos, ==, -, 1, ), {, break, ;, }, pos, =, nextpos, +, 1]
[), ;, if, (, nextpos, ==, -, 1, ), {, break, ;, }, pos, =, nextpos, +, 1, ;, }]
[), {, break, ;, }, pos, =, nextpos, +, 1, ;, }, int, end, =, pos, ;, int, endLine, =]
[==, -, 1, ), {, break, ;, }, pos, =, nextpos, +, 1, ;, }, int, end, =, pos, ;]
[), {, break, ;, }, pos, =, nextpos, +, 1, ;, }, int, end, =, pos, ;, int, endLine, =]
[), {, break, ;, }, pos, =, nextpos, +, 1, ;, }, int, end, =, pos, ;, int, endLine, =]
[=, nextpos, +, 1, ;, }, int, end, =, pos, ;, int, endLine, =, startLine, ;, for, (, int, n]
[;, }, int, end, =, pos, ;, int, endLine, =, startLine, ;, for, (, int, n, =, 0, ;, n]
[+, 1, ;, }, int, end, =, pos, ;, int, endLine, =, startLine, ;, for, (, int, n, =, 0]
[;, }, int, end, =, pos, ;, int, endLine, =, startLine, ;, for, (, int, n, =, 0, ;, n]
[;, int, endLine, =, startLine, ;, for, (, int, n, =, 0, ;, n, <, SOURCE_EXCERPT_REGION_LENGTH, ;, n, ++, ,]
[;, for, (, int, n, =, 0, ;, n, <, SOURCE_EXCERPT_REGION_LENGTH, ;, n, ++, ,, endLine, ++, ), {, end]
[;, n, <, SOURCE_EXCERPT_REGION_LENGTH, ;, n, ++, ,, endLine, ++, ), {, end, =, js, ., indexOf, (, '\n', ,]
[;, n, ++, ,, endLine, ++, ), {, end, =, js, ., indexOf, (, '\n', ,, end, ), ;, if]
[<, SOURCE_EXCERPT_REGION_LENGTH, ;, n, ++, ,, endLine, ++, ), {, end, =, js, ., indexOf, (, '\n', ,, end, )]
[;, n, ++, ,, endLine, ++, ), {, end, =, js, ., indexOf, (, '\n', ,, end, ), ;, if]
[,, endLine, ++, ), {, end, =, js, ., indexOf, (, '\n', ,, end, ), ;, if, (, end, ==]
[++, ,, endLine, ++, ), {, end, =, js, ., indexOf, (, '\n', ,, end, ), ;, if, (, end]
[), {, end, =, js, ., indexOf, (, '\n', ,, end, ), ;, if, (, end, ==, -, 1, )]
[++, ), {, end, =, js, ., indexOf, (, '\n', ,, end, ), ;, if, (, end, ==, -, 1]
[=, js, ., indexOf, (, '\n', ,, end, ), ;, if, (, end, ==, -, 1, ), {, break, ;]
[;, if, (, end, ==, -, 1, ), {, break, ;, }, end, ++, ;, }, if, (, lineNumber, >=]
[., indexOf, (, '\n', ,, end, ), ;, if, (, end, ==, -, 1, ), {, break, ;, }, end]
[,, end, ), ;, if, (, end, ==, -, 1, ), {, break, ;, }, end, ++, ;, }, if]
[), ;, if, (, end, ==, -, 1, ), {, break, ;, }, end, ++, ;, }, if, (, lineNumber]
[), {, break, ;, }, end, ++, ;, }, if, (, lineNumber, >=, endLine, ), {, return, null, ;, }]
[==, -, 1, ), {, break, ;, }, end, ++, ;, }, if, (, lineNumber, >=, endLine, ), {, return]
[), {, break, ;, }, end, ++, ;, }, if, (, lineNumber, >=, endLine, ), {, return, null, ;, }]
[), {, break, ;, }, end, ++, ;, }, if, (, lineNumber, >=, endLine, ), {, return, null, ;, }]
[;, }, if, (, lineNumber, >=, endLine, ), {, return, null, ;, }, if, (, end, ==, -, 1, )]
[++, ;, }, if, (, lineNumber, >=, endLine, ), {, return, null, ;, }, if, (, end, ==, -, 1]
[), {, return, null, ;, }, if, (, end, ==, -, 1, ), {, int, last, =, js, ., length]
[>=, endLine, ), {, return, null, ;, }, if, (, end, ==, -, 1, ), {, int, last, =, js]
[), {, return, null, ;, }, if, (, end, ==, -, 1, ), {, int, last, =, js, ., length]
[;, }, if, (, end, ==, -, 1, ), {, int, last, =, js, ., length, (, ), -, 1]
[), {, int, last, =, js, ., length, (, ), -, 1, ;, if, (, js, ., charAt, (, last]
[==, -, 1, ), {, int, last, =, js, ., length, (, ), -, 1, ;, if, (, js, .]
[), {, int, last, =, js, ., length, (, ), -, 1, ;, if, (, js, ., charAt, (, last]
[), {, int, last, =, js, ., length, (, ), -, 1, ;, if, (, js, ., charAt, (, last]
[;, if, (, js, ., charAt, (, last, ), ==, '\n', ), {, return, new, SimpleRegion, (, startLine, ,, endLine]
[-, 1, ;, if, (, js, ., charAt, (, last, ), ==, '\n', ), {, return, new, SimpleRegion, (, startLine]
[., length, (, ), -, 1, ;, if, (, js, ., charAt, (, last, ), ==, '\n', ), {, return]
[;, if, (, js, ., charAt, (, last, ), ==, '\n', ), {, return, new, SimpleRegion, (, startLine, ,, endLine]
[), {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ,, last, ), ), ;]
[==, '\n', ), {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ,, last, )]
[., charAt, (, last, ), ==, '\n', ), {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring]
[), ==, '\n', ), {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ,, last]
[), {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ,, last, ), ), ;]
[;, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ), ), ;]
[,, endLine, ,, js, ., substring, (, pos, ,, last, ), ), ;, }, else, {, return, new, SimpleRegion, (]
[,, js, ., substring, (, pos, ,, last, ), ), ;, }, else, {, return, new, SimpleRegion, (, startLine, ,]
[), ;, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ), )]
[., substring, (, pos, ,, last, ), ), ;, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,]
[,, last, ), ), ;, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (]
[), ), ;, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, )]
[;, }, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ,, end]
[,, endLine, ,, js, ., substring, (, pos, ), ), ;, }, }, else, {, return, new, SimpleRegion, (, startLine]
[,, js, ., substring, (, pos, ), ), ;, }, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine]
[), ;, }, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ,]
[., substring, (, pos, ), ), ;, }, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js]
[), ), ;, }, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos]
[;, }, }, @, Override, public, String, toString, (, ), {, return, fileName, ;, }, public, static, SourceFile, fromFile, (]
[,, endLine, ,, js, ., substring, (, pos, ,, end, ), ), ;, }, }, @, Override, public, String, toString]
[,, js, ., substring, (, pos, ,, end, ), ), ;, }, }, @, Override, public, String, toString, (, )]
[), ;, }, }, @, Override, public, String, toString, (, ), {, return, fileName, ;, }, public, static, SourceFile, fromFile]
[., substring, (, pos, ,, end, ), ), ;, }, }, @, Override, public, String, toString, (, ), {, return]
[,, end, ), ), ;, }, }, @, Override, public, String, toString, (, ), {, return, fileName, ;, }, public]
[), ), ;, }, }, @, Override, public, String, toString, (, ), {, return, fileName, ;, }, public, static, SourceFile]
[;, }, public, static, SourceFile, fromFile, (, String, fileName, ,, Charset, c, ), {, return, builder, (, ), ., withCharset]
[;, }, public, static, SourceFile, fromFile, (, String, fileName, ), {, return, builder, (, ), ., buildFromFile, (, fileName, )]
[., buildFromFile, (, fileName, ), ;, }, public, static, SourceFile, fromFile, (, String, fileName, ), {, return, builder, (, )]
[., withCharset, (, c, ), ., buildFromFile, (, fileName, ), ;, }, public, static, SourceFile, fromFile, (, String, fileName, )]
[), ., buildFromFile, (, fileName, ), ;, }, public, static, SourceFile, fromFile, (, String, fileName, ), {, return, builder, (]
[), ;, }, public, static, SourceFile, fromFile, (, String, fileName, ), {, return, builder, (, ), ., buildFromFile, (, fileName]
[;, }, public, static, SourceFile, fromFile, (, File, file, ,, Charset, c, ), {, return, builder, (, ), ., withCharset]
[., buildFromFile, (, fileName, ), ;, }, public, static, SourceFile, fromFile, (, File, file, ,, Charset, c, ), {, return]
[), ;, }, public, static, SourceFile, fromFile, (, File, file, ,, Charset, c, ), {, return, builder, (, ), .]
[;, }, public, static, SourceFile, fromFile, (, File, file, ), {, return, builder, (, ), ., buildFromFile, (, file, )]
[., buildFromFile, (, file, ), ;, }, public, static, SourceFile, fromFile, (, File, file, ), {, return, builder, (, )]
[., withCharset, (, c, ), ., buildFromFile, (, file, ), ;, }, public, static, SourceFile, fromFile, (, File, file, )]
[), ., buildFromFile, (, file, ), ;, }, public, static, SourceFile, fromFile, (, File, file, ), {, return, builder, (]
[), ;, }, public, static, SourceFile, fromFile, (, File, file, ), {, return, builder, (, ), ., buildFromFile, (, file]
[;, }, public, static, SourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return, builder, (, ), ., buildFromCode]
[., buildFromFile, (, file, ), ;, }, public, static, SourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return]
[), ;, }, public, static, SourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return, builder, (, ), .]
[;, }, public, static, SourceFile, fromCode, (, String, fileName, ,, String, originalPath, ,, String, code, ), {, return, builder, (]
[., buildFromCode, (, fileName, ,, code, ), ;, }, public, static, SourceFile, fromCode, (, String, fileName, ,, String, originalPath, ,]
[,, code, ), ;, }, public, static, SourceFile, fromCode, (, String, fileName, ,, String, originalPath, ,, String, code, ), {]
[), ;, }, public, static, SourceFile, fromCode, (, String, fileName, ,, String, originalPath, ,, String, code, ), {, return, builder]
[;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, builder, (, )]
[., buildFromCode, (, fileName, ,, code, ), ;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, )]
[., withOriginalPath, (, originalPath, ), ., buildFromCode, (, fileName, ,, code, ), ;, }, public, static, SourceFile, fromInputStream, (, String]
[), ., buildFromCode, (, fileName, ,, code, ), ;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, InputStream, s]
[,, code, ), ;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return]
[), ;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, builder, (]
[;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, String, originalPath, ,, InputStream, s, ), throws, IOException, {, return]
[., buildFromInputStream, (, fileName, ,, s, ), ;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, String, originalPath, ,]
[,, s, ), ;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, String, originalPath, ,, InputStream, s, ), throws]
[), ;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, String, originalPath, ,, InputStream, s, ), throws, IOException, {]
[;, }, public, static, SourceFile, fromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return, builder, (, )]
[., buildFromInputStream, (, fileName, ,, s, ), ;, }, public, static, SourceFile, fromReader, (, String, fileName, ,, Reader, r, )]
[., withOriginalPath, (, originalPath, ), ., buildFromInputStream, (, fileName, ,, s, ), ;, }, public, static, SourceFile, fromReader, (, String]
[), ., buildFromInputStream, (, fileName, ,, s, ), ;, }, public, static, SourceFile, fromReader, (, String, fileName, ,, Reader, r]
[,, s, ), ;, }, public, static, SourceFile, fromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return]
[), ;, }, public, static, SourceFile, fromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return, builder, (]
[;, }, public, static, SourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, builder, (, ), ., buildFromGenerator]
[., buildFromReader, (, fileName, ,, r, ), ;, }, public, static, SourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, )]
[,, r, ), ;, }, public, static, SourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, builder, (]
[), ;, }, public, static, SourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, builder, (, ), .]
[;, }, public, static, Builder, builder, (, ), {, return, new, Builder, (, ), ;, }, public, static, class, Builder]
[., buildFromGenerator, (, fileName, ,, generator, ), ;, }, public, static, Builder, builder, (, ), {, return, new, Builder, (]
[,, generator, ), ;, }, public, static, Builder, builder, (, ), {, return, new, Builder, (, ), ;, }, public]
[), ;, }, public, static, Builder, builder, (, ), {, return, new, Builder, (, ), ;, }, public, static, class]
[;, }, public, static, class, Builder, {, private, Charset, charset, =, Charsets, ., UTF_8, ;, private, String, originalPath, =, null]
[;, private, String, originalPath, =, null, ;, public, Builder, (, ), {, }, public, Builder, withCharset, (, Charset, charset, )]
[., UTF_8, ;, private, String, originalPath, =, null, ;, public, Builder, (, ), {, }, public, Builder, withCharset, (, Charset]
[;, public, Builder, (, ), {, }, public, Builder, withCharset, (, Charset, charset, ), {, this, ., charset, =, charset]
[=, charset, ;, return, this, ;, }, public, Builder, withOriginalPath, (, String, originalPath, ), {, this, ., originalPath, =, originalPath]
[., charset, =, charset, ;, return, this, ;, }, public, Builder, withOriginalPath, (, String, originalPath, ), {, this, ., originalPath]
[;, return, this, ;, }, public, Builder, withOriginalPath, (, String, originalPath, ), {, this, ., originalPath, =, originalPath, ;, return]
[;, }, public, Builder, withOriginalPath, (, String, originalPath, ), {, this, ., originalPath, =, originalPath, ;, return, this, ;, }]
[=, originalPath, ;, return, this, ;, }, public, SourceFile, buildFromFile, (, String, fileName, ), {, return, buildFromFile, (, new, File]
[., originalPath, =, originalPath, ;, return, this, ;, }, public, SourceFile, buildFromFile, (, String, fileName, ), {, return, buildFromFile, (]
[;, return, this, ;, }, public, SourceFile, buildFromFile, (, String, fileName, ), {, return, buildFromFile, (, new, File, (, fileName]
[;, }, public, SourceFile, buildFromFile, (, String, fileName, ), {, return, buildFromFile, (, new, File, (, fileName, ), ), ;]
[;, }, public, SourceFile, buildFromFile, (, File, file, ), {, return, new, OnDisk, (, file, ,, originalPath, ,, charset, )]
[), ;, }, public, SourceFile, buildFromFile, (, File, file, ), {, return, new, OnDisk, (, file, ,, originalPath, ,, charset]
[), ), ;, }, public, SourceFile, buildFromFile, (, File, file, ), {, return, new, OnDisk, (, file, ,, originalPath, ,]
[;, }, public, SourceFile, buildFromCode, (, String, fileName, ,, String, code, ), {, return, new, Preloaded, (, fileName, ,, originalPath]
[,, originalPath, ,, charset, ), ;, }, public, SourceFile, buildFromCode, (, String, fileName, ,, String, code, ), {, return, new]
[,, charset, ), ;, }, public, SourceFile, buildFromCode, (, String, fileName, ,, String, code, ), {, return, new, Preloaded, (]
[), ;, }, public, SourceFile, buildFromCode, (, String, fileName, ,, String, code, ), {, return, new, Preloaded, (, fileName, ,]
[;, }, public, SourceFile, buildFromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, buildFromCode, (, fileName, ,]
[,, originalPath, ,, code, ), ;, }, public, SourceFile, buildFromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {]
[,, code, ), ;, }, public, SourceFile, buildFromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, buildFromCode]
[), ;, }, public, SourceFile, buildFromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, buildFromCode, (, fileName]
[;, }, public, SourceFile, buildFromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return, buildFromCode, (, fileName, ,]
[,, CharStreams, ., toString, (, new, InputStreamReader, (, s, ,, charset, ), ), ), ;, }, public, SourceFile, buildFromReader, (]
[), ;, }, public, SourceFile, buildFromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return, buildFromCode, (, fileName]
[., toString, (, new, InputStreamReader, (, s, ,, charset, ), ), ), ;, }, public, SourceFile, buildFromReader, (, String, fileName]
[), ), ;, }, public, SourceFile, buildFromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return, buildFromCode, (]
[,, charset, ), ), ), ;, }, public, SourceFile, buildFromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {]
[), ), ), ;, }, public, SourceFile, buildFromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return, buildFromCode]
[;, }, public, SourceFile, buildFromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new, Generated, (, fileName, ,, originalPath]
[,, CharStreams, ., toString, (, r, ), ), ;, }, public, SourceFile, buildFromGenerator, (, String, fileName, ,, Generator, generator, )]
[), ;, }, public, SourceFile, buildFromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new, Generated, (, fileName, ,]
[., toString, (, r, ), ), ;, }, public, SourceFile, buildFromGenerator, (, String, fileName, ,, Generator, generator, ), {, return]
[), ), ;, }, public, SourceFile, buildFromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new, Generated, (, fileName]
[;, }, }, static, class, Preloaded, extends, SourceFile, {, private, static, final, long, serialVersionUID, =, 1L, ;, Preloaded, (, String]
[,, originalPath, ,, generator, ), ;, }, }, static, class, Preloaded, extends, SourceFile, {, private, static, final, long, serialVersionUID, =]
[,, generator, ), ;, }, }, static, class, Preloaded, extends, SourceFile, {, private, static, final, long, serialVersionUID, =, 1L, ;]
[), ;, }, }, static, class, Preloaded, extends, SourceFile, {, private, static, final, long, serialVersionUID, =, 1L, ;, Preloaded, (]
[;, Preloaded, (, String, fileName, ,, String, originalPath, ,, String, code, ), {, super, (, fileName, ), ;, super, .]
[), ;, super, ., setOriginalPath, (, originalPath, ), ;, super, ., setCode, (, code, ), ;, }, }, static, class]
[;, super, ., setCode, (, code, ), ;, }, }, static, class, Generated, extends, SourceFile, {, private, static, final, long]
[., setOriginalPath, (, originalPath, ), ;, super, ., setCode, (, code, ), ;, }, }, static, class, Generated, extends, SourceFile]
[), ;, super, ., setCode, (, code, ), ;, }, }, static, class, Generated, extends, SourceFile, {, private, static, final]
[;, }, }, static, class, Generated, extends, SourceFile, {, private, static, final, long, serialVersionUID, =, 1L, ;, private, final, Generator]
[., setCode, (, code, ), ;, }, }, static, class, Generated, extends, SourceFile, {, private, static, final, long, serialVersionUID, =]
[), ;, }, }, static, class, Generated, extends, SourceFile, {, private, static, final, long, serialVersionUID, =, 1L, ;, private, final]
[;, private, final, Generator, generator, ;, Generated, (, String, fileName, ,, String, originalPath, ,, Generator, generator, ), {, super, (]
[), ;, super, ., setOriginalPath, (, originalPath, ), ;, this, ., generator, =, generator, ;, }, @, Override, public, synchronized]
[;, this, ., generator, =, generator, ;, }, @, Override, public, synchronized, String, getCode, (, ), throws, IOException, {, String]
[., setOriginalPath, (, originalPath, ), ;, this, ., generator, =, generator, ;, }, @, Override, public, synchronized, String, getCode, (]
[), ;, this, ., generator, =, generator, ;, }, @, Override, public, synchronized, String, getCode, (, ), throws, IOException, {]
[=, generator, ;, }, @, Override, public, synchronized, String, getCode, (, ), throws, IOException, {, String, cachedCode, =, super, .]
[., generator, =, generator, ;, }, @, Override, public, synchronized, String, getCode, (, ), throws, IOException, {, String, cachedCode, =]
[;, }, @, Override, public, synchronized, String, getCode, (, ), throws, IOException, {, String, cachedCode, =, super, ., getCode, (]
[;, if, (, cachedCode, ==, null, ), {, cachedCode, =, generator, ., getCode, (, ), ;, super, ., setCode, (]
[., getCode, (, ), ;, if, (, cachedCode, ==, null, ), {, cachedCode, =, generator, ., getCode, (, ), ;]
[), {, cachedCode, =, generator, ., getCode, (, ), ;, super, ., setCode, (, cachedCode, ), ;, }, return, cachedCode]
[==, null, ), {, cachedCode, =, generator, ., getCode, (, ), ;, super, ., setCode, (, cachedCode, ), ;, }]
[), {, cachedCode, =, generator, ., getCode, (, ), ;, super, ., setCode, (, cachedCode, ), ;, }, return, cachedCode]
[=, generator, ., getCode, (, ), ;, super, ., setCode, (, cachedCode, ), ;, }, return, cachedCode, ;, }, @]
[;, super, ., setCode, (, cachedCode, ), ;, }, return, cachedCode, ;, }, @, Override, public, void, clearCachedSource, (, )]
[., getCode, (, ), ;, super, ., setCode, (, cachedCode, ), ;, }, return, cachedCode, ;, }, @, Override, public]
[;, }, return, cachedCode, ;, }, @, Override, public, void, clearCachedSource, (, ), {, super, ., setCode, (, null, )]
[., setCode, (, cachedCode, ), ;, }, return, cachedCode, ;, }, @, Override, public, void, clearCachedSource, (, ), {, super]
[), ;, }, return, cachedCode, ;, }, @, Override, public, void, clearCachedSource, (, ), {, super, ., setCode, (, null]
[;, }, @, Override, public, void, clearCachedSource, (, ), {, super, ., setCode, (, null, ), ;, }, }, static]
[;, }, }, static, class, OnDisk, extends, SourceFile, {, private, static, final, long, serialVersionUID, =, 1L, ;, private, final, File]
[., setCode, (, null, ), ;, }, }, static, class, OnDisk, extends, SourceFile, {, private, static, final, long, serialVersionUID, =]
[), ;, }, }, static, class, OnDisk, extends, SourceFile, {, private, static, final, long, serialVersionUID, =, 1L, ;, private, final]
[;, private, final, File, file, ;, private, String, inputCharset, =, Charsets, ., UTF_8, ., name, (, ), ;, OnDisk, (]
[;, OnDisk, (, File, file, ,, String, originalPath, ,, Charset, c, ), {, super, (, file, ., getPath, (, )]
[., name, (, ), ;, OnDisk, (, File, file, ,, String, originalPath, ,, Charset, c, ), {, super, (, file]
[., UTF_8, ., name, (, ), ;, OnDisk, (, File, file, ,, String, originalPath, ,, Charset, c, ), {, super]
[), ;, this, ., file, =, file, ;, super, ., setOriginalPath, (, originalPath, ), ;, if, (, c, !=, null]
[., getPath, (, ), ), ;, this, ., file, =, file, ;, super, ., setOriginalPath, (, originalPath, ), ;, if]
[=, file, ;, super, ., setOriginalPath, (, originalPath, ), ;, if, (, c, !=, null, ), {, this, ., setCharset]
[., file, =, file, ;, super, ., setOriginalPath, (, originalPath, ), ;, if, (, c, !=, null, ), {, this]
[;, super, ., setOriginalPath, (, originalPath, ), ;, if, (, c, !=, null, ), {, this, ., setCharset, (, c]
[;, if, (, c, !=, null, ), {, this, ., setCharset, (, c, ), ;, }, }, @, Override, public]
[., setOriginalPath, (, originalPath, ), ;, if, (, c, !=, null, ), {, this, ., setCharset, (, c, ), ;]
[), ;, if, (, c, !=, null, ), {, this, ., setCharset, (, c, ), ;, }, }, @, Override]
[), {, this, ., setCharset, (, c, ), ;, }, }, @, Override, public, synchronized, String, getCode, (, ), throws]
[!=, null, ), {, this, ., setCharset, (, c, ), ;, }, }, @, Override, public, synchronized, String, getCode, (]
[), {, this, ., setCharset, (, c, ), ;, }, }, @, Override, public, synchronized, String, getCode, (, ), throws]
[;, }, }, @, Override, public, synchronized, String, getCode, (, ), throws, IOException, {, String, cachedCode, =, super, ., getCode]
[., setCharset, (, c, ), ;, }, }, @, Override, public, synchronized, String, getCode, (, ), throws, IOException, {, String]
[), ;, }, }, @, Override, public, synchronized, String, getCode, (, ), throws, IOException, {, String, cachedCode, =, super, .]
[;, if, (, cachedCode, ==, null, ), {, cachedCode, =, Files, ., toString, (, file, ,, this, ., getCharset, (]
[., getCode, (, ), ;, if, (, cachedCode, ==, null, ), {, cachedCode, =, Files, ., toString, (, file, ,]
[), {, cachedCode, =, Files, ., toString, (, file, ,, this, ., getCharset, (, ), ), ;, super, ., setCode]
[==, null, ), {, cachedCode, =, Files, ., toString, (, file, ,, this, ., getCharset, (, ), ), ;, super]
[), {, cachedCode, =, Files, ., toString, (, file, ,, this, ., getCharset, (, ), ), ;, super, ., setCode]
[=, Files, ., toString, (, file, ,, this, ., getCharset, (, ), ), ;, super, ., setCode, (, cachedCode, )]
[;, super, ., setCode, (, cachedCode, ), ;, }, return, cachedCode, ;, }, @, Override, public, Reader, getCodeReader, (, )]
[., toString, (, file, ,, this, ., getCharset, (, ), ), ;, super, ., setCode, (, cachedCode, ), ;, }]
[,, this, ., getCharset, (, ), ), ;, super, ., setCode, (, cachedCode, ), ;, }, return, cachedCode, ;, }]
[), ;, super, ., setCode, (, cachedCode, ), ;, }, return, cachedCode, ;, }, @, Override, public, Reader, getCodeReader, (]
[., getCharset, (, ), ), ;, super, ., setCode, (, cachedCode, ), ;, }, return, cachedCode, ;, }, @, Override]
[;, }, return, cachedCode, ;, }, @, Override, public, Reader, getCodeReader, (, ), throws, IOException, {, if, (, hasSourceInMemory, (]
[., setCode, (, cachedCode, ), ;, }, return, cachedCode, ;, }, @, Override, public, Reader, getCodeReader, (, ), throws, IOException]
[), ;, }, return, cachedCode, ;, }, @, Override, public, Reader, getCodeReader, (, ), throws, IOException, {, if, (, hasSourceInMemory]
[;, }, @, Override, public, Reader, getCodeReader, (, ), throws, IOException, {, if, (, hasSourceInMemory, (, ), ), {, return]
[), {, return, super, ., getCodeReader, (, ), ;, }, else, {, return, new, FileReader, (, file, ), ;, }]
[;, }, else, {, return, new, FileReader, (, file, ), ;, }, }, @, Override, public, void, clearCachedSource, (, )]
[., getCodeReader, (, ), ;, }, else, {, return, new, FileReader, (, file, ), ;, }, }, @, Override, public]
[;, }, }, @, Override, public, void, clearCachedSource, (, ), {, super, ., setCode, (, null, ), ;, }, public]
[), ;, }, }, @, Override, public, void, clearCachedSource, (, ), {, super, ., setCode, (, null, ), ;, }]
[;, }, public, void, setCharset, (, Charset, c, ), {, inputCharset, =, c, ., name, (, ), ;, }, public]
[., setCode, (, null, ), ;, }, public, void, setCharset, (, Charset, c, ), {, inputCharset, =, c, ., name]
[), ;, }, public, void, setCharset, (, Charset, c, ), {, inputCharset, =, c, ., name, (, ), ;, }]
[=, c, ., name, (, ), ;, }, public, Charset, getCharset, (, ), {, return, Charset, ., forName, (, inputCharset]
[;, }, public, Charset, getCharset, (, ), {, return, Charset, ., forName, (, inputCharset, ), ;, }, }, }]
[., name, (, ), ;, }, public, Charset, getCharset, (, ), {, return, Charset, ., forName, (, inputCharset, ), ;]
[;, }, }, }]
[., forName, (, inputCharset, ), ;, }, }, }]
[), ;, }, }, }]
