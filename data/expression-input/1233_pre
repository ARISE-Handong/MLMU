[java, ., util, ., TimeZone, ;, public, class, Year, extends, RegularTimePeriod, implements, Serializable, {, public, static, final, int, MINIMUM_YEAR, =]
[., util, ., TimeZone, ;, public, class, Year, extends, RegularTimePeriod, implements, Serializable, {, public, static, final, int, MINIMUM_YEAR, =, -]
[extends, RegularTimePeriod, implements, Serializable, {, public, static, final, int, MINIMUM_YEAR, =, -, 9999, ;, public, static, final, int, MAXIMUM_YEAR, =]
[int, MINIMUM_YEAR, =, -, 9999, ;, public, static, final, int, MAXIMUM_YEAR, =, 9999, ;, private, static, final, long, serialVersionUID, =]
[MINIMUM_YEAR, =, -, 9999, ;, public, static, final, int, MAXIMUM_YEAR, =, 9999, ;, private, static, final, long, serialVersionUID, =, -]
[;, private, short, year, ;, private, long, firstMillisecond, ;, private, long, lastMillisecond, ;, public, Year, (, ), {, this, (]
[), {, this, (, new, Date, (, ), ), ;, }, public, Year, (, int, year, ), {, if, (]
[), {, this, (, new, Date, (, ), ), ;, }, public, Year, (, int, year, ), {, if, (]
[{, this, (, new, Date, (, ), ), ;, }, public, Year, (, int, year, ), {, if, (, (]
[{, this, (, new, Date, (, ), ), ;, }, public, Year, (, int, year, ), {, if, (, (]
[(, new, Date, (, ), ), ;, }, public, Year, (, int, year, ), {, if, (, (, year, <]
[(, new, Date, (, ), ), ;, }, public, Year, (, int, year, ), {, if, (, (, year, <]
[), ;, }, public, Year, (, int, year, ), {, if, (, (, year, <, Year, ., MINIMUM_YEAR, ), ||]
[;, }, public, Year, (, int, year, ), {, if, (, (, year, <, Year, ., MINIMUM_YEAR, ), ||, (]
[;, }, public, Year, (, int, year, ), {, if, (, (, year, <, Year, ., MINIMUM_YEAR, ), ||, (]
[public, Year, (, int, year, ), {, if, (, (, year, <, Year, ., MINIMUM_YEAR, ), ||, (, year, >]
[public, Year, (, int, year, ), {, if, (, (, year, <, Year, ., MINIMUM_YEAR, ), ||, (, year, >]
[if, (, (, year, <, Year, ., MINIMUM_YEAR, ), ||, (, year, >, Year, ., MAXIMUM_YEAR, ), ), {, throw]
[year, <, Year, ., MINIMUM_YEAR, ), ||, (, year, >, Year, ., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (]
[year, <, Year, ., MINIMUM_YEAR, ), ||, (, year, >, Year, ., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (]
[year, <, Year, ., MINIMUM_YEAR, ), ||, (, year, >, Year, ., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (]
[Year, ., MINIMUM_YEAR, ), ||, (, year, >, Year, ., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +]
[MINIMUM_YEAR, ), ||, (, year, >, Year, ., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +]
[year, >, Year, ., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range.", ), ;, }]
[year, >, Year, ., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range.", ), ;, }]
[MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range.", ), ;, }, this, ., year, =]
[{, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range.", ), ;, }, this, ., year, =, (, short, )]
[new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;]
[(, "Year constructor: year (", +, year, +, ") outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;, peg, (]
[(, "Year constructor: year (", +, year, +, ") outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;, peg, (]
[;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Year, (, Date, time, ), {, this, (]
[(, Calendar, ., getInstance, (, ), ), ;, }, public, Year, (, Date, time, ), {, this, (, time, ,]
[(, Calendar, ., getInstance, (, ), ), ;, }, public, Year, (, Date, time, ), {, this, (, time, ,]
[TimeZone, ., getDefault, (, ), ), ;, }, public, Year, (, Date, time, ,, TimeZone, zone, ), {, this, (]
[getDefault, (, ), ), ;, }, public, Year, (, Date, time, ,, TimeZone, zone, ), {, this, (, time, ,]
[), ), ;, }, public, Year, (, Date, time, ,, TimeZone, zone, ), {, this, (, time, ,, zone, ,]
[), ), ;, }, public, Year, (, Date, time, ,, TimeZone, zone, ), {, this, (, time, ,, zone, ,]
[), ), ;, }, public, Year, (, Date, time, ,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =]
[), ), ;, }, public, Year, (, Date, time, ,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =]
[public, Year, (, Date, time, ,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =, Calendar, ., getInstance, (]
[(, Date, time, ,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ,]
[,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ,, locale, ), ;]
[,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ,, locale, ), ;]
[Locale, locale, ), {, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ,, locale, ), ;, calendar, ., setTime, (]
[{, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ,, locale, ), ;, calendar, ., setTime, (, time, ), ;]
[{, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ,, locale, ), ;, calendar, ., setTime, (, time, ), ;]
[Calendar, ., getInstance, (, zone, ,, locale, ), ;, calendar, ., setTime, (, time, ), ;, this, ., year, =]
[(, zone, ,, locale, ), ;, calendar, ., setTime, (, time, ), ;, this, ., year, =, (, short, )]
[(, zone, ,, locale, ), ;, calendar, ., setTime, (, time, ), ;, this, ., year, =, (, short, )]
[), ;, calendar, ., setTime, (, time, ), ;, this, ., year, =, (, short, ), calendar, ., get, (]
[), ;, calendar, ., setTime, (, time, ), ;, this, ., year, =, (, short, ), calendar, ., get, (]
[(, time, ), ;, this, ., year, =, (, short, ), calendar, ., get, (, Calendar, ., YEAR, ), ;]
[), ;, this, ., year, =, (, short, ), calendar, ., get, (, Calendar, ., YEAR, ), ;, peg, (]
[get, (, Calendar, ., YEAR, ), ;, peg, (, calendar, ), ;, }, public, int, getYear, (, ), {, return]
[get, (, Calendar, ., YEAR, ), ;, peg, (, calendar, ), ;, }, public, int, getYear, (, ), {, return]
[}, public, int, getYear, (, ), {, return, this, ., year, ;, }, public, long, getFirstMillisecond, (, ), {, return]
[}, public, int, getYear, (, ), {, return, this, ., year, ;, }, public, long, getFirstMillisecond, (, ), {, return]
[}, public, long, getFirstMillisecond, (, ), {, return, this, ., firstMillisecond, ;, }, public, long, getLastMillisecond, (, ), {, return]
[}, public, long, getFirstMillisecond, (, ), {, return, this, ., firstMillisecond, ;, }, public, long, getLastMillisecond, (, ), {, return]
[public, long, getLastMillisecond, (, ), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {]
[public, long, getLastMillisecond, (, ), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {]
[), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =]
[return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (]
[lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;]
[lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;]
[void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;, this, ., lastMillisecond, =]
[(, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;, this, ., lastMillisecond, =, getLastMillisecond, (]
[), ;, this, ., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, if, (]
[), ;, this, ., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, if, (]
[), ;, this, ., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, if, (]
[lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, if, (, this, ., year, >]
[lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, if, (, this, ., year, >]
[;, }, public, RegularTimePeriod, previous, (, ), {, if, (, this, ., year, >, Year, ., MINIMUM_YEAR, ), {, return]
[RegularTimePeriod, previous, (, ), {, if, (, this, ., year, >, Year, ., MINIMUM_YEAR, ), {, return, new, Year, (]
[RegularTimePeriod, previous, (, ), {, if, (, this, ., year, >, Year, ., MINIMUM_YEAR, ), {, return, new, Year, (]
[RegularTimePeriod, previous, (, ), {, if, (, this, ., year, >, Year, ., MINIMUM_YEAR, ), {, return, new, Year, (]
[{, if, (, this, ., year, >, Year, ., MINIMUM_YEAR, ), {, return, new, Year, (, this, ., year, -]
[Year, ., MINIMUM_YEAR, ), {, return, new, Year, (, this, ., year, -, 1, ), ;, }, else, {, return]
[-, 1, ), ;, }, else, {, return, null, ;, }, }, public, RegularTimePeriod, next, (, ), {, if, (]
[-, 1, ), ;, }, else, {, return, null, ;, }, }, public, RegularTimePeriod, next, (, ), {, if, (]
[-, 1, ), ;, }, else, {, return, null, ;, }, }, public, RegularTimePeriod, next, (, ), {, if, (]
[}, else, {, return, null, ;, }, }, public, RegularTimePeriod, next, (, ), {, if, (, this, ., year, <]
[}, else, {, return, null, ;, }, }, public, RegularTimePeriod, next, (, ), {, if, (, this, ., year, <]
[}, }, public, RegularTimePeriod, next, (, ), {, if, (, this, ., year, <, Year, ., MAXIMUM_YEAR, ), {, return]
[RegularTimePeriod, next, (, ), {, if, (, this, ., year, <, Year, ., MAXIMUM_YEAR, ), {, return, new, Year, (]
[RegularTimePeriod, next, (, ), {, if, (, this, ., year, <, Year, ., MAXIMUM_YEAR, ), {, return, new, Year, (]
[RegularTimePeriod, next, (, ), {, if, (, this, ., year, <, Year, ., MAXIMUM_YEAR, ), {, return, new, Year, (]
[{, if, (, this, ., year, <, Year, ., MAXIMUM_YEAR, ), {, return, new, Year, (, this, ., year, +]
[Year, ., MAXIMUM_YEAR, ), {, return, new, Year, (, this, ., year, +, 1, ), ;, }, else, {, return]
[year, +, 1, ), ;, }, else, {, return, null, ;, }, }, public, long, getSerialIndex, (, ), {, return]
[year, +, 1, ), ;, }, else, {, return, null, ;, }, }, public, long, getSerialIndex, (, ), {, return]
[public, long, getSerialIndex, (, ), {, return, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {]
[public, long, getSerialIndex, (, ), {, return, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {]
[), {, return, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (]
[), {, return, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (]
[., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (, this, ., year, ,]
[., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (, this, ., year, ,]
[public, long, getFirstMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (, this, ., year, ,, Calendar, ., JANUARY, ,]
[getFirstMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (, this, ., year, ,, Calendar, ., JANUARY, ,, 1, ,]
[Calendar, calendar, ), {, calendar, ., set, (, this, ., year, ,, Calendar, ., JANUARY, ,, 1, ,, 0, ,]
[), {, calendar, ., set, (, this, ., year, ,, Calendar, ., JANUARY, ,, 1, ,, 0, ,, 0, ,]
[., set, (, this, ., year, ,, Calendar, ., JANUARY, ,, 1, ,, 0, ,, 0, ,, 0, ), ;]
[., set, (, this, ., year, ,, Calendar, ., JANUARY, ,, 1, ,, 0, ,, 0, ,, 0, ), ;]
[., year, ,, Calendar, ., JANUARY, ,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (]
[., year, ,, Calendar, ., JANUARY, ,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (]
[., JANUARY, ,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,]
[,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {]
[return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {]
[(, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (]
[(, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (]
[(, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (, this, ., year, ,]
[(, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (, this, ., year, ,]
[public, long, getLastMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (, this, ., year, ,, Calendar, ., DECEMBER, ,]
[getLastMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (, this, ., year, ,, Calendar, ., DECEMBER, ,, 31, ,]
[Calendar, calendar, ), {, calendar, ., set, (, this, ., year, ,, Calendar, ., DECEMBER, ,, 31, ,, 23, ,]
[), {, calendar, ., set, (, this, ., year, ,, Calendar, ., DECEMBER, ,, 31, ,, 23, ,, 59, ,]
[., set, (, this, ., year, ,, Calendar, ., DECEMBER, ,, 31, ,, 23, ,, 59, ,, 59, ), ;]
[., set, (, this, ., year, ,, Calendar, ., DECEMBER, ,, 31, ,, 23, ,, 59, ,, 59, ), ;]
[., year, ,, Calendar, ., DECEMBER, ,, 31, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (]
[., year, ,, Calendar, ., DECEMBER, ,, 31, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (]
[., DECEMBER, ,, 31, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,]
[,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[., getTime, (, ), ., getTime, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., getTime, (, ), ., getTime, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[(, ), ., getTime, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[(, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, Year, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, Year, ), ), {, return, false, ;, }, Year, that, =]
[if, (, !, (, obj, instanceof, Year, ), ), {, return, false, ;, }, Year, that, =, (, Year, )]
[(, obj, instanceof, Year, ), ), {, return, false, ;, }, Year, that, =, (, Year, ), obj, ;, return]
[obj, instanceof, Year, ), ), {, return, false, ;, }, Year, that, =, (, Year, ), obj, ;, return, (]
[obj, instanceof, Year, ), ), {, return, false, ;, }, Year, that, =, (, Year, ), obj, ;, return, (]
[obj, instanceof, Year, ), ), {, return, false, ;, }, Year, that, =, (, Year, ), obj, ;, return, (]
[), {, return, false, ;, }, Year, that, =, (, Year, ), obj, ;, return, (, this, ., year, ==]
[), {, return, false, ;, }, Year, that, =, (, Year, ), obj, ;, return, (, this, ., year, ==]
[(, this, ., year, ==, that, ., year, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[that, ., year, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, int, c, =]
[that, ., year, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, int, c, =]
[;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, int, c, =, this, ., year, ;]
[public, int, hashCode, (, ), {, int, result, =, 17, ;, int, c, =, this, ., year, ;, result, =]
[public, int, hashCode, (, ), {, int, result, =, 17, ;, int, c, =, this, ., year, ;, result, =]
[public, int, hashCode, (, ), {, int, result, =, 17, ;, int, c, =, this, ., year, ;, result, =]
[hashCode, (, ), {, int, result, =, 17, ;, int, c, =, this, ., year, ;, result, =, 37, *]
[), {, int, result, =, 17, ;, int, c, =, this, ., year, ;, result, =, 37, *, result, +]
[result, =, 17, ;, int, c, =, this, ., year, ;, result, =, 37, *, result, +, c, ;, return]
[+, c, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (]
[+, c, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (]
[int, compareTo, (, Object, o1, ), {, int, result, ;, if, (, o1, instanceof, Year, ), {, Year, y, =]
[Object, o1, ), {, int, result, ;, if, (, o1, instanceof, Year, ), {, Year, y, =, (, Year, )]
[), {, int, result, ;, if, (, o1, instanceof, Year, ), {, Year, y, =, (, Year, ), o1, ;]
[int, result, ;, if, (, o1, instanceof, Year, ), {, Year, y, =, (, Year, ), o1, ;, result, =]
[int, result, ;, if, (, o1, instanceof, Year, ), {, Year, y, =, (, Year, ), o1, ;, result, =]
[int, result, ;, if, (, o1, instanceof, Year, ), {, Year, y, =, (, Year, ), o1, ;, result, =]
[(, o1, instanceof, Year, ), {, Year, y, =, (, Year, ), o1, ;, result, =, this, ., year, -]
[(, o1, instanceof, Year, ), {, Year, y, =, (, Year, ), o1, ;, result, =, this, ., year, -]
[Year, ), o1, ;, result, =, this, ., year, -, y, ., getYear, (, ), ;, }, else, if, (]
[Year, ), o1, ;, result, =, this, ., year, -, y, ., getYear, (, ), ;, }, else, if, (]
[=, this, ., year, -, y, ., getYear, (, ), ;, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {]
[., year, -, y, ., getYear, (, ), ;, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =]
[getYear, (, ), ;, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {]
[), ;, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =]
[if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =, 1, ;, }, return]
[;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return]
[;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return]
[result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return, Integer, ., toString, (]
[result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return, Integer, ., toString, (]
[this, ., year, ), ;, }, public, static, Year, parseYear, (, String, s, ), {, int, y, ;, try, {]
[year, ), ;, }, public, static, Year, parseYear, (, String, s, ), {, int, y, ;, try, {, y, =]
[year, ), ;, }, public, static, Year, parseYear, (, String, s, ), {, int, y, ;, try, {, y, =]
[public, static, Year, parseYear, (, String, s, ), {, int, y, ;, try, {, y, =, Integer, ., parseInt, (]
[public, static, Year, parseYear, (, String, s, ), {, int, y, ;, try, {, y, =, Integer, ., parseInt, (]
[=, Integer, ., parseInt, (, s, ., trim, (, ), ), ;, }, catch, (, NumberFormatException, e, ), {, throw]
[parseInt, (, s, ., trim, (, ), ), ;, }, catch, (, NumberFormatException, e, ), {, throw, new, TimePeriodFormatException, (]
[), ;, }, catch, (, NumberFormatException, e, ), {, throw, new, TimePeriodFormatException, (, "Cannot parse string.", ), ;, }, try, {, return]
[catch, (, NumberFormatException, e, ), {, throw, new, TimePeriodFormatException, (, "Cannot parse string.", ), ;, }, try, {, return, new, Year, (]
[), ;, }, try, {, return, new, Year, (, y, ), ;, }, catch, (, IllegalArgumentException, e, ), {, throw]
[try, {, return, new, Year, (, y, ), ;, }, catch, (, IllegalArgumentException, e, ), {, throw, new, TimePeriodFormatException, (]
