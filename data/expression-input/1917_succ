[;, private, final, String, iEraText, ;, BasicSingleEraDateTimeField, (, String, text, ), {, super, (, DateTimeFieldType, ., era, (, ), )]
[., CE, ;, private, final, String, iEraText, ;, BasicSingleEraDateTimeField, (, String, text, ), {, super, (, DateTimeFieldType, ., era, (]
[), ;, iEraText, =, text, ;, }, public, boolean, isLenient, (, ), {, return, false, ;, }, public, int, get]
[., era, (, ), ), ;, iEraText, =, text, ;, }, public, boolean, isLenient, (, ), {, return, false, ;]
[=, text, ;, }, public, boolean, isLenient, (, ), {, return, false, ;, }, public, int, get, (, long, instant]
[;, }, public, boolean, isLenient, (, ), {, return, false, ;, }, public, int, get, (, long, instant, ), {]
[;, }, public, int, get, (, long, instant, ), {, return, ERA_VALUE, ;, }, public, long, set, (, long, instant]
[;, }, public, long, set, (, long, instant, ,, int, era, ), {, FieldUtils, ., verifyValueBounds, (, this, ,, era]
[;, return, instant, ;, }, public, long, set, (, long, instant, ,, String, text, ,, Locale, locale, ), {, if]
[., verifyValueBounds, (, this, ,, era, ,, ERA_VALUE, ,, ERA_VALUE, ), ;, return, instant, ;, }, public, long, set, (]
[,, era, ,, ERA_VALUE, ,, ERA_VALUE, ), ;, return, instant, ;, }, public, long, set, (, long, instant, ,, String]
[,, ERA_VALUE, ,, ERA_VALUE, ), ;, return, instant, ;, }, public, long, set, (, long, instant, ,, String, text, ,]
[,, ERA_VALUE, ), ;, return, instant, ;, }, public, long, set, (, long, instant, ,, String, text, ,, Locale, locale]
[), ;, return, instant, ;, }, public, long, set, (, long, instant, ,, String, text, ,, Locale, locale, ), {]
[;, }, public, long, set, (, long, instant, ,, String, text, ,, Locale, locale, ), {, if, (, iEraText, .]
[), {, throw, new, IllegalFieldValueException, (, DateTimeFieldType, ., era, (, ), ,, text, ), ;, }, return, instant, ;, }]
[&&, "1", ., equals, (, text, ), ==, false, ), {, throw, new, IllegalFieldValueException, (, DateTimeFieldType, ., era, (, )]
[==, false, &&, "1", ., equals, (, text, ), ==, false, ), {, throw, new, IllegalFieldValueException, (, DateTimeFieldType, ., era]
[., equals, (, text, ), ==, false, &&, "1", ., equals, (, text, ), ==, false, ), {, throw, new]
[), ==, false, &&, "1", ., equals, (, text, ), ==, false, ), {, throw, new, IllegalFieldValueException, (, DateTimeFieldType, .]
[&&, "1", ., equals, (, text, ), ==, false, ), {, throw, new, IllegalFieldValueException, (, DateTimeFieldType, ., era, (, )]
[), {, throw, new, IllegalFieldValueException, (, DateTimeFieldType, ., era, (, ), ,, text, ), ;, }, return, instant, ;, }]
[==, false, ), {, throw, new, IllegalFieldValueException, (, DateTimeFieldType, ., era, (, ), ,, text, ), ;, }, return, instant]
[., equals, (, text, ), ==, false, ), {, throw, new, IllegalFieldValueException, (, DateTimeFieldType, ., era, (, ), ,, text]
[), ==, false, ), {, throw, new, IllegalFieldValueException, (, DateTimeFieldType, ., era, (, ), ,, text, ), ;, }, return]
[), {, throw, new, IllegalFieldValueException, (, DateTimeFieldType, ., era, (, ), ,, text, ), ;, }, return, instant, ;, }]
[;, }, return, instant, ;, }, public, long, roundFloor, (, long, instant, ), {, return, Long, ., MIN_VALUE, ;, }]
[,, text, ), ;, }, return, instant, ;, }, public, long, roundFloor, (, long, instant, ), {, return, Long, .]
[., era, (, ), ,, text, ), ;, }, return, instant, ;, }, public, long, roundFloor, (, long, instant, )]
[), ;, }, return, instant, ;, }, public, long, roundFloor, (, long, instant, ), {, return, Long, ., MIN_VALUE, ;]
[;, }, public, long, roundFloor, (, long, instant, ), {, return, Long, ., MIN_VALUE, ;, }, public, long, roundCeiling, (]
[;, }, public, long, roundCeiling, (, long, instant, ), {, return, Long, ., MAX_VALUE, ;, }, public, long, roundHalfFloor, (]
[., MIN_VALUE, ;, }, public, long, roundCeiling, (, long, instant, ), {, return, Long, ., MAX_VALUE, ;, }, public, long]
[;, }, public, long, roundHalfFloor, (, long, instant, ), {, return, Long, ., MIN_VALUE, ;, }, public, long, roundHalfCeiling, (]
[., MAX_VALUE, ;, }, public, long, roundHalfFloor, (, long, instant, ), {, return, Long, ., MIN_VALUE, ;, }, public, long]
[;, }, public, long, roundHalfCeiling, (, long, instant, ), {, return, Long, ., MIN_VALUE, ;, }, public, long, roundHalfEven, (]
[., MIN_VALUE, ;, }, public, long, roundHalfCeiling, (, long, instant, ), {, return, Long, ., MIN_VALUE, ;, }, public, long]
[;, }, public, long, roundHalfEven, (, long, instant, ), {, return, Long, ., MIN_VALUE, ;, }, public, DurationField, getDurationField, (]
[., MIN_VALUE, ;, }, public, long, roundHalfEven, (, long, instant, ), {, return, Long, ., MIN_VALUE, ;, }, public, DurationField]
[;, }, public, DurationField, getDurationField, (, ), {, return, UnsupportedDurationField, ., getInstance, (, DurationFieldType, ., eras, (, ), ), ;]
[., MIN_VALUE, ;, }, public, DurationField, getDurationField, (, ), {, return, UnsupportedDurationField, ., getInstance, (, DurationFieldType, ., eras, (, )]
[;, }, public, DurationField, getRangeDurationField, (, ), {, return, null, ;, }, public, int, getMinimumValue, (, ), {, return, ERA_VALUE]
[., getInstance, (, DurationFieldType, ., eras, (, ), ), ;, }, public, DurationField, getRangeDurationField, (, ), {, return, null, ;]
[), ;, }, public, DurationField, getRangeDurationField, (, ), {, return, null, ;, }, public, int, getMinimumValue, (, ), {, return]
[., eras, (, ), ), ;, }, public, DurationField, getRangeDurationField, (, ), {, return, null, ;, }, public, int, getMinimumValue]
[;, }, public, int, getMinimumValue, (, ), {, return, ERA_VALUE, ;, }, public, int, getMaximumValue, (, ), {, return, ERA_VALUE]
[;, }, public, int, getMaximumValue, (, ), {, return, ERA_VALUE, ;, }, public, String, getAsText, (, int, fieldValue, ,, Locale]
[;, }, public, String, getAsText, (, int, fieldValue, ,, Locale, locale, ), {, return, iEraText, ;, }, public, int, getMaximumTextLength]
[;, }, public, int, getMaximumTextLength, (, Locale, locale, ), {, return, iEraText, ., length, (, ), ;, }, }]
[;, }, }]
[., length, (, ), ;, }, }]
