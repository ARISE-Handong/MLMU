[;, private, static, final, String, E, =, "E", ;, private, static, final, String, S, =, "S", ;, private, static, final]
[;, private, static, final, String, S, =, "S", ;, private, static, final, String, W, =, "W", ;, public, static, final]
[;, private, static, final, String, W, =, "W", ;, public, static, final, String, [, ], DIRECTIONS, =, {, N, ,]
[;, public, static, final, String, [, ], DIRECTIONS, =, {, N, ,, N, +, N, +, E, ,, N, +]
[;, public, CompassFormat, (, ), {, super, (, ), ;, }, public, String, getDirectionCode, (, double, direction, ), {, direction]
[,, N, +, N, +, E, ,, N, +, E, ,, E, +, N, +, E, ,, E, ,, E]
[,, N, +, E, ,, E, +, N, +, E, ,, E, ,, E, +, S, +, E, ,, S]
[+, E, ,, N, +, E, ,, E, +, N, +, E, ,, E, ,, E, +, S, +, E]
[+, N, +, E, ,, N, +, E, ,, E, +, N, +, E, ,, E, ,, E, +, S]
[+, E, ,, N, +, E, ,, E, +, N, +, E, ,, E, ,, E, +, S, +, E]
[,, N, +, E, ,, E, +, N, +, E, ,, E, ,, E, +, S, +, E, ,, S]
[,, E, +, N, +, E, ,, E, ,, E, +, S, +, E, ,, S, +, E, ,, S]
[+, E, ,, E, +, N, +, E, ,, E, ,, E, +, S, +, E, ,, S, +, E]
[,, E, +, N, +, E, ,, E, ,, E, +, S, +, E, ,, S, +, E, ,, S]
[,, E, ,, E, +, S, +, E, ,, S, +, E, ,, S, +, S, +, E, ,, S]
[+, E, ,, E, ,, E, +, S, +, E, ,, S, +, E, ,, S, +, S, +, E]
[+, N, +, E, ,, E, ,, E, +, S, +, E, ,, S, +, E, ,, S, +, S]
[+, E, ,, E, ,, E, +, S, +, E, ,, S, +, E, ,, S, +, S, +, E]
[,, E, ,, E, +, S, +, E, ,, S, +, E, ,, S, +, S, +, E, ,, S]
[,, E, +, S, +, E, ,, S, +, E, ,, S, +, S, +, E, ,, S, ,, S]
[,, S, +, E, ,, S, +, S, +, E, ,, S, ,, S, +, S, +, W, ,, S]
[+, E, ,, S, +, E, ,, S, +, S, +, E, ,, S, ,, S, +, S, +, W]
[+, S, +, E, ,, S, +, E, ,, S, +, S, +, E, ,, S, ,, S, +, S]
[+, E, ,, S, +, E, ,, S, +, S, +, E, ,, S, ,, S, +, S, +, W]
[,, S, +, E, ,, S, +, S, +, E, ,, S, ,, S, +, S, +, W, ,, S]
[,, S, +, S, +, E, ,, S, ,, S, +, S, +, W, ,, S, +, W, ,, W]
[+, E, ,, S, +, S, +, E, ,, S, ,, S, +, S, +, W, ,, S, +, W]
[,, S, +, S, +, E, ,, S, ,, S, +, S, +, W, ,, S, +, W, ,, W]
[,, S, ,, S, +, S, +, W, ,, S, +, W, ,, W, +, S, +, W, ,, W]
[+, E, ,, S, ,, S, +, S, +, W, ,, S, +, W, ,, W, +, S, +, W]
[+, S, +, E, ,, S, ,, S, +, S, +, W, ,, S, +, W, ,, W, +, S]
[+, E, ,, S, ,, S, +, S, +, W, ,, S, +, W, ,, W, +, S, +, W]
[,, S, ,, S, +, S, +, W, ,, S, +, W, ,, W, +, S, +, W, ,, W]
[,, S, +, S, +, W, ,, S, +, W, ,, W, +, S, +, W, ,, W, ,, W]
[,, S, +, W, ,, W, +, S, +, W, ,, W, ,, W, +, N, +, W, ,, N]
[+, W, ,, S, +, W, ,, W, +, S, +, W, ,, W, ,, W, +, N, +, W]
[+, S, +, W, ,, S, +, W, ,, W, +, S, +, W, ,, W, ,, W, +, N]
[+, W, ,, S, +, W, ,, W, +, S, +, W, ,, W, ,, W, +, N, +, W]
[,, S, +, W, ,, W, +, S, +, W, ,, W, ,, W, +, N, +, W, ,, N]
[,, W, +, S, +, W, ,, W, ,, W, +, N, +, W, ,, N, +, W, ,, N]
[+, W, ,, W, +, S, +, W, ,, W, ,, W, +, N, +, W, ,, N, +, W]
[,, W, +, S, +, W, ,, W, ,, W, +, N, +, W, ,, N, +, W, ,, N]
[,, W, ,, W, +, N, +, W, ,, N, +, W, ,, N, +, N, +, W, ,, N]
[+, W, ,, W, ,, W, +, N, +, W, ,, N, +, W, ,, N, +, N, +, W]
[+, S, +, W, ,, W, ,, W, +, N, +, W, ,, N, +, W, ,, N, +, N]
[+, W, ,, W, ,, W, +, N, +, W, ,, N, +, W, ,, N, +, N, +, W]
[,, W, ,, W, +, N, +, W, ,, N, +, W, ,, N, +, N, +, W, ,, N]
[,, W, +, N, +, W, ,, N, +, W, ,, N, +, N, +, W, ,, N, }, ;]
[,, N, +, W, ,, N, +, N, +, W, ,, N, }, ;, public, CompassFormat, (, ), {, super]
[+, W, ,, N, +, W, ,, N, +, N, +, W, ,, N, }, ;, public, CompassFormat, (, )]
[+, N, +, W, ,, N, +, W, ,, N, +, N, +, W, ,, N, }, ;, public, CompassFormat]
[+, W, ,, N, +, W, ,, N, +, N, +, W, ,, N, }, ;, public, CompassFormat, (, )]
[,, N, +, W, ,, N, +, N, +, W, ,, N, }, ;, public, CompassFormat, (, ), {, super]
[,, N, +, N, +, W, ,, N, }, ;, public, CompassFormat, (, ), {, super, (, ), ;, }]
[+, W, ,, N, +, N, +, W, ,, N, }, ;, public, CompassFormat, (, ), {, super, (, )]
[,, N, +, N, +, W, ,, N, }, ;, public, CompassFormat, (, ), {, super, (, ), ;, }]
[,, N, }, ;, public, CompassFormat, (, ), {, super, (, ), ;, }, public, String, getDirectionCode, (, double, direction]
[+, W, ,, N, }, ;, public, CompassFormat, (, ), {, super, (, ), ;, }, public, String, getDirectionCode, (]
[+, N, +, W, ,, N, }, ;, public, CompassFormat, (, ), {, super, (, ), ;, }, public, String]
[+, W, ,, N, }, ;, public, CompassFormat, (, ), {, super, (, ), ;, }, public, String, getDirectionCode, (]
[,, N, }, ;, public, CompassFormat, (, ), {, super, (, ), ;, }, public, String, getDirectionCode, (, double, direction]
[}, ;, public, CompassFormat, (, ), {, super, (, ), ;, }, public, String, getDirectionCode, (, double, direction, ), {]
[=, direction, %, 360, ;, if, (, direction, <, 0.0, ), {, direction, =, direction, +, 360.0, ;, }, int]
[;, if, (, direction, <, 0.0, ), {, direction, =, direction, +, 360.0, ;, }, int, index, =, (, (]
[%, 360, ;, if, (, direction, <, 0.0, ), {, direction, =, direction, +, 360.0, ;, }, int, index, =]
[;, if, (, direction, <, 0.0, ), {, direction, =, direction, +, 360.0, ;, }, int, index, =, (, (]
[), {, direction, =, direction, +, 360.0, ;, }, int, index, =, (, (, int, ), Math, ., floor, (]
[<, 0.0, ), {, direction, =, direction, +, 360.0, ;, }, int, index, =, (, (, int, ), Math, .]
[), {, direction, =, direction, +, 360.0, ;, }, int, index, =, (, (, int, ), Math, ., floor, (]
[=, direction, +, 360.0, ;, }, int, index, =, (, (, int, ), Math, ., floor, (, direction, /, 11.25]
[;, }, int, index, =, (, (, int, ), Math, ., floor, (, direction, /, 11.25, ), +, 1, )]
[+, 360.0, ;, }, int, index, =, (, (, int, ), Math, ., floor, (, direction, /, 11.25, ), +]
[;, }, int, index, =, (, (, int, ), Math, ., floor, (, direction, /, 11.25, ), +, 1, )]
[;, return, DIRECTIONS, [, index, ], ;, }, public, StringBuffer, format, (, double, number, ,, StringBuffer, toAppendTo, ,, FieldPosition, pos]
[/, 2, ;, return, DIRECTIONS, [, index, ], ;, }, public, StringBuffer, format, (, double, number, ,, StringBuffer, toAppendTo, ,]
[), /, 2, ;, return, DIRECTIONS, [, index, ], ;, }, public, StringBuffer, format, (, double, number, ,, StringBuffer, toAppendTo]
[+, 1, ), /, 2, ;, return, DIRECTIONS, [, index, ], ;, }, public, StringBuffer, format, (, double, number, ,]
[+, 1, ), /, 2, ;, return, DIRECTIONS, [, index, ], ;, }, public, StringBuffer, format, (, double, number, ,]
[., floor, (, direction, /, 11.25, ), +, 1, ), /, 2, ;, return, DIRECTIONS, [, index, ], ;, }]
[), +, 1, ), /, 2, ;, return, DIRECTIONS, [, index, ], ;, }, public, StringBuffer, format, (, double, number]
[/, 11.25, ), +, 1, ), /, 2, ;, return, DIRECTIONS, [, index, ], ;, }, public, StringBuffer, format, (]
[), +, 1, ), /, 2, ;, return, DIRECTIONS, [, index, ], ;, }, public, StringBuffer, format, (, double, number]
[), /, 2, ;, return, DIRECTIONS, [, index, ], ;, }, public, StringBuffer, format, (, double, number, ,, StringBuffer, toAppendTo]
[;, return, DIRECTIONS, [, index, ], ;, }, public, StringBuffer, format, (, double, number, ,, StringBuffer, toAppendTo, ,, FieldPosition, pos]
[;, }, public, StringBuffer, format, (, double, number, ,, StringBuffer, toAppendTo, ,, FieldPosition, pos, ), {, return, toAppendTo, ., append]
[[, index, ], ;, }, public, StringBuffer, format, (, double, number, ,, StringBuffer, toAppendTo, ,, FieldPosition, pos, ), {, return]
[], ;, }, public, StringBuffer, format, (, double, number, ,, StringBuffer, toAppendTo, ,, FieldPosition, pos, ), {, return, toAppendTo, .]
[;, }, public, StringBuffer, format, (, long, number, ,, StringBuffer, toAppendTo, ,, FieldPosition, pos, ), {, return, toAppendTo, ., append]
[., append, (, getDirectionCode, (, number, ), ), ;, }, public, StringBuffer, format, (, long, number, ,, StringBuffer, toAppendTo, ,]
[), ;, }, public, StringBuffer, format, (, long, number, ,, StringBuffer, toAppendTo, ,, FieldPosition, pos, ), {, return, toAppendTo, .]
[), ), ;, }, public, StringBuffer, format, (, long, number, ,, StringBuffer, toAppendTo, ,, FieldPosition, pos, ), {, return, toAppendTo]
[;, }, public, Number, parse, (, String, source, ,, ParsePosition, parsePosition, ), {, return, null, ;, }, }]
[., append, (, getDirectionCode, (, number, ), ), ;, }, public, Number, parse, (, String, source, ,, ParsePosition, parsePosition, )]
[), ;, }, public, Number, parse, (, String, source, ,, ParsePosition, parsePosition, ), {, return, null, ;, }, }]
[), ), ;, }, public, Number, parse, (, String, source, ,, ParsePosition, parsePosition, ), {, return, null, ;, }, }]
[;, }, }]
