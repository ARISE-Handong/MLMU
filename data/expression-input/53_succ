[;, public, static, final, Minutes, ONE, =, new, Minutes, (, 1, ), ;, public, static, final, Minutes, TWO, =, new]
[), ;, public, static, final, Minutes, ONE, =, new, Minutes, (, 1, ), ;, public, static, final, Minutes, TWO, =]
[;, public, static, final, Minutes, TWO, =, new, Minutes, (, 2, ), ;, public, static, final, Minutes, THREE, =, new]
[), ;, public, static, final, Minutes, TWO, =, new, Minutes, (, 2, ), ;, public, static, final, Minutes, THREE, =]
[;, public, static, final, Minutes, THREE, =, new, Minutes, (, 3, ), ;, public, static, final, Minutes, MAX_VALUE, =, new]
[), ;, public, static, final, Minutes, THREE, =, new, Minutes, (, 3, ), ;, public, static, final, Minutes, MAX_VALUE, =]
[;, public, static, final, Minutes, MAX_VALUE, =, new, Minutes, (, Integer, ., MAX_VALUE, ), ;, public, static, final, Minutes, MIN_VALUE]
[), ;, public, static, final, Minutes, MAX_VALUE, =, new, Minutes, (, Integer, ., MAX_VALUE, ), ;, public, static, final, Minutes]
[;, public, static, final, Minutes, MIN_VALUE, =, new, Minutes, (, Integer, ., MIN_VALUE, ), ;, private, static, final, PeriodFormatter, PARSER]
[), ;, public, static, final, Minutes, MIN_VALUE, =, new, Minutes, (, Integer, ., MIN_VALUE, ), ;, private, static, final, PeriodFormatter]
[., MAX_VALUE, ), ;, public, static, final, Minutes, MIN_VALUE, =, new, Minutes, (, Integer, ., MIN_VALUE, ), ;, private, static]
[;, private, static, final, PeriodFormatter, PARSER, =, ISOPeriodFormat, ., standard, (, ), ., withParseType, (, PeriodType, ., minutes, (, )]
[), ;, private, static, final, PeriodFormatter, PARSER, =, ISOPeriodFormat, ., standard, (, ), ., withParseType, (, PeriodType, ., minutes, (]
[., MIN_VALUE, ), ;, private, static, final, PeriodFormatter, PARSER, =, ISOPeriodFormat, ., standard, (, ), ., withParseType, (, PeriodType, .]
[;, private, static, final, long, serialVersionUID, =, 87525275727380863L, ;, public, static, Minutes, minutes, (, int, minutes, ), {, switch, (]
[., withParseType, (, PeriodType, ., minutes, (, ), ), ;, private, static, final, long, serialVersionUID, =, 87525275727380863L, ;, public, static]
[., standard, (, ), ., withParseType, (, PeriodType, ., minutes, (, ), ), ;, private, static, final, long, serialVersionUID, =]
[), ;, private, static, final, long, serialVersionUID, =, 87525275727380863L, ;, public, static, Minutes, minutes, (, int, minutes, ), {, switch]
[., minutes, (, ), ), ;, private, static, final, long, serialVersionUID, =, 87525275727380863L, ;, public, static, Minutes, minutes, (, int]
[;, public, static, Minutes, minutes, (, int, minutes, ), {, switch, (, minutes, ), {, case, 0, :, return, ZERO]
[), {, case, 0, :, return, ZERO, ;, case, 1, :, return, ONE, ;, case, 2, :, return, TWO, ;]
[:, return, ZERO, ;, case, 1, :, return, ONE, ;, case, 2, :, return, TWO, ;, case, 3, :, return]
[;, case, 1, :, return, ONE, ;, case, 2, :, return, TWO, ;, case, 3, :, return, THREE, ;, case]
[:, return, ONE, ;, case, 2, :, return, TWO, ;, case, 3, :, return, THREE, ;, case, Integer, ., MAX_VALUE]
[;, case, 2, :, return, TWO, ;, case, 3, :, return, THREE, ;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE]
[:, return, TWO, ;, case, 3, :, return, THREE, ;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer]
[;, case, 3, :, return, THREE, ;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :]
[:, return, THREE, ;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;]
[;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return]
[:, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return, new, Minutes, (, minutes, )]
[., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return, new, Minutes, (]
[;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return, new, Minutes, (, minutes, ), ;, }, }]
[:, return, MIN_VALUE, ;, default, :, return, new, Minutes, (, minutes, ), ;, }, }, public, static, Minutes, minutesBetween, (]
[., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return, new, Minutes, (, minutes, ), ;, }, }, public, static, Minutes]
[;, default, :, return, new, Minutes, (, minutes, ), ;, }, }, public, static, Minutes, minutesBetween, (, ReadableInstant, start, ,]
[;, }, }, public, static, Minutes, minutesBetween, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, int, amount, =, BaseSingleFieldPeriod, .]
[), ;, }, }, public, static, Minutes, minutesBetween, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, int, amount, =, BaseSingleFieldPeriod]
[;, return, Minutes, ., minutes, (, amount, ), ;, }, public, static, Minutes, minutesBetween, (, ReadablePartial, start, ,, ReadablePartial, end]
[., between, (, start, ,, end, ,, DurationFieldType, ., minutes, (, ), ), ;, return, Minutes, ., minutes, (, amount]
[,, end, ,, DurationFieldType, ., minutes, (, ), ), ;, return, Minutes, ., minutes, (, amount, ), ;, }, public]
[,, DurationFieldType, ., minutes, (, ), ), ;, return, Minutes, ., minutes, (, amount, ), ;, }, public, static, Minutes]
[), ;, return, Minutes, ., minutes, (, amount, ), ;, }, public, static, Minutes, minutesBetween, (, ReadablePartial, start, ,, ReadablePartial]
[., minutes, (, ), ), ;, return, Minutes, ., minutes, (, amount, ), ;, }, public, static, Minutes, minutesBetween, (]
[;, }, public, static, Minutes, minutesBetween, (, ReadablePartial, start, ,, ReadablePartial, end, ), {, if, (, start, instanceof, LocalTime, &&]
[., minutes, (, amount, ), ;, }, public, static, Minutes, minutesBetween, (, ReadablePartial, start, ,, ReadablePartial, end, ), {, if]
[), ;, }, public, static, Minutes, minutesBetween, (, ReadablePartial, start, ,, ReadablePartial, end, ), {, if, (, start, instanceof, LocalTime]
[), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ;, int, minutes, =, chrono]
[&&, end, instanceof, LocalTime, ), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ;]
[instanceof, LocalTime, &&, end, instanceof, LocalTime, ), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, )]
[), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ;, int, minutes, =, chrono]
[instanceof, LocalTime, ), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ;, int, minutes]
[;, int, minutes, =, chrono, ., minutes, (, ), ., getDifference, (, (, (, LocalTime, ), end, ), ., getLocalMillis]
[., getChronology, (, start, ., getChronology, (, ), ), ;, int, minutes, =, chrono, ., minutes, (, ), ., getDifference]
[), ;, int, minutes, =, chrono, ., minutes, (, ), ., getDifference, (, (, (, LocalTime, ), end, ), .]
[., getChronology, (, ), ), ;, int, minutes, =, chrono, ., minutes, (, ), ., getDifference, (, (, (, LocalTime]
[;, return, Minutes, ., minutes, (, minutes, ), ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,, end]
[., getDifference, (, (, (, LocalTime, ), end, ), ., getLocalMillis, (, ), ,, (, (, LocalTime, ), start, )]
[., minutes, (, ), ., getDifference, (, (, (, LocalTime, ), end, ), ., getLocalMillis, (, ), ,, (, (]
[,, (, (, LocalTime, ), start, ), ., getLocalMillis, (, ), ), ;, return, Minutes, ., minutes, (, minutes, )]
[., getLocalMillis, (, ), ,, (, (, LocalTime, ), start, ), ., getLocalMillis, (, ), ), ;, return, Minutes, .]
[), ., getLocalMillis, (, ), ,, (, (, LocalTime, ), start, ), ., getLocalMillis, (, ), ), ;, return, Minutes]
[), ., getLocalMillis, (, ), ,, (, (, LocalTime, ), start, ), ., getLocalMillis, (, ), ), ;, return, Minutes]
[), ;, return, Minutes, ., minutes, (, minutes, ), ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,]
[., getLocalMillis, (, ), ), ;, return, Minutes, ., minutes, (, minutes, ), ;, }, int, amount, =, BaseSingleFieldPeriod, .]
[), ., getLocalMillis, (, ), ), ;, return, Minutes, ., minutes, (, minutes, ), ;, }, int, amount, =, BaseSingleFieldPeriod]
[), ., getLocalMillis, (, ), ), ;, return, Minutes, ., minutes, (, minutes, ), ;, }, int, amount, =, BaseSingleFieldPeriod]
[;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,, end, ,, ZERO, ), ;, return, Minutes, ., minutes]
[., minutes, (, minutes, ), ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,, end, ,, ZERO, )]
[), ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,, end, ,, ZERO, ), ;, return, Minutes, .]
[;, return, Minutes, ., minutes, (, amount, ), ;, }, public, static, Minutes, minutesIn, (, ReadableInterval, interval, ), {, if]
[., between, (, start, ,, end, ,, ZERO, ), ;, return, Minutes, ., minutes, (, amount, ), ;, }, public]
[,, end, ,, ZERO, ), ;, return, Minutes, ., minutes, (, amount, ), ;, }, public, static, Minutes, minutesIn, (]
[,, ZERO, ), ;, return, Minutes, ., minutes, (, amount, ), ;, }, public, static, Minutes, minutesIn, (, ReadableInterval, interval]
[), ;, return, Minutes, ., minutes, (, amount, ), ;, }, public, static, Minutes, minutesIn, (, ReadableInterval, interval, ), {]
[;, }, public, static, Minutes, minutesIn, (, ReadableInterval, interval, ), {, if, (, interval, ==, null, ), {, return, Minutes]
[., minutes, (, amount, ), ;, }, public, static, Minutes, minutesIn, (, ReadableInterval, interval, ), {, if, (, interval, ==]
[), ;, }, public, static, Minutes, minutesIn, (, ReadableInterval, interval, ), {, if, (, interval, ==, null, ), {, return]
[), {, return, Minutes, ., ZERO, ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart, (, )]
[==, null, ), {, return, Minutes, ., ZERO, ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart]
[), {, return, Minutes, ., ZERO, ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart, (, )]
[;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart, (, ), ,, interval, ., getEnd, (, )]
[., ZERO, ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart, (, ), ,, interval, ., getEnd]
[;, return, Minutes, ., minutes, (, amount, ), ;, }, public, static, Minutes, standardMinutesIn, (, ReadablePeriod, period, ), {, int]
[., between, (, interval, ., getStart, (, ), ,, interval, ., getEnd, (, ), ,, DurationFieldType, ., minutes, (, )]
[,, interval, ., getEnd, (, ), ,, DurationFieldType, ., minutes, (, ), ), ;, return, Minutes, ., minutes, (, amount]
[., getStart, (, ), ,, interval, ., getEnd, (, ), ,, DurationFieldType, ., minutes, (, ), ), ;, return, Minutes]
[,, DurationFieldType, ., minutes, (, ), ), ;, return, Minutes, ., minutes, (, amount, ), ;, }, public, static, Minutes]
[., getEnd, (, ), ,, DurationFieldType, ., minutes, (, ), ), ;, return, Minutes, ., minutes, (, amount, ), ;]
[), ;, return, Minutes, ., minutes, (, amount, ), ;, }, public, static, Minutes, standardMinutesIn, (, ReadablePeriod, period, ), {]
[., minutes, (, ), ), ;, return, Minutes, ., minutes, (, amount, ), ;, }, public, static, Minutes, standardMinutesIn, (]
[;, }, public, static, Minutes, standardMinutesIn, (, ReadablePeriod, period, ), {, int, amount, =, BaseSingleFieldPeriod, ., standardPeriodIn, (, period, ,]
[., minutes, (, amount, ), ;, }, public, static, Minutes, standardMinutesIn, (, ReadablePeriod, period, ), {, int, amount, =, BaseSingleFieldPeriod]
[), ;, }, public, static, Minutes, standardMinutesIn, (, ReadablePeriod, period, ), {, int, amount, =, BaseSingleFieldPeriod, ., standardPeriodIn, (, period]
[;, return, Minutes, ., minutes, (, amount, ), ;, }, @, FromString, public, static, Minutes, parseMinutes, (, String, periodStr, )]
[., standardPeriodIn, (, period, ,, DateTimeConstants, ., MILLIS_PER_MINUTE, ), ;, return, Minutes, ., minutes, (, amount, ), ;, }, @]
[,, DateTimeConstants, ., MILLIS_PER_MINUTE, ), ;, return, Minutes, ., minutes, (, amount, ), ;, }, @, FromString, public, static, Minutes]
[), ;, return, Minutes, ., minutes, (, amount, ), ;, }, @, FromString, public, static, Minutes, parseMinutes, (, String, periodStr]
[., MILLIS_PER_MINUTE, ), ;, return, Minutes, ., minutes, (, amount, ), ;, }, @, FromString, public, static, Minutes, parseMinutes, (]
[;, }, @, FromString, public, static, Minutes, parseMinutes, (, String, periodStr, ), {, if, (, periodStr, ==, null, ), {]
[., minutes, (, amount, ), ;, }, @, FromString, public, static, Minutes, parseMinutes, (, String, periodStr, ), {, if, (]
[), ;, }, @, FromString, public, static, Minutes, parseMinutes, (, String, periodStr, ), {, if, (, periodStr, ==, null, )]
[), {, return, Minutes, ., ZERO, ;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;, return, Minutes]
[==, null, ), {, return, Minutes, ., ZERO, ;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;]
[), {, return, Minutes, ., ZERO, ;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;, return, Minutes]
[;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;, return, Minutes, ., minutes, (, p, ., getMinutes]
[., ZERO, ;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;, return, Minutes, ., minutes, (, p]
[;, return, Minutes, ., minutes, (, p, ., getMinutes, (, ), ), ;, }, private, Minutes, (, int, minutes, )]
[., parsePeriod, (, periodStr, ), ;, return, Minutes, ., minutes, (, p, ., getMinutes, (, ), ), ;, }, private]
[), ;, return, Minutes, ., minutes, (, p, ., getMinutes, (, ), ), ;, }, private, Minutes, (, int, minutes]
[;, }, private, Minutes, (, int, minutes, ), {, super, (, minutes, ), ;, }, private, Object, readResolve, (, )]
[., minutes, (, p, ., getMinutes, (, ), ), ;, }, private, Minutes, (, int, minutes, ), {, super, (]
[), ;, }, private, Minutes, (, int, minutes, ), {, super, (, minutes, ), ;, }, private, Object, readResolve, (]
[., getMinutes, (, ), ), ;, }, private, Minutes, (, int, minutes, ), {, super, (, minutes, ), ;, }]
[), ;, }, private, Object, readResolve, (, ), {, return, Minutes, ., minutes, (, getValue, (, ), ), ;, }]
[;, }, public, DurationFieldType, getFieldType, (, ), {, return, DurationFieldType, ., minutes, (, ), ;, }, public, PeriodType, getPeriodType, (]
[., minutes, (, getValue, (, ), ), ;, }, public, DurationFieldType, getFieldType, (, ), {, return, DurationFieldType, ., minutes, (]
[), ;, }, public, DurationFieldType, getFieldType, (, ), {, return, DurationFieldType, ., minutes, (, ), ;, }, public, PeriodType, getPeriodType]
[;, }, public, PeriodType, getPeriodType, (, ), {, return, PeriodType, ., minutes, (, ), ;, }, public, Weeks, toStandardWeeks, (]
[., minutes, (, ), ;, }, public, PeriodType, getPeriodType, (, ), {, return, PeriodType, ., minutes, (, ), ;, }]
[;, }, public, Weeks, toStandardWeeks, (, ), {, return, Weeks, ., weeks, (, getValue, (, ), /, DateTimeConstants, ., MINUTES_PER_WEEK]
[., minutes, (, ), ;, }, public, Weeks, toStandardWeeks, (, ), {, return, Weeks, ., weeks, (, getValue, (, )]
[;, }, public, Days, toStandardDays, (, ), {, return, Days, ., days, (, getValue, (, ), /, DateTimeConstants, ., MINUTES_PER_DAY]
[., weeks, (, getValue, (, ), /, DateTimeConstants, ., MINUTES_PER_WEEK, ), ;, }, public, Days, toStandardDays, (, ), {, return]
[), ;, }, public, Days, toStandardDays, (, ), {, return, Days, ., days, (, getValue, (, ), /, DateTimeConstants, .]
[/, DateTimeConstants, ., MINUTES_PER_WEEK, ), ;, }, public, Days, toStandardDays, (, ), {, return, Days, ., days, (, getValue, (]
[), ;, }, public, Days, toStandardDays, (, ), {, return, Days, ., days, (, getValue, (, ), /, DateTimeConstants, .]
[., MINUTES_PER_WEEK, ), ;, }, public, Days, toStandardDays, (, ), {, return, Days, ., days, (, getValue, (, ), /]
[;, }, public, Hours, toStandardHours, (, ), {, return, Hours, ., hours, (, getValue, (, ), /, DateTimeConstants, ., MINUTES_PER_HOUR]
[., days, (, getValue, (, ), /, DateTimeConstants, ., MINUTES_PER_DAY, ), ;, }, public, Hours, toStandardHours, (, ), {, return]
[), ;, }, public, Hours, toStandardHours, (, ), {, return, Hours, ., hours, (, getValue, (, ), /, DateTimeConstants, .]
[/, DateTimeConstants, ., MINUTES_PER_DAY, ), ;, }, public, Hours, toStandardHours, (, ), {, return, Hours, ., hours, (, getValue, (]
[), ;, }, public, Hours, toStandardHours, (, ), {, return, Hours, ., hours, (, getValue, (, ), /, DateTimeConstants, .]
[., MINUTES_PER_DAY, ), ;, }, public, Hours, toStandardHours, (, ), {, return, Hours, ., hours, (, getValue, (, ), /]
[;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils, ., safeMultiply, (, getValue, (, )]
[., hours, (, getValue, (, ), /, DateTimeConstants, ., MINUTES_PER_HOUR, ), ;, }, public, Seconds, toStandardSeconds, (, ), {, return]
[), ;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils, ., safeMultiply, (, getValue, (]
[/, DateTimeConstants, ., MINUTES_PER_HOUR, ), ;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils, .]
[), ;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils, ., safeMultiply, (, getValue, (]
[., MINUTES_PER_HOUR, ), ;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils, ., safeMultiply, (]
[;, }, public, Duration, toStandardDuration, (, ), {, long, minutes, =, getValue, (, ), ;, return, new, Duration, (, minutes]
[., seconds, (, FieldUtils, ., safeMultiply, (, getValue, (, ), ,, DateTimeConstants, ., SECONDS_PER_MINUTE, ), ), ;, }, public, Duration]
[), ;, }, public, Duration, toStandardDuration, (, ), {, long, minutes, =, getValue, (, ), ;, return, new, Duration, (]
[., safeMultiply, (, getValue, (, ), ,, DateTimeConstants, ., SECONDS_PER_MINUTE, ), ), ;, }, public, Duration, toStandardDuration, (, ), {]
[,, DateTimeConstants, ., SECONDS_PER_MINUTE, ), ), ;, }, public, Duration, toStandardDuration, (, ), {, long, minutes, =, getValue, (, )]
[), ), ;, }, public, Duration, toStandardDuration, (, ), {, long, minutes, =, getValue, (, ), ;, return, new, Duration]
[., SECONDS_PER_MINUTE, ), ), ;, }, public, Duration, toStandardDuration, (, ), {, long, minutes, =, getValue, (, ), ;, return]
[;, return, new, Duration, (, minutes, *, DateTimeConstants, ., MILLIS_PER_MINUTE, ), ;, }, public, int, getMinutes, (, ), {, return]
[;, }, public, int, getMinutes, (, ), {, return, getValue, (, ), ;, }, public, Minutes, plus, (, int, minutes]
[), ;, }, public, int, getMinutes, (, ), {, return, getValue, (, ), ;, }, public, Minutes, plus, (, int]
[*, DateTimeConstants, ., MILLIS_PER_MINUTE, ), ;, }, public, int, getMinutes, (, ), {, return, getValue, (, ), ;, }, public]
[), ;, }, public, int, getMinutes, (, ), {, return, getValue, (, ), ;, }, public, Minutes, plus, (, int]
[., MILLIS_PER_MINUTE, ), ;, }, public, int, getMinutes, (, ), {, return, getValue, (, ), ;, }, public, Minutes, plus]
[;, }, public, Minutes, plus, (, int, minutes, ), {, if, (, minutes, ==, 0, ), {, return, this, ;]
[), {, return, this, ;, }, return, Minutes, ., minutes, (, FieldUtils, ., safeAdd, (, getValue, (, ), ,, minutes]
[==, 0, ), {, return, this, ;, }, return, Minutes, ., minutes, (, FieldUtils, ., safeAdd, (, getValue, (, )]
[), {, return, this, ;, }, return, Minutes, ., minutes, (, FieldUtils, ., safeAdd, (, getValue, (, ), ,, minutes]
[;, }, return, Minutes, ., minutes, (, FieldUtils, ., safeAdd, (, getValue, (, ), ,, minutes, ), ), ;, }]
[;, }, public, Minutes, plus, (, Minutes, minutes, ), {, if, (, minutes, ==, null, ), {, return, this, ;]
[., minutes, (, FieldUtils, ., safeAdd, (, getValue, (, ), ,, minutes, ), ), ;, }, public, Minutes, plus, (]
[), ;, }, public, Minutes, plus, (, Minutes, minutes, ), {, if, (, minutes, ==, null, ), {, return, this]
[., safeAdd, (, getValue, (, ), ,, minutes, ), ), ;, }, public, Minutes, plus, (, Minutes, minutes, ), {]
[,, minutes, ), ), ;, }, public, Minutes, plus, (, Minutes, minutes, ), {, if, (, minutes, ==, null, )]
[), ), ;, }, public, Minutes, plus, (, Minutes, minutes, ), {, if, (, minutes, ==, null, ), {, return]
[), {, return, this, ;, }, return, plus, (, minutes, ., getValue, (, ), ), ;, }, public, Minutes, minus]
[==, null, ), {, return, this, ;, }, return, plus, (, minutes, ., getValue, (, ), ), ;, }, public]
[), {, return, this, ;, }, return, plus, (, minutes, ., getValue, (, ), ), ;, }, public, Minutes, minus]
[;, }, return, plus, (, minutes, ., getValue, (, ), ), ;, }, public, Minutes, minus, (, int, minutes, )]
[;, }, public, Minutes, minus, (, int, minutes, ), {, return, plus, (, FieldUtils, ., safeNegate, (, minutes, ), )]
[), ;, }, public, Minutes, minus, (, int, minutes, ), {, return, plus, (, FieldUtils, ., safeNegate, (, minutes, )]
[., getValue, (, ), ), ;, }, public, Minutes, minus, (, int, minutes, ), {, return, plus, (, FieldUtils, .]
[;, }, public, Minutes, minus, (, Minutes, minutes, ), {, if, (, minutes, ==, null, ), {, return, this, ;]
[), ;, }, public, Minutes, minus, (, Minutes, minutes, ), {, if, (, minutes, ==, null, ), {, return, this]
[., safeNegate, (, minutes, ), ), ;, }, public, Minutes, minus, (, Minutes, minutes, ), {, if, (, minutes, ==]
[), ), ;, }, public, Minutes, minus, (, Minutes, minutes, ), {, if, (, minutes, ==, null, ), {, return]
[), {, return, this, ;, }, return, minus, (, minutes, ., getValue, (, ), ), ;, }, public, Minutes, multipliedBy]
[==, null, ), {, return, this, ;, }, return, minus, (, minutes, ., getValue, (, ), ), ;, }, public]
[), {, return, this, ;, }, return, minus, (, minutes, ., getValue, (, ), ), ;, }, public, Minutes, multipliedBy]
[;, }, return, minus, (, minutes, ., getValue, (, ), ), ;, }, public, Minutes, multipliedBy, (, int, scalar, )]
[;, }, public, Minutes, multipliedBy, (, int, scalar, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeMultiply, (, getValue]
[), ;, }, public, Minutes, multipliedBy, (, int, scalar, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeMultiply, (]
[., getValue, (, ), ), ;, }, public, Minutes, multipliedBy, (, int, scalar, ), {, return, Minutes, ., minutes, (]
[;, }, public, Minutes, dividedBy, (, int, divisor, ), {, if, (, divisor, ==, 1, ), {, return, this, ;]
[., minutes, (, FieldUtils, ., safeMultiply, (, getValue, (, ), ,, scalar, ), ), ;, }, public, Minutes, dividedBy, (]
[), ;, }, public, Minutes, dividedBy, (, int, divisor, ), {, if, (, divisor, ==, 1, ), {, return, this]
[., safeMultiply, (, getValue, (, ), ,, scalar, ), ), ;, }, public, Minutes, dividedBy, (, int, divisor, ), {]
[,, scalar, ), ), ;, }, public, Minutes, dividedBy, (, int, divisor, ), {, if, (, divisor, ==, 1, )]
[), ), ;, }, public, Minutes, dividedBy, (, int, divisor, ), {, if, (, divisor, ==, 1, ), {, return]
[), {, return, this, ;, }, return, Minutes, ., minutes, (, getValue, (, ), /, divisor, ), ;, }, public]
[==, 1, ), {, return, this, ;, }, return, Minutes, ., minutes, (, getValue, (, ), /, divisor, ), ;]
[), {, return, this, ;, }, return, Minutes, ., minutes, (, getValue, (, ), /, divisor, ), ;, }, public]
[;, }, return, Minutes, ., minutes, (, getValue, (, ), /, divisor, ), ;, }, public, Minutes, negated, (, )]
[;, }, public, Minutes, negated, (, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeNegate, (, getValue, (, )]
[., minutes, (, getValue, (, ), /, divisor, ), ;, }, public, Minutes, negated, (, ), {, return, Minutes, .]
[), ;, }, public, Minutes, negated, (, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeNegate, (, getValue, (]
[/, divisor, ), ;, }, public, Minutes, negated, (, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeNegate, (]
[), ;, }, public, Minutes, negated, (, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeNegate, (, getValue, (]
[;, }, public, boolean, isGreaterThan, (, Minutes, other, ), {, if, (, other, ==, null, ), {, return, getValue, (]
[., minutes, (, FieldUtils, ., safeNegate, (, getValue, (, ), ), ), ;, }, public, boolean, isGreaterThan, (, Minutes, other]
[), ;, }, public, boolean, isGreaterThan, (, Minutes, other, ), {, if, (, other, ==, null, ), {, return, getValue]
[., safeNegate, (, getValue, (, ), ), ), ;, }, public, boolean, isGreaterThan, (, Minutes, other, ), {, if, (]
[), ), ;, }, public, boolean, isGreaterThan, (, Minutes, other, ), {, if, (, other, ==, null, ), {, return]
[), {, return, getValue, (, ), >, 0, ;, }, return, getValue, (, ), >, other, ., getValue, (, )]
[==, null, ), {, return, getValue, (, ), >, 0, ;, }, return, getValue, (, ), >, other, ., getValue]
[), {, return, getValue, (, ), >, 0, ;, }, return, getValue, (, ), >, other, ., getValue, (, )]
[;, }, return, getValue, (, ), >, other, ., getValue, (, ), ;, }, public, boolean, isLessThan, (, Minutes, other]
[>, 0, ;, }, return, getValue, (, ), >, other, ., getValue, (, ), ;, }, public, boolean, isLessThan, (]
[;, }, return, getValue, (, ), >, other, ., getValue, (, ), ;, }, public, boolean, isLessThan, (, Minutes, other]
[;, }, public, boolean, isLessThan, (, Minutes, other, ), {, if, (, other, ==, null, ), {, return, getValue, (]
[>, other, ., getValue, (, ), ;, }, public, boolean, isLessThan, (, Minutes, other, ), {, if, (, other, ==]
[;, }, public, boolean, isLessThan, (, Minutes, other, ), {, if, (, other, ==, null, ), {, return, getValue, (]
[., getValue, (, ), ;, }, public, boolean, isLessThan, (, Minutes, other, ), {, if, (, other, ==, null, )]
[), {, return, getValue, (, ), <, 0, ;, }, return, getValue, (, ), <, other, ., getValue, (, )]
[==, null, ), {, return, getValue, (, ), <, 0, ;, }, return, getValue, (, ), <, other, ., getValue]
[), {, return, getValue, (, ), <, 0, ;, }, return, getValue, (, ), <, other, ., getValue, (, )]
[;, }, return, getValue, (, ), <, other, ., getValue, (, ), ;, }, @, ToString, public, String, toString, (]
[<, 0, ;, }, return, getValue, (, ), <, other, ., getValue, (, ), ;, }, @, ToString, public, String]
[;, }, return, getValue, (, ), <, other, ., getValue, (, ), ;, }, @, ToString, public, String, toString, (]
[;, }, @, ToString, public, String, toString, (, ), {, return, "PT", +, String, ., valueOf, (, getValue, (, )]
[<, other, ., getValue, (, ), ;, }, @, ToString, public, String, toString, (, ), {, return, "PT", +, String]
[;, }, @, ToString, public, String, toString, (, ), {, return, "PT", +, String, ., valueOf, (, getValue, (, )]
[., getValue, (, ), ;, }, @, ToString, public, String, toString, (, ), {, return, "PT", +, String, ., valueOf]
[;, }, }]
[+, "M", ;, }, }]
[+, String, ., valueOf, (, getValue, (, ), ), +, "M", ;, }, }]
[+, "M", ;, }, }]
[., valueOf, (, getValue, (, ), ), +, "M", ;, }, }]
[), +, "M", ;, }, }]
[;, }, }]
