[;, public, static, final, int, DEFAULT_INITIAL_CAPACITY, =, 8, ;, private, transient, Object, [, ], objects, ;, private, int, size, =]
[;, private, transient, Object, [, ], objects, ;, private, int, size, =, 0, ;, private, int, increment, =, DEFAULT_INITIAL_CAPACITY, ;]
[;, private, int, increment, =, DEFAULT_INITIAL_CAPACITY, ;, protected, AbstractObjectList, (, ), {, this, (, DEFAULT_INITIAL_CAPACITY, ), ;, }, protected, AbstractObjectList]
[;, protected, AbstractObjectList, (, ), {, this, (, DEFAULT_INITIAL_CAPACITY, ), ;, }, protected, AbstractObjectList, (, int, initialCapacity, ), {, this]
[), ;, }, protected, AbstractObjectList, (, int, initialCapacity, ), {, this, (, initialCapacity, ,, initialCapacity, ), ;, }, protected, AbstractObjectList]
[,, initialCapacity, ), ;, }, protected, AbstractObjectList, (, int, initialCapacity, ,, int, increment, ), {, this, ., objects, =, new]
[), ;, }, protected, AbstractObjectList, (, int, initialCapacity, ,, int, increment, ), {, this, ., objects, =, new, Object, []
[=, new, Object, [, initialCapacity, ], ;, this, ., increment, =, increment, ;, }, protected, Object, get, (, int, index]
[., objects, =, new, Object, [, initialCapacity, ], ;, this, ., increment, =, increment, ;, }, protected, Object, get, (]
[;, this, ., increment, =, increment, ;, }, protected, Object, get, (, int, index, ), {, Object, result, =, null]
[], ;, this, ., increment, =, increment, ;, }, protected, Object, get, (, int, index, ), {, Object, result, =]
[=, increment, ;, }, protected, Object, get, (, int, index, ), {, Object, result, =, null, ;, if, (, index]
[., increment, =, increment, ;, }, protected, Object, get, (, int, index, ), {, Object, result, =, null, ;, if]
[;, }, protected, Object, get, (, int, index, ), {, Object, result, =, null, ;, if, (, index, >=, 0]
[;, if, (, index, >=, 0, &&, index, <, this, ., size, ), {, result, =, this, ., objects, []
[), {, result, =, this, ., objects, [, index, ], ;, }, return, result, ;, }, protected, void, set, (]
[&&, index, <, this, ., size, ), {, result, =, this, ., objects, [, index, ], ;, }, return, result]
[>=, 0, &&, index, <, this, ., size, ), {, result, =, this, ., objects, [, index, ], ;, }]
[&&, index, <, this, ., size, ), {, result, =, this, ., objects, [, index, ], ;, }, return, result]
[), {, result, =, this, ., objects, [, index, ], ;, }, return, result, ;, }, protected, void, set, (]
[<, this, ., size, ), {, result, =, this, ., objects, [, index, ], ;, }, return, result, ;, }]
[), {, result, =, this, ., objects, [, index, ], ;, }, return, result, ;, }, protected, void, set, (]
[., size, ), {, result, =, this, ., objects, [, index, ], ;, }, return, result, ;, }, protected, void]
[=, this, ., objects, [, index, ], ;, }, return, result, ;, }, protected, void, set, (, int, index, ,]
[;, }, return, result, ;, }, protected, void, set, (, int, index, ,, Object, object, ), {, if, (, index]
[[, index, ], ;, }, return, result, ;, }, protected, void, set, (, int, index, ,, Object, object, ), {]
[., objects, [, index, ], ;, }, return, result, ;, }, protected, void, set, (, int, index, ,, Object, object]
[], ;, }, return, result, ;, }, protected, void, set, (, int, index, ,, Object, object, ), {, if, (]
[;, }, protected, void, set, (, int, index, ,, Object, object, ), {, if, (, index, <, 0, ), {]
[), {, throw, new, IllegalArgumentException, (, "Requires index >= 0.", ), ;, }, if, (, index, >=, this, ., objects, ., length, )]
[<, 0, ), {, throw, new, IllegalArgumentException, (, "Requires index >= 0.", ), ;, }, if, (, index, >=, this, ., objects, .]
[), {, throw, new, IllegalArgumentException, (, "Requires index >= 0.", ), ;, }, if, (, index, >=, this, ., objects, ., length, )]
[;, }, if, (, index, >=, this, ., objects, ., length, ), {, Object, [, ], enlarged, =, new, Object]
[), ;, }, if, (, index, >=, this, ., objects, ., length, ), {, Object, [, ], enlarged, =, new]
[), {, Object, [, ], enlarged, =, new, Object, [, index, +, this, ., increment, ], ;, System, ., arraycopy]
[>=, this, ., objects, ., length, ), {, Object, [, ], enlarged, =, new, Object, [, index, +, this, .]
[), {, Object, [, ], enlarged, =, new, Object, [, index, +, this, ., increment, ], ;, System, ., arraycopy]
[., length, ), {, Object, [, ], enlarged, =, new, Object, [, index, +, this, ., increment, ], ;, System]
[., objects, ., length, ), {, Object, [, ], enlarged, =, new, Object, [, index, +, this, ., increment, ]]
[;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, enlarged, ,, 0, ,, this, ., objects, ., length]
[], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, enlarged, ,, 0, ,, this, ., objects, .]
[+, this, ., increment, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, enlarged, ,, 0, ,]
[], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, enlarged, ,, 0, ,, this, ., objects, .]
[., increment, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, enlarged, ,, 0, ,, this, .]
[;, this, ., objects, =, enlarged, ;, }, this, ., objects, [, index, ], =, object, ;, this, ., size]
[., arraycopy, (, this, ., objects, ,, 0, ,, enlarged, ,, 0, ,, this, ., objects, ., length, ), ;]
[,, 0, ,, enlarged, ,, 0, ,, this, ., objects, ., length, ), ;, this, ., objects, =, enlarged, ;]
[., objects, ,, 0, ,, enlarged, ,, 0, ,, this, ., objects, ., length, ), ;, this, ., objects, =]
[,, enlarged, ,, 0, ,, this, ., objects, ., length, ), ;, this, ., objects, =, enlarged, ;, }, this]
[,, 0, ,, this, ., objects, ., length, ), ;, this, ., objects, =, enlarged, ;, }, this, ., objects]
[,, this, ., objects, ., length, ), ;, this, ., objects, =, enlarged, ;, }, this, ., objects, [, index]
[), ;, this, ., objects, =, enlarged, ;, }, this, ., objects, [, index, ], =, object, ;, this, .]
[., length, ), ;, this, ., objects, =, enlarged, ;, }, this, ., objects, [, index, ], =, object, ;]
[., objects, ., length, ), ;, this, ., objects, =, enlarged, ;, }, this, ., objects, [, index, ], =]
[=, enlarged, ;, }, this, ., objects, [, index, ], =, object, ;, this, ., size, =, Math, ., max]
[., objects, =, enlarged, ;, }, this, ., objects, [, index, ], =, object, ;, this, ., size, =, Math]
[;, }, this, ., objects, [, index, ], =, object, ;, this, ., size, =, Math, ., max, (, this]
[=, object, ;, this, ., size, =, Math, ., max, (, this, ., size, ,, index, +, 1, ), ;]
[[, index, ], =, object, ;, this, ., size, =, Math, ., max, (, this, ., size, ,, index, +]
[., objects, [, index, ], =, object, ;, this, ., size, =, Math, ., max, (, this, ., size, ,]
[], =, object, ;, this, ., size, =, Math, ., max, (, this, ., size, ,, index, +, 1, )]
[;, this, ., size, =, Math, ., max, (, this, ., size, ,, index, +, 1, ), ;, }, public]
[=, Math, ., max, (, this, ., size, ,, index, +, 1, ), ;, }, public, void, clear, (, )]
[., size, =, Math, ., max, (, this, ., size, ,, index, +, 1, ), ;, }, public, void, clear]
[;, }, public, void, clear, (, ), {, Arrays, ., fill, (, this, ., objects, ,, null, ), ;, this]
[., max, (, this, ., size, ,, index, +, 1, ), ;, }, public, void, clear, (, ), {, Arrays]
[,, index, +, 1, ), ;, }, public, void, clear, (, ), {, Arrays, ., fill, (, this, ., objects]
[., size, ,, index, +, 1, ), ;, }, public, void, clear, (, ), {, Arrays, ., fill, (, this]
[), ;, }, public, void, clear, (, ), {, Arrays, ., fill, (, this, ., objects, ,, null, ), ;]
[+, 1, ), ;, }, public, void, clear, (, ), {, Arrays, ., fill, (, this, ., objects, ,, null]
[), ;, }, public, void, clear, (, ), {, Arrays, ., fill, (, this, ., objects, ,, null, ), ;]
[;, this, ., size, =, 0, ;, }, public, int, size, (, ), {, return, this, ., size, ;, }]
[., fill, (, this, ., objects, ,, null, ), ;, this, ., size, =, 0, ;, }, public, int, size]
[,, null, ), ;, this, ., size, =, 0, ;, }, public, int, size, (, ), {, return, this, .]
[., objects, ,, null, ), ;, this, ., size, =, 0, ;, }, public, int, size, (, ), {, return]
[), ;, this, ., size, =, 0, ;, }, public, int, size, (, ), {, return, this, ., size, ;]
[=, 0, ;, }, public, int, size, (, ), {, return, this, ., size, ;, }, protected, int, indexOf, (]
[., size, =, 0, ;, }, public, int, size, (, ), {, return, this, ., size, ;, }, protected, int]
[;, }, public, int, size, (, ), {, return, this, ., size, ;, }, protected, int, indexOf, (, Object, object]
[;, }, protected, int, indexOf, (, Object, object, ), {, for, (, int, index, =, 0, ;, index, <, this]
[., size, ;, }, protected, int, indexOf, (, Object, object, ), {, for, (, int, index, =, 0, ;, index]
[;, index, <, this, ., size, ;, index, ++, ), {, if, (, this, ., objects, [, index, ], ==]
[;, index, ++, ), {, if, (, this, ., objects, [, index, ], ==, object, ), {, return, (, index]
[<, this, ., size, ;, index, ++, ), {, if, (, this, ., objects, [, index, ], ==, object, )]
[;, index, ++, ), {, if, (, this, ., objects, [, index, ], ==, object, ), {, return, (, index]
[., size, ;, index, ++, ), {, if, (, this, ., objects, [, index, ], ==, object, ), {, return]
[), {, if, (, this, ., objects, [, index, ], ==, object, ), {, return, (, index, ), ;, }]
[++, ), {, if, (, this, ., objects, [, index, ], ==, object, ), {, return, (, index, ), ;]
[), {, return, (, index, ), ;, }, }, return, -, 1, ;, }, public, boolean, equals, (, Object, obj]
[==, object, ), {, return, (, index, ), ;, }, }, return, -, 1, ;, }, public, boolean, equals, (]
[[, index, ], ==, object, ), {, return, (, index, ), ;, }, }, return, -, 1, ;, }, public]
[., objects, [, index, ], ==, object, ), {, return, (, index, ), ;, }, }, return, -, 1, ;]
[], ==, object, ), {, return, (, index, ), ;, }, }, return, -, 1, ;, }, public, boolean, equals]
[), {, return, (, index, ), ;, }, }, return, -, 1, ;, }, public, boolean, equals, (, Object, obj]
[;, }, }, return, -, 1, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ;, }, }, return, -, 1, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null, ), {, return, false, ;]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null, ), {, return, false, ;]
[), {, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[==, null, ), {, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if]
[), {, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, AbstractObjectList]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, AbstractObjectList, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, AbstractObjectList, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, AbstractObjectList, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, AbstractObjectList, ), ), {, return, false, ;, }, AbstractObjectList, other, =, (]
[), {, return, false, ;, }, AbstractObjectList, other, =, (, AbstractObjectList, ), obj, ;, int, listSize, =, size, (, )]
[), {, return, false, ;, }, AbstractObjectList, other, =, (, AbstractObjectList, ), obj, ;, int, listSize, =, size, (, )]
[), ), {, return, false, ;, }, AbstractObjectList, other, =, (, AbstractObjectList, ), obj, ;, int, listSize, =, size, (]
[instanceof, AbstractObjectList, ), ), {, return, false, ;, }, AbstractObjectList, other, =, (, AbstractObjectList, ), obj, ;, int, listSize, =]
[;, }, AbstractObjectList, other, =, (, AbstractObjectList, ), obj, ;, int, listSize, =, size, (, ), ;, for, (, int]
[;, int, listSize, =, size, (, ), ;, for, (, int, i, =, 0, ;, i, <, listSize, ;, i]
[;, int, listSize, =, size, (, ), ;, for, (, int, i, =, 0, ;, i, <, listSize, ;, i]
[;, for, (, int, i, =, 0, ;, i, <, listSize, ;, i, ++, ), {, if, (, !, ObjectUtilities]
[;, i, <, listSize, ;, i, ++, ), {, if, (, !, ObjectUtilities, ., equal, (, get, (, i, )]
[;, i, ++, ), {, if, (, !, ObjectUtilities, ., equal, (, get, (, i, ), ,, other, ., get]
[<, listSize, ;, i, ++, ), {, if, (, !, ObjectUtilities, ., equal, (, get, (, i, ), ,, other]
[;, i, ++, ), {, if, (, !, ObjectUtilities, ., equal, (, get, (, i, ), ,, other, ., get]
[), {, if, (, !, ObjectUtilities, ., equal, (, get, (, i, ), ,, other, ., get, (, i, )]
[++, ), {, if, (, !, ObjectUtilities, ., equal, (, get, (, i, ), ,, other, ., get, (, i]
[), {, return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =]
[), {, return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =]
[., equal, (, get, (, i, ), ,, other, ., get, (, i, ), ), ), {, return, false, ;]
[,, other, ., get, (, i, ), ), ), {, return, false, ;, }, }, return, true, ;, }, public]
[), ,, other, ., get, (, i, ), ), ), {, return, false, ;, }, }, return, true, ;, }]
[), ), {, return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result]
[., get, (, i, ), ), ), {, return, false, ;, }, }, return, true, ;, }, public, int, hashCode]
[), ), ), {, return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int]
[;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 127, ;, int, size]
[;, }, public, int, hashCode, (, ), {, int, result, =, 127, ;, int, size, =, size, (, ), ;]
[;, int, size, =, size, (, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,, size, (, ), )]
[;, result, =, HashUtilities, ., hashCode, (, result, ,, size, (, ), ), ;, if, (, size, >, 0, )]
[=, HashUtilities, ., hashCode, (, result, ,, size, (, ), ), ;, if, (, size, >, 0, ), {, result]
[;, if, (, size, >, 0, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, []
[., hashCode, (, result, ,, size, (, ), ), ;, if, (, size, >, 0, ), {, result, =, HashUtilities]
[,, size, (, ), ), ;, if, (, size, >, 0, ), {, result, =, HashUtilities, ., hashCode, (, result]
[), ;, if, (, size, >, 0, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects]
[), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, 0, ], ), ;, if, (]
[>, 0, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, 0, ], ), ;]
[), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, 0, ], ), ;, if, (]
[=, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, 0, ], ), ;, if, (, size, >, 1]
[;, if, (, size, >, 1, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, []
[., hashCode, (, result, ,, this, ., objects, [, 0, ], ), ;, if, (, size, >, 1, ), {]
[,, this, ., objects, [, 0, ], ), ;, if, (, size, >, 1, ), {, result, =, HashUtilities, .]
[), ;, if, (, size, >, 1, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects]
[[, 0, ], ), ;, if, (, size, >, 1, ), {, result, =, HashUtilities, ., hashCode, (, result, ,]
[., objects, [, 0, ], ), ;, if, (, size, >, 1, ), {, result, =, HashUtilities, ., hashCode, (]
[], ), ;, if, (, size, >, 1, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, .]
[), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, -, 1, ], ), ;]
[>, 1, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, -, 1, ]]
[), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, -, 1, ], ), ;]
[=, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, -, 1, ], ), ;, if, (, size]
[;, if, (, size, >, 2, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, []
[., hashCode, (, result, ,, this, ., objects, [, size, -, 1, ], ), ;, if, (, size, >, 2]
[,, this, ., objects, [, size, -, 1, ], ), ;, if, (, size, >, 2, ), {, result, =]
[), ;, if, (, size, >, 2, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects]
[[, size, -, 1, ], ), ;, if, (, size, >, 2, ), {, result, =, HashUtilities, ., hashCode, (]
[., objects, [, size, -, 1, ], ), ;, if, (, size, >, 2, ), {, result, =, HashUtilities, .]
[], ), ;, if, (, size, >, 2, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, .]
[-, 1, ], ), ;, if, (, size, >, 2, ), {, result, =, HashUtilities, ., hashCode, (, result, ,]
[], ), ;, if, (, size, >, 2, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, .]
[), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, /, 2, ], ), ;]
[>, 2, ), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, /, 2, ]]
[), {, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, /, 2, ], ), ;]
[=, HashUtilities, ., hashCode, (, result, ,, this, ., objects, [, size, /, 2, ], ), ;, }, }, }]
[;, }, }, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractObjectList, clone, =, (]
[., hashCode, (, result, ,, this, ., objects, [, size, /, 2, ], ), ;, }, }, }, return, result]
[,, this, ., objects, [, size, /, 2, ], ), ;, }, }, }, return, result, ;, }, public, Object]
[), ;, }, }, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractObjectList, clone, =]
[[, size, /, 2, ], ), ;, }, }, }, return, result, ;, }, public, Object, clone, (, ), throws]
[., objects, [, size, /, 2, ], ), ;, }, }, }, return, result, ;, }, public, Object, clone, (]
[], ), ;, }, }, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractObjectList, clone]
[/, 2, ], ), ;, }, }, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {]
[], ), ;, }, }, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractObjectList, clone]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractObjectList, clone, =, (, AbstractObjectList, ), super, ., clone, (]
[;, if, (, this, ., objects, !=, null, ), {, clone, ., objects, =, new, Object, [, this, ., objects]
[;, if, (, this, ., objects, !=, null, ), {, clone, ., objects, =, new, Object, [, this, ., objects]
[., clone, (, ), ;, if, (, this, ., objects, !=, null, ), {, clone, ., objects, =, new, Object]
[), {, clone, ., objects, =, new, Object, [, this, ., objects, ., length, ], ;, System, ., arraycopy, (]
[!=, null, ), {, clone, ., objects, =, new, Object, [, this, ., objects, ., length, ], ;, System, .]
[., objects, !=, null, ), {, clone, ., objects, =, new, Object, [, this, ., objects, ., length, ], ;]
[), {, clone, ., objects, =, new, Object, [, this, ., objects, ., length, ], ;, System, ., arraycopy, (]
[=, new, Object, [, this, ., objects, ., length, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0]
[., objects, =, new, Object, [, this, ., objects, ., length, ], ;, System, ., arraycopy, (, this, ., objects]
[;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, clone, ., objects, ,, 0, ,, this, ., objects]
[], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, clone, ., objects, ,, 0, ,, this, .]
[., length, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, clone, ., objects, ,, 0, ,]
[., objects, ., length, ], ;, System, ., arraycopy, (, this, ., objects, ,, 0, ,, clone, ., objects, ,]
[;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (]
[., arraycopy, (, this, ., objects, ,, 0, ,, clone, ., objects, ,, 0, ,, this, ., objects, ., length]
[,, 0, ,, clone, ., objects, ,, 0, ,, this, ., objects, ., length, ), ;, }, return, clone, ;]
[., objects, ,, 0, ,, clone, ., objects, ,, 0, ,, this, ., objects, ., length, ), ;, }, return]
[,, clone, ., objects, ,, 0, ,, this, ., objects, ., length, ), ;, }, return, clone, ;, }, private]
[,, 0, ,, this, ., objects, ., length, ), ;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream]
[., objects, ,, 0, ,, this, ., objects, ., length, ), ;, }, return, clone, ;, }, private, void, writeObject]
[,, this, ., objects, ., length, ), ;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, )]
[), ;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject]
[., length, ), ;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream]
[., objects, ., length, ), ;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException]
[;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, int, count]
[;, int, count, =, size, (, ), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =]
[., defaultWriteObject, (, ), ;, int, count, =, size, (, ), ;, stream, ., writeInt, (, count, ), ;, for]
[;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i]
[;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, final, Object, object, =]
[., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, )]
[), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, final, Object, object]
[;, i, <, count, ;, i, ++, ), {, final, Object, object, =, get, (, i, ), ;, if, (]
[;, i, ++, ), {, final, Object, object, =, get, (, i, ), ;, if, (, object, !=, null, &&]
[<, count, ;, i, ++, ), {, final, Object, object, =, get, (, i, ), ;, if, (, object, !=]
[;, i, ++, ), {, final, Object, object, =, get, (, i, ), ;, if, (, object, !=, null, &&]
[), {, final, Object, object, =, get, (, i, ), ;, if, (, object, !=, null, &&, object, instanceof, Serializable]
[++, ), {, final, Object, object, =, get, (, i, ), ;, if, (, object, !=, null, &&, object, instanceof]
[;, if, (, object, !=, null, &&, object, instanceof, Serializable, ), {, stream, ., writeInt, (, i, ), ;, stream]
[), ;, if, (, object, !=, null, &&, object, instanceof, Serializable, ), {, stream, ., writeInt, (, i, ), ;]
[), {, stream, ., writeInt, (, i, ), ;, stream, ., writeObject, (, object, ), ;, }, else, {, stream]
[&&, object, instanceof, Serializable, ), {, stream, ., writeInt, (, i, ), ;, stream, ., writeObject, (, object, ), ;]
[!=, null, &&, object, instanceof, Serializable, ), {, stream, ., writeInt, (, i, ), ;, stream, ., writeObject, (, object]
[&&, object, instanceof, Serializable, ), {, stream, ., writeInt, (, i, ), ;, stream, ., writeObject, (, object, ), ;]
[), {, stream, ., writeInt, (, i, ), ;, stream, ., writeObject, (, object, ), ;, }, else, {, stream]
[instanceof, Serializable, ), {, stream, ., writeInt, (, i, ), ;, stream, ., writeObject, (, object, ), ;, }, else]
[;, stream, ., writeObject, (, object, ), ;, }, else, {, stream, ., writeInt, (, -, 1, ), ;, }]
[., writeInt, (, i, ), ;, stream, ., writeObject, (, object, ), ;, }, else, {, stream, ., writeInt, (]
[), ;, stream, ., writeObject, (, object, ), ;, }, else, {, stream, ., writeInt, (, -, 1, ), ;]
[;, }, else, {, stream, ., writeInt, (, -, 1, ), ;, }, }, }, private, void, readObject, (, ObjectInputStream]
[., writeObject, (, object, ), ;, }, else, {, stream, ., writeInt, (, -, 1, ), ;, }, }, }]
[), ;, }, else, {, stream, ., writeInt, (, -, 1, ), ;, }, }, }, private, void, readObject, (]
[;, }, }, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (]
[., writeInt, (, -, 1, ), ;, }, }, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,]
[), ;, }, }, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject]
[), ;, }, }, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject]
[;, this, ., objects, =, new, Object, [, this, ., size, ], ;, int, count, =, stream, ., readInt, (]
[., defaultReadObject, (, ), ;, this, ., objects, =, new, Object, [, this, ., size, ], ;, int, count, =]
[=, new, Object, [, this, ., size, ], ;, int, count, =, stream, ., readInt, (, ), ;, for, (]
[., objects, =, new, Object, [, this, ., size, ], ;, int, count, =, stream, ., readInt, (, ), ;]
[;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;, i, <, count]
[], ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[., size, ], ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;]
[;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, int, index, =, stream]
[., readInt, (, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {]
[;, i, <, count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (]
[;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1]
[<, count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=]
[;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1]
[), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {, set]
[++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {]
[;, if, (, index, !=, -, 1, ), {, set, (, index, ,, stream, ., readObject, (, ), ), ;]
[., readInt, (, ), ;, if, (, index, !=, -, 1, ), {, set, (, index, ,, stream, ., readObject]
[), {, set, (, index, ,, stream, ., readObject, (, ), ), ;, }, }, }, }]
[!=, -, 1, ), {, set, (, index, ,, stream, ., readObject, (, ), ), ;, }, }, }, }]
[), {, set, (, index, ,, stream, ., readObject, (, ), ), ;, }, }, }, }]
[), {, set, (, index, ,, stream, ., readObject, (, ), ), ;, }, }, }, }]
[;, }, }, }, }]
[,, stream, ., readObject, (, ), ), ;, }, }, }, }]
[), ;, }, }, }, }]
[., readObject, (, ), ), ;, }, }, }, }]
