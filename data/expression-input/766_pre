[., jstype, ., TernaryValue, ., UNKNOWN, ;, public, final, class, StringType, extends, ValueType, {, private, static, final, long, serialVersionUID, =]
[StringType, extends, ValueType, {, private, static, final, long, serialVersionUID, =, 1L, ;, StringType, (, JSTypeRegistry, registry, ), {, super, (]
[{, super, (, registry, ), ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =]
[{, super, (, registry, ), ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =]
[), ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =, super, ., testForEquality, (]
[public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =, super, ., testForEquality, (, that, ), ;, if, (]
[public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =, super, ., testForEquality, (, that, ), ;, if, (]
[testForEquality, (, JSType, that, ), {, TernaryValue, result, =, super, ., testForEquality, (, that, ), ;, if, (, result, !=]
[), {, TernaryValue, result, =, super, ., testForEquality, (, that, ), ;, if, (, result, !=, null, ), {, return]
[super, ., testForEquality, (, that, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, if, (]
[super, ., testForEquality, (, that, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, if, (]
[super, ., testForEquality, (, that, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, if, (]
[;, if, (, result, !=, null, ), {, return, result, ;, }, if, (, that, ., isUnknownType, (, ), ||]
[;, if, (, result, !=, null, ), {, return, result, ;, }, if, (, that, ., isUnknownType, (, ), ||]
[!=, null, ), {, return, result, ;, }, if, (, that, ., isUnknownType, (, ), ||, that, ., isSubtype, (]
[), {, return, result, ;, }, if, (, that, ., isUnknownType, (, ), ||, that, ., isSubtype, (, getNativeType, (]
[), {, return, result, ;, }, if, (, that, ., isUnknownType, (, ), ||, that, ., isSubtype, (, getNativeType, (]
[that, ., isUnknownType, (, ), ||, that, ., isSubtype, (, getNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING_BOOLEAN, ), ), ), {, return]
[), ||, that, ., isSubtype, (, getNativeType, (, JSTypeNative, ., OBJECT_NUMBER_STRING_BOOLEAN, ), ), ), {, return, UNKNOWN, ;, }, return]
[), ), {, return, UNKNOWN, ;, }, return, FALSE, ;, }, @, Override, public, boolean, isStringValueType, (, ), {, return]
[Override, public, boolean, isStringValueType, (, ), {, return, true, ;, }, @, Override, public, boolean, matchesNumberContext, (, ), {, return]
[Override, public, boolean, matchesNumberContext, (, ), {, return, true, ;, }, @, Override, public, boolean, matchesStringContext, (, ), {, return]
[Override, public, boolean, matchesStringContext, (, ), {, return, true, ;, }, @, Override, public, boolean, matchesObjectContext, (, ), {, return]
[public, boolean, matchesObjectContext, (, ), {, return, true, ;, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return]
[(, boolean, forAnnotations, ), {, return, getDisplayName, (, ), ;, }, @, Override, public, String, getDisplayName, (, ), {, return]
[Override, public, String, getDisplayName, (, ), {, return, "string", ;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return]
[String, getDisplayName, (, ), {, return, "string", ;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return, getNativeType, (]
[String, getDisplayName, (, ), {, return, "string", ;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return, getNativeType, (]
[), {, return, getNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE, ), ;, }, @, Override, public, BooleanLiteralSet, getPossibleToBooleanOutcomes, (, ), {, return]
[), {, return, getNativeType, (, JSTypeNative, ., STRING_OBJECT_TYPE, ), ;, }, @, Override, public, BooleanLiteralSet, getPossibleToBooleanOutcomes, (, ), {, return]
[BOTH, ;, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, return]
[BOTH, ;, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, return]
