[java, ., util, ., Date, ;, public, class, FixedMillisecond, extends, RegularTimePeriod, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[{, private, static, final, long, serialVersionUID, =, 7867521484545646931L, ;, private, long, time, ;, public, FixedMillisecond, (, ), {, this, (]
[), {, this, (, new, Date, (, ), ), ;, }, public, FixedMillisecond, (, long, millisecond, ), {, this, (]
[(, new, Date, (, ), ), ;, }, public, FixedMillisecond, (, long, millisecond, ), {, this, (, new, Date, (]
[millisecond, ), {, this, (, new, Date, (, millisecond, ), ), ;, }, public, FixedMillisecond, (, Date, time, ), {]
[millisecond, ), {, this, (, new, Date, (, millisecond, ), ), ;, }, public, FixedMillisecond, (, Date, time, ), {]
[(, new, Date, (, millisecond, ), ), ;, }, public, FixedMillisecond, (, Date, time, ), {, this, ., time, =]
[(, new, Date, (, millisecond, ), ), ;, }, public, FixedMillisecond, (, Date, time, ), {, this, ., time, =]
[), {, this, ., time, =, time, ., getTime, (, ), ;, }, public, Date, getTime, (, ), {, return]
[., time, =, time, ., getTime, (, ), ;, }, public, Date, getTime, (, ), {, return, new, Date, (]
[., time, =, time, ., getTime, (, ), ;, }, public, Date, getTime, (, ), {, return, new, Date, (]
[;, }, public, void, peg, (, Calendar, calendar, ), {, }, public, RegularTimePeriod, previous, (, ), {, RegularTimePeriod, result, =]
[(, Calendar, calendar, ), {, }, public, RegularTimePeriod, previous, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =]
[(, Calendar, calendar, ), {, }, public, RegularTimePeriod, previous, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =]
[public, RegularTimePeriod, previous, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =, this, ., time, ;, if, (]
[public, RegularTimePeriod, previous, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =, this, ., time, ;, if, (]
[previous, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =, this, ., time, ;, if, (, t, !=]
[previous, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =, this, ., time, ;, if, (, t, !=]
[result, =, null, ;, long, t, =, this, ., time, ;, if, (, t, !=, Long, ., MIN_VALUE, ), {]
[null, ;, long, t, =, this, ., time, ;, if, (, t, !=, Long, ., MIN_VALUE, ), {, result, =]
[t, =, this, ., time, ;, if, (, t, !=, Long, ., MIN_VALUE, ), {, result, =, new, FixedMillisecond, (]
[t, =, this, ., time, ;, if, (, t, !=, Long, ., MIN_VALUE, ), {, result, =, new, FixedMillisecond, (]
[this, ., time, ;, if, (, t, !=, Long, ., MIN_VALUE, ), {, result, =, new, FixedMillisecond, (, t, -]
[(, t, !=, Long, ., MIN_VALUE, ), {, result, =, new, FixedMillisecond, (, t, -, 1, ), ;, }, return]
[(, t, -, 1, ), ;, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, RegularTimePeriod, result, =]
[;, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =]
[;, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =]
[public, RegularTimePeriod, next, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =, this, ., time, ;, if, (]
[public, RegularTimePeriod, next, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =, this, ., time, ;, if, (]
[next, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =, this, ., time, ;, if, (, t, !=]
[next, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =, this, ., time, ;, if, (, t, !=]
[result, =, null, ;, long, t, =, this, ., time, ;, if, (, t, !=, Long, ., MAX_VALUE, ), {]
[null, ;, long, t, =, this, ., time, ;, if, (, t, !=, Long, ., MAX_VALUE, ), {, result, =]
[t, =, this, ., time, ;, if, (, t, !=, Long, ., MAX_VALUE, ), {, result, =, new, FixedMillisecond, (]
[t, =, this, ., time, ;, if, (, t, !=, Long, ., MAX_VALUE, ), {, result, =, new, FixedMillisecond, (]
[this, ., time, ;, if, (, t, !=, Long, ., MAX_VALUE, ), {, result, =, new, FixedMillisecond, (, t, +]
[(, t, !=, Long, ., MAX_VALUE, ), {, result, =, new, FixedMillisecond, (, t, +, 1, ), ;, }, return]
[t, +, 1, ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, object, ), {, if, (]
[t, +, 1, ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, object, ), {, if, (]
[;, }, public, boolean, equals, (, Object, object, ), {, if, (, object, instanceof, FixedMillisecond, ), {, FixedMillisecond, m, =]
[boolean, equals, (, Object, object, ), {, if, (, object, instanceof, FixedMillisecond, ), {, FixedMillisecond, m, =, (, FixedMillisecond, )]
[Object, object, ), {, if, (, object, instanceof, FixedMillisecond, ), {, FixedMillisecond, m, =, (, FixedMillisecond, ), object, ;, return]
[Object, object, ), {, if, (, object, instanceof, FixedMillisecond, ), {, FixedMillisecond, m, =, (, FixedMillisecond, ), object, ;, return]
[Object, object, ), {, if, (, object, instanceof, FixedMillisecond, ), {, FixedMillisecond, m, =, (, FixedMillisecond, ), object, ;, return]
[if, (, object, instanceof, FixedMillisecond, ), {, FixedMillisecond, m, =, (, FixedMillisecond, ), object, ;, return, this, ., time, ==]
[if, (, object, instanceof, FixedMillisecond, ), {, FixedMillisecond, m, =, (, FixedMillisecond, ), object, ;, return, this, ., time, ==]
[(, FixedMillisecond, ), object, ;, return, this, ., time, ==, m, ., getFirstMillisecond, (, ), ;, }, else, {, return]
[., getFirstMillisecond, (, ), ;, }, else, {, return, false, ;, }, }, public, int, hashCode, (, ), {, return]
[), ;, }, else, {, return, false, ;, }, }, public, int, hashCode, (, ), {, return, (, int, )]
[), ;, }, else, {, return, false, ;, }, }, public, int, hashCode, (, ), {, return, (, int, )]
[., time, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, long, difference, ;, if, (]
[., time, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, long, difference, ;, if, (]
[Object, o1, ), {, int, result, ;, long, difference, ;, if, (, o1, instanceof, FixedMillisecond, ), {, FixedMillisecond, t1, =]
[{, int, result, ;, long, difference, ;, if, (, o1, instanceof, FixedMillisecond, ), {, FixedMillisecond, t1, =, (, FixedMillisecond, )]
[result, ;, long, difference, ;, if, (, o1, instanceof, FixedMillisecond, ), {, FixedMillisecond, t1, =, (, FixedMillisecond, ), o1, ;]
[long, difference, ;, if, (, o1, instanceof, FixedMillisecond, ), {, FixedMillisecond, t1, =, (, FixedMillisecond, ), o1, ;, difference, =]
[long, difference, ;, if, (, o1, instanceof, FixedMillisecond, ), {, FixedMillisecond, t1, =, (, FixedMillisecond, ), o1, ;, difference, =]
[long, difference, ;, if, (, o1, instanceof, FixedMillisecond, ), {, FixedMillisecond, t1, =, (, FixedMillisecond, ), o1, ;, difference, =]
[(, o1, instanceof, FixedMillisecond, ), {, FixedMillisecond, t1, =, (, FixedMillisecond, ), o1, ;, difference, =, this, ., time, -]
[(, o1, instanceof, FixedMillisecond, ), {, FixedMillisecond, t1, =, (, FixedMillisecond, ), o1, ;, difference, =, this, ., time, -]
[FixedMillisecond, t1, =, (, FixedMillisecond, ), o1, ;, difference, =, this, ., time, -, t1, ., time, ;, if, (]
[FixedMillisecond, t1, =, (, FixedMillisecond, ), o1, ;, difference, =, this, ., time, -, t1, ., time, ;, if, (]
[=, (, FixedMillisecond, ), o1, ;, difference, =, this, ., time, -, t1, ., time, ;, if, (, difference, >]
[), o1, ;, difference, =, this, ., time, -, t1, ., time, ;, if, (, difference, >, 0, ), {]
[;, difference, =, this, ., time, -, t1, ., time, ;, if, (, difference, >, 0, ), {, result, =]
[t1, ., time, ;, if, (, difference, >, 0, ), {, result, =, 1, ;, }, else, {, if, (]
[t1, ., time, ;, if, (, difference, >, 0, ), {, result, =, 1, ;, }, else, {, if, (]
[time, ;, if, (, difference, >, 0, ), {, result, =, 1, ;, }, else, {, if, (, difference, <]
[(, difference, >, 0, ), {, result, =, 1, ;, }, else, {, if, (, difference, <, 0, ), {]
[>, 0, ), {, result, =, 1, ;, }, else, {, if, (, difference, <, 0, ), {, result, =]
[0, ), {, result, =, 1, ;, }, else, {, if, (, difference, <, 0, ), {, result, =, -]
[1, ;, }, else, {, if, (, difference, <, 0, ), {, result, =, -, 1, ;, }, else, {]
[}, else, {, if, (, difference, <, 0, ), {, result, =, -, 1, ;, }, else, {, result, =]
[), {, result, =, -, 1, ;, }, else, {, result, =, 0, ;, }, }, }, else, if, (]
[), {, result, =, -, 1, ;, }, else, {, result, =, 0, ;, }, }, }, else, if, (]
[1, ;, }, else, {, result, =, 0, ;, }, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {]
[}, else, {, result, =, 0, ;, }, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =]
[0, ;, }, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {]
[}, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =]
[if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =, 1, ;, }, return]
[;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, long, getFirstMillisecond, (, ), {, return]
[;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, long, getFirstMillisecond, (, ), {, return]
[long, getFirstMillisecond, (, ), {, return, this, ., time, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, return]
[long, getFirstMillisecond, (, ), {, return, this, ., time, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, return]
[long, getFirstMillisecond, (, Calendar, calendar, ), {, return, this, ., time, ;, }, public, long, getLastMillisecond, (, ), {, return]
[long, getFirstMillisecond, (, Calendar, calendar, ), {, return, this, ., time, ;, }, public, long, getLastMillisecond, (, ), {, return]
[long, getLastMillisecond, (, ), {, return, this, ., time, ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, return]
[long, getLastMillisecond, (, ), {, return, this, ., time, ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, return]
[long, getLastMillisecond, (, Calendar, calendar, ), {, return, this, ., time, ;, }, public, long, getMiddleMillisecond, (, ), {, return]
[long, getLastMillisecond, (, Calendar, calendar, ), {, return, this, ., time, ;, }, public, long, getMiddleMillisecond, (, ), {, return]
[long, getMiddleMillisecond, (, ), {, return, this, ., time, ;, }, public, long, getMiddleMillisecond, (, Calendar, calendar, ), {, return]
[long, getMiddleMillisecond, (, ), {, return, this, ., time, ;, }, public, long, getMiddleMillisecond, (, Calendar, calendar, ), {, return]
[long, getMiddleMillisecond, (, Calendar, calendar, ), {, return, this, ., time, ;, }, public, long, getSerialIndex, (, ), {, return]
[long, getMiddleMillisecond, (, Calendar, calendar, ), {, return, this, ., time, ;, }, public, long, getSerialIndex, (, ), {, return]
