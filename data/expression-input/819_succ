[;, private, final, Map, <, WarningsGuard, ,, Integer, >, orderOfAddition, =, Maps, ., newHashMap, (, ), ;, private, int, numberOfAdds]
[;, private, int, numberOfAdds, =, 0, ;, private, final, Comparator, <, WarningsGuard, >, guardComparator, =, new, GuardComparator, (, orderOfAddition, )]
[., newHashMap, (, ), ;, private, int, numberOfAdds, =, 0, ;, private, final, Comparator, <, WarningsGuard, >, guardComparator, =, new]
[;, private, final, Comparator, <, WarningsGuard, >, guardComparator, =, new, GuardComparator, (, orderOfAddition, ), ;, private, boolean, demoteErrors, =, false]
[;, private, boolean, demoteErrors, =, false, ;, private, static, class, GuardComparator, implements, Comparator, <, WarningsGuard, >, ,, Serializable, {, private]
[), ;, private, boolean, demoteErrors, =, false, ;, private, static, class, GuardComparator, implements, Comparator, <, WarningsGuard, >, ,, Serializable, {]
[;, private, static, class, GuardComparator, implements, Comparator, <, WarningsGuard, >, ,, Serializable, {, private, static, final, long, serialVersionUID, =, 1L]
[;, private, final, Map, <, WarningsGuard, ,, Integer, >, orderOfAddition, ;, private, GuardComparator, (, Map, <, WarningsGuard, ,, Integer, >]
[=, orderOfAddition, ;, }, @, Override, public, int, compare, (, WarningsGuard, a, ,, WarningsGuard, b, ), {, int, priorityDiff, =]
[., orderOfAddition, =, orderOfAddition, ;, }, @, Override, public, int, compare, (, WarningsGuard, a, ,, WarningsGuard, b, ), {, int]
[;, }, @, Override, public, int, compare, (, WarningsGuard, a, ,, WarningsGuard, b, ), {, int, priorityDiff, =, a, .]
[;, if, (, priorityDiff, !=, 0, ), {, return, priorityDiff, ;, }, return, orderOfAddition, ., get, (, b, ), .]
[-, b, ., getPriority, (, ), ;, if, (, priorityDiff, !=, 0, ), {, return, priorityDiff, ;, }, return, orderOfAddition]
[., getPriority, (, ), -, b, ., getPriority, (, ), ;, if, (, priorityDiff, !=, 0, ), {, return, priorityDiff]
[;, if, (, priorityDiff, !=, 0, ), {, return, priorityDiff, ;, }, return, orderOfAddition, ., get, (, b, ), .]
[., getPriority, (, ), ;, if, (, priorityDiff, !=, 0, ), {, return, priorityDiff, ;, }, return, orderOfAddition, ., get]
[), {, return, priorityDiff, ;, }, return, orderOfAddition, ., get, (, b, ), ., intValue, (, ), -, orderOfAddition, .]
[!=, 0, ), {, return, priorityDiff, ;, }, return, orderOfAddition, ., get, (, b, ), ., intValue, (, ), -]
[), {, return, priorityDiff, ;, }, return, orderOfAddition, ., get, (, b, ), ., intValue, (, ), -, orderOfAddition, .]
[;, }, return, orderOfAddition, ., get, (, b, ), ., intValue, (, ), -, orderOfAddition, ., get, (, a, )]
[;, }, }, private, final, TreeSet, <, WarningsGuard, >, guards, =, new, TreeSet, <, WarningsGuard, >, (, guardComparator, ), ;]
[-, orderOfAddition, ., get, (, a, ), ., intValue, (, ), ;, }, }, private, final, TreeSet, <, WarningsGuard, >]
[., intValue, (, ), -, orderOfAddition, ., get, (, a, ), ., intValue, (, ), ;, }, }, private, final]
[., get, (, b, ), ., intValue, (, ), -, orderOfAddition, ., get, (, a, ), ., intValue, (, )]
[), ., intValue, (, ), -, orderOfAddition, ., get, (, a, ), ., intValue, (, ), ;, }, }, private]
[;, }, }, private, final, TreeSet, <, WarningsGuard, >, guards, =, new, TreeSet, <, WarningsGuard, >, (, guardComparator, ), ;]
[., intValue, (, ), ;, }, }, private, final, TreeSet, <, WarningsGuard, >, guards, =, new, TreeSet, <, WarningsGuard, >]
[., get, (, a, ), ., intValue, (, ), ;, }, }, private, final, TreeSet, <, WarningsGuard, >, guards, =]
[), ., intValue, (, ), ;, }, }, private, final, TreeSet, <, WarningsGuard, >, guards, =, new, TreeSet, <, WarningsGuard]
[;, public, ComposeWarningsGuard, (, List, <, WarningsGuard, >, guards, ), {, addGuards, (, guards, ), ;, }, public, ComposeWarningsGuard, (]
[), ;, public, ComposeWarningsGuard, (, List, <, WarningsGuard, >, guards, ), {, addGuards, (, guards, ), ;, }, public, ComposeWarningsGuard]
[;, }, public, ComposeWarningsGuard, (, WarningsGuard, ..., guards, ), {, this, (, Lists, ., newArrayList, (, guards, ), ), ;]
[), ;, }, public, ComposeWarningsGuard, (, WarningsGuard, ..., guards, ), {, this, (, Lists, ., newArrayList, (, guards, ), )]
[), ;, }, void, addGuard, (, WarningsGuard, guard, ), {, if, (, guard, instanceof, ComposeWarningsGuard, ), {, ComposeWarningsGuard, composeGuard, =]
[., newArrayList, (, guards, ), ), ;, }, void, addGuard, (, WarningsGuard, guard, ), {, if, (, guard, instanceof, ComposeWarningsGuard]
[), ), ;, }, void, addGuard, (, WarningsGuard, guard, ), {, if, (, guard, instanceof, ComposeWarningsGuard, ), {, ComposeWarningsGuard, composeGuard]
[), {, ComposeWarningsGuard, composeGuard, =, (, ComposeWarningsGuard, ), guard, ;, if, (, composeGuard, ., demoteErrors, ), {, this, ., demoteErrors]
[instanceof, ComposeWarningsGuard, ), {, ComposeWarningsGuard, composeGuard, =, (, ComposeWarningsGuard, ), guard, ;, if, (, composeGuard, ., demoteErrors, ), {, this]
[;, if, (, composeGuard, ., demoteErrors, ), {, this, ., demoteErrors, =, composeGuard, ., demoteErrors, ;, }, addGuards, (, Lists]
[;, if, (, composeGuard, ., demoteErrors, ), {, this, ., demoteErrors, =, composeGuard, ., demoteErrors, ;, }, addGuards, (, Lists]
[), {, this, ., demoteErrors, =, composeGuard, ., demoteErrors, ;, }, addGuards, (, Lists, ., newArrayList, (, composeGuard, ., guards]
[., demoteErrors, ), {, this, ., demoteErrors, =, composeGuard, ., demoteErrors, ;, }, addGuards, (, Lists, ., newArrayList, (, composeGuard]
[=, composeGuard, ., demoteErrors, ;, }, addGuards, (, Lists, ., newArrayList, (, composeGuard, ., guards, ., descendingSet, (, ), )]
[., demoteErrors, =, composeGuard, ., demoteErrors, ;, }, addGuards, (, Lists, ., newArrayList, (, composeGuard, ., guards, ., descendingSet, (]
[;, }, addGuards, (, Lists, ., newArrayList, (, composeGuard, ., guards, ., descendingSet, (, ), ), ), ;, }, else]
[., demoteErrors, ;, }, addGuards, (, Lists, ., newArrayList, (, composeGuard, ., guards, ., descendingSet, (, ), ), ), ;]
[;, }, else, {, numberOfAdds, ++, ;, orderOfAddition, ., put, (, guard, ,, numberOfAdds, ), ;, guards, ., remove, (]
[), ;, }, else, {, numberOfAdds, ++, ;, orderOfAddition, ., put, (, guard, ,, numberOfAdds, ), ;, guards, ., remove]
[., newArrayList, (, composeGuard, ., guards, ., descendingSet, (, ), ), ), ;, }, else, {, numberOfAdds, ++, ;, orderOfAddition]
[), ), ;, }, else, {, numberOfAdds, ++, ;, orderOfAddition, ., put, (, guard, ,, numberOfAdds, ), ;, guards, .]
[., descendingSet, (, ), ), ), ;, }, else, {, numberOfAdds, ++, ;, orderOfAddition, ., put, (, guard, ,, numberOfAdds]
[., guards, ., descendingSet, (, ), ), ), ;, }, else, {, numberOfAdds, ++, ;, orderOfAddition, ., put, (, guard]
[;, orderOfAddition, ., put, (, guard, ,, numberOfAdds, ), ;, guards, ., remove, (, guard, ), ;, guards, ., add]
[++, ;, orderOfAddition, ., put, (, guard, ,, numberOfAdds, ), ;, guards, ., remove, (, guard, ), ;, guards, .]
[;, guards, ., remove, (, guard, ), ;, guards, ., add, (, guard, ), ;, }, }, private, void, addGuards]
[., put, (, guard, ,, numberOfAdds, ), ;, guards, ., remove, (, guard, ), ;, guards, ., add, (, guard]
[,, numberOfAdds, ), ;, guards, ., remove, (, guard, ), ;, guards, ., add, (, guard, ), ;, }, }]
[), ;, guards, ., remove, (, guard, ), ;, guards, ., add, (, guard, ), ;, }, }, private, void]
[;, guards, ., add, (, guard, ), ;, }, }, private, void, addGuards, (, Iterable, <, WarningsGuard, >, guards, )]
[., remove, (, guard, ), ;, guards, ., add, (, guard, ), ;, }, }, private, void, addGuards, (, Iterable]
[), ;, guards, ., add, (, guard, ), ;, }, }, private, void, addGuards, (, Iterable, <, WarningsGuard, >, guards]
[;, }, }, private, void, addGuards, (, Iterable, <, WarningsGuard, >, guards, ), {, for, (, WarningsGuard, guard, :, guards]
[., add, (, guard, ), ;, }, }, private, void, addGuards, (, Iterable, <, WarningsGuard, >, guards, ), {, for]
[), ;, }, }, private, void, addGuards, (, Iterable, <, WarningsGuard, >, guards, ), {, for, (, WarningsGuard, guard, :]
[), {, addGuard, (, guard, ), ;, }, }, @, Override, public, CheckLevel, level, (, JSError, error, ), {, for]
[;, }, }, @, Override, public, CheckLevel, level, (, JSError, error, ), {, for, (, WarningsGuard, guard, :, guards, )]
[), ;, }, }, @, Override, public, CheckLevel, level, (, JSError, error, ), {, for, (, WarningsGuard, guard, :, guards]
[), {, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (, newLevel, !=, null, ), {, if]
[;, if, (, newLevel, !=, null, ), {, if, (, demoteErrors, &&, newLevel, ==, CheckLevel, ., ERROR, ), {, return]
[., level, (, error, ), ;, if, (, newLevel, !=, null, ), {, if, (, demoteErrors, &&, newLevel, ==, CheckLevel]
[), ;, if, (, newLevel, !=, null, ), {, if, (, demoteErrors, &&, newLevel, ==, CheckLevel, ., ERROR, ), {]
[), {, if, (, demoteErrors, &&, newLevel, ==, CheckLevel, ., ERROR, ), {, return, CheckLevel, ., WARNING, ;, }, return]
[!=, null, ), {, if, (, demoteErrors, &&, newLevel, ==, CheckLevel, ., ERROR, ), {, return, CheckLevel, ., WARNING, ;]
[), {, if, (, demoteErrors, &&, newLevel, ==, CheckLevel, ., ERROR, ), {, return, CheckLevel, ., WARNING, ;, }, return]
[), {, return, CheckLevel, ., WARNING, ;, }, return, newLevel, ;, }, }, return, null, ;, }, @, Override, public]
[&&, newLevel, ==, CheckLevel, ., ERROR, ), {, return, CheckLevel, ., WARNING, ;, }, return, newLevel, ;, }, }, return]
[), {, return, CheckLevel, ., WARNING, ;, }, return, newLevel, ;, }, }, return, null, ;, }, @, Override, public]
[==, CheckLevel, ., ERROR, ), {, return, CheckLevel, ., WARNING, ;, }, return, newLevel, ;, }, }, return, null, ;]
[), {, return, CheckLevel, ., WARNING, ;, }, return, newLevel, ;, }, }, return, null, ;, }, @, Override, public]
[., ERROR, ), {, return, CheckLevel, ., WARNING, ;, }, return, newLevel, ;, }, }, return, null, ;, }, @]
[;, }, return, newLevel, ;, }, }, return, null, ;, }, @, Override, public, boolean, disables, (, DiagnosticGroup, group, )]
[., WARNING, ;, }, return, newLevel, ;, }, }, return, null, ;, }, @, Override, public, boolean, disables, (, DiagnosticGroup]
[;, }, }, return, null, ;, }, @, Override, public, boolean, disables, (, DiagnosticGroup, group, ), {, nextSingleton, :, for]
[;, }, @, Override, public, boolean, disables, (, DiagnosticGroup, group, ), {, nextSingleton, :, for, (, DiagnosticType, type, :, group]
[), {, DiagnosticGroup, singleton, =, DiagnosticGroup, ., forType, (, type, ), ;, for, (, WarningsGuard, guard, :, guards, ), {]
[., getTypes, (, ), ), {, DiagnosticGroup, singleton, =, DiagnosticGroup, ., forType, (, type, ), ;, for, (, WarningsGuard, guard]
[;, for, (, WarningsGuard, guard, :, guards, ), {, if, (, guard, ., disables, (, singleton, ), ), {, continue]
[., forType, (, type, ), ;, for, (, WarningsGuard, guard, :, guards, ), {, if, (, guard, ., disables, (]
[), ;, for, (, WarningsGuard, guard, :, guards, ), {, if, (, guard, ., disables, (, singleton, ), ), {]
[), {, if, (, guard, ., disables, (, singleton, ), ), {, continue, nextSingleton, ;, }, else, if, (, guard]
[), {, continue, nextSingleton, ;, }, else, if, (, guard, ., enables, (, singleton, ), ), {, return, false, ;]
[., disables, (, singleton, ), ), {, continue, nextSingleton, ;, }, else, if, (, guard, ., enables, (, singleton, )]
[), ), {, continue, nextSingleton, ;, }, else, if, (, guard, ., enables, (, singleton, ), ), {, return, false]
[), {, return, false, ;, }, }, return, false, ;, }, return, true, ;, }, @, Override, public, boolean, enables]
[., enables, (, singleton, ), ), {, return, false, ;, }, }, return, false, ;, }, return, true, ;, }]
[), ), {, return, false, ;, }, }, return, false, ;, }, return, true, ;, }, @, Override, public, boolean]
[;, }, }, return, false, ;, }, return, true, ;, }, @, Override, public, boolean, enables, (, DiagnosticGroup, group, )]
[;, }, return, true, ;, }, @, Override, public, boolean, enables, (, DiagnosticGroup, group, ), {, for, (, WarningsGuard, guard]
[;, }, @, Override, public, boolean, enables, (, DiagnosticGroup, group, ), {, for, (, WarningsGuard, guard, :, guards, ), {]
[), {, if, (, guard, ., enables, (, group, ), ), {, return, true, ;, }, else, if, (, guard]
[), {, return, true, ;, }, else, if, (, guard, ., disables, (, group, ), ), {, return, false, ;]
[., enables, (, group, ), ), {, return, true, ;, }, else, if, (, guard, ., disables, (, group, )]
[), ), {, return, true, ;, }, else, if, (, guard, ., disables, (, group, ), ), {, return, false]
[;, }, else, if, (, guard, ., disables, (, group, ), ), {, return, false, ;, }, }, return, false]
[), {, return, false, ;, }, }, return, false, ;, }, List, <, WarningsGuard, >, getGuards, (, ), {, return]
[., disables, (, group, ), ), {, return, false, ;, }, }, return, false, ;, }, List, <, WarningsGuard, >]
[), ), {, return, false, ;, }, }, return, false, ;, }, List, <, WarningsGuard, >, getGuards, (, ), {]
[;, }, }, return, false, ;, }, List, <, WarningsGuard, >, getGuards, (, ), {, return, Collections, ., unmodifiableList, (]
[;, }, List, <, WarningsGuard, >, getGuards, (, ), {, return, Collections, ., unmodifiableList, (, Lists, ., newArrayList, (, guards]
[;, }, ComposeWarningsGuard, makeEmergencyFailSafeGuard, (, ), {, ComposeWarningsGuard, safeGuard, =, new, ComposeWarningsGuard, (, ), ;, safeGuard, ., demoteErrors, =, true]
[., unmodifiableList, (, Lists, ., newArrayList, (, guards, ), ), ;, }, ComposeWarningsGuard, makeEmergencyFailSafeGuard, (, ), {, ComposeWarningsGuard, safeGuard, =]
[), ;, }, ComposeWarningsGuard, makeEmergencyFailSafeGuard, (, ), {, ComposeWarningsGuard, safeGuard, =, new, ComposeWarningsGuard, (, ), ;, safeGuard, ., demoteErrors, =]
[., newArrayList, (, guards, ), ), ;, }, ComposeWarningsGuard, makeEmergencyFailSafeGuard, (, ), {, ComposeWarningsGuard, safeGuard, =, new, ComposeWarningsGuard, (, )]
[), ), ;, }, ComposeWarningsGuard, makeEmergencyFailSafeGuard, (, ), {, ComposeWarningsGuard, safeGuard, =, new, ComposeWarningsGuard, (, ), ;, safeGuard, ., demoteErrors]
[;, safeGuard, ., demoteErrors, =, true, ;, for, (, WarningsGuard, guard, :, guards, ., descendingSet, (, ), ), {, safeGuard]
[=, true, ;, for, (, WarningsGuard, guard, :, guards, ., descendingSet, (, ), ), {, safeGuard, ., addGuard, (, guard]
[., demoteErrors, =, true, ;, for, (, WarningsGuard, guard, :, guards, ., descendingSet, (, ), ), {, safeGuard, ., addGuard]
[;, for, (, WarningsGuard, guard, :, guards, ., descendingSet, (, ), ), {, safeGuard, ., addGuard, (, guard, ), ;]
[), {, safeGuard, ., addGuard, (, guard, ), ;, }, return, safeGuard, ;, }, @, Override, public, String, toString, (]
[., descendingSet, (, ), ), {, safeGuard, ., addGuard, (, guard, ), ;, }, return, safeGuard, ;, }, @, Override]
[;, }, return, safeGuard, ;, }, @, Override, public, String, toString, (, ), {, return, Joiner, ., on, (, ", "]
[., addGuard, (, guard, ), ;, }, return, safeGuard, ;, }, @, Override, public, String, toString, (, ), {, return]
[), ;, }, return, safeGuard, ;, }, @, Override, public, String, toString, (, ), {, return, Joiner, ., on, (]
[;, }, @, Override, public, String, toString, (, ), {, return, Joiner, ., on, (, ", ", ), ., join, (]
[;, }, }]
[., join, (, guards, ), ;, }, }]
[., on, (, ", ", ), ., join, (, guards, ), ;, }, }]
[), ., join, (, guards, ), ;, }, }]
[), ;, }, }]
