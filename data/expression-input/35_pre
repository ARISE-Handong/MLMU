[math3, ., util, ., MathUtils, ;, public, class, SecondMoment, extends, FirstMoment, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[static, final, long, serialVersionUID, =, 3942403127395076445L, ;, protected, double, m2, ;, public, SecondMoment, (, ), {, super, (, ), ;]
[long, serialVersionUID, =, 3942403127395076445L, ;, protected, double, m2, ;, public, SecondMoment, (, ), {, super, (, ), ;, m2, =]
[long, serialVersionUID, =, 3942403127395076445L, ;, protected, double, m2, ;, public, SecondMoment, (, ), {, super, (, ), ;, m2, =]
[), ;, m2, =, Double, ., NaN, ;, }, public, SecondMoment, (, SecondMoment, original, ), throws, NullArgumentException, {, super, (]
[=, Double, ., NaN, ;, }, public, SecondMoment, (, SecondMoment, original, ), throws, NullArgumentException, {, super, (, original, ), ;]
[=, Double, ., NaN, ;, }, public, SecondMoment, (, SecondMoment, original, ), throws, NullArgumentException, {, super, (, original, ), ;]
[;, }, public, SecondMoment, (, SecondMoment, original, ), throws, NullArgumentException, {, super, (, original, ), ;, this, ., m2, =]
[;, }, public, SecondMoment, (, SecondMoment, original, ), throws, NullArgumentException, {, super, (, original, ), ;, this, ., m2, =]
[m2, =, original, ., m2, ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (]
[m2, =, original, ., m2, ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (]
[original, ., m2, ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, n, <]
[;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, n, <, 1, ), {]
[@, Override, public, void, increment, (, final, double, d, ), {, if, (, n, <, 1, ), {, m1, =]
[public, void, increment, (, final, double, d, ), {, if, (, n, <, 1, ), {, m1, =, m2, =]
[(, final, double, d, ), {, if, (, n, <, 1, ), {, m1, =, m2, =, 0.0, ;, }]
[(, final, double, d, ), {, if, (, n, <, 1, ), {, m1, =, m2, =, 0.0, ;, }]
[), {, if, (, n, <, 1, ), {, m1, =, m2, =, 0.0, ;, }, super, ., increment, (]
[(, n, <, 1, ), {, m1, =, m2, =, 0.0, ;, }, super, ., increment, (, d, ), ;]
[<, 1, ), {, m1, =, m2, =, 0.0, ;, }, super, ., increment, (, d, ), ;, m2, +=]
[<, 1, ), {, m1, =, m2, =, 0.0, ;, }, super, ., increment, (, d, ), ;, m2, +=]
[<, 1, ), {, m1, =, m2, =, 0.0, ;, }, super, ., increment, (, d, ), ;, m2, +=]
[1, ), {, m1, =, m2, =, 0.0, ;, }, super, ., increment, (, d, ), ;, m2, +=, (]
[1, ), {, m1, =, m2, =, 0.0, ;, }, super, ., increment, (, d, ), ;, m2, +=, (]
[m1, =, m2, =, 0.0, ;, }, super, ., increment, (, d, ), ;, m2, +=, (, (, double, )]
[m2, =, 0.0, ;, }, super, ., increment, (, d, ), ;, m2, +=, (, (, double, ), n, -]
[;, }, super, ., increment, (, d, ), ;, m2, +=, (, (, double, ), n, -, 1, ), *]
[super, ., increment, (, d, ), ;, m2, +=, (, (, double, ), n, -, 1, ), *, dev, *]
[double, ), n, -, 1, ), *, dev, *, nDev, ;, }, @, Override, public, void, clear, (, ), {]
[double, ), n, -, 1, ), *, dev, *, nDev, ;, }, @, Override, public, void, clear, (, ), {]
[*, dev, *, nDev, ;, }, @, Override, public, void, clear, (, ), {, super, ., clear, (, ), ;]
[*, nDev, ;, }, @, Override, public, void, clear, (, ), {, super, ., clear, (, ), ;, m2, =]
[*, nDev, ;, }, @, Override, public, void, clear, (, ), {, super, ., clear, (, ), ;, m2, =]
[clear, (, ), ;, m2, =, Double, ., NaN, ;, }, @, Override, public, double, getResult, (, ), {, return]
[double, getResult, (, ), {, return, m2, ;, }, @, Override, public, SecondMoment, copy, (, ), {, SecondMoment, result, =]
[return, m2, ;, }, @, Override, public, SecondMoment, copy, (, ), {, SecondMoment, result, =, new, SecondMoment, (, ), ;]
[;, }, @, Override, public, SecondMoment, copy, (, ), {, SecondMoment, result, =, new, SecondMoment, (, ), ;, copy, (]
[@, Override, public, SecondMoment, copy, (, ), {, SecondMoment, result, =, new, SecondMoment, (, ), ;, copy, (, this, ,]
[copy, (, ), {, SecondMoment, result, =, new, SecondMoment, (, ), ;, copy, (, this, ,, result, ), ;, return]
[), ;, return, result, ;, }, public, static, void, copy, (, SecondMoment, source, ,, SecondMoment, dest, ), throws, NullArgumentException, {]
[), ;, return, result, ;, }, public, static, void, copy, (, SecondMoment, source, ,, SecondMoment, dest, ), throws, NullArgumentException, {]
[;, }, public, static, void, copy, (, SecondMoment, source, ,, SecondMoment, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (]
[static, void, copy, (, SecondMoment, source, ,, SecondMoment, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;]
[static, void, copy, (, SecondMoment, source, ,, SecondMoment, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;]
[SecondMoment, source, ,, SecondMoment, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (]
[SecondMoment, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;]
[SecondMoment, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;]
[NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, FirstMoment, ., copy, (]
[MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, FirstMoment, ., copy, (, source, ,]
[(, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, FirstMoment, ., copy, (, source, ,, dest, ), ;]
[(, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, FirstMoment, ., copy, (, source, ,, dest, ), ;]
[MathUtils, ., checkNotNull, (, dest, ), ;, FirstMoment, ., copy, (, source, ,, dest, ), ;, dest, ., m2, =]
[MathUtils, ., checkNotNull, (, dest, ), ;, FirstMoment, ., copy, (, source, ,, dest, ), ;, dest, ., m2, =]
