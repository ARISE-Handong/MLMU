[private, final, Node, jsRoot, ;, private, final, boolean, trackSize, ;, private, final, boolean, trackGzippedSize, ;, private, final, RecentChange, codeChange, =]
[;, private, final, boolean, trackGzippedSize, ;, private, final, RecentChange, codeChange, =, new, RecentChange, (, ), ;, private, int, curCodeSizeEstimate, =]
[private, final, boolean, trackGzippedSize, ;, private, final, RecentChange, codeChange, =, new, RecentChange, (, ), ;, private, int, curCodeSizeEstimate, =, -]
[final, RecentChange, codeChange, =, new, RecentChange, (, ), ;, private, int, curCodeSizeEstimate, =, -, 1, ;, private, int, curZippedCodeSizeEstimate, =]
[RecentChange, codeChange, =, new, RecentChange, (, ), ;, private, int, curCodeSizeEstimate, =, -, 1, ;, private, int, curZippedCodeSizeEstimate, =, -]
[int, curCodeSizeEstimate, =, -, 1, ;, private, int, curZippedCodeSizeEstimate, =, -, 1, ;, private, Deque, <, String, >, currentRunningPass, =]
[currentRunningPass, =, new, ArrayDeque, <, String, >, (, ), ;, private, final, Map, <, String, ,, Stats, >, summary, =]
[currentRunningPass, =, new, ArrayDeque, <, String, >, (, ), ;, private, final, Map, <, String, ,, Stats, >, summary, =]
[,, Stats, >, summary, =, Maps, ., newHashMap, (, ), ;, private, ImmutableMap, <, String, ,, Stats, >, summaryCopy, =]
[;, private, ImmutableMap, <, String, ,, Stats, >, summaryCopy, =, null, ;, private, final, List, <, Stats, >, log, =]
[;, private, ImmutableMap, <, String, ,, Stats, >, summaryCopy, =, null, ;, private, final, List, <, Stats, >, log, =]
[log, =, Lists, ., newArrayList, (, ), ;, public, static, class, Stats, {, public, Stats, (, String, pass, ), {]
[log, =, Lists, ., newArrayList, (, ), ;, public, static, class, Stats, {, public, Stats, (, String, pass, ), {]
[newArrayList, (, ), ;, public, static, class, Stats, {, public, Stats, (, String, pass, ), {, this, ., pass, =]
[String, pass, ), {, this, ., pass, =, pass, ;, }, public, final, String, pass, ;, public, long, runtime, =]
[pass, =, pass, ;, }, public, final, String, pass, ;, public, long, runtime, =, 0, ;, public, int, runs, =]
[final, String, pass, ;, public, long, runtime, =, 0, ;, public, int, runs, =, 0, ;, public, int, changes, =]
[runtime, =, 0, ;, public, int, runs, =, 0, ;, public, int, changes, =, 0, ;, public, int, diff, =]
[runs, =, 0, ;, public, int, changes, =, 0, ;, public, int, diff, =, 0, ;, public, int, gzDiff, =]
[changes, =, 0, ;, public, int, diff, =, 0, ;, public, int, gzDiff, =, 0, ;, public, int, size, =]
[diff, =, 0, ;, public, int, gzDiff, =, 0, ;, public, int, size, =, 0, ;, public, int, gzSize, =]
[size, =, 0, ;, public, int, gzSize, =, 0, ;, }, PerformanceTracker, (, Node, jsRoot, ,, TracerMode, mode, ), {]
[size, =, 0, ;, public, int, gzSize, =, 0, ;, }, PerformanceTracker, (, Node, jsRoot, ,, TracerMode, mode, ), {]
[public, int, gzSize, =, 0, ;, }, PerformanceTracker, (, Node, jsRoot, ,, TracerMode, mode, ), {, this, ., jsRoot, =]
[0, ;, }, PerformanceTracker, (, Node, jsRoot, ,, TracerMode, mode, ), {, this, ., jsRoot, =, jsRoot, ;, switch, (]
[(, Node, jsRoot, ,, TracerMode, mode, ), {, this, ., jsRoot, =, jsRoot, ;, switch, (, mode, ), {, case]
[jsRoot, ,, TracerMode, mode, ), {, this, ., jsRoot, =, jsRoot, ;, switch, (, mode, ), {, case, TIMING_ONLY, :]
[jsRoot, ,, TracerMode, mode, ), {, this, ., jsRoot, =, jsRoot, ;, switch, (, mode, ), {, case, TIMING_ONLY, :]
[), {, this, ., jsRoot, =, jsRoot, ;, switch, (, mode, ), {, case, TIMING_ONLY, :, this, ., trackSize, =]
[this, ., jsRoot, =, jsRoot, ;, switch, (, mode, ), {, case, TIMING_ONLY, :, this, ., trackSize, =, false, ;]
[this, ., jsRoot, =, jsRoot, ;, switch, (, mode, ), {, case, TIMING_ONLY, :, this, ., trackSize, =, false, ;]
[jsRoot, ;, switch, (, mode, ), {, case, TIMING_ONLY, :, this, ., trackSize, =, false, ;, this, ., trackGzippedSize, =]
[), {, case, TIMING_ONLY, :, this, ., trackSize, =, false, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case]
[case, TIMING_ONLY, :, this, ., trackSize, =, false, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, RAW_SIZE, :]
[case, TIMING_ONLY, :, this, ., trackSize, =, false, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, RAW_SIZE, :]
[., trackSize, =, false, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, RAW_SIZE, :, this, ., trackSize, =]
[=, false, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, RAW_SIZE, :, this, ., trackSize, =, true, ;]
[=, false, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, RAW_SIZE, :, this, ., trackSize, =, true, ;]
[., trackGzippedSize, =, false, ;, break, ;, case, RAW_SIZE, :, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =]
[break, ;, case, RAW_SIZE, :, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case]
[case, RAW_SIZE, :, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, ALL, :]
[case, RAW_SIZE, :, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, ALL, :]
[., trackSize, =, true, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, ALL, :, this, ., trackSize, =]
[=, true, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, ALL, :, this, ., trackSize, =, true, ;]
[=, true, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, ALL, :, this, ., trackSize, =, true, ;]
[., trackGzippedSize, =, false, ;, break, ;, case, ALL, :, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =]
[break, ;, case, ALL, :, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =, true, ;, break, ;, case]
[this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =, true, ;, break, ;, case, OFF, :, default, :, throw]
[;, case, OFF, :, default, :, throw, new, UnsupportedOperationException, (, ), ;, }, }, CodeChangeHandler, getCodeChangeHandler, (, ), {, return]
[), ;, }, }, CodeChangeHandler, getCodeChangeHandler, (, ), {, return, codeChange, ;, }, void, recordPassStart, (, String, passName, ), {]
[), ;, }, }, CodeChangeHandler, getCodeChangeHandler, (, ), {, return, codeChange, ;, }, void, recordPassStart, (, String, passName, ), {]
[CodeChangeHandler, getCodeChangeHandler, (, ), {, return, codeChange, ;, }, void, recordPassStart, (, String, passName, ), {, currentRunningPass, ., push, (]
[), {, return, codeChange, ;, }, void, recordPassStart, (, String, passName, ), {, currentRunningPass, ., push, (, passName, ), ;]
[), {, return, codeChange, ;, }, void, recordPassStart, (, String, passName, ), {, currentRunningPass, ., push, (, passName, ), ;]
[codeChange, ., reset, (, ), ;, }, void, recordPassStop, (, String, passName, ,, long, result, ), {, String, currentPassName, =]
[codeChange, ., reset, (, ), ;, }, void, recordPassStop, (, String, passName, ,, long, result, ), {, String, currentPassName, =]
[recordPassStop, (, String, passName, ,, long, result, ), {, String, currentPassName, =, currentRunningPass, ., pop, (, ), ;, if, (]
[(, String, passName, ,, long, result, ), {, String, currentPassName, =, currentRunningPass, ., pop, (, ), ;, if, (, !]
[(, String, passName, ,, long, result, ), {, String, currentPassName, =, currentRunningPass, ., pop, (, ), ;, if, (, !]
[long, result, ), {, String, currentPassName, =, currentRunningPass, ., pop, (, ), ;, if, (, !, passName, ., equals, (]
[currentPassName, =, currentRunningPass, ., pop, (, ), ;, if, (, !, passName, ., equals, (, currentPassName, ), ), {, throw]
[., pop, (, ), ;, if, (, !, passName, ., equals, (, currentPassName, ), ), {, throw, new, RuntimeException, (]
[., pop, (, ), ;, if, (, !, passName, ., equals, (, currentPassName, ), ), {, throw, new, RuntimeException, (]
[(, ), ;, if, (, !, passName, ., equals, (, currentPassName, ), ), {, throw, new, RuntimeException, (, passName, +]
[., equals, (, currentPassName, ), ), {, throw, new, RuntimeException, (, passName, +, " is not running.", ), ;, }, CodeSizeEstimatePrinter, printer, =]
[), ), {, throw, new, RuntimeException, (, passName, +, " is not running.", ), ;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (]
[), ), {, throw, new, RuntimeException, (, passName, +, " is not running.", ), ;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (]
[), ), {, throw, new, RuntimeException, (, passName, +, " is not running.", ), ;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (]
[(, passName, +, " is not running.", ), ;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (, codeChange, ., hasCodeChanged, (, ), &&]
[passName, +, " is not running.", ), ;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (, codeChange, ., hasCodeChanged, (, ), &&, (]
[passName, +, " is not running.", ), ;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (, codeChange, ., hasCodeChanged, (, ), &&, (]
[" is not running.", ), ;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (, codeChange, ., hasCodeChanged, (, ), &&, (, trackSize, ||]
[CodeSizeEstimatePrinter, printer, =, null, ;, if, (, codeChange, ., hasCodeChanged, (, ), &&, (, trackSize, ||, trackGzippedSize, ), ), {]
[=, null, ;, if, (, codeChange, ., hasCodeChanged, (, ), &&, (, trackSize, ||, trackGzippedSize, ), ), {, printer, =]
[;, if, (, codeChange, ., hasCodeChanged, (, ), &&, (, trackSize, ||, trackGzippedSize, ), ), {, printer, =, estimateCodeSize, (]
[), &&, (, trackSize, ||, trackGzippedSize, ), ), {, printer, =, estimateCodeSize, (, jsRoot, ), ;, }, Stats, logStats, =]
[trackSize, ||, trackGzippedSize, ), ), {, printer, =, estimateCodeSize, (, jsRoot, ), ;, }, Stats, logStats, =, new, Stats, (]
[), ), {, printer, =, estimateCodeSize, (, jsRoot, ), ;, }, Stats, logStats, =, new, Stats, (, currentPassName, ), ;]
[), ), {, printer, =, estimateCodeSize, (, jsRoot, ), ;, }, Stats, logStats, =, new, Stats, (, currentPassName, ), ;]
[=, estimateCodeSize, (, jsRoot, ), ;, }, Stats, logStats, =, new, Stats, (, currentPassName, ), ;, log, ., add, (]
[jsRoot, ), ;, }, Stats, logStats, =, new, Stats, (, currentPassName, ), ;, log, ., add, (, logStats, ), ;]
[;, }, Stats, logStats, =, new, Stats, (, currentPassName, ), ;, log, ., add, (, logStats, ), ;, updateStats, (]
[Stats, logStats, =, new, Stats, (, currentPassName, ), ;, log, ., add, (, logStats, ), ;, updateStats, (, logStats, ,]
[=, new, Stats, (, currentPassName, ), ;, log, ., add, (, logStats, ), ;, updateStats, (, logStats, ,, result, ,]
[;, log, ., add, (, logStats, ), ;, updateStats, (, logStats, ,, result, ,, printer, ), ;, Stats, summaryStats, =]
[;, log, ., add, (, logStats, ), ;, updateStats, (, logStats, ,, result, ,, printer, ), ;, Stats, summaryStats, =]
[(, logStats, ), ;, updateStats, (, logStats, ,, result, ,, printer, ), ;, Stats, summaryStats, =, summary, ., get, (]
[(, logStats, ,, result, ,, printer, ), ;, Stats, summaryStats, =, summary, ., get, (, passName, ), ;, if, (]
[(, logStats, ,, result, ,, printer, ), ;, Stats, summaryStats, =, summary, ., get, (, passName, ), ;, if, (]
[,, result, ,, printer, ), ;, Stats, summaryStats, =, summary, ., get, (, passName, ), ;, if, (, summaryStats, ==]
[printer, ), ;, Stats, summaryStats, =, summary, ., get, (, passName, ), ;, if, (, summaryStats, ==, null, ), {]
[;, Stats, summaryStats, =, summary, ., get, (, passName, ), ;, if, (, summaryStats, ==, null, ), {, summaryStats, =]
[=, summary, ., get, (, passName, ), ;, if, (, summaryStats, ==, null, ), {, summaryStats, =, new, Stats, (]
[get, (, passName, ), ;, if, (, summaryStats, ==, null, ), {, summaryStats, =, new, Stats, (, passName, ), ;]
[get, (, passName, ), ;, if, (, summaryStats, ==, null, ), {, summaryStats, =, new, Stats, (, passName, ), ;]
[;, if, (, summaryStats, ==, null, ), {, summaryStats, =, new, Stats, (, passName, ), ;, summary, ., put, (]
[(, summaryStats, ==, null, ), {, summaryStats, =, new, Stats, (, passName, ), ;, summary, ., put, (, passName, ,]
[), {, summaryStats, =, new, Stats, (, passName, ), ;, summary, ., put, (, passName, ,, summaryStats, ), ;, }]
[summaryStats, =, new, Stats, (, passName, ), ;, summary, ., put, (, passName, ,, summaryStats, ), ;, }, updateStats, (]
[new, Stats, (, passName, ), ;, summary, ., put, (, passName, ,, summaryStats, ), ;, }, updateStats, (, summaryStats, ,]
[(, passName, ), ;, summary, ., put, (, passName, ,, summaryStats, ), ;, }, updateStats, (, summaryStats, ,, result, ,]
[., put, (, passName, ,, summaryStats, ), ;, }, updateStats, (, summaryStats, ,, result, ,, printer, ), ;, if, (]
[., put, (, passName, ,, summaryStats, ), ;, }, updateStats, (, summaryStats, ,, result, ,, printer, ), ;, if, (]
[(, passName, ,, summaryStats, ), ;, }, updateStats, (, summaryStats, ,, result, ,, printer, ), ;, if, (, printer, !=]
[;, }, updateStats, (, summaryStats, ,, result, ,, printer, ), ;, if, (, printer, !=, null, ), {, if, (]
[(, summaryStats, ,, result, ,, printer, ), ;, if, (, printer, !=, null, ), {, if, (, trackSize, ), {]
[,, result, ,, printer, ), ;, if, (, printer, !=, null, ), {, if, (, trackSize, ), {, curCodeSizeEstimate, =]
[,, result, ,, printer, ), ;, if, (, printer, !=, null, ), {, if, (, trackSize, ), {, curCodeSizeEstimate, =]
[!=, null, ), {, if, (, trackSize, ), {, curCodeSizeEstimate, =, printer, ., calcSize, (, ), ;, }, if, (]
[{, if, (, trackSize, ), {, curCodeSizeEstimate, =, printer, ., calcSize, (, ), ;, }, if, (, trackGzippedSize, ), {]
[(, trackSize, ), {, curCodeSizeEstimate, =, printer, ., calcSize, (, ), ;, }, if, (, trackGzippedSize, ), {, curZippedCodeSizeEstimate, =]
[(, trackSize, ), {, curCodeSizeEstimate, =, printer, ., calcSize, (, ), ;, }, if, (, trackGzippedSize, ), {, curZippedCodeSizeEstimate, =]
[(, ), ;, }, }, }, private, void, updateStats, (, Stats, stats, ,, long, result, ,, CodeSizeEstimatePrinter, printer, ), {]
[(, ), ;, }, }, }, private, void, updateStats, (, Stats, stats, ,, long, result, ,, CodeSizeEstimatePrinter, printer, ), {]
[}, }, private, void, updateStats, (, Stats, stats, ,, long, result, ,, CodeSizeEstimatePrinter, printer, ), {, stats, ., runtime, +=]
[private, void, updateStats, (, Stats, stats, ,, long, result, ,, CodeSizeEstimatePrinter, printer, ), {, stats, ., runtime, +=, result, ;]
[private, void, updateStats, (, Stats, stats, ,, long, result, ,, CodeSizeEstimatePrinter, printer, ), {, stats, ., runtime, +=, result, ;]
[Stats, stats, ,, long, result, ,, CodeSizeEstimatePrinter, printer, ), {, stats, ., runtime, +=, result, ;, stats, ., runs, +=]
[result, ,, CodeSizeEstimatePrinter, printer, ), {, stats, ., runtime, +=, result, ;, stats, ., runs, +=, 1, ;, if, (]
[result, ,, CodeSizeEstimatePrinter, printer, ), {, stats, ., runtime, +=, result, ;, stats, ., runs, +=, 1, ;, if, (]
[., runtime, +=, result, ;, stats, ., runs, +=, 1, ;, if, (, codeChange, ., hasCodeChanged, (, ), ), {]
[., runtime, +=, result, ;, stats, ., runs, +=, 1, ;, if, (, codeChange, ., hasCodeChanged, (, ), ), {]
[;, stats, ., runs, +=, 1, ;, if, (, codeChange, ., hasCodeChanged, (, ), ), {, stats, ., changes, +=]
[1, ;, if, (, codeChange, ., hasCodeChanged, (, ), ), {, stats, ., changes, +=, 1, ;, }, if, (]
[1, ;, if, (, codeChange, ., hasCodeChanged, (, ), ), {, stats, ., changes, +=, 1, ;, }, if, (]
[if, (, codeChange, ., hasCodeChanged, (, ), ), {, stats, ., changes, +=, 1, ;, }, if, (, printer, !=]
[., hasCodeChanged, (, ), ), {, stats, ., changes, +=, 1, ;, }, if, (, printer, !=, null, ), {]
[(, ), ), {, stats, ., changes, +=, 1, ;, }, if, (, printer, !=, null, ), {, recordSizeChange, (]
[), {, stats, ., changes, +=, 1, ;, }, if, (, printer, !=, null, ), {, recordSizeChange, (, curCodeSizeEstimate, ,]
[), {, stats, ., changes, +=, 1, ;, }, if, (, printer, !=, null, ), {, recordSizeChange, (, curCodeSizeEstimate, ,]
[1, ;, }, if, (, printer, !=, null, ), {, recordSizeChange, (, curCodeSizeEstimate, ,, printer, ., calcSize, (, ), ,]
[if, (, printer, !=, null, ), {, recordSizeChange, (, curCodeSizeEstimate, ,, printer, ., calcSize, (, ), ,, stats, ), ;]
[printer, !=, null, ), {, recordSizeChange, (, curCodeSizeEstimate, ,, printer, ., calcSize, (, ), ,, stats, ), ;, recordGzSizeChange, (]
[null, ), {, recordSizeChange, (, curCodeSizeEstimate, ,, printer, ., calcSize, (, ), ,, stats, ), ;, recordGzSizeChange, (, curZippedCodeSizeEstimate, ,]
[null, ), {, recordSizeChange, (, curCodeSizeEstimate, ,, printer, ., calcSize, (, ), ,, stats, ), ;, recordGzSizeChange, (, curZippedCodeSizeEstimate, ,]
[,, printer, ., calcSize, (, ), ,, stats, ), ;, recordGzSizeChange, (, curZippedCodeSizeEstimate, ,, printer, ., calcZippedSize, (, ), ,]
[;, }, }, private, static, void, recordSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (]
[;, }, }, private, static, void, recordSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (]
[}, private, static, void, recordSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (, oldSize, !=]
[private, static, void, recordSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (, oldSize, !=, -]
[oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (, oldSize, !=, -, 1, ), {, int, delta, =]
[oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (, oldSize, !=, -, 1, ), {, int, delta, =]
[int, newSize, ,, Stats, record, ), {, if, (, oldSize, !=, -, 1, ), {, int, delta, =, oldSize, -]
[record, ), {, if, (, oldSize, !=, -, 1, ), {, int, delta, =, oldSize, -, newSize, ;, if, (]
[record, ), {, if, (, oldSize, !=, -, 1, ), {, int, delta, =, oldSize, -, newSize, ;, if, (]
[{, if, (, oldSize, !=, -, 1, ), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >]
[oldSize, !=, -, 1, ), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {]
[oldSize, !=, -, 1, ), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {]
[), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {, record, ., diff, +=]
[-, newSize, ;, if, (, delta, >, 0, ), {, record, ., diff, +=, delta, ;, }, }, if, (]
[-, newSize, ;, if, (, delta, >, 0, ), {, record, ., diff, +=, delta, ;, }, }, if, (]
[;, if, (, delta, >, 0, ), {, record, ., diff, +=, delta, ;, }, }, if, (, newSize, !=]
[if, (, delta, >, 0, ), {, record, ., diff, +=, delta, ;, }, }, if, (, newSize, !=, -]
[>, 0, ), {, record, ., diff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {]
[>, 0, ), {, record, ., diff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {]
[record, ., diff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {, record, ., size, =]
[;, }, }, private, static, void, recordGzSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (]
[;, }, }, private, static, void, recordGzSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (]
[}, private, static, void, recordGzSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (, oldSize, !=]
[private, static, void, recordGzSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (, oldSize, !=, -]
[oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (, oldSize, !=, -, 1, ), {, int, delta, =]
[oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (, oldSize, !=, -, 1, ), {, int, delta, =]
[int, newSize, ,, Stats, record, ), {, if, (, oldSize, !=, -, 1, ), {, int, delta, =, oldSize, -]
[record, ), {, if, (, oldSize, !=, -, 1, ), {, int, delta, =, oldSize, -, newSize, ;, if, (]
[record, ), {, if, (, oldSize, !=, -, 1, ), {, int, delta, =, oldSize, -, newSize, ;, if, (]
[{, if, (, oldSize, !=, -, 1, ), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >]
[oldSize, !=, -, 1, ), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {]
[oldSize, !=, -, 1, ), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {]
[), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {, record, ., gzDiff, +=]
[-, newSize, ;, if, (, delta, >, 0, ), {, record, ., gzDiff, +=, delta, ;, }, }, if, (]
[-, newSize, ;, if, (, delta, >, 0, ), {, record, ., gzDiff, +=, delta, ;, }, }, if, (]
[;, if, (, delta, >, 0, ), {, record, ., gzDiff, +=, delta, ;, }, }, if, (, newSize, !=]
[if, (, delta, >, 0, ), {, record, ., gzDiff, +=, delta, ;, }, }, if, (, newSize, !=, -]
[>, 0, ), {, record, ., gzDiff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {]
[>, 0, ), {, record, ., gzDiff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {]
[record, ., gzDiff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {, record, ., gzSize, =]
[record, ., gzSize, =, newSize, ;, }, }, private, final, CodeSizeEstimatePrinter, estimateCodeSize, (, Node, root, ), {, CodeSizeEstimatePrinter, cp, =]
[=, newSize, ;, }, }, private, final, CodeSizeEstimatePrinter, estimateCodeSize, (, Node, root, ), {, CodeSizeEstimatePrinter, cp, =, new, CodeSizeEstimatePrinter, (]
[final, CodeSizeEstimatePrinter, estimateCodeSize, (, Node, root, ), {, CodeSizeEstimatePrinter, cp, =, new, CodeSizeEstimatePrinter, (, trackGzippedSize, ), ;, CodeGenerator, cg, =]
[final, CodeSizeEstimatePrinter, estimateCodeSize, (, Node, root, ), {, CodeSizeEstimatePrinter, cp, =, new, CodeSizeEstimatePrinter, (, trackGzippedSize, ), ;, CodeGenerator, cg, =]
[Node, root, ), {, CodeSizeEstimatePrinter, cp, =, new, CodeSizeEstimatePrinter, (, trackGzippedSize, ), ;, CodeGenerator, cg, =, CodeGenerator, ., forCostEstimation, (]
[{, CodeSizeEstimatePrinter, cp, =, new, CodeSizeEstimatePrinter, (, trackGzippedSize, ), ;, CodeGenerator, cg, =, CodeGenerator, ., forCostEstimation, (, cp, ), ;]
[{, CodeSizeEstimatePrinter, cp, =, new, CodeSizeEstimatePrinter, (, trackGzippedSize, ), ;, CodeGenerator, cg, =, CodeGenerator, ., forCostEstimation, (, cp, ), ;]
[new, CodeSizeEstimatePrinter, (, trackGzippedSize, ), ;, CodeGenerator, cg, =, CodeGenerator, ., forCostEstimation, (, cp, ), ;, cg, ., add, (]
[), ;, CodeGenerator, cg, =, CodeGenerator, ., forCostEstimation, (, cp, ), ;, cg, ., add, (, root, ), ;, return]
[root, ), ;, return, cp, ;, }, public, ImmutableMap, <, String, ,, Stats, >, getStats, (, ), {, if, (]
[root, ), ;, return, cp, ;, }, public, ImmutableMap, <, String, ,, Stats, >, getStats, (, ), {, if, (]
[;, return, cp, ;, }, public, ImmutableMap, <, String, ,, Stats, >, getStats, (, ), {, if, (, summaryCopy, ==]
[;, }, public, ImmutableMap, <, String, ,, Stats, >, getStats, (, ), {, if, (, summaryCopy, ==, null, ), {]
[public, ImmutableMap, <, String, ,, Stats, >, getStats, (, ), {, if, (, summaryCopy, ==, null, ), {, summaryCopy, =]
[public, ImmutableMap, <, String, ,, Stats, >, getStats, (, ), {, if, (, summaryCopy, ==, null, ), {, summaryCopy, =]
[,, Stats, >, getStats, (, ), {, if, (, summaryCopy, ==, null, ), {, summaryCopy, =, ImmutableMap, ., copyOf, (]
[), {, if, (, summaryCopy, ==, null, ), {, summaryCopy, =, ImmutableMap, ., copyOf, (, summary, ), ;, }, return]
[compare, (, Entry, <, String, ,, Stats, >, e1, ,, Entry, <, String, ,, Stats, >, e2, ), {, return]
[<, String, ,, Stats, >, e1, ,, Entry, <, String, ,, Stats, >, e2, ), {, return, (, int, )]
[String, ,, Stats, >, e1, ,, Entry, <, String, ,, Stats, >, e2, ), {, return, (, int, ), (]
[String, ,, Stats, >, e1, ,, Entry, <, String, ,, Stats, >, e2, ), {, return, (, int, ), (]
[String, ,, Stats, >, e1, ,, Entry, <, String, ,, Stats, >, e2, ), {, return, (, int, ), (]
[String, ,, Stats, >, e1, ,, Entry, <, String, ,, Stats, >, e2, ), {, return, (, int, ), (]
[String, ,, Stats, >, e2, ), {, return, (, int, ), (, e1, ., getValue, (, ), ., runtime, -]
[String, ,, Stats, >, e2, ), {, return, (, int, ), (, e1, ., getValue, (, ), ., runtime, -]
[String, ,, Stats, >, e2, ), {, return, (, int, ), (, e1, ., getValue, (, ), ., runtime, -]
[-, e2, ., getValue, (, ), ., runtime, ), ;, }, }, public, void, outputTracerReport, (, PrintStream, pstr, ), {]
[-, e2, ., getValue, (, ), ., runtime, ), ;, }, }, public, void, outputTracerReport, (, PrintStream, pstr, ), {]
[(, ), ., runtime, ), ;, }, }, public, void, outputTracerReport, (, PrintStream, pstr, ), {, JvmMetrics, ., maybeWriteJvmMetrics, (]
[., runtime, ), ;, }, }, public, void, outputTracerReport, (, PrintStream, pstr, ), {, JvmMetrics, ., maybeWriteJvmMetrics, (, pstr, ,]
[public, void, outputTracerReport, (, PrintStream, pstr, ), {, JvmMetrics, ., maybeWriteJvmMetrics, (, pstr, ,, "verbose:pretty:all", ), ;, OutputStreamWriter, output, =]
[(, PrintStream, pstr, ), {, JvmMetrics, ., maybeWriteJvmMetrics, (, pstr, ,, "verbose:pretty:all", ), ;, OutputStreamWriter, output, =, new, OutputStreamWriter, (]
[(, pstr, ,, "verbose:pretty:all", ), ;, OutputStreamWriter, output, =, new, OutputStreamWriter, (, pstr, ), ;, try, {, int, runtime, =]
[;, OutputStreamWriter, output, =, new, OutputStreamWriter, (, pstr, ), ;, try, {, int, runtime, =, 0, ;, int, runs, =]
[OutputStreamWriter, (, pstr, ), ;, try, {, int, runtime, =, 0, ;, int, runs, =, 0, ;, int, changes, =]
[try, {, int, runtime, =, 0, ;, int, runs, =, 0, ;, int, changes, =, 0, ;, int, diff, =]
[0, ;, int, runs, =, 0, ;, int, changes, =, 0, ;, int, diff, =, 0, ;, int, gzDiff, =]
[int, runs, =, 0, ;, int, changes, =, 0, ;, int, diff, =, 0, ;, int, gzDiff, =, 0, ;]
[int, runs, =, 0, ;, int, changes, =, 0, ;, int, diff, =, 0, ;, int, gzDiff, =, 0, ;]
[;, int, changes, =, 0, ;, int, diff, =, 0, ;, int, gzDiff, =, 0, ;, output, ., write, (]
[=, 0, ;, int, diff, =, 0, ;, int, gzDiff, =, 0, ;, output, ., write, (, "Summary:\n", ), ;]
[=, 0, ;, int, diff, =, 0, ;, int, gzDiff, =, 0, ;, output, ., write, (, "Summary:\n", ), ;]
[diff, =, 0, ;, int, gzDiff, =, 0, ;, output, ., write, (, "Summary:\n", ), ;, output, ., write, (]
[), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction\n", ), ;, ArrayList, <, Entry, <, String, ,, Stats, >, >, a, =]
[Entry, <, String, ,, Stats, >, >, (, ), ;, for, (, Entry, <, String, ,, Stats, >, entry, :]
[Entry, <, String, ,, Stats, >, >, (, ), ;, for, (, Entry, <, String, ,, Stats, >, entry, :]
[(, ), ;, for, (, Entry, <, String, ,, Stats, >, entry, :, summary, ., entrySet, (, ), ), {]
[(, ), ;, for, (, Entry, <, String, ,, Stats, >, entry, :, summary, ., entrySet, (, ), ), {]
[(, Entry, <, String, ,, Stats, >, entry, :, summary, ., entrySet, (, ), ), {, a, ., add, (]
[,, Stats, >, entry, :, summary, ., entrySet, (, ), ), {, a, ., add, (, entry, ), ;, }]
[,, Stats, >, entry, :, summary, ., entrySet, (, ), ), {, a, ., add, (, entry, ), ;, }]
[:, summary, ., entrySet, (, ), ), {, a, ., add, (, entry, ), ;, }, Collections, ., sort, (]
[., entrySet, (, ), ), {, a, ., add, (, entry, ), ;, }, Collections, ., sort, (, a, ,]
[sort, (, a, ,, new, CmpEntries, (, ), ), ;, for, (, Entry, <, String, ,, Stats, >, entry, :]
[(, ), ), ;, for, (, Entry, <, String, ,, Stats, >, entry, :, a, ), {, String, key, =]
[(, ), ), ;, for, (, Entry, <, String, ,, Stats, >, entry, :, a, ), {, String, key, =]
[,, Stats, >, entry, :, a, ), {, String, key, =, entry, ., getKey, (, ), ;, Stats, stats, =]
[,, Stats, >, entry, :, a, ), {, String, key, =, entry, ., getKey, (, ), ;, Stats, stats, =]
[), {, String, key, =, entry, ., getKey, (, ), ;, Stats, stats, =, entry, ., getValue, (, ), ;]
[), {, String, key, =, entry, ., getKey, (, ), ;, Stats, stats, =, entry, ., getValue, (, ), ;]
[=, entry, ., getKey, (, ), ;, Stats, stats, =, entry, ., getValue, (, ), ;, output, ., write, (]
[getKey, (, ), ;, Stats, stats, =, entry, ., getValue, (, ), ;, output, ., write, (, key, ), ;]
[getKey, (, ), ;, Stats, stats, =, entry, ., getValue, (, ), ;, output, ., write, (, key, ), ;]
[Stats, stats, =, entry, ., getValue, (, ), ;, output, ., write, (, key, ), ;, output, ., write, (]
[entry, ., getValue, (, ), ;, output, ., write, (, key, ), ;, output, ., write, (, ",", ), ;]
[entry, ., getValue, (, ), ;, output, ., write, (, key, ), ;, output, ., write, (, ",", ), ;]
[), ;, output, ., write, (, key, ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[), ;, output, ., write, (, key, ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[write, (, key, ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[write, (, key, ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;, runtime, +=]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;, runtime, +=]
[output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;, runtime, +=, stats, ., runtime, ;]
[output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;, runtime, +=, stats, ., runtime, ;]
[String, ., valueOf, (, stats, ., runtime, ), ), ;, runtime, +=, stats, ., runtime, ;, output, ., write, (]
[(, stats, ., runtime, ), ), ;, runtime, +=, stats, ., runtime, ;, output, ., write, (, ",", ), ;]
[(, stats, ., runtime, ), ), ;, runtime, +=, stats, ., runtime, ;, output, ., write, (, ",", ), ;]
[), ), ;, runtime, +=, stats, ., runtime, ;, output, ., write, (, ",", ), ;, output, ., write, (]
[), ), ;, runtime, +=, stats, ., runtime, ;, output, ., write, (, ",", ), ;, output, ., write, (]
[+=, stats, ., runtime, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[+=, stats, ., runtime, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;, runs, +=]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;, runs, +=]
[output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;, runs, +=, stats, ., runs, ;]
[output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;, runs, +=, stats, ., runs, ;]
[String, ., valueOf, (, stats, ., runs, ), ), ;, runs, +=, stats, ., runs, ;, output, ., write, (]
[(, stats, ., runs, ), ), ;, runs, +=, stats, ., runs, ;, output, ., write, (, ",", ), ;]
[(, stats, ., runs, ), ), ;, runs, +=, stats, ., runs, ;, output, ., write, (, ",", ), ;]
[), ), ;, runs, +=, stats, ., runs, ;, output, ., write, (, ",", ), ;, output, ., write, (]
[), ), ;, runs, +=, stats, ., runs, ;, output, ., write, (, ",", ), ;, output, ., write, (]
[+=, stats, ., runs, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[+=, stats, ., runs, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;, changes, +=]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;, changes, +=]
[output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;, changes, +=, stats, ., changes, ;]
[output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;, changes, +=, stats, ., changes, ;]
[String, ., valueOf, (, stats, ., changes, ), ), ;, changes, +=, stats, ., changes, ;, output, ., write, (]
[(, stats, ., changes, ), ), ;, changes, +=, stats, ., changes, ;, output, ., write, (, ",", ), ;]
[(, stats, ., changes, ), ), ;, changes, +=, stats, ., changes, ;, output, ., write, (, ",", ), ;]
[), ), ;, changes, +=, stats, ., changes, ;, output, ., write, (, ",", ), ;, output, ., write, (]
[), ), ;, changes, +=, stats, ., changes, ;, output, ., write, (, ",", ), ;, output, ., write, (]
[+=, stats, ., changes, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[+=, stats, ., changes, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;, diff, +=]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;, diff, +=]
[output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;, diff, +=, stats, ., diff, ;]
[output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;, diff, +=, stats, ., diff, ;]
[String, ., valueOf, (, stats, ., diff, ), ), ;, diff, +=, stats, ., diff, ;, output, ., write, (]
[(, stats, ., diff, ), ), ;, diff, +=, stats, ., diff, ;, output, ., write, (, ",", ), ;]
[(, stats, ., diff, ), ), ;, diff, +=, stats, ., diff, ;, output, ., write, (, ",", ), ;]
[), ), ;, diff, +=, stats, ., diff, ;, output, ., write, (, ",", ), ;, output, ., write, (]
[), ), ;, diff, +=, stats, ., diff, ;, output, ., write, (, ",", ), ;, output, ., write, (]
[+=, stats, ., diff, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[+=, stats, ., diff, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;, gzDiff, +=]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;, gzDiff, +=]
[output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;, gzDiff, +=, stats, ., gzDiff, ;]
[output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;, gzDiff, +=, stats, ., gzDiff, ;]
[String, ., valueOf, (, stats, ., gzDiff, ), ), ;, gzDiff, +=, stats, ., gzDiff, ;, output, ., write, (]
[stats, ., gzDiff, ), ), ;, gzDiff, +=, stats, ., gzDiff, ;, output, ., write, (, "\n", ), ;, }]
[stats, ., gzDiff, ), ), ;, gzDiff, +=, stats, ., gzDiff, ;, output, ., write, (, "\n", ), ;, }]
[), ;, gzDiff, +=, stats, ., gzDiff, ;, output, ., write, (, "\n", ), ;, }, output, ., write, (]
[+=, stats, ., gzDiff, ;, output, ., write, (, "\n", ), ;, }, output, ., write, (, "TOTAL", ), ;]
[+=, stats, ., gzDiff, ;, output, ., write, (, "\n", ), ;, }, output, ., write, (, "TOTAL", ), ;]
[;, output, ., write, (, "\n", ), ;, }, output, ., write, (, "TOTAL", ), ;, output, ., write, (]
[write, (, "\n", ), ;, }, output, ., write, (, "TOTAL", ), ;, output, ., write, (, ",", ), ;]
[write, (, "\n", ), ;, }, output, ., write, (, "TOTAL", ), ;, output, ., write, (, ",", ), ;]
[;, }, output, ., write, (, "TOTAL", ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[;, }, output, ., write, (, "TOTAL", ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[write, (, "TOTAL", ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, runtime, ), ), ;]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, runtime, ), ), ;]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, runtime, ), ), ;, output, ., write, (]
[;, output, ., write, (, String, ., valueOf, (, runtime, ), ), ;, output, ., write, (, ",", ), ;]
[;, output, ., write, (, String, ., valueOf, (, runtime, ), ), ;, output, ., write, (, ",", ), ;]
[(, String, ., valueOf, (, runtime, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[(, String, ., valueOf, (, runtime, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[(, runtime, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, runs, ), ), ;]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, runs, ), ), ;]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, runs, ), ), ;, output, ., write, (]
[;, output, ., write, (, String, ., valueOf, (, runs, ), ), ;, output, ., write, (, ",", ), ;]
[;, output, ., write, (, String, ., valueOf, (, runs, ), ), ;, output, ., write, (, ",", ), ;]
[(, String, ., valueOf, (, runs, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[(, String, ., valueOf, (, runs, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[(, runs, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, changes, ), ), ;]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, changes, ), ), ;]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, changes, ), ), ;, output, ., write, (]
[;, output, ., write, (, String, ., valueOf, (, changes, ), ), ;, output, ., write, (, ",", ), ;]
[;, output, ., write, (, String, ., valueOf, (, changes, ), ), ;, output, ., write, (, ",", ), ;]
[(, String, ., valueOf, (, changes, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[(, String, ., valueOf, (, changes, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[(, changes, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, diff, ), ), ;]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, diff, ), ), ;]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, diff, ), ), ;, output, ., write, (]
[;, output, ., write, (, String, ., valueOf, (, diff, ), ), ;, output, ., write, (, ",", ), ;]
[;, output, ., write, (, String, ., valueOf, (, diff, ), ), ;, output, ., write, (, ",", ), ;]
[(, String, ., valueOf, (, diff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[(, String, ., valueOf, (, diff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[(, diff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, gzDiff, ), ), ;]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, gzDiff, ), ), ;]
[(, ",", ), ;, output, ., write, (, String, ., valueOf, (, gzDiff, ), ), ;, output, ., write, (]
[;, output, ., write, (, String, ., valueOf, (, gzDiff, ), ), ;, output, ., write, (, "\n", ), ;]
[;, output, ., write, (, String, ., valueOf, (, gzDiff, ), ), ;, output, ., write, (, "\n", ), ;]
[(, String, ., valueOf, (, gzDiff, ), ), ;, output, ., write, (, "\n", ), ;, output, ., write, (]
[valueOf, (, gzDiff, ), ), ;, output, ., write, (, "\n", ), ;, output, ., write, (, "\n", ), ;]
[valueOf, (, gzDiff, ), ), ;, output, ., write, (, "\n", ), ;, output, ., write, (, "\n", ), ;]
[), ;, output, ., write, (, "\n", ), ;, output, ., write, (, "\n", ), ;, output, ., write, (]
[., write, (, "\n", ), ;, output, ., write, (, "\n", ), ;, output, ., write, (, "Log:\n", ), ;]
[., write, (, "\n", ), ;, output, ., write, (, "\n", ), ;, output, ., write, (, "Log:\n", ), ;]
[), ;, output, ., write, (, "\n", ), ;, output, ., write, (, "Log:\n", ), ;, output, ., write, (]
[;, output, ., write, (, "Log:\n", ), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;, for, (, Stats, stats, :]
[write, (, "Log:\n", ), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;, for, (, Stats, stats, :, log, ), {]
[write, (, "Log:\n", ), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;, for, (, Stats, stats, :, log, ), {]
[;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;, for, (, Stats, stats, :, log, ), {, output, ., write, (]
[;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;, for, (, Stats, stats, :, log, ), {, output, ., write, (]
["pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;, for, (, Stats, stats, :, log, ), {, output, ., write, (, stats, ., pass, ), ;]
["pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;, for, (, Stats, stats, :, log, ), {, output, ., write, (, stats, ., pass, ), ;]
[(, Stats, stats, :, log, ), {, output, ., write, (, stats, ., pass, ), ;, output, ., write, (]
[:, log, ), {, output, ., write, (, stats, ., pass, ), ;, output, ., write, (, ",", ), ;]
[:, log, ), {, output, ., write, (, stats, ., pass, ), ;, output, ., write, (, ",", ), ;]
[output, ., write, (, stats, ., pass, ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[output, ., write, (, stats, ., pass, ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[stats, ., pass, ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[stats, ., pass, ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;, output, ., write, (]
[., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;, output, ., write, (, ",", ), ;]
[., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;, output, ., write, (, ",", ), ;]
[., valueOf, (, stats, ., runtime, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., valueOf, (, stats, ., runtime, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., runtime, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., runtime, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;, output, ., write, (]
[., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;, output, ., write, (, ",", ), ;]
[., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;, output, ., write, (, ",", ), ;]
[., valueOf, (, stats, ., runs, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., valueOf, (, stats, ., runs, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., runs, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., runs, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;, output, ., write, (]
[., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;, output, ., write, (, ",", ), ;]
[., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;, output, ., write, (, ",", ), ;]
[., valueOf, (, stats, ., changes, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., valueOf, (, stats, ., changes, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., changes, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., changes, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;, output, ., write, (]
[., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;, output, ., write, (, ",", ), ;]
[., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;, output, ., write, (, ",", ), ;]
[., valueOf, (, stats, ., diff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., valueOf, (, stats, ., diff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., diff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., diff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;, output, ., write, (]
[., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;, output, ., write, (, ",", ), ;]
[., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;, output, ., write, (, ",", ), ;]
[., valueOf, (, stats, ., gzDiff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., valueOf, (, stats, ., gzDiff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., gzDiff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., gzDiff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., size, ), ), ;]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., size, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., size, ), ), ;, output, ., write, (]
[., write, (, String, ., valueOf, (, stats, ., size, ), ), ;, output, ., write, (, ",", ), ;]
[., write, (, String, ., valueOf, (, stats, ., size, ), ), ;, output, ., write, (, ",", ), ;]
[., valueOf, (, stats, ., size, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., valueOf, (, stats, ., size, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., size, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., size, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzSize, ), ), ;]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzSize, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzSize, ), ), ;, output, ., write, (]
[write, (, String, ., valueOf, (, stats, ., gzSize, ), ), ;, output, ., write, (, "\n", ), ;, }]
[write, (, String, ., valueOf, (, stats, ., gzSize, ), ), ;, output, ., write, (, "\n", ), ;, }]
[valueOf, (, stats, ., gzSize, ), ), ;, output, ., write, (, "\n", ), ;, }, output, ., write, (]
[., gzSize, ), ), ;, output, ., write, (, "\n", ), ;, }, output, ., write, (, "\n", ), ;]
[., gzSize, ), ), ;, output, ., write, (, "\n", ), ;, }, output, ., write, (, "\n", ), ;]
[output, ., write, (, "\n", ), ;, output, ., close, (, ), ;, }, catch, (, IOException, e, ), {]
[output, ., write, (, "\n", ), ;, output, ., close, (, ), ;, }, catch, (, IOException, e, ), {]
[;, }, }, private, static, final, class, CodeSizeEstimatePrinter, extends, CodeConsumer, {, private, final, boolean, trackGzippedSize, ;, private, int, size, =]
[class, CodeSizeEstimatePrinter, extends, CodeConsumer, {, private, final, boolean, trackGzippedSize, ;, private, int, size, =, 0, ;, private, char, lastChar, =]
[boolean, trackGzippedSize, ;, private, int, size, =, 0, ;, private, char, lastChar, =, '\0', ;, private, final, ByteArrayOutputStream, output, =]
[ByteArrayOutputStream, output, =, new, ByteArrayOutputStream, (, ), ;, private, final, GZIPOutputStream, stream, ;, private, CodeSizeEstimatePrinter, (, boolean, trackGzippedSize, ), {]
[ByteArrayOutputStream, output, =, new, ByteArrayOutputStream, (, ), ;, private, final, GZIPOutputStream, stream, ;, private, CodeSizeEstimatePrinter, (, boolean, trackGzippedSize, ), {]
[ByteArrayOutputStream, (, ), ;, private, final, GZIPOutputStream, stream, ;, private, CodeSizeEstimatePrinter, (, boolean, trackGzippedSize, ), {, this, ., trackGzippedSize, =]
[private, final, GZIPOutputStream, stream, ;, private, CodeSizeEstimatePrinter, (, boolean, trackGzippedSize, ), {, this, ., trackGzippedSize, =, trackGzippedSize, ;, try, {]
[GZIPOutputStream, stream, ;, private, CodeSizeEstimatePrinter, (, boolean, trackGzippedSize, ), {, this, ., trackGzippedSize, =, trackGzippedSize, ;, try, {, stream, =]
[private, CodeSizeEstimatePrinter, (, boolean, trackGzippedSize, ), {, this, ., trackGzippedSize, =, trackGzippedSize, ;, try, {, stream, =, new, GZIPOutputStream, (]
[trackGzippedSize, ;, try, {, stream, =, new, GZIPOutputStream, (, output, ), ;, }, catch, (, IOException, e, ), {, throw]
[{, stream, =, new, GZIPOutputStream, (, output, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (]
[new, RuntimeException, (, e, ), ;, }, }, @, Override, void, append, (, String, str, ), {, int, len, =]
[new, RuntimeException, (, e, ), ;, }, }, @, Override, void, append, (, String, str, ), {, int, len, =]
[@, Override, void, append, (, String, str, ), {, int, len, =, str, ., length, (, ), ;, if, (]
[@, Override, void, append, (, String, str, ), {, int, len, =, str, ., length, (, ), ;, if, (]
[void, append, (, String, str, ), {, int, len, =, str, ., length, (, ), ;, if, (, len, >]
[String, str, ), {, int, len, =, str, ., length, (, ), ;, if, (, len, >, 0, ), {]
[), {, int, len, =, str, ., length, (, ), ;, if, (, len, >, 0, ), {, size, +=]
[int, len, =, str, ., length, (, ), ;, if, (, len, >, 0, ), {, size, +=, len, ;]
[=, str, ., length, (, ), ;, if, (, len, >, 0, ), {, size, +=, len, ;, lastChar, =]
[=, str, ., length, (, ), ;, if, (, len, >, 0, ), {, size, +=, len, ;, lastChar, =]
[(, ), ;, if, (, len, >, 0, ), {, size, +=, len, ;, lastChar, =, str, ., charAt, (]
[(, ), ;, if, (, len, >, 0, ), {, size, +=, len, ;, lastChar, =, str, ., charAt, (]
[;, if, (, len, >, 0, ), {, size, +=, len, ;, lastChar, =, str, ., charAt, (, len, -]
[0, ), {, size, +=, len, ;, lastChar, =, str, ., charAt, (, len, -, 1, ), ;, if, (]
[len, ;, lastChar, =, str, ., charAt, (, len, -, 1, ), ;, if, (, trackGzippedSize, ), {, try, {]
[len, ;, lastChar, =, str, ., charAt, (, len, -, 1, ), ;, if, (, trackGzippedSize, ), {, try, {]
[str, ., charAt, (, len, -, 1, ), ;, if, (, trackGzippedSize, ), {, try, {, stream, ., write, (]
[str, ., charAt, (, len, -, 1, ), ;, if, (, trackGzippedSize, ), {, try, {, stream, ., write, (]
[{, stream, ., write, (, str, ., getBytes, (, ), ), ;, }, catch, (, IOException, e, ), {, throw]
[write, (, str, ., getBytes, (, ), ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (]
[{, throw, new, RuntimeException, (, e, ), ;, }, }, }, }, @, Override, char, getLastChar, (, ), {, return]
[}, }, @, Override, char, getLastChar, (, ), {, return, lastChar, ;, }, private, int, calcSize, (, ), {, return]
[;, }, private, int, calcSize, (, ), {, return, size, ;, }, private, int, calcZippedSize, (, ), {, if, (]
[(, ), {, return, size, ;, }, private, int, calcZippedSize, (, ), {, if, (, trackGzippedSize, ), {, try, {]
[(, ), {, return, size, ;, }, private, int, calcZippedSize, (, ), {, if, (, trackGzippedSize, ), {, try, {]
[}, private, int, calcZippedSize, (, ), {, if, (, trackGzippedSize, ), {, try, {, stream, ., finish, (, ), ;]
[}, private, int, calcZippedSize, (, ), {, if, (, trackGzippedSize, ), {, try, {, stream, ., finish, (, ), ;]
[{, if, (, trackGzippedSize, ), {, try, {, stream, ., finish, (, ), ;, stream, ., flush, (, ), ;]
[{, if, (, trackGzippedSize, ), {, try, {, stream, ., finish, (, ), ;, stream, ., flush, (, ), ;]
[{, stream, ., finish, (, ), ;, stream, ., flush, (, ), ;, stream, ., close, (, ), ;, return]
[{, stream, ., finish, (, ), ;, stream, ., flush, (, ), ;, stream, ., close, (, ), ;, return]
[., close, (, ), ;, return, output, ., size, (, ), ;, }, catch, (, IOException, e, ), {, throw]
[), ;, return, output, ., size, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (]
[;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, }, else, {, return]
[}, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, }, else, {, return, -]
