[=, null, ;, nObs, =, 0, ;, }, public, PearsonsCorrelation, (, double, [, ], [, ], data, ), {, this]
[;, nObs, =, 0, ;, }, public, PearsonsCorrelation, (, double, [, ], [, ], data, ), {, this, (, new]
[=, 0, ;, }, public, PearsonsCorrelation, (, double, [, ], [, ], data, ), {, this, (, new, BlockRealMatrix, (]
[;, }, public, PearsonsCorrelation, (, double, [, ], [, ], data, ), {, this, (, new, BlockRealMatrix, (, data, )]
[), ;, }, public, PearsonsCorrelation, (, RealMatrix, matrix, ), {, checkSufficientData, (, matrix, ), ;, nObs, =, matrix, ., getRowDimension]
[), ), ;, }, public, PearsonsCorrelation, (, RealMatrix, matrix, ), {, checkSufficientData, (, matrix, ), ;, nObs, =, matrix, .]
[;, nObs, =, matrix, ., getRowDimension, (, ), ;, correlationMatrix, =, computeCorrelationMatrix, (, matrix, ), ;, }, public, PearsonsCorrelation, (]
[), ;, nObs, =, matrix, ., getRowDimension, (, ), ;, correlationMatrix, =, computeCorrelationMatrix, (, matrix, ), ;, }, public, PearsonsCorrelation]
[=, matrix, ., getRowDimension, (, ), ;, correlationMatrix, =, computeCorrelationMatrix, (, matrix, ), ;, }, public, PearsonsCorrelation, (, Covariance, covariance]
[;, correlationMatrix, =, computeCorrelationMatrix, (, matrix, ), ;, }, public, PearsonsCorrelation, (, Covariance, covariance, ), {, RealMatrix, covarianceMatrix, =, covariance]
[., getRowDimension, (, ), ;, correlationMatrix, =, computeCorrelationMatrix, (, matrix, ), ;, }, public, PearsonsCorrelation, (, Covariance, covariance, ), {]
[=, computeCorrelationMatrix, (, matrix, ), ;, }, public, PearsonsCorrelation, (, Covariance, covariance, ), {, RealMatrix, covarianceMatrix, =, covariance, ., getCovarianceMatrix]
[;, }, public, PearsonsCorrelation, (, Covariance, covariance, ), {, RealMatrix, covarianceMatrix, =, covariance, ., getCovarianceMatrix, (, ), ;, if, (]
[), ;, }, public, PearsonsCorrelation, (, Covariance, covariance, ), {, RealMatrix, covarianceMatrix, =, covariance, ., getCovarianceMatrix, (, ), ;, if]
[;, if, (, covarianceMatrix, ==, null, ), {, throw, new, NullArgumentException, (, LocalizedFormats, ., COVARIANCE_MATRIX, ), ;, }, nObs, =]
[., getCovarianceMatrix, (, ), ;, if, (, covarianceMatrix, ==, null, ), {, throw, new, NullArgumentException, (, LocalizedFormats, ., COVARIANCE_MATRIX, )]
[), {, throw, new, NullArgumentException, (, LocalizedFormats, ., COVARIANCE_MATRIX, ), ;, }, nObs, =, covariance, ., getN, (, ), ;]
[==, null, ), {, throw, new, NullArgumentException, (, LocalizedFormats, ., COVARIANCE_MATRIX, ), ;, }, nObs, =, covariance, ., getN, (]
[), {, throw, new, NullArgumentException, (, LocalizedFormats, ., COVARIANCE_MATRIX, ), ;, }, nObs, =, covariance, ., getN, (, ), ;]
[;, }, nObs, =, covariance, ., getN, (, ), ;, correlationMatrix, =, covarianceToCorrelation, (, covarianceMatrix, ), ;, }, public, PearsonsCorrelation]
[), ;, }, nObs, =, covariance, ., getN, (, ), ;, correlationMatrix, =, covarianceToCorrelation, (, covarianceMatrix, ), ;, }, public]
[., COVARIANCE_MATRIX, ), ;, }, nObs, =, covariance, ., getN, (, ), ;, correlationMatrix, =, covarianceToCorrelation, (, covarianceMatrix, ), ;]
[=, covariance, ., getN, (, ), ;, correlationMatrix, =, covarianceToCorrelation, (, covarianceMatrix, ), ;, }, public, PearsonsCorrelation, (, RealMatrix, covarianceMatrix]
[;, correlationMatrix, =, covarianceToCorrelation, (, covarianceMatrix, ), ;, }, public, PearsonsCorrelation, (, RealMatrix, covarianceMatrix, ,, int, numberOfObservations, ), {, nObs]
[., getN, (, ), ;, correlationMatrix, =, covarianceToCorrelation, (, covarianceMatrix, ), ;, }, public, PearsonsCorrelation, (, RealMatrix, covarianceMatrix, ,, int]
[=, covarianceToCorrelation, (, covarianceMatrix, ), ;, }, public, PearsonsCorrelation, (, RealMatrix, covarianceMatrix, ,, int, numberOfObservations, ), {, nObs, =, numberOfObservations]
[;, }, public, PearsonsCorrelation, (, RealMatrix, covarianceMatrix, ,, int, numberOfObservations, ), {, nObs, =, numberOfObservations, ;, correlationMatrix, =, covarianceToCorrelation, (]
[), ;, }, public, PearsonsCorrelation, (, RealMatrix, covarianceMatrix, ,, int, numberOfObservations, ), {, nObs, =, numberOfObservations, ;, correlationMatrix, =, covarianceToCorrelation]
[=, numberOfObservations, ;, correlationMatrix, =, covarianceToCorrelation, (, covarianceMatrix, ), ;, }, public, RealMatrix, getCorrelationMatrix, (, ), {, return, correlationMatrix, ;]
[;, correlationMatrix, =, covarianceToCorrelation, (, covarianceMatrix, ), ;, }, public, RealMatrix, getCorrelationMatrix, (, ), {, return, correlationMatrix, ;, }, public]
[=, covarianceToCorrelation, (, covarianceMatrix, ), ;, }, public, RealMatrix, getCorrelationMatrix, (, ), {, return, correlationMatrix, ;, }, public, RealMatrix, getCorrelationStandardErrors]
[;, }, public, RealMatrix, getCorrelationMatrix, (, ), {, return, correlationMatrix, ;, }, public, RealMatrix, getCorrelationStandardErrors, (, ), {, int, nVars]
[), ;, }, public, RealMatrix, getCorrelationMatrix, (, ), {, return, correlationMatrix, ;, }, public, RealMatrix, getCorrelationStandardErrors, (, ), {, int]
[;, }, public, RealMatrix, getCorrelationStandardErrors, (, ), {, int, nVars, =, correlationMatrix, ., getColumnDimension, (, ), ;, double, [, ]]
[;, double, [, ], [, ], out, =, new, double, [, nVars, ], [, nVars, ], ;, for, (, int]
[., getColumnDimension, (, ), ;, double, [, ], [, ], out, =, new, double, [, nVars, ], [, nVars, ]]
[;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j]
[], [, nVars, ], ;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {]
[], ;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int]
[;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;]
[;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {]
[<, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++]
[;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {]
[), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {, double, r, =]
[++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {, double, r]
[;, j, <, nVars, ;, j, ++, ), {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, )]
[;, j, ++, ), {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, out, [, i]
[<, nVars, ;, j, ++, ), {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, out]
[;, j, ++, ), {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, out, [, i]
[), {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, out, [, i, ], [, j]
[++, ), {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, out, [, i, ], []
[;, out, [, i, ], [, j, ], =, FastMath, ., sqrt, (, (, 1, -, r, *, r, )]
[., getEntry, (, i, ,, j, ), ;, out, [, i, ], [, j, ], =, FastMath, ., sqrt, (]
[,, j, ), ;, out, [, i, ], [, j, ], =, FastMath, ., sqrt, (, (, 1, -, r]
[), ;, out, [, i, ], [, j, ], =, FastMath, ., sqrt, (, (, 1, -, r, *, r]
[=, FastMath, ., sqrt, (, (, 1, -, r, *, r, ), /, (, nObs, -, 2, ), ), ;]
[[, j, ], =, FastMath, ., sqrt, (, (, 1, -, r, *, r, ), /, (, nObs, -, 2]
[[, i, ], [, j, ], =, FastMath, ., sqrt, (, (, 1, -, r, *, r, ), /, (]
[], [, j, ], =, FastMath, ., sqrt, (, (, 1, -, r, *, r, ), /, (, nObs, -]
[], =, FastMath, ., sqrt, (, (, 1, -, r, *, r, ), /, (, nObs, -, 2, ), )]
[;, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, getCorrelationPValues, (, ), {, TDistribution, tDistribution, =]
[., sqrt, (, (, 1, -, r, *, r, ), /, (, nObs, -, 2, ), ), ;, }, }]
[), ;, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, getCorrelationPValues, (, ), {, TDistribution, tDistribution]
[/, (, nObs, -, 2, ), ), ;, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix]
[), /, (, nObs, -, 2, ), ), ;, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public]
[-, r, *, r, ), /, (, nObs, -, 2, ), ), ;, }, }, return, new, BlockRealMatrix, (, out]
[), /, (, nObs, -, 2, ), ), ;, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public]
[*, r, ), /, (, nObs, -, 2, ), ), ;, }, }, return, new, BlockRealMatrix, (, out, ), ;]
[), /, (, nObs, -, 2, ), ), ;, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public]
[), ;, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, getCorrelationPValues, (, ), {, TDistribution, tDistribution]
[), ), ;, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, getCorrelationPValues, (, ), {, TDistribution]
[-, 2, ), ), ;, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, getCorrelationPValues, (, )]
[), ), ;, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, getCorrelationPValues, (, ), {, TDistribution]
[;, }, public, RealMatrix, getCorrelationPValues, (, ), {, TDistribution, tDistribution, =, new, TDistribution, (, nObs, -, 2, ), ;, int]
[), ;, }, public, RealMatrix, getCorrelationPValues, (, ), {, TDistribution, tDistribution, =, new, TDistribution, (, nObs, -, 2, ), ;]
[;, int, nVars, =, correlationMatrix, ., getColumnDimension, (, ), ;, double, [, ], [, ], out, =, new, double, []
[), ;, int, nVars, =, correlationMatrix, ., getColumnDimension, (, ), ;, double, [, ], [, ], out, =, new, double]
[-, 2, ), ;, int, nVars, =, correlationMatrix, ., getColumnDimension, (, ), ;, double, [, ], [, ], out, =]
[), ;, int, nVars, =, correlationMatrix, ., getColumnDimension, (, ), ;, double, [, ], [, ], out, =, new, double]
[;, double, [, ], [, ], out, =, new, double, [, nVars, ], [, nVars, ], ;, for, (, int]
[., getColumnDimension, (, ), ;, double, [, ], [, ], out, =, new, double, [, nVars, ], [, nVars, ]]
[;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j]
[], [, nVars, ], ;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {]
[], ;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int]
[;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;]
[;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {]
[<, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++]
[;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {]
[), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {, if, (, i]
[++, ), {, for, (, int, j, =, 0, ;, j, <, nVars, ;, j, ++, ), {, if, (]
[;, j, <, nVars, ;, j, ++, ), {, if, (, i, ==, j, ), {, out, [, i, ]]
[;, j, ++, ), {, if, (, i, ==, j, ), {, out, [, i, ], [, j, ], =]
[<, nVars, ;, j, ++, ), {, if, (, i, ==, j, ), {, out, [, i, ], [, j]
[;, j, ++, ), {, if, (, i, ==, j, ), {, out, [, i, ], [, j, ], =]
[), {, if, (, i, ==, j, ), {, out, [, i, ], [, j, ], =, 0d, ;, }]
[++, ), {, if, (, i, ==, j, ), {, out, [, i, ], [, j, ], =, 0d, ;]
[), {, out, [, i, ], [, j, ], =, 0d, ;, }, else, {, double, r, =, correlationMatrix, .]
[==, j, ), {, out, [, i, ], [, j, ], =, 0d, ;, }, else, {, double, r, =]
[), {, out, [, i, ], [, j, ], =, 0d, ;, }, else, {, double, r, =, correlationMatrix, .]
[=, 0d, ;, }, else, {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, double, t]
[[, j, ], =, 0d, ;, }, else, {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, )]
[[, i, ], [, j, ], =, 0d, ;, }, else, {, double, r, =, correlationMatrix, ., getEntry, (, i]
[], [, j, ], =, 0d, ;, }, else, {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j]
[], =, 0d, ;, }, else, {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, double]
[;, }, else, {, double, r, =, correlationMatrix, ., getEntry, (, i, ,, j, ), ;, double, t, =, FastMath]
[;, double, t, =, FastMath, ., abs, (, r, *, FastMath, ., sqrt, (, (, nObs, -, 2, ), /]
[., getEntry, (, i, ,, j, ), ;, double, t, =, FastMath, ., abs, (, r, *, FastMath, ., sqrt]
[,, j, ), ;, double, t, =, FastMath, ., abs, (, r, *, FastMath, ., sqrt, (, (, nObs, -]
[), ;, double, t, =, FastMath, ., abs, (, r, *, FastMath, ., sqrt, (, (, nObs, -, 2, )]
[;, out, [, i, ], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t, ), ;, }]
[., abs, (, r, *, FastMath, ., sqrt, (, (, nObs, -, 2, ), /, (, 1, -, r, *]
[), ;, out, [, i, ], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t, ), ;]
[*, FastMath, ., sqrt, (, (, nObs, -, 2, ), /, (, 1, -, r, *, r, ), ), )]
[), ;, out, [, i, ], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t, ), ;]
[., sqrt, (, (, nObs, -, 2, ), /, (, 1, -, r, *, r, ), ), ), ;, out]
[), ), ;, out, [, i, ], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t, )]
[/, (, 1, -, r, *, r, ), ), ), ;, out, [, i, ], [, j, ], =, 2]
[), /, (, 1, -, r, *, r, ), ), ), ;, out, [, i, ], [, j, ], =]
[-, 2, ), /, (, 1, -, r, *, r, ), ), ), ;, out, [, i, ], [, j]
[), /, (, 1, -, r, *, r, ), ), ), ;, out, [, i, ], [, j, ], =]
[), ), ;, out, [, i, ], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t, )]
[), ), ), ;, out, [, i, ], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t]
[-, r, *, r, ), ), ), ;, out, [, i, ], [, j, ], =, 2, *, tDistribution, .]
[), ), ), ;, out, [, i, ], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t]
[*, r, ), ), ), ;, out, [, i, ], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (]
[), ), ), ;, out, [, i, ], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t]
[=, 2, *, tDistribution, ., cumulativeProbability, (, -, t, ), ;, }, }, }, return, new, BlockRealMatrix, (, out, )]
[[, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t, ), ;, }, }, }, return, new, BlockRealMatrix]
[[, i, ], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t, ), ;, }, }, }]
[], [, j, ], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t, ), ;, }, }, }, return, new]
[], =, 2, *, tDistribution, ., cumulativeProbability, (, -, t, ), ;, }, }, }, return, new, BlockRealMatrix, (, out]
[;, }, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, computeCorrelationMatrix, (, RealMatrix, matrix, ), {]
[*, tDistribution, ., cumulativeProbability, (, -, t, ), ;, }, }, }, return, new, BlockRealMatrix, (, out, ), ;, }]
[;, }, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, computeCorrelationMatrix, (, RealMatrix, matrix, ), {]
[., cumulativeProbability, (, -, t, ), ;, }, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix]
[), ;, }, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, computeCorrelationMatrix, (, RealMatrix, matrix, )]
[), ;, }, }, }, return, new, BlockRealMatrix, (, out, ), ;, }, public, RealMatrix, computeCorrelationMatrix, (, RealMatrix, matrix, )]
[;, }, public, RealMatrix, computeCorrelationMatrix, (, RealMatrix, matrix, ), {, int, nVars, =, matrix, ., getColumnDimension, (, ), ;, RealMatrix]
[), ;, }, public, RealMatrix, computeCorrelationMatrix, (, RealMatrix, matrix, ), {, int, nVars, =, matrix, ., getColumnDimension, (, ), ;]
[;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =, 0, ;, i]
[., getColumnDimension, (, ), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i]
[;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int, j]
[,, nVars, ), ;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for]
[), ;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, for, (, int]
[;, i, <, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;]
[;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {]
[<, nVars, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++]
[;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {]
[), {, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, corr, =]
[++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, corr]
[;, j, <, i, ;, j, ++, ), {, double, corr, =, correlation, (, matrix, ., getColumn, (, i, )]
[;, j, ++, ), {, double, corr, =, correlation, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn]
[<, i, ;, j, ++, ), {, double, corr, =, correlation, (, matrix, ., getColumn, (, i, ), ,, matrix]
[;, j, ++, ), {, double, corr, =, correlation, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn]
[), {, double, corr, =, correlation, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn, (, j, )]
[++, ), {, double, corr, =, correlation, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn, (, j]
[;, outMatrix, ., setEntry, (, i, ,, j, ,, corr, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,]
[,, matrix, ., getColumn, (, j, ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, corr, ), ;]
[., getColumn, (, i, ), ,, matrix, ., getColumn, (, j, ), ), ;, outMatrix, ., setEntry, (, i, ,]
[), ,, matrix, ., getColumn, (, j, ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, corr, )]
[), ;, outMatrix, ., setEntry, (, i, ,, j, ,, corr, ), ;, outMatrix, ., setEntry, (, j, ,, i]
[., getColumn, (, j, ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, corr, ), ;, outMatrix, .]
[), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, corr, ), ;, outMatrix, ., setEntry, (, j, ,]
[;, outMatrix, ., setEntry, (, j, ,, i, ,, corr, ), ;, }, outMatrix, ., setEntry, (, i, ,, i]
[., setEntry, (, i, ,, j, ,, corr, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, corr, )]
[,, j, ,, corr, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, corr, ), ;, }, outMatrix, .]
[,, corr, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, corr, ), ;, }, outMatrix, ., setEntry, (]
[), ;, outMatrix, ., setEntry, (, j, ,, i, ,, corr, ), ;, }, outMatrix, ., setEntry, (, i, ,]
[;, }, outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;, }, return, outMatrix, ;, }, public, RealMatrix]
[., setEntry, (, j, ,, i, ,, corr, ), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,, 1d]
[,, i, ,, corr, ), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;, }, return]
[,, corr, ), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;, }, return, outMatrix, ;]
[), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;, }, return, outMatrix, ;, }, public]
[;, }, return, outMatrix, ;, }, public, RealMatrix, computeCorrelationMatrix, (, double, [, ], [, ], data, ), {, return, computeCorrelationMatrix]
[., setEntry, (, i, ,, i, ,, 1d, ), ;, }, return, outMatrix, ;, }, public, RealMatrix, computeCorrelationMatrix, (, double]
[,, i, ,, 1d, ), ;, }, return, outMatrix, ;, }, public, RealMatrix, computeCorrelationMatrix, (, double, [, ], [, ]]
[,, 1d, ), ;, }, return, outMatrix, ;, }, public, RealMatrix, computeCorrelationMatrix, (, double, [, ], [, ], data, )]
[), ;, }, return, outMatrix, ;, }, public, RealMatrix, computeCorrelationMatrix, (, double, [, ], [, ], data, ), {, return]
[;, }, public, RealMatrix, computeCorrelationMatrix, (, double, [, ], [, ], data, ), {, return, computeCorrelationMatrix, (, new, BlockRealMatrix, (]
[;, }, public, double, correlation, (, final, double, [, ], xArray, ,, final, double, [, ], yArray, ), {, SimpleRegression]
[), ;, }, public, double, correlation, (, final, double, [, ], xArray, ,, final, double, [, ], yArray, ), {]
[), ), ;, }, public, double, correlation, (, final, double, [, ], xArray, ,, final, double, [, ], yArray, )]
[;, if, (, xArray, ., length, !=, yArray, ., length, ), {, throw, new, DimensionMismatchException, (, xArray, ., length, ,]
[), {, throw, new, DimensionMismatchException, (, xArray, ., length, ,, yArray, ., length, ), ;, }, else, if, (, xArray]
[!=, yArray, ., length, ), {, throw, new, DimensionMismatchException, (, xArray, ., length, ,, yArray, ., length, ), ;, }]
[., length, !=, yArray, ., length, ), {, throw, new, DimensionMismatchException, (, xArray, ., length, ,, yArray, ., length, )]
[), {, throw, new, DimensionMismatchException, (, xArray, ., length, ,, yArray, ., length, ), ;, }, else, if, (, xArray]
[., length, ), {, throw, new, DimensionMismatchException, (, xArray, ., length, ,, yArray, ., length, ), ;, }, else, if]
[;, }, else, if, (, xArray, ., length, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,]
[,, yArray, ., length, ), ;, }, else, if, (, xArray, ., length, <, 2, ), {, throw, new, MathIllegalArgumentException]
[., length, ,, yArray, ., length, ), ;, }, else, if, (, xArray, ., length, <, 2, ), {, throw]
[), ;, }, else, if, (, xArray, ., length, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION]
[., length, ), ;, }, else, if, (, xArray, ., length, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,, xArray, ., length, ,, 2, ), ;, }, else, {]
[<, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,, xArray, ., length, ,, 2, ), ;, }]
[., length, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,, xArray, ., length, ,, 2, )]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,, xArray, ., length, ,, 2, ), ;, }, else, {]
[;, }, else, {, for, (, int, i, =, 0, ;, i, <, xArray, ., length, ;, i, ++, )]
[,, xArray, ., length, ,, 2, ), ;, }, else, {, for, (, int, i, =, 0, ;, i, <]
[., INSUFFICIENT_DIMENSION, ,, xArray, ., length, ,, 2, ), ;, }, else, {, for, (, int, i, =, 0, ;]
[,, 2, ), ;, }, else, {, for, (, int, i, =, 0, ;, i, <, xArray, ., length, ;]
[., length, ,, 2, ), ;, }, else, {, for, (, int, i, =, 0, ;, i, <, xArray, .]
[), ;, }, else, {, for, (, int, i, =, 0, ;, i, <, xArray, ., length, ;, i, ++]
[;, i, <, xArray, ., length, ;, i, ++, ), {, regression, ., addData, (, xArray, [, i, ], ,]
[;, i, ++, ), {, regression, ., addData, (, xArray, [, i, ], ,, yArray, [, i, ], ), ;]
[<, xArray, ., length, ;, i, ++, ), {, regression, ., addData, (, xArray, [, i, ], ,, yArray, []
[;, i, ++, ), {, regression, ., addData, (, xArray, [, i, ], ,, yArray, [, i, ], ), ;]
[., length, ;, i, ++, ), {, regression, ., addData, (, xArray, [, i, ], ,, yArray, [, i, ]]
[), {, regression, ., addData, (, xArray, [, i, ], ,, yArray, [, i, ], ), ;, }, return, regression]
[++, ), {, regression, ., addData, (, xArray, [, i, ], ,, yArray, [, i, ], ), ;, }, return]
[;, }, return, regression, ., getR, (, ), ;, }, }, public, RealMatrix, covarianceToCorrelation, (, RealMatrix, covarianceMatrix, ), {, int]
[., addData, (, xArray, [, i, ], ,, yArray, [, i, ], ), ;, }, return, regression, ., getR, (]
[,, yArray, [, i, ], ), ;, }, return, regression, ., getR, (, ), ;, }, }, public, RealMatrix, covarianceToCorrelation]
[[, i, ], ,, yArray, [, i, ], ), ;, }, return, regression, ., getR, (, ), ;, }, }]
[], ,, yArray, [, i, ], ), ;, }, return, regression, ., getR, (, ), ;, }, }, public, RealMatrix]
[), ;, }, return, regression, ., getR, (, ), ;, }, }, public, RealMatrix, covarianceToCorrelation, (, RealMatrix, covarianceMatrix, ), {]
[[, i, ], ), ;, }, return, regression, ., getR, (, ), ;, }, }, public, RealMatrix, covarianceToCorrelation, (, RealMatrix]
[], ), ;, }, return, regression, ., getR, (, ), ;, }, }, public, RealMatrix, covarianceToCorrelation, (, RealMatrix, covarianceMatrix, )]
[;, }, }, public, RealMatrix, covarianceToCorrelation, (, RealMatrix, covarianceMatrix, ), {, int, nVars, =, covarianceMatrix, ., getColumnDimension, (, ), ;]
[., getR, (, ), ;, }, }, public, RealMatrix, covarianceToCorrelation, (, RealMatrix, covarianceMatrix, ), {, int, nVars, =, covarianceMatrix, .]
[;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i, =, 0, ;, i]
[., getColumnDimension, (, ), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, nVars, ,, nVars, ), ;, for, (, int, i]
[;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, double, sigma, =, FastMath]
[,, nVars, ), ;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, double]
[), ;, for, (, int, i, =, 0, ;, i, <, nVars, ;, i, ++, ), {, double, sigma, =]
[;, i, <, nVars, ;, i, ++, ), {, double, sigma, =, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (]
[;, i, ++, ), {, double, sigma, =, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, i, ,, i, )]
[<, nVars, ;, i, ++, ), {, double, sigma, =, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, i, ,]
[;, i, ++, ), {, double, sigma, =, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, i, ,, i, )]
[), {, double, sigma, =, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, i, ,, i, ), ), ;, outMatrix]
[++, ), {, double, sigma, =, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, i, ,, i, ), ), ;]
[;, outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;, for, (, int, j, =, 0, ;, j]
[., sqrt, (, covarianceMatrix, ., getEntry, (, i, ,, i, ), ), ;, outMatrix, ., setEntry, (, i, ,, i]
[), ;, outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;, for, (, int, j, =, 0, ;]
[., getEntry, (, i, ,, i, ), ), ;, outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;]
[,, i, ), ), ;, outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;, for, (, int, j]
[), ), ;, outMatrix, ., setEntry, (, i, ,, i, ,, 1d, ), ;, for, (, int, j, =, 0]
[;, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, entry, =, covarianceMatrix]
[., setEntry, (, i, ,, i, ,, 1d, ), ;, for, (, int, j, =, 0, ;, j, <, i]
[,, i, ,, 1d, ), ;, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, )]
[,, 1d, ), ;, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double]
[), ;, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, entry, =]
[;, j, <, i, ;, j, ++, ), {, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,, j, )]
[;, j, ++, ), {, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,, j, ), /, (, sigma, *]
[<, i, ;, j, ++, ), {, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,, j, ), /, (]
[;, j, ++, ), {, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,, j, ), /, (, sigma, *]
[), {, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,, j, ), /, (, sigma, *, FastMath, ., sqrt]
[++, ), {, double, entry, =, covarianceMatrix, ., getEntry, (, i, ,, j, ), /, (, sigma, *, FastMath, .]
[;, outMatrix, ., setEntry, (, i, ,, j, ,, entry, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,]
[/, (, sigma, *, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, j, ,, j, ), ), ), ;, outMatrix]
[., getEntry, (, i, ,, j, ), /, (, sigma, *, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, j]
[,, j, ), /, (, sigma, *, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, j, ,, j, ), )]
[), /, (, sigma, *, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, j, ,, j, ), ), ), ;]
[;, outMatrix, ., setEntry, (, i, ,, j, ,, entry, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,]
[), ;, outMatrix, ., setEntry, (, i, ,, j, ,, entry, ), ;, outMatrix, ., setEntry, (, j, ,, i]
[*, FastMath, ., sqrt, (, covarianceMatrix, ., getEntry, (, j, ,, j, ), ), ), ;, outMatrix, ., setEntry, (]
[), ;, outMatrix, ., setEntry, (, i, ,, j, ,, entry, ), ;, outMatrix, ., setEntry, (, j, ,, i]
[., sqrt, (, covarianceMatrix, ., getEntry, (, j, ,, j, ), ), ), ;, outMatrix, ., setEntry, (, i, ,]
[), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, entry, ), ;, outMatrix, ., setEntry, (, j, ,]
[., getEntry, (, j, ,, j, ), ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, entry, )]
[,, j, ), ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, entry, ), ;, outMatrix, ., setEntry]
[), ), ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, entry, ), ;, outMatrix, ., setEntry, (, j]
[;, outMatrix, ., setEntry, (, j, ,, i, ,, entry, ), ;, }, }, return, outMatrix, ;, }, private, void]
[., setEntry, (, i, ,, j, ,, entry, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, entry, )]
[,, j, ,, entry, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, entry, ), ;, }, }, return]
[,, entry, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, entry, ), ;, }, }, return, outMatrix, ;]
[), ;, outMatrix, ., setEntry, (, j, ,, i, ,, entry, ), ;, }, }, return, outMatrix, ;, }, private]
[;, }, }, return, outMatrix, ;, }, private, void, checkSufficientData, (, final, RealMatrix, matrix, ), {, int, nRows, =, matrix]
[., setEntry, (, j, ,, i, ,, entry, ), ;, }, }, return, outMatrix, ;, }, private, void, checkSufficientData, (]
[,, i, ,, entry, ), ;, }, }, return, outMatrix, ;, }, private, void, checkSufficientData, (, final, RealMatrix, matrix, )]
[,, entry, ), ;, }, }, return, outMatrix, ;, }, private, void, checkSufficientData, (, final, RealMatrix, matrix, ), {, int]
[), ;, }, }, return, outMatrix, ;, }, private, void, checkSufficientData, (, final, RealMatrix, matrix, ), {, int, nRows, =]
[;, }, private, void, checkSufficientData, (, final, RealMatrix, matrix, ), {, int, nRows, =, matrix, ., getRowDimension, (, ), ;]
[;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||, nCols, <, 2, )]
[., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||]
[;, if, (, nRows, <, 2, ||, nCols, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,]
[., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||, nCols, <, 2, ), {, throw, new, MathIllegalArgumentException, (]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }, }, }]
[||, nCols, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }]
[<, 2, ||, nCols, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, )]
[||, nCols, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }, }, }]
[<, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }, }, }]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }, }, }]
[;, }, }, }]
[,, nRows, ,, nCols, ), ;, }, }, }]
[., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }, }, }]
[,, nCols, ), ;, }, }, }]
[), ;, }, }, }]
