[util, ., Set, ;, import, static, org, ., mockito, ., internal, ., util, ., collections, ., Sets, ., newSet, ;]
[;, import, static, org, ., mockito, ., internal, ., util, ., collections, ., Sets, ., newSet, ;, @, SuppressWarnings, (]
[>, extends, CreationSettings, <, T, >, implements, MockSettings, ,, MockCreationSettings, <, T, >, {, private, static, final, long, serialVersionUID, =]
[long, serialVersionUID, =, 4475297236197939569L, ;, private, boolean, useConstructor, ;, private, Object, outerClassInstance, ;, public, MockSettings, serializable, (, ), {, return]
[=, 4475297236197939569L, ;, private, boolean, useConstructor, ;, private, Object, outerClassInstance, ;, public, MockSettings, serializable, (, ), {, return, serializable, (]
[=, 4475297236197939569L, ;, private, boolean, useConstructor, ;, private, Object, outerClassInstance, ;, public, MockSettings, serializable, (, ), {, return, serializable, (]
[(, ), {, return, serializable, (, SerializableMode, ., BASIC, ), ;, }, public, MockSettings, serializable, (, SerializableMode, mode, ), {]
[(, ), {, return, serializable, (, SerializableMode, ., BASIC, ), ;, }, public, MockSettings, serializable, (, SerializableMode, mode, ), {]
[serializable, (, SerializableMode, ., BASIC, ), ;, }, public, MockSettings, serializable, (, SerializableMode, mode, ), {, this, ., serializableMode, =]
[., BASIC, ), ;, }, public, MockSettings, serializable, (, SerializableMode, mode, ), {, this, ., serializableMode, =, mode, ;, return]
[., serializableMode, =, mode, ;, return, this, ;, }, public, MockSettings, extraInterfaces, (, Class, ..., extraInterfaces, ), {, if, (]
[., serializableMode, =, mode, ;, return, this, ;, }, public, MockSettings, extraInterfaces, (, Class, ..., extraInterfaces, ), {, if, (]
[., serializableMode, =, mode, ;, return, this, ;, }, public, MockSettings, extraInterfaces, (, Class, ..., extraInterfaces, ), {, if, (]
[=, mode, ;, return, this, ;, }, public, MockSettings, extraInterfaces, (, Class, ..., extraInterfaces, ), {, if, (, extraInterfaces, ==]
[;, return, this, ;, }, public, MockSettings, extraInterfaces, (, Class, ..., extraInterfaces, ), {, if, (, extraInterfaces, ==, null, ||]
[;, return, this, ;, }, public, MockSettings, extraInterfaces, (, Class, ..., extraInterfaces, ), {, if, (, extraInterfaces, ==, null, ||]
[;, return, this, ;, }, public, MockSettings, extraInterfaces, (, Class, ..., extraInterfaces, ), {, if, (, extraInterfaces, ==, null, ||]
[}, public, MockSettings, extraInterfaces, (, Class, ..., extraInterfaces, ), {, if, (, extraInterfaces, ==, null, ||, extraInterfaces, ., length, ==]
[extraInterfaces, (, Class, ..., extraInterfaces, ), {, if, (, extraInterfaces, ==, null, ||, extraInterfaces, ., length, ==, 0, ), {]
[extraInterfaces, (, Class, ..., extraInterfaces, ), {, if, (, extraInterfaces, ==, null, ||, extraInterfaces, ., length, ==, 0, ), {]
[length, ==, 0, ), {, new, Reporter, (, ), ., extraInterfacesRequiresAtLeastOneInterface, (, ), ;, }, for, (, Class, i, :]
[new, Reporter, (, ), ., extraInterfacesRequiresAtLeastOneInterface, (, ), ;, }, for, (, Class, i, :, extraInterfaces, ), {, if, (]
[new, Reporter, (, ), ., extraInterfacesRequiresAtLeastOneInterface, (, ), ;, }, for, (, Class, i, :, extraInterfaces, ), {, if, (]
[(, ), ., extraInterfacesRequiresAtLeastOneInterface, (, ), ;, }, for, (, Class, i, :, extraInterfaces, ), {, if, (, i, ==]
[extraInterfacesRequiresAtLeastOneInterface, (, ), ;, }, for, (, Class, i, :, extraInterfaces, ), {, if, (, i, ==, null, ), {]
[extraInterfacesRequiresAtLeastOneInterface, (, ), ;, }, for, (, Class, i, :, extraInterfaces, ), {, if, (, i, ==, null, ), {]
[if, (, i, ==, null, ), {, new, Reporter, (, ), ., extraInterfacesDoesNotAcceptNullParameters, (, ), ;, }, else, if, (]
[(, i, ==, null, ), {, new, Reporter, (, ), ., extraInterfacesDoesNotAcceptNullParameters, (, ), ;, }, else, if, (, !]
[(, i, ==, null, ), {, new, Reporter, (, ), ., extraInterfacesDoesNotAcceptNullParameters, (, ), ;, }, else, if, (, !]
[Reporter, (, ), ., extraInterfacesDoesNotAcceptNullParameters, (, ), ;, }, else, if, (, !, i, ., isInterface, (, ), ), {]
[Reporter, (, ), ., extraInterfacesDoesNotAcceptNullParameters, (, ), ;, }, else, if, (, !, i, ., isInterface, (, ), ), {]
[;, }, else, if, (, !, i, ., isInterface, (, ), ), {, new, Reporter, (, ), ., extraInterfacesAcceptsOnlyInterfaces, (]
[!, i, ., isInterface, (, ), ), {, new, Reporter, (, ), ., extraInterfacesAcceptsOnlyInterfaces, (, i, ), ;, }, }]
[!, i, ., isInterface, (, ), ), {, new, Reporter, (, ), ., extraInterfacesAcceptsOnlyInterfaces, (, i, ), ;, }, }]
[(, ), ), {, new, Reporter, (, ), ., extraInterfacesAcceptsOnlyInterfaces, (, i, ), ;, }, }, this, ., extraInterfaces, =]
[), {, new, Reporter, (, ), ., extraInterfacesAcceptsOnlyInterfaces, (, i, ), ;, }, }, this, ., extraInterfaces, =, newSet, (]
[(, ), ., extraInterfacesAcceptsOnlyInterfaces, (, i, ), ;, }, }, this, ., extraInterfaces, =, newSet, (, extraInterfaces, ), ;, return]
[this, ., extraInterfaces, =, newSet, (, extraInterfaces, ), ;, return, this, ;, }, public, MockName, getMockName, (, ), {, return]
[public, MockName, getMockName, (, ), {, return, mockName, ;, }, public, Set, <, Class, >, getExtraInterfaces, (, ), {, return]
[public, Set, <, Class, >, getExtraInterfaces, (, ), {, return, extraInterfaces, ;, }, public, Object, getSpiedInstance, (, ), {, return]
[;, }, public, Object, getSpiedInstance, (, ), {, return, spiedInstance, ;, }, public, MockSettings, name, (, String, name, ), {]
[;, }, public, Object, getSpiedInstance, (, ), {, return, spiedInstance, ;, }, public, MockSettings, name, (, String, name, ), {]
[getSpiedInstance, (, ), {, return, spiedInstance, ;, }, public, MockSettings, name, (, String, name, ), {, this, ., name, =]
[{, return, spiedInstance, ;, }, public, MockSettings, name, (, String, name, ), {, this, ., name, =, name, ;, return]
[), {, this, ., name, =, name, ;, return, this, ;, }, public, MockSettings, spiedInstance, (, Object, spiedInstance, ), {]
[), {, this, ., name, =, name, ;, return, this, ;, }, public, MockSettings, spiedInstance, (, Object, spiedInstance, ), {]
[name, =, name, ;, return, this, ;, }, public, MockSettings, spiedInstance, (, Object, spiedInstance, ), {, this, ., spiedInstance, =]
[;, return, this, ;, }, public, MockSettings, spiedInstance, (, Object, spiedInstance, ), {, this, ., spiedInstance, =, spiedInstance, ;, return]
[), {, this, ., spiedInstance, =, spiedInstance, ;, return, this, ;, }, public, MockSettings, defaultAnswer, (, Answer, defaultAnswer, ), {]
[), {, this, ., spiedInstance, =, spiedInstance, ;, return, this, ;, }, public, MockSettings, defaultAnswer, (, Answer, defaultAnswer, ), {]
[spiedInstance, =, spiedInstance, ;, return, this, ;, }, public, MockSettings, defaultAnswer, (, Answer, defaultAnswer, ), {, this, ., defaultAnswer, =]
[return, this, ;, }, public, MockSettings, defaultAnswer, (, Answer, defaultAnswer, ), {, this, ., defaultAnswer, =, defaultAnswer, ;, if, (]
[return, this, ;, }, public, MockSettings, defaultAnswer, (, Answer, defaultAnswer, ), {, this, ., defaultAnswer, =, defaultAnswer, ;, if, (]
[;, }, public, MockSettings, defaultAnswer, (, Answer, defaultAnswer, ), {, this, ., defaultAnswer, =, defaultAnswer, ;, if, (, defaultAnswer, ==]
[MockSettings, defaultAnswer, (, Answer, defaultAnswer, ), {, this, ., defaultAnswer, =, defaultAnswer, ;, if, (, defaultAnswer, ==, null, ), {]
[MockSettings, defaultAnswer, (, Answer, defaultAnswer, ), {, this, ., defaultAnswer, =, defaultAnswer, ;, if, (, defaultAnswer, ==, null, ), {]
[defaultAnswer, ;, if, (, defaultAnswer, ==, null, ), {, new, Reporter, (, ), ., defaultAnswerDoesNotAcceptNullParameter, (, ), ;, }, return]
[., defaultAnswerDoesNotAcceptNullParameter, (, ), ;, }, return, this, ;, }, public, Answer, <, Object, >, getDefaultAnswer, (, ), {, return]
[}, public, Answer, <, Object, >, getDefaultAnswer, (, ), {, return, defaultAnswer, ;, }, public, MockSettingsImpl, stubOnly, (, ), {]
[}, public, Answer, <, Object, >, getDefaultAnswer, (, ), {, return, defaultAnswer, ;, }, public, MockSettingsImpl, stubOnly, (, ), {]
[Object, >, getDefaultAnswer, (, ), {, return, defaultAnswer, ;, }, public, MockSettingsImpl, stubOnly, (, ), {, this, ., stubOnly, =]
[(, ), {, return, defaultAnswer, ;, }, public, MockSettingsImpl, stubOnly, (, ), {, this, ., stubOnly, =, true, ;, return]
[stubOnly, (, ), {, this, ., stubOnly, =, true, ;, return, this, ;, }, public, MockSettings, useConstructor, (, ), {]
[stubOnly, (, ), {, this, ., stubOnly, =, true, ;, return, this, ;, }, public, MockSettings, useConstructor, (, ), {]
[this, ., stubOnly, =, true, ;, return, this, ;, }, public, MockSettings, useConstructor, (, ), {, this, ., useConstructor, =]
[=, true, ;, return, this, ;, }, public, MockSettings, useConstructor, (, ), {, this, ., useConstructor, =, true, ;, return]
[), {, this, ., useConstructor, =, true, ;, return, this, ;, }, public, MockSettings, outerInstance, (, Object, outerClassInstance, ), {]
[), {, this, ., useConstructor, =, true, ;, return, this, ;, }, public, MockSettings, outerInstance, (, Object, outerClassInstance, ), {]
[useConstructor, =, true, ;, return, this, ;, }, public, MockSettings, outerInstance, (, Object, outerClassInstance, ), {, this, ., outerClassInstance, =]
[;, return, this, ;, }, public, MockSettings, outerInstance, (, Object, outerClassInstance, ), {, this, ., outerClassInstance, =, outerClassInstance, ;, return]
[outerClassInstance, ), {, this, ., outerClassInstance, =, outerClassInstance, ;, return, this, ;, }, public, boolean, isUsingConstructor, (, ), {, return]
[this, ;, }, public, boolean, isUsingConstructor, (, ), {, return, useConstructor, ;, }, public, Object, getOuterClassInstance, (, ), {, return]
[useConstructor, ;, }, public, Object, getOuterClassInstance, (, ), {, return, outerClassInstance, ;, }, public, boolean, isStubOnly, (, ), {, return]
[useConstructor, ;, }, public, Object, getOuterClassInstance, (, ), {, return, outerClassInstance, ;, }, public, boolean, isStubOnly, (, ), {, return]
[public, boolean, isStubOnly, (, ), {, return, this, ., stubOnly, ;, }, public, MockSettings, verboseLogging, (, ), {, if, (]
[boolean, isStubOnly, (, ), {, return, this, ., stubOnly, ;, }, public, MockSettings, verboseLogging, (, ), {, if, (, !]
[(, ), {, return, this, ., stubOnly, ;, }, public, MockSettings, verboseLogging, (, ), {, if, (, !, invocationListenersContainsType, (]
[stubOnly, ;, }, public, MockSettings, verboseLogging, (, ), {, if, (, !, invocationListenersContainsType, (, VerboseMockInvocationLogger, ., class, ), ), {]
[}, public, MockSettings, verboseLogging, (, ), {, if, (, !, invocationListenersContainsType, (, VerboseMockInvocationLogger, ., class, ), ), {, invocationListeners, (]
[(, !, invocationListenersContainsType, (, VerboseMockInvocationLogger, ., class, ), ), {, invocationListeners, (, new, VerboseMockInvocationLogger, (, ), ), ;, }, return]
[(, ), ), ;, }, return, this, ;, }, public, MockSettings, invocationListeners, (, InvocationListener, ..., listeners, ), {, if, (]
[(, ), ), ;, }, return, this, ;, }, public, MockSettings, invocationListeners, (, InvocationListener, ..., listeners, ), {, if, (]
[(, ), ), ;, }, return, this, ;, }, public, MockSettings, invocationListeners, (, InvocationListener, ..., listeners, ), {, if, (]
[), ;, }, return, this, ;, }, public, MockSettings, invocationListeners, (, InvocationListener, ..., listeners, ), {, if, (, listeners, ==]
[}, return, this, ;, }, public, MockSettings, invocationListeners, (, InvocationListener, ..., listeners, ), {, if, (, listeners, ==, null, ||]
[}, return, this, ;, }, public, MockSettings, invocationListeners, (, InvocationListener, ..., listeners, ), {, if, (, listeners, ==, null, ||]
[}, return, this, ;, }, public, MockSettings, invocationListeners, (, InvocationListener, ..., listeners, ), {, if, (, listeners, ==, null, ||]
[}, public, MockSettings, invocationListeners, (, InvocationListener, ..., listeners, ), {, if, (, listeners, ==, null, ||, listeners, ., length, ==]
[invocationListeners, (, InvocationListener, ..., listeners, ), {, if, (, listeners, ==, null, ||, listeners, ., length, ==, 0, ), {]
[invocationListeners, (, InvocationListener, ..., listeners, ), {, if, (, listeners, ==, null, ||, listeners, ., length, ==, 0, ), {]
[length, ==, 0, ), {, new, Reporter, (, ), ., invocationListenersRequiresAtLeastOneListener, (, ), ;, }, for, (, InvocationListener, listener, :]
[new, Reporter, (, ), ., invocationListenersRequiresAtLeastOneListener, (, ), ;, }, for, (, InvocationListener, listener, :, listeners, ), {, if, (]
[new, Reporter, (, ), ., invocationListenersRequiresAtLeastOneListener, (, ), ;, }, for, (, InvocationListener, listener, :, listeners, ), {, if, (]
[(, ), ., invocationListenersRequiresAtLeastOneListener, (, ), ;, }, for, (, InvocationListener, listener, :, listeners, ), {, if, (, listener, ==]
[invocationListenersRequiresAtLeastOneListener, (, ), ;, }, for, (, InvocationListener, listener, :, listeners, ), {, if, (, listener, ==, null, ), {]
[invocationListenersRequiresAtLeastOneListener, (, ), ;, }, for, (, InvocationListener, listener, :, listeners, ), {, if, (, listener, ==, null, ), {]
[listeners, ), {, if, (, listener, ==, null, ), {, new, Reporter, (, ), ., invocationListenerDoesNotAcceptNullParameters, (, ), ;, }]
[listeners, ), {, if, (, listener, ==, null, ), {, new, Reporter, (, ), ., invocationListenerDoesNotAcceptNullParameters, (, ), ;, }]
[listeners, ), {, if, (, listener, ==, null, ), {, new, Reporter, (, ), ., invocationListenerDoesNotAcceptNullParameters, (, ), ;, }]
[==, null, ), {, new, Reporter, (, ), ., invocationListenerDoesNotAcceptNullParameters, (, ), ;, }, this, ., invocationListeners, ., add, (]
[Reporter, (, ), ., invocationListenerDoesNotAcceptNullParameters, (, ), ;, }, this, ., invocationListeners, ., add, (, listener, ), ;, }, return]
[return, this, ;, }, private, boolean, invocationListenersContainsType, (, Class, <, ?, >, clazz, ), {, for, (, InvocationListener, listener, :]
[boolean, invocationListenersContainsType, (, Class, <, ?, >, clazz, ), {, for, (, InvocationListener, listener, :, invocationListeners, ), {, if, (]
[boolean, invocationListenersContainsType, (, Class, <, ?, >, clazz, ), {, for, (, InvocationListener, listener, :, invocationListeners, ), {, if, (]
[boolean, invocationListenersContainsType, (, Class, <, ?, >, clazz, ), {, for, (, InvocationListener, listener, :, invocationListeners, ), {, if, (]
[), {, for, (, InvocationListener, listener, :, invocationListeners, ), {, if, (, listener, ., getClass, (, ), ., equals, (]
[listener, :, invocationListeners, ), {, if, (, listener, ., getClass, (, ), ., equals, (, clazz, ), ), {, return]
[if, (, listener, ., getClass, (, ), ., equals, (, clazz, ), ), {, return, true, ;, }, }, return]
[{, return, true, ;, }, }, return, false, ;, }, public, List, <, InvocationListener, >, getInvocationListeners, (, ), {, return]
[{, return, true, ;, }, }, return, false, ;, }, public, List, <, InvocationListener, >, getInvocationListeners, (, ), {, return]
[<, InvocationListener, >, getInvocationListeners, (, ), {, return, this, ., invocationListeners, ;, }, public, boolean, hasInvocationListeners, (, ), {, return]
[InvocationListener, >, getInvocationListeners, (, ), {, return, this, ., invocationListeners, ;, }, public, boolean, hasInvocationListeners, (, ), {, return, !]
[InvocationListener, >, getInvocationListeners, (, ), {, return, this, ., invocationListeners, ;, }, public, boolean, hasInvocationListeners, (, ), {, return, !]
[{, return, !, invocationListeners, ., isEmpty, (, ), ;, }, public, Class, <, T, >, getTypeToMock, (, ), {, return]
[{, return, typeToMock, ;, }, public, MockCreationSettings, <, T, >, confirm, (, Class, <, T, >, typeToMock, ), {, return]
[typeToMock, ;, }, public, MockCreationSettings, <, T, >, confirm, (, Class, <, T, >, typeToMock, ), {, return, validatedSettings, (]
[}, public, MockCreationSettings, <, T, >, confirm, (, Class, <, T, >, typeToMock, ), {, return, validatedSettings, (, typeToMock, ,]
[T, >, validatedSettings, (, Class, <, T, >, typeToMock, ,, CreationSettings, <, T, >, source, ), {, MockCreationValidator, validator, =]
[<, T, >, typeToMock, ,, CreationSettings, <, T, >, source, ), {, MockCreationValidator, validator, =, new, MockCreationValidator, (, ), ;]
[<, T, >, typeToMock, ,, CreationSettings, <, T, >, source, ), {, MockCreationValidator, validator, =, new, MockCreationValidator, (, ), ;]
[,, CreationSettings, <, T, >, source, ), {, MockCreationValidator, validator, =, new, MockCreationValidator, (, ), ;, validator, ., validateType, (]
[T, >, source, ), {, MockCreationValidator, validator, =, new, MockCreationValidator, (, ), ;, validator, ., validateType, (, typeToMock, ), ;]
[T, >, source, ), {, MockCreationValidator, validator, =, new, MockCreationValidator, (, ), ;, validator, ., validateType, (, typeToMock, ), ;]
[{, MockCreationValidator, validator, =, new, MockCreationValidator, (, ), ;, validator, ., validateType, (, typeToMock, ), ;, validator, ., validateExtraInterfaces, (]
[validator, =, new, MockCreationValidator, (, ), ;, validator, ., validateType, (, typeToMock, ), ;, validator, ., validateExtraInterfaces, (, typeToMock, ,]
[validator, =, new, MockCreationValidator, (, ), ;, validator, ., validateType, (, typeToMock, ), ;, validator, ., validateExtraInterfaces, (, typeToMock, ,]
[validator, ., validateType, (, typeToMock, ), ;, validator, ., validateExtraInterfaces, (, typeToMock, ,, source, ., getExtraInterfaces, (, ), ), ;]
[validator, ., validateType, (, typeToMock, ), ;, validator, ., validateExtraInterfaces, (, typeToMock, ,, source, ., getExtraInterfaces, (, ), ), ;]
[typeToMock, ), ;, validator, ., validateExtraInterfaces, (, typeToMock, ,, source, ., getExtraInterfaces, (, ), ), ;, validator, ., validateMockedType, (]
[;, validator, ., validateExtraInterfaces, (, typeToMock, ,, source, ., getExtraInterfaces, (, ), ), ;, validator, ., validateMockedType, (, typeToMock, ,]
[;, validator, ., validateExtraInterfaces, (, typeToMock, ,, source, ., getExtraInterfaces, (, ), ), ;, validator, ., validateMockedType, (, typeToMock, ,]
[source, ., getExtraInterfaces, (, ), ), ;, validator, ., validateMockedType, (, typeToMock, ,, source, ., getSpiedInstance, (, ), ), ;]
[source, ., getExtraInterfaces, (, ), ), ;, validator, ., validateMockedType, (, typeToMock, ,, source, ., getSpiedInstance, (, ), ), ;]
[), ), ;, validator, ., validateMockedType, (, typeToMock, ,, source, ., getSpiedInstance, (, ), ), ;, validator, ., validateSerializable, (]
[;, validator, ., validateMockedType, (, typeToMock, ,, source, ., getSpiedInstance, (, ), ), ;, validator, ., validateSerializable, (, typeToMock, ,]
[;, validator, ., validateMockedType, (, typeToMock, ,, source, ., getSpiedInstance, (, ), ), ;, validator, ., validateSerializable, (, typeToMock, ,]
[source, ., getSpiedInstance, (, ), ), ;, validator, ., validateSerializable, (, typeToMock, ,, source, ., isSerializable, (, ), ), ;]
[source, ., getSpiedInstance, (, ), ), ;, validator, ., validateSerializable, (, typeToMock, ,, source, ., isSerializable, (, ), ), ;]
[), ), ;, validator, ., validateSerializable, (, typeToMock, ,, source, ., isSerializable, (, ), ), ;, validator, ., validateConstructorUse, (]
[), ), ;, validator, ., validateSerializable, (, typeToMock, ,, source, ., isSerializable, (, ), ), ;, validator, ., validateConstructorUse, (]
[(, typeToMock, ,, source, ., isSerializable, (, ), ), ;, validator, ., validateConstructorUse, (, source, ., isUsingConstructor, (, ), ,]
[(, typeToMock, ,, source, ., isSerializable, (, ), ), ;, validator, ., validateConstructorUse, (, source, ., isUsingConstructor, (, ), ,]
[(, source, ., isUsingConstructor, (, ), ,, source, ., getSerializableMode, (, ), ), ;, CreationSettings, <, T, >, settings, =]
[,, source, ., getSerializableMode, (, ), ), ;, CreationSettings, <, T, >, settings, =, new, CreationSettings, <, T, >, (]
[getSerializableMode, (, ), ), ;, CreationSettings, <, T, >, settings, =, new, CreationSettings, <, T, >, (, source, ), ;]
[getSerializableMode, (, ), ), ;, CreationSettings, <, T, >, settings, =, new, CreationSettings, <, T, >, (, source, ), ;]
[;, CreationSettings, <, T, >, settings, =, new, CreationSettings, <, T, >, (, source, ), ;, settings, ., setMockName, (]
[T, >, settings, =, new, CreationSettings, <, T, >, (, source, ), ;, settings, ., setMockName, (, new, MockNameImpl, (]
[T, >, settings, =, new, CreationSettings, <, T, >, (, source, ), ;, settings, ., setMockName, (, new, MockNameImpl, (]
[<, T, >, (, source, ), ;, settings, ., setMockName, (, new, MockNameImpl, (, source, ., getName, (, ), ,]
[source, ), ;, settings, ., setMockName, (, new, MockNameImpl, (, source, ., getName, (, ), ,, typeToMock, ), ), ;]
[source, ), ;, settings, ., setMockName, (, new, MockNameImpl, (, source, ., getName, (, ), ,, typeToMock, ), ), ;]
[., setMockName, (, new, MockNameImpl, (, source, ., getName, (, ), ,, typeToMock, ), ), ;, settings, ., setTypeToMock, (]
[new, MockNameImpl, (, source, ., getName, (, ), ,, typeToMock, ), ), ;, settings, ., setTypeToMock, (, typeToMock, ), ;]
[new, MockNameImpl, (, source, ., getName, (, ), ,, typeToMock, ), ), ;, settings, ., setTypeToMock, (, typeToMock, ), ;]
[., getName, (, ), ,, typeToMock, ), ), ;, settings, ., setTypeToMock, (, typeToMock, ), ;, settings, ., setExtraInterfaces, (]
[(, ), ,, typeToMock, ), ), ;, settings, ., setTypeToMock, (, typeToMock, ), ;, settings, ., setExtraInterfaces, (, prepareExtraInterfaces, (]
[), ;, settings, ., setTypeToMock, (, typeToMock, ), ;, settings, ., setExtraInterfaces, (, prepareExtraInterfaces, (, source, ), ), ;, return]
[;, }, private, static, Set, <, Class, >, prepareExtraInterfaces, (, CreationSettings, settings, ), {, Set, <, Class, >, interfaces, =]
[Class, >, prepareExtraInterfaces, (, CreationSettings, settings, ), {, Set, <, Class, >, interfaces, =, new, HashSet, <, Class, >, (]
[Class, >, prepareExtraInterfaces, (, CreationSettings, settings, ), {, Set, <, Class, >, interfaces, =, new, HashSet, <, Class, >, (]
[<, Class, >, interfaces, =, new, HashSet, <, Class, >, (, settings, ., getExtraInterfaces, (, ), ), ;, if, (]
[<, Class, >, interfaces, =, new, HashSet, <, Class, >, (, settings, ., getExtraInterfaces, (, ), ), ;, if, (]
[<, Class, >, (, settings, ., getExtraInterfaces, (, ), ), ;, if, (, settings, ., isSerializable, (, ), ), {]
[<, Class, >, (, settings, ., getExtraInterfaces, (, ), ), ;, if, (, settings, ., isSerializable, (, ), ), {]
[settings, ., getExtraInterfaces, (, ), ), ;, if, (, settings, ., isSerializable, (, ), ), {, interfaces, ., add, (]
[if, (, settings, ., isSerializable, (, ), ), {, interfaces, ., add, (, Serializable, ., class, ), ;, }, return]
