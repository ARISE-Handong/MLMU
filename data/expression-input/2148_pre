[{, public, ShapeList, (, ), {, super, (, ), ;, }, public, Shape, getShape, (, int, index, ), {, return]
[(, ), {, super, (, ), ;, }, public, Shape, getShape, (, int, index, ), {, return, (, Shape, )]
[{, super, (, ), ;, }, public, Shape, getShape, (, int, index, ), {, return, (, Shape, ), get, (]
[(, Shape, ), get, (, index, ), ;, }, public, void, setShape, (, int, index, ,, Shape, shape, ), {]
[), get, (, index, ), ;, }, public, void, setShape, (, int, index, ,, Shape, shape, ), {, set, (]
[(, index, ), ;, }, public, void, setShape, (, int, index, ,, Shape, shape, ), {, set, (, index, ,]
[shape, ), {, set, (, index, ,, shape, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[shape, ), {, set, (, index, ,, shape, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[return, super, ., clone, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[(, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, ShapeList, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, ShapeList, ), ), {, return, false, ;, }, ShapeList, that, =]
[if, (, !, (, obj, instanceof, ShapeList, ), ), {, return, false, ;, }, ShapeList, that, =, (, ShapeList, )]
[instanceof, ShapeList, ), ), {, return, false, ;, }, ShapeList, that, =, (, ShapeList, ), obj, ;, int, listSize, =]
[ShapeList, that, =, (, ShapeList, ), obj, ;, int, listSize, =, size, (, ), ;, for, (, int, i, =]
[=, (, ShapeList, ), obj, ;, int, listSize, =, size, (, ), ;, for, (, int, i, =, 0, ;]
[=, (, ShapeList, ), obj, ;, int, listSize, =, size, (, ), ;, for, (, int, i, =, 0, ;]
[ShapeList, ), obj, ;, int, listSize, =, size, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[obj, ;, int, listSize, =, size, (, ), ;, for, (, int, i, =, 0, ;, i, <, listSize, ;]
[obj, ;, int, listSize, =, size, (, ), ;, for, (, int, i, =, 0, ;, i, <, listSize, ;]
[(, ), ;, for, (, int, i, =, 0, ;, i, <, listSize, ;, i, ++, ), {, if, (]
[), ;, for, (, int, i, =, 0, ;, i, <, listSize, ;, i, ++, ), {, if, (, !]
[), ;, for, (, int, i, =, 0, ;, i, <, listSize, ;, i, ++, ), {, if, (, !]
[int, i, =, 0, ;, i, <, listSize, ;, i, ++, ), {, if, (, !, ShapeUtilities, ., equal, (]
[0, ;, i, <, listSize, ;, i, ++, ), {, if, (, !, ShapeUtilities, ., equal, (, (, Shape, )]
[i, <, listSize, ;, i, ++, ), {, if, (, !, ShapeUtilities, ., equal, (, (, Shape, ), get, (]
[;, i, ++, ), {, if, (, !, ShapeUtilities, ., equal, (, (, Shape, ), get, (, i, ), ,]
[), {, if, (, !, ShapeUtilities, ., equal, (, (, Shape, ), get, (, i, ), ,, (, Shape, )]
[), {, if, (, !, ShapeUtilities, ., equal, (, (, Shape, ), get, (, i, ), ,, (, Shape, )]
[!, ShapeUtilities, ., equal, (, (, Shape, ), get, (, i, ), ,, (, Shape, ), that, ., get, (]
[Shape, ), get, (, i, ), ,, (, Shape, ), that, ., get, (, i, ), ), ), {, return]
[), ,, (, Shape, ), that, ., get, (, i, ), ), ), {, return, false, ;, }, }, return]
[), ), ), {, return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[), ), ), {, return, false, ;, }, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[), {, return, super, ., hashCode, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[), {, return, super, ., hashCode, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[}, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, int, count, =]
[(, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, int, count, =, size, (, ), ;]
[(, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, int, count, =, size, (, ), ;]
[throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, int, count, =, size, (, ), ;, stream, ., writeInt, (]
[;, int, count, =, size, (, ), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =]
[count, =, size, (, ), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;]
[count, =, size, (, ), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;]
[size, (, ), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;, i, <]
[), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[), ;, stream, ., writeInt, (, count, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, Shape, shape, =]
[for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, Shape, shape, =, getShape, (]
[0, ;, i, <, count, ;, i, ++, ), {, Shape, shape, =, getShape, (, i, ), ;, if, (]
[0, ;, i, <, count, ;, i, ++, ), {, Shape, shape, =, getShape, (, i, ), ;, if, (]
[i, <, count, ;, i, ++, ), {, Shape, shape, =, getShape, (, i, ), ;, if, (, shape, !=]
[;, i, ++, ), {, Shape, shape, =, getShape, (, i, ), ;, if, (, shape, !=, null, ), {]
[;, i, ++, ), {, Shape, shape, =, getShape, (, i, ), ;, if, (, shape, !=, null, ), {]
[{, Shape, shape, =, getShape, (, i, ), ;, if, (, shape, !=, null, ), {, stream, ., writeInt, (]
[=, getShape, (, i, ), ;, if, (, shape, !=, null, ), {, stream, ., writeInt, (, i, ), ;]
[=, getShape, (, i, ), ;, if, (, shape, !=, null, ), {, stream, ., writeInt, (, i, ), ;]
[), ;, if, (, shape, !=, null, ), {, stream, ., writeInt, (, i, ), ;, SerialUtilities, ., writeShape, (]
[if, (, shape, !=, null, ), {, stream, ., writeInt, (, i, ), ;, SerialUtilities, ., writeShape, (, shape, ,]
[{, stream, ., writeInt, (, i, ), ;, SerialUtilities, ., writeShape, (, shape, ,, stream, ), ;, }, else, {]
[{, stream, ., writeInt, (, i, ), ;, SerialUtilities, ., writeShape, (, shape, ,, stream, ), ;, }, else, {]
[(, i, ), ;, SerialUtilities, ., writeShape, (, shape, ,, stream, ), ;, }, else, {, stream, ., writeInt, (]
[i, ), ;, SerialUtilities, ., writeShape, (, shape, ,, stream, ), ;, }, else, {, stream, ., writeInt, (, -]
[(, -, 1, ), ;, }, }, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[(, -, 1, ), ;, }, }, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, int, count, =]
[void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, int, count, =]
[stream, ., defaultReadObject, (, ), ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =]
[defaultReadObject, (, ), ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;]
[defaultReadObject, (, ), ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;]
[), ;, int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[int, count, =, stream, ., readInt, (, ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, int, index, =]
[), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, int, index, =]
[;, i, <, count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (]
[;, i, <, count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (]
[<, count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=]
[count, ;, i, ++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -]
[++, ), {, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {]
[{, int, index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {, setShape, (]
[index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {, setShape, (, index, ,]
[index, =, stream, ., readInt, (, ), ;, if, (, index, !=, -, 1, ), {, setShape, (, index, ,]
[readInt, (, ), ;, if, (, index, !=, -, 1, ), {, setShape, (, index, ,, SerialUtilities, ., readShape, (]
