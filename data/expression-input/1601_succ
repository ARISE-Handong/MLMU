[;, public, static, final, Days, ONE, =, new, Days, (, 1, ), ;, public, static, final, Days, TWO, =, new]
[), ;, public, static, final, Days, ONE, =, new, Days, (, 1, ), ;, public, static, final, Days, TWO, =]
[;, public, static, final, Days, TWO, =, new, Days, (, 2, ), ;, public, static, final, Days, THREE, =, new]
[), ;, public, static, final, Days, TWO, =, new, Days, (, 2, ), ;, public, static, final, Days, THREE, =]
[;, public, static, final, Days, THREE, =, new, Days, (, 3, ), ;, public, static, final, Days, FOUR, =, new]
[), ;, public, static, final, Days, THREE, =, new, Days, (, 3, ), ;, public, static, final, Days, FOUR, =]
[;, public, static, final, Days, FOUR, =, new, Days, (, 4, ), ;, public, static, final, Days, FIVE, =, new]
[), ;, public, static, final, Days, FOUR, =, new, Days, (, 4, ), ;, public, static, final, Days, FIVE, =]
[;, public, static, final, Days, FIVE, =, new, Days, (, 5, ), ;, public, static, final, Days, SIX, =, new]
[), ;, public, static, final, Days, FIVE, =, new, Days, (, 5, ), ;, public, static, final, Days, SIX, =]
[;, public, static, final, Days, SIX, =, new, Days, (, 6, ), ;, public, static, final, Days, SEVEN, =, new]
[), ;, public, static, final, Days, SIX, =, new, Days, (, 6, ), ;, public, static, final, Days, SEVEN, =]
[;, public, static, final, Days, SEVEN, =, new, Days, (, 7, ), ;, public, static, final, Days, MAX_VALUE, =, new]
[), ;, public, static, final, Days, SEVEN, =, new, Days, (, 7, ), ;, public, static, final, Days, MAX_VALUE, =]
[;, public, static, final, Days, MAX_VALUE, =, new, Days, (, Integer, ., MAX_VALUE, ), ;, public, static, final, Days, MIN_VALUE]
[), ;, public, static, final, Days, MAX_VALUE, =, new, Days, (, Integer, ., MAX_VALUE, ), ;, public, static, final, Days]
[;, public, static, final, Days, MIN_VALUE, =, new, Days, (, Integer, ., MIN_VALUE, ), ;, private, static, final, PeriodFormatter, PARSER]
[), ;, public, static, final, Days, MIN_VALUE, =, new, Days, (, Integer, ., MIN_VALUE, ), ;, private, static, final, PeriodFormatter]
[., MAX_VALUE, ), ;, public, static, final, Days, MIN_VALUE, =, new, Days, (, Integer, ., MIN_VALUE, ), ;, private, static]
[;, private, static, final, PeriodFormatter, PARSER, =, ISOPeriodFormat, ., standard, (, ), ., withParseType, (, PeriodType, ., days, (, )]
[), ;, private, static, final, PeriodFormatter, PARSER, =, ISOPeriodFormat, ., standard, (, ), ., withParseType, (, PeriodType, ., days, (]
[., MIN_VALUE, ), ;, private, static, final, PeriodFormatter, PARSER, =, ISOPeriodFormat, ., standard, (, ), ., withParseType, (, PeriodType, .]
[;, private, static, final, long, serialVersionUID, =, 87525275727380865L, ;, public, static, Days, days, (, int, days, ), {, switch, (]
[., withParseType, (, PeriodType, ., days, (, ), ), ;, private, static, final, long, serialVersionUID, =, 87525275727380865L, ;, public, static]
[., standard, (, ), ., withParseType, (, PeriodType, ., days, (, ), ), ;, private, static, final, long, serialVersionUID, =]
[), ;, private, static, final, long, serialVersionUID, =, 87525275727380865L, ;, public, static, Days, days, (, int, days, ), {, switch]
[., days, (, ), ), ;, private, static, final, long, serialVersionUID, =, 87525275727380865L, ;, public, static, Days, days, (, int]
[;, public, static, Days, days, (, int, days, ), {, switch, (, days, ), {, case, 0, :, return, ZERO]
[), {, case, 0, :, return, ZERO, ;, case, 1, :, return, ONE, ;, case, 2, :, return, TWO, ;]
[:, return, ZERO, ;, case, 1, :, return, ONE, ;, case, 2, :, return, TWO, ;, case, 3, :, return]
[;, case, 1, :, return, ONE, ;, case, 2, :, return, TWO, ;, case, 3, :, return, THREE, ;, case]
[:, return, ONE, ;, case, 2, :, return, TWO, ;, case, 3, :, return, THREE, ;, case, 4, :, return]
[;, case, 2, :, return, TWO, ;, case, 3, :, return, THREE, ;, case, 4, :, return, FOUR, ;, case]
[:, return, TWO, ;, case, 3, :, return, THREE, ;, case, 4, :, return, FOUR, ;, case, 5, :, return]
[;, case, 3, :, return, THREE, ;, case, 4, :, return, FOUR, ;, case, 5, :, return, FIVE, ;, case]
[:, return, THREE, ;, case, 4, :, return, FOUR, ;, case, 5, :, return, FIVE, ;, case, 6, :, return]
[;, case, 4, :, return, FOUR, ;, case, 5, :, return, FIVE, ;, case, 6, :, return, SIX, ;, case]
[:, return, FOUR, ;, case, 5, :, return, FIVE, ;, case, 6, :, return, SIX, ;, case, 7, :, return]
[;, case, 5, :, return, FIVE, ;, case, 6, :, return, SIX, ;, case, 7, :, return, SEVEN, ;, case]
[:, return, FIVE, ;, case, 6, :, return, SIX, ;, case, 7, :, return, SEVEN, ;, case, Integer, ., MAX_VALUE]
[;, case, 6, :, return, SIX, ;, case, 7, :, return, SEVEN, ;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE]
[:, return, SIX, ;, case, 7, :, return, SEVEN, ;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer]
[;, case, 7, :, return, SEVEN, ;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :]
[:, return, SEVEN, ;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;]
[;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return]
[:, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return, new, Days, (, days, )]
[., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return, new, Days, (]
[;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return, new, Days, (, days, ), ;, }, }]
[:, return, MIN_VALUE, ;, default, :, return, new, Days, (, days, ), ;, }, }, public, static, Days, daysBetween, (]
[., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return, new, Days, (, days, ), ;, }, }, public, static, Days]
[;, default, :, return, new, Days, (, days, ), ;, }, }, public, static, Days, daysBetween, (, ReadableInstant, start, ,]
[;, }, }, public, static, Days, daysBetween, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, int, amount, =, BaseSingleFieldPeriod, .]
[), ;, }, }, public, static, Days, daysBetween, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, int, amount, =, BaseSingleFieldPeriod]
[;, return, Days, ., days, (, amount, ), ;, }, public, static, Days, daysBetween, (, ReadablePartial, start, ,, ReadablePartial, end]
[., between, (, start, ,, end, ,, DurationFieldType, ., days, (, ), ), ;, return, Days, ., days, (, amount]
[,, end, ,, DurationFieldType, ., days, (, ), ), ;, return, Days, ., days, (, amount, ), ;, }, public]
[,, DurationFieldType, ., days, (, ), ), ;, return, Days, ., days, (, amount, ), ;, }, public, static, Days]
[), ;, return, Days, ., days, (, amount, ), ;, }, public, static, Days, daysBetween, (, ReadablePartial, start, ,, ReadablePartial]
[., days, (, ), ), ;, return, Days, ., days, (, amount, ), ;, }, public, static, Days, daysBetween, (]
[;, }, public, static, Days, daysBetween, (, ReadablePartial, start, ,, ReadablePartial, end, ), {, if, (, start, instanceof, LocalDate, &&]
[., days, (, amount, ), ;, }, public, static, Days, daysBetween, (, ReadablePartial, start, ,, ReadablePartial, end, ), {, if]
[), ;, }, public, static, Days, daysBetween, (, ReadablePartial, start, ,, ReadablePartial, end, ), {, if, (, start, instanceof, LocalDate]
[), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ;, int, days, =, chrono]
[&&, end, instanceof, LocalDate, ), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ;]
[instanceof, LocalDate, &&, end, instanceof, LocalDate, ), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, )]
[), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ;, int, days, =, chrono]
[instanceof, LocalDate, ), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ;, int, days]
[;, int, days, =, chrono, ., days, (, ), ., getDifference, (, (, (, LocalDate, ), end, ), ., getLocalMillis]
[., getChronology, (, start, ., getChronology, (, ), ), ;, int, days, =, chrono, ., days, (, ), ., getDifference]
[), ;, int, days, =, chrono, ., days, (, ), ., getDifference, (, (, (, LocalDate, ), end, ), .]
[., getChronology, (, ), ), ;, int, days, =, chrono, ., days, (, ), ., getDifference, (, (, (, LocalDate]
[;, return, Days, ., days, (, days, ), ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,, end]
[., getDifference, (, (, (, LocalDate, ), end, ), ., getLocalMillis, (, ), ,, (, (, LocalDate, ), start, )]
[., days, (, ), ., getDifference, (, (, (, LocalDate, ), end, ), ., getLocalMillis, (, ), ,, (, (]
[,, (, (, LocalDate, ), start, ), ., getLocalMillis, (, ), ), ;, return, Days, ., days, (, days, )]
[., getLocalMillis, (, ), ,, (, (, LocalDate, ), start, ), ., getLocalMillis, (, ), ), ;, return, Days, .]
[), ., getLocalMillis, (, ), ,, (, (, LocalDate, ), start, ), ., getLocalMillis, (, ), ), ;, return, Days]
[), ., getLocalMillis, (, ), ,, (, (, LocalDate, ), start, ), ., getLocalMillis, (, ), ), ;, return, Days]
[), ;, return, Days, ., days, (, days, ), ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,]
[., getLocalMillis, (, ), ), ;, return, Days, ., days, (, days, ), ;, }, int, amount, =, BaseSingleFieldPeriod, .]
[), ., getLocalMillis, (, ), ), ;, return, Days, ., days, (, days, ), ;, }, int, amount, =, BaseSingleFieldPeriod]
[), ., getLocalMillis, (, ), ), ;, return, Days, ., days, (, days, ), ;, }, int, amount, =, BaseSingleFieldPeriod]
[;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,, end, ,, ZERO, ), ;, return, Days, ., days]
[., days, (, days, ), ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,, end, ,, ZERO, )]
[), ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,, end, ,, ZERO, ), ;, return, Days, .]
[;, return, Days, ., days, (, amount, ), ;, }, public, static, Days, daysIn, (, ReadableInterval, interval, ), {, if]
[., between, (, start, ,, end, ,, ZERO, ), ;, return, Days, ., days, (, amount, ), ;, }, public]
[,, end, ,, ZERO, ), ;, return, Days, ., days, (, amount, ), ;, }, public, static, Days, daysIn, (]
[,, ZERO, ), ;, return, Days, ., days, (, amount, ), ;, }, public, static, Days, daysIn, (, ReadableInterval, interval]
[), ;, return, Days, ., days, (, amount, ), ;, }, public, static, Days, daysIn, (, ReadableInterval, interval, ), {]
[;, }, public, static, Days, daysIn, (, ReadableInterval, interval, ), {, if, (, interval, ==, null, ), {, return, Days]
[., days, (, amount, ), ;, }, public, static, Days, daysIn, (, ReadableInterval, interval, ), {, if, (, interval, ==]
[), ;, }, public, static, Days, daysIn, (, ReadableInterval, interval, ), {, if, (, interval, ==, null, ), {, return]
[), {, return, Days, ., ZERO, ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart, (, )]
[==, null, ), {, return, Days, ., ZERO, ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart]
[), {, return, Days, ., ZERO, ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart, (, )]
[;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart, (, ), ,, interval, ., getEnd, (, )]
[., ZERO, ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart, (, ), ,, interval, ., getEnd]
[;, return, Days, ., days, (, amount, ), ;, }, public, static, Days, standardDaysIn, (, ReadablePeriod, period, ), {, int]
[., between, (, interval, ., getStart, (, ), ,, interval, ., getEnd, (, ), ,, DurationFieldType, ., days, (, )]
[,, interval, ., getEnd, (, ), ,, DurationFieldType, ., days, (, ), ), ;, return, Days, ., days, (, amount]
[., getStart, (, ), ,, interval, ., getEnd, (, ), ,, DurationFieldType, ., days, (, ), ), ;, return, Days]
[,, DurationFieldType, ., days, (, ), ), ;, return, Days, ., days, (, amount, ), ;, }, public, static, Days]
[., getEnd, (, ), ,, DurationFieldType, ., days, (, ), ), ;, return, Days, ., days, (, amount, ), ;]
[), ;, return, Days, ., days, (, amount, ), ;, }, public, static, Days, standardDaysIn, (, ReadablePeriod, period, ), {]
[., days, (, ), ), ;, return, Days, ., days, (, amount, ), ;, }, public, static, Days, standardDaysIn, (]
[;, }, public, static, Days, standardDaysIn, (, ReadablePeriod, period, ), {, int, amount, =, BaseSingleFieldPeriod, ., standardPeriodIn, (, period, ,]
[., days, (, amount, ), ;, }, public, static, Days, standardDaysIn, (, ReadablePeriod, period, ), {, int, amount, =, BaseSingleFieldPeriod]
[), ;, }, public, static, Days, standardDaysIn, (, ReadablePeriod, period, ), {, int, amount, =, BaseSingleFieldPeriod, ., standardPeriodIn, (, period]
[;, return, Days, ., days, (, amount, ), ;, }, @, FromString, public, static, Days, parseDays, (, String, periodStr, )]
[., standardPeriodIn, (, period, ,, DateTimeConstants, ., MILLIS_PER_DAY, ), ;, return, Days, ., days, (, amount, ), ;, }, @]
[,, DateTimeConstants, ., MILLIS_PER_DAY, ), ;, return, Days, ., days, (, amount, ), ;, }, @, FromString, public, static, Days]
[), ;, return, Days, ., days, (, amount, ), ;, }, @, FromString, public, static, Days, parseDays, (, String, periodStr]
[., MILLIS_PER_DAY, ), ;, return, Days, ., days, (, amount, ), ;, }, @, FromString, public, static, Days, parseDays, (]
[;, }, @, FromString, public, static, Days, parseDays, (, String, periodStr, ), {, if, (, periodStr, ==, null, ), {]
[., days, (, amount, ), ;, }, @, FromString, public, static, Days, parseDays, (, String, periodStr, ), {, if, (]
[), ;, }, @, FromString, public, static, Days, parseDays, (, String, periodStr, ), {, if, (, periodStr, ==, null, )]
[), {, return, Days, ., ZERO, ;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;, return, Days]
[==, null, ), {, return, Days, ., ZERO, ;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;]
[), {, return, Days, ., ZERO, ;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;, return, Days]
[;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;, return, Days, ., days, (, p, ., getDays]
[., ZERO, ;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;, return, Days, ., days, (, p]
[;, return, Days, ., days, (, p, ., getDays, (, ), ), ;, }, private, Days, (, int, days, )]
[., parsePeriod, (, periodStr, ), ;, return, Days, ., days, (, p, ., getDays, (, ), ), ;, }, private]
[), ;, return, Days, ., days, (, p, ., getDays, (, ), ), ;, }, private, Days, (, int, days]
[;, }, private, Days, (, int, days, ), {, super, (, days, ), ;, }, private, Object, readResolve, (, )]
[., days, (, p, ., getDays, (, ), ), ;, }, private, Days, (, int, days, ), {, super, (]
[), ;, }, private, Days, (, int, days, ), {, super, (, days, ), ;, }, private, Object, readResolve, (]
[., getDays, (, ), ), ;, }, private, Days, (, int, days, ), {, super, (, days, ), ;, }]
[), ;, }, private, Object, readResolve, (, ), {, return, Days, ., days, (, getValue, (, ), ), ;, }]
[;, }, public, DurationFieldType, getFieldType, (, ), {, return, DurationFieldType, ., days, (, ), ;, }, public, PeriodType, getPeriodType, (]
[., days, (, getValue, (, ), ), ;, }, public, DurationFieldType, getFieldType, (, ), {, return, DurationFieldType, ., days, (]
[), ;, }, public, DurationFieldType, getFieldType, (, ), {, return, DurationFieldType, ., days, (, ), ;, }, public, PeriodType, getPeriodType]
[;, }, public, PeriodType, getPeriodType, (, ), {, return, PeriodType, ., days, (, ), ;, }, public, Weeks, toStandardWeeks, (]
[., days, (, ), ;, }, public, PeriodType, getPeriodType, (, ), {, return, PeriodType, ., days, (, ), ;, }]
[;, }, public, Weeks, toStandardWeeks, (, ), {, return, Weeks, ., weeks, (, getValue, (, ), /, DateTimeConstants, ., DAYS_PER_WEEK]
[., days, (, ), ;, }, public, Weeks, toStandardWeeks, (, ), {, return, Weeks, ., weeks, (, getValue, (, )]
[;, }, public, Hours, toStandardHours, (, ), {, return, Hours, ., hours, (, FieldUtils, ., safeMultiply, (, getValue, (, )]
[., weeks, (, getValue, (, ), /, DateTimeConstants, ., DAYS_PER_WEEK, ), ;, }, public, Hours, toStandardHours, (, ), {, return]
[), ;, }, public, Hours, toStandardHours, (, ), {, return, Hours, ., hours, (, FieldUtils, ., safeMultiply, (, getValue, (]
[/, DateTimeConstants, ., DAYS_PER_WEEK, ), ;, }, public, Hours, toStandardHours, (, ), {, return, Hours, ., hours, (, FieldUtils, .]
[), ;, }, public, Hours, toStandardHours, (, ), {, return, Hours, ., hours, (, FieldUtils, ., safeMultiply, (, getValue, (]
[., DAYS_PER_WEEK, ), ;, }, public, Hours, toStandardHours, (, ), {, return, Hours, ., hours, (, FieldUtils, ., safeMultiply, (]
[;, }, public, Minutes, toStandardMinutes, (, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeMultiply, (, getValue, (, )]
[., hours, (, FieldUtils, ., safeMultiply, (, getValue, (, ), ,, DateTimeConstants, ., HOURS_PER_DAY, ), ), ;, }, public, Minutes]
[), ;, }, public, Minutes, toStandardMinutes, (, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeMultiply, (, getValue, (]
[., safeMultiply, (, getValue, (, ), ,, DateTimeConstants, ., HOURS_PER_DAY, ), ), ;, }, public, Minutes, toStandardMinutes, (, ), {]
[,, DateTimeConstants, ., HOURS_PER_DAY, ), ), ;, }, public, Minutes, toStandardMinutes, (, ), {, return, Minutes, ., minutes, (, FieldUtils]
[), ), ;, }, public, Minutes, toStandardMinutes, (, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeMultiply, (, getValue]
[., HOURS_PER_DAY, ), ), ;, }, public, Minutes, toStandardMinutes, (, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeMultiply]
[;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils, ., safeMultiply, (, getValue, (, )]
[., minutes, (, FieldUtils, ., safeMultiply, (, getValue, (, ), ,, DateTimeConstants, ., MINUTES_PER_DAY, ), ), ;, }, public, Seconds]
[), ;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils, ., safeMultiply, (, getValue, (]
[., safeMultiply, (, getValue, (, ), ,, DateTimeConstants, ., MINUTES_PER_DAY, ), ), ;, }, public, Seconds, toStandardSeconds, (, ), {]
[,, DateTimeConstants, ., MINUTES_PER_DAY, ), ), ;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils]
[), ), ;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils, ., safeMultiply, (, getValue]
[., MINUTES_PER_DAY, ), ), ;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils, ., safeMultiply]
[;, }, public, Duration, toStandardDuration, (, ), {, long, days, =, getValue, (, ), ;, return, new, Duration, (, days]
[., seconds, (, FieldUtils, ., safeMultiply, (, getValue, (, ), ,, DateTimeConstants, ., SECONDS_PER_DAY, ), ), ;, }, public, Duration]
[), ;, }, public, Duration, toStandardDuration, (, ), {, long, days, =, getValue, (, ), ;, return, new, Duration, (]
[., safeMultiply, (, getValue, (, ), ,, DateTimeConstants, ., SECONDS_PER_DAY, ), ), ;, }, public, Duration, toStandardDuration, (, ), {]
[,, DateTimeConstants, ., SECONDS_PER_DAY, ), ), ;, }, public, Duration, toStandardDuration, (, ), {, long, days, =, getValue, (, )]
[), ), ;, }, public, Duration, toStandardDuration, (, ), {, long, days, =, getValue, (, ), ;, return, new, Duration]
[., SECONDS_PER_DAY, ), ), ;, }, public, Duration, toStandardDuration, (, ), {, long, days, =, getValue, (, ), ;, return]
[;, return, new, Duration, (, days, *, DateTimeConstants, ., MILLIS_PER_DAY, ), ;, }, public, int, getDays, (, ), {, return]
[;, }, public, int, getDays, (, ), {, return, getValue, (, ), ;, }, public, Days, plus, (, int, days]
[), ;, }, public, int, getDays, (, ), {, return, getValue, (, ), ;, }, public, Days, plus, (, int]
[*, DateTimeConstants, ., MILLIS_PER_DAY, ), ;, }, public, int, getDays, (, ), {, return, getValue, (, ), ;, }, public]
[), ;, }, public, int, getDays, (, ), {, return, getValue, (, ), ;, }, public, Days, plus, (, int]
[., MILLIS_PER_DAY, ), ;, }, public, int, getDays, (, ), {, return, getValue, (, ), ;, }, public, Days, plus]
[;, }, public, Days, plus, (, int, days, ), {, if, (, days, ==, 0, ), {, return, this, ;]
[), {, return, this, ;, }, return, Days, ., days, (, FieldUtils, ., safeAdd, (, getValue, (, ), ,, days]
[==, 0, ), {, return, this, ;, }, return, Days, ., days, (, FieldUtils, ., safeAdd, (, getValue, (, )]
[), {, return, this, ;, }, return, Days, ., days, (, FieldUtils, ., safeAdd, (, getValue, (, ), ,, days]
[;, }, return, Days, ., days, (, FieldUtils, ., safeAdd, (, getValue, (, ), ,, days, ), ), ;, }]
[;, }, public, Days, plus, (, Days, days, ), {, if, (, days, ==, null, ), {, return, this, ;]
[., days, (, FieldUtils, ., safeAdd, (, getValue, (, ), ,, days, ), ), ;, }, public, Days, plus, (]
[), ;, }, public, Days, plus, (, Days, days, ), {, if, (, days, ==, null, ), {, return, this]
[., safeAdd, (, getValue, (, ), ,, days, ), ), ;, }, public, Days, plus, (, Days, days, ), {]
[,, days, ), ), ;, }, public, Days, plus, (, Days, days, ), {, if, (, days, ==, null, )]
[), ), ;, }, public, Days, plus, (, Days, days, ), {, if, (, days, ==, null, ), {, return]
[), {, return, this, ;, }, return, plus, (, days, ., getValue, (, ), ), ;, }, public, Days, minus]
[==, null, ), {, return, this, ;, }, return, plus, (, days, ., getValue, (, ), ), ;, }, public]
[), {, return, this, ;, }, return, plus, (, days, ., getValue, (, ), ), ;, }, public, Days, minus]
[;, }, return, plus, (, days, ., getValue, (, ), ), ;, }, public, Days, minus, (, int, days, )]
[;, }, public, Days, minus, (, int, days, ), {, return, plus, (, FieldUtils, ., safeNegate, (, days, ), )]
[), ;, }, public, Days, minus, (, int, days, ), {, return, plus, (, FieldUtils, ., safeNegate, (, days, )]
[., getValue, (, ), ), ;, }, public, Days, minus, (, int, days, ), {, return, plus, (, FieldUtils, .]
[;, }, public, Days, minus, (, Days, days, ), {, if, (, days, ==, null, ), {, return, this, ;]
[), ;, }, public, Days, minus, (, Days, days, ), {, if, (, days, ==, null, ), {, return, this]
[., safeNegate, (, days, ), ), ;, }, public, Days, minus, (, Days, days, ), {, if, (, days, ==]
[), ), ;, }, public, Days, minus, (, Days, days, ), {, if, (, days, ==, null, ), {, return]
[), {, return, this, ;, }, return, minus, (, days, ., getValue, (, ), ), ;, }, public, Days, multipliedBy]
[==, null, ), {, return, this, ;, }, return, minus, (, days, ., getValue, (, ), ), ;, }, public]
[), {, return, this, ;, }, return, minus, (, days, ., getValue, (, ), ), ;, }, public, Days, multipliedBy]
[;, }, return, minus, (, days, ., getValue, (, ), ), ;, }, public, Days, multipliedBy, (, int, scalar, )]
[;, }, public, Days, multipliedBy, (, int, scalar, ), {, return, Days, ., days, (, FieldUtils, ., safeMultiply, (, getValue]
[), ;, }, public, Days, multipliedBy, (, int, scalar, ), {, return, Days, ., days, (, FieldUtils, ., safeMultiply, (]
[., getValue, (, ), ), ;, }, public, Days, multipliedBy, (, int, scalar, ), {, return, Days, ., days, (]
[;, }, public, Days, dividedBy, (, int, divisor, ), {, if, (, divisor, ==, 1, ), {, return, this, ;]
[., days, (, FieldUtils, ., safeMultiply, (, getValue, (, ), ,, scalar, ), ), ;, }, public, Days, dividedBy, (]
[), ;, }, public, Days, dividedBy, (, int, divisor, ), {, if, (, divisor, ==, 1, ), {, return, this]
[., safeMultiply, (, getValue, (, ), ,, scalar, ), ), ;, }, public, Days, dividedBy, (, int, divisor, ), {]
[,, scalar, ), ), ;, }, public, Days, dividedBy, (, int, divisor, ), {, if, (, divisor, ==, 1, )]
[), ), ;, }, public, Days, dividedBy, (, int, divisor, ), {, if, (, divisor, ==, 1, ), {, return]
[), {, return, this, ;, }, return, Days, ., days, (, getValue, (, ), /, divisor, ), ;, }, public]
[==, 1, ), {, return, this, ;, }, return, Days, ., days, (, getValue, (, ), /, divisor, ), ;]
[), {, return, this, ;, }, return, Days, ., days, (, getValue, (, ), /, divisor, ), ;, }, public]
[;, }, return, Days, ., days, (, getValue, (, ), /, divisor, ), ;, }, public, Days, negated, (, )]
[;, }, public, Days, negated, (, ), {, return, Days, ., days, (, FieldUtils, ., safeNegate, (, getValue, (, )]
[., days, (, getValue, (, ), /, divisor, ), ;, }, public, Days, negated, (, ), {, return, Days, .]
[), ;, }, public, Days, negated, (, ), {, return, Days, ., days, (, FieldUtils, ., safeNegate, (, getValue, (]
[/, divisor, ), ;, }, public, Days, negated, (, ), {, return, Days, ., days, (, FieldUtils, ., safeNegate, (]
[), ;, }, public, Days, negated, (, ), {, return, Days, ., days, (, FieldUtils, ., safeNegate, (, getValue, (]
[;, }, public, boolean, isGreaterThan, (, Days, other, ), {, if, (, other, ==, null, ), {, return, getValue, (]
[., days, (, FieldUtils, ., safeNegate, (, getValue, (, ), ), ), ;, }, public, boolean, isGreaterThan, (, Days, other]
[), ;, }, public, boolean, isGreaterThan, (, Days, other, ), {, if, (, other, ==, null, ), {, return, getValue]
[., safeNegate, (, getValue, (, ), ), ), ;, }, public, boolean, isGreaterThan, (, Days, other, ), {, if, (]
[), ), ;, }, public, boolean, isGreaterThan, (, Days, other, ), {, if, (, other, ==, null, ), {, return]
[), {, return, getValue, (, ), >, 0, ;, }, return, getValue, (, ), >, other, ., getValue, (, )]
[==, null, ), {, return, getValue, (, ), >, 0, ;, }, return, getValue, (, ), >, other, ., getValue]
[), {, return, getValue, (, ), >, 0, ;, }, return, getValue, (, ), >, other, ., getValue, (, )]
[;, }, return, getValue, (, ), >, other, ., getValue, (, ), ;, }, public, boolean, isLessThan, (, Days, other]
[>, 0, ;, }, return, getValue, (, ), >, other, ., getValue, (, ), ;, }, public, boolean, isLessThan, (]
[;, }, return, getValue, (, ), >, other, ., getValue, (, ), ;, }, public, boolean, isLessThan, (, Days, other]
[;, }, public, boolean, isLessThan, (, Days, other, ), {, if, (, other, ==, null, ), {, return, getValue, (]
[>, other, ., getValue, (, ), ;, }, public, boolean, isLessThan, (, Days, other, ), {, if, (, other, ==]
[;, }, public, boolean, isLessThan, (, Days, other, ), {, if, (, other, ==, null, ), {, return, getValue, (]
[., getValue, (, ), ;, }, public, boolean, isLessThan, (, Days, other, ), {, if, (, other, ==, null, )]
[), {, return, getValue, (, ), <, 0, ;, }, return, getValue, (, ), <, other, ., getValue, (, )]
[==, null, ), {, return, getValue, (, ), <, 0, ;, }, return, getValue, (, ), <, other, ., getValue]
[), {, return, getValue, (, ), <, 0, ;, }, return, getValue, (, ), <, other, ., getValue, (, )]
[;, }, return, getValue, (, ), <, other, ., getValue, (, ), ;, }, @, ToString, public, String, toString, (]
[<, 0, ;, }, return, getValue, (, ), <, other, ., getValue, (, ), ;, }, @, ToString, public, String]
[;, }, return, getValue, (, ), <, other, ., getValue, (, ), ;, }, @, ToString, public, String, toString, (]
[;, }, @, ToString, public, String, toString, (, ), {, return, "P", +, String, ., valueOf, (, getValue, (, )]
[<, other, ., getValue, (, ), ;, }, @, ToString, public, String, toString, (, ), {, return, "P", +, String]
[;, }, @, ToString, public, String, toString, (, ), {, return, "P", +, String, ., valueOf, (, getValue, (, )]
[., getValue, (, ), ;, }, @, ToString, public, String, toString, (, ), {, return, "P", +, String, ., valueOf]
[;, }, }]
[+, "D", ;, }, }]
[+, String, ., valueOf, (, getValue, (, ), ), +, "D", ;, }, }]
[+, "D", ;, }, }]
[., valueOf, (, getValue, (, ), ), +, "D", ;, }, }]
[), +, "D", ;, }, }]
[;, }, }]
