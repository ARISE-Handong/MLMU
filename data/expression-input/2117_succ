[;, private, final, AbstractCompiler, compiler, ;, private, final, String, exportSymbolFunction, ;, private, final, String, exportPropertyFunction, ;, GenerateExports, (, AbstractCompiler, compiler]
[;, Preconditions, ., checkNotNull, (, exportSymbolFunction, ), ;, Preconditions, ., checkNotNull, (, exportPropertyFunction, ), ;, this, ., compiler, =, compiler]
[., checkNotNull, (, compiler, ), ;, Preconditions, ., checkNotNull, (, exportSymbolFunction, ), ;, Preconditions, ., checkNotNull, (, exportPropertyFunction, ), ;]
[), ;, Preconditions, ., checkNotNull, (, exportSymbolFunction, ), ;, Preconditions, ., checkNotNull, (, exportPropertyFunction, ), ;, this, ., compiler, =]
[;, Preconditions, ., checkNotNull, (, exportPropertyFunction, ), ;, this, ., compiler, =, compiler, ;, this, ., exportSymbolFunction, =, exportSymbolFunction, ;]
[., checkNotNull, (, exportSymbolFunction, ), ;, Preconditions, ., checkNotNull, (, exportPropertyFunction, ), ;, this, ., compiler, =, compiler, ;, this]
[), ;, Preconditions, ., checkNotNull, (, exportPropertyFunction, ), ;, this, ., compiler, =, compiler, ;, this, ., exportSymbolFunction, =, exportSymbolFunction]
[;, this, ., compiler, =, compiler, ;, this, ., exportSymbolFunction, =, exportSymbolFunction, ;, this, ., exportPropertyFunction, =, exportPropertyFunction, ;, }]
[., checkNotNull, (, exportPropertyFunction, ), ;, this, ., compiler, =, compiler, ;, this, ., exportSymbolFunction, =, exportSymbolFunction, ;, this, .]
[), ;, this, ., compiler, =, compiler, ;, this, ., exportSymbolFunction, =, exportSymbolFunction, ;, this, ., exportPropertyFunction, =, exportPropertyFunction, ;]
[=, compiler, ;, this, ., exportSymbolFunction, =, exportSymbolFunction, ;, this, ., exportPropertyFunction, =, exportPropertyFunction, ;, }, @, Override, public, void]
[., compiler, =, compiler, ;, this, ., exportSymbolFunction, =, exportSymbolFunction, ;, this, ., exportPropertyFunction, =, exportPropertyFunction, ;, }, @, Override]
[;, this, ., exportSymbolFunction, =, exportSymbolFunction, ;, this, ., exportPropertyFunction, =, exportPropertyFunction, ;, }, @, Override, public, void, process, (]
[=, exportSymbolFunction, ;, this, ., exportPropertyFunction, =, exportPropertyFunction, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node]
[., exportSymbolFunction, =, exportSymbolFunction, ;, this, ., exportPropertyFunction, =, exportPropertyFunction, ;, }, @, Override, public, void, process, (, Node, externs]
[;, this, ., exportPropertyFunction, =, exportPropertyFunction, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, )]
[=, exportPropertyFunction, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, FindExportableNodes, findExportableNodes, =]
[., exportPropertyFunction, =, exportPropertyFunction, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, FindExportableNodes]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, FindExportableNodes, findExportableNodes, =, new, FindExportableNodes]
[;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, findExportableNodes, ), ;, Map, <, String, ,, GenerateNodeContext, >, exports, =]
[), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, findExportableNodes, ), ;, Map, <, String, ,, GenerateNodeContext, >, exports]
[;, Map, <, String, ,, GenerateNodeContext, >, exports, =, findExportableNodes, ., getExports, (, ), ;, CodingConvention, convention, =, compiler, .]
[., traverse, (, compiler, ,, root, ,, findExportableNodes, ), ;, Map, <, String, ,, GenerateNodeContext, >, exports, =, findExportableNodes, .]
[,, root, ,, findExportableNodes, ), ;, Map, <, String, ,, GenerateNodeContext, >, exports, =, findExportableNodes, ., getExports, (, ), ;]
[,, findExportableNodes, ), ;, Map, <, String, ,, GenerateNodeContext, >, exports, =, findExportableNodes, ., getExports, (, ), ;, CodingConvention, convention]
[), ;, Map, <, String, ,, GenerateNodeContext, >, exports, =, findExportableNodes, ., getExports, (, ), ;, CodingConvention, convention, =, compiler]
[;, CodingConvention, convention, =, compiler, ., getCodingConvention, (, ), ;, for, (, Map, ., Entry, <, String, ,, GenerateNodeContext, >]
[., getExports, (, ), ;, CodingConvention, convention, =, compiler, ., getCodingConvention, (, ), ;, for, (, Map, ., Entry, <]
[;, for, (, Map, ., Entry, <, String, ,, GenerateNodeContext, >, entry, :, exports, ., entrySet, (, ), ), {]
[., getCodingConvention, (, ), ;, for, (, Map, ., Entry, <, String, ,, GenerateNodeContext, >, entry, :, exports, ., entrySet]
[), {, String, export, =, entry, ., getKey, (, ), ;, GenerateNodeContext, context, =, entry, ., getValue, (, ), ;]
[., entrySet, (, ), ), {, String, export, =, entry, ., getKey, (, ), ;, GenerateNodeContext, context, =, entry, .]
[;, GenerateNodeContext, context, =, entry, ., getValue, (, ), ;, String, parent, =, null, ;, String, grandparent, =, null, ;]
[., getKey, (, ), ;, GenerateNodeContext, context, =, entry, ., getValue, (, ), ;, String, parent, =, null, ;, String]
[;, String, parent, =, null, ;, String, grandparent, =, null, ;, Node, node, =, context, ., getNode, (, ), .]
[., getValue, (, ), ;, String, parent, =, null, ;, String, grandparent, =, null, ;, Node, node, =, context, .]
[;, String, grandparent, =, null, ;, Node, node, =, context, ., getNode, (, ), ., getFirstChild, (, ), ;, if]
[;, Node, node, =, context, ., getNode, (, ), ., getFirstChild, (, ), ;, if, (, node, ., isGetProp, (]
[;, if, (, node, ., isGetProp, (, ), ), {, parent, =, node, ., getFirstChild, (, ), ., getQualifiedName, (]
[., getFirstChild, (, ), ;, if, (, node, ., isGetProp, (, ), ), {, parent, =, node, ., getFirstChild, (]
[., getNode, (, ), ., getFirstChild, (, ), ;, if, (, node, ., isGetProp, (, ), ), {, parent, =]
[), {, parent, =, node, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, if, (, node, ., getFirstChild, (]
[., isGetProp, (, ), ), {, parent, =, node, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, if, (]
[=, node, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, if, (, node, ., getFirstChild, (, ), ., isGetProp]
[;, if, (, node, ., getFirstChild, (, ), ., isGetProp, (, ), &&, getPropertyName, (, node, ., getFirstChild, (, )]
[., getQualifiedName, (, ), ;, if, (, node, ., getFirstChild, (, ), ., isGetProp, (, ), &&, getPropertyName, (, node]
[., getFirstChild, (, ), ., getQualifiedName, (, ), ;, if, (, node, ., getFirstChild, (, ), ., isGetProp, (, )]
[), {, grandparent, =, node, ., getFirstChild, (, ), ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, }, }]
[&&, getPropertyName, (, node, ., getFirstChild, (, ), ), ., equals, (, PROTOTYPE_PROPERTY, ), ), {, grandparent, =, node, .]
[., isGetProp, (, ), &&, getPropertyName, (, node, ., getFirstChild, (, ), ), ., equals, (, PROTOTYPE_PROPERTY, ), ), {]
[., getFirstChild, (, ), ., isGetProp, (, ), &&, getPropertyName, (, node, ., getFirstChild, (, ), ), ., equals, (]
[), {, grandparent, =, node, ., getFirstChild, (, ), ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, }, }]
[., equals, (, PROTOTYPE_PROPERTY, ), ), {, grandparent, =, node, ., getFirstChild, (, ), ., getFirstChild, (, ), ., getQualifiedName]
[), ., equals, (, PROTOTYPE_PROPERTY, ), ), {, grandparent, =, node, ., getFirstChild, (, ), ., getFirstChild, (, ), .]
[., getFirstChild, (, ), ), ., equals, (, PROTOTYPE_PROPERTY, ), ), {, grandparent, =, node, ., getFirstChild, (, ), .]
[), ), {, grandparent, =, node, ., getFirstChild, (, ), ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, }]
[=, node, ., getFirstChild, (, ), ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, }, }, boolean, useExportSymbol, =]
[;, }, }, boolean, useExportSymbol, =, true, ;, if, (, grandparent, !=, null, &&, exports, ., containsKey, (, grandparent, )]
[., getQualifiedName, (, ), ;, }, }, boolean, useExportSymbol, =, true, ;, if, (, grandparent, !=, null, &&, exports, .]
[., getFirstChild, (, ), ., getQualifiedName, (, ), ;, }, }, boolean, useExportSymbol, =, true, ;, if, (, grandparent, !=]
[., getFirstChild, (, ), ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, }, }, boolean, useExportSymbol, =, true, ;]
[;, if, (, grandparent, !=, null, &&, exports, ., containsKey, (, grandparent, ), ), {, useExportSymbol, =, false, ;, }]
[), {, useExportSymbol, =, false, ;, }, else, if, (, parent, !=, null, &&, exports, ., containsKey, (, parent, )]
[&&, exports, ., containsKey, (, grandparent, ), ), {, useExportSymbol, =, false, ;, }, else, if, (, parent, !=, null]
[!=, null, &&, exports, ., containsKey, (, grandparent, ), ), {, useExportSymbol, =, false, ;, }, else, if, (, parent]
[&&, exports, ., containsKey, (, grandparent, ), ), {, useExportSymbol, =, false, ;, }, else, if, (, parent, !=, null]
[), {, useExportSymbol, =, false, ;, }, else, if, (, parent, !=, null, &&, exports, ., containsKey, (, parent, )]
[., containsKey, (, grandparent, ), ), {, useExportSymbol, =, false, ;, }, else, if, (, parent, !=, null, &&, exports]
[), ), {, useExportSymbol, =, false, ;, }, else, if, (, parent, !=, null, &&, exports, ., containsKey, (, parent]
[=, false, ;, }, else, if, (, parent, !=, null, &&, exports, ., containsKey, (, parent, ), ), {, useExportSymbol]
[;, }, else, if, (, parent, !=, null, &&, exports, ., containsKey, (, parent, ), ), {, useExportSymbol, =, false]
[), {, useExportSymbol, =, false, ;, }, Node, call, ;, if, (, useExportSymbol, ), {, call, =, IR, ., call]
[&&, exports, ., containsKey, (, parent, ), ), {, useExportSymbol, =, false, ;, }, Node, call, ;, if, (, useExportSymbol]
[!=, null, &&, exports, ., containsKey, (, parent, ), ), {, useExportSymbol, =, false, ;, }, Node, call, ;, if]
[&&, exports, ., containsKey, (, parent, ), ), {, useExportSymbol, =, false, ;, }, Node, call, ;, if, (, useExportSymbol]
[), {, useExportSymbol, =, false, ;, }, Node, call, ;, if, (, useExportSymbol, ), {, call, =, IR, ., call]
[., containsKey, (, parent, ), ), {, useExportSymbol, =, false, ;, }, Node, call, ;, if, (, useExportSymbol, ), {]
[), ), {, useExportSymbol, =, false, ;, }, Node, call, ;, if, (, useExportSymbol, ), {, call, =, IR, .]
[=, false, ;, }, Node, call, ;, if, (, useExportSymbol, ), {, call, =, IR, ., call, (, NodeUtil, .]
[;, }, Node, call, ;, if, (, useExportSymbol, ), {, call, =, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (]
[), {, call, =, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (, convention, ,, exportSymbolFunction, ,, context, ., getNode, (]
[=, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (, convention, ,, exportSymbolFunction, ,, context, ., getNode, (, ), ,, export]
[;, }, else, {, String, property, =, getPropertyName, (, node, ), ;, call, =, IR, ., call, (, NodeUtil, .]
[., call, (, NodeUtil, ., newQualifiedNameNode, (, convention, ,, exportSymbolFunction, ,, context, ., getNode, (, ), ,, export, ), ,]
[,, IR, ., string, (, export, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (]
[., newQualifiedNameNode, (, convention, ,, exportSymbolFunction, ,, context, ., getNode, (, ), ,, export, ), ,, IR, ., string, (]
[,, exportSymbolFunction, ,, context, ., getNode, (, ), ,, export, ), ,, IR, ., string, (, export, ), ,, NodeUtil]
[,, context, ., getNode, (, ), ,, export, ), ,, IR, ., string, (, export, ), ,, NodeUtil, ., newQualifiedNameNode]
[,, export, ), ,, IR, ., string, (, export, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context]
[., getNode, (, ), ,, export, ), ,, IR, ., string, (, export, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention]
[), ,, IR, ., string, (, export, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode]
[,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (, ), ,, export, ), ), ;, }]
[., string, (, export, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (, ), ,]
[), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (, ), ,, export, ), ), ;]
[), ;, }, else, {, String, property, =, getPropertyName, (, node, ), ;, call, =, IR, ., call, (, NodeUtil]
[., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (, ), ,, export, ), ), ;, }, else, {]
[,, export, ,, context, ., getNode, (, ), ,, export, ), ), ;, }, else, {, String, property, =, getPropertyName]
[,, context, ., getNode, (, ), ,, export, ), ), ;, }, else, {, String, property, =, getPropertyName, (, node]
[,, export, ), ), ;, }, else, {, String, property, =, getPropertyName, (, node, ), ;, call, =, IR, .]
[., getNode, (, ), ,, export, ), ), ;, }, else, {, String, property, =, getPropertyName, (, node, ), ;]
[), ), ;, }, else, {, String, property, =, getPropertyName, (, node, ), ;, call, =, IR, ., call, (]
[;, call, =, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (, convention, ,, exportPropertyFunction, ,, context, ., getNode, (, )]
[), ;, call, =, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (, convention, ,, exportPropertyFunction, ,, context, ., getNode, (]
[=, IR, ., call, (, NodeUtil, ., newQualifiedNameNode, (, convention, ,, exportPropertyFunction, ,, context, ., getNode, (, ), ,, exportPropertyFunction]
[;, }, Node, expression, =, IR, ., exprResult, (, call, ), ;, annotate, (, expression, ), ;, Node, insertionPoint, =]
[., call, (, NodeUtil, ., newQualifiedNameNode, (, convention, ,, exportPropertyFunction, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ,]
[,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, parent, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ,, IR, .]
[., newQualifiedNameNode, (, convention, ,, exportPropertyFunction, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ,, NodeUtil, ., newQualifiedNameNode, (]
[,, exportPropertyFunction, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, parent, ,]
[,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, parent, ,, context, .]
[,, exportPropertyFunction, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, parent, ,, context, ., getNode, (, ), ,, exportPropertyFunction, )]
[., getNode, (, ), ,, exportPropertyFunction, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, parent, ,, context, ., getNode, (]
[), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, parent, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ,, IR]
[,, IR, ., string, (, property, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (]
[., newQualifiedNameNode, (, convention, ,, parent, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ,, IR, ., string, (]
[,, parent, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ,, IR, ., string, (, property, ), ,, NodeUtil]
[,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ,, IR, ., string, (, property, ), ,, NodeUtil, ., newQualifiedNameNode]
[,, exportPropertyFunction, ), ,, IR, ., string, (, property, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context]
[., getNode, (, ), ,, exportPropertyFunction, ), ,, IR, ., string, (, property, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention]
[), ,, IR, ., string, (, property, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode]
[,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ), ;, }]
[., string, (, property, ), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (, ), ,]
[), ,, NodeUtil, ., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ), ;]
[), ;, }, Node, expression, =, IR, ., exprResult, (, call, ), ;, annotate, (, expression, ), ;, Node, insertionPoint]
[., newQualifiedNameNode, (, convention, ,, export, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ), ;, }, Node, expression]
[,, export, ,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ), ;, }, Node, expression, =, IR, ., exprResult]
[,, context, ., getNode, (, ), ,, exportPropertyFunction, ), ), ;, }, Node, expression, =, IR, ., exprResult, (, call]
[,, exportPropertyFunction, ), ), ;, }, Node, expression, =, IR, ., exprResult, (, call, ), ;, annotate, (, expression, )]
[., getNode, (, ), ,, exportPropertyFunction, ), ), ;, }, Node, expression, =, IR, ., exprResult, (, call, ), ;]
[), ), ;, }, Node, expression, =, IR, ., exprResult, (, call, ), ;, annotate, (, expression, ), ;, Node]
[;, annotate, (, expression, ), ;, Node, insertionPoint, =, context, ., getContextNode, (, ), ., getNext, (, ), ;, while]
[., exprResult, (, call, ), ;, annotate, (, expression, ), ;, Node, insertionPoint, =, context, ., getContextNode, (, ), .]
[), ;, annotate, (, expression, ), ;, Node, insertionPoint, =, context, ., getContextNode, (, ), ., getNext, (, ), ;]
[;, Node, insertionPoint, =, context, ., getContextNode, (, ), ., getNext, (, ), ;, while, (, insertionPoint, !=, null, &&]
[), ;, Node, insertionPoint, =, context, ., getContextNode, (, ), ., getNext, (, ), ;, while, (, insertionPoint, !=, null]
[;, while, (, insertionPoint, !=, null, &&, NodeUtil, ., isExprCall, (, insertionPoint, ), &&, convention, ., getClassesDefinedByCall, (, insertionPoint, .]
[., getNext, (, ), ;, while, (, insertionPoint, !=, null, &&, NodeUtil, ., isExprCall, (, insertionPoint, ), &&, convention, .]
[., getContextNode, (, ), ., getNext, (, ), ;, while, (, insertionPoint, !=, null, &&, NodeUtil, ., isExprCall, (, insertionPoint]
[), {, insertionPoint, =, insertionPoint, ., getNext, (, ), ;, }, if, (, insertionPoint, ==, null, ), {, context, .]
[&&, convention, ., getClassesDefinedByCall, (, insertionPoint, ., getFirstChild, (, ), ), !=, null, ), {, insertionPoint, =, insertionPoint, ., getNext]
[&&, NodeUtil, ., isExprCall, (, insertionPoint, ), &&, convention, ., getClassesDefinedByCall, (, insertionPoint, ., getFirstChild, (, ), ), !=, null]
[!=, null, &&, NodeUtil, ., isExprCall, (, insertionPoint, ), &&, convention, ., getClassesDefinedByCall, (, insertionPoint, ., getFirstChild, (, ), )]
[&&, NodeUtil, ., isExprCall, (, insertionPoint, ), &&, convention, ., getClassesDefinedByCall, (, insertionPoint, ., getFirstChild, (, ), ), !=, null]
[&&, convention, ., getClassesDefinedByCall, (, insertionPoint, ., getFirstChild, (, ), ), !=, null, ), {, insertionPoint, =, insertionPoint, ., getNext]
[., isExprCall, (, insertionPoint, ), &&, convention, ., getClassesDefinedByCall, (, insertionPoint, ., getFirstChild, (, ), ), !=, null, ), {]
[), &&, convention, ., getClassesDefinedByCall, (, insertionPoint, ., getFirstChild, (, ), ), !=, null, ), {, insertionPoint, =, insertionPoint, .]
[), {, insertionPoint, =, insertionPoint, ., getNext, (, ), ;, }, if, (, insertionPoint, ==, null, ), {, context, .]
[!=, null, ), {, insertionPoint, =, insertionPoint, ., getNext, (, ), ;, }, if, (, insertionPoint, ==, null, ), {]
[., getClassesDefinedByCall, (, insertionPoint, ., getFirstChild, (, ), ), !=, null, ), {, insertionPoint, =, insertionPoint, ., getNext, (, )]
[), !=, null, ), {, insertionPoint, =, insertionPoint, ., getNext, (, ), ;, }, if, (, insertionPoint, ==, null, )]
[., getFirstChild, (, ), ), !=, null, ), {, insertionPoint, =, insertionPoint, ., getNext, (, ), ;, }, if, (]
[), {, insertionPoint, =, insertionPoint, ., getNext, (, ), ;, }, if, (, insertionPoint, ==, null, ), {, context, .]
[=, insertionPoint, ., getNext, (, ), ;, }, if, (, insertionPoint, ==, null, ), {, context, ., getScriptNode, (, )]
[;, }, if, (, insertionPoint, ==, null, ), {, context, ., getScriptNode, (, ), ., addChildToBack, (, expression, ), ;]
[., getNext, (, ), ;, }, if, (, insertionPoint, ==, null, ), {, context, ., getScriptNode, (, ), ., addChildToBack]
[), {, context, ., getScriptNode, (, ), ., addChildToBack, (, expression, ), ;, }, else, {, context, ., getScriptNode, (]
[==, null, ), {, context, ., getScriptNode, (, ), ., addChildToBack, (, expression, ), ;, }, else, {, context, .]
[), {, context, ., getScriptNode, (, ), ., addChildToBack, (, expression, ), ;, }, else, {, context, ., getScriptNode, (]
[;, }, else, {, context, ., getScriptNode, (, ), ., addChildBefore, (, expression, ,, insertionPoint, ), ;, }, compiler, .]
[., addChildToBack, (, expression, ), ;, }, else, {, context, ., getScriptNode, (, ), ., addChildBefore, (, expression, ,, insertionPoint]
[., getScriptNode, (, ), ., addChildToBack, (, expression, ), ;, }, else, {, context, ., getScriptNode, (, ), ., addChildBefore]
[), ;, }, else, {, context, ., getScriptNode, (, ), ., addChildBefore, (, expression, ,, insertionPoint, ), ;, }, compiler]
[;, }, compiler, ., reportCodeChange, (, ), ;, }, }, private, void, annotate, (, Node, node, ), {, NodeTraversal, .]
[., addChildBefore, (, expression, ,, insertionPoint, ), ;, }, compiler, ., reportCodeChange, (, ), ;, }, }, private, void, annotate]
[., getScriptNode, (, ), ., addChildBefore, (, expression, ,, insertionPoint, ), ;, }, compiler, ., reportCodeChange, (, ), ;, }]
[,, insertionPoint, ), ;, }, compiler, ., reportCodeChange, (, ), ;, }, }, private, void, annotate, (, Node, node, )]
[), ;, }, compiler, ., reportCodeChange, (, ), ;, }, }, private, void, annotate, (, Node, node, ), {, NodeTraversal]
[;, }, }, private, void, annotate, (, Node, node, ), {, NodeTraversal, ., traverse, (, compiler, ,, node, ,, new]
[., reportCodeChange, (, ), ;, }, }, private, void, annotate, (, Node, node, ), {, NodeTraversal, ., traverse, (, compiler]
[;, }, private, String, getPropertyName, (, Node, node, ), {, Preconditions, ., checkArgument, (, node, ., isGetProp, (, ), )]
[., traverse, (, compiler, ,, node, ,, new, PrepareAst, ., PrepareAnnotations, (, ), ), ;, }, private, String, getPropertyName, (]
[,, node, ,, new, PrepareAst, ., PrepareAnnotations, (, ), ), ;, }, private, String, getPropertyName, (, Node, node, ), {]
[,, new, PrepareAst, ., PrepareAnnotations, (, ), ), ;, }, private, String, getPropertyName, (, Node, node, ), {, Preconditions, .]
[), ;, }, private, String, getPropertyName, (, Node, node, ), {, Preconditions, ., checkArgument, (, node, ., isGetProp, (, )]
[;, return, node, ., getLastChild, (, ), ., getString, (, ), ;, }, }]
[., checkArgument, (, node, ., isGetProp, (, ), ), ;, return, node, ., getLastChild, (, ), ., getString, (, )]
[), ;, return, node, ., getLastChild, (, ), ., getString, (, ), ;, }, }]
[., isGetProp, (, ), ), ;, return, node, ., getLastChild, (, ), ., getString, (, ), ;, }, }]
[;, }, }]
[., getString, (, ), ;, }, }]
[., getLastChild, (, ), ., getString, (, ), ;, }, }]
