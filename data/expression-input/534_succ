[;, private, static, final, String, FILEINFO_HEADER, =, "/** Begin file information. **/", ;, private, static, final, String, DEFINITION_HEADER, =, "/** Begin mapping definitions. **/", ;, private, static, class]
[;, private, static, final, String, DEFINITION_HEADER, =, "/** Begin mapping definitions. **/", ;, private, static, class, ParseState, {, final, String, contents, ;, int, currentPosition]
[;, private, static, class, ParseState, {, final, String, contents, ;, int, currentPosition, =, 0, ;, ParseState, (, String, contents, )]
[;, ParseState, (, String, contents, ), {, this, ., contents, =, contents, ;, }, String, readLineOrNull, (, ), {, if]
[=, contents, ;, }, String, readLineOrNull, (, ), {, if, (, currentPosition, >=, contents, ., length, (, ), ), {]
[., contents, =, contents, ;, }, String, readLineOrNull, (, ), {, if, (, currentPosition, >=, contents, ., length, (, )]
[;, }, String, readLineOrNull, (, ), {, if, (, currentPosition, >=, contents, ., length, (, ), ), {, return, null]
[), {, return, null, ;, }, int, index, =, contents, ., indexOf, (, '\n', ,, currentPosition, ), ;, if, (]
[>=, contents, ., length, (, ), ), {, return, null, ;, }, int, index, =, contents, ., indexOf, (, '\n']
[), {, return, null, ;, }, int, index, =, contents, ., indexOf, (, '\n', ,, currentPosition, ), ;, if, (]
[., length, (, ), ), {, return, null, ;, }, int, index, =, contents, ., indexOf, (, '\n', ,, currentPosition]
[;, }, int, index, =, contents, ., indexOf, (, '\n', ,, currentPosition, ), ;, if, (, index, <, 0, )]
[;, if, (, index, <, 0, ), {, index, =, contents, ., length, (, ), ;, }, String, line, =]
[., indexOf, (, '\n', ,, currentPosition, ), ;, if, (, index, <, 0, ), {, index, =, contents, ., length]
[,, currentPosition, ), ;, if, (, index, <, 0, ), {, index, =, contents, ., length, (, ), ;, }]
[), ;, if, (, index, <, 0, ), {, index, =, contents, ., length, (, ), ;, }, String, line]
[), {, index, =, contents, ., length, (, ), ;, }, String, line, =, contents, ., substring, (, currentPosition, ,]
[<, 0, ), {, index, =, contents, ., length, (, ), ;, }, String, line, =, contents, ., substring, (]
[), {, index, =, contents, ., length, (, ), ;, }, String, line, =, contents, ., substring, (, currentPosition, ,]
[=, contents, ., length, (, ), ;, }, String, line, =, contents, ., substring, (, currentPosition, ,, index, ), ;]
[;, }, String, line, =, contents, ., substring, (, currentPosition, ,, index, ), ;, currentPosition, =, index, +, 1, ;]
[., length, (, ), ;, }, String, line, =, contents, ., substring, (, currentPosition, ,, index, ), ;, currentPosition, =]
[;, currentPosition, =, index, +, 1, ;, return, line, ;, }, String, readLine, (, ), throws, SourceMapParseException, {, String, line]
[., substring, (, currentPosition, ,, index, ), ;, currentPosition, =, index, +, 1, ;, return, line, ;, }, String, readLine]
[,, index, ), ;, currentPosition, =, index, +, 1, ;, return, line, ;, }, String, readLine, (, ), throws, SourceMapParseException]
[), ;, currentPosition, =, index, +, 1, ;, return, line, ;, }, String, readLine, (, ), throws, SourceMapParseException, {, String]
[=, index, +, 1, ;, return, line, ;, }, String, readLine, (, ), throws, SourceMapParseException, {, String, line, =, readLineOrNull]
[;, return, line, ;, }, String, readLine, (, ), throws, SourceMapParseException, {, String, line, =, readLineOrNull, (, ), ;, if]
[+, 1, ;, return, line, ;, }, String, readLine, (, ), throws, SourceMapParseException, {, String, line, =, readLineOrNull, (, )]
[;, return, line, ;, }, String, readLine, (, ), throws, SourceMapParseException, {, String, line, =, readLineOrNull, (, ), ;, if]
[;, }, String, readLine, (, ), throws, SourceMapParseException, {, String, line, =, readLineOrNull, (, ), ;, if, (, line, ==]
[;, if, (, line, ==, null, ), {, fail, (, "EOF", ), ;, }, return, line, ;, }, void, expectLine]
[), {, fail, (, "EOF", ), ;, }, return, line, ;, }, void, expectLine, (, String, expect, ), throws, SourceMapParseException]
[==, null, ), {, fail, (, "EOF", ), ;, }, return, line, ;, }, void, expectLine, (, String, expect, )]
[), {, fail, (, "EOF", ), ;, }, return, line, ;, }, void, expectLine, (, String, expect, ), throws, SourceMapParseException]
[;, }, return, line, ;, }, void, expectLine, (, String, expect, ), throws, SourceMapParseException, {, String, line, =, readLine, (]
[), ;, }, return, line, ;, }, void, expectLine, (, String, expect, ), throws, SourceMapParseException, {, String, line, =, readLine]
[;, }, void, expectLine, (, String, expect, ), throws, SourceMapParseException, {, String, line, =, readLine, (, ), ;, if, (]
[;, if, (, !, expect, ., equals, (, line, ), ), {, fail, (, "Expected ", +, expect, +, " got ", +]
[), {, fail, (, "Expected ", +, expect, +, " got ", +, line, ), ;, }, }, void, fail, (, String, message]
[), {, fail, (, "Expected ", +, expect, +, " got ", +, line, ), ;, }, }, void, fail, (, String, message]
[., equals, (, line, ), ), {, fail, (, "Expected ", +, expect, +, " got ", +, line, ), ;, }, }]
[), ), {, fail, (, "Expected ", +, expect, +, " got ", +, line, ), ;, }, }, void, fail, (, String]
[;, }, }, void, fail, (, String, message, ), throws, SourceMapParseException, {, throw, new, SourceMapParseException, (, message, ), ;, }]
[), ;, }, }, void, fail, (, String, message, ), throws, SourceMapParseException, {, throw, new, SourceMapParseException, (, message, ), ;]
[+, line, ), ;, }, }, void, fail, (, String, message, ), throws, SourceMapParseException, {, throw, new, SourceMapParseException, (, message]
[+, " got ", +, line, ), ;, }, }, void, fail, (, String, message, ), throws, SourceMapParseException, {, throw, new, SourceMapParseException]
[+, expect, +, " got ", +, line, ), ;, }, }, void, fail, (, String, message, ), throws, SourceMapParseException, {, throw]
[+, " got ", +, line, ), ;, }, }, void, fail, (, String, message, ), throws, SourceMapParseException, {, throw, new, SourceMapParseException]
[+, line, ), ;, }, }, void, fail, (, String, message, ), throws, SourceMapParseException, {, throw, new, SourceMapParseException, (, message]
[), ;, }, }, void, fail, (, String, message, ), throws, SourceMapParseException, {, throw, new, SourceMapParseException, (, message, ), ;]
[;, }, }, private, ImmutableList, <, ImmutableList, <, LineFragment, >, >, characterMap, ;, private, ImmutableList, <, SourceFile, >, mappings, ;]
[), ;, }, }, private, ImmutableList, <, ImmutableList, <, LineFragment, >, >, characterMap, ;, private, ImmutableList, <, SourceFile, >, mappings]
[;, try, {, parseInternal, (, parser, ), ;, }, catch, (, JSONException, ex, ), {, parser, ., fail, (, "JSON parse exception: "]
[), ;, try, {, parseInternal, (, parser, ), ;, }, catch, (, JSONException, ex, ), {, parser, ., fail, (]
[;, }, catch, (, JSONException, ex, ), {, parser, ., fail, (, "JSON parse exception: ", +, ex, ), ;, }, }, private]
[), ;, }, catch, (, JSONException, ex, ), {, parser, ., fail, (, "JSON parse exception: ", +, ex, ), ;, }, }]
[;, }, }, private, int, parseCharacterMap, (, ParseState, parser, ,, int, lineCount, ,, ImmutableList, ., Builder, <, ImmutableList, <, LineFragment]
[., fail, (, "JSON parse exception: ", +, ex, ), ;, }, }, private, int, parseCharacterMap, (, ParseState, parser, ,, int, lineCount, ,]
[), ;, }, }, private, int, parseCharacterMap, (, ParseState, parser, ,, int, lineCount, ,, ImmutableList, ., Builder, <, ImmutableList, <]
[+, ex, ), ;, }, }, private, int, parseCharacterMap, (, ParseState, parser, ,, int, lineCount, ,, ImmutableList, ., Builder, <]
[), ;, }, }, private, int, parseCharacterMap, (, ParseState, parser, ,, int, lineCount, ,, ImmutableList, ., Builder, <, ImmutableList, <]
[;, for, (, int, i, =, 0, ;, i, <, lineCount, ;, ++, i, ), {, String, currentLine, =, parser]
[;, for, (, int, i, =, 0, ;, i, <, lineCount, ;, ++, i, ), {, String, currentLine, =, parser]
[;, i, <, lineCount, ;, ++, i, ), {, String, currentLine, =, parser, ., readLine, (, ), ;, if, (]
[;, ++, i, ), {, String, currentLine, =, parser, ., readLine, (, ), ;, if, (, currentLine, ., isEmpty, (]
[<, lineCount, ;, ++, i, ), {, String, currentLine, =, parser, ., readLine, (, ), ;, if, (, currentLine, .]
[;, ++, i, ), {, String, currentLine, =, parser, ., readLine, (, ), ;, if, (, currentLine, ., isEmpty, (]
[), {, String, currentLine, =, parser, ., readLine, (, ), ;, if, (, currentLine, ., isEmpty, (, ), ), {]
[), {, String, currentLine, =, parser, ., readLine, (, ), ;, if, (, currentLine, ., isEmpty, (, ), ), {]
[;, if, (, currentLine, ., isEmpty, (, ), ), {, continue, ;, }, ImmutableList, ., Builder, <, LineFragment, >, fragmentList]
[., readLine, (, ), ;, if, (, currentLine, ., isEmpty, (, ), ), {, continue, ;, }, ImmutableList, ., Builder]
[), {, continue, ;, }, ImmutableList, ., Builder, <, LineFragment, >, fragmentList, =, ImmutableList, ., builder, (, ), ;, LineFragment]
[., isEmpty, (, ), ), {, continue, ;, }, ImmutableList, ., Builder, <, LineFragment, >, fragmentList, =, ImmutableList, ., builder]
[;, LineFragment, myLineFragment, =, null, ;, JSONArray, charArray, =, new, JSONArray, (, currentLine, ), ;, int, numOffsets, =, charArray, .]
[., builder, (, ), ;, LineFragment, myLineFragment, =, null, ;, JSONArray, charArray, =, new, JSONArray, (, currentLine, ), ;, int]
[;, JSONArray, charArray, =, new, JSONArray, (, currentLine, ), ;, int, numOffsets, =, charArray, ., length, (, ), ;, int]
[;, int, numOffsets, =, charArray, ., length, (, ), ;, int, lastID, =, -, 1, ;, int, startID, =, Integer]
[), ;, int, numOffsets, =, charArray, ., length, (, ), ;, int, lastID, =, -, 1, ;, int, startID, =]
[;, int, lastID, =, -, 1, ;, int, startID, =, Integer, ., MIN_VALUE, ;, List, <, Byte, >, currentOffsets, =]
[., length, (, ), ;, int, lastID, =, -, 1, ;, int, startID, =, Integer, ., MIN_VALUE, ;, List, <]
[;, int, startID, =, Integer, ., MIN_VALUE, ;, List, <, Byte, >, currentOffsets, =, Lists, ., newArrayList, (, ), ;]
[;, int, startID, =, Integer, ., MIN_VALUE, ;, List, <, Byte, >, currentOffsets, =, Lists, ., newArrayList, (, ), ;]
[;, List, <, Byte, >, currentOffsets, =, Lists, ., newArrayList, (, ), ;, for, (, int, j, =, 0, ;]
[., MIN_VALUE, ;, List, <, Byte, >, currentOffsets, =, Lists, ., newArrayList, (, ), ;, for, (, int, j, =]
[;, for, (, int, j, =, 0, ;, j, <, charArray, ., length, (, ), ;, ++, j, ), {]
[., newArrayList, (, ), ;, for, (, int, j, =, 0, ;, j, <, charArray, ., length, (, ), ;]
[;, j, <, charArray, ., length, (, ), ;, ++, j, ), {, int, mappingID, =, lastID, ;, if, (]
[;, ++, j, ), {, int, mappingID, =, lastID, ;, if, (, !, charArray, ., isNull, (, j, ), )]
[<, charArray, ., length, (, ), ;, ++, j, ), {, int, mappingID, =, lastID, ;, if, (, !, charArray]
[;, ++, j, ), {, int, mappingID, =, lastID, ;, if, (, !, charArray, ., isNull, (, j, ), )]
[., length, (, ), ;, ++, j, ), {, int, mappingID, =, lastID, ;, if, (, !, charArray, ., isNull]
[), {, int, mappingID, =, lastID, ;, if, (, !, charArray, ., isNull, (, j, ), ), {, mappingID, =]
[), {, int, mappingID, =, lastID, ;, if, (, !, charArray, ., isNull, (, j, ), ), {, mappingID, =]
[;, if, (, !, charArray, ., isNull, (, j, ), ), {, mappingID, =, charArray, ., optInt, (, j, )]
[), {, mappingID, =, charArray, ., optInt, (, j, ), ;, if, (, mappingID, >, maxID, ), {, maxID, =]
[), {, mappingID, =, charArray, ., optInt, (, j, ), ;, if, (, mappingID, >, maxID, ), {, maxID, =]
[., isNull, (, j, ), ), {, mappingID, =, charArray, ., optInt, (, j, ), ;, if, (, mappingID, >]
[), ), {, mappingID, =, charArray, ., optInt, (, j, ), ;, if, (, mappingID, >, maxID, ), {, maxID]
[=, charArray, ., optInt, (, j, ), ;, if, (, mappingID, >, maxID, ), {, maxID, =, mappingID, ;, }]
[;, if, (, mappingID, >, maxID, ), {, maxID, =, mappingID, ;, }, }, if, (, startID, ==, Integer, .]
[., optInt, (, j, ), ;, if, (, mappingID, >, maxID, ), {, maxID, =, mappingID, ;, }, }, if]
[), ;, if, (, mappingID, >, maxID, ), {, maxID, =, mappingID, ;, }, }, if, (, startID, ==, Integer]
[), {, maxID, =, mappingID, ;, }, }, if, (, startID, ==, Integer, ., MIN_VALUE, ), {, startID, =, mappingID]
[>, maxID, ), {, maxID, =, mappingID, ;, }, }, if, (, startID, ==, Integer, ., MIN_VALUE, ), {, startID]
[), {, maxID, =, mappingID, ;, }, }, if, (, startID, ==, Integer, ., MIN_VALUE, ), {, startID, =, mappingID]
[=, mappingID, ;, }, }, if, (, startID, ==, Integer, ., MIN_VALUE, ), {, startID, =, mappingID, ;, }, else]
[;, }, }, if, (, startID, ==, Integer, ., MIN_VALUE, ), {, startID, =, mappingID, ;, }, else, {, if]
[), {, startID, =, mappingID, ;, }, else, {, if, (, mappingID, -, lastID, >, Byte, ., MAX_VALUE, ||, mappingID]
[==, Integer, ., MIN_VALUE, ), {, startID, =, mappingID, ;, }, else, {, if, (, mappingID, -, lastID, >, Byte]
[), {, startID, =, mappingID, ;, }, else, {, if, (, mappingID, -, lastID, >, Byte, ., MAX_VALUE, ||, mappingID]
[., MIN_VALUE, ), {, startID, =, mappingID, ;, }, else, {, if, (, mappingID, -, lastID, >, Byte, ., MAX_VALUE]
[=, mappingID, ;, }, else, {, if, (, mappingID, -, lastID, >, Byte, ., MAX_VALUE, ||, mappingID, -, lastID, <]
[;, }, else, {, if, (, mappingID, -, lastID, >, Byte, ., MAX_VALUE, ||, mappingID, -, lastID, <, Byte, .]
[), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, currentOffsets, ., clear]
[||, mappingID, -, lastID, <, Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray]
[>, Byte, ., MAX_VALUE, ||, mappingID, -, lastID, <, Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID]
[-, lastID, >, Byte, ., MAX_VALUE, ||, mappingID, -, lastID, <, Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment]
[>, Byte, ., MAX_VALUE, ||, mappingID, -, lastID, <, Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID]
[||, mappingID, -, lastID, <, Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray]
[., MAX_VALUE, ||, mappingID, -, lastID, <, Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes]
[), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, currentOffsets, ., clear]
[<, Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), )]
[-, lastID, <, Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets]
[<, Byte, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), )]
[), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, currentOffsets, ., clear]
[., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, currentOffsets]
[=, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, currentOffsets, ., clear, (, ), ;]
[;, currentOffsets, ., clear, (, ), ;, fragmentList, ., add, (, myLineFragment, ), ;, startID, =, mappingID, ;, }, else]
[,, Bytes, ., toArray, (, currentOffsets, ), ), ;, currentOffsets, ., clear, (, ), ;, fragmentList, ., add, (, myLineFragment]
[), ;, currentOffsets, ., clear, (, ), ;, fragmentList, ., add, (, myLineFragment, ), ;, startID, =, mappingID, ;, }]
[., toArray, (, currentOffsets, ), ), ;, currentOffsets, ., clear, (, ), ;, fragmentList, ., add, (, myLineFragment, ), ;]
[), ), ;, currentOffsets, ., clear, (, ), ;, fragmentList, ., add, (, myLineFragment, ), ;, startID, =, mappingID, ;]
[;, fragmentList, ., add, (, myLineFragment, ), ;, startID, =, mappingID, ;, }, else, {, currentOffsets, ., add, (, (]
[., clear, (, ), ;, fragmentList, ., add, (, myLineFragment, ), ;, startID, =, mappingID, ;, }, else, {, currentOffsets]
[;, startID, =, mappingID, ;, }, else, {, currentOffsets, ., add, (, (, byte, ), (, mappingID, -, lastID, )]
[., add, (, myLineFragment, ), ;, startID, =, mappingID, ;, }, else, {, currentOffsets, ., add, (, (, byte, )]
[), ;, startID, =, mappingID, ;, }, else, {, currentOffsets, ., add, (, (, byte, ), (, mappingID, -, lastID]
[=, mappingID, ;, }, else, {, currentOffsets, ., add, (, (, byte, ), (, mappingID, -, lastID, ), ), ;]
[;, }, else, {, currentOffsets, ., add, (, (, byte, ), (, mappingID, -, lastID, ), ), ;, }, }]
[;, }, }, lastID, =, mappingID, ;, }, if, (, startID, !=, Integer, ., MIN_VALUE, ), {, myLineFragment, =, new]
[., add, (, (, byte, ), (, mappingID, -, lastID, ), ), ;, }, }, lastID, =, mappingID, ;, }]
[), ;, }, }, lastID, =, mappingID, ;, }, if, (, startID, !=, Integer, ., MIN_VALUE, ), {, myLineFragment, =]
[), ;, }, }, lastID, =, mappingID, ;, }, if, (, startID, !=, Integer, ., MIN_VALUE, ), {, myLineFragment, =]
[), ), ;, }, }, lastID, =, mappingID, ;, }, if, (, startID, !=, Integer, ., MIN_VALUE, ), {, myLineFragment]
[-, lastID, ), ), ;, }, }, lastID, =, mappingID, ;, }, if, (, startID, !=, Integer, ., MIN_VALUE, )]
[), ), ;, }, }, lastID, =, mappingID, ;, }, if, (, startID, !=, Integer, ., MIN_VALUE, ), {, myLineFragment]
[=, mappingID, ;, }, if, (, startID, !=, Integer, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,]
[;, }, if, (, startID, !=, Integer, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, .]
[), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, fragmentList, ., add]
[!=, Integer, ., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), )]
[), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, fragmentList, ., add]
[., MIN_VALUE, ), {, myLineFragment, =, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, fragmentList]
[=, new, LineFragment, (, startID, ,, Bytes, ., toArray, (, currentOffsets, ), ), ;, fragmentList, ., add, (, myLineFragment, )]
[;, fragmentList, ., add, (, myLineFragment, ), ;, }, characterMapBuilder, ., add, (, fragmentList, ., build, (, ), ), ;]
[,, Bytes, ., toArray, (, currentOffsets, ), ), ;, fragmentList, ., add, (, myLineFragment, ), ;, }, characterMapBuilder, ., add]
[), ;, fragmentList, ., add, (, myLineFragment, ), ;, }, characterMapBuilder, ., add, (, fragmentList, ., build, (, ), )]
[., toArray, (, currentOffsets, ), ), ;, fragmentList, ., add, (, myLineFragment, ), ;, }, characterMapBuilder, ., add, (, fragmentList]
[), ), ;, fragmentList, ., add, (, myLineFragment, ), ;, }, characterMapBuilder, ., add, (, fragmentList, ., build, (, )]
[;, }, characterMapBuilder, ., add, (, fragmentList, ., build, (, ), ), ;, }, return, maxID, ;, }, private, class]
[., add, (, myLineFragment, ), ;, }, characterMapBuilder, ., add, (, fragmentList, ., build, (, ), ), ;, }, return]
[), ;, }, characterMapBuilder, ., add, (, fragmentList, ., build, (, ), ), ;, }, return, maxID, ;, }, private]
[;, }, return, maxID, ;, }, private, class, FileName, {, private, final, String, dir, ;, private, final, String, name, ;]
[., add, (, fragmentList, ., build, (, ), ), ;, }, return, maxID, ;, }, private, class, FileName, {, private]
[), ;, }, return, maxID, ;, }, private, class, FileName, {, private, final, String, dir, ;, private, final, String, name]
[., build, (, ), ), ;, }, return, maxID, ;, }, private, class, FileName, {, private, final, String, dir, ;]
[;, }, private, class, FileName, {, private, final, String, dir, ;, private, final, String, name, ;, FileName, (, String, directory]
[=, directory, ;, this, ., name, =, name, ;, }, }, private, FileName, splitFileName, (, Interner, <, String, >, interner]
[., dir, =, directory, ;, this, ., name, =, name, ;, }, }, private, FileName, splitFileName, (, Interner, <, String]
[;, this, ., name, =, name, ;, }, }, private, FileName, splitFileName, (, Interner, <, String, >, interner, ,, String]
[=, name, ;, }, }, private, FileName, splitFileName, (, Interner, <, String, >, interner, ,, String, input, ), {, int]
[., name, =, name, ;, }, }, private, FileName, splitFileName, (, Interner, <, String, >, interner, ,, String, input, )]
[;, }, }, private, FileName, splitFileName, (, Interner, <, String, >, interner, ,, String, input, ), {, int, hashIndex, =]
[;, String, dir, =, interner, ., intern, (, input, ., substring, (, 0, ,, hashIndex, +, 1, ), ), ;]
[., lastIndexOf, (, '/', ), ;, String, dir, =, interner, ., intern, (, input, ., substring, (, 0, ,, hashIndex]
[), ;, String, dir, =, interner, ., intern, (, input, ., substring, (, 0, ,, hashIndex, +, 1, ), )]
[;, String, fileName, =, interner, ., intern, (, input, ., substring, (, hashIndex, +, 1, ), ), ;, return, new]
[., intern, (, input, ., substring, (, 0, ,, hashIndex, +, 1, ), ), ;, String, fileName, =, interner, .]
[), ;, String, fileName, =, interner, ., intern, (, input, ., substring, (, hashIndex, +, 1, ), ), ;, return]
[., substring, (, 0, ,, hashIndex, +, 1, ), ), ;, String, fileName, =, interner, ., intern, (, input, .]
[,, hashIndex, +, 1, ), ), ;, String, fileName, =, interner, ., intern, (, input, ., substring, (, hashIndex, +]
[), ), ;, String, fileName, =, interner, ., intern, (, input, ., substring, (, hashIndex, +, 1, ), ), ;]
[+, 1, ), ), ;, String, fileName, =, interner, ., intern, (, input, ., substring, (, hashIndex, +, 1, )]
[), ), ;, String, fileName, =, interner, ., intern, (, input, ., substring, (, hashIndex, +, 1, ), ), ;]
[;, return, new, FileName, (, dir, ,, fileName, ), ;, }, private, void, parseFileMappings, (, ParseState, parser, ,, int, maxID]
[., intern, (, input, ., substring, (, hashIndex, +, 1, ), ), ;, return, new, FileName, (, dir, ,, fileName]
[), ;, return, new, FileName, (, dir, ,, fileName, ), ;, }, private, void, parseFileMappings, (, ParseState, parser, ,, int]
[., substring, (, hashIndex, +, 1, ), ), ;, return, new, FileName, (, dir, ,, fileName, ), ;, }, private]
[), ), ;, return, new, FileName, (, dir, ,, fileName, ), ;, }, private, void, parseFileMappings, (, ParseState, parser, ,]
[+, 1, ), ), ;, return, new, FileName, (, dir, ,, fileName, ), ;, }, private, void, parseFileMappings, (, ParseState]
[), ), ;, return, new, FileName, (, dir, ,, fileName, ), ;, }, private, void, parseFileMappings, (, ParseState, parser, ,]
[;, }, private, void, parseFileMappings, (, ParseState, parser, ,, int, maxID, ), throws, SourceMapParseException, ,, JSONException, {, Interner, <, String]
[,, fileName, ), ;, }, private, void, parseFileMappings, (, ParseState, parser, ,, int, maxID, ), throws, SourceMapParseException, ,, JSONException, {]
[), ;, }, private, void, parseFileMappings, (, ParseState, parser, ,, int, maxID, ), throws, SourceMapParseException, ,, JSONException, {, Interner, <]
[;, ImmutableList, ., Builder, <, SourceFile, >, mappingsBuilder, =, ImmutableList, ., builder, (, ), ;, ArrayList, <, Byte, >, lineOffsets]
[., newStrongInterner, (, ), ;, ImmutableList, ., Builder, <, SourceFile, >, mappingsBuilder, =, ImmutableList, ., builder, (, ), ;, ArrayList]
[;, ArrayList, <, Byte, >, lineOffsets, =, Lists, ., newArrayList, (, ), ;, ArrayList, <, Short, >, columns, =, Lists]
[., builder, (, ), ;, ArrayList, <, Byte, >, lineOffsets, =, Lists, ., newArrayList, (, ), ;, ArrayList, <, Short]
[;, ArrayList, <, Short, >, columns, =, Lists, ., newArrayList, (, ), ;, ArrayList, <, String, >, identifiers, =, Lists]
[., newArrayList, (, ), ;, ArrayList, <, Short, >, columns, =, Lists, ., newArrayList, (, ), ;, ArrayList, <, String]
[;, ArrayList, <, String, >, identifiers, =, Lists, ., newArrayList, (, ), ;, String, currentFile, =, null, ;, int, lastLine]
[., newArrayList, (, ), ;, ArrayList, <, String, >, identifiers, =, Lists, ., newArrayList, (, ), ;, String, currentFile, =]
[;, String, currentFile, =, null, ;, int, lastLine, =, -, 1, ;, int, startLine, =, -, 1, ;, int, startMapId]
[., newArrayList, (, ), ;, String, currentFile, =, null, ;, int, lastLine, =, -, 1, ;, int, startLine, =, -]
[;, int, lastLine, =, -, 1, ;, int, startLine, =, -, 1, ;, int, startMapId, =, -, 1, ;, for]
[;, int, startLine, =, -, 1, ;, int, startMapId, =, -, 1, ;, for, (, int, mappingId, =, 0, ;]
[;, int, startLine, =, -, 1, ;, int, startMapId, =, -, 1, ;, for, (, int, mappingId, =, 0, ;]
[;, int, startMapId, =, -, 1, ;, for, (, int, mappingId, =, 0, ;, mappingId, <=, maxID, ;, ++, mappingId]
[;, int, startMapId, =, -, 1, ;, for, (, int, mappingId, =, 0, ;, mappingId, <=, maxID, ;, ++, mappingId]
[;, for, (, int, mappingId, =, 0, ;, mappingId, <=, maxID, ;, ++, mappingId, ), {, String, currentLine, =, parser]
[;, for, (, int, mappingId, =, 0, ;, mappingId, <=, maxID, ;, ++, mappingId, ), {, String, currentLine, =, parser]
[;, mappingId, <=, maxID, ;, ++, mappingId, ), {, String, currentLine, =, parser, ., readLine, (, ), ;, JSONArray, mapArray]
[;, ++, mappingId, ), {, String, currentLine, =, parser, ., readLine, (, ), ;, JSONArray, mapArray, =, new, JSONArray, (]
[<=, maxID, ;, ++, mappingId, ), {, String, currentLine, =, parser, ., readLine, (, ), ;, JSONArray, mapArray, =, new]
[;, ++, mappingId, ), {, String, currentLine, =, parser, ., readLine, (, ), ;, JSONArray, mapArray, =, new, JSONArray, (]
[), {, String, currentLine, =, parser, ., readLine, (, ), ;, JSONArray, mapArray, =, new, JSONArray, (, currentLine, ), ;]
[), {, String, currentLine, =, parser, ., readLine, (, ), ;, JSONArray, mapArray, =, new, JSONArray, (, currentLine, ), ;]
[;, JSONArray, mapArray, =, new, JSONArray, (, currentLine, ), ;, if, (, mapArray, ., length, (, ), <, 3, )]
[., readLine, (, ), ;, JSONArray, mapArray, =, new, JSONArray, (, currentLine, ), ;, if, (, mapArray, ., length, (]
[;, if, (, mapArray, ., length, (, ), <, 3, ), {, parser, ., fail, (, "Invalid mapping array", ), ;, }]
[), ;, if, (, mapArray, ., length, (, ), <, 3, ), {, parser, ., fail, (, "Invalid mapping array", ), ;]
[), {, parser, ., fail, (, "Invalid mapping array", ), ;, }, String, myFile, =, mapArray, ., getString, (, 0, ), ;]
[<, 3, ), {, parser, ., fail, (, "Invalid mapping array", ), ;, }, String, myFile, =, mapArray, ., getString, (, 0]
[., length, (, ), <, 3, ), {, parser, ., fail, (, "Invalid mapping array", ), ;, }, String, myFile, =, mapArray]
[), {, parser, ., fail, (, "Invalid mapping array", ), ;, }, String, myFile, =, mapArray, ., getString, (, 0, ), ;]
[;, }, String, myFile, =, mapArray, ., getString, (, 0, ), ;, int, line, =, mapArray, ., getInt, (, 1]
[., fail, (, "Invalid mapping array", ), ;, }, String, myFile, =, mapArray, ., getString, (, 0, ), ;, int, line, =]
[), ;, }, String, myFile, =, mapArray, ., getString, (, 0, ), ;, int, line, =, mapArray, ., getInt, (]
[;, int, line, =, mapArray, ., getInt, (, 1, ), ;, if, (, !, myFile, ., equals, (, currentFile, )]
[., getString, (, 0, ), ;, int, line, =, mapArray, ., getInt, (, 1, ), ;, if, (, !, myFile]
[), ;, int, line, =, mapArray, ., getInt, (, 1, ), ;, if, (, !, myFile, ., equals, (, currentFile]
[;, if, (, !, myFile, ., equals, (, currentFile, ), ||, (, line, -, lastLine, ), >, Byte, ., MAX_VALUE]
[., getInt, (, 1, ), ;, if, (, !, myFile, ., equals, (, currentFile, ), ||, (, line, -, lastLine]
[), ;, if, (, !, myFile, ., equals, (, currentFile, ), ||, (, line, -, lastLine, ), >, Byte, .]
[), {, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile]
[||, (, line, -, lastLine, ), <, Byte, ., MIN_VALUE, ), {, if, (, currentFile, !=, null, ), {, FileName]
[||, (, line, -, lastLine, ), >, Byte, ., MAX_VALUE, ||, (, line, -, lastLine, ), <, Byte, ., MIN_VALUE]
[||, (, line, -, lastLine, ), >, Byte, ., MAX_VALUE, ||, (, line, -, lastLine, ), <, Byte, ., MIN_VALUE]
[., equals, (, currentFile, ), ||, (, line, -, lastLine, ), >, Byte, ., MAX_VALUE, ||, (, line, -, lastLine]
[), ||, (, line, -, lastLine, ), >, Byte, ., MAX_VALUE, ||, (, line, -, lastLine, ), <, Byte, .]
[||, (, line, -, lastLine, ), <, Byte, ., MIN_VALUE, ), {, if, (, currentFile, !=, null, ), {, FileName]
[>, Byte, ., MAX_VALUE, ||, (, line, -, lastLine, ), <, Byte, ., MIN_VALUE, ), {, if, (, currentFile, !=]
[), >, Byte, ., MAX_VALUE, ||, (, line, -, lastLine, ), <, Byte, ., MIN_VALUE, ), {, if, (, currentFile]
[-, lastLine, ), >, Byte, ., MAX_VALUE, ||, (, line, -, lastLine, ), <, Byte, ., MIN_VALUE, ), {, if]
[), >, Byte, ., MAX_VALUE, ||, (, line, -, lastLine, ), <, Byte, ., MIN_VALUE, ), {, if, (, currentFile]
[||, (, line, -, lastLine, ), <, Byte, ., MIN_VALUE, ), {, if, (, currentFile, !=, null, ), {, FileName]
[., MAX_VALUE, ||, (, line, -, lastLine, ), <, Byte, ., MIN_VALUE, ), {, if, (, currentFile, !=, null, )]
[), {, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile]
[<, Byte, ., MIN_VALUE, ), {, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,]
[), <, Byte, ., MIN_VALUE, ), {, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner]
[-, lastLine, ), <, Byte, ., MIN_VALUE, ), {, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName]
[), <, Byte, ., MIN_VALUE, ), {, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner]
[), {, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile]
[., MIN_VALUE, ), {, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, )]
[), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder]
[!=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =, SourceFile]
[), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder]
[;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (, dirFile, ., dir, ), ., setFileName]
[,, currentFile, ), ;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (, dirFile, ., dir]
[), ;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (, dirFile, ., dir, ), .]
[;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, currentFile, =, myFile, ;, startLine, =, line]
[., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, currentFile, =]
[., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (, )]
[., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (]
[., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, )]
[., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, )]
[., setFileName, (, dirFile, ., name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (]
[., setDir, (, dirFile, ., dir, ), ., setFileName, (, dirFile, ., name, ), ., setStartLine, (, startLine, ), .]
[., newBuilder, (, ), ., setDir, (, dirFile, ., dir, ), ., setFileName, (, dirFile, ., name, ), ., setStartLine]
[), ., setFileName, (, dirFile, ., name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets]
[., dir, ), ., setFileName, (, dirFile, ., name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, )]
[), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns]
[., name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns]
[), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers]
[), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add]
[), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (]
[), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, currentFile]
[), ;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, currentFile, =, myFile, ;, startLine, =]
[;, }, currentFile, =, myFile, ;, startLine, =, line, ;, lastLine, =, line, ;, startMapId, =, mappingId, ;, columns, .]
[., add, (, builder, ., build, (, ), ), ;, }, currentFile, =, myFile, ;, startLine, =, line, ;, lastLine]
[), ;, }, currentFile, =, myFile, ;, startLine, =, line, ;, lastLine, =, line, ;, startMapId, =, mappingId, ;, columns]
[., build, (, ), ), ;, }, currentFile, =, myFile, ;, startLine, =, line, ;, lastLine, =, line, ;, startMapId]
[=, myFile, ;, startLine, =, line, ;, lastLine, =, line, ;, startMapId, =, mappingId, ;, columns, ., clear, (, )]
[;, startLine, =, line, ;, lastLine, =, line, ;, startMapId, =, mappingId, ;, columns, ., clear, (, ), ;, lineOffsets]
[=, line, ;, lastLine, =, line, ;, startMapId, =, mappingId, ;, columns, ., clear, (, ), ;, lineOffsets, ., clear]
[;, lastLine, =, line, ;, startMapId, =, mappingId, ;, columns, ., clear, (, ), ;, lineOffsets, ., clear, (, )]
[=, line, ;, startMapId, =, mappingId, ;, columns, ., clear, (, ), ;, lineOffsets, ., clear, (, ), ;, identifiers]
[;, startMapId, =, mappingId, ;, columns, ., clear, (, ), ;, lineOffsets, ., clear, (, ), ;, identifiers, ., clear]
[=, mappingId, ;, columns, ., clear, (, ), ;, lineOffsets, ., clear, (, ), ;, identifiers, ., clear, (, )]
[;, columns, ., clear, (, ), ;, lineOffsets, ., clear, (, ), ;, identifiers, ., clear, (, ), ;, }]
[;, lineOffsets, ., clear, (, ), ;, identifiers, ., clear, (, ), ;, }, lineOffsets, ., add, (, (, byte]
[., clear, (, ), ;, lineOffsets, ., clear, (, ), ;, identifiers, ., clear, (, ), ;, }, lineOffsets, .]
[;, identifiers, ., clear, (, ), ;, }, lineOffsets, ., add, (, (, byte, ), (, line, -, lastLine, )]
[., clear, (, ), ;, identifiers, ., clear, (, ), ;, }, lineOffsets, ., add, (, (, byte, ), (]
[;, }, lineOffsets, ., add, (, (, byte, ), (, line, -, lastLine, ), ), ;, columns, ., add, (]
[., clear, (, ), ;, }, lineOffsets, ., add, (, (, byte, ), (, line, -, lastLine, ), ), ;]
[;, columns, ., add, (, (, short, ), mapArray, ., getInt, (, 2, ), ), ;, identifiers, ., add, (]
[., add, (, (, byte, ), (, line, -, lastLine, ), ), ;, columns, ., add, (, (, short, )]
[), ;, columns, ., add, (, (, short, ), mapArray, ., getInt, (, 2, ), ), ;, identifiers, ., add]
[), ;, columns, ., add, (, (, short, ), mapArray, ., getInt, (, 2, ), ), ;, identifiers, ., add]
[), ), ;, columns, ., add, (, (, short, ), mapArray, ., getInt, (, 2, ), ), ;, identifiers, .]
[-, lastLine, ), ), ;, columns, ., add, (, (, short, ), mapArray, ., getInt, (, 2, ), ), ;]
[), ), ;, columns, ., add, (, (, short, ), mapArray, ., getInt, (, 2, ), ), ;, identifiers, .]
[;, identifiers, ., add, (, interner, ., intern, (, mapArray, ., optString, (, 3, ,, "", ), ), ), ;]
[., add, (, (, short, ), mapArray, ., getInt, (, 2, ), ), ;, identifiers, ., add, (, interner, .]
[), ;, identifiers, ., add, (, interner, ., intern, (, mapArray, ., optString, (, 3, ,, "", ), ), )]
[), ;, identifiers, ., add, (, interner, ., intern, (, mapArray, ., optString, (, 3, ,, "", ), ), )]
[., getInt, (, 2, ), ), ;, identifiers, ., add, (, interner, ., intern, (, mapArray, ., optString, (, 3]
[), ), ;, identifiers, ., add, (, interner, ., intern, (, mapArray, ., optString, (, 3, ,, "", ), )]
[;, lastLine, =, line, ;, }, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,]
[., add, (, interner, ., intern, (, mapArray, ., optString, (, 3, ,, "", ), ), ), ;, lastLine, =]
[), ;, lastLine, =, line, ;, }, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner]
[., intern, (, mapArray, ., optString, (, 3, ,, "", ), ), ), ;, lastLine, =, line, ;, }, if]
[), ), ;, lastLine, =, line, ;, }, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (]
[., optString, (, 3, ,, "", ), ), ), ;, lastLine, =, line, ;, }, if, (, currentFile, !=, null]
[,, "", ), ), ), ;, lastLine, =, line, ;, }, if, (, currentFile, !=, null, ), {, FileName, dirFile]
[), ), ), ;, lastLine, =, line, ;, }, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName]
[=, line, ;, }, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, )]
[;, }, if, (, currentFile, !=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile]
[), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder]
[!=, null, ), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =, SourceFile]
[), {, FileName, dirFile, =, splitFileName, (, interner, ,, currentFile, ), ;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder]
[;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (, dirFile, ., dir, ), ., setFileName]
[,, currentFile, ), ;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (, dirFile, ., dir]
[), ;, SourceFile, ., Builder, builder, =, SourceFile, ., newBuilder, (, ), ., setDir, (, dirFile, ., dir, ), .]
[;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, mappings, =, mappingsBuilder, ., build, (, )]
[., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, mappings, =]
[., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (, )]
[., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (]
[., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, )]
[., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, )]
[., setFileName, (, dirFile, ., name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (]
[., setDir, (, dirFile, ., dir, ), ., setFileName, (, dirFile, ., name, ), ., setStartLine, (, startLine, ), .]
[., newBuilder, (, ), ., setDir, (, dirFile, ., dir, ), ., setFileName, (, dirFile, ., name, ), ., setStartLine]
[), ., setFileName, (, dirFile, ., name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets]
[., dir, ), ., setFileName, (, dirFile, ., name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, )]
[), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns]
[., name, ), ., setStartLine, (, startLine, ), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns]
[), ., setStartMapId, (, startMapId, ), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers]
[), ., setLineOffsets, (, lineOffsets, ), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add]
[), ., setColumns, (, columns, ), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (]
[), ., setIdentifiers, (, identifiers, ), ;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, mappings]
[), ;, mappingsBuilder, ., add, (, builder, ., build, (, ), ), ;, }, mappings, =, mappingsBuilder, ., build, (]
[;, }, mappings, =, mappingsBuilder, ., build, (, ), ;, }, private, void, parseInternal, (, ParseState, parser, ), throws, SourceMapParseException]
[., add, (, builder, ., build, (, ), ), ;, }, mappings, =, mappingsBuilder, ., build, (, ), ;, }]
[), ;, }, mappings, =, mappingsBuilder, ., build, (, ), ;, }, private, void, parseInternal, (, ParseState, parser, ), throws]
[., build, (, ), ), ;, }, mappings, =, mappingsBuilder, ., build, (, ), ;, }, private, void, parseInternal, (]
[=, mappingsBuilder, ., build, (, ), ;, }, private, void, parseInternal, (, ParseState, parser, ), throws, SourceMapParseException, ,, JSONException, {]
[;, }, private, void, parseInternal, (, ParseState, parser, ), throws, SourceMapParseException, ,, JSONException, {, String, headerCount, =, parser, ., readLine]
[., build, (, ), ;, }, private, void, parseInternal, (, ParseState, parser, ), throws, SourceMapParseException, ,, JSONException, {, String, headerCount]
[;, Preconditions, ., checkArgument, (, headerCount, ., startsWith, (, LINEMAP_HEADER, ), ,, "Expected %s", ,, LINEMAP_HEADER, ), ;, JSONObject, countObject, =]
[., readLine, (, ), ;, Preconditions, ., checkArgument, (, headerCount, ., startsWith, (, LINEMAP_HEADER, ), ,, "Expected %s", ,, LINEMAP_HEADER, )]
[;, JSONObject, countObject, =, new, JSONObject, (, headerCount, ., substring, (, LINEMAP_HEADER, ., length, (, ), ), ), ;, if]
[., checkArgument, (, headerCount, ., startsWith, (, LINEMAP_HEADER, ), ,, "Expected %s", ,, LINEMAP_HEADER, ), ;, JSONObject, countObject, =, new, JSONObject]
[,, "Expected %s", ,, LINEMAP_HEADER, ), ;, JSONObject, countObject, =, new, JSONObject, (, headerCount, ., substring, (, LINEMAP_HEADER, ., length, (]
[., startsWith, (, LINEMAP_HEADER, ), ,, "Expected %s", ,, LINEMAP_HEADER, ), ;, JSONObject, countObject, =, new, JSONObject, (, headerCount, ., substring]
[), ,, "Expected %s", ,, LINEMAP_HEADER, ), ;, JSONObject, countObject, =, new, JSONObject, (, headerCount, ., substring, (, LINEMAP_HEADER, ., length]
[,, LINEMAP_HEADER, ), ;, JSONObject, countObject, =, new, JSONObject, (, headerCount, ., substring, (, LINEMAP_HEADER, ., length, (, ), )]
[), ;, JSONObject, countObject, =, new, JSONObject, (, headerCount, ., substring, (, LINEMAP_HEADER, ., length, (, ), ), ), ;]
[;, if, (, !, countObject, ., has, (, "count", ), ), {, parser, ., fail, (, "Missing 'count'", ), ;, }]
[), ;, if, (, !, countObject, ., has, (, "count", ), ), {, parser, ., fail, (, "Missing 'count'", ), ;]
[., substring, (, LINEMAP_HEADER, ., length, (, ), ), ), ;, if, (, !, countObject, ., has, (, "count", )]
[), ), ;, if, (, !, countObject, ., has, (, "count", ), ), {, parser, ., fail, (, "Missing 'count'", )]
[., length, (, ), ), ), ;, if, (, !, countObject, ., has, (, "count", ), ), {, parser, .]
[), {, parser, ., fail, (, "Missing 'count'", ), ;, }, int, lineCount, =, countObject, ., getInt, (, "count", ), ;]
[), {, parser, ., fail, (, "Missing 'count'", ), ;, }, int, lineCount, =, countObject, ., getInt, (, "count", ), ;]
[., has, (, "count", ), ), {, parser, ., fail, (, "Missing 'count'", ), ;, }, int, lineCount, =, countObject, .]
[), ), {, parser, ., fail, (, "Missing 'count'", ), ;, }, int, lineCount, =, countObject, ., getInt, (, "count", )]
[;, }, int, lineCount, =, countObject, ., getInt, (, "count", ), ;, if, (, lineCount, <=, 0, ), {, parser]
[., fail, (, "Missing 'count'", ), ;, }, int, lineCount, =, countObject, ., getInt, (, "count", ), ;, if, (, lineCount]
[), ;, }, int, lineCount, =, countObject, ., getInt, (, "count", ), ;, if, (, lineCount, <=, 0, ), {]
[;, if, (, lineCount, <=, 0, ), {, parser, ., fail, (, "Count must be >= 1", ), ;, }, ImmutableList, ., Builder, <]
[., getInt, (, "count", ), ;, if, (, lineCount, <=, 0, ), {, parser, ., fail, (, "Count must be >= 1", ), ;]
[), ;, if, (, lineCount, <=, 0, ), {, parser, ., fail, (, "Count must be >= 1", ), ;, }, ImmutableList, ., Builder]
[), {, parser, ., fail, (, "Count must be >= 1", ), ;, }, ImmutableList, ., Builder, <, ImmutableList, <, LineFragment, >, >, characterMapBuilder]
[<=, 0, ), {, parser, ., fail, (, "Count must be >= 1", ), ;, }, ImmutableList, ., Builder, <, ImmutableList, <, LineFragment, >]
[), {, parser, ., fail, (, "Count must be >= 1", ), ;, }, ImmutableList, ., Builder, <, ImmutableList, <, LineFragment, >, >, characterMapBuilder]
[;, }, ImmutableList, ., Builder, <, ImmutableList, <, LineFragment, >, >, characterMapBuilder, =, ImmutableList, ., builder, (, ), ;, int]
[., fail, (, "Count must be >= 1", ), ;, }, ImmutableList, ., Builder, <, ImmutableList, <, LineFragment, >, >, characterMapBuilder, =, ImmutableList, .]
[), ;, }, ImmutableList, ., Builder, <, ImmutableList, <, LineFragment, >, >, characterMapBuilder, =, ImmutableList, ., builder, (, ), ;]
[;, int, maxId, =, parseCharacterMap, (, parser, ,, lineCount, ,, characterMapBuilder, ), ;, characterMap, =, characterMapBuilder, ., build, (, )]
[., builder, (, ), ;, int, maxId, =, parseCharacterMap, (, parser, ,, lineCount, ,, characterMapBuilder, ), ;, characterMap, =, characterMapBuilder]
[;, characterMap, =, characterMapBuilder, ., build, (, ), ;, parser, ., expectLine, (, FILEINFO_HEADER, ), ;, for, (, int, i]
[,, lineCount, ,, characterMapBuilder, ), ;, characterMap, =, characterMapBuilder, ., build, (, ), ;, parser, ., expectLine, (, FILEINFO_HEADER, )]
[,, characterMapBuilder, ), ;, characterMap, =, characterMapBuilder, ., build, (, ), ;, parser, ., expectLine, (, FILEINFO_HEADER, ), ;, for]
[), ;, characterMap, =, characterMapBuilder, ., build, (, ), ;, parser, ., expectLine, (, FILEINFO_HEADER, ), ;, for, (, int]
[=, characterMapBuilder, ., build, (, ), ;, parser, ., expectLine, (, FILEINFO_HEADER, ), ;, for, (, int, i, =, 0]
[;, parser, ., expectLine, (, FILEINFO_HEADER, ), ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;, i]
[., build, (, ), ;, parser, ., expectLine, (, FILEINFO_HEADER, ), ;, for, (, int, i, =, 0, ;, i]
[;, for, (, int, i, =, 0, ;, i, <, lineCount, ;, i, ++, ), {, parser, ., readLine, (]
[., expectLine, (, FILEINFO_HEADER, ), ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;, i, ++, )]
[), ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;, i, ++, ), {, parser, ., readLine]
[;, i, <, lineCount, ;, i, ++, ), {, parser, ., readLine, (, ), ;, }, parser, ., expectLine, (]
[;, i, ++, ), {, parser, ., readLine, (, ), ;, }, parser, ., expectLine, (, DEFINITION_HEADER, ), ;, parseFileMappings]
[<, lineCount, ;, i, ++, ), {, parser, ., readLine, (, ), ;, }, parser, ., expectLine, (, DEFINITION_HEADER, )]
[;, i, ++, ), {, parser, ., readLine, (, ), ;, }, parser, ., expectLine, (, DEFINITION_HEADER, ), ;, parseFileMappings]
[), {, parser, ., readLine, (, ), ;, }, parser, ., expectLine, (, DEFINITION_HEADER, ), ;, parseFileMappings, (, parser, ,]
[++, ), {, parser, ., readLine, (, ), ;, }, parser, ., expectLine, (, DEFINITION_HEADER, ), ;, parseFileMappings, (, parser]
[;, }, parser, ., expectLine, (, DEFINITION_HEADER, ), ;, parseFileMappings, (, parser, ,, maxId, ), ;, }, @, Override, public]
[., readLine, (, ), ;, }, parser, ., expectLine, (, DEFINITION_HEADER, ), ;, parseFileMappings, (, parser, ,, maxId, ), ;]
[;, parseFileMappings, (, parser, ,, maxId, ), ;, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, columnIndex]
[., expectLine, (, DEFINITION_HEADER, ), ;, parseFileMappings, (, parser, ,, maxId, ), ;, }, @, Override, public, OriginalMapping, getMappingForLine, (]
[), ;, parseFileMappings, (, parser, ,, maxId, ), ;, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int]
[;, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, columnIndex, ), {, Preconditions, ., checkNotNull, (, characterMap]
[,, maxId, ), ;, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, columnIndex, ), {, Preconditions, .]
[), ;, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, columnIndex, ), {, Preconditions, ., checkNotNull, (]
[;, if, (, lineNumber, <, 1, ||, lineNumber, >, characterMap, ., size, (, ), ||, columnIndex, <, 1, ), {]
[., checkNotNull, (, characterMap, ,, "parse() must be called first", ), ;, if, (, lineNumber, <, 1, ||, lineNumber, >, characterMap, ., size, (]
[,, "parse() must be called first", ), ;, if, (, lineNumber, <, 1, ||, lineNumber, >, characterMap, ., size, (, ), ||, columnIndex, <]
[), ;, if, (, lineNumber, <, 1, ||, lineNumber, >, characterMap, ., size, (, ), ||, columnIndex, <, 1, )]
[), {, return, null, ;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (, lineNumber, -, 1, )]
[||, columnIndex, <, 1, ), {, return, null, ;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (]
[||, lineNumber, >, characterMap, ., size, (, ), ||, columnIndex, <, 1, ), {, return, null, ;, }, List, <]
[<, 1, ||, lineNumber, >, characterMap, ., size, (, ), ||, columnIndex, <, 1, ), {, return, null, ;, }]
[||, lineNumber, >, characterMap, ., size, (, ), ||, columnIndex, <, 1, ), {, return, null, ;, }, List, <]
[||, columnIndex, <, 1, ), {, return, null, ;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (]
[>, characterMap, ., size, (, ), ||, columnIndex, <, 1, ), {, return, null, ;, }, List, <, LineFragment, >]
[||, columnIndex, <, 1, ), {, return, null, ;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (]
[., size, (, ), ||, columnIndex, <, 1, ), {, return, null, ;, }, List, <, LineFragment, >, lineFragments, =]
[), {, return, null, ;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (, lineNumber, -, 1, )]
[<, 1, ), {, return, null, ;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (, lineNumber, -]
[), {, return, null, ;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (, lineNumber, -, 1, )]
[;, }, List, <, LineFragment, >, lineFragments, =, characterMap, ., get, (, lineNumber, -, 1, ), ;, if, (, lineFragments]
[;, if, (, lineFragments, ==, null, ||, lineFragments, ., isEmpty, (, ), ), {, return, null, ;, }, int, columnOffset]
[., get, (, lineNumber, -, 1, ), ;, if, (, lineFragments, ==, null, ||, lineFragments, ., isEmpty, (, ), )]
[), ;, if, (, lineFragments, ==, null, ||, lineFragments, ., isEmpty, (, ), ), {, return, null, ;, }, int]
[-, 1, ), ;, if, (, lineFragments, ==, null, ||, lineFragments, ., isEmpty, (, ), ), {, return, null, ;]
[), ;, if, (, lineFragments, ==, null, ||, lineFragments, ., isEmpty, (, ), ), {, return, null, ;, }, int]
[), {, return, null, ;, }, int, columnOffset, =, 0, ;, LineFragment, lastFragment, =, lineFragments, ., get, (, lineFragments, .]
[||, lineFragments, ., isEmpty, (, ), ), {, return, null, ;, }, int, columnOffset, =, 0, ;, LineFragment, lastFragment, =]
[==, null, ||, lineFragments, ., isEmpty, (, ), ), {, return, null, ;, }, int, columnOffset, =, 0, ;, LineFragment]
[||, lineFragments, ., isEmpty, (, ), ), {, return, null, ;, }, int, columnOffset, =, 0, ;, LineFragment, lastFragment, =]
[), {, return, null, ;, }, int, columnOffset, =, 0, ;, LineFragment, lastFragment, =, lineFragments, ., get, (, lineFragments, .]
[., isEmpty, (, ), ), {, return, null, ;, }, int, columnOffset, =, 0, ;, LineFragment, lastFragment, =, lineFragments, .]
[;, }, int, columnOffset, =, 0, ;, LineFragment, lastFragment, =, lineFragments, ., get, (, lineFragments, ., size, (, ), -]
[;, LineFragment, lastFragment, =, lineFragments, ., get, (, lineFragments, ., size, (, ), -, 1, ), ;, int, mapId, =]
[;, int, mapId, =, lastFragment, ., valueAtColumn, (, lastFragment, ., length, (, ), ), ;, for, (, LineFragment, lineFragment, :]
[., get, (, lineFragments, ., size, (, ), -, 1, ), ;, int, mapId, =, lastFragment, ., valueAtColumn, (, lastFragment]
[), ;, int, mapId, =, lastFragment, ., valueAtColumn, (, lastFragment, ., length, (, ), ), ;, for, (, LineFragment, lineFragment]
[-, 1, ), ;, int, mapId, =, lastFragment, ., valueAtColumn, (, lastFragment, ., length, (, ), ), ;, for, (]
[., size, (, ), -, 1, ), ;, int, mapId, =, lastFragment, ., valueAtColumn, (, lastFragment, ., length, (, )]
[), ;, int, mapId, =, lastFragment, ., valueAtColumn, (, lastFragment, ., length, (, ), ), ;, for, (, LineFragment, lineFragment]
[;, for, (, LineFragment, lineFragment, :, lineFragments, ), {, int, columnPosition, =, columnIndex, -, columnOffset, ;, if, (, columnPosition, <=]
[., valueAtColumn, (, lastFragment, ., length, (, ), ), ;, for, (, LineFragment, lineFragment, :, lineFragments, ), {, int, columnPosition]
[), ;, for, (, LineFragment, lineFragment, :, lineFragments, ), {, int, columnPosition, =, columnIndex, -, columnOffset, ;, if, (, columnPosition]
[., length, (, ), ), ;, for, (, LineFragment, lineFragment, :, lineFragments, ), {, int, columnPosition, =, columnIndex, -, columnOffset]
[), {, int, columnPosition, =, columnIndex, -, columnOffset, ;, if, (, columnPosition, <=, lineFragment, ., length, (, ), ), {]
[;, if, (, columnPosition, <=, lineFragment, ., length, (, ), ), {, mapId, =, lineFragment, ., valueAtColumn, (, columnPosition, )]
[-, columnOffset, ;, if, (, columnPosition, <=, lineFragment, ., length, (, ), ), {, mapId, =, lineFragment, ., valueAtColumn, (]
[;, if, (, columnPosition, <=, lineFragment, ., length, (, ), ), {, mapId, =, lineFragment, ., valueAtColumn, (, columnPosition, )]
[), {, mapId, =, lineFragment, ., valueAtColumn, (, columnPosition, ), ;, break, ;, }, columnOffset, +=, lineFragment, ., length, (]
[<=, lineFragment, ., length, (, ), ), {, mapId, =, lineFragment, ., valueAtColumn, (, columnPosition, ), ;, break, ;, }]
[), {, mapId, =, lineFragment, ., valueAtColumn, (, columnPosition, ), ;, break, ;, }, columnOffset, +=, lineFragment, ., length, (]
[., length, (, ), ), {, mapId, =, lineFragment, ., valueAtColumn, (, columnPosition, ), ;, break, ;, }, columnOffset, +=]
[=, lineFragment, ., valueAtColumn, (, columnPosition, ), ;, break, ;, }, columnOffset, +=, lineFragment, ., length, (, ), ;, }]
[;, break, ;, }, columnOffset, +=, lineFragment, ., length, (, ), ;, }, if, (, mapId, <, 0, ), {]
[., valueAtColumn, (, columnPosition, ), ;, break, ;, }, columnOffset, +=, lineFragment, ., length, (, ), ;, }, if, (]
[), ;, break, ;, }, columnOffset, +=, lineFragment, ., length, (, ), ;, }, if, (, mapId, <, 0, )]
[+=, lineFragment, ., length, (, ), ;, }, if, (, mapId, <, 0, ), {, return, null, ;, }, return]
[;, }, if, (, mapId, <, 0, ), {, return, null, ;, }, return, getMappingFromId, (, mapId, ), ;, }]
[., length, (, ), ;, }, if, (, mapId, <, 0, ), {, return, null, ;, }, return, getMappingFromId, (]
[), {, return, null, ;, }, return, getMappingFromId, (, mapId, ), ;, }, private, SourceFile, binarySearch, (, int, mapId, )]
[<, 0, ), {, return, null, ;, }, return, getMappingFromId, (, mapId, ), ;, }, private, SourceFile, binarySearch, (, int]
[), {, return, null, ;, }, return, getMappingFromId, (, mapId, ), ;, }, private, SourceFile, binarySearch, (, int, mapId, )]
[;, }, return, getMappingFromId, (, mapId, ), ;, }, private, SourceFile, binarySearch, (, int, mapId, ), {, int, lower, =]
[;, }, private, SourceFile, binarySearch, (, int, mapId, ), {, int, lower, =, 0, ;, int, upper, =, mappings, .]
[), ;, }, private, SourceFile, binarySearch, (, int, mapId, ), {, int, lower, =, 0, ;, int, upper, =, mappings]
[;, int, upper, =, mappings, ., size, (, ), -, 1, ;, while, (, lower, <=, upper, ), {, int]
[;, while, (, lower, <=, upper, ), {, int, middle, =, lower, +, (, upper, -, lower, ), /, 2]
[-, 1, ;, while, (, lower, <=, upper, ), {, int, middle, =, lower, +, (, upper, -, lower, )]
[., size, (, ), -, 1, ;, while, (, lower, <=, upper, ), {, int, middle, =, lower, +, (]
[;, while, (, lower, <=, upper, ), {, int, middle, =, lower, +, (, upper, -, lower, ), /, 2]
[), {, int, middle, =, lower, +, (, upper, -, lower, ), /, 2, ;, SourceFile, middleCompare, =, mappings, .]
[<=, upper, ), {, int, middle, =, lower, +, (, upper, -, lower, ), /, 2, ;, SourceFile, middleCompare, =]
[), {, int, middle, =, lower, +, (, upper, -, lower, ), /, 2, ;, SourceFile, middleCompare, =, mappings, .]
[;, SourceFile, middleCompare, =, mappings, ., get, (, middle, ), ;, if, (, mapId, <, middleCompare, ., getStartMapId, (, )]
[+, (, upper, -, lower, ), /, 2, ;, SourceFile, middleCompare, =, mappings, ., get, (, middle, ), ;, if]
[;, SourceFile, middleCompare, =, mappings, ., get, (, middle, ), ;, if, (, mapId, <, middleCompare, ., getStartMapId, (, )]
[/, 2, ;, SourceFile, middleCompare, =, mappings, ., get, (, middle, ), ;, if, (, mapId, <, middleCompare, ., getStartMapId]
[), /, 2, ;, SourceFile, middleCompare, =, mappings, ., get, (, middle, ), ;, if, (, mapId, <, middleCompare, .]
[-, lower, ), /, 2, ;, SourceFile, middleCompare, =, mappings, ., get, (, middle, ), ;, if, (, mapId, <]
[), /, 2, ;, SourceFile, middleCompare, =, mappings, ., get, (, middle, ), ;, if, (, mapId, <, middleCompare, .]
[;, SourceFile, middleCompare, =, mappings, ., get, (, middle, ), ;, if, (, mapId, <, middleCompare, ., getStartMapId, (, )]
[;, if, (, mapId, <, middleCompare, ., getStartMapId, (, ), ), {, upper, =, middle, -, 1, ;, }, else]
[., get, (, middle, ), ;, if, (, mapId, <, middleCompare, ., getStartMapId, (, ), ), {, upper, =, middle]
[), ;, if, (, mapId, <, middleCompare, ., getStartMapId, (, ), ), {, upper, =, middle, -, 1, ;, }]
[), {, upper, =, middle, -, 1, ;, }, else, if, (, mapId, <, (, middleCompare, ., getStartMapId, (, )]
[<, middleCompare, ., getStartMapId, (, ), ), {, upper, =, middle, -, 1, ;, }, else, if, (, mapId, <]
[), {, upper, =, middle, -, 1, ;, }, else, if, (, mapId, <, (, middleCompare, ., getStartMapId, (, )]
[., getStartMapId, (, ), ), {, upper, =, middle, -, 1, ;, }, else, if, (, mapId, <, (, middleCompare]
[=, middle, -, 1, ;, }, else, if, (, mapId, <, (, middleCompare, ., getStartMapId, (, ), +, middleCompare, .]
[;, }, else, if, (, mapId, <, (, middleCompare, ., getStartMapId, (, ), +, middleCompare, ., getLength, (, ), )]
[-, 1, ;, }, else, if, (, mapId, <, (, middleCompare, ., getStartMapId, (, ), +, middleCompare, ., getLength, (]
[;, }, else, if, (, mapId, <, (, middleCompare, ., getStartMapId, (, ), +, middleCompare, ., getLength, (, ), )]
[), {, return, middleCompare, ;, }, else, {, lower, =, middle, +, 1, ;, }, }, return, null, ;, }]
[<, (, middleCompare, ., getStartMapId, (, ), +, middleCompare, ., getLength, (, ), ), ), {, return, middleCompare, ;, }]
[), {, return, middleCompare, ;, }, else, {, lower, =, middle, +, 1, ;, }, }, return, null, ;, }]
[), ), {, return, middleCompare, ;, }, else, {, lower, =, middle, +, 1, ;, }, }, return, null, ;]
[+, middleCompare, ., getLength, (, ), ), ), {, return, middleCompare, ;, }, else, {, lower, =, middle, +, 1]
[., getStartMapId, (, ), +, middleCompare, ., getLength, (, ), ), ), {, return, middleCompare, ;, }, else, {, lower]
[), ), {, return, middleCompare, ;, }, else, {, lower, =, middle, +, 1, ;, }, }, return, null, ;]
[., getLength, (, ), ), ), {, return, middleCompare, ;, }, else, {, lower, =, middle, +, 1, ;, }]
[;, }, else, {, lower, =, middle, +, 1, ;, }, }, return, null, ;, }, private, OriginalMapping, getMappingFromId, (]
[=, middle, +, 1, ;, }, }, return, null, ;, }, private, OriginalMapping, getMappingFromId, (, int, mapID, ), {, SourceFile]
[;, }, }, return, null, ;, }, private, OriginalMapping, getMappingFromId, (, int, mapID, ), {, SourceFile, match, =, binarySearch, (]
[+, 1, ;, }, }, return, null, ;, }, private, OriginalMapping, getMappingFromId, (, int, mapID, ), {, SourceFile, match, =]
[;, }, }, return, null, ;, }, private, OriginalMapping, getMappingFromId, (, int, mapID, ), {, SourceFile, match, =, binarySearch, (]
[;, }, private, OriginalMapping, getMappingFromId, (, int, mapID, ), {, SourceFile, match, =, binarySearch, (, mapID, ), ;, if, (]
[;, if, (, match, ==, null, ), {, return, null, ;, }, int, pos, =, mapID, -, match, ., getStartMapId]
[), ;, if, (, match, ==, null, ), {, return, null, ;, }, int, pos, =, mapID, -, match, .]
[), {, return, null, ;, }, int, pos, =, mapID, -, match, ., getStartMapId, (, ), ;, return, match, .]
[==, null, ), {, return, null, ;, }, int, pos, =, mapID, -, match, ., getStartMapId, (, ), ;, return]
[), {, return, null, ;, }, int, pos, =, mapID, -, match, ., getStartMapId, (, ), ;, return, match, .]
[;, }, int, pos, =, mapID, -, match, ., getStartMapId, (, ), ;, return, match, ., getOriginalMapping, (, pos, )]
[;, return, match, ., getOriginalMapping, (, pos, ), ;, }, private, static, final, class, LineFragment, {, private, final, int, startIndex]
[-, match, ., getStartMapId, (, ), ;, return, match, ., getOriginalMapping, (, pos, ), ;, }, private, static, final, class]
[;, return, match, ., getOriginalMapping, (, pos, ), ;, }, private, static, final, class, LineFragment, {, private, final, int, startIndex]
[., getStartMapId, (, ), ;, return, match, ., getOriginalMapping, (, pos, ), ;, }, private, static, final, class, LineFragment, {]
[;, }, private, static, final, class, LineFragment, {, private, final, int, startIndex, ;, private, final, byte, [, ], offsets, ;]
[., getOriginalMapping, (, pos, ), ;, }, private, static, final, class, LineFragment, {, private, final, int, startIndex, ;, private, final]
[), ;, }, private, static, final, class, LineFragment, {, private, final, int, startIndex, ;, private, final, byte, [, ], offsets]
[=, startIndex, ;, this, ., offsets, =, offsets, ;, }, int, length, (, ), {, return, offsets, ., length, +]
[., startIndex, =, startIndex, ;, this, ., offsets, =, offsets, ;, }, int, length, (, ), {, return, offsets, .]
[;, this, ., offsets, =, offsets, ;, }, int, length, (, ), {, return, offsets, ., length, +, 1, ;]
[=, offsets, ;, }, int, length, (, ), {, return, offsets, ., length, +, 1, ;, }, int, valueAtColumn, (]
[., offsets, =, offsets, ;, }, int, length, (, ), {, return, offsets, ., length, +, 1, ;, }, int]
[;, }, int, length, (, ), {, return, offsets, ., length, +, 1, ;, }, int, valueAtColumn, (, int, column]
[;, }, int, valueAtColumn, (, int, column, ), {, Preconditions, ., checkArgument, (, column, >, 0, ), ;, int, pos]
[+, 1, ;, }, int, valueAtColumn, (, int, column, ), {, Preconditions, ., checkArgument, (, column, >, 0, ), ;]
[., length, +, 1, ;, }, int, valueAtColumn, (, int, column, ), {, Preconditions, ., checkArgument, (, column, >, 0]
[;, }, int, valueAtColumn, (, int, column, ), {, Preconditions, ., checkArgument, (, column, >, 0, ), ;, int, pos]
[;, int, pos, =, startIndex, ;, for, (, int, i, =, 0, ;, i, <, column, -, 1, ;, i]
[., checkArgument, (, column, >, 0, ), ;, int, pos, =, startIndex, ;, for, (, int, i, =, 0, ;]
[), ;, int, pos, =, startIndex, ;, for, (, int, i, =, 0, ;, i, <, column, -, 1, ;]
[>, 0, ), ;, int, pos, =, startIndex, ;, for, (, int, i, =, 0, ;, i, <, column, -]
[), ;, int, pos, =, startIndex, ;, for, (, int, i, =, 0, ;, i, <, column, -, 1, ;]
[;, for, (, int, i, =, 0, ;, i, <, column, -, 1, ;, i, ++, ), {, pos, +=]
[;, i, <, column, -, 1, ;, i, ++, ), {, pos, +=, offsets, [, i, ], ;, }, return]
[;, i, ++, ), {, pos, +=, offsets, [, i, ], ;, }, return, pos, ;, }, }, private, static]
[<, column, -, 1, ;, i, ++, ), {, pos, +=, offsets, [, i, ], ;, }, return, pos, ;]
[;, i, ++, ), {, pos, +=, offsets, [, i, ], ;, }, return, pos, ;, }, }, private, static]
[-, 1, ;, i, ++, ), {, pos, +=, offsets, [, i, ], ;, }, return, pos, ;, }, }]
[;, i, ++, ), {, pos, +=, offsets, [, i, ], ;, }, return, pos, ;, }, }, private, static]
[), {, pos, +=, offsets, [, i, ], ;, }, return, pos, ;, }, }, private, static, final, class, SourceFile]
[++, ), {, pos, +=, offsets, [, i, ], ;, }, return, pos, ;, }, }, private, static, final, class]
[+=, offsets, [, i, ], ;, }, return, pos, ;, }, }, private, static, final, class, SourceFile, {, final, String]
[;, }, return, pos, ;, }, }, private, static, final, class, SourceFile, {, final, String, dir, ;, final, String, fileName]
[[, i, ], ;, }, return, pos, ;, }, }, private, static, final, class, SourceFile, {, final, String, dir, ;]
[], ;, }, return, pos, ;, }, }, private, static, final, class, SourceFile, {, final, String, dir, ;, final, String]
[;, }, }, private, static, final, class, SourceFile, {, final, String, dir, ;, final, String, fileName, ;, final, int, startMapId]
[=, Preconditions, ., checkNotNull, (, fileName, ), ;, this, ., dir, =, Preconditions, ., checkNotNull, (, dir, ), ;, this]
[., fileName, =, Preconditions, ., checkNotNull, (, fileName, ), ;, this, ., dir, =, Preconditions, ., checkNotNull, (, dir, )]
[;, this, ., dir, =, Preconditions, ., checkNotNull, (, dir, ), ;, this, ., startLine, =, startLine, ;, this, .]
[., checkNotNull, (, fileName, ), ;, this, ., dir, =, Preconditions, ., checkNotNull, (, dir, ), ;, this, ., startLine]
[), ;, this, ., dir, =, Preconditions, ., checkNotNull, (, dir, ), ;, this, ., startLine, =, startLine, ;, this]
[=, Preconditions, ., checkNotNull, (, dir, ), ;, this, ., startLine, =, startLine, ;, this, ., startMapId, =, startMapId, ;]
[., dir, =, Preconditions, ., checkNotNull, (, dir, ), ;, this, ., startLine, =, startLine, ;, this, ., startMapId, =]
[;, this, ., startLine, =, startLine, ;, this, ., startMapId, =, startMapId, ;, this, ., lineOffsets, =, Preconditions, ., checkNotNull]
[., checkNotNull, (, dir, ), ;, this, ., startLine, =, startLine, ;, this, ., startMapId, =, startMapId, ;, this, .]
[), ;, this, ., startLine, =, startLine, ;, this, ., startMapId, =, startMapId, ;, this, ., lineOffsets, =, Preconditions, .]
[=, startLine, ;, this, ., startMapId, =, startMapId, ;, this, ., lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets, ), ;]
[., startLine, =, startLine, ;, this, ., startMapId, =, startMapId, ;, this, ., lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets]
[;, this, ., startMapId, =, startMapId, ;, this, ., lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets, ), ;, this, .]
[=, startMapId, ;, this, ., lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets, ), ;, this, ., columns, =, Preconditions, .]
[., startMapId, =, startMapId, ;, this, ., lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets, ), ;, this, ., columns, =]
[;, this, ., lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets, ), ;, this, ., columns, =, Preconditions, ., checkNotNull, (]
[=, Preconditions, ., checkNotNull, (, lineOffsets, ), ;, this, ., columns, =, Preconditions, ., checkNotNull, (, columns, ), ;, this]
[., lineOffsets, =, Preconditions, ., checkNotNull, (, lineOffsets, ), ;, this, ., columns, =, Preconditions, ., checkNotNull, (, columns, )]
[;, this, ., columns, =, Preconditions, ., checkNotNull, (, columns, ), ;, this, ., identifiers, =, Preconditions, ., checkNotNull, (]
[., checkNotNull, (, lineOffsets, ), ;, this, ., columns, =, Preconditions, ., checkNotNull, (, columns, ), ;, this, ., identifiers]
[), ;, this, ., columns, =, Preconditions, ., checkNotNull, (, columns, ), ;, this, ., identifiers, =, Preconditions, ., checkNotNull]
[=, Preconditions, ., checkNotNull, (, columns, ), ;, this, ., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions]
[., columns, =, Preconditions, ., checkNotNull, (, columns, ), ;, this, ., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, )]
[;, this, ., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (, lineOffsets, ., length, ==]
[., checkNotNull, (, columns, ), ;, this, ., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument]
[), ;, this, ., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (, lineOffsets, ., length]
[=, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (, lineOffsets, ., length, ==, columns, ., length, &&]
[., identifiers, =, Preconditions, ., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (, lineOffsets, ., length, ==, columns, .]
[;, Preconditions, ., checkArgument, (, lineOffsets, ., length, ==, columns, ., length, &&, columns, ., length, ==, identifiers, ., length]
[., checkNotNull, (, identifiers, ), ;, Preconditions, ., checkArgument, (, lineOffsets, ., length, ==, columns, ., length, &&, columns, .]
[), ;, Preconditions, ., checkArgument, (, lineOffsets, ., length, ==, columns, ., length, &&, columns, ., length, ==, identifiers, .]
[;, }, private, SourceFile, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;, this, ., fileName, =, null]
[., checkArgument, (, lineOffsets, ., length, ==, columns, ., length, &&, columns, ., length, ==, identifiers, ., length, ), ;]
[), ;, }, private, SourceFile, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;, this, ., fileName, =]
[&&, columns, ., length, ==, identifiers, ., length, ), ;, }, private, SourceFile, (, int, startMapId, ), {, this, .]
[==, columns, ., length, &&, columns, ., length, ==, identifiers, ., length, ), ;, }, private, SourceFile, (, int, startMapId]
[., length, ==, columns, ., length, &&, columns, ., length, ==, identifiers, ., length, ), ;, }, private, SourceFile, (]
[&&, columns, ., length, ==, identifiers, ., length, ), ;, }, private, SourceFile, (, int, startMapId, ), {, this, .]
[., length, &&, columns, ., length, ==, identifiers, ., length, ), ;, }, private, SourceFile, (, int, startMapId, ), {]
[), ;, }, private, SourceFile, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;, this, ., fileName, =]
[==, identifiers, ., length, ), ;, }, private, SourceFile, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;]
[., length, ==, identifiers, ., length, ), ;, }, private, SourceFile, (, int, startMapId, ), {, this, ., startMapId, =]
[), ;, }, private, SourceFile, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;, this, ., fileName, =]
[., length, ), ;, }, private, SourceFile, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;, this, .]
[=, startMapId, ;, this, ., fileName, =, null, ;, this, ., dir, =, null, ;, this, ., startLine, =, 0]
[., startMapId, =, startMapId, ;, this, ., fileName, =, null, ;, this, ., dir, =, null, ;, this, ., startLine]
[;, this, ., fileName, =, null, ;, this, ., dir, =, null, ;, this, ., startLine, =, 0, ;, this]
[=, null, ;, this, ., dir, =, null, ;, this, ., startLine, =, 0, ;, this, ., lineOffsets, =, null]
[., fileName, =, null, ;, this, ., dir, =, null, ;, this, ., startLine, =, 0, ;, this, ., lineOffsets]
[;, this, ., dir, =, null, ;, this, ., startLine, =, 0, ;, this, ., lineOffsets, =, null, ;, this]
[=, null, ;, this, ., startLine, =, 0, ;, this, ., lineOffsets, =, null, ;, this, ., columns, =, null]
[., dir, =, null, ;, this, ., startLine, =, 0, ;, this, ., lineOffsets, =, null, ;, this, ., columns]
[;, this, ., startLine, =, 0, ;, this, ., lineOffsets, =, null, ;, this, ., columns, =, null, ;, this]
[=, 0, ;, this, ., lineOffsets, =, null, ;, this, ., columns, =, null, ;, this, ., identifiers, =, null]
[., startLine, =, 0, ;, this, ., lineOffsets, =, null, ;, this, ., columns, =, null, ;, this, ., identifiers]
[;, this, ., lineOffsets, =, null, ;, this, ., columns, =, null, ;, this, ., identifiers, =, null, ;, }]
[=, null, ;, this, ., columns, =, null, ;, this, ., identifiers, =, null, ;, }, int, getLength, (, )]
[., lineOffsets, =, null, ;, this, ., columns, =, null, ;, this, ., identifiers, =, null, ;, }, int, getLength]
[;, this, ., columns, =, null, ;, this, ., identifiers, =, null, ;, }, int, getLength, (, ), {, return]
[=, null, ;, this, ., identifiers, =, null, ;, }, int, getLength, (, ), {, return, lineOffsets, ., length, ;]
[., columns, =, null, ;, this, ., identifiers, =, null, ;, }, int, getLength, (, ), {, return, lineOffsets, .]
[;, this, ., identifiers, =, null, ;, }, int, getLength, (, ), {, return, lineOffsets, ., length, ;, }, int]
[=, null, ;, }, int, getLength, (, ), {, return, lineOffsets, ., length, ;, }, int, getStartMapId, (, ), {]
[., identifiers, =, null, ;, }, int, getLength, (, ), {, return, lineOffsets, ., length, ;, }, int, getStartMapId, (]
[;, }, int, getLength, (, ), {, return, lineOffsets, ., length, ;, }, int, getStartMapId, (, ), {, return, startMapId]
[;, }, int, getStartMapId, (, ), {, return, startMapId, ;, }, OriginalMapping, getOriginalMapping, (, int, offset, ), {, int, lineNumber]
[., length, ;, }, int, getStartMapId, (, ), {, return, startMapId, ;, }, OriginalMapping, getOriginalMapping, (, int, offset, ), {]
[;, }, OriginalMapping, getOriginalMapping, (, int, offset, ), {, int, lineNumber, =, this, ., startLine, ;, for, (, int, i]
[;, for, (, int, i, =, 0, ;, i, <=, offset, ;, i, ++, ), {, lineNumber, +=, lineOffsets, []
[., startLine, ;, for, (, int, i, =, 0, ;, i, <=, offset, ;, i, ++, ), {, lineNumber, +=]
[;, i, <=, offset, ;, i, ++, ), {, lineNumber, +=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder]
[;, i, ++, ), {, lineNumber, +=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =, OriginalMapping, .]
[<=, offset, ;, i, ++, ), {, lineNumber, +=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =]
[;, i, ++, ), {, lineNumber, +=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =, OriginalMapping, .]
[), {, lineNumber, +=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (, )]
[++, ), {, lineNumber, +=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (]
[+=, lineOffsets, [, i, ], ;, }, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (]
[;, }, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, dir, +, fileName, ), .]
[[, i, ], ;, }, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, dir, +]
[], ;, }, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, dir, +, fileName, )]
[;, return, builder, ., build, (, ), ;, }, static, final, class, Builder, {, String, dir, ;, String, fileName, ;]
[., setIdentifier, (, identifiers, [, offset, ], ), ;, return, builder, ., build, (, ), ;, }, static, final, class]
[., setColumnPosition, (, columns, [, offset, ], ), ., setIdentifier, (, identifiers, [, offset, ], ), ;, return, builder, .]
[., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, columns, [, offset, ], ), ., setIdentifier, (, identifiers, [, offset, ]]
[., setOriginalFile, (, dir, +, fileName, ), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, columns, [, offset, ], )]
[., newBuilder, (, ), ., setOriginalFile, (, dir, +, fileName, ), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, columns]
[), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, columns, [, offset, ], ), ., setIdentifier, (, identifiers, [, offset]
[+, fileName, ), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, columns, [, offset, ], ), ., setIdentifier, (, identifiers]
[), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, columns, [, offset, ], ), ., setIdentifier, (, identifiers, [, offset]
[), ., setColumnPosition, (, columns, [, offset, ], ), ., setIdentifier, (, identifiers, [, offset, ], ), ;, return, builder]
[), ., setIdentifier, (, identifiers, [, offset, ], ), ;, return, builder, ., build, (, ), ;, }, static, final]
[[, offset, ], ), ., setIdentifier, (, identifiers, [, offset, ], ), ;, return, builder, ., build, (, ), ;]
[], ), ., setIdentifier, (, identifiers, [, offset, ], ), ;, return, builder, ., build, (, ), ;, }, static]
[), ;, return, builder, ., build, (, ), ;, }, static, final, class, Builder, {, String, dir, ;, String, fileName]
[[, offset, ], ), ;, return, builder, ., build, (, ), ;, }, static, final, class, Builder, {, String, dir]
[], ), ;, return, builder, ., build, (, ), ;, }, static, final, class, Builder, {, String, dir, ;, String]
[;, }, static, final, class, Builder, {, String, dir, ;, String, fileName, ;, int, startMapId, ;, int, startLine, ;, byte]
[., build, (, ), ;, }, static, final, class, Builder, {, String, dir, ;, String, fileName, ;, int, startMapId, ;]
[=, dir, ;, return, this, ;, }, Builder, setFileName, (, String, fileName, ), {, this, ., fileName, =, fileName, ;]
[., dir, =, dir, ;, return, this, ;, }, Builder, setFileName, (, String, fileName, ), {, this, ., fileName, =]
[;, return, this, ;, }, Builder, setFileName, (, String, fileName, ), {, this, ., fileName, =, fileName, ;, return, this]
[;, }, Builder, setFileName, (, String, fileName, ), {, this, ., fileName, =, fileName, ;, return, this, ;, }, Builder]
[=, fileName, ;, return, this, ;, }, Builder, setStartMapId, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;]
[., fileName, =, fileName, ;, return, this, ;, }, Builder, setStartMapId, (, int, startMapId, ), {, this, ., startMapId, =]
[;, return, this, ;, }, Builder, setStartMapId, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;, return, this]
[;, }, Builder, setStartMapId, (, int, startMapId, ), {, this, ., startMapId, =, startMapId, ;, return, this, ;, }, Builder]
[=, startMapId, ;, return, this, ;, }, Builder, setStartLine, (, int, startLine, ), {, this, ., startLine, =, startLine, ;]
[., startMapId, =, startMapId, ;, return, this, ;, }, Builder, setStartLine, (, int, startLine, ), {, this, ., startLine, =]
[;, return, this, ;, }, Builder, setStartLine, (, int, startLine, ), {, this, ., startLine, =, startLine, ;, return, this]
[;, }, Builder, setStartLine, (, int, startLine, ), {, this, ., startLine, =, startLine, ;, return, this, ;, }, Builder]
[=, startLine, ;, return, this, ;, }, Builder, setLineOffsets, (, List, <, Byte, >, lineOffsets, ), {, this, ., lineOffsets]
[., startLine, =, startLine, ;, return, this, ;, }, Builder, setLineOffsets, (, List, <, Byte, >, lineOffsets, ), {, this]
[;, return, this, ;, }, Builder, setLineOffsets, (, List, <, Byte, >, lineOffsets, ), {, this, ., lineOffsets, =, Bytes]
[;, }, Builder, setLineOffsets, (, List, <, Byte, >, lineOffsets, ), {, this, ., lineOffsets, =, Bytes, ., toArray, (]
[=, Bytes, ., toArray, (, lineOffsets, ), ;, return, this, ;, }, Builder, setColumns, (, List, <, Short, >, columns]
[., lineOffsets, =, Bytes, ., toArray, (, lineOffsets, ), ;, return, this, ;, }, Builder, setColumns, (, List, <, Short]
[;, return, this, ;, }, Builder, setColumns, (, List, <, Short, >, columns, ), {, this, ., columns, =, Shorts]
[., toArray, (, lineOffsets, ), ;, return, this, ;, }, Builder, setColumns, (, List, <, Short, >, columns, ), {]
[), ;, return, this, ;, }, Builder, setColumns, (, List, <, Short, >, columns, ), {, this, ., columns, =]
[;, }, Builder, setColumns, (, List, <, Short, >, columns, ), {, this, ., columns, =, Shorts, ., toArray, (]
[=, Shorts, ., toArray, (, columns, ), ;, return, this, ;, }, Builder, setIdentifiers, (, List, <, String, >, identifiers]
[., columns, =, Shorts, ., toArray, (, columns, ), ;, return, this, ;, }, Builder, setIdentifiers, (, List, <, String]
[;, return, this, ;, }, Builder, setIdentifiers, (, List, <, String, >, identifiers, ), {, this, ., identifiers, =, identifiers]
[., toArray, (, columns, ), ;, return, this, ;, }, Builder, setIdentifiers, (, List, <, String, >, identifiers, ), {]
[), ;, return, this, ;, }, Builder, setIdentifiers, (, List, <, String, >, identifiers, ), {, this, ., identifiers, =]
[;, }, Builder, setIdentifiers, (, List, <, String, >, identifiers, ), {, this, ., identifiers, =, identifiers, ., toArray, (]
[=, identifiers, ., toArray, (, new, String, [, 0, ], ), ;, return, this, ;, }, SourceFile, build, (, )]
[., identifiers, =, identifiers, ., toArray, (, new, String, [, 0, ], ), ;, return, this, ;, }, SourceFile, build]
[;, return, this, ;, }, SourceFile, build, (, ), {, return, new, SourceFile, (, dir, ,, fileName, ,, startLine, ,]
[., toArray, (, new, String, [, 0, ], ), ;, return, this, ;, }, SourceFile, build, (, ), {, return]
[), ;, return, this, ;, }, SourceFile, build, (, ), {, return, new, SourceFile, (, dir, ,, fileName, ,, startLine]
[], ), ;, return, this, ;, }, SourceFile, build, (, ), {, return, new, SourceFile, (, dir, ,, fileName, ,]
[;, }, SourceFile, build, (, ), {, return, new, SourceFile, (, dir, ,, fileName, ,, startLine, ,, startMapId, ,, lineOffsets]
[;, }, }, static, Builder, newBuilder, (, ), {, return, new, Builder, (, ), ;, }, }, }]
[,, fileName, ,, startLine, ,, startMapId, ,, lineOffsets, ,, columns, ,, identifiers, ), ;, }, }, static, Builder, newBuilder, (]
[,, startLine, ,, startMapId, ,, lineOffsets, ,, columns, ,, identifiers, ), ;, }, }, static, Builder, newBuilder, (, ), {]
[,, startMapId, ,, lineOffsets, ,, columns, ,, identifiers, ), ;, }, }, static, Builder, newBuilder, (, ), {, return, new]
[,, lineOffsets, ,, columns, ,, identifiers, ), ;, }, }, static, Builder, newBuilder, (, ), {, return, new, Builder, (]
[,, columns, ,, identifiers, ), ;, }, }, static, Builder, newBuilder, (, ), {, return, new, Builder, (, ), ;]
[,, identifiers, ), ;, }, }, static, Builder, newBuilder, (, ), {, return, new, Builder, (, ), ;, }, }]
[), ;, }, }, static, Builder, newBuilder, (, ), {, return, new, Builder, (, ), ;, }, }, }]
[;, }, }, }]
