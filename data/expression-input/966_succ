[), {, throw, new, IllegalArgumentException, (, "Null 'source' argument.", ), ;, }, if, (, periodCount, <, 1, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'source' argument.", ), ;, }, if, (, periodCount, <, 1, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'source' argument.", ), ;, }, if, (, periodCount, <, 1, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, periodCount, <, 1, ), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 1.", ), ;, }, TimeSeriesCollection]
[), ;, }, if, (, periodCount, <, 1, ), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 1.", ), ;, }]
[), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 1.", ), ;, }, TimeSeriesCollection, result, =, new, TimeSeriesCollection, (, ), ;]
[<, 1, ), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 1.", ), ;, }, TimeSeriesCollection, result, =, new, TimeSeriesCollection, (]
[), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 1.", ), ;, }, TimeSeriesCollection, result, =, new, TimeSeriesCollection, (, ), ;]
[;, }, TimeSeriesCollection, result, =, new, TimeSeriesCollection, (, ), ;, for, (, int, i, =, 0, ;, i, <, source]
[), ;, }, TimeSeriesCollection, result, =, new, TimeSeriesCollection, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[+, "than or equal to 1.", ), ;, }, TimeSeriesCollection, result, =, new, TimeSeriesCollection, (, ), ;, for, (, int, i, =, 0, ;]
[), ;, }, TimeSeriesCollection, result, =, new, TimeSeriesCollection, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[;, for, (, int, i, =, 0, ;, i, <, source, ., getSeriesCount, (, ), ;, i, ++, ), {]
[;, i, <, source, ., getSeriesCount, (, ), ;, i, ++, ), {, TimeSeries, sourceSeries, =, source, ., getSeries, (]
[;, i, ++, ), {, TimeSeries, sourceSeries, =, source, ., getSeries, (, i, ), ;, TimeSeries, maSeries, =, createMovingAverage, (]
[<, source, ., getSeriesCount, (, ), ;, i, ++, ), {, TimeSeries, sourceSeries, =, source, ., getSeries, (, i, )]
[;, i, ++, ), {, TimeSeries, sourceSeries, =, source, ., getSeries, (, i, ), ;, TimeSeries, maSeries, =, createMovingAverage, (]
[., getSeriesCount, (, ), ;, i, ++, ), {, TimeSeries, sourceSeries, =, source, ., getSeries, (, i, ), ;, TimeSeries]
[), {, TimeSeries, sourceSeries, =, source, ., getSeries, (, i, ), ;, TimeSeries, maSeries, =, createMovingAverage, (, sourceSeries, ,, sourceSeries]
[++, ), {, TimeSeries, sourceSeries, =, source, ., getSeries, (, i, ), ;, TimeSeries, maSeries, =, createMovingAverage, (, sourceSeries, ,]
[;, TimeSeries, maSeries, =, createMovingAverage, (, sourceSeries, ,, sourceSeries, ., getKey, (, ), +, suffix, ,, periodCount, ,, skip, )]
[., getSeries, (, i, ), ;, TimeSeries, maSeries, =, createMovingAverage, (, sourceSeries, ,, sourceSeries, ., getKey, (, ), +, suffix]
[), ;, TimeSeries, maSeries, =, createMovingAverage, (, sourceSeries, ,, sourceSeries, ., getKey, (, ), +, suffix, ,, periodCount, ,, skip]
[;, result, ., addSeries, (, maSeries, ), ;, }, return, result, ;, }, public, static, TimeSeries, createMovingAverage, (, TimeSeries, source]
[,, sourceSeries, ., getKey, (, ), +, suffix, ,, periodCount, ,, skip, ), ;, result, ., addSeries, (, maSeries, )]
[,, periodCount, ,, skip, ), ;, result, ., addSeries, (, maSeries, ), ;, }, return, result, ;, }, public, static]
[+, suffix, ,, periodCount, ,, skip, ), ;, result, ., addSeries, (, maSeries, ), ;, }, return, result, ;, }]
[., getKey, (, ), +, suffix, ,, periodCount, ,, skip, ), ;, result, ., addSeries, (, maSeries, ), ;, }]
[,, periodCount, ,, skip, ), ;, result, ., addSeries, (, maSeries, ), ;, }, return, result, ;, }, public, static]
[,, skip, ), ;, result, ., addSeries, (, maSeries, ), ;, }, return, result, ;, }, public, static, TimeSeries, createMovingAverage]
[), ;, result, ., addSeries, (, maSeries, ), ;, }, return, result, ;, }, public, static, TimeSeries, createMovingAverage, (, TimeSeries]
[;, }, return, result, ;, }, public, static, TimeSeries, createMovingAverage, (, TimeSeries, source, ,, String, name, ,, int, periodCount, ,]
[., addSeries, (, maSeries, ), ;, }, return, result, ;, }, public, static, TimeSeries, createMovingAverage, (, TimeSeries, source, ,, String]
[), ;, }, return, result, ;, }, public, static, TimeSeries, createMovingAverage, (, TimeSeries, source, ,, String, name, ,, int, periodCount]
[;, }, public, static, TimeSeries, createMovingAverage, (, TimeSeries, source, ,, String, name, ,, int, periodCount, ,, int, skip, ), {]
[), {, throw, new, IllegalArgumentException, (, "Null source.", ), ;, }, if, (, periodCount, <, 1, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null source.", ), ;, }, if, (, periodCount, <, 1, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null source.", ), ;, }, if, (, periodCount, <, 1, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, periodCount, <, 1, ), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 1.", ), ;, }, TimeSeries]
[), ;, }, if, (, periodCount, <, 1, ), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 1.", ), ;, }]
[), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 1.", ), ;, }, TimeSeries, result, =, new, TimeSeries, (, name, )]
[<, 1, ), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 1.", ), ;, }, TimeSeries, result, =, new, TimeSeries, (]
[), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 1.", ), ;, }, TimeSeries, result, =, new, TimeSeries, (, name, )]
[;, }, TimeSeries, result, =, new, TimeSeries, (, name, ), ;, if, (, source, ., getItemCount, (, ), >, 0]
[), ;, }, TimeSeries, result, =, new, TimeSeries, (, name, ), ;, if, (, source, ., getItemCount, (, ), >]
[+, "than or equal to 1.", ), ;, }, TimeSeries, result, =, new, TimeSeries, (, name, ), ;, if, (, source, ., getItemCount, (]
[), ;, }, TimeSeries, result, =, new, TimeSeries, (, name, ), ;, if, (, source, ., getItemCount, (, ), >]
[;, if, (, source, ., getItemCount, (, ), >, 0, ), {, long, firstSerial, =, source, ., getTimePeriod, (, 0]
[), ;, if, (, source, ., getItemCount, (, ), >, 0, ), {, long, firstSerial, =, source, ., getTimePeriod, (]
[), {, long, firstSerial, =, source, ., getTimePeriod, (, 0, ), ., getSerialIndex, (, ), +, skip, ;, for, (]
[>, 0, ), {, long, firstSerial, =, source, ., getTimePeriod, (, 0, ), ., getSerialIndex, (, ), +, skip, ;]
[., getItemCount, (, ), >, 0, ), {, long, firstSerial, =, source, ., getTimePeriod, (, 0, ), ., getSerialIndex, (]
[), {, long, firstSerial, =, source, ., getTimePeriod, (, 0, ), ., getSerialIndex, (, ), +, skip, ;, for, (]
[;, for, (, int, i, =, source, ., getItemCount, (, ), -, 1, ;, i, >=, 0, ;, i, --]
[+, skip, ;, for, (, int, i, =, source, ., getItemCount, (, ), -, 1, ;, i, >=, 0, ;]
[., getSerialIndex, (, ), +, skip, ;, for, (, int, i, =, source, ., getItemCount, (, ), -, 1, ;]
[., getTimePeriod, (, 0, ), ., getSerialIndex, (, ), +, skip, ;, for, (, int, i, =, source, ., getItemCount]
[), ., getSerialIndex, (, ), +, skip, ;, for, (, int, i, =, source, ., getItemCount, (, ), -, 1]
[;, for, (, int, i, =, source, ., getItemCount, (, ), -, 1, ;, i, >=, 0, ;, i, --]
[;, i, >=, 0, ;, i, --, ), {, RegularTimePeriod, period, =, source, ., getTimePeriod, (, i, ), ;, long]
[-, 1, ;, i, >=, 0, ;, i, --, ), {, RegularTimePeriod, period, =, source, ., getTimePeriod, (, i, )]
[., getItemCount, (, ), -, 1, ;, i, >=, 0, ;, i, --, ), {, RegularTimePeriod, period, =, source, .]
[;, i, >=, 0, ;, i, --, ), {, RegularTimePeriod, period, =, source, ., getTimePeriod, (, i, ), ;, long]
[;, i, --, ), {, RegularTimePeriod, period, =, source, ., getTimePeriod, (, i, ), ;, long, serial, =, period, .]
[>=, 0, ;, i, --, ), {, RegularTimePeriod, period, =, source, ., getTimePeriod, (, i, ), ;, long, serial, =]
[;, i, --, ), {, RegularTimePeriod, period, =, source, ., getTimePeriod, (, i, ), ;, long, serial, =, period, .]
[), {, RegularTimePeriod, period, =, source, ., getTimePeriod, (, i, ), ;, long, serial, =, period, ., getSerialIndex, (, )]
[--, ), {, RegularTimePeriod, period, =, source, ., getTimePeriod, (, i, ), ;, long, serial, =, period, ., getSerialIndex, (]
[;, long, serial, =, period, ., getSerialIndex, (, ), ;, if, (, serial, >=, firstSerial, ), {, int, n, =]
[., getTimePeriod, (, i, ), ;, long, serial, =, period, ., getSerialIndex, (, ), ;, if, (, serial, >=, firstSerial]
[), ;, long, serial, =, period, ., getSerialIndex, (, ), ;, if, (, serial, >=, firstSerial, ), {, int, n]
[;, if, (, serial, >=, firstSerial, ), {, int, n, =, 0, ;, double, sum, =, 0.0, ;, long, serialLimit]
[., getSerialIndex, (, ), ;, if, (, serial, >=, firstSerial, ), {, int, n, =, 0, ;, double, sum, =]
[), {, int, n, =, 0, ;, double, sum, =, 0.0, ;, long, serialLimit, =, period, ., getSerialIndex, (, )]
[>=, firstSerial, ), {, int, n, =, 0, ;, double, sum, =, 0.0, ;, long, serialLimit, =, period, ., getSerialIndex]
[), {, int, n, =, 0, ;, double, sum, =, 0.0, ;, long, serialLimit, =, period, ., getSerialIndex, (, )]
[;, double, sum, =, 0.0, ;, long, serialLimit, =, period, ., getSerialIndex, (, ), -, periodCount, ;, int, offset, =]
[;, long, serialLimit, =, period, ., getSerialIndex, (, ), -, periodCount, ;, int, offset, =, 0, ;, boolean, finished, =]
[;, int, offset, =, 0, ;, boolean, finished, =, false, ;, while, (, (, offset, <, periodCount, ), &&, (]
[-, periodCount, ;, int, offset, =, 0, ;, boolean, finished, =, false, ;, while, (, (, offset, <, periodCount, )]
[., getSerialIndex, (, ), -, periodCount, ;, int, offset, =, 0, ;, boolean, finished, =, false, ;, while, (, (]
[;, int, offset, =, 0, ;, boolean, finished, =, false, ;, while, (, (, offset, <, periodCount, ), &&, (]
[;, boolean, finished, =, false, ;, while, (, (, offset, <, periodCount, ), &&, (, !, finished, ), ), {]
[;, while, (, (, offset, <, periodCount, ), &&, (, !, finished, ), ), {, if, (, (, i, -]
[), {, if, (, (, i, -, offset, ), >=, 0, ), {, TimeSeriesDataItem, item, =, source, ., getRawDataItem, (]
[&&, (, !, finished, ), ), {, if, (, (, i, -, offset, ), >=, 0, ), {, TimeSeriesDataItem, item]
[), &&, (, !, finished, ), ), {, if, (, (, i, -, offset, ), >=, 0, ), {, TimeSeriesDataItem]
[<, periodCount, ), &&, (, !, finished, ), ), {, if, (, (, i, -, offset, ), >=, 0, )]
[), &&, (, !, finished, ), ), {, if, (, (, i, -, offset, ), >=, 0, ), {, TimeSeriesDataItem]
[), {, if, (, (, i, -, offset, ), >=, 0, ), {, TimeSeriesDataItem, item, =, source, ., getRawDataItem, (]
[), ), {, if, (, (, i, -, offset, ), >=, 0, ), {, TimeSeriesDataItem, item, =, source, ., getRawDataItem]
[), ), {, if, (, (, i, -, offset, ), >=, 0, ), {, TimeSeriesDataItem, item, =, source, ., getRawDataItem]
[), {, TimeSeriesDataItem, item, =, source, ., getRawDataItem, (, i, -, offset, ), ;, RegularTimePeriod, p, =, item, ., getPeriod]
[>=, 0, ), {, TimeSeriesDataItem, item, =, source, ., getRawDataItem, (, i, -, offset, ), ;, RegularTimePeriod, p, =, item]
[), >=, 0, ), {, TimeSeriesDataItem, item, =, source, ., getRawDataItem, (, i, -, offset, ), ;, RegularTimePeriod, p, =]
[-, offset, ), >=, 0, ), {, TimeSeriesDataItem, item, =, source, ., getRawDataItem, (, i, -, offset, ), ;, RegularTimePeriod]
[), >=, 0, ), {, TimeSeriesDataItem, item, =, source, ., getRawDataItem, (, i, -, offset, ), ;, RegularTimePeriod, p, =]
[), {, TimeSeriesDataItem, item, =, source, ., getRawDataItem, (, i, -, offset, ), ;, RegularTimePeriod, p, =, item, ., getPeriod]
[;, RegularTimePeriod, p, =, item, ., getPeriod, (, ), ;, Number, v, =, item, ., getValue, (, ), ;, long]
[., getRawDataItem, (, i, -, offset, ), ;, RegularTimePeriod, p, =, item, ., getPeriod, (, ), ;, Number, v, =]
[), ;, RegularTimePeriod, p, =, item, ., getPeriod, (, ), ;, Number, v, =, item, ., getValue, (, ), ;]
[-, offset, ), ;, RegularTimePeriod, p, =, item, ., getPeriod, (, ), ;, Number, v, =, item, ., getValue, (]
[), ;, RegularTimePeriod, p, =, item, ., getPeriod, (, ), ;, Number, v, =, item, ., getValue, (, ), ;]
[;, Number, v, =, item, ., getValue, (, ), ;, long, currentIndex, =, p, ., getSerialIndex, (, ), ;, if]
[., getPeriod, (, ), ;, Number, v, =, item, ., getValue, (, ), ;, long, currentIndex, =, p, ., getSerialIndex]
[;, long, currentIndex, =, p, ., getSerialIndex, (, ), ;, if, (, currentIndex, >, serialLimit, ), {, if, (, v]
[., getValue, (, ), ;, long, currentIndex, =, p, ., getSerialIndex, (, ), ;, if, (, currentIndex, >, serialLimit, )]
[;, if, (, currentIndex, >, serialLimit, ), {, if, (, v, !=, null, ), {, sum, =, sum, +, v]
[., getSerialIndex, (, ), ;, if, (, currentIndex, >, serialLimit, ), {, if, (, v, !=, null, ), {, sum]
[), {, if, (, v, !=, null, ), {, sum, =, sum, +, v, ., doubleValue, (, ), ;, n]
[>, serialLimit, ), {, if, (, v, !=, null, ), {, sum, =, sum, +, v, ., doubleValue, (, )]
[), {, if, (, v, !=, null, ), {, sum, =, sum, +, v, ., doubleValue, (, ), ;, n]
[), {, sum, =, sum, +, v, ., doubleValue, (, ), ;, n, =, n, +, 1, ;, }, }]
[!=, null, ), {, sum, =, sum, +, v, ., doubleValue, (, ), ;, n, =, n, +, 1, ;]
[), {, sum, =, sum, +, v, ., doubleValue, (, ), ;, n, =, n, +, 1, ;, }, }]
[=, sum, +, v, ., doubleValue, (, ), ;, n, =, n, +, 1, ;, }, }, else, {, finished]
[;, n, =, n, +, 1, ;, }, }, else, {, finished, =, true, ;, }, }, offset, =, offset]
[+, v, ., doubleValue, (, ), ;, n, =, n, +, 1, ;, }, }, else, {, finished, =, true]
[;, n, =, n, +, 1, ;, }, }, else, {, finished, =, true, ;, }, }, offset, =, offset]
[., doubleValue, (, ), ;, n, =, n, +, 1, ;, }, }, else, {, finished, =, true, ;, }]
[=, n, +, 1, ;, }, }, else, {, finished, =, true, ;, }, }, offset, =, offset, +, 1]
[;, }, }, else, {, finished, =, true, ;, }, }, offset, =, offset, +, 1, ;, }, if, (]
[+, 1, ;, }, }, else, {, finished, =, true, ;, }, }, offset, =, offset, +, 1, ;, }]
[;, }, }, else, {, finished, =, true, ;, }, }, offset, =, offset, +, 1, ;, }, if, (]
[=, true, ;, }, }, offset, =, offset, +, 1, ;, }, if, (, n, >, 0, ), {, result]
[;, }, }, offset, =, offset, +, 1, ;, }, if, (, n, >, 0, ), {, result, ., add]
[=, offset, +, 1, ;, }, if, (, n, >, 0, ), {, result, ., add, (, period, ,, sum]
[;, }, if, (, n, >, 0, ), {, result, ., add, (, period, ,, sum, /, n, ), ;]
[+, 1, ;, }, if, (, n, >, 0, ), {, result, ., add, (, period, ,, sum, /, n]
[;, }, if, (, n, >, 0, ), {, result, ., add, (, period, ,, sum, /, n, ), ;]
[), {, result, ., add, (, period, ,, sum, /, n, ), ;, }, else, {, result, ., add, (]
[>, 0, ), {, result, ., add, (, period, ,, sum, /, n, ), ;, }, else, {, result, .]
[), {, result, ., add, (, period, ,, sum, /, n, ), ;, }, else, {, result, ., add, (]
[;, }, else, {, result, ., add, (, period, ,, null, ), ;, }, }, }, }, return, result, ;]
[., add, (, period, ,, sum, /, n, ), ;, }, else, {, result, ., add, (, period, ,, null]
[,, sum, /, n, ), ;, }, else, {, result, ., add, (, period, ,, null, ), ;, }, }]
[), ;, }, else, {, result, ., add, (, period, ,, null, ), ;, }, }, }, }, return, result]
[/, n, ), ;, }, else, {, result, ., add, (, period, ,, null, ), ;, }, }, }, }]
[), ;, }, else, {, result, ., add, (, period, ,, null, ), ;, }, }, }, }, return, result]
[;, }, }, }, }, return, result, ;, }, public, static, TimeSeries, createPointMovingAverage, (, TimeSeries, source, ,, String, name, ,]
[., add, (, period, ,, null, ), ;, }, }, }, }, return, result, ;, }, public, static, TimeSeries, createPointMovingAverage]
[,, null, ), ;, }, }, }, }, return, result, ;, }, public, static, TimeSeries, createPointMovingAverage, (, TimeSeries, source, ,]
[), ;, }, }, }, }, return, result, ;, }, public, static, TimeSeries, createPointMovingAverage, (, TimeSeries, source, ,, String, name]
[;, }, public, static, TimeSeries, createPointMovingAverage, (, TimeSeries, source, ,, String, name, ,, int, pointCount, ), {, if, (, source]
[), {, throw, new, IllegalArgumentException, (, "Null 'source'.", ), ;, }, if, (, pointCount, <, 2, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'source'.", ), ;, }, if, (, pointCount, <, 2, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'source'.", ), ;, }, if, (, pointCount, <, 2, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, pointCount, <, 2, ), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 2.", ), ;, }, TimeSeries]
[), ;, }, if, (, pointCount, <, 2, ), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 2.", ), ;, }]
[), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 2.", ), ;, }, TimeSeries, result, =, new, TimeSeries, (, name, )]
[<, 2, ), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 2.", ), ;, }, TimeSeries, result, =, new, TimeSeries, (]
[), {, throw, new, IllegalArgumentException, (, "periodCount must be greater ", +, "than or equal to 2.", ), ;, }, TimeSeries, result, =, new, TimeSeries, (, name, )]
[;, }, TimeSeries, result, =, new, TimeSeries, (, name, ), ;, double, rollingSumForPeriod, =, 0.0, ;, for, (, int, i]
[), ;, }, TimeSeries, result, =, new, TimeSeries, (, name, ), ;, double, rollingSumForPeriod, =, 0.0, ;, for, (, int]
[+, "than or equal to 2.", ), ;, }, TimeSeries, result, =, new, TimeSeries, (, name, ), ;, double, rollingSumForPeriod, =, 0.0, ;, for]
[), ;, }, TimeSeries, result, =, new, TimeSeries, (, name, ), ;, double, rollingSumForPeriod, =, 0.0, ;, for, (, int]
[;, double, rollingSumForPeriod, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <, source, ., getItemCount, (, )]
[), ;, double, rollingSumForPeriod, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <, source, ., getItemCount, (]
[;, for, (, int, i, =, 0, ;, i, <, source, ., getItemCount, (, ), ;, i, ++, ), {]
[;, i, <, source, ., getItemCount, (, ), ;, i, ++, ), {, TimeSeriesDataItem, current, =, source, ., getRawDataItem, (]
[;, i, ++, ), {, TimeSeriesDataItem, current, =, source, ., getRawDataItem, (, i, ), ;, RegularTimePeriod, period, =, current, .]
[<, source, ., getItemCount, (, ), ;, i, ++, ), {, TimeSeriesDataItem, current, =, source, ., getRawDataItem, (, i, )]
[;, i, ++, ), {, TimeSeriesDataItem, current, =, source, ., getRawDataItem, (, i, ), ;, RegularTimePeriod, period, =, current, .]
[., getItemCount, (, ), ;, i, ++, ), {, TimeSeriesDataItem, current, =, source, ., getRawDataItem, (, i, ), ;, RegularTimePeriod]
[), {, TimeSeriesDataItem, current, =, source, ., getRawDataItem, (, i, ), ;, RegularTimePeriod, period, =, current, ., getPeriod, (, )]
[++, ), {, TimeSeriesDataItem, current, =, source, ., getRawDataItem, (, i, ), ;, RegularTimePeriod, period, =, current, ., getPeriod, (]
[;, RegularTimePeriod, period, =, current, ., getPeriod, (, ), ;, rollingSumForPeriod, +=, current, ., getValue, (, ), ., doubleValue, (]
[., getRawDataItem, (, i, ), ;, RegularTimePeriod, period, =, current, ., getPeriod, (, ), ;, rollingSumForPeriod, +=, current, ., getValue]
[), ;, RegularTimePeriod, period, =, current, ., getPeriod, (, ), ;, rollingSumForPeriod, +=, current, ., getValue, (, ), ., doubleValue]
[;, rollingSumForPeriod, +=, current, ., getValue, (, ), ., doubleValue, (, ), ;, if, (, i, >, pointCount, -, 1]
[., getPeriod, (, ), ;, rollingSumForPeriod, +=, current, ., getValue, (, ), ., doubleValue, (, ), ;, if, (, i]
[+=, current, ., getValue, (, ), ., doubleValue, (, ), ;, if, (, i, >, pointCount, -, 1, ), {]
[;, if, (, i, >, pointCount, -, 1, ), {, TimeSeriesDataItem, startOfMovingAvg, =, source, ., getRawDataItem, (, i, -, pointCount]
[., doubleValue, (, ), ;, if, (, i, >, pointCount, -, 1, ), {, TimeSeriesDataItem, startOfMovingAvg, =, source, ., getRawDataItem]
[., getValue, (, ), ., doubleValue, (, ), ;, if, (, i, >, pointCount, -, 1, ), {, TimeSeriesDataItem, startOfMovingAvg]
[), {, TimeSeriesDataItem, startOfMovingAvg, =, source, ., getRawDataItem, (, i, -, pointCount, ), ;, rollingSumForPeriod, -=, startOfMovingAvg, ., getValue, (]
[>, pointCount, -, 1, ), {, TimeSeriesDataItem, startOfMovingAvg, =, source, ., getRawDataItem, (, i, -, pointCount, ), ;, rollingSumForPeriod, -=]
[), {, TimeSeriesDataItem, startOfMovingAvg, =, source, ., getRawDataItem, (, i, -, pointCount, ), ;, rollingSumForPeriod, -=, startOfMovingAvg, ., getValue, (]
[-, 1, ), {, TimeSeriesDataItem, startOfMovingAvg, =, source, ., getRawDataItem, (, i, -, pointCount, ), ;, rollingSumForPeriod, -=, startOfMovingAvg, .]
[), {, TimeSeriesDataItem, startOfMovingAvg, =, source, ., getRawDataItem, (, i, -, pointCount, ), ;, rollingSumForPeriod, -=, startOfMovingAvg, ., getValue, (]
[;, rollingSumForPeriod, -=, startOfMovingAvg, ., getValue, (, ), ., doubleValue, (, ), ;, result, ., add, (, period, ,, rollingSumForPeriod]
[., getRawDataItem, (, i, -, pointCount, ), ;, rollingSumForPeriod, -=, startOfMovingAvg, ., getValue, (, ), ., doubleValue, (, ), ;]
[), ;, rollingSumForPeriod, -=, startOfMovingAvg, ., getValue, (, ), ., doubleValue, (, ), ;, result, ., add, (, period, ,]
[-, pointCount, ), ;, rollingSumForPeriod, -=, startOfMovingAvg, ., getValue, (, ), ., doubleValue, (, ), ;, result, ., add, (]
[), ;, rollingSumForPeriod, -=, startOfMovingAvg, ., getValue, (, ), ., doubleValue, (, ), ;, result, ., add, (, period, ,]
[-=, startOfMovingAvg, ., getValue, (, ), ., doubleValue, (, ), ;, result, ., add, (, period, ,, rollingSumForPeriod, /, pointCount]
[;, result, ., add, (, period, ,, rollingSumForPeriod, /, pointCount, ), ;, }, else, if, (, i, ==, pointCount, -]
[., doubleValue, (, ), ;, result, ., add, (, period, ,, rollingSumForPeriod, /, pointCount, ), ;, }, else, if, (]
[., getValue, (, ), ., doubleValue, (, ), ;, result, ., add, (, period, ,, rollingSumForPeriod, /, pointCount, ), ;]
[;, }, else, if, (, i, ==, pointCount, -, 1, ), {, result, ., add, (, period, ,, rollingSumForPeriod, /]
[., add, (, period, ,, rollingSumForPeriod, /, pointCount, ), ;, }, else, if, (, i, ==, pointCount, -, 1, )]
[,, rollingSumForPeriod, /, pointCount, ), ;, }, else, if, (, i, ==, pointCount, -, 1, ), {, result, ., add]
[), ;, }, else, if, (, i, ==, pointCount, -, 1, ), {, result, ., add, (, period, ,, rollingSumForPeriod]
[/, pointCount, ), ;, }, else, if, (, i, ==, pointCount, -, 1, ), {, result, ., add, (, period]
[), ;, }, else, if, (, i, ==, pointCount, -, 1, ), {, result, ., add, (, period, ,, rollingSumForPeriod]
[), {, result, ., add, (, period, ,, rollingSumForPeriod, /, pointCount, ), ;, }, }, return, result, ;, }, public]
[==, pointCount, -, 1, ), {, result, ., add, (, period, ,, rollingSumForPeriod, /, pointCount, ), ;, }, }, return]
[), {, result, ., add, (, period, ,, rollingSumForPeriod, /, pointCount, ), ;, }, }, return, result, ;, }, public]
[-, 1, ), {, result, ., add, (, period, ,, rollingSumForPeriod, /, pointCount, ), ;, }, }, return, result, ;]
[), {, result, ., add, (, period, ,, rollingSumForPeriod, /, pointCount, ), ;, }, }, return, result, ;, }, public]
[;, }, }, return, result, ;, }, public, static, XYDataset, createMovingAverage, (, XYDataset, source, ,, String, suffix, ,, long, period]
[., add, (, period, ,, rollingSumForPeriod, /, pointCount, ), ;, }, }, return, result, ;, }, public, static, XYDataset, createMovingAverage]
[,, rollingSumForPeriod, /, pointCount, ), ;, }, }, return, result, ;, }, public, static, XYDataset, createMovingAverage, (, XYDataset, source, ,]
[), ;, }, }, return, result, ;, }, public, static, XYDataset, createMovingAverage, (, XYDataset, source, ,, String, suffix, ,, long]
[/, pointCount, ), ;, }, }, return, result, ;, }, public, static, XYDataset, createMovingAverage, (, XYDataset, source, ,, String, suffix]
[), ;, }, }, return, result, ;, }, public, static, XYDataset, createMovingAverage, (, XYDataset, source, ,, String, suffix, ,, long]
[;, }, public, static, XYDataset, createMovingAverage, (, XYDataset, source, ,, String, suffix, ,, long, period, ,, long, skip, ), {]
[;, }, public, static, XYDataset, createMovingAverage, (, XYDataset, source, ,, String, suffix, ,, double, period, ,, double, skip, ), {]
[,, suffix, ,, (, double, ), period, ,, (, double, ), skip, ), ;, }, public, static, XYDataset, createMovingAverage, (]
[,, (, double, ), period, ,, (, double, ), skip, ), ;, }, public, static, XYDataset, createMovingAverage, (, XYDataset, source]
[,, (, double, ), skip, ), ;, }, public, static, XYDataset, createMovingAverage, (, XYDataset, source, ,, String, suffix, ,, double]
[,, (, double, ), skip, ), ;, }, public, static, XYDataset, createMovingAverage, (, XYDataset, source, ,, String, suffix, ,, double]
[), ;, }, public, static, XYDataset, createMovingAverage, (, XYDataset, source, ,, String, suffix, ,, double, period, ,, double, skip, )]
[), ;, }, public, static, XYDataset, createMovingAverage, (, XYDataset, source, ,, String, suffix, ,, double, period, ,, double, skip, )]
[), {, throw, new, IllegalArgumentException, (, "Null source (XYDataset).", ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, ), ;, for, (]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null source (XYDataset).", ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, ), ;]
[), {, throw, new, IllegalArgumentException, (, "Null source (XYDataset).", ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, ), ;, for, (]
[;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, ), ;, for, (, int, i, =, 0, ;, i, <, source]
[), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[;, for, (, int, i, =, 0, ;, i, <, source, ., getSeriesCount, (, ), ;, i, ++, ), {]
[;, i, <, source, ., getSeriesCount, (, ), ;, i, ++, ), {, XYSeries, s, =, createMovingAverage, (, source, ,]
[;, i, ++, ), {, XYSeries, s, =, createMovingAverage, (, source, ,, i, ,, source, ., getSeriesKey, (, i, )]
[<, source, ., getSeriesCount, (, ), ;, i, ++, ), {, XYSeries, s, =, createMovingAverage, (, source, ,, i, ,]
[;, i, ++, ), {, XYSeries, s, =, createMovingAverage, (, source, ,, i, ,, source, ., getSeriesKey, (, i, )]
[., getSeriesCount, (, ), ;, i, ++, ), {, XYSeries, s, =, createMovingAverage, (, source, ,, i, ,, source, .]
[), {, XYSeries, s, =, createMovingAverage, (, source, ,, i, ,, source, ., getSeriesKey, (, i, ), +, suffix, ,]
[++, ), {, XYSeries, s, =, createMovingAverage, (, source, ,, i, ,, source, ., getSeriesKey, (, i, ), +, suffix]
[;, result, ., addSeries, (, s, ), ;, }, return, result, ;, }, public, static, XYSeries, createMovingAverage, (, XYDataset, source]
[,, i, ,, source, ., getSeriesKey, (, i, ), +, suffix, ,, period, ,, skip, ), ;, result, ., addSeries]
[,, source, ., getSeriesKey, (, i, ), +, suffix, ,, period, ,, skip, ), ;, result, ., addSeries, (, s]
[,, period, ,, skip, ), ;, result, ., addSeries, (, s, ), ;, }, return, result, ;, }, public, static]
[+, suffix, ,, period, ,, skip, ), ;, result, ., addSeries, (, s, ), ;, }, return, result, ;, }]
[., getSeriesKey, (, i, ), +, suffix, ,, period, ,, skip, ), ;, result, ., addSeries, (, s, ), ;]
[), +, suffix, ,, period, ,, skip, ), ;, result, ., addSeries, (, s, ), ;, }, return, result, ;]
[,, period, ,, skip, ), ;, result, ., addSeries, (, s, ), ;, }, return, result, ;, }, public, static]
[,, skip, ), ;, result, ., addSeries, (, s, ), ;, }, return, result, ;, }, public, static, XYSeries, createMovingAverage]
[), ;, result, ., addSeries, (, s, ), ;, }, return, result, ;, }, public, static, XYSeries, createMovingAverage, (, XYDataset]
[;, }, return, result, ;, }, public, static, XYSeries, createMovingAverage, (, XYDataset, source, ,, int, series, ,, String, name, ,]
[., addSeries, (, s, ), ;, }, return, result, ;, }, public, static, XYSeries, createMovingAverage, (, XYDataset, source, ,, int]
[), ;, }, return, result, ;, }, public, static, XYSeries, createMovingAverage, (, XYDataset, source, ,, int, series, ,, String, name]
[;, }, public, static, XYSeries, createMovingAverage, (, XYDataset, source, ,, int, series, ,, String, name, ,, double, period, ,, double]
[), {, throw, new, IllegalArgumentException, (, "Null source (XYDataset).", ), ;, }, if, (, period, <, Double, ., MIN_VALUE, ), {, throw]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null source (XYDataset).", ), ;, }, if, (, period, <, Double, ., MIN_VALUE, )]
[), {, throw, new, IllegalArgumentException, (, "Null source (XYDataset).", ), ;, }, if, (, period, <, Double, ., MIN_VALUE, ), {, throw]
[;, }, if, (, period, <, Double, ., MIN_VALUE, ), {, throw, new, IllegalArgumentException, (, "period must be positive.", ), ;, }, if]
[), ;, }, if, (, period, <, Double, ., MIN_VALUE, ), {, throw, new, IllegalArgumentException, (, "period must be positive.", ), ;, }]
[), {, throw, new, IllegalArgumentException, (, "period must be positive.", ), ;, }, if, (, skip, <, 0.0, ), {, throw, new, IllegalArgumentException]
[<, Double, ., MIN_VALUE, ), {, throw, new, IllegalArgumentException, (, "period must be positive.", ), ;, }, if, (, skip, <, 0.0, )]
[), {, throw, new, IllegalArgumentException, (, "period must be positive.", ), ;, }, if, (, skip, <, 0.0, ), {, throw, new, IllegalArgumentException]
[., MIN_VALUE, ), {, throw, new, IllegalArgumentException, (, "period must be positive.", ), ;, }, if, (, skip, <, 0.0, ), {, throw]
[;, }, if, (, skip, <, 0.0, ), {, throw, new, IllegalArgumentException, (, "skip must be >= 0.0.", ), ;, }, XYSeries, result, =]
[), ;, }, if, (, skip, <, 0.0, ), {, throw, new, IllegalArgumentException, (, "skip must be >= 0.0.", ), ;, }, XYSeries, result]
[), {, throw, new, IllegalArgumentException, (, "skip must be >= 0.0.", ), ;, }, XYSeries, result, =, new, XYSeries, (, name, ), ;, if]
[<, 0.0, ), {, throw, new, IllegalArgumentException, (, "skip must be >= 0.0.", ), ;, }, XYSeries, result, =, new, XYSeries, (, name, )]
[), {, throw, new, IllegalArgumentException, (, "skip must be >= 0.0.", ), ;, }, XYSeries, result, =, new, XYSeries, (, name, ), ;, if]
[;, }, XYSeries, result, =, new, XYSeries, (, name, ), ;, if, (, source, ., getItemCount, (, series, ), >]
[), ;, }, XYSeries, result, =, new, XYSeries, (, name, ), ;, if, (, source, ., getItemCount, (, series, )]
[;, if, (, source, ., getItemCount, (, series, ), >, 0, ), {, double, first, =, source, ., getXValue, (]
[), ;, if, (, source, ., getItemCount, (, series, ), >, 0, ), {, double, first, =, source, ., getXValue]
[), {, double, first, =, source, ., getXValue, (, series, ,, 0, ), +, skip, ;, for, (, int, i]
[>, 0, ), {, double, first, =, source, ., getXValue, (, series, ,, 0, ), +, skip, ;, for, (]
[., getItemCount, (, series, ), >, 0, ), {, double, first, =, source, ., getXValue, (, series, ,, 0, )]
[), >, 0, ), {, double, first, =, source, ., getXValue, (, series, ,, 0, ), +, skip, ;, for]
[), {, double, first, =, source, ., getXValue, (, series, ,, 0, ), +, skip, ;, for, (, int, i]
[;, for, (, int, i, =, source, ., getItemCount, (, series, ), -, 1, ;, i, >=, 0, ;, i]
[+, skip, ;, for, (, int, i, =, source, ., getItemCount, (, series, ), -, 1, ;, i, >=, 0]
[., getXValue, (, series, ,, 0, ), +, skip, ;, for, (, int, i, =, source, ., getItemCount, (, series]
[,, 0, ), +, skip, ;, for, (, int, i, =, source, ., getItemCount, (, series, ), -, 1, ;]
[), +, skip, ;, for, (, int, i, =, source, ., getItemCount, (, series, ), -, 1, ;, i, >=]
[;, for, (, int, i, =, source, ., getItemCount, (, series, ), -, 1, ;, i, >=, 0, ;, i]
[;, i, >=, 0, ;, i, --, ), {, double, x, =, source, ., getXValue, (, series, ,, i, )]
[-, 1, ;, i, >=, 0, ;, i, --, ), {, double, x, =, source, ., getXValue, (, series, ,]
[., getItemCount, (, series, ), -, 1, ;, i, >=, 0, ;, i, --, ), {, double, x, =, source]
[), -, 1, ;, i, >=, 0, ;, i, --, ), {, double, x, =, source, ., getXValue, (, series]
[;, i, >=, 0, ;, i, --, ), {, double, x, =, source, ., getXValue, (, series, ,, i, )]
[;, i, --, ), {, double, x, =, source, ., getXValue, (, series, ,, i, ), ;, if, (, x]
[>=, 0, ;, i, --, ), {, double, x, =, source, ., getXValue, (, series, ,, i, ), ;, if]
[;, i, --, ), {, double, x, =, source, ., getXValue, (, series, ,, i, ), ;, if, (, x]
[), {, double, x, =, source, ., getXValue, (, series, ,, i, ), ;, if, (, x, >=, first, )]
[--, ), {, double, x, =, source, ., getXValue, (, series, ,, i, ), ;, if, (, x, >=, first]
[;, if, (, x, >=, first, ), {, int, n, =, 0, ;, double, sum, =, 0.0, ;, double, limit]
[., getXValue, (, series, ,, i, ), ;, if, (, x, >=, first, ), {, int, n, =, 0, ;]
[,, i, ), ;, if, (, x, >=, first, ), {, int, n, =, 0, ;, double, sum, =, 0.0]
[), ;, if, (, x, >=, first, ), {, int, n, =, 0, ;, double, sum, =, 0.0, ;, double]
[), {, int, n, =, 0, ;, double, sum, =, 0.0, ;, double, limit, =, x, -, period, ;, int]
[>=, first, ), {, int, n, =, 0, ;, double, sum, =, 0.0, ;, double, limit, =, x, -, period]
[), {, int, n, =, 0, ;, double, sum, =, 0.0, ;, double, limit, =, x, -, period, ;, int]
[;, double, sum, =, 0.0, ;, double, limit, =, x, -, period, ;, int, offset, =, 0, ;, boolean, finished]
[;, double, limit, =, x, -, period, ;, int, offset, =, 0, ;, boolean, finished, =, false, ;, while, (]
[;, int, offset, =, 0, ;, boolean, finished, =, false, ;, while, (, !, finished, ), {, if, (, (]
[-, period, ;, int, offset, =, 0, ;, boolean, finished, =, false, ;, while, (, !, finished, ), {, if]
[;, int, offset, =, 0, ;, boolean, finished, =, false, ;, while, (, !, finished, ), {, if, (, (]
[;, boolean, finished, =, false, ;, while, (, !, finished, ), {, if, (, (, i, -, offset, ), >=]
[;, while, (, !, finished, ), {, if, (, (, i, -, offset, ), >=, 0, ), {, double, xx]
[), {, if, (, (, i, -, offset, ), >=, 0, ), {, double, xx, =, source, ., getXValue, (]
[), {, if, (, (, i, -, offset, ), >=, 0, ), {, double, xx, =, source, ., getXValue, (]
[), {, double, xx, =, source, ., getXValue, (, series, ,, i, -, offset, ), ;, Number, yy, =, source]
[>=, 0, ), {, double, xx, =, source, ., getXValue, (, series, ,, i, -, offset, ), ;, Number, yy]
[), >=, 0, ), {, double, xx, =, source, ., getXValue, (, series, ,, i, -, offset, ), ;, Number]
[-, offset, ), >=, 0, ), {, double, xx, =, source, ., getXValue, (, series, ,, i, -, offset, )]
[), >=, 0, ), {, double, xx, =, source, ., getXValue, (, series, ,, i, -, offset, ), ;, Number]
[), {, double, xx, =, source, ., getXValue, (, series, ,, i, -, offset, ), ;, Number, yy, =, source]
[;, Number, yy, =, source, ., getY, (, series, ,, i, -, offset, ), ;, if, (, xx, >, limit]
[., getXValue, (, series, ,, i, -, offset, ), ;, Number, yy, =, source, ., getY, (, series, ,, i]
[,, i, -, offset, ), ;, Number, yy, =, source, ., getY, (, series, ,, i, -, offset, ), ;]
[), ;, Number, yy, =, source, ., getY, (, series, ,, i, -, offset, ), ;, if, (, xx, >]
[-, offset, ), ;, Number, yy, =, source, ., getY, (, series, ,, i, -, offset, ), ;, if, (]
[), ;, Number, yy, =, source, ., getY, (, series, ,, i, -, offset, ), ;, if, (, xx, >]
[;, if, (, xx, >, limit, ), {, if, (, yy, !=, null, ), {, sum, =, sum, +, yy]
[., getY, (, series, ,, i, -, offset, ), ;, if, (, xx, >, limit, ), {, if, (, yy]
[,, i, -, offset, ), ;, if, (, xx, >, limit, ), {, if, (, yy, !=, null, ), {]
[), ;, if, (, xx, >, limit, ), {, if, (, yy, !=, null, ), {, sum, =, sum, +]
[-, offset, ), ;, if, (, xx, >, limit, ), {, if, (, yy, !=, null, ), {, sum, =]
[), ;, if, (, xx, >, limit, ), {, if, (, yy, !=, null, ), {, sum, =, sum, +]
[), {, if, (, yy, !=, null, ), {, sum, =, sum, +, yy, ., doubleValue, (, ), ;, n]
[>, limit, ), {, if, (, yy, !=, null, ), {, sum, =, sum, +, yy, ., doubleValue, (, )]
[), {, if, (, yy, !=, null, ), {, sum, =, sum, +, yy, ., doubleValue, (, ), ;, n]
[), {, sum, =, sum, +, yy, ., doubleValue, (, ), ;, n, =, n, +, 1, ;, }, }]
[!=, null, ), {, sum, =, sum, +, yy, ., doubleValue, (, ), ;, n, =, n, +, 1, ;]
[), {, sum, =, sum, +, yy, ., doubleValue, (, ), ;, n, =, n, +, 1, ;, }, }]
[=, sum, +, yy, ., doubleValue, (, ), ;, n, =, n, +, 1, ;, }, }, else, {, finished]
[;, n, =, n, +, 1, ;, }, }, else, {, finished, =, true, ;, }, }, else, {, finished]
[+, yy, ., doubleValue, (, ), ;, n, =, n, +, 1, ;, }, }, else, {, finished, =, true]
[;, n, =, n, +, 1, ;, }, }, else, {, finished, =, true, ;, }, }, else, {, finished]
[., doubleValue, (, ), ;, n, =, n, +, 1, ;, }, }, else, {, finished, =, true, ;, }]
[=, n, +, 1, ;, }, }, else, {, finished, =, true, ;, }, }, else, {, finished, =, true]
[;, }, }, else, {, finished, =, true, ;, }, }, else, {, finished, =, true, ;, }, offset, =]
[+, 1, ;, }, }, else, {, finished, =, true, ;, }, }, else, {, finished, =, true, ;, }]
[;, }, }, else, {, finished, =, true, ;, }, }, else, {, finished, =, true, ;, }, offset, =]
[=, true, ;, }, }, else, {, finished, =, true, ;, }, offset, =, offset, +, 1, ;, }, if]
[;, }, }, else, {, finished, =, true, ;, }, offset, =, offset, +, 1, ;, }, if, (, n]
[=, true, ;, }, offset, =, offset, +, 1, ;, }, if, (, n, >, 0, ), {, result, .]
[;, }, offset, =, offset, +, 1, ;, }, if, (, n, >, 0, ), {, result, ., add, (]
[=, offset, +, 1, ;, }, if, (, n, >, 0, ), {, result, ., add, (, x, ,, sum]
[;, }, if, (, n, >, 0, ), {, result, ., add, (, x, ,, sum, /, n, ), ;]
[+, 1, ;, }, if, (, n, >, 0, ), {, result, ., add, (, x, ,, sum, /, n]
[;, }, if, (, n, >, 0, ), {, result, ., add, (, x, ,, sum, /, n, ), ;]
[), {, result, ., add, (, x, ,, sum, /, n, ), ;, }, else, {, result, ., add, (]
[>, 0, ), {, result, ., add, (, x, ,, sum, /, n, ), ;, }, else, {, result, .]
[), {, result, ., add, (, x, ,, sum, /, n, ), ;, }, else, {, result, ., add, (]
[;, }, else, {, result, ., add, (, x, ,, null, ), ;, }, }, }, }, return, result, ;]
[., add, (, x, ,, sum, /, n, ), ;, }, else, {, result, ., add, (, x, ,, null]
[,, sum, /, n, ), ;, }, else, {, result, ., add, (, x, ,, null, ), ;, }, }]
[), ;, }, else, {, result, ., add, (, x, ,, null, ), ;, }, }, }, }, return, result]
[/, n, ), ;, }, else, {, result, ., add, (, x, ,, null, ), ;, }, }, }, }]
[), ;, }, else, {, result, ., add, (, x, ,, null, ), ;, }, }, }, }, return, result]
[;, }, }, }, }, return, result, ;, }, }]
[., add, (, x, ,, null, ), ;, }, }, }, }, return, result, ;, }, }]
[,, null, ), ;, }, }, }, }, return, result, ;, }, }]
[), ;, }, }, }, }, return, result, ;, }, }]
[;, }, }]
