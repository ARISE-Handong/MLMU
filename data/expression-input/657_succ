[;, private, String, outputEncoding, =, "UTF-8", ;, private, CompilationLevel, compilationLevel, ;, private, boolean, customExternsOnly, ;, private, boolean, manageDependencies, ;, private]
[;, private, CompilationLevel, compilationLevel, ;, private, boolean, customExternsOnly, ;, private, boolean, manageDependencies, ;, private, boolean, prettyPrint, ;, private, boolean, printInputDelimiter]
[=, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, this, ., debugOptions, =, false]
[., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, this, ., debugOptions]
[;, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, this, ., debugOptions, =, false, ;, this, ., compilationLevel, =, CompilationLevel]
[., ECMASCRIPT3, ;, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, this, ., debugOptions, =, false, ;, this, ., compilationLevel]
[., LanguageMode, ., ECMASCRIPT3, ;, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, this, ., debugOptions, =, false, ;, this]
[=, WarningLevel, ., DEFAULT, ;, this, ., debugOptions, =, false, ;, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this]
[., warningLevel, =, WarningLevel, ., DEFAULT, ;, this, ., debugOptions, =, false, ;, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS]
[;, this, ., debugOptions, =, false, ;, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false]
[., DEFAULT, ;, this, ., debugOptions, =, false, ;, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly]
[=, false, ;, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;, this, ., manageDependencies]
[., debugOptions, =, false, ;, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;, this]
[;, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;, this, ., manageDependencies, =, false]
[=, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;, this, ., manageDependencies, =, false, ;, this, ., prettyPrint]
[., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;, this, ., manageDependencies, =, false, ;, this]
[;, this, ., customExternsOnly, =, false, ;, this, ., manageDependencies, =, false, ;, this, ., prettyPrint, =, false, ;, this]
[., SIMPLE_OPTIMIZATIONS, ;, this, ., customExternsOnly, =, false, ;, this, ., manageDependencies, =, false, ;, this, ., prettyPrint, =, false]
[=, false, ;, this, ., manageDependencies, =, false, ;, this, ., prettyPrint, =, false, ;, this, ., printInputDelimiter, =, false]
[., customExternsOnly, =, false, ;, this, ., manageDependencies, =, false, ;, this, ., prettyPrint, =, false, ;, this, ., printInputDelimiter]
[;, this, ., manageDependencies, =, false, ;, this, ., prettyPrint, =, false, ;, this, ., printInputDelimiter, =, false, ;, this]
[=, false, ;, this, ., prettyPrint, =, false, ;, this, ., printInputDelimiter, =, false, ;, this, ., generateExports, =, false]
[., manageDependencies, =, false, ;, this, ., prettyPrint, =, false, ;, this, ., printInputDelimiter, =, false, ;, this, ., generateExports]
[;, this, ., prettyPrint, =, false, ;, this, ., printInputDelimiter, =, false, ;, this, ., generateExports, =, false, ;, this]
[=, false, ;, this, ., printInputDelimiter, =, false, ;, this, ., generateExports, =, false, ;, this, ., replaceProperties, =, false]
[., prettyPrint, =, false, ;, this, ., printInputDelimiter, =, false, ;, this, ., generateExports, =, false, ;, this, ., replaceProperties]
[;, this, ., printInputDelimiter, =, false, ;, this, ., generateExports, =, false, ;, this, ., replaceProperties, =, false, ;, this]
[=, false, ;, this, ., generateExports, =, false, ;, this, ., replaceProperties, =, false, ;, this, ., forceRecompile, =, false]
[., printInputDelimiter, =, false, ;, this, ., generateExports, =, false, ;, this, ., replaceProperties, =, false, ;, this, ., forceRecompile]
[;, this, ., generateExports, =, false, ;, this, ., replaceProperties, =, false, ;, this, ., forceRecompile, =, false, ;, this]
[=, false, ;, this, ., replaceProperties, =, false, ;, this, ., forceRecompile, =, false, ;, this, ., replacePropertiesPrefix, =, "closure.define."]
[., generateExports, =, false, ;, this, ., replaceProperties, =, false, ;, this, ., forceRecompile, =, false, ;, this, ., replacePropertiesPrefix]
[;, this, ., replaceProperties, =, false, ;, this, ., forceRecompile, =, false, ;, this, ., replacePropertiesPrefix, =, "closure.define.", ;, this]
[=, false, ;, this, ., forceRecompile, =, false, ;, this, ., replacePropertiesPrefix, =, "closure.define.", ;, this, ., defineParams, =, Lists]
[., replaceProperties, =, false, ;, this, ., forceRecompile, =, false, ;, this, ., replacePropertiesPrefix, =, "closure.define.", ;, this, ., defineParams]
[;, this, ., forceRecompile, =, false, ;, this, ., replacePropertiesPrefix, =, "closure.define.", ;, this, ., defineParams, =, Lists, ., newLinkedList]
[=, false, ;, this, ., replacePropertiesPrefix, =, "closure.define.", ;, this, ., defineParams, =, Lists, ., newLinkedList, (, ), ;, this]
[., forceRecompile, =, false, ;, this, ., replacePropertiesPrefix, =, "closure.define.", ;, this, ., defineParams, =, Lists, ., newLinkedList, (, )]
[;, this, ., replacePropertiesPrefix, =, "closure.define.", ;, this, ., defineParams, =, Lists, ., newLinkedList, (, ), ;, this, ., externFileLists]
[=, "closure.define.", ;, this, ., defineParams, =, Lists, ., newLinkedList, (, ), ;, this, ., externFileLists, =, Lists, ., newLinkedList]
[., replacePropertiesPrefix, =, "closure.define.", ;, this, ., defineParams, =, Lists, ., newLinkedList, (, ), ;, this, ., externFileLists, =, Lists]
[;, this, ., defineParams, =, Lists, ., newLinkedList, (, ), ;, this, ., externFileLists, =, Lists, ., newLinkedList, (, )]
[=, Lists, ., newLinkedList, (, ), ;, this, ., externFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourceFileLists]
[., defineParams, =, Lists, ., newLinkedList, (, ), ;, this, ., externFileLists, =, Lists, ., newLinkedList, (, ), ;, this]
[;, this, ., externFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourceFileLists, =, Lists, ., newLinkedList, (, )]
[., newLinkedList, (, ), ;, this, ., externFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourceFileLists, =, Lists]
[=, Lists, ., newLinkedList, (, ), ;, this, ., sourceFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourcePaths]
[., externFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourceFileLists, =, Lists, ., newLinkedList, (, ), ;, this]
[;, this, ., sourceFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourcePaths, =, Lists, ., newLinkedList, (, )]
[., newLinkedList, (, ), ;, this, ., sourceFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourcePaths, =, Lists]
[=, Lists, ., newLinkedList, (, ), ;, this, ., sourcePaths, =, Lists, ., newLinkedList, (, ), ;, this, ., warnings]
[., sourceFileLists, =, Lists, ., newLinkedList, (, ), ;, this, ., sourcePaths, =, Lists, ., newLinkedList, (, ), ;, this]
[;, this, ., sourcePaths, =, Lists, ., newLinkedList, (, ), ;, this, ., warnings, =, Lists, ., newLinkedList, (, )]
[., newLinkedList, (, ), ;, this, ., sourcePaths, =, Lists, ., newLinkedList, (, ), ;, this, ., warnings, =, Lists]
[=, Lists, ., newLinkedList, (, ), ;, this, ., warnings, =, Lists, ., newLinkedList, (, ), ;, }, public, void]
[., sourcePaths, =, Lists, ., newLinkedList, (, ), ;, this, ., warnings, =, Lists, ., newLinkedList, (, ), ;, }]
[;, this, ., warnings, =, Lists, ., newLinkedList, (, ), ;, }, public, void, setLanguageIn, (, String, value, ), {]
[., newLinkedList, (, ), ;, this, ., warnings, =, Lists, ., newLinkedList, (, ), ;, }, public, void, setLanguageIn, (]
[=, Lists, ., newLinkedList, (, ), ;, }, public, void, setLanguageIn, (, String, value, ), {, if, (, value, .]
[., warnings, =, Lists, ., newLinkedList, (, ), ;, }, public, void, setLanguageIn, (, String, value, ), {, if, (]
[;, }, public, void, setLanguageIn, (, String, value, ), {, if, (, value, ., equals, (, "ECMASCRIPT5_STRICT", ), ||, value]
[., newLinkedList, (, ), ;, }, public, void, setLanguageIn, (, String, value, ), {, if, (, value, ., equals, (]
[), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if, (, value, ., equals, (]
[||, value, ., equals, (, "ES5_STRICT", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }]
[., equals, (, "ECMASCRIPT5_STRICT", ), ||, value, ., equals, (, "ES5_STRICT", ), ), {, this, ., languageIn, =, CompilerOptions, .]
[), ||, value, ., equals, (, "ES5_STRICT", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;]
[), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if, (, value, ., equals, (]
[., equals, (, "ES5_STRICT", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if]
[), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if, (, value, ., equals]
[=, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT5", ), ||, value, .]
[., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT5", ), ||]
[;, }, else, if, (, value, ., equals, (, "ECMASCRIPT5", ), ||, value, ., equals, (, "ES5", ), ), {]
[., ECMASCRIPT5_STRICT, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT5", ), ||, value, ., equals, (, "ES5", )]
[., LanguageMode, ., ECMASCRIPT5_STRICT, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT5", ), ||, value, ., equals, (]
[), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;, }, else, if, (, value, ., equals, (]
[||, value, ., equals, (, "ES5", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;, }]
[., equals, (, "ECMASCRIPT5", ), ||, value, ., equals, (, "ES5", ), ), {, this, ., languageIn, =, CompilerOptions, .]
[), ||, value, ., equals, (, "ES5", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;]
[), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;, }, else, if, (, value, ., equals, (]
[., equals, (, "ES5", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;, }, else, if]
[), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;, }, else, if, (, value, ., equals]
[=, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT3", ), ||, value, .]
[., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT5, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT3", ), ||]
[;, }, else, if, (, value, ., equals, (, "ECMASCRIPT3", ), ||, value, ., equals, (, "ES3", ), ), {]
[., ECMASCRIPT5, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT3", ), ||, value, ., equals, (, "ES3", )]
[., LanguageMode, ., ECMASCRIPT5, ;, }, else, if, (, value, ., equals, (, "ECMASCRIPT3", ), ||, value, ., equals, (]
[), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'languageIn' option value ("]
[||, value, ., equals, (, "ES3", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, }]
[., equals, (, "ECMASCRIPT3", ), ||, value, ., equals, (, "ES3", ), ), {, this, ., languageIn, =, CompilerOptions, .]
[), ||, value, ., equals, (, "ES3", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;]
[), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'languageIn' option value ("]
[., equals, (, "ES3", ), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, }, else, {]
[), ), {, this, ., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, }, else, {, throw, new, BuildException, (]
[=, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'languageIn' option value (", +, value, +, ")", )]
[., languageIn, =, CompilerOptions, ., LanguageMode, ., ECMASCRIPT3, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'languageIn' option value (", +, value, +]
[;, }, else, {, throw, new, BuildException, (, "Unrecognized 'languageIn' option value (", +, value, +, ")", ), ;, }, }, public, void, setWarning]
[., ECMASCRIPT3, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'languageIn' option value (", +, value, +, ")", ), ;, }, }, public]
[., LanguageMode, ., ECMASCRIPT3, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'languageIn' option value (", +, value, +, ")", ), ;, }]
[;, }, }, public, void, setWarning, (, String, value, ), {, if, (, "default", ., equalsIgnoreCase, (, value, ), )]
[), ;, }, }, public, void, setWarning, (, String, value, ), {, if, (, "default", ., equalsIgnoreCase, (, value, )]
[+, ")", ), ;, }, }, public, void, setWarning, (, String, value, ), {, if, (, "default", ., equalsIgnoreCase, (]
[+, value, +, ")", ), ;, }, }, public, void, setWarning, (, String, value, ), {, if, (, "default", .]
[+, ")", ), ;, }, }, public, void, setWarning, (, String, value, ), {, if, (, "default", ., equalsIgnoreCase, (]
[), ;, }, }, public, void, setWarning, (, String, value, ), {, if, (, "default", ., equalsIgnoreCase, (, value, )]
[), {, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, }, else, if, (, "quiet", ., equalsIgnoreCase, (, value, )]
[., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, }, else, if, (, "quiet"]
[), ), {, this, ., warningLevel, =, WarningLevel, ., DEFAULT, ;, }, else, if, (, "quiet", ., equalsIgnoreCase, (, value]
[=, WarningLevel, ., DEFAULT, ;, }, else, if, (, "quiet", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel]
[., warningLevel, =, WarningLevel, ., DEFAULT, ;, }, else, if, (, "quiet", ., equalsIgnoreCase, (, value, ), ), {, this]
[;, }, else, if, (, "quiet", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =, WarningLevel, ., QUIET]
[., DEFAULT, ;, }, else, if, (, "quiet", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =, WarningLevel]
[), {, this, ., warningLevel, =, WarningLevel, ., QUIET, ;, }, else, if, (, "verbose", ., equalsIgnoreCase, (, value, )]
[., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =, WarningLevel, ., QUIET, ;, }, else, if, (, "verbose"]
[), ), {, this, ., warningLevel, =, WarningLevel, ., QUIET, ;, }, else, if, (, "verbose", ., equalsIgnoreCase, (, value]
[=, WarningLevel, ., QUIET, ;, }, else, if, (, "verbose", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel]
[., warningLevel, =, WarningLevel, ., QUIET, ;, }, else, if, (, "verbose", ., equalsIgnoreCase, (, value, ), ), {, this]
[;, }, else, if, (, "verbose", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =, WarningLevel, ., VERBOSE]
[., QUIET, ;, }, else, if, (, "verbose", ., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =, WarningLevel]
[), {, this, ., warningLevel, =, WarningLevel, ., VERBOSE, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, value]
[., equalsIgnoreCase, (, value, ), ), {, this, ., warningLevel, =, WarningLevel, ., VERBOSE, ;, }, else, {, throw, new]
[), ), {, this, ., warningLevel, =, WarningLevel, ., VERBOSE, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +]
[=, WarningLevel, ., VERBOSE, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, value, +, ")", ), ;, }]
[., warningLevel, =, WarningLevel, ., VERBOSE, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, value, +, ")", )]
[;, }, else, {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, value, +, ")", ), ;, }, }, public, void, setDebug]
[., VERBOSE, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, value, +, ")", ), ;, }, }, public]
[;, }, }, public, void, setDebug, (, boolean, value, ), {, this, ., debugOptions, =, value, ;, }, public, void]
[), ;, }, }, public, void, setDebug, (, boolean, value, ), {, this, ., debugOptions, =, value, ;, }, public]
[+, ")", ), ;, }, }, public, void, setDebug, (, boolean, value, ), {, this, ., debugOptions, =, value, ;]
[+, value, +, ")", ), ;, }, }, public, void, setDebug, (, boolean, value, ), {, this, ., debugOptions, =]
[+, ")", ), ;, }, }, public, void, setDebug, (, boolean, value, ), {, this, ., debugOptions, =, value, ;]
[), ;, }, }, public, void, setDebug, (, boolean, value, ), {, this, ., debugOptions, =, value, ;, }, public]
[=, value, ;, }, public, void, setCompilationLevel, (, String, value, ), {, if, (, "simple", ., equalsIgnoreCase, (, value, )]
[., debugOptions, =, value, ;, }, public, void, setCompilationLevel, (, String, value, ), {, if, (, "simple", ., equalsIgnoreCase, (]
[;, }, public, void, setCompilationLevel, (, String, value, ), {, if, (, "simple", ., equalsIgnoreCase, (, value, ), ), {]
[), {, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, }, else, if, (, "advanced", ., equalsIgnoreCase, (, value, )]
[., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, }, else, if, (, "advanced"]
[), ), {, this, ., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, }, else, if, (, "advanced", ., equalsIgnoreCase, (, value]
[=, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, }, else, if, (, "advanced", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel]
[., compilationLevel, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, }, else, if, (, "advanced", ., equalsIgnoreCase, (, value, ), ), {, this]
[;, }, else, if, (, "advanced", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., ADVANCED_OPTIMIZATIONS]
[., SIMPLE_OPTIMIZATIONS, ;, }, else, if, (, "advanced", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =, CompilationLevel]
[), {, this, ., compilationLevel, =, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ;, }, else, if, (, "whitespace", ., equalsIgnoreCase, (, value, )]
[., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ;, }, else, if, (, "whitespace"]
[), ), {, this, ., compilationLevel, =, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ;, }, else, if, (, "whitespace", ., equalsIgnoreCase, (, value]
[=, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ;, }, else, if, (, "whitespace", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel]
[., compilationLevel, =, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ;, }, else, if, (, "whitespace", ., equalsIgnoreCase, (, value, ), ), {, this]
[;, }, else, if, (, "whitespace", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., WHITESPACE_ONLY]
[., ADVANCED_OPTIMIZATIONS, ;, }, else, if, (, "whitespace", ., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =, CompilationLevel]
[), {, this, ., compilationLevel, =, CompilationLevel, ., WHITESPACE_ONLY, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'compilation' option value (", +, value]
[., equalsIgnoreCase, (, value, ), ), {, this, ., compilationLevel, =, CompilationLevel, ., WHITESPACE_ONLY, ;, }, else, {, throw, new]
[), ), {, this, ., compilationLevel, =, CompilationLevel, ., WHITESPACE_ONLY, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'compilation' option value (", +]
[=, CompilationLevel, ., WHITESPACE_ONLY, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'compilation' option value (", +, value, +, ")", ), ;, }]
[., compilationLevel, =, CompilationLevel, ., WHITESPACE_ONLY, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'compilation' option value (", +, value, +, ")", )]
[;, }, else, {, throw, new, BuildException, (, "Unrecognized 'compilation' option value (", +, value, +, ")", ), ;, }, }, public, void, setManageDependencies]
[., WHITESPACE_ONLY, ;, }, else, {, throw, new, BuildException, (, "Unrecognized 'compilation' option value (", +, value, +, ")", ), ;, }, }, public]
[;, }, }, public, void, setManageDependencies, (, boolean, value, ), {, this, ., manageDependencies, =, value, ;, }, public, void]
[), ;, }, }, public, void, setManageDependencies, (, boolean, value, ), {, this, ., manageDependencies, =, value, ;, }, public]
[+, ")", ), ;, }, }, public, void, setManageDependencies, (, boolean, value, ), {, this, ., manageDependencies, =, value, ;]
[+, value, +, ")", ), ;, }, }, public, void, setManageDependencies, (, boolean, value, ), {, this, ., manageDependencies, =]
[+, ")", ), ;, }, }, public, void, setManageDependencies, (, boolean, value, ), {, this, ., manageDependencies, =, value, ;]
[), ;, }, }, public, void, setManageDependencies, (, boolean, value, ), {, this, ., manageDependencies, =, value, ;, }, public]
[=, value, ;, }, public, void, setCustomExternsOnly, (, boolean, value, ), {, this, ., customExternsOnly, =, value, ;, }, public]
[., manageDependencies, =, value, ;, }, public, void, setCustomExternsOnly, (, boolean, value, ), {, this, ., customExternsOnly, =, value, ;]
[;, }, public, void, setCustomExternsOnly, (, boolean, value, ), {, this, ., customExternsOnly, =, value, ;, }, public, void, setOutput]
[=, value, ;, }, public, void, setOutput, (, File, value, ), {, this, ., outputFile, =, value, ;, }, public]
[., customExternsOnly, =, value, ;, }, public, void, setOutput, (, File, value, ), {, this, ., outputFile, =, value, ;]
[;, }, public, void, setOutput, (, File, value, ), {, this, ., outputFile, =, value, ;, }, public, void, setReplacePropertiesPrefix]
[=, value, ;, }, public, void, setReplacePropertiesPrefix, (, String, value, ), {, this, ., replacePropertiesPrefix, =, value, ;, }, public]
[., outputFile, =, value, ;, }, public, void, setReplacePropertiesPrefix, (, String, value, ), {, this, ., replacePropertiesPrefix, =, value, ;]
[;, }, public, void, setReplacePropertiesPrefix, (, String, value, ), {, this, ., replacePropertiesPrefix, =, value, ;, }, public, void, setReplaceProperties]
[=, value, ;, }, public, void, setReplaceProperties, (, boolean, value, ), {, this, ., replaceProperties, =, value, ;, }, public]
[., replacePropertiesPrefix, =, value, ;, }, public, void, setReplaceProperties, (, boolean, value, ), {, this, ., replaceProperties, =, value, ;]
[;, }, public, void, setReplaceProperties, (, boolean, value, ), {, this, ., replaceProperties, =, value, ;, }, public, void, setEncoding]
[=, value, ;, }, public, void, setEncoding, (, String, encoding, ), {, this, ., encoding, =, encoding, ;, }, public]
[., replaceProperties, =, value, ;, }, public, void, setEncoding, (, String, encoding, ), {, this, ., encoding, =, encoding, ;]
[;, }, public, void, setEncoding, (, String, encoding, ), {, this, ., encoding, =, encoding, ;, }, public, void, setOutputEncoding]
[=, encoding, ;, }, public, void, setOutputEncoding, (, String, outputEncoding, ), {, this, ., outputEncoding, =, outputEncoding, ;, }, public]
[., encoding, =, encoding, ;, }, public, void, setOutputEncoding, (, String, outputEncoding, ), {, this, ., outputEncoding, =, outputEncoding, ;]
[;, }, public, void, setOutputEncoding, (, String, outputEncoding, ), {, this, ., outputEncoding, =, outputEncoding, ;, }, public, void, setPrettyPrint]
[=, outputEncoding, ;, }, public, void, setPrettyPrint, (, boolean, pretty, ), {, this, ., prettyPrint, =, pretty, ;, }, public]
[., outputEncoding, =, outputEncoding, ;, }, public, void, setPrettyPrint, (, boolean, pretty, ), {, this, ., prettyPrint, =, pretty, ;]
[;, }, public, void, setPrettyPrint, (, boolean, pretty, ), {, this, ., prettyPrint, =, pretty, ;, }, public, void, setPrintInputDelimiter]
[=, pretty, ;, }, public, void, setPrintInputDelimiter, (, boolean, print, ), {, this, ., printInputDelimiter, =, print, ;, }, public]
[., prettyPrint, =, pretty, ;, }, public, void, setPrintInputDelimiter, (, boolean, print, ), {, this, ., printInputDelimiter, =, print, ;]
[;, }, public, void, setPrintInputDelimiter, (, boolean, print, ), {, this, ., printInputDelimiter, =, print, ;, }, public, void, setForceRecompile]
[=, print, ;, }, public, void, setForceRecompile, (, boolean, forceRecompile, ), {, this, ., forceRecompile, =, forceRecompile, ;, }, public]
[., printInputDelimiter, =, print, ;, }, public, void, setForceRecompile, (, boolean, forceRecompile, ), {, this, ., forceRecompile, =, forceRecompile, ;]
[;, }, public, void, setForceRecompile, (, boolean, forceRecompile, ), {, this, ., forceRecompile, =, forceRecompile, ;, }, public, void, setGenerateExports]
[=, forceRecompile, ;, }, public, void, setGenerateExports, (, boolean, generateExports, ), {, this, ., generateExports, =, generateExports, ;, }, public]
[., forceRecompile, =, forceRecompile, ;, }, public, void, setGenerateExports, (, boolean, generateExports, ), {, this, ., generateExports, =, generateExports, ;]
[;, }, public, void, setGenerateExports, (, boolean, generateExports, ), {, this, ., generateExports, =, generateExports, ;, }, public, void, addExterns]
[=, generateExports, ;, }, public, void, addExterns, (, FileList, list, ), {, this, ., externFileLists, ., add, (, list, )]
[., generateExports, =, generateExports, ;, }, public, void, addExterns, (, FileList, list, ), {, this, ., externFileLists, ., add, (]
[;, }, public, void, addExterns, (, FileList, list, ), {, this, ., externFileLists, ., add, (, list, ), ;, }]
[;, }, public, void, addWarning, (, Warning, warning, ), {, this, ., warnings, ., add, (, warning, ), ;, }]
[., add, (, list, ), ;, }, public, void, addWarning, (, Warning, warning, ), {, this, ., warnings, ., add]
[., externFileLists, ., add, (, list, ), ;, }, public, void, addWarning, (, Warning, warning, ), {, this, ., warnings]
[), ;, }, public, void, addWarning, (, Warning, warning, ), {, this, ., warnings, ., add, (, warning, ), ;]
[;, }, public, void, addSources, (, FileList, list, ), {, this, ., sourceFileLists, ., add, (, list, ), ;, }]
[., add, (, warning, ), ;, }, public, void, addSources, (, FileList, list, ), {, this, ., sourceFileLists, ., add]
[., warnings, ., add, (, warning, ), ;, }, public, void, addSources, (, FileList, list, ), {, this, ., sourceFileLists]
[), ;, }, public, void, addSources, (, FileList, list, ), {, this, ., sourceFileLists, ., add, (, list, ), ;]
[;, }, public, void, addPath, (, Path, list, ), {, this, ., sourcePaths, ., add, (, list, ), ;, }]
[., add, (, list, ), ;, }, public, void, addPath, (, Path, list, ), {, this, ., sourcePaths, ., add]
[., sourceFileLists, ., add, (, list, ), ;, }, public, void, addPath, (, Path, list, ), {, this, ., sourcePaths]
[), ;, }, public, void, addPath, (, Path, list, ), {, this, ., sourcePaths, ., add, (, list, ), ;]
[;, }, @, Override, public, void, execute, (, ), {, if, (, this, ., outputFile, ==, null, ), {, throw]
[., add, (, list, ), ;, }, @, Override, public, void, execute, (, ), {, if, (, this, ., outputFile]
[., sourcePaths, ., add, (, list, ), ;, }, @, Override, public, void, execute, (, ), {, if, (, this]
[), ;, }, @, Override, public, void, execute, (, ), {, if, (, this, ., outputFile, ==, null, ), {]
[), {, throw, new, BuildException, (, "outputFile attribute must be set", ), ;, }, Compiler, ., setLoggingLevel, (, Level, ., OFF, ), ;, CompilerOptions]
[==, null, ), {, throw, new, BuildException, (, "outputFile attribute must be set", ), ;, }, Compiler, ., setLoggingLevel, (, Level, ., OFF, )]
[., outputFile, ==, null, ), {, throw, new, BuildException, (, "outputFile attribute must be set", ), ;, }, Compiler, ., setLoggingLevel, (, Level, .]
[), {, throw, new, BuildException, (, "outputFile attribute must be set", ), ;, }, Compiler, ., setLoggingLevel, (, Level, ., OFF, ), ;, CompilerOptions]
[;, }, Compiler, ., setLoggingLevel, (, Level, ., OFF, ), ;, CompilerOptions, options, =, createCompilerOptions, (, ), ;, Compiler, compiler]
[), ;, }, Compiler, ., setLoggingLevel, (, Level, ., OFF, ), ;, CompilerOptions, options, =, createCompilerOptions, (, ), ;, Compiler]
[;, CompilerOptions, options, =, createCompilerOptions, (, ), ;, Compiler, compiler, =, createCompiler, (, options, ), ;, List, <, SourceFile, >]
[., setLoggingLevel, (, Level, ., OFF, ), ;, CompilerOptions, options, =, createCompilerOptions, (, ), ;, Compiler, compiler, =, createCompiler, (]
[), ;, CompilerOptions, options, =, createCompilerOptions, (, ), ;, Compiler, compiler, =, createCompiler, (, options, ), ;, List, <, SourceFile]
[., OFF, ), ;, CompilerOptions, options, =, createCompilerOptions, (, ), ;, Compiler, compiler, =, createCompiler, (, options, ), ;, List]
[;, Compiler, compiler, =, createCompiler, (, options, ), ;, List, <, SourceFile, >, externs, =, findExternFiles, (, ), ;, List]
[;, List, <, SourceFile, >, externs, =, findExternFiles, (, ), ;, List, <, SourceFile, >, sources, =, findSourceFiles, (, )]
[), ;, List, <, SourceFile, >, externs, =, findExternFiles, (, ), ;, List, <, SourceFile, >, sources, =, findSourceFiles, (]
[;, List, <, SourceFile, >, sources, =, findSourceFiles, (, ), ;, if, (, isStale, (, ), ||, forceRecompile, ), {]
[;, if, (, isStale, (, ), ||, forceRecompile, ), {, log, (, "Compiling ", +, sources, ., size, (, ), +]
[), {, log, (, "Compiling ", +, sources, ., size, (, ), +, " file(s) with ", +, externs, ., size, (, ), +]
[||, forceRecompile, ), {, log, (, "Compiling ", +, sources, ., size, (, ), +, " file(s) with ", +, externs, ., size, (]
[), {, log, (, "Compiling ", +, sources, ., size, (, ), +, " file(s) with ", +, externs, ., size, (, ), +]
[;, Result, result, =, compiler, ., compile, (, externs, ,, sources, ,, options, ), ;, if, (, result, ., success]
[), ;, Result, result, =, compiler, ., compile, (, externs, ,, sources, ,, options, ), ;, if, (, result, .]
[+, " extern(s)", ), ;, Result, result, =, compiler, ., compile, (, externs, ,, sources, ,, options, ), ;, if, (]
[+, externs, ., size, (, ), +, " extern(s)", ), ;, Result, result, =, compiler, ., compile, (, externs, ,, sources]
[+, " file(s) with ", +, externs, ., size, (, ), +, " extern(s)", ), ;, Result, result, =, compiler, ., compile, (, externs]
[+, sources, ., size, (, ), +, " file(s) with ", +, externs, ., size, (, ), +, " extern(s)", ), ;, Result, result]
[+, " file(s) with ", +, externs, ., size, (, ), +, " extern(s)", ), ;, Result, result, =, compiler, ., compile, (, externs]
[., size, (, ), +, " file(s) with ", +, externs, ., size, (, ), +, " extern(s)", ), ;, Result, result, =, compiler]
[+, externs, ., size, (, ), +, " extern(s)", ), ;, Result, result, =, compiler, ., compile, (, externs, ,, sources]
[+, " extern(s)", ), ;, Result, result, =, compiler, ., compile, (, externs, ,, sources, ,, options, ), ;, if, (]
[., size, (, ), +, " extern(s)", ), ;, Result, result, =, compiler, ., compile, (, externs, ,, sources, ,, options]
[), ;, Result, result, =, compiler, ., compile, (, externs, ,, sources, ,, options, ), ;, if, (, result, .]
[;, if, (, result, ., success, ), {, writeResult, (, compiler, ., toSource, (, ), ), ;, }, else, {]
[., compile, (, externs, ,, sources, ,, options, ), ;, if, (, result, ., success, ), {, writeResult, (, compiler]
[,, sources, ,, options, ), ;, if, (, result, ., success, ), {, writeResult, (, compiler, ., toSource, (, )]
[,, options, ), ;, if, (, result, ., success, ), {, writeResult, (, compiler, ., toSource, (, ), ), ;]
[), ;, if, (, result, ., success, ), {, writeResult, (, compiler, ., toSource, (, ), ), ;, }, else]
[), {, writeResult, (, compiler, ., toSource, (, ), ), ;, }, else, {, throw, new, BuildException, (, "Compilation failed.", )]
[., success, ), {, writeResult, (, compiler, ., toSource, (, ), ), ;, }, else, {, throw, new, BuildException, (]
[;, }, else, {, throw, new, BuildException, (, "Compilation failed.", ), ;, }, }, else, {, log, (, "None of the files changed. Compilation skipped.", ), ;]
[), ;, }, else, {, throw, new, BuildException, (, "Compilation failed.", ), ;, }, }, else, {, log, (, "None of the files changed. Compilation skipped.", )]
[., toSource, (, ), ), ;, }, else, {, throw, new, BuildException, (, "Compilation failed.", ), ;, }, }, else, {]
[;, }, }, else, {, log, (, "None of the files changed. Compilation skipped.", ), ;, }, }, private, CompilerOptions, createCompilerOptions, (, ), {, CompilerOptions, options]
[), ;, }, }, else, {, log, (, "None of the files changed. Compilation skipped.", ), ;, }, }, private, CompilerOptions, createCompilerOptions, (, ), {, CompilerOptions]
[;, }, }, private, CompilerOptions, createCompilerOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, this, ., compilationLevel]
[), ;, }, }, private, CompilerOptions, createCompilerOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, this, .]
[;, this, ., compilationLevel, ., setOptionsForCompilationLevel, (, options, ), ;, if, (, this, ., debugOptions, ), {, this, ., compilationLevel]
[;, if, (, this, ., debugOptions, ), {, this, ., compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, options, .]
[., setOptionsForCompilationLevel, (, options, ), ;, if, (, this, ., debugOptions, ), {, this, ., compilationLevel, ., setDebugOptionsForCompilationLevel, (, options]
[., compilationLevel, ., setOptionsForCompilationLevel, (, options, ), ;, if, (, this, ., debugOptions, ), {, this, ., compilationLevel, ., setDebugOptionsForCompilationLevel]
[), ;, if, (, this, ., debugOptions, ), {, this, ., compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, options]
[), {, this, ., compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, options, ., prettyPrint, =, this, ., prettyPrint, ;]
[., debugOptions, ), {, this, ., compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, options, ., prettyPrint, =, this, .]
[;, }, options, ., prettyPrint, =, this, ., prettyPrint, ;, options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;, options, .]
[., setDebugOptionsForCompilationLevel, (, options, ), ;, }, options, ., prettyPrint, =, this, ., prettyPrint, ;, options, ., printInputDelimiter, =, this]
[., compilationLevel, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, options, ., prettyPrint, =, this, ., prettyPrint, ;, options, ., printInputDelimiter]
[), ;, }, options, ., prettyPrint, =, this, ., prettyPrint, ;, options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;, options]
[=, this, ., prettyPrint, ;, options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;, options, ., generateExports, =, this, ., generateExports]
[., prettyPrint, =, this, ., prettyPrint, ;, options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;, options, ., generateExports, =, this]
[;, options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;, options, ., generateExports, =, this, ., generateExports, ;, options, ., setLanguageIn]
[., prettyPrint, ;, options, ., printInputDelimiter, =, this, ., printInputDelimiter, ;, options, ., generateExports, =, this, ., generateExports, ;, options]
[=, this, ., printInputDelimiter, ;, options, ., generateExports, =, this, ., generateExports, ;, options, ., setLanguageIn, (, this, ., languageIn]
[., printInputDelimiter, =, this, ., printInputDelimiter, ;, options, ., generateExports, =, this, ., generateExports, ;, options, ., setLanguageIn, (, this]
[;, options, ., generateExports, =, this, ., generateExports, ;, options, ., setLanguageIn, (, this, ., languageIn, ), ;, this, .]
[., printInputDelimiter, ;, options, ., generateExports, =, this, ., generateExports, ;, options, ., setLanguageIn, (, this, ., languageIn, ), ;]
[=, this, ., generateExports, ;, options, ., setLanguageIn, (, this, ., languageIn, ), ;, this, ., warningLevel, ., setOptionsForWarningLevel, (]
[., generateExports, =, this, ., generateExports, ;, options, ., setLanguageIn, (, this, ., languageIn, ), ;, this, ., warningLevel, .]
[;, options, ., setLanguageIn, (, this, ., languageIn, ), ;, this, ., warningLevel, ., setOptionsForWarningLevel, (, options, ), ;, options]
[., generateExports, ;, options, ., setLanguageIn, (, this, ., languageIn, ), ;, this, ., warningLevel, ., setOptionsForWarningLevel, (, options, )]
[;, this, ., warningLevel, ., setOptionsForWarningLevel, (, options, ), ;, options, ., setManageClosureDependencies, (, manageDependencies, ), ;, if, (, replaceProperties]
[., setLanguageIn, (, this, ., languageIn, ), ;, this, ., warningLevel, ., setOptionsForWarningLevel, (, options, ), ;, options, ., setManageClosureDependencies]
[), ;, this, ., warningLevel, ., setOptionsForWarningLevel, (, options, ), ;, options, ., setManageClosureDependencies, (, manageDependencies, ), ;, if, (]
[., languageIn, ), ;, this, ., warningLevel, ., setOptionsForWarningLevel, (, options, ), ;, options, ., setManageClosureDependencies, (, manageDependencies, ), ;]
[;, options, ., setManageClosureDependencies, (, manageDependencies, ), ;, if, (, replaceProperties, ), {, convertPropertiesMap, (, options, ), ;, }, convertDefineParameters]
[., setOptionsForWarningLevel, (, options, ), ;, options, ., setManageClosureDependencies, (, manageDependencies, ), ;, if, (, replaceProperties, ), {, convertPropertiesMap, (]
[., warningLevel, ., setOptionsForWarningLevel, (, options, ), ;, options, ., setManageClosureDependencies, (, manageDependencies, ), ;, if, (, replaceProperties, ), {]
[), ;, options, ., setManageClosureDependencies, (, manageDependencies, ), ;, if, (, replaceProperties, ), {, convertPropertiesMap, (, options, ), ;, }]
[;, if, (, replaceProperties, ), {, convertPropertiesMap, (, options, ), ;, }, convertDefineParameters, (, options, ), ;, for, (, Warning]
[., setManageClosureDependencies, (, manageDependencies, ), ;, if, (, replaceProperties, ), {, convertPropertiesMap, (, options, ), ;, }, convertDefineParameters, (, options]
[), ;, if, (, replaceProperties, ), {, convertPropertiesMap, (, options, ), ;, }, convertDefineParameters, (, options, ), ;, for, (]
[), {, convertPropertiesMap, (, options, ), ;, }, convertDefineParameters, (, options, ), ;, for, (, Warning, warning, :, warnings, )]
[;, }, convertDefineParameters, (, options, ), ;, for, (, Warning, warning, :, warnings, ), {, CheckLevel, level, =, warning, .]
[), ;, }, convertDefineParameters, (, options, ), ;, for, (, Warning, warning, :, warnings, ), {, CheckLevel, level, =, warning]
[;, for, (, Warning, warning, :, warnings, ), {, CheckLevel, level, =, warning, ., getLevel, (, ), ;, String, groupName]
[), ;, for, (, Warning, warning, :, warnings, ), {, CheckLevel, level, =, warning, ., getLevel, (, ), ;, String]
[), {, CheckLevel, level, =, warning, ., getLevel, (, ), ;, String, groupName, =, warning, ., getGroup, (, ), ;]
[;, String, groupName, =, warning, ., getGroup, (, ), ;, DiagnosticGroup, group, =, new, DiagnosticGroups, (, ), ., forName, (]
[., getLevel, (, ), ;, String, groupName, =, warning, ., getGroup, (, ), ;, DiagnosticGroup, group, =, new, DiagnosticGroups, (]
[;, DiagnosticGroup, group, =, new, DiagnosticGroups, (, ), ., forName, (, groupName, ), ;, if, (, group, ==, null, )]
[., getGroup, (, ), ;, DiagnosticGroup, group, =, new, DiagnosticGroups, (, ), ., forName, (, groupName, ), ;, if, (]
[;, if, (, group, ==, null, ), {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, groupName, +, ")", ), ;, }]
[., forName, (, groupName, ), ;, if, (, group, ==, null, ), {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, groupName]
[), ;, if, (, group, ==, null, ), {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, groupName, +, ")", ), ;]
[), {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, groupName, +, ")", ), ;, }, options, ., setWarningLevel, (, group, ,]
[==, null, ), {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, groupName, +, ")", ), ;, }, options, ., setWarningLevel, (]
[), {, throw, new, BuildException, (, "Unrecognized 'warning' option value (", +, groupName, +, ")", ), ;, }, options, ., setWarningLevel, (, group, ,]
[;, }, options, ., setWarningLevel, (, group, ,, level, ), ;, }, return, options, ;, }, public, Parameter, createDefine, (]
[), ;, }, options, ., setWarningLevel, (, group, ,, level, ), ;, }, return, options, ;, }, public, Parameter, createDefine]
[+, ")", ), ;, }, options, ., setWarningLevel, (, group, ,, level, ), ;, }, return, options, ;, }, public]
[+, groupName, +, ")", ), ;, }, options, ., setWarningLevel, (, group, ,, level, ), ;, }, return, options, ;]
[+, ")", ), ;, }, options, ., setWarningLevel, (, group, ,, level, ), ;, }, return, options, ;, }, public]
[), ;, }, options, ., setWarningLevel, (, group, ,, level, ), ;, }, return, options, ;, }, public, Parameter, createDefine]
[;, }, return, options, ;, }, public, Parameter, createDefine, (, ), {, Parameter, param, =, new, Parameter, (, ), ;]
[., setWarningLevel, (, group, ,, level, ), ;, }, return, options, ;, }, public, Parameter, createDefine, (, ), {, Parameter]
[,, level, ), ;, }, return, options, ;, }, public, Parameter, createDefine, (, ), {, Parameter, param, =, new, Parameter]
[), ;, }, return, options, ;, }, public, Parameter, createDefine, (, ), {, Parameter, param, =, new, Parameter, (, )]
[;, }, public, Parameter, createDefine, (, ), {, Parameter, param, =, new, Parameter, (, ), ;, defineParams, ., add, (]
[;, defineParams, ., add, (, param, ), ;, return, param, ;, }, private, void, convertDefineParameters, (, CompilerOptions, options, ), {]
[;, return, param, ;, }, private, void, convertDefineParameters, (, CompilerOptions, options, ), {, for, (, Parameter, p, :, defineParams, )]
[., add, (, param, ), ;, return, param, ;, }, private, void, convertDefineParameters, (, CompilerOptions, options, ), {, for, (]
[), ;, return, param, ;, }, private, void, convertDefineParameters, (, CompilerOptions, options, ), {, for, (, Parameter, p, :, defineParams]
[;, }, private, void, convertDefineParameters, (, CompilerOptions, options, ), {, for, (, Parameter, p, :, defineParams, ), {, String, key]
[), {, String, key, =, p, ., getName, (, ), ;, Object, value, =, p, ., getValue, (, ), ;]
[;, Object, value, =, p, ., getValue, (, ), ;, if, (, !, setDefine, (, options, ,, key, ,, value]
[., getName, (, ), ;, Object, value, =, p, ., getValue, (, ), ;, if, (, !, setDefine, (, options]
[;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (, "Unexpected @define value for name=", +, key, +]
[., getValue, (, ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (]
[), {, log, (, "Unexpected @define value for name=", +, key, +, "; value=", +, value, ), ;, }, }, }, private, void, convertPropertiesMap, (]
[), {, log, (, "Unexpected @define value for name=", +, key, +, "; value=", +, value, ), ;, }, }, }, private, void, convertPropertiesMap, (]
[,, key, ,, value, ), ), {, log, (, "Unexpected @define value for name=", +, key, +, "; value=", +, value, ), ;, }, }]
[,, value, ), ), {, log, (, "Unexpected @define value for name=", +, key, +, "; value=", +, value, ), ;, }, }, }, private]
[), ), {, log, (, "Unexpected @define value for name=", +, key, +, "; value=", +, value, ), ;, }, }, }, private, void, convertPropertiesMap]
[;, }, }, }, private, void, convertPropertiesMap, (, CompilerOptions, options, ), {, @, SuppressWarnings, (, "unchecked", ), Map, <, String]
[), ;, }, }, }, private, void, convertPropertiesMap, (, CompilerOptions, options, ), {, @, SuppressWarnings, (, "unchecked", ), Map, <]
[+, value, ), ;, }, }, }, private, void, convertPropertiesMap, (, CompilerOptions, options, ), {, @, SuppressWarnings, (, "unchecked", )]
[+, "; value=", +, value, ), ;, }, }, }, private, void, convertPropertiesMap, (, CompilerOptions, options, ), {, @, SuppressWarnings, (]
[+, key, +, "; value=", +, value, ), ;, }, }, }, private, void, convertPropertiesMap, (, CompilerOptions, options, ), {, @]
[+, "; value=", +, value, ), ;, }, }, }, private, void, convertPropertiesMap, (, CompilerOptions, options, ), {, @, SuppressWarnings, (]
[+, value, ), ;, }, }, }, private, void, convertPropertiesMap, (, CompilerOptions, options, ), {, @, SuppressWarnings, (, "unchecked", )]
[), ;, }, }, }, private, void, convertPropertiesMap, (, CompilerOptions, options, ), {, @, SuppressWarnings, (, "unchecked", ), Map, <]
[Map, <, String, ,, Object, >, props, =, getProject, (, ), ., getProperties, (, ), ;, for, (, Map, .]
[), Map, <, String, ,, Object, >, props, =, getProject, (, ), ., getProperties, (, ), ;, for, (, Map]
[;, for, (, Map, ., Entry, <, String, ,, Object, >, entry, :, props, ., entrySet, (, ), ), {]
[., getProperties, (, ), ;, for, (, Map, ., Entry, <, String, ,, Object, >, entry, :, props, ., entrySet]
[), {, String, key, =, entry, ., getKey, (, ), ;, Object, value, =, entry, ., getValue, (, ), ;]
[., entrySet, (, ), ), {, String, key, =, entry, ., getKey, (, ), ;, Object, value, =, entry, .]
[;, Object, value, =, entry, ., getValue, (, ), ;, if, (, key, ., startsWith, (, replacePropertiesPrefix, ), ), {]
[., getKey, (, ), ;, Object, value, =, entry, ., getValue, (, ), ;, if, (, key, ., startsWith, (]
[;, if, (, key, ., startsWith, (, replacePropertiesPrefix, ), ), {, key, =, key, ., substring, (, replacePropertiesPrefix, ., length]
[., getValue, (, ), ;, if, (, key, ., startsWith, (, replacePropertiesPrefix, ), ), {, key, =, key, ., substring]
[), {, key, =, key, ., substring, (, replacePropertiesPrefix, ., length, (, ), ), ;, if, (, !, setDefine, (]
[., startsWith, (, replacePropertiesPrefix, ), ), {, key, =, key, ., substring, (, replacePropertiesPrefix, ., length, (, ), ), ;]
[), ), {, key, =, key, ., substring, (, replacePropertiesPrefix, ., length, (, ), ), ;, if, (, !, setDefine]
[=, key, ., substring, (, replacePropertiesPrefix, ., length, (, ), ), ;, if, (, !, setDefine, (, options, ,, key]
[;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (, "Unexpected property value for key=", +, key, +]
[., substring, (, replacePropertiesPrefix, ., length, (, ), ), ;, if, (, !, setDefine, (, options, ,, key, ,, value]
[), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log, (, "Unexpected property value for key=", +, key]
[., length, (, ), ), ;, if, (, !, setDefine, (, options, ,, key, ,, value, ), ), {, log]
[), {, log, (, "Unexpected property value for key=", +, key, +, "; value=", +, value, ), ;, }, }, }, }, private, boolean, setDefine]
[), {, log, (, "Unexpected property value for key=", +, key, +, "; value=", +, value, ), ;, }, }, }, }, private, boolean, setDefine]
[,, key, ,, value, ), ), {, log, (, "Unexpected property value for key=", +, key, +, "; value=", +, value, ), ;, }, }]
[,, value, ), ), {, log, (, "Unexpected property value for key=", +, key, +, "; value=", +, value, ), ;, }, }, }, }]
[), ), {, log, (, "Unexpected property value for key=", +, key, +, "; value=", +, value, ), ;, }, }, }, }, private, boolean]
[;, }, }, }, }, private, boolean, setDefine, (, CompilerOptions, options, ,, String, key, ,, Object, value, ), {, boolean]
[), ;, }, }, }, }, private, boolean, setDefine, (, CompilerOptions, options, ,, String, key, ,, Object, value, ), {]
[+, value, ), ;, }, }, }, }, private, boolean, setDefine, (, CompilerOptions, options, ,, String, key, ,, Object, value]
[+, "; value=", +, value, ), ;, }, }, }, }, private, boolean, setDefine, (, CompilerOptions, options, ,, String, key, ,]
[+, key, +, "; value=", +, value, ), ;, }, }, }, }, private, boolean, setDefine, (, CompilerOptions, options, ,, String]
[+, "; value=", +, value, ), ;, }, }, }, }, private, boolean, setDefine, (, CompilerOptions, options, ,, String, key, ,]
[+, value, ), ;, }, }, }, }, private, boolean, setDefine, (, CompilerOptions, options, ,, String, key, ,, Object, value]
[), ;, }, }, }, }, private, boolean, setDefine, (, CompilerOptions, options, ,, String, key, ,, Object, value, ), {]
[;, if, (, value, instanceof, String, ), {, final, boolean, isTrue, =, "true", ., equals, (, value, ), ;, final]
[), {, final, boolean, isTrue, =, "true", ., equals, (, value, ), ;, final, boolean, isFalse, =, "false", ., equals]
[instanceof, String, ), {, final, boolean, isTrue, =, "true", ., equals, (, value, ), ;, final, boolean, isFalse, =, "false"]
[;, final, boolean, isFalse, =, "false", ., equals, (, value, ), ;, if, (, isTrue, ||, isFalse, ), {, options]
[., equals, (, value, ), ;, final, boolean, isFalse, =, "false", ., equals, (, value, ), ;, if, (, isTrue]
[), ;, final, boolean, isFalse, =, "false", ., equals, (, value, ), ;, if, (, isTrue, ||, isFalse, ), {]
[;, if, (, isTrue, ||, isFalse, ), {, options, ., setDefineToBooleanLiteral, (, key, ,, isTrue, ), ;, }, else, {]
[., equals, (, value, ), ;, if, (, isTrue, ||, isFalse, ), {, options, ., setDefineToBooleanLiteral, (, key, ,, isTrue]
[), ;, if, (, isTrue, ||, isFalse, ), {, options, ., setDefineToBooleanLiteral, (, key, ,, isTrue, ), ;, }, else]
[), {, options, ., setDefineToBooleanLiteral, (, key, ,, isTrue, ), ;, }, else, {, try, {, double, dblTemp, =, Double]
[||, isFalse, ), {, options, ., setDefineToBooleanLiteral, (, key, ,, isTrue, ), ;, }, else, {, try, {, double, dblTemp]
[), {, options, ., setDefineToBooleanLiteral, (, key, ,, isTrue, ), ;, }, else, {, try, {, double, dblTemp, =, Double]
[;, }, else, {, try, {, double, dblTemp, =, Double, ., parseDouble, (, (, String, ), value, ), ;, options]
[., setDefineToBooleanLiteral, (, key, ,, isTrue, ), ;, }, else, {, try, {, double, dblTemp, =, Double, ., parseDouble, (]
[,, isTrue, ), ;, }, else, {, try, {, double, dblTemp, =, Double, ., parseDouble, (, (, String, ), value]
[), ;, }, else, {, try, {, double, dblTemp, =, Double, ., parseDouble, (, (, String, ), value, ), ;]
[;, options, ., setDefineToDoubleLiteral, (, key, ,, dblTemp, ), ;, }, catch, (, NumberFormatException, nfe, ), {, options, ., setDefineToStringLiteral]
[., parseDouble, (, (, String, ), value, ), ;, options, ., setDefineToDoubleLiteral, (, key, ,, dblTemp, ), ;, }, catch]
[), ;, options, ., setDefineToDoubleLiteral, (, key, ,, dblTemp, ), ;, }, catch, (, NumberFormatException, nfe, ), {, options, .]
[), ;, options, ., setDefineToDoubleLiteral, (, key, ,, dblTemp, ), ;, }, catch, (, NumberFormatException, nfe, ), {, options, .]
[;, }, catch, (, NumberFormatException, nfe, ), {, options, ., setDefineToStringLiteral, (, key, ,, (, String, ), value, ), ;]
[., setDefineToDoubleLiteral, (, key, ,, dblTemp, ), ;, }, catch, (, NumberFormatException, nfe, ), {, options, ., setDefineToStringLiteral, (, key]
[,, dblTemp, ), ;, }, catch, (, NumberFormatException, nfe, ), {, options, ., setDefineToStringLiteral, (, key, ,, (, String, )]
[), ;, }, catch, (, NumberFormatException, nfe, ), {, options, ., setDefineToStringLiteral, (, key, ,, (, String, ), value, )]
[;, }, }, success, =, true, ;, }, else, if, (, value, instanceof, Boolean, ), {, options, ., setDefineToBooleanLiteral, (]
[., setDefineToStringLiteral, (, key, ,, (, String, ), value, ), ;, }, }, success, =, true, ;, }, else, if]
[,, (, String, ), value, ), ;, }, }, success, =, true, ;, }, else, if, (, value, instanceof, Boolean]
[), ;, }, }, success, =, true, ;, }, else, if, (, value, instanceof, Boolean, ), {, options, ., setDefineToBooleanLiteral]
[), ;, }, }, success, =, true, ;, }, else, if, (, value, instanceof, Boolean, ), {, options, ., setDefineToBooleanLiteral]
[=, true, ;, }, else, if, (, value, instanceof, Boolean, ), {, options, ., setDefineToBooleanLiteral, (, key, ,, (, Boolean]
[;, }, else, if, (, value, instanceof, Boolean, ), {, options, ., setDefineToBooleanLiteral, (, key, ,, (, Boolean, ), value]
[), {, options, ., setDefineToBooleanLiteral, (, key, ,, (, Boolean, ), value, ), ;, success, =, true, ;, }, else]
[instanceof, Boolean, ), {, options, ., setDefineToBooleanLiteral, (, key, ,, (, Boolean, ), value, ), ;, success, =, true, ;]
[;, success, =, true, ;, }, else, if, (, value, instanceof, Integer, ), {, options, ., setDefineToNumberLiteral, (, key, ,]
[., setDefineToBooleanLiteral, (, key, ,, (, Boolean, ), value, ), ;, success, =, true, ;, }, else, if, (, value]
[,, (, Boolean, ), value, ), ;, success, =, true, ;, }, else, if, (, value, instanceof, Integer, ), {]
[), ;, success, =, true, ;, }, else, if, (, value, instanceof, Integer, ), {, options, ., setDefineToNumberLiteral, (, key]
[), ;, success, =, true, ;, }, else, if, (, value, instanceof, Integer, ), {, options, ., setDefineToNumberLiteral, (, key]
[=, true, ;, }, else, if, (, value, instanceof, Integer, ), {, options, ., setDefineToNumberLiteral, (, key, ,, (, Integer]
[;, }, else, if, (, value, instanceof, Integer, ), {, options, ., setDefineToNumberLiteral, (, key, ,, (, Integer, ), value]
[), {, options, ., setDefineToNumberLiteral, (, key, ,, (, Integer, ), value, ), ;, success, =, true, ;, }, else]
[instanceof, Integer, ), {, options, ., setDefineToNumberLiteral, (, key, ,, (, Integer, ), value, ), ;, success, =, true, ;]
[;, success, =, true, ;, }, else, if, (, value, instanceof, Double, ), {, options, ., setDefineToDoubleLiteral, (, key, ,]
[., setDefineToNumberLiteral, (, key, ,, (, Integer, ), value, ), ;, success, =, true, ;, }, else, if, (, value]
[,, (, Integer, ), value, ), ;, success, =, true, ;, }, else, if, (, value, instanceof, Double, ), {]
[), ;, success, =, true, ;, }, else, if, (, value, instanceof, Double, ), {, options, ., setDefineToDoubleLiteral, (, key]
[), ;, success, =, true, ;, }, else, if, (, value, instanceof, Double, ), {, options, ., setDefineToDoubleLiteral, (, key]
[=, true, ;, }, else, if, (, value, instanceof, Double, ), {, options, ., setDefineToDoubleLiteral, (, key, ,, (, Double]
[;, }, else, if, (, value, instanceof, Double, ), {, options, ., setDefineToDoubleLiteral, (, key, ,, (, Double, ), value]
[), {, options, ., setDefineToDoubleLiteral, (, key, ,, (, Double, ), value, ), ;, success, =, true, ;, }, return]
[instanceof, Double, ), {, options, ., setDefineToDoubleLiteral, (, key, ,, (, Double, ), value, ), ;, success, =, true, ;]
[;, success, =, true, ;, }, return, success, ;, }, private, Compiler, createCompiler, (, CompilerOptions, options, ), {, Compiler, compiler]
[., setDefineToDoubleLiteral, (, key, ,, (, Double, ), value, ), ;, success, =, true, ;, }, return, success, ;, }]
[,, (, Double, ), value, ), ;, success, =, true, ;, }, return, success, ;, }, private, Compiler, createCompiler, (]
[), ;, success, =, true, ;, }, return, success, ;, }, private, Compiler, createCompiler, (, CompilerOptions, options, ), {, Compiler]
[), ;, success, =, true, ;, }, return, success, ;, }, private, Compiler, createCompiler, (, CompilerOptions, options, ), {, Compiler]
[=, true, ;, }, return, success, ;, }, private, Compiler, createCompiler, (, CompilerOptions, options, ), {, Compiler, compiler, =, new]
[;, }, return, success, ;, }, private, Compiler, createCompiler, (, CompilerOptions, options, ), {, Compiler, compiler, =, new, Compiler, (]
[;, }, private, Compiler, createCompiler, (, CompilerOptions, options, ), {, Compiler, compiler, =, new, Compiler, (, ), ;, MessageFormatter, formatter]
[;, MessageFormatter, formatter, =, options, ., errorFormat, ., toFormatter, (, compiler, ,, false, ), ;, AntErrorManager, errorManager, =, new, AntErrorManager]
[;, AntErrorManager, errorManager, =, new, AntErrorManager, (, formatter, ,, this, ), ;, compiler, ., setErrorManager, (, errorManager, ), ;, return]
[., toFormatter, (, compiler, ,, false, ), ;, AntErrorManager, errorManager, =, new, AntErrorManager, (, formatter, ,, this, ), ;, compiler]
[., errorFormat, ., toFormatter, (, compiler, ,, false, ), ;, AntErrorManager, errorManager, =, new, AntErrorManager, (, formatter, ,, this, )]
[,, false, ), ;, AntErrorManager, errorManager, =, new, AntErrorManager, (, formatter, ,, this, ), ;, compiler, ., setErrorManager, (, errorManager]
[), ;, AntErrorManager, errorManager, =, new, AntErrorManager, (, formatter, ,, this, ), ;, compiler, ., setErrorManager, (, errorManager, ), ;]
[;, compiler, ., setErrorManager, (, errorManager, ), ;, return, compiler, ;, }, private, List, <, SourceFile, >, findExternFiles, (, )]
[,, this, ), ;, compiler, ., setErrorManager, (, errorManager, ), ;, return, compiler, ;, }, private, List, <, SourceFile, >]
[), ;, compiler, ., setErrorManager, (, errorManager, ), ;, return, compiler, ;, }, private, List, <, SourceFile, >, findExternFiles, (]
[;, return, compiler, ;, }, private, List, <, SourceFile, >, findExternFiles, (, ), {, List, <, SourceFile, >, files, =]
[., setErrorManager, (, errorManager, ), ;, return, compiler, ;, }, private, List, <, SourceFile, >, findExternFiles, (, ), {, List]
[), ;, return, compiler, ;, }, private, List, <, SourceFile, >, findExternFiles, (, ), {, List, <, SourceFile, >, files]
[;, }, private, List, <, SourceFile, >, findExternFiles, (, ), {, List, <, SourceFile, >, files, =, Lists, ., newLinkedList]
[;, if, (, !, this, ., customExternsOnly, ), {, files, ., addAll, (, getDefaultExterns, (, ), ), ;, }, for]
[., newLinkedList, (, ), ;, if, (, !, this, ., customExternsOnly, ), {, files, ., addAll, (, getDefaultExterns, (, )]
[), {, files, ., addAll, (, getDefaultExterns, (, ), ), ;, }, for, (, FileList, list, :, this, ., externFileLists]
[), {, files, ., addAll, (, getDefaultExterns, (, ), ), ;, }, for, (, FileList, list, :, this, ., externFileLists]
[., customExternsOnly, ), {, files, ., addAll, (, getDefaultExterns, (, ), ), ;, }, for, (, FileList, list, :, this]
[;, }, for, (, FileList, list, :, this, ., externFileLists, ), {, files, ., addAll, (, findJavaScriptFiles, (, list, )]
[., addAll, (, getDefaultExterns, (, ), ), ;, }, for, (, FileList, list, :, this, ., externFileLists, ), {, files]
[), ;, }, for, (, FileList, list, :, this, ., externFileLists, ), {, files, ., addAll, (, findJavaScriptFiles, (, list]
[), {, files, ., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, return, files, ;, }, private, List, <]
[., externFileLists, ), {, files, ., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, return, files, ;, }, private]
[;, }, return, files, ;, }, private, List, <, SourceFile, >, findSourceFiles, (, ), {, List, <, SourceFile, >, files]
[., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >, findSourceFiles]
[), ;, }, return, files, ;, }, private, List, <, SourceFile, >, findSourceFiles, (, ), {, List, <, SourceFile, >]
[), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >, findSourceFiles, (, ), {, List, <, SourceFile]
[;, }, private, List, <, SourceFile, >, findSourceFiles, (, ), {, List, <, SourceFile, >, files, =, Lists, ., newLinkedList]
[;, for, (, FileList, list, :, this, ., sourceFileLists, ), {, files, ., addAll, (, findJavaScriptFiles, (, list, ), )]
[., newLinkedList, (, ), ;, for, (, FileList, list, :, this, ., sourceFileLists, ), {, files, ., addAll, (, findJavaScriptFiles]
[), {, files, ., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, for, (, Path, list, :, this, .]
[., sourceFileLists, ), {, files, ., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, for, (, Path, list, :]
[;, }, for, (, Path, list, :, this, ., sourcePaths, ), {, files, ., addAll, (, findJavaScriptFiles, (, list, )]
[., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, for, (, Path, list, :, this, ., sourcePaths, ), {]
[), ;, }, for, (, Path, list, :, this, ., sourcePaths, ), {, files, ., addAll, (, findJavaScriptFiles, (, list]
[), ), ;, }, for, (, Path, list, :, this, ., sourcePaths, ), {, files, ., addAll, (, findJavaScriptFiles, (]
[), {, files, ., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, return, files, ;, }, private, List, <]
[., sourcePaths, ), {, files, ., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, return, files, ;, }, private]
[;, }, return, files, ;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (, FileList, fileList, ), {, List, <, SourceFile]
[., addAll, (, findJavaScriptFiles, (, list, ), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >, findJavaScriptFiles]
[), ;, }, return, files, ;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (, FileList, fileList, ), {, List, <]
[), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (, FileList, fileList, ), {, List]
[;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (, FileList, fileList, ), {, List, <, SourceFile, >, files, =, Lists]
[;, File, baseDir, =, fileList, ., getDir, (, getProject, (, ), ), ;, for, (, String, included, :, fileList, .]
[., newLinkedList, (, ), ;, File, baseDir, =, fileList, ., getDir, (, getProject, (, ), ), ;, for, (, String]
[;, for, (, String, included, :, fileList, ., getFiles, (, getProject, (, ), ), ), {, files, ., add, (]
[., getDir, (, getProject, (, ), ), ;, for, (, String, included, :, fileList, ., getFiles, (, getProject, (, )]
[), ;, for, (, String, included, :, fileList, ., getFiles, (, getProject, (, ), ), ), {, files, ., add]
[), {, files, ., add, (, SourceFile, ., fromFile, (, new, File, (, baseDir, ,, included, ), ,, Charset, .]
[., getFiles, (, getProject, (, ), ), ), {, files, ., add, (, SourceFile, ., fromFile, (, new, File, (]
[), ), {, files, ., add, (, SourceFile, ., fromFile, (, new, File, (, baseDir, ,, included, ), ,, Charset]
[;, }, return, files, ;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (, Path, path, ), {, List, <, SourceFile]
[., add, (, SourceFile, ., fromFile, (, new, File, (, baseDir, ,, included, ), ,, Charset, ., forName, (, encoding]
[), ;, }, return, files, ;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (, Path, path, ), {, List, <]
[., fromFile, (, new, File, (, baseDir, ,, included, ), ,, Charset, ., forName, (, encoding, ), ), ), ;]
[,, Charset, ., forName, (, encoding, ), ), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >]
[,, included, ), ,, Charset, ., forName, (, encoding, ), ), ), ;, }, return, files, ;, }, private, List]
[), ,, Charset, ., forName, (, encoding, ), ), ), ;, }, return, files, ;, }, private, List, <, SourceFile]
[), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (, Path, path, ), {, List]
[., forName, (, encoding, ), ), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (]
[), ), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (, Path, path, ), {]
[;, }, private, List, <, SourceFile, >, findJavaScriptFiles, (, Path, path, ), {, List, <, SourceFile, >, files, =, Lists]
[;, for, (, String, included, :, path, ., list, (, ), ), {, files, ., add, (, SourceFile, ., fromFile]
[., newArrayList, (, ), ;, for, (, String, included, :, path, ., list, (, ), ), {, files, ., add]
[), {, files, ., add, (, SourceFile, ., fromFile, (, new, File, (, included, ), ,, Charset, ., forName, (]
[., list, (, ), ), {, files, ., add, (, SourceFile, ., fromFile, (, new, File, (, included, ), ,]
[;, }, return, files, ;, }, private, List, <, SourceFile, >, getDefaultExterns, (, ), {, try, {, return, CommandLineRunner, .]
[., add, (, SourceFile, ., fromFile, (, new, File, (, included, ), ,, Charset, ., forName, (, encoding, ), )]
[), ;, }, return, files, ;, }, private, List, <, SourceFile, >, getDefaultExterns, (, ), {, try, {, return, CommandLineRunner]
[., fromFile, (, new, File, (, included, ), ,, Charset, ., forName, (, encoding, ), ), ), ;, }, return]
[,, Charset, ., forName, (, encoding, ), ), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >]
[), ,, Charset, ., forName, (, encoding, ), ), ), ;, }, return, files, ;, }, private, List, <, SourceFile]
[), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >, getDefaultExterns, (, ), {, try, {, return]
[., forName, (, encoding, ), ), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >, getDefaultExterns, (]
[), ), ), ;, }, return, files, ;, }, private, List, <, SourceFile, >, getDefaultExterns, (, ), {, try, {]
[;, }, private, List, <, SourceFile, >, getDefaultExterns, (, ), {, try, {, return, CommandLineRunner, ., getDefaultExterns, (, ), ;]
[;, }, catch, (, IOException, e, ), {, throw, new, BuildException, (, e, ), ;, }, }, private, void, writeResult]
[., getDefaultExterns, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, BuildException, (, e, ), ;, }]
[;, }, }, private, void, writeResult, (, String, source, ), {, if, (, this, ., outputFile, ., getParentFile, (, )]
[), ;, }, }, private, void, writeResult, (, String, source, ), {, if, (, this, ., outputFile, ., getParentFile, (]
[), {, log, (, "Created missing parent directory ", +, this, ., outputFile, ., getParentFile, (, ), ,, Project, ., MSG_DEBUG, ), ;, }]
[., mkdirs, (, ), ), {, log, (, "Created missing parent directory ", +, this, ., outputFile, ., getParentFile, (, ), ,, Project, .]
[., getParentFile, (, ), ., mkdirs, (, ), ), {, log, (, "Created missing parent directory ", +, this, ., outputFile, ., getParentFile, (]
[., outputFile, ., getParentFile, (, ), ., mkdirs, (, ), ), {, log, (, "Created missing parent directory ", +, this, ., outputFile, .]
[;, }, try, {, OutputStreamWriter, out, =, new, OutputStreamWriter, (, new, FileOutputStream, (, this, ., outputFile, ), ,, outputEncoding, )]
[,, Project, ., MSG_DEBUG, ), ;, }, try, {, OutputStreamWriter, out, =, new, OutputStreamWriter, (, new, FileOutputStream, (, this, .]
[+, this, ., outputFile, ., getParentFile, (, ), ,, Project, ., MSG_DEBUG, ), ;, }, try, {, OutputStreamWriter, out, =]
[,, Project, ., MSG_DEBUG, ), ;, }, try, {, OutputStreamWriter, out, =, new, OutputStreamWriter, (, new, FileOutputStream, (, this, .]
[., getParentFile, (, ), ,, Project, ., MSG_DEBUG, ), ;, }, try, {, OutputStreamWriter, out, =, new, OutputStreamWriter, (, new]
[., outputFile, ., getParentFile, (, ), ,, Project, ., MSG_DEBUG, ), ;, }, try, {, OutputStreamWriter, out, =, new, OutputStreamWriter]
[), ;, }, try, {, OutputStreamWriter, out, =, new, OutputStreamWriter, (, new, FileOutputStream, (, this, ., outputFile, ), ,, outputEncoding]
[., MSG_DEBUG, ), ;, }, try, {, OutputStreamWriter, out, =, new, OutputStreamWriter, (, new, FileOutputStream, (, this, ., outputFile, )]
[;, out, ., append, (, source, ), ;, out, ., flush, (, ), ;, out, ., close, (, ), ;]
[,, outputEncoding, ), ;, out, ., append, (, source, ), ;, out, ., flush, (, ), ;, out, ., close]
[), ,, outputEncoding, ), ;, out, ., append, (, source, ), ;, out, ., flush, (, ), ;, out, .]
[., outputFile, ), ,, outputEncoding, ), ;, out, ., append, (, source, ), ;, out, ., flush, (, ), ;]
[), ;, out, ., append, (, source, ), ;, out, ., flush, (, ), ;, out, ., close, (, )]
[;, out, ., flush, (, ), ;, out, ., close, (, ), ;, }, catch, (, IOException, e, ), {]
[., append, (, source, ), ;, out, ., flush, (, ), ;, out, ., close, (, ), ;, }, catch]
[), ;, out, ., flush, (, ), ;, out, ., close, (, ), ;, }, catch, (, IOException, e, )]
[;, out, ., close, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, BuildException, (, e, )]
[., flush, (, ), ;, out, ., close, (, ), ;, }, catch, (, IOException, e, ), {, throw, new]
[;, }, catch, (, IOException, e, ), {, throw, new, BuildException, (, e, ), ;, }, log, (, "Compiled JavaScript written to ", +]
[., close, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, BuildException, (, e, ), ;, }]
[;, }, log, (, "Compiled JavaScript written to ", +, this, ., outputFile, ., getAbsolutePath, (, ), ,, Project, ., MSG_DEBUG, ), ;, }]
[), ;, }, log, (, "Compiled JavaScript written to ", +, this, ., outputFile, ., getAbsolutePath, (, ), ,, Project, ., MSG_DEBUG, ), ;]
[;, }, private, boolean, isStale, (, ), {, long, lastRun, =, outputFile, ., lastModified, (, ), ;, long, sourcesLastModified, =]
[,, Project, ., MSG_DEBUG, ), ;, }, private, boolean, isStale, (, ), {, long, lastRun, =, outputFile, ., lastModified, (]
[+, this, ., outputFile, ., getAbsolutePath, (, ), ,, Project, ., MSG_DEBUG, ), ;, }, private, boolean, isStale, (, )]
[,, Project, ., MSG_DEBUG, ), ;, }, private, boolean, isStale, (, ), {, long, lastRun, =, outputFile, ., lastModified, (]
[., getAbsolutePath, (, ), ,, Project, ., MSG_DEBUG, ), ;, }, private, boolean, isStale, (, ), {, long, lastRun, =]
[., outputFile, ., getAbsolutePath, (, ), ,, Project, ., MSG_DEBUG, ), ;, }, private, boolean, isStale, (, ), {, long]
[), ;, }, private, boolean, isStale, (, ), {, long, lastRun, =, outputFile, ., lastModified, (, ), ;, long, sourcesLastModified]
[., MSG_DEBUG, ), ;, }, private, boolean, isStale, (, ), {, long, lastRun, =, outputFile, ., lastModified, (, ), ;]
[;, long, sourcesLastModified, =, Math, ., max, (, getLastModifiedTime, (, this, ., sourceFileLists, ), ,, getLastModifiedTime, (, this, ., sourcePaths]
[., lastModified, (, ), ;, long, sourcesLastModified, =, Math, ., max, (, getLastModifiedTime, (, this, ., sourceFileLists, ), ,, getLastModifiedTime]
[;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists, ), ;, return, lastRun, <=, sourcesLastModified, ||, lastRun, <=, externsLastModified, ;]
[., max, (, getLastModifiedTime, (, this, ., sourceFileLists, ), ,, getLastModifiedTime, (, this, ., sourcePaths, ), ), ;, long, externsLastModified]
[,, getLastModifiedTime, (, this, ., sourcePaths, ), ), ;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists, ), ;, return]
[), ,, getLastModifiedTime, (, this, ., sourcePaths, ), ), ;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists, ), ;]
[., sourceFileLists, ), ,, getLastModifiedTime, (, this, ., sourcePaths, ), ), ;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists]
[), ;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists, ), ;, return, lastRun, <=, sourcesLastModified, ||, lastRun, <=, externsLastModified]
[), ), ;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists, ), ;, return, lastRun, <=, sourcesLastModified, ||, lastRun, <=]
[., sourcePaths, ), ), ;, long, externsLastModified, =, getLastModifiedTime, (, this, ., externFileLists, ), ;, return, lastRun, <=, sourcesLastModified, ||]
[;, return, lastRun, <=, sourcesLastModified, ||, lastRun, <=, externsLastModified, ;, }, private, long, getLastModifiedTime, (, List, <, ?, >, fileLists]
[), ;, return, lastRun, <=, sourcesLastModified, ||, lastRun, <=, externsLastModified, ;, }, private, long, getLastModifiedTime, (, List, <, ?, >]
[., externFileLists, ), ;, return, lastRun, <=, sourcesLastModified, ||, lastRun, <=, externsLastModified, ;, }, private, long, getLastModifiedTime, (, List, <]
[;, }, private, long, getLastModifiedTime, (, List, <, ?, >, fileLists, ), {, long, lastModified, =, 0, ;, for, (]
[||, lastRun, <=, externsLastModified, ;, }, private, long, getLastModifiedTime, (, List, <, ?, >, fileLists, ), {, long, lastModified, =]
[<=, sourcesLastModified, ||, lastRun, <=, externsLastModified, ;, }, private, long, getLastModifiedTime, (, List, <, ?, >, fileLists, ), {, long]
[||, lastRun, <=, externsLastModified, ;, }, private, long, getLastModifiedTime, (, List, <, ?, >, fileLists, ), {, long, lastModified, =]
[;, }, private, long, getLastModifiedTime, (, List, <, ?, >, fileLists, ), {, long, lastModified, =, 0, ;, for, (]
[<=, externsLastModified, ;, }, private, long, getLastModifiedTime, (, List, <, ?, >, fileLists, ), {, long, lastModified, =, 0, ;]
[;, }, private, long, getLastModifiedTime, (, List, <, ?, >, fileLists, ), {, long, lastModified, =, 0, ;, for, (]
[;, for, (, Object, entry, :, fileLists, ), {, if, (, entry, instanceof, FileList, ), {, FileList, list, =, (]
[), {, if, (, entry, instanceof, FileList, ), {, FileList, list, =, (, FileList, ), entry, ;, for, (, String]
[), {, FileList, list, =, (, FileList, ), entry, ;, for, (, String, fileName, :, list, ., getFiles, (, this]
[instanceof, FileList, ), {, FileList, list, =, (, FileList, ), entry, ;, for, (, String, fileName, :, list, ., getFiles]
[;, for, (, String, fileName, :, list, ., getFiles, (, this, ., getProject, (, ), ), ), {, File, path]
[;, for, (, String, fileName, :, list, ., getFiles, (, this, ., getProject, (, ), ), ), {, File, path]
[), {, File, path, =, list, ., getDir, (, this, ., getProject, (, ), ), ;, File, file, =, new]
[., getFiles, (, this, ., getProject, (, ), ), ), {, File, path, =, list, ., getDir, (, this, .]
[), ), {, File, path, =, list, ., getDir, (, this, ., getProject, (, ), ), ;, File, file, =]
[., getProject, (, ), ), ), {, File, path, =, list, ., getDir, (, this, ., getProject, (, ), )]
[;, File, file, =, new, File, (, path, ,, fileName, ), ;, lastModified, =, Math, ., max, (, getLastModifiedTime, (]
[., getDir, (, this, ., getProject, (, ), ), ;, File, file, =, new, File, (, path, ,, fileName, )]
[), ;, File, file, =, new, File, (, path, ,, fileName, ), ;, lastModified, =, Math, ., max, (, getLastModifiedTime]
[., getProject, (, ), ), ;, File, file, =, new, File, (, path, ,, fileName, ), ;, lastModified, =, Math]
[;, lastModified, =, Math, ., max, (, getLastModifiedTime, (, file, ), ,, lastModified, ), ;, }, }, else, if, (]
[,, fileName, ), ;, lastModified, =, Math, ., max, (, getLastModifiedTime, (, file, ), ,, lastModified, ), ;, }, }]
[), ;, lastModified, =, Math, ., max, (, getLastModifiedTime, (, file, ), ,, lastModified, ), ;, }, }, else, if]
[=, Math, ., max, (, getLastModifiedTime, (, file, ), ,, lastModified, ), ;, }, }, else, if, (, entry, instanceof]
[;, }, }, else, if, (, entry, instanceof, Path, ), {, Path, path, =, (, Path, ), entry, ;, for]
[., max, (, getLastModifiedTime, (, file, ), ,, lastModified, ), ;, }, }, else, if, (, entry, instanceof, Path, )]
[,, lastModified, ), ;, }, }, else, if, (, entry, instanceof, Path, ), {, Path, path, =, (, Path, )]
[), ,, lastModified, ), ;, }, }, else, if, (, entry, instanceof, Path, ), {, Path, path, =, (, Path]
[), ;, }, }, else, if, (, entry, instanceof, Path, ), {, Path, path, =, (, Path, ), entry, ;]
[), {, Path, path, =, (, Path, ), entry, ;, for, (, String, src, :, path, ., list, (, )]
[instanceof, Path, ), {, Path, path, =, (, Path, ), entry, ;, for, (, String, src, :, path, ., list]
[;, for, (, String, src, :, path, ., list, (, ), ), {, File, file, =, new, File, (, src]
[;, for, (, String, src, :, path, ., list, (, ), ), {, File, file, =, new, File, (, src]
[), {, File, file, =, new, File, (, src, ), ;, lastModified, =, Math, ., max, (, getLastModifiedTime, (, file]
[., list, (, ), ), {, File, file, =, new, File, (, src, ), ;, lastModified, =, Math, ., max]
[;, lastModified, =, Math, ., max, (, getLastModifiedTime, (, file, ), ,, lastModified, ), ;, }, }, }, return, lastModified]
[), ;, lastModified, =, Math, ., max, (, getLastModifiedTime, (, file, ), ,, lastModified, ), ;, }, }, }, return]
[=, Math, ., max, (, getLastModifiedTime, (, file, ), ,, lastModified, ), ;, }, }, }, return, lastModified, ;, }]
[;, }, }, }, return, lastModified, ;, }, private, long, getLastModifiedTime, (, File, file, ), {, long, fileLastModified, =, file]
[., max, (, getLastModifiedTime, (, file, ), ,, lastModified, ), ;, }, }, }, return, lastModified, ;, }, private, long]
[,, lastModified, ), ;, }, }, }, return, lastModified, ;, }, private, long, getLastModifiedTime, (, File, file, ), {, long]
[), ,, lastModified, ), ;, }, }, }, return, lastModified, ;, }, private, long, getLastModifiedTime, (, File, file, ), {]
[), ;, }, }, }, return, lastModified, ;, }, private, long, getLastModifiedTime, (, File, file, ), {, long, fileLastModified, =]
[;, }, private, long, getLastModifiedTime, (, File, file, ), {, long, fileLastModified, =, file, ., lastModified, (, ), ;, if]
[;, if, (, fileLastModified, ==, 0, ), {, fileLastModified, =, new, Date, (, ), ., getTime, (, ), ;, }]
[., lastModified, (, ), ;, if, (, fileLastModified, ==, 0, ), {, fileLastModified, =, new, Date, (, ), ., getTime]
[), {, fileLastModified, =, new, Date, (, ), ., getTime, (, ), ;, }, return, fileLastModified, ;, }, }]
[==, 0, ), {, fileLastModified, =, new, Date, (, ), ., getTime, (, ), ;, }, return, fileLastModified, ;, }]
[), {, fileLastModified, =, new, Date, (, ), ., getTime, (, ), ;, }, return, fileLastModified, ;, }, }]
[=, new, Date, (, ), ., getTime, (, ), ;, }, return, fileLastModified, ;, }, }]
[;, }, return, fileLastModified, ;, }, }]
[., getTime, (, ), ;, }, return, fileLastModified, ;, }, }]
[;, }, }]
