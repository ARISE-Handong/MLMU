[;, public, AdamsMoultonIntegrator, (, final, int, nSteps, ,, final, double, minStep, ,, final, double, maxStep, ,, final, double, scalAbsoluteTolerance, ,]
[,, nSteps, ,, nSteps, +, 1, ,, minStep, ,, maxStep, ,, scalAbsoluteTolerance, ,, scalRelativeTolerance, ), ;, }, public, AdamsMoultonIntegrator, (]
[,, nSteps, +, 1, ,, minStep, ,, maxStep, ,, scalAbsoluteTolerance, ,, scalRelativeTolerance, ), ;, }, public, AdamsMoultonIntegrator, (, final, int]
[,, minStep, ,, maxStep, ,, scalAbsoluteTolerance, ,, scalRelativeTolerance, ), ;, }, public, AdamsMoultonIntegrator, (, final, int, nSteps, ,, final, double]
[+, 1, ,, minStep, ,, maxStep, ,, scalAbsoluteTolerance, ,, scalRelativeTolerance, ), ;, }, public, AdamsMoultonIntegrator, (, final, int, nSteps, ,]
[,, minStep, ,, maxStep, ,, scalAbsoluteTolerance, ,, scalRelativeTolerance, ), ;, }, public, AdamsMoultonIntegrator, (, final, int, nSteps, ,, final, double]
[,, maxStep, ,, scalAbsoluteTolerance, ,, scalRelativeTolerance, ), ;, }, public, AdamsMoultonIntegrator, (, final, int, nSteps, ,, final, double, minStep, ,]
[,, scalAbsoluteTolerance, ,, scalRelativeTolerance, ), ;, }, public, AdamsMoultonIntegrator, (, final, int, nSteps, ,, final, double, minStep, ,, final, double]
[,, scalRelativeTolerance, ), ;, }, public, AdamsMoultonIntegrator, (, final, int, nSteps, ,, final, double, minStep, ,, final, double, maxStep, ,]
[), ;, }, public, AdamsMoultonIntegrator, (, final, int, nSteps, ,, final, double, minStep, ,, final, double, maxStep, ,, final, double]
[,, nSteps, ,, nSteps, +, 1, ,, minStep, ,, maxStep, ,, vecAbsoluteTolerance, ,, vecRelativeTolerance, ), ;, }, @, Override, public]
[,, nSteps, +, 1, ,, minStep, ,, maxStep, ,, vecAbsoluteTolerance, ,, vecRelativeTolerance, ), ;, }, @, Override, public, void, integrate]
[,, minStep, ,, maxStep, ,, vecAbsoluteTolerance, ,, vecRelativeTolerance, ), ;, }, @, Override, public, void, integrate, (, final, ExpandableStatefulODE, equations]
[+, 1, ,, minStep, ,, maxStep, ,, vecAbsoluteTolerance, ,, vecRelativeTolerance, ), ;, }, @, Override, public, void, integrate, (, final]
[,, minStep, ,, maxStep, ,, vecAbsoluteTolerance, ,, vecRelativeTolerance, ), ;, }, @, Override, public, void, integrate, (, final, ExpandableStatefulODE, equations]
[,, maxStep, ,, vecAbsoluteTolerance, ,, vecRelativeTolerance, ), ;, }, @, Override, public, void, integrate, (, final, ExpandableStatefulODE, equations, ,, final]
[,, vecAbsoluteTolerance, ,, vecRelativeTolerance, ), ;, }, @, Override, public, void, integrate, (, final, ExpandableStatefulODE, equations, ,, final, double, t]
[,, vecRelativeTolerance, ), ;, }, @, Override, public, void, integrate, (, final, ExpandableStatefulODE, equations, ,, final, double, t, ), throws]
[), ;, }, @, Override, public, void, integrate, (, final, ExpandableStatefulODE, equations, ,, final, double, t, ), throws, NumberIsTooSmallException, ,]
[;, setEquations, (, equations, ), ;, final, boolean, forward, =, t, >, equations, ., getTime, (, ), ;, final, double]
[,, t, ), ;, setEquations, (, equations, ), ;, final, boolean, forward, =, t, >, equations, ., getTime, (, )]
[), ;, setEquations, (, equations, ), ;, final, boolean, forward, =, t, >, equations, ., getTime, (, ), ;, final]
[;, final, boolean, forward, =, t, >, equations, ., getTime, (, ), ;, final, double, [, ], y0, =, equations]
[), ;, final, boolean, forward, =, t, >, equations, ., getTime, (, ), ;, final, double, [, ], y0, =]
[;, final, double, [, ], y0, =, equations, ., getCompleteState, (, ), ;, final, double, [, ], y, =, y0]
[>, equations, ., getTime, (, ), ;, final, double, [, ], y0, =, equations, ., getCompleteState, (, ), ;, final]
[;, final, double, [, ], y0, =, equations, ., getCompleteState, (, ), ;, final, double, [, ], y, =, y0]
[., getTime, (, ), ;, final, double, [, ], y0, =, equations, ., getCompleteState, (, ), ;, final, double, []
[;, final, double, [, ], y, =, y0, ., clone, (, ), ;, final, double, [, ], yDot, =, new]
[., getCompleteState, (, ), ;, final, double, [, ], y, =, y0, ., clone, (, ), ;, final, double, []
[;, final, double, [, ], yDot, =, new, double, [, y, ., length, ], ;, final, double, [, ], yTmp]
[., clone, (, ), ;, final, double, [, ], yDot, =, new, double, [, y, ., length, ], ;, final]
[;, final, double, [, ], yTmp, =, new, double, [, y, ., length, ], ;, final, double, [, ], predictedScaled]
[], ;, final, double, [, ], yTmp, =, new, double, [, y, ., length, ], ;, final, double, [, ]]
[., length, ], ;, final, double, [, ], yTmp, =, new, double, [, y, ., length, ], ;, final, double]
[;, final, double, [, ], predictedScaled, =, new, double, [, y, ., length, ], ;, Array2DRowRealMatrix, nordsieckTmp, =, null, ;]
[], ;, final, double, [, ], predictedScaled, =, new, double, [, y, ., length, ], ;, Array2DRowRealMatrix, nordsieckTmp, =, null]
[., length, ], ;, final, double, [, ], predictedScaled, =, new, double, [, y, ., length, ], ;, Array2DRowRealMatrix, nordsieckTmp]
[;, Array2DRowRealMatrix, nordsieckTmp, =, null, ;, final, NordsieckStepInterpolator, interpolator, =, new, NordsieckStepInterpolator, (, ), ;, interpolator, ., reinitialize, (, y]
[], ;, Array2DRowRealMatrix, nordsieckTmp, =, null, ;, final, NordsieckStepInterpolator, interpolator, =, new, NordsieckStepInterpolator, (, ), ;, interpolator, ., reinitialize, (]
[., length, ], ;, Array2DRowRealMatrix, nordsieckTmp, =, null, ;, final, NordsieckStepInterpolator, interpolator, =, new, NordsieckStepInterpolator, (, ), ;, interpolator, .]
[;, final, NordsieckStepInterpolator, interpolator, =, new, NordsieckStepInterpolator, (, ), ;, interpolator, ., reinitialize, (, y, ,, forward, ,, equations, .]
[;, interpolator, ., reinitialize, (, y, ,, forward, ,, equations, ., getPrimaryMapper, (, ), ,, equations, ., getSecondaryMappers, (, )]
[;, initIntegration, (, equations, ., getTime, (, ), ,, y0, ,, t, ), ;, start, (, equations, ., getTime, (]
[., reinitialize, (, y, ,, forward, ,, equations, ., getPrimaryMapper, (, ), ,, equations, ., getSecondaryMappers, (, ), ), ;]
[,, forward, ,, equations, ., getPrimaryMapper, (, ), ,, equations, ., getSecondaryMappers, (, ), ), ;, initIntegration, (, equations, .]
[,, equations, ., getPrimaryMapper, (, ), ,, equations, ., getSecondaryMappers, (, ), ), ;, initIntegration, (, equations, ., getTime, (]
[,, equations, ., getSecondaryMappers, (, ), ), ;, initIntegration, (, equations, ., getTime, (, ), ,, y0, ,, t, )]
[., getPrimaryMapper, (, ), ,, equations, ., getSecondaryMappers, (, ), ), ;, initIntegration, (, equations, ., getTime, (, ), ,]
[), ;, initIntegration, (, equations, ., getTime, (, ), ,, y0, ,, t, ), ;, start, (, equations, ., getTime]
[., getSecondaryMappers, (, ), ), ;, initIntegration, (, equations, ., getTime, (, ), ,, y0, ,, t, ), ;, start]
[;, start, (, equations, ., getTime, (, ), ,, y, ,, t, ), ;, interpolator, ., reinitialize, (, stepStart, ,]
[,, y0, ,, t, ), ;, start, (, equations, ., getTime, (, ), ,, y, ,, t, ), ;, interpolator]
[., getTime, (, ), ,, y0, ,, t, ), ;, start, (, equations, ., getTime, (, ), ,, y, ,]
[,, t, ), ;, start, (, equations, ., getTime, (, ), ,, y, ,, t, ), ;, interpolator, ., reinitialize]
[), ;, start, (, equations, ., getTime, (, ), ,, y, ,, t, ), ;, interpolator, ., reinitialize, (, stepStart]
[;, interpolator, ., reinitialize, (, stepStart, ,, stepSize, ,, scaled, ,, nordsieck, ), ;, interpolator, ., storeTime, (, stepStart, )]
[,, y, ,, t, ), ;, interpolator, ., reinitialize, (, stepStart, ,, stepSize, ,, scaled, ,, nordsieck, ), ;, interpolator]
[., getTime, (, ), ,, y, ,, t, ), ;, interpolator, ., reinitialize, (, stepStart, ,, stepSize, ,, scaled, ,]
[,, t, ), ;, interpolator, ., reinitialize, (, stepStart, ,, stepSize, ,, scaled, ,, nordsieck, ), ;, interpolator, ., storeTime]
[), ;, interpolator, ., reinitialize, (, stepStart, ,, stepSize, ,, scaled, ,, nordsieck, ), ;, interpolator, ., storeTime, (, stepStart]
[;, interpolator, ., storeTime, (, stepStart, ), ;, double, hNew, =, stepSize, ;, interpolator, ., rescale, (, hNew, ), ;]
[., reinitialize, (, stepStart, ,, stepSize, ,, scaled, ,, nordsieck, ), ;, interpolator, ., storeTime, (, stepStart, ), ;, double]
[,, stepSize, ,, scaled, ,, nordsieck, ), ;, interpolator, ., storeTime, (, stepStart, ), ;, double, hNew, =, stepSize, ;]
[,, scaled, ,, nordsieck, ), ;, interpolator, ., storeTime, (, stepStart, ), ;, double, hNew, =, stepSize, ;, interpolator, .]
[,, nordsieck, ), ;, interpolator, ., storeTime, (, stepStart, ), ;, double, hNew, =, stepSize, ;, interpolator, ., rescale, (]
[), ;, interpolator, ., storeTime, (, stepStart, ), ;, double, hNew, =, stepSize, ;, interpolator, ., rescale, (, hNew, )]
[;, double, hNew, =, stepSize, ;, interpolator, ., rescale, (, hNew, ), ;, isLastStep, =, false, ;, do, {, double]
[., storeTime, (, stepStart, ), ;, double, hNew, =, stepSize, ;, interpolator, ., rescale, (, hNew, ), ;, isLastStep, =]
[), ;, double, hNew, =, stepSize, ;, interpolator, ., rescale, (, hNew, ), ;, isLastStep, =, false, ;, do, {]
[;, interpolator, ., rescale, (, hNew, ), ;, isLastStep, =, false, ;, do, {, double, error, =, 10, ;, while]
[;, isLastStep, =, false, ;, do, {, double, error, =, 10, ;, while, (, error, >=, 1.0, ), {, stepSize]
[., rescale, (, hNew, ), ;, isLastStep, =, false, ;, do, {, double, error, =, 10, ;, while, (, error]
[), ;, isLastStep, =, false, ;, do, {, double, error, =, 10, ;, while, (, error, >=, 1.0, ), {]
[=, false, ;, do, {, double, error, =, 10, ;, while, (, error, >=, 1.0, ), {, stepSize, =, hNew]
[;, do, {, double, error, =, 10, ;, while, (, error, >=, 1.0, ), {, stepSize, =, hNew, ;, final]
[;, while, (, error, >=, 1.0, ), {, stepSize, =, hNew, ;, final, double, stepEnd, =, stepStart, +, stepSize, ;]
[), {, stepSize, =, hNew, ;, final, double, stepEnd, =, stepStart, +, stepSize, ;, interpolator, ., setInterpolatedTime, (, stepEnd, )]
[>=, 1.0, ), {, stepSize, =, hNew, ;, final, double, stepEnd, =, stepStart, +, stepSize, ;, interpolator, ., setInterpolatedTime, (]
[), {, stepSize, =, hNew, ;, final, double, stepEnd, =, stepStart, +, stepSize, ;, interpolator, ., setInterpolatedTime, (, stepEnd, )]
[=, hNew, ;, final, double, stepEnd, =, stepStart, +, stepSize, ;, interpolator, ., setInterpolatedTime, (, stepEnd, ), ;, final, ExpandableStatefulODE]
[;, final, double, stepEnd, =, stepStart, +, stepSize, ;, interpolator, ., setInterpolatedTime, (, stepEnd, ), ;, final, ExpandableStatefulODE, expandable, =]
[;, interpolator, ., setInterpolatedTime, (, stepEnd, ), ;, final, ExpandableStatefulODE, expandable, =, getExpandable, (, ), ;, final, EquationsMapper, primary, =]
[+, stepSize, ;, interpolator, ., setInterpolatedTime, (, stepEnd, ), ;, final, ExpandableStatefulODE, expandable, =, getExpandable, (, ), ;, final, EquationsMapper]
[;, interpolator, ., setInterpolatedTime, (, stepEnd, ), ;, final, ExpandableStatefulODE, expandable, =, getExpandable, (, ), ;, final, EquationsMapper, primary, =]
[;, final, ExpandableStatefulODE, expandable, =, getExpandable, (, ), ;, final, EquationsMapper, primary, =, expandable, ., getPrimaryMapper, (, ), ;, primary]
[., setInterpolatedTime, (, stepEnd, ), ;, final, ExpandableStatefulODE, expandable, =, getExpandable, (, ), ;, final, EquationsMapper, primary, =, expandable, .]
[), ;, final, ExpandableStatefulODE, expandable, =, getExpandable, (, ), ;, final, EquationsMapper, primary, =, expandable, ., getPrimaryMapper, (, ), ;]
[;, final, EquationsMapper, primary, =, expandable, ., getPrimaryMapper, (, ), ;, primary, ., insertEquationData, (, interpolator, ., getInterpolatedState, (, )]
[;, primary, ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, yTmp, ), ;, int, index, =, 0, ;, for]
[., getPrimaryMapper, (, ), ;, primary, ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, yTmp, ), ;, int, index]
[;, int, index, =, 0, ;, for, (, final, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary]
[., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, yTmp, ), ;, int, index, =, 0, ;, for, (, final]
[,, yTmp, ), ;, int, index, =, 0, ;, for, (, final, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, )]
[., getInterpolatedState, (, ), ,, yTmp, ), ;, int, index, =, 0, ;, for, (, final, EquationsMapper, secondary, :, expandable]
[), ;, int, index, =, 0, ;, for, (, final, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {]
[;, for, (, final, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (, interpolator, .]
[), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ), ,, yTmp, ), ;, ++, index, ;, }]
[., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ), ,, yTmp, ), ;]
[;, ++, index, ;, }, computeDerivatives, (, stepEnd, ,, yTmp, ,, yDot, ), ;, for, (, int, j, =, 0]
[., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ), ,, yTmp, ), ;, ++, index, ;, }, computeDerivatives, (, stepEnd]
[,, yTmp, ), ;, ++, index, ;, }, computeDerivatives, (, stepEnd, ,, yTmp, ,, yDot, ), ;, for, (, int]
[., getInterpolatedSecondaryState, (, index, ), ,, yTmp, ), ;, ++, index, ;, }, computeDerivatives, (, stepEnd, ,, yTmp, ,, yDot]
[), ,, yTmp, ), ;, ++, index, ;, }, computeDerivatives, (, stepEnd, ,, yTmp, ,, yDot, ), ;, for, (]
[), ;, ++, index, ;, }, computeDerivatives, (, stepEnd, ,, yTmp, ,, yDot, ), ;, for, (, int, j, =]
[;, }, computeDerivatives, (, stepEnd, ,, yTmp, ,, yDot, ), ;, for, (, int, j, =, 0, ;, j, <]
[;, }, computeDerivatives, (, stepEnd, ,, yTmp, ,, yDot, ), ;, for, (, int, j, =, 0, ;, j, <]
[;, for, (, int, j, =, 0, ;, j, <, y0, ., length, ;, ++, j, ), {, predictedScaled, []
[,, yTmp, ,, yDot, ), ;, for, (, int, j, =, 0, ;, j, <, y0, ., length, ;, ++]
[,, yDot, ), ;, for, (, int, j, =, 0, ;, j, <, y0, ., length, ;, ++, j, )]
[), ;, for, (, int, j, =, 0, ;, j, <, y0, ., length, ;, ++, j, ), {, predictedScaled]
[;, j, <, y0, ., length, ;, ++, j, ), {, predictedScaled, [, j, ], =, stepSize, *, yDot, []
[;, ++, j, ), {, predictedScaled, [, j, ], =, stepSize, *, yDot, [, j, ], ;, }, nordsieckTmp, =]
[<, y0, ., length, ;, ++, j, ), {, predictedScaled, [, j, ], =, stepSize, *, yDot, [, j, ]]
[;, ++, j, ), {, predictedScaled, [, j, ], =, stepSize, *, yDot, [, j, ], ;, }, nordsieckTmp, =]
[., length, ;, ++, j, ), {, predictedScaled, [, j, ], =, stepSize, *, yDot, [, j, ], ;, }]
[), {, predictedScaled, [, j, ], =, stepSize, *, yDot, [, j, ], ;, }, nordsieckTmp, =, updateHighOrderDerivativesPhase1, (, nordsieck]
[), {, predictedScaled, [, j, ], =, stepSize, *, yDot, [, j, ], ;, }, nordsieckTmp, =, updateHighOrderDerivativesPhase1, (, nordsieck]
[=, stepSize, *, yDot, [, j, ], ;, }, nordsieckTmp, =, updateHighOrderDerivativesPhase1, (, nordsieck, ), ;, updateHighOrderDerivativesPhase2, (, scaled, ,]
[[, j, ], =, stepSize, *, yDot, [, j, ], ;, }, nordsieckTmp, =, updateHighOrderDerivativesPhase1, (, nordsieck, ), ;, updateHighOrderDerivativesPhase2]
[], =, stepSize, *, yDot, [, j, ], ;, }, nordsieckTmp, =, updateHighOrderDerivativesPhase1, (, nordsieck, ), ;, updateHighOrderDerivativesPhase2, (, scaled]
[;, }, nordsieckTmp, =, updateHighOrderDerivativesPhase1, (, nordsieck, ), ;, updateHighOrderDerivativesPhase2, (, scaled, ,, predictedScaled, ,, nordsieckTmp, ), ;, error, =]
[*, yDot, [, j, ], ;, }, nordsieckTmp, =, updateHighOrderDerivativesPhase1, (, nordsieck, ), ;, updateHighOrderDerivativesPhase2, (, scaled, ,, predictedScaled, ,]
[;, }, nordsieckTmp, =, updateHighOrderDerivativesPhase1, (, nordsieck, ), ;, updateHighOrderDerivativesPhase2, (, scaled, ,, predictedScaled, ,, nordsieckTmp, ), ;, error, =]
[[, j, ], ;, }, nordsieckTmp, =, updateHighOrderDerivativesPhase1, (, nordsieck, ), ;, updateHighOrderDerivativesPhase2, (, scaled, ,, predictedScaled, ,, nordsieckTmp, )]
[], ;, }, nordsieckTmp, =, updateHighOrderDerivativesPhase1, (, nordsieck, ), ;, updateHighOrderDerivativesPhase2, (, scaled, ,, predictedScaled, ,, nordsieckTmp, ), ;, error]
[=, updateHighOrderDerivativesPhase1, (, nordsieck, ), ;, updateHighOrderDerivativesPhase2, (, scaled, ,, predictedScaled, ,, nordsieckTmp, ), ;, error, =, nordsieckTmp, ., walkInOptimizedOrder]
[;, updateHighOrderDerivativesPhase2, (, scaled, ,, predictedScaled, ,, nordsieckTmp, ), ;, error, =, nordsieckTmp, ., walkInOptimizedOrder, (, new, Corrector, (, y]
[), ;, updateHighOrderDerivativesPhase2, (, scaled, ,, predictedScaled, ,, nordsieckTmp, ), ;, error, =, nordsieckTmp, ., walkInOptimizedOrder, (, new, Corrector, (]
[;, error, =, nordsieckTmp, ., walkInOptimizedOrder, (, new, Corrector, (, y, ,, predictedScaled, ,, yTmp, ), ), ;, if, (]
[,, predictedScaled, ,, nordsieckTmp, ), ;, error, =, nordsieckTmp, ., walkInOptimizedOrder, (, new, Corrector, (, y, ,, predictedScaled, ,, yTmp]
[,, nordsieckTmp, ), ;, error, =, nordsieckTmp, ., walkInOptimizedOrder, (, new, Corrector, (, y, ,, predictedScaled, ,, yTmp, ), )]
[), ;, error, =, nordsieckTmp, ., walkInOptimizedOrder, (, new, Corrector, (, y, ,, predictedScaled, ,, yTmp, ), ), ;, if]
[=, nordsieckTmp, ., walkInOptimizedOrder, (, new, Corrector, (, y, ,, predictedScaled, ,, yTmp, ), ), ;, if, (, error, >=]
[;, if, (, error, >=, 1.0, ), {, final, double, factor, =, computeStepGrowShrinkFactor, (, error, ), ;, hNew, =, filterStep]
[., walkInOptimizedOrder, (, new, Corrector, (, y, ,, predictedScaled, ,, yTmp, ), ), ;, if, (, error, >=, 1.0, )]
[), ;, if, (, error, >=, 1.0, ), {, final, double, factor, =, computeStepGrowShrinkFactor, (, error, ), ;, hNew, =]
[,, predictedScaled, ,, yTmp, ), ), ;, if, (, error, >=, 1.0, ), {, final, double, factor, =, computeStepGrowShrinkFactor, (]
[,, yTmp, ), ), ;, if, (, error, >=, 1.0, ), {, final, double, factor, =, computeStepGrowShrinkFactor, (, error, )]
[), ), ;, if, (, error, >=, 1.0, ), {, final, double, factor, =, computeStepGrowShrinkFactor, (, error, ), ;, hNew]
[), {, final, double, factor, =, computeStepGrowShrinkFactor, (, error, ), ;, hNew, =, filterStep, (, stepSize, *, factor, ,, forward]
[>=, 1.0, ), {, final, double, factor, =, computeStepGrowShrinkFactor, (, error, ), ;, hNew, =, filterStep, (, stepSize, *, factor]
[), {, final, double, factor, =, computeStepGrowShrinkFactor, (, error, ), ;, hNew, =, filterStep, (, stepSize, *, factor, ,, forward]
[;, hNew, =, filterStep, (, stepSize, *, factor, ,, forward, ,, false, ), ;, interpolator, ., rescale, (, hNew, )]
[), ;, hNew, =, filterStep, (, stepSize, *, factor, ,, forward, ,, false, ), ;, interpolator, ., rescale, (, hNew]
[=, filterStep, (, stepSize, *, factor, ,, forward, ,, false, ), ;, interpolator, ., rescale, (, hNew, ), ;, }]
[;, interpolator, ., rescale, (, hNew, ), ;, }, }, final, double, stepEnd, =, stepStart, +, stepSize, ;, computeDerivatives, (]
[,, forward, ,, false, ), ;, interpolator, ., rescale, (, hNew, ), ;, }, }, final, double, stepEnd, =, stepStart]
[*, factor, ,, forward, ,, false, ), ;, interpolator, ., rescale, (, hNew, ), ;, }, }, final, double, stepEnd]
[,, forward, ,, false, ), ;, interpolator, ., rescale, (, hNew, ), ;, }, }, final, double, stepEnd, =, stepStart]
[,, false, ), ;, interpolator, ., rescale, (, hNew, ), ;, }, }, final, double, stepEnd, =, stepStart, +, stepSize]
[), ;, interpolator, ., rescale, (, hNew, ), ;, }, }, final, double, stepEnd, =, stepStart, +, stepSize, ;, computeDerivatives]
[;, }, }, final, double, stepEnd, =, stepStart, +, stepSize, ;, computeDerivatives, (, stepEnd, ,, yTmp, ,, yDot, ), ;]
[., rescale, (, hNew, ), ;, }, }, final, double, stepEnd, =, stepStart, +, stepSize, ;, computeDerivatives, (, stepEnd, ,]
[), ;, }, }, final, double, stepEnd, =, stepStart, +, stepSize, ;, computeDerivatives, (, stepEnd, ,, yTmp, ,, yDot, )]
[;, computeDerivatives, (, stepEnd, ,, yTmp, ,, yDot, ), ;, final, double, [, ], correctedScaled, =, new, double, [, y0]
[+, stepSize, ;, computeDerivatives, (, stepEnd, ,, yTmp, ,, yDot, ), ;, final, double, [, ], correctedScaled, =, new, double]
[;, computeDerivatives, (, stepEnd, ,, yTmp, ,, yDot, ), ;, final, double, [, ], correctedScaled, =, new, double, [, y0]
[;, final, double, [, ], correctedScaled, =, new, double, [, y0, ., length, ], ;, for, (, int, j, =]
[,, yTmp, ,, yDot, ), ;, final, double, [, ], correctedScaled, =, new, double, [, y0, ., length, ], ;]
[,, yDot, ), ;, final, double, [, ], correctedScaled, =, new, double, [, y0, ., length, ], ;, for, (]
[), ;, final, double, [, ], correctedScaled, =, new, double, [, y0, ., length, ], ;, for, (, int, j]
[;, for, (, int, j, =, 0, ;, j, <, y0, ., length, ;, ++, j, ), {, correctedScaled, []
[], ;, for, (, int, j, =, 0, ;, j, <, y0, ., length, ;, ++, j, ), {, correctedScaled]
[., length, ], ;, for, (, int, j, =, 0, ;, j, <, y0, ., length, ;, ++, j, )]
[;, j, <, y0, ., length, ;, ++, j, ), {, correctedScaled, [, j, ], =, stepSize, *, yDot, []
[;, ++, j, ), {, correctedScaled, [, j, ], =, stepSize, *, yDot, [, j, ], ;, }, updateHighOrderDerivativesPhase2, (]
[<, y0, ., length, ;, ++, j, ), {, correctedScaled, [, j, ], =, stepSize, *, yDot, [, j, ]]
[;, ++, j, ), {, correctedScaled, [, j, ], =, stepSize, *, yDot, [, j, ], ;, }, updateHighOrderDerivativesPhase2, (]
[., length, ;, ++, j, ), {, correctedScaled, [, j, ], =, stepSize, *, yDot, [, j, ], ;, }]
[), {, correctedScaled, [, j, ], =, stepSize, *, yDot, [, j, ], ;, }, updateHighOrderDerivativesPhase2, (, predictedScaled, ,, correctedScaled]
[), {, correctedScaled, [, j, ], =, stepSize, *, yDot, [, j, ], ;, }, updateHighOrderDerivativesPhase2, (, predictedScaled, ,, correctedScaled]
[=, stepSize, *, yDot, [, j, ], ;, }, updateHighOrderDerivativesPhase2, (, predictedScaled, ,, correctedScaled, ,, nordsieckTmp, ), ;, System, .]
[[, j, ], =, stepSize, *, yDot, [, j, ], ;, }, updateHighOrderDerivativesPhase2, (, predictedScaled, ,, correctedScaled, ,, nordsieckTmp, )]
[], =, stepSize, *, yDot, [, j, ], ;, }, updateHighOrderDerivativesPhase2, (, predictedScaled, ,, correctedScaled, ,, nordsieckTmp, ), ;, System]
[;, }, updateHighOrderDerivativesPhase2, (, predictedScaled, ,, correctedScaled, ,, nordsieckTmp, ), ;, System, ., arraycopy, (, yTmp, ,, 0, ,, y]
[*, yDot, [, j, ], ;, }, updateHighOrderDerivativesPhase2, (, predictedScaled, ,, correctedScaled, ,, nordsieckTmp, ), ;, System, ., arraycopy, (]
[;, }, updateHighOrderDerivativesPhase2, (, predictedScaled, ,, correctedScaled, ,, nordsieckTmp, ), ;, System, ., arraycopy, (, yTmp, ,, 0, ,, y]
[[, j, ], ;, }, updateHighOrderDerivativesPhase2, (, predictedScaled, ,, correctedScaled, ,, nordsieckTmp, ), ;, System, ., arraycopy, (, yTmp, ,]
[], ;, }, updateHighOrderDerivativesPhase2, (, predictedScaled, ,, correctedScaled, ,, nordsieckTmp, ), ;, System, ., arraycopy, (, yTmp, ,, 0, ,]
[;, System, ., arraycopy, (, yTmp, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, interpolator, .]
[,, correctedScaled, ,, nordsieckTmp, ), ;, System, ., arraycopy, (, yTmp, ,, 0, ,, y, ,, 0, ,, y, .]
[,, nordsieckTmp, ), ;, System, ., arraycopy, (, yTmp, ,, 0, ,, y, ,, 0, ,, y, ., length, )]
[), ;, System, ., arraycopy, (, yTmp, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, interpolator]
[;, interpolator, ., reinitialize, (, stepEnd, ,, stepSize, ,, correctedScaled, ,, nordsieckTmp, ), ;, interpolator, ., storeTime, (, stepStart, )]
[., arraycopy, (, yTmp, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, interpolator, ., reinitialize, (]
[,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, interpolator, ., reinitialize, (, stepEnd, ,, stepSize, ,]
[,, y, ,, 0, ,, y, ., length, ), ;, interpolator, ., reinitialize, (, stepEnd, ,, stepSize, ,, correctedScaled, ,]
[,, 0, ,, y, ., length, ), ;, interpolator, ., reinitialize, (, stepEnd, ,, stepSize, ,, correctedScaled, ,, nordsieckTmp, )]
[,, y, ., length, ), ;, interpolator, ., reinitialize, (, stepEnd, ,, stepSize, ,, correctedScaled, ,, nordsieckTmp, ), ;, interpolator]
[), ;, interpolator, ., reinitialize, (, stepEnd, ,, stepSize, ,, correctedScaled, ,, nordsieckTmp, ), ;, interpolator, ., storeTime, (, stepStart]
[., length, ), ;, interpolator, ., reinitialize, (, stepEnd, ,, stepSize, ,, correctedScaled, ,, nordsieckTmp, ), ;, interpolator, ., storeTime]
[;, interpolator, ., storeTime, (, stepStart, ), ;, interpolator, ., shift, (, ), ;, interpolator, ., storeTime, (, stepEnd, )]
[., reinitialize, (, stepEnd, ,, stepSize, ,, correctedScaled, ,, nordsieckTmp, ), ;, interpolator, ., storeTime, (, stepStart, ), ;, interpolator]
[,, stepSize, ,, correctedScaled, ,, nordsieckTmp, ), ;, interpolator, ., storeTime, (, stepStart, ), ;, interpolator, ., shift, (, )]
[,, correctedScaled, ,, nordsieckTmp, ), ;, interpolator, ., storeTime, (, stepStart, ), ;, interpolator, ., shift, (, ), ;, interpolator]
[,, nordsieckTmp, ), ;, interpolator, ., storeTime, (, stepStart, ), ;, interpolator, ., shift, (, ), ;, interpolator, ., storeTime]
[), ;, interpolator, ., storeTime, (, stepStart, ), ;, interpolator, ., shift, (, ), ;, interpolator, ., storeTime, (, stepEnd]
[;, interpolator, ., shift, (, ), ;, interpolator, ., storeTime, (, stepEnd, ), ;, stepStart, =, acceptStep, (, interpolator, ,]
[., storeTime, (, stepStart, ), ;, interpolator, ., shift, (, ), ;, interpolator, ., storeTime, (, stepEnd, ), ;, stepStart]
[), ;, interpolator, ., shift, (, ), ;, interpolator, ., storeTime, (, stepEnd, ), ;, stepStart, =, acceptStep, (, interpolator]
[;, interpolator, ., storeTime, (, stepEnd, ), ;, stepStart, =, acceptStep, (, interpolator, ,, y, ,, yDot, ,, t, )]
[., shift, (, ), ;, interpolator, ., storeTime, (, stepEnd, ), ;, stepStart, =, acceptStep, (, interpolator, ,, y, ,]
[;, stepStart, =, acceptStep, (, interpolator, ,, y, ,, yDot, ,, t, ), ;, scaled, =, correctedScaled, ;, nordsieck, =]
[., storeTime, (, stepEnd, ), ;, stepStart, =, acceptStep, (, interpolator, ,, y, ,, yDot, ,, t, ), ;, scaled]
[), ;, stepStart, =, acceptStep, (, interpolator, ,, y, ,, yDot, ,, t, ), ;, scaled, =, correctedScaled, ;, nordsieck]
[=, acceptStep, (, interpolator, ,, y, ,, yDot, ,, t, ), ;, scaled, =, correctedScaled, ;, nordsieck, =, nordsieckTmp, ;]
[;, scaled, =, correctedScaled, ;, nordsieck, =, nordsieckTmp, ;, if, (, !, isLastStep, ), {, interpolator, ., storeTime, (, stepStart]
[,, y, ,, yDot, ,, t, ), ;, scaled, =, correctedScaled, ;, nordsieck, =, nordsieckTmp, ;, if, (, !, isLastStep]
[,, yDot, ,, t, ), ;, scaled, =, correctedScaled, ;, nordsieck, =, nordsieckTmp, ;, if, (, !, isLastStep, ), {]
[,, t, ), ;, scaled, =, correctedScaled, ;, nordsieck, =, nordsieckTmp, ;, if, (, !, isLastStep, ), {, interpolator, .]
[), ;, scaled, =, correctedScaled, ;, nordsieck, =, nordsieckTmp, ;, if, (, !, isLastStep, ), {, interpolator, ., storeTime, (]
[=, correctedScaled, ;, nordsieck, =, nordsieckTmp, ;, if, (, !, isLastStep, ), {, interpolator, ., storeTime, (, stepStart, ), ;]
[;, nordsieck, =, nordsieckTmp, ;, if, (, !, isLastStep, ), {, interpolator, ., storeTime, (, stepStart, ), ;, if, (]
[=, nordsieckTmp, ;, if, (, !, isLastStep, ), {, interpolator, ., storeTime, (, stepStart, ), ;, if, (, resetOccurred, )]
[;, if, (, !, isLastStep, ), {, interpolator, ., storeTime, (, stepStart, ), ;, if, (, resetOccurred, ), {, start]
[), {, interpolator, ., storeTime, (, stepStart, ), ;, if, (, resetOccurred, ), {, start, (, stepStart, ,, y, ,]
[), {, interpolator, ., storeTime, (, stepStart, ), ;, if, (, resetOccurred, ), {, start, (, stepStart, ,, y, ,]
[;, if, (, resetOccurred, ), {, start, (, stepStart, ,, y, ,, t, ), ;, interpolator, ., reinitialize, (, stepStart]
[., storeTime, (, stepStart, ), ;, if, (, resetOccurred, ), {, start, (, stepStart, ,, y, ,, t, ), ;]
[), ;, if, (, resetOccurred, ), {, start, (, stepStart, ,, y, ,, t, ), ;, interpolator, ., reinitialize, (]
[), {, start, (, stepStart, ,, y, ,, t, ), ;, interpolator, ., reinitialize, (, stepStart, ,, stepSize, ,, scaled]
[;, interpolator, ., reinitialize, (, stepStart, ,, stepSize, ,, scaled, ,, nordsieck, ), ;, }, final, double, factor, =, computeStepGrowShrinkFactor]
[,, y, ,, t, ), ;, interpolator, ., reinitialize, (, stepStart, ,, stepSize, ,, scaled, ,, nordsieck, ), ;, }]
[,, t, ), ;, interpolator, ., reinitialize, (, stepStart, ,, stepSize, ,, scaled, ,, nordsieck, ), ;, }, final, double]
[), ;, interpolator, ., reinitialize, (, stepStart, ,, stepSize, ,, scaled, ,, nordsieck, ), ;, }, final, double, factor, =]
[;, }, final, double, factor, =, computeStepGrowShrinkFactor, (, error, ), ;, final, double, scaledH, =, stepSize, *, factor, ;, final]
[., reinitialize, (, stepStart, ,, stepSize, ,, scaled, ,, nordsieck, ), ;, }, final, double, factor, =, computeStepGrowShrinkFactor, (, error]
[,, stepSize, ,, scaled, ,, nordsieck, ), ;, }, final, double, factor, =, computeStepGrowShrinkFactor, (, error, ), ;, final, double]
[,, scaled, ,, nordsieck, ), ;, }, final, double, factor, =, computeStepGrowShrinkFactor, (, error, ), ;, final, double, scaledH, =]
[,, nordsieck, ), ;, }, final, double, factor, =, computeStepGrowShrinkFactor, (, error, ), ;, final, double, scaledH, =, stepSize, *]
[), ;, }, final, double, factor, =, computeStepGrowShrinkFactor, (, error, ), ;, final, double, scaledH, =, stepSize, *, factor, ;]
[;, final, double, scaledH, =, stepSize, *, factor, ;, final, double, nextT, =, stepStart, +, scaledH, ;, final, boolean, nextIsLast]
[), ;, final, double, scaledH, =, stepSize, *, factor, ;, final, double, nextT, =, stepStart, +, scaledH, ;, final, boolean]
[;, final, double, nextT, =, stepStart, +, scaledH, ;, final, boolean, nextIsLast, =, forward, ?, (, nextT, >=, t, )]
[*, factor, ;, final, double, nextT, =, stepStart, +, scaledH, ;, final, boolean, nextIsLast, =, forward, ?, (, nextT, >=]
[;, final, double, nextT, =, stepStart, +, scaledH, ;, final, boolean, nextIsLast, =, forward, ?, (, nextT, >=, t, )]
[;, final, boolean, nextIsLast, =, forward, ?, (, nextT, >=, t, ), :, (, nextT, <=, t, ), ;, hNew]
[+, scaledH, ;, final, boolean, nextIsLast, =, forward, ?, (, nextT, >=, t, ), :, (, nextT, <=, t, )]
[;, final, boolean, nextIsLast, =, forward, ?, (, nextT, >=, t, ), :, (, nextT, <=, t, ), ;, hNew]
[;, hNew, =, filterStep, (, scaledH, ,, forward, ,, nextIsLast, ), ;, final, double, filteredNextT, =, stepStart, +, hNew, ;]
[?, (, nextT, >=, t, ), :, (, nextT, <=, t, ), ;, hNew, =, filterStep, (, scaledH, ,, forward]
[:, (, nextT, <=, t, ), ;, hNew, =, filterStep, (, scaledH, ,, forward, ,, nextIsLast, ), ;, final, double]
[), :, (, nextT, <=, t, ), ;, hNew, =, filterStep, (, scaledH, ,, forward, ,, nextIsLast, ), ;, final]
[>=, t, ), :, (, nextT, <=, t, ), ;, hNew, =, filterStep, (, scaledH, ,, forward, ,, nextIsLast, )]
[), :, (, nextT, <=, t, ), ;, hNew, =, filterStep, (, scaledH, ,, forward, ,, nextIsLast, ), ;, final]
[;, hNew, =, filterStep, (, scaledH, ,, forward, ,, nextIsLast, ), ;, final, double, filteredNextT, =, stepStart, +, hNew, ;]
[), ;, hNew, =, filterStep, (, scaledH, ,, forward, ,, nextIsLast, ), ;, final, double, filteredNextT, =, stepStart, +, hNew]
[<=, t, ), ;, hNew, =, filterStep, (, scaledH, ,, forward, ,, nextIsLast, ), ;, final, double, filteredNextT, =, stepStart]
[), ;, hNew, =, filterStep, (, scaledH, ,, forward, ,, nextIsLast, ), ;, final, double, filteredNextT, =, stepStart, +, hNew]
[=, filterStep, (, scaledH, ,, forward, ,, nextIsLast, ), ;, final, double, filteredNextT, =, stepStart, +, hNew, ;, final, boolean]
[;, final, double, filteredNextT, =, stepStart, +, hNew, ;, final, boolean, filteredNextIsLast, =, forward, ?, (, filteredNextT, >=, t, )]
[,, forward, ,, nextIsLast, ), ;, final, double, filteredNextT, =, stepStart, +, hNew, ;, final, boolean, filteredNextIsLast, =, forward, ?]
[,, nextIsLast, ), ;, final, double, filteredNextT, =, stepStart, +, hNew, ;, final, boolean, filteredNextIsLast, =, forward, ?, (, filteredNextT]
[), ;, final, double, filteredNextT, =, stepStart, +, hNew, ;, final, boolean, filteredNextIsLast, =, forward, ?, (, filteredNextT, >=, t]
[;, final, boolean, filteredNextIsLast, =, forward, ?, (, filteredNextT, >=, t, ), :, (, filteredNextT, <=, t, ), ;, if]
[+, hNew, ;, final, boolean, filteredNextIsLast, =, forward, ?, (, filteredNextT, >=, t, ), :, (, filteredNextT, <=, t, )]
[;, final, boolean, filteredNextIsLast, =, forward, ?, (, filteredNextT, >=, t, ), :, (, filteredNextT, <=, t, ), ;, if]
[;, if, (, filteredNextIsLast, ), {, hNew, =, t, -, stepStart, ;, }, interpolator, ., rescale, (, hNew, ), ;]
[?, (, filteredNextT, >=, t, ), :, (, filteredNextT, <=, t, ), ;, if, (, filteredNextIsLast, ), {, hNew, =]
[:, (, filteredNextT, <=, t, ), ;, if, (, filteredNextIsLast, ), {, hNew, =, t, -, stepStart, ;, }, interpolator]
[), :, (, filteredNextT, <=, t, ), ;, if, (, filteredNextIsLast, ), {, hNew, =, t, -, stepStart, ;, }]
[>=, t, ), :, (, filteredNextT, <=, t, ), ;, if, (, filteredNextIsLast, ), {, hNew, =, t, -, stepStart]
[), :, (, filteredNextT, <=, t, ), ;, if, (, filteredNextIsLast, ), {, hNew, =, t, -, stepStart, ;, }]
[;, if, (, filteredNextIsLast, ), {, hNew, =, t, -, stepStart, ;, }, interpolator, ., rescale, (, hNew, ), ;]
[), ;, if, (, filteredNextIsLast, ), {, hNew, =, t, -, stepStart, ;, }, interpolator, ., rescale, (, hNew, )]
[<=, t, ), ;, if, (, filteredNextIsLast, ), {, hNew, =, t, -, stepStart, ;, }, interpolator, ., rescale, (]
[), ;, if, (, filteredNextIsLast, ), {, hNew, =, t, -, stepStart, ;, }, interpolator, ., rescale, (, hNew, )]
[), {, hNew, =, t, -, stepStart, ;, }, interpolator, ., rescale, (, hNew, ), ;, }, }, while, (]
[=, t, -, stepStart, ;, }, interpolator, ., rescale, (, hNew, ), ;, }, }, while, (, !, isLastStep, )]
[;, }, interpolator, ., rescale, (, hNew, ), ;, }, }, while, (, !, isLastStep, ), ;, equations, ., setTime]
[-, stepStart, ;, }, interpolator, ., rescale, (, hNew, ), ;, }, }, while, (, !, isLastStep, ), ;, equations]
[;, }, interpolator, ., rescale, (, hNew, ), ;, }, }, while, (, !, isLastStep, ), ;, equations, ., setTime]
[;, }, }, while, (, !, isLastStep, ), ;, equations, ., setTime, (, stepStart, ), ;, equations, ., setCompleteState, (]
[., rescale, (, hNew, ), ;, }, }, while, (, !, isLastStep, ), ;, equations, ., setTime, (, stepStart, )]
[), ;, }, }, while, (, !, isLastStep, ), ;, equations, ., setTime, (, stepStart, ), ;, equations, ., setCompleteState]
[), ;, equations, ., setTime, (, stepStart, ), ;, equations, ., setCompleteState, (, y, ), ;, resetInternalState, (, ), ;]
[), ;, equations, ., setTime, (, stepStart, ), ;, equations, ., setCompleteState, (, y, ), ;, resetInternalState, (, ), ;]
[;, equations, ., setCompleteState, (, y, ), ;, resetInternalState, (, ), ;, }, private, class, Corrector, implements, RealMatrixPreservingVisitor, {, private]
[., setTime, (, stepStart, ), ;, equations, ., setCompleteState, (, y, ), ;, resetInternalState, (, ), ;, }, private, class]
[), ;, equations, ., setCompleteState, (, y, ), ;, resetInternalState, (, ), ;, }, private, class, Corrector, implements, RealMatrixPreservingVisitor, {]
[;, resetInternalState, (, ), ;, }, private, class, Corrector, implements, RealMatrixPreservingVisitor, {, private, final, double, [, ], previous, ;, private]
[., setCompleteState, (, y, ), ;, resetInternalState, (, ), ;, }, private, class, Corrector, implements, RealMatrixPreservingVisitor, {, private, final, double]
[), ;, resetInternalState, (, ), ;, }, private, class, Corrector, implements, RealMatrixPreservingVisitor, {, private, final, double, [, ], previous, ;]
[;, }, private, class, Corrector, implements, RealMatrixPreservingVisitor, {, private, final, double, [, ], previous, ;, private, final, double, [, ]]
[=, previous, ;, this, ., scaled, =, scaled, ;, this, ., after, =, state, ;, this, ., before, =, state]
[., previous, =, previous, ;, this, ., scaled, =, scaled, ;, this, ., after, =, state, ;, this, ., before]
[;, this, ., scaled, =, scaled, ;, this, ., after, =, state, ;, this, ., before, =, state, ., clone]
[=, scaled, ;, this, ., after, =, state, ;, this, ., before, =, state, ., clone, (, ), ;, }]
[., scaled, =, scaled, ;, this, ., after, =, state, ;, this, ., before, =, state, ., clone, (, )]
[;, this, ., after, =, state, ;, this, ., before, =, state, ., clone, (, ), ;, }, public, void]
[=, state, ;, this, ., before, =, state, ., clone, (, ), ;, }, public, void, start, (, int, rows]
[., after, =, state, ;, this, ., before, =, state, ., clone, (, ), ;, }, public, void, start, (]
[;, this, ., before, =, state, ., clone, (, ), ;, }, public, void, start, (, int, rows, ,, int]
[=, state, ., clone, (, ), ;, }, public, void, start, (, int, rows, ,, int, columns, ,, int, startRow]
[., before, =, state, ., clone, (, ), ;, }, public, void, start, (, int, rows, ,, int, columns, ,]
[;, }, public, void, start, (, int, rows, ,, int, columns, ,, int, startRow, ,, int, endRow, ,, int, startColumn]
[., clone, (, ), ;, }, public, void, start, (, int, rows, ,, int, columns, ,, int, startRow, ,, int]
[;, }, public, void, visit, (, int, row, ,, int, column, ,, double, value, ), {, if, (, (, row]
[., fill, (, after, ,, 0.0, ), ;, }, public, void, visit, (, int, row, ,, int, column, ,, double]
[,, 0.0, ), ;, }, public, void, visit, (, int, row, ,, int, column, ,, double, value, ), {, if]
[), ;, }, public, void, visit, (, int, row, ,, int, column, ,, double, value, ), {, if, (, (]
[), {, after, [, column, ], -=, value, ;, }, else, {, after, [, column, ], +=, value, ;, }]
[==, 0, ), {, after, [, column, ], -=, value, ;, }, else, {, after, [, column, ], +=, value]
[), ==, 0, ), {, after, [, column, ], -=, value, ;, }, else, {, after, [, column, ], +=]
[&, 0x1, ), ==, 0, ), {, after, [, column, ], -=, value, ;, }, else, {, after, [, column]
[), ==, 0, ), {, after, [, column, ], -=, value, ;, }, else, {, after, [, column, ], +=]
[), {, after, [, column, ], -=, value, ;, }, else, {, after, [, column, ], +=, value, ;, }]
[-=, value, ;, }, else, {, after, [, column, ], +=, value, ;, }, }, public, double, end, (, )]
[[, column, ], -=, value, ;, }, else, {, after, [, column, ], +=, value, ;, }, }, public, double]
[], -=, value, ;, }, else, {, after, [, column, ], +=, value, ;, }, }, public, double, end, (]
[;, }, else, {, after, [, column, ], +=, value, ;, }, }, public, double, end, (, ), {, double]
[+=, value, ;, }, }, public, double, end, (, ), {, double, error, =, 0, ;, for, (, int, i]
[[, column, ], +=, value, ;, }, }, public, double, end, (, ), {, double, error, =, 0, ;, for]
[], +=, value, ;, }, }, public, double, end, (, ), {, double, error, =, 0, ;, for, (, int]
[;, }, }, public, double, end, (, ), {, double, error, =, 0, ;, for, (, int, i, =, 0]
[;, for, (, int, i, =, 0, ;, i, <, after, ., length, ;, ++, i, ), {, after, []
[;, i, <, after, ., length, ;, ++, i, ), {, after, [, i, ], +=, previous, [, i, ]]
[;, ++, i, ), {, after, [, i, ], +=, previous, [, i, ], +, scaled, [, i, ], ;]
[<, after, ., length, ;, ++, i, ), {, after, [, i, ], +=, previous, [, i, ], +, scaled]
[;, ++, i, ), {, after, [, i, ], +=, previous, [, i, ], +, scaled, [, i, ], ;]
[., length, ;, ++, i, ), {, after, [, i, ], +=, previous, [, i, ], +, scaled, [, i]
[), {, after, [, i, ], +=, previous, [, i, ], +, scaled, [, i, ], ;, if, (, i]
[), {, after, [, i, ], +=, previous, [, i, ], +, scaled, [, i, ], ;, if, (, i]
[+=, previous, [, i, ], +, scaled, [, i, ], ;, if, (, i, <, mainSetDimension, ), {, final, double]
[[, i, ], +=, previous, [, i, ], +, scaled, [, i, ], ;, if, (, i, <, mainSetDimension, )]
[], +=, previous, [, i, ], +, scaled, [, i, ], ;, if, (, i, <, mainSetDimension, ), {, final]
[;, if, (, i, <, mainSetDimension, ), {, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs, (]
[+, scaled, [, i, ], ;, if, (, i, <, mainSetDimension, ), {, final, double, yScale, =, FastMath, ., max]
[[, i, ], +, scaled, [, i, ], ;, if, (, i, <, mainSetDimension, ), {, final, double, yScale, =]
[], +, scaled, [, i, ], ;, if, (, i, <, mainSetDimension, ), {, final, double, yScale, =, FastMath, .]
[;, if, (, i, <, mainSetDimension, ), {, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs, (]
[[, i, ], ;, if, (, i, <, mainSetDimension, ), {, final, double, yScale, =, FastMath, ., max, (, FastMath]
[], ;, if, (, i, <, mainSetDimension, ), {, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs]
[), {, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs, (, previous, [, i, ], ), ,]
[<, mainSetDimension, ), {, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs, (, previous, [, i, ]]
[), {, final, double, yScale, =, FastMath, ., max, (, FastMath, ., abs, (, previous, [, i, ], ), ,]
[;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null, ), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, ), :, (]
[., max, (, FastMath, ., abs, (, previous, [, i, ], ), ,, FastMath, ., abs, (, after, [, i]
[,, FastMath, ., abs, (, after, [, i, ], ), ), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null]
[., abs, (, previous, [, i, ], ), ,, FastMath, ., abs, (, after, [, i, ], ), ), ;]
[), ,, FastMath, ., abs, (, after, [, i, ], ), ), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==]
[[, i, ], ), ,, FastMath, ., abs, (, after, [, i, ], ), ), ;, final, double, tol, =]
[], ), ,, FastMath, ., abs, (, after, [, i, ], ), ), ;, final, double, tol, =, (, vecAbsoluteTolerance]
[), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null, ), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, ), :]
[., abs, (, after, [, i, ], ), ), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null, ), ?]
[), ), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null, ), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, )]
[[, i, ], ), ), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null, ), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance]
[], ), ), ;, final, double, tol, =, (, vecAbsoluteTolerance, ==, null, ), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale]
[;, final, double, ratio, =, (, after, [, i, ], -, before, [, i, ], ), /, tol, ;, error]
[?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, ), :, (, vecAbsoluteTolerance, [, i, ], +, vecRelativeTolerance, [, i, ], *]
[), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, ), :, (, vecAbsoluteTolerance, [, i, ], +, vecRelativeTolerance, [, i, ]]
[==, null, ), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, ), :, (, vecAbsoluteTolerance, [, i, ], +, vecRelativeTolerance, []
[), ?, (, scalAbsoluteTolerance, +, scalRelativeTolerance, *, yScale, ), :, (, vecAbsoluteTolerance, [, i, ], +, vecRelativeTolerance, [, i, ]]
[:, (, vecAbsoluteTolerance, [, i, ], +, vecRelativeTolerance, [, i, ], *, yScale, ), ;, final, double, ratio, =, (]
[), :, (, vecAbsoluteTolerance, [, i, ], +, vecRelativeTolerance, [, i, ], *, yScale, ), ;, final, double, ratio, =]
[+, scalRelativeTolerance, *, yScale, ), :, (, vecAbsoluteTolerance, [, i, ], +, vecRelativeTolerance, [, i, ], *, yScale, ), ;]
[), :, (, vecAbsoluteTolerance, [, i, ], +, vecRelativeTolerance, [, i, ], *, yScale, ), ;, final, double, ratio, =]
[*, yScale, ), :, (, vecAbsoluteTolerance, [, i, ], +, vecRelativeTolerance, [, i, ], *, yScale, ), ;, final, double]
[), :, (, vecAbsoluteTolerance, [, i, ], +, vecRelativeTolerance, [, i, ], *, yScale, ), ;, final, double, ratio, =]
[;, final, double, ratio, =, (, after, [, i, ], -, before, [, i, ], ), /, tol, ;, error]
[), ;, final, double, ratio, =, (, after, [, i, ], -, before, [, i, ], ), /, tol, ;]
[+, vecRelativeTolerance, [, i, ], *, yScale, ), ;, final, double, ratio, =, (, after, [, i, ], -, before]
[[, i, ], +, vecRelativeTolerance, [, i, ], *, yScale, ), ;, final, double, ratio, =, (, after, [, i]
[], +, vecRelativeTolerance, [, i, ], *, yScale, ), ;, final, double, ratio, =, (, after, [, i, ], -]
[), ;, final, double, ratio, =, (, after, [, i, ], -, before, [, i, ], ), /, tol, ;]
[*, yScale, ), ;, final, double, ratio, =, (, after, [, i, ], -, before, [, i, ], ), /]
[[, i, ], *, yScale, ), ;, final, double, ratio, =, (, after, [, i, ], -, before, [, i]
[], *, yScale, ), ;, final, double, ratio, =, (, after, [, i, ], -, before, [, i, ], )]
[), ;, final, double, ratio, =, (, after, [, i, ], -, before, [, i, ], ), /, tol, ;]
[;, error, +=, ratio, *, ratio, ;, }, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;, }]
[/, tol, ;, error, +=, ratio, *, ratio, ;, }, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, )]
[), /, tol, ;, error, +=, ratio, *, ratio, ;, }, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension]
[-, before, [, i, ], ), /, tol, ;, error, +=, ratio, *, ratio, ;, }, }, return, FastMath, .]
[[, i, ], -, before, [, i, ], ), /, tol, ;, error, +=, ratio, *, ratio, ;, }, }]
[], -, before, [, i, ], ), /, tol, ;, error, +=, ratio, *, ratio, ;, }, }, return, FastMath]
[), /, tol, ;, error, +=, ratio, *, ratio, ;, }, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension]
[[, i, ], ), /, tol, ;, error, +=, ratio, *, ratio, ;, }, }, return, FastMath, ., sqrt, (]
[], ), /, tol, ;, error, +=, ratio, *, ratio, ;, }, }, return, FastMath, ., sqrt, (, error, /]
[;, error, +=, ratio, *, ratio, ;, }, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;, }]
[+=, ratio, *, ratio, ;, }, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;, }, }, }]
[;, }, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;, }, }, }]
[*, ratio, ;, }, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;, }, }, }]
[;, }, }, return, FastMath, ., sqrt, (, error, /, mainSetDimension, ), ;, }, }, }]
[;, }, }, }]
[., sqrt, (, error, /, mainSetDimension, ), ;, }, }, }]
[), ;, }, }, }]
[/, mainSetDimension, ), ;, }, }, }]
[), ;, }, }, }]
