[., editor, ;, import, org, ., jfree, ., chart, ., JFreeChart, ;, public, class, ChartEditorManager, {, static, ChartEditorFactory, factory, =]
[=, new, DefaultChartEditorFactory, (, ), ;, private, ChartEditorManager, (, ), {, }, public, static, ChartEditorFactory, getChartEditorFactory, (, ), {, return]
[ChartEditorFactory, getChartEditorFactory, (, ), {, return, factory, ;, }, public, static, void, setChartEditorFactory, (, ChartEditorFactory, f, ), {, if, (]
[ChartEditorFactory, getChartEditorFactory, (, ), {, return, factory, ;, }, public, static, void, setChartEditorFactory, (, ChartEditorFactory, f, ), {, if, (]
[(, ), {, return, factory, ;, }, public, static, void, setChartEditorFactory, (, ChartEditorFactory, f, ), {, if, (, f, ==]
[factory, ;, }, public, static, void, setChartEditorFactory, (, ChartEditorFactory, f, ), {, if, (, f, ==, null, ), {, throw]
[public, static, void, setChartEditorFactory, (, ChartEditorFactory, f, ), {, if, (, f, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, ChartEditorFactory, f, ), {, if, (, f, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'f' argument.", ), ;, }]
[f, ), {, if, (, f, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'f' argument.", ), ;, }, factory, =]
[(, "Null 'f' argument.", ), ;, }, factory, =, f, ;, }, public, static, ChartEditor, getChartEditor, (, JFreeChart, chart, ), {, return]
[(, "Null 'f' argument.", ), ;, }, factory, =, f, ;, }, public, static, ChartEditor, getChartEditor, (, JFreeChart, chart, ), {, return]
[}, factory, =, f, ;, }, public, static, ChartEditor, getChartEditor, (, JFreeChart, chart, ), {, return, factory, ., createEditor, (]
