[;, private, KeyToGroupMap, seriesToGroupMap, ;, public, GroupedStackedBarRenderer, (, ), {, super, (, ), ;, this, ., seriesToGroupMap, =, new, KeyToGroupMap]
[;, private, KeyToGroupMap, seriesToGroupMap, ;, public, GroupedStackedBarRenderer, (, ), {, super, (, ), ;, this, ., seriesToGroupMap, =, new, KeyToGroupMap]
[=, new, KeyToGroupMap, (, ), ;, }, public, void, setSeriesToGroupMap, (, KeyToGroupMap, map, ), {, if, (, map, ==, null]
[., seriesToGroupMap, =, new, KeyToGroupMap, (, ), ;, }, public, void, setSeriesToGroupMap, (, KeyToGroupMap, map, ), {, if, (, map]
[;, }, public, void, setSeriesToGroupMap, (, KeyToGroupMap, map, ), {, if, (, map, ==, null, ), {, throw, new, IllegalArgumentException]
[), {, throw, new, IllegalArgumentException, (, "Null 'map' argument.", ), ;, }, this, ., seriesToGroupMap, =, map, ;, fireChangeEvent, (, ), ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'map' argument.", ), ;, }, this, ., seriesToGroupMap, =, map, ;, fireChangeEvent, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'map' argument.", ), ;, }, this, ., seriesToGroupMap, =, map, ;, fireChangeEvent, (, ), ;]
[;, }, this, ., seriesToGroupMap, =, map, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, )]
[), ;, }, this, ., seriesToGroupMap, =, map, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset]
[=, map, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==]
[., seriesToGroupMap, =, map, ;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (]
[;, fireChangeEvent, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==, null, )]
[;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==, null, ), {, return, null, ;]
[), {, return, null, ;, }, Range, r, =, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ,, this, ., seriesToGroupMap, ), ;]
[==, null, ), {, return, null, ;, }, Range, r, =, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ,, this, ., seriesToGroupMap]
[), {, return, null, ;, }, Range, r, =, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ,, this, ., seriesToGroupMap, ), ;]
[;, }, Range, r, =, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ,, this, ., seriesToGroupMap, ), ;, return, r, ;, }]
[;, return, r, ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, int, rendererIndex, ,, CategoryItemRendererState, state]
[., findStackedRangeBounds, (, dataset, ,, this, ., seriesToGroupMap, ), ;, return, r, ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot]
[,, this, ., seriesToGroupMap, ), ;, return, r, ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,]
[), ;, return, r, ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, int, rendererIndex, ,, CategoryItemRendererState]
[., seriesToGroupMap, ), ;, return, r, ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, int, rendererIndex]
[;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, int, rendererIndex, ,, CategoryItemRendererState, state, ), {, CategoryAxis]
[;, CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (, data, !=, null, ), {, PlotOrientation, orientation]
[., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (, data, !=]
[), ;, CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (, data, !=, null, ), {, PlotOrientation]
[;, if, (, data, !=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =]
[., getDataset, (, rendererIndex, ), ;, if, (, data, !=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (]
[), ;, if, (, data, !=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space]
[), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==]
[!=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (]
[), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==]
[;, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight]
[., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, .]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;]
[., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, .]
[), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;]
[==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *]
[), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;]
[., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (]
[=, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, int, groups, =]
[;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, int, groups, =, this, ., seriesToGroupMap, ., getGroupCount, (]
[., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, int, groups, =, this, .]
[;, int, groups, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, categories, =, data, ., getColumnCount, (, )]
[*, getMaximumBarWidth, (, ), ;, int, groups, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, categories, =, data]
[;, int, groups, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, categories, =, data, ., getColumnCount, (, )]
[;, int, categories, =, data, ., getColumnCount, (, ), ;, int, columns, =, groups, *, categories, ;, double, categoryMargin, =]
[., getGroupCount, (, ), ;, int, categories, =, data, ., getColumnCount, (, ), ;, int, columns, =, groups, *, categories]
[., seriesToGroupMap, ., getGroupCount, (, ), ;, int, categories, =, data, ., getColumnCount, (, ), ;, int, columns, =, groups]
[;, int, columns, =, groups, *, categories, ;, double, categoryMargin, =, 0.0, ;, double, itemMargin, =, 0.0, ;, if, (]
[., getColumnCount, (, ), ;, int, columns, =, groups, *, categories, ;, double, categoryMargin, =, 0.0, ;, double, itemMargin, =]
[;, double, categoryMargin, =, 0.0, ;, double, itemMargin, =, 0.0, ;, if, (, categories, >, 1, ), {, categoryMargin, =]
[*, categories, ;, double, categoryMargin, =, 0.0, ;, double, itemMargin, =, 0.0, ;, if, (, categories, >, 1, ), {]
[;, double, categoryMargin, =, 0.0, ;, double, itemMargin, =, 0.0, ;, if, (, categories, >, 1, ), {, categoryMargin, =]
[;, double, itemMargin, =, 0.0, ;, if, (, categories, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, )]
[;, if, (, categories, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, if, (, groups]
[), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, if, (, groups, >, 1, ), {, itemMargin, =]
[>, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, if, (, groups, >, 1, ), {]
[), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, if, (, groups, >, 1, ), {, itemMargin, =]
[=, xAxis, ., getCategoryMargin, (, ), ;, }, if, (, groups, >, 1, ), {, itemMargin, =, getItemMargin, (, )]
[;, }, if, (, groups, >, 1, ), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space]
[., getCategoryMargin, (, ), ;, }, if, (, groups, >, 1, ), {, itemMargin, =, getItemMargin, (, ), ;, }]
[), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, xAxis, ., getLowerMargin]
[>, 1, ), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, xAxis]
[), {, itemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, xAxis, ., getLowerMargin]
[=, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, xAxis, ., getLowerMargin, (, ), -]
[;, }, double, used, =, space, *, (, 1, -, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (]
[;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,]
[*, (, 1, -, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, -, itemMargin, )]
[;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,]
[), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns]
[-, itemMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used]
[-, categoryMargin, -, itemMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min]
[-, xAxis, ., getUpperMargin, (, ), -, categoryMargin, -, itemMargin, ), ;, if, (, columns, >, 0, ), {, state]
[-, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, -, itemMargin, ), ;, if, (]
[-, xAxis, ., getUpperMargin, (, ), -, categoryMargin, -, itemMargin, ), ;, if, (, columns, >, 0, ), {, state]
[., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, -, itemMargin, ), ;, if, (, columns, >]
[-, categoryMargin, -, itemMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min]
[., getUpperMargin, (, ), -, categoryMargin, -, itemMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth]
[-, itemMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used]
[), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns]
[), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else]
[>, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;]
[), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else]
[;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }, }]
[., setBarWidth, (, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else, {, state, .]
[), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }]
[., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, .]
[,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, )]
[/, columns, ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,]
[,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, )]
[), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;]
[;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation, orientation, ,, Rectangle2D, dataArea, ,, CategoryAxis, domainAxis, ,]
[., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }, }, }, protected, double, calculateBarW0, (]
[), ;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation, orientation, ,, Rectangle2D, dataArea, ,, CategoryAxis, domainAxis]
[., min, (, used, ,, maxWidth, ), ), ;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation]
[,, maxWidth, ), ), ;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation, orientation, ,, Rectangle2D, dataArea]
[), ), ;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation, orientation, ,, Rectangle2D, dataArea, ,, CategoryAxis]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, )]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, )]
[., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth]
[=, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double]
[;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (]
[., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =]
[=, dataArea, ., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, )]
[;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge]
[., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea]
[;, int, groupCount, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, groupIndex, =, this, ., seriesToGroupMap, ., getGroupIndex]
[., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, groupCount]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, groupCount, =, this, ., seriesToGroupMap]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, groupCount, =, this, ., seriesToGroupMap, ., getGroupCount, (, )]
[,, plot, ., getDomainAxisEdge, (, ), ), ;, int, groupCount, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int]
[), ;, int, groupCount, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, groupIndex, =, this, ., seriesToGroupMap, .]
[., getDomainAxisEdge, (, ), ), ;, int, groupCount, =, this, ., seriesToGroupMap, ., getGroupCount, (, ), ;, int, groupIndex, =]
[;, int, groupIndex, =, this, ., seriesToGroupMap, ., getGroupIndex, (, this, ., seriesToGroupMap, ., getGroup, (, plot, ., getDataset, (]
[., getGroupCount, (, ), ;, int, groupIndex, =, this, ., seriesToGroupMap, ., getGroupIndex, (, this, ., seriesToGroupMap, ., getGroup, (]
[., seriesToGroupMap, ., getGroupCount, (, ), ;, int, groupIndex, =, this, ., seriesToGroupMap, ., getGroupIndex, (, this, ., seriesToGroupMap, .]
[;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, groupCount, >, 1, ), {, double, groupGap, =, space, *]
[., getGroupIndex, (, this, ., seriesToGroupMap, ., getGroup, (, plot, ., getDataset, (, plot, ., getIndexOf, (, this, ), )]
[., seriesToGroupMap, ., getGroupIndex, (, this, ., seriesToGroupMap, ., getGroup, (, plot, ., getDataset, (, plot, ., getIndexOf, (, this]
[), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, groupCount, >, 1, ), {, double, groupGap, =, space]
[., getGroup, (, plot, ., getDataset, (, plot, ., getIndexOf, (, this, ), ), ., getRowKey, (, row, ), )]
[., seriesToGroupMap, ., getGroup, (, plot, ., getDataset, (, plot, ., getIndexOf, (, this, ), ), ., getRowKey, (, row]
[), ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, groupCount, >, 1, ), {, double, groupGap, =]
[., getRowKey, (, row, ), ), ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, groupCount, >, 1]
[., getDataset, (, plot, ., getIndexOf, (, this, ), ), ., getRowKey, (, row, ), ), ), ;, int, categoryCount]
[), ., getRowKey, (, row, ), ), ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, groupCount, >]
[., getIndexOf, (, this, ), ), ., getRowKey, (, row, ), ), ), ;, int, categoryCount, =, getColumnCount, (, )]
[), ), ., getRowKey, (, row, ), ), ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, groupCount]
[), ), ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, groupCount, >, 1, ), {, double, groupGap]
[;, if, (, groupCount, >, 1, ), {, double, groupGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *]
[), {, double, groupGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (, groupCount, -, 1, ), )]
[>, 1, ), {, double, groupGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (, groupCount, -, 1]
[), {, double, groupGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (, groupCount, -, 1, ), )]
[;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +, groupIndex]
[/, (, categoryCount, *, (, groupCount, -, 1, ), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,]
[*, getItemMargin, (, ), /, (, categoryCount, *, (, groupCount, -, 1, ), ), ;, double, groupW, =, calculateSeriesWidth, (]
[/, (, categoryCount, *, (, groupCount, -, 1, ), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,]
[;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +, groupIndex]
[), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +]
[*, (, groupCount, -, 1, ), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount]
[), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +]
[), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0]
[-, 1, ), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0]
[), ), ;, double, groupW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0]
[;, barW0, =, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +, (, groupW, /, 2.0, ), -, (]
[,, domainAxis, ,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +]
[,, categoryCount, ,, groupCount, ), ;, barW0, =, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +, (, groupW]
[,, groupCount, ), ;, barW0, =, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +, (, groupW, /, 2.0]
[), ;, barW0, =, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +, (, groupW, /, 2.0, ), -]
[=, barW0, +, groupIndex, *, (, groupW, +, groupGap, ), +, (, groupW, /, 2.0, ), -, (, state, .]
[;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, .]
[-, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (]
[+, (, groupW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {]
[+, groupIndex, *, (, groupW, +, groupGap, ), +, (, groupW, /, 2.0, ), -, (, state, ., getBarWidth, (]
[+, (, groupW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {]
[*, (, groupW, +, groupGap, ), +, (, groupW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /]
[+, (, groupW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {]
[), +, (, groupW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else]
[+, groupGap, ), +, (, groupW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;]
[), +, (, groupW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else]
[-, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (]
[), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle]
[/, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis]
[), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle]
[;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, .]
[), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot]
[/, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea]
[., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount]
[), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot]
[-, state, ., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D, g2]
[., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, .]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return]
[,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;]
[), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D]
[., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;, }, public]
[;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot]
[/, 2.0, ;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea]
[., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState]
[;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot]
[;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryAxis, domainAxis]
[;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;]
[., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value]
[,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue]
[), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, )]
[), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, Comparable, group, =, this, ., seriesToGroupMap]
[==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, Comparable, group, =, this]
[), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, Comparable, group, =, this, ., seriesToGroupMap]
[;, Comparable, group, =, this, ., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey, (, row, ), ), ;, PlotOrientation, orientation]
[., doubleValue, (, ), ;, Comparable, group, =, this, ., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey, (, row, )]
[;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea]
[., getGroup, (, dataset, ., getRowKey, (, row, ), ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;]
[., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey, (, row, ), ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (]
[), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,]
[., getRowKey, (, row, ), ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0]
[), ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation]
[;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, row, ,, column, )]
[., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,]
[;, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <]
[,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, row, ,, column, ), ;, double, positiveBase, =, 0.0, ;, double]
[,, dataArea, ,, domainAxis, ,, state, ,, row, ,, column, ), ;, double, positiveBase, =, 0.0, ;, double, negativeBase, =]
[,, domainAxis, ,, state, ,, row, ,, column, ), ;, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;]
[,, state, ,, row, ,, column, ), ;, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (]
[,, row, ,, column, ), ;, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i]
[,, column, ), ;, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0]
[), ;, double, positiveBase, =, 0.0, ;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;, i]
[;, double, negativeBase, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <, row, ;, i, ++, )]
[;, for, (, int, i, =, 0, ;, i, <, row, ;, i, ++, ), {, if, (, group, .]
[;, i, <, row, ;, i, ++, ), {, if, (, group, ., equals, (, this, ., seriesToGroupMap, ., getGroup]
[;, i, ++, ), {, if, (, group, ., equals, (, this, ., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey]
[<, row, ;, i, ++, ), {, if, (, group, ., equals, (, this, ., seriesToGroupMap, ., getGroup, (, dataset]
[;, i, ++, ), {, if, (, group, ., equals, (, this, ., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey]
[), {, if, (, group, ., equals, (, this, ., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey, (, i, )]
[++, ), {, if, (, group, ., equals, (, this, ., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey, (, i]
[), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v, !=, null, )]
[., equals, (, this, ., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey, (, i, ), ), ), ), {, Number]
[), ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v, !=, null]
[., getGroup, (, dataset, ., getRowKey, (, i, ), ), ), ), {, Number, v, =, dataset, ., getValue, (]
[., seriesToGroupMap, ., getGroup, (, dataset, ., getRowKey, (, i, ), ), ), ), {, Number, v, =, dataset, .]
[), ), ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v, !=]
[., getRowKey, (, i, ), ), ), ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, )]
[), ), ), ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v]
[;, if, (, v, !=, null, ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, d]
[., getValue, (, i, ,, column, ), ;, if, (, v, !=, null, ), {, double, d, =, v, .]
[,, column, ), ;, if, (, v, !=, null, ), {, double, d, =, v, ., doubleValue, (, ), ;]
[), ;, if, (, v, !=, null, ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (]
[), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, d, >, 0, ), {, positiveBase, =]
[!=, null, ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, d, >, 0, ), {]
[), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, d, >, 0, ), {, positiveBase, =]
[;, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =, negativeBase]
[., doubleValue, (, ), ;, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else]
[), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }, }, }]
[>, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }]
[), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }, }, }]
[=, positiveBase, +, d, ;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }, }, }, }, double, translatedBase]
[;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }, }, }, }, double, translatedBase, ;, double, translatedValue, ;]
[+, d, ;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }, }, }, }, double, translatedBase, ;, double]
[;, }, else, {, negativeBase, =, negativeBase, +, d, ;, }, }, }, }, double, translatedBase, ;, double, translatedValue, ;]
[=, negativeBase, +, d, ;, }, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value]
[;, }, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value, >, 0.0, ), ;]
[+, d, ;, }, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value, >, 0.0]
[;, }, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value, >, 0.0, ), ;]
[;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, .]
[>, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, .]
[;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !]
[., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive]
[), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT]
[==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase]
[), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT]
[., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge]
[&&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase]
[||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[&&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;]
[&&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted]
[., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&]
[=, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =]
[., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {]
[), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge]
[||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, .]
[&&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase]
[||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, .]
[||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, .]
[), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge]
[&&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }]
[&&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }]
[), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge]
[=, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =, plot]
[;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, )]
[., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge]
[=, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, value, >]
[;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, ), {, translatedBase]
[., TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, )]
[;, if, (, value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, )]
[., getRangeAxisEdge, (, ), ;, if, (, value, >, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,]
[), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D]
[>, 0.0, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis]
[), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D]
[=, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +]
[;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase]
[., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,]
[,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, )]
[,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }]
[), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {]
[=, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis]
[;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis]
[., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D]
[,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location]
[+, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea]
[,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location]
[,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;]
[), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =]
[=, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +]
[;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =]
[., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,]
[,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, )]
[,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }]
[), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0]
[=, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, .]
[;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max]
[., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, ., min, (]
[,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double]
[+, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, )]
[,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double]
[,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =]
[), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, .]
[;, double, barLength, =, Math, ., max, (, Math, ., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, )]
[., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (, translatedValue]
[,, translatedValue, ), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (, translatedValue, -, translatedBase, ), ,]
[), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (]
[;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, .]
[., max, (, Math, ., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =]
[,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (]
[), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, )]
[-, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, .]
[), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, )]
[), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0]
[), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,, state, ., getBarWidth, (, )]
[==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,, state]
[), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,, state, ., getBarWidth, (, )]
[., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,, state, ., getBarWidth]
[=, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,, state, ., getBarWidth, (, ), ), ;, }]
[;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,, state, ., getBarWidth, (, )]
[,, barW0, ,, barLength, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, .]
[,, barLength, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (]
[,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,]
[), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,, state, ., getBarWidth, (]
[., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,]
[=, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }]
[;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,]
[,, barL0, ,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2]
[,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this]
[,, barLength, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected]
[., getBarWidth, (, ), ,, barLength, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row]
[), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar]
[;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible]
[., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator]
[,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row]
[,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column]
[,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected]
[,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;]
[,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=]
[), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&]
[;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2]
[,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, )]
[,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {]
[), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[!=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected]
[,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator]
[), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar]
[;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, )]
[,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;]
[,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, EntityCollection]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, EntityCollection, entities, =]
[,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, EntityCollection, entities, =, state, .]
[,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (]
[,, bar, ,, (, value, <, 0.0, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;]
[,, (, value, <, 0.0, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity]
[), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[<, 0.0, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null]
[), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, public]
[!=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, public]
[;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj]
[,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {]
[,, row, ,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, GroupedStackedBarRenderer, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, GroupedStackedBarRenderer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, GroupedStackedBarRenderer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, GroupedStackedBarRenderer, ), ), {, return, false, ;, }, GroupedStackedBarRenderer, that, =, (]
[), {, return, false, ;, }, GroupedStackedBarRenderer, that, =, (, GroupedStackedBarRenderer, ), obj, ;, if, (, !, this, ., seriesToGroupMap]
[), {, return, false, ;, }, GroupedStackedBarRenderer, that, =, (, GroupedStackedBarRenderer, ), obj, ;, if, (, !, this, ., seriesToGroupMap]
[), ), {, return, false, ;, }, GroupedStackedBarRenderer, that, =, (, GroupedStackedBarRenderer, ), obj, ;, if, (, !, this, .]
[instanceof, GroupedStackedBarRenderer, ), ), {, return, false, ;, }, GroupedStackedBarRenderer, that, =, (, GroupedStackedBarRenderer, ), obj, ;, if, (, !]
[;, }, GroupedStackedBarRenderer, that, =, (, GroupedStackedBarRenderer, ), obj, ;, if, (, !, this, ., seriesToGroupMap, ., equals, (, that]
[;, if, (, !, this, ., seriesToGroupMap, ., equals, (, that, ., seriesToGroupMap, ), ), {, return, false, ;, }]
[;, if, (, !, this, ., seriesToGroupMap, ., equals, (, that, ., seriesToGroupMap, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[., equals, (, that, ., seriesToGroupMap, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, )]
[., seriesToGroupMap, ., equals, (, that, ., seriesToGroupMap, ), ), {, return, false, ;, }, return, super, ., equals, (]
[), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[., seriesToGroupMap, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[;, }, return, super, ., equals, (, obj, ), ;, }, }]
[;, }, }]
[., equals, (, obj, ), ;, }, }]
[), ;, }, }]
