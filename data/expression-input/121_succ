[;, private, final, Visitor, <, JSType, >, restrictToNotArrayVisitor, =, new, RestrictByFalseTypeOfResultVisitor, (, ), {, @, Override, public, JSType, caseObjectType, (]
[;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, JSType, arrayType, =, getNativeType, (, ARRAY_TYPE, ), ;]
[;, return, arrayType, ., isSubtype, (, type, ), ?, arrayType, :, null, ;, }, }, ;, private, final, Visitor, <]
[), ;, return, arrayType, ., isSubtype, (, type, ), ?, arrayType, :, null, ;, }, }, ;, private, final, Visitor]
[;, }, }, ;, private, final, Visitor, <, JSType, >, restrictToNotArrayVisitor, =, new, RestrictByFalseTypeOfResultVisitor, (, ), {, @, Override, public]
[?, arrayType, :, null, ;, }, }, ;, private, final, Visitor, <, JSType, >, restrictToNotArrayVisitor, =, new, RestrictByFalseTypeOfResultVisitor, (, )]
[., isSubtype, (, type, ), ?, arrayType, :, null, ;, }, }, ;, private, final, Visitor, <, JSType, >, restrictToNotArrayVisitor]
[), ?, arrayType, :, null, ;, }, }, ;, private, final, Visitor, <, JSType, >, restrictToNotArrayVisitor, =, new, RestrictByFalseTypeOfResultVisitor, (]
[:, null, ;, }, }, ;, private, final, Visitor, <, JSType, >, restrictToNotArrayVisitor, =, new, RestrictByFalseTypeOfResultVisitor, (, ), {, @]
[;, }, }, ;, private, final, Visitor, <, JSType, >, restrictToNotArrayVisitor, =, new, RestrictByFalseTypeOfResultVisitor, (, ), {, @, Override, public]
[;, private, final, Visitor, <, JSType, >, restrictToObjectVisitor, =, new, RestrictByTrueTypeOfResultVisitor, (, ), {, @, Override, protected, JSType, caseTopType, (]
[;, }, }, ;, private, final, Visitor, <, JSType, >, restrictToObjectVisitor, =, new, RestrictByTrueTypeOfResultVisitor, (, ), {, @, Override, protected]
[?, null, :, type, ;, }, }, ;, private, final, Visitor, <, JSType, >, restrictToObjectVisitor, =, new, RestrictByTrueTypeOfResultVisitor, (, )]
[., isSubtype, (, getNativeType, (, ARRAY_TYPE, ), ), ?, null, :, type, ;, }, }, ;, private, final, Visitor, <]
[), ?, null, :, type, ;, }, }, ;, private, final, Visitor, <, JSType, >, restrictToObjectVisitor, =, new, RestrictByTrueTypeOfResultVisitor, (]
[), ), ?, null, :, type, ;, }, }, ;, private, final, Visitor, <, JSType, >, restrictToObjectVisitor, =, new, RestrictByTrueTypeOfResultVisitor]
[:, type, ;, }, }, ;, private, final, Visitor, <, JSType, >, restrictToObjectVisitor, =, new, RestrictByTrueTypeOfResultVisitor, (, ), {, @]
[;, }, }, ;, private, final, Visitor, <, JSType, >, restrictToObjectVisitor, =, new, RestrictByTrueTypeOfResultVisitor, (, ), {, @, Override, protected]
[;, private, final, Visitor, <, JSType, >, restrictToNotObjectVisitor, =, new, RestrictByFalseTypeOfResultVisitor, (, ), {, @, Override, public, JSType, caseAllType, (]
[;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, type, ;, }, @, Override, public, JSType]
[), ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, type, ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, type, ;, }, }, ;, private, final]
[;, }, }, ;, private, final, Visitor, <, JSType, >, restrictToNotObjectVisitor, =, new, RestrictByFalseTypeOfResultVisitor, (, ), {, @, Override, public]
[;, private, Map, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, restricters, ;, public, ClosureReverseAbstractInterpreter, (, CodingConvention, convention]
[;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, null, ;, }, @, Override, public, JSType]
[., createUnionType, (, getNativeType, (, NUMBER_STRING_BOOLEAN, ), ,, getNativeType, (, NULL_VOID, ), ), ;, }, @, Override, public, JSType, caseObjectType]
[,, getNativeType, (, NULL_VOID, ), ), ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, null]
[), ,, getNativeType, (, NULL_VOID, ), ), ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return]
[), ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, null, ;, }, @, Override, public]
[), ), ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, null, ;, }, @, Override]
[;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, null, ;, }, }, ;, private, Map]
[;, }, }, ;, private, Map, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, restricters, ;, public, ClosureReverseAbstractInterpreter]
[,, typeRegistry, ), ;, this, ., restricters, =, new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType]
[), ;, this, ., restricters, =, new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >]
[=, new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, (, ), ., put, (]
[., restricters, =, new, ImmutableMap, ., Builder, <, String, ,, Function, <, TypeRestriction, ,, JSType, >, >, (, ), .]
[;, }, @, Override, public, FlowScope, getPreciserScopeKnowingConditionOutcome, (, Node, condition, ,, FlowScope, blindScope, ,, boolean, outcome, ), {, if, (]
[., build, (, ), ;, }, @, Override, public, FlowScope, getPreciserScopeKnowingConditionOutcome, (, Node, condition, ,, FlowScope, blindScope, ,, boolean, outcome]
[., put, (, "isObject", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply]
[., put, (, "isArray", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply]
[., put, (, "isFunction", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply]
[., put, (, "isNumber", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply]
[., put, (, "isBoolean", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply]
[., put, (, "isString", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply]
[., put, (, "isDefAndNotNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply]
[., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply]
[., put, (, "isDef", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply]
[,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, )]
[), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType]
[), {, return, getRestrictedWithoutUndefined, (, p, ., type, ), ;, }, else, {, return, p, ., type, !=, null, ?]
[., outcome, ), {, return, getRestrictedWithoutUndefined, (, p, ., type, ), ;, }, else, {, return, p, ., type, !=]
[;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, .]
[), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p]
[., type, ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype]
[;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {]
[?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), .]
[!=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }]
[., type, !=, null, ?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }]
[?, getNativeType, (, VOID_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), .]
[:, null, ;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (]
[., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isNull", ,, new]
[), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isNull", ,]
[), :, null, ;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >]
[., type, ), :, null, ;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,]
[;, }, }, }, ), ., put, (, "isNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {]
[,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, )]
[), ., put, (, "isDefAndNotNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType]
[), {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, )]
[., outcome, ), {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, .]
[;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }, ), ., put, (, "isDefAndNotNull"]
[?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull]
[!=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {]
[., type, !=, null, ?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }]
[?, getNativeType, (, NULL_TYPE, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull]
[:, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }, ), ., put]
[., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, )]
[), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type]
[), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }, ), .]
[., type, ), :, null, ;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }]
[;, }, else, {, return, getRestrictedWithoutNull, (, p, ., type, ), ;, }, }, }, ), ., put, (, "isDefAndNotNull"]
[;, }, }, }, ), ., put, (, "isDefAndNotNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {]
[), ;, }, }, }, ), ., put, (, "isDefAndNotNull", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, )]
[., type, ), ;, }, }, }, ), ., put, (, "isDefAndNotNull", ,, new, Function, <, TypeRestriction, ,, JSType, >]
[,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, )]
[), ., put, (, "isString", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType]
[), {, return, getRestrictedWithoutUndefined, (, getRestrictedWithoutNull, (, p, ., type, ), ), ;, }, else, {, return, p, ., type]
[., outcome, ), {, return, getRestrictedWithoutUndefined, (, getRestrictedWithoutNull, (, p, ., type, ), ), ;, }, else, {, return, p]
[;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, .]
[), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p]
[), ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (]
[., type, ), ), ;, }, else, {, return, p, ., type, !=, null, ?, getNativeType, (, NULL_VOID, ), .]
[;, }, }, }, ), ., put, (, "isString", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {]
[?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), .]
[!=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }]
[., type, !=, null, ?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }]
[?, getNativeType, (, NULL_VOID, ), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), .]
[:, null, ;, }, }, }, ), ., put, (, "isString", ,, new, Function, <, TypeRestriction, ,, JSType, >, (]
[., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isString", ,, new]
[), ., getGreatestSubtype, (, p, ., type, ), :, null, ;, }, }, }, ), ., put, (, "isString", ,]
[), :, null, ;, }, }, }, ), ., put, (, "isString", ,, new, Function, <, TypeRestriction, ,, JSType, >]
[., type, ), :, null, ;, }, }, }, ), ., put, (, "isString", ,, new, Function, <, TypeRestriction, ,]
[;, }, }, }, ), ., put, (, "isString", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {]
[,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, )]
[), ., put, (, "isBoolean", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType]
[;, }, }, ), ., put, (, "isBoolean", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @]
[,, "string", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isBoolean", ,, new, Function, <, TypeRestriction]
[., type, ,, "string", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isBoolean", ,, new, Function]
[,, p, ., outcome, ), ;, }, }, ), ., put, (, "isBoolean", ,, new, Function, <, TypeRestriction, ,, JSType]
[), ;, }, }, ), ., put, (, "isBoolean", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {]
[., outcome, ), ;, }, }, ), ., put, (, "isBoolean", ,, new, Function, <, TypeRestriction, ,, JSType, >, (]
[,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, )]
[), ., put, (, "isNumber", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType]
[;, }, }, ), ., put, (, "isNumber", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @]
[,, "boolean", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isNumber", ,, new, Function, <, TypeRestriction]
[., type, ,, "boolean", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isNumber", ,, new, Function]
[,, p, ., outcome, ), ;, }, }, ), ., put, (, "isNumber", ,, new, Function, <, TypeRestriction, ,, JSType]
[), ;, }, }, ), ., put, (, "isNumber", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {]
[., outcome, ), ;, }, }, ), ., put, (, "isNumber", ,, new, Function, <, TypeRestriction, ,, JSType, >, (]
[,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, )]
[), ., put, (, "isFunction", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType]
[;, }, }, ), ., put, (, "isFunction", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @]
[,, "number", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isFunction", ,, new, Function, <, TypeRestriction]
[., type, ,, "number", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isFunction", ,, new, Function]
[,, p, ., outcome, ), ;, }, }, ), ., put, (, "isFunction", ,, new, Function, <, TypeRestriction, ,, JSType]
[), ;, }, }, ), ., put, (, "isFunction", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {]
[., outcome, ), ;, }, }, ), ., put, (, "isFunction", ,, new, Function, <, TypeRestriction, ,, JSType, >, (]
[,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, )]
[), ., put, (, "isArray", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType]
[;, }, }, ), ., put, (, "isArray", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @]
[,, "function", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isArray", ,, new, Function, <, TypeRestriction]
[., type, ,, "function", ,, p, ., outcome, ), ;, }, }, ), ., put, (, "isArray", ,, new, Function]
[,, p, ., outcome, ), ;, }, }, ), ., put, (, "isArray", ,, new, Function, <, TypeRestriction, ,, JSType]
[), ;, }, }, ), ., put, (, "isArray", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {]
[., outcome, ), ;, }, }, ), ., put, (, "isArray", ,, new, Function, <, TypeRestriction, ,, JSType, >, (]
[,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, )]
[), ., put, (, "isObject", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType]
[), {, return, p, ., outcome, ?, getNativeType, (, ARRAY_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor]
[==, null, ), {, return, p, ., outcome, ?, getNativeType, (, ARRAY_TYPE, ), :, null, ;, }, Visitor, <, JSType]
[., type, ==, null, ), {, return, p, ., outcome, ?, getNativeType, (, ARRAY_TYPE, ), :, null, ;, }, Visitor]
[), {, return, p, ., outcome, ?, getNativeType, (, ARRAY_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor]
[;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToArrayVisitor, :, restrictToNotArrayVisitor, ;, return, p, ., type]
[?, getNativeType, (, ARRAY_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToArrayVisitor]
[., outcome, ?, getNativeType, (, ARRAY_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome]
[:, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToArrayVisitor, :, restrictToNotArrayVisitor, ;, return, p]
[), :, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToArrayVisitor, :, restrictToNotArrayVisitor, ;, return]
[;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToArrayVisitor, :, restrictToNotArrayVisitor, ;, return, p, ., type]
[;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, ), ., put, (, "isObject", ,, new]
[?, restrictToArrayVisitor, :, restrictToNotArrayVisitor, ;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, ), ., put]
[., outcome, ?, restrictToArrayVisitor, :, restrictToNotArrayVisitor, ;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, )]
[:, restrictToNotArrayVisitor, ;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, ), ., put, (, "isObject"]
[;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, ), ., put, (, "isObject", ,, new]
[;, }, }, ), ., put, (, "isObject", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @]
[., visit, (, visitor, ), ;, }, }, ), ., put, (, "isObject", ,, new, Function, <, TypeRestriction, ,, JSType]
[., type, ., visit, (, visitor, ), ;, }, }, ), ., put, (, "isObject", ,, new, Function, <, TypeRestriction]
[), ;, }, }, ), ., put, (, "isObject", ,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {]
[,, new, Function, <, TypeRestriction, ,, JSType, >, (, ), {, @, Override, public, JSType, apply, (, TypeRestriction, p, )]
[), ., build, (, ), ;, }, @, Override, public, FlowScope, getPreciserScopeKnowingConditionOutcome, (, Node, condition, ,, FlowScope, blindScope, ,, boolean]
[), {, return, p, ., outcome, ?, getNativeType, (, OBJECT_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor]
[==, null, ), {, return, p, ., outcome, ?, getNativeType, (, OBJECT_TYPE, ), :, null, ;, }, Visitor, <, JSType]
[., type, ==, null, ), {, return, p, ., outcome, ?, getNativeType, (, OBJECT_TYPE, ), :, null, ;, }, Visitor]
[), {, return, p, ., outcome, ?, getNativeType, (, OBJECT_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor]
[;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToObjectVisitor, :, restrictToNotObjectVisitor, ;, return, p, ., type]
[?, getNativeType, (, OBJECT_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToObjectVisitor]
[., outcome, ?, getNativeType, (, OBJECT_TYPE, ), :, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome]
[:, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToObjectVisitor, :, restrictToNotObjectVisitor, ;, return, p]
[), :, null, ;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToObjectVisitor, :, restrictToNotObjectVisitor, ;, return]
[;, }, Visitor, <, JSType, >, visitor, =, p, ., outcome, ?, restrictToObjectVisitor, :, restrictToNotObjectVisitor, ;, return, p, ., type]
[;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, ), ., build, (, ), ;, }]
[?, restrictToObjectVisitor, :, restrictToNotObjectVisitor, ;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, ), ., build]
[., outcome, ?, restrictToObjectVisitor, :, restrictToNotObjectVisitor, ;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, )]
[:, restrictToNotObjectVisitor, ;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, ), ., build, (, )]
[;, return, p, ., type, ., visit, (, visitor, ), ;, }, }, ), ., build, (, ), ;, }]
[;, }, }, ), ., build, (, ), ;, }, @, Override, public, FlowScope, getPreciserScopeKnowingConditionOutcome, (, Node, condition, ,, FlowScope]
[., visit, (, visitor, ), ;, }, }, ), ., build, (, ), ;, }, @, Override, public, FlowScope, getPreciserScopeKnowingConditionOutcome]
[., type, ., visit, (, visitor, ), ;, }, }, ), ., build, (, ), ;, }, @, Override, public]
[), ;, }, }, ), ., build, (, ), ;, }, @, Override, public, FlowScope, getPreciserScopeKnowingConditionOutcome, (, Node, condition, ,]
[), {, Node, callee, =, condition, ., getFirstChild, (, ), ;, Node, param, =, condition, ., getLastChild, (, ), ;]
[&&, condition, ., getChildCount, (, ), ==, 2, ), {, Node, callee, =, condition, ., getFirstChild, (, ), ;, Node]
[., isCall, (, ), &&, condition, ., getChildCount, (, ), ==, 2, ), {, Node, callee, =, condition, ., getFirstChild]
[), {, Node, callee, =, condition, ., getFirstChild, (, ), ;, Node, param, =, condition, ., getLastChild, (, ), ;]
[==, 2, ), {, Node, callee, =, condition, ., getFirstChild, (, ), ;, Node, param, =, condition, ., getLastChild, (]
[., getChildCount, (, ), ==, 2, ), {, Node, callee, =, condition, ., getFirstChild, (, ), ;, Node, param, =]
[), {, Node, callee, =, condition, ., getFirstChild, (, ), ;, Node, param, =, condition, ., getLastChild, (, ), ;]
[;, Node, param, =, condition, ., getLastChild, (, ), ;, if, (, callee, ., isGetProp, (, ), &&, param, .]
[., getFirstChild, (, ), ;, Node, param, =, condition, ., getLastChild, (, ), ;, if, (, callee, ., isGetProp, (]
[;, if, (, callee, ., isGetProp, (, ), &&, param, ., isQualifiedName, (, ), ), {, JSType, paramType, =, getTypeIfRefinable]
[., getLastChild, (, ), ;, if, (, callee, ., isGetProp, (, ), &&, param, ., isQualifiedName, (, ), ), {]
[), {, JSType, paramType, =, getTypeIfRefinable, (, param, ,, blindScope, ), ;, Node, left, =, callee, ., getFirstChild, (, )]
[&&, param, ., isQualifiedName, (, ), ), {, JSType, paramType, =, getTypeIfRefinable, (, param, ,, blindScope, ), ;, Node, left]
[., isGetProp, (, ), &&, param, ., isQualifiedName, (, ), ), {, JSType, paramType, =, getTypeIfRefinable, (, param, ,, blindScope]
[), {, JSType, paramType, =, getTypeIfRefinable, (, param, ,, blindScope, ), ;, Node, left, =, callee, ., getFirstChild, (, )]
[., isQualifiedName, (, ), ), {, JSType, paramType, =, getTypeIfRefinable, (, param, ,, blindScope, ), ;, Node, left, =, callee]
[;, Node, left, =, callee, ., getFirstChild, (, ), ;, Node, right, =, callee, ., getLastChild, (, ), ;, if]
[,, blindScope, ), ;, Node, left, =, callee, ., getFirstChild, (, ), ;, Node, right, =, callee, ., getLastChild, (]
[), ;, Node, left, =, callee, ., getFirstChild, (, ), ;, Node, right, =, callee, ., getLastChild, (, ), ;]
[;, Node, right, =, callee, ., getLastChild, (, ), ;, if, (, left, ., isName, (, ), &&, "goog", .]
[., getFirstChild, (, ), ;, Node, right, =, callee, ., getLastChild, (, ), ;, if, (, left, ., isName, (]
[;, if, (, left, ., isName, (, ), &&, "goog", ., equals, (, left, ., getString, (, ), ), &&]
[., getLastChild, (, ), ;, if, (, left, ., isName, (, ), &&, "goog", ., equals, (, left, ., getString]
[), {, Function, <, TypeRestriction, ,, JSType, >, restricter, =, restricters, ., get, (, right, ., getString, (, ), )]
[&&, right, ., isString, (, ), ), {, Function, <, TypeRestriction, ,, JSType, >, restricter, =, restricters, ., get, (]
[&&, "goog", ., equals, (, left, ., getString, (, ), ), &&, right, ., isString, (, ), ), {, Function]
[., isName, (, ), &&, "goog", ., equals, (, left, ., getString, (, ), ), &&, right, ., isString, (]
[&&, right, ., isString, (, ), ), {, Function, <, TypeRestriction, ,, JSType, >, restricter, =, restricters, ., get, (]
[., equals, (, left, ., getString, (, ), ), &&, right, ., isString, (, ), ), {, Function, <, TypeRestriction]
[), &&, right, ., isString, (, ), ), {, Function, <, TypeRestriction, ,, JSType, >, restricter, =, restricters, ., get]
[., getString, (, ), ), &&, right, ., isString, (, ), ), {, Function, <, TypeRestriction, ,, JSType, >, restricter]
[), {, Function, <, TypeRestriction, ,, JSType, >, restricter, =, restricters, ., get, (, right, ., getString, (, ), )]
[., isString, (, ), ), {, Function, <, TypeRestriction, ,, JSType, >, restricter, =, restricters, ., get, (, right, .]
[;, if, (, restricter, !=, null, ), {, return, restrictParameter, (, param, ,, paramType, ,, blindScope, ,, restricter, ,, outcome]
[., get, (, right, ., getString, (, ), ), ;, if, (, restricter, !=, null, ), {, return, restrictParameter, (]
[), ;, if, (, restricter, !=, null, ), {, return, restrictParameter, (, param, ,, paramType, ,, blindScope, ,, restricter, ,]
[., getString, (, ), ), ;, if, (, restricter, !=, null, ), {, return, restrictParameter, (, param, ,, paramType, ,]
[), {, return, restrictParameter, (, param, ,, paramType, ,, blindScope, ,, restricter, ,, outcome, ), ;, }, }, }, }]
[!=, null, ), {, return, restrictParameter, (, param, ,, paramType, ,, blindScope, ,, restricter, ,, outcome, ), ;, }, }]
[), {, return, restrictParameter, (, param, ,, paramType, ,, blindScope, ,, restricter, ,, outcome, ), ;, }, }, }, }]
[;, }, }, }, }, return, nextPreciserScopeKnowingConditionOutcome, (, condition, ,, blindScope, ,, outcome, ), ;, }, private, FlowScope, restrictParameter, (]
[,, paramType, ,, blindScope, ,, restricter, ,, outcome, ), ;, }, }, }, }, return, nextPreciserScopeKnowingConditionOutcome, (, condition, ,, blindScope]
[,, blindScope, ,, restricter, ,, outcome, ), ;, }, }, }, }, return, nextPreciserScopeKnowingConditionOutcome, (, condition, ,, blindScope, ,, outcome]
[,, restricter, ,, outcome, ), ;, }, }, }, }, return, nextPreciserScopeKnowingConditionOutcome, (, condition, ,, blindScope, ,, outcome, ), ;]
[,, outcome, ), ;, }, }, }, }, return, nextPreciserScopeKnowingConditionOutcome, (, condition, ,, blindScope, ,, outcome, ), ;, }, private]
[), ;, }, }, }, }, return, nextPreciserScopeKnowingConditionOutcome, (, condition, ,, blindScope, ,, outcome, ), ;, }, private, FlowScope, restrictParameter]
[;, }, private, FlowScope, restrictParameter, (, Node, parameter, ,, JSType, type, ,, FlowScope, blindScope, ,, Function, <, TypeRestriction, ,, JSType]
[,, blindScope, ,, outcome, ), ;, }, private, FlowScope, restrictParameter, (, Node, parameter, ,, JSType, type, ,, FlowScope, blindScope, ,]
[,, outcome, ), ;, }, private, FlowScope, restrictParameter, (, Node, parameter, ,, JSType, type, ,, FlowScope, blindScope, ,, Function, <]
[), ;, }, private, FlowScope, restrictParameter, (, Node, parameter, ,, JSType, type, ,, FlowScope, blindScope, ,, Function, <, TypeRestriction, ,]
[=, restriction, ., apply, (, new, TypeRestriction, (, type, ,, outcome, ), ), ;, if, (, type, !=, null, )]
[;, if, (, type, !=, null, ), {, FlowScope, informed, =, blindScope, ., createChildFlowScope, (, ), ;, declareNameInScope, (, informed]
[., apply, (, new, TypeRestriction, (, type, ,, outcome, ), ), ;, if, (, type, !=, null, ), {, FlowScope]
[), ;, if, (, type, !=, null, ), {, FlowScope, informed, =, blindScope, ., createChildFlowScope, (, ), ;, declareNameInScope, (]
[,, outcome, ), ), ;, if, (, type, !=, null, ), {, FlowScope, informed, =, blindScope, ., createChildFlowScope, (, )]
[), ), ;, if, (, type, !=, null, ), {, FlowScope, informed, =, blindScope, ., createChildFlowScope, (, ), ;, declareNameInScope]
[), {, FlowScope, informed, =, blindScope, ., createChildFlowScope, (, ), ;, declareNameInScope, (, informed, ,, parameter, ,, type, ), ;]
[!=, null, ), {, FlowScope, informed, =, blindScope, ., createChildFlowScope, (, ), ;, declareNameInScope, (, informed, ,, parameter, ,, type]
[), {, FlowScope, informed, =, blindScope, ., createChildFlowScope, (, ), ;, declareNameInScope, (, informed, ,, parameter, ,, type, ), ;]
[;, declareNameInScope, (, informed, ,, parameter, ,, type, ), ;, return, informed, ;, }, else, {, return, blindScope, ;, }]
[., createChildFlowScope, (, ), ;, declareNameInScope, (, informed, ,, parameter, ,, type, ), ;, return, informed, ;, }, else, {]
[;, return, informed, ;, }, else, {, return, blindScope, ;, }, }, private, static, class, TypeRestriction, {, private, final, JSType]
[,, parameter, ,, type, ), ;, return, informed, ;, }, else, {, return, blindScope, ;, }, }, private, static, class]
[,, type, ), ;, return, informed, ;, }, else, {, return, blindScope, ;, }, }, private, static, class, TypeRestriction, {]
[), ;, return, informed, ;, }, else, {, return, blindScope, ;, }, }, private, static, class, TypeRestriction, {, private, final]
[;, }, else, {, return, blindScope, ;, }, }, private, static, class, TypeRestriction, {, private, final, JSType, type, ;, private]
[;, }, }, private, static, class, TypeRestriction, {, private, final, JSType, type, ;, private, final, boolean, outcome, ;, private, TypeRestriction]
[=, type, ;, this, ., outcome, =, outcome, ;, }, }, }]
[., type, =, type, ;, this, ., outcome, =, outcome, ;, }, }, }]
[;, this, ., outcome, =, outcome, ;, }, }, }]
[=, outcome, ;, }, }, }]
[., outcome, =, outcome, ;, }, }, }]
[;, }, }, }]
