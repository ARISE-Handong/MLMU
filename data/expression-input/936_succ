[=, target, ;, this, ., thisValue, =, thisValue, ;, this, ., parameters, =, parameters, ;, }, int, getBoundParameterCount, (, )]
[., target, =, target, ;, this, ., thisValue, =, thisValue, ;, this, ., parameters, =, parameters, ;, }, int, getBoundParameterCount]
[;, this, ., thisValue, =, thisValue, ;, this, ., parameters, =, parameters, ;, }, int, getBoundParameterCount, (, ), {, if]
[=, thisValue, ;, this, ., parameters, =, parameters, ;, }, int, getBoundParameterCount, (, ), {, if, (, parameters, ==, null]
[., thisValue, =, thisValue, ;, this, ., parameters, =, parameters, ;, }, int, getBoundParameterCount, (, ), {, if, (, parameters]
[;, this, ., parameters, =, parameters, ;, }, int, getBoundParameterCount, (, ), {, if, (, parameters, ==, null, ), {]
[=, parameters, ;, }, int, getBoundParameterCount, (, ), {, if, (, parameters, ==, null, ), {, return, 0, ;, }]
[., parameters, =, parameters, ;, }, int, getBoundParameterCount, (, ), {, if, (, parameters, ==, null, ), {, return, 0]
[;, }, int, getBoundParameterCount, (, ), {, if, (, parameters, ==, null, ), {, return, 0, ;, }, Node, paramParent]
[), {, return, 0, ;, }, Node, paramParent, =, parameters, ., getParent, (, ), ;, return, paramParent, ., getChildCount, (]
[==, null, ), {, return, 0, ;, }, Node, paramParent, =, parameters, ., getParent, (, ), ;, return, paramParent, .]
[), {, return, 0, ;, }, Node, paramParent, =, parameters, ., getParent, (, ), ;, return, paramParent, ., getChildCount, (]
[;, }, Node, paramParent, =, parameters, ., getParent, (, ), ;, return, paramParent, ., getChildCount, (, ), -, paramParent, .]
[;, return, paramParent, ., getChildCount, (, ), -, paramParent, ., getIndexOfChild, (, parameters, ), ;, }, }, public, boolean, isPropertyTestFunction]
[., getParent, (, ), ;, return, paramParent, ., getChildCount, (, ), -, paramParent, ., getIndexOfChild, (, parameters, ), ;, }]
[;, }, }, public, boolean, isPropertyTestFunction, (, Node, call, ), ;, public, boolean, isPrototypeAlias, (, Node, getProp, ), ;, public]
[-, paramParent, ., getIndexOfChild, (, parameters, ), ;, }, }, public, boolean, isPropertyTestFunction, (, Node, call, ), ;, public, boolean]
[., getChildCount, (, ), -, paramParent, ., getIndexOfChild, (, parameters, ), ;, }, }, public, boolean, isPropertyTestFunction, (, Node, call]
[;, }, }, public, boolean, isPropertyTestFunction, (, Node, call, ), ;, public, boolean, isPrototypeAlias, (, Node, getProp, ), ;, public]
[., getIndexOfChild, (, parameters, ), ;, }, }, public, boolean, isPropertyTestFunction, (, Node, call, ), ;, public, boolean, isPrototypeAlias, (]
[), ;, }, }, public, boolean, isPropertyTestFunction, (, Node, call, ), ;, public, boolean, isPrototypeAlias, (, Node, getProp, ), ;]
[=, type, ;, this, ., subclassName, =, subclassNode, ., getQualifiedName, (, ), ;, this, ., superclassName, =, superclassNode, ., getQualifiedName]
[., type, =, type, ;, this, ., subclassName, =, subclassNode, ., getQualifiedName, (, ), ;, this, ., superclassName, =, superclassNode]
[;, this, ., subclassName, =, subclassNode, ., getQualifiedName, (, ), ;, this, ., superclassName, =, superclassNode, ., getQualifiedName, (, )]
[=, subclassNode, ., getQualifiedName, (, ), ;, this, ., superclassName, =, superclassNode, ., getQualifiedName, (, ), ;, }, }, static]
[., subclassName, =, subclassNode, ., getQualifiedName, (, ), ;, this, ., superclassName, =, superclassNode, ., getQualifiedName, (, ), ;, }]
[;, this, ., superclassName, =, superclassNode, ., getQualifiedName, (, ), ;, }, }, static, class, DelegateRelationship, {, final, String, delegateBase]
[., getQualifiedName, (, ), ;, this, ., superclassName, =, superclassNode, ., getQualifiedName, (, ), ;, }, }, static, class, DelegateRelationship]
[=, superclassNode, ., getQualifiedName, (, ), ;, }, }, static, class, DelegateRelationship, {, final, String, delegateBase, ;, final, String, delegator]
[., superclassName, =, superclassNode, ., getQualifiedName, (, ), ;, }, }, static, class, DelegateRelationship, {, final, String, delegateBase, ;, final]
[;, }, }, static, class, DelegateRelationship, {, final, String, delegateBase, ;, final, String, delegator, ;, DelegateRelationship, (, String, delegateBase, ,]
[., getQualifiedName, (, ), ;, }, }, static, class, DelegateRelationship, {, final, String, delegateBase, ;, final, String, delegator, ;, DelegateRelationship]
[=, delegateBase, ;, this, ., delegator, =, delegator, ;, }, }, static, class, ObjectLiteralCast, {, final, String, typeName, ;, final]
[., delegateBase, =, delegateBase, ;, this, ., delegator, =, delegator, ;, }, }, static, class, ObjectLiteralCast, {, final, String, typeName]
[;, this, ., delegator, =, delegator, ;, }, }, static, class, ObjectLiteralCast, {, final, String, typeName, ;, final, Node, objectNode]
[=, delegator, ;, }, }, static, class, ObjectLiteralCast, {, final, String, typeName, ;, final, Node, objectNode, ;, final, DiagnosticType, diagnosticType]
[., delegator, =, delegator, ;, }, }, static, class, ObjectLiteralCast, {, final, String, typeName, ;, final, Node, objectNode, ;, final]
[;, }, }, static, class, ObjectLiteralCast, {, final, String, typeName, ;, final, Node, objectNode, ;, final, DiagnosticType, diagnosticType, ;, ObjectLiteralCast]
[=, typeName, ;, this, ., objectNode, =, objectNode, ;, this, ., diagnosticType, =, diagnosticType, ;, }, }, public, class, AssertionFunctionSpec]
[., typeName, =, typeName, ;, this, ., objectNode, =, objectNode, ;, this, ., diagnosticType, =, diagnosticType, ;, }, }, public]
[;, this, ., objectNode, =, objectNode, ;, this, ., diagnosticType, =, diagnosticType, ;, }, }, public, class, AssertionFunctionSpec, {, protected]
[=, objectNode, ;, this, ., diagnosticType, =, diagnosticType, ;, }, }, public, class, AssertionFunctionSpec, {, protected, final, String, functionName, ;]
[., objectNode, =, objectNode, ;, this, ., diagnosticType, =, diagnosticType, ;, }, }, public, class, AssertionFunctionSpec, {, protected, final, String]
[;, this, ., diagnosticType, =, diagnosticType, ;, }, }, public, class, AssertionFunctionSpec, {, protected, final, String, functionName, ;, protected, final]
[=, diagnosticType, ;, }, }, public, class, AssertionFunctionSpec, {, protected, final, String, functionName, ;, protected, final, JSTypeNative, assertedType, ;, public]
[., diagnosticType, =, diagnosticType, ;, }, }, public, class, AssertionFunctionSpec, {, protected, final, String, functionName, ;, protected, final, JSTypeNative, assertedType]
[;, }, }, public, class, AssertionFunctionSpec, {, protected, final, String, functionName, ;, protected, final, JSTypeNative, assertedType, ;, public, AssertionFunctionSpec, (]
[,, null, ), ;, }, public, AssertionFunctionSpec, (, String, functionName, ,, JSTypeNative, assertedType, ), {, this, ., functionName, =, functionName]
[), ;, }, public, AssertionFunctionSpec, (, String, functionName, ,, JSTypeNative, assertedType, ), {, this, ., functionName, =, functionName, ;, this]
[=, functionName, ;, this, ., assertedType, =, assertedType, ;, }, public, String, getFunctionName, (, ), {, return, functionName, ;, }]
[., functionName, =, functionName, ;, this, ., assertedType, =, assertedType, ;, }, public, String, getFunctionName, (, ), {, return, functionName]
[;, this, ., assertedType, =, assertedType, ;, }, public, String, getFunctionName, (, ), {, return, functionName, ;, }, public, Node]
[=, assertedType, ;, }, public, String, getFunctionName, (, ), {, return, functionName, ;, }, public, Node, getAssertedParam, (, Node, firstParam]
[., assertedType, =, assertedType, ;, }, public, String, getFunctionName, (, ), {, return, functionName, ;, }, public, Node, getAssertedParam, (]
[;, }, public, String, getFunctionName, (, ), {, return, functionName, ;, }, public, Node, getAssertedParam, (, Node, firstParam, ), {]
[;, }, public, Node, getAssertedParam, (, Node, firstParam, ), {, return, firstParam, ;, }, public, JSType, getAssertedType, (, Node, call]
[;, }, public, JSType, getAssertedType, (, Node, call, ,, JSTypeRegistry, registry, ), {, return, assertedType, !=, null, ?, registry, .]
[;, }, }, }]
[?, registry, ., getNativeType, (, assertedType, ), :, null, ;, }, }, }]
[!=, null, ?, registry, ., getNativeType, (, assertedType, ), :, null, ;, }, }, }]
[?, registry, ., getNativeType, (, assertedType, ), :, null, ;, }, }, }]
[:, null, ;, }, }, }]
[., getNativeType, (, assertedType, ), :, null, ;, }, }, }]
[), :, null, ;, }, }, }]
[;, }, }, }]
