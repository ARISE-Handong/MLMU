[java, ., util, ., TimeZone, ;, public, class, Minute, extends, RegularTimePeriod, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[Minute, extends, RegularTimePeriod, implements, Serializable, {, private, static, final, long, serialVersionUID, =, 2144572840034842871L, ;, public, static, final, int, FIRST_MINUTE_IN_HOUR, =]
[final, long, serialVersionUID, =, 2144572840034842871L, ;, public, static, final, int, FIRST_MINUTE_IN_HOUR, =, 0, ;, public, static, final, int, LAST_MINUTE_IN_HOUR, =]
[;, private, byte, minute, ;, private, long, firstMillisecond, ;, private, long, lastMillisecond, ;, public, Minute, (, ), {, this, (]
[(, new, Date, (, ), ), ;, }, public, Minute, (, int, minute, ,, Hour, hour, ), {, if, (]
[(, new, Date, (, ), ), ;, }, public, Minute, (, int, minute, ,, Hour, hour, ), {, if, (]
[Date, (, ), ), ;, }, public, Minute, (, int, minute, ,, Hour, hour, ), {, if, (, hour, ==]
[;, }, public, Minute, (, int, minute, ,, Hour, hour, ), {, if, (, hour, ==, null, ), {, throw]
[Minute, (, int, minute, ,, Hour, hour, ), {, if, (, hour, ==, null, ), {, throw, new, IllegalArgumentException, (]
[,, Hour, hour, ), {, if, (, hour, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'hour' argument.", ), ;, }]
[,, Hour, hour, ), {, if, (, hour, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'hour' argument.", ), ;, }]
[{, if, (, hour, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'hour' argument.", ), ;, }, this, ., minute, =]
[hour, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'hour' argument.", ), ;, }, this, ., minute, =, (, byte, )]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'hour' argument.", ), ;, }, this, ., minute, =, (, byte, ), minute, ;]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'hour' argument.", ), ;, }, this, ., minute, =, (, byte, ), minute, ;]
[new, IllegalArgumentException, (, "Null 'hour' argument.", ), ;, }, this, ., minute, =, (, byte, ), minute, ;, this, ., hour, =]
["Null 'hour' argument.", ), ;, }, this, ., minute, =, (, byte, ), minute, ;, this, ., hour, =, (, byte, )]
["Null 'hour' argument.", ), ;, }, this, ., minute, =, (, byte, ), minute, ;, this, ., hour, =, (, byte, )]
[minute, =, (, byte, ), minute, ;, this, ., hour, =, (, byte, ), hour, ., getHour, (, ), ;]
[minute, =, (, byte, ), minute, ;, this, ., hour, =, (, byte, ), hour, ., getHour, (, ), ;]
[), minute, ;, this, ., hour, =, (, byte, ), hour, ., getHour, (, ), ;, this, ., day, =]
[), minute, ;, this, ., hour, =, (, byte, ), hour, ., getHour, (, ), ;, this, ., day, =]
[=, (, byte, ), hour, ., getHour, (, ), ;, this, ., day, =, hour, ., getDay, (, ), ;]
[byte, ), hour, ., getHour, (, ), ;, this, ., day, =, hour, ., getDay, (, ), ;, peg, (]
[byte, ), hour, ., getHour, (, ), ;, this, ., day, =, hour, ., getDay, (, ), ;, peg, (]
[;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Minute, (, Date, time, ), {, this, (]
[(, Calendar, ., getInstance, (, ), ), ;, }, public, Minute, (, Date, time, ), {, this, (, time, ,]
[(, Calendar, ., getInstance, (, ), ), ;, }, public, Minute, (, Date, time, ), {, this, (, time, ,]
[TimeZone, ., getDefault, (, ), ), ;, }, public, Minute, (, Date, time, ,, TimeZone, zone, ), {, if, (]
[TimeZone, ., getDefault, (, ), ), ;, }, public, Minute, (, Date, time, ,, TimeZone, zone, ), {, if, (]
[getDefault, (, ), ), ;, }, public, Minute, (, Date, time, ,, TimeZone, zone, ), {, if, (, time, ==]
[;, }, public, Minute, (, Date, time, ,, TimeZone, zone, ), {, if, (, time, ==, null, ), {, throw]
[Minute, (, Date, time, ,, TimeZone, zone, ), {, if, (, time, ==, null, ), {, throw, new, IllegalArgumentException, (]
[zone, ), {, if, (, time, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'time' argument.", ), ;, }, if, (]
[zone, ), {, if, (, time, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'time' argument.", ), ;, }, if, (]
[{, if, (, time, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'time' argument.", ), ;, }, if, (, zone, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'time' argument.", ), ;, }, if, (, zone, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'time' argument.", ), ;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (]
[;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'zone' argument.", ), ;, }, Calendar, calendar, =]
[;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'zone' argument.", ), ;, }, Calendar, calendar, =]
[zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'zone' argument.", ), ;, }, Calendar, calendar, =, Calendar, ., getInstance, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'zone' argument.", ), ;, }, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ), ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'zone' argument.", ), ;, }, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ), ;]
[IllegalArgumentException, (, "Null 'zone' argument.", ), ;, }, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ), ;, calendar, ., setTime, (]
[Calendar, calendar, =, Calendar, ., getInstance, (, zone, ), ;, calendar, ., setTime, (, time, ), ;, int, min, =]
[Calendar, calendar, =, Calendar, ., getInstance, (, zone, ), ;, calendar, ., setTime, (, time, ), ;, int, min, =]
[., getInstance, (, zone, ), ;, calendar, ., setTime, (, time, ), ;, int, min, =, calendar, ., get, (]
[., getInstance, (, zone, ), ;, calendar, ., setTime, (, time, ), ;, int, min, =, calendar, ., get, (]
[;, calendar, ., setTime, (, time, ), ;, int, min, =, calendar, ., get, (, Calendar, ., MINUTE, ), ;]
[;, calendar, ., setTime, (, time, ), ;, int, min, =, calendar, ., get, (, Calendar, ., MINUTE, ), ;]
[(, time, ), ;, int, min, =, calendar, ., get, (, Calendar, ., MINUTE, ), ;, this, ., minute, =]
[;, int, min, =, calendar, ., get, (, Calendar, ., MINUTE, ), ;, this, ., minute, =, (, byte, )]
[min, =, calendar, ., get, (, Calendar, ., MINUTE, ), ;, this, ., minute, =, (, byte, ), min, ;]
[min, =, calendar, ., get, (, Calendar, ., MINUTE, ), ;, this, ., minute, =, (, byte, ), min, ;]
[get, (, Calendar, ., MINUTE, ), ;, this, ., minute, =, (, byte, ), min, ;, this, ., hour, =]
[., MINUTE, ), ;, this, ., minute, =, (, byte, ), min, ;, this, ., hour, =, (, byte, )]
[., MINUTE, ), ;, this, ., minute, =, (, byte, ), min, ;, this, ., hour, =, (, byte, )]
[this, ., minute, =, (, byte, ), min, ;, this, ., hour, =, (, byte, ), calendar, ., get, (]
[this, ., minute, =, (, byte, ), min, ;, this, ., hour, =, (, byte, ), calendar, ., get, (]
[byte, ), min, ;, this, ., hour, =, (, byte, ), calendar, ., get, (, Calendar, ., HOUR_OF_DAY, ), ;]
[byte, ), min, ;, this, ., hour, =, (, byte, ), calendar, ., get, (, Calendar, ., HOUR_OF_DAY, ), ;]
[this, ., hour, =, (, byte, ), calendar, ., get, (, Calendar, ., HOUR_OF_DAY, ), ;, this, ., day, =]
[=, (, byte, ), calendar, ., get, (, Calendar, ., HOUR_OF_DAY, ), ;, this, ., day, =, new, Day, (]
[byte, ), calendar, ., get, (, Calendar, ., HOUR_OF_DAY, ), ;, this, ., day, =, new, Day, (, time, ,]
[., get, (, Calendar, ., HOUR_OF_DAY, ), ;, this, ., day, =, new, Day, (, time, ,, zone, ), ;]
[(, Calendar, ., HOUR_OF_DAY, ), ;, this, ., day, =, new, Day, (, time, ,, zone, ), ;, peg, (]
[Minute, (, int, minute, ,, int, hour, ,, int, day, ,, int, month, ,, int, year, ), {, this, (]
[int, minute, ,, int, hour, ,, int, day, ,, int, month, ,, int, year, ), {, this, (, minute, ,]
[int, hour, ,, int, day, ,, int, month, ,, int, year, ), {, this, (, minute, ,, new, Hour, (]
[,, int, day, ,, int, month, ,, int, year, ), {, this, (, minute, ,, new, Hour, (, hour, ,]
[,, int, month, ,, int, year, ), {, this, (, minute, ,, new, Hour, (, hour, ,, new, Day, (]
[month, ,, int, year, ), {, this, (, minute, ,, new, Hour, (, hour, ,, new, Day, (, day, ,]
[int, year, ), {, this, (, minute, ,, new, Hour, (, hour, ,, new, Day, (, day, ,, month, ,]
[new, Day, (, day, ,, month, ,, year, ), ), ), ;, }, public, Day, getDay, (, ), {, return]
[new, Day, (, day, ,, month, ,, year, ), ), ), ;, }, public, Day, getDay, (, ), {, return]
[}, public, Day, getDay, (, ), {, return, this, ., day, ;, }, public, Hour, getHour, (, ), {, return]
[getDay, (, ), {, return, this, ., day, ;, }, public, Hour, getHour, (, ), {, return, new, Hour, (]
[getDay, (, ), {, return, this, ., day, ;, }, public, Hour, getHour, (, ), {, return, new, Hour, (]
[return, this, ., day, ;, }, public, Hour, getHour, (, ), {, return, new, Hour, (, this, ., hour, ,]
[return, this, ., day, ;, }, public, Hour, getHour, (, ), {, return, new, Hour, (, this, ., hour, ,]
[new, Hour, (, this, ., hour, ,, this, ., day, ), ;, }, public, int, getHourValue, (, ), {, return]
[new, Hour, (, this, ., hour, ,, this, ., day, ), ;, }, public, int, getHourValue, (, ), {, return]
[}, public, int, getHourValue, (, ), {, return, this, ., hour, ;, }, public, int, getMinute, (, ), {, return]
[}, public, int, getHourValue, (, ), {, return, this, ., hour, ;, }, public, int, getMinute, (, ), {, return]
[}, public, int, getMinute, (, ), {, return, this, ., minute, ;, }, public, long, getFirstMillisecond, (, ), {, return]
[}, public, int, getMinute, (, ), {, return, this, ., minute, ;, }, public, long, getFirstMillisecond, (, ), {, return]
[}, public, long, getFirstMillisecond, (, ), {, return, this, ., firstMillisecond, ;, }, public, long, getLastMillisecond, (, ), {, return]
[}, public, long, getFirstMillisecond, (, ), {, return, this, ., firstMillisecond, ;, }, public, long, getLastMillisecond, (, ), {, return]
[public, long, getLastMillisecond, (, ), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {]
[public, long, getLastMillisecond, (, ), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {]
[), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =]
[return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (]
[lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;]
[lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;]
[void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;, this, ., lastMillisecond, =]
[(, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;, this, ., lastMillisecond, =, getLastMillisecond, (]
[., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Minute, result, ;, if, (]
[., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Minute, result, ;, if, (]
[., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Minute, result, ;, if, (]
[(, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Minute, result, ;, if, (, this, ., minute, !=]
[;, }, public, RegularTimePeriod, previous, (, ), {, Minute, result, ;, if, (, this, ., minute, !=, FIRST_MINUTE_IN_HOUR, ), {]
[public, RegularTimePeriod, previous, (, ), {, Minute, result, ;, if, (, this, ., minute, !=, FIRST_MINUTE_IN_HOUR, ), {, result, =]
[(, ), {, Minute, result, ;, if, (, this, ., minute, !=, FIRST_MINUTE_IN_HOUR, ), {, result, =, new, Minute, (]
[(, ), {, Minute, result, ;, if, (, this, ., minute, !=, FIRST_MINUTE_IN_HOUR, ), {, result, =, new, Minute, (]
[(, ), {, Minute, result, ;, if, (, this, ., minute, !=, FIRST_MINUTE_IN_HOUR, ), {, result, =, new, Minute, (]
[result, ;, if, (, this, ., minute, !=, FIRST_MINUTE_IN_HOUR, ), {, result, =, new, Minute, (, this, ., minute, -]
[if, (, this, ., minute, !=, FIRST_MINUTE_IN_HOUR, ), {, result, =, new, Minute, (, this, ., minute, -, 1, ,]
[new, Minute, (, this, ., minute, -, 1, ,, getHour, (, ), ), ;, }, else, {, Hour, h, =]
[this, ., minute, -, 1, ,, getHour, (, ), ), ;, }, else, {, Hour, h, =, (, Hour, )]
[this, ., minute, -, 1, ,, getHour, (, ), ), ;, }, else, {, Hour, h, =, (, Hour, )]
[;, }, else, {, Hour, h, =, (, Hour, ), getHour, (, ), ., previous, (, ), ;, if, (]
[;, }, else, {, Hour, h, =, (, Hour, ), getHour, (, ), ., previous, (, ), ;, if, (]
[else, {, Hour, h, =, (, Hour, ), getHour, (, ), ., previous, (, ), ;, if, (, h, !=]
[h, =, (, Hour, ), getHour, (, ), ., previous, (, ), ;, if, (, h, !=, null, ), {]
[(, Hour, ), getHour, (, ), ., previous, (, ), ;, if, (, h, !=, null, ), {, result, =]
[getHour, (, ), ., previous, (, ), ;, if, (, h, !=, null, ), {, result, =, new, Minute, (]
[), ., previous, (, ), ;, if, (, h, !=, null, ), {, result, =, new, Minute, (, LAST_MINUTE_IN_HOUR, ,]
[if, (, h, !=, null, ), {, result, =, new, Minute, (, LAST_MINUTE_IN_HOUR, ,, h, ), ;, }, else, {]
[h, !=, null, ), {, result, =, new, Minute, (, LAST_MINUTE_IN_HOUR, ,, h, ), ;, }, else, {, result, =]
[result, =, new, Minute, (, LAST_MINUTE_IN_HOUR, ,, h, ), ;, }, else, {, result, =, null, ;, }, }, return]
[=, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Minute, result, ;, if, (]
[=, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Minute, result, ;, if, (]
[=, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Minute, result, ;, if, (]
[}, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Minute, result, ;, if, (, this, ., minute, !=]
[;, }, public, RegularTimePeriod, next, (, ), {, Minute, result, ;, if, (, this, ., minute, !=, LAST_MINUTE_IN_HOUR, ), {]
[public, RegularTimePeriod, next, (, ), {, Minute, result, ;, if, (, this, ., minute, !=, LAST_MINUTE_IN_HOUR, ), {, result, =]
[(, ), {, Minute, result, ;, if, (, this, ., minute, !=, LAST_MINUTE_IN_HOUR, ), {, result, =, new, Minute, (]
[(, ), {, Minute, result, ;, if, (, this, ., minute, !=, LAST_MINUTE_IN_HOUR, ), {, result, =, new, Minute, (]
[(, ), {, Minute, result, ;, if, (, this, ., minute, !=, LAST_MINUTE_IN_HOUR, ), {, result, =, new, Minute, (]
[result, ;, if, (, this, ., minute, !=, LAST_MINUTE_IN_HOUR, ), {, result, =, new, Minute, (, this, ., minute, +]
[if, (, this, ., minute, !=, LAST_MINUTE_IN_HOUR, ), {, result, =, new, Minute, (, this, ., minute, +, 1, ,]
[new, Minute, (, this, ., minute, +, 1, ,, getHour, (, ), ), ;, }, else, {, Hour, nextHour, =]
[this, ., minute, +, 1, ,, getHour, (, ), ), ;, }, else, {, Hour, nextHour, =, (, Hour, )]
[this, ., minute, +, 1, ,, getHour, (, ), ), ;, }, else, {, Hour, nextHour, =, (, Hour, )]
[;, }, else, {, Hour, nextHour, =, (, Hour, ), getHour, (, ), ., next, (, ), ;, if, (]
[;, }, else, {, Hour, nextHour, =, (, Hour, ), getHour, (, ), ., next, (, ), ;, if, (]
[else, {, Hour, nextHour, =, (, Hour, ), getHour, (, ), ., next, (, ), ;, if, (, nextHour, !=]
[nextHour, =, (, Hour, ), getHour, (, ), ., next, (, ), ;, if, (, nextHour, !=, null, ), {]
[(, Hour, ), getHour, (, ), ., next, (, ), ;, if, (, nextHour, !=, null, ), {, result, =]
[getHour, (, ), ., next, (, ), ;, if, (, nextHour, !=, null, ), {, result, =, new, Minute, (]
[), ., next, (, ), ;, if, (, nextHour, !=, null, ), {, result, =, new, Minute, (, FIRST_MINUTE_IN_HOUR, ,]
[if, (, nextHour, !=, null, ), {, result, =, new, Minute, (, FIRST_MINUTE_IN_HOUR, ,, nextHour, ), ;, }, else, {]
[nextHour, !=, null, ), {, result, =, new, Minute, (, FIRST_MINUTE_IN_HOUR, ,, nextHour, ), ;, }, else, {, result, =]
[result, =, new, Minute, (, FIRST_MINUTE_IN_HOUR, ,, nextHour, ), ;, }, else, {, result, =, null, ;, }, }, return]
[{, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, long, hourIndex, =]
[{, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, long, hourIndex, =]
[{, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, long, hourIndex, =]
[{, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, long, hourIndex, =]
[{, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, long, hourIndex, =]
[result, ;, }, public, long, getSerialIndex, (, ), {, long, hourIndex, =, this, ., day, ., getSerialIndex, (, ), *]
[}, public, long, getSerialIndex, (, ), {, long, hourIndex, =, this, ., day, ., getSerialIndex, (, ), *, 24L, +]
[}, public, long, getSerialIndex, (, ), {, long, hourIndex, =, this, ., day, ., getSerialIndex, (, ), *, 24L, +]
[), {, long, hourIndex, =, this, ., day, ., getSerialIndex, (, ), *, 24L, +, this, ., hour, ;, return]
[), {, long, hourIndex, =, this, ., day, ., getSerialIndex, (, ), *, 24L, +, this, ., hour, ;, return]
[), {, long, hourIndex, =, this, ., day, ., getSerialIndex, (, ), *, 24L, +, this, ., hour, ;, return]
[long, hourIndex, =, this, ., day, ., getSerialIndex, (, ), *, 24L, +, this, ., hour, ;, return, hourIndex, *]
[=, this, ., day, ., getSerialIndex, (, ), *, 24L, +, this, ., hour, ;, return, hourIndex, *, 60L, +]
[=, this, ., day, ., getSerialIndex, (, ), *, 24L, +, this, ., hour, ;, return, hourIndex, *, 60L, +]
[hourIndex, *, 60L, +, this, ., minute, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =]
[hourIndex, *, 60L, +, this, ., minute, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =]
[hourIndex, *, 60L, +, this, ., minute, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =]
[getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[=, this, ., day, ., getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -]
[getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -, 1, ;, int, day, =]
[getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -, 1, ;, int, day, =]
[getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -, 1, ;, int, day, =]
[., day, ., getMonth, (, ), -, 1, ;, int, day, =, this, ., day, ., getDayOfMonth, (, ), ;]
[., day, ., getMonth, (, ), -, 1, ;, int, day, =, this, ., day, ., getDayOfMonth, (, ), ;]
[-, 1, ;, int, day, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;]
[-, 1, ;, int, day, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;]
[day, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;, calendar, ., set, (]
[this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;, calendar, ., set, (, year, ,]
[day, ., getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;, calendar, ., set, (, year, ,, month, ,]
[getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;, calendar, ., set, (, year, ,, month, ,, day, ,]
[getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;, calendar, ., set, (, year, ,, month, ,, day, ,]
[calendar, ., clear, (, ), ;, calendar, ., set, (, year, ,, month, ,, day, ,, this, ., hour, ,]
[calendar, ., clear, (, ), ;, calendar, ., set, (, year, ,, month, ,, day, ,, this, ., hour, ,]
[), ;, calendar, ., set, (, year, ,, month, ,, day, ,, this, ., hour, ,, this, ., minute, ,]
[., set, (, year, ,, month, ,, day, ,, this, ., hour, ,, this, ., minute, ,, 0, ), ;]
[., set, (, year, ,, month, ,, day, ,, this, ., hour, ,, this, ., minute, ,, 0, ), ;]
[,, month, ,, day, ,, this, ., hour, ,, this, ., minute, ,, 0, ), ;, calendar, ., set, (]
[,, month, ,, day, ,, this, ., hour, ,, this, ., minute, ,, 0, ), ;, calendar, ., set, (]
[,, this, ., hour, ,, this, ., minute, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,]
[,, this, ., minute, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[,, this, ., minute, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[,, this, ., minute, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, year, =]
[getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, year, =]
[getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, year, =]
[getLastMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[getLastMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[getLastMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[getLastMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[=, this, ., day, ., getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -]
[getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -, 1, ;, int, day, =]
[getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -, 1, ;, int, day, =]
[getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -, 1, ;, int, day, =]
[., day, ., getMonth, (, ), -, 1, ;, int, day, =, this, ., day, ., getDayOfMonth, (, ), ;]
[., day, ., getMonth, (, ), -, 1, ;, int, day, =, this, ., day, ., getDayOfMonth, (, ), ;]
[-, 1, ;, int, day, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;]
[-, 1, ;, int, day, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;]
[day, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;, calendar, ., set, (]
[this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;, calendar, ., set, (, year, ,]
[day, ., getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;, calendar, ., set, (, year, ,, month, ,]
[getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;, calendar, ., set, (, year, ,, month, ,, day, ,]
[getDayOfMonth, (, ), ;, calendar, ., clear, (, ), ;, calendar, ., set, (, year, ,, month, ,, day, ,]
[calendar, ., clear, (, ), ;, calendar, ., set, (, year, ,, month, ,, day, ,, this, ., hour, ,]
[calendar, ., clear, (, ), ;, calendar, ., set, (, year, ,, month, ,, day, ,, this, ., hour, ,]
[), ;, calendar, ., set, (, year, ,, month, ,, day, ,, this, ., hour, ,, this, ., minute, ,]
[., set, (, year, ,, month, ,, day, ,, this, ., hour, ,, this, ., minute, ,, 59, ), ;]
[., set, (, year, ,, month, ,, day, ,, this, ., hour, ,, this, ., minute, ,, 59, ), ;]
[,, month, ,, day, ,, this, ., hour, ,, this, ., minute, ,, 59, ), ;, calendar, ., set, (]
[,, month, ,, day, ,, this, ., hour, ,, this, ., minute, ,, 59, ), ;, calendar, ., set, (]
[,, this, ., hour, ,, this, ., minute, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,]
[,, this, ., minute, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[,, this, ., minute, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[,, this, ., minute, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[., getTime, (, ), ., getTime, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., getTime, (, ), ., getTime, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[(, ), ., getTime, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[(, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, Minute, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, Minute, ), ), {, return, false, ;, }, Minute, that, =]
[if, (, !, (, obj, instanceof, Minute, ), ), {, return, false, ;, }, Minute, that, =, (, Minute, )]
[obj, instanceof, Minute, ), ), {, return, false, ;, }, Minute, that, =, (, Minute, ), obj, ;, if, (]
[obj, instanceof, Minute, ), ), {, return, false, ;, }, Minute, that, =, (, Minute, ), obj, ;, if, (]
[obj, instanceof, Minute, ), ), {, return, false, ;, }, Minute, that, =, (, Minute, ), obj, ;, if, (]
[), {, return, false, ;, }, Minute, that, =, (, Minute, ), obj, ;, if, (, this, ., minute, !=]
[), {, return, false, ;, }, Minute, that, =, (, Minute, ), obj, ;, if, (, this, ., minute, !=]
[Minute, that, =, (, Minute, ), obj, ;, if, (, this, ., minute, !=, that, ., minute, ), {, return]
[), obj, ;, if, (, this, ., minute, !=, that, ., minute, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., minute, !=, that, ., minute, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., minute, !=, that, ., minute, ), {, return, false, ;, }, if, (]
[(, this, ., minute, !=, that, ., minute, ), {, return, false, ;, }, if, (, this, ., hour, !=]
[(, this, ., minute, !=, that, ., minute, ), {, return, false, ;, }, if, (, this, ., hour, !=]
[., minute, ), {, return, false, ;, }, if, (, this, ., hour, !=, that, ., hour, ), {, return]
[return, false, ;, }, if, (, this, ., hour, !=, that, ., hour, ), {, return, false, ;, }, return]
[hour, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =]
[{, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =]
[}, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *]
[true, ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *, result, +]
[true, ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *, result, +]
[int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., minute, ;]
[(, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., minute, ;, result, =]
[(, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., minute, ;, result, =]
[(, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., minute, ;, result, =]
[{, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., minute, ;, result, =, 37, *]
[result, =, 17, ;, result, =, 37, *, result, +, this, ., minute, ;, result, =, 37, *, result, +]
[result, =, 17, ;, result, =, 37, *, result, +, this, ., minute, ;, result, =, 37, *, result, +]
[result, =, 37, *, result, +, this, ., minute, ;, result, =, 37, *, result, +, this, ., hour, ;]
[37, *, result, +, this, ., minute, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =]
[37, *, result, +, this, ., minute, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =]
[37, *, result, +, this, ., minute, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =]
[result, +, this, ., minute, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =, 37, *]
[this, ., minute, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =, 37, *, result, +]
[this, ., minute, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =, 37, *, result, +]
[this, ., minute, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =, 37, *, result, +]
[+, this, ., hour, ;, result, =, 37, *, result, +, this, ., day, ., hashCode, (, ), ;, return]
[(, ), ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (]
[(, ), ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (]
[int, compareTo, (, Object, o1, ), {, int, result, ;, if, (, o1, instanceof, Minute, ), {, Minute, m, =]
[Object, o1, ), {, int, result, ;, if, (, o1, instanceof, Minute, ), {, Minute, m, =, (, Minute, )]
[), {, int, result, ;, if, (, o1, instanceof, Minute, ), {, Minute, m, =, (, Minute, ), o1, ;]
[int, result, ;, if, (, o1, instanceof, Minute, ), {, Minute, m, =, (, Minute, ), o1, ;, result, =]
[int, result, ;, if, (, o1, instanceof, Minute, ), {, Minute, m, =, (, Minute, ), o1, ;, result, =]
[instanceof, Minute, ), {, Minute, m, =, (, Minute, ), o1, ;, result, =, getHour, (, ), ., compareTo, (]
[instanceof, Minute, ), {, Minute, m, =, (, Minute, ), o1, ;, result, =, getHour, (, ), ., compareTo, (]
[), o1, ;, result, =, getHour, (, ), ., compareTo, (, m, ., getHour, (, ), ), ;, if, (]
[), o1, ;, result, =, getHour, (, ), ., compareTo, (, m, ., getHour, (, ), ), ;, if, (]
[;, result, =, getHour, (, ), ., compareTo, (, m, ., getHour, (, ), ), ;, if, (, result, ==]
[getHour, (, ), ., compareTo, (, m, ., getHour, (, ), ), ;, if, (, result, ==, 0, ), {]
[), ., compareTo, (, m, ., getHour, (, ), ), ;, if, (, result, ==, 0, ), {, result, =]
[), ., compareTo, (, m, ., getHour, (, ), ), ;, if, (, result, ==, 0, ), {, result, =]
[), ., compareTo, (, m, ., getHour, (, ), ), ;, if, (, result, ==, 0, ), {, result, =]
[m, ., getHour, (, ), ), ;, if, (, result, ==, 0, ), {, result, =, this, ., minute, -]
[m, ., getHour, (, ), ), ;, if, (, result, ==, 0, ), {, result, =, this, ., minute, -]
[0, ), {, result, =, this, ., minute, -, m, ., getMinute, (, ), ;, }, }, else, if, (]
[0, ), {, result, =, this, ., minute, -, m, ., getMinute, (, ), ;, }, }, else, if, (]
[this, ., minute, -, m, ., getMinute, (, ), ;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {]
[minute, -, m, ., getMinute, (, ), ;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =]
[(, ), ;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {]
[;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =]
[if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =, 1, ;, }, return]
[=, 1, ;, }, return, result, ;, }, public, static, Minute, parseMinute, (, String, s, ), {, Minute, result, =]
[;, }, return, result, ;, }, public, static, Minute, parseMinute, (, String, s, ), {, Minute, result, =, null, ;]
[return, result, ;, }, public, static, Minute, parseMinute, (, String, s, ), {, Minute, result, =, null, ;, s, =]
[return, result, ;, }, public, static, Minute, parseMinute, (, String, s, ), {, Minute, result, =, null, ;, s, =]
[String, s, ), {, Minute, result, =, null, ;, s, =, s, ., trim, (, ), ;, String, daystr, =]
[String, s, ), {, Minute, result, =, null, ;, s, =, s, ., trim, (, ), ;, String, daystr, =]
[Minute, result, =, null, ;, s, =, s, ., trim, (, ), ;, String, daystr, =, s, ., substring, (]
[=, null, ;, s, =, s, ., trim, (, ), ;, String, daystr, =, s, ., substring, (, 0, ,]
[=, null, ;, s, =, s, ., trim, (, ), ;, String, daystr, =, s, ., substring, (, 0, ,]
[=, s, ., trim, (, ), ;, String, daystr, =, s, ., substring, (, 0, ,, Math, ., min, (]
[., trim, (, ), ;, String, daystr, =, s, ., substring, (, 0, ,, Math, ., min, (, 10, ,]
[., trim, (, ), ;, String, daystr, =, s, ., substring, (, 0, ,, Math, ., min, (, 10, ,]
[(, 0, ,, Math, ., min, (, 10, ,, s, ., length, (, ), ), ), ;, Day, day, =]
[(, 0, ,, Math, ., min, (, 10, ,, s, ., length, (, ), ), ), ;, Day, day, =]
[., min, (, 10, ,, s, ., length, (, ), ), ), ;, Day, day, =, Day, ., parseDay, (]
[s, ., length, (, ), ), ), ;, Day, day, =, Day, ., parseDay, (, daystr, ), ;, if, (]
[s, ., length, (, ), ), ), ;, Day, day, =, Day, ., parseDay, (, daystr, ), ;, if, (]
[length, (, ), ), ), ;, Day, day, =, Day, ., parseDay, (, daystr, ), ;, if, (, day, !=]
[Day, day, =, Day, ., parseDay, (, daystr, ), ;, if, (, day, !=, null, ), {, String, hmstr, =]
[Day, day, =, Day, ., parseDay, (, daystr, ), ;, if, (, day, !=, null, ), {, String, hmstr, =]
[., parseDay, (, daystr, ), ;, if, (, day, !=, null, ), {, String, hmstr, =, s, ., substring, (]
[., parseDay, (, daystr, ), ;, if, (, day, !=, null, ), {, String, hmstr, =, s, ., substring, (]
[), ;, if, (, day, !=, null, ), {, String, hmstr, =, s, ., substring, (, Math, ., min, (]
[), ;, if, (, day, !=, null, ), {, String, hmstr, =, s, ., substring, (, Math, ., min, (]
[), ;, if, (, day, !=, null, ), {, String, hmstr, =, s, ., substring, (, Math, ., min, (]
[null, ), {, String, hmstr, =, s, ., substring, (, Math, ., min, (, daystr, ., length, (, ), +]
[{, String, hmstr, =, s, ., substring, (, Math, ., min, (, daystr, ., length, (, ), +, 1, ,]
[{, String, hmstr, =, s, ., substring, (, Math, ., min, (, daystr, ., length, (, ), +, 1, ,]
[(, Math, ., min, (, daystr, ., length, (, ), +, 1, ,, s, ., length, (, ), ), ,]
[(, Math, ., min, (, daystr, ., length, (, ), +, 1, ,, s, ., length, (, ), ), ,]
[length, (, ), +, 1, ,, s, ., length, (, ), ), ,, s, ., length, (, ), ), ;]
[), +, 1, ,, s, ., length, (, ), ), ,, s, ., length, (, ), ), ;, hmstr, =]
[), +, 1, ,, s, ., length, (, ), ), ,, s, ., length, (, ), ), ;, hmstr, =]
[), ,, s, ., length, (, ), ), ;, hmstr, =, hmstr, ., trim, (, ), ;, String, hourstr, =]
[), ,, s, ., length, (, ), ), ;, hmstr, =, hmstr, ., trim, (, ), ;, String, hourstr, =]
[length, (, ), ), ;, hmstr, =, hmstr, ., trim, (, ), ;, String, hourstr, =, hmstr, ., substring, (]
[), ), ;, hmstr, =, hmstr, ., trim, (, ), ;, String, hourstr, =, hmstr, ., substring, (, 0, ,]
[), ), ;, hmstr, =, hmstr, ., trim, (, ), ;, String, hourstr, =, hmstr, ., substring, (, 0, ,]
[=, hmstr, ., trim, (, ), ;, String, hourstr, =, hmstr, ., substring, (, 0, ,, Math, ., min, (]
[., trim, (, ), ;, String, hourstr, =, hmstr, ., substring, (, 0, ,, Math, ., min, (, 2, ,]
[., trim, (, ), ;, String, hourstr, =, hmstr, ., substring, (, 0, ,, Math, ., min, (, 2, ,]
[(, 0, ,, Math, ., min, (, 2, ,, hmstr, ., length, (, ), ), ), ;, int, hour, =]
[(, 0, ,, Math, ., min, (, 2, ,, hmstr, ., length, (, ), ), ), ;, int, hour, =]
[., min, (, 2, ,, hmstr, ., length, (, ), ), ), ;, int, hour, =, Integer, ., parseInt, (]
[hmstr, ., length, (, ), ), ), ;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (]
[hmstr, ., length, (, ), ), ), ;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (]
[., length, (, ), ), ), ;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (]
[., length, (, ), ), ), ;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (]
[(, ), ), ), ;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (, hour, >=]
[), ;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (, hour, >=, 0, ), &&]
[;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (, hour, >=, 0, ), &&, (]
[;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (, hour, >=, 0, ), &&, (]
[hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (, hour, >=, 0, ), &&, (, hour, <=]
[), ;, if, (, (, hour, >=, 0, ), &&, (, hour, <=, 23, ), ), {, String, minstr, =]
[), ;, if, (, (, hour, >=, 0, ), &&, (, hour, <=, 23, ), ), {, String, minstr, =]
[(, hour, >=, 0, ), &&, (, hour, <=, 23, ), ), {, String, minstr, =, hmstr, ., substring, (]
[(, hour, >=, 0, ), &&, (, hour, <=, 23, ), ), {, String, minstr, =, hmstr, ., substring, (]
[), &&, (, hour, <=, 23, ), ), {, String, minstr, =, hmstr, ., substring, (, Math, ., min, (]
[), &&, (, hour, <=, 23, ), ), {, String, minstr, =, hmstr, ., substring, (, Math, ., min, (]
[), &&, (, hour, <=, 23, ), ), {, String, minstr, =, hmstr, ., substring, (, Math, ., min, (]
[), ), {, String, minstr, =, hmstr, ., substring, (, Math, ., min, (, hourstr, ., length, (, ), +]
[{, String, minstr, =, hmstr, ., substring, (, Math, ., min, (, hourstr, ., length, (, ), +, 1, ,]
[{, String, minstr, =, hmstr, ., substring, (, Math, ., min, (, hourstr, ., length, (, ), +, 1, ,]
[(, Math, ., min, (, hourstr, ., length, (, ), +, 1, ,, hmstr, ., length, (, ), ), ,]
[(, Math, ., min, (, hourstr, ., length, (, ), +, 1, ,, hmstr, ., length, (, ), ), ,]
[+, 1, ,, hmstr, ., length, (, ), ), ,, hmstr, ., length, (, ), ), ;, int, minute, =]
[+, 1, ,, hmstr, ., length, (, ), ), ,, hmstr, ., length, (, ), ), ;, int, minute, =]
[., length, (, ), ), ,, hmstr, ., length, (, ), ), ;, int, minute, =, Integer, ., parseInt, (]
[,, hmstr, ., length, (, ), ), ;, int, minute, =, Integer, ., parseInt, (, minstr, ), ;, if, (]
[,, hmstr, ., length, (, ), ), ;, int, minute, =, Integer, ., parseInt, (, minstr, ), ;, if, (]
[hmstr, ., length, (, ), ), ;, int, minute, =, Integer, ., parseInt, (, minstr, ), ;, if, (, (]
[hmstr, ., length, (, ), ), ;, int, minute, =, Integer, ., parseInt, (, minstr, ), ;, if, (, (]
[length, (, ), ), ;, int, minute, =, Integer, ., parseInt, (, minstr, ), ;, if, (, (, minute, >=]
[), ;, int, minute, =, Integer, ., parseInt, (, minstr, ), ;, if, (, (, minute, >=, 0, ), &&]
[;, int, minute, =, Integer, ., parseInt, (, minstr, ), ;, if, (, (, minute, >=, 0, ), &&, (]
[;, int, minute, =, Integer, ., parseInt, (, minstr, ), ;, if, (, (, minute, >=, 0, ), &&, (]
[minute, =, Integer, ., parseInt, (, minstr, ), ;, if, (, (, minute, >=, 0, ), &&, (, minute, <=]
[parseInt, (, minstr, ), ;, if, (, (, minute, >=, 0, ), &&, (, minute, <=, 59, ), ), {]
[minstr, ), ;, if, (, (, minute, >=, 0, ), &&, (, minute, <=, 59, ), ), {, result, =]
[if, (, (, minute, >=, 0, ), &&, (, minute, <=, 59, ), ), {, result, =, new, Minute, (]
[(, minute, >=, 0, ), &&, (, minute, <=, 59, ), ), {, result, =, new, Minute, (, minute, ,]
[0, ), &&, (, minute, <=, 59, ), ), {, result, =, new, Minute, (, minute, ,, new, Hour, (]
[&&, (, minute, <=, 59, ), ), {, result, =, new, Minute, (, minute, ,, new, Hour, (, hour, ,]
[result, =, new, Minute, (, minute, ,, new, Hour, (, hour, ,, day, ), ), ;, }, }, }, return]
