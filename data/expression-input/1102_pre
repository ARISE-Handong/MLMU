[<, S, extends, Space, >, implements, BSPTreeVisitor, <, S, >, {, private, double, boundarySize, ;, public, BoundarySizeVisitor, (, ), {]
[extends, Space, >, implements, BSPTreeVisitor, <, S, >, {, private, double, boundarySize, ;, public, BoundarySizeVisitor, (, ), {, boundarySize, =]
[), {, boundarySize, =, 0, ;, }, public, Order, visitOrder, (, final, BSPTree, <, S, >, node, ), {, return]
[), {, boundarySize, =, 0, ;, }, public, Order, visitOrder, (, final, BSPTree, <, S, >, node, ), {, return]
[), {, return, Order, ., MINUS_SUB_PLUS, ;, }, public, void, visitInternalNode, (, final, BSPTree, <, S, >, node, ), {]
[Order, ., MINUS_SUB_PLUS, ;, }, public, void, visitInternalNode, (, final, BSPTree, <, S, >, node, ), {, @, SuppressWarnings, (]
[final, BSPTree, <, S, >, node, ), {, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, S, >, attribute, =]
[), {, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, S, >, attribute, =, (, BoundaryAttribute, <, S, >, )]
[), {, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, S, >, attribute, =, (, BoundaryAttribute, <, S, >, )]
[BoundaryAttribute, <, S, >, attribute, =, (, BoundaryAttribute, <, S, >, ), node, ., getAttribute, (, ), ;, if, (]
[BoundaryAttribute, <, S, >, attribute, =, (, BoundaryAttribute, <, S, >, ), node, ., getAttribute, (, ), ;, if, (]
[BoundaryAttribute, <, S, >, attribute, =, (, BoundaryAttribute, <, S, >, ), node, ., getAttribute, (, ), ;, if, (]
[(, BoundaryAttribute, <, S, >, ), node, ., getAttribute, (, ), ;, if, (, attribute, ., getPlusOutside, (, ), !=]
[S, >, ), node, ., getAttribute, (, ), ;, if, (, attribute, ., getPlusOutside, (, ), !=, null, ), {]
[), node, ., getAttribute, (, ), ;, if, (, attribute, ., getPlusOutside, (, ), !=, null, ), {, boundarySize, +=]
[), node, ., getAttribute, (, ), ;, if, (, attribute, ., getPlusOutside, (, ), !=, null, ), {, boundarySize, +=]
[), node, ., getAttribute, (, ), ;, if, (, attribute, ., getPlusOutside, (, ), !=, null, ), {, boundarySize, +=]
[), !=, null, ), {, boundarySize, +=, attribute, ., getPlusOutside, (, ), ., getSize, (, ), ;, }, if, (]
[), !=, null, ), {, boundarySize, +=, attribute, ., getPlusOutside, (, ), ., getSize, (, ), ;, }, if, (]
[), !=, null, ), {, boundarySize, +=, attribute, ., getPlusOutside, (, ), ., getSize, (, ), ;, }, if, (]
[+=, attribute, ., getPlusOutside, (, ), ., getSize, (, ), ;, }, if, (, attribute, ., getPlusInside, (, ), !=]
[getPlusOutside, (, ), ., getSize, (, ), ;, }, if, (, attribute, ., getPlusInside, (, ), !=, null, ), {]
[), ., getSize, (, ), ;, }, if, (, attribute, ., getPlusInside, (, ), !=, null, ), {, boundarySize, +=]
[), ., getSize, (, ), ;, }, if, (, attribute, ., getPlusInside, (, ), !=, null, ), {, boundarySize, +=]
[), ., getSize, (, ), ;, }, if, (, attribute, ., getPlusInside, (, ), !=, null, ), {, boundarySize, +=]
[public, void, visitLeafNode, (, final, BSPTree, <, S, >, node, ), {, }, public, double, getSize, (, ), {, return]
