[io, ., Serializable, ;, public, class, PinNeedle, extends, MeterNeedle, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[., Serializable, ;, public, class, PinNeedle, extends, MeterNeedle, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[(, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, Area, shape, ;, GeneralPath, pointer, =]
[rotate, ,, double, angle, ), {, Area, shape, ;, GeneralPath, pointer, =, new, GeneralPath, (, ), ;, int, minY, =]
[angle, ), {, Area, shape, ;, GeneralPath, pointer, =, new, GeneralPath, (, ), ;, int, minY, =, (, int, )]
[), {, Area, shape, ;, GeneralPath, pointer, =, new, GeneralPath, (, ), ;, int, minY, =, (, int, ), (]
[), {, Area, shape, ;, GeneralPath, pointer, =, new, GeneralPath, (, ), ;, int, minY, =, (, int, ), (]
[(, ), ;, int, minY, =, (, int, ), (, plotArea, ., getMinY, (, ), ), ;, int, maxY, =]
[int, minY, =, (, int, ), (, plotArea, ., getMinY, (, ), ), ;, int, maxY, =, (, int, )]
[minY, =, (, int, ), (, plotArea, ., getMinY, (, ), ), ;, int, maxY, =, (, int, ), (]
[minY, =, (, int, ), (, plotArea, ., getMinY, (, ), ), ;, int, maxY, =, (, int, ), (]
[), ), ;, int, maxY, =, (, int, ), (, plotArea, ., getMaxY, (, ), ), ;, int, midX, =]
[int, maxY, =, (, int, ), (, plotArea, ., getMaxY, (, ), ), ;, int, midX, =, (, int, )]
[maxY, =, (, int, ), (, plotArea, ., getMaxY, (, ), ), ;, int, midX, =, (, int, ), (]
[maxY, =, (, int, ), (, plotArea, ., getMaxY, (, ), ), ;, int, midX, =, (, int, ), (]
[maxY, =, (, int, ), (, plotArea, ., getMaxY, (, ), ), ;, int, midX, =, (, int, ), (]
[plotArea, ., getMaxY, (, ), ), ;, int, midX, =, (, int, ), (, plotArea, ., getMinX, (, ), +]
[., getMaxY, (, ), ), ;, int, midX, =, (, int, ), (, plotArea, ., getMinX, (, ), +, (]
[., getMaxY, (, ), ), ;, int, midX, =, (, int, ), (, plotArea, ., getMinX, (, ), +, (]
[., getMaxY, (, ), ), ;, int, midX, =, (, int, ), (, plotArea, ., getMinX, (, ), +, (]
[int, midX, =, (, int, ), (, plotArea, ., getMinX, (, ), +, (, plotArea, ., getWidth, (, ), /]
[plotArea, ., getMinX, (, ), +, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, int, lenX, =]
[(, ), +, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, int, lenX, =, (, int, )]
[), +, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, int, lenX, =, (, int, ), (]
[), +, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, int, lenX, =, (, int, ), (]
[), +, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, int, lenX, =, (, int, ), (]
[(, ), /, 2, ), ), ;, int, lenX, =, (, int, ), (, plotArea, ., getWidth, (, ), /]
[), ;, int, lenX, =, (, int, ), (, plotArea, ., getWidth, (, ), /, 10, ), ;, if, (]
[), ;, int, lenX, =, (, int, ), (, plotArea, ., getWidth, (, ), /, 10, ), ;, if, (]
[int, lenX, =, (, int, ), (, plotArea, ., getWidth, (, ), /, 10, ), ;, if, (, lenX, <]
[(, int, ), (, plotArea, ., getWidth, (, ), /, 10, ), ;, if, (, lenX, <, 2, ), {]
[), (, plotArea, ., getWidth, (, ), /, 10, ), ;, if, (, lenX, <, 2, ), {, lenX, =]
[., getWidth, (, ), /, 10, ), ;, if, (, lenX, <, 2, ), {, lenX, =, 2, ;, }]
[., getWidth, (, ), /, 10, ), ;, if, (, lenX, <, 2, ), {, lenX, =, 2, ;, }]
[/, 10, ), ;, if, (, lenX, <, 2, ), {, lenX, =, 2, ;, }, pointer, ., moveTo, (]
[/, 10, ), ;, if, (, lenX, <, 2, ), {, lenX, =, 2, ;, }, pointer, ., moveTo, (]
[), ;, if, (, lenX, <, 2, ), {, lenX, =, 2, ;, }, pointer, ., moveTo, (, midX, -]
[if, (, lenX, <, 2, ), {, lenX, =, 2, ;, }, pointer, ., moveTo, (, midX, -, lenX, ,]
[if, (, lenX, <, 2, ), {, lenX, =, 2, ;, }, pointer, ., moveTo, (, midX, -, lenX, ,]
[lenX, <, 2, ), {, lenX, =, 2, ;, }, pointer, ., moveTo, (, midX, -, lenX, ,, maxY, -]
[), {, lenX, =, 2, ;, }, pointer, ., moveTo, (, midX, -, lenX, ,, maxY, -, lenX, ), ;]
[), {, lenX, =, 2, ;, }, pointer, ., moveTo, (, midX, -, lenX, ,, maxY, -, lenX, ), ;]
[2, ;, }, pointer, ., moveTo, (, midX, -, lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (]
[2, ;, }, pointer, ., moveTo, (, midX, -, lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (]
[}, pointer, ., moveTo, (, midX, -, lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (, midX, +]
[., moveTo, (, midX, -, lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (, midX, +, lenX, ,]
[., moveTo, (, midX, -, lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (, midX, +, lenX, ,]
[(, midX, -, lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (, midX, +, lenX, ,, maxY, -]
[lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (, midX, +, lenX, ,, maxY, -, lenX, ), ;]
[lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (, midX, +, lenX, ,, maxY, -, lenX, ), ;]
[lenX, ), ;, pointer, ., lineTo, (, midX, +, lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (]
[;, pointer, ., lineTo, (, midX, +, lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (, midX, ,]
[;, pointer, ., lineTo, (, midX, +, lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (, midX, ,]
[., lineTo, (, midX, +, lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (, midX, ,, minY, +]
[midX, +, lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (, midX, ,, minY, +, lenX, ), ;]
[midX, +, lenX, ,, maxY, -, lenX, ), ;, pointer, ., lineTo, (, midX, ,, minY, +, lenX, ), ;]
[lenX, ), ;, pointer, ., lineTo, (, midX, ,, minY, +, lenX, ), ;, pointer, ., closePath, (, ), ;]
[;, pointer, ., lineTo, (, midX, ,, minY, +, lenX, ), ;, pointer, ., closePath, (, ), ;, lenX, =]
[;, pointer, ., lineTo, (, midX, ,, minY, +, lenX, ), ;, pointer, ., closePath, (, ), ;, lenX, =]
[., lineTo, (, midX, ,, minY, +, lenX, ), ;, pointer, ., closePath, (, ), ;, lenX, =, 4, *]
[minY, +, lenX, ), ;, pointer, ., closePath, (, ), ;, lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =]
[pointer, ., closePath, (, ), ;, lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (]
[pointer, ., closePath, (, ), ;, lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (]
[closePath, (, ), ;, lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (, midX, -]
[closePath, (, ), ;, lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (, midX, -]
[), ;, lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (, midX, -, lenX, /]
[lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (, midX, -, lenX, /, 2, ,]
[lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (, midX, -, lenX, /, 2, ,]
[lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (, midX, -, lenX, /, 2, ,]
[Ellipse2D, circle, =, new, Ellipse2D, ., Double, (, midX, -, lenX, /, 2, ,, plotArea, ., getMaxY, (, ), -]
[=, new, Ellipse2D, ., Double, (, midX, -, lenX, /, 2, ,, plotArea, ., getMaxY, (, ), -, lenX, ,]
[Ellipse2D, ., Double, (, midX, -, lenX, /, 2, ,, plotArea, ., getMaxY, (, ), -, lenX, ,, lenX, ,]
[(, midX, -, lenX, /, 2, ,, plotArea, ., getMaxY, (, ), -, lenX, ,, lenX, ,, lenX, ), ;]
[-, lenX, /, 2, ,, plotArea, ., getMaxY, (, ), -, lenX, ,, lenX, ,, lenX, ), ;, shape, =]
[2, ,, plotArea, ., getMaxY, (, ), -, lenX, ,, lenX, ,, lenX, ), ;, shape, =, new, Area, (]
[., getMaxY, (, ), -, lenX, ,, lenX, ,, lenX, ), ;, shape, =, new, Area, (, circle, ), ;]
[., getMaxY, (, ), -, lenX, ,, lenX, ,, lenX, ), ;, shape, =, new, Area, (, circle, ), ;]
[-, lenX, ,, lenX, ,, lenX, ), ;, shape, =, new, Area, (, circle, ), ;, shape, ., add, (]
[lenX, ,, lenX, ), ;, shape, =, new, Area, (, circle, ), ;, shape, ., add, (, new, Area, (]
[=, new, Area, (, circle, ), ;, shape, ., add, (, new, Area, (, pointer, ), ), ;, if, (]
[=, new, Area, (, circle, ), ;, shape, ., add, (, new, Area, (, pointer, ), ), ;, if, (]
[new, Area, (, circle, ), ;, shape, ., add, (, new, Area, (, pointer, ), ), ;, if, (, (]
[new, Area, (, circle, ), ;, shape, ., add, (, new, Area, (, pointer, ), ), ;, if, (, (]
[(, circle, ), ;, shape, ., add, (, new, Area, (, pointer, ), ), ;, if, (, (, rotate, !=]
[;, shape, ., add, (, new, Area, (, pointer, ), ), ;, if, (, (, rotate, !=, null, ), &&]
[shape, ., add, (, new, Area, (, pointer, ), ), ;, if, (, (, rotate, !=, null, ), &&, (]
[shape, ., add, (, new, Area, (, pointer, ), ), ;, if, (, (, rotate, !=, null, ), &&, (]
[add, (, new, Area, (, pointer, ), ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=]
[(, pointer, ), ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {]
[(, pointer, ), ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {]
[(, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (]
[rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,]
[rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,]
[angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,]
[angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,]
[(, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;]
[(, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;]
[(, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, shape, ., transform, (]
[(, ), ,, rotate, ., getY, (, ), ), ;, shape, ., transform, (, getTransform, (, ), ), ;, }]
[,, rotate, ., getY, (, ), ), ;, shape, ., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (]
[., getY, (, ), ), ;, shape, ., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (, g2, ,]
[;, }, defaultDisplay, (, g2, ,, shape, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[;, }, defaultDisplay, (, g2, ,, shape, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[defaultDisplay, (, g2, ,, shape, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[shape, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, PinNeedle, ), ), {, return]
[return, true, ;, }, if, (, !, (, obj, instanceof, PinNeedle, ), ), {, return, false, ;, }, if, (]
[true, ;, }, if, (, !, (, obj, instanceof, PinNeedle, ), ), {, return, false, ;, }, if, (, !]
[true, ;, }, if, (, !, (, obj, instanceof, PinNeedle, ), ), {, return, false, ;, }, if, (, !]
[(, !, (, obj, instanceof, PinNeedle, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (]
[PinNeedle, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return]
[return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, return]
[(, obj, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[(, obj, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[(, ), {, return, super, ., hashCode, (, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[(, ), {, return, super, ., hashCode, (, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
