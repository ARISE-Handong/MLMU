[;, public, static, final, int, WIDTHMETHOD_AVERAGE, =, 0, ;, public, static, final, int, WIDTHMETHOD_SMALLEST, =, 1, ;, public, static, final]
[;, public, static, final, int, WIDTHMETHOD_SMALLEST, =, 1, ;, public, static, final, int, WIDTHMETHOD_INTERVALDATA, =, 2, ;, private, int, autoWidthMethod]
[;, public, static, final, int, WIDTHMETHOD_INTERVALDATA, =, 2, ;, private, int, autoWidthMethod, =, WIDTHMETHOD_AVERAGE, ;, private, double, autoWidthFactor, =, 4.5]
[;, private, int, autoWidthMethod, =, WIDTHMETHOD_AVERAGE, ;, private, double, autoWidthFactor, =, 4.5, /, 7, ;, private, double, autoWidthGap, =, 0.0]
[;, private, double, autoWidthFactor, =, 4.5, /, 7, ;, private, double, autoWidthGap, =, 0.0, ;, private, double, candleWidth, ;, private]
[;, private, double, autoWidthGap, =, 0.0, ;, private, double, candleWidth, ;, private, double, maxCandleWidthInMilliseconds, =, 1000.0, *, 60.0, *, 60.0]
[/, 7, ;, private, double, autoWidthGap, =, 0.0, ;, private, double, candleWidth, ;, private, double, maxCandleWidthInMilliseconds, =, 1000.0, *, 60.0]
[;, private, double, autoWidthGap, =, 0.0, ;, private, double, candleWidth, ;, private, double, maxCandleWidthInMilliseconds, =, 1000.0, *, 60.0, *, 60.0]
[;, private, double, candleWidth, ;, private, double, maxCandleWidthInMilliseconds, =, 1000.0, *, 60.0, *, 60.0, *, 20.0, ;, private, double, maxCandleWidth]
[;, private, double, maxCandleWidth, ;, private, transient, Paint, upPaint, ;, private, transient, Paint, downPaint, ;, private, boolean, drawVolume, ;, private]
[*, 20.0, ;, private, double, maxCandleWidth, ;, private, transient, Paint, upPaint, ;, private, transient, Paint, downPaint, ;, private, boolean, drawVolume]
[*, 60.0, *, 20.0, ;, private, double, maxCandleWidth, ;, private, transient, Paint, upPaint, ;, private, transient, Paint, downPaint, ;, private]
[*, 60.0, *, 60.0, *, 20.0, ;, private, double, maxCandleWidth, ;, private, transient, Paint, upPaint, ;, private, transient, Paint, downPaint]
[*, 60.0, *, 20.0, ;, private, double, maxCandleWidth, ;, private, transient, Paint, upPaint, ;, private, transient, Paint, downPaint, ;, private]
[*, 20.0, ;, private, double, maxCandleWidth, ;, private, transient, Paint, upPaint, ;, private, transient, Paint, downPaint, ;, private, boolean, drawVolume]
[;, private, double, maxCandleWidth, ;, private, transient, Paint, upPaint, ;, private, transient, Paint, downPaint, ;, private, boolean, drawVolume, ;, private]
[), ;, }, public, CandlestickRenderer, (, double, candleWidth, ), {, this, (, candleWidth, ,, true, ,, new, HighLowItemLabelGenerator, (, )]
[), ;, }, public, CandlestickRenderer, (, double, candleWidth, ), {, this, (, candleWidth, ,, true, ,, new, HighLowItemLabelGenerator, (, )]
[,, true, ,, new, HighLowItemLabelGenerator, (, ), ), ;, }, public, CandlestickRenderer, (, double, candleWidth, ,, boolean, drawVolume, ,, XYToolTipGenerator]
[,, new, HighLowItemLabelGenerator, (, ), ), ;, }, public, CandlestickRenderer, (, double, candleWidth, ,, boolean, drawVolume, ,, XYToolTipGenerator, toolTipGenerator, )]
[), ;, }, public, CandlestickRenderer, (, double, candleWidth, ,, boolean, drawVolume, ,, XYToolTipGenerator, toolTipGenerator, ), {, super, (, ), ;]
[;, this, ., candleWidth, =, candleWidth, ;, this, ., drawVolume, =, drawVolume, ;, this, ., volumePaint, =, Color, ., gray]
[), ;, this, ., candleWidth, =, candleWidth, ;, this, ., drawVolume, =, drawVolume, ;, this, ., volumePaint, =, Color, .]
[=, candleWidth, ;, this, ., drawVolume, =, drawVolume, ;, this, ., volumePaint, =, Color, ., gray, ;, this, ., upPaint]
[., candleWidth, =, candleWidth, ;, this, ., drawVolume, =, drawVolume, ;, this, ., volumePaint, =, Color, ., gray, ;, this]
[;, this, ., drawVolume, =, drawVolume, ;, this, ., volumePaint, =, Color, ., gray, ;, this, ., upPaint, =, Color]
[=, drawVolume, ;, this, ., volumePaint, =, Color, ., gray, ;, this, ., upPaint, =, Color, ., green, ;, this]
[., drawVolume, =, drawVolume, ;, this, ., volumePaint, =, Color, ., gray, ;, this, ., upPaint, =, Color, ., green]
[;, this, ., volumePaint, =, Color, ., gray, ;, this, ., upPaint, =, Color, ., green, ;, this, ., downPaint]
[=, Color, ., gray, ;, this, ., upPaint, =, Color, ., green, ;, this, ., downPaint, =, Color, ., red]
[., volumePaint, =, Color, ., gray, ;, this, ., upPaint, =, Color, ., green, ;, this, ., downPaint, =, Color]
[;, this, ., upPaint, =, Color, ., green, ;, this, ., downPaint, =, Color, ., red, ;, this, ., useOutlinePaint]
[., gray, ;, this, ., upPaint, =, Color, ., green, ;, this, ., downPaint, =, Color, ., red, ;, this]
[=, Color, ., green, ;, this, ., downPaint, =, Color, ., red, ;, this, ., useOutlinePaint, =, false, ;, }]
[., upPaint, =, Color, ., green, ;, this, ., downPaint, =, Color, ., red, ;, this, ., useOutlinePaint, =, false]
[;, this, ., downPaint, =, Color, ., red, ;, this, ., useOutlinePaint, =, false, ;, }, public, double, getCandleWidth, (]
[., green, ;, this, ., downPaint, =, Color, ., red, ;, this, ., useOutlinePaint, =, false, ;, }, public, double]
[=, Color, ., red, ;, this, ., useOutlinePaint, =, false, ;, }, public, double, getCandleWidth, (, ), {, return, this]
[., downPaint, =, Color, ., red, ;, this, ., useOutlinePaint, =, false, ;, }, public, double, getCandleWidth, (, ), {]
[;, this, ., useOutlinePaint, =, false, ;, }, public, double, getCandleWidth, (, ), {, return, this, ., candleWidth, ;, }]
[., red, ;, this, ., useOutlinePaint, =, false, ;, }, public, double, getCandleWidth, (, ), {, return, this, ., candleWidth]
[=, false, ;, }, public, double, getCandleWidth, (, ), {, return, this, ., candleWidth, ;, }, public, void, setCandleWidth, (]
[., useOutlinePaint, =, false, ;, }, public, double, getCandleWidth, (, ), {, return, this, ., candleWidth, ;, }, public, void]
[;, }, public, double, getCandleWidth, (, ), {, return, this, ., candleWidth, ;, }, public, void, setCandleWidth, (, double, width]
[;, }, public, void, setCandleWidth, (, double, width, ), {, if, (, width, !=, this, ., candleWidth, ), {, this]
[., candleWidth, ;, }, public, void, setCandleWidth, (, double, width, ), {, if, (, width, !=, this, ., candleWidth, )]
[), {, this, ., candleWidth, =, width, ;, fireChangeEvent, (, ), ;, }, }, public, double, getMaxCandleWidthInMilliseconds, (, ), {]
[!=, this, ., candleWidth, ), {, this, ., candleWidth, =, width, ;, fireChangeEvent, (, ), ;, }, }, public, double]
[), {, this, ., candleWidth, =, width, ;, fireChangeEvent, (, ), ;, }, }, public, double, getMaxCandleWidthInMilliseconds, (, ), {]
[., candleWidth, ), {, this, ., candleWidth, =, width, ;, fireChangeEvent, (, ), ;, }, }, public, double, getMaxCandleWidthInMilliseconds, (]
[=, width, ;, fireChangeEvent, (, ), ;, }, }, public, double, getMaxCandleWidthInMilliseconds, (, ), {, return, this, ., maxCandleWidthInMilliseconds, ;]
[., candleWidth, =, width, ;, fireChangeEvent, (, ), ;, }, }, public, double, getMaxCandleWidthInMilliseconds, (, ), {, return, this, .]
[;, fireChangeEvent, (, ), ;, }, }, public, double, getMaxCandleWidthInMilliseconds, (, ), {, return, this, ., maxCandleWidthInMilliseconds, ;, }, public]
[;, }, }, public, double, getMaxCandleWidthInMilliseconds, (, ), {, return, this, ., maxCandleWidthInMilliseconds, ;, }, public, void, setMaxCandleWidthInMilliseconds, (, double]
[;, }, public, void, setMaxCandleWidthInMilliseconds, (, double, millis, ), {, this, ., maxCandleWidthInMilliseconds, =, millis, ;, fireChangeEvent, (, ), ;]
[., maxCandleWidthInMilliseconds, ;, }, public, void, setMaxCandleWidthInMilliseconds, (, double, millis, ), {, this, ., maxCandleWidthInMilliseconds, =, millis, ;, fireChangeEvent, (]
[=, millis, ;, fireChangeEvent, (, ), ;, }, public, int, getAutoWidthMethod, (, ), {, return, this, ., autoWidthMethod, ;, }]
[., maxCandleWidthInMilliseconds, =, millis, ;, fireChangeEvent, (, ), ;, }, public, int, getAutoWidthMethod, (, ), {, return, this, ., autoWidthMethod]
[;, fireChangeEvent, (, ), ;, }, public, int, getAutoWidthMethod, (, ), {, return, this, ., autoWidthMethod, ;, }, public, void]
[;, }, public, int, getAutoWidthMethod, (, ), {, return, this, ., autoWidthMethod, ;, }, public, void, setAutoWidthMethod, (, int, autoWidthMethod]
[;, }, public, void, setAutoWidthMethod, (, int, autoWidthMethod, ), {, if, (, this, ., autoWidthMethod, !=, autoWidthMethod, ), {, this]
[., autoWidthMethod, ;, }, public, void, setAutoWidthMethod, (, int, autoWidthMethod, ), {, if, (, this, ., autoWidthMethod, !=, autoWidthMethod, )]
[), {, this, ., autoWidthMethod, =, autoWidthMethod, ;, fireChangeEvent, (, ), ;, }, }, public, double, getAutoWidthFactor, (, ), {]
[!=, autoWidthMethod, ), {, this, ., autoWidthMethod, =, autoWidthMethod, ;, fireChangeEvent, (, ), ;, }, }, public, double, getAutoWidthFactor, (]
[., autoWidthMethod, !=, autoWidthMethod, ), {, this, ., autoWidthMethod, =, autoWidthMethod, ;, fireChangeEvent, (, ), ;, }, }, public, double]
[), {, this, ., autoWidthMethod, =, autoWidthMethod, ;, fireChangeEvent, (, ), ;, }, }, public, double, getAutoWidthFactor, (, ), {]
[=, autoWidthMethod, ;, fireChangeEvent, (, ), ;, }, }, public, double, getAutoWidthFactor, (, ), {, return, this, ., autoWidthFactor, ;]
[., autoWidthMethod, =, autoWidthMethod, ;, fireChangeEvent, (, ), ;, }, }, public, double, getAutoWidthFactor, (, ), {, return, this, .]
[;, fireChangeEvent, (, ), ;, }, }, public, double, getAutoWidthFactor, (, ), {, return, this, ., autoWidthFactor, ;, }, public]
[;, }, }, public, double, getAutoWidthFactor, (, ), {, return, this, ., autoWidthFactor, ;, }, public, void, setAutoWidthFactor, (, double]
[;, }, public, void, setAutoWidthFactor, (, double, autoWidthFactor, ), {, if, (, this, ., autoWidthFactor, !=, autoWidthFactor, ), {, this]
[., autoWidthFactor, ;, }, public, void, setAutoWidthFactor, (, double, autoWidthFactor, ), {, if, (, this, ., autoWidthFactor, !=, autoWidthFactor, )]
[), {, this, ., autoWidthFactor, =, autoWidthFactor, ;, fireChangeEvent, (, ), ;, }, }, public, double, getAutoWidthGap, (, ), {]
[!=, autoWidthFactor, ), {, this, ., autoWidthFactor, =, autoWidthFactor, ;, fireChangeEvent, (, ), ;, }, }, public, double, getAutoWidthGap, (]
[., autoWidthFactor, !=, autoWidthFactor, ), {, this, ., autoWidthFactor, =, autoWidthFactor, ;, fireChangeEvent, (, ), ;, }, }, public, double]
[), {, this, ., autoWidthFactor, =, autoWidthFactor, ;, fireChangeEvent, (, ), ;, }, }, public, double, getAutoWidthGap, (, ), {]
[=, autoWidthFactor, ;, fireChangeEvent, (, ), ;, }, }, public, double, getAutoWidthGap, (, ), {, return, this, ., autoWidthGap, ;]
[., autoWidthFactor, =, autoWidthFactor, ;, fireChangeEvent, (, ), ;, }, }, public, double, getAutoWidthGap, (, ), {, return, this, .]
[;, fireChangeEvent, (, ), ;, }, }, public, double, getAutoWidthGap, (, ), {, return, this, ., autoWidthGap, ;, }, public]
[;, }, }, public, double, getAutoWidthGap, (, ), {, return, this, ., autoWidthGap, ;, }, public, void, setAutoWidthGap, (, double]
[;, }, public, void, setAutoWidthGap, (, double, autoWidthGap, ), {, if, (, this, ., autoWidthGap, !=, autoWidthGap, ), {, this]
[., autoWidthGap, ;, }, public, void, setAutoWidthGap, (, double, autoWidthGap, ), {, if, (, this, ., autoWidthGap, !=, autoWidthGap, )]
[), {, this, ., autoWidthGap, =, autoWidthGap, ;, fireChangeEvent, (, ), ;, }, }, public, Paint, getUpPaint, (, ), {]
[!=, autoWidthGap, ), {, this, ., autoWidthGap, =, autoWidthGap, ;, fireChangeEvent, (, ), ;, }, }, public, Paint, getUpPaint, (]
[., autoWidthGap, !=, autoWidthGap, ), {, this, ., autoWidthGap, =, autoWidthGap, ;, fireChangeEvent, (, ), ;, }, }, public, Paint]
[), {, this, ., autoWidthGap, =, autoWidthGap, ;, fireChangeEvent, (, ), ;, }, }, public, Paint, getUpPaint, (, ), {]
[=, autoWidthGap, ;, fireChangeEvent, (, ), ;, }, }, public, Paint, getUpPaint, (, ), {, return, this, ., upPaint, ;]
[., autoWidthGap, =, autoWidthGap, ;, fireChangeEvent, (, ), ;, }, }, public, Paint, getUpPaint, (, ), {, return, this, .]
[;, fireChangeEvent, (, ), ;, }, }, public, Paint, getUpPaint, (, ), {, return, this, ., upPaint, ;, }, public]
[;, }, }, public, Paint, getUpPaint, (, ), {, return, this, ., upPaint, ;, }, public, void, setUpPaint, (, Paint]
[;, }, public, void, setUpPaint, (, Paint, paint, ), {, this, ., upPaint, =, paint, ;, fireChangeEvent, (, ), ;]
[., upPaint, ;, }, public, void, setUpPaint, (, Paint, paint, ), {, this, ., upPaint, =, paint, ;, fireChangeEvent, (]
[=, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getDownPaint, (, ), {, return, this, ., downPaint, ;, }]
[., upPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, Paint, getDownPaint, (, ), {, return, this, ., downPaint]
[;, fireChangeEvent, (, ), ;, }, public, Paint, getDownPaint, (, ), {, return, this, ., downPaint, ;, }, public, void]
[;, }, public, Paint, getDownPaint, (, ), {, return, this, ., downPaint, ;, }, public, void, setDownPaint, (, Paint, paint]
[;, }, public, void, setDownPaint, (, Paint, paint, ), {, this, ., downPaint, =, paint, ;, fireChangeEvent, (, ), ;]
[., downPaint, ;, }, public, void, setDownPaint, (, Paint, paint, ), {, this, ., downPaint, =, paint, ;, fireChangeEvent, (]
[=, paint, ;, fireChangeEvent, (, ), ;, }, public, boolean, getDrawVolume, (, ), {, return, this, ., drawVolume, ;, }]
[., downPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, boolean, getDrawVolume, (, ), {, return, this, ., drawVolume]
[;, fireChangeEvent, (, ), ;, }, public, boolean, getDrawVolume, (, ), {, return, this, ., drawVolume, ;, }, public, void]
[;, }, public, boolean, getDrawVolume, (, ), {, return, this, ., drawVolume, ;, }, public, void, setDrawVolume, (, boolean, flag]
[;, }, public, void, setDrawVolume, (, boolean, flag, ), {, if, (, this, ., drawVolume, !=, flag, ), {, this]
[., drawVolume, ;, }, public, void, setDrawVolume, (, boolean, flag, ), {, if, (, this, ., drawVolume, !=, flag, )]
[), {, this, ., drawVolume, =, flag, ;, fireChangeEvent, (, ), ;, }, }, public, Paint, getVolumePaint, (, ), {]
[!=, flag, ), {, this, ., drawVolume, =, flag, ;, fireChangeEvent, (, ), ;, }, }, public, Paint, getVolumePaint, (]
[., drawVolume, !=, flag, ), {, this, ., drawVolume, =, flag, ;, fireChangeEvent, (, ), ;, }, }, public, Paint]
[), {, this, ., drawVolume, =, flag, ;, fireChangeEvent, (, ), ;, }, }, public, Paint, getVolumePaint, (, ), {]
[=, flag, ;, fireChangeEvent, (, ), ;, }, }, public, Paint, getVolumePaint, (, ), {, return, this, ., volumePaint, ;]
[., drawVolume, =, flag, ;, fireChangeEvent, (, ), ;, }, }, public, Paint, getVolumePaint, (, ), {, return, this, .]
[;, fireChangeEvent, (, ), ;, }, }, public, Paint, getVolumePaint, (, ), {, return, this, ., volumePaint, ;, }, public]
[;, }, }, public, Paint, getVolumePaint, (, ), {, return, this, ., volumePaint, ;, }, public, void, setVolumePaint, (, Paint]
[;, }, public, void, setVolumePaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[., volumePaint, ;, }, public, void, setVolumePaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., volumePaint, =, paint, ;, fireChangeEvent, (, ), ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., volumePaint, =, paint, ;, fireChangeEvent, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., volumePaint, =, paint, ;, fireChangeEvent, (, ), ;]
[;, }, this, ., volumePaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, boolean, getUseOutlinePaint, (, ), {, return]
[), ;, }, this, ., volumePaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, boolean, getUseOutlinePaint, (, ), {]
[=, paint, ;, fireChangeEvent, (, ), ;, }, public, boolean, getUseOutlinePaint, (, ), {, return, this, ., useOutlinePaint, ;, }]
[., volumePaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, boolean, getUseOutlinePaint, (, ), {, return, this, ., useOutlinePaint]
[;, fireChangeEvent, (, ), ;, }, public, boolean, getUseOutlinePaint, (, ), {, return, this, ., useOutlinePaint, ;, }, public, void]
[;, }, public, boolean, getUseOutlinePaint, (, ), {, return, this, ., useOutlinePaint, ;, }, public, void, setUseOutlinePaint, (, boolean, use]
[;, }, public, void, setUseOutlinePaint, (, boolean, use, ), {, if, (, this, ., useOutlinePaint, !=, use, ), {, this]
[., useOutlinePaint, ;, }, public, void, setUseOutlinePaint, (, boolean, use, ), {, if, (, this, ., useOutlinePaint, !=, use, )]
[), {, this, ., useOutlinePaint, =, use, ;, fireChangeEvent, (, ), ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset]
[!=, use, ), {, this, ., useOutlinePaint, =, use, ;, fireChangeEvent, (, ), ;, }, }, public, Range, findRangeBounds, (]
[., useOutlinePaint, !=, use, ), {, this, ., useOutlinePaint, =, use, ;, fireChangeEvent, (, ), ;, }, }, public, Range]
[), {, this, ., useOutlinePaint, =, use, ;, fireChangeEvent, (, ), ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset]
[=, use, ;, fireChangeEvent, (, ), ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, return, findRangeBounds, (]
[., useOutlinePaint, =, use, ;, fireChangeEvent, (, ), ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, return]
[;, fireChangeEvent, (, ), ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, return, findRangeBounds, (, dataset, ,]
[;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, return, findRangeBounds, (, dataset, ,, true, ), ;, }]
[;, }, public, XYItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, XYDataset, dataset, ,, PlotRenderingInfo, info]
[,, true, ), ;, }, public, XYItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, XYDataset, dataset]
[), ;, }, public, XYItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, XYDataset, dataset, ,, PlotRenderingInfo]
[;, double, x1, =, axis, ., getLowerBound, (, ), ;, double, x2, =, x1, +, this, ., maxCandleWidthInMilliseconds, ;, RectangleEdge]
[., getDomainAxis, (, ), ;, double, x1, =, axis, ., getLowerBound, (, ), ;, double, x2, =, x1, +, this]
[;, double, x2, =, x1, +, this, ., maxCandleWidthInMilliseconds, ;, RectangleEdge, edge, =, plot, ., getDomainAxisEdge, (, ), ;, double]
[., getLowerBound, (, ), ;, double, x2, =, x1, +, this, ., maxCandleWidthInMilliseconds, ;, RectangleEdge, edge, =, plot, ., getDomainAxisEdge]
[;, RectangleEdge, edge, =, plot, ., getDomainAxisEdge, (, ), ;, double, xx1, =, axis, ., valueToJava2D, (, x1, ,, dataArea]
[+, this, ., maxCandleWidthInMilliseconds, ;, RectangleEdge, edge, =, plot, ., getDomainAxisEdge, (, ), ;, double, xx1, =, axis, ., valueToJava2D]
[;, RectangleEdge, edge, =, plot, ., getDomainAxisEdge, (, ), ;, double, xx1, =, axis, ., valueToJava2D, (, x1, ,, dataArea]
[., maxCandleWidthInMilliseconds, ;, RectangleEdge, edge, =, plot, ., getDomainAxisEdge, (, ), ;, double, xx1, =, axis, ., valueToJava2D, (, x1]
[;, double, xx1, =, axis, ., valueToJava2D, (, x1, ,, dataArea, ,, edge, ), ;, double, xx2, =, axis, .]
[., getDomainAxisEdge, (, ), ;, double, xx1, =, axis, ., valueToJava2D, (, x1, ,, dataArea, ,, edge, ), ;, double]
[;, double, xx2, =, axis, ., valueToJava2D, (, x2, ,, dataArea, ,, edge, ), ;, this, ., maxCandleWidth, =, Math]
[., valueToJava2D, (, x1, ,, dataArea, ,, edge, ), ;, double, xx2, =, axis, ., valueToJava2D, (, x2, ,, dataArea]
[,, dataArea, ,, edge, ), ;, double, xx2, =, axis, ., valueToJava2D, (, x2, ,, dataArea, ,, edge, ), ;]
[,, edge, ), ;, double, xx2, =, axis, ., valueToJava2D, (, x2, ,, dataArea, ,, edge, ), ;, this, .]
[), ;, double, xx2, =, axis, ., valueToJava2D, (, x2, ,, dataArea, ,, edge, ), ;, this, ., maxCandleWidth, =]
[;, this, ., maxCandleWidth, =, Math, ., abs, (, xx2, -, xx1, ), ;, if, (, this, ., drawVolume, )]
[., valueToJava2D, (, x2, ,, dataArea, ,, edge, ), ;, this, ., maxCandleWidth, =, Math, ., abs, (, xx2, -]
[,, dataArea, ,, edge, ), ;, this, ., maxCandleWidth, =, Math, ., abs, (, xx2, -, xx1, ), ;, if]
[,, edge, ), ;, this, ., maxCandleWidth, =, Math, ., abs, (, xx2, -, xx1, ), ;, if, (, this]
[), ;, this, ., maxCandleWidth, =, Math, ., abs, (, xx2, -, xx1, ), ;, if, (, this, ., drawVolume]
[=, Math, ., abs, (, xx2, -, xx1, ), ;, if, (, this, ., drawVolume, ), {, OHLCDataset, highLowDataset, =]
[., maxCandleWidth, =, Math, ., abs, (, xx2, -, xx1, ), ;, if, (, this, ., drawVolume, ), {, OHLCDataset]
[;, if, (, this, ., drawVolume, ), {, OHLCDataset, highLowDataset, =, (, OHLCDataset, ), dataset, ;, this, ., maxVolume, =]
[., abs, (, xx2, -, xx1, ), ;, if, (, this, ., drawVolume, ), {, OHLCDataset, highLowDataset, =, (, OHLCDataset]
[), ;, if, (, this, ., drawVolume, ), {, OHLCDataset, highLowDataset, =, (, OHLCDataset, ), dataset, ;, this, ., maxVolume]
[-, xx1, ), ;, if, (, this, ., drawVolume, ), {, OHLCDataset, highLowDataset, =, (, OHLCDataset, ), dataset, ;, this]
[), ;, if, (, this, ., drawVolume, ), {, OHLCDataset, highLowDataset, =, (, OHLCDataset, ), dataset, ;, this, ., maxVolume]
[), {, OHLCDataset, highLowDataset, =, (, OHLCDataset, ), dataset, ;, this, ., maxVolume, =, 0.0, ;, for, (, int, series]
[., drawVolume, ), {, OHLCDataset, highLowDataset, =, (, OHLCDataset, ), dataset, ;, this, ., maxVolume, =, 0.0, ;, for, (]
[;, this, ., maxVolume, =, 0.0, ;, for, (, int, series, =, 0, ;, series, <, highLowDataset, ., getSeriesCount, (]
[;, this, ., maxVolume, =, 0.0, ;, for, (, int, series, =, 0, ;, series, <, highLowDataset, ., getSeriesCount, (]
[=, 0.0, ;, for, (, int, series, =, 0, ;, series, <, highLowDataset, ., getSeriesCount, (, ), ;, series, ++]
[., maxVolume, =, 0.0, ;, for, (, int, series, =, 0, ;, series, <, highLowDataset, ., getSeriesCount, (, ), ;]
[;, for, (, int, series, =, 0, ;, series, <, highLowDataset, ., getSeriesCount, (, ), ;, series, ++, ), {]
[;, series, <, highLowDataset, ., getSeriesCount, (, ), ;, series, ++, ), {, for, (, int, item, =, 0, ;]
[;, series, ++, ), {, for, (, int, item, =, 0, ;, item, <, highLowDataset, ., getItemCount, (, series, )]
[<, highLowDataset, ., getSeriesCount, (, ), ;, series, ++, ), {, for, (, int, item, =, 0, ;, item, <]
[;, series, ++, ), {, for, (, int, item, =, 0, ;, item, <, highLowDataset, ., getItemCount, (, series, )]
[., getSeriesCount, (, ), ;, series, ++, ), {, for, (, int, item, =, 0, ;, item, <, highLowDataset, .]
[), {, for, (, int, item, =, 0, ;, item, <, highLowDataset, ., getItemCount, (, series, ), ;, item, ++]
[++, ), {, for, (, int, item, =, 0, ;, item, <, highLowDataset, ., getItemCount, (, series, ), ;, item]
[;, item, <, highLowDataset, ., getItemCount, (, series, ), ;, item, ++, ), {, double, volume, =, highLowDataset, ., getVolumeValue]
[;, item, ++, ), {, double, volume, =, highLowDataset, ., getVolumeValue, (, series, ,, item, ), ;, if, (, volume]
[<, highLowDataset, ., getItemCount, (, series, ), ;, item, ++, ), {, double, volume, =, highLowDataset, ., getVolumeValue, (, series]
[;, item, ++, ), {, double, volume, =, highLowDataset, ., getVolumeValue, (, series, ,, item, ), ;, if, (, volume]
[., getItemCount, (, series, ), ;, item, ++, ), {, double, volume, =, highLowDataset, ., getVolumeValue, (, series, ,, item]
[), ;, item, ++, ), {, double, volume, =, highLowDataset, ., getVolumeValue, (, series, ,, item, ), ;, if, (]
[), {, double, volume, =, highLowDataset, ., getVolumeValue, (, series, ,, item, ), ;, if, (, volume, >, this, .]
[++, ), {, double, volume, =, highLowDataset, ., getVolumeValue, (, series, ,, item, ), ;, if, (, volume, >, this]
[;, if, (, volume, >, this, ., maxVolume, ), {, this, ., maxVolume, =, volume, ;, }, }, }, }]
[., getVolumeValue, (, series, ,, item, ), ;, if, (, volume, >, this, ., maxVolume, ), {, this, ., maxVolume]
[,, item, ), ;, if, (, volume, >, this, ., maxVolume, ), {, this, ., maxVolume, =, volume, ;, }]
[), ;, if, (, volume, >, this, ., maxVolume, ), {, this, ., maxVolume, =, volume, ;, }, }, }]
[), {, this, ., maxVolume, =, volume, ;, }, }, }, }, return, new, XYItemRendererState, (, info, ), ;, }]
[>, this, ., maxVolume, ), {, this, ., maxVolume, =, volume, ;, }, }, }, }, return, new, XYItemRendererState, (]
[), {, this, ., maxVolume, =, volume, ;, }, }, }, }, return, new, XYItemRendererState, (, info, ), ;, }]
[., maxVolume, ), {, this, ., maxVolume, =, volume, ;, }, }, }, }, return, new, XYItemRendererState, (, info, )]
[=, volume, ;, }, }, }, }, return, new, XYItemRendererState, (, info, ), ;, }, public, void, drawItem, (, Graphics2D]
[., maxVolume, =, volume, ;, }, }, }, }, return, new, XYItemRendererState, (, info, ), ;, }, public, void, drawItem]
[;, }, }, }, }, return, new, XYItemRendererState, (, info, ), ;, }, public, void, drawItem, (, Graphics2D, g2, ,]
[;, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, ValueAxis, domainAxis]
[), ;, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, ValueAxis]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, horiz, =, true, ;, }, else, if, (, orientation, ==]
[., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, horiz, =, true, ;, }, else]
[), {, horiz, =, true, ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, horiz, =, false]
[==, PlotOrientation, ., HORIZONTAL, ), {, horiz, =, true, ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[), {, horiz, =, true, ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, horiz, =, false]
[., HORIZONTAL, ), {, horiz, =, true, ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, horiz]
[=, true, ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, horiz, =, false, ;, }, else]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, horiz, =, false, ;, }, else, {, return]
[), {, horiz, =, false, ;, }, else, {, return, ;, }, EntityCollection, entities, =, null, ;, if, (, state]
[==, PlotOrientation, ., VERTICAL, ), {, horiz, =, false, ;, }, else, {, return, ;, }, EntityCollection, entities, =, null]
[), {, horiz, =, false, ;, }, else, {, return, ;, }, EntityCollection, entities, =, null, ;, if, (, state]
[., VERTICAL, ), {, horiz, =, false, ;, }, else, {, return, ;, }, EntityCollection, entities, =, null, ;, if]
[=, false, ;, }, else, {, return, ;, }, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (]
[;, }, else, {, return, ;, }, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=]
[;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =, state, ., getInfo, (, ), .]
[), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, }, OHLCDataset]
[!=, null, ), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;]
[., getInfo, (, ), !=, null, ), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), .]
[), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, }, OHLCDataset]
[=, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, }, OHLCDataset, highLowData, =, (]
[;, }, OHLCDataset, highLowData, =, (, OHLCDataset, ), dataset, ;, double, x, =, highLowData, ., getXValue, (, series, ,, item]
[., getEntityCollection, (, ), ;, }, OHLCDataset, highLowData, =, (, OHLCDataset, ), dataset, ;, double, x, =, highLowData, ., getXValue]
[., getOwner, (, ), ., getEntityCollection, (, ), ;, }, OHLCDataset, highLowData, =, (, OHLCDataset, ), dataset, ;, double, x]
[., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, }, OHLCDataset, highLowData, =, (, OHLCDataset, )]
[;, double, x, =, highLowData, ., getXValue, (, series, ,, item, ), ;, double, yHigh, =, highLowData, ., getHighValue, (]
[;, double, x, =, highLowData, ., getXValue, (, series, ,, item, ), ;, double, yHigh, =, highLowData, ., getHighValue, (]
[;, double, yHigh, =, highLowData, ., getHighValue, (, series, ,, item, ), ;, double, yLow, =, highLowData, ., getLowValue, (]
[., getXValue, (, series, ,, item, ), ;, double, yHigh, =, highLowData, ., getHighValue, (, series, ,, item, ), ;]
[,, item, ), ;, double, yHigh, =, highLowData, ., getHighValue, (, series, ,, item, ), ;, double, yLow, =, highLowData]
[), ;, double, yHigh, =, highLowData, ., getHighValue, (, series, ,, item, ), ;, double, yLow, =, highLowData, ., getLowValue]
[;, double, yLow, =, highLowData, ., getLowValue, (, series, ,, item, ), ;, double, yOpen, =, highLowData, ., getOpenValue, (]
[., getHighValue, (, series, ,, item, ), ;, double, yLow, =, highLowData, ., getLowValue, (, series, ,, item, ), ;]
[,, item, ), ;, double, yLow, =, highLowData, ., getLowValue, (, series, ,, item, ), ;, double, yOpen, =, highLowData]
[), ;, double, yLow, =, highLowData, ., getLowValue, (, series, ,, item, ), ;, double, yOpen, =, highLowData, ., getOpenValue]
[;, double, yOpen, =, highLowData, ., getOpenValue, (, series, ,, item, ), ;, double, yClose, =, highLowData, ., getCloseValue, (]
[., getLowValue, (, series, ,, item, ), ;, double, yOpen, =, highLowData, ., getOpenValue, (, series, ,, item, ), ;]
[,, item, ), ;, double, yOpen, =, highLowData, ., getOpenValue, (, series, ,, item, ), ;, double, yClose, =, highLowData]
[), ;, double, yOpen, =, highLowData, ., getOpenValue, (, series, ,, item, ), ;, double, yClose, =, highLowData, ., getCloseValue]
[;, double, yClose, =, highLowData, ., getCloseValue, (, series, ,, item, ), ;, RectangleEdge, domainEdge, =, plot, ., getDomainAxisEdge, (]
[., getOpenValue, (, series, ,, item, ), ;, double, yClose, =, highLowData, ., getCloseValue, (, series, ,, item, ), ;]
[,, item, ), ;, double, yClose, =, highLowData, ., getCloseValue, (, series, ,, item, ), ;, RectangleEdge, domainEdge, =, plot]
[), ;, double, yClose, =, highLowData, ., getCloseValue, (, series, ,, item, ), ;, RectangleEdge, domainEdge, =, plot, ., getDomainAxisEdge]
[;, RectangleEdge, domainEdge, =, plot, ., getDomainAxisEdge, (, ), ;, double, xx, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea]
[., getCloseValue, (, series, ,, item, ), ;, RectangleEdge, domainEdge, =, plot, ., getDomainAxisEdge, (, ), ;, double, xx, =]
[,, item, ), ;, RectangleEdge, domainEdge, =, plot, ., getDomainAxisEdge, (, ), ;, double, xx, =, domainAxis, ., valueToJava2D, (]
[), ;, RectangleEdge, domainEdge, =, plot, ., getDomainAxisEdge, (, ), ;, double, xx, =, domainAxis, ., valueToJava2D, (, x, ,]
[;, double, xx, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,, domainEdge, ), ;, RectangleEdge, edge, =, plot, .]
[., getDomainAxisEdge, (, ), ;, double, xx, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,, domainEdge, ), ;, RectangleEdge]
[;, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, yyHigh, =, rangeAxis, ., valueToJava2D, (, yHigh, ,, dataArea]
[., valueToJava2D, (, x, ,, dataArea, ,, domainEdge, ), ;, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double]
[,, dataArea, ,, domainEdge, ), ;, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, yyHigh, =, rangeAxis, .]
[,, domainEdge, ), ;, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, yyHigh, =, rangeAxis, ., valueToJava2D, (]
[), ;, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, yyHigh, =, rangeAxis, ., valueToJava2D, (, yHigh, ,]
[;, double, yyHigh, =, rangeAxis, ., valueToJava2D, (, yHigh, ,, dataArea, ,, edge, ), ;, double, yyLow, =, rangeAxis, .]
[., getRangeAxisEdge, (, ), ;, double, yyHigh, =, rangeAxis, ., valueToJava2D, (, yHigh, ,, dataArea, ,, edge, ), ;, double]
[;, double, yyLow, =, rangeAxis, ., valueToJava2D, (, yLow, ,, dataArea, ,, edge, ), ;, double, yyOpen, =, rangeAxis, .]
[., valueToJava2D, (, yHigh, ,, dataArea, ,, edge, ), ;, double, yyLow, =, rangeAxis, ., valueToJava2D, (, yLow, ,, dataArea]
[,, dataArea, ,, edge, ), ;, double, yyLow, =, rangeAxis, ., valueToJava2D, (, yLow, ,, dataArea, ,, edge, ), ;]
[,, edge, ), ;, double, yyLow, =, rangeAxis, ., valueToJava2D, (, yLow, ,, dataArea, ,, edge, ), ;, double, yyOpen]
[), ;, double, yyLow, =, rangeAxis, ., valueToJava2D, (, yLow, ,, dataArea, ,, edge, ), ;, double, yyOpen, =, rangeAxis]
[;, double, yyOpen, =, rangeAxis, ., valueToJava2D, (, yOpen, ,, dataArea, ,, edge, ), ;, double, yyClose, =, rangeAxis, .]
[., valueToJava2D, (, yLow, ,, dataArea, ,, edge, ), ;, double, yyOpen, =, rangeAxis, ., valueToJava2D, (, yOpen, ,, dataArea]
[,, dataArea, ,, edge, ), ;, double, yyOpen, =, rangeAxis, ., valueToJava2D, (, yOpen, ,, dataArea, ,, edge, ), ;]
[,, edge, ), ;, double, yyOpen, =, rangeAxis, ., valueToJava2D, (, yOpen, ,, dataArea, ,, edge, ), ;, double, yyClose]
[), ;, double, yyOpen, =, rangeAxis, ., valueToJava2D, (, yOpen, ,, dataArea, ,, edge, ), ;, double, yyClose, =, rangeAxis]
[;, double, yyClose, =, rangeAxis, ., valueToJava2D, (, yClose, ,, dataArea, ,, edge, ), ;, double, volumeWidth, ;, double, stickWidth]
[., valueToJava2D, (, yOpen, ,, dataArea, ,, edge, ), ;, double, yyClose, =, rangeAxis, ., valueToJava2D, (, yClose, ,, dataArea]
[,, dataArea, ,, edge, ), ;, double, yyClose, =, rangeAxis, ., valueToJava2D, (, yClose, ,, dataArea, ,, edge, ), ;]
[,, edge, ), ;, double, yyClose, =, rangeAxis, ., valueToJava2D, (, yClose, ,, dataArea, ,, edge, ), ;, double, volumeWidth]
[), ;, double, yyClose, =, rangeAxis, ., valueToJava2D, (, yClose, ,, dataArea, ,, edge, ), ;, double, volumeWidth, ;, double]
[;, double, volumeWidth, ;, double, stickWidth, ;, if, (, this, ., candleWidth, >, 0, ), {, volumeWidth, =, this, .]
[., valueToJava2D, (, yClose, ,, dataArea, ,, edge, ), ;, double, volumeWidth, ;, double, stickWidth, ;, if, (, this, .]
[,, dataArea, ,, edge, ), ;, double, volumeWidth, ;, double, stickWidth, ;, if, (, this, ., candleWidth, >, 0, )]
[,, edge, ), ;, double, volumeWidth, ;, double, stickWidth, ;, if, (, this, ., candleWidth, >, 0, ), {, volumeWidth]
[), ;, double, volumeWidth, ;, double, stickWidth, ;, if, (, this, ., candleWidth, >, 0, ), {, volumeWidth, =, this]
[), {, volumeWidth, =, this, ., candleWidth, ;, stickWidth, =, this, ., candleWidth, ;, }, else, {, double, xxWidth, =]
[>, 0, ), {, volumeWidth, =, this, ., candleWidth, ;, stickWidth, =, this, ., candleWidth, ;, }, else, {, double]
[., candleWidth, >, 0, ), {, volumeWidth, =, this, ., candleWidth, ;, stickWidth, =, this, ., candleWidth, ;, }, else]
[), {, volumeWidth, =, this, ., candleWidth, ;, stickWidth, =, this, ., candleWidth, ;, }, else, {, double, xxWidth, =]
[=, this, ., candleWidth, ;, stickWidth, =, this, ., candleWidth, ;, }, else, {, double, xxWidth, =, 0, ;, int]
[;, stickWidth, =, this, ., candleWidth, ;, }, else, {, double, xxWidth, =, 0, ;, int, itemCount, ;, switch, (]
[., candleWidth, ;, stickWidth, =, this, ., candleWidth, ;, }, else, {, double, xxWidth, =, 0, ;, int, itemCount, ;]
[=, this, ., candleWidth, ;, }, else, {, double, xxWidth, =, 0, ;, int, itemCount, ;, switch, (, this, .]
[;, }, else, {, double, xxWidth, =, 0, ;, int, itemCount, ;, switch, (, this, ., autoWidthMethod, ), {, case]
[., candleWidth, ;, }, else, {, double, xxWidth, =, 0, ;, int, itemCount, ;, switch, (, this, ., autoWidthMethod, )]
[;, int, itemCount, ;, switch, (, this, ., autoWidthMethod, ), {, case, WIDTHMETHOD_AVERAGE, :, itemCount, =, highLowData, ., getItemCount, (]
[), {, case, WIDTHMETHOD_AVERAGE, :, itemCount, =, highLowData, ., getItemCount, (, series, ), ;, if, (, horiz, ), {, xxWidth]
[., autoWidthMethod, ), {, case, WIDTHMETHOD_AVERAGE, :, itemCount, =, highLowData, ., getItemCount, (, series, ), ;, if, (, horiz, )]
[:, itemCount, =, highLowData, ., getItemCount, (, series, ), ;, if, (, horiz, ), {, xxWidth, =, dataArea, ., getHeight]
[=, highLowData, ., getItemCount, (, series, ), ;, if, (, horiz, ), {, xxWidth, =, dataArea, ., getHeight, (, )]
[;, if, (, horiz, ), {, xxWidth, =, dataArea, ., getHeight, (, ), /, itemCount, ;, }, else, {, xxWidth]
[., getItemCount, (, series, ), ;, if, (, horiz, ), {, xxWidth, =, dataArea, ., getHeight, (, ), /, itemCount]
[), ;, if, (, horiz, ), {, xxWidth, =, dataArea, ., getHeight, (, ), /, itemCount, ;, }, else, {]
[), {, xxWidth, =, dataArea, ., getHeight, (, ), /, itemCount, ;, }, else, {, xxWidth, =, dataArea, ., getWidth]
[=, dataArea, ., getHeight, (, ), /, itemCount, ;, }, else, {, xxWidth, =, dataArea, ., getWidth, (, ), /]
[;, }, else, {, xxWidth, =, dataArea, ., getWidth, (, ), /, itemCount, ;, }, break, ;, case, WIDTHMETHOD_SMALLEST, :]
[/, itemCount, ;, }, else, {, xxWidth, =, dataArea, ., getWidth, (, ), /, itemCount, ;, }, break, ;, case]
[., getHeight, (, ), /, itemCount, ;, }, else, {, xxWidth, =, dataArea, ., getWidth, (, ), /, itemCount, ;]
[;, }, else, {, xxWidth, =, dataArea, ., getWidth, (, ), /, itemCount, ;, }, break, ;, case, WIDTHMETHOD_SMALLEST, :]
[=, dataArea, ., getWidth, (, ), /, itemCount, ;, }, break, ;, case, WIDTHMETHOD_SMALLEST, :, itemCount, =, highLowData, ., getItemCount]
[;, }, break, ;, case, WIDTHMETHOD_SMALLEST, :, itemCount, =, highLowData, ., getItemCount, (, series, ), ;, double, lastPos, =, -]
[/, itemCount, ;, }, break, ;, case, WIDTHMETHOD_SMALLEST, :, itemCount, =, highLowData, ., getItemCount, (, series, ), ;, double, lastPos]
[., getWidth, (, ), /, itemCount, ;, }, break, ;, case, WIDTHMETHOD_SMALLEST, :, itemCount, =, highLowData, ., getItemCount, (, series]
[;, }, break, ;, case, WIDTHMETHOD_SMALLEST, :, itemCount, =, highLowData, ., getItemCount, (, series, ), ;, double, lastPos, =, -]
[:, itemCount, =, highLowData, ., getItemCount, (, series, ), ;, double, lastPos, =, -, 1, ;, xxWidth, =, dataArea, .]
[=, highLowData, ., getItemCount, (, series, ), ;, double, lastPos, =, -, 1, ;, xxWidth, =, dataArea, ., getWidth, (]
[;, double, lastPos, =, -, 1, ;, xxWidth, =, dataArea, ., getWidth, (, ), ;, for, (, int, i, =]
[., getItemCount, (, series, ), ;, double, lastPos, =, -, 1, ;, xxWidth, =, dataArea, ., getWidth, (, ), ;]
[), ;, double, lastPos, =, -, 1, ;, xxWidth, =, dataArea, ., getWidth, (, ), ;, for, (, int, i]
[;, xxWidth, =, dataArea, ., getWidth, (, ), ;, for, (, int, i, =, 0, ;, i, <, itemCount, ;]
[;, xxWidth, =, dataArea, ., getWidth, (, ), ;, for, (, int, i, =, 0, ;, i, <, itemCount, ;]
[=, dataArea, ., getWidth, (, ), ;, for, (, int, i, =, 0, ;, i, <, itemCount, ;, i, ++]
[;, for, (, int, i, =, 0, ;, i, <, itemCount, ;, i, ++, ), {, double, pos, =, domainAxis]
[., getWidth, (, ), ;, for, (, int, i, =, 0, ;, i, <, itemCount, ;, i, ++, ), {]
[;, i, <, itemCount, ;, i, ++, ), {, double, pos, =, domainAxis, ., valueToJava2D, (, highLowData, ., getXValue, (]
[;, i, ++, ), {, double, pos, =, domainAxis, ., valueToJava2D, (, highLowData, ., getXValue, (, series, ,, i, )]
[<, itemCount, ;, i, ++, ), {, double, pos, =, domainAxis, ., valueToJava2D, (, highLowData, ., getXValue, (, series, ,]
[;, i, ++, ), {, double, pos, =, domainAxis, ., valueToJava2D, (, highLowData, ., getXValue, (, series, ,, i, )]
[), {, double, pos, =, domainAxis, ., valueToJava2D, (, highLowData, ., getXValue, (, series, ,, i, ), ,, dataArea, ,]
[++, ), {, double, pos, =, domainAxis, ., valueToJava2D, (, highLowData, ., getXValue, (, series, ,, i, ), ,, dataArea]
[;, if, (, lastPos, !=, -, 1, ), {, xxWidth, =, Math, ., min, (, xxWidth, ,, Math, ., abs]
[., valueToJava2D, (, highLowData, ., getXValue, (, series, ,, i, ), ,, dataArea, ,, domainEdge, ), ;, if, (, lastPos]
[,, dataArea, ,, domainEdge, ), ;, if, (, lastPos, !=, -, 1, ), {, xxWidth, =, Math, ., min, (]
[., getXValue, (, series, ,, i, ), ,, dataArea, ,, domainEdge, ), ;, if, (, lastPos, !=, -, 1, )]
[,, i, ), ,, dataArea, ,, domainEdge, ), ;, if, (, lastPos, !=, -, 1, ), {, xxWidth, =, Math]
[), ,, dataArea, ,, domainEdge, ), ;, if, (, lastPos, !=, -, 1, ), {, xxWidth, =, Math, ., min]
[,, domainEdge, ), ;, if, (, lastPos, !=, -, 1, ), {, xxWidth, =, Math, ., min, (, xxWidth, ,]
[), ;, if, (, lastPos, !=, -, 1, ), {, xxWidth, =, Math, ., min, (, xxWidth, ,, Math, .]
[), {, xxWidth, =, Math, ., min, (, xxWidth, ,, Math, ., abs, (, pos, -, lastPos, ), ), ;]
[!=, -, 1, ), {, xxWidth, =, Math, ., min, (, xxWidth, ,, Math, ., abs, (, pos, -, lastPos]
[), {, xxWidth, =, Math, ., min, (, xxWidth, ,, Math, ., abs, (, pos, -, lastPos, ), ), ;]
[), {, xxWidth, =, Math, ., min, (, xxWidth, ,, Math, ., abs, (, pos, -, lastPos, ), ), ;]
[=, Math, ., min, (, xxWidth, ,, Math, ., abs, (, pos, -, lastPos, ), ), ;, }, lastPos, =]
[;, }, lastPos, =, pos, ;, }, break, ;, case, WIDTHMETHOD_INTERVALDATA, :, IntervalXYDataset, intervalXYData, =, (, IntervalXYDataset, ), dataset, ;]
[., min, (, xxWidth, ,, Math, ., abs, (, pos, -, lastPos, ), ), ;, }, lastPos, =, pos, ;]
[,, Math, ., abs, (, pos, -, lastPos, ), ), ;, }, lastPos, =, pos, ;, }, break, ;, case]
[), ;, }, lastPos, =, pos, ;, }, break, ;, case, WIDTHMETHOD_INTERVALDATA, :, IntervalXYDataset, intervalXYData, =, (, IntervalXYDataset, ), dataset]
[., abs, (, pos, -, lastPos, ), ), ;, }, lastPos, =, pos, ;, }, break, ;, case, WIDTHMETHOD_INTERVALDATA, :]
[), ), ;, }, lastPos, =, pos, ;, }, break, ;, case, WIDTHMETHOD_INTERVALDATA, :, IntervalXYDataset, intervalXYData, =, (, IntervalXYDataset, )]
[-, lastPos, ), ), ;, }, lastPos, =, pos, ;, }, break, ;, case, WIDTHMETHOD_INTERVALDATA, :, IntervalXYDataset, intervalXYData, =, (]
[), ), ;, }, lastPos, =, pos, ;, }, break, ;, case, WIDTHMETHOD_INTERVALDATA, :, IntervalXYDataset, intervalXYData, =, (, IntervalXYDataset, )]
[=, pos, ;, }, break, ;, case, WIDTHMETHOD_INTERVALDATA, :, IntervalXYDataset, intervalXYData, =, (, IntervalXYDataset, ), dataset, ;, double, startPos, =]
[;, }, break, ;, case, WIDTHMETHOD_INTERVALDATA, :, IntervalXYDataset, intervalXYData, =, (, IntervalXYDataset, ), dataset, ;, double, startPos, =, domainAxis, .]
[:, IntervalXYDataset, intervalXYData, =, (, IntervalXYDataset, ), dataset, ;, double, startPos, =, domainAxis, ., valueToJava2D, (, intervalXYData, ., getStartXValue, (]
[;, double, startPos, =, domainAxis, ., valueToJava2D, (, intervalXYData, ., getStartXValue, (, series, ,, item, ), ,, dataArea, ,, plot]
[;, double, startPos, =, domainAxis, ., valueToJava2D, (, intervalXYData, ., getStartXValue, (, series, ,, item, ), ,, dataArea, ,, plot]
[;, double, endPos, =, domainAxis, ., valueToJava2D, (, intervalXYData, ., getEndXValue, (, series, ,, item, ), ,, dataArea, ,, plot]
[., valueToJava2D, (, intervalXYData, ., getStartXValue, (, series, ,, item, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), )]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, endPos, =, domainAxis, ., valueToJava2D, (, intervalXYData, ., getEndXValue]
[., getStartXValue, (, series, ,, item, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, endPos, =]
[,, item, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, endPos, =, domainAxis, ., valueToJava2D, (]
[), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, endPos, =, domainAxis, ., valueToJava2D, (, intervalXYData, .]
[,, plot, ., getDomainAxisEdge, (, ), ), ;, double, endPos, =, domainAxis, ., valueToJava2D, (, intervalXYData, ., getEndXValue, (, series]
[), ;, double, endPos, =, domainAxis, ., valueToJava2D, (, intervalXYData, ., getEndXValue, (, series, ,, item, ), ,, dataArea, ,]
[., getDomainAxisEdge, (, ), ), ;, double, endPos, =, domainAxis, ., valueToJava2D, (, intervalXYData, ., getEndXValue, (, series, ,, item]
[;, xxWidth, =, Math, ., abs, (, endPos, -, startPos, ), ;, break, ;, }, xxWidth, -=, 2, *, this]
[., valueToJava2D, (, intervalXYData, ., getEndXValue, (, series, ,, item, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), )]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, xxWidth, =, Math, ., abs, (, endPos, -, startPos, )]
[., getEndXValue, (, series, ,, item, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, xxWidth, =, Math]
[,, item, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, xxWidth, =, Math, ., abs, (, endPos]
[), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, xxWidth, =, Math, ., abs, (, endPos, -, startPos]
[,, plot, ., getDomainAxisEdge, (, ), ), ;, xxWidth, =, Math, ., abs, (, endPos, -, startPos, ), ;, break]
[), ;, xxWidth, =, Math, ., abs, (, endPos, -, startPos, ), ;, break, ;, }, xxWidth, -=, 2, *]
[., getDomainAxisEdge, (, ), ), ;, xxWidth, =, Math, ., abs, (, endPos, -, startPos, ), ;, break, ;, }]
[=, Math, ., abs, (, endPos, -, startPos, ), ;, break, ;, }, xxWidth, -=, 2, *, this, ., autoWidthGap]
[;, break, ;, }, xxWidth, -=, 2, *, this, ., autoWidthGap, ;, xxWidth, *=, this, ., autoWidthFactor, ;, xxWidth, =]
[., abs, (, endPos, -, startPos, ), ;, break, ;, }, xxWidth, -=, 2, *, this, ., autoWidthGap, ;, xxWidth]
[), ;, break, ;, }, xxWidth, -=, 2, *, this, ., autoWidthGap, ;, xxWidth, *=, this, ., autoWidthFactor, ;, xxWidth]
[-, startPos, ), ;, break, ;, }, xxWidth, -=, 2, *, this, ., autoWidthGap, ;, xxWidth, *=, this, ., autoWidthFactor]
[), ;, break, ;, }, xxWidth, -=, 2, *, this, ., autoWidthGap, ;, xxWidth, *=, this, ., autoWidthFactor, ;, xxWidth]
[-=, 2, *, this, ., autoWidthGap, ;, xxWidth, *=, this, ., autoWidthFactor, ;, xxWidth, =, Math, ., min, (, xxWidth]
[;, xxWidth, *=, this, ., autoWidthFactor, ;, xxWidth, =, Math, ., min, (, xxWidth, ,, this, ., maxCandleWidth, ), ;]
[*, this, ., autoWidthGap, ;, xxWidth, *=, this, ., autoWidthFactor, ;, xxWidth, =, Math, ., min, (, xxWidth, ,, this]
[;, xxWidth, *=, this, ., autoWidthFactor, ;, xxWidth, =, Math, ., min, (, xxWidth, ,, this, ., maxCandleWidth, ), ;]
[., autoWidthGap, ;, xxWidth, *=, this, ., autoWidthFactor, ;, xxWidth, =, Math, ., min, (, xxWidth, ,, this, ., maxCandleWidth]
[*=, this, ., autoWidthFactor, ;, xxWidth, =, Math, ., min, (, xxWidth, ,, this, ., maxCandleWidth, ), ;, volumeWidth, =]
[;, xxWidth, =, Math, ., min, (, xxWidth, ,, this, ., maxCandleWidth, ), ;, volumeWidth, =, Math, ., max, (]
[., autoWidthFactor, ;, xxWidth, =, Math, ., min, (, xxWidth, ,, this, ., maxCandleWidth, ), ;, volumeWidth, =, Math, .]
[=, Math, ., min, (, xxWidth, ,, this, ., maxCandleWidth, ), ;, volumeWidth, =, Math, ., max, (, Math, .]
[;, volumeWidth, =, Math, ., max, (, Math, ., min, (, 1, ,, this, ., maxCandleWidth, ), ,, xxWidth, )]
[., min, (, xxWidth, ,, this, ., maxCandleWidth, ), ;, volumeWidth, =, Math, ., max, (, Math, ., min, (]
[,, this, ., maxCandleWidth, ), ;, volumeWidth, =, Math, ., max, (, Math, ., min, (, 1, ,, this, .]
[), ;, volumeWidth, =, Math, ., max, (, Math, ., min, (, 1, ,, this, ., maxCandleWidth, ), ,, xxWidth]
[., maxCandleWidth, ), ;, volumeWidth, =, Math, ., max, (, Math, ., min, (, 1, ,, this, ., maxCandleWidth, )]
[=, Math, ., max, (, Math, ., min, (, 1, ,, this, ., maxCandleWidth, ), ,, xxWidth, ), ;, stickWidth]
[;, stickWidth, =, Math, ., max, (, Math, ., min, (, 3, ,, this, ., maxCandleWidth, ), ,, xxWidth, )]
[., max, (, Math, ., min, (, 1, ,, this, ., maxCandleWidth, ), ,, xxWidth, ), ;, stickWidth, =, Math]
[,, xxWidth, ), ;, stickWidth, =, Math, ., max, (, Math, ., min, (, 3, ,, this, ., maxCandleWidth, )]
[., min, (, 1, ,, this, ., maxCandleWidth, ), ,, xxWidth, ), ;, stickWidth, =, Math, ., max, (, Math]
[,, this, ., maxCandleWidth, ), ,, xxWidth, ), ;, stickWidth, =, Math, ., max, (, Math, ., min, (, 3]
[), ,, xxWidth, ), ;, stickWidth, =, Math, ., max, (, Math, ., min, (, 3, ,, this, ., maxCandleWidth]
[., maxCandleWidth, ), ,, xxWidth, ), ;, stickWidth, =, Math, ., max, (, Math, ., min, (, 3, ,, this]
[), ;, stickWidth, =, Math, ., max, (, Math, ., min, (, 3, ,, this, ., maxCandleWidth, ), ,, xxWidth]
[=, Math, ., max, (, Math, ., min, (, 3, ,, this, ., maxCandleWidth, ), ,, xxWidth, ), ;, }]
[;, }, Paint, p, =, getItemPaint, (, series, ,, item, ,, selected, ), ;, Paint, outlinePaint, =, null, ;, if]
[., max, (, Math, ., min, (, 3, ,, this, ., maxCandleWidth, ), ,, xxWidth, ), ;, }, Paint, p]
[,, xxWidth, ), ;, }, Paint, p, =, getItemPaint, (, series, ,, item, ,, selected, ), ;, Paint, outlinePaint, =]
[., min, (, 3, ,, this, ., maxCandleWidth, ), ,, xxWidth, ), ;, }, Paint, p, =, getItemPaint, (, series]
[,, this, ., maxCandleWidth, ), ,, xxWidth, ), ;, }, Paint, p, =, getItemPaint, (, series, ,, item, ,, selected]
[), ,, xxWidth, ), ;, }, Paint, p, =, getItemPaint, (, series, ,, item, ,, selected, ), ;, Paint, outlinePaint]
[., maxCandleWidth, ), ,, xxWidth, ), ;, }, Paint, p, =, getItemPaint, (, series, ,, item, ,, selected, ), ;]
[), ;, }, Paint, p, =, getItemPaint, (, series, ,, item, ,, selected, ), ;, Paint, outlinePaint, =, null, ;]
[;, Paint, outlinePaint, =, null, ;, if, (, this, ., useOutlinePaint, ), {, outlinePaint, =, getItemOutlinePaint, (, series, ,, item]
[,, item, ,, selected, ), ;, Paint, outlinePaint, =, null, ;, if, (, this, ., useOutlinePaint, ), {, outlinePaint, =]
[,, selected, ), ;, Paint, outlinePaint, =, null, ;, if, (, this, ., useOutlinePaint, ), {, outlinePaint, =, getItemOutlinePaint, (]
[), ;, Paint, outlinePaint, =, null, ;, if, (, this, ., useOutlinePaint, ), {, outlinePaint, =, getItemOutlinePaint, (, series, ,]
[;, if, (, this, ., useOutlinePaint, ), {, outlinePaint, =, getItemOutlinePaint, (, series, ,, item, ,, selected, ), ;, }]
[), {, outlinePaint, =, getItemOutlinePaint, (, series, ,, item, ,, selected, ), ;, }, Stroke, s, =, getItemStroke, (, series]
[., useOutlinePaint, ), {, outlinePaint, =, getItemOutlinePaint, (, series, ,, item, ,, selected, ), ;, }, Stroke, s, =, getItemStroke]
[=, getItemOutlinePaint, (, series, ,, item, ,, selected, ), ;, }, Stroke, s, =, getItemStroke, (, series, ,, item, ,]
[;, }, Stroke, s, =, getItemStroke, (, series, ,, item, ,, selected, ), ;, g2, ., setStroke, (, s, )]
[,, item, ,, selected, ), ;, }, Stroke, s, =, getItemStroke, (, series, ,, item, ,, selected, ), ;, g2]
[,, selected, ), ;, }, Stroke, s, =, getItemStroke, (, series, ,, item, ,, selected, ), ;, g2, ., setStroke]
[), ;, }, Stroke, s, =, getItemStroke, (, series, ,, item, ,, selected, ), ;, g2, ., setStroke, (, s]
[;, g2, ., setStroke, (, s, ), ;, if, (, this, ., drawVolume, ), {, int, volume, =, (, int]
[,, item, ,, selected, ), ;, g2, ., setStroke, (, s, ), ;, if, (, this, ., drawVolume, ), {]
[,, selected, ), ;, g2, ., setStroke, (, s, ), ;, if, (, this, ., drawVolume, ), {, int, volume]
[), ;, g2, ., setStroke, (, s, ), ;, if, (, this, ., drawVolume, ), {, int, volume, =, (]
[;, if, (, this, ., drawVolume, ), {, int, volume, =, (, int, ), highLowData, ., getVolumeValue, (, series, ,]
[., setStroke, (, s, ), ;, if, (, this, ., drawVolume, ), {, int, volume, =, (, int, ), highLowData]
[), ;, if, (, this, ., drawVolume, ), {, int, volume, =, (, int, ), highLowData, ., getVolumeValue, (, series]
[), {, int, volume, =, (, int, ), highLowData, ., getVolumeValue, (, series, ,, item, ), ;, double, volumeHeight, =]
[., drawVolume, ), {, int, volume, =, (, int, ), highLowData, ., getVolumeValue, (, series, ,, item, ), ;, double]
[;, double, volumeHeight, =, volume, /, this, ., maxVolume, ;, double, min, ,, max, ;, if, (, horiz, ), {]
[;, double, volumeHeight, =, volume, /, this, ., maxVolume, ;, double, min, ,, max, ;, if, (, horiz, ), {]
[., getVolumeValue, (, series, ,, item, ), ;, double, volumeHeight, =, volume, /, this, ., maxVolume, ;, double, min, ,]
[,, item, ), ;, double, volumeHeight, =, volume, /, this, ., maxVolume, ;, double, min, ,, max, ;, if, (]
[), ;, double, volumeHeight, =, volume, /, this, ., maxVolume, ;, double, min, ,, max, ;, if, (, horiz, )]
[;, double, min, ,, max, ;, if, (, horiz, ), {, min, =, dataArea, ., getMinX, (, ), ;, max]
[/, this, ., maxVolume, ;, double, min, ,, max, ;, if, (, horiz, ), {, min, =, dataArea, ., getMinX]
[;, double, min, ,, max, ;, if, (, horiz, ), {, min, =, dataArea, ., getMinX, (, ), ;, max]
[., maxVolume, ;, double, min, ,, max, ;, if, (, horiz, ), {, min, =, dataArea, ., getMinX, (, )]
[), {, min, =, dataArea, ., getMinX, (, ), ;, max, =, dataArea, ., getMaxX, (, ), ;, }, else]
[=, dataArea, ., getMinX, (, ), ;, max, =, dataArea, ., getMaxX, (, ), ;, }, else, {, min, =]
[;, max, =, dataArea, ., getMaxX, (, ), ;, }, else, {, min, =, dataArea, ., getMinY, (, ), ;]
[., getMinX, (, ), ;, max, =, dataArea, ., getMaxX, (, ), ;, }, else, {, min, =, dataArea, .]
[=, dataArea, ., getMaxX, (, ), ;, }, else, {, min, =, dataArea, ., getMinY, (, ), ;, max, =]
[;, }, else, {, min, =, dataArea, ., getMinY, (, ), ;, max, =, dataArea, ., getMaxY, (, ), ;]
[., getMaxX, (, ), ;, }, else, {, min, =, dataArea, ., getMinY, (, ), ;, max, =, dataArea, .]
[=, dataArea, ., getMinY, (, ), ;, max, =, dataArea, ., getMaxY, (, ), ;, }, double, zzVolume, =, volumeHeight]
[;, max, =, dataArea, ., getMaxY, (, ), ;, }, double, zzVolume, =, volumeHeight, *, (, max, -, min, )]
[., getMinY, (, ), ;, max, =, dataArea, ., getMaxY, (, ), ;, }, double, zzVolume, =, volumeHeight, *, (]
[=, dataArea, ., getMaxY, (, ), ;, }, double, zzVolume, =, volumeHeight, *, (, max, -, min, ), ;, g2]
[;, }, double, zzVolume, =, volumeHeight, *, (, max, -, min, ), ;, g2, ., setPaint, (, getVolumePaint, (, )]
[., getMaxY, (, ), ;, }, double, zzVolume, =, volumeHeight, *, (, max, -, min, ), ;, g2, ., setPaint]
[;, g2, ., setPaint, (, getVolumePaint, (, ), ), ;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2]
[*, (, max, -, min, ), ;, g2, ., setPaint, (, getVolumePaint, (, ), ), ;, Composite, originalComposite, =, g2]
[;, g2, ., setPaint, (, getVolumePaint, (, ), ), ;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2]
[), ;, g2, ., setPaint, (, getVolumePaint, (, ), ), ;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;]
[-, min, ), ;, g2, ., setPaint, (, getVolumePaint, (, ), ), ;, Composite, originalComposite, =, g2, ., getComposite, (]
[), ;, g2, ., setPaint, (, getVolumePaint, (, ), ), ;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;]
[;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, .]
[., setPaint, (, getVolumePaint, (, ), ), ;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., setComposite]
[), ;, Composite, originalComposite, =, g2, ., getComposite, (, ), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite]
[;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, 0.3f, ), ), ;, if, (, horiz]
[., getComposite, (, ), ;, g2, ., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, 0.3f, ), )]
[;, if, (, horiz, ), {, g2, ., fill, (, new, Rectangle2D, ., Double, (, min, ,, xx, -, volumeWidth]
[., setComposite, (, AlphaComposite, ., getInstance, (, AlphaComposite, ., SRC_OVER, ,, 0.3f, ), ), ;, if, (, horiz, ), {]
[), ;, if, (, horiz, ), {, g2, ., fill, (, new, Rectangle2D, ., Double, (, min, ,, xx, -]
[., getInstance, (, AlphaComposite, ., SRC_OVER, ,, 0.3f, ), ), ;, if, (, horiz, ), {, g2, ., fill, (]
[,, 0.3f, ), ), ;, if, (, horiz, ), {, g2, ., fill, (, new, Rectangle2D, ., Double, (, min]
[., SRC_OVER, ,, 0.3f, ), ), ;, if, (, horiz, ), {, g2, ., fill, (, new, Rectangle2D, ., Double]
[), ), ;, if, (, horiz, ), {, g2, ., fill, (, new, Rectangle2D, ., Double, (, min, ,, xx]
[), {, g2, ., fill, (, new, Rectangle2D, ., Double, (, min, ,, xx, -, volumeWidth, /, 2, ,, zzVolume]
[;, }, else, {, g2, ., fill, (, new, Rectangle2D, ., Double, (, xx, -, volumeWidth, /, 2, ,, max]
[., fill, (, new, Rectangle2D, ., Double, (, min, ,, xx, -, volumeWidth, /, 2, ,, zzVolume, ,, volumeWidth, )]
[), ;, }, else, {, g2, ., fill, (, new, Rectangle2D, ., Double, (, xx, -, volumeWidth, /, 2, ,]
[,, xx, -, volumeWidth, /, 2, ,, zzVolume, ,, volumeWidth, ), ), ;, }, else, {, g2, ., fill, (]
[,, zzVolume, ,, volumeWidth, ), ), ;, }, else, {, g2, ., fill, (, new, Rectangle2D, ., Double, (, xx]
[-, volumeWidth, /, 2, ,, zzVolume, ,, volumeWidth, ), ), ;, }, else, {, g2, ., fill, (, new, Rectangle2D]
[,, zzVolume, ,, volumeWidth, ), ), ;, }, else, {, g2, ., fill, (, new, Rectangle2D, ., Double, (, xx]
[/, 2, ,, zzVolume, ,, volumeWidth, ), ), ;, }, else, {, g2, ., fill, (, new, Rectangle2D, ., Double]
[,, zzVolume, ,, volumeWidth, ), ), ;, }, else, {, g2, ., fill, (, new, Rectangle2D, ., Double, (, xx]
[,, volumeWidth, ), ), ;, }, else, {, g2, ., fill, (, new, Rectangle2D, ., Double, (, xx, -, volumeWidth]
[), ), ;, }, else, {, g2, ., fill, (, new, Rectangle2D, ., Double, (, xx, -, volumeWidth, /, 2]
[;, }, g2, ., setComposite, (, originalComposite, ), ;, }, if, (, this, ., useOutlinePaint, ), {, g2, ., setPaint]
[., fill, (, new, Rectangle2D, ., Double, (, xx, -, volumeWidth, /, 2, ,, max, -, zzVolume, ,, volumeWidth, ,]
[), ;, }, g2, ., setComposite, (, originalComposite, ), ;, }, if, (, this, ., useOutlinePaint, ), {, g2, .]
[,, max, -, zzVolume, ,, volumeWidth, ,, zzVolume, ), ), ;, }, g2, ., setComposite, (, originalComposite, ), ;, }]
[-, volumeWidth, /, 2, ,, max, -, zzVolume, ,, volumeWidth, ,, zzVolume, ), ), ;, }, g2, ., setComposite, (]
[,, max, -, zzVolume, ,, volumeWidth, ,, zzVolume, ), ), ;, }, g2, ., setComposite, (, originalComposite, ), ;, }]
[/, 2, ,, max, -, zzVolume, ,, volumeWidth, ,, zzVolume, ), ), ;, }, g2, ., setComposite, (, originalComposite, )]
[,, max, -, zzVolume, ,, volumeWidth, ,, zzVolume, ), ), ;, }, g2, ., setComposite, (, originalComposite, ), ;, }]
[,, volumeWidth, ,, zzVolume, ), ), ;, }, g2, ., setComposite, (, originalComposite, ), ;, }, if, (, this, .]
[-, zzVolume, ,, volumeWidth, ,, zzVolume, ), ), ;, }, g2, ., setComposite, (, originalComposite, ), ;, }, if, (]
[,, volumeWidth, ,, zzVolume, ), ), ;, }, g2, ., setComposite, (, originalComposite, ), ;, }, if, (, this, .]
[,, zzVolume, ), ), ;, }, g2, ., setComposite, (, originalComposite, ), ;, }, if, (, this, ., useOutlinePaint, )]
[), ), ;, }, g2, ., setComposite, (, originalComposite, ), ;, }, if, (, this, ., useOutlinePaint, ), {, g2]
[;, }, if, (, this, ., useOutlinePaint, ), {, g2, ., setPaint, (, outlinePaint, ), ;, }, else, {, g2]
[., setComposite, (, originalComposite, ), ;, }, if, (, this, ., useOutlinePaint, ), {, g2, ., setPaint, (, outlinePaint, )]
[), ;, }, if, (, this, ., useOutlinePaint, ), {, g2, ., setPaint, (, outlinePaint, ), ;, }, else, {]
[), {, g2, ., setPaint, (, outlinePaint, ), ;, }, else, {, g2, ., setPaint, (, p, ), ;, }]
[., useOutlinePaint, ), {, g2, ., setPaint, (, outlinePaint, ), ;, }, else, {, g2, ., setPaint, (, p, )]
[;, }, else, {, g2, ., setPaint, (, p, ), ;, }, double, yyMaxOpenClose, =, Math, ., max, (, yyOpen]
[., setPaint, (, outlinePaint, ), ;, }, else, {, g2, ., setPaint, (, p, ), ;, }, double, yyMaxOpenClose, =]
[), ;, }, else, {, g2, ., setPaint, (, p, ), ;, }, double, yyMaxOpenClose, =, Math, ., max, (]
[;, }, double, yyMaxOpenClose, =, Math, ., max, (, yyOpen, ,, yyClose, ), ;, double, yyMinOpenClose, =, Math, ., min]
[., setPaint, (, p, ), ;, }, double, yyMaxOpenClose, =, Math, ., max, (, yyOpen, ,, yyClose, ), ;, double]
[), ;, }, double, yyMaxOpenClose, =, Math, ., max, (, yyOpen, ,, yyClose, ), ;, double, yyMinOpenClose, =, Math, .]
[;, double, yyMinOpenClose, =, Math, ., min, (, yyOpen, ,, yyClose, ), ;, double, maxOpenClose, =, Math, ., max, (]
[., max, (, yyOpen, ,, yyClose, ), ;, double, yyMinOpenClose, =, Math, ., min, (, yyOpen, ,, yyClose, ), ;]
[,, yyClose, ), ;, double, yyMinOpenClose, =, Math, ., min, (, yyOpen, ,, yyClose, ), ;, double, maxOpenClose, =, Math]
[), ;, double, yyMinOpenClose, =, Math, ., min, (, yyOpen, ,, yyClose, ), ;, double, maxOpenClose, =, Math, ., max]
[;, double, maxOpenClose, =, Math, ., max, (, yOpen, ,, yClose, ), ;, double, minOpenClose, =, Math, ., min, (]
[., min, (, yyOpen, ,, yyClose, ), ;, double, maxOpenClose, =, Math, ., max, (, yOpen, ,, yClose, ), ;]
[,, yyClose, ), ;, double, maxOpenClose, =, Math, ., max, (, yOpen, ,, yClose, ), ;, double, minOpenClose, =, Math]
[), ;, double, maxOpenClose, =, Math, ., max, (, yOpen, ,, yClose, ), ;, double, minOpenClose, =, Math, ., min]
[;, double, minOpenClose, =, Math, ., min, (, yOpen, ,, yClose, ), ;, if, (, yHigh, >, maxOpenClose, ), {]
[., max, (, yOpen, ,, yClose, ), ;, double, minOpenClose, =, Math, ., min, (, yOpen, ,, yClose, ), ;]
[,, yClose, ), ;, double, minOpenClose, =, Math, ., min, (, yOpen, ,, yClose, ), ;, if, (, yHigh, >]
[), ;, double, minOpenClose, =, Math, ., min, (, yOpen, ,, yClose, ), ;, if, (, yHigh, >, maxOpenClose, )]
[;, if, (, yHigh, >, maxOpenClose, ), {, if, (, horiz, ), {, g2, ., draw, (, new, Line2D, .]
[., min, (, yOpen, ,, yClose, ), ;, if, (, yHigh, >, maxOpenClose, ), {, if, (, horiz, ), {]
[,, yClose, ), ;, if, (, yHigh, >, maxOpenClose, ), {, if, (, horiz, ), {, g2, ., draw, (]
[), ;, if, (, yHigh, >, maxOpenClose, ), {, if, (, horiz, ), {, g2, ., draw, (, new, Line2D]
[), {, if, (, horiz, ), {, g2, ., draw, (, new, Line2D, ., Double, (, yyHigh, ,, xx, ,]
[>, maxOpenClose, ), {, if, (, horiz, ), {, g2, ., draw, (, new, Line2D, ., Double, (, yyHigh, ,]
[), {, if, (, horiz, ), {, g2, ., draw, (, new, Line2D, ., Double, (, yyHigh, ,, xx, ,]
[), {, g2, ., draw, (, new, Line2D, ., Double, (, yyHigh, ,, xx, ,, yyMaxOpenClose, ,, xx, ), )]
[;, }, else, {, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyHigh, ,, xx, ,, yyMaxOpenClose]
[., draw, (, new, Line2D, ., Double, (, yyHigh, ,, xx, ,, yyMaxOpenClose, ,, xx, ), ), ;, }, else]
[), ;, }, else, {, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyHigh, ,, xx, ,]
[,, xx, ,, yyMaxOpenClose, ,, xx, ), ), ;, }, else, {, g2, ., draw, (, new, Line2D, ., Double]
[,, yyMaxOpenClose, ,, xx, ), ), ;, }, else, {, g2, ., draw, (, new, Line2D, ., Double, (, xx]
[,, xx, ), ), ;, }, else, {, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyHigh]
[), ), ;, }, else, {, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyHigh, ,, xx]
[;, }, }, if, (, yLow, <, minOpenClose, ), {, if, (, horiz, ), {, g2, ., draw, (, new]
[., draw, (, new, Line2D, ., Double, (, xx, ,, yyHigh, ,, xx, ,, yyMaxOpenClose, ), ), ;, }, }]
[), ;, }, }, if, (, yLow, <, minOpenClose, ), {, if, (, horiz, ), {, g2, ., draw, (]
[,, yyHigh, ,, xx, ,, yyMaxOpenClose, ), ), ;, }, }, if, (, yLow, <, minOpenClose, ), {, if, (]
[,, xx, ,, yyMaxOpenClose, ), ), ;, }, }, if, (, yLow, <, minOpenClose, ), {, if, (, horiz, )]
[,, yyMaxOpenClose, ), ), ;, }, }, if, (, yLow, <, minOpenClose, ), {, if, (, horiz, ), {, g2]
[), ), ;, }, }, if, (, yLow, <, minOpenClose, ), {, if, (, horiz, ), {, g2, ., draw]
[), {, if, (, horiz, ), {, g2, ., draw, (, new, Line2D, ., Double, (, yyLow, ,, xx, ,]
[<, minOpenClose, ), {, if, (, horiz, ), {, g2, ., draw, (, new, Line2D, ., Double, (, yyLow, ,]
[), {, if, (, horiz, ), {, g2, ., draw, (, new, Line2D, ., Double, (, yyLow, ,, xx, ,]
[), {, g2, ., draw, (, new, Line2D, ., Double, (, yyLow, ,, xx, ,, yyMinOpenClose, ,, xx, ), )]
[;, }, else, {, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyLow, ,, xx, ,, yyMinOpenClose]
[., draw, (, new, Line2D, ., Double, (, yyLow, ,, xx, ,, yyMinOpenClose, ,, xx, ), ), ;, }, else]
[), ;, }, else, {, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyLow, ,, xx, ,]
[,, xx, ,, yyMinOpenClose, ,, xx, ), ), ;, }, else, {, g2, ., draw, (, new, Line2D, ., Double]
[,, yyMinOpenClose, ,, xx, ), ), ;, }, else, {, g2, ., draw, (, new, Line2D, ., Double, (, xx]
[,, xx, ), ), ;, }, else, {, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyLow]
[), ), ;, }, else, {, g2, ., draw, (, new, Line2D, ., Double, (, xx, ,, yyLow, ,, xx]
[;, }, }, Rectangle2D, body, =, null, ;, Rectangle2D, hotspot, =, null, ;, double, length, =, Math, ., abs, (]
[., draw, (, new, Line2D, ., Double, (, xx, ,, yyLow, ,, xx, ,, yyMinOpenClose, ), ), ;, }, }]
[), ;, }, }, Rectangle2D, body, =, null, ;, Rectangle2D, hotspot, =, null, ;, double, length, =, Math, ., abs]
[,, yyLow, ,, xx, ,, yyMinOpenClose, ), ), ;, }, }, Rectangle2D, body, =, null, ;, Rectangle2D, hotspot, =, null]
[,, xx, ,, yyMinOpenClose, ), ), ;, }, }, Rectangle2D, body, =, null, ;, Rectangle2D, hotspot, =, null, ;, double]
[,, yyMinOpenClose, ), ), ;, }, }, Rectangle2D, body, =, null, ;, Rectangle2D, hotspot, =, null, ;, double, length, =]
[), ), ;, }, }, Rectangle2D, body, =, null, ;, Rectangle2D, hotspot, =, null, ;, double, length, =, Math, .]
[;, Rectangle2D, hotspot, =, null, ;, double, length, =, Math, ., abs, (, yyHigh, -, yyLow, ), ;, double, base]
[;, double, length, =, Math, ., abs, (, yyHigh, -, yyLow, ), ;, double, base, =, Math, ., min, (]
[;, double, base, =, Math, ., min, (, yyHigh, ,, yyLow, ), ;, if, (, horiz, ), {, body, =]
[., abs, (, yyHigh, -, yyLow, ), ;, double, base, =, Math, ., min, (, yyHigh, ,, yyLow, ), ;]
[), ;, double, base, =, Math, ., min, (, yyHigh, ,, yyLow, ), ;, if, (, horiz, ), {, body]
[-, yyLow, ), ;, double, base, =, Math, ., min, (, yyHigh, ,, yyLow, ), ;, if, (, horiz, )]
[), ;, double, base, =, Math, ., min, (, yyHigh, ,, yyLow, ), ;, if, (, horiz, ), {, body]
[;, if, (, horiz, ), {, body, =, new, Rectangle2D, ., Double, (, yyMinOpenClose, ,, xx, -, stickWidth, /, 2]
[., min, (, yyHigh, ,, yyLow, ), ;, if, (, horiz, ), {, body, =, new, Rectangle2D, ., Double, (]
[,, yyLow, ), ;, if, (, horiz, ), {, body, =, new, Rectangle2D, ., Double, (, yyMinOpenClose, ,, xx, -]
[), ;, if, (, horiz, ), {, body, =, new, Rectangle2D, ., Double, (, yyMinOpenClose, ,, xx, -, stickWidth, /]
[), {, body, =, new, Rectangle2D, ., Double, (, yyMinOpenClose, ,, xx, -, stickWidth, /, 2, ,, yyMaxOpenClose, -, yyMinOpenClose]
[=, new, Rectangle2D, ., Double, (, yyMinOpenClose, ,, xx, -, stickWidth, /, 2, ,, yyMaxOpenClose, -, yyMinOpenClose, ,, stickWidth, )]
[;, hotspot, =, new, Rectangle2D, ., Double, (, base, ,, xx, -, stickWidth, /, 2, ,, length, ,, stickWidth, )]
[,, xx, -, stickWidth, /, 2, ,, yyMaxOpenClose, -, yyMinOpenClose, ,, stickWidth, ), ;, hotspot, =, new, Rectangle2D, ., Double]
[,, yyMaxOpenClose, -, yyMinOpenClose, ,, stickWidth, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, base, ,, xx, -, stickWidth]
[-, stickWidth, /, 2, ,, yyMaxOpenClose, -, yyMinOpenClose, ,, stickWidth, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, base]
[,, yyMaxOpenClose, -, yyMinOpenClose, ,, stickWidth, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, base, ,, xx, -, stickWidth]
[/, 2, ,, yyMaxOpenClose, -, yyMinOpenClose, ,, stickWidth, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, base, ,, xx]
[,, yyMaxOpenClose, -, yyMinOpenClose, ,, stickWidth, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, base, ,, xx, -, stickWidth]
[,, stickWidth, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, base, ,, xx, -, stickWidth, /, 2, ,, length]
[-, yyMinOpenClose, ,, stickWidth, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, base, ,, xx, -, stickWidth, /, 2]
[,, stickWidth, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, base, ,, xx, -, stickWidth, /, 2, ,, length]
[), ;, hotspot, =, new, Rectangle2D, ., Double, (, base, ,, xx, -, stickWidth, /, 2, ,, length, ,, stickWidth]
[=, new, Rectangle2D, ., Double, (, base, ,, xx, -, stickWidth, /, 2, ,, length, ,, stickWidth, ), ;, }]
[;, }, else, {, body, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /, 2, ,, yyMinOpenClose, ,, stickWidth]
[,, xx, -, stickWidth, /, 2, ,, length, ,, stickWidth, ), ;, }, else, {, body, =, new, Rectangle2D, .]
[,, length, ,, stickWidth, ), ;, }, else, {, body, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /]
[-, stickWidth, /, 2, ,, length, ,, stickWidth, ), ;, }, else, {, body, =, new, Rectangle2D, ., Double, (]
[,, length, ,, stickWidth, ), ;, }, else, {, body, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /]
[/, 2, ,, length, ,, stickWidth, ), ;, }, else, {, body, =, new, Rectangle2D, ., Double, (, xx, -]
[,, length, ,, stickWidth, ), ;, }, else, {, body, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /]
[,, stickWidth, ), ;, }, else, {, body, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /, 2, ,]
[), ;, }, else, {, body, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /, 2, ,, yyMinOpenClose, ,]
[=, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /, 2, ,, yyMinOpenClose, ,, stickWidth, ,, yyMaxOpenClose, -, yyMinOpenClose, )]
[;, hotspot, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /, 2, ,, base, ,, stickWidth, ,, length, )]
[,, yyMinOpenClose, ,, stickWidth, ,, yyMaxOpenClose, -, yyMinOpenClose, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth]
[-, stickWidth, /, 2, ,, yyMinOpenClose, ,, stickWidth, ,, yyMaxOpenClose, -, yyMinOpenClose, ), ;, hotspot, =, new, Rectangle2D, ., Double]
[,, yyMinOpenClose, ,, stickWidth, ,, yyMaxOpenClose, -, yyMinOpenClose, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth]
[/, 2, ,, yyMinOpenClose, ,, stickWidth, ,, yyMaxOpenClose, -, yyMinOpenClose, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, xx]
[,, yyMinOpenClose, ,, stickWidth, ,, yyMaxOpenClose, -, yyMinOpenClose, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth]
[,, stickWidth, ,, yyMaxOpenClose, -, yyMinOpenClose, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /, 2]
[,, yyMaxOpenClose, -, yyMinOpenClose, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /, 2, ,, base]
[), ;, hotspot, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /, 2, ,, base, ,, stickWidth, ,, length]
[-, yyMinOpenClose, ), ;, hotspot, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /, 2, ,, base, ,, stickWidth]
[), ;, hotspot, =, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /, 2, ,, base, ,, stickWidth, ,, length]
[=, new, Rectangle2D, ., Double, (, xx, -, stickWidth, /, 2, ,, base, ,, stickWidth, ,, length, ), ;, }]
[;, }, if, (, yClose, >, yOpen, ), {, if, (, this, ., upPaint, !=, null, ), {, g2, .]
[,, base, ,, stickWidth, ,, length, ), ;, }, if, (, yClose, >, yOpen, ), {, if, (, this, .]
[-, stickWidth, /, 2, ,, base, ,, stickWidth, ,, length, ), ;, }, if, (, yClose, >, yOpen, ), {]
[,, base, ,, stickWidth, ,, length, ), ;, }, if, (, yClose, >, yOpen, ), {, if, (, this, .]
[/, 2, ,, base, ,, stickWidth, ,, length, ), ;, }, if, (, yClose, >, yOpen, ), {, if, (]
[,, base, ,, stickWidth, ,, length, ), ;, }, if, (, yClose, >, yOpen, ), {, if, (, this, .]
[,, stickWidth, ,, length, ), ;, }, if, (, yClose, >, yOpen, ), {, if, (, this, ., upPaint, !=]
[,, length, ), ;, }, if, (, yClose, >, yOpen, ), {, if, (, this, ., upPaint, !=, null, )]
[), ;, }, if, (, yClose, >, yOpen, ), {, if, (, this, ., upPaint, !=, null, ), {, g2]
[), {, if, (, this, ., upPaint, !=, null, ), {, g2, ., setPaint, (, this, ., upPaint, ), ;]
[>, yOpen, ), {, if, (, this, ., upPaint, !=, null, ), {, g2, ., setPaint, (, this, ., upPaint]
[), {, if, (, this, ., upPaint, !=, null, ), {, g2, ., setPaint, (, this, ., upPaint, ), ;]
[), {, g2, ., setPaint, (, this, ., upPaint, ), ;, }, else, {, g2, ., setPaint, (, p, )]
[!=, null, ), {, g2, ., setPaint, (, this, ., upPaint, ), ;, }, else, {, g2, ., setPaint, (]
[., upPaint, !=, null, ), {, g2, ., setPaint, (, this, ., upPaint, ), ;, }, else, {, g2, .]
[), {, g2, ., setPaint, (, this, ., upPaint, ), ;, }, else, {, g2, ., setPaint, (, p, )]
[;, }, else, {, g2, ., setPaint, (, p, ), ;, }, g2, ., fill, (, body, ), ;, }]
[., setPaint, (, this, ., upPaint, ), ;, }, else, {, g2, ., setPaint, (, p, ), ;, }, g2]
[), ;, }, else, {, g2, ., setPaint, (, p, ), ;, }, g2, ., fill, (, body, ), ;]
[., upPaint, ), ;, }, else, {, g2, ., setPaint, (, p, ), ;, }, g2, ., fill, (, body]
[;, }, g2, ., fill, (, body, ), ;, }, else, {, if, (, this, ., downPaint, !=, null, )]
[., setPaint, (, p, ), ;, }, g2, ., fill, (, body, ), ;, }, else, {, if, (, this]
[), ;, }, g2, ., fill, (, body, ), ;, }, else, {, if, (, this, ., downPaint, !=, null]
[;, }, else, {, if, (, this, ., downPaint, !=, null, ), {, g2, ., setPaint, (, this, ., downPaint]
[., fill, (, body, ), ;, }, else, {, if, (, this, ., downPaint, !=, null, ), {, g2, .]
[), ;, }, else, {, if, (, this, ., downPaint, !=, null, ), {, g2, ., setPaint, (, this, .]
[), {, g2, ., setPaint, (, this, ., downPaint, ), ;, }, else, {, g2, ., setPaint, (, p, )]
[!=, null, ), {, g2, ., setPaint, (, this, ., downPaint, ), ;, }, else, {, g2, ., setPaint, (]
[., downPaint, !=, null, ), {, g2, ., setPaint, (, this, ., downPaint, ), ;, }, else, {, g2, .]
[), {, g2, ., setPaint, (, this, ., downPaint, ), ;, }, else, {, g2, ., setPaint, (, p, )]
[;, }, else, {, g2, ., setPaint, (, p, ), ;, }, g2, ., fill, (, body, ), ;, }]
[., setPaint, (, this, ., downPaint, ), ;, }, else, {, g2, ., setPaint, (, p, ), ;, }, g2]
[), ;, }, else, {, g2, ., setPaint, (, p, ), ;, }, g2, ., fill, (, body, ), ;]
[., downPaint, ), ;, }, else, {, g2, ., setPaint, (, p, ), ;, }, g2, ., fill, (, body]
[;, }, g2, ., fill, (, body, ), ;, }, if, (, this, ., useOutlinePaint, ), {, g2, ., setPaint]
[., setPaint, (, p, ), ;, }, g2, ., fill, (, body, ), ;, }, if, (, this, ., useOutlinePaint]
[), ;, }, g2, ., fill, (, body, ), ;, }, if, (, this, ., useOutlinePaint, ), {, g2, .]
[;, }, if, (, this, ., useOutlinePaint, ), {, g2, ., setPaint, (, outlinePaint, ), ;, }, else, {, g2]
[., fill, (, body, ), ;, }, if, (, this, ., useOutlinePaint, ), {, g2, ., setPaint, (, outlinePaint, )]
[), ;, }, if, (, this, ., useOutlinePaint, ), {, g2, ., setPaint, (, outlinePaint, ), ;, }, else, {]
[), {, g2, ., setPaint, (, outlinePaint, ), ;, }, else, {, g2, ., setPaint, (, p, ), ;, }]
[., useOutlinePaint, ), {, g2, ., setPaint, (, outlinePaint, ), ;, }, else, {, g2, ., setPaint, (, p, )]
[;, }, else, {, g2, ., setPaint, (, p, ), ;, }, g2, ., draw, (, body, ), ;, if]
[., setPaint, (, outlinePaint, ), ;, }, else, {, g2, ., setPaint, (, p, ), ;, }, g2, ., draw]
[), ;, }, else, {, g2, ., setPaint, (, p, ), ;, }, g2, ., draw, (, body, ), ;]
[;, }, g2, ., draw, (, body, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[., setPaint, (, p, ), ;, }, g2, ., draw, (, body, ), ;, if, (, entities, !=, null, )]
[), ;, }, g2, ., draw, (, body, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, hotspot, ,, dataset, ,, series, ,, item, ,]
[., draw, (, body, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, hotspot, ,, dataset]
[), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, hotspot, ,, dataset, ,, series, ,, item]
[), {, addEntity, (, entities, ,, hotspot, ,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, )]
[!=, null, ), {, addEntity, (, entities, ,, hotspot, ,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,]
[), {, addEntity, (, entities, ,, hotspot, ,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, )]
[;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[,, hotspot, ,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, public, boolean]
[,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, public, boolean, equals, (]
[,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, public, boolean, equals, (, Object, obj]
[,, item, ,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {]
[,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, 0.0, ,, 0.0, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[,, 0.0, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, CandlestickRenderer, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, CandlestickRenderer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, CandlestickRenderer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, CandlestickRenderer, ), ), {, return, false, ;, }, CandlestickRenderer, that, =, (]
[), {, return, false, ;, }, CandlestickRenderer, that, =, (, CandlestickRenderer, ), obj, ;, if, (, this, ., candleWidth, !=]
[), {, return, false, ;, }, CandlestickRenderer, that, =, (, CandlestickRenderer, ), obj, ;, if, (, this, ., candleWidth, !=]
[), ), {, return, false, ;, }, CandlestickRenderer, that, =, (, CandlestickRenderer, ), obj, ;, if, (, this, ., candleWidth]
[instanceof, CandlestickRenderer, ), ), {, return, false, ;, }, CandlestickRenderer, that, =, (, CandlestickRenderer, ), obj, ;, if, (, this]
[;, }, CandlestickRenderer, that, =, (, CandlestickRenderer, ), obj, ;, if, (, this, ., candleWidth, !=, that, ., candleWidth, )]
[;, if, (, this, ., candleWidth, !=, that, ., candleWidth, ), {, return, false, ;, }, if, (, !, PaintUtilities]
[;, if, (, this, ., candleWidth, !=, that, ., candleWidth, ), {, return, false, ;, }, if, (, !, PaintUtilities]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., upPaint, ,, that, ., upPaint]
[!=, that, ., candleWidth, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., upPaint]
[., candleWidth, !=, that, ., candleWidth, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., upPaint, ,, that, ., upPaint]
[., candleWidth, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., upPaint, ,, that]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., upPaint, ,, that, ., upPaint, ), ), {, return]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., downPaint, ,, that, ., downPaint]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., downPaint, ,, that, ., downPaint]
[., equal, (, this, ., upPaint, ,, that, ., upPaint, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., upPaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, .]
[., upPaint, ,, that, ., upPaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., downPaint, ,, that, .]
[., upPaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., downPaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., downPaint, ,, that, ., downPaint, ), ), {, return]
[), {, return, false, ;, }, if, (, this, ., drawVolume, !=, that, ., drawVolume, ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., drawVolume, !=, that, ., drawVolume, ), {, return, false, ;]
[., equal, (, this, ., downPaint, ,, that, ., downPaint, ), ), {, return, false, ;, }, if, (, this]
[,, that, ., downPaint, ), ), {, return, false, ;, }, if, (, this, ., drawVolume, !=, that, ., drawVolume]
[., downPaint, ,, that, ., downPaint, ), ), {, return, false, ;, }, if, (, this, ., drawVolume, !=, that]
[), ), {, return, false, ;, }, if, (, this, ., drawVolume, !=, that, ., drawVolume, ), {, return, false]
[., downPaint, ), ), {, return, false, ;, }, if, (, this, ., drawVolume, !=, that, ., drawVolume, ), {]
[;, }, if, (, this, ., drawVolume, !=, that, ., drawVolume, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., maxCandleWidthInMilliseconds, !=, that, ., maxCandleWidthInMilliseconds, ), {, return, false, ;]
[!=, that, ., drawVolume, ), {, return, false, ;, }, if, (, this, ., maxCandleWidthInMilliseconds, !=, that, ., maxCandleWidthInMilliseconds, )]
[., drawVolume, !=, that, ., drawVolume, ), {, return, false, ;, }, if, (, this, ., maxCandleWidthInMilliseconds, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., maxCandleWidthInMilliseconds, !=, that, ., maxCandleWidthInMilliseconds, ), {, return, false, ;]
[., drawVolume, ), {, return, false, ;, }, if, (, this, ., maxCandleWidthInMilliseconds, !=, that, ., maxCandleWidthInMilliseconds, ), {, return]
[;, }, if, (, this, ., maxCandleWidthInMilliseconds, !=, that, ., maxCandleWidthInMilliseconds, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., autoWidthMethod, !=, that, ., autoWidthMethod, ), {, return, false, ;]
[!=, that, ., maxCandleWidthInMilliseconds, ), {, return, false, ;, }, if, (, this, ., autoWidthMethod, !=, that, ., autoWidthMethod, )]
[., maxCandleWidthInMilliseconds, !=, that, ., maxCandleWidthInMilliseconds, ), {, return, false, ;, }, if, (, this, ., autoWidthMethod, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., autoWidthMethod, !=, that, ., autoWidthMethod, ), {, return, false, ;]
[., maxCandleWidthInMilliseconds, ), {, return, false, ;, }, if, (, this, ., autoWidthMethod, !=, that, ., autoWidthMethod, ), {, return]
[;, }, if, (, this, ., autoWidthMethod, !=, that, ., autoWidthMethod, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., autoWidthFactor, !=, that, ., autoWidthFactor, ), {, return, false, ;]
[!=, that, ., autoWidthMethod, ), {, return, false, ;, }, if, (, this, ., autoWidthFactor, !=, that, ., autoWidthFactor, )]
[., autoWidthMethod, !=, that, ., autoWidthMethod, ), {, return, false, ;, }, if, (, this, ., autoWidthFactor, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., autoWidthFactor, !=, that, ., autoWidthFactor, ), {, return, false, ;]
[., autoWidthMethod, ), {, return, false, ;, }, if, (, this, ., autoWidthFactor, !=, that, ., autoWidthFactor, ), {, return]
[;, }, if, (, this, ., autoWidthFactor, !=, that, ., autoWidthFactor, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., autoWidthGap, !=, that, ., autoWidthGap, ), {, return, false, ;]
[!=, that, ., autoWidthFactor, ), {, return, false, ;, }, if, (, this, ., autoWidthGap, !=, that, ., autoWidthGap, )]
[., autoWidthFactor, !=, that, ., autoWidthFactor, ), {, return, false, ;, }, if, (, this, ., autoWidthGap, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., autoWidthGap, !=, that, ., autoWidthGap, ), {, return, false, ;]
[., autoWidthFactor, ), {, return, false, ;, }, if, (, this, ., autoWidthGap, !=, that, ., autoWidthGap, ), {, return]
[;, }, if, (, this, ., autoWidthGap, !=, that, ., autoWidthGap, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., useOutlinePaint, !=, that, ., useOutlinePaint, ), {, return, false, ;]
[!=, that, ., autoWidthGap, ), {, return, false, ;, }, if, (, this, ., useOutlinePaint, !=, that, ., useOutlinePaint, )]
[., autoWidthGap, !=, that, ., autoWidthGap, ), {, return, false, ;, }, if, (, this, ., useOutlinePaint, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., useOutlinePaint, !=, that, ., useOutlinePaint, ), {, return, false, ;]
[., autoWidthGap, ), {, return, false, ;, }, if, (, this, ., useOutlinePaint, !=, that, ., useOutlinePaint, ), {, return]
[;, }, if, (, this, ., useOutlinePaint, !=, that, ., useOutlinePaint, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., volumePaint, ,, that, ., volumePaint]
[!=, that, ., useOutlinePaint, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., volumePaint]
[., useOutlinePaint, !=, that, ., useOutlinePaint, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., volumePaint, ,, that, ., volumePaint]
[., useOutlinePaint, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., volumePaint, ,, that]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., volumePaint, ,, that, ., volumePaint, ), ), {, return]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, )]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, )]
[., equal, (, this, ., volumePaint, ,, that, ., volumePaint, ), ), {, return, false, ;, }, return, super, .]
[,, that, ., volumePaint, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }]
[., volumePaint, ,, that, ., volumePaint, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, )]
[), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (]
[., volumePaint, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private, void]
[., equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (]
[), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private]
[;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, .]
[., clone, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (]
[;, SerialUtilities, ., writePaint, (, this, ., upPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., downPaint, ,]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., upPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (]
[;, SerialUtilities, ., writePaint, (, this, ., downPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., volumePaint, ,]
[., writePaint, (, this, ., upPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., downPaint, ,, stream, )]
[,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., downPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this]
[., upPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., downPaint, ,, stream, ), ;, SerialUtilities, ., writePaint]
[), ;, SerialUtilities, ., writePaint, (, this, ., downPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., volumePaint]
[;, SerialUtilities, ., writePaint, (, this, ., volumePaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, )]
[., writePaint, (, this, ., downPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., volumePaint, ,, stream, )]
[,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., volumePaint, ,, stream, ), ;, }, private, void, readObject, (]
[., downPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., volumePaint, ,, stream, ), ;, }, private, void]
[), ;, SerialUtilities, ., writePaint, (, this, ., volumePaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[., writePaint, (, this, ., volumePaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException]
[,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject]
[., volumePaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream]
[), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, )]
[;, this, ., upPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., downPaint, =, SerialUtilities, ., readPaint, (]
[., defaultReadObject, (, ), ;, this, ., upPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., downPaint, =]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., downPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this]
[., upPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., downPaint, =, SerialUtilities, ., readPaint, (, stream, )]
[;, this, ., downPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., volumePaint, =, SerialUtilities, ., readPaint, (]
[., readPaint, (, stream, ), ;, this, ., downPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., volumePaint]
[), ;, this, ., downPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., volumePaint, =, SerialUtilities, ., readPaint]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., volumePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }]
[., downPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., volumePaint, =, SerialUtilities, ., readPaint, (, stream, )]
[;, this, ., volumePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, public, Rectangle2D, createHotSpotBounds, (, Graphics2D, g2, ,]
[., readPaint, (, stream, ), ;, this, ., volumePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, public, Rectangle2D]
[), ;, this, ., volumePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, public, Rectangle2D, createHotSpotBounds, (, Graphics2D, g2]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, }, public, Rectangle2D, createHotSpotBounds, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, XYPlot]
[., volumePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, public, Rectangle2D, createHotSpotBounds, (, Graphics2D, g2, ,, Rectangle2D, dataArea]
[;, }, public, Rectangle2D, createHotSpotBounds, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, ValueAxis, domainAxis, ,, ValueAxis, rangeAxis]
[., readPaint, (, stream, ), ;, }, public, Rectangle2D, createHotSpotBounds, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,]
[), ;, }, public, Rectangle2D, createHotSpotBounds, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, ValueAxis, domainAxis, ,, ValueAxis]
[;, }, }]
[., createHotSpotBounds, (, g2, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, series, ,, item, ,, selected]
[,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, series, ,, item, ,, selected, ,, state, ,, result]
[,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, series, ,, item, ,, selected, ,, state, ,, result, ), ;]
[,, domainAxis, ,, rangeAxis, ,, dataset, ,, series, ,, item, ,, selected, ,, state, ,, result, ), ;, }, }]
[,, rangeAxis, ,, dataset, ,, series, ,, item, ,, selected, ,, state, ,, result, ), ;, }, }]
[,, dataset, ,, series, ,, item, ,, selected, ,, state, ,, result, ), ;, }, }]
[,, series, ,, item, ,, selected, ,, state, ,, result, ), ;, }, }]
[,, item, ,, selected, ,, state, ,, result, ), ;, }, }]
[,, selected, ,, state, ,, result, ), ;, }, }]
[,, state, ,, result, ), ;, }, }]
[,, result, ), ;, }, }]
[), ;, }, }]
