[;, hasJUnit45OrHigher, =, true, ;, }, catch, (, Throwable, t, ), {, hasJUnit45OrHigher, =, false, ;, }, }, public, boolean]
[., forName, (, "org.junit.runners.BlockJUnit4ClassRunner", ), ;, hasJUnit45OrHigher, =, true, ;, }, catch, (, Throwable, t, ), {, hasJUnit45OrHigher, =, false]
[), ;, hasJUnit45OrHigher, =, true, ;, }, catch, (, Throwable, t, ), {, hasJUnit45OrHigher, =, false, ;, }, }, public]
[=, true, ;, }, catch, (, Throwable, t, ), {, hasJUnit45OrHigher, =, false, ;, }, }, public, boolean, isJUnit45OrHigherAvailable, (]
[;, }, catch, (, Throwable, t, ), {, hasJUnit45OrHigher, =, false, ;, }, }, public, boolean, isJUnit45OrHigherAvailable, (, ), {]
[=, false, ;, }, }, public, boolean, isJUnit45OrHigherAvailable, (, ), {, return, hasJUnit45OrHigher, ;, }, public, RunnerImpl, newInstance, (, String]
[;, }, }, public, boolean, isJUnit45OrHigherAvailable, (, ), {, return, hasJUnit45OrHigher, ;, }, public, RunnerImpl, newInstance, (, String, runnerClassName, ,]
[;, }, public, RunnerImpl, newInstance, (, String, runnerClassName, ,, Class, <, ?, >, constructorParam, ), throws, Exception, {, Constructor, <]
[;, constructor, =, runnerClass, ., getConstructor, (, Class, ., class, ., getClass, (, ), ), ;, }, catch, (, Exception]
[., forName, (, runnerClassName, ), ;, constructor, =, runnerClass, ., getConstructor, (, Class, ., class, ., getClass, (, ), )]
[), ;, constructor, =, runnerClass, ., getConstructor, (, Class, ., class, ., getClass, (, ), ), ;, }, catch, (]
[=, runnerClass, ., getConstructor, (, Class, ., class, ., getClass, (, ), ), ;, }, catch, (, Exception, e, )]
[;, }, catch, (, Exception, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, try, {, return, (]
[., getConstructor, (, Class, ., class, ., getClass, (, ), ), ;, }, catch, (, Exception, e, ), {, throw]
[), ;, }, catch, (, Exception, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, try, {, return]
[., getClass, (, ), ), ;, }, catch, (, Exception, e, ), {, throw, new, RuntimeException, (, e, ), ;]
[;, }, try, {, return, (, RunnerImpl, ), constructor, ., newInstance, (, constructorParam, ), ;, }, catch, (, InvocationTargetException, e]
[), ;, }, try, {, return, (, RunnerImpl, ), constructor, ., newInstance, (, constructorParam, ), ;, }, catch, (, InvocationTargetException]
[;, }, catch, (, InvocationTargetException, e, ), {, throw, e, ;, }, catch, (, Exception, e, ), {, throw, new]
[;, }, catch, (, InvocationTargetException, e, ), {, throw, e, ;, }, catch, (, Exception, e, ), {, throw, new]
[., newInstance, (, constructorParam, ), ;, }, catch, (, InvocationTargetException, e, ), {, throw, e, ;, }, catch, (, Exception]
[), ;, }, catch, (, InvocationTargetException, e, ), {, throw, e, ;, }, catch, (, Exception, e, ), {, throw]
[;, }, catch, (, Exception, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, }, }]
[;, }, }, }]
[), ;, }, }, }]
