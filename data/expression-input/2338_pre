[., util, ;, public, class, StringJoiner, {, public, static, String, join, (, Object, ..., linesToBreak, ), {, StringBuilder, out, =]
[public, class, StringJoiner, {, public, static, String, join, (, Object, ..., linesToBreak, ), {, StringBuilder, out, =, new, StringBuilder, (]
[public, static, String, join, (, Object, ..., linesToBreak, ), {, StringBuilder, out, =, new, StringBuilder, (, "\n", ), ;, return]
[String, join, (, Object, ..., linesToBreak, ), {, StringBuilder, out, =, new, StringBuilder, (, "\n", ), ;, return, join, (]
[(, Object, ..., linesToBreak, ), {, StringBuilder, out, =, new, StringBuilder, (, "\n", ), ;, return, join, (, out, ,]
[}, private, static, String, join, (, StringBuilder, out, ,, Object, [, ], linesToBreak, ), {, for, (, Object, line, :]
[String, join, (, StringBuilder, out, ,, Object, [, ], linesToBreak, ), {, for, (, Object, line, :, linesToBreak, ), {]
[String, join, (, StringBuilder, out, ,, Object, [, ], linesToBreak, ), {, for, (, Object, line, :, linesToBreak, ), {]
[String, join, (, StringBuilder, out, ,, Object, [, ], linesToBreak, ), {, for, (, Object, line, :, linesToBreak, ), {]
[out, ,, Object, [, ], linesToBreak, ), {, for, (, Object, line, :, linesToBreak, ), {, out, ., append, (]
[out, ,, Object, [, ], linesToBreak, ), {, for, (, Object, line, :, linesToBreak, ), {, out, ., append, (]
[(, Object, line, :, linesToBreak, ), {, out, ., append, (, line, ., toString, (, ), ), ., append, (]
[out, ., append, (, line, ., toString, (, ), ), ., append, (, "\n", ), ;, }, int, lastBreak, =]
[out, ., append, (, line, ., toString, (, ), ), ., append, (, "\n", ), ;, }, int, lastBreak, =]
[line, ., toString, (, ), ), ., append, (, "\n", ), ;, }, int, lastBreak, =, out, ., lastIndexOf, (]
[), ), ., append, (, "\n", ), ;, }, int, lastBreak, =, out, ., lastIndexOf, (, "\n", ), ;, return]
[), ), ., append, (, "\n", ), ;, }, int, lastBreak, =, out, ., lastIndexOf, (, "\n", ), ;, return]
[), ), ., append, (, "\n", ), ;, }, int, lastBreak, =, out, ., lastIndexOf, (, "\n", ), ;, return]
[(, "\n", ), ;, }, int, lastBreak, =, out, ., lastIndexOf, (, "\n", ), ;, return, out, ., replace, (]
[), ;, }, int, lastBreak, =, out, ., lastIndexOf, (, "\n", ), ;, return, out, ., replace, (, lastBreak, ,]
[), ;, }, int, lastBreak, =, out, ., lastIndexOf, (, "\n", ), ;, return, out, ., replace, (, lastBreak, ,]
[}, int, lastBreak, =, out, ., lastIndexOf, (, "\n", ), ;, return, out, ., replace, (, lastBreak, ,, lastBreak, +]
[lastBreak, =, out, ., lastIndexOf, (, "\n", ), ;, return, out, ., replace, (, lastBreak, ,, lastBreak, +, 1, ,]
