[=, source, ;, }, public, void, setColorize, (, boolean, colorize, ), {, this, ., colorize, =, colorize, ;, }, protected]
[., source, =, source, ;, }, public, void, setColorize, (, boolean, colorize, ), {, this, ., colorize, =, colorize, ;]
[;, }, public, void, setColorize, (, boolean, colorize, ), {, this, ., colorize, =, colorize, ;, }, protected, final, SourceExcerptProvider]
[=, colorize, ;, }, protected, final, SourceExcerptProvider, getSource, (, ), {, return, source, ;, }, private, static, final, Set, <]
[., colorize, =, colorize, ;, }, protected, final, SourceExcerptProvider, getSource, (, ), {, return, source, ;, }, private, static, final]
[;, }, protected, final, SourceExcerptProvider, getSource, (, ), {, return, source, ;, }, private, static, final, Set, <, String, >]
[;, }, private, static, final, Set, <, String, >, SUPPORTED_COLOR_TERMINALS, =, ImmutableSet, ., of, (, "xterm", ,, "xterm-color", ,, "xterm-256color"]
[;, static, boolean, termSupportsColor, (, String, term, ), {, return, SUPPORTED_COLOR_TERMINALS, ., contains, (, term, ), ;, }, private, static]
[., of, (, "xterm", ,, "xterm-color", ,, "xterm-256color", ,, "screen-bce", ), ;, static, boolean, termSupportsColor, (, String, term, ), {]
[,, "xterm-color", ,, "xterm-256color", ,, "screen-bce", ), ;, static, boolean, termSupportsColor, (, String, term, ), {, return, SUPPORTED_COLOR_TERMINALS, ., contains]
[,, "xterm-256color", ,, "screen-bce", ), ;, static, boolean, termSupportsColor, (, String, term, ), {, return, SUPPORTED_COLOR_TERMINALS, ., contains, (, term]
[,, "screen-bce", ), ;, static, boolean, termSupportsColor, (, String, term, ), {, return, SUPPORTED_COLOR_TERMINALS, ., contains, (, term, ), ;]
[), ;, static, boolean, termSupportsColor, (, String, term, ), {, return, SUPPORTED_COLOR_TERMINALS, ., contains, (, term, ), ;, }, private]
[;, }, private, static, enum, Color, {, ERROR, (, "\033[31m", ), ,, WARNING, (, "\033[35m", ), ,, RESET, (, "\033[39m"]
[., contains, (, term, ), ;, }, private, static, enum, Color, {, ERROR, (, "\033[31m", ), ,, WARNING, (, "\033[35m"]
[), ;, }, private, static, enum, Color, {, ERROR, (, "\033[31m", ), ,, WARNING, (, "\033[35m", ), ,, RESET, (]
[=, controlCharacter, ;, }, public, String, getControlCharacter, (, ), {, return, controlCharacter, ;, }, }, String, getLevelName, (, CheckLevel, level]
[., controlCharacter, =, controlCharacter, ;, }, public, String, getControlCharacter, (, ), {, return, controlCharacter, ;, }, }, String, getLevelName, (]
[;, }, public, String, getControlCharacter, (, ), {, return, controlCharacter, ;, }, }, String, getLevelName, (, CheckLevel, level, ), {]
[;, }, }, String, getLevelName, (, CheckLevel, level, ), {, switch, (, level, ), {, case, ERROR, :, return, maybeColorize]
[), ,, WARNING, (, "\033[35m", ), ,, RESET, (, "\033[39m", ), ;, private, final, String, controlCharacter, ;, Color, (, String]
[), ,, RESET, (, "\033[39m", ), ;, private, final, String, controlCharacter, ;, Color, (, String, controlCharacter, ), {, this, .]
[), ;, private, final, String, controlCharacter, ;, Color, (, String, controlCharacter, ), {, this, ., controlCharacter, =, controlCharacter, ;, }]
[), {, case, ERROR, :, return, maybeColorize, (, "ERROR", ,, Color, ., ERROR, ), ;, case, WARNING, :, return, maybeColorize]
[:, return, maybeColorize, (, "ERROR", ,, Color, ., ERROR, ), ;, case, WARNING, :, return, maybeColorize, (, "WARNING", ,, Color]
[;, case, WARNING, :, return, maybeColorize, (, "WARNING", ,, Color, ., WARNING, ), ;, default, :, return, level, ., toString]
[,, Color, ., ERROR, ), ;, case, WARNING, :, return, maybeColorize, (, "WARNING", ,, Color, ., WARNING, ), ;, default]
[), ;, case, WARNING, :, return, maybeColorize, (, "WARNING", ,, Color, ., WARNING, ), ;, default, :, return, level, .]
[., ERROR, ), ;, case, WARNING, :, return, maybeColorize, (, "WARNING", ,, Color, ., WARNING, ), ;, default, :, return]
[:, return, maybeColorize, (, "WARNING", ,, Color, ., WARNING, ), ;, default, :, return, level, ., toString, (, ), ;]
[;, default, :, return, level, ., toString, (, ), ;, }, }, private, String, maybeColorize, (, String, text, ,, Color]
[,, Color, ., WARNING, ), ;, default, :, return, level, ., toString, (, ), ;, }, }, private, String, maybeColorize]
[), ;, default, :, return, level, ., toString, (, ), ;, }, }, private, String, maybeColorize, (, String, text, ,]
[., WARNING, ), ;, default, :, return, level, ., toString, (, ), ;, }, }, private, String, maybeColorize, (, String]
[;, }, }, private, String, maybeColorize, (, String, text, ,, Color, color, ), {, if, (, !, colorize, ), return]
[., toString, (, ), ;, }, }, private, String, maybeColorize, (, String, text, ,, Color, color, ), {, if, (]
[), return, text, ;, return, color, ., getControlCharacter, (, ), +, text, +, Color, ., RESET, ., getControlCharacter, (, )]
[), return, text, ;, return, color, ., getControlCharacter, (, ), +, text, +, Color, ., RESET, ., getControlCharacter, (, )]
[;, return, color, ., getControlCharacter, (, ), +, text, +, Color, ., RESET, ., getControlCharacter, (, ), ;, }, }]
[;, }, }]
[+, Color, ., RESET, ., getControlCharacter, (, ), ;, }, }]
[+, text, +, Color, ., RESET, ., getControlCharacter, (, ), ;, }, }]
[., getControlCharacter, (, ), +, text, +, Color, ., RESET, ., getControlCharacter, (, ), ;, }, }]
[+, Color, ., RESET, ., getControlCharacter, (, ), ;, }, }]
[;, }, }]
[., getControlCharacter, (, ), ;, }, }]
[., RESET, ., getControlCharacter, (, ), ;, }, }]
