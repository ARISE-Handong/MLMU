[=, compiler, ;, this, ., moduleGraph, =, compiler, ., getModuleGraph, (, ), ;, this, ., functionNames, =, functionNames, ;, this]
[., compiler, =, compiler, ;, this, ., moduleGraph, =, compiler, ., getModuleGraph, (, ), ;, this, ., functionNames, =, functionNames]
[;, this, ., moduleGraph, =, compiler, ., getModuleGraph, (, ), ;, this, ., functionNames, =, functionNames, ;, this, ., mapBuilder]
[=, compiler, ., getModuleGraph, (, ), ;, this, ., functionNames, =, functionNames, ;, this, ., mapBuilder, =, FunctionInformationMap, ., newBuilder]
[., moduleGraph, =, compiler, ., getModuleGraph, (, ), ;, this, ., functionNames, =, functionNames, ;, this, ., mapBuilder, =, FunctionInformationMap]
[;, this, ., functionNames, =, functionNames, ;, this, ., mapBuilder, =, FunctionInformationMap, ., newBuilder, (, ), ;, }, FunctionInformationMap, getMap]
[., getModuleGraph, (, ), ;, this, ., functionNames, =, functionNames, ;, this, ., mapBuilder, =, FunctionInformationMap, ., newBuilder, (, )]
[=, functionNames, ;, this, ., mapBuilder, =, FunctionInformationMap, ., newBuilder, (, ), ;, }, FunctionInformationMap, getMap, (, ), {, return]
[., functionNames, =, functionNames, ;, this, ., mapBuilder, =, FunctionInformationMap, ., newBuilder, (, ), ;, }, FunctionInformationMap, getMap, (, )]
[;, this, ., mapBuilder, =, FunctionInformationMap, ., newBuilder, (, ), ;, }, FunctionInformationMap, getMap, (, ), {, return, mapBuilder, .]
[=, FunctionInformationMap, ., newBuilder, (, ), ;, }, FunctionInformationMap, getMap, (, ), {, return, mapBuilder, ., build, (, ), ;]
[., mapBuilder, =, FunctionInformationMap, ., newBuilder, (, ), ;, }, FunctionInformationMap, getMap, (, ), {, return, mapBuilder, ., build, (]
[;, }, FunctionInformationMap, getMap, (, ), {, return, mapBuilder, ., build, (, ), ;, }, @, Override, public, void, process]
[., newBuilder, (, ), ;, }, FunctionInformationMap, getMap, (, ), {, return, mapBuilder, ., build, (, ), ;, }, @]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler]
[., build, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal]
[;, if, (, moduleGraph, ==, null, ), {, addModuleInformation, (, null, ), ;, }, else, {, TreeSet, <, JSModule, >]
[., traverse, (, compiler, ,, root, ,, this, ), ;, if, (, moduleGraph, ==, null, ), {, addModuleInformation, (, null]
[,, root, ,, this, ), ;, if, (, moduleGraph, ==, null, ), {, addModuleInformation, (, null, ), ;, }, else]
[,, this, ), ;, if, (, moduleGraph, ==, null, ), {, addModuleInformation, (, null, ), ;, }, else, {, TreeSet]
[), ;, if, (, moduleGraph, ==, null, ), {, addModuleInformation, (, null, ), ;, }, else, {, TreeSet, <, JSModule]
[), {, addModuleInformation, (, null, ), ;, }, else, {, TreeSet, <, JSModule, >, modules, =, Sets, ., newTreeSet, (]
[==, null, ), {, addModuleInformation, (, null, ), ;, }, else, {, TreeSet, <, JSModule, >, modules, =, Sets, .]
[), {, addModuleInformation, (, null, ), ;, }, else, {, TreeSet, <, JSModule, >, modules, =, Sets, ., newTreeSet, (]
[;, }, else, {, TreeSet, <, JSModule, >, modules, =, Sets, ., newTreeSet, (, new, Comparator, <, JSModule, >, (]
[), ;, }, else, {, TreeSet, <, JSModule, >, modules, =, Sets, ., newTreeSet, (, new, Comparator, <, JSModule, >]
[;, Iterables, ., addAll, (, modules, ,, moduleGraph, ., getAllModules, (, ), ), ;, for, (, JSModule, m, :, modules]
[., newTreeSet, (, new, Comparator, <, JSModule, >, (, ), {, @, Override, public, int, compare, (, JSModule, o1, ,]
[), ;, Iterables, ., addAll, (, modules, ,, moduleGraph, ., getAllModules, (, ), ), ;, for, (, JSModule, m, :]
[;, }, }, ), ;, Iterables, ., addAll, (, modules, ,, moduleGraph, ., getAllModules, (, ), ), ;, for, (]
[., compareTo, (, o2, ., getName, (, ), ), ;, }, }, ), ;, Iterables, ., addAll, (, modules, ,]
[., getName, (, ), ., compareTo, (, o2, ., getName, (, ), ), ;, }, }, ), ;, Iterables, .]
[), ;, }, }, ), ;, Iterables, ., addAll, (, modules, ,, moduleGraph, ., getAllModules, (, ), ), ;, for]
[., getName, (, ), ), ;, }, }, ), ;, Iterables, ., addAll, (, modules, ,, moduleGraph, ., getAllModules, (]
[;, for, (, JSModule, m, :, modules, ), {, addModuleInformation, (, m, ), ;, }, }, }, @, Override, public]
[., addAll, (, modules, ,, moduleGraph, ., getAllModules, (, ), ), ;, for, (, JSModule, m, :, modules, ), {]
[,, moduleGraph, ., getAllModules, (, ), ), ;, for, (, JSModule, m, :, modules, ), {, addModuleInformation, (, m, )]
[), ;, for, (, JSModule, m, :, modules, ), {, addModuleInformation, (, m, ), ;, }, }, }, @, Override]
[., getAllModules, (, ), ), ;, for, (, JSModule, m, :, modules, ), {, addModuleInformation, (, m, ), ;, }]
[), {, addModuleInformation, (, m, ), ;, }, }, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node]
[;, }, }, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {]
[), ;, }, }, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, )]
[), {, return, ;, }, int, id, =, functionNames, ., getFunctionId, (, n, ), ;, if, (, id, <, 0]
[), {, return, ;, }, int, id, =, functionNames, ., getFunctionId, (, n, ), ;, if, (, id, <, 0]
[., isFunction, (, ), ), {, return, ;, }, int, id, =, functionNames, ., getFunctionId, (, n, ), ;, if]
[;, if, (, id, <, 0, ), {, return, ;, }, String, compiledSource, =, compiler, ., toSource, (, n, )]
[., getFunctionId, (, n, ), ;, if, (, id, <, 0, ), {, return, ;, }, String, compiledSource, =, compiler]
[), ;, if, (, id, <, 0, ), {, return, ;, }, String, compiledSource, =, compiler, ., toSource, (, n]
[), {, return, ;, }, String, compiledSource, =, compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, .]
[<, 0, ), {, return, ;, }, String, compiledSource, =, compiler, ., toSource, (, n, ), ;, JSModule, module, =]
[), {, return, ;, }, String, compiledSource, =, compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, .]
[;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (, FunctionInformationMap, ., Entry, ., newBuilder, (]
[., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (, FunctionInformationMap]
[), ;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (, FunctionInformationMap, ., Entry, ., newBuilder]
[;, mapBuilder, ., addEntry, (, FunctionInformationMap, ., Entry, ., newBuilder, (, ), ., setId, (, id, ), ., setSourceName, (]
[., getModule, (, ), ;, mapBuilder, ., addEntry, (, FunctionInformationMap, ., Entry, ., newBuilder, (, ), ., setId, (, id]
[;, }, private, void, addModuleInformation, (, JSModule, module, ), {, String, name, ;, String, source, ;, if, (, module, !=]
[., addEntry, (, FunctionInformationMap, ., Entry, ., newBuilder, (, ), ., setId, (, id, ), ., setSourceName, (, NodeUtil, .]
[), ;, }, private, void, addModuleInformation, (, JSModule, module, ), {, String, name, ;, String, source, ;, if, (, module]
[., build, (, ), ), ;, }, private, void, addModuleInformation, (, JSModule, module, ), {, String, name, ;, String, source]
[., setCompiledSource, (, compiledSource, ), ., build, (, ), ), ;, }, private, void, addModuleInformation, (, JSModule, module, ), {]
[., setName, (, functionNames, ., getFunctionName, (, n, ), ), ., setCompiledSource, (, compiledSource, ), ., build, (, ), )]
[., setSize, (, compiledSource, ., length, (, ), ), ., setName, (, functionNames, ., getFunctionName, (, n, ), ), .]
[., setModuleName, (, moduleGraph, ==, null, ?, "", :, module, ., getName, (, ), ), ., setSize, (, compiledSource, .]
[., setLineNumber, (, n, ., getLineno, (, ), ), ., setModuleName, (, moduleGraph, ==, null, ?, "", :, module, .]
[., setSourceName, (, NodeUtil, ., getSourceName, (, n, ), ), ., setLineNumber, (, n, ., getLineno, (, ), ), .]
[., setId, (, id, ), ., setSourceName, (, NodeUtil, ., getSourceName, (, n, ), ), ., setLineNumber, (, n, .]
[., newBuilder, (, ), ., setId, (, id, ), ., setSourceName, (, NodeUtil, ., getSourceName, (, n, ), ), .]
[., Entry, ., newBuilder, (, ), ., setId, (, id, ), ., setSourceName, (, NodeUtil, ., getSourceName, (, n, )]
[), ., setSourceName, (, NodeUtil, ., getSourceName, (, n, ), ), ., setLineNumber, (, n, ., getLineno, (, ), )]
[), ., setLineNumber, (, n, ., getLineno, (, ), ), ., setModuleName, (, moduleGraph, ==, null, ?, "", :, module]
[., getSourceName, (, n, ), ), ., setLineNumber, (, n, ., getLineno, (, ), ), ., setModuleName, (, moduleGraph, ==]
[), ), ., setLineNumber, (, n, ., getLineno, (, ), ), ., setModuleName, (, moduleGraph, ==, null, ?, "", :]
[), ., setModuleName, (, moduleGraph, ==, null, ?, "", :, module, ., getName, (, ), ), ., setSize, (, compiledSource]
[., getLineno, (, ), ), ., setModuleName, (, moduleGraph, ==, null, ?, "", :, module, ., getName, (, ), )]
[), ., setSize, (, compiledSource, ., length, (, ), ), ., setName, (, functionNames, ., getFunctionName, (, n, ), )]
[?, "", :, module, ., getName, (, ), ), ., setSize, (, compiledSource, ., length, (, ), ), ., setName]
[==, null, ?, "", :, module, ., getName, (, ), ), ., setSize, (, compiledSource, ., length, (, ), )]
[?, "", :, module, ., getName, (, ), ), ., setSize, (, compiledSource, ., length, (, ), ), ., setName]
[:, module, ., getName, (, ), ), ., setSize, (, compiledSource, ., length, (, ), ), ., setName, (, functionNames]
[), ., setSize, (, compiledSource, ., length, (, ), ), ., setName, (, functionNames, ., getFunctionName, (, n, ), )]
[., getName, (, ), ), ., setSize, (, compiledSource, ., length, (, ), ), ., setName, (, functionNames, ., getFunctionName]
[), ., setName, (, functionNames, ., getFunctionName, (, n, ), ), ., setCompiledSource, (, compiledSource, ), ., build, (, )]
[., length, (, ), ), ., setName, (, functionNames, ., getFunctionName, (, n, ), ), ., setCompiledSource, (, compiledSource, )]
[), ., setCompiledSource, (, compiledSource, ), ., build, (, ), ), ;, }, private, void, addModuleInformation, (, JSModule, module, )]
[., getFunctionName, (, n, ), ), ., setCompiledSource, (, compiledSource, ), ., build, (, ), ), ;, }, private, void]
[), ), ., setCompiledSource, (, compiledSource, ), ., build, (, ), ), ;, }, private, void, addModuleInformation, (, JSModule, module]
[), ., build, (, ), ), ;, }, private, void, addModuleInformation, (, JSModule, module, ), {, String, name, ;, String]
[), {, name, =, module, ., getName, (, ), ;, source, =, compiler, ., toSource, (, module, ), ;, }]
[!=, null, ), {, name, =, module, ., getName, (, ), ;, source, =, compiler, ., toSource, (, module, )]
[), {, name, =, module, ., getName, (, ), ;, source, =, compiler, ., toSource, (, module, ), ;, }]
[=, module, ., getName, (, ), ;, source, =, compiler, ., toSource, (, module, ), ;, }, else, {, name]
[;, source, =, compiler, ., toSource, (, module, ), ;, }, else, {, name, =, "", ;, source, =, compiler]
[., getName, (, ), ;, source, =, compiler, ., toSource, (, module, ), ;, }, else, {, name, =, ""]
[=, compiler, ., toSource, (, module, ), ;, }, else, {, name, =, "", ;, source, =, compiler, ., toSource]
[;, }, else, {, name, =, "", ;, source, =, compiler, ., toSource, (, ), ;, }, mapBuilder, ., addModule]
[., toSource, (, module, ), ;, }, else, {, name, =, "", ;, source, =, compiler, ., toSource, (, )]
[), ;, }, else, {, name, =, "", ;, source, =, compiler, ., toSource, (, ), ;, }, mapBuilder, .]
[=, "", ;, source, =, compiler, ., toSource, (, ), ;, }, mapBuilder, ., addModule, (, FunctionInformationMap, ., Module, .]
[;, source, =, compiler, ., toSource, (, ), ;, }, mapBuilder, ., addModule, (, FunctionInformationMap, ., Module, ., newBuilder, (]
[=, compiler, ., toSource, (, ), ;, }, mapBuilder, ., addModule, (, FunctionInformationMap, ., Module, ., newBuilder, (, ), .]
[;, }, mapBuilder, ., addModule, (, FunctionInformationMap, ., Module, ., newBuilder, (, ), ., setName, (, name, ), ., setCompiledSource]
[., toSource, (, ), ;, }, mapBuilder, ., addModule, (, FunctionInformationMap, ., Module, ., newBuilder, (, ), ., setName, (]
[;, }, }]
[., addModule, (, FunctionInformationMap, ., Module, ., newBuilder, (, ), ., setName, (, name, ), ., setCompiledSource, (, source, )]
[), ;, }, }]
[., build, (, ), ), ;, }, }]
[., setCompiledSource, (, source, ), ., build, (, ), ), ;, }, }]
[., setName, (, name, ), ., setCompiledSource, (, source, ), ., build, (, ), ), ;, }, }]
[., newBuilder, (, ), ., setName, (, name, ), ., setCompiledSource, (, source, ), ., build, (, ), ), ;]
[., Module, ., newBuilder, (, ), ., setName, (, name, ), ., setCompiledSource, (, source, ), ., build, (, )]
[), ., setCompiledSource, (, source, ), ., build, (, ), ), ;, }, }]
[), ., build, (, ), ), ;, }, }]
