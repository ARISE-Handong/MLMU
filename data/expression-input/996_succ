[;, static, class, Mapping, {, int, id, =, UNMAPPED, ;, String, sourceFile, ;, FilePosition, originalPosition, ;, FilePosition, startPosition, ;, FilePosition]
[;, static, class, Mapping, {, int, id, =, UNMAPPED, ;, String, sourceFile, ;, FilePosition, originalPosition, ;, FilePosition, startPosition, ;, FilePosition]
[;, String, sourceFile, ;, FilePosition, originalPosition, ;, FilePosition, startPosition, ;, FilePosition, endPosition, ;, String, originalName, ;, boolean, used, =, false]
[;, }, private, class, MappingWriter, {, private, String, lastSourceFile, =, null, ;, private, String, lastSourceFileEscaped, =, null, ;, private, int]
[;, private, String, lastSourceFileEscaped, =, null, ;, private, int, lastLine, =, 0, ;, private, String, lastLineString, =, String, ., valueOf]
[;, private, int, lastLine, =, 0, ;, private, String, lastLineString, =, String, ., valueOf, (, 0, ), ;, private, void]
[;, private, String, lastLineString, =, String, ., valueOf, (, 0, ), ;, private, void, appendMappingTo, (, Mapping, m, ,, Appendable]
[;, private, void, appendMappingTo, (, Mapping, m, ,, Appendable, out, ), throws, IOException, {, out, ., append, (, "[", )]
[., valueOf, (, 0, ), ;, private, void, appendMappingTo, (, Mapping, m, ,, Appendable, out, ), throws, IOException, {, out]
[), ;, private, void, appendMappingTo, (, Mapping, m, ,, Appendable, out, ), throws, IOException, {, out, ., append, (, "["]
[;, String, sourceFile, =, m, ., sourceFile, ;, String, escapedSourceFile, ;, if, (, lastSourceFile, !=, sourceFile, ), {, lastSourceFile, =]
[., append, (, "[", ), ;, String, sourceFile, =, m, ., sourceFile, ;, String, escapedSourceFile, ;, if, (, lastSourceFile, !=]
[), ;, String, sourceFile, =, m, ., sourceFile, ;, String, escapedSourceFile, ;, if, (, lastSourceFile, !=, sourceFile, ), {, lastSourceFile]
[;, String, escapedSourceFile, ;, if, (, lastSourceFile, !=, sourceFile, ), {, lastSourceFile, =, sourceFile, ;, lastSourceFileEscaped, =, escapeString, (, sourceFile]
[., sourceFile, ;, String, escapedSourceFile, ;, if, (, lastSourceFile, !=, sourceFile, ), {, lastSourceFile, =, sourceFile, ;, lastSourceFileEscaped, =, escapeString]
[), {, lastSourceFile, =, sourceFile, ;, lastSourceFileEscaped, =, escapeString, (, sourceFile, ), ;, }, escapedSourceFile, =, lastSourceFileEscaped, ;, out, .]
[!=, sourceFile, ), {, lastSourceFile, =, sourceFile, ;, lastSourceFileEscaped, =, escapeString, (, sourceFile, ), ;, }, escapedSourceFile, =, lastSourceFileEscaped, ;]
[), {, lastSourceFile, =, sourceFile, ;, lastSourceFileEscaped, =, escapeString, (, sourceFile, ), ;, }, escapedSourceFile, =, lastSourceFileEscaped, ;, out, .]
[=, sourceFile, ;, lastSourceFileEscaped, =, escapeString, (, sourceFile, ), ;, }, escapedSourceFile, =, lastSourceFileEscaped, ;, out, ., append, (, escapedSourceFile]
[;, lastSourceFileEscaped, =, escapeString, (, sourceFile, ), ;, }, escapedSourceFile, =, lastSourceFileEscaped, ;, out, ., append, (, escapedSourceFile, ), ;]
[=, escapeString, (, sourceFile, ), ;, }, escapedSourceFile, =, lastSourceFileEscaped, ;, out, ., append, (, escapedSourceFile, ), ;, out, .]
[;, }, escapedSourceFile, =, lastSourceFileEscaped, ;, out, ., append, (, escapedSourceFile, ), ;, out, ., append, (, ",", ), ;]
[), ;, }, escapedSourceFile, =, lastSourceFileEscaped, ;, out, ., append, (, escapedSourceFile, ), ;, out, ., append, (, ",", )]
[=, lastSourceFileEscaped, ;, out, ., append, (, escapedSourceFile, ), ;, out, ., append, (, ",", ), ;, int, line, =]
[;, out, ., append, (, escapedSourceFile, ), ;, out, ., append, (, ",", ), ;, int, line, =, m, .]
[;, out, ., append, (, ",", ), ;, int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if]
[., append, (, escapedSourceFile, ), ;, out, ., append, (, ",", ), ;, int, line, =, m, ., originalPosition, .]
[), ;, out, ., append, (, ",", ), ;, int, line, =, m, ., originalPosition, ., getLine, (, ), ;]
[;, int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (, line, !=, lastLine, ), {, lastLineString]
[., append, (, ",", ), ;, int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (, line]
[), ;, int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (, line, !=, lastLine, ), {]
[;, if, (, line, !=, lastLine, ), {, lastLineString, =, String, ., valueOf, (, line, ), ;, }, String, lineValue]
[., getLine, (, ), ;, if, (, line, !=, lastLine, ), {, lastLineString, =, String, ., valueOf, (, line, )]
[., originalPosition, ., getLine, (, ), ;, if, (, line, !=, lastLine, ), {, lastLineString, =, String, ., valueOf, (]
[), {, lastLineString, =, String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;, out, ., append]
[!=, lastLine, ), {, lastLineString, =, String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;, out]
[), {, lastLineString, =, String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;, out, ., append]
[=, String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, )]
[;, }, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, ), ;, out, ., append, (, ",", )]
[., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, ), ;, out]
[), ;, }, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, ), ;, out, ., append, (, ","]
[;, out, ., append, (, lineValue, ), ;, out, ., append, (, ",", ), ;, out, ., append, (, String]
[;, out, ., append, (, ",", ), ;, out, ., append, (, String, ., valueOf, (, m, ., originalPosition, .]
[., append, (, lineValue, ), ;, out, ., append, (, ",", ), ;, out, ., append, (, String, ., valueOf]
[), ;, out, ., append, (, ",", ), ;, out, ., append, (, String, ., valueOf, (, m, ., originalPosition]
[;, out, ., append, (, String, ., valueOf, (, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if]
[., append, (, ",", ), ;, out, ., append, (, String, ., valueOf, (, m, ., originalPosition, ., getColumn, (]
[), ;, out, ., append, (, String, ., valueOf, (, m, ., originalPosition, ., getColumn, (, ), ), ), ;]
[;, if, (, m, ., originalName, !=, null, ), {, out, ., append, (, ",", ), ;, out, ., append]
[., append, (, String, ., valueOf, (, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (, m]
[), ;, if, (, m, ., originalName, !=, null, ), {, out, ., append, (, ",", ), ;, out, .]
[., valueOf, (, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (, m, ., originalName, !=, null]
[), ), ;, if, (, m, ., originalName, !=, null, ), {, out, ., append, (, ",", ), ;, out]
[., getColumn, (, ), ), ), ;, if, (, m, ., originalName, !=, null, ), {, out, ., append, (]
[., originalPosition, ., getColumn, (, ), ), ), ;, if, (, m, ., originalName, !=, null, ), {, out, .]
[), {, out, ., append, (, ",", ), ;, out, ., append, (, escapeString, (, m, ., originalName, ), )]
[!=, null, ), {, out, ., append, (, ",", ), ;, out, ., append, (, escapeString, (, m, ., originalName]
[., originalName, !=, null, ), {, out, ., append, (, ",", ), ;, out, ., append, (, escapeString, (, m]
[), {, out, ., append, (, ",", ), ;, out, ., append, (, escapeString, (, m, ., originalName, ), )]
[;, out, ., append, (, escapeString, (, m, ., originalName, ), ), ;, }, out, ., append, (, "]\n", )]
[., append, (, ",", ), ;, out, ., append, (, escapeString, (, m, ., originalName, ), ), ;, }, out]
[), ;, out, ., append, (, escapeString, (, m, ., originalName, ), ), ;, }, out, ., append, (, "]\n"]
[;, }, out, ., append, (, "]\n", ), ;, }, void, appendMappings, (, Appendable, out, ), throws, IOException, {, for]
[., append, (, escapeString, (, m, ., originalName, ), ), ;, }, out, ., append, (, "]\n", ), ;, }]
[), ;, }, out, ., append, (, "]\n", ), ;, }, void, appendMappings, (, Appendable, out, ), throws, IOException, {]
[), ), ;, }, out, ., append, (, "]\n", ), ;, }, void, appendMappings, (, Appendable, out, ), throws, IOException]
[., originalName, ), ), ;, }, out, ., append, (, "]\n", ), ;, }, void, appendMappings, (, Appendable, out, )]
[;, }, void, appendMappings, (, Appendable, out, ), throws, IOException, {, for, (, Mapping, m, :, mappings, ), {, if]
[., append, (, "]\n", ), ;, }, void, appendMappings, (, Appendable, out, ), throws, IOException, {, for, (, Mapping, m]
[), ;, }, void, appendMappings, (, Appendable, out, ), throws, IOException, {, for, (, Mapping, m, :, mappings, ), {]
[), {, if, (, m, ., used, ), {, appendMappingTo, (, m, ,, out, ), ;, }, }, }, }]
[), {, appendMappingTo, (, m, ,, out, ), ;, }, }, }, }, private, List, <, Mapping, >, mappings, =]
[., used, ), {, appendMappingTo, (, m, ,, out, ), ;, }, }, }, }, private, List, <, Mapping, >]
[;, }, }, }, }, private, List, <, Mapping, >, mappings, =, Lists, ., newArrayList, (, ), ;, private, Mapping]
[,, out, ), ;, }, }, }, }, private, List, <, Mapping, >, mappings, =, Lists, ., newArrayList, (, )]
[), ;, }, }, }, }, private, List, <, Mapping, >, mappings, =, Lists, ., newArrayList, (, ), ;, private]
[;, private, Mapping, lastMapping, ;, private, FilePosition, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, FilePosition, prefixPosition]
[., newArrayList, (, ), ;, private, Mapping, lastMapping, ;, private, FilePosition, offsetPosition, =, new, FilePosition, (, 0, ,, 0, )]
[;, private, FilePosition, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, static, String, escapeString, (, String, value]
[,, 0, ), ;, private, FilePosition, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, static, String, escapeString]
[), ;, private, FilePosition, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, static, String, escapeString, (, String]
[;, private, static, String, escapeString, (, String, value, ), {, return, Util, ., escapeString, (, value, ), ;, }, @]
[,, 0, ), ;, private, static, String, escapeString, (, String, value, ), {, return, Util, ., escapeString, (, value, )]
[), ;, private, static, String, escapeString, (, String, value, ), {, return, Util, ., escapeString, (, value, ), ;, }]
[;, }, @, Override, public, void, addMapping, (, String, sourceName, ,, @, Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition]
[., escapeString, (, value, ), ;, }, @, Override, public, void, addMapping, (, String, sourceName, ,, @, Nullable, String, symbolName]
[), ;, }, @, Override, public, void, addMapping, (, String, sourceName, ,, @, Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,]
[), {, return, ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName, ;, mapping]
[||, sourceStartPosition, ., getLine, (, ), <, 0, ), {, return, ;, }, Mapping, mapping, =, new, Mapping, (, )]
[==, null, ||, sourceStartPosition, ., getLine, (, ), <, 0, ), {, return, ;, }, Mapping, mapping, =, new, Mapping]
[||, sourceStartPosition, ., getLine, (, ), <, 0, ), {, return, ;, }, Mapping, mapping, =, new, Mapping, (, )]
[), {, return, ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName, ;, mapping]
[<, 0, ), {, return, ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName]
[., getLine, (, ), <, 0, ), {, return, ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping]
[), {, return, ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName, ;, mapping]
[;, mapping, ., sourceFile, =, sourceName, ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if]
[=, sourceName, ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if, (, offsetPosition, ., getLine]
[., sourceFile, =, sourceName, ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if, (, offsetPosition]
[;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if, (, offsetPosition, ., getLine, (, )]
[=, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if, (, offsetPosition, ., getLine, (, ), ==, 0, &&, offsetPosition]
[., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if, (, offsetPosition, ., getLine, (, ), ==, 0]
[;, mapping, ., originalName, =, symbolName, ;, if, (, offsetPosition, ., getLine, (, ), ==, 0, &&, offsetPosition, ., getColumn]
[=, symbolName, ;, if, (, offsetPosition, ., getLine, (, ), ==, 0, &&, offsetPosition, ., getColumn, (, ), ==, 0]
[., originalName, =, symbolName, ;, if, (, offsetPosition, ., getLine, (, ), ==, 0, &&, offsetPosition, ., getColumn, (, )]
[;, if, (, offsetPosition, ., getLine, (, ), ==, 0, &&, offsetPosition, ., getColumn, (, ), ==, 0, ), {]
[), {, mapping, ., startPosition, =, startPosition, ;, mapping, ., endPosition, =, endPosition, ;, }, else, {, int, offsetLine, =]
[&&, offsetPosition, ., getColumn, (, ), ==, 0, ), {, mapping, ., startPosition, =, startPosition, ;, mapping, ., endPosition, =]
[==, 0, &&, offsetPosition, ., getColumn, (, ), ==, 0, ), {, mapping, ., startPosition, =, startPosition, ;, mapping, .]
[., getLine, (, ), ==, 0, &&, offsetPosition, ., getColumn, (, ), ==, 0, ), {, mapping, ., startPosition, =]
[&&, offsetPosition, ., getColumn, (, ), ==, 0, ), {, mapping, ., startPosition, =, startPosition, ;, mapping, ., endPosition, =]
[), {, mapping, ., startPosition, =, startPosition, ;, mapping, ., endPosition, =, endPosition, ;, }, else, {, int, offsetLine, =]
[==, 0, ), {, mapping, ., startPosition, =, startPosition, ;, mapping, ., endPosition, =, endPosition, ;, }, else, {, int]
[., getColumn, (, ), ==, 0, ), {, mapping, ., startPosition, =, startPosition, ;, mapping, ., endPosition, =, endPosition, ;]
[), {, mapping, ., startPosition, =, startPosition, ;, mapping, ., endPosition, =, endPosition, ;, }, else, {, int, offsetLine, =]
[=, startPosition, ;, mapping, ., endPosition, =, endPosition, ;, }, else, {, int, offsetLine, =, offsetPosition, ., getLine, (, )]
[., startPosition, =, startPosition, ;, mapping, ., endPosition, =, endPosition, ;, }, else, {, int, offsetLine, =, offsetPosition, ., getLine]
[;, mapping, ., endPosition, =, endPosition, ;, }, else, {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int]
[=, endPosition, ;, }, else, {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =, offsetPosition, .]
[., endPosition, =, endPosition, ;, }, else, {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =]
[;, }, else, {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =, offsetPosition, ., getColumn, (]
[;, int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if]
[., getLine, (, ), ;, int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn]
[;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (, startPosition, ., getLine, (, ), >, 0, )]
[., getColumn, (, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (, startPosition, ., getLine, (]
[;, if, (, startPosition, ., getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition]
[., getColumn, (, ), ;, if, (, startPosition, ., getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;]
[), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =]
[>, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {]
[., getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, )]
[), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =]
[=, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }]
[;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }, mapping, .]
[), {, endOffsetPosition, =, 0, ;, }, mapping, ., startPosition, =, new, FilePosition, (, startPosition, ., getLine, (, ), +]
[>, 0, ), {, endOffsetPosition, =, 0, ;, }, mapping, ., startPosition, =, new, FilePosition, (, startPosition, ., getLine, (]
[., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }, mapping, ., startPosition, =, new, FilePosition, (]
[), {, endOffsetPosition, =, 0, ;, }, mapping, ., startPosition, =, new, FilePosition, (, startPosition, ., getLine, (, ), +]
[=, 0, ;, }, mapping, ., startPosition, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,, startPosition]
[;, }, mapping, ., startPosition, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn]
[=, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, )]
[., startPosition, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +]
[;, mapping, ., endPosition, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (]
[,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, mapping, ., endPosition, =, new, FilePosition, (, endPosition, ., getLine]
[+, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, mapping, ., endPosition, =, new, FilePosition, (, endPosition]
[., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, mapping, ., endPosition, =]
[,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, mapping, ., endPosition, =, new, FilePosition, (, endPosition, ., getLine]
[), ;, mapping, ., endPosition, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn]
[+, startOffsetPosition, ), ;, mapping, ., endPosition, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition]
[., getColumn, (, ), +, startOffsetPosition, ), ;, mapping, ., endPosition, =, new, FilePosition, (, endPosition, ., getLine, (, )]
[), ;, mapping, ., endPosition, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn]
[=, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, ), +, endOffsetPosition, )]
[., endPosition, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, ), +]
[;, }, if, (, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;]
[,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, if, (, lastMapping, !=, null, ), {, int, lastLine]
[+, offsetLine, ,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, if, (, lastMapping, !=, null, ), {]
[., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, if, (, lastMapping]
[,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, if, (, lastMapping, !=, null, ), {, int, lastLine]
[), ;, }, if, (, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, )]
[+, endOffsetPosition, ), ;, }, if, (, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine]
[., getColumn, (, ), +, endOffsetPosition, ), ;, }, if, (, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping]
[), ;, }, if, (, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, )]
[), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, .]
[!=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, .]
[), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, .]
[;, int, lastColumn, =, lastMapping, ., startPosition, ., getColumn, (, ), ;, int, nextLine, =, mapping, ., startPosition, ., getLine]
[., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, ., getColumn, (, ), ;, int, nextLine, =, mapping]
[., startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, ., getColumn, (, ), ;, int, nextLine]
[;, int, nextLine, =, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn]
[., getColumn, (, ), ;, int, nextLine, =, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =, mapping]
[., startPosition, ., getColumn, (, ), ;, int, nextLine, =, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn]
[;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||]
[., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (]
[., startPosition, ., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, .]
[;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n"]
[., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=]
[., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&]
[;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping, ), ;, }, @, Override, public, void, setWrapperPrefix, (]
[., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s"]
[,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings]
[||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine]
[>, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn]
[||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine]
[,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings]
[), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;]
[&&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }]
[==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, )]
[&&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }]
[), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;]
[>=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =]
[), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;]
[,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping]
[+, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add]
[,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping]
[,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping, ), ;]
[,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping, ), ;, }, @]
[,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping, ), ;, }, @, Override, public]
[), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping, ), ;, }, @, Override, public, void, setWrapperPrefix]
[=, mapping, ;, mappings, ., add, (, mapping, ), ;, }, @, Override, public, void, setWrapperPrefix, (, String, prefix, )]
[;, mappings, ., add, (, mapping, ), ;, }, @, Override, public, void, setWrapperPrefix, (, String, prefix, ), {, int]
[;, }, @, Override, public, void, setWrapperPrefix, (, String, prefix, ), {, int, prefixLine, =, 0, ;, int, prefixIndex, =]
[., add, (, mapping, ), ;, }, @, Override, public, void, setWrapperPrefix, (, String, prefix, ), {, int, prefixLine, =]
[), ;, }, @, Override, public, void, setWrapperPrefix, (, String, prefix, ), {, int, prefixLine, =, 0, ;, int, prefixIndex]
[;, int, prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;, i, <, prefix, ., length, (, )]
[;, for, (, int, i, =, 0, ;, i, <, prefix, ., length, (, ), ;, ++, i, ), {]
[;, i, <, prefix, ., length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (, i]
[;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;]
[<, prefix, ., length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==]
[;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;]
[., length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', )]
[), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0]
[), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0]
[), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new]
[==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition]
[., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex]
[), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }]
[), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new]
[;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine, ,]
[++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine]
[=, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine, ,, prefixIndex, )]
[;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine, ,, prefixIndex, ), ;, }]
[;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine, ,, prefixIndex, ), ;, }, @, Override, public, void, setStartingPosition, (]
[++, ;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine, ,, prefixIndex, ), ;, }, @, Override, public, void, setStartingPosition]
[=, new, FilePosition, (, prefixLine, ,, prefixIndex, ), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int]
[;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine]
[,, prefixIndex, ), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, .]
[), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (]
[;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;]
[., checkState, (, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new]
[), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, )]
[>=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,]
[), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, )]
[;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @, Override, public, void, reset, (, ), {]
[., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @]
[), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @, Override, public, void, reset, (, )]
[>=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @, Override, public, void, reset]
[), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @, Override, public, void, reset, (, )]
[=, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @, Override, public, void, reset, (, ), {, mappings, =]
[;, }, @, Override, public, void, reset, (, ), {, mappings, =, Lists, ., newArrayList, (, ), ;, lastMapping, =]
[,, offsetIndex, ), ;, }, @, Override, public, void, reset, (, ), {, mappings, =, Lists, ., newArrayList, (, )]
[), ;, }, @, Override, public, void, reset, (, ), {, mappings, =, Lists, ., newArrayList, (, ), ;, lastMapping]
[=, Lists, ., newArrayList, (, ), ;, lastMapping, =, null, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, )]
[;, lastMapping, =, null, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =, new, FilePosition, (]
[., newArrayList, (, ), ;, lastMapping, =, null, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition]
[=, null, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =, new, FilePosition, (, 0, ,]
[;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =, new, FilePosition, (, 0, ,, 0, )]
[=, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, }]
[;, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, }, @, Override, public, void, appendTo, (, Appendable, out]
[,, 0, ), ;, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, }, @, Override, public, void, appendTo]
[), ;, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, }, @, Override, public, void, appendTo, (, Appendable]
[=, new, FilePosition, (, 0, ,, 0, ), ;, }, @, Override, public, void, appendTo, (, Appendable, out, ,, String]
[;, }, @, Override, public, void, appendTo, (, Appendable, out, ,, String, name, ), throws, IOException, {, int, maxLine, =]
[,, 0, ), ;, }, @, Override, public, void, appendTo, (, Appendable, out, ,, String, name, ), throws, IOException, {]
[), ;, }, @, Override, public, void, appendTo, (, Appendable, out, ,, String, name, ), throws, IOException, {, int, maxLine]
[;, out, ., append, (, "/** Begin line maps. **/{ \"file\" : ", ), ;, out, ., append, (, escapeString, (, name, ), ), ;, out, .]
[;, out, ., append, (, escapeString, (, name, ), ), ;, out, ., append, (, ", \"count\": ", ), ;, out, .]
[., append, (, "/** Begin line maps. **/{ \"file\" : ", ), ;, out, ., append, (, escapeString, (, name, ), ), ;, out, ., append, (]
[), ;, out, ., append, (, escapeString, (, name, ), ), ;, out, ., append, (, ", \"count\": ", ), ;, out]
[;, out, ., append, (, ", \"count\": ", ), ;, out, ., append, (, String, ., valueOf, (, maxLine, +, 1, )]
[., append, (, escapeString, (, name, ), ), ;, out, ., append, (, ", \"count\": ", ), ;, out, ., append, (]
[), ;, out, ., append, (, ", \"count\": ", ), ;, out, ., append, (, String, ., valueOf, (, maxLine, +, 1]
[), ), ;, out, ., append, (, ", \"count\": ", ), ;, out, ., append, (, String, ., valueOf, (, maxLine, +]
[;, out, ., append, (, String, ., valueOf, (, maxLine, +, 1, ), ), ;, out, ., append, (, " }\n"]
[., append, (, ", \"count\": ", ), ;, out, ., append, (, String, ., valueOf, (, maxLine, +, 1, ), ), ;]
[), ;, out, ., append, (, String, ., valueOf, (, maxLine, +, 1, ), ), ;, out, ., append, (]
[;, out, ., append, (, " }\n", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;]
[., append, (, String, ., valueOf, (, maxLine, +, 1, ), ), ;, out, ., append, (, " }\n", ), ;]
[), ;, out, ., append, (, " }\n", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, )]
[., valueOf, (, maxLine, +, 1, ), ), ;, out, ., append, (, " }\n", ), ;, (, new, LineMapper, (]
[), ), ;, out, ., append, (, " }\n", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (]
[+, 1, ), ), ;, out, ., append, (, " }\n", ), ;, (, new, LineMapper, (, out, ), ), .]
[), ), ;, out, ., append, (, " }\n", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (]
[;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;, out, ., append, (, "/** Begin file information. **/\n", ), ;]
[., append, (, " }\n", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;, out, .]
[), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;, out, ., append, (, "/** Begin file information. **/\n", )]
[;, out, ., append, (, "/** Begin file information. **/\n", ), ;, for, (, int, i, =, 0, ;, i, <=, maxLine, ;, ++]
[., appendLineMappings, (, ), ;, out, ., append, (, "/** Begin file information. **/\n", ), ;, for, (, int, i, =, 0, ;, i]
[), ., appendLineMappings, (, ), ;, out, ., append, (, "/** Begin file information. **/\n", ), ;, for, (, int, i, =, 0, ;]
[), ), ., appendLineMappings, (, ), ;, out, ., append, (, "/** Begin file information. **/\n", ), ;, for, (, int, i, =, 0]
[;, for, (, int, i, =, 0, ;, i, <=, maxLine, ;, ++, i, ), {, out, ., append, (]
[., append, (, "/** Begin file information. **/\n", ), ;, for, (, int, i, =, 0, ;, i, <=, maxLine, ;, ++, i, )]
[), ;, for, (, int, i, =, 0, ;, i, <=, maxLine, ;, ++, i, ), {, out, ., append]
[;, i, <=, maxLine, ;, ++, i, ), {, out, ., append, (, "[]\n", ), ;, }, out, ., append]
[;, ++, i, ), {, out, ., append, (, "[]\n", ), ;, }, out, ., append, (, "/** Begin mapping definitions. **/\n", ), ;]
[<=, maxLine, ;, ++, i, ), {, out, ., append, (, "[]\n", ), ;, }, out, ., append, (, "/** Begin mapping definitions. **/\n"]
[;, ++, i, ), {, out, ., append, (, "[]\n", ), ;, }, out, ., append, (, "/** Begin mapping definitions. **/\n", ), ;]
[), {, out, ., append, (, "[]\n", ), ;, }, out, ., append, (, "/** Begin mapping definitions. **/\n", ), ;, (, new, MappingWriter]
[), {, out, ., append, (, "[]\n", ), ;, }, out, ., append, (, "/** Begin mapping definitions. **/\n", ), ;, (, new, MappingWriter]
[;, }, out, ., append, (, "/** Begin mapping definitions. **/\n", ), ;, (, new, MappingWriter, (, ), ), ., appendMappings, (, out, )]
[., append, (, "[]\n", ), ;, }, out, ., append, (, "/** Begin mapping definitions. **/\n", ), ;, (, new, MappingWriter, (, ), )]
[), ;, }, out, ., append, (, "/** Begin mapping definitions. **/\n", ), ;, (, new, MappingWriter, (, ), ), ., appendMappings, (, out]
[;, (, new, MappingWriter, (, ), ), ., appendMappings, (, out, ), ;, }, private, int, prepMappings, (, ), throws]
[., append, (, "/** Begin mapping definitions. **/\n", ), ;, (, new, MappingWriter, (, ), ), ., appendMappings, (, out, ), ;, }, private]
[), ;, (, new, MappingWriter, (, ), ), ., appendMappings, (, out, ), ;, }, private, int, prepMappings, (, )]
[;, }, private, int, prepMappings, (, ), throws, IOException, {, (, new, MappingTraversal, (, ), ), ., traverse, (, new]
[., appendMappings, (, out, ), ;, }, private, int, prepMappings, (, ), throws, IOException, {, (, new, MappingTraversal, (, )]
[), ., appendMappings, (, out, ), ;, }, private, int, prepMappings, (, ), throws, IOException, {, (, new, MappingTraversal, (]
[), ;, }, private, int, prepMappings, (, ), throws, IOException, {, (, new, MappingTraversal, (, ), ), ., traverse, (]
[;, int, id, =, 0, ;, int, maxLine, =, 0, ;, for, (, Mapping, m, :, mappings, ), {, if]
[., traverse, (, new, UsedMappingCheck, (, ), ), ;, int, id, =, 0, ;, int, maxLine, =, 0, ;, for]
[), ., traverse, (, new, UsedMappingCheck, (, ), ), ;, int, id, =, 0, ;, int, maxLine, =, 0, ;]
[), ;, int, id, =, 0, ;, int, maxLine, =, 0, ;, for, (, Mapping, m, :, mappings, ), {]
[;, int, maxLine, =, 0, ;, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, )]
[;, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {, m, ., id, =]
[), {, if, (, m, ., used, ), {, m, ., id, =, id, ++, ;, int, endPositionLine, =, m]
[), {, m, ., id, =, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;]
[., used, ), {, m, ., id, =, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (]
[=, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max]
[., id, =, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =, Math]
[;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,]
[++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine]
[;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return, maxLine, +, prefixPosition, ., getLine]
[., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return, maxLine]
[., endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }]
[=, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return, maxLine, +, prefixPosition, ., getLine, (, )]
[;, }, }, return, maxLine, +, prefixPosition, ., getLine, (, ), ;, }, private, class, LineMapper, implements, MappingVisitor, {, private]
[., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return, maxLine, +, prefixPosition, ., getLine, (, ), ;, }]
[,, endPositionLine, ), ;, }, }, return, maxLine, +, prefixPosition, ., getLine, (, ), ;, }, private, class, LineMapper, implements]
[), ;, }, }, return, maxLine, +, prefixPosition, ., getLine, (, ), ;, }, private, class, LineMapper, implements, MappingVisitor, {]
[;, }, private, class, LineMapper, implements, MappingVisitor, {, private, final, Appendable, out, ;, private, boolean, firstChar, =, true, ;, private]
[+, prefixPosition, ., getLine, (, ), ;, }, private, class, LineMapper, implements, MappingVisitor, {, private, final, Appendable, out, ;, private]
[;, }, private, class, LineMapper, implements, MappingVisitor, {, private, final, Appendable, out, ;, private, boolean, firstChar, =, true, ;, private]
[., getLine, (, ), ;, }, private, class, LineMapper, implements, MappingVisitor, {, private, final, Appendable, out, ;, private, boolean, firstChar]
[;, private, final, static, String, UNMAPPED_STRING, =, "-1", ;, private, int, lastId, =, UNMAPPED, ;, private, String, lastIdString, =, UNMAPPED_STRING]
[;, private, int, lastId, =, UNMAPPED, ;, private, String, lastIdString, =, UNMAPPED_STRING, ;, LineMapper, (, Appendable, out, ), {, this]
[;, private, String, lastIdString, =, UNMAPPED_STRING, ;, LineMapper, (, Appendable, out, ), {, this, ., out, =, out, ;, }]
[;, LineMapper, (, Appendable, out, ), {, this, ., out, =, out, ;, }, @, Override, public, void, visit, (]
[=, out, ;, }, @, Override, public, void, visit, (, Mapping, m, ,, int, line, ,, int, col, ,, int]
[., out, =, out, ;, }, @, Override, public, void, visit, (, Mapping, m, ,, int, line, ,, int, col]
[;, }, @, Override, public, void, visit, (, Mapping, m, ,, int, line, ,, int, col, ,, int, nextLine, ,]
[;, if, (, lastId, !=, id, ), {, lastIdString, =, (, id, ==, UNMAPPED, ), ?, UNMAPPED_STRING, :, String, .]
[?, m, ., id, :, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =, (, id, ==, UNMAPPED]
[), ?, m, ., id, :, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =, (, id, ==]
[!=, null, ), ?, m, ., id, :, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =, (]
[), ?, m, ., id, :, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =, (, id, ==]
[:, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =, (, id, ==, UNMAPPED, ), ?, UNMAPPED_STRING, :]
[., id, :, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =, (, id, ==, UNMAPPED, ), ?]
[;, if, (, lastId, !=, id, ), {, lastIdString, =, (, id, ==, UNMAPPED, ), ?, UNMAPPED_STRING, :, String, .]
[), {, lastIdString, =, (, id, ==, UNMAPPED, ), ?, UNMAPPED_STRING, :, String, ., valueOf, (, id, ), ;, lastId]
[!=, id, ), {, lastIdString, =, (, id, ==, UNMAPPED, ), ?, UNMAPPED_STRING, :, String, ., valueOf, (, id, )]
[), {, lastIdString, =, (, id, ==, UNMAPPED, ), ?, UNMAPPED_STRING, :, String, ., valueOf, (, id, ), ;, lastId]
[=, (, id, ==, UNMAPPED, ), ?, UNMAPPED_STRING, :, String, ., valueOf, (, id, ), ;, lastId, =, id, ;]
[;, lastId, =, id, ;, }, String, idString, =, lastIdString, ;, for, (, int, i, =, line, ;, i, <=]
[?, UNMAPPED_STRING, :, String, ., valueOf, (, id, ), ;, lastId, =, id, ;, }, String, idString, =, lastIdString, ;]
[), ?, UNMAPPED_STRING, :, String, ., valueOf, (, id, ), ;, lastId, =, id, ;, }, String, idString, =, lastIdString]
[==, UNMAPPED, ), ?, UNMAPPED_STRING, :, String, ., valueOf, (, id, ), ;, lastId, =, id, ;, }, String, idString]
[), ?, UNMAPPED_STRING, :, String, ., valueOf, (, id, ), ;, lastId, =, id, ;, }, String, idString, =, lastIdString]
[:, String, ., valueOf, (, id, ), ;, lastId, =, id, ;, }, String, idString, =, lastIdString, ;, for, (]
[;, lastId, =, id, ;, }, String, idString, =, lastIdString, ;, for, (, int, i, =, line, ;, i, <=]
[., valueOf, (, id, ), ;, lastId, =, id, ;, }, String, idString, =, lastIdString, ;, for, (, int, i]
[), ;, lastId, =, id, ;, }, String, idString, =, lastIdString, ;, for, (, int, i, =, line, ;, i]
[=, id, ;, }, String, idString, =, lastIdString, ;, for, (, int, i, =, line, ;, i, <=, nextLine, ;]
[;, }, String, idString, =, lastIdString, ;, for, (, int, i, =, line, ;, i, <=, nextLine, ;, i, ++]
[;, for, (, int, i, =, line, ;, i, <=, nextLine, ;, i, ++, ), {, if, (, i, ==]
[;, i, <=, nextLine, ;, i, ++, ), {, if, (, i, ==, nextLine, ), {, for, (, int, j]
[;, i, ++, ), {, if, (, i, ==, nextLine, ), {, for, (, int, j, =, col, ;, j]
[<=, nextLine, ;, i, ++, ), {, if, (, i, ==, nextLine, ), {, for, (, int, j, =, col]
[;, i, ++, ), {, if, (, i, ==, nextLine, ), {, for, (, int, j, =, col, ;, j]
[), {, if, (, i, ==, nextLine, ), {, for, (, int, j, =, col, ;, j, <, nextCol, ;]
[++, ), {, if, (, i, ==, nextLine, ), {, for, (, int, j, =, col, ;, j, <, nextCol]
[), {, for, (, int, j, =, col, ;, j, <, nextCol, ;, j, ++, ), {, addCharEntry, (, idString]
[==, nextLine, ), {, for, (, int, j, =, col, ;, j, <, nextCol, ;, j, ++, ), {, addCharEntry]
[), {, for, (, int, j, =, col, ;, j, <, nextCol, ;, j, ++, ), {, addCharEntry, (, idString]
[;, j, <, nextCol, ;, j, ++, ), {, addCharEntry, (, idString, ), ;, }, break, ;, }, closeLine, (]
[;, j, ++, ), {, addCharEntry, (, idString, ), ;, }, break, ;, }, closeLine, (, ), ;, openLine, (]
[<, nextCol, ;, j, ++, ), {, addCharEntry, (, idString, ), ;, }, break, ;, }, closeLine, (, ), ;]
[;, j, ++, ), {, addCharEntry, (, idString, ), ;, }, break, ;, }, closeLine, (, ), ;, openLine, (]
[), {, addCharEntry, (, idString, ), ;, }, break, ;, }, closeLine, (, ), ;, openLine, (, ), ;, col]
[++, ), {, addCharEntry, (, idString, ), ;, }, break, ;, }, closeLine, (, ), ;, openLine, (, ), ;]
[;, }, break, ;, }, closeLine, (, ), ;, openLine, (, ), ;, col, =, 0, ;, }, }, void]
[), ;, }, break, ;, }, closeLine, (, ), ;, openLine, (, ), ;, col, =, 0, ;, }, }]
[;, openLine, (, ), ;, col, =, 0, ;, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (]
[;, col, =, 0, ;, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, ), ;, (, new]
[=, 0, ;, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, ), ;, (, new, MappingTraversal, (]
[;, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, ), ;, (, new, MappingTraversal, (, ), )]
[;, (, new, MappingTraversal, (, ), ), ., traverse, (, this, ), ;, closeLine, (, ), ;, }, private, void]
[;, closeLine, (, ), ;, }, private, void, openLine, (, ), throws, IOException, {, if, (, out, !=, null, )]
[., traverse, (, this, ), ;, closeLine, (, ), ;, }, private, void, openLine, (, ), throws, IOException, {, if]
[), ., traverse, (, this, ), ;, closeLine, (, ), ;, }, private, void, openLine, (, ), throws, IOException, {]
[), ;, closeLine, (, ), ;, }, private, void, openLine, (, ), throws, IOException, {, if, (, out, !=, null]
[;, }, private, void, openLine, (, ), throws, IOException, {, if, (, out, !=, null, ), {, out, ., append]
[), {, out, ., append, (, "[", ), ;, this, ., firstChar, =, true, ;, }, }, private, void, closeLine]
[!=, null, ), {, out, ., append, (, "[", ), ;, this, ., firstChar, =, true, ;, }, }, private]
[), {, out, ., append, (, "[", ), ;, this, ., firstChar, =, true, ;, }, }, private, void, closeLine]
[;, this, ., firstChar, =, true, ;, }, }, private, void, closeLine, (, ), throws, IOException, {, if, (, out]
[., append, (, "[", ), ;, this, ., firstChar, =, true, ;, }, }, private, void, closeLine, (, ), throws]
[), ;, this, ., firstChar, =, true, ;, }, }, private, void, closeLine, (, ), throws, IOException, {, if, (]
[=, true, ;, }, }, private, void, closeLine, (, ), throws, IOException, {, if, (, out, !=, null, ), {]
[., firstChar, =, true, ;, }, }, private, void, closeLine, (, ), throws, IOException, {, if, (, out, !=, null]
[;, }, }, private, void, closeLine, (, ), throws, IOException, {, if, (, out, !=, null, ), {, out, .]
[), {, out, ., append, (, "]\n", ), ;, }, }, private, void, addCharEntry, (, String, id, ), throws, IOException]
[!=, null, ), {, out, ., append, (, "]\n", ), ;, }, }, private, void, addCharEntry, (, String, id, )]
[), {, out, ., append, (, "]\n", ), ;, }, }, private, void, addCharEntry, (, String, id, ), throws, IOException]
[;, }, }, private, void, addCharEntry, (, String, id, ), throws, IOException, {, if, (, out, !=, null, ), {]
[., append, (, "]\n", ), ;, }, }, private, void, addCharEntry, (, String, id, ), throws, IOException, {, if, (]
[), ;, }, }, private, void, addCharEntry, (, String, id, ), throws, IOException, {, if, (, out, !=, null, )]
[), {, if, (, firstChar, ), {, firstChar, =, false, ;, }, else, {, out, ., append, (, ",", )]
[!=, null, ), {, if, (, firstChar, ), {, firstChar, =, false, ;, }, else, {, out, ., append, (]
[), {, if, (, firstChar, ), {, firstChar, =, false, ;, }, else, {, out, ., append, (, ",", )]
[), {, firstChar, =, false, ;, }, else, {, out, ., append, (, ",", ), ;, }, out, ., append]
[=, false, ;, }, else, {, out, ., append, (, ",", ), ;, }, out, ., append, (, id, )]
[;, }, else, {, out, ., append, (, ",", ), ;, }, out, ., append, (, id, ), ;, }]
[;, }, out, ., append, (, id, ), ;, }, }, }, private, class, UsedMappingCheck, implements, MappingVisitor, {, @, Override]
[., append, (, ",", ), ;, }, out, ., append, (, id, ), ;, }, }, }, private, class, UsedMappingCheck]
[), ;, }, out, ., append, (, id, ), ;, }, }, }, private, class, UsedMappingCheck, implements, MappingVisitor, {, @]
[;, }, }, }, private, class, UsedMappingCheck, implements, MappingVisitor, {, @, Override, public, void, visit, (, Mapping, m, ,, int]
[., append, (, id, ), ;, }, }, }, private, class, UsedMappingCheck, implements, MappingVisitor, {, @, Override, public, void, visit]
[), ;, }, }, }, private, class, UsedMappingCheck, implements, MappingVisitor, {, @, Override, public, void, visit, (, Mapping, m, ,]
[), {, m, ., used, =, true, ;, }, }, }, private, interface, MappingVisitor, {, void, visit, (, Mapping, m]
[!=, null, ), {, m, ., used, =, true, ;, }, }, }, private, interface, MappingVisitor, {, void, visit, (]
[), {, m, ., used, =, true, ;, }, }, }, private, interface, MappingVisitor, {, void, visit, (, Mapping, m]
[=, true, ;, }, }, }, private, interface, MappingVisitor, {, void, visit, (, Mapping, m, ,, int, line, ,, int]
[., used, =, true, ;, }, }, }, private, interface, MappingVisitor, {, void, visit, (, Mapping, m, ,, int, line]
[;, }, }, }, private, interface, MappingVisitor, {, void, visit, (, Mapping, m, ,, int, line, ,, int, col, ,]
[;, for, (, Mapping, m, :, mappings, ), {, while, (, !, stack, ., isEmpty, (, ), &&, !, isOverlapped]
[), {, while, (, !, stack, ., isEmpty, (, ), &&, !, isOverlapped, (, stack, ., peek, (, ), ,]
[), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping]
[&&, !, isOverlapped, (, stack, ., peek, (, ), ,, m, ), ), {, Mapping, previous, =, stack, ., pop]
[&&, !, isOverlapped, (, stack, ., peek, (, ), ,, m, ), ), {, Mapping, previous, =, stack, ., pop]
[., isEmpty, (, ), &&, !, isOverlapped, (, stack, ., peek, (, ), ,, m, ), ), {, Mapping, previous]
[), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping]
[), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping]
[,, m, ), ), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, )]
[., peek, (, ), ,, m, ), ), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (]
[), ), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }]
[;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (]
[., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (]
[;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;]
[,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,]
[), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,, m, )]
[;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;, stack, ., push, (, m, ), ;, }, while, (]
[., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;, stack, ., push, (, m, )]
[;, stack, ., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping]
[,, parent, ,, m, ), ;, stack, ., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty]
[,, m, ), ;, stack, ., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty, (, )]
[), ;, stack, ., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty, (, ), ), {]
[;, }, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =, stack, ., pop, (, )]
[., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =]
[), ;, }, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =, stack, ., pop, (]
[), {, Mapping, m, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, m, ), ;, }, }]
[), {, Mapping, m, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, m, ), ;, }, }]
[., isEmpty, (, ), ), {, Mapping, m, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, m]
[;, maybeVisit, (, v, ,, m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return, p]
[., pop, (, ), ;, maybeVisit, (, v, ,, m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p]
[;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return, p, ., getLine, (, ), +, prefixPosition, .]
[,, m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return, p, ., getLine, (, )]
[), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return, p, ., getLine, (, ), +, prefixPosition]
[;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =, p, ., getLine, (, ), ;, int]
[+, prefixPosition, ., getLine, (, ), ;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =, p]
[., getLine, (, ), +, prefixPosition, ., getLine, (, ), ;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {]
[;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =, p, ., getLine, (, ), ;, int]
[., getLine, (, ), ;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =, p, ., getLine]
[;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?, rawCol, :, rawCol]
[., getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, )]
[;, return, (, rawLine, !=, 0, ), ?, rawCol, :, rawCol, +, prefixPosition, ., getColumn, (, ), ;, }, private]
[., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?, rawCol, :, rawCol, +, prefixPosition, ., getColumn, (]
[;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =, m1, ., endPosition, .]
[?, rawCol, :, rawCol, +, prefixPosition, ., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping]
[), ?, rawCol, :, rawCol, +, prefixPosition, ., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,]
[!=, 0, ), ?, rawCol, :, rawCol, +, prefixPosition, ., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping]
[), ?, rawCol, :, rawCol, +, prefixPosition, ., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,]
[:, rawCol, +, prefixPosition, ., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, )]
[;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =, m1, ., endPosition, .]
[+, prefixPosition, ., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int]
[;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =, m1, ., endPosition, .]
[., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =]
[;, int, l2, =, m2, ., startPosition, ., getLine, (, ), ;, int, c1, =, m1, ., endPosition, ., getColumn]
[., getLine, (, ), ;, int, l2, =, m2, ., startPosition, ., getLine, (, ), ;, int, c1, =, m1]
[., endPosition, ., getLine, (, ), ;, int, l2, =, m2, ., startPosition, ., getLine, (, ), ;, int, c1]
[;, int, c1, =, m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn]
[., getLine, (, ), ;, int, c1, =, m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =, m2]
[., startPosition, ., getLine, (, ), ;, int, c1, =, m1, ., endPosition, ., getColumn, (, ), ;, int, c2]
[;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=]
[., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==]
[., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (]
[;, return, (, l1, ==, l2, &&, c1, >=, c2, ), ||, l1, >, l2, ;, }, private, void, maybeVisit]
[., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=, c2, ), ||, l1, >, l2, ;]
[., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=, c2, ), ||, l1, >]
[;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int]
[), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {]
[&&, c1, >=, c2, ), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m]
[==, l2, &&, c1, >=, c2, ), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,]
[&&, c1, >=, c2, ), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m]
[), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {]
[>=, c2, ), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws]
[), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {]
[;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[>, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =]
[;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==]
[), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line]
[., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||]
[;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (]
[), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit]
[., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), )]
[), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (, MappingVisitor]
[||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,]
[<, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,]
[||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,]
[), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (, MappingVisitor]
[), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (]
[&&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }]
[==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;]
[&&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }]
[), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (]
[<, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void]
[), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (]
[;, }, }, private, void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m, ), throws, IOException, {, int]
[,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,]
[,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m]
[,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m, ), throws]
[), ;, }, }, private, void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m, ), throws, IOException, {]
[;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col]
[), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||]
[., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <]
[;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||]
[), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine]
[., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line]
[;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (]
[., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line]
[), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit]
[||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol]
[<, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col]
[||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol]
[), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit]
[<=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), )]
[), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit]
[), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (, MappingVisitor]
[||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,]
[<, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,]
[||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,]
[), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (, MappingVisitor]
[), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (]
[&&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }]
[==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;]
[&&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }]
[), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (]
[<, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void]
[), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (]
[;, }, }, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, ), throws]
[,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,]
[,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine]
[,, nextCol, ), ;, }, }, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int]
[), ;, }, }, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, )]
[;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&]
[., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, )]
[), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine]
[<=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line]
[), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine]
[;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return]
[., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==]
[), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;]
[||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState]
[<, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions]
[||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState]
[), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;]
[<, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false]
[), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;]
[), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,]
[&&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (]
[==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, .]
[&&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (]
[), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,]
[==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,]
[), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,]
[;, return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;, line]
[., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,, nextLine]
[), ;, return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;]
[;, line, =, nextLine, ;, col, =, nextCol, ;, }, }, @, Override, public, void, validate, (, boolean, validate, )]
[., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;, line, =, nextLine, ;, col, =]
[,, line, ,, col, ,, nextLine, ,, nextCol, ), ;, line, =, nextLine, ;, col, =, nextCol, ;, }, }]
[,, col, ,, nextLine, ,, nextCol, ), ;, line, =, nextLine, ;, col, =, nextCol, ;, }, }, @, Override]
[,, nextLine, ,, nextCol, ), ;, line, =, nextLine, ;, col, =, nextCol, ;, }, }, @, Override, public, void]
[,, nextCol, ), ;, line, =, nextLine, ;, col, =, nextCol, ;, }, }, @, Override, public, void, validate, (]
[), ;, line, =, nextLine, ;, col, =, nextCol, ;, }, }, @, Override, public, void, validate, (, boolean, validate]
[=, nextLine, ;, col, =, nextCol, ;, }, }, @, Override, public, void, validate, (, boolean, validate, ), {, }]
[;, col, =, nextCol, ;, }, }, @, Override, public, void, validate, (, boolean, validate, ), {, }, @, Override]
[=, nextCol, ;, }, }, @, Override, public, void, validate, (, boolean, validate, ), {, }, @, Override, public, void]
[;, }, }, @, Override, public, void, validate, (, boolean, validate, ), {, }, @, Override, public, void, appendIndexMapTo, (]
[;, }, }]
