[., Array, ;, public, class, ReturnsMoreEmptyValues, implements, Answer, <, Object, >, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[Array, ;, public, class, ReturnsMoreEmptyValues, implements, Answer, <, Object, >, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[,, Serializable, {, private, static, final, long, serialVersionUID, =, -, 2816745041482698471L, ;, private, final, Answer, <, Object, >, delegate, =]
[delegate, =, new, ReturnsEmptyValues, (, ), ;, public, Object, answer, (, InvocationOnMock, invocation, ), throws, Throwable, {, Object, ret, =]
[delegate, =, new, ReturnsEmptyValues, (, ), ;, public, Object, answer, (, InvocationOnMock, invocation, ), throws, Throwable, {, Object, ret, =]
[(, ), ;, public, Object, answer, (, InvocationOnMock, invocation, ), throws, Throwable, {, Object, ret, =, delegate, ., answer, (]
[answer, (, InvocationOnMock, invocation, ), throws, Throwable, {, Object, ret, =, delegate, ., answer, (, invocation, ), ;, if, (]
[answer, (, InvocationOnMock, invocation, ), throws, Throwable, {, Object, ret, =, delegate, ., answer, (, invocation, ), ;, if, (]
[InvocationOnMock, invocation, ), throws, Throwable, {, Object, ret, =, delegate, ., answer, (, invocation, ), ;, if, (, ret, !=]
[Throwable, {, Object, ret, =, delegate, ., answer, (, invocation, ), ;, if, (, ret, !=, null, ), {, return]
[invocation, ), ;, if, (, ret, !=, null, ), {, return, ret, ;, }, Class, <, ?, >, returnType, =]
[invocation, ), ;, if, (, ret, !=, null, ), {, return, ret, ;, }, Class, <, ?, >, returnType, =]
[invocation, ), ;, if, (, ret, !=, null, ), {, return, ret, ;, }, Class, <, ?, >, returnType, =]
[ret, ;, }, Class, <, ?, >, returnType, =, invocation, ., getMethod, (, ), ., getReturnType, (, ), ;, return]
[}, Class, <, ?, >, returnType, =, invocation, ., getMethod, (, ), ., getReturnType, (, ), ;, return, returnValueFor, (]
[;, return, returnValueFor, (, returnType, ), ;, }, Object, returnValueFor, (, Class, <, ?, >, type, ), {, if, (]
[;, return, returnValueFor, (, returnType, ), ;, }, Object, returnValueFor, (, Class, <, ?, >, type, ), {, if, (]
[returnValueFor, (, returnType, ), ;, }, Object, returnValueFor, (, Class, <, ?, >, type, ), {, if, (, type, ==]
[Object, returnValueFor, (, Class, <, ?, >, type, ), {, if, (, type, ==, String, ., class, ), {, return]
[>, type, ), {, if, (, type, ==, String, ., class, ), {, return, "", ;, }, else, if, (]
[>, type, ), {, if, (, type, ==, String, ., class, ), {, return, "", ;, }, else, if, (]
[return, "", ;, }, else, if, (, type, ., isArray, (, ), ), {, Class, <, ?, >, componenetType, =]
[return, "", ;, }, else, if, (, type, ., isArray, (, ), ), {, Class, <, ?, >, componenetType, =]
[type, ., isArray, (, ), ), {, Class, <, ?, >, componenetType, =, type, ., getComponentType, (, ), ;, return]
[type, ., isArray, (, ), ), {, Class, <, ?, >, componenetType, =, type, ., getComponentType, (, ), ;, return]
[), ), {, Class, <, ?, >, componenetType, =, type, ., getComponentType, (, ), ;, return, Array, ., newInstance, (]
[{, Class, <, ?, >, componenetType, =, type, ., getComponentType, (, ), ;, return, Array, ., newInstance, (, componenetType, ,]
[componenetType, =, type, ., getComponentType, (, ), ;, return, Array, ., newInstance, (, componenetType, ,, 0, ), ;, }, return]
