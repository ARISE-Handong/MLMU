[util, ., RectangleEdge, ;, public, class, CategoryAxis3D, extends, CategoryAxis, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, 4114732251353700972L, ;, public, CategoryAxis3D, (, ), {, this, (]
[public, CategoryAxis3D, (, ), {, this, (, null, ), ;, }, public, CategoryAxis3D, (, String, label, ), {, super, (]
[g2, ,, double, cursor, ,, Rectangle2D, plotArea, ,, Rectangle2D, dataArea, ,, RectangleEdge, edge, ,, PlotRenderingInfo, plotState, ), {, if, (]
[,, double, cursor, ,, Rectangle2D, plotArea, ,, Rectangle2D, dataArea, ,, RectangleEdge, edge, ,, PlotRenderingInfo, plotState, ), {, if, (, !]
[,, Rectangle2D, dataArea, ,, RectangleEdge, edge, ,, PlotRenderingInfo, plotState, ), {, if, (, !, isVisible, (, ), ), {, return]
[,, RectangleEdge, edge, ,, PlotRenderingInfo, plotState, ), {, if, (, !, isVisible, (, ), ), {, return, new, AxisState, (]
[{, if, (, !, isVisible, (, ), ), {, return, new, AxisState, (, cursor, ), ;, }, CategoryPlot, plot, =]
[!, isVisible, (, ), ), {, return, new, AxisState, (, cursor, ), ;, }, CategoryPlot, plot, =, (, CategoryPlot, )]
[new, AxisState, (, cursor, ), ;, }, CategoryPlot, plot, =, (, CategoryPlot, ), getPlot, (, ), ;, Rectangle2D, adjustedDataArea, =]
[=, (, CategoryPlot, ), getPlot, (, ), ;, Rectangle2D, adjustedDataArea, =, new, Rectangle2D, ., Double, (, ), ;, if, (]
[=, (, CategoryPlot, ), getPlot, (, ), ;, Rectangle2D, adjustedDataArea, =, new, Rectangle2D, ., Double, (, ), ;, if, (]
[=, (, CategoryPlot, ), getPlot, (, ), ;, Rectangle2D, adjustedDataArea, =, new, Rectangle2D, ., Double, (, ), ;, if, (]
[Rectangle2D, ., Double, (, ), ;, if, (, plot, ., getRenderer, (, ), instanceof, Effect3D, ), {, Effect3D, e3D, =]
[(, ), ;, if, (, plot, ., getRenderer, (, ), instanceof, Effect3D, ), {, Effect3D, e3D, =, (, Effect3D, )]
[(, ), ;, if, (, plot, ., getRenderer, (, ), instanceof, Effect3D, ), {, Effect3D, e3D, =, (, Effect3D, )]
[), instanceof, Effect3D, ), {, Effect3D, e3D, =, (, Effect3D, ), plot, ., getRenderer, (, ), ;, double, adjustedX, =]
[), instanceof, Effect3D, ), {, Effect3D, e3D, =, (, Effect3D, ), plot, ., getRenderer, (, ), ;, double, adjustedX, =]
[Effect3D, ), plot, ., getRenderer, (, ), ;, double, adjustedX, =, dataArea, ., getMinX, (, ), ;, double, adjustedY, =]
[Effect3D, ), plot, ., getRenderer, (, ), ;, double, adjustedX, =, dataArea, ., getMinX, (, ), ;, double, adjustedY, =]
[adjustedX, =, dataArea, ., getMinX, (, ), ;, double, adjustedY, =, dataArea, ., getMinY, (, ), ;, double, adjustedW, =]
[adjustedX, =, dataArea, ., getMinX, (, ), ;, double, adjustedY, =, dataArea, ., getMinY, (, ), ;, double, adjustedW, =]
[adjustedX, =, dataArea, ., getMinX, (, ), ;, double, adjustedY, =, dataArea, ., getMinY, (, ), ;, double, adjustedW, =]
[), ;, double, adjustedY, =, dataArea, ., getMinY, (, ), ;, double, adjustedW, =, dataArea, ., getWidth, (, ), -]
[), ;, double, adjustedY, =, dataArea, ., getMinY, (, ), ;, double, adjustedW, =, dataArea, ., getWidth, (, ), -]
[), ;, double, adjustedW, =, dataArea, ., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =]
[), ;, double, adjustedW, =, dataArea, ., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =]
[), ;, double, adjustedW, =, dataArea, ., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =]
[., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =, dataArea, ., getHeight, (, ), -]
[., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =, dataArea, ., getHeight, (, ), -]
[(, ), ;, double, adjustedH, =, dataArea, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (]
[(, ), ;, double, adjustedH, =, dataArea, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (]
[(, ), ;, double, adjustedH, =, dataArea, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (]
[;, double, adjustedH, =, dataArea, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==]
[;, double, adjustedH, =, dataArea, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==]
[dataArea, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||]
[dataArea, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||]
[getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==]
[getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==]
[., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {]
[(, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=]
[(, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=]
[||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (]
[||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (]
[||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (]
[==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==]
[==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==]
[), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||]
[), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||]
[adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==]
[adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==]
[(, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {]
[;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=]
[;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=]
[RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }]
[RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }]
[edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedDataArea, ., setRect, (]
[RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedDataArea, ., setRect, (, adjustedX, ,]
[TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedDataArea, ., setRect, (, adjustedX, ,, adjustedY, ,]
[{, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedDataArea, ., setRect, (, adjustedX, ,, adjustedY, ,, adjustedW, ,]
[(, ), ;, }, adjustedDataArea, ., setRect, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, else, {]
[(, ), ;, }, adjustedDataArea, ., setRect, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, else, {]
[adjustedDataArea, ., setRect, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, else, {, adjustedDataArea, ., setRect, (]
[adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, else, {, adjustedDataArea, ., setRect, (, dataArea, ), ;, }, if, (]
[), ;, }, else, {, adjustedDataArea, ., setRect, (, dataArea, ), ;, }, if, (, isAxisLineVisible, (, ), ), {]
[}, else, {, adjustedDataArea, ., setRect, (, dataArea, ), ;, }, if, (, isAxisLineVisible, (, ), ), {, drawAxisLine, (]
[{, adjustedDataArea, ., setRect, (, dataArea, ), ;, }, if, (, isAxisLineVisible, (, ), ), {, drawAxisLine, (, g2, ,]
[., setRect, (, dataArea, ), ;, }, if, (, isAxisLineVisible, (, ), ), {, drawAxisLine, (, g2, ,, cursor, ,]
[(, dataArea, ), ;, }, if, (, isAxisLineVisible, (, ), ), {, drawAxisLine, (, g2, ,, cursor, ,, adjustedDataArea, ,]
[isAxisLineVisible, (, ), ), {, drawAxisLine, (, g2, ,, cursor, ,, adjustedDataArea, ,, edge, ), ;, }, AxisState, state, =]
[), {, drawAxisLine, (, g2, ,, cursor, ,, adjustedDataArea, ,, edge, ), ;, }, AxisState, state, =, new, AxisState, (]
[,, cursor, ,, adjustedDataArea, ,, edge, ), ;, }, AxisState, state, =, new, AxisState, (, cursor, ), ;, if, (]
[edge, ), ;, }, AxisState, state, =, new, AxisState, (, cursor, ), ;, if, (, isTickMarksVisible, (, ), ), {]
[;, }, AxisState, state, =, new, AxisState, (, cursor, ), ;, if, (, isTickMarksVisible, (, ), ), {, drawTickMarks, (]
[AxisState, state, =, new, AxisState, (, cursor, ), ;, if, (, isTickMarksVisible, (, ), ), {, drawTickMarks, (, g2, ,]
[=, new, AxisState, (, cursor, ), ;, if, (, isTickMarksVisible, (, ), ), {, drawTickMarks, (, g2, ,, cursor, ,]
[AxisState, (, cursor, ), ;, if, (, isTickMarksVisible, (, ), ), {, drawTickMarks, (, g2, ,, cursor, ,, adjustedDataArea, ,]
[cursor, ), ;, if, (, isTickMarksVisible, (, ), ), {, drawTickMarks, (, g2, ,, cursor, ,, adjustedDataArea, ,, edge, ,]
[(, isTickMarksVisible, (, ), ), {, drawTickMarks, (, g2, ,, cursor, ,, adjustedDataArea, ,, edge, ,, state, ), ;, }]
[(, ), ), {, drawTickMarks, (, g2, ,, cursor, ,, adjustedDataArea, ,, edge, ,, state, ), ;, }, state, =]
[), {, drawTickMarks, (, g2, ,, cursor, ,, adjustedDataArea, ,, edge, ,, state, ), ;, }, state, =, drawCategoryLabels, (]
[drawTickMarks, (, g2, ,, cursor, ,, adjustedDataArea, ,, edge, ,, state, ), ;, }, state, =, drawCategoryLabels, (, g2, ,]
[g2, ,, cursor, ,, adjustedDataArea, ,, edge, ,, state, ), ;, }, state, =, drawCategoryLabels, (, g2, ,, plotArea, ,]
[cursor, ,, adjustedDataArea, ,, edge, ,, state, ), ;, }, state, =, drawCategoryLabels, (, g2, ,, plotArea, ,, adjustedDataArea, ,]
[adjustedDataArea, ,, edge, ,, state, ), ;, }, state, =, drawCategoryLabels, (, g2, ,, plotArea, ,, adjustedDataArea, ,, edge, ,]
[edge, ,, state, ), ;, }, state, =, drawCategoryLabels, (, g2, ,, plotArea, ,, adjustedDataArea, ,, edge, ,, state, ,]
[), ;, }, state, =, drawCategoryLabels, (, g2, ,, plotArea, ,, adjustedDataArea, ,, edge, ,, state, ,, plotState, ), ;]
[}, state, =, drawCategoryLabels, (, g2, ,, plotArea, ,, adjustedDataArea, ,, edge, ,, state, ,, plotState, ), ;, state, =]
[=, drawCategoryLabels, (, g2, ,, plotArea, ,, adjustedDataArea, ,, edge, ,, state, ,, plotState, ), ;, state, =, drawLabel, (]
[,, plotArea, ,, adjustedDataArea, ,, edge, ,, state, ,, plotState, ), ;, state, =, drawLabel, (, getLabel, (, ), ,]
[,, adjustedDataArea, ,, edge, ,, state, ,, plotState, ), ;, state, =, drawLabel, (, getLabel, (, ), ,, g2, ,]
[,, edge, ,, state, ,, plotState, ), ;, state, =, drawLabel, (, getLabel, (, ), ,, g2, ,, plotArea, ,]
[,, state, ,, plotState, ), ;, state, =, drawLabel, (, getLabel, (, ), ,, g2, ,, plotArea, ,, dataArea, ,]
[,, plotState, ), ;, state, =, drawLabel, (, getLabel, (, ), ,, g2, ,, plotArea, ,, dataArea, ,, edge, ,]
[), ;, state, =, drawLabel, (, getLabel, (, ), ,, g2, ,, plotArea, ,, dataArea, ,, edge, ,, state, ,]
[drawLabel, (, getLabel, (, ), ,, g2, ,, plotArea, ,, dataArea, ,, edge, ,, state, ,, plotState, ), ;, return]
[(, CategoryAnchor, anchor, ,, int, category, ,, int, categoryCount, ,, Rectangle2D, area, ,, RectangleEdge, edge, ), {, double, result, =]
[category, ,, int, categoryCount, ,, Rectangle2D, area, ,, RectangleEdge, edge, ), {, double, result, =, 0.0, ;, Rectangle2D, adjustedArea, =]
[Rectangle2D, area, ,, RectangleEdge, edge, ), {, double, result, =, 0.0, ;, Rectangle2D, adjustedArea, =, area, ;, CategoryPlot, plot, =]
[RectangleEdge, edge, ), {, double, result, =, 0.0, ;, Rectangle2D, adjustedArea, =, area, ;, CategoryPlot, plot, =, (, CategoryPlot, )]
[0.0, ;, Rectangle2D, adjustedArea, =, area, ;, CategoryPlot, plot, =, (, CategoryPlot, ), getPlot, (, ), ;, CategoryItemRenderer, renderer, =]
[0.0, ;, Rectangle2D, adjustedArea, =, area, ;, CategoryPlot, plot, =, (, CategoryPlot, ), getPlot, (, ), ;, CategoryItemRenderer, renderer, =]
[plot, =, (, CategoryPlot, ), getPlot, (, ), ;, CategoryItemRenderer, renderer, =, plot, ., getRenderer, (, ), ;, if, (]
[plot, =, (, CategoryPlot, ), getPlot, (, ), ;, CategoryItemRenderer, renderer, =, plot, ., getRenderer, (, ), ;, if, (]
[;, CategoryItemRenderer, renderer, =, plot, ., getRenderer, (, ), ;, if, (, renderer, instanceof, Effect3D, ), {, Effect3D, e3D, =]
[=, plot, ., getRenderer, (, ), ;, if, (, renderer, instanceof, Effect3D, ), {, Effect3D, e3D, =, (, Effect3D, )]
[), ;, if, (, renderer, instanceof, Effect3D, ), {, Effect3D, e3D, =, (, Effect3D, ), renderer, ;, double, adjustedX, =]
[), ;, if, (, renderer, instanceof, Effect3D, ), {, Effect3D, e3D, =, (, Effect3D, ), renderer, ;, double, adjustedX, =]
[Effect3D, e3D, =, (, Effect3D, ), renderer, ;, double, adjustedX, =, area, ., getMinX, (, ), ;, double, adjustedY, =]
[Effect3D, e3D, =, (, Effect3D, ), renderer, ;, double, adjustedX, =, area, ., getMinX, (, ), ;, double, adjustedY, =]
[adjustedX, =, area, ., getMinX, (, ), ;, double, adjustedY, =, area, ., getMinY, (, ), ;, double, adjustedW, =]
[adjustedX, =, area, ., getMinX, (, ), ;, double, adjustedY, =, area, ., getMinY, (, ), ;, double, adjustedW, =]
[adjustedX, =, area, ., getMinX, (, ), ;, double, adjustedY, =, area, ., getMinY, (, ), ;, double, adjustedW, =]
[), ;, double, adjustedY, =, area, ., getMinY, (, ), ;, double, adjustedW, =, area, ., getWidth, (, ), -]
[), ;, double, adjustedY, =, area, ., getMinY, (, ), ;, double, adjustedW, =, area, ., getWidth, (, ), -]
[), ;, double, adjustedW, =, area, ., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =]
[), ;, double, adjustedW, =, area, ., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =]
[), ;, double, adjustedW, =, area, ., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =]
[., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =, area, ., getHeight, (, ), -]
[., getWidth, (, ), -, e3D, ., getXOffset, (, ), ;, double, adjustedH, =, area, ., getHeight, (, ), -]
[(, ), ;, double, adjustedH, =, area, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (]
[(, ), ;, double, adjustedH, =, area, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (]
[(, ), ;, double, adjustedH, =, area, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (]
[;, double, adjustedH, =, area, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==]
[;, double, adjustedH, =, area, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==]
[area, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||]
[area, ., getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||]
[getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==]
[getHeight, (, ), -, e3D, ., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==]
[., getYOffset, (, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {]
[(, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=]
[(, ), ;, if, (, edge, ==, RectangleEdge, ., LEFT, ||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=]
[||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (]
[||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (]
[||, edge, ==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (]
[==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==]
[==, RectangleEdge, ., BOTTOM, ), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==]
[), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||]
[), {, adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||]
[adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==]
[adjustedY, +=, e3D, ., getYOffset, (, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==]
[(, ), ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {]
[;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=]
[;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=]
[RectangleEdge, ., RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }]
[RIGHT, ||, edge, ==, RectangleEdge, ., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedArea, =]
[., TOP, ), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedArea, =, new, Rectangle2D, ., Double, (]
[), {, adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedArea, =, new, Rectangle2D, ., Double, (, adjustedX, ,]
[adjustedX, +=, e3D, ., getXOffset, (, ), ;, }, adjustedArea, =, new, Rectangle2D, ., Double, (, adjustedX, ,, adjustedY, ,]
[e3D, ., getXOffset, (, ), ;, }, adjustedArea, =, new, Rectangle2D, ., Double, (, adjustedX, ,, adjustedY, ,, adjustedW, ,]
[}, adjustedArea, =, new, Rectangle2D, ., Double, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, if, (]
[}, adjustedArea, =, new, Rectangle2D, ., Double, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, if, (]
[=, new, Rectangle2D, ., Double, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, if, (, anchor, ==]
[=, new, Rectangle2D, ., Double, (, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, if, (, anchor, ==]
[(, adjustedX, ,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, if, (, anchor, ==, CategoryAnchor, ., START, ), {]
[,, adjustedY, ,, adjustedW, ,, adjustedH, ), ;, }, if, (, anchor, ==, CategoryAnchor, ., START, ), {, result, =]
[,, adjustedW, ,, adjustedH, ), ;, }, if, (, anchor, ==, CategoryAnchor, ., START, ), {, result, =, getCategoryStart, (]
[,, adjustedH, ), ;, }, if, (, anchor, ==, CategoryAnchor, ., START, ), {, result, =, getCategoryStart, (, category, ,]
[), ;, }, if, (, anchor, ==, CategoryAnchor, ., START, ), {, result, =, getCategoryStart, (, category, ,, categoryCount, ,]
[}, if, (, anchor, ==, CategoryAnchor, ., START, ), {, result, =, getCategoryStart, (, category, ,, categoryCount, ,, adjustedArea, ,]
[START, ), {, result, =, getCategoryStart, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (]
[START, ), {, result, =, getCategoryStart, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (]
[{, result, =, getCategoryStart, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==]
[{, result, =, getCategoryStart, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==]
[category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., MIDDLE, ), {]
[categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., MIDDLE, ), {, result, =]
[adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., MIDDLE, ), {, result, =, getCategoryMiddle, (]
[edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., MIDDLE, ), {, result, =, getCategoryMiddle, (, category, ,]
[;, }, else, if, (, anchor, ==, CategoryAnchor, ., MIDDLE, ), {, result, =, getCategoryMiddle, (, category, ,, categoryCount, ,]
[else, if, (, anchor, ==, CategoryAnchor, ., MIDDLE, ), {, result, =, getCategoryMiddle, (, category, ,, categoryCount, ,, adjustedArea, ,]
[MIDDLE, ), {, result, =, getCategoryMiddle, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (]
[MIDDLE, ), {, result, =, getCategoryMiddle, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (]
[{, result, =, getCategoryMiddle, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==]
[{, result, =, getCategoryMiddle, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==]
[category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., END, ), {]
[categoryCount, ,, adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., END, ), {, result, =]
[adjustedArea, ,, edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., END, ), {, result, =, getCategoryEnd, (]
[edge, ), ;, }, else, if, (, anchor, ==, CategoryAnchor, ., END, ), {, result, =, getCategoryEnd, (, category, ,]
[;, }, else, if, (, anchor, ==, CategoryAnchor, ., END, ), {, result, =, getCategoryEnd, (, category, ,, categoryCount, ,]
[else, if, (, anchor, ==, CategoryAnchor, ., END, ), {, result, =, getCategoryEnd, (, category, ,, categoryCount, ,, adjustedArea, ,]
[CategoryAnchor, ., END, ), {, result, =, getCategoryEnd, (, category, ,, categoryCount, ,, adjustedArea, ,, edge, ), ;, }, return]
[,, adjustedArea, ,, edge, ), ;, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[,, adjustedArea, ,, edge, ), ;, }, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
