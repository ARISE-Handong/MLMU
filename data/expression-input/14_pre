[final, CompilerOptions, options, ;, public, JsMessageExtractor, (, JsMessage, ., IdGenerator, idGenerator, ,, JsMessage, ., Style, style, ), {, this, (]
[options, ;, public, JsMessageExtractor, (, JsMessage, ., IdGenerator, idGenerator, ,, JsMessage, ., Style, style, ), {, this, (, idGenerator, ,]
[public, JsMessageExtractor, (, JsMessage, ., IdGenerator, idGenerator, ,, JsMessage, ., Style, style, ), {, this, (, idGenerator, ,, style, ,]
[), ;, }, public, JsMessageExtractor, (, JsMessage, ., IdGenerator, idGenerator, ,, JsMessage, ., Style, style, ,, CompilerOptions, options, ), {]
[), ;, }, public, JsMessageExtractor, (, JsMessage, ., IdGenerator, idGenerator, ,, JsMessage, ., Style, style, ,, CompilerOptions, options, ), {]
[JsMessageExtractor, (, JsMessage, ., IdGenerator, idGenerator, ,, JsMessage, ., Style, style, ,, CompilerOptions, options, ), {, this, ., idGenerator, =]
[JsMessage, ., IdGenerator, idGenerator, ,, JsMessage, ., Style, style, ,, CompilerOptions, options, ), {, this, ., idGenerator, =, idGenerator, ;]
[JsMessage, ., IdGenerator, idGenerator, ,, JsMessage, ., Style, style, ,, CompilerOptions, options, ), {, this, ., idGenerator, =, idGenerator, ;]
[,, JsMessage, ., Style, style, ,, CompilerOptions, options, ), {, this, ., idGenerator, =, idGenerator, ;, this, ., style, =]
[., Style, style, ,, CompilerOptions, options, ), {, this, ., idGenerator, =, idGenerator, ;, this, ., style, =, style, ;]
[., Style, style, ,, CompilerOptions, options, ), {, this, ., idGenerator, =, idGenerator, ;, this, ., style, =, style, ;]
[CompilerOptions, options, ), {, this, ., idGenerator, =, idGenerator, ;, this, ., style, =, style, ;, this, ., options, =]
[., options, =, options, ;, }, private, class, ExtractMessagesVisitor, extends, JsMessageVisitor, {, private, final, List, <, JsMessage, >, messages, =]
[., options, =, options, ;, }, private, class, ExtractMessagesVisitor, extends, JsMessageVisitor, {, private, final, List, <, JsMessage, >, messages, =]
[<, JsMessage, >, messages, =, Lists, ., newLinkedList, (, ), ;, private, ExtractMessagesVisitor, (, AbstractCompiler, compiler, ), {, super, (]
[>, messages, =, Lists, ., newLinkedList, (, ), ;, private, ExtractMessagesVisitor, (, AbstractCompiler, compiler, ), {, super, (, compiler, ,]
[=, Lists, ., newLinkedList, (, ), ;, private, ExtractMessagesVisitor, (, AbstractCompiler, compiler, ), {, super, (, compiler, ,, true, ,]
[., newLinkedList, (, ), ;, private, ExtractMessagesVisitor, (, AbstractCompiler, compiler, ), {, super, (, compiler, ,, true, ,, style, ,]
[style, ,, idGenerator, ), ;, }, @, Override, void, processJsMessage, (, JsMessage, message, ,, JsMessageDefinition, definition, ), {, if, (]
[,, idGenerator, ), ;, }, @, Override, void, processJsMessage, (, JsMessage, message, ,, JsMessageDefinition, definition, ), {, if, (, !]
[,, idGenerator, ), ;, }, @, Override, void, processJsMessage, (, JsMessage, message, ,, JsMessageDefinition, definition, ), {, if, (, !]
[void, processJsMessage, (, JsMessage, message, ,, JsMessageDefinition, definition, ), {, if, (, !, message, ., isExternal, (, ), ), {]
[void, processJsMessage, (, JsMessage, message, ,, JsMessageDefinition, definition, ), {, if, (, !, message, ., isExternal, (, ), ), {]
[message, ,, JsMessageDefinition, definition, ), {, if, (, !, message, ., isExternal, (, ), ), {, messages, ., add, (]
[{, messages, ., add, (, message, ), ;, }, }, public, Collection, <, JsMessage, >, getMessages, (, ), {, return]
[return, messages, ;, }, }, public, Collection, <, JsMessage, >, extractMessages, (, SourceFile, ..., inputs, ), throws, IOException, {, return]
[;, }, }, public, Collection, <, JsMessage, >, extractMessages, (, SourceFile, ..., inputs, ), throws, IOException, {, return, extractMessages, (]
[;, }, }, public, Collection, <, JsMessage, >, extractMessages, (, SourceFile, ..., inputs, ), throws, IOException, {, return, extractMessages, (]
[Collection, <, JsMessage, >, extractMessages, (, SourceFile, ..., inputs, ), throws, IOException, {, return, extractMessages, (, ImmutableList, ., copyOf, (]
[SourceFile, >, Collection, <, JsMessage, >, extractMessages, (, Iterable, <, T, >, inputs, ), throws, IOException, {, Compiler, compiler, =]
[>, extractMessages, (, Iterable, <, T, >, inputs, ), throws, IOException, {, Compiler, compiler, =, new, Compiler, (, ), ;]
[>, extractMessages, (, Iterable, <, T, >, inputs, ), throws, IOException, {, Compiler, compiler, =, new, Compiler, (, ), ;]
[<, T, >, inputs, ), throws, IOException, {, Compiler, compiler, =, new, Compiler, (, ), ;, compiler, ., init, (]
[<, T, >, inputs, ), throws, IOException, {, Compiler, compiler, =, new, Compiler, (, ), ;, compiler, ., init, (]
[compiler, =, new, Compiler, (, ), ;, compiler, ., init, (, ImmutableList, ., <, SourceFile, >, of, (, ), ,]
[compiler, =, new, Compiler, (, ), ;, compiler, ., init, (, ImmutableList, ., <, SourceFile, >, of, (, ), ,]
[(, ), ;, compiler, ., init, (, ImmutableList, ., <, SourceFile, >, of, (, ), ,, Lists, ., newArrayList, (]
[compiler, ., init, (, ImmutableList, ., <, SourceFile, >, of, (, ), ,, Lists, ., newArrayList, (, inputs, ), ,]
[(, ImmutableList, ., <, SourceFile, >, of, (, ), ,, Lists, ., newArrayList, (, inputs, ), ,, options, ), ;]
[(, ImmutableList, ., <, SourceFile, >, of, (, ), ,, Lists, ., newArrayList, (, inputs, ), ,, options, ), ;]
[,, Lists, ., newArrayList, (, inputs, ), ,, options, ), ;, compiler, ., parseInputs, (, ), ;, ExtractMessagesVisitor, extractCompilerPass, =]
[newArrayList, (, inputs, ), ,, options, ), ;, compiler, ., parseInputs, (, ), ;, ExtractMessagesVisitor, extractCompilerPass, =, new, ExtractMessagesVisitor, (]
[options, ), ;, compiler, ., parseInputs, (, ), ;, ExtractMessagesVisitor, extractCompilerPass, =, new, ExtractMessagesVisitor, (, compiler, ), ;, if, (]
[options, ), ;, compiler, ., parseInputs, (, ), ;, ExtractMessagesVisitor, extractCompilerPass, =, new, ExtractMessagesVisitor, (, compiler, ), ;, if, (]
[options, ), ;, compiler, ., parseInputs, (, ), ;, ExtractMessagesVisitor, extractCompilerPass, =, new, ExtractMessagesVisitor, (, compiler, ), ;, if, (]
[options, ), ;, compiler, ., parseInputs, (, ), ;, ExtractMessagesVisitor, extractCompilerPass, =, new, ExtractMessagesVisitor, (, compiler, ), ;, if, (]
[;, ExtractMessagesVisitor, extractCompilerPass, =, new, ExtractMessagesVisitor, (, compiler, ), ;, if, (, compiler, ., getErrors, (, ), ., length, ==]
[=, new, ExtractMessagesVisitor, (, compiler, ), ;, if, (, compiler, ., getErrors, (, ), ., length, ==, 0, ), {]
[=, new, ExtractMessagesVisitor, (, compiler, ), ;, if, (, compiler, ., getErrors, (, ), ., length, ==, 0, ), {]
[compiler, ), ;, if, (, compiler, ., getErrors, (, ), ., length, ==, 0, ), {, extractCompilerPass, ., process, (]
[;, if, (, compiler, ., getErrors, (, ), ., length, ==, 0, ), {, extractCompilerPass, ., process, (, null, ,]
[;, if, (, compiler, ., getErrors, (, ), ., length, ==, 0, ), {, extractCompilerPass, ., process, (, null, ,]
[{, extractCompilerPass, ., process, (, null, ,, compiler, ., getRoot, (, ), ), ;, }, JSError, [, ], errors, =]
[{, extractCompilerPass, ., process, (, null, ,, compiler, ., getRoot, (, ), ), ;, }, JSError, [, ], errors, =]
[., getRoot, (, ), ), ;, }, JSError, [, ], errors, =, compiler, ., getErrors, (, ), ;, if, (]
[., getRoot, (, ), ), ;, }, JSError, [, ], errors, =, compiler, ., getErrors, (, ), ;, if, (]
[., getRoot, (, ), ), ;, }, JSError, [, ], errors, =, compiler, ., getErrors, (, ), ;, if, (]
[), ;, }, JSError, [, ], errors, =, compiler, ., getErrors, (, ), ;, if, (, errors, ., length, >]
[errors, =, compiler, ., getErrors, (, ), ;, if, (, errors, ., length, >, 0, ), {, StringBuilder, msg, =]
[., getErrors, (, ), ;, if, (, errors, ., length, >, 0, ), {, StringBuilder, msg, =, new, StringBuilder, (]
[(, errors, ., length, >, 0, ), {, StringBuilder, msg, =, new, StringBuilder, (, "JSCompiler errors\n", ), ;, MessageFormatter, formatter, =]
[length, >, 0, ), {, StringBuilder, msg, =, new, StringBuilder, (, "JSCompiler errors\n", ), ;, MessageFormatter, formatter, =, new, LightweightMessageFormatter, (]
[new, StringBuilder, (, "JSCompiler errors\n", ), ;, MessageFormatter, formatter, =, new, LightweightMessageFormatter, (, compiler, ), ;, for, (, JSError, e, :]
["JSCompiler errors\n", ), ;, MessageFormatter, formatter, =, new, LightweightMessageFormatter, (, compiler, ), ;, for, (, JSError, e, :, errors, ), {]
["JSCompiler errors\n", ), ;, MessageFormatter, formatter, =, new, LightweightMessageFormatter, (, compiler, ), ;, for, (, JSError, e, :, errors, ), {]
[formatter, =, new, LightweightMessageFormatter, (, compiler, ), ;, for, (, JSError, e, :, errors, ), {, msg, ., append, (]
[formatter, =, new, LightweightMessageFormatter, (, compiler, ), ;, for, (, JSError, e, :, errors, ), {, msg, ., append, (]
[(, compiler, ), ;, for, (, JSError, e, :, errors, ), {, msg, ., append, (, formatter, ., formatError, (]
[JSError, e, :, errors, ), {, msg, ., append, (, formatter, ., formatError, (, e, ), ), ;, }, throw]
[errors, ), {, msg, ., append, (, formatter, ., formatError, (, e, ), ), ;, }, throw, new, RuntimeException, (]
[errors, ), {, msg, ., append, (, formatter, ., formatError, (, e, ), ), ;, }, throw, new, RuntimeException, (]
[formatError, (, e, ), ), ;, }, throw, new, RuntimeException, (, msg, ., toString, (, ), ), ;, }, return]
[formatError, (, e, ), ), ;, }, throw, new, RuntimeException, (, msg, ., toString, (, ), ), ;, }, return]
