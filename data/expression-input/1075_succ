[public, class, MockCreationValidator, {, private, final, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, public, void, validateType, (, Class, classToMock]
[), public, class, MockCreationValidator, {, private, final, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, public, void, validateType, (, Class]
[;, public, void, validateType, (, Class, classToMock, ), {, if, (, !, mockUtil, ., isTypeMockable, (, classToMock, ), ), {]
[), {, new, Reporter, (, ), ., cannotMockFinalClass, (, classToMock, ), ;, }, }, public, void, validateExtraInterfaces, (, Class, classToMock]
[), {, new, Reporter, (, ), ., cannotMockFinalClass, (, classToMock, ), ;, }, }, public, void, validateExtraInterfaces, (, Class, classToMock]
[., isTypeMockable, (, classToMock, ), ), {, new, Reporter, (, ), ., cannotMockFinalClass, (, classToMock, ), ;, }, }, public]
[), ), {, new, Reporter, (, ), ., cannotMockFinalClass, (, classToMock, ), ;, }, }, public, void, validateExtraInterfaces, (, Class]
[;, }, }, public, void, validateExtraInterfaces, (, Class, classToMock, ,, Collection, <, Class, >, extraInterfaces, ), {, if, (, extraInterfaces]
[., cannotMockFinalClass, (, classToMock, ), ;, }, }, public, void, validateExtraInterfaces, (, Class, classToMock, ,, Collection, <, Class, >, extraInterfaces]
[), ;, }, }, public, void, validateExtraInterfaces, (, Class, classToMock, ,, Collection, <, Class, >, extraInterfaces, ), {, if, (]
[), {, return, ;, }, for, (, Class, i, :, extraInterfaces, ), {, if, (, classToMock, ==, i, ), {]
[==, null, ), {, return, ;, }, for, (, Class, i, :, extraInterfaces, ), {, if, (, classToMock, ==, i]
[), {, return, ;, }, for, (, Class, i, :, extraInterfaces, ), {, if, (, classToMock, ==, i, ), {]
[), {, if, (, classToMock, ==, i, ), {, new, Reporter, (, ), ., extraInterfacesCannotContainMockedType, (, classToMock, ), ;, }]
[), {, new, Reporter, (, ), ., extraInterfacesCannotContainMockedType, (, classToMock, ), ;, }, }, }, public, void, validateMockedType, (, Class]
[==, i, ), {, new, Reporter, (, ), ., extraInterfacesCannotContainMockedType, (, classToMock, ), ;, }, }, }, public, void, validateMockedType]
[), {, new, Reporter, (, ), ., extraInterfacesCannotContainMockedType, (, classToMock, ), ;, }, }, }, public, void, validateMockedType, (, Class]
[;, }, }, }, public, void, validateMockedType, (, Class, classToMock, ,, Object, spiedInstance, ), {, if, (, classToMock, ==, null]
[., extraInterfacesCannotContainMockedType, (, classToMock, ), ;, }, }, }, public, void, validateMockedType, (, Class, classToMock, ,, Object, spiedInstance, ), {]
[), ;, }, }, }, public, void, validateMockedType, (, Class, classToMock, ,, Object, spiedInstance, ), {, if, (, classToMock, ==]
[), {, return, ;, }, if, (, !, classToMock, ., equals, (, spiedInstance, ., getClass, (, ), ), ), {]
[||, spiedInstance, ==, null, ), {, return, ;, }, if, (, !, classToMock, ., equals, (, spiedInstance, ., getClass, (]
[==, null, ||, spiedInstance, ==, null, ), {, return, ;, }, if, (, !, classToMock, ., equals, (, spiedInstance, .]
[||, spiedInstance, ==, null, ), {, return, ;, }, if, (, !, classToMock, ., equals, (, spiedInstance, ., getClass, (]
[), {, return, ;, }, if, (, !, classToMock, ., equals, (, spiedInstance, ., getClass, (, ), ), ), {]
[==, null, ), {, return, ;, }, if, (, !, classToMock, ., equals, (, spiedInstance, ., getClass, (, ), )]
[), {, return, ;, }, if, (, !, classToMock, ., equals, (, spiedInstance, ., getClass, (, ), ), ), {]
[), {, new, Reporter, (, ), ., mockedTypeIsInconsistentWithSpiedInstanceType, (, classToMock, ,, spiedInstance, ), ;, }, }, public, void, validateDelegatedInstance, (]
[), {, new, Reporter, (, ), ., mockedTypeIsInconsistentWithSpiedInstanceType, (, classToMock, ,, spiedInstance, ), ;, }, }, public, void, validateDelegatedInstance, (]
[., equals, (, spiedInstance, ., getClass, (, ), ), ), {, new, Reporter, (, ), ., mockedTypeIsInconsistentWithSpiedInstanceType, (, classToMock, ,]
[), ), {, new, Reporter, (, ), ., mockedTypeIsInconsistentWithSpiedInstanceType, (, classToMock, ,, spiedInstance, ), ;, }, }, public, void, validateDelegatedInstance]
[., getClass, (, ), ), ), {, new, Reporter, (, ), ., mockedTypeIsInconsistentWithSpiedInstanceType, (, classToMock, ,, spiedInstance, ), ;, }]
[;, }, }, public, void, validateDelegatedInstance, (, Class, classToMock, ,, Object, delegatedInstance, ), {, if, (, classToMock, ==, null, ||]
[., mockedTypeIsInconsistentWithSpiedInstanceType, (, classToMock, ,, spiedInstance, ), ;, }, }, public, void, validateDelegatedInstance, (, Class, classToMock, ,, Object, delegatedInstance, )]
[,, spiedInstance, ), ;, }, }, public, void, validateDelegatedInstance, (, Class, classToMock, ,, Object, delegatedInstance, ), {, if, (, classToMock]
[), ;, }, }, public, void, validateDelegatedInstance, (, Class, classToMock, ,, Object, delegatedInstance, ), {, if, (, classToMock, ==, null]
[), {, return, ;, }, if, (, delegatedInstance, ., getClass, (, ), ., isAssignableFrom, (, classToMock, ), ), {, new]
[||, delegatedInstance, ==, null, ), {, return, ;, }, if, (, delegatedInstance, ., getClass, (, ), ., isAssignableFrom, (, classToMock]
[==, null, ||, delegatedInstance, ==, null, ), {, return, ;, }, if, (, delegatedInstance, ., getClass, (, ), ., isAssignableFrom]
[||, delegatedInstance, ==, null, ), {, return, ;, }, if, (, delegatedInstance, ., getClass, (, ), ., isAssignableFrom, (, classToMock]
[), {, return, ;, }, if, (, delegatedInstance, ., getClass, (, ), ., isAssignableFrom, (, classToMock, ), ), {, new]
[==, null, ), {, return, ;, }, if, (, delegatedInstance, ., getClass, (, ), ., isAssignableFrom, (, classToMock, ), )]
[), {, return, ;, }, if, (, delegatedInstance, ., getClass, (, ), ., isAssignableFrom, (, classToMock, ), ), {, new]
[), {, new, Reporter, (, ), ., mockedTypeIsInconsistentWithDelegatedInstanceType, (, classToMock, ,, delegatedInstance, ), ;, }, }, public, void, validateSerializable, (]
[., isAssignableFrom, (, classToMock, ), ), {, new, Reporter, (, ), ., mockedTypeIsInconsistentWithDelegatedInstanceType, (, classToMock, ,, delegatedInstance, ), ;, }]
[., getClass, (, ), ., isAssignableFrom, (, classToMock, ), ), {, new, Reporter, (, ), ., mockedTypeIsInconsistentWithDelegatedInstanceType, (, classToMock, ,]
[), ), {, new, Reporter, (, ), ., mockedTypeIsInconsistentWithDelegatedInstanceType, (, classToMock, ,, delegatedInstance, ), ;, }, }, public, void, validateSerializable]
[;, }, }, public, void, validateSerializable, (, Class, classToMock, ,, boolean, serializable, ), {, if, (, serializable, &&, !, classToMock]
[., mockedTypeIsInconsistentWithDelegatedInstanceType, (, classToMock, ,, delegatedInstance, ), ;, }, }, public, void, validateSerializable, (, Class, classToMock, ,, boolean, serializable, )]
[,, delegatedInstance, ), ;, }, }, public, void, validateSerializable, (, Class, classToMock, ,, boolean, serializable, ), {, if, (, serializable]
[), ;, }, }, public, void, validateSerializable, (, Class, classToMock, ,, boolean, serializable, ), {, if, (, serializable, &&, !]
[), {, new, Reporter, (, ), ., serializableWontWorkForObjectsThatDontImplementSerializable, (, classToMock, ), ;, }, }, public, void, validateConstructorUse, (, boolean, usingConstructor]
[&&, Constructors, ., noArgConstructorOf, (, classToMock, ), ==, null, ), {, new, Reporter, (, ), ., serializableWontWorkForObjectsThatDontImplementSerializable, (, classToMock, )]
[&&, !, (, Serializable, ., class, ., isAssignableFrom, (, classToMock, ), ), &&, Constructors, ., noArgConstructorOf, (, classToMock, ), ==]
[&&, !, classToMock, ., isInterface, (, ), &&, !, (, Serializable, ., class, ., isAssignableFrom, (, classToMock, ), ), &&]
[&&, !, (, Serializable, ., class, ., isAssignableFrom, (, classToMock, ), ), &&, Constructors, ., noArgConstructorOf, (, classToMock, ), ==]
[&&, !, (, Serializable, ., class, ., isAssignableFrom, (, classToMock, ), ), &&, Constructors, ., noArgConstructorOf, (, classToMock, ), ==]
[., isInterface, (, ), &&, !, (, Serializable, ., class, ., isAssignableFrom, (, classToMock, ), ), &&, Constructors, ., noArgConstructorOf]
[&&, Constructors, ., noArgConstructorOf, (, classToMock, ), ==, null, ), {, new, Reporter, (, ), ., serializableWontWorkForObjectsThatDontImplementSerializable, (, classToMock, )]
[&&, Constructors, ., noArgConstructorOf, (, classToMock, ), ==, null, ), {, new, Reporter, (, ), ., serializableWontWorkForObjectsThatDontImplementSerializable, (, classToMock, )]
[), &&, Constructors, ., noArgConstructorOf, (, classToMock, ), ==, null, ), {, new, Reporter, (, ), ., serializableWontWorkForObjectsThatDontImplementSerializable, (, classToMock]
[., isAssignableFrom, (, classToMock, ), ), &&, Constructors, ., noArgConstructorOf, (, classToMock, ), ==, null, ), {, new, Reporter, (]
[), ), &&, Constructors, ., noArgConstructorOf, (, classToMock, ), ==, null, ), {, new, Reporter, (, ), ., serializableWontWorkForObjectsThatDontImplementSerializable, (]
[), {, new, Reporter, (, ), ., serializableWontWorkForObjectsThatDontImplementSerializable, (, classToMock, ), ;, }, }, public, void, validateConstructorUse, (, boolean, usingConstructor]
[==, null, ), {, new, Reporter, (, ), ., serializableWontWorkForObjectsThatDontImplementSerializable, (, classToMock, ), ;, }, }, public, void, validateConstructorUse, (]
[., noArgConstructorOf, (, classToMock, ), ==, null, ), {, new, Reporter, (, ), ., serializableWontWorkForObjectsThatDontImplementSerializable, (, classToMock, ), ;, }]
[), ==, null, ), {, new, Reporter, (, ), ., serializableWontWorkForObjectsThatDontImplementSerializable, (, classToMock, ), ;, }, }, public, void, validateConstructorUse]
[), {, new, Reporter, (, ), ., serializableWontWorkForObjectsThatDontImplementSerializable, (, classToMock, ), ;, }, }, public, void, validateConstructorUse, (, boolean, usingConstructor]
[;, }, }, public, void, validateConstructorUse, (, boolean, usingConstructor, ,, SerializableMode, mode, ), {, if, (, usingConstructor, &&, mode, ==]
[., serializableWontWorkForObjectsThatDontImplementSerializable, (, classToMock, ), ;, }, }, public, void, validateConstructorUse, (, boolean, usingConstructor, ,, SerializableMode, mode, ), {, if]
[), ;, }, }, public, void, validateConstructorUse, (, boolean, usingConstructor, ,, SerializableMode, mode, ), {, if, (, usingConstructor, &&, mode]
[), {, new, Reporter, (, ), ., usingConstructorWithFancySerializable, (, mode, ), ;, }, }, }]
[&&, mode, ==, SerializableMode, ., ACROSS_CLASSLOADERS, ), {, new, Reporter, (, ), ., usingConstructorWithFancySerializable, (, mode, ), ;, }, }]
[), {, new, Reporter, (, ), ., usingConstructorWithFancySerializable, (, mode, ), ;, }, }, }]
[==, SerializableMode, ., ACROSS_CLASSLOADERS, ), {, new, Reporter, (, ), ., usingConstructorWithFancySerializable, (, mode, ), ;, }, }, }]
[), {, new, Reporter, (, ), ., usingConstructorWithFancySerializable, (, mode, ), ;, }, }, }]
[., ACROSS_CLASSLOADERS, ), {, new, Reporter, (, ), ., usingConstructorWithFancySerializable, (, mode, ), ;, }, }, }]
[;, }, }, }]
[., usingConstructorWithFancySerializable, (, mode, ), ;, }, }, }]
[), ;, }, }, }]
