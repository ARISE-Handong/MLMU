[rhino, ., jstype, ., TernaryValue, ., UNKNOWN, ;, public, class, BooleanType, extends, ValueType, {, private, static, final, long, serialVersionUID, =]
[BooleanType, extends, ValueType, {, private, static, final, long, serialVersionUID, =, 1L, ;, BooleanType, (, JSTypeRegistry, registry, ), {, super, (]
[(, JSTypeRegistry, registry, ), {, super, (, registry, ), ;, }, @, Override, public, boolean, isNullable, (, ), {, return]
[(, ), {, return, false, ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =]
[(, ), {, return, false, ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =]
[false, ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =, super, ., testForEquality, (]
[public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =, super, ., testForEquality, (, that, ), ;, if, (]
[public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =, super, ., testForEquality, (, that, ), ;, if, (]
[testForEquality, (, JSType, that, ), {, TernaryValue, result, =, super, ., testForEquality, (, that, ), ;, if, (, result, !=]
[), {, TernaryValue, result, =, super, ., testForEquality, (, that, ), ;, if, (, result, !=, null, ), {, return]
[super, ., testForEquality, (, that, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, if, (]
[super, ., testForEquality, (, that, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, if, (]
[super, ., testForEquality, (, that, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, if, (]
[super, ., testForEquality, (, that, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, if, (]
[;, if, (, result, !=, null, ), {, return, result, ;, }, if, (, that, ., isUnknownType, (, ), ||]
[;, if, (, result, !=, null, ), {, return, result, ;, }, if, (, that, ., isUnknownType, (, ), ||]
[!=, null, ), {, return, result, ;, }, if, (, that, ., isUnknownType, (, ), ||, that, ., isSubtype, (]
[), {, return, result, ;, }, if, (, that, ., isUnknownType, (, ), ||, that, ., isSubtype, (, getNativeType, (]
[), {, return, result, ;, }, if, (, that, ., isUnknownType, (, ), ||, that, ., isSubtype, (, getNativeType, (]
[if, (, that, ., isUnknownType, (, ), ||, that, ., isSubtype, (, getNativeType, (, JSTypeNative, ., NUMBER_STRING_BOOLEAN, ), ), ||]
[if, (, that, ., isUnknownType, (, ), ||, that, ., isSubtype, (, getNativeType, (, JSTypeNative, ., NUMBER_STRING_BOOLEAN, ), ), ||]
[that, ., isSubtype, (, getNativeType, (, JSTypeNative, ., NUMBER_STRING_BOOLEAN, ), ), ||, that, ., isObject, (, ), ), {, return]
[getNativeType, (, JSTypeNative, ., NUMBER_STRING_BOOLEAN, ), ), ||, that, ., isObject, (, ), ), {, return, UNKNOWN, ;, }, return]
[), ), {, return, UNKNOWN, ;, }, return, FALSE, ;, }, @, Override, public, boolean, isBooleanValueType, (, ), {, return]
[Override, public, boolean, isBooleanValueType, (, ), {, return, true, ;, }, @, Override, public, boolean, matchesNumberContext, (, ), {, return]
[Override, public, boolean, matchesNumberContext, (, ), {, return, true, ;, }, @, Override, public, boolean, matchesStringContext, (, ), {, return]
[Override, public, boolean, matchesStringContext, (, ), {, return, true, ;, }, @, Override, public, boolean, matchesObjectContext, (, ), {, return]
[Override, public, boolean, matchesObjectContext, (, ), {, return, true, ;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return]
[boolean, matchesObjectContext, (, ), {, return, true, ;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return, getNativeType, (]
[boolean, matchesObjectContext, (, ), {, return, true, ;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return, getNativeType, (]
[{, return, getNativeType, (, JSTypeNative, ., BOOLEAN_OBJECT_TYPE, ), ;, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return]
[(, boolean, forAnnotations, ), {, return, getDisplayName, (, ), ;, }, @, Override, public, String, getDisplayName, (, ), {, return]
[Override, public, String, getDisplayName, (, ), {, return, "boolean", ;, }, @, Override, public, BooleanLiteralSet, getPossibleToBooleanOutcomes, (, ), {, return]
[Override, public, String, getDisplayName, (, ), {, return, "boolean", ;, }, @, Override, public, BooleanLiteralSet, getPossibleToBooleanOutcomes, (, ), {, return]
[BOTH, ;, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, return]
[BOTH, ;, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, return]
