[data, ., category, ., CategoryDataset, ;, public, class, LayeredBarRenderer, extends, BarRenderer, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[., category, ., CategoryDataset, ;, public, class, LayeredBarRenderer, extends, BarRenderer, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[final, long, serialVersionUID, =, -, 8716572894780469487L, ;, protected, ObjectList, seriesBarWidthList, ;, public, LayeredBarRenderer, (, ), {, super, (, ), ;]
[final, long, serialVersionUID, =, -, 8716572894780469487L, ;, protected, ObjectList, seriesBarWidthList, ;, public, LayeredBarRenderer, (, ), {, super, (, ), ;]
[-, 8716572894780469487L, ;, protected, ObjectList, seriesBarWidthList, ;, public, LayeredBarRenderer, (, ), {, super, (, ), ;, this, ., seriesBarWidthList, =]
[., seriesBarWidthList, =, new, ObjectList, (, ), ;, }, public, double, getSeriesBarWidth, (, int, series, ), {, double, result, =]
[., seriesBarWidthList, =, new, ObjectList, (, ), ;, }, public, double, getSeriesBarWidth, (, int, series, ), {, double, result, =]
[;, }, public, double, getSeriesBarWidth, (, int, series, ), {, double, result, =, Double, ., NaN, ;, Number, n, =]
[double, getSeriesBarWidth, (, int, series, ), {, double, result, =, Double, ., NaN, ;, Number, n, =, (, Number, )]
[double, getSeriesBarWidth, (, int, series, ), {, double, result, =, Double, ., NaN, ;, Number, n, =, (, Number, )]
[double, getSeriesBarWidth, (, int, series, ), {, double, result, =, Double, ., NaN, ;, Number, n, =, (, Number, )]
[{, double, result, =, Double, ., NaN, ;, Number, n, =, (, Number, ), this, ., seriesBarWidthList, ., get, (]
[., NaN, ;, Number, n, =, (, Number, ), this, ., seriesBarWidthList, ., get, (, series, ), ;, if, (]
[., NaN, ;, Number, n, =, (, Number, ), this, ., seriesBarWidthList, ., get, (, series, ), ;, if, (]
[;, Number, n, =, (, Number, ), this, ., seriesBarWidthList, ., get, (, series, ), ;, if, (, n, !=]
[=, (, Number, ), this, ., seriesBarWidthList, ., get, (, series, ), ;, if, (, n, !=, null, ), {]
[Number, ), this, ., seriesBarWidthList, ., get, (, series, ), ;, if, (, n, !=, null, ), {, result, =]
[Number, ), this, ., seriesBarWidthList, ., get, (, series, ), ;, if, (, n, !=, null, ), {, result, =]
[series, ), ;, if, (, n, !=, null, ), {, result, =, n, ., doubleValue, (, ), ;, }, return]
[doubleValue, (, ), ;, }, return, result, ;, }, public, void, setSeriesBarWidth, (, int, series, ,, double, width, ), {]
[doubleValue, (, ), ;, }, return, result, ;, }, public, void, setSeriesBarWidth, (, int, series, ,, double, width, ), {]
[doubleValue, (, ), ;, }, return, result, ;, }, public, void, setSeriesBarWidth, (, int, series, ,, double, width, ), {]
[result, ;, }, public, void, setSeriesBarWidth, (, int, series, ,, double, width, ), {, this, ., seriesBarWidthList, ., set, (]
[}, public, void, setSeriesBarWidth, (, int, series, ,, double, width, ), {, this, ., seriesBarWidthList, ., set, (, series, ,]
[setSeriesBarWidth, (, int, series, ,, double, width, ), {, this, ., seriesBarWidthList, ., set, (, series, ,, new, Double, (]
[protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis, domainAxis, =]
[calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis, domainAxis, =, getDomainAxis, (]
[CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,]
[,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (]
[,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (]
[dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (, dataset, !=]
[CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (, dataset, !=, null, ), {, int, columns, =]
[CategoryAxis, domainAxis, =, getDomainAxis, (, plot, ,, dataset, ), ;, if, (, dataset, !=, null, ), {, int, columns, =]
[;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =]
[;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =]
[columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, dataset, ., getRowCount, (, ), ;, double, space, =]
[(, ), ;, int, rows, =, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =]
[(, ), ;, int, rows, =, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =]
[getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[(, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (]
[(, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[{, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[(, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =]
[(, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =]
[==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *]
[=, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =]
[(, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (]
[(, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (]
[;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (, columns, >]
[maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (, columns, >, 1, ), {]
[space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =]
[space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =]
[;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =]
[;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =]
[(, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *]
[columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (]
[columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (]
[columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (]
[columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (]
[1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -]
[1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -]
[., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -]
[., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -]
[double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -]
[(, 1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (]
[(, 1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (]
[1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, (]
[1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, (]
[domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, (, rows, *]
[(, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, (, rows, *, columns, ), >]
[domainAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {]
[domainAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {]
[), -, categoryMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (]
[), -, categoryMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (]
[;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[(, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /]
[(, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (]
[(, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (]
[), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, dataset, ., getColumnCount, (, ), ), ,]
[., min, (, used, /, (, dataset, ., getColumnCount, (, ), ), ,, maxWidth, ), ), ;, }, else, {]
[., min, (, used, /, (, dataset, ., getColumnCount, (, ), ), ,, maxWidth, ), ), ;, }, else, {]
[/, (, dataset, ., getColumnCount, (, ), ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (]
[/, (, dataset, ., getColumnCount, (, ), ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (]
[getColumnCount, (, ), ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (]
[), ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,]
[,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, PlotOrientation, orientation, =]
[,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, PlotOrientation, orientation, =]
[column, ,, boolean, selected, ,, int, pass, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[column, ,, boolean, selected, ,, int, pass, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[boolean, selected, ,, int, pass, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[boolean, selected, ,, int, pass, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==]
[), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (]
[=, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,]
[., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,]
[(, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,]
[(, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,]
[==, PlotOrientation, ., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,]
[., HORIZONTAL, ), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,]
[), {, drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,]
[drawHorizontalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,]
[,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, else, if, (]
[,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, else, if, (]
[,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, else, if, (, orientation, ==]
[,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, else, if, (, orientation, ==]
[dataset, ,, row, ,, column, ,, selected, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[row, ,, column, ,, selected, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (]
[column, ,, selected, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,]
[selected, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,]
[else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,]
[(, orientation, ==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,]
[==, PlotOrientation, ., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,]
[., VERTICAL, ), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,]
[), {, drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,]
[drawVerticalItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,]
[,, ValueAxis, rangeAxis, ,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ), {, Number, dataValue, =]
[,, ValueAxis, rangeAxis, ,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ), {, Number, dataValue, =]
[CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ), {, Number, dataValue, =, dataset, ., getValue, (]
[,, int, row, ,, int, column, ,, boolean, selected, ), {, Number, dataValue, =, dataset, ., getValue, (, row, ,]
[column, ,, boolean, selected, ), {, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[column, ,, boolean, selected, ), {, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[boolean, selected, ), {, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==]
[getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =]
[getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =]
[dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, double, base, =]
[return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, double, base, =, 0.0, ;, double, lclip, =]
[return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, double, base, =, 0.0, ;, double, lclip, =]
[(, ), ;, double, base, =, 0.0, ;, double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =]
[(, ), ;, double, base, =, 0.0, ;, double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =]
[double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (]
[double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (]
[=, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (, uclip, <=]
[), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (, uclip, <=, 0.0, ), {, if, (]
[), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (, uclip, <=, 0.0, ), {, if, (]
[double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (, uclip, <=, 0.0, ), {, if, (, value, >=]
[(, ), ;, if, (, uclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {, return, ;, }]
[;, if, (, uclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =]
[<=, 0.0, ), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (]
[<=, 0.0, ), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (]
[), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (, value, <=]
[(, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (, value, <=, lclip, ), {]
[>=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (, value, <=, lclip, ), {, value, =]
[base, =, uclip, ;, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (]
[base, =, uclip, ;, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (]
[uclip, ;, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=]
[<=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (]
[<=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (]
[), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=]
[=, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {]
[;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {, value, =]
[<=, 0.0, ), {, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (]
[<=, 0.0, ), {, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (]
[), {, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (, value, <=]
[(, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (, value, <=, lclip, ), {]
[>=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (, value, <=, lclip, ), {, value, =]
[else, {, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, }, else, {, if, (]
[else, {, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, }, else, {, if, (]
[if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, }, else, {, if, (, value, <=]
[{, value, =, lclip, ;, }, }, }, else, {, if, (, value, <=, lclip, ), {, return, ;, }]
[=, lclip, ;, }, }, }, else, {, if, (, value, <=, lclip, ), {, return, ;, }, base, =]
[}, }, else, {, if, (, value, <=, lclip, ), {, return, ;, }, base, =, lclip, ;, if, (]
[}, }, else, {, if, (, value, <=, lclip, ), {, return, ;, }, base, =, lclip, ;, if, (]
[else, {, if, (, value, <=, lclip, ), {, return, ;, }, base, =, lclip, ;, if, (, value, >=]
[(, value, <=, lclip, ), {, return, ;, }, base, =, lclip, ;, if, (, value, >=, uclip, ), {]
[<=, lclip, ), {, return, ;, }, base, =, lclip, ;, if, (, value, >=, uclip, ), {, value, =]
[base, =, lclip, ;, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =]
[base, =, lclip, ;, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =]
[), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transX1, =]
[), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transX1, =]
[uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transX1, =, rangeAxis, ., valueToJava2D, (]
[}, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,]
[RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,]
[(, ), ;, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =]
[(, ), ;, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =]
[transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (]
[rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,]
[valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,]
[edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectX, =]
[edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectX, =]
[transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectX, =, Math, ., min, (]
[rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectX, =, Math, ., min, (, transX1, ,]
[dataArea, ,, edge, ), ;, double, rectX, =, Math, ., min, (, transX1, ,, transX2, ), ;, double, rectWidth, =]
[dataArea, ,, edge, ), ;, double, rectX, =, Math, ., min, (, transX1, ,, transX2, ), ;, double, rectWidth, =]
[;, double, rectX, =, Math, ., min, (, transX1, ,, transX2, ), ;, double, rectWidth, =, Math, ., abs, (]
[;, double, rectX, =, Math, ., min, (, transX1, ,, transX2, ), ;, double, rectWidth, =, Math, ., abs, (]
[rectX, =, Math, ., min, (, transX1, ,, transX2, ), ;, double, rectWidth, =, Math, ., abs, (, transX2, -]
[transX1, ,, transX2, ), ;, double, rectWidth, =, Math, ., abs, (, transX2, -, transX1, ), ;, double, rectY, =]
[transX1, ,, transX2, ), ;, double, rectWidth, =, Math, ., abs, (, transX2, -, transX1, ), ;, double, rectY, =]
[transX1, ,, transX2, ), ;, double, rectWidth, =, Math, ., abs, (, transX2, -, transX1, ), ;, double, rectY, =]
[;, double, rectWidth, =, Math, ., abs, (, transX2, -, transX1, ), ;, double, rectY, =, domainAxis, ., getCategoryMiddle, (]
[rectWidth, =, Math, ., abs, (, transX2, -, transX1, ), ;, double, rectY, =, domainAxis, ., getCategoryMiddle, (, column, ,]
[abs, (, transX2, -, transX1, ), ;, double, rectY, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,]
[transX2, -, transX1, ), ;, double, rectY, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[transX2, -, transX1, ), ;, double, rectY, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /]
[dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =]
[), -, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =, getRowCount, (, ), ;, double, shift, =]
[(, ), /, 2.0, ;, int, seriesCount, =, getRowCount, (, ), ;, double, shift, =, 0.0, ;, double, rectHeight, =]
[int, seriesCount, =, getRowCount, (, ), ;, double, shift, =, 0.0, ;, double, rectHeight, =, 0.0, ;, double, widthFactor, =]
[), ;, double, shift, =, 0.0, ;, double, rectHeight, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =]
[double, shift, =, 0.0, ;, double, rectHeight, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (]
[double, rectHeight, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (]
[rectHeight, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !]
[rectHeight, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !]
[double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !, Double, ., isNaN, (]
[;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {]
[seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =]
[(, row, ), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }]
[), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =]
[), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =]
[if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *]
[if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *]
[(, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;]
[), ), {, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =]
[), ), {, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =]
[{, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =, rectY, +]
[{, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =, rectY, +]
[{, widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =, rectY, +]
[widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =, rectY, +, (]
[widthFactor, =, seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =, rectY, +, (]
[seriesBarWidth, ;, }, rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =, rectY, +, (, 1, -]
[rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =, rectY, +, (, 1, -, widthFactor, ), *]
[rectHeight, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectY, =, rectY, +, (, 1, -, widthFactor, ), *]
[getBarWidth, (, ), ;, rectY, =, rectY, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /]
[rectY, =, rectY, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (]
[rectY, =, rectY, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (]
[rectY, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >]
[1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {]
[widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =]
[widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =]
[widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =]
[*, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight, *]
[., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight, *, 0.20, /]
[getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight, *, 0.20, /, (]
[getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight, *, 0.20, /, (]
[), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectHeight, *, 0.20, /, (, seriesCount, -]
[>, 1, ), {, shift, =, rectHeight, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =]
[=, rectHeight, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (]
[*, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,]
[0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (]
[0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (]
[(, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +]
[seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +, (]
[seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +, (]
[-, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +, (, (]
[-, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +, (, (]
[-, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +, (, (]
[), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +, (, (, seriesCount, -]
[}, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +, (, (, seriesCount, -, 1, -]
[=, new, Rectangle2D, ., Double, (, rectX, ,, (, rectY, +, (, (, seriesCount, -, 1, -, row, ), *]
[Double, (, rectX, ,, (, rectY, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,]
[rectX, ,, (, rectY, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,]
[,, (, rectY, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,, (]
[,, (, rectY, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,, (]
[rectY, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -]
[rectY, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -]
[rectY, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -]
[+, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (]
[+, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (]
[+, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (]
[(, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -]
[-, 1, -, row, ), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -]
[row, ), *, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -, row, ), *]
[*, shift, ), ), ,, rectWidth, ,, (, rectHeight, -, (, seriesCount, -, 1, -, row, ), *, shift, *]
[(, rectHeight, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ), ;, Paint, itemPaint, =]
[-, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ), ;, Paint, itemPaint, =, getItemPaint, (]
[seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,]
[1, -, row, ), *, shift, *, 2, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,]
[*, 2, ), ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =]
[itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (]
[itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (]
[itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (]
[getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=]
[row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&]
[row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&]
[), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {]
[GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =]
[GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =]
[(, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (]
[if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, )]
[t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,]
[itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }]
[itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }]
[{, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (]
[t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;]
[t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;]
[(, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (]
[bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (]
[bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (]
[g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&]
[g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&]
[g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&]
[;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >]
[), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =]
[if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (]
[isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,]
[), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,]
[), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =]
[BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (]
[{, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,]
[stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,]
[,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (]
[,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (]
[,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (]
[,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=]
[), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&]
[), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&]
[Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=]
[getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {]
[getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {]
[column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (]
[), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;]
[), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;]
[stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (]
[&&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;]
[&&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;]
[), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =]
[., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (]
[(, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,]
[), ;, g2, ., draw, (, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,]
[(, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[(, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[(, bar, ), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[), ;, }, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=]
[}, }, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&]
[CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (]
[=, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,]
[(, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,]
[,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {]
[), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (]
[if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,]
[generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,]
[null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,]
[isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,]
[row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,]
[column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,]
[selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[{, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (]
[{, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (]
[(, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =]
[,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=]
[), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[=, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[(, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,]
[,, ValueAxis, rangeAxis, ,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ), {, Number, dataValue, =]
[,, ValueAxis, rangeAxis, ,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ), {, Number, dataValue, =]
[CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ), {, Number, dataValue, =, dataset, ., getValue, (]
[,, int, row, ,, int, column, ,, boolean, selected, ), {, Number, dataValue, =, dataset, ., getValue, (, row, ,]
[column, ,, boolean, selected, ), {, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[column, ,, boolean, selected, ), {, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[boolean, selected, ), {, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==]
[getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, rectX, =]
[getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, rectX, =]
[getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, rectX, =]
[column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, rectX, =, domainAxis, ., getCategoryMiddle, (]
[;, if, (, dataValue, ==, null, ), {, return, ;, }, double, rectX, =, domainAxis, ., getCategoryMiddle, (, column, ,]
[==, null, ), {, return, ;, }, double, rectX, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,]
[), {, return, ;, }, double, rectX, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[), {, return, ;, }, double, rectX, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /]
[dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =]
[), -, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =, getRowCount, (, ), ;, double, value, =]
[), -, state, ., getBarWidth, (, ), /, 2.0, ;, int, seriesCount, =, getRowCount, (, ), ;, double, value, =]
[;, int, seriesCount, =, getRowCount, (, ), ;, double, value, =, dataValue, ., doubleValue, (, ), ;, double, base, =]
[(, ), ;, double, value, =, dataValue, ., doubleValue, (, ), ;, double, base, =, 0.0, ;, double, lclip, =]
[(, ), ;, double, value, =, dataValue, ., doubleValue, (, ), ;, double, base, =, 0.0, ;, double, lclip, =]
[(, ), ;, double, base, =, 0.0, ;, double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =]
[(, ), ;, double, base, =, 0.0, ;, double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =]
[double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (]
[double, lclip, =, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (]
[=, rangeAxis, ., getLowerBound, (, ), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (, uclip, <=]
[), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (, uclip, <=, 0.0, ), {, if, (]
[), ;, double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (, uclip, <=, 0.0, ), {, if, (]
[double, uclip, =, rangeAxis, ., getUpperBound, (, ), ;, if, (, uclip, <=, 0.0, ), {, if, (, value, >=]
[(, ), ;, if, (, uclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {, return, ;, }]
[;, if, (, uclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =]
[<=, 0.0, ), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (]
[<=, 0.0, ), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (]
[), {, if, (, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (, value, <=]
[(, value, >=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (, value, <=, lclip, ), {]
[>=, uclip, ), {, return, ;, }, base, =, uclip, ;, if, (, value, <=, lclip, ), {, value, =]
[base, =, uclip, ;, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (]
[base, =, uclip, ;, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (]
[uclip, ;, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=]
[<=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (]
[<=, lclip, ), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (]
[), {, value, =, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=]
[=, lclip, ;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {]
[;, }, }, else, if, (, lclip, <=, 0.0, ), {, if, (, value, >=, uclip, ), {, value, =]
[<=, 0.0, ), {, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (]
[<=, 0.0, ), {, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (]
[), {, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (, value, <=]
[(, value, >=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (, value, <=, lclip, ), {]
[>=, uclip, ), {, value, =, uclip, ;, }, else, {, if, (, value, <=, lclip, ), {, value, =]
[else, {, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, }, else, {, if, (]
[else, {, if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, }, else, {, if, (]
[if, (, value, <=, lclip, ), {, value, =, lclip, ;, }, }, }, else, {, if, (, value, <=]
[{, value, =, lclip, ;, }, }, }, else, {, if, (, value, <=, lclip, ), {, return, ;, }]
[=, lclip, ;, }, }, }, else, {, if, (, value, <=, lclip, ), {, return, ;, }, base, =]
[=, lclip, ;, }, }, }, else, {, if, (, value, <=, lclip, ), {, return, ;, }, base, =]
[if, (, value, <=, lclip, ), {, return, ;, }, base, =, rangeAxis, ., getLowerBound, (, ), ;, if, (]
[if, (, value, <=, lclip, ), {, return, ;, }, base, =, rangeAxis, ., getLowerBound, (, ), ;, if, (]
[value, <=, lclip, ), {, return, ;, }, base, =, rangeAxis, ., getLowerBound, (, ), ;, if, (, value, >=]
[), {, return, ;, }, base, =, rangeAxis, ., getLowerBound, (, ), ;, if, (, value, >=, uclip, ), {]
[return, ;, }, base, =, rangeAxis, ., getLowerBound, (, ), ;, if, (, value, >=, uclip, ), {, value, =]
[getLowerBound, (, ), ;, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =]
[getLowerBound, (, ), ;, if, (, value, >=, uclip, ), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =]
[), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transY1, =]
[), {, value, =, uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transY1, =]
[uclip, ;, }, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transY1, =, rangeAxis, ., valueToJava2D, (]
[}, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transY1, =, rangeAxis, ., valueToJava2D, (, base, ,]
[RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transY1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,]
[(, ), ;, double, transY1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transY2, =]
[(, ), ;, double, transY1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transY2, =]
[transY1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transY2, =, rangeAxis, ., valueToJava2D, (]
[rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transY2, =, rangeAxis, ., valueToJava2D, (, value, ,]
[valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transY2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,]
[edge, ), ;, double, transY2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectY, =]
[edge, ), ;, double, transY2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectY, =]
[transY2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectY, =, Math, ., min, (]
[rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, double, rectY, =, Math, ., min, (, transY2, ,]
[dataArea, ,, edge, ), ;, double, rectY, =, Math, ., min, (, transY2, ,, transY1, ), ;, double, rectWidth, =]
[dataArea, ,, edge, ), ;, double, rectY, =, Math, ., min, (, transY2, ,, transY1, ), ;, double, rectWidth, =]
[., min, (, transY2, ,, transY1, ), ;, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =]
[., min, (, transY2, ,, transY1, ), ;, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =]
[,, transY1, ), ;, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., abs, (]
[,, transY1, ), ;, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., abs, (]
[), ;, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., abs, (, transY2, -]
[., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., abs, (, transY2, -, transY1, ), ;, double, shift, =]
[(, ), ;, double, rectHeight, =, Math, ., abs, (, transY2, -, transY1, ), ;, double, shift, =, 0.0, ;]
[;, double, rectHeight, =, Math, ., abs, (, transY2, -, transY1, ), ;, double, shift, =, 0.0, ;, rectWidth, =]
[., abs, (, transY2, -, transY1, ), ;, double, shift, =, 0.0, ;, rectWidth, =, 0.0, ;, double, widthFactor, =]
[transY1, ), ;, double, shift, =, 0.0, ;, rectWidth, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =]
[;, double, shift, =, 0.0, ;, rectWidth, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (]
[;, rectWidth, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (]
[rectWidth, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !]
[rectWidth, =, 0.0, ;, double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !]
[double, widthFactor, =, 1.0, ;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !, Double, ., isNaN, (]
[;, double, seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {]
[seriesBarWidth, =, getSeriesBarWidth, (, row, ), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =]
[(, row, ), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }]
[), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =]
[), ;, if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =]
[if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *]
[if, (, !, Double, ., isNaN, (, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *]
[(, seriesBarWidth, ), ), {, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;]
[), ), {, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =]
[), ), {, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =]
[{, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =, rectX, +]
[{, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =, rectX, +]
[{, widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =, rectX, +]
[widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =, rectX, +, (]
[widthFactor, =, seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =, rectX, +, (]
[seriesBarWidth, ;, }, rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =, rectX, +, (, 1, -]
[rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =, rectX, +, (, 1, -, widthFactor, ), *]
[rectWidth, =, widthFactor, *, state, ., getBarWidth, (, ), ;, rectX, =, rectX, +, (, 1, -, widthFactor, ), *]
[getBarWidth, (, ), ;, rectX, =, rectX, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /]
[rectX, =, rectX, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (]
[rectX, =, rectX, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (]
[rectX, +, (, 1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >]
[1, -, widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {]
[widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =]
[widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =]
[widthFactor, ), *, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =]
[*, state, ., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth, *]
[., getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth, *, 0.20, /]
[getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth, *, 0.20, /, (]
[getBarWidth, (, ), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth, *, 0.20, /, (]
[), /, 2.0, ;, if, (, seriesCount, >, 1, ), {, shift, =, rectWidth, *, 0.20, /, (, seriesCount, -]
[>, 1, ), {, shift, =, rectWidth, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =]
[=, rectWidth, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (]
[rectWidth, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (]
[rectWidth, *, 0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (]
[0.20, /, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +]
[/, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (]
[/, (, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (]
[(, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (, (]
[(, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (, (]
[(, seriesCount, -, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (, (]
[-, 1, ), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (, (, seriesCount, -]
[), ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (, (, seriesCount, -, 1, -]
[Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, (, rectX, +, (, (, seriesCount, -, 1, -, row, ), *]
[Rectangle2D, ., Double, (, (, rectX, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,]
[Double, (, (, rectX, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectY, ,]
[(, (, rectX, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectY, ,, (]
[(, (, rectX, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectY, ,, (]
[rectX, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectY, ,, (, rectWidth, -]
[rectX, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectY, ,, (, rectWidth, -]
[rectX, +, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectY, ,, (, rectWidth, -]
[+, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectY, ,, (, rectWidth, -, (]
[+, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectY, ,, (, rectWidth, -, (]
[+, (, (, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectY, ,, (, rectWidth, -, (]
[(, seriesCount, -, 1, -, row, ), *, shift, ), ), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -]
[-, 1, -, row, ), *, shift, ), ), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -]
[row, ), *, shift, ), ), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -, row, ), *]
[*, shift, ), ), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -, row, ), *, shift, *]
[), ,, rectY, ,, (, rectWidth, -, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ,]
[-, (, seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ,, rectHeight, ), ;, Paint, itemPaint, =]
[seriesCount, -, 1, -, row, ), *, shift, *, 2, ), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (]
[1, -, row, ), *, shift, *, 2, ), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,]
[row, ), *, shift, *, 2, ), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,]
[), ,, rectHeight, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =]
[itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (]
[itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (]
[itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (]
[getItemPaint, (, row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=]
[row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&]
[row, ,, column, ,, selected, ), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&]
[), ;, GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {]
[GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =]
[GradientPaintTransformer, t, =, getGradientPaintTransformer, (, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =]
[(, ), ;, if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (]
[if, (, t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, )]
[t, !=, null, &&, itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,]
[itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }]
[itemPaint, instanceof, GradientPaint, ), {, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }]
[{, itemPaint, =, t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (]
[t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;]
[t, ., transform, (, (, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;]
[(, GradientPaint, ), itemPaint, ,, bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (]
[bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (]
[bar, ), ;, }, g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (]
[g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&]
[g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&]
[g2, ., setPaint, (, itemPaint, ), ;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&]
[;, g2, ., fill, (, bar, ), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >]
[), ;, if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =]
[if, (, isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (]
[isDrawBarOutline, (, ), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,]
[), &&, state, ., getBarWidth, (, ), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,]
[), >, BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =]
[BAR_OUTLINE_WIDTH_THRESHOLD, ), {, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (]
[{, Stroke, stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,]
[stroke, =, getItemOutlineStroke, (, row, ,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,]
[,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (]
[,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (]
[,, column, ,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (]
[,, selected, ), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=]
[), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&]
[), ;, Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&]
[Paint, paint, =, getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=]
[getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {]
[getItemOutlinePaint, (, row, ,, column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {]
[column, ,, selected, ), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (]
[), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;]
[), ;, if, (, stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;]
[stroke, !=, null, &&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (]
[&&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;]
[&&, paint, !=, null, ), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;]
[), {, g2, ., setStroke, (, stroke, ), ;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, double, transX1, =]
[;, g2, ., setPaint, (, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, double, transX1, =]
[(, paint, ), ;, g2, ., draw, (, bar, ), ;, }, }, double, transX1, =, rangeAxis, ., valueToJava2D, (]
[), ;, g2, ., draw, (, bar, ), ;, }, }, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,]
[g2, ., draw, (, bar, ), ;, }, }, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,]
[;, }, }, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =]
[;, }, }, double, transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =]
[transX1, =, rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (]
[rangeAxis, ., valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,]
[valueToJava2D, (, base, ,, dataArea, ,, edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,]
[edge, ), ;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, CategoryItemLabelGenerator, generator, =]
[;, double, transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (]
[transX2, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,]
[rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,]
[,, dataArea, ,, edge, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[,, dataArea, ,, edge, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[,, dataArea, ,, edge, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[,, edge, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=]
[), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&]
[CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (]
[=, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,]
[(, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,]
[,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {]
[), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (]
[if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,]
[generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,]
[null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,]
[isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,]
[row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,]
[column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,]
[selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[{, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (]
[{, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (]
[(, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =]
[,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[,, (, transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[transX1, >, transX2, ), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=]
[), ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[=, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[(, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,]
