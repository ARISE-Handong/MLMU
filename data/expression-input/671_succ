[), ;, }, public, double, [, ], fit, (, double, [, ], initialGuess, ), {, return, fit, (, new, HarmonicOscillator]
[;, }, public, double, [, ], fit, (, ), {, return, fit, (, (, new, ParameterGuesser, (, getObservations, (, )]
[,, initialGuess, ), ;, }, public, double, [, ], fit, (, ), {, return, fit, (, (, new, ParameterGuesser, (]
[), ;, }, public, double, [, ], fit, (, ), {, return, fit, (, (, new, ParameterGuesser, (, getObservations, (]
[;, }, public, static, class, ParameterGuesser, {, private, final, double, a, ;, private, final, double, omega, ;, private, final, double]
[), ;, }, public, static, class, ParameterGuesser, {, private, final, double, a, ;, private, final, double, omega, ;, private, final]
[., guess, (, ), ), ;, }, public, static, class, ParameterGuesser, {, private, final, double, a, ;, private, final, double]
[), ., guess, (, ), ), ;, }, public, static, class, ParameterGuesser, {, private, final, double, a, ;, private, final]
[), ), ., guess, (, ), ), ;, }, public, static, class, ParameterGuesser, {, private, final, double, a, ;, private]
[), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, observations, ., length, ,, 4, ,, true, ), ;, }]
[<, 4, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, observations, ., length, ,, 4, ,, true, )]
[., length, <, 4, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, observations, ., length, ,, 4, ,]
[), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, observations, ., length, ,, 4, ,, true, ), ;, }]
[;, }, final, WeightedObservedPoint, [, ], sorted, =, sortObservations, (, observations, ), ;, final, double, aOmega, [, ], =, guessAOmega]
[,, observations, ., length, ,, 4, ,, true, ), ;, }, final, WeightedObservedPoint, [, ], sorted, =, sortObservations, (, observations]
[., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, observations, ., length, ,, 4, ,, true, ), ;, }, final, WeightedObservedPoint, [, ], sorted, =, sortObservations]
[,, 4, ,, true, ), ;, }, final, WeightedObservedPoint, [, ], sorted, =, sortObservations, (, observations, ), ;, final, double]
[., length, ,, 4, ,, true, ), ;, }, final, WeightedObservedPoint, [, ], sorted, =, sortObservations, (, observations, ), ;]
[,, true, ), ;, }, final, WeightedObservedPoint, [, ], sorted, =, sortObservations, (, observations, ), ;, final, double, aOmega, []
[), ;, }, final, WeightedObservedPoint, [, ], sorted, =, sortObservations, (, observations, ), ;, final, double, aOmega, [, ], =]
[;, final, double, aOmega, [, ], =, guessAOmega, (, sorted, ), ;, a, =, aOmega, [, 0, ], ;, omega]
[), ;, final, double, aOmega, [, ], =, guessAOmega, (, sorted, ), ;, a, =, aOmega, [, 0, ], ;]
[;, a, =, aOmega, [, 0, ], ;, omega, =, aOmega, [, 1, ], ;, phi, =, guessPhi, (, sorted]
[), ;, a, =, aOmega, [, 0, ], ;, omega, =, aOmega, [, 1, ], ;, phi, =, guessPhi, (]
[=, aOmega, [, 0, ], ;, omega, =, aOmega, [, 1, ], ;, phi, =, guessPhi, (, sorted, ), ;]
[;, omega, =, aOmega, [, 1, ], ;, phi, =, guessPhi, (, sorted, ), ;, }, public, double, [, ]]
[[, 0, ], ;, omega, =, aOmega, [, 1, ], ;, phi, =, guessPhi, (, sorted, ), ;, }, public]
[], ;, omega, =, aOmega, [, 1, ], ;, phi, =, guessPhi, (, sorted, ), ;, }, public, double, []
[=, aOmega, [, 1, ], ;, phi, =, guessPhi, (, sorted, ), ;, }, public, double, [, ], guess, (]
[;, phi, =, guessPhi, (, sorted, ), ;, }, public, double, [, ], guess, (, ), {, return, new, double]
[[, 1, ], ;, phi, =, guessPhi, (, sorted, ), ;, }, public, double, [, ], guess, (, ), {]
[], ;, phi, =, guessPhi, (, sorted, ), ;, }, public, double, [, ], guess, (, ), {, return, new]
[=, guessPhi, (, sorted, ), ;, }, public, double, [, ], guess, (, ), {, return, new, double, [, ]]
[;, }, public, double, [, ], guess, (, ), {, return, new, double, [, ], {, a, ,, omega, ,]
[), ;, }, public, double, [, ], guess, (, ), {, return, new, double, [, ], {, a, ,, omega]
[;, }, private, WeightedObservedPoint, [, ], sortObservations, (, WeightedObservedPoint, [, ], unsorted, ), {, final, WeightedObservedPoint, [, ], observations, =]
[;, }, private, WeightedObservedPoint, [, ], sortObservations, (, WeightedObservedPoint, [, ], unsorted, ), {, final, WeightedObservedPoint, [, ], observations, =]
[,, omega, ,, phi, }, ;, }, private, WeightedObservedPoint, [, ], sortObservations, (, WeightedObservedPoint, [, ], unsorted, ), {, final]
[,, phi, }, ;, }, private, WeightedObservedPoint, [, ], sortObservations, (, WeightedObservedPoint, [, ], unsorted, ), {, final, WeightedObservedPoint, []
[}, ;, }, private, WeightedObservedPoint, [, ], sortObservations, (, WeightedObservedPoint, [, ], unsorted, ), {, final, WeightedObservedPoint, [, ], observations]
[;, WeightedObservedPoint, curr, =, observations, [, 0, ], ;, for, (, int, j, =, 1, ;, j, <, observations, .]
[., clone, (, ), ;, WeightedObservedPoint, curr, =, observations, [, 0, ], ;, for, (, int, j, =, 1, ;]
[;, for, (, int, j, =, 1, ;, j, <, observations, ., length, ;, ++, j, ), {, WeightedObservedPoint, prec]
[[, 0, ], ;, for, (, int, j, =, 1, ;, j, <, observations, ., length, ;, ++, j, )]
[], ;, for, (, int, j, =, 1, ;, j, <, observations, ., length, ;, ++, j, ), {, WeightedObservedPoint]
[;, j, <, observations, ., length, ;, ++, j, ), {, WeightedObservedPoint, prec, =, curr, ;, curr, =, observations, []
[;, ++, j, ), {, WeightedObservedPoint, prec, =, curr, ;, curr, =, observations, [, j, ], ;, if, (, curr]
[<, observations, ., length, ;, ++, j, ), {, WeightedObservedPoint, prec, =, curr, ;, curr, =, observations, [, j, ]]
[;, ++, j, ), {, WeightedObservedPoint, prec, =, curr, ;, curr, =, observations, [, j, ], ;, if, (, curr]
[., length, ;, ++, j, ), {, WeightedObservedPoint, prec, =, curr, ;, curr, =, observations, [, j, ], ;, if]
[), {, WeightedObservedPoint, prec, =, curr, ;, curr, =, observations, [, j, ], ;, if, (, curr, ., getX, (]
[), {, WeightedObservedPoint, prec, =, curr, ;, curr, =, observations, [, j, ], ;, if, (, curr, ., getX, (]
[;, curr, =, observations, [, j, ], ;, if, (, curr, ., getX, (, ), <, prec, ., getX, (]
[=, observations, [, j, ], ;, if, (, curr, ., getX, (, ), <, prec, ., getX, (, ), )]
[;, if, (, curr, ., getX, (, ), <, prec, ., getX, (, ), ), {, int, i, =, j]
[[, j, ], ;, if, (, curr, ., getX, (, ), <, prec, ., getX, (, ), ), {, int]
[], ;, if, (, curr, ., getX, (, ), <, prec, ., getX, (, ), ), {, int, i, =]
[), {, int, i, =, j, -, 1, ;, WeightedObservedPoint, mI, =, observations, [, i, ], ;, while, (, (]
[<, prec, ., getX, (, ), ), {, int, i, =, j, -, 1, ;, WeightedObservedPoint, mI, =, observations, []
[., getX, (, ), <, prec, ., getX, (, ), ), {, int, i, =, j, -, 1, ;, WeightedObservedPoint]
[), {, int, i, =, j, -, 1, ;, WeightedObservedPoint, mI, =, observations, [, i, ], ;, while, (, (]
[., getX, (, ), ), {, int, i, =, j, -, 1, ;, WeightedObservedPoint, mI, =, observations, [, i, ]]
[;, WeightedObservedPoint, mI, =, observations, [, i, ], ;, while, (, (, i, >=, 0, ), &&, (, curr, .]
[-, 1, ;, WeightedObservedPoint, mI, =, observations, [, i, ], ;, while, (, (, i, >=, 0, ), &&, (]
[;, WeightedObservedPoint, mI, =, observations, [, i, ], ;, while, (, (, i, >=, 0, ), &&, (, curr, .]
[;, while, (, (, i, >=, 0, ), &&, (, curr, ., getX, (, ), <, mI, ., getX, (]
[[, i, ], ;, while, (, (, i, >=, 0, ), &&, (, curr, ., getX, (, ), <, mI]
[], ;, while, (, (, i, >=, 0, ), &&, (, curr, ., getX, (, ), <, mI, ., getX]
[), {, observations, [, i, +, 1, ], =, mI, ;, if, (, i, --, !=, 0, ), {, mI]
[&&, (, curr, ., getX, (, ), <, mI, ., getX, (, ), ), ), {, observations, [, i, +]
[), &&, (, curr, ., getX, (, ), <, mI, ., getX, (, ), ), ), {, observations, [, i]
[>=, 0, ), &&, (, curr, ., getX, (, ), <, mI, ., getX, (, ), ), ), {, observations]
[), &&, (, curr, ., getX, (, ), <, mI, ., getX, (, ), ), ), {, observations, [, i]
[), {, observations, [, i, +, 1, ], =, mI, ;, if, (, i, --, !=, 0, ), {, mI]
[), ), {, observations, [, i, +, 1, ], =, mI, ;, if, (, i, --, !=, 0, ), {]
[<, mI, ., getX, (, ), ), ), {, observations, [, i, +, 1, ], =, mI, ;, if, (]
[., getX, (, ), <, mI, ., getX, (, ), ), ), {, observations, [, i, +, 1, ], =]
[), ), {, observations, [, i, +, 1, ], =, mI, ;, if, (, i, --, !=, 0, ), {]
[., getX, (, ), ), ), {, observations, [, i, +, 1, ], =, mI, ;, if, (, i, --]
[=, mI, ;, if, (, i, --, !=, 0, ), {, mI, =, observations, [, i, ], ;, }, }]
[[, i, +, 1, ], =, mI, ;, if, (, i, --, !=, 0, ), {, mI, =, observations, []
[], =, mI, ;, if, (, i, --, !=, 0, ), {, mI, =, observations, [, i, ], ;, }]
[+, 1, ], =, mI, ;, if, (, i, --, !=, 0, ), {, mI, =, observations, [, i, ]]
[], =, mI, ;, if, (, i, --, !=, 0, ), {, mI, =, observations, [, i, ], ;, }]
[;, if, (, i, --, !=, 0, ), {, mI, =, observations, [, i, ], ;, }, }, observations, []
[), {, mI, =, observations, [, i, ], ;, }, }, observations, [, i, +, 1, ], =, curr, ;]
[!=, 0, ), {, mI, =, observations, [, i, ], ;, }, }, observations, [, i, +, 1, ], =]
[--, !=, 0, ), {, mI, =, observations, [, i, ], ;, }, }, observations, [, i, +, 1, ]]
[), {, mI, =, observations, [, i, ], ;, }, }, observations, [, i, +, 1, ], =, curr, ;]
[=, observations, [, i, ], ;, }, }, observations, [, i, +, 1, ], =, curr, ;, curr, =, observations]
[;, }, }, observations, [, i, +, 1, ], =, curr, ;, curr, =, observations, [, j, ], ;, }]
[[, i, ], ;, }, }, observations, [, i, +, 1, ], =, curr, ;, curr, =, observations, [, j]
[], ;, }, }, observations, [, i, +, 1, ], =, curr, ;, curr, =, observations, [, j, ], ;]
[=, curr, ;, curr, =, observations, [, j, ], ;, }, }, return, observations, ;, }, private, double, [, ]]
[[, i, +, 1, ], =, curr, ;, curr, =, observations, [, j, ], ;, }, }, return, observations, ;]
[], =, curr, ;, curr, =, observations, [, j, ], ;, }, }, return, observations, ;, }, private, double, []
[+, 1, ], =, curr, ;, curr, =, observations, [, j, ], ;, }, }, return, observations, ;, }, private]
[], =, curr, ;, curr, =, observations, [, j, ], ;, }, }, return, observations, ;, }, private, double, []
[;, curr, =, observations, [, j, ], ;, }, }, return, observations, ;, }, private, double, [, ], guessAOmega, (]
[=, observations, [, j, ], ;, }, }, return, observations, ;, }, private, double, [, ], guessAOmega, (, WeightedObservedPoint, []
[;, }, }, return, observations, ;, }, private, double, [, ], guessAOmega, (, WeightedObservedPoint, [, ], observations, ), {, final]
[[, j, ], ;, }, }, return, observations, ;, }, private, double, [, ], guessAOmega, (, WeightedObservedPoint, [, ], observations]
[], ;, }, }, return, observations, ;, }, private, double, [, ], guessAOmega, (, WeightedObservedPoint, [, ], observations, ), {]
[;, }, private, double, [, ], guessAOmega, (, WeightedObservedPoint, [, ], observations, ), {, final, double, [, ], aOmega, =]
[;, double, sx2, =, 0, ;, double, sy2, =, 0, ;, double, sxy, =, 0, ;, double, sxz, =, 0]
[], ;, double, sx2, =, 0, ;, double, sy2, =, 0, ;, double, sxy, =, 0, ;, double, sxz, =]
[;, double, sy2, =, 0, ;, double, sxy, =, 0, ;, double, sxz, =, 0, ;, double, syz, =, 0]
[;, double, sxy, =, 0, ;, double, sxz, =, 0, ;, double, syz, =, 0, ;, double, currentX, =, observations]
[;, double, sxz, =, 0, ;, double, syz, =, 0, ;, double, currentX, =, observations, [, 0, ], ., getX]
[;, double, syz, =, 0, ;, double, currentX, =, observations, [, 0, ], ., getX, (, ), ;, double, currentY]
[;, double, currentX, =, observations, [, 0, ], ., getX, (, ), ;, double, currentY, =, observations, [, 0, ]]
[;, double, currentY, =, observations, [, 0, ], ., getY, (, ), ;, double, f2Integral, =, 0, ;, double, fPrime2Integral]
[., getX, (, ), ;, double, currentY, =, observations, [, 0, ], ., getY, (, ), ;, double, f2Integral, =]
[[, 0, ], ., getX, (, ), ;, double, currentY, =, observations, [, 0, ], ., getY, (, ), ;]
[], ., getX, (, ), ;, double, currentY, =, observations, [, 0, ], ., getY, (, ), ;, double, f2Integral]
[;, double, f2Integral, =, 0, ;, double, fPrime2Integral, =, 0, ;, final, double, startX, =, currentX, ;, for, (, int]
[., getY, (, ), ;, double, f2Integral, =, 0, ;, double, fPrime2Integral, =, 0, ;, final, double, startX, =, currentX]
[[, 0, ], ., getY, (, ), ;, double, f2Integral, =, 0, ;, double, fPrime2Integral, =, 0, ;, final, double]
[], ., getY, (, ), ;, double, f2Integral, =, 0, ;, double, fPrime2Integral, =, 0, ;, final, double, startX, =]
[;, double, fPrime2Integral, =, 0, ;, final, double, startX, =, currentX, ;, for, (, int, i, =, 1, ;, i]
[;, final, double, startX, =, currentX, ;, for, (, int, i, =, 1, ;, i, <, observations, ., length, ;]
[;, for, (, int, i, =, 1, ;, i, <, observations, ., length, ;, ++, i, ), {, final, double]
[;, i, <, observations, ., length, ;, ++, i, ), {, final, double, previousX, =, currentX, ;, final, double, previousY]
[;, ++, i, ), {, final, double, previousX, =, currentX, ;, final, double, previousY, =, currentY, ;, currentX, =, observations]
[<, observations, ., length, ;, ++, i, ), {, final, double, previousX, =, currentX, ;, final, double, previousY, =, currentY]
[;, ++, i, ), {, final, double, previousX, =, currentX, ;, final, double, previousY, =, currentY, ;, currentX, =, observations]
[., length, ;, ++, i, ), {, final, double, previousX, =, currentX, ;, final, double, previousY, =, currentY, ;, currentX]
[), {, final, double, previousX, =, currentX, ;, final, double, previousY, =, currentY, ;, currentX, =, observations, [, i, ]]
[), {, final, double, previousX, =, currentX, ;, final, double, previousY, =, currentY, ;, currentX, =, observations, [, i, ]]
[;, final, double, previousY, =, currentY, ;, currentX, =, observations, [, i, ], ., getX, (, ), ;, currentY, =]
[;, currentX, =, observations, [, i, ], ., getX, (, ), ;, currentY, =, observations, [, i, ], ., getY]
[=, observations, [, i, ], ., getX, (, ), ;, currentY, =, observations, [, i, ], ., getY, (, )]
[;, currentY, =, observations, [, i, ], ., getY, (, ), ;, final, double, dx, =, currentX, -, previousX, ;]
[., getX, (, ), ;, currentY, =, observations, [, i, ], ., getY, (, ), ;, final, double, dx, =]
[[, i, ], ., getX, (, ), ;, currentY, =, observations, [, i, ], ., getY, (, ), ;, final]
[], ., getX, (, ), ;, currentY, =, observations, [, i, ], ., getY, (, ), ;, final, double, dx]
[=, observations, [, i, ], ., getY, (, ), ;, final, double, dx, =, currentX, -, previousX, ;, final, double]
[;, final, double, dx, =, currentX, -, previousX, ;, final, double, dy, =, currentY, -, previousY, ;, final, double, f2StepIntegral]
[., getY, (, ), ;, final, double, dx, =, currentX, -, previousX, ;, final, double, dy, =, currentY, -, previousY]
[[, i, ], ., getY, (, ), ;, final, double, dx, =, currentX, -, previousX, ;, final, double, dy, =]
[], ., getY, (, ), ;, final, double, dx, =, currentX, -, previousX, ;, final, double, dy, =, currentY, -]
[;, final, double, dy, =, currentY, -, previousY, ;, final, double, f2StepIntegral, =, dx, *, (, previousY, *, previousY, +]
[-, previousX, ;, final, double, dy, =, currentY, -, previousY, ;, final, double, f2StepIntegral, =, dx, *, (, previousY, *]
[;, final, double, dy, =, currentY, -, previousY, ;, final, double, f2StepIntegral, =, dx, *, (, previousY, *, previousY, +]
[;, final, double, f2StepIntegral, =, dx, *, (, previousY, *, previousY, +, previousY, *, currentY, +, currentY, *, currentY, )]
[-, previousY, ;, final, double, f2StepIntegral, =, dx, *, (, previousY, *, previousY, +, previousY, *, currentY, +, currentY, *]
[;, final, double, f2StepIntegral, =, dx, *, (, previousY, *, previousY, +, previousY, *, currentY, +, currentY, *, currentY, )]
[;, final, double, fPrime2StepIntegral, =, dy, *, dy, /, dx, ;, final, double, x, =, currentX, -, startX, ;, f2Integral]
[/, 3, ;, final, double, fPrime2StepIntegral, =, dy, *, dy, /, dx, ;, final, double, x, =, currentX, -, startX]
[*, (, previousY, *, previousY, +, previousY, *, currentY, +, currentY, *, currentY, ), /, 3, ;, final, double, fPrime2StepIntegral]
[/, 3, ;, final, double, fPrime2StepIntegral, =, dy, *, dy, /, dx, ;, final, double, x, =, currentX, -, startX]
[), /, 3, ;, final, double, fPrime2StepIntegral, =, dy, *, dy, /, dx, ;, final, double, x, =, currentX, -]
[+, currentY, *, currentY, ), /, 3, ;, final, double, fPrime2StepIntegral, =, dy, *, dy, /, dx, ;, final, double]
[+, previousY, *, currentY, +, currentY, *, currentY, ), /, 3, ;, final, double, fPrime2StepIntegral, =, dy, *, dy, /]
[*, previousY, +, previousY, *, currentY, +, currentY, *, currentY, ), /, 3, ;, final, double, fPrime2StepIntegral, =, dy, *]
[+, previousY, *, currentY, +, currentY, *, currentY, ), /, 3, ;, final, double, fPrime2StepIntegral, =, dy, *, dy, /]
[+, currentY, *, currentY, ), /, 3, ;, final, double, fPrime2StepIntegral, =, dy, *, dy, /, dx, ;, final, double]
[*, currentY, +, currentY, *, currentY, ), /, 3, ;, final, double, fPrime2StepIntegral, =, dy, *, dy, /, dx, ;]
[+, currentY, *, currentY, ), /, 3, ;, final, double, fPrime2StepIntegral, =, dy, *, dy, /, dx, ;, final, double]
[), /, 3, ;, final, double, fPrime2StepIntegral, =, dy, *, dy, /, dx, ;, final, double, x, =, currentX, -]
[*, currentY, ), /, 3, ;, final, double, fPrime2StepIntegral, =, dy, *, dy, /, dx, ;, final, double, x, =]
[), /, 3, ;, final, double, fPrime2StepIntegral, =, dy, *, dy, /, dx, ;, final, double, x, =, currentX, -]
[;, final, double, fPrime2StepIntegral, =, dy, *, dy, /, dx, ;, final, double, x, =, currentX, -, startX, ;, f2Integral]
[;, final, double, x, =, currentX, -, startX, ;, f2Integral, +=, f2StepIntegral, ;, fPrime2Integral, +=, fPrime2StepIntegral, ;, sx2, +=, x]
[/, dx, ;, final, double, x, =, currentX, -, startX, ;, f2Integral, +=, f2StepIntegral, ;, fPrime2Integral, +=, fPrime2StepIntegral, ;, sx2]
[*, dy, /, dx, ;, final, double, x, =, currentX, -, startX, ;, f2Integral, +=, f2StepIntegral, ;, fPrime2Integral, +=, fPrime2StepIntegral]
[/, dx, ;, final, double, x, =, currentX, -, startX, ;, f2Integral, +=, f2StepIntegral, ;, fPrime2Integral, +=, fPrime2StepIntegral, ;, sx2]
[;, final, double, x, =, currentX, -, startX, ;, f2Integral, +=, f2StepIntegral, ;, fPrime2Integral, +=, fPrime2StepIntegral, ;, sx2, +=, x]
[;, f2Integral, +=, f2StepIntegral, ;, fPrime2Integral, +=, fPrime2StepIntegral, ;, sx2, +=, x, *, x, ;, sy2, +=, f2Integral, *, f2Integral]
[-, startX, ;, f2Integral, +=, f2StepIntegral, ;, fPrime2Integral, +=, fPrime2StepIntegral, ;, sx2, +=, x, *, x, ;, sy2, +=, f2Integral]
[;, f2Integral, +=, f2StepIntegral, ;, fPrime2Integral, +=, fPrime2StepIntegral, ;, sx2, +=, x, *, x, ;, sy2, +=, f2Integral, *, f2Integral]
[+=, f2StepIntegral, ;, fPrime2Integral, +=, fPrime2StepIntegral, ;, sx2, +=, x, *, x, ;, sy2, +=, f2Integral, *, f2Integral, ;, sxy]
[;, fPrime2Integral, +=, fPrime2StepIntegral, ;, sx2, +=, x, *, x, ;, sy2, +=, f2Integral, *, f2Integral, ;, sxy, +=, x]
[+=, fPrime2StepIntegral, ;, sx2, +=, x, *, x, ;, sy2, +=, f2Integral, *, f2Integral, ;, sxy, +=, x, *, f2Integral]
[;, sx2, +=, x, *, x, ;, sy2, +=, f2Integral, *, f2Integral, ;, sxy, +=, x, *, f2Integral, ;, sxz]
[+=, x, *, x, ;, sy2, +=, f2Integral, *, f2Integral, ;, sxy, +=, x, *, f2Integral, ;, sxz, +=, x]
[;, sy2, +=, f2Integral, *, f2Integral, ;, sxy, +=, x, *, f2Integral, ;, sxz, +=, x, *, fPrime2Integral, ;, syz]
[*, x, ;, sy2, +=, f2Integral, *, f2Integral, ;, sxy, +=, x, *, f2Integral, ;, sxz, +=, x, *, fPrime2Integral]
[;, sy2, +=, f2Integral, *, f2Integral, ;, sxy, +=, x, *, f2Integral, ;, sxz, +=, x, *, fPrime2Integral, ;, syz]
[+=, f2Integral, *, f2Integral, ;, sxy, +=, x, *, f2Integral, ;, sxz, +=, x, *, fPrime2Integral, ;, syz, +=, f2Integral]
[;, sxy, +=, x, *, f2Integral, ;, sxz, +=, x, *, fPrime2Integral, ;, syz, +=, f2Integral, *, fPrime2Integral, ;, }]
[*, f2Integral, ;, sxy, +=, x, *, f2Integral, ;, sxz, +=, x, *, fPrime2Integral, ;, syz, +=, f2Integral, *, fPrime2Integral]
[;, sxy, +=, x, *, f2Integral, ;, sxz, +=, x, *, fPrime2Integral, ;, syz, +=, f2Integral, *, fPrime2Integral, ;, }]
[+=, x, *, f2Integral, ;, sxz, +=, x, *, fPrime2Integral, ;, syz, +=, f2Integral, *, fPrime2Integral, ;, }, double, c1]
[;, sxz, +=, x, *, fPrime2Integral, ;, syz, +=, f2Integral, *, fPrime2Integral, ;, }, double, c1, =, sy2, *, sxz]
[*, f2Integral, ;, sxz, +=, x, *, fPrime2Integral, ;, syz, +=, f2Integral, *, fPrime2Integral, ;, }, double, c1, =, sy2]
[;, sxz, +=, x, *, fPrime2Integral, ;, syz, +=, f2Integral, *, fPrime2Integral, ;, }, double, c1, =, sy2, *, sxz]
[+=, x, *, fPrime2Integral, ;, syz, +=, f2Integral, *, fPrime2Integral, ;, }, double, c1, =, sy2, *, sxz, -, sxy]
[;, syz, +=, f2Integral, *, fPrime2Integral, ;, }, double, c1, =, sy2, *, sxz, -, sxy, *, syz, ;, double]
[*, fPrime2Integral, ;, syz, +=, f2Integral, *, fPrime2Integral, ;, }, double, c1, =, sy2, *, sxz, -, sxy, *, syz]
[;, syz, +=, f2Integral, *, fPrime2Integral, ;, }, double, c1, =, sy2, *, sxz, -, sxy, *, syz, ;, double]
[+=, f2Integral, *, fPrime2Integral, ;, }, double, c1, =, sy2, *, sxz, -, sxy, *, syz, ;, double, c2, =]
[;, }, double, c1, =, sy2, *, sxz, -, sxy, *, syz, ;, double, c2, =, sxy, *, sxz, -]
[*, fPrime2Integral, ;, }, double, c1, =, sy2, *, sxz, -, sxy, *, syz, ;, double, c2, =, sxy, *]
[;, }, double, c1, =, sy2, *, sxz, -, sxy, *, syz, ;, double, c2, =, sxy, *, sxz, -]
[;, double, c2, =, sxy, *, sxz, -, sx2, *, syz, ;, double, c3, =, sx2, *, sy2, -, sxy]
[-, sxy, *, syz, ;, double, c2, =, sxy, *, sxz, -, sx2, *, syz, ;, double, c3, =, sx2]
[*, sxz, -, sxy, *, syz, ;, double, c2, =, sxy, *, sxz, -, sx2, *, syz, ;, double, c3]
[-, sxy, *, syz, ;, double, c2, =, sxy, *, sxz, -, sx2, *, syz, ;, double, c3, =, sx2]
[;, double, c2, =, sxy, *, sxz, -, sx2, *, syz, ;, double, c3, =, sx2, *, sy2, -, sxy]
[*, syz, ;, double, c2, =, sxy, *, sxz, -, sx2, *, syz, ;, double, c3, =, sx2, *, sy2]
[;, double, c2, =, sxy, *, sxz, -, sx2, *, syz, ;, double, c3, =, sx2, *, sy2, -, sxy]
[;, double, c3, =, sx2, *, sy2, -, sxy, *, sxy, ;, if, (, (, c1, /, c2, <, 0]
[-, sx2, *, syz, ;, double, c3, =, sx2, *, sy2, -, sxy, *, sxy, ;, if, (, (, c1]
[*, sxz, -, sx2, *, syz, ;, double, c3, =, sx2, *, sy2, -, sxy, *, sxy, ;, if, (]
[-, sx2, *, syz, ;, double, c3, =, sx2, *, sy2, -, sxy, *, sxy, ;, if, (, (, c1]
[;, double, c3, =, sx2, *, sy2, -, sxy, *, sxy, ;, if, (, (, c1, /, c2, <, 0]
[*, syz, ;, double, c3, =, sx2, *, sy2, -, sxy, *, sxy, ;, if, (, (, c1, /, c2]
[;, double, c3, =, sx2, *, sy2, -, sxy, *, sxy, ;, if, (, (, c1, /, c2, <, 0]
[;, if, (, (, c1, /, c2, <, 0, ), ||, (, c2, /, c3, <, 0, ), ), {]
[-, sxy, *, sxy, ;, if, (, (, c1, /, c2, <, 0, ), ||, (, c2, /, c3, <]
[*, sy2, -, sxy, *, sxy, ;, if, (, (, c1, /, c2, <, 0, ), ||, (, c2, /]
[-, sxy, *, sxy, ;, if, (, (, c1, /, c2, <, 0, ), ||, (, c2, /, c3, <]
[;, if, (, (, c1, /, c2, <, 0, ), ||, (, c2, /, c3, <, 0, ), ), {]
[*, sxy, ;, if, (, (, c1, /, c2, <, 0, ), ||, (, c2, /, c3, <, 0, )]
[;, if, (, (, c1, /, c2, <, 0, ), ||, (, c2, /, c3, <, 0, ), ), {]
[), {, final, int, last, =, observations, ., length, -, 1, ;, final, double, xRange, =, observations, [, last, ]]
[||, (, c2, /, c3, <, 0, ), ), {, final, int, last, =, observations, ., length, -, 1, ;]
[), ||, (, c2, /, c3, <, 0, ), ), {, final, int, last, =, observations, ., length, -, 1]
[<, 0, ), ||, (, c2, /, c3, <, 0, ), ), {, final, int, last, =, observations, ., length]
[/, c2, <, 0, ), ||, (, c2, /, c3, <, 0, ), ), {, final, int, last, =, observations]
[<, 0, ), ||, (, c2, /, c3, <, 0, ), ), {, final, int, last, =, observations, ., length]
[), ||, (, c2, /, c3, <, 0, ), ), {, final, int, last, =, observations, ., length, -, 1]
[), {, final, int, last, =, observations, ., length, -, 1, ;, final, double, xRange, =, observations, [, last, ]]
[), ), {, final, int, last, =, observations, ., length, -, 1, ;, final, double, xRange, =, observations, [, last]
[<, 0, ), ), {, final, int, last, =, observations, ., length, -, 1, ;, final, double, xRange, =, observations]
[/, c3, <, 0, ), ), {, final, int, last, =, observations, ., length, -, 1, ;, final, double, xRange]
[<, 0, ), ), {, final, int, last, =, observations, ., length, -, 1, ;, final, double, xRange, =, observations]
[), ), {, final, int, last, =, observations, ., length, -, 1, ;, final, double, xRange, =, observations, [, last]
[;, final, double, xRange, =, observations, [, last, ], ., getX, (, ), -, observations, [, 0, ], ., getX]
[-, 1, ;, final, double, xRange, =, observations, [, last, ], ., getX, (, ), -, observations, [, 0, ]]
[., length, -, 1, ;, final, double, xRange, =, observations, [, last, ], ., getX, (, ), -, observations, []
[;, final, double, xRange, =, observations, [, last, ], ., getX, (, ), -, observations, [, 0, ], ., getX]
[;, if, (, xRange, ==, 0, ), {, throw, new, ZeroException, (, ), ;, }, aOmega, [, 1, ], =]
[-, observations, [, 0, ], ., getX, (, ), ;, if, (, xRange, ==, 0, ), {, throw, new, ZeroException]
[., getX, (, ), -, observations, [, 0, ], ., getX, (, ), ;, if, (, xRange, ==, 0, )]
[[, last, ], ., getX, (, ), -, observations, [, 0, ], ., getX, (, ), ;, if, (, xRange]
[], ., getX, (, ), -, observations, [, 0, ], ., getX, (, ), ;, if, (, xRange, ==, 0]
[;, if, (, xRange, ==, 0, ), {, throw, new, ZeroException, (, ), ;, }, aOmega, [, 1, ], =]
[., getX, (, ), ;, if, (, xRange, ==, 0, ), {, throw, new, ZeroException, (, ), ;, }, aOmega]
[[, 0, ], ., getX, (, ), ;, if, (, xRange, ==, 0, ), {, throw, new, ZeroException, (, )]
[], ., getX, (, ), ;, if, (, xRange, ==, 0, ), {, throw, new, ZeroException, (, ), ;, }]
[), {, throw, new, ZeroException, (, ), ;, }, aOmega, [, 1, ], =, 2, *, Math, ., PI, /]
[==, 0, ), {, throw, new, ZeroException, (, ), ;, }, aOmega, [, 1, ], =, 2, *, Math, .]
[), {, throw, new, ZeroException, (, ), ;, }, aOmega, [, 1, ], =, 2, *, Math, ., PI, /]
[;, }, aOmega, [, 1, ], =, 2, *, Math, ., PI, /, xRange, ;, double, yMin, =, Double, .]
[=, 2, *, Math, ., PI, /, xRange, ;, double, yMin, =, Double, ., POSITIVE_INFINITY, ;, double, yMax, =, Double]
[[, 1, ], =, 2, *, Math, ., PI, /, xRange, ;, double, yMin, =, Double, ., POSITIVE_INFINITY, ;, double]
[], =, 2, *, Math, ., PI, /, xRange, ;, double, yMin, =, Double, ., POSITIVE_INFINITY, ;, double, yMax, =]
[;, double, yMin, =, Double, ., POSITIVE_INFINITY, ;, double, yMax, =, Double, ., NEGATIVE_INFINITY, ;, for, (, int, i, =]
[/, xRange, ;, double, yMin, =, Double, ., POSITIVE_INFINITY, ;, double, yMax, =, Double, ., NEGATIVE_INFINITY, ;, for, (, int]
[*, Math, ., PI, /, xRange, ;, double, yMin, =, Double, ., POSITIVE_INFINITY, ;, double, yMax, =, Double, ., NEGATIVE_INFINITY]
[/, xRange, ;, double, yMin, =, Double, ., POSITIVE_INFINITY, ;, double, yMax, =, Double, ., NEGATIVE_INFINITY, ;, for, (, int]
[., PI, /, xRange, ;, double, yMin, =, Double, ., POSITIVE_INFINITY, ;, double, yMax, =, Double, ., NEGATIVE_INFINITY, ;, for]
[;, double, yMin, =, Double, ., POSITIVE_INFINITY, ;, double, yMax, =, Double, ., NEGATIVE_INFINITY, ;, for, (, int, i, =]
[;, double, yMax, =, Double, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 1, ;, i, <, observations, ., length]
[., POSITIVE_INFINITY, ;, double, yMax, =, Double, ., NEGATIVE_INFINITY, ;, for, (, int, i, =, 1, ;, i, <, observations]
[;, for, (, int, i, =, 1, ;, i, <, observations, ., length, ;, ++, i, ), {, final, double]
[., NEGATIVE_INFINITY, ;, for, (, int, i, =, 1, ;, i, <, observations, ., length, ;, ++, i, ), {]
[;, i, <, observations, ., length, ;, ++, i, ), {, final, double, y, =, observations, [, i, ], .]
[;, ++, i, ), {, final, double, y, =, observations, [, i, ], ., getY, (, ), ;, if, (]
[<, observations, ., length, ;, ++, i, ), {, final, double, y, =, observations, [, i, ], ., getY, (]
[;, ++, i, ), {, final, double, y, =, observations, [, i, ], ., getY, (, ), ;, if, (]
[., length, ;, ++, i, ), {, final, double, y, =, observations, [, i, ], ., getY, (, ), ;]
[), {, final, double, y, =, observations, [, i, ], ., getY, (, ), ;, if, (, y, <, yMin]
[), {, final, double, y, =, observations, [, i, ], ., getY, (, ), ;, if, (, y, <, yMin]
[;, if, (, y, <, yMin, ), {, yMin, =, y, ;, }, if, (, y, >, yMax, ), {]
[., getY, (, ), ;, if, (, y, <, yMin, ), {, yMin, =, y, ;, }, if, (, y]
[[, i, ], ., getY, (, ), ;, if, (, y, <, yMin, ), {, yMin, =, y, ;, }]
[], ., getY, (, ), ;, if, (, y, <, yMin, ), {, yMin, =, y, ;, }, if, (]
[), {, yMin, =, y, ;, }, if, (, y, >, yMax, ), {, yMax, =, y, ;, }, }]
[<, yMin, ), {, yMin, =, y, ;, }, if, (, y, >, yMax, ), {, yMax, =, y, ;]
[), {, yMin, =, y, ;, }, if, (, y, >, yMax, ), {, yMax, =, y, ;, }, }]
[=, y, ;, }, if, (, y, >, yMax, ), {, yMax, =, y, ;, }, }, aOmega, [, 0]
[;, }, if, (, y, >, yMax, ), {, yMax, =, y, ;, }, }, aOmega, [, 0, ], =]
[), {, yMax, =, y, ;, }, }, aOmega, [, 0, ], =, 0.5, *, (, yMax, -, yMin, )]
[>, yMax, ), {, yMax, =, y, ;, }, }, aOmega, [, 0, ], =, 0.5, *, (, yMax, -]
[), {, yMax, =, y, ;, }, }, aOmega, [, 0, ], =, 0.5, *, (, yMax, -, yMin, )]
[=, y, ;, }, }, aOmega, [, 0, ], =, 0.5, *, (, yMax, -, yMin, ), ;, }, else]
[;, }, }, aOmega, [, 0, ], =, 0.5, *, (, yMax, -, yMin, ), ;, }, else, {, if]
[=, 0.5, *, (, yMax, -, yMin, ), ;, }, else, {, if, (, c2, ==, 0, ), {, throw]
[[, 0, ], =, 0.5, *, (, yMax, -, yMin, ), ;, }, else, {, if, (, c2, ==, 0]
[], =, 0.5, *, (, yMax, -, yMin, ), ;, }, else, {, if, (, c2, ==, 0, ), {]
[;, }, else, {, if, (, c2, ==, 0, ), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., ZERO_DENOMINATOR, ), ;]
[*, (, yMax, -, yMin, ), ;, }, else, {, if, (, c2, ==, 0, ), {, throw, new, MathIllegalStateException]
[;, }, else, {, if, (, c2, ==, 0, ), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., ZERO_DENOMINATOR, ), ;]
[), ;, }, else, {, if, (, c2, ==, 0, ), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., ZERO_DENOMINATOR, )]
[-, yMin, ), ;, }, else, {, if, (, c2, ==, 0, ), {, throw, new, MathIllegalStateException, (, LocalizedFormats, .]
[), ;, }, else, {, if, (, c2, ==, 0, ), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., ZERO_DENOMINATOR, )]
[), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., ZERO_DENOMINATOR, ), ;, }, aOmega, [, 0, ], =, FastMath, ., sqrt]
[==, 0, ), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., ZERO_DENOMINATOR, ), ;, }, aOmega, [, 0, ], =, FastMath]
[), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., ZERO_DENOMINATOR, ), ;, }, aOmega, [, 0, ], =, FastMath, ., sqrt]
[;, }, aOmega, [, 0, ], =, FastMath, ., sqrt, (, c1, /, c2, ), ;, aOmega, [, 1, ]]
[), ;, }, aOmega, [, 0, ], =, FastMath, ., sqrt, (, c1, /, c2, ), ;, aOmega, [, 1]
[., ZERO_DENOMINATOR, ), ;, }, aOmega, [, 0, ], =, FastMath, ., sqrt, (, c1, /, c2, ), ;, aOmega]
[=, FastMath, ., sqrt, (, c1, /, c2, ), ;, aOmega, [, 1, ], =, FastMath, ., sqrt, (, c2]
[[, 0, ], =, FastMath, ., sqrt, (, c1, /, c2, ), ;, aOmega, [, 1, ], =, FastMath, .]
[], =, FastMath, ., sqrt, (, c1, /, c2, ), ;, aOmega, [, 1, ], =, FastMath, ., sqrt, (]
[;, aOmega, [, 1, ], =, FastMath, ., sqrt, (, c2, /, c3, ), ;, }, return, aOmega, ;, }]
[., sqrt, (, c1, /, c2, ), ;, aOmega, [, 1, ], =, FastMath, ., sqrt, (, c2, /, c3]
[), ;, aOmega, [, 1, ], =, FastMath, ., sqrt, (, c2, /, c3, ), ;, }, return, aOmega, ;]
[/, c2, ), ;, aOmega, [, 1, ], =, FastMath, ., sqrt, (, c2, /, c3, ), ;, }, return]
[), ;, aOmega, [, 1, ], =, FastMath, ., sqrt, (, c2, /, c3, ), ;, }, return, aOmega, ;]
[=, FastMath, ., sqrt, (, c2, /, c3, ), ;, }, return, aOmega, ;, }, private, double, guessPhi, (, WeightedObservedPoint]
[[, 1, ], =, FastMath, ., sqrt, (, c2, /, c3, ), ;, }, return, aOmega, ;, }, private, double]
[], =, FastMath, ., sqrt, (, c2, /, c3, ), ;, }, return, aOmega, ;, }, private, double, guessPhi, (]
[;, }, return, aOmega, ;, }, private, double, guessPhi, (, WeightedObservedPoint, [, ], observations, ), {, double, fcMean, =, 0]
[., sqrt, (, c2, /, c3, ), ;, }, return, aOmega, ;, }, private, double, guessPhi, (, WeightedObservedPoint, [, ]]
[), ;, }, return, aOmega, ;, }, private, double, guessPhi, (, WeightedObservedPoint, [, ], observations, ), {, double, fcMean, =]
[/, c3, ), ;, }, return, aOmega, ;, }, private, double, guessPhi, (, WeightedObservedPoint, [, ], observations, ), {, double]
[), ;, }, return, aOmega, ;, }, private, double, guessPhi, (, WeightedObservedPoint, [, ], observations, ), {, double, fcMean, =]
[;, }, private, double, guessPhi, (, WeightedObservedPoint, [, ], observations, ), {, double, fcMean, =, 0, ;, double, fsMean, =]
[;, double, fsMean, =, 0, ;, double, currentX, =, observations, [, 0, ], ., getX, (, ), ;, double, currentY]
[;, double, currentX, =, observations, [, 0, ], ., getX, (, ), ;, double, currentY, =, observations, [, 0, ]]
[;, double, currentY, =, observations, [, 0, ], ., getY, (, ), ;, for, (, int, i, =, 1, ;]
[., getX, (, ), ;, double, currentY, =, observations, [, 0, ], ., getY, (, ), ;, for, (, int]
[[, 0, ], ., getX, (, ), ;, double, currentY, =, observations, [, 0, ], ., getY, (, ), ;]
[], ., getX, (, ), ;, double, currentY, =, observations, [, 0, ], ., getY, (, ), ;, for, (]
[;, for, (, int, i, =, 1, ;, i, <, observations, ., length, ;, ++, i, ), {, final, double]
[., getY, (, ), ;, for, (, int, i, =, 1, ;, i, <, observations, ., length, ;, ++, i]
[[, 0, ], ., getY, (, ), ;, for, (, int, i, =, 1, ;, i, <, observations, ., length]
[], ., getY, (, ), ;, for, (, int, i, =, 1, ;, i, <, observations, ., length, ;, ++]
[;, i, <, observations, ., length, ;, ++, i, ), {, final, double, previousX, =, currentX, ;, final, double, previousY]
[;, ++, i, ), {, final, double, previousX, =, currentX, ;, final, double, previousY, =, currentY, ;, currentX, =, observations]
[<, observations, ., length, ;, ++, i, ), {, final, double, previousX, =, currentX, ;, final, double, previousY, =, currentY]
[;, ++, i, ), {, final, double, previousX, =, currentX, ;, final, double, previousY, =, currentY, ;, currentX, =, observations]
[., length, ;, ++, i, ), {, final, double, previousX, =, currentX, ;, final, double, previousY, =, currentY, ;, currentX]
[), {, final, double, previousX, =, currentX, ;, final, double, previousY, =, currentY, ;, currentX, =, observations, [, i, ]]
[), {, final, double, previousX, =, currentX, ;, final, double, previousY, =, currentY, ;, currentX, =, observations, [, i, ]]
[;, final, double, previousY, =, currentY, ;, currentX, =, observations, [, i, ], ., getX, (, ), ;, currentY, =]
[;, currentX, =, observations, [, i, ], ., getX, (, ), ;, currentY, =, observations, [, i, ], ., getY]
[=, observations, [, i, ], ., getX, (, ), ;, currentY, =, observations, [, i, ], ., getY, (, )]
[;, currentY, =, observations, [, i, ], ., getY, (, ), ;, final, double, currentYPrime, =, (, currentY, -, previousY]
[., getX, (, ), ;, currentY, =, observations, [, i, ], ., getY, (, ), ;, final, double, currentYPrime, =]
[[, i, ], ., getX, (, ), ;, currentY, =, observations, [, i, ], ., getY, (, ), ;, final]
[], ., getX, (, ), ;, currentY, =, observations, [, i, ], ., getY, (, ), ;, final, double, currentYPrime]
[=, observations, [, i, ], ., getY, (, ), ;, final, double, currentYPrime, =, (, currentY, -, previousY, ), /]
[;, final, double, currentYPrime, =, (, currentY, -, previousY, ), /, (, currentX, -, previousX, ), ;, double, omegaX, =]
[., getY, (, ), ;, final, double, currentYPrime, =, (, currentY, -, previousY, ), /, (, currentX, -, previousX, )]
[[, i, ], ., getY, (, ), ;, final, double, currentYPrime, =, (, currentY, -, previousY, ), /, (, currentX]
[], ., getY, (, ), ;, final, double, currentYPrime, =, (, currentY, -, previousY, ), /, (, currentX, -, previousX]
[;, double, omegaX, =, omega, *, currentX, ;, double, cosine, =, FastMath, ., cos, (, omegaX, ), ;, double, sine]
[/, (, currentX, -, previousX, ), ;, double, omegaX, =, omega, *, currentX, ;, double, cosine, =, FastMath, ., cos]
[), /, (, currentX, -, previousX, ), ;, double, omegaX, =, omega, *, currentX, ;, double, cosine, =, FastMath, .]
[-, previousY, ), /, (, currentX, -, previousX, ), ;, double, omegaX, =, omega, *, currentX, ;, double, cosine, =]
[), /, (, currentX, -, previousX, ), ;, double, omegaX, =, omega, *, currentX, ;, double, cosine, =, FastMath, .]
[;, double, omegaX, =, omega, *, currentX, ;, double, cosine, =, FastMath, ., cos, (, omegaX, ), ;, double, sine]
[), ;, double, omegaX, =, omega, *, currentX, ;, double, cosine, =, FastMath, ., cos, (, omegaX, ), ;, double]
[-, previousX, ), ;, double, omegaX, =, omega, *, currentX, ;, double, cosine, =, FastMath, ., cos, (, omegaX, )]
[), ;, double, omegaX, =, omega, *, currentX, ;, double, cosine, =, FastMath, ., cos, (, omegaX, ), ;, double]
[;, double, cosine, =, FastMath, ., cos, (, omegaX, ), ;, double, sine, =, FastMath, ., sin, (, omegaX, )]
[*, currentX, ;, double, cosine, =, FastMath, ., cos, (, omegaX, ), ;, double, sine, =, FastMath, ., sin, (]
[;, double, cosine, =, FastMath, ., cos, (, omegaX, ), ;, double, sine, =, FastMath, ., sin, (, omegaX, )]
[;, double, sine, =, FastMath, ., sin, (, omegaX, ), ;, fcMean, +=, omega, *, currentY, *, cosine, -, currentYPrime]
[., cos, (, omegaX, ), ;, double, sine, =, FastMath, ., sin, (, omegaX, ), ;, fcMean, +=, omega, *]
[), ;, double, sine, =, FastMath, ., sin, (, omegaX, ), ;, fcMean, +=, omega, *, currentY, *, cosine, -]
[;, fcMean, +=, omega, *, currentY, *, cosine, -, currentYPrime, *, sine, ;, fsMean, +=, omega, *, currentY, *, sine]
[., sin, (, omegaX, ), ;, fcMean, +=, omega, *, currentY, *, cosine, -, currentYPrime, *, sine, ;, fsMean, +=]
[), ;, fcMean, +=, omega, *, currentY, *, cosine, -, currentYPrime, *, sine, ;, fsMean, +=, omega, *, currentY, *]
[+=, omega, *, currentY, *, cosine, -, currentYPrime, *, sine, ;, fsMean, +=, omega, *, currentY, *, sine, +, currentYPrime]
[;, fsMean, +=, omega, *, currentY, *, sine, +, currentYPrime, *, cosine, ;, }, return, FastMath, ., atan2, (, -]
[-, currentYPrime, *, sine, ;, fsMean, +=, omega, *, currentY, *, sine, +, currentYPrime, *, cosine, ;, }, return, FastMath]
[*, cosine, -, currentYPrime, *, sine, ;, fsMean, +=, omega, *, currentY, *, sine, +, currentYPrime, *, cosine, ;, }]
[*, currentY, *, cosine, -, currentYPrime, *, sine, ;, fsMean, +=, omega, *, currentY, *, sine, +, currentYPrime, *, cosine]
[*, cosine, -, currentYPrime, *, sine, ;, fsMean, +=, omega, *, currentY, *, sine, +, currentYPrime, *, cosine, ;, }]
[-, currentYPrime, *, sine, ;, fsMean, +=, omega, *, currentY, *, sine, +, currentYPrime, *, cosine, ;, }, return, FastMath]
[;, fsMean, +=, omega, *, currentY, *, sine, +, currentYPrime, *, cosine, ;, }, return, FastMath, ., atan2, (, -]
[*, sine, ;, fsMean, +=, omega, *, currentY, *, sine, +, currentYPrime, *, cosine, ;, }, return, FastMath, ., atan2]
[;, fsMean, +=, omega, *, currentY, *, sine, +, currentYPrime, *, cosine, ;, }, return, FastMath, ., atan2, (, -]
[+=, omega, *, currentY, *, sine, +, currentYPrime, *, cosine, ;, }, return, FastMath, ., atan2, (, -, fsMean, ,]
[;, }, return, FastMath, ., atan2, (, -, fsMean, ,, fcMean, ), ;, }, }, }]
[+, currentYPrime, *, cosine, ;, }, return, FastMath, ., atan2, (, -, fsMean, ,, fcMean, ), ;, }, }, }]
[*, sine, +, currentYPrime, *, cosine, ;, }, return, FastMath, ., atan2, (, -, fsMean, ,, fcMean, ), ;, }]
[*, currentY, *, sine, +, currentYPrime, *, cosine, ;, }, return, FastMath, ., atan2, (, -, fsMean, ,, fcMean, )]
[*, sine, +, currentYPrime, *, cosine, ;, }, return, FastMath, ., atan2, (, -, fsMean, ,, fcMean, ), ;, }]
[+, currentYPrime, *, cosine, ;, }, return, FastMath, ., atan2, (, -, fsMean, ,, fcMean, ), ;, }, }, }]
[;, }, return, FastMath, ., atan2, (, -, fsMean, ,, fcMean, ), ;, }, }, }]
[*, cosine, ;, }, return, FastMath, ., atan2, (, -, fsMean, ,, fcMean, ), ;, }, }, }]
[;, }, return, FastMath, ., atan2, (, -, fsMean, ,, fcMean, ), ;, }, }, }]
[;, }, }, }]
[., atan2, (, -, fsMean, ,, fcMean, ), ;, }, }, }]
[,, fcMean, ), ;, }, }, }]
[,, fcMean, ), ;, }, }, }]
[), ;, }, }, }]
