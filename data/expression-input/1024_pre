[private, final, Object, toInspect, ;, private, final, MockUtil, delegate, ;, public, DefaultMockingDetails, (, Object, toInspect, ,, MockUtil, delegate, ), {]
[private, final, Object, toInspect, ;, private, final, MockUtil, delegate, ;, public, DefaultMockingDetails, (, Object, toInspect, ,, MockUtil, delegate, ), {]
[;, private, final, MockUtil, delegate, ;, public, DefaultMockingDetails, (, Object, toInspect, ,, MockUtil, delegate, ), {, this, ., toInspect, =]
[final, MockUtil, delegate, ;, public, DefaultMockingDetails, (, Object, toInspect, ,, MockUtil, delegate, ), {, this, ., toInspect, =, toInspect, ;]
[final, MockUtil, delegate, ;, public, DefaultMockingDetails, (, Object, toInspect, ,, MockUtil, delegate, ), {, this, ., toInspect, =, toInspect, ;]
[public, DefaultMockingDetails, (, Object, toInspect, ,, MockUtil, delegate, ), {, this, ., toInspect, =, toInspect, ;, this, ., delegate, =]
[this, ., toInspect, =, toInspect, ;, this, ., delegate, =, delegate, ;, }, public, boolean, isMock, (, ), {, return]
[this, ., toInspect, =, toInspect, ;, this, ., delegate, =, delegate, ;, }, public, boolean, isMock, (, ), {, return]
[toInspect, ;, this, ., delegate, =, delegate, ;, }, public, boolean, isMock, (, ), {, return, delegate, ., isMock, (]
[isMock, (, ), {, return, delegate, ., isMock, (, toInspect, ), ;, }, public, boolean, isSpy, (, ), {, return]
[isMock, (, ), {, return, delegate, ., isMock, (, toInspect, ), ;, }, public, boolean, isSpy, (, ), {, return]
[return, delegate, ., isMock, (, toInspect, ), ;, }, public, boolean, isSpy, (, ), {, return, delegate, ., isSpy, (]
[{, return, delegate, ., isSpy, (, toInspect, ), ;, }, public, Collection, <, Invocation, >, getInvocations, (, ), {, return]
[{, return, delegate, ., isSpy, (, toInspect, ), ;, }, public, Collection, <, Invocation, >, getInvocations, (, ), {, return]
[{, return, delegate, ., isSpy, (, toInspect, ), ;, }, public, Collection, <, Invocation, >, getInvocations, (, ), {, return]
[{, return, delegate, ., isSpy, (, toInspect, ), ;, }, public, Collection, <, Invocation, >, getInvocations, (, ), {, return]
[isSpy, (, toInspect, ), ;, }, public, Collection, <, Invocation, >, getInvocations, (, ), {, return, delegate, ., getMockHandler, (]
