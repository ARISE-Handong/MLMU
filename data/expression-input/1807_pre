[public, class, EmptyBlock, extends, AbstractBlock, implements, Block, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[class, EmptyBlock, extends, AbstractBlock, implements, Block, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[{, private, static, final, long, serialVersionUID, =, -, 4083197869412648579L, ;, public, EmptyBlock, (, double, width, ,, double, height, ), {]
[static, final, long, serialVersionUID, =, -, 4083197869412648579L, ;, public, EmptyBlock, (, double, width, ,, double, height, ), {, setWidth, (]
[serialVersionUID, =, -, 4083197869412648579L, ;, public, EmptyBlock, (, double, width, ,, double, height, ), {, setWidth, (, width, ), ;]
[-, 4083197869412648579L, ;, public, EmptyBlock, (, double, width, ,, double, height, ), {, setWidth, (, width, ), ;, setHeight, (]
[setHeight, (, height, ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, base, =]
[), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, base, =, new, Size2D, (]
[}, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, base, =, new, Size2D, (, calculateTotalWidth, (]
[Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, base, =, new, Size2D, (, calculateTotalWidth, (, getWidth, (, ), ), ,]
[,, RectangleConstraint, constraint, ), {, Size2D, base, =, new, Size2D, (, calculateTotalWidth, (, getWidth, (, ), ), ,, calculateTotalHeight, (]
[=, new, Size2D, (, calculateTotalWidth, (, getWidth, (, ), ), ,, calculateTotalHeight, (, getHeight, (, ), ), ), ;, return]
[=, new, Size2D, (, calculateTotalWidth, (, getWidth, (, ), ), ,, calculateTotalHeight, (, getHeight, (, ), ), ), ;, return]
[calculateTotalWidth, (, getWidth, (, ), ), ,, calculateTotalHeight, (, getHeight, (, ), ), ), ;, return, constraint, ., calculateConstrainedSize, (]
[return, constraint, ., calculateConstrainedSize, (, base, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {]
[., calculateConstrainedSize, (, base, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (]
[(, base, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (, g2, ,]
[), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (, g2, ,, area, ,]
[area, ,, null, ), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {]
[null, ), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, area, =]
[;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, area, =, trimMargin, (]
[Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, area, =, trimMargin, (, area, ), ;]
[(, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, area, =, trimMargin, (, area, ), ;, drawBorder, (]
[g2, ,, Rectangle2D, area, ,, Object, params, ), {, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,]
[,, Object, params, ), {, area, =, trimMargin, (, area, ), ;, drawBorder, (, g2, ,, area, ), ;, return]
[drawBorder, (, g2, ,, area, ), ;, return, null, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[drawBorder, (, g2, ,, area, ), ;, return, null, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
