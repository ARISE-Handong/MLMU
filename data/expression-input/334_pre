[math3, ., util, ., FastMath, ;, public, class, MultivariateSummaryStatistics, implements, StatisticalMultivariateSummary, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[StatisticalMultivariateSummary, ,, Serializable, {, private, static, final, long, serialVersionUID, =, 2271900808994826718L, ;, private, int, k, ;, private, long, n, =]
[private, StorelessUnivariateStatistic, [, ], meanImpl, ;, private, VectorialCovariance, covarianceImpl, ;, public, MultivariateSummaryStatistics, (, int, k, ,, boolean, isCovarianceBiasCorrected, ), {]
[private, StorelessUnivariateStatistic, [, ], meanImpl, ;, private, VectorialCovariance, covarianceImpl, ;, public, MultivariateSummaryStatistics, (, int, k, ,, boolean, isCovarianceBiasCorrected, ), {]
[meanImpl, ;, private, VectorialCovariance, covarianceImpl, ;, public, MultivariateSummaryStatistics, (, int, k, ,, boolean, isCovarianceBiasCorrected, ), {, this, ., k, =]
[private, VectorialCovariance, covarianceImpl, ;, public, MultivariateSummaryStatistics, (, int, k, ,, boolean, isCovarianceBiasCorrected, ), {, this, ., k, =, k, ;]
[covarianceImpl, ;, public, MultivariateSummaryStatistics, (, int, k, ,, boolean, isCovarianceBiasCorrected, ), {, this, ., k, =, k, ;, sumImpl, =]
[MultivariateSummaryStatistics, (, int, k, ,, boolean, isCovarianceBiasCorrected, ), {, this, ., k, =, k, ;, sumImpl, =, new, StorelessUnivariateStatistic, []
[k, ,, boolean, isCovarianceBiasCorrected, ), {, this, ., k, =, k, ;, sumImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;]
[boolean, isCovarianceBiasCorrected, ), {, this, ., k, =, k, ;, sumImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, sumSqImpl, =]
[{, this, ., k, =, k, ;, sumImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, sumSqImpl, =, new, StorelessUnivariateStatistic, []
[k, =, k, ;, sumImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, sumSqImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;]
[k, ;, sumImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, sumSqImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, minImpl, =]
[=, new, StorelessUnivariateStatistic, [, k, ], ;, sumSqImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, minImpl, =, new, StorelessUnivariateStatistic, []
[[, k, ], ;, sumSqImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, minImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;]
[], ;, sumSqImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, minImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, maxImpl, =]
[=, new, StorelessUnivariateStatistic, [, k, ], ;, minImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, maxImpl, =, new, StorelessUnivariateStatistic, []
[[, k, ], ;, minImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, maxImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;]
[], ;, minImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, maxImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, sumLogImpl, =]
[=, new, StorelessUnivariateStatistic, [, k, ], ;, maxImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, sumLogImpl, =, new, StorelessUnivariateStatistic, []
[[, k, ], ;, maxImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, sumLogImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;]
[], ;, maxImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, sumLogImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, geoMeanImpl, =]
[=, new, StorelessUnivariateStatistic, [, k, ], ;, sumLogImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, geoMeanImpl, =, new, StorelessUnivariateStatistic, []
[[, k, ], ;, sumLogImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, geoMeanImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;]
[], ;, sumLogImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, geoMeanImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, meanImpl, =]
[=, new, StorelessUnivariateStatistic, [, k, ], ;, geoMeanImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, meanImpl, =, new, StorelessUnivariateStatistic, []
[=, new, StorelessUnivariateStatistic, [, k, ], ;, meanImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, for, (, int, i, =]
[StorelessUnivariateStatistic, [, k, ], ;, meanImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, for, (, int, i, =, 0, ;]
[StorelessUnivariateStatistic, [, k, ], ;, meanImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, for, (, int, i, =, 0, ;]
[k, ], ;, meanImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, for, (, int, i, =, 0, ;, i, <]
[;, meanImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, for, (, int, i, =, 0, ;, i, <, k, ;]
[meanImpl, =, new, StorelessUnivariateStatistic, [, k, ], ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++]
[StorelessUnivariateStatistic, [, k, ], ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {]
[StorelessUnivariateStatistic, [, k, ], ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {]
[k, ], ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {, sumImpl, []
[for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {, sumImpl, [, i, ], =]
[0, ;, i, <, k, ;, ++, i, ), {, sumImpl, [, i, ], =, new, Sum, (, ), ;]
[0, ;, i, <, k, ;, ++, i, ), {, sumImpl, [, i, ], =, new, Sum, (, ), ;]
[i, <, k, ;, ++, i, ), {, sumImpl, [, i, ], =, new, Sum, (, ), ;, sumSqImpl, []
[;, ++, i, ), {, sumImpl, [, i, ], =, new, Sum, (, ), ;, sumSqImpl, [, i, ], =]
[sumImpl, [, i, ], =, new, Sum, (, ), ;, sumSqImpl, [, i, ], =, new, SumOfSquares, (, ), ;]
[sumImpl, [, i, ], =, new, Sum, (, ), ;, sumSqImpl, [, i, ], =, new, SumOfSquares, (, ), ;]
[i, ], =, new, Sum, (, ), ;, sumSqImpl, [, i, ], =, new, SumOfSquares, (, ), ;, minImpl, []
[new, Sum, (, ), ;, sumSqImpl, [, i, ], =, new, SumOfSquares, (, ), ;, minImpl, [, i, ], =]
[sumSqImpl, [, i, ], =, new, SumOfSquares, (, ), ;, minImpl, [, i, ], =, new, Min, (, ), ;]
[sumSqImpl, [, i, ], =, new, SumOfSquares, (, ), ;, minImpl, [, i, ], =, new, Min, (, ), ;]
[i, ], =, new, SumOfSquares, (, ), ;, minImpl, [, i, ], =, new, Min, (, ), ;, maxImpl, []
[new, SumOfSquares, (, ), ;, minImpl, [, i, ], =, new, Min, (, ), ;, maxImpl, [, i, ], =]
[minImpl, [, i, ], =, new, Min, (, ), ;, maxImpl, [, i, ], =, new, Max, (, ), ;]
[minImpl, [, i, ], =, new, Min, (, ), ;, maxImpl, [, i, ], =, new, Max, (, ), ;]
[i, ], =, new, Min, (, ), ;, maxImpl, [, i, ], =, new, Max, (, ), ;, sumLogImpl, []
[new, Min, (, ), ;, maxImpl, [, i, ], =, new, Max, (, ), ;, sumLogImpl, [, i, ], =]
[maxImpl, [, i, ], =, new, Max, (, ), ;, sumLogImpl, [, i, ], =, new, SumOfLogs, (, ), ;]
[maxImpl, [, i, ], =, new, Max, (, ), ;, sumLogImpl, [, i, ], =, new, SumOfLogs, (, ), ;]
[i, ], =, new, Max, (, ), ;, sumLogImpl, [, i, ], =, new, SumOfLogs, (, ), ;, geoMeanImpl, []
[new, Max, (, ), ;, sumLogImpl, [, i, ], =, new, SumOfLogs, (, ), ;, geoMeanImpl, [, i, ], =]
[sumLogImpl, [, i, ], =, new, SumOfLogs, (, ), ;, geoMeanImpl, [, i, ], =, new, GeometricMean, (, ), ;]
[sumLogImpl, [, i, ], =, new, SumOfLogs, (, ), ;, geoMeanImpl, [, i, ], =, new, GeometricMean, (, ), ;]
[i, ], =, new, SumOfLogs, (, ), ;, geoMeanImpl, [, i, ], =, new, GeometricMean, (, ), ;, meanImpl, []
[new, SumOfLogs, (, ), ;, geoMeanImpl, [, i, ], =, new, GeometricMean, (, ), ;, meanImpl, [, i, ], =]
[[, i, ], =, new, GeometricMean, (, ), ;, meanImpl, [, i, ], =, new, Mean, (, ), ;, }]
[], =, new, GeometricMean, (, ), ;, meanImpl, [, i, ], =, new, Mean, (, ), ;, }, covarianceImpl, =]
[GeometricMean, (, ), ;, meanImpl, [, i, ], =, new, Mean, (, ), ;, }, covarianceImpl, =, new, VectorialCovariance, (]
[), ;, meanImpl, [, i, ], =, new, Mean, (, ), ;, }, covarianceImpl, =, new, VectorialCovariance, (, k, ,]
[VectorialCovariance, (, k, ,, isCovarianceBiasCorrected, ), ;, }, public, void, addValue, (, double, [, ], value, ), throws, DimensionMismatchException, {]
[k, ,, isCovarianceBiasCorrected, ), ;, }, public, void, addValue, (, double, [, ], value, ), throws, DimensionMismatchException, {, checkDimension, (]
[k, ,, isCovarianceBiasCorrected, ), ;, }, public, void, addValue, (, double, [, ], value, ), throws, DimensionMismatchException, {, checkDimension, (]
[double, [, ], value, ), throws, DimensionMismatchException, {, checkDimension, (, value, ., length, ), ;, for, (, int, i, =]
[], value, ), throws, DimensionMismatchException, {, checkDimension, (, value, ., length, ), ;, for, (, int, i, =, 0, ;]
[], value, ), throws, DimensionMismatchException, {, checkDimension, (, value, ., length, ), ;, for, (, int, i, =, 0, ;]
[), throws, DimensionMismatchException, {, checkDimension, (, value, ., length, ), ;, for, (, int, i, =, 0, ;, i, <]
[DimensionMismatchException, {, checkDimension, (, value, ., length, ), ;, for, (, int, i, =, 0, ;, i, <, k, ;]
[{, checkDimension, (, value, ., length, ), ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++]
[), ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {, double, v, =]
[), ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {, double, v, =]
[for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {, double, v, =, value, []
[i, =, 0, ;, i, <, k, ;, ++, i, ), {, double, v, =, value, [, i, ], ;]
[i, =, 0, ;, i, <, k, ;, ++, i, ), {, double, v, =, value, [, i, ], ;]
[i, =, 0, ;, i, <, k, ;, ++, i, ), {, double, v, =, value, [, i, ], ;]
[0, ;, i, <, k, ;, ++, i, ), {, double, v, =, value, [, i, ], ;, sumImpl, []
[;, ++, i, ), {, double, v, =, value, [, i, ], ;, sumImpl, [, i, ], ., increment, (]
[), {, double, v, =, value, [, i, ], ;, sumImpl, [, i, ], ., increment, (, v, ), ;]
[), {, double, v, =, value, [, i, ], ;, sumImpl, [, i, ], ., increment, (, v, ), ;]
[), {, double, v, =, value, [, i, ], ;, sumImpl, [, i, ], ., increment, (, v, ), ;]
[double, v, =, value, [, i, ], ;, sumImpl, [, i, ], ., increment, (, v, ), ;, sumSqImpl, []
[i, ], ;, sumImpl, [, i, ], ., increment, (, v, ), ;, sumSqImpl, [, i, ], ., increment, (]
[sumImpl, [, i, ], ., increment, (, v, ), ;, sumSqImpl, [, i, ], ., increment, (, v, ), ;]
[sumImpl, [, i, ], ., increment, (, v, ), ;, sumSqImpl, [, i, ], ., increment, (, v, ), ;]
[sumImpl, [, i, ], ., increment, (, v, ), ;, sumSqImpl, [, i, ], ., increment, (, v, ), ;]
[i, ], ., increment, (, v, ), ;, sumSqImpl, [, i, ], ., increment, (, v, ), ;, minImpl, []
[v, ), ;, sumSqImpl, [, i, ], ., increment, (, v, ), ;, minImpl, [, i, ], ., increment, (]
[sumSqImpl, [, i, ], ., increment, (, v, ), ;, minImpl, [, i, ], ., increment, (, v, ), ;]
[sumSqImpl, [, i, ], ., increment, (, v, ), ;, minImpl, [, i, ], ., increment, (, v, ), ;]
[sumSqImpl, [, i, ], ., increment, (, v, ), ;, minImpl, [, i, ], ., increment, (, v, ), ;]
[i, ], ., increment, (, v, ), ;, minImpl, [, i, ], ., increment, (, v, ), ;, maxImpl, []
[v, ), ;, minImpl, [, i, ], ., increment, (, v, ), ;, maxImpl, [, i, ], ., increment, (]
[minImpl, [, i, ], ., increment, (, v, ), ;, maxImpl, [, i, ], ., increment, (, v, ), ;]
[minImpl, [, i, ], ., increment, (, v, ), ;, maxImpl, [, i, ], ., increment, (, v, ), ;]
[minImpl, [, i, ], ., increment, (, v, ), ;, maxImpl, [, i, ], ., increment, (, v, ), ;]
[i, ], ., increment, (, v, ), ;, maxImpl, [, i, ], ., increment, (, v, ), ;, sumLogImpl, []
[v, ), ;, maxImpl, [, i, ], ., increment, (, v, ), ;, sumLogImpl, [, i, ], ., increment, (]
[maxImpl, [, i, ], ., increment, (, v, ), ;, sumLogImpl, [, i, ], ., increment, (, v, ), ;]
[maxImpl, [, i, ], ., increment, (, v, ), ;, sumLogImpl, [, i, ], ., increment, (, v, ), ;]
[maxImpl, [, i, ], ., increment, (, v, ), ;, sumLogImpl, [, i, ], ., increment, (, v, ), ;]
[i, ], ., increment, (, v, ), ;, sumLogImpl, [, i, ], ., increment, (, v, ), ;, geoMeanImpl, []
[v, ), ;, sumLogImpl, [, i, ], ., increment, (, v, ), ;, geoMeanImpl, [, i, ], ., increment, (]
[sumLogImpl, [, i, ], ., increment, (, v, ), ;, geoMeanImpl, [, i, ], ., increment, (, v, ), ;]
[sumLogImpl, [, i, ], ., increment, (, v, ), ;, geoMeanImpl, [, i, ], ., increment, (, v, ), ;]
[sumLogImpl, [, i, ], ., increment, (, v, ), ;, geoMeanImpl, [, i, ], ., increment, (, v, ), ;]
[i, ], ., increment, (, v, ), ;, geoMeanImpl, [, i, ], ., increment, (, v, ), ;, meanImpl, []
[v, ), ;, geoMeanImpl, [, i, ], ., increment, (, v, ), ;, meanImpl, [, i, ], ., increment, (]
[[, i, ], ., increment, (, v, ), ;, meanImpl, [, i, ], ., increment, (, v, ), ;, }]
[[, i, ], ., increment, (, v, ), ;, meanImpl, [, i, ], ., increment, (, v, ), ;, }]
[increment, (, v, ), ;, meanImpl, [, i, ], ., increment, (, v, ), ;, }, covarianceImpl, ., increment, (]
[), ;, meanImpl, [, i, ], ., increment, (, v, ), ;, }, covarianceImpl, ., increment, (, value, ), ;]
[), ;, meanImpl, [, i, ], ., increment, (, v, ), ;, }, covarianceImpl, ., increment, (, value, ), ;]
[;, }, covarianceImpl, ., increment, (, value, ), ;, n, ++, ;, }, public, int, getDimension, (, ), {, return]
[++, ;, }, public, int, getDimension, (, ), {, return, k, ;, }, public, long, getN, (, ), {, return]
[n, ;, }, private, double, [, ], getResults, (, StorelessUnivariateStatistic, [, ], stats, ), {, double, [, ], results, =]
[private, double, [, ], getResults, (, StorelessUnivariateStatistic, [, ], stats, ), {, double, [, ], results, =, new, double, []
[private, double, [, ], getResults, (, StorelessUnivariateStatistic, [, ], stats, ), {, double, [, ], results, =, new, double, []
[), {, double, [, ], results, =, new, double, [, stats, ., length, ], ;, for, (, int, i, =]
[double, [, ], results, =, new, double, [, stats, ., length, ], ;, for, (, int, i, =, 0, ;]
[double, [, ], results, =, new, double, [, stats, ., length, ], ;, for, (, int, i, =, 0, ;]
[], results, =, new, double, [, stats, ., length, ], ;, for, (, int, i, =, 0, ;, i, <]
[], results, =, new, double, [, stats, ., length, ], ;, for, (, int, i, =, 0, ;, i, <]
[double, [, stats, ., length, ], ;, for, (, int, i, =, 0, ;, i, <, results, ., length, ;]
[[, stats, ., length, ], ;, for, (, int, i, =, 0, ;, i, <, results, ., length, ;, ++]
[length, ], ;, for, (, int, i, =, 0, ;, i, <, results, ., length, ;, ++, i, ), {]
[length, ], ;, for, (, int, i, =, 0, ;, i, <, results, ., length, ;, ++, i, ), {]
[;, for, (, int, i, =, 0, ;, i, <, results, ., length, ;, ++, i, ), {, results, []
[int, i, =, 0, ;, i, <, results, ., length, ;, ++, i, ), {, results, [, i, ], =]
[int, i, =, 0, ;, i, <, results, ., length, ;, ++, i, ), {, results, [, i, ], =]
[int, i, =, 0, ;, i, <, results, ., length, ;, ++, i, ), {, results, [, i, ], =]
[=, 0, ;, i, <, results, ., length, ;, ++, i, ), {, results, [, i, ], =, stats, []
[++, i, ), {, results, [, i, ], =, stats, [, i, ], ., getResult, (, ), ;, }, return]
[], ., getResult, (, ), ;, }, return, results, ;, }, public, double, [, ], getSum, (, ), {, return]
[getResult, (, ), ;, }, return, results, ;, }, public, double, [, ], getSum, (, ), {, return, getResults, (]
[getSum, (, ), {, return, getResults, (, sumImpl, ), ;, }, public, double, [, ], getSumSq, (, ), {, return]
[), {, return, getResults, (, sumImpl, ), ;, }, public, double, [, ], getSumSq, (, ), {, return, getResults, (]
[getSumSq, (, ), {, return, getResults, (, sumSqImpl, ), ;, }, public, double, [, ], getSumLog, (, ), {, return]
[), {, return, getResults, (, sumSqImpl, ), ;, }, public, double, [, ], getSumLog, (, ), {, return, getResults, (]
[getSumLog, (, ), {, return, getResults, (, sumLogImpl, ), ;, }, public, double, [, ], getMean, (, ), {, return]
[), {, return, getResults, (, sumLogImpl, ), ;, }, public, double, [, ], getMean, (, ), {, return, getResults, (]
[return, getResults, (, meanImpl, ), ;, }, public, double, [, ], getStandardDeviation, (, ), {, double, [, ], stdDev, =]
[meanImpl, ), ;, }, public, double, [, ], getStandardDeviation, (, ), {, double, [, ], stdDev, =, new, double, []
[double, [, ], getStandardDeviation, (, ), {, double, [, ], stdDev, =, new, double, [, k, ], ;, if, (]
[double, [, ], getStandardDeviation, (, ), {, double, [, ], stdDev, =, new, double, [, k, ], ;, if, (]
[(, ), {, double, [, ], stdDev, =, new, double, [, k, ], ;, if, (, getN, (, ), <]
[double, [, ], stdDev, =, new, double, [, k, ], ;, if, (, getN, (, ), <, 1, ), {]
[double, [, ], stdDev, =, new, double, [, k, ], ;, if, (, getN, (, ), <, 1, ), {]
[=, new, double, [, k, ], ;, if, (, getN, (, ), <, 1, ), {, Arrays, ., fill, (]
[double, [, k, ], ;, if, (, getN, (, ), <, 1, ), {, Arrays, ., fill, (, stdDev, ,]
[double, [, k, ], ;, if, (, getN, (, ), <, 1, ), {, Arrays, ., fill, (, stdDev, ,]
[), <, 1, ), {, Arrays, ., fill, (, stdDev, ,, Double, ., NaN, ), ;, }, else, if, (]
[), <, 1, ), {, Arrays, ., fill, (, stdDev, ,, Double, ., NaN, ), ;, }, else, if, (]
[{, Arrays, ., fill, (, stdDev, ,, Double, ., NaN, ), ;, }, else, if, (, getN, (, ), <]
[fill, (, stdDev, ,, Double, ., NaN, ), ;, }, else, if, (, getN, (, ), <, 2, ), {]
[fill, (, stdDev, ,, Double, ., NaN, ), ;, }, else, if, (, getN, (, ), <, 2, ), {]
[Double, ., NaN, ), ;, }, else, if, (, getN, (, ), <, 2, ), {, Arrays, ., fill, (]
[NaN, ), ;, }, else, if, (, getN, (, ), <, 2, ), {, Arrays, ., fill, (, stdDev, ,]
[), <, 2, ), {, Arrays, ., fill, (, stdDev, ,, 0.0, ), ;, }, else, {, RealMatrix, matrix, =]
[), <, 2, ), {, Arrays, ., fill, (, stdDev, ,, 0.0, ), ;, }, else, {, RealMatrix, matrix, =]
[0.0, ), ;, }, else, {, RealMatrix, matrix, =, covarianceImpl, ., getResult, (, ), ;, for, (, int, i, =]
[;, }, else, {, RealMatrix, matrix, =, covarianceImpl, ., getResult, (, ), ;, for, (, int, i, =, 0, ;]
[;, }, else, {, RealMatrix, matrix, =, covarianceImpl, ., getResult, (, ), ;, for, (, int, i, =, 0, ;]
[else, {, RealMatrix, matrix, =, covarianceImpl, ., getResult, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[RealMatrix, matrix, =, covarianceImpl, ., getResult, (, ), ;, for, (, int, i, =, 0, ;, i, <, k, ;]
[matrix, =, covarianceImpl, ., getResult, (, ), ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++]
[., getResult, (, ), ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {]
[., getResult, (, ), ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {]
[(, ), ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {, stdDev, []
[for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {, stdDev, [, i, ], =]
[for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {, stdDev, [, i, ], =]
[=, 0, ;, i, <, k, ;, ++, i, ), {, stdDev, [, i, ], =, FastMath, ., sqrt, (]
[=, 0, ;, i, <, k, ;, ++, i, ), {, stdDev, [, i, ], =, FastMath, ., sqrt, (]
[<, k, ;, ++, i, ), {, stdDev, [, i, ], =, FastMath, ., sqrt, (, matrix, ., getEntry, (]
[;, ++, i, ), {, stdDev, [, i, ], =, FastMath, ., sqrt, (, matrix, ., getEntry, (, i, ,]
[i, ], =, FastMath, ., sqrt, (, matrix, ., getEntry, (, i, ,, i, ), ), ;, }, }, return]
[(, i, ,, i, ), ), ;, }, }, return, stdDev, ;, }, public, RealMatrix, getCovariance, (, ), {, return]
[(, i, ,, i, ), ), ;, }, }, return, stdDev, ;, }, public, RealMatrix, getCovariance, (, ), {, return]
[(, ), {, return, covarianceImpl, ., getResult, (, ), ;, }, public, double, [, ], getMax, (, ), {, return]
[{, return, covarianceImpl, ., getResult, (, ), ;, }, public, double, [, ], getMax, (, ), {, return, getResults, (]
[getMax, (, ), {, return, getResults, (, maxImpl, ), ;, }, public, double, [, ], getMin, (, ), {, return]
[), {, return, getResults, (, maxImpl, ), ;, }, public, double, [, ], getMin, (, ), {, return, getResults, (]
[getMin, (, ), {, return, getResults, (, minImpl, ), ;, }, public, double, [, ], getGeometricMean, (, ), {, return]
[), {, return, getResults, (, minImpl, ), ;, }, public, double, [, ], getGeometricMean, (, ), {, return, getResults, (]
[{, return, getResults, (, geoMeanImpl, ), ;, }, @, Override, public, String, toString, (, ), {, final, String, separator, =]
[;, }, @, Override, public, String, toString, (, ), {, final, String, separator, =, ", ", ;, final, String, suffix, =]
[;, }, @, Override, public, String, toString, (, ), {, final, String, separator, =, ", ", ;, final, String, suffix, =]
[public, String, toString, (, ), {, final, String, separator, =, ", ", ;, final, String, suffix, =, System, ., getProperty, (]
[final, String, separator, =, ", ", ;, final, String, suffix, =, System, ., getProperty, (, "line.separator", ), ;, StringBuilder, outBuffer, =]
[;, final, String, suffix, =, System, ., getProperty, (, "line.separator", ), ;, StringBuilder, outBuffer, =, new, StringBuilder, (, ), ;]
[;, final, String, suffix, =, System, ., getProperty, (, "line.separator", ), ;, StringBuilder, outBuffer, =, new, StringBuilder, (, ), ;]
[=, System, ., getProperty, (, "line.separator", ), ;, StringBuilder, outBuffer, =, new, StringBuilder, (, ), ;, outBuffer, ., append, (]
[=, System, ., getProperty, (, "line.separator", ), ;, StringBuilder, outBuffer, =, new, StringBuilder, (, ), ;, outBuffer, ., append, (]
[., getProperty, (, "line.separator", ), ;, StringBuilder, outBuffer, =, new, StringBuilder, (, ), ;, outBuffer, ., append, (, "MultivariateSummaryStatistics:", +]
["line.separator", ), ;, StringBuilder, outBuffer, =, new, StringBuilder, (, ), ;, outBuffer, ., append, (, "MultivariateSummaryStatistics:", +, suffix, ), ;]
["line.separator", ), ;, StringBuilder, outBuffer, =, new, StringBuilder, (, ), ;, outBuffer, ., append, (, "MultivariateSummaryStatistics:", +, suffix, ), ;]
[outBuffer, =, new, StringBuilder, (, ), ;, outBuffer, ., append, (, "MultivariateSummaryStatistics:", +, suffix, ), ;, outBuffer, ., append, (]
[outBuffer, =, new, StringBuilder, (, ), ;, outBuffer, ., append, (, "MultivariateSummaryStatistics:", +, suffix, ), ;, outBuffer, ., append, (]
[outBuffer, =, new, StringBuilder, (, ), ;, outBuffer, ., append, (, "MultivariateSummaryStatistics:", +, suffix, ), ;, outBuffer, ., append, (]
[new, StringBuilder, (, ), ;, outBuffer, ., append, (, "MultivariateSummaryStatistics:", +, suffix, ), ;, outBuffer, ., append, (, "n: ", +]
[;, outBuffer, ., append, (, "MultivariateSummaryStatistics:", +, suffix, ), ;, outBuffer, ., append, (, "n: ", +, getN, (, ), +]
[append, (, "MultivariateSummaryStatistics:", +, suffix, ), ;, outBuffer, ., append, (, "n: ", +, getN, (, ), +, suffix, ), ;]
["MultivariateSummaryStatistics:", +, suffix, ), ;, outBuffer, ., append, (, "n: ", +, getN, (, ), +, suffix, ), ;, append, (]
[suffix, ), ;, outBuffer, ., append, (, "n: ", +, getN, (, ), +, suffix, ), ;, append, (, outBuffer, ,]
[., append, (, "n: ", +, getN, (, ), +, suffix, ), ;, append, (, outBuffer, ,, getMin, (, ), ,]
[(, "n: ", +, getN, (, ), +, suffix, ), ;, append, (, outBuffer, ,, getMin, (, ), ,, "min: ", ,]
[+, getN, (, ), +, suffix, ), ;, append, (, outBuffer, ,, getMin, (, ), ,, "min: ", ,, separator, ,]
[), +, suffix, ), ;, append, (, outBuffer, ,, getMin, (, ), ,, "min: ", ,, separator, ,, suffix, ), ;]
[suffix, ), ;, append, (, outBuffer, ,, getMin, (, ), ,, "min: ", ,, separator, ,, suffix, ), ;, append, (]
[;, append, (, outBuffer, ,, getMin, (, ), ,, "min: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,]
[,, getMin, (, ), ,, "min: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getMax, (, ), ,]
[(, ), ,, "min: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getMax, (, ), ,, "max: ", ,]
[,, "min: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getMax, (, ), ,, "max: ", ,, separator, ,]
[separator, ,, suffix, ), ;, append, (, outBuffer, ,, getMax, (, ), ,, "max: ", ,, separator, ,, suffix, ), ;]
[suffix, ), ;, append, (, outBuffer, ,, getMax, (, ), ,, "max: ", ,, separator, ,, suffix, ), ;, append, (]
[;, append, (, outBuffer, ,, getMax, (, ), ,, "max: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,]
[,, getMax, (, ), ,, "max: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getMean, (, ), ,]
[(, ), ,, "max: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getMean, (, ), ,, "mean: ", ,]
[,, "max: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getMean, (, ), ,, "mean: ", ,, separator, ,]
[separator, ,, suffix, ), ;, append, (, outBuffer, ,, getMean, (, ), ,, "mean: ", ,, separator, ,, suffix, ), ;]
[suffix, ), ;, append, (, outBuffer, ,, getMean, (, ), ,, "mean: ", ,, separator, ,, suffix, ), ;, append, (]
[;, append, (, outBuffer, ,, getMean, (, ), ,, "mean: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,]
[,, getMean, (, ), ,, "mean: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getGeometricMean, (, ), ,]
[(, ), ,, "mean: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getGeometricMean, (, ), ,, "geometric mean: ", ,]
[,, "mean: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getGeometricMean, (, ), ,, "geometric mean: ", ,, separator, ,]
[separator, ,, suffix, ), ;, append, (, outBuffer, ,, getGeometricMean, (, ), ,, "geometric mean: ", ,, separator, ,, suffix, ), ;]
[suffix, ), ;, append, (, outBuffer, ,, getGeometricMean, (, ), ,, "geometric mean: ", ,, separator, ,, suffix, ), ;, append, (]
[;, append, (, outBuffer, ,, getGeometricMean, (, ), ,, "geometric mean: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,]
[,, getGeometricMean, (, ), ,, "geometric mean: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getSumSq, (, ), ,]
[(, ), ,, "geometric mean: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getSumSq, (, ), ,, "sum of squares: ", ,]
[,, "geometric mean: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getSumSq, (, ), ,, "sum of squares: ", ,, separator, ,]
[separator, ,, suffix, ), ;, append, (, outBuffer, ,, getSumSq, (, ), ,, "sum of squares: ", ,, separator, ,, suffix, ), ;]
[suffix, ), ;, append, (, outBuffer, ,, getSumSq, (, ), ,, "sum of squares: ", ,, separator, ,, suffix, ), ;, append, (]
[;, append, (, outBuffer, ,, getSumSq, (, ), ,, "sum of squares: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,]
[,, getSumSq, (, ), ,, "sum of squares: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getSumLog, (, ), ,]
[(, ), ,, "sum of squares: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getSumLog, (, ), ,, "sum of logarithms: ", ,]
[,, "sum of squares: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getSumLog, (, ), ,, "sum of logarithms: ", ,, separator, ,]
[separator, ,, suffix, ), ;, append, (, outBuffer, ,, getSumLog, (, ), ,, "sum of logarithms: ", ,, separator, ,, suffix, ), ;]
[suffix, ), ;, append, (, outBuffer, ,, getSumLog, (, ), ,, "sum of logarithms: ", ,, separator, ,, suffix, ), ;, append, (]
[;, append, (, outBuffer, ,, getSumLog, (, ), ,, "sum of logarithms: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,]
[,, getSumLog, (, ), ,, "sum of logarithms: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getStandardDeviation, (, ), ,]
[(, ), ,, "sum of logarithms: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getStandardDeviation, (, ), ,, "standard deviation: ", ,]
[,, "sum of logarithms: ", ,, separator, ,, suffix, ), ;, append, (, outBuffer, ,, getStandardDeviation, (, ), ,, "standard deviation: ", ,, separator, ,]
[separator, ,, suffix, ), ;, append, (, outBuffer, ,, getStandardDeviation, (, ), ,, "standard deviation: ", ,, separator, ,, suffix, ), ;]
[separator, ,, suffix, ), ;, append, (, outBuffer, ,, getStandardDeviation, (, ), ,, "standard deviation: ", ,, separator, ,, suffix, ), ;]
[;, append, (, outBuffer, ,, getStandardDeviation, (, ), ,, "standard deviation: ", ,, separator, ,, suffix, ), ;, outBuffer, ., append, (]
[;, append, (, outBuffer, ,, getStandardDeviation, (, ), ,, "standard deviation: ", ,, separator, ,, suffix, ), ;, outBuffer, ., append, (]
[;, append, (, outBuffer, ,, getStandardDeviation, (, ), ,, "standard deviation: ", ,, separator, ,, suffix, ), ;, outBuffer, ., append, (]
[(, outBuffer, ,, getStandardDeviation, (, ), ,, "standard deviation: ", ,, separator, ,, suffix, ), ;, outBuffer, ., append, (, "covariance: ", +]
[(, outBuffer, ,, getStandardDeviation, (, ), ,, "standard deviation: ", ,, separator, ,, suffix, ), ;, outBuffer, ., append, (, "covariance: ", +]
[,, separator, ,, suffix, ), ;, outBuffer, ., append, (, "covariance: ", +, getCovariance, (, ), ., toString, (, ), +]
[), ;, outBuffer, ., append, (, "covariance: ", +, getCovariance, (, ), ., toString, (, ), +, suffix, ), ;, return]
[), ;, outBuffer, ., append, (, "covariance: ", +, getCovariance, (, ), ., toString, (, ), +, suffix, ), ;, return]
[append, (, StringBuilder, buffer, ,, double, [, ], data, ,, String, prefix, ,, String, separator, ,, String, suffix, ), {]
[append, (, StringBuilder, buffer, ,, double, [, ], data, ,, String, prefix, ,, String, separator, ,, String, suffix, ), {]
[,, double, [, ], data, ,, String, prefix, ,, String, separator, ,, String, suffix, ), {, buffer, ., append, (]
[,, String, separator, ,, String, suffix, ), {, buffer, ., append, (, prefix, ), ;, for, (, int, i, =]
[separator, ,, String, suffix, ), {, buffer, ., append, (, prefix, ), ;, for, (, int, i, =, 0, ;]
[separator, ,, String, suffix, ), {, buffer, ., append, (, prefix, ), ;, for, (, int, i, =, 0, ;]
[String, suffix, ), {, buffer, ., append, (, prefix, ), ;, for, (, int, i, =, 0, ;, i, <]
[String, suffix, ), {, buffer, ., append, (, prefix, ), ;, for, (, int, i, =, 0, ;, i, <]
[buffer, ., append, (, prefix, ), ;, for, (, int, i, =, 0, ;, i, <, data, ., length, ;]
[., append, (, prefix, ), ;, for, (, int, i, =, 0, ;, i, <, data, ., length, ;, ++]
[;, for, (, int, i, =, 0, ;, i, <, data, ., length, ;, ++, i, ), {, if, (]
[;, for, (, int, i, =, 0, ;, i, <, data, ., length, ;, ++, i, ), {, if, (]
[(, int, i, =, 0, ;, i, <, data, ., length, ;, ++, i, ), {, if, (, i, >]
[=, 0, ;, i, <, data, ., length, ;, ++, i, ), {, if, (, i, >, 0, ), {]
[=, 0, ;, i, <, data, ., length, ;, ++, i, ), {, if, (, i, >, 0, ), {]
[<, data, ., length, ;, ++, i, ), {, if, (, i, >, 0, ), {, buffer, ., append, (]
[;, ++, i, ), {, if, (, i, >, 0, ), {, buffer, ., append, (, separator, ), ;, }]
[;, ++, i, ), {, if, (, i, >, 0, ), {, buffer, ., append, (, separator, ), ;, }]
[{, if, (, i, >, 0, ), {, buffer, ., append, (, separator, ), ;, }, buffer, ., append, (]
[{, if, (, i, >, 0, ), {, buffer, ., append, (, separator, ), ;, }, buffer, ., append, (]
[(, i, >, 0, ), {, buffer, ., append, (, separator, ), ;, }, buffer, ., append, (, data, []
[{, buffer, ., append, (, separator, ), ;, }, buffer, ., append, (, data, [, i, ], ), ;, }]
[{, buffer, ., append, (, separator, ), ;, }, buffer, ., append, (, data, [, i, ], ), ;, }]
[(, separator, ), ;, }, buffer, ., append, (, data, [, i, ], ), ;, }, buffer, ., append, (]
[[, i, ], ), ;, }, buffer, ., append, (, suffix, ), ;, }, public, void, clear, (, ), {]
[[, i, ], ), ;, }, buffer, ., append, (, suffix, ), ;, }, public, void, clear, (, ), {]
[;, }, buffer, ., append, (, suffix, ), ;, }, public, void, clear, (, ), {, this, ., n, =]
[), ;, }, public, void, clear, (, ), {, this, ., n, =, 0, ;, for, (, int, i, =]
[}, public, void, clear, (, ), {, this, ., n, =, 0, ;, for, (, int, i, =, 0, ;]
[}, public, void, clear, (, ), {, this, ., n, =, 0, ;, for, (, int, i, =, 0, ;]
[void, clear, (, ), {, this, ., n, =, 0, ;, for, (, int, i, =, 0, ;, i, <]
[(, ), {, this, ., n, =, 0, ;, for, (, int, i, =, 0, ;, i, <, k, ;]
[), {, this, ., n, =, 0, ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++]
[., n, =, 0, ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {]
[., n, =, 0, ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {]
[., n, =, 0, ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {]
[=, 0, ;, for, (, int, i, =, 0, ;, i, <, k, ;, ++, i, ), {, minImpl, []
[=, 0, ;, i, <, k, ;, ++, i, ), {, minImpl, [, i, ], ., clear, (, ), ;]
[=, 0, ;, i, <, k, ;, ++, i, ), {, minImpl, [, i, ], ., clear, (, ), ;]
[=, 0, ;, i, <, k, ;, ++, i, ), {, minImpl, [, i, ], ., clear, (, ), ;]
[;, i, <, k, ;, ++, i, ), {, minImpl, [, i, ], ., clear, (, ), ;, maxImpl, []
[), {, minImpl, [, i, ], ., clear, (, ), ;, maxImpl, [, i, ], ., clear, (, ), ;]
[), {, minImpl, [, i, ], ., clear, (, ), ;, maxImpl, [, i, ], ., clear, (, ), ;]
[), {, minImpl, [, i, ], ., clear, (, ), ;, maxImpl, [, i, ], ., clear, (, ), ;]
[minImpl, [, i, ], ., clear, (, ), ;, maxImpl, [, i, ], ., clear, (, ), ;, sumImpl, []
[), ;, maxImpl, [, i, ], ., clear, (, ), ;, sumImpl, [, i, ], ., clear, (, ), ;]
[), ;, maxImpl, [, i, ], ., clear, (, ), ;, sumImpl, [, i, ], ., clear, (, ), ;]
[), ;, maxImpl, [, i, ], ., clear, (, ), ;, sumImpl, [, i, ], ., clear, (, ), ;]
[maxImpl, [, i, ], ., clear, (, ), ;, sumImpl, [, i, ], ., clear, (, ), ;, sumLogImpl, []
[), ;, sumImpl, [, i, ], ., clear, (, ), ;, sumLogImpl, [, i, ], ., clear, (, ), ;]
[), ;, sumImpl, [, i, ], ., clear, (, ), ;, sumLogImpl, [, i, ], ., clear, (, ), ;]
[), ;, sumImpl, [, i, ], ., clear, (, ), ;, sumLogImpl, [, i, ], ., clear, (, ), ;]
[sumImpl, [, i, ], ., clear, (, ), ;, sumLogImpl, [, i, ], ., clear, (, ), ;, sumSqImpl, []
[), ;, sumLogImpl, [, i, ], ., clear, (, ), ;, sumSqImpl, [, i, ], ., clear, (, ), ;]
[), ;, sumLogImpl, [, i, ], ., clear, (, ), ;, sumSqImpl, [, i, ], ., clear, (, ), ;]
[), ;, sumLogImpl, [, i, ], ., clear, (, ), ;, sumSqImpl, [, i, ], ., clear, (, ), ;]
[sumLogImpl, [, i, ], ., clear, (, ), ;, sumSqImpl, [, i, ], ., clear, (, ), ;, geoMeanImpl, []
[), ;, sumSqImpl, [, i, ], ., clear, (, ), ;, geoMeanImpl, [, i, ], ., clear, (, ), ;]
[), ;, sumSqImpl, [, i, ], ., clear, (, ), ;, geoMeanImpl, [, i, ], ., clear, (, ), ;]
[), ;, sumSqImpl, [, i, ], ., clear, (, ), ;, geoMeanImpl, [, i, ], ., clear, (, ), ;]
[sumSqImpl, [, i, ], ., clear, (, ), ;, geoMeanImpl, [, i, ], ., clear, (, ), ;, meanImpl, []
[;, geoMeanImpl, [, i, ], ., clear, (, ), ;, meanImpl, [, i, ], ., clear, (, ), ;, }]
[;, geoMeanImpl, [, i, ], ., clear, (, ), ;, meanImpl, [, i, ], ., clear, (, ), ;, }]
[}, covarianceImpl, ., clear, (, ), ;, }, @, Override, public, boolean, equals, (, Object, object, ), {, if, (]
[}, covarianceImpl, ., clear, (, ), ;, }, @, Override, public, boolean, equals, (, Object, object, ), {, if, (]
[., clear, (, ), ;, }, @, Override, public, boolean, equals, (, Object, object, ), {, if, (, object, ==]
[;, }, @, Override, public, boolean, equals, (, Object, object, ), {, if, (, object, ==, this, ), {, return]
[boolean, equals, (, Object, object, ), {, if, (, object, ==, this, ), {, return, true, ;, }, if, (]
[boolean, equals, (, Object, object, ), {, if, (, object, ==, this, ), {, return, true, ;, }, if, (]
[boolean, equals, (, Object, object, ), {, if, (, object, ==, this, ), {, return, true, ;, }, if, (]
[object, ), {, if, (, object, ==, this, ), {, return, true, ;, }, if, (, object, instanceof, MultivariateSummaryStatistics, ==]
[(, object, ==, this, ), {, return, true, ;, }, if, (, object, instanceof, MultivariateSummaryStatistics, ==, false, ), {, return]
[return, true, ;, }, if, (, object, instanceof, MultivariateSummaryStatistics, ==, false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =]
[}, if, (, object, instanceof, MultivariateSummaryStatistics, ==, false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, )]
[object, instanceof, MultivariateSummaryStatistics, ==, false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, ), object, ;, return]
[object, instanceof, MultivariateSummaryStatistics, ==, false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, ), object, ;, return]
[object, instanceof, MultivariateSummaryStatistics, ==, false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, ), object, ;, return]
[object, instanceof, MultivariateSummaryStatistics, ==, false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, ), object, ;, return]
[object, instanceof, MultivariateSummaryStatistics, ==, false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, ), object, ;, return]
[object, instanceof, MultivariateSummaryStatistics, ==, false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, ), object, ;, return]
[object, instanceof, MultivariateSummaryStatistics, ==, false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, ), object, ;, return]
[object, instanceof, MultivariateSummaryStatistics, ==, false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, ), object, ;, return]
[object, instanceof, MultivariateSummaryStatistics, ==, false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, ), object, ;, return]
[object, instanceof, MultivariateSummaryStatistics, ==, false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, ), object, ;, return]
[false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, ), object, ;, return, MathArrays, ., equalsIncludingNaN, (]
[false, ), {, return, false, ;, }, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, ), object, ;, return, MathArrays, ., equalsIncludingNaN, (]
[}, MultivariateSummaryStatistics, stat, =, (, MultivariateSummaryStatistics, ), object, ;, return, MathArrays, ., equalsIncludingNaN, (, stat, ., getGeometricMean, (, ), ,]
[MultivariateSummaryStatistics, ), object, ;, return, MathArrays, ., equalsIncludingNaN, (, stat, ., getGeometricMean, (, ), ,, getGeometricMean, (, ), ), &&]
[MultivariateSummaryStatistics, ), object, ;, return, MathArrays, ., equalsIncludingNaN, (, stat, ., getGeometricMean, (, ), ,, getGeometricMean, (, ), ), &&]
[return, MathArrays, ., equalsIncludingNaN, (, stat, ., getGeometricMean, (, ), ,, getGeometricMean, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (]
[return, MathArrays, ., equalsIncludingNaN, (, stat, ., getGeometricMean, (, ), ,, getGeometricMean, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (]
[., getGeometricMean, (, ), ,, getGeometricMean, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMax, (, ), ,]
[getGeometricMean, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMax, (, ), ,, getMax, (, ), ), &&]
[getGeometricMean, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMax, (, ), ,, getMax, (, ), ), &&]
[&&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMax, (, ), ,, getMax, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (]
[&&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMax, (, ), ,, getMax, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (]
[., getMax, (, ), ,, getMax, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMean, (, ), ,]
[getMax, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMean, (, ), ,, getMean, (, ), ), &&]
[getMax, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMean, (, ), ,, getMean, (, ), ), &&]
[&&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMean, (, ), ,, getMean, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (]
[&&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMean, (, ), ,, getMean, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (]
[., getMean, (, ), ,, getMean, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMin, (, ), ,]
[getMean, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMin, (, ), ,, getMin, (, ), ), &&]
[getMean, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMin, (, ), ,, getMin, (, ), ), &&]
[&&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMin, (, ), ,, getMin, (, ), ), &&, Precision, ., equalsIncludingNaN, (]
[&&, MathArrays, ., equalsIncludingNaN, (, stat, ., getMin, (, ), ,, getMin, (, ), ), &&, Precision, ., equalsIncludingNaN, (]
[., getMin, (, ), ,, getMin, (, ), ), &&, Precision, ., equalsIncludingNaN, (, stat, ., getN, (, ), ,]
[getMin, (, ), ), &&, Precision, ., equalsIncludingNaN, (, stat, ., getN, (, ), ,, getN, (, ), ), &&]
[getMin, (, ), ), &&, Precision, ., equalsIncludingNaN, (, stat, ., getN, (, ), ,, getN, (, ), ), &&]
[&&, Precision, ., equalsIncludingNaN, (, stat, ., getN, (, ), ,, getN, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (]
[&&, Precision, ., equalsIncludingNaN, (, stat, ., getN, (, ), ,, getN, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (]
[., getN, (, ), ,, getN, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSum, (, ), ,]
[getN, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSum, (, ), ,, getSum, (, ), ), &&]
[getN, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSum, (, ), ,, getSum, (, ), ), &&]
[&&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSum, (, ), ,, getSum, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (]
[&&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSum, (, ), ,, getSum, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (]
[., getSum, (, ), ,, getSum, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSumSq, (, ), ,]
[getSum, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSumSq, (, ), ,, getSumSq, (, ), ), &&]
[getSum, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSumSq, (, ), ,, getSumSq, (, ), ), &&]
[&&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSumSq, (, ), ,, getSumSq, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (]
[&&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSumSq, (, ), ,, getSumSq, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (]
[., getSumSq, (, ), ,, getSumSq, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSumLog, (, ), ,]
[getSumSq, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSumLog, (, ), ,, getSumLog, (, ), ), &&]
[getSumSq, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSumLog, (, ), ,, getSumLog, (, ), ), &&]
[getSumSq, (, ), ), &&, MathArrays, ., equalsIncludingNaN, (, stat, ., getSumLog, (, ), ,, getSumLog, (, ), ), &&]
[(, stat, ., getSumLog, (, ), ,, getSumLog, (, ), ), &&, stat, ., getCovariance, (, ), ., equals, (]
[., equals, (, getCovariance, (, ), ), ;, }, @, Override, public, int, hashCode, (, ), {, int, result, =]
[., equals, (, getCovariance, (, ), ), ;, }, @, Override, public, int, hashCode, (, ), {, int, result, =]
[(, getCovariance, (, ), ), ;, }, @, Override, public, int, hashCode, (, ), {, int, result, =, 31, +]
[(, getCovariance, (, ), ), ;, }, @, Override, public, int, hashCode, (, ), {, int, result, =, 31, +]
[), ;, }, @, Override, public, int, hashCode, (, ), {, int, result, =, 31, +, MathUtils, ., hash, (]
[public, int, hashCode, (, ), {, int, result, =, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;]
[hashCode, (, ), {, int, result, =, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =]
[hashCode, (, ), {, int, result, =, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =]
[hashCode, (, ), {, int, result, =, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =]
[), {, int, result, =, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =, result, *]
[int, result, =, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =, result, *, 31, +]
[int, result, =, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =, result, *, 31, +]
[+, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (]
[getGeometricMean, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =]
[;, result, =, result, *, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =, result, *]
[=, result, *, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =, result, *, 31, +]
[=, result, *, 31, +, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =, result, *, 31, +]
[+, MathUtils, ., hash, (, getGeometricMean, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (]
[getGeometricMean, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMax, (, ), ), ;]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMax, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMax, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMax, (, ), ), ;, result, =]
[;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMax, (, ), ), ;, result, =, result, *]
[=, result, *, 31, +, MathUtils, ., hash, (, getMax, (, ), ), ;, result, =, result, *, 31, +]
[=, result, *, 31, +, MathUtils, ., hash, (, getMax, (, ), ), ;, result, =, result, *, 31, +]
[+, MathUtils, ., hash, (, getMax, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (]
[getMax, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMean, (, ), ), ;]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMean, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMean, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMean, (, ), ), ;, result, =]
[;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMean, (, ), ), ;, result, =, result, *]
[=, result, *, 31, +, MathUtils, ., hash, (, getMean, (, ), ), ;, result, =, result, *, 31, +]
[=, result, *, 31, +, MathUtils, ., hash, (, getMean, (, ), ), ;, result, =, result, *, 31, +]
[+, MathUtils, ., hash, (, getMean, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (]
[getMean, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMin, (, ), ), ;]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMin, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMin, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMin, (, ), ), ;, result, =]
[;, result, =, result, *, 31, +, MathUtils, ., hash, (, getMin, (, ), ), ;, result, =, result, *]
[=, result, *, 31, +, MathUtils, ., hash, (, getMin, (, ), ), ;, result, =, result, *, 31, +]
[=, result, *, 31, +, MathUtils, ., hash, (, getMin, (, ), ), ;, result, =, result, *, 31, +]
[+, MathUtils, ., hash, (, getMin, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (]
[getMin, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getN, (, ), ), ;]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getN, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getN, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getN, (, ), ), ;, result, =]
[;, result, =, result, *, 31, +, MathUtils, ., hash, (, getN, (, ), ), ;, result, =, result, *]
[=, result, *, 31, +, MathUtils, ., hash, (, getN, (, ), ), ;, result, =, result, *, 31, +]
[=, result, *, 31, +, MathUtils, ., hash, (, getN, (, ), ), ;, result, =, result, *, 31, +]
[+, MathUtils, ., hash, (, getN, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (]
[getN, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSum, (, ), ), ;]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSum, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSum, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSum, (, ), ), ;, result, =]
[;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSum, (, ), ), ;, result, =, result, *]
[=, result, *, 31, +, MathUtils, ., hash, (, getSum, (, ), ), ;, result, =, result, *, 31, +]
[=, result, *, 31, +, MathUtils, ., hash, (, getSum, (, ), ), ;, result, =, result, *, 31, +]
[+, MathUtils, ., hash, (, getSum, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (]
[getSum, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSumSq, (, ), ), ;]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSumSq, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSumSq, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSumSq, (, ), ), ;, result, =]
[;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSumSq, (, ), ), ;, result, =, result, *]
[=, result, *, 31, +, MathUtils, ., hash, (, getSumSq, (, ), ), ;, result, =, result, *, 31, +]
[=, result, *, 31, +, MathUtils, ., hash, (, getSumSq, (, ), ), ;, result, =, result, *, 31, +]
[+, MathUtils, ., hash, (, getSumSq, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (]
[getSumSq, (, ), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSumLog, (, ), ), ;]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSumLog, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSumLog, (, ), ), ;, result, =]
[), ), ;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSumLog, (, ), ), ;, result, =]
[;, result, =, result, *, 31, +, MathUtils, ., hash, (, getSumLog, (, ), ), ;, result, =, result, *]
[=, result, *, 31, +, MathUtils, ., hash, (, getSumLog, (, ), ), ;, result, =, result, *, 31, +]
[=, result, *, 31, +, MathUtils, ., hash, (, getSumLog, (, ), ), ;, result, =, result, *, 31, +]
[getSumLog, (, ), ), ;, result, =, result, *, 31, +, getCovariance, (, ), ., hashCode, (, ), ;, return]
[}, private, void, setImpl, (, StorelessUnivariateStatistic, [, ], newImpl, ,, StorelessUnivariateStatistic, [, ], oldImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {]
[(, StorelessUnivariateStatistic, [, ], newImpl, ,, StorelessUnivariateStatistic, [, ], oldImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, checkEmpty, (, ), ;]
[[, ], newImpl, ,, StorelessUnivariateStatistic, [, ], oldImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, checkEmpty, (, ), ;, checkDimension, (]
[[, ], newImpl, ,, StorelessUnivariateStatistic, [, ], oldImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, checkEmpty, (, ), ;, checkDimension, (]
[[, ], oldImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, checkEmpty, (, ), ;, checkDimension, (, newImpl, ., length, ), ;]
[[, ], oldImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, checkEmpty, (, ), ;, checkDimension, (, newImpl, ., length, ), ;]
[throws, MathIllegalStateException, ,, DimensionMismatchException, {, checkEmpty, (, ), ;, checkDimension, (, newImpl, ., length, ), ;, System, ., arraycopy, (]
[,, DimensionMismatchException, {, checkEmpty, (, ), ;, checkDimension, (, newImpl, ., length, ), ;, System, ., arraycopy, (, newImpl, ,]
[{, checkEmpty, (, ), ;, checkDimension, (, newImpl, ., length, ), ;, System, ., arraycopy, (, newImpl, ,, 0, ,]
[(, ), ;, checkDimension, (, newImpl, ., length, ), ;, System, ., arraycopy, (, newImpl, ,, 0, ,, oldImpl, ,]
[;, checkDimension, (, newImpl, ., length, ), ;, System, ., arraycopy, (, newImpl, ,, 0, ,, oldImpl, ,, 0, ,]
[;, checkDimension, (, newImpl, ., length, ), ;, System, ., arraycopy, (, newImpl, ,, 0, ,, oldImpl, ,, 0, ,]
[,, oldImpl, ,, 0, ,, newImpl, ., length, ), ;, }, public, StorelessUnivariateStatistic, [, ], getSumImpl, (, ), {, return]
[,, oldImpl, ,, 0, ,, newImpl, ., length, ), ;, }, public, StorelessUnivariateStatistic, [, ], getSumImpl, (, ), {, return]
[., clone, (, ), ;, }, public, void, setSumImpl, (, StorelessUnivariateStatistic, [, ], sumImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {]
[(, ), ;, }, public, void, setSumImpl, (, StorelessUnivariateStatistic, [, ], sumImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (]
[;, }, public, void, setSumImpl, (, StorelessUnivariateStatistic, [, ], sumImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, sumImpl, ,]
[;, }, public, void, setSumImpl, (, StorelessUnivariateStatistic, [, ], sumImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, sumImpl, ,]
[{, setImpl, (, sumImpl, ,, this, ., sumImpl, ), ;, }, public, StorelessUnivariateStatistic, [, ], getSumsqImpl, (, ), {, return]
[{, setImpl, (, sumImpl, ,, this, ., sumImpl, ), ;, }, public, StorelessUnivariateStatistic, [, ], getSumsqImpl, (, ), {, return]
[., clone, (, ), ;, }, public, void, setSumsqImpl, (, StorelessUnivariateStatistic, [, ], sumsqImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {]
[(, ), ;, }, public, void, setSumsqImpl, (, StorelessUnivariateStatistic, [, ], sumsqImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (]
[;, }, public, void, setSumsqImpl, (, StorelessUnivariateStatistic, [, ], sumsqImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, sumsqImpl, ,]
[;, }, public, void, setSumsqImpl, (, StorelessUnivariateStatistic, [, ], sumsqImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, sumsqImpl, ,]
[{, setImpl, (, sumsqImpl, ,, this, ., sumSqImpl, ), ;, }, public, StorelessUnivariateStatistic, [, ], getMinImpl, (, ), {, return]
[{, setImpl, (, sumsqImpl, ,, this, ., sumSqImpl, ), ;, }, public, StorelessUnivariateStatistic, [, ], getMinImpl, (, ), {, return]
[., clone, (, ), ;, }, public, void, setMinImpl, (, StorelessUnivariateStatistic, [, ], minImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {]
[(, ), ;, }, public, void, setMinImpl, (, StorelessUnivariateStatistic, [, ], minImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (]
[;, }, public, void, setMinImpl, (, StorelessUnivariateStatistic, [, ], minImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, minImpl, ,]
[;, }, public, void, setMinImpl, (, StorelessUnivariateStatistic, [, ], minImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, minImpl, ,]
[{, setImpl, (, minImpl, ,, this, ., minImpl, ), ;, }, public, StorelessUnivariateStatistic, [, ], getMaxImpl, (, ), {, return]
[{, setImpl, (, minImpl, ,, this, ., minImpl, ), ;, }, public, StorelessUnivariateStatistic, [, ], getMaxImpl, (, ), {, return]
[., clone, (, ), ;, }, public, void, setMaxImpl, (, StorelessUnivariateStatistic, [, ], maxImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {]
[(, ), ;, }, public, void, setMaxImpl, (, StorelessUnivariateStatistic, [, ], maxImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (]
[;, }, public, void, setMaxImpl, (, StorelessUnivariateStatistic, [, ], maxImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, maxImpl, ,]
[;, }, public, void, setMaxImpl, (, StorelessUnivariateStatistic, [, ], maxImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, maxImpl, ,]
[{, setImpl, (, maxImpl, ,, this, ., maxImpl, ), ;, }, public, StorelessUnivariateStatistic, [, ], getSumLogImpl, (, ), {, return]
[{, setImpl, (, maxImpl, ,, this, ., maxImpl, ), ;, }, public, StorelessUnivariateStatistic, [, ], getSumLogImpl, (, ), {, return]
[., clone, (, ), ;, }, public, void, setSumLogImpl, (, StorelessUnivariateStatistic, [, ], sumLogImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {]
[(, ), ;, }, public, void, setSumLogImpl, (, StorelessUnivariateStatistic, [, ], sumLogImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (]
[;, }, public, void, setSumLogImpl, (, StorelessUnivariateStatistic, [, ], sumLogImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, sumLogImpl, ,]
[;, }, public, void, setSumLogImpl, (, StorelessUnivariateStatistic, [, ], sumLogImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, sumLogImpl, ,]
[{, setImpl, (, sumLogImpl, ,, this, ., sumLogImpl, ), ;, }, public, StorelessUnivariateStatistic, [, ], getGeoMeanImpl, (, ), {, return]
[{, setImpl, (, sumLogImpl, ,, this, ., sumLogImpl, ), ;, }, public, StorelessUnivariateStatistic, [, ], getGeoMeanImpl, (, ), {, return]
[., clone, (, ), ;, }, public, void, setGeoMeanImpl, (, StorelessUnivariateStatistic, [, ], geoMeanImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {]
[(, ), ;, }, public, void, setGeoMeanImpl, (, StorelessUnivariateStatistic, [, ], geoMeanImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (]
[;, }, public, void, setGeoMeanImpl, (, StorelessUnivariateStatistic, [, ], geoMeanImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, geoMeanImpl, ,]
[;, }, public, void, setGeoMeanImpl, (, StorelessUnivariateStatistic, [, ], geoMeanImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, geoMeanImpl, ,]
[{, setImpl, (, geoMeanImpl, ,, this, ., geoMeanImpl, ), ;, }, public, StorelessUnivariateStatistic, [, ], getMeanImpl, (, ), {, return]
[{, setImpl, (, geoMeanImpl, ,, this, ., geoMeanImpl, ), ;, }, public, StorelessUnivariateStatistic, [, ], getMeanImpl, (, ), {, return]
[., clone, (, ), ;, }, public, void, setMeanImpl, (, StorelessUnivariateStatistic, [, ], meanImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {]
[(, ), ;, }, public, void, setMeanImpl, (, StorelessUnivariateStatistic, [, ], meanImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (]
[;, }, public, void, setMeanImpl, (, StorelessUnivariateStatistic, [, ], meanImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, meanImpl, ,]
[;, }, public, void, setMeanImpl, (, StorelessUnivariateStatistic, [, ], meanImpl, ), throws, MathIllegalStateException, ,, DimensionMismatchException, {, setImpl, (, meanImpl, ,]
[setImpl, (, meanImpl, ,, this, ., meanImpl, ), ;, }, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (]
[setImpl, (, meanImpl, ,, this, ., meanImpl, ), ;, }, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (]
[meanImpl, ,, this, ., meanImpl, ), ;, }, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (, n, >]
[meanImpl, ), ;, }, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (, n, >, 0, ), {, throw]
[}, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (, n, >, 0, ), {, throw, new, MathIllegalStateException, (]
[}, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (, n, >, 0, ), {, throw, new, MathIllegalStateException, (]
[(, ), throws, MathIllegalStateException, {, if, (, n, >, 0, ), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC, ,]
[., VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC, ,, n, ), ;, }, }, private, void, checkDimension, (, int, dimension, ), throws, DimensionMismatchException, {, if, (]
[., VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC, ,, n, ), ;, }, }, private, void, checkDimension, (, int, dimension, ), throws, DimensionMismatchException, {, if, (]
[,, n, ), ;, }, }, private, void, checkDimension, (, int, dimension, ), throws, DimensionMismatchException, {, if, (, dimension, !=]
[}, }, private, void, checkDimension, (, int, dimension, ), throws, DimensionMismatchException, {, if, (, dimension, !=, k, ), {, throw]
[void, checkDimension, (, int, dimension, ), throws, DimensionMismatchException, {, if, (, dimension, !=, k, ), {, throw, new, DimensionMismatchException, (]
[(, int, dimension, ), throws, DimensionMismatchException, {, if, (, dimension, !=, k, ), {, throw, new, DimensionMismatchException, (, dimension, ,]
