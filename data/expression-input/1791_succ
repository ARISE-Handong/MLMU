[;, private, JSONArray, lineMaps, =, null, ;, private, List, <, OriginalMapping, >, mappings, ;, public, SourceMapConsumerV2, (, ), {, }]
[;, private, List, <, OriginalMapping, >, mappings, ;, public, SourceMapConsumerV2, (, ), {, }, @, Override, public, void, parse, (]
[;, parse, (, sourceMapRoot, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex]
[), ;, parse, (, sourceMapRoot, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +]
[;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex, ), ;, }, }, public]
[), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex, ), ;, }, }]
[;, }, }, public, void, parse, (, JSONObject, sourceMapRoot, ), throws, SourceMapParseException, {, try, {, parseInternal, (, sourceMapRoot, ), ;]
[), ;, }, }, public, void, parse, (, JSONObject, sourceMapRoot, ), throws, SourceMapParseException, {, try, {, parseInternal, (, sourceMapRoot, )]
[+, ex, ), ;, }, }, public, void, parse, (, JSONObject, sourceMapRoot, ), throws, SourceMapParseException, {, try, {, parseInternal, (]
[), ;, }, }, public, void, parse, (, JSONObject, sourceMapRoot, ), throws, SourceMapParseException, {, try, {, parseInternal, (, sourceMapRoot, )]
[;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex, ), ;, }, }, private]
[), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex, ), ;, }, }]
[;, }, }, private, void, parseInternal, (, JSONObject, sourceMapRoot, ), throws, JSONException, ,, SourceMapParseException, {, int, version, =, sourceMapRoot, .]
[), ;, }, }, private, void, parseInternal, (, JSONObject, sourceMapRoot, ), throws, JSONException, ,, SourceMapParseException, {, int, version, =, sourceMapRoot]
[+, ex, ), ;, }, }, private, void, parseInternal, (, JSONObject, sourceMapRoot, ), throws, JSONException, ,, SourceMapParseException, {, int, version]
[), ;, }, }, private, void, parseInternal, (, JSONObject, sourceMapRoot, ), throws, JSONException, ,, SourceMapParseException, {, int, version, =, sourceMapRoot]
[;, if, (, version, !=, 2, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file]
[., getInt, (, "version", ), ;, if, (, version, !=, 2, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version]
[), ;, if, (, version, !=, 2, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String]
[), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file"]
[!=, 2, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString]
[), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file"]
[;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, ), )]
[), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, )]
[+, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty]
[), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, )]
[;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, int, lineCount]
[., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty"]
[), ;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, int]
[), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, int, lineCount, =, sourceMapRoot, ., getInt, (, "lineCount", ), ;]
[., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, int, lineCount, =, sourceMapRoot, ., getInt]
[;, }, int, lineCount, =, sourceMapRoot, ., getInt, (, "lineCount", ), ;, lineMaps, =, sourceMapRoot, ., getJSONArray, (, "lineMaps", )]
[), ;, }, int, lineCount, =, sourceMapRoot, ., getInt, (, "lineCount", ), ;, lineMaps, =, sourceMapRoot, ., getJSONArray, (, "lineMaps"]
[;, lineMaps, =, sourceMapRoot, ., getJSONArray, (, "lineMaps", ), ;, if, (, lineCount, !=, lineMaps, ., length, (, ), )]
[., getInt, (, "lineCount", ), ;, lineMaps, =, sourceMapRoot, ., getJSONArray, (, "lineMaps", ), ;, if, (, lineCount, !=, lineMaps]
[), ;, lineMaps, =, sourceMapRoot, ., getJSONArray, (, "lineMaps", ), ;, if, (, lineCount, !=, lineMaps, ., length, (, )]
[=, sourceMapRoot, ., getJSONArray, (, "lineMaps", ), ;, if, (, lineCount, !=, lineMaps, ., length, (, ), ), {, throw]
[;, if, (, lineCount, !=, lineMaps, ., length, (, ), ), {, throw, new, SourceMapParseException, (, "lineMaps length does not match lineCount", ), ;, }]
[., getJSONArray, (, "lineMaps", ), ;, if, (, lineCount, !=, lineMaps, ., length, (, ), ), {, throw, new, SourceMapParseException]
[), ;, if, (, lineCount, !=, lineMaps, ., length, (, ), ), {, throw, new, SourceMapParseException, (, "lineMaps length does not match lineCount", ), ;]
[), {, throw, new, SourceMapParseException, (, "lineMaps length does not match lineCount", ), ;, }, characterMap, =, Maps, ., newHashMap, (, ), ;, JSONArray, sources]
[!=, lineMaps, ., length, (, ), ), {, throw, new, SourceMapParseException, (, "lineMaps length does not match lineCount", ), ;, }, characterMap, =, Maps, .]
[), {, throw, new, SourceMapParseException, (, "lineMaps length does not match lineCount", ), ;, }, characterMap, =, Maps, ., newHashMap, (, ), ;, JSONArray, sources]
[., length, (, ), ), {, throw, new, SourceMapParseException, (, "lineMaps length does not match lineCount", ), ;, }, characterMap, =, Maps, ., newHashMap, (]
[;, }, characterMap, =, Maps, ., newHashMap, (, ), ;, JSONArray, sources, =, sourceMapRoot, ., getJSONArray, (, "sources", ), ;]
[), ;, }, characterMap, =, Maps, ., newHashMap, (, ), ;, JSONArray, sources, =, sourceMapRoot, ., getJSONArray, (, "sources", )]
[=, Maps, ., newHashMap, (, ), ;, JSONArray, sources, =, sourceMapRoot, ., getJSONArray, (, "sources", ), ;, JSONArray, names, =]
[;, JSONArray, sources, =, sourceMapRoot, ., getJSONArray, (, "sources", ), ;, JSONArray, names, =, sourceMapRoot, ., has, (, "names", )]
[., newHashMap, (, ), ;, JSONArray, sources, =, sourceMapRoot, ., getJSONArray, (, "sources", ), ;, JSONArray, names, =, sourceMapRoot, .]
[;, JSONArray, names, =, sourceMapRoot, ., has, (, "names", ), ?, sourceMapRoot, ., getJSONArray, (, "names", ), :, null, ;]
[., getJSONArray, (, "sources", ), ;, JSONArray, names, =, sourceMapRoot, ., has, (, "names", ), ?, sourceMapRoot, ., getJSONArray, (]
[), ;, JSONArray, names, =, sourceMapRoot, ., has, (, "names", ), ?, sourceMapRoot, ., getJSONArray, (, "names", ), :, null]
[;, JSONArray, jsonMappings, =, sourceMapRoot, ., getJSONArray, (, "mappings", ), ;, mappings, =, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;]
[?, sourceMapRoot, ., getJSONArray, (, "names", ), :, null, ;, JSONArray, jsonMappings, =, sourceMapRoot, ., getJSONArray, (, "mappings", ), ;]
[., has, (, "names", ), ?, sourceMapRoot, ., getJSONArray, (, "names", ), :, null, ;, JSONArray, jsonMappings, =, sourceMapRoot, .]
[), ?, sourceMapRoot, ., getJSONArray, (, "names", ), :, null, ;, JSONArray, jsonMappings, =, sourceMapRoot, ., getJSONArray, (, "mappings", )]
[:, null, ;, JSONArray, jsonMappings, =, sourceMapRoot, ., getJSONArray, (, "mappings", ), ;, mappings, =, Lists, ., newArrayListWithCapacity, (, lineCount]
[., getJSONArray, (, "names", ), :, null, ;, JSONArray, jsonMappings, =, sourceMapRoot, ., getJSONArray, (, "mappings", ), ;, mappings, =]
[), :, null, ;, JSONArray, jsonMappings, =, sourceMapRoot, ., getJSONArray, (, "mappings", ), ;, mappings, =, Lists, ., newArrayListWithCapacity, (]
[;, JSONArray, jsonMappings, =, sourceMapRoot, ., getJSONArray, (, "mappings", ), ;, mappings, =, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;]
[;, mappings, =, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;, for, (, int, i, =, 0, ;, i, <, jsonMappings]
[., getJSONArray, (, "mappings", ), ;, mappings, =, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;, for, (, int, i, =]
[), ;, mappings, =, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;, for, (, int, i, =, 0, ;, i, <]
[=, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;, for, (, int, i, =, 0, ;, i, <, jsonMappings, ., length]
[;, for, (, int, i, =, 0, ;, i, <, jsonMappings, ., length, (, ), ;, i, ++, ), {]
[., newArrayListWithCapacity, (, lineCount, ), ;, for, (, int, i, =, 0, ;, i, <, jsonMappings, ., length, (, )]
[), ;, for, (, int, i, =, 0, ;, i, <, jsonMappings, ., length, (, ), ;, i, ++, )]
[;, i, <, jsonMappings, ., length, (, ), ;, i, ++, ), {, JSONArray, entry, =, jsonMappings, ., getJSONArray, (]
[;, i, ++, ), {, JSONArray, entry, =, jsonMappings, ., getJSONArray, (, i, ), ;, String, name, =, entry, .]
[<, jsonMappings, ., length, (, ), ;, i, ++, ), {, JSONArray, entry, =, jsonMappings, ., getJSONArray, (, i, )]
[;, i, ++, ), {, JSONArray, entry, =, jsonMappings, ., getJSONArray, (, i, ), ;, String, name, =, entry, .]
[., length, (, ), ;, i, ++, ), {, JSONArray, entry, =, jsonMappings, ., getJSONArray, (, i, ), ;, String]
[), {, JSONArray, entry, =, jsonMappings, ., getJSONArray, (, i, ), ;, String, name, =, entry, ., optString, (, 3]
[++, ), {, JSONArray, entry, =, jsonMappings, ., getJSONArray, (, i, ), ;, String, name, =, entry, ., optString, (]
[;, String, name, =, entry, ., optString, (, 3, ,, "", ), ;, if, (, names, !=, null, ), {]
[., getJSONArray, (, i, ), ;, String, name, =, entry, ., optString, (, 3, ,, "", ), ;, if, (]
[), ;, String, name, =, entry, ., optString, (, 3, ,, "", ), ;, if, (, names, !=, null, )]
[;, if, (, names, !=, null, ), {, try, {, int, nameIndex, =, entry, ., getInt, (, 3, ), ;]
[., optString, (, 3, ,, "", ), ;, if, (, names, !=, null, ), {, try, {, int, nameIndex, =]
[,, "", ), ;, if, (, names, !=, null, ), {, try, {, int, nameIndex, =, entry, ., getInt, (]
[), ;, if, (, names, !=, null, ), {, try, {, int, nameIndex, =, entry, ., getInt, (, 3, )]
[), {, try, {, int, nameIndex, =, entry, ., getInt, (, 3, ), ;, name, =, names, ., getString, (]
[!=, null, ), {, try, {, int, nameIndex, =, entry, ., getInt, (, 3, ), ;, name, =, names, .]
[), {, try, {, int, nameIndex, =, entry, ., getInt, (, 3, ), ;, name, =, names, ., getString, (]
[;, name, =, names, ., getString, (, nameIndex, ), ;, }, catch, (, JSONException, e, ), {, }, }, String]
[., getInt, (, 3, ), ;, name, =, names, ., getString, (, nameIndex, ), ;, }, catch, (, JSONException, e]
[), ;, name, =, names, ., getString, (, nameIndex, ), ;, }, catch, (, JSONException, e, ), {, }, }]
[=, names, ., getString, (, nameIndex, ), ;, }, catch, (, JSONException, e, ), {, }, }, String, sourceFile, =]
[;, }, catch, (, JSONException, e, ), {, }, }, String, sourceFile, =, sources, ., getString, (, entry, ., getInt]
[., getString, (, nameIndex, ), ;, }, catch, (, JSONException, e, ), {, }, }, String, sourceFile, =, sources, .]
[), ;, }, catch, (, JSONException, e, ), {, }, }, String, sourceFile, =, sources, ., getString, (, entry, .]
[;, int, lineNumber, =, entry, ., getInt, (, 1, ), ;, int, column, =, entry, ., getInt, (, 2, )]
[., getString, (, entry, ., getInt, (, 0, ), ), ;, int, lineNumber, =, entry, ., getInt, (, 1, )]
[), ;, int, lineNumber, =, entry, ., getInt, (, 1, ), ;, int, column, =, entry, ., getInt, (, 2]
[., getInt, (, 0, ), ), ;, int, lineNumber, =, entry, ., getInt, (, 1, ), ;, int, column, =]
[), ), ;, int, lineNumber, =, entry, ., getInt, (, 1, ), ;, int, column, =, entry, ., getInt, (]
[;, int, column, =, entry, ., getInt, (, 2, ), ;, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (]
[., getInt, (, 1, ), ;, int, column, =, entry, ., getInt, (, 2, ), ;, OriginalMapping, ., Builder, builder]
[), ;, int, column, =, entry, ., getInt, (, 2, ), ;, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder]
[;, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, sourceFile, ), ., setLineNumber, (, lineNumber]
[., getInt, (, 2, ), ;, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, sourceFile]
[), ;, OriginalMapping, ., Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, sourceFile, ), ., setLineNumber, (]
[;, mappings, ., add, (, builder, ., build, (, ), ), ;, }, }, @, Override, public, OriginalMapping, getMappingForLine, (]
[., setIdentifier, (, name, ), ;, mappings, ., add, (, builder, ., build, (, ), ), ;, }, }, @]
[., setColumnPosition, (, column, ), ., setIdentifier, (, name, ), ;, mappings, ., add, (, builder, ., build, (, )]
[., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, column, ), ., setIdentifier, (, name, ), ;, mappings, ., add, (]
[., setOriginalFile, (, sourceFile, ), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, column, ), ., setIdentifier, (, name, )]
[., newBuilder, (, ), ., setOriginalFile, (, sourceFile, ), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, column, ), .]
[), ., setLineNumber, (, lineNumber, ), ., setColumnPosition, (, column, ), ., setIdentifier, (, name, ), ;, mappings, ., add]
[), ., setColumnPosition, (, column, ), ., setIdentifier, (, name, ), ;, mappings, ., add, (, builder, ., build, (]
[), ., setIdentifier, (, name, ), ;, mappings, ., add, (, builder, ., build, (, ), ), ;, }, }]
[), ;, mappings, ., add, (, builder, ., build, (, ), ), ;, }, }, @, Override, public, OriginalMapping, getMappingForLine]
[;, }, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, columnIndex, ), {, lineNumber, --, ;, columnIndex]
[., add, (, builder, ., build, (, ), ), ;, }, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber]
[), ;, }, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, columnIndex, ), {, lineNumber, --, ;]
[., build, (, ), ), ;, }, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, columnIndex, )]
[;, columnIndex, --, ;, if, (, lineNumber, >=, lineMaps, ., length, (, ), ), {, return, null, ;, }, Preconditions]
[--, ;, columnIndex, --, ;, if, (, lineNumber, >=, lineMaps, ., length, (, ), ), {, return, null, ;, }]
[;, if, (, lineNumber, >=, lineMaps, ., length, (, ), ), {, return, null, ;, }, Preconditions, ., checkState, (]
[--, ;, if, (, lineNumber, >=, lineMaps, ., length, (, ), ), {, return, null, ;, }, Preconditions, ., checkState]
[), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ,, "Line number must be >= 0", ), ;, Preconditions, ., checkState]
[>=, lineMaps, ., length, (, ), ), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ,]
[), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ,, "Line number must be >= 0", ), ;, Preconditions, ., checkState]
[., length, (, ), ), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ,, "Line number must be >= 0", )]
[;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ,, "Line number must be >= 0", ), ;, Preconditions, ., checkState, (, columnIndex, >=, 0]
[;, Preconditions, ., checkState, (, columnIndex, >=, 0, ,, "Column index must be >= 0", ), ;, if, (, !, characterMap, ., containsKey, (, lineNumber]
[., checkState, (, lineNumber, >=, 0, ,, "Line number must be >= 0", ), ;, Preconditions, ., checkState, (, columnIndex, >=, 0, ,, "Column index must be >= 0", )]
[,, "Line number must be >= 0", ), ;, Preconditions, ., checkState, (, columnIndex, >=, 0, ,, "Column index must be >= 0", ), ;, if, (, !, characterMap, .]
[>=, 0, ,, "Line number must be >= 0", ), ;, Preconditions, ., checkState, (, columnIndex, >=, 0, ,, "Column index must be >= 0", ), ;, if, (, !]
[,, "Line number must be >= 0", ), ;, Preconditions, ., checkState, (, columnIndex, >=, 0, ,, "Column index must be >= 0", ), ;, if, (, !, characterMap, .]
[), ;, Preconditions, ., checkState, (, columnIndex, >=, 0, ,, "Column index must be >= 0", ), ;, if, (, !, characterMap, ., containsKey, (]
[;, if, (, !, characterMap, ., containsKey, (, lineNumber, ), ), {, try, {, characterMap, ., put, (, lineNumber, ,]
[., checkState, (, columnIndex, >=, 0, ,, "Column index must be >= 0", ), ;, if, (, !, characterMap, ., containsKey, (, lineNumber, ), )]
[,, "Column index must be >= 0", ), ;, if, (, !, characterMap, ., containsKey, (, lineNumber, ), ), {, try, {, characterMap, ., put]
[>=, 0, ,, "Column index must be >= 0", ), ;, if, (, !, characterMap, ., containsKey, (, lineNumber, ), ), {, try, {, characterMap]
[,, "Column index must be >= 0", ), ;, if, (, !, characterMap, ., containsKey, (, lineNumber, ), ), {, try, {, characterMap, ., put]
[), ;, if, (, !, characterMap, ., containsKey, (, lineNumber, ), ), {, try, {, characterMap, ., put, (, lineNumber]
[), {, try, {, characterMap, ., put, (, lineNumber, ,, SourceMapLineDecoder, ., decodeLine, (, lineMaps, ., getString, (, lineNumber, )]
[), {, try, {, characterMap, ., put, (, lineNumber, ,, SourceMapLineDecoder, ., decodeLine, (, lineMaps, ., getString, (, lineNumber, )]
[., containsKey, (, lineNumber, ), ), {, try, {, characterMap, ., put, (, lineNumber, ,, SourceMapLineDecoder, ., decodeLine, (, lineMaps]
[), ), {, try, {, characterMap, ., put, (, lineNumber, ,, SourceMapLineDecoder, ., decodeLine, (, lineMaps, ., getString, (, lineNumber]
[;, }, catch, (, JSONException, jse, ), {, throw, new, IllegalStateException, (, "JSON exception when retrieving line map", ,, jse, ), ;, }, }, List]
[., put, (, lineNumber, ,, SourceMapLineDecoder, ., decodeLine, (, lineMaps, ., getString, (, lineNumber, ), ), ), ;, }, catch]
[,, SourceMapLineDecoder, ., decodeLine, (, lineMaps, ., getString, (, lineNumber, ), ), ), ;, }, catch, (, JSONException, jse, )]
[), ;, }, catch, (, JSONException, jse, ), {, throw, new, IllegalStateException, (, "JSON exception when retrieving line map", ,, jse, ), ;, }, }]
[., decodeLine, (, lineMaps, ., getString, (, lineNumber, ), ), ), ;, }, catch, (, JSONException, jse, ), {, throw]
[), ), ;, }, catch, (, JSONException, jse, ), {, throw, new, IllegalStateException, (, "JSON exception when retrieving line map", ,, jse, ), ;, }]
[., getString, (, lineNumber, ), ), ), ;, }, catch, (, JSONException, jse, ), {, throw, new, IllegalStateException, (, "JSON exception when retrieving line map"]
[), ), ), ;, }, catch, (, JSONException, jse, ), {, throw, new, IllegalStateException, (, "JSON exception when retrieving line map", ,, jse, ), ;]
[;, }, }, List, <, Integer, >, map, =, characterMap, ., get, (, lineNumber, ), ;, if, (, map, ==]
[,, jse, ), ;, }, }, List, <, Integer, >, map, =, characterMap, ., get, (, lineNumber, ), ;, if]
[), ;, }, }, List, <, Integer, >, map, =, characterMap, ., get, (, lineNumber, ), ;, if, (, map]
[;, if, (, map, ==, null, ||, map, ., size, (, ), <=, columnIndex, ), {, return, null, ;, }]
[., get, (, lineNumber, ), ;, if, (, map, ==, null, ||, map, ., size, (, ), <=, columnIndex, )]
[), ;, if, (, map, ==, null, ||, map, ., size, (, ), <=, columnIndex, ), {, return, null, ;]
[), {, return, null, ;, }, int, index, =, map, ., get, (, columnIndex, ), ;, if, (, index, ==]
[||, map, ., size, (, ), <=, columnIndex, ), {, return, null, ;, }, int, index, =, map, ., get]
[==, null, ||, map, ., size, (, ), <=, columnIndex, ), {, return, null, ;, }, int, index, =, map]
[||, map, ., size, (, ), <=, columnIndex, ), {, return, null, ;, }, int, index, =, map, ., get]
[), {, return, null, ;, }, int, index, =, map, ., get, (, columnIndex, ), ;, if, (, index, ==]
[<=, columnIndex, ), {, return, null, ;, }, int, index, =, map, ., get, (, columnIndex, ), ;, if, (]
[., size, (, ), <=, columnIndex, ), {, return, null, ;, }, int, index, =, map, ., get, (, columnIndex]
[), {, return, null, ;, }, int, index, =, map, ., get, (, columnIndex, ), ;, if, (, index, ==]
[;, }, int, index, =, map, ., get, (, columnIndex, ), ;, if, (, index, ==, -, 1, ), {]
[;, if, (, index, ==, -, 1, ), {, return, null, ;, }, Preconditions, ., checkState, (, index, <, mappings]
[., get, (, columnIndex, ), ;, if, (, index, ==, -, 1, ), {, return, null, ;, }, Preconditions, .]
[), ;, if, (, index, ==, -, 1, ), {, return, null, ;, }, Preconditions, ., checkState, (, index, <]
[), {, return, null, ;, }, Preconditions, ., checkState, (, index, <, mappings, ., size, (, ), ,, "Invalid mapping reference", )]
[==, -, 1, ), {, return, null, ;, }, Preconditions, ., checkState, (, index, <, mappings, ., size, (, )]
[), {, return, null, ;, }, Preconditions, ., checkState, (, index, <, mappings, ., size, (, ), ,, "Invalid mapping reference", )]
[), {, return, null, ;, }, Preconditions, ., checkState, (, index, <, mappings, ., size, (, ), ,, "Invalid mapping reference", )]
[;, }, Preconditions, ., checkState, (, index, <, mappings, ., size, (, ), ,, "Invalid mapping reference", ), ;, return, mappings, .]
[;, return, mappings, ., get, (, index, ), ;, }, }]
[., checkState, (, index, <, mappings, ., size, (, ), ,, "Invalid mapping reference", ), ;, return, mappings, ., get, (, index]
[,, "Invalid mapping reference", ), ;, return, mappings, ., get, (, index, ), ;, }, }]
[<, mappings, ., size, (, ), ,, "Invalid mapping reference", ), ;, return, mappings, ., get, (, index, ), ;, }, }]
[,, "Invalid mapping reference", ), ;, return, mappings, ., get, (, index, ), ;, }, }]
[., size, (, ), ,, "Invalid mapping reference", ), ;, return, mappings, ., get, (, index, ), ;, }, }]
[), ;, return, mappings, ., get, (, index, ), ;, }, }]
[;, }, }]
[., get, (, index, ), ;, }, }]
[), ;, }, }]
