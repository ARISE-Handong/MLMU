[,, handler, ,, StepNormalizerMode, ., INCREMENT, ,, StepNormalizerBounds, ., FIRST, ), ;, }, public, StepNormalizer, (, final, double, h, ,]
[,, StepNormalizerMode, ., INCREMENT, ,, StepNormalizerBounds, ., FIRST, ), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler]
[,, StepNormalizerBounds, ., FIRST, ), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler, handler, ,, final, StepNormalizerMode]
[., INCREMENT, ,, StepNormalizerBounds, ., FIRST, ), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler, handler, ,]
[), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler, handler, ,, final, StepNormalizerMode, mode, ), {, this]
[., FIRST, ), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler, handler, ,, final, StepNormalizerMode, mode, )]
[,, handler, ,, mode, ,, StepNormalizerBounds, ., FIRST, ), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler]
[,, mode, ,, StepNormalizerBounds, ., FIRST, ), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler, handler, ,]
[,, StepNormalizerBounds, ., FIRST, ), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler, handler, ,, final, StepNormalizerBounds]
[), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler, handler, ,, final, StepNormalizerBounds, bounds, ), {, this]
[., FIRST, ), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler, handler, ,, final, StepNormalizerBounds, bounds, )]
[,, handler, ,, StepNormalizerMode, ., INCREMENT, ,, bounds, ), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler]
[,, StepNormalizerMode, ., INCREMENT, ,, bounds, ), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler, handler, ,]
[,, bounds, ), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler, handler, ,, final, StepNormalizerMode, mode, ,]
[., INCREMENT, ,, bounds, ), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler, handler, ,, final, StepNormalizerMode]
[), ;, }, public, StepNormalizer, (, final, double, h, ,, final, FixedStepHandler, handler, ,, final, StepNormalizerMode, mode, ,, final, StepNormalizerBounds]
[=, FastMath, ., abs, (, h, ), ;, this, ., handler, =, handler, ;, this, ., mode, =, mode, ;]
[., h, =, FastMath, ., abs, (, h, ), ;, this, ., handler, =, handler, ;, this, ., mode, =]
[;, this, ., handler, =, handler, ;, this, ., mode, =, mode, ;, this, ., bounds, =, bounds, ;, firstTime]
[., abs, (, h, ), ;, this, ., handler, =, handler, ;, this, ., mode, =, mode, ;, this, .]
[), ;, this, ., handler, =, handler, ;, this, ., mode, =, mode, ;, this, ., bounds, =, bounds, ;]
[=, handler, ;, this, ., mode, =, mode, ;, this, ., bounds, =, bounds, ;, firstTime, =, Double, ., NaN]
[., handler, =, handler, ;, this, ., mode, =, mode, ;, this, ., bounds, =, bounds, ;, firstTime, =, Double]
[;, this, ., mode, =, mode, ;, this, ., bounds, =, bounds, ;, firstTime, =, Double, ., NaN, ;, lastTime]
[=, mode, ;, this, ., bounds, =, bounds, ;, firstTime, =, Double, ., NaN, ;, lastTime, =, Double, ., NaN]
[., mode, =, mode, ;, this, ., bounds, =, bounds, ;, firstTime, =, Double, ., NaN, ;, lastTime, =, Double]
[;, this, ., bounds, =, bounds, ;, firstTime, =, Double, ., NaN, ;, lastTime, =, Double, ., NaN, ;, lastState]
[=, bounds, ;, firstTime, =, Double, ., NaN, ;, lastTime, =, Double, ., NaN, ;, lastState, =, null, ;, lastDerivatives]
[., bounds, =, bounds, ;, firstTime, =, Double, ., NaN, ;, lastTime, =, Double, ., NaN, ;, lastState, =, null]
[;, firstTime, =, Double, ., NaN, ;, lastTime, =, Double, ., NaN, ;, lastState, =, null, ;, lastDerivatives, =, null]
[=, Double, ., NaN, ;, lastTime, =, Double, ., NaN, ;, lastState, =, null, ;, lastDerivatives, =, null, ;, forward]
[;, lastTime, =, Double, ., NaN, ;, lastState, =, null, ;, lastDerivatives, =, null, ;, forward, =, true, ;, }]
[., NaN, ;, lastTime, =, Double, ., NaN, ;, lastState, =, null, ;, lastDerivatives, =, null, ;, forward, =, true]
[=, Double, ., NaN, ;, lastState, =, null, ;, lastDerivatives, =, null, ;, forward, =, true, ;, }, public, void]
[;, lastState, =, null, ;, lastDerivatives, =, null, ;, forward, =, true, ;, }, public, void, init, (, double, t0]
[., NaN, ;, lastState, =, null, ;, lastDerivatives, =, null, ;, forward, =, true, ;, }, public, void, init, (]
[=, null, ;, lastDerivatives, =, null, ;, forward, =, true, ;, }, public, void, init, (, double, t0, ,, double]
[;, lastDerivatives, =, null, ;, forward, =, true, ;, }, public, void, init, (, double, t0, ,, double, [, ]]
[=, null, ;, forward, =, true, ;, }, public, void, init, (, double, t0, ,, double, [, ], y0, ,]
[;, forward, =, true, ;, }, public, void, init, (, double, t0, ,, double, [, ], y0, ,, double, t]
[=, true, ;, }, public, void, init, (, double, t0, ,, double, [, ], y0, ,, double, t, ), {]
[;, }, public, void, init, (, double, t0, ,, double, [, ], y0, ,, double, t, ), {, firstTime, =]
[=, Double, ., NaN, ;, lastTime, =, Double, ., NaN, ;, lastState, =, null, ;, lastDerivatives, =, null, ;, forward]
[;, lastTime, =, Double, ., NaN, ;, lastState, =, null, ;, lastDerivatives, =, null, ;, forward, =, true, ;, handler]
[., NaN, ;, lastTime, =, Double, ., NaN, ;, lastState, =, null, ;, lastDerivatives, =, null, ;, forward, =, true]
[=, Double, ., NaN, ;, lastState, =, null, ;, lastDerivatives, =, null, ;, forward, =, true, ;, handler, ., init]
[;, lastState, =, null, ;, lastDerivatives, =, null, ;, forward, =, true, ;, handler, ., init, (, t0, ,, y0]
[., NaN, ;, lastState, =, null, ;, lastDerivatives, =, null, ;, forward, =, true, ;, handler, ., init, (, t0]
[=, null, ;, lastDerivatives, =, null, ;, forward, =, true, ;, handler, ., init, (, t0, ,, y0, ,, t]
[;, lastDerivatives, =, null, ;, forward, =, true, ;, handler, ., init, (, t0, ,, y0, ,, t, ), ;]
[=, null, ;, forward, =, true, ;, handler, ., init, (, t0, ,, y0, ,, t, ), ;, }, public]
[;, forward, =, true, ;, handler, ., init, (, t0, ,, y0, ,, t, ), ;, }, public, void, handleStep]
[=, true, ;, handler, ., init, (, t0, ,, y0, ,, t, ), ;, }, public, void, handleStep, (, final]
[;, handler, ., init, (, t0, ,, y0, ,, t, ), ;, }, public, void, handleStep, (, final, StepInterpolator, interpolator]
[;, }, public, void, handleStep, (, final, StepInterpolator, interpolator, ,, final, boolean, isLast, ), throws, MaxCountExceededException, {, if, (, lastState]
[., init, (, t0, ,, y0, ,, t, ), ;, }, public, void, handleStep, (, final, StepInterpolator, interpolator, ,, final]
[,, y0, ,, t, ), ;, }, public, void, handleStep, (, final, StepInterpolator, interpolator, ,, final, boolean, isLast, ), throws]
[,, t, ), ;, }, public, void, handleStep, (, final, StepInterpolator, interpolator, ,, final, boolean, isLast, ), throws, MaxCountExceededException, {]
[), ;, }, public, void, handleStep, (, final, StepInterpolator, interpolator, ,, final, boolean, isLast, ), throws, MaxCountExceededException, {, if, (]
[), {, firstTime, =, interpolator, ., getPreviousTime, (, ), ;, lastTime, =, interpolator, ., getPreviousTime, (, ), ;, interpolator, .]
[==, null, ), {, firstTime, =, interpolator, ., getPreviousTime, (, ), ;, lastTime, =, interpolator, ., getPreviousTime, (, ), ;]
[), {, firstTime, =, interpolator, ., getPreviousTime, (, ), ;, lastTime, =, interpolator, ., getPreviousTime, (, ), ;, interpolator, .]
[=, interpolator, ., getPreviousTime, (, ), ;, lastTime, =, interpolator, ., getPreviousTime, (, ), ;, interpolator, ., setInterpolatedTime, (, lastTime]
[;, lastTime, =, interpolator, ., getPreviousTime, (, ), ;, interpolator, ., setInterpolatedTime, (, lastTime, ), ;, lastState, =, interpolator, .]
[., getPreviousTime, (, ), ;, lastTime, =, interpolator, ., getPreviousTime, (, ), ;, interpolator, ., setInterpolatedTime, (, lastTime, ), ;]
[=, interpolator, ., getPreviousTime, (, ), ;, interpolator, ., setInterpolatedTime, (, lastTime, ), ;, lastState, =, interpolator, ., getInterpolatedState, (]
[;, interpolator, ., setInterpolatedTime, (, lastTime, ), ;, lastState, =, interpolator, ., getInterpolatedState, (, ), ., clone, (, ), ;]
[., getPreviousTime, (, ), ;, interpolator, ., setInterpolatedTime, (, lastTime, ), ;, lastState, =, interpolator, ., getInterpolatedState, (, ), .]
[;, lastState, =, interpolator, ., getInterpolatedState, (, ), ., clone, (, ), ;, lastDerivatives, =, interpolator, ., getInterpolatedDerivatives, (, )]
[., setInterpolatedTime, (, lastTime, ), ;, lastState, =, interpolator, ., getInterpolatedState, (, ), ., clone, (, ), ;, lastDerivatives, =]
[), ;, lastState, =, interpolator, ., getInterpolatedState, (, ), ., clone, (, ), ;, lastDerivatives, =, interpolator, ., getInterpolatedDerivatives, (]
[=, interpolator, ., getInterpolatedState, (, ), ., clone, (, ), ;, lastDerivatives, =, interpolator, ., getInterpolatedDerivatives, (, ), ., clone]
[;, lastDerivatives, =, interpolator, ., getInterpolatedDerivatives, (, ), ., clone, (, ), ;, forward, =, interpolator, ., getCurrentTime, (, )]
[., clone, (, ), ;, lastDerivatives, =, interpolator, ., getInterpolatedDerivatives, (, ), ., clone, (, ), ;, forward, =, interpolator]
[., getInterpolatedState, (, ), ., clone, (, ), ;, lastDerivatives, =, interpolator, ., getInterpolatedDerivatives, (, ), ., clone, (, )]
[=, interpolator, ., getInterpolatedDerivatives, (, ), ., clone, (, ), ;, forward, =, interpolator, ., getCurrentTime, (, ), >=, lastTime]
[;, forward, =, interpolator, ., getCurrentTime, (, ), >=, lastTime, ;, if, (, !, forward, ), {, h, =, -]
[., clone, (, ), ;, forward, =, interpolator, ., getCurrentTime, (, ), >=, lastTime, ;, if, (, !, forward, )]
[., getInterpolatedDerivatives, (, ), ., clone, (, ), ;, forward, =, interpolator, ., getCurrentTime, (, ), >=, lastTime, ;, if]
[=, interpolator, ., getCurrentTime, (, ), >=, lastTime, ;, if, (, !, forward, ), {, h, =, -, h, ;]
[;, if, (, !, forward, ), {, h, =, -, h, ;, }, }, double, nextTime, =, (, mode, ==]
[>=, lastTime, ;, if, (, !, forward, ), {, h, =, -, h, ;, }, }, double, nextTime, =, (]
[., getCurrentTime, (, ), >=, lastTime, ;, if, (, !, forward, ), {, h, =, -, h, ;, }, }]
[;, if, (, !, forward, ), {, h, =, -, h, ;, }, }, double, nextTime, =, (, mode, ==]
[), {, h, =, -, h, ;, }, }, double, nextTime, =, (, mode, ==, StepNormalizerMode, ., INCREMENT, ), ?]
[), {, h, =, -, h, ;, }, }, double, nextTime, =, (, mode, ==, StepNormalizerMode, ., INCREMENT, ), ?]
[=, -, h, ;, }, }, double, nextTime, =, (, mode, ==, StepNormalizerMode, ., INCREMENT, ), ?, lastTime, +, h]
[;, }, }, double, nextTime, =, (, mode, ==, StepNormalizerMode, ., INCREMENT, ), ?, lastTime, +, h, :, (, FastMath]
[;, }, }, double, nextTime, =, (, mode, ==, StepNormalizerMode, ., INCREMENT, ), ?, lastTime, +, h, :, (, FastMath]
[;, if, (, mode, ==, StepNormalizerMode, ., MULTIPLES, &&, Precision, ., equals, (, nextTime, ,, lastTime, ,, 1, ), )]
[?, lastTime, +, h, :, (, FastMath, ., floor, (, lastTime, /, h, ), +, 1, ), *, h, ;]
[), ?, lastTime, +, h, :, (, FastMath, ., floor, (, lastTime, /, h, ), +, 1, ), *, h]
[==, StepNormalizerMode, ., INCREMENT, ), ?, lastTime, +, h, :, (, FastMath, ., floor, (, lastTime, /, h, ), +]
[), ?, lastTime, +, h, :, (, FastMath, ., floor, (, lastTime, /, h, ), +, 1, ), *, h]
[., INCREMENT, ), ?, lastTime, +, h, :, (, FastMath, ., floor, (, lastTime, /, h, ), +, 1, )]
[:, (, FastMath, ., floor, (, lastTime, /, h, ), +, 1, ), *, h, ;, if, (, mode, ==]
[+, h, :, (, FastMath, ., floor, (, lastTime, /, h, ), +, 1, ), *, h, ;, if, (]
[:, (, FastMath, ., floor, (, lastTime, /, h, ), +, 1, ), *, h, ;, if, (, mode, ==]
[;, if, (, mode, ==, StepNormalizerMode, ., MULTIPLES, &&, Precision, ., equals, (, nextTime, ,, lastTime, ,, 1, ), )]
[*, h, ;, if, (, mode, ==, StepNormalizerMode, ., MULTIPLES, &&, Precision, ., equals, (, nextTime, ,, lastTime, ,, 1]
[), *, h, ;, if, (, mode, ==, StepNormalizerMode, ., MULTIPLES, &&, Precision, ., equals, (, nextTime, ,, lastTime, ,]
[+, 1, ), *, h, ;, if, (, mode, ==, StepNormalizerMode, ., MULTIPLES, &&, Precision, ., equals, (, nextTime, ,]
[., floor, (, lastTime, /, h, ), +, 1, ), *, h, ;, if, (, mode, ==, StepNormalizerMode, ., MULTIPLES]
[), +, 1, ), *, h, ;, if, (, mode, ==, StepNormalizerMode, ., MULTIPLES, &&, Precision, ., equals, (, nextTime]
[/, h, ), +, 1, ), *, h, ;, if, (, mode, ==, StepNormalizerMode, ., MULTIPLES, &&, Precision, ., equals]
[), +, 1, ), *, h, ;, if, (, mode, ==, StepNormalizerMode, ., MULTIPLES, &&, Precision, ., equals, (, nextTime]
[), *, h, ;, if, (, mode, ==, StepNormalizerMode, ., MULTIPLES, &&, Precision, ., equals, (, nextTime, ,, lastTime, ,]
[;, if, (, mode, ==, StepNormalizerMode, ., MULTIPLES, &&, Precision, ., equals, (, nextTime, ,, lastTime, ,, 1, ), )]
[), {, nextTime, +=, h, ;, }, boolean, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator, ), ;, while, (, nextInStep]
[&&, Precision, ., equals, (, nextTime, ,, lastTime, ,, 1, ), ), {, nextTime, +=, h, ;, }, boolean, nextInStep]
[==, StepNormalizerMode, ., MULTIPLES, &&, Precision, ., equals, (, nextTime, ,, lastTime, ,, 1, ), ), {, nextTime, +=, h]
[&&, Precision, ., equals, (, nextTime, ,, lastTime, ,, 1, ), ), {, nextTime, +=, h, ;, }, boolean, nextInStep]
[., MULTIPLES, &&, Precision, ., equals, (, nextTime, ,, lastTime, ,, 1, ), ), {, nextTime, +=, h, ;, }]
[), {, nextTime, +=, h, ;, }, boolean, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator, ), ;, while, (, nextInStep]
[., equals, (, nextTime, ,, lastTime, ,, 1, ), ), {, nextTime, +=, h, ;, }, boolean, nextInStep, =, isNextInStep]
[,, lastTime, ,, 1, ), ), {, nextTime, +=, h, ;, }, boolean, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator]
[,, 1, ), ), {, nextTime, +=, h, ;, }, boolean, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator, ), ;]
[), ), {, nextTime, +=, h, ;, }, boolean, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator, ), ;, while, (]
[+=, h, ;, }, boolean, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator, ), ;, while, (, nextInStep, ), {, doNormalizedStep]
[;, }, boolean, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator, ), ;, while, (, nextInStep, ), {, doNormalizedStep, (, false]
[;, while, (, nextInStep, ), {, doNormalizedStep, (, false, ), ;, storeStep, (, interpolator, ,, nextTime, ), ;, nextTime, +=]
[,, interpolator, ), ;, while, (, nextInStep, ), {, doNormalizedStep, (, false, ), ;, storeStep, (, interpolator, ,, nextTime, )]
[), ;, while, (, nextInStep, ), {, doNormalizedStep, (, false, ), ;, storeStep, (, interpolator, ,, nextTime, ), ;, nextTime]
[), {, doNormalizedStep, (, false, ), ;, storeStep, (, interpolator, ,, nextTime, ), ;, nextTime, +=, h, ;, nextInStep, =]
[;, storeStep, (, interpolator, ,, nextTime, ), ;, nextTime, +=, h, ;, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator, )]
[), ;, storeStep, (, interpolator, ,, nextTime, ), ;, nextTime, +=, h, ;, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator]
[;, nextTime, +=, h, ;, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator, ), ;, }, if, (, isLast, ), {]
[,, nextTime, ), ;, nextTime, +=, h, ;, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator, ), ;, }, if, (]
[), ;, nextTime, +=, h, ;, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator, ), ;, }, if, (, isLast, )]
[+=, h, ;, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator, ), ;, }, if, (, isLast, ), {, boolean, addLast]
[;, nextInStep, =, isNextInStep, (, nextTime, ,, interpolator, ), ;, }, if, (, isLast, ), {, boolean, addLast, =, bounds]
[=, isNextInStep, (, nextTime, ,, interpolator, ), ;, }, if, (, isLast, ), {, boolean, addLast, =, bounds, ., lastIncluded]
[;, }, if, (, isLast, ), {, boolean, addLast, =, bounds, ., lastIncluded, (, ), &&, lastTime, !=, interpolator, .]
[,, interpolator, ), ;, }, if, (, isLast, ), {, boolean, addLast, =, bounds, ., lastIncluded, (, ), &&, lastTime]
[), ;, }, if, (, isLast, ), {, boolean, addLast, =, bounds, ., lastIncluded, (, ), &&, lastTime, !=, interpolator]
[), {, boolean, addLast, =, bounds, ., lastIncluded, (, ), &&, lastTime, !=, interpolator, ., getCurrentTime, (, ), ;, doNormalizedStep]
[;, doNormalizedStep, (, !, addLast, ), ;, if, (, addLast, ), {, storeStep, (, interpolator, ,, interpolator, ., getCurrentTime, (]
[&&, lastTime, !=, interpolator, ., getCurrentTime, (, ), ;, doNormalizedStep, (, !, addLast, ), ;, if, (, addLast, ), {]
[., lastIncluded, (, ), &&, lastTime, !=, interpolator, ., getCurrentTime, (, ), ;, doNormalizedStep, (, !, addLast, ), ;, if]
[;, doNormalizedStep, (, !, addLast, ), ;, if, (, addLast, ), {, storeStep, (, interpolator, ,, interpolator, ., getCurrentTime, (]
[!=, interpolator, ., getCurrentTime, (, ), ;, doNormalizedStep, (, !, addLast, ), ;, if, (, addLast, ), {, storeStep, (]
[;, doNormalizedStep, (, !, addLast, ), ;, if, (, addLast, ), {, storeStep, (, interpolator, ,, interpolator, ., getCurrentTime, (]
[., getCurrentTime, (, ), ;, doNormalizedStep, (, !, addLast, ), ;, if, (, addLast, ), {, storeStep, (, interpolator, ,]
[;, if, (, addLast, ), {, storeStep, (, interpolator, ,, interpolator, ., getCurrentTime, (, ), ), ;, doNormalizedStep, (, true]
[), ;, if, (, addLast, ), {, storeStep, (, interpolator, ,, interpolator, ., getCurrentTime, (, ), ), ;, doNormalizedStep, (]
[), ;, if, (, addLast, ), {, storeStep, (, interpolator, ,, interpolator, ., getCurrentTime, (, ), ), ;, doNormalizedStep, (]
[), {, storeStep, (, interpolator, ,, interpolator, ., getCurrentTime, (, ), ), ;, doNormalizedStep, (, true, ), ;, }, }]
[;, doNormalizedStep, (, true, ), ;, }, }, }, private, boolean, isNextInStep, (, double, nextTime, ,, StepInterpolator, interpolator, ), {]
[,, interpolator, ., getCurrentTime, (, ), ), ;, doNormalizedStep, (, true, ), ;, }, }, }, private, boolean, isNextInStep, (]
[), ;, doNormalizedStep, (, true, ), ;, }, }, }, private, boolean, isNextInStep, (, double, nextTime, ,, StepInterpolator, interpolator, )]
[., getCurrentTime, (, ), ), ;, doNormalizedStep, (, true, ), ;, }, }, }, private, boolean, isNextInStep, (, double, nextTime]
[;, }, }, }, private, boolean, isNextInStep, (, double, nextTime, ,, StepInterpolator, interpolator, ), {, return, forward, ?, nextTime, <=]
[), ;, }, }, }, private, boolean, isNextInStep, (, double, nextTime, ,, StepInterpolator, interpolator, ), {, return, forward, ?, nextTime]
[;, }, private, void, doNormalizedStep, (, boolean, isLast, ), {, if, (, !, bounds, ., firstIncluded, (, ), &&, firstTime]
[?, nextTime, <=, interpolator, ., getCurrentTime, (, ), :, nextTime, >=, interpolator, ., getCurrentTime, (, ), ;, }, private, void]
[:, nextTime, >=, interpolator, ., getCurrentTime, (, ), ;, }, private, void, doNormalizedStep, (, boolean, isLast, ), {, if, (]
[<=, interpolator, ., getCurrentTime, (, ), :, nextTime, >=, interpolator, ., getCurrentTime, (, ), ;, }, private, void, doNormalizedStep, (]
[:, nextTime, >=, interpolator, ., getCurrentTime, (, ), ;, }, private, void, doNormalizedStep, (, boolean, isLast, ), {, if, (]
[., getCurrentTime, (, ), :, nextTime, >=, interpolator, ., getCurrentTime, (, ), ;, }, private, void, doNormalizedStep, (, boolean, isLast]
[;, }, private, void, doNormalizedStep, (, boolean, isLast, ), {, if, (, !, bounds, ., firstIncluded, (, ), &&, firstTime]
[>=, interpolator, ., getCurrentTime, (, ), ;, }, private, void, doNormalizedStep, (, boolean, isLast, ), {, if, (, !, bounds]
[;, }, private, void, doNormalizedStep, (, boolean, isLast, ), {, if, (, !, bounds, ., firstIncluded, (, ), &&, firstTime]
[., getCurrentTime, (, ), ;, }, private, void, doNormalizedStep, (, boolean, isLast, ), {, if, (, !, bounds, ., firstIncluded]
[), {, return, ;, }, handler, ., handleStep, (, lastTime, ,, lastState, ,, lastDerivatives, ,, isLast, ), ;, }, private]
[&&, firstTime, ==, lastTime, ), {, return, ;, }, handler, ., handleStep, (, lastTime, ,, lastState, ,, lastDerivatives, ,, isLast]
[&&, firstTime, ==, lastTime, ), {, return, ;, }, handler, ., handleStep, (, lastTime, ,, lastState, ,, lastDerivatives, ,, isLast]
[., firstIncluded, (, ), &&, firstTime, ==, lastTime, ), {, return, ;, }, handler, ., handleStep, (, lastTime, ,, lastState]
[), {, return, ;, }, handler, ., handleStep, (, lastTime, ,, lastState, ,, lastDerivatives, ,, isLast, ), ;, }, private]
[==, lastTime, ), {, return, ;, }, handler, ., handleStep, (, lastTime, ,, lastState, ,, lastDerivatives, ,, isLast, ), ;]
[), {, return, ;, }, handler, ., handleStep, (, lastTime, ,, lastState, ,, lastDerivatives, ,, isLast, ), ;, }, private]
[;, }, private, void, storeStep, (, StepInterpolator, interpolator, ,, double, t, ), throws, MaxCountExceededException, {, lastTime, =, t, ;, interpolator]
[., handleStep, (, lastTime, ,, lastState, ,, lastDerivatives, ,, isLast, ), ;, }, private, void, storeStep, (, StepInterpolator, interpolator, ,]
[,, lastState, ,, lastDerivatives, ,, isLast, ), ;, }, private, void, storeStep, (, StepInterpolator, interpolator, ,, double, t, ), throws]
[,, lastDerivatives, ,, isLast, ), ;, }, private, void, storeStep, (, StepInterpolator, interpolator, ,, double, t, ), throws, MaxCountExceededException, {]
[,, isLast, ), ;, }, private, void, storeStep, (, StepInterpolator, interpolator, ,, double, t, ), throws, MaxCountExceededException, {, lastTime, =]
[), ;, }, private, void, storeStep, (, StepInterpolator, interpolator, ,, double, t, ), throws, MaxCountExceededException, {, lastTime, =, t, ;]
[=, t, ;, interpolator, ., setInterpolatedTime, (, lastTime, ), ;, System, ., arraycopy, (, interpolator, ., getInterpolatedState, (, ), ,]
[;, interpolator, ., setInterpolatedTime, (, lastTime, ), ;, System, ., arraycopy, (, interpolator, ., getInterpolatedState, (, ), ,, 0, ,]
[;, System, ., arraycopy, (, interpolator, ., getInterpolatedState, (, ), ,, 0, ,, lastState, ,, 0, ,, lastState, ., length]
[., setInterpolatedTime, (, lastTime, ), ;, System, ., arraycopy, (, interpolator, ., getInterpolatedState, (, ), ,, 0, ,, lastState, ,]
[), ;, System, ., arraycopy, (, interpolator, ., getInterpolatedState, (, ), ,, 0, ,, lastState, ,, 0, ,, lastState, .]
[;, System, ., arraycopy, (, interpolator, ., getInterpolatedDerivatives, (, ), ,, 0, ,, lastDerivatives, ,, 0, ,, lastDerivatives, ., length]
[., arraycopy, (, interpolator, ., getInterpolatedState, (, ), ,, 0, ,, lastState, ,, 0, ,, lastState, ., length, ), ;]
[,, 0, ,, lastState, ,, 0, ,, lastState, ., length, ), ;, System, ., arraycopy, (, interpolator, ., getInterpolatedDerivatives, (]
[., getInterpolatedState, (, ), ,, 0, ,, lastState, ,, 0, ,, lastState, ., length, ), ;, System, ., arraycopy, (]
[,, lastState, ,, 0, ,, lastState, ., length, ), ;, System, ., arraycopy, (, interpolator, ., getInterpolatedDerivatives, (, ), ,]
[,, 0, ,, lastState, ., length, ), ;, System, ., arraycopy, (, interpolator, ., getInterpolatedDerivatives, (, ), ,, 0, ,]
[,, lastState, ., length, ), ;, System, ., arraycopy, (, interpolator, ., getInterpolatedDerivatives, (, ), ,, 0, ,, lastDerivatives, ,]
[), ;, System, ., arraycopy, (, interpolator, ., getInterpolatedDerivatives, (, ), ,, 0, ,, lastDerivatives, ,, 0, ,, lastDerivatives, .]
[., length, ), ;, System, ., arraycopy, (, interpolator, ., getInterpolatedDerivatives, (, ), ,, 0, ,, lastDerivatives, ,, 0, ,]
[;, }, }]
[., arraycopy, (, interpolator, ., getInterpolatedDerivatives, (, ), ,, 0, ,, lastDerivatives, ,, 0, ,, lastDerivatives, ., length, ), ;]
[,, 0, ,, lastDerivatives, ,, 0, ,, lastDerivatives, ., length, ), ;, }, }]
[., getInterpolatedDerivatives, (, ), ,, 0, ,, lastDerivatives, ,, 0, ,, lastDerivatives, ., length, ), ;, }, }]
[,, lastDerivatives, ,, 0, ,, lastDerivatives, ., length, ), ;, }, }]
[,, 0, ,, lastDerivatives, ., length, ), ;, }, }]
[,, lastDerivatives, ., length, ), ;, }, }]
[), ;, }, }]
[., length, ), ;, }, }]
