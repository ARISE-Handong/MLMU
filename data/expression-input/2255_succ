[;, private, String, [, ], sources, ;, private, String, [, ], names, ;, private, int, lineCount, ;, private, ArrayList, <]
[;, private, String, [, ], sources, ;, private, String, [, ], names, ;, private, int, lineCount, ;, private, ArrayList, <]
[;, private, Map, <, String, ,, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, >, reverseSourceMapping, ;, public, SourceMapConsumerV3]
[;, }, }, @, Override, public, void, parse, (, String, contents, ), throws, SourceMapParseException, {, parse, (, contents, ,, null]
[;, }, public, void, parse, (, String, contents, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {, JSONObject, sourceMapRoot, =]
[,, null, ), ;, }, public, void, parse, (, String, contents, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {]
[), ;, }, public, void, parse, (, String, contents, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {, JSONObject, sourceMapRoot]
[;, parse, (, sourceMapRoot, ,, sectionSupplier, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: "]
[), ;, parse, (, sourceMapRoot, ,, sectionSupplier, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (]
[;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex, ), ;, }, }, public]
[,, sectionSupplier, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex, ), ;]
[), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex, ), ;, }, }]
[;, }, }, public, void, parse, (, JSONObject, sourceMapRoot, ), throws, SourceMapParseException, {, parse, (, sourceMapRoot, ,, null, ), ;]
[), ;, }, }, public, void, parse, (, JSONObject, sourceMapRoot, ), throws, SourceMapParseException, {, parse, (, sourceMapRoot, ,, null, )]
[+, ex, ), ;, }, }, public, void, parse, (, JSONObject, sourceMapRoot, ), throws, SourceMapParseException, {, parse, (, sourceMapRoot, ,]
[), ;, }, }, public, void, parse, (, JSONObject, sourceMapRoot, ), throws, SourceMapParseException, {, parse, (, sourceMapRoot, ,, null, )]
[;, }, public, void, parse, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {, int, version, =]
[,, null, ), ;, }, public, void, parse, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {]
[), ;, }, public, void, parse, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, try, {, int, version]
[;, if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file]
[., getInt, (, "version", ), ;, if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version]
[), ;, if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String]
[), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file"]
[!=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString]
[), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file"]
[;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, ), )]
[), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, )]
[+, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty]
[), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, )]
[;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (]
[., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty"]
[), ;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if]
[), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (, "sections", ), ), {]
[., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (]
[;, }, if, (, sourceMapRoot, ., has, (, "sections", ), ), {, parseMetaMap, (, sourceMapRoot, ,, sectionSupplier, ), ;, return]
[), ;, }, if, (, sourceMapRoot, ., has, (, "sections", ), ), {, parseMetaMap, (, sourceMapRoot, ,, sectionSupplier, ), ;]
[), {, parseMetaMap, (, sourceMapRoot, ,, sectionSupplier, ), ;, return, ;, }, lineCount, =, sourceMapRoot, ., getInt, (, "lineCount", )]
[., has, (, "sections", ), ), {, parseMetaMap, (, sourceMapRoot, ,, sectionSupplier, ), ;, return, ;, }, lineCount, =, sourceMapRoot]
[), ), {, parseMetaMap, (, sourceMapRoot, ,, sectionSupplier, ), ;, return, ;, }, lineCount, =, sourceMapRoot, ., getInt, (, "lineCount"]
[;, return, ;, }, lineCount, =, sourceMapRoot, ., getInt, (, "lineCount", ), ;, String, lineMap, =, sourceMapRoot, ., getString, (]
[,, sectionSupplier, ), ;, return, ;, }, lineCount, =, sourceMapRoot, ., getInt, (, "lineCount", ), ;, String, lineMap, =, sourceMapRoot]
[), ;, return, ;, }, lineCount, =, sourceMapRoot, ., getInt, (, "lineCount", ), ;, String, lineMap, =, sourceMapRoot, ., getString]
[=, sourceMapRoot, ., getInt, (, "lineCount", ), ;, String, lineMap, =, sourceMapRoot, ., getString, (, "mappings", ), ;, sources, =]
[;, String, lineMap, =, sourceMapRoot, ., getString, (, "mappings", ), ;, sources, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "sources"]
[., getInt, (, "lineCount", ), ;, String, lineMap, =, sourceMapRoot, ., getString, (, "mappings", ), ;, sources, =, getJavaStringArray, (]
[), ;, String, lineMap, =, sourceMapRoot, ., getString, (, "mappings", ), ;, sources, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (]
[;, sources, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "sources", ), ), ;, names, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray]
[., getString, (, "mappings", ), ;, sources, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "sources", ), ), ;, names, =]
[), ;, sources, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "sources", ), ), ;, names, =, getJavaStringArray, (, sourceMapRoot, .]
[=, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "sources", ), ), ;, names, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "names"]
[;, names, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "names", ), ), ;, lines, =, Lists, ., newArrayListWithCapacity, (, lineCount]
[), ;, names, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "names", ), ), ;, lines, =, Lists, ., newArrayListWithCapacity, (]
[., getJSONArray, (, "sources", ), ), ;, names, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "names", ), ), ;, lines]
[), ), ;, names, =, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "names", ), ), ;, lines, =, Lists, ., newArrayListWithCapacity]
[=, getJavaStringArray, (, sourceMapRoot, ., getJSONArray, (, "names", ), ), ;, lines, =, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;]
[;, lines, =, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;, new, MappingBuilder, (, lineMap, ), ., build, (, ), ;]
[), ;, lines, =, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;, new, MappingBuilder, (, lineMap, ), ., build, (, )]
[., getJSONArray, (, "names", ), ), ;, lines, =, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;, new, MappingBuilder, (, lineMap]
[), ), ;, lines, =, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;, new, MappingBuilder, (, lineMap, ), ., build, (]
[=, Lists, ., newArrayListWithCapacity, (, lineCount, ), ;, new, MappingBuilder, (, lineMap, ), ., build, (, ), ;, }, catch]
[;, new, MappingBuilder, (, lineMap, ), ., build, (, ), ;, }, catch, (, JSONException, ex, ), {, throw, new]
[., newArrayListWithCapacity, (, lineCount, ), ;, new, MappingBuilder, (, lineMap, ), ., build, (, ), ;, }, catch, (, JSONException]
[), ;, new, MappingBuilder, (, lineMap, ), ., build, (, ), ;, }, catch, (, JSONException, ex, ), {, throw]
[;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex, ), ;, }, }, private]
[., build, (, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex, )]
[), ., build, (, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex]
[;, }, }, private, void, parseMetaMap, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, if, (, sectionSupplier, ==]
[), ;, }, }, private, void, parseMetaMap, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, if, (, sectionSupplier]
[+, ex, ), ;, }, }, private, void, parseMetaMap, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, if]
[), ;, }, }, private, void, parseMetaMap, (, JSONObject, sourceMapRoot, ,, SourceMapSupplier, sectionSupplier, ), throws, SourceMapParseException, {, if, (, sectionSupplier]
[), {, sectionSupplier, =, new, DefaultSourceMapSupplier, (, ), ;, }, try, {, int, version, =, sourceMapRoot, ., getInt, (, "version"]
[==, null, ), {, sectionSupplier, =, new, DefaultSourceMapSupplier, (, ), ;, }, try, {, int, version, =, sourceMapRoot, ., getInt]
[), {, sectionSupplier, =, new, DefaultSourceMapSupplier, (, ), ;, }, try, {, int, version, =, sourceMapRoot, ., getInt, (, "version"]
[=, new, DefaultSourceMapSupplier, (, ), ;, }, try, {, int, version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if]
[;, }, try, {, int, version, =, sourceMapRoot, ., getInt, (, "version", ), ;, if, (, version, !=, 3, )]
[;, if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file]
[., getInt, (, "version", ), ;, if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version]
[), ;, if, (, version, !=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String]
[), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file"]
[!=, 3, ), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString]
[), {, throw, new, SourceMapParseException, (, "Unknown version: ", +, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file"]
[;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, ), )]
[), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, )]
[+, version, ), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty]
[), ;, }, String, file, =, sourceMapRoot, ., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, )]
[;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (]
[., getString, (, "file", ), ;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty"]
[), ;, if, (, file, ., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if]
[), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (, "lineCount", ), ||, sourceMapRoot]
[., isEmpty, (, ), ), {, throw, new, SourceMapParseException, (, "File entry is missing or empty", ), ;, }, if, (, sourceMapRoot, ., has, (]
[;, }, if, (, sourceMapRoot, ., has, (, "lineCount", ), ||, sourceMapRoot, ., has, (, "mappings", ), ||, sourceMapRoot, .]
[), ;, }, if, (, sourceMapRoot, ., has, (, "lineCount", ), ||, sourceMapRoot, ., has, (, "mappings", ), ||, sourceMapRoot]
[), {, throw, new, SourceMapParseException, (, "Invalid map format", ), ;, }, SourceMapGeneratorV3, generator, =, new, SourceMapGeneratorV3, (, ), ;, JSONArray, sections]
[||, sourceMapRoot, ., has, (, "names", ), ), {, throw, new, SourceMapParseException, (, "Invalid map format", ), ;, }, SourceMapGeneratorV3, generator, =]
[||, sourceMapRoot, ., has, (, "sources", ), ||, sourceMapRoot, ., has, (, "names", ), ), {, throw, new, SourceMapParseException, (]
[||, sourceMapRoot, ., has, (, "mappings", ), ||, sourceMapRoot, ., has, (, "sources", ), ||, sourceMapRoot, ., has, (, "names"]
[., has, (, "lineCount", ), ||, sourceMapRoot, ., has, (, "mappings", ), ||, sourceMapRoot, ., has, (, "sources", ), ||]
[), ||, sourceMapRoot, ., has, (, "mappings", ), ||, sourceMapRoot, ., has, (, "sources", ), ||, sourceMapRoot, ., has, (]
[||, sourceMapRoot, ., has, (, "sources", ), ||, sourceMapRoot, ., has, (, "names", ), ), {, throw, new, SourceMapParseException, (]
[., has, (, "mappings", ), ||, sourceMapRoot, ., has, (, "sources", ), ||, sourceMapRoot, ., has, (, "names", ), )]
[), ||, sourceMapRoot, ., has, (, "sources", ), ||, sourceMapRoot, ., has, (, "names", ), ), {, throw, new, SourceMapParseException]
[||, sourceMapRoot, ., has, (, "names", ), ), {, throw, new, SourceMapParseException, (, "Invalid map format", ), ;, }, SourceMapGeneratorV3, generator, =]
[., has, (, "sources", ), ||, sourceMapRoot, ., has, (, "names", ), ), {, throw, new, SourceMapParseException, (, "Invalid map format", )]
[), ||, sourceMapRoot, ., has, (, "names", ), ), {, throw, new, SourceMapParseException, (, "Invalid map format", ), ;, }, SourceMapGeneratorV3, generator]
[), {, throw, new, SourceMapParseException, (, "Invalid map format", ), ;, }, SourceMapGeneratorV3, generator, =, new, SourceMapGeneratorV3, (, ), ;, JSONArray, sections]
[., has, (, "names", ), ), {, throw, new, SourceMapParseException, (, "Invalid map format", ), ;, }, SourceMapGeneratorV3, generator, =, new, SourceMapGeneratorV3]
[), ), {, throw, new, SourceMapParseException, (, "Invalid map format", ), ;, }, SourceMapGeneratorV3, generator, =, new, SourceMapGeneratorV3, (, ), ;, JSONArray]
[;, }, SourceMapGeneratorV3, generator, =, new, SourceMapGeneratorV3, (, ), ;, JSONArray, sections, =, sourceMapRoot, ., getJSONArray, (, "sections", ), ;]
[), ;, }, SourceMapGeneratorV3, generator, =, new, SourceMapGeneratorV3, (, ), ;, JSONArray, sections, =, sourceMapRoot, ., getJSONArray, (, "sections", )]
[;, JSONArray, sections, =, sourceMapRoot, ., getJSONArray, (, "sections", ), ;, for, (, int, i, =, 0, ,, count, =]
[;, for, (, int, i, =, 0, ,, count, =, sections, ., length, (, ), ;, i, <, count, ;]
[., getJSONArray, (, "sections", ), ;, for, (, int, i, =, 0, ,, count, =, sections, ., length, (, )]
[), ;, for, (, int, i, =, 0, ,, count, =, sections, ., length, (, ), ;, i, <, count]
[,, count, =, sections, ., length, (, ), ;, i, <, count, ;, i, ++, ), {, JSONObject, section, =]
[;, i, <, count, ;, i, ++, ), {, JSONObject, section, =, sections, ., getJSONObject, (, i, ), ;, if]
[., length, (, ), ;, i, <, count, ;, i, ++, ), {, JSONObject, section, =, sections, ., getJSONObject, (]
[;, i, ++, ), {, JSONObject, section, =, sections, ., getJSONObject, (, i, ), ;, if, (, section, ., has]
[<, count, ;, i, ++, ), {, JSONObject, section, =, sections, ., getJSONObject, (, i, ), ;, if, (, section]
[;, i, ++, ), {, JSONObject, section, =, sections, ., getJSONObject, (, i, ), ;, if, (, section, ., has]
[), {, JSONObject, section, =, sections, ., getJSONObject, (, i, ), ;, if, (, section, ., has, (, "map", )]
[++, ), {, JSONObject, section, =, sections, ., getJSONObject, (, i, ), ;, if, (, section, ., has, (, "map"]
[;, if, (, section, ., has, (, "map", ), &&, section, ., has, (, "url", ), ), {, throw, new]
[., getJSONObject, (, i, ), ;, if, (, section, ., has, (, "map", ), &&, section, ., has, (, "url"]
[), ;, if, (, section, ., has, (, "map", ), &&, section, ., has, (, "url", ), ), {, throw]
[), {, throw, new, SourceMapParseException, (, "Invalid map format: section may not have both 'map' and 'url'", ), ;, }, JSONObject, offset, =, section, ., getJSONObject, (, "offset", ), ;]
[&&, section, ., has, (, "url", ), ), {, throw, new, SourceMapParseException, (, "Invalid map format: section may not have both 'map' and 'url'", ), ;, }, JSONObject, offset, =]
[., has, (, "map", ), &&, section, ., has, (, "url", ), ), {, throw, new, SourceMapParseException, (, "Invalid map format: section may not have both 'map' and 'url'", )]
[), &&, section, ., has, (, "url", ), ), {, throw, new, SourceMapParseException, (, "Invalid map format: section may not have both 'map' and 'url'", ), ;, }, JSONObject, offset]
[), {, throw, new, SourceMapParseException, (, "Invalid map format: section may not have both 'map' and 'url'", ), ;, }, JSONObject, offset, =, section, ., getJSONObject, (, "offset", ), ;]
[., has, (, "url", ), ), {, throw, new, SourceMapParseException, (, "Invalid map format: section may not have both 'map' and 'url'", ), ;, }, JSONObject, offset, =, section, .]
[), ), {, throw, new, SourceMapParseException, (, "Invalid map format: section may not have both 'map' and 'url'", ), ;, }, JSONObject, offset, =, section, ., getJSONObject, (, "offset", )]
[;, }, JSONObject, offset, =, section, ., getJSONObject, (, "offset", ), ;, int, line, =, offset, ., getInt, (, "line"]
[), ;, }, JSONObject, offset, =, section, ., getJSONObject, (, "offset", ), ;, int, line, =, offset, ., getInt, (]
[;, int, line, =, offset, ., getInt, (, "line", ), ;, int, column, =, offset, ., getInt, (, "column", )]
[., getJSONObject, (, "offset", ), ;, int, line, =, offset, ., getInt, (, "line", ), ;, int, column, =, offset]
[), ;, int, line, =, offset, ., getInt, (, "line", ), ;, int, column, =, offset, ., getInt, (, "column"]
[;, int, column, =, offset, ., getInt, (, "column", ), ;, String, mapSectionContents, ;, if, (, section, ., has, (]
[., getInt, (, "line", ), ;, int, column, =, offset, ., getInt, (, "column", ), ;, String, mapSectionContents, ;, if]
[), ;, int, column, =, offset, ., getInt, (, "column", ), ;, String, mapSectionContents, ;, if, (, section, ., has]
[;, String, mapSectionContents, ;, if, (, section, ., has, (, "url", ), ), {, String, url, =, section, ., getString]
[., getInt, (, "column", ), ;, String, mapSectionContents, ;, if, (, section, ., has, (, "url", ), ), {, String]
[), ;, String, mapSectionContents, ;, if, (, section, ., has, (, "url", ), ), {, String, url, =, section, .]
[), {, String, url, =, section, ., getString, (, "url", ), ;, mapSectionContents, =, sectionSupplier, ., getSourceMap, (, url, )]
[., has, (, "url", ), ), {, String, url, =, section, ., getString, (, "url", ), ;, mapSectionContents, =, sectionSupplier]
[), ), {, String, url, =, section, ., getString, (, "url", ), ;, mapSectionContents, =, sectionSupplier, ., getSourceMap, (, url]
[;, mapSectionContents, =, sectionSupplier, ., getSourceMap, (, url, ), ;, if, (, mapSectionContents, ==, null, ), {, throw, new, SourceMapParseException]
[., getString, (, "url", ), ;, mapSectionContents, =, sectionSupplier, ., getSourceMap, (, url, ), ;, if, (, mapSectionContents, ==, null]
[), ;, mapSectionContents, =, sectionSupplier, ., getSourceMap, (, url, ), ;, if, (, mapSectionContents, ==, null, ), {, throw, new]
[=, sectionSupplier, ., getSourceMap, (, url, ), ;, if, (, mapSectionContents, ==, null, ), {, throw, new, SourceMapParseException, (, "Unable to retrieve: "]
[;, if, (, mapSectionContents, ==, null, ), {, throw, new, SourceMapParseException, (, "Unable to retrieve: ", +, url, ), ;, }, }, else]
[., getSourceMap, (, url, ), ;, if, (, mapSectionContents, ==, null, ), {, throw, new, SourceMapParseException, (, "Unable to retrieve: ", +, url]
[), ;, if, (, mapSectionContents, ==, null, ), {, throw, new, SourceMapParseException, (, "Unable to retrieve: ", +, url, ), ;, }, }]
[), {, throw, new, SourceMapParseException, (, "Unable to retrieve: ", +, url, ), ;, }, }, else, if, (, section, ., has, (]
[==, null, ), {, throw, new, SourceMapParseException, (, "Unable to retrieve: ", +, url, ), ;, }, }, else, if, (, section, .]
[), {, throw, new, SourceMapParseException, (, "Unable to retrieve: ", +, url, ), ;, }, }, else, if, (, section, ., has, (]
[;, }, }, else, if, (, section, ., has, (, "map", ), ), {, mapSectionContents, =, section, ., getString, (]
[), ;, }, }, else, if, (, section, ., has, (, "map", ), ), {, mapSectionContents, =, section, ., getString]
[+, url, ), ;, }, }, else, if, (, section, ., has, (, "map", ), ), {, mapSectionContents, =, section]
[), ;, }, }, else, if, (, section, ., has, (, "map", ), ), {, mapSectionContents, =, section, ., getString]
[), {, mapSectionContents, =, section, ., getString, (, "map", ), ;, }, else, {, throw, new, SourceMapParseException, (, "Invalid map format: section must have either 'map' or 'url'", )]
[., has, (, "map", ), ), {, mapSectionContents, =, section, ., getString, (, "map", ), ;, }, else, {, throw]
[), ), {, mapSectionContents, =, section, ., getString, (, "map", ), ;, }, else, {, throw, new, SourceMapParseException, (, "Invalid map format: section must have either 'map' or 'url'"]
[=, section, ., getString, (, "map", ), ;, }, else, {, throw, new, SourceMapParseException, (, "Invalid map format: section must have either 'map' or 'url'", ), ;, }, generator]
[;, }, else, {, throw, new, SourceMapParseException, (, "Invalid map format: section must have either 'map' or 'url'", ), ;, }, generator, ., mergeMapSection, (, line, ,, column, ,]
[., getString, (, "map", ), ;, }, else, {, throw, new, SourceMapParseException, (, "Invalid map format: section must have either 'map' or 'url'", ), ;, }, generator, ., mergeMapSection]
[), ;, }, else, {, throw, new, SourceMapParseException, (, "Invalid map format: section must have either 'map' or 'url'", ), ;, }, generator, ., mergeMapSection, (, line, ,, column]
[;, }, generator, ., mergeMapSection, (, line, ,, column, ,, mapSectionContents, ), ;, }, StringBuilder, sb, =, new, StringBuilder, (]
[), ;, }, generator, ., mergeMapSection, (, line, ,, column, ,, mapSectionContents, ), ;, }, StringBuilder, sb, =, new, StringBuilder]
[;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;, try, {, generator, ., appendTo, (, sb, ,, file, )]
[., mergeMapSection, (, line, ,, column, ,, mapSectionContents, ), ;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;, try]
[,, column, ,, mapSectionContents, ), ;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;, try, {, generator, ., appendTo]
[,, mapSectionContents, ), ;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;, try, {, generator, ., appendTo, (, sb]
[), ;, }, StringBuilder, sb, =, new, StringBuilder, (, ), ;, try, {, generator, ., appendTo, (, sb, ,, file]
[;, try, {, generator, ., appendTo, (, sb, ,, file, ), ;, }, catch, (, IOException, e, ), {, throw]
[;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, parse, (, sb, .]
[., appendTo, (, sb, ,, file, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e]
[,, file, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, parse]
[), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, parse, (, sb]
[;, }, parse, (, sb, ., toString, (, ), ), ;, }, catch, (, IOException, ex, ), {, throw, new]
[), ;, }, parse, (, sb, ., toString, (, ), ), ;, }, catch, (, IOException, ex, ), {, throw]
[;, }, catch, (, IOException, ex, ), {, throw, new, SourceMapParseException, (, "IO exception: ", +, ex, ), ;, }, catch, (]
[), ;, }, catch, (, IOException, ex, ), {, throw, new, SourceMapParseException, (, "IO exception: ", +, ex, ), ;, }, catch]
[., toString, (, ), ), ;, }, catch, (, IOException, ex, ), {, throw, new, SourceMapParseException, (, "IO exception: ", +, ex]
[;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex, ), ;, }, }, @]
[), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex, ), ;, }, }]
[+, ex, ), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex, ), ;]
[), ;, }, catch, (, JSONException, ex, ), {, throw, new, SourceMapParseException, (, "JSON parse exception: ", +, ex, ), ;, }, }]
[;, }, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, column, ), {, lineNumber, --, ;, column]
[), ;, }, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, column, ), {, lineNumber, --, ;]
[+, ex, ), ;, }, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, column, ), {, lineNumber]
[), ;, }, }, @, Override, public, OriginalMapping, getMappingForLine, (, int, lineNumber, ,, int, column, ), {, lineNumber, --, ;]
[;, column, --, ;, if, (, lineNumber, <, 0, ||, lineNumber, >=, lines, ., size, (, ), ), {, return]
[--, ;, column, --, ;, if, (, lineNumber, <, 0, ||, lineNumber, >=, lines, ., size, (, ), ), {]
[;, if, (, lineNumber, <, 0, ||, lineNumber, >=, lines, ., size, (, ), ), {, return, null, ;, }]
[--, ;, if, (, lineNumber, <, 0, ||, lineNumber, >=, lines, ., size, (, ), ), {, return, null, ;]
[), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ), ;, Preconditions, ., checkState, (, column]
[||, lineNumber, >=, lines, ., size, (, ), ), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=]
[<, 0, ||, lineNumber, >=, lines, ., size, (, ), ), {, return, null, ;, }, Preconditions, ., checkState, (]
[||, lineNumber, >=, lines, ., size, (, ), ), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=]
[), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ), ;, Preconditions, ., checkState, (, column]
[>=, lines, ., size, (, ), ), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, )]
[), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ), ;, Preconditions, ., checkState, (, column]
[., size, (, ), ), {, return, null, ;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ), ;, Preconditions]
[;, }, Preconditions, ., checkState, (, lineNumber, >=, 0, ), ;, Preconditions, ., checkState, (, column, >=, 0, ), ;]
[;, Preconditions, ., checkState, (, column, >=, 0, ), ;, if, (, lines, ., get, (, lineNumber, ), ==, null]
[., checkState, (, lineNumber, >=, 0, ), ;, Preconditions, ., checkState, (, column, >=, 0, ), ;, if, (, lines]
[), ;, Preconditions, ., checkState, (, column, >=, 0, ), ;, if, (, lines, ., get, (, lineNumber, ), ==]
[>=, 0, ), ;, Preconditions, ., checkState, (, column, >=, 0, ), ;, if, (, lines, ., get, (, lineNumber]
[), ;, Preconditions, ., checkState, (, column, >=, 0, ), ;, if, (, lines, ., get, (, lineNumber, ), ==]
[;, if, (, lines, ., get, (, lineNumber, ), ==, null, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }]
[., checkState, (, column, >=, 0, ), ;, if, (, lines, ., get, (, lineNumber, ), ==, null, ), {]
[), ;, if, (, lines, ., get, (, lineNumber, ), ==, null, ), {, return, getPreviousMapping, (, lineNumber, ), ;]
[>=, 0, ), ;, if, (, lines, ., get, (, lineNumber, ), ==, null, ), {, return, getPreviousMapping, (, lineNumber]
[), ;, if, (, lines, ., get, (, lineNumber, ), ==, null, ), {, return, getPreviousMapping, (, lineNumber, ), ;]
[), {, return, getPreviousMapping, (, lineNumber, ), ;, }, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber]
[==, null, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }, ArrayList, <, Entry, >, entries, =, lines, ., get]
[., get, (, lineNumber, ), ==, null, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }, ArrayList, <, Entry, >]
[), ==, null, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }, ArrayList, <, Entry, >, entries, =, lines, .]
[), {, return, getPreviousMapping, (, lineNumber, ), ;, }, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber]
[;, }, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, Preconditions, ., checkState, (, entries]
[), ;, }, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, Preconditions, ., checkState, (]
[;, Preconditions, ., checkState, (, entries, ., size, (, ), >, 0, ), ;, if, (, entries, ., get, (]
[., get, (, lineNumber, ), ;, Preconditions, ., checkState, (, entries, ., size, (, ), >, 0, ), ;, if]
[), ;, Preconditions, ., checkState, (, entries, ., size, (, ), >, 0, ), ;, if, (, entries, ., get]
[;, if, (, entries, ., get, (, 0, ), ., getGeneratedColumn, (, ), >, column, ), {, return, getPreviousMapping, (]
[., checkState, (, entries, ., size, (, ), >, 0, ), ;, if, (, entries, ., get, (, 0, )]
[), ;, if, (, entries, ., get, (, 0, ), ., getGeneratedColumn, (, ), >, column, ), {, return, getPreviousMapping]
[>, 0, ), ;, if, (, entries, ., get, (, 0, ), ., getGeneratedColumn, (, ), >, column, ), {]
[., size, (, ), >, 0, ), ;, if, (, entries, ., get, (, 0, ), ., getGeneratedColumn, (, )]
[), ;, if, (, entries, ., get, (, 0, ), ., getGeneratedColumn, (, ), >, column, ), {, return, getPreviousMapping]
[), {, return, getPreviousMapping, (, lineNumber, ), ;, }, int, index, =, search, (, entries, ,, column, ,, 0, ,]
[>, column, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }, int, index, =, search, (, entries, ,, column, ,]
[., getGeneratedColumn, (, ), >, column, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }, int, index, =, search, (]
[., get, (, 0, ), ., getGeneratedColumn, (, ), >, column, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }]
[), ., getGeneratedColumn, (, ), >, column, ), {, return, getPreviousMapping, (, lineNumber, ), ;, }, int, index, =, search]
[), {, return, getPreviousMapping, (, lineNumber, ), ;, }, int, index, =, search, (, entries, ,, column, ,, 0, ,]
[;, }, int, index, =, search, (, entries, ,, column, ,, 0, ,, entries, ., size, (, ), -, 1]
[), ;, }, int, index, =, search, (, entries, ,, column, ,, 0, ,, entries, ., size, (, ), -]
[;, Preconditions, ., checkState, (, index, >=, 0, ,, "unexpected:%s", ,, index, ), ;, return, getOriginalMappingForEntry, (, entries, ., get]
[,, column, ,, 0, ,, entries, ., size, (, ), -, 1, ), ;, Preconditions, ., checkState, (, index, >=]
[,, 0, ,, entries, ., size, (, ), -, 1, ), ;, Preconditions, ., checkState, (, index, >=, 0, ,]
[,, entries, ., size, (, ), -, 1, ), ;, Preconditions, ., checkState, (, index, >=, 0, ,, "unexpected:%s", ,]
[), ;, Preconditions, ., checkState, (, index, >=, 0, ,, "unexpected:%s", ,, index, ), ;, return, getOriginalMappingForEntry, (, entries, .]
[-, 1, ), ;, Preconditions, ., checkState, (, index, >=, 0, ,, "unexpected:%s", ,, index, ), ;, return, getOriginalMappingForEntry, (]
[., size, (, ), -, 1, ), ;, Preconditions, ., checkState, (, index, >=, 0, ,, "unexpected:%s", ,, index, )]
[), ;, Preconditions, ., checkState, (, index, >=, 0, ,, "unexpected:%s", ,, index, ), ;, return, getOriginalMappingForEntry, (, entries, .]
[;, return, getOriginalMappingForEntry, (, entries, ., get, (, index, ), ), ;, }, @, Override, public, Collection, <, String, >]
[., checkState, (, index, >=, 0, ,, "unexpected:%s", ,, index, ), ;, return, getOriginalMappingForEntry, (, entries, ., get, (, index]
[,, "unexpected:%s", ,, index, ), ;, return, getOriginalMappingForEntry, (, entries, ., get, (, index, ), ), ;, }, @, Override]
[>=, 0, ,, "unexpected:%s", ,, index, ), ;, return, getOriginalMappingForEntry, (, entries, ., get, (, index, ), ), ;, }]
[,, "unexpected:%s", ,, index, ), ;, return, getOriginalMappingForEntry, (, entries, ., get, (, index, ), ), ;, }, @, Override]
[,, index, ), ;, return, getOriginalMappingForEntry, (, entries, ., get, (, index, ), ), ;, }, @, Override, public, Collection]
[), ;, return, getOriginalMappingForEntry, (, entries, ., get, (, index, ), ), ;, }, @, Override, public, Collection, <, String]
[;, }, @, Override, public, Collection, <, String, >, getOriginalSources, (, ), {, return, Arrays, ., asList, (, sources, )]
[), ;, }, @, Override, public, Collection, <, String, >, getOriginalSources, (, ), {, return, Arrays, ., asList, (, sources]
[., get, (, index, ), ), ;, }, @, Override, public, Collection, <, String, >, getOriginalSources, (, ), {, return]
[), ), ;, }, @, Override, public, Collection, <, String, >, getOriginalSources, (, ), {, return, Arrays, ., asList, (]
[;, }, @, Override, public, Collection, <, OriginalMapping, >, getReverseMapping, (, String, originalFile, ,, int, line, ,, int, column, )]
[., asList, (, sources, ), ;, }, @, Override, public, Collection, <, OriginalMapping, >, getReverseMapping, (, String, originalFile, ,, int]
[), ;, }, @, Override, public, Collection, <, OriginalMapping, >, getReverseMapping, (, String, originalFile, ,, int, line, ,, int, column]
[), {, createReverseMapping, (, ), ;, }, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, sourceLineToCollectionMap, =, reverseSourceMapping, .]
[==, null, ), {, createReverseMapping, (, ), ;, }, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, sourceLineToCollectionMap, =]
[), {, createReverseMapping, (, ), ;, }, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, sourceLineToCollectionMap, =, reverseSourceMapping, .]
[;, }, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, sourceLineToCollectionMap, =, reverseSourceMapping, ., get, (, originalFile, ), ;]
[;, if, (, sourceLineToCollectionMap, ==, null, ), {, return, Collections, ., emptyList, (, ), ;, }, else, {, Collection, <]
[., get, (, originalFile, ), ;, if, (, sourceLineToCollectionMap, ==, null, ), {, return, Collections, ., emptyList, (, ), ;]
[), ;, if, (, sourceLineToCollectionMap, ==, null, ), {, return, Collections, ., emptyList, (, ), ;, }, else, {, Collection]
[), {, return, Collections, ., emptyList, (, ), ;, }, else, {, Collection, <, OriginalMapping, >, mappings, =, sourceLineToCollectionMap, .]
[==, null, ), {, return, Collections, ., emptyList, (, ), ;, }, else, {, Collection, <, OriginalMapping, >, mappings, =]
[), {, return, Collections, ., emptyList, (, ), ;, }, else, {, Collection, <, OriginalMapping, >, mappings, =, sourceLineToCollectionMap, .]
[;, }, else, {, Collection, <, OriginalMapping, >, mappings, =, sourceLineToCollectionMap, ., get, (, line, ), ;, if, (, mappings]
[., emptyList, (, ), ;, }, else, {, Collection, <, OriginalMapping, >, mappings, =, sourceLineToCollectionMap, ., get, (, line, )]
[;, if, (, mappings, ==, null, ), {, return, Collections, ., emptyList, (, ), ;, }, else, {, return, mappings]
[., get, (, line, ), ;, if, (, mappings, ==, null, ), {, return, Collections, ., emptyList, (, ), ;]
[), ;, if, (, mappings, ==, null, ), {, return, Collections, ., emptyList, (, ), ;, }, else, {, return]
[), {, return, Collections, ., emptyList, (, ), ;, }, else, {, return, mappings, ;, }, }, }, private, String]
[==, null, ), {, return, Collections, ., emptyList, (, ), ;, }, else, {, return, mappings, ;, }, }, }]
[), {, return, Collections, ., emptyList, (, ), ;, }, else, {, return, mappings, ;, }, }, }, private, String]
[;, }, else, {, return, mappings, ;, }, }, }, private, String, [, ], getJavaStringArray, (, JSONArray, array, ), throws]
[., emptyList, (, ), ;, }, else, {, return, mappings, ;, }, }, }, private, String, [, ], getJavaStringArray, (]
[;, }, }, }, private, String, [, ], getJavaStringArray, (, JSONArray, array, ), throws, JSONException, {, int, len, =, array]
[;, String, [, ], result, =, new, String, [, len, ], ;, for, (, int, i, =, 0, ;, i]
[., length, (, ), ;, String, [, ], result, =, new, String, [, len, ], ;, for, (, int, i]
[;, for, (, int, i, =, 0, ;, i, <, len, ;, i, ++, ), {, result, [, i, ]]
[], ;, for, (, int, i, =, 0, ;, i, <, len, ;, i, ++, ), {, result, [, i]
[;, i, <, len, ;, i, ++, ), {, result, [, i, ], =, array, ., getString, (, i, )]
[;, i, ++, ), {, result, [, i, ], =, array, ., getString, (, i, ), ;, }, return, result]
[<, len, ;, i, ++, ), {, result, [, i, ], =, array, ., getString, (, i, ), ;, }]
[;, i, ++, ), {, result, [, i, ], =, array, ., getString, (, i, ), ;, }, return, result]
[), {, result, [, i, ], =, array, ., getString, (, i, ), ;, }, return, result, ;, }, private]
[++, ), {, result, [, i, ], =, array, ., getString, (, i, ), ;, }, return, result, ;, }]
[=, array, ., getString, (, i, ), ;, }, return, result, ;, }, private, class, MappingBuilder, {, private, static, final]
[[, i, ], =, array, ., getString, (, i, ), ;, }, return, result, ;, }, private, class, MappingBuilder, {]
[], =, array, ., getString, (, i, ), ;, }, return, result, ;, }, private, class, MappingBuilder, {, private, static]
[;, }, return, result, ;, }, private, class, MappingBuilder, {, private, static, final, int, MAX_ENTRY_VALUES, =, 5, ;, private, final]
[., getString, (, i, ), ;, }, return, result, ;, }, private, class, MappingBuilder, {, private, static, final, int, MAX_ENTRY_VALUES]
[), ;, }, return, result, ;, }, private, class, MappingBuilder, {, private, static, final, int, MAX_ENTRY_VALUES, =, 5, ;, private]
[;, }, private, class, MappingBuilder, {, private, static, final, int, MAX_ENTRY_VALUES, =, 5, ;, private, final, StringCharIterator, content, ;, private]
[;, private, final, StringCharIterator, content, ;, private, int, line, =, 0, ;, private, int, previousCol, =, 0, ;, private, int]
[;, private, int, previousCol, =, 0, ;, private, int, previousSrcId, =, 0, ;, private, int, previousSrcLine, =, 0, ;, private]
[;, private, int, previousSrcId, =, 0, ;, private, int, previousSrcLine, =, 0, ;, private, int, previousSrcColumn, =, 0, ;, private]
[;, private, int, previousSrcLine, =, 0, ;, private, int, previousSrcColumn, =, 0, ;, private, int, previousNameId, =, 0, ;, MappingBuilder]
[;, private, int, previousSrcColumn, =, 0, ;, private, int, previousNameId, =, 0, ;, MappingBuilder, (, String, lineMap, ), {, this]
[;, private, int, previousNameId, =, 0, ;, MappingBuilder, (, String, lineMap, ), {, this, ., content, =, new, StringCharIterator, (]
[;, MappingBuilder, (, String, lineMap, ), {, this, ., content, =, new, StringCharIterator, (, lineMap, ), ;, }, void, build]
[=, new, StringCharIterator, (, lineMap, ), ;, }, void, build, (, ), {, int, [, ], temp, =, new, int]
[., content, =, new, StringCharIterator, (, lineMap, ), ;, }, void, build, (, ), {, int, [, ], temp, =]
[;, }, void, build, (, ), {, int, [, ], temp, =, new, int, [, MAX_ENTRY_VALUES, ], ;, ArrayList, <]
[), ;, }, void, build, (, ), {, int, [, ], temp, =, new, int, [, MAX_ENTRY_VALUES, ], ;, ArrayList]
[;, ArrayList, <, Entry, >, entries, =, new, ArrayList, <, Entry, >, (, ), ;, while, (, content, ., hasNext]
[], ;, ArrayList, <, Entry, >, entries, =, new, ArrayList, <, Entry, >, (, ), ;, while, (, content, .]
[;, while, (, content, ., hasNext, (, ), ), {, if, (, tryConsumeToken, (, ';', ), ), {, ArrayList, <]
[), {, if, (, tryConsumeToken, (, ';', ), ), {, ArrayList, <, Entry, >, result, ;, if, (, entries, .]
[., hasNext, (, ), ), {, if, (, tryConsumeToken, (, ';', ), ), {, ArrayList, <, Entry, >, result, ;]
[), {, ArrayList, <, Entry, >, result, ;, if, (, entries, ., size, (, ), >, 0, ), {, result]
[), ), {, ArrayList, <, Entry, >, result, ;, if, (, entries, ., size, (, ), >, 0, ), {]
[), {, result, =, entries, ;, entries, =, new, ArrayList, <, Entry, >, (, ), ;, }, else, {, result]
[>, 0, ), {, result, =, entries, ;, entries, =, new, ArrayList, <, Entry, >, (, ), ;, }, else]
[., size, (, ), >, 0, ), {, result, =, entries, ;, entries, =, new, ArrayList, <, Entry, >, (]
[), {, result, =, entries, ;, entries, =, new, ArrayList, <, Entry, >, (, ), ;, }, else, {, result]
[=, entries, ;, entries, =, new, ArrayList, <, Entry, >, (, ), ;, }, else, {, result, =, null, ;]
[;, entries, =, new, ArrayList, <, Entry, >, (, ), ;, }, else, {, result, =, null, ;, }, lines]
[=, new, ArrayList, <, Entry, >, (, ), ;, }, else, {, result, =, null, ;, }, lines, ., add]
[;, }, else, {, result, =, null, ;, }, lines, ., add, (, result, ), ;, entries, ., clear, (]
[=, null, ;, }, lines, ., add, (, result, ), ;, entries, ., clear, (, ), ;, line, ++, ;]
[;, }, lines, ., add, (, result, ), ;, entries, ., clear, (, ), ;, line, ++, ;, previousCol, =]
[;, entries, ., clear, (, ), ;, line, ++, ;, previousCol, =, 0, ;, }, else, {, int, entryValues, =]
[., add, (, result, ), ;, entries, ., clear, (, ), ;, line, ++, ;, previousCol, =, 0, ;, }]
[), ;, entries, ., clear, (, ), ;, line, ++, ;, previousCol, =, 0, ;, }, else, {, int, entryValues]
[;, line, ++, ;, previousCol, =, 0, ;, }, else, {, int, entryValues, =, 0, ;, while, (, !, entryComplete]
[., clear, (, ), ;, line, ++, ;, previousCol, =, 0, ;, }, else, {, int, entryValues, =, 0, ;]
[;, previousCol, =, 0, ;, }, else, {, int, entryValues, =, 0, ;, while, (, !, entryComplete, (, ), )]
[++, ;, previousCol, =, 0, ;, }, else, {, int, entryValues, =, 0, ;, while, (, !, entryComplete, (, )]
[=, 0, ;, }, else, {, int, entryValues, =, 0, ;, while, (, !, entryComplete, (, ), ), {, temp]
[;, }, else, {, int, entryValues, =, 0, ;, while, (, !, entryComplete, (, ), ), {, temp, [, entryValues]
[;, while, (, !, entryComplete, (, ), ), {, temp, [, entryValues, ], =, nextValue, (, ), ;, entryValues, ++]
[), {, temp, [, entryValues, ], =, nextValue, (, ), ;, entryValues, ++, ;, }, Entry, entry, =, decodeEntry, (]
[), {, temp, [, entryValues, ], =, nextValue, (, ), ;, entryValues, ++, ;, }, Entry, entry, =, decodeEntry, (]
[=, nextValue, (, ), ;, entryValues, ++, ;, }, Entry, entry, =, decodeEntry, (, temp, ,, entryValues, ), ;, validateEntry]
[[, entryValues, ], =, nextValue, (, ), ;, entryValues, ++, ;, }, Entry, entry, =, decodeEntry, (, temp, ,, entryValues]
[], =, nextValue, (, ), ;, entryValues, ++, ;, }, Entry, entry, =, decodeEntry, (, temp, ,, entryValues, ), ;]
[;, entryValues, ++, ;, }, Entry, entry, =, decodeEntry, (, temp, ,, entryValues, ), ;, validateEntry, (, entry, ), ;]
[;, }, Entry, entry, =, decodeEntry, (, temp, ,, entryValues, ), ;, validateEntry, (, entry, ), ;, entries, ., add]
[++, ;, }, Entry, entry, =, decodeEntry, (, temp, ,, entryValues, ), ;, validateEntry, (, entry, ), ;, entries, .]
[;, validateEntry, (, entry, ), ;, entries, ., add, (, entry, ), ;, tryConsumeToken, (, ',', ), ;, }, }]
[,, entryValues, ), ;, validateEntry, (, entry, ), ;, entries, ., add, (, entry, ), ;, tryConsumeToken, (, ',', )]
[), ;, validateEntry, (, entry, ), ;, entries, ., add, (, entry, ), ;, tryConsumeToken, (, ',', ), ;, }]
[;, entries, ., add, (, entry, ), ;, tryConsumeToken, (, ',', ), ;, }, }, }, private, void, validateEntry, (]
[), ;, entries, ., add, (, entry, ), ;, tryConsumeToken, (, ',', ), ;, }, }, }, private, void, validateEntry]
[;, tryConsumeToken, (, ',', ), ;, }, }, }, private, void, validateEntry, (, Entry, entry, ), {, Preconditions, ., checkState]
[., add, (, entry, ), ;, tryConsumeToken, (, ',', ), ;, }, }, }, private, void, validateEntry, (, Entry, entry]
[), ;, tryConsumeToken, (, ',', ), ;, }, }, }, private, void, validateEntry, (, Entry, entry, ), {, Preconditions, .]
[;, }, }, }, private, void, validateEntry, (, Entry, entry, ), {, Preconditions, ., checkState, (, line, <, lineCount, )]
[), ;, }, }, }, private, void, validateEntry, (, Entry, entry, ), {, Preconditions, ., checkState, (, line, <, lineCount]
[;, Preconditions, ., checkState, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <, sources]
[., checkState, (, line, <, lineCount, ), ;, Preconditions, ., checkState, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ||]
[), ;, Preconditions, ., checkState, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <]
[<, lineCount, ), ;, Preconditions, ., checkState, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (]
[), ;, Preconditions, ., checkState, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <]
[;, Preconditions, ., checkState, (, entry, ., getNameId, (, ), ==, UNMAPPED, ||, entry, ., getNameId, (, ), <, names]
[., checkState, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <, sources, ., length]
[), ;, Preconditions, ., checkState, (, entry, ., getNameId, (, ), ==, UNMAPPED, ||, entry, ., getNameId, (, ), <]
[||, entry, ., getSourceFileId, (, ), <, sources, ., length, ), ;, Preconditions, ., checkState, (, entry, ., getNameId, (]
[==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <, sources, ., length, ), ;, Preconditions, ., checkState, (, entry, .]
[., getSourceFileId, (, ), ==, UNMAPPED, ||, entry, ., getSourceFileId, (, ), <, sources, ., length, ), ;, Preconditions, .]
[||, entry, ., getSourceFileId, (, ), <, sources, ., length, ), ;, Preconditions, ., checkState, (, entry, ., getNameId, (]
[), ;, Preconditions, ., checkState, (, entry, ., getNameId, (, ), ==, UNMAPPED, ||, entry, ., getNameId, (, ), <]
[<, sources, ., length, ), ;, Preconditions, ., checkState, (, entry, ., getNameId, (, ), ==, UNMAPPED, ||, entry, .]
[., getSourceFileId, (, ), <, sources, ., length, ), ;, Preconditions, ., checkState, (, entry, ., getNameId, (, ), ==]
[), ;, Preconditions, ., checkState, (, entry, ., getNameId, (, ), ==, UNMAPPED, ||, entry, ., getNameId, (, ), <]
[., length, ), ;, Preconditions, ., checkState, (, entry, ., getNameId, (, ), ==, UNMAPPED, ||, entry, ., getNameId, (]
[;, }, private, Entry, decodeEntry, (, int, [, ], vals, ,, int, entryValues, ), {, Entry, entry, ;, switch, (]
[., checkState, (, entry, ., getNameId, (, ), ==, UNMAPPED, ||, entry, ., getNameId, (, ), <, names, ., length]
[), ;, }, private, Entry, decodeEntry, (, int, [, ], vals, ,, int, entryValues, ), {, Entry, entry, ;, switch]
[||, entry, ., getNameId, (, ), <, names, ., length, ), ;, }, private, Entry, decodeEntry, (, int, [, ]]
[==, UNMAPPED, ||, entry, ., getNameId, (, ), <, names, ., length, ), ;, }, private, Entry, decodeEntry, (, int]
[., getNameId, (, ), ==, UNMAPPED, ||, entry, ., getNameId, (, ), <, names, ., length, ), ;, }, private]
[||, entry, ., getNameId, (, ), <, names, ., length, ), ;, }, private, Entry, decodeEntry, (, int, [, ]]
[), ;, }, private, Entry, decodeEntry, (, int, [, ], vals, ,, int, entryValues, ), {, Entry, entry, ;, switch]
[<, names, ., length, ), ;, }, private, Entry, decodeEntry, (, int, [, ], vals, ,, int, entryValues, ), {]
[., getNameId, (, ), <, names, ., length, ), ;, }, private, Entry, decodeEntry, (, int, [, ], vals, ,]
[), ;, }, private, Entry, decodeEntry, (, int, [, ], vals, ,, int, entryValues, ), {, Entry, entry, ;, switch]
[., length, ), ;, }, private, Entry, decodeEntry, (, int, [, ], vals, ,, int, entryValues, ), {, Entry, entry]
[), {, case, 1, :, entry, =, new, UnmappedEntry, (, vals, [, 0, ], +, previousCol, ), ;, previousCol, =]
[:, entry, =, new, UnmappedEntry, (, vals, [, 0, ], +, previousCol, ), ;, previousCol, =, entry, ., getGeneratedColumn, (]
[=, new, UnmappedEntry, (, vals, [, 0, ], +, previousCol, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;]
[;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry, (]
[), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry]
[+, previousCol, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :, entry, =]
[[, 0, ], +, previousCol, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4]
[], +, previousCol, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :, entry]
[), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry]
[=, entry, ., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry, (, vals, []
[;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals]
[., getGeneratedColumn, (, ), ;, return, entry, ;, case, 4, :, entry, =, new, UnnamedEntry, (, vals, [, 0, ]]
[;, case, 4, :, entry, =, new, UnnamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ]]
[:, entry, =, new, UnnamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,]
[=, new, UnnamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, []
[;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry]
[,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +]
[+, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3]
[[, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,]
[], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, []
[,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +]
[,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol, =, entry, .]
[+, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol, =]
[[, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, )]
[], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol]
[,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol, =, entry, .]
[,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry]
[+, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId]
[[, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol, =, entry, ., getGeneratedColumn, (]
[], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;]
[,, vals, [, 3, ], +, previousSrcColumn, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry]
[), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =]
[+, previousSrcColumn, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;]
[[, 3, ], +, previousSrcColumn, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId]
[], +, previousSrcColumn, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, )]
[), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =]
[=, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine]
[;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry]
[., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, )]
[=, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn]
[;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, return, entry, ;]
[., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, )]
[=, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, return, entry, ;, case, 5]
[;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, return, entry, ;, case, 5, :, entry, =, new, NamedEntry, (]
[., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, return, entry, ;, case, 5, :, entry]
[=, entry, ., getSourceColumn, (, ), ;, return, entry, ;, case, 5, :, entry, =, new, NamedEntry, (, vals, []
[;, return, entry, ;, case, 5, :, entry, =, new, NamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals]
[., getSourceColumn, (, ), ;, return, entry, ;, case, 5, :, entry, =, new, NamedEntry, (, vals, [, 0, ]]
[;, case, 5, :, entry, =, new, NamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ]]
[:, entry, =, new, NamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,]
[=, new, NamedEntry, (, vals, [, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, []
[;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry]
[,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +]
[+, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3]
[[, 0, ], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,]
[], +, previousCol, ,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, []
[,, vals, [, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +]
[,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,, vals, [, 4, ], +]
[+, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,, vals, [, 4]
[[, 1, ], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,]
[], +, previousSrcId, ,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,, vals, []
[,, vals, [, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,, vals, [, 4, ], +]
[,, vals, [, 3, ], +, previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, ), ;, previousCol, =, entry, .]
[+, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, ), ;, previousCol, =]
[[, 2, ], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, )]
[], +, previousSrcLine, ,, vals, [, 3, ], +, previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, ), ;, previousCol]
[,, vals, [, 3, ], +, previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, ), ;, previousCol, =, entry, .]
[,, vals, [, 4, ], +, previousNameId, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry]
[+, previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId]
[[, 3, ], +, previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, ), ;, previousCol, =, entry, ., getGeneratedColumn, (]
[], +, previousSrcColumn, ,, vals, [, 4, ], +, previousNameId, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;]
[,, vals, [, 4, ], +, previousNameId, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry]
[), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =]
[+, previousNameId, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;]
[[, 4, ], +, previousNameId, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId]
[], +, previousNameId, ), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, )]
[), ;, previousCol, =, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =]
[=, entry, ., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine]
[;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry]
[., getGeneratedColumn, (, ), ;, previousSrcId, =, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, )]
[=, entry, ., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn]
[;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, previousNameId, =, entry]
[., getSourceFileId, (, ), ;, previousSrcLine, =, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, )]
[=, entry, ., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, previousNameId, =, entry, ., getNameId]
[;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, previousNameId, =, entry, ., getNameId, (, ), ;, return, entry, ;]
[., getSourceLine, (, ), ;, previousSrcColumn, =, entry, ., getSourceColumn, (, ), ;, previousNameId, =, entry, ., getNameId, (, )]
[=, entry, ., getSourceColumn, (, ), ;, previousNameId, =, entry, ., getNameId, (, ), ;, return, entry, ;, default, :]
[;, previousNameId, =, entry, ., getNameId, (, ), ;, return, entry, ;, default, :, throw, new, IllegalStateException, (, "Unexpected number of values for entry:", +]
[., getSourceColumn, (, ), ;, previousNameId, =, entry, ., getNameId, (, ), ;, return, entry, ;, default, :, throw, new]
[=, entry, ., getNameId, (, ), ;, return, entry, ;, default, :, throw, new, IllegalStateException, (, "Unexpected number of values for entry:", +, entryValues, )]
[;, return, entry, ;, default, :, throw, new, IllegalStateException, (, "Unexpected number of values for entry:", +, entryValues, ), ;, }, }, private, boolean, tryConsumeToken]
[., getNameId, (, ), ;, return, entry, ;, default, :, throw, new, IllegalStateException, (, "Unexpected number of values for entry:", +, entryValues, ), ;, }]
[;, default, :, throw, new, IllegalStateException, (, "Unexpected number of values for entry:", +, entryValues, ), ;, }, }, private, boolean, tryConsumeToken, (, char, token]
[;, }, }, private, boolean, tryConsumeToken, (, char, token, ), {, if, (, content, ., hasNext, (, ), &&, content]
[), ;, }, }, private, boolean, tryConsumeToken, (, char, token, ), {, if, (, content, ., hasNext, (, ), &&]
[+, entryValues, ), ;, }, }, private, boolean, tryConsumeToken, (, char, token, ), {, if, (, content, ., hasNext, (]
[), ;, }, }, private, boolean, tryConsumeToken, (, char, token, ), {, if, (, content, ., hasNext, (, ), &&]
[), {, content, ., next, (, ), ;, return, true, ;, }, return, false, ;, }, private, boolean, entryComplete, (]
[&&, content, ., peek, (, ), ==, token, ), {, content, ., next, (, ), ;, return, true, ;, }]
[., hasNext, (, ), &&, content, ., peek, (, ), ==, token, ), {, content, ., next, (, ), ;]
[), {, content, ., next, (, ), ;, return, true, ;, }, return, false, ;, }, private, boolean, entryComplete, (]
[==, token, ), {, content, ., next, (, ), ;, return, true, ;, }, return, false, ;, }, private, boolean]
[., peek, (, ), ==, token, ), {, content, ., next, (, ), ;, return, true, ;, }, return, false]
[), {, content, ., next, (, ), ;, return, true, ;, }, return, false, ;, }, private, boolean, entryComplete, (]
[;, return, true, ;, }, return, false, ;, }, private, boolean, entryComplete, (, ), {, if, (, !, content, .]
[., next, (, ), ;, return, true, ;, }, return, false, ;, }, private, boolean, entryComplete, (, ), {, if]
[;, }, return, false, ;, }, private, boolean, entryComplete, (, ), {, if, (, !, content, ., hasNext, (, )]
[;, }, private, boolean, entryComplete, (, ), {, if, (, !, content, ., hasNext, (, ), ), {, return, true]
[), {, return, true, ;, }, char, c, =, content, ., peek, (, ), ;, return, (, c, ==, ';']
[), {, return, true, ;, }, char, c, =, content, ., peek, (, ), ;, return, (, c, ==, ';']
[., hasNext, (, ), ), {, return, true, ;, }, char, c, =, content, ., peek, (, ), ;, return]
[;, }, char, c, =, content, ., peek, (, ), ;, return, (, c, ==, ';', ||, c, ==, ',']
[;, return, (, c, ==, ';', ||, c, ==, ',', ), ;, }, private, int, nextValue, (, ), {, return]
[., peek, (, ), ;, return, (, c, ==, ';', ||, c, ==, ',', ), ;, }, private, int, nextValue]
[;, }, private, int, nextValue, (, ), {, return, Base64VLQ, ., decode, (, content, ), ;, }, }, private, int]
[), ;, }, private, int, nextValue, (, ), {, return, Base64VLQ, ., decode, (, content, ), ;, }, }, private]
[||, c, ==, ',', ), ;, }, private, int, nextValue, (, ), {, return, Base64VLQ, ., decode, (, content, )]
[==, ';', ||, c, ==, ',', ), ;, }, private, int, nextValue, (, ), {, return, Base64VLQ, ., decode, (]
[||, c, ==, ',', ), ;, }, private, int, nextValue, (, ), {, return, Base64VLQ, ., decode, (, content, )]
[), ;, }, private, int, nextValue, (, ), {, return, Base64VLQ, ., decode, (, content, ), ;, }, }, private]
[==, ',', ), ;, }, private, int, nextValue, (, ), {, return, Base64VLQ, ., decode, (, content, ), ;, }]
[), ;, }, private, int, nextValue, (, ), {, return, Base64VLQ, ., decode, (, content, ), ;, }, }, private]
[;, }, }, private, int, search, (, ArrayList, <, Entry, >, entries, ,, int, target, ,, int, start, ,, int]
[., decode, (, content, ), ;, }, }, private, int, search, (, ArrayList, <, Entry, >, entries, ,, int, target]
[), ;, }, }, private, int, search, (, ArrayList, <, Entry, >, entries, ,, int, target, ,, int, start, ,]
[), {, int, mid, =, (, (, end, -, start, ), /, 2, ), +, start, ;, int, compare, =]
[;, int, compare, =, compareEntry, (, entries, ,, mid, ,, target, ), ;, if, (, compare, ==, 0, ), {]
[+, start, ;, int, compare, =, compareEntry, (, entries, ,, mid, ,, target, ), ;, if, (, compare, ==, 0]
[), +, start, ;, int, compare, =, compareEntry, (, entries, ,, mid, ,, target, ), ;, if, (, compare, ==]
[/, 2, ), +, start, ;, int, compare, =, compareEntry, (, entries, ,, mid, ,, target, ), ;, if, (]
[), /, 2, ), +, start, ;, int, compare, =, compareEntry, (, entries, ,, mid, ,, target, ), ;, if]
[-, start, ), /, 2, ), +, start, ;, int, compare, =, compareEntry, (, entries, ,, mid, ,, target, )]
[), /, 2, ), +, start, ;, int, compare, =, compareEntry, (, entries, ,, mid, ,, target, ), ;, if]
[), +, start, ;, int, compare, =, compareEntry, (, entries, ,, mid, ,, target, ), ;, if, (, compare, ==]
[;, int, compare, =, compareEntry, (, entries, ,, mid, ,, target, ), ;, if, (, compare, ==, 0, ), {]
[;, if, (, compare, ==, 0, ), {, return, mid, ;, }, else, if, (, compare, <, 0, ), {]
[,, mid, ,, target, ), ;, if, (, compare, ==, 0, ), {, return, mid, ;, }, else, if, (]
[,, target, ), ;, if, (, compare, ==, 0, ), {, return, mid, ;, }, else, if, (, compare, <]
[), ;, if, (, compare, ==, 0, ), {, return, mid, ;, }, else, if, (, compare, <, 0, )]
[), {, return, mid, ;, }, else, if, (, compare, <, 0, ), {, start, =, mid, +, 1, ;]
[==, 0, ), {, return, mid, ;, }, else, if, (, compare, <, 0, ), {, start, =, mid, +]
[), {, return, mid, ;, }, else, if, (, compare, <, 0, ), {, start, =, mid, +, 1, ;]
[;, }, else, if, (, compare, <, 0, ), {, start, =, mid, +, 1, ;, if, (, start, >]
[), {, start, =, mid, +, 1, ;, if, (, start, >, end, ), {, return, end, ;, }, }]
[<, 0, ), {, start, =, mid, +, 1, ;, if, (, start, >, end, ), {, return, end, ;]
[), {, start, =, mid, +, 1, ;, if, (, start, >, end, ), {, return, end, ;, }, }]
[=, mid, +, 1, ;, if, (, start, >, end, ), {, return, end, ;, }, }, else, {, end]
[;, if, (, start, >, end, ), {, return, end, ;, }, }, else, {, end, =, mid, -, 1]
[+, 1, ;, if, (, start, >, end, ), {, return, end, ;, }, }, else, {, end, =, mid]
[;, if, (, start, >, end, ), {, return, end, ;, }, }, else, {, end, =, mid, -, 1]
[), {, return, end, ;, }, }, else, {, end, =, mid, -, 1, ;, if, (, end, <, start]
[>, end, ), {, return, end, ;, }, }, else, {, end, =, mid, -, 1, ;, if, (, end]
[), {, return, end, ;, }, }, else, {, end, =, mid, -, 1, ;, if, (, end, <, start]
[;, }, }, else, {, end, =, mid, -, 1, ;, if, (, end, <, start, ), {, return, end]
[=, mid, -, 1, ;, if, (, end, <, start, ), {, return, end, ;, }, }, }, }, private]
[;, if, (, end, <, start, ), {, return, end, ;, }, }, }, }, private, int, compareEntry, (, ArrayList]
[-, 1, ;, if, (, end, <, start, ), {, return, end, ;, }, }, }, }, private, int, compareEntry]
[;, if, (, end, <, start, ), {, return, end, ;, }, }, }, }, private, int, compareEntry, (, ArrayList]
[), {, return, end, ;, }, }, }, }, private, int, compareEntry, (, ArrayList, <, Entry, >, entries, ,, int]
[<, start, ), {, return, end, ;, }, }, }, }, private, int, compareEntry, (, ArrayList, <, Entry, >, entries]
[), {, return, end, ;, }, }, }, }, private, int, compareEntry, (, ArrayList, <, Entry, >, entries, ,, int]
[;, }, }, }, }, private, int, compareEntry, (, ArrayList, <, Entry, >, entries, ,, int, entry, ,, int, target]
[;, }, private, OriginalMapping, getPreviousMapping, (, int, lineNumber, ), {, do, {, if, (, lineNumber, ==, 0, ), {, return]
[-, target, ;, }, private, OriginalMapping, getPreviousMapping, (, int, lineNumber, ), {, do, {, if, (, lineNumber, ==, 0, )]
[., getGeneratedColumn, (, ), -, target, ;, }, private, OriginalMapping, getPreviousMapping, (, int, lineNumber, ), {, do, {, if, (]
[., get, (, entry, ), ., getGeneratedColumn, (, ), -, target, ;, }, private, OriginalMapping, getPreviousMapping, (, int, lineNumber, )]
[), ., getGeneratedColumn, (, ), -, target, ;, }, private, OriginalMapping, getPreviousMapping, (, int, lineNumber, ), {, do, {, if]
[;, }, private, OriginalMapping, getPreviousMapping, (, int, lineNumber, ), {, do, {, if, (, lineNumber, ==, 0, ), {, return]
[), {, return, null, ;, }, lineNumber, --, ;, }, while, (, lines, ., get, (, lineNumber, ), ==, null]
[==, 0, ), {, return, null, ;, }, lineNumber, --, ;, }, while, (, lines, ., get, (, lineNumber, )]
[), {, return, null, ;, }, lineNumber, --, ;, }, while, (, lines, ., get, (, lineNumber, ), ==, null]
[;, }, lineNumber, --, ;, }, while, (, lines, ., get, (, lineNumber, ), ==, null, ), ;, ArrayList, <]
[;, }, while, (, lines, ., get, (, lineNumber, ), ==, null, ), ;, ArrayList, <, Entry, >, entries, =]
[--, ;, }, while, (, lines, ., get, (, lineNumber, ), ==, null, ), ;, ArrayList, <, Entry, >, entries]
[), ;, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, return, getOriginalMappingForEntry, (, entries, .]
[==, null, ), ;, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, return, getOriginalMappingForEntry, (]
[., get, (, lineNumber, ), ==, null, ), ;, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber]
[), ==, null, ), ;, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, return, getOriginalMappingForEntry]
[), ;, ArrayList, <, Entry, >, entries, =, lines, ., get, (, lineNumber, ), ;, return, getOriginalMappingForEntry, (, entries, .]
[;, return, getOriginalMappingForEntry, (, entries, ., get, (, entries, ., size, (, ), -, 1, ), ), ;, }, private]
[., get, (, lineNumber, ), ;, return, getOriginalMappingForEntry, (, entries, ., get, (, entries, ., size, (, ), -, 1]
[), ;, return, getOriginalMappingForEntry, (, entries, ., get, (, entries, ., size, (, ), -, 1, ), ), ;, }]
[;, }, private, OriginalMapping, getOriginalMappingForEntry, (, Entry, entry, ), {, if, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED, )]
[), ;, }, private, OriginalMapping, getOriginalMappingForEntry, (, Entry, entry, ), {, if, (, entry, ., getSourceFileId, (, ), ==, UNMAPPED]
[., get, (, entries, ., size, (, ), -, 1, ), ), ;, }, private, OriginalMapping, getOriginalMappingForEntry, (, Entry, entry]
[), ), ;, }, private, OriginalMapping, getOriginalMappingForEntry, (, Entry, entry, ), {, if, (, entry, ., getSourceFileId, (, ), ==]
[-, 1, ), ), ;, }, private, OriginalMapping, getOriginalMappingForEntry, (, Entry, entry, ), {, if, (, entry, ., getSourceFileId, (]
[., size, (, ), -, 1, ), ), ;, }, private, OriginalMapping, getOriginalMappingForEntry, (, Entry, entry, ), {, if, (]
[), ), ;, }, private, OriginalMapping, getOriginalMappingForEntry, (, Entry, entry, ), {, if, (, entry, ., getSourceFileId, (, ), ==]
[), {, return, null, ;, }, else, {, Builder, x, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, sources]
[==, UNMAPPED, ), {, return, null, ;, }, else, {, Builder, x, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile]
[., getSourceFileId, (, ), ==, UNMAPPED, ), {, return, null, ;, }, else, {, Builder, x, =, OriginalMapping, ., newBuilder]
[), {, return, null, ;, }, else, {, Builder, x, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, sources]
[;, }, else, {, Builder, x, =, OriginalMapping, ., newBuilder, (, ), ., setOriginalFile, (, sources, [, entry, ., getSourceFileId]
[;, if, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), {, x, ., setIdentifier, (, names, [, entry, .]
[., setColumnPosition, (, entry, ., getSourceColumn, (, ), +, 1, ), ;, if, (, entry, ., getNameId, (, ), !=]
[., setLineNumber, (, entry, ., getSourceLine, (, ), +, 1, ), ., setColumnPosition, (, entry, ., getSourceColumn, (, ), +]
[., setOriginalFile, (, sources, [, entry, ., getSourceFileId, (, ), ], ), ., setLineNumber, (, entry, ., getSourceLine, (, )]
[., newBuilder, (, ), ., setOriginalFile, (, sources, [, entry, ., getSourceFileId, (, ), ], ), ., setLineNumber, (, entry]
[), ., setLineNumber, (, entry, ., getSourceLine, (, ), +, 1, ), ., setColumnPosition, (, entry, ., getSourceColumn, (, )]
[[, entry, ., getSourceFileId, (, ), ], ), ., setLineNumber, (, entry, ., getSourceLine, (, ), +, 1, ), .]
[], ), ., setLineNumber, (, entry, ., getSourceLine, (, ), +, 1, ), ., setColumnPosition, (, entry, ., getSourceColumn, (]
[., getSourceFileId, (, ), ], ), ., setLineNumber, (, entry, ., getSourceLine, (, ), +, 1, ), ., setColumnPosition, (]
[), ., setColumnPosition, (, entry, ., getSourceColumn, (, ), +, 1, ), ;, if, (, entry, ., getNameId, (, )]
[+, 1, ), ., setColumnPosition, (, entry, ., getSourceColumn, (, ), +, 1, ), ;, if, (, entry, ., getNameId]
[., getSourceLine, (, ), +, 1, ), ., setColumnPosition, (, entry, ., getSourceColumn, (, ), +, 1, ), ;, if]
[), ., setColumnPosition, (, entry, ., getSourceColumn, (, ), +, 1, ), ;, if, (, entry, ., getNameId, (, )]
[), ;, if, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), {, x, ., setIdentifier, (, names, [, entry]
[+, 1, ), ;, if, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), {, x, ., setIdentifier, (, names]
[., getSourceColumn, (, ), +, 1, ), ;, if, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), {, x]
[), ;, if, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), {, x, ., setIdentifier, (, names, [, entry]
[), {, x, ., setIdentifier, (, names, [, entry, ., getNameId, (, ), ], ), ;, }, return, x, .]
[!=, UNMAPPED, ), {, x, ., setIdentifier, (, names, [, entry, ., getNameId, (, ), ], ), ;, }, return]
[., getNameId, (, ), !=, UNMAPPED, ), {, x, ., setIdentifier, (, names, [, entry, ., getNameId, (, ), ]]
[), {, x, ., setIdentifier, (, names, [, entry, ., getNameId, (, ), ], ), ;, }, return, x, .]
[;, }, return, x, ., build, (, ), ;, }, }, private, void, createReverseMapping, (, ), {, reverseSourceMapping, =, new]
[., setIdentifier, (, names, [, entry, ., getNameId, (, ), ], ), ;, }, return, x, ., build, (, )]
[), ;, }, return, x, ., build, (, ), ;, }, }, private, void, createReverseMapping, (, ), {, reverseSourceMapping, =]
[[, entry, ., getNameId, (, ), ], ), ;, }, return, x, ., build, (, ), ;, }, }, private]
[], ), ;, }, return, x, ., build, (, ), ;, }, }, private, void, createReverseMapping, (, ), {, reverseSourceMapping]
[., getNameId, (, ), ], ), ;, }, return, x, ., build, (, ), ;, }, }, private, void, createReverseMapping]
[;, }, }, private, void, createReverseMapping, (, ), {, reverseSourceMapping, =, new, HashMap, <, String, ,, Map, <, Integer, ,]
[., build, (, ), ;, }, }, private, void, createReverseMapping, (, ), {, reverseSourceMapping, =, new, HashMap, <, String, ,]
[=, new, HashMap, <, String, ,, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, >, (, ), ;, for]
[;, for, (, int, targetLine, =, 0, ;, targetLine, <, lines, ., size, (, ), ;, targetLine, ++, ), {]
[;, targetLine, <, lines, ., size, (, ), ;, targetLine, ++, ), {, ArrayList, <, Entry, >, entries, =, lines]
[;, targetLine, ++, ), {, ArrayList, <, Entry, >, entries, =, lines, ., get, (, targetLine, ), ;, if, (]
[<, lines, ., size, (, ), ;, targetLine, ++, ), {, ArrayList, <, Entry, >, entries, =, lines, ., get]
[;, targetLine, ++, ), {, ArrayList, <, Entry, >, entries, =, lines, ., get, (, targetLine, ), ;, if, (]
[., size, (, ), ;, targetLine, ++, ), {, ArrayList, <, Entry, >, entries, =, lines, ., get, (, targetLine]
[), {, ArrayList, <, Entry, >, entries, =, lines, ., get, (, targetLine, ), ;, if, (, entries, !=, null]
[++, ), {, ArrayList, <, Entry, >, entries, =, lines, ., get, (, targetLine, ), ;, if, (, entries, !=]
[;, if, (, entries, !=, null, ), {, for, (, Entry, entry, :, entries, ), {, if, (, entry, .]
[., get, (, targetLine, ), ;, if, (, entries, !=, null, ), {, for, (, Entry, entry, :, entries, )]
[), ;, if, (, entries, !=, null, ), {, for, (, Entry, entry, :, entries, ), {, if, (, entry]
[), {, for, (, Entry, entry, :, entries, ), {, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, &&]
[!=, null, ), {, for, (, Entry, entry, :, entries, ), {, if, (, entry, ., getSourceFileId, (, ), !=]
[), {, for, (, Entry, entry, :, entries, ), {, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, &&]
[), {, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, &&, entry, ., getSourceLine, (, ), !=, UNMAPPED, )]
[), {, String, originalFile, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, if, (, !, reverseSourceMapping, ., containsKey]
[&&, entry, ., getSourceLine, (, ), !=, UNMAPPED, ), {, String, originalFile, =, sources, [, entry, ., getSourceFileId, (, )]
[!=, UNMAPPED, &&, entry, ., getSourceLine, (, ), !=, UNMAPPED, ), {, String, originalFile, =, sources, [, entry, ., getSourceFileId]
[., getSourceFileId, (, ), !=, UNMAPPED, &&, entry, ., getSourceLine, (, ), !=, UNMAPPED, ), {, String, originalFile, =, sources]
[&&, entry, ., getSourceLine, (, ), !=, UNMAPPED, ), {, String, originalFile, =, sources, [, entry, ., getSourceFileId, (, )]
[), {, String, originalFile, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, if, (, !, reverseSourceMapping, ., containsKey]
[!=, UNMAPPED, ), {, String, originalFile, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, if, (, !, reverseSourceMapping]
[., getSourceLine, (, ), !=, UNMAPPED, ), {, String, originalFile, =, sources, [, entry, ., getSourceFileId, (, ), ], ;]
[), {, String, originalFile, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, if, (, !, reverseSourceMapping, ., containsKey]
[;, if, (, !, reverseSourceMapping, ., containsKey, (, originalFile, ), ), {, reverseSourceMapping, ., put, (, originalFile, ,, new, HashMap]
[[, entry, ., getSourceFileId, (, ), ], ;, if, (, !, reverseSourceMapping, ., containsKey, (, originalFile, ), ), {, reverseSourceMapping]
[], ;, if, (, !, reverseSourceMapping, ., containsKey, (, originalFile, ), ), {, reverseSourceMapping, ., put, (, originalFile, ,, new]
[., getSourceFileId, (, ), ], ;, if, (, !, reverseSourceMapping, ., containsKey, (, originalFile, ), ), {, reverseSourceMapping, ., put]
[), {, reverseSourceMapping, ., put, (, originalFile, ,, new, HashMap, <, Integer, ,, Collection, <, OriginalMapping, >, >, (, )]
[), {, reverseSourceMapping, ., put, (, originalFile, ,, new, HashMap, <, Integer, ,, Collection, <, OriginalMapping, >, >, (, )]
[., containsKey, (, originalFile, ), ), {, reverseSourceMapping, ., put, (, originalFile, ,, new, HashMap, <, Integer, ,, Collection, <]
[), ), {, reverseSourceMapping, ., put, (, originalFile, ,, new, HashMap, <, Integer, ,, Collection, <, OriginalMapping, >, >, (]
[;, }, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, lineToCollectionMap, =, reverseSourceMapping, ., get, (, originalFile, ), ;]
[., put, (, originalFile, ,, new, HashMap, <, Integer, ,, Collection, <, OriginalMapping, >, >, (, ), ), ;, }]
[,, new, HashMap, <, Integer, ,, Collection, <, OriginalMapping, >, >, (, ), ), ;, }, Map, <, Integer, ,]
[), ;, }, Map, <, Integer, ,, Collection, <, OriginalMapping, >, >, lineToCollectionMap, =, reverseSourceMapping, ., get, (, originalFile, )]
[;, int, sourceLine, =, entry, ., getSourceLine, (, ), ;, if, (, !, lineToCollectionMap, ., containsKey, (, sourceLine, ), )]
[., get, (, originalFile, ), ;, int, sourceLine, =, entry, ., getSourceLine, (, ), ;, if, (, !, lineToCollectionMap, .]
[), ;, int, sourceLine, =, entry, ., getSourceLine, (, ), ;, if, (, !, lineToCollectionMap, ., containsKey, (, sourceLine, )]
[;, if, (, !, lineToCollectionMap, ., containsKey, (, sourceLine, ), ), {, lineToCollectionMap, ., put, (, sourceLine, ,, new, ArrayList]
[., getSourceLine, (, ), ;, if, (, !, lineToCollectionMap, ., containsKey, (, sourceLine, ), ), {, lineToCollectionMap, ., put, (]
[), {, lineToCollectionMap, ., put, (, sourceLine, ,, new, ArrayList, <, OriginalMapping, >, (, 1, ), ), ;, }, Collection]
[), {, lineToCollectionMap, ., put, (, sourceLine, ,, new, ArrayList, <, OriginalMapping, >, (, 1, ), ), ;, }, Collection]
[., containsKey, (, sourceLine, ), ), {, lineToCollectionMap, ., put, (, sourceLine, ,, new, ArrayList, <, OriginalMapping, >, (, 1]
[), ), {, lineToCollectionMap, ., put, (, sourceLine, ,, new, ArrayList, <, OriginalMapping, >, (, 1, ), ), ;, }]
[;, }, Collection, <, OriginalMapping, >, mappings, =, lineToCollectionMap, ., get, (, sourceLine, ), ;, Builder, builder, =, OriginalMapping, .]
[., put, (, sourceLine, ,, new, ArrayList, <, OriginalMapping, >, (, 1, ), ), ;, }, Collection, <, OriginalMapping, >]
[,, new, ArrayList, <, OriginalMapping, >, (, 1, ), ), ;, }, Collection, <, OriginalMapping, >, mappings, =, lineToCollectionMap, .]
[), ;, }, Collection, <, OriginalMapping, >, mappings, =, lineToCollectionMap, ., get, (, sourceLine, ), ;, Builder, builder, =, OriginalMapping]
[), ), ;, }, Collection, <, OriginalMapping, >, mappings, =, lineToCollectionMap, ., get, (, sourceLine, ), ;, Builder, builder, =]
[;, Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setLineNumber, (, targetLine, ), ., setColumnPosition, (, entry, ., getGeneratedColumn]
[., get, (, sourceLine, ), ;, Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setLineNumber, (, targetLine, ), .]
[), ;, Builder, builder, =, OriginalMapping, ., newBuilder, (, ), ., setLineNumber, (, targetLine, ), ., setColumnPosition, (, entry, .]
[;, mappings, ., add, (, builder, ., build, (, ), ), ;, }, }, }, }, }, private, static, class]
[., setColumnPosition, (, entry, ., getGeneratedColumn, (, ), ), ;, mappings, ., add, (, builder, ., build, (, ), )]
[., setLineNumber, (, targetLine, ), ., setColumnPosition, (, entry, ., getGeneratedColumn, (, ), ), ;, mappings, ., add, (, builder]
[., newBuilder, (, ), ., setLineNumber, (, targetLine, ), ., setColumnPosition, (, entry, ., getGeneratedColumn, (, ), ), ;, mappings]
[), ., setColumnPosition, (, entry, ., getGeneratedColumn, (, ), ), ;, mappings, ., add, (, builder, ., build, (, )]
[), ;, mappings, ., add, (, builder, ., build, (, ), ), ;, }, }, }, }, }, private, static]
[., getGeneratedColumn, (, ), ), ;, mappings, ., add, (, builder, ., build, (, ), ), ;, }, }, }]
[;, }, }, }, }, }, private, static, class, StringCharIterator, implements, CharIterator, {, final, String, content, ;, final, int, length]
[., add, (, builder, ., build, (, ), ), ;, }, }, }, }, }, private, static, class, StringCharIterator, implements]
[), ;, }, }, }, }, }, private, static, class, StringCharIterator, implements, CharIterator, {, final, String, content, ;, final, int]
[., build, (, ), ), ;, }, }, }, }, }, private, static, class, StringCharIterator, implements, CharIterator, {, final, String]
[;, StringCharIterator, (, String, content, ), {, this, ., content, =, content, ;, this, ., length, =, content, ., length]
[=, content, ;, this, ., length, =, content, ., length, (, ), ;, }, @, Override, public, char, next, (]
[., content, =, content, ;, this, ., length, =, content, ., length, (, ), ;, }, @, Override, public, char]
[;, this, ., length, =, content, ., length, (, ), ;, }, @, Override, public, char, next, (, ), {]
[=, content, ., length, (, ), ;, }, @, Override, public, char, next, (, ), {, return, content, ., charAt]
[., length, =, content, ., length, (, ), ;, }, @, Override, public, char, next, (, ), {, return, content]
[;, }, @, Override, public, char, next, (, ), {, return, content, ., charAt, (, current, ++, ), ;, }]
[., length, (, ), ;, }, @, Override, public, char, next, (, ), {, return, content, ., charAt, (, current]
[;, }, char, peek, (, ), {, return, content, ., charAt, (, current, ), ;, }, @, Override, public, boolean]
[., charAt, (, current, ++, ), ;, }, char, peek, (, ), {, return, content, ., charAt, (, current, )]
[), ;, }, char, peek, (, ), {, return, content, ., charAt, (, current, ), ;, }, @, Override, public]
[++, ), ;, }, char, peek, (, ), {, return, content, ., charAt, (, current, ), ;, }, @, Override]
[;, }, @, Override, public, boolean, hasNext, (, ), {, return, current, <, length, ;, }, }, private, interface, Entry]
[., charAt, (, current, ), ;, }, @, Override, public, boolean, hasNext, (, ), {, return, current, <, length, ;]
[), ;, }, @, Override, public, boolean, hasNext, (, ), {, return, current, <, length, ;, }, }, private, interface]
[;, }, }, private, interface, Entry, {, int, getGeneratedColumn, (, ), ;, int, getSourceFileId, (, ), ;, int, getSourceLine, (]
[<, length, ;, }, }, private, interface, Entry, {, int, getGeneratedColumn, (, ), ;, int, getSourceFileId, (, ), ;, int]
[;, }, }, private, interface, Entry, {, int, getGeneratedColumn, (, ), ;, int, getSourceFileId, (, ), ;, int, getSourceLine, (]
[=, column, ;, }, @, Override, public, int, getGeneratedColumn, (, ), {, return, column, ;, }, @, Override, public, int]
[., column, =, column, ;, }, @, Override, public, int, getGeneratedColumn, (, ), {, return, column, ;, }, @, Override]
[;, }, @, Override, public, int, getGeneratedColumn, (, ), {, return, column, ;, }, @, Override, public, int, getSourceFileId, (]
[;, }, @, Override, public, int, getSourceFileId, (, ), {, return, UNMAPPED, ;, }, @, Override, public, int, getSourceLine, (]
[;, }, @, Override, public, int, getSourceLine, (, ), {, return, UNMAPPED, ;, }, @, Override, public, int, getSourceColumn, (]
[;, }, @, Override, public, int, getSourceColumn, (, ), {, return, UNMAPPED, ;, }, @, Override, public, int, getNameId, (]
[;, }, @, Override, public, int, getNameId, (, ), {, return, UNMAPPED, ;, }, }, private, static, class, UnnamedEntry, extends]
[;, }, }, private, static, class, UnnamedEntry, extends, UnmappedEntry, {, private, final, int, srcFile, ;, private, final, int, srcLine, ;]
[), ;, this, ., srcFile, =, srcFile, ;, this, ., srcLine, =, srcLine, ;, this, ., srcColumn, =, srcColumn, ;]
[=, srcFile, ;, this, ., srcLine, =, srcLine, ;, this, ., srcColumn, =, srcColumn, ;, }, @, Override, public, int]
[., srcFile, =, srcFile, ;, this, ., srcLine, =, srcLine, ;, this, ., srcColumn, =, srcColumn, ;, }, @, Override]
[;, this, ., srcLine, =, srcLine, ;, this, ., srcColumn, =, srcColumn, ;, }, @, Override, public, int, getSourceFileId, (]
[=, srcLine, ;, this, ., srcColumn, =, srcColumn, ;, }, @, Override, public, int, getSourceFileId, (, ), {, return, srcFile]
[., srcLine, =, srcLine, ;, this, ., srcColumn, =, srcColumn, ;, }, @, Override, public, int, getSourceFileId, (, ), {]
[;, this, ., srcColumn, =, srcColumn, ;, }, @, Override, public, int, getSourceFileId, (, ), {, return, srcFile, ;, }]
[=, srcColumn, ;, }, @, Override, public, int, getSourceFileId, (, ), {, return, srcFile, ;, }, @, Override, public, int]
[., srcColumn, =, srcColumn, ;, }, @, Override, public, int, getSourceFileId, (, ), {, return, srcFile, ;, }, @, Override]
[;, }, @, Override, public, int, getSourceFileId, (, ), {, return, srcFile, ;, }, @, Override, public, int, getSourceLine, (]
[;, }, @, Override, public, int, getSourceLine, (, ), {, return, srcLine, ;, }, @, Override, public, int, getSourceColumn, (]
[;, }, @, Override, public, int, getSourceColumn, (, ), {, return, srcColumn, ;, }, @, Override, public, int, getNameId, (]
[;, }, @, Override, public, int, getNameId, (, ), {, return, UNMAPPED, ;, }, }, private, static, class, NamedEntry, extends]
[;, }, }, private, static, class, NamedEntry, extends, UnnamedEntry, {, private, final, int, name, ;, NamedEntry, (, int, column, ,]
[,, srcFile, ,, srcLine, ,, srcColumn, ), ;, this, ., name, =, name, ;, }, @, Override, public, int, getNameId]
[,, srcLine, ,, srcColumn, ), ;, this, ., name, =, name, ;, }, @, Override, public, int, getNameId, (, )]
[,, srcColumn, ), ;, this, ., name, =, name, ;, }, @, Override, public, int, getNameId, (, ), {, return]
[), ;, this, ., name, =, name, ;, }, @, Override, public, int, getNameId, (, ), {, return, name, ;]
[=, name, ;, }, @, Override, public, int, getNameId, (, ), {, return, name, ;, }, }, public, static, interface]
[., name, =, name, ;, }, @, Override, public, int, getNameId, (, ), {, return, name, ;, }, }, public]
[;, }, @, Override, public, int, getNameId, (, ), {, return, name, ;, }, }, public, static, interface, EntryVisitor, {]
[;, }, }, public, static, interface, EntryVisitor, {, void, visit, (, String, sourceName, ,, String, symbolName, ,, FilePosition, sourceStartPosition, ,]
[;, String, sourceName, =, null, ;, String, symbolName, =, null, ;, FilePosition, sourceStartPosition, =, null, ;, FilePosition, startPosition, =, null]
[;, String, symbolName, =, null, ;, FilePosition, sourceStartPosition, =, null, ;, FilePosition, startPosition, =, null, ;, final, int, lineCount, =]
[;, FilePosition, sourceStartPosition, =, null, ;, FilePosition, startPosition, =, null, ;, final, int, lineCount, =, lines, ., size, (, )]
[;, FilePosition, startPosition, =, null, ;, final, int, lineCount, =, lines, ., size, (, ), ;, for, (, int, i]
[;, final, int, lineCount, =, lines, ., size, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[;, for, (, int, i, =, 0, ;, i, <, lineCount, ;, i, ++, ), {, ArrayList, <, Entry, >]
[., size, (, ), ;, for, (, int, i, =, 0, ;, i, <, lineCount, ;, i, ++, ), {]
[;, i, <, lineCount, ;, i, ++, ), {, ArrayList, <, Entry, >, line, =, lines, ., get, (, i]
[;, i, ++, ), {, ArrayList, <, Entry, >, line, =, lines, ., get, (, i, ), ;, if, (]
[<, lineCount, ;, i, ++, ), {, ArrayList, <, Entry, >, line, =, lines, ., get, (, i, ), ;]
[;, i, ++, ), {, ArrayList, <, Entry, >, line, =, lines, ., get, (, i, ), ;, if, (]
[), {, ArrayList, <, Entry, >, line, =, lines, ., get, (, i, ), ;, if, (, line, !=, null]
[++, ), {, ArrayList, <, Entry, >, line, =, lines, ., get, (, i, ), ;, if, (, line, !=]
[;, if, (, line, !=, null, ), {, final, int, entryCount, =, line, ., size, (, ), ;, for, (]
[., get, (, i, ), ;, if, (, line, !=, null, ), {, final, int, entryCount, =, line, ., size]
[), ;, if, (, line, !=, null, ), {, final, int, entryCount, =, line, ., size, (, ), ;, for]
[), {, final, int, entryCount, =, line, ., size, (, ), ;, for, (, int, j, =, 0, ;, j]
[!=, null, ), {, final, int, entryCount, =, line, ., size, (, ), ;, for, (, int, j, =, 0]
[), {, final, int, entryCount, =, line, ., size, (, ), ;, for, (, int, j, =, 0, ;, j]
[;, for, (, int, j, =, 0, ;, j, <, entryCount, ;, j, ++, ), {, Entry, entry, =, line]
[., size, (, ), ;, for, (, int, j, =, 0, ;, j, <, entryCount, ;, j, ++, ), {]
[;, j, <, entryCount, ;, j, ++, ), {, Entry, entry, =, line, ., get, (, j, ), ;, if]
[;, j, ++, ), {, Entry, entry, =, line, ., get, (, j, ), ;, if, (, pending, ), {]
[<, entryCount, ;, j, ++, ), {, Entry, entry, =, line, ., get, (, j, ), ;, if, (, pending]
[;, j, ++, ), {, Entry, entry, =, line, ., get, (, j, ), ;, if, (, pending, ), {]
[), {, Entry, entry, =, line, ., get, (, j, ), ;, if, (, pending, ), {, FilePosition, endPosition, =]
[++, ), {, Entry, entry, =, line, ., get, (, j, ), ;, if, (, pending, ), {, FilePosition, endPosition]
[;, if, (, pending, ), {, FilePosition, endPosition, =, new, FilePosition, (, i, ,, entry, ., getGeneratedColumn, (, ), )]
[., get, (, j, ), ;, if, (, pending, ), {, FilePosition, endPosition, =, new, FilePosition, (, i, ,, entry]
[), ;, if, (, pending, ), {, FilePosition, endPosition, =, new, FilePosition, (, i, ,, entry, ., getGeneratedColumn, (, )]
[), {, FilePosition, endPosition, =, new, FilePosition, (, i, ,, entry, ., getGeneratedColumn, (, ), ), ;, visitor, ., visit]
[;, visitor, ., visit, (, sourceName, ,, symbolName, ,, sourceStartPosition, ,, startPosition, ,, endPosition, ), ;, pending, =, false, ;]
[,, entry, ., getGeneratedColumn, (, ), ), ;, visitor, ., visit, (, sourceName, ,, symbolName, ,, sourceStartPosition, ,, startPosition, ,]
[), ;, visitor, ., visit, (, sourceName, ,, symbolName, ,, sourceStartPosition, ,, startPosition, ,, endPosition, ), ;, pending, =, false]
[., getGeneratedColumn, (, ), ), ;, visitor, ., visit, (, sourceName, ,, symbolName, ,, sourceStartPosition, ,, startPosition, ,, endPosition, )]
[;, pending, =, false, ;, }, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, ), {, pending, =, true]
[., visit, (, sourceName, ,, symbolName, ,, sourceStartPosition, ,, startPosition, ,, endPosition, ), ;, pending, =, false, ;, }, if]
[,, symbolName, ,, sourceStartPosition, ,, startPosition, ,, endPosition, ), ;, pending, =, false, ;, }, if, (, entry, ., getSourceFileId]
[,, sourceStartPosition, ,, startPosition, ,, endPosition, ), ;, pending, =, false, ;, }, if, (, entry, ., getSourceFileId, (, )]
[,, startPosition, ,, endPosition, ), ;, pending, =, false, ;, }, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED]
[,, endPosition, ), ;, pending, =, false, ;, }, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, ), {]
[), ;, pending, =, false, ;, }, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, ), {, pending, =]
[=, false, ;, }, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, ), {, pending, =, true, ;, sourceName]
[;, }, if, (, entry, ., getSourceFileId, (, ), !=, UNMAPPED, ), {, pending, =, true, ;, sourceName, =, sources]
[), {, pending, =, true, ;, sourceName, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, symbolName, =, (]
[!=, UNMAPPED, ), {, pending, =, true, ;, sourceName, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, symbolName]
[., getSourceFileId, (, ), !=, UNMAPPED, ), {, pending, =, true, ;, sourceName, =, sources, [, entry, ., getSourceFileId, (]
[), {, pending, =, true, ;, sourceName, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, symbolName, =, (]
[=, true, ;, sourceName, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, symbolName, =, (, entry, ., getNameId]
[;, sourceName, =, sources, [, entry, ., getSourceFileId, (, ), ], ;, symbolName, =, (, entry, ., getNameId, (, )]
[=, sources, [, entry, ., getSourceFileId, (, ), ], ;, symbolName, =, (, entry, ., getNameId, (, ), !=, UNMAPPED]
[;, symbolName, =, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), ?, names, [, entry, ., getNameId, (, )]
[[, entry, ., getSourceFileId, (, ), ], ;, symbolName, =, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), ?]
[], ;, symbolName, =, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), ?, names, [, entry, ., getNameId, (]
[., getSourceFileId, (, ), ], ;, symbolName, =, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), ?, names, []
[=, (, entry, ., getNameId, (, ), !=, UNMAPPED, ), ?, names, [, entry, ., getNameId, (, ), ], :]
[;, sourceStartPosition, =, new, FilePosition, (, entry, ., getSourceLine, (, ), ,, entry, ., getSourceColumn, (, ), ), ;, startPosition]
[?, names, [, entry, ., getNameId, (, ), ], :, null, ;, sourceStartPosition, =, new, FilePosition, (, entry, ., getSourceLine]
[), ?, names, [, entry, ., getNameId, (, ), ], :, null, ;, sourceStartPosition, =, new, FilePosition, (, entry, .]
[!=, UNMAPPED, ), ?, names, [, entry, ., getNameId, (, ), ], :, null, ;, sourceStartPosition, =, new, FilePosition, (]
[., getNameId, (, ), !=, UNMAPPED, ), ?, names, [, entry, ., getNameId, (, ), ], :, null, ;, sourceStartPosition]
[), ?, names, [, entry, ., getNameId, (, ), ], :, null, ;, sourceStartPosition, =, new, FilePosition, (, entry, .]
[:, null, ;, sourceStartPosition, =, new, FilePosition, (, entry, ., getSourceLine, (, ), ,, entry, ., getSourceColumn, (, ), )]
[[, entry, ., getNameId, (, ), ], :, null, ;, sourceStartPosition, =, new, FilePosition, (, entry, ., getSourceLine, (, )]
[], :, null, ;, sourceStartPosition, =, new, FilePosition, (, entry, ., getSourceLine, (, ), ,, entry, ., getSourceColumn, (, )]
[., getNameId, (, ), ], :, null, ;, sourceStartPosition, =, new, FilePosition, (, entry, ., getSourceLine, (, ), ,, entry]
[;, sourceStartPosition, =, new, FilePosition, (, entry, ., getSourceLine, (, ), ,, entry, ., getSourceColumn, (, ), ), ;, startPosition]
[=, new, FilePosition, (, entry, ., getSourceLine, (, ), ,, entry, ., getSourceColumn, (, ), ), ;, startPosition, =, new]
[;, startPosition, =, new, FilePosition, (, i, ,, entry, ., getGeneratedColumn, (, ), ), ;, }, }, }, }, }]
[,, entry, ., getSourceColumn, (, ), ), ;, startPosition, =, new, FilePosition, (, i, ,, entry, ., getGeneratedColumn, (, )]
[., getSourceLine, (, ), ,, entry, ., getSourceColumn, (, ), ), ;, startPosition, =, new, FilePosition, (, i, ,, entry]
[), ;, startPosition, =, new, FilePosition, (, i, ,, entry, ., getGeneratedColumn, (, ), ), ;, }, }, }, }]
[., getSourceColumn, (, ), ), ;, startPosition, =, new, FilePosition, (, i, ,, entry, ., getGeneratedColumn, (, ), ), ;]
[=, new, FilePosition, (, i, ,, entry, ., getGeneratedColumn, (, ), ), ;, }, }, }, }, }, }]
[;, }, }, }, }, }, }]
[,, entry, ., getGeneratedColumn, (, ), ), ;, }, }, }, }, }, }]
[), ;, }, }, }, }, }, }]
[., getGeneratedColumn, (, ), ), ;, }, }, }, }, }, }]
