[;, public, static, final, Hours, ONE, =, new, Hours, (, 1, ), ;, public, static, final, Hours, TWO, =, new]
[), ;, public, static, final, Hours, ONE, =, new, Hours, (, 1, ), ;, public, static, final, Hours, TWO, =]
[;, public, static, final, Hours, TWO, =, new, Hours, (, 2, ), ;, public, static, final, Hours, THREE, =, new]
[), ;, public, static, final, Hours, TWO, =, new, Hours, (, 2, ), ;, public, static, final, Hours, THREE, =]
[;, public, static, final, Hours, THREE, =, new, Hours, (, 3, ), ;, public, static, final, Hours, FOUR, =, new]
[), ;, public, static, final, Hours, THREE, =, new, Hours, (, 3, ), ;, public, static, final, Hours, FOUR, =]
[;, public, static, final, Hours, FOUR, =, new, Hours, (, 4, ), ;, public, static, final, Hours, FIVE, =, new]
[), ;, public, static, final, Hours, FOUR, =, new, Hours, (, 4, ), ;, public, static, final, Hours, FIVE, =]
[;, public, static, final, Hours, FIVE, =, new, Hours, (, 5, ), ;, public, static, final, Hours, SIX, =, new]
[), ;, public, static, final, Hours, FIVE, =, new, Hours, (, 5, ), ;, public, static, final, Hours, SIX, =]
[;, public, static, final, Hours, SIX, =, new, Hours, (, 6, ), ;, public, static, final, Hours, SEVEN, =, new]
[), ;, public, static, final, Hours, SIX, =, new, Hours, (, 6, ), ;, public, static, final, Hours, SEVEN, =]
[;, public, static, final, Hours, SEVEN, =, new, Hours, (, 7, ), ;, public, static, final, Hours, EIGHT, =, new]
[), ;, public, static, final, Hours, SEVEN, =, new, Hours, (, 7, ), ;, public, static, final, Hours, EIGHT, =]
[;, public, static, final, Hours, EIGHT, =, new, Hours, (, 8, ), ;, public, static, final, Hours, MAX_VALUE, =, new]
[), ;, public, static, final, Hours, EIGHT, =, new, Hours, (, 8, ), ;, public, static, final, Hours, MAX_VALUE, =]
[;, public, static, final, Hours, MAX_VALUE, =, new, Hours, (, Integer, ., MAX_VALUE, ), ;, public, static, final, Hours, MIN_VALUE]
[), ;, public, static, final, Hours, MAX_VALUE, =, new, Hours, (, Integer, ., MAX_VALUE, ), ;, public, static, final, Hours]
[;, public, static, final, Hours, MIN_VALUE, =, new, Hours, (, Integer, ., MIN_VALUE, ), ;, private, static, final, PeriodFormatter, PARSER]
[), ;, public, static, final, Hours, MIN_VALUE, =, new, Hours, (, Integer, ., MIN_VALUE, ), ;, private, static, final, PeriodFormatter]
[., MAX_VALUE, ), ;, public, static, final, Hours, MIN_VALUE, =, new, Hours, (, Integer, ., MIN_VALUE, ), ;, private, static]
[;, private, static, final, PeriodFormatter, PARSER, =, ISOPeriodFormat, ., standard, (, ), ., withParseType, (, PeriodType, ., hours, (, )]
[), ;, private, static, final, PeriodFormatter, PARSER, =, ISOPeriodFormat, ., standard, (, ), ., withParseType, (, PeriodType, ., hours, (]
[., MIN_VALUE, ), ;, private, static, final, PeriodFormatter, PARSER, =, ISOPeriodFormat, ., standard, (, ), ., withParseType, (, PeriodType, .]
[;, private, static, final, long, serialVersionUID, =, 87525275727380864L, ;, public, static, Hours, hours, (, int, hours, ), {, switch, (]
[., withParseType, (, PeriodType, ., hours, (, ), ), ;, private, static, final, long, serialVersionUID, =, 87525275727380864L, ;, public, static]
[., standard, (, ), ., withParseType, (, PeriodType, ., hours, (, ), ), ;, private, static, final, long, serialVersionUID, =]
[), ;, private, static, final, long, serialVersionUID, =, 87525275727380864L, ;, public, static, Hours, hours, (, int, hours, ), {, switch]
[., hours, (, ), ), ;, private, static, final, long, serialVersionUID, =, 87525275727380864L, ;, public, static, Hours, hours, (, int]
[;, public, static, Hours, hours, (, int, hours, ), {, switch, (, hours, ), {, case, 0, :, return, ZERO]
[), {, case, 0, :, return, ZERO, ;, case, 1, :, return, ONE, ;, case, 2, :, return, TWO, ;]
[:, return, ZERO, ;, case, 1, :, return, ONE, ;, case, 2, :, return, TWO, ;, case, 3, :, return]
[;, case, 1, :, return, ONE, ;, case, 2, :, return, TWO, ;, case, 3, :, return, THREE, ;, case]
[:, return, ONE, ;, case, 2, :, return, TWO, ;, case, 3, :, return, THREE, ;, case, 4, :, return]
[;, case, 2, :, return, TWO, ;, case, 3, :, return, THREE, ;, case, 4, :, return, FOUR, ;, case]
[:, return, TWO, ;, case, 3, :, return, THREE, ;, case, 4, :, return, FOUR, ;, case, 5, :, return]
[;, case, 3, :, return, THREE, ;, case, 4, :, return, FOUR, ;, case, 5, :, return, FIVE, ;, case]
[:, return, THREE, ;, case, 4, :, return, FOUR, ;, case, 5, :, return, FIVE, ;, case, 6, :, return]
[;, case, 4, :, return, FOUR, ;, case, 5, :, return, FIVE, ;, case, 6, :, return, SIX, ;, case]
[:, return, FOUR, ;, case, 5, :, return, FIVE, ;, case, 6, :, return, SIX, ;, case, 7, :, return]
[;, case, 5, :, return, FIVE, ;, case, 6, :, return, SIX, ;, case, 7, :, return, SEVEN, ;, case]
[:, return, FIVE, ;, case, 6, :, return, SIX, ;, case, 7, :, return, SEVEN, ;, case, 8, :, return]
[;, case, 6, :, return, SIX, ;, case, 7, :, return, SEVEN, ;, case, 8, :, return, EIGHT, ;, case]
[:, return, SIX, ;, case, 7, :, return, SEVEN, ;, case, 8, :, return, EIGHT, ;, case, Integer, ., MAX_VALUE]
[;, case, 7, :, return, SEVEN, ;, case, 8, :, return, EIGHT, ;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE]
[:, return, SEVEN, ;, case, 8, :, return, EIGHT, ;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer]
[;, case, 8, :, return, EIGHT, ;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :]
[:, return, EIGHT, ;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;]
[;, case, Integer, ., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return]
[:, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return, new, Hours, (, hours, )]
[., MAX_VALUE, :, return, MAX_VALUE, ;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return, new, Hours, (]
[;, case, Integer, ., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return, new, Hours, (, hours, ), ;, }, }]
[:, return, MIN_VALUE, ;, default, :, return, new, Hours, (, hours, ), ;, }, }, public, static, Hours, hoursBetween, (]
[., MIN_VALUE, :, return, MIN_VALUE, ;, default, :, return, new, Hours, (, hours, ), ;, }, }, public, static, Hours]
[;, default, :, return, new, Hours, (, hours, ), ;, }, }, public, static, Hours, hoursBetween, (, ReadableInstant, start, ,]
[;, }, }, public, static, Hours, hoursBetween, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, int, amount, =, BaseSingleFieldPeriod, .]
[), ;, }, }, public, static, Hours, hoursBetween, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, int, amount, =, BaseSingleFieldPeriod]
[;, return, Hours, ., hours, (, amount, ), ;, }, public, static, Hours, hoursBetween, (, ReadablePartial, start, ,, ReadablePartial, end]
[., between, (, start, ,, end, ,, DurationFieldType, ., hours, (, ), ), ;, return, Hours, ., hours, (, amount]
[,, end, ,, DurationFieldType, ., hours, (, ), ), ;, return, Hours, ., hours, (, amount, ), ;, }, public]
[,, DurationFieldType, ., hours, (, ), ), ;, return, Hours, ., hours, (, amount, ), ;, }, public, static, Hours]
[), ;, return, Hours, ., hours, (, amount, ), ;, }, public, static, Hours, hoursBetween, (, ReadablePartial, start, ,, ReadablePartial]
[., hours, (, ), ), ;, return, Hours, ., hours, (, amount, ), ;, }, public, static, Hours, hoursBetween, (]
[;, }, public, static, Hours, hoursBetween, (, ReadablePartial, start, ,, ReadablePartial, end, ), {, if, (, start, instanceof, LocalTime, &&]
[., hours, (, amount, ), ;, }, public, static, Hours, hoursBetween, (, ReadablePartial, start, ,, ReadablePartial, end, ), {, if]
[), ;, }, public, static, Hours, hoursBetween, (, ReadablePartial, start, ,, ReadablePartial, end, ), {, if, (, start, instanceof, LocalTime]
[), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ;, int, hours, =, chrono]
[&&, end, instanceof, LocalTime, ), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ;]
[instanceof, LocalTime, &&, end, instanceof, LocalTime, ), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, )]
[), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ;, int, hours, =, chrono]
[instanceof, LocalTime, ), {, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ;, int, hours]
[;, int, hours, =, chrono, ., hours, (, ), ., getDifference, (, (, (, LocalTime, ), end, ), ., getLocalMillis]
[., getChronology, (, start, ., getChronology, (, ), ), ;, int, hours, =, chrono, ., hours, (, ), ., getDifference]
[), ;, int, hours, =, chrono, ., hours, (, ), ., getDifference, (, (, (, LocalTime, ), end, ), .]
[., getChronology, (, ), ), ;, int, hours, =, chrono, ., hours, (, ), ., getDifference, (, (, (, LocalTime]
[;, return, Hours, ., hours, (, hours, ), ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,, end]
[., getDifference, (, (, (, LocalTime, ), end, ), ., getLocalMillis, (, ), ,, (, (, LocalTime, ), start, )]
[., hours, (, ), ., getDifference, (, (, (, LocalTime, ), end, ), ., getLocalMillis, (, ), ,, (, (]
[,, (, (, LocalTime, ), start, ), ., getLocalMillis, (, ), ), ;, return, Hours, ., hours, (, hours, )]
[., getLocalMillis, (, ), ,, (, (, LocalTime, ), start, ), ., getLocalMillis, (, ), ), ;, return, Hours, .]
[), ., getLocalMillis, (, ), ,, (, (, LocalTime, ), start, ), ., getLocalMillis, (, ), ), ;, return, Hours]
[), ., getLocalMillis, (, ), ,, (, (, LocalTime, ), start, ), ., getLocalMillis, (, ), ), ;, return, Hours]
[), ;, return, Hours, ., hours, (, hours, ), ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,]
[., getLocalMillis, (, ), ), ;, return, Hours, ., hours, (, hours, ), ;, }, int, amount, =, BaseSingleFieldPeriod, .]
[), ., getLocalMillis, (, ), ), ;, return, Hours, ., hours, (, hours, ), ;, }, int, amount, =, BaseSingleFieldPeriod]
[), ., getLocalMillis, (, ), ), ;, return, Hours, ., hours, (, hours, ), ;, }, int, amount, =, BaseSingleFieldPeriod]
[;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,, end, ,, ZERO, ), ;, return, Hours, ., hours]
[., hours, (, hours, ), ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,, end, ,, ZERO, )]
[), ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, start, ,, end, ,, ZERO, ), ;, return, Hours, .]
[;, return, Hours, ., hours, (, amount, ), ;, }, public, static, Hours, hoursIn, (, ReadableInterval, interval, ), {, if]
[., between, (, start, ,, end, ,, ZERO, ), ;, return, Hours, ., hours, (, amount, ), ;, }, public]
[,, end, ,, ZERO, ), ;, return, Hours, ., hours, (, amount, ), ;, }, public, static, Hours, hoursIn, (]
[,, ZERO, ), ;, return, Hours, ., hours, (, amount, ), ;, }, public, static, Hours, hoursIn, (, ReadableInterval, interval]
[), ;, return, Hours, ., hours, (, amount, ), ;, }, public, static, Hours, hoursIn, (, ReadableInterval, interval, ), {]
[;, }, public, static, Hours, hoursIn, (, ReadableInterval, interval, ), {, if, (, interval, ==, null, ), {, return, Hours]
[., hours, (, amount, ), ;, }, public, static, Hours, hoursIn, (, ReadableInterval, interval, ), {, if, (, interval, ==]
[), ;, }, public, static, Hours, hoursIn, (, ReadableInterval, interval, ), {, if, (, interval, ==, null, ), {, return]
[), {, return, Hours, ., ZERO, ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart, (, )]
[==, null, ), {, return, Hours, ., ZERO, ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart]
[), {, return, Hours, ., ZERO, ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart, (, )]
[;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart, (, ), ,, interval, ., getEnd, (, )]
[., ZERO, ;, }, int, amount, =, BaseSingleFieldPeriod, ., between, (, interval, ., getStart, (, ), ,, interval, ., getEnd]
[;, return, Hours, ., hours, (, amount, ), ;, }, public, static, Hours, standardHoursIn, (, ReadablePeriod, period, ), {, int]
[., between, (, interval, ., getStart, (, ), ,, interval, ., getEnd, (, ), ,, DurationFieldType, ., hours, (, )]
[,, interval, ., getEnd, (, ), ,, DurationFieldType, ., hours, (, ), ), ;, return, Hours, ., hours, (, amount]
[., getStart, (, ), ,, interval, ., getEnd, (, ), ,, DurationFieldType, ., hours, (, ), ), ;, return, Hours]
[,, DurationFieldType, ., hours, (, ), ), ;, return, Hours, ., hours, (, amount, ), ;, }, public, static, Hours]
[., getEnd, (, ), ,, DurationFieldType, ., hours, (, ), ), ;, return, Hours, ., hours, (, amount, ), ;]
[), ;, return, Hours, ., hours, (, amount, ), ;, }, public, static, Hours, standardHoursIn, (, ReadablePeriod, period, ), {]
[., hours, (, ), ), ;, return, Hours, ., hours, (, amount, ), ;, }, public, static, Hours, standardHoursIn, (]
[;, }, public, static, Hours, standardHoursIn, (, ReadablePeriod, period, ), {, int, amount, =, BaseSingleFieldPeriod, ., standardPeriodIn, (, period, ,]
[., hours, (, amount, ), ;, }, public, static, Hours, standardHoursIn, (, ReadablePeriod, period, ), {, int, amount, =, BaseSingleFieldPeriod]
[), ;, }, public, static, Hours, standardHoursIn, (, ReadablePeriod, period, ), {, int, amount, =, BaseSingleFieldPeriod, ., standardPeriodIn, (, period]
[;, return, Hours, ., hours, (, amount, ), ;, }, @, FromString, public, static, Hours, parseHours, (, String, periodStr, )]
[., standardPeriodIn, (, period, ,, DateTimeConstants, ., MILLIS_PER_HOUR, ), ;, return, Hours, ., hours, (, amount, ), ;, }, @]
[,, DateTimeConstants, ., MILLIS_PER_HOUR, ), ;, return, Hours, ., hours, (, amount, ), ;, }, @, FromString, public, static, Hours]
[), ;, return, Hours, ., hours, (, amount, ), ;, }, @, FromString, public, static, Hours, parseHours, (, String, periodStr]
[., MILLIS_PER_HOUR, ), ;, return, Hours, ., hours, (, amount, ), ;, }, @, FromString, public, static, Hours, parseHours, (]
[;, }, @, FromString, public, static, Hours, parseHours, (, String, periodStr, ), {, if, (, periodStr, ==, null, ), {]
[., hours, (, amount, ), ;, }, @, FromString, public, static, Hours, parseHours, (, String, periodStr, ), {, if, (]
[), ;, }, @, FromString, public, static, Hours, parseHours, (, String, periodStr, ), {, if, (, periodStr, ==, null, )]
[), {, return, Hours, ., ZERO, ;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;, return, Hours]
[==, null, ), {, return, Hours, ., ZERO, ;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;]
[), {, return, Hours, ., ZERO, ;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;, return, Hours]
[;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;, return, Hours, ., hours, (, p, ., getHours]
[., ZERO, ;, }, Period, p, =, PARSER, ., parsePeriod, (, periodStr, ), ;, return, Hours, ., hours, (, p]
[;, return, Hours, ., hours, (, p, ., getHours, (, ), ), ;, }, private, Hours, (, int, hours, )]
[., parsePeriod, (, periodStr, ), ;, return, Hours, ., hours, (, p, ., getHours, (, ), ), ;, }, private]
[), ;, return, Hours, ., hours, (, p, ., getHours, (, ), ), ;, }, private, Hours, (, int, hours]
[;, }, private, Hours, (, int, hours, ), {, super, (, hours, ), ;, }, private, Object, readResolve, (, )]
[., hours, (, p, ., getHours, (, ), ), ;, }, private, Hours, (, int, hours, ), {, super, (]
[), ;, }, private, Hours, (, int, hours, ), {, super, (, hours, ), ;, }, private, Object, readResolve, (]
[., getHours, (, ), ), ;, }, private, Hours, (, int, hours, ), {, super, (, hours, ), ;, }]
[), ;, }, private, Object, readResolve, (, ), {, return, Hours, ., hours, (, getValue, (, ), ), ;, }]
[;, }, public, DurationFieldType, getFieldType, (, ), {, return, DurationFieldType, ., hours, (, ), ;, }, public, PeriodType, getPeriodType, (]
[., hours, (, getValue, (, ), ), ;, }, public, DurationFieldType, getFieldType, (, ), {, return, DurationFieldType, ., hours, (]
[), ;, }, public, DurationFieldType, getFieldType, (, ), {, return, DurationFieldType, ., hours, (, ), ;, }, public, PeriodType, getPeriodType]
[;, }, public, PeriodType, getPeriodType, (, ), {, return, PeriodType, ., hours, (, ), ;, }, public, Weeks, toStandardWeeks, (]
[., hours, (, ), ;, }, public, PeriodType, getPeriodType, (, ), {, return, PeriodType, ., hours, (, ), ;, }]
[;, }, public, Weeks, toStandardWeeks, (, ), {, return, Weeks, ., weeks, (, getValue, (, ), /, DateTimeConstants, ., HOURS_PER_WEEK]
[., hours, (, ), ;, }, public, Weeks, toStandardWeeks, (, ), {, return, Weeks, ., weeks, (, getValue, (, )]
[;, }, public, Days, toStandardDays, (, ), {, return, Days, ., days, (, getValue, (, ), /, DateTimeConstants, ., HOURS_PER_DAY]
[., weeks, (, getValue, (, ), /, DateTimeConstants, ., HOURS_PER_WEEK, ), ;, }, public, Days, toStandardDays, (, ), {, return]
[), ;, }, public, Days, toStandardDays, (, ), {, return, Days, ., days, (, getValue, (, ), /, DateTimeConstants, .]
[/, DateTimeConstants, ., HOURS_PER_WEEK, ), ;, }, public, Days, toStandardDays, (, ), {, return, Days, ., days, (, getValue, (]
[), ;, }, public, Days, toStandardDays, (, ), {, return, Days, ., days, (, getValue, (, ), /, DateTimeConstants, .]
[., HOURS_PER_WEEK, ), ;, }, public, Days, toStandardDays, (, ), {, return, Days, ., days, (, getValue, (, ), /]
[;, }, public, Minutes, toStandardMinutes, (, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeMultiply, (, getValue, (, )]
[., days, (, getValue, (, ), /, DateTimeConstants, ., HOURS_PER_DAY, ), ;, }, public, Minutes, toStandardMinutes, (, ), {, return]
[), ;, }, public, Minutes, toStandardMinutes, (, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeMultiply, (, getValue, (]
[/, DateTimeConstants, ., HOURS_PER_DAY, ), ;, }, public, Minutes, toStandardMinutes, (, ), {, return, Minutes, ., minutes, (, FieldUtils, .]
[), ;, }, public, Minutes, toStandardMinutes, (, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeMultiply, (, getValue, (]
[., HOURS_PER_DAY, ), ;, }, public, Minutes, toStandardMinutes, (, ), {, return, Minutes, ., minutes, (, FieldUtils, ., safeMultiply, (]
[;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils, ., safeMultiply, (, getValue, (, )]
[., minutes, (, FieldUtils, ., safeMultiply, (, getValue, (, ), ,, DateTimeConstants, ., MINUTES_PER_HOUR, ), ), ;, }, public, Seconds]
[), ;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils, ., safeMultiply, (, getValue, (]
[., safeMultiply, (, getValue, (, ), ,, DateTimeConstants, ., MINUTES_PER_HOUR, ), ), ;, }, public, Seconds, toStandardSeconds, (, ), {]
[,, DateTimeConstants, ., MINUTES_PER_HOUR, ), ), ;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils]
[), ), ;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils, ., safeMultiply, (, getValue]
[., MINUTES_PER_HOUR, ), ), ;, }, public, Seconds, toStandardSeconds, (, ), {, return, Seconds, ., seconds, (, FieldUtils, ., safeMultiply]
[;, }, public, Duration, toStandardDuration, (, ), {, long, hours, =, getValue, (, ), ;, return, new, Duration, (, hours]
[., seconds, (, FieldUtils, ., safeMultiply, (, getValue, (, ), ,, DateTimeConstants, ., SECONDS_PER_HOUR, ), ), ;, }, public, Duration]
[), ;, }, public, Duration, toStandardDuration, (, ), {, long, hours, =, getValue, (, ), ;, return, new, Duration, (]
[., safeMultiply, (, getValue, (, ), ,, DateTimeConstants, ., SECONDS_PER_HOUR, ), ), ;, }, public, Duration, toStandardDuration, (, ), {]
[,, DateTimeConstants, ., SECONDS_PER_HOUR, ), ), ;, }, public, Duration, toStandardDuration, (, ), {, long, hours, =, getValue, (, )]
[), ), ;, }, public, Duration, toStandardDuration, (, ), {, long, hours, =, getValue, (, ), ;, return, new, Duration]
[., SECONDS_PER_HOUR, ), ), ;, }, public, Duration, toStandardDuration, (, ), {, long, hours, =, getValue, (, ), ;, return]
[;, return, new, Duration, (, hours, *, DateTimeConstants, ., MILLIS_PER_HOUR, ), ;, }, public, int, getHours, (, ), {, return]
[;, }, public, int, getHours, (, ), {, return, getValue, (, ), ;, }, public, Hours, plus, (, int, hours]
[), ;, }, public, int, getHours, (, ), {, return, getValue, (, ), ;, }, public, Hours, plus, (, int]
[*, DateTimeConstants, ., MILLIS_PER_HOUR, ), ;, }, public, int, getHours, (, ), {, return, getValue, (, ), ;, }, public]
[), ;, }, public, int, getHours, (, ), {, return, getValue, (, ), ;, }, public, Hours, plus, (, int]
[., MILLIS_PER_HOUR, ), ;, }, public, int, getHours, (, ), {, return, getValue, (, ), ;, }, public, Hours, plus]
[;, }, public, Hours, plus, (, int, hours, ), {, if, (, hours, ==, 0, ), {, return, this, ;]
[), {, return, this, ;, }, return, Hours, ., hours, (, FieldUtils, ., safeAdd, (, getValue, (, ), ,, hours]
[==, 0, ), {, return, this, ;, }, return, Hours, ., hours, (, FieldUtils, ., safeAdd, (, getValue, (, )]
[), {, return, this, ;, }, return, Hours, ., hours, (, FieldUtils, ., safeAdd, (, getValue, (, ), ,, hours]
[;, }, return, Hours, ., hours, (, FieldUtils, ., safeAdd, (, getValue, (, ), ,, hours, ), ), ;, }]
[;, }, public, Hours, plus, (, Hours, hours, ), {, if, (, hours, ==, null, ), {, return, this, ;]
[., hours, (, FieldUtils, ., safeAdd, (, getValue, (, ), ,, hours, ), ), ;, }, public, Hours, plus, (]
[), ;, }, public, Hours, plus, (, Hours, hours, ), {, if, (, hours, ==, null, ), {, return, this]
[., safeAdd, (, getValue, (, ), ,, hours, ), ), ;, }, public, Hours, plus, (, Hours, hours, ), {]
[,, hours, ), ), ;, }, public, Hours, plus, (, Hours, hours, ), {, if, (, hours, ==, null, )]
[), ), ;, }, public, Hours, plus, (, Hours, hours, ), {, if, (, hours, ==, null, ), {, return]
[), {, return, this, ;, }, return, plus, (, hours, ., getValue, (, ), ), ;, }, public, Hours, minus]
[==, null, ), {, return, this, ;, }, return, plus, (, hours, ., getValue, (, ), ), ;, }, public]
[), {, return, this, ;, }, return, plus, (, hours, ., getValue, (, ), ), ;, }, public, Hours, minus]
[;, }, return, plus, (, hours, ., getValue, (, ), ), ;, }, public, Hours, minus, (, int, hours, )]
[;, }, public, Hours, minus, (, int, hours, ), {, return, plus, (, FieldUtils, ., safeNegate, (, hours, ), )]
[), ;, }, public, Hours, minus, (, int, hours, ), {, return, plus, (, FieldUtils, ., safeNegate, (, hours, )]
[., getValue, (, ), ), ;, }, public, Hours, minus, (, int, hours, ), {, return, plus, (, FieldUtils, .]
[;, }, public, Hours, minus, (, Hours, hours, ), {, if, (, hours, ==, null, ), {, return, this, ;]
[), ;, }, public, Hours, minus, (, Hours, hours, ), {, if, (, hours, ==, null, ), {, return, this]
[., safeNegate, (, hours, ), ), ;, }, public, Hours, minus, (, Hours, hours, ), {, if, (, hours, ==]
[), ), ;, }, public, Hours, minus, (, Hours, hours, ), {, if, (, hours, ==, null, ), {, return]
[), {, return, this, ;, }, return, minus, (, hours, ., getValue, (, ), ), ;, }, public, Hours, multipliedBy]
[==, null, ), {, return, this, ;, }, return, minus, (, hours, ., getValue, (, ), ), ;, }, public]
[), {, return, this, ;, }, return, minus, (, hours, ., getValue, (, ), ), ;, }, public, Hours, multipliedBy]
[;, }, return, minus, (, hours, ., getValue, (, ), ), ;, }, public, Hours, multipliedBy, (, int, scalar, )]
[;, }, public, Hours, multipliedBy, (, int, scalar, ), {, return, Hours, ., hours, (, FieldUtils, ., safeMultiply, (, getValue]
[), ;, }, public, Hours, multipliedBy, (, int, scalar, ), {, return, Hours, ., hours, (, FieldUtils, ., safeMultiply, (]
[., getValue, (, ), ), ;, }, public, Hours, multipliedBy, (, int, scalar, ), {, return, Hours, ., hours, (]
[;, }, public, Hours, dividedBy, (, int, divisor, ), {, if, (, divisor, ==, 1, ), {, return, this, ;]
[., hours, (, FieldUtils, ., safeMultiply, (, getValue, (, ), ,, scalar, ), ), ;, }, public, Hours, dividedBy, (]
[), ;, }, public, Hours, dividedBy, (, int, divisor, ), {, if, (, divisor, ==, 1, ), {, return, this]
[., safeMultiply, (, getValue, (, ), ,, scalar, ), ), ;, }, public, Hours, dividedBy, (, int, divisor, ), {]
[,, scalar, ), ), ;, }, public, Hours, dividedBy, (, int, divisor, ), {, if, (, divisor, ==, 1, )]
[), ), ;, }, public, Hours, dividedBy, (, int, divisor, ), {, if, (, divisor, ==, 1, ), {, return]
[), {, return, this, ;, }, return, Hours, ., hours, (, getValue, (, ), /, divisor, ), ;, }, public]
[==, 1, ), {, return, this, ;, }, return, Hours, ., hours, (, getValue, (, ), /, divisor, ), ;]
[), {, return, this, ;, }, return, Hours, ., hours, (, getValue, (, ), /, divisor, ), ;, }, public]
[;, }, return, Hours, ., hours, (, getValue, (, ), /, divisor, ), ;, }, public, Hours, negated, (, )]
[;, }, public, Hours, negated, (, ), {, return, Hours, ., hours, (, FieldUtils, ., safeNegate, (, getValue, (, )]
[., hours, (, getValue, (, ), /, divisor, ), ;, }, public, Hours, negated, (, ), {, return, Hours, .]
[), ;, }, public, Hours, negated, (, ), {, return, Hours, ., hours, (, FieldUtils, ., safeNegate, (, getValue, (]
[/, divisor, ), ;, }, public, Hours, negated, (, ), {, return, Hours, ., hours, (, FieldUtils, ., safeNegate, (]
[), ;, }, public, Hours, negated, (, ), {, return, Hours, ., hours, (, FieldUtils, ., safeNegate, (, getValue, (]
[;, }, public, boolean, isGreaterThan, (, Hours, other, ), {, if, (, other, ==, null, ), {, return, getValue, (]
[., hours, (, FieldUtils, ., safeNegate, (, getValue, (, ), ), ), ;, }, public, boolean, isGreaterThan, (, Hours, other]
[), ;, }, public, boolean, isGreaterThan, (, Hours, other, ), {, if, (, other, ==, null, ), {, return, getValue]
[., safeNegate, (, getValue, (, ), ), ), ;, }, public, boolean, isGreaterThan, (, Hours, other, ), {, if, (]
[), ), ;, }, public, boolean, isGreaterThan, (, Hours, other, ), {, if, (, other, ==, null, ), {, return]
[), {, return, getValue, (, ), >, 0, ;, }, return, getValue, (, ), >, other, ., getValue, (, )]
[==, null, ), {, return, getValue, (, ), >, 0, ;, }, return, getValue, (, ), >, other, ., getValue]
[), {, return, getValue, (, ), >, 0, ;, }, return, getValue, (, ), >, other, ., getValue, (, )]
[;, }, return, getValue, (, ), >, other, ., getValue, (, ), ;, }, public, boolean, isLessThan, (, Hours, other]
[>, 0, ;, }, return, getValue, (, ), >, other, ., getValue, (, ), ;, }, public, boolean, isLessThan, (]
[;, }, return, getValue, (, ), >, other, ., getValue, (, ), ;, }, public, boolean, isLessThan, (, Hours, other]
[;, }, public, boolean, isLessThan, (, Hours, other, ), {, if, (, other, ==, null, ), {, return, getValue, (]
[>, other, ., getValue, (, ), ;, }, public, boolean, isLessThan, (, Hours, other, ), {, if, (, other, ==]
[;, }, public, boolean, isLessThan, (, Hours, other, ), {, if, (, other, ==, null, ), {, return, getValue, (]
[., getValue, (, ), ;, }, public, boolean, isLessThan, (, Hours, other, ), {, if, (, other, ==, null, )]
[), {, return, getValue, (, ), <, 0, ;, }, return, getValue, (, ), <, other, ., getValue, (, )]
[==, null, ), {, return, getValue, (, ), <, 0, ;, }, return, getValue, (, ), <, other, ., getValue]
[), {, return, getValue, (, ), <, 0, ;, }, return, getValue, (, ), <, other, ., getValue, (, )]
[;, }, return, getValue, (, ), <, other, ., getValue, (, ), ;, }, @, ToString, public, String, toString, (]
[<, 0, ;, }, return, getValue, (, ), <, other, ., getValue, (, ), ;, }, @, ToString, public, String]
[;, }, return, getValue, (, ), <, other, ., getValue, (, ), ;, }, @, ToString, public, String, toString, (]
[;, }, @, ToString, public, String, toString, (, ), {, return, "PT", +, String, ., valueOf, (, getValue, (, )]
[<, other, ., getValue, (, ), ;, }, @, ToString, public, String, toString, (, ), {, return, "PT", +, String]
[;, }, @, ToString, public, String, toString, (, ), {, return, "PT", +, String, ., valueOf, (, getValue, (, )]
[., getValue, (, ), ;, }, @, ToString, public, String, toString, (, ), {, return, "PT", +, String, ., valueOf]
[;, }, }]
[+, "H", ;, }, }]
[+, String, ., valueOf, (, getValue, (, ), ), +, "H", ;, }, }]
[+, "H", ;, }, }]
[., valueOf, (, getValue, (, ), ), +, "H", ;, }, }]
[), +, "H", ;, }, }]
[;, }, }]
