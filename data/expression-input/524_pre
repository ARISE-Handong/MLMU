[., apache, ., commons, ., math3, ., exception, ., DimensionMismatchException, ;, class, FastMathCalc, {, private, static, final, long, HEX_40000000, =]
[;, class, FastMathCalc, {, private, static, final, long, HEX_40000000, =, 0x40000000L, ;, private, static, final, double, FACT, [, ], =]
[private, static, final, long, HEX_40000000, =, 0x40000000L, ;, private, static, final, double, FACT, [, ], =, new, double, [, ]]
[static, final, long, HEX_40000000, =, 0x40000000L, ;, private, static, final, double, FACT, [, ], =, new, double, [, ], {]
[final, long, HEX_40000000, =, 0x40000000L, ;, private, static, final, double, FACT, [, ], =, new, double, [, ], {, +]
[HEX_40000000, =, 0x40000000L, ;, private, static, final, double, FACT, [, ], =, new, double, [, ], {, +, 1.0d, ,]
[=, 0x40000000L, ;, private, static, final, double, FACT, [, ], =, new, double, [, ], {, +, 1.0d, ,, +]
[;, private, static, final, double, FACT, [, ], =, new, double, [, ], {, +, 1.0d, ,, +, 1.0d, ,]
[private, static, final, double, FACT, [, ], =, new, double, [, ], {, +, 1.0d, ,, +, 1.0d, ,, +]
[final, double, FACT, [, ], =, new, double, [, ], {, +, 1.0d, ,, +, 1.0d, ,, +, 2.0d, ,]
[double, FACT, [, ], =, new, double, [, ], {, +, 1.0d, ,, +, 1.0d, ,, +, 2.0d, ,, +]
[[, ], =, new, double, [, ], {, +, 1.0d, ,, +, 1.0d, ,, +, 2.0d, ,, +, 6.0d, ,]
[], =, new, double, [, ], {, +, 1.0d, ,, +, 1.0d, ,, +, 2.0d, ,, +, 6.0d, ,, +]
[new, double, [, ], {, +, 1.0d, ,, +, 1.0d, ,, +, 2.0d, ,, +, 6.0d, ,, +, 24.0d, ,]
[double, [, ], {, +, 1.0d, ,, +, 1.0d, ,, +, 2.0d, ,, +, 6.0d, ,, +, 24.0d, ,, +]
[], {, +, 1.0d, ,, +, 1.0d, ,, +, 2.0d, ,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,]
[{, +, 1.0d, ,, +, 1.0d, ,, +, 2.0d, ,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +]
[1.0d, ,, +, 1.0d, ,, +, 2.0d, ,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,]
[,, +, 1.0d, ,, +, 2.0d, ,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +]
[1.0d, ,, +, 2.0d, ,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,]
[,, +, 2.0d, ,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +]
[2.0d, ,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,]
[,, +, 6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +]
[6.0d, ,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,]
[,, +, 24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +]
[24.0d, ,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,]
[,, +, 120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +]
[120.0d, ,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,]
[,, +, 720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +]
[720.0d, ,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,]
[,, +, 5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +]
[5040.0d, ,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,]
[,, +, 40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +]
[40320.0d, ,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,]
[,, +, 362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +]
[362880.0d, ,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,]
[,, +, 3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +]
[3628800.0d, ,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,]
[,, +, 39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +]
[39916800.0d, ,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,]
[,, +, 479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,, +]
[479001600.0d, ,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,, +, 6402373705728000.0d, ,]
[,, +, 6227020800.0d, ,, +, 87178291200.0d, ,, +, 1307674368000.0d, ,, +, 20922789888000.0d, ,, +, 355687428096000.0d, ,, +, 6402373705728000.0d, ,, +]
[355687428096000.0d, ,, +, 6402373705728000.0d, ,, +, 121645100408832000.0d, ,, }, ;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =]
[,, +, 6402373705728000.0d, ,, +, 121645100408832000.0d, ,, }, ;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {]
[+, 6402373705728000.0d, ,, +, 121645100408832000.0d, ,, }, ;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {, {]
[,, +, 121645100408832000.0d, ,, }, ;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {, {, 2.0, ,]
[,, }, ;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {, {, 2.0, ,, 0.0, }, ,]
[}, ;, private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {, {, 2.0, ,, 0.0, }, ,, {]
[private, static, final, double, LN_SPLIT_COEF, [, ], [, ], =, {, {, 2.0, ,, 0.0, }, ,, {, 0.6666666269302368, ,]
[double, LN_SPLIT_COEF, [, ], [, ], =, {, {, 2.0, ,, 0.0, }, ,, {, 0.6666666269302368, ,, 3.9736429850260626E-8, }, ,]
[LN_SPLIT_COEF, [, ], [, ], =, {, {, 2.0, ,, 0.0, }, ,, {, 0.6666666269302368, ,, 3.9736429850260626E-8, }, ,, {]
[], [, ], =, {, {, 2.0, ,, 0.0, }, ,, {, 0.6666666269302368, ,, 3.9736429850260626E-8, }, ,, {, 0.3999999761581421, ,]
[=, {, {, 2.0, ,, 0.0, }, ,, {, 0.6666666269302368, ,, 3.9736429850260626E-8, }, ,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,]
[{, {, 2.0, ,, 0.0, }, ,, {, 0.6666666269302368, ,, 3.9736429850260626E-8, }, ,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {]
[2.0, ,, 0.0, }, ,, {, 0.6666666269302368, ,, 3.9736429850260626E-8, }, ,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,]
[}, ,, {, 0.6666666269302368, ,, 3.9736429850260626E-8, }, ,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,]
[,, {, 0.6666666269302368, ,, 3.9736429850260626E-8, }, ,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {]
[0.6666666269302368, ,, 3.9736429850260626E-8, }, ,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,]
[}, ,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,]
[,, {, 0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {]
[0.3999999761581421, ,, 2.3841857910019882E-8, }, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,]
[}, ,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,]
[,, {, 0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {]
[0.2857142686843872, ,, 1.7029898543501842E-8, }, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,]
[}, ,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,]
[,, {, 0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {]
[0.2222222089767456, ,, 1.3245471311735498E-8, }, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,]
[}, ,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,]
[,, {, 0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {]
[0.1818181574344635, ,, 2.4384203044354907E-8, }, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,]
[}, ,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,]
[,, {, 0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {]
[0.1538461446762085, ,, 9.140260083262505E-9, }, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,]
[}, ,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,]
[,, {, 0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {]
[0.13333332538604736, ,, 9.220590270857665E-9, }, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,]
[}, ,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,]
[,, {, 0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {]
[0.11764700710773468, ,, 1.2393345855018391E-8, }, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,]
[}, ,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,]
[,, {, 0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {]
[0.10526403784751892, ,, 8.251545029714408E-9, }, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,]
[}, ,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,]
[,, {, 0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {]
[0.0952233225107193, ,, 1.2675934823758863E-8, }, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,]
[}, ,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,]
[,, {, 0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,, {]
[0.08713622391223907, ,, 1.1430250008909141E-8, }, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,, {, 0.030589580535888672, ,]
[}, ,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,, {, 0.030589580535888672, ,, 1.2958646899018938E-9, }, ,]
[,, {, 0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,, {, 0.030589580535888672, ,, 1.2958646899018938E-9, }, ,, {]
[0.07842259109020233, ,, 2.404307984052299E-9, }, ,, {, 0.08371849358081818, ,, 1.176342548272881E-8, }, ,, {, 0.030589580535888672, ,, 1.2958646899018938E-9, }, ,, {, 0.14982303977012634, ,]
[{, 0.030589580535888672, ,, 1.2958646899018938E-9, }, ,, {, 0.14982303977012634, ,, 1.225743062930824E-8, }, ,, }, ;, private, static, final, String, TABLE_START_DECL, =]
[,, 1.225743062930824E-8, }, ,, }, ;, private, static, final, String, TABLE_START_DECL, =, "    {", ;, private, static, final, String, TABLE_END_DECL, =]
[final, String, TABLE_START_DECL, =, "    {", ;, private, static, final, String, TABLE_END_DECL, =, "    };", ;, private, FastMathCalc, (, ), {, }]
[=, "    {", ;, private, static, final, String, TABLE_END_DECL, =, "    };", ;, private, FastMathCalc, (, ), {, }, @, SuppressWarnings, (]
[int, SINE_TABLE_LEN, ,, double, [, ], TANGENT_TABLE_A, ,, double, [, ], TANGENT_TABLE_B, ), {, final, double, result, [, ], =]
[double, [, ], TANGENT_TABLE_A, ,, double, [, ], TANGENT_TABLE_B, ), {, final, double, result, [, ], =, new, double, []
[TANGENT_TABLE_B, ), {, final, double, result, [, ], =, new, double, [, 2, ], ;, for, (, int, i, =]
[{, final, double, result, [, ], =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;]
[{, final, double, result, [, ], =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;]
[double, result, [, ], =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;, i, <]
[[, ], =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;, i, <, 7, ;]
[[, ], =, new, double, [, 2, ], ;, for, (, int, i, =, 0, ;, i, <, 7, ;]
[], ;, for, (, int, i, =, 0, ;, i, <, 7, ;, i, ++, ), {, double, x, =]
[], ;, for, (, int, i, =, 0, ;, i, <, 7, ;, i, ++, ), {, double, x, =]
[for, (, int, i, =, 0, ;, i, <, 7, ;, i, ++, ), {, double, x, =, i, /]
[int, i, =, 0, ;, i, <, 7, ;, i, ++, ), {, double, x, =, i, /, 8.0, ;]
[=, 0, ;, i, <, 7, ;, i, ++, ), {, double, x, =, i, /, 8.0, ;, slowSin, (]
[;, i, <, 7, ;, i, ++, ), {, double, x, =, i, /, 8.0, ;, slowSin, (, x, ,]
[7, ;, i, ++, ), {, double, x, =, i, /, 8.0, ;, slowSin, (, x, ,, result, ), ;]
[7, ;, i, ++, ), {, double, x, =, i, /, 8.0, ;, slowSin, (, x, ,, result, ), ;]
[i, ++, ), {, double, x, =, i, /, 8.0, ;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A, []
[{, double, x, =, i, /, 8.0, ;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A, [, i, ], =]
[{, double, x, =, i, /, 8.0, ;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A, [, i, ], =]
[x, =, i, /, 8.0, ;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, []
[/, 8.0, ;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[/, 8.0, ;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[;, slowSin, (, x, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, []
[x, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =]
[x, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =]
[result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, []
[SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;]
[i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, slowCos, (]
[=, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, slowCos, (, x, ,]
[0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, slowCos, (, x, ,, result, ), ;]
[0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, slowCos, (, x, ,, result, ), ;]
[;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, []
[i, ], =, result, [, 1, ], ;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =]
[i, ], =, result, [, 1, ], ;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =]
[=, result, [, 1, ], ;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, []
[1, ], ;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[1, ], ;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[;, slowCos, (, x, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, []
[x, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =]
[x, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =]
[result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, []
[[, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, for, (, int, i, =]
[], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, for, (, int, i, =, 7, ;]
[], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, for, (, int, i, =, 7, ;]
[COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, for, (, int, i, =, 7, ;, i, <]
[i, ], =, result, [, 1, ], ;, }, for, (, int, i, =, 7, ;, i, <, SINE_TABLE_LEN, ;]
[i, ], =, result, [, 1, ], ;, }, for, (, int, i, =, 7, ;, i, <, SINE_TABLE_LEN, ;]
[for, (, int, i, =, 7, ;, i, <, SINE_TABLE_LEN, ;, i, ++, ), {, double, xs, [, ], =]
[i, =, 7, ;, i, <, SINE_TABLE_LEN, ;, i, ++, ), {, double, xs, [, ], =, new, double, []
[i, ++, ), {, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys, [, ], =]
[{, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys, [, ], =, new, double, []
[[, 2, ], ;, double, ys, [, ], =, new, double, [, 2, ], ;, double, as, [, ], =]
[;, double, ys, [, ], =, new, double, [, 2, ], ;, double, as, [, ], =, new, double, []
[[, 2, ], ;, double, as, [, ], =, new, double, [, 2, ], ;, double, bs, [, ], =]
[;, double, as, [, ], =, new, double, [, 2, ], ;, double, bs, [, ], =, new, double, []
[[, 2, ], ;, double, bs, [, ], =, new, double, [, 2, ], ;, double, temps, [, ], =]
[;, double, bs, [, ], =, new, double, [, 2, ], ;, double, temps, [, ], =, new, double, []
[=, new, double, [, 2, ], ;, double, temps, [, ], =, new, double, [, 2, ], ;, if, (]
[=, new, double, [, 2, ], ;, double, temps, [, ], =, new, double, [, 2, ], ;, if, (]
[new, double, [, 2, ], ;, double, temps, [, ], =, new, double, [, 2, ], ;, if, (, (]
[new, double, [, 2, ], ;, double, temps, [, ], =, new, double, [, 2, ], ;, if, (, (]
[[, 2, ], ;, double, temps, [, ], =, new, double, [, 2, ], ;, if, (, (, i, &]
[;, double, temps, [, ], =, new, double, [, 2, ], ;, if, (, (, i, &, 1, ), ==]
[[, ], =, new, double, [, 2, ], ;, if, (, (, i, &, 1, ), ==, 0, ), {]
[[, ], =, new, double, [, 2, ], ;, if, (, (, i, &, 1, ), ==, 0, ), {]
[=, new, double, [, 2, ], ;, if, (, (, i, &, 1, ), ==, 0, ), {, xs, []
[[, 2, ], ;, if, (, (, i, &, 1, ), ==, 0, ), {, xs, [, 0, ], =]
[[, 2, ], ;, if, (, (, i, &, 1, ), ==, 0, ), {, xs, [, 0, ], =]
[], ;, if, (, (, i, &, 1, ), ==, 0, ), {, xs, [, 0, ], =, SINE_TABLE_A, []
[], ;, if, (, (, i, &, 1, ), ==, 0, ), {, xs, [, 0, ], =, SINE_TABLE_A, []
[if, (, (, i, &, 1, ), ==, 0, ), {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /]
[i, &, 1, ), ==, 0, ), {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;]
[i, &, 1, ), ==, 0, ), {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;]
[1, ), ==, 0, ), {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, []
[0, ), {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =]
[0, ), {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =]
[{, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, []
[{, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, []
[[, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /]
[=, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;]
[=, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;]
[[, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, []
[2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =]
[2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =]
[;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, []
[;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, []
[[, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /]
[=, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;]
[=, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;]
[[, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, []
[2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =]
[2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =]
[;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, []
[;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, []
[[, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /]
[=, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;]
[[, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (]
[/, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (, xs, ,]
[], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,]
[[, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,, result, ), ;]
[[, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,, result, ), ;]
[], =, COSINE_TABLE_B, [, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, []
[[, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =]
[[, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =]
[[, i, /, 2, ], ;, splitMult, (, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =]
[/, 2, ], ;, splitMult, (, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, []
[;, splitMult, (, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], *]
[(, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], *, 2.0, ;]
[(, xs, ,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], *, 2.0, ;]
[,, ys, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, []
[result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ], =]
[result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ], =]
[result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ], =]
[;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ], =, result, []
[i, ], =, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], *]
[=, result, [, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], *, 2.0, ;]
[[, 0, ], *, 2.0, ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], *, 2.0, ;, splitMult, (]
[], *, 2.0, ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], *, 2.0, ;, splitMult, (, ys, ,]
[2.0, ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], *, 2.0, ;, splitMult, (, ys, ,, ys, ,]
[[, i, ], =, result, [, 1, ], *, 2.0, ;, splitMult, (, ys, ,, ys, ,, as, ), ;]
[], =, result, [, 1, ], *, 2.0, ;, splitMult, (, ys, ,, ys, ,, as, ), ;, splitMult, (]
[result, [, 1, ], *, 2.0, ;, splitMult, (, ys, ,, ys, ,, as, ), ;, splitMult, (, xs, ,]
[1, ], *, 2.0, ;, splitMult, (, ys, ,, ys, ,, as, ), ;, splitMult, (, xs, ,, xs, ,]
[2.0, ;, splitMult, (, ys, ,, ys, ,, as, ), ;, splitMult, (, xs, ,, xs, ,, temps, ), ;]
[2.0, ;, splitMult, (, ys, ,, ys, ,, as, ), ;, splitMult, (, xs, ,, xs, ,, temps, ), ;]
[splitMult, (, ys, ,, ys, ,, as, ), ;, splitMult, (, xs, ,, xs, ,, temps, ), ;, temps, []
[,, ys, ,, as, ), ;, splitMult, (, xs, ,, xs, ,, temps, ), ;, temps, [, 0, ], =]
[ys, ,, as, ), ;, splitMult, (, xs, ,, xs, ,, temps, ), ;, temps, [, 0, ], =, -]
[ys, ,, as, ), ;, splitMult, (, xs, ,, xs, ,, temps, ), ;, temps, [, 0, ], =, -]
[as, ), ;, splitMult, (, xs, ,, xs, ,, temps, ), ;, temps, [, 0, ], =, -, temps, []
[splitMult, (, xs, ,, xs, ,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;]
[splitMult, (, xs, ,, xs, ,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;]
[xs, ,, xs, ,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, []
[,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =]
[temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -]
[temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -]
[;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, []
[0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;]
[=, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (]
[temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, as, ,]
[0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, as, ,, temps, ,]
[temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, as, ,, temps, ,, result, ), ;]
[temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, as, ,, temps, ,, result, ), ;]
[1, ], =, -, temps, [, 1, ], ;, splitAdd, (, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A, []
[-, temps, [, 1, ], ;, splitAdd, (, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =]
[-, temps, [, 1, ], ;, splitAdd, (, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =]
[[, 1, ], ;, splitAdd, (, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, []
[;, splitAdd, (, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[;, splitAdd, (, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[(, as, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, []
[temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =]
[temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =]
[result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, []
[], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, else, {]
[], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, else, {]
[result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, else, {, xs, []
[], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, else, {, xs, [, 0, ], =]
[], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, else, {, xs, [, 0, ], =]
[COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, else, {, xs, [, 0, ], =, SINE_TABLE_A, []
[COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, else, {, xs, [, 0, ], =, SINE_TABLE_A, []
[i, ], =, result, [, 1, ], ;, }, else, {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /]
[result, [, 1, ], ;, }, else, {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;]
[result, [, 1, ], ;, }, else, {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;]
[1, ], ;, }, else, {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, []
[}, else, {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =]
[}, else, {, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =]
[{, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, []
[{, xs, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, []
[[, 0, ], =, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /]
[=, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;]
[=, SINE_TABLE_A, [, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;]
[[, i, /, 2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, []
[2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =]
[2, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =]
[;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, []
[;, xs, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, []
[[, 1, ], =, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /]
[=, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;]
[=, SINE_TABLE_B, [, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;]
[[, i, /, 2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, []
[2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =]
[2, ], ;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =]
[;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, []
[;, ys, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, []
[[, 0, ], =, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /]
[=, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;]
[=, COSINE_TABLE_A, [, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;]
[[, i, /, 2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, []
[2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ], =]
[2, ], ;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ], =]
[;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, []
[;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, []
[;, ys, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, []
[[, 1, ], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, [, i, /]
[], =, COSINE_TABLE_B, [, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, +]
[[, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;]
[[, i, /, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;]
[/, 2, ], ;, as, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, []
[;, as, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, [, 1, ], =]
[;, as, [, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, [, 1, ], =]
[[, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, []
[[, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, []
[[, 0, ], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, []
[], =, SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, [, i, /]
[SINE_TABLE_A, [, i, /, 2, +, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, +]
[/, 2, +, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;]
[/, 2, +, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;]
[+, 1, ], ;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, []
[;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, [, 0, ], =]
[;, as, [, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, [, 0, ], =]
[[, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, []
[[, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, []
[[, 1, ], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, []
[], =, SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /]
[SINE_TABLE_B, [, i, /, 2, +, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +]
[/, 2, +, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;]
[/, 2, +, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;]
[+, 1, ], ;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, []
[;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, [, 1, ], =]
[;, bs, [, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, [, 1, ], =]
[[, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, []
[[, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, []
[[, 0, ], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, []
[], =, COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /]
[COSINE_TABLE_A, [, i, /, 2, +, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, +]
[/, 2, +, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;]
[+, 1, ], ;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;, splitMult, (]
[], ;, bs, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;, splitMult, (, xs, ,]
[bs, [, 1, ], =, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;, splitMult, (, xs, ,, bs, ,]
[], =, COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;, splitMult, (, xs, ,, bs, ,, temps, ), ;]
[COSINE_TABLE_B, [, i, /, 2, +, 1, ], ;, splitMult, (, xs, ,, bs, ,, temps, ), ;, splitMult, (]
[i, /, 2, +, 1, ], ;, splitMult, (, xs, ,, bs, ,, temps, ), ;, splitMult, (, ys, ,]
[2, +, 1, ], ;, splitMult, (, xs, ,, bs, ,, temps, ), ;, splitMult, (, ys, ,, as, ,]
[], ;, splitMult, (, xs, ,, bs, ,, temps, ), ;, splitMult, (, ys, ,, as, ,, result, ), ;]
[splitMult, (, xs, ,, bs, ,, temps, ), ;, splitMult, (, ys, ,, as, ,, result, ), ;, splitAdd, (]
[xs, ,, bs, ,, temps, ), ;, splitMult, (, ys, ,, as, ,, result, ), ;, splitAdd, (, result, ,]
[bs, ,, temps, ), ;, splitMult, (, ys, ,, as, ,, result, ), ;, splitAdd, (, result, ,, temps, ,]
[), ;, splitMult, (, ys, ,, as, ,, result, ), ;, splitAdd, (, result, ,, temps, ,, result, ), ;]
[), ;, splitMult, (, ys, ,, as, ,, result, ), ;, splitAdd, (, result, ,, temps, ,, result, ), ;]
[splitMult, (, ys, ,, as, ,, result, ), ;, splitAdd, (, result, ,, temps, ,, result, ), ;, SINE_TABLE_A, []
[,, as, ,, result, ), ;, splitAdd, (, result, ,, temps, ,, result, ), ;, SINE_TABLE_A, [, i, ], =]
[,, as, ,, result, ), ;, splitAdd, (, result, ,, temps, ,, result, ), ;, SINE_TABLE_A, [, i, ], =]
[,, result, ), ;, splitAdd, (, result, ,, temps, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, []
[;, splitAdd, (, result, ,, temps, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[;, splitAdd, (, result, ,, temps, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[(, result, ,, temps, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, []
[temps, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =]
[temps, ,, result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =]
[result, ), ;, SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, []
[SINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;]
[i, ], =, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, splitMult, (]
[=, result, [, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, splitMult, (, ys, ,]
[[, 0, ], ;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, splitMult, (, ys, ,, bs, ,]
[;, SINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, splitMult, (, ys, ,, bs, ,, result, ), ;]
[[, i, ], =, result, [, 1, ], ;, splitMult, (, ys, ,, bs, ,, result, ), ;, splitMult, (]
[], =, result, [, 1, ], ;, splitMult, (, ys, ,, bs, ,, result, ), ;, splitMult, (, xs, ,]
[result, [, 1, ], ;, splitMult, (, ys, ,, bs, ,, result, ), ;, splitMult, (, xs, ,, as, ,]
[], ;, splitMult, (, ys, ,, bs, ,, result, ), ;, splitMult, (, xs, ,, as, ,, temps, ), ;]
[], ;, splitMult, (, ys, ,, bs, ,, result, ), ;, splitMult, (, xs, ,, as, ,, temps, ), ;]
[splitMult, (, ys, ,, bs, ,, result, ), ;, splitMult, (, xs, ,, as, ,, temps, ), ;, temps, []
[,, bs, ,, result, ), ;, splitMult, (, xs, ,, as, ,, temps, ), ;, temps, [, 0, ], =]
[bs, ,, result, ), ;, splitMult, (, xs, ,, as, ,, temps, ), ;, temps, [, 0, ], =, -]
[bs, ,, result, ), ;, splitMult, (, xs, ,, as, ,, temps, ), ;, temps, [, 0, ], =, -]
[result, ), ;, splitMult, (, xs, ,, as, ,, temps, ), ;, temps, [, 0, ], =, -, temps, []
[splitMult, (, xs, ,, as, ,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;]
[splitMult, (, xs, ,, as, ,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;]
[xs, ,, as, ,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, []
[,, temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =]
[temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -]
[temps, ), ;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -]
[;, temps, [, 0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, []
[0, ], =, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;]
[=, -, temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (]
[temps, [, 0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, result, ,]
[0, ], ;, temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, result, ,, temps, ,]
[temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, result, ,, temps, ,, result, ), ;]
[temps, [, 1, ], =, -, temps, [, 1, ], ;, splitAdd, (, result, ,, temps, ,, result, ), ;]
[1, ], =, -, temps, [, 1, ], ;, splitAdd, (, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A, []
[-, temps, [, 1, ], ;, splitAdd, (, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =]
[-, temps, [, 1, ], ;, splitAdd, (, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =]
[[, 1, ], ;, splitAdd, (, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, []
[;, splitAdd, (, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[;, splitAdd, (, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;]
[(, result, ,, temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, []
[temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =]
[temps, ,, result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =]
[result, ), ;, COSINE_TABLE_A, [, i, ], =, result, [, 0, ], ;, COSINE_TABLE_B, [, i, ], =, result, []
[0, ], ;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, }, for, (, int, i, =]
[;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, }, for, (, int, i, =, 0, ;]
[;, COSINE_TABLE_B, [, i, ], =, result, [, 1, ], ;, }, }, for, (, int, i, =, 0, ;]
[[, i, ], =, result, [, 1, ], ;, }, }, for, (, int, i, =, 0, ;, i, <]
[], =, result, [, 1, ], ;, }, }, for, (, int, i, =, 0, ;, i, <, SINE_TABLE_LEN, ;]
[], =, result, [, 1, ], ;, }, }, for, (, int, i, =, 0, ;, i, <, SINE_TABLE_LEN, ;]
[for, (, int, i, =, 0, ;, i, <, SINE_TABLE_LEN, ;, i, ++, ), {, double, xs, [, ], =]
[i, =, 0, ;, i, <, SINE_TABLE_LEN, ;, i, ++, ), {, double, xs, [, ], =, new, double, []
[i, ++, ), {, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys, [, ], =]
[{, double, xs, [, ], =, new, double, [, 2, ], ;, double, ys, [, ], =, new, double, []
[[, 2, ], ;, double, ys, [, ], =, new, double, [, 2, ], ;, double, as, [, ], =]
[;, double, ys, [, ], =, new, double, [, 2, ], ;, double, as, [, ], =, new, double, []
[[, ], =, new, double, [, 2, ], ;, double, as, [, ], =, new, double, [, 2, ], ;]
[[, ], =, new, double, [, 2, ], ;, double, as, [, ], =, new, double, [, 2, ], ;]
[=, new, double, [, 2, ], ;, double, as, [, ], =, new, double, [, 2, ], ;, as, []
[[, 2, ], ;, double, as, [, ], =, new, double, [, 2, ], ;, as, [, 0, ], =]
[[, 2, ], ;, double, as, [, ], =, new, double, [, 2, ], ;, as, [, 0, ], =]
[], ;, double, as, [, ], =, new, double, [, 2, ], ;, as, [, 0, ], =, COSINE_TABLE_A, []
[as, [, ], =, new, double, [, 2, ], ;, as, [, 0, ], =, COSINE_TABLE_A, [, i, ], ;]
[as, [, ], =, new, double, [, 2, ], ;, as, [, 0, ], =, COSINE_TABLE_A, [, i, ], ;]
[], =, new, double, [, 2, ], ;, as, [, 0, ], =, COSINE_TABLE_A, [, i, ], ;, as, []
[double, [, 2, ], ;, as, [, 0, ], =, COSINE_TABLE_A, [, i, ], ;, as, [, 1, ], =]
[double, [, 2, ], ;, as, [, 0, ], =, COSINE_TABLE_A, [, i, ], ;, as, [, 1, ], =]
[2, ], ;, as, [, 0, ], =, COSINE_TABLE_A, [, i, ], ;, as, [, 1, ], =, COSINE_TABLE_B, []
[as, [, 0, ], =, COSINE_TABLE_A, [, i, ], ;, as, [, 1, ], =, COSINE_TABLE_B, [, i, ], ;]
[0, ], =, COSINE_TABLE_A, [, i, ], ;, as, [, 1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (]
[=, COSINE_TABLE_A, [, i, ], ;, as, [, 1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,]
[i, ], ;, as, [, 1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,, ys, ), ;]
[i, ], ;, as, [, 1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,, ys, ), ;]
[;, as, [, 1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,, ys, ), ;, xs, []
[1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,, ys, ), ;, xs, [, 0, ], =]
[1, ], =, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,, ys, ), ;, xs, [, 0, ], =]
[=, COSINE_TABLE_B, [, i, ], ;, splitReciprocal, (, as, ,, ys, ), ;, xs, [, 0, ], =, SINE_TABLE_A, []
[i, ], ;, splitReciprocal, (, as, ,, ys, ), ;, xs, [, 0, ], =, SINE_TABLE_A, [, i, ], ;]
[i, ], ;, splitReciprocal, (, as, ,, ys, ), ;, xs, [, 0, ], =, SINE_TABLE_A, [, i, ], ;]
[;, splitReciprocal, (, as, ,, ys, ), ;, xs, [, 0, ], =, SINE_TABLE_A, [, i, ], ;, xs, []
[as, ,, ys, ), ;, xs, [, 0, ], =, SINE_TABLE_A, [, i, ], ;, xs, [, 1, ], =]
[as, ,, ys, ), ;, xs, [, 0, ], =, SINE_TABLE_A, [, i, ], ;, xs, [, 1, ], =]
[ys, ), ;, xs, [, 0, ], =, SINE_TABLE_A, [, i, ], ;, xs, [, 1, ], =, SINE_TABLE_B, []
[xs, [, 0, ], =, SINE_TABLE_A, [, i, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, ], ;]
[0, ], =, SINE_TABLE_A, [, i, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, ], ;, splitMult, (]
[=, SINE_TABLE_A, [, i, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,]
[[, i, ], ;, xs, [, 1, ], =, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,, ys, ,]
[;, xs, [, 1, ], =, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,, ys, ,, as, ), ;]
[;, xs, [, 1, ], =, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,, ys, ,, as, ), ;]
[[, 1, ], =, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,, ys, ,, as, ), ;, TANGENT_TABLE_A, []
[=, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,, ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ], =]
[=, SINE_TABLE_B, [, i, ], ;, splitMult, (, xs, ,, ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ], =]
[[, i, ], ;, splitMult, (, xs, ,, ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ], =, as, []
[;, splitMult, (, xs, ,, ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ], =, as, [, 0, ], ;]
[;, splitMult, (, xs, ,, ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ], =, as, [, 0, ], ;]
[(, xs, ,, ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ], =, as, [, 0, ], ;, TANGENT_TABLE_B, []
[ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ], =, as, [, 0, ], ;, TANGENT_TABLE_B, [, i, ], =]
[ys, ,, as, ), ;, TANGENT_TABLE_A, [, i, ], =, as, [, 0, ], ;, TANGENT_TABLE_B, [, i, ], =]
[as, ), ;, TANGENT_TABLE_A, [, i, ], =, as, [, 0, ], ;, TANGENT_TABLE_B, [, i, ], =, as, []
[double, slowCos, (, final, double, x, ,, final, double, result, [, ], ), {, final, double, xs, [, ], =]
[final, double, x, ,, final, double, result, [, ], ), {, final, double, xs, [, ], =, new, double, []
[), {, final, double, xs, [, ], =, new, double, [, 2, ], ;, final, double, ys, [, ], =]
[double, xs, [, ], =, new, double, [, 2, ], ;, final, double, ys, [, ], =, new, double, []
[], ;, final, double, ys, [, ], =, new, double, [, 2, ], ;, final, double, facts, [, ], =]
[double, ys, [, ], =, new, double, [, 2, ], ;, final, double, facts, [, ], =, new, double, []
[], ;, final, double, facts, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =]
[double, facts, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =, new, double, []
[], =, new, double, [, 2, ], ;, final, double, as, [, ], =, new, double, [, 2, ], ;]
[new, double, [, 2, ], ;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (]
[[, 2, ], ;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,]
[;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;]
[;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;]
[double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;, ys, []
[], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =]
[], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =]
[new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =, ys, []
[2, ], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =]
[xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =]
[xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =]
[xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =]
[[, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -]
[], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;]
[], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;]
[ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=]
[1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;]
[1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;]
[;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {]
[(, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (]
[i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,]
[FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,]
[-, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;]
[-, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;]
[;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, []
[0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =]
[0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =]
[i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, []
[{, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[{, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[(, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, []
[ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, []
[0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (]
[0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (]
[as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (, i, &]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (, i, &, 1, ), !=]
[=, as, [, 1, ], ;, if, (, (, i, &, 1, ), !=, 0, ), {, continue, ;, }]
[[, 1, ], ;, if, (, (, i, &, 1, ), !=, 0, ), {, continue, ;, }, split, (]
[[, 1, ], ;, if, (, (, i, &, 1, ), !=, 0, ), {, continue, ;, }, split, (]
[], ;, if, (, (, i, &, 1, ), !=, 0, ), {, continue, ;, }, split, (, FACT, []
[(, (, i, &, 1, ), !=, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,]
[&, 1, ), !=, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;]
[), !=, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (]
[0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,]
[}, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (]
[}, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (]
[split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (]
[split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (]
[FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &]
[], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=]
[), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {]
[), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {]
[splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, []
[,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =]
[facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -]
[facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -]
[;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts, []
[(, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;]
[(, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;]
[&, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, []
[!=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =]
[0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -]
[0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -]
[{, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts, []
[], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }]
[-, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (]
[[, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,]
[], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,]
[[, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;]
[[, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;]
[], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, []
[facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =]
[facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =]
[1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, []
[}, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[}, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[(, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, []
[facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, []
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (]
[as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {]
[ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, []
[], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =]
[], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =]
[as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, []
[], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;]
[], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;]
[}, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, []
[result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =]
[result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =]
[null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, []
[0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return]
[0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return]
[0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return]
[=, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, []
[0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +]
[0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +]
[;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, []
[double, slowSin, (, final, double, x, ,, final, double, result, [, ], ), {, final, double, xs, [, ], =]
[final, double, x, ,, final, double, result, [, ], ), {, final, double, xs, [, ], =, new, double, []
[), {, final, double, xs, [, ], =, new, double, [, 2, ], ;, final, double, ys, [, ], =]
[double, xs, [, ], =, new, double, [, 2, ], ;, final, double, ys, [, ], =, new, double, []
[], ;, final, double, ys, [, ], =, new, double, [, 2, ], ;, final, double, facts, [, ], =]
[double, ys, [, ], =, new, double, [, 2, ], ;, final, double, facts, [, ], =, new, double, []
[], ;, final, double, facts, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =]
[double, facts, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =, new, double, []
[], =, new, double, [, 2, ], ;, final, double, as, [, ], =, new, double, [, 2, ], ;]
[new, double, [, 2, ], ;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (]
[[, 2, ], ;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,]
[;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;]
[;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;]
[double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;, ys, []
[], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =]
[], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =]
[new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =, ys, []
[2, ], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =]
[xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =]
[xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =]
[xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =]
[[, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -]
[], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;]
[], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;]
[ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=]
[1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;]
[1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;]
[;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {]
[(, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (]
[i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,]
[FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,]
[-, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;]
[-, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;]
[;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, []
[0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =]
[0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =]
[i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, []
[{, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[{, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[(, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, []
[ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, []
[0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (]
[0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (]
[as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (, i, &]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, if, (, (, i, &, 1, ), ==]
[=, as, [, 1, ], ;, if, (, (, i, &, 1, ), ==, 0, ), {, continue, ;, }]
[[, 1, ], ;, if, (, (, i, &, 1, ), ==, 0, ), {, continue, ;, }, split, (]
[[, 1, ], ;, if, (, (, i, &, 1, ), ==, 0, ), {, continue, ;, }, split, (]
[], ;, if, (, (, i, &, 1, ), ==, 0, ), {, continue, ;, }, split, (, FACT, []
[(, (, i, &, 1, ), ==, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,]
[&, 1, ), ==, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;]
[), ==, 0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (]
[0, ), {, continue, ;, }, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,]
[}, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (]
[}, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (]
[split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (]
[split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (]
[FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &]
[], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=]
[), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {]
[), ;, splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {]
[splitReciprocal, (, as, ,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, []
[,, facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =]
[facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -]
[facts, ), ;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -]
[;, if, (, (, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts, []
[(, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;]
[(, i, &, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;]
[&, 2, ), !=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, []
[!=, 0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =]
[0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -]
[0, ), {, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -]
[{, facts, [, 0, ], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts, []
[], =, -, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }]
[-, facts, [, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (]
[[, 0, ], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,]
[], ;, facts, [, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,]
[[, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;]
[[, 1, ], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;]
[], =, -, facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, []
[facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =]
[facts, [, 1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =]
[1, ], ;, }, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, []
[}, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[}, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[(, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, []
[facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, []
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (]
[as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {]
[ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, []
[], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =]
[], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =]
[as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, []
[], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;]
[], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;]
[}, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, []
[result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =]
[result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =]
[null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, []
[0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return]
[0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return]
[0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return]
[=, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, []
[0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +]
[0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +]
[;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, []
[double, slowexp, (, final, double, x, ,, final, double, result, [, ], ), {, final, double, xs, [, ], =]
[final, double, x, ,, final, double, result, [, ], ), {, final, double, xs, [, ], =, new, double, []
[), {, final, double, xs, [, ], =, new, double, [, 2, ], ;, final, double, ys, [, ], =]
[double, xs, [, ], =, new, double, [, 2, ], ;, final, double, ys, [, ], =, new, double, []
[], ;, final, double, ys, [, ], =, new, double, [, 2, ], ;, final, double, facts, [, ], =]
[double, ys, [, ], =, new, double, [, 2, ], ;, final, double, facts, [, ], =, new, double, []
[], ;, final, double, facts, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =]
[double, facts, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =, new, double, []
[], =, new, double, [, 2, ], ;, final, double, as, [, ], =, new, double, [, 2, ], ;]
[new, double, [, 2, ], ;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (]
[[, 2, ], ;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,]
[;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;]
[;, final, double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;]
[double, as, [, ], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;, ys, []
[], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =]
[], =, new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =]
[new, double, [, 2, ], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =, ys, []
[2, ], ;, split, (, x, ,, xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =]
[xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =]
[xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =]
[xs, ), ;, ys, [, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =]
[[, 0, ], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -]
[], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;]
[], =, ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;]
[ys, [, 1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=]
[1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;]
[1, ], =, 0.0, ;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;]
[;, for, (, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {]
[(, int, i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (]
[i, =, FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,]
[FACT, ., length, -, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,]
[-, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;]
[-, 1, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;]
[;, i, >=, 0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, []
[0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =]
[0, ;, i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =]
[i, --, ), {, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, []
[{, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[{, splitMult, (, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[(, xs, ,, ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, []
[ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[ys, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, []
[ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;]
[0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, split, (]
[0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, split, (]
[=, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, split, (, FACT, []
[0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, split, (, FACT, [, i, ], ,]
[ys, [, 1, ], =, as, [, 1, ], ;, split, (, FACT, [, i, ], ,, as, ), ;]
[1, ], =, as, [, 1, ], ;, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (]
[=, as, [, 1, ], ;, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,]
[1, ], ;, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;]
[;, split, (, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, splitAdd, (]
[(, FACT, [, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, splitAdd, (, ys, ,]
[[, i, ], ,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, splitAdd, (, ys, ,, facts, ,]
[,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, splitAdd, (, ys, ,, facts, ,, as, ), ;]
[,, as, ), ;, splitReciprocal, (, as, ,, facts, ), ;, splitAdd, (, ys, ,, facts, ,, as, ), ;]
[), ;, splitReciprocal, (, as, ,, facts, ), ;, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, []
[(, as, ,, facts, ), ;, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =]
[(, as, ,, facts, ), ;, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =]
[,, facts, ), ;, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, []
[;, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[;, splitAdd, (, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[(, ys, ,, facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, []
[facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[facts, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, []
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (]
[as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {]
[], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {]
[ys, [, 1, ], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, []
[], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =]
[], =, as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =]
[as, [, 1, ], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, []
[], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;]
[], ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;]
[}, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, []
[result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =]
[result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =]
[null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, []
[0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return]
[0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return]
[0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return]
[=, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, []
[0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +]
[0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +]
[;, result, [, 1, ], =, ys, [, 1, ], ;, }, return, ys, [, 0, ], +, ys, []
[;, }, private, static, void, split, (, final, double, d, ,, final, double, split, [, ], ), {, if, (]
[;, }, private, static, void, split, (, final, double, d, ,, final, double, split, [, ], ), {, if, (]
[;, }, private, static, void, split, (, final, double, d, ,, final, double, split, [, ], ), {, if, (]
[private, static, void, split, (, final, double, d, ,, final, double, split, [, ], ), {, if, (, d, <]
[void, split, (, final, double, d, ,, final, double, split, [, ], ), {, if, (, d, <, 8e298, &&]
[void, split, (, final, double, d, ,, final, double, split, [, ], ), {, if, (, d, <, 8e298, &&]
[(, final, double, d, ,, final, double, split, [, ], ), {, if, (, d, <, 8e298, &&, d, >]
[final, double, d, ,, final, double, split, [, ], ), {, if, (, d, <, 8e298, &&, d, >, -]
[[, ], ), {, if, (, d, <, 8e298, &&, d, >, -, 8e298, ), {, final, double, a, =]
[[, ], ), {, if, (, d, <, 8e298, &&, d, >, -, 8e298, ), {, final, double, a, =]
[), {, if, (, d, <, 8e298, &&, d, >, -, 8e298, ), {, final, double, a, =, d, *]
[if, (, d, <, 8e298, &&, d, >, -, 8e298, ), {, final, double, a, =, d, *, HEX_40000000, ;]
[if, (, d, <, 8e298, &&, d, >, -, 8e298, ), {, final, double, a, =, d, *, HEX_40000000, ;]
[d, <, 8e298, &&, d, >, -, 8e298, ), {, final, double, a, =, d, *, HEX_40000000, ;, split, []
[&&, d, >, -, 8e298, ), {, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =]
[&&, d, >, -, 8e298, ), {, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =]
[d, >, -, 8e298, ), {, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =, (]
[d, >, -, 8e298, ), {, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =, (]
[-, 8e298, ), {, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =, (, d, +]
[{, final, double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =, (, d, +, a, ), -]
[double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =, (, d, +, a, ), -, a, ;]
[double, a, =, d, *, HEX_40000000, ;, split, [, 0, ], =, (, d, +, a, ), -, a, ;]
[=, d, *, HEX_40000000, ;, split, [, 0, ], =, (, d, +, a, ), -, a, ;, split, []
[HEX_40000000, ;, split, [, 0, ], =, (, d, +, a, ), -, a, ;, split, [, 1, ], =]
[HEX_40000000, ;, split, [, 0, ], =, (, d, +, a, ), -, a, ;, split, [, 1, ], =]
[split, [, 0, ], =, (, d, +, a, ), -, a, ;, split, [, 1, ], =, d, -]
[split, [, 0, ], =, (, d, +, a, ), -, a, ;, split, [, 1, ], =, d, -]
[0, ], =, (, d, +, a, ), -, a, ;, split, [, 1, ], =, d, -, split, []
[;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, else, {, final, double, a, =]
[;, split, [, 1, ], =, d, -, split, [, 0, ], ;, }, else, {, final, double, a, =]
[[, 1, ], =, d, -, split, [, 0, ], ;, }, else, {, final, double, a, =, d, *]
[], =, d, -, split, [, 0, ], ;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;]
[], =, d, -, split, [, 0, ], ;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;]
[d, -, split, [, 0, ], ;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split, []
[[, 0, ], ;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =]
[[, 0, ], ;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =]
[0, ], ;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =, (]
[0, ], ;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =, (]
[0, ], ;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =, (]
[;, }, else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =, (, d, +]
[else, {, final, double, a, =, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =, (, d, +, a, -]
[double, a, =, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =, (, d, +, a, -, d, ), *]
[=, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =, (, d, +, a, -, d, ), *, HEX_40000000, ;]
[=, d, *, 9.31322574615478515625E-10, ;, split, [, 0, ], =, (, d, +, a, -, d, ), *, HEX_40000000, ;]
[*, 9.31322574615478515625E-10, ;, split, [, 0, ], =, (, d, +, a, -, d, ), *, HEX_40000000, ;, split, []
[split, [, 0, ], =, (, d, +, a, -, d, ), *, HEX_40000000, ;, split, [, 1, ], =]
[split, [, 0, ], =, (, d, +, a, -, d, ), *, HEX_40000000, ;, split, [, 1, ], =]
[0, ], =, (, d, +, a, -, d, ), *, HEX_40000000, ;, split, [, 1, ], =, d, -]
[0, ], =, (, d, +, a, -, d, ), *, HEX_40000000, ;, split, [, 1, ], =, d, -]
[=, (, d, +, a, -, d, ), *, HEX_40000000, ;, split, [, 1, ], =, d, -, split, []
[], ;, }, }, private, static, void, resplit, (, final, double, a, [, ], ), {, final, double, c, =]
[], ;, }, }, private, static, void, resplit, (, final, double, a, [, ], ), {, final, double, c, =]
[], ;, }, }, private, static, void, resplit, (, final, double, a, [, ], ), {, final, double, c, =]
[}, }, private, static, void, resplit, (, final, double, a, [, ], ), {, final, double, c, =, a, []
[static, void, resplit, (, final, double, a, [, ], ), {, final, double, c, =, a, [, 0, ], +]
[static, void, resplit, (, final, double, a, [, ], ), {, final, double, c, =, a, [, 0, ], +]
[resplit, (, final, double, a, [, ], ), {, final, double, c, =, a, [, 0, ], +, a, []
[), {, final, double, c, =, a, [, 0, ], +, a, [, 1, ], ;, final, double, d, =]
[{, final, double, c, =, a, [, 0, ], +, a, [, 1, ], ;, final, double, d, =, -]
[final, double, c, =, a, [, 0, ], +, a, [, 1, ], ;, final, double, d, =, -, (]
[final, double, c, =, a, [, 0, ], +, a, [, 1, ], ;, final, double, d, =, -, (]
[final, double, c, =, a, [, 0, ], +, a, [, 1, ], ;, final, double, d, =, -, (]
[c, =, a, [, 0, ], +, a, [, 1, ], ;, final, double, d, =, -, (, c, -]
[c, =, a, [, 0, ], +, a, [, 1, ], ;, final, double, d, =, -, (, c, -]
[a, [, 0, ], +, a, [, 1, ], ;, final, double, d, =, -, (, c, -, a, []
[], +, a, [, 1, ], ;, final, double, d, =, -, (, c, -, a, [, 0, ], -]
[], +, a, [, 1, ], ;, final, double, d, =, -, (, c, -, a, [, 0, ], -]
[a, [, 1, ], ;, final, double, d, =, -, (, c, -, a, [, 0, ], -, a, []
[double, d, =, -, (, c, -, a, [, 0, ], -, a, [, 1, ], ), ;, if, (]
[double, d, =, -, (, c, -, a, [, 0, ], -, a, [, 1, ], ), ;, if, (]
[double, d, =, -, (, c, -, a, [, 0, ], -, a, [, 1, ], ), ;, if, (]
[=, -, (, c, -, a, [, 0, ], -, a, [, 1, ], ), ;, if, (, c, <]
[(, c, -, a, [, 0, ], -, a, [, 1, ], ), ;, if, (, c, <, 8e298, &&]
[(, c, -, a, [, 0, ], -, a, [, 1, ], ), ;, if, (, c, <, 8e298, &&]
[-, a, [, 0, ], -, a, [, 1, ], ), ;, if, (, c, <, 8e298, &&, c, >]
[a, [, 0, ], -, a, [, 1, ], ), ;, if, (, c, <, 8e298, &&, c, >, -]
[[, 1, ], ), ;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {, double, z, =]
[[, 1, ], ), ;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {, double, z, =]
[], ), ;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {, double, z, =, c, *]
[;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;]
[;, if, (, c, <, 8e298, &&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;]
[(, c, <, 8e298, &&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;, a, []
[8e298, &&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =]
[8e298, &&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =]
[&&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =, (]
[&&, c, >, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =, (]
[>, -, 8e298, ), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =, (, c, +]
[), {, double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =, (, c, +, z, ), -]
[double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =, (, c, +, z, ), -, z, ;]
[double, z, =, c, *, HEX_40000000, ;, a, [, 0, ], =, (, c, +, z, ), -, z, ;]
[=, c, *, HEX_40000000, ;, a, [, 0, ], =, (, c, +, z, ), -, z, ;, a, []
[HEX_40000000, ;, a, [, 0, ], =, (, c, +, z, ), -, z, ;, a, [, 1, ], =]
[HEX_40000000, ;, a, [, 0, ], =, (, c, +, z, ), -, z, ;, a, [, 1, ], =]
[HEX_40000000, ;, a, [, 0, ], =, (, c, +, z, ), -, z, ;, a, [, 1, ], =]
[a, [, 0, ], =, (, c, +, z, ), -, z, ;, a, [, 1, ], =, c, -]
[a, [, 0, ], =, (, c, +, z, ), -, z, ;, a, [, 1, ], =, c, -]
[0, ], =, (, c, +, z, ), -, z, ;, a, [, 1, ], =, c, -, a, []
[(, c, +, z, ), -, z, ;, a, [, 1, ], =, c, -, a, [, 0, ], +]
[a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, else, {, double, z, =]
[a, [, 1, ], =, c, -, a, [, 0, ], +, d, ;, }, else, {, double, z, =]
[1, ], =, c, -, a, [, 0, ], +, d, ;, }, else, {, double, z, =, c, *]
[=, c, -, a, [, 0, ], +, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;]
[=, c, -, a, [, 0, ], +, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;]
[-, a, [, 0, ], +, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, []
[0, ], +, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =]
[0, ], +, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =]
[], +, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (]
[], +, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (]
[], +, d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (]
[d, ;, }, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (, c, +]
[}, else, {, double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (, c, +, z, -]
[double, z, =, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (, c, +, z, -, c, ), *]
[=, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (, c, +, z, -, c, ), *, HEX_40000000, ;]
[=, c, *, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (, c, +, z, -, c, ), *, HEX_40000000, ;]
[*, 9.31322574615478515625E-10, ;, a, [, 0, ], =, (, c, +, z, -, c, ), *, HEX_40000000, ;, a, []
[a, [, 0, ], =, (, c, +, z, -, c, ), *, HEX_40000000, ;, a, [, 1, ], =]
[a, [, 0, ], =, (, c, +, z, -, c, ), *, HEX_40000000, ;, a, [, 1, ], =]
[a, [, 0, ], =, (, c, +, z, -, c, ), *, HEX_40000000, ;, a, [, 1, ], =]
[0, ], =, (, c, +, z, -, c, ), *, HEX_40000000, ;, a, [, 1, ], =, c, -]
[0, ], =, (, c, +, z, -, c, ), *, HEX_40000000, ;, a, [, 1, ], =, c, -]
[=, (, c, +, z, -, c, ), *, HEX_40000000, ;, a, [, 1, ], =, c, -, a, []
[+, z, -, c, ), *, HEX_40000000, ;, a, [, 1, ], =, c, -, a, [, 0, ], +]
[static, void, splitMult, (, double, a, [, ], ,, double, b, [, ], ,, double, ans, [, ], ), {]
[static, void, splitMult, (, double, a, [, ], ,, double, b, [, ], ,, double, ans, [, ], ), {]
[splitMult, (, double, a, [, ], ,, double, b, [, ], ,, double, ans, [, ], ), {, ans, []
[a, [, ], ,, double, b, [, ], ,, double, ans, [, ], ), {, ans, [, 0, ], =]
[a, [, ], ,, double, b, [, ], ,, double, ans, [, ], ), {, ans, [, 0, ], =]
[a, [, ], ,, double, b, [, ], ,, double, ans, [, ], ), {, ans, [, 0, ], =]
[], ,, double, b, [, ], ,, double, ans, [, ], ), {, ans, [, 0, ], =, a, []
[b, [, ], ,, double, ans, [, ], ), {, ans, [, 0, ], =, a, [, 0, ], *]
[b, [, ], ,, double, ans, [, ], ), {, ans, [, 0, ], =, a, [, 0, ], *]
[], ,, double, ans, [, ], ), {, ans, [, 0, ], =, a, [, 0, ], *, b, []
[ans, [, ], ), {, ans, [, 0, ], =, a, [, 0, ], *, b, [, 0, ], ;]
[ans, [, ], ), {, ans, [, 0, ], =, a, [, 0, ], *, b, [, 0, ], ;]
[], ), {, ans, [, 0, ], =, a, [, 0, ], *, b, [, 0, ], ;, ans, []
[ans, [, 0, ], =, a, [, 0, ], *, b, [, 0, ], ;, ans, [, 1, ], =]
[ans, [, 0, ], =, a, [, 0, ], *, b, [, 0, ], ;, ans, [, 1, ], =]
[ans, [, 0, ], =, a, [, 0, ], *, b, [, 0, ], ;, ans, [, 1, ], =]
[ans, [, 0, ], =, a, [, 0, ], *, b, [, 0, ], ;, ans, [, 1, ], =]
[ans, [, 0, ], =, a, [, 0, ], *, b, [, 0, ], ;, ans, [, 1, ], =]
[0, ], =, a, [, 0, ], *, b, [, 0, ], ;, ans, [, 1, ], =, a, []
[a, [, 0, ], *, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 0, ], *]
[a, [, 0, ], *, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 0, ], *]
[0, ], *, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 0, ], *, b, []
[b, [, 0, ], ;, ans, [, 1, ], =, a, [, 0, ], *, b, [, 1, ], +]
[b, [, 0, ], ;, ans, [, 1, ], =, a, [, 0, ], *, b, [, 1, ], +]
[b, [, 0, ], ;, ans, [, 1, ], =, a, [, 0, ], *, b, [, 1, ], +]
[0, ], ;, ans, [, 1, ], =, a, [, 0, ], *, b, [, 1, ], +, a, []
[ans, [, 1, ], =, a, [, 0, ], *, b, [, 1, ], +, a, [, 1, ], *]
[ans, [, 1, ], =, a, [, 0, ], *, b, [, 1, ], +, a, [, 1, ], *]
[1, ], =, a, [, 0, ], *, b, [, 1, ], +, a, [, 1, ], *, b, []
[a, [, 0, ], *, b, [, 1, ], +, a, [, 1, ], *, b, [, 0, ], +]
[a, [, 0, ], *, b, [, 1, ], +, a, [, 1, ], *, b, [, 0, ], +]
[a, [, 0, ], *, b, [, 1, ], +, a, [, 1, ], *, b, [, 0, ], +]
[0, ], *, b, [, 1, ], +, a, [, 1, ], *, b, [, 0, ], +, a, []
[b, [, 1, ], +, a, [, 1, ], *, b, [, 0, ], +, a, [, 1, ], *]
[b, [, 1, ], +, a, [, 1, ], *, b, [, 0, ], +, a, [, 1, ], *]
[1, ], +, a, [, 1, ], *, b, [, 0, ], +, a, [, 1, ], *, b, []
[a, [, 1, ], *, b, [, 0, ], +, a, [, 1, ], *, b, [, 1, ], ;]
[1, ], *, b, [, 0, ], +, a, [, 1, ], *, b, [, 1, ], ;, resplit, (]
[(, final, double, a, [, ], ,, final, double, b, [, ], ,, final, double, ans, [, ], ), {]
[(, final, double, a, [, ], ,, final, double, b, [, ], ,, final, double, ans, [, ], ), {]
[double, a, [, ], ,, final, double, b, [, ], ,, final, double, ans, [, ], ), {, ans, []
[], ,, final, double, b, [, ], ,, final, double, ans, [, ], ), {, ans, [, 0, ], =]
[], ,, final, double, b, [, ], ,, final, double, ans, [, ], ), {, ans, [, 0, ], =]
[], ,, final, double, b, [, ], ,, final, double, ans, [, ], ), {, ans, [, 0, ], =]
[final, double, b, [, ], ,, final, double, ans, [, ], ), {, ans, [, 0, ], =, a, []
[[, ], ,, final, double, ans, [, ], ), {, ans, [, 0, ], =, a, [, 0, ], +]
[[, ], ,, final, double, ans, [, ], ), {, ans, [, 0, ], =, a, [, 0, ], +]
[,, final, double, ans, [, ], ), {, ans, [, 0, ], =, a, [, 0, ], +, b, []
[ans, [, ], ), {, ans, [, 0, ], =, a, [, 0, ], +, b, [, 0, ], ;]
[ans, [, ], ), {, ans, [, 0, ], =, a, [, 0, ], +, b, [, 0, ], ;]
[], ), {, ans, [, 0, ], =, a, [, 0, ], +, b, [, 0, ], ;, ans, []
[ans, [, 0, ], =, a, [, 0, ], +, b, [, 0, ], ;, ans, [, 1, ], =]
[ans, [, 0, ], =, a, [, 0, ], +, b, [, 0, ], ;, ans, [, 1, ], =]
[ans, [, 0, ], =, a, [, 0, ], +, b, [, 0, ], ;, ans, [, 1, ], =]
[0, ], =, a, [, 0, ], +, b, [, 0, ], ;, ans, [, 1, ], =, a, []
[a, [, 0, ], +, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 1, ], +]
[a, [, 0, ], +, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 1, ], +]
[0, ], +, b, [, 0, ], ;, ans, [, 1, ], =, a, [, 1, ], +, b, []
[b, [, 0, ], ;, ans, [, 1, ], =, a, [, 1, ], +, b, [, 1, ], ;]
[0, ], ;, ans, [, 1, ], =, a, [, 1, ], +, b, [, 1, ], ;, resplit, (]
[void, splitReciprocal, (, final, double, in, [, ], ,, final, double, result, [, ], ), {, final, double, b, =]
[void, splitReciprocal, (, final, double, in, [, ], ,, final, double, result, [, ], ), {, final, double, b, =]
[(, final, double, in, [, ], ,, final, double, result, [, ], ), {, final, double, b, =, 1.0, /]
[,, final, double, result, [, ], ), {, final, double, b, =, 1.0, /, 4194304.0, ;, final, double, a, =]
[,, final, double, result, [, ], ), {, final, double, b, =, 1.0, /, 4194304.0, ;, final, double, a, =]
[double, result, [, ], ), {, final, double, b, =, 1.0, /, 4194304.0, ;, final, double, a, =, 1.0, -]
[), {, final, double, b, =, 1.0, /, 4194304.0, ;, final, double, a, =, 1.0, -, b, ;, if, (]
[), {, final, double, b, =, 1.0, /, 4194304.0, ;, final, double, a, =, 1.0, -, b, ;, if, (]
[), {, final, double, b, =, 1.0, /, 4194304.0, ;, final, double, a, =, 1.0, -, b, ;, if, (]
[final, double, b, =, 1.0, /, 4194304.0, ;, final, double, a, =, 1.0, -, b, ;, if, (, in, []
[=, 1.0, /, 4194304.0, ;, final, double, a, =, 1.0, -, b, ;, if, (, in, [, 0, ], ==]
[4194304.0, ;, final, double, a, =, 1.0, -, b, ;, if, (, in, [, 0, ], ==, 0.0, ), {]
[4194304.0, ;, final, double, a, =, 1.0, -, b, ;, if, (, in, [, 0, ], ==, 0.0, ), {]
[final, double, a, =, 1.0, -, b, ;, if, (, in, [, 0, ], ==, 0.0, ), {, in, []
[=, 1.0, -, b, ;, if, (, in, [, 0, ], ==, 0.0, ), {, in, [, 0, ], =]
[=, 1.0, -, b, ;, if, (, in, [, 0, ], ==, 0.0, ), {, in, [, 0, ], =]
[-, b, ;, if, (, in, [, 0, ], ==, 0.0, ), {, in, [, 0, ], =, in, []
[if, (, in, [, 0, ], ==, 0.0, ), {, in, [, 0, ], =, in, [, 1, ], ;]
[if, (, in, [, 0, ], ==, 0.0, ), {, in, [, 0, ], =, in, [, 1, ], ;]
[in, [, 0, ], ==, 0.0, ), {, in, [, 0, ], =, in, [, 1, ], ;, in, []
[], ==, 0.0, ), {, in, [, 0, ], =, in, [, 1, ], ;, in, [, 1, ], =]
[), {, in, [, 0, ], =, in, [, 1, ], ;, in, [, 1, ], =, 0.0, ;, }]
[), {, in, [, 0, ], =, in, [, 1, ], ;, in, [, 1, ], =, 0.0, ;, }]
[in, [, 0, ], =, in, [, 1, ], ;, in, [, 1, ], =, 0.0, ;, }, result, []
[], =, in, [, 1, ], ;, in, [, 1, ], =, 0.0, ;, }, result, [, 0, ], =]
[], =, in, [, 1, ], ;, in, [, 1, ], =, 0.0, ;, }, result, [, 0, ], =]
[in, [, 1, ], ;, in, [, 1, ], =, 0.0, ;, }, result, [, 0, ], =, a, /]
[in, [, 1, ], ;, in, [, 1, ], =, 0.0, ;, }, result, [, 0, ], =, a, /]
[1, ], ;, in, [, 1, ], =, 0.0, ;, }, result, [, 0, ], =, a, /, in, []
[in, [, 1, ], =, 0.0, ;, }, result, [, 0, ], =, a, /, in, [, 0, ], ;]
[in, [, 1, ], =, 0.0, ;, }, result, [, 0, ], =, a, /, in, [, 0, ], ;]
[1, ], =, 0.0, ;, }, result, [, 0, ], =, a, /, in, [, 0, ], ;, result, []
[0.0, ;, }, result, [, 0, ], =, a, /, in, [, 0, ], ;, result, [, 1, ], =]
[0.0, ;, }, result, [, 0, ], =, a, /, in, [, 0, ], ;, result, [, 1, ], =]
[;, }, result, [, 0, ], =, a, /, in, [, 0, ], ;, result, [, 1, ], =, (]
[;, }, result, [, 0, ], =, a, /, in, [, 0, ], ;, result, [, 1, ], =, (]
[;, }, result, [, 0, ], =, a, /, in, [, 0, ], ;, result, [, 1, ], =, (]
[result, [, 0, ], =, a, /, in, [, 0, ], ;, result, [, 1, ], =, (, b, *]
[result, [, 0, ], =, a, /, in, [, 0, ], ;, result, [, 1, ], =, (, b, *]
[0, ], =, a, /, in, [, 0, ], ;, result, [, 1, ], =, (, b, *, in, []
[a, /, in, [, 0, ], ;, result, [, 1, ], =, (, b, *, in, [, 0, ], -]
[a, /, in, [, 0, ], ;, result, [, 1, ], =, (, b, *, in, [, 0, ], -]
[in, [, 0, ], ;, result, [, 1, ], =, (, b, *, in, [, 0, ], -, a, *]
[in, [, 0, ], ;, result, [, 1, ], =, (, b, *, in, [, 0, ], -, a, *]
[0, ], ;, result, [, 1, ], =, (, b, *, in, [, 0, ], -, a, *, in, []
[[, 1, ], =, (, b, *, in, [, 0, ], -, a, *, in, [, 1, ], ), /]
[1, ], =, (, b, *, in, [, 0, ], -, a, *, in, [, 1, ], ), /, (]
[1, ], =, (, b, *, in, [, 0, ], -, a, *, in, [, 1, ], ), /, (]
[1, ], =, (, b, *, in, [, 0, ], -, a, *, in, [, 1, ], ), /, (]
[1, ], =, (, b, *, in, [, 0, ], -, a, *, in, [, 1, ], ), /, (]
[=, (, b, *, in, [, 0, ], -, a, *, in, [, 1, ], ), /, (, in, []
[*, in, [, 0, ], -, a, *, in, [, 1, ], ), /, (, in, [, 0, ], *]
[*, in, [, 0, ], -, a, *, in, [, 1, ], ), /, (, in, [, 0, ], *]
[[, 0, ], -, a, *, in, [, 1, ], ), /, (, in, [, 0, ], *, in, []
[-, a, *, in, [, 1, ], ), /, (, in, [, 0, ], *, in, [, 0, ], +]
[-, a, *, in, [, 1, ], ), /, (, in, [, 0, ], *, in, [, 0, ], +]
[-, a, *, in, [, 1, ], ), /, (, in, [, 0, ], *, in, [, 0, ], +]
[*, in, [, 1, ], ), /, (, in, [, 0, ], *, in, [, 0, ], +, in, []
[1, ], ), /, (, in, [, 0, ], *, in, [, 0, ], +, in, [, 0, ], *]
[1, ], ), /, (, in, [, 0, ], *, in, [, 0, ], +, in, [, 0, ], *]
[), /, (, in, [, 0, ], *, in, [, 0, ], +, in, [, 0, ], *, in, []
[], *, in, [, 0, ], +, in, [, 0, ], *, in, [, 1, ], ), ;, if, (]
[], *, in, [, 0, ], +, in, [, 0, ], *, in, [, 1, ], ), ;, if, (]
[], *, in, [, 0, ], +, in, [, 0, ], *, in, [, 1, ], ), ;, if, (]
[in, [, 0, ], +, in, [, 0, ], *, in, [, 1, ], ), ;, if, (, result, []
[], +, in, [, 0, ], *, in, [, 1, ], ), ;, if, (, result, [, 1, ], !=]
[], +, in, [, 0, ], *, in, [, 1, ], ), ;, if, (, result, [, 1, ], !=]
[in, [, 0, ], *, in, [, 1, ], ), ;, if, (, result, [, 1, ], !=, result, []
[*, in, [, 1, ], ), ;, if, (, result, [, 1, ], !=, result, [, 1, ], ), {]
[*, in, [, 1, ], ), ;, if, (, result, [, 1, ], !=, result, [, 1, ], ), {]
[[, 1, ], ), ;, if, (, result, [, 1, ], !=, result, [, 1, ], ), {, result, []
[), ;, if, (, result, [, 1, ], !=, result, [, 1, ], ), {, result, [, 1, ], =]
[(, result, [, 1, ], !=, result, [, 1, ], ), {, result, [, 1, ], =, 0.0, ;, }]
[[, 1, ], !=, result, [, 1, ], ), {, result, [, 1, ], =, 0.0, ;, }, resplit, (]
[), {, result, [, 1, ], =, 0.0, ;, }, resplit, (, result, ), ;, for, (, int, i, =]
[result, [, 1, ], =, 0.0, ;, }, resplit, (, result, ), ;, for, (, int, i, =, 0, ;]
[result, [, 1, ], =, 0.0, ;, }, resplit, (, result, ), ;, for, (, int, i, =, 0, ;]
[1, ], =, 0.0, ;, }, resplit, (, result, ), ;, for, (, int, i, =, 0, ;, i, <]
[=, 0.0, ;, }, resplit, (, result, ), ;, for, (, int, i, =, 0, ;, i, <, 2, ;]
[=, 0.0, ;, }, resplit, (, result, ), ;, for, (, int, i, =, 0, ;, i, <, 2, ;]
[), ;, for, (, int, i, =, 0, ;, i, <, 2, ;, i, ++, ), {, double, err, =]
[), ;, for, (, int, i, =, 0, ;, i, <, 2, ;, i, ++, ), {, double, err, =]
[), ;, for, (, int, i, =, 0, ;, i, <, 2, ;, i, ++, ), {, double, err, =]
[), ;, for, (, int, i, =, 0, ;, i, <, 2, ;, i, ++, ), {, double, err, =]
[), ;, for, (, int, i, =, 0, ;, i, <, 2, ;, i, ++, ), {, double, err, =]
[for, (, int, i, =, 0, ;, i, <, 2, ;, i, ++, ), {, double, err, =, 1.0, -]
[for, (, int, i, =, 0, ;, i, <, 2, ;, i, ++, ), {, double, err, =, 1.0, -]
[for, (, int, i, =, 0, ;, i, <, 2, ;, i, ++, ), {, double, err, =, 1.0, -]
[int, i, =, 0, ;, i, <, 2, ;, i, ++, ), {, double, err, =, 1.0, -, result, []
[0, ;, i, <, 2, ;, i, ++, ), {, double, err, =, 1.0, -, result, [, 0, ], *]
[0, ;, i, <, 2, ;, i, ++, ), {, double, err, =, 1.0, -, result, [, 0, ], *]
[i, <, 2, ;, i, ++, ), {, double, err, =, 1.0, -, result, [, 0, ], *, in, []
[;, i, ++, ), {, double, err, =, 1.0, -, result, [, 0, ], *, in, [, 0, ], -]
[;, i, ++, ), {, double, err, =, 1.0, -, result, [, 0, ], *, in, [, 0, ], -]
[;, i, ++, ), {, double, err, =, 1.0, -, result, [, 0, ], *, in, [, 0, ], -]
[++, ), {, double, err, =, 1.0, -, result, [, 0, ], *, in, [, 0, ], -, result, []
[double, err, =, 1.0, -, result, [, 0, ], *, in, [, 0, ], -, result, [, 0, ], *]
[double, err, =, 1.0, -, result, [, 0, ], *, in, [, 0, ], -, result, [, 0, ], *]
[=, 1.0, -, result, [, 0, ], *, in, [, 0, ], -, result, [, 0, ], *, in, []
[result, [, 0, ], *, in, [, 0, ], -, result, [, 0, ], *, in, [, 1, ], -]
[result, [, 0, ], *, in, [, 0, ], -, result, [, 0, ], *, in, [, 1, ], -]
[result, [, 0, ], *, in, [, 0, ], -, result, [, 0, ], *, in, [, 1, ], -]
[0, ], *, in, [, 0, ], -, result, [, 0, ], *, in, [, 1, ], -, result, []
[in, [, 0, ], -, result, [, 0, ], *, in, [, 1, ], -, result, [, 1, ], *]
[in, [, 0, ], -, result, [, 0, ], *, in, [, 1, ], -, result, [, 1, ], *]
[0, ], -, result, [, 0, ], *, in, [, 1, ], -, result, [, 1, ], *, in, []
[result, [, 0, ], *, in, [, 1, ], -, result, [, 1, ], *, in, [, 0, ], -]
[result, [, 0, ], *, in, [, 1, ], -, result, [, 1, ], *, in, [, 0, ], -]
[result, [, 0, ], *, in, [, 1, ], -, result, [, 1, ], *, in, [, 0, ], -]
[0, ], *, in, [, 1, ], -, result, [, 1, ], *, in, [, 0, ], -, result, []
[in, [, 1, ], -, result, [, 1, ], *, in, [, 0, ], -, result, [, 1, ], *]
[in, [, 1, ], -, result, [, 1, ], *, in, [, 0, ], -, result, [, 1, ], *]
[1, ], -, result, [, 1, ], *, in, [, 0, ], -, result, [, 1, ], *, in, []
[result, [, 1, ], *, in, [, 0, ], -, result, [, 1, ], *, in, [, 1, ], ;]
[1, ], *, in, [, 0, ], -, result, [, 1, ], *, in, [, 1, ], ;, err, =]
[1, ], *, in, [, 0, ], -, result, [, 1, ], *, in, [, 1, ], ;, err, =]
[*, in, [, 0, ], -, result, [, 1, ], *, in, [, 1, ], ;, err, =, err, *]
[in, [, 0, ], -, result, [, 1, ], *, in, [, 1, ], ;, err, =, err, *, (]
[in, [, 0, ], -, result, [, 1, ], *, in, [, 1, ], ;, err, =, err, *, (]
[in, [, 0, ], -, result, [, 1, ], *, in, [, 1, ], ;, err, =, err, *, (]
[0, ], -, result, [, 1, ], *, in, [, 1, ], ;, err, =, err, *, (, result, []
[result, [, 1, ], *, in, [, 1, ], ;, err, =, err, *, (, result, [, 0, ], +]
[result, [, 1, ], *, in, [, 1, ], ;, err, =, err, *, (, result, [, 0, ], +]
[1, ], *, in, [, 1, ], ;, err, =, err, *, (, result, [, 0, ], +, result, []
[[, 1, ], ;, err, =, err, *, (, result, [, 0, ], +, result, [, 1, ], ), ;]
[[, 1, ], ;, err, =, err, *, (, result, [, 0, ], +, result, [, 1, ], ), ;]
[], ;, err, =, err, *, (, result, [, 0, ], +, result, [, 1, ], ), ;, result, []
[=, err, *, (, result, [, 0, ], +, result, [, 1, ], ), ;, result, [, 1, ], +=]
[,, final, double, b, [, ], ,, final, double, result, [, ], ), {, final, double, xs, [, ], =]
[b, [, ], ,, final, double, result, [, ], ), {, final, double, xs, [, ], =, new, double, []
[), {, final, double, xs, [, ], =, new, double, [, 2, ], ;, final, double, ys, [, ], =]
[double, xs, [, ], =, new, double, [, 2, ], ;, final, double, ys, [, ], =, new, double, []
[], ;, final, double, ys, [, ], =, new, double, [, 2, ], ;, final, double, zs, [, ], =]
[double, ys, [, ], =, new, double, [, 2, ], ;, final, double, zs, [, ], =, new, double, []
[], =, new, double, [, 2, ], ;, final, double, zs, [, ], =, new, double, [, 2, ], ;]
[new, double, [, 2, ], ;, final, double, zs, [, ], =, new, double, [, 2, ], ;, split, (]
[new, double, [, 2, ], ;, final, double, zs, [, ], =, new, double, [, 2, ], ;, split, (]
[[, 2, ], ;, final, double, zs, [, ], =, new, double, [, 2, ], ;, split, (, a, []
[;, final, double, zs, [, ], =, new, double, [, 2, ], ;, split, (, a, [, 0, ], ,]
[zs, [, ], =, new, double, [, 2, ], ;, split, (, a, [, 0, ], ,, xs, ), ;]
[], =, new, double, [, 2, ], ;, split, (, a, [, 0, ], ,, xs, ), ;, split, (]
[], =, new, double, [, 2, ], ;, split, (, a, [, 0, ], ,, xs, ), ;, split, (]
[new, double, [, 2, ], ;, split, (, a, [, 0, ], ,, xs, ), ;, split, (, b, []
[2, ], ;, split, (, a, [, 0, ], ,, xs, ), ;, split, (, b, [, 0, ], ,]
[split, (, a, [, 0, ], ,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;]
[a, [, 0, ], ,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (]
[0, ], ,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,]
[,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,]
[;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;]
[;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;]
[(, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, result, []
[0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, result, [, 0, ], =]
[0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, result, [, 0, ], =]
[,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, result, [, 0, ], =, zs, []
[;, splitMult, (, xs, ,, ys, ,, zs, ), ;, result, [, 0, ], =, zs, [, 0, ], ;]
[;, splitMult, (, xs, ,, ys, ,, zs, ), ;, result, [, 0, ], =, zs, [, 0, ], ;]
[(, xs, ,, ys, ,, zs, ), ;, result, [, 0, ], =, zs, [, 0, ], ;, result, []
[ys, ,, zs, ), ;, result, [, 0, ], =, zs, [, 0, ], ;, result, [, 1, ], =]
[ys, ,, zs, ), ;, result, [, 0, ], =, zs, [, 0, ], ;, result, [, 1, ], =]
[zs, ), ;, result, [, 0, ], =, zs, [, 0, ], ;, result, [, 1, ], =, zs, []
[result, [, 0, ], =, zs, [, 0, ], ;, result, [, 1, ], =, zs, [, 1, ], ;]
[0, ], =, zs, [, 0, ], ;, result, [, 1, ], =, zs, [, 1, ], ;, split, (]
[0, ], =, zs, [, 0, ], ;, result, [, 1, ], =, zs, [, 1, ], ;, split, (]
[=, zs, [, 0, ], ;, result, [, 1, ], =, zs, [, 1, ], ;, split, (, b, []
[0, ], ;, result, [, 1, ], =, zs, [, 1, ], ;, split, (, b, [, 1, ], ,]
[result, [, 1, ], =, zs, [, 1, ], ;, split, (, b, [, 1, ], ,, ys, ), ;]
[1, ], =, zs, [, 1, ], ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (]
[=, zs, [, 1, ], ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,]
[[, 1, ], ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,]
[b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, double, tmp, =]
[b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, double, tmp, =]
[b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, double, tmp, =]
[1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, double, tmp, =, result, []
[ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, double, tmp, =, result, [, 0, ], +]
[ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, double, tmp, =, result, [, 0, ], +]
[;, splitMult, (, xs, ,, ys, ,, zs, ), ;, double, tmp, =, result, [, 0, ], +, zs, []
[xs, ,, ys, ,, zs, ), ;, double, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;]
[xs, ,, ys, ,, zs, ), ;, double, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;]
[ys, ,, zs, ), ;, double, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, []
[), ;, double, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =]
[), ;, double, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =]
[), ;, double, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =]
[double, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, []
[result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -]
[[, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[[, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[[, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, []
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, []
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;]
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;]
[[, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, []
[-, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =]
[tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;]
[result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =]
[result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =]
[result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =]
[0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, []
[zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +]
[zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +]
[0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, []
[;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;]
[;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;]
[[, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, []
[=, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =]
[=, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =]
[=, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =]
[;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, []
[result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -]
[[, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[[, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[[, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, []
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, []
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;]
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;]
[[, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, []
[-, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =]
[tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;]
[result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (]
[result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (]
[0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, []
[zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,]
[], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;]
[;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (]
[;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (]
[[, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, []
[=, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, [, 0, ], ,]
[split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;]
[a, [, 1, ], ,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (]
[1, ], ,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,]
[,, xs, ), ;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,]
[;, split, (, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;]
[(, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =]
[(, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =]
[(, b, [, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =]
[[, 0, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, []
[,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +]
[,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +]
[), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, []
[(, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;]
[(, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;]
[,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, []
[zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =]
[zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =]
[zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =]
[;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, []
[result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -]
[[, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[[, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[[, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, []
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, []
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;]
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;]
[[, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, []
[-, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =]
[tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;]
[result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =]
[result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =]
[result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =]
[0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, []
[zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +]
[zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +]
[0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, []
[;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;]
[;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;]
[[, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, []
[=, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =]
[=, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =]
[=, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =]
[;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, []
[result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -]
[[, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[[, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[[, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, []
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, []
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;]
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;]
[[, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, []
[-, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =]
[tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;]
[result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (]
[result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (]
[0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, []
[zs, [, 1, ], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,]
[], ), ;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;]
[;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (]
[;, result, [, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (]
[[, 0, ], =, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, []
[=, tmp, ;, split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, [, 1, ], ,]
[split, (, a, [, 1, ], ,, xs, ), ;, split, (, b, [, 1, ], ,, ys, ), ;]
[a, [, 1, ], ,, xs, ), ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (]
[1, ], ,, xs, ), ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,]
[,, xs, ), ;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,]
[;, split, (, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;]
[(, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =]
[(, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =]
[(, b, [, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =]
[[, 1, ], ,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, []
[,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +]
[,, ys, ), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +]
[), ;, splitMult, (, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, []
[(, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;]
[(, xs, ,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;]
[,, ys, ,, zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, []
[zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =]
[zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =]
[zs, ), ;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =]
[;, tmp, =, result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, []
[result, [, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -]
[[, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[[, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[[, 0, ], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[], +, zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[zs, [, 0, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, []
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, []
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;]
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;]
[[, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, []
[-, (, tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =]
[tmp, -, result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;]
[result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =]
[result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =]
[result, [, 0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =]
[0, ], -, zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, []
[zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +]
[zs, [, 0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +]
[0, ], ), ;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, []
[;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;]
[;, result, [, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;]
[[, 0, ], =, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, []
[=, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =]
[=, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =]
[=, tmp, ;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =]
[;, tmp, =, result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, []
[result, [, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -]
[[, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[[, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[[, 0, ], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (]
[], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[], +, zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -]
[zs, [, 1, ], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, []
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[], ;, result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -]
[result, [, 1, ], =, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, []
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;]
[=, result, [, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;]
[[, 1, ], -, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, []
[-, (, tmp, -, result, [, 0, ], -, zs, [, 1, ], ), ;, result, [, 0, ], =]
[static, double, expint, (, int, p, ,, final, double, result, [, ], ), {, final, double, xs, [, ], =]
[(, int, p, ,, final, double, result, [, ], ), {, final, double, xs, [, ], =, new, double, []
[), {, final, double, xs, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =]
[double, xs, [, ], =, new, double, [, 2, ], ;, final, double, as, [, ], =, new, double, []
[], ;, final, double, as, [, ], =, new, double, [, 2, ], ;, final, double, ys, [, ], =]
[double, as, [, ], =, new, double, [, 2, ], ;, final, double, ys, [, ], =, new, double, []
[], =, new, double, [, 2, ], ;, final, double, ys, [, ], =, new, double, [, 2, ], ;]
[], =, new, double, [, 2, ], ;, final, double, ys, [, ], =, new, double, [, 2, ], ;]
[new, double, [, 2, ], ;, final, double, ys, [, ], =, new, double, [, 2, ], ;, xs, []
[2, ], ;, final, double, ys, [, ], =, new, double, [, 2, ], ;, xs, [, 0, ], =]
[;, final, double, ys, [, ], =, new, double, [, 2, ], ;, xs, [, 0, ], =, 2.718281828459045, ;]
[;, final, double, ys, [, ], =, new, double, [, 2, ], ;, xs, [, 0, ], =, 2.718281828459045, ;]
[double, ys, [, ], =, new, double, [, 2, ], ;, xs, [, 0, ], =, 2.718281828459045, ;, xs, []
[], =, new, double, [, 2, ], ;, xs, [, 0, ], =, 2.718281828459045, ;, xs, [, 1, ], =]
[new, double, [, 2, ], ;, xs, [, 0, ], =, 2.718281828459045, ;, xs, [, 1, ], =, 1.4456468917292502E-16, ;]
[[, 2, ], ;, xs, [, 0, ], =, 2.718281828459045, ;, xs, [, 1, ], =, 1.4456468917292502E-16, ;, split, (]
[], ;, xs, [, 0, ], =, 2.718281828459045, ;, xs, [, 1, ], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,]
[], =, 2.718281828459045, ;, xs, [, 1, ], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;, while, (]
[], =, 2.718281828459045, ;, xs, [, 1, ], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;, while, (]
[2.718281828459045, ;, xs, [, 1, ], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;, while, (, p, >]
[], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;, while, (, p, >, 0, ), {, if, (]
[], =, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;, while, (, p, >, 0, ), {, if, (]
[=, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;, while, (, p, >, 0, ), {, if, (, (]
[=, 1.4456468917292502E-16, ;, split, (, 1.0, ,, ys, ), ;, while, (, p, >, 0, ), {, if, (, (]
[;, split, (, 1.0, ,, ys, ), ;, while, (, p, >, 0, ), {, if, (, (, p, &]
[1.0, ,, ys, ), ;, while, (, p, >, 0, ), {, if, (, (, p, &, 1, ), !=]
[), ;, while, (, p, >, 0, ), {, if, (, (, p, &, 1, ), !=, 0, ), {]
[while, (, p, >, 0, ), {, if, (, (, p, &, 1, ), !=, 0, ), {, quadMult, (]
[p, >, 0, ), {, if, (, (, p, &, 1, ), !=, 0, ), {, quadMult, (, ys, ,]
[0, ), {, if, (, (, p, &, 1, ), !=, 0, ), {, quadMult, (, ys, ,, xs, ,]
[if, (, (, p, &, 1, ), !=, 0, ), {, quadMult, (, ys, ,, xs, ,, as, ), ;]
[if, (, (, p, &, 1, ), !=, 0, ), {, quadMult, (, ys, ,, xs, ,, as, ), ;]
[(, p, &, 1, ), !=, 0, ), {, quadMult, (, ys, ,, xs, ,, as, ), ;, ys, []
[1, ), !=, 0, ), {, quadMult, (, ys, ,, xs, ,, as, ), ;, ys, [, 0, ], =]
[1, ), !=, 0, ), {, quadMult, (, ys, ,, xs, ,, as, ), ;, ys, [, 0, ], =]
[!=, 0, ), {, quadMult, (, ys, ,, xs, ,, as, ), ;, ys, [, 0, ], =, as, []
[{, quadMult, (, ys, ,, xs, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[{, quadMult, (, ys, ,, xs, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;]
[(, ys, ,, xs, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, []
[xs, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[xs, ,, as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =]
[as, ), ;, ys, [, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, []
[[, 0, ], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }]
[], =, as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, quadMult, (]
[as, [, 0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, quadMult, (, xs, ,]
[0, ], ;, ys, [, 1, ], =, as, [, 1, ], ;, }, quadMult, (, xs, ,, xs, ,]
[ys, [, 1, ], =, as, [, 1, ], ;, }, quadMult, (, xs, ,, xs, ,, as, ), ;]
[ys, [, 1, ], =, as, [, 1, ], ;, }, quadMult, (, xs, ,, xs, ,, as, ), ;]
[1, ], =, as, [, 1, ], ;, }, quadMult, (, xs, ,, xs, ,, as, ), ;, xs, []
[as, [, 1, ], ;, }, quadMult, (, xs, ,, xs, ,, as, ), ;, xs, [, 0, ], =]
[as, [, 1, ], ;, }, quadMult, (, xs, ,, xs, ,, as, ), ;, xs, [, 0, ], =]
[1, ], ;, }, quadMult, (, xs, ,, xs, ,, as, ), ;, xs, [, 0, ], =, as, []
[}, quadMult, (, xs, ,, xs, ,, as, ), ;, xs, [, 0, ], =, as, [, 0, ], ;]
[}, quadMult, (, xs, ,, xs, ,, as, ), ;, xs, [, 0, ], =, as, [, 0, ], ;]
[(, xs, ,, xs, ,, as, ), ;, xs, [, 0, ], =, as, [, 0, ], ;, xs, []
[xs, ,, as, ), ;, xs, [, 0, ], =, as, [, 0, ], ;, xs, [, 1, ], =]
[xs, ,, as, ), ;, xs, [, 0, ], =, as, [, 0, ], ;, xs, [, 1, ], =]
[as, ), ;, xs, [, 0, ], =, as, [, 0, ], ;, xs, [, 1, ], =, as, []
[xs, [, 0, ], =, as, [, 0, ], ;, xs, [, 1, ], =, as, [, 1, ], ;]
[0, ], =, as, [, 0, ], ;, xs, [, 1, ], =, as, [, 1, ], ;, p, >>=]
[0, ], ;, xs, [, 1, ], =, as, [, 1, ], ;, p, >>=, 1, ;, }, if, (]
[0, ], ;, xs, [, 1, ], =, as, [, 1, ], ;, p, >>=, 1, ;, }, if, (]
[;, xs, [, 1, ], =, as, [, 1, ], ;, p, >>=, 1, ;, }, if, (, result, !=]
[1, ], =, as, [, 1, ], ;, p, >>=, 1, ;, }, if, (, result, !=, null, ), {]
[1, ], =, as, [, 1, ], ;, p, >>=, 1, ;, }, if, (, result, !=, null, ), {]
[=, as, [, 1, ], ;, p, >>=, 1, ;, }, if, (, result, !=, null, ), {, result, []
[1, ], ;, p, >>=, 1, ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =]
[1, ], ;, p, >>=, 1, ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =]
[;, p, >>=, 1, ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, []
[1, ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;]
[1, ;, }, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;]
[}, if, (, result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, []
[result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =]
[result, !=, null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =]
[null, ), {, result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, []
[result, [, 0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;]
[0, ], =, ys, [, 0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, resplit, (]
[0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, resplit, (, result, ), ;, }, return]
[0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, resplit, (, result, ), ;, }, return]
[0, ], ;, result, [, 1, ], =, ys, [, 1, ], ;, resplit, (, result, ), ;, }, return]
[;, result, [, 1, ], =, ys, [, 1, ], ;, resplit, (, result, ), ;, }, return, ys, []
[1, ], =, ys, [, 1, ], ;, resplit, (, result, ), ;, }, return, ys, [, 0, ], +]
[1, ], =, ys, [, 1, ], ;, resplit, (, result, ), ;, }, return, ys, [, 0, ], +]
[=, ys, [, 1, ], ;, resplit, (, result, ), ;, }, return, ys, [, 0, ], +, ys, []
[[, 1, ], ;, }, static, double, [, ], slowLog, (, double, xi, ), {, double, x, [, ], =]
[;, }, static, double, [, ], slowLog, (, double, xi, ), {, double, x, [, ], =, new, double, []
[double, xi, ), {, double, x, [, ], =, new, double, [, 2, ], ;, double, x2, [, ], =]
[{, double, x, [, ], =, new, double, [, 2, ], ;, double, x2, [, ], =, new, double, []
[[, 2, ], ;, double, x2, [, ], =, new, double, [, 2, ], ;, double, y, [, ], =]
[;, double, x2, [, ], =, new, double, [, 2, ], ;, double, y, [, ], =, new, double, []
[[, 2, ], ;, double, y, [, ], =, new, double, [, 2, ], ;, double, a, [, ], =]
[;, double, y, [, ], =, new, double, [, 2, ], ;, double, a, [, ], =, new, double, []
[[, ], =, new, double, [, 2, ], ;, double, a, [, ], =, new, double, [, 2, ], ;]
[=, new, double, [, 2, ], ;, double, a, [, ], =, new, double, [, 2, ], ;, split, (]
[double, [, 2, ], ;, double, a, [, ], =, new, double, [, 2, ], ;, split, (, xi, ,]
[], ;, double, a, [, ], =, new, double, [, 2, ], ;, split, (, xi, ,, x, ), ;]
[], ;, double, a, [, ], =, new, double, [, 2, ], ;, split, (, xi, ,, x, ), ;]
[double, a, [, ], =, new, double, [, 2, ], ;, split, (, xi, ,, x, ), ;, x, []
[], =, new, double, [, 2, ], ;, split, (, xi, ,, x, ), ;, x, [, 0, ], +=]
[new, double, [, 2, ], ;, split, (, xi, ,, x, ), ;, x, [, 0, ], +=, 1.0, ;]
[[, 2, ], ;, split, (, xi, ,, x, ), ;, x, [, 0, ], +=, 1.0, ;, resplit, (]
[;, split, (, xi, ,, x, ), ;, x, [, 0, ], +=, 1.0, ;, resplit, (, x, ), ;]
[(, xi, ,, x, ), ;, x, [, 0, ], +=, 1.0, ;, resplit, (, x, ), ;, splitReciprocal, (]
[,, x, ), ;, x, [, 0, ], +=, 1.0, ;, resplit, (, x, ), ;, splitReciprocal, (, x, ,]
[;, x, [, 0, ], +=, 1.0, ;, resplit, (, x, ), ;, splitReciprocal, (, x, ,, a, ), ;]
[;, x, [, 0, ], +=, 1.0, ;, resplit, (, x, ), ;, splitReciprocal, (, x, ,, a, ), ;]
[[, 0, ], +=, 1.0, ;, resplit, (, x, ), ;, splitReciprocal, (, x, ,, a, ), ;, x, []
[+=, 1.0, ;, resplit, (, x, ), ;, splitReciprocal, (, x, ,, a, ), ;, x, [, 0, ], -=]
[;, resplit, (, x, ), ;, splitReciprocal, (, x, ,, a, ), ;, x, [, 0, ], -=, 2.0, ;]
[(, x, ), ;, splitReciprocal, (, x, ,, a, ), ;, x, [, 0, ], -=, 2.0, ;, resplit, (]
[;, splitReciprocal, (, x, ,, a, ), ;, x, [, 0, ], -=, 2.0, ;, resplit, (, x, ), ;]
[(, x, ,, a, ), ;, x, [, 0, ], -=, 2.0, ;, resplit, (, x, ), ;, splitMult, (]
[,, a, ), ;, x, [, 0, ], -=, 2.0, ;, resplit, (, x, ), ;, splitMult, (, x, ,]
[), ;, x, [, 0, ], -=, 2.0, ;, resplit, (, x, ), ;, splitMult, (, x, ,, a, ,]
[[, 0, ], -=, 2.0, ;, resplit, (, x, ), ;, splitMult, (, x, ,, a, ,, y, ), ;]
[[, 0, ], -=, 2.0, ;, resplit, (, x, ), ;, splitMult, (, x, ,, a, ,, y, ), ;]
[], -=, 2.0, ;, resplit, (, x, ), ;, splitMult, (, x, ,, a, ,, y, ), ;, x, []
[;, resplit, (, x, ), ;, splitMult, (, x, ,, a, ,, y, ), ;, x, [, 0, ], =]
[;, resplit, (, x, ), ;, splitMult, (, x, ,, a, ,, y, ), ;, x, [, 0, ], =]
[(, x, ), ;, splitMult, (, x, ,, a, ,, y, ), ;, x, [, 0, ], =, y, []
[;, splitMult, (, x, ,, a, ,, y, ), ;, x, [, 0, ], =, y, [, 0, ], ;]
[;, splitMult, (, x, ,, a, ,, y, ), ;, x, [, 0, ], =, y, [, 0, ], ;]
[(, x, ,, a, ,, y, ), ;, x, [, 0, ], =, y, [, 0, ], ;, x, []
[a, ,, y, ), ;, x, [, 0, ], =, y, [, 0, ], ;, x, [, 1, ], =]
[a, ,, y, ), ;, x, [, 0, ], =, y, [, 0, ], ;, x, [, 1, ], =]
[y, ), ;, x, [, 0, ], =, y, [, 0, ], ;, x, [, 1, ], =, y, []
[x, [, 0, ], =, y, [, 0, ], ;, x, [, 1, ], =, y, [, 1, ], ;]
[0, ], =, y, [, 0, ], ;, x, [, 1, ], =, y, [, 1, ], ;, splitMult, (]
[=, y, [, 0, ], ;, x, [, 1, ], =, y, [, 1, ], ;, splitMult, (, x, ,]
[[, 0, ], ;, x, [, 1, ], =, y, [, 1, ], ;, splitMult, (, x, ,, x, ,]
[;, x, [, 1, ], =, y, [, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;]
[;, x, [, 1, ], =, y, [, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;]
[[, 1, ], =, y, [, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;, y, []
[=, y, [, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;, y, [, 0, ], =]
[=, y, [, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;, y, [, 0, ], =]
[=, y, [, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;, y, [, 0, ], =]
[[, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;, y, [, 0, ], =, LN_SPLIT_COEF, []
[[, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;, y, [, 0, ], =, LN_SPLIT_COEF, []
[[, 1, ], ;, splitMult, (, x, ,, x, ,, x2, ), ;, y, [, 0, ], =, LN_SPLIT_COEF, []
[splitMult, (, x, ,, x, ,, x2, ), ;, y, [, 0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -]
[,, x, ,, x2, ), ;, y, [, 0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], []
[x2, ), ;, y, [, 0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;]
[x2, ), ;, y, [, 0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;]
[;, y, [, 0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;, y, []
[0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;, y, [, 1, ], =]
[0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;, y, [, 1, ], =]
[0, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;, y, [, 1, ], =]
[=, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;, y, [, 1, ], =, LN_SPLIT_COEF, []
[=, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;, y, [, 1, ], =, LN_SPLIT_COEF, []
[=, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 0, ], ;, y, [, 1, ], =, LN_SPLIT_COEF, []
[., length, -, 1, ], [, 0, ], ;, y, [, 1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -]
[1, ], [, 0, ], ;, y, [, 1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], []
[1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 1, ], ;, for, (, int, i, =]
[1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 1, ], ;, for, (, int, i, =]
[1, ], =, LN_SPLIT_COEF, [, LN_SPLIT_COEF, ., length, -, 1, ], [, 1, ], ;, for, (, int, i, =]
[[, LN_SPLIT_COEF, ., length, -, 1, ], [, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -]
[., length, -, 1, ], [, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;]
[., length, -, 1, ], [, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;]
[-, 1, ], [, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;, i, >=]
[], [, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;, i, >=, 0, ;]
[], [, 1, ], ;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;, i, >=, 0, ;]
[;, for, (, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;, i, >=, 0, ;, i, --, ), {]
[(, int, i, =, LN_SPLIT_COEF, ., length, -, 2, ;, i, >=, 0, ;, i, --, ), {, splitMult, (]
[i, =, LN_SPLIT_COEF, ., length, -, 2, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, y, ,]
[LN_SPLIT_COEF, ., length, -, 2, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, y, ,, x2, ,]
[-, 2, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, y, ,, x2, ,, a, ), ;]
[-, 2, ;, i, >=, 0, ;, i, --, ), {, splitMult, (, y, ,, x2, ,, a, ), ;]
[;, i, >=, 0, ;, i, --, ), {, splitMult, (, y, ,, x2, ,, a, ), ;, y, []
[0, ;, i, --, ), {, splitMult, (, y, ,, x2, ,, a, ), ;, y, [, 0, ], =]
[0, ;, i, --, ), {, splitMult, (, y, ,, x2, ,, a, ), ;, y, [, 0, ], =]
[i, --, ), {, splitMult, (, y, ,, x2, ,, a, ), ;, y, [, 0, ], =, a, []
[{, splitMult, (, y, ,, x2, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;]
[{, splitMult, (, y, ,, x2, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;]
[(, y, ,, x2, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, []
[x2, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =]
[x2, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =]
[a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, []
[y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;]
[0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, splitAdd, (]
[=, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, splitAdd, (, y, ,]
[=, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, splitAdd, (, y, ,]
[[, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, []
[;, y, [, 1, ], =, a, [, 1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,]
[1, ], =, a, [, 1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;]
[1, ], =, a, [, 1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;]
[=, a, [, 1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;, y, []
[1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;, y, [, 0, ], =]
[1, ], ;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;, y, [, 0, ], =]
[;, splitAdd, (, y, ,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;, y, [, 0, ], =, a, []
[y, ,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;]
[y, ,, LN_SPLIT_COEF, [, i, ], ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;]
[LN_SPLIT_COEF, [, i, ], ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, []
[], ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =]
[], ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =]
[a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, []
[[, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, }]
[], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, }, splitMult, (]
[a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, }, splitMult, (, y, ,]
[0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, }, splitMult, (, y, ,, x, ,]
[y, [, 1, ], =, a, [, 1, ], ;, }, splitMult, (, y, ,, x, ,, a, ), ;]
[y, [, 1, ], =, a, [, 1, ], ;, }, splitMult, (, y, ,, x, ,, a, ), ;]
[1, ], =, a, [, 1, ], ;, }, splitMult, (, y, ,, x, ,, a, ), ;, y, []
[a, [, 1, ], ;, }, splitMult, (, y, ,, x, ,, a, ), ;, y, [, 0, ], =]
[a, [, 1, ], ;, }, splitMult, (, y, ,, x, ,, a, ), ;, y, [, 0, ], =]
[1, ], ;, }, splitMult, (, y, ,, x, ,, a, ), ;, y, [, 0, ], =, a, []
[}, splitMult, (, y, ,, x, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;]
[}, splitMult, (, y, ,, x, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;]
[(, y, ,, x, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, []
[x, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =]
[x, ,, a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =]
[a, ), ;, y, [, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, []
[[, 0, ], =, a, [, 0, ], ;, y, [, 1, ], =, a, [, 1, ], ;, return]
[void, printarray, (, PrintStream, out, ,, String, name, ,, int, expectedLen, ,, double, [, ], [, ], array2d, ), {]
[void, printarray, (, PrintStream, out, ,, String, name, ,, int, expectedLen, ,, double, [, ], [, ], array2d, ), {]
[out, ,, String, name, ,, int, expectedLen, ,, double, [, ], [, ], array2d, ), {, out, ., println, (]
[name, ,, int, expectedLen, ,, double, [, ], [, ], array2d, ), {, out, ., println, (, name, ), ;]
[int, expectedLen, ,, double, [, ], [, ], array2d, ), {, out, ., println, (, name, ), ;, checkLen, (]
[,, double, [, ], [, ], array2d, ), {, out, ., println, (, name, ), ;, checkLen, (, expectedLen, ,]
[,, double, [, ], [, ], array2d, ), {, out, ., println, (, name, ), ;, checkLen, (, expectedLen, ,]
[], array2d, ), {, out, ., println, (, name, ), ;, checkLen, (, expectedLen, ,, array2d, ., length, ), ;]
[], array2d, ), {, out, ., println, (, name, ), ;, checkLen, (, expectedLen, ,, array2d, ., length, ), ;]
[out, ., println, (, name, ), ;, checkLen, (, expectedLen, ,, array2d, ., length, ), ;, out, ., println, (]
[out, ., println, (, name, ), ;, checkLen, (, expectedLen, ,, array2d, ., length, ), ;, out, ., println, (]
[println, (, name, ), ;, checkLen, (, expectedLen, ,, array2d, ., length, ), ;, out, ., println, (, TABLE_START_DECL, +]
[(, expectedLen, ,, array2d, ., length, ), ;, out, ., println, (, TABLE_START_DECL, +, " ", ), ;, int, i, =]
[., println, (, TABLE_START_DECL, +, " ", ), ;, int, i, =, 0, ;, for, (, double, [, ], array, :]
[TABLE_START_DECL, +, " ", ), ;, int, i, =, 0, ;, for, (, double, [, ], array, :, array2d, ), {]
[TABLE_START_DECL, +, " ", ), ;, int, i, =, 0, ;, for, (, double, [, ], array, :, array2d, ), {]
[;, int, i, =, 0, ;, for, (, double, [, ], array, :, array2d, ), {, out, ., print, (]
[double, [, ], array, :, array2d, ), {, out, ., print, (, "        {", ), ;, for, (, double, d, :]
[array, :, array2d, ), {, out, ., print, (, "        {", ), ;, for, (, double, d, :, array, ), {]
[array, :, array2d, ), {, out, ., print, (, "        {", ), ;, for, (, double, d, :, array, ), {]
[{, out, ., print, (, "        {", ), ;, for, (, double, d, :, array, ), {, out, ., printf, (]
[., print, (, "        {", ), ;, for, (, double, d, :, array, ), {, out, ., printf, (, "%-25.25s", ,]
[(, "        {", ), ;, for, (, double, d, :, array, ), {, out, ., printf, (, "%-25.25s", ,, format, (]
[(, double, d, :, array, ), {, out, ., printf, (, "%-25.25s", ,, format, (, d, ), ), ;, }]
[(, double, d, :, array, ), {, out, ., printf, (, "%-25.25s", ,, format, (, d, ), ), ;, }]
[array, ), {, out, ., printf, (, "%-25.25s", ,, format, (, d, ), ), ;, }, out, ., println, (]
[array, ), {, out, ., printf, (, "%-25.25s", ,, format, (, d, ), ), ;, }, out, ., println, (]
[{, out, ., printf, (, "%-25.25s", ,, format, (, d, ), ), ;, }, out, ., println, (, "}, // ", +]
[{, out, ., printf, (, "%-25.25s", ,, format, (, d, ), ), ;, }, out, ., println, (, "}, // ", +]
["%-25.25s", ,, format, (, d, ), ), ;, }, out, ., println, (, "}, // ", +, i, ++, ), ;, }]
["%-25.25s", ,, format, (, d, ), ), ;, }, out, ., println, (, "}, // ", +, i, ++, ), ;, }]
[d, ), ), ;, }, out, ., println, (, "}, // ", +, i, ++, ), ;, }, out, ., println, (]
[}, static, void, printarray, (, PrintStream, out, ,, String, name, ,, int, expectedLen, ,, double, [, ], array, ), {]
[}, static, void, printarray, (, PrintStream, out, ,, String, name, ,, int, expectedLen, ,, double, [, ], array, ), {]
[(, PrintStream, out, ,, String, name, ,, int, expectedLen, ,, double, [, ], array, ), {, out, ., println, (]
[(, PrintStream, out, ,, String, name, ,, int, expectedLen, ,, double, [, ], array, ), {, out, ., println, (]
[out, ,, String, name, ,, int, expectedLen, ,, double, [, ], array, ), {, out, ., println, (, name, +]
[name, ,, int, expectedLen, ,, double, [, ], array, ), {, out, ., println, (, name, +, "=", ), ;]
[int, expectedLen, ,, double, [, ], array, ), {, out, ., println, (, name, +, "=", ), ;, checkLen, (]
[,, double, [, ], array, ), {, out, ., println, (, name, +, "=", ), ;, checkLen, (, expectedLen, ,]
[,, double, [, ], array, ), {, out, ., println, (, name, +, "=", ), ;, checkLen, (, expectedLen, ,]
[), {, out, ., println, (, name, +, "=", ), ;, checkLen, (, expectedLen, ,, array, ., length, ), ;]
[), {, out, ., println, (, name, +, "=", ), ;, checkLen, (, expectedLen, ,, array, ., length, ), ;]
[println, (, name, +, "=", ), ;, checkLen, (, expectedLen, ,, array, ., length, ), ;, out, ., println, (]
[(, expectedLen, ,, array, ., length, ), ;, out, ., println, (, TABLE_START_DECL, ), ;, for, (, double, d, :]
[array, ., length, ), ;, out, ., println, (, TABLE_START_DECL, ), ;, for, (, double, d, :, array, ), {]
[array, ., length, ), ;, out, ., println, (, TABLE_START_DECL, ), ;, for, (, double, d, :, array, ), {]
[;, out, ., println, (, TABLE_START_DECL, ), ;, for, (, double, d, :, array, ), {, out, ., printf, (]
[., println, (, TABLE_START_DECL, ), ;, for, (, double, d, :, array, ), {, out, ., printf, (, "        %s%n", ,]
[(, TABLE_START_DECL, ), ;, for, (, double, d, :, array, ), {, out, ., printf, (, "        %s%n", ,, format, (]
[(, double, d, :, array, ), {, out, ., printf, (, "        %s%n", ,, format, (, d, ), ), ;, }]
[(, double, d, :, array, ), {, out, ., printf, (, "        %s%n", ,, format, (, d, ), ), ;, }]
[array, ), {, out, ., printf, (, "        %s%n", ,, format, (, d, ), ), ;, }, out, ., println, (]
[;, }, out, ., println, (, TABLE_END_DECL, ), ;, }, static, String, format, (, double, d, ), {, if, (]
[;, }, out, ., println, (, TABLE_END_DECL, ), ;, }, static, String, format, (, double, d, ), {, if, (]
[out, ., println, (, TABLE_END_DECL, ), ;, }, static, String, format, (, double, d, ), {, if, (, d, !=]
[TABLE_END_DECL, ), ;, }, static, String, format, (, double, d, ), {, if, (, d, !=, d, ), {, return]
[format, (, double, d, ), {, if, (, d, !=, d, ), {, return, "Double.NaN,", ;, }, else, {, return]
[format, (, double, d, ), {, if, (, d, !=, d, ), {, return, "Double.NaN,", ;, }, else, {, return]
[format, (, double, d, ), {, if, (, d, !=, d, ), {, return, "Double.NaN,", ;, }, else, {, return]
[(, double, d, ), {, if, (, d, !=, d, ), {, return, "Double.NaN,", ;, }, else, {, return, (]
[(, double, d, ), {, if, (, d, !=, d, ), {, return, "Double.NaN,", ;, }, else, {, return, (]
[double, d, ), {, if, (, d, !=, d, ), {, return, "Double.NaN,", ;, }, else, {, return, (, (]
[double, d, ), {, if, (, d, !=, d, ), {, return, "Double.NaN,", ;, }, else, {, return, (, (]
[), {, if, (, d, !=, d, ), {, return, "Double.NaN,", ;, }, else, {, return, (, (, d, >=]
[(, d, !=, d, ), {, return, "Double.NaN,", ;, }, else, {, return, (, (, d, >=, 0, ), ?]
[!=, d, ), {, return, "Double.NaN,", ;, }, else, {, return, (, (, d, >=, 0, ), ?, "+", :]
[{, return, "Double.NaN,", ;, }, else, {, return, (, (, d, >=, 0, ), ?, "+", :, "", ), +]
[{, return, "Double.NaN,", ;, }, else, {, return, (, (, d, >=, 0, ), ?, "+", :, "", ), +]
[}, else, {, return, (, (, d, >=, 0, ), ?, "+", :, "", ), +, Double, ., toString, (]
[return, (, (, d, >=, 0, ), ?, "+", :, "", ), +, Double, ., toString, (, d, ), +]
["d,", ;, }, }, private, static, void, checkLen, (, int, expectedLen, ,, int, actual, ), throws, DimensionMismatchException, {, if, (]
["d,", ;, }, }, private, static, void, checkLen, (, int, expectedLen, ,, int, actual, ), throws, DimensionMismatchException, {, if, (]
[}, }, private, static, void, checkLen, (, int, expectedLen, ,, int, actual, ), throws, DimensionMismatchException, {, if, (, expectedLen, !=]
[void, checkLen, (, int, expectedLen, ,, int, actual, ), throws, DimensionMismatchException, {, if, (, expectedLen, !=, actual, ), {, throw]
[int, expectedLen, ,, int, actual, ), throws, DimensionMismatchException, {, if, (, expectedLen, !=, actual, ), {, throw, new, DimensionMismatchException, (]
[,, int, actual, ), throws, DimensionMismatchException, {, if, (, expectedLen, !=, actual, ), {, throw, new, DimensionMismatchException, (, actual, ,]
