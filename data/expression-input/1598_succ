[;, public, static, final, DateTimeZone, UTC, =, new, FixedDateTimeZone, (, "UTC", ,, "UTC", ,, 0, ,, 0, ), ;, private]
[;, private, static, final, int, MAX_MILLIS, =, (, 86400, *, 1000, ), -, 1, ;, private, static, Provider, cProvider, ;]
[,, "UTC", ,, 0, ,, 0, ), ;, private, static, final, int, MAX_MILLIS, =, (, 86400, *, 1000, ), -]
[,, 0, ,, 0, ), ;, private, static, final, int, MAX_MILLIS, =, (, 86400, *, 1000, ), -, 1, ;]
[,, 0, ), ;, private, static, final, int, MAX_MILLIS, =, (, 86400, *, 1000, ), -, 1, ;, private, static]
[), ;, private, static, final, int, MAX_MILLIS, =, (, 86400, *, 1000, ), -, 1, ;, private, static, Provider, cProvider]
[;, private, static, Provider, cProvider, ;, private, static, NameProvider, cNameProvider, ;, private, static, Set, <, String, >, cAvailableIDs, ;, private]
[-, 1, ;, private, static, Provider, cProvider, ;, private, static, NameProvider, cNameProvider, ;, private, static, Set, <, String, >, cAvailableIDs]
[), -, 1, ;, private, static, Provider, cProvider, ;, private, static, NameProvider, cNameProvider, ;, private, static, Set, <, String, >]
[*, 1000, ), -, 1, ;, private, static, Provider, cProvider, ;, private, static, NameProvider, cNameProvider, ;, private, static, Set, <]
[), -, 1, ;, private, static, Provider, cProvider, ;, private, static, NameProvider, cNameProvider, ;, private, static, Set, <, String, >]
[;, private, static, Provider, cProvider, ;, private, static, NameProvider, cNameProvider, ;, private, static, Set, <, String, >, cAvailableIDs, ;, private]
[;, setNameProvider0, (, null, ), ;, }, public, static, DateTimeZone, getDefault, (, ), {, DateTimeZone, zone, =, cDefault, ;, if]
[), ;, setNameProvider0, (, null, ), ;, }, public, static, DateTimeZone, getDefault, (, ), {, DateTimeZone, zone, =, cDefault, ;]
[;, }, public, static, DateTimeZone, getDefault, (, ), {, DateTimeZone, zone, =, cDefault, ;, if, (, zone, ==, null, )]
[), ;, }, public, static, DateTimeZone, getDefault, (, ), {, DateTimeZone, zone, =, cDefault, ;, if, (, zone, ==, null]
[;, if, (, zone, ==, null, ), {, synchronized, (, DateTimeZone, ., class, ), {, zone, =, cDefault, ;, if]
[), {, synchronized, (, DateTimeZone, ., class, ), {, zone, =, cDefault, ;, if, (, zone, ==, null, ), {]
[==, null, ), {, synchronized, (, DateTimeZone, ., class, ), {, zone, =, cDefault, ;, if, (, zone, ==, null]
[), {, synchronized, (, DateTimeZone, ., class, ), {, zone, =, cDefault, ;, if, (, zone, ==, null, ), {]
[), {, zone, =, cDefault, ;, if, (, zone, ==, null, ), {, DateTimeZone, temp, =, null, ;, try, {]
[=, cDefault, ;, if, (, zone, ==, null, ), {, DateTimeZone, temp, =, null, ;, try, {, try, {, String]
[;, if, (, zone, ==, null, ), {, DateTimeZone, temp, =, null, ;, try, {, try, {, String, id, =]
[), {, DateTimeZone, temp, =, null, ;, try, {, try, {, String, id, =, System, ., getProperty, (, "user.timezone", )]
[==, null, ), {, DateTimeZone, temp, =, null, ;, try, {, try, {, String, id, =, System, ., getProperty, (]
[), {, DateTimeZone, temp, =, null, ;, try, {, try, {, String, id, =, System, ., getProperty, (, "user.timezone", )]
[;, try, {, try, {, String, id, =, System, ., getProperty, (, "user.timezone", ), ;, if, (, id, !=, null]
[;, if, (, id, !=, null, ), {, temp, =, forID, (, id, ), ;, }, }, catch, (, RuntimeException]
[., getProperty, (, "user.timezone", ), ;, if, (, id, !=, null, ), {, temp, =, forID, (, id, ), ;]
[), ;, if, (, id, !=, null, ), {, temp, =, forID, (, id, ), ;, }, }, catch, (]
[), {, temp, =, forID, (, id, ), ;, }, }, catch, (, RuntimeException, ex, ), {, }, if, (]
[!=, null, ), {, temp, =, forID, (, id, ), ;, }, }, catch, (, RuntimeException, ex, ), {, }]
[), {, temp, =, forID, (, id, ), ;, }, }, catch, (, RuntimeException, ex, ), {, }, if, (]
[=, forID, (, id, ), ;, }, }, catch, (, RuntimeException, ex, ), {, }, if, (, temp, ==, null]
[;, }, }, catch, (, RuntimeException, ex, ), {, }, if, (, temp, ==, null, ), {, temp, =, forTimeZone]
[), ;, }, }, catch, (, RuntimeException, ex, ), {, }, if, (, temp, ==, null, ), {, temp, =]
[), {, temp, =, forTimeZone, (, TimeZone, ., getDefault, (, ), ), ;, }, }, catch, (, IllegalArgumentException, ex, )]
[==, null, ), {, temp, =, forTimeZone, (, TimeZone, ., getDefault, (, ), ), ;, }, }, catch, (, IllegalArgumentException]
[), {, temp, =, forTimeZone, (, TimeZone, ., getDefault, (, ), ), ;, }, }, catch, (, IllegalArgumentException, ex, )]
[=, forTimeZone, (, TimeZone, ., getDefault, (, ), ), ;, }, }, catch, (, IllegalArgumentException, ex, ), {, }, if]
[;, }, }, catch, (, IllegalArgumentException, ex, ), {, }, if, (, temp, ==, null, ), {, temp, =, UTC]
[), ;, }, }, catch, (, IllegalArgumentException, ex, ), {, }, if, (, temp, ==, null, ), {, temp, =]
[., getDefault, (, ), ), ;, }, }, catch, (, IllegalArgumentException, ex, ), {, }, if, (, temp, ==, null]
[), {, temp, =, UTC, ;, }, cDefault, =, zone, =, temp, ;, }, }, }, return, zone, ;, }]
[==, null, ), {, temp, =, UTC, ;, }, cDefault, =, zone, =, temp, ;, }, }, }, return, zone]
[), {, temp, =, UTC, ;, }, cDefault, =, zone, =, temp, ;, }, }, }, return, zone, ;, }]
[=, UTC, ;, }, cDefault, =, zone, =, temp, ;, }, }, }, return, zone, ;, }, public, static, void]
[;, }, cDefault, =, zone, =, temp, ;, }, }, }, return, zone, ;, }, public, static, void, setDefault, (]
[=, zone, =, temp, ;, }, }, }, return, zone, ;, }, public, static, void, setDefault, (, DateTimeZone, zone, )]
[=, temp, ;, }, }, }, return, zone, ;, }, public, static, void, setDefault, (, DateTimeZone, zone, ), throws, SecurityException]
[;, }, }, }, return, zone, ;, }, public, static, void, setDefault, (, DateTimeZone, zone, ), throws, SecurityException, {, SecurityManager]
[;, }, public, static, void, setDefault, (, DateTimeZone, zone, ), throws, SecurityException, {, SecurityManager, sm, =, System, ., getSecurityManager, (]
[;, if, (, sm, !=, null, ), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setDefault", ), ), ;, }]
[., getSecurityManager, (, ), ;, if, (, sm, !=, null, ), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setDefault"]
[), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setDefault", ), ), ;, }, if, (, zone, ==, null, )]
[!=, null, ), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setDefault", ), ), ;, }, if, (, zone, ==]
[), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setDefault", ), ), ;, }, if, (, zone, ==, null, )]
[;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "The datetime zone must not be null", ), ;, }, synchronized, (, DateTimeZone]
[., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setDefault", ), ), ;, }, if, (, zone, ==, null, ), {, throw, new]
[), ;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "The datetime zone must not be null", ), ;, }, synchronized, (]
[), ), ;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "The datetime zone must not be null", ), ;, }, synchronized]
[), {, throw, new, IllegalArgumentException, (, "The datetime zone must not be null", ), ;, }, synchronized, (, DateTimeZone, ., class, ), {, cDefault, =, zone]
[==, null, ), {, throw, new, IllegalArgumentException, (, "The datetime zone must not be null", ), ;, }, synchronized, (, DateTimeZone, ., class, ), {, cDefault]
[), {, throw, new, IllegalArgumentException, (, "The datetime zone must not be null", ), ;, }, synchronized, (, DateTimeZone, ., class, ), {, cDefault, =, zone]
[;, }, synchronized, (, DateTimeZone, ., class, ), {, cDefault, =, zone, ;, }, }, @, FromString, public, static, DateTimeZone]
[), ;, }, synchronized, (, DateTimeZone, ., class, ), {, cDefault, =, zone, ;, }, }, @, FromString, public, static]
[), {, cDefault, =, zone, ;, }, }, @, FromString, public, static, DateTimeZone, forID, (, String, id, ), {, if]
[=, zone, ;, }, }, @, FromString, public, static, DateTimeZone, forID, (, String, id, ), {, if, (, id, ==]
[;, }, }, @, FromString, public, static, DateTimeZone, forID, (, String, id, ), {, if, (, id, ==, null, )]
[), {, return, getDefault, (, ), ;, }, if, (, id, ., equals, (, "UTC", ), ), {, return, DateTimeZone]
[==, null, ), {, return, getDefault, (, ), ;, }, if, (, id, ., equals, (, "UTC", ), ), {]
[), {, return, getDefault, (, ), ;, }, if, (, id, ., equals, (, "UTC", ), ), {, return, DateTimeZone]
[;, }, if, (, id, ., equals, (, "UTC", ), ), {, return, DateTimeZone, ., UTC, ;, }, DateTimeZone, zone]
[), {, return, DateTimeZone, ., UTC, ;, }, DateTimeZone, zone, =, cProvider, ., getZone, (, id, ), ;, if, (]
[., equals, (, "UTC", ), ), {, return, DateTimeZone, ., UTC, ;, }, DateTimeZone, zone, =, cProvider, ., getZone, (]
[), ), {, return, DateTimeZone, ., UTC, ;, }, DateTimeZone, zone, =, cProvider, ., getZone, (, id, ), ;, if]
[;, }, DateTimeZone, zone, =, cProvider, ., getZone, (, id, ), ;, if, (, zone, !=, null, ), {, return]
[., UTC, ;, }, DateTimeZone, zone, =, cProvider, ., getZone, (, id, ), ;, if, (, zone, !=, null, )]
[;, if, (, zone, !=, null, ), {, return, zone, ;, }, if, (, id, ., startsWith, (, "+", )]
[., getZone, (, id, ), ;, if, (, zone, !=, null, ), {, return, zone, ;, }, if, (, id]
[), ;, if, (, zone, !=, null, ), {, return, zone, ;, }, if, (, id, ., startsWith, (, "+"]
[), {, return, zone, ;, }, if, (, id, ., startsWith, (, "+", ), ||, id, ., startsWith, (, "-"]
[!=, null, ), {, return, zone, ;, }, if, (, id, ., startsWith, (, "+", ), ||, id, ., startsWith]
[), {, return, zone, ;, }, if, (, id, ., startsWith, (, "+", ), ||, id, ., startsWith, (, "-"]
[;, }, if, (, id, ., startsWith, (, "+", ), ||, id, ., startsWith, (, "-", ), ), {, int]
[), {, int, offset, =, parseOffset, (, id, ), ;, if, (, offset, ==, 0L, ), {, return, DateTimeZone, .]
[||, id, ., startsWith, (, "-", ), ), {, int, offset, =, parseOffset, (, id, ), ;, if, (, offset]
[., startsWith, (, "+", ), ||, id, ., startsWith, (, "-", ), ), {, int, offset, =, parseOffset, (, id]
[), ||, id, ., startsWith, (, "-", ), ), {, int, offset, =, parseOffset, (, id, ), ;, if, (]
[), {, int, offset, =, parseOffset, (, id, ), ;, if, (, offset, ==, 0L, ), {, return, DateTimeZone, .]
[., startsWith, (, "-", ), ), {, int, offset, =, parseOffset, (, id, ), ;, if, (, offset, ==, 0L]
[), ), {, int, offset, =, parseOffset, (, id, ), ;, if, (, offset, ==, 0L, ), {, return, DateTimeZone]
[;, if, (, offset, ==, 0L, ), {, return, DateTimeZone, ., UTC, ;, }, else, {, id, =, printOffset, (]
[), ;, if, (, offset, ==, 0L, ), {, return, DateTimeZone, ., UTC, ;, }, else, {, id, =, printOffset]
[), {, return, DateTimeZone, ., UTC, ;, }, else, {, id, =, printOffset, (, offset, ), ;, return, fixedOffsetZone, (]
[==, 0L, ), {, return, DateTimeZone, ., UTC, ;, }, else, {, id, =, printOffset, (, offset, ), ;, return]
[), {, return, DateTimeZone, ., UTC, ;, }, else, {, id, =, printOffset, (, offset, ), ;, return, fixedOffsetZone, (]
[;, }, else, {, id, =, printOffset, (, offset, ), ;, return, fixedOffsetZone, (, id, ,, offset, ), ;, }]
[., UTC, ;, }, else, {, id, =, printOffset, (, offset, ), ;, return, fixedOffsetZone, (, id, ,, offset, )]
[=, printOffset, (, offset, ), ;, return, fixedOffsetZone, (, id, ,, offset, ), ;, }, }, throw, new, IllegalArgumentException, (]
[;, return, fixedOffsetZone, (, id, ,, offset, ), ;, }, }, throw, new, IllegalArgumentException, (, "The datetime zone id '", +, id, +, "' is not recognised"]
[), ;, return, fixedOffsetZone, (, id, ,, offset, ), ;, }, }, throw, new, IllegalArgumentException, (, "The datetime zone id '", +, id, +]
[;, }, }, throw, new, IllegalArgumentException, (, "The datetime zone id '", +, id, +, "' is not recognised", ), ;, }, public, static, DateTimeZone, forOffsetHours, (]
[,, offset, ), ;, }, }, throw, new, IllegalArgumentException, (, "The datetime zone id '", +, id, +, "' is not recognised", ), ;, }, public, static]
[), ;, }, }, throw, new, IllegalArgumentException, (, "The datetime zone id '", +, id, +, "' is not recognised", ), ;, }, public, static, DateTimeZone, forOffsetHours]
[;, }, public, static, DateTimeZone, forOffsetHours, (, int, hoursOffset, ), throws, IllegalArgumentException, {, return, forOffsetHoursMinutes, (, hoursOffset, ,, 0, )]
[), ;, }, public, static, DateTimeZone, forOffsetHours, (, int, hoursOffset, ), throws, IllegalArgumentException, {, return, forOffsetHoursMinutes, (, hoursOffset, ,, 0]
[+, "' is not recognised", ), ;, }, public, static, DateTimeZone, forOffsetHours, (, int, hoursOffset, ), throws, IllegalArgumentException, {, return, forOffsetHoursMinutes, (, hoursOffset]
[+, id, +, "' is not recognised", ), ;, }, public, static, DateTimeZone, forOffsetHours, (, int, hoursOffset, ), throws, IllegalArgumentException, {, return, forOffsetHoursMinutes]
[+, "' is not recognised", ), ;, }, public, static, DateTimeZone, forOffsetHours, (, int, hoursOffset, ), throws, IllegalArgumentException, {, return, forOffsetHoursMinutes, (, hoursOffset]
[), ;, }, public, static, DateTimeZone, forOffsetHours, (, int, hoursOffset, ), throws, IllegalArgumentException, {, return, forOffsetHoursMinutes, (, hoursOffset, ,, 0]
[;, }, public, static, DateTimeZone, forOffsetHoursMinutes, (, int, hoursOffset, ,, int, minutesOffset, ), throws, IllegalArgumentException, {, if, (, hoursOffset, ==]
[,, 0, ), ;, }, public, static, DateTimeZone, forOffsetHoursMinutes, (, int, hoursOffset, ,, int, minutesOffset, ), throws, IllegalArgumentException, {, if]
[), ;, }, public, static, DateTimeZone, forOffsetHoursMinutes, (, int, hoursOffset, ,, int, minutesOffset, ), throws, IllegalArgumentException, {, if, (, hoursOffset]
[), {, return, DateTimeZone, ., UTC, ;, }, if, (, hoursOffset, <, -, 23, ||, hoursOffset, >, 23, ), {]
[&&, minutesOffset, ==, 0, ), {, return, DateTimeZone, ., UTC, ;, }, if, (, hoursOffset, <, -, 23, ||, hoursOffset]
[==, 0, &&, minutesOffset, ==, 0, ), {, return, DateTimeZone, ., UTC, ;, }, if, (, hoursOffset, <, -, 23]
[&&, minutesOffset, ==, 0, ), {, return, DateTimeZone, ., UTC, ;, }, if, (, hoursOffset, <, -, 23, ||, hoursOffset]
[), {, return, DateTimeZone, ., UTC, ;, }, if, (, hoursOffset, <, -, 23, ||, hoursOffset, >, 23, ), {]
[==, 0, ), {, return, DateTimeZone, ., UTC, ;, }, if, (, hoursOffset, <, -, 23, ||, hoursOffset, >, 23]
[), {, return, DateTimeZone, ., UTC, ;, }, if, (, hoursOffset, <, -, 23, ||, hoursOffset, >, 23, ), {]
[;, }, if, (, hoursOffset, <, -, 23, ||, hoursOffset, >, 23, ), {, throw, new, IllegalArgumentException, (, "Hours out of range: ", +]
[., UTC, ;, }, if, (, hoursOffset, <, -, 23, ||, hoursOffset, >, 23, ), {, throw, new, IllegalArgumentException, (]
[), {, throw, new, IllegalArgumentException, (, "Hours out of range: ", +, hoursOffset, ), ;, }, if, (, minutesOffset, <, -, 59, ||, minutesOffset]
[||, hoursOffset, >, 23, ), {, throw, new, IllegalArgumentException, (, "Hours out of range: ", +, hoursOffset, ), ;, }, if, (, minutesOffset, <]
[<, -, 23, ||, hoursOffset, >, 23, ), {, throw, new, IllegalArgumentException, (, "Hours out of range: ", +, hoursOffset, ), ;, }, if]
[||, hoursOffset, >, 23, ), {, throw, new, IllegalArgumentException, (, "Hours out of range: ", +, hoursOffset, ), ;, }, if, (, minutesOffset, <]
[||, hoursOffset, >, 23, ), {, throw, new, IllegalArgumentException, (, "Hours out of range: ", +, hoursOffset, ), ;, }, if, (, minutesOffset, <]
[), {, throw, new, IllegalArgumentException, (, "Hours out of range: ", +, hoursOffset, ), ;, }, if, (, minutesOffset, <, -, 59, ||, minutesOffset]
[>, 23, ), {, throw, new, IllegalArgumentException, (, "Hours out of range: ", +, hoursOffset, ), ;, }, if, (, minutesOffset, <, -, 59]
[), {, throw, new, IllegalArgumentException, (, "Hours out of range: ", +, hoursOffset, ), ;, }, if, (, minutesOffset, <, -, 59, ||, minutesOffset]
[;, }, if, (, minutesOffset, <, -, 59, ||, minutesOffset, >, 59, ), {, throw, new, IllegalArgumentException, (, "Minutes out of range: ", +]
[), ;, }, if, (, minutesOffset, <, -, 59, ||, minutesOffset, >, 59, ), {, throw, new, IllegalArgumentException, (, "Minutes out of range: "]
[+, hoursOffset, ), ;, }, if, (, minutesOffset, <, -, 59, ||, minutesOffset, >, 59, ), {, throw, new, IllegalArgumentException]
[), ;, }, if, (, minutesOffset, <, -, 59, ||, minutesOffset, >, 59, ), {, throw, new, IllegalArgumentException, (, "Minutes out of range: "]
[), {, throw, new, IllegalArgumentException, (, "Minutes out of range: ", +, minutesOffset, ), ;, }, if, (, hoursOffset, >, 0, &&, minutesOffset, <]
[||, minutesOffset, >, 59, ), {, throw, new, IllegalArgumentException, (, "Minutes out of range: ", +, minutesOffset, ), ;, }, if, (, hoursOffset, >]
[<, -, 59, ||, minutesOffset, >, 59, ), {, throw, new, IllegalArgumentException, (, "Minutes out of range: ", +, minutesOffset, ), ;, }, if]
[||, minutesOffset, >, 59, ), {, throw, new, IllegalArgumentException, (, "Minutes out of range: ", +, minutesOffset, ), ;, }, if, (, hoursOffset, >]
[||, minutesOffset, >, 59, ), {, throw, new, IllegalArgumentException, (, "Minutes out of range: ", +, minutesOffset, ), ;, }, if, (, hoursOffset, >]
[), {, throw, new, IllegalArgumentException, (, "Minutes out of range: ", +, minutesOffset, ), ;, }, if, (, hoursOffset, >, 0, &&, minutesOffset, <]
[>, 59, ), {, throw, new, IllegalArgumentException, (, "Minutes out of range: ", +, minutesOffset, ), ;, }, if, (, hoursOffset, >, 0, &&]
[), {, throw, new, IllegalArgumentException, (, "Minutes out of range: ", +, minutesOffset, ), ;, }, if, (, hoursOffset, >, 0, &&, minutesOffset, <]
[;, }, if, (, hoursOffset, >, 0, &&, minutesOffset, <, 0, ), {, throw, new, IllegalArgumentException, (, "Positive hours must not have negative minutes: ", +, minutesOffset]
[), ;, }, if, (, hoursOffset, >, 0, &&, minutesOffset, <, 0, ), {, throw, new, IllegalArgumentException, (, "Positive hours must not have negative minutes: ", +]
[+, minutesOffset, ), ;, }, if, (, hoursOffset, >, 0, &&, minutesOffset, <, 0, ), {, throw, new, IllegalArgumentException, (]
[), ;, }, if, (, hoursOffset, >, 0, &&, minutesOffset, <, 0, ), {, throw, new, IllegalArgumentException, (, "Positive hours must not have negative minutes: ", +]
[), {, throw, new, IllegalArgumentException, (, "Positive hours must not have negative minutes: ", +, minutesOffset, ), ;, }, int, offset, =, 0, ;, try, {, int]
[&&, minutesOffset, <, 0, ), {, throw, new, IllegalArgumentException, (, "Positive hours must not have negative minutes: ", +, minutesOffset, ), ;, }, int, offset, =, 0]
[>, 0, &&, minutesOffset, <, 0, ), {, throw, new, IllegalArgumentException, (, "Positive hours must not have negative minutes: ", +, minutesOffset, ), ;, }, int, offset]
[&&, minutesOffset, <, 0, ), {, throw, new, IllegalArgumentException, (, "Positive hours must not have negative minutes: ", +, minutesOffset, ), ;, }, int, offset, =, 0]
[), {, throw, new, IllegalArgumentException, (, "Positive hours must not have negative minutes: ", +, minutesOffset, ), ;, }, int, offset, =, 0, ;, try, {, int]
[<, 0, ), {, throw, new, IllegalArgumentException, (, "Positive hours must not have negative minutes: ", +, minutesOffset, ), ;, }, int, offset, =, 0, ;, try]
[), {, throw, new, IllegalArgumentException, (, "Positive hours must not have negative minutes: ", +, minutesOffset, ), ;, }, int, offset, =, 0, ;, try, {, int]
[;, }, int, offset, =, 0, ;, try, {, int, hoursInMinutes, =, hoursOffset, *, 60, ;, if, (, hoursInMinutes, <]
[), ;, }, int, offset, =, 0, ;, try, {, int, hoursInMinutes, =, hoursOffset, *, 60, ;, if, (, hoursInMinutes]
[+, minutesOffset, ), ;, }, int, offset, =, 0, ;, try, {, int, hoursInMinutes, =, hoursOffset, *, 60, ;, if]
[), ;, }, int, offset, =, 0, ;, try, {, int, hoursInMinutes, =, hoursOffset, *, 60, ;, if, (, hoursInMinutes]
[;, try, {, int, hoursInMinutes, =, hoursOffset, *, 60, ;, if, (, hoursInMinutes, <, 0, ), {, minutesOffset, =, hoursInMinutes]
[;, if, (, hoursInMinutes, <, 0, ), {, minutesOffset, =, hoursInMinutes, -, Math, ., abs, (, minutesOffset, ), ;, }]
[*, 60, ;, if, (, hoursInMinutes, <, 0, ), {, minutesOffset, =, hoursInMinutes, -, Math, ., abs, (, minutesOffset, )]
[;, if, (, hoursInMinutes, <, 0, ), {, minutesOffset, =, hoursInMinutes, -, Math, ., abs, (, minutesOffset, ), ;, }]
[), {, minutesOffset, =, hoursInMinutes, -, Math, ., abs, (, minutesOffset, ), ;, }, else, {, minutesOffset, =, hoursInMinutes, +]
[<, 0, ), {, minutesOffset, =, hoursInMinutes, -, Math, ., abs, (, minutesOffset, ), ;, }, else, {, minutesOffset, =]
[), {, minutesOffset, =, hoursInMinutes, -, Math, ., abs, (, minutesOffset, ), ;, }, else, {, minutesOffset, =, hoursInMinutes, +]
[=, hoursInMinutes, -, Math, ., abs, (, minutesOffset, ), ;, }, else, {, minutesOffset, =, hoursInMinutes, +, minutesOffset, ;, }]
[;, }, else, {, minutesOffset, =, hoursInMinutes, +, minutesOffset, ;, }, offset, =, FieldUtils, ., safeMultiply, (, minutesOffset, ,, DateTimeConstants]
[-, Math, ., abs, (, minutesOffset, ), ;, }, else, {, minutesOffset, =, hoursInMinutes, +, minutesOffset, ;, }, offset, =]
[;, }, else, {, minutesOffset, =, hoursInMinutes, +, minutesOffset, ;, }, offset, =, FieldUtils, ., safeMultiply, (, minutesOffset, ,, DateTimeConstants]
[., abs, (, minutesOffset, ), ;, }, else, {, minutesOffset, =, hoursInMinutes, +, minutesOffset, ;, }, offset, =, FieldUtils, .]
[), ;, }, else, {, minutesOffset, =, hoursInMinutes, +, minutesOffset, ;, }, offset, =, FieldUtils, ., safeMultiply, (, minutesOffset, ,]
[=, hoursInMinutes, +, minutesOffset, ;, }, offset, =, FieldUtils, ., safeMultiply, (, minutesOffset, ,, DateTimeConstants, ., MILLIS_PER_MINUTE, ), ;, }]
[;, }, offset, =, FieldUtils, ., safeMultiply, (, minutesOffset, ,, DateTimeConstants, ., MILLIS_PER_MINUTE, ), ;, }, catch, (, ArithmeticException, ex]
[+, minutesOffset, ;, }, offset, =, FieldUtils, ., safeMultiply, (, minutesOffset, ,, DateTimeConstants, ., MILLIS_PER_MINUTE, ), ;, }, catch, (]
[;, }, offset, =, FieldUtils, ., safeMultiply, (, minutesOffset, ,, DateTimeConstants, ., MILLIS_PER_MINUTE, ), ;, }, catch, (, ArithmeticException, ex]
[=, FieldUtils, ., safeMultiply, (, minutesOffset, ,, DateTimeConstants, ., MILLIS_PER_MINUTE, ), ;, }, catch, (, ArithmeticException, ex, ), {, throw]
[;, }, catch, (, ArithmeticException, ex, ), {, throw, new, IllegalArgumentException, (, "Offset is too large", ), ;, }, return, forOffsetMillis, (, offset]
[., safeMultiply, (, minutesOffset, ,, DateTimeConstants, ., MILLIS_PER_MINUTE, ), ;, }, catch, (, ArithmeticException, ex, ), {, throw, new, IllegalArgumentException]
[,, DateTimeConstants, ., MILLIS_PER_MINUTE, ), ;, }, catch, (, ArithmeticException, ex, ), {, throw, new, IllegalArgumentException, (, "Offset is too large", ), ;]
[), ;, }, catch, (, ArithmeticException, ex, ), {, throw, new, IllegalArgumentException, (, "Offset is too large", ), ;, }, return, forOffsetMillis, (]
[., MILLIS_PER_MINUTE, ), ;, }, catch, (, ArithmeticException, ex, ), {, throw, new, IllegalArgumentException, (, "Offset is too large", ), ;, }, return]
[;, }, return, forOffsetMillis, (, offset, ), ;, }, public, static, DateTimeZone, forOffsetMillis, (, int, millisOffset, ), {, if, (]
[), ;, }, return, forOffsetMillis, (, offset, ), ;, }, public, static, DateTimeZone, forOffsetMillis, (, int, millisOffset, ), {, if]
[;, }, public, static, DateTimeZone, forOffsetMillis, (, int, millisOffset, ), {, if, (, millisOffset, <, -, MAX_MILLIS, ||, millisOffset, >]
[), ;, }, public, static, DateTimeZone, forOffsetMillis, (, int, millisOffset, ), {, if, (, millisOffset, <, -, MAX_MILLIS, ||, millisOffset]
[), {, throw, new, IllegalArgumentException, (, "Millis out of range: ", +, millisOffset, ), ;, }, String, id, =, printOffset, (, millisOffset, ), ;]
[||, millisOffset, >, MAX_MILLIS, ), {, throw, new, IllegalArgumentException, (, "Millis out of range: ", +, millisOffset, ), ;, }, String, id, =, printOffset]
[<, -, MAX_MILLIS, ||, millisOffset, >, MAX_MILLIS, ), {, throw, new, IllegalArgumentException, (, "Millis out of range: ", +, millisOffset, ), ;, }, String]
[||, millisOffset, >, MAX_MILLIS, ), {, throw, new, IllegalArgumentException, (, "Millis out of range: ", +, millisOffset, ), ;, }, String, id, =, printOffset]
[||, millisOffset, >, MAX_MILLIS, ), {, throw, new, IllegalArgumentException, (, "Millis out of range: ", +, millisOffset, ), ;, }, String, id, =, printOffset]
[), {, throw, new, IllegalArgumentException, (, "Millis out of range: ", +, millisOffset, ), ;, }, String, id, =, printOffset, (, millisOffset, ), ;]
[>, MAX_MILLIS, ), {, throw, new, IllegalArgumentException, (, "Millis out of range: ", +, millisOffset, ), ;, }, String, id, =, printOffset, (, millisOffset]
[), {, throw, new, IllegalArgumentException, (, "Millis out of range: ", +, millisOffset, ), ;, }, String, id, =, printOffset, (, millisOffset, ), ;]
[;, }, String, id, =, printOffset, (, millisOffset, ), ;, return, fixedOffsetZone, (, id, ,, millisOffset, ), ;, }, public]
[), ;, }, String, id, =, printOffset, (, millisOffset, ), ;, return, fixedOffsetZone, (, id, ,, millisOffset, ), ;, }]
[+, millisOffset, ), ;, }, String, id, =, printOffset, (, millisOffset, ), ;, return, fixedOffsetZone, (, id, ,, millisOffset, )]
[), ;, }, String, id, =, printOffset, (, millisOffset, ), ;, return, fixedOffsetZone, (, id, ,, millisOffset, ), ;, }]
[;, return, fixedOffsetZone, (, id, ,, millisOffset, ), ;, }, public, static, DateTimeZone, forTimeZone, (, TimeZone, zone, ), {, if]
[), ;, return, fixedOffsetZone, (, id, ,, millisOffset, ), ;, }, public, static, DateTimeZone, forTimeZone, (, TimeZone, zone, ), {]
[;, }, public, static, DateTimeZone, forTimeZone, (, TimeZone, zone, ), {, if, (, zone, ==, null, ), {, return, getDefault]
[,, millisOffset, ), ;, }, public, static, DateTimeZone, forTimeZone, (, TimeZone, zone, ), {, if, (, zone, ==, null, )]
[), ;, }, public, static, DateTimeZone, forTimeZone, (, TimeZone, zone, ), {, if, (, zone, ==, null, ), {, return]
[), {, return, getDefault, (, ), ;, }, final, String, id, =, zone, ., getID, (, ), ;, if, (]
[==, null, ), {, return, getDefault, (, ), ;, }, final, String, id, =, zone, ., getID, (, ), ;]
[), {, return, getDefault, (, ), ;, }, final, String, id, =, zone, ., getID, (, ), ;, if, (]
[;, }, final, String, id, =, zone, ., getID, (, ), ;, if, (, id, ., equals, (, "UTC", )]
[;, if, (, id, ., equals, (, "UTC", ), ), {, return, DateTimeZone, ., UTC, ;, }, DateTimeZone, dtz, =]
[., getID, (, ), ;, if, (, id, ., equals, (, "UTC", ), ), {, return, DateTimeZone, ., UTC, ;]
[), {, return, DateTimeZone, ., UTC, ;, }, DateTimeZone, dtz, =, null, ;, String, convId, =, getConvertedId, (, id, )]
[., equals, (, "UTC", ), ), {, return, DateTimeZone, ., UTC, ;, }, DateTimeZone, dtz, =, null, ;, String, convId]
[), ), {, return, DateTimeZone, ., UTC, ;, }, DateTimeZone, dtz, =, null, ;, String, convId, =, getConvertedId, (, id]
[;, }, DateTimeZone, dtz, =, null, ;, String, convId, =, getConvertedId, (, id, ), ;, if, (, convId, !=, null]
[., UTC, ;, }, DateTimeZone, dtz, =, null, ;, String, convId, =, getConvertedId, (, id, ), ;, if, (, convId]
[;, String, convId, =, getConvertedId, (, id, ), ;, if, (, convId, !=, null, ), {, dtz, =, cProvider, .]
[;, if, (, convId, !=, null, ), {, dtz, =, cProvider, ., getZone, (, convId, ), ;, }, if, (]
[), ;, if, (, convId, !=, null, ), {, dtz, =, cProvider, ., getZone, (, convId, ), ;, }, if]
[), {, dtz, =, cProvider, ., getZone, (, convId, ), ;, }, if, (, dtz, ==, null, ), {, dtz]
[!=, null, ), {, dtz, =, cProvider, ., getZone, (, convId, ), ;, }, if, (, dtz, ==, null, )]
[), {, dtz, =, cProvider, ., getZone, (, convId, ), ;, }, if, (, dtz, ==, null, ), {, dtz]
[=, cProvider, ., getZone, (, convId, ), ;, }, if, (, dtz, ==, null, ), {, dtz, =, cProvider, .]
[;, }, if, (, dtz, ==, null, ), {, dtz, =, cProvider, ., getZone, (, id, ), ;, }, if]
[., getZone, (, convId, ), ;, }, if, (, dtz, ==, null, ), {, dtz, =, cProvider, ., getZone, (]
[), ;, }, if, (, dtz, ==, null, ), {, dtz, =, cProvider, ., getZone, (, id, ), ;, }]
[), {, dtz, =, cProvider, ., getZone, (, id, ), ;, }, if, (, dtz, !=, null, ), {, return]
[==, null, ), {, dtz, =, cProvider, ., getZone, (, id, ), ;, }, if, (, dtz, !=, null, )]
[), {, dtz, =, cProvider, ., getZone, (, id, ), ;, }, if, (, dtz, !=, null, ), {, return]
[=, cProvider, ., getZone, (, id, ), ;, }, if, (, dtz, !=, null, ), {, return, dtz, ;, }]
[;, }, if, (, dtz, !=, null, ), {, return, dtz, ;, }, if, (, convId, ==, null, ), {]
[., getZone, (, id, ), ;, }, if, (, dtz, !=, null, ), {, return, dtz, ;, }, if, (]
[), ;, }, if, (, dtz, !=, null, ), {, return, dtz, ;, }, if, (, convId, ==, null, )]
[), {, return, dtz, ;, }, if, (, convId, ==, null, ), {, convId, =, zone, ., getID, (, )]
[!=, null, ), {, return, dtz, ;, }, if, (, convId, ==, null, ), {, convId, =, zone, ., getID]
[), {, return, dtz, ;, }, if, (, convId, ==, null, ), {, convId, =, zone, ., getID, (, )]
[;, }, if, (, convId, ==, null, ), {, convId, =, zone, ., getID, (, ), ;, if, (, convId]
[), {, convId, =, zone, ., getID, (, ), ;, if, (, convId, ., startsWith, (, "GMT+", ), ||, convId]
[==, null, ), {, convId, =, zone, ., getID, (, ), ;, if, (, convId, ., startsWith, (, "GMT+", )]
[), {, convId, =, zone, ., getID, (, ), ;, if, (, convId, ., startsWith, (, "GMT+", ), ||, convId]
[=, zone, ., getID, (, ), ;, if, (, convId, ., startsWith, (, "GMT+", ), ||, convId, ., startsWith, (]
[;, if, (, convId, ., startsWith, (, "GMT+", ), ||, convId, ., startsWith, (, "GMT-", ), ), {, convId, =]
[., getID, (, ), ;, if, (, convId, ., startsWith, (, "GMT+", ), ||, convId, ., startsWith, (, "GMT-", )]
[), {, convId, =, convId, ., substring, (, 3, ), ;, int, offset, =, parseOffset, (, convId, ), ;, if]
[||, convId, ., startsWith, (, "GMT-", ), ), {, convId, =, convId, ., substring, (, 3, ), ;, int, offset]
[., startsWith, (, "GMT+", ), ||, convId, ., startsWith, (, "GMT-", ), ), {, convId, =, convId, ., substring, (]
[), ||, convId, ., startsWith, (, "GMT-", ), ), {, convId, =, convId, ., substring, (, 3, ), ;, int]
[), {, convId, =, convId, ., substring, (, 3, ), ;, int, offset, =, parseOffset, (, convId, ), ;, if]
[., startsWith, (, "GMT-", ), ), {, convId, =, convId, ., substring, (, 3, ), ;, int, offset, =, parseOffset]
[), ), {, convId, =, convId, ., substring, (, 3, ), ;, int, offset, =, parseOffset, (, convId, ), ;]
[=, convId, ., substring, (, 3, ), ;, int, offset, =, parseOffset, (, convId, ), ;, if, (, offset, ==]
[;, int, offset, =, parseOffset, (, convId, ), ;, if, (, offset, ==, 0L, ), {, return, DateTimeZone, ., UTC]
[., substring, (, 3, ), ;, int, offset, =, parseOffset, (, convId, ), ;, if, (, offset, ==, 0L, )]
[), ;, int, offset, =, parseOffset, (, convId, ), ;, if, (, offset, ==, 0L, ), {, return, DateTimeZone, .]
[;, if, (, offset, ==, 0L, ), {, return, DateTimeZone, ., UTC, ;, }, else, {, convId, =, printOffset, (]
[), ;, if, (, offset, ==, 0L, ), {, return, DateTimeZone, ., UTC, ;, }, else, {, convId, =, printOffset]
[), {, return, DateTimeZone, ., UTC, ;, }, else, {, convId, =, printOffset, (, offset, ), ;, return, fixedOffsetZone, (]
[==, 0L, ), {, return, DateTimeZone, ., UTC, ;, }, else, {, convId, =, printOffset, (, offset, ), ;, return]
[), {, return, DateTimeZone, ., UTC, ;, }, else, {, convId, =, printOffset, (, offset, ), ;, return, fixedOffsetZone, (]
[;, }, else, {, convId, =, printOffset, (, offset, ), ;, return, fixedOffsetZone, (, convId, ,, offset, ), ;, }]
[., UTC, ;, }, else, {, convId, =, printOffset, (, offset, ), ;, return, fixedOffsetZone, (, convId, ,, offset, )]
[=, printOffset, (, offset, ), ;, return, fixedOffsetZone, (, convId, ,, offset, ), ;, }, }, }, throw, new, IllegalArgumentException]
[;, return, fixedOffsetZone, (, convId, ,, offset, ), ;, }, }, }, throw, new, IllegalArgumentException, (, "The datetime zone id '", +, id, +]
[), ;, return, fixedOffsetZone, (, convId, ,, offset, ), ;, }, }, }, throw, new, IllegalArgumentException, (, "The datetime zone id '", +, id]
[;, }, }, }, throw, new, IllegalArgumentException, (, "The datetime zone id '", +, id, +, "' is not recognised", ), ;, }, private, static, synchronized, DateTimeZone]
[,, offset, ), ;, }, }, }, throw, new, IllegalArgumentException, (, "The datetime zone id '", +, id, +, "' is not recognised", ), ;, }, private]
[), ;, }, }, }, throw, new, IllegalArgumentException, (, "The datetime zone id '", +, id, +, "' is not recognised", ), ;, }, private, static, synchronized]
[;, }, private, static, synchronized, DateTimeZone, fixedOffsetZone, (, String, id, ,, int, offset, ), {, if, (, offset, ==, 0]
[), ;, }, private, static, synchronized, DateTimeZone, fixedOffsetZone, (, String, id, ,, int, offset, ), {, if, (, offset, ==]
[+, "' is not recognised", ), ;, }, private, static, synchronized, DateTimeZone, fixedOffsetZone, (, String, id, ,, int, offset, ), {, if, (]
[+, id, +, "' is not recognised", ), ;, }, private, static, synchronized, DateTimeZone, fixedOffsetZone, (, String, id, ,, int, offset, ), {]
[+, "' is not recognised", ), ;, }, private, static, synchronized, DateTimeZone, fixedOffsetZone, (, String, id, ,, int, offset, ), {, if, (]
[), ;, }, private, static, synchronized, DateTimeZone, fixedOffsetZone, (, String, id, ,, int, offset, ), {, if, (, offset, ==]
[), {, return, DateTimeZone, ., UTC, ;, }, if, (, iFixedOffsetCache, ==, null, ), {, iFixedOffsetCache, =, new, HashMap, <]
[==, 0, ), {, return, DateTimeZone, ., UTC, ;, }, if, (, iFixedOffsetCache, ==, null, ), {, iFixedOffsetCache, =, new]
[), {, return, DateTimeZone, ., UTC, ;, }, if, (, iFixedOffsetCache, ==, null, ), {, iFixedOffsetCache, =, new, HashMap, <]
[;, }, if, (, iFixedOffsetCache, ==, null, ), {, iFixedOffsetCache, =, new, HashMap, <, String, ,, SoftReference, <, DateTimeZone, >]
[., UTC, ;, }, if, (, iFixedOffsetCache, ==, null, ), {, iFixedOffsetCache, =, new, HashMap, <, String, ,, SoftReference, <]
[), {, iFixedOffsetCache, =, new, HashMap, <, String, ,, SoftReference, <, DateTimeZone, >, >, (, ), ;, }, DateTimeZone, zone]
[==, null, ), {, iFixedOffsetCache, =, new, HashMap, <, String, ,, SoftReference, <, DateTimeZone, >, >, (, ), ;, }]
[), {, iFixedOffsetCache, =, new, HashMap, <, String, ,, SoftReference, <, DateTimeZone, >, >, (, ), ;, }, DateTimeZone, zone]
[=, new, HashMap, <, String, ,, SoftReference, <, DateTimeZone, >, >, (, ), ;, }, DateTimeZone, zone, ;, Reference, <]
[;, }, DateTimeZone, zone, ;, Reference, <, DateTimeZone, >, ref, =, iFixedOffsetCache, ., get, (, id, ), ;, if, (]
[;, if, (, ref, !=, null, ), {, zone, =, ref, ., get, (, ), ;, if, (, zone, !=]
[., get, (, id, ), ;, if, (, ref, !=, null, ), {, zone, =, ref, ., get, (, )]
[), ;, if, (, ref, !=, null, ), {, zone, =, ref, ., get, (, ), ;, if, (, zone]
[), {, zone, =, ref, ., get, (, ), ;, if, (, zone, !=, null, ), {, return, zone, ;]
[!=, null, ), {, zone, =, ref, ., get, (, ), ;, if, (, zone, !=, null, ), {, return]
[), {, zone, =, ref, ., get, (, ), ;, if, (, zone, !=, null, ), {, return, zone, ;]
[=, ref, ., get, (, ), ;, if, (, zone, !=, null, ), {, return, zone, ;, }, }, zone]
[;, if, (, zone, !=, null, ), {, return, zone, ;, }, }, zone, =, new, FixedDateTimeZone, (, id, ,]
[., get, (, ), ;, if, (, zone, !=, null, ), {, return, zone, ;, }, }, zone, =, new]
[), {, return, zone, ;, }, }, zone, =, new, FixedDateTimeZone, (, id, ,, null, ,, offset, ,, offset, )]
[!=, null, ), {, return, zone, ;, }, }, zone, =, new, FixedDateTimeZone, (, id, ,, null, ,, offset, ,]
[), {, return, zone, ;, }, }, zone, =, new, FixedDateTimeZone, (, id, ,, null, ,, offset, ,, offset, )]
[;, }, }, zone, =, new, FixedDateTimeZone, (, id, ,, null, ,, offset, ,, offset, ), ;, iFixedOffsetCache, ., put]
[=, new, FixedDateTimeZone, (, id, ,, null, ,, offset, ,, offset, ), ;, iFixedOffsetCache, ., put, (, id, ,, new]
[;, iFixedOffsetCache, ., put, (, id, ,, new, SoftReference, <, DateTimeZone, >, (, zone, ), ), ;, return, zone, ;]
[,, null, ,, offset, ,, offset, ), ;, iFixedOffsetCache, ., put, (, id, ,, new, SoftReference, <, DateTimeZone, >, (]
[,, offset, ,, offset, ), ;, iFixedOffsetCache, ., put, (, id, ,, new, SoftReference, <, DateTimeZone, >, (, zone, )]
[,, offset, ), ;, iFixedOffsetCache, ., put, (, id, ,, new, SoftReference, <, DateTimeZone, >, (, zone, ), ), ;]
[), ;, iFixedOffsetCache, ., put, (, id, ,, new, SoftReference, <, DateTimeZone, >, (, zone, ), ), ;, return, zone]
[;, return, zone, ;, }, public, static, Set, <, String, >, getAvailableIDs, (, ), {, return, cAvailableIDs, ;, }, public]
[., put, (, id, ,, new, SoftReference, <, DateTimeZone, >, (, zone, ), ), ;, return, zone, ;, }, public]
[,, new, SoftReference, <, DateTimeZone, >, (, zone, ), ), ;, return, zone, ;, }, public, static, Set, <, String]
[), ;, return, zone, ;, }, public, static, Set, <, String, >, getAvailableIDs, (, ), {, return, cAvailableIDs, ;, }]
[), ), ;, return, zone, ;, }, public, static, Set, <, String, >, getAvailableIDs, (, ), {, return, cAvailableIDs, ;]
[;, }, public, static, Set, <, String, >, getAvailableIDs, (, ), {, return, cAvailableIDs, ;, }, public, static, Provider, getProvider]
[;, }, public, static, Provider, getProvider, (, ), {, return, cProvider, ;, }, public, static, void, setProvider, (, Provider, provider]
[;, }, public, static, void, setProvider, (, Provider, provider, ), throws, SecurityException, {, SecurityManager, sm, =, System, ., getSecurityManager, (]
[;, if, (, sm, !=, null, ), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setProvider", ), ), ;, }]
[., getSecurityManager, (, ), ;, if, (, sm, !=, null, ), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setProvider"]
[), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setProvider", ), ), ;, }, setProvider0, (, provider, ), ;, }]
[!=, null, ), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setProvider", ), ), ;, }, setProvider0, (, provider, )]
[), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setProvider", ), ), ;, }, setProvider0, (, provider, ), ;, }]
[;, }, setProvider0, (, provider, ), ;, }, private, static, void, setProvider0, (, Provider, provider, ), {, if, (, provider]
[., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setProvider", ), ), ;, }, setProvider0, (, provider, ), ;, }, private, static, void]
[), ;, }, setProvider0, (, provider, ), ;, }, private, static, void, setProvider0, (, Provider, provider, ), {, if, (]
[), ), ;, }, setProvider0, (, provider, ), ;, }, private, static, void, setProvider0, (, Provider, provider, ), {, if]
[;, }, private, static, void, setProvider0, (, Provider, provider, ), {, if, (, provider, ==, null, ), {, provider, =]
[), ;, }, private, static, void, setProvider0, (, Provider, provider, ), {, if, (, provider, ==, null, ), {, provider]
[), {, provider, =, getDefaultProvider, (, ), ;, }, Set, <, String, >, ids, =, provider, ., getAvailableIDs, (, )]
[==, null, ), {, provider, =, getDefaultProvider, (, ), ;, }, Set, <, String, >, ids, =, provider, ., getAvailableIDs]
[), {, provider, =, getDefaultProvider, (, ), ;, }, Set, <, String, >, ids, =, provider, ., getAvailableIDs, (, )]
[=, getDefaultProvider, (, ), ;, }, Set, <, String, >, ids, =, provider, ., getAvailableIDs, (, ), ;, if, (]
[;, }, Set, <, String, >, ids, =, provider, ., getAvailableIDs, (, ), ;, if, (, ids, ==, null, ||]
[;, if, (, ids, ==, null, ||, ids, ., size, (, ), ==, 0, ), {, throw, new, IllegalArgumentException, (]
[., getAvailableIDs, (, ), ;, if, (, ids, ==, null, ||, ids, ., size, (, ), ==, 0, ), {]
[), {, throw, new, IllegalArgumentException, (, "The provider doesn't have any available ids", ), ;, }, if, (, !, ids, ., contains, (, "UTC", ), )]
[||, ids, ., size, (, ), ==, 0, ), {, throw, new, IllegalArgumentException, (, "The provider doesn't have any available ids", ), ;, }, if, (]
[==, null, ||, ids, ., size, (, ), ==, 0, ), {, throw, new, IllegalArgumentException, (, "The provider doesn't have any available ids", ), ;, }]
[||, ids, ., size, (, ), ==, 0, ), {, throw, new, IllegalArgumentException, (, "The provider doesn't have any available ids", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "The provider doesn't have any available ids", ), ;, }, if, (, !, ids, ., contains, (, "UTC", ), )]
[==, 0, ), {, throw, new, IllegalArgumentException, (, "The provider doesn't have any available ids", ), ;, }, if, (, !, ids, ., contains, (, "UTC"]
[., size, (, ), ==, 0, ), {, throw, new, IllegalArgumentException, (, "The provider doesn't have any available ids", ), ;, }, if, (, !, ids]
[), {, throw, new, IllegalArgumentException, (, "The provider doesn't have any available ids", ), ;, }, if, (, !, ids, ., contains, (, "UTC", ), )]
[;, }, if, (, !, ids, ., contains, (, "UTC", ), ), {, throw, new, IllegalArgumentException, (, "The provider doesn't support UTC", ), ;]
[), ;, }, if, (, !, ids, ., contains, (, "UTC", ), ), {, throw, new, IllegalArgumentException, (, "The provider doesn't support UTC", )]
[), {, throw, new, IllegalArgumentException, (, "The provider doesn't support UTC", ), ;, }, if, (, !, UTC, ., equals, (, provider, ., getZone]
[), {, throw, new, IllegalArgumentException, (, "The provider doesn't support UTC", ), ;, }, if, (, !, UTC, ., equals, (, provider, ., getZone]
[., contains, (, "UTC", ), ), {, throw, new, IllegalArgumentException, (, "The provider doesn't support UTC", ), ;, }, if, (, !, UTC, .]
[), ), {, throw, new, IllegalArgumentException, (, "The provider doesn't support UTC", ), ;, }, if, (, !, UTC, ., equals, (, provider, .]
[;, }, if, (, !, UTC, ., equals, (, provider, ., getZone, (, "UTC", ), ), ), {, throw, new]
[), ;, }, if, (, !, UTC, ., equals, (, provider, ., getZone, (, "UTC", ), ), ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Invalid UTC zone provided", ), ;, }, cProvider, =, provider, ;, cAvailableIDs, =, ids, ;, }, private]
[), {, throw, new, IllegalArgumentException, (, "Invalid UTC zone provided", ), ;, }, cProvider, =, provider, ;, cAvailableIDs, =, ids, ;, }, private]
[., equals, (, provider, ., getZone, (, "UTC", ), ), ), {, throw, new, IllegalArgumentException, (, "Invalid UTC zone provided", ), ;, }]
[), ), {, throw, new, IllegalArgumentException, (, "Invalid UTC zone provided", ), ;, }, cProvider, =, provider, ;, cAvailableIDs, =, ids, ;, }]
[., getZone, (, "UTC", ), ), ), {, throw, new, IllegalArgumentException, (, "Invalid UTC zone provided", ), ;, }, cProvider, =, provider, ;]
[), ), ), {, throw, new, IllegalArgumentException, (, "Invalid UTC zone provided", ), ;, }, cProvider, =, provider, ;, cAvailableIDs, =, ids, ;]
[;, }, cProvider, =, provider, ;, cAvailableIDs, =, ids, ;, }, private, static, Provider, getDefaultProvider, (, ), {, Provider, provider]
[), ;, }, cProvider, =, provider, ;, cAvailableIDs, =, ids, ;, }, private, static, Provider, getDefaultProvider, (, ), {, Provider]
[=, provider, ;, cAvailableIDs, =, ids, ;, }, private, static, Provider, getDefaultProvider, (, ), {, Provider, provider, =, null, ;]
[;, cAvailableIDs, =, ids, ;, }, private, static, Provider, getDefaultProvider, (, ), {, Provider, provider, =, null, ;, try, {]
[=, ids, ;, }, private, static, Provider, getDefaultProvider, (, ), {, Provider, provider, =, null, ;, try, {, String, providerClass]
[;, }, private, static, Provider, getDefaultProvider, (, ), {, Provider, provider, =, null, ;, try, {, String, providerClass, =, System]
[;, try, {, String, providerClass, =, System, ., getProperty, (, "org.joda.time.DateTimeZone.Provider", ), ;, if, (, providerClass, !=, null, ), {]
[;, if, (, providerClass, !=, null, ), {, try, {, provider, =, (, Provider, ), Class, ., forName, (, providerClass]
[., getProperty, (, "org.joda.time.DateTimeZone.Provider", ), ;, if, (, providerClass, !=, null, ), {, try, {, provider, =, (, Provider, )]
[), ;, if, (, providerClass, !=, null, ), {, try, {, provider, =, (, Provider, ), Class, ., forName, (]
[), {, try, {, provider, =, (, Provider, ), Class, ., forName, (, providerClass, ), ., newInstance, (, ), ;]
[!=, null, ), {, try, {, provider, =, (, Provider, ), Class, ., forName, (, providerClass, ), ., newInstance, (]
[), {, try, {, provider, =, (, Provider, ), Class, ., forName, (, providerClass, ), ., newInstance, (, ), ;]
[=, (, Provider, ), Class, ., forName, (, providerClass, ), ., newInstance, (, ), ;, }, catch, (, Exception, ex]
[;, }, catch, (, Exception, ex, ), {, throw, new, RuntimeException, (, ex, ), ;, }, }, }, catch, (]
[;, }, catch, (, Exception, ex, ), {, throw, new, RuntimeException, (, ex, ), ;, }, }, }, catch, (]
[., newInstance, (, ), ;, }, catch, (, Exception, ex, ), {, throw, new, RuntimeException, (, ex, ), ;, }]
[., forName, (, providerClass, ), ., newInstance, (, ), ;, }, catch, (, Exception, ex, ), {, throw, new, RuntimeException]
[), ., newInstance, (, ), ;, }, catch, (, Exception, ex, ), {, throw, new, RuntimeException, (, ex, ), ;]
[;, }, }, }, catch, (, SecurityException, ex, ), {, }, if, (, provider, ==, null, ), {, try, {]
[), ;, }, }, }, catch, (, SecurityException, ex, ), {, }, if, (, provider, ==, null, ), {, try]
[), {, try, {, provider, =, new, ZoneInfoProvider, (, "org/joda/time/tz/data", ), ;, }, catch, (, Exception, ex, ), {, ex]
[==, null, ), {, try, {, provider, =, new, ZoneInfoProvider, (, "org/joda/time/tz/data", ), ;, }, catch, (, Exception, ex, )]
[), {, try, {, provider, =, new, ZoneInfoProvider, (, "org/joda/time/tz/data", ), ;, }, catch, (, Exception, ex, ), {, ex]
[=, new, ZoneInfoProvider, (, "org/joda/time/tz/data", ), ;, }, catch, (, Exception, ex, ), {, ex, ., printStackTrace, (, ), ;]
[;, }, catch, (, Exception, ex, ), {, ex, ., printStackTrace, (, ), ;, }, }, if, (, provider, ==]
[), ;, }, catch, (, Exception, ex, ), {, ex, ., printStackTrace, (, ), ;, }, }, if, (, provider]
[;, }, }, if, (, provider, ==, null, ), {, provider, =, new, UTCProvider, (, ), ;, }, return, provider]
[., printStackTrace, (, ), ;, }, }, if, (, provider, ==, null, ), {, provider, =, new, UTCProvider, (, )]
[), {, provider, =, new, UTCProvider, (, ), ;, }, return, provider, ;, }, public, static, NameProvider, getNameProvider, (, )]
[==, null, ), {, provider, =, new, UTCProvider, (, ), ;, }, return, provider, ;, }, public, static, NameProvider, getNameProvider]
[), {, provider, =, new, UTCProvider, (, ), ;, }, return, provider, ;, }, public, static, NameProvider, getNameProvider, (, )]
[=, new, UTCProvider, (, ), ;, }, return, provider, ;, }, public, static, NameProvider, getNameProvider, (, ), {, return, cNameProvider]
[;, }, return, provider, ;, }, public, static, NameProvider, getNameProvider, (, ), {, return, cNameProvider, ;, }, public, static, void]
[;, }, public, static, NameProvider, getNameProvider, (, ), {, return, cNameProvider, ;, }, public, static, void, setNameProvider, (, NameProvider, nameProvider]
[;, }, public, static, void, setNameProvider, (, NameProvider, nameProvider, ), throws, SecurityException, {, SecurityManager, sm, =, System, ., getSecurityManager, (]
[;, if, (, sm, !=, null, ), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setNameProvider", ), ), ;, }]
[., getSecurityManager, (, ), ;, if, (, sm, !=, null, ), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setNameProvider"]
[), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setNameProvider", ), ), ;, }, setNameProvider0, (, nameProvider, ), ;, }]
[!=, null, ), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setNameProvider", ), ), ;, }, setNameProvider0, (, nameProvider, )]
[), {, sm, ., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setNameProvider", ), ), ;, }, setNameProvider0, (, nameProvider, ), ;, }]
[;, }, setNameProvider0, (, nameProvider, ), ;, }, private, static, void, setNameProvider0, (, NameProvider, nameProvider, ), {, if, (, nameProvider]
[., checkPermission, (, new, JodaTimePermission, (, "DateTimeZone.setNameProvider", ), ), ;, }, setNameProvider0, (, nameProvider, ), ;, }, private, static, void]
[), ;, }, setNameProvider0, (, nameProvider, ), ;, }, private, static, void, setNameProvider0, (, NameProvider, nameProvider, ), {, if, (]
[), ), ;, }, setNameProvider0, (, nameProvider, ), ;, }, private, static, void, setNameProvider0, (, NameProvider, nameProvider, ), {, if]
[;, }, private, static, void, setNameProvider0, (, NameProvider, nameProvider, ), {, if, (, nameProvider, ==, null, ), {, nameProvider, =]
[), ;, }, private, static, void, setNameProvider0, (, NameProvider, nameProvider, ), {, if, (, nameProvider, ==, null, ), {, nameProvider]
[), {, nameProvider, =, getDefaultNameProvider, (, ), ;, }, cNameProvider, =, nameProvider, ;, }, private, static, NameProvider, getDefaultNameProvider, (, )]
[==, null, ), {, nameProvider, =, getDefaultNameProvider, (, ), ;, }, cNameProvider, =, nameProvider, ;, }, private, static, NameProvider, getDefaultNameProvider]
[), {, nameProvider, =, getDefaultNameProvider, (, ), ;, }, cNameProvider, =, nameProvider, ;, }, private, static, NameProvider, getDefaultNameProvider, (, )]
[=, getDefaultNameProvider, (, ), ;, }, cNameProvider, =, nameProvider, ;, }, private, static, NameProvider, getDefaultNameProvider, (, ), {, NameProvider, nameProvider]
[;, }, cNameProvider, =, nameProvider, ;, }, private, static, NameProvider, getDefaultNameProvider, (, ), {, NameProvider, nameProvider, =, null, ;, try]
[=, nameProvider, ;, }, private, static, NameProvider, getDefaultNameProvider, (, ), {, NameProvider, nameProvider, =, null, ;, try, {, String, providerClass]
[;, }, private, static, NameProvider, getDefaultNameProvider, (, ), {, NameProvider, nameProvider, =, null, ;, try, {, String, providerClass, =, System]
[;, try, {, String, providerClass, =, System, ., getProperty, (, "org.joda.time.DateTimeZone.NameProvider", ), ;, if, (, providerClass, !=, null, ), {]
[;, if, (, providerClass, !=, null, ), {, try, {, nameProvider, =, (, NameProvider, ), Class, ., forName, (, providerClass]
[., getProperty, (, "org.joda.time.DateTimeZone.NameProvider", ), ;, if, (, providerClass, !=, null, ), {, try, {, nameProvider, =, (, NameProvider, )]
[), ;, if, (, providerClass, !=, null, ), {, try, {, nameProvider, =, (, NameProvider, ), Class, ., forName, (]
[), {, try, {, nameProvider, =, (, NameProvider, ), Class, ., forName, (, providerClass, ), ., newInstance, (, ), ;]
[!=, null, ), {, try, {, nameProvider, =, (, NameProvider, ), Class, ., forName, (, providerClass, ), ., newInstance, (]
[), {, try, {, nameProvider, =, (, NameProvider, ), Class, ., forName, (, providerClass, ), ., newInstance, (, ), ;]
[=, (, NameProvider, ), Class, ., forName, (, providerClass, ), ., newInstance, (, ), ;, }, catch, (, Exception, ex]
[;, }, catch, (, Exception, ex, ), {, throw, new, RuntimeException, (, ex, ), ;, }, }, }, catch, (]
[;, }, catch, (, Exception, ex, ), {, throw, new, RuntimeException, (, ex, ), ;, }, }, }, catch, (]
[., newInstance, (, ), ;, }, catch, (, Exception, ex, ), {, throw, new, RuntimeException, (, ex, ), ;, }]
[., forName, (, providerClass, ), ., newInstance, (, ), ;, }, catch, (, Exception, ex, ), {, throw, new, RuntimeException]
[), ., newInstance, (, ), ;, }, catch, (, Exception, ex, ), {, throw, new, RuntimeException, (, ex, ), ;]
[;, }, }, }, catch, (, SecurityException, ex, ), {, }, if, (, nameProvider, ==, null, ), {, nameProvider, =]
[), ;, }, }, }, catch, (, SecurityException, ex, ), {, }, if, (, nameProvider, ==, null, ), {, nameProvider]
[), {, nameProvider, =, new, DefaultNameProvider, (, ), ;, }, return, nameProvider, ;, }, private, static, synchronized, String, getConvertedId, (]
[==, null, ), {, nameProvider, =, new, DefaultNameProvider, (, ), ;, }, return, nameProvider, ;, }, private, static, synchronized, String]
[), {, nameProvider, =, new, DefaultNameProvider, (, ), ;, }, return, nameProvider, ;, }, private, static, synchronized, String, getConvertedId, (]
[=, new, DefaultNameProvider, (, ), ;, }, return, nameProvider, ;, }, private, static, synchronized, String, getConvertedId, (, String, id, )]
[;, }, return, nameProvider, ;, }, private, static, synchronized, String, getConvertedId, (, String, id, ), {, Map, <, String, ,]
[;, }, private, static, synchronized, String, getConvertedId, (, String, id, ), {, Map, <, String, ,, String, >, map, =]
[;, if, (, map, ==, null, ), {, map, =, new, HashMap, <, String, ,, String, >, (, ), ;]
[), {, map, =, new, HashMap, <, String, ,, String, >, (, ), ;, map, ., put, (, "GMT", ,]
[==, null, ), {, map, =, new, HashMap, <, String, ,, String, >, (, ), ;, map, ., put, (]
[), {, map, =, new, HashMap, <, String, ,, String, >, (, ), ;, map, ., put, (, "GMT", ,]
[=, new, HashMap, <, String, ,, String, >, (, ), ;, map, ., put, (, "GMT", ,, "UTC", ), ;]
[;, map, ., put, (, "GMT", ,, "UTC", ), ;, map, ., put, (, "WET", ,, "WET", ), ;, map]
[;, map, ., put, (, "WET", ,, "WET", ), ;, map, ., put, (, "CET", ,, "CET", ), ;, map]
[., put, (, "GMT", ,, "UTC", ), ;, map, ., put, (, "WET", ,, "WET", ), ;, map, ., put]
[,, "UTC", ), ;, map, ., put, (, "WET", ,, "WET", ), ;, map, ., put, (, "CET", ,, "CET"]
[), ;, map, ., put, (, "WET", ,, "WET", ), ;, map, ., put, (, "CET", ,, "CET", ), ;]
[;, map, ., put, (, "CET", ,, "CET", ), ;, map, ., put, (, "MET", ,, "CET", ), ;, map]
[., put, (, "WET", ,, "WET", ), ;, map, ., put, (, "CET", ,, "CET", ), ;, map, ., put]
[,, "WET", ), ;, map, ., put, (, "CET", ,, "CET", ), ;, map, ., put, (, "MET", ,, "CET"]
[), ;, map, ., put, (, "CET", ,, "CET", ), ;, map, ., put, (, "MET", ,, "CET", ), ;]
[;, map, ., put, (, "MET", ,, "CET", ), ;, map, ., put, (, "ECT", ,, "CET", ), ;, map]
[., put, (, "CET", ,, "CET", ), ;, map, ., put, (, "MET", ,, "CET", ), ;, map, ., put]
[,, "CET", ), ;, map, ., put, (, "MET", ,, "CET", ), ;, map, ., put, (, "ECT", ,, "CET"]
[), ;, map, ., put, (, "MET", ,, "CET", ), ;, map, ., put, (, "ECT", ,, "CET", ), ;]
[;, map, ., put, (, "ECT", ,, "CET", ), ;, map, ., put, (, "EET", ,, "EET", ), ;, map]
[., put, (, "MET", ,, "CET", ), ;, map, ., put, (, "ECT", ,, "CET", ), ;, map, ., put]
[,, "CET", ), ;, map, ., put, (, "ECT", ,, "CET", ), ;, map, ., put, (, "EET", ,, "EET"]
[), ;, map, ., put, (, "ECT", ,, "CET", ), ;, map, ., put, (, "EET", ,, "EET", ), ;]
[;, map, ., put, (, "EET", ,, "EET", ), ;, map, ., put, (, "MIT", ,, "Pacific/Apia", ), ;, map]
[., put, (, "ECT", ,, "CET", ), ;, map, ., put, (, "EET", ,, "EET", ), ;, map, ., put]
[,, "CET", ), ;, map, ., put, (, "EET", ,, "EET", ), ;, map, ., put, (, "MIT", ,, "Pacific/Apia"]
[), ;, map, ., put, (, "EET", ,, "EET", ), ;, map, ., put, (, "MIT", ,, "Pacific/Apia", ), ;]
[;, map, ., put, (, "MIT", ,, "Pacific/Apia", ), ;, map, ., put, (, "HST", ,, "Pacific/Honolulu", ), ;, map]
[., put, (, "EET", ,, "EET", ), ;, map, ., put, (, "MIT", ,, "Pacific/Apia", ), ;, map, ., put]
[,, "EET", ), ;, map, ., put, (, "MIT", ,, "Pacific/Apia", ), ;, map, ., put, (, "HST", ,, "Pacific/Honolulu"]
[), ;, map, ., put, (, "MIT", ,, "Pacific/Apia", ), ;, map, ., put, (, "HST", ,, "Pacific/Honolulu", ), ;]
[;, map, ., put, (, "HST", ,, "Pacific/Honolulu", ), ;, map, ., put, (, "AST", ,, "America/Anchorage", ), ;, map]
[., put, (, "MIT", ,, "Pacific/Apia", ), ;, map, ., put, (, "HST", ,, "Pacific/Honolulu", ), ;, map, ., put]
[,, "Pacific/Apia", ), ;, map, ., put, (, "HST", ,, "Pacific/Honolulu", ), ;, map, ., put, (, "AST", ,, "America/Anchorage"]
[), ;, map, ., put, (, "HST", ,, "Pacific/Honolulu", ), ;, map, ., put, (, "AST", ,, "America/Anchorage", ), ;]
[;, map, ., put, (, "AST", ,, "America/Anchorage", ), ;, map, ., put, (, "PST", ,, "America/Los_Angeles", ), ;, map]
[., put, (, "HST", ,, "Pacific/Honolulu", ), ;, map, ., put, (, "AST", ,, "America/Anchorage", ), ;, map, ., put]
[,, "Pacific/Honolulu", ), ;, map, ., put, (, "AST", ,, "America/Anchorage", ), ;, map, ., put, (, "PST", ,, "America/Los_Angeles"]
[), ;, map, ., put, (, "AST", ,, "America/Anchorage", ), ;, map, ., put, (, "PST", ,, "America/Los_Angeles", ), ;]
[;, map, ., put, (, "PST", ,, "America/Los_Angeles", ), ;, map, ., put, (, "MST", ,, "America/Denver", ), ;, map]
[., put, (, "AST", ,, "America/Anchorage", ), ;, map, ., put, (, "PST", ,, "America/Los_Angeles", ), ;, map, ., put]
[,, "America/Anchorage", ), ;, map, ., put, (, "PST", ,, "America/Los_Angeles", ), ;, map, ., put, (, "MST", ,, "America/Denver"]
[), ;, map, ., put, (, "PST", ,, "America/Los_Angeles", ), ;, map, ., put, (, "MST", ,, "America/Denver", ), ;]
[;, map, ., put, (, "MST", ,, "America/Denver", ), ;, map, ., put, (, "PNT", ,, "America/Phoenix", ), ;, map]
[., put, (, "PST", ,, "America/Los_Angeles", ), ;, map, ., put, (, "MST", ,, "America/Denver", ), ;, map, ., put]
[,, "America/Los_Angeles", ), ;, map, ., put, (, "MST", ,, "America/Denver", ), ;, map, ., put, (, "PNT", ,, "America/Phoenix"]
[), ;, map, ., put, (, "MST", ,, "America/Denver", ), ;, map, ., put, (, "PNT", ,, "America/Phoenix", ), ;]
[;, map, ., put, (, "PNT", ,, "America/Phoenix", ), ;, map, ., put, (, "CST", ,, "America/Chicago", ), ;, map]
[., put, (, "MST", ,, "America/Denver", ), ;, map, ., put, (, "PNT", ,, "America/Phoenix", ), ;, map, ., put]
[,, "America/Denver", ), ;, map, ., put, (, "PNT", ,, "America/Phoenix", ), ;, map, ., put, (, "CST", ,, "America/Chicago"]
[), ;, map, ., put, (, "PNT", ,, "America/Phoenix", ), ;, map, ., put, (, "CST", ,, "America/Chicago", ), ;]
[;, map, ., put, (, "CST", ,, "America/Chicago", ), ;, map, ., put, (, "EST", ,, "America/New_York", ), ;, map]
[., put, (, "PNT", ,, "America/Phoenix", ), ;, map, ., put, (, "CST", ,, "America/Chicago", ), ;, map, ., put]
[,, "America/Phoenix", ), ;, map, ., put, (, "CST", ,, "America/Chicago", ), ;, map, ., put, (, "EST", ,, "America/New_York"]
[), ;, map, ., put, (, "CST", ,, "America/Chicago", ), ;, map, ., put, (, "EST", ,, "America/New_York", ), ;]
[;, map, ., put, (, "EST", ,, "America/New_York", ), ;, map, ., put, (, "IET", ,, "America/Indiana/Indianapolis", ), ;, map]
[., put, (, "CST", ,, "America/Chicago", ), ;, map, ., put, (, "EST", ,, "America/New_York", ), ;, map, ., put]
[,, "America/Chicago", ), ;, map, ., put, (, "EST", ,, "America/New_York", ), ;, map, ., put, (, "IET", ,, "America/Indiana/Indianapolis"]
[), ;, map, ., put, (, "EST", ,, "America/New_York", ), ;, map, ., put, (, "IET", ,, "America/Indiana/Indianapolis", ), ;]
[;, map, ., put, (, "IET", ,, "America/Indiana/Indianapolis", ), ;, map, ., put, (, "PRT", ,, "America/Puerto_Rico", ), ;, map]
[., put, (, "EST", ,, "America/New_York", ), ;, map, ., put, (, "IET", ,, "America/Indiana/Indianapolis", ), ;, map, ., put]
[,, "America/New_York", ), ;, map, ., put, (, "IET", ,, "America/Indiana/Indianapolis", ), ;, map, ., put, (, "PRT", ,, "America/Puerto_Rico"]
[), ;, map, ., put, (, "IET", ,, "America/Indiana/Indianapolis", ), ;, map, ., put, (, "PRT", ,, "America/Puerto_Rico", ), ;]
[;, map, ., put, (, "PRT", ,, "America/Puerto_Rico", ), ;, map, ., put, (, "CNT", ,, "America/St_Johns", ), ;, map]
[., put, (, "IET", ,, "America/Indiana/Indianapolis", ), ;, map, ., put, (, "PRT", ,, "America/Puerto_Rico", ), ;, map, ., put]
[,, "America/Indiana/Indianapolis", ), ;, map, ., put, (, "PRT", ,, "America/Puerto_Rico", ), ;, map, ., put, (, "CNT", ,, "America/St_Johns"]
[), ;, map, ., put, (, "PRT", ,, "America/Puerto_Rico", ), ;, map, ., put, (, "CNT", ,, "America/St_Johns", ), ;]
[;, map, ., put, (, "CNT", ,, "America/St_Johns", ), ;, map, ., put, (, "AGT", ,, "America/Argentina/Buenos_Aires", ), ;, map]
[., put, (, "PRT", ,, "America/Puerto_Rico", ), ;, map, ., put, (, "CNT", ,, "America/St_Johns", ), ;, map, ., put]
[,, "America/Puerto_Rico", ), ;, map, ., put, (, "CNT", ,, "America/St_Johns", ), ;, map, ., put, (, "AGT", ,, "America/Argentina/Buenos_Aires"]
[), ;, map, ., put, (, "CNT", ,, "America/St_Johns", ), ;, map, ., put, (, "AGT", ,, "America/Argentina/Buenos_Aires", ), ;]
[;, map, ., put, (, "AGT", ,, "America/Argentina/Buenos_Aires", ), ;, map, ., put, (, "BET", ,, "America/Sao_Paulo", ), ;, map]
[., put, (, "CNT", ,, "America/St_Johns", ), ;, map, ., put, (, "AGT", ,, "America/Argentina/Buenos_Aires", ), ;, map, ., put]
[,, "America/St_Johns", ), ;, map, ., put, (, "AGT", ,, "America/Argentina/Buenos_Aires", ), ;, map, ., put, (, "BET", ,, "America/Sao_Paulo"]
[), ;, map, ., put, (, "AGT", ,, "America/Argentina/Buenos_Aires", ), ;, map, ., put, (, "BET", ,, "America/Sao_Paulo", ), ;]
[;, map, ., put, (, "BET", ,, "America/Sao_Paulo", ), ;, map, ., put, (, "ART", ,, "Africa/Cairo", ), ;, map]
[., put, (, "AGT", ,, "America/Argentina/Buenos_Aires", ), ;, map, ., put, (, "BET", ,, "America/Sao_Paulo", ), ;, map, ., put]
[,, "America/Argentina/Buenos_Aires", ), ;, map, ., put, (, "BET", ,, "America/Sao_Paulo", ), ;, map, ., put, (, "ART", ,, "Africa/Cairo"]
[), ;, map, ., put, (, "BET", ,, "America/Sao_Paulo", ), ;, map, ., put, (, "ART", ,, "Africa/Cairo", ), ;]
[;, map, ., put, (, "ART", ,, "Africa/Cairo", ), ;, map, ., put, (, "CAT", ,, "Africa/Harare", ), ;, map]
[., put, (, "BET", ,, "America/Sao_Paulo", ), ;, map, ., put, (, "ART", ,, "Africa/Cairo", ), ;, map, ., put]
[,, "America/Sao_Paulo", ), ;, map, ., put, (, "ART", ,, "Africa/Cairo", ), ;, map, ., put, (, "CAT", ,, "Africa/Harare"]
[), ;, map, ., put, (, "ART", ,, "Africa/Cairo", ), ;, map, ., put, (, "CAT", ,, "Africa/Harare", ), ;]
[;, map, ., put, (, "CAT", ,, "Africa/Harare", ), ;, map, ., put, (, "EAT", ,, "Africa/Addis_Ababa", ), ;, map]
[., put, (, "ART", ,, "Africa/Cairo", ), ;, map, ., put, (, "CAT", ,, "Africa/Harare", ), ;, map, ., put]
[,, "Africa/Cairo", ), ;, map, ., put, (, "CAT", ,, "Africa/Harare", ), ;, map, ., put, (, "EAT", ,, "Africa/Addis_Ababa"]
[), ;, map, ., put, (, "CAT", ,, "Africa/Harare", ), ;, map, ., put, (, "EAT", ,, "Africa/Addis_Ababa", ), ;]
[;, map, ., put, (, "EAT", ,, "Africa/Addis_Ababa", ), ;, map, ., put, (, "NET", ,, "Asia/Yerevan", ), ;, map]
[., put, (, "CAT", ,, "Africa/Harare", ), ;, map, ., put, (, "EAT", ,, "Africa/Addis_Ababa", ), ;, map, ., put]
[,, "Africa/Harare", ), ;, map, ., put, (, "EAT", ,, "Africa/Addis_Ababa", ), ;, map, ., put, (, "NET", ,, "Asia/Yerevan"]
[), ;, map, ., put, (, "EAT", ,, "Africa/Addis_Ababa", ), ;, map, ., put, (, "NET", ,, "Asia/Yerevan", ), ;]
[;, map, ., put, (, "NET", ,, "Asia/Yerevan", ), ;, map, ., put, (, "PLT", ,, "Asia/Karachi", ), ;, map]
[., put, (, "EAT", ,, "Africa/Addis_Ababa", ), ;, map, ., put, (, "NET", ,, "Asia/Yerevan", ), ;, map, ., put]
[,, "Africa/Addis_Ababa", ), ;, map, ., put, (, "NET", ,, "Asia/Yerevan", ), ;, map, ., put, (, "PLT", ,, "Asia/Karachi"]
[), ;, map, ., put, (, "NET", ,, "Asia/Yerevan", ), ;, map, ., put, (, "PLT", ,, "Asia/Karachi", ), ;]
[;, map, ., put, (, "PLT", ,, "Asia/Karachi", ), ;, map, ., put, (, "IST", ,, "Asia/Kolkata", ), ;, map]
[., put, (, "NET", ,, "Asia/Yerevan", ), ;, map, ., put, (, "PLT", ,, "Asia/Karachi", ), ;, map, ., put]
[,, "Asia/Yerevan", ), ;, map, ., put, (, "PLT", ,, "Asia/Karachi", ), ;, map, ., put, (, "IST", ,, "Asia/Kolkata"]
[), ;, map, ., put, (, "PLT", ,, "Asia/Karachi", ), ;, map, ., put, (, "IST", ,, "Asia/Kolkata", ), ;]
[;, map, ., put, (, "IST", ,, "Asia/Kolkata", ), ;, map, ., put, (, "BST", ,, "Asia/Dhaka", ), ;, map]
[., put, (, "PLT", ,, "Asia/Karachi", ), ;, map, ., put, (, "IST", ,, "Asia/Kolkata", ), ;, map, ., put]
[,, "Asia/Karachi", ), ;, map, ., put, (, "IST", ,, "Asia/Kolkata", ), ;, map, ., put, (, "BST", ,, "Asia/Dhaka"]
[), ;, map, ., put, (, "IST", ,, "Asia/Kolkata", ), ;, map, ., put, (, "BST", ,, "Asia/Dhaka", ), ;]
[;, map, ., put, (, "BST", ,, "Asia/Dhaka", ), ;, map, ., put, (, "VST", ,, "Asia/Ho_Chi_Minh", ), ;, map]
[., put, (, "IST", ,, "Asia/Kolkata", ), ;, map, ., put, (, "BST", ,, "Asia/Dhaka", ), ;, map, ., put]
[,, "Asia/Kolkata", ), ;, map, ., put, (, "BST", ,, "Asia/Dhaka", ), ;, map, ., put, (, "VST", ,, "Asia/Ho_Chi_Minh"]
[), ;, map, ., put, (, "BST", ,, "Asia/Dhaka", ), ;, map, ., put, (, "VST", ,, "Asia/Ho_Chi_Minh", ), ;]
[;, map, ., put, (, "VST", ,, "Asia/Ho_Chi_Minh", ), ;, map, ., put, (, "CTT", ,, "Asia/Shanghai", ), ;, map]
[., put, (, "BST", ,, "Asia/Dhaka", ), ;, map, ., put, (, "VST", ,, "Asia/Ho_Chi_Minh", ), ;, map, ., put]
[,, "Asia/Dhaka", ), ;, map, ., put, (, "VST", ,, "Asia/Ho_Chi_Minh", ), ;, map, ., put, (, "CTT", ,, "Asia/Shanghai"]
[), ;, map, ., put, (, "VST", ,, "Asia/Ho_Chi_Minh", ), ;, map, ., put, (, "CTT", ,, "Asia/Shanghai", ), ;]
[;, map, ., put, (, "CTT", ,, "Asia/Shanghai", ), ;, map, ., put, (, "JST", ,, "Asia/Tokyo", ), ;, map]
[., put, (, "VST", ,, "Asia/Ho_Chi_Minh", ), ;, map, ., put, (, "CTT", ,, "Asia/Shanghai", ), ;, map, ., put]
[,, "Asia/Ho_Chi_Minh", ), ;, map, ., put, (, "CTT", ,, "Asia/Shanghai", ), ;, map, ., put, (, "JST", ,, "Asia/Tokyo"]
[), ;, map, ., put, (, "CTT", ,, "Asia/Shanghai", ), ;, map, ., put, (, "JST", ,, "Asia/Tokyo", ), ;]
[;, map, ., put, (, "JST", ,, "Asia/Tokyo", ), ;, map, ., put, (, "ACT", ,, "Australia/Darwin", ), ;, map]
[., put, (, "CTT", ,, "Asia/Shanghai", ), ;, map, ., put, (, "JST", ,, "Asia/Tokyo", ), ;, map, ., put]
[,, "Asia/Shanghai", ), ;, map, ., put, (, "JST", ,, "Asia/Tokyo", ), ;, map, ., put, (, "ACT", ,, "Australia/Darwin"]
[), ;, map, ., put, (, "JST", ,, "Asia/Tokyo", ), ;, map, ., put, (, "ACT", ,, "Australia/Darwin", ), ;]
[;, map, ., put, (, "ACT", ,, "Australia/Darwin", ), ;, map, ., put, (, "AET", ,, "Australia/Sydney", ), ;, map]
[., put, (, "JST", ,, "Asia/Tokyo", ), ;, map, ., put, (, "ACT", ,, "Australia/Darwin", ), ;, map, ., put]
[,, "Asia/Tokyo", ), ;, map, ., put, (, "ACT", ,, "Australia/Darwin", ), ;, map, ., put, (, "AET", ,, "Australia/Sydney"]
[), ;, map, ., put, (, "ACT", ,, "Australia/Darwin", ), ;, map, ., put, (, "AET", ,, "Australia/Sydney", ), ;]
[;, map, ., put, (, "AET", ,, "Australia/Sydney", ), ;, map, ., put, (, "SST", ,, "Pacific/Guadalcanal", ), ;, map]
[., put, (, "ACT", ,, "Australia/Darwin", ), ;, map, ., put, (, "AET", ,, "Australia/Sydney", ), ;, map, ., put]
[,, "Australia/Darwin", ), ;, map, ., put, (, "AET", ,, "Australia/Sydney", ), ;, map, ., put, (, "SST", ,, "Pacific/Guadalcanal"]
[), ;, map, ., put, (, "AET", ,, "Australia/Sydney", ), ;, map, ., put, (, "SST", ,, "Pacific/Guadalcanal", ), ;]
[;, map, ., put, (, "SST", ,, "Pacific/Guadalcanal", ), ;, map, ., put, (, "NST", ,, "Pacific/Auckland", ), ;, cZoneIdConversion]
[., put, (, "AET", ,, "Australia/Sydney", ), ;, map, ., put, (, "SST", ,, "Pacific/Guadalcanal", ), ;, map, ., put]
[,, "Australia/Sydney", ), ;, map, ., put, (, "SST", ,, "Pacific/Guadalcanal", ), ;, map, ., put, (, "NST", ,, "Pacific/Auckland"]
[), ;, map, ., put, (, "SST", ,, "Pacific/Guadalcanal", ), ;, map, ., put, (, "NST", ,, "Pacific/Auckland", ), ;]
[;, map, ., put, (, "NST", ,, "Pacific/Auckland", ), ;, cZoneIdConversion, =, map, ;, }, return, map, ., get, (]
[., put, (, "SST", ,, "Pacific/Guadalcanal", ), ;, map, ., put, (, "NST", ,, "Pacific/Auckland", ), ;, cZoneIdConversion, =, map]
[,, "Pacific/Guadalcanal", ), ;, map, ., put, (, "NST", ,, "Pacific/Auckland", ), ;, cZoneIdConversion, =, map, ;, }, return, map]
[), ;, map, ., put, (, "NST", ,, "Pacific/Auckland", ), ;, cZoneIdConversion, =, map, ;, }, return, map, ., get]
[;, cZoneIdConversion, =, map, ;, }, return, map, ., get, (, id, ), ;, }, private, static, int, parseOffset, (]
[., put, (, "NST", ,, "Pacific/Auckland", ), ;, cZoneIdConversion, =, map, ;, }, return, map, ., get, (, id, )]
[,, "Pacific/Auckland", ), ;, cZoneIdConversion, =, map, ;, }, return, map, ., get, (, id, ), ;, }, private, static]
[), ;, cZoneIdConversion, =, map, ;, }, return, map, ., get, (, id, ), ;, }, private, static, int, parseOffset]
[=, map, ;, }, return, map, ., get, (, id, ), ;, }, private, static, int, parseOffset, (, String, str]
[;, }, return, map, ., get, (, id, ), ;, }, private, static, int, parseOffset, (, String, str, ), {]
[;, }, private, static, int, parseOffset, (, String, str, ), {, Chronology, chrono, =, new, BaseChronology, (, ), {, private]
[., get, (, id, ), ;, }, private, static, int, parseOffset, (, String, str, ), {, Chronology, chrono, =, new]
[), ;, }, private, static, int, parseOffset, (, String, str, ), {, Chronology, chrono, =, new, BaseChronology, (, ), {]
[;, return, -, (, int, ), offsetFormatter, (, ), ., withChronology, (, chrono, ), ., parseMillis, (, str, ), ;]
[;, public, DateTimeZone, getZone, (, ), {, return, null, ;, }, public, Chronology, withUTC, (, ), {, return, this, ;]
[;, public, DateTimeZone, getZone, (, ), {, return, null, ;, }, public, Chronology, withUTC, (, ), {, return, this, ;]
[;, }, public, Chronology, withUTC, (, ), {, return, this, ;, }, public, Chronology, withZone, (, DateTimeZone, zone, ), {]
[;, }, public, Chronology, withZone, (, DateTimeZone, zone, ), {, return, this, ;, }, public, String, toString, (, ), {]
[;, }, public, String, toString, (, ), {, return, getClass, (, ), ., getName, (, ), ;, }, }, ;]
[;, }, }, ;, return, -, (, int, ), offsetFormatter, (, ), ., withChronology, (, chrono, ), ., parseMillis, (]
[., getName, (, ), ;, }, }, ;, return, -, (, int, ), offsetFormatter, (, ), ., withChronology, (, chrono]
[;, }, private, static, String, printOffset, (, int, offset, ), {, StringBuffer, buf, =, new, StringBuffer, (, ), ;, if]
[;, }, private, static, String, printOffset, (, int, offset, ), {, StringBuffer, buf, =, new, StringBuffer, (, ), ;, if]
[;, }, private, static, String, printOffset, (, int, offset, ), {, StringBuffer, buf, =, new, StringBuffer, (, ), ;, if]
[., parseMillis, (, str, ), ;, }, private, static, String, printOffset, (, int, offset, ), {, StringBuffer, buf, =, new]
[., withChronology, (, chrono, ), ., parseMillis, (, str, ), ;, }, private, static, String, printOffset, (, int, offset, )]
[), ., parseMillis, (, str, ), ;, }, private, static, String, printOffset, (, int, offset, ), {, StringBuffer, buf, =]
[), ;, }, private, static, String, printOffset, (, int, offset, ), {, StringBuffer, buf, =, new, StringBuffer, (, ), ;]
[;, if, (, offset, >=, 0, ), {, buf, ., append, (, '+', ), ;, }, else, {, buf, .]
[), {, buf, ., append, (, '+', ), ;, }, else, {, buf, ., append, (, '-', ), ;, offset]
[>=, 0, ), {, buf, ., append, (, '+', ), ;, }, else, {, buf, ., append, (, '-', )]
[), {, buf, ., append, (, '+', ), ;, }, else, {, buf, ., append, (, '-', ), ;, offset]
[;, }, else, {, buf, ., append, (, '-', ), ;, offset, =, -, offset, ;, }, int, hours, =]
[., append, (, '+', ), ;, }, else, {, buf, ., append, (, '-', ), ;, offset, =, -, offset]
[), ;, }, else, {, buf, ., append, (, '-', ), ;, offset, =, -, offset, ;, }, int, hours]
[;, offset, =, -, offset, ;, }, int, hours, =, offset, /, DateTimeConstants, ., MILLIS_PER_HOUR, ;, FormatUtils, ., appendPaddedInteger, (]
[., append, (, '-', ), ;, offset, =, -, offset, ;, }, int, hours, =, offset, /, DateTimeConstants, ., MILLIS_PER_HOUR]
[), ;, offset, =, -, offset, ;, }, int, hours, =, offset, /, DateTimeConstants, ., MILLIS_PER_HOUR, ;, FormatUtils, ., appendPaddedInteger]
[=, -, offset, ;, }, int, hours, =, offset, /, DateTimeConstants, ., MILLIS_PER_HOUR, ;, FormatUtils, ., appendPaddedInteger, (, buf, ,]
[;, }, int, hours, =, offset, /, DateTimeConstants, ., MILLIS_PER_HOUR, ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, hours, ,, 2]
[;, }, int, hours, =, offset, /, DateTimeConstants, ., MILLIS_PER_HOUR, ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, hours, ,, 2]
[;, FormatUtils, ., appendPaddedInteger, (, buf, ,, hours, ,, 2, ), ;, offset, -=, hours, *, (, int, ), DateTimeConstants]
[/, DateTimeConstants, ., MILLIS_PER_HOUR, ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, hours, ,, 2, ), ;, offset, -=, hours, *]
[;, FormatUtils, ., appendPaddedInteger, (, buf, ,, hours, ,, 2, ), ;, offset, -=, hours, *, (, int, ), DateTimeConstants]
[., MILLIS_PER_HOUR, ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, hours, ,, 2, ), ;, offset, -=, hours, *, (, int]
[;, offset, -=, hours, *, (, int, ), DateTimeConstants, ., MILLIS_PER_HOUR, ;, int, minutes, =, offset, /, DateTimeConstants, ., MILLIS_PER_MINUTE]
[., appendPaddedInteger, (, buf, ,, hours, ,, 2, ), ;, offset, -=, hours, *, (, int, ), DateTimeConstants, ., MILLIS_PER_HOUR]
[,, hours, ,, 2, ), ;, offset, -=, hours, *, (, int, ), DateTimeConstants, ., MILLIS_PER_HOUR, ;, int, minutes, =]
[,, 2, ), ;, offset, -=, hours, *, (, int, ), DateTimeConstants, ., MILLIS_PER_HOUR, ;, int, minutes, =, offset, /]
[), ;, offset, -=, hours, *, (, int, ), DateTimeConstants, ., MILLIS_PER_HOUR, ;, int, minutes, =, offset, /, DateTimeConstants, .]
[-=, hours, *, (, int, ), DateTimeConstants, ., MILLIS_PER_HOUR, ;, int, minutes, =, offset, /, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, buf]
[;, int, minutes, =, offset, /, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, buf, ., append, (, ':', ), ;, FormatUtils, ., appendPaddedInteger]
[*, (, int, ), DateTimeConstants, ., MILLIS_PER_HOUR, ;, int, minutes, =, offset, /, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, buf, ., append]
[;, int, minutes, =, offset, /, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, buf, ., append, (, ':', ), ;, FormatUtils, ., appendPaddedInteger]
[;, int, minutes, =, offset, /, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, buf, ., append, (, ':', ), ;, FormatUtils, ., appendPaddedInteger]
[., MILLIS_PER_HOUR, ;, int, minutes, =, offset, /, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, buf, ., append, (, ':', ), ;, FormatUtils]
[;, buf, ., append, (, ':', ), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, minutes, ,, 2, ), ;, offset]
[/, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, buf, ., append, (, ':', ), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, minutes, ,]
[;, buf, ., append, (, ':', ), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, minutes, ,, 2, ), ;, offset]
[., MILLIS_PER_MINUTE, ;, buf, ., append, (, ':', ), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, minutes, ,, 2, )]
[;, FormatUtils, ., appendPaddedInteger, (, buf, ,, minutes, ,, 2, ), ;, offset, -=, minutes, *, DateTimeConstants, ., MILLIS_PER_MINUTE, ;]
[., append, (, ':', ), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, minutes, ,, 2, ), ;, offset, -=, minutes]
[), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, minutes, ,, 2, ), ;, offset, -=, minutes, *, DateTimeConstants, ., MILLIS_PER_MINUTE]
[;, offset, -=, minutes, *, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, if, (, offset, ==, 0, ), {, return, buf, ., toString]
[., appendPaddedInteger, (, buf, ,, minutes, ,, 2, ), ;, offset, -=, minutes, *, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, if, (]
[,, minutes, ,, 2, ), ;, offset, -=, minutes, *, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, if, (, offset, ==, 0, )]
[,, 2, ), ;, offset, -=, minutes, *, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, if, (, offset, ==, 0, ), {, return]
[), ;, offset, -=, minutes, *, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, if, (, offset, ==, 0, ), {, return, buf, .]
[-=, minutes, *, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, if, (, offset, ==, 0, ), {, return, buf, ., toString, (, )]
[;, if, (, offset, ==, 0, ), {, return, buf, ., toString, (, ), ;, }, int, seconds, =, offset]
[*, DateTimeConstants, ., MILLIS_PER_MINUTE, ;, if, (, offset, ==, 0, ), {, return, buf, ., toString, (, ), ;, }]
[;, if, (, offset, ==, 0, ), {, return, buf, ., toString, (, ), ;, }, int, seconds, =, offset]
[., MILLIS_PER_MINUTE, ;, if, (, offset, ==, 0, ), {, return, buf, ., toString, (, ), ;, }, int, seconds]
[), {, return, buf, ., toString, (, ), ;, }, int, seconds, =, offset, /, DateTimeConstants, ., MILLIS_PER_SECOND, ;, buf]
[==, 0, ), {, return, buf, ., toString, (, ), ;, }, int, seconds, =, offset, /, DateTimeConstants, ., MILLIS_PER_SECOND]
[), {, return, buf, ., toString, (, ), ;, }, int, seconds, =, offset, /, DateTimeConstants, ., MILLIS_PER_SECOND, ;, buf]
[;, }, int, seconds, =, offset, /, DateTimeConstants, ., MILLIS_PER_SECOND, ;, buf, ., append, (, ':', ), ;, FormatUtils, .]
[., toString, (, ), ;, }, int, seconds, =, offset, /, DateTimeConstants, ., MILLIS_PER_SECOND, ;, buf, ., append, (, ':']
[;, buf, ., append, (, ':', ), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, seconds, ,, 2, ), ;, offset]
[/, DateTimeConstants, ., MILLIS_PER_SECOND, ;, buf, ., append, (, ':', ), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, seconds, ,]
[;, buf, ., append, (, ':', ), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, seconds, ,, 2, ), ;, offset]
[., MILLIS_PER_SECOND, ;, buf, ., append, (, ':', ), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, seconds, ,, 2, )]
[;, FormatUtils, ., appendPaddedInteger, (, buf, ,, seconds, ,, 2, ), ;, offset, -=, seconds, *, DateTimeConstants, ., MILLIS_PER_SECOND, ;]
[., append, (, ':', ), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, seconds, ,, 2, ), ;, offset, -=, seconds]
[), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, seconds, ,, 2, ), ;, offset, -=, seconds, *, DateTimeConstants, ., MILLIS_PER_SECOND]
[;, offset, -=, seconds, *, DateTimeConstants, ., MILLIS_PER_SECOND, ;, if, (, offset, ==, 0, ), {, return, buf, ., toString]
[., appendPaddedInteger, (, buf, ,, seconds, ,, 2, ), ;, offset, -=, seconds, *, DateTimeConstants, ., MILLIS_PER_SECOND, ;, if, (]
[,, seconds, ,, 2, ), ;, offset, -=, seconds, *, DateTimeConstants, ., MILLIS_PER_SECOND, ;, if, (, offset, ==, 0, )]
[,, 2, ), ;, offset, -=, seconds, *, DateTimeConstants, ., MILLIS_PER_SECOND, ;, if, (, offset, ==, 0, ), {, return]
[), ;, offset, -=, seconds, *, DateTimeConstants, ., MILLIS_PER_SECOND, ;, if, (, offset, ==, 0, ), {, return, buf, .]
[-=, seconds, *, DateTimeConstants, ., MILLIS_PER_SECOND, ;, if, (, offset, ==, 0, ), {, return, buf, ., toString, (, )]
[;, if, (, offset, ==, 0, ), {, return, buf, ., toString, (, ), ;, }, buf, ., append, (]
[*, DateTimeConstants, ., MILLIS_PER_SECOND, ;, if, (, offset, ==, 0, ), {, return, buf, ., toString, (, ), ;, }]
[;, if, (, offset, ==, 0, ), {, return, buf, ., toString, (, ), ;, }, buf, ., append, (]
[., MILLIS_PER_SECOND, ;, if, (, offset, ==, 0, ), {, return, buf, ., toString, (, ), ;, }, buf, .]
[), {, return, buf, ., toString, (, ), ;, }, buf, ., append, (, '.', ), ;, FormatUtils, ., appendPaddedInteger]
[==, 0, ), {, return, buf, ., toString, (, ), ;, }, buf, ., append, (, '.', ), ;, FormatUtils]
[), {, return, buf, ., toString, (, ), ;, }, buf, ., append, (, '.', ), ;, FormatUtils, ., appendPaddedInteger]
[;, }, buf, ., append, (, '.', ), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, offset, ,, 3, ), ;]
[., toString, (, ), ;, }, buf, ., append, (, '.', ), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, offset]
[;, FormatUtils, ., appendPaddedInteger, (, buf, ,, offset, ,, 3, ), ;, return, buf, ., toString, (, ), ;, }]
[., append, (, '.', ), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, offset, ,, 3, ), ;, return, buf, .]
[), ;, FormatUtils, ., appendPaddedInteger, (, buf, ,, offset, ,, 3, ), ;, return, buf, ., toString, (, ), ;]
[;, return, buf, ., toString, (, ), ;, }, private, static, synchronized, DateTimeFormatter, offsetFormatter, (, ), {, if, (, cOffsetFormatter]
[., appendPaddedInteger, (, buf, ,, offset, ,, 3, ), ;, return, buf, ., toString, (, ), ;, }, private, static]
[,, offset, ,, 3, ), ;, return, buf, ., toString, (, ), ;, }, private, static, synchronized, DateTimeFormatter, offsetFormatter, (]
[,, 3, ), ;, return, buf, ., toString, (, ), ;, }, private, static, synchronized, DateTimeFormatter, offsetFormatter, (, ), {]
[), ;, return, buf, ., toString, (, ), ;, }, private, static, synchronized, DateTimeFormatter, offsetFormatter, (, ), {, if, (]
[;, }, private, static, synchronized, DateTimeFormatter, offsetFormatter, (, ), {, if, (, cOffsetFormatter, ==, null, ), {, cOffsetFormatter, =, new]
[., toString, (, ), ;, }, private, static, synchronized, DateTimeFormatter, offsetFormatter, (, ), {, if, (, cOffsetFormatter, ==, null, )]
[), {, cOffsetFormatter, =, new, DateTimeFormatterBuilder, (, ), ., appendTimeZoneOffset, (, null, ,, true, ,, 2, ,, 4, ), .]
[==, null, ), {, cOffsetFormatter, =, new, DateTimeFormatterBuilder, (, ), ., appendTimeZoneOffset, (, null, ,, true, ,, 2, ,, 4]
[), {, cOffsetFormatter, =, new, DateTimeFormatterBuilder, (, ), ., appendTimeZoneOffset, (, null, ,, true, ,, 2, ,, 4, ), .]
[=, new, DateTimeFormatterBuilder, (, ), ., appendTimeZoneOffset, (, null, ,, true, ,, 2, ,, 4, ), ., toFormatter, (, )]
[;, }, return, cOffsetFormatter, ;, }, private, final, String, iID, ;, protected, DateTimeZone, (, String, id, ), {, if, (]
[., toFormatter, (, ), ;, }, return, cOffsetFormatter, ;, }, private, final, String, iID, ;, protected, DateTimeZone, (, String, id]
[., appendTimeZoneOffset, (, null, ,, true, ,, 2, ,, 4, ), ., toFormatter, (, ), ;, }, return, cOffsetFormatter, ;]
[,, true, ,, 2, ,, 4, ), ., toFormatter, (, ), ;, }, return, cOffsetFormatter, ;, }, private, final, String]
[,, 2, ,, 4, ), ., toFormatter, (, ), ;, }, return, cOffsetFormatter, ;, }, private, final, String, iID, ;]
[,, 4, ), ., toFormatter, (, ), ;, }, return, cOffsetFormatter, ;, }, private, final, String, iID, ;, protected, DateTimeZone]
[), ., toFormatter, (, ), ;, }, return, cOffsetFormatter, ;, }, private, final, String, iID, ;, protected, DateTimeZone, (, String]
[;, }, private, final, String, iID, ;, protected, DateTimeZone, (, String, id, ), {, if, (, id, ==, null, )]
[), {, throw, new, IllegalArgumentException, (, "Id must not be null", ), ;, }, iID, =, id, ;, }, @, ToString, public, final, String]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Id must not be null", ), ;, }, iID, =, id, ;, }, @, ToString, public]
[), {, throw, new, IllegalArgumentException, (, "Id must not be null", ), ;, }, iID, =, id, ;, }, @, ToString, public, final, String]
[;, }, iID, =, id, ;, }, @, ToString, public, final, String, getID, (, ), {, return, iID, ;, }]
[), ;, }, iID, =, id, ;, }, @, ToString, public, final, String, getID, (, ), {, return, iID, ;]
[=, id, ;, }, @, ToString, public, final, String, getID, (, ), {, return, iID, ;, }, public, abstract, String]
[;, }, @, ToString, public, final, String, getID, (, ), {, return, iID, ;, }, public, abstract, String, getNameKey, (]
[;, }, public, abstract, String, getNameKey, (, long, instant, ), ;, public, final, String, getShortName, (, long, instant, ), {]
[;, }, public, String, getShortName, (, long, instant, ,, Locale, locale, ), {, if, (, locale, ==, null, ), {]
[,, null, ), ;, }, public, String, getShortName, (, long, instant, ,, Locale, locale, ), {, if, (, locale, ==]
[), ;, }, public, String, getShortName, (, long, instant, ,, Locale, locale, ), {, if, (, locale, ==, null, )]
[), {, locale, =, Locale, ., getDefault, (, ), ;, }, String, nameKey, =, getNameKey, (, instant, ), ;, if]
[==, null, ), {, locale, =, Locale, ., getDefault, (, ), ;, }, String, nameKey, =, getNameKey, (, instant, )]
[), {, locale, =, Locale, ., getDefault, (, ), ;, }, String, nameKey, =, getNameKey, (, instant, ), ;, if]
[=, Locale, ., getDefault, (, ), ;, }, String, nameKey, =, getNameKey, (, instant, ), ;, if, (, nameKey, ==]
[;, }, String, nameKey, =, getNameKey, (, instant, ), ;, if, (, nameKey, ==, null, ), {, return, iID, ;]
[., getDefault, (, ), ;, }, String, nameKey, =, getNameKey, (, instant, ), ;, if, (, nameKey, ==, null, )]
[;, if, (, nameKey, ==, null, ), {, return, iID, ;, }, String, name, =, cNameProvider, ., getShortName, (, locale]
[), ;, if, (, nameKey, ==, null, ), {, return, iID, ;, }, String, name, =, cNameProvider, ., getShortName, (]
[), {, return, iID, ;, }, String, name, =, cNameProvider, ., getShortName, (, locale, ,, iID, ,, nameKey, ), ;]
[==, null, ), {, return, iID, ;, }, String, name, =, cNameProvider, ., getShortName, (, locale, ,, iID, ,, nameKey]
[), {, return, iID, ;, }, String, name, =, cNameProvider, ., getShortName, (, locale, ,, iID, ,, nameKey, ), ;]
[;, }, String, name, =, cNameProvider, ., getShortName, (, locale, ,, iID, ,, nameKey, ), ;, if, (, name, !=]
[;, if, (, name, !=, null, ), {, return, name, ;, }, return, printOffset, (, getOffset, (, instant, ), )]
[., getShortName, (, locale, ,, iID, ,, nameKey, ), ;, if, (, name, !=, null, ), {, return, name, ;]
[,, iID, ,, nameKey, ), ;, if, (, name, !=, null, ), {, return, name, ;, }, return, printOffset, (]
[,, nameKey, ), ;, if, (, name, !=, null, ), {, return, name, ;, }, return, printOffset, (, getOffset, (]
[), ;, if, (, name, !=, null, ), {, return, name, ;, }, return, printOffset, (, getOffset, (, instant, )]
[), {, return, name, ;, }, return, printOffset, (, getOffset, (, instant, ), ), ;, }, public, final, String, getName]
[!=, null, ), {, return, name, ;, }, return, printOffset, (, getOffset, (, instant, ), ), ;, }, public, final]
[), {, return, name, ;, }, return, printOffset, (, getOffset, (, instant, ), ), ;, }, public, final, String, getName]
[;, }, return, printOffset, (, getOffset, (, instant, ), ), ;, }, public, final, String, getName, (, long, instant, )]
[;, }, public, final, String, getName, (, long, instant, ), {, return, getName, (, instant, ,, null, ), ;, }]
[), ;, }, public, final, String, getName, (, long, instant, ), {, return, getName, (, instant, ,, null, ), ;]
[), ), ;, }, public, final, String, getName, (, long, instant, ), {, return, getName, (, instant, ,, null, )]
[;, }, public, String, getName, (, long, instant, ,, Locale, locale, ), {, if, (, locale, ==, null, ), {]
[,, null, ), ;, }, public, String, getName, (, long, instant, ,, Locale, locale, ), {, if, (, locale, ==]
[), ;, }, public, String, getName, (, long, instant, ,, Locale, locale, ), {, if, (, locale, ==, null, )]
[), {, locale, =, Locale, ., getDefault, (, ), ;, }, String, nameKey, =, getNameKey, (, instant, ), ;, if]
[==, null, ), {, locale, =, Locale, ., getDefault, (, ), ;, }, String, nameKey, =, getNameKey, (, instant, )]
[), {, locale, =, Locale, ., getDefault, (, ), ;, }, String, nameKey, =, getNameKey, (, instant, ), ;, if]
[=, Locale, ., getDefault, (, ), ;, }, String, nameKey, =, getNameKey, (, instant, ), ;, if, (, nameKey, ==]
[;, }, String, nameKey, =, getNameKey, (, instant, ), ;, if, (, nameKey, ==, null, ), {, return, iID, ;]
[., getDefault, (, ), ;, }, String, nameKey, =, getNameKey, (, instant, ), ;, if, (, nameKey, ==, null, )]
[;, if, (, nameKey, ==, null, ), {, return, iID, ;, }, String, name, =, cNameProvider, ., getName, (, locale]
[), ;, if, (, nameKey, ==, null, ), {, return, iID, ;, }, String, name, =, cNameProvider, ., getName, (]
[), {, return, iID, ;, }, String, name, =, cNameProvider, ., getName, (, locale, ,, iID, ,, nameKey, ), ;]
[==, null, ), {, return, iID, ;, }, String, name, =, cNameProvider, ., getName, (, locale, ,, iID, ,, nameKey]
[), {, return, iID, ;, }, String, name, =, cNameProvider, ., getName, (, locale, ,, iID, ,, nameKey, ), ;]
[;, }, String, name, =, cNameProvider, ., getName, (, locale, ,, iID, ,, nameKey, ), ;, if, (, name, !=]
[;, if, (, name, !=, null, ), {, return, name, ;, }, return, printOffset, (, getOffset, (, instant, ), )]
[., getName, (, locale, ,, iID, ,, nameKey, ), ;, if, (, name, !=, null, ), {, return, name, ;]
[,, iID, ,, nameKey, ), ;, if, (, name, !=, null, ), {, return, name, ;, }, return, printOffset, (]
[,, nameKey, ), ;, if, (, name, !=, null, ), {, return, name, ;, }, return, printOffset, (, getOffset, (]
[), ;, if, (, name, !=, null, ), {, return, name, ;, }, return, printOffset, (, getOffset, (, instant, )]
[), {, return, name, ;, }, return, printOffset, (, getOffset, (, instant, ), ), ;, }, public, abstract, int, getOffset]
[!=, null, ), {, return, name, ;, }, return, printOffset, (, getOffset, (, instant, ), ), ;, }, public, abstract]
[), {, return, name, ;, }, return, printOffset, (, getOffset, (, instant, ), ), ;, }, public, abstract, int, getOffset]
[;, }, return, printOffset, (, getOffset, (, instant, ), ), ;, }, public, abstract, int, getOffset, (, long, instant, )]
[;, }, public, abstract, int, getOffset, (, long, instant, ), ;, public, final, int, getOffset, (, ReadableInstant, instant, ), {]
[), ;, }, public, abstract, int, getOffset, (, long, instant, ), ;, public, final, int, getOffset, (, ReadableInstant, instant, )]
[), ), ;, }, public, abstract, int, getOffset, (, long, instant, ), ;, public, final, int, getOffset, (, ReadableInstant, instant]
[), {, return, getOffset, (, DateTimeUtils, ., currentTimeMillis, (, ), ), ;, }, return, getOffset, (, instant, ., getMillis, (]
[==, null, ), {, return, getOffset, (, DateTimeUtils, ., currentTimeMillis, (, ), ), ;, }, return, getOffset, (, instant, .]
[), {, return, getOffset, (, DateTimeUtils, ., currentTimeMillis, (, ), ), ;, }, return, getOffset, (, instant, ., getMillis, (]
[;, }, return, getOffset, (, instant, ., getMillis, (, ), ), ;, }, public, abstract, int, getStandardOffset, (, long, instant]
[), ;, }, return, getOffset, (, instant, ., getMillis, (, ), ), ;, }, public, abstract, int, getStandardOffset, (, long]
[., currentTimeMillis, (, ), ), ;, }, return, getOffset, (, instant, ., getMillis, (, ), ), ;, }, public, abstract]
[;, }, public, abstract, int, getStandardOffset, (, long, instant, ), ;, public, boolean, isStandardOffset, (, long, instant, ), {, return]
[), ;, }, public, abstract, int, getStandardOffset, (, long, instant, ), ;, public, boolean, isStandardOffset, (, long, instant, ), {]
[., getMillis, (, ), ), ;, }, public, abstract, int, getStandardOffset, (, long, instant, ), ;, public, boolean, isStandardOffset, (]
[;, }, public, int, getOffsetFromLocal, (, long, instantLocal, ), {, final, int, offsetLocal, =, getOffset, (, instantLocal, ), ;, final]
[==, getStandardOffset, (, instant, ), ;, }, public, int, getOffsetFromLocal, (, long, instantLocal, ), {, final, int, offsetLocal, =, getOffset]
[), ==, getStandardOffset, (, instant, ), ;, }, public, int, getOffsetFromLocal, (, long, instantLocal, ), {, final, int, offsetLocal, =]
[;, }, public, int, getOffsetFromLocal, (, long, instantLocal, ), {, final, int, offsetLocal, =, getOffset, (, instantLocal, ), ;, final]
[), ;, }, public, int, getOffsetFromLocal, (, long, instantLocal, ), {, final, int, offsetLocal, =, getOffset, (, instantLocal, ), ;]
[;, final, long, instantAdjusted, =, instantLocal, -, offsetLocal, ;, final, int, offsetAdjusted, =, getOffset, (, instantAdjusted, ), ;, if, (]
[), ;, final, long, instantAdjusted, =, instantLocal, -, offsetLocal, ;, final, int, offsetAdjusted, =, getOffset, (, instantAdjusted, ), ;, if]
[;, final, int, offsetAdjusted, =, getOffset, (, instantAdjusted, ), ;, if, (, offsetLocal, !=, offsetAdjusted, ), {, if, (, (]
[-, offsetLocal, ;, final, int, offsetAdjusted, =, getOffset, (, instantAdjusted, ), ;, if, (, offsetLocal, !=, offsetAdjusted, ), {, if]
[;, final, int, offsetAdjusted, =, getOffset, (, instantAdjusted, ), ;, if, (, offsetLocal, !=, offsetAdjusted, ), {, if, (, (]
[;, if, (, offsetLocal, !=, offsetAdjusted, ), {, if, (, (, offsetLocal, -, offsetAdjusted, ), <, 0, ), {, long]
[), ;, if, (, offsetLocal, !=, offsetAdjusted, ), {, if, (, (, offsetLocal, -, offsetAdjusted, ), <, 0, ), {]
[), {, if, (, (, offsetLocal, -, offsetAdjusted, ), <, 0, ), {, long, nextLocal, =, nextTransition, (, instantAdjusted, )]
[!=, offsetAdjusted, ), {, if, (, (, offsetLocal, -, offsetAdjusted, ), <, 0, ), {, long, nextLocal, =, nextTransition, (]
[), {, if, (, (, offsetLocal, -, offsetAdjusted, ), <, 0, ), {, long, nextLocal, =, nextTransition, (, instantAdjusted, )]
[), {, long, nextLocal, =, nextTransition, (, instantAdjusted, ), ;, long, nextAdjusted, =, nextTransition, (, instantLocal, -, offsetAdjusted, ), ;]
[<, 0, ), {, long, nextLocal, =, nextTransition, (, instantAdjusted, ), ;, long, nextAdjusted, =, nextTransition, (, instantLocal, -, offsetAdjusted]
[), <, 0, ), {, long, nextLocal, =, nextTransition, (, instantAdjusted, ), ;, long, nextAdjusted, =, nextTransition, (, instantLocal, -]
[-, offsetAdjusted, ), <, 0, ), {, long, nextLocal, =, nextTransition, (, instantAdjusted, ), ;, long, nextAdjusted, =, nextTransition, (]
[), <, 0, ), {, long, nextLocal, =, nextTransition, (, instantAdjusted, ), ;, long, nextAdjusted, =, nextTransition, (, instantLocal, -]
[), {, long, nextLocal, =, nextTransition, (, instantAdjusted, ), ;, long, nextAdjusted, =, nextTransition, (, instantLocal, -, offsetAdjusted, ), ;]
[;, long, nextAdjusted, =, nextTransition, (, instantLocal, -, offsetAdjusted, ), ;, if, (, nextLocal, !=, nextAdjusted, ), {, return, offsetLocal]
[), ;, long, nextAdjusted, =, nextTransition, (, instantLocal, -, offsetAdjusted, ), ;, if, (, nextLocal, !=, nextAdjusted, ), {, return]
[;, if, (, nextLocal, !=, nextAdjusted, ), {, return, offsetLocal, ;, }, }, }, else, if, (, offsetLocal, >=, 0]
[), ;, if, (, nextLocal, !=, nextAdjusted, ), {, return, offsetLocal, ;, }, }, }, else, if, (, offsetLocal, >=]
[-, offsetAdjusted, ), ;, if, (, nextLocal, !=, nextAdjusted, ), {, return, offsetLocal, ;, }, }, }, else, if, (]
[), ;, if, (, nextLocal, !=, nextAdjusted, ), {, return, offsetLocal, ;, }, }, }, else, if, (, offsetLocal, >=]
[), {, return, offsetLocal, ;, }, }, }, else, if, (, offsetLocal, >=, 0, ), {, long, prev, =, previousTransition]
[!=, nextAdjusted, ), {, return, offsetLocal, ;, }, }, }, else, if, (, offsetLocal, >=, 0, ), {, long, prev]
[), {, return, offsetLocal, ;, }, }, }, else, if, (, offsetLocal, >=, 0, ), {, long, prev, =, previousTransition]
[;, }, }, }, else, if, (, offsetLocal, >=, 0, ), {, long, prev, =, previousTransition, (, instantAdjusted, ), ;]
[), {, long, prev, =, previousTransition, (, instantAdjusted, ), ;, if, (, prev, <, instantAdjusted, ), {, int, offsetPrev, =]
[>=, 0, ), {, long, prev, =, previousTransition, (, instantAdjusted, ), ;, if, (, prev, <, instantAdjusted, ), {, int]
[), {, long, prev, =, previousTransition, (, instantAdjusted, ), ;, if, (, prev, <, instantAdjusted, ), {, int, offsetPrev, =]
[;, if, (, prev, <, instantAdjusted, ), {, int, offsetPrev, =, getOffset, (, prev, ), ;, int, diff, =, offsetPrev]
[), ;, if, (, prev, <, instantAdjusted, ), {, int, offsetPrev, =, getOffset, (, prev, ), ;, int, diff, =]
[), {, int, offsetPrev, =, getOffset, (, prev, ), ;, int, diff, =, offsetPrev, -, offsetLocal, ;, if, (, instantAdjusted]
[<, instantAdjusted, ), {, int, offsetPrev, =, getOffset, (, prev, ), ;, int, diff, =, offsetPrev, -, offsetLocal, ;, if]
[), {, int, offsetPrev, =, getOffset, (, prev, ), ;, int, diff, =, offsetPrev, -, offsetLocal, ;, if, (, instantAdjusted]
[;, int, diff, =, offsetPrev, -, offsetLocal, ;, if, (, instantAdjusted, -, prev, <=, diff, ), {, return, offsetPrev, ;]
[), ;, int, diff, =, offsetPrev, -, offsetLocal, ;, if, (, instantAdjusted, -, prev, <=, diff, ), {, return, offsetPrev]
[;, if, (, instantAdjusted, -, prev, <=, diff, ), {, return, offsetPrev, ;, }, }, }, return, offsetAdjusted, ;, }]
[-, offsetLocal, ;, if, (, instantAdjusted, -, prev, <=, diff, ), {, return, offsetPrev, ;, }, }, }, return, offsetAdjusted]
[;, if, (, instantAdjusted, -, prev, <=, diff, ), {, return, offsetPrev, ;, }, }, }, return, offsetAdjusted, ;, }]
[), {, return, offsetPrev, ;, }, }, }, return, offsetAdjusted, ;, }, public, long, convertUTCToLocal, (, long, instantUTC, ), {]
[<=, diff, ), {, return, offsetPrev, ;, }, }, }, return, offsetAdjusted, ;, }, public, long, convertUTCToLocal, (, long, instantUTC]
[-, prev, <=, diff, ), {, return, offsetPrev, ;, }, }, }, return, offsetAdjusted, ;, }, public, long, convertUTCToLocal, (]
[<=, diff, ), {, return, offsetPrev, ;, }, }, }, return, offsetAdjusted, ;, }, public, long, convertUTCToLocal, (, long, instantUTC]
[), {, return, offsetPrev, ;, }, }, }, return, offsetAdjusted, ;, }, public, long, convertUTCToLocal, (, long, instantUTC, ), {]
[;, }, }, }, return, offsetAdjusted, ;, }, public, long, convertUTCToLocal, (, long, instantUTC, ), {, int, offset, =, getOffset]
[;, }, public, long, convertUTCToLocal, (, long, instantUTC, ), {, int, offset, =, getOffset, (, instantUTC, ), ;, long, instantLocal]
[;, long, instantLocal, =, instantUTC, +, offset, ;, if, (, (, instantUTC, ^, instantLocal, ), <, 0, &&, (, instantUTC]
[), ;, long, instantLocal, =, instantUTC, +, offset, ;, if, (, (, instantUTC, ^, instantLocal, ), <, 0, &&, (]
[;, if, (, (, instantUTC, ^, instantLocal, ), <, 0, &&, (, instantUTC, ^, offset, ), >=, 0, ), {]
[+, offset, ;, if, (, (, instantUTC, ^, instantLocal, ), <, 0, &&, (, instantUTC, ^, offset, ), >=, 0]
[;, if, (, (, instantUTC, ^, instantLocal, ), <, 0, &&, (, instantUTC, ^, offset, ), >=, 0, ), {]
[), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, instantLocal, ;, }, public, long, convertLocalToUTC, (, long, instantLocal]
[&&, (, instantUTC, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, instantLocal]
[<, 0, &&, (, instantUTC, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }]
[), <, 0, &&, (, instantUTC, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;]
[^, instantLocal, ), <, 0, &&, (, instantUTC, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow"]
[), <, 0, &&, (, instantUTC, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;]
[&&, (, instantUTC, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, instantLocal]
[), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, instantLocal, ;, }, public, long, convertLocalToUTC, (, long, instantLocal]
[>=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, instantLocal, ;, }, public, long, convertLocalToUTC, (]
[), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, instantLocal, ;, }, public, long, convertLocalToUTC]
[^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, instantLocal, ;, }, public]
[), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, instantLocal, ;, }, public, long, convertLocalToUTC]
[), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return, instantLocal, ;, }, public, long, convertLocalToUTC, (, long, instantLocal]
[;, }, return, instantLocal, ;, }, public, long, convertLocalToUTC, (, long, instantLocal, ,, boolean, strict, ,, long, originalInstantUTC, ), {]
[), ;, }, return, instantLocal, ;, }, public, long, convertLocalToUTC, (, long, instantLocal, ,, boolean, strict, ,, long, originalInstantUTC, )]
[;, }, public, long, convertLocalToUTC, (, long, instantLocal, ,, boolean, strict, ,, long, originalInstantUTC, ), {, int, offsetOriginal, =, getOffset]
[;, long, instantUTC, =, instantLocal, -, offsetOriginal, ;, int, offsetLocalFromOriginal, =, getOffset, (, instantUTC, ), ;, if, (, offsetLocalFromOriginal, ==]
[), ;, long, instantUTC, =, instantLocal, -, offsetOriginal, ;, int, offsetLocalFromOriginal, =, getOffset, (, instantUTC, ), ;, if, (, offsetLocalFromOriginal]
[;, int, offsetLocalFromOriginal, =, getOffset, (, instantUTC, ), ;, if, (, offsetLocalFromOriginal, ==, offsetOriginal, ), {, return, instantUTC, ;, }]
[-, offsetOriginal, ;, int, offsetLocalFromOriginal, =, getOffset, (, instantUTC, ), ;, if, (, offsetLocalFromOriginal, ==, offsetOriginal, ), {, return, instantUTC]
[;, int, offsetLocalFromOriginal, =, getOffset, (, instantUTC, ), ;, if, (, offsetLocalFromOriginal, ==, offsetOriginal, ), {, return, instantUTC, ;, }]
[;, if, (, offsetLocalFromOriginal, ==, offsetOriginal, ), {, return, instantUTC, ;, }, return, convertLocalToUTC, (, instantLocal, ,, strict, ), ;]
[), ;, if, (, offsetLocalFromOriginal, ==, offsetOriginal, ), {, return, instantUTC, ;, }, return, convertLocalToUTC, (, instantLocal, ,, strict, )]
[), {, return, instantUTC, ;, }, return, convertLocalToUTC, (, instantLocal, ,, strict, ), ;, }, public, long, convertLocalToUTC, (, long]
[==, offsetOriginal, ), {, return, instantUTC, ;, }, return, convertLocalToUTC, (, instantLocal, ,, strict, ), ;, }, public, long, convertLocalToUTC]
[), {, return, instantUTC, ;, }, return, convertLocalToUTC, (, instantLocal, ,, strict, ), ;, }, public, long, convertLocalToUTC, (, long]
[;, }, return, convertLocalToUTC, (, instantLocal, ,, strict, ), ;, }, public, long, convertLocalToUTC, (, long, instantLocal, ,, boolean, strict]
[;, }, public, long, convertLocalToUTC, (, long, instantLocal, ,, boolean, strict, ), {, int, offsetLocal, =, getOffset, (, instantLocal, )]
[,, strict, ), ;, }, public, long, convertLocalToUTC, (, long, instantLocal, ,, boolean, strict, ), {, int, offsetLocal, =, getOffset]
[), ;, }, public, long, convertLocalToUTC, (, long, instantLocal, ,, boolean, strict, ), {, int, offsetLocal, =, getOffset, (, instantLocal]
[;, int, offset, =, getOffset, (, instantLocal, -, offsetLocal, ), ;, if, (, offsetLocal, !=, offset, ), {, if, (]
[), ;, int, offset, =, getOffset, (, instantLocal, -, offsetLocal, ), ;, if, (, offsetLocal, !=, offset, ), {, if]
[;, if, (, offsetLocal, !=, offset, ), {, if, (, strict, ||, offsetLocal, <, 0, ), {, long, nextLocal, =]
[), ;, if, (, offsetLocal, !=, offset, ), {, if, (, strict, ||, offsetLocal, <, 0, ), {, long, nextLocal]
[-, offsetLocal, ), ;, if, (, offsetLocal, !=, offset, ), {, if, (, strict, ||, offsetLocal, <, 0, ), {]
[), ;, if, (, offsetLocal, !=, offset, ), {, if, (, strict, ||, offsetLocal, <, 0, ), {, long, nextLocal]
[), {, if, (, strict, ||, offsetLocal, <, 0, ), {, long, nextLocal, =, nextTransition, (, instantLocal, -, offsetLocal, )]
[!=, offset, ), {, if, (, strict, ||, offsetLocal, <, 0, ), {, long, nextLocal, =, nextTransition, (, instantLocal, -]
[), {, if, (, strict, ||, offsetLocal, <, 0, ), {, long, nextLocal, =, nextTransition, (, instantLocal, -, offsetLocal, )]
[), {, long, nextLocal, =, nextTransition, (, instantLocal, -, offsetLocal, ), ;, if, (, nextLocal, ==, (, instantLocal, -, offsetLocal]
[||, offsetLocal, <, 0, ), {, long, nextLocal, =, nextTransition, (, instantLocal, -, offsetLocal, ), ;, if, (, nextLocal, ==]
[), {, long, nextLocal, =, nextTransition, (, instantLocal, -, offsetLocal, ), ;, if, (, nextLocal, ==, (, instantLocal, -, offsetLocal]
[<, 0, ), {, long, nextLocal, =, nextTransition, (, instantLocal, -, offsetLocal, ), ;, if, (, nextLocal, ==, (, instantLocal]
[), {, long, nextLocal, =, nextTransition, (, instantLocal, -, offsetLocal, ), ;, if, (, nextLocal, ==, (, instantLocal, -, offsetLocal]
[;, if, (, nextLocal, ==, (, instantLocal, -, offsetLocal, ), ), {, nextLocal, =, Long, ., MAX_VALUE, ;, }, long]
[), ;, if, (, nextLocal, ==, (, instantLocal, -, offsetLocal, ), ), {, nextLocal, =, Long, ., MAX_VALUE, ;, }]
[-, offsetLocal, ), ;, if, (, nextLocal, ==, (, instantLocal, -, offsetLocal, ), ), {, nextLocal, =, Long, ., MAX_VALUE]
[), ;, if, (, nextLocal, ==, (, instantLocal, -, offsetLocal, ), ), {, nextLocal, =, Long, ., MAX_VALUE, ;, }]
[), {, nextLocal, =, Long, ., MAX_VALUE, ;, }, long, nextAdjusted, =, nextTransition, (, instantLocal, -, offset, ), ;, if]
[==, (, instantLocal, -, offsetLocal, ), ), {, nextLocal, =, Long, ., MAX_VALUE, ;, }, long, nextAdjusted, =, nextTransition, (]
[), {, nextLocal, =, Long, ., MAX_VALUE, ;, }, long, nextAdjusted, =, nextTransition, (, instantLocal, -, offset, ), ;, if]
[), ), {, nextLocal, =, Long, ., MAX_VALUE, ;, }, long, nextAdjusted, =, nextTransition, (, instantLocal, -, offset, ), ;]
[-, offsetLocal, ), ), {, nextLocal, =, Long, ., MAX_VALUE, ;, }, long, nextAdjusted, =, nextTransition, (, instantLocal, -, offset]
[), ), {, nextLocal, =, Long, ., MAX_VALUE, ;, }, long, nextAdjusted, =, nextTransition, (, instantLocal, -, offset, ), ;]
[=, Long, ., MAX_VALUE, ;, }, long, nextAdjusted, =, nextTransition, (, instantLocal, -, offset, ), ;, if, (, nextAdjusted, ==]
[;, }, long, nextAdjusted, =, nextTransition, (, instantLocal, -, offset, ), ;, if, (, nextAdjusted, ==, (, instantLocal, -, offset]
[., MAX_VALUE, ;, }, long, nextAdjusted, =, nextTransition, (, instantLocal, -, offset, ), ;, if, (, nextAdjusted, ==, (, instantLocal]
[;, if, (, nextAdjusted, ==, (, instantLocal, -, offset, ), ), {, nextAdjusted, =, Long, ., MAX_VALUE, ;, }, if]
[), ;, if, (, nextAdjusted, ==, (, instantLocal, -, offset, ), ), {, nextAdjusted, =, Long, ., MAX_VALUE, ;, }]
[-, offset, ), ;, if, (, nextAdjusted, ==, (, instantLocal, -, offset, ), ), {, nextAdjusted, =, Long, ., MAX_VALUE]
[), ;, if, (, nextAdjusted, ==, (, instantLocal, -, offset, ), ), {, nextAdjusted, =, Long, ., MAX_VALUE, ;, }]
[), {, nextAdjusted, =, Long, ., MAX_VALUE, ;, }, if, (, nextLocal, !=, nextAdjusted, ), {, if, (, strict, )]
[==, (, instantLocal, -, offset, ), ), {, nextAdjusted, =, Long, ., MAX_VALUE, ;, }, if, (, nextLocal, !=, nextAdjusted]
[), {, nextAdjusted, =, Long, ., MAX_VALUE, ;, }, if, (, nextLocal, !=, nextAdjusted, ), {, if, (, strict, )]
[), ), {, nextAdjusted, =, Long, ., MAX_VALUE, ;, }, if, (, nextLocal, !=, nextAdjusted, ), {, if, (, strict]
[-, offset, ), ), {, nextAdjusted, =, Long, ., MAX_VALUE, ;, }, if, (, nextLocal, !=, nextAdjusted, ), {, if]
[), ), {, nextAdjusted, =, Long, ., MAX_VALUE, ;, }, if, (, nextLocal, !=, nextAdjusted, ), {, if, (, strict]
[=, Long, ., MAX_VALUE, ;, }, if, (, nextLocal, !=, nextAdjusted, ), {, if, (, strict, ), {, throw, new]
[;, }, if, (, nextLocal, !=, nextAdjusted, ), {, if, (, strict, ), {, throw, new, IllegalInstantException, (, instantLocal, ,]
[., MAX_VALUE, ;, }, if, (, nextLocal, !=, nextAdjusted, ), {, if, (, strict, ), {, throw, new, IllegalInstantException, (]
[), {, if, (, strict, ), {, throw, new, IllegalInstantException, (, instantLocal, ,, getID, (, ), ), ;, }, else]
[!=, nextAdjusted, ), {, if, (, strict, ), {, throw, new, IllegalInstantException, (, instantLocal, ,, getID, (, ), ), ;]
[), {, if, (, strict, ), {, throw, new, IllegalInstantException, (, instantLocal, ,, getID, (, ), ), ;, }, else]
[), {, throw, new, IllegalInstantException, (, instantLocal, ,, getID, (, ), ), ;, }, else, {, offset, =, offsetLocal, ;]
[;, }, else, {, offset, =, offsetLocal, ;, }, }, }, }, long, instantUTC, =, instantLocal, -, offset, ;, if]
[,, getID, (, ), ), ;, }, else, {, offset, =, offsetLocal, ;, }, }, }, }, long, instantUTC, =]
[), ;, }, else, {, offset, =, offsetLocal, ;, }, }, }, }, long, instantUTC, =, instantLocal, -, offset, ;]
[=, offsetLocal, ;, }, }, }, }, long, instantUTC, =, instantLocal, -, offset, ;, if, (, (, instantLocal, ^, instantUTC]
[;, }, }, }, }, long, instantUTC, =, instantLocal, -, offset, ;, if, (, (, instantLocal, ^, instantUTC, ), <]
[;, if, (, (, instantLocal, ^, instantUTC, ), <, 0, &&, (, instantLocal, ^, offset, ), <, 0, ), {]
[-, offset, ;, if, (, (, instantLocal, ^, instantUTC, ), <, 0, &&, (, instantLocal, ^, offset, ), <, 0]
[;, if, (, (, instantLocal, ^, instantUTC, ), <, 0, &&, (, instantLocal, ^, offset, ), <, 0, ), {]
[), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, instantUTC, ;, }, public, long, getMillisKeepLocal, (, DateTimeZone, newZone]
[&&, (, instantLocal, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, instantUTC]
[<, 0, &&, (, instantLocal, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }]
[), <, 0, &&, (, instantLocal, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;]
[^, instantUTC, ), <, 0, &&, (, instantLocal, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow"]
[), <, 0, &&, (, instantLocal, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;]
[&&, (, instantLocal, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, instantUTC]
[), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, instantUTC, ;, }, public, long, getMillisKeepLocal, (, DateTimeZone, newZone]
[<, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, instantUTC, ;, }, public, long, getMillisKeepLocal, (]
[), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, instantUTC, ;, }, public, long, getMillisKeepLocal]
[^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, instantUTC, ;, }, public]
[), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, instantUTC, ;, }, public, long, getMillisKeepLocal]
[), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, instantUTC, ;, }, public, long, getMillisKeepLocal, (, DateTimeZone, newZone]
[;, }, return, instantUTC, ;, }, public, long, getMillisKeepLocal, (, DateTimeZone, newZone, ,, long, oldInstant, ), {, if, (, newZone]
[), ;, }, return, instantUTC, ;, }, public, long, getMillisKeepLocal, (, DateTimeZone, newZone, ,, long, oldInstant, ), {, if, (]
[;, }, public, long, getMillisKeepLocal, (, DateTimeZone, newZone, ,, long, oldInstant, ), {, if, (, newZone, ==, null, ), {]
[), {, newZone, =, DateTimeZone, ., getDefault, (, ), ;, }, if, (, newZone, ==, this, ), {, return, oldInstant]
[==, null, ), {, newZone, =, DateTimeZone, ., getDefault, (, ), ;, }, if, (, newZone, ==, this, ), {]
[), {, newZone, =, DateTimeZone, ., getDefault, (, ), ;, }, if, (, newZone, ==, this, ), {, return, oldInstant]
[=, DateTimeZone, ., getDefault, (, ), ;, }, if, (, newZone, ==, this, ), {, return, oldInstant, ;, }, long]
[;, }, if, (, newZone, ==, this, ), {, return, oldInstant, ;, }, long, instantLocal, =, convertUTCToLocal, (, oldInstant, )]
[., getDefault, (, ), ;, }, if, (, newZone, ==, this, ), {, return, oldInstant, ;, }, long, instantLocal, =]
[), {, return, oldInstant, ;, }, long, instantLocal, =, convertUTCToLocal, (, oldInstant, ), ;, return, newZone, ., convertLocalToUTC, (, instantLocal]
[==, this, ), {, return, oldInstant, ;, }, long, instantLocal, =, convertUTCToLocal, (, oldInstant, ), ;, return, newZone, ., convertLocalToUTC]
[), {, return, oldInstant, ;, }, long, instantLocal, =, convertUTCToLocal, (, oldInstant, ), ;, return, newZone, ., convertLocalToUTC, (, instantLocal]
[;, }, long, instantLocal, =, convertUTCToLocal, (, oldInstant, ), ;, return, newZone, ., convertLocalToUTC, (, instantLocal, ,, false, ,, oldInstant]
[;, return, newZone, ., convertLocalToUTC, (, instantLocal, ,, false, ,, oldInstant, ), ;, }, public, boolean, isLocalDateTimeGap, (, LocalDateTime, localDateTime]
[), ;, return, newZone, ., convertLocalToUTC, (, instantLocal, ,, false, ,, oldInstant, ), ;, }, public, boolean, isLocalDateTimeGap, (, LocalDateTime]
[;, }, public, boolean, isLocalDateTimeGap, (, LocalDateTime, localDateTime, ), {, if, (, isFixed, (, ), ), {, return, false, ;]
[., convertLocalToUTC, (, instantLocal, ,, false, ,, oldInstant, ), ;, }, public, boolean, isLocalDateTimeGap, (, LocalDateTime, localDateTime, ), {, if]
[,, false, ,, oldInstant, ), ;, }, public, boolean, isLocalDateTimeGap, (, LocalDateTime, localDateTime, ), {, if, (, isFixed, (, )]
[,, oldInstant, ), ;, }, public, boolean, isLocalDateTimeGap, (, LocalDateTime, localDateTime, ), {, if, (, isFixed, (, ), ), {]
[), ;, }, public, boolean, isLocalDateTimeGap, (, LocalDateTime, localDateTime, ), {, if, (, isFixed, (, ), ), {, return, false]
[), {, return, false, ;, }, try, {, localDateTime, ., toDateTime, (, this, ), ;, return, false, ;, }, catch]
[;, }, try, {, localDateTime, ., toDateTime, (, this, ), ;, return, false, ;, }, catch, (, IllegalInstantException, ex, )]
[;, return, false, ;, }, catch, (, IllegalInstantException, ex, ), {, return, true, ;, }, }, public, long, adjustOffset, (]
[., toDateTime, (, this, ), ;, return, false, ;, }, catch, (, IllegalInstantException, ex, ), {, return, true, ;, }]
[), ;, return, false, ;, }, catch, (, IllegalInstantException, ex, ), {, return, true, ;, }, }, public, long, adjustOffset]
[;, }, catch, (, IllegalInstantException, ex, ), {, return, true, ;, }, }, public, long, adjustOffset, (, long, instant, ,]
[;, }, }, public, long, adjustOffset, (, long, instant, ,, boolean, earlierOrLater, ), {, long, instantBefore, =, instant, -, 3]
[;, long, instantAfter, =, instant, +, 3, *, DateTimeConstants, ., MILLIS_PER_HOUR, ;, long, offsetBefore, =, getOffset, (, instantBefore, ), ;]
[-, 3, *, DateTimeConstants, ., MILLIS_PER_HOUR, ;, long, instantAfter, =, instant, +, 3, *, DateTimeConstants, ., MILLIS_PER_HOUR, ;, long, offsetBefore]
[;, long, instantAfter, =, instant, +, 3, *, DateTimeConstants, ., MILLIS_PER_HOUR, ;, long, offsetBefore, =, getOffset, (, instantBefore, ), ;]
[*, DateTimeConstants, ., MILLIS_PER_HOUR, ;, long, instantAfter, =, instant, +, 3, *, DateTimeConstants, ., MILLIS_PER_HOUR, ;, long, offsetBefore, =, getOffset]
[;, long, instantAfter, =, instant, +, 3, *, DateTimeConstants, ., MILLIS_PER_HOUR, ;, long, offsetBefore, =, getOffset, (, instantBefore, ), ;]
[., MILLIS_PER_HOUR, ;, long, instantAfter, =, instant, +, 3, *, DateTimeConstants, ., MILLIS_PER_HOUR, ;, long, offsetBefore, =, getOffset, (, instantBefore]
[;, long, offsetBefore, =, getOffset, (, instantBefore, ), ;, long, offsetAfter, =, getOffset, (, instantAfter, ), ;, if, (, offsetBefore]
[+, 3, *, DateTimeConstants, ., MILLIS_PER_HOUR, ;, long, offsetBefore, =, getOffset, (, instantBefore, ), ;, long, offsetAfter, =, getOffset, (]
[;, long, offsetBefore, =, getOffset, (, instantBefore, ), ;, long, offsetAfter, =, getOffset, (, instantAfter, ), ;, if, (, offsetBefore]
[*, DateTimeConstants, ., MILLIS_PER_HOUR, ;, long, offsetBefore, =, getOffset, (, instantBefore, ), ;, long, offsetAfter, =, getOffset, (, instantAfter, )]
[;, long, offsetBefore, =, getOffset, (, instantBefore, ), ;, long, offsetAfter, =, getOffset, (, instantAfter, ), ;, if, (, offsetBefore]
[., MILLIS_PER_HOUR, ;, long, offsetBefore, =, getOffset, (, instantBefore, ), ;, long, offsetAfter, =, getOffset, (, instantAfter, ), ;, if]
[;, long, offsetAfter, =, getOffset, (, instantAfter, ), ;, if, (, offsetBefore, <=, offsetAfter, ), {, return, instant, ;, }]
[), ;, long, offsetAfter, =, getOffset, (, instantAfter, ), ;, if, (, offsetBefore, <=, offsetAfter, ), {, return, instant, ;]
[;, if, (, offsetBefore, <=, offsetAfter, ), {, return, instant, ;, }, long, diff, =, offsetBefore, -, offsetAfter, ;, long]
[), ;, if, (, offsetBefore, <=, offsetAfter, ), {, return, instant, ;, }, long, diff, =, offsetBefore, -, offsetAfter, ;]
[), {, return, instant, ;, }, long, diff, =, offsetBefore, -, offsetAfter, ;, long, transition, =, nextTransition, (, instantBefore, )]
[<=, offsetAfter, ), {, return, instant, ;, }, long, diff, =, offsetBefore, -, offsetAfter, ;, long, transition, =, nextTransition, (]
[), {, return, instant, ;, }, long, diff, =, offsetBefore, -, offsetAfter, ;, long, transition, =, nextTransition, (, instantBefore, )]
[;, }, long, diff, =, offsetBefore, -, offsetAfter, ;, long, transition, =, nextTransition, (, instantBefore, ), ;, long, overlapStart, =]
[;, long, transition, =, nextTransition, (, instantBefore, ), ;, long, overlapStart, =, transition, -, diff, ;, long, overlapEnd, =, transition]
[-, offsetAfter, ;, long, transition, =, nextTransition, (, instantBefore, ), ;, long, overlapStart, =, transition, -, diff, ;, long, overlapEnd]
[;, long, transition, =, nextTransition, (, instantBefore, ), ;, long, overlapStart, =, transition, -, diff, ;, long, overlapEnd, =, transition]
[;, long, overlapStart, =, transition, -, diff, ;, long, overlapEnd, =, transition, +, diff, ;, if, (, instant, <, overlapStart]
[), ;, long, overlapStart, =, transition, -, diff, ;, long, overlapEnd, =, transition, +, diff, ;, if, (, instant, <]
[;, long, overlapEnd, =, transition, +, diff, ;, if, (, instant, <, overlapStart, ||, instant, >=, overlapEnd, ), {, return]
[-, diff, ;, long, overlapEnd, =, transition, +, diff, ;, if, (, instant, <, overlapStart, ||, instant, >=, overlapEnd, )]
[;, long, overlapEnd, =, transition, +, diff, ;, if, (, instant, <, overlapStart, ||, instant, >=, overlapEnd, ), {, return]
[;, if, (, instant, <, overlapStart, ||, instant, >=, overlapEnd, ), {, return, instant, ;, }, long, afterStart, =, instant]
[+, diff, ;, if, (, instant, <, overlapStart, ||, instant, >=, overlapEnd, ), {, return, instant, ;, }, long, afterStart]
[;, if, (, instant, <, overlapStart, ||, instant, >=, overlapEnd, ), {, return, instant, ;, }, long, afterStart, =, instant]
[), {, return, instant, ;, }, long, afterStart, =, instant, -, overlapStart, ;, if, (, afterStart, >=, diff, ), {]
[||, instant, >=, overlapEnd, ), {, return, instant, ;, }, long, afterStart, =, instant, -, overlapStart, ;, if, (, afterStart]
[<, overlapStart, ||, instant, >=, overlapEnd, ), {, return, instant, ;, }, long, afterStart, =, instant, -, overlapStart, ;, if]
[||, instant, >=, overlapEnd, ), {, return, instant, ;, }, long, afterStart, =, instant, -, overlapStart, ;, if, (, afterStart]
[), {, return, instant, ;, }, long, afterStart, =, instant, -, overlapStart, ;, if, (, afterStart, >=, diff, ), {]
[>=, overlapEnd, ), {, return, instant, ;, }, long, afterStart, =, instant, -, overlapStart, ;, if, (, afterStart, >=, diff]
[), {, return, instant, ;, }, long, afterStart, =, instant, -, overlapStart, ;, if, (, afterStart, >=, diff, ), {]
[;, }, long, afterStart, =, instant, -, overlapStart, ;, if, (, afterStart, >=, diff, ), {, return, earlierOrLater, ?, instant]
[;, if, (, afterStart, >=, diff, ), {, return, earlierOrLater, ?, instant, :, instant, -, diff, ;, }, else, {]
[-, overlapStart, ;, if, (, afterStart, >=, diff, ), {, return, earlierOrLater, ?, instant, :, instant, -, diff, ;, }]
[;, if, (, afterStart, >=, diff, ), {, return, earlierOrLater, ?, instant, :, instant, -, diff, ;, }, else, {]
[), {, return, earlierOrLater, ?, instant, :, instant, -, diff, ;, }, else, {, return, earlierOrLater, ?, instant, +, diff]
[>=, diff, ), {, return, earlierOrLater, ?, instant, :, instant, -, diff, ;, }, else, {, return, earlierOrLater, ?, instant]
[), {, return, earlierOrLater, ?, instant, :, instant, -, diff, ;, }, else, {, return, earlierOrLater, ?, instant, +, diff]
[;, }, else, {, return, earlierOrLater, ?, instant, +, diff, :, instant, ;, }, }, public, abstract, boolean, isFixed, (]
[?, instant, :, instant, -, diff, ;, }, else, {, return, earlierOrLater, ?, instant, +, diff, :, instant, ;, }]
[:, instant, -, diff, ;, }, else, {, return, earlierOrLater, ?, instant, +, diff, :, instant, ;, }, }, public]
[;, }, else, {, return, earlierOrLater, ?, instant, +, diff, :, instant, ;, }, }, public, abstract, boolean, isFixed, (]
[-, diff, ;, }, else, {, return, earlierOrLater, ?, instant, +, diff, :, instant, ;, }, }, public, abstract, boolean]
[;, }, else, {, return, earlierOrLater, ?, instant, +, diff, :, instant, ;, }, }, public, abstract, boolean, isFixed, (]
[;, }, }, public, abstract, boolean, isFixed, (, ), ;, public, abstract, long, nextTransition, (, long, instant, ), ;, public]
[?, instant, +, diff, :, instant, ;, }, }, public, abstract, boolean, isFixed, (, ), ;, public, abstract, long, nextTransition]
[:, instant, ;, }, }, public, abstract, boolean, isFixed, (, ), ;, public, abstract, long, nextTransition, (, long, instant, )]
[+, diff, :, instant, ;, }, }, public, abstract, boolean, isFixed, (, ), ;, public, abstract, long, nextTransition, (, long]
[:, instant, ;, }, }, public, abstract, boolean, isFixed, (, ), ;, public, abstract, long, nextTransition, (, long, instant, )]
[;, }, }, public, abstract, boolean, isFixed, (, ), ;, public, abstract, long, nextTransition, (, long, instant, ), ;, public]
[;, }, public, abstract, boolean, equals, (, Object, object, ), ;, public, int, hashCode, (, ), {, return, 57, +]
[., getTimeZone, (, iID, ), ;, }, public, abstract, boolean, equals, (, Object, object, ), ;, public, int, hashCode, (]
[., TimeZone, ., getTimeZone, (, iID, ), ;, }, public, abstract, boolean, equals, (, Object, object, ), ;, public, int]
[., util, ., TimeZone, ., getTimeZone, (, iID, ), ;, }, public, abstract, boolean, equals, (, Object, object, ), ;]
[), ;, }, public, abstract, boolean, equals, (, Object, object, ), ;, public, int, hashCode, (, ), {, return, 57]
[;, }, public, String, toString, (, ), {, return, getID, (, ), ;, }, protected, Object, writeReplace, (, ), throws]
[+, getID, (, ), ., hashCode, (, ), ;, }, public, String, toString, (, ), {, return, getID, (, )]
[;, }, public, String, toString, (, ), {, return, getID, (, ), ;, }, protected, Object, writeReplace, (, ), throws]
[., hashCode, (, ), ;, }, public, String, toString, (, ), {, return, getID, (, ), ;, }, protected, Object]
[;, }, protected, Object, writeReplace, (, ), throws, ObjectStreamException, {, return, new, Stub, (, iID, ), ;, }, private, static]
[;, }, private, static, final, class, Stub, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -, 6471952376487863581L, ;, private]
[), ;, }, private, static, final, class, Stub, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -, 6471952376487863581L, ;]
[;, private, transient, String, iID, ;, Stub, (, String, id, ), {, iID, =, id, ;, }, private, void, writeObject]
[;, private, transient, String, iID, ;, Stub, (, String, id, ), {, iID, =, id, ;, }, private, void, writeObject]
[=, id, ;, }, private, void, writeObject, (, ObjectOutputStream, out, ), throws, IOException, {, out, ., writeUTF, (, iID, )]
[;, }, private, void, writeObject, (, ObjectOutputStream, out, ), throws, IOException, {, out, ., writeUTF, (, iID, ), ;, }]
[;, }, private, void, readObject, (, ObjectInputStream, in, ), throws, IOException, {, iID, =, in, ., readUTF, (, ), ;]
[., writeUTF, (, iID, ), ;, }, private, void, readObject, (, ObjectInputStream, in, ), throws, IOException, {, iID, =, in]
[), ;, }, private, void, readObject, (, ObjectInputStream, in, ), throws, IOException, {, iID, =, in, ., readUTF, (, )]
[=, in, ., readUTF, (, ), ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, return, forID, (, iID]
[;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, return, forID, (, iID, ), ;, }, }, }]
[., readUTF, (, ), ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, return, forID, (, iID, ), ;]
[;, }, }, }]
[), ;, }, }, }]
