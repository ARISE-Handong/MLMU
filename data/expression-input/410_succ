[;, final, Set, <, String, >, externMethodsWithoutSignatures, =, Sets, ., newHashSet, (, ), ;, final, Set, <, String, >, nonMethodProperties]
[., newHashSet, (, ), ;, final, Set, <, String, >, externMethodsWithoutSignatures, =, Sets, ., newHashSet, (, ), ;, final, Set]
[;, final, Set, <, String, >, nonMethodProperties, =, Sets, ., newHashSet, (, ), ;, final, Multimap, <, String, ,, Node]
[., newHashSet, (, ), ;, final, Set, <, String, >, nonMethodProperties, =, Sets, ., newHashSet, (, ), ;, final, Multimap]
[;, final, Multimap, <, String, ,, Node, >, methodDefinitions, =, LinkedHashMultimap, ., create, (, ), ;, final, AbstractCompiler, compiler, ;]
[., newHashSet, (, ), ;, final, Multimap, <, String, ,, Node, >, methodDefinitions, =, LinkedHashMultimap, ., create, (, ), ;]
[;, final, AbstractCompiler, compiler, ;, interface, SignatureStore, {, public, void, reset, (, ), ;, public, void, addSignature, (, String, functionName]
[., create, (, ), ;, final, AbstractCompiler, compiler, ;, interface, SignatureStore, {, public, void, reset, (, ), ;, public, void]
[=, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, externMethods, ., clear]
[., compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, externMethods]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, externMethods, ., clear, (, )]
[;, externMethodsWithoutSignatures, ., clear, (, ), ;, getSignatureStore, (, ), ., reset, (, ), ;, methodDefinitions, ., clear, (, )]
[., clear, (, ), ;, externMethodsWithoutSignatures, ., clear, (, ), ;, getSignatureStore, (, ), ., reset, (, ), ;, methodDefinitions]
[;, getSignatureStore, (, ), ., reset, (, ), ;, methodDefinitions, ., clear, (, ), ;, if, (, externs, !=, null]
[., clear, (, ), ;, getSignatureStore, (, ), ., reset, (, ), ;, methodDefinitions, ., clear, (, ), ;, if]
[;, methodDefinitions, ., clear, (, ), ;, if, (, externs, !=, null, ), {, NodeTraversal, ., traverse, (, compiler, ,]
[., reset, (, ), ;, methodDefinitions, ., clear, (, ), ;, if, (, externs, !=, null, ), {, NodeTraversal, .]
[;, if, (, externs, !=, null, ), {, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, GetExternMethods, (, )]
[., clear, (, ), ;, if, (, externs, !=, null, ), {, NodeTraversal, ., traverse, (, compiler, ,, externs, ,]
[), {, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, GetExternMethods, (, ), ), ;, }, List, <, Node]
[!=, null, ), {, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, GetExternMethods, (, ), ), ;, }, List]
[), {, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, GetExternMethods, (, ), ), ;, }, List, <, Node]
[;, }, List, <, Node, >, externsAndJs, =, Lists, ., newArrayList, (, externs, ,, root, ), ;, NodeTraversal, ., traverseRoots]
[., traverse, (, compiler, ,, externs, ,, new, GetExternMethods, (, ), ), ;, }, List, <, Node, >, externsAndJs, =]
[,, externs, ,, new, GetExternMethods, (, ), ), ;, }, List, <, Node, >, externsAndJs, =, Lists, ., newArrayList, (]
[,, new, GetExternMethods, (, ), ), ;, }, List, <, Node, >, externsAndJs, =, Lists, ., newArrayList, (, externs, ,]
[), ;, }, List, <, Node, >, externsAndJs, =, Lists, ., newArrayList, (, externs, ,, root, ), ;, NodeTraversal, .]
[;, NodeTraversal, ., traverseRoots, (, compiler, ,, Lists, ., newArrayList, (, externs, ,, root, ), ,, new, GatherSignatures, (, )]
[., newArrayList, (, externs, ,, root, ), ;, NodeTraversal, ., traverseRoots, (, compiler, ,, Lists, ., newArrayList, (, externs, ,]
[,, root, ), ;, NodeTraversal, ., traverseRoots, (, compiler, ,, Lists, ., newArrayList, (, externs, ,, root, ), ,, new]
[), ;, NodeTraversal, ., traverseRoots, (, compiler, ,, Lists, ., newArrayList, (, externs, ,, root, ), ,, new, GatherSignatures, (]
[;, NodeTraversal, ., traverseRoots, (, compiler, ,, externsAndJs, ,, getActingCallback, (, ), ), ;, }, abstract, Callback, getActingCallback, (, )]
[., traverseRoots, (, compiler, ,, Lists, ., newArrayList, (, externs, ,, root, ), ,, new, GatherSignatures, (, ), ), ;]
[,, Lists, ., newArrayList, (, externs, ,, root, ), ,, new, GatherSignatures, (, ), ), ;, NodeTraversal, ., traverseRoots, (]
[,, new, GatherSignatures, (, ), ), ;, NodeTraversal, ., traverseRoots, (, compiler, ,, externsAndJs, ,, getActingCallback, (, ), ), ;]
[., newArrayList, (, externs, ,, root, ), ,, new, GatherSignatures, (, ), ), ;, NodeTraversal, ., traverseRoots, (, compiler, ,]
[,, root, ), ,, new, GatherSignatures, (, ), ), ;, NodeTraversal, ., traverseRoots, (, compiler, ,, externsAndJs, ,, getActingCallback, (]
[), ,, new, GatherSignatures, (, ), ), ;, NodeTraversal, ., traverseRoots, (, compiler, ,, externsAndJs, ,, getActingCallback, (, ), )]
[), ;, NodeTraversal, ., traverseRoots, (, compiler, ,, externsAndJs, ,, getActingCallback, (, ), ), ;, }, abstract, Callback, getActingCallback, (]
[;, }, abstract, Callback, getActingCallback, (, ), ;, abstract, SignatureStore, getSignatureStore, (, ), ;, private, void, addPossibleSignature, (, String, name]
[., traverseRoots, (, compiler, ,, externsAndJs, ,, getActingCallback, (, ), ), ;, }, abstract, Callback, getActingCallback, (, ), ;, abstract]
[,, externsAndJs, ,, getActingCallback, (, ), ), ;, }, abstract, Callback, getActingCallback, (, ), ;, abstract, SignatureStore, getSignatureStore, (, )]
[,, getActingCallback, (, ), ), ;, }, abstract, Callback, getActingCallback, (, ), ;, abstract, SignatureStore, getSignatureStore, (, ), ;, private]
[), ;, }, abstract, Callback, getActingCallback, (, ), ;, abstract, SignatureStore, getSignatureStore, (, ), ;, private, void, addPossibleSignature, (, String]
[), {, addSignature, (, name, ,, node, ,, t, ., getSourceName, (, ), ), ;, }, else, {, nonMethodProperties, .]
[., isFunction, (, ), ), {, addSignature, (, name, ,, node, ,, t, ., getSourceName, (, ), ), ;, }]
[;, }, else, {, nonMethodProperties, ., add, (, name, ), ;, }, }, private, void, addSignature, (, String, name, ,]
[,, node, ,, t, ., getSourceName, (, ), ), ;, }, else, {, nonMethodProperties, ., add, (, name, ), ;]
[,, t, ., getSourceName, (, ), ), ;, }, else, {, nonMethodProperties, ., add, (, name, ), ;, }, }]
[), ;, }, else, {, nonMethodProperties, ., add, (, name, ), ;, }, }, private, void, addSignature, (, String, name]
[., getSourceName, (, ), ), ;, }, else, {, nonMethodProperties, ., add, (, name, ), ;, }, }, private, void]
[;, }, }, private, void, addSignature, (, String, name, ,, Node, function, ,, String, fnSourceName, ), {, if, (, externMethodsWithoutSignatures]
[., add, (, name, ), ;, }, }, private, void, addSignature, (, String, name, ,, Node, function, ,, String, fnSourceName]
[), ;, }, }, private, void, addSignature, (, String, name, ,, Node, function, ,, String, fnSourceName, ), {, if, (]
[), {, return, ;, }, getSignatureStore, (, ), ., addSignature, (, name, ,, function, ,, fnSourceName, ), ;, methodDefinitions, .]
[., contains, (, name, ), ), {, return, ;, }, getSignatureStore, (, ), ., addSignature, (, name, ,, function, ,]
[), ), {, return, ;, }, getSignatureStore, (, ), ., addSignature, (, name, ,, function, ,, fnSourceName, ), ;, methodDefinitions]
[;, methodDefinitions, ., put, (, name, ,, function, ), ;, }, private, class, GetExternMethods, extends, AbstractPostOrderCallback, {, @, Override, public]
[., addSignature, (, name, ,, function, ,, fnSourceName, ), ;, methodDefinitions, ., put, (, name, ,, function, ), ;, }]
[,, function, ,, fnSourceName, ), ;, methodDefinitions, ., put, (, name, ,, function, ), ;, }, private, class, GetExternMethods, extends]
[,, fnSourceName, ), ;, methodDefinitions, ., put, (, name, ,, function, ), ;, }, private, class, GetExternMethods, extends, AbstractPostOrderCallback, {]
[), ;, methodDefinitions, ., put, (, name, ,, function, ), ;, }, private, class, GetExternMethods, extends, AbstractPostOrderCallback, {, @, Override]
[;, }, private, class, GetExternMethods, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,]
[., put, (, name, ,, function, ), ;, }, private, class, GetExternMethods, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit]
[,, function, ), ;, }, private, class, GetExternMethods, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,]
[), ;, }, private, class, GetExternMethods, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n]
[), {, case, Token, ., GETPROP, :, case, Token, ., GETELEM, :, {, Node, dest, =, n, ., getFirstChild, (]
[., getType, (, ), ), {, case, Token, ., GETPROP, :, case, Token, ., GETELEM, :, {, Node, dest, =]
[:, case, Token, ., GETELEM, :, {, Node, dest, =, n, ., getFirstChild, (, ), ., getNext, (, ), ;]
[., GETPROP, :, case, Token, ., GETELEM, :, {, Node, dest, =, n, ., getFirstChild, (, ), ., getNext, (]
[:, {, Node, dest, =, n, ., getFirstChild, (, ), ., getNext, (, ), ;, if, (, !, dest, .]
[., GETELEM, :, {, Node, dest, =, n, ., getFirstChild, (, ), ., getNext, (, ), ;, if, (, !]
[;, if, (, !, dest, ., isString, (, ), ), {, return, ;, }, String, name, =, dest, ., getString]
[., getNext, (, ), ;, if, (, !, dest, ., isString, (, ), ), {, return, ;, }, String, name]
[., getFirstChild, (, ), ., getNext, (, ), ;, if, (, !, dest, ., isString, (, ), ), {, return]
[), {, return, ;, }, String, name, =, dest, ., getString, (, ), ;, if, (, parent, ., isAssign, (]
[), {, return, ;, }, String, name, =, dest, ., getString, (, ), ;, if, (, parent, ., isAssign, (]
[., isString, (, ), ), {, return, ;, }, String, name, =, dest, ., getString, (, ), ;, if, (]
[;, if, (, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, n, &&, n, ., getNext]
[., getString, (, ), ;, if, (, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, n]
[), {, addSignature, (, name, ,, n, ., getNext, (, ), ,, t, ., getSourceName, (, ), ), ;, }]
[&&, n, ., getNext, (, ), ., isFunction, (, ), ), {, addSignature, (, name, ,, n, ., getNext, (]
[&&, parent, ., getFirstChild, (, ), ==, n, &&, n, ., getNext, (, ), ., isFunction, (, ), ), {]
[., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, n, &&, n, ., getNext, (, ), ., isFunction]
[&&, n, ., getNext, (, ), ., isFunction, (, ), ), {, addSignature, (, name, ,, n, ., getNext, (]
[==, n, &&, n, ., getNext, (, ), ., isFunction, (, ), ), {, addSignature, (, name, ,, n, .]
[., getFirstChild, (, ), ==, n, &&, n, ., getNext, (, ), ., isFunction, (, ), ), {, addSignature, (]
[&&, n, ., getNext, (, ), ., isFunction, (, ), ), {, addSignature, (, name, ,, n, ., getNext, (]
[), {, addSignature, (, name, ,, n, ., getNext, (, ), ,, t, ., getSourceName, (, ), ), ;, }]
[., isFunction, (, ), ), {, addSignature, (, name, ,, n, ., getNext, (, ), ,, t, ., getSourceName, (]
[., getNext, (, ), ., isFunction, (, ), ), {, addSignature, (, name, ,, n, ., getNext, (, ), ,]
[;, }, else, {, getSignatureStore, (, ), ., removeSignature, (, name, ), ;, externMethodsWithoutSignatures, ., add, (, name, ), ;]
[,, n, ., getNext, (, ), ,, t, ., getSourceName, (, ), ), ;, }, else, {, getSignatureStore, (, )]
[,, t, ., getSourceName, (, ), ), ;, }, else, {, getSignatureStore, (, ), ., removeSignature, (, name, ), ;]
[., getNext, (, ), ,, t, ., getSourceName, (, ), ), ;, }, else, {, getSignatureStore, (, ), ., removeSignature]
[), ;, }, else, {, getSignatureStore, (, ), ., removeSignature, (, name, ), ;, externMethodsWithoutSignatures, ., add, (, name, )]
[., getSourceName, (, ), ), ;, }, else, {, getSignatureStore, (, ), ., removeSignature, (, name, ), ;, externMethodsWithoutSignatures, .]
[;, externMethodsWithoutSignatures, ., add, (, name, ), ;, }, externMethods, ., add, (, name, ), ;, }, break, ;, case]
[., removeSignature, (, name, ), ;, externMethodsWithoutSignatures, ., add, (, name, ), ;, }, externMethods, ., add, (, name, )]
[), ;, externMethodsWithoutSignatures, ., add, (, name, ), ;, }, externMethods, ., add, (, name, ), ;, }, break, ;]
[;, }, externMethods, ., add, (, name, ), ;, }, break, ;, case, Token, ., OBJECTLIT, :, {, for, (]
[., add, (, name, ), ;, }, externMethods, ., add, (, name, ), ;, }, break, ;, case, Token, .]
[), ;, }, externMethods, ., add, (, name, ), ;, }, break, ;, case, Token, ., OBJECTLIT, :, {, for]
[;, }, break, ;, case, Token, ., OBJECTLIT, :, {, for, (, Node, key, =, n, ., getFirstChild, (, )]
[., add, (, name, ), ;, }, break, ;, case, Token, ., OBJECTLIT, :, {, for, (, Node, key, =]
[), ;, }, break, ;, case, Token, ., OBJECTLIT, :, {, for, (, Node, key, =, n, ., getFirstChild, (]
[:, {, for, (, Node, key, =, n, ., getFirstChild, (, ), ;, key, !=, null, ;, key, =, key]
[., OBJECTLIT, :, {, for, (, Node, key, =, n, ., getFirstChild, (, ), ;, key, !=, null, ;, key]
[;, key, !=, null, ;, key, =, key, ., getNext, (, ), ), {, Node, value, =, key, ., getFirstChild]
[., getFirstChild, (, ), ;, key, !=, null, ;, key, =, key, ., getNext, (, ), ), {, Node, value]
[;, key, =, key, ., getNext, (, ), ), {, Node, value, =, key, ., getFirstChild, (, ), ;, String]
[!=, null, ;, key, =, key, ., getNext, (, ), ), {, Node, value, =, key, ., getFirstChild, (, )]
[;, key, =, key, ., getNext, (, ), ), {, Node, value, =, key, ., getFirstChild, (, ), ;, String]
[=, key, ., getNext, (, ), ), {, Node, value, =, key, ., getFirstChild, (, ), ;, String, name, =]
[), {, Node, value, =, key, ., getFirstChild, (, ), ;, String, name, =, key, ., getString, (, ), ;]
[., getNext, (, ), ), {, Node, value, =, key, ., getFirstChild, (, ), ;, String, name, =, key, .]
[;, String, name, =, key, ., getString, (, ), ;, if, (, key, ., isStringKey, (, ), &&, value, .]
[., getFirstChild, (, ), ;, String, name, =, key, ., getString, (, ), ;, if, (, key, ., isStringKey, (]
[;, if, (, key, ., isStringKey, (, ), &&, value, ., isFunction, (, ), ), {, addSignature, (, name, ,]
[., getString, (, ), ;, if, (, key, ., isStringKey, (, ), &&, value, ., isFunction, (, ), ), {]
[), {, addSignature, (, name, ,, value, ,, t, ., getSourceName, (, ), ), ;, }, else, {, getSignatureStore, (]
[&&, value, ., isFunction, (, ), ), {, addSignature, (, name, ,, value, ,, t, ., getSourceName, (, ), )]
[., isStringKey, (, ), &&, value, ., isFunction, (, ), ), {, addSignature, (, name, ,, value, ,, t, .]
[), {, addSignature, (, name, ,, value, ,, t, ., getSourceName, (, ), ), ;, }, else, {, getSignatureStore, (]
[., isFunction, (, ), ), {, addSignature, (, name, ,, value, ,, t, ., getSourceName, (, ), ), ;, }]
[;, }, else, {, getSignatureStore, (, ), ., removeSignature, (, name, ), ;, externMethodsWithoutSignatures, ., add, (, name, ), ;]
[,, value, ,, t, ., getSourceName, (, ), ), ;, }, else, {, getSignatureStore, (, ), ., removeSignature, (, name]
[,, t, ., getSourceName, (, ), ), ;, }, else, {, getSignatureStore, (, ), ., removeSignature, (, name, ), ;]
[), ;, }, else, {, getSignatureStore, (, ), ., removeSignature, (, name, ), ;, externMethodsWithoutSignatures, ., add, (, name, )]
[., getSourceName, (, ), ), ;, }, else, {, getSignatureStore, (, ), ., removeSignature, (, name, ), ;, externMethodsWithoutSignatures, .]
[;, externMethodsWithoutSignatures, ., add, (, name, ), ;, }, externMethods, ., add, (, name, ), ;, }, }, break, ;]
[., removeSignature, (, name, ), ;, externMethodsWithoutSignatures, ., add, (, name, ), ;, }, externMethods, ., add, (, name, )]
[), ;, externMethodsWithoutSignatures, ., add, (, name, ), ;, }, externMethods, ., add, (, name, ), ;, }, }, break]
[;, }, externMethods, ., add, (, name, ), ;, }, }, break, ;, }, }, }, private, class, GatherSignatures, extends]
[., add, (, name, ), ;, }, externMethods, ., add, (, name, ), ;, }, }, break, ;, }, }]
[), ;, }, externMethods, ., add, (, name, ), ;, }, }, break, ;, }, }, }, private, class, GatherSignatures]
[;, }, }, break, ;, }, }, }, private, class, GatherSignatures, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit, (]
[., add, (, name, ), ;, }, }, break, ;, }, }, }, private, class, GatherSignatures, extends, AbstractPostOrderCallback, {, @]
[), ;, }, }, break, ;, }, }, }, private, class, GatherSignatures, extends, AbstractPostOrderCallback, {, @, Override, public, void, visit]
[), {, case, Token, ., GETPROP, :, case, Token, ., GETELEM, :, Node, dest, =, n, ., getFirstChild, (, )]
[., getType, (, ), ), {, case, Token, ., GETPROP, :, case, Token, ., GETELEM, :, Node, dest, =, n]
[:, case, Token, ., GETELEM, :, Node, dest, =, n, ., getFirstChild, (, ), ., getNext, (, ), ;, if]
[., GETPROP, :, case, Token, ., GETELEM, :, Node, dest, =, n, ., getFirstChild, (, ), ., getNext, (, )]
[:, Node, dest, =, n, ., getFirstChild, (, ), ., getNext, (, ), ;, if, (, dest, ., isString, (]
[., GETELEM, :, Node, dest, =, n, ., getFirstChild, (, ), ., getNext, (, ), ;, if, (, dest, .]
[;, if, (, dest, ., isString, (, ), ), {, if, (, dest, ., getString, (, ), ., equals, (]
[., getNext, (, ), ;, if, (, dest, ., isString, (, ), ), {, if, (, dest, ., getString, (]
[., getFirstChild, (, ), ., getNext, (, ), ;, if, (, dest, ., isString, (, ), ), {, if, (]
[), {, if, (, dest, ., getString, (, ), ., equals, (, "prototype", ), ), {, processPrototypeParent, (, t, ,]
[., isString, (, ), ), {, if, (, dest, ., getString, (, ), ., equals, (, "prototype", ), ), {]
[), {, processPrototypeParent, (, t, ,, parent, ), ;, }, else, {, if, (, parent, ., isAssign, (, ), &&]
[., equals, (, "prototype", ), ), {, processPrototypeParent, (, t, ,, parent, ), ;, }, else, {, if, (, parent]
[., getString, (, ), ., equals, (, "prototype", ), ), {, processPrototypeParent, (, t, ,, parent, ), ;, }, else]
[), ), {, processPrototypeParent, (, t, ,, parent, ), ;, }, else, {, if, (, parent, ., isAssign, (, )]
[;, }, else, {, if, (, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, n, )]
[,, parent, ), ;, }, else, {, if, (, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, )]
[), ;, }, else, {, if, (, parent, ., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, n]
[), {, addPossibleSignature, (, dest, ., getString, (, ), ,, n, ., getNext, (, ), ,, t, ), ;, }]
[&&, parent, ., getFirstChild, (, ), ==, n, ), {, addPossibleSignature, (, dest, ., getString, (, ), ,, n, .]
[., isAssign, (, ), &&, parent, ., getFirstChild, (, ), ==, n, ), {, addPossibleSignature, (, dest, ., getString, (]
[), {, addPossibleSignature, (, dest, ., getString, (, ), ,, n, ., getNext, (, ), ,, t, ), ;, }]
[==, n, ), {, addPossibleSignature, (, dest, ., getString, (, ), ,, n, ., getNext, (, ), ,, t, )]
[., getFirstChild, (, ), ==, n, ), {, addPossibleSignature, (, dest, ., getString, (, ), ,, n, ., getNext, (]
[), {, addPossibleSignature, (, dest, ., getString, (, ), ,, n, ., getNext, (, ), ,, t, ), ;, }]
[;, }, }, }, break, ;, case, Token, ., OBJECTLIT, :, for, (, Node, key, =, n, ., getFirstChild, (]
[,, n, ., getNext, (, ), ,, t, ), ;, }, }, }, break, ;, case, Token, ., OBJECTLIT, :]
[., getString, (, ), ,, n, ., getNext, (, ), ,, t, ), ;, }, }, }, break, ;, case]
[,, t, ), ;, }, }, }, break, ;, case, Token, ., OBJECTLIT, :, for, (, Node, key, =, n]
[., getNext, (, ), ,, t, ), ;, }, }, }, break, ;, case, Token, ., OBJECTLIT, :, for, (]
[), ;, }, }, }, break, ;, case, Token, ., OBJECTLIT, :, for, (, Node, key, =, n, ., getFirstChild]
[:, for, (, Node, key, =, n, ., getFirstChild, (, ), ;, key, !=, null, ;, key, =, key, .]
[., OBJECTLIT, :, for, (, Node, key, =, n, ., getFirstChild, (, ), ;, key, !=, null, ;, key, =]
[;, key, !=, null, ;, key, =, key, ., getNext, (, ), ), {, switch, (, key, ., getType, (]
[., getFirstChild, (, ), ;, key, !=, null, ;, key, =, key, ., getNext, (, ), ), {, switch, (]
[;, key, =, key, ., getNext, (, ), ), {, switch, (, key, ., getType, (, ), ), {, case]
[!=, null, ;, key, =, key, ., getNext, (, ), ), {, switch, (, key, ., getType, (, ), )]
[;, key, =, key, ., getNext, (, ), ), {, switch, (, key, ., getType, (, ), ), {, case]
[=, key, ., getNext, (, ), ), {, switch, (, key, ., getType, (, ), ), {, case, Token, .]
[), {, switch, (, key, ., getType, (, ), ), {, case, Token, ., STRING_KEY, :, addPossibleSignature, (, key, .]
[., getNext, (, ), ), {, switch, (, key, ., getType, (, ), ), {, case, Token, ., STRING_KEY, :]
[), {, case, Token, ., STRING_KEY, :, addPossibleSignature, (, key, ., getString, (, ), ,, key, ., getFirstChild, (, )]
[., getType, (, ), ), {, case, Token, ., STRING_KEY, :, addPossibleSignature, (, key, ., getString, (, ), ,, key]
[:, addPossibleSignature, (, key, ., getString, (, ), ,, key, ., getFirstChild, (, ), ,, t, ), ;, break, ;]
[., STRING_KEY, :, addPossibleSignature, (, key, ., getString, (, ), ,, key, ., getFirstChild, (, ), ,, t, ), ;]
[;, break, ;, case, Token, ., SETTER_DEF, :, case, Token, ., GETTER_DEF, :, nonMethodProperties, ., add, (, key, ., getString]
[,, key, ., getFirstChild, (, ), ,, t, ), ;, break, ;, case, Token, ., SETTER_DEF, :, case, Token, .]
[., getString, (, ), ,, key, ., getFirstChild, (, ), ,, t, ), ;, break, ;, case, Token, ., SETTER_DEF]
[,, t, ), ;, break, ;, case, Token, ., SETTER_DEF, :, case, Token, ., GETTER_DEF, :, nonMethodProperties, ., add, (]
[., getFirstChild, (, ), ,, t, ), ;, break, ;, case, Token, ., SETTER_DEF, :, case, Token, ., GETTER_DEF, :]
[), ;, break, ;, case, Token, ., SETTER_DEF, :, case, Token, ., GETTER_DEF, :, nonMethodProperties, ., add, (, key, .]
[:, case, Token, ., GETTER_DEF, :, nonMethodProperties, ., add, (, key, ., getString, (, ), ), ;, break, ;, default]
[., SETTER_DEF, :, case, Token, ., GETTER_DEF, :, nonMethodProperties, ., add, (, key, ., getString, (, ), ), ;, break]
[:, nonMethodProperties, ., add, (, key, ., getString, (, ), ), ;, break, ;, default, :, throw, new, IllegalStateException, (]
[., GETTER_DEF, :, nonMethodProperties, ., add, (, key, ., getString, (, ), ), ;, break, ;, default, :, throw, new]
[;, break, ;, default, :, throw, new, IllegalStateException, (, "unexpect OBJECTLIT key: ", +, key, ), ;, }, }, break, ;, }, }]
[., add, (, key, ., getString, (, ), ), ;, break, ;, default, :, throw, new, IllegalStateException, (, "unexpect OBJECTLIT key: ", +]
[), ;, break, ;, default, :, throw, new, IllegalStateException, (, "unexpect OBJECTLIT key: ", +, key, ), ;, }, }, break, ;, }]
[., getString, (, ), ), ;, break, ;, default, :, throw, new, IllegalStateException, (, "unexpect OBJECTLIT key: ", +, key, ), ;, }]
[;, }, }, break, ;, }, }, private, void, processPrototypeParent, (, NodeTraversal, t, ,, Node, n, ), {, switch, (]
[), ;, }, }, break, ;, }, }, private, void, processPrototypeParent, (, NodeTraversal, t, ,, Node, n, ), {, switch]
[+, key, ), ;, }, }, break, ;, }, }, private, void, processPrototypeParent, (, NodeTraversal, t, ,, Node, n, )]
[), ;, }, }, break, ;, }, }, private, void, processPrototypeParent, (, NodeTraversal, t, ,, Node, n, ), {, switch]
[), {, case, Token, ., GETPROP, :, case, Token, ., GETELEM, :, Node, dest, =, n, ., getFirstChild, (, )]
[., getType, (, ), ), {, case, Token, ., GETPROP, :, case, Token, ., GETELEM, :, Node, dest, =, n]
[:, case, Token, ., GETELEM, :, Node, dest, =, n, ., getFirstChild, (, ), ., getNext, (, ), ;, Node]
[., GETPROP, :, case, Token, ., GETELEM, :, Node, dest, =, n, ., getFirstChild, (, ), ., getNext, (, )]
[:, Node, dest, =, n, ., getFirstChild, (, ), ., getNext, (, ), ;, Node, parent, =, n, ., getParent]
[., GETELEM, :, Node, dest, =, n, ., getFirstChild, (, ), ., getNext, (, ), ;, Node, parent, =, n]
[;, Node, parent, =, n, ., getParent, (, ), ., getParent, (, ), ;, if, (, dest, ., isString, (]
[., getNext, (, ), ;, Node, parent, =, n, ., getParent, (, ), ., getParent, (, ), ;, if, (]
[., getFirstChild, (, ), ., getNext, (, ), ;, Node, parent, =, n, ., getParent, (, ), ., getParent, (]
[;, if, (, dest, ., isString, (, ), &&, parent, ., isAssign, (, ), ), {, Node, assignee, =, parent]
[., getParent, (, ), ;, if, (, dest, ., isString, (, ), &&, parent, ., isAssign, (, ), ), {]
[., getParent, (, ), ., getParent, (, ), ;, if, (, dest, ., isString, (, ), &&, parent, ., isAssign]
[), {, Node, assignee, =, parent, ., getFirstChild, (, ), ., getNext, (, ), ;, addPossibleSignature, (, dest, ., getString]
[&&, parent, ., isAssign, (, ), ), {, Node, assignee, =, parent, ., getFirstChild, (, ), ., getNext, (, )]
[., isString, (, ), &&, parent, ., isAssign, (, ), ), {, Node, assignee, =, parent, ., getFirstChild, (, )]
[), {, Node, assignee, =, parent, ., getFirstChild, (, ), ., getNext, (, ), ;, addPossibleSignature, (, dest, ., getString]
[., isAssign, (, ), ), {, Node, assignee, =, parent, ., getFirstChild, (, ), ., getNext, (, ), ;, addPossibleSignature]
[;, addPossibleSignature, (, dest, ., getString, (, ), ,, assignee, ,, t, ), ;, }, break, ;, }, }, }]
[., getNext, (, ), ;, addPossibleSignature, (, dest, ., getString, (, ), ,, assignee, ,, t, ), ;, }, break]
[., getFirstChild, (, ), ., getNext, (, ), ;, addPossibleSignature, (, dest, ., getString, (, ), ,, assignee, ,, t]
[;, }, break, ;, }, }, }, }]
[,, assignee, ,, t, ), ;, }, break, ;, }, }, }, }]
[., getString, (, ), ,, assignee, ,, t, ), ;, }, break, ;, }, }, }, }]
[,, t, ), ;, }, break, ;, }, }, }, }]
[), ;, }, break, ;, }, }, }, }]
