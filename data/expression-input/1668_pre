[;, public, class, TextUtilities, {, private, static, boolean, useDrawRotatedStringWorkaround, ;, private, static, boolean, useFontMetricsGetStringBounds, ;, static, {, boolean, isJava14, =]
[;, public, class, TextUtilities, {, private, static, boolean, useDrawRotatedStringWorkaround, ;, private, static, boolean, useFontMetricsGetStringBounds, ;, static, {, boolean, isJava14, =]
[static, boolean, useDrawRotatedStringWorkaround, ;, private, static, boolean, useFontMetricsGetStringBounds, ;, static, {, boolean, isJava14, =, ObjectUtilities, ., isJDK14, (, ), ;]
[useDrawRotatedStringWorkaround, ;, private, static, boolean, useFontMetricsGetStringBounds, ;, static, {, boolean, isJava14, =, ObjectUtilities, ., isJDK14, (, ), ;, useDrawRotatedStringWorkaround, =]
[;, private, static, boolean, useFontMetricsGetStringBounds, ;, static, {, boolean, isJava14, =, ObjectUtilities, ., isJDK14, (, ), ;, useDrawRotatedStringWorkaround, =, (]
[;, private, static, boolean, useFontMetricsGetStringBounds, ;, static, {, boolean, isJava14, =, ObjectUtilities, ., isJDK14, (, ), ;, useDrawRotatedStringWorkaround, =, (]
[static, boolean, useFontMetricsGetStringBounds, ;, static, {, boolean, isJava14, =, ObjectUtilities, ., isJDK14, (, ), ;, useDrawRotatedStringWorkaround, =, (, isJava14, ==]
[;, static, {, boolean, isJava14, =, ObjectUtilities, ., isJDK14, (, ), ;, useDrawRotatedStringWorkaround, =, (, isJava14, ==, false, ), ;]
[{, boolean, isJava14, =, ObjectUtilities, ., isJDK14, (, ), ;, useDrawRotatedStringWorkaround, =, (, isJava14, ==, false, ), ;, useFontMetricsGetStringBounds, =]
[boolean, isJava14, =, ObjectUtilities, ., isJDK14, (, ), ;, useDrawRotatedStringWorkaround, =, (, isJava14, ==, false, ), ;, useFontMetricsGetStringBounds, =, (]
[boolean, isJava14, =, ObjectUtilities, ., isJDK14, (, ), ;, useDrawRotatedStringWorkaround, =, (, isJava14, ==, false, ), ;, useFontMetricsGetStringBounds, =, (]
[=, ObjectUtilities, ., isJDK14, (, ), ;, useDrawRotatedStringWorkaround, =, (, isJava14, ==, false, ), ;, useFontMetricsGetStringBounds, =, (, isJava14, ==]
[), {, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,, Paint, paint, ), {, if, (]
[), {, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,, Paint, paint, ), {, if, (]
[}, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,, Paint, paint, ), {, if, (, text, ==]
[createTextBlock, (, String, text, ,, Font, font, ,, Paint, paint, ), {, if, (, text, ==, null, ), {, throw]
[text, ,, Font, font, ,, Paint, paint, ), {, if, (, text, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, text, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, TextBlock, result, =]
[{, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, TextBlock, result, =, new, TextBlock, (, ), ;, String, input, =]
["Null 'text' argument.", ), ;, }, TextBlock, result, =, new, TextBlock, (, ), ;, String, input, =, text, ;, boolean, moreInputToProcess, =]
[), ;, }, TextBlock, result, =, new, TextBlock, (, ), ;, String, input, =, text, ;, boolean, moreInputToProcess, =, (]
[), ;, }, TextBlock, result, =, new, TextBlock, (, ), ;, String, input, =, text, ;, boolean, moreInputToProcess, =, (]
[), ;, }, TextBlock, result, =, new, TextBlock, (, ), ;, String, input, =, text, ;, boolean, moreInputToProcess, =, (]
[new, TextBlock, (, ), ;, String, input, =, text, ;, boolean, moreInputToProcess, =, (, text, ., length, (, ), >]
[input, =, text, ;, boolean, moreInputToProcess, =, (, text, ., length, (, ), >, 0, ), ;, int, start, =]
[boolean, moreInputToProcess, =, (, text, ., length, (, ), >, 0, ), ;, int, start, =, 0, ;, while, (]
[length, (, ), >, 0, ), ;, int, start, =, 0, ;, while, (, moreInputToProcess, ), {, int, index, =]
[length, (, ), >, 0, ), ;, int, start, =, 0, ;, while, (, moreInputToProcess, ), {, int, index, =]
[0, ), ;, int, start, =, 0, ;, while, (, moreInputToProcess, ), {, int, index, =, input, ., indexOf, (]
[=, 0, ;, while, (, moreInputToProcess, ), {, int, index, =, input, ., indexOf, (, "\n", ), ;, if, (]
[=, 0, ;, while, (, moreInputToProcess, ), {, int, index, =, input, ., indexOf, (, "\n", ), ;, if, (]
[;, while, (, moreInputToProcess, ), {, int, index, =, input, ., indexOf, (, "\n", ), ;, if, (, index, >]
[int, index, =, input, ., indexOf, (, "\n", ), ;, if, (, index, >, start, ), {, String, line, =]
[int, index, =, input, ., indexOf, (, "\n", ), ;, if, (, index, >, start, ), {, String, line, =]
[., indexOf, (, "\n", ), ;, if, (, index, >, start, ), {, String, line, =, input, ., substring, (]
[(, "\n", ), ;, if, (, index, >, start, ), {, String, line, =, input, ., substring, (, start, ,]
[(, index, >, start, ), {, String, line, =, input, ., substring, (, start, ,, index, ), ;, if, (]
[(, index, >, start, ), {, String, line, =, input, ., substring, (, start, ,, index, ), ;, if, (]
[>, start, ), {, String, line, =, input, ., substring, (, start, ,, index, ), ;, if, (, index, <]
[>, start, ), {, String, line, =, input, ., substring, (, start, ,, index, ), ;, if, (, index, <]
[>, start, ), {, String, line, =, input, ., substring, (, start, ,, index, ), ;, if, (, index, <]
[=, input, ., substring, (, start, ,, index, ), ;, if, (, index, <, input, ., length, (, ), -]
[substring, (, start, ,, index, ), ;, if, (, index, <, input, ., length, (, ), -, 1, ), {]
[substring, (, start, ,, index, ), ;, if, (, index, <, input, ., length, (, ), -, 1, ), {]
[index, ), ;, if, (, index, <, input, ., length, (, ), -, 1, ), {, result, ., addLine, (]
[;, if, (, index, <, input, ., length, (, ), -, 1, ), {, result, ., addLine, (, line, ,]
[(, index, <, input, ., length, (, ), -, 1, ), {, result, ., addLine, (, line, ,, font, ,]
[input, ., length, (, ), -, 1, ), {, result, ., addLine, (, line, ,, font, ,, paint, ), ;]
[length, (, ), -, 1, ), {, result, ., addLine, (, line, ,, font, ,, paint, ), ;, input, =]
[length, (, ), -, 1, ), {, result, ., addLine, (, line, ,, font, ,, paint, ), ;, input, =]
[1, ), {, result, ., addLine, (, line, ,, font, ,, paint, ), ;, input, =, input, ., substring, (]
[1, ), {, result, ., addLine, (, line, ,, font, ,, paint, ), ;, input, =, input, ., substring, (]
[{, result, ., addLine, (, line, ,, font, ,, paint, ), ;, input, =, input, ., substring, (, index, +]
[,, font, ,, paint, ), ;, input, =, input, ., substring, (, index, +, 1, ), ;, }, else, {]
[,, paint, ), ;, input, =, input, ., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =]
[., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, if, (]
[., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, if, (]
[(, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, if, (, index, ==]
[;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, if, (, index, ==, start, ), {, if, (]
[;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, if, (, index, ==, start, ), {, if, (]
[else, {, moreInputToProcess, =, false, ;, }, }, else, if, (, index, ==, start, ), {, if, (, index, <]
[else, {, moreInputToProcess, =, false, ;, }, }, else, if, (, index, ==, start, ), {, if, (, index, <]
[else, {, moreInputToProcess, =, false, ;, }, }, else, if, (, index, ==, start, ), {, if, (, index, <]
[}, }, else, if, (, index, ==, start, ), {, if, (, index, <, input, ., length, (, ), -]
[if, (, index, ==, start, ), {, if, (, index, <, input, ., length, (, ), -, 1, ), {]
[index, ==, start, ), {, if, (, index, <, input, ., length, (, ), -, 1, ), {, input, =]
[index, ==, start, ), {, if, (, index, <, input, ., length, (, ), -, 1, ), {, input, =]
[{, if, (, index, <, input, ., length, (, ), -, 1, ), {, input, =, input, ., substring, (]
[{, if, (, index, <, input, ., length, (, ), -, 1, ), {, input, =, input, ., substring, (]
[(, index, <, input, ., length, (, ), -, 1, ), {, input, =, input, ., substring, (, index, +]
[(, ), -, 1, ), {, input, =, input, ., substring, (, index, +, 1, ), ;, }, else, {]
[-, 1, ), {, input, =, input, ., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =]
[input, ., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, {]
[input, ., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, {]
[index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, {, result, ., addLine, (]
[1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, {, result, ., addLine, (, input, ,]
[;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, {, result, ., addLine, (, input, ,, font, ,]
[{, moreInputToProcess, =, false, ;, }, }, else, {, result, ., addLine, (, input, ,, font, ,, paint, ), ;]
[=, false, ;, }, }, else, {, result, ., addLine, (, input, ,, font, ,, paint, ), ;, moreInputToProcess, =]
[else, {, result, ., addLine, (, input, ,, font, ,, paint, ), ;, moreInputToProcess, =, false, ;, }, }, return]
[TextBlock, createTextBlock, (, String, text, ,, Font, font, ,, Paint, paint, ,, float, maxWidth, ,, TextMeasurer, measurer, ), {, return]
[(, String, text, ,, Font, font, ,, Paint, paint, ,, float, maxWidth, ,, TextMeasurer, measurer, ), {, return, createTextBlock, (]
[text, ,, Font, font, ,, Paint, paint, ,, float, maxWidth, ,, TextMeasurer, measurer, ), {, return, createTextBlock, (, text, ,]
[Font, font, ,, Paint, paint, ,, float, maxWidth, ,, TextMeasurer, measurer, ), {, return, createTextBlock, (, text, ,, font, ,]
[,, Paint, paint, ,, float, maxWidth, ,, TextMeasurer, measurer, ), {, return, createTextBlock, (, text, ,, font, ,, paint, ,]
[paint, ,, float, maxWidth, ,, TextMeasurer, measurer, ), {, return, createTextBlock, (, text, ,, font, ,, paint, ,, maxWidth, ,]
[paint, ,, float, maxWidth, ,, TextMeasurer, measurer, ), {, return, createTextBlock, (, text, ,, font, ,, paint, ,, maxWidth, ,]
[,, TextMeasurer, measurer, ), {, return, createTextBlock, (, text, ,, font, ,, paint, ,, maxWidth, ,, Integer, ., MAX_VALUE, ,]
[,, Font, font, ,, Paint, paint, ,, float, maxWidth, ,, int, maxLines, ,, TextMeasurer, measurer, ), {, TextBlock, result, =]
[maxWidth, ,, int, maxLines, ,, TextMeasurer, measurer, ), {, TextBlock, result, =, new, TextBlock, (, ), ;, BreakIterator, iterator, =]
[maxWidth, ,, int, maxLines, ,, TextMeasurer, measurer, ), {, TextBlock, result, =, new, TextBlock, (, ), ;, BreakIterator, iterator, =]
[measurer, ), {, TextBlock, result, =, new, TextBlock, (, ), ;, BreakIterator, iterator, =, BreakIterator, ., getLineInstance, (, ), ;]
[measurer, ), {, TextBlock, result, =, new, TextBlock, (, ), ;, BreakIterator, iterator, =, BreakIterator, ., getLineInstance, (, ), ;]
[result, =, new, TextBlock, (, ), ;, BreakIterator, iterator, =, BreakIterator, ., getLineInstance, (, ), ;, iterator, ., setText, (]
[;, BreakIterator, iterator, =, BreakIterator, ., getLineInstance, (, ), ;, iterator, ., setText, (, text, ), ;, int, current, =]
[., getLineInstance, (, ), ;, iterator, ., setText, (, text, ), ;, int, current, =, 0, ;, int, lines, =]
[iterator, ., setText, (, text, ), ;, int, current, =, 0, ;, int, lines, =, 0, ;, int, length, =]
[iterator, ., setText, (, text, ), ;, int, current, =, 0, ;, int, lines, =, 0, ;, int, length, =]
[current, =, 0, ;, int, lines, =, 0, ;, int, length, =, text, ., length, (, ), ;, while, (]
[current, =, 0, ;, int, lines, =, 0, ;, int, length, =, text, ., length, (, ), ;, while, (]
[current, =, 0, ;, int, lines, =, 0, ;, int, length, =, text, ., length, (, ), ;, while, (]
[0, ;, int, lines, =, 0, ;, int, length, =, text, ., length, (, ), ;, while, (, current, <]
[int, lines, =, 0, ;, int, length, =, text, ., length, (, ), ;, while, (, current, <, length, &&]
[int, lines, =, 0, ;, int, length, =, text, ., length, (, ), ;, while, (, current, <, length, &&]
[=, 0, ;, int, length, =, text, ., length, (, ), ;, while, (, current, <, length, &&, lines, <]
[text, ., length, (, ), ;, while, (, current, <, length, &&, lines, <, maxLines, ), {, int, next, =]
[length, (, ), ;, while, (, current, <, length, &&, lines, <, maxLines, ), {, int, next, =, nextLineBreak, (]
[), ;, while, (, current, <, length, &&, lines, <, maxLines, ), {, int, next, =, nextLineBreak, (, text, ,]
[while, (, current, <, length, &&, lines, <, maxLines, ), {, int, next, =, nextLineBreak, (, text, ,, current, ,]
[current, <, length, &&, lines, <, maxLines, ), {, int, next, =, nextLineBreak, (, text, ,, current, ,, maxWidth, ,]
[length, &&, lines, <, maxLines, ), {, int, next, =, nextLineBreak, (, text, ,, current, ,, maxWidth, ,, iterator, ,]
[), {, int, next, =, nextLineBreak, (, text, ,, current, ,, maxWidth, ,, iterator, ,, measurer, ), ;, if, (]
[), {, int, next, =, nextLineBreak, (, text, ,, current, ,, maxWidth, ,, iterator, ,, measurer, ), ;, if, (]
[int, next, =, nextLineBreak, (, text, ,, current, ,, maxWidth, ,, iterator, ,, measurer, ), ;, if, (, next, ==]
[int, next, =, nextLineBreak, (, text, ,, current, ,, maxWidth, ,, iterator, ,, measurer, ), ;, if, (, next, ==]
[text, ,, current, ,, maxWidth, ,, iterator, ,, measurer, ), ;, if, (, next, ==, BreakIterator, ., DONE, ), {]
[text, ,, current, ,, maxWidth, ,, iterator, ,, measurer, ), ;, if, (, next, ==, BreakIterator, ., DONE, ), {]
[maxWidth, ,, iterator, ,, measurer, ), ;, if, (, next, ==, BreakIterator, ., DONE, ), {, result, ., addLine, (]
[maxWidth, ,, iterator, ,, measurer, ), ;, if, (, next, ==, BreakIterator, ., DONE, ), {, result, ., addLine, (]
[measurer, ), ;, if, (, next, ==, BreakIterator, ., DONE, ), {, result, ., addLine, (, text, ., substring, (]
[if, (, next, ==, BreakIterator, ., DONE, ), {, result, ., addLine, (, text, ., substring, (, current, ), ,]
[next, ==, BreakIterator, ., DONE, ), {, result, ., addLine, (, text, ., substring, (, current, ), ,, font, ,]
[DONE, ), {, result, ., addLine, (, text, ., substring, (, current, ), ,, font, ,, paint, ), ;, return]
[result, ., addLine, (, text, ., substring, (, current, ), ,, font, ,, paint, ), ;, return, result, ;, }]
[result, ., addLine, (, text, ., substring, (, current, ), ,, font, ,, paint, ), ;, return, result, ;, }]
[text, ., substring, (, current, ), ,, font, ,, paint, ), ;, return, result, ;, }, result, ., addLine, (]
[text, ., substring, (, current, ), ,, font, ,, paint, ), ;, return, result, ;, }, result, ., addLine, (]
[current, ), ,, font, ,, paint, ), ;, return, result, ;, }, result, ., addLine, (, text, ., substring, (]
[,, font, ,, paint, ), ;, return, result, ;, }, result, ., addLine, (, text, ., substring, (, current, ,]
[paint, ), ;, return, result, ;, }, result, ., addLine, (, text, ., substring, (, current, ,, next, ), ,]
[;, return, result, ;, }, result, ., addLine, (, text, ., substring, (, current, ,, next, ), ,, font, ,]
[;, }, result, ., addLine, (, text, ., substring, (, current, ,, next, ), ,, font, ,, paint, ), ;]
[;, }, result, ., addLine, (, text, ., substring, (, current, ,, next, ), ,, font, ,, paint, ), ;]
[., addLine, (, text, ., substring, (, current, ,, next, ), ,, font, ,, paint, ), ;, lines, ++, ;]
[(, text, ., substring, (, current, ,, next, ), ,, font, ,, paint, ), ;, lines, ++, ;, current, =]
[(, current, ,, next, ), ,, font, ,, paint, ), ;, lines, ++, ;, current, =, next, ;, while, (]
[(, current, ,, next, ), ,, font, ,, paint, ), ;, lines, ++, ;, current, =, next, ;, while, (]
[(, current, ,, next, ), ,, font, ,, paint, ), ;, lines, ++, ;, current, =, next, ;, while, (]
[,, next, ), ,, font, ,, paint, ), ;, lines, ++, ;, current, =, next, ;, while, (, current, <]
[,, next, ), ,, font, ,, paint, ), ;, lines, ++, ;, current, =, next, ;, while, (, current, <]
[paint, ), ;, lines, ++, ;, current, =, next, ;, while, (, current, <, text, ., length, (, ), &&]
[paint, ), ;, lines, ++, ;, current, =, next, ;, while, (, current, <, text, ., length, (, ), &&]
[paint, ), ;, lines, ++, ;, current, =, next, ;, while, (, current, <, text, ., length, (, ), &&]
[++, ;, current, =, next, ;, while, (, current, <, text, ., length, (, ), &&, text, ., charAt, (]
[=, next, ;, while, (, current, <, text, ., length, (, ), &&, text, ., charAt, (, current, ), ==]
[while, (, current, <, text, ., length, (, ), &&, text, ., charAt, (, current, ), ==, '\n', ), {]
[while, (, current, <, text, ., length, (, ), &&, text, ., charAt, (, current, ), ==, '\n', ), {]
[(, ), &&, text, ., charAt, (, current, ), ==, '\n', ), {, current, ++, ;, }, }, if, (]
[(, ), &&, text, ., charAt, (, current, ), ==, '\n', ), {, current, ++, ;, }, }, if, (]
[&&, text, ., charAt, (, current, ), ==, '\n', ), {, current, ++, ;, }, }, if, (, current, <]
[), ==, '\n', ), {, current, ++, ;, }, }, if, (, current, <, length, ), {, TextLine, lastLine, =]
[), ==, '\n', ), {, current, ++, ;, }, }, if, (, current, <, length, ), {, TextLine, lastLine, =]
[}, if, (, current, <, length, ), {, TextLine, lastLine, =, result, ., getLastLine, (, ), ;, TextFragment, lastFragment, =]
[}, if, (, current, <, length, ), {, TextLine, lastLine, =, result, ., getLastLine, (, ), ;, TextFragment, lastFragment, =]
[lastLine, =, result, ., getLastLine, (, ), ;, TextFragment, lastFragment, =, lastLine, ., getLastTextFragment, (, ), ;, String, oldStr, =]
[lastLine, =, result, ., getLastLine, (, ), ;, TextFragment, lastFragment, =, lastLine, ., getLastTextFragment, (, ), ;, String, oldStr, =]
[lastFragment, =, lastLine, ., getLastTextFragment, (, ), ;, String, oldStr, =, lastFragment, ., getText, (, ), ;, String, newStr, =]
[getLastTextFragment, (, ), ;, String, oldStr, =, lastFragment, ., getText, (, ), ;, String, newStr, =, "...", ;, if, (]
[getLastTextFragment, (, ), ;, String, oldStr, =, lastFragment, ., getText, (, ), ;, String, newStr, =, "...", ;, if, (]
[getLastTextFragment, (, ), ;, String, oldStr, =, lastFragment, ., getText, (, ), ;, String, newStr, =, "...", ;, if, (]
[=, lastFragment, ., getText, (, ), ;, String, newStr, =, "...", ;, if, (, oldStr, ., length, (, ), >]
[getText, (, ), ;, String, newStr, =, "...", ;, if, (, oldStr, ., length, (, ), >, 3, ), {]
[), ;, String, newStr, =, "...", ;, if, (, oldStr, ., length, (, ), >, 3, ), {, newStr, =]
[), ;, String, newStr, =, "...", ;, if, (, oldStr, ., length, (, ), >, 3, ), {, newStr, =]
[), ;, String, newStr, =, "...", ;, if, (, oldStr, ., length, (, ), >, 3, ), {, newStr, =]
[=, "...", ;, if, (, oldStr, ., length, (, ), >, 3, ), {, newStr, =, oldStr, ., substring, (]
[;, if, (, oldStr, ., length, (, ), >, 3, ), {, newStr, =, oldStr, ., substring, (, 0, ,]
[;, if, (, oldStr, ., length, (, ), >, 3, ), {, newStr, =, oldStr, ., substring, (, 0, ,]
[;, if, (, oldStr, ., length, (, ), >, 3, ), {, newStr, =, oldStr, ., substring, (, 0, ,]
[(, ), >, 3, ), {, newStr, =, oldStr, ., substring, (, 0, ,, oldStr, ., length, (, ), -]
[3, ), {, newStr, =, oldStr, ., substring, (, 0, ,, oldStr, ., length, (, ), -, 3, ), +]
[newStr, =, oldStr, ., substring, (, 0, ,, oldStr, ., length, (, ), -, 3, ), +, "...", ;, }]
[newStr, =, oldStr, ., substring, (, 0, ,, oldStr, ., length, (, ), -, 3, ), +, "...", ;, }]
[substring, (, 0, ,, oldStr, ., length, (, ), -, 3, ), +, "...", ;, }, lastLine, ., removeFragment, (]
[length, (, ), -, 3, ), +, "...", ;, }, lastLine, ., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment, =]
[-, 3, ), +, "...", ;, }, lastLine, ., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment, =, new, TextFragment, (]
[), +, "...", ;, }, lastLine, ., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment, =, new, TextFragment, (, newStr, ,]
[), +, "...", ;, }, lastLine, ., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment, =, new, TextFragment, (, newStr, ,]
[., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment, =, new, TextFragment, (, newStr, ,, lastFragment, ., getFont, (, ), ,]
[., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment, =, new, TextFragment, (, newStr, ,, lastFragment, ., getFont, (, ), ,]
[newFragment, =, new, TextFragment, (, newStr, ,, lastFragment, ., getFont, (, ), ,, lastFragment, ., getPaint, (, ), ), ;]
[newFragment, =, new, TextFragment, (, newStr, ,, lastFragment, ., getFont, (, ), ,, lastFragment, ., getPaint, (, ), ), ;]
[(, newStr, ,, lastFragment, ., getFont, (, ), ,, lastFragment, ., getPaint, (, ), ), ;, lastLine, ., addFragment, (]
[getFont, (, ), ,, lastFragment, ., getPaint, (, ), ), ;, lastLine, ., addFragment, (, newFragment, ), ;, }, return]
[(, String, text, ,, int, start, ,, float, width, ,, BreakIterator, iterator, ,, TextMeasurer, measurer, ), {, int, current, =]
[width, ,, BreakIterator, iterator, ,, TextMeasurer, measurer, ), {, int, current, =, start, ;, int, end, ;, float, x, =]
[TextMeasurer, measurer, ), {, int, current, =, start, ;, int, end, ;, float, x, =, 0.0f, ;, boolean, firstWord, =]
[current, =, start, ;, int, end, ;, float, x, =, 0.0f, ;, boolean, firstWord, =, true, ;, int, newline, =]
[current, =, start, ;, int, end, ;, float, x, =, 0.0f, ;, boolean, firstWord, =, true, ;, int, newline, =]
[int, end, ;, float, x, =, 0.0f, ;, boolean, firstWord, =, true, ;, int, newline, =, text, ., indexOf, (]
[;, float, x, =, 0.0f, ;, boolean, firstWord, =, true, ;, int, newline, =, text, ., indexOf, (, '\n', ,]
[;, boolean, firstWord, =, true, ;, int, newline, =, text, ., indexOf, (, '\n', ,, start, ), ;, if, (]
[;, boolean, firstWord, =, true, ;, int, newline, =, text, ., indexOf, (, '\n', ,, start, ), ;, if, (]
[firstWord, =, true, ;, int, newline, =, text, ., indexOf, (, '\n', ,, start, ), ;, if, (, newline, <]
[;, int, newline, =, text, ., indexOf, (, '\n', ,, start, ), ;, if, (, newline, <, 0, ), {]
[newline, =, text, ., indexOf, (, '\n', ,, start, ), ;, if, (, newline, <, 0, ), {, newline, =]
[newline, =, text, ., indexOf, (, '\n', ,, start, ), ;, if, (, newline, <, 0, ), {, newline, =]
[,, start, ), ;, if, (, newline, <, 0, ), {, newline, =, Integer, ., MAX_VALUE, ;, }, while, (]
[start, ), ;, if, (, newline, <, 0, ), {, newline, =, Integer, ., MAX_VALUE, ;, }, while, (, (]
[start, ), ;, if, (, newline, <, 0, ), {, newline, =, Integer, ., MAX_VALUE, ;, }, while, (, (]
[), ;, if, (, newline, <, 0, ), {, newline, =, Integer, ., MAX_VALUE, ;, }, while, (, (, (]
[if, (, newline, <, 0, ), {, newline, =, Integer, ., MAX_VALUE, ;, }, while, (, (, (, end, =]
[if, (, newline, <, 0, ), {, newline, =, Integer, ., MAX_VALUE, ;, }, while, (, (, (, end, =]
[newline, =, Integer, ., MAX_VALUE, ;, }, while, (, (, (, end, =, iterator, ., next, (, ), ), !=]
[newline, =, Integer, ., MAX_VALUE, ;, }, while, (, (, (, end, =, iterator, ., next, (, ), ), !=]
[}, while, (, (, (, end, =, iterator, ., next, (, ), ), !=, BreakIterator, ., DONE, ), ), {]
[(, (, (, end, =, iterator, ., next, (, ), ), !=, BreakIterator, ., DONE, ), ), {, x, +=]
[(, (, (, end, =, iterator, ., next, (, ), ), !=, BreakIterator, ., DONE, ), ), {, x, +=]
[=, iterator, ., next, (, ), ), !=, BreakIterator, ., DONE, ), ), {, x, +=, measurer, ., getStringWidth, (]
[., next, (, ), ), !=, BreakIterator, ., DONE, ), ), {, x, +=, measurer, ., getStringWidth, (, text, ,]
[(, ), ), !=, BreakIterator, ., DONE, ), ), {, x, +=, measurer, ., getStringWidth, (, text, ,, current, ,]
[., DONE, ), ), {, x, +=, measurer, ., getStringWidth, (, text, ,, current, ,, end, ), ;, if, (]
[., DONE, ), ), {, x, +=, measurer, ., getStringWidth, (, text, ,, current, ,, end, ), ;, if, (]
[), ), {, x, +=, measurer, ., getStringWidth, (, text, ,, current, ,, end, ), ;, if, (, x, >]
[measurer, ., getStringWidth, (, text, ,, current, ,, end, ), ;, if, (, x, >, width, ), {, if, (]
[,, current, ,, end, ), ;, if, (, x, >, width, ), {, if, (, firstWord, ), {, while, (]
[,, current, ,, end, ), ;, if, (, x, >, width, ), {, if, (, firstWord, ), {, while, (]
[,, current, ,, end, ), ;, if, (, x, >, width, ), {, if, (, firstWord, ), {, while, (]
[), ;, if, (, x, >, width, ), {, if, (, firstWord, ), {, while, (, measurer, ., getStringWidth, (]
[if, (, x, >, width, ), {, if, (, firstWord, ), {, while, (, measurer, ., getStringWidth, (, text, ,]
[x, >, width, ), {, if, (, firstWord, ), {, while, (, measurer, ., getStringWidth, (, text, ,, start, ,]
[), {, if, (, firstWord, ), {, while, (, measurer, ., getStringWidth, (, text, ,, start, ,, end, ), >]
[(, firstWord, ), {, while, (, measurer, ., getStringWidth, (, text, ,, start, ,, end, ), >, width, ), {]
[(, firstWord, ), {, while, (, measurer, ., getStringWidth, (, text, ,, start, ,, end, ), >, width, ), {]
[(, measurer, ., getStringWidth, (, text, ,, start, ,, end, ), >, width, ), {, end, --, ;, if, (]
[(, measurer, ., getStringWidth, (, text, ,, start, ,, end, ), >, width, ), {, end, --, ;, if, (]
[., getStringWidth, (, text, ,, start, ,, end, ), >, width, ), {, end, --, ;, if, (, end, <=]
[,, start, ,, end, ), >, width, ), {, end, --, ;, if, (, end, <=, start, ), {, return]
[>, width, ), {, end, --, ;, if, (, end, <=, start, ), {, return, end, ;, }, }, return]
[--, ;, if, (, end, <=, start, ), {, return, end, ;, }, }, return, end, ;, }, else, {]
[if, (, end, <=, start, ), {, return, end, ;, }, }, return, end, ;, }, else, {, end, =]
[if, (, end, <=, start, ), {, return, end, ;, }, }, return, end, ;, }, else, {, end, =]
[return, end, ;, }, }, return, end, ;, }, else, {, end, =, iterator, ., previous, (, ), ;, return]
[}, else, {, end, =, iterator, ., previous, (, ), ;, return, end, ;, }, }, else, {, if, (]
[}, else, {, end, =, iterator, ., previous, (, ), ;, return, end, ;, }, }, else, {, if, (]
[{, end, =, iterator, ., previous, (, ), ;, return, end, ;, }, }, else, {, if, (, end, >]
[., previous, (, ), ;, return, end, ;, }, }, else, {, if, (, end, >, newline, ), {, return]
[;, return, end, ;, }, }, else, {, if, (, end, >, newline, ), {, return, newline, ;, }, }]
[end, ;, }, }, else, {, if, (, end, >, newline, ), {, return, newline, ;, }, }, firstWord, =]
[}, }, else, {, if, (, end, >, newline, ), {, return, newline, ;, }, }, firstWord, =, false, ;]
[else, {, if, (, end, >, newline, ), {, return, newline, ;, }, }, firstWord, =, false, ;, current, =]
[end, >, newline, ), {, return, newline, ;, }, }, firstWord, =, false, ;, current, =, end, ;, }, return]
[end, >, newline, ), {, return, newline, ;, }, }, firstWord, =, false, ;, current, =, end, ;, }, return]
[static, Rectangle2D, getTextBounds, (, String, text, ,, Graphics2D, g2, ,, FontMetrics, fm, ), {, final, Rectangle2D, bounds, ;, if, (]
[static, Rectangle2D, getTextBounds, (, String, text, ,, Graphics2D, g2, ,, FontMetrics, fm, ), {, final, Rectangle2D, bounds, ;, if, (]
[text, ,, Graphics2D, g2, ,, FontMetrics, fm, ), {, final, Rectangle2D, bounds, ;, if, (, TextUtilities, ., useFontMetricsGetStringBounds, ), {]
[Graphics2D, g2, ,, FontMetrics, fm, ), {, final, Rectangle2D, bounds, ;, if, (, TextUtilities, ., useFontMetricsGetStringBounds, ), {, bounds, =]
[Graphics2D, g2, ,, FontMetrics, fm, ), {, final, Rectangle2D, bounds, ;, if, (, TextUtilities, ., useFontMetricsGetStringBounds, ), {, bounds, =]
[fm, ), {, final, Rectangle2D, bounds, ;, if, (, TextUtilities, ., useFontMetricsGetStringBounds, ), {, bounds, =, fm, ., getStringBounds, (]
[{, final, Rectangle2D, bounds, ;, if, (, TextUtilities, ., useFontMetricsGetStringBounds, ), {, bounds, =, fm, ., getStringBounds, (, text, ,]
[(, TextUtilities, ., useFontMetricsGetStringBounds, ), {, bounds, =, fm, ., getStringBounds, (, text, ,, g2, ), ;, LineMetrics, lm, =]
[(, TextUtilities, ., useFontMetricsGetStringBounds, ), {, bounds, =, fm, ., getStringBounds, (, text, ,, g2, ), ;, LineMetrics, lm, =]
[(, TextUtilities, ., useFontMetricsGetStringBounds, ), {, bounds, =, fm, ., getStringBounds, (, text, ,, g2, ), ;, LineMetrics, lm, =]
[fm, ., getStringBounds, (, text, ,, g2, ), ;, LineMetrics, lm, =, fm, ., getFont, (, ), ., getLineMetrics, (]
[getStringBounds, (, text, ,, g2, ), ;, LineMetrics, lm, =, fm, ., getFont, (, ), ., getLineMetrics, (, text, ,]
[getStringBounds, (, text, ,, g2, ), ;, LineMetrics, lm, =, fm, ., getFont, (, ), ., getLineMetrics, (, text, ,]
[LineMetrics, lm, =, fm, ., getFont, (, ), ., getLineMetrics, (, text, ,, g2, ., getFontRenderContext, (, ), ), ;]
[LineMetrics, lm, =, fm, ., getFont, (, ), ., getLineMetrics, (, text, ,, g2, ., getFontRenderContext, (, ), ), ;]
[., getFont, (, ), ., getLineMetrics, (, text, ,, g2, ., getFontRenderContext, (, ), ), ;, bounds, ., setRect, (]
[., getFont, (, ), ., getLineMetrics, (, text, ,, g2, ., getFontRenderContext, (, ), ), ;, bounds, ., setRect, (]
[(, text, ,, g2, ., getFontRenderContext, (, ), ), ;, bounds, ., setRect, (, bounds, ., getX, (, ), ,]
[(, text, ,, g2, ., getFontRenderContext, (, ), ), ;, bounds, ., setRect, (, bounds, ., getX, (, ), ,]
[(, ), ), ;, bounds, ., setRect, (, bounds, ., getX, (, ), ,, bounds, ., getY, (, ), ,]
[(, ), ), ;, bounds, ., setRect, (, bounds, ., getX, (, ), ,, bounds, ., getY, (, ), ,]
[setRect, (, bounds, ., getX, (, ), ,, bounds, ., getY, (, ), ,, bounds, ., getWidth, (, ), ,]
[setRect, (, bounds, ., getX, (, ), ,, bounds, ., getY, (, ), ,, bounds, ., getWidth, (, ), ,]
[,, bounds, ., getWidth, (, ), ,, lm, ., getHeight, (, ), ), ;, }, else, {, double, width, =]
[,, bounds, ., getWidth, (, ), ,, lm, ., getHeight, (, ), ), ;, }, else, {, double, width, =]
[(, ), ,, lm, ., getHeight, (, ), ), ;, }, else, {, double, width, =, fm, ., stringWidth, (]
[(, ), ), ;, }, else, {, double, width, =, fm, ., stringWidth, (, text, ), ;, double, height, =]
[(, ), ), ;, }, else, {, double, width, =, fm, ., stringWidth, (, text, ), ;, double, height, =]
[{, double, width, =, fm, ., stringWidth, (, text, ), ;, double, height, =, fm, ., getHeight, (, ), ;]
[width, =, fm, ., stringWidth, (, text, ), ;, double, height, =, fm, ., getHeight, (, ), ;, bounds, =]
[(, text, ), ;, double, height, =, fm, ., getHeight, (, ), ;, bounds, =, new, Rectangle2D, ., Double, (]
[), ;, double, height, =, fm, ., getHeight, (, ), ;, bounds, =, new, Rectangle2D, ., Double, (, 0.0, ,]
[;, double, height, =, fm, ., getHeight, (, ), ;, bounds, =, new, Rectangle2D, ., Double, (, 0.0, ,, -]
[;, double, height, =, fm, ., getHeight, (, ), ;, bounds, =, new, Rectangle2D, ., Double, (, 0.0, ,, -]
[getHeight, (, ), ;, bounds, =, new, Rectangle2D, ., Double, (, 0.0, ,, -, fm, ., getAscent, (, ), ,]
[), ;, bounds, =, new, Rectangle2D, ., Double, (, 0.0, ,, -, fm, ., getAscent, (, ), ,, width, ,]
[Rectangle2D, ., Double, (, 0.0, ,, -, fm, ., getAscent, (, ), ,, width, ,, height, ), ;, }, return]
[(, String, text, ,, Graphics2D, g2, ,, float, x, ,, float, y, ,, TextAnchor, anchor, ), {, Rectangle2D, textBounds, =]
[,, TextAnchor, anchor, ), {, Rectangle2D, textBounds, =, new, Rectangle2D, ., Double, (, ), ;, float, [, ], adjust, =]
[anchor, ), {, Rectangle2D, textBounds, =, new, Rectangle2D, ., Double, (, ), ;, float, [, ], adjust, =, deriveTextBoundsAnchorOffsets, (]
[{, Rectangle2D, textBounds, =, new, Rectangle2D, ., Double, (, ), ;, float, [, ], adjust, =, deriveTextBoundsAnchorOffsets, (, g2, ,]
[textBounds, =, new, Rectangle2D, ., Double, (, ), ;, float, [, ], adjust, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,]
[new, Rectangle2D, ., Double, (, ), ;, float, [, ], adjust, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, anchor, ,]
[Double, (, ), ;, float, [, ], adjust, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, anchor, ,, textBounds, ), ;]
[Double, (, ), ;, float, [, ], adjust, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, anchor, ,, textBounds, ), ;]
[float, [, ], adjust, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, anchor, ,, textBounds, ), ;, textBounds, ., setRect, (]
[float, [, ], adjust, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, anchor, ,, textBounds, ), ;, textBounds, ., setRect, (]
[], adjust, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, anchor, ,, textBounds, ), ;, textBounds, ., setRect, (, x, +]
[], adjust, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, anchor, ,, textBounds, ), ;, textBounds, ., setRect, (, x, +]
[=, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, anchor, ,, textBounds, ), ;, textBounds, ., setRect, (, x, +, adjust, []
[g2, ,, text, ,, anchor, ,, textBounds, ), ;, textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,]
[g2, ,, text, ,, anchor, ,, textBounds, ), ;, textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,]
[g2, ,, text, ,, anchor, ,, textBounds, ), ;, textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,]
[text, ,, anchor, ,, textBounds, ), ;, textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,, y, +]
[text, ,, anchor, ,, textBounds, ), ;, textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,, y, +]
[anchor, ,, textBounds, ), ;, textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,, y, +, adjust, []
[), ;, textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1, ], +]
[), ;, textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1, ], +]
[textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1, ], +, adjust, []
[(, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1, ], +, adjust, [, 2, ], ,]
[(, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1, ], +, adjust, [, 2, ], ,]
[], ,, y, +, adjust, [, 1, ], +, adjust, [, 2, ], ,, textBounds, ., getWidth, (, ), ,]
[], ,, y, +, adjust, [, 1, ], +, adjust, [, 2, ], ,, textBounds, ., getWidth, (, ), ,]
[], +, adjust, [, 2, ], ,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;]
[], +, adjust, [, 2, ], ,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;]
[2, ], ,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;, g2, ., drawString, (]
[,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;, g2, ., drawString, (, text, ,]
[,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;, g2, ., drawString, (, text, ,]
[., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;, g2, ., drawString, (, text, ,, x, +]
[., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;, g2, ., drawString, (, text, ,, x, +]
[(, ), ,, textBounds, ., getHeight, (, ), ), ;, g2, ., drawString, (, text, ,, x, +, adjust, []
[textBounds, ., getHeight, (, ), ), ;, g2, ., drawString, (, text, ,, x, +, adjust, [, 0, ], ,]
[textBounds, ., getHeight, (, ), ), ;, g2, ., drawString, (, text, ,, x, +, adjust, [, 0, ], ,]
[getHeight, (, ), ), ;, g2, ., drawString, (, text, ,, x, +, adjust, [, 0, ], ,, y, +]
[getHeight, (, ), ), ;, g2, ., drawString, (, text, ,, x, +, adjust, [, 0, ], ,, y, +]
[), ), ;, g2, ., drawString, (, text, ,, x, +, adjust, [, 0, ], ,, y, +, adjust, []
[drawString, (, text, ,, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1, ], ), ;, return]
[deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor, anchor, ,, Rectangle2D, textBounds, ), {, float, [, ], result, =]
[g2, ,, String, text, ,, TextAnchor, anchor, ,, Rectangle2D, textBounds, ), {, float, [, ], result, =, new, float, []
[anchor, ,, Rectangle2D, textBounds, ), {, float, [, ], result, =, new, float, [, 3, ], ;, FontRenderContext, frc, =]
[anchor, ,, Rectangle2D, textBounds, ), {, float, [, ], result, =, new, float, [, 3, ], ;, FontRenderContext, frc, =]
[result, =, new, float, [, 3, ], ;, FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, Font, f, =]
[result, =, new, float, [, 3, ], ;, FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, Font, f, =]
[frc, =, g2, ., getFontRenderContext, (, ), ;, Font, f, =, g2, ., getFont, (, ), ;, FontMetrics, fm, =]
[frc, =, g2, ., getFontRenderContext, (, ), ;, Font, f, =, g2, ., getFont, (, ), ;, FontMetrics, fm, =]
[getFontRenderContext, (, ), ;, Font, f, =, g2, ., getFont, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (]
[=, g2, ., getFont, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =]
[=, g2, ., getFont, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =]
[(, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (]
[;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,]
[fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,]
[f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =]
[f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =]
[bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (]
[TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,]
[g2, ,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =]
[g2, ,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =]
[metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;]
[metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;]
[f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, result, []
[(, text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, result, [, 2, ], =]
[text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, result, [, 2, ], =, -]
[float, ascent, =, metrics, ., getAscent, (, ), ;, result, [, 2, ], =, -, ascent, ;, float, halfAscent, =]
[float, ascent, =, metrics, ., getAscent, (, ), ;, result, [, 2, ], =, -, ascent, ;, float, halfAscent, =]
[=, metrics, ., getAscent, (, ), ;, result, [, 2, ], =, -, ascent, ;, float, halfAscent, =, ascent, /]
[), ;, result, [, 2, ], =, -, ascent, ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =]
[), ;, result, [, 2, ], =, -, ascent, ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =]
[;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =]
[;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =]
[descent, =, metrics, ., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =]
[(, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==]
[metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==]
[), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==]
[float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==]
[;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==]
[yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==]
[if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||]
[if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||]
[anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =]
[BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, )]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==]
[xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==]
[), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||]
[), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||]
[bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==]
[bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==]
[), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||]
[), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||]
[2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==]
[2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==]
[if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||]
[if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||]
[anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==]
[anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==]
[TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||]
[TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||]
[anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==]
[anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =]
[BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, )]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -]
[TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (]
[TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (]
[TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (]
[TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (]
[HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==]
[HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==]
[=, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||]
[=, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||]
[float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==]
[float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==]
[., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[(, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==]
[(, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {]
[==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -]
[TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -]
[anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +]
[., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, )]
[., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, )]
[yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (]
[yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (]
[yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (]
[yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (]
[-, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==]
[-, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==]
[+, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||]
[+, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||]
[float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==]
[float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==]
[getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||]
[getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (]
[., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==]
[., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||]
[., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==]
[., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==]
[yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==]
[halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {]
[==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -]
[CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -]
[anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +]
[., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, )]
[CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (]
[CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (]
[CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (]
[CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /]
[-, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[-, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[-, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[-, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[+, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==]
[+, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==]
[(, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||]
[(, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||]
[., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==]
[., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==]
[/, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[/, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {]
[==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||]
[==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||]
[., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||]
[yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||]
[0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {]
[==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =]
[TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -]
[TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -]
[TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -]
[TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -]
[), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, if, (]
[), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, if, (]
[yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, if, (, textBounds, !=]
[metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, if, (, textBounds, !=, null, ), {]
[metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, if, (, textBounds, !=, null, ), {]
[), -, metrics, ., getLeading, (, ), ;, }, if, (, textBounds, !=, null, ), {, textBounds, ., setRect, (]
[getLeading, (, ), ;, }, if, (, textBounds, !=, null, ), {, textBounds, ., setRect, (, bounds, ), ;, }]
[getLeading, (, ), ;, }, if, (, textBounds, !=, null, ), {, textBounds, ., setRect, (, bounds, ), ;, }]
[), ;, }, if, (, textBounds, !=, null, ), {, textBounds, ., setRect, (, bounds, ), ;, }, result, []
[if, (, textBounds, !=, null, ), {, textBounds, ., setRect, (, bounds, ), ;, }, result, [, 0, ], =]
[textBounds, !=, null, ), {, textBounds, ., setRect, (, bounds, ), ;, }, result, [, 0, ], =, xAdj, ;]
[textBounds, !=, null, ), {, textBounds, ., setRect, (, bounds, ), ;, }, result, [, 0, ], =, xAdj, ;]
[null, ), {, textBounds, ., setRect, (, bounds, ), ;, }, result, [, 0, ], =, xAdj, ;, result, []
[textBounds, ., setRect, (, bounds, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =]
[(, bounds, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return]
[result, [, 1, ], =, yAdj, ;, return, result, ;, }, public, static, void, setUseDrawRotatedStringWorkaround, (, boolean, use, ), {]
[1, ], =, yAdj, ;, return, result, ;, }, public, static, void, setUseDrawRotatedStringWorkaround, (, boolean, use, ), {, useDrawRotatedStringWorkaround, =]
[static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, double, angle, ,, float, x, ,, float, y, ), {]
[drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, double, angle, ,, float, x, ,, float, y, ), {, drawRotatedString, (]
[String, text, ,, Graphics2D, g2, ,, double, angle, ,, float, x, ,, float, y, ), {, drawRotatedString, (, text, ,]
[,, Graphics2D, g2, ,, double, angle, ,, float, x, ,, float, y, ), {, drawRotatedString, (, text, ,, g2, ,]
[g2, ,, double, angle, ,, float, x, ,, float, y, ), {, drawRotatedString, (, text, ,, g2, ,, x, ,]
[double, angle, ,, float, x, ,, float, y, ), {, drawRotatedString, (, text, ,, g2, ,, x, ,, y, ,]
[,, float, x, ,, float, y, ), {, drawRotatedString, (, text, ,, g2, ,, x, ,, y, ,, angle, ,]
[x, ,, float, y, ), {, drawRotatedString, (, text, ,, g2, ,, x, ,, y, ,, angle, ,, x, ,]
[g2, ,, float, textX, ,, float, textY, ,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (]
[g2, ,, float, textX, ,, float, textY, ,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (]
[,, float, textX, ,, float, textY, ,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (, (]
[,, float, textX, ,, float, textY, ,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (, (]
[textX, ,, float, textY, ,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (, (, text, ==]
[textY, ,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (, (, text, ==, null, ), ||]
[,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (, (, text, ==, null, ), ||, (]
[,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (, (, text, ==, null, ), ||, (]
[float, rotateX, ,, float, rotateY, ), {, if, (, (, text, ==, null, ), ||, (, text, ., equals, (]
[==, null, ), ||, (, text, ., equals, (, "", ), ), ), {, return, ;, }, AffineTransform, saved, =]
[==, null, ), ||, (, text, ., equals, (, "", ), ), ), {, return, ;, }, AffineTransform, saved, =]
["", ), ), ), {, return, ;, }, AffineTransform, saved, =, g2, ., getTransform, (, ), ;, AffineTransform, rotate, =]
["", ), ), ), {, return, ;, }, AffineTransform, saved, =, g2, ., getTransform, (, ), ;, AffineTransform, rotate, =]
[{, return, ;, }, AffineTransform, saved, =, g2, ., getTransform, (, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (]
[;, }, AffineTransform, saved, =, g2, ., getTransform, (, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,]
[AffineTransform, saved, =, g2, ., getTransform, (, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,]
[g2, ., getTransform, (, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;]
[g2, ., getTransform, (, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;]
[), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;, g2, ., transform, (]
[AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;, g2, ., transform, (, rotate, ), ;, if, (]
[rotateX, ,, rotateY, ), ;, g2, ., transform, (, rotate, ), ;, if, (, useDrawRotatedStringWorkaround, ), {, TextLayout, tl, =]
[), ;, g2, ., transform, (, rotate, ), ;, if, (, useDrawRotatedStringWorkaround, ), {, TextLayout, tl, =, new, TextLayout, (]
[g2, ., transform, (, rotate, ), ;, if, (, useDrawRotatedStringWorkaround, ), {, TextLayout, tl, =, new, TextLayout, (, text, ,]
[g2, ., transform, (, rotate, ), ;, if, (, useDrawRotatedStringWorkaround, ), {, TextLayout, tl, =, new, TextLayout, (, text, ,]
[;, if, (, useDrawRotatedStringWorkaround, ), {, TextLayout, tl, =, new, TextLayout, (, text, ,, g2, ., getFont, (, ), ,]
[;, if, (, useDrawRotatedStringWorkaround, ), {, TextLayout, tl, =, new, TextLayout, (, text, ,, g2, ., getFont, (, ), ,]
[tl, =, new, TextLayout, (, text, ,, g2, ., getFont, (, ), ,, g2, ., getFontRenderContext, (, ), ), ;]
[tl, =, new, TextLayout, (, text, ,, g2, ., getFont, (, ), ,, g2, ., getFontRenderContext, (, ), ), ;]
[(, text, ,, g2, ., getFont, (, ), ,, g2, ., getFontRenderContext, (, ), ), ;, tl, ., draw, (]
[,, g2, ., getFont, (, ), ,, g2, ., getFontRenderContext, (, ), ), ;, tl, ., draw, (, g2, ,]
[., getFont, (, ), ,, g2, ., getFontRenderContext, (, ), ), ;, tl, ., draw, (, g2, ,, textX, ,]
[), ), ;, tl, ., draw, (, g2, ,, textX, ,, textY, ), ;, }, else, {, AttributedString, as, =]
[tl, ., draw, (, g2, ,, textX, ,, textY, ), ;, }, else, {, AttributedString, as, =, new, AttributedString, (]
[draw, (, g2, ,, textX, ,, textY, ), ;, }, else, {, AttributedString, as, =, new, AttributedString, (, text, ,]
[draw, (, g2, ,, textX, ,, textY, ), ;, }, else, {, AttributedString, as, =, new, AttributedString, (, text, ,]
[draw, (, g2, ,, textX, ,, textY, ), ;, }, else, {, AttributedString, as, =, new, AttributedString, (, text, ,]
[{, AttributedString, as, =, new, AttributedString, (, text, ,, g2, ., getFont, (, ), ., getAttributes, (, ), ), ;]
[{, AttributedString, as, =, new, AttributedString, (, text, ,, g2, ., getFont, (, ), ., getAttributes, (, ), ), ;]
[new, AttributedString, (, text, ,, g2, ., getFont, (, ), ., getAttributes, (, ), ), ;, g2, ., drawString, (]
[new, AttributedString, (, text, ,, g2, ., getFont, (, ), ., getAttributes, (, ), ), ;, g2, ., drawString, (]
[., getFont, (, ), ., getAttributes, (, ), ), ;, g2, ., drawString, (, as, ., getIterator, (, ), ,]
[(, ), ., getAttributes, (, ), ), ;, g2, ., drawString, (, as, ., getIterator, (, ), ,, textX, ,]
[(, ), ), ;, g2, ., drawString, (, as, ., getIterator, (, ), ,, textX, ,, textY, ), ;, }]
[(, ), ), ;, g2, ., drawString, (, as, ., getIterator, (, ), ,, textX, ,, textY, ), ;, }]
[g2, ., drawString, (, as, ., getIterator, (, ), ,, textX, ,, textY, ), ;, }, g2, ., setTransform, (]
[x, ,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, float, rotationX, ,, float, rotationY, ), {, if, (]
[x, ,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, float, rotationX, ,, float, rotationY, ), {, if, (]
[x, ,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, float, rotationX, ,, float, rotationY, ), {, if, (]
[float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, float, rotationX, ,, float, rotationY, ), {, if, (, text, ==]
[,, TextAnchor, textAnchor, ,, double, angle, ,, float, rotationX, ,, float, rotationY, ), {, if, (, text, ==, null, ||]
[,, TextAnchor, textAnchor, ,, double, angle, ,, float, rotationX, ,, float, rotationY, ), {, if, (, text, ==, null, ||]
[double, angle, ,, float, rotationX, ,, float, rotationY, ), {, if, (, text, ==, null, ||, text, ., equals, (]
[text, ==, null, ||, text, ., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =]
[null, ||, text, ., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (]
[text, ., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,]
[equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,]
[), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;]
[{, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, drawRotatedString, (]
[;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, drawRotatedString, (, text, ,]
[float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,]
[float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,]
[], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +]
[], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +]
[=, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, []
[g2, ,, text, ,, textAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,]
[g2, ,, text, ,, textAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,]
[text, ,, textAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +]
[text, ,, textAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +]
[textAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, []
[drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,]
[text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,]
[g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, rotationX, ,]
[g2, ,, float, x, ,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (]
[g2, ,, float, x, ,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (]
[g2, ,, float, x, ,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (]
[float, x, ,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (, text, ==]
[,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (, text, ==, null, ||]
[,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (, text, ==, null, ||]
[TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (, text, ==, null, ||, text, ., equals, (]
[text, ==, null, ||, text, ., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =]
[null, ||, text, ., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (]
[text, ., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,]
[equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,]
[}, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, float, [, ], rotateAdj, =]
[[, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (]
[textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,]
[deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,]
[,, text, ,, textAnchor, ), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;]
[,, textAnchor, ), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, drawRotatedString, (]
[), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, drawRotatedString, (, text, ,]
[float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,]
[float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,]
[], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +]
[], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +]
[=, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, []
[g2, ,, text, ,, rotationAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,]
[g2, ,, text, ,, rotationAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,]
[text, ,, rotationAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +]
[text, ,, rotationAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +]
[rotationAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, []
[drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,]
[text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,]
[text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,]
[text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,]
[g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +]
[g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +]
[x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, []
[[, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +]
[[, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +]
[], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, []
[+, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,]
[+, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,]
[+, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,]
[[, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +]
[[, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +]
[], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, []
[,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +]
[,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +]
[+, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, []
[g2, ,, float, x, ,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (]
[g2, ,, float, x, ,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (]
[g2, ,, float, x, ,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (]
[float, x, ,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (, text, ==]
[,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (, text, ==, null, ||]
[,, float, y, ,, TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (, text, ==, null, ||]
[TextAnchor, textAnchor, ,, double, angle, ,, TextAnchor, rotationAnchor, ), {, if, (, text, ==, null, ||, text, ., equals, (]
[,, TextAnchor, rotationAnchor, ), {, if, (, text, ==, null, ||, text, ., equals, (, "", ), ), {, return]
[==, null, ||, text, ., equals, (, "", ), ), {, return, null, ;, }, float, [, ], textAdj, =]
[||, text, ., equals, (, "", ), ), {, return, null, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (]
[., equals, (, "", ), ), {, return, null, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,]
[(, "", ), ), {, return, null, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,]
[}, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, float, [, ], rotateAdj, =]
[[, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (]
[textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,]
[deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,]
[textAnchor, ), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, Shape, result, =]
[;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, Shape, result, =, calculateRotatedStringBounds, (]
[[, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, Shape, result, =, calculateRotatedStringBounds, (, text, ,]
[rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,]
[rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,]
[deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,, x, +]
[deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,, x, +]
[g2, ,, text, ,, rotationAnchor, ), ;, Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,, x, +, textAdj, []
[,, rotationAnchor, ), ;, Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,]
[,, rotationAnchor, ), ;, Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,]
[), ;, Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +]
[), ;, Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +]
[Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, []
[calculateRotatedStringBounds, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,]
[text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,]
[text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,]
[text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,]
[g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +]
[g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +]
[x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, []
[[, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +]
[[, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +]
[], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, []
[+, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,]
[+, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,]
[+, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,]
[[, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +]
[[, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +]
[], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, []
[,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +]
[,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +]
[+, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, []
[+, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, return]
[float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor, anchor, ), {, float, [, ], result, =]
[deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor, anchor, ), {, float, [, ], result, =, new, float, []
[text, ,, TextAnchor, anchor, ), {, float, [, ], result, =, new, float, [, 2, ], ;, FontRenderContext, frc, =]
[text, ,, TextAnchor, anchor, ), {, float, [, ], result, =, new, float, [, 2, ], ;, FontRenderContext, frc, =]
[result, =, new, float, [, 2, ], ;, FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, Font, f, =]
[result, =, new, float, [, 2, ], ;, FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, Font, f, =]
[frc, =, g2, ., getFontRenderContext, (, ), ;, Font, f, =, g2, ., getFont, (, ), ;, FontMetrics, fm, =]
[frc, =, g2, ., getFontRenderContext, (, ), ;, Font, f, =, g2, ., getFont, (, ), ;, FontMetrics, fm, =]
[getFontRenderContext, (, ), ;, Font, f, =, g2, ., getFont, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (]
[=, g2, ., getFont, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =]
[=, g2, ., getFont, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =]
[(, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (]
[;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,]
[fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,]
[f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =]
[f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =]
[bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (]
[TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,]
[g2, ,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =]
[g2, ,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =]
[., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =]
[., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =]
[(, text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =, ascent, /]
[;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =]
[;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =]
[;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =]
[;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =]
[descent, =, metrics, ., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =]
[(, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==]
[metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==]
[), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==]
[float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==]
[;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==]
[yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==]
[if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||]
[if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||]
[anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =]
[BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, )]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==]
[xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==]
[), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||]
[), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||]
[bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==]
[bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==]
[), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||]
[), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||]
[2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==]
[2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==]
[if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||]
[if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||]
[anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==]
[anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==]
[TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||]
[TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||]
[anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==]
[anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =]
[BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, )]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -]
[TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (]
[TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (]
[TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (]
[TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (]
[HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==]
[HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==]
[=, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||]
[=, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||]
[float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==]
[float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==]
[., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[(, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==]
[(, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {]
[==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -]
[TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -]
[anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +]
[., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, )]
[., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, )]
[yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (]
[yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (]
[yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (]
[yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (]
[-, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==]
[-, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==]
[+, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||]
[+, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||]
[float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==]
[float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==]
[getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||]
[getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (]
[., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==]
[., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||]
[., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==]
[., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==]
[yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==]
[halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {]
[==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -]
[CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -]
[anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +]
[., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, )]
[CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (]
[CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (]
[CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (]
[CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /]
[-, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[-, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[-, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[-, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[+, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==]
[+, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==]
[(, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||]
[(, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||]
[., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==]
[., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==]
[/, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[/, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {]
[==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||]
[==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||]
[., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||]
[yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||]
[0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {]
[==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =]
[TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -]
[TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -]
[TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -]
[TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -]
[., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }]
[., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }]
[), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, result, []
[=, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =]
[metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;]
[metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;]
[getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;, result, []
[-, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =]
[getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return]
[float, [, ], deriveRotationAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor, anchor, ), {, float, [, ], result, =]
[deriveRotationAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor, anchor, ), {, float, [, ], result, =, new, float, []
[text, ,, TextAnchor, anchor, ), {, float, [, ], result, =, new, float, [, 2, ], ;, FontRenderContext, frc, =]
[text, ,, TextAnchor, anchor, ), {, float, [, ], result, =, new, float, [, 2, ], ;, FontRenderContext, frc, =]
[result, =, new, float, [, 2, ], ;, FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, LineMetrics, metrics, =]
[result, =, new, float, [, 2, ], ;, FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, LineMetrics, metrics, =]
[result, =, new, float, [, 2, ], ;, FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, LineMetrics, metrics, =]
[FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, LineMetrics, metrics, =, g2, ., getFont, (, ), ., getLineMetrics, (]
[=, g2, ., getFontRenderContext, (, ), ;, LineMetrics, metrics, =, g2, ., getFont, (, ), ., getLineMetrics, (, text, ,]
[;, LineMetrics, metrics, =, g2, ., getFont, (, ), ., getLineMetrics, (, text, ,, frc, ), ;, FontMetrics, fm, =]
[;, LineMetrics, metrics, =, g2, ., getFont, (, ), ., getLineMetrics, (, text, ,, frc, ), ;, FontMetrics, fm, =]
[., getLineMetrics, (, text, ,, frc, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =]
[., getLineMetrics, (, text, ,, frc, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =]
[,, frc, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (]
[), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,]
[FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,]
[(, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, float, ascent, =]
[(, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, float, ascent, =]
[(, text, ,, g2, ,, fm, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =]
[(, text, ,, g2, ,, fm, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =]
[,, g2, ,, fm, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =, ascent, /]
[;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =]
[;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =]
[;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =]
[;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =]
[descent, =, metrics, ., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =]
[(, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==]
[metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==]
[), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||]
[), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||]
[float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==]
[float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==]
[;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||]
[;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||]
[yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==]
[yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==]
[if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||]
[if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||]
[anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||]
[TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||]
[anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==]
[anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==]
[||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {]
[==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =]
[==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (]
[., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==]
[., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==]
[xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==]
[0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==]
[if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||]
[if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||]
[anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =]
[BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, )]
[BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, )]
[BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /]
[HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[{, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==]
[{, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==]
[float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||]
[float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||]
[bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==]
[bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==]
[), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||]
[), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||]
[2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==]
[2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==]
[if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||]
[if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||]
[anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==]
[anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==]
[TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||]
[TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||]
[anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==]
[anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =]
[BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, )]
[BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, )]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (]
[., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==]
[., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==]
[xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||]
[xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||]
[(, float, ), bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==]
[(, float, ), bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==]
[., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[(, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==]
[(, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {]
[==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, descent, +]
[||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, descent, +, leading, -]
[TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, )]
[TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, )]
[{, yAdj, =, descent, +, leading, -, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (]
[{, yAdj, =, descent, +, leading, -, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (]
[{, yAdj, =, descent, +, leading, -, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (]
[{, yAdj, =, descent, +, leading, -, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (]
[=, descent, +, leading, -, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==]
[=, descent, +, leading, -, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==]
[-, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||]
[-, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||]
[float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==]
[float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==]
[getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {]
[==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +]
[||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -]
[TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, )]
[., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), (]
[., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), (]
[., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), (]
[., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), (, bounds, ., getHeight, (, ), /]
[+, leading, -, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[+, leading, -, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[+, leading, -, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[+, leading, -, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[-, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==]
[-, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==]
[(, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||]
[(, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||]
[., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==]
[., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==]
[/, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||]
[/, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =]
[TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -]
[TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (]
[TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (]
[TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (]
[TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (]
[HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==]
[HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==]
[TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||]
[TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||]
[HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==]
[HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==]
[=, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[=, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {]
[==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||]
[==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||]
[., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||]
[yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||]
[0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[(, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {]
[==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (, ), +]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (, ), +]
[TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (, ), +, metrics, ., getLeading, (, ), ;, }]
[TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (, ), +, metrics, ., getLeading, (, ), ;, }]
[BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (, ), +, metrics, ., getLeading, (, ), ;, }, result, []
[yAdj, =, metrics, ., getDescent, (, ), +, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =]
[metrics, ., getDescent, (, ), +, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;]
[metrics, ., getDescent, (, ), +, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;]
[getDescent, (, ), +, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;, result, []
[+, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =]
[getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return]
[g2, ,, float, textX, ,, float, textY, ,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (]
[g2, ,, float, textX, ,, float, textY, ,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (]
[,, float, textX, ,, float, textY, ,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (, (]
[,, float, textX, ,, float, textY, ,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (, (]
[textX, ,, float, textY, ,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (, (, text, ==]
[textY, ,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (, (, text, ==, null, ), ||]
[,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (, (, text, ==, null, ), ||, (]
[,, double, angle, ,, float, rotateX, ,, float, rotateY, ), {, if, (, (, text, ==, null, ), ||, (]
[float, rotateX, ,, float, rotateY, ), {, if, (, (, text, ==, null, ), ||, (, text, ., equals, (]
[{, if, (, (, text, ==, null, ), ||, (, text, ., equals, (, "", ), ), ), {, return]
[null, ), ||, (, text, ., equals, (, "", ), ), ), {, return, null, ;, }, FontMetrics, fm, =]
[null, ), ||, (, text, ., equals, (, "", ), ), ), {, return, null, ;, }, FontMetrics, fm, =]
[), ), ), {, return, null, ;, }, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =]
[), ), ), {, return, null, ;, }, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =]
[return, null, ;, }, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (]
[;, }, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,]
[FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,]
[(, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, AffineTransform, translate, =]
[(, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, AffineTransform, translate, =]
[bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, AffineTransform, translate, =, AffineTransform, ., getTranslateInstance, (]
[TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, AffineTransform, translate, =, AffineTransform, ., getTranslateInstance, (, textX, ,]
[g2, ,, fm, ), ;, AffineTransform, translate, =, AffineTransform, ., getTranslateInstance, (, textX, ,, textY, ), ;, Shape, translatedBounds, =]
[g2, ,, fm, ), ;, AffineTransform, translate, =, AffineTransform, ., getTranslateInstance, (, textX, ,, textY, ), ;, Shape, translatedBounds, =]
[;, AffineTransform, translate, =, AffineTransform, ., getTranslateInstance, (, textX, ,, textY, ), ;, Shape, translatedBounds, =, translate, ., createTransformedShape, (]
[getTranslateInstance, (, textX, ,, textY, ), ;, Shape, translatedBounds, =, translate, ., createTransformedShape, (, bounds, ), ;, AffineTransform, rotate, =]
[getTranslateInstance, (, textX, ,, textY, ), ;, Shape, translatedBounds, =, translate, ., createTransformedShape, (, bounds, ), ;, AffineTransform, rotate, =]
[textY, ), ;, Shape, translatedBounds, =, translate, ., createTransformedShape, (, bounds, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (]
[;, Shape, translatedBounds, =, translate, ., createTransformedShape, (, bounds, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,]
[translatedBounds, =, translate, ., createTransformedShape, (, bounds, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,]
[bounds, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;, Shape, result, =]
[bounds, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;, Shape, result, =]
[rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;, Shape, result, =, rotate, ., createTransformedShape, (]
[getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;, Shape, result, =, rotate, ., createTransformedShape, (, translatedBounds, ), ;, return]
[=, rotate, ., createTransformedShape, (, translatedBounds, ), ;, return, result, ;, }, public, static, boolean, getUseFontMetricsGetStringBounds, (, ), {, return]
[static, boolean, getUseFontMetricsGetStringBounds, (, ), {, return, useFontMetricsGetStringBounds, ;, }, public, static, void, setUseFontMetricsGetStringBounds, (, final, boolean, use, ), {]
[getUseFontMetricsGetStringBounds, (, ), {, return, useFontMetricsGetStringBounds, ;, }, public, static, void, setUseFontMetricsGetStringBounds, (, final, boolean, use, ), {, useFontMetricsGetStringBounds, =]
[setUseFontMetricsGetStringBounds, (, final, boolean, use, ), {, useFontMetricsGetStringBounds, =, use, ;, }, public, static, boolean, isUseDrawRotatedStringWorkaround, (, ), {, return]
