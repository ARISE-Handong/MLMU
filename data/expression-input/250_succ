[;, private, static, long, ONE_KILO_BYTE, =, 1L, <<, 10L, ;, private, static, long, ONE_MEGA_BYTE, =, 1L, <<, 20L, ;, private]
[;, private, static, long, ONE_MEGA_BYTE, =, 1L, <<, 20L, ;, private, static, long, ONE_GIGA_BYTE, =, 1L, <<, 30L, ;, public]
[<<, 10L, ;, private, static, long, ONE_MEGA_BYTE, =, 1L, <<, 20L, ;, private, static, long, ONE_GIGA_BYTE, =, 1L, <<, 30L]
[;, private, static, long, ONE_MEGA_BYTE, =, 1L, <<, 20L, ;, private, static, long, ONE_GIGA_BYTE, =, 1L, <<, 30L, ;, public]
[;, private, static, long, ONE_GIGA_BYTE, =, 1L, <<, 30L, ;, public, static, void, maybeWriteJvmMetrics, (, PrintStream, out, ,, String, options]
[<<, 20L, ;, private, static, long, ONE_GIGA_BYTE, =, 1L, <<, 30L, ;, public, static, void, maybeWriteJvmMetrics, (, PrintStream, out, ,]
[;, private, static, long, ONE_GIGA_BYTE, =, 1L, <<, 30L, ;, public, static, void, maybeWriteJvmMetrics, (, PrintStream, out, ,, String, options]
[;, public, static, void, maybeWriteJvmMetrics, (, PrintStream, out, ,, String, options, ), {, if, (, options, ==, null, ), {]
[<<, 30L, ;, public, static, void, maybeWriteJvmMetrics, (, PrintStream, out, ,, String, options, ), {, if, (, options, ==, null]
[;, public, static, void, maybeWriteJvmMetrics, (, PrintStream, out, ,, String, options, ), {, if, (, options, ==, null, ), {]
[), {, return, ;, }, boolean, verboseMode, =, false, ;, boolean, prettyMode, =, false, ;, StringTokenizer, st, =, new, StringTokenizer]
[==, null, ), {, return, ;, }, boolean, verboseMode, =, false, ;, boolean, prettyMode, =, false, ;, StringTokenizer, st, =]
[), {, return, ;, }, boolean, verboseMode, =, false, ;, boolean, prettyMode, =, false, ;, StringTokenizer, st, =, new, StringTokenizer]
[;, boolean, prettyMode, =, false, ;, StringTokenizer, st, =, new, StringTokenizer, (, options, ,, ":", ), ;, if, (, st]
[;, StringTokenizer, st, =, new, StringTokenizer, (, options, ,, ":", ), ;, if, (, st, ., hasMoreTokens, (, ), )]
[;, if, (, st, ., hasMoreTokens, (, ), ), {, String, mode, =, st, ., nextToken, (, ), ;, if]
[,, ":", ), ;, if, (, st, ., hasMoreTokens, (, ), ), {, String, mode, =, st, ., nextToken, (]
[), ;, if, (, st, ., hasMoreTokens, (, ), ), {, String, mode, =, st, ., nextToken, (, ), ;]
[), {, String, mode, =, st, ., nextToken, (, ), ;, if, (, mode, ., equalsIgnoreCase, (, "verbose", ), )]
[., hasMoreTokens, (, ), ), {, String, mode, =, st, ., nextToken, (, ), ;, if, (, mode, ., equalsIgnoreCase]
[;, if, (, mode, ., equalsIgnoreCase, (, "verbose", ), ), {, verboseMode, =, true, ;, }, }, if, (, st]
[., nextToken, (, ), ;, if, (, mode, ., equalsIgnoreCase, (, "verbose", ), ), {, verboseMode, =, true, ;, }]
[), {, verboseMode, =, true, ;, }, }, if, (, st, ., hasMoreTokens, (, ), ), {, String, mode, =]
[., equalsIgnoreCase, (, "verbose", ), ), {, verboseMode, =, true, ;, }, }, if, (, st, ., hasMoreTokens, (, )]
[), ), {, verboseMode, =, true, ;, }, }, if, (, st, ., hasMoreTokens, (, ), ), {, String, mode]
[=, true, ;, }, }, if, (, st, ., hasMoreTokens, (, ), ), {, String, mode, =, st, ., nextToken]
[;, }, }, if, (, st, ., hasMoreTokens, (, ), ), {, String, mode, =, st, ., nextToken, (, )]
[), {, String, mode, =, st, ., nextToken, (, ), ;, if, (, mode, ., equalsIgnoreCase, (, "pretty", ), )]
[., hasMoreTokens, (, ), ), {, String, mode, =, st, ., nextToken, (, ), ;, if, (, mode, ., equalsIgnoreCase]
[;, if, (, mode, ., equalsIgnoreCase, (, "pretty", ), ), {, prettyMode, =, true, ;, }, }, if, (, st]
[., nextToken, (, ), ;, if, (, mode, ., equalsIgnoreCase, (, "pretty", ), ), {, prettyMode, =, true, ;, }]
[), {, prettyMode, =, true, ;, }, }, if, (, st, ., hasMoreTokens, (, ), ), {, while, (, st]
[., equalsIgnoreCase, (, "pretty", ), ), {, prettyMode, =, true, ;, }, }, if, (, st, ., hasMoreTokens, (, )]
[), ), {, prettyMode, =, true, ;, }, }, if, (, st, ., hasMoreTokens, (, ), ), {, while, (]
[=, true, ;, }, }, if, (, st, ., hasMoreTokens, (, ), ), {, while, (, st, ., hasMoreTokens, (]
[;, }, }, if, (, st, ., hasMoreTokens, (, ), ), {, while, (, st, ., hasMoreTokens, (, ), )]
[), {, while, (, st, ., hasMoreTokens, (, ), ), {, String, types, =, st, ., nextToken, (, ), ;]
[., hasMoreTokens, (, ), ), {, while, (, st, ., hasMoreTokens, (, ), ), {, String, types, =, st, .]
[), {, String, types, =, st, ., nextToken, (, ), ;, StringTokenizer, typeSt, =, new, StringTokenizer, (, types, ,, ","]
[., hasMoreTokens, (, ), ), {, String, types, =, st, ., nextToken, (, ), ;, StringTokenizer, typeSt, =, new, StringTokenizer]
[;, StringTokenizer, typeSt, =, new, StringTokenizer, (, types, ,, ",", ), ;, while, (, typeSt, ., hasMoreElements, (, ), )]
[., nextToken, (, ), ;, StringTokenizer, typeSt, =, new, StringTokenizer, (, types, ,, ",", ), ;, while, (, typeSt, .]
[;, while, (, typeSt, ., hasMoreElements, (, ), ), {, String, type, =, typeSt, ., nextToken, (, ), ;, writeMetrics]
[,, ",", ), ;, while, (, typeSt, ., hasMoreElements, (, ), ), {, String, type, =, typeSt, ., nextToken, (]
[), ;, while, (, typeSt, ., hasMoreElements, (, ), ), {, String, type, =, typeSt, ., nextToken, (, ), ;]
[), {, String, type, =, typeSt, ., nextToken, (, ), ;, writeMetrics, (, out, ,, type, ,, verboseMode, ,, prettyMode]
[., hasMoreElements, (, ), ), {, String, type, =, typeSt, ., nextToken, (, ), ;, writeMetrics, (, out, ,, type]
[;, writeMetrics, (, out, ,, type, ,, verboseMode, ,, prettyMode, ), ;, }, }, }, else, {, writeMetrics, (, out]
[., nextToken, (, ), ;, writeMetrics, (, out, ,, type, ,, verboseMode, ,, prettyMode, ), ;, }, }, }, else]
[;, }, }, }, else, {, writeMetrics, (, out, ,, "all", ,, verboseMode, ,, prettyMode, ), ;, }, }, private]
[,, type, ,, verboseMode, ,, prettyMode, ), ;, }, }, }, else, {, writeMetrics, (, out, ,, "all", ,, verboseMode]
[,, verboseMode, ,, prettyMode, ), ;, }, }, }, else, {, writeMetrics, (, out, ,, "all", ,, verboseMode, ,, prettyMode]
[,, prettyMode, ), ;, }, }, }, else, {, writeMetrics, (, out, ,, "all", ,, verboseMode, ,, prettyMode, ), ;]
[), ;, }, }, }, else, {, writeMetrics, (, out, ,, "all", ,, verboseMode, ,, prettyMode, ), ;, }, }]
[;, }, }, private, static, void, writeMetrics, (, PrintStream, out, ,, String, type, ,, boolean, verbose, ,, boolean, pretty, )]
[,, "all", ,, verboseMode, ,, prettyMode, ), ;, }, }, private, static, void, writeMetrics, (, PrintStream, out, ,, String, type]
[,, verboseMode, ,, prettyMode, ), ;, }, }, private, static, void, writeMetrics, (, PrintStream, out, ,, String, type, ,, boolean]
[,, prettyMode, ), ;, }, }, private, static, void, writeMetrics, (, PrintStream, out, ,, String, type, ,, boolean, verbose, ,]
[), ;, }, }, private, static, void, writeMetrics, (, PrintStream, out, ,, String, type, ,, boolean, verbose, ,, boolean, pretty]
[), {, writeGarbageCollectionStats, (, out, ,, verbose, ,, pretty, ), ;, }, if, (, type, ., equals, (, "mem", )]
[||, type, ., equalsIgnoreCase, (, "all", ), ), {, writeGarbageCollectionStats, (, out, ,, verbose, ,, pretty, ), ;, }, if]
[., equals, (, "gc", ), ||, type, ., equalsIgnoreCase, (, "all", ), ), {, writeGarbageCollectionStats, (, out, ,, verbose, ,]
[), ||, type, ., equalsIgnoreCase, (, "all", ), ), {, writeGarbageCollectionStats, (, out, ,, verbose, ,, pretty, ), ;, }]
[), {, writeGarbageCollectionStats, (, out, ,, verbose, ,, pretty, ), ;, }, if, (, type, ., equals, (, "mem", )]
[., equalsIgnoreCase, (, "all", ), ), {, writeGarbageCollectionStats, (, out, ,, verbose, ,, pretty, ), ;, }, if, (, type]
[), ), {, writeGarbageCollectionStats, (, out, ,, verbose, ,, pretty, ), ;, }, if, (, type, ., equals, (, "mem"]
[;, }, if, (, type, ., equals, (, "mem", ), ||, type, ., equalsIgnoreCase, (, "all", ), ), {, writeMemoryMetrics]
[,, verbose, ,, pretty, ), ;, }, if, (, type, ., equals, (, "mem", ), ||, type, ., equalsIgnoreCase, (]
[,, pretty, ), ;, }, if, (, type, ., equals, (, "mem", ), ||, type, ., equalsIgnoreCase, (, "all", )]
[), ;, }, if, (, type, ., equals, (, "mem", ), ||, type, ., equalsIgnoreCase, (, "all", ), ), {]
[), {, writeMemoryMetrics, (, out, ,, verbose, ,, pretty, ), ;, }, if, (, type, ., equals, (, "jit", )]
[||, type, ., equalsIgnoreCase, (, "all", ), ), {, writeMemoryMetrics, (, out, ,, verbose, ,, pretty, ), ;, }, if]
[., equals, (, "mem", ), ||, type, ., equalsIgnoreCase, (, "all", ), ), {, writeMemoryMetrics, (, out, ,, verbose, ,]
[), ||, type, ., equalsIgnoreCase, (, "all", ), ), {, writeMemoryMetrics, (, out, ,, verbose, ,, pretty, ), ;, }]
[), {, writeMemoryMetrics, (, out, ,, verbose, ,, pretty, ), ;, }, if, (, type, ., equals, (, "jit", )]
[., equalsIgnoreCase, (, "all", ), ), {, writeMemoryMetrics, (, out, ,, verbose, ,, pretty, ), ;, }, if, (, type]
[), ), {, writeMemoryMetrics, (, out, ,, verbose, ,, pretty, ), ;, }, if, (, type, ., equals, (, "jit"]
[;, }, if, (, type, ., equals, (, "jit", ), ||, type, ., equalsIgnoreCase, (, "all", ), ), {, writeJitMetrics]
[,, verbose, ,, pretty, ), ;, }, if, (, type, ., equals, (, "jit", ), ||, type, ., equalsIgnoreCase, (]
[,, pretty, ), ;, }, if, (, type, ., equals, (, "jit", ), ||, type, ., equalsIgnoreCase, (, "all", )]
[), ;, }, if, (, type, ., equals, (, "jit", ), ||, type, ., equalsIgnoreCase, (, "all", ), ), {]
[), {, writeJitMetrics, (, out, ,, verbose, ,, pretty, ), ;, }, }, private, static, void, writeJitMetrics, (, PrintStream, out]
[||, type, ., equalsIgnoreCase, (, "all", ), ), {, writeJitMetrics, (, out, ,, verbose, ,, pretty, ), ;, }, }]
[., equals, (, "jit", ), ||, type, ., equalsIgnoreCase, (, "all", ), ), {, writeJitMetrics, (, out, ,, verbose, ,]
[), ||, type, ., equalsIgnoreCase, (, "all", ), ), {, writeJitMetrics, (, out, ,, verbose, ,, pretty, ), ;, }]
[), {, writeJitMetrics, (, out, ,, verbose, ,, pretty, ), ;, }, }, private, static, void, writeJitMetrics, (, PrintStream, out]
[., equalsIgnoreCase, (, "all", ), ), {, writeJitMetrics, (, out, ,, verbose, ,, pretty, ), ;, }, }, private, static]
[), ), {, writeJitMetrics, (, out, ,, verbose, ,, pretty, ), ;, }, }, private, static, void, writeJitMetrics, (, PrintStream]
[;, }, }, private, static, void, writeJitMetrics, (, PrintStream, out, ,, boolean, verbose, ,, boolean, pretty, ), {, CompilationMXBean, cBean]
[,, verbose, ,, pretty, ), ;, }, }, private, static, void, writeJitMetrics, (, PrintStream, out, ,, boolean, verbose, ,, boolean]
[,, pretty, ), ;, }, }, private, static, void, writeJitMetrics, (, PrintStream, out, ,, boolean, verbose, ,, boolean, pretty, )]
[), ;, }, }, private, static, void, writeJitMetrics, (, PrintStream, out, ,, boolean, verbose, ,, boolean, pretty, ), {, CompilationMXBean]
[;, String, name, ;, if, (, verbose, ), {, name, =, cBean, ., getName, (, ), ;, }, else, {]
[., getCompilationMXBean, (, ), ;, String, name, ;, if, (, verbose, ), {, name, =, cBean, ., getName, (, )]
[), {, name, =, cBean, ., getName, (, ), ;, }, else, {, name, =, "total", ;, }, if, (]
[=, cBean, ., getName, (, ), ;, }, else, {, name, =, "total", ;, }, if, (, pretty, ), {]
[;, }, else, {, name, =, "total", ;, }, if, (, pretty, ), {, out, ., println, (, "\nJIT Stats", )]
[., getName, (, ), ;, }, else, {, name, =, "total", ;, }, if, (, pretty, ), {, out, .]
[=, "total", ;, }, if, (, pretty, ), {, out, ., println, (, "\nJIT Stats", ), ;, out, ., println, (]
[;, }, if, (, pretty, ), {, out, ., println, (, "\nJIT Stats", ), ;, out, ., println, (, String, .]
[), {, out, ., println, (, "\nJIT Stats", ), ;, out, ., println, (, String, ., format, (, "\t%s jit time: %d ms", ,, name]
[;, out, ., println, (, String, ., format, (, "\t%s jit time: %d ms", ,, name, ,, cBean, ., getTotalCompilationTime, (, ), ), )]
[., println, (, "\nJIT Stats", ), ;, out, ., println, (, String, ., format, (, "\t%s jit time: %d ms", ,, name, ,, cBean, .]
[), ;, out, ., println, (, String, ., format, (, "\t%s jit time: %d ms", ,, name, ,, cBean, ., getTotalCompilationTime, (, ), )]
[;, }, else, {, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "%s-jit-time-ms : %d", ,, normalizeName, (, name, )]
[., println, (, String, ., format, (, "\t%s jit time: %d ms", ,, name, ,, cBean, ., getTotalCompilationTime, (, ), ), ), ;, }]
[), ;, }, else, {, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "%s-jit-time-ms : %d", ,, normalizeName, (, name]
[., format, (, "\t%s jit time: %d ms", ,, name, ,, cBean, ., getTotalCompilationTime, (, ), ), ), ;, }, else, {, out, .]
[,, name, ,, cBean, ., getTotalCompilationTime, (, ), ), ), ;, }, else, {, out, ., println, (, normalizeTabularColonPos, (]
[,, cBean, ., getTotalCompilationTime, (, ), ), ), ;, }, else, {, out, ., println, (, normalizeTabularColonPos, (, String, .]
[), ), ;, }, else, {, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "%s-jit-time-ms : %d", ,, normalizeName, (]
[., getTotalCompilationTime, (, ), ), ), ;, }, else, {, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (]
[;, }, }, private, static, void, writeOverallMemoryUsage, (, PrintStream, out, ,, MemoryUsage, usage, ,, String, prefix, ,, boolean, pretty, )]
[., println, (, normalizeTabularColonPos, (, String, ., format, (, "%s-jit-time-ms : %d", ,, normalizeName, (, name, ), ,, cBean, ., getTotalCompilationTime, (]
[), ;, }, }, private, static, void, writeOverallMemoryUsage, (, PrintStream, out, ,, MemoryUsage, usage, ,, String, prefix, ,, boolean, pretty]
[), ), ;, }, }, private, static, void, writeOverallMemoryUsage, (, PrintStream, out, ,, MemoryUsage, usage, ,, String, prefix, ,, boolean]
[., format, (, "%s-jit-time-ms : %d", ,, normalizeName, (, name, ), ,, cBean, ., getTotalCompilationTime, (, ), ), ), ), ;, }]
[,, normalizeName, (, name, ), ,, cBean, ., getTotalCompilationTime, (, ), ), ), ), ;, }, }, private, static, void]
[,, cBean, ., getTotalCompilationTime, (, ), ), ), ), ;, }, }, private, static, void, writeOverallMemoryUsage, (, PrintStream, out, ,]
[), ,, cBean, ., getTotalCompilationTime, (, ), ), ), ), ;, }, }, private, static, void, writeOverallMemoryUsage, (, PrintStream, out]
[), ), ), ;, }, }, private, static, void, writeOverallMemoryUsage, (, PrintStream, out, ,, MemoryUsage, usage, ,, String, prefix, ,]
[., getTotalCompilationTime, (, ), ), ), ), ;, }, }, private, static, void, writeOverallMemoryUsage, (, PrintStream, out, ,, MemoryUsage, usage]
[), {, out, ., format, (, "\t%s\n", ,, prefix, ), ;, out, ., format, (, "\t\tavailable         : %s\n", ,, formatBytes, (, usage]
[;, out, ., format, (, "\t\tavailable         : %s\n", ,, formatBytes, (, usage, ., getMax, (, ), ), ), ;, out, ., format]
[., format, (, "\t%s\n", ,, prefix, ), ;, out, ., format, (, "\t\tavailable         : %s\n", ,, formatBytes, (, usage, ., getMax, (]
[,, prefix, ), ;, out, ., format, (, "\t\tavailable         : %s\n", ,, formatBytes, (, usage, ., getMax, (, ), ), ), ;]
[), ;, out, ., format, (, "\t\tavailable         : %s\n", ,, formatBytes, (, usage, ., getMax, (, ), ), ), ;, out, .]
[;, out, ., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage, ., getUsed, (, ), ), ), ;, }, else, {]
[., format, (, "\t\tavailable         : %s\n", ,, formatBytes, (, usage, ., getMax, (, ), ), ), ;, out, ., format, (, "\t\tcurrent           : %s\n"]
[,, formatBytes, (, usage, ., getMax, (, ), ), ), ;, out, ., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage]
[), ;, out, ., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage, ., getUsed, (, ), ), ), ;, }, else]
[), ), ;, out, ., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage, ., getUsed, (, ), ), ), ;, }]
[., getMax, (, ), ), ), ;, out, ., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage, ., getUsed, (, )]
[;, }, else, {, prefix, =, normalizeName, (, prefix, ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format]
[., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage, ., getUsed, (, ), ), ), ;, }, else, {, prefix, =]
[,, formatBytes, (, usage, ., getUsed, (, ), ), ), ;, }, else, {, prefix, =, normalizeName, (, prefix, )]
[), ;, }, else, {, prefix, =, normalizeName, (, prefix, ), ;, out, ., println, (, normalizeTabularColonPos, (, String, .]
[), ), ;, }, else, {, prefix, =, normalizeName, (, prefix, ), ;, out, ., println, (, normalizeTabularColonPos, (, String]
[., getUsed, (, ), ), ), ;, }, else, {, prefix, =, normalizeName, (, prefix, ), ;, out, ., println]
[=, normalizeName, (, prefix, ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-available-bytes : %d", ,]
[;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-available-bytes : %d", ,, usage, ., getMax, (, )]
[), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-available-bytes : %d", ,, usage, ., getMax, (]
[;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (, )]
[., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-available-bytes : %d", ,, usage, ., getMax, (, ), ), )]
[), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (]
[), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed]
[., format, (, prefix, +, "-available-bytes : %d", ,, usage, ., getMax, (, ), ), ), ), ;, out, ., println, (]
[,, usage, ., getMax, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (]
[+, "-available-bytes : %d", ,, usage, ., getMax, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, .]
[,, usage, ., getMax, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (]
[), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, .]
[., getMax, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +]
[;, }, }, private, static, void, writePoolMemoryUsage, (, PrintStream, out, ,, MemoryUsage, usage, ,, MemoryUsage, peakUsage, ,, String, prefix, ,]
[., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (, ), ), )]
[), ;, }, }, private, static, void, writePoolMemoryUsage, (, PrintStream, out, ,, MemoryUsage, usage, ,, MemoryUsage, peakUsage, ,, String, prefix]
[), ), ;, }, }, private, static, void, writePoolMemoryUsage, (, PrintStream, out, ,, MemoryUsage, usage, ,, MemoryUsage, peakUsage, ,, String]
[., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (, ), ), ), ), ;, }, }, private, static]
[,, usage, ., getUsed, (, ), ), ), ), ;, }, }, private, static, void, writePoolMemoryUsage, (, PrintStream, out, ,]
[+, "-current-bytes : %d", ,, usage, ., getUsed, (, ), ), ), ), ;, }, }, private, static, void, writePoolMemoryUsage, (, PrintStream]
[,, usage, ., getUsed, (, ), ), ), ), ;, }, }, private, static, void, writePoolMemoryUsage, (, PrintStream, out, ,]
[), ), ), ;, }, }, private, static, void, writePoolMemoryUsage, (, PrintStream, out, ,, MemoryUsage, usage, ,, MemoryUsage, peakUsage, ,]
[., getUsed, (, ), ), ), ), ;, }, }, private, static, void, writePoolMemoryUsage, (, PrintStream, out, ,, MemoryUsage, usage]
[), {, out, ., format, (, "\t\tavailable         : %s\n", ,, formatBytes, (, usage, ., getMax, (, ), ), ), ;, out, .]
[;, out, ., format, (, "\t\tpeak              : %s\n", ,, formatBytes, (, peakUsage, ., getUsed, (, ), ), ), ;, out, ., format]
[., format, (, "\t\tavailable         : %s\n", ,, formatBytes, (, usage, ., getMax, (, ), ), ), ;, out, ., format, (, "\t\tpeak              : %s\n"]
[,, formatBytes, (, usage, ., getMax, (, ), ), ), ;, out, ., format, (, "\t\tpeak              : %s\n", ,, formatBytes, (, peakUsage]
[), ;, out, ., format, (, "\t\tpeak              : %s\n", ,, formatBytes, (, peakUsage, ., getUsed, (, ), ), ), ;, out, .]
[), ), ;, out, ., format, (, "\t\tpeak              : %s\n", ,, formatBytes, (, peakUsage, ., getUsed, (, ), ), ), ;, out]
[., getMax, (, ), ), ), ;, out, ., format, (, "\t\tpeak              : %s\n", ,, formatBytes, (, peakUsage, ., getUsed, (, )]
[;, out, ., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage, ., getUsed, (, ), ), ), ;, }, else, {]
[., format, (, "\t\tpeak              : %s\n", ,, formatBytes, (, peakUsage, ., getUsed, (, ), ), ), ;, out, ., format, (, "\t\tcurrent           : %s\n"]
[,, formatBytes, (, peakUsage, ., getUsed, (, ), ), ), ;, out, ., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage]
[), ;, out, ., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage, ., getUsed, (, ), ), ), ;, }, else]
[), ), ;, out, ., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage, ., getUsed, (, ), ), ), ;, }]
[., getUsed, (, ), ), ), ;, out, ., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage, ., getUsed, (, )]
[;, }, else, {, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-available-bytes : %d", ,, usage, .]
[., format, (, "\t\tcurrent           : %s\n", ,, formatBytes, (, usage, ., getUsed, (, ), ), ), ;, }, else, {, out, .]
[,, formatBytes, (, usage, ., getUsed, (, ), ), ), ;, }, else, {, out, ., println, (, normalizeTabularColonPos, (]
[), ;, }, else, {, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-available-bytes : %d", ,, usage]
[), ), ;, }, else, {, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-available-bytes : %d", ,]
[., getUsed, (, ), ), ), ;, }, else, {, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (]
[;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-peak-bytes : %d", ,, peakUsage, ., getUsed, (, )]
[., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-available-bytes : %d", ,, usage, ., getMax, (, ), ), )]
[), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-peak-bytes : %d", ,, peakUsage, ., getUsed, (]
[), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-peak-bytes : %d", ,, peakUsage, ., getUsed]
[., format, (, prefix, +, "-available-bytes : %d", ,, usage, ., getMax, (, ), ), ), ), ;, out, ., println, (]
[,, usage, ., getMax, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (]
[+, "-available-bytes : %d", ,, usage, ., getMax, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, .]
[,, usage, ., getMax, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (]
[), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-peak-bytes : %d", ,, peakUsage, .]
[., getMax, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +]
[;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (, )]
[., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-peak-bytes : %d", ,, peakUsage, ., getUsed, (, ), ), )]
[), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (]
[), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed]
[., format, (, prefix, +, "-peak-bytes : %d", ,, peakUsage, ., getUsed, (, ), ), ), ), ;, out, ., println, (]
[,, peakUsage, ., getUsed, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (]
[+, "-peak-bytes : %d", ,, peakUsage, ., getUsed, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, .]
[,, peakUsage, ., getUsed, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (]
[), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, .]
[., getUsed, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +]
[;, }, }, private, static, void, writeMemoryMetrics, (, PrintStream, out, ,, boolean, verbose, ,, boolean, pretty, ), {, if, (]
[., println, (, normalizeTabularColonPos, (, String, ., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (, ), ), )]
[), ;, }, }, private, static, void, writeMemoryMetrics, (, PrintStream, out, ,, boolean, verbose, ,, boolean, pretty, ), {, if]
[), ), ;, }, }, private, static, void, writeMemoryMetrics, (, PrintStream, out, ,, boolean, verbose, ,, boolean, pretty, ), {]
[., format, (, prefix, +, "-current-bytes : %d", ,, usage, ., getUsed, (, ), ), ), ), ;, }, }, private, static]
[,, usage, ., getUsed, (, ), ), ), ), ;, }, }, private, static, void, writeMemoryMetrics, (, PrintStream, out, ,]
[+, "-current-bytes : %d", ,, usage, ., getUsed, (, ), ), ), ), ;, }, }, private, static, void, writeMemoryMetrics, (, PrintStream]
[,, usage, ., getUsed, (, ), ), ), ), ;, }, }, private, static, void, writeMemoryMetrics, (, PrintStream, out, ,]
[), ), ), ;, }, }, private, static, void, writeMemoryMetrics, (, PrintStream, out, ,, boolean, verbose, ,, boolean, pretty, )]
[., getUsed, (, ), ), ), ), ;, }, }, private, static, void, writeMemoryMetrics, (, PrintStream, out, ,, boolean, verbose]
[), {, out, ., println, (, "\nMemory usage", ), ;, }, if, (, verbose, ), {, MemoryMXBean, overallMemBean, =, ManagementFactory, .]
[;, }, if, (, verbose, ), {, MemoryMXBean, overallMemBean, =, ManagementFactory, ., getMemoryMXBean, (, ), ;, MemoryUsage, usage, =, overallMemBean]
[., println, (, "\nMemory usage", ), ;, }, if, (, verbose, ), {, MemoryMXBean, overallMemBean, =, ManagementFactory, ., getMemoryMXBean, (, )]
[), ;, }, if, (, verbose, ), {, MemoryMXBean, overallMemBean, =, ManagementFactory, ., getMemoryMXBean, (, ), ;, MemoryUsage, usage, =]
[), {, MemoryMXBean, overallMemBean, =, ManagementFactory, ., getMemoryMXBean, (, ), ;, MemoryUsage, usage, =, overallMemBean, ., getHeapMemoryUsage, (, ), ;]
[;, MemoryUsage, usage, =, overallMemBean, ., getHeapMemoryUsage, (, ), ;, writeOverallMemoryUsage, (, out, ,, usage, ,, "Heap", ,, pretty, )]
[., getMemoryMXBean, (, ), ;, MemoryUsage, usage, =, overallMemBean, ., getHeapMemoryUsage, (, ), ;, writeOverallMemoryUsage, (, out, ,, usage, ,]
[;, writeOverallMemoryUsage, (, out, ,, usage, ,, "Heap", ,, pretty, ), ;, usage, =, overallMemBean, ., getNonHeapMemoryUsage, (, ), ;]
[., getHeapMemoryUsage, (, ), ;, writeOverallMemoryUsage, (, out, ,, usage, ,, "Heap", ,, pretty, ), ;, usage, =, overallMemBean, .]
[;, usage, =, overallMemBean, ., getNonHeapMemoryUsage, (, ), ;, writeOverallMemoryUsage, (, out, ,, usage, ,, "Non-heap", ,, pretty, ), ;]
[,, usage, ,, "Heap", ,, pretty, ), ;, usage, =, overallMemBean, ., getNonHeapMemoryUsage, (, ), ;, writeOverallMemoryUsage, (, out, ,]
[,, "Heap", ,, pretty, ), ;, usage, =, overallMemBean, ., getNonHeapMemoryUsage, (, ), ;, writeOverallMemoryUsage, (, out, ,, usage, ,]
[,, pretty, ), ;, usage, =, overallMemBean, ., getNonHeapMemoryUsage, (, ), ;, writeOverallMemoryUsage, (, out, ,, usage, ,, "Non-heap", ,]
[), ;, usage, =, overallMemBean, ., getNonHeapMemoryUsage, (, ), ;, writeOverallMemoryUsage, (, out, ,, usage, ,, "Non-heap", ,, pretty, )]
[=, overallMemBean, ., getNonHeapMemoryUsage, (, ), ;, writeOverallMemoryUsage, (, out, ,, usage, ,, "Non-heap", ,, pretty, ), ;, }, if]
[;, writeOverallMemoryUsage, (, out, ,, usage, ,, "Non-heap", ,, pretty, ), ;, }, if, (, verbose, ), {, List, <]
[., getNonHeapMemoryUsage, (, ), ;, writeOverallMemoryUsage, (, out, ,, usage, ,, "Non-heap", ,, pretty, ), ;, }, if, (, verbose]
[;, }, if, (, verbose, ), {, List, <, MemoryPoolMXBean, >, mpBeans, =, ManagementFactory, ., getMemoryPoolMXBeans, (, ), ;, for]
[,, usage, ,, "Non-heap", ,, pretty, ), ;, }, if, (, verbose, ), {, List, <, MemoryPoolMXBean, >, mpBeans, =]
[,, "Non-heap", ,, pretty, ), ;, }, if, (, verbose, ), {, List, <, MemoryPoolMXBean, >, mpBeans, =, ManagementFactory, .]
[,, pretty, ), ;, }, if, (, verbose, ), {, List, <, MemoryPoolMXBean, >, mpBeans, =, ManagementFactory, ., getMemoryPoolMXBeans, (]
[), ;, }, if, (, verbose, ), {, List, <, MemoryPoolMXBean, >, mpBeans, =, ManagementFactory, ., getMemoryPoolMXBeans, (, ), ;]
[), {, List, <, MemoryPoolMXBean, >, mpBeans, =, ManagementFactory, ., getMemoryPoolMXBeans, (, ), ;, for, (, MemoryPoolMXBean, mpBean, :, mpBeans]
[;, for, (, MemoryPoolMXBean, mpBean, :, mpBeans, ), {, MemoryUsage, currentUsage, =, mpBean, ., getUsage, (, ), ;, MemoryUsage, peakUsage]
[., getMemoryPoolMXBeans, (, ), ;, for, (, MemoryPoolMXBean, mpBean, :, mpBeans, ), {, MemoryUsage, currentUsage, =, mpBean, ., getUsage, (]
[), {, MemoryUsage, currentUsage, =, mpBean, ., getUsage, (, ), ;, MemoryUsage, peakUsage, =, mpBean, ., getPeakUsage, (, ), ;]
[;, MemoryUsage, peakUsage, =, mpBean, ., getPeakUsage, (, ), ;, if, (, pretty, ), {, out, ., println, (, "\tPool "]
[., getUsage, (, ), ;, MemoryUsage, peakUsage, =, mpBean, ., getPeakUsage, (, ), ;, if, (, pretty, ), {, out]
[;, if, (, pretty, ), {, out, ., println, (, "\tPool ", +, mpBean, ., getName, (, ), ), ;, writePoolMemoryUsage]
[., getPeakUsage, (, ), ;, if, (, pretty, ), {, out, ., println, (, "\tPool ", +, mpBean, ., getName, (]
[), {, out, ., println, (, "\tPool ", +, mpBean, ., getName, (, ), ), ;, writePoolMemoryUsage, (, out, ,, currentUsage]
[;, writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage, ,, null, ,, true, ), ;, }, else, {, writePoolMemoryUsage, (, out]
[., println, (, "\tPool ", +, mpBean, ., getName, (, ), ), ;, writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage, ,]
[), ;, writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage, ,, null, ,, true, ), ;, }, else, {, writePoolMemoryUsage, (]
[+, mpBean, ., getName, (, ), ), ;, writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage, ,, null, ,, true, )]
[), ;, writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage, ,, null, ,, true, ), ;, }, else, {, writePoolMemoryUsage, (]
[., getName, (, ), ), ;, writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage, ,, null, ,, true, ), ;, }]
[;, }, else, {, writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage, ,, "mem-pool-", +, normalizeName, (, mpBean, ., getName, (]
[,, currentUsage, ,, peakUsage, ,, null, ,, true, ), ;, }, else, {, writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage]
[,, peakUsage, ,, null, ,, true, ), ;, }, else, {, writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage, ,, "mem-pool-"]
[,, null, ,, true, ), ;, }, else, {, writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage, ,, "mem-pool-", +, normalizeName]
[,, true, ), ;, }, else, {, writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage, ,, "mem-pool-", +, normalizeName, (, mpBean]
[), ;, }, else, {, writePoolMemoryUsage, (, out, ,, currentUsage, ,, peakUsage, ,, "mem-pool-", +, normalizeName, (, mpBean, ., getName]
[;, }, }, }, else, {, long, available, =, 0, ;, long, current, =, 0, ;, long, peak, =, 0]
[,, currentUsage, ,, peakUsage, ,, "mem-pool-", +, normalizeName, (, mpBean, ., getName, (, ), ), ,, false, ), ;, }]
[,, peakUsage, ,, "mem-pool-", +, normalizeName, (, mpBean, ., getName, (, ), ), ,, false, ), ;, }, }, }]
[,, "mem-pool-", +, normalizeName, (, mpBean, ., getName, (, ), ), ,, false, ), ;, }, }, }, else, {]
[,, false, ), ;, }, }, }, else, {, long, available, =, 0, ;, long, current, =, 0, ;, long]
[+, normalizeName, (, mpBean, ., getName, (, ), ), ,, false, ), ;, }, }, }, else, {, long, available]
[,, false, ), ;, }, }, }, else, {, long, available, =, 0, ;, long, current, =, 0, ;, long]
[), ,, false, ), ;, }, }, }, else, {, long, available, =, 0, ;, long, current, =, 0, ;]
[., getName, (, ), ), ,, false, ), ;, }, }, }, else, {, long, available, =, 0, ;, long]
[), ;, }, }, }, else, {, long, available, =, 0, ;, long, current, =, 0, ;, long, peak, =]
[;, long, current, =, 0, ;, long, peak, =, 0, ;, List, <, MemoryPoolMXBean, >, mpBeans, =, ManagementFactory, ., getMemoryPoolMXBeans]
[;, long, peak, =, 0, ;, List, <, MemoryPoolMXBean, >, mpBeans, =, ManagementFactory, ., getMemoryPoolMXBeans, (, ), ;, for, (]
[;, List, <, MemoryPoolMXBean, >, mpBeans, =, ManagementFactory, ., getMemoryPoolMXBeans, (, ), ;, for, (, MemoryPoolMXBean, mpBean, :, mpBeans, )]
[;, for, (, MemoryPoolMXBean, mpBean, :, mpBeans, ), {, MemoryUsage, currentUsage, =, mpBean, ., getUsage, (, ), ;, available, +=]
[., getMemoryPoolMXBeans, (, ), ;, for, (, MemoryPoolMXBean, mpBean, :, mpBeans, ), {, MemoryUsage, currentUsage, =, mpBean, ., getUsage, (]
[), {, MemoryUsage, currentUsage, =, mpBean, ., getUsage, (, ), ;, available, +=, currentUsage, ., getMax, (, ), ;, current]
[;, available, +=, currentUsage, ., getMax, (, ), ;, current, +=, currentUsage, ., getUsed, (, ), ;, MemoryUsage, peakUsage, =]
[., getUsage, (, ), ;, available, +=, currentUsage, ., getMax, (, ), ;, current, +=, currentUsage, ., getUsed, (, )]
[+=, currentUsage, ., getMax, (, ), ;, current, +=, currentUsage, ., getUsed, (, ), ;, MemoryUsage, peakUsage, =, mpBean, .]
[;, current, +=, currentUsage, ., getUsed, (, ), ;, MemoryUsage, peakUsage, =, mpBean, ., getPeakUsage, (, ), ;, peak, +=]
[., getMax, (, ), ;, current, +=, currentUsage, ., getUsed, (, ), ;, MemoryUsage, peakUsage, =, mpBean, ., getPeakUsage, (]
[+=, currentUsage, ., getUsed, (, ), ;, MemoryUsage, peakUsage, =, mpBean, ., getPeakUsage, (, ), ;, peak, +=, peakUsage, .]
[;, MemoryUsage, peakUsage, =, mpBean, ., getPeakUsage, (, ), ;, peak, +=, peakUsage, ., getUsed, (, ), ;, }, MemoryUsage]
[., getUsed, (, ), ;, MemoryUsage, peakUsage, =, mpBean, ., getPeakUsage, (, ), ;, peak, +=, peakUsage, ., getUsed, (]
[;, peak, +=, peakUsage, ., getUsed, (, ), ;, }, MemoryUsage, summaryUsage, =, new, MemoryUsage, (, 0, ,, current, ,]
[., getPeakUsage, (, ), ;, peak, +=, peakUsage, ., getUsed, (, ), ;, }, MemoryUsage, summaryUsage, =, new, MemoryUsage, (]
[+=, peakUsage, ., getUsed, (, ), ;, }, MemoryUsage, summaryUsage, =, new, MemoryUsage, (, 0, ,, current, ,, current, ,]
[;, }, MemoryUsage, summaryUsage, =, new, MemoryUsage, (, 0, ,, current, ,, current, ,, available, ), ;, MemoryUsage, summaryPeakUsage, =]
[., getUsed, (, ), ;, }, MemoryUsage, summaryUsage, =, new, MemoryUsage, (, 0, ,, current, ,, current, ,, available, )]
[;, MemoryUsage, summaryPeakUsage, =, new, MemoryUsage, (, 0, ,, peak, ,, peak, ,, peak, ), ;, if, (, pretty, )]
[,, current, ,, current, ,, available, ), ;, MemoryUsage, summaryPeakUsage, =, new, MemoryUsage, (, 0, ,, peak, ,, peak, ,]
[,, current, ,, available, ), ;, MemoryUsage, summaryPeakUsage, =, new, MemoryUsage, (, 0, ,, peak, ,, peak, ,, peak, )]
[,, available, ), ;, MemoryUsage, summaryPeakUsage, =, new, MemoryUsage, (, 0, ,, peak, ,, peak, ,, peak, ), ;, if]
[), ;, MemoryUsage, summaryPeakUsage, =, new, MemoryUsage, (, 0, ,, peak, ,, peak, ,, peak, ), ;, if, (, pretty]
[;, if, (, pretty, ), {, out, ., format, (, "\tAggregate of %d memory pools\n", ,, mpBeans, ., size, (, ), ), ;, writePoolMemoryUsage]
[,, peak, ,, peak, ,, peak, ), ;, if, (, pretty, ), {, out, ., format, (, "\tAggregate of %d memory pools\n", ,, mpBeans]
[,, peak, ,, peak, ), ;, if, (, pretty, ), {, out, ., format, (, "\tAggregate of %d memory pools\n", ,, mpBeans, ., size]
[,, peak, ), ;, if, (, pretty, ), {, out, ., format, (, "\tAggregate of %d memory pools\n", ,, mpBeans, ., size, (, )]
[), ;, if, (, pretty, ), {, out, ., format, (, "\tAggregate of %d memory pools\n", ,, mpBeans, ., size, (, ), ), ;]
[), {, out, ., format, (, "\tAggregate of %d memory pools\n", ,, mpBeans, ., size, (, ), ), ;, writePoolMemoryUsage, (, out, ,, summaryUsage]
[;, writePoolMemoryUsage, (, out, ,, summaryUsage, ,, summaryPeakUsage, ,, null, ,, true, ), ;, }, else, {, writePoolMemoryUsage, (, out]
[., format, (, "\tAggregate of %d memory pools\n", ,, mpBeans, ., size, (, ), ), ;, writePoolMemoryUsage, (, out, ,, summaryUsage, ,, summaryPeakUsage, ,]
[,, mpBeans, ., size, (, ), ), ;, writePoolMemoryUsage, (, out, ,, summaryUsage, ,, summaryPeakUsage, ,, null, ,, true, )]
[), ;, writePoolMemoryUsage, (, out, ,, summaryUsage, ,, summaryPeakUsage, ,, null, ,, true, ), ;, }, else, {, writePoolMemoryUsage, (]
[., size, (, ), ), ;, writePoolMemoryUsage, (, out, ,, summaryUsage, ,, summaryPeakUsage, ,, null, ,, true, ), ;, }]
[;, }, else, {, writePoolMemoryUsage, (, out, ,, summaryUsage, ,, summaryPeakUsage, ,, "mem", ,, false, ), ;, }, }, }]
[,, summaryUsage, ,, summaryPeakUsage, ,, null, ,, true, ), ;, }, else, {, writePoolMemoryUsage, (, out, ,, summaryUsage, ,, summaryPeakUsage]
[,, summaryPeakUsage, ,, null, ,, true, ), ;, }, else, {, writePoolMemoryUsage, (, out, ,, summaryUsage, ,, summaryPeakUsage, ,, "mem"]
[,, null, ,, true, ), ;, }, else, {, writePoolMemoryUsage, (, out, ,, summaryUsage, ,, summaryPeakUsage, ,, "mem", ,, false]
[,, true, ), ;, }, else, {, writePoolMemoryUsage, (, out, ,, summaryUsage, ,, summaryPeakUsage, ,, "mem", ,, false, ), ;]
[), ;, }, else, {, writePoolMemoryUsage, (, out, ,, summaryUsage, ,, summaryPeakUsage, ,, "mem", ,, false, ), ;, }, }]
[;, }, }, }, private, static, void, writeGarbageCollectionStats, (, PrintStream, out, ,, boolean, verbose, ,, boolean, pretty, ), {, List]
[,, summaryUsage, ,, summaryPeakUsage, ,, "mem", ,, false, ), ;, }, }, }, private, static, void, writeGarbageCollectionStats, (, PrintStream, out]
[,, summaryPeakUsage, ,, "mem", ,, false, ), ;, }, }, }, private, static, void, writeGarbageCollectionStats, (, PrintStream, out, ,, boolean]
[,, "mem", ,, false, ), ;, }, }, }, private, static, void, writeGarbageCollectionStats, (, PrintStream, out, ,, boolean, verbose, ,]
[,, false, ), ;, }, }, }, private, static, void, writeGarbageCollectionStats, (, PrintStream, out, ,, boolean, verbose, ,, boolean, pretty]
[), ;, }, }, }, private, static, void, writeGarbageCollectionStats, (, PrintStream, out, ,, boolean, verbose, ,, boolean, pretty, ), {]
[;, if, (, verbose, ), {, if, (, pretty, ), {, out, ., println, (, "\nGarbage collection stats", ), ;, for, (]
[., getGarbageCollectorMXBeans, (, ), ;, if, (, verbose, ), {, if, (, pretty, ), {, out, ., println, (, "\nGarbage collection stats"]
[), {, if, (, pretty, ), {, out, ., println, (, "\nGarbage collection stats", ), ;, for, (, GarbageCollectorMXBean, gcBean, :, gcBeans]
[), {, out, ., println, (, "\nGarbage collection stats", ), ;, for, (, GarbageCollectorMXBean, gcBean, :, gcBeans, ), {, out, ., println]
[;, for, (, GarbageCollectorMXBean, gcBean, :, gcBeans, ), {, out, ., println, (, "\tCollector ", +, gcBean, ., getName, (, )]
[., println, (, "\nGarbage collection stats", ), ;, for, (, GarbageCollectorMXBean, gcBean, :, gcBeans, ), {, out, ., println, (, "\tCollector ", +]
[), ;, for, (, GarbageCollectorMXBean, gcBean, :, gcBeans, ), {, out, ., println, (, "\tCollector ", +, gcBean, ., getName, (]
[), {, out, ., println, (, "\tCollector ", +, gcBean, ., getName, (, ), ), ;, out, ., format, (, "\t\tcollection count   : %d\n"]
[;, out, ., format, (, "\t\tcollection count   : %d\n", ,, gcBean, ., getCollectionCount, (, ), ), ;, out, ., format, (, "\t\tcollection time    : %d ms\n", ,]
[., println, (, "\tCollector ", +, gcBean, ., getName, (, ), ), ;, out, ., format, (, "\t\tcollection count   : %d\n", ,, gcBean, .]
[), ;, out, ., format, (, "\t\tcollection count   : %d\n", ,, gcBean, ., getCollectionCount, (, ), ), ;, out, ., format, (, "\t\tcollection time    : %d ms\n"]
[+, gcBean, ., getName, (, ), ), ;, out, ., format, (, "\t\tcollection count   : %d\n", ,, gcBean, ., getCollectionCount, (, ), )]
[), ;, out, ., format, (, "\t\tcollection count   : %d\n", ,, gcBean, ., getCollectionCount, (, ), ), ;, out, ., format, (, "\t\tcollection time    : %d ms\n"]
[., getName, (, ), ), ;, out, ., format, (, "\t\tcollection count   : %d\n", ,, gcBean, ., getCollectionCount, (, ), ), ;, out]
[;, out, ., format, (, "\t\tcollection time    : %d ms\n", ,, gcBean, ., getCollectionTime, (, ), ), ;, }, }, else, {, for, (]
[., format, (, "\t\tcollection count   : %d\n", ,, gcBean, ., getCollectionCount, (, ), ), ;, out, ., format, (, "\t\tcollection time    : %d ms\n", ,, gcBean, .]
[,, gcBean, ., getCollectionCount, (, ), ), ;, out, ., format, (, "\t\tcollection time    : %d ms\n", ,, gcBean, ., getCollectionTime, (, ), )]
[), ;, out, ., format, (, "\t\tcollection time    : %d ms\n", ,, gcBean, ., getCollectionTime, (, ), ), ;, }, }, else, {, for]
[., getCollectionCount, (, ), ), ;, out, ., format, (, "\t\tcollection time    : %d ms\n", ,, gcBean, ., getCollectionTime, (, ), ), ;, }]
[;, }, }, else, {, for, (, GarbageCollectorMXBean, gcBean, :, gcBeans, ), {, String, name, =, normalizeName, (, gcBean, .]
[., format, (, "\t\tcollection time    : %d ms\n", ,, gcBean, ., getCollectionTime, (, ), ), ;, }, }, else, {, for, (, GarbageCollectorMXBean, gcBean]
[,, gcBean, ., getCollectionTime, (, ), ), ;, }, }, else, {, for, (, GarbageCollectorMXBean, gcBean, :, gcBeans, ), {]
[), ;, }, }, else, {, for, (, GarbageCollectorMXBean, gcBean, :, gcBeans, ), {, String, name, =, normalizeName, (, gcBean]
[., getCollectionTime, (, ), ), ;, }, }, else, {, for, (, GarbageCollectorMXBean, gcBean, :, gcBeans, ), {, String, name]
[), {, String, name, =, normalizeName, (, gcBean, ., getName, (, ), ), ;, out, ., println, (, normalizeTabularColonPos, (]
[;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-count : %d", ,, gcBean, ., getCollectionCount]
[), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-count : %d", ,, gcBean, .]
[., getName, (, ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +]
[;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, gcBean, ., getCollectionTime]
[., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-count : %d", ,, gcBean, ., getCollectionCount, (, )]
[), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, gcBean, .]
[), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, gcBean]
[., format, (, "gc-", +, name, +, "-collection-count : %d", ,, gcBean, ., getCollectionCount, (, ), ), ), ), ;, out, .]
[,, gcBean, ., getCollectionCount, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (]
[+, "-collection-count : %d", ,, gcBean, ., getCollectionCount, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, .]
[+, name, +, "-collection-count : %d", ,, gcBean, ., getCollectionCount, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (]
[+, "-collection-count : %d", ,, gcBean, ., getCollectionCount, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, .]
[,, gcBean, ., getCollectionCount, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (]
[), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,]
[., getCollectionCount, (, ), ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +]
[;, }, }, }, else, {, long, collectionCount, =, 0, ;, long, collectionTime, =, 0, ;, int, collectorCount, =, gcBeans]
[., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, gcBean, ., getCollectionTime, (, )]
[), ;, }, }, }, else, {, long, collectionCount, =, 0, ;, long, collectionTime, =, 0, ;, int, collectorCount, =]
[), ), ;, }, }, }, else, {, long, collectionCount, =, 0, ;, long, collectionTime, =, 0, ;, int, collectorCount]
[., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, gcBean, ., getCollectionTime, (, ), ), ), ), ;, }, }]
[,, gcBean, ., getCollectionTime, (, ), ), ), ), ;, }, }, }, else, {, long, collectionCount, =, 0, ;]
[+, "-collection-time-ms : %d", ,, gcBean, ., getCollectionTime, (, ), ), ), ), ;, }, }, }, else, {, long, collectionCount, =]
[+, name, +, "-collection-time-ms : %d", ,, gcBean, ., getCollectionTime, (, ), ), ), ), ;, }, }, }, else, {, long]
[+, "-collection-time-ms : %d", ,, gcBean, ., getCollectionTime, (, ), ), ), ), ;, }, }, }, else, {, long, collectionCount, =]
[,, gcBean, ., getCollectionTime, (, ), ), ), ), ;, }, }, }, else, {, long, collectionCount, =, 0, ;]
[), ), ), ;, }, }, }, else, {, long, collectionCount, =, 0, ;, long, collectionTime, =, 0, ;, int]
[., getCollectionTime, (, ), ), ), ), ;, }, }, }, else, {, long, collectionCount, =, 0, ;, long, collectionTime]
[;, long, collectionTime, =, 0, ;, int, collectorCount, =, gcBeans, ., size, (, ), ;, for, (, GarbageCollectorMXBean, gcBean, :]
[;, int, collectorCount, =, gcBeans, ., size, (, ), ;, for, (, GarbageCollectorMXBean, gcBean, :, gcBeans, ), {, collectionCount, +=]
[;, for, (, GarbageCollectorMXBean, gcBean, :, gcBeans, ), {, collectionCount, +=, gcBean, ., getCollectionCount, (, ), ;, collectionTime, +=, gcBean]
[., size, (, ), ;, for, (, GarbageCollectorMXBean, gcBean, :, gcBeans, ), {, collectionCount, +=, gcBean, ., getCollectionCount, (, )]
[), {, collectionCount, +=, gcBean, ., getCollectionCount, (, ), ;, collectionTime, +=, gcBean, ., getCollectionTime, (, ), ;, }, if]
[+=, gcBean, ., getCollectionCount, (, ), ;, collectionTime, +=, gcBean, ., getCollectionTime, (, ), ;, }, if, (, pretty, )]
[;, collectionTime, +=, gcBean, ., getCollectionTime, (, ), ;, }, if, (, pretty, ), {, out, ., println, (, "\nGarbage collection stats"]
[., getCollectionCount, (, ), ;, collectionTime, +=, gcBean, ., getCollectionTime, (, ), ;, }, if, (, pretty, ), {, out]
[+=, gcBean, ., getCollectionTime, (, ), ;, }, if, (, pretty, ), {, out, ., println, (, "\nGarbage collection stats", ), ;]
[;, }, if, (, pretty, ), {, out, ., println, (, "\nGarbage collection stats", ), ;, out, ., format, (, "\tAggregate of %d collectors\n", ,]
[., getCollectionTime, (, ), ;, }, if, (, pretty, ), {, out, ., println, (, "\nGarbage collection stats", ), ;, out, .]
[), {, out, ., println, (, "\nGarbage collection stats", ), ;, out, ., format, (, "\tAggregate of %d collectors\n", ,, collectorCount, ), ;, out, .]
[;, out, ., format, (, "\tAggregate of %d collectors\n", ,, collectorCount, ), ;, out, ., format, (, "\t\tcollection count   : %d\n", ,, collectionCount, ), ;, out]
[., println, (, "\nGarbage collection stats", ), ;, out, ., format, (, "\tAggregate of %d collectors\n", ,, collectorCount, ), ;, out, ., format, (, "\t\tcollection count   : %d\n"]
[), ;, out, ., format, (, "\tAggregate of %d collectors\n", ,, collectorCount, ), ;, out, ., format, (, "\t\tcollection count   : %d\n", ,, collectionCount, ), ;]
[;, out, ., format, (, "\t\tcollection count   : %d\n", ,, collectionCount, ), ;, out, ., format, (, "\t\tcollection time    : %d ms\n", ,, collectionTime, ), ;, }]
[., format, (, "\tAggregate of %d collectors\n", ,, collectorCount, ), ;, out, ., format, (, "\t\tcollection count   : %d\n", ,, collectionCount, ), ;, out, ., format]
[,, collectorCount, ), ;, out, ., format, (, "\t\tcollection count   : %d\n", ,, collectionCount, ), ;, out, ., format, (, "\t\tcollection time    : %d ms\n", ,, collectionTime]
[), ;, out, ., format, (, "\t\tcollection count   : %d\n", ,, collectionCount, ), ;, out, ., format, (, "\t\tcollection time    : %d ms\n", ,, collectionTime, ), ;]
[;, out, ., format, (, "\t\tcollection time    : %d ms\n", ,, collectionTime, ), ;, }, else, {, String, name, =, normalizeName, (, "aggregate", )]
[., format, (, "\t\tcollection count   : %d\n", ,, collectionCount, ), ;, out, ., format, (, "\t\tcollection time    : %d ms\n", ,, collectionTime, ), ;, }, else, {]
[,, collectionCount, ), ;, out, ., format, (, "\t\tcollection time    : %d ms\n", ,, collectionTime, ), ;, }, else, {, String, name, =, normalizeName]
[), ;, out, ., format, (, "\t\tcollection time    : %d ms\n", ,, collectionTime, ), ;, }, else, {, String, name, =, normalizeName, (, "aggregate"]
[;, }, else, {, String, name, =, normalizeName, (, "aggregate", ), ;, out, ., println, (, normalizeTabularColonPos, (, String, .]
[., format, (, "\t\tcollection time    : %d ms\n", ,, collectionTime, ), ;, }, else, {, String, name, =, normalizeName, (, "aggregate", ), ;, out]
[,, collectionTime, ), ;, }, else, {, String, name, =, normalizeName, (, "aggregate", ), ;, out, ., println, (, normalizeTabularColonPos]
[), ;, }, else, {, String, name, =, normalizeName, (, "aggregate", ), ;, out, ., println, (, normalizeTabularColonPos, (, String]
[;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-count : %d", ,, collectionCount, ), )]
[), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-count : %d", ,, collectionCount, )]
[;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, collectionTime, ), )]
[., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-count : %d", ,, collectionCount, ), ), ), ;]
[), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, collectionTime, )]
[), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, collectionTime]
[., format, (, "gc-", +, name, +, "-collection-count : %d", ,, collectionCount, ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (]
[,, collectionCount, ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +]
[+, "-collection-count : %d", ,, collectionCount, ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +]
[+, name, +, "-collection-count : %d", ,, collectionCount, ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (]
[+, "-collection-count : %d", ,, collectionCount, ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +]
[,, collectionCount, ), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +]
[), ), ), ;, out, ., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,]
[;, }, }, }, private, static, String, normalizeName, (, String, name, ), {, return, name, ., replace, (, " ", ,]
[., println, (, normalizeTabularColonPos, (, String, ., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, collectionTime, ), ), ), ;]
[), ;, }, }, }, private, static, String, normalizeName, (, String, name, ), {, return, name, ., replace, (, " "]
[), ), ;, }, }, }, private, static, String, normalizeName, (, String, name, ), {, return, name, ., replace, (]
[., format, (, "gc-", +, name, +, "-collection-time-ms : %d", ,, collectionTime, ), ), ), ;, }, }, }, private, static, String]
[,, collectionTime, ), ), ), ;, }, }, }, private, static, String, normalizeName, (, String, name, ), {, return, name]
[+, "-collection-time-ms : %d", ,, collectionTime, ), ), ), ;, }, }, }, private, static, String, normalizeName, (, String, name, ), {]
[+, name, +, "-collection-time-ms : %d", ,, collectionTime, ), ), ), ;, }, }, }, private, static, String, normalizeName, (, String, name]
[+, "-collection-time-ms : %d", ,, collectionTime, ), ), ), ;, }, }, }, private, static, String, normalizeName, (, String, name, ), {]
[,, collectionTime, ), ), ), ;, }, }, }, private, static, String, normalizeName, (, String, name, ), {, return, name]
[), ), ), ;, }, }, }, private, static, String, normalizeName, (, String, name, ), {, return, name, ., replace]
[;, }, private, static, String, normalizeTabularColonPos, (, String, string, ), {, StringBuilder, sb, =, new, StringBuilder, (, string, ), ;]
[., toLowerCase, (, ), ;, }, private, static, String, normalizeTabularColonPos, (, String, string, ), {, StringBuilder, sb, =, new, StringBuilder]
[., replace, (, " ", ,, "_", ), ., toLowerCase, (, ), ;, }, private, static, String, normalizeTabularColonPos, (, String, string]
[,, "_", ), ., toLowerCase, (, ), ;, }, private, static, String, normalizeTabularColonPos, (, String, string, ), {, StringBuilder, sb]
[), ., toLowerCase, (, ), ;, }, private, static, String, normalizeTabularColonPos, (, String, string, ), {, StringBuilder, sb, =, new]
[;, int, index, =, sb, ., indexOf, (, ":", ), ;, for, (, ;, index, <, TABULAR_COLON_POS, ;, ++, index]
[), ;, int, index, =, sb, ., indexOf, (, ":", ), ;, for, (, ;, index, <, TABULAR_COLON_POS, ;, ++]
[;, for, (, ;, index, <, TABULAR_COLON_POS, ;, ++, index, ), {, sb, ., insert, (, index, ,, ' ', )]
[., indexOf, (, ":", ), ;, for, (, ;, index, <, TABULAR_COLON_POS, ;, ++, index, ), {, sb, ., insert]
[), ;, for, (, ;, index, <, TABULAR_COLON_POS, ;, ++, index, ), {, sb, ., insert, (, index, ,, ' ']
[;, ++, index, ), {, sb, ., insert, (, index, ,, ' ', ), ;, }, return, sb, ., toString, (]
[<, TABULAR_COLON_POS, ;, ++, index, ), {, sb, ., insert, (, index, ,, ' ', ), ;, }, return, sb, .]
[;, ++, index, ), {, sb, ., insert, (, index, ,, ' ', ), ;, }, return, sb, ., toString, (]
[), {, sb, ., insert, (, index, ,, ' ', ), ;, }, return, sb, ., toString, (, ), ;, }]
[), {, sb, ., insert, (, index, ,, ' ', ), ;, }, return, sb, ., toString, (, ), ;, }]
[;, }, return, sb, ., toString, (, ), ;, }, private, static, String, formatBytes, (, long, numBytes, ), {, if]
[., insert, (, index, ,, ' ', ), ;, }, return, sb, ., toString, (, ), ;, }, private, static, String]
[,, ' ', ), ;, }, return, sb, ., toString, (, ), ;, }, private, static, String, formatBytes, (, long, numBytes]
[), ;, }, return, sb, ., toString, (, ), ;, }, private, static, String, formatBytes, (, long, numBytes, ), {]
[;, }, private, static, String, formatBytes, (, long, numBytes, ), {, if, (, numBytes, <, ONE_KILO_BYTE, ), {, return, String]
[., toString, (, ), ;, }, private, static, String, formatBytes, (, long, numBytes, ), {, if, (, numBytes, <, ONE_KILO_BYTE]
[), {, return, String, ., format, (, "%d B", ,, numBytes, ), ;, }, else, if, (, numBytes, <, ONE_MEGA_BYTE, )]
[<, ONE_KILO_BYTE, ), {, return, String, ., format, (, "%d B", ,, numBytes, ), ;, }, else, if, (, numBytes, <]
[), {, return, String, ., format, (, "%d B", ,, numBytes, ), ;, }, else, if, (, numBytes, <, ONE_MEGA_BYTE, )]
[;, }, else, if, (, numBytes, <, ONE_MEGA_BYTE, ), {, return, String, ., format, (, "%d KB", ,, numBytes, /, ONE_KILO_BYTE]
[., format, (, "%d B", ,, numBytes, ), ;, }, else, if, (, numBytes, <, ONE_MEGA_BYTE, ), {, return, String, .]
[,, numBytes, ), ;, }, else, if, (, numBytes, <, ONE_MEGA_BYTE, ), {, return, String, ., format, (, "%d KB", ,]
[), ;, }, else, if, (, numBytes, <, ONE_MEGA_BYTE, ), {, return, String, ., format, (, "%d KB", ,, numBytes, /]
[), {, return, String, ., format, (, "%d KB", ,, numBytes, /, ONE_KILO_BYTE, ), ;, }, else, if, (, numBytes, <]
[<, ONE_MEGA_BYTE, ), {, return, String, ., format, (, "%d KB", ,, numBytes, /, ONE_KILO_BYTE, ), ;, }, else, if, (]
[), {, return, String, ., format, (, "%d KB", ,, numBytes, /, ONE_KILO_BYTE, ), ;, }, else, if, (, numBytes, <]
[;, }, else, if, (, numBytes, <, ONE_GIGA_BYTE, ), {, return, String, ., format, (, "%d MB", ,, numBytes, /, ONE_MEGA_BYTE]
[., format, (, "%d KB", ,, numBytes, /, ONE_KILO_BYTE, ), ;, }, else, if, (, numBytes, <, ONE_GIGA_BYTE, ), {, return]
[,, numBytes, /, ONE_KILO_BYTE, ), ;, }, else, if, (, numBytes, <, ONE_GIGA_BYTE, ), {, return, String, ., format, (]
[), ;, }, else, if, (, numBytes, <, ONE_GIGA_BYTE, ), {, return, String, ., format, (, "%d MB", ,, numBytes, /]
[/, ONE_KILO_BYTE, ), ;, }, else, if, (, numBytes, <, ONE_GIGA_BYTE, ), {, return, String, ., format, (, "%d MB", ,]
[), ;, }, else, if, (, numBytes, <, ONE_GIGA_BYTE, ), {, return, String, ., format, (, "%d MB", ,, numBytes, /]
[), {, return, String, ., format, (, "%d MB", ,, numBytes, /, ONE_MEGA_BYTE, ), ;, }, else, {, return, String, .]
[<, ONE_GIGA_BYTE, ), {, return, String, ., format, (, "%d MB", ,, numBytes, /, ONE_MEGA_BYTE, ), ;, }, else, {, return]
[), {, return, String, ., format, (, "%d MB", ,, numBytes, /, ONE_MEGA_BYTE, ), ;, }, else, {, return, String, .]
[;, }, else, {, return, String, ., format, (, "%d GB", ,, numBytes, /, ONE_GIGA_BYTE, ), ;, }, }, }]
[., format, (, "%d MB", ,, numBytes, /, ONE_MEGA_BYTE, ), ;, }, else, {, return, String, ., format, (, "%d GB", ,]
[,, numBytes, /, ONE_MEGA_BYTE, ), ;, }, else, {, return, String, ., format, (, "%d GB", ,, numBytes, /, ONE_GIGA_BYTE, )]
[), ;, }, else, {, return, String, ., format, (, "%d GB", ,, numBytes, /, ONE_GIGA_BYTE, ), ;, }, }, }]
[/, ONE_MEGA_BYTE, ), ;, }, else, {, return, String, ., format, (, "%d GB", ,, numBytes, /, ONE_GIGA_BYTE, ), ;, }]
[), ;, }, else, {, return, String, ., format, (, "%d GB", ,, numBytes, /, ONE_GIGA_BYTE, ), ;, }, }, }]
[;, }, }, }]
[., format, (, "%d GB", ,, numBytes, /, ONE_GIGA_BYTE, ), ;, }, }, }]
[,, numBytes, /, ONE_GIGA_BYTE, ), ;, }, }, }]
[), ;, }, }, }]
[/, ONE_GIGA_BYTE, ), ;, }, }, }]
[), ;, }, }, }]
