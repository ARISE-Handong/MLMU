[java, ., util, ., Arrays, ;, public, class, SourceFile, implements, StaticSourceFile, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[=, 1L, ;, public, interface, Generator, {, public, String, getCode, (, ), ;, }, private, static, final, int, SOURCE_EXCERPT_REGION_LENGTH, =]
[), ;, }, private, static, final, int, SOURCE_EXCERPT_REGION_LENGTH, =, 5, ;, private, final, String, fileName, ;, private, boolean, isExternFile, =]
[int, SOURCE_EXCERPT_REGION_LENGTH, =, 5, ;, private, final, String, fileName, ;, private, boolean, isExternFile, =, false, ;, private, String, originalPath, =]
[fileName, ;, private, boolean, isExternFile, =, false, ;, private, String, originalPath, =, null, ;, private, int, [, ], lineOffsets, =]
[false, ;, private, String, originalPath, =, null, ;, private, int, [, ], lineOffsets, =, null, ;, private, String, code, =]
[], lineOffsets, =, null, ;, private, String, code, =, null, ;, public, SourceFile, (, String, fileName, ), {, if, (]
[], lineOffsets, =, null, ;, private, String, code, =, null, ;, public, SourceFile, (, String, fileName, ), {, if, (]
[], lineOffsets, =, null, ;, private, String, code, =, null, ;, public, SourceFile, (, String, fileName, ), {, if, (]
[=, null, ;, private, String, code, =, null, ;, public, SourceFile, (, String, fileName, ), {, if, (, fileName, ==]
[;, private, String, code, =, null, ;, public, SourceFile, (, String, fileName, ), {, if, (, fileName, ==, null, ||]
[;, private, String, code, =, null, ;, public, SourceFile, (, String, fileName, ), {, if, (, fileName, ==, null, ||]
[SourceFile, (, String, fileName, ), {, if, (, fileName, ==, null, ||, fileName, ., isEmpty, (, ), ), {, throw]
[fileName, ), {, if, (, fileName, ==, null, ||, fileName, ., isEmpty, (, ), ), {, throw, new, IllegalArgumentException, (]
[(, fileName, ==, null, ||, fileName, ., isEmpty, (, ), ), {, throw, new, IllegalArgumentException, (, "a source must have a name", ), ;, }]
[(, fileName, ==, null, ||, fileName, ., isEmpty, (, ), ), {, throw, new, IllegalArgumentException, (, "a source must have a name", ), ;, }]
[||, fileName, ., isEmpty, (, ), ), {, throw, new, IllegalArgumentException, (, "a source must have a name", ), ;, }, this, ., fileName, =]
[), ;, }, this, ., fileName, =, fileName, ;, }, @, Override, public, int, getLineOffset, (, int, lineno, ), {]
[=, fileName, ;, }, @, Override, public, int, getLineOffset, (, int, lineno, ), {, findLineOffsets, (, ), ;, if, (]
[=, fileName, ;, }, @, Override, public, int, getLineOffset, (, int, lineno, ), {, findLineOffsets, (, ), ;, if, (]
[=, fileName, ;, }, @, Override, public, int, getLineOffset, (, int, lineno, ), {, findLineOffsets, (, ), ;, if, (]
[;, }, @, Override, public, int, getLineOffset, (, int, lineno, ), {, findLineOffsets, (, ), ;, if, (, lineno, <]
[@, Override, public, int, getLineOffset, (, int, lineno, ), {, findLineOffsets, (, ), ;, if, (, lineno, <, 1, ||]
[@, Override, public, int, getLineOffset, (, int, lineno, ), {, findLineOffsets, (, ), ;, if, (, lineno, <, 1, ||]
[public, int, getLineOffset, (, int, lineno, ), {, findLineOffsets, (, ), ;, if, (, lineno, <, 1, ||, lineno, >]
[public, int, getLineOffset, (, int, lineno, ), {, findLineOffsets, (, ), ;, if, (, lineno, <, 1, ||, lineno, >]
[), {, findLineOffsets, (, ), ;, if, (, lineno, <, 1, ||, lineno, >, lineOffsets, ., length, ), {, throw]
[(, ), ;, if, (, lineno, <, 1, ||, lineno, >, lineOffsets, ., length, ), {, throw, new, IllegalArgumentException, (]
[(, ), ;, if, (, lineno, <, 1, ||, lineno, >, lineOffsets, ., length, ), {, throw, new, IllegalArgumentException, (]
[(, ), ;, if, (, lineno, <, 1, ||, lineno, >, lineOffsets, ., length, ), {, throw, new, IllegalArgumentException, (]
[(, ), ;, if, (, lineno, <, 1, ||, lineno, >, lineOffsets, ., length, ), {, throw, new, IllegalArgumentException, (]
[;, if, (, lineno, <, 1, ||, lineno, >, lineOffsets, ., length, ), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +]
[;, if, (, lineno, <, 1, ||, lineno, >, lineOffsets, ., length, ), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +]
[<, 1, ||, lineno, >, lineOffsets, ., length, ), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +]
[||, lineno, >, lineOffsets, ., length, ), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +]
[length, ), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +, lineno, ), ;, }, return]
[length, ), {, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +, lineno, ), ;, }, return]
[{, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +, lineno, ), ;, }, return, lineOffsets, []
[{, throw, new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +, lineno, ), ;, }, return, lineOffsets, []
[new, IllegalArgumentException, (, "Expected line number between 1 and ", +, lineOffsets, ., length, +, "\nActual: ", +, lineno, ), ;, }, return, lineOffsets, [, lineno, -]
["\nActual: ", +, lineno, ), ;, }, return, lineOffsets, [, lineno, -, 1, ], ;, }, int, getNumLines, (, ), {]
[}, return, lineOffsets, [, lineno, -, 1, ], ;, }, int, getNumLines, (, ), {, findLineOffsets, (, ), ;, return]
[}, return, lineOffsets, [, lineno, -, 1, ], ;, }, int, getNumLines, (, ), {, findLineOffsets, (, ), ;, return]
[), {, findLineOffsets, (, ), ;, return, lineOffsets, ., length, ;, }, private, void, findLineOffsets, (, ), {, if, (]
[), {, findLineOffsets, (, ), ;, return, lineOffsets, ., length, ;, }, private, void, findLineOffsets, (, ), {, if, (]
[findLineOffsets, (, ), ;, return, lineOffsets, ., length, ;, }, private, void, findLineOffsets, (, ), {, if, (, lineOffsets, !=]
[(, ), {, if, (, lineOffsets, !=, null, ), {, return, ;, }, try, {, String, [, ], sourceLines, =]
[(, ), {, if, (, lineOffsets, !=, null, ), {, return, ;, }, try, {, String, [, ], sourceLines, =]
[!=, null, ), {, return, ;, }, try, {, String, [, ], sourceLines, =, getCode, (, ), ., split, (]
[{, return, ;, }, try, {, String, [, ], sourceLines, =, getCode, (, ), ., split, (, "\n", ), ;]
[;, }, try, {, String, [, ], sourceLines, =, getCode, (, ), ., split, (, "\n", ), ;, lineOffsets, =]
[{, String, [, ], sourceLines, =, getCode, (, ), ., split, (, "\n", ), ;, lineOffsets, =, new, int, []
[{, String, [, ], sourceLines, =, getCode, (, ), ., split, (, "\n", ), ;, lineOffsets, =, new, int, []
[split, (, "\n", ), ;, lineOffsets, =, new, int, [, sourceLines, ., length, ], ;, for, (, int, ii, =]
["\n", ), ;, lineOffsets, =, new, int, [, sourceLines, ., length, ], ;, for, (, int, ii, =, 1, ;]
["\n", ), ;, lineOffsets, =, new, int, [, sourceLines, ., length, ], ;, for, (, int, ii, =, 1, ;]
[;, lineOffsets, =, new, int, [, sourceLines, ., length, ], ;, for, (, int, ii, =, 1, ;, ii, <]
[;, lineOffsets, =, new, int, [, sourceLines, ., length, ], ;, for, (, int, ii, =, 1, ;, ii, <]
[int, [, sourceLines, ., length, ], ;, for, (, int, ii, =, 1, ;, ii, <, sourceLines, ., length, ;]
[[, sourceLines, ., length, ], ;, for, (, int, ii, =, 1, ;, ii, <, sourceLines, ., length, ;, ++]
[length, ], ;, for, (, int, ii, =, 1, ;, ii, <, sourceLines, ., length, ;, ++, ii, ), {]
[length, ], ;, for, (, int, ii, =, 1, ;, ii, <, sourceLines, ., length, ;, ++, ii, ), {]
[;, for, (, int, ii, =, 1, ;, ii, <, sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, []
[int, ii, =, 1, ;, ii, <, sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =]
[int, ii, =, 1, ;, ii, <, sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =]
[int, ii, =, 1, ;, ii, <, sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =]
[int, ii, =, 1, ;, ii, <, sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =]
[=, 1, ;, ii, <, sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, []
[=, 1, ;, ii, <, sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, []
[;, ii, <, sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -]
[sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -, 1, ], +]
[sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -, 1, ], +]
[sourceLines, ., length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -, 1, ], +]
[length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -, 1, ], +, sourceLines, []
[length, ;, ++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -, 1, ], +, sourceLines, []
[++, ii, ), {, lineOffsets, [, ii, ], =, lineOffsets, [, ii, -, 1, ], +, sourceLines, [, ii, -]
[], =, lineOffsets, [, ii, -, 1, ], +, sourceLines, [, ii, -, 1, ], ., length, (, ), +]
[[, ii, -, 1, ], ., length, (, ), +, 1, ;, }, }, catch, (, IOException, e, ), {]
[-, 1, ], ., length, (, ), +, 1, ;, }, }, catch, (, IOException, e, ), {, lineOffsets, =]
[., length, (, ), +, 1, ;, }, }, catch, (, IOException, e, ), {, lineOffsets, =, new, int, []
[), +, 1, ;, }, }, catch, (, IOException, e, ), {, lineOffsets, =, new, int, [, 1, ], ;]
[), +, 1, ;, }, }, catch, (, IOException, e, ), {, lineOffsets, =, new, int, [, 1, ], ;]
[1, ;, }, }, catch, (, IOException, e, ), {, lineOffsets, =, new, int, [, 1, ], ;, lineOffsets, []
[}, catch, (, IOException, e, ), {, lineOffsets, =, new, int, [, 1, ], ;, lineOffsets, [, 0, ], =]
[], ;, lineOffsets, [, 0, ], =, 0, ;, }, }, public, String, getCode, (, ), throws, IOException, {, return]
[String, getCode, (, ), throws, IOException, {, return, code, ;, }, public, Reader, getCodeReader, (, ), throws, IOException, {, return]
[), throws, IOException, {, return, code, ;, }, public, Reader, getCodeReader, (, ), throws, IOException, {, return, new, StringReader, (]
[IOException, {, return, new, StringReader, (, getCode, (, ), ), ;, }, @, VisibleForTesting, String, getCodeNoCache, (, ), {, return]
[}, @, VisibleForTesting, String, getCodeNoCache, (, ), {, return, code, ;, }, private, void, setCode, (, String, sourceCode, ), {]
[VisibleForTesting, String, getCodeNoCache, (, ), {, return, code, ;, }, private, void, setCode, (, String, sourceCode, ), {, code, =]
[private, void, setCode, (, String, sourceCode, ), {, code, =, sourceCode, ;, }, public, String, getOriginalPath, (, ), {, return]
[private, void, setCode, (, String, sourceCode, ), {, code, =, sourceCode, ;, }, public, String, getOriginalPath, (, ), {, return]
[private, void, setCode, (, String, sourceCode, ), {, code, =, sourceCode, ;, }, public, String, getOriginalPath, (, ), {, return]
[setCode, (, String, sourceCode, ), {, code, =, sourceCode, ;, }, public, String, getOriginalPath, (, ), {, return, originalPath, !=]
[String, sourceCode, ), {, code, =, sourceCode, ;, }, public, String, getOriginalPath, (, ), {, return, originalPath, !=, null, ?]
[), {, code, =, sourceCode, ;, }, public, String, getOriginalPath, (, ), {, return, originalPath, !=, null, ?, originalPath, :]
[), {, return, originalPath, !=, null, ?, originalPath, :, fileName, ;, }, public, void, setOriginalPath, (, String, originalPath, ), {]
[), {, return, originalPath, !=, null, ?, originalPath, :, fileName, ;, }, public, void, setOriginalPath, (, String, originalPath, ), {]
[!=, null, ?, originalPath, :, fileName, ;, }, public, void, setOriginalPath, (, String, originalPath, ), {, this, ., originalPath, =]
[this, ., originalPath, =, originalPath, ;, }, public, void, clearCachedSource, (, ), {, }, boolean, hasSourceInMemory, (, ), {, return]
[this, ., originalPath, =, originalPath, ;, }, public, void, clearCachedSource, (, ), {, }, boolean, hasSourceInMemory, (, ), {, return]
[originalPath, =, originalPath, ;, }, public, void, clearCachedSource, (, ), {, }, boolean, hasSourceInMemory, (, ), {, return, code, !=]
[boolean, hasSourceInMemory, (, ), {, return, code, !=, null, ;, }, @, Override, public, String, getName, (, ), {, return]
[Override, public, String, getName, (, ), {, return, fileName, ;, }, @, Override, public, boolean, isExtern, (, ), {, return]
[}, @, Override, public, boolean, isExtern, (, ), {, return, isExternFile, ;, }, void, setIsExtern, (, boolean, newVal, ), {]
[Override, public, boolean, isExtern, (, ), {, return, isExternFile, ;, }, void, setIsExtern, (, boolean, newVal, ), {, isExternFile, =]
[(, boolean, newVal, ), {, isExternFile, =, newVal, ;, }, @, Override, public, int, getLineOfOffset, (, int, offset, ), {]
[newVal, ;, }, @, Override, public, int, getLineOfOffset, (, int, offset, ), {, findLineOffsets, (, ), ;, int, search, =]
[newVal, ;, }, @, Override, public, int, getLineOfOffset, (, int, offset, ), {, findLineOffsets, (, ), ;, int, search, =]
[Override, public, int, getLineOfOffset, (, int, offset, ), {, findLineOffsets, (, ), ;, int, search, =, Arrays, ., binarySearch, (]
[int, getLineOfOffset, (, int, offset, ), {, findLineOffsets, (, ), ;, int, search, =, Arrays, ., binarySearch, (, lineOffsets, ,]
[), {, findLineOffsets, (, ), ;, int, search, =, Arrays, ., binarySearch, (, lineOffsets, ,, offset, ), ;, if, (]
[), {, findLineOffsets, (, ), ;, int, search, =, Arrays, ., binarySearch, (, lineOffsets, ,, offset, ), ;, if, (]
[findLineOffsets, (, ), ;, int, search, =, Arrays, ., binarySearch, (, lineOffsets, ,, offset, ), ;, if, (, search, >=]
[int, search, =, Arrays, ., binarySearch, (, lineOffsets, ,, offset, ), ;, if, (, search, >=, 0, ), {, return]
[int, search, =, Arrays, ., binarySearch, (, lineOffsets, ,, offset, ), ;, if, (, search, >=, 0, ), {, return]
[=, Arrays, ., binarySearch, (, lineOffsets, ,, offset, ), ;, if, (, search, >=, 0, ), {, return, search, +]
[), ;, if, (, search, >=, 0, ), {, return, search, +, 1, ;, }, else, {, int, insertionPoint, =]
[), ;, if, (, search, >=, 0, ), {, return, search, +, 1, ;, }, else, {, int, insertionPoint, =]
[;, if, (, search, >=, 0, ), {, return, search, +, 1, ;, }, else, {, int, insertionPoint, =, -]
[(, search, >=, 0, ), {, return, search, +, 1, ;, }, else, {, int, insertionPoint, =, -, 1, *]
[search, >=, 0, ), {, return, search, +, 1, ;, }, else, {, int, insertionPoint, =, -, 1, *, (]
[search, >=, 0, ), {, return, search, +, 1, ;, }, else, {, int, insertionPoint, =, -, 1, *, (]
[0, ), {, return, search, +, 1, ;, }, else, {, int, insertionPoint, =, -, 1, *, (, search, +]
[search, +, 1, ;, }, else, {, int, insertionPoint, =, -, 1, *, (, search, +, 1, ), ;, return]
[search, +, 1, ;, }, else, {, int, insertionPoint, =, -, 1, *, (, search, +, 1, ), ;, return]
[search, +, 1, ;, }, else, {, int, insertionPoint, =, -, 1, *, (, search, +, 1, ), ;, return]
[}, else, {, int, insertionPoint, =, -, 1, *, (, search, +, 1, ), ;, return, Math, ., min, (]
[}, else, {, int, insertionPoint, =, -, 1, *, (, search, +, 1, ), ;, return, Math, ., min, (]
[{, int, insertionPoint, =, -, 1, *, (, search, +, 1, ), ;, return, Math, ., min, (, insertionPoint, -]
[insertionPoint, =, -, 1, *, (, search, +, 1, ), ;, return, Math, ., min, (, insertionPoint, -, 1, ,]
[insertionPoint, =, -, 1, *, (, search, +, 1, ), ;, return, Math, ., min, (, insertionPoint, -, 1, ,]
[insertionPoint, =, -, 1, *, (, search, +, 1, ), ;, return, Math, ., min, (, insertionPoint, -, 1, ,]
[*, (, search, +, 1, ), ;, return, Math, ., min, (, insertionPoint, -, 1, ,, lineOffsets, ., length, -]
[+, 1, ), ;, return, Math, ., min, (, insertionPoint, -, 1, ,, lineOffsets, ., length, -, 1, ), +]
[1, ), +, 1, ;, }, }, @, Override, public, int, getColumnOfOffset, (, int, offset, ), {, int, line, =]
[+, 1, ;, }, }, @, Override, public, int, getColumnOfOffset, (, int, offset, ), {, int, line, =, getLineOfOffset, (]
[}, @, Override, public, int, getColumnOfOffset, (, int, offset, ), {, int, line, =, getLineOfOffset, (, offset, ), ;, return]
[}, @, Override, public, int, getColumnOfOffset, (, int, offset, ), {, int, line, =, getLineOfOffset, (, offset, ), ;, return]
[Override, public, int, getColumnOfOffset, (, int, offset, ), {, int, line, =, getLineOfOffset, (, offset, ), ;, return, offset, -]
[Override, public, int, getColumnOfOffset, (, int, offset, ), {, int, line, =, getLineOfOffset, (, offset, ), ;, return, offset, -]
[int, getColumnOfOffset, (, int, offset, ), {, int, line, =, getLineOfOffset, (, offset, ), ;, return, offset, -, lineOffsets, []
[int, getColumnOfOffset, (, int, offset, ), {, int, line, =, getLineOfOffset, (, offset, ), ;, return, offset, -, lineOffsets, []
[(, int, offset, ), {, int, line, =, getLineOfOffset, (, offset, ), ;, return, offset, -, lineOffsets, [, line, -]
[;, return, offset, -, lineOffsets, [, line, -, 1, ], ;, }, public, String, getLine, (, int, lineNumber, ), {]
[line, -, 1, ], ;, }, public, String, getLine, (, int, lineNumber, ), {, findLineOffsets, (, ), ;, if, (]
[line, -, 1, ], ;, }, public, String, getLine, (, int, lineNumber, ), {, findLineOffsets, (, ), ;, if, (]
[1, ], ;, }, public, String, getLine, (, int, lineNumber, ), {, findLineOffsets, (, ), ;, if, (, lineNumber, >]
[1, ], ;, }, public, String, getLine, (, int, lineNumber, ), {, findLineOffsets, (, ), ;, if, (, lineNumber, >]
[getLine, (, int, lineNumber, ), {, findLineOffsets, (, ), ;, if, (, lineNumber, >, lineOffsets, ., length, ), {, return]
[{, findLineOffsets, (, ), ;, if, (, lineNumber, >, lineOffsets, ., length, ), {, return, null, ;, }, if, (]
[{, findLineOffsets, (, ), ;, if, (, lineNumber, >, lineOffsets, ., length, ), {, return, null, ;, }, if, (]
[(, ), ;, if, (, lineNumber, >, lineOffsets, ., length, ), {, return, null, ;, }, if, (, lineNumber, <]
[if, (, lineNumber, >, lineOffsets, ., length, ), {, return, null, ;, }, if, (, lineNumber, <, 1, ), {]
[lineNumber, >, lineOffsets, ., length, ), {, return, null, ;, }, if, (, lineNumber, <, 1, ), {, lineNumber, =]
[{, return, null, ;, }, if, (, lineNumber, <, 1, ), {, lineNumber, =, 1, ;, }, int, pos, =]
[{, return, null, ;, }, if, (, lineNumber, <, 1, ), {, lineNumber, =, 1, ;, }, int, pos, =]
[null, ;, }, if, (, lineNumber, <, 1, ), {, lineNumber, =, 1, ;, }, int, pos, =, lineOffsets, []
[null, ;, }, if, (, lineNumber, <, 1, ), {, lineNumber, =, 1, ;, }, int, pos, =, lineOffsets, []
[}, if, (, lineNumber, <, 1, ), {, lineNumber, =, 1, ;, }, int, pos, =, lineOffsets, [, lineNumber, -]
[), {, lineNumber, =, 1, ;, }, int, pos, =, lineOffsets, [, lineNumber, -, 1, ], ;, String, js, =]
[1, ;, }, int, pos, =, lineOffsets, [, lineNumber, -, 1, ], ;, String, js, =, "", ;, try, {]
[}, int, pos, =, lineOffsets, [, lineNumber, -, 1, ], ;, String, js, =, "", ;, try, {, js, =]
[js, =, "", ;, try, {, js, =, getCode, (, ), ;, }, catch, (, IOException, e, ), {, return]
[{, js, =, getCode, (, ), ;, }, catch, (, IOException, e, ), {, return, null, ;, }, if, (]
[{, js, =, getCode, (, ), ;, }, catch, (, IOException, e, ), {, return, null, ;, }, if, (]
[{, js, =, getCode, (, ), ;, }, catch, (, IOException, e, ), {, return, null, ;, }, if, (]
[(, ), ;, }, catch, (, IOException, e, ), {, return, null, ;, }, if, (, js, ., indexOf, (]
[;, }, catch, (, IOException, e, ), {, return, null, ;, }, if, (, js, ., indexOf, (, '\n', ,]
[(, IOException, e, ), {, return, null, ;, }, if, (, js, ., indexOf, (, '\n', ,, pos, ), ==]
[IOException, e, ), {, return, null, ;, }, if, (, js, ., indexOf, (, '\n', ,, pos, ), ==, -]
[null, ;, }, if, (, js, ., indexOf, (, '\n', ,, pos, ), ==, -, 1, ), {, if, (]
[null, ;, }, if, (, js, ., indexOf, (, '\n', ,, pos, ), ==, -, 1, ), {, if, (]
[}, if, (, js, ., indexOf, (, '\n', ,, pos, ), ==, -, 1, ), {, if, (, pos, >=]
[}, if, (, js, ., indexOf, (, '\n', ,, pos, ), ==, -, 1, ), {, if, (, pos, >=]
[,, pos, ), ==, -, 1, ), {, if, (, pos, >=, js, ., length, (, ), ), {, return]
[), {, if, (, pos, >=, js, ., length, (, ), ), {, return, null, ;, }, else, {, return]
[), {, if, (, pos, >=, js, ., length, (, ), ), {, return, null, ;, }, else, {, return]
[pos, >=, js, ., length, (, ), ), {, return, null, ;, }, else, {, return, js, ., substring, (]
[js, ., length, (, ), ), {, return, null, ;, }, else, {, return, js, ., substring, (, pos, ,]
[js, ., length, (, ), ), {, return, null, ;, }, else, {, return, js, ., substring, (, pos, ,]
[{, return, js, ., substring, (, pos, ,, js, ., length, (, ), ), ;, }, }, else, {, return]
[{, return, js, ., substring, (, pos, ,, js, ., length, (, ), ), ;, }, }, else, {, return]
[substring, (, pos, ,, js, ., length, (, ), ), ;, }, }, else, {, return, js, ., substring, (]
[pos, ,, js, ., length, (, ), ), ;, }, }, else, {, return, js, ., substring, (, pos, ,]
[pos, ,, js, ., length, (, ), ), ;, }, }, else, {, return, js, ., substring, (, pos, ,]
[length, (, ), ), ;, }, }, else, {, return, js, ., substring, (, pos, ,, js, ., indexOf, (]
[), ), ;, }, }, else, {, return, js, ., substring, (, pos, ,, js, ., indexOf, (, '\n', ,]
[(, '\n', ,, pos, ), ), ;, }, }, public, Region, getRegion, (, int, lineNumber, ), {, String, js, =]
[), ), ;, }, }, public, Region, getRegion, (, int, lineNumber, ), {, String, js, =, "", ;, try, {]
[;, }, }, public, Region, getRegion, (, int, lineNumber, ), {, String, js, =, "", ;, try, {, js, =]
[js, =, "", ;, try, {, js, =, getCode, (, ), ;, }, catch, (, IOException, e, ), {, return]
[js, =, getCode, (, ), ;, }, catch, (, IOException, e, ), {, return, null, ;, }, int, pos, =]
[;, }, catch, (, IOException, e, ), {, return, null, ;, }, int, pos, =, 0, ;, int, startLine, =]
[;, }, catch, (, IOException, e, ), {, return, null, ;, }, int, pos, =, 0, ;, int, startLine, =]
[IOException, e, ), {, return, null, ;, }, int, pos, =, 0, ;, int, startLine, =, Math, ., max, (]
[), {, return, null, ;, }, int, pos, =, 0, ;, int, startLine, =, Math, ., max, (, 1, ,]
[), {, return, null, ;, }, int, pos, =, 0, ;, int, startLine, =, Math, ., max, (, 1, ,]
[), {, return, null, ;, }, int, pos, =, 0, ;, int, startLine, =, Math, ., max, (, 1, ,]
[return, null, ;, }, int, pos, =, 0, ;, int, startLine, =, Math, ., max, (, 1, ,, lineNumber, -]
[return, null, ;, }, int, pos, =, 0, ;, int, startLine, =, Math, ., max, (, 1, ,, lineNumber, -]
[null, ;, }, int, pos, =, 0, ;, int, startLine, =, Math, ., max, (, 1, ,, lineNumber, -, (]
[null, ;, }, int, pos, =, 0, ;, int, startLine, =, Math, ., max, (, 1, ,, lineNumber, -, (]
[}, int, pos, =, 0, ;, int, startLine, =, Math, ., max, (, 1, ,, lineNumber, -, (, SOURCE_EXCERPT_REGION_LENGTH, +]
[=, 0, ;, int, startLine, =, Math, ., max, (, 1, ,, lineNumber, -, (, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /]
[;, int, startLine, =, Math, ., max, (, 1, ,, lineNumber, -, (, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /, 2, +]
[1, ,, lineNumber, -, (, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /, 2, +, 1, ), ;, for, (, int, n, =]
[lineNumber, -, (, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /, 2, +, 1, ), ;, for, (, int, n, =, 1, ;]
[lineNumber, -, (, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /, 2, +, 1, ), ;, for, (, int, n, =, 1, ;]
[(, SOURCE_EXCERPT_REGION_LENGTH, +, 1, ), /, 2, +, 1, ), ;, for, (, int, n, =, 1, ;, n, <]
[+, 1, ), /, 2, +, 1, ), ;, for, (, int, n, =, 1, ;, n, <, startLine, ;]
[+, 1, ), /, 2, +, 1, ), ;, for, (, int, n, =, 1, ;, n, <, startLine, ;]
[), ;, for, (, int, n, =, 1, ;, n, <, startLine, ;, n, ++, ), {, int, nextpos, =]
[), ;, for, (, int, n, =, 1, ;, n, <, startLine, ;, n, ++, ), {, int, nextpos, =]
[int, n, =, 1, ;, n, <, startLine, ;, n, ++, ), {, int, nextpos, =, js, ., indexOf, (]
[=, 1, ;, n, <, startLine, ;, n, ++, ), {, int, nextpos, =, js, ., indexOf, (, '\n', ,]
[startLine, ;, n, ++, ), {, int, nextpos, =, js, ., indexOf, (, '\n', ,, pos, ), ;, if, (]
[startLine, ;, n, ++, ), {, int, nextpos, =, js, ., indexOf, (, '\n', ,, pos, ), ;, if, (]
[n, ++, ), {, int, nextpos, =, js, ., indexOf, (, '\n', ,, pos, ), ;, if, (, nextpos, ==]
[++, ), {, int, nextpos, =, js, ., indexOf, (, '\n', ,, pos, ), ;, if, (, nextpos, ==, -]
[js, ., indexOf, (, '\n', ,, pos, ), ;, if, (, nextpos, ==, -, 1, ), {, break, ;, }]
[indexOf, (, '\n', ,, pos, ), ;, if, (, nextpos, ==, -, 1, ), {, break, ;, }, pos, =]
[indexOf, (, '\n', ,, pos, ), ;, if, (, nextpos, ==, -, 1, ), {, break, ;, }, pos, =]
['\n', ,, pos, ), ;, if, (, nextpos, ==, -, 1, ), {, break, ;, }, pos, =, nextpos, +]
[(, nextpos, ==, -, 1, ), {, break, ;, }, pos, =, nextpos, +, 1, ;, }, int, end, =]
[), {, break, ;, }, pos, =, nextpos, +, 1, ;, }, int, end, =, pos, ;, int, endLine, =]
[nextpos, +, 1, ;, }, int, end, =, pos, ;, int, endLine, =, startLine, ;, for, (, int, n, =]
[1, ;, }, int, end, =, pos, ;, int, endLine, =, startLine, ;, for, (, int, n, =, 0, ;]
[1, ;, }, int, end, =, pos, ;, int, endLine, =, startLine, ;, for, (, int, n, =, 0, ;]
[}, int, end, =, pos, ;, int, endLine, =, startLine, ;, for, (, int, n, =, 0, ;, n, <]
[end, =, pos, ;, int, endLine, =, startLine, ;, for, (, int, n, =, 0, ;, n, <, SOURCE_EXCERPT_REGION_LENGTH, ;]
[end, =, pos, ;, int, endLine, =, startLine, ;, for, (, int, n, =, 0, ;, n, <, SOURCE_EXCERPT_REGION_LENGTH, ;]
[;, int, endLine, =, startLine, ;, for, (, int, n, =, 0, ;, n, <, SOURCE_EXCERPT_REGION_LENGTH, ;, n, ++, ,]
[;, int, endLine, =, startLine, ;, for, (, int, n, =, 0, ;, n, <, SOURCE_EXCERPT_REGION_LENGTH, ;, n, ++, ,]
[startLine, ;, for, (, int, n, =, 0, ;, n, <, SOURCE_EXCERPT_REGION_LENGTH, ;, n, ++, ,, endLine, ++, ), {]
[for, (, int, n, =, 0, ;, n, <, SOURCE_EXCERPT_REGION_LENGTH, ;, n, ++, ,, endLine, ++, ), {, end, =]
[for, (, int, n, =, 0, ;, n, <, SOURCE_EXCERPT_REGION_LENGTH, ;, n, ++, ,, endLine, ++, ), {, end, =]
[=, 0, ;, n, <, SOURCE_EXCERPT_REGION_LENGTH, ;, n, ++, ,, endLine, ++, ), {, end, =, js, ., indexOf, (]
[;, n, <, SOURCE_EXCERPT_REGION_LENGTH, ;, n, ++, ,, endLine, ++, ), {, end, =, js, ., indexOf, (, '\n', ,]
[n, ++, ,, endLine, ++, ), {, end, =, js, ., indexOf, (, '\n', ,, end, ), ;, if, (]
[n, ++, ,, endLine, ++, ), {, end, =, js, ., indexOf, (, '\n', ,, end, ), ;, if, (]
[,, endLine, ++, ), {, end, =, js, ., indexOf, (, '\n', ,, end, ), ;, if, (, end, ==]
[endLine, ++, ), {, end, =, js, ., indexOf, (, '\n', ,, end, ), ;, if, (, end, ==, -]
[js, ., indexOf, (, '\n', ,, end, ), ;, if, (, end, ==, -, 1, ), {, break, ;, }]
[js, ., indexOf, (, '\n', ,, end, ), ;, if, (, end, ==, -, 1, ), {, break, ;, }]
[end, ), ;, if, (, end, ==, -, 1, ), {, break, ;, }, end, ++, ;, }, if, (]
[end, ), ;, if, (, end, ==, -, 1, ), {, break, ;, }, end, ++, ;, }, if, (]
[;, if, (, end, ==, -, 1, ), {, break, ;, }, end, ++, ;, }, if, (, lineNumber, >=]
[==, -, 1, ), {, break, ;, }, end, ++, ;, }, if, (, lineNumber, >=, endLine, ), {, return]
[break, ;, }, end, ++, ;, }, if, (, lineNumber, >=, endLine, ), {, return, null, ;, }, if, (]
[break, ;, }, end, ++, ;, }, if, (, lineNumber, >=, endLine, ), {, return, null, ;, }, if, (]
[}, end, ++, ;, }, if, (, lineNumber, >=, endLine, ), {, return, null, ;, }, if, (, end, ==]
[end, ++, ;, }, if, (, lineNumber, >=, endLine, ), {, return, null, ;, }, if, (, end, ==, -]
[lineNumber, >=, endLine, ), {, return, null, ;, }, if, (, end, ==, -, 1, ), {, int, last, =]
[lineNumber, >=, endLine, ), {, return, null, ;, }, if, (, end, ==, -, 1, ), {, int, last, =]
[lineNumber, >=, endLine, ), {, return, null, ;, }, if, (, end, ==, -, 1, ), {, int, last, =]
[null, ;, }, if, (, end, ==, -, 1, ), {, int, last, =, js, ., length, (, ), -]
[(, end, ==, -, 1, ), {, int, last, =, js, ., length, (, ), -, 1, ;, if, (]
[(, end, ==, -, 1, ), {, int, last, =, js, ., length, (, ), -, 1, ;, if, (]
[(, end, ==, -, 1, ), {, int, last, =, js, ., length, (, ), -, 1, ;, if, (]
[1, ), {, int, last, =, js, ., length, (, ), -, 1, ;, if, (, js, ., charAt, (]
[int, last, =, js, ., length, (, ), -, 1, ;, if, (, js, ., charAt, (, last, ), ==]
[., length, (, ), -, 1, ;, if, (, js, ., charAt, (, last, ), ==, '\n', ), {, return]
[), -, 1, ;, if, (, js, ., charAt, (, last, ), ==, '\n', ), {, return, new, SimpleRegion, (]
[1, ;, if, (, js, ., charAt, (, last, ), ==, '\n', ), {, return, new, SimpleRegion, (, startLine, ,]
[if, (, js, ., charAt, (, last, ), ==, '\n', ), {, return, new, SimpleRegion, (, startLine, ,, endLine, ,]
[if, (, js, ., charAt, (, last, ), ==, '\n', ), {, return, new, SimpleRegion, (, startLine, ,, endLine, ,]
[charAt, (, last, ), ==, '\n', ), {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (]
[last, ), ==, '\n', ), {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ,]
[SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ,, last, ), ), ;, }, else, {, return]
[,, endLine, ,, js, ., substring, (, pos, ,, last, ), ), ;, }, else, {, return, new, SimpleRegion, (]
[,, js, ., substring, (, pos, ,, last, ), ), ;, }, else, {, return, new, SimpleRegion, (, startLine, ,]
[., substring, (, pos, ,, last, ), ), ;, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,]
[., substring, (, pos, ,, last, ), ), ;, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,]
[,, last, ), ), ;, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (]
[new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ), ), ;, }, }, else, {, return]
[startLine, ,, endLine, ,, js, ., substring, (, pos, ), ), ;, }, }, else, {, return, new, SimpleRegion, (]
[endLine, ,, js, ., substring, (, pos, ), ), ;, }, }, else, {, return, new, SimpleRegion, (, startLine, ,]
[js, ., substring, (, pos, ), ), ;, }, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,]
[js, ., substring, (, pos, ), ), ;, }, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,]
[pos, ), ), ;, }, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (]
[), ;, }, }, else, {, return, new, SimpleRegion, (, startLine, ,, endLine, ,, js, ., substring, (, pos, ,]
[., substring, (, pos, ,, end, ), ), ;, }, }, @, Override, public, String, toString, (, ), {, return]
[(, ), {, return, fileName, ;, }, public, static, SourceFile, fromFile, (, String, fileName, ,, Charset, c, ), {, return]
[(, ), {, return, fileName, ;, }, public, static, SourceFile, fromFile, (, String, fileName, ,, Charset, c, ), {, return]
[(, ), {, return, fileName, ;, }, public, static, SourceFile, fromFile, (, String, fileName, ,, Charset, c, ), {, return]
[}, public, static, SourceFile, fromFile, (, String, fileName, ,, Charset, c, ), {, return, builder, (, ), ., withCharset, (]
[(, String, fileName, ,, Charset, c, ), {, return, builder, (, ), ., withCharset, (, c, ), ., buildFromFile, (]
[(, c, ), ., buildFromFile, (, fileName, ), ;, }, public, static, SourceFile, fromFile, (, String, fileName, ), {, return]
[(, c, ), ., buildFromFile, (, fileName, ), ;, }, public, static, SourceFile, fromFile, (, String, fileName, ), {, return]
[fileName, ), ;, }, public, static, SourceFile, fromFile, (, String, fileName, ), {, return, builder, (, ), ., buildFromFile, (]
[., buildFromFile, (, fileName, ), ;, }, public, static, SourceFile, fromFile, (, File, file, ,, Charset, c, ), {, return]
[., buildFromFile, (, fileName, ), ;, }, public, static, SourceFile, fromFile, (, File, file, ,, Charset, c, ), {, return]
[., buildFromFile, (, fileName, ), ;, }, public, static, SourceFile, fromFile, (, File, file, ,, Charset, c, ), {, return]
[}, public, static, SourceFile, fromFile, (, File, file, ,, Charset, c, ), {, return, builder, (, ), ., withCharset, (]
[(, File, file, ,, Charset, c, ), {, return, builder, (, ), ., withCharset, (, c, ), ., buildFromFile, (]
[(, c, ), ., buildFromFile, (, file, ), ;, }, public, static, SourceFile, fromFile, (, File, file, ), {, return]
[(, c, ), ., buildFromFile, (, file, ), ;, }, public, static, SourceFile, fromFile, (, File, file, ), {, return]
[file, ), ;, }, public, static, SourceFile, fromFile, (, File, file, ), {, return, builder, (, ), ., buildFromFile, (]
[., buildFromFile, (, file, ), ;, }, public, static, SourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return]
[., buildFromFile, (, file, ), ;, }, public, static, SourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return]
[}, public, static, SourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return, builder, (, ), ., buildFromCode, (]
[static, SourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return, builder, (, ), ., buildFromCode, (, fileName, ,]
[code, ), ;, }, public, static, SourceFile, fromCode, (, String, fileName, ,, String, originalPath, ,, String, code, ), {, return]
[code, ), ;, }, public, static, SourceFile, fromCode, (, String, fileName, ,, String, originalPath, ,, String, code, ), {, return]
[code, ), ;, }, public, static, SourceFile, fromCode, (, String, fileName, ,, String, originalPath, ,, String, code, ), {, return]
[SourceFile, fromCode, (, String, fileName, ,, String, originalPath, ,, String, code, ), {, return, builder, (, ), ., withOriginalPath, (]
[,, String, originalPath, ,, String, code, ), {, return, builder, (, ), ., withOriginalPath, (, originalPath, ), ., buildFromCode, (]
[originalPath, ,, String, code, ), {, return, builder, (, ), ., withOriginalPath, (, originalPath, ), ., buildFromCode, (, fileName, ,]
[,, code, ), ;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return]
[,, code, ), ;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return]
[static, SourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, builder, (, ), ., buildFromInputStream, (]
[fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, builder, (, ), ., buildFromInputStream, (, fileName, ,]
[;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, String, originalPath, ,, InputStream, s, ), throws, IOException, {, return]
[;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, String, originalPath, ,, InputStream, s, ), throws, IOException, {, return]
[;, }, public, static, SourceFile, fromInputStream, (, String, fileName, ,, String, originalPath, ,, InputStream, s, ), throws, IOException, {, return]
[(, String, fileName, ,, String, originalPath, ,, InputStream, s, ), throws, IOException, {, return, builder, (, ), ., withOriginalPath, (]
[originalPath, ,, InputStream, s, ), throws, IOException, {, return, builder, (, ), ., withOriginalPath, (, originalPath, ), ., buildFromInputStream, (]
[InputStream, s, ), throws, IOException, {, return, builder, (, ), ., withOriginalPath, (, originalPath, ), ., buildFromInputStream, (, fileName, ,]
[,, s, ), ;, }, public, static, SourceFile, fromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return]
[,, s, ), ;, }, public, static, SourceFile, fromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return]
[static, SourceFile, fromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return, builder, (, ), ., buildFromReader, (]
[fromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return, builder, (, ), ., buildFromReader, (, fileName, ,]
[(, fileName, ,, r, ), ;, }, public, static, SourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return]
[(, fileName, ,, r, ), ;, }, public, static, SourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return]
[}, public, static, SourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, builder, (, ), ., buildFromGenerator, (]
[static, SourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, builder, (, ), ., buildFromGenerator, (, fileName, ,]
[builder, (, ), ., buildFromGenerator, (, fileName, ,, generator, ), ;, }, public, static, Builder, builder, (, ), {, return]
[builder, (, ), {, return, new, Builder, (, ), ;, }, public, static, class, Builder, {, private, Charset, charset, =]
[builder, (, ), {, return, new, Builder, (, ), ;, }, public, static, class, Builder, {, private, Charset, charset, =]
[), ;, }, public, static, class, Builder, {, private, Charset, charset, =, Charsets, ., UTF_8, ;, private, String, originalPath, =]
[private, String, originalPath, =, null, ;, public, Builder, (, ), {, }, public, Builder, withCharset, (, Charset, charset, ), {]
[private, String, originalPath, =, null, ;, public, Builder, (, ), {, }, public, Builder, withCharset, (, Charset, charset, ), {]
[null, ;, public, Builder, (, ), {, }, public, Builder, withCharset, (, Charset, charset, ), {, this, ., charset, =]
[Builder, (, ), {, }, public, Builder, withCharset, (, Charset, charset, ), {, this, ., charset, =, charset, ;, return]
[), {, this, ., charset, =, charset, ;, return, this, ;, }, public, Builder, withOriginalPath, (, String, originalPath, ), {]
[), {, this, ., charset, =, charset, ;, return, this, ;, }, public, Builder, withOriginalPath, (, String, originalPath, ), {]
[charset, =, charset, ;, return, this, ;, }, public, Builder, withOriginalPath, (, String, originalPath, ), {, this, ., originalPath, =]
[;, return, this, ;, }, public, Builder, withOriginalPath, (, String, originalPath, ), {, this, ., originalPath, =, originalPath, ;, return]
[{, this, ., originalPath, =, originalPath, ;, return, this, ;, }, public, SourceFile, buildFromFile, (, String, fileName, ), {, return]
[., originalPath, =, originalPath, ;, return, this, ;, }, public, SourceFile, buildFromFile, (, String, fileName, ), {, return, buildFromFile, (]
[originalPath, ;, return, this, ;, }, public, SourceFile, buildFromFile, (, String, fileName, ), {, return, buildFromFile, (, new, File, (]
[return, buildFromFile, (, new, File, (, fileName, ), ), ;, }, public, SourceFile, buildFromFile, (, File, file, ), {, return]
[new, File, (, fileName, ), ), ;, }, public, SourceFile, buildFromFile, (, File, file, ), {, return, new, OnDisk, (]
[(, fileName, ), ), ;, }, public, SourceFile, buildFromFile, (, File, file, ), {, return, new, OnDisk, (, file, ,]
[), ), ;, }, public, SourceFile, buildFromFile, (, File, file, ), {, return, new, OnDisk, (, file, ,, originalPath, ,]
[file, ,, originalPath, ,, charset, ), ;, }, public, SourceFile, buildFromCode, (, String, fileName, ,, String, code, ), {, return]
[,, charset, ), ;, }, public, SourceFile, buildFromCode, (, String, fileName, ,, String, code, ), {, return, new, Preloaded, (]
[), ;, }, public, SourceFile, buildFromCode, (, String, fileName, ,, String, code, ), {, return, new, Preloaded, (, fileName, ,]
[}, public, SourceFile, buildFromCode, (, String, fileName, ,, String, code, ), {, return, new, Preloaded, (, fileName, ,, originalPath, ,]
[originalPath, ,, code, ), ;, }, public, SourceFile, buildFromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return]
[code, ), ;, }, public, SourceFile, buildFromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, buildFromCode, (]
[;, }, public, SourceFile, buildFromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, buildFromCode, (, fileName, ,]
[;, }, public, SourceFile, buildFromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, buildFromCode, (, fileName, ,]
[buildFromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, buildFromCode, (, fileName, ,, CharStreams, ., toString, (]
[fileName, ,, InputStream, s, ), throws, IOException, {, return, buildFromCode, (, fileName, ,, CharStreams, ., toString, (, new, InputStreamReader, (]
[InputStream, s, ), throws, IOException, {, return, buildFromCode, (, fileName, ,, CharStreams, ., toString, (, new, InputStreamReader, (, s, ,]
[charset, ), ), ), ;, }, public, SourceFile, buildFromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return]
[), ), ;, }, public, SourceFile, buildFromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return, buildFromCode, (]
[;, }, public, SourceFile, buildFromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return, buildFromCode, (, fileName, ,]
[;, }, public, SourceFile, buildFromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return, buildFromCode, (, fileName, ,]
[buildFromReader, (, String, fileName, ,, Reader, r, ), throws, IOException, {, return, buildFromCode, (, fileName, ,, CharStreams, ., toString, (]
[., toString, (, r, ), ), ;, }, public, SourceFile, buildFromGenerator, (, String, fileName, ,, Generator, generator, ), {, return]
[r, ), ), ;, }, public, SourceFile, buildFromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new, Generated, (]
[), ;, }, public, SourceFile, buildFromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new, Generated, (, fileName, ,]
[}, public, SourceFile, buildFromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new, Generated, (, fileName, ,, originalPath, ,]
[,, originalPath, ,, generator, ), ;, }, }, static, class, Preloaded, extends, SourceFile, {, private, static, final, long, serialVersionUID, =]
[final, long, serialVersionUID, =, 1L, ;, Preloaded, (, String, fileName, ,, String, originalPath, ,, String, code, ), {, super, (]
[=, 1L, ;, Preloaded, (, String, fileName, ,, String, originalPath, ,, String, code, ), {, super, (, fileName, ), ;]
[=, 1L, ;, Preloaded, (, String, fileName, ,, String, originalPath, ,, String, code, ), {, super, (, fileName, ), ;]
[(, String, fileName, ,, String, originalPath, ,, String, code, ), {, super, (, fileName, ), ;, super, ., setOriginalPath, (]
[,, String, originalPath, ,, String, code, ), {, super, (, fileName, ), ;, super, ., setOriginalPath, (, originalPath, ), ;]
[,, String, originalPath, ,, String, code, ), {, super, (, fileName, ), ;, super, ., setOriginalPath, (, originalPath, ), ;]
[String, code, ), {, super, (, fileName, ), ;, super, ., setOriginalPath, (, originalPath, ), ;, super, ., setCode, (]
[., setCode, (, code, ), ;, }, }, static, class, Generated, extends, SourceFile, {, private, static, final, long, serialVersionUID, =]
[;, private, final, Generator, generator, ;, Generated, (, String, fileName, ,, String, originalPath, ,, Generator, generator, ), {, super, (]
[Generator, generator, ;, Generated, (, String, fileName, ,, String, originalPath, ,, Generator, generator, ), {, super, (, fileName, ), ;]
[Generator, generator, ;, Generated, (, String, fileName, ,, String, originalPath, ,, Generator, generator, ), {, super, (, fileName, ), ;]
[(, String, fileName, ,, String, originalPath, ,, Generator, generator, ), {, super, (, fileName, ), ;, super, ., setOriginalPath, (]
[,, String, originalPath, ,, Generator, generator, ), {, super, (, fileName, ), ;, super, ., setOriginalPath, (, originalPath, ), ;]
[,, String, originalPath, ,, Generator, generator, ), {, super, (, fileName, ), ;, super, ., setOriginalPath, (, originalPath, ), ;]
[Generator, generator, ), {, super, (, fileName, ), ;, super, ., setOriginalPath, (, originalPath, ), ;, this, ., generator, =]
[., generator, =, generator, ;, }, @, Override, public, synchronized, String, getCode, (, ), throws, IOException, {, String, cachedCode, =]
[., generator, =, generator, ;, }, @, Override, public, synchronized, String, getCode, (, ), throws, IOException, {, String, cachedCode, =]
[public, synchronized, String, getCode, (, ), throws, IOException, {, String, cachedCode, =, super, ., getCode, (, ), ;, if, (]
[public, synchronized, String, getCode, (, ), throws, IOException, {, String, cachedCode, =, super, ., getCode, (, ), ;, if, (]
[String, getCode, (, ), throws, IOException, {, String, cachedCode, =, super, ., getCode, (, ), ;, if, (, cachedCode, ==]
[), throws, IOException, {, String, cachedCode, =, super, ., getCode, (, ), ;, if, (, cachedCode, ==, null, ), {]
[IOException, {, String, cachedCode, =, super, ., getCode, (, ), ;, if, (, cachedCode, ==, null, ), {, cachedCode, =]
[IOException, {, String, cachedCode, =, super, ., getCode, (, ), ;, if, (, cachedCode, ==, null, ), {, cachedCode, =]
[., getCode, (, ), ;, if, (, cachedCode, ==, null, ), {, cachedCode, =, generator, ., getCode, (, ), ;]
[., getCode, (, ), ;, if, (, cachedCode, ==, null, ), {, cachedCode, =, generator, ., getCode, (, ), ;]
[;, if, (, cachedCode, ==, null, ), {, cachedCode, =, generator, ., getCode, (, ), ;, super, ., setCode, (]
[null, ), {, cachedCode, =, generator, ., getCode, (, ), ;, super, ., setCode, (, cachedCode, ), ;, }, return]
[super, ., setCode, (, cachedCode, ), ;, }, return, cachedCode, ;, }, @, Override, public, void, clearCachedSource, (, ), {]
[super, ., setCode, (, cachedCode, ), ;, }, return, cachedCode, ;, }, @, Override, public, void, clearCachedSource, (, ), {]
[cachedCode, ), ;, }, return, cachedCode, ;, }, @, Override, public, void, clearCachedSource, (, ), {, super, ., setCode, (]
[., setCode, (, null, ), ;, }, }, static, class, OnDisk, extends, SourceFile, {, private, static, final, long, serialVersionUID, =]
[extends, SourceFile, {, private, static, final, long, serialVersionUID, =, 1L, ;, private, final, File, file, ;, private, String, inputCharset, =]
[extends, SourceFile, {, private, static, final, long, serialVersionUID, =, 1L, ;, private, final, File, file, ;, private, String, inputCharset, =]
[extends, SourceFile, {, private, static, final, long, serialVersionUID, =, 1L, ;, private, final, File, file, ;, private, String, inputCharset, =]
[UTF_8, ., name, (, ), ;, OnDisk, (, File, file, ,, String, originalPath, ,, Charset, c, ), {, super, (]
[UTF_8, ., name, (, ), ;, OnDisk, (, File, file, ,, String, originalPath, ,, Charset, c, ), {, super, (]
[(, File, file, ,, String, originalPath, ,, Charset, c, ), {, super, (, file, ., getPath, (, ), ), ;]
[(, File, file, ,, String, originalPath, ,, Charset, c, ), {, super, (, file, ., getPath, (, ), ), ;]
[String, originalPath, ,, Charset, c, ), {, super, (, file, ., getPath, (, ), ), ;, this, ., file, =]
[,, Charset, c, ), {, super, (, file, ., getPath, (, ), ), ;, this, ., file, =, file, ;]
[,, Charset, c, ), {, super, (, file, ., getPath, (, ), ), ;, this, ., file, =, file, ;]
[{, super, (, file, ., getPath, (, ), ), ;, this, ., file, =, file, ;, super, ., setOriginalPath, (]
[getPath, (, ), ), ;, this, ., file, =, file, ;, super, ., setOriginalPath, (, originalPath, ), ;, if, (]
[getPath, (, ), ), ;, this, ., file, =, file, ;, super, ., setOriginalPath, (, originalPath, ), ;, if, (]
[), ), ;, this, ., file, =, file, ;, super, ., setOriginalPath, (, originalPath, ), ;, if, (, c, !=]
[this, ., file, =, file, ;, super, ., setOriginalPath, (, originalPath, ), ;, if, (, c, !=, null, ), {]
[this, ., file, =, file, ;, super, ., setOriginalPath, (, originalPath, ), ;, if, (, c, !=, null, ), {]
[file, ;, super, ., setOriginalPath, (, originalPath, ), ;, if, (, c, !=, null, ), {, this, ., setCharset, (]
[(, c, ), ;, }, }, @, Override, public, synchronized, String, getCode, (, ), throws, IOException, {, String, cachedCode, =]
[(, c, ), ;, }, }, @, Override, public, synchronized, String, getCode, (, ), throws, IOException, {, String, cachedCode, =]
[public, synchronized, String, getCode, (, ), throws, IOException, {, String, cachedCode, =, super, ., getCode, (, ), ;, if, (]
[public, synchronized, String, getCode, (, ), throws, IOException, {, String, cachedCode, =, super, ., getCode, (, ), ;, if, (]
[String, getCode, (, ), throws, IOException, {, String, cachedCode, =, super, ., getCode, (, ), ;, if, (, cachedCode, ==]
[), throws, IOException, {, String, cachedCode, =, super, ., getCode, (, ), ;, if, (, cachedCode, ==, null, ), {]
[IOException, {, String, cachedCode, =, super, ., getCode, (, ), ;, if, (, cachedCode, ==, null, ), {, cachedCode, =]
[IOException, {, String, cachedCode, =, super, ., getCode, (, ), ;, if, (, cachedCode, ==, null, ), {, cachedCode, =]
[=, super, ., getCode, (, ), ;, if, (, cachedCode, ==, null, ), {, cachedCode, =, Files, ., toString, (]
[., getCode, (, ), ;, if, (, cachedCode, ==, null, ), {, cachedCode, =, Files, ., toString, (, file, ,]
[., getCode, (, ), ;, if, (, cachedCode, ==, null, ), {, cachedCode, =, Files, ., toString, (, file, ,]
[cachedCode, ==, null, ), {, cachedCode, =, Files, ., toString, (, file, ,, this, ., getCharset, (, ), ), ;]
[cachedCode, ==, null, ), {, cachedCode, =, Files, ., toString, (, file, ,, this, ., getCharset, (, ), ), ;]
[{, cachedCode, =, Files, ., toString, (, file, ,, this, ., getCharset, (, ), ), ;, super, ., setCode, (]
[toString, (, file, ,, this, ., getCharset, (, ), ), ;, super, ., setCode, (, cachedCode, ), ;, }, return]
[cachedCode, ), ;, }, return, cachedCode, ;, }, @, Override, public, Reader, getCodeReader, (, ), throws, IOException, {, if, (]
[;, }, @, Override, public, Reader, getCodeReader, (, ), throws, IOException, {, if, (, hasSourceInMemory, (, ), ), {, return]
[;, }, @, Override, public, Reader, getCodeReader, (, ), throws, IOException, {, if, (, hasSourceInMemory, (, ), ), {, return]
[IOException, {, if, (, hasSourceInMemory, (, ), ), {, return, super, ., getCodeReader, (, ), ;, }, else, {, return]
[(, hasSourceInMemory, (, ), ), {, return, super, ., getCodeReader, (, ), ;, }, else, {, return, new, FileReader, (]
[}, else, {, return, new, FileReader, (, file, ), ;, }, }, @, Override, public, void, clearCachedSource, (, ), {]
[}, else, {, return, new, FileReader, (, file, ), ;, }, }, @, Override, public, void, clearCachedSource, (, ), {]
[new, FileReader, (, file, ), ;, }, }, @, Override, public, void, clearCachedSource, (, ), {, super, ., setCode, (]
[clearCachedSource, (, ), {, super, ., setCode, (, null, ), ;, }, public, void, setCharset, (, Charset, c, ), {]
[), {, super, ., setCode, (, null, ), ;, }, public, void, setCharset, (, Charset, c, ), {, inputCharset, =]
[), {, super, ., setCode, (, null, ), ;, }, public, void, setCharset, (, Charset, c, ), {, inputCharset, =]
[Charset, c, ), {, inputCharset, =, c, ., name, (, ), ;, }, public, Charset, getCharset, (, ), {, return]
[Charset, c, ), {, inputCharset, =, c, ., name, (, ), ;, }, public, Charset, getCharset, (, ), {, return]
[inputCharset, =, c, ., name, (, ), ;, }, public, Charset, getCharset, (, ), {, return, Charset, ., forName, (]
