[jfree, ., chart, ., util, ., Size2D, ;, public, class, TextBlock, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[., chart, ., util, ., Size2D, ;, public, class, TextBlock, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[final, long, serialVersionUID, =, -, 4333175719424385526L, ;, private, List, lines, ;, private, HorizontalAlignment, lineAlignment, ;, public, TextBlock, (, ), {]
[final, long, serialVersionUID, =, -, 4333175719424385526L, ;, private, List, lines, ;, private, HorizontalAlignment, lineAlignment, ;, public, TextBlock, (, ), {]
[-, 4333175719424385526L, ;, private, List, lines, ;, private, HorizontalAlignment, lineAlignment, ;, public, TextBlock, (, ), {, this, ., lines, =]
[lineAlignment, ;, public, TextBlock, (, ), {, this, ., lines, =, new, java, ., util, ., ArrayList, (, ), ;]
[lineAlignment, ;, public, TextBlock, (, ), {, this, ., lines, =, new, java, ., util, ., ArrayList, (, ), ;]
[(, ), {, this, ., lines, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., lineAlignment, =]
[(, ), {, this, ., lines, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., lineAlignment, =]
[ArrayList, (, ), ;, this, ., lineAlignment, =, HorizontalAlignment, ., CENTER, ;, }, public, HorizontalAlignment, getLineAlignment, (, ), {, return]
[ArrayList, (, ), ;, this, ., lineAlignment, =, HorizontalAlignment, ., CENTER, ;, }, public, HorizontalAlignment, getLineAlignment, (, ), {, return]
[getLineAlignment, (, ), {, return, this, ., lineAlignment, ;, }, public, void, setLineAlignment, (, HorizontalAlignment, alignment, ), {, if, (]
[getLineAlignment, (, ), {, return, this, ., lineAlignment, ;, }, public, void, setLineAlignment, (, HorizontalAlignment, alignment, ), {, if, (]
[), {, return, this, ., lineAlignment, ;, }, public, void, setLineAlignment, (, HorizontalAlignment, alignment, ), {, if, (, alignment, ==]
[., lineAlignment, ;, }, public, void, setLineAlignment, (, HorizontalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw]
[}, public, void, setLineAlignment, (, HorizontalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, HorizontalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }]
[(, HorizontalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }]
[{, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, this, ., lineAlignment, =]
[., lineAlignment, =, alignment, ;, }, public, void, addLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {]
[=, alignment, ;, }, public, void, addLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {, addLine, (]
[}, public, void, addLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {, addLine, (, new, TextLine, (]
[void, addLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {, addLine, (, new, TextLine, (, text, ,]
[(, String, text, ,, Font, font, ,, Paint, paint, ), {, addLine, (, new, TextLine, (, text, ,, font, ,]
[new, TextLine, (, text, ,, font, ,, paint, ), ), ;, }, public, void, addLine, (, TextLine, line, ), {]
[new, TextLine, (, text, ,, font, ,, paint, ), ), ;, }, public, void, addLine, (, TextLine, line, ), {]
[new, TextLine, (, text, ,, font, ,, paint, ), ), ;, }, public, void, addLine, (, TextLine, line, ), {]
[,, paint, ), ), ;, }, public, void, addLine, (, TextLine, line, ), {, this, ., lines, ., add, (]
[{, this, ., lines, ., add, (, line, ), ;, }, public, TextLine, getLastLine, (, ), {, TextLine, last, =]
[(, line, ), ;, }, public, TextLine, getLastLine, (, ), {, TextLine, last, =, null, ;, final, int, index, =]
[(, line, ), ;, }, public, TextLine, getLastLine, (, ), {, TextLine, last, =, null, ;, final, int, index, =]
[(, line, ), ;, }, public, TextLine, getLastLine, (, ), {, TextLine, last, =, null, ;, final, int, index, =]
[(, line, ), ;, }, public, TextLine, getLastLine, (, ), {, TextLine, last, =, null, ;, final, int, index, =]
[(, ), {, TextLine, last, =, null, ;, final, int, index, =, this, ., lines, ., size, (, ), -]
[last, =, null, ;, final, int, index, =, this, ., lines, ., size, (, ), -, 1, ;, if, (]
[last, =, null, ;, final, int, index, =, this, ., lines, ., size, (, ), -, 1, ;, if, (]
[null, ;, final, int, index, =, this, ., lines, ., size, (, ), -, 1, ;, if, (, index, >=]
[int, index, =, this, ., lines, ., size, (, ), -, 1, ;, if, (, index, >=, 0, ), {]
[=, this, ., lines, ., size, (, ), -, 1, ;, if, (, index, >=, 0, ), {, last, =]
[lines, ., size, (, ), -, 1, ;, if, (, index, >=, 0, ), {, last, =, (, TextLine, )]
[lines, ., size, (, ), -, 1, ;, if, (, index, >=, 0, ), {, last, =, (, TextLine, )]
[lines, ., size, (, ), -, 1, ;, if, (, index, >=, 0, ), {, last, =, (, TextLine, )]
[1, ;, if, (, index, >=, 0, ), {, last, =, (, TextLine, ), this, ., lines, ., get, (]
[>=, 0, ), {, last, =, (, TextLine, ), this, ., lines, ., get, (, index, ), ;, }, return]
[., lines, ., get, (, index, ), ;, }, return, last, ;, }, public, List, getLines, (, ), {, return]
[., lines, ., get, (, index, ), ;, }, return, last, ;, }, public, List, getLines, (, ), {, return]
[(, index, ), ;, }, return, last, ;, }, public, List, getLines, (, ), {, return, Collections, ., unmodifiableList, (]
[(, index, ), ;, }, return, last, ;, }, public, List, getLines, (, ), {, return, Collections, ., unmodifiableList, (]
[., unmodifiableList, (, this, ., lines, ), ;, }, public, Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =]
[lines, ), ;, }, public, Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height, =]
[Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height, =, 0.0, ;, Iterator, iterator, =]
[Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height, =, 0.0, ;, Iterator, iterator, =]
[Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height, =, 0.0, ;, Iterator, iterator, =]
[0.0, ;, double, height, =, 0.0, ;, Iterator, iterator, =, this, ., lines, ., iterator, (, ), ;, while, (]
[0.0, ;, double, height, =, 0.0, ;, Iterator, iterator, =, this, ., lines, ., iterator, (, ), ;, while, (]
[this, ., lines, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextLine, line, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextLine, line, =, (, TextLine, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextLine, line, =, (, TextLine, )]
[hasNext, (, ), ), {, TextLine, line, =, (, TextLine, ), iterator, ., next, (, ), ;, Size2D, dimension, =]
[hasNext, (, ), ), {, TextLine, line, =, (, TextLine, ), iterator, ., next, (, ), ;, Size2D, dimension, =]
[{, TextLine, line, =, (, TextLine, ), iterator, ., next, (, ), ;, Size2D, dimension, =, line, ., calculateDimensions, (]
[=, (, TextLine, ), iterator, ., next, (, ), ;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;]
[TextLine, ), iterator, ., next, (, ), ;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, width, =]
[TextLine, ), iterator, ., next, (, ), ;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, width, =]
[next, (, ), ;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, width, =, Math, ., max, (]
[), ;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, width, =, Math, ., max, (, width, ,]
[), ;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, width, =, Math, ., max, (, width, ,]
[calculateDimensions, (, g2, ), ;, width, =, Math, ., max, (, width, ,, dimension, ., getWidth, (, ), ), ;]
[g2, ), ;, width, =, Math, ., max, (, width, ,, dimension, ., getWidth, (, ), ), ;, height, =]
[g2, ), ;, width, =, Math, ., max, (, width, ,, dimension, ., getWidth, (, ), ), ;, height, =]
[;, width, =, Math, ., max, (, width, ,, dimension, ., getWidth, (, ), ), ;, height, =, height, +]
[;, width, =, Math, ., max, (, width, ,, dimension, ., getWidth, (, ), ), ;, height, =, height, +]
[,, dimension, ., getWidth, (, ), ), ;, height, =, height, +, dimension, ., getHeight, (, ), ;, }, return]
[getWidth, (, ), ), ;, height, =, height, +, dimension, ., getHeight, (, ), ;, }, return, new, Size2D, (]
[), ), ;, height, =, height, +, dimension, ., getHeight, (, ), ;, }, return, new, Size2D, (, width, ,]
[,, float, anchorY, ,, TextBlockAnchor, anchor, ,, float, rotateX, ,, float, rotateY, ,, double, angle, ), {, Size2D, d, =]
[anchorY, ,, TextBlockAnchor, anchor, ,, float, rotateX, ,, float, rotateY, ,, double, angle, ), {, Size2D, d, =, calculateDimensions, (]
[float, rotateY, ,, double, angle, ), {, Size2D, d, =, calculateDimensions, (, g2, ), ;, float, [, ], offsets, =]
[,, double, angle, ), {, Size2D, d, =, calculateDimensions, (, g2, ), ;, float, [, ], offsets, =, calculateOffsets, (]
[angle, ), {, Size2D, d, =, calculateDimensions, (, g2, ), ;, float, [, ], offsets, =, calculateOffsets, (, anchor, ,]
[angle, ), {, Size2D, d, =, calculateDimensions, (, g2, ), ;, float, [, ], offsets, =, calculateOffsets, (, anchor, ,]
[calculateDimensions, (, g2, ), ;, float, [, ], offsets, =, calculateOffsets, (, anchor, ,, d, ., getWidth, (, ), ,]
[calculateDimensions, (, g2, ), ;, float, [, ], offsets, =, calculateOffsets, (, anchor, ,, d, ., getWidth, (, ), ,]
[calculateOffsets, (, anchor, ,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Rectangle2D, bounds, =]
[., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (]
[., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (]
[(, ), ,, d, ., getHeight, (, ), ), ;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (, anchorX, +]
[(, ), ,, d, ., getHeight, (, ), ), ;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (, anchorX, +]
[,, d, ., getHeight, (, ), ), ;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (, anchorX, +, offsets, []
[getHeight, (, ), ), ;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (, anchorX, +, offsets, [, 0, ], ,]
[getHeight, (, ), ), ;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (, anchorX, +, offsets, [, 0, ], ,]
[), ), ;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (, anchorX, +, offsets, [, 0, ], ,, anchorY, +]
[), ), ;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (, anchorX, +, offsets, [, 0, ], ,, anchorY, +]
[;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (, anchorX, +, offsets, [, 0, ], ,, anchorY, +, offsets, []
[=, new, Rectangle2D, ., Double, (, anchorX, +, offsets, [, 0, ], ,, anchorY, +, offsets, [, 1, ], ,]
[=, new, Rectangle2D, ., Double, (, anchorX, +, offsets, [, 0, ], ,, anchorY, +, offsets, [, 1, ], ,]
[anchorX, +, offsets, [, 0, ], ,, anchorY, +, offsets, [, 1, ], ,, d, ., getWidth, (, ), ,]
[anchorX, +, offsets, [, 0, ], ,, anchorY, +, offsets, [, 1, ], ,, d, ., getWidth, (, ), ,]
[[, 1, ], ,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Shape, rotatedBounds, =]
[[, 1, ], ,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Shape, rotatedBounds, =]
[d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Shape, rotatedBounds, =, ShapeUtilities, ., rotateShape, (]
[getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Shape, rotatedBounds, =, ShapeUtilities, ., rotateShape, (, bounds, ,]
[), ,, d, ., getHeight, (, ), ), ;, Shape, rotatedBounds, =, ShapeUtilities, ., rotateShape, (, bounds, ,, angle, ,]
[d, ., getHeight, (, ), ), ;, Shape, rotatedBounds, =, ShapeUtilities, ., rotateShape, (, bounds, ,, angle, ,, rotateX, ,]
[), ), ;, Shape, rotatedBounds, =, ShapeUtilities, ., rotateShape, (, bounds, ,, angle, ,, rotateX, ,, rotateY, ), ;, return]
[rotatedBounds, ;, }, public, void, draw, (, Graphics2D, g2, ,, float, x, ,, float, y, ,, TextBlockAnchor, anchor, ), {]
[}, public, void, draw, (, Graphics2D, g2, ,, float, x, ,, float, y, ,, TextBlockAnchor, anchor, ), {, draw, (]
[void, draw, (, Graphics2D, g2, ,, float, x, ,, float, y, ,, TextBlockAnchor, anchor, ), {, draw, (, g2, ,]
[(, Graphics2D, g2, ,, float, x, ,, float, y, ,, TextBlockAnchor, anchor, ), {, draw, (, g2, ,, x, ,]
[g2, ,, float, x, ,, float, y, ,, TextBlockAnchor, anchor, ), {, draw, (, g2, ,, x, ,, y, ,]
[float, x, ,, float, y, ,, TextBlockAnchor, anchor, ), {, draw, (, g2, ,, x, ,, y, ,, anchor, ,]
[,, float, y, ,, TextBlockAnchor, anchor, ), {, draw, (, g2, ,, x, ,, y, ,, anchor, ,, 0.0f, ,]
[y, ,, TextBlockAnchor, anchor, ), {, draw, (, g2, ,, x, ,, y, ,, anchor, ,, 0.0f, ,, 0.0f, ,]
[,, float, anchorY, ,, TextBlockAnchor, anchor, ,, float, rotateX, ,, float, rotateY, ,, double, angle, ), {, Size2D, d, =]
[anchorY, ,, TextBlockAnchor, anchor, ,, float, rotateX, ,, float, rotateY, ,, double, angle, ), {, Size2D, d, =, calculateDimensions, (]
[float, rotateY, ,, double, angle, ), {, Size2D, d, =, calculateDimensions, (, g2, ), ;, float, [, ], offsets, =]
[,, double, angle, ), {, Size2D, d, =, calculateDimensions, (, g2, ), ;, float, [, ], offsets, =, calculateOffsets, (]
[angle, ), {, Size2D, d, =, calculateDimensions, (, g2, ), ;, float, [, ], offsets, =, calculateOffsets, (, anchor, ,]
[angle, ), {, Size2D, d, =, calculateDimensions, (, g2, ), ;, float, [, ], offsets, =, calculateOffsets, (, anchor, ,]
[calculateDimensions, (, g2, ), ;, float, [, ], offsets, =, calculateOffsets, (, anchor, ,, d, ., getWidth, (, ), ,]
[calculateDimensions, (, g2, ), ;, float, [, ], offsets, =, calculateOffsets, (, anchor, ,, d, ., getWidth, (, ), ,]
[calculateOffsets, (, anchor, ,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Iterator, iterator, =]
[calculateOffsets, (, anchor, ,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Iterator, iterator, =]
[calculateOffsets, (, anchor, ,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Iterator, iterator, =]
[., getHeight, (, ), ), ;, Iterator, iterator, =, this, ., lines, ., iterator, (, ), ;, float, yCursor, =]
[), ;, Iterator, iterator, =, this, ., lines, ., iterator, (, ), ;, float, yCursor, =, 0.0f, ;, while, (]
[), ;, Iterator, iterator, =, this, ., lines, ., iterator, (, ), ;, float, yCursor, =, 0.0f, ;, while, (]
[(, ), ;, float, yCursor, =, 0.0f, ;, while, (, iterator, ., hasNext, (, ), ), {, TextLine, line, =]
[float, yCursor, =, 0.0f, ;, while, (, iterator, ., hasNext, (, ), ), {, TextLine, line, =, (, TextLine, )]
[float, yCursor, =, 0.0f, ;, while, (, iterator, ., hasNext, (, ), ), {, TextLine, line, =, (, TextLine, )]
[hasNext, (, ), ), {, TextLine, line, =, (, TextLine, ), iterator, ., next, (, ), ;, Size2D, dimension, =]
[hasNext, (, ), ), {, TextLine, line, =, (, TextLine, ), iterator, ., next, (, ), ;, Size2D, dimension, =]
[{, TextLine, line, =, (, TextLine, ), iterator, ., next, (, ), ;, Size2D, dimension, =, line, ., calculateDimensions, (]
[), iterator, ., next, (, ), ;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, float, lineOffset, =]
[(, ), ;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, float, lineOffset, =, 0.0f, ;, if, (]
[(, ), ;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, float, lineOffset, =, 0.0f, ;, if, (]
[(, ), ;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, float, lineOffset, =, 0.0f, ;, if, (]
[dimension, =, line, ., calculateDimensions, (, g2, ), ;, float, lineOffset, =, 0.0f, ;, if, (, this, ., lineAlignment, ==]
[dimension, =, line, ., calculateDimensions, (, g2, ), ;, float, lineOffset, =, 0.0f, ;, if, (, this, ., lineAlignment, ==]
[(, g2, ), ;, float, lineOffset, =, 0.0f, ;, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., CENTER, ), {]
[), ;, float, lineOffset, =, 0.0f, ;, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., CENTER, ), {, lineOffset, =]
[), ;, float, lineOffset, =, 0.0f, ;, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., CENTER, ), {, lineOffset, =]
[lineOffset, =, 0.0f, ;, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., CENTER, ), {, lineOffset, =, (, float, )]
[=, 0.0f, ;, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., CENTER, ), {, lineOffset, =, (, float, ), (]
[=, 0.0f, ;, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., CENTER, ), {, lineOffset, =, (, float, ), (]
[=, 0.0f, ;, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., CENTER, ), {, lineOffset, =, (, float, ), (]
[., lineAlignment, ==, HorizontalAlignment, ., CENTER, ), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -]
[., lineAlignment, ==, HorizontalAlignment, ., CENTER, ), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -]
[{, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), ), /]
[(, d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), ), /, 2.0f, ;, }, else, if, (]
[(, d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), ), /, 2.0f, ;, }, else, if, (]
[(, d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), ), /, 2.0f, ;, }, else, if, (]
[(, ), -, dimension, ., getWidth, (, ), ), /, 2.0f, ;, }, else, if, (, this, ., lineAlignment, ==]
[(, ), -, dimension, ., getWidth, (, ), ), /, 2.0f, ;, }, else, if, (, this, ., lineAlignment, ==]
[getWidth, (, ), ), /, 2.0f, ;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {]
[), ), /, 2.0f, ;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =]
[2.0f, ;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (, float, )]
[;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (, float, ), (]
[;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (, float, ), (]
[;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (, float, ), (]
[., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -]
[., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -]
[lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), ), ;, }]
[lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), ), ;, }]
[), (, d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), ), ;, }, line, ., draw, (]
[d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), ), ;, }, line, ., draw, (, g2, ,]
[d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), ), ;, }, line, ., draw, (, g2, ,]
[d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), ), ;, }, line, ., draw, (, g2, ,]
[getWidth, (, ), -, dimension, ., getWidth, (, ), ), ;, }, line, ., draw, (, g2, ,, anchorX, +]
[getWidth, (, ), -, dimension, ., getWidth, (, ), ), ;, }, line, ., draw, (, g2, ,, anchorX, +]
[), -, dimension, ., getWidth, (, ), ), ;, }, line, ., draw, (, g2, ,, anchorX, +, offsets, []
[., getWidth, (, ), ), ;, }, line, ., draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +]
[(, ), ), ;, }, line, ., draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,]
[(, ), ), ;, }, line, ., draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,]
[(, ), ), ;, }, line, ., draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,]
[), ;, }, line, ., draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,, anchorY, +]
[), ;, }, line, ., draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,, anchorY, +]
[}, line, ., draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,, anchorY, +, offsets, []
[draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,, anchorY, +, offsets, [, 1, ], +]
[g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,, anchorY, +, offsets, [, 1, ], +, yCursor, ,]
[g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,, anchorY, +, offsets, [, 1, ], +, yCursor, ,]
[offsets, [, 0, ], +, lineOffset, ,, anchorY, +, offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,]
[0, ], +, lineOffset, ,, anchorY, +, offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,]
[+, lineOffset, ,, anchorY, +, offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,]
[anchorY, +, offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;]
[offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor, =]
[offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor, =]
[1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor, =, yCursor, +]
[yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor, =, yCursor, +, (, float, )]
[yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor, =, yCursor, +, (, float, )]
[float, [, ], calculateOffsets, (, TextBlockAnchor, anchor, ,, double, width, ,, double, height, ), {, float, [, ], result, =]
[calculateOffsets, (, TextBlockAnchor, anchor, ,, double, width, ,, double, height, ), {, float, [, ], result, =, new, float, []
[width, ,, double, height, ), {, float, [, ], result, =, new, float, [, 2, ], ;, float, xAdj, =]
[{, float, [, ], result, =, new, float, [, 2, ], ;, float, xAdj, =, 0.0f, ;, float, yAdj, =]
[result, =, new, float, [, 2, ], ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[result, =, new, float, [, 2, ], ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[result, =, new, float, [, 2, ], ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[result, =, new, float, [, 2, ], ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (]
[new, float, [, 2, ], ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==]
[new, float, [, 2, ], ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==]
[], ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||]
[], ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||]
[float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==]
[float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==]
[;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||]
[;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||]
[yAdj, =, 0.0f, ;, if, (, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==]
[yAdj, =, 0.0f, ;, if, (, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==]
[(, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {]
[==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =]
[==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =]
[TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, )]
[||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -]
[==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /]
[==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else, if, (]
[==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else, if, (]
[==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else, if, (]
[==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else, if, (]
[., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else, if, (, anchor, ==]
[., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else, if, (, anchor, ==]
[xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||]
[xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||]
[(, float, ), -, width, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==]
[(, float, ), -, width, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==]
[width, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||]
[width, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||]
[2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor, ==]
[2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor, ==]
[(, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {]
[==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =]
[TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, )]
[||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -]
[CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if, (]
[CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if, (]
[CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if, (]
[CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if, (]
[anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor, ==]
[anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor, ==]
[BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||]
[BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||]
[{, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor, ==]
[{, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor, ==]
[float, ), -, width, ;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||]
[float, ), -, width, ;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||]
[-, width, ;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==]
[-, width, ;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==]
[(, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {]
[==, TextBlockAnchor, ., TOP_LEFT, ||, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||]
[==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||]
[., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==]
[., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==]
[yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||]
[yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||]
[0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==]
[0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==]
[(, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {]
[==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, )]
[||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -]
[==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /]
[==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else, if, (]
[==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else, if, (]
[==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else, if, (]
[==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else, if, (]
[., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else, if, (, anchor, ==]
[., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else, if, (, anchor, ==]
[yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||]
[yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||]
[(, float, ), -, height, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[(, float, ), -, height, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[height, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||]
[height, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||]
[2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==]
[(, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {]
[==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =]
[BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, )]
[||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -]
[TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -, height, ;, }]
[TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -, height, ;, }]
[BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -, height, ;, }, result, []
[==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -, height, ;, }, result, [, 0, ], =]
[., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -, height, ;, }, result, [, 0, ], =, xAdj, ;]
[., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -, height, ;, }, result, [, 0, ], =, xAdj, ;]
[), {, yAdj, =, (, float, ), -, height, ;, }, result, [, 0, ], =, xAdj, ;, result, []
[=, (, float, ), -, height, ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =]
[), -, height, ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return]
[[, 1, ], =, yAdj, ;, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[[, 1, ], =, yAdj, ;, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[], =, yAdj, ;, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, obj, instanceof, TextBlock, ), {, final, TextBlock, block, =]
[), {, return, true, ;, }, if, (, obj, instanceof, TextBlock, ), {, final, TextBlock, block, =, (, TextBlock, )]
[true, ;, }, if, (, obj, instanceof, TextBlock, ), {, final, TextBlock, block, =, (, TextBlock, ), obj, ;, return]
[true, ;, }, if, (, obj, instanceof, TextBlock, ), {, final, TextBlock, block, =, (, TextBlock, ), obj, ;, return]
[true, ;, }, if, (, obj, instanceof, TextBlock, ), {, final, TextBlock, block, =, (, TextBlock, ), obj, ;, return]
[instanceof, TextBlock, ), {, final, TextBlock, block, =, (, TextBlock, ), obj, ;, return, this, ., lines, ., equals, (]
[instanceof, TextBlock, ), {, final, TextBlock, block, =, (, TextBlock, ), obj, ;, return, this, ., lines, ., equals, (]
[=, (, TextBlock, ), obj, ;, return, this, ., lines, ., equals, (, block, ., lines, ), ;, }, return]
[., equals, (, block, ., lines, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return]
[equals, (, block, ., lines, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (]
[equals, (, block, ., lines, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (]
[equals, (, block, ., lines, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (]
[equals, (, block, ., lines, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (]
[lines, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., lines, !=]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., lines, !=, null, ?]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., lines, !=, null, ?]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., lines, !=, null, ?]
[hashCode, (, ), {, return, (, this, ., lines, !=, null, ?, this, ., lines, ., hashCode, (, ), :]
