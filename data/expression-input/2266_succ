[;, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, Line2D, shape]
[;, double, x, =, plotArea, ., getMinX, (, ), +, (, plotArea, ., getWidth, (, ), /, 2, ), ;]
[;, shape, ., setLine, (, x, ,, plotArea, ., getMinY, (, ), ,, x, ,, plotArea, ., getMaxY, (, )]
[+, (, plotArea, ., getWidth, (, ), /, 2, ), ;, shape, ., setLine, (, x, ,, plotArea, ., getMinY]
[., getMinX, (, ), +, (, plotArea, ., getWidth, (, ), /, 2, ), ;, shape, ., setLine, (, x]
[;, shape, ., setLine, (, x, ,, plotArea, ., getMinY, (, ), ,, x, ,, plotArea, ., getMaxY, (, )]
[), ;, shape, ., setLine, (, x, ,, plotArea, ., getMinY, (, ), ,, x, ,, plotArea, ., getMaxY, (]
[/, 2, ), ;, shape, ., setLine, (, x, ,, plotArea, ., getMinY, (, ), ,, x, ,, plotArea, .]
[., getWidth, (, ), /, 2, ), ;, shape, ., setLine, (, x, ,, plotArea, ., getMinY, (, ), ,]
[), ;, shape, ., setLine, (, x, ,, plotArea, ., getMinY, (, ), ,, x, ,, plotArea, ., getMaxY, (]
[;, Shape, s, =, shape, ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), )]
[., setLine, (, x, ,, plotArea, ., getMinY, (, ), ,, x, ,, plotArea, ., getMaxY, (, ), ), ;]
[,, plotArea, ., getMinY, (, ), ,, x, ,, plotArea, ., getMaxY, (, ), ), ;, Shape, s, =, shape]
[,, x, ,, plotArea, ., getMaxY, (, ), ), ;, Shape, s, =, shape, ;, if, (, (, rotate, !=]
[., getMinY, (, ), ,, x, ,, plotArea, ., getMaxY, (, ), ), ;, Shape, s, =, shape, ;, if]
[,, plotArea, ., getMaxY, (, ), ), ;, Shape, s, =, shape, ;, if, (, (, rotate, !=, null, )]
[), ;, Shape, s, =, shape, ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, )]
[., getMaxY, (, ), ), ;, Shape, s, =, shape, ;, if, (, (, rotate, !=, null, ), &&, (]
[;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), .]
[), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (]
[&&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (]
[), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX]
[!=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate]
[), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX]
[), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (]
[), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY]
[!=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate]
[), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY]
[;, s, =, getTransform, (, ), ., createTransformedShape, (, s, ), ;, }, defaultDisplay, (, g2, ,, s, ), ;]
[., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, s, =]
[,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, s, =, getTransform, (, ), .]
[,, rotate, ., getY, (, ), ), ;, s, =, getTransform, (, ), ., createTransformedShape, (, s, ), ;, }]
[., getX, (, ), ,, rotate, ., getY, (, ), ), ;, s, =, getTransform, (, ), ., createTransformedShape, (]
[), ;, s, =, getTransform, (, ), ., createTransformedShape, (, s, ), ;, }, defaultDisplay, (, g2, ,, s, )]
[., getY, (, ), ), ;, s, =, getTransform, (, ), ., createTransformedShape, (, s, ), ;, }, defaultDisplay, (]
[=, getTransform, (, ), ., createTransformedShape, (, s, ), ;, }, defaultDisplay, (, g2, ,, s, ), ;, }, public]
[;, }, defaultDisplay, (, g2, ,, s, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., createTransformedShape, (, s, ), ;, }, defaultDisplay, (, g2, ,, s, ), ;, }, public, boolean, equals, (, Object]
[), ;, }, defaultDisplay, (, g2, ,, s, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[,, s, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, LineNeedle, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, LineNeedle, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, LineNeedle, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, LineNeedle, ), ), {, return, false, ;, }, return, super, ., equals]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (]
[instanceof, LineNeedle, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, return, super, .]
[;, }, public, int, hashCode, (, ), {, return, super, ., hashCode, (, ), ;, }, public, Object, clone, (]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode, (, ), ;]
[), ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode, (, ), ;, }, public, Object, clone]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, }]
[., hashCode, (, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, )]
[;, }, }]
[., clone, (, ), ;, }, }]
