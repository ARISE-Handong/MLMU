[;, for, (, double, i, =, 0, ;, i, <, samples, ;, i, ++, ), {, double, [, ], vector]
[;, i, <, samples, ;, i, ++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;]
[;, i, ++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new]
[<, samples, ;, i, ++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point]
[;, i, ++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new]
[), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (, vector]
[++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (]
[;, Vector2D, point, =, new, Vector2D, (, vector, ), ;, points, ., add, (, point, ), ;, }, points, =]
[., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (, vector, ), ;, points, ., add, (, point, )]
[;, points, ., add, (, point, ), ;, }, points, =, normalize, (, points, ), ;, List, <, Vector2D, >]
[), ;, points, ., add, (, point, ), ;, }, points, =, normalize, (, points, ), ;, List, <, Vector2D]
[;, }, points, =, normalize, (, points, ), ;, List, <, Vector2D, >, circlePoints, =, new, ArrayList, <, Vector2D, >]
[., add, (, point, ), ;, }, points, =, normalize, (, points, ), ;, List, <, Vector2D, >, circlePoints, =]
[), ;, }, points, =, normalize, (, points, ), ;, List, <, Vector2D, >, circlePoints, =, new, ArrayList, <, Vector2D]
[=, normalize, (, points, ), ;, List, <, Vector2D, >, circlePoints, =, new, ArrayList, <, Vector2D, >, (, ), ;]
[;, List, <, Vector2D, >, circlePoints, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, Vector2D, p, :]
[), ;, List, <, Vector2D, >, circlePoints, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, Vector2D, p]
[;, for, (, Vector2D, p, :, points, ), {, double, criteria, =, FastMath, ., pow, (, p, ., getX, (]
[), {, double, criteria, =, FastMath, ., pow, (, p, ., getX, (, ), ,, 2, ), +, FastMath, .]
[;, if, (, criteria, <, 1.0, ), {, circlePoints, ., add, (, p, ), ;, }, }, return, circlePoints, ;]
[+, FastMath, ., pow, (, p, ., getY, (, ), ,, 2, ), ;, if, (, criteria, <, 1.0, )]
[., pow, (, p, ., getX, (, ), ,, 2, ), +, FastMath, ., pow, (, p, ., getY, (]
[,, 2, ), +, FastMath, ., pow, (, p, ., getY, (, ), ,, 2, ), ;, if, (, criteria]
[., getX, (, ), ,, 2, ), +, FastMath, ., pow, (, p, ., getY, (, ), ,, 2, )]
[), +, FastMath, ., pow, (, p, ., getY, (, ), ,, 2, ), ;, if, (, criteria, <, 1.0]
[;, if, (, criteria, <, 1.0, ), {, circlePoints, ., add, (, p, ), ;, }, }, return, circlePoints, ;]
[., pow, (, p, ., getY, (, ), ,, 2, ), ;, if, (, criteria, <, 1.0, ), {, circlePoints]
[,, 2, ), ;, if, (, criteria, <, 1.0, ), {, circlePoints, ., add, (, p, ), ;, }, }]
[., getY, (, ), ,, 2, ), ;, if, (, criteria, <, 1.0, ), {, circlePoints, ., add, (, p]
[), ;, if, (, criteria, <, 1.0, ), {, circlePoints, ., add, (, p, ), ;, }, }, return, circlePoints]
[), {, circlePoints, ., add, (, p, ), ;, }, }, return, circlePoints, ;, }, public, static, List, <, Vector2D]
[<, 1.0, ), {, circlePoints, ., add, (, p, ), ;, }, }, return, circlePoints, ;, }, public, static, List]
[), {, circlePoints, ., add, (, p, ), ;, }, }, return, circlePoints, ;, }, public, static, List, <, Vector2D]
[;, }, }, return, circlePoints, ;, }, public, static, List, <, Vector2D, >, makeRandom, (, int, samples, ,, RandomVectorGenerator, generator]
[., add, (, p, ), ;, }, }, return, circlePoints, ;, }, public, static, List, <, Vector2D, >, makeRandom, (]
[), ;, }, }, return, circlePoints, ;, }, public, static, List, <, Vector2D, >, makeRandom, (, int, samples, ,, RandomVectorGenerator]
[;, }, public, static, List, <, Vector2D, >, makeRandom, (, int, samples, ,, RandomVectorGenerator, generator, ), {, List, <, Vector2D]
[;, for, (, double, i, =, 0, ;, i, <, samples, ;, i, ++, ), {, double, [, ], vector]
[;, i, <, samples, ;, i, ++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;]
[;, i, ++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new]
[<, samples, ;, i, ++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point]
[;, i, ++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new]
[), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (, vector]
[++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (]
[;, Vector2D, point, =, new, Vector2D, (, vector, ), ;, points, ., add, (, point, ), ;, }, return, normalize]
[., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (, vector, ), ;, points, ., add, (, point, )]
[;, points, ., add, (, point, ), ;, }, return, normalize, (, points, ), ;, }, public, static, List, <]
[), ;, points, ., add, (, point, ), ;, }, return, normalize, (, points, ), ;, }, public, static, List]
[;, }, return, normalize, (, points, ), ;, }, public, static, List, <, Vector2D, >, normalize, (, final, List, <]
[., add, (, point, ), ;, }, return, normalize, (, points, ), ;, }, public, static, List, <, Vector2D, >]
[), ;, }, return, normalize, (, points, ), ;, }, public, static, List, <, Vector2D, >, normalize, (, final, List]
[;, }, public, static, List, <, Vector2D, >, normalize, (, final, List, <, Vector2D, >, input, ), {, double, minX]
[), ;, }, public, static, List, <, Vector2D, >, normalize, (, final, List, <, Vector2D, >, input, ), {, double]
[;, double, maxX, =, Double, ., MIN_VALUE, ;, for, (, Vector2D, p, :, input, ), {, minX, =, FastMath, .]
[., MAX_VALUE, ;, double, maxX, =, Double, ., MIN_VALUE, ;, for, (, Vector2D, p, :, input, ), {, minX, =]
[;, for, (, Vector2D, p, :, input, ), {, minX, =, FastMath, ., min, (, minX, ,, p, ., getX]
[., MIN_VALUE, ;, for, (, Vector2D, p, :, input, ), {, minX, =, FastMath, ., min, (, minX, ,, p]
[), {, minX, =, FastMath, ., min, (, minX, ,, p, ., getX, (, ), ), ;, maxX, =, FastMath]
[=, FastMath, ., min, (, minX, ,, p, ., getX, (, ), ), ;, maxX, =, FastMath, ., max, (]
[;, maxX, =, FastMath, ., max, (, maxX, ,, p, ., getX, (, ), ), ;, }, double, minY, ,]
[., min, (, minX, ,, p, ., getX, (, ), ), ;, maxX, =, FastMath, ., max, (, maxX, ,]
[,, p, ., getX, (, ), ), ;, maxX, =, FastMath, ., max, (, maxX, ,, p, ., getX, (]
[), ;, maxX, =, FastMath, ., max, (, maxX, ,, p, ., getX, (, ), ), ;, }, double, minY]
[., getX, (, ), ), ;, maxX, =, FastMath, ., max, (, maxX, ,, p, ., getX, (, ), )]
[=, FastMath, ., max, (, maxX, ,, p, ., getX, (, ), ), ;, }, double, minY, ,, maxY, ;]
[;, }, double, minY, ,, maxY, ;, if, (, FastMath, ., abs, (, minX, ), <, 0.1, ), {, minX]
[., max, (, maxX, ,, p, ., getX, (, ), ), ;, }, double, minY, ,, maxY, ;, if, (]
[,, p, ., getX, (, ), ), ;, }, double, minY, ,, maxY, ;, if, (, FastMath, ., abs, (]
[), ;, }, double, minY, ,, maxY, ;, if, (, FastMath, ., abs, (, minX, ), <, 0.1, ), {]
[., getX, (, ), ), ;, }, double, minY, ,, maxY, ;, if, (, FastMath, ., abs, (, minX, )]
[), {, minX, =, minY, =, 0.0, ;, maxX, =, maxY, =, 1.0, ;, }, else, {, minX, =, minY]
[<, 0.1, ), {, minX, =, minY, =, 0.0, ;, maxX, =, maxY, =, 1.0, ;, }, else, {, minX]
[., abs, (, minX, ), <, 0.1, ), {, minX, =, minY, =, 0.0, ;, maxX, =, maxY, =, 1.0]
[), <, 0.1, ), {, minX, =, minY, =, 0.0, ;, maxX, =, maxY, =, 1.0, ;, }, else, {]
[), {, minX, =, minY, =, 0.0, ;, maxX, =, maxY, =, 1.0, ;, }, else, {, minX, =, minY]
[=, minY, =, 0.0, ;, maxX, =, maxY, =, 1.0, ;, }, else, {, minX, =, minY, =, -, FastMath]
[=, 0.0, ;, maxX, =, maxY, =, 1.0, ;, }, else, {, minX, =, minY, =, -, FastMath, ., sqrt]
[;, maxX, =, maxY, =, 1.0, ;, }, else, {, minX, =, minY, =, -, FastMath, ., sqrt, (, 3]
[=, maxY, =, 1.0, ;, }, else, {, minX, =, minY, =, -, FastMath, ., sqrt, (, 3, ), ;]
[=, 1.0, ;, }, else, {, minX, =, minY, =, -, FastMath, ., sqrt, (, 3, ), ;, maxX, =]
[;, }, else, {, minX, =, minY, =, -, FastMath, ., sqrt, (, 3, ), ;, maxX, =, maxY, =]
[=, minY, =, -, FastMath, ., sqrt, (, 3, ), ;, maxX, =, maxY, =, FastMath, ., sqrt, (, 3]
[=, -, FastMath, ., sqrt, (, 3, ), ;, maxX, =, maxY, =, FastMath, ., sqrt, (, 3, ), ;]
[;, maxX, =, maxY, =, FastMath, ., sqrt, (, 3, ), ;, }, double, rangeX, =, maxX, -, minX, ;]
[;, maxX, =, maxY, =, FastMath, ., sqrt, (, 3, ), ;, }, double, rangeX, =, maxX, -, minX, ;]
[., sqrt, (, 3, ), ;, maxX, =, maxY, =, FastMath, ., sqrt, (, 3, ), ;, }, double, rangeX]
[), ;, maxX, =, maxY, =, FastMath, ., sqrt, (, 3, ), ;, }, double, rangeX, =, maxX, -, minX]
[=, maxY, =, FastMath, ., sqrt, (, 3, ), ;, }, double, rangeX, =, maxX, -, minX, ;, double, rangeY]
[=, FastMath, ., sqrt, (, 3, ), ;, }, double, rangeX, =, maxX, -, minX, ;, double, rangeY, =, maxY]
[;, }, double, rangeX, =, maxX, -, minX, ;, double, rangeY, =, maxY, -, minY, ;, List, <, Vector2D, >]
[., sqrt, (, 3, ), ;, }, double, rangeX, =, maxX, -, minX, ;, double, rangeY, =, maxY, -, minY]
[), ;, }, double, rangeX, =, maxX, -, minX, ;, double, rangeY, =, maxY, -, minY, ;, List, <, Vector2D]
[;, double, rangeY, =, maxY, -, minY, ;, List, <, Vector2D, >, points, =, new, ArrayList, <, Vector2D, >, (]
[-, minX, ;, double, rangeY, =, maxY, -, minY, ;, List, <, Vector2D, >, points, =, new, ArrayList, <, Vector2D]
[;, double, rangeY, =, maxY, -, minY, ;, List, <, Vector2D, >, points, =, new, ArrayList, <, Vector2D, >, (]
[;, List, <, Vector2D, >, points, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, Vector2D, p, :]
[-, minY, ;, List, <, Vector2D, >, points, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, Vector2D]
[;, List, <, Vector2D, >, points, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, Vector2D, p, :]
[;, for, (, Vector2D, p, :, input, ), {, double, [, ], arr, =, p, ., toArray, (, ), ;]
[), {, double, [, ], arr, =, p, ., toArray, (, ), ;, arr, [, 0, ], =, (, arr]
[;, arr, [, 0, ], =, (, arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1]
[., toArray, (, ), ;, arr, [, 0, ], =, (, arr, [, 0, ], -, minX, ), /, rangeX]
[=, (, arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ]]
[[, 0, ], =, (, arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr]
[], =, (, arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1]
[;, arr, [, 1, ], =, (, arr, [, 1, ], -, minY, ), /, rangeY, *, 2, -, 1]
[-, 1, ;, arr, [, 1, ], =, (, arr, [, 1, ], -, minY, ), /, rangeY, *, 2]
[*, 2, -, 1, ;, arr, [, 1, ], =, (, arr, [, 1, ], -, minY, ), /, rangeY]
[/, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =, (, arr, [, 1, ], -, minY, )]
[), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =, (, arr, [, 1, ], -, minY]
[-, minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =, (, arr, [, 1, ]]
[[, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =, (, arr]
[], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =, (, arr, [, 1]
[), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =, (, arr, [, 1, ], -, minY]
[*, 2, -, 1, ;, arr, [, 1, ], =, (, arr, [, 1, ], -, minY, ), /, rangeY]
[-, 1, ;, arr, [, 1, ], =, (, arr, [, 1, ], -, minY, ), /, rangeY, *, 2]
[;, arr, [, 1, ], =, (, arr, [, 1, ], -, minY, ), /, rangeY, *, 2, -, 1]
[=, (, arr, [, 1, ], -, minY, ), /, rangeY, *, 2, -, 1, ;, points, ., add, (]
[[, 1, ], =, (, arr, [, 1, ], -, minY, ), /, rangeY, *, 2, -, 1, ;, points]
[], =, (, arr, [, 1, ], -, minY, ), /, rangeY, *, 2, -, 1, ;, points, ., add]
[;, points, ., add, (, new, Vector2D, (, arr, ), ), ;, }, return, points, ;, }, @, SuppressWarnings, (]
[-, 1, ;, points, ., add, (, new, Vector2D, (, arr, ), ), ;, }, return, points, ;, }, @]
[*, 2, -, 1, ;, points, ., add, (, new, Vector2D, (, arr, ), ), ;, }, return, points, ;]
[/, rangeY, *, 2, -, 1, ;, points, ., add, (, new, Vector2D, (, arr, ), ), ;, }, return]
[), /, rangeY, *, 2, -, 1, ;, points, ., add, (, new, Vector2D, (, arr, ), ), ;, }]
[-, minY, ), /, rangeY, *, 2, -, 1, ;, points, ., add, (, new, Vector2D, (, arr, ), )]
[[, 1, ], -, minY, ), /, rangeY, *, 2, -, 1, ;, points, ., add, (, new, Vector2D, (]
[], -, minY, ), /, rangeY, *, 2, -, 1, ;, points, ., add, (, new, Vector2D, (, arr, )]
[), /, rangeY, *, 2, -, 1, ;, points, ., add, (, new, Vector2D, (, arr, ), ), ;, }]
[*, 2, -, 1, ;, points, ., add, (, new, Vector2D, (, arr, ), ), ;, }, return, points, ;]
[-, 1, ;, points, ., add, (, new, Vector2D, (, arr, ), ), ;, }, return, points, ;, }, @]
[;, points, ., add, (, new, Vector2D, (, arr, ), ), ;, }, return, points, ;, }, @, SuppressWarnings, (]
[;, }, return, points, ;, }, @, SuppressWarnings, (, "serial", ), public, static, class, Display, extends, ExampleFrame, {, public, Display]
[., add, (, new, Vector2D, (, arr, ), ), ;, }, return, points, ;, }, @, SuppressWarnings, (, "serial", )]
[), ;, }, return, points, ;, }, @, SuppressWarnings, (, "serial", ), public, static, class, Display, extends, ExampleFrame, {, public]
[), ), ;, }, return, points, ;, }, @, SuppressWarnings, (, "serial", ), public, static, class, Display, extends, ExampleFrame, {]
[;, }, @, SuppressWarnings, (, "serial", ), public, static, class, Display, extends, ExampleFrame, {, public, Display, (, ), {, setTitle]
[public, static, class, Display, extends, ExampleFrame, {, public, Display, (, ), {, setTitle, (, "Commons-Math: Pseudo/Quasi-random examples", ), ;, setSize, (, 800]
[), public, static, class, Display, extends, ExampleFrame, {, public, Display, (, ), {, setTitle, (, "Commons-Math: Pseudo/Quasi-random examples", ), ;, setSize, (]
[;, setSize, (, 800, ,, 800, ), ;, setLayout, (, new, GridBagLayout, (, ), ), ;, int, [, ], datasets]
[), ;, setSize, (, 800, ,, 800, ), ;, setLayout, (, new, GridBagLayout, (, ), ), ;, int, [, ]]
[;, setLayout, (, new, GridBagLayout, (, ), ), ;, int, [, ], datasets, =, new, int, [, ], {, 256]
[,, 800, ), ;, setLayout, (, new, GridBagLayout, (, ), ), ;, int, [, ], datasets, =, new, int, []
[), ;, setLayout, (, new, GridBagLayout, (, ), ), ;, int, [, ], datasets, =, new, int, [, ], {]
[;, int, [, ], datasets, =, new, int, [, ], {, 256, ,, 1000, ,, 2500, ,, 1000, }, ;]
[), ;, int, [, ], datasets, =, new, int, [, ], {, 256, ,, 1000, ,, 2500, ,, 1000, }]
[;, List, <, Pair, <, String, ,, RandomVectorGenerator, >, >, generators, =, new, ArrayList, <, Pair, <, String, ,, RandomVectorGenerator]
[;, List, <, Pair, <, String, ,, RandomVectorGenerator, >, >, generators, =, new, ArrayList, <, Pair, <, String, ,, RandomVectorGenerator]
[,, 1000, ,, 2500, ,, 1000, }, ;, List, <, Pair, <, String, ,, RandomVectorGenerator, >, >, generators, =, new]
[,, 2500, ,, 1000, }, ;, List, <, Pair, <, String, ,, RandomVectorGenerator, >, >, generators, =, new, ArrayList, <]
[,, 1000, }, ;, List, <, Pair, <, String, ,, RandomVectorGenerator, >, >, generators, =, new, ArrayList, <, Pair, <]
[}, ;, List, <, Pair, <, String, ,, RandomVectorGenerator, >, >, generators, =, new, ArrayList, <, Pair, <, String, ,]
[;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Uncorrelated\nUniform(JDK)", ,, new, UncorrelatedRandomVectorGenerator, (, 2, ,]
[;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Independent\nRandom(MT)", ,, new, RandomVectorGenerator, (, ), {]
[., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Uncorrelated\nUniform(JDK)", ,, new, UncorrelatedRandomVectorGenerator, (, 2, ,, new, UniformRandomGenerator]
[), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Independent\nRandom(MT)", ,, new, RandomVectorGenerator, (, )]
[,, new, UncorrelatedRandomVectorGenerator, (, 2, ,, new, UniformRandomGenerator, (, new, JDKRandomGenerator, (, ), ), ), ), ), ;, generators, .]
[), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Independent\nRandom(MT)", ,, new, RandomVectorGenerator, (]
[,, new, UniformRandomGenerator, (, new, JDKRandomGenerator, (, ), ), ), ), ), ;, generators, ., add, (, new, Pair, <]
[), ), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Independent\nRandom(MT)", ,, new, RandomVectorGenerator]
[), ), ), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Independent\nRandom(MT)", ,, new]
[;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "HaltonSequence", ,, new, HaltonSequenceGenerator, (, 2, )]
[., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Independent\nRandom(MT)", ,, new, RandomVectorGenerator, (, ), {, RandomGenerator, []
[), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "HaltonSequence", ,, new, HaltonSequenceGenerator, (, 2]
[,, new, RandomVectorGenerator, (, ), {, RandomGenerator, [, ], rngs, =, new, RandomGenerator, [, ], {, new, MersenneTwister, (, 0]
[), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "HaltonSequence", ,, new, HaltonSequenceGenerator, (]
[;, public, double, [, ], nextVector, (, ), {, final, double, [, ], vector, =, new, double, [, 2, ]]
[;, public, double, [, ], nextVector, (, ), {, final, double, [, ], vector, =, new, double, [, 2, ]]
[,, new, MersenneTwister, (, 1, ), }, ;, public, double, [, ], nextVector, (, ), {, final, double, [, ]]
[), ,, new, MersenneTwister, (, 1, ), }, ;, public, double, [, ], nextVector, (, ), {, final, double, []
[}, ;, public, double, [, ], nextVector, (, ), {, final, double, [, ], vector, =, new, double, [, 2]
[), }, ;, public, double, [, ], nextVector, (, ), {, final, double, [, ], vector, =, new, double, []
[;, vector, [, 0, ], =, rngs, [, 0, ], ., nextDouble, (, ), ;, vector, [, 1, ], =]
[], ;, vector, [, 0, ], =, rngs, [, 0, ], ., nextDouble, (, ), ;, vector, [, 1, ]]
[=, rngs, [, 0, ], ., nextDouble, (, ), ;, vector, [, 1, ], =, rngs, [, 1, ], .]
[[, 0, ], =, rngs, [, 0, ], ., nextDouble, (, ), ;, vector, [, 1, ], =, rngs, []
[], =, rngs, [, 0, ], ., nextDouble, (, ), ;, vector, [, 1, ], =, rngs, [, 1, ]]
[;, vector, [, 1, ], =, rngs, [, 1, ], ., nextDouble, (, ), ;, return, vector, ;, }, }]
[., nextDouble, (, ), ;, vector, [, 1, ], =, rngs, [, 1, ], ., nextDouble, (, ), ;, return]
[[, 0, ], ., nextDouble, (, ), ;, vector, [, 1, ], =, rngs, [, 1, ], ., nextDouble, (]
[], ., nextDouble, (, ), ;, vector, [, 1, ], =, rngs, [, 1, ], ., nextDouble, (, ), ;]
[=, rngs, [, 1, ], ., nextDouble, (, ), ;, return, vector, ;, }, }, ), ), ;, generators, .]
[[, 1, ], =, rngs, [, 1, ], ., nextDouble, (, ), ;, return, vector, ;, }, }, ), )]
[], =, rngs, [, 1, ], ., nextDouble, (, ), ;, return, vector, ;, }, }, ), ), ;, generators]
[;, return, vector, ;, }, }, ), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >]
[., nextDouble, (, ), ;, return, vector, ;, }, }, ), ), ;, generators, ., add, (, new, Pair, <]
[[, 1, ], ., nextDouble, (, ), ;, return, vector, ;, }, }, ), ), ;, generators, ., add, (]
[], ., nextDouble, (, ), ;, return, vector, ;, }, }, ), ), ;, generators, ., add, (, new, Pair]
[;, }, }, ), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "HaltonSequence", ,]
[;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "SobolSequence", ,, new, SobolSequenceGenerator, (, 2, )]
[., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "HaltonSequence", ,, new, HaltonSequenceGenerator, (, 2, ), ), )]
[), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "SobolSequence", ,, new, SobolSequenceGenerator, (, 2]
[,, new, HaltonSequenceGenerator, (, 2, ), ), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >]
[), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "SobolSequence", ,, new, SobolSequenceGenerator, (]
[), ), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "SobolSequence", ,, new, SobolSequenceGenerator]
[;, GridBagConstraints, c, =, new, GridBagConstraints, (, ), ;, c, ., fill, =, GridBagConstraints, ., VERTICAL, ;, c, ., gridx]
[., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "SobolSequence", ,, new, SobolSequenceGenerator, (, 2, ), ), )]
[), ;, GridBagConstraints, c, =, new, GridBagConstraints, (, ), ;, c, ., fill, =, GridBagConstraints, ., VERTICAL, ;, c, .]
[,, new, SobolSequenceGenerator, (, 2, ), ), ), ;, GridBagConstraints, c, =, new, GridBagConstraints, (, ), ;, c, ., fill]
[), ), ;, GridBagConstraints, c, =, new, GridBagConstraints, (, ), ;, c, ., fill, =, GridBagConstraints, ., VERTICAL, ;, c]
[), ), ), ;, GridBagConstraints, c, =, new, GridBagConstraints, (, ), ;, c, ., fill, =, GridBagConstraints, ., VERTICAL, ;]
[;, c, ., fill, =, GridBagConstraints, ., VERTICAL, ;, c, ., gridx, =, 1, ;, c, ., gridy, =, 0]
[=, GridBagConstraints, ., VERTICAL, ;, c, ., gridx, =, 1, ;, c, ., gridy, =, 0, ;, c, ., insets]
[., fill, =, GridBagConstraints, ., VERTICAL, ;, c, ., gridx, =, 1, ;, c, ., gridy, =, 0, ;, c]
[;, c, ., gridx, =, 1, ;, c, ., gridy, =, 0, ;, c, ., insets, =, new, Insets, (]
[., VERTICAL, ;, c, ., gridx, =, 1, ;, c, ., gridy, =, 0, ;, c, ., insets, =, new]
[=, 1, ;, c, ., gridy, =, 0, ;, c, ., insets, =, new, Insets, (, 2, ,, 2, ,]
[., gridx, =, 1, ;, c, ., gridy, =, 0, ;, c, ., insets, =, new, Insets, (, 2, ,]
[;, c, ., gridy, =, 0, ;, c, ., insets, =, new, Insets, (, 2, ,, 2, ,, 2, ,]
[=, 0, ;, c, ., insets, =, new, Insets, (, 2, ,, 2, ,, 2, ,, 2, ), ;, for]
[., gridy, =, 0, ;, c, ., insets, =, new, Insets, (, 2, ,, 2, ,, 2, ,, 2, )]
[;, c, ., insets, =, new, Insets, (, 2, ,, 2, ,, 2, ,, 2, ), ;, for, (, Pair]
[=, new, Insets, (, 2, ,, 2, ,, 2, ,, 2, ), ;, for, (, Pair, <, String, ,, RandomVectorGenerator]
[., insets, =, new, Insets, (, 2, ,, 2, ,, 2, ,, 2, ), ;, for, (, Pair, <, String]
[;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators, ), {, JTextArea, text, =, new, JTextArea, (]
[,, 2, ,, 2, ,, 2, ), ;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators, )]
[,, 2, ,, 2, ), ;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators, ), {, JTextArea]
[,, 2, ), ;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators, ), {, JTextArea, text, =]
[), ;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators, ), {, JTextArea, text, =, new, JTextArea]
[), {, JTextArea, text, =, new, JTextArea, (, pair, ., getFirst, (, ), ), ;, text, ., setEditable, (, false]
[;, text, ., setEditable, (, false, ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c]
[), ;, text, ., setEditable, (, false, ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,]
[., getFirst, (, ), ), ;, text, ., setEditable, (, false, ), ;, text, ., setOpaque, (, false, ), ;]
[;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;, c, ., gridx, ++, ;]
[., setEditable, (, false, ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;]
[), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;, c, ., gridx, ++]
[;, add, (, text, ,, c, ), ;, c, ., gridx, ++, ;, }, int, saveY, =, ++, c, .]
[., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;, c, ., gridx, ++, ;, }, int]
[), ;, add, (, text, ,, c, ), ;, c, ., gridx, ++, ;, }, int, saveY, =, ++, c]
[;, c, ., gridx, ++, ;, }, int, saveY, =, ++, c, ., gridy, ;, c, ., gridx, =, 0]
[,, c, ), ;, c, ., gridx, ++, ;, }, int, saveY, =, ++, c, ., gridy, ;, c, .]
[), ;, c, ., gridx, ++, ;, }, int, saveY, =, ++, c, ., gridy, ;, c, ., gridx, =]
[;, }, int, saveY, =, ++, c, ., gridy, ;, c, ., gridx, =, 0, ;, for, (, int, type]
[++, ;, }, int, saveY, =, ++, c, ., gridy, ;, c, ., gridx, =, 0, ;, for, (, int]
[., gridx, ++, ;, }, int, saveY, =, ++, c, ., gridy, ;, c, ., gridx, =, 0, ;, for]
[;, c, ., gridx, =, 0, ;, for, (, int, type, =, 0, ;, type, <, 4, ;, type, ++]
[;, c, ., gridx, =, 0, ;, for, (, int, type, =, 0, ;, type, <, 4, ;, type, ++]
[., gridy, ;, c, ., gridx, =, 0, ;, for, (, int, type, =, 0, ;, type, <, 4, ;]
[=, 0, ;, for, (, int, type, =, 0, ;, type, <, 4, ;, type, ++, ), {, JLabel, text]
[., gridx, =, 0, ;, for, (, int, type, =, 0, ;, type, <, 4, ;, type, ++, ), {]
[;, for, (, int, type, =, 0, ;, type, <, 4, ;, type, ++, ), {, JLabel, text, =, new]
[;, type, <, 4, ;, type, ++, ), {, JLabel, text, =, new, JLabel, (, "n=", +, String, ., valueOf]
[;, type, ++, ), {, JLabel, text, =, new, JLabel, (, "n=", +, String, ., valueOf, (, datasets, [, type]
[<, 4, ;, type, ++, ), {, JLabel, text, =, new, JLabel, (, "n=", +, String, ., valueOf, (, datasets]
[;, type, ++, ), {, JLabel, text, =, new, JLabel, (, "n=", +, String, ., valueOf, (, datasets, [, type]
[), {, JLabel, text, =, new, JLabel, (, "n=", +, String, ., valueOf, (, datasets, [, type, ], ), )]
[++, ), {, JLabel, text, =, new, JLabel, (, "n=", +, String, ., valueOf, (, datasets, [, type, ], )]
[;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;, c, ., gridy, ++, ;]
[), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;, c, ., gridy, ++]
[+, String, ., valueOf, (, datasets, [, type, ], ), ), ;, text, ., setOpaque, (, false, ), ;, add]
[), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;, c, ., gridy, ++]
[., valueOf, (, datasets, [, type, ], ), ), ;, text, ., setOpaque, (, false, ), ;, add, (, text]
[), ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;, c, ., gridy]
[[, type, ], ), ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;]
[], ), ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;, c, .]
[;, add, (, text, ,, c, ), ;, c, ., gridy, ++, ;, }, c, ., gridy, =, saveY, ;]
[., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;, c, ., gridy, ++, ;, }, c]
[), ;, add, (, text, ,, c, ), ;, c, ., gridy, ++, ;, }, c, ., gridy, =, saveY]
[;, c, ., gridy, ++, ;, }, c, ., gridy, =, saveY, ;, for, (, int, type, =, 0, ;]
[,, c, ), ;, c, ., gridy, ++, ;, }, c, ., gridy, =, saveY, ;, for, (, int, type]
[), ;, c, ., gridy, ++, ;, }, c, ., gridy, =, saveY, ;, for, (, int, type, =, 0]
[;, }, c, ., gridy, =, saveY, ;, for, (, int, type, =, 0, ;, type, <, 4, ;, type]
[++, ;, }, c, ., gridy, =, saveY, ;, for, (, int, type, =, 0, ;, type, <, 4, ;]
[., gridy, ++, ;, }, c, ., gridy, =, saveY, ;, for, (, int, type, =, 0, ;, type, <]
[=, saveY, ;, for, (, int, type, =, 0, ;, type, <, 4, ;, type, ++, ), {, c, .]
[., gridy, =, saveY, ;, for, (, int, type, =, 0, ;, type, <, 4, ;, type, ++, ), {]
[;, for, (, int, type, =, 0, ;, type, <, 4, ;, type, ++, ), {, c, ., gridx, =]
[;, type, <, 4, ;, type, ++, ), {, c, ., gridx, =, 1, ;, for, (, Pair, <, String]
[;, type, ++, ), {, c, ., gridx, =, 1, ;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair]
[<, 4, ;, type, ++, ), {, c, ., gridx, =, 1, ;, for, (, Pair, <, String, ,, RandomVectorGenerator]
[;, type, ++, ), {, c, ., gridx, =, 1, ;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair]
[), {, c, ., gridx, =, 1, ;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators, )]
[++, ), {, c, ., gridx, =, 1, ;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators]
[=, 1, ;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators, ), {, List, <, Vector2D, >]
[., gridx, =, 1, ;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators, ), {, List, <]
[;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators, ), {, List, <, Vector2D, >, points, =]
[), {, List, <, Vector2D, >, points, =, null, ;, int, samples, =, datasets, [, type, ], ;, switch, (]
[;, int, samples, =, datasets, [, type, ], ;, switch, (, type, ), {, case, 0, :, points, =, makeRandom]
[;, switch, (, type, ), {, case, 0, :, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, )]
[[, type, ], ;, switch, (, type, ), {, case, 0, :, points, =, makeRandom, (, samples, ,, pair, .]
[], ;, switch, (, type, ), {, case, 0, :, points, =, makeRandom, (, samples, ,, pair, ., getValue, (]
[), {, case, 0, :, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;]
[:, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 1, :, points]
[=, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 1, :, points, =, makeRandom]
[;, break, ;, case, 1, :, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break]
[,, pair, ., getValue, (, ), ), ;, break, ;, case, 1, :, points, =, makeRandom, (, samples, ,, pair]
[), ;, break, ;, case, 1, :, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;]
[., getValue, (, ), ), ;, break, ;, case, 1, :, points, =, makeRandom, (, samples, ,, pair, ., getValue]
[:, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 2, :, points]
[=, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 2, :, points, =, makeRandom]
[;, break, ;, case, 2, :, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break]
[,, pair, ., getValue, (, ), ), ;, break, ;, case, 2, :, points, =, makeRandom, (, samples, ,, pair]
[), ;, break, ;, case, 2, :, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;]
[., getValue, (, ), ), ;, break, ;, case, 2, :, points, =, makeRandom, (, samples, ,, pair, ., getValue]
[:, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 3, :, points]
[=, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 3, :, points, =, makeCircle]
[;, break, ;, case, 3, :, points, =, makeCircle, (, samples, ,, pair, ., getValue, (, ), ), ;, break]
[,, pair, ., getValue, (, ), ), ;, break, ;, case, 3, :, points, =, makeCircle, (, samples, ,, pair]
[), ;, break, ;, case, 3, :, points, =, makeCircle, (, samples, ,, pair, ., getValue, (, ), ), ;]
[., getValue, (, ), ), ;, break, ;, case, 3, :, points, =, makeCircle, (, samples, ,, pair, ., getValue]
[:, points, =, makeCircle, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, }, add, (, new]
[=, makeCircle, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, }, add, (, new, Plot, (]
[;, break, ;, }, add, (, new, Plot, (, points, ), ,, c, ), ;, c, ., gridx, ++, ;]
[,, pair, ., getValue, (, ), ), ;, break, ;, }, add, (, new, Plot, (, points, ), ,, c]
[), ;, break, ;, }, add, (, new, Plot, (, points, ), ,, c, ), ;, c, ., gridx, ++]
[., getValue, (, ), ), ;, break, ;, }, add, (, new, Plot, (, points, ), ,, c, ), ;]
[;, c, ., gridx, ++, ;, }, c, ., gridy, ++, ;, }, }, }, @, SuppressWarnings, (, "serial", )]
[,, c, ), ;, c, ., gridx, ++, ;, }, c, ., gridy, ++, ;, }, }, }, @, SuppressWarnings]
[), ,, c, ), ;, c, ., gridx, ++, ;, }, c, ., gridy, ++, ;, }, }, }, @]
[), ;, c, ., gridx, ++, ;, }, c, ., gridy, ++, ;, }, }, }, @, SuppressWarnings, (, "serial"]
[;, }, c, ., gridy, ++, ;, }, }, }, @, SuppressWarnings, (, "serial", ), public, static, class, Plot, extends]
[++, ;, }, c, ., gridy, ++, ;, }, }, }, @, SuppressWarnings, (, "serial", ), public, static, class, Plot]
[., gridx, ++, ;, }, c, ., gridy, ++, ;, }, }, }, @, SuppressWarnings, (, "serial", ), public, static]
[;, }, }, }, @, SuppressWarnings, (, "serial", ), public, static, class, Plot, extends, JComponent, {, private, static, double, PAD]
[++, ;, }, }, }, @, SuppressWarnings, (, "serial", ), public, static, class, Plot, extends, JComponent, {, private, static, double]
[., gridy, ++, ;, }, }, }, @, SuppressWarnings, (, "serial", ), public, static, class, Plot, extends, JComponent, {, private]
[public, static, class, Plot, extends, JComponent, {, private, static, double, PAD, =, 10, ;, private, List, <, Vector2D, >, points]
[), public, static, class, Plot, extends, JComponent, {, private, static, double, PAD, =, 10, ;, private, List, <, Vector2D, >]
[;, private, List, <, Vector2D, >, points, ;, public, Plot, (, final, List, <, Vector2D, >, points, ), {, this]
[=, points, ;, }, @, Override, protected, void, paintComponent, (, Graphics, g, ), {, super, ., paintComponent, (, g, )]
[., points, =, points, ;, }, @, Override, protected, void, paintComponent, (, Graphics, g, ), {, super, ., paintComponent, (]
[;, }, @, Override, protected, void, paintComponent, (, Graphics, g, ), {, super, ., paintComponent, (, g, ), ;, Graphics2D]
[;, Graphics2D, g2, =, (, Graphics2D, ), g, ;, g2, ., setRenderingHint, (, RenderingHints, ., KEY_ANTIALIASING, ,, RenderingHints, ., VALUE_ANTIALIAS_ON]
[., paintComponent, (, g, ), ;, Graphics2D, g2, =, (, Graphics2D, ), g, ;, g2, ., setRenderingHint, (, RenderingHints, .]
[), ;, Graphics2D, g2, =, (, Graphics2D, ), g, ;, g2, ., setRenderingHint, (, RenderingHints, ., KEY_ANTIALIASING, ,, RenderingHints, .]
[;, g2, ., setRenderingHint, (, RenderingHints, ., KEY_ANTIALIASING, ,, RenderingHints, ., VALUE_ANTIALIAS_ON, ), ;, int, w, =, getWidth, (, )]
[;, g2, ., setRenderingHint, (, RenderingHints, ., KEY_ANTIALIASING, ,, RenderingHints, ., VALUE_ANTIALIAS_ON, ), ;, int, w, =, getWidth, (, )]
[;, int, w, =, getWidth, (, ), ;, int, h, =, getHeight, (, ), ;, g2, ., clearRect, (, 0]
[., setRenderingHint, (, RenderingHints, ., KEY_ANTIALIASING, ,, RenderingHints, ., VALUE_ANTIALIAS_ON, ), ;, int, w, =, getWidth, (, ), ;, int]
[,, RenderingHints, ., VALUE_ANTIALIAS_ON, ), ;, int, w, =, getWidth, (, ), ;, int, h, =, getHeight, (, ), ;]
[., KEY_ANTIALIASING, ,, RenderingHints, ., VALUE_ANTIALIAS_ON, ), ;, int, w, =, getWidth, (, ), ;, int, h, =, getHeight, (]
[), ;, int, w, =, getWidth, (, ), ;, int, h, =, getHeight, (, ), ;, g2, ., clearRect, (]
[., VALUE_ANTIALIAS_ON, ), ;, int, w, =, getWidth, (, ), ;, int, h, =, getHeight, (, ), ;, g2, .]
[;, int, h, =, getHeight, (, ), ;, g2, ., clearRect, (, 0, ,, 0, ,, w, ,, h, )]
[;, g2, ., clearRect, (, 0, ,, 0, ,, w, ,, h, ), ;, g2, ., setPaint, (, Color, .]
[;, g2, ., setPaint, (, Color, ., black, ), ;, g2, ., drawRect, (, 0, ,, 0, ,, w, -]
[., clearRect, (, 0, ,, 0, ,, w, ,, h, ), ;, g2, ., setPaint, (, Color, ., black, )]
[,, 0, ,, w, ,, h, ), ;, g2, ., setPaint, (, Color, ., black, ), ;, g2, ., drawRect]
[,, w, ,, h, ), ;, g2, ., setPaint, (, Color, ., black, ), ;, g2, ., drawRect, (, 0]
[,, h, ), ;, g2, ., setPaint, (, Color, ., black, ), ;, g2, ., drawRect, (, 0, ,, 0]
[), ;, g2, ., setPaint, (, Color, ., black, ), ;, g2, ., drawRect, (, 0, ,, 0, ,, w]
[;, g2, ., drawRect, (, 0, ,, 0, ,, w, -, 1, ,, h, -, 1, ), ;, for, (]
[., setPaint, (, Color, ., black, ), ;, g2, ., drawRect, (, 0, ,, 0, ,, w, -, 1, ,]
[), ;, g2, ., drawRect, (, 0, ,, 0, ,, w, -, 1, ,, h, -, 1, ), ;, for]
[., black, ), ;, g2, ., drawRect, (, 0, ,, 0, ,, w, -, 1, ,, h, -, 1, )]
[;, for, (, Vector2D, point, :, points, ), {, Vector2D, p, =, transform, (, point, ,, w, ,, h, )]
[., drawRect, (, 0, ,, 0, ,, w, -, 1, ,, h, -, 1, ), ;, for, (, Vector2D, point]
[,, 0, ,, w, -, 1, ,, h, -, 1, ), ;, for, (, Vector2D, point, :, points, ), {]
[,, w, -, 1, ,, h, -, 1, ), ;, for, (, Vector2D, point, :, points, ), {, Vector2D, p]
[,, h, -, 1, ), ;, for, (, Vector2D, point, :, points, ), {, Vector2D, p, =, transform, (, point]
[-, 1, ,, h, -, 1, ), ;, for, (, Vector2D, point, :, points, ), {, Vector2D, p, =, transform]
[,, h, -, 1, ), ;, for, (, Vector2D, point, :, points, ), {, Vector2D, p, =, transform, (, point]
[), ;, for, (, Vector2D, point, :, points, ), {, Vector2D, p, =, transform, (, point, ,, w, ,, h]
[-, 1, ), ;, for, (, Vector2D, point, :, points, ), {, Vector2D, p, =, transform, (, point, ,, w]
[), ;, for, (, Vector2D, point, :, points, ), {, Vector2D, p, =, transform, (, point, ,, w, ,, h]
[), {, Vector2D, p, =, transform, (, point, ,, w, ,, h, ), ;, double, [, ], arr, =, p]
[;, double, [, ], arr, =, p, ., toArray, (, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double]
[,, w, ,, h, ), ;, double, [, ], arr, =, p, ., toArray, (, ), ;, g2, ., draw]
[,, h, ), ;, double, [, ], arr, =, p, ., toArray, (, ), ;, g2, ., draw, (, new]
[), ;, double, [, ], arr, =, p, ., toArray, (, ), ;, g2, ., draw, (, new, Rectangle2D, .]
[;, g2, ., draw, (, new, Rectangle2D, ., Double, (, arr, [, 0, ], -, 1, ,, arr, [, 1]
[., toArray, (, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, arr, [, 0, ], -, 1]
[;, }, }, @, Override, public, Dimension, getPreferredSize, (, ), {, return, new, Dimension, (, 140, ,, 140, ), ;]
[., draw, (, new, Rectangle2D, ., Double, (, arr, [, 0, ], -, 1, ,, arr, [, 1, ], -]
[), ;, }, }, @, Override, public, Dimension, getPreferredSize, (, ), {, return, new, Dimension, (, 140, ,, 140, )]
[,, arr, [, 1, ], -, 1, ,, 2, ,, 2, ), ), ;, }, }, @, Override, public, Dimension]
[-, 1, ,, arr, [, 1, ], -, 1, ,, 2, ,, 2, ), ), ;, }, }, @, Override]
[[, 0, ], -, 1, ,, arr, [, 1, ], -, 1, ,, 2, ,, 2, ), ), ;, }]
[], -, 1, ,, arr, [, 1, ], -, 1, ,, 2, ,, 2, ), ), ;, }, }, @]
[,, arr, [, 1, ], -, 1, ,, 2, ,, 2, ), ), ;, }, }, @, Override, public, Dimension]
[,, 2, ,, 2, ), ), ;, }, }, @, Override, public, Dimension, getPreferredSize, (, ), {, return, new, Dimension]
[-, 1, ,, 2, ,, 2, ), ), ;, }, }, @, Override, public, Dimension, getPreferredSize, (, ), {, return]
[[, 1, ], -, 1, ,, 2, ,, 2, ), ), ;, }, }, @, Override, public, Dimension, getPreferredSize, (]
[], -, 1, ,, 2, ,, 2, ), ), ;, }, }, @, Override, public, Dimension, getPreferredSize, (, ), {]
[,, 2, ,, 2, ), ), ;, }, }, @, Override, public, Dimension, getPreferredSize, (, ), {, return, new, Dimension]
[,, 2, ), ), ;, }, }, @, Override, public, Dimension, getPreferredSize, (, ), {, return, new, Dimension, (, 140]
[), ), ;, }, }, @, Override, public, Dimension, getPreferredSize, (, ), {, return, new, Dimension, (, 140, ,, 140]
[;, }, private, Vector2D, transform, (, Vector2D, point, ,, int, width, ,, int, height, ), {, double, [, ], arr]
[,, 140, ), ;, }, private, Vector2D, transform, (, Vector2D, point, ,, int, width, ,, int, height, ), {, double]
[), ;, }, private, Vector2D, transform, (, Vector2D, point, ,, int, width, ,, int, height, ), {, double, [, ]]
[;, return, new, Vector2D, (, new, double, [, ], {, PAD, +, (, arr, [, 0, ], +, 1, )]
[., toArray, (, ), ;, return, new, Vector2D, (, new, double, [, ], {, PAD, +, (, arr, [, 0]
[;, }, }, public, static, void, main, (, String, [, ], args, ), {, ExampleUtils, ., showExampleFrame, (, new, Display]
[), ;, }, }, public, static, void, main, (, String, [, ], args, ), {, ExampleUtils, ., showExampleFrame, (, new]
[), ;, }, }, public, static, void, main, (, String, [, ], args, ), {, ExampleUtils, ., showExampleFrame, (, new]
[,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (, height, -, 2]
[+, (, arr, [, 0, ], +, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,]
[,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (, height, -, 2]
[*, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -, (, arr, [, 1, ], +, 1]
[/, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -, (, arr, [, 1, ]]
[), /, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -, (, arr, [, 1]
[+, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -, (, arr]
[[, 0, ], +, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD]
[], +, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -, (]
[), /, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -, (, arr, [, 1]
[*, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -, (, arr, [, 1, ], +, 1]
[,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (, height, -, 2]
[), ,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (, height, -]
[-, 2, *, PAD, ), ,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0]
[), ,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (, height, -]
[*, PAD, ), ,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (]
[), ,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (, height, -]
[}, ), ;, }, }, public, static, void, main, (, String, [, ], args, ), {, ExampleUtils, ., showExampleFrame, (]
[-, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (, height, -, 2, *, PAD, ), }]
[-, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (, height, -, 2, *, PAD]
[-, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (, height, -, 2, *, PAD, ), }]
[}, ), ;, }, }, public, static, void, main, (, String, [, ], args, ), {, ExampleUtils, ., showExampleFrame, (]
[*, (, height, -, 2, *, PAD, ), }, ), ;, }, }, public, static, void, main, (, String, []
[/, 2.0, *, (, height, -, 2, *, PAD, ), }, ), ;, }, }, public, static, void, main, (]
[), /, 2.0, *, (, height, -, 2, *, PAD, ), }, ), ;, }, }, public, static, void, main]
[+, 1, ), /, 2.0, *, (, height, -, 2, *, PAD, ), }, ), ;, }, }, public, static]
[[, 1, ], +, 1, ), /, 2.0, *, (, height, -, 2, *, PAD, ), }, ), ;, }]
[], +, 1, ), /, 2.0, *, (, height, -, 2, *, PAD, ), }, ), ;, }, }, public]
[), /, 2.0, *, (, height, -, 2, *, PAD, ), }, ), ;, }, }, public, static, void, main]
[*, (, height, -, 2, *, PAD, ), }, ), ;, }, }, public, static, void, main, (, String, []
[}, ), ;, }, }, public, static, void, main, (, String, [, ], args, ), {, ExampleUtils, ., showExampleFrame, (]
[), }, ), ;, }, }, public, static, void, main, (, String, [, ], args, ), {, ExampleUtils, ., showExampleFrame]
[-, 2, *, PAD, ), }, ), ;, }, }, public, static, void, main, (, String, [, ], args, )]
[), }, ), ;, }, }, public, static, void, main, (, String, [, ], args, ), {, ExampleUtils, ., showExampleFrame]
[*, PAD, ), }, ), ;, }, }, public, static, void, main, (, String, [, ], args, ), {, ExampleUtils]
[), }, ), ;, }, }, public, static, void, main, (, String, [, ], args, ), {, ExampleUtils, ., showExampleFrame]
[;, }, }]
[., showExampleFrame, (, new, Display, (, ), ), ;, }, }]
[), ;, }, }]
