[;, public, static, final, int, MIDDLE, =, 1, ;, public, static, final, int, END, =, 2, ;, private, int, maximumItemCount]
[;, public, static, final, int, END, =, 2, ;, private, int, maximumItemCount, =, 2000, ;, protected, int, historyCount, ;, private]
[;, private, int, maximumItemCount, =, 2000, ;, protected, int, historyCount, ;, private, Comparable, [, ], seriesKeys, ;, private, Class, timePeriodClass]
[;, protected, int, historyCount, ;, private, Comparable, [, ], seriesKeys, ;, private, Class, timePeriodClass, =, Minute, ., class, ;, protected]
[;, protected, RegularTimePeriod, [, ], pointsInTime, ;, private, int, seriesCount, ;, protected, class, ValueSequence, {, float, [, ], dataPoints, ;]
[), ;, }, public, ValueSequence, (, int, length, ), {, this, ., dataPoints, =, new, float, [, length, ], ;]
[., maximumItemCount, ), ;, }, public, ValueSequence, (, int, length, ), {, this, ., dataPoints, =, new, float, [, length]
[=, new, float, [, length, ], ;, for, (, int, i, =, 0, ;, i, <, length, ;, i, ++]
[., dataPoints, =, new, float, [, length, ], ;, for, (, int, i, =, 0, ;, i, <, length, ;]
[;, for, (, int, i, =, 0, ;, i, <, length, ;, i, ++, ), {, this, ., dataPoints, []
[], ;, for, (, int, i, =, 0, ;, i, <, length, ;, i, ++, ), {, this, ., dataPoints]
[;, i, <, length, ;, i, ++, ), {, this, ., dataPoints, [, i, ], =, 0.0f, ;, }, }]
[;, i, ++, ), {, this, ., dataPoints, [, i, ], =, 0.0f, ;, }, }, public, void, enterData, (]
[<, length, ;, i, ++, ), {, this, ., dataPoints, [, i, ], =, 0.0f, ;, }, }, public, void]
[;, i, ++, ), {, this, ., dataPoints, [, i, ], =, 0.0f, ;, }, }, public, void, enterData, (]
[), {, this, ., dataPoints, [, i, ], =, 0.0f, ;, }, }, public, void, enterData, (, int, index, ,]
[++, ), {, this, ., dataPoints, [, i, ], =, 0.0f, ;, }, }, public, void, enterData, (, int, index]
[=, 0.0f, ;, }, }, public, void, enterData, (, int, index, ,, float, value, ), {, this, ., dataPoints, []
[[, i, ], =, 0.0f, ;, }, }, public, void, enterData, (, int, index, ,, float, value, ), {, this]
[., dataPoints, [, i, ], =, 0.0f, ;, }, }, public, void, enterData, (, int, index, ,, float, value, )]
[], =, 0.0f, ;, }, }, public, void, enterData, (, int, index, ,, float, value, ), {, this, ., dataPoints]
[;, }, }, public, void, enterData, (, int, index, ,, float, value, ), {, this, ., dataPoints, [, index, ]]
[=, value, ;, }, public, float, getData, (, int, index, ), {, return, this, ., dataPoints, [, index, ], ;]
[[, index, ], =, value, ;, }, public, float, getData, (, int, index, ), {, return, this, ., dataPoints, []
[., dataPoints, [, index, ], =, value, ;, }, public, float, getData, (, int, index, ), {, return, this, .]
[], =, value, ;, }, public, float, getData, (, int, index, ), {, return, this, ., dataPoints, [, index, ]]
[;, }, public, float, getData, (, int, index, ), {, return, this, ., dataPoints, [, index, ], ;, }, }]
[;, }, }, protected, ValueSequence, [, ], valueHistory, ;, protected, Calendar, workingCalendar, ;, private, int, position, ;, private, boolean, domainIsPointsInTime]
[[, index, ], ;, }, }, protected, ValueSequence, [, ], valueHistory, ;, protected, Calendar, workingCalendar, ;, private, int, position, ;]
[., dataPoints, [, index, ], ;, }, }, protected, ValueSequence, [, ], valueHistory, ;, protected, Calendar, workingCalendar, ;, private, int]
[], ;, }, }, protected, ValueSequence, [, ], valueHistory, ;, protected, Calendar, workingCalendar, ;, private, int, position, ;, private, boolean]
[;, private, Float, maxValue, =, null, ;, private, Range, valueRange, ;, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, )]
[), ;, private, Float, maxValue, =, null, ;, private, Range, valueRange, ;, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments]
[;, private, Range, valueRange, ;, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ), {, this, (, nSeries, ,, nMoments]
[,, nMoments, ,, new, Millisecond, (, ), ,, TimeZone, ., getDefault, (, ), ), ;, this, ., newestAt, =, nMoments]
[,, new, Millisecond, (, ), ,, TimeZone, ., getDefault, (, ), ), ;, this, ., newestAt, =, nMoments, -, 1]
[,, TimeZone, ., getDefault, (, ), ), ;, this, ., newestAt, =, nMoments, -, 1, ;, }, public, DynamicTimeSeriesCollection, (]
[), ;, this, ., newestAt, =, nMoments, -, 1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,]
[., getDefault, (, ), ), ;, this, ., newestAt, =, nMoments, -, 1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries]
[=, nMoments, -, 1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, TimeZone, zone, ), {, this]
[., newestAt, =, nMoments, -, 1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, TimeZone, zone, )]
[;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, TimeZone, zone, ), {, this, (, nSeries, ,, nMoments]
[-, 1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, TimeZone, zone, ), {, this, (, nSeries]
[;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, TimeZone, zone, ), {, this, (, nSeries, ,, nMoments]
[,, nMoments, ,, new, Millisecond, (, ), ,, zone, ), ;, this, ., newestAt, =, nMoments, -, 1, ;, }]
[,, new, Millisecond, (, ), ,, zone, ), ;, this, ., newestAt, =, nMoments, -, 1, ;, }, public, DynamicTimeSeriesCollection]
[,, zone, ), ;, this, ., newestAt, =, nMoments, -, 1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int]
[), ;, this, ., newestAt, =, nMoments, -, 1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,]
[=, nMoments, -, 1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ), {, this]
[., newestAt, =, nMoments, -, 1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, )]
[;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ), {, this, (, nSeries, ,, nMoments]
[-, 1, ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ), {, this, (, nSeries]
[;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ), {, this, (, nSeries, ,, nMoments]
[,, nMoments, ,, timeSample, ,, TimeZone, ., getDefault, (, ), ), ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int]
[,, timeSample, ,, TimeZone, ., getDefault, (, ), ), ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,]
[,, TimeZone, ., getDefault, (, ), ), ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample]
[), ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ,, TimeZone, zone, ), {, this]
[., getDefault, (, ), ), ;, }, public, DynamicTimeSeriesCollection, (, int, nSeries, ,, int, nMoments, ,, RegularTimePeriod, timeSample, ,, TimeZone]
[=, nMoments, ;, this, ., historyCount, =, nMoments, ;, this, ., seriesKeys, =, new, Comparable, [, nSeries, ], ;, for]
[., maximumItemCount, =, nMoments, ;, this, ., historyCount, =, nMoments, ;, this, ., seriesKeys, =, new, Comparable, [, nSeries, ]]
[;, this, ., historyCount, =, nMoments, ;, this, ., seriesKeys, =, new, Comparable, [, nSeries, ], ;, for, (, int]
[=, nMoments, ;, this, ., seriesKeys, =, new, Comparable, [, nSeries, ], ;, for, (, int, i, =, 0, ;]
[., historyCount, =, nMoments, ;, this, ., seriesKeys, =, new, Comparable, [, nSeries, ], ;, for, (, int, i, =]
[;, this, ., seriesKeys, =, new, Comparable, [, nSeries, ], ;, for, (, int, i, =, 0, ;, i, <]
[=, new, Comparable, [, nSeries, ], ;, for, (, int, i, =, 0, ;, i, <, nSeries, ;, i, ++]
[., seriesKeys, =, new, Comparable, [, nSeries, ], ;, for, (, int, i, =, 0, ;, i, <, nSeries, ;]
[;, for, (, int, i, =, 0, ;, i, <, nSeries, ;, i, ++, ), {, this, ., seriesKeys, []
[], ;, for, (, int, i, =, 0, ;, i, <, nSeries, ;, i, ++, ), {, this, ., seriesKeys]
[;, i, <, nSeries, ;, i, ++, ), {, this, ., seriesKeys, [, i, ], =, "", ;, }, this]
[;, i, ++, ), {, this, ., seriesKeys, [, i, ], =, "", ;, }, this, ., newestAt, =, nMoments]
[<, nSeries, ;, i, ++, ), {, this, ., seriesKeys, [, i, ], =, "", ;, }, this, ., newestAt]
[;, i, ++, ), {, this, ., seriesKeys, [, i, ], =, "", ;, }, this, ., newestAt, =, nMoments]
[), {, this, ., seriesKeys, [, i, ], =, "", ;, }, this, ., newestAt, =, nMoments, -, 1, ;]
[++, ), {, this, ., seriesKeys, [, i, ], =, "", ;, }, this, ., newestAt, =, nMoments, -, 1]
[=, "", ;, }, this, ., newestAt, =, nMoments, -, 1, ;, this, ., valueHistory, =, new, ValueSequence, [, nSeries]
[[, i, ], =, "", ;, }, this, ., newestAt, =, nMoments, -, 1, ;, this, ., valueHistory, =, new]
[., seriesKeys, [, i, ], =, "", ;, }, this, ., newestAt, =, nMoments, -, 1, ;, this, ., valueHistory]
[], =, "", ;, }, this, ., newestAt, =, nMoments, -, 1, ;, this, ., valueHistory, =, new, ValueSequence, []
[;, }, this, ., newestAt, =, nMoments, -, 1, ;, this, ., valueHistory, =, new, ValueSequence, [, nSeries, ], ;]
[=, nMoments, -, 1, ;, this, ., valueHistory, =, new, ValueSequence, [, nSeries, ], ;, this, ., timePeriodClass, =, timeSample]
[., newestAt, =, nMoments, -, 1, ;, this, ., valueHistory, =, new, ValueSequence, [, nSeries, ], ;, this, ., timePeriodClass]
[;, this, ., valueHistory, =, new, ValueSequence, [, nSeries, ], ;, this, ., timePeriodClass, =, timeSample, ., getClass, (, )]
[-, 1, ;, this, ., valueHistory, =, new, ValueSequence, [, nSeries, ], ;, this, ., timePeriodClass, =, timeSample, ., getClass]
[;, this, ., valueHistory, =, new, ValueSequence, [, nSeries, ], ;, this, ., timePeriodClass, =, timeSample, ., getClass, (, )]
[=, new, ValueSequence, [, nSeries, ], ;, this, ., timePeriodClass, =, timeSample, ., getClass, (, ), ;, if, (, this]
[., valueHistory, =, new, ValueSequence, [, nSeries, ], ;, this, ., timePeriodClass, =, timeSample, ., getClass, (, ), ;, if]
[;, this, ., timePeriodClass, =, timeSample, ., getClass, (, ), ;, if, (, this, ., timePeriodClass, ==, Second, ., class]
[], ;, this, ., timePeriodClass, =, timeSample, ., getClass, (, ), ;, if, (, this, ., timePeriodClass, ==, Second, .]
[=, timeSample, ., getClass, (, ), ;, if, (, this, ., timePeriodClass, ==, Second, ., class, ), {, this, .]
[., timePeriodClass, =, timeSample, ., getClass, (, ), ;, if, (, this, ., timePeriodClass, ==, Second, ., class, ), {]
[;, if, (, this, ., timePeriodClass, ==, Second, ., class, ), {, this, ., pointsInTime, =, new, Second, [, nMoments]
[., getClass, (, ), ;, if, (, this, ., timePeriodClass, ==, Second, ., class, ), {, this, ., pointsInTime, =]
[), {, this, ., pointsInTime, =, new, Second, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==]
[==, Second, ., class, ), {, this, ., pointsInTime, =, new, Second, [, nMoments, ], ;, }, else, if, (]
[., timePeriodClass, ==, Second, ., class, ), {, this, ., pointsInTime, =, new, Second, [, nMoments, ], ;, }, else]
[), {, this, ., pointsInTime, =, new, Second, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==]
[=, new, Second, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==, Minute, ., class, ), {]
[., pointsInTime, =, new, Second, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==, Minute, ., class]
[;, }, else, if, (, this, ., timePeriodClass, ==, Minute, ., class, ), {, this, ., pointsInTime, =, new, Minute]
[], ;, }, else, if, (, this, ., timePeriodClass, ==, Minute, ., class, ), {, this, ., pointsInTime, =, new]
[), {, this, ., pointsInTime, =, new, Minute, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==]
[==, Minute, ., class, ), {, this, ., pointsInTime, =, new, Minute, [, nMoments, ], ;, }, else, if, (]
[., timePeriodClass, ==, Minute, ., class, ), {, this, ., pointsInTime, =, new, Minute, [, nMoments, ], ;, }, else]
[), {, this, ., pointsInTime, =, new, Minute, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==]
[=, new, Minute, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==, Hour, ., class, ), {]
[., pointsInTime, =, new, Minute, [, nMoments, ], ;, }, else, if, (, this, ., timePeriodClass, ==, Hour, ., class]
[;, }, else, if, (, this, ., timePeriodClass, ==, Hour, ., class, ), {, this, ., pointsInTime, =, new, Hour]
[], ;, }, else, if, (, this, ., timePeriodClass, ==, Hour, ., class, ), {, this, ., pointsInTime, =, new]
[), {, this, ., pointsInTime, =, new, Hour, [, nMoments, ], ;, }, this, ., workingCalendar, =, Calendar, ., getInstance]
[==, Hour, ., class, ), {, this, ., pointsInTime, =, new, Hour, [, nMoments, ], ;, }, this, ., workingCalendar]
[., timePeriodClass, ==, Hour, ., class, ), {, this, ., pointsInTime, =, new, Hour, [, nMoments, ], ;, }, this]
[), {, this, ., pointsInTime, =, new, Hour, [, nMoments, ], ;, }, this, ., workingCalendar, =, Calendar, ., getInstance]
[=, new, Hour, [, nMoments, ], ;, }, this, ., workingCalendar, =, Calendar, ., getInstance, (, zone, ), ;, this]
[., pointsInTime, =, new, Hour, [, nMoments, ], ;, }, this, ., workingCalendar, =, Calendar, ., getInstance, (, zone, )]
[;, }, this, ., workingCalendar, =, Calendar, ., getInstance, (, zone, ), ;, this, ., position, =, START, ;, this]
[], ;, }, this, ., workingCalendar, =, Calendar, ., getInstance, (, zone, ), ;, this, ., position, =, START, ;]
[=, Calendar, ., getInstance, (, zone, ), ;, this, ., position, =, START, ;, this, ., domainIsPointsInTime, =, true, ;]
[., workingCalendar, =, Calendar, ., getInstance, (, zone, ), ;, this, ., position, =, START, ;, this, ., domainIsPointsInTime, =]
[;, this, ., position, =, START, ;, this, ., domainIsPointsInTime, =, true, ;, }, public, synchronized, long, setTimeBase, (, RegularTimePeriod]
[., getInstance, (, zone, ), ;, this, ., position, =, START, ;, this, ., domainIsPointsInTime, =, true, ;, }, public]
[), ;, this, ., position, =, START, ;, this, ., domainIsPointsInTime, =, true, ;, }, public, synchronized, long, setTimeBase, (]
[=, START, ;, this, ., domainIsPointsInTime, =, true, ;, }, public, synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if]
[., position, =, START, ;, this, ., domainIsPointsInTime, =, true, ;, }, public, synchronized, long, setTimeBase, (, RegularTimePeriod, start, )]
[;, this, ., domainIsPointsInTime, =, true, ;, }, public, synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if, (, this]
[=, true, ;, }, public, synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if, (, this, ., pointsInTime, [, 0]
[., domainIsPointsInTime, =, true, ;, }, public, synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if, (, this, ., pointsInTime]
[;, }, public, synchronized, long, setTimeBase, (, RegularTimePeriod, start, ), {, if, (, this, ., pointsInTime, [, 0, ], ==]
[), {, this, ., pointsInTime, [, 0, ], =, start, ;, for, (, int, i, =, 1, ;, i, <]
[==, null, ), {, this, ., pointsInTime, [, 0, ], =, start, ;, for, (, int, i, =, 1, ;]
[[, 0, ], ==, null, ), {, this, ., pointsInTime, [, 0, ], =, start, ;, for, (, int, i]
[., pointsInTime, [, 0, ], ==, null, ), {, this, ., pointsInTime, [, 0, ], =, start, ;, for, (]
[], ==, null, ), {, this, ., pointsInTime, [, 0, ], =, start, ;, for, (, int, i, =, 1]
[), {, this, ., pointsInTime, [, 0, ], =, start, ;, for, (, int, i, =, 1, ;, i, <]
[=, start, ;, for, (, int, i, =, 1, ;, i, <, this, ., historyCount, ;, i, ++, ), {]
[[, 0, ], =, start, ;, for, (, int, i, =, 1, ;, i, <, this, ., historyCount, ;, i]
[., pointsInTime, [, 0, ], =, start, ;, for, (, int, i, =, 1, ;, i, <, this, ., historyCount]
[], =, start, ;, for, (, int, i, =, 1, ;, i, <, this, ., historyCount, ;, i, ++, )]
[;, for, (, int, i, =, 1, ;, i, <, this, ., historyCount, ;, i, ++, ), {, this, .]
[;, i, <, this, ., historyCount, ;, i, ++, ), {, this, ., pointsInTime, [, i, ], =, this, .]
[;, i, ++, ), {, this, ., pointsInTime, [, i, ], =, this, ., pointsInTime, [, i, -, 1, ]]
[<, this, ., historyCount, ;, i, ++, ), {, this, ., pointsInTime, [, i, ], =, this, ., pointsInTime, []
[;, i, ++, ), {, this, ., pointsInTime, [, i, ], =, this, ., pointsInTime, [, i, -, 1, ]]
[., historyCount, ;, i, ++, ), {, this, ., pointsInTime, [, i, ], =, this, ., pointsInTime, [, i, -]
[), {, this, ., pointsInTime, [, i, ], =, this, ., pointsInTime, [, i, -, 1, ], ., next, (]
[++, ), {, this, ., pointsInTime, [, i, ], =, this, ., pointsInTime, [, i, -, 1, ], ., next]
[=, this, ., pointsInTime, [, i, -, 1, ], ., next, (, ), ;, }, }, long, oldestL, =, this]
[[, i, ], =, this, ., pointsInTime, [, i, -, 1, ], ., next, (, ), ;, }, }, long]
[., pointsInTime, [, i, ], =, this, ., pointsInTime, [, i, -, 1, ], ., next, (, ), ;, }]
[], =, this, ., pointsInTime, [, i, -, 1, ], ., next, (, ), ;, }, }, long, oldestL, =]
[;, }, }, long, oldestL, =, this, ., pointsInTime, [, 0, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;]
[., next, (, ), ;, }, }, long, oldestL, =, this, ., pointsInTime, [, 0, ], ., getFirstMillisecond, (, this]
[[, i, -, 1, ], ., next, (, ), ;, }, }, long, oldestL, =, this, ., pointsInTime, [, 0]
[., pointsInTime, [, i, -, 1, ], ., next, (, ), ;, }, }, long, oldestL, =, this, ., pointsInTime]
[], ., next, (, ), ;, }, }, long, oldestL, =, this, ., pointsInTime, [, 0, ], ., getFirstMillisecond, (]
[-, 1, ], ., next, (, ), ;, }, }, long, oldestL, =, this, ., pointsInTime, [, 0, ], .]
[], ., next, (, ), ;, }, }, long, oldestL, =, this, ., pointsInTime, [, 0, ], ., getFirstMillisecond, (]
[;, long, nextL, =, this, ., pointsInTime, [, 1, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, this, .]
[., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, nextL, =, this, ., pointsInTime, [, 1, ], ., getFirstMillisecond, (]
[[, 0, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, nextL, =, this, ., pointsInTime, [, 1, ]]
[., pointsInTime, [, 0, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, nextL, =, this, ., pointsInTime, []
[], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, nextL, =, this, ., pointsInTime, [, 1, ], ., getFirstMillisecond]
[), ;, long, nextL, =, this, ., pointsInTime, [, 1, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, this]
[., workingCalendar, ), ;, long, nextL, =, this, ., pointsInTime, [, 1, ], ., getFirstMillisecond, (, this, ., workingCalendar, )]
[;, this, ., deltaTime, =, nextL, -, oldestL, ;, this, ., oldestAt, =, 0, ;, this, ., newestAt, =, this]
[., getFirstMillisecond, (, this, ., workingCalendar, ), ;, this, ., deltaTime, =, nextL, -, oldestL, ;, this, ., oldestAt, =]
[[, 1, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, this, ., deltaTime, =, nextL, -, oldestL, ;, this]
[., pointsInTime, [, 1, ], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, this, ., deltaTime, =, nextL, -, oldestL]
[], ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, this, ., deltaTime, =, nextL, -, oldestL, ;, this, ., oldestAt]
[), ;, this, ., deltaTime, =, nextL, -, oldestL, ;, this, ., oldestAt, =, 0, ;, this, ., newestAt, =]
[., workingCalendar, ), ;, this, ., deltaTime, =, nextL, -, oldestL, ;, this, ., oldestAt, =, 0, ;, this, .]
[=, nextL, -, oldestL, ;, this, ., oldestAt, =, 0, ;, this, ., newestAt, =, this, ., historyCount, -, 1]
[., deltaTime, =, nextL, -, oldestL, ;, this, ., oldestAt, =, 0, ;, this, ., newestAt, =, this, ., historyCount]
[;, this, ., oldestAt, =, 0, ;, this, ., newestAt, =, this, ., historyCount, -, 1, ;, findDomainLimits, (, )]
[-, oldestL, ;, this, ., oldestAt, =, 0, ;, this, ., newestAt, =, this, ., historyCount, -, 1, ;, findDomainLimits]
[;, this, ., oldestAt, =, 0, ;, this, ., newestAt, =, this, ., historyCount, -, 1, ;, findDomainLimits, (, )]
[=, 0, ;, this, ., newestAt, =, this, ., historyCount, -, 1, ;, findDomainLimits, (, ), ;, return, this, .]
[., oldestAt, =, 0, ;, this, ., newestAt, =, this, ., historyCount, -, 1, ;, findDomainLimits, (, ), ;, return]
[;, this, ., newestAt, =, this, ., historyCount, -, 1, ;, findDomainLimits, (, ), ;, return, this, ., deltaTime, ;]
[=, this, ., historyCount, -, 1, ;, findDomainLimits, (, ), ;, return, this, ., deltaTime, ;, }, protected, void, findDomainLimits]
[., newestAt, =, this, ., historyCount, -, 1, ;, findDomainLimits, (, ), ;, return, this, ., deltaTime, ;, }, protected]
[;, findDomainLimits, (, ), ;, return, this, ., deltaTime, ;, }, protected, void, findDomainLimits, (, ), {, long, startL, =]
[-, 1, ;, findDomainLimits, (, ), ;, return, this, ., deltaTime, ;, }, protected, void, findDomainLimits, (, ), {, long]
[., historyCount, -, 1, ;, findDomainLimits, (, ), ;, return, this, ., deltaTime, ;, }, protected, void, findDomainLimits, (, )]
[;, findDomainLimits, (, ), ;, return, this, ., deltaTime, ;, }, protected, void, findDomainLimits, (, ), {, long, startL, =]
[;, return, this, ., deltaTime, ;, }, protected, void, findDomainLimits, (, ), {, long, startL, =, getOldestTime, (, ), .]
[;, }, protected, void, findDomainLimits, (, ), {, long, startL, =, getOldestTime, (, ), ., getFirstMillisecond, (, this, ., workingCalendar]
[., deltaTime, ;, }, protected, void, findDomainLimits, (, ), {, long, startL, =, getOldestTime, (, ), ., getFirstMillisecond, (, this]
[;, long, endL, ;, if, (, this, ., domainIsPointsInTime, ), {, endL, =, getNewestTime, (, ), ., getFirstMillisecond, (, this]
[., getFirstMillisecond, (, this, ., workingCalendar, ), ;, long, endL, ;, if, (, this, ., domainIsPointsInTime, ), {, endL, =]
[), ;, long, endL, ;, if, (, this, ., domainIsPointsInTime, ), {, endL, =, getNewestTime, (, ), ., getFirstMillisecond, (]
[., workingCalendar, ), ;, long, endL, ;, if, (, this, ., domainIsPointsInTime, ), {, endL, =, getNewestTime, (, ), .]
[), {, endL, =, getNewestTime, (, ), ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, }, else, {, endL, =]
[., domainIsPointsInTime, ), {, endL, =, getNewestTime, (, ), ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, }, else, {]
[=, getNewestTime, (, ), ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, }, else, {, endL, =, getNewestTime, (, )]
[;, }, else, {, endL, =, getNewestTime, (, ), ., getLastMillisecond, (, this, ., workingCalendar, ), ;, }, this, .]
[., getFirstMillisecond, (, this, ., workingCalendar, ), ;, }, else, {, endL, =, getNewestTime, (, ), ., getLastMillisecond, (, this]
[), ;, }, else, {, endL, =, getNewestTime, (, ), ., getLastMillisecond, (, this, ., workingCalendar, ), ;, }, this]
[., workingCalendar, ), ;, }, else, {, endL, =, getNewestTime, (, ), ., getLastMillisecond, (, this, ., workingCalendar, ), ;]
[=, getNewestTime, (, ), ., getLastMillisecond, (, this, ., workingCalendar, ), ;, }, this, ., domainStart, =, new, Long, (]
[;, }, this, ., domainStart, =, new, Long, (, startL, ), ;, this, ., domainEnd, =, new, Long, (, endL]
[., getLastMillisecond, (, this, ., workingCalendar, ), ;, }, this, ., domainStart, =, new, Long, (, startL, ), ;, this]
[), ;, }, this, ., domainStart, =, new, Long, (, startL, ), ;, this, ., domainEnd, =, new, Long, (]
[., workingCalendar, ), ;, }, this, ., domainStart, =, new, Long, (, startL, ), ;, this, ., domainEnd, =, new]
[=, new, Long, (, startL, ), ;, this, ., domainEnd, =, new, Long, (, endL, ), ;, this, ., domainRange]
[., domainStart, =, new, Long, (, startL, ), ;, this, ., domainEnd, =, new, Long, (, endL, ), ;, this]
[;, this, ., domainEnd, =, new, Long, (, endL, ), ;, this, ., domainRange, =, new, Range, (, startL, ,]
[), ;, this, ., domainEnd, =, new, Long, (, endL, ), ;, this, ., domainRange, =, new, Range, (, startL]
[=, new, Long, (, endL, ), ;, this, ., domainRange, =, new, Range, (, startL, ,, endL, ), ;, }]
[., domainEnd, =, new, Long, (, endL, ), ;, this, ., domainRange, =, new, Range, (, startL, ,, endL, )]
[;, this, ., domainRange, =, new, Range, (, startL, ,, endL, ), ;, }, public, int, getPosition, (, ), {]
[), ;, this, ., domainRange, =, new, Range, (, startL, ,, endL, ), ;, }, public, int, getPosition, (, )]
[=, new, Range, (, startL, ,, endL, ), ;, }, public, int, getPosition, (, ), {, return, this, ., position]
[., domainRange, =, new, Range, (, startL, ,, endL, ), ;, }, public, int, getPosition, (, ), {, return, this]
[;, }, public, int, getPosition, (, ), {, return, this, ., position, ;, }, public, void, setPosition, (, int, position]
[,, endL, ), ;, }, public, int, getPosition, (, ), {, return, this, ., position, ;, }, public, void, setPosition]
[), ;, }, public, int, getPosition, (, ), {, return, this, ., position, ;, }, public, void, setPosition, (, int]
[;, }, public, void, setPosition, (, int, position, ), {, this, ., position, =, position, ;, }, public, void, addSeries]
[., position, ;, }, public, void, setPosition, (, int, position, ), {, this, ., position, =, position, ;, }, public]
[=, position, ;, }, public, void, addSeries, (, float, [, ], values, ,, int, seriesNumber, ,, Comparable, seriesKey, ), {]
[., position, =, position, ;, }, public, void, addSeries, (, float, [, ], values, ,, int, seriesNumber, ,, Comparable, seriesKey]
[;, }, public, void, addSeries, (, float, [, ], values, ,, int, seriesNumber, ,, Comparable, seriesKey, ), {, invalidateRangeInfo, (]
[;, int, i, ;, if, (, values, ==, null, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add null array of values.", ), ;]
[), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add null array of values.", ), ;, }, if, (, seriesNumber, >=, this, ., valueHistory, .]
[==, null, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add null array of values.", ), ;, }, if, (, seriesNumber, >=, this, .]
[), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add null array of values.", ), ;, }, if, (, seriesNumber, >=, this, ., valueHistory, .]
[;, }, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor"]
[), ;, }, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +]
[+, "cannot add null array of values.", ), ;, }, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (]
[), ;, }, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +]
[), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ]]
[>=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ]]
[., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (, this, ., valueHistory, []
[., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addSeries(): ", +, "cannot add more series than specified in c'tor", ), ;, }, if, (, this, .]
[;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ]]
[), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber]
[+, "cannot add more series than specified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory]
[), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber]
[), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount]
[==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this]
[[, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount]
[., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this]
[], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;]
[), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount]
[=, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }, int, srcLength, =, values, .]
[[, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }, int, srcLength]
[., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }]
[], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }, int, srcLength, =, values]
[;, this, ., seriesCount, ++, ;, }, int, srcLength, =, values, ., length, ;, int, copyLength, =, this, ., historyCount]
[), ;, this, ., seriesCount, ++, ;, }, int, srcLength, =, values, ., length, ;, int, copyLength, =, this, .]
[., historyCount, ), ;, this, ., seriesCount, ++, ;, }, int, srcLength, =, values, ., length, ;, int, copyLength, =]
[;, }, int, srcLength, =, values, ., length, ;, int, copyLength, =, this, ., historyCount, ;, boolean, fillNeeded, =, false]
[++, ;, }, int, srcLength, =, values, ., length, ;, int, copyLength, =, this, ., historyCount, ;, boolean, fillNeeded, =]
[., seriesCount, ++, ;, }, int, srcLength, =, values, ., length, ;, int, copyLength, =, this, ., historyCount, ;, boolean]
[;, int, copyLength, =, this, ., historyCount, ;, boolean, fillNeeded, =, false, ;, if, (, srcLength, <, this, ., historyCount]
[., length, ;, int, copyLength, =, this, ., historyCount, ;, boolean, fillNeeded, =, false, ;, if, (, srcLength, <, this]
[;, boolean, fillNeeded, =, false, ;, if, (, srcLength, <, this, ., historyCount, ), {, fillNeeded, =, true, ;, copyLength]
[., historyCount, ;, boolean, fillNeeded, =, false, ;, if, (, srcLength, <, this, ., historyCount, ), {, fillNeeded, =, true]
[;, if, (, srcLength, <, this, ., historyCount, ), {, fillNeeded, =, true, ;, copyLength, =, srcLength, ;, }, for]
[), {, fillNeeded, =, true, ;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;, i, <, copyLength]
[<, this, ., historyCount, ), {, fillNeeded, =, true, ;, copyLength, =, srcLength, ;, }, for, (, i, =, 0]
[), {, fillNeeded, =, true, ;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;, i, <, copyLength]
[., historyCount, ), {, fillNeeded, =, true, ;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;, i]
[=, true, ;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;, i, <, copyLength, ;, i, ++]
[;, copyLength, =, srcLength, ;, }, for, (, i, =, 0, ;, i, <, copyLength, ;, i, ++, ), {]
[=, srcLength, ;, }, for, (, i, =, 0, ;, i, <, copyLength, ;, i, ++, ), {, this, .]
[;, }, for, (, i, =, 0, ;, i, <, copyLength, ;, i, ++, ), {, this, ., valueHistory, []
[=, 0, ;, i, <, copyLength, ;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (]
[;, i, <, copyLength, ;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,]
[;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, values, [, i, ]]
[<, copyLength, ;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, values, []
[;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, values, [, i, ]]
[), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, values, [, i, ], ), ;, }]
[++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, values, [, i, ], ), ;]
[;, }, if, (, fillNeeded, ), {, for, (, i, =, copyLength, ;, i, <, this, ., historyCount, ;, i]
[., enterData, (, i, ,, values, [, i, ], ), ;, }, if, (, fillNeeded, ), {, for, (, i]
[[, seriesNumber, ], ., enterData, (, i, ,, values, [, i, ], ), ;, }, if, (, fillNeeded, ), {]
[., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, values, [, i, ], ), ;, }, if, (, fillNeeded]
[], ., enterData, (, i, ,, values, [, i, ], ), ;, }, if, (, fillNeeded, ), {, for, (]
[,, values, [, i, ], ), ;, }, if, (, fillNeeded, ), {, for, (, i, =, copyLength, ;, i]
[), ;, }, if, (, fillNeeded, ), {, for, (, i, =, copyLength, ;, i, <, this, ., historyCount, ;]
[[, i, ], ), ;, }, if, (, fillNeeded, ), {, for, (, i, =, copyLength, ;, i, <, this]
[], ), ;, }, if, (, fillNeeded, ), {, for, (, i, =, copyLength, ;, i, <, this, ., historyCount]
[), {, for, (, i, =, copyLength, ;, i, <, this, ., historyCount, ;, i, ++, ), {, this, .]
[=, copyLength, ;, i, <, this, ., historyCount, ;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], .]
[;, i, <, this, ., historyCount, ;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (]
[;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, 0.0f, ), ;, }]
[<, this, ., historyCount, ;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,]
[;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, 0.0f, ), ;, }]
[., historyCount, ;, i, ++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, 0.0f, )]
[), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, 0.0f, ), ;, }, }, if, (]
[++, ), {, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, 0.0f, ), ;, }, }, if]
[;, }, }, if, (, seriesKey, !=, null, ), {, this, ., seriesKeys, [, seriesNumber, ], =, seriesKey, ;, }]
[., enterData, (, i, ,, 0.0f, ), ;, }, }, if, (, seriesKey, !=, null, ), {, this, ., seriesKeys]
[[, seriesNumber, ], ., enterData, (, i, ,, 0.0f, ), ;, }, }, if, (, seriesKey, !=, null, ), {]
[., valueHistory, [, seriesNumber, ], ., enterData, (, i, ,, 0.0f, ), ;, }, }, if, (, seriesKey, !=, null]
[], ., enterData, (, i, ,, 0.0f, ), ;, }, }, if, (, seriesKey, !=, null, ), {, this, .]
[,, 0.0f, ), ;, }, }, if, (, seriesKey, !=, null, ), {, this, ., seriesKeys, [, seriesNumber, ], =]
[), ;, }, }, if, (, seriesKey, !=, null, ), {, this, ., seriesKeys, [, seriesNumber, ], =, seriesKey, ;]
[), {, this, ., seriesKeys, [, seriesNumber, ], =, seriesKey, ;, }, fireSeriesChanged, (, ), ;, }, public, void, setSeriesKey]
[!=, null, ), {, this, ., seriesKeys, [, seriesNumber, ], =, seriesKey, ;, }, fireSeriesChanged, (, ), ;, }, public]
[), {, this, ., seriesKeys, [, seriesNumber, ], =, seriesKey, ;, }, fireSeriesChanged, (, ), ;, }, public, void, setSeriesKey]
[=, seriesKey, ;, }, fireSeriesChanged, (, ), ;, }, public, void, setSeriesKey, (, int, seriesNumber, ,, Comparable, key, ), {]
[[, seriesNumber, ], =, seriesKey, ;, }, fireSeriesChanged, (, ), ;, }, public, void, setSeriesKey, (, int, seriesNumber, ,, Comparable]
[., seriesKeys, [, seriesNumber, ], =, seriesKey, ;, }, fireSeriesChanged, (, ), ;, }, public, void, setSeriesKey, (, int, seriesNumber]
[], =, seriesKey, ;, }, fireSeriesChanged, (, ), ;, }, public, void, setSeriesKey, (, int, seriesNumber, ,, Comparable, key, )]
[;, }, fireSeriesChanged, (, ), ;, }, public, void, setSeriesKey, (, int, seriesNumber, ,, Comparable, key, ), {, this, .]
[;, }, public, void, setSeriesKey, (, int, seriesNumber, ,, Comparable, key, ), {, this, ., seriesKeys, [, seriesNumber, ], =]
[=, key, ;, }, public, void, addValue, (, int, seriesNumber, ,, int, index, ,, float, value, ), {, invalidateRangeInfo, (]
[[, seriesNumber, ], =, key, ;, }, public, void, addValue, (, int, seriesNumber, ,, int, index, ,, float, value, )]
[., seriesKeys, [, seriesNumber, ], =, key, ;, }, public, void, addValue, (, int, seriesNumber, ,, int, index, ,, float]
[], =, key, ;, }, public, void, addValue, (, int, seriesNumber, ,, int, index, ,, float, value, ), {, invalidateRangeInfo]
[;, }, public, void, addValue, (, int, seriesNumber, ,, int, index, ,, float, value, ), {, invalidateRangeInfo, (, ), ;]
[;, if, (, seriesNumber, >=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +, seriesNumber, +]
[), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (, this, ., valueHistory, []
[>=, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }]
[), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (, this, ., valueHistory, []
[., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (, this, .]
[., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "TimeSeriesDataset.addValue(): series #", +, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (]
[;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ]]
[), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber]
[+, "unspecified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory]
[+, seriesNumber, +, "unspecified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this]
[+, "unspecified in c'tor", ), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory]
[), ;, }, if, (, this, ., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber]
[), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount]
[==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this]
[[, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount]
[., valueHistory, [, seriesNumber, ], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this]
[], ==, null, ), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;]
[), {, this, ., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount]
[=, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }, this, ., valueHistory, [, seriesNumber]
[[, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }, this, .]
[., valueHistory, [, seriesNumber, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }]
[], =, new, ValueSequence, (, this, ., historyCount, ), ;, this, ., seriesCount, ++, ;, }, this, ., valueHistory, []
[;, this, ., seriesCount, ++, ;, }, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, index, ,, value, )]
[), ;, this, ., seriesCount, ++, ;, }, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, index, ,, value]
[., historyCount, ), ;, this, ., seriesCount, ++, ;, }, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, index]
[;, }, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, index, ,, value, ), ;, fireSeriesChanged, (, ), ;]
[++, ;, }, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, index, ,, value, ), ;, fireSeriesChanged, (, )]
[., seriesCount, ++, ;, }, this, ., valueHistory, [, seriesNumber, ], ., enterData, (, index, ,, value, ), ;, fireSeriesChanged]
[;, fireSeriesChanged, (, ), ;, }, public, int, getSeriesCount, (, ), {, return, this, ., seriesCount, ;, }, public, int]
[., enterData, (, index, ,, value, ), ;, fireSeriesChanged, (, ), ;, }, public, int, getSeriesCount, (, ), {, return]
[[, seriesNumber, ], ., enterData, (, index, ,, value, ), ;, fireSeriesChanged, (, ), ;, }, public, int, getSeriesCount, (]
[., valueHistory, [, seriesNumber, ], ., enterData, (, index, ,, value, ), ;, fireSeriesChanged, (, ), ;, }, public, int]
[], ., enterData, (, index, ,, value, ), ;, fireSeriesChanged, (, ), ;, }, public, int, getSeriesCount, (, ), {]
[,, value, ), ;, fireSeriesChanged, (, ), ;, }, public, int, getSeriesCount, (, ), {, return, this, ., seriesCount, ;]
[), ;, fireSeriesChanged, (, ), ;, }, public, int, getSeriesCount, (, ), {, return, this, ., seriesCount, ;, }, public]
[;, }, public, int, getSeriesCount, (, ), {, return, this, ., seriesCount, ;, }, public, int, getItemCount, (, int, series]
[;, }, public, int, getItemCount, (, int, series, ), {, return, this, ., historyCount, ;, }, protected, int, translateGet, (]
[., seriesCount, ;, }, public, int, getItemCount, (, int, series, ), {, return, this, ., historyCount, ;, }, protected, int]
[;, }, protected, int, translateGet, (, int, toFetch, ), {, if, (, this, ., oldestAt, ==, 0, ), {, return]
[., historyCount, ;, }, protected, int, translateGet, (, int, toFetch, ), {, if, (, this, ., oldestAt, ==, 0, )]
[), {, return, toFetch, ;, }, int, newIndex, =, toFetch, +, this, ., oldestAt, ;, if, (, newIndex, >=, this]
[==, 0, ), {, return, toFetch, ;, }, int, newIndex, =, toFetch, +, this, ., oldestAt, ;, if, (, newIndex]
[., oldestAt, ==, 0, ), {, return, toFetch, ;, }, int, newIndex, =, toFetch, +, this, ., oldestAt, ;, if]
[), {, return, toFetch, ;, }, int, newIndex, =, toFetch, +, this, ., oldestAt, ;, if, (, newIndex, >=, this]
[;, }, int, newIndex, =, toFetch, +, this, ., oldestAt, ;, if, (, newIndex, >=, this, ., historyCount, ), {]
[;, if, (, newIndex, >=, this, ., historyCount, ), {, newIndex, -=, this, ., historyCount, ;, }, return, newIndex, ;]
[+, this, ., oldestAt, ;, if, (, newIndex, >=, this, ., historyCount, ), {, newIndex, -=, this, ., historyCount, ;]
[;, if, (, newIndex, >=, this, ., historyCount, ), {, newIndex, -=, this, ., historyCount, ;, }, return, newIndex, ;]
[., oldestAt, ;, if, (, newIndex, >=, this, ., historyCount, ), {, newIndex, -=, this, ., historyCount, ;, }, return]
[), {, newIndex, -=, this, ., historyCount, ;, }, return, newIndex, ;, }, public, int, offsetFromNewest, (, int, delta, )]
[>=, this, ., historyCount, ), {, newIndex, -=, this, ., historyCount, ;, }, return, newIndex, ;, }, public, int, offsetFromNewest]
[), {, newIndex, -=, this, ., historyCount, ;, }, return, newIndex, ;, }, public, int, offsetFromNewest, (, int, delta, )]
[., historyCount, ), {, newIndex, -=, this, ., historyCount, ;, }, return, newIndex, ;, }, public, int, offsetFromNewest, (, int]
[-=, this, ., historyCount, ;, }, return, newIndex, ;, }, public, int, offsetFromNewest, (, int, delta, ), {, return, wrapOffset]
[;, }, return, newIndex, ;, }, public, int, offsetFromNewest, (, int, delta, ), {, return, wrapOffset, (, this, ., newestAt]
[., historyCount, ;, }, return, newIndex, ;, }, public, int, offsetFromNewest, (, int, delta, ), {, return, wrapOffset, (, this]
[;, }, public, int, offsetFromNewest, (, int, delta, ), {, return, wrapOffset, (, this, ., newestAt, +, delta, ), ;]
[;, }, public, int, offsetFromOldest, (, int, delta, ), {, return, wrapOffset, (, this, ., oldestAt, +, delta, ), ;]
[), ;, }, public, int, offsetFromOldest, (, int, delta, ), {, return, wrapOffset, (, this, ., oldestAt, +, delta, )]
[+, delta, ), ;, }, public, int, offsetFromOldest, (, int, delta, ), {, return, wrapOffset, (, this, ., oldestAt, +]
[., newestAt, +, delta, ), ;, }, public, int, offsetFromOldest, (, int, delta, ), {, return, wrapOffset, (, this, .]
[), ;, }, public, int, offsetFromOldest, (, int, delta, ), {, return, wrapOffset, (, this, ., oldestAt, +, delta, )]
[;, }, protected, int, wrapOffset, (, int, protoIndex, ), {, int, tmp, =, protoIndex, ;, if, (, tmp, >=, this]
[), ;, }, protected, int, wrapOffset, (, int, protoIndex, ), {, int, tmp, =, protoIndex, ;, if, (, tmp, >=]
[+, delta, ), ;, }, protected, int, wrapOffset, (, int, protoIndex, ), {, int, tmp, =, protoIndex, ;, if, (]
[., oldestAt, +, delta, ), ;, }, protected, int, wrapOffset, (, int, protoIndex, ), {, int, tmp, =, protoIndex, ;]
[), ;, }, protected, int, wrapOffset, (, int, protoIndex, ), {, int, tmp, =, protoIndex, ;, if, (, tmp, >=]
[;, if, (, tmp, >=, this, ., historyCount, ), {, tmp, -=, this, ., historyCount, ;, }, else, if, (]
[), {, tmp, -=, this, ., historyCount, ;, }, else, if, (, tmp, <, 0, ), {, tmp, +=, this]
[>=, this, ., historyCount, ), {, tmp, -=, this, ., historyCount, ;, }, else, if, (, tmp, <, 0, )]
[), {, tmp, -=, this, ., historyCount, ;, }, else, if, (, tmp, <, 0, ), {, tmp, +=, this]
[., historyCount, ), {, tmp, -=, this, ., historyCount, ;, }, else, if, (, tmp, <, 0, ), {, tmp]
[-=, this, ., historyCount, ;, }, else, if, (, tmp, <, 0, ), {, tmp, +=, this, ., historyCount, ;]
[;, }, else, if, (, tmp, <, 0, ), {, tmp, +=, this, ., historyCount, ;, }, return, tmp, ;]
[., historyCount, ;, }, else, if, (, tmp, <, 0, ), {, tmp, +=, this, ., historyCount, ;, }, return]
[), {, tmp, +=, this, ., historyCount, ;, }, return, tmp, ;, }, public, synchronized, RegularTimePeriod, advanceTime, (, ), {]
[<, 0, ), {, tmp, +=, this, ., historyCount, ;, }, return, tmp, ;, }, public, synchronized, RegularTimePeriod, advanceTime, (]
[), {, tmp, +=, this, ., historyCount, ;, }, return, tmp, ;, }, public, synchronized, RegularTimePeriod, advanceTime, (, ), {]
[+=, this, ., historyCount, ;, }, return, tmp, ;, }, public, synchronized, RegularTimePeriod, advanceTime, (, ), {, RegularTimePeriod, nextInstant, =]
[;, }, return, tmp, ;, }, public, synchronized, RegularTimePeriod, advanceTime, (, ), {, RegularTimePeriod, nextInstant, =, this, ., pointsInTime, []
[., historyCount, ;, }, return, tmp, ;, }, public, synchronized, RegularTimePeriod, advanceTime, (, ), {, RegularTimePeriod, nextInstant, =, this, .]
[;, }, public, synchronized, RegularTimePeriod, advanceTime, (, ), {, RegularTimePeriod, nextInstant, =, this, ., pointsInTime, [, this, ., newestAt, ]]
[;, this, ., newestAt, =, this, ., oldestAt, ;, boolean, extremaChanged, =, false, ;, float, oldMax, =, 0.0f, ;, if]
[., next, (, ), ;, this, ., newestAt, =, this, ., oldestAt, ;, boolean, extremaChanged, =, false, ;, float, oldMax]
[[, this, ., newestAt, ], ., next, (, ), ;, this, ., newestAt, =, this, ., oldestAt, ;, boolean, extremaChanged]
[., pointsInTime, [, this, ., newestAt, ], ., next, (, ), ;, this, ., newestAt, =, this, ., oldestAt, ;]
[], ., next, (, ), ;, this, ., newestAt, =, this, ., oldestAt, ;, boolean, extremaChanged, =, false, ;, float]
[., newestAt, ], ., next, (, ), ;, this, ., newestAt, =, this, ., oldestAt, ;, boolean, extremaChanged, =, false]
[=, this, ., oldestAt, ;, boolean, extremaChanged, =, false, ;, float, oldMax, =, 0.0f, ;, if, (, this, ., maxValue]
[., newestAt, =, this, ., oldestAt, ;, boolean, extremaChanged, =, false, ;, float, oldMax, =, 0.0f, ;, if, (, this]
[;, boolean, extremaChanged, =, false, ;, float, oldMax, =, 0.0f, ;, if, (, this, ., maxValue, !=, null, ), {]
[., oldestAt, ;, boolean, extremaChanged, =, false, ;, float, oldMax, =, 0.0f, ;, if, (, this, ., maxValue, !=, null]
[;, float, oldMax, =, 0.0f, ;, if, (, this, ., maxValue, !=, null, ), {, oldMax, =, this, ., maxValue]
[;, if, (, this, ., maxValue, !=, null, ), {, oldMax, =, this, ., maxValue, ., floatValue, (, ), ;]
[), {, oldMax, =, this, ., maxValue, ., floatValue, (, ), ;, }, for, (, int, s, =, 0, ;]
[!=, null, ), {, oldMax, =, this, ., maxValue, ., floatValue, (, ), ;, }, for, (, int, s, =]
[., maxValue, !=, null, ), {, oldMax, =, this, ., maxValue, ., floatValue, (, ), ;, }, for, (, int]
[), {, oldMax, =, this, ., maxValue, ., floatValue, (, ), ;, }, for, (, int, s, =, 0, ;]
[=, this, ., maxValue, ., floatValue, (, ), ;, }, for, (, int, s, =, 0, ;, s, <, getSeriesCount]
[;, }, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, if]
[., floatValue, (, ), ;, }, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s]
[., maxValue, ., floatValue, (, ), ;, }, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, )]
[;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], .]
[;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ., getData, (, this, ., oldestAt, )]
[<, getSeriesCount, (, ), ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ., getData, (]
[;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ., getData, (, this, ., oldestAt, )]
[), {, if, (, this, ., valueHistory, [, s, ], ., getData, (, this, ., oldestAt, ), ==, oldMax, )]
[++, ), {, if, (, this, ., valueHistory, [, s, ], ., getData, (, this, ., oldestAt, ), ==, oldMax]
[), {, extremaChanged, =, true, ;, }, if, (, extremaChanged, ), {, break, ;, }, }, if, (, extremaChanged, )]
[==, oldMax, ), {, extremaChanged, =, true, ;, }, if, (, extremaChanged, ), {, break, ;, }, }, if, (]
[., getData, (, this, ., oldestAt, ), ==, oldMax, ), {, extremaChanged, =, true, ;, }, if, (, extremaChanged, )]
[[, s, ], ., getData, (, this, ., oldestAt, ), ==, oldMax, ), {, extremaChanged, =, true, ;, }, if]
[., valueHistory, [, s, ], ., getData, (, this, ., oldestAt, ), ==, oldMax, ), {, extremaChanged, =, true, ;]
[], ., getData, (, this, ., oldestAt, ), ==, oldMax, ), {, extremaChanged, =, true, ;, }, if, (, extremaChanged]
[), ==, oldMax, ), {, extremaChanged, =, true, ;, }, if, (, extremaChanged, ), {, break, ;, }, }, if]
[., oldestAt, ), ==, oldMax, ), {, extremaChanged, =, true, ;, }, if, (, extremaChanged, ), {, break, ;, }]
[), {, extremaChanged, =, true, ;, }, if, (, extremaChanged, ), {, break, ;, }, }, if, (, extremaChanged, )]
[=, true, ;, }, if, (, extremaChanged, ), {, break, ;, }, }, if, (, extremaChanged, ), {, invalidateRangeInfo, (]
[;, }, if, (, extremaChanged, ), {, break, ;, }, }, if, (, extremaChanged, ), {, invalidateRangeInfo, (, ), ;]
[), {, break, ;, }, }, if, (, extremaChanged, ), {, invalidateRangeInfo, (, ), ;, }, float, wiper, =, (]
[), {, invalidateRangeInfo, (, ), ;, }, float, wiper, =, (, float, ), 0.0, ;, for, (, int, s, =]
[;, }, float, wiper, =, (, float, ), 0.0, ;, for, (, int, s, =, 0, ;, s, <, getSeriesCount]
[;, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, this, .]
[;, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, this, .]
[;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, this, ., valueHistory, [, s, ], ., enterData, (]
[;, s, ++, ), {, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, wiper, )]
[<, getSeriesCount, (, ), ;, s, ++, ), {, this, ., valueHistory, [, s, ], ., enterData, (, this, .]
[;, s, ++, ), {, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, wiper, )]
[), {, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, wiper, ), ;, }, this]
[++, ), {, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, wiper, ), ;, }]
[;, }, this, ., pointsInTime, [, this, ., newestAt, ], =, nextInstant, ;, this, ., oldestAt, ++, ;, if, (]
[., enterData, (, this, ., newestAt, ,, wiper, ), ;, }, this, ., pointsInTime, [, this, ., newestAt, ], =]
[[, s, ], ., enterData, (, this, ., newestAt, ,, wiper, ), ;, }, this, ., pointsInTime, [, this, .]
[., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, wiper, ), ;, }, this, ., pointsInTime, []
[], ., enterData, (, this, ., newestAt, ,, wiper, ), ;, }, this, ., pointsInTime, [, this, ., newestAt, ]]
[,, wiper, ), ;, }, this, ., pointsInTime, [, this, ., newestAt, ], =, nextInstant, ;, this, ., oldestAt, ++]
[., newestAt, ,, wiper, ), ;, }, this, ., pointsInTime, [, this, ., newestAt, ], =, nextInstant, ;, this, .]
[), ;, }, this, ., pointsInTime, [, this, ., newestAt, ], =, nextInstant, ;, this, ., oldestAt, ++, ;, if]
[=, nextInstant, ;, this, ., oldestAt, ++, ;, if, (, this, ., oldestAt, >=, this, ., historyCount, ), {, this]
[[, this, ., newestAt, ], =, nextInstant, ;, this, ., oldestAt, ++, ;, if, (, this, ., oldestAt, >=, this]
[., pointsInTime, [, this, ., newestAt, ], =, nextInstant, ;, this, ., oldestAt, ++, ;, if, (, this, ., oldestAt]
[], =, nextInstant, ;, this, ., oldestAt, ++, ;, if, (, this, ., oldestAt, >=, this, ., historyCount, ), {]
[., newestAt, ], =, nextInstant, ;, this, ., oldestAt, ++, ;, if, (, this, ., oldestAt, >=, this, ., historyCount]
[;, this, ., oldestAt, ++, ;, if, (, this, ., oldestAt, >=, this, ., historyCount, ), {, this, ., oldestAt]
[;, if, (, this, ., oldestAt, >=, this, ., historyCount, ), {, this, ., oldestAt, =, 0, ;, }, long]
[++, ;, if, (, this, ., oldestAt, >=, this, ., historyCount, ), {, this, ., oldestAt, =, 0, ;, }]
[., oldestAt, ++, ;, if, (, this, ., oldestAt, >=, this, ., historyCount, ), {, this, ., oldestAt, =, 0]
[), {, this, ., oldestAt, =, 0, ;, }, long, startL, =, this, ., domainStart, ., longValue, (, ), ;]
[>=, this, ., historyCount, ), {, this, ., oldestAt, =, 0, ;, }, long, startL, =, this, ., domainStart, .]
[., oldestAt, >=, this, ., historyCount, ), {, this, ., oldestAt, =, 0, ;, }, long, startL, =, this, .]
[), {, this, ., oldestAt, =, 0, ;, }, long, startL, =, this, ., domainStart, ., longValue, (, ), ;]
[., historyCount, ), {, this, ., oldestAt, =, 0, ;, }, long, startL, =, this, ., domainStart, ., longValue, (]
[=, 0, ;, }, long, startL, =, this, ., domainStart, ., longValue, (, ), ;, this, ., domainStart, =, new]
[., oldestAt, =, 0, ;, }, long, startL, =, this, ., domainStart, ., longValue, (, ), ;, this, ., domainStart]
[;, }, long, startL, =, this, ., domainStart, ., longValue, (, ), ;, this, ., domainStart, =, new, Long, (]
[;, this, ., domainStart, =, new, Long, (, startL, +, this, ., deltaTime, ), ;, long, endL, =, this, .]
[., longValue, (, ), ;, this, ., domainStart, =, new, Long, (, startL, +, this, ., deltaTime, ), ;, long]
[., domainStart, ., longValue, (, ), ;, this, ., domainStart, =, new, Long, (, startL, +, this, ., deltaTime, )]
[=, new, Long, (, startL, +, this, ., deltaTime, ), ;, long, endL, =, this, ., domainEnd, ., longValue, (]
[., domainStart, =, new, Long, (, startL, +, this, ., deltaTime, ), ;, long, endL, =, this, ., domainEnd, .]
[;, long, endL, =, this, ., domainEnd, ., longValue, (, ), ;, this, ., domainEnd, =, new, Long, (, endL]
[), ;, long, endL, =, this, ., domainEnd, ., longValue, (, ), ;, this, ., domainEnd, =, new, Long, (]
[+, this, ., deltaTime, ), ;, long, endL, =, this, ., domainEnd, ., longValue, (, ), ;, this, ., domainEnd]
[), ;, long, endL, =, this, ., domainEnd, ., longValue, (, ), ;, this, ., domainEnd, =, new, Long, (]
[., deltaTime, ), ;, long, endL, =, this, ., domainEnd, ., longValue, (, ), ;, this, ., domainEnd, =, new]
[;, this, ., domainEnd, =, new, Long, (, endL, +, this, ., deltaTime, ), ;, this, ., domainRange, =, new]
[., longValue, (, ), ;, this, ., domainEnd, =, new, Long, (, endL, +, this, ., deltaTime, ), ;, this]
[., domainEnd, ., longValue, (, ), ;, this, ., domainEnd, =, new, Long, (, endL, +, this, ., deltaTime, )]
[=, new, Long, (, endL, +, this, ., deltaTime, ), ;, this, ., domainRange, =, new, Range, (, startL, ,]
[., domainEnd, =, new, Long, (, endL, +, this, ., deltaTime, ), ;, this, ., domainRange, =, new, Range, (]
[;, this, ., domainRange, =, new, Range, (, startL, ,, endL, ), ;, fireSeriesChanged, (, ), ;, return, nextInstant, ;]
[), ;, this, ., domainRange, =, new, Range, (, startL, ,, endL, ), ;, fireSeriesChanged, (, ), ;, return, nextInstant]
[+, this, ., deltaTime, ), ;, this, ., domainRange, =, new, Range, (, startL, ,, endL, ), ;, fireSeriesChanged, (]
[), ;, this, ., domainRange, =, new, Range, (, startL, ,, endL, ), ;, fireSeriesChanged, (, ), ;, return, nextInstant]
[., deltaTime, ), ;, this, ., domainRange, =, new, Range, (, startL, ,, endL, ), ;, fireSeriesChanged, (, ), ;]
[=, new, Range, (, startL, ,, endL, ), ;, fireSeriesChanged, (, ), ;, return, nextInstant, ;, }, public, void, invalidateRangeInfo]
[., domainRange, =, new, Range, (, startL, ,, endL, ), ;, fireSeriesChanged, (, ), ;, return, nextInstant, ;, }, public]
[;, fireSeriesChanged, (, ), ;, return, nextInstant, ;, }, public, void, invalidateRangeInfo, (, ), {, this, ., maxValue, =, null]
[,, endL, ), ;, fireSeriesChanged, (, ), ;, return, nextInstant, ;, }, public, void, invalidateRangeInfo, (, ), {, this, .]
[), ;, fireSeriesChanged, (, ), ;, return, nextInstant, ;, }, public, void, invalidateRangeInfo, (, ), {, this, ., maxValue, =]
[;, return, nextInstant, ;, }, public, void, invalidateRangeInfo, (, ), {, this, ., maxValue, =, null, ;, this, ., valueRange]
[;, }, public, void, invalidateRangeInfo, (, ), {, this, ., maxValue, =, null, ;, this, ., valueRange, =, null, ;]
[=, null, ;, this, ., valueRange, =, null, ;, }, protected, double, findMaxValue, (, ), {, double, max, =, 0.0f]
[., maxValue, =, null, ;, this, ., valueRange, =, null, ;, }, protected, double, findMaxValue, (, ), {, double, max]
[;, this, ., valueRange, =, null, ;, }, protected, double, findMaxValue, (, ), {, double, max, =, 0.0f, ;, for]
[=, null, ;, }, protected, double, findMaxValue, (, ), {, double, max, =, 0.0f, ;, for, (, int, s, =]
[., valueRange, =, null, ;, }, protected, double, findMaxValue, (, ), {, double, max, =, 0.0f, ;, for, (, int]
[;, }, protected, double, findMaxValue, (, ), {, double, max, =, 0.0f, ;, for, (, int, s, =, 0, ;]
[;, for, (, int, s, =, 0, ;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, for, (]
[;, s, <, getSeriesCount, (, ), ;, s, ++, ), {, for, (, int, i, =, 0, ;, i, <]
[;, s, ++, ), {, for, (, int, i, =, 0, ;, i, <, this, ., historyCount, ;, i, ++]
[<, getSeriesCount, (, ), ;, s, ++, ), {, for, (, int, i, =, 0, ;, i, <, this, .]
[;, s, ++, ), {, for, (, int, i, =, 0, ;, i, <, this, ., historyCount, ;, i, ++]
[), {, for, (, int, i, =, 0, ;, i, <, this, ., historyCount, ;, i, ++, ), {, double]
[++, ), {, for, (, int, i, =, 0, ;, i, <, this, ., historyCount, ;, i, ++, ), {]
[;, i, <, this, ., historyCount, ;, i, ++, ), {, double, tmp, =, getYValue, (, s, ,, i, )]
[;, i, ++, ), {, double, tmp, =, getYValue, (, s, ,, i, ), ;, if, (, tmp, >, max]
[<, this, ., historyCount, ;, i, ++, ), {, double, tmp, =, getYValue, (, s, ,, i, ), ;, if]
[;, i, ++, ), {, double, tmp, =, getYValue, (, s, ,, i, ), ;, if, (, tmp, >, max]
[., historyCount, ;, i, ++, ), {, double, tmp, =, getYValue, (, s, ,, i, ), ;, if, (, tmp]
[), {, double, tmp, =, getYValue, (, s, ,, i, ), ;, if, (, tmp, >, max, ), {, max]
[++, ), {, double, tmp, =, getYValue, (, s, ,, i, ), ;, if, (, tmp, >, max, ), {]
[;, if, (, tmp, >, max, ), {, max, =, tmp, ;, }, }, }, return, max, ;, }, public]
[,, i, ), ;, if, (, tmp, >, max, ), {, max, =, tmp, ;, }, }, }, return, max]
[), ;, if, (, tmp, >, max, ), {, max, =, tmp, ;, }, }, }, return, max, ;, }]
[), {, max, =, tmp, ;, }, }, }, return, max, ;, }, public, int, getOldestIndex, (, ), {, return]
[>, max, ), {, max, =, tmp, ;, }, }, }, return, max, ;, }, public, int, getOldestIndex, (, )]
[), {, max, =, tmp, ;, }, }, }, return, max, ;, }, public, int, getOldestIndex, (, ), {, return]
[=, tmp, ;, }, }, }, return, max, ;, }, public, int, getOldestIndex, (, ), {, return, this, ., oldestAt]
[;, }, }, }, return, max, ;, }, public, int, getOldestIndex, (, ), {, return, this, ., oldestAt, ;, }]
[;, }, public, int, getOldestIndex, (, ), {, return, this, ., oldestAt, ;, }, public, int, getNewestIndex, (, ), {]
[;, }, public, int, getNewestIndex, (, ), {, return, this, ., newestAt, ;, }, public, void, appendData, (, float, []
[., oldestAt, ;, }, public, int, getNewestIndex, (, ), {, return, this, ., newestAt, ;, }, public, void, appendData, (]
[;, }, public, void, appendData, (, float, [, ], newData, ), {, int, nDataPoints, =, newData, ., length, ;, if]
[., newestAt, ;, }, public, void, appendData, (, float, [, ], newData, ), {, int, nDataPoints, =, newData, ., length]
[;, if, (, nDataPoints, >, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them in", ), ;, }]
[., length, ;, if, (, nDataPoints, >, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them in", )]
[), {, throw, new, IllegalArgumentException, (, "More data than series to put them in", ), ;, }, int, s, ;, for, (, s, =, 0, ;, s]
[>, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them in", ), ;, }, int, s, ;, for]
[), {, throw, new, IllegalArgumentException, (, "More data than series to put them in", ), ;, }, int, s, ;, for, (, s, =, 0, ;, s]
[., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them in", ), ;, }, int, s, ;, for, (, s, =, 0]
[., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them in", ), ;, }, int, s, ;, for, (, s]
[;, }, int, s, ;, for, (, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if]
[), ;, }, int, s, ;, for, (, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {]
[=, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==]
[;, s, <, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, )]
[;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory]
[<, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this]
[;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory]
[), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, [, s, ]]
[++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, [, s]
[), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, .]
[==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }]
[[, s, ], ==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount]
[., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this]
[], ==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;]
[), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, .]
[=, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (, this]
[[, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], .]
[., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s]
[], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (]
[;, }, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, newData, [, s, ], )]
[), ;, }, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, newData, [, s, ]]
[., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, newData, []
[;, }, fireSeriesChanged, (, ), ;, }, public, void, appendData, (, float, [, ], newData, ,, int, insertionIndex, ,, int]
[., enterData, (, this, ., newestAt, ,, newData, [, s, ], ), ;, }, fireSeriesChanged, (, ), ;, }, public]
[[, s, ], ., enterData, (, this, ., newestAt, ,, newData, [, s, ], ), ;, }, fireSeriesChanged, (, )]
[., valueHistory, [, s, ], ., enterData, (, this, ., newestAt, ,, newData, [, s, ], ), ;, }, fireSeriesChanged]
[], ., enterData, (, this, ., newestAt, ,, newData, [, s, ], ), ;, }, fireSeriesChanged, (, ), ;, }]
[,, newData, [, s, ], ), ;, }, fireSeriesChanged, (, ), ;, }, public, void, appendData, (, float, [, ]]
[., newestAt, ,, newData, [, s, ], ), ;, }, fireSeriesChanged, (, ), ;, }, public, void, appendData, (, float]
[), ;, }, fireSeriesChanged, (, ), ;, }, public, void, appendData, (, float, [, ], newData, ,, int, insertionIndex, ,]
[[, s, ], ), ;, }, fireSeriesChanged, (, ), ;, }, public, void, appendData, (, float, [, ], newData, ,]
[], ), ;, }, fireSeriesChanged, (, ), ;, }, public, void, appendData, (, float, [, ], newData, ,, int, insertionIndex]
[;, }, public, void, appendData, (, float, [, ], newData, ,, int, insertionIndex, ,, int, refresh, ), {, int, nDataPoints]
[;, if, (, nDataPoints, >, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them ", +, "in", )]
[., length, ;, if, (, nDataPoints, >, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them ", +]
[), {, throw, new, IllegalArgumentException, (, "More data than series to put them ", +, "in", ), ;, }, for, (, int, s, =, 0, ;, s]
[>, this, ., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them ", +, "in", ), ;, }, for, (]
[), {, throw, new, IllegalArgumentException, (, "More data than series to put them ", +, "in", ), ;, }, for, (, int, s, =, 0, ;, s]
[., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them ", +, "in", ), ;, }, for, (, int, s, =, 0]
[., valueHistory, ., length, ), {, throw, new, IllegalArgumentException, (, "More data than series to put them ", +, "in", ), ;, }, for, (, int, s]
[;, }, for, (, int, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (, this]
[), ;, }, for, (, int, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (]
[+, "in", ), ;, }, for, (, int, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {]
[), ;, }, for, (, int, s, =, 0, ;, s, <, nDataPoints, ;, s, ++, ), {, if, (]
[;, s, <, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, )]
[;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory]
[<, nDataPoints, ;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this]
[;, s, ++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory]
[), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, [, s, ]]
[++, ), {, if, (, this, ., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, [, s]
[), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, .]
[==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }]
[[, s, ], ==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount]
[., valueHistory, [, s, ], ==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this]
[], ==, null, ), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;]
[), {, this, ., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, .]
[=, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (, insertionIndex]
[[, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], .]
[., valueHistory, [, s, ], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s]
[], =, new, ValueSequence, (, this, ., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (]
[;, }, this, ., valueHistory, [, s, ], ., enterData, (, insertionIndex, ,, newData, [, s, ], ), ;, }]
[), ;, }, this, ., valueHistory, [, s, ], ., enterData, (, insertionIndex, ,, newData, [, s, ], ), ;]
[., historyCount, ), ;, }, this, ., valueHistory, [, s, ], ., enterData, (, insertionIndex, ,, newData, [, s, ]]
[;, }, if, (, refresh, >, 0, ), {, insertionIndex, ++, ;, if, (, insertionIndex, %, refresh, ==, 0, )]
[., enterData, (, insertionIndex, ,, newData, [, s, ], ), ;, }, if, (, refresh, >, 0, ), {, insertionIndex]
[[, s, ], ., enterData, (, insertionIndex, ,, newData, [, s, ], ), ;, }, if, (, refresh, >, 0]
[., valueHistory, [, s, ], ., enterData, (, insertionIndex, ,, newData, [, s, ], ), ;, }, if, (, refresh]
[], ., enterData, (, insertionIndex, ,, newData, [, s, ], ), ;, }, if, (, refresh, >, 0, ), {]
[,, newData, [, s, ], ), ;, }, if, (, refresh, >, 0, ), {, insertionIndex, ++, ;, if, (]
[), ;, }, if, (, refresh, >, 0, ), {, insertionIndex, ++, ;, if, (, insertionIndex, %, refresh, ==, 0]
[[, s, ], ), ;, }, if, (, refresh, >, 0, ), {, insertionIndex, ++, ;, if, (, insertionIndex, %]
[], ), ;, }, if, (, refresh, >, 0, ), {, insertionIndex, ++, ;, if, (, insertionIndex, %, refresh, ==]
[), {, insertionIndex, ++, ;, if, (, insertionIndex, %, refresh, ==, 0, ), {, fireSeriesChanged, (, ), ;, }, }]
[>, 0, ), {, insertionIndex, ++, ;, if, (, insertionIndex, %, refresh, ==, 0, ), {, fireSeriesChanged, (, ), ;]
[), {, insertionIndex, ++, ;, if, (, insertionIndex, %, refresh, ==, 0, ), {, fireSeriesChanged, (, ), ;, }, }]
[;, if, (, insertionIndex, %, refresh, ==, 0, ), {, fireSeriesChanged, (, ), ;, }, }, }, public, RegularTimePeriod, getNewestTime]
[++, ;, if, (, insertionIndex, %, refresh, ==, 0, ), {, fireSeriesChanged, (, ), ;, }, }, }, public, RegularTimePeriod]
[), {, fireSeriesChanged, (, ), ;, }, }, }, public, RegularTimePeriod, getNewestTime, (, ), {, return, this, ., pointsInTime, []
[==, 0, ), {, fireSeriesChanged, (, ), ;, }, }, }, public, RegularTimePeriod, getNewestTime, (, ), {, return, this, .]
[%, refresh, ==, 0, ), {, fireSeriesChanged, (, ), ;, }, }, }, public, RegularTimePeriod, getNewestTime, (, ), {, return]
[==, 0, ), {, fireSeriesChanged, (, ), ;, }, }, }, public, RegularTimePeriod, getNewestTime, (, ), {, return, this, .]
[), {, fireSeriesChanged, (, ), ;, }, }, }, public, RegularTimePeriod, getNewestTime, (, ), {, return, this, ., pointsInTime, []
[;, }, }, }, public, RegularTimePeriod, getNewestTime, (, ), {, return, this, ., pointsInTime, [, this, ., newestAt, ], ;]
[;, }, public, RegularTimePeriod, getOldestTime, (, ), {, return, this, ., pointsInTime, [, this, ., oldestAt, ], ;, }, public]
[[, this, ., newestAt, ], ;, }, public, RegularTimePeriod, getOldestTime, (, ), {, return, this, ., pointsInTime, [, this, .]
[., pointsInTime, [, this, ., newestAt, ], ;, }, public, RegularTimePeriod, getOldestTime, (, ), {, return, this, ., pointsInTime, []
[], ;, }, public, RegularTimePeriod, getOldestTime, (, ), {, return, this, ., pointsInTime, [, this, ., oldestAt, ], ;, }]
[., newestAt, ], ;, }, public, RegularTimePeriod, getOldestTime, (, ), {, return, this, ., pointsInTime, [, this, ., oldestAt, ]]
[;, }, public, Number, getX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, []
[[, this, ., oldestAt, ], ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp]
[., pointsInTime, [, this, ., oldestAt, ], ;, }, public, Number, getX, (, int, series, ,, int, item, ), {]
[], ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime]
[., oldestAt, ], ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this]
[;, return, new, Long, (, getX, (, tp, ), ), ;, }, public, double, getYValue, (, int, series, ,, int]
[[, translateGet, (, item, ), ], ;, return, new, Long, (, getX, (, tp, ), ), ;, }, public, double]
[., pointsInTime, [, translateGet, (, item, ), ], ;, return, new, Long, (, getX, (, tp, ), ), ;, }]
[], ;, return, new, Long, (, getX, (, tp, ), ), ;, }, public, double, getYValue, (, int, series, ,]
[), ], ;, return, new, Long, (, getX, (, tp, ), ), ;, }, public, double, getYValue, (, int, series]
[;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, ValueSequence, values, =, this, ., valueHistory, []
[), ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, ValueSequence, values, =, this, ., valueHistory]
[), ), ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, ValueSequence, values, =, this, .]
[;, return, values, ., getData, (, translateGet, (, item, ), ), ;, }, public, Number, getY, (, int, series, ,]
[[, series, ], ;, return, values, ., getData, (, translateGet, (, item, ), ), ;, }, public, Number, getY, (]
[., valueHistory, [, series, ], ;, return, values, ., getData, (, translateGet, (, item, ), ), ;, }, public, Number]
[], ;, return, values, ., getData, (, translateGet, (, item, ), ), ;, }, public, Number, getY, (, int, series]
[;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Float, (, getYValue, (, series]
[., getData, (, translateGet, (, item, ), ), ;, }, public, Number, getY, (, int, series, ,, int, item, )]
[), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Float, (, getYValue, (]
[), ), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Float, (, getYValue]
[;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, []
[), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime]
[,, item, ), ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =]
[), ), ;, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, .]
[;, return, new, Long, (, tp, ., getFirstMillisecond, (, this, ., workingCalendar, ), ), ;, }, public, Number, getEndX, (]
[[, translateGet, (, item, ), ], ;, return, new, Long, (, tp, ., getFirstMillisecond, (, this, ., workingCalendar, ), )]
[., pointsInTime, [, translateGet, (, item, ), ], ;, return, new, Long, (, tp, ., getFirstMillisecond, (, this, ., workingCalendar]
[], ;, return, new, Long, (, tp, ., getFirstMillisecond, (, this, ., workingCalendar, ), ), ;, }, public, Number, getEndX]
[), ], ;, return, new, Long, (, tp, ., getFirstMillisecond, (, this, ., workingCalendar, ), ), ;, }, public, Number]
[;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime, []
[), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, ., pointsInTime]
[., getFirstMillisecond, (, this, ., workingCalendar, ), ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, )]
[), ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =, this, .]
[., workingCalendar, ), ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, RegularTimePeriod, tp, =]
[;, return, new, Long, (, tp, ., getLastMillisecond, (, this, ., workingCalendar, ), ), ;, }, public, Number, getStartY, (]
[[, translateGet, (, item, ), ], ;, return, new, Long, (, tp, ., getLastMillisecond, (, this, ., workingCalendar, ), )]
[., pointsInTime, [, translateGet, (, item, ), ], ;, return, new, Long, (, tp, ., getLastMillisecond, (, this, ., workingCalendar]
[], ;, return, new, Long, (, tp, ., getLastMillisecond, (, this, ., workingCalendar, ), ), ;, }, public, Number, getStartY]
[), ], ;, return, new, Long, (, tp, ., getLastMillisecond, (, this, ., workingCalendar, ), ), ;, }, public, Number]
[;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item, )]
[), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item]
[., getLastMillisecond, (, this, ., workingCalendar, ), ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, )]
[), ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,]
[., workingCalendar, ), ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (]
[;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item, )]
[,, item, ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series]
[), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item]
[;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, this, ., seriesKeys, [, series, ], ;, }, protected]
[,, item, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, this, ., seriesKeys, [, series, ]]
[), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, this, ., seriesKeys, [, series, ], ;, }]
[;, }, protected, void, fireSeriesChanged, (, ), {, seriesChanged, (, new, SeriesChangeEvent, (, this, ), ), ;, }, public, double]
[[, series, ], ;, }, protected, void, fireSeriesChanged, (, ), {, seriesChanged, (, new, SeriesChangeEvent, (, this, ), ), ;]
[., seriesKeys, [, series, ], ;, }, protected, void, fireSeriesChanged, (, ), {, seriesChanged, (, new, SeriesChangeEvent, (, this, )]
[], ;, }, protected, void, fireSeriesChanged, (, ), {, seriesChanged, (, new, SeriesChangeEvent, (, this, ), ), ;, }, public]
[;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return, this, ., domainStart, ., doubleValue, (, ), ;, }]
[), ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return, this, ., domainStart, ., doubleValue, (, ), ;]
[), ), ;, }, public, double, getDomainLowerBound, (, boolean, includeInterval, ), {, return, this, ., domainStart, ., doubleValue, (, )]
[;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return, this, ., domainEnd, ., doubleValue, (, ), ;, }]
[., doubleValue, (, ), ;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return, this, ., domainEnd, ., doubleValue]
[., domainStart, ., doubleValue, (, ), ;, }, public, double, getDomainUpperBound, (, boolean, includeInterval, ), {, return, this, ., domainEnd]
[;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, this, ., domainRange, ==, null, ), {, findDomainLimits]
[., doubleValue, (, ), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, this, ., domainRange, ==]
[., domainEnd, ., doubleValue, (, ), ;, }, public, Range, getDomainBounds, (, boolean, includeInterval, ), {, if, (, this, .]
[), {, findDomainLimits, (, ), ;, }, return, this, ., domainRange, ;, }, private, long, getX, (, RegularTimePeriod, period, )]
[==, null, ), {, findDomainLimits, (, ), ;, }, return, this, ., domainRange, ;, }, private, long, getX, (, RegularTimePeriod]
[., domainRange, ==, null, ), {, findDomainLimits, (, ), ;, }, return, this, ., domainRange, ;, }, private, long, getX]
[), {, findDomainLimits, (, ), ;, }, return, this, ., domainRange, ;, }, private, long, getX, (, RegularTimePeriod, period, )]
[;, }, return, this, ., domainRange, ;, }, private, long, getX, (, RegularTimePeriod, period, ), {, switch, (, this, .]
[;, }, private, long, getX, (, RegularTimePeriod, period, ), {, switch, (, this, ., position, ), {, case, (, START]
[., domainRange, ;, }, private, long, getX, (, RegularTimePeriod, period, ), {, switch, (, this, ., position, ), {, case]
[), {, case, (, START, ), :, return, period, ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, case, (, MIDDLE]
[., position, ), {, case, (, START, ), :, return, period, ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, case]
[:, return, period, ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, case, (, MIDDLE, ), :, return, period, ., getMiddleMillisecond]
[), :, return, period, ., getFirstMillisecond, (, this, ., workingCalendar, ), ;, case, (, MIDDLE, ), :, return, period, .]
[;, case, (, MIDDLE, ), :, return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, case, (, END, )]
[., getFirstMillisecond, (, this, ., workingCalendar, ), ;, case, (, MIDDLE, ), :, return, period, ., getMiddleMillisecond, (, this, .]
[), ;, case, (, MIDDLE, ), :, return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, case, (, END]
[., workingCalendar, ), ;, case, (, MIDDLE, ), :, return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, case]
[:, return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, case, (, END, ), :, return, period, ., getLastMillisecond]
[), :, return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, case, (, END, ), :, return, period, .]
[;, case, (, END, ), :, return, period, ., getLastMillisecond, (, this, ., workingCalendar, ), ;, default, :, return, period]
[., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, case, (, END, ), :, return, period, ., getLastMillisecond, (, this, .]
[), ;, case, (, END, ), :, return, period, ., getLastMillisecond, (, this, ., workingCalendar, ), ;, default, :, return]
[., workingCalendar, ), ;, case, (, END, ), :, return, period, ., getLastMillisecond, (, this, ., workingCalendar, ), ;, default]
[:, return, period, ., getLastMillisecond, (, this, ., workingCalendar, ), ;, default, :, return, period, ., getMiddleMillisecond, (, this, .]
[), :, return, period, ., getLastMillisecond, (, this, ., workingCalendar, ), ;, default, :, return, period, ., getMiddleMillisecond, (, this]
[;, default, :, return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, }, }, public, double, getRangeLowerBound, (, boolean]
[., getLastMillisecond, (, this, ., workingCalendar, ), ;, default, :, return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;]
[), ;, default, :, return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, }, }, public, double, getRangeLowerBound, (]
[., workingCalendar, ), ;, default, :, return, period, ., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, }, }, public, double]
[;, }, }, public, double, getRangeLowerBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, if, (]
[., getMiddleMillisecond, (, this, ., workingCalendar, ), ;, }, }, public, double, getRangeLowerBound, (, boolean, includeInterval, ), {, double, result]
[), ;, }, }, public, double, getRangeLowerBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, if]
[., workingCalendar, ), ;, }, }, public, double, getRangeLowerBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN]
[;, if, (, this, ., minValue, !=, null, ), {, result, =, this, ., minValue, ., doubleValue, (, ), ;]
[., NaN, ;, if, (, this, ., minValue, !=, null, ), {, result, =, this, ., minValue, ., doubleValue, (]
[), {, result, =, this, ., minValue, ., doubleValue, (, ), ;, }, return, result, ;, }, public, double, getRangeUpperBound]
[!=, null, ), {, result, =, this, ., minValue, ., doubleValue, (, ), ;, }, return, result, ;, }, public]
[., minValue, !=, null, ), {, result, =, this, ., minValue, ., doubleValue, (, ), ;, }, return, result, ;]
[), {, result, =, this, ., minValue, ., doubleValue, (, ), ;, }, return, result, ;, }, public, double, getRangeUpperBound]
[=, this, ., minValue, ., doubleValue, (, ), ;, }, return, result, ;, }, public, double, getRangeUpperBound, (, boolean, includeInterval]
[;, }, return, result, ;, }, public, double, getRangeUpperBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN]
[., doubleValue, (, ), ;, }, return, result, ;, }, public, double, getRangeUpperBound, (, boolean, includeInterval, ), {, double, result]
[., minValue, ., doubleValue, (, ), ;, }, return, result, ;, }, public, double, getRangeUpperBound, (, boolean, includeInterval, ), {]
[;, }, public, double, getRangeUpperBound, (, boolean, includeInterval, ), {, double, result, =, Double, ., NaN, ;, if, (, this]
[;, if, (, this, ., maxValue, !=, null, ), {, result, =, this, ., maxValue, ., doubleValue, (, ), ;]
[., NaN, ;, if, (, this, ., maxValue, !=, null, ), {, result, =, this, ., maxValue, ., doubleValue, (]
[), {, result, =, this, ., maxValue, ., doubleValue, (, ), ;, }, return, result, ;, }, public, Range, getRangeBounds]
[!=, null, ), {, result, =, this, ., maxValue, ., doubleValue, (, ), ;, }, return, result, ;, }, public]
[., maxValue, !=, null, ), {, result, =, this, ., maxValue, ., doubleValue, (, ), ;, }, return, result, ;]
[), {, result, =, this, ., maxValue, ., doubleValue, (, ), ;, }, return, result, ;, }, public, Range, getRangeBounds]
[=, this, ., maxValue, ., doubleValue, (, ), ;, }, return, result, ;, }, public, Range, getRangeBounds, (, boolean, includeInterval]
[;, }, return, result, ;, }, public, Range, getRangeBounds, (, boolean, includeInterval, ), {, if, (, this, ., valueRange, ==]
[., doubleValue, (, ), ;, }, return, result, ;, }, public, Range, getRangeBounds, (, boolean, includeInterval, ), {, if, (]
[., maxValue, ., doubleValue, (, ), ;, }, return, result, ;, }, public, Range, getRangeBounds, (, boolean, includeInterval, ), {]
[;, }, public, Range, getRangeBounds, (, boolean, includeInterval, ), {, if, (, this, ., valueRange, ==, null, ), {, double]
[), {, double, max, =, getRangeUpperBound, (, includeInterval, ), ;, this, ., valueRange, =, new, Range, (, 0.0, ,, max]
[==, null, ), {, double, max, =, getRangeUpperBound, (, includeInterval, ), ;, this, ., valueRange, =, new, Range, (, 0.0]
[., valueRange, ==, null, ), {, double, max, =, getRangeUpperBound, (, includeInterval, ), ;, this, ., valueRange, =, new, Range]
[), {, double, max, =, getRangeUpperBound, (, includeInterval, ), ;, this, ., valueRange, =, new, Range, (, 0.0, ,, max]
[;, this, ., valueRange, =, new, Range, (, 0.0, ,, max, ), ;, }, return, this, ., valueRange, ;, }]
[), ;, this, ., valueRange, =, new, Range, (, 0.0, ,, max, ), ;, }, return, this, ., valueRange, ;]
[=, new, Range, (, 0.0, ,, max, ), ;, }, return, this, ., valueRange, ;, }, }]
[., valueRange, =, new, Range, (, 0.0, ,, max, ), ;, }, return, this, ., valueRange, ;, }, }]
[;, }, return, this, ., valueRange, ;, }, }]
[,, max, ), ;, }, return, this, ., valueRange, ;, }, }]
[), ;, }, return, this, ., valueRange, ;, }, }]
[;, }, }]
[., valueRange, ;, }, }]
