[;, private, double, n, ;, private, double, covarianceNumerator, ;, private, boolean, biasCorrected, ;, public, StorelessBivariateCovariance, (, ), {, this, (]
[;, public, StorelessBivariateCovariance, (, ), {, this, (, true, ), ;, }, public, StorelessBivariateCovariance, (, final, boolean, biasCorrection, ), {]
[StorelessBivariateCovariance, (, ), {, this, (, true, ), ;, }, public, StorelessBivariateCovariance, (, final, boolean, biasCorrection, ), {, meanX, =]
[), {, this, (, true, ), ;, }, public, StorelessBivariateCovariance, (, final, boolean, biasCorrection, ), {, meanX, =, meanY, =]
[this, (, true, ), ;, }, public, StorelessBivariateCovariance, (, final, boolean, biasCorrection, ), {, meanX, =, meanY, =, 0.0, ;]
[true, ), ;, }, public, StorelessBivariateCovariance, (, final, boolean, biasCorrection, ), {, meanX, =, meanY, =, 0.0, ;, n, =]
[;, }, public, StorelessBivariateCovariance, (, final, boolean, biasCorrection, ), {, meanX, =, meanY, =, 0.0, ;, n, =, 0, ;]
[public, StorelessBivariateCovariance, (, final, boolean, biasCorrection, ), {, meanX, =, meanY, =, 0.0, ;, n, =, 0, ;, covarianceNumerator, =]
[(, final, boolean, biasCorrection, ), {, meanX, =, meanY, =, 0.0, ;, n, =, 0, ;, covarianceNumerator, =, 0.0, ;]
[boolean, biasCorrection, ), {, meanX, =, meanY, =, 0.0, ;, n, =, 0, ;, covarianceNumerator, =, 0.0, ;, biasCorrected, =]
[0.0, ;, biasCorrected, =, biasCorrection, ;, }, public, void, increment, (, final, double, x, ,, final, double, y, ), {]
[0.0, ;, biasCorrected, =, biasCorrection, ;, }, public, void, increment, (, final, double, x, ,, final, double, y, ), {]
[public, void, increment, (, final, double, x, ,, final, double, y, ), {, n, ++, ;, final, double, deltaX, =]
[public, void, increment, (, final, double, x, ,, final, double, y, ), {, n, ++, ;, final, double, deltaX, =]
[increment, (, final, double, x, ,, final, double, y, ), {, n, ++, ;, final, double, deltaX, =, x, -]
[final, double, y, ), {, n, ++, ;, final, double, deltaX, =, x, -, meanX, ;, final, double, deltaY, =]
[final, double, y, ), {, n, ++, ;, final, double, deltaX, =, x, -, meanX, ;, final, double, deltaY, =]
[y, ), {, n, ++, ;, final, double, deltaX, =, x, -, meanX, ;, final, double, deltaY, =, y, -]
[{, n, ++, ;, final, double, deltaX, =, x, -, meanX, ;, final, double, deltaY, =, y, -, meanY, ;]
[++, ;, final, double, deltaX, =, x, -, meanX, ;, final, double, deltaY, =, y, -, meanY, ;, meanX, +=]
[++, ;, final, double, deltaX, =, x, -, meanX, ;, final, double, deltaY, =, y, -, meanY, ;, meanX, +=]
[final, double, deltaX, =, x, -, meanX, ;, final, double, deltaY, =, y, -, meanY, ;, meanX, +=, deltaX, /]
[deltaX, =, x, -, meanX, ;, final, double, deltaY, =, y, -, meanY, ;, meanX, +=, deltaX, /, n, ;]
[x, -, meanX, ;, final, double, deltaY, =, y, -, meanY, ;, meanX, +=, deltaX, /, n, ;, meanY, +=]
[x, -, meanX, ;, final, double, deltaY, =, y, -, meanY, ;, meanX, +=, deltaX, /, n, ;, meanY, +=]
[meanX, ;, final, double, deltaY, =, y, -, meanY, ;, meanX, +=, deltaX, /, n, ;, meanY, +=, deltaY, /]
[final, double, deltaY, =, y, -, meanY, ;, meanX, +=, deltaX, /, n, ;, meanY, +=, deltaY, /, n, ;]
[deltaY, =, y, -, meanY, ;, meanX, +=, deltaX, /, n, ;, meanY, +=, deltaY, /, n, ;, covarianceNumerator, +=]
[deltaY, =, y, -, meanY, ;, meanX, +=, deltaX, /, n, ;, meanY, +=, deltaY, /, n, ;, covarianceNumerator, +=]
[deltaY, =, y, -, meanY, ;, meanX, +=, deltaX, /, n, ;, meanY, +=, deltaY, /, n, ;, covarianceNumerator, +=]
[=, y, -, meanY, ;, meanX, +=, deltaX, /, n, ;, meanY, +=, deltaY, /, n, ;, covarianceNumerator, +=, (]
[=, y, -, meanY, ;, meanX, +=, deltaX, /, n, ;, meanY, +=, deltaY, /, n, ;, covarianceNumerator, +=, (]
[y, -, meanY, ;, meanX, +=, deltaX, /, n, ;, meanY, +=, deltaY, /, n, ;, covarianceNumerator, +=, (, (]
[y, -, meanY, ;, meanX, +=, deltaX, /, n, ;, meanY, +=, deltaY, /, n, ;, covarianceNumerator, +=, (, (]
[meanY, ;, meanX, +=, deltaX, /, n, ;, meanY, +=, deltaY, /, n, ;, covarianceNumerator, +=, (, (, n, -]
[+=, deltaX, /, n, ;, meanY, +=, deltaY, /, n, ;, covarianceNumerator, +=, (, (, n, -, 1.0, ), /]
[n, ;, meanY, +=, deltaY, /, n, ;, covarianceNumerator, +=, (, (, n, -, 1.0, ), /, n, ), *]
[meanY, +=, deltaY, /, n, ;, covarianceNumerator, +=, (, (, n, -, 1.0, ), /, n, ), *, deltaX, *]
[/, n, ), *, deltaX, *, deltaY, ;, }, public, void, append, (, StorelessBivariateCovariance, cov, ), {, double, oldN, =]
[), *, deltaX, *, deltaY, ;, }, public, void, append, (, StorelessBivariateCovariance, cov, ), {, double, oldN, =, n, ;]
[deltaX, *, deltaY, ;, }, public, void, append, (, StorelessBivariateCovariance, cov, ), {, double, oldN, =, n, ;, n, +=]
[deltaX, *, deltaY, ;, }, public, void, append, (, StorelessBivariateCovariance, cov, ), {, double, oldN, =, n, ;, n, +=]
[(, StorelessBivariateCovariance, cov, ), {, double, oldN, =, n, ;, n, +=, cov, ., n, ;, final, double, deltaX, =]
[(, StorelessBivariateCovariance, cov, ), {, double, oldN, =, n, ;, n, +=, cov, ., n, ;, final, double, deltaX, =]
[(, StorelessBivariateCovariance, cov, ), {, double, oldN, =, n, ;, n, +=, cov, ., n, ;, final, double, deltaX, =]
[{, double, oldN, =, n, ;, n, +=, cov, ., n, ;, final, double, deltaX, =, cov, ., meanX, -]
[n, +=, cov, ., n, ;, final, double, deltaX, =, cov, ., meanX, -, meanX, ;, final, double, deltaY, =]
[n, +=, cov, ., n, ;, final, double, deltaX, =, cov, ., meanX, -, meanX, ;, final, double, deltaY, =]
[n, +=, cov, ., n, ;, final, double, deltaX, =, cov, ., meanX, -, meanX, ;, final, double, deltaY, =]
[n, ;, final, double, deltaX, =, cov, ., meanX, -, meanX, ;, final, double, deltaY, =, cov, ., meanY, -]
[final, double, deltaX, =, cov, ., meanX, -, meanX, ;, final, double, deltaY, =, cov, ., meanY, -, meanY, ;]
[deltaX, =, cov, ., meanX, -, meanX, ;, final, double, deltaY, =, cov, ., meanY, -, meanY, ;, meanX, +=]
[deltaX, =, cov, ., meanX, -, meanX, ;, final, double, deltaY, =, cov, ., meanY, -, meanY, ;, meanX, +=]
[deltaX, =, cov, ., meanX, -, meanX, ;, final, double, deltaY, =, cov, ., meanY, -, meanY, ;, meanX, +=]
[cov, ., meanX, -, meanX, ;, final, double, deltaY, =, cov, ., meanY, -, meanY, ;, meanX, +=, deltaX, *]
[cov, ., meanX, -, meanX, ;, final, double, deltaY, =, cov, ., meanY, -, meanY, ;, meanX, +=, deltaX, *]
[meanX, ;, final, double, deltaY, =, cov, ., meanY, -, meanY, ;, meanX, +=, deltaX, *, cov, ., n, /]
[final, double, deltaY, =, cov, ., meanY, -, meanY, ;, meanX, +=, deltaX, *, cov, ., n, /, n, ;]
[deltaY, =, cov, ., meanY, -, meanY, ;, meanX, +=, deltaX, *, cov, ., n, /, n, ;, meanY, +=]
[deltaY, =, cov, ., meanY, -, meanY, ;, meanX, +=, deltaX, *, cov, ., n, /, n, ;, meanY, +=]
[deltaY, =, cov, ., meanY, -, meanY, ;, meanX, +=, deltaX, *, cov, ., n, /, n, ;, meanY, +=]
[cov, ., meanY, -, meanY, ;, meanX, +=, deltaX, *, cov, ., n, /, n, ;, meanY, +=, deltaY, *]
[cov, ., meanY, -, meanY, ;, meanX, +=, deltaX, *, cov, ., n, /, n, ;, meanY, +=, deltaY, *]
[meanY, ;, meanX, +=, deltaX, *, cov, ., n, /, n, ;, meanY, +=, deltaY, *, cov, ., n, /]
[meanX, +=, deltaX, *, cov, ., n, /, n, ;, meanY, +=, deltaY, *, cov, ., n, /, n, ;]
[deltaX, *, cov, ., n, /, n, ;, meanY, +=, deltaY, *, cov, ., n, /, n, ;, covarianceNumerator, +=]
[deltaX, *, cov, ., n, /, n, ;, meanY, +=, deltaY, *, cov, ., n, /, n, ;, covarianceNumerator, +=]
[deltaX, *, cov, ., n, /, n, ;, meanY, +=, deltaY, *, cov, ., n, /, n, ;, covarianceNumerator, +=]
[n, /, n, ;, meanY, +=, deltaY, *, cov, ., n, /, n, ;, covarianceNumerator, +=, cov, ., covarianceNumerator, +]
[n, /, n, ;, meanY, +=, deltaY, *, cov, ., n, /, n, ;, covarianceNumerator, +=, cov, ., covarianceNumerator, +]
[n, /, n, ;, meanY, +=, deltaY, *, cov, ., n, /, n, ;, covarianceNumerator, +=, cov, ., covarianceNumerator, +]
[n, /, n, ;, meanY, +=, deltaY, *, cov, ., n, /, n, ;, covarianceNumerator, +=, cov, ., covarianceNumerator, +]
[n, /, n, ;, meanY, +=, deltaY, *, cov, ., n, /, n, ;, covarianceNumerator, +=, cov, ., covarianceNumerator, +]
[n, ;, meanY, +=, deltaY, *, cov, ., n, /, n, ;, covarianceNumerator, +=, cov, ., covarianceNumerator, +, oldN, *]
[n, ;, meanY, +=, deltaY, *, cov, ., n, /, n, ;, covarianceNumerator, +=, cov, ., covarianceNumerator, +, oldN, *]
[deltaY, *, cov, ., n, /, n, ;, covarianceNumerator, +=, cov, ., covarianceNumerator, +, oldN, *, cov, ., n, /]
[cov, ., n, /, n, ;, covarianceNumerator, +=, cov, ., covarianceNumerator, +, oldN, *, cov, ., n, /, n, *]
[n, /, n, ;, covarianceNumerator, +=, cov, ., covarianceNumerator, +, oldN, *, cov, ., n, /, n, *, deltaX, *]
[oldN, *, cov, ., n, /, n, *, deltaX, *, deltaY, ;, }, public, double, getN, (, ), {, return]
[public, double, getN, (, ), {, return, n, ;, }, public, double, getResult, (, ), throws, NumberIsTooSmallException, {, if, (]
[public, double, getN, (, ), {, return, n, ;, }, public, double, getResult, (, ), throws, NumberIsTooSmallException, {, if, (]
[getN, (, ), {, return, n, ;, }, public, double, getResult, (, ), throws, NumberIsTooSmallException, {, if, (, n, <]
[return, n, ;, }, public, double, getResult, (, ), throws, NumberIsTooSmallException, {, if, (, n, <, 2, ), {, throw]
[}, public, double, getResult, (, ), throws, NumberIsTooSmallException, {, if, (, n, <, 2, ), {, throw, new, NumberIsTooSmallException, (]
[}, public, double, getResult, (, ), throws, NumberIsTooSmallException, {, if, (, n, <, 2, ), {, throw, new, NumberIsTooSmallException, (]
[(, ), throws, NumberIsTooSmallException, {, if, (, n, <, 2, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,]
[throws, NumberIsTooSmallException, {, if, (, n, <, 2, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,, n, ,]
[{, if, (, n, <, 2, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,, n, ,, 2, ,]
[), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,, n, ,, 2, ,, true, ), ;, }, if, (]
[NumberIsTooSmallException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,, n, ,, 2, ,, true, ), ;, }, if, (, biasCorrected, ), {, return]
[NumberIsTooSmallException, (, LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,, n, ,, 2, ,, true, ), ;, }, if, (, biasCorrected, ), {, return]
[LocalizedFormats, ., INSUFFICIENT_DIMENSION, ,, n, ,, 2, ,, true, ), ;, }, if, (, biasCorrected, ), {, return, covarianceNumerator, /]
[., INSUFFICIENT_DIMENSION, ,, n, ,, 2, ,, true, ), ;, }, if, (, biasCorrected, ), {, return, covarianceNumerator, /, (]
[., INSUFFICIENT_DIMENSION, ,, n, ,, 2, ,, true, ), ;, }, if, (, biasCorrected, ), {, return, covarianceNumerator, /, (]
[,, n, ,, 2, ,, true, ), ;, }, if, (, biasCorrected, ), {, return, covarianceNumerator, /, (, n, -]
[;, }, if, (, biasCorrected, ), {, return, covarianceNumerator, /, (, n, -, 1d, ), ;, }, else, {, return]
[;, }, if, (, biasCorrected, ), {, return, covarianceNumerator, /, (, n, -, 1d, ), ;, }, else, {, return]
[if, (, biasCorrected, ), {, return, covarianceNumerator, /, (, n, -, 1d, ), ;, }, else, {, return, covarianceNumerator, /]
