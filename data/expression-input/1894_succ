[), {, throw, new, NotStrictlyPositiveException, (, n, ), ;, }, this, ., k, =, k, ;, this, ., m, =]
[<=, 0, ), {, throw, new, NotStrictlyPositiveException, (, n, ), ;, }, this, ., k, =, k, ;, this, .]
[), {, throw, new, NotStrictlyPositiveException, (, n, ), ;, }, this, ., k, =, k, ;, this, ., m, =]
[;, }, this, ., k, =, k, ;, this, ., m, =, m, ;, this, ., b, =, b, ;]
[), ;, }, this, ., k, =, k, ;, this, ., m, =, m, ;, this, ., b, =, b]
[=, k, ;, this, ., m, =, m, ;, this, ., b, =, b, ;, this, ., q, =, q]
[., k, =, k, ;, this, ., m, =, m, ;, this, ., b, =, b, ;, this, ., q]
[;, this, ., m, =, m, ;, this, ., b, =, b, ;, this, ., q, =, q, ;, this]
[=, m, ;, this, ., b, =, b, ;, this, ., q, =, q, ;, this, ., a, =, a]
[., m, =, m, ;, this, ., b, =, b, ;, this, ., q, =, q, ;, this, ., a]
[;, this, ., b, =, b, ;, this, ., q, =, q, ;, this, ., a, =, a, ;, oneOverN]
[=, b, ;, this, ., q, =, q, ;, this, ., a, =, a, ;, oneOverN, =, 1, /, n]
[., b, =, b, ;, this, ., q, =, q, ;, this, ., a, =, a, ;, oneOverN, =, 1]
[;, this, ., q, =, q, ;, this, ., a, =, a, ;, oneOverN, =, 1, /, n, ;, }]
[=, q, ;, this, ., a, =, a, ;, oneOverN, =, 1, /, n, ;, }, public, double, value, (]
[., q, =, q, ;, this, ., a, =, a, ;, oneOverN, =, 1, /, n, ;, }, public, double]
[;, this, ., a, =, a, ;, oneOverN, =, 1, /, n, ;, }, public, double, value, (, double, x]
[=, a, ;, oneOverN, =, 1, /, n, ;, }, public, double, value, (, double, x, ), {, return, value]
[., a, =, a, ;, oneOverN, =, 1, /, n, ;, }, public, double, value, (, double, x, ), {]
[;, oneOverN, =, 1, /, n, ;, }, public, double, value, (, double, x, ), {, return, value, (, m]
[=, 1, /, n, ;, }, public, double, value, (, double, x, ), {, return, value, (, m, -, x]
[;, }, public, double, value, (, double, x, ), {, return, value, (, m, -, x, ,, k, ,, b]
[/, n, ;, }, public, double, value, (, double, x, ), {, return, value, (, m, -, x, ,, k]
[;, }, public, double, value, (, double, x, ), {, return, value, (, m, -, x, ,, k, ,, b]
[;, }, @, Deprecated, public, UnivariateFunction, derivative, (, ), {, return, FunctionUtils, ., toDifferentiableUnivariateFunction, (, this, ), ., derivative, (]
[,, k, ,, b, ,, q, ,, a, ,, oneOverN, ), ;, }, @, Deprecated, public, UnivariateFunction, derivative, (, )]
[-, x, ,, k, ,, b, ,, q, ,, a, ,, oneOverN, ), ;, }, @, Deprecated, public, UnivariateFunction, derivative]
[,, k, ,, b, ,, q, ,, a, ,, oneOverN, ), ;, }, @, Deprecated, public, UnivariateFunction, derivative, (, )]
[,, b, ,, q, ,, a, ,, oneOverN, ), ;, }, @, Deprecated, public, UnivariateFunction, derivative, (, ), {, return]
[,, q, ,, a, ,, oneOverN, ), ;, }, @, Deprecated, public, UnivariateFunction, derivative, (, ), {, return, FunctionUtils, .]
[,, a, ,, oneOverN, ), ;, }, @, Deprecated, public, UnivariateFunction, derivative, (, ), {, return, FunctionUtils, ., toDifferentiableUnivariateFunction, (]
[,, oneOverN, ), ;, }, @, Deprecated, public, UnivariateFunction, derivative, (, ), {, return, FunctionUtils, ., toDifferentiableUnivariateFunction, (, this, )]
[), ;, }, @, Deprecated, public, UnivariateFunction, derivative, (, ), {, return, FunctionUtils, ., toDifferentiableUnivariateFunction, (, this, ), ., derivative]
[;, }, public, static, class, Parametric, implements, ParametricUnivariateFunction, {, public, double, value, (, double, x, ,, double, ..., param, )]
[., derivative, (, ), ;, }, public, static, class, Parametric, implements, ParametricUnivariateFunction, {, public, double, value, (, double, x, ,]
[., toDifferentiableUnivariateFunction, (, this, ), ., derivative, (, ), ;, }, public, static, class, Parametric, implements, ParametricUnivariateFunction, {, public, double]
[), ., derivative, (, ), ;, }, public, static, class, Parametric, implements, ParametricUnivariateFunction, {, public, double, value, (, double, x]
[;, return, Logistic, ., value, (, param, [, 1, ], -, x, ,, param, [, 0, ], ,, param, []
[), ;, return, Logistic, ., value, (, param, [, 1, ], -, x, ,, param, [, 0, ], ,, param]
[;, }, public, double, [, ], gradient, (, double, x, ,, double, ..., param, ), throws, NullArgumentException, ,, DimensionMismatchException, ,]
[., value, (, param, [, 1, ], -, x, ,, param, [, 0, ], ,, param, [, 2, ], ,]
[,, param, [, 0, ], ,, param, [, 2, ], ,, param, [, 3, ], ,, param, [, 4, ]]
[-, x, ,, param, [, 0, ], ,, param, [, 2, ], ,, param, [, 3, ], ,, param, []
[[, 1, ], -, x, ,, param, [, 0, ], ,, param, [, 2, ], ,, param, [, 3, ]]
[], -, x, ,, param, [, 0, ], ,, param, [, 2, ], ,, param, [, 3, ], ,, param]
[,, param, [, 0, ], ,, param, [, 2, ], ,, param, [, 3, ], ,, param, [, 4, ]]
[,, param, [, 2, ], ,, param, [, 3, ], ,, param, [, 4, ], ,, 1, /, param, []
[[, 0, ], ,, param, [, 2, ], ,, param, [, 3, ], ,, param, [, 4, ], ,, 1]
[], ,, param, [, 2, ], ,, param, [, 3, ], ,, param, [, 4, ], ,, 1, /, param]
[,, param, [, 3, ], ,, param, [, 4, ], ,, 1, /, param, [, 5, ], ), ;, }]
[[, 2, ], ,, param, [, 3, ], ,, param, [, 4, ], ,, 1, /, param, [, 5, ]]
[], ,, param, [, 3, ], ,, param, [, 4, ], ,, 1, /, param, [, 5, ], ), ;]
[,, param, [, 4, ], ,, 1, /, param, [, 5, ], ), ;, }, public, double, [, ], gradient]
[[, 3, ], ,, param, [, 4, ], ,, 1, /, param, [, 5, ], ), ;, }, public, double]
[], ,, param, [, 4, ], ,, 1, /, param, [, 5, ], ), ;, }, public, double, [, ]]
[,, 1, /, param, [, 5, ], ), ;, }, public, double, [, ], gradient, (, double, x, ,, double]
[[, 4, ], ,, 1, /, param, [, 5, ], ), ;, }, public, double, [, ], gradient, (, double]
[], ,, 1, /, param, [, 5, ], ), ;, }, public, double, [, ], gradient, (, double, x, ,]
[), ;, }, public, double, [, ], gradient, (, double, x, ,, double, ..., param, ), throws, NullArgumentException, ,, DimensionMismatchException]
[/, param, [, 5, ], ), ;, }, public, double, [, ], gradient, (, double, x, ,, double, ..., param]
[), ;, }, public, double, [, ], gradient, (, double, x, ,, double, ..., param, ), throws, NullArgumentException, ,, DimensionMismatchException]
[[, 5, ], ), ;, }, public, double, [, ], gradient, (, double, x, ,, double, ..., param, ), throws]
[], ), ;, }, public, double, [, ], gradient, (, double, x, ,, double, ..., param, ), throws, NullArgumentException, ,]
[;, final, double, b, =, param, [, 2, ], ;, final, double, q, =, param, [, 3, ], ;, final]
[), ;, final, double, b, =, param, [, 2, ], ;, final, double, q, =, param, [, 3, ], ;]
[;, final, double, q, =, param, [, 3, ], ;, final, double, mMinusX, =, param, [, 1, ], -, x]
[[, 2, ], ;, final, double, q, =, param, [, 3, ], ;, final, double, mMinusX, =, param, [, 1]
[], ;, final, double, q, =, param, [, 3, ], ;, final, double, mMinusX, =, param, [, 1, ], -]
[;, final, double, mMinusX, =, param, [, 1, ], -, x, ;, final, double, oneOverN, =, 1, /, param, []
[[, 3, ], ;, final, double, mMinusX, =, param, [, 1, ], -, x, ;, final, double, oneOverN, =, 1]
[], ;, final, double, mMinusX, =, param, [, 1, ], -, x, ;, final, double, oneOverN, =, 1, /, param]
[;, final, double, oneOverN, =, 1, /, param, [, 5, ], ;, final, double, exp, =, FastMath, ., exp, (]
[-, x, ;, final, double, oneOverN, =, 1, /, param, [, 5, ], ;, final, double, exp, =, FastMath, .]
[[, 1, ], -, x, ;, final, double, oneOverN, =, 1, /, param, [, 5, ], ;, final, double, exp]
[], -, x, ;, final, double, oneOverN, =, 1, /, param, [, 5, ], ;, final, double, exp, =, FastMath]
[;, final, double, oneOverN, =, 1, /, param, [, 5, ], ;, final, double, exp, =, FastMath, ., exp, (]
[;, final, double, exp, =, FastMath, ., exp, (, b, *, mMinusX, ), ;, final, double, qExp, =, q, *]
[/, param, [, 5, ], ;, final, double, exp, =, FastMath, ., exp, (, b, *, mMinusX, ), ;, final]
[;, final, double, exp, =, FastMath, ., exp, (, b, *, mMinusX, ), ;, final, double, qExp, =, q, *]
[[, 5, ], ;, final, double, exp, =, FastMath, ., exp, (, b, *, mMinusX, ), ;, final, double, qExp]
[], ;, final, double, exp, =, FastMath, ., exp, (, b, *, mMinusX, ), ;, final, double, qExp, =, q]
[;, final, double, qExp, =, q, *, exp, ;, final, double, qExp1, =, qExp, +, 1, ;, final, double, factor1]
[., exp, (, b, *, mMinusX, ), ;, final, double, qExp, =, q, *, exp, ;, final, double, qExp1, =]
[), ;, final, double, qExp, =, q, *, exp, ;, final, double, qExp1, =, qExp, +, 1, ;, final, double]
[*, mMinusX, ), ;, final, double, qExp, =, q, *, exp, ;, final, double, qExp1, =, qExp, +, 1, ;]
[), ;, final, double, qExp, =, q, *, exp, ;, final, double, qExp1, =, qExp, +, 1, ;, final, double]
[;, final, double, qExp1, =, qExp, +, 1, ;, final, double, factor1, =, (, param, [, 0, ], -, param]
[*, exp, ;, final, double, qExp1, =, qExp, +, 1, ;, final, double, factor1, =, (, param, [, 0, ]]
[;, final, double, qExp1, =, qExp, +, 1, ;, final, double, factor1, =, (, param, [, 0, ], -, param]
[;, final, double, factor1, =, (, param, [, 0, ], -, param, [, 4, ], ), *, oneOverN, /, FastMath]
[+, 1, ;, final, double, factor1, =, (, param, [, 0, ], -, param, [, 4, ], ), *, oneOverN]
[;, final, double, factor1, =, (, param, [, 0, ], -, param, [, 4, ], ), *, oneOverN, /, FastMath]
[;, final, double, factor2, =, -, factor1, /, qExp1, ;, final, double, gk, =, Logistic, ., value, (, mMinusX, ,]
[/, FastMath, ., pow, (, qExp1, ,, oneOverN, ), ;, final, double, factor2, =, -, factor1, /, qExp1, ;, final]
[*, oneOverN, /, FastMath, ., pow, (, qExp1, ,, oneOverN, ), ;, final, double, factor2, =, -, factor1, /, qExp1]
[), *, oneOverN, /, FastMath, ., pow, (, qExp1, ,, oneOverN, ), ;, final, double, factor2, =, -, factor1, /]
[-, param, [, 4, ], ), *, oneOverN, /, FastMath, ., pow, (, qExp1, ,, oneOverN, ), ;, final, double]
[[, 0, ], -, param, [, 4, ], ), *, oneOverN, /, FastMath, ., pow, (, qExp1, ,, oneOverN, )]
[], -, param, [, 4, ], ), *, oneOverN, /, FastMath, ., pow, (, qExp1, ,, oneOverN, ), ;, final]
[), *, oneOverN, /, FastMath, ., pow, (, qExp1, ,, oneOverN, ), ;, final, double, factor2, =, -, factor1, /]
[[, 4, ], ), *, oneOverN, /, FastMath, ., pow, (, qExp1, ,, oneOverN, ), ;, final, double, factor2, =]
[], ), *, oneOverN, /, FastMath, ., pow, (, qExp1, ,, oneOverN, ), ;, final, double, factor2, =, -, factor1]
[/, FastMath, ., pow, (, qExp1, ,, oneOverN, ), ;, final, double, factor2, =, -, factor1, /, qExp1, ;, final]
[;, final, double, factor2, =, -, factor1, /, qExp1, ;, final, double, gk, =, Logistic, ., value, (, mMinusX, ,]
[., pow, (, qExp1, ,, oneOverN, ), ;, final, double, factor2, =, -, factor1, /, qExp1, ;, final, double, gk]
[,, oneOverN, ), ;, final, double, factor2, =, -, factor1, /, qExp1, ;, final, double, gk, =, Logistic, ., value]
[), ;, final, double, factor2, =, -, factor1, /, qExp1, ;, final, double, gk, =, Logistic, ., value, (, mMinusX]
[;, final, double, gk, =, Logistic, ., value, (, mMinusX, ,, 1, ,, b, ,, q, ,, 0, ,, oneOverN]
[/, qExp1, ;, final, double, gk, =, Logistic, ., value, (, mMinusX, ,, 1, ,, b, ,, q, ,, 0]
[/, qExp1, ;, final, double, gk, =, Logistic, ., value, (, mMinusX, ,, 1, ,, b, ,, q, ,, 0]
[;, final, double, gk, =, Logistic, ., value, (, mMinusX, ,, 1, ,, b, ,, q, ,, 0, ,, oneOverN]
[;, final, double, gm, =, factor2, *, b, *, qExp, ;, final, double, gb, =, factor2, *, mMinusX, *, qExp]
[., value, (, mMinusX, ,, 1, ,, b, ,, q, ,, 0, ,, oneOverN, ), ;, final, double, gm, =]
[,, 1, ,, b, ,, q, ,, 0, ,, oneOverN, ), ;, final, double, gm, =, factor2, *, b, *]
[,, b, ,, q, ,, 0, ,, oneOverN, ), ;, final, double, gm, =, factor2, *, b, *, qExp, ;]
[,, q, ,, 0, ,, oneOverN, ), ;, final, double, gm, =, factor2, *, b, *, qExp, ;, final, double]
[,, 0, ,, oneOverN, ), ;, final, double, gm, =, factor2, *, b, *, qExp, ;, final, double, gb, =]
[,, oneOverN, ), ;, final, double, gm, =, factor2, *, b, *, qExp, ;, final, double, gb, =, factor2, *]
[), ;, final, double, gm, =, factor2, *, b, *, qExp, ;, final, double, gb, =, factor2, *, mMinusX, *]
[;, final, double, gb, =, factor2, *, mMinusX, *, qExp, ;, final, double, gq, =, factor2, *, exp, ;, final]
[*, qExp, ;, final, double, gb, =, factor2, *, mMinusX, *, qExp, ;, final, double, gq, =, factor2, *, exp]
[*, b, *, qExp, ;, final, double, gb, =, factor2, *, mMinusX, *, qExp, ;, final, double, gq, =, factor2]
[*, qExp, ;, final, double, gb, =, factor2, *, mMinusX, *, qExp, ;, final, double, gq, =, factor2, *, exp]
[;, final, double, gb, =, factor2, *, mMinusX, *, qExp, ;, final, double, gq, =, factor2, *, exp, ;, final]
[;, final, double, gq, =, factor2, *, exp, ;, final, double, ga, =, Logistic, ., value, (, mMinusX, ,, 0]
[*, qExp, ;, final, double, gq, =, factor2, *, exp, ;, final, double, ga, =, Logistic, ., value, (, mMinusX]
[*, mMinusX, *, qExp, ;, final, double, gq, =, factor2, *, exp, ;, final, double, ga, =, Logistic, ., value]
[*, qExp, ;, final, double, gq, =, factor2, *, exp, ;, final, double, ga, =, Logistic, ., value, (, mMinusX]
[;, final, double, gq, =, factor2, *, exp, ;, final, double, ga, =, Logistic, ., value, (, mMinusX, ,, 0]
[;, final, double, ga, =, Logistic, ., value, (, mMinusX, ,, 0, ,, b, ,, q, ,, 1, ,, oneOverN]
[*, exp, ;, final, double, ga, =, Logistic, ., value, (, mMinusX, ,, 0, ,, b, ,, q, ,, 1]
[;, final, double, ga, =, Logistic, ., value, (, mMinusX, ,, 0, ,, b, ,, q, ,, 1, ,, oneOverN]
[;, final, double, gn, =, factor1, *, Math, ., log, (, qExp1, ), *, oneOverN, ;, return, new, double, []
[., value, (, mMinusX, ,, 0, ,, b, ,, q, ,, 1, ,, oneOverN, ), ;, final, double, gn, =]
[,, 0, ,, b, ,, q, ,, 1, ,, oneOverN, ), ;, final, double, gn, =, factor1, *, Math, .]
[,, b, ,, q, ,, 1, ,, oneOverN, ), ;, final, double, gn, =, factor1, *, Math, ., log, (]
[,, q, ,, 1, ,, oneOverN, ), ;, final, double, gn, =, factor1, *, Math, ., log, (, qExp1, )]
[,, 1, ,, oneOverN, ), ;, final, double, gn, =, factor1, *, Math, ., log, (, qExp1, ), *, oneOverN]
[,, oneOverN, ), ;, final, double, gn, =, factor1, *, Math, ., log, (, qExp1, ), *, oneOverN, ;, return]
[), ;, final, double, gn, =, factor1, *, Math, ., log, (, qExp1, ), *, oneOverN, ;, return, new, double]
[;, return, new, double, [, ], {, gk, ,, gm, ,, gb, ,, gq, ,, ga, ,, gn, }, ;]
[*, oneOverN, ;, return, new, double, [, ], {, gk, ,, gm, ,, gb, ,, gq, ,, ga, ,, gn]
[*, Math, ., log, (, qExp1, ), *, oneOverN, ;, return, new, double, [, ], {, gk, ,, gm, ,]
[*, oneOverN, ;, return, new, double, [, ], {, gk, ,, gm, ,, gb, ,, gq, ,, ga, ,, gn]
[., log, (, qExp1, ), *, oneOverN, ;, return, new, double, [, ], {, gk, ,, gm, ,, gb, ,]
[), *, oneOverN, ;, return, new, double, [, ], {, gk, ,, gm, ,, gb, ,, gq, ,, ga, ,]
[;, return, new, double, [, ], {, gk, ,, gm, ,, gb, ,, gq, ,, ga, ,, gn, }, ;]
[;, }, private, void, validateParameters, (, double, [, ], param, ), throws, NullArgumentException, ,, DimensionMismatchException, ,, NotStrictlyPositiveException, {, if, (]
[;, }, private, void, validateParameters, (, double, [, ], param, ), throws, NullArgumentException, ,, DimensionMismatchException, ,, NotStrictlyPositiveException, {, if, (]
[,, gm, ,, gb, ,, gq, ,, ga, ,, gn, }, ;, }, private, void, validateParameters, (, double, [, ]]
[,, gb, ,, gq, ,, ga, ,, gn, }, ;, }, private, void, validateParameters, (, double, [, ], param, )]
[,, gq, ,, ga, ,, gn, }, ;, }, private, void, validateParameters, (, double, [, ], param, ), throws, NullArgumentException]
[,, ga, ,, gn, }, ;, }, private, void, validateParameters, (, double, [, ], param, ), throws, NullArgumentException, ,, DimensionMismatchException]
[,, gn, }, ;, }, private, void, validateParameters, (, double, [, ], param, ), throws, NullArgumentException, ,, DimensionMismatchException, ,, NotStrictlyPositiveException]
[}, ;, }, private, void, validateParameters, (, double, [, ], param, ), throws, NullArgumentException, ,, DimensionMismatchException, ,, NotStrictlyPositiveException, {, if]
[), {, throw, new, NullArgumentException, (, ), ;, }, if, (, param, ., length, !=, 6, ), {, throw, new]
[==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, param, ., length, !=, 6, ), {]
[), {, throw, new, NullArgumentException, (, ), ;, }, if, (, param, ., length, !=, 6, ), {, throw, new]
[;, }, if, (, param, ., length, !=, 6, ), {, throw, new, DimensionMismatchException, (, param, ., length, ,, 6]
[), {, throw, new, DimensionMismatchException, (, param, ., length, ,, 6, ), ;, }, if, (, param, [, 5, ]]
[!=, 6, ), {, throw, new, DimensionMismatchException, (, param, ., length, ,, 6, ), ;, }, if, (, param, []
[., length, !=, 6, ), {, throw, new, DimensionMismatchException, (, param, ., length, ,, 6, ), ;, }, if, (]
[), {, throw, new, DimensionMismatchException, (, param, ., length, ,, 6, ), ;, }, if, (, param, [, 5, ]]
[;, }, if, (, param, [, 5, ], <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, param, [, 5, ]]
[,, 6, ), ;, }, if, (, param, [, 5, ], <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, param]
[., length, ,, 6, ), ;, }, if, (, param, [, 5, ], <=, 0, ), {, throw, new, NotStrictlyPositiveException]
[), ;, }, if, (, param, [, 5, ], <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, param, [, 5]
[), {, throw, new, NotStrictlyPositiveException, (, param, [, 5, ], ), ;, }, }, }, private, static, double, value, (]
[<=, 0, ), {, throw, new, NotStrictlyPositiveException, (, param, [, 5, ], ), ;, }, }, }, private, static, double]
[[, 5, ], <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, param, [, 5, ], ), ;, }, }, }]
[], <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, param, [, 5, ], ), ;, }, }, }, private, static]
[), {, throw, new, NotStrictlyPositiveException, (, param, [, 5, ], ), ;, }, }, }, private, static, double, value, (]
[;, }, }, }, private, static, double, value, (, double, mMinusX, ,, double, k, ,, double, b, ,, double, q]
[), ;, }, }, }, private, static, double, value, (, double, mMinusX, ,, double, k, ,, double, b, ,, double]
[[, 5, ], ), ;, }, }, }, private, static, double, value, (, double, mMinusX, ,, double, k, ,, double]
[], ), ;, }, }, }, private, static, double, value, (, double, mMinusX, ,, double, k, ,, double, b, ,]
[;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, return, t, ., negate, (, ), ., add, (]
[+, (, k, -, a, ), /, FastMath, ., pow, (, 1, +, q, *, FastMath, ., exp, (, b]
[;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, return, t, ., negate, (, ), ., add, (]
[/, FastMath, ., pow, (, 1, +, q, *, FastMath, ., exp, (, b, *, mMinusX, ), ,, oneOverN, )]
[), /, FastMath, ., pow, (, 1, +, q, *, FastMath, ., exp, (, b, *, mMinusX, ), ,, oneOverN]
[-, a, ), /, FastMath, ., pow, (, 1, +, q, *, FastMath, ., exp, (, b, *, mMinusX, )]
[), /, FastMath, ., pow, (, 1, +, q, *, FastMath, ., exp, (, b, *, mMinusX, ), ,, oneOverN]
[;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, return, t, ., negate, (, ), ., add, (]
[., pow, (, 1, +, q, *, FastMath, ., exp, (, b, *, mMinusX, ), ,, oneOverN, ), ;, }]
[,, oneOverN, ), ;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, return, t, ., negate, (, )]
[+, q, *, FastMath, ., exp, (, b, *, mMinusX, ), ,, oneOverN, ), ;, }, public, DerivativeStructure, value, (]
[,, oneOverN, ), ;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, return, t, ., negate, (, )]
[*, FastMath, ., exp, (, b, *, mMinusX, ), ,, oneOverN, ), ;, }, public, DerivativeStructure, value, (, final, DerivativeStructure]
[,, oneOverN, ), ;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, return, t, ., negate, (, )]
[., exp, (, b, *, mMinusX, ), ,, oneOverN, ), ;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, )]
[), ,, oneOverN, ), ;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, return, t, ., negate, (]
[*, mMinusX, ), ,, oneOverN, ), ;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, return, t, .]
[), ,, oneOverN, ), ;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, return, t, ., negate, (]
[), ;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, return, t, ., negate, (, ), ., add]
[;, }, }]
[., add, (, a, ), ;, }, }]
[., multiply, (, k, -, a, ), ., add, (, a, ), ;, }, }]
[., reciprocal, (, ), ., multiply, (, k, -, a, ), ., add, (, a, ), ;, }, }]
[., pow, (, oneOverN, ), ., reciprocal, (, ), ., multiply, (, k, -, a, ), ., add, (, a]
[., add, (, 1, ), ., pow, (, oneOverN, ), ., reciprocal, (, ), ., multiply, (, k, -, a]
[., multiply, (, q, ), ., add, (, 1, ), ., pow, (, oneOverN, ), ., reciprocal, (, ), .]
[., exp, (, ), ., multiply, (, q, ), ., add, (, 1, ), ., pow, (, oneOverN, ), .]
[., multiply, (, b, ), ., exp, (, ), ., multiply, (, q, ), ., add, (, 1, ), .]
[., add, (, m, ), ., multiply, (, b, ), ., exp, (, ), ., multiply, (, q, ), .]
[., negate, (, ), ., add, (, m, ), ., multiply, (, b, ), ., exp, (, ), ., multiply]
[), ., multiply, (, b, ), ., exp, (, ), ., multiply, (, q, ), ., add, (, 1, )]
[), ., exp, (, ), ., multiply, (, q, ), ., add, (, 1, ), ., pow, (, oneOverN, )]
[), ., add, (, 1, ), ., pow, (, oneOverN, ), ., reciprocal, (, ), ., multiply, (, k, -]
[), ., pow, (, oneOverN, ), ., reciprocal, (, ), ., multiply, (, k, -, a, ), ., add, (]
[), ., reciprocal, (, ), ., multiply, (, k, -, a, ), ., add, (, a, ), ;, }, }]
[), ., add, (, a, ), ;, }, }]
[-, a, ), ., add, (, a, ), ;, }, }]
[), ., add, (, a, ), ;, }, }]
[), ;, }, }]
