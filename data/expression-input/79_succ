[;, private, static, final, long, MILLIS_PER_YEAR, =, (, long, ), (, 365.2425, *, DateTimeConstants, ., MILLIS_PER_DAY, ), ;, private, static]
[;, private, static, final, long, MILLIS_PER_YEAR, =, (, long, ), (, 365.2425, *, DateTimeConstants, ., MILLIS_PER_DAY, ), ;, private, static]
[;, private, static, final, long, MILLIS_PER_MONTH, =, (, long, ), (, 365.2425, *, DateTimeConstants, ., MILLIS_PER_DAY, /, 12, ), ;]
[;, private, static, final, long, MILLIS_PER_MONTH, =, (, long, ), (, 365.2425, *, DateTimeConstants, ., MILLIS_PER_DAY, /, 12, ), ;]
[), ;, private, static, final, long, MILLIS_PER_MONTH, =, (, long, ), (, 365.2425, *, DateTimeConstants, ., MILLIS_PER_DAY, /, 12, )]
[*, DateTimeConstants, ., MILLIS_PER_DAY, ), ;, private, static, final, long, MILLIS_PER_MONTH, =, (, long, ), (, 365.2425, *, DateTimeConstants, .]
[), ;, private, static, final, long, MILLIS_PER_MONTH, =, (, long, ), (, 365.2425, *, DateTimeConstants, ., MILLIS_PER_DAY, /, 12, )]
[., MILLIS_PER_DAY, ), ;, private, static, final, long, MILLIS_PER_MONTH, =, (, long, ), (, 365.2425, *, DateTimeConstants, ., MILLIS_PER_DAY, /]
[;, private, static, final, int, DAYS_0000_TO_1970, =, 719527, ;, private, static, final, int, MIN_YEAR, =, -, 292275054, ;, private, static]
[;, private, static, final, int, DAYS_0000_TO_1970, =, 719527, ;, private, static, final, int, MIN_YEAR, =, -, 292275054, ;, private, static]
[), ;, private, static, final, int, DAYS_0000_TO_1970, =, 719527, ;, private, static, final, int, MIN_YEAR, =, -, 292275054, ;, private]
[/, 12, ), ;, private, static, final, int, DAYS_0000_TO_1970, =, 719527, ;, private, static, final, int, MIN_YEAR, =, -, 292275054]
[*, DateTimeConstants, ., MILLIS_PER_DAY, /, 12, ), ;, private, static, final, int, DAYS_0000_TO_1970, =, 719527, ;, private, static, final, int]
[/, 12, ), ;, private, static, final, int, DAYS_0000_TO_1970, =, 719527, ;, private, static, final, int, MIN_YEAR, =, -, 292275054]
[., MILLIS_PER_DAY, /, 12, ), ;, private, static, final, int, DAYS_0000_TO_1970, =, 719527, ;, private, static, final, int, MIN_YEAR, =]
[), ;, private, static, final, int, DAYS_0000_TO_1970, =, 719527, ;, private, static, final, int, MIN_YEAR, =, -, 292275054, ;, private]
[;, private, static, final, int, MIN_YEAR, =, -, 292275054, ;, private, static, final, int, MAX_YEAR, =, 292278993, ;, private, static]
[;, private, static, final, int, MAX_YEAR, =, 292278993, ;, private, static, final, GregorianChronology, INSTANCE_UTC, ;, private, static, final, Map, <]
[;, private, static, final, int, MAX_YEAR, =, 292278993, ;, private, static, final, GregorianChronology, INSTANCE_UTC, ;, private, static, final, Map, <]
[;, private, static, final, GregorianChronology, INSTANCE_UTC, ;, private, static, final, Map, <, DateTimeZone, ,, GregorianChronology, [, ], >, cCache, =]
[;, static, {, INSTANCE_UTC, =, getInstance, (, DateTimeZone, ., UTC, ), ;, }, public, static, GregorianChronology, getInstanceUTC, (, ), {]
[=, getInstance, (, DateTimeZone, ., UTC, ), ;, }, public, static, GregorianChronology, getInstanceUTC, (, ), {, return, INSTANCE_UTC, ;, }]
[;, }, public, static, GregorianChronology, getInstanceUTC, (, ), {, return, INSTANCE_UTC, ;, }, public, static, GregorianChronology, getInstance, (, ), {]
[), ;, }, public, static, GregorianChronology, getInstanceUTC, (, ), {, return, INSTANCE_UTC, ;, }, public, static, GregorianChronology, getInstance, (, )]
[., UTC, ), ;, }, public, static, GregorianChronology, getInstanceUTC, (, ), {, return, INSTANCE_UTC, ;, }, public, static, GregorianChronology, getInstance]
[;, }, public, static, GregorianChronology, getInstance, (, ), {, return, getInstance, (, DateTimeZone, ., getDefault, (, ), ,, 4, )]
[;, }, public, static, GregorianChronology, getInstance, (, DateTimeZone, zone, ), {, return, getInstance, (, zone, ,, 4, ), ;, }]
[,, 4, ), ;, }, public, static, GregorianChronology, getInstance, (, DateTimeZone, zone, ), {, return, getInstance, (, zone, ,, 4]
[., getDefault, (, ), ,, 4, ), ;, }, public, static, GregorianChronology, getInstance, (, DateTimeZone, zone, ), {, return, getInstance]
[), ;, }, public, static, GregorianChronology, getInstance, (, DateTimeZone, zone, ), {, return, getInstance, (, zone, ,, 4, ), ;]
[;, }, public, static, GregorianChronology, getInstance, (, DateTimeZone, zone, ,, int, minDaysInFirstWeek, ), {, if, (, zone, ==, null, )]
[,, 4, ), ;, }, public, static, GregorianChronology, getInstance, (, DateTimeZone, zone, ,, int, minDaysInFirstWeek, ), {, if, (, zone]
[), ;, }, public, static, GregorianChronology, getInstance, (, DateTimeZone, zone, ,, int, minDaysInFirstWeek, ), {, if, (, zone, ==, null]
[), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, GregorianChronology, chrono, ;, synchronized, (, cCache, ), {, GregorianChronology]
[==, null, ), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, GregorianChronology, chrono, ;, synchronized, (, cCache, )]
[), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, GregorianChronology, chrono, ;, synchronized, (, cCache, ), {, GregorianChronology]
[=, DateTimeZone, ., getDefault, (, ), ;, }, GregorianChronology, chrono, ;, synchronized, (, cCache, ), {, GregorianChronology, [, ], chronos]
[;, }, GregorianChronology, chrono, ;, synchronized, (, cCache, ), {, GregorianChronology, [, ], chronos, =, cCache, ., get, (, zone]
[., getDefault, (, ), ;, }, GregorianChronology, chrono, ;, synchronized, (, cCache, ), {, GregorianChronology, [, ], chronos, =, cCache]
[), {, GregorianChronology, [, ], chronos, =, cCache, ., get, (, zone, ), ;, if, (, chronos, ==, null, )]
[;, if, (, chronos, ==, null, ), {, chronos, =, new, GregorianChronology, [, 7, ], ;, cCache, ., put, (]
[., get, (, zone, ), ;, if, (, chronos, ==, null, ), {, chronos, =, new, GregorianChronology, [, 7, ]]
[), ;, if, (, chronos, ==, null, ), {, chronos, =, new, GregorianChronology, [, 7, ], ;, cCache, ., put]
[), {, chronos, =, new, GregorianChronology, [, 7, ], ;, cCache, ., put, (, zone, ,, chronos, ), ;, }]
[==, null, ), {, chronos, =, new, GregorianChronology, [, 7, ], ;, cCache, ., put, (, zone, ,, chronos, )]
[), {, chronos, =, new, GregorianChronology, [, 7, ], ;, cCache, ., put, (, zone, ,, chronos, ), ;, }]
[=, new, GregorianChronology, [, 7, ], ;, cCache, ., put, (, zone, ,, chronos, ), ;, }, try, {, chrono]
[;, cCache, ., put, (, zone, ,, chronos, ), ;, }, try, {, chrono, =, chronos, [, minDaysInFirstWeek, -, 1]
[], ;, cCache, ., put, (, zone, ,, chronos, ), ;, }, try, {, chrono, =, chronos, [, minDaysInFirstWeek, -]
[;, }, try, {, chrono, =, chronos, [, minDaysInFirstWeek, -, 1, ], ;, }, catch, (, ArrayIndexOutOfBoundsException, e, ), {]
[., put, (, zone, ,, chronos, ), ;, }, try, {, chrono, =, chronos, [, minDaysInFirstWeek, -, 1, ], ;]
[,, chronos, ), ;, }, try, {, chrono, =, chronos, [, minDaysInFirstWeek, -, 1, ], ;, }, catch, (, ArrayIndexOutOfBoundsException]
[), ;, }, try, {, chrono, =, chronos, [, minDaysInFirstWeek, -, 1, ], ;, }, catch, (, ArrayIndexOutOfBoundsException, e, )]
[=, chronos, [, minDaysInFirstWeek, -, 1, ], ;, }, catch, (, ArrayIndexOutOfBoundsException, e, ), {, throw, new, IllegalArgumentException, (, "Invalid min days in first week: "]
[;, }, catch, (, ArrayIndexOutOfBoundsException, e, ), {, throw, new, IllegalArgumentException, (, "Invalid min days in first week: ", +, minDaysInFirstWeek, ), ;, }, if, (]
[[, minDaysInFirstWeek, -, 1, ], ;, }, catch, (, ArrayIndexOutOfBoundsException, e, ), {, throw, new, IllegalArgumentException, (, "Invalid min days in first week: ", +, minDaysInFirstWeek]
[], ;, }, catch, (, ArrayIndexOutOfBoundsException, e, ), {, throw, new, IllegalArgumentException, (, "Invalid min days in first week: ", +, minDaysInFirstWeek, ), ;, }, if]
[-, 1, ], ;, }, catch, (, ArrayIndexOutOfBoundsException, e, ), {, throw, new, IllegalArgumentException, (, "Invalid min days in first week: ", +, minDaysInFirstWeek, ), ;]
[], ;, }, catch, (, ArrayIndexOutOfBoundsException, e, ), {, throw, new, IllegalArgumentException, (, "Invalid min days in first week: ", +, minDaysInFirstWeek, ), ;, }, if]
[;, }, if, (, chrono, ==, null, ), {, if, (, zone, ==, DateTimeZone, ., UTC, ), {, chrono, =]
[), ;, }, if, (, chrono, ==, null, ), {, if, (, zone, ==, DateTimeZone, ., UTC, ), {, chrono]
[+, minDaysInFirstWeek, ), ;, }, if, (, chrono, ==, null, ), {, if, (, zone, ==, DateTimeZone, ., UTC, )]
[), ;, }, if, (, chrono, ==, null, ), {, if, (, zone, ==, DateTimeZone, ., UTC, ), {, chrono]
[), {, if, (, zone, ==, DateTimeZone, ., UTC, ), {, chrono, =, new, GregorianChronology, (, null, ,, null, ,]
[==, null, ), {, if, (, zone, ==, DateTimeZone, ., UTC, ), {, chrono, =, new, GregorianChronology, (, null, ,]
[), {, if, (, zone, ==, DateTimeZone, ., UTC, ), {, chrono, =, new, GregorianChronology, (, null, ,, null, ,]
[), {, chrono, =, new, GregorianChronology, (, null, ,, null, ,, minDaysInFirstWeek, ), ;, }, else, {, chrono, =, getInstance]
[==, DateTimeZone, ., UTC, ), {, chrono, =, new, GregorianChronology, (, null, ,, null, ,, minDaysInFirstWeek, ), ;, }, else]
[), {, chrono, =, new, GregorianChronology, (, null, ,, null, ,, minDaysInFirstWeek, ), ;, }, else, {, chrono, =, getInstance]
[., UTC, ), {, chrono, =, new, GregorianChronology, (, null, ,, null, ,, minDaysInFirstWeek, ), ;, }, else, {, chrono]
[=, new, GregorianChronology, (, null, ,, null, ,, minDaysInFirstWeek, ), ;, }, else, {, chrono, =, getInstance, (, DateTimeZone, .]
[;, }, else, {, chrono, =, getInstance, (, DateTimeZone, ., UTC, ,, minDaysInFirstWeek, ), ;, chrono, =, new, GregorianChronology, (]
[,, null, ,, minDaysInFirstWeek, ), ;, }, else, {, chrono, =, getInstance, (, DateTimeZone, ., UTC, ,, minDaysInFirstWeek, ), ;]
[,, minDaysInFirstWeek, ), ;, }, else, {, chrono, =, getInstance, (, DateTimeZone, ., UTC, ,, minDaysInFirstWeek, ), ;, chrono, =]
[), ;, }, else, {, chrono, =, getInstance, (, DateTimeZone, ., UTC, ,, minDaysInFirstWeek, ), ;, chrono, =, new, GregorianChronology]
[=, getInstance, (, DateTimeZone, ., UTC, ,, minDaysInFirstWeek, ), ;, chrono, =, new, GregorianChronology, (, ZonedChronology, ., getInstance, (, chrono]
[;, chrono, =, new, GregorianChronology, (, ZonedChronology, ., getInstance, (, chrono, ,, zone, ), ,, null, ,, minDaysInFirstWeek, ), ;]
[,, minDaysInFirstWeek, ), ;, chrono, =, new, GregorianChronology, (, ZonedChronology, ., getInstance, (, chrono, ,, zone, ), ,, null, ,]
[., UTC, ,, minDaysInFirstWeek, ), ;, chrono, =, new, GregorianChronology, (, ZonedChronology, ., getInstance, (, chrono, ,, zone, ), ,]
[), ;, chrono, =, new, GregorianChronology, (, ZonedChronology, ., getInstance, (, chrono, ,, zone, ), ,, null, ,, minDaysInFirstWeek, )]
[=, new, GregorianChronology, (, ZonedChronology, ., getInstance, (, chrono, ,, zone, ), ,, null, ,, minDaysInFirstWeek, ), ;, }, chronos]
[;, }, chronos, [, minDaysInFirstWeek, -, 1, ], =, chrono, ;, }, }, return, chrono, ;, }, private, GregorianChronology, (]
[,, null, ,, minDaysInFirstWeek, ), ;, }, chronos, [, minDaysInFirstWeek, -, 1, ], =, chrono, ;, }, }, return, chrono]
[., getInstance, (, chrono, ,, zone, ), ,, null, ,, minDaysInFirstWeek, ), ;, }, chronos, [, minDaysInFirstWeek, -, 1, ]]
[,, zone, ), ,, null, ,, minDaysInFirstWeek, ), ;, }, chronos, [, minDaysInFirstWeek, -, 1, ], =, chrono, ;, }]
[), ,, null, ,, minDaysInFirstWeek, ), ;, }, chronos, [, minDaysInFirstWeek, -, 1, ], =, chrono, ;, }, }, return]
[,, minDaysInFirstWeek, ), ;, }, chronos, [, minDaysInFirstWeek, -, 1, ], =, chrono, ;, }, }, return, chrono, ;, }]
[), ;, }, chronos, [, minDaysInFirstWeek, -, 1, ], =, chrono, ;, }, }, return, chrono, ;, }, private, GregorianChronology]
[=, chrono, ;, }, }, return, chrono, ;, }, private, GregorianChronology, (, Chronology, base, ,, Object, param, ,, int, minDaysInFirstWeek]
[[, minDaysInFirstWeek, -, 1, ], =, chrono, ;, }, }, return, chrono, ;, }, private, GregorianChronology, (, Chronology, base, ,]
[], =, chrono, ;, }, }, return, chrono, ;, }, private, GregorianChronology, (, Chronology, base, ,, Object, param, ,, int]
[-, 1, ], =, chrono, ;, }, }, return, chrono, ;, }, private, GregorianChronology, (, Chronology, base, ,, Object, param]
[], =, chrono, ;, }, }, return, chrono, ;, }, private, GregorianChronology, (, Chronology, base, ,, Object, param, ,, int]
[;, }, }, return, chrono, ;, }, private, GregorianChronology, (, Chronology, base, ,, Object, param, ,, int, minDaysInFirstWeek, ), {]
[;, }, private, GregorianChronology, (, Chronology, base, ,, Object, param, ,, int, minDaysInFirstWeek, ), {, super, (, base, ,, param]
[,, param, ,, minDaysInFirstWeek, ), ;, }, private, Object, readResolve, (, ), {, Chronology, base, =, getBase, (, ), ;]
[,, minDaysInFirstWeek, ), ;, }, private, Object, readResolve, (, ), {, Chronology, base, =, getBase, (, ), ;, int, minDays]
[), ;, }, private, Object, readResolve, (, ), {, Chronology, base, =, getBase, (, ), ;, int, minDays, =, getMinimumDaysInFirstWeek]
[;, int, minDays, =, getMinimumDaysInFirstWeek, (, ), ;, minDays, =, (, minDays, ==, 0, ?, 4, :, minDays, ), ;]
[;, minDays, =, (, minDays, ==, 0, ?, 4, :, minDays, ), ;, return, base, ==, null, ?, getInstance, (]
[=, (, minDays, ==, 0, ?, 4, :, minDays, ), ;, return, base, ==, null, ?, getInstance, (, DateTimeZone, .]
[;, return, base, ==, null, ?, getInstance, (, DateTimeZone, ., UTC, ,, minDays, ), :, getInstance, (, base, ., getZone]
[), ;, return, base, ==, null, ?, getInstance, (, DateTimeZone, ., UTC, ,, minDays, ), :, getInstance, (, base, .]
[?, 4, :, minDays, ), ;, return, base, ==, null, ?, getInstance, (, DateTimeZone, ., UTC, ,, minDays, ), :]
[==, 0, ?, 4, :, minDays, ), ;, return, base, ==, null, ?, getInstance, (, DateTimeZone, ., UTC, ,, minDays]
[?, 4, :, minDays, ), ;, return, base, ==, null, ?, getInstance, (, DateTimeZone, ., UTC, ,, minDays, ), :]
[:, minDays, ), ;, return, base, ==, null, ?, getInstance, (, DateTimeZone, ., UTC, ,, minDays, ), :, getInstance, (]
[), ;, return, base, ==, null, ?, getInstance, (, DateTimeZone, ., UTC, ,, minDays, ), :, getInstance, (, base, .]
[;, }, public, Chronology, withUTC, (, ), {, return, INSTANCE_UTC, ;, }, public, Chronology, withZone, (, DateTimeZone, zone, ), {]
[?, getInstance, (, DateTimeZone, ., UTC, ,, minDays, ), :, getInstance, (, base, ., getZone, (, ), ,, minDays, )]
[==, null, ?, getInstance, (, DateTimeZone, ., UTC, ,, minDays, ), :, getInstance, (, base, ., getZone, (, ), ,]
[?, getInstance, (, DateTimeZone, ., UTC, ,, minDays, ), :, getInstance, (, base, ., getZone, (, ), ,, minDays, )]
[:, getInstance, (, base, ., getZone, (, ), ,, minDays, ), ;, }, public, Chronology, withUTC, (, ), {, return]
[,, minDays, ), :, getInstance, (, base, ., getZone, (, ), ,, minDays, ), ;, }, public, Chronology, withUTC, (]
[., UTC, ,, minDays, ), :, getInstance, (, base, ., getZone, (, ), ,, minDays, ), ;, }, public, Chronology]
[), :, getInstance, (, base, ., getZone, (, ), ,, minDays, ), ;, }, public, Chronology, withUTC, (, ), {]
[;, }, public, Chronology, withUTC, (, ), {, return, INSTANCE_UTC, ;, }, public, Chronology, withZone, (, DateTimeZone, zone, ), {]
[,, minDays, ), ;, }, public, Chronology, withUTC, (, ), {, return, INSTANCE_UTC, ;, }, public, Chronology, withZone, (, DateTimeZone]
[., getZone, (, ), ,, minDays, ), ;, }, public, Chronology, withUTC, (, ), {, return, INSTANCE_UTC, ;, }, public]
[), ;, }, public, Chronology, withUTC, (, ), {, return, INSTANCE_UTC, ;, }, public, Chronology, withZone, (, DateTimeZone, zone, )]
[;, }, public, Chronology, withZone, (, DateTimeZone, zone, ), {, if, (, zone, ==, null, ), {, zone, =, DateTimeZone]
[), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, if, (, zone, ==, getZone, (, ), ), {]
[==, null, ), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, if, (, zone, ==, getZone, (, )]
[), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, if, (, zone, ==, getZone, (, ), ), {]
[=, DateTimeZone, ., getDefault, (, ), ;, }, if, (, zone, ==, getZone, (, ), ), {, return, this, ;]
[;, }, if, (, zone, ==, getZone, (, ), ), {, return, this, ;, }, return, getInstance, (, zone, )]
[., getDefault, (, ), ;, }, if, (, zone, ==, getZone, (, ), ), {, return, this, ;, }, return]
[), {, return, this, ;, }, return, getInstance, (, zone, ), ;, }, protected, void, assemble, (, Fields, fields, )]
[==, getZone, (, ), ), {, return, this, ;, }, return, getInstance, (, zone, ), ;, }, protected, void, assemble]
[), {, return, this, ;, }, return, getInstance, (, zone, ), ;, }, protected, void, assemble, (, Fields, fields, )]
[;, }, return, getInstance, (, zone, ), ;, }, protected, void, assemble, (, Fields, fields, ), {, if, (, getBase]
[;, }, protected, void, assemble, (, Fields, fields, ), {, if, (, getBase, (, ), ==, null, ), {, super]
[), ;, }, protected, void, assemble, (, Fields, fields, ), {, if, (, getBase, (, ), ==, null, ), {]
[), {, super, ., assemble, (, fields, ), ;, }, }, boolean, isLeapYear, (, int, year, ), {, return, (]
[==, null, ), {, super, ., assemble, (, fields, ), ;, }, }, boolean, isLeapYear, (, int, year, ), {]
[), {, super, ., assemble, (, fields, ), ;, }, }, boolean, isLeapYear, (, int, year, ), {, return, (]
[;, }, }, boolean, isLeapYear, (, int, year, ), {, return, (, (, year, &, 3, ), ==, 0, )]
[., assemble, (, fields, ), ;, }, }, boolean, isLeapYear, (, int, year, ), {, return, (, (, year, &]
[), ;, }, }, boolean, isLeapYear, (, int, year, ), {, return, (, (, year, &, 3, ), ==, 0]
[;, }, long, calculateFirstDayOfYearMillis, (, int, year, ), {, int, leapYears, =, year, /, 100, ;, if, (, year, <]
[&&, (, (, year, %, 100, ), !=, 0, ||, (, year, %, 400, ), ==, 0, ), ;, }]
[), &&, (, (, year, %, 100, ), !=, 0, ||, (, year, %, 400, ), ==, 0, ), ;]
[==, 0, ), &&, (, (, year, %, 100, ), !=, 0, ||, (, year, %, 400, ), ==, 0]
[), ==, 0, ), &&, (, (, year, %, 100, ), !=, 0, ||, (, year, %, 400, ), ==]
[&, 3, ), ==, 0, ), &&, (, (, year, %, 100, ), !=, 0, ||, (, year, %, 400]
[), ==, 0, ), &&, (, (, year, %, 100, ), !=, 0, ||, (, year, %, 400, ), ==]
[), &&, (, (, year, %, 100, ), !=, 0, ||, (, year, %, 400, ), ==, 0, ), ;]
[;, }, long, calculateFirstDayOfYearMillis, (, int, year, ), {, int, leapYears, =, year, /, 100, ;, if, (, year, <]
[), ;, }, long, calculateFirstDayOfYearMillis, (, int, year, ), {, int, leapYears, =, year, /, 100, ;, if, (, year]
[||, (, year, %, 400, ), ==, 0, ), ;, }, long, calculateFirstDayOfYearMillis, (, int, year, ), {, int, leapYears]
[!=, 0, ||, (, year, %, 400, ), ==, 0, ), ;, }, long, calculateFirstDayOfYearMillis, (, int, year, ), {]
[), !=, 0, ||, (, year, %, 400, ), ==, 0, ), ;, }, long, calculateFirstDayOfYearMillis, (, int, year, )]
[%, 100, ), !=, 0, ||, (, year, %, 400, ), ==, 0, ), ;, }, long, calculateFirstDayOfYearMillis, (, int]
[), !=, 0, ||, (, year, %, 400, ), ==, 0, ), ;, }, long, calculateFirstDayOfYearMillis, (, int, year, )]
[||, (, year, %, 400, ), ==, 0, ), ;, }, long, calculateFirstDayOfYearMillis, (, int, year, ), {, int, leapYears]
[), ;, }, long, calculateFirstDayOfYearMillis, (, int, year, ), {, int, leapYears, =, year, /, 100, ;, if, (, year]
[==, 0, ), ;, }, long, calculateFirstDayOfYearMillis, (, int, year, ), {, int, leapYears, =, year, /, 100, ;, if]
[), ==, 0, ), ;, }, long, calculateFirstDayOfYearMillis, (, int, year, ), {, int, leapYears, =, year, /, 100, ;]
[%, 400, ), ==, 0, ), ;, }, long, calculateFirstDayOfYearMillis, (, int, year, ), {, int, leapYears, =, year, /]
[), ==, 0, ), ;, }, long, calculateFirstDayOfYearMillis, (, int, year, ), {, int, leapYears, =, year, /, 100, ;]
[), ;, }, long, calculateFirstDayOfYearMillis, (, int, year, ), {, int, leapYears, =, year, /, 100, ;, if, (, year]
[;, if, (, year, <, 0, ), {, leapYears, =, (, (, year, +, 3, ), >, >, 2, )]
[/, 100, ;, if, (, year, <, 0, ), {, leapYears, =, (, (, year, +, 3, ), >, >]
[;, if, (, year, <, 0, ), {, leapYears, =, (, (, year, +, 3, ), >, >, 2, )]
[), {, leapYears, =, (, (, year, +, 3, ), >, >, 2, ), -, leapYears, +, (, (, leapYears]
[<, 0, ), {, leapYears, =, (, (, year, +, 3, ), >, >, 2, ), -, leapYears, +, (]
[), {, leapYears, =, (, (, year, +, 3, ), >, >, 2, ), -, leapYears, +, (, (, leapYears]
[=, (, (, year, +, 3, ), >, >, 2, ), -, leapYears, +, (, (, leapYears, +, 3, )]
[;, }, else, {, leapYears, =, (, year, >, >, 2, ), -, leapYears, +, (, leapYears, >, >, 2]
[-, 1, ;, }, else, {, leapYears, =, (, year, >, >, 2, ), -, leapYears, +, (, leapYears, >]
[+, (, (, leapYears, +, 3, ), >, >, 2, ), -, 1, ;, }, else, {, leapYears, =, (]
[-, leapYears, +, (, (, leapYears, +, 3, ), >, >, 2, ), -, 1, ;, }, else, {, leapYears]
[), -, leapYears, +, (, (, leapYears, +, 3, ), >, >, 2, ), -, 1, ;, }, else, {]
[>, >, 2, ), -, leapYears, +, (, (, leapYears, +, 3, ), >, >, 2, ), -, 1, ;]
[), >, >, 2, ), -, leapYears, +, (, (, leapYears, +, 3, ), >, >, 2, ), -, 1]
[+, 3, ), >, >, 2, ), -, leapYears, +, (, (, leapYears, +, 3, ), >, >, 2, )]
[), >, >, 2, ), -, leapYears, +, (, (, leapYears, +, 3, ), >, >, 2, ), -, 1]
[), -, leapYears, +, (, (, leapYears, +, 3, ), >, >, 2, ), -, 1, ;, }, else, {]
[+, (, (, leapYears, +, 3, ), >, >, 2, ), -, 1, ;, }, else, {, leapYears, =, (]
[-, 1, ;, }, else, {, leapYears, =, (, year, >, >, 2, ), -, leapYears, +, (, leapYears, >]
[), -, 1, ;, }, else, {, leapYears, =, (, year, >, >, 2, ), -, leapYears, +, (, leapYears]
[>, >, 2, ), -, 1, ;, }, else, {, leapYears, =, (, year, >, >, 2, ), -, leapYears]
[), >, >, 2, ), -, 1, ;, }, else, {, leapYears, =, (, year, >, >, 2, ), -]
[+, 3, ), >, >, 2, ), -, 1, ;, }, else, {, leapYears, =, (, year, >, >, 2]
[), >, >, 2, ), -, 1, ;, }, else, {, leapYears, =, (, year, >, >, 2, ), -]
[), -, 1, ;, }, else, {, leapYears, =, (, year, >, >, 2, ), -, leapYears, +, (, leapYears]
[;, }, else, {, leapYears, =, (, year, >, >, 2, ), -, leapYears, +, (, leapYears, >, >, 2]
[=, (, year, >, >, 2, ), -, leapYears, +, (, leapYears, >, >, 2, ), ;, if, (, isLeapYear]
[;, if, (, isLeapYear, (, year, ), ), {, leapYears, --, ;, }, }, return, (, year, *, 365L, +]
[+, (, leapYears, >, >, 2, ), ;, if, (, isLeapYear, (, year, ), ), {, leapYears, --, ;, }]
[-, leapYears, +, (, leapYears, >, >, 2, ), ;, if, (, isLeapYear, (, year, ), ), {, leapYears, --]
[), -, leapYears, +, (, leapYears, >, >, 2, ), ;, if, (, isLeapYear, (, year, ), ), {, leapYears]
[>, >, 2, ), -, leapYears, +, (, leapYears, >, >, 2, ), ;, if, (, isLeapYear, (, year, )]
[), -, leapYears, +, (, leapYears, >, >, 2, ), ;, if, (, isLeapYear, (, year, ), ), {, leapYears]
[+, (, leapYears, >, >, 2, ), ;, if, (, isLeapYear, (, year, ), ), {, leapYears, --, ;, }]
[;, if, (, isLeapYear, (, year, ), ), {, leapYears, --, ;, }, }, return, (, year, *, 365L, +]
[), ;, if, (, isLeapYear, (, year, ), ), {, leapYears, --, ;, }, }, return, (, year, *, 365L]
[>, >, 2, ), ;, if, (, isLeapYear, (, year, ), ), {, leapYears, --, ;, }, }, return, (]
[), ;, if, (, isLeapYear, (, year, ), ), {, leapYears, --, ;, }, }, return, (, year, *, 365L]
[), {, leapYears, --, ;, }, }, return, (, year, *, 365L, +, (, leapYears, -, DAYS_0000_TO_1970, ), ), *]
[), ), {, leapYears, --, ;, }, }, return, (, year, *, 365L, +, (, leapYears, -, DAYS_0000_TO_1970, ), )]
[;, }, }, return, (, year, *, 365L, +, (, leapYears, -, DAYS_0000_TO_1970, ), ), *, DateTimeConstants, ., MILLIS_PER_DAY, ;]
[--, ;, }, }, return, (, year, *, 365L, +, (, leapYears, -, DAYS_0000_TO_1970, ), ), *, DateTimeConstants, ., MILLIS_PER_DAY]
[;, }, int, getMinYear, (, ), {, return, MIN_YEAR, ;, }, int, getMaxYear, (, ), {, return, MAX_YEAR, ;, }]
[*, DateTimeConstants, ., MILLIS_PER_DAY, ;, }, int, getMinYear, (, ), {, return, MIN_YEAR, ;, }, int, getMaxYear, (, ), {]
[), *, DateTimeConstants, ., MILLIS_PER_DAY, ;, }, int, getMinYear, (, ), {, return, MIN_YEAR, ;, }, int, getMaxYear, (, )]
[+, (, leapYears, -, DAYS_0000_TO_1970, ), ), *, DateTimeConstants, ., MILLIS_PER_DAY, ;, }, int, getMinYear, (, ), {, return, MIN_YEAR]
[*, 365L, +, (, leapYears, -, DAYS_0000_TO_1970, ), ), *, DateTimeConstants, ., MILLIS_PER_DAY, ;, }, int, getMinYear, (, ), {]
[+, (, leapYears, -, DAYS_0000_TO_1970, ), ), *, DateTimeConstants, ., MILLIS_PER_DAY, ;, }, int, getMinYear, (, ), {, return, MIN_YEAR]
[), *, DateTimeConstants, ., MILLIS_PER_DAY, ;, }, int, getMinYear, (, ), {, return, MIN_YEAR, ;, }, int, getMaxYear, (, )]
[), ), *, DateTimeConstants, ., MILLIS_PER_DAY, ;, }, int, getMinYear, (, ), {, return, MIN_YEAR, ;, }, int, getMaxYear, (]
[-, DAYS_0000_TO_1970, ), ), *, DateTimeConstants, ., MILLIS_PER_DAY, ;, }, int, getMinYear, (, ), {, return, MIN_YEAR, ;, }, int]
[), ), *, DateTimeConstants, ., MILLIS_PER_DAY, ;, }, int, getMinYear, (, ), {, return, MIN_YEAR, ;, }, int, getMaxYear, (]
[;, }, int, getMinYear, (, ), {, return, MIN_YEAR, ;, }, int, getMaxYear, (, ), {, return, MAX_YEAR, ;, }]
[., MILLIS_PER_DAY, ;, }, int, getMinYear, (, ), {, return, MIN_YEAR, ;, }, int, getMaxYear, (, ), {, return, MAX_YEAR]
[;, }, int, getMaxYear, (, ), {, return, MAX_YEAR, ;, }, long, getAverageMillisPerYear, (, ), {, return, MILLIS_PER_YEAR, ;, }]
[;, }, long, getAverageMillisPerYear, (, ), {, return, MILLIS_PER_YEAR, ;, }, long, getAverageMillisPerYearDividedByTwo, (, ), {, return, MILLIS_PER_YEAR, /, 2]
[;, }, long, getAverageMillisPerYearDividedByTwo, (, ), {, return, MILLIS_PER_YEAR, /, 2, ;, }, long, getAverageMillisPerMonth, (, ), {, return, MILLIS_PER_MONTH]
[;, }, long, getAverageMillisPerMonth, (, ), {, return, MILLIS_PER_MONTH, ;, }, long, getApproxMillisAtEpochDividedByTwo, (, ), {, return, (, 1970L, *]
[/, 2, ;, }, long, getAverageMillisPerMonth, (, ), {, return, MILLIS_PER_MONTH, ;, }, long, getApproxMillisAtEpochDividedByTwo, (, ), {, return, (]
[;, }, long, getAverageMillisPerMonth, (, ), {, return, MILLIS_PER_MONTH, ;, }, long, getApproxMillisAtEpochDividedByTwo, (, ), {, return, (, 1970L, *]
[;, }, long, getApproxMillisAtEpochDividedByTwo, (, ), {, return, (, 1970L, *, MILLIS_PER_YEAR, ), /, 2, ;, }, }]
[;, }, }]
[/, 2, ;, }, }]
[), /, 2, ;, }, }]
[*, MILLIS_PER_YEAR, ), /, 2, ;, }, }]
[), /, 2, ;, }, }]
[;, }, }]
