[;, public, double, compute, (, double, [, ], a, ,, double, [, ], b, ), {, double, lastDistance, =, 0]
[;, public, double, compute, (, double, [, ], a, ,, double, [, ], b, ), {, double, lastDistance, =, 0]
[;, double, totalDistance, =, 0, ;, for, (, int, i, =, 0, ;, i, <, a, ., length, ;, i]
[;, for, (, int, i, =, 0, ;, i, <, a, ., length, ;, i, ++, ), {, final, double]
[;, i, <, a, ., length, ;, i, ++, ), {, final, double, currentDistance, =, (, a, [, i, ]]
[;, i, ++, ), {, final, double, currentDistance, =, (, a, [, i, ], +, lastDistance, ), -, b, []
[<, a, ., length, ;, i, ++, ), {, final, double, currentDistance, =, (, a, [, i, ], +, lastDistance]
[;, i, ++, ), {, final, double, currentDistance, =, (, a, [, i, ], +, lastDistance, ), -, b, []
[., length, ;, i, ++, ), {, final, double, currentDistance, =, (, a, [, i, ], +, lastDistance, ), -]
[), {, final, double, currentDistance, =, (, a, [, i, ], +, lastDistance, ), -, b, [, i, ], ;]
[++, ), {, final, double, currentDistance, =, (, a, [, i, ], +, lastDistance, ), -, b, [, i, ]]
[;, totalDistance, +=, FastMath, ., abs, (, currentDistance, ), ;, lastDistance, =, currentDistance, ;, }, return, totalDistance, ;, }, }]
[-, b, [, i, ], ;, totalDistance, +=, FastMath, ., abs, (, currentDistance, ), ;, lastDistance, =, currentDistance, ;, }]
[), -, b, [, i, ], ;, totalDistance, +=, FastMath, ., abs, (, currentDistance, ), ;, lastDistance, =, currentDistance, ;]
[+, lastDistance, ), -, b, [, i, ], ;, totalDistance, +=, FastMath, ., abs, (, currentDistance, ), ;, lastDistance, =]
[[, i, ], +, lastDistance, ), -, b, [, i, ], ;, totalDistance, +=, FastMath, ., abs, (, currentDistance, )]
[], +, lastDistance, ), -, b, [, i, ], ;, totalDistance, +=, FastMath, ., abs, (, currentDistance, ), ;, lastDistance]
[), -, b, [, i, ], ;, totalDistance, +=, FastMath, ., abs, (, currentDistance, ), ;, lastDistance, =, currentDistance, ;]
[;, totalDistance, +=, FastMath, ., abs, (, currentDistance, ), ;, lastDistance, =, currentDistance, ;, }, return, totalDistance, ;, }, }]
[[, i, ], ;, totalDistance, +=, FastMath, ., abs, (, currentDistance, ), ;, lastDistance, =, currentDistance, ;, }, return, totalDistance]
[], ;, totalDistance, +=, FastMath, ., abs, (, currentDistance, ), ;, lastDistance, =, currentDistance, ;, }, return, totalDistance, ;, }]
[+=, FastMath, ., abs, (, currentDistance, ), ;, lastDistance, =, currentDistance, ;, }, return, totalDistance, ;, }, }]
[;, lastDistance, =, currentDistance, ;, }, return, totalDistance, ;, }, }]
[., abs, (, currentDistance, ), ;, lastDistance, =, currentDistance, ;, }, return, totalDistance, ;, }, }]
[), ;, lastDistance, =, currentDistance, ;, }, return, totalDistance, ;, }, }]
[=, currentDistance, ;, }, return, totalDistance, ;, }, }]
[;, }, return, totalDistance, ;, }, }]
[;, }, }]
