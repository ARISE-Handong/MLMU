[,, RETURN, =, 4, ,, BITOR, =, 9, ,, BITXOR, =, 10, ,, BITAND, =, 11, ,, EQ, =, 12]
[,, RETURN, =, 4, ,, BITOR, =, 9, ,, BITXOR, =, 10, ,, BITAND, =, 11, ,, EQ, =, 12]
[,, BITOR, =, 9, ,, BITXOR, =, 10, ,, BITAND, =, 11, ,, EQ, =, 12, ,, NE, =, 13]
[,, BITXOR, =, 10, ,, BITAND, =, 11, ,, EQ, =, 12, ,, NE, =, 13, ,, LT, =, 14]
[,, BITAND, =, 11, ,, EQ, =, 12, ,, NE, =, 13, ,, LT, =, 14, ,, LE, =, 15]
[,, EQ, =, 12, ,, NE, =, 13, ,, LT, =, 14, ,, LE, =, 15, ,, GT, =, 16]
[,, NE, =, 13, ,, LT, =, 14, ,, LE, =, 15, ,, GT, =, 16, ,, GE, =, 17]
[,, LT, =, 14, ,, LE, =, 15, ,, GT, =, 16, ,, GE, =, 17, ,, LSH, =, 18]
[,, LE, =, 15, ,, GT, =, 16, ,, GE, =, 17, ,, LSH, =, 18, ,, RSH, =, 19]
[,, GT, =, 16, ,, GE, =, 17, ,, LSH, =, 18, ,, RSH, =, 19, ,, URSH, =, 20]
[,, GE, =, 17, ,, LSH, =, 18, ,, RSH, =, 19, ,, URSH, =, 20, ,, ADD, =, 21]
[,, LSH, =, 18, ,, RSH, =, 19, ,, URSH, =, 20, ,, ADD, =, 21, ,, SUB, =, 22]
[,, RSH, =, 19, ,, URSH, =, 20, ,, ADD, =, 21, ,, SUB, =, 22, ,, MUL, =, 23]
[,, URSH, =, 20, ,, ADD, =, 21, ,, SUB, =, 22, ,, MUL, =, 23, ,, DIV, =, 24]
[,, ADD, =, 21, ,, SUB, =, 22, ,, MUL, =, 23, ,, DIV, =, 24, ,, MOD, =, 25]
[,, SUB, =, 22, ,, MUL, =, 23, ,, DIV, =, 24, ,, MOD, =, 25, ,, NOT, =, 26]
[,, MUL, =, 23, ,, DIV, =, 24, ,, MOD, =, 25, ,, NOT, =, 26, ,, BITNOT, =, 27]
[,, DIV, =, 24, ,, MOD, =, 25, ,, NOT, =, 26, ,, BITNOT, =, 27, ,, POS, =, 28]
[,, MOD, =, 25, ,, NOT, =, 26, ,, BITNOT, =, 27, ,, POS, =, 28, ,, NEG, =, 29]
[,, NOT, =, 26, ,, BITNOT, =, 27, ,, POS, =, 28, ,, NEG, =, 29, ,, NEW, =, 30]
[,, BITNOT, =, 27, ,, POS, =, 28, ,, NEG, =, 29, ,, NEW, =, 30, ,, DELPROP, =, 31]
[,, POS, =, 28, ,, NEG, =, 29, ,, NEW, =, 30, ,, DELPROP, =, 31, ,, TYPEOF, =, 32]
[,, NEG, =, 29, ,, NEW, =, 30, ,, DELPROP, =, 31, ,, TYPEOF, =, 32, ,, GETPROP, =, 33]
[,, NEW, =, 30, ,, DELPROP, =, 31, ,, TYPEOF, =, 32, ,, GETPROP, =, 33, ,, GETELEM, =, 35]
[,, DELPROP, =, 31, ,, TYPEOF, =, 32, ,, GETPROP, =, 33, ,, GETELEM, =, 35, ,, CALL, =, 37]
[,, TYPEOF, =, 32, ,, GETPROP, =, 33, ,, GETELEM, =, 35, ,, CALL, =, 37, ,, NAME, =, 38]
[,, GETPROP, =, 33, ,, GETELEM, =, 35, ,, CALL, =, 37, ,, NAME, =, 38, ,, NUMBER, =, 39]
[,, GETELEM, =, 35, ,, CALL, =, 37, ,, NAME, =, 38, ,, NUMBER, =, 39, ,, STRING, =, 40]
[,, CALL, =, 37, ,, NAME, =, 38, ,, NUMBER, =, 39, ,, STRING, =, 40, ,, NULL, =, 41]
[,, NAME, =, 38, ,, NUMBER, =, 39, ,, STRING, =, 40, ,, NULL, =, 41, ,, THIS, =, 42]
[,, NUMBER, =, 39, ,, STRING, =, 40, ,, NULL, =, 41, ,, THIS, =, 42, ,, FALSE, =, 43]
[,, STRING, =, 40, ,, NULL, =, 41, ,, THIS, =, 42, ,, FALSE, =, 43, ,, TRUE, =, 44]
[,, NULL, =, 41, ,, THIS, =, 42, ,, FALSE, =, 43, ,, TRUE, =, 44, ,, SHEQ, =, 45]
[,, THIS, =, 42, ,, FALSE, =, 43, ,, TRUE, =, 44, ,, SHEQ, =, 45, ,, SHNE, =, 46]
[,, FALSE, =, 43, ,, TRUE, =, 44, ,, SHEQ, =, 45, ,, SHNE, =, 46, ,, REGEXP, =, 47]
[,, TRUE, =, 44, ,, SHEQ, =, 45, ,, SHNE, =, 46, ,, REGEXP, =, 47, ,, THROW, =, 49]
[,, SHEQ, =, 45, ,, SHNE, =, 46, ,, REGEXP, =, 47, ,, THROW, =, 49, ,, IN, =, 51]
[,, SHNE, =, 46, ,, REGEXP, =, 47, ,, THROW, =, 49, ,, IN, =, 51, ,, INSTANCEOF, =, 52]
[,, REGEXP, =, 47, ,, THROW, =, 49, ,, IN, =, 51, ,, INSTANCEOF, =, 52, ,, ARRAYLIT, =, 63]
[,, THROW, =, 49, ,, IN, =, 51, ,, INSTANCEOF, =, 52, ,, ARRAYLIT, =, 63, ,, OBJECTLIT, =, 64]
[,, IN, =, 51, ,, INSTANCEOF, =, 52, ,, ARRAYLIT, =, 63, ,, OBJECTLIT, =, 64, ,, TRY, =, 77]
[,, INSTANCEOF, =, 52, ,, ARRAYLIT, =, 63, ,, OBJECTLIT, =, 64, ,, TRY, =, 77, ,, PARAM_LIST, =, 83]
[,, ARRAYLIT, =, 63, ,, OBJECTLIT, =, 64, ,, TRY, =, 77, ,, PARAM_LIST, =, 83, ,, COMMA, =, 85]
[,, OBJECTLIT, =, 64, ,, TRY, =, 77, ,, PARAM_LIST, =, 83, ,, COMMA, =, 85, ,, ASSIGN, =, 86]
[,, TRY, =, 77, ,, PARAM_LIST, =, 83, ,, COMMA, =, 85, ,, ASSIGN, =, 86, ,, ASSIGN_BITOR, =, 87]
[,, PARAM_LIST, =, 83, ,, COMMA, =, 85, ,, ASSIGN, =, 86, ,, ASSIGN_BITOR, =, 87, ,, ASSIGN_BITXOR, =, 88]
[,, COMMA, =, 85, ,, ASSIGN, =, 86, ,, ASSIGN_BITOR, =, 87, ,, ASSIGN_BITXOR, =, 88, ,, ASSIGN_BITAND, =, 89]
[,, ASSIGN, =, 86, ,, ASSIGN_BITOR, =, 87, ,, ASSIGN_BITXOR, =, 88, ,, ASSIGN_BITAND, =, 89, ,, ASSIGN_LSH, =, 90]
[,, ASSIGN_BITOR, =, 87, ,, ASSIGN_BITXOR, =, 88, ,, ASSIGN_BITAND, =, 89, ,, ASSIGN_LSH, =, 90, ,, ASSIGN_RSH, =, 91]
[,, ASSIGN_BITXOR, =, 88, ,, ASSIGN_BITAND, =, 89, ,, ASSIGN_LSH, =, 90, ,, ASSIGN_RSH, =, 91, ,, ASSIGN_URSH, =, 92]
[,, ASSIGN_BITAND, =, 89, ,, ASSIGN_LSH, =, 90, ,, ASSIGN_RSH, =, 91, ,, ASSIGN_URSH, =, 92, ,, ASSIGN_ADD, =, 93]
[,, ASSIGN_LSH, =, 90, ,, ASSIGN_RSH, =, 91, ,, ASSIGN_URSH, =, 92, ,, ASSIGN_ADD, =, 93, ,, ASSIGN_SUB, =, 94]
[,, ASSIGN_RSH, =, 91, ,, ASSIGN_URSH, =, 92, ,, ASSIGN_ADD, =, 93, ,, ASSIGN_SUB, =, 94, ,, ASSIGN_MUL, =, 95]
[,, ASSIGN_URSH, =, 92, ,, ASSIGN_ADD, =, 93, ,, ASSIGN_SUB, =, 94, ,, ASSIGN_MUL, =, 95, ,, ASSIGN_DIV, =, 96]
[,, ASSIGN_ADD, =, 93, ,, ASSIGN_SUB, =, 94, ,, ASSIGN_MUL, =, 95, ,, ASSIGN_DIV, =, 96, ,, ASSIGN_MOD, =, 97]
[,, ASSIGN_SUB, =, 94, ,, ASSIGN_MUL, =, 95, ,, ASSIGN_DIV, =, 96, ,, ASSIGN_MOD, =, 97, ,, HOOK, =, 98]
[,, ASSIGN_MUL, =, 95, ,, ASSIGN_DIV, =, 96, ,, ASSIGN_MOD, =, 97, ,, HOOK, =, 98, ,, OR, =, 100]
[,, ASSIGN_DIV, =, 96, ,, ASSIGN_MOD, =, 97, ,, HOOK, =, 98, ,, OR, =, 100, ,, AND, =, 101]
[,, ASSIGN_MOD, =, 97, ,, HOOK, =, 98, ,, OR, =, 100, ,, AND, =, 101, ,, INC, =, 102]
[,, HOOK, =, 98, ,, OR, =, 100, ,, AND, =, 101, ,, INC, =, 102, ,, DEC, =, 103]
[,, OR, =, 100, ,, AND, =, 101, ,, INC, =, 102, ,, DEC, =, 103, ,, FUNCTION, =, 105]
[,, AND, =, 101, ,, INC, =, 102, ,, DEC, =, 103, ,, FUNCTION, =, 105, ,, IF, =, 108]
[,, INC, =, 102, ,, DEC, =, 103, ,, FUNCTION, =, 105, ,, IF, =, 108, ,, SWITCH, =, 110]
[,, DEC, =, 103, ,, FUNCTION, =, 105, ,, IF, =, 108, ,, SWITCH, =, 110, ,, CASE, =, 111]
[,, FUNCTION, =, 105, ,, IF, =, 108, ,, SWITCH, =, 110, ,, CASE, =, 111, ,, DEFAULT_CASE, =, 112]
[,, IF, =, 108, ,, SWITCH, =, 110, ,, CASE, =, 111, ,, DEFAULT_CASE, =, 112, ,, WHILE, =, 113]
[,, SWITCH, =, 110, ,, CASE, =, 111, ,, DEFAULT_CASE, =, 112, ,, WHILE, =, 113, ,, DO, =, 114]
[,, CASE, =, 111, ,, DEFAULT_CASE, =, 112, ,, WHILE, =, 113, ,, DO, =, 114, ,, FOR, =, 115]
[,, DEFAULT_CASE, =, 112, ,, WHILE, =, 113, ,, DO, =, 114, ,, FOR, =, 115, ,, BREAK, =, 116]
[,, WHILE, =, 113, ,, DO, =, 114, ,, FOR, =, 115, ,, BREAK, =, 116, ,, CONTINUE, =, 117]
[,, DO, =, 114, ,, FOR, =, 115, ,, BREAK, =, 116, ,, CONTINUE, =, 117, ,, VAR, =, 118]
[,, FOR, =, 115, ,, BREAK, =, 116, ,, CONTINUE, =, 117, ,, VAR, =, 118, ,, WITH, =, 119]
[,, BREAK, =, 116, ,, CONTINUE, =, 117, ,, VAR, =, 118, ,, WITH, =, 119, ,, CATCH, =, 120]
[,, CONTINUE, =, 117, ,, VAR, =, 118, ,, WITH, =, 119, ,, CATCH, =, 120, ,, VOID, =, 122]
[,, VAR, =, 118, ,, WITH, =, 119, ,, CATCH, =, 120, ,, VOID, =, 122, ,, EMPTY, =, 124]
[,, WITH, =, 119, ,, CATCH, =, 120, ,, VOID, =, 122, ,, EMPTY, =, 124, ,, BLOCK, =, 125]
[,, CATCH, =, 120, ,, VOID, =, 122, ,, EMPTY, =, 124, ,, BLOCK, =, 125, ,, LABEL, =, 126]
[,, VOID, =, 122, ,, EMPTY, =, 124, ,, BLOCK, =, 125, ,, LABEL, =, 126, ,, EXPR_RESULT, =, 130]
[,, EMPTY, =, 124, ,, BLOCK, =, 125, ,, LABEL, =, 126, ,, EXPR_RESULT, =, 130, ,, SCRIPT, =, 132]
[,, BLOCK, =, 125, ,, LABEL, =, 126, ,, EXPR_RESULT, =, 130, ,, SCRIPT, =, 132, ,, GETTER_DEF, =, 147]
[,, LABEL, =, 126, ,, EXPR_RESULT, =, 130, ,, SCRIPT, =, 132, ,, GETTER_DEF, =, 147, ,, SETTER_DEF, =, 148]
[,, EXPR_RESULT, =, 130, ,, SCRIPT, =, 132, ,, GETTER_DEF, =, 147, ,, SETTER_DEF, =, 148, ,, CONST, =, 149]
[,, SCRIPT, =, 132, ,, GETTER_DEF, =, 147, ,, SETTER_DEF, =, 148, ,, CONST, =, 149, ,, DEBUGGER, =, 152]
[,, GETTER_DEF, =, 147, ,, SETTER_DEF, =, 148, ,, CONST, =, 149, ,, DEBUGGER, =, 152, ,, LABEL_NAME, =, 153]
[,, SETTER_DEF, =, 148, ,, CONST, =, 149, ,, DEBUGGER, =, 152, ,, LABEL_NAME, =, 153, ,, STRING_KEY, =, 154]
[,, CONST, =, 149, ,, DEBUGGER, =, 152, ,, LABEL_NAME, =, 153, ,, STRING_KEY, =, 154, ,, CAST, =, 155]
[,, DEBUGGER, =, 152, ,, LABEL_NAME, =, 153, ,, STRING_KEY, =, 154, ,, CAST, =, 155, ,, ANNOTATION, =, 300]
[,, LABEL_NAME, =, 153, ,, STRING_KEY, =, 154, ,, CAST, =, 155, ,, ANNOTATION, =, 300, ,, PIPE, =, 301]
[,, STRING_KEY, =, 154, ,, CAST, =, 155, ,, ANNOTATION, =, 300, ,, PIPE, =, 301, ,, STAR, =, 302]
[,, CAST, =, 155, ,, ANNOTATION, =, 300, ,, PIPE, =, 301, ,, STAR, =, 302, ,, EOC, =, 303]
[,, ANNOTATION, =, 300, ,, PIPE, =, 301, ,, STAR, =, 302, ,, EOC, =, 303, ,, QMARK, =, 304]
[,, PIPE, =, 301, ,, STAR, =, 302, ,, EOC, =, 303, ,, QMARK, =, 304, ,, ELLIPSIS, =, 305]
[,, STAR, =, 302, ,, EOC, =, 303, ,, QMARK, =, 304, ,, ELLIPSIS, =, 305, ,, BANG, =, 306]
[,, EOC, =, 303, ,, QMARK, =, 304, ,, ELLIPSIS, =, 305, ,, BANG, =, 306, ,, EQUALS, =, 307]
[,, QMARK, =, 304, ,, ELLIPSIS, =, 305, ,, BANG, =, 306, ,, EQUALS, =, 307, ,, LB, =, 308]
[,, ELLIPSIS, =, 305, ,, BANG, =, 306, ,, EQUALS, =, 307, ,, LB, =, 308, ,, LC, =, 309]
[,, BANG, =, 306, ,, EQUALS, =, 307, ,, LB, =, 308, ,, LC, =, 309, ,, COLON, =, 310]
[,, EQUALS, =, 307, ,, LB, =, 308, ,, LC, =, 309, ,, COLON, =, 310, ;, public, final, static]
[,, LB, =, 308, ,, LC, =, 309, ,, COLON, =, 310, ;, public, final, static, int, DEFAULT, =, DEFAULT_CASE]
[,, LC, =, 309, ,, COLON, =, 310, ;, public, final, static, int, DEFAULT, =, DEFAULT_CASE, ,, GET, =, GETTER_DEF]
[,, COLON, =, 310, ;, public, final, static, int, DEFAULT, =, DEFAULT_CASE, ,, GET, =, GETTER_DEF, ,, LP, =, PARAM_LIST]
[;, public, final, static, int, DEFAULT, =, DEFAULT_CASE, ,, GET, =, GETTER_DEF, ,, LP, =, PARAM_LIST, ,, SET, =, SETTER_DEF]
[,, GET, =, GETTER_DEF, ,, LP, =, PARAM_LIST, ,, SET, =, SETTER_DEF, ;, public, static, String, name, (, int, token]
[,, LP, =, PARAM_LIST, ,, SET, =, SETTER_DEF, ;, public, static, String, name, (, int, token, ), {, switch, (]
[,, SET, =, SETTER_DEF, ;, public, static, String, name, (, int, token, ), {, switch, (, token, ), {, case]
[;, public, static, String, name, (, int, token, ), {, switch, (, token, ), {, case, ERROR, :, return, "ERROR"]
[), {, case, ERROR, :, return, "ERROR", ;, case, RETURN, :, return, "RETURN", ;, case, BITOR, :, return, "BITOR", ;]
[:, return, "ERROR", ;, case, RETURN, :, return, "RETURN", ;, case, BITOR, :, return, "BITOR", ;, case, BITXOR, :, return]
[;, case, RETURN, :, return, "RETURN", ;, case, BITOR, :, return, "BITOR", ;, case, BITXOR, :, return, "BITXOR", ;, case]
[:, return, "RETURN", ;, case, BITOR, :, return, "BITOR", ;, case, BITXOR, :, return, "BITXOR", ;, case, BITAND, :, return]
[;, case, BITOR, :, return, "BITOR", ;, case, BITXOR, :, return, "BITXOR", ;, case, BITAND, :, return, "BITAND", ;, case]
[:, return, "BITOR", ;, case, BITXOR, :, return, "BITXOR", ;, case, BITAND, :, return, "BITAND", ;, case, EQ, :, return]
[;, case, BITXOR, :, return, "BITXOR", ;, case, BITAND, :, return, "BITAND", ;, case, EQ, :, return, "EQ", ;, case]
[:, return, "BITXOR", ;, case, BITAND, :, return, "BITAND", ;, case, EQ, :, return, "EQ", ;, case, NE, :, return]
[;, case, BITAND, :, return, "BITAND", ;, case, EQ, :, return, "EQ", ;, case, NE, :, return, "NE", ;, case]
[:, return, "BITAND", ;, case, EQ, :, return, "EQ", ;, case, NE, :, return, "NE", ;, case, LT, :, return]
[;, case, EQ, :, return, "EQ", ;, case, NE, :, return, "NE", ;, case, LT, :, return, "LT", ;, case]
[:, return, "EQ", ;, case, NE, :, return, "NE", ;, case, LT, :, return, "LT", ;, case, LE, :, return]
[;, case, NE, :, return, "NE", ;, case, LT, :, return, "LT", ;, case, LE, :, return, "LE", ;, case]
[:, return, "NE", ;, case, LT, :, return, "LT", ;, case, LE, :, return, "LE", ;, case, GT, :, return]
[;, case, LT, :, return, "LT", ;, case, LE, :, return, "LE", ;, case, GT, :, return, "GT", ;, case]
[:, return, "LT", ;, case, LE, :, return, "LE", ;, case, GT, :, return, "GT", ;, case, GE, :, return]
[;, case, LE, :, return, "LE", ;, case, GT, :, return, "GT", ;, case, GE, :, return, "GE", ;, case]
[:, return, "LE", ;, case, GT, :, return, "GT", ;, case, GE, :, return, "GE", ;, case, LSH, :, return]
[;, case, GT, :, return, "GT", ;, case, GE, :, return, "GE", ;, case, LSH, :, return, "LSH", ;, case]
[:, return, "GT", ;, case, GE, :, return, "GE", ;, case, LSH, :, return, "LSH", ;, case, RSH, :, return]
[;, case, GE, :, return, "GE", ;, case, LSH, :, return, "LSH", ;, case, RSH, :, return, "RSH", ;, case]
[:, return, "GE", ;, case, LSH, :, return, "LSH", ;, case, RSH, :, return, "RSH", ;, case, URSH, :, return]
[;, case, LSH, :, return, "LSH", ;, case, RSH, :, return, "RSH", ;, case, URSH, :, return, "URSH", ;, case]
[:, return, "LSH", ;, case, RSH, :, return, "RSH", ;, case, URSH, :, return, "URSH", ;, case, ADD, :, return]
[;, case, RSH, :, return, "RSH", ;, case, URSH, :, return, "URSH", ;, case, ADD, :, return, "ADD", ;, case]
[:, return, "RSH", ;, case, URSH, :, return, "URSH", ;, case, ADD, :, return, "ADD", ;, case, SUB, :, return]
[;, case, URSH, :, return, "URSH", ;, case, ADD, :, return, "ADD", ;, case, SUB, :, return, "SUB", ;, case]
[:, return, "URSH", ;, case, ADD, :, return, "ADD", ;, case, SUB, :, return, "SUB", ;, case, MUL, :, return]
[;, case, ADD, :, return, "ADD", ;, case, SUB, :, return, "SUB", ;, case, MUL, :, return, "MUL", ;, case]
[:, return, "ADD", ;, case, SUB, :, return, "SUB", ;, case, MUL, :, return, "MUL", ;, case, DIV, :, return]
[;, case, SUB, :, return, "SUB", ;, case, MUL, :, return, "MUL", ;, case, DIV, :, return, "DIV", ;, case]
[:, return, "SUB", ;, case, MUL, :, return, "MUL", ;, case, DIV, :, return, "DIV", ;, case, MOD, :, return]
[;, case, MUL, :, return, "MUL", ;, case, DIV, :, return, "DIV", ;, case, MOD, :, return, "MOD", ;, case]
[:, return, "MUL", ;, case, DIV, :, return, "DIV", ;, case, MOD, :, return, "MOD", ;, case, NOT, :, return]
[;, case, DIV, :, return, "DIV", ;, case, MOD, :, return, "MOD", ;, case, NOT, :, return, "NOT", ;, case]
[:, return, "DIV", ;, case, MOD, :, return, "MOD", ;, case, NOT, :, return, "NOT", ;, case, BITNOT, :, return]
[;, case, MOD, :, return, "MOD", ;, case, NOT, :, return, "NOT", ;, case, BITNOT, :, return, "BITNOT", ;, case]
[:, return, "MOD", ;, case, NOT, :, return, "NOT", ;, case, BITNOT, :, return, "BITNOT", ;, case, POS, :, return]
[;, case, NOT, :, return, "NOT", ;, case, BITNOT, :, return, "BITNOT", ;, case, POS, :, return, "POS", ;, case]
[:, return, "NOT", ;, case, BITNOT, :, return, "BITNOT", ;, case, POS, :, return, "POS", ;, case, NEG, :, return]
[;, case, BITNOT, :, return, "BITNOT", ;, case, POS, :, return, "POS", ;, case, NEG, :, return, "NEG", ;, case]
[:, return, "BITNOT", ;, case, POS, :, return, "POS", ;, case, NEG, :, return, "NEG", ;, case, NEW, :, return]
[;, case, POS, :, return, "POS", ;, case, NEG, :, return, "NEG", ;, case, NEW, :, return, "NEW", ;, case]
[:, return, "POS", ;, case, NEG, :, return, "NEG", ;, case, NEW, :, return, "NEW", ;, case, DELPROP, :, return]
[;, case, NEG, :, return, "NEG", ;, case, NEW, :, return, "NEW", ;, case, DELPROP, :, return, "DELPROP", ;, case]
[:, return, "NEG", ;, case, NEW, :, return, "NEW", ;, case, DELPROP, :, return, "DELPROP", ;, case, TYPEOF, :, return]
[;, case, NEW, :, return, "NEW", ;, case, DELPROP, :, return, "DELPROP", ;, case, TYPEOF, :, return, "TYPEOF", ;, case]
[:, return, "NEW", ;, case, DELPROP, :, return, "DELPROP", ;, case, TYPEOF, :, return, "TYPEOF", ;, case, GETPROP, :, return]
[;, case, DELPROP, :, return, "DELPROP", ;, case, TYPEOF, :, return, "TYPEOF", ;, case, GETPROP, :, return, "GETPROP", ;, case]
[:, return, "DELPROP", ;, case, TYPEOF, :, return, "TYPEOF", ;, case, GETPROP, :, return, "GETPROP", ;, case, GETELEM, :, return]
[;, case, TYPEOF, :, return, "TYPEOF", ;, case, GETPROP, :, return, "GETPROP", ;, case, GETELEM, :, return, "GETELEM", ;, case]
[:, return, "TYPEOF", ;, case, GETPROP, :, return, "GETPROP", ;, case, GETELEM, :, return, "GETELEM", ;, case, CALL, :, return]
[;, case, GETPROP, :, return, "GETPROP", ;, case, GETELEM, :, return, "GETELEM", ;, case, CALL, :, return, "CALL", ;, case]
[:, return, "GETPROP", ;, case, GETELEM, :, return, "GETELEM", ;, case, CALL, :, return, "CALL", ;, case, NAME, :, return]
[;, case, GETELEM, :, return, "GETELEM", ;, case, CALL, :, return, "CALL", ;, case, NAME, :, return, "NAME", ;, case]
[:, return, "GETELEM", ;, case, CALL, :, return, "CALL", ;, case, NAME, :, return, "NAME", ;, case, LABEL_NAME, :, return]
[;, case, CALL, :, return, "CALL", ;, case, NAME, :, return, "NAME", ;, case, LABEL_NAME, :, return, "LABEL_NAME", ;, case]
[:, return, "CALL", ;, case, NAME, :, return, "NAME", ;, case, LABEL_NAME, :, return, "LABEL_NAME", ;, case, NUMBER, :, return]
[;, case, NAME, :, return, "NAME", ;, case, LABEL_NAME, :, return, "LABEL_NAME", ;, case, NUMBER, :, return, "NUMBER", ;, case]
[:, return, "NAME", ;, case, LABEL_NAME, :, return, "LABEL_NAME", ;, case, NUMBER, :, return, "NUMBER", ;, case, STRING, :, return]
[;, case, LABEL_NAME, :, return, "LABEL_NAME", ;, case, NUMBER, :, return, "NUMBER", ;, case, STRING, :, return, "STRING", ;, case]
[:, return, "LABEL_NAME", ;, case, NUMBER, :, return, "NUMBER", ;, case, STRING, :, return, "STRING", ;, case, STRING_KEY, :, return]
[;, case, NUMBER, :, return, "NUMBER", ;, case, STRING, :, return, "STRING", ;, case, STRING_KEY, :, return, "STRING_KEY", ;, case]
[:, return, "NUMBER", ;, case, STRING, :, return, "STRING", ;, case, STRING_KEY, :, return, "STRING_KEY", ;, case, NULL, :, return]
[;, case, STRING, :, return, "STRING", ;, case, STRING_KEY, :, return, "STRING_KEY", ;, case, NULL, :, return, "NULL", ;, case]
[:, return, "STRING", ;, case, STRING_KEY, :, return, "STRING_KEY", ;, case, NULL, :, return, "NULL", ;, case, THIS, :, return]
[;, case, STRING_KEY, :, return, "STRING_KEY", ;, case, NULL, :, return, "NULL", ;, case, THIS, :, return, "THIS", ;, case]
[:, return, "STRING_KEY", ;, case, NULL, :, return, "NULL", ;, case, THIS, :, return, "THIS", ;, case, FALSE, :, return]
[;, case, NULL, :, return, "NULL", ;, case, THIS, :, return, "THIS", ;, case, FALSE, :, return, "FALSE", ;, case]
[:, return, "NULL", ;, case, THIS, :, return, "THIS", ;, case, FALSE, :, return, "FALSE", ;, case, TRUE, :, return]
[;, case, THIS, :, return, "THIS", ;, case, FALSE, :, return, "FALSE", ;, case, TRUE, :, return, "TRUE", ;, case]
[:, return, "THIS", ;, case, FALSE, :, return, "FALSE", ;, case, TRUE, :, return, "TRUE", ;, case, SHEQ, :, return]
[;, case, FALSE, :, return, "FALSE", ;, case, TRUE, :, return, "TRUE", ;, case, SHEQ, :, return, "SHEQ", ;, case]
[:, return, "FALSE", ;, case, TRUE, :, return, "TRUE", ;, case, SHEQ, :, return, "SHEQ", ;, case, SHNE, :, return]
[;, case, TRUE, :, return, "TRUE", ;, case, SHEQ, :, return, "SHEQ", ;, case, SHNE, :, return, "SHNE", ;, case]
[:, return, "TRUE", ;, case, SHEQ, :, return, "SHEQ", ;, case, SHNE, :, return, "SHNE", ;, case, REGEXP, :, return]
[;, case, SHEQ, :, return, "SHEQ", ;, case, SHNE, :, return, "SHNE", ;, case, REGEXP, :, return, "REGEXP", ;, case]
[:, return, "SHEQ", ;, case, SHNE, :, return, "SHNE", ;, case, REGEXP, :, return, "REGEXP", ;, case, THROW, :, return]
[;, case, SHNE, :, return, "SHNE", ;, case, REGEXP, :, return, "REGEXP", ;, case, THROW, :, return, "THROW", ;, case]
[:, return, "SHNE", ;, case, REGEXP, :, return, "REGEXP", ;, case, THROW, :, return, "THROW", ;, case, IN, :, return]
[;, case, REGEXP, :, return, "REGEXP", ;, case, THROW, :, return, "THROW", ;, case, IN, :, return, "IN", ;, case]
[:, return, "REGEXP", ;, case, THROW, :, return, "THROW", ;, case, IN, :, return, "IN", ;, case, INSTANCEOF, :, return]
[;, case, THROW, :, return, "THROW", ;, case, IN, :, return, "IN", ;, case, INSTANCEOF, :, return, "INSTANCEOF", ;, case]
[:, return, "THROW", ;, case, IN, :, return, "IN", ;, case, INSTANCEOF, :, return, "INSTANCEOF", ;, case, ARRAYLIT, :, return]
[;, case, IN, :, return, "IN", ;, case, INSTANCEOF, :, return, "INSTANCEOF", ;, case, ARRAYLIT, :, return, "ARRAYLIT", ;, case]
[:, return, "IN", ;, case, INSTANCEOF, :, return, "INSTANCEOF", ;, case, ARRAYLIT, :, return, "ARRAYLIT", ;, case, OBJECTLIT, :, return]
[;, case, INSTANCEOF, :, return, "INSTANCEOF", ;, case, ARRAYLIT, :, return, "ARRAYLIT", ;, case, OBJECTLIT, :, return, "OBJECTLIT", ;, case]
[:, return, "INSTANCEOF", ;, case, ARRAYLIT, :, return, "ARRAYLIT", ;, case, OBJECTLIT, :, return, "OBJECTLIT", ;, case, TRY, :, return]
[;, case, ARRAYLIT, :, return, "ARRAYLIT", ;, case, OBJECTLIT, :, return, "OBJECTLIT", ;, case, TRY, :, return, "TRY", ;, case]
[:, return, "ARRAYLIT", ;, case, OBJECTLIT, :, return, "OBJECTLIT", ;, case, TRY, :, return, "TRY", ;, case, PARAM_LIST, :, return]
[;, case, OBJECTLIT, :, return, "OBJECTLIT", ;, case, TRY, :, return, "TRY", ;, case, PARAM_LIST, :, return, "PARAM_LIST", ;, case]
[:, return, "OBJECTLIT", ;, case, TRY, :, return, "TRY", ;, case, PARAM_LIST, :, return, "PARAM_LIST", ;, case, COMMA, :, return]
[;, case, TRY, :, return, "TRY", ;, case, PARAM_LIST, :, return, "PARAM_LIST", ;, case, COMMA, :, return, "COMMA", ;, case]
[:, return, "TRY", ;, case, PARAM_LIST, :, return, "PARAM_LIST", ;, case, COMMA, :, return, "COMMA", ;, case, ASSIGN, :, return]
[;, case, PARAM_LIST, :, return, "PARAM_LIST", ;, case, COMMA, :, return, "COMMA", ;, case, ASSIGN, :, return, "ASSIGN", ;, case]
[:, return, "PARAM_LIST", ;, case, COMMA, :, return, "COMMA", ;, case, ASSIGN, :, return, "ASSIGN", ;, case, ASSIGN_BITOR, :, return]
[;, case, COMMA, :, return, "COMMA", ;, case, ASSIGN, :, return, "ASSIGN", ;, case, ASSIGN_BITOR, :, return, "ASSIGN_BITOR", ;, case]
[:, return, "COMMA", ;, case, ASSIGN, :, return, "ASSIGN", ;, case, ASSIGN_BITOR, :, return, "ASSIGN_BITOR", ;, case, ASSIGN_BITXOR, :, return]
[;, case, ASSIGN, :, return, "ASSIGN", ;, case, ASSIGN_BITOR, :, return, "ASSIGN_BITOR", ;, case, ASSIGN_BITXOR, :, return, "ASSIGN_BITXOR", ;, case]
[:, return, "ASSIGN", ;, case, ASSIGN_BITOR, :, return, "ASSIGN_BITOR", ;, case, ASSIGN_BITXOR, :, return, "ASSIGN_BITXOR", ;, case, ASSIGN_BITAND, :, return]
[;, case, ASSIGN_BITOR, :, return, "ASSIGN_BITOR", ;, case, ASSIGN_BITXOR, :, return, "ASSIGN_BITXOR", ;, case, ASSIGN_BITAND, :, return, "ASSIGN_BITAND", ;, case]
[:, return, "ASSIGN_BITOR", ;, case, ASSIGN_BITXOR, :, return, "ASSIGN_BITXOR", ;, case, ASSIGN_BITAND, :, return, "ASSIGN_BITAND", ;, case, ASSIGN_LSH, :, return]
[;, case, ASSIGN_BITXOR, :, return, "ASSIGN_BITXOR", ;, case, ASSIGN_BITAND, :, return, "ASSIGN_BITAND", ;, case, ASSIGN_LSH, :, return, "ASSIGN_LSH", ;, case]
[:, return, "ASSIGN_BITXOR", ;, case, ASSIGN_BITAND, :, return, "ASSIGN_BITAND", ;, case, ASSIGN_LSH, :, return, "ASSIGN_LSH", ;, case, ASSIGN_RSH, :, return]
[;, case, ASSIGN_BITAND, :, return, "ASSIGN_BITAND", ;, case, ASSIGN_LSH, :, return, "ASSIGN_LSH", ;, case, ASSIGN_RSH, :, return, "ASSIGN_RSH", ;, case]
[:, return, "ASSIGN_BITAND", ;, case, ASSIGN_LSH, :, return, "ASSIGN_LSH", ;, case, ASSIGN_RSH, :, return, "ASSIGN_RSH", ;, case, ASSIGN_URSH, :, return]
[;, case, ASSIGN_LSH, :, return, "ASSIGN_LSH", ;, case, ASSIGN_RSH, :, return, "ASSIGN_RSH", ;, case, ASSIGN_URSH, :, return, "ASSIGN_URSH", ;, case]
[:, return, "ASSIGN_LSH", ;, case, ASSIGN_RSH, :, return, "ASSIGN_RSH", ;, case, ASSIGN_URSH, :, return, "ASSIGN_URSH", ;, case, ASSIGN_ADD, :, return]
[;, case, ASSIGN_RSH, :, return, "ASSIGN_RSH", ;, case, ASSIGN_URSH, :, return, "ASSIGN_URSH", ;, case, ASSIGN_ADD, :, return, "ASSIGN_ADD", ;, case]
[:, return, "ASSIGN_RSH", ;, case, ASSIGN_URSH, :, return, "ASSIGN_URSH", ;, case, ASSIGN_ADD, :, return, "ASSIGN_ADD", ;, case, ASSIGN_SUB, :, return]
[;, case, ASSIGN_URSH, :, return, "ASSIGN_URSH", ;, case, ASSIGN_ADD, :, return, "ASSIGN_ADD", ;, case, ASSIGN_SUB, :, return, "ASSIGN_SUB", ;, case]
[:, return, "ASSIGN_URSH", ;, case, ASSIGN_ADD, :, return, "ASSIGN_ADD", ;, case, ASSIGN_SUB, :, return, "ASSIGN_SUB", ;, case, ASSIGN_MUL, :, return]
[;, case, ASSIGN_ADD, :, return, "ASSIGN_ADD", ;, case, ASSIGN_SUB, :, return, "ASSIGN_SUB", ;, case, ASSIGN_MUL, :, return, "ASSIGN_MUL", ;, case]
[:, return, "ASSIGN_ADD", ;, case, ASSIGN_SUB, :, return, "ASSIGN_SUB", ;, case, ASSIGN_MUL, :, return, "ASSIGN_MUL", ;, case, ASSIGN_DIV, :, return]
[;, case, ASSIGN_SUB, :, return, "ASSIGN_SUB", ;, case, ASSIGN_MUL, :, return, "ASSIGN_MUL", ;, case, ASSIGN_DIV, :, return, "ASSIGN_DIV", ;, case]
[:, return, "ASSIGN_SUB", ;, case, ASSIGN_MUL, :, return, "ASSIGN_MUL", ;, case, ASSIGN_DIV, :, return, "ASSIGN_DIV", ;, case, ASSIGN_MOD, :, return]
[;, case, ASSIGN_MUL, :, return, "ASSIGN_MUL", ;, case, ASSIGN_DIV, :, return, "ASSIGN_DIV", ;, case, ASSIGN_MOD, :, return, "ASSIGN_MOD", ;, case]
[:, return, "ASSIGN_MUL", ;, case, ASSIGN_DIV, :, return, "ASSIGN_DIV", ;, case, ASSIGN_MOD, :, return, "ASSIGN_MOD", ;, case, HOOK, :, return]
[;, case, ASSIGN_DIV, :, return, "ASSIGN_DIV", ;, case, ASSIGN_MOD, :, return, "ASSIGN_MOD", ;, case, HOOK, :, return, "HOOK", ;, case]
[:, return, "ASSIGN_DIV", ;, case, ASSIGN_MOD, :, return, "ASSIGN_MOD", ;, case, HOOK, :, return, "HOOK", ;, case, OR, :, return]
[;, case, ASSIGN_MOD, :, return, "ASSIGN_MOD", ;, case, HOOK, :, return, "HOOK", ;, case, OR, :, return, "OR", ;, case]
[:, return, "ASSIGN_MOD", ;, case, HOOK, :, return, "HOOK", ;, case, OR, :, return, "OR", ;, case, AND, :, return]
[;, case, HOOK, :, return, "HOOK", ;, case, OR, :, return, "OR", ;, case, AND, :, return, "AND", ;, case]
[:, return, "HOOK", ;, case, OR, :, return, "OR", ;, case, AND, :, return, "AND", ;, case, INC, :, return]
[;, case, OR, :, return, "OR", ;, case, AND, :, return, "AND", ;, case, INC, :, return, "INC", ;, case]
[:, return, "OR", ;, case, AND, :, return, "AND", ;, case, INC, :, return, "INC", ;, case, DEC, :, return]
[;, case, AND, :, return, "AND", ;, case, INC, :, return, "INC", ;, case, DEC, :, return, "DEC", ;, case]
[:, return, "AND", ;, case, INC, :, return, "INC", ;, case, DEC, :, return, "DEC", ;, case, FUNCTION, :, return]
[;, case, INC, :, return, "INC", ;, case, DEC, :, return, "DEC", ;, case, FUNCTION, :, return, "FUNCTION", ;, case]
[:, return, "INC", ;, case, DEC, :, return, "DEC", ;, case, FUNCTION, :, return, "FUNCTION", ;, case, IF, :, return]
[;, case, DEC, :, return, "DEC", ;, case, FUNCTION, :, return, "FUNCTION", ;, case, IF, :, return, "IF", ;, case]
[:, return, "DEC", ;, case, FUNCTION, :, return, "FUNCTION", ;, case, IF, :, return, "IF", ;, case, SWITCH, :, return]
[;, case, FUNCTION, :, return, "FUNCTION", ;, case, IF, :, return, "IF", ;, case, SWITCH, :, return, "SWITCH", ;, case]
[:, return, "FUNCTION", ;, case, IF, :, return, "IF", ;, case, SWITCH, :, return, "SWITCH", ;, case, CASE, :, return]
[;, case, IF, :, return, "IF", ;, case, SWITCH, :, return, "SWITCH", ;, case, CASE, :, return, "CASE", ;, case]
[:, return, "IF", ;, case, SWITCH, :, return, "SWITCH", ;, case, CASE, :, return, "CASE", ;, case, DEFAULT_CASE, :, return]
[;, case, SWITCH, :, return, "SWITCH", ;, case, CASE, :, return, "CASE", ;, case, DEFAULT_CASE, :, return, "DEFAULT_CASE", ;, case]
[:, return, "SWITCH", ;, case, CASE, :, return, "CASE", ;, case, DEFAULT_CASE, :, return, "DEFAULT_CASE", ;, case, WHILE, :, return]
[;, case, CASE, :, return, "CASE", ;, case, DEFAULT_CASE, :, return, "DEFAULT_CASE", ;, case, WHILE, :, return, "WHILE", ;, case]
[:, return, "CASE", ;, case, DEFAULT_CASE, :, return, "DEFAULT_CASE", ;, case, WHILE, :, return, "WHILE", ;, case, DO, :, return]
[;, case, DEFAULT_CASE, :, return, "DEFAULT_CASE", ;, case, WHILE, :, return, "WHILE", ;, case, DO, :, return, "DO", ;, case]
[:, return, "DEFAULT_CASE", ;, case, WHILE, :, return, "WHILE", ;, case, DO, :, return, "DO", ;, case, FOR, :, return]
[;, case, WHILE, :, return, "WHILE", ;, case, DO, :, return, "DO", ;, case, FOR, :, return, "FOR", ;, case]
[:, return, "WHILE", ;, case, DO, :, return, "DO", ;, case, FOR, :, return, "FOR", ;, case, BREAK, :, return]
[;, case, DO, :, return, "DO", ;, case, FOR, :, return, "FOR", ;, case, BREAK, :, return, "BREAK", ;, case]
[:, return, "DO", ;, case, FOR, :, return, "FOR", ;, case, BREAK, :, return, "BREAK", ;, case, CONTINUE, :, return]
[;, case, FOR, :, return, "FOR", ;, case, BREAK, :, return, "BREAK", ;, case, CONTINUE, :, return, "CONTINUE", ;, case]
[:, return, "FOR", ;, case, BREAK, :, return, "BREAK", ;, case, CONTINUE, :, return, "CONTINUE", ;, case, VAR, :, return]
[;, case, BREAK, :, return, "BREAK", ;, case, CONTINUE, :, return, "CONTINUE", ;, case, VAR, :, return, "VAR", ;, case]
[:, return, "BREAK", ;, case, CONTINUE, :, return, "CONTINUE", ;, case, VAR, :, return, "VAR", ;, case, WITH, :, return]
[;, case, CONTINUE, :, return, "CONTINUE", ;, case, VAR, :, return, "VAR", ;, case, WITH, :, return, "WITH", ;, case]
[:, return, "CONTINUE", ;, case, VAR, :, return, "VAR", ;, case, WITH, :, return, "WITH", ;, case, CATCH, :, return]
[;, case, VAR, :, return, "VAR", ;, case, WITH, :, return, "WITH", ;, case, CATCH, :, return, "CATCH", ;, case]
[:, return, "VAR", ;, case, WITH, :, return, "WITH", ;, case, CATCH, :, return, "CATCH", ;, case, EMPTY, :, return]
[;, case, WITH, :, return, "WITH", ;, case, CATCH, :, return, "CATCH", ;, case, EMPTY, :, return, "EMPTY", ;, case]
[:, return, "WITH", ;, case, CATCH, :, return, "CATCH", ;, case, EMPTY, :, return, "EMPTY", ;, case, BLOCK, :, return]
[;, case, CATCH, :, return, "CATCH", ;, case, EMPTY, :, return, "EMPTY", ;, case, BLOCK, :, return, "BLOCK", ;, case]
[:, return, "CATCH", ;, case, EMPTY, :, return, "EMPTY", ;, case, BLOCK, :, return, "BLOCK", ;, case, LABEL, :, return]
[;, case, EMPTY, :, return, "EMPTY", ;, case, BLOCK, :, return, "BLOCK", ;, case, LABEL, :, return, "LABEL", ;, case]
[:, return, "EMPTY", ;, case, BLOCK, :, return, "BLOCK", ;, case, LABEL, :, return, "LABEL", ;, case, EXPR_RESULT, :, return]
[;, case, BLOCK, :, return, "BLOCK", ;, case, LABEL, :, return, "LABEL", ;, case, EXPR_RESULT, :, return, "EXPR_RESULT", ;, case]
[:, return, "BLOCK", ;, case, LABEL, :, return, "LABEL", ;, case, EXPR_RESULT, :, return, "EXPR_RESULT", ;, case, SCRIPT, :, return]
[;, case, LABEL, :, return, "LABEL", ;, case, EXPR_RESULT, :, return, "EXPR_RESULT", ;, case, SCRIPT, :, return, "SCRIPT", ;, case]
[:, return, "LABEL", ;, case, EXPR_RESULT, :, return, "EXPR_RESULT", ;, case, SCRIPT, :, return, "SCRIPT", ;, case, GETTER_DEF, :, return]
[;, case, EXPR_RESULT, :, return, "EXPR_RESULT", ;, case, SCRIPT, :, return, "SCRIPT", ;, case, GETTER_DEF, :, return, "GETTER_DEF", ;, case]
[:, return, "EXPR_RESULT", ;, case, SCRIPT, :, return, "SCRIPT", ;, case, GETTER_DEF, :, return, "GETTER_DEF", ;, case, SETTER_DEF, :, return]
[;, case, SCRIPT, :, return, "SCRIPT", ;, case, GETTER_DEF, :, return, "GETTER_DEF", ;, case, SETTER_DEF, :, return, "SETTER_DEF", ;, case]
[:, return, "SCRIPT", ;, case, GETTER_DEF, :, return, "GETTER_DEF", ;, case, SETTER_DEF, :, return, "SETTER_DEF", ;, case, CONST, :, return]
[;, case, GETTER_DEF, :, return, "GETTER_DEF", ;, case, SETTER_DEF, :, return, "SETTER_DEF", ;, case, CONST, :, return, "CONST", ;, case]
[:, return, "GETTER_DEF", ;, case, SETTER_DEF, :, return, "SETTER_DEF", ;, case, CONST, :, return, "CONST", ;, case, DEBUGGER, :, return]
[;, case, SETTER_DEF, :, return, "SETTER_DEF", ;, case, CONST, :, return, "CONST", ;, case, DEBUGGER, :, return, "DEBUGGER", ;, case]
[:, return, "SETTER_DEF", ;, case, CONST, :, return, "CONST", ;, case, DEBUGGER, :, return, "DEBUGGER", ;, case, CAST, :, return]
[;, case, CONST, :, return, "CONST", ;, case, DEBUGGER, :, return, "DEBUGGER", ;, case, CAST, :, return, "CAST", ;, case]
[:, return, "CONST", ;, case, DEBUGGER, :, return, "DEBUGGER", ;, case, CAST, :, return, "CAST", ;, case, ANNOTATION, :, return]
[;, case, DEBUGGER, :, return, "DEBUGGER", ;, case, CAST, :, return, "CAST", ;, case, ANNOTATION, :, return, "ANNOTATION", ;, case]
[:, return, "DEBUGGER", ;, case, CAST, :, return, "CAST", ;, case, ANNOTATION, :, return, "ANNOTATION", ;, case, PIPE, :, return]
[;, case, CAST, :, return, "CAST", ;, case, ANNOTATION, :, return, "ANNOTATION", ;, case, PIPE, :, return, "PIPE", ;, case]
[:, return, "CAST", ;, case, ANNOTATION, :, return, "ANNOTATION", ;, case, PIPE, :, return, "PIPE", ;, case, STAR, :, return]
[;, case, ANNOTATION, :, return, "ANNOTATION", ;, case, PIPE, :, return, "PIPE", ;, case, STAR, :, return, "STAR", ;, case]
[:, return, "ANNOTATION", ;, case, PIPE, :, return, "PIPE", ;, case, STAR, :, return, "STAR", ;, case, EOC, :, return]
[;, case, PIPE, :, return, "PIPE", ;, case, STAR, :, return, "STAR", ;, case, EOC, :, return, "EOC", ;, case]
[:, return, "PIPE", ;, case, STAR, :, return, "STAR", ;, case, EOC, :, return, "EOC", ;, case, QMARK, :, return]
[;, case, STAR, :, return, "STAR", ;, case, EOC, :, return, "EOC", ;, case, QMARK, :, return, "QMARK", ;, case]
[:, return, "STAR", ;, case, EOC, :, return, "EOC", ;, case, QMARK, :, return, "QMARK", ;, case, ELLIPSIS, :, return]
[;, case, EOC, :, return, "EOC", ;, case, QMARK, :, return, "QMARK", ;, case, ELLIPSIS, :, return, "ELLIPSIS", ;, case]
[:, return, "EOC", ;, case, QMARK, :, return, "QMARK", ;, case, ELLIPSIS, :, return, "ELLIPSIS", ;, case, BANG, :, return]
[;, case, QMARK, :, return, "QMARK", ;, case, ELLIPSIS, :, return, "ELLIPSIS", ;, case, BANG, :, return, "BANG", ;, case]
[:, return, "QMARK", ;, case, ELLIPSIS, :, return, "ELLIPSIS", ;, case, BANG, :, return, "BANG", ;, case, VOID, :, return]
[;, case, ELLIPSIS, :, return, "ELLIPSIS", ;, case, BANG, :, return, "BANG", ;, case, VOID, :, return, "VOID", ;, case]
[:, return, "ELLIPSIS", ;, case, BANG, :, return, "BANG", ;, case, VOID, :, return, "VOID", ;, case, EQUALS, :, return]
[;, case, BANG, :, return, "BANG", ;, case, VOID, :, return, "VOID", ;, case, EQUALS, :, return, "EQUALS", ;, case]
[:, return, "BANG", ;, case, VOID, :, return, "VOID", ;, case, EQUALS, :, return, "EQUALS", ;, case, LB, :, return]
[;, case, VOID, :, return, "VOID", ;, case, EQUALS, :, return, "EQUALS", ;, case, LB, :, return, "LB", ;, case]
[:, return, "VOID", ;, case, EQUALS, :, return, "EQUALS", ;, case, LB, :, return, "LB", ;, case, LC, :, return]
[;, case, EQUALS, :, return, "EQUALS", ;, case, LB, :, return, "LB", ;, case, LC, :, return, "LC", ;, case]
[:, return, "EQUALS", ;, case, LB, :, return, "LB", ;, case, LC, :, return, "LC", ;, case, COLON, :, return]
[;, case, LB, :, return, "LB", ;, case, LC, :, return, "LC", ;, case, COLON, :, return, "COLON", ;, }]
[:, return, "LB", ;, case, LC, :, return, "LC", ;, case, COLON, :, return, "COLON", ;, }, throw, new, IllegalStateException]
[;, case, LC, :, return, "LC", ;, case, COLON, :, return, "COLON", ;, }, throw, new, IllegalStateException, (, String, .]
[:, return, "LC", ;, case, COLON, :, return, "COLON", ;, }, throw, new, IllegalStateException, (, String, ., valueOf, (, token]
[;, case, COLON, :, return, "COLON", ;, }, throw, new, IllegalStateException, (, String, ., valueOf, (, token, ), ), ;]
[:, return, "COLON", ;, }, throw, new, IllegalStateException, (, String, ., valueOf, (, token, ), ), ;, }, }]
[;, }, throw, new, IllegalStateException, (, String, ., valueOf, (, token, ), ), ;, }, }]
[;, }, }]
[), ;, }, }]
[., valueOf, (, token, ), ), ;, }, }]
[), ), ;, }, }]
