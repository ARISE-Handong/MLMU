[io, ., Serializable, ;, public, class, LongNeedle, extends, MeterNeedle, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[., Serializable, ;, public, class, LongNeedle, extends, MeterNeedle, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[Serializable, {, private, static, final, long, serialVersionUID, =, -, 4319985779783688159L, ;, public, LongNeedle, (, ), {, super, (, ), ;]
[private, static, final, long, serialVersionUID, =, -, 4319985779783688159L, ;, public, LongNeedle, (, ), {, super, (, ), ;, setRotateY, (]
[protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, GeneralPath, shape1, =]
[plotArea, ,, Point2D, rotate, ,, double, angle, ), {, GeneralPath, shape1, =, new, GeneralPath, (, ), ;, GeneralPath, shape2, =]
[{, GeneralPath, shape1, =, new, GeneralPath, (, ), ;, GeneralPath, shape2, =, new, GeneralPath, (, ), ;, GeneralPath, shape3, =]
[;, GeneralPath, shape2, =, new, GeneralPath, (, ), ;, GeneralPath, shape3, =, new, GeneralPath, (, ), ;, float, minX, =]
[=, new, GeneralPath, (, ), ;, GeneralPath, shape3, =, new, GeneralPath, (, ), ;, float, minX, =, (, float, )]
[=, new, GeneralPath, (, ), ;, GeneralPath, shape3, =, new, GeneralPath, (, ), ;, float, minX, =, (, float, )]
[new, GeneralPath, (, ), ;, float, minX, =, (, float, ), plotArea, ., getMinX, (, ), ;, float, minY, =]
[), ;, float, minX, =, (, float, ), plotArea, ., getMinX, (, ), ;, float, minY, =, (, float, )]
[), ;, float, minX, =, (, float, ), plotArea, ., getMinX, (, ), ;, float, minY, =, (, float, )]
[., getMinX, (, ), ;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxX, =]
[), ;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxX, =, (, float, )]
[), ;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxX, =, (, float, )]
[., getMinY, (, ), ;, float, maxX, =, (, float, ), plotArea, ., getMaxX, (, ), ;, float, maxY, =]
[), ;, float, maxX, =, (, float, ), plotArea, ., getMaxX, (, ), ;, float, maxY, =, (, float, )]
[), ;, float, maxX, =, (, float, ), plotArea, ., getMaxX, (, ), ;, float, maxY, =, (, float, )]
[., getMaxX, (, ), ;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =]
[), ;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, )]
[;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (]
[;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (]
[maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (, minX, +]
[=, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (, minX, +, (]
[=, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (, minX, +, (]
[=, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (, minX, +, (]
[getMaxY, (, ), ;, float, midX, =, (, float, ), (, minX, +, (, plotArea, ., getWidth, (, ), *]
[(, float, ), (, minX, +, (, plotArea, ., getWidth, (, ), *, 0.5, ), ), ;, float, midY, =]
[(, minX, +, (, plotArea, ., getWidth, (, ), *, 0.5, ), ), ;, float, midY, =, (, float, )]
[minX, +, (, plotArea, ., getWidth, (, ), *, 0.5, ), ), ;, float, midY, =, (, float, ), (]
[minX, +, (, plotArea, ., getWidth, (, ), *, 0.5, ), ), ;, float, midY, =, (, float, ), (]
[(, plotArea, ., getWidth, (, ), *, 0.5, ), ), ;, float, midY, =, (, float, ), (, minY, +]
[plotArea, ., getWidth, (, ), *, 0.5, ), ), ;, float, midY, =, (, float, ), (, minY, +, (]
[plotArea, ., getWidth, (, ), *, 0.5, ), ), ;, float, midY, =, (, float, ), (, minY, +, (]
[plotArea, ., getWidth, (, ), *, 0.5, ), ), ;, float, midY, =, (, float, ), (, minY, +, (]
[0.5, ), ), ;, float, midY, =, (, float, ), (, minY, +, (, plotArea, ., getHeight, (, ), *]
[(, float, ), (, minY, +, (, plotArea, ., getHeight, (, ), *, 0.8, ), ), ;, float, y, =]
[(, float, ), (, minY, +, (, plotArea, ., getHeight, (, ), *, 0.8, ), ), ;, float, y, =]
[), (, minY, +, (, plotArea, ., getHeight, (, ), *, 0.8, ), ), ;, float, y, =, maxY, -]
[(, minY, +, (, plotArea, ., getHeight, (, ), *, 0.8, ), ), ;, float, y, =, maxY, -, (]
[(, minY, +, (, plotArea, ., getHeight, (, ), *, 0.8, ), ), ;, float, y, =, maxY, -, (]
[+, (, plotArea, ., getHeight, (, ), *, 0.8, ), ), ;, float, y, =, maxY, -, (, 2, *]
[(, plotArea, ., getHeight, (, ), *, 0.8, ), ), ;, float, y, =, maxY, -, (, 2, *, (]
[(, plotArea, ., getHeight, (, ), *, 0.8, ), ), ;, float, y, =, maxY, -, (, 2, *, (]
[., getHeight, (, ), *, 0.8, ), ), ;, float, y, =, maxY, -, (, 2, *, (, maxY, -]
[), ), ;, float, y, =, maxY, -, (, 2, *, (, maxY, -, midY, ), ), ;, if, (]
[), ), ;, float, y, =, maxY, -, (, 2, *, (, maxY, -, midY, ), ), ;, if, (]
[;, float, y, =, maxY, -, (, 2, *, (, maxY, -, midY, ), ), ;, if, (, y, <]
[=, maxY, -, (, 2, *, (, maxY, -, midY, ), ), ;, if, (, y, <, minY, ), {]
[-, (, 2, *, (, maxY, -, midY, ), ), ;, if, (, y, <, minY, ), {, y, =]
[*, (, maxY, -, midY, ), ), ;, if, (, y, <, minY, ), {, y, =, minY, ;, }]
[*, (, maxY, -, midY, ), ), ;, if, (, y, <, minY, ), {, y, =, minY, ;, }]
[midY, ), ), ;, if, (, y, <, minY, ), {, y, =, minY, ;, }, shape1, ., moveTo, (]
[), ;, if, (, y, <, minY, ), {, y, =, minY, ;, }, shape1, ., moveTo, (, minX, ,]
[(, y, <, minY, ), {, y, =, minY, ;, }, shape1, ., moveTo, (, minX, ,, midY, ), ;]
[(, y, <, minY, ), {, y, =, minY, ;, }, shape1, ., moveTo, (, minX, ,, midY, ), ;]
[), {, y, =, minY, ;, }, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (]
[y, =, minY, ;, }, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,]
[;, }, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;]
[;, }, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;]
[moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1, ., lineTo, (]
[minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1, ., lineTo, (, midX, ,]
[), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1, ., lineTo, (, midX, ,, y, ), ;]
[), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1, ., lineTo, (, midX, ,, y, ), ;]
[midX, ,, minY, ), ;, shape1, ., lineTo, (, midX, ,, y, ), ;, shape1, ., closePath, (, ), ;]
[midX, ,, minY, ), ;, shape1, ., lineTo, (, midX, ,, y, ), ;, shape1, ., closePath, (, ), ;]
[;, shape1, ., lineTo, (, midX, ,, y, ), ;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (]
[., lineTo, (, midX, ,, y, ), ;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (, maxX, ,]
[midX, ,, y, ), ;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (, maxX, ,, midY, ), ;]
[midX, ,, y, ), ;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (, maxX, ,, midY, ), ;]
[;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (, maxX, ,, midY, ), ;, shape2, ., lineTo, (]
[., closePath, (, ), ;, shape2, ., moveTo, (, maxX, ,, midY, ), ;, shape2, ., lineTo, (, midX, ,]
[), ;, shape2, ., moveTo, (, maxX, ,, midY, ), ;, shape2, ., lineTo, (, midX, ,, minY, ), ;]
[), ;, shape2, ., moveTo, (, maxX, ,, midY, ), ;, shape2, ., lineTo, (, midX, ,, minY, ), ;]
[moveTo, (, maxX, ,, midY, ), ;, shape2, ., lineTo, (, midX, ,, minY, ), ;, shape2, ., lineTo, (]
[maxX, ,, midY, ), ;, shape2, ., lineTo, (, midX, ,, minY, ), ;, shape2, ., lineTo, (, midX, ,]
[), ;, shape2, ., lineTo, (, midX, ,, minY, ), ;, shape2, ., lineTo, (, midX, ,, y, ), ;]
[), ;, shape2, ., lineTo, (, midX, ,, minY, ), ;, shape2, ., lineTo, (, midX, ,, y, ), ;]
[midX, ,, minY, ), ;, shape2, ., lineTo, (, midX, ,, y, ), ;, shape2, ., closePath, (, ), ;]
[midX, ,, minY, ), ;, shape2, ., lineTo, (, midX, ,, y, ), ;, shape2, ., closePath, (, ), ;]
[;, shape2, ., lineTo, (, midX, ,, y, ), ;, shape2, ., closePath, (, ), ;, shape3, ., moveTo, (]
[., lineTo, (, midX, ,, y, ), ;, shape2, ., closePath, (, ), ;, shape3, ., moveTo, (, minX, ,]
[midX, ,, y, ), ;, shape2, ., closePath, (, ), ;, shape3, ., moveTo, (, minX, ,, midY, ), ;]
[midX, ,, y, ), ;, shape2, ., closePath, (, ), ;, shape3, ., moveTo, (, minX, ,, midY, ), ;]
[;, shape2, ., closePath, (, ), ;, shape3, ., moveTo, (, minX, ,, midY, ), ;, shape3, ., lineTo, (]
[., closePath, (, ), ;, shape3, ., moveTo, (, minX, ,, midY, ), ;, shape3, ., lineTo, (, midX, ,]
[), ;, shape3, ., moveTo, (, minX, ,, midY, ), ;, shape3, ., lineTo, (, midX, ,, maxY, ), ;]
[), ;, shape3, ., moveTo, (, minX, ,, midY, ), ;, shape3, ., lineTo, (, midX, ,, maxY, ), ;]
[moveTo, (, minX, ,, midY, ), ;, shape3, ., lineTo, (, midX, ,, maxY, ), ;, shape3, ., lineTo, (]
[minX, ,, midY, ), ;, shape3, ., lineTo, (, midX, ,, maxY, ), ;, shape3, ., lineTo, (, maxX, ,]
[), ;, shape3, ., lineTo, (, midX, ,, maxY, ), ;, shape3, ., lineTo, (, maxX, ,, midY, ), ;]
[), ;, shape3, ., lineTo, (, midX, ,, maxY, ), ;, shape3, ., lineTo, (, maxX, ,, midY, ), ;]
[lineTo, (, midX, ,, maxY, ), ;, shape3, ., lineTo, (, maxX, ,, midY, ), ;, shape3, ., lineTo, (]
[midX, ,, maxY, ), ;, shape3, ., lineTo, (, maxX, ,, midY, ), ;, shape3, ., lineTo, (, midX, ,]
[), ;, shape3, ., lineTo, (, maxX, ,, midY, ), ;, shape3, ., lineTo, (, midX, ,, y, ), ;]
[), ;, shape3, ., lineTo, (, maxX, ,, midY, ), ;, shape3, ., lineTo, (, midX, ,, y, ), ;]
[), ;, shape3, ., lineTo, (, midX, ,, y, ), ;, shape3, ., closePath, (, ), ;, Shape, s1, =]
[(, midX, ,, y, ), ;, shape3, ., closePath, (, ), ;, Shape, s1, =, shape1, ;, Shape, s2, =]
[;, shape3, ., closePath, (, ), ;, Shape, s1, =, shape1, ;, Shape, s2, =, shape2, ;, Shape, s3, =]
[(, ), ;, Shape, s1, =, shape1, ;, Shape, s2, =, shape2, ;, Shape, s3, =, shape3, ;, if, (]
[(, ), ;, Shape, s1, =, shape1, ;, Shape, s2, =, shape2, ;, Shape, s3, =, shape3, ;, if, (]
[), ;, Shape, s1, =, shape1, ;, Shape, s2, =, shape2, ;, Shape, s3, =, shape3, ;, if, (, (]
[), ;, Shape, s1, =, shape1, ;, Shape, s2, =, shape2, ;, Shape, s3, =, shape3, ;, if, (, (]
[Shape, s1, =, shape1, ;, Shape, s2, =, shape2, ;, Shape, s3, =, shape3, ;, if, (, (, rotate, !=]
[shape1, ;, Shape, s2, =, shape2, ;, Shape, s3, =, shape3, ;, if, (, (, rotate, !=, null, ), &&]
[;, Shape, s2, =, shape2, ;, Shape, s3, =, shape3, ;, if, (, (, rotate, !=, null, ), &&, (]
[;, Shape, s2, =, shape2, ;, Shape, s3, =, shape3, ;, if, (, (, rotate, !=, null, ), &&, (]
[s2, =, shape2, ;, Shape, s3, =, shape3, ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=]
[Shape, s3, =, shape3, ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {]
[Shape, s3, =, shape3, ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {]
[(, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (]
[rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,]
[rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,]
[angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,]
[angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,]
[(, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;]
[., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, s1, =]
[., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, s1, =]
[,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, s1, =, shape1, ., createTransformedShape, (]
[getX, (, ), ,, rotate, ., getY, (, ), ), ;, s1, =, shape1, ., createTransformedShape, (, transform, ), ;]
[), ,, rotate, ., getY, (, ), ), ;, s1, =, shape1, ., createTransformedShape, (, transform, ), ;, s2, =]
[), ,, rotate, ., getY, (, ), ), ;, s1, =, shape1, ., createTransformedShape, (, transform, ), ;, s2, =]
[getY, (, ), ), ;, s1, =, shape1, ., createTransformedShape, (, transform, ), ;, s2, =, shape2, ., createTransformedShape, (]
[), ;, s1, =, shape1, ., createTransformedShape, (, transform, ), ;, s2, =, shape2, ., createTransformedShape, (, transform, ), ;]
[s1, =, shape1, ., createTransformedShape, (, transform, ), ;, s2, =, shape2, ., createTransformedShape, (, transform, ), ;, s3, =]
[s1, =, shape1, ., createTransformedShape, (, transform, ), ;, s2, =, shape2, ., createTransformedShape, (, transform, ), ;, s3, =]
[createTransformedShape, (, transform, ), ;, s2, =, shape2, ., createTransformedShape, (, transform, ), ;, s3, =, shape3, ., createTransformedShape, (]
[=, shape2, ., createTransformedShape, (, transform, ), ;, s3, =, shape3, ., createTransformedShape, (, transform, ), ;, }, if, (]
[=, shape2, ., createTransformedShape, (, transform, ), ;, s3, =, shape3, ., createTransformedShape, (, transform, ), ;, }, if, (]
[(, transform, ), ;, s3, =, shape3, ., createTransformedShape, (, transform, ), ;, }, if, (, getHighlightPaint, (, ), !=]
[;, s3, =, shape3, ., createTransformedShape, (, transform, ), ;, }, if, (, getHighlightPaint, (, ), !=, null, ), {]
[;, s3, =, shape3, ., createTransformedShape, (, transform, ), ;, }, if, (, getHighlightPaint, (, ), !=, null, ), {]
[., createTransformedShape, (, transform, ), ;, }, if, (, getHighlightPaint, (, ), !=, null, ), {, g2, ., setPaint, (]
[;, }, if, (, getHighlightPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;]
[;, }, if, (, getHighlightPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;]
[getHighlightPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;, g2, ., fill, (]
[{, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;, g2, ., fill, (, s3, ), ;, }, if, (]
[{, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;, g2, ., fill, (, s3, ), ;, }, if, (]
[(, getHighlightPaint, (, ), ), ;, g2, ., fill, (, s3, ), ;, }, if, (, getFillPaint, (, ), !=]
[), ), ;, g2, ., fill, (, s3, ), ;, }, if, (, getFillPaint, (, ), !=, null, ), {]
[), ), ;, g2, ., fill, (, s3, ), ;, }, if, (, getFillPaint, (, ), !=, null, ), {]
[., fill, (, s3, ), ;, }, if, (, getFillPaint, (, ), !=, null, ), {, g2, ., setPaint, (]
[;, }, if, (, getFillPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getFillPaint, (, ), ), ;]
[;, }, if, (, getFillPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getFillPaint, (, ), ), ;]
[getFillPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getFillPaint, (, ), ), ;, g2, ., fill, (]
[!=, null, ), {, g2, ., setPaint, (, getFillPaint, (, ), ), ;, g2, ., fill, (, s1, ), ;]
[!=, null, ), {, g2, ., setPaint, (, getFillPaint, (, ), ), ;, g2, ., fill, (, s1, ), ;]
[g2, ., setPaint, (, getFillPaint, (, ), ), ;, g2, ., fill, (, s1, ), ;, g2, ., fill, (]
[), ), ;, g2, ., fill, (, s1, ), ;, g2, ., fill, (, s2, ), ;, }, if, (]
[), ), ;, g2, ., fill, (, s1, ), ;, g2, ., fill, (, s2, ), ;, }, if, (]
[., fill, (, s1, ), ;, g2, ., fill, (, s2, ), ;, }, if, (, getOutlinePaint, (, ), !=]
[s1, ), ;, g2, ., fill, (, s2, ), ;, }, if, (, getOutlinePaint, (, ), !=, null, ), {]
[s1, ), ;, g2, ., fill, (, s2, ), ;, }, if, (, getOutlinePaint, (, ), !=, null, ), {]
[., fill, (, s2, ), ;, }, if, (, getOutlinePaint, (, ), !=, null, ), {, g2, ., setStroke, (]
[;, }, if, (, getOutlinePaint, (, ), !=, null, ), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;]
[;, }, if, (, getOutlinePaint, (, ), !=, null, ), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;]
[getOutlinePaint, (, ), !=, null, ), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;, g2, ., setPaint, (]
[), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;]
[), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;]
[setStroke, (, getOutlineStroke, (, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;, g2, ., draw, (]
[(, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;, g2, ., draw, (, s1, ), ;]
[(, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;, g2, ., draw, (, s1, ), ;]
[g2, ., setPaint, (, getOutlinePaint, (, ), ), ;, g2, ., draw, (, s1, ), ;, g2, ., draw, (]
[(, getOutlinePaint, (, ), ), ;, g2, ., draw, (, s1, ), ;, g2, ., draw, (, s2, ), ;]
[(, getOutlinePaint, (, ), ), ;, g2, ., draw, (, s1, ), ;, g2, ., draw, (, s2, ), ;]
[), ;, g2, ., draw, (, s1, ), ;, g2, ., draw, (, s2, ), ;, g2, ., draw, (]
[;, g2, ., draw, (, s3, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[;, g2, ., draw, (, s3, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., draw, (, s3, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, LongNeedle, ), ), {, return]
[{, return, true, ;, }, if, (, !, (, obj, instanceof, LongNeedle, ), ), {, return, false, ;, }, return]
[{, return, true, ;, }, if, (, !, (, obj, instanceof, LongNeedle, ), ), {, return, false, ;, }, return]
[}, if, (, !, (, obj, instanceof, LongNeedle, ), ), {, return, false, ;, }, return, super, ., equals, (]
[return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, return]
[return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, return]
[(, ), {, return, super, ., hashCode, (, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[(, ), {, return, super, ., hashCode, (, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
