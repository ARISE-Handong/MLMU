[MutableDouble, extends, Number, implements, Comparable, <, MutableDouble, >, ,, Mutable, <, Number, >, {, private, static, final, long, serialVersionUID, =]
[(, ), {, super, (, ), ;, }, public, MutableDouble, (, final, double, value, ), {, super, (, ), ;]
[(, ), {, super, (, ), ;, }, public, MutableDouble, (, final, double, value, ), {, super, (, ), ;]
[(, ), ;, }, public, MutableDouble, (, final, double, value, ), {, super, (, ), ;, this, ., value, =]
[;, this, ., value, =, value, ;, }, public, MutableDouble, (, final, Number, value, ), {, super, (, ), ;]
[;, this, ., value, =, value, ;, }, public, MutableDouble, (, final, Number, value, ), {, super, (, ), ;]
[=, value, ;, }, public, MutableDouble, (, final, Number, value, ), {, super, (, ), ;, this, ., value, =]
[=, value, ;, }, public, MutableDouble, (, final, Number, value, ), {, super, (, ), ;, this, ., value, =]
[., doubleValue, (, ), ;, }, public, MutableDouble, (, final, String, value, ), throws, NumberFormatException, {, super, (, ), ;]
[., doubleValue, (, ), ;, }, public, MutableDouble, (, final, String, value, ), throws, NumberFormatException, {, super, (, ), ;]
[;, }, public, MutableDouble, (, final, String, value, ), throws, NumberFormatException, {, super, (, ), ;, this, ., value, =]
[;, }, public, MutableDouble, (, final, String, value, ), throws, NumberFormatException, {, super, (, ), ;, this, ., value, =]
[(, final, String, value, ), throws, NumberFormatException, {, super, (, ), ;, this, ., value, =, Double, ., parseDouble, (]
[., value, =, Double, ., parseDouble, (, value, ), ;, }, @, Override, public, Double, getValue, (, ), {, return]
[., value, =, Double, ., parseDouble, (, value, ), ;, }, @, Override, public, Double, getValue, (, ), {, return]
[., parseDouble, (, value, ), ;, }, @, Override, public, Double, getValue, (, ), {, return, Double, ., valueOf, (]
[., parseDouble, (, value, ), ;, }, @, Override, public, Double, getValue, (, ), {, return, Double, ., valueOf, (]
[return, Double, ., valueOf, (, this, ., value, ), ;, }, public, void, setValue, (, final, double, value, ), {]
[return, Double, ., valueOf, (, this, ., value, ), ;, }, public, void, setValue, (, final, double, value, ), {]
[(, this, ., value, ), ;, }, public, void, setValue, (, final, double, value, ), {, this, ., value, =]
[), {, this, ., value, =, value, ;, }, @, Override, public, void, setValue, (, final, Number, value, ), {]
[), {, this, ., value, =, value, ;, }, @, Override, public, void, setValue, (, final, Number, value, ), {]
[value, =, value, ;, }, @, Override, public, void, setValue, (, final, Number, value, ), {, this, ., value, =]
[value, =, value, ;, }, @, Override, public, void, setValue, (, final, Number, value, ), {, this, ., value, =]
[), {, this, ., value, =, value, ., doubleValue, (, ), ;, }, public, boolean, isNaN, (, ), {, return]
[), {, this, ., value, =, value, ., doubleValue, (, ), ;, }, public, boolean, isNaN, (, ), {, return]
[value, =, value, ., doubleValue, (, ), ;, }, public, boolean, isNaN, (, ), {, return, Double, ., isNaN, (]
[isNaN, (, ), {, return, Double, ., isNaN, (, value, ), ;, }, public, boolean, isInfinite, (, ), {, return]
[isNaN, (, ), {, return, Double, ., isNaN, (, value, ), ;, }, public, boolean, isInfinite, (, ), {, return]
[return, Double, ., isNaN, (, value, ), ;, }, public, boolean, isInfinite, (, ), {, return, Double, ., isInfinite, (]
[boolean, isInfinite, (, ), {, return, Double, ., isInfinite, (, value, ), ;, }, public, void, increment, (, ), {]
[boolean, isInfinite, (, ), {, return, Double, ., isInfinite, (, value, ), ;, }, public, void, increment, (, ), {]
[value, ), ;, }, public, void, increment, (, ), {, value, ++, ;, }, public, void, decrement, (, ), {]
[value, ), ;, }, public, void, increment, (, ), {, value, ++, ;, }, public, void, decrement, (, ), {]
[}, public, void, decrement, (, ), {, value, --, ;, }, public, void, add, (, final, double, operand, ), {]
[}, public, void, decrement, (, ), {, value, --, ;, }, public, void, add, (, final, double, operand, ), {]
[(, ), {, value, --, ;, }, public, void, add, (, final, double, operand, ), {, this, ., value, +=]
[double, operand, ), {, this, ., value, +=, operand, ;, }, public, void, add, (, final, Number, operand, ), {]
[double, operand, ), {, this, ., value, +=, operand, ;, }, public, void, add, (, final, Number, operand, ), {]
[this, ., value, +=, operand, ;, }, public, void, add, (, final, Number, operand, ), {, this, ., value, +=]
[this, ., value, +=, operand, ;, }, public, void, add, (, final, Number, operand, ), {, this, ., value, +=]
[this, ., value, +=, operand, ., doubleValue, (, ), ;, }, public, void, subtract, (, final, double, operand, ), {]
[this, ., value, +=, operand, ., doubleValue, (, ), ;, }, public, void, subtract, (, final, double, operand, ), {]
[operand, ., doubleValue, (, ), ;, }, public, void, subtract, (, final, double, operand, ), {, this, ., value, -=]
[double, operand, ), {, this, ., value, -=, operand, ;, }, public, void, subtract, (, final, Number, operand, ), {]
[double, operand, ), {, this, ., value, -=, operand, ;, }, public, void, subtract, (, final, Number, operand, ), {]
[this, ., value, -=, operand, ;, }, public, void, subtract, (, final, Number, operand, ), {, this, ., value, -=]
[this, ., value, -=, operand, ;, }, public, void, subtract, (, final, Number, operand, ), {, this, ., value, -=]
[this, ., value, -=, operand, ., doubleValue, (, ), ;, }, @, Override, public, int, intValue, (, ), {, return]
[-=, operand, ., doubleValue, (, ), ;, }, @, Override, public, int, intValue, (, ), {, return, (, int, )]
[intValue, (, ), {, return, (, int, ), value, ;, }, @, Override, public, long, longValue, (, ), {, return]
[{, return, (, int, ), value, ;, }, @, Override, public, long, longValue, (, ), {, return, (, long, )]
[longValue, (, ), {, return, (, long, ), value, ;, }, @, Override, public, float, floatValue, (, ), {, return]
[{, return, (, long, ), value, ;, }, @, Override, public, float, floatValue, (, ), {, return, (, float, )]
[floatValue, (, ), {, return, (, float, ), value, ;, }, @, Override, public, double, doubleValue, (, ), {, return]
[}, @, Override, public, double, doubleValue, (, ), {, return, value, ;, }, public, Double, toDouble, (, ), {, return]
[}, @, Override, public, double, doubleValue, (, ), {, return, value, ;, }, public, Double, toDouble, (, ), {, return]
[double, doubleValue, (, ), {, return, value, ;, }, public, Double, toDouble, (, ), {, return, Double, ., valueOf, (]
[valueOf, (, doubleValue, (, ), ), ;, }, @, Override, public, boolean, equals, (, final, Object, obj, ), {, return]
[valueOf, (, doubleValue, (, ), ), ;, }, @, Override, public, boolean, equals, (, final, Object, obj, ), {, return]
[valueOf, (, doubleValue, (, ), ), ;, }, @, Override, public, boolean, equals, (, final, Object, obj, ), {, return]
[), ), ;, }, @, Override, public, boolean, equals, (, final, Object, obj, ), {, return, obj, instanceof, MutableDouble, &&]
[), ), ;, }, @, Override, public, boolean, equals, (, final, Object, obj, ), {, return, obj, instanceof, MutableDouble, &&]
[), ), ;, }, @, Override, public, boolean, equals, (, final, Object, obj, ), {, return, obj, instanceof, MutableDouble, &&]
[@, Override, public, boolean, equals, (, final, Object, obj, ), {, return, obj, instanceof, MutableDouble, &&, Double, ., doubleToLongBits, (]
[@, Override, public, boolean, equals, (, final, Object, obj, ), {, return, obj, instanceof, MutableDouble, &&, Double, ., doubleToLongBits, (]
[Override, public, boolean, equals, (, final, Object, obj, ), {, return, obj, instanceof, MutableDouble, &&, Double, ., doubleToLongBits, (, (]
[equals, (, final, Object, obj, ), {, return, obj, instanceof, MutableDouble, &&, Double, ., doubleToLongBits, (, (, (, MutableDouble, )]
[{, return, obj, instanceof, MutableDouble, &&, Double, ., doubleToLongBits, (, (, (, MutableDouble, ), obj, ), ., value, ), ==]
[{, return, obj, instanceof, MutableDouble, &&, Double, ., doubleToLongBits, (, (, (, MutableDouble, ), obj, ), ., value, ), ==]
[MutableDouble, &&, Double, ., doubleToLongBits, (, (, (, MutableDouble, ), obj, ), ., value, ), ==, Double, ., doubleToLongBits, (]
[Double, ., doubleToLongBits, (, value, ), ;, }, @, Override, public, int, hashCode, (, ), {, final, long, bits, =]
[Double, ., doubleToLongBits, (, value, ), ;, }, @, Override, public, int, hashCode, (, ), {, final, long, bits, =]
[value, ), ;, }, @, Override, public, int, hashCode, (, ), {, final, long, bits, =, Double, ., doubleToLongBits, (]
[@, Override, public, int, hashCode, (, ), {, final, long, bits, =, Double, ., doubleToLongBits, (, value, ), ;, return]
[int, hashCode, (, ), {, final, long, bits, =, Double, ., doubleToLongBits, (, value, ), ;, return, (, int, )]
[hashCode, (, ), {, final, long, bits, =, Double, ., doubleToLongBits, (, value, ), ;, return, (, int, ), (]
[hashCode, (, ), {, final, long, bits, =, Double, ., doubleToLongBits, (, value, ), ;, return, (, int, ), (]
[), {, final, long, bits, =, Double, ., doubleToLongBits, (, value, ), ;, return, (, int, ), (, bits, ^]
[), {, final, long, bits, =, Double, ., doubleToLongBits, (, value, ), ;, return, (, int, ), (, bits, ^]
[bits, =, Double, ., doubleToLongBits, (, value, ), ;, return, (, int, ), (, bits, ^, bits, >, >, >]
[>, 32, ), ;, }, @, Override, public, int, compareTo, (, final, MutableDouble, other, ), {, final, double, anotherVal, =]
[>, 32, ), ;, }, @, Override, public, int, compareTo, (, final, MutableDouble, other, ), {, final, double, anotherVal, =]
[@, Override, public, int, compareTo, (, final, MutableDouble, other, ), {, final, double, anotherVal, =, other, ., value, ;, return]
[@, Override, public, int, compareTo, (, final, MutableDouble, other, ), {, final, double, anotherVal, =, other, ., value, ;, return]
[compareTo, (, final, MutableDouble, other, ), {, final, double, anotherVal, =, other, ., value, ;, return, Double, ., compare, (]
[final, MutableDouble, other, ), {, final, double, anotherVal, =, other, ., value, ;, return, Double, ., compare, (, value, ,]
[return, Double, ., compare, (, value, ,, anotherVal, ), ;, }, @, Override, public, String, toString, (, ), {, return]
[return, Double, ., compare, (, value, ,, anotherVal, ), ;, }, @, Override, public, String, toString, (, ), {, return]
[(, value, ,, anotherVal, ), ;, }, @, Override, public, String, toString, (, ), {, return, String, ., valueOf, (]
