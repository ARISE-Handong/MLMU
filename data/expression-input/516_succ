[=, new, ArrayList, <, Vector2D, >, (, ), ;, }, public, void, addPoint, (, double, px, ,, double, py, )]
[;, }, public, void, addPoint, (, double, px, ,, double, py, ), {, points, ., add, (, new, Vector2D, (]
[;, }, public, double, getRadius, (, Vector2D, center, ), {, double, r, =, 0, ;, for, (, Vector2D, point, :]
[., add, (, new, Vector2D, (, px, ,, py, ), ), ;, }, public, double, getRadius, (, Vector2D, center, )]
[), ;, }, public, double, getRadius, (, Vector2D, center, ), {, double, r, =, 0, ;, for, (, Vector2D, point]
[,, py, ), ), ;, }, public, double, getRadius, (, Vector2D, center, ), {, double, r, =, 0, ;, for]
[), ), ;, }, public, double, getRadius, (, Vector2D, center, ), {, double, r, =, 0, ;, for, (, Vector2D]
[;, for, (, Vector2D, point, :, points, ), {, r, +=, point, ., distance, (, center, ), ;, }, return]
[), {, r, +=, point, ., distance, (, center, ), ;, }, return, r, /, points, ., size, (, )]
[+=, point, ., distance, (, center, ), ;, }, return, r, /, points, ., size, (, ), ;, }, private]
[;, }, return, r, /, points, ., size, (, ), ;, }, private, DerivativeStructure, distance, (, Vector2D, point, ,, DerivativeStructure]
[., distance, (, center, ), ;, }, return, r, /, points, ., size, (, ), ;, }, private, DerivativeStructure, distance]
[), ;, }, return, r, /, points, ., size, (, ), ;, }, private, DerivativeStructure, distance, (, Vector2D, point, ,]
[;, }, private, DerivativeStructure, distance, (, Vector2D, point, ,, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, dx, =, cx]
[/, points, ., size, (, ), ;, }, private, DerivativeStructure, distance, (, Vector2D, point, ,, DerivativeStructure, cx, ,, DerivativeStructure, cy]
[;, }, private, DerivativeStructure, distance, (, Vector2D, point, ,, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, dx, =, cx]
[., size, (, ), ;, }, private, DerivativeStructure, distance, (, Vector2D, point, ,, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {]
[;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY, (, ), ), ;, return, dx, ., multiply, (]
[., subtract, (, point, ., getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY]
[), ;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY, (, ), ), ;, return, dx, ., multiply]
[., getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY, (, ), ), ;]
[;, return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., sqrt]
[., subtract, (, point, ., getY, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (]
[), ;, return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), .]
[., getY, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (]
[;, }, public, DerivativeStructure, getRadius, (, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, r, =, cx, ., getField, (]
[., sqrt, (, ), ;, }, public, DerivativeStructure, getRadius, (, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, r, =]
[., add, (, dy, ., multiply, (, dy, ), ), ., sqrt, (, ), ;, }, public, DerivativeStructure, getRadius, (]
[., multiply, (, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., sqrt, (, ), ;]
[), ., add, (, dy, ., multiply, (, dy, ), ), ., sqrt, (, ), ;, }, public, DerivativeStructure, getRadius]
[), ., sqrt, (, ), ;, }, public, DerivativeStructure, getRadius, (, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, r]
[., multiply, (, dy, ), ), ., sqrt, (, ), ;, }, public, DerivativeStructure, getRadius, (, DerivativeStructure, cx, ,, DerivativeStructure]
[), ), ., sqrt, (, ), ;, }, public, DerivativeStructure, getRadius, (, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure]
[;, for, (, Vector2D, point, :, points, ), {, r, =, r, ., add, (, distance, (, point, ,, cx]
[., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, r, =, r, ., add, (, distance]
[., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, r, =, r]
[), {, r, =, r, ., add, (, distance, (, point, ,, cx, ,, cy, ), ), ;, }, return]
[=, r, ., add, (, distance, (, point, ,, cx, ,, cy, ), ), ;, }, return, r, ., divide]
[;, }, return, r, ., divide, (, points, ., size, (, ), ), ;, }, public, double, value, (, double]
[., add, (, distance, (, point, ,, cx, ,, cy, ), ), ;, }, return, r, ., divide, (, points]
[), ;, }, return, r, ., divide, (, points, ., size, (, ), ), ;, }, public, double, value, (]
[,, cx, ,, cy, ), ), ;, }, return, r, ., divide, (, points, ., size, (, ), ), ;]
[,, cy, ), ), ;, }, return, r, ., divide, (, points, ., size, (, ), ), ;, }, public]
[), ), ;, }, return, r, ., divide, (, points, ., size, (, ), ), ;, }, public, double, value]
[;, }, public, double, value, (, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (, variables, []
[., divide, (, points, ., size, (, ), ), ;, }, public, double, value, (, double, [, ], variables, )]
[), ;, }, public, double, value, (, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (, variables]
[., size, (, ), ), ;, }, public, double, value, (, double, [, ], variables, ), {, Vector2D, center, =]
[;, double, radius, =, getRadius, (, center, ), ;, double, sum, =, 0, ;, for, (, Vector2D, point, :, points]
[,, variables, [, 1, ], ), ;, double, radius, =, getRadius, (, center, ), ;, double, sum, =, 0, ;]
[[, 0, ], ,, variables, [, 1, ], ), ;, double, radius, =, getRadius, (, center, ), ;, double, sum]
[], ,, variables, [, 1, ], ), ;, double, radius, =, getRadius, (, center, ), ;, double, sum, =, 0]
[), ;, double, radius, =, getRadius, (, center, ), ;, double, sum, =, 0, ;, for, (, Vector2D, point, :]
[[, 1, ], ), ;, double, radius, =, getRadius, (, center, ), ;, double, sum, =, 0, ;, for, (]
[], ), ;, double, radius, =, getRadius, (, center, ), ;, double, sum, =, 0, ;, for, (, Vector2D, point]
[;, double, sum, =, 0, ;, for, (, Vector2D, point, :, points, ), {, double, di, =, point, ., distance]
[), ;, double, sum, =, 0, ;, for, (, Vector2D, point, :, points, ), {, double, di, =, point, .]
[;, for, (, Vector2D, point, :, points, ), {, double, di, =, point, ., distance, (, center, ), -, radius]
[), {, double, di, =, point, ., distance, (, center, ), -, radius, ;, sum, +=, di, *, di, ;]
[;, sum, +=, di, *, di, ;, }, return, sum, ;, }, public, DerivativeStructure, value, (, DerivativeStructure, [, ], variables]
[-, radius, ;, sum, +=, di, *, di, ;, }, return, sum, ;, }, public, DerivativeStructure, value, (, DerivativeStructure, []
[., distance, (, center, ), -, radius, ;, sum, +=, di, *, di, ;, }, return, sum, ;, }, public]
[), -, radius, ;, sum, +=, di, *, di, ;, }, return, sum, ;, }, public, DerivativeStructure, value, (, DerivativeStructure]
[;, sum, +=, di, *, di, ;, }, return, sum, ;, }, public, DerivativeStructure, value, (, DerivativeStructure, [, ], variables]
[+=, di, *, di, ;, }, return, sum, ;, }, public, DerivativeStructure, value, (, DerivativeStructure, [, ], variables, ), {]
[;, }, return, sum, ;, }, public, DerivativeStructure, value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius]
[*, di, ;, }, return, sum, ;, }, public, DerivativeStructure, value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius]
[;, }, return, sum, ;, }, public, DerivativeStructure, value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius]
[;, }, public, DerivativeStructure, value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius, (, variables, [, 0]
[;, DerivativeStructure, sum, =, variables, [, 0, ], ., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D]
[,, variables, [, 1, ], ), ;, DerivativeStructure, sum, =, variables, [, 0, ], ., getField, (, ), ., getZero]
[[, 0, ], ,, variables, [, 1, ], ), ;, DerivativeStructure, sum, =, variables, [, 0, ], ., getField, (]
[], ,, variables, [, 1, ], ), ;, DerivativeStructure, sum, =, variables, [, 0, ], ., getField, (, ), .]
[), ;, DerivativeStructure, sum, =, variables, [, 0, ], ., getField, (, ), ., getZero, (, ), ;, for, (]
[[, 1, ], ), ;, DerivativeStructure, sum, =, variables, [, 0, ], ., getField, (, ), ., getZero, (, )]
[], ), ;, DerivativeStructure, sum, =, variables, [, 0, ], ., getField, (, ), ., getZero, (, ), ;, for]
[;, for, (, Vector2D, point, :, points, ), {, DerivativeStructure, di, =, distance, (, point, ,, variables, [, 0, ]]
[., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, DerivativeStructure, di, =, distance, (, point, ,]
[., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, DerivativeStructure, di, =]
[[, 0, ], ., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {]
[], ., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, DerivativeStructure, di]
[), {, DerivativeStructure, di, =, distance, (, point, ,, variables, [, 0, ], ,, variables, [, 1, ], ), .]
[;, sum, =, sum, ., add, (, di, ., multiply, (, di, ), ), ;, }, return, sum, ;, }]
[., subtract, (, radius, ), ;, sum, =, sum, ., add, (, di, ., multiply, (, di, ), ), ;]
[,, variables, [, 0, ], ,, variables, [, 1, ], ), ., subtract, (, radius, ), ;, sum, =, sum]
[,, variables, [, 1, ], ), ., subtract, (, radius, ), ;, sum, =, sum, ., add, (, di, .]
[[, 0, ], ,, variables, [, 1, ], ), ., subtract, (, radius, ), ;, sum, =, sum, ., add]
[], ,, variables, [, 1, ], ), ., subtract, (, radius, ), ;, sum, =, sum, ., add, (, di]
[), ., subtract, (, radius, ), ;, sum, =, sum, ., add, (, di, ., multiply, (, di, ), )]
[[, 1, ], ), ., subtract, (, radius, ), ;, sum, =, sum, ., add, (, di, ., multiply, (]
[], ), ., subtract, (, radius, ), ;, sum, =, sum, ., add, (, di, ., multiply, (, di, )]
[), ;, sum, =, sum, ., add, (, di, ., multiply, (, di, ), ), ;, }, return, sum, ;]
[=, sum, ., add, (, di, ., multiply, (, di, ), ), ;, }, return, sum, ;, }, }]
[;, }, return, sum, ;, }, }]
[., add, (, di, ., multiply, (, di, ), ), ;, }, return, sum, ;, }, }]
[), ;, }, return, sum, ;, }, }]
[., multiply, (, di, ), ), ;, }, return, sum, ;, }, }]
[), ), ;, }, return, sum, ;, }, }]
[;, }, }]
