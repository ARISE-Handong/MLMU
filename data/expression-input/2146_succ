[;, private, static, final, String, CANNOT_STORE_S_S_VALUES_IN_S_BITS, =, "Cannot store %s %s values in %s bits", ;, private, static, final, String, S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE, =, "%s does not seem to be an Enum type", ;, private, static, final]
[;, private, static, final, String, S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE, =, "%s does not seem to be an Enum type", ;, private, static, final, String, ENUM_CLASS_MUST_BE_DEFINED, =, "EnumClass must be defined.", ;, public, EnumUtils, (]
[;, private, static, final, String, ENUM_CLASS_MUST_BE_DEFINED, =, "EnumClass must be defined.", ;, public, EnumUtils, (, ), {, }, public, static, <, E, extends]
[;, public, EnumUtils, (, ), {, }, public, static, <, E, extends, Enum, <, E, >, >, Map, <, String]
[;, for, (, final, E, e, :, enumClass, ., getEnumConstants, (, ), ), {, map, ., put, (, e, .]
[), {, map, ., put, (, e, ., name, (, ), ,, e, ), ;, }, return, map, ;, }]
[., getEnumConstants, (, ), ), {, map, ., put, (, e, ., name, (, ), ,, e, ), ;, }]
[;, }, return, map, ;, }, public, static, <, E, extends, Enum, <, E, >, >, List, <, E, >]
[., put, (, e, ., name, (, ), ,, e, ), ;, }, return, map, ;, }, public, static, <]
[,, e, ), ;, }, return, map, ;, }, public, static, <, E, extends, Enum, <, E, >, >, List]
[., name, (, ), ,, e, ), ;, }, return, map, ;, }, public, static, <, E, extends, Enum, <]
[), ;, }, return, map, ;, }, public, static, <, E, extends, Enum, <, E, >, >, List, <, E]
[;, }, public, static, <, E, extends, Enum, <, E, >, >, List, <, E, >, getEnumList, (, final, Class]
[;, }, public, static, <, E, extends, Enum, <, E, >, >, boolean, isValidEnum, (, final, Class, <, E, >]
[), ;, }, public, static, <, E, extends, Enum, <, E, >, >, boolean, isValidEnum, (, final, Class, <, E]
[., asList, (, enumClass, ., getEnumConstants, (, ), ), ), ;, }, public, static, <, E, extends, Enum, <, E]
[), ), ;, }, public, static, <, E, extends, Enum, <, E, >, >, boolean, isValidEnum, (, final, Class, <]
[., getEnumConstants, (, ), ), ), ;, }, public, static, <, E, extends, Enum, <, E, >, >, boolean, isValidEnum]
[), {, return, false, ;, }, try, {, Enum, ., valueOf, (, enumClass, ,, enumName, ), ;, return, true, ;]
[==, null, ), {, return, false, ;, }, try, {, Enum, ., valueOf, (, enumClass, ,, enumName, ), ;, return]
[), {, return, false, ;, }, try, {, Enum, ., valueOf, (, enumClass, ,, enumName, ), ;, return, true, ;]
[;, }, try, {, Enum, ., valueOf, (, enumClass, ,, enumName, ), ;, return, true, ;, }, catch, (, final]
[;, return, true, ;, }, catch, (, final, IllegalArgumentException, ex, ), {, return, false, ;, }, }, public, static, <]
[., valueOf, (, enumClass, ,, enumName, ), ;, return, true, ;, }, catch, (, final, IllegalArgumentException, ex, ), {, return]
[,, enumName, ), ;, return, true, ;, }, catch, (, final, IllegalArgumentException, ex, ), {, return, false, ;, }, }]
[), ;, return, true, ;, }, catch, (, final, IllegalArgumentException, ex, ), {, return, false, ;, }, }, public, static]
[;, }, catch, (, final, IllegalArgumentException, ex, ), {, return, false, ;, }, }, public, static, <, E, extends, Enum]
[;, }, }, public, static, <, E, extends, Enum, <, E, >, >, E, getEnum, (, final, Class, <, E]
[), {, return, null, ;, }, try, {, return, Enum, ., valueOf, (, enumClass, ,, enumName, ), ;, }, catch]
[==, null, ), {, return, null, ;, }, try, {, return, Enum, ., valueOf, (, enumClass, ,, enumName, ), ;]
[), {, return, null, ;, }, try, {, return, Enum, ., valueOf, (, enumClass, ,, enumName, ), ;, }, catch]
[;, }, try, {, return, Enum, ., valueOf, (, enumClass, ,, enumName, ), ;, }, catch, (, final, IllegalArgumentException, ex]
[;, }, catch, (, final, IllegalArgumentException, ex, ), {, return, null, ;, }, }, public, static, <, E, extends, Enum]
[., valueOf, (, enumClass, ,, enumName, ), ;, }, catch, (, final, IllegalArgumentException, ex, ), {, return, null, ;, }]
[,, enumName, ), ;, }, catch, (, final, IllegalArgumentException, ex, ), {, return, null, ;, }, }, public, static, <]
[), ;, }, catch, (, final, IllegalArgumentException, ex, ), {, return, null, ;, }, }, public, static, <, E, extends]
[;, }, }, public, static, <, E, extends, Enum, <, E, >, >, long, generateBitVector, (, final, Class, <, E]
[;, Validate, ., notNull, (, values, ), ;, long, total, =, 0, ;, for, (, final, E, constant, :, values]
[), ;, Validate, ., notNull, (, values, ), ;, long, total, =, 0, ;, for, (, final, E, constant, :]
[;, long, total, =, 0, ;, for, (, final, E, constant, :, values, ), {, Validate, ., isTrue, (, constant]
[., notNull, (, values, ), ;, long, total, =, 0, ;, for, (, final, E, constant, :, values, ), {]
[), ;, long, total, =, 0, ;, for, (, final, E, constant, :, values, ), {, Validate, ., isTrue, (]
[;, for, (, final, E, constant, :, values, ), {, Validate, ., isTrue, (, constant, !=, null, ,, NULL_ELEMENTS_NOT_PERMITTED, )]
[), {, Validate, ., isTrue, (, constant, !=, null, ,, NULL_ELEMENTS_NOT_PERMITTED, ), ;, total, |=, 1, <<, constant, ., ordinal]
[;, total, |=, 1, <<, constant, ., ordinal, (, ), ;, }, return, total, ;, }, public, static, <, E]
[., isTrue, (, constant, !=, null, ,, NULL_ELEMENTS_NOT_PERMITTED, ), ;, total, |=, 1, <<, constant, ., ordinal, (, ), ;]
[,, NULL_ELEMENTS_NOT_PERMITTED, ), ;, total, |=, 1, <<, constant, ., ordinal, (, ), ;, }, return, total, ;, }, public]
[!=, null, ,, NULL_ELEMENTS_NOT_PERMITTED, ), ;, total, |=, 1, <<, constant, ., ordinal, (, ), ;, }, return, total, ;]
[,, NULL_ELEMENTS_NOT_PERMITTED, ), ;, total, |=, 1, <<, constant, ., ordinal, (, ), ;, }, return, total, ;, }, public]
[), ;, total, |=, 1, <<, constant, ., ordinal, (, ), ;, }, return, total, ;, }, public, static, <]
[|=, 1, <<, constant, ., ordinal, (, ), ;, }, return, total, ;, }, public, static, <, E, extends, Enum]
[;, }, return, total, ;, }, public, static, <, E, extends, Enum, <, E, >, >, long, [, ], generateBitVectors]
[<<, constant, ., ordinal, (, ), ;, }, return, total, ;, }, public, static, <, E, extends, Enum, <, E]
[;, }, return, total, ;, }, public, static, <, E, extends, Enum, <, E, >, >, long, [, ], generateBitVectors]
[., ordinal, (, ), ;, }, return, total, ;, }, public, static, <, E, extends, Enum, <, E, >, >]
[;, }, public, static, <, E, extends, Enum, <, E, >, >, long, [, ], generateBitVectors, (, final, Class, <]
[;, Validate, ., notNull, (, values, ), ;, final, EnumSet, <, E, >, condensed, =, EnumSet, ., noneOf, (, enumClass]
[), ;, Validate, ., notNull, (, values, ), ;, final, EnumSet, <, E, >, condensed, =, EnumSet, ., noneOf, (]
[;, final, EnumSet, <, E, >, condensed, =, EnumSet, ., noneOf, (, enumClass, ), ;, for, (, final, E, constant]
[., notNull, (, values, ), ;, final, EnumSet, <, E, >, condensed, =, EnumSet, ., noneOf, (, enumClass, ), ;]
[), ;, final, EnumSet, <, E, >, condensed, =, EnumSet, ., noneOf, (, enumClass, ), ;, for, (, final, E]
[;, for, (, final, E, constant, :, values, ), {, Validate, ., isTrue, (, constant, !=, null, ,, NULL_ELEMENTS_NOT_PERMITTED, )]
[., noneOf, (, enumClass, ), ;, for, (, final, E, constant, :, values, ), {, Validate, ., isTrue, (, constant]
[), ;, for, (, final, E, constant, :, values, ), {, Validate, ., isTrue, (, constant, !=, null, ,, NULL_ELEMENTS_NOT_PERMITTED]
[), {, Validate, ., isTrue, (, constant, !=, null, ,, NULL_ELEMENTS_NOT_PERMITTED, ), ;, condensed, ., add, (, constant, ), ;]
[;, condensed, ., add, (, constant, ), ;, }, final, long, [, ], result, =, new, long, [, (, enumClass]
[., isTrue, (, constant, !=, null, ,, NULL_ELEMENTS_NOT_PERMITTED, ), ;, condensed, ., add, (, constant, ), ;, }, final, long]
[,, NULL_ELEMENTS_NOT_PERMITTED, ), ;, condensed, ., add, (, constant, ), ;, }, final, long, [, ], result, =, new, long]
[!=, null, ,, NULL_ELEMENTS_NOT_PERMITTED, ), ;, condensed, ., add, (, constant, ), ;, }, final, long, [, ], result, =]
[,, NULL_ELEMENTS_NOT_PERMITTED, ), ;, condensed, ., add, (, constant, ), ;, }, final, long, [, ], result, =, new, long]
[), ;, condensed, ., add, (, constant, ), ;, }, final, long, [, ], result, =, new, long, [, (]
[;, }, final, long, [, ], result, =, new, long, [, (, enumClass, ., getEnumConstants, (, ), ., length, -]
[., add, (, constant, ), ;, }, final, long, [, ], result, =, new, long, [, (, enumClass, ., getEnumConstants]
[), ;, }, final, long, [, ], result, =, new, long, [, (, enumClass, ., getEnumConstants, (, ), ., length]
[;, for, (, final, E, value, :, condensed, ), {, result, [, value, ., ordinal, (, ), /, Long, .]
[], ;, for, (, final, E, value, :, condensed, ), {, result, [, value, ., ordinal, (, ), /, Long]
[+, 1, ], ;, for, (, final, E, value, :, condensed, ), {, result, [, value, ., ordinal, (, )]
[/, Long, ., SIZE, +, 1, ], ;, for, (, final, E, value, :, condensed, ), {, result, [, value]
[), /, Long, ., SIZE, +, 1, ], ;, for, (, final, E, value, :, condensed, ), {, result, []
[-, 1, ), /, Long, ., SIZE, +, 1, ], ;, for, (, final, E, value, :, condensed, ), {]
[., length, -, 1, ), /, Long, ., SIZE, +, 1, ], ;, for, (, final, E, value, :, condensed]
[., getEnumConstants, (, ), ., length, -, 1, ), /, Long, ., SIZE, +, 1, ], ;, for, (, final]
[), /, Long, ., SIZE, +, 1, ], ;, for, (, final, E, value, :, condensed, ), {, result, []
[+, 1, ], ;, for, (, final, E, value, :, condensed, ), {, result, [, value, ., ordinal, (, )]
[., SIZE, +, 1, ], ;, for, (, final, E, value, :, condensed, ), {, result, [, value, ., ordinal]
[], ;, for, (, final, E, value, :, condensed, ), {, result, [, value, ., ordinal, (, ), /, Long]
[), {, result, [, value, ., ordinal, (, ), /, Long, ., SIZE, ], |=, 1, <<, (, value, .]
[|=, 1, <<, (, value, ., ordinal, (, ), %, Long, ., SIZE, ), ;, }, ArrayUtils, ., reverse, (]
[[, value, ., ordinal, (, ), /, Long, ., SIZE, ], |=, 1, <<, (, value, ., ordinal, (, )]
[], |=, 1, <<, (, value, ., ordinal, (, ), %, Long, ., SIZE, ), ;, }, ArrayUtils, ., reverse]
[/, Long, ., SIZE, ], |=, 1, <<, (, value, ., ordinal, (, ), %, Long, ., SIZE, ), ;]
[., ordinal, (, ), /, Long, ., SIZE, ], |=, 1, <<, (, value, ., ordinal, (, ), %, Long]
[], |=, 1, <<, (, value, ., ordinal, (, ), %, Long, ., SIZE, ), ;, }, ArrayUtils, ., reverse]
[., SIZE, ], |=, 1, <<, (, value, ., ordinal, (, ), %, Long, ., SIZE, ), ;, }, ArrayUtils]
[;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result, ;, }, public, static, <, E, extends, Enum, <]
[<<, (, value, ., ordinal, (, ), %, Long, ., SIZE, ), ;, }, ArrayUtils, ., reverse, (, result, )]
[;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result, ;, }, public, static, <, E, extends, Enum, <]
[), ;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result, ;, }, public, static, <, E, extends, Enum]
[%, Long, ., SIZE, ), ;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result, ;, }, public, static]
[., ordinal, (, ), %, Long, ., SIZE, ), ;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result]
[), ;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result, ;, }, public, static, <, E, extends, Enum]
[., SIZE, ), ;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result, ;, }, public, static, <, E]
[;, return, result, ;, }, public, static, <, E, extends, Enum, <, E, >, >, long, generateBitVector, (, final, Class]
[., reverse, (, result, ), ;, return, result, ;, }, public, static, <, E, extends, Enum, <, E, >, >]
[), ;, return, result, ;, }, public, static, <, E, extends, Enum, <, E, >, >, long, generateBitVector, (, final]
[;, }, public, static, <, E, extends, Enum, <, E, >, >, long, generateBitVector, (, final, Class, <, E, >]
[;, return, generateBitVector, (, enumClass, ,, Arrays, ., <, E, >, asList, (, values, ), ), ;, }, public, static]
[., noNullElements, (, values, ), ;, return, generateBitVector, (, enumClass, ,, Arrays, ., <, E, >, asList, (, values, )]
[), ;, return, generateBitVector, (, enumClass, ,, Arrays, ., <, E, >, asList, (, values, ), ), ;, }, public]
[;, }, public, static, <, E, extends, Enum, <, E, >, >, long, [, ], generateBitVectors, (, final, Class, <]
[,, Arrays, ., <, E, >, asList, (, values, ), ), ;, }, public, static, <, E, extends, Enum, <]
[), ;, }, public, static, <, E, extends, Enum, <, E, >, >, long, [, ], generateBitVectors, (, final, Class]
[., <, E, >, asList, (, values, ), ), ;, }, public, static, <, E, extends, Enum, <, E, >]
[), ), ;, }, public, static, <, E, extends, Enum, <, E, >, >, long, [, ], generateBitVectors, (, final]
[;, Validate, ., noNullElements, (, values, ), ;, final, EnumSet, <, E, >, condensed, =, EnumSet, ., noneOf, (, enumClass]
[), ;, Validate, ., noNullElements, (, values, ), ;, final, EnumSet, <, E, >, condensed, =, EnumSet, ., noneOf, (]
[;, final, EnumSet, <, E, >, condensed, =, EnumSet, ., noneOf, (, enumClass, ), ;, Collections, ., addAll, (, condensed]
[., noNullElements, (, values, ), ;, final, EnumSet, <, E, >, condensed, =, EnumSet, ., noneOf, (, enumClass, ), ;]
[), ;, final, EnumSet, <, E, >, condensed, =, EnumSet, ., noneOf, (, enumClass, ), ;, Collections, ., addAll, (]
[;, Collections, ., addAll, (, condensed, ,, values, ), ;, final, long, [, ], result, =, new, long, [, (]
[., noneOf, (, enumClass, ), ;, Collections, ., addAll, (, condensed, ,, values, ), ;, final, long, [, ], result]
[), ;, Collections, ., addAll, (, condensed, ,, values, ), ;, final, long, [, ], result, =, new, long, []
[;, final, long, [, ], result, =, new, long, [, (, enumClass, ., getEnumConstants, (, ), ., length, -, 1]
[., addAll, (, condensed, ,, values, ), ;, final, long, [, ], result, =, new, long, [, (, enumClass, .]
[,, values, ), ;, final, long, [, ], result, =, new, long, [, (, enumClass, ., getEnumConstants, (, ), .]
[), ;, final, long, [, ], result, =, new, long, [, (, enumClass, ., getEnumConstants, (, ), ., length, -]
[;, for, (, final, E, value, :, condensed, ), {, result, [, value, ., ordinal, (, ), /, Long, .]
[], ;, for, (, final, E, value, :, condensed, ), {, result, [, value, ., ordinal, (, ), /, Long]
[+, 1, ], ;, for, (, final, E, value, :, condensed, ), {, result, [, value, ., ordinal, (, )]
[/, Long, ., SIZE, +, 1, ], ;, for, (, final, E, value, :, condensed, ), {, result, [, value]
[), /, Long, ., SIZE, +, 1, ], ;, for, (, final, E, value, :, condensed, ), {, result, []
[-, 1, ), /, Long, ., SIZE, +, 1, ], ;, for, (, final, E, value, :, condensed, ), {]
[., length, -, 1, ), /, Long, ., SIZE, +, 1, ], ;, for, (, final, E, value, :, condensed]
[., getEnumConstants, (, ), ., length, -, 1, ), /, Long, ., SIZE, +, 1, ], ;, for, (, final]
[), /, Long, ., SIZE, +, 1, ], ;, for, (, final, E, value, :, condensed, ), {, result, []
[+, 1, ], ;, for, (, final, E, value, :, condensed, ), {, result, [, value, ., ordinal, (, )]
[., SIZE, +, 1, ], ;, for, (, final, E, value, :, condensed, ), {, result, [, value, ., ordinal]
[], ;, for, (, final, E, value, :, condensed, ), {, result, [, value, ., ordinal, (, ), /, Long]
[), {, result, [, value, ., ordinal, (, ), /, Long, ., SIZE, ], |=, 1, <<, (, value, .]
[|=, 1, <<, (, value, ., ordinal, (, ), %, Long, ., SIZE, ), ;, }, ArrayUtils, ., reverse, (]
[[, value, ., ordinal, (, ), /, Long, ., SIZE, ], |=, 1, <<, (, value, ., ordinal, (, )]
[], |=, 1, <<, (, value, ., ordinal, (, ), %, Long, ., SIZE, ), ;, }, ArrayUtils, ., reverse]
[/, Long, ., SIZE, ], |=, 1, <<, (, value, ., ordinal, (, ), %, Long, ., SIZE, ), ;]
[., ordinal, (, ), /, Long, ., SIZE, ], |=, 1, <<, (, value, ., ordinal, (, ), %, Long]
[], |=, 1, <<, (, value, ., ordinal, (, ), %, Long, ., SIZE, ), ;, }, ArrayUtils, ., reverse]
[., SIZE, ], |=, 1, <<, (, value, ., ordinal, (, ), %, Long, ., SIZE, ), ;, }, ArrayUtils]
[;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result, ;, }, public, static, <, E, extends, Enum, <]
[<<, (, value, ., ordinal, (, ), %, Long, ., SIZE, ), ;, }, ArrayUtils, ., reverse, (, result, )]
[;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result, ;, }, public, static, <, E, extends, Enum, <]
[), ;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result, ;, }, public, static, <, E, extends, Enum]
[%, Long, ., SIZE, ), ;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result, ;, }, public, static]
[., ordinal, (, ), %, Long, ., SIZE, ), ;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result]
[), ;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result, ;, }, public, static, <, E, extends, Enum]
[., SIZE, ), ;, }, ArrayUtils, ., reverse, (, result, ), ;, return, result, ;, }, public, static, <, E]
[;, return, result, ;, }, public, static, <, E, extends, Enum, <, E, >, >, EnumSet, <, E, >, processBitVector]
[., reverse, (, result, ), ;, return, result, ;, }, public, static, <, E, extends, Enum, <, E, >, >]
[), ;, return, result, ;, }, public, static, <, E, extends, Enum, <, E, >, >, EnumSet, <, E, >]
[;, }, public, static, <, E, extends, Enum, <, E, >, >, EnumSet, <, E, >, processBitVector, (, final, Class]
[;, return, processBitVectors, (, enumClass, ,, value, ), ;, }, public, static, <, E, extends, Enum, <, E, >, >]
[., getEnumConstants, (, ), ;, return, processBitVectors, (, enumClass, ,, value, ), ;, }, public, static, <, E, extends, Enum]
[), ., getEnumConstants, (, ), ;, return, processBitVectors, (, enumClass, ,, value, ), ;, }, public, static, <, E, extends]
[;, }, public, static, <, E, extends, Enum, <, E, >, >, EnumSet, <, E, >, processBitVectors, (, final, Class]
[,, value, ), ;, }, public, static, <, E, extends, Enum, <, E, >, >, EnumSet, <, E, >, processBitVectors]
[), ;, }, public, static, <, E, extends, Enum, <, E, >, >, EnumSet, <, E, >, processBitVectors, (, final]
[;, values, =, ArrayUtils, ., clone, (, Validate, ., notNull, (, values, ), ), ;, ArrayUtils, ., reverse, (, values]
[., noneOf, (, asEnum, (, enumClass, ), ), ;, values, =, ArrayUtils, ., clone, (, Validate, ., notNull, (, values]
[), ;, values, =, ArrayUtils, ., clone, (, Validate, ., notNull, (, values, ), ), ;, ArrayUtils, ., reverse, (]
[), ), ;, values, =, ArrayUtils, ., clone, (, Validate, ., notNull, (, values, ), ), ;, ArrayUtils, ., reverse]
[=, ArrayUtils, ., clone, (, Validate, ., notNull, (, values, ), ), ;, ArrayUtils, ., reverse, (, values, ), ;]
[;, ArrayUtils, ., reverse, (, values, ), ;, for, (, final, E, constant, :, enumClass, ., getEnumConstants, (, ), )]
[., clone, (, Validate, ., notNull, (, values, ), ), ;, ArrayUtils, ., reverse, (, values, ), ;, for, (]
[), ;, ArrayUtils, ., reverse, (, values, ), ;, for, (, final, E, constant, :, enumClass, ., getEnumConstants, (, )]
[., notNull, (, values, ), ), ;, ArrayUtils, ., reverse, (, values, ), ;, for, (, final, E, constant, :]
[), ), ;, ArrayUtils, ., reverse, (, values, ), ;, for, (, final, E, constant, :, enumClass, ., getEnumConstants, (]
[;, for, (, final, E, constant, :, enumClass, ., getEnumConstants, (, ), ), {, final, int, block, =, constant, .]
[., reverse, (, values, ), ;, for, (, final, E, constant, :, enumClass, ., getEnumConstants, (, ), ), {, final]
[), ;, for, (, final, E, constant, :, enumClass, ., getEnumConstants, (, ), ), {, final, int, block, =, constant]
[), {, final, int, block, =, constant, ., ordinal, (, ), /, Long, ., SIZE, ;, if, (, block, <]
[., getEnumConstants, (, ), ), {, final, int, block, =, constant, ., ordinal, (, ), /, Long, ., SIZE, ;]
[;, if, (, block, <, values, ., length, &&, (, values, [, block, ], &, 1, <<, (, constant, .]
[/, Long, ., SIZE, ;, if, (, block, <, values, ., length, &&, (, values, [, block, ], &, 1]
[., ordinal, (, ), /, Long, ., SIZE, ;, if, (, block, <, values, ., length, &&, (, values, []
[;, if, (, block, <, values, ., length, &&, (, values, [, block, ], &, 1, <<, (, constant, .]
[., SIZE, ;, if, (, block, <, values, ., length, &&, (, values, [, block, ], &, 1, <<, (]
[), {, results, ., add, (, constant, ), ;, }, }, return, results, ;, }, private, static, <, E, extends]
[&&, (, values, [, block, ], &, 1, <<, (, constant, ., ordinal, (, ), %, Long, ., SIZE, )]
[<, values, ., length, &&, (, values, [, block, ], &, 1, <<, (, constant, ., ordinal, (, ), %]
[&&, (, values, [, block, ], &, 1, <<, (, constant, ., ordinal, (, ), %, Long, ., SIZE, )]
[., length, &&, (, values, [, block, ], &, 1, <<, (, constant, ., ordinal, (, ), %, Long, .]
[), {, results, ., add, (, constant, ), ;, }, }, return, results, ;, }, private, static, <, E, extends]
[!=, 0, ), {, results, ., add, (, constant, ), ;, }, }, return, results, ;, }, private, static, <]
[), !=, 0, ), {, results, ., add, (, constant, ), ;, }, }, return, results, ;, }, private, static]
[&, 1, <<, (, constant, ., ordinal, (, ), %, Long, ., SIZE, ), ), !=, 0, ), {, results]
[[, block, ], &, 1, <<, (, constant, ., ordinal, (, ), %, Long, ., SIZE, ), ), !=, 0]
[], &, 1, <<, (, constant, ., ordinal, (, ), %, Long, ., SIZE, ), ), !=, 0, ), {]
[), !=, 0, ), {, results, ., add, (, constant, ), ;, }, }, return, results, ;, }, private, static]
[<<, (, constant, ., ordinal, (, ), %, Long, ., SIZE, ), ), !=, 0, ), {, results, ., add]
[), !=, 0, ), {, results, ., add, (, constant, ), ;, }, }, return, results, ;, }, private, static]
[), ), !=, 0, ), {, results, ., add, (, constant, ), ;, }, }, return, results, ;, }, private]
[%, Long, ., SIZE, ), ), !=, 0, ), {, results, ., add, (, constant, ), ;, }, }, return]
[., ordinal, (, ), %, Long, ., SIZE, ), ), !=, 0, ), {, results, ., add, (, constant, )]
[), ), !=, 0, ), {, results, ., add, (, constant, ), ;, }, }, return, results, ;, }, private]
[., SIZE, ), ), !=, 0, ), {, results, ., add, (, constant, ), ;, }, }, return, results, ;]
[), {, results, ., add, (, constant, ), ;, }, }, return, results, ;, }, private, static, <, E, extends]
[;, }, }, return, results, ;, }, private, static, <, E, extends, Enum, <, E, >, >, Class, <, E]
[., add, (, constant, ), ;, }, }, return, results, ;, }, private, static, <, E, extends, Enum, <, E]
[), ;, }, }, return, results, ;, }, private, static, <, E, extends, Enum, <, E, >, >, Class, <]
[;, }, private, static, <, E, extends, Enum, <, E, >, >, Class, <, E, >, checkBitVectorable, (, final, Class]
[;, Validate, ., isTrue, (, constants, ., length, <=, Long, ., SIZE, ,, CANNOT_STORE_S_S_VALUES_IN_S_BITS, ,, constants, ., length, ,, enumClass]
[., getEnumConstants, (, ), ;, Validate, ., isTrue, (, constants, ., length, <=, Long, ., SIZE, ,, CANNOT_STORE_S_S_VALUES_IN_S_BITS, ,, constants]
[), ., getEnumConstants, (, ), ;, Validate, ., isTrue, (, constants, ., length, <=, Long, ., SIZE, ,, CANNOT_STORE_S_S_VALUES_IN_S_BITS, ,]
[;, return, enumClass, ;, }, private, static, <, E, extends, Enum, <, E, >, >, Class, <, E, >, asEnum]
[., isTrue, (, constants, ., length, <=, Long, ., SIZE, ,, CANNOT_STORE_S_S_VALUES_IN_S_BITS, ,, constants, ., length, ,, enumClass, ., getSimpleName]
[,, CANNOT_STORE_S_S_VALUES_IN_S_BITS, ,, constants, ., length, ,, enumClass, ., getSimpleName, (, ), ,, Long, ., SIZE, ), ;, return, enumClass]
[<=, Long, ., SIZE, ,, CANNOT_STORE_S_S_VALUES_IN_S_BITS, ,, constants, ., length, ,, enumClass, ., getSimpleName, (, ), ,, Long, ., SIZE]
[., length, <=, Long, ., SIZE, ,, CANNOT_STORE_S_S_VALUES_IN_S_BITS, ,, constants, ., length, ,, enumClass, ., getSimpleName, (, ), ,, Long]
[,, CANNOT_STORE_S_S_VALUES_IN_S_BITS, ,, constants, ., length, ,, enumClass, ., getSimpleName, (, ), ,, Long, ., SIZE, ), ;, return, enumClass]
[., SIZE, ,, CANNOT_STORE_S_S_VALUES_IN_S_BITS, ,, constants, ., length, ,, enumClass, ., getSimpleName, (, ), ,, Long, ., SIZE, ), ;]
[,, constants, ., length, ,, enumClass, ., getSimpleName, (, ), ,, Long, ., SIZE, ), ;, return, enumClass, ;, }]
[,, enumClass, ., getSimpleName, (, ), ,, Long, ., SIZE, ), ;, return, enumClass, ;, }, private, static, <, E]
[., length, ,, enumClass, ., getSimpleName, (, ), ,, Long, ., SIZE, ), ;, return, enumClass, ;, }, private, static]
[,, Long, ., SIZE, ), ;, return, enumClass, ;, }, private, static, <, E, extends, Enum, <, E, >, >]
[., getSimpleName, (, ), ,, Long, ., SIZE, ), ;, return, enumClass, ;, }, private, static, <, E, extends, Enum]
[), ;, return, enumClass, ;, }, private, static, <, E, extends, Enum, <, E, >, >, Class, <, E, >]
[., SIZE, ), ;, return, enumClass, ;, }, private, static, <, E, extends, Enum, <, E, >, >, Class, <]
[;, }, private, static, <, E, extends, Enum, <, E, >, >, Class, <, E, >, asEnum, (, final, Class]
[;, Validate, ., isTrue, (, enumClass, ., isEnum, (, ), ,, S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE, ,, enumClass, ), ;, return, enumClass, ;, }]
[., notNull, (, enumClass, ,, ENUM_CLASS_MUST_BE_DEFINED, ), ;, Validate, ., isTrue, (, enumClass, ., isEnum, (, ), ,, S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE, ,]
[,, ENUM_CLASS_MUST_BE_DEFINED, ), ;, Validate, ., isTrue, (, enumClass, ., isEnum, (, ), ,, S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE, ,, enumClass, ), ;, return]
[), ;, Validate, ., isTrue, (, enumClass, ., isEnum, (, ), ,, S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE, ,, enumClass, ), ;, return, enumClass, ;]
[;, return, enumClass, ;, }, }]
[., isTrue, (, enumClass, ., isEnum, (, ), ,, S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE, ,, enumClass, ), ;, return, enumClass, ;, }, }]
[,, S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE, ,, enumClass, ), ;, return, enumClass, ;, }, }]
[., isEnum, (, ), ,, S_DOES_NOT_SEEM_TO_BE_AN_ENUM_TYPE, ,, enumClass, ), ;, return, enumClass, ;, }, }]
[,, enumClass, ), ;, return, enumClass, ;, }, }]
[), ;, return, enumClass, ;, }, }]
[;, }, }]
