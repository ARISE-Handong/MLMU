[;, private, transient, Shape, shape, ;, private, transient, Stroke, stroke, ;, private, transient, Paint, outlinePaint, ;, private, transient, Paint, fillPaint]
[;, private, transient, Shape, shape, ;, private, transient, Stroke, stroke, ;, private, transient, Paint, outlinePaint, ;, private, transient, Paint, fillPaint]
[,, new, BasicStroke, (, 1.0f, ), ,, Color, ., black, ), ;, }, public, XYShapeAnnotation, (, Shape, shape, ,, Stroke]
[,, Color, ., black, ), ;, }, public, XYShapeAnnotation, (, Shape, shape, ,, Stroke, stroke, ,, Paint, outlinePaint, ), {]
[), ,, Color, ., black, ), ;, }, public, XYShapeAnnotation, (, Shape, shape, ,, Stroke, stroke, ,, Paint, outlinePaint, )]
[), ;, }, public, XYShapeAnnotation, (, Shape, shape, ,, Stroke, stroke, ,, Paint, outlinePaint, ), {, this, (, shape, ,]
[., black, ), ;, }, public, XYShapeAnnotation, (, Shape, shape, ,, Stroke, stroke, ,, Paint, outlinePaint, ), {, this, (]
[,, stroke, ,, outlinePaint, ,, null, ), ;, }, public, XYShapeAnnotation, (, Shape, shape, ,, Stroke, stroke, ,, Paint, outlinePaint]
[,, outlinePaint, ,, null, ), ;, }, public, XYShapeAnnotation, (, Shape, shape, ,, Stroke, stroke, ,, Paint, outlinePaint, ,, Paint]
[,, null, ), ;, }, public, XYShapeAnnotation, (, Shape, shape, ,, Stroke, stroke, ,, Paint, outlinePaint, ,, Paint, fillPaint, )]
[), ;, }, public, XYShapeAnnotation, (, Shape, shape, ,, Stroke, stroke, ,, Paint, outlinePaint, ,, Paint, fillPaint, ), {, super]
[), {, throw, new, IllegalArgumentException, (, "Null 'shape' argument.", ), ;, }, this, ., shape, =, shape, ;, this, ., stroke, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'shape' argument.", ), ;, }, this, ., shape, =, shape, ;, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'shape' argument.", ), ;, }, this, ., shape, =, shape, ;, this, ., stroke, =]
[;, }, this, ., shape, =, shape, ;, this, ., stroke, =, stroke, ;, this, ., outlinePaint, =, outlinePaint, ;]
[), ;, }, this, ., shape, =, shape, ;, this, ., stroke, =, stroke, ;, this, ., outlinePaint, =, outlinePaint]
[=, shape, ;, this, ., stroke, =, stroke, ;, this, ., outlinePaint, =, outlinePaint, ;, this, ., fillPaint, =, fillPaint]
[., shape, =, shape, ;, this, ., stroke, =, stroke, ;, this, ., outlinePaint, =, outlinePaint, ;, this, ., fillPaint]
[;, this, ., stroke, =, stroke, ;, this, ., outlinePaint, =, outlinePaint, ;, this, ., fillPaint, =, fillPaint, ;, }]
[=, stroke, ;, this, ., outlinePaint, =, outlinePaint, ;, this, ., fillPaint, =, fillPaint, ;, }, public, void, draw, (]
[., stroke, =, stroke, ;, this, ., outlinePaint, =, outlinePaint, ;, this, ., fillPaint, =, fillPaint, ;, }, public, void]
[;, this, ., outlinePaint, =, outlinePaint, ;, this, ., fillPaint, =, fillPaint, ;, }, public, void, draw, (, Graphics2D, g2]
[=, outlinePaint, ;, this, ., fillPaint, =, fillPaint, ;, }, public, void, draw, (, Graphics2D, g2, ,, XYPlot, plot, ,]
[., outlinePaint, =, outlinePaint, ;, this, ., fillPaint, =, fillPaint, ;, }, public, void, draw, (, Graphics2D, g2, ,, XYPlot]
[;, this, ., fillPaint, =, fillPaint, ;, }, public, void, draw, (, Graphics2D, g2, ,, XYPlot, plot, ,, Rectangle2D, dataArea]
[=, fillPaint, ;, }, public, void, draw, (, Graphics2D, g2, ,, XYPlot, plot, ,, Rectangle2D, dataArea, ,, ValueAxis, domainAxis, ,]
[., fillPaint, =, fillPaint, ;, }, public, void, draw, (, Graphics2D, g2, ,, XYPlot, plot, ,, Rectangle2D, dataArea, ,, ValueAxis]
[;, }, public, void, draw, (, Graphics2D, g2, ,, XYPlot, plot, ,, Rectangle2D, dataArea, ,, ValueAxis, domainAxis, ,, ValueAxis, rangeAxis]
[;, RectangleEdge, domainEdge, =, Plot, ., resolveDomainAxisLocation, (, plot, ., getDomainAxisLocation, (, ), ,, orientation, ), ;, RectangleEdge, rangeEdge, =]
[., getOrientation, (, ), ;, RectangleEdge, domainEdge, =, Plot, ., resolveDomainAxisLocation, (, plot, ., getDomainAxisLocation, (, ), ,, orientation, )]
[;, RectangleEdge, rangeEdge, =, Plot, ., resolveRangeAxisLocation, (, plot, ., getRangeAxisLocation, (, ), ,, orientation, ), ;, Rectangle2D, bounds, =]
[., resolveDomainAxisLocation, (, plot, ., getDomainAxisLocation, (, ), ,, orientation, ), ;, RectangleEdge, rangeEdge, =, Plot, ., resolveRangeAxisLocation, (, plot]
[,, orientation, ), ;, RectangleEdge, rangeEdge, =, Plot, ., resolveRangeAxisLocation, (, plot, ., getRangeAxisLocation, (, ), ,, orientation, ), ;]
[., getDomainAxisLocation, (, ), ,, orientation, ), ;, RectangleEdge, rangeEdge, =, Plot, ., resolveRangeAxisLocation, (, plot, ., getRangeAxisLocation, (, )]
[), ;, RectangleEdge, rangeEdge, =, Plot, ., resolveRangeAxisLocation, (, plot, ., getRangeAxisLocation, (, ), ,, orientation, ), ;, Rectangle2D, bounds]
[;, Rectangle2D, bounds, =, this, ., shape, ., getBounds2D, (, ), ;, double, x0, =, bounds, ., getMinX, (, )]
[., resolveRangeAxisLocation, (, plot, ., getRangeAxisLocation, (, ), ,, orientation, ), ;, Rectangle2D, bounds, =, this, ., shape, ., getBounds2D]
[,, orientation, ), ;, Rectangle2D, bounds, =, this, ., shape, ., getBounds2D, (, ), ;, double, x0, =, bounds, .]
[., getRangeAxisLocation, (, ), ,, orientation, ), ;, Rectangle2D, bounds, =, this, ., shape, ., getBounds2D, (, ), ;, double]
[), ;, Rectangle2D, bounds, =, this, ., shape, ., getBounds2D, (, ), ;, double, x0, =, bounds, ., getMinX, (]
[;, double, x0, =, bounds, ., getMinX, (, ), ;, double, x1, =, bounds, ., getMaxX, (, ), ;, double]
[., getBounds2D, (, ), ;, double, x0, =, bounds, ., getMinX, (, ), ;, double, x1, =, bounds, ., getMaxX]
[., shape, ., getBounds2D, (, ), ;, double, x0, =, bounds, ., getMinX, (, ), ;, double, x1, =, bounds]
[;, double, x1, =, bounds, ., getMaxX, (, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (, x0, ,, dataArea]
[., getMinX, (, ), ;, double, x1, =, bounds, ., getMaxX, (, ), ;, double, xx0, =, domainAxis, ., valueToJava2D]
[;, double, xx0, =, domainAxis, ., valueToJava2D, (, x0, ,, dataArea, ,, domainEdge, ), ;, double, xx1, =, domainAxis, .]
[., getMaxX, (, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (, x0, ,, dataArea, ,, domainEdge, ), ;, double]
[;, double, xx1, =, domainAxis, ., valueToJava2D, (, x1, ,, dataArea, ,, domainEdge, ), ;, double, m00, =, (, xx1]
[., valueToJava2D, (, x0, ,, dataArea, ,, domainEdge, ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x1, ,, dataArea]
[,, dataArea, ,, domainEdge, ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x1, ,, dataArea, ,, domainEdge, ), ;]
[,, domainEdge, ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x1, ,, dataArea, ,, domainEdge, ), ;, double, m00]
[), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x1, ,, dataArea, ,, domainEdge, ), ;, double, m00, =, (]
[;, double, m00, =, (, xx1, -, xx0, ), /, (, x1, -, x0, ), ;, double, m02, =, xx0]
[., valueToJava2D, (, x1, ,, dataArea, ,, domainEdge, ), ;, double, m00, =, (, xx1, -, xx0, ), /, (]
[,, dataArea, ,, domainEdge, ), ;, double, m00, =, (, xx1, -, xx0, ), /, (, x1, -, x0, )]
[,, domainEdge, ), ;, double, m00, =, (, xx1, -, xx0, ), /, (, x1, -, x0, ), ;, double]
[), ;, double, m00, =, (, xx1, -, xx0, ), /, (, x1, -, x0, ), ;, double, m02, =]
[;, double, m02, =, xx0, -, x0, *, m00, ;, double, y0, =, bounds, ., getMaxY, (, ), ;, double]
[/, (, x1, -, x0, ), ;, double, m02, =, xx0, -, x0, *, m00, ;, double, y0, =, bounds]
[), /, (, x1, -, x0, ), ;, double, m02, =, xx0, -, x0, *, m00, ;, double, y0, =]
[-, xx0, ), /, (, x1, -, x0, ), ;, double, m02, =, xx0, -, x0, *, m00, ;, double]
[), /, (, x1, -, x0, ), ;, double, m02, =, xx0, -, x0, *, m00, ;, double, y0, =]
[;, double, m02, =, xx0, -, x0, *, m00, ;, double, y0, =, bounds, ., getMaxY, (, ), ;, double]
[), ;, double, m02, =, xx0, -, x0, *, m00, ;, double, y0, =, bounds, ., getMaxY, (, ), ;]
[-, x0, ), ;, double, m02, =, xx0, -, x0, *, m00, ;, double, y0, =, bounds, ., getMaxY, (]
[), ;, double, m02, =, xx0, -, x0, *, m00, ;, double, y0, =, bounds, ., getMaxY, (, ), ;]
[;, double, y0, =, bounds, ., getMaxY, (, ), ;, double, y1, =, bounds, ., getMinY, (, ), ;, double]
[-, x0, *, m00, ;, double, y0, =, bounds, ., getMaxY, (, ), ;, double, y1, =, bounds, ., getMinY]
[;, double, y0, =, bounds, ., getMaxY, (, ), ;, double, y1, =, bounds, ., getMinY, (, ), ;, double]
[*, m00, ;, double, y0, =, bounds, ., getMaxY, (, ), ;, double, y1, =, bounds, ., getMinY, (, )]
[;, double, y0, =, bounds, ., getMaxY, (, ), ;, double, y1, =, bounds, ., getMinY, (, ), ;, double]
[;, double, y1, =, bounds, ., getMinY, (, ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y0, ,, dataArea]
[., getMaxY, (, ), ;, double, y1, =, bounds, ., getMinY, (, ), ;, double, yy0, =, rangeAxis, ., valueToJava2D]
[;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y0, ,, dataArea, ,, rangeEdge, ), ;, double, yy1, =, rangeAxis, .]
[., getMinY, (, ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y0, ,, dataArea, ,, rangeEdge, ), ;, double]
[;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y1, ,, dataArea, ,, rangeEdge, ), ;, double, m11, =, (, yy1]
[., valueToJava2D, (, y0, ,, dataArea, ,, rangeEdge, ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y1, ,, dataArea]
[,, dataArea, ,, rangeEdge, ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y1, ,, dataArea, ,, rangeEdge, ), ;]
[,, rangeEdge, ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y1, ,, dataArea, ,, rangeEdge, ), ;, double, m11]
[), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y1, ,, dataArea, ,, rangeEdge, ), ;, double, m11, =, (]
[;, double, m11, =, (, yy1, -, yy0, ), /, (, y1, -, y0, ), ;, double, m12, =, yy0]
[., valueToJava2D, (, y1, ,, dataArea, ,, rangeEdge, ), ;, double, m11, =, (, yy1, -, yy0, ), /, (]
[,, dataArea, ,, rangeEdge, ), ;, double, m11, =, (, yy1, -, yy0, ), /, (, y1, -, y0, )]
[,, rangeEdge, ), ;, double, m11, =, (, yy1, -, yy0, ), /, (, y1, -, y0, ), ;, double]
[), ;, double, m11, =, (, yy1, -, yy0, ), /, (, y1, -, y0, ), ;, double, m12, =]
[;, double, m12, =, yy0, -, m11, *, y0, ;, Shape, s, =, null, ;, if, (, orientation, ==, PlotOrientation]
[/, (, y1, -, y0, ), ;, double, m12, =, yy0, -, m11, *, y0, ;, Shape, s, =, null]
[), /, (, y1, -, y0, ), ;, double, m12, =, yy0, -, m11, *, y0, ;, Shape, s, =]
[-, yy0, ), /, (, y1, -, y0, ), ;, double, m12, =, yy0, -, m11, *, y0, ;, Shape]
[), /, (, y1, -, y0, ), ;, double, m12, =, yy0, -, m11, *, y0, ;, Shape, s, =]
[;, double, m12, =, yy0, -, m11, *, y0, ;, Shape, s, =, null, ;, if, (, orientation, ==, PlotOrientation]
[), ;, double, m12, =, yy0, -, m11, *, y0, ;, Shape, s, =, null, ;, if, (, orientation, ==]
[-, y0, ), ;, double, m12, =, yy0, -, m11, *, y0, ;, Shape, s, =, null, ;, if, (]
[), ;, double, m12, =, yy0, -, m11, *, y0, ;, Shape, s, =, null, ;, if, (, orientation, ==]
[;, Shape, s, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, AffineTransform, t1, =, new, AffineTransform]
[-, m11, *, y0, ;, Shape, s, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, AffineTransform]
[;, Shape, s, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, AffineTransform, t1, =, new, AffineTransform]
[*, y0, ;, Shape, s, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, AffineTransform, t1, =]
[;, Shape, s, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, AffineTransform, t1, =, new, AffineTransform]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, AffineTransform, t1, =, new, AffineTransform, (, 0.0f, ,, 1.0f, ,]
[), {, AffineTransform, t1, =, new, AffineTransform, (, 0.0f, ,, 1.0f, ,, 1.0f, ,, 0.0f, ,, 0.0f, ,, 0.0f, )]
[==, PlotOrientation, ., HORIZONTAL, ), {, AffineTransform, t1, =, new, AffineTransform, (, 0.0f, ,, 1.0f, ,, 1.0f, ,, 0.0f, ,]
[), {, AffineTransform, t1, =, new, AffineTransform, (, 0.0f, ,, 1.0f, ,, 1.0f, ,, 0.0f, ,, 0.0f, ,, 0.0f, )]
[., HORIZONTAL, ), {, AffineTransform, t1, =, new, AffineTransform, (, 0.0f, ,, 1.0f, ,, 1.0f, ,, 0.0f, ,, 0.0f, ,]
[;, AffineTransform, t2, =, new, AffineTransform, (, m11, ,, 0.0f, ,, 0.0f, ,, m00, ,, m12, ,, m02, ), ;]
[,, 1.0f, ,, 1.0f, ,, 0.0f, ,, 0.0f, ,, 0.0f, ), ;, AffineTransform, t2, =, new, AffineTransform, (, m11, ,]
[,, 1.0f, ,, 0.0f, ,, 0.0f, ,, 0.0f, ), ;, AffineTransform, t2, =, new, AffineTransform, (, m11, ,, 0.0f, ,]
[,, 0.0f, ,, 0.0f, ,, 0.0f, ), ;, AffineTransform, t2, =, new, AffineTransform, (, m11, ,, 0.0f, ,, 0.0f, ,]
[,, 0.0f, ,, 0.0f, ), ;, AffineTransform, t2, =, new, AffineTransform, (, m11, ,, 0.0f, ,, 0.0f, ,, m00, ,]
[,, 0.0f, ), ;, AffineTransform, t2, =, new, AffineTransform, (, m11, ,, 0.0f, ,, 0.0f, ,, m00, ,, m12, ,]
[), ;, AffineTransform, t2, =, new, AffineTransform, (, m11, ,, 0.0f, ,, 0.0f, ,, m00, ,, m12, ,, m02, )]
[;, s, =, t1, ., createTransformedShape, (, this, ., shape, ), ;, s, =, t2, ., createTransformedShape, (, s, )]
[,, 0.0f, ,, 0.0f, ,, m00, ,, m12, ,, m02, ), ;, s, =, t1, ., createTransformedShape, (, this, .]
[,, 0.0f, ,, m00, ,, m12, ,, m02, ), ;, s, =, t1, ., createTransformedShape, (, this, ., shape, )]
[,, m00, ,, m12, ,, m02, ), ;, s, =, t1, ., createTransformedShape, (, this, ., shape, ), ;, s]
[,, m12, ,, m02, ), ;, s, =, t1, ., createTransformedShape, (, this, ., shape, ), ;, s, =, t2]
[,, m02, ), ;, s, =, t1, ., createTransformedShape, (, this, ., shape, ), ;, s, =, t2, ., createTransformedShape]
[), ;, s, =, t1, ., createTransformedShape, (, this, ., shape, ), ;, s, =, t2, ., createTransformedShape, (, s]
[=, t1, ., createTransformedShape, (, this, ., shape, ), ;, s, =, t2, ., createTransformedShape, (, s, ), ;, }]
[;, s, =, t2, ., createTransformedShape, (, s, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[., createTransformedShape, (, this, ., shape, ), ;, s, =, t2, ., createTransformedShape, (, s, ), ;, }, else, if]
[), ;, s, =, t2, ., createTransformedShape, (, s, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL]
[., shape, ), ;, s, =, t2, ., createTransformedShape, (, s, ), ;, }, else, if, (, orientation, ==, PlotOrientation]
[=, t2, ., createTransformedShape, (, s, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, AffineTransform]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, AffineTransform, t, =, new, AffineTransform, (, m00, ,]
[., createTransformedShape, (, s, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, AffineTransform, t, =]
[), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, AffineTransform, t, =, new, AffineTransform, (, m00]
[), {, AffineTransform, t, =, new, AffineTransform, (, m00, ,, 0, ,, 0, ,, m11, ,, m02, ,, m12, )]
[==, PlotOrientation, ., VERTICAL, ), {, AffineTransform, t, =, new, AffineTransform, (, m00, ,, 0, ,, 0, ,, m11, ,]
[), {, AffineTransform, t, =, new, AffineTransform, (, m00, ,, 0, ,, 0, ,, m11, ,, m02, ,, m12, )]
[., VERTICAL, ), {, AffineTransform, t, =, new, AffineTransform, (, m00, ,, 0, ,, 0, ,, m11, ,, m02, ,]
[;, s, =, t, ., createTransformedShape, (, this, ., shape, ), ;, }, if, (, this, ., fillPaint, !=, null]
[,, 0, ,, 0, ,, m11, ,, m02, ,, m12, ), ;, s, =, t, ., createTransformedShape, (, this, .]
[,, 0, ,, m11, ,, m02, ,, m12, ), ;, s, =, t, ., createTransformedShape, (, this, ., shape, )]
[,, m11, ,, m02, ,, m12, ), ;, s, =, t, ., createTransformedShape, (, this, ., shape, ), ;, }]
[,, m02, ,, m12, ), ;, s, =, t, ., createTransformedShape, (, this, ., shape, ), ;, }, if, (]
[,, m12, ), ;, s, =, t, ., createTransformedShape, (, this, ., shape, ), ;, }, if, (, this, .]
[), ;, s, =, t, ., createTransformedShape, (, this, ., shape, ), ;, }, if, (, this, ., fillPaint, !=]
[=, t, ., createTransformedShape, (, this, ., shape, ), ;, }, if, (, this, ., fillPaint, !=, null, ), {]
[;, }, if, (, this, ., fillPaint, !=, null, ), {, g2, ., setPaint, (, this, ., fillPaint, ), ;]
[., createTransformedShape, (, this, ., shape, ), ;, }, if, (, this, ., fillPaint, !=, null, ), {, g2, .]
[), ;, }, if, (, this, ., fillPaint, !=, null, ), {, g2, ., setPaint, (, this, ., fillPaint, )]
[., shape, ), ;, }, if, (, this, ., fillPaint, !=, null, ), {, g2, ., setPaint, (, this, .]
[), {, g2, ., setPaint, (, this, ., fillPaint, ), ;, g2, ., fill, (, s, ), ;, }, if]
[!=, null, ), {, g2, ., setPaint, (, this, ., fillPaint, ), ;, g2, ., fill, (, s, ), ;]
[., fillPaint, !=, null, ), {, g2, ., setPaint, (, this, ., fillPaint, ), ;, g2, ., fill, (, s]
[), {, g2, ., setPaint, (, this, ., fillPaint, ), ;, g2, ., fill, (, s, ), ;, }, if]
[;, g2, ., fill, (, s, ), ;, }, if, (, this, ., stroke, !=, null, &&, this, ., outlinePaint]
[., setPaint, (, this, ., fillPaint, ), ;, g2, ., fill, (, s, ), ;, }, if, (, this, .]
[), ;, g2, ., fill, (, s, ), ;, }, if, (, this, ., stroke, !=, null, &&, this, .]
[., fillPaint, ), ;, g2, ., fill, (, s, ), ;, }, if, (, this, ., stroke, !=, null, &&]
[;, }, if, (, this, ., stroke, !=, null, &&, this, ., outlinePaint, !=, null, ), {, g2, ., setPaint]
[., fill, (, s, ), ;, }, if, (, this, ., stroke, !=, null, &&, this, ., outlinePaint, !=, null]
[), ;, }, if, (, this, ., stroke, !=, null, &&, this, ., outlinePaint, !=, null, ), {, g2, .]
[), {, g2, ., setPaint, (, this, ., outlinePaint, ), ;, g2, ., setStroke, (, this, ., stroke, ), ;]
[&&, this, ., outlinePaint, !=, null, ), {, g2, ., setPaint, (, this, ., outlinePaint, ), ;, g2, ., setStroke]
[!=, null, &&, this, ., outlinePaint, !=, null, ), {, g2, ., setPaint, (, this, ., outlinePaint, ), ;, g2]
[., stroke, !=, null, &&, this, ., outlinePaint, !=, null, ), {, g2, ., setPaint, (, this, ., outlinePaint, )]
[&&, this, ., outlinePaint, !=, null, ), {, g2, ., setPaint, (, this, ., outlinePaint, ), ;, g2, ., setStroke]
[), {, g2, ., setPaint, (, this, ., outlinePaint, ), ;, g2, ., setStroke, (, this, ., stroke, ), ;]
[!=, null, ), {, g2, ., setPaint, (, this, ., outlinePaint, ), ;, g2, ., setStroke, (, this, ., stroke]
[., outlinePaint, !=, null, ), {, g2, ., setPaint, (, this, ., outlinePaint, ), ;, g2, ., setStroke, (, this]
[), {, g2, ., setPaint, (, this, ., outlinePaint, ), ;, g2, ., setStroke, (, this, ., stroke, ), ;]
[;, g2, ., setStroke, (, this, ., stroke, ), ;, g2, ., draw, (, s, ), ;, }, addEntity, (]
[., setPaint, (, this, ., outlinePaint, ), ;, g2, ., setStroke, (, this, ., stroke, ), ;, g2, ., draw]
[), ;, g2, ., setStroke, (, this, ., stroke, ), ;, g2, ., draw, (, s, ), ;, }, addEntity]
[., outlinePaint, ), ;, g2, ., setStroke, (, this, ., stroke, ), ;, g2, ., draw, (, s, ), ;]
[;, g2, ., draw, (, s, ), ;, }, addEntity, (, info, ,, s, ,, rendererIndex, ,, getToolTipText, (, )]
[., setStroke, (, this, ., stroke, ), ;, g2, ., draw, (, s, ), ;, }, addEntity, (, info, ,]
[), ;, g2, ., draw, (, s, ), ;, }, addEntity, (, info, ,, s, ,, rendererIndex, ,, getToolTipText, (]
[., stroke, ), ;, g2, ., draw, (, s, ), ;, }, addEntity, (, info, ,, s, ,, rendererIndex, ,]
[;, }, addEntity, (, info, ,, s, ,, rendererIndex, ,, getToolTipText, (, ), ,, getURL, (, ), ), ;, }]
[., draw, (, s, ), ;, }, addEntity, (, info, ,, s, ,, rendererIndex, ,, getToolTipText, (, ), ,, getURL]
[), ;, }, addEntity, (, info, ,, s, ,, rendererIndex, ,, getToolTipText, (, ), ,, getURL, (, ), ), ;]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[,, s, ,, rendererIndex, ,, getToolTipText, (, ), ,, getURL, (, ), ), ;, }, public, boolean, equals, (, Object]
[,, rendererIndex, ,, getToolTipText, (, ), ,, getURL, (, ), ), ;, }, public, boolean, equals, (, Object, obj, )]
[,, getToolTipText, (, ), ,, getURL, (, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if]
[,, getURL, (, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), {, return, true, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[==, this, ), {, return, true, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return]
[), {, return, true, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, (, obj, instanceof, XYShapeAnnotation, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, if, (, !, (, obj, instanceof, XYShapeAnnotation, ), ), {, return, false, ;, }]
[., equals, (, obj, ), ), {, return, false, ;, }, if, (, !, (, obj, instanceof, XYShapeAnnotation, ), )]
[), ), {, return, false, ;, }, if, (, !, (, obj, instanceof, XYShapeAnnotation, ), ), {, return, false, ;]
[;, }, if, (, !, (, obj, instanceof, XYShapeAnnotation, ), ), {, return, false, ;, }, XYShapeAnnotation, that, =, (]
[), {, return, false, ;, }, XYShapeAnnotation, that, =, (, XYShapeAnnotation, ), obj, ;, if, (, !, this, ., shape]
[), {, return, false, ;, }, XYShapeAnnotation, that, =, (, XYShapeAnnotation, ), obj, ;, if, (, !, this, ., shape]
[), ), {, return, false, ;, }, XYShapeAnnotation, that, =, (, XYShapeAnnotation, ), obj, ;, if, (, !, this, .]
[instanceof, XYShapeAnnotation, ), ), {, return, false, ;, }, XYShapeAnnotation, that, =, (, XYShapeAnnotation, ), obj, ;, if, (, !]
[;, }, XYShapeAnnotation, that, =, (, XYShapeAnnotation, ), obj, ;, if, (, !, this, ., shape, ., equals, (, that]
[;, if, (, !, this, ., shape, ., equals, (, that, ., shape, ), ), {, return, false, ;, }]
[;, if, (, !, this, ., shape, ., equals, (, that, ., shape, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., stroke, ,, that, ., stroke]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., stroke, ,, that, ., stroke]
[., equals, (, that, ., shape, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., shape, ., equals, (, that, ., shape, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, .]
[), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., stroke, ,, that, .]
[., shape, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., stroke, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., stroke, ,, that, ., stroke, ), ), {, return]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., outlinePaint, ,, that, ., outlinePaint]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., outlinePaint, ,, that, ., outlinePaint]
[., equal, (, this, ., stroke, ,, that, ., stroke, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., stroke, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, .]
[., stroke, ,, that, ., stroke, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., outlinePaint, ,, that, .]
[., stroke, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., outlinePaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., outlinePaint, ,, that, ., outlinePaint, ), ), {, return]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., fillPaint, ,, that, ., fillPaint]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., fillPaint, ,, that, ., fillPaint]
[., equal, (, this, ., outlinePaint, ,, that, ., outlinePaint, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., outlinePaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, .]
[., outlinePaint, ,, that, ., outlinePaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., fillPaint, ,, that, .]
[., outlinePaint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., fillPaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., fillPaint, ,, that, ., fillPaint, ), ), {, return]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 193]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 193]
[., equal, (, this, ., fillPaint, ,, that, ., fillPaint, ), ), {, return, false, ;, }, return, true, ;]
[,, that, ., fillPaint, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, )]
[., fillPaint, ,, that, ., fillPaint, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode]
[), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =]
[., fillPaint, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int]
[;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37]
[;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +, this]
[;, result, =, 37, *, result, +, this, ., shape, ., hashCode, (, ), ;, if, (, this, ., stroke]
[=, 37, *, result, +, this, ., shape, ., hashCode, (, ), ;, if, (, this, ., stroke, !=, null]
[;, if, (, this, ., stroke, !=, null, ), {, result, =, 37, *, result, +, this, ., stroke, .]
[+, this, ., shape, ., hashCode, (, ), ;, if, (, this, ., stroke, !=, null, ), {, result, =]
[*, result, +, this, ., shape, ., hashCode, (, ), ;, if, (, this, ., stroke, !=, null, ), {]
[+, this, ., shape, ., hashCode, (, ), ;, if, (, this, ., stroke, !=, null, ), {, result, =]
[;, if, (, this, ., stroke, !=, null, ), {, result, =, 37, *, result, +, this, ., stroke, .]
[., hashCode, (, ), ;, if, (, this, ., stroke, !=, null, ), {, result, =, 37, *, result, +]
[., shape, ., hashCode, (, ), ;, if, (, this, ., stroke, !=, null, ), {, result, =, 37, *]
[), {, result, =, 37, *, result, +, this, ., stroke, ., hashCode, (, ), ;, }, result, =, 37]
[!=, null, ), {, result, =, 37, *, result, +, this, ., stroke, ., hashCode, (, ), ;, }, result]
[., stroke, !=, null, ), {, result, =, 37, *, result, +, this, ., stroke, ., hashCode, (, ), ;]
[), {, result, =, 37, *, result, +, this, ., stroke, ., hashCode, (, ), ;, }, result, =, 37]
[=, 37, *, result, +, this, ., stroke, ., hashCode, (, ), ;, }, result, =, 37, *, result, +]
[;, }, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =, 37]
[+, this, ., stroke, ., hashCode, (, ), ;, }, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[*, result, +, this, ., stroke, ., hashCode, (, ), ;, }, result, =, 37, *, result, +, HashUtilities, .]
[+, this, ., stroke, ., hashCode, (, ), ;, }, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[;, }, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =, 37]
[., hashCode, (, ), ;, }, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, )]
[., stroke, ., hashCode, (, ), ;, }, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, .]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =, 37, *, result, +]
[;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., fillPaint, ), ;, return, result, ;, }]
[+, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[*, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =, 37, *, result, +, HashUtilities, .]
[+, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., fillPaint, ), ;, return, result, ;, }]
[., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, .]
[), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., fillPaint, ), ;, return, result, ;]
[., outlinePaint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., fillPaint, ), ;, return]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., fillPaint, ), ;, return, result, ;, }, public, Object]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;]
[+, HashUtilities, ., hashCodeForPaint, (, this, ., fillPaint, ), ;, return, result, ;, }, public, Object, clone, (, ), throws]
[*, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., fillPaint, ), ;, return, result, ;, }, public, Object, clone, (]
[+, HashUtilities, ., hashCodeForPaint, (, this, ., fillPaint, ), ;, return, result, ;, }, public, Object, clone, (, ), throws]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;]
[., hashCodeForPaint, (, this, ., fillPaint, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, )]
[., fillPaint, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private, void]
[;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, .]
[., clone, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (]
[;, SerialUtilities, ., writeShape, (, this, ., shape, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., stroke, ,]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writeShape, (, this, ., shape, ,, stream, ), ;, SerialUtilities, ., writeStroke, (]
[;, SerialUtilities, ., writeStroke, (, this, ., stroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., outlinePaint, ,]
[., writeShape, (, this, ., shape, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., stroke, ,, stream, )]
[,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., stroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this]
[., shape, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., stroke, ,, stream, ), ;, SerialUtilities, ., writePaint]
[), ;, SerialUtilities, ., writeStroke, (, this, ., stroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., outlinePaint]
[;, SerialUtilities, ., writePaint, (, this, ., outlinePaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., fillPaint, ,]
[., writeStroke, (, this, ., stroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., outlinePaint, ,, stream, )]
[,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., outlinePaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this]
[., stroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., outlinePaint, ,, stream, ), ;, SerialUtilities, ., writePaint]
[), ;, SerialUtilities, ., writePaint, (, this, ., outlinePaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., fillPaint]
[;, SerialUtilities, ., writePaint, (, this, ., fillPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, )]
[., writePaint, (, this, ., outlinePaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., fillPaint, ,, stream, )]
[,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., fillPaint, ,, stream, ), ;, }, private, void, readObject, (]
[., outlinePaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., fillPaint, ,, stream, ), ;, }, private, void]
[), ;, SerialUtilities, ., writePaint, (, this, ., fillPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[., writePaint, (, this, ., fillPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException]
[,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject]
[., fillPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream]
[), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, )]
[;, this, ., shape, =, SerialUtilities, ., readShape, (, stream, ), ;, this, ., stroke, =, SerialUtilities, ., readStroke, (]
[., defaultReadObject, (, ), ;, this, ., shape, =, SerialUtilities, ., readShape, (, stream, ), ;, this, ., stroke, =]
[=, SerialUtilities, ., readShape, (, stream, ), ;, this, ., stroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this]
[., shape, =, SerialUtilities, ., readShape, (, stream, ), ;, this, ., stroke, =, SerialUtilities, ., readStroke, (, stream, )]
[;, this, ., stroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., outlinePaint, =, SerialUtilities, ., readPaint, (]
[., readShape, (, stream, ), ;, this, ., stroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., outlinePaint]
[), ;, this, ., stroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., outlinePaint, =, SerialUtilities, ., readPaint]
[=, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., outlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this]
[., stroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., outlinePaint, =, SerialUtilities, ., readPaint, (, stream, )]
[;, this, ., outlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., fillPaint, =, SerialUtilities, ., readPaint, (]
[., readStroke, (, stream, ), ;, this, ., outlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., fillPaint]
[), ;, this, ., outlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., fillPaint, =, SerialUtilities, ., readPaint]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., fillPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }]
[., outlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., fillPaint, =, SerialUtilities, ., readPaint, (, stream, )]
[;, this, ., fillPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[., readPaint, (, stream, ), ;, this, ., fillPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[), ;, this, ., fillPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[., fillPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[;, }, }]
[., readPaint, (, stream, ), ;, }, }]
[), ;, }, }]
