[List, <, Vector2D, >, makeCircle, (, int, samples, ,, final, RandomVectorGenerator, generator, ), {, List, <, Vector2D, >, points, =]
[{, List, <, Vector2D, >, points, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, double, i, =]
[<, Vector2D, >, points, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, double, i, =, 0, ;]
[<, Vector2D, >, points, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, double, i, =, 0, ;]
[>, points, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, double, i, =, 0, ;, i, <]
[=, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, double, i, =, 0, ;, i, <, samples, ;]
[=, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, double, i, =, 0, ;, i, <, samples, ;]
[for, (, double, i, =, 0, ;, i, <, samples, ;, i, ++, ), {, double, [, ], vector, =]
[for, (, double, i, =, 0, ;, i, <, samples, ;, i, ++, ), {, double, [, ], vector, =]
[samples, ;, i, ++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =]
[++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (]
[double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (, vector, ), ;]
[double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (, vector, ), ;]
[=, generator, ., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (, vector, ), ;, points, ., add, (]
[(, ), ;, Vector2D, point, =, new, Vector2D, (, vector, ), ;, points, ., add, (, point, ), ;, }]
[;, Vector2D, point, =, new, Vector2D, (, vector, ), ;, points, ., add, (, point, ), ;, }, points, =]
[point, =, new, Vector2D, (, vector, ), ;, points, ., add, (, point, ), ;, }, points, =, normalize, (]
[., add, (, point, ), ;, }, points, =, normalize, (, points, ), ;, List, <, Vector2D, >, circlePoints, =]
[;, List, <, Vector2D, >, circlePoints, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, Vector2D, p, :]
[=, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, Vector2D, p, :, points, ), {, double, criteria, =]
[=, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, Vector2D, p, :, points, ), {, double, criteria, =]
[=, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, Vector2D, p, :, points, ), {, double, criteria, =]
[Vector2D, >, (, ), ;, for, (, Vector2D, p, :, points, ), {, double, criteria, =, FastMath, ., pow, (]
[Vector2D, >, (, ), ;, for, (, Vector2D, p, :, points, ), {, double, criteria, =, FastMath, ., pow, (]
[(, Vector2D, p, :, points, ), {, double, criteria, =, FastMath, ., pow, (, p, ., getX, (, ), ,]
[:, points, ), {, double, criteria, =, FastMath, ., pow, (, p, ., getX, (, ), ,, 2, ), +]
[:, points, ), {, double, criteria, =, FastMath, ., pow, (, p, ., getX, (, ), ,, 2, ), +]
[double, criteria, =, FastMath, ., pow, (, p, ., getX, (, ), ,, 2, ), +, FastMath, ., pow, (]
[double, criteria, =, FastMath, ., pow, (, p, ., getX, (, ), ,, 2, ), +, FastMath, ., pow, (]
[(, p, ., getX, (, ), ,, 2, ), +, FastMath, ., pow, (, p, ., getY, (, ), ,]
[), ,, 2, ), +, FastMath, ., pow, (, p, ., getY, (, ), ,, 2, ), ;, if, (]
[), ,, 2, ), +, FastMath, ., pow, (, p, ., getY, (, ), ,, 2, ), ;, if, (]
[2, ), +, FastMath, ., pow, (, p, ., getY, (, ), ,, 2, ), ;, if, (, criteria, <]
[FastMath, ., pow, (, p, ., getY, (, ), ,, 2, ), ;, if, (, criteria, <, 1.0, ), {]
[FastMath, ., pow, (, p, ., getY, (, ), ,, 2, ), ;, if, (, criteria, <, 1.0, ), {]
[p, ., getY, (, ), ,, 2, ), ;, if, (, criteria, <, 1.0, ), {, circlePoints, ., add, (]
[2, ), ;, if, (, criteria, <, 1.0, ), {, circlePoints, ., add, (, p, ), ;, }, }, return]
[static, List, <, Vector2D, >, makeRandom, (, int, samples, ,, RandomVectorGenerator, generator, ), {, List, <, Vector2D, >, points, =]
[{, List, <, Vector2D, >, points, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, double, i, =]
[<, Vector2D, >, points, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, double, i, =, 0, ;]
[<, Vector2D, >, points, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, double, i, =, 0, ;]
[>, points, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, double, i, =, 0, ;, i, <]
[=, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, double, i, =, 0, ;, i, <, samples, ;]
[=, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, double, i, =, 0, ;, i, <, samples, ;]
[for, (, double, i, =, 0, ;, i, <, samples, ;, i, ++, ), {, double, [, ], vector, =]
[for, (, double, i, =, 0, ;, i, <, samples, ;, i, ++, ), {, double, [, ], vector, =]
[samples, ;, i, ++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =]
[++, ), {, double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (]
[double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (, vector, ), ;]
[double, [, ], vector, =, generator, ., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (, vector, ), ;]
[=, generator, ., nextVector, (, ), ;, Vector2D, point, =, new, Vector2D, (, vector, ), ;, points, ., add, (]
[), ;, Vector2D, point, =, new, Vector2D, (, vector, ), ;, points, ., add, (, point, ), ;, }, return]
[Vector2D, point, =, new, Vector2D, (, vector, ), ;, points, ., add, (, point, ), ;, }, return, normalize, (]
[}, public, static, List, <, Vector2D, >, normalize, (, final, List, <, Vector2D, >, input, ), {, double, minX, =]
[}, public, static, List, <, Vector2D, >, normalize, (, final, List, <, Vector2D, >, input, ), {, double, minX, =]
[normalize, (, final, List, <, Vector2D, >, input, ), {, double, minX, =, Double, ., MAX_VALUE, ;, double, maxX, =]
[normalize, (, final, List, <, Vector2D, >, input, ), {, double, minX, =, Double, ., MAX_VALUE, ;, double, maxX, =]
[{, double, minX, =, Double, ., MAX_VALUE, ;, double, maxX, =, Double, ., MIN_VALUE, ;, for, (, Vector2D, p, :]
[=, Double, ., MAX_VALUE, ;, double, maxX, =, Double, ., MIN_VALUE, ;, for, (, Vector2D, p, :, input, ), {]
[., MAX_VALUE, ;, double, maxX, =, Double, ., MIN_VALUE, ;, for, (, Vector2D, p, :, input, ), {, minX, =]
[., MAX_VALUE, ;, double, maxX, =, Double, ., MIN_VALUE, ;, for, (, Vector2D, p, :, input, ), {, minX, =]
[maxX, =, Double, ., MIN_VALUE, ;, for, (, Vector2D, p, :, input, ), {, minX, =, FastMath, ., min, (]
[Double, ., MIN_VALUE, ;, for, (, Vector2D, p, :, input, ), {, minX, =, FastMath, ., min, (, minX, ,]
[Double, ., MIN_VALUE, ;, for, (, Vector2D, p, :, input, ), {, minX, =, FastMath, ., min, (, minX, ,]
[p, :, input, ), {, minX, =, FastMath, ., min, (, minX, ,, p, ., getX, (, ), ), ;]
[input, ), {, minX, =, FastMath, ., min, (, minX, ,, p, ., getX, (, ), ), ;, maxX, =]
[input, ), {, minX, =, FastMath, ., min, (, minX, ,, p, ., getX, (, ), ), ;, maxX, =]
[=, FastMath, ., min, (, minX, ,, p, ., getX, (, ), ), ;, maxX, =, FastMath, ., max, (]
[., min, (, minX, ,, p, ., getX, (, ), ), ;, maxX, =, FastMath, ., max, (, maxX, ,]
[., min, (, minX, ,, p, ., getX, (, ), ), ;, maxX, =, FastMath, ., max, (, maxX, ,]
[., max, (, maxX, ,, p, ., getX, (, ), ), ;, }, double, minY, ,, maxY, ;, if, (]
[., max, (, maxX, ,, p, ., getX, (, ), ), ;, }, double, minY, ,, maxY, ;, if, (]
[., max, (, maxX, ,, p, ., getX, (, ), ), ;, }, double, minY, ,, maxY, ;, if, (]
[,, p, ., getX, (, ), ), ;, }, double, minY, ,, maxY, ;, if, (, FastMath, ., abs, (]
[getX, (, ), ), ;, }, double, minY, ,, maxY, ;, if, (, FastMath, ., abs, (, minX, ), <]
[), ;, }, double, minY, ,, maxY, ;, if, (, FastMath, ., abs, (, minX, ), <, 0.1, ), {]
[}, double, minY, ,, maxY, ;, if, (, FastMath, ., abs, (, minX, ), <, 0.1, ), {, minX, =]
[minY, ,, maxY, ;, if, (, FastMath, ., abs, (, minX, ), <, 0.1, ), {, minX, =, minY, =]
[maxY, ;, if, (, FastMath, ., abs, (, minX, ), <, 0.1, ), {, minX, =, minY, =, 0.0, ;]
[if, (, FastMath, ., abs, (, minX, ), <, 0.1, ), {, minX, =, minY, =, 0.0, ;, maxX, =]
[FastMath, ., abs, (, minX, ), <, 0.1, ), {, minX, =, minY, =, 0.0, ;, maxX, =, maxY, =]
[), <, 0.1, ), {, minX, =, minY, =, 0.0, ;, maxX, =, maxY, =, 1.0, ;, }, else, {]
[0.1, ), {, minX, =, minY, =, 0.0, ;, maxX, =, maxY, =, 1.0, ;, }, else, {, minX, =]
[{, minX, =, minY, =, 0.0, ;, maxX, =, maxY, =, 1.0, ;, }, else, {, minX, =, minY, =]
[minX, =, minY, =, 0.0, ;, maxX, =, maxY, =, 1.0, ;, }, else, {, minX, =, minY, =, -]
[minX, =, minY, =, 0.0, ;, maxX, =, maxY, =, 1.0, ;, }, else, {, minX, =, minY, =, -]
[0.0, ;, maxX, =, maxY, =, 1.0, ;, }, else, {, minX, =, minY, =, -, FastMath, ., sqrt, (]
[=, maxY, =, 1.0, ;, }, else, {, minX, =, minY, =, -, FastMath, ., sqrt, (, 3, ), ;]
[=, 1.0, ;, }, else, {, minX, =, minY, =, -, FastMath, ., sqrt, (, 3, ), ;, maxX, =]
[;, }, else, {, minX, =, minY, =, -, FastMath, ., sqrt, (, 3, ), ;, maxX, =, maxY, =]
[;, }, else, {, minX, =, minY, =, -, FastMath, ., sqrt, (, 3, ), ;, maxX, =, maxY, =]
[minX, =, minY, =, -, FastMath, ., sqrt, (, 3, ), ;, maxX, =, maxY, =, FastMath, ., sqrt, (]
[sqrt, (, 3, ), ;, maxX, =, maxY, =, FastMath, ., sqrt, (, 3, ), ;, }, double, rangeX, =]
[sqrt, (, 3, ), ;, maxX, =, maxY, =, FastMath, ., sqrt, (, 3, ), ;, }, double, rangeX, =]
[3, ), ;, maxX, =, maxY, =, FastMath, ., sqrt, (, 3, ), ;, }, double, rangeX, =, maxX, -]
[maxY, =, FastMath, ., sqrt, (, 3, ), ;, }, double, rangeX, =, maxX, -, minX, ;, double, rangeY, =]
[maxY, =, FastMath, ., sqrt, (, 3, ), ;, }, double, rangeX, =, maxX, -, minX, ;, double, rangeY, =]
[FastMath, ., sqrt, (, 3, ), ;, }, double, rangeX, =, maxX, -, minX, ;, double, rangeY, =, maxY, -]
[double, rangeX, =, maxX, -, minX, ;, double, rangeY, =, maxY, -, minY, ;, List, <, Vector2D, >, points, =]
[;, List, <, Vector2D, >, points, =, new, ArrayList, <, Vector2D, >, (, ), ;, for, (, Vector2D, p, :]
[ArrayList, <, Vector2D, >, (, ), ;, for, (, Vector2D, p, :, input, ), {, double, [, ], arr, =]
[ArrayList, <, Vector2D, >, (, ), ;, for, (, Vector2D, p, :, input, ), {, double, [, ], arr, =]
[;, for, (, Vector2D, p, :, input, ), {, double, [, ], arr, =, p, ., toArray, (, ), ;]
[;, for, (, Vector2D, p, :, input, ), {, double, [, ], arr, =, p, ., toArray, (, ), ;]
[(, Vector2D, p, :, input, ), {, double, [, ], arr, =, p, ., toArray, (, ), ;, arr, []
[:, input, ), {, double, [, ], arr, =, p, ., toArray, (, ), ;, arr, [, 0, ], =]
[:, input, ), {, double, [, ], arr, =, p, ., toArray, (, ), ;, arr, [, 0, ], =]
[:, input, ), {, double, [, ], arr, =, p, ., toArray, (, ), ;, arr, [, 0, ], =]
[:, input, ), {, double, [, ], arr, =, p, ., toArray, (, ), ;, arr, [, 0, ], =]
[input, ), {, double, [, ], arr, =, p, ., toArray, (, ), ;, arr, [, 0, ], =, (]
[input, ), {, double, [, ], arr, =, p, ., toArray, (, ), ;, arr, [, 0, ], =, (]
[input, ), {, double, [, ], arr, =, p, ., toArray, (, ), ;, arr, [, 0, ], =, (]
[{, double, [, ], arr, =, p, ., toArray, (, ), ;, arr, [, 0, ], =, (, arr, []
[], arr, =, p, ., toArray, (, ), ;, arr, [, 0, ], =, (, arr, [, 0, ], -]
[p, ., toArray, (, ), ;, arr, [, 0, ], =, (, arr, [, 0, ], -, minX, ), /]
[toArray, (, ), ;, arr, [, 0, ], =, (, arr, [, 0, ], -, minX, ), /, rangeX, *]
[), ;, arr, [, 0, ], =, (, arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -]
[arr, [, 0, ], =, (, arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;]
[arr, [, 0, ], =, (, arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;]
[0, ], =, (, arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr, []
[(, arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =]
[(, arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =]
[(, arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =]
[(, arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =]
[arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =, (]
[arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =, (]
[arr, [, 0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =, (]
[0, ], -, minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =, (, arr, []
[minX, ), /, rangeX, *, 2, -, 1, ;, arr, [, 1, ], =, (, arr, [, 1, ], -]
[rangeX, *, 2, -, 1, ;, arr, [, 1, ], =, (, arr, [, 1, ], -, minY, ), /]
[2, -, 1, ;, arr, [, 1, ], =, (, arr, [, 1, ], -, minY, ), /, rangeY, *]
[1, ;, arr, [, 1, ], =, (, arr, [, 1, ], -, minY, ), /, rangeY, *, 2, -]
[arr, [, 1, ], =, (, arr, [, 1, ], -, minY, ), /, rangeY, *, 2, -, 1, ;]
[arr, [, 1, ], =, (, arr, [, 1, ], -, minY, ), /, rangeY, *, 2, -, 1, ;]
[=, (, arr, [, 1, ], -, minY, ), /, rangeY, *, 2, -, 1, ;, points, ., add, (]
[[, 1, ], -, minY, ), /, rangeY, *, 2, -, 1, ;, points, ., add, (, new, Vector2D, (]
[/, rangeY, *, 2, -, 1, ;, points, ., add, (, new, Vector2D, (, arr, ), ), ;, }, return]
[2, -, 1, ;, points, ., add, (, new, Vector2D, (, arr, ), ), ;, }, return, points, ;, }]
[;, points, ., add, (, new, Vector2D, (, arr, ), ), ;, }, return, points, ;, }, @, SuppressWarnings, (]
[points, ;, }, @, SuppressWarnings, (, "serial", ), public, static, class, Display, extends, ExampleFrame, {, public, Display, (, ), {]
[}, @, SuppressWarnings, (, "serial", ), public, static, class, Display, extends, ExampleFrame, {, public, Display, (, ), {, setTitle, (]
[(, "serial", ), public, static, class, Display, extends, ExampleFrame, {, public, Display, (, ), {, setTitle, (, "Commons-Math: Pseudo/Quasi-random examples", ), ;]
[), public, static, class, Display, extends, ExampleFrame, {, public, Display, (, ), {, setTitle, (, "Commons-Math: Pseudo/Quasi-random examples", ), ;, setSize, (]
[static, class, Display, extends, ExampleFrame, {, public, Display, (, ), {, setTitle, (, "Commons-Math: Pseudo/Quasi-random examples", ), ;, setSize, (, 800, ,]
[extends, ExampleFrame, {, public, Display, (, ), {, setTitle, (, "Commons-Math: Pseudo/Quasi-random examples", ), ;, setSize, (, 800, ,, 800, ), ;]
[{, public, Display, (, ), {, setTitle, (, "Commons-Math: Pseudo/Quasi-random examples", ), ;, setSize, (, 800, ,, 800, ), ;, setLayout, (]
[setSize, (, 800, ,, 800, ), ;, setLayout, (, new, GridBagLayout, (, ), ), ;, int, [, ], datasets, =]
[800, ), ;, setLayout, (, new, GridBagLayout, (, ), ), ;, int, [, ], datasets, =, new, int, [, ]]
[), ;, setLayout, (, new, GridBagLayout, (, ), ), ;, int, [, ], datasets, =, new, int, [, ], {]
[setLayout, (, new, GridBagLayout, (, ), ), ;, int, [, ], datasets, =, new, int, [, ], {, 256, ,]
[new, GridBagLayout, (, ), ), ;, int, [, ], datasets, =, new, int, [, ], {, 256, ,, 1000, ,]
[(, ), ), ;, int, [, ], datasets, =, new, int, [, ], {, 256, ,, 1000, ,, 2500, ,]
[256, ,, 1000, ,, 2500, ,, 1000, }, ;, List, <, Pair, <, String, ,, RandomVectorGenerator, >, >, generators, =]
[String, ,, RandomVectorGenerator, >, >, generators, =, new, ArrayList, <, Pair, <, String, ,, RandomVectorGenerator, >, >, (, ), ;]
[String, ,, RandomVectorGenerator, >, >, generators, =, new, ArrayList, <, Pair, <, String, ,, RandomVectorGenerator, >, >, (, ), ;]
[>, generators, =, new, ArrayList, <, Pair, <, String, ,, RandomVectorGenerator, >, >, (, ), ;, generators, ., add, (]
[String, ,, RandomVectorGenerator, >, >, (, ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (]
[RandomVectorGenerator, >, >, (, ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Uncorrelated\nUniform(JDK)", ,]
[(, ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Uncorrelated\nUniform(JDK)", ,, new, UncorrelatedRandomVectorGenerator, (]
[;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Uncorrelated\nUniform(JDK)", ,, new, UncorrelatedRandomVectorGenerator, (, 2, ,]
[add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Uncorrelated\nUniform(JDK)", ,, new, UncorrelatedRandomVectorGenerator, (, 2, ,, new, UniformRandomGenerator, (]
[(, "Uncorrelated\nUniform(JDK)", ,, new, UncorrelatedRandomVectorGenerator, (, 2, ,, new, UniformRandomGenerator, (, new, JDKRandomGenerator, (, ), ), ), ), ), ;]
[(, "Uncorrelated\nUniform(JDK)", ,, new, UncorrelatedRandomVectorGenerator, (, 2, ,, new, UniformRandomGenerator, (, new, JDKRandomGenerator, (, ), ), ), ), ), ;]
[UncorrelatedRandomVectorGenerator, (, 2, ,, new, UniformRandomGenerator, (, new, JDKRandomGenerator, (, ), ), ), ), ), ;, generators, ., add, (]
[JDKRandomGenerator, (, ), ), ), ), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (]
[), ), ), ), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Independent\nRandom(MT)", ,]
[new, Pair, <, String, ,, RandomVectorGenerator, >, (, "Independent\nRandom(MT)", ,, new, RandomVectorGenerator, (, ), {, RandomGenerator, [, ], rngs, =]
[,, RandomVectorGenerator, >, (, "Independent\nRandom(MT)", ,, new, RandomVectorGenerator, (, ), {, RandomGenerator, [, ], rngs, =, new, RandomGenerator, [, ]]
[RandomVectorGenerator, >, (, "Independent\nRandom(MT)", ,, new, RandomVectorGenerator, (, ), {, RandomGenerator, [, ], rngs, =, new, RandomGenerator, [, ], {]
["Independent\nRandom(MT)", ,, new, RandomVectorGenerator, (, ), {, RandomGenerator, [, ], rngs, =, new, RandomGenerator, [, ], {, new, MersenneTwister, (]
[RandomVectorGenerator, (, ), {, RandomGenerator, [, ], rngs, =, new, RandomGenerator, [, ], {, new, MersenneTwister, (, 0, ), ,]
[{, RandomGenerator, [, ], rngs, =, new, RandomGenerator, [, ], {, new, MersenneTwister, (, 0, ), ,, new, MersenneTwister, (]
[MersenneTwister, (, 1, ), }, ;, public, double, [, ], nextVector, (, ), {, final, double, [, ], vector, =]
[), }, ;, public, double, [, ], nextVector, (, ), {, final, double, [, ], vector, =, new, double, []
[public, double, [, ], nextVector, (, ), {, final, double, [, ], vector, =, new, double, [, 2, ], ;]
[public, double, [, ], nextVector, (, ), {, final, double, [, ], vector, =, new, double, [, 2, ], ;]
[[, ], nextVector, (, ), {, final, double, [, ], vector, =, new, double, [, 2, ], ;, vector, []
[(, ), {, final, double, [, ], vector, =, new, double, [, 2, ], ;, vector, [, 0, ], =]
[(, ), {, final, double, [, ], vector, =, new, double, [, 2, ], ;, vector, [, 0, ], =]
[(, ), {, final, double, [, ], vector, =, new, double, [, 2, ], ;, vector, [, 0, ], =]
[{, final, double, [, ], vector, =, new, double, [, 2, ], ;, vector, [, 0, ], =, rngs, []
[new, double, [, 2, ], ;, vector, [, 0, ], =, rngs, [, 0, ], ., nextDouble, (, ), ;]
[new, double, [, 2, ], ;, vector, [, 0, ], =, rngs, [, 0, ], ., nextDouble, (, ), ;]
[[, 2, ], ;, vector, [, 0, ], =, rngs, [, 0, ], ., nextDouble, (, ), ;, vector, []
[;, vector, [, 0, ], =, rngs, [, 0, ], ., nextDouble, (, ), ;, vector, [, 1, ], =]
[;, vector, [, 0, ], =, rngs, [, 0, ], ., nextDouble, (, ), ;, vector, [, 1, ], =]
[;, vector, [, 0, ], =, rngs, [, 0, ], ., nextDouble, (, ), ;, vector, [, 1, ], =]
[[, 0, ], =, rngs, [, 0, ], ., nextDouble, (, ), ;, vector, [, 1, ], =, rngs, []
[., nextDouble, (, ), ;, vector, [, 1, ], =, rngs, [, 1, ], ., nextDouble, (, ), ;, return]
[1, ], =, rngs, [, 1, ], ., nextDouble, (, ), ;, return, vector, ;, }, }, ), ), ;]
[1, ], =, rngs, [, 1, ], ., nextDouble, (, ), ;, return, vector, ;, }, }, ), ), ;]
[[, 1, ], ., nextDouble, (, ), ;, return, vector, ;, }, }, ), ), ;, generators, ., add, (]
[return, vector, ;, }, }, ), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (]
[;, }, }, ), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "HaltonSequence", ,]
[), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "HaltonSequence", ,, new, HaltonSequenceGenerator, (]
[add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "HaltonSequence", ,, new, HaltonSequenceGenerator, (, 2, ), ), ), ;]
[add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "HaltonSequence", ,, new, HaltonSequenceGenerator, (, 2, ), ), ), ;]
[<, String, ,, RandomVectorGenerator, >, (, "HaltonSequence", ,, new, HaltonSequenceGenerator, (, 2, ), ), ), ;, generators, ., add, (]
[new, HaltonSequenceGenerator, (, 2, ), ), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (]
[(, 2, ), ), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "SobolSequence", ,]
[), ), ;, generators, ., add, (, new, Pair, <, String, ,, RandomVectorGenerator, >, (, "SobolSequence", ,, new, SobolSequenceGenerator, (]
[Pair, <, String, ,, RandomVectorGenerator, >, (, "SobolSequence", ,, new, SobolSequenceGenerator, (, 2, ), ), ), ;, GridBagConstraints, c, =]
[>, (, "SobolSequence", ,, new, SobolSequenceGenerator, (, 2, ), ), ), ;, GridBagConstraints, c, =, new, GridBagConstraints, (, ), ;]
[>, (, "SobolSequence", ,, new, SobolSequenceGenerator, (, 2, ), ), ), ;, GridBagConstraints, c, =, new, GridBagConstraints, (, ), ;]
[new, SobolSequenceGenerator, (, 2, ), ), ), ;, GridBagConstraints, c, =, new, GridBagConstraints, (, ), ;, c, ., fill, =]
[new, SobolSequenceGenerator, (, 2, ), ), ), ;, GridBagConstraints, c, =, new, GridBagConstraints, (, ), ;, c, ., fill, =]
[), ), ), ;, GridBagConstraints, c, =, new, GridBagConstraints, (, ), ;, c, ., fill, =, GridBagConstraints, ., VERTICAL, ;]
[), ), ), ;, GridBagConstraints, c, =, new, GridBagConstraints, (, ), ;, c, ., fill, =, GridBagConstraints, ., VERTICAL, ;]
[GridBagConstraints, c, =, new, GridBagConstraints, (, ), ;, c, ., fill, =, GridBagConstraints, ., VERTICAL, ;, c, ., gridx, =]
[=, new, GridBagConstraints, (, ), ;, c, ., fill, =, GridBagConstraints, ., VERTICAL, ;, c, ., gridx, =, 1, ;]
[=, new, GridBagConstraints, (, ), ;, c, ., fill, =, GridBagConstraints, ., VERTICAL, ;, c, ., gridx, =, 1, ;]
[), ;, c, ., fill, =, GridBagConstraints, ., VERTICAL, ;, c, ., gridx, =, 1, ;, c, ., gridy, =]
[c, ., fill, =, GridBagConstraints, ., VERTICAL, ;, c, ., gridx, =, 1, ;, c, ., gridy, =, 0, ;]
[c, ., fill, =, GridBagConstraints, ., VERTICAL, ;, c, ., gridx, =, 1, ;, c, ., gridy, =, 0, ;]
[GridBagConstraints, ., VERTICAL, ;, c, ., gridx, =, 1, ;, c, ., gridy, =, 0, ;, c, ., insets, =]
[;, c, ., gridx, =, 1, ;, c, ., gridy, =, 0, ;, c, ., insets, =, new, Insets, (]
[., gridx, =, 1, ;, c, ., gridy, =, 0, ;, c, ., insets, =, new, Insets, (, 2, ,]
[=, 1, ;, c, ., gridy, =, 0, ;, c, ., insets, =, new, Insets, (, 2, ,, 2, ,]
[;, c, ., gridy, =, 0, ;, c, ., insets, =, new, Insets, (, 2, ,, 2, ,, 2, ,]
[(, 2, ,, 2, ,, 2, ,, 2, ), ;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :]
[,, 2, ), ;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators, ), {, JTextArea, text, =]
[;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators, ), {, JTextArea, text, =, new, JTextArea, (]
[;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators, ), {, JTextArea, text, =, new, JTextArea, (]
[RandomVectorGenerator, >, pair, :, generators, ), {, JTextArea, text, =, new, JTextArea, (, pair, ., getFirst, (, ), ), ;]
[RandomVectorGenerator, >, pair, :, generators, ), {, JTextArea, text, =, new, JTextArea, (, pair, ., getFirst, (, ), ), ;]
[generators, ), {, JTextArea, text, =, new, JTextArea, (, pair, ., getFirst, (, ), ), ;, text, ., setEditable, (]
[JTextArea, text, =, new, JTextArea, (, pair, ., getFirst, (, ), ), ;, text, ., setEditable, (, false, ), ;]
[JTextArea, text, =, new, JTextArea, (, pair, ., getFirst, (, ), ), ;, text, ., setEditable, (, false, ), ;]
[JTextArea, (, pair, ., getFirst, (, ), ), ;, text, ., setEditable, (, false, ), ;, text, ., setOpaque, (]
[., getFirst, (, ), ), ;, text, ., setEditable, (, false, ), ;, text, ., setOpaque, (, false, ), ;]
[(, ), ), ;, text, ., setEditable, (, false, ), ;, text, ., setOpaque, (, false, ), ;, add, (]
[), ;, text, ., setEditable, (, false, ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,]
[., setEditable, (, false, ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;]
[., setEditable, (, false, ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;]
[., setEditable, (, false, ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;]
[(, false, ), ;, add, (, text, ,, c, ), ;, c, ., gridx, ++, ;, }, int, saveY, =]
[false, ), ;, add, (, text, ,, c, ), ;, c, ., gridx, ++, ;, }, int, saveY, =, ++]
[false, ), ;, add, (, text, ,, c, ), ;, c, ., gridx, ++, ;, }, int, saveY, =, ++]
[(, text, ,, c, ), ;, c, ., gridx, ++, ;, }, int, saveY, =, ++, c, ., gridy, ;]
[(, text, ,, c, ), ;, c, ., gridx, ++, ;, }, int, saveY, =, ++, c, ., gridy, ;]
[), ;, c, ., gridx, ++, ;, }, int, saveY, =, ++, c, ., gridy, ;, c, ., gridx, =]
[}, int, saveY, =, ++, c, ., gridy, ;, c, ., gridx, =, 0, ;, for, (, int, type, =]
[saveY, =, ++, c, ., gridy, ;, c, ., gridx, =, 0, ;, for, (, int, type, =, 0, ;]
[saveY, =, ++, c, ., gridy, ;, c, ., gridx, =, 0, ;, for, (, int, type, =, 0, ;]
[++, c, ., gridy, ;, c, ., gridx, =, 0, ;, for, (, int, type, =, 0, ;, type, <]
[., gridy, ;, c, ., gridx, =, 0, ;, for, (, int, type, =, 0, ;, type, <, 4, ;]
[., gridy, ;, c, ., gridx, =, 0, ;, for, (, int, type, =, 0, ;, type, <, 4, ;]
[0, ;, for, (, int, type, =, 0, ;, type, <, 4, ;, type, ++, ), {, JLabel, text, =]
[(, int, type, =, 0, ;, type, <, 4, ;, type, ++, ), {, JLabel, text, =, new, JLabel, (]
[(, int, type, =, 0, ;, type, <, 4, ;, type, ++, ), {, JLabel, text, =, new, JLabel, (]
[type, =, 0, ;, type, <, 4, ;, type, ++, ), {, JLabel, text, =, new, JLabel, (, "n=", +]
[type, =, 0, ;, type, <, 4, ;, type, ++, ), {, JLabel, text, =, new, JLabel, (, "n=", +]
[type, <, 4, ;, type, ++, ), {, JLabel, text, =, new, JLabel, (, "n=", +, String, ., valueOf, (]
[type, <, 4, ;, type, ++, ), {, JLabel, text, =, new, JLabel, (, "n=", +, String, ., valueOf, (]
[4, ;, type, ++, ), {, JLabel, text, =, new, JLabel, (, "n=", +, String, ., valueOf, (, datasets, []
[{, JLabel, text, =, new, JLabel, (, "n=", +, String, ., valueOf, (, datasets, [, type, ], ), ), ;]
[{, JLabel, text, =, new, JLabel, (, "n=", +, String, ., valueOf, (, datasets, [, type, ], ), ), ;]
[new, JLabel, (, "n=", +, String, ., valueOf, (, datasets, [, type, ], ), ), ;, text, ., setOpaque, (]
["n=", +, String, ., valueOf, (, datasets, [, type, ], ), ), ;, text, ., setOpaque, (, false, ), ;]
[String, ., valueOf, (, datasets, [, type, ], ), ), ;, text, ., setOpaque, (, false, ), ;, add, (]
[valueOf, (, datasets, [, type, ], ), ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,]
[[, type, ], ), ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;]
[[, type, ], ), ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;]
[[, type, ], ), ), ;, text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;]
[text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;, c, ., gridy, ++, ;, }]
[text, ., setOpaque, (, false, ), ;, add, (, text, ,, c, ), ;, c, ., gridy, ++, ;, }]
[false, ), ;, add, (, text, ,, c, ), ;, c, ., gridy, ++, ;, }, c, ., gridy, =]
[c, ), ;, c, ., gridy, ++, ;, }, c, ., gridy, =, saveY, ;, for, (, int, type, =]
[;, c, ., gridy, ++, ;, }, c, ., gridy, =, saveY, ;, for, (, int, type, =, 0, ;]
[;, c, ., gridy, ++, ;, }, c, ., gridy, =, saveY, ;, for, (, int, type, =, 0, ;]
[., gridy, ++, ;, }, c, ., gridy, =, saveY, ;, for, (, int, type, =, 0, ;, type, <]
[++, ;, }, c, ., gridy, =, saveY, ;, for, (, int, type, =, 0, ;, type, <, 4, ;]
[++, ;, }, c, ., gridy, =, saveY, ;, for, (, int, type, =, 0, ;, type, <, 4, ;]
[., gridy, =, saveY, ;, for, (, int, type, =, 0, ;, type, <, 4, ;, type, ++, ), {]
[., gridy, =, saveY, ;, for, (, int, type, =, 0, ;, type, <, 4, ;, type, ++, ), {]
[;, for, (, int, type, =, 0, ;, type, <, 4, ;, type, ++, ), {, c, ., gridx, =]
[type, ++, ), {, c, ., gridx, =, 1, ;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :]
[;, for, (, Pair, <, String, ,, RandomVectorGenerator, >, pair, :, generators, ), {, List, <, Vector2D, >, points, =]
[String, ,, RandomVectorGenerator, >, pair, :, generators, ), {, List, <, Vector2D, >, points, =, null, ;, int, samples, =]
[String, ,, RandomVectorGenerator, >, pair, :, generators, ), {, List, <, Vector2D, >, points, =, null, ;, int, samples, =]
[RandomVectorGenerator, >, pair, :, generators, ), {, List, <, Vector2D, >, points, =, null, ;, int, samples, =, datasets, []
[), {, List, <, Vector2D, >, points, =, null, ;, int, samples, =, datasets, [, type, ], ;, switch, (]
[Vector2D, >, points, =, null, ;, int, samples, =, datasets, [, type, ], ;, switch, (, type, ), {, case]
[points, =, null, ;, int, samples, =, datasets, [, type, ], ;, switch, (, type, ), {, case, 0, :]
[null, ;, int, samples, =, datasets, [, type, ], ;, switch, (, type, ), {, case, 0, :, points, =]
[int, samples, =, datasets, [, type, ], ;, switch, (, type, ), {, case, 0, :, points, =, makeRandom, (]
[=, datasets, [, type, ], ;, switch, (, type, ), {, case, 0, :, points, =, makeRandom, (, samples, ,]
[=, datasets, [, type, ], ;, switch, (, type, ), {, case, 0, :, points, =, makeRandom, (, samples, ,]
[{, case, 0, :, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case]
[0, :, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 1, :]
[points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 1, :, points, =]
[makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 1, :, points, =, makeRandom, (]
[samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 1, :, points, =, makeRandom, (, samples, ,]
[samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 1, :, points, =, makeRandom, (, samples, ,]
[;, case, 1, :, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case]
[1, :, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 2, :]
[points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 2, :, points, =]
[makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 2, :, points, =, makeRandom, (]
[samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 2, :, points, =, makeRandom, (, samples, ,]
[samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 2, :, points, =, makeRandom, (, samples, ,]
[;, case, 2, :, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case]
[2, :, points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 3, :]
[points, =, makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 3, :, points, =]
[makeRandom, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 3, :, points, =, makeCircle, (]
[samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 3, :, points, =, makeCircle, (, samples, ,]
[samples, ,, pair, ., getValue, (, ), ), ;, break, ;, case, 3, :, points, =, makeCircle, (, samples, ,]
[;, case, 3, :, points, =, makeCircle, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, }]
[3, :, points, =, makeCircle, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, }, add, (]
[=, makeCircle, (, samples, ,, pair, ., getValue, (, ), ), ;, break, ;, }, add, (, new, Plot, (]
[samples, ,, pair, ., getValue, (, ), ), ;, break, ;, }, add, (, new, Plot, (, points, ), ,]
[., getValue, (, ), ), ;, break, ;, }, add, (, new, Plot, (, points, ), ,, c, ), ;]
[., getValue, (, ), ), ;, break, ;, }, add, (, new, Plot, (, points, ), ,, c, ), ;]
[., getValue, (, ), ), ;, break, ;, }, add, (, new, Plot, (, points, ), ,, c, ), ;]
[break, ;, }, add, (, new, Plot, (, points, ), ,, c, ), ;, c, ., gridx, ++, ;, }]
[break, ;, }, add, (, new, Plot, (, points, ), ,, c, ), ;, c, ., gridx, ++, ;, }]
[break, ;, }, add, (, new, Plot, (, points, ), ,, c, ), ;, c, ., gridx, ++, ;, }]
[points, ), ,, c, ), ;, c, ., gridx, ++, ;, }, c, ., gridy, ++, ;, }, }, }]
[c, ), ;, c, ., gridx, ++, ;, }, c, ., gridy, ++, ;, }, }, }, @, SuppressWarnings, (]
[}, }, }, @, SuppressWarnings, (, "serial", ), public, static, class, Plot, extends, JComponent, {, private, static, double, PAD, =]
[10, ;, private, List, <, Vector2D, >, points, ;, public, Plot, (, final, List, <, Vector2D, >, points, ), {]
[10, ;, private, List, <, Vector2D, >, points, ;, public, Plot, (, final, List, <, Vector2D, >, points, ), {]
[<, Vector2D, >, points, ;, public, Plot, (, final, List, <, Vector2D, >, points, ), {, this, ., points, =]
[points, ), {, this, ., points, =, points, ;, }, @, Override, protected, void, paintComponent, (, Graphics, g, ), {]
[points, ), {, this, ., points, =, points, ;, }, @, Override, protected, void, paintComponent, (, Graphics, g, ), {]
[., points, =, points, ;, }, @, Override, protected, void, paintComponent, (, Graphics, g, ), {, super, ., paintComponent, (]
[@, Override, protected, void, paintComponent, (, Graphics, g, ), {, super, ., paintComponent, (, g, ), ;, Graphics2D, g2, =]
[void, paintComponent, (, Graphics, g, ), {, super, ., paintComponent, (, g, ), ;, Graphics2D, g2, =, (, Graphics2D, )]
[(, Graphics, g, ), {, super, ., paintComponent, (, g, ), ;, Graphics2D, g2, =, (, Graphics2D, ), g, ;]
[(, Graphics, g, ), {, super, ., paintComponent, (, g, ), ;, Graphics2D, g2, =, (, Graphics2D, ), g, ;]
[{, super, ., paintComponent, (, g, ), ;, Graphics2D, g2, =, (, Graphics2D, ), g, ;, g2, ., setRenderingHint, (]
[{, super, ., paintComponent, (, g, ), ;, Graphics2D, g2, =, (, Graphics2D, ), g, ;, g2, ., setRenderingHint, (]
[(, g, ), ;, Graphics2D, g2, =, (, Graphics2D, ), g, ;, g2, ., setRenderingHint, (, RenderingHints, ., KEY_ANTIALIASING, ,]
[(, g, ), ;, Graphics2D, g2, =, (, Graphics2D, ), g, ;, g2, ., setRenderingHint, (, RenderingHints, ., KEY_ANTIALIASING, ,]
[Graphics2D, ), g, ;, g2, ., setRenderingHint, (, RenderingHints, ., KEY_ANTIALIASING, ,, RenderingHints, ., VALUE_ANTIALIAS_ON, ), ;, int, w, =]
[(, RenderingHints, ., KEY_ANTIALIASING, ,, RenderingHints, ., VALUE_ANTIALIAS_ON, ), ;, int, w, =, getWidth, (, ), ;, int, h, =]
[,, RenderingHints, ., VALUE_ANTIALIAS_ON, ), ;, int, w, =, getWidth, (, ), ;, int, h, =, getHeight, (, ), ;]
[,, RenderingHints, ., VALUE_ANTIALIAS_ON, ), ;, int, w, =, getWidth, (, ), ;, int, h, =, getHeight, (, ), ;]
[), ;, int, w, =, getWidth, (, ), ;, int, h, =, getHeight, (, ), ;, g2, ., clearRect, (]
[int, w, =, getWidth, (, ), ;, int, h, =, getHeight, (, ), ;, g2, ., clearRect, (, 0, ,]
[=, getWidth, (, ), ;, int, h, =, getHeight, (, ), ;, g2, ., clearRect, (, 0, ,, 0, ,]
[(, ), ;, int, h, =, getHeight, (, ), ;, g2, ., clearRect, (, 0, ,, 0, ,, w, ,]
[int, h, =, getHeight, (, ), ;, g2, ., clearRect, (, 0, ,, 0, ,, w, ,, h, ), ;]
[int, h, =, getHeight, (, ), ;, g2, ., clearRect, (, 0, ,, 0, ,, w, ,, h, ), ;]
[(, ), ;, g2, ., clearRect, (, 0, ,, 0, ,, w, ,, h, ), ;, g2, ., setPaint, (]
[(, ), ;, g2, ., clearRect, (, 0, ,, 0, ,, w, ,, h, ), ;, g2, ., setPaint, (]
[clearRect, (, 0, ,, 0, ,, w, ,, h, ), ;, g2, ., setPaint, (, Color, ., black, ), ;]
[clearRect, (, 0, ,, 0, ,, w, ,, h, ), ;, g2, ., setPaint, (, Color, ., black, ), ;]
[0, ,, w, ,, h, ), ;, g2, ., setPaint, (, Color, ., black, ), ;, g2, ., drawRect, (]
[w, ,, h, ), ;, g2, ., setPaint, (, Color, ., black, ), ;, g2, ., drawRect, (, 0, ,]
[h, ), ;, g2, ., setPaint, (, Color, ., black, ), ;, g2, ., drawRect, (, 0, ,, 0, ,]
[h, ), ;, g2, ., setPaint, (, Color, ., black, ), ;, g2, ., drawRect, (, 0, ,, 0, ,]
[;, g2, ., setPaint, (, Color, ., black, ), ;, g2, ., drawRect, (, 0, ,, 0, ,, w, -]
[., setPaint, (, Color, ., black, ), ;, g2, ., drawRect, (, 0, ,, 0, ,, w, -, 1, ,]
[., setPaint, (, Color, ., black, ), ;, g2, ., drawRect, (, 0, ,, 0, ,, w, -, 1, ,]
[(, Color, ., black, ), ;, g2, ., drawRect, (, 0, ,, 0, ,, w, -, 1, ,, h, -]
[drawRect, (, 0, ,, 0, ,, w, -, 1, ,, h, -, 1, ), ;, for, (, Vector2D, point, :]
[w, -, 1, ,, h, -, 1, ), ;, for, (, Vector2D, point, :, points, ), {, Vector2D, p, =]
[1, ,, h, -, 1, ), ;, for, (, Vector2D, point, :, points, ), {, Vector2D, p, =, transform, (]
[h, -, 1, ), ;, for, (, Vector2D, point, :, points, ), {, Vector2D, p, =, transform, (, point, ,]
[1, ), ;, for, (, Vector2D, point, :, points, ), {, Vector2D, p, =, transform, (, point, ,, w, ,]
[points, ), {, Vector2D, p, =, transform, (, point, ,, w, ,, h, ), ;, double, [, ], arr, =]
[points, ), {, Vector2D, p, =, transform, (, point, ,, w, ,, h, ), ;, double, [, ], arr, =]
[transform, (, point, ,, w, ,, h, ), ;, double, [, ], arr, =, p, ., toArray, (, ), ;]
[transform, (, point, ,, w, ,, h, ), ;, double, [, ], arr, =, p, ., toArray, (, ), ;]
[w, ,, h, ), ;, double, [, ], arr, =, p, ., toArray, (, ), ;, g2, ., draw, (]
[double, [, ], arr, =, p, ., toArray, (, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (]
[double, [, ], arr, =, p, ., toArray, (, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (]
[double, [, ], arr, =, p, ., toArray, (, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (]
[], arr, =, p, ., toArray, (, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, arr, []
[p, ., toArray, (, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, arr, [, 0, ], -]
[toArray, (, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, arr, [, 0, ], -, 1, ,]
[toArray, (, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, arr, [, 0, ], -, 1, ,]
[toArray, (, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, arr, [, 0, ], -, 1, ,]
[), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, arr, [, 0, ], -, 1, ,, arr, []
[., draw, (, new, Rectangle2D, ., Double, (, arr, [, 0, ], -, 1, ,, arr, [, 1, ], -]
[(, new, Rectangle2D, ., Double, (, arr, [, 0, ], -, 1, ,, arr, [, 1, ], -, 1, ,]
[Rectangle2D, ., Double, (, arr, [, 0, ], -, 1, ,, arr, [, 1, ], -, 1, ,, 2, ,]
[-, 1, ,, 2, ,, 2, ), ), ;, }, }, @, Override, public, Dimension, getPreferredSize, (, ), {, return]
[2, ,, 2, ), ), ;, }, }, @, Override, public, Dimension, getPreferredSize, (, ), {, return, new, Dimension, (]
[2, ), ), ;, }, }, @, Override, public, Dimension, getPreferredSize, (, ), {, return, new, Dimension, (, 140, ,]
[}, private, Vector2D, transform, (, Vector2D, point, ,, int, width, ,, int, height, ), {, double, [, ], arr, =]
[}, private, Vector2D, transform, (, Vector2D, point, ,, int, width, ,, int, height, ), {, double, [, ], arr, =]
[,, int, width, ,, int, height, ), {, double, [, ], arr, =, point, ., toArray, (, ), ;, return]
[,, int, height, ), {, double, [, ], arr, =, point, ., toArray, (, ), ;, return, new, Vector2D, (]
[{, double, [, ], arr, =, point, ., toArray, (, ), ;, return, new, Vector2D, (, new, double, [, ]]
[double, [, ], arr, =, point, ., toArray, (, ), ;, return, new, Vector2D, (, new, double, [, ], {]
[double, [, ], arr, =, point, ., toArray, (, ), ;, return, new, Vector2D, (, new, double, [, ], {]
[], arr, =, point, ., toArray, (, ), ;, return, new, Vector2D, (, new, double, [, ], {, PAD, +]
[], arr, =, point, ., toArray, (, ), ;, return, new, Vector2D, (, new, double, [, ], {, PAD, +]
[], arr, =, point, ., toArray, (, ), ;, return, new, Vector2D, (, new, double, [, ], {, PAD, +]
[arr, =, point, ., toArray, (, ), ;, return, new, Vector2D, (, new, double, [, ], {, PAD, +, (]
[arr, =, point, ., toArray, (, ), ;, return, new, Vector2D, (, new, double, [, ], {, PAD, +, (]
[arr, =, point, ., toArray, (, ), ;, return, new, Vector2D, (, new, double, [, ], {, PAD, +, (]
[point, ., toArray, (, ), ;, return, new, Vector2D, (, new, double, [, ], {, PAD, +, (, arr, []
[(, ), ;, return, new, Vector2D, (, new, double, [, ], {, PAD, +, (, arr, [, 0, ], +]
[return, new, Vector2D, (, new, double, [, ], {, PAD, +, (, arr, [, 0, ], +, 1, ), /]
[Vector2D, (, new, double, [, ], {, PAD, +, (, arr, [, 0, ], +, 1, ), /, 2.0, *]
[(, new, double, [, ], {, PAD, +, (, arr, [, 0, ], +, 1, ), /, 2.0, *, (]
[(, new, double, [, ], {, PAD, +, (, arr, [, 0, ], +, 1, ), /, 2.0, *, (]
[double, [, ], {, PAD, +, (, arr, [, 0, ], +, 1, ), /, 2.0, *, (, width, -]
[double, [, ], {, PAD, +, (, arr, [, 0, ], +, 1, ), /, 2.0, *, (, width, -]
[], {, PAD, +, (, arr, [, 0, ], +, 1, ), /, 2.0, *, (, width, -, 2, *]
[+, (, arr, [, 0, ], +, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,]
[+, (, arr, [, 0, ], +, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,]
[+, (, arr, [, 0, ], +, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,]
[arr, [, 0, ], +, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -]
[0, ], +, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -]
[0, ], +, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -]
[0, ], +, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -]
[], +, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -, (]
[], +, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -, (]
[], +, 1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -, (]
[1, ), /, 2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -, (, arr, []
[2.0, *, (, width, -, 2, *, PAD, ), ,, height, -, PAD, -, (, arr, [, 1, ], +]
[width, -, 2, *, PAD, ), ,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /]
[2, *, PAD, ), ,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *]
[*, PAD, ), ,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (]
[*, PAD, ), ,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (]
[), ,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (, height, -]
[), ,, height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (, height, -]
[height, -, PAD, -, (, arr, [, 1, ], +, 1, ), /, 2.0, *, (, height, -, 2, *]
[2, *, PAD, ), }, ), ;, }, }, public, static, void, main, (, String, [, ], args, ), {]
[2, *, PAD, ), }, ), ;, }, }, public, static, void, main, (, String, [, ], args, ), {]
[}, ), ;, }, }, public, static, void, main, (, String, [, ], args, ), {, ExampleUtils, ., showExampleFrame, (]
