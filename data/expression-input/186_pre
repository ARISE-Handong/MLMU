[xSamples, ,, int, ySamples, ,, double, minX, ,, double, maxX, ,, double, minY, ,, double, maxY, ), {, if, (]
[xSamples, ,, int, ySamples, ,, double, minX, ,, double, maxX, ,, double, minY, ,, double, maxY, ), {, if, (]
[int, ySamples, ,, double, minX, ,, double, maxX, ,, double, minY, ,, double, maxY, ), {, if, (, xSamples, <]
[minX, ,, double, maxX, ,, double, minY, ,, double, maxY, ), {, if, (, xSamples, <, 1, ), {, throw]
[maxX, ,, double, minY, ,, double, maxY, ), {, if, (, xSamples, <, 1, ), {, throw, new, IllegalArgumentException, (]
[maxY, ), {, if, (, xSamples, <, 1, ), {, throw, new, IllegalArgumentException, (, "Requires 'xSamples' > 0", ), ;, }, if, (]
[maxY, ), {, if, (, xSamples, <, 1, ), {, throw, new, IllegalArgumentException, (, "Requires 'xSamples' > 0", ), ;, }, if, (]
[{, if, (, xSamples, <, 1, ), {, throw, new, IllegalArgumentException, (, "Requires 'xSamples' > 0", ), ;, }, if, (, ySamples, <]
[<, 1, ), {, throw, new, IllegalArgumentException, (, "Requires 'xSamples' > 0", ), ;, }, if, (, ySamples, <, 1, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Requires 'xSamples' > 0", ), ;, }, if, (, ySamples, <, 1, ), {, throw, new, IllegalArgumentException, (]
[), ;, }, if, (, ySamples, <, 1, ), {, throw, new, IllegalArgumentException, (, "Requires 'ySamples' > 0", ), ;, }, if, (]
[), ;, }, if, (, ySamples, <, 1, ), {, throw, new, IllegalArgumentException, (, "Requires 'ySamples' > 0", ), ;, }, if, (]
[), ;, }, if, (, ySamples, <, 1, ), {, throw, new, IllegalArgumentException, (, "Requires 'ySamples' > 0", ), ;, }, if, (]
[(, ySamples, <, 1, ), {, throw, new, IllegalArgumentException, (, "Requires 'ySamples' > 0", ), ;, }, if, (, Double, ., isInfinite, (]
[1, ), {, throw, new, IllegalArgumentException, (, "Requires 'ySamples' > 0", ), ;, }, if, (, Double, ., isInfinite, (, minX, ), ||]
[1, ), {, throw, new, IllegalArgumentException, (, "Requires 'ySamples' > 0", ), ;, }, if, (, Double, ., isInfinite, (, minX, ), ||]
[new, IllegalArgumentException, (, "Requires 'ySamples' > 0", ), ;, }, if, (, Double, ., isInfinite, (, minX, ), ||, Double, ., isNaN, (]
[;, }, if, (, Double, ., isInfinite, (, minX, ), ||, Double, ., isNaN, (, minX, ), ), {, throw]
[(, Double, ., isInfinite, (, minX, ), ||, Double, ., isNaN, (, minX, ), ), {, throw, new, IllegalArgumentException, (]
[), ||, Double, ., isNaN, (, minX, ), ), {, throw, new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", ), ;, }, if, (]
[), ||, Double, ., isNaN, (, minX, ), ), {, throw, new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", ), ;, }, if, (]
[), ||, Double, ., isNaN, (, minX, ), ), {, throw, new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", ), ;, }, if, (]
[isNaN, (, minX, ), ), {, throw, new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (]
[), ), {, throw, new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, maxX, ), ||]
[), ), {, throw, new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, maxX, ), ||]
[new, IllegalArgumentException, (, "'minX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, maxX, ), ||, Double, ., isNaN, (]
[;, }, if, (, Double, ., isInfinite, (, maxX, ), ||, Double, ., isNaN, (, maxX, ), ), {, throw]
[(, Double, ., isInfinite, (, maxX, ), ||, Double, ., isNaN, (, maxX, ), ), {, throw, new, IllegalArgumentException, (]
[), ||, Double, ., isNaN, (, maxX, ), ), {, throw, new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", ), ;, }, if, (]
[), ||, Double, ., isNaN, (, maxX, ), ), {, throw, new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", ), ;, }, if, (]
[), ||, Double, ., isNaN, (, maxX, ), ), {, throw, new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", ), ;, }, if, (]
[isNaN, (, maxX, ), ), {, throw, new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (]
[), ), {, throw, new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, minY, ), ||]
[), ), {, throw, new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, minY, ), ||]
[new, IllegalArgumentException, (, "'maxX' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, minY, ), ||, Double, ., isNaN, (]
[;, }, if, (, Double, ., isInfinite, (, minY, ), ||, Double, ., isNaN, (, minY, ), ), {, throw]
[(, Double, ., isInfinite, (, minY, ), ||, Double, ., isNaN, (, minY, ), ), {, throw, new, IllegalArgumentException, (]
[), ||, Double, ., isNaN, (, minY, ), ), {, throw, new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", ), ;, }, if, (]
[), ||, Double, ., isNaN, (, minY, ), ), {, throw, new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", ), ;, }, if, (]
[), ||, Double, ., isNaN, (, minY, ), ), {, throw, new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", ), ;, }, if, (]
[isNaN, (, minY, ), ), {, throw, new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (]
[), ), {, throw, new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, maxY, ), ||]
[), ), {, throw, new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, maxY, ), ||]
[new, IllegalArgumentException, (, "'minY' cannot be INF or NaN.", ), ;, }, if, (, Double, ., isInfinite, (, maxY, ), ||, Double, ., isNaN, (]
[;, }, if, (, Double, ., isInfinite, (, maxY, ), ||, Double, ., isNaN, (, maxY, ), ), {, throw]
[(, Double, ., isInfinite, (, maxY, ), ||, Double, ., isNaN, (, maxY, ), ), {, throw, new, IllegalArgumentException, (]
[(, maxY, ), ||, Double, ., isNaN, (, maxY, ), ), {, throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }]
[(, maxY, ), ||, Double, ., isNaN, (, maxY, ), ), {, throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }]
[Double, ., isNaN, (, maxY, ), ), {, throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }, this, ., xSamples, =]
[isNaN, (, maxY, ), ), {, throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }, this, ., xSamples, =, xSamples, ;]
[isNaN, (, maxY, ), ), {, throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }, this, ., xSamples, =, xSamples, ;]
[), {, throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }, this, ., xSamples, =, xSamples, ;, this, ., ySamples, =]
[throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }, this, ., xSamples, =, xSamples, ;, this, ., ySamples, =, ySamples, ;]
[throw, new, IllegalArgumentException, (, "'maxY' cannot be INF or NaN.", ), ;, }, this, ., xSamples, =, xSamples, ;, this, ., ySamples, =, ySamples, ;]
["'maxY' cannot be INF or NaN.", ), ;, }, this, ., xSamples, =, xSamples, ;, this, ., ySamples, =, ySamples, ;, this, ., minX, =]
[;, }, this, ., xSamples, =, xSamples, ;, this, ., ySamples, =, ySamples, ;, this, ., minX, =, minX, ;]
[;, }, this, ., xSamples, =, xSamples, ;, this, ., ySamples, =, ySamples, ;, this, ., minX, =, minX, ;]
[xSamples, =, xSamples, ;, this, ., ySamples, =, ySamples, ;, this, ., minX, =, minX, ;, this, ., maxX, =]
[xSamples, ;, this, ., ySamples, =, ySamples, ;, this, ., minX, =, minX, ;, this, ., maxX, =, maxX, ;]
[xSamples, ;, this, ., ySamples, =, ySamples, ;, this, ., minX, =, minX, ;, this, ., maxX, =, maxX, ;]
[ySamples, =, ySamples, ;, this, ., minX, =, minX, ;, this, ., maxX, =, maxX, ;, this, ., minY, =]
[ySamples, ;, this, ., minX, =, minX, ;, this, ., maxX, =, maxX, ;, this, ., minY, =, minY, ;]
[ySamples, ;, this, ., minX, =, minX, ;, this, ., maxX, =, maxX, ;, this, ., minY, =, minY, ;]
[minX, =, minX, ;, this, ., maxX, =, maxX, ;, this, ., minY, =, minY, ;, this, ., maxY, =]
[minX, ;, this, ., maxX, =, maxX, ;, this, ., minY, =, minY, ;, this, ., maxY, =, maxY, ;]
[minX, ;, this, ., maxX, =, maxX, ;, this, ., minY, =, minY, ;, this, ., maxY, =, maxY, ;]
[maxX, =, maxX, ;, this, ., minY, =, minY, ;, this, ., maxY, =, maxY, ;, this, ., zValues, =]
[;, this, ., minY, =, minY, ;, this, ., maxY, =, maxY, ;, this, ., zValues, =, new, double, []
[=, maxY, ;, this, ., zValues, =, new, double, [, xSamples, ], [, ], ;, for, (, int, x, =]
[;, this, ., zValues, =, new, double, [, xSamples, ], [, ], ;, for, (, int, x, =, 0, ;]
[;, this, ., zValues, =, new, double, [, xSamples, ], [, ], ;, for, (, int, x, =, 0, ;]
[., zValues, =, new, double, [, xSamples, ], [, ], ;, for, (, int, x, =, 0, ;, x, <]
[=, new, double, [, xSamples, ], [, ], ;, for, (, int, x, =, 0, ;, x, <, xSamples, ;]
[=, new, double, [, xSamples, ], [, ], ;, for, (, int, x, =, 0, ;, x, <, xSamples, ;]
[xSamples, ], [, ], ;, for, (, int, x, =, 0, ;, x, <, xSamples, ;, x, ++, ), {]
[xSamples, ], [, ], ;, for, (, int, x, =, 0, ;, x, <, xSamples, ;, x, ++, ), {]
[xSamples, ], [, ], ;, for, (, int, x, =, 0, ;, x, <, xSamples, ;, x, ++, ), {]
[;, for, (, int, x, =, 0, ;, x, <, xSamples, ;, x, ++, ), {, this, ., zValues, []
[int, x, =, 0, ;, x, <, xSamples, ;, x, ++, ), {, this, ., zValues, [, x, ], =]
[0, ;, x, <, xSamples, ;, x, ++, ), {, this, ., zValues, [, x, ], =, new, double, []
[zValues, [, x, ], =, new, double, [, ySamples, ], ;, }, }, public, int, getXSampleCount, (, ), {, return]
[zValues, [, x, ], =, new, double, [, ySamples, ], ;, }, }, public, int, getXSampleCount, (, ), {, return]
[}, public, int, getXSampleCount, (, ), {, return, this, ., xSamples, ;, }, public, int, getYSampleCount, (, ), {, return]
[}, public, int, getXSampleCount, (, ), {, return, this, ., xSamples, ;, }, public, int, getYSampleCount, (, ), {, return]
[}, public, int, getYSampleCount, (, ), {, return, this, ., ySamples, ;, }, public, double, getMinimumXValue, (, ), {, return]
[}, public, int, getYSampleCount, (, ), {, return, this, ., ySamples, ;, }, public, double, getMinimumXValue, (, ), {, return]
[}, public, double, getMinimumXValue, (, ), {, return, this, ., minX, ;, }, public, double, getMaximumXValue, (, ), {, return]
[}, public, double, getMinimumXValue, (, ), {, return, this, ., minX, ;, }, public, double, getMaximumXValue, (, ), {, return]
[}, public, double, getMaximumXValue, (, ), {, return, this, ., maxX, ;, }, public, double, getMinimumYValue, (, ), {, return]
[}, public, double, getMaximumXValue, (, ), {, return, this, ., maxX, ;, }, public, double, getMinimumYValue, (, ), {, return]
[}, public, double, getMinimumYValue, (, ), {, return, this, ., minY, ;, }, public, double, getMaximumYValue, (, ), {, return]
[}, public, double, getMinimumYValue, (, ), {, return, this, ., minY, ;, }, public, double, getMaximumYValue, (, ), {, return]
[(, ), {, return, this, ., maxY, ;, }, public, double, getXValue, (, int, xIndex, ), {, double, x, =]
[(, ), {, return, this, ., maxY, ;, }, public, double, getXValue, (, int, xIndex, ), {, double, x, =]
[(, ), {, return, this, ., maxY, ;, }, public, double, getXValue, (, int, xIndex, ), {, double, x, =]
[this, ., maxY, ;, }, public, double, getXValue, (, int, xIndex, ), {, double, x, =, this, ., minX, +]
[this, ., maxY, ;, }, public, double, getXValue, (, int, xIndex, ), {, double, x, =, this, ., minX, +]
[., maxY, ;, }, public, double, getXValue, (, int, xIndex, ), {, double, x, =, this, ., minX, +, (]
[., maxY, ;, }, public, double, getXValue, (, int, xIndex, ), {, double, x, =, this, ., minX, +, (]
[., maxY, ;, }, public, double, getXValue, (, int, xIndex, ), {, double, x, =, this, ., minX, +, (]
[public, double, getXValue, (, int, xIndex, ), {, double, x, =, this, ., minX, +, (, this, ., maxX, -]
[public, double, getXValue, (, int, xIndex, ), {, double, x, =, this, ., minX, +, (, this, ., maxX, -]
[xIndex, ), {, double, x, =, this, ., minX, +, (, this, ., maxX, -, this, ., minX, ), *]
[), {, double, x, =, this, ., minX, +, (, this, ., maxX, -, this, ., minX, ), *, (]
[), {, double, x, =, this, ., minX, +, (, this, ., maxX, -, this, ., minX, ), *, (]
[double, x, =, this, ., minX, +, (, this, ., maxX, -, this, ., minX, ), *, (, xIndex, /]
[this, ., minX, +, (, this, ., maxX, -, this, ., minX, ), *, (, xIndex, /, (, double, )]
[this, ., minX, +, (, this, ., maxX, -, this, ., minX, ), *, (, xIndex, /, (, double, )]
[., maxX, -, this, ., minX, ), *, (, xIndex, /, (, double, ), this, ., xSamples, ), ;, return]
[this, ., xSamples, ), ;, return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =]
[this, ., xSamples, ), ;, return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =]
[this, ., xSamples, ), ;, return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =]
[;, return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY, +]
[;, return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY, +]
[return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY, +, (]
[return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY, +, (]
[return, x, ;, }, public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY, +, (]
[public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY, +, (, this, ., maxY, -]
[public, double, getYValue, (, int, yIndex, ), {, double, y, =, this, ., minY, +, (, this, ., maxY, -]
[yIndex, ), {, double, y, =, this, ., minY, +, (, this, ., maxY, -, this, ., minY, ), *]
[), {, double, y, =, this, ., minY, +, (, this, ., maxY, -, this, ., minY, ), *, (]
[), {, double, y, =, this, ., minY, +, (, this, ., maxY, -, this, ., minY, ), *, (]
[double, y, =, this, ., minY, +, (, this, ., maxY, -, this, ., minY, ), *, (, yIndex, /]
[this, ., minY, +, (, this, ., maxY, -, this, ., minY, ), *, (, yIndex, /, (, double, )]
[this, ., minY, +, (, this, ., maxY, -, this, ., minY, ), *, (, yIndex, /, (, double, )]
[., maxY, -, this, ., minY, ), *, (, yIndex, /, (, double, ), this, ., ySamples, ), ;, return]
[., ySamples, ), ;, return, y, ;, }, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return]
[., ySamples, ), ;, return, y, ;, }, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return]
[., ySamples, ), ;, return, y, ;, }, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return]
[., ySamples, ), ;, return, y, ;, }, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return]
[return, y, ;, }, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return, this, ., zValues, []
[}, public, double, getZValue, (, int, xIndex, ,, int, yIndex, ), {, return, this, ., zValues, [, xIndex, ], []
[[, xIndex, ], [, yIndex, ], ;, }, public, Number, getZ, (, int, xIndex, ,, int, yIndex, ), {, return]
[[, yIndex, ], ;, }, public, Number, getZ, (, int, xIndex, ,, int, yIndex, ), {, return, new, Double, (]
[], ;, }, public, Number, getZ, (, int, xIndex, ,, int, yIndex, ), {, return, new, Double, (, getZValue, (]
[}, public, Number, getZ, (, int, xIndex, ,, int, yIndex, ), {, return, new, Double, (, getZValue, (, xIndex, ,]
[,, yIndex, ), ), ;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ), {]
[), ), ;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ), {, setZValue, (]
[;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ), {, setZValue, (, xIndex, ,]
[public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ), {, setZValue, (, xIndex, ,, yIndex, ,]
[setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ), {, setZValue, (, xIndex, ,, yIndex, ,, z, ,]
[), ;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ,, boolean, notify, ), {]
[), ;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ,, boolean, notify, ), {]
[), ;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ,, boolean, notify, ), {]
[), ;, }, public, void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ,, boolean, notify, ), {]
[void, setZValue, (, int, xIndex, ,, int, yIndex, ,, double, z, ,, boolean, notify, ), {, this, ., zValues, []
[int, xIndex, ,, int, yIndex, ,, double, z, ,, boolean, notify, ), {, this, ., zValues, [, xIndex, ], []
[int, yIndex, ,, double, z, ,, boolean, notify, ), {, this, ., zValues, [, xIndex, ], [, yIndex, ], =]
[z, ,, boolean, notify, ), {, this, ., zValues, [, xIndex, ], [, yIndex, ], =, z, ;, if, (]
[notify, ), {, this, ., zValues, [, xIndex, ], [, yIndex, ], =, z, ;, if, (, notify, ), {]
[{, this, ., zValues, [, xIndex, ], [, yIndex, ], =, z, ;, if, (, notify, ), {, fireDatasetChanged, (]
[fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[new, DatasetChangeInfo, (, ), ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultHeatMapDataset, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, DefaultHeatMapDataset, ), ), {, return, false, ;, }, DefaultHeatMapDataset, that, =]
[if, (, !, (, obj, instanceof, DefaultHeatMapDataset, ), ), {, return, false, ;, }, DefaultHeatMapDataset, that, =, (, DefaultHeatMapDataset, )]
[obj, instanceof, DefaultHeatMapDataset, ), ), {, return, false, ;, }, DefaultHeatMapDataset, that, =, (, DefaultHeatMapDataset, ), obj, ;, if, (]
[obj, instanceof, DefaultHeatMapDataset, ), ), {, return, false, ;, }, DefaultHeatMapDataset, that, =, (, DefaultHeatMapDataset, ), obj, ;, if, (]
[obj, instanceof, DefaultHeatMapDataset, ), ), {, return, false, ;, }, DefaultHeatMapDataset, that, =, (, DefaultHeatMapDataset, ), obj, ;, if, (]
[), {, return, false, ;, }, DefaultHeatMapDataset, that, =, (, DefaultHeatMapDataset, ), obj, ;, if, (, this, ., xSamples, !=]
[), {, return, false, ;, }, DefaultHeatMapDataset, that, =, (, DefaultHeatMapDataset, ), obj, ;, if, (, this, ., xSamples, !=]
[DefaultHeatMapDataset, that, =, (, DefaultHeatMapDataset, ), obj, ;, if, (, this, ., xSamples, !=, that, ., xSamples, ), {, return]
[), obj, ;, if, (, this, ., xSamples, !=, that, ., xSamples, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., xSamples, !=, that, ., xSamples, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., xSamples, !=, that, ., xSamples, ), {, return, false, ;, }, if, (]
[(, this, ., xSamples, !=, that, ., xSamples, ), {, return, false, ;, }, if, (, this, ., ySamples, !=]
[(, this, ., xSamples, !=, that, ., xSamples, ), {, return, false, ;, }, if, (, this, ., ySamples, !=]
[., xSamples, ), {, return, false, ;, }, if, (, this, ., ySamples, !=, that, ., ySamples, ), {, return]
[false, ;, }, if, (, this, ., ySamples, !=, that, ., ySamples, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., ySamples, !=, that, ., ySamples, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., ySamples, !=, that, ., ySamples, ), {, return, false, ;, }, if, (]
[(, this, ., ySamples, !=, that, ., ySamples, ), {, return, false, ;, }, if, (, this, ., minX, !=]
[(, this, ., ySamples, !=, that, ., ySamples, ), {, return, false, ;, }, if, (, this, ., minX, !=]
[., ySamples, ), {, return, false, ;, }, if, (, this, ., minX, !=, that, ., minX, ), {, return]
[false, ;, }, if, (, this, ., minX, !=, that, ., minX, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., minX, !=, that, ., minX, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., minX, !=, that, ., minX, ), {, return, false, ;, }, if, (]
[(, this, ., minX, !=, that, ., minX, ), {, return, false, ;, }, if, (, this, ., maxX, !=]
[(, this, ., minX, !=, that, ., minX, ), {, return, false, ;, }, if, (, this, ., maxX, !=]
[., minX, ), {, return, false, ;, }, if, (, this, ., maxX, !=, that, ., maxX, ), {, return]
[false, ;, }, if, (, this, ., maxX, !=, that, ., maxX, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., maxX, !=, that, ., maxX, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., maxX, !=, that, ., maxX, ), {, return, false, ;, }, if, (]
[(, this, ., maxX, !=, that, ., maxX, ), {, return, false, ;, }, if, (, this, ., minY, !=]
[(, this, ., maxX, !=, that, ., maxX, ), {, return, false, ;, }, if, (, this, ., minY, !=]
[., maxX, ), {, return, false, ;, }, if, (, this, ., minY, !=, that, ., minY, ), {, return]
[false, ;, }, if, (, this, ., minY, !=, that, ., minY, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., minY, !=, that, ., minY, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., minY, !=, that, ., minY, ), {, return, false, ;, }, if, (]
[(, this, ., minY, !=, that, ., minY, ), {, return, false, ;, }, if, (, this, ., maxY, !=]
[(, this, ., minY, !=, that, ., minY, ), {, return, false, ;, }, if, (, this, ., maxY, !=]
[., minY, ), {, return, false, ;, }, if, (, this, ., maxY, !=, that, ., maxY, ), {, return]
[false, ;, }, if, (, this, ., maxY, !=, that, ., maxY, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., maxY, !=, that, ., maxY, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., maxY, !=, that, ., maxY, ), {, return, false, ;, }, if, (, !]
[this, ., maxY, !=, that, ., maxY, ), {, return, false, ;, }, if, (, !, DataUtilities, ., equal, (]
[this, ., maxY, !=, that, ., maxY, ), {, return, false, ;, }, if, (, !, DataUtilities, ., equal, (]
[that, ., maxY, ), {, return, false, ;, }, if, (, !, DataUtilities, ., equal, (, this, ., zValues, ,]
[that, ., maxY, ), {, return, false, ;, }, if, (, !, DataUtilities, ., equal, (, this, ., zValues, ,]
[;, }, if, (, !, DataUtilities, ., equal, (, this, ., zValues, ,, that, ., zValues, ), ), {, return]
[!, DataUtilities, ., equal, (, this, ., zValues, ,, that, ., zValues, ), ), {, return, false, ;, }, return]
[{, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultHeatMapDataset, clone, =]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultHeatMapDataset, clone, =, (, DefaultHeatMapDataset, )]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultHeatMapDataset, clone, =, (, DefaultHeatMapDataset, )]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultHeatMapDataset, clone, =, (, DefaultHeatMapDataset, ), super, ., clone, (, ), ;]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, DefaultHeatMapDataset, clone, =, (, DefaultHeatMapDataset, ), super, ., clone, (, ), ;]
[), throws, CloneNotSupportedException, {, DefaultHeatMapDataset, clone, =, (, DefaultHeatMapDataset, ), super, ., clone, (, ), ;, clone, ., zValues, =]
[), throws, CloneNotSupportedException, {, DefaultHeatMapDataset, clone, =, (, DefaultHeatMapDataset, ), super, ., clone, (, ), ;, clone, ., zValues, =]
[DefaultHeatMapDataset, clone, =, (, DefaultHeatMapDataset, ), super, ., clone, (, ), ;, clone, ., zValues, =, DataUtilities, ., clone, (]
[DefaultHeatMapDataset, clone, =, (, DefaultHeatMapDataset, ), super, ., clone, (, ), ;, clone, ., zValues, =, DataUtilities, ., clone, (]
[super, ., clone, (, ), ;, clone, ., zValues, =, DataUtilities, ., clone, (, this, ., zValues, ), ;, return]
