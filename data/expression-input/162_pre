[., Map, ;, import, java, ., util, ., Properties, ;, public, class, StrSubstitutor, {, public, static, final, char, DEFAULT_ESCAPE, =]
[Properties, ;, public, class, StrSubstitutor, {, public, static, final, char, DEFAULT_ESCAPE, =, '$', ;, public, static, final, StrMatcher, DEFAULT_PREFIX, =]
[Properties, ;, public, class, StrSubstitutor, {, public, static, final, char, DEFAULT_ESCAPE, =, '$', ;, public, static, final, StrMatcher, DEFAULT_PREFIX, =]
[StrSubstitutor, {, public, static, final, char, DEFAULT_ESCAPE, =, '$', ;, public, static, final, StrMatcher, DEFAULT_PREFIX, =, StrMatcher, ., stringMatcher, (]
[;, public, static, final, StrMatcher, DEFAULT_PREFIX, =, StrMatcher, ., stringMatcher, (, "${", ), ;, public, static, final, StrMatcher, DEFAULT_SUFFIX, =]
[;, public, static, final, StrMatcher, DEFAULT_PREFIX, =, StrMatcher, ., stringMatcher, (, "${", ), ;, public, static, final, StrMatcher, DEFAULT_SUFFIX, =]
[StrMatcher, DEFAULT_PREFIX, =, StrMatcher, ., stringMatcher, (, "${", ), ;, public, static, final, StrMatcher, DEFAULT_SUFFIX, =, StrMatcher, ., stringMatcher, (]
[V, >, String, replace, (, final, Object, source, ,, final, Map, <, String, ,, V, >, valueMap, ), {, return]
[V, >, String, replace, (, final, Object, source, ,, final, Map, <, String, ,, V, >, valueMap, ), {, return]
[replace, (, final, Object, source, ,, final, Map, <, String, ,, V, >, valueMap, ), {, return, new, StrSubstitutor, (]
[,, final, Map, <, String, ,, V, >, valueMap, ), {, return, new, StrSubstitutor, (, valueMap, ), ., replace, (]
[,, final, Map, <, String, ,, V, >, valueMap, ,, final, String, prefix, ,, final, String, suffix, ), {, return]
[,, final, Map, <, String, ,, V, >, valueMap, ,, final, String, prefix, ,, final, String, suffix, ), {, return]
[<, String, ,, V, >, valueMap, ,, final, String, prefix, ,, final, String, suffix, ), {, return, new, StrSubstitutor, (]
[,, V, >, valueMap, ,, final, String, prefix, ,, final, String, suffix, ), {, return, new, StrSubstitutor, (, valueMap, ,]
[>, valueMap, ,, final, String, prefix, ,, final, String, suffix, ), {, return, new, StrSubstitutor, (, valueMap, ,, prefix, ,]
[prefix, ,, final, String, suffix, ), {, return, new, StrSubstitutor, (, valueMap, ,, prefix, ,, suffix, ), ., replace, (]
[source, ), ;, }, public, static, String, replace, (, final, Object, source, ,, final, Properties, valueProperties, ), {, if, (]
[source, ), ;, }, public, static, String, replace, (, final, Object, source, ,, final, Properties, valueProperties, ), {, if, (]
[;, }, public, static, String, replace, (, final, Object, source, ,, final, Properties, valueProperties, ), {, if, (, valueProperties, ==]
[String, replace, (, final, Object, source, ,, final, Properties, valueProperties, ), {, if, (, valueProperties, ==, null, ), {, return]
[String, replace, (, final, Object, source, ,, final, Properties, valueProperties, ), {, if, (, valueProperties, ==, null, ), {, return]
[null, ), {, return, source, ., toString, (, ), ;, }, final, Map, <, String, ,, String, >, valueMap, =]
[>, valueMap, =, new, HashMap, <, String, ,, String, >, (, ), ;, final, Enumeration, <, ?, >, propNames, =]
[>, valueMap, =, new, HashMap, <, String, ,, String, >, (, ), ;, final, Enumeration, <, ?, >, propNames, =]
[String, >, (, ), ;, final, Enumeration, <, ?, >, propNames, =, valueProperties, ., propertyNames, (, ), ;, while, (]
[String, >, (, ), ;, final, Enumeration, <, ?, >, propNames, =, valueProperties, ., propertyNames, (, ), ;, while, (]
[=, valueProperties, ., propertyNames, (, ), ;, while, (, propNames, ., hasMoreElements, (, ), ), {, final, String, propName, =]
[propertyNames, (, ), ;, while, (, propNames, ., hasMoreElements, (, ), ), {, final, String, propName, =, (, String, )]
[propertyNames, (, ), ;, while, (, propNames, ., hasMoreElements, (, ), ), {, final, String, propName, =, (, String, )]
[), ), {, final, String, propName, =, (, String, ), propNames, ., nextElement, (, ), ;, final, String, propValue, =]
[), ), {, final, String, propName, =, (, String, ), propNames, ., nextElement, (, ), ;, final, String, propValue, =]
[String, propName, =, (, String, ), propNames, ., nextElement, (, ), ;, final, String, propValue, =, valueProperties, ., getProperty, (]
[(, String, ), propNames, ., nextElement, (, ), ;, final, String, propValue, =, valueProperties, ., getProperty, (, propName, ), ;]
[(, String, ), propNames, ., nextElement, (, ), ;, final, String, propValue, =, valueProperties, ., getProperty, (, propName, ), ;]
[., nextElement, (, ), ;, final, String, propValue, =, valueProperties, ., getProperty, (, propName, ), ;, valueMap, ., put, (]
[(, ), ;, final, String, propValue, =, valueProperties, ., getProperty, (, propName, ), ;, valueMap, ., put, (, propName, ,]
[propValue, =, valueProperties, ., getProperty, (, propName, ), ;, valueMap, ., put, (, propName, ,, propValue, ), ;, }, return]
[propValue, =, valueProperties, ., getProperty, (, propName, ), ;, valueMap, ., put, (, propName, ,, propValue, ), ;, }, return]
[getProperty, (, propName, ), ;, valueMap, ., put, (, propName, ,, propValue, ), ;, }, return, StrSubstitutor, ., replace, (]
[propName, ), ;, valueMap, ., put, (, propName, ,, propValue, ), ;, }, return, StrSubstitutor, ., replace, (, source, ,]
[., replace, (, source, ,, valueMap, ), ;, }, public, static, String, replaceSystemProperties, (, final, Object, source, ), {, return]
[., replace, (, source, ,, valueMap, ), ;, }, public, static, String, replaceSystemProperties, (, final, Object, source, ), {, return]
[source, ,, valueMap, ), ;, }, public, static, String, replaceSystemProperties, (, final, Object, source, ), {, return, new, StrSubstitutor, (]
[source, ,, valueMap, ), ;, }, public, static, String, replaceSystemProperties, (, final, Object, source, ), {, return, new, StrSubstitutor, (]
[replaceSystemProperties, (, final, Object, source, ), {, return, new, StrSubstitutor, (, StrLookup, ., systemPropertiesLookup, (, ), ), ., replace, (]
[StrLookup, ., systemPropertiesLookup, (, ), ), ., replace, (, source, ), ;, }, public, StrSubstitutor, (, ), {, this, (]
[., replace, (, source, ), ;, }, public, StrSubstitutor, (, ), {, this, (, (, StrLookup, <, ?, >, )]
[(, source, ), ;, }, public, StrSubstitutor, (, ), {, this, (, (, StrLookup, <, ?, >, ), null, ,]
[), ;, }, public, StrSubstitutor, (, ), {, this, (, (, StrLookup, <, ?, >, ), null, ,, DEFAULT_PREFIX, ,]
[}, public, StrSubstitutor, (, ), {, this, (, (, StrLookup, <, ?, >, ), null, ,, DEFAULT_PREFIX, ,, DEFAULT_SUFFIX, ,]
[;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,, V, >, valueMap, ), {, this, (]
[;, }, public, <, V, >, StrSubstitutor, (, final, Map, <, String, ,, V, >, valueMap, ), {, this, (]
[V, >, StrSubstitutor, (, final, Map, <, String, ,, V, >, valueMap, ), {, this, (, StrLookup, ., mapLookup, (]
[(, final, Map, <, String, ,, V, >, valueMap, ), {, this, (, StrLookup, ., mapLookup, (, valueMap, ), ,]
[Map, <, String, ,, V, >, valueMap, ), {, this, (, StrLookup, ., mapLookup, (, valueMap, ), ,, DEFAULT_PREFIX, ,]
[String, ,, V, >, valueMap, ), {, this, (, StrLookup, ., mapLookup, (, valueMap, ), ,, DEFAULT_PREFIX, ,, DEFAULT_SUFFIX, ,]
[final, Map, <, String, ,, V, >, valueMap, ,, final, String, prefix, ,, final, String, suffix, ), {, this, (]
[final, Map, <, String, ,, V, >, valueMap, ,, final, String, prefix, ,, final, String, suffix, ), {, this, (]
[,, V, >, valueMap, ,, final, String, prefix, ,, final, String, suffix, ), {, this, (, StrLookup, ., mapLookup, (]
[valueMap, ,, final, String, prefix, ,, final, String, suffix, ), {, this, (, StrLookup, ., mapLookup, (, valueMap, ), ,]
[final, String, prefix, ,, final, String, suffix, ), {, this, (, StrLookup, ., mapLookup, (, valueMap, ), ,, prefix, ,]
[prefix, ,, final, String, suffix, ), {, this, (, StrLookup, ., mapLookup, (, valueMap, ), ,, prefix, ,, suffix, ,]
[,, V, >, valueMap, ,, final, String, prefix, ,, final, String, suffix, ,, final, char, escape, ), {, this, (]
[,, V, >, valueMap, ,, final, String, prefix, ,, final, String, suffix, ,, final, char, escape, ), {, this, (]
[,, final, String, prefix, ,, final, String, suffix, ,, final, char, escape, ), {, this, (, StrLookup, ., mapLookup, (]
[prefix, ,, final, String, suffix, ,, final, char, escape, ), {, this, (, StrLookup, ., mapLookup, (, valueMap, ), ,]
[final, String, suffix, ,, final, char, escape, ), {, this, (, StrLookup, ., mapLookup, (, valueMap, ), ,, prefix, ,]
[suffix, ,, final, char, escape, ), {, this, (, StrLookup, ., mapLookup, (, valueMap, ), ,, prefix, ,, suffix, ,]
[,, suffix, ,, escape, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ), {, this, (]
[,, escape, ), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ), {, this, (, variableResolver, ,]
[), ;, }, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ), {, this, (, variableResolver, ,, DEFAULT_PREFIX, ,]
[}, public, StrSubstitutor, (, final, StrLookup, <, ?, >, variableResolver, ), {, this, (, variableResolver, ,, DEFAULT_PREFIX, ,, DEFAULT_SUFFIX, ,]
[final, StrLookup, <, ?, >, variableResolver, ,, final, String, prefix, ,, final, String, suffix, ,, final, char, escape, ), {]
[final, StrLookup, <, ?, >, variableResolver, ,, final, String, prefix, ,, final, String, suffix, ,, final, char, escape, ), {]
[>, variableResolver, ,, final, String, prefix, ,, final, String, suffix, ,, final, char, escape, ), {, this, ., setVariableResolver, (]
[final, String, prefix, ,, final, String, suffix, ,, final, char, escape, ), {, this, ., setVariableResolver, (, variableResolver, ), ;]
[final, String, prefix, ,, final, String, suffix, ,, final, char, escape, ), {, this, ., setVariableResolver, (, variableResolver, ), ;]
[final, String, suffix, ,, final, char, escape, ), {, this, ., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefix, (]
[,, final, char, escape, ), {, this, ., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefix, (, prefix, ), ;]
[,, final, char, escape, ), {, this, ., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefix, (, prefix, ), ;]
[), {, this, ., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefix, (, prefix, ), ;, this, ., setVariableSuffix, (]
[., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefix, (, prefix, ), ;, this, ., setVariableSuffix, (, suffix, ), ;]
[., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefix, (, prefix, ), ;, this, ., setVariableSuffix, (, suffix, ), ;]
[), ;, this, ., setVariablePrefix, (, prefix, ), ;, this, ., setVariableSuffix, (, suffix, ), ;, this, ., setEscapeChar, (]
[final, StrLookup, <, ?, >, variableResolver, ,, final, StrMatcher, prefixMatcher, ,, final, StrMatcher, suffixMatcher, ,, final, char, escape, ), {]
[final, StrLookup, <, ?, >, variableResolver, ,, final, StrMatcher, prefixMatcher, ,, final, StrMatcher, suffixMatcher, ,, final, char, escape, ), {]
[>, variableResolver, ,, final, StrMatcher, prefixMatcher, ,, final, StrMatcher, suffixMatcher, ,, final, char, escape, ), {, this, ., setVariableResolver, (]
[final, StrMatcher, prefixMatcher, ,, final, StrMatcher, suffixMatcher, ,, final, char, escape, ), {, this, ., setVariableResolver, (, variableResolver, ), ;]
[final, StrMatcher, prefixMatcher, ,, final, StrMatcher, suffixMatcher, ,, final, char, escape, ), {, this, ., setVariableResolver, (, variableResolver, ), ;]
[final, StrMatcher, suffixMatcher, ,, final, char, escape, ), {, this, ., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefixMatcher, (]
[,, final, char, escape, ), {, this, ., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefixMatcher, (, prefixMatcher, ), ;]
[,, final, char, escape, ), {, this, ., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefixMatcher, (, prefixMatcher, ), ;]
[), {, this, ., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefixMatcher, (, prefixMatcher, ), ;, this, ., setVariableSuffixMatcher, (]
[., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefixMatcher, (, prefixMatcher, ), ;, this, ., setVariableSuffixMatcher, (, suffixMatcher, ), ;]
[., setVariableResolver, (, variableResolver, ), ;, this, ., setVariablePrefixMatcher, (, prefixMatcher, ), ;, this, ., setVariableSuffixMatcher, (, suffixMatcher, ), ;]
[), ;, this, ., setVariablePrefixMatcher, (, prefixMatcher, ), ;, this, ., setVariableSuffixMatcher, (, suffixMatcher, ), ;, this, ., setEscapeChar, (]
[;, this, ., setEscapeChar, (, escape, ), ;, }, public, String, replace, (, final, String, source, ), {, if, (]
[;, this, ., setEscapeChar, (, escape, ), ;, }, public, String, replace, (, final, String, source, ), {, if, (]
[., setEscapeChar, (, escape, ), ;, }, public, String, replace, (, final, String, source, ), {, if, (, source, ==]
[), ;, }, public, String, replace, (, final, String, source, ), {, if, (, source, ==, null, ), {, return]
[final, String, source, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ), ;, if, (]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ), ;, if, (]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ), ;, if, (, substitute, (]
[return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ), ;, if, (, substitute, (, buf, ,]
[;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ), ;, if, (, substitute, (, buf, ,, 0, ,]
[;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ), ;, if, (, substitute, (, buf, ,, 0, ,]
[StrBuilder, (, source, ), ;, if, (, substitute, (, buf, ,, 0, ,, source, ., length, (, ), ), ==]
[;, if, (, substitute, (, buf, ,, 0, ,, source, ., length, (, ), ), ==, false, ), {, return]
[(, buf, ,, 0, ,, source, ., length, (, ), ), ==, false, ), {, return, source, ;, }, return]
[(, buf, ,, 0, ,, source, ., length, (, ), ), ==, false, ), {, return, source, ;, }, return]
[}, public, String, replace, (, final, String, source, ,, final, int, offset, ,, final, int, length, ), {, if, (]
[}, public, String, replace, (, final, String, source, ,, final, int, offset, ,, final, int, length, ), {, if, (]
[String, replace, (, final, String, source, ,, final, int, offset, ,, final, int, length, ), {, if, (, source, ==]
[String, source, ,, final, int, offset, ,, final, int, length, ), {, if, (, source, ==, null, ), {, return]
[final, int, length, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[final, int, length, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,]
[StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (]
[StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (]
[=, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (]
[StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,]
[length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,]
[append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==]
[offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return]
[offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return]
[;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, source, ., substring, (]
[(, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, source, ., substring, (, offset, ,]
[(, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, source, ., substring, (, offset, ,]
[(, buf, ,, 0, ,, length, ), ==, false, ), {, return, source, ., substring, (, offset, ,, offset, +]
[length, ), ==, false, ), {, return, source, ., substring, (, offset, ,, offset, +, length, ), ;, }, return]
[length, ), ==, false, ), {, return, source, ., substring, (, offset, ,, offset, +, length, ), ;, }, return]
[buf, ., toString, (, ), ;, }, public, String, replace, (, final, char, [, ], source, ), {, if, (]
[buf, ., toString, (, ), ;, }, public, String, replace, (, final, char, [, ], source, ), {, if, (]
[toString, (, ), ;, }, public, String, replace, (, final, char, [, ], source, ), {, if, (, source, ==]
[}, public, String, replace, (, final, char, [, ], source, ), {, if, (, source, ==, null, ), {, return]
[[, ], source, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[[, ], source, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (]
[), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, ), ., append, (]
[null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, ), ., append, (, source, ), ;]
[}, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, ), ., append, (, source, ), ;, substitute, (]
[StrBuilder, buf, =, new, StrBuilder, (, source, ., length, ), ., append, (, source, ), ;, substitute, (, buf, ,]
[=, new, StrBuilder, (, source, ., length, ), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,]
[=, new, StrBuilder, (, source, ., length, ), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,]
[length, ), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, source, ., length, ), ;, return]
[length, ), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, source, ., length, ), ;, return]
[String, replace, (, final, char, [, ], source, ,, final, int, offset, ,, final, int, length, ), {, if, (]
[String, replace, (, final, char, [, ], source, ,, final, int, offset, ,, final, int, length, ), {, if, (]
[(, final, char, [, ], source, ,, final, int, offset, ,, final, int, length, ), {, if, (, source, ==]
[], source, ,, final, int, offset, ,, final, int, length, ), {, if, (, source, ==, null, ), {, return]
[final, int, length, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[final, int, length, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,]
[}, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;]
[StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (]
[=, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,]
[StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,]
[., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return]
[., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return]
[;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StringBuffer, source, ), {, if, (]
[;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StringBuffer, source, ), {, if, (]
[buf, ., toString, (, ), ;, }, public, String, replace, (, final, StringBuffer, source, ), {, if, (, source, ==]
[), ;, }, public, String, replace, (, final, StringBuffer, source, ), {, if, (, source, ==, null, ), {, return]
[final, StringBuffer, source, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[final, StringBuffer, source, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (]
[), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (]
[return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, ), ), ., append, (]
[}, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, ), ), ., append, (, source, ), ;]
[StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, ), ), ., append, (, source, ), ;, substitute, (]
[=, new, StrBuilder, (, source, ., length, (, ), ), ., append, (, source, ), ;, substitute, (, buf, ,]
[StrBuilder, (, source, ., length, (, ), ), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,]
[StrBuilder, (, source, ., length, (, ), ), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,]
[., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return]
[., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return]
[}, public, String, replace, (, final, StringBuffer, source, ,, final, int, offset, ,, final, int, length, ), {, if, (]
[}, public, String, replace, (, final, StringBuffer, source, ,, final, int, offset, ,, final, int, length, ), {, if, (]
[String, replace, (, final, StringBuffer, source, ,, final, int, offset, ,, final, int, length, ), {, if, (, source, ==]
[StringBuffer, source, ,, final, int, offset, ,, final, int, length, ), {, if, (, source, ==, null, ), {, return]
[final, int, length, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[final, int, length, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,]
[}, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;]
[StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (]
[=, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,]
[StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,]
[., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return]
[., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return]
[), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, CharSequence, source, ), {, if, (]
[), ;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, CharSequence, source, ), {, if, (]
[return, buf, ., toString, (, ), ;, }, public, String, replace, (, CharSequence, source, ), {, if, (, source, ==]
[(, ), ;, }, public, String, replace, (, CharSequence, source, ), {, if, (, source, ==, null, ), {, return]
[public, String, replace, (, CharSequence, source, ), {, if, (, source, ==, null, ), {, return, null, ;, }, return]
[replace, (, CharSequence, source, ), {, if, (, source, ==, null, ), {, return, null, ;, }, return, replace, (]
[CharSequence, source, ), {, if, (, source, ==, null, ), {, return, null, ;, }, return, replace, (, source, ,]
[), {, if, (, source, ==, null, ), {, return, null, ;, }, return, replace, (, source, ,, 0, ,]
[), {, if, (, source, ==, null, ), {, return, null, ;, }, return, replace, (, source, ,, 0, ,]
[), ), ;, }, public, String, replace, (, CharSequence, source, ,, int, offset, ,, int, length, ), {, if, (]
[), ), ;, }, public, String, replace, (, CharSequence, source, ,, int, offset, ,, int, length, ), {, if, (]
[;, }, public, String, replace, (, CharSequence, source, ,, int, offset, ,, int, length, ), {, if, (, source, ==]
[replace, (, CharSequence, source, ,, int, offset, ,, int, length, ), {, if, (, source, ==, null, ), {, return]
[offset, ,, int, length, ), {, if, (, source, ==, null, ), {, return, null, ;, }, StrBuilder, buf, =]
[offset, ,, int, length, ), {, if, (, source, ==, null, ), {, return, null, ;, }, StrBuilder, buf, =]
[length, ), {, if, (, source, ==, null, ), {, return, null, ;, }, StrBuilder, buf, =, new, StrBuilder, (]
[source, ==, null, ), {, return, null, ;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (]
[null, ), {, return, null, ;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[{, return, null, ;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,]
[;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;]
[StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (]
[=, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,]
[StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,]
[., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return]
[., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return]
[;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StrBuilder, source, ), {, if, (]
[;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, StrBuilder, source, ), {, if, (]
[buf, ., toString, (, ), ;, }, public, String, replace, (, final, StrBuilder, source, ), {, if, (, source, ==]
[), ;, }, public, String, replace, (, final, StrBuilder, source, ), {, if, (, source, ==, null, ), {, return]
[final, StrBuilder, source, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[final, StrBuilder, source, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (]
[), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (]
[return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, ), ), ., append, (]
[}, final, StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, ), ), ., append, (, source, ), ;]
[StrBuilder, buf, =, new, StrBuilder, (, source, ., length, (, ), ), ., append, (, source, ), ;, substitute, (]
[=, new, StrBuilder, (, source, ., length, (, ), ), ., append, (, source, ), ;, substitute, (, buf, ,]
[StrBuilder, (, source, ., length, (, ), ), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,]
[StrBuilder, (, source, ., length, (, ), ), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,]
[., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return]
[., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return]
[}, public, String, replace, (, final, StrBuilder, source, ,, final, int, offset, ,, final, int, length, ), {, if, (]
[}, public, String, replace, (, final, StrBuilder, source, ,, final, int, offset, ,, final, int, length, ), {, if, (]
[String, replace, (, final, StrBuilder, source, ,, final, int, offset, ,, final, int, length, ), {, if, (, source, ==]
[StrBuilder, source, ,, final, int, offset, ,, final, int, length, ), {, if, (, source, ==, null, ), {, return]
[final, int, length, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[final, int, length, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (]
[==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,]
[}, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;]
[StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (]
[=, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,]
[StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,]
[., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return]
[., append, (, source, ,, offset, ,, length, ), ;, substitute, (, buf, ,, 0, ,, length, ), ;, return]
[;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, Object, source, ), {, if, (]
[;, return, buf, ., toString, (, ), ;, }, public, String, replace, (, final, Object, source, ), {, if, (]
[buf, ., toString, (, ), ;, }, public, String, replace, (, final, Object, source, ), {, if, (, source, ==]
[), ;, }, public, String, replace, (, final, Object, source, ), {, if, (, source, ==, null, ), {, return]
[final, Object, source, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[final, Object, source, ), {, if, (, source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =]
[source, ==, null, ), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, ), ., append, (]
[), {, return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, ), ., append, (, source, ), ;]
[return, null, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, ), ., append, (, source, ), ;, substitute, (]
[;, }, final, StrBuilder, buf, =, new, StrBuilder, (, ), ., append, (, source, ), ;, substitute, (, buf, ,]
[final, StrBuilder, buf, =, new, StrBuilder, (, ), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,]
[final, StrBuilder, buf, =, new, StrBuilder, (, ), ., append, (, source, ), ;, substitute, (, buf, ,, 0, ,]
[., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return]
[., append, (, source, ), ;, substitute, (, buf, ,, 0, ,, buf, ., length, (, ), ), ;, return]
[;, return, buf, ., toString, (, ), ;, }, public, boolean, replaceIn, (, final, StringBuffer, source, ), {, if, (]
[;, return, buf, ., toString, (, ), ;, }, public, boolean, replaceIn, (, final, StringBuffer, source, ), {, if, (]
[buf, ., toString, (, ), ;, }, public, boolean, replaceIn, (, final, StringBuffer, source, ), {, if, (, source, ==]
[), ;, }, public, boolean, replaceIn, (, final, StringBuffer, source, ), {, if, (, source, ==, null, ), {, return]
[boolean, replaceIn, (, final, StringBuffer, source, ), {, if, (, source, ==, null, ), {, return, false, ;, }, return]
[(, final, StringBuffer, source, ), {, if, (, source, ==, null, ), {, return, false, ;, }, return, replaceIn, (]
[StringBuffer, source, ), {, if, (, source, ==, null, ), {, return, false, ;, }, return, replaceIn, (, source, ,]
[), {, if, (, source, ==, null, ), {, return, false, ;, }, return, replaceIn, (, source, ,, 0, ,]
[), {, if, (, source, ==, null, ), {, return, false, ;, }, return, replaceIn, (, source, ,, 0, ,]
[}, public, boolean, replaceIn, (, final, StringBuffer, source, ,, final, int, offset, ,, final, int, length, ), {, if, (]
[}, public, boolean, replaceIn, (, final, StringBuffer, source, ,, final, int, offset, ,, final, int, length, ), {, if, (]
[boolean, replaceIn, (, final, StringBuffer, source, ,, final, int, offset, ,, final, int, length, ), {, if, (, source, ==]
[StringBuffer, source, ,, final, int, offset, ,, final, int, length, ), {, if, (, source, ==, null, ), {, return]
[final, int, length, ), {, if, (, source, ==, null, ), {, return, false, ;, }, final, StrBuilder, buf, =]
[final, int, length, ), {, if, (, source, ==, null, ), {, return, false, ;, }, final, StrBuilder, buf, =]
[), {, if, (, source, ==, null, ), {, return, false, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (]
[==, null, ), {, return, false, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (]
[), {, return, false, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[return, false, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,]
[StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (]
[StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (]
[=, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (]
[StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,]
[length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,]
[append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==]
[offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return]
[), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }]
[), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }]
[substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (]
[buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,]
[buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,]
[0, ,, length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +]
[length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length, ,]
[length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length, ,]
[;, }, source, ., replace, (, offset, ,, offset, +, length, ,, buf, ., toString, (, ), ), ;, return]
[., toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (, StringBuilder, source, ), {, if, (]
[., toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (, StringBuilder, source, ), {, if, (]
[(, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (, StringBuilder, source, ), {, if, (, source, ==]
[return, true, ;, }, public, boolean, replaceIn, (, StringBuilder, source, ), {, if, (, source, ==, null, ), {, return]
[public, boolean, replaceIn, (, StringBuilder, source, ), {, if, (, source, ==, null, ), {, return, false, ;, }, return]
[replaceIn, (, StringBuilder, source, ), {, if, (, source, ==, null, ), {, return, false, ;, }, return, replaceIn, (]
[StringBuilder, source, ), {, if, (, source, ==, null, ), {, return, false, ;, }, return, replaceIn, (, source, ,]
[), {, if, (, source, ==, null, ), {, return, false, ;, }, return, replaceIn, (, source, ,, 0, ,]
[), {, if, (, source, ==, null, ), {, return, false, ;, }, return, replaceIn, (, source, ,, 0, ,]
[), ), ;, }, public, boolean, replaceIn, (, StringBuilder, source, ,, int, offset, ,, int, length, ), {, if, (]
[), ), ;, }, public, boolean, replaceIn, (, StringBuilder, source, ,, int, offset, ,, int, length, ), {, if, (]
[;, }, public, boolean, replaceIn, (, StringBuilder, source, ,, int, offset, ,, int, length, ), {, if, (, source, ==]
[replaceIn, (, StringBuilder, source, ,, int, offset, ,, int, length, ), {, if, (, source, ==, null, ), {, return]
[offset, ,, int, length, ), {, if, (, source, ==, null, ), {, return, false, ;, }, StrBuilder, buf, =]
[offset, ,, int, length, ), {, if, (, source, ==, null, ), {, return, false, ;, }, StrBuilder, buf, =]
[length, ), {, if, (, source, ==, null, ), {, return, false, ;, }, StrBuilder, buf, =, new, StrBuilder, (]
[source, ==, null, ), {, return, false, ;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (]
[null, ), {, return, false, ;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,]
[{, return, false, ;, }, StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,]
[StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (]
[StrBuilder, buf, =, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (]
[=, new, StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (]
[StrBuilder, (, length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,]
[length, ), ., append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,]
[append, (, source, ,, offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==]
[offset, ,, length, ), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return]
[), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }]
[), ;, if, (, substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }]
[substitute, (, buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (]
[buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,]
[buf, ,, 0, ,, length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,]
[0, ,, length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +]
[length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length, ,]
[length, ), ==, false, ), {, return, false, ;, }, source, ., replace, (, offset, ,, offset, +, length, ,]
[;, }, source, ., replace, (, offset, ,, offset, +, length, ,, buf, ., toString, (, ), ), ;, return]
[toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (, final, StrBuilder, source, ), {, if, (]
[toString, (, ), ), ;, return, true, ;, }, public, boolean, replaceIn, (, final, StrBuilder, source, ), {, if, (]
[), ), ;, return, true, ;, }, public, boolean, replaceIn, (, final, StrBuilder, source, ), {, if, (, source, ==]
[true, ;, }, public, boolean, replaceIn, (, final, StrBuilder, source, ), {, if, (, source, ==, null, ), {, return]
[boolean, replaceIn, (, final, StrBuilder, source, ), {, if, (, source, ==, null, ), {, return, false, ;, }, return]
[(, final, StrBuilder, source, ), {, if, (, source, ==, null, ), {, return, false, ;, }, return, substitute, (]
[StrBuilder, source, ), {, if, (, source, ==, null, ), {, return, false, ;, }, return, substitute, (, source, ,]
[), {, if, (, source, ==, null, ), {, return, false, ;, }, return, substitute, (, source, ,, 0, ,]
[), {, if, (, source, ==, null, ), {, return, false, ;, }, return, substitute, (, source, ,, 0, ,]
[}, public, boolean, replaceIn, (, final, StrBuilder, source, ,, final, int, offset, ,, final, int, length, ), {, if, (]
[}, public, boolean, replaceIn, (, final, StrBuilder, source, ,, final, int, offset, ,, final, int, length, ), {, if, (]
[boolean, replaceIn, (, final, StrBuilder, source, ,, final, int, offset, ,, final, int, length, ), {, if, (, source, ==]
[StrBuilder, source, ,, final, int, offset, ,, final, int, length, ), {, if, (, source, ==, null, ), {, return]
[int, offset, ,, final, int, length, ), {, if, (, source, ==, null, ), {, return, false, ;, }, return]
[,, final, int, length, ), {, if, (, source, ==, null, ), {, return, false, ;, }, return, substitute, (]
[int, length, ), {, if, (, source, ==, null, ), {, return, false, ;, }, return, substitute, (, source, ,]
[), {, if, (, source, ==, null, ), {, return, false, ;, }, return, substitute, (, source, ,, offset, ,]
[;, }, protected, boolean, substitute, (, final, StrBuilder, buf, ,, final, int, offset, ,, final, int, length, ), {, return]
[;, }, protected, boolean, substitute, (, final, StrBuilder, buf, ,, final, int, offset, ,, final, int, length, ), {, return]
[protected, boolean, substitute, (, final, StrBuilder, buf, ,, final, int, offset, ,, final, int, length, ), {, return, substitute, (]
[substitute, (, final, StrBuilder, buf, ,, final, int, offset, ,, final, int, length, ), {, return, substitute, (, buf, ,]
[final, StrBuilder, buf, ,, final, int, offset, ,, final, int, length, ), {, return, substitute, (, buf, ,, offset, ,]
[buf, ,, final, int, offset, ,, final, int, length, ), {, return, substitute, (, buf, ,, offset, ,, length, ,]
[int, offset, ,, final, int, length, ), {, return, substitute, (, buf, ,, offset, ,, length, ,, null, ), >]
[,, final, int, offset, ,, final, int, length, ,, List, <, String, >, priorVariables, ), {, final, StrMatcher, prefixMatcher, =]
[,, List, <, String, >, priorVariables, ), {, final, StrMatcher, prefixMatcher, =, getVariablePrefixMatcher, (, ), ;, final, StrMatcher, suffixMatcher, =]
[final, StrMatcher, prefixMatcher, =, getVariablePrefixMatcher, (, ), ;, final, StrMatcher, suffixMatcher, =, getVariableSuffixMatcher, (, ), ;, final, char, escape, =]
[final, StrMatcher, suffixMatcher, =, getVariableSuffixMatcher, (, ), ;, final, char, escape, =, getEscapeChar, (, ), ;, final, boolean, top, =]
[final, StrMatcher, suffixMatcher, =, getVariableSuffixMatcher, (, ), ;, final, char, escape, =, getEscapeChar, (, ), ;, final, boolean, top, =]
[suffixMatcher, =, getVariableSuffixMatcher, (, ), ;, final, char, escape, =, getEscapeChar, (, ), ;, final, boolean, top, =, priorVariables, ==]
[;, final, char, escape, =, getEscapeChar, (, ), ;, final, boolean, top, =, priorVariables, ==, null, ;, boolean, altered, =]
[getEscapeChar, (, ), ;, final, boolean, top, =, priorVariables, ==, null, ;, boolean, altered, =, false, ;, int, lengthChange, =]
[=, priorVariables, ==, null, ;, boolean, altered, =, false, ;, int, lengthChange, =, 0, ;, char, [, ], chars, =]
[=, priorVariables, ==, null, ;, boolean, altered, =, false, ;, int, lengthChange, =, 0, ;, char, [, ], chars, =]
[=, false, ;, int, lengthChange, =, 0, ;, char, [, ], chars, =, buf, ., buffer, ;, int, bufEnd, =]
[=, false, ;, int, lengthChange, =, 0, ;, char, [, ], chars, =, buf, ., buffer, ;, int, bufEnd, =]
[;, int, lengthChange, =, 0, ;, char, [, ], chars, =, buf, ., buffer, ;, int, bufEnd, =, offset, +]
[;, char, [, ], chars, =, buf, ., buffer, ;, int, bufEnd, =, offset, +, length, ;, int, pos, =]
[chars, =, buf, ., buffer, ;, int, bufEnd, =, offset, +, length, ;, int, pos, =, offset, ;, while, (]
[chars, =, buf, ., buffer, ;, int, bufEnd, =, offset, +, length, ;, int, pos, =, offset, ;, while, (]
[buf, ., buffer, ;, int, bufEnd, =, offset, +, length, ;, int, pos, =, offset, ;, while, (, pos, <]
[offset, +, length, ;, int, pos, =, offset, ;, while, (, pos, <, bufEnd, ), {, final, int, startMatchLen, =]
[offset, +, length, ;, int, pos, =, offset, ;, while, (, pos, <, bufEnd, ), {, final, int, startMatchLen, =]
[int, pos, =, offset, ;, while, (, pos, <, bufEnd, ), {, final, int, startMatchLen, =, prefixMatcher, ., isMatch, (]
[=, offset, ;, while, (, pos, <, bufEnd, ), {, final, int, startMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,]
[;, while, (, pos, <, bufEnd, ), {, final, int, startMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,]
[(, pos, <, bufEnd, ), {, final, int, startMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,]
[{, final, int, startMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if, (]
[{, final, int, startMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if, (]
[int, startMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if, (, startMatchLen, ==]
[prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if, (, startMatchLen, ==, 0, ), {]
[prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if, (, startMatchLen, ==, 0, ), {]
[offset, ,, bufEnd, ), ;, if, (, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (]
[offset, ,, bufEnd, ), ;, if, (, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (]
[offset, ,, bufEnd, ), ;, if, (, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (]
[bufEnd, ), ;, if, (, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (, pos, >]
[;, if, (, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (, pos, >, offset, &&]
[;, if, (, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (, pos, >, offset, &&]
[;, if, (, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (, pos, >, offset, &&]
[(, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (, pos, >, offset, &&, chars, []
[(, startMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (, pos, >, offset, &&, chars, []
[==, 0, ), {, pos, ++, ;, }, else, {, if, (, pos, >, offset, &&, chars, [, pos, -]
[{, pos, ++, ;, }, else, {, if, (, pos, >, offset, &&, chars, [, pos, -, 1, ], ==]
[;, }, else, {, if, (, pos, >, offset, &&, chars, [, pos, -, 1, ], ==, escape, ), {]
[;, }, else, {, if, (, pos, >, offset, &&, chars, [, pos, -, 1, ], ==, escape, ), {]
[if, (, pos, >, offset, &&, chars, [, pos, -, 1, ], ==, escape, ), {, buf, ., deleteCharAt, (]
[if, (, pos, >, offset, &&, chars, [, pos, -, 1, ], ==, escape, ), {, buf, ., deleteCharAt, (]
[pos, >, offset, &&, chars, [, pos, -, 1, ], ==, escape, ), {, buf, ., deleteCharAt, (, pos, -]
[&&, chars, [, pos, -, 1, ], ==, escape, ), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;]
[[, pos, -, 1, ], ==, escape, ), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =]
[[, pos, -, 1, ], ==, escape, ), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =]
[], ==, escape, ), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, ., buffer, ;]
[], ==, escape, ), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, ., buffer, ;]
[), {, buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, ., buffer, ;, lengthChange, --, ;]
[buf, ., deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, ., buffer, ;, lengthChange, --, ;, altered, =]
[deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, ., buffer, ;, lengthChange, --, ;, altered, =, true, ;]
[deleteCharAt, (, pos, -, 1, ), ;, chars, =, buf, ., buffer, ;, lengthChange, --, ;, altered, =, true, ;]
[., buffer, ;, lengthChange, --, ;, altered, =, true, ;, bufEnd, --, ;, }, else, {, final, int, startPos, =]
[;, lengthChange, --, ;, altered, =, true, ;, bufEnd, --, ;, }, else, {, final, int, startPos, =, pos, ;]
[--, ;, altered, =, true, ;, bufEnd, --, ;, }, else, {, final, int, startPos, =, pos, ;, pos, +=]
[;, bufEnd, --, ;, }, else, {, final, int, startPos, =, pos, ;, pos, +=, startMatchLen, ;, int, endMatchLen, =]
[else, {, final, int, startPos, =, pos, ;, pos, +=, startMatchLen, ;, int, endMatchLen, =, 0, ;, int, nestedVarCount, =]
[startPos, =, pos, ;, pos, +=, startMatchLen, ;, int, endMatchLen, =, 0, ;, int, nestedVarCount, =, 0, ;, while, (]
[startPos, =, pos, ;, pos, +=, startMatchLen, ;, int, endMatchLen, =, 0, ;, int, nestedVarCount, =, 0, ;, while, (]
[pos, ;, pos, +=, startMatchLen, ;, int, endMatchLen, =, 0, ;, int, nestedVarCount, =, 0, ;, while, (, pos, <]
[;, int, endMatchLen, =, 0, ;, int, nestedVarCount, =, 0, ;, while, (, pos, <, bufEnd, ), {, if, (]
[;, int, endMatchLen, =, 0, ;, int, nestedVarCount, =, 0, ;, while, (, pos, <, bufEnd, ), {, if, (]
[0, ;, int, nestedVarCount, =, 0, ;, while, (, pos, <, bufEnd, ), {, if, (, isEnableSubstitutionInVariables, (, ), &&]
[0, ;, int, nestedVarCount, =, 0, ;, while, (, pos, <, bufEnd, ), {, if, (, isEnableSubstitutionInVariables, (, ), &&]
[;, int, nestedVarCount, =, 0, ;, while, (, pos, <, bufEnd, ), {, if, (, isEnableSubstitutionInVariables, (, ), &&, (]
[nestedVarCount, =, 0, ;, while, (, pos, <, bufEnd, ), {, if, (, isEnableSubstitutionInVariables, (, ), &&, (, endMatchLen, =]
[nestedVarCount, =, 0, ;, while, (, pos, <, bufEnd, ), {, if, (, isEnableSubstitutionInVariables, (, ), &&, (, endMatchLen, =]
[while, (, pos, <, bufEnd, ), {, if, (, isEnableSubstitutionInVariables, (, ), &&, (, endMatchLen, =, prefixMatcher, ., isMatch, (]
[pos, <, bufEnd, ), {, if, (, isEnableSubstitutionInVariables, (, ), &&, (, endMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,]
[bufEnd, ), {, if, (, isEnableSubstitutionInVariables, (, ), &&, (, endMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,]
[{, if, (, isEnableSubstitutionInVariables, (, ), &&, (, endMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,]
[(, ), &&, (, endMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ), !=]
[(, endMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ), !=, 0, ), {]
[(, endMatchLen, =, prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ), !=, 0, ), {]
[prefixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ), !=, 0, ), {, nestedVarCount, ++, ;]
[isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ), !=, 0, ), {, nestedVarCount, ++, ;, pos, +=]
[,, offset, ,, bufEnd, ), ), !=, 0, ), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }]
[,, bufEnd, ), ), !=, 0, ), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =]
[,, bufEnd, ), ), !=, 0, ), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =]
[!=, 0, ), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (]
[), {, nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (, chars, ,]
[nestedVarCount, ++, ;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (, chars, ,, pos, ,]
[;, pos, +=, endMatchLen, ;, continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,]
[continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if, (]
[continue, ;, }, endMatchLen, =, suffixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if, (]
[}, endMatchLen, =, suffixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if, (, endMatchLen, ==]
[suffixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if, (, endMatchLen, ==, 0, ), {]
[suffixMatcher, ., isMatch, (, chars, ,, pos, ,, offset, ,, bufEnd, ), ;, if, (, endMatchLen, ==, 0, ), {]
[offset, ,, bufEnd, ), ;, if, (, endMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (]
[offset, ,, bufEnd, ), ;, if, (, endMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (]
[bufEnd, ), ;, if, (, endMatchLen, ==, 0, ), {, pos, ++, ;, }, else, {, if, (, nestedVarCount, ==]
[==, 0, ), {, pos, ++, ;, }, else, {, if, (, nestedVarCount, ==, 0, ), {, String, varName, =]
[{, pos, ++, ;, }, else, {, if, (, nestedVarCount, ==, 0, ), {, String, varName, =, new, String, (]
[++, ;, }, else, {, if, (, nestedVarCount, ==, 0, ), {, String, varName, =, new, String, (, chars, ,]
[++, ;, }, else, {, if, (, nestedVarCount, ==, 0, ), {, String, varName, =, new, String, (, chars, ,]
[}, else, {, if, (, nestedVarCount, ==, 0, ), {, String, varName, =, new, String, (, chars, ,, startPos, +]
[{, if, (, nestedVarCount, ==, 0, ), {, String, varName, =, new, String, (, chars, ,, startPos, +, startMatchLen, ,]
[{, if, (, nestedVarCount, ==, 0, ), {, String, varName, =, new, String, (, chars, ,, startPos, +, startMatchLen, ,]
[{, if, (, nestedVarCount, ==, 0, ), {, String, varName, =, new, String, (, chars, ,, startPos, +, startMatchLen, ,]
[(, nestedVarCount, ==, 0, ), {, String, varName, =, new, String, (, chars, ,, startPos, +, startMatchLen, ,, pos, -]
[==, 0, ), {, String, varName, =, new, String, (, chars, ,, startPos, +, startMatchLen, ,, pos, -, startPos, -]
[varName, =, new, String, (, chars, ,, startPos, +, startMatchLen, ,, pos, -, startPos, -, startMatchLen, ), ;, if, (]
[startMatchLen, ,, pos, -, startPos, -, startMatchLen, ), ;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName, =]
[-, startPos, -, startMatchLen, ), ;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName, =, new, StrBuilder, (]
[startMatchLen, ), ;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName, =, new, StrBuilder, (, varName, ), ;]
[;, if, (, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName, =, new, StrBuilder, (, varName, ), ;, substitute, (]
[(, isEnableSubstitutionInVariables, (, ), ), {, final, StrBuilder, bufName, =, new, StrBuilder, (, varName, ), ;, substitute, (, bufName, ,]
[(, ), ), {, final, StrBuilder, bufName, =, new, StrBuilder, (, varName, ), ;, substitute, (, bufName, ,, 0, ,]
[(, ), ), {, final, StrBuilder, bufName, =, new, StrBuilder, (, varName, ), ;, substitute, (, bufName, ,, 0, ,]
[=, new, StrBuilder, (, varName, ), ;, substitute, (, bufName, ,, 0, ,, bufName, ., length, (, ), ), ;]
[StrBuilder, (, varName, ), ;, substitute, (, bufName, ,, 0, ,, bufName, ., length, (, ), ), ;, varName, =]
[StrBuilder, (, varName, ), ;, substitute, (, bufName, ,, 0, ,, bufName, ., length, (, ), ), ;, varName, =]
[bufName, ,, 0, ,, bufName, ., length, (, ), ), ;, varName, =, bufName, ., toString, (, ), ;, }]
[0, ,, bufName, ., length, (, ), ), ;, varName, =, bufName, ., toString, (, ), ;, }, pos, +=]
[), ), ;, varName, =, bufName, ., toString, (, ), ;, }, pos, +=, endMatchLen, ;, final, int, endPos, =]
[=, bufName, ., toString, (, ), ;, }, pos, +=, endMatchLen, ;, final, int, endPos, =, pos, ;, if, (]
[=, bufName, ., toString, (, ), ;, }, pos, +=, endMatchLen, ;, final, int, endPos, =, pos, ;, if, (]
[., toString, (, ), ;, }, pos, +=, endMatchLen, ;, final, int, endPos, =, pos, ;, if, (, priorVariables, ==]
[), ;, }, pos, +=, endMatchLen, ;, final, int, endPos, =, pos, ;, if, (, priorVariables, ==, null, ), {]
[}, pos, +=, endMatchLen, ;, final, int, endPos, =, pos, ;, if, (, priorVariables, ==, null, ), {, priorVariables, =]
[=, pos, ;, if, (, priorVariables, ==, null, ), {, priorVariables, =, new, ArrayList, <, String, >, (, ), ;]
[=, pos, ;, if, (, priorVariables, ==, null, ), {, priorVariables, =, new, ArrayList, <, String, >, (, ), ;]
[(, priorVariables, ==, null, ), {, priorVariables, =, new, ArrayList, <, String, >, (, ), ;, priorVariables, ., add, (]
[null, ), {, priorVariables, =, new, ArrayList, <, String, >, (, ), ;, priorVariables, ., add, (, new, String, (]
[{, priorVariables, =, new, ArrayList, <, String, >, (, ), ;, priorVariables, ., add, (, new, String, (, chars, ,]
[=, new, ArrayList, <, String, >, (, ), ;, priorVariables, ., add, (, new, String, (, chars, ,, offset, ,]
[>, (, ), ;, priorVariables, ., add, (, new, String, (, chars, ,, offset, ,, length, ), ), ;, }]
[), ;, priorVariables, ., add, (, new, String, (, chars, ,, offset, ,, length, ), ), ;, }, checkCyclicSubstitution, (]
[priorVariables, ., add, (, new, String, (, chars, ,, offset, ,, length, ), ), ;, }, checkCyclicSubstitution, (, varName, ,]
[(, new, String, (, chars, ,, offset, ,, length, ), ), ;, }, checkCyclicSubstitution, (, varName, ,, priorVariables, ), ;]
[(, new, String, (, chars, ,, offset, ,, length, ), ), ;, }, checkCyclicSubstitution, (, varName, ,, priorVariables, ), ;]
[chars, ,, offset, ,, length, ), ), ;, }, checkCyclicSubstitution, (, varName, ,, priorVariables, ), ;, priorVariables, ., add, (]
[;, }, checkCyclicSubstitution, (, varName, ,, priorVariables, ), ;, priorVariables, ., add, (, varName, ), ;, final, String, varValue, =]
[checkCyclicSubstitution, (, varName, ,, priorVariables, ), ;, priorVariables, ., add, (, varName, ), ;, final, String, varValue, =, resolveVariable, (]
[varName, ,, priorVariables, ), ;, priorVariables, ., add, (, varName, ), ;, final, String, varValue, =, resolveVariable, (, varName, ,]
[priorVariables, ), ;, priorVariables, ., add, (, varName, ), ;, final, String, varValue, =, resolveVariable, (, varName, ,, buf, ,]
[;, priorVariables, ., add, (, varName, ), ;, final, String, varValue, =, resolveVariable, (, varName, ,, buf, ,, startPos, ,]
[varName, ), ;, final, String, varValue, =, resolveVariable, (, varName, ,, buf, ,, startPos, ,, endPos, ), ;, if, (]
[varName, ), ;, final, String, varValue, =, resolveVariable, (, varName, ,, buf, ,, startPos, ,, endPos, ), ;, if, (]
[;, final, String, varValue, =, resolveVariable, (, varName, ,, buf, ,, startPos, ,, endPos, ), ;, if, (, varValue, !=]
[varName, ,, buf, ,, startPos, ,, endPos, ), ;, if, (, varValue, !=, null, ), {, final, int, varLen, =]
[varName, ,, buf, ,, startPos, ,, endPos, ), ;, if, (, varValue, !=, null, ), {, final, int, varLen, =]
[endPos, ), ;, if, (, varValue, !=, null, ), {, final, int, varLen, =, varValue, ., length, (, ), ;]
[endPos, ), ;, if, (, varValue, !=, null, ), {, final, int, varLen, =, varValue, ., length, (, ), ;]
[(, varValue, !=, null, ), {, final, int, varLen, =, varValue, ., length, (, ), ;, buf, ., replace, (]
[!=, null, ), {, final, int, varLen, =, varValue, ., length, (, ), ;, buf, ., replace, (, startPos, ,]
[), {, final, int, varLen, =, varValue, ., length, (, ), ;, buf, ., replace, (, startPos, ,, endPos, ,]
[int, varLen, =, varValue, ., length, (, ), ;, buf, ., replace, (, startPos, ,, endPos, ,, varValue, ), ;]
[=, varValue, ., length, (, ), ;, buf, ., replace, (, startPos, ,, endPos, ,, varValue, ), ;, altered, =]
[), ;, buf, ., replace, (, startPos, ,, endPos, ,, varValue, ), ;, altered, =, true, ;, int, change, =]
[buf, ., replace, (, startPos, ,, endPos, ,, varValue, ), ;, altered, =, true, ;, int, change, =, substitute, (]
[replace, (, startPos, ,, endPos, ,, varValue, ), ;, altered, =, true, ;, int, change, =, substitute, (, buf, ,]
[startPos, ,, endPos, ,, varValue, ), ;, altered, =, true, ;, int, change, =, substitute, (, buf, ,, startPos, ,]
[endPos, ,, varValue, ), ;, altered, =, true, ;, int, change, =, substitute, (, buf, ,, startPos, ,, varLen, ,]
[), ;, altered, =, true, ;, int, change, =, substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables, ), ;]
[altered, =, true, ;, int, change, =, substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables, ), ;, change, =]
[altered, =, true, ;, int, change, =, substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables, ), ;, change, =]
[altered, =, true, ;, int, change, =, substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables, ), ;, change, =]
[true, ;, int, change, =, substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables, ), ;, change, =, change, +]
[int, change, =, substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables, ), ;, change, =, change, +, varLen, -]
[change, =, substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables, ), ;, change, =, change, +, varLen, -, (]
[change, =, substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables, ), ;, change, =, change, +, varLen, -, (]
[substitute, (, buf, ,, startPos, ,, varLen, ,, priorVariables, ), ;, change, =, change, +, varLen, -, (, endPos, -]
[,, startPos, ,, varLen, ,, priorVariables, ), ;, change, =, change, +, varLen, -, (, endPos, -, startPos, ), ;]
[,, varLen, ,, priorVariables, ), ;, change, =, change, +, varLen, -, (, endPos, -, startPos, ), ;, pos, +=]
[,, priorVariables, ), ;, change, =, change, +, varLen, -, (, endPos, -, startPos, ), ;, pos, +=, change, ;]
[), ;, change, =, change, +, varLen, -, (, endPos, -, startPos, ), ;, pos, +=, change, ;, bufEnd, +=]
[change, =, change, +, varLen, -, (, endPos, -, startPos, ), ;, pos, +=, change, ;, bufEnd, +=, change, ;]
[change, +, varLen, -, (, endPos, -, startPos, ), ;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=]
[varLen, -, (, endPos, -, startPos, ), ;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change, ;]
[(, endPos, -, startPos, ), ;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =]
[(, endPos, -, startPos, ), ;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =]
[;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =, buf, ., buffer, ;, }]
[;, pos, +=, change, ;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =, buf, ., buffer, ;, }]
[;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =, buf, ., buffer, ;, }, priorVariables, ., remove, (]
[;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =, buf, ., buffer, ;, }, priorVariables, ., remove, (]
[;, bufEnd, +=, change, ;, lengthChange, +=, change, ;, chars, =, buf, ., buffer, ;, }, priorVariables, ., remove, (]
[+=, change, ;, chars, =, buf, ., buffer, ;, }, priorVariables, ., remove, (, priorVariables, ., size, (, ), -]
[;, }, priorVariables, ., remove, (, priorVariables, ., size, (, ), -, 1, ), ;, break, ;, }, else, {]
[;, }, priorVariables, ., remove, (, priorVariables, ., size, (, ), -, 1, ), ;, break, ;, }, else, {]
[., remove, (, priorVariables, ., size, (, ), -, 1, ), ;, break, ;, }, else, {, nestedVarCount, --, ;]
[(, priorVariables, ., size, (, ), -, 1, ), ;, break, ;, }, else, {, nestedVarCount, --, ;, pos, +=]
[break, ;, }, else, {, nestedVarCount, --, ;, pos, +=, endMatchLen, ;, }, }, }, }, }, }, if, (]
[{, nestedVarCount, --, ;, pos, +=, endMatchLen, ;, }, }, }, }, }, }, if, (, top, ), {, return]
[{, nestedVarCount, --, ;, pos, +=, endMatchLen, ;, }, }, }, }, }, }, if, (, top, ), {, return]
[--, ;, pos, +=, endMatchLen, ;, }, }, }, }, }, }, if, (, top, ), {, return, altered, ?]
[pos, +=, endMatchLen, ;, }, }, }, }, }, }, if, (, top, ), {, return, altered, ?, 1, :]
[}, }, }, }, }, }, if, (, top, ), {, return, altered, ?, 1, :, 0, ;, }, return]
[;, }, private, void, checkCyclicSubstitution, (, final, String, varName, ,, final, List, <, String, >, priorVariables, ), {, if, (]
[;, }, private, void, checkCyclicSubstitution, (, final, String, varName, ,, final, List, <, String, >, priorVariables, ), {, if, (]
[;, }, private, void, checkCyclicSubstitution, (, final, String, varName, ,, final, List, <, String, >, priorVariables, ), {, if, (]
[checkCyclicSubstitution, (, final, String, varName, ,, final, List, <, String, >, priorVariables, ), {, if, (, priorVariables, ., contains, (]
[String, varName, ,, final, List, <, String, >, priorVariables, ), {, if, (, priorVariables, ., contains, (, varName, ), ==]
[{, if, (, priorVariables, ., contains, (, varName, ), ==, false, ), {, return, ;, }, final, StrBuilder, buf, =]
[priorVariables, ., contains, (, varName, ), ==, false, ), {, return, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (]
[(, varName, ), ==, false, ), {, return, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, 256, ), ;]
[(, varName, ), ==, false, ), {, return, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, 256, ), ;]
[false, ), {, return, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, 256, ), ;, buf, ., append, (]
[return, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, 256, ), ;, buf, ., append, (, "Infinite loop in property interpolation of ", ), ;]
[return, ;, }, final, StrBuilder, buf, =, new, StrBuilder, (, 256, ), ;, buf, ., append, (, "Infinite loop in property interpolation of ", ), ;]
[StrBuilder, buf, =, new, StrBuilder, (, 256, ), ;, buf, ., append, (, "Infinite loop in property interpolation of ", ), ;, buf, ., append, (]
[StrBuilder, buf, =, new, StrBuilder, (, 256, ), ;, buf, ., append, (, "Infinite loop in property interpolation of ", ), ;, buf, ., append, (]
[StrBuilder, (, 256, ), ;, buf, ., append, (, "Infinite loop in property interpolation of ", ), ;, buf, ., append, (, priorVariables, ., remove, (]
[;, buf, ., append, (, "Infinite loop in property interpolation of ", ), ;, buf, ., append, (, priorVariables, ., remove, (, 0, ), ), ;]
[;, buf, ., append, (, "Infinite loop in property interpolation of ", ), ;, buf, ., append, (, priorVariables, ., remove, (, 0, ), ), ;]
[(, "Infinite loop in property interpolation of ", ), ;, buf, ., append, (, priorVariables, ., remove, (, 0, ), ), ;, buf, ., append, (]
[;, buf, ., append, (, priorVariables, ., remove, (, 0, ), ), ;, buf, ., append, (, ": ", ), ;]
[;, buf, ., append, (, priorVariables, ., remove, (, 0, ), ), ;, buf, ., append, (, ": ", ), ;]
[(, priorVariables, ., remove, (, 0, ), ), ;, buf, ., append, (, ": ", ), ;, buf, ., appendWithSeparators, (]
[., remove, (, 0, ), ), ;, buf, ., append, (, ": ", ), ;, buf, ., appendWithSeparators, (, priorVariables, ,]
[), ), ;, buf, ., append, (, ": ", ), ;, buf, ., appendWithSeparators, (, priorVariables, ,, "->", ), ;, throw]
[buf, ., append, (, ": ", ), ;, buf, ., appendWithSeparators, (, priorVariables, ,, "->", ), ;, throw, new, IllegalStateException, (]
[buf, ., append, (, ": ", ), ;, buf, ., appendWithSeparators, (, priorVariables, ,, "->", ), ;, throw, new, IllegalStateException, (]
[final, StrBuilder, buf, ,, final, int, startPos, ,, final, int, endPos, ), {, final, StrLookup, <, ?, >, resolver, =]
[startPos, ,, final, int, endPos, ), {, final, StrLookup, <, ?, >, resolver, =, getVariableResolver, (, ), ;, if, (]
[startPos, ,, final, int, endPos, ), {, final, StrLookup, <, ?, >, resolver, =, getVariableResolver, (, ), ;, if, (]
[final, int, endPos, ), {, final, StrLookup, <, ?, >, resolver, =, getVariableResolver, (, ), ;, if, (, resolver, ==]
[{, final, StrLookup, <, ?, >, resolver, =, getVariableResolver, (, ), ;, if, (, resolver, ==, null, ), {, return]
[?, >, resolver, =, getVariableResolver, (, ), ;, if, (, resolver, ==, null, ), {, return, null, ;, }, return]
[?, >, resolver, =, getVariableResolver, (, ), ;, if, (, resolver, ==, null, ), {, return, null, ;, }, return]
[getVariableResolver, (, ), ;, if, (, resolver, ==, null, ), {, return, null, ;, }, return, resolver, ., lookup, (]
[return, null, ;, }, return, resolver, ., lookup, (, variableName, ), ;, }, public, char, getEscapeChar, (, ), {, return]
[return, null, ;, }, return, resolver, ., lookup, (, variableName, ), ;, }, public, char, getEscapeChar, (, ), {, return]
[char, getEscapeChar, (, ), {, return, this, ., escapeChar, ;, }, public, void, setEscapeChar, (, final, char, escapeCharacter, ), {]
[char, getEscapeChar, (, ), {, return, this, ., escapeChar, ;, }, public, void, setEscapeChar, (, final, char, escapeCharacter, ), {]
[{, return, this, ., escapeChar, ;, }, public, void, setEscapeChar, (, final, char, escapeCharacter, ), {, this, ., escapeChar, =]
[(, final, char, escapeCharacter, ), {, this, ., escapeChar, =, escapeCharacter, ;, }, public, StrMatcher, getVariablePrefixMatcher, (, ), {, return]
[StrMatcher, getVariablePrefixMatcher, (, ), {, return, prefixMatcher, ;, }, public, StrSubstitutor, setVariablePrefixMatcher, (, final, StrMatcher, prefixMatcher, ), {, if, (]
[StrMatcher, getVariablePrefixMatcher, (, ), {, return, prefixMatcher, ;, }, public, StrSubstitutor, setVariablePrefixMatcher, (, final, StrMatcher, prefixMatcher, ), {, if, (]
[(, ), {, return, prefixMatcher, ;, }, public, StrSubstitutor, setVariablePrefixMatcher, (, final, StrMatcher, prefixMatcher, ), {, if, (, prefixMatcher, ==]
[prefixMatcher, ;, }, public, StrSubstitutor, setVariablePrefixMatcher, (, final, StrMatcher, prefixMatcher, ), {, if, (, prefixMatcher, ==, null, ), {, throw]
[public, StrSubstitutor, setVariablePrefixMatcher, (, final, StrMatcher, prefixMatcher, ), {, if, (, prefixMatcher, ==, null, ), {, throw, new, IllegalArgumentException, (]
[final, StrMatcher, prefixMatcher, ), {, if, (, prefixMatcher, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable prefix matcher must not be null!", ), ;, }]
[final, StrMatcher, prefixMatcher, ), {, if, (, prefixMatcher, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable prefix matcher must not be null!", ), ;, }]
[{, if, (, prefixMatcher, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable prefix matcher must not be null!", ), ;, }, this, ., prefixMatcher, =]
[prefixMatcher, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable prefix matcher must not be null!", ), ;, }, this, ., prefixMatcher, =, prefixMatcher, ;, return]
[this, ., prefixMatcher, =, prefixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariablePrefix, (, final, char, prefix, ), {, return]
[prefixMatcher, =, prefixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariablePrefix, (, final, char, prefix, ), {, return, setVariablePrefixMatcher, (]
[prefixMatcher, =, prefixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariablePrefix, (, final, char, prefix, ), {, return, setVariablePrefixMatcher, (]
[return, this, ;, }, public, StrSubstitutor, setVariablePrefix, (, final, char, prefix, ), {, return, setVariablePrefixMatcher, (, StrMatcher, ., charMatcher, (]
[StrMatcher, ., charMatcher, (, prefix, ), ), ;, }, public, StrSubstitutor, setVariablePrefix, (, final, String, prefix, ), {, if, (]
[StrMatcher, ., charMatcher, (, prefix, ), ), ;, }, public, StrSubstitutor, setVariablePrefix, (, final, String, prefix, ), {, if, (]
[charMatcher, (, prefix, ), ), ;, }, public, StrSubstitutor, setVariablePrefix, (, final, String, prefix, ), {, if, (, prefix, ==]
[), ;, }, public, StrSubstitutor, setVariablePrefix, (, final, String, prefix, ), {, if, (, prefix, ==, null, ), {, throw]
[public, StrSubstitutor, setVariablePrefix, (, final, String, prefix, ), {, if, (, prefix, ==, null, ), {, throw, new, IllegalArgumentException, (]
[String, prefix, ), {, if, (, prefix, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable prefix must not be null!", ), ;, }, return]
[), {, if, (, prefix, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable prefix must not be null!", ), ;, }, return, setVariablePrefixMatcher, (]
[), {, if, (, prefix, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable prefix must not be null!", ), ;, }, return, setVariablePrefixMatcher, (]
[prefix, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable prefix must not be null!", ), ;, }, return, setVariablePrefixMatcher, (, StrMatcher, ., stringMatcher, (]
[}, return, setVariablePrefixMatcher, (, StrMatcher, ., stringMatcher, (, prefix, ), ), ;, }, public, StrMatcher, getVariableSuffixMatcher, (, ), {, return]
[StrMatcher, getVariableSuffixMatcher, (, ), {, return, suffixMatcher, ;, }, public, StrSubstitutor, setVariableSuffixMatcher, (, final, StrMatcher, suffixMatcher, ), {, if, (]
[StrMatcher, getVariableSuffixMatcher, (, ), {, return, suffixMatcher, ;, }, public, StrSubstitutor, setVariableSuffixMatcher, (, final, StrMatcher, suffixMatcher, ), {, if, (]
[(, ), {, return, suffixMatcher, ;, }, public, StrSubstitutor, setVariableSuffixMatcher, (, final, StrMatcher, suffixMatcher, ), {, if, (, suffixMatcher, ==]
[suffixMatcher, ;, }, public, StrSubstitutor, setVariableSuffixMatcher, (, final, StrMatcher, suffixMatcher, ), {, if, (, suffixMatcher, ==, null, ), {, throw]
[public, StrSubstitutor, setVariableSuffixMatcher, (, final, StrMatcher, suffixMatcher, ), {, if, (, suffixMatcher, ==, null, ), {, throw, new, IllegalArgumentException, (]
[final, StrMatcher, suffixMatcher, ), {, if, (, suffixMatcher, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable suffix matcher must not be null!", ), ;, }]
[final, StrMatcher, suffixMatcher, ), {, if, (, suffixMatcher, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable suffix matcher must not be null!", ), ;, }]
[{, if, (, suffixMatcher, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable suffix matcher must not be null!", ), ;, }, this, ., suffixMatcher, =]
[suffixMatcher, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable suffix matcher must not be null!", ), ;, }, this, ., suffixMatcher, =, suffixMatcher, ;, return]
[this, ., suffixMatcher, =, suffixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariableSuffix, (, final, char, suffix, ), {, return]
[suffixMatcher, =, suffixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariableSuffix, (, final, char, suffix, ), {, return, setVariableSuffixMatcher, (]
[suffixMatcher, =, suffixMatcher, ;, return, this, ;, }, public, StrSubstitutor, setVariableSuffix, (, final, char, suffix, ), {, return, setVariableSuffixMatcher, (]
[return, this, ;, }, public, StrSubstitutor, setVariableSuffix, (, final, char, suffix, ), {, return, setVariableSuffixMatcher, (, StrMatcher, ., charMatcher, (]
[StrMatcher, ., charMatcher, (, suffix, ), ), ;, }, public, StrSubstitutor, setVariableSuffix, (, final, String, suffix, ), {, if, (]
[StrMatcher, ., charMatcher, (, suffix, ), ), ;, }, public, StrSubstitutor, setVariableSuffix, (, final, String, suffix, ), {, if, (]
[charMatcher, (, suffix, ), ), ;, }, public, StrSubstitutor, setVariableSuffix, (, final, String, suffix, ), {, if, (, suffix, ==]
[), ;, }, public, StrSubstitutor, setVariableSuffix, (, final, String, suffix, ), {, if, (, suffix, ==, null, ), {, throw]
[public, StrSubstitutor, setVariableSuffix, (, final, String, suffix, ), {, if, (, suffix, ==, null, ), {, throw, new, IllegalArgumentException, (]
[String, suffix, ), {, if, (, suffix, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable suffix must not be null!", ), ;, }, return]
[), {, if, (, suffix, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable suffix must not be null!", ), ;, }, return, setVariableSuffixMatcher, (]
[), {, if, (, suffix, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable suffix must not be null!", ), ;, }, return, setVariableSuffixMatcher, (]
[suffix, ==, null, ), {, throw, new, IllegalArgumentException, (, "Variable suffix must not be null!", ), ;, }, return, setVariableSuffixMatcher, (, StrMatcher, ., stringMatcher, (]
[(, StrMatcher, ., stringMatcher, (, suffix, ), ), ;, }, public, StrLookup, <, ?, >, getVariableResolver, (, ), {, return]
[(, StrMatcher, ., stringMatcher, (, suffix, ), ), ;, }, public, StrLookup, <, ?, >, getVariableResolver, (, ), {, return]
[), {, return, this, ., variableResolver, ;, }, public, void, setVariableResolver, (, final, StrLookup, <, ?, >, variableResolver, ), {]
[), {, return, this, ., variableResolver, ;, }, public, void, setVariableResolver, (, final, StrLookup, <, ?, >, variableResolver, ), {]
[., variableResolver, ;, }, public, void, setVariableResolver, (, final, StrLookup, <, ?, >, variableResolver, ), {, this, ., variableResolver, =]
[<, ?, >, variableResolver, ), {, this, ., variableResolver, =, variableResolver, ;, }, public, boolean, isEnableSubstitutionInVariables, (, ), {, return]
[}, public, boolean, isEnableSubstitutionInVariables, (, ), {, return, enableSubstitutionInVariables, ;, }, public, void, setEnableSubstitutionInVariables, (, final, boolean, enableSubstitutionInVariables, ), {]
[}, public, boolean, isEnableSubstitutionInVariables, (, ), {, return, enableSubstitutionInVariables, ;, }, public, void, setEnableSubstitutionInVariables, (, final, boolean, enableSubstitutionInVariables, ), {]
[(, ), {, return, enableSubstitutionInVariables, ;, }, public, void, setEnableSubstitutionInVariables, (, final, boolean, enableSubstitutionInVariables, ), {, this, ., enableSubstitutionInVariables, =]
