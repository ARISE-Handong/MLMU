[;, private, static, final, double, DEFAULT_FUNCTION_VALUE_ACCURACY, =, 1e-15, ;, private, final, double, functionValueAccuracy, ;, private, final, double, absoluteAccuracy, ;, private]
[;, private, final, double, functionValueAccuracy, ;, private, final, double, absoluteAccuracy, ;, private, final, double, relativeAccuracy, ;, private, final, Incrementor, evaluations]
[;, private, double, searchMin, ;, private, double, searchMax, ;, private, double, searchStart, ;, private, FUNC, function, ;, protected, BaseAbstractUnivariateSolver, (]
[,, absoluteAccuracy, ,, DEFAULT_FUNCTION_VALUE_ACCURACY, ), ;, }, protected, BaseAbstractUnivariateSolver, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ), {, this]
[,, DEFAULT_FUNCTION_VALUE_ACCURACY, ), ;, }, protected, BaseAbstractUnivariateSolver, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ), {, this, (, relativeAccuracy]
[), ;, }, protected, BaseAbstractUnivariateSolver, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ), {, this, (, relativeAccuracy, ,, absoluteAccuracy]
[,, absoluteAccuracy, ,, DEFAULT_FUNCTION_VALUE_ACCURACY, ), ;, }, protected, BaseAbstractUnivariateSolver, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ,, final, double]
[,, DEFAULT_FUNCTION_VALUE_ACCURACY, ), ;, }, protected, BaseAbstractUnivariateSolver, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ,, final, double, functionValueAccuracy, )]
[), ;, }, protected, BaseAbstractUnivariateSolver, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ,, final, double, functionValueAccuracy, ), {, this]
[=, absoluteAccuracy, ;, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaxEvaluations, (]
[., absoluteAccuracy, =, absoluteAccuracy, ;, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int]
[;, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaxEvaluations, (, ), {]
[=, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount]
[., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations]
[;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, )]
[=, functionValueAccuracy, ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int]
[., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }]
[;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (]
[;, }, public, int, getEvaluations, (, ), {, return, evaluations, ., getCount, (, ), ;, }, public, double, getMin, (]
[., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (, ), {, return, evaluations, ., getCount, (, ), ;, }]
[;, }, public, double, getMin, (, ), {, return, searchMin, ;, }, public, double, getMax, (, ), {, return, searchMax]
[., getCount, (, ), ;, }, public, double, getMin, (, ), {, return, searchMin, ;, }, public, double, getMax, (]
[;, }, public, double, getMax, (, ), {, return, searchMax, ;, }, public, double, getStartValue, (, ), {, return, searchStart]
[;, }, public, double, getStartValue, (, ), {, return, searchStart, ;, }, public, double, getAbsoluteAccuracy, (, ), {, return, absoluteAccuracy]
[;, }, public, double, getAbsoluteAccuracy, (, ), {, return, absoluteAccuracy, ;, }, public, double, getRelativeAccuracy, (, ), {, return, relativeAccuracy]
[;, }, public, double, getRelativeAccuracy, (, ), {, return, relativeAccuracy, ;, }, public, double, getFunctionValueAccuracy, (, ), {, return, functionValueAccuracy]
[;, }, public, double, getFunctionValueAccuracy, (, ), {, return, functionValueAccuracy, ;, }, protected, double, computeObjectiveValue, (, double, point, ), throws]
[;, }, protected, double, computeObjectiveValue, (, double, point, ), throws, TooManyEvaluationsException, {, incrementEvaluationCount, (, ), ;, return, function, ., value]
[;, return, function, ., value, (, point, ), ;, }, protected, void, setup, (, int, maxEval, ,, FUNC, f, ,]
[;, }, protected, void, setup, (, int, maxEval, ,, FUNC, f, ,, double, min, ,, double, max, ,, double, startValue]
[., value, (, point, ), ;, }, protected, void, setup, (, int, maxEval, ,, FUNC, f, ,, double, min, ,]
[), ;, }, protected, void, setup, (, int, maxEval, ,, FUNC, f, ,, double, min, ,, double, max, ,, double]
[;, searchMin, =, min, ;, searchMax, =, max, ;, searchStart, =, startValue, ;, function, =, f, ;, evaluations, ., setMaximalCount]
[., checkNotNull, (, f, ), ;, searchMin, =, min, ;, searchMax, =, max, ;, searchStart, =, startValue, ;, function, =]
[), ;, searchMin, =, min, ;, searchMax, =, max, ;, searchStart, =, startValue, ;, function, =, f, ;, evaluations, .]
[=, min, ;, searchMax, =, max, ;, searchStart, =, startValue, ;, function, =, f, ;, evaluations, ., setMaximalCount, (, maxEval]
[;, searchMax, =, max, ;, searchStart, =, startValue, ;, function, =, f, ;, evaluations, ., setMaximalCount, (, maxEval, ), ;]
[=, max, ;, searchStart, =, startValue, ;, function, =, f, ;, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, .]
[;, searchStart, =, startValue, ;, function, =, f, ;, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (]
[=, startValue, ;, function, =, f, ;, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;]
[;, function, =, f, ;, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;, }, public]
[=, f, ;, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;, }, public, double, solve]
[;, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;, }, public, double, solve, (, int]
[;, evaluations, ., resetCount, (, ), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, min]
[., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;, }, public, double, solve, (, int, maxEval, ,]
[), ;, evaluations, ., resetCount, (, ), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double]
[;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, min, ,, double, max, ,, double, startValue]
[., resetCount, (, ), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, min, ,, double]
[;, return, doSolve, (, ), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, min, ,]
[,, f, ,, min, ,, max, ,, startValue, ), ;, return, doSolve, (, ), ;, }, public, double, solve, (]
[,, min, ,, max, ,, startValue, ), ;, return, doSolve, (, ), ;, }, public, double, solve, (, int, maxEval]
[,, max, ,, startValue, ), ;, return, doSolve, (, ), ;, }, public, double, solve, (, int, maxEval, ,, FUNC]
[,, startValue, ), ;, return, doSolve, (, ), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,]
[), ;, return, doSolve, (, ), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, min]
[;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, min, ,, double, max, ), {, return]
[;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {]
[,, f, ,, min, ,, max, ,, min, +, 0.5, *, (, max, -, min, ), ), ;, }, public]
[,, min, ,, max, ,, min, +, 0.5, *, (, max, -, min, ), ), ;, }, public, double, solve]
[,, max, ,, min, +, 0.5, *, (, max, -, min, ), ), ;, }, public, double, solve, (, int]
[,, min, +, 0.5, *, (, max, -, min, ), ), ;, }, public, double, solve, (, int, maxEval, ,]
[), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException]
[+, 0.5, *, (, max, -, min, ), ), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f]
[), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException]
[*, (, max, -, min, ), ), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double]
[), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException]
[), ), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, startValue, ), throws, TooManyEvaluationsException, ,]
[-, min, ), ), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, startValue, ), throws]
[), ), ;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, startValue, ), throws, TooManyEvaluationsException, ,]
[;, }, protected, abstract, double, doSolve, (, ), throws, TooManyEvaluationsException, ,, NoBracketingException, ;, protected, boolean, isBracketing, (, final, double, lower]
[,, f, ,, Double, ., NaN, ,, Double, ., NaN, ,, startValue, ), ;, }, protected, abstract, double, doSolve, (]
[,, Double, ., NaN, ,, Double, ., NaN, ,, startValue, ), ;, }, protected, abstract, double, doSolve, (, ), throws]
[,, Double, ., NaN, ,, startValue, ), ;, }, protected, abstract, double, doSolve, (, ), throws, TooManyEvaluationsException, ,, NoBracketingException, ;]
[., NaN, ,, Double, ., NaN, ,, startValue, ), ;, }, protected, abstract, double, doSolve, (, ), throws, TooManyEvaluationsException, ,]
[,, startValue, ), ;, }, protected, abstract, double, doSolve, (, ), throws, TooManyEvaluationsException, ,, NoBracketingException, ;, protected, boolean, isBracketing, (]
[., NaN, ,, startValue, ), ;, }, protected, abstract, double, doSolve, (, ), throws, TooManyEvaluationsException, ,, NoBracketingException, ;, protected, boolean]
[), ;, }, protected, abstract, double, doSolve, (, ), throws, TooManyEvaluationsException, ,, NoBracketingException, ;, protected, boolean, isBracketing, (, final, double]
[;, }, protected, boolean, isSequence, (, final, double, start, ,, final, double, mid, ,, final, double, end, ), {, return]
[., isBracketing, (, function, ,, lower, ,, upper, ), ;, }, protected, boolean, isSequence, (, final, double, start, ,, final]
[,, lower, ,, upper, ), ;, }, protected, boolean, isSequence, (, final, double, start, ,, final, double, mid, ,, final]
[,, upper, ), ;, }, protected, boolean, isSequence, (, final, double, start, ,, final, double, mid, ,, final, double, end]
[), ;, }, protected, boolean, isSequence, (, final, double, start, ,, final, double, mid, ,, final, double, end, ), {]
[;, }, protected, void, verifyInterval, (, final, double, lower, ,, final, double, upper, ), throws, NumberIsTooLargeException, {, UnivariateSolverUtils, ., verifyInterval]
[., isSequence, (, start, ,, mid, ,, end, ), ;, }, protected, void, verifyInterval, (, final, double, lower, ,, final]
[,, mid, ,, end, ), ;, }, protected, void, verifyInterval, (, final, double, lower, ,, final, double, upper, ), throws]
[,, end, ), ;, }, protected, void, verifyInterval, (, final, double, lower, ,, final, double, upper, ), throws, NumberIsTooLargeException, {]
[), ;, }, protected, void, verifyInterval, (, final, double, lower, ,, final, double, upper, ), throws, NumberIsTooLargeException, {, UnivariateSolverUtils, .]
[;, }, protected, void, verifySequence, (, final, double, lower, ,, final, double, initial, ,, final, double, upper, ), throws, NumberIsTooLargeException]
[., verifyInterval, (, lower, ,, upper, ), ;, }, protected, void, verifySequence, (, final, double, lower, ,, final, double, initial]
[,, upper, ), ;, }, protected, void, verifySequence, (, final, double, lower, ,, final, double, initial, ,, final, double, upper]
[), ;, }, protected, void, verifySequence, (, final, double, lower, ,, final, double, initial, ,, final, double, upper, ), throws]
[;, }, protected, void, verifyBracketing, (, final, double, lower, ,, final, double, upper, ), throws, NullArgumentException, ,, NoBracketingException, {, UnivariateSolverUtils]
[., verifySequence, (, lower, ,, initial, ,, upper, ), ;, }, protected, void, verifyBracketing, (, final, double, lower, ,, final]
[,, initial, ,, upper, ), ;, }, protected, void, verifyBracketing, (, final, double, lower, ,, final, double, upper, ), throws]
[,, upper, ), ;, }, protected, void, verifyBracketing, (, final, double, lower, ,, final, double, upper, ), throws, NullArgumentException, ,]
[), ;, }, protected, void, verifyBracketing, (, final, double, lower, ,, final, double, upper, ), throws, NullArgumentException, ,, NoBracketingException, {]
[;, }, protected, void, incrementEvaluationCount, (, ), throws, TooManyEvaluationsException, {, try, {, evaluations, ., incrementCount, (, ), ;, }, catch]
[., verifyBracketing, (, function, ,, lower, ,, upper, ), ;, }, protected, void, incrementEvaluationCount, (, ), throws, TooManyEvaluationsException, {, try]
[,, lower, ,, upper, ), ;, }, protected, void, incrementEvaluationCount, (, ), throws, TooManyEvaluationsException, {, try, {, evaluations, ., incrementCount]
[,, upper, ), ;, }, protected, void, incrementEvaluationCount, (, ), throws, TooManyEvaluationsException, {, try, {, evaluations, ., incrementCount, (, )]
[), ;, }, protected, void, incrementEvaluationCount, (, ), throws, TooManyEvaluationsException, {, try, {, evaluations, ., incrementCount, (, ), ;, }]
[;, }, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (, e, ., getMax, (, ), ), ;, }]
[., incrementCount, (, ), ;, }, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (, e, ., getMax, (]
[;, }, }, }]
[), ;, }, }, }]
[., getMax, (, ), ), ;, }, }, }]
