[;, private, Variance, variance, =, null, ;, public, StandardDeviation, (, ), {, variance, =, new, Variance, (, ), ;, }]
[;, public, StandardDeviation, (, ), {, variance, =, new, Variance, (, ), ;, }, public, StandardDeviation, (, final, SecondMoment, m2]
[=, new, Variance, (, ), ;, }, public, StandardDeviation, (, final, SecondMoment, m2, ), {, variance, =, new, Variance, (]
[;, }, public, StandardDeviation, (, final, SecondMoment, m2, ), {, variance, =, new, Variance, (, m2, ), ;, }, public]
[=, new, Variance, (, m2, ), ;, }, public, StandardDeviation, (, StandardDeviation, original, ), throws, NullArgumentException, {, copy, (, original]
[;, }, public, StandardDeviation, (, StandardDeviation, original, ), throws, NullArgumentException, {, copy, (, original, ,, this, ), ;, }, public]
[), ;, }, public, StandardDeviation, (, StandardDeviation, original, ), throws, NullArgumentException, {, copy, (, original, ,, this, ), ;, }]
[;, }, public, StandardDeviation, (, boolean, isBiasCorrected, ), {, variance, =, new, Variance, (, isBiasCorrected, ), ;, }, public, StandardDeviation]
[,, this, ), ;, }, public, StandardDeviation, (, boolean, isBiasCorrected, ), {, variance, =, new, Variance, (, isBiasCorrected, ), ;]
[), ;, }, public, StandardDeviation, (, boolean, isBiasCorrected, ), {, variance, =, new, Variance, (, isBiasCorrected, ), ;, }, public]
[=, new, Variance, (, isBiasCorrected, ), ;, }, public, StandardDeviation, (, boolean, isBiasCorrected, ,, SecondMoment, m2, ), {, variance, =]
[;, }, public, StandardDeviation, (, boolean, isBiasCorrected, ,, SecondMoment, m2, ), {, variance, =, new, Variance, (, isBiasCorrected, ,, m2]
[), ;, }, public, StandardDeviation, (, boolean, isBiasCorrected, ,, SecondMoment, m2, ), {, variance, =, new, Variance, (, isBiasCorrected, ,]
[=, new, Variance, (, isBiasCorrected, ,, m2, ), ;, }, @, Override, public, void, increment, (, final, double, d, )]
[;, }, @, Override, public, void, increment, (, final, double, d, ), {, variance, ., increment, (, d, ), ;]
[,, m2, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, variance, ., increment, (]
[), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, variance, ., increment, (, d, )]
[;, }, public, long, getN, (, ), {, return, variance, ., getN, (, ), ;, }, @, Override, public, double]
[., increment, (, d, ), ;, }, public, long, getN, (, ), {, return, variance, ., getN, (, ), ;]
[), ;, }, public, long, getN, (, ), {, return, variance, ., getN, (, ), ;, }, @, Override, public]
[;, }, @, Override, public, double, getResult, (, ), {, return, FastMath, ., sqrt, (, variance, ., getResult, (, )]
[., getN, (, ), ;, }, @, Override, public, double, getResult, (, ), {, return, FastMath, ., sqrt, (, variance]
[;, }, @, Override, public, void, clear, (, ), {, variance, ., clear, (, ), ;, }, @, Override, public]
[., sqrt, (, variance, ., getResult, (, ), ), ;, }, @, Override, public, void, clear, (, ), {, variance]
[), ;, }, @, Override, public, void, clear, (, ), {, variance, ., clear, (, ), ;, }, @, Override]
[., getResult, (, ), ), ;, }, @, Override, public, void, clear, (, ), {, variance, ., clear, (, )]
[;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ), throws, MathIllegalArgumentException, {, return, FastMath, .]
[., clear, (, ), ;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ), throws, MathIllegalArgumentException]
[;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final, int, begin, ,, final, int]
[., sqrt, (, variance, ., evaluate, (, values, ), ), ;, }, @, Override, public, double, evaluate, (, final, double]
[), ;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final, int, begin, ,, final]
[., evaluate, (, values, ), ), ;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,]
[), ), ;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final, int, begin, ,]
[;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, mean, ,, final, int, begin, ,]
[., sqrt, (, variance, ., evaluate, (, values, ,, begin, ,, length, ), ), ;, }, public, double, evaluate, (]
[), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, mean, ,, final, int, begin]
[., evaluate, (, values, ,, begin, ,, length, ), ), ;, }, public, double, evaluate, (, final, double, [, ]]
[,, begin, ,, length, ), ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double]
[,, length, ), ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, mean, ,]
[), ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, mean, ,, final, int]
[;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, mean, ), throws, MathIllegalArgumentException, {, return]
[., sqrt, (, variance, ., evaluate, (, values, ,, mean, ,, begin, ,, length, ), ), ;, }, public, double]
[), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, mean, ), throws, MathIllegalArgumentException, {]
[., evaluate, (, values, ,, mean, ,, begin, ,, length, ), ), ;, }, public, double, evaluate, (, final, double]
[,, mean, ,, begin, ,, length, ), ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,]
[,, begin, ,, length, ), ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double]
[,, length, ), ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, mean, )]
[), ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, mean, ), throws, MathIllegalArgumentException]
[;, }, public, boolean, isBiasCorrected, (, ), {, return, variance, ., isBiasCorrected, (, ), ;, }, public, void, setBiasCorrected, (]
[., sqrt, (, variance, ., evaluate, (, values, ,, mean, ), ), ;, }, public, boolean, isBiasCorrected, (, ), {]
[), ;, }, public, boolean, isBiasCorrected, (, ), {, return, variance, ., isBiasCorrected, (, ), ;, }, public, void, setBiasCorrected]
[., evaluate, (, values, ,, mean, ), ), ;, }, public, boolean, isBiasCorrected, (, ), {, return, variance, ., isBiasCorrected]
[,, mean, ), ), ;, }, public, boolean, isBiasCorrected, (, ), {, return, variance, ., isBiasCorrected, (, ), ;, }]
[), ), ;, }, public, boolean, isBiasCorrected, (, ), {, return, variance, ., isBiasCorrected, (, ), ;, }, public, void]
[;, }, public, void, setBiasCorrected, (, boolean, isBiasCorrected, ), {, variance, ., setBiasCorrected, (, isBiasCorrected, ), ;, }, @, Override]
[., isBiasCorrected, (, ), ;, }, public, void, setBiasCorrected, (, boolean, isBiasCorrected, ), {, variance, ., setBiasCorrected, (, isBiasCorrected, )]
[;, }, @, Override, public, StandardDeviation, copy, (, ), {, StandardDeviation, result, =, new, StandardDeviation, (, ), ;, copy, (]
[., setBiasCorrected, (, isBiasCorrected, ), ;, }, @, Override, public, StandardDeviation, copy, (, ), {, StandardDeviation, result, =, new, StandardDeviation]
[), ;, }, @, Override, public, StandardDeviation, copy, (, ), {, StandardDeviation, result, =, new, StandardDeviation, (, ), ;, copy]
[;, copy, (, this, ,, result, ), ;, return, result, ;, }, public, static, void, copy, (, StandardDeviation, source, ,]
[;, return, result, ;, }, public, static, void, copy, (, StandardDeviation, source, ,, StandardDeviation, dest, ), throws, NullArgumentException, {, MathUtils]
[,, result, ), ;, return, result, ;, }, public, static, void, copy, (, StandardDeviation, source, ,, StandardDeviation, dest, ), throws]
[), ;, return, result, ;, }, public, static, void, copy, (, StandardDeviation, source, ,, StandardDeviation, dest, ), throws, NullArgumentException, {]
[;, }, public, static, void, copy, (, StandardDeviation, source, ,, StandardDeviation, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (]
[;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest]
[., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;]
[;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., variance, =, source, ., variance, .]
[., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., variance]
[), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., variance, =, source, ., variance]
[;, dest, ., variance, =, source, ., variance, ., copy, (, ), ;, }, }]
[., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., variance, =, source, ., variance, ., copy, (]
[), ;, dest, ., variance, =, source, ., variance, ., copy, (, ), ;, }, }]
[., getDataRef, (, ), ), ;, dest, ., variance, =, source, ., variance, ., copy, (, ), ;, }, }]
[=, source, ., variance, ., copy, (, ), ;, }, }]
[., variance, =, source, ., variance, ., copy, (, ), ;, }, }]
[;, }, }]
[., copy, (, ), ;, }, }]
[., variance, ., copy, (, ), ;, }, }]
