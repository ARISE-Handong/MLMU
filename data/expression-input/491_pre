[,, StaticSymbolTable, <, SimpleSlot, ,, PreprocessorSymbolTable, ., Reference, >, {, private, final, Map, <, String, ,, SimpleSlot, >, symbols, =]
[,, StaticSymbolTable, <, SimpleSlot, ,, PreprocessorSymbolTable, ., Reference, >, {, private, final, Map, <, String, ,, SimpleSlot, >, symbols, =]
[SimpleSlot, >, symbols, =, Maps, ., newHashMap, (, ), ;, private, final, Multimap, <, String, ,, Reference, >, refs, =]
[SimpleSlot, >, symbols, =, Maps, ., newHashMap, (, ), ;, private, final, Multimap, <, String, ,, Reference, >, refs, =]
[>, refs, =, ArrayListMultimap, ., create, (, ), ;, private, final, Node, root, ;, PreprocessorSymbolTable, (, Node, root, ), {]
[>, refs, =, ArrayListMultimap, ., create, (, ), ;, private, final, Node, root, ;, PreprocessorSymbolTable, (, Node, root, ), {]
[., create, (, ), ;, private, final, Node, root, ;, PreprocessorSymbolTable, (, Node, root, ), {, this, ., root, =]
[Node, root, ), {, this, ., root, =, root, ;, }, @, Override, public, Node, getRootNode, (, ), {, return]
[Override, public, Node, getRootNode, (, ), {, return, root, ;, }, @, Override, public, JSType, getTypeOfThis, (, ), {, return]
[getTypeOfThis, (, ), {, return, null, ;, }, @, Override, public, StaticScope, <, JSType, >, getParentScope, (, ), {, return]
[>, getParentScope, (, ), {, return, null, ;, }, @, Override, public, SimpleSlot, getSlot, (, String, name, ), {, return]
[>, getParentScope, (, ), {, return, null, ;, }, @, Override, public, SimpleSlot, getSlot, (, String, name, ), {, return]
[{, return, null, ;, }, @, Override, public, SimpleSlot, getSlot, (, String, name, ), {, return, symbols, ., get, (]
[return, symbols, ., get, (, name, ), ;, }, @, Override, public, SimpleSlot, getOwnSlot, (, String, name, ), {, return]
[., get, (, name, ), ;, }, @, Override, public, SimpleSlot, getOwnSlot, (, String, name, ), {, return, getSlot, (]
[getSlot, (, name, ), ;, }, @, Override, public, Iterable, <, Reference, >, getReferences, (, SimpleSlot, symbol, ), {, return]
[getSlot, (, name, ), ;, }, @, Override, public, Iterable, <, Reference, >, getReferences, (, SimpleSlot, symbol, ), {, return]
[;, }, @, Override, public, Iterable, <, Reference, >, getReferences, (, SimpleSlot, symbol, ), {, return, Collections, ., unmodifiableCollection, (]
[;, }, @, Override, public, Iterable, <, Reference, >, getReferences, (, SimpleSlot, symbol, ), {, return, Collections, ., unmodifiableCollection, (]
[public, Iterable, <, Reference, >, getReferences, (, SimpleSlot, symbol, ), {, return, Collections, ., unmodifiableCollection, (, refs, ., get, (]
[public, Iterable, <, Reference, >, getReferences, (, SimpleSlot, symbol, ), {, return, Collections, ., unmodifiableCollection, (, refs, ., get, (]
[., getName, (, ), ), ), ;, }, @, Override, public, Iterable, <, SimpleSlot, >, getAllSymbols, (, ), {, return]
[., getName, (, ), ), ), ;, }, @, Override, public, Iterable, <, SimpleSlot, >, getAllSymbols, (, ), {, return]
[), ), ;, }, @, Override, public, Iterable, <, SimpleSlot, >, getAllSymbols, (, ), {, return, Collections, ., unmodifiableCollection, (]
[), ), ;, }, @, Override, public, Iterable, <, SimpleSlot, >, getAllSymbols, (, ), {, return, Collections, ., unmodifiableCollection, (]
[values, (, ), ), ;, }, @, Override, public, StaticScope, <, JSType, >, getScope, (, SimpleSlot, slot, ), {, return]
[getScope, (, SimpleSlot, slot, ), {, return, this, ;, }, void, addReference, (, Node, node, ), {, String, name, =]
[getScope, (, SimpleSlot, slot, ), {, return, this, ;, }, void, addReference, (, Node, node, ), {, String, name, =]
[return, this, ;, }, void, addReference, (, Node, node, ), {, String, name, =, node, ., getQualifiedName, (, ), ;]
[return, this, ;, }, void, addReference, (, Node, node, ), {, String, name, =, node, ., getQualifiedName, (, ), ;]
[void, addReference, (, Node, node, ), {, String, name, =, node, ., getQualifiedName, (, ), ;, Preconditions, ., checkNotNull, (]
[), {, String, name, =, node, ., getQualifiedName, (, ), ;, Preconditions, ., checkNotNull, (, name, ), ;, if, (]
[{, String, name, =, node, ., getQualifiedName, (, ), ;, Preconditions, ., checkNotNull, (, name, ), ;, if, (, !]
[{, String, name, =, node, ., getQualifiedName, (, ), ;, Preconditions, ., checkNotNull, (, name, ), ;, if, (, !]
[node, ., getQualifiedName, (, ), ;, Preconditions, ., checkNotNull, (, name, ), ;, if, (, !, symbols, ., containsKey, (]
[), ;, Preconditions, ., checkNotNull, (, name, ), ;, if, (, !, symbols, ., containsKey, (, name, ), ), {]
[), ;, Preconditions, ., checkNotNull, (, name, ), ;, if, (, !, symbols, ., containsKey, (, name, ), ), {]
[checkNotNull, (, name, ), ;, if, (, !, symbols, ., containsKey, (, name, ), ), {, symbols, ., put, (]
[name, ), ;, if, (, !, symbols, ., containsKey, (, name, ), ), {, symbols, ., put, (, name, ,]
[if, (, !, symbols, ., containsKey, (, name, ), ), {, symbols, ., put, (, name, ,, new, SimpleSlot, (]
[!, symbols, ., containsKey, (, name, ), ), {, symbols, ., put, (, name, ,, new, SimpleSlot, (, name, ,]
[., containsKey, (, name, ), ), {, symbols, ., put, (, name, ,, new, SimpleSlot, (, name, ,, null, ,]
[), {, symbols, ., put, (, name, ,, new, SimpleSlot, (, name, ,, null, ,, true, ), ), ;, }]
[), {, symbols, ., put, (, name, ,, new, SimpleSlot, (, name, ,, null, ,, true, ), ), ;, }]
[put, (, name, ,, new, SimpleSlot, (, name, ,, null, ,, true, ), ), ;, }, refs, ., put, (]
[name, ,, new, SimpleSlot, (, name, ,, null, ,, true, ), ), ;, }, refs, ., put, (, name, ,]
[SimpleSlot, (, name, ,, null, ,, true, ), ), ;, }, refs, ., put, (, name, ,, new, Reference, (]
[SimpleSlot, (, name, ,, null, ,, true, ), ), ;, }, refs, ., put, (, name, ,, new, Reference, (]
[null, ,, true, ), ), ;, }, refs, ., put, (, name, ,, new, Reference, (, symbols, ., get, (]
[), ), ;, }, refs, ., put, (, name, ,, new, Reference, (, symbols, ., get, (, name, ), ,]
[final, class, Reference, extends, SimpleReference, <, SimpleSlot, >, {, Reference, (, SimpleSlot, symbol, ,, Node, node, ), {, super, (]
[Reference, extends, SimpleReference, <, SimpleSlot, >, {, Reference, (, SimpleSlot, symbol, ,, Node, node, ), {, super, (, symbol, ,]
