[java, ., io, ., Serializable, ;, public, class, MockNameImpl, implements, MockName, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[,, Serializable, {, private, static, final, long, serialVersionUID, =, 8014974700844306925L, ;, private, final, String, mockName, ;, private, boolean, defaultName, ;]
[private, static, final, long, serialVersionUID, =, 8014974700844306925L, ;, private, final, String, mockName, ;, private, boolean, defaultName, ;, @, SuppressWarnings, (]
[boolean, defaultName, ;, @, SuppressWarnings, (, "unchecked", ), public, MockNameImpl, (, String, mockName, ,, Class, classToMock, ), {, if, (]
[boolean, defaultName, ;, @, SuppressWarnings, (, "unchecked", ), public, MockNameImpl, (, String, mockName, ,, Class, classToMock, ), {, if, (]
[;, @, SuppressWarnings, (, "unchecked", ), public, MockNameImpl, (, String, mockName, ,, Class, classToMock, ), {, if, (, mockName, ==]
[(, "unchecked", ), public, MockNameImpl, (, String, mockName, ,, Class, classToMock, ), {, if, (, mockName, ==, null, ), {]
[(, "unchecked", ), public, MockNameImpl, (, String, mockName, ,, Class, classToMock, ), {, if, (, mockName, ==, null, ), {]
[MockNameImpl, (, String, mockName, ,, Class, classToMock, ), {, if, (, mockName, ==, null, ), {, this, ., mockName, =]
[String, mockName, ,, Class, classToMock, ), {, if, (, mockName, ==, null, ), {, this, ., mockName, =, toInstanceName, (]
[Class, classToMock, ), {, if, (, mockName, ==, null, ), {, this, ., mockName, =, toInstanceName, (, classToMock, ), ;]
[Class, classToMock, ), {, if, (, mockName, ==, null, ), {, this, ., mockName, =, toInstanceName, (, classToMock, ), ;]
[if, (, mockName, ==, null, ), {, this, ., mockName, =, toInstanceName, (, classToMock, ), ;, this, ., defaultName, =]
[), {, this, ., mockName, =, toInstanceName, (, classToMock, ), ;, this, ., defaultName, =, true, ;, }, else, {]
[), {, this, ., mockName, =, toInstanceName, (, classToMock, ), ;, this, ., defaultName, =, true, ;, }, else, {]
[mockName, =, toInstanceName, (, classToMock, ), ;, this, ., defaultName, =, true, ;, }, else, {, this, ., mockName, =]
[true, ;, }, else, {, this, ., mockName, =, mockName, ;, }, }, public, MockNameImpl, (, String, mockName, ), {]
[true, ;, }, else, {, this, ., mockName, =, mockName, ;, }, }, public, MockNameImpl, (, String, mockName, ), {]
[{, this, ., mockName, =, mockName, ;, }, }, public, MockNameImpl, (, String, mockName, ), {, this, ., mockName, =]
[mockName, =, mockName, ;, }, private, static, String, toInstanceName, (, Class, <, ?, >, clazz, ), {, String, className, =]
[mockName, =, mockName, ;, }, private, static, String, toInstanceName, (, Class, <, ?, >, clazz, ), {, String, className, =]
[toInstanceName, (, Class, <, ?, >, clazz, ), {, String, className, =, clazz, ., getSimpleName, (, ), ;, if, (]
[toInstanceName, (, Class, <, ?, >, clazz, ), {, String, className, =, clazz, ., getSimpleName, (, ), ;, if, (]
[toInstanceName, (, Class, <, ?, >, clazz, ), {, String, className, =, clazz, ., getSimpleName, (, ), ;, if, (]
[clazz, ), {, String, className, =, clazz, ., getSimpleName, (, ), ;, if, (, className, ., length, (, ), ==]
[String, className, =, clazz, ., getSimpleName, (, ), ;, if, (, className, ., length, (, ), ==, 0, ), {]
[=, clazz, ., getSimpleName, (, ), ;, if, (, className, ., length, (, ), ==, 0, ), {, className, =]
[=, clazz, ., getSimpleName, (, ), ;, if, (, className, ., length, (, ), ==, 0, ), {, className, =]
[=, clazz, ., getSimpleName, (, ), ;, if, (, className, ., length, (, ), ==, 0, ), {, className, =]
[(, ), ==, 0, ), {, className, =, clazz, ., getSuperclass, (, ), ., getSimpleName, (, ), ;, }, return]
[(, ), ==, 0, ), {, className, =, clazz, ., getSuperclass, (, ), ., getSimpleName, (, ), ;, }, return]
[(, ), ==, 0, ), {, className, =, clazz, ., getSuperclass, (, ), ., getSimpleName, (, ), ;, }, return]
[(, ), ==, 0, ), {, className, =, clazz, ., getSuperclass, (, ), ., getSimpleName, (, ), ;, }, return]
[), {, className, =, clazz, ., getSuperclass, (, ), ., getSimpleName, (, ), ;, }, return, className, ., substring, (]
[className, =, clazz, ., getSuperclass, (, ), ., getSimpleName, (, ), ;, }, return, className, ., substring, (, 0, ,]
[., getSimpleName, (, ), ;, }, return, className, ., substring, (, 0, ,, 1, ), ., toLowerCase, (, ), +]
[., getSimpleName, (, ), ;, }, return, className, ., substring, (, 0, ,, 1, ), ., toLowerCase, (, ), +]
[;, }, return, className, ., substring, (, 0, ,, 1, ), ., toLowerCase, (, ), +, className, ., substring, (]
[., toLowerCase, (, ), +, className, ., substring, (, 1, ), ;, }, public, boolean, isDefault, (, ), {, return]
[}, public, boolean, isDefault, (, ), {, return, defaultName, ;, }, @, Override, public, String, toString, (, ), {, return]
