[public, class, InvocationContainerImpl, implements, InvocationContainer, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -, 5334301962749537177L, ;, private, final, LinkedList]
[), public, class, InvocationContainerImpl, implements, InvocationContainer, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -, 5334301962749537177L, ;, private, final]
[;, private, final, LinkedList, <, StubbedInvocationMatcher, >, stubbed, =, new, LinkedList, <, StubbedInvocationMatcher, >, (, ), ;, private, final, MockingProgress]
[;, private, final, LinkedList, <, StubbedInvocationMatcher, >, stubbed, =, new, LinkedList, <, StubbedInvocationMatcher, >, (, ), ;, private, final, MockingProgress]
[;, private, final, MockingProgress, mockingProgress, ;, private, final, List, <, Answer, >, answersForStubbing, =, new, ArrayList, <, Answer, >, (]
[;, private, final, RegisteredInvocations, registeredInvocations, ;, private, InvocationMatcher, invocationForStubbing, ;, public, InvocationContainerImpl, (, MockingProgress, mockingProgress, ,, MockCreationSettings, mockSettings, ), {]
[=, mockingProgress, ;, this, ., registeredInvocations, =, createRegisteredInvocations, (, mockSettings, ), ;, }, public, void, setInvocationForPotentialStubbing, (, InvocationMatcher, invocation, )]
[., mockingProgress, =, mockingProgress, ;, this, ., registeredInvocations, =, createRegisteredInvocations, (, mockSettings, ), ;, }, public, void, setInvocationForPotentialStubbing, (, InvocationMatcher]
[;, this, ., registeredInvocations, =, createRegisteredInvocations, (, mockSettings, ), ;, }, public, void, setInvocationForPotentialStubbing, (, InvocationMatcher, invocation, ), {, registeredInvocations]
[=, createRegisteredInvocations, (, mockSettings, ), ;, }, public, void, setInvocationForPotentialStubbing, (, InvocationMatcher, invocation, ), {, registeredInvocations, ., add, (, invocation]
[., registeredInvocations, =, createRegisteredInvocations, (, mockSettings, ), ;, }, public, void, setInvocationForPotentialStubbing, (, InvocationMatcher, invocation, ), {, registeredInvocations, ., add]
[;, }, public, void, setInvocationForPotentialStubbing, (, InvocationMatcher, invocation, ), {, registeredInvocations, ., add, (, invocation, ., getInvocation, (, ), )]
[), ;, }, public, void, setInvocationForPotentialStubbing, (, InvocationMatcher, invocation, ), {, registeredInvocations, ., add, (, invocation, ., getInvocation, (, )]
[;, this, ., invocationForStubbing, =, invocation, ;, }, public, void, resetInvocationForPotentialStubbing, (, InvocationMatcher, invocationMatcher, ), {, this, ., invocationForStubbing, =]
[., add, (, invocation, ., getInvocation, (, ), ), ;, this, ., invocationForStubbing, =, invocation, ;, }, public, void, resetInvocationForPotentialStubbing]
[), ;, this, ., invocationForStubbing, =, invocation, ;, }, public, void, resetInvocationForPotentialStubbing, (, InvocationMatcher, invocationMatcher, ), {, this, ., invocationForStubbing]
[., getInvocation, (, ), ), ;, this, ., invocationForStubbing, =, invocation, ;, }, public, void, resetInvocationForPotentialStubbing, (, InvocationMatcher, invocationMatcher, )]
[=, invocation, ;, }, public, void, resetInvocationForPotentialStubbing, (, InvocationMatcher, invocationMatcher, ), {, this, ., invocationForStubbing, =, invocationMatcher, ;, }, public]
[., invocationForStubbing, =, invocation, ;, }, public, void, resetInvocationForPotentialStubbing, (, InvocationMatcher, invocationMatcher, ), {, this, ., invocationForStubbing, =, invocationMatcher, ;]
[;, }, public, void, resetInvocationForPotentialStubbing, (, InvocationMatcher, invocationMatcher, ), {, this, ., invocationForStubbing, =, invocationMatcher, ;, }, public, void, addAnswer]
[=, invocationMatcher, ;, }, public, void, addAnswer, (, Answer, answer, ), {, registeredInvocations, ., removeLast, (, ), ;, addAnswer, (]
[., invocationForStubbing, =, invocationMatcher, ;, }, public, void, addAnswer, (, Answer, answer, ), {, registeredInvocations, ., removeLast, (, ), ;]
[;, }, public, void, addAnswer, (, Answer, answer, ), {, registeredInvocations, ., removeLast, (, ), ;, addAnswer, (, answer, ,]
[;, addAnswer, (, answer, ,, false, ), ;, }, public, void, addConsecutiveAnswer, (, Answer, answer, ), {, addAnswer, (, answer]
[., removeLast, (, ), ;, addAnswer, (, answer, ,, false, ), ;, }, public, void, addConsecutiveAnswer, (, Answer, answer, )]
[;, }, public, void, addConsecutiveAnswer, (, Answer, answer, ), {, addAnswer, (, answer, ,, true, ), ;, }, public, void]
[,, false, ), ;, }, public, void, addConsecutiveAnswer, (, Answer, answer, ), {, addAnswer, (, answer, ,, true, ), ;]
[), ;, }, public, void, addConsecutiveAnswer, (, Answer, answer, ), {, addAnswer, (, answer, ,, true, ), ;, }, public]
[;, }, public, void, addAnswer, (, Answer, answer, ,, boolean, isConsecutive, ), {, Invocation, invocation, =, invocationForStubbing, ., getInvocation, (]
[,, true, ), ;, }, public, void, addAnswer, (, Answer, answer, ,, boolean, isConsecutive, ), {, Invocation, invocation, =, invocationForStubbing]
[), ;, }, public, void, addAnswer, (, Answer, answer, ,, boolean, isConsecutive, ), {, Invocation, invocation, =, invocationForStubbing, ., getInvocation]
[;, mockingProgress, ., stubbingCompleted, (, invocation, ), ;, AnswersValidator, answersValidator, =, new, AnswersValidator, (, ), ;, answersValidator, ., validate, (]
[., getInvocation, (, ), ;, mockingProgress, ., stubbingCompleted, (, invocation, ), ;, AnswersValidator, answersValidator, =, new, AnswersValidator, (, ), ;]
[;, AnswersValidator, answersValidator, =, new, AnswersValidator, (, ), ;, answersValidator, ., validate, (, answer, ,, invocation, ), ;, synchronized, (]
[., stubbingCompleted, (, invocation, ), ;, AnswersValidator, answersValidator, =, new, AnswersValidator, (, ), ;, answersValidator, ., validate, (, answer, ,]
[), ;, AnswersValidator, answersValidator, =, new, AnswersValidator, (, ), ;, answersValidator, ., validate, (, answer, ,, invocation, ), ;, synchronized]
[;, answersValidator, ., validate, (, answer, ,, invocation, ), ;, synchronized, (, stubbed, ), {, if, (, isConsecutive, ), {]
[;, synchronized, (, stubbed, ), {, if, (, isConsecutive, ), {, stubbed, ., getFirst, (, ), ., addAnswer, (, answer]
[., validate, (, answer, ,, invocation, ), ;, synchronized, (, stubbed, ), {, if, (, isConsecutive, ), {, stubbed, .]
[,, invocation, ), ;, synchronized, (, stubbed, ), {, if, (, isConsecutive, ), {, stubbed, ., getFirst, (, ), .]
[), ;, synchronized, (, stubbed, ), {, if, (, isConsecutive, ), {, stubbed, ., getFirst, (, ), ., addAnswer, (]
[), {, if, (, isConsecutive, ), {, stubbed, ., getFirst, (, ), ., addAnswer, (, answer, ), ;, }, else]
[), {, stubbed, ., getFirst, (, ), ., addAnswer, (, answer, ), ;, }, else, {, stubbed, ., addFirst, (]
[;, }, else, {, stubbed, ., addFirst, (, new, StubbedInvocationMatcher, (, invocationForStubbing, ,, answer, ), ), ;, }, }, }]
[., addAnswer, (, answer, ), ;, }, else, {, stubbed, ., addFirst, (, new, StubbedInvocationMatcher, (, invocationForStubbing, ,, answer, )]
[., getFirst, (, ), ., addAnswer, (, answer, ), ;, }, else, {, stubbed, ., addFirst, (, new, StubbedInvocationMatcher, (]
[), ;, }, else, {, stubbed, ., addFirst, (, new, StubbedInvocationMatcher, (, invocationForStubbing, ,, answer, ), ), ;, }, }]
[;, }, }, }, Object, answerTo, (, Invocation, invocation, ), throws, Throwable, {, return, findAnswerFor, (, invocation, ), ., answer]
[., addFirst, (, new, StubbedInvocationMatcher, (, invocationForStubbing, ,, answer, ), ), ;, }, }, }, Object, answerTo, (, Invocation, invocation]
[), ;, }, }, }, Object, answerTo, (, Invocation, invocation, ), throws, Throwable, {, return, findAnswerFor, (, invocation, ), .]
[,, answer, ), ), ;, }, }, }, Object, answerTo, (, Invocation, invocation, ), throws, Throwable, {, return, findAnswerFor, (]
[), ), ;, }, }, }, Object, answerTo, (, Invocation, invocation, ), throws, Throwable, {, return, findAnswerFor, (, invocation, )]
[;, }, public, StubbedInvocationMatcher, findAnswerFor, (, Invocation, invocation, ), {, synchronized, (, stubbed, ), {, for, (, StubbedInvocationMatcher, s, :]
[., answer, (, invocation, ), ;, }, public, StubbedInvocationMatcher, findAnswerFor, (, Invocation, invocation, ), {, synchronized, (, stubbed, ), {]
[), ., answer, (, invocation, ), ;, }, public, StubbedInvocationMatcher, findAnswerFor, (, Invocation, invocation, ), {, synchronized, (, stubbed, )]
[), ;, }, public, StubbedInvocationMatcher, findAnswerFor, (, Invocation, invocation, ), {, synchronized, (, stubbed, ), {, for, (, StubbedInvocationMatcher, s]
[), {, for, (, StubbedInvocationMatcher, s, :, stubbed, ), {, if, (, s, ., matches, (, invocation, ), ), {]
[), {, if, (, s, ., matches, (, invocation, ), ), {, s, ., markStubUsed, (, invocation, ), ;, invocation]
[), {, s, ., markStubUsed, (, invocation, ), ;, invocation, ., markStubbed, (, new, StubInfoImpl, (, s, ), ), ;]
[., matches, (, invocation, ), ), {, s, ., markStubUsed, (, invocation, ), ;, invocation, ., markStubbed, (, new, StubInfoImpl]
[), ), {, s, ., markStubUsed, (, invocation, ), ;, invocation, ., markStubbed, (, new, StubInfoImpl, (, s, ), )]
[;, invocation, ., markStubbed, (, new, StubInfoImpl, (, s, ), ), ;, return, s, ;, }, }, }, return, null]
[., markStubUsed, (, invocation, ), ;, invocation, ., markStubbed, (, new, StubInfoImpl, (, s, ), ), ;, return, s, ;]
[), ;, invocation, ., markStubbed, (, new, StubInfoImpl, (, s, ), ), ;, return, s, ;, }, }, }, return]
[;, return, s, ;, }, }, }, return, null, ;, }, public, void, addAnswerForVoidMethod, (, Answer, answer, ), {, answersForStubbing]
[., markStubbed, (, new, StubInfoImpl, (, s, ), ), ;, return, s, ;, }, }, }, return, null, ;, }]
[), ;, return, s, ;, }, }, }, return, null, ;, }, public, void, addAnswerForVoidMethod, (, Answer, answer, ), {]
[), ), ;, return, s, ;, }, }, }, return, null, ;, }, public, void, addAnswerForVoidMethod, (, Answer, answer, )]
[;, }, }, }, return, null, ;, }, public, void, addAnswerForVoidMethod, (, Answer, answer, ), {, answersForStubbing, ., add, (]
[;, }, public, void, addAnswerForVoidMethod, (, Answer, answer, ), {, answersForStubbing, ., add, (, answer, ), ;, }, public, void]
[;, }, public, void, setAnswersForStubbing, (, List, <, Answer, >, answers, ), {, answersForStubbing, ., addAll, (, answers, ), ;]
[., add, (, answer, ), ;, }, public, void, setAnswersForStubbing, (, List, <, Answer, >, answers, ), {, answersForStubbing, .]
[), ;, }, public, void, setAnswersForStubbing, (, List, <, Answer, >, answers, ), {, answersForStubbing, ., addAll, (, answers, )]
[;, }, public, boolean, hasAnswersForStubbing, (, ), {, return, !, answersForStubbing, ., isEmpty, (, ), ;, }, public, boolean, hasInvocationForPotentialStubbing]
[., addAll, (, answers, ), ;, }, public, boolean, hasAnswersForStubbing, (, ), {, return, !, answersForStubbing, ., isEmpty, (, )]
[), ;, }, public, boolean, hasAnswersForStubbing, (, ), {, return, !, answersForStubbing, ., isEmpty, (, ), ;, }, public, boolean]
[;, }, public, boolean, hasInvocationForPotentialStubbing, (, ), {, return, !, registeredInvocations, ., isEmpty, (, ), ;, }, public, void, setMethodForStubbing]
[;, }, public, boolean, hasInvocationForPotentialStubbing, (, ), {, return, !, registeredInvocations, ., isEmpty, (, ), ;, }, public, void, setMethodForStubbing]
[., isEmpty, (, ), ;, }, public, boolean, hasInvocationForPotentialStubbing, (, ), {, return, !, registeredInvocations, ., isEmpty, (, ), ;]
[;, }, public, void, setMethodForStubbing, (, InvocationMatcher, invocation, ), {, invocationForStubbing, =, invocation, ;, assert, hasAnswersForStubbing, (, ), ;, for]
[;, }, public, void, setMethodForStubbing, (, InvocationMatcher, invocation, ), {, invocationForStubbing, =, invocation, ;, assert, hasAnswersForStubbing, (, ), ;, for]
[., isEmpty, (, ), ;, }, public, void, setMethodForStubbing, (, InvocationMatcher, invocation, ), {, invocationForStubbing, =, invocation, ;, assert, hasAnswersForStubbing]
[=, invocation, ;, assert, hasAnswersForStubbing, (, ), ;, for, (, int, i, =, 0, ;, i, <, answersForStubbing, ., size]
[;, assert, hasAnswersForStubbing, (, ), ;, for, (, int, i, =, 0, ;, i, <, answersForStubbing, ., size, (, )]
[;, for, (, int, i, =, 0, ;, i, <, answersForStubbing, ., size, (, ), ;, i, ++, ), {]
[;, i, <, answersForStubbing, ., size, (, ), ;, i, ++, ), {, addAnswer, (, answersForStubbing, ., get, (, i]
[;, i, ++, ), {, addAnswer, (, answersForStubbing, ., get, (, i, ), ,, i, !=, 0, ), ;, }]
[<, answersForStubbing, ., size, (, ), ;, i, ++, ), {, addAnswer, (, answersForStubbing, ., get, (, i, ), ,]
[;, i, ++, ), {, addAnswer, (, answersForStubbing, ., get, (, i, ), ,, i, !=, 0, ), ;, }]
[., size, (, ), ;, i, ++, ), {, addAnswer, (, answersForStubbing, ., get, (, i, ), ,, i, !=]
[), {, addAnswer, (, answersForStubbing, ., get, (, i, ), ,, i, !=, 0, ), ;, }, answersForStubbing, ., clear]
[++, ), {, addAnswer, (, answersForStubbing, ., get, (, i, ), ,, i, !=, 0, ), ;, }, answersForStubbing, .]
[;, }, answersForStubbing, ., clear, (, ), ;, }, @, Override, public, String, toString, (, ), {, return, "invocationForStubbing: ", +]
[,, i, !=, 0, ), ;, }, answersForStubbing, ., clear, (, ), ;, }, @, Override, public, String, toString, (]
[., get, (, i, ), ,, i, !=, 0, ), ;, }, answersForStubbing, ., clear, (, ), ;, }, @]
[), ,, i, !=, 0, ), ;, }, answersForStubbing, ., clear, (, ), ;, }, @, Override, public, String, toString]
[), ;, }, answersForStubbing, ., clear, (, ), ;, }, @, Override, public, String, toString, (, ), {, return, "invocationForStubbing: "]
[!=, 0, ), ;, }, answersForStubbing, ., clear, (, ), ;, }, @, Override, public, String, toString, (, ), {]
[), ;, }, answersForStubbing, ., clear, (, ), ;, }, @, Override, public, String, toString, (, ), {, return, "invocationForStubbing: "]
[;, }, @, Override, public, String, toString, (, ), {, return, "invocationForStubbing: ", +, invocationForStubbing, ;, }, public, List, <, Invocation]
[., clear, (, ), ;, }, @, Override, public, String, toString, (, ), {, return, "invocationForStubbing: ", +, invocationForStubbing, ;, }]
[;, }, public, List, <, Invocation, >, getInvocations, (, ), {, return, registeredInvocations, ., getAll, (, ), ;, }, public]
[+, invocationForStubbing, ;, }, public, List, <, Invocation, >, getInvocations, (, ), {, return, registeredInvocations, ., getAll, (, ), ;]
[;, }, public, List, <, Invocation, >, getInvocations, (, ), {, return, registeredInvocations, ., getAll, (, ), ;, }, public]
[;, }, public, List, <, StubbedInvocationMatcher, >, getStubbedInvocations, (, ), {, return, stubbed, ;, }, public, Object, invokedMock, (, )]
[., getAll, (, ), ;, }, public, List, <, StubbedInvocationMatcher, >, getStubbedInvocations, (, ), {, return, stubbed, ;, }, public]
[;, }, public, Object, invokedMock, (, ), {, return, invocationForStubbing, ., getInvocation, (, ), ., getMock, (, ), ;, }]
[;, }, public, InvocationMatcher, getInvocationForStubbing, (, ), {, return, invocationForStubbing, ;, }, private, RegisteredInvocations, createRegisteredInvocations, (, MockCreationSettings, mockSettings, ), {]
[., getMock, (, ), ;, }, public, InvocationMatcher, getInvocationForStubbing, (, ), {, return, invocationForStubbing, ;, }, private, RegisteredInvocations, createRegisteredInvocations, (]
[., getInvocation, (, ), ., getMock, (, ), ;, }, public, InvocationMatcher, getInvocationForStubbing, (, ), {, return, invocationForStubbing, ;, }]
[;, }, private, RegisteredInvocations, createRegisteredInvocations, (, MockCreationSettings, mockSettings, ), {, return, mockSettings, ., isStubOnly, (, ), ?, new, SingleRegisteredInvocation, (]
[;, }, }]
[?, new, SingleRegisteredInvocation, (, ), :, new, DefaultRegisteredInvocations, (, ), ;, }, }]
[., isStubOnly, (, ), ?, new, SingleRegisteredInvocation, (, ), :, new, DefaultRegisteredInvocations, (, ), ;, }, }]
[:, new, DefaultRegisteredInvocations, (, ), ;, }, }]
[;, }, }]
