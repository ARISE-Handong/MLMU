[;, this, ., a, =, new, double, [, a, ., length, ], ;, this, ., c, =, new, double, []
[,, c, ), ;, this, ., a, =, new, double, [, a, ., length, ], ;, this, ., c, =]
[), ;, this, ., a, =, new, double, [, a, ., length, ], ;, this, ., c, =, new, double]
[=, new, double, [, a, ., length, ], ;, this, ., c, =, new, double, [, c, ., length, ]]
[., a, =, new, double, [, a, ., length, ], ;, this, ., c, =, new, double, [, c, .]
[;, this, ., c, =, new, double, [, c, ., length, ], ;, System, ., arraycopy, (, a, ,, 0]
[], ;, this, ., c, =, new, double, [, c, ., length, ], ;, System, ., arraycopy, (, a, ,]
[., length, ], ;, this, ., c, =, new, double, [, c, ., length, ], ;, System, ., arraycopy, (]
[=, new, double, [, c, ., length, ], ;, System, ., arraycopy, (, a, ,, 0, ,, this, ., a]
[., c, =, new, double, [, c, ., length, ], ;, System, ., arraycopy, (, a, ,, 0, ,, this]
[;, System, ., arraycopy, (, a, ,, 0, ,, this, ., a, ,, 0, ,, a, ., length, ), ;]
[], ;, System, ., arraycopy, (, a, ,, 0, ,, this, ., a, ,, 0, ,, a, ., length, )]
[., length, ], ;, System, ., arraycopy, (, a, ,, 0, ,, this, ., a, ,, 0, ,, a, .]
[;, System, ., arraycopy, (, c, ,, 0, ,, this, ., c, ,, 0, ,, c, ., length, ), ;]
[., arraycopy, (, a, ,, 0, ,, this, ., a, ,, 0, ,, a, ., length, ), ;, System, .]
[,, 0, ,, this, ., a, ,, 0, ,, a, ., length, ), ;, System, ., arraycopy, (, c, ,]
[,, this, ., a, ,, 0, ,, a, ., length, ), ;, System, ., arraycopy, (, c, ,, 0, ,]
[,, 0, ,, a, ., length, ), ;, System, ., arraycopy, (, c, ,, 0, ,, this, ., c, ,]
[., a, ,, 0, ,, a, ., length, ), ;, System, ., arraycopy, (, c, ,, 0, ,, this, .]
[,, a, ., length, ), ;, System, ., arraycopy, (, c, ,, 0, ,, this, ., c, ,, 0, ,]
[), ;, System, ., arraycopy, (, c, ,, 0, ,, this, ., c, ,, 0, ,, c, ., length, )]
[., length, ), ;, System, ., arraycopy, (, c, ,, 0, ,, this, ., c, ,, 0, ,, c, .]
[;, coefficientsComputed, =, false, ;, }, public, double, value, (, double, z, ), {, return, evaluate, (, a, ,, c]
[., arraycopy, (, c, ,, 0, ,, this, ., c, ,, 0, ,, c, ., length, ), ;, coefficientsComputed, =]
[,, 0, ,, this, ., c, ,, 0, ,, c, ., length, ), ;, coefficientsComputed, =, false, ;, }, public]
[,, this, ., c, ,, 0, ,, c, ., length, ), ;, coefficientsComputed, =, false, ;, }, public, double, value]
[,, 0, ,, c, ., length, ), ;, coefficientsComputed, =, false, ;, }, public, double, value, (, double, z, )]
[., c, ,, 0, ,, c, ., length, ), ;, coefficientsComputed, =, false, ;, }, public, double, value, (, double]
[,, c, ., length, ), ;, coefficientsComputed, =, false, ;, }, public, double, value, (, double, z, ), {, return]
[), ;, coefficientsComputed, =, false, ;, }, public, double, value, (, double, z, ), {, return, evaluate, (, a, ,]
[., length, ), ;, coefficientsComputed, =, false, ;, }, public, double, value, (, double, z, ), {, return, evaluate, (]
[=, false, ;, }, public, double, value, (, double, z, ), {, return, evaluate, (, a, ,, c, ,, z]
[;, }, public, double, value, (, double, z, ), {, return, evaluate, (, a, ,, c, ,, z, ), ;]
[;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, verifyInputArray, (, a, ,, c, ), ;, final, int]
[,, c, ,, z, ), ;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, verifyInputArray, (, a, ,]
[,, z, ), ;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, verifyInputArray, (, a, ,, c, )]
[), ;, }, public, DerivativeStructure, value, (, final, DerivativeStructure, t, ), {, verifyInputArray, (, a, ,, c, ), ;, final]
[;, final, int, n, =, c, ., length, ;, DerivativeStructure, value, =, new, DerivativeStructure, (, t, ., getFreeParameters, (, )]
[,, c, ), ;, final, int, n, =, c, ., length, ;, DerivativeStructure, value, =, new, DerivativeStructure, (, t, .]
[), ;, final, int, n, =, c, ., length, ;, DerivativeStructure, value, =, new, DerivativeStructure, (, t, ., getFreeParameters, (]
[;, DerivativeStructure, value, =, new, DerivativeStructure, (, t, ., getFreeParameters, (, ), ,, t, ., getOrder, (, ), ,, a]
[., length, ;, DerivativeStructure, value, =, new, DerivativeStructure, (, t, ., getFreeParameters, (, ), ,, t, ., getOrder, (, )]
[;, for, (, int, i, =, n, -, 1, ;, i, >=, 0, ;, i, --, ), {, value, =]
[,, t, ., getOrder, (, ), ,, a, [, n, ], ), ;, for, (, int, i, =, n, -]
[., getFreeParameters, (, ), ,, t, ., getOrder, (, ), ,, a, [, n, ], ), ;, for, (, int]
[,, a, [, n, ], ), ;, for, (, int, i, =, n, -, 1, ;, i, >=, 0, ;]
[., getOrder, (, ), ,, a, [, n, ], ), ;, for, (, int, i, =, n, -, 1, ;]
[), ;, for, (, int, i, =, n, -, 1, ;, i, >=, 0, ;, i, --, ), {, value]
[[, n, ], ), ;, for, (, int, i, =, n, -, 1, ;, i, >=, 0, ;, i, --]
[], ), ;, for, (, int, i, =, n, -, 1, ;, i, >=, 0, ;, i, --, ), {]
[;, i, >=, 0, ;, i, --, ), {, value, =, t, ., subtract, (, c, [, i, ], )]
[-, 1, ;, i, >=, 0, ;, i, --, ), {, value, =, t, ., subtract, (, c, [, i]
[;, i, >=, 0, ;, i, --, ), {, value, =, t, ., subtract, (, c, [, i, ], )]
[;, i, --, ), {, value, =, t, ., subtract, (, c, [, i, ], ), ., multiply, (, value]
[>=, 0, ;, i, --, ), {, value, =, t, ., subtract, (, c, [, i, ], ), ., multiply]
[;, i, --, ), {, value, =, t, ., subtract, (, c, [, i, ], ), ., multiply, (, value]
[), {, value, =, t, ., subtract, (, c, [, i, ], ), ., multiply, (, value, ), ., add]
[--, ), {, value, =, t, ., subtract, (, c, [, i, ], ), ., multiply, (, value, ), .]
[=, t, ., subtract, (, c, [, i, ], ), ., multiply, (, value, ), ., add, (, a, []
[;, }, return, value, ;, }, public, int, degree, (, ), {, return, c, ., length, ;, }, public, double]
[., add, (, a, [, i, ], ), ;, }, return, value, ;, }, public, int, degree, (, ), {]
[., multiply, (, value, ), ., add, (, a, [, i, ], ), ;, }, return, value, ;, }, public]
[., subtract, (, c, [, i, ], ), ., multiply, (, value, ), ., add, (, a, [, i, ]]
[), ., multiply, (, value, ), ., add, (, a, [, i, ], ), ;, }, return, value, ;, }]
[[, i, ], ), ., multiply, (, value, ), ., add, (, a, [, i, ], ), ;, }, return]
[], ), ., multiply, (, value, ), ., add, (, a, [, i, ], ), ;, }, return, value, ;]
[), ., add, (, a, [, i, ], ), ;, }, return, value, ;, }, public, int, degree, (, )]
[), ;, }, return, value, ;, }, public, int, degree, (, ), {, return, c, ., length, ;, }, public]
[[, i, ], ), ;, }, return, value, ;, }, public, int, degree, (, ), {, return, c, ., length]
[], ), ;, }, return, value, ;, }, public, int, degree, (, ), {, return, c, ., length, ;, }]
[;, }, public, int, degree, (, ), {, return, c, ., length, ;, }, public, double, [, ], getNewtonCoefficients, (]
[;, }, public, double, [, ], getNewtonCoefficients, (, ), {, double, [, ], out, =, new, double, [, a, .]
[., length, ;, }, public, double, [, ], getNewtonCoefficients, (, ), {, double, [, ], out, =, new, double, []
[;, System, ., arraycopy, (, a, ,, 0, ,, out, ,, 0, ,, a, ., length, ), ;, return, out]
[], ;, System, ., arraycopy, (, a, ,, 0, ,, out, ,, 0, ,, a, ., length, ), ;, return]
[., length, ], ;, System, ., arraycopy, (, a, ,, 0, ,, out, ,, 0, ,, a, ., length, )]
[;, return, out, ;, }, public, double, [, ], getCenters, (, ), {, double, [, ], out, =, new, double]
[., arraycopy, (, a, ,, 0, ,, out, ,, 0, ,, a, ., length, ), ;, return, out, ;, }]
[,, 0, ,, out, ,, 0, ,, a, ., length, ), ;, return, out, ;, }, public, double, [, ]]
[,, out, ,, 0, ,, a, ., length, ), ;, return, out, ;, }, public, double, [, ], getCenters, (]
[,, 0, ,, a, ., length, ), ;, return, out, ;, }, public, double, [, ], getCenters, (, ), {]
[,, a, ., length, ), ;, return, out, ;, }, public, double, [, ], getCenters, (, ), {, double, []
[), ;, return, out, ;, }, public, double, [, ], getCenters, (, ), {, double, [, ], out, =, new]
[., length, ), ;, return, out, ;, }, public, double, [, ], getCenters, (, ), {, double, [, ], out]
[;, }, public, double, [, ], getCenters, (, ), {, double, [, ], out, =, new, double, [, c, .]
[;, System, ., arraycopy, (, c, ,, 0, ,, out, ,, 0, ,, c, ., length, ), ;, return, out]
[], ;, System, ., arraycopy, (, c, ,, 0, ,, out, ,, 0, ,, c, ., length, ), ;, return]
[., length, ], ;, System, ., arraycopy, (, c, ,, 0, ,, out, ,, 0, ,, c, ., length, )]
[;, return, out, ;, }, public, double, [, ], getCoefficients, (, ), {, if, (, !, coefficientsComputed, ), {, computeCoefficients]
[., arraycopy, (, c, ,, 0, ,, out, ,, 0, ,, c, ., length, ), ;, return, out, ;, }]
[,, 0, ,, out, ,, 0, ,, c, ., length, ), ;, return, out, ;, }, public, double, [, ]]
[,, out, ,, 0, ,, c, ., length, ), ;, return, out, ;, }, public, double, [, ], getCoefficients, (]
[,, 0, ,, c, ., length, ), ;, return, out, ;, }, public, double, [, ], getCoefficients, (, ), {]
[,, c, ., length, ), ;, return, out, ;, }, public, double, [, ], getCoefficients, (, ), {, if, (]
[), ;, return, out, ;, }, public, double, [, ], getCoefficients, (, ), {, if, (, !, coefficientsComputed, ), {]
[., length, ), ;, return, out, ;, }, public, double, [, ], getCoefficients, (, ), {, if, (, !, coefficientsComputed]
[;, }, public, double, [, ], getCoefficients, (, ), {, if, (, !, coefficientsComputed, ), {, computeCoefficients, (, ), ;]
[), {, computeCoefficients, (, ), ;, }, double, [, ], out, =, new, double, [, coefficients, ., length, ], ;]
[), {, computeCoefficients, (, ), ;, }, double, [, ], out, =, new, double, [, coefficients, ., length, ], ;]
[;, }, double, [, ], out, =, new, double, [, coefficients, ., length, ], ;, System, ., arraycopy, (, coefficients]
[;, System, ., arraycopy, (, coefficients, ,, 0, ,, out, ,, 0, ,, coefficients, ., length, ), ;, return, out]
[], ;, System, ., arraycopy, (, coefficients, ,, 0, ,, out, ,, 0, ,, coefficients, ., length, ), ;, return]
[., length, ], ;, System, ., arraycopy, (, coefficients, ,, 0, ,, out, ,, 0, ,, coefficients, ., length, )]
[;, return, out, ;, }, public, static, double, evaluate, (, double, a, [, ], ,, double, c, [, ], ,]
[., arraycopy, (, coefficients, ,, 0, ,, out, ,, 0, ,, coefficients, ., length, ), ;, return, out, ;, }]
[,, 0, ,, out, ,, 0, ,, coefficients, ., length, ), ;, return, out, ;, }, public, static, double, evaluate]
[,, out, ,, 0, ,, coefficients, ., length, ), ;, return, out, ;, }, public, static, double, evaluate, (, double]
[,, 0, ,, coefficients, ., length, ), ;, return, out, ;, }, public, static, double, evaluate, (, double, a, []
[,, coefficients, ., length, ), ;, return, out, ;, }, public, static, double, evaluate, (, double, a, [, ], ,]
[), ;, return, out, ;, }, public, static, double, evaluate, (, double, a, [, ], ,, double, c, [, ]]
[., length, ), ;, return, out, ;, }, public, static, double, evaluate, (, double, a, [, ], ,, double, c]
[;, }, public, static, double, evaluate, (, double, a, [, ], ,, double, c, [, ], ,, double, z, )]
[;, final, int, n, =, c, ., length, ;, double, value, =, a, [, n, ], ;, for, (, int]
[,, c, ), ;, final, int, n, =, c, ., length, ;, double, value, =, a, [, n, ], ;]
[), ;, final, int, n, =, c, ., length, ;, double, value, =, a, [, n, ], ;, for, (]
[;, double, value, =, a, [, n, ], ;, for, (, int, i, =, n, -, 1, ;, i, >=]
[., length, ;, double, value, =, a, [, n, ], ;, for, (, int, i, =, n, -, 1, ;]
[;, for, (, int, i, =, n, -, 1, ;, i, >=, 0, ;, i, --, ), {, value, =]
[[, n, ], ;, for, (, int, i, =, n, -, 1, ;, i, >=, 0, ;, i, --, )]
[], ;, for, (, int, i, =, n, -, 1, ;, i, >=, 0, ;, i, --, ), {, value]
[;, i, >=, 0, ;, i, --, ), {, value, =, a, [, i, ], +, (, z, -, c]
[-, 1, ;, i, >=, 0, ;, i, --, ), {, value, =, a, [, i, ], +, (, z]
[;, i, >=, 0, ;, i, --, ), {, value, =, a, [, i, ], +, (, z, -, c]
[;, i, --, ), {, value, =, a, [, i, ], +, (, z, -, c, [, i, ], )]
[>=, 0, ;, i, --, ), {, value, =, a, [, i, ], +, (, z, -, c, [, i]
[;, i, --, ), {, value, =, a, [, i, ], +, (, z, -, c, [, i, ], )]
[), {, value, =, a, [, i, ], +, (, z, -, c, [, i, ], ), *, value, ;]
[--, ), {, value, =, a, [, i, ], +, (, z, -, c, [, i, ], ), *, value]
[=, a, [, i, ], +, (, z, -, c, [, i, ], ), *, value, ;, }, return, value]
[;, }, return, value, ;, }, protected, void, computeCoefficients, (, ), {, final, int, n, =, degree, (, ), ;]
[+, (, z, -, c, [, i, ], ), *, value, ;, }, return, value, ;, }, protected, void, computeCoefficients]
[[, i, ], +, (, z, -, c, [, i, ], ), *, value, ;, }, return, value, ;, }]
[], +, (, z, -, c, [, i, ], ), *, value, ;, }, return, value, ;, }, protected, void]
[;, }, return, value, ;, }, protected, void, computeCoefficients, (, ), {, final, int, n, =, degree, (, ), ;]
[*, value, ;, }, return, value, ;, }, protected, void, computeCoefficients, (, ), {, final, int, n, =, degree, (]
[), *, value, ;, }, return, value, ;, }, protected, void, computeCoefficients, (, ), {, final, int, n, =, degree]
[-, c, [, i, ], ), *, value, ;, }, return, value, ;, }, protected, void, computeCoefficients, (, ), {]
[), *, value, ;, }, return, value, ;, }, protected, void, computeCoefficients, (, ), {, final, int, n, =, degree]
[[, i, ], ), *, value, ;, }, return, value, ;, }, protected, void, computeCoefficients, (, ), {, final, int]
[], ), *, value, ;, }, return, value, ;, }, protected, void, computeCoefficients, (, ), {, final, int, n, =]
[;, }, return, value, ;, }, protected, void, computeCoefficients, (, ), {, final, int, n, =, degree, (, ), ;]
[;, }, protected, void, computeCoefficients, (, ), {, final, int, n, =, degree, (, ), ;, coefficients, =, new, double]
[;, coefficients, =, new, double, [, n, +, 1, ], ;, for, (, int, i, =, 0, ;, i, <=]
[=, new, double, [, n, +, 1, ], ;, for, (, int, i, =, 0, ;, i, <=, n, ;]
[;, for, (, int, i, =, 0, ;, i, <=, n, ;, i, ++, ), {, coefficients, [, i, ]]
[], ;, for, (, int, i, =, 0, ;, i, <=, n, ;, i, ++, ), {, coefficients, [, i]
[+, 1, ], ;, for, (, int, i, =, 0, ;, i, <=, n, ;, i, ++, ), {, coefficients]
[], ;, for, (, int, i, =, 0, ;, i, <=, n, ;, i, ++, ), {, coefficients, [, i]
[;, i, <=, n, ;, i, ++, ), {, coefficients, [, i, ], =, 0.0, ;, }, coefficients, [, 0]
[;, i, ++, ), {, coefficients, [, i, ], =, 0.0, ;, }, coefficients, [, 0, ], =, a, []
[<=, n, ;, i, ++, ), {, coefficients, [, i, ], =, 0.0, ;, }, coefficients, [, 0, ], =]
[;, i, ++, ), {, coefficients, [, i, ], =, 0.0, ;, }, coefficients, [, 0, ], =, a, []
[), {, coefficients, [, i, ], =, 0.0, ;, }, coefficients, [, 0, ], =, a, [, n, ], ;]
[++, ), {, coefficients, [, i, ], =, 0.0, ;, }, coefficients, [, 0, ], =, a, [, n, ]]
[=, 0.0, ;, }, coefficients, [, 0, ], =, a, [, n, ], ;, for, (, int, i, =, n]
[[, i, ], =, 0.0, ;, }, coefficients, [, 0, ], =, a, [, n, ], ;, for, (, int]
[], =, 0.0, ;, }, coefficients, [, 0, ], =, a, [, n, ], ;, for, (, int, i, =]
[;, }, coefficients, [, 0, ], =, a, [, n, ], ;, for, (, int, i, =, n, -, 1]
[=, a, [, n, ], ;, for, (, int, i, =, n, -, 1, ;, i, >=, 0, ;, i]
[[, 0, ], =, a, [, n, ], ;, for, (, int, i, =, n, -, 1, ;, i, >=]
[], =, a, [, n, ], ;, for, (, int, i, =, n, -, 1, ;, i, >=, 0, ;]
[;, for, (, int, i, =, n, -, 1, ;, i, >=, 0, ;, i, --, ), {, for, (]
[[, n, ], ;, for, (, int, i, =, n, -, 1, ;, i, >=, 0, ;, i, --, )]
[], ;, for, (, int, i, =, n, -, 1, ;, i, >=, 0, ;, i, --, ), {, for]
[;, i, >=, 0, ;, i, --, ), {, for, (, int, j, =, n, -, i, ;, j, >]
[-, 1, ;, i, >=, 0, ;, i, --, ), {, for, (, int, j, =, n, -, i, ;]
[;, i, >=, 0, ;, i, --, ), {, for, (, int, j, =, n, -, i, ;, j, >]
[;, i, --, ), {, for, (, int, j, =, n, -, i, ;, j, >, 0, ;, j, --]
[>=, 0, ;, i, --, ), {, for, (, int, j, =, n, -, i, ;, j, >, 0, ;]
[;, i, --, ), {, for, (, int, j, =, n, -, i, ;, j, >, 0, ;, j, --]
[), {, for, (, int, j, =, n, -, i, ;, j, >, 0, ;, j, --, ), {, coefficients]
[--, ), {, for, (, int, j, =, n, -, i, ;, j, >, 0, ;, j, --, ), {]
[;, j, >, 0, ;, j, --, ), {, coefficients, [, j, ], =, coefficients, [, j, -, 1, ]]
[-, i, ;, j, >, 0, ;, j, --, ), {, coefficients, [, j, ], =, coefficients, [, j, -]
[;, j, >, 0, ;, j, --, ), {, coefficients, [, j, ], =, coefficients, [, j, -, 1, ]]
[;, j, --, ), {, coefficients, [, j, ], =, coefficients, [, j, -, 1, ], -, c, [, i]
[>, 0, ;, j, --, ), {, coefficients, [, j, ], =, coefficients, [, j, -, 1, ], -, c]
[;, j, --, ), {, coefficients, [, j, ], =, coefficients, [, j, -, 1, ], -, c, [, i]
[), {, coefficients, [, j, ], =, coefficients, [, j, -, 1, ], -, c, [, i, ], *, coefficients]
[--, ), {, coefficients, [, j, ], =, coefficients, [, j, -, 1, ], -, c, [, i, ], *]
[=, coefficients, [, j, -, 1, ], -, c, [, i, ], *, coefficients, [, j, ], ;, }, coefficients]
[[, j, ], =, coefficients, [, j, -, 1, ], -, c, [, i, ], *, coefficients, [, j, ]]
[], =, coefficients, [, j, -, 1, ], -, c, [, i, ], *, coefficients, [, j, ], ;, }]
[;, }, coefficients, [, 0, ], =, a, [, i, ], -, c, [, i, ], *, coefficients, [, 0]
[-, c, [, i, ], *, coefficients, [, j, ], ;, }, coefficients, [, 0, ], =, a, [, i]
[[, j, -, 1, ], -, c, [, i, ], *, coefficients, [, j, ], ;, }, coefficients, [, 0]
[], -, c, [, i, ], *, coefficients, [, j, ], ;, }, coefficients, [, 0, ], =, a, []
[-, 1, ], -, c, [, i, ], *, coefficients, [, j, ], ;, }, coefficients, [, 0, ], =]
[], -, c, [, i, ], *, coefficients, [, j, ], ;, }, coefficients, [, 0, ], =, a, []
[;, }, coefficients, [, 0, ], =, a, [, i, ], -, c, [, i, ], *, coefficients, [, 0]
[*, coefficients, [, j, ], ;, }, coefficients, [, 0, ], =, a, [, i, ], -, c, [, i]
[[, i, ], *, coefficients, [, j, ], ;, }, coefficients, [, 0, ], =, a, [, i, ], -]
[], *, coefficients, [, j, ], ;, }, coefficients, [, 0, ], =, a, [, i, ], -, c, []
[;, }, coefficients, [, 0, ], =, a, [, i, ], -, c, [, i, ], *, coefficients, [, 0]
[[, j, ], ;, }, coefficients, [, 0, ], =, a, [, i, ], -, c, [, i, ], *]
[], ;, }, coefficients, [, 0, ], =, a, [, i, ], -, c, [, i, ], *, coefficients, []
[=, a, [, i, ], -, c, [, i, ], *, coefficients, [, 0, ], ;, }, coefficientsComputed, =, true]
[[, 0, ], =, a, [, i, ], -, c, [, i, ], *, coefficients, [, 0, ], ;, }]
[], =, a, [, i, ], -, c, [, i, ], *, coefficients, [, 0, ], ;, }, coefficientsComputed, =]
[;, }, coefficientsComputed, =, true, ;, }, protected, static, void, verifyInputArray, (, double, a, [, ], ,, double, c, []
[-, c, [, i, ], *, coefficients, [, 0, ], ;, }, coefficientsComputed, =, true, ;, }, protected, static, void]
[[, i, ], -, c, [, i, ], *, coefficients, [, 0, ], ;, }, coefficientsComputed, =, true, ;, }]
[], -, c, [, i, ], *, coefficients, [, 0, ], ;, }, coefficientsComputed, =, true, ;, }, protected, static]
[;, }, coefficientsComputed, =, true, ;, }, protected, static, void, verifyInputArray, (, double, a, [, ], ,, double, c, []
[*, coefficients, [, 0, ], ;, }, coefficientsComputed, =, true, ;, }, protected, static, void, verifyInputArray, (, double, a, []
[[, i, ], *, coefficients, [, 0, ], ;, }, coefficientsComputed, =, true, ;, }, protected, static, void, verifyInputArray, (]
[], *, coefficients, [, 0, ], ;, }, coefficientsComputed, =, true, ;, }, protected, static, void, verifyInputArray, (, double, a]
[;, }, coefficientsComputed, =, true, ;, }, protected, static, void, verifyInputArray, (, double, a, [, ], ,, double, c, []
[[, 0, ], ;, }, coefficientsComputed, =, true, ;, }, protected, static, void, verifyInputArray, (, double, a, [, ], ,]
[], ;, }, coefficientsComputed, =, true, ;, }, protected, static, void, verifyInputArray, (, double, a, [, ], ,, double, c]
[=, true, ;, }, protected, static, void, verifyInputArray, (, double, a, [, ], ,, double, c, [, ], ), throws]
[;, }, protected, static, void, verifyInputArray, (, double, a, [, ], ,, double, c, [, ], ), throws, NullArgumentException, ,]
[;, MathUtils, ., checkNotNull, (, c, ), ;, if, (, a, ., length, ==, 0, ||, c, ., length, ==]
[., checkNotNull, (, a, ), ;, MathUtils, ., checkNotNull, (, c, ), ;, if, (, a, ., length, ==, 0]
[), ;, MathUtils, ., checkNotNull, (, c, ), ;, if, (, a, ., length, ==, 0, ||, c, ., length]
[;, if, (, a, ., length, ==, 0, ||, c, ., length, ==, 0, ), {, throw, new, NoDataException, (]
[., checkNotNull, (, c, ), ;, if, (, a, ., length, ==, 0, ||, c, ., length, ==, 0, )]
[), ;, if, (, a, ., length, ==, 0, ||, c, ., length, ==, 0, ), {, throw, new, NoDataException]
[), {, throw, new, NoDataException, (, LocalizedFormats, ., EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, ), ;, }, if, (, a, ., length, !=, c, .]
[||, c, ., length, ==, 0, ), {, throw, new, NoDataException, (, LocalizedFormats, ., EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, ), ;, }, if, (]
[==, 0, ||, c, ., length, ==, 0, ), {, throw, new, NoDataException, (, LocalizedFormats, ., EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, ), ;, }]
[., length, ==, 0, ||, c, ., length, ==, 0, ), {, throw, new, NoDataException, (, LocalizedFormats, ., EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, )]
[||, c, ., length, ==, 0, ), {, throw, new, NoDataException, (, LocalizedFormats, ., EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, ), ;, }, if, (]
[), {, throw, new, NoDataException, (, LocalizedFormats, ., EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, ), ;, }, if, (, a, ., length, !=, c, .]
[==, 0, ), {, throw, new, NoDataException, (, LocalizedFormats, ., EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, ), ;, }, if, (, a, ., length, !=]
[., length, ==, 0, ), {, throw, new, NoDataException, (, LocalizedFormats, ., EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, ), ;, }, if, (, a, .]
[), {, throw, new, NoDataException, (, LocalizedFormats, ., EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, ), ;, }, if, (, a, ., length, !=, c, .]
[;, }, if, (, a, ., length, !=, c, ., length, +, 1, ), {, throw, new, DimensionMismatchException, (, LocalizedFormats]
[), ;, }, if, (, a, ., length, !=, c, ., length, +, 1, ), {, throw, new, DimensionMismatchException, (]
[., EMPTY_POLYNOMIALS_COEFFICIENTS_ARRAY, ), ;, }, if, (, a, ., length, !=, c, ., length, +, 1, ), {, throw, new]
[), {, throw, new, DimensionMismatchException, (, LocalizedFormats, ., ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1, ,, a, ., length, ,, c, ., length, ), ;, }]
[!=, c, ., length, +, 1, ), {, throw, new, DimensionMismatchException, (, LocalizedFormats, ., ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1, ,, a, ., length, ,]
[., length, !=, c, ., length, +, 1, ), {, throw, new, DimensionMismatchException, (, LocalizedFormats, ., ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1, ,, a, .]
[), {, throw, new, DimensionMismatchException, (, LocalizedFormats, ., ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1, ,, a, ., length, ,, c, ., length, ), ;, }]
[+, 1, ), {, throw, new, DimensionMismatchException, (, LocalizedFormats, ., ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1, ,, a, ., length, ,, c, ., length, )]
[., length, +, 1, ), {, throw, new, DimensionMismatchException, (, LocalizedFormats, ., ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1, ,, a, ., length, ,, c, .]
[), {, throw, new, DimensionMismatchException, (, LocalizedFormats, ., ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1, ,, a, ., length, ,, c, ., length, ), ;, }]
[;, }, }, }]
[,, a, ., length, ,, c, ., length, ), ;, }, }, }]
[., ARRAY_SIZES_SHOULD_HAVE_DIFFERENCE_1, ,, a, ., length, ,, c, ., length, ), ;, }, }, }]
[,, c, ., length, ), ;, }, }, }]
[., length, ,, c, ., length, ), ;, }, }, }]
[), ;, }, }, }]
[., length, ), ;, }, }, }]
