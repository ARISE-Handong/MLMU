[AbstractMessageFormatter, implements, MessageFormatter, {, private, final, SourceExcerptProvider, source, ;, private, boolean, colorize, ;, public, AbstractMessageFormatter, (, SourceExcerptProvider, source, ), {]
[AbstractMessageFormatter, implements, MessageFormatter, {, private, final, SourceExcerptProvider, source, ;, private, boolean, colorize, ;, public, AbstractMessageFormatter, (, SourceExcerptProvider, source, ), {]
[private, final, SourceExcerptProvider, source, ;, private, boolean, colorize, ;, public, AbstractMessageFormatter, (, SourceExcerptProvider, source, ), {, this, ., source, =]
[(, SourceExcerptProvider, source, ), {, this, ., source, =, source, ;, }, public, void, setColorize, (, boolean, colorize, ), {]
[(, SourceExcerptProvider, source, ), {, this, ., source, =, source, ;, }, public, void, setColorize, (, boolean, colorize, ), {]
[{, this, ., source, =, source, ;, }, public, void, setColorize, (, boolean, colorize, ), {, this, ., colorize, =]
[(, boolean, colorize, ), {, this, ., colorize, =, colorize, ;, }, protected, final, SourceExcerptProvider, getSource, (, ), {, return]
[protected, final, SourceExcerptProvider, getSource, (, ), {, return, source, ;, }, private, static, final, Set, <, String, >, SUPPORTED_COLOR_TERMINALS, =]
[protected, final, SourceExcerptProvider, getSource, (, ), {, return, source, ;, }, private, static, final, Set, <, String, >, SUPPORTED_COLOR_TERMINALS, =]
[(, ), {, return, source, ;, }, private, static, final, Set, <, String, >, SUPPORTED_COLOR_TERMINALS, =, ImmutableSet, ., of, (]
[{, return, source, ;, }, private, static, final, Set, <, String, >, SUPPORTED_COLOR_TERMINALS, =, ImmutableSet, ., of, (, "xterm", ,]
[source, ;, }, private, static, final, Set, <, String, >, SUPPORTED_COLOR_TERMINALS, =, ImmutableSet, ., of, (, "xterm", ,, "xterm-color", ,]
[}, private, static, final, Set, <, String, >, SUPPORTED_COLOR_TERMINALS, =, ImmutableSet, ., of, (, "xterm", ,, "xterm-color", ,, "xterm-256color", ,]
[of, (, "xterm", ,, "xterm-color", ,, "xterm-256color", ,, "screen-bce", ), ;, static, boolean, termSupportsColor, (, String, term, ), {, return]
[of, (, "xterm", ,, "xterm-color", ,, "xterm-256color", ,, "screen-bce", ), ;, static, boolean, termSupportsColor, (, String, term, ), {, return]
["xterm-color", ,, "xterm-256color", ,, "screen-bce", ), ;, static, boolean, termSupportsColor, (, String, term, ), {, return, SUPPORTED_COLOR_TERMINALS, ., contains, (]
[(, "\033[35m", ), ,, RESET, (, "\033[39m", ), ;, private, final, String, controlCharacter, ;, Color, (, String, controlCharacter, ), {]
[(, "\033[35m", ), ,, RESET, (, "\033[39m", ), ;, private, final, String, controlCharacter, ;, Color, (, String, controlCharacter, ), {]
[RESET, (, "\033[39m", ), ;, private, final, String, controlCharacter, ;, Color, (, String, controlCharacter, ), {, this, ., controlCharacter, =]
[Color, (, String, controlCharacter, ), {, this, ., controlCharacter, =, controlCharacter, ;, }, public, String, getControlCharacter, (, ), {, return]
[String, term, ), {, return, SUPPORTED_COLOR_TERMINALS, ., contains, (, term, ), ;, }, private, static, enum, Color, {, ERROR, (]
[SUPPORTED_COLOR_TERMINALS, ., contains, (, term, ), ;, }, private, static, enum, Color, {, ERROR, (, "\033[31m", ), ,, WARNING, (]
[), ;, }, private, static, enum, Color, {, ERROR, (, "\033[31m", ), ,, WARNING, (, "\033[35m", ), ,, RESET, (]
[public, String, getControlCharacter, (, ), {, return, controlCharacter, ;, }, }, String, getLevelName, (, CheckLevel, level, ), {, switch, (]
[), {, return, controlCharacter, ;, }, }, String, getLevelName, (, CheckLevel, level, ), {, switch, (, level, ), {, case]
[controlCharacter, ;, }, }, String, getLevelName, (, CheckLevel, level, ), {, switch, (, level, ), {, case, ERROR, :, return]
[}, }, String, getLevelName, (, CheckLevel, level, ), {, switch, (, level, ), {, case, ERROR, :, return, maybeColorize, (]
[String, getLevelName, (, CheckLevel, level, ), {, switch, (, level, ), {, case, ERROR, :, return, maybeColorize, (, "ERROR", ,]
[String, getLevelName, (, CheckLevel, level, ), {, switch, (, level, ), {, case, ERROR, :, return, maybeColorize, (, "ERROR", ,]
[{, switch, (, level, ), {, case, ERROR, :, return, maybeColorize, (, "ERROR", ,, Color, ., ERROR, ), ;, case]
[level, ), {, case, ERROR, :, return, maybeColorize, (, "ERROR", ,, Color, ., ERROR, ), ;, case, WARNING, :, return]
[{, case, ERROR, :, return, maybeColorize, (, "ERROR", ,, Color, ., ERROR, ), ;, case, WARNING, :, return, maybeColorize, (]
[ERROR, :, return, maybeColorize, (, "ERROR", ,, Color, ., ERROR, ), ;, case, WARNING, :, return, maybeColorize, (, "WARNING", ,]
[ERROR, :, return, maybeColorize, (, "ERROR", ,, Color, ., ERROR, ), ;, case, WARNING, :, return, maybeColorize, (, "WARNING", ,]
[., ERROR, ), ;, case, WARNING, :, return, maybeColorize, (, "WARNING", ,, Color, ., WARNING, ), ;, default, :, return]
[., ERROR, ), ;, case, WARNING, :, return, maybeColorize, (, "WARNING", ,, Color, ., WARNING, ), ;, default, :, return]
[., toString, (, ), ;, }, }, private, String, maybeColorize, (, String, text, ,, Color, color, ), {, if, (]
[toString, (, ), ;, }, }, private, String, maybeColorize, (, String, text, ,, Color, color, ), {, if, (, !]
[;, }, }, private, String, maybeColorize, (, String, text, ,, Color, color, ), {, if, (, !, colorize, ), return]
[private, String, maybeColorize, (, String, text, ,, Color, color, ), {, if, (, !, colorize, ), return, text, ;, return]
[private, String, maybeColorize, (, String, text, ,, Color, color, ), {, if, (, !, colorize, ), return, text, ;, return]
[private, String, maybeColorize, (, String, text, ,, Color, color, ), {, if, (, !, colorize, ), return, text, ;, return]
[private, String, maybeColorize, (, String, text, ,, Color, color, ), {, if, (, !, colorize, ), return, text, ;, return]
[,, Color, color, ), {, if, (, !, colorize, ), return, text, ;, return, color, ., getControlCharacter, (, ), +]
[color, ), {, if, (, !, colorize, ), return, text, ;, return, color, ., getControlCharacter, (, ), +, text, +]
[color, ), {, if, (, !, colorize, ), return, text, ;, return, color, ., getControlCharacter, (, ), +, text, +]
[color, ), {, if, (, !, colorize, ), return, text, ;, return, color, ., getControlCharacter, (, ), +, text, +]
