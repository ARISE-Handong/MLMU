[Point2D, point, ;, private, double, radius, ;, public, Outlier, (, double, xCoord, ,, double, yCoord, ,, double, radius, ), {]
[Point2D, point, ;, private, double, radius, ;, public, Outlier, (, double, xCoord, ,, double, yCoord, ,, double, radius, ), {]
[double, radius, ;, public, Outlier, (, double, xCoord, ,, double, yCoord, ,, double, radius, ), {, this, ., point, =]
[(, double, xCoord, ,, double, yCoord, ,, double, radius, ), {, this, ., point, =, new, Point2D, ., Double, (]
[(, double, xCoord, ,, double, yCoord, ,, double, radius, ), {, this, ., point, =, new, Point2D, ., Double, (]
[xCoord, ,, double, yCoord, ,, double, radius, ), {, this, ., point, =, new, Point2D, ., Double, (, xCoord, -]
[double, yCoord, ,, double, radius, ), {, this, ., point, =, new, Point2D, ., Double, (, xCoord, -, radius, ,]
[double, yCoord, ,, double, radius, ), {, this, ., point, =, new, Point2D, ., Double, (, xCoord, -, radius, ,]
[,, double, radius, ), {, this, ., point, =, new, Point2D, ., Double, (, xCoord, -, radius, ,, yCoord, -]
[), {, this, ., point, =, new, Point2D, ., Double, (, xCoord, -, radius, ,, yCoord, -, radius, ), ;]
[), {, this, ., point, =, new, Point2D, ., Double, (, xCoord, -, radius, ,, yCoord, -, radius, ), ;]
[point, =, new, Point2D, ., Double, (, xCoord, -, radius, ,, yCoord, -, radius, ), ;, this, ., radius, =]
[,, yCoord, -, radius, ), ;, this, ., radius, =, radius, ;, }, public, Point2D, getPoint, (, ), {, return]
[,, yCoord, -, radius, ), ;, this, ., radius, =, radius, ;, }, public, Point2D, getPoint, (, ), {, return]
[public, Point2D, getPoint, (, ), {, return, this, ., point, ;, }, public, void, setPoint, (, Point2D, point, ), {]
[public, Point2D, getPoint, (, ), {, return, this, ., point, ;, }, public, void, setPoint, (, Point2D, point, ), {]
[), {, return, this, ., point, ;, }, public, void, setPoint, (, Point2D, point, ), {, this, ., point, =]
[setPoint, (, Point2D, point, ), {, this, ., point, =, point, ;, }, public, double, getX, (, ), {, return]
[setPoint, (, Point2D, point, ), {, this, ., point, =, point, ;, }, public, double, getX, (, ), {, return]
[(, ), {, return, getPoint, (, ), ., getX, (, ), ;, }, public, double, getY, (, ), {, return]
[(, ), {, return, getPoint, (, ), ., getX, (, ), ;, }, public, double, getY, (, ), {, return]
[(, ), {, return, getPoint, (, ), ., getY, (, ), ;, }, public, double, getRadius, (, ), {, return]
[(, ), {, return, getPoint, (, ), ., getY, (, ), ;, }, public, double, getRadius, (, ), {, return]
[public, double, getRadius, (, ), {, return, this, ., radius, ;, }, public, void, setRadius, (, double, radius, ), {]
[public, double, getRadius, (, ), {, return, this, ., radius, ;, }, public, void, setRadius, (, double, radius, ), {]
[), {, return, this, ., radius, ;, }, public, void, setRadius, (, double, radius, ), {, this, ., radius, =]
[), {, this, ., radius, =, radius, ;, }, public, int, compareTo, (, Object, o, ), {, Outlier, outlier, =]
[., radius, =, radius, ;, }, public, int, compareTo, (, Object, o, ), {, Outlier, outlier, =, (, Outlier, )]
[}, public, int, compareTo, (, Object, o, ), {, Outlier, outlier, =, (, Outlier, ), o, ;, Point2D, p1, =]
[), {, Outlier, outlier, =, (, Outlier, ), o, ;, Point2D, p1, =, getPoint, (, ), ;, Point2D, p2, =]
[), {, Outlier, outlier, =, (, Outlier, ), o, ;, Point2D, p1, =, getPoint, (, ), ;, Point2D, p2, =]
[o, ;, Point2D, p1, =, getPoint, (, ), ;, Point2D, p2, =, outlier, ., getPoint, (, ), ;, if, (]
[o, ;, Point2D, p1, =, getPoint, (, ), ;, Point2D, p2, =, outlier, ., getPoint, (, ), ;, if, (]
[=, getPoint, (, ), ;, Point2D, p2, =, outlier, ., getPoint, (, ), ;, if, (, p1, ., equals, (]
[Point2D, p2, =, outlier, ., getPoint, (, ), ;, if, (, p1, ., equals, (, p2, ), ), {, return]
[(, ), ;, if, (, p1, ., equals, (, p2, ), ), {, return, 0, ;, }, else, if, (]
[(, ), ;, if, (, p1, ., equals, (, p2, ), ), {, return, 0, ;, }, else, if, (]
[), ;, if, (, p1, ., equals, (, p2, ), ), {, return, 0, ;, }, else, if, (, (]
[), ;, if, (, p1, ., equals, (, p2, ), ), {, return, 0, ;, }, else, if, (, (]
[), ;, if, (, p1, ., equals, (, p2, ), ), {, return, 0, ;, }, else, if, (, (]
[equals, (, p2, ), ), {, return, 0, ;, }, else, if, (, (, p1, ., getX, (, ), <]
[equals, (, p2, ), ), {, return, 0, ;, }, else, if, (, (, p1, ., getX, (, ), <]
[0, ;, }, else, if, (, (, p1, ., getX, (, ), <, p2, ., getX, (, ), ), ||]
[;, }, else, if, (, (, p1, ., getX, (, ), <, p2, ., getX, (, ), ), ||, (]
[;, }, else, if, (, (, p1, ., getX, (, ), <, p2, ., getX, (, ), ), ||, (]
[;, }, else, if, (, (, p1, ., getX, (, ), <, p2, ., getX, (, ), ), ||, (]
[p1, ., getX, (, ), <, p2, ., getX, (, ), ), ||, (, p1, ., getY, (, ), <]
[p1, ., getX, (, ), <, p2, ., getX, (, ), ), ||, (, p1, ., getY, (, ), <]
[(, ), ), ||, (, p1, ., getY, (, ), <, p2, ., getY, (, ), ), ), {, return]
[), ), ||, (, p1, ., getY, (, ), <, p2, ., getY, (, ), ), ), {, return, -]
[getY, (, ), <, p2, ., getY, (, ), ), ), {, return, -, 1, ;, }, else, {, return]
[-, 1, ;, }, else, {, return, 1, ;, }, }, public, boolean, overlaps, (, Outlier, other, ), {, return]
[1, ;, }, else, {, return, 1, ;, }, }, public, boolean, overlaps, (, Outlier, other, ), {, return, (]
[1, ;, }, else, {, return, 1, ;, }, }, public, boolean, overlaps, (, Outlier, other, ), {, return, (]
[1, ;, }, else, {, return, 1, ;, }, }, public, boolean, overlaps, (, Outlier, other, ), {, return, (]
[1, ;, }, else, {, return, 1, ;, }, }, public, boolean, overlaps, (, Outlier, other, ), {, return, (]
[;, }, else, {, return, 1, ;, }, }, public, boolean, overlaps, (, Outlier, other, ), {, return, (, (]
[;, }, else, {, return, 1, ;, }, }, public, boolean, overlaps, (, Outlier, other, ), {, return, (, (]
[;, }, else, {, return, 1, ;, }, }, public, boolean, overlaps, (, Outlier, other, ), {, return, (, (]
[;, }, }, public, boolean, overlaps, (, Outlier, other, ), {, return, (, (, other, ., getX, (, ), >=]
[;, }, }, public, boolean, overlaps, (, Outlier, other, ), {, return, (, (, other, ., getX, (, ), >=]
[boolean, overlaps, (, Outlier, other, ), {, return, (, (, other, ., getX, (, ), >=, getX, (, ), -]
[overlaps, (, Outlier, other, ), {, return, (, (, other, ., getX, (, ), >=, getX, (, ), -, (]
[overlaps, (, Outlier, other, ), {, return, (, (, other, ., getX, (, ), >=, getX, (, ), -, (]
[overlaps, (, Outlier, other, ), {, return, (, (, other, ., getX, (, ), >=, getX, (, ), -, (]
[), {, return, (, (, other, ., getX, (, ), >=, getX, (, ), -, (, this, ., radius, *]
[(, other, ., getX, (, ), >=, getX, (, ), -, (, this, ., radius, *, 1.1, ), ), &&]
[other, ., getX, (, ), >=, getX, (, ), -, (, this, ., radius, *, 1.1, ), ), &&, (]
[other, ., getX, (, ), >=, getX, (, ), -, (, this, ., radius, *, 1.1, ), ), &&, (]
[other, ., getX, (, ), >=, getX, (, ), -, (, this, ., radius, *, 1.1, ), ), &&, (]
[getX, (, ), -, (, this, ., radius, *, 1.1, ), ), &&, (, other, ., getX, (, ), <=]
[getX, (, ), -, (, this, ., radius, *, 1.1, ), ), &&, (, other, ., getX, (, ), <=]
[(, this, ., radius, *, 1.1, ), ), &&, (, other, ., getX, (, ), <=, getX, (, ), +]
[this, ., radius, *, 1.1, ), ), &&, (, other, ., getX, (, ), <=, getX, (, ), +, (]
[this, ., radius, *, 1.1, ), ), &&, (, other, ., getX, (, ), <=, getX, (, ), +, (]
[this, ., radius, *, 1.1, ), ), &&, (, other, ., getX, (, ), <=, getX, (, ), +, (]
[1.1, ), ), &&, (, other, ., getX, (, ), <=, getX, (, ), +, (, this, ., radius, *]
[(, other, ., getX, (, ), <=, getX, (, ), +, (, this, ., radius, *, 1.1, ), ), &&]
[other, ., getX, (, ), <=, getX, (, ), +, (, this, ., radius, *, 1.1, ), ), &&, (]
[other, ., getX, (, ), <=, getX, (, ), +, (, this, ., radius, *, 1.1, ), ), &&, (]
[other, ., getX, (, ), <=, getX, (, ), +, (, this, ., radius, *, 1.1, ), ), &&, (]
[getX, (, ), +, (, this, ., radius, *, 1.1, ), ), &&, (, other, ., getY, (, ), >=]
[getX, (, ), +, (, this, ., radius, *, 1.1, ), ), &&, (, other, ., getY, (, ), >=]
[(, this, ., radius, *, 1.1, ), ), &&, (, other, ., getY, (, ), >=, getY, (, ), -]
[this, ., radius, *, 1.1, ), ), &&, (, other, ., getY, (, ), >=, getY, (, ), -, (]
[this, ., radius, *, 1.1, ), ), &&, (, other, ., getY, (, ), >=, getY, (, ), -, (]
[this, ., radius, *, 1.1, ), ), &&, (, other, ., getY, (, ), >=, getY, (, ), -, (]
[1.1, ), ), &&, (, other, ., getY, (, ), >=, getY, (, ), -, (, this, ., radius, *]
[(, other, ., getY, (, ), >=, getY, (, ), -, (, this, ., radius, *, 1.1, ), ), &&]
[other, ., getY, (, ), >=, getY, (, ), -, (, this, ., radius, *, 1.1, ), ), &&, (]
[other, ., getY, (, ), >=, getY, (, ), -, (, this, ., radius, *, 1.1, ), ), &&, (]
[other, ., getY, (, ), >=, getY, (, ), -, (, this, ., radius, *, 1.1, ), ), &&, (]
[getY, (, ), -, (, this, ., radius, *, 1.1, ), ), &&, (, other, ., getY, (, ), <=]
[getY, (, ), -, (, this, ., radius, *, 1.1, ), ), &&, (, other, ., getY, (, ), <=]
[(, this, ., radius, *, 1.1, ), ), &&, (, other, ., getY, (, ), <=, getY, (, ), +]
[this, ., radius, *, 1.1, ), ), &&, (, other, ., getY, (, ), <=, getY, (, ), +, (]
[this, ., radius, *, 1.1, ), ), &&, (, other, ., getY, (, ), <=, getY, (, ), +, (]
[this, ., radius, *, 1.1, ), ), &&, (, other, ., getY, (, ), <=, getY, (, ), +, (]
[1.1, ), ), &&, (, other, ., getY, (, ), <=, getY, (, ), +, (, this, ., radius, *]
[this, ., radius, *, 1.1, ), ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[this, ., radius, *, 1.1, ), ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[radius, *, 1.1, ), ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, Outlier, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, Outlier, ), ), {, return, false, ;, }, Outlier, that, =]
[if, (, !, (, obj, instanceof, Outlier, ), ), {, return, false, ;, }, Outlier, that, =, (, Outlier, )]
[obj, instanceof, Outlier, ), ), {, return, false, ;, }, Outlier, that, =, (, Outlier, ), obj, ;, if, (]
[instanceof, Outlier, ), ), {, return, false, ;, }, Outlier, that, =, (, Outlier, ), obj, ;, if, (, !]
[instanceof, Outlier, ), ), {, return, false, ;, }, Outlier, that, =, (, Outlier, ), obj, ;, if, (, !]
[instanceof, Outlier, ), ), {, return, false, ;, }, Outlier, that, =, (, Outlier, ), obj, ;, if, (, !]
[false, ;, }, Outlier, that, =, (, Outlier, ), obj, ;, if, (, !, this, ., point, ., equals, (]
[false, ;, }, Outlier, that, =, (, Outlier, ), obj, ;, if, (, !, this, ., point, ., equals, (]
[Outlier, ), obj, ;, if, (, !, this, ., point, ., equals, (, that, ., point, ), ), {, return]
[(, !, this, ., point, ., equals, (, that, ., point, ), ), {, return, false, ;, }, if, (]
[(, !, this, ., point, ., equals, (, that, ., point, ), ), {, return, false, ;, }, if, (]
[(, !, this, ., point, ., equals, (, that, ., point, ), ), {, return, false, ;, }, if, (]
[point, ., equals, (, that, ., point, ), ), {, return, false, ;, }, if, (, this, ., radius, !=]
[point, ., equals, (, that, ., point, ), ), {, return, false, ;, }, if, (, this, ., radius, !=]
[point, ), ), {, return, false, ;, }, if, (, this, ., radius, !=, that, ., radius, ), {, return]
[return, false, ;, }, if, (, this, ., radius, !=, that, ., radius, ), {, return, false, ;, }, return]
[that, ., radius, ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[that, ., radius, ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[that, ., radius, ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[that, ., radius, ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[that, ., radius, ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[radius, ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return, "{", +]
[false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return, "{", +, getX, (, ), +]
[}, return, true, ;, }, public, String, toString, (, ), {, return, "{", +, getX, (, ), +, ",", +]
[}, public, String, toString, (, ), {, return, "{", +, getX, (, ), +, ",", +, getY, (, ), +]
