[;, private, NumberFormat, denominatorFormat, ;, private, NumberFormat, numeratorFormat, ;, protected, AbstractFormat, (, ), {, this, (, getDefaultNumberFormat, (, ), )]
[;, private, NumberFormat, denominatorFormat, ;, private, NumberFormat, numeratorFormat, ;, protected, AbstractFormat, (, ), {, this, (, getDefaultNumberFormat, (, ), )]
[), ;, }, protected, AbstractFormat, (, final, NumberFormat, format, ), {, this, (, format, ,, (, NumberFormat, ), format, .]
[,, (, NumberFormat, ), format, ., clone, (, ), ), ;, }, protected, AbstractFormat, (, final, NumberFormat, numeratorFormat, ,, final]
[), ;, }, protected, AbstractFormat, (, final, NumberFormat, numeratorFormat, ,, final, NumberFormat, denominatorFormat, ), {, this, ., numeratorFormat, =, numeratorFormat]
[), ;, }, protected, AbstractFormat, (, final, NumberFormat, numeratorFormat, ,, final, NumberFormat, denominatorFormat, ), {, this, ., numeratorFormat, =, numeratorFormat]
[., clone, (, ), ), ;, }, protected, AbstractFormat, (, final, NumberFormat, numeratorFormat, ,, final, NumberFormat, denominatorFormat, ), {, this]
[=, numeratorFormat, ;, this, ., denominatorFormat, =, denominatorFormat, ;, }, protected, static, NumberFormat, getDefaultNumberFormat, (, ), {, return, getDefaultNumberFormat, (]
[., numeratorFormat, =, numeratorFormat, ;, this, ., denominatorFormat, =, denominatorFormat, ;, }, protected, static, NumberFormat, getDefaultNumberFormat, (, ), {, return]
[;, this, ., denominatorFormat, =, denominatorFormat, ;, }, protected, static, NumberFormat, getDefaultNumberFormat, (, ), {, return, getDefaultNumberFormat, (, Locale, .]
[=, denominatorFormat, ;, }, protected, static, NumberFormat, getDefaultNumberFormat, (, ), {, return, getDefaultNumberFormat, (, Locale, ., getDefault, (, ), )]
[., denominatorFormat, =, denominatorFormat, ;, }, protected, static, NumberFormat, getDefaultNumberFormat, (, ), {, return, getDefaultNumberFormat, (, Locale, ., getDefault, (]
[;, }, protected, static, NumberFormat, getDefaultNumberFormat, (, ), {, return, getDefaultNumberFormat, (, Locale, ., getDefault, (, ), ), ;, }]
[;, }, protected, static, NumberFormat, getDefaultNumberFormat, (, final, Locale, locale, ), {, final, NumberFormat, nf, =, NumberFormat, ., getNumberInstance, (]
[), ;, }, protected, static, NumberFormat, getDefaultNumberFormat, (, final, Locale, locale, ), {, final, NumberFormat, nf, =, NumberFormat, ., getNumberInstance]
[., getDefault, (, ), ), ;, }, protected, static, NumberFormat, getDefaultNumberFormat, (, final, Locale, locale, ), {, final, NumberFormat, nf]
[;, nf, ., setMaximumFractionDigits, (, 0, ), ;, nf, ., setParseIntegerOnly, (, true, ), ;, return, nf, ;, }, public]
[., getNumberInstance, (, locale, ), ;, nf, ., setMaximumFractionDigits, (, 0, ), ;, nf, ., setParseIntegerOnly, (, true, ), ;]
[), ;, nf, ., setMaximumFractionDigits, (, 0, ), ;, nf, ., setParseIntegerOnly, (, true, ), ;, return, nf, ;, }]
[;, nf, ., setParseIntegerOnly, (, true, ), ;, return, nf, ;, }, public, NumberFormat, getDenominatorFormat, (, ), {, return, denominatorFormat]
[., setMaximumFractionDigits, (, 0, ), ;, nf, ., setParseIntegerOnly, (, true, ), ;, return, nf, ;, }, public, NumberFormat, getDenominatorFormat]
[), ;, nf, ., setParseIntegerOnly, (, true, ), ;, return, nf, ;, }, public, NumberFormat, getDenominatorFormat, (, ), {, return]
[;, return, nf, ;, }, public, NumberFormat, getDenominatorFormat, (, ), {, return, denominatorFormat, ;, }, public, NumberFormat, getNumeratorFormat, (, )]
[., setParseIntegerOnly, (, true, ), ;, return, nf, ;, }, public, NumberFormat, getDenominatorFormat, (, ), {, return, denominatorFormat, ;, }]
[), ;, return, nf, ;, }, public, NumberFormat, getDenominatorFormat, (, ), {, return, denominatorFormat, ;, }, public, NumberFormat, getNumeratorFormat, (]
[;, }, public, NumberFormat, getDenominatorFormat, (, ), {, return, denominatorFormat, ;, }, public, NumberFormat, getNumeratorFormat, (, ), {, return, numeratorFormat]
[;, }, public, NumberFormat, getNumeratorFormat, (, ), {, return, numeratorFormat, ;, }, public, void, setDenominatorFormat, (, final, NumberFormat, format, )]
[;, }, public, void, setDenominatorFormat, (, final, NumberFormat, format, ), {, if, (, format, ==, null, ), {, throw, new]
[), {, throw, new, NullArgumentException, (, LocalizedFormats, ., DENOMINATOR_FORMAT, ), ;, }, this, ., denominatorFormat, =, format, ;, }, public]
[==, null, ), {, throw, new, NullArgumentException, (, LocalizedFormats, ., DENOMINATOR_FORMAT, ), ;, }, this, ., denominatorFormat, =, format, ;]
[), {, throw, new, NullArgumentException, (, LocalizedFormats, ., DENOMINATOR_FORMAT, ), ;, }, this, ., denominatorFormat, =, format, ;, }, public]
[;, }, this, ., denominatorFormat, =, format, ;, }, public, void, setNumeratorFormat, (, final, NumberFormat, format, ), {, if, (]
[), ;, }, this, ., denominatorFormat, =, format, ;, }, public, void, setNumeratorFormat, (, final, NumberFormat, format, ), {, if]
[., DENOMINATOR_FORMAT, ), ;, }, this, ., denominatorFormat, =, format, ;, }, public, void, setNumeratorFormat, (, final, NumberFormat, format, )]
[=, format, ;, }, public, void, setNumeratorFormat, (, final, NumberFormat, format, ), {, if, (, format, ==, null, ), {]
[., denominatorFormat, =, format, ;, }, public, void, setNumeratorFormat, (, final, NumberFormat, format, ), {, if, (, format, ==, null]
[;, }, public, void, setNumeratorFormat, (, final, NumberFormat, format, ), {, if, (, format, ==, null, ), {, throw, new]
[), {, throw, new, NullArgumentException, (, LocalizedFormats, ., NUMERATOR_FORMAT, ), ;, }, this, ., numeratorFormat, =, format, ;, }, protected]
[==, null, ), {, throw, new, NullArgumentException, (, LocalizedFormats, ., NUMERATOR_FORMAT, ), ;, }, this, ., numeratorFormat, =, format, ;]
[), {, throw, new, NullArgumentException, (, LocalizedFormats, ., NUMERATOR_FORMAT, ), ;, }, this, ., numeratorFormat, =, format, ;, }, protected]
[;, }, this, ., numeratorFormat, =, format, ;, }, protected, static, void, parseAndIgnoreWhitespace, (, final, String, source, ,, final, ParsePosition]
[), ;, }, this, ., numeratorFormat, =, format, ;, }, protected, static, void, parseAndIgnoreWhitespace, (, final, String, source, ,, final]
[., NUMERATOR_FORMAT, ), ;, }, this, ., numeratorFormat, =, format, ;, }, protected, static, void, parseAndIgnoreWhitespace, (, final, String, source]
[=, format, ;, }, protected, static, void, parseAndIgnoreWhitespace, (, final, String, source, ,, final, ParsePosition, pos, ), {, parseNextCharacter, (]
[., numeratorFormat, =, format, ;, }, protected, static, void, parseAndIgnoreWhitespace, (, final, String, source, ,, final, ParsePosition, pos, ), {]
[;, }, protected, static, void, parseAndIgnoreWhitespace, (, final, String, source, ,, final, ParsePosition, pos, ), {, parseNextCharacter, (, source, ,]
[;, pos, ., setIndex, (, pos, ., getIndex, (, ), -, 1, ), ;, }, protected, static, char, parseNextCharacter, (]
[,, pos, ), ;, pos, ., setIndex, (, pos, ., getIndex, (, ), -, 1, ), ;, }, protected, static]
[), ;, pos, ., setIndex, (, pos, ., getIndex, (, ), -, 1, ), ;, }, protected, static, char, parseNextCharacter]
[;, }, protected, static, char, parseNextCharacter, (, final, String, source, ,, final, ParsePosition, pos, ), {, int, index, =, pos]
[., setIndex, (, pos, ., getIndex, (, ), -, 1, ), ;, }, protected, static, char, parseNextCharacter, (, final, String]
[), ;, }, protected, static, char, parseNextCharacter, (, final, String, source, ,, final, ParsePosition, pos, ), {, int, index, =]
[-, 1, ), ;, }, protected, static, char, parseNextCharacter, (, final, String, source, ,, final, ParsePosition, pos, ), {, int]
[., getIndex, (, ), -, 1, ), ;, }, protected, static, char, parseNextCharacter, (, final, String, source, ,, final, ParsePosition]
[), ;, }, protected, static, char, parseNextCharacter, (, final, String, source, ,, final, ParsePosition, pos, ), {, int, index, =]
[;, final, int, n, =, source, ., length, (, ), ;, char, ret, =, 0, ;, if, (, index, <]
[., getIndex, (, ), ;, final, int, n, =, source, ., length, (, ), ;, char, ret, =, 0, ;]
[;, char, ret, =, 0, ;, if, (, index, <, n, ), {, char, c, ;, do, {, c, =]
[., length, (, ), ;, char, ret, =, 0, ;, if, (, index, <, n, ), {, char, c, ;]
[;, if, (, index, <, n, ), {, char, c, ;, do, {, c, =, source, ., charAt, (, index]
[), {, char, c, ;, do, {, c, =, source, ., charAt, (, index, ++, ), ;, }, while, (]
[<, n, ), {, char, c, ;, do, {, c, =, source, ., charAt, (, index, ++, ), ;, }]
[), {, char, c, ;, do, {, c, =, source, ., charAt, (, index, ++, ), ;, }, while, (]
[=, source, ., charAt, (, index, ++, ), ;, }, while, (, Character, ., isWhitespace, (, c, ), &&, index]
[;, }, while, (, Character, ., isWhitespace, (, c, ), &&, index, <, n, ), ;, pos, ., setIndex, (]
[., charAt, (, index, ++, ), ;, }, while, (, Character, ., isWhitespace, (, c, ), &&, index, <, n]
[), ;, }, while, (, Character, ., isWhitespace, (, c, ), &&, index, <, n, ), ;, pos, ., setIndex]
[++, ), ;, }, while, (, Character, ., isWhitespace, (, c, ), &&, index, <, n, ), ;, pos, .]
[), ;, pos, ., setIndex, (, index, ), ;, if, (, index, <, n, ), {, ret, =, c, ;]
[&&, index, <, n, ), ;, pos, ., setIndex, (, index, ), ;, if, (, index, <, n, ), {]
[., isWhitespace, (, c, ), &&, index, <, n, ), ;, pos, ., setIndex, (, index, ), ;, if, (]
[), &&, index, <, n, ), ;, pos, ., setIndex, (, index, ), ;, if, (, index, <, n, )]
[), ;, pos, ., setIndex, (, index, ), ;, if, (, index, <, n, ), {, ret, =, c, ;]
[<, n, ), ;, pos, ., setIndex, (, index, ), ;, if, (, index, <, n, ), {, ret, =]
[), ;, pos, ., setIndex, (, index, ), ;, if, (, index, <, n, ), {, ret, =, c, ;]
[;, if, (, index, <, n, ), {, ret, =, c, ;, }, }, return, ret, ;, }, @, Override]
[., setIndex, (, index, ), ;, if, (, index, <, n, ), {, ret, =, c, ;, }, }, return]
[), ;, if, (, index, <, n, ), {, ret, =, c, ;, }, }, return, ret, ;, }, @]
[), {, ret, =, c, ;, }, }, return, ret, ;, }, @, Override, public, StringBuffer, format, (, final, double]
[<, n, ), {, ret, =, c, ;, }, }, return, ret, ;, }, @, Override, public, StringBuffer, format, (]
[), {, ret, =, c, ;, }, }, return, ret, ;, }, @, Override, public, StringBuffer, format, (, final, double]
[=, c, ;, }, }, return, ret, ;, }, @, Override, public, StringBuffer, format, (, final, double, value, ,, final]
[;, }, }, return, ret, ;, }, @, Override, public, StringBuffer, format, (, final, double, value, ,, final, StringBuffer, buffer]
[;, }, @, Override, public, StringBuffer, format, (, final, double, value, ,, final, StringBuffer, buffer, ,, final, FieldPosition, position, )]
[;, }, @, Override, public, StringBuffer, format, (, final, long, value, ,, final, StringBuffer, buffer, ,, final, FieldPosition, position, )]
[,, buffer, ,, position, ), ;, }, @, Override, public, StringBuffer, format, (, final, long, value, ,, final, StringBuffer, buffer]
[., valueOf, (, value, ), ,, buffer, ,, position, ), ;, }, @, Override, public, StringBuffer, format, (, final, long]
[), ,, buffer, ,, position, ), ;, }, @, Override, public, StringBuffer, format, (, final, long, value, ,, final, StringBuffer]
[,, position, ), ;, }, @, Override, public, StringBuffer, format, (, final, long, value, ,, final, StringBuffer, buffer, ,, final]
[), ;, }, @, Override, public, StringBuffer, format, (, final, long, value, ,, final, StringBuffer, buffer, ,, final, FieldPosition, position]
[;, }, }]
[,, buffer, ,, position, ), ;, }, }]
[., valueOf, (, value, ), ,, buffer, ,, position, ), ;, }, }]
[), ,, buffer, ,, position, ), ;, }, }]
[,, position, ), ;, }, }]
[), ;, }, }]
