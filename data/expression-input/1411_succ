[;, private, List, <, Mapping, >, mappings, =, Lists, ., newArrayList, (, ), ;, private, LinkedHashMap, <, String, ,, Integer]
[;, private, List, <, Mapping, >, mappings, =, Lists, ., newArrayList, (, ), ;, private, LinkedHashMap, <, String, ,, Integer]
[;, private, LinkedHashMap, <, String, ,, Integer, >, sourceFileMap, =, Maps, ., newLinkedHashMap, (, ), ;, private, LinkedHashMap, <, String]
[., newArrayList, (, ), ;, private, LinkedHashMap, <, String, ,, Integer, >, sourceFileMap, =, Maps, ., newLinkedHashMap, (, ), ;]
[;, private, LinkedHashMap, <, String, ,, Integer, >, originalNameMap, =, Maps, ., newLinkedHashMap, (, ), ;, private, String, lastSourceFile, =]
[., newLinkedHashMap, (, ), ;, private, LinkedHashMap, <, String, ,, Integer, >, originalNameMap, =, Maps, ., newLinkedHashMap, (, ), ;]
[;, private, String, lastSourceFile, =, null, ;, private, int, lastSourceFileIndex, =, -, 1, ;, private, Mapping, lastMapping, ;, private, FilePosition]
[., newLinkedHashMap, (, ), ;, private, String, lastSourceFile, =, null, ;, private, int, lastSourceFileIndex, =, -, 1, ;, private, Mapping]
[;, private, int, lastSourceFileIndex, =, -, 1, ;, private, Mapping, lastMapping, ;, private, FilePosition, offsetPosition, =, new, FilePosition, (, 0]
[;, private, Mapping, lastMapping, ;, private, FilePosition, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, FilePosition, prefixPosition]
[;, private, Mapping, lastMapping, ;, private, FilePosition, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, FilePosition, prefixPosition]
[;, private, FilePosition, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, @, Override, public, void, reset, (, )]
[,, 0, ), ;, private, FilePosition, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, @, Override, public, void]
[), ;, private, FilePosition, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, @, Override, public, void, reset, (]
[;, @, Override, public, void, reset, (, ), {, mappings, ., clear, (, ), ;, lastMapping, =, null, ;, sourceFileMap]
[,, 0, ), ;, @, Override, public, void, reset, (, ), {, mappings, ., clear, (, ), ;, lastMapping, =]
[), ;, @, Override, public, void, reset, (, ), {, mappings, ., clear, (, ), ;, lastMapping, =, null, ;]
[;, lastMapping, =, null, ;, sourceFileMap, ., clear, (, ), ;, originalNameMap, ., clear, (, ), ;, lastSourceFile, =, null]
[., clear, (, ), ;, lastMapping, =, null, ;, sourceFileMap, ., clear, (, ), ;, originalNameMap, ., clear, (, )]
[=, null, ;, sourceFileMap, ., clear, (, ), ;, originalNameMap, ., clear, (, ), ;, lastSourceFile, =, null, ;, lastSourceFileIndex]
[;, sourceFileMap, ., clear, (, ), ;, originalNameMap, ., clear, (, ), ;, lastSourceFile, =, null, ;, lastSourceFileIndex, =, -]
[;, originalNameMap, ., clear, (, ), ;, lastSourceFile, =, null, ;, lastSourceFileIndex, =, -, 1, ;, offsetPosition, =, new, FilePosition]
[., clear, (, ), ;, originalNameMap, ., clear, (, ), ;, lastSourceFile, =, null, ;, lastSourceFileIndex, =, -, 1, ;]
[;, lastSourceFile, =, null, ;, lastSourceFileIndex, =, -, 1, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;]
[., clear, (, ), ;, lastSourceFile, =, null, ;, lastSourceFileIndex, =, -, 1, ;, offsetPosition, =, new, FilePosition, (, 0]
[=, null, ;, lastSourceFileIndex, =, -, 1, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =]
[;, lastSourceFileIndex, =, -, 1, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =, new, FilePosition]
[=, -, 1, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =, new, FilePosition, (, 0]
[;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =, new, FilePosition, (, 0, ,, 0, )]
[;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =, new, FilePosition, (, 0, ,, 0, )]
[=, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, }]
[;, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, }, @, Override, public, void, validate, (, boolean, validate]
[,, 0, ), ;, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, }, @, Override, public, void, validate]
[), ;, prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, }, @, Override, public, void, validate, (, boolean]
[=, new, FilePosition, (, 0, ,, 0, ), ;, }, @, Override, public, void, validate, (, boolean, validate, ), {]
[;, }, @, Override, public, void, validate, (, boolean, validate, ), {, }, @, Override, public, void, setWrapperPrefix, (, String]
[,, 0, ), ;, }, @, Override, public, void, validate, (, boolean, validate, ), {, }, @, Override, public, void]
[), ;, }, @, Override, public, void, validate, (, boolean, validate, ), {, }, @, Override, public, void, setWrapperPrefix, (]
[;, int, prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;, i, <, prefix, ., length, (, )]
[;, for, (, int, i, =, 0, ;, i, <, prefix, ., length, (, ), ;, ++, i, ), {]
[;, i, <, prefix, ., length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (, i]
[;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;]
[<, prefix, ., length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==]
[;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;]
[., length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', )]
[), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0]
[), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0]
[), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new]
[==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition]
[., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex]
[), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }]
[), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new]
[;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine, ,]
[++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine]
[=, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine, ,, prefixIndex, )]
[;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine, ,, prefixIndex, ), ;, }]
[;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine, ,, prefixIndex, ), ;, }, @, Override, public, void, setStartingPosition, (]
[++, ;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine, ,, prefixIndex, ), ;, }, @, Override, public, void, setStartingPosition]
[=, new, FilePosition, (, prefixLine, ,, prefixIndex, ), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int]
[;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine]
[,, prefixIndex, ), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, .]
[), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (]
[;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;]
[., checkState, (, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new]
[), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, )]
[>=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,]
[), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, )]
[;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @, Override, public, void, addMapping, (, String, sourceName]
[., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @]
[), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @, Override, public, void, addMapping, (, String]
[>=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @, Override, public, void, addMapping]
[), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @, Override, public, void, addMapping, (, String]
[=, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @, Override, public, void, addMapping, (, String, sourceName, ,, @]
[;, }, @, Override, public, void, addMapping, (, String, sourceName, ,, @, Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition]
[,, offsetIndex, ), ;, }, @, Override, public, void, addMapping, (, String, sourceName, ,, @, Nullable, String, symbolName, ,, FilePosition]
[), ;, }, @, Override, public, void, addMapping, (, String, sourceName, ,, @, Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,]
[), {, return, ;, }, FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =, endPosition, ;, if, (, offsetPosition, ., getLine]
[||, sourceStartPosition, ., getLine, (, ), <, 0, ), {, return, ;, }, FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd]
[==, null, ||, sourceStartPosition, ., getLine, (, ), <, 0, ), {, return, ;, }, FilePosition, adjustedStart, =, startPosition, ;]
[||, sourceStartPosition, ., getLine, (, ), <, 0, ), {, return, ;, }, FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd]
[), {, return, ;, }, FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =, endPosition, ;, if, (, offsetPosition, ., getLine]
[<, 0, ), {, return, ;, }, FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =, endPosition, ;, if, (, offsetPosition]
[., getLine, (, ), <, 0, ), {, return, ;, }, FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =, endPosition]
[), {, return, ;, }, FilePosition, adjustedStart, =, startPosition, ;, FilePosition, adjustedEnd, =, endPosition, ;, if, (, offsetPosition, ., getLine]
[;, FilePosition, adjustedEnd, =, endPosition, ;, if, (, offsetPosition, ., getLine, (, ), !=, 0, ||, offsetPosition, ., getColumn, (]
[;, if, (, offsetPosition, ., getLine, (, ), !=, 0, ||, offsetPosition, ., getColumn, (, ), !=, 0, ), {]
[), {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;]
[||, offsetPosition, ., getColumn, (, ), !=, 0, ), {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int]
[!=, 0, ||, offsetPosition, ., getColumn, (, ), !=, 0, ), {, int, offsetLine, =, offsetPosition, ., getLine, (, )]
[., getLine, (, ), !=, 0, ||, offsetPosition, ., getColumn, (, ), !=, 0, ), {, int, offsetLine, =, offsetPosition]
[||, offsetPosition, ., getColumn, (, ), !=, 0, ), {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int]
[), {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;]
[!=, 0, ), {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =, offsetPosition, ., getColumn, (]
[., getColumn, (, ), !=, 0, ), {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =]
[), {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;]
[;, int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if]
[., getLine, (, ), ;, int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn]
[;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (, startPosition, ., getLine, (, ), >, 0, )]
[., getColumn, (, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (, startPosition, ., getLine, (]
[;, if, (, startPosition, ., getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition]
[., getColumn, (, ), ;, if, (, startPosition, ., getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;]
[), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =]
[>, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {]
[., getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, )]
[), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =]
[=, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }]
[;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }, adjustedStart, =]
[), {, endOffsetPosition, =, 0, ;, }, adjustedStart, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,]
[>, 0, ), {, endOffsetPosition, =, 0, ;, }, adjustedStart, =, new, FilePosition, (, startPosition, ., getLine, (, ), +]
[., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }, adjustedStart, =, new, FilePosition, (, startPosition, .]
[), {, endOffsetPosition, =, 0, ;, }, adjustedStart, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,]
[=, 0, ;, }, adjustedStart, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn]
[;, }, adjustedStart, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, )]
[=, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, )]
[;, adjustedEnd, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, ), +]
[,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, adjustedEnd, =, new, FilePosition, (, endPosition, ., getLine, (, )]
[+, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, adjustedEnd, =, new, FilePosition, (, endPosition, ., getLine]
[., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, adjustedEnd, =, new, FilePosition]
[,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, adjustedEnd, =, new, FilePosition, (, endPosition, ., getLine, (, )]
[), ;, adjustedEnd, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, )]
[+, startOffsetPosition, ), ;, adjustedEnd, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn]
[., getColumn, (, ), +, startOffsetPosition, ), ;, adjustedEnd, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine]
[), ;, adjustedEnd, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, )]
[=, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, ), +, endOffsetPosition, )]
[;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName, ;, mapping, ., originalPosition, =]
[,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping]
[+, offsetLine, ,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, Mapping, mapping, =, new, Mapping, (, )]
[., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, Mapping, mapping, =]
[,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping]
[), ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName, ;, mapping, ., originalPosition]
[+, endOffsetPosition, ), ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName, ;, mapping]
[., getColumn, (, ), +, endOffsetPosition, ), ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile]
[), ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName, ;, mapping, ., originalPosition]
[;, mapping, ., sourceFile, =, sourceName, ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, mapping]
[=, sourceName, ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, mapping, ., startPosition, =, adjustedStart]
[., sourceFile, =, sourceName, ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, mapping, ., startPosition]
[;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, mapping, ., startPosition, =, adjustedStart, ;, mapping]
[=, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, mapping, ., startPosition, =, adjustedStart, ;, mapping, ., endPosition, =, adjustedEnd]
[., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, mapping, ., startPosition, =, adjustedStart, ;, mapping, ., endPosition]
[;, mapping, ., originalName, =, symbolName, ;, mapping, ., startPosition, =, adjustedStart, ;, mapping, ., endPosition, =, adjustedEnd, ;, if]
[=, symbolName, ;, mapping, ., startPosition, =, adjustedStart, ;, mapping, ., endPosition, =, adjustedEnd, ;, if, (, lastMapping, !=, null]
[., originalName, =, symbolName, ;, mapping, ., startPosition, =, adjustedStart, ;, mapping, ., endPosition, =, adjustedEnd, ;, if, (, lastMapping]
[;, mapping, ., startPosition, =, adjustedStart, ;, mapping, ., endPosition, =, adjustedEnd, ;, if, (, lastMapping, !=, null, ), {]
[=, adjustedStart, ;, mapping, ., endPosition, =, adjustedEnd, ;, if, (, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping]
[., startPosition, =, adjustedStart, ;, mapping, ., endPosition, =, adjustedEnd, ;, if, (, lastMapping, !=, null, ), {, int, lastLine]
[;, mapping, ., endPosition, =, adjustedEnd, ;, if, (, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition]
[=, adjustedEnd, ;, if, (, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, )]
[., endPosition, =, adjustedEnd, ;, if, (, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine]
[;, if, (, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;, int]
[), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, .]
[!=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, .]
[), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, .]
[;, int, lastColumn, =, lastMapping, ., startPosition, ., getColumn, (, ), ;, int, nextLine, =, mapping, ., startPosition, ., getLine]
[., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, ., getColumn, (, ), ;, int, nextLine, =, mapping]
[., startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, ., getColumn, (, ), ;, int, nextLine]
[;, int, nextLine, =, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn]
[., getColumn, (, ), ;, int, nextLine, =, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =, mapping]
[., startPosition, ., getColumn, (, ), ;, int, nextLine, =, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn]
[;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||]
[., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (]
[., startPosition, ., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, .]
[;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n"]
[., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=]
[., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&]
[;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping, ), ;, }, class, ConsumerEntryVisitor, implements, EntryVisitor, {, @]
[., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s"]
[,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings]
[||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine]
[>, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn]
[||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine]
[,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings]
[), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;]
[&&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }]
[==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, )]
[&&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }]
[), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;]
[>=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =]
[), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;]
[,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping]
[+, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add]
[,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping]
[,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping, ), ;]
[,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping, ), ;, }, class]
[,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping, ), ;, }, class, ConsumerEntryVisitor, implements]
[), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (, mapping, ), ;, }, class, ConsumerEntryVisitor, implements, EntryVisitor, {]
[=, mapping, ;, mappings, ., add, (, mapping, ), ;, }, class, ConsumerEntryVisitor, implements, EntryVisitor, {, @, Override, public, void]
[;, mappings, ., add, (, mapping, ), ;, }, class, ConsumerEntryVisitor, implements, EntryVisitor, {, @, Override, public, void, visit, (]
[;, }, class, ConsumerEntryVisitor, implements, EntryVisitor, {, @, Override, public, void, visit, (, String, sourceName, ,, String, symbolName, ,, FilePosition]
[., add, (, mapping, ), ;, }, class, ConsumerEntryVisitor, implements, EntryVisitor, {, @, Override, public, void, visit, (, String, sourceName]
[), ;, }, class, ConsumerEntryVisitor, implements, EntryVisitor, {, @, Override, public, void, visit, (, String, sourceName, ,, String, symbolName, ,]
[;, }, }, public, void, mergeMapSection, (, int, line, ,, int, column, ,, String, mapSectionContents, ), throws, SourceMapParseException, {, setStartingPosition]
[,, symbolName, ,, sourceStartPosition, ,, startPosition, ,, endPosition, ), ;, }, }, public, void, mergeMapSection, (, int, line, ,, int]
[,, sourceStartPosition, ,, startPosition, ,, endPosition, ), ;, }, }, public, void, mergeMapSection, (, int, line, ,, int, column, ,]
[,, startPosition, ,, endPosition, ), ;, }, }, public, void, mergeMapSection, (, int, line, ,, int, column, ,, String, mapSectionContents]
[,, endPosition, ), ;, }, }, public, void, mergeMapSection, (, int, line, ,, int, column, ,, String, mapSectionContents, ), throws]
[), ;, }, }, public, void, mergeMapSection, (, int, line, ,, int, column, ,, String, mapSectionContents, ), throws, SourceMapParseException, {]
[;, SourceMapConsumerV3, section, =, new, SourceMapConsumerV3, (, ), ;, section, ., parse, (, mapSectionContents, ), ;, section, ., visitMappings, (]
[,, column, ), ;, SourceMapConsumerV3, section, =, new, SourceMapConsumerV3, (, ), ;, section, ., parse, (, mapSectionContents, ), ;, section]
[), ;, SourceMapConsumerV3, section, =, new, SourceMapConsumerV3, (, ), ;, section, ., parse, (, mapSectionContents, ), ;, section, ., visitMappings]
[;, section, ., parse, (, mapSectionContents, ), ;, section, ., visitMappings, (, new, ConsumerEntryVisitor, (, ), ), ;, }, @]
[;, section, ., visitMappings, (, new, ConsumerEntryVisitor, (, ), ), ;, }, @, Override, public, void, appendTo, (, Appendable, out]
[., parse, (, mapSectionContents, ), ;, section, ., visitMappings, (, new, ConsumerEntryVisitor, (, ), ), ;, }, @, Override, public]
[), ;, section, ., visitMappings, (, new, ConsumerEntryVisitor, (, ), ), ;, }, @, Override, public, void, appendTo, (, Appendable]
[;, }, @, Override, public, void, appendTo, (, Appendable, out, ,, String, name, ), throws, IOException, {, int, maxLine, =]
[., visitMappings, (, new, ConsumerEntryVisitor, (, ), ), ;, }, @, Override, public, void, appendTo, (, Appendable, out, ,, String]
[), ;, }, @, Override, public, void, appendTo, (, Appendable, out, ,, String, name, ), throws, IOException, {, int, maxLine]
[;, out, ., append, (, "{\n", ), ;, appendFirstField, (, out, ,, "version", ,, "3", ), ;, appendField, (, out]
[;, appendFirstField, (, out, ,, "version", ,, "3", ), ;, appendField, (, out, ,, "file", ,, escapeString, (, name, )]
[., append, (, "{\n", ), ;, appendFirstField, (, out, ,, "version", ,, "3", ), ;, appendField, (, out, ,, "file"]
[), ;, appendFirstField, (, out, ,, "version", ,, "3", ), ;, appendField, (, out, ,, "file", ,, escapeString, (, name]
[;, appendField, (, out, ,, "file", ,, escapeString, (, name, ), ), ;, appendField, (, out, ,, "lineCount", ,, String]
[,, "version", ,, "3", ), ;, appendField, (, out, ,, "file", ,, escapeString, (, name, ), ), ;, appendField, (]
[,, "3", ), ;, appendField, (, out, ,, "file", ,, escapeString, (, name, ), ), ;, appendField, (, out, ,]
[), ;, appendField, (, out, ,, "file", ,, escapeString, (, name, ), ), ;, appendField, (, out, ,, "lineCount", ,]
[;, appendField, (, out, ,, "lineCount", ,, String, ., valueOf, (, maxLine, +, 1, ), ), ;, appendFieldStart, (, out]
[,, "file", ,, escapeString, (, name, ), ), ;, appendField, (, out, ,, "lineCount", ,, String, ., valueOf, (, maxLine]
[,, escapeString, (, name, ), ), ;, appendField, (, out, ,, "lineCount", ,, String, ., valueOf, (, maxLine, +, 1]
[), ;, appendField, (, out, ,, "lineCount", ,, String, ., valueOf, (, maxLine, +, 1, ), ), ;, appendFieldStart, (]
[), ), ;, appendField, (, out, ,, "lineCount", ,, String, ., valueOf, (, maxLine, +, 1, ), ), ;, appendFieldStart]
[;, appendFieldStart, (, out, ,, "mappings", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;]
[,, "lineCount", ,, String, ., valueOf, (, maxLine, +, 1, ), ), ;, appendFieldStart, (, out, ,, "mappings", ), ;]
[,, String, ., valueOf, (, maxLine, +, 1, ), ), ;, appendFieldStart, (, out, ,, "mappings", ), ;, (, new]
[), ;, appendFieldStart, (, out, ,, "mappings", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, )]
[., valueOf, (, maxLine, +, 1, ), ), ;, appendFieldStart, (, out, ,, "mappings", ), ;, (, new, LineMapper, (]
[), ), ;, appendFieldStart, (, out, ,, "mappings", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (]
[+, 1, ), ), ;, appendFieldStart, (, out, ,, "mappings", ), ;, (, new, LineMapper, (, out, ), ), .]
[), ), ;, appendFieldStart, (, out, ,, "mappings", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (]
[;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (]
[,, "mappings", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;, appendFieldEnd, (, out, )]
[), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart]
[;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "sources", ), ;, out, ., append, (, "[", ), ;]
[., appendLineMappings, (, ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "sources", ), ;, out, ., append]
[), ., appendLineMappings, (, ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "sources", ), ;, out, .]
[), ), ., appendLineMappings, (, ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "sources", ), ;, out]
[;, appendFieldStart, (, out, ,, "sources", ), ;, out, ., append, (, "[", ), ;, addSourceNameMap, (, out, ), ;]
[), ;, appendFieldStart, (, out, ,, "sources", ), ;, out, ., append, (, "[", ), ;, addSourceNameMap, (, out, )]
[;, out, ., append, (, "[", ), ;, addSourceNameMap, (, out, ), ;, out, ., append, (, "]", ), ;]
[,, "sources", ), ;, out, ., append, (, "[", ), ;, addSourceNameMap, (, out, ), ;, out, ., append, (]
[), ;, out, ., append, (, "[", ), ;, addSourceNameMap, (, out, ), ;, out, ., append, (, "]", )]
[;, addSourceNameMap, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (]
[., append, (, "[", ), ;, addSourceNameMap, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (]
[), ;, addSourceNameMap, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart]
[;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "names", ), ;]
[), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "names", )]
[;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "names", ), ;, out, ., append, (, "[", ), ;]
[., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "names", ), ;, out, .]
[), ;, appendFieldEnd, (, out, ), ;, appendFieldStart, (, out, ,, "names", ), ;, out, ., append, (, "[", )]
[;, appendFieldStart, (, out, ,, "names", ), ;, out, ., append, (, "[", ), ;, addSymbolNameMap, (, out, ), ;]
[), ;, appendFieldStart, (, out, ,, "names", ), ;, out, ., append, (, "[", ), ;, addSymbolNameMap, (, out, )]
[;, out, ., append, (, "[", ), ;, addSymbolNameMap, (, out, ), ;, out, ., append, (, "]", ), ;]
[,, "names", ), ;, out, ., append, (, "[", ), ;, addSymbolNameMap, (, out, ), ;, out, ., append, (]
[), ;, out, ., append, (, "[", ), ;, addSymbolNameMap, (, out, ), ;, out, ., append, (, "]", )]
[;, addSymbolNameMap, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, out, .]
[., append, (, "[", ), ;, addSymbolNameMap, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (]
[), ;, addSymbolNameMap, (, out, ), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, out]
[;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, out, ., append, (, "\n}\n", ), ;]
[), ;, out, ., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, out, ., append, (, "\n}\n", )]
[;, appendFieldEnd, (, out, ), ;, out, ., append, (, "\n}\n", ), ;, }, private, void, addSourceNameMap, (, Appendable, out]
[., append, (, "]", ), ;, appendFieldEnd, (, out, ), ;, out, ., append, (, "\n}\n", ), ;, }, private]
[), ;, appendFieldEnd, (, out, ), ;, out, ., append, (, "\n}\n", ), ;, }, private, void, addSourceNameMap, (, Appendable]
[;, out, ., append, (, "\n}\n", ), ;, }, private, void, addSourceNameMap, (, Appendable, out, ), throws, IOException, {, addNameMap]
[), ;, out, ., append, (, "\n}\n", ), ;, }, private, void, addSourceNameMap, (, Appendable, out, ), throws, IOException, {]
[;, }, private, void, addSourceNameMap, (, Appendable, out, ), throws, IOException, {, addNameMap, (, out, ,, sourceFileMap, ), ;, }]
[., append, (, "\n}\n", ), ;, }, private, void, addSourceNameMap, (, Appendable, out, ), throws, IOException, {, addNameMap, (, out]
[), ;, }, private, void, addSourceNameMap, (, Appendable, out, ), throws, IOException, {, addNameMap, (, out, ,, sourceFileMap, ), ;]
[;, }, private, void, addSymbolNameMap, (, Appendable, out, ), throws, IOException, {, addNameMap, (, out, ,, originalNameMap, ), ;, }]
[,, sourceFileMap, ), ;, }, private, void, addSymbolNameMap, (, Appendable, out, ), throws, IOException, {, addNameMap, (, out, ,, originalNameMap]
[), ;, }, private, void, addSymbolNameMap, (, Appendable, out, ), throws, IOException, {, addNameMap, (, out, ,, originalNameMap, ), ;]
[;, }, private, void, addNameMap, (, Appendable, out, ,, Map, <, String, ,, Integer, >, map, ), throws, IOException, {]
[,, originalNameMap, ), ;, }, private, void, addNameMap, (, Appendable, out, ,, Map, <, String, ,, Integer, >, map, )]
[), ;, }, private, void, addNameMap, (, Appendable, out, ,, Map, <, String, ,, Integer, >, map, ), throws, IOException]
[;, for, (, Entry, <, String, ,, Integer, >, entry, :, map, ., entrySet, (, ), ), {, String, key]
[), {, String, key, =, entry, ., getKey, (, ), ;, if, (, i, !=, 0, ), {, out, .]
[., entrySet, (, ), ), {, String, key, =, entry, ., getKey, (, ), ;, if, (, i, !=, 0]
[;, if, (, i, !=, 0, ), {, out, ., append, (, ",", ), ;, }, out, ., append, (]
[., getKey, (, ), ;, if, (, i, !=, 0, ), {, out, ., append, (, ",", ), ;, }]
[), {, out, ., append, (, ",", ), ;, }, out, ., append, (, escapeString, (, key, ), ), ;]
[!=, 0, ), {, out, ., append, (, ",", ), ;, }, out, ., append, (, escapeString, (, key, )]
[), {, out, ., append, (, ",", ), ;, }, out, ., append, (, escapeString, (, key, ), ), ;]
[;, }, out, ., append, (, escapeString, (, key, ), ), ;, i, ++, ;, }, }, private, static, String]
[., append, (, ",", ), ;, }, out, ., append, (, escapeString, (, key, ), ), ;, i, ++, ;]
[), ;, }, out, ., append, (, escapeString, (, key, ), ), ;, i, ++, ;, }, }, private, static]
[;, i, ++, ;, }, }, private, static, String, escapeString, (, String, value, ), {, return, Util, ., escapeString, (]
[., append, (, escapeString, (, key, ), ), ;, i, ++, ;, }, }, private, static, String, escapeString, (, String]
[), ;, i, ++, ;, }, }, private, static, String, escapeString, (, String, value, ), {, return, Util, ., escapeString]
[), ), ;, i, ++, ;, }, }, private, static, String, escapeString, (, String, value, ), {, return, Util, .]
[;, }, }, private, static, String, escapeString, (, String, value, ), {, return, Util, ., escapeString, (, value, ), ;]
[++, ;, }, }, private, static, String, escapeString, (, String, value, ), {, return, Util, ., escapeString, (, value, )]
[;, }, private, static, void, appendFirstField, (, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {, out]
[., escapeString, (, value, ), ;, }, private, static, void, appendFirstField, (, Appendable, out, ,, String, name, ,, CharSequence, value]
[), ;, }, private, static, void, appendFirstField, (, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {]
[;, out, ., append, (, name, ), ;, out, ., append, (, "\"", ), ;, out, ., append, (, ":"]
[., append, (, "\"", ), ;, out, ., append, (, name, ), ;, out, ., append, (, "\"", ), ;]
[), ;, out, ., append, (, name, ), ;, out, ., append, (, "\"", ), ;, out, ., append, (]
[;, out, ., append, (, "\"", ), ;, out, ., append, (, ":", ), ;, out, ., append, (, value]
[., append, (, name, ), ;, out, ., append, (, "\"", ), ;, out, ., append, (, ":", ), ;]
[), ;, out, ., append, (, "\"", ), ;, out, ., append, (, ":", ), ;, out, ., append, (]
[;, out, ., append, (, ":", ), ;, out, ., append, (, value, ), ;, }, private, static, void, appendField]
[., append, (, "\"", ), ;, out, ., append, (, ":", ), ;, out, ., append, (, value, ), ;]
[), ;, out, ., append, (, ":", ), ;, out, ., append, (, value, ), ;, }, private, static, void]
[;, out, ., append, (, value, ), ;, }, private, static, void, appendField, (, Appendable, out, ,, String, name, ,]
[., append, (, ":", ), ;, out, ., append, (, value, ), ;, }, private, static, void, appendField, (, Appendable]
[), ;, out, ., append, (, value, ), ;, }, private, static, void, appendField, (, Appendable, out, ,, String, name]
[;, }, private, static, void, appendField, (, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {, out]
[., append, (, value, ), ;, }, private, static, void, appendField, (, Appendable, out, ,, String, name, ,, CharSequence, value]
[), ;, }, private, static, void, appendField, (, Appendable, out, ,, String, name, ,, CharSequence, value, ), throws, IOException, {]
[;, out, ., append, (, "\"", ), ;, out, ., append, (, name, ), ;, out, ., append, (, "\""]
[., append, (, ",\n", ), ;, out, ., append, (, "\"", ), ;, out, ., append, (, name, ), ;]
[), ;, out, ., append, (, "\"", ), ;, out, ., append, (, name, ), ;, out, ., append, (]
[;, out, ., append, (, name, ), ;, out, ., append, (, "\"", ), ;, out, ., append, (, ":"]
[., append, (, "\"", ), ;, out, ., append, (, name, ), ;, out, ., append, (, "\"", ), ;]
[), ;, out, ., append, (, name, ), ;, out, ., append, (, "\"", ), ;, out, ., append, (]
[;, out, ., append, (, "\"", ), ;, out, ., append, (, ":", ), ;, out, ., append, (, value]
[., append, (, name, ), ;, out, ., append, (, "\"", ), ;, out, ., append, (, ":", ), ;]
[), ;, out, ., append, (, "\"", ), ;, out, ., append, (, ":", ), ;, out, ., append, (]
[;, out, ., append, (, ":", ), ;, out, ., append, (, value, ), ;, }, private, static, void, appendFieldStart]
[., append, (, "\"", ), ;, out, ., append, (, ":", ), ;, out, ., append, (, value, ), ;]
[), ;, out, ., append, (, ":", ), ;, out, ., append, (, value, ), ;, }, private, static, void]
[;, out, ., append, (, value, ), ;, }, private, static, void, appendFieldStart, (, Appendable, out, ,, String, name, )]
[., append, (, ":", ), ;, out, ., append, (, value, ), ;, }, private, static, void, appendFieldStart, (, Appendable]
[), ;, out, ., append, (, value, ), ;, }, private, static, void, appendFieldStart, (, Appendable, out, ,, String, name]
[;, }, private, static, void, appendFieldStart, (, Appendable, out, ,, String, name, ), throws, IOException, {, appendField, (, out, ,]
[., append, (, value, ), ;, }, private, static, void, appendFieldStart, (, Appendable, out, ,, String, name, ), throws, IOException]
[), ;, }, private, static, void, appendFieldStart, (, Appendable, out, ,, String, name, ), throws, IOException, {, appendField, (, out]
[;, }, @, SuppressWarnings, (, "unused", ), private, static, void, appendFieldEnd, (, Appendable, out, ), throws, IOException, {, }, private]
[,, name, ,, "", ), ;, }, @, SuppressWarnings, (, "unused", ), private, static, void, appendFieldEnd, (, Appendable, out, )]
[,, "", ), ;, }, @, SuppressWarnings, (, "unused", ), private, static, void, appendFieldEnd, (, Appendable, out, ), throws, IOException]
[), ;, }, @, SuppressWarnings, (, "unused", ), private, static, void, appendFieldEnd, (, Appendable, out, ), throws, IOException, {, }]
[private, static, void, appendFieldEnd, (, Appendable, out, ), throws, IOException, {, }, private, int, prepMappings, (, ), throws, IOException, {]
[), private, static, void, appendFieldEnd, (, Appendable, out, ), throws, IOException, {, }, private, int, prepMappings, (, ), throws, IOException]
[;, int, id, =, 0, ;, int, maxLine, =, 0, ;, int, sourceId, =, 0, ;, int, nameId, =, 0]
[., traverse, (, new, UsedMappingCheck, (, ), ), ;, int, id, =, 0, ;, int, maxLine, =, 0, ;, int]
[), ., traverse, (, new, UsedMappingCheck, (, ), ), ;, int, id, =, 0, ;, int, maxLine, =, 0, ;]
[), ;, int, id, =, 0, ;, int, maxLine, =, 0, ;, int, sourceId, =, 0, ;, int, nameId, =]
[;, int, maxLine, =, 0, ;, int, sourceId, =, 0, ;, int, nameId, =, 0, ;, for, (, Mapping, m]
[;, int, sourceId, =, 0, ;, int, nameId, =, 0, ;, for, (, Mapping, m, :, mappings, ), {, if]
[;, int, nameId, =, 0, ;, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, )]
[;, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {, m, ., id, =]
[), {, if, (, m, ., used, ), {, m, ., id, =, id, ++, ;, int, endPositionLine, =, m]
[), {, m, ., id, =, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;]
[., used, ), {, m, ., id, =, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (]
[=, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max]
[., id, =, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =, Math]
[;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,]
[++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine]
[;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return, maxLine, +, prefixPosition, ., getLine]
[., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return, maxLine]
[., endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }]
[=, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return, maxLine, +, prefixPosition, ., getLine, (, )]
[;, }, }, return, maxLine, +, prefixPosition, ., getLine, (, ), ;, }, static, class, Mapping, {, int, id, =]
[., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return, maxLine, +, prefixPosition, ., getLine, (, ), ;, }]
[,, endPositionLine, ), ;, }, }, return, maxLine, +, prefixPosition, ., getLine, (, ), ;, }, static, class, Mapping, {]
[), ;, }, }, return, maxLine, +, prefixPosition, ., getLine, (, ), ;, }, static, class, Mapping, {, int, id]
[;, }, static, class, Mapping, {, int, id, =, UNMAPPED, ;, String, sourceFile, ;, FilePosition, originalPosition, ;, FilePosition, startPosition, ;]
[+, prefixPosition, ., getLine, (, ), ;, }, static, class, Mapping, {, int, id, =, UNMAPPED, ;, String, sourceFile, ;]
[;, }, static, class, Mapping, {, int, id, =, UNMAPPED, ;, String, sourceFile, ;, FilePosition, originalPosition, ;, FilePosition, startPosition, ;]
[., getLine, (, ), ;, }, static, class, Mapping, {, int, id, =, UNMAPPED, ;, String, sourceFile, ;, FilePosition, originalPosition]
[;, String, sourceFile, ;, FilePosition, originalPosition, ;, FilePosition, startPosition, ;, FilePosition, endPosition, ;, String, originalName, ;, boolean, used, =, false]
[;, }, private, class, UsedMappingCheck, implements, MappingVisitor, {, @, Override, public, void, visit, (, Mapping, m, ,, int, line, ,]
[), {, m, ., used, =, true, ;, }, }, }, private, interface, MappingVisitor, {, void, visit, (, Mapping, m]
[!=, null, ), {, m, ., used, =, true, ;, }, }, }, private, interface, MappingVisitor, {, void, visit, (]
[), {, m, ., used, =, true, ;, }, }, }, private, interface, MappingVisitor, {, void, visit, (, Mapping, m]
[=, true, ;, }, }, }, private, interface, MappingVisitor, {, void, visit, (, Mapping, m, ,, int, line, ,, int]
[., used, =, true, ;, }, }, }, private, interface, MappingVisitor, {, void, visit, (, Mapping, m, ,, int, line]
[;, }, }, }, private, interface, MappingVisitor, {, void, visit, (, Mapping, m, ,, int, line, ,, int, col, ,]
[;, for, (, Mapping, m, :, mappings, ), {, while, (, !, stack, ., isEmpty, (, ), &&, !, isOverlapped]
[), {, while, (, !, stack, ., isEmpty, (, ), &&, !, isOverlapped, (, stack, ., peek, (, ), ,]
[), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping]
[&&, !, isOverlapped, (, stack, ., peek, (, ), ,, m, ), ), {, Mapping, previous, =, stack, ., pop]
[&&, !, isOverlapped, (, stack, ., peek, (, ), ,, m, ), ), {, Mapping, previous, =, stack, ., pop]
[., isEmpty, (, ), &&, !, isOverlapped, (, stack, ., peek, (, ), ,, m, ), ), {, Mapping, previous]
[), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping]
[), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping]
[,, m, ), ), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, )]
[., peek, (, ), ,, m, ), ), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (]
[), ), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }]
[;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (]
[., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (]
[;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;]
[,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,]
[), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,, m, )]
[;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;, stack, ., push, (, m, ), ;, }, while, (]
[., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;, stack, ., push, (, m, )]
[;, stack, ., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping]
[,, parent, ,, m, ), ;, stack, ., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty]
[,, m, ), ;, stack, ., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty, (, )]
[), ;, stack, ., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty, (, ), ), {]
[;, }, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =, stack, ., pop, (, )]
[., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =]
[), ;, }, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =, stack, ., pop, (]
[), {, Mapping, m, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, m, ), ;, }, }]
[), {, Mapping, m, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, m, ), ;, }, }]
[., isEmpty, (, ), ), {, Mapping, m, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, m]
[;, maybeVisit, (, v, ,, m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return, p]
[., pop, (, ), ;, maybeVisit, (, v, ,, m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p]
[;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return, p, ., getLine, (, ), +, prefixPosition, .]
[,, m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return, p, ., getLine, (, )]
[), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return, p, ., getLine, (, ), +, prefixPosition]
[;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =, p, ., getLine, (, ), ;, int]
[+, prefixPosition, ., getLine, (, ), ;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =, p]
[., getLine, (, ), +, prefixPosition, ., getLine, (, ), ;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {]
[;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =, p, ., getLine, (, ), ;, int]
[., getLine, (, ), ;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =, p, ., getLine]
[;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?, rawCol, :, rawCol]
[., getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, )]
[;, return, (, rawLine, !=, 0, ), ?, rawCol, :, rawCol, +, prefixPosition, ., getColumn, (, ), ;, }, private]
[., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?, rawCol, :, rawCol, +, prefixPosition, ., getColumn, (]
[;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =, m1, ., endPosition, .]
[?, rawCol, :, rawCol, +, prefixPosition, ., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping]
[), ?, rawCol, :, rawCol, +, prefixPosition, ., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,]
[!=, 0, ), ?, rawCol, :, rawCol, +, prefixPosition, ., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping]
[), ?, rawCol, :, rawCol, +, prefixPosition, ., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,]
[:, rawCol, +, prefixPosition, ., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, )]
[;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =, m1, ., endPosition, .]
[+, prefixPosition, ., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int]
[;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =, m1, ., endPosition, .]
[., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =]
[;, int, l2, =, m2, ., startPosition, ., getLine, (, ), ;, int, c1, =, m1, ., endPosition, ., getColumn]
[., getLine, (, ), ;, int, l2, =, m2, ., startPosition, ., getLine, (, ), ;, int, c1, =, m1]
[., endPosition, ., getLine, (, ), ;, int, l2, =, m2, ., startPosition, ., getLine, (, ), ;, int, c1]
[;, int, c1, =, m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn]
[., getLine, (, ), ;, int, c1, =, m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =, m2]
[., startPosition, ., getLine, (, ), ;, int, c1, =, m1, ., endPosition, ., getColumn, (, ), ;, int, c2]
[;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=]
[., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==]
[., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (]
[;, return, (, l1, ==, l2, &&, c1, >=, c2, ), ||, l1, >, l2, ;, }, private, void, maybeVisit]
[., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=, c2, ), ||, l1, >, l2, ;]
[., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=, c2, ), ||, l1, >]
[;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int]
[), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {]
[&&, c1, >=, c2, ), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m]
[==, l2, &&, c1, >=, c2, ), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,]
[&&, c1, >=, c2, ), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m]
[), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {]
[>=, c2, ), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws]
[), ||, l1, >, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {]
[;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[>, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =]
[;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==]
[), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line]
[., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||]
[;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (]
[), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit]
[., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), )]
[), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (, MappingVisitor]
[||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,]
[<, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,]
[||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,]
[), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (, MappingVisitor]
[), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (]
[&&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }]
[==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;]
[&&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }]
[), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (]
[<, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void]
[), ), {, visit, (, v, ,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (]
[;, }, }, private, void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m, ), throws, IOException, {, int]
[,, m, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,]
[,, nextLine, ,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m]
[,, nextCol, ), ;, }, }, private, void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m, ), throws]
[), ;, }, }, private, void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m, ), throws, IOException, {]
[;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col]
[), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||]
[., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <]
[;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||]
[), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine]
[., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line]
[;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (]
[., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line]
[), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit]
[||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol]
[<, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col]
[||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol]
[), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit]
[<=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), )]
[), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit]
[), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (, MappingVisitor]
[||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,]
[<, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,]
[||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,]
[), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (, MappingVisitor]
[), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (]
[&&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }]
[==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;]
[&&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }]
[), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (]
[<, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void]
[), ), {, visit, (, v, ,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (]
[;, }, }, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, ), throws]
[,, parent, ,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,]
[,, nextLine, ,, nextCol, ), ;, }, }, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine]
[,, nextCol, ), ;, }, }, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int]
[), ;, }, }, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, )]
[;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&]
[., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, )]
[), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine]
[<=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line]
[), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine]
[;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return]
[., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==]
[), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;]
[||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState]
[<, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions]
[||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState]
[), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;]
[<, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false]
[), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;]
[), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,]
[&&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (]
[==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, .]
[&&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (]
[), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,]
[==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,]
[), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,]
[;, return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;, line]
[., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,, nextLine]
[), ;, return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;]
[;, line, =, nextLine, ;, col, =, nextCol, ;, }, }, @, Override, public, void, appendIndexMapTo, (, Appendable, out, ,]
[., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;, line, =, nextLine, ;, col, =]
[,, line, ,, col, ,, nextLine, ,, nextCol, ), ;, line, =, nextLine, ;, col, =, nextCol, ;, }, }]
[,, col, ,, nextLine, ,, nextCol, ), ;, line, =, nextLine, ;, col, =, nextCol, ;, }, }, @, Override]
[,, nextLine, ,, nextCol, ), ;, line, =, nextLine, ;, col, =, nextCol, ;, }, }, @, Override, public, void]
[,, nextCol, ), ;, line, =, nextLine, ;, col, =, nextCol, ;, }, }, @, Override, public, void, appendIndexMapTo, (]
[), ;, line, =, nextLine, ;, col, =, nextCol, ;, }, }, @, Override, public, void, appendIndexMapTo, (, Appendable, out]
[=, nextLine, ;, col, =, nextCol, ;, }, }, @, Override, public, void, appendIndexMapTo, (, Appendable, out, ,, String, name]
[;, col, =, nextCol, ;, }, }, @, Override, public, void, appendIndexMapTo, (, Appendable, out, ,, String, name, ,, List]
[=, nextCol, ;, }, }, @, Override, public, void, appendIndexMapTo, (, Appendable, out, ,, String, name, ,, List, <, SourceMapSection]
[;, }, }, @, Override, public, void, appendIndexMapTo, (, Appendable, out, ,, String, name, ,, List, <, SourceMapSection, >, sections]
[;, appendFirstField, (, out, ,, "version", ,, "3", ), ;, appendField, (, out, ,, "file", ,, escapeString, (, name, )]
[., append, (, "{\n", ), ;, appendFirstField, (, out, ,, "version", ,, "3", ), ;, appendField, (, out, ,, "file"]
[), ;, appendFirstField, (, out, ,, "version", ,, "3", ), ;, appendField, (, out, ,, "file", ,, escapeString, (, name]
[;, appendField, (, out, ,, "file", ,, escapeString, (, name, ), ), ;, appendFieldStart, (, out, ,, "sections", ), ;]
[,, "version", ,, "3", ), ;, appendField, (, out, ,, "file", ,, escapeString, (, name, ), ), ;, appendFieldStart, (]
[,, "3", ), ;, appendField, (, out, ,, "file", ,, escapeString, (, name, ), ), ;, appendFieldStart, (, out, ,]
[), ;, appendField, (, out, ,, "file", ,, escapeString, (, name, ), ), ;, appendFieldStart, (, out, ,, "sections", )]
[;, appendFieldStart, (, out, ,, "sections", ), ;, out, ., append, (, "[\n", ), ;, boolean, first, =, true, ;]
[,, "file", ,, escapeString, (, name, ), ), ;, appendFieldStart, (, out, ,, "sections", ), ;, out, ., append, (]
[,, escapeString, (, name, ), ), ;, appendFieldStart, (, out, ,, "sections", ), ;, out, ., append, (, "[\n", )]
[), ;, appendFieldStart, (, out, ,, "sections", ), ;, out, ., append, (, "[\n", ), ;, boolean, first, =, true]
[), ), ;, appendFieldStart, (, out, ,, "sections", ), ;, out, ., append, (, "[\n", ), ;, boolean, first, =]
[;, out, ., append, (, "[\n", ), ;, boolean, first, =, true, ;, int, line, =, 0, ,, column, =]
[,, "sections", ), ;, out, ., append, (, "[\n", ), ;, boolean, first, =, true, ;, int, line, =, 0]
[), ;, out, ., append, (, "[\n", ), ;, boolean, first, =, true, ;, int, line, =, 0, ,, column]
[;, boolean, first, =, true, ;, int, line, =, 0, ,, column, =, 0, ;, for, (, SourceMapSection, section, :]
[., append, (, "[\n", ), ;, boolean, first, =, true, ;, int, line, =, 0, ,, column, =, 0, ;]
[), ;, boolean, first, =, true, ;, int, line, =, 0, ,, column, =, 0, ;, for, (, SourceMapSection, section]
[;, int, line, =, 0, ,, column, =, 0, ;, for, (, SourceMapSection, section, :, sections, ), {, if, (]
[,, column, =, 0, ;, for, (, SourceMapSection, section, :, sections, ), {, if, (, first, ), {, first, =]
[;, for, (, SourceMapSection, section, :, sections, ), {, if, (, first, ), {, first, =, false, ;, }, else]
[), {, if, (, first, ), {, first, =, false, ;, }, else, {, out, ., append, (, ",\n", )]
[), {, first, =, false, ;, }, else, {, out, ., append, (, ",\n", ), ;, }, out, ., append]
[=, false, ;, }, else, {, out, ., append, (, ",\n", ), ;, }, out, ., append, (, "{\n", )]
[;, }, else, {, out, ., append, (, ",\n", ), ;, }, out, ., append, (, "{\n", ), ;, appendFirstField]
[;, }, out, ., append, (, "{\n", ), ;, appendFirstField, (, out, ,, "offset", ,, offsetValue, (, section, ., getLine]
[., append, (, ",\n", ), ;, }, out, ., append, (, "{\n", ), ;, appendFirstField, (, out, ,, "offset", ,]
[), ;, }, out, ., append, (, "{\n", ), ;, appendFirstField, (, out, ,, "offset", ,, offsetValue, (, section, .]
[;, appendFirstField, (, out, ,, "offset", ,, offsetValue, (, section, ., getLine, (, ), ,, section, ., getColumn, (, )]
[., append, (, "{\n", ), ;, appendFirstField, (, out, ,, "offset", ,, offsetValue, (, section, ., getLine, (, ), ,]
[), ;, appendFirstField, (, out, ,, "offset", ,, offsetValue, (, section, ., getLine, (, ), ,, section, ., getColumn, (]
[;, if, (, section, ., getSectionType, (, ), ==, SourceMapSection, ., SectionType, ., URL, ), {, appendField, (, out, ,]
[,, "offset", ,, offsetValue, (, section, ., getLine, (, ), ,, section, ., getColumn, (, ), ), ), ;, if]
[,, offsetValue, (, section, ., getLine, (, ), ,, section, ., getColumn, (, ), ), ), ;, if, (, section]
[), ;, if, (, section, ., getSectionType, (, ), ==, SourceMapSection, ., SectionType, ., URL, ), {, appendField, (, out]
[,, section, ., getColumn, (, ), ), ), ;, if, (, section, ., getSectionType, (, ), ==, SourceMapSection, ., SectionType]
[., getLine, (, ), ,, section, ., getColumn, (, ), ), ), ;, if, (, section, ., getSectionType, (, )]
[), ), ;, if, (, section, ., getSectionType, (, ), ==, SourceMapSection, ., SectionType, ., URL, ), {, appendField, (]
[., getColumn, (, ), ), ), ;, if, (, section, ., getSectionType, (, ), ==, SourceMapSection, ., SectionType, ., URL]
[), {, appendField, (, out, ,, "url", ,, escapeString, (, section, ., getSectionValue, (, ), ), ), ;, }, else]
[==, SourceMapSection, ., SectionType, ., URL, ), {, appendField, (, out, ,, "url", ,, escapeString, (, section, ., getSectionValue, (]
[., getSectionType, (, ), ==, SourceMapSection, ., SectionType, ., URL, ), {, appendField, (, out, ,, "url", ,, escapeString, (]
[), {, appendField, (, out, ,, "url", ,, escapeString, (, section, ., getSectionValue, (, ), ), ), ;, }, else]
[., URL, ), {, appendField, (, out, ,, "url", ,, escapeString, (, section, ., getSectionValue, (, ), ), ), ;]
[., SectionType, ., URL, ), {, appendField, (, out, ,, "url", ,, escapeString, (, section, ., getSectionValue, (, ), )]
[;, }, else, if, (, section, ., getSectionType, (, ), ==, SourceMapSection, ., SectionType, ., MAP, ), {, appendField, (]
[,, "url", ,, escapeString, (, section, ., getSectionValue, (, ), ), ), ;, }, else, if, (, section, ., getSectionType]
[,, escapeString, (, section, ., getSectionValue, (, ), ), ), ;, }, else, if, (, section, ., getSectionType, (, )]
[), ;, }, else, if, (, section, ., getSectionType, (, ), ==, SourceMapSection, ., SectionType, ., MAP, ), {, appendField]
[), ), ;, }, else, if, (, section, ., getSectionType, (, ), ==, SourceMapSection, ., SectionType, ., MAP, ), {]
[., getSectionValue, (, ), ), ), ;, }, else, if, (, section, ., getSectionType, (, ), ==, SourceMapSection, ., SectionType]
[), {, appendField, (, out, ,, "map", ,, section, ., getSectionValue, (, ), ), ;, }, else, {, throw, new]
[==, SourceMapSection, ., SectionType, ., MAP, ), {, appendField, (, out, ,, "map", ,, section, ., getSectionValue, (, ), )]
[., getSectionType, (, ), ==, SourceMapSection, ., SectionType, ., MAP, ), {, appendField, (, out, ,, "map", ,, section, .]
[), {, appendField, (, out, ,, "map", ,, section, ., getSectionValue, (, ), ), ;, }, else, {, throw, new]
[., MAP, ), {, appendField, (, out, ,, "map", ,, section, ., getSectionValue, (, ), ), ;, }, else, {]
[., SectionType, ., MAP, ), {, appendField, (, out, ,, "map", ,, section, ., getSectionValue, (, ), ), ;, }]
[;, }, else, {, throw, new, IOException, (, "Unexpected section type", ), ;, }, out, ., append, (, "\n}", ), ;, }]
[,, "map", ,, section, ., getSectionValue, (, ), ), ;, }, else, {, throw, new, IOException, (, "Unexpected section type", ), ;]
[,, section, ., getSectionValue, (, ), ), ;, }, else, {, throw, new, IOException, (, "Unexpected section type", ), ;, }, out]
[), ;, }, else, {, throw, new, IOException, (, "Unexpected section type", ), ;, }, out, ., append, (, "\n}", ), ;]
[., getSectionValue, (, ), ), ;, }, else, {, throw, new, IOException, (, "Unexpected section type", ), ;, }, out, ., append]
[;, }, out, ., append, (, "\n}", ), ;, }, out, ., append, (, "\n]", ), ;, appendFieldEnd, (, out]
[), ;, }, out, ., append, (, "\n}", ), ;, }, out, ., append, (, "\n]", ), ;, appendFieldEnd, (]
[;, }, out, ., append, (, "\n]", ), ;, appendFieldEnd, (, out, ), ;, out, ., append, (, "\n}\n", )]
[., append, (, "\n}", ), ;, }, out, ., append, (, "\n]", ), ;, appendFieldEnd, (, out, ), ;, out]
[), ;, }, out, ., append, (, "\n]", ), ;, appendFieldEnd, (, out, ), ;, out, ., append, (, "\n}\n"]
[;, appendFieldEnd, (, out, ), ;, out, ., append, (, "\n}\n", ), ;, }, private, CharSequence, offsetValue, (, int, line]
[., append, (, "\n]", ), ;, appendFieldEnd, (, out, ), ;, out, ., append, (, "\n}\n", ), ;, }, private]
[), ;, appendFieldEnd, (, out, ), ;, out, ., append, (, "\n}\n", ), ;, }, private, CharSequence, offsetValue, (, int]
[;, out, ., append, (, "\n}\n", ), ;, }, private, CharSequence, offsetValue, (, int, line, ,, int, column, ), throws]
[), ;, out, ., append, (, "\n}\n", ), ;, }, private, CharSequence, offsetValue, (, int, line, ,, int, column, )]
[;, }, private, CharSequence, offsetValue, (, int, line, ,, int, column, ), throws, IOException, {, StringBuilder, out, =, new, StringBuilder]
[., append, (, "\n}\n", ), ;, }, private, CharSequence, offsetValue, (, int, line, ,, int, column, ), throws, IOException, {]
[), ;, }, private, CharSequence, offsetValue, (, int, line, ,, int, column, ), throws, IOException, {, StringBuilder, out, =, new]
[;, out, ., append, (, "{\n", ), ;, appendFirstField, (, out, ,, "line", ,, String, ., valueOf, (, line, )]
[;, appendFirstField, (, out, ,, "line", ,, String, ., valueOf, (, line, ), ), ;, appendField, (, out, ,, "column"]
[., append, (, "{\n", ), ;, appendFirstField, (, out, ,, "line", ,, String, ., valueOf, (, line, ), ), ;]
[), ;, appendFirstField, (, out, ,, "line", ,, String, ., valueOf, (, line, ), ), ;, appendField, (, out, ,]
[;, appendField, (, out, ,, "column", ,, String, ., valueOf, (, column, ), ), ;, out, ., append, (, "\n}"]
[,, "line", ,, String, ., valueOf, (, line, ), ), ;, appendField, (, out, ,, "column", ,, String, ., valueOf]
[,, String, ., valueOf, (, line, ), ), ;, appendField, (, out, ,, "column", ,, String, ., valueOf, (, column]
[), ;, appendField, (, out, ,, "column", ,, String, ., valueOf, (, column, ), ), ;, out, ., append, (]
[., valueOf, (, line, ), ), ;, appendField, (, out, ,, "column", ,, String, ., valueOf, (, column, ), )]
[), ), ;, appendField, (, out, ,, "column", ,, String, ., valueOf, (, column, ), ), ;, out, ., append]
[;, out, ., append, (, "\n}", ), ;, return, out, ;, }, private, int, getSourceId, (, String, sourceName, ), {]
[,, "column", ,, String, ., valueOf, (, column, ), ), ;, out, ., append, (, "\n}", ), ;, return, out]
[,, String, ., valueOf, (, column, ), ), ;, out, ., append, (, "\n}", ), ;, return, out, ;, }]
[), ;, out, ., append, (, "\n}", ), ;, return, out, ;, }, private, int, getSourceId, (, String, sourceName, )]
[., valueOf, (, column, ), ), ;, out, ., append, (, "\n}", ), ;, return, out, ;, }, private, int]
[), ), ;, out, ., append, (, "\n}", ), ;, return, out, ;, }, private, int, getSourceId, (, String, sourceName]
[;, return, out, ;, }, private, int, getSourceId, (, String, sourceName, ), {, if, (, sourceName, !=, lastSourceFile, ), {]
[., append, (, "\n}", ), ;, return, out, ;, }, private, int, getSourceId, (, String, sourceName, ), {, if, (]
[), ;, return, out, ;, }, private, int, getSourceId, (, String, sourceName, ), {, if, (, sourceName, !=, lastSourceFile, )]
[;, }, private, int, getSourceId, (, String, sourceName, ), {, if, (, sourceName, !=, lastSourceFile, ), {, lastSourceFile, =, sourceName]
[), {, lastSourceFile, =, sourceName, ;, Integer, index, =, sourceFileMap, ., get, (, sourceName, ), ;, if, (, index, !=]
[!=, lastSourceFile, ), {, lastSourceFile, =, sourceName, ;, Integer, index, =, sourceFileMap, ., get, (, sourceName, ), ;, if, (]
[), {, lastSourceFile, =, sourceName, ;, Integer, index, =, sourceFileMap, ., get, (, sourceName, ), ;, if, (, index, !=]
[=, sourceName, ;, Integer, index, =, sourceFileMap, ., get, (, sourceName, ), ;, if, (, index, !=, null, ), {]
[;, Integer, index, =, sourceFileMap, ., get, (, sourceName, ), ;, if, (, index, !=, null, ), {, lastSourceFileIndex, =]
[;, if, (, index, !=, null, ), {, lastSourceFileIndex, =, index, ;, }, else, {, lastSourceFileIndex, =, sourceFileMap, ., size]
[., get, (, sourceName, ), ;, if, (, index, !=, null, ), {, lastSourceFileIndex, =, index, ;, }, else, {]
[), ;, if, (, index, !=, null, ), {, lastSourceFileIndex, =, index, ;, }, else, {, lastSourceFileIndex, =, sourceFileMap, .]
[), {, lastSourceFileIndex, =, index, ;, }, else, {, lastSourceFileIndex, =, sourceFileMap, ., size, (, ), ;, sourceFileMap, ., put]
[!=, null, ), {, lastSourceFileIndex, =, index, ;, }, else, {, lastSourceFileIndex, =, sourceFileMap, ., size, (, ), ;, sourceFileMap]
[), {, lastSourceFileIndex, =, index, ;, }, else, {, lastSourceFileIndex, =, sourceFileMap, ., size, (, ), ;, sourceFileMap, ., put]
[=, index, ;, }, else, {, lastSourceFileIndex, =, sourceFileMap, ., size, (, ), ;, sourceFileMap, ., put, (, sourceName, ,]
[;, }, else, {, lastSourceFileIndex, =, sourceFileMap, ., size, (, ), ;, sourceFileMap, ., put, (, sourceName, ,, lastSourceFileIndex, )]
[=, sourceFileMap, ., size, (, ), ;, sourceFileMap, ., put, (, sourceName, ,, lastSourceFileIndex, ), ;, }, }, return, lastSourceFileIndex]
[;, sourceFileMap, ., put, (, sourceName, ,, lastSourceFileIndex, ), ;, }, }, return, lastSourceFileIndex, ;, }, private, int, getNameId, (]
[., size, (, ), ;, sourceFileMap, ., put, (, sourceName, ,, lastSourceFileIndex, ), ;, }, }, return, lastSourceFileIndex, ;, }]
[;, }, }, return, lastSourceFileIndex, ;, }, private, int, getNameId, (, String, symbolName, ), {, int, originalNameIndex, ;, Integer, index]
[., put, (, sourceName, ,, lastSourceFileIndex, ), ;, }, }, return, lastSourceFileIndex, ;, }, private, int, getNameId, (, String, symbolName]
[,, lastSourceFileIndex, ), ;, }, }, return, lastSourceFileIndex, ;, }, private, int, getNameId, (, String, symbolName, ), {, int, originalNameIndex]
[), ;, }, }, return, lastSourceFileIndex, ;, }, private, int, getNameId, (, String, symbolName, ), {, int, originalNameIndex, ;, Integer]
[;, }, private, int, getNameId, (, String, symbolName, ), {, int, originalNameIndex, ;, Integer, index, =, originalNameMap, ., get, (]
[;, if, (, index, !=, null, ), {, originalNameIndex, =, index, ;, }, else, {, originalNameIndex, =, originalNameMap, ., size]
[., get, (, symbolName, ), ;, if, (, index, !=, null, ), {, originalNameIndex, =, index, ;, }, else, {]
[), ;, if, (, index, !=, null, ), {, originalNameIndex, =, index, ;, }, else, {, originalNameIndex, =, originalNameMap, .]
[), {, originalNameIndex, =, index, ;, }, else, {, originalNameIndex, =, originalNameMap, ., size, (, ), ;, originalNameMap, ., put]
[!=, null, ), {, originalNameIndex, =, index, ;, }, else, {, originalNameIndex, =, originalNameMap, ., size, (, ), ;, originalNameMap]
[), {, originalNameIndex, =, index, ;, }, else, {, originalNameIndex, =, originalNameMap, ., size, (, ), ;, originalNameMap, ., put]
[=, index, ;, }, else, {, originalNameIndex, =, originalNameMap, ., size, (, ), ;, originalNameMap, ., put, (, symbolName, ,]
[;, }, else, {, originalNameIndex, =, originalNameMap, ., size, (, ), ;, originalNameMap, ., put, (, symbolName, ,, originalNameIndex, )]
[=, originalNameMap, ., size, (, ), ;, originalNameMap, ., put, (, symbolName, ,, originalNameIndex, ), ;, }, return, originalNameIndex, ;]
[;, originalNameMap, ., put, (, symbolName, ,, originalNameIndex, ), ;, }, return, originalNameIndex, ;, }, private, class, LineMapper, implements, MappingVisitor]
[., size, (, ), ;, originalNameMap, ., put, (, symbolName, ,, originalNameIndex, ), ;, }, return, originalNameIndex, ;, }, private]
[;, }, return, originalNameIndex, ;, }, private, class, LineMapper, implements, MappingVisitor, {, private, final, Appendable, out, ;, private, int, previousLine]
[., put, (, symbolName, ,, originalNameIndex, ), ;, }, return, originalNameIndex, ;, }, private, class, LineMapper, implements, MappingVisitor, {, private]
[,, originalNameIndex, ), ;, }, return, originalNameIndex, ;, }, private, class, LineMapper, implements, MappingVisitor, {, private, final, Appendable, out, ;]
[), ;, }, return, originalNameIndex, ;, }, private, class, LineMapper, implements, MappingVisitor, {, private, final, Appendable, out, ;, private, int]
[;, }, private, class, LineMapper, implements, MappingVisitor, {, private, final, Appendable, out, ;, private, int, previousLine, =, -, 1, ;]
[;, private, int, previousColumn, =, 0, ;, private, int, previousSourceFileId, ;, private, int, previousSourceLine, ;, private, int, previousSourceColumn, ;, private]
[;, private, int, previousColumn, =, 0, ;, private, int, previousSourceFileId, ;, private, int, previousSourceLine, ;, private, int, previousSourceColumn, ;, private]
[;, private, int, previousSourceFileId, ;, private, int, previousSourceLine, ;, private, int, previousSourceColumn, ;, private, int, previousNameId, ;, LineMapper, (, Appendable]
[=, out, ;, }, @, Override, public, void, visit, (, Mapping, m, ,, int, line, ,, int, col, ,, int]
[., out, =, out, ;, }, @, Override, public, void, visit, (, Mapping, m, ,, int, line, ,, int, col]
[;, }, @, Override, public, void, visit, (, Mapping, m, ,, int, line, ,, int, col, ,, int, nextLine, ,]
[;, if, (, previousLine, !=, line, ), {, previousColumn, =, 0, ;, }, if, (, line, !=, nextLine, ||, col]
[?, m, ., id, :, UNMAPPED, ;, if, (, previousLine, !=, line, ), {, previousColumn, =, 0, ;, }, if]
[), ?, m, ., id, :, UNMAPPED, ;, if, (, previousLine, !=, line, ), {, previousColumn, =, 0, ;, }]
[!=, null, ), ?, m, ., id, :, UNMAPPED, ;, if, (, previousLine, !=, line, ), {, previousColumn, =, 0]
[), ?, m, ., id, :, UNMAPPED, ;, if, (, previousLine, !=, line, ), {, previousColumn, =, 0, ;, }]
[:, UNMAPPED, ;, if, (, previousLine, !=, line, ), {, previousColumn, =, 0, ;, }, if, (, line, !=, nextLine]
[., id, :, UNMAPPED, ;, if, (, previousLine, !=, line, ), {, previousColumn, =, 0, ;, }, if, (, line]
[;, if, (, previousLine, !=, line, ), {, previousColumn, =, 0, ;, }, if, (, line, !=, nextLine, ||, col]
[), {, previousColumn, =, 0, ;, }, if, (, line, !=, nextLine, ||, col, !=, nextCol, ), {, if, (]
[!=, line, ), {, previousColumn, =, 0, ;, }, if, (, line, !=, nextLine, ||, col, !=, nextCol, ), {]
[), {, previousColumn, =, 0, ;, }, if, (, line, !=, nextLine, ||, col, !=, nextCol, ), {, if, (]
[=, 0, ;, }, if, (, line, !=, nextLine, ||, col, !=, nextCol, ), {, if, (, previousLine, ==, line]
[;, }, if, (, line, !=, nextLine, ||, col, !=, nextCol, ), {, if, (, previousLine, ==, line, ), {]
[), {, if, (, previousLine, ==, line, ), {, out, ., append, (, ',', ), ;, }, writeEntry, (, m]
[||, col, !=, nextCol, ), {, if, (, previousLine, ==, line, ), {, out, ., append, (, ',', ), ;]
[!=, nextLine, ||, col, !=, nextCol, ), {, if, (, previousLine, ==, line, ), {, out, ., append, (, ',']
[||, col, !=, nextCol, ), {, if, (, previousLine, ==, line, ), {, out, ., append, (, ',', ), ;]
[), {, if, (, previousLine, ==, line, ), {, out, ., append, (, ',', ), ;, }, writeEntry, (, m]
[!=, nextCol, ), {, if, (, previousLine, ==, line, ), {, out, ., append, (, ',', ), ;, }, writeEntry]
[), {, if, (, previousLine, ==, line, ), {, out, ., append, (, ',', ), ;, }, writeEntry, (, m]
[), {, out, ., append, (, ',', ), ;, }, writeEntry, (, m, ,, col, ), ;, previousLine, =, line]
[==, line, ), {, out, ., append, (, ',', ), ;, }, writeEntry, (, m, ,, col, ), ;, previousLine]
[), {, out, ., append, (, ',', ), ;, }, writeEntry, (, m, ,, col, ), ;, previousLine, =, line]
[;, }, writeEntry, (, m, ,, col, ), ;, previousLine, =, line, ;, previousColumn, =, col, ;, }, for, (]
[., append, (, ',', ), ;, }, writeEntry, (, m, ,, col, ), ;, previousLine, =, line, ;, previousColumn, =]
[), ;, }, writeEntry, (, m, ,, col, ), ;, previousLine, =, line, ;, previousColumn, =, col, ;, }, for]
[;, previousLine, =, line, ;, previousColumn, =, col, ;, }, for, (, int, i, =, line, ;, i, <=, nextLine]
[,, col, ), ;, previousLine, =, line, ;, previousColumn, =, col, ;, }, for, (, int, i, =, line, ;]
[), ;, previousLine, =, line, ;, previousColumn, =, col, ;, }, for, (, int, i, =, line, ;, i, <=]
[=, line, ;, previousColumn, =, col, ;, }, for, (, int, i, =, line, ;, i, <=, nextLine, ;, i]
[;, previousColumn, =, col, ;, }, for, (, int, i, =, line, ;, i, <=, nextLine, ;, i, ++, )]
[=, col, ;, }, for, (, int, i, =, line, ;, i, <=, nextLine, ;, i, ++, ), {, if]
[;, }, for, (, int, i, =, line, ;, i, <=, nextLine, ;, i, ++, ), {, if, (, i]
[;, i, <=, nextLine, ;, i, ++, ), {, if, (, i, ==, nextLine, ), {, break, ;, }, closeLine]
[;, i, ++, ), {, if, (, i, ==, nextLine, ), {, break, ;, }, closeLine, (, false, ), ;]
[<=, nextLine, ;, i, ++, ), {, if, (, i, ==, nextLine, ), {, break, ;, }, closeLine, (, false]
[;, i, ++, ), {, if, (, i, ==, nextLine, ), {, break, ;, }, closeLine, (, false, ), ;]
[), {, if, (, i, ==, nextLine, ), {, break, ;, }, closeLine, (, false, ), ;, openLine, (, false]
[++, ), {, if, (, i, ==, nextLine, ), {, break, ;, }, closeLine, (, false, ), ;, openLine, (]
[), {, break, ;, }, closeLine, (, false, ), ;, openLine, (, false, ), ;, }, }, void, writeEntry, (]
[==, nextLine, ), {, break, ;, }, closeLine, (, false, ), ;, openLine, (, false, ), ;, }, }, void]
[), {, break, ;, }, closeLine, (, false, ), ;, openLine, (, false, ), ;, }, }, void, writeEntry, (]
[;, openLine, (, false, ), ;, }, }, void, writeEntry, (, Mapping, m, ,, int, column, ), throws, IOException, {]
[), ;, openLine, (, false, ), ;, }, }, void, writeEntry, (, Mapping, m, ,, int, column, ), throws, IOException]
[;, }, }, void, writeEntry, (, Mapping, m, ,, int, column, ), throws, IOException, {, Base64VLQ, ., encode, (, out]
[), ;, }, }, void, writeEntry, (, Mapping, m, ,, int, column, ), throws, IOException, {, Base64VLQ, ., encode, (]
[;, previousColumn, =, column, ;, if, (, m, !=, null, ), {, int, sourceId, =, getSourceId, (, m, ., sourceFile]
[., encode, (, out, ,, column, -, previousColumn, ), ;, previousColumn, =, column, ;, if, (, m, !=, null, )]
[,, column, -, previousColumn, ), ;, previousColumn, =, column, ;, if, (, m, !=, null, ), {, int, sourceId, =]
[), ;, previousColumn, =, column, ;, if, (, m, !=, null, ), {, int, sourceId, =, getSourceId, (, m, .]
[-, previousColumn, ), ;, previousColumn, =, column, ;, if, (, m, !=, null, ), {, int, sourceId, =, getSourceId, (]
[), ;, previousColumn, =, column, ;, if, (, m, !=, null, ), {, int, sourceId, =, getSourceId, (, m, .]
[=, column, ;, if, (, m, !=, null, ), {, int, sourceId, =, getSourceId, (, m, ., sourceFile, ), ;]
[;, if, (, m, !=, null, ), {, int, sourceId, =, getSourceId, (, m, ., sourceFile, ), ;, Base64VLQ, .]
[), {, int, sourceId, =, getSourceId, (, m, ., sourceFile, ), ;, Base64VLQ, ., encode, (, out, ,, sourceId, -]
[!=, null, ), {, int, sourceId, =, getSourceId, (, m, ., sourceFile, ), ;, Base64VLQ, ., encode, (, out, ,]
[), {, int, sourceId, =, getSourceId, (, m, ., sourceFile, ), ;, Base64VLQ, ., encode, (, out, ,, sourceId, -]
[;, Base64VLQ, ., encode, (, out, ,, sourceId, -, previousSourceFileId, ), ;, previousSourceFileId, =, sourceId, ;, int, srcline, =, m]
[), ;, Base64VLQ, ., encode, (, out, ,, sourceId, -, previousSourceFileId, ), ;, previousSourceFileId, =, sourceId, ;, int, srcline, =]
[., sourceFile, ), ;, Base64VLQ, ., encode, (, out, ,, sourceId, -, previousSourceFileId, ), ;, previousSourceFileId, =, sourceId, ;, int]
[;, previousSourceFileId, =, sourceId, ;, int, srcline, =, m, ., originalPosition, ., getLine, (, ), ;, int, srcColumn, =, m]
[., encode, (, out, ,, sourceId, -, previousSourceFileId, ), ;, previousSourceFileId, =, sourceId, ;, int, srcline, =, m, ., originalPosition]
[,, sourceId, -, previousSourceFileId, ), ;, previousSourceFileId, =, sourceId, ;, int, srcline, =, m, ., originalPosition, ., getLine, (, )]
[), ;, previousSourceFileId, =, sourceId, ;, int, srcline, =, m, ., originalPosition, ., getLine, (, ), ;, int, srcColumn, =]
[-, previousSourceFileId, ), ;, previousSourceFileId, =, sourceId, ;, int, srcline, =, m, ., originalPosition, ., getLine, (, ), ;, int]
[), ;, previousSourceFileId, =, sourceId, ;, int, srcline, =, m, ., originalPosition, ., getLine, (, ), ;, int, srcColumn, =]
[=, sourceId, ;, int, srcline, =, m, ., originalPosition, ., getLine, (, ), ;, int, srcColumn, =, m, ., originalPosition]
[;, int, srcline, =, m, ., originalPosition, ., getLine, (, ), ;, int, srcColumn, =, m, ., originalPosition, ., getColumn]
[;, int, srcColumn, =, m, ., originalPosition, ., getColumn, (, ), ;, Base64VLQ, ., encode, (, out, ,, srcline, -]
[., getLine, (, ), ;, int, srcColumn, =, m, ., originalPosition, ., getColumn, (, ), ;, Base64VLQ, ., encode, (]
[., originalPosition, ., getLine, (, ), ;, int, srcColumn, =, m, ., originalPosition, ., getColumn, (, ), ;, Base64VLQ, .]
[;, Base64VLQ, ., encode, (, out, ,, srcline, -, previousSourceLine, ), ;, previousSourceLine, =, srcline, ;, Base64VLQ, ., encode, (]
[., getColumn, (, ), ;, Base64VLQ, ., encode, (, out, ,, srcline, -, previousSourceLine, ), ;, previousSourceLine, =, srcline, ;]
[., originalPosition, ., getColumn, (, ), ;, Base64VLQ, ., encode, (, out, ,, srcline, -, previousSourceLine, ), ;, previousSourceLine, =]
[;, previousSourceLine, =, srcline, ;, Base64VLQ, ., encode, (, out, ,, srcColumn, -, previousSourceColumn, ), ;, previousSourceColumn, =, srcColumn, ;]
[., encode, (, out, ,, srcline, -, previousSourceLine, ), ;, previousSourceLine, =, srcline, ;, Base64VLQ, ., encode, (, out, ,]
[,, srcline, -, previousSourceLine, ), ;, previousSourceLine, =, srcline, ;, Base64VLQ, ., encode, (, out, ,, srcColumn, -, previousSourceColumn, )]
[), ;, previousSourceLine, =, srcline, ;, Base64VLQ, ., encode, (, out, ,, srcColumn, -, previousSourceColumn, ), ;, previousSourceColumn, =, srcColumn]
[-, previousSourceLine, ), ;, previousSourceLine, =, srcline, ;, Base64VLQ, ., encode, (, out, ,, srcColumn, -, previousSourceColumn, ), ;, previousSourceColumn]
[), ;, previousSourceLine, =, srcline, ;, Base64VLQ, ., encode, (, out, ,, srcColumn, -, previousSourceColumn, ), ;, previousSourceColumn, =, srcColumn]
[=, srcline, ;, Base64VLQ, ., encode, (, out, ,, srcColumn, -, previousSourceColumn, ), ;, previousSourceColumn, =, srcColumn, ;, if, (]
[;, Base64VLQ, ., encode, (, out, ,, srcColumn, -, previousSourceColumn, ), ;, previousSourceColumn, =, srcColumn, ;, if, (, m, .]
[;, previousSourceColumn, =, srcColumn, ;, if, (, m, ., originalName, !=, null, ), {, int, nameId, =, getNameId, (, m]
[., encode, (, out, ,, srcColumn, -, previousSourceColumn, ), ;, previousSourceColumn, =, srcColumn, ;, if, (, m, ., originalName, !=]
[,, srcColumn, -, previousSourceColumn, ), ;, previousSourceColumn, =, srcColumn, ;, if, (, m, ., originalName, !=, null, ), {, int]
[), ;, previousSourceColumn, =, srcColumn, ;, if, (, m, ., originalName, !=, null, ), {, int, nameId, =, getNameId, (]
[-, previousSourceColumn, ), ;, previousSourceColumn, =, srcColumn, ;, if, (, m, ., originalName, !=, null, ), {, int, nameId, =]
[), ;, previousSourceColumn, =, srcColumn, ;, if, (, m, ., originalName, !=, null, ), {, int, nameId, =, getNameId, (]
[=, srcColumn, ;, if, (, m, ., originalName, !=, null, ), {, int, nameId, =, getNameId, (, m, ., originalName]
[;, if, (, m, ., originalName, !=, null, ), {, int, nameId, =, getNameId, (, m, ., originalName, ), ;]
[), {, int, nameId, =, getNameId, (, m, ., originalName, ), ;, Base64VLQ, ., encode, (, out, ,, (, nameId]
[!=, null, ), {, int, nameId, =, getNameId, (, m, ., originalName, ), ;, Base64VLQ, ., encode, (, out, ,]
[., originalName, !=, null, ), {, int, nameId, =, getNameId, (, m, ., originalName, ), ;, Base64VLQ, ., encode, (]
[), {, int, nameId, =, getNameId, (, m, ., originalName, ), ;, Base64VLQ, ., encode, (, out, ,, (, nameId]
[;, Base64VLQ, ., encode, (, out, ,, (, nameId, -, previousNameId, ), ), ;, previousNameId, =, nameId, ;, }, }]
[), ;, Base64VLQ, ., encode, (, out, ,, (, nameId, -, previousNameId, ), ), ;, previousNameId, =, nameId, ;, }]
[., originalName, ), ;, Base64VLQ, ., encode, (, out, ,, (, nameId, -, previousNameId, ), ), ;, previousNameId, =, nameId]
[;, previousNameId, =, nameId, ;, }, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, true, ), ;]
[., encode, (, out, ,, (, nameId, -, previousNameId, ), ), ;, previousNameId, =, nameId, ;, }, }, }, void]
[,, (, nameId, -, previousNameId, ), ), ;, previousNameId, =, nameId, ;, }, }, }, void, appendLineMappings, (, ), throws]
[), ;, previousNameId, =, nameId, ;, }, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, true, )]
[), ), ;, previousNameId, =, nameId, ;, }, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, true]
[-, previousNameId, ), ), ;, previousNameId, =, nameId, ;, }, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine]
[), ), ;, previousNameId, =, nameId, ;, }, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, true]
[=, nameId, ;, }, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, true, ), ;, (, new]
[;, }, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, true, ), ;, (, new, MappingTraversal, (]
[;, (, new, MappingTraversal, (, ), ), ., traverse, (, this, ), ;, closeLine, (, true, ), ;, }, private]
[), ;, (, new, MappingTraversal, (, ), ), ., traverse, (, this, ), ;, closeLine, (, true, ), ;, }]
[;, closeLine, (, true, ), ;, }, private, void, openLine, (, boolean, firstEntry, ), throws, IOException, {, if, (, firstEntry]
[., traverse, (, this, ), ;, closeLine, (, true, ), ;, }, private, void, openLine, (, boolean, firstEntry, ), throws]
[), ., traverse, (, this, ), ;, closeLine, (, true, ), ;, }, private, void, openLine, (, boolean, firstEntry, )]
[), ;, closeLine, (, true, ), ;, }, private, void, openLine, (, boolean, firstEntry, ), throws, IOException, {, if, (]
[;, }, private, void, openLine, (, boolean, firstEntry, ), throws, IOException, {, if, (, firstEntry, ), {, out, ., append]
[), ;, }, private, void, openLine, (, boolean, firstEntry, ), throws, IOException, {, if, (, firstEntry, ), {, out, .]
[), {, out, ., append, (, '\"', ), ;, }, }, private, void, closeLine, (, boolean, finalEntry, ), throws, IOException]
[;, }, }, private, void, closeLine, (, boolean, finalEntry, ), throws, IOException, {, out, ., append, (, ';', ), ;]
[., append, (, '\"', ), ;, }, }, private, void, closeLine, (, boolean, finalEntry, ), throws, IOException, {, out, .]
[), ;, }, }, private, void, closeLine, (, boolean, finalEntry, ), throws, IOException, {, out, ., append, (, ';', )]
[;, if, (, finalEntry, ), {, out, ., append, (, '\"', ), ;, }, }, }, }]
[., append, (, ';', ), ;, if, (, finalEntry, ), {, out, ., append, (, '\"', ), ;, }, }]
[), ;, if, (, finalEntry, ), {, out, ., append, (, '\"', ), ;, }, }, }, }]
[), {, out, ., append, (, '\"', ), ;, }, }, }, }]
[;, }, }, }, }]
[., append, (, '\"', ), ;, }, }, }, }]
[), ;, }, }, }, }]
