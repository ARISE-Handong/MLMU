[google, ., javascript, ., rhino, ., Node, ;, final, class, ArrowType, extends, JSType, {, private, static, final, long, serialVersionUID, =]
[returnType, ;, final, boolean, returnTypeInferred, ;, ArrowType, (, JSTypeRegistry, registry, ,, Node, parameters, ,, JSType, returnType, ), {, this, (]
[final, boolean, returnTypeInferred, ;, ArrowType, (, JSTypeRegistry, registry, ,, Node, parameters, ,, JSType, returnType, ), {, this, (, registry, ,]
[returnTypeInferred, ;, ArrowType, (, JSTypeRegistry, registry, ,, Node, parameters, ,, JSType, returnType, ), {, this, (, registry, ,, parameters, ,]
[ArrowType, (, JSTypeRegistry, registry, ,, Node, parameters, ,, JSType, returnType, ), {, this, (, registry, ,, parameters, ,, returnType, ,]
[), ;, }, ArrowType, (, JSTypeRegistry, registry, ,, Node, parameters, ,, JSType, returnType, ,, boolean, returnTypeInferred, ), {, super, (]
[ArrowType, (, JSTypeRegistry, registry, ,, Node, parameters, ,, JSType, returnType, ,, boolean, returnTypeInferred, ), {, super, (, registry, ), ;]
[ArrowType, (, JSTypeRegistry, registry, ,, Node, parameters, ,, JSType, returnType, ,, boolean, returnTypeInferred, ), {, super, (, registry, ), ;]
[,, Node, parameters, ,, JSType, returnType, ,, boolean, returnTypeInferred, ), {, super, (, registry, ), ;, this, ., parameters, =]
[,, Node, parameters, ,, JSType, returnType, ,, boolean, returnTypeInferred, ), {, super, (, registry, ), ;, this, ., parameters, =]
[,, Node, parameters, ,, JSType, returnType, ,, boolean, returnTypeInferred, ), {, super, (, registry, ), ;, this, ., parameters, =]
[parameters, ,, JSType, returnType, ,, boolean, returnTypeInferred, ), {, super, (, registry, ), ;, this, ., parameters, =, parameters, ==]
[JSType, returnType, ,, boolean, returnTypeInferred, ), {, super, (, registry, ), ;, this, ., parameters, =, parameters, ==, null, ?]
[JSType, returnType, ,, boolean, returnTypeInferred, ), {, super, (, registry, ), ;, this, ., parameters, =, parameters, ==, null, ?]
[returnTypeInferred, ), {, super, (, registry, ), ;, this, ., parameters, =, parameters, ==, null, ?, registry, ., createParametersWithVarArgs, (]
[{, super, (, registry, ), ;, this, ., parameters, =, parameters, ==, null, ?, registry, ., createParametersWithVarArgs, (, getNativeType, (]
[), ;, this, ., parameters, =, parameters, ==, null, ?, registry, ., createParametersWithVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), :]
[this, ., parameters, =, parameters, ==, null, ?, registry, ., createParametersWithVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), :, parameters, ;]
[this, ., parameters, =, parameters, ==, null, ?, registry, ., createParametersWithVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), :, parameters, ;]
[parameters, ==, null, ?, registry, ., createParametersWithVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), :, parameters, ;, this, ., returnType, =]
[parameters, ==, null, ?, registry, ., createParametersWithVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), :, parameters, ;, this, ., returnType, =]
[parameters, ==, null, ?, registry, ., createParametersWithVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), :, parameters, ;, this, ., returnType, =]
[null, ?, registry, ., createParametersWithVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), :, parameters, ;, this, ., returnType, =, returnType, ==]
[registry, ., createParametersWithVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), :, parameters, ;, this, ., returnType, =, returnType, ==, null, ?]
[createParametersWithVarArgs, (, getNativeType, (, UNKNOWN_TYPE, ), ), :, parameters, ;, this, ., returnType, =, returnType, ==, null, ?, getNativeType, (]
[(, UNKNOWN_TYPE, ), ), :, parameters, ;, this, ., returnType, =, returnType, ==, null, ?, getNativeType, (, UNKNOWN_TYPE, ), :]
[), ), :, parameters, ;, this, ., returnType, =, returnType, ==, null, ?, getNativeType, (, UNKNOWN_TYPE, ), :, returnType, ;]
[), ), :, parameters, ;, this, ., returnType, =, returnType, ==, null, ?, getNativeType, (, UNKNOWN_TYPE, ), :, returnType, ;]
[;, this, ., returnType, =, returnType, ==, null, ?, getNativeType, (, UNKNOWN_TYPE, ), :, returnType, ;, this, ., returnTypeInferred, =]
[;, this, ., returnTypeInferred, =, returnTypeInferred, ;, }, @, Override, public, boolean, isSubtype, (, JSType, other, ), {, if, (]
[this, ., returnTypeInferred, =, returnTypeInferred, ;, }, @, Override, public, boolean, isSubtype, (, JSType, other, ), {, if, (, !]
[., returnTypeInferred, =, returnTypeInferred, ;, }, @, Override, public, boolean, isSubtype, (, JSType, other, ), {, if, (, !, (]
[., returnTypeInferred, =, returnTypeInferred, ;, }, @, Override, public, boolean, isSubtype, (, JSType, other, ), {, if, (, !, (]
[Override, public, boolean, isSubtype, (, JSType, other, ), {, if, (, !, (, other, instanceof, ArrowType, ), ), {, return]
[other, ), {, if, (, !, (, other, instanceof, ArrowType, ), ), {, return, false, ;, }, ArrowType, that, =]
[if, (, !, (, other, instanceof, ArrowType, ), ), {, return, false, ;, }, ArrowType, that, =, (, ArrowType, )]
[other, instanceof, ArrowType, ), ), {, return, false, ;, }, ArrowType, that, =, (, ArrowType, ), other, ;, if, (]
[instanceof, ArrowType, ), ), {, return, false, ;, }, ArrowType, that, =, (, ArrowType, ), other, ;, if, (, !]
[instanceof, ArrowType, ), ), {, return, false, ;, }, ArrowType, that, =, (, ArrowType, ), other, ;, if, (, !]
[instanceof, ArrowType, ), ), {, return, false, ;, }, ArrowType, that, =, (, ArrowType, ), other, ;, if, (, !]
[false, ;, }, ArrowType, that, =, (, ArrowType, ), other, ;, if, (, !, this, ., returnType, ., isSubtype, (]
[false, ;, }, ArrowType, that, =, (, ArrowType, ), other, ;, if, (, !, this, ., returnType, ., isSubtype, (]
[ArrowType, ), other, ;, if, (, !, this, ., returnType, ., isSubtype, (, that, ., returnType, ), ), {, return]
[!, this, ., returnType, ., isSubtype, (, that, ., returnType, ), ), {, return, false, ;, }, Node, thisParam, =]
[!, this, ., returnType, ., isSubtype, (, that, ., returnType, ), ), {, return, false, ;, }, Node, thisParam, =]
[returnType, ), ), {, return, false, ;, }, Node, thisParam, =, parameters, ., getFirstChild, (, ), ;, Node, thatParam, =]
[returnType, ), ), {, return, false, ;, }, Node, thisParam, =, parameters, ., getFirstChild, (, ), ;, Node, thatParam, =]
[returnType, ), ), {, return, false, ;, }, Node, thisParam, =, parameters, ., getFirstChild, (, ), ;, Node, thatParam, =]
[=, parameters, ., getFirstChild, (, ), ;, Node, thatParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (]
[=, parameters, ., getFirstChild, (, ), ;, Node, thatParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (]
[=, parameters, ., getFirstChild, (, ), ;, Node, thatParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (]
[., getFirstChild, (, ), ;, Node, thatParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (, thisParam, !=]
[(, ), ;, Node, thatParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (, thisParam, !=, null, &&]
[(, ), ;, Node, thatParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (, thisParam, !=, null, &&]
[;, Node, thatParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (, thisParam, !=, null, &&, thatParam, !=]
[parameters, ., getFirstChild, (, ), ;, while, (, thisParam, !=, null, &&, thatParam, !=, null, ), {, JSType, thisParamType, =]
[parameters, ., getFirstChild, (, ), ;, while, (, thisParam, !=, null, &&, thatParam, !=, null, ), {, JSType, thisParamType, =]
[!=, null, &&, thatParam, !=, null, ), {, JSType, thisParamType, =, thisParam, ., getJSType, (, ), ;, JSType, thatParamType, =]
[!=, null, &&, thatParam, !=, null, ), {, JSType, thisParamType, =, thisParam, ., getJSType, (, ), ;, JSType, thatParamType, =]
[JSType, thisParamType, =, thisParam, ., getJSType, (, ), ;, JSType, thatParamType, =, thatParam, ., getJSType, (, ), ;, if, (]
[JSType, thisParamType, =, thisParam, ., getJSType, (, ), ;, JSType, thatParamType, =, thatParam, ., getJSType, (, ), ;, if, (]
[=, thisParam, ., getJSType, (, ), ;, JSType, thatParamType, =, thatParam, ., getJSType, (, ), ;, if, (, thisParamType, !=]
[), ;, JSType, thatParamType, =, thatParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (]
[), ;, JSType, thatParamType, =, thatParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (]
[), ;, JSType, thatParamType, =, thatParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (]
[JSType, thatParamType, =, thatParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (, thatParamType, ==]
[=, thatParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (, thatParamType, ==, null, ||]
[thatParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (, thatParamType, ==, null, ||, !]
[thatParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (, thatParamType, ==, null, ||, !]
[), ;, if, (, thisParamType, !=, null, ), {, if, (, thatParamType, ==, null, ||, !, thatParamType, ., isSubtype, (]
[!=, null, ), {, if, (, thatParamType, ==, null, ||, !, thatParamType, ., isSubtype, (, thisParamType, ), ), {, return]
[==, null, ||, !, thatParamType, ., isSubtype, (, thisParamType, ), ), {, return, false, ;, }, }, boolean, thisIsVarArgs, =]
[==, null, ||, !, thatParamType, ., isSubtype, (, thisParamType, ), ), {, return, false, ;, }, }, boolean, thisIsVarArgs, =]
[), ), {, return, false, ;, }, }, boolean, thisIsVarArgs, =, thisParam, ., isVarArgs, (, ), ;, boolean, thatIsVarArgs, =]
[), ), {, return, false, ;, }, }, boolean, thisIsVarArgs, =, thisParam, ., isVarArgs, (, ), ;, boolean, thatIsVarArgs, =]
[thisIsVarArgs, =, thisParam, ., isVarArgs, (, ), ;, boolean, thatIsVarArgs, =, thatParam, ., isVarArgs, (, ), ;, boolean, thisIsOptional, =]
[thisIsVarArgs, =, thisParam, ., isVarArgs, (, ), ;, boolean, thatIsVarArgs, =, thatParam, ., isVarArgs, (, ), ;, boolean, thisIsOptional, =]
[thisParam, ., isVarArgs, (, ), ;, boolean, thatIsVarArgs, =, thatParam, ., isVarArgs, (, ), ;, boolean, thisIsOptional, =, thisIsVarArgs, ||]
[thisParam, ., isVarArgs, (, ), ;, boolean, thatIsVarArgs, =, thatParam, ., isVarArgs, (, ), ;, boolean, thisIsOptional, =, thisIsVarArgs, ||]
[thatParam, ., isVarArgs, (, ), ;, boolean, thisIsOptional, =, thisIsVarArgs, ||, thisParam, ., isOptionalArg, (, ), ;, boolean, thatIsOptional, =]
[thatParam, ., isVarArgs, (, ), ;, boolean, thisIsOptional, =, thisIsVarArgs, ||, thisParam, ., isOptionalArg, (, ), ;, boolean, thatIsOptional, =]
[isVarArgs, (, ), ;, boolean, thisIsOptional, =, thisIsVarArgs, ||, thisParam, ., isOptionalArg, (, ), ;, boolean, thatIsOptional, =, thatIsVarArgs, ||]
[isVarArgs, (, ), ;, boolean, thisIsOptional, =, thisIsVarArgs, ||, thisParam, ., isOptionalArg, (, ), ;, boolean, thatIsOptional, =, thatIsVarArgs, ||]
[||, thisParam, ., isOptionalArg, (, ), ;, boolean, thatIsOptional, =, thatIsVarArgs, ||, thatParam, ., isOptionalArg, (, ), ;, if, (]
[||, thisParam, ., isOptionalArg, (, ), ;, boolean, thatIsOptional, =, thatIsVarArgs, ||, thatParam, ., isOptionalArg, (, ), ;, if, (]
[thisParam, ., isOptionalArg, (, ), ;, boolean, thatIsOptional, =, thatIsVarArgs, ||, thatParam, ., isOptionalArg, (, ), ;, if, (, !]
[isOptionalArg, (, ), ;, boolean, thatIsOptional, =, thatIsVarArgs, ||, thatParam, ., isOptionalArg, (, ), ;, if, (, !, thisIsOptional, &&]
[=, thatIsVarArgs, ||, thatParam, ., isOptionalArg, (, ), ;, if, (, !, thisIsOptional, &&, thatIsOptional, ), {, boolean, isTopFunction, =]
[=, thatIsVarArgs, ||, thatParam, ., isOptionalArg, (, ), ;, if, (, !, thisIsOptional, &&, thatIsOptional, ), {, boolean, isTopFunction, =]
[||, thatParam, ., isOptionalArg, (, ), ;, if, (, !, thisIsOptional, &&, thatIsOptional, ), {, boolean, isTopFunction, =, thatIsVarArgs, &&]
[thatParam, ., isOptionalArg, (, ), ;, if, (, !, thisIsOptional, &&, thatIsOptional, ), {, boolean, isTopFunction, =, thatIsVarArgs, &&, (]
[thatParam, ., isOptionalArg, (, ), ;, if, (, !, thisIsOptional, &&, thatIsOptional, ), {, boolean, isTopFunction, =, thatIsVarArgs, &&, (]
[thatParam, ., isOptionalArg, (, ), ;, if, (, !, thisIsOptional, &&, thatIsOptional, ), {, boolean, isTopFunction, =, thatIsVarArgs, &&, (]
[thatParam, ., isOptionalArg, (, ), ;, if, (, !, thisIsOptional, &&, thatIsOptional, ), {, boolean, isTopFunction, =, thatIsVarArgs, &&, (]
[isOptionalArg, (, ), ;, if, (, !, thisIsOptional, &&, thatIsOptional, ), {, boolean, isTopFunction, =, thatIsVarArgs, &&, (, thatParamType, ==]
[), ;, if, (, !, thisIsOptional, &&, thatIsOptional, ), {, boolean, isTopFunction, =, thatIsVarArgs, &&, (, thatParamType, ==, null, ||]
[), ;, if, (, !, thisIsOptional, &&, thatIsOptional, ), {, boolean, isTopFunction, =, thatIsVarArgs, &&, (, thatParamType, ==, null, ||]
[&&, thatIsOptional, ), {, boolean, isTopFunction, =, thatIsVarArgs, &&, (, thatParamType, ==, null, ||, thatParamType, ., isUnknownType, (, ), ||]
[&&, thatIsOptional, ), {, boolean, isTopFunction, =, thatIsVarArgs, &&, (, thatParamType, ==, null, ||, thatParamType, ., isUnknownType, (, ), ||]
[(, thatParamType, ==, null, ||, thatParamType, ., isUnknownType, (, ), ||, thatParamType, ., isNoType, (, ), ), ;, if, (]
[thatParamType, ==, null, ||, thatParamType, ., isUnknownType, (, ), ||, thatParamType, ., isNoType, (, ), ), ;, if, (, !]
[thatParamType, ., isUnknownType, (, ), ||, thatParamType, ., isNoType, (, ), ), ;, if, (, !, isTopFunction, ), {, return]
[thatParamType, ., isNoType, (, ), ), ;, if, (, !, isTopFunction, ), {, return, false, ;, }, }, if, (]
[., isNoType, (, ), ), ;, if, (, !, isTopFunction, ), {, return, false, ;, }, }, if, (, !]
[), ), ;, if, (, !, isTopFunction, ), {, return, false, ;, }, }, if, (, !, thisIsVarArgs, ), {]
[;, if, (, !, isTopFunction, ), {, return, false, ;, }, }, if, (, !, thisIsVarArgs, ), {, thisParam, =]
[;, if, (, !, isTopFunction, ), {, return, false, ;, }, }, if, (, !, thisIsVarArgs, ), {, thisParam, =]
[;, }, }, if, (, !, thisIsVarArgs, ), {, thisParam, =, thisParam, ., getNext, (, ), ;, }, if, (]
[}, }, if, (, !, thisIsVarArgs, ), {, thisParam, =, thisParam, ., getNext, (, ), ;, }, if, (, !]
[(, !, thisIsVarArgs, ), {, thisParam, =, thisParam, ., getNext, (, ), ;, }, if, (, !, thatIsVarArgs, ), {]
[thisIsVarArgs, ), {, thisParam, =, thisParam, ., getNext, (, ), ;, }, if, (, !, thatIsVarArgs, ), {, thatParam, =]
[thisIsVarArgs, ), {, thisParam, =, thisParam, ., getNext, (, ), ;, }, if, (, !, thatIsVarArgs, ), {, thatParam, =]
[), ;, }, if, (, !, thatIsVarArgs, ), {, thatParam, =, thatParam, ., getNext, (, ), ;, }, if, (]
[), ;, }, if, (, !, thatIsVarArgs, ), {, thatParam, =, thatParam, ., getNext, (, ), ;, }, if, (]
[}, if, (, !, thatIsVarArgs, ), {, thatParam, =, thatParam, ., getNext, (, ), ;, }, if, (, thisIsVarArgs, &&]
[!, thatIsVarArgs, ), {, thatParam, =, thatParam, ., getNext, (, ), ;, }, if, (, thisIsVarArgs, &&, thatIsVarArgs, ), {]
[), {, thatParam, =, thatParam, ., getNext, (, ), ;, }, if, (, thisIsVarArgs, &&, thatIsVarArgs, ), {, thisParam, =]
[thatParam, =, thatParam, ., getNext, (, ), ;, }, if, (, thisIsVarArgs, &&, thatIsVarArgs, ), {, thisParam, =, null, ;]
[thatParam, ., getNext, (, ), ;, }, if, (, thisIsVarArgs, &&, thatIsVarArgs, ), {, thisParam, =, null, ;, thatParam, =]
[}, if, (, thisIsVarArgs, &&, thatIsVarArgs, ), {, thisParam, =, null, ;, thatParam, =, null, ;, }, }, if, (]
[}, if, (, thisIsVarArgs, &&, thatIsVarArgs, ), {, thisParam, =, null, ;, thatParam, =, null, ;, }, }, if, (]
[}, if, (, thisIsVarArgs, &&, thatIsVarArgs, ), {, thisParam, =, null, ;, thatParam, =, null, ;, }, }, if, (]
[}, if, (, thisIsVarArgs, &&, thatIsVarArgs, ), {, thisParam, =, null, ;, thatParam, =, null, ;, }, }, if, (]
[}, if, (, thisIsVarArgs, &&, thatIsVarArgs, ), {, thisParam, =, null, ;, thatParam, =, null, ;, }, }, if, (]
[(, thisIsVarArgs, &&, thatIsVarArgs, ), {, thisParam, =, null, ;, thatParam, =, null, ;, }, }, if, (, thisParam, !=]
[&&, thatIsVarArgs, ), {, thisParam, =, null, ;, thatParam, =, null, ;, }, }, if, (, thisParam, !=, null, &&]
[thatIsVarArgs, ), {, thisParam, =, null, ;, thatParam, =, null, ;, }, }, if, (, thisParam, !=, null, &&, !]
[thatIsVarArgs, ), {, thisParam, =, null, ;, thatParam, =, null, ;, }, }, if, (, thisParam, !=, null, &&, !]
[;, thatParam, =, null, ;, }, }, if, (, thisParam, !=, null, &&, !, thisParam, ., isOptionalArg, (, ), &&]
[thatParam, =, null, ;, }, }, if, (, thisParam, !=, null, &&, !, thisParam, ., isOptionalArg, (, ), &&, !]
[thatParam, =, null, ;, }, }, if, (, thisParam, !=, null, &&, !, thisParam, ., isOptionalArg, (, ), &&, !]
[if, (, thisParam, !=, null, &&, !, thisParam, ., isOptionalArg, (, ), &&, !, thisParam, ., isVarArgs, (, ), &&]
[if, (, thisParam, !=, null, &&, !, thisParam, ., isOptionalArg, (, ), &&, !, thisParam, ., isVarArgs, (, ), &&]
[thisParam, !=, null, &&, !, thisParam, ., isOptionalArg, (, ), &&, !, thisParam, ., isVarArgs, (, ), &&, thatParam, ==]
[!, thisParam, ., isOptionalArg, (, ), &&, !, thisParam, ., isVarArgs, (, ), &&, thatParam, ==, null, ), {, return]
[(, ), &&, !, thisParam, ., isVarArgs, (, ), &&, thatParam, ==, null, ), {, return, false, ;, }, return]
[false, ;, }, return, true, ;, }, boolean, hasEqualParameters, (, ArrowType, that, ,, EquivalenceMethod, eqMethod, ), {, Node, thisParam, =]
[false, ;, }, return, true, ;, }, boolean, hasEqualParameters, (, ArrowType, that, ,, EquivalenceMethod, eqMethod, ), {, Node, thisParam, =]
[(, ArrowType, that, ,, EquivalenceMethod, eqMethod, ), {, Node, thisParam, =, parameters, ., getFirstChild, (, ), ;, Node, otherParam, =]
[(, ArrowType, that, ,, EquivalenceMethod, eqMethod, ), {, Node, thisParam, =, parameters, ., getFirstChild, (, ), ;, Node, otherParam, =]
[(, ArrowType, that, ,, EquivalenceMethod, eqMethod, ), {, Node, thisParam, =, parameters, ., getFirstChild, (, ), ;, Node, otherParam, =]
[=, parameters, ., getFirstChild, (, ), ;, Node, otherParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (]
[=, parameters, ., getFirstChild, (, ), ;, Node, otherParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (]
[=, parameters, ., getFirstChild, (, ), ;, Node, otherParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (]
[., getFirstChild, (, ), ;, Node, otherParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (, thisParam, !=]
[(, ), ;, Node, otherParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (, thisParam, !=, null, &&]
[(, ), ;, Node, otherParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (, thisParam, !=, null, &&]
[;, Node, otherParam, =, that, ., parameters, ., getFirstChild, (, ), ;, while, (, thisParam, !=, null, &&, otherParam, !=]
[parameters, ., getFirstChild, (, ), ;, while, (, thisParam, !=, null, &&, otherParam, !=, null, ), {, JSType, thisParamType, =]
[parameters, ., getFirstChild, (, ), ;, while, (, thisParam, !=, null, &&, otherParam, !=, null, ), {, JSType, thisParamType, =]
[!=, null, &&, otherParam, !=, null, ), {, JSType, thisParamType, =, thisParam, ., getJSType, (, ), ;, JSType, otherParamType, =]
[!=, null, &&, otherParam, !=, null, ), {, JSType, thisParamType, =, thisParam, ., getJSType, (, ), ;, JSType, otherParamType, =]
[JSType, thisParamType, =, thisParam, ., getJSType, (, ), ;, JSType, otherParamType, =, otherParam, ., getJSType, (, ), ;, if, (]
[JSType, thisParamType, =, thisParam, ., getJSType, (, ), ;, JSType, otherParamType, =, otherParam, ., getJSType, (, ), ;, if, (]
[=, thisParam, ., getJSType, (, ), ;, JSType, otherParamType, =, otherParam, ., getJSType, (, ), ;, if, (, thisParamType, !=]
[), ;, JSType, otherParamType, =, otherParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (]
[), ;, JSType, otherParamType, =, otherParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (]
[), ;, JSType, otherParamType, =, otherParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (]
[JSType, otherParamType, =, otherParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (, otherParamType, !=]
[=, otherParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (, otherParamType, !=, null, &&]
[otherParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (, otherParamType, !=, null, &&, !]
[otherParam, ., getJSType, (, ), ;, if, (, thisParamType, !=, null, ), {, if, (, otherParamType, !=, null, &&, !]
[), ;, if, (, thisParamType, !=, null, ), {, if, (, otherParamType, !=, null, &&, !, thisParamType, ., checkEquivalenceHelper, (]
[if, (, thisParamType, !=, null, ), {, if, (, otherParamType, !=, null, &&, !, thisParamType, ., checkEquivalenceHelper, (, otherParamType, ,]
[), {, if, (, otherParamType, !=, null, &&, !, thisParamType, ., checkEquivalenceHelper, (, otherParamType, ,, eqMethod, ), ), {, return]
[!, thisParamType, ., checkEquivalenceHelper, (, otherParamType, ,, eqMethod, ), ), {, return, false, ;, }, }, else, {, if, (]
[!, thisParamType, ., checkEquivalenceHelper, (, otherParamType, ,, eqMethod, ), ), {, return, false, ;, }, }, else, {, if, (]
[., checkEquivalenceHelper, (, otherParamType, ,, eqMethod, ), ), {, return, false, ;, }, }, else, {, if, (, otherParamType, !=]
[,, eqMethod, ), ), {, return, false, ;, }, }, else, {, if, (, otherParamType, !=, null, ), {, return]
[false, ;, }, }, else, {, if, (, otherParamType, !=, null, ), {, return, false, ;, }, }, if, (]
[false, ;, }, }, else, {, if, (, otherParamType, !=, null, ), {, return, false, ;, }, }, if, (]
[false, ;, }, }, else, {, if, (, otherParamType, !=, null, ), {, return, false, ;, }, }, if, (]
[if, (, otherParamType, !=, null, ), {, return, false, ;, }, }, if, (, thisParam, ., isOptionalArg, (, ), !=]
[if, (, otherParamType, !=, null, ), {, return, false, ;, }, }, if, (, thisParam, ., isOptionalArg, (, ), !=]
[false, ;, }, }, if, (, thisParam, ., isOptionalArg, (, ), !=, otherParam, ., isOptionalArg, (, ), ), {, return]
[(, thisParam, ., isOptionalArg, (, ), !=, otherParam, ., isOptionalArg, (, ), ), {, return, false, ;, }, if, (]
[(, thisParam, ., isOptionalArg, (, ), !=, otherParam, ., isOptionalArg, (, ), ), {, return, false, ;, }, if, (]
[(, thisParam, ., isOptionalArg, (, ), !=, otherParam, ., isOptionalArg, (, ), ), {, return, false, ;, }, if, (]
[!=, otherParam, ., isOptionalArg, (, ), ), {, return, false, ;, }, if, (, thisParam, ., isVarArgs, (, ), !=]
[!=, otherParam, ., isOptionalArg, (, ), ), {, return, false, ;, }, if, (, thisParam, ., isVarArgs, (, ), !=]
[return, false, ;, }, if, (, thisParam, ., isVarArgs, (, ), !=, otherParam, ., isVarArgs, (, ), ), {, return]
[}, if, (, thisParam, ., isVarArgs, (, ), !=, otherParam, ., isVarArgs, (, ), ), {, return, false, ;, }]
[(, thisParam, ., isVarArgs, (, ), !=, otherParam, ., isVarArgs, (, ), ), {, return, false, ;, }, thisParam, =]
[(, thisParam, ., isVarArgs, (, ), !=, otherParam, ., isVarArgs, (, ), ), {, return, false, ;, }, thisParam, =]
[!=, otherParam, ., isVarArgs, (, ), ), {, return, false, ;, }, thisParam, =, thisParam, ., getNext, (, ), ;]
[., isVarArgs, (, ), ), {, return, false, ;, }, thisParam, =, thisParam, ., getNext, (, ), ;, otherParam, =]
[., isVarArgs, (, ), ), {, return, false, ;, }, thisParam, =, thisParam, ., getNext, (, ), ;, otherParam, =]
[;, }, thisParam, =, thisParam, ., getNext, (, ), ;, otherParam, =, otherParam, ., getNext, (, ), ;, }, return]
[;, }, thisParam, =, thisParam, ., getNext, (, ), ;, otherParam, =, otherParam, ., getNext, (, ), ;, }, return]
[thisParam, =, thisParam, ., getNext, (, ), ;, otherParam, =, otherParam, ., getNext, (, ), ;, }, return, thisParam, ==]
[;, }, return, thisParam, ==, otherParam, ;, }, boolean, checkArrowEquivalenceHelper, (, ArrowType, that, ,, EquivalenceMethod, eqMethod, ), {, if, (]
[}, return, thisParam, ==, otherParam, ;, }, boolean, checkArrowEquivalenceHelper, (, ArrowType, that, ,, EquivalenceMethod, eqMethod, ), {, if, (, !]
[}, return, thisParam, ==, otherParam, ;, }, boolean, checkArrowEquivalenceHelper, (, ArrowType, that, ,, EquivalenceMethod, eqMethod, ), {, if, (, !]
[otherParam, ;, }, boolean, checkArrowEquivalenceHelper, (, ArrowType, that, ,, EquivalenceMethod, eqMethod, ), {, if, (, !, returnType, ., checkEquivalenceHelper, (]
[otherParam, ;, }, boolean, checkArrowEquivalenceHelper, (, ArrowType, that, ,, EquivalenceMethod, eqMethod, ), {, if, (, !, returnType, ., checkEquivalenceHelper, (]
[checkArrowEquivalenceHelper, (, ArrowType, that, ,, EquivalenceMethod, eqMethod, ), {, if, (, !, returnType, ., checkEquivalenceHelper, (, that, ., returnType, ,]
[EquivalenceMethod, eqMethod, ), {, if, (, !, returnType, ., checkEquivalenceHelper, (, that, ., returnType, ,, eqMethod, ), ), {, return]
[if, (, !, returnType, ., checkEquivalenceHelper, (, that, ., returnType, ,, eqMethod, ), ), {, return, false, ;, }, return]
[!, returnType, ., checkEquivalenceHelper, (, that, ., returnType, ,, eqMethod, ), ), {, return, false, ;, }, return, hasEqualParameters, (]
[., checkEquivalenceHelper, (, that, ., returnType, ,, eqMethod, ), ), {, return, false, ;, }, return, hasEqualParameters, (, that, ,]
[return, hasEqualParameters, (, that, ,, eqMethod, ), ;, }, @, Override, public, int, hashCode, (, ), {, int, hashCode, =]
[,, eqMethod, ), ;, }, @, Override, public, int, hashCode, (, ), {, int, hashCode, =, 0, ;, if, (]
[,, eqMethod, ), ;, }, @, Override, public, int, hashCode, (, ), {, int, hashCode, =, 0, ;, if, (]
[), ;, }, @, Override, public, int, hashCode, (, ), {, int, hashCode, =, 0, ;, if, (, returnType, !=]
[@, Override, public, int, hashCode, (, ), {, int, hashCode, =, 0, ;, if, (, returnType, !=, null, ), {]
[public, int, hashCode, (, ), {, int, hashCode, =, 0, ;, if, (, returnType, !=, null, ), {, hashCode, +=]
[public, int, hashCode, (, ), {, int, hashCode, =, 0, ;, if, (, returnType, !=, null, ), {, hashCode, +=]
[0, ;, if, (, returnType, !=, null, ), {, hashCode, +=, returnType, ., hashCode, (, ), ;, }, if, (]
[(, returnType, !=, null, ), {, hashCode, +=, returnType, ., hashCode, (, ), ;, }, if, (, returnTypeInferred, ), {]
[!=, null, ), {, hashCode, +=, returnType, ., hashCode, (, ), ;, }, if, (, returnTypeInferred, ), {, hashCode, +=]
[+=, returnType, ., hashCode, (, ), ;, }, if, (, returnTypeInferred, ), {, hashCode, +=, 1, ;, }, if, (]
[+=, returnType, ., hashCode, (, ), ;, }, if, (, returnTypeInferred, ), {, hashCode, +=, 1, ;, }, if, (]
[., hashCode, (, ), ;, }, if, (, returnTypeInferred, ), {, hashCode, +=, 1, ;, }, if, (, parameters, !=]
[if, (, returnTypeInferred, ), {, hashCode, +=, 1, ;, }, if, (, parameters, !=, null, ), {, Node, param, =]
[if, (, returnTypeInferred, ), {, hashCode, +=, 1, ;, }, if, (, parameters, !=, null, ), {, Node, param, =]
[;, }, if, (, parameters, !=, null, ), {, Node, param, =, parameters, ., getFirstChild, (, ), ;, while, (]
[;, }, if, (, parameters, !=, null, ), {, Node, param, =, parameters, ., getFirstChild, (, ), ;, while, (]
[if, (, parameters, !=, null, ), {, Node, param, =, parameters, ., getFirstChild, (, ), ;, while, (, param, !=]
[{, Node, param, =, parameters, ., getFirstChild, (, ), ;, while, (, param, !=, null, ), {, JSType, paramType, =]
[{, Node, param, =, parameters, ., getFirstChild, (, ), ;, while, (, param, !=, null, ), {, JSType, paramType, =]
[), ;, while, (, param, !=, null, ), {, JSType, paramType, =, param, ., getJSType, (, ), ;, if, (]
[), ;, while, (, param, !=, null, ), {, JSType, paramType, =, param, ., getJSType, (, ), ;, if, (]
[while, (, param, !=, null, ), {, JSType, paramType, =, param, ., getJSType, (, ), ;, if, (, paramType, !=]
[!=, null, ), {, JSType, paramType, =, param, ., getJSType, (, ), ;, if, (, paramType, !=, null, ), {]
[), {, JSType, paramType, =, param, ., getJSType, (, ), ;, if, (, paramType, !=, null, ), {, hashCode, +=]
[), {, JSType, paramType, =, param, ., getJSType, (, ), ;, if, (, paramType, !=, null, ), {, hashCode, +=]
[getJSType, (, ), ;, if, (, paramType, !=, null, ), {, hashCode, +=, paramType, ., hashCode, (, ), ;, }]
[), ;, if, (, paramType, !=, null, ), {, hashCode, +=, paramType, ., hashCode, (, ), ;, }, param, =]
[), ;, if, (, paramType, !=, null, ), {, hashCode, +=, paramType, ., hashCode, (, ), ;, }, param, =]
[hashCode, +=, paramType, ., hashCode, (, ), ;, }, param, =, param, ., getNext, (, ), ;, }, }, return]
[(, ), ;, }, }, return, hashCode, ;, }, @, Override, public, JSType, getLeastSupertype, (, JSType, that, ), {, throw]
[), {, throw, new, UnsupportedOperationException, (, ), ;, }, @, Override, public, JSType, getGreatestSubtype, (, JSType, that, ), {, throw]
[), {, throw, new, UnsupportedOperationException, (, ), ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, throw]
[), ;, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, throw]
[}, @, Override, <, T, >, T, visit, (, RelationshipVisitor, <, T, >, visitor, ,, JSType, that, ), {, throw]
[JSType, that, ), {, throw, new, UnsupportedOperationException, (, ), ;, }, @, Override, public, BooleanLiteralSet, getPossibleToBooleanOutcomes, (, ), {, return]
[JSType, that, ), {, throw, new, UnsupportedOperationException, (, ), ;, }, @, Override, public, BooleanLiteralSet, getPossibleToBooleanOutcomes, (, ), {, return]
[BooleanLiteralSet, ., TRUE, ;, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {]
[TRUE, ;, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, returnType, =]
[}, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, returnType, =, safeResolve, (]
[Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, returnType, =, safeResolve, (, returnType, ,]
[resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, returnType, =, safeResolve, (, returnType, ,, t, ,]
[StaticScope, <, JSType, >, scope, ), {, returnType, =, safeResolve, (, returnType, ,, t, ,, scope, ), ;, if, (]
[StaticScope, <, JSType, >, scope, ), {, returnType, =, safeResolve, (, returnType, ,, t, ,, scope, ), ;, if, (]
[JSType, >, scope, ), {, returnType, =, safeResolve, (, returnType, ,, t, ,, scope, ), ;, if, (, parameters, !=]
[(, returnType, ,, t, ,, scope, ), ;, if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =]
[(, returnType, ,, t, ,, scope, ), ;, if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =]
[), ;, if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;]
[), ;, if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;]
[if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;, paramNode, !=]
[parameters, !=, null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;, paramNode, !=, null, ;]
[null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;, paramNode, !=, null, ;, paramNode, =]
[null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;, paramNode, !=, null, ;, paramNode, =]
[=, parameters, ., getFirstChild, (, ), ;, paramNode, !=, null, ;, paramNode, =, paramNode, ., getNext, (, ), ), {]
[=, parameters, ., getFirstChild, (, ), ;, paramNode, !=, null, ;, paramNode, =, paramNode, ., getNext, (, ), ), {]
[(, ), ;, paramNode, !=, null, ;, paramNode, =, paramNode, ., getNext, (, ), ), {, paramNode, ., setJSType, (]
[(, ), ;, paramNode, !=, null, ;, paramNode, =, paramNode, ., getNext, (, ), ), {, paramNode, ., setJSType, (]
[(, ), ;, paramNode, !=, null, ;, paramNode, =, paramNode, ., getNext, (, ), ), {, paramNode, ., setJSType, (]
[=, paramNode, ., getNext, (, ), ), {, paramNode, ., setJSType, (, paramNode, ., getJSType, (, ), ., resolve, (]
[., getNext, (, ), ), {, paramNode, ., setJSType, (, paramNode, ., getJSType, (, ), ., resolve, (, t, ,]
[., setJSType, (, paramNode, ., getJSType, (, ), ., resolve, (, t, ,, scope, ), ), ;, }, }, return]
[(, t, ,, scope, ), ), ;, }, }, return, this, ;, }, boolean, hasUnknownParamsOrReturn, (, ), {, if, (]
[(, t, ,, scope, ), ), ;, }, }, return, this, ;, }, boolean, hasUnknownParamsOrReturn, (, ), {, if, (]
[,, scope, ), ), ;, }, }, return, this, ;, }, boolean, hasUnknownParamsOrReturn, (, ), {, if, (, parameters, !=]
[this, ;, }, boolean, hasUnknownParamsOrReturn, (, ), {, if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =]
[this, ;, }, boolean, hasUnknownParamsOrReturn, (, ), {, if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =]
[), {, if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;]
[), {, if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;]
[if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;, paramNode, !=]
[parameters, !=, null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;, paramNode, !=, null, ;]
[null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;, paramNode, !=, null, ;, paramNode, =]
[null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;, paramNode, !=, null, ;, paramNode, =]
[getFirstChild, (, ), ;, paramNode, !=, null, ;, paramNode, =, paramNode, ., getNext, (, ), ), {, JSType, type, =]
[getFirstChild, (, ), ;, paramNode, !=, null, ;, paramNode, =, paramNode, ., getNext, (, ), ), {, JSType, type, =]
[paramNode, =, paramNode, ., getNext, (, ), ), {, JSType, type, =, paramNode, ., getJSType, (, ), ;, if, (]
[paramNode, =, paramNode, ., getNext, (, ), ), {, JSType, type, =, paramNode, ., getJSType, (, ), ;, if, (]
[paramNode, =, paramNode, ., getNext, (, ), ), {, JSType, type, =, paramNode, ., getJSType, (, ), ;, if, (]
[paramNode, ., getNext, (, ), ), {, JSType, type, =, paramNode, ., getJSType, (, ), ;, if, (, type, ==]
[getNext, (, ), ), {, JSType, type, =, paramNode, ., getJSType, (, ), ;, if, (, type, ==, null, ||]
[getNext, (, ), ), {, JSType, type, =, paramNode, ., getJSType, (, ), ;, if, (, type, ==, null, ||]
[paramNode, ., getJSType, (, ), ;, if, (, type, ==, null, ||, type, ., isUnknownType, (, ), ), {, return]
[if, (, type, ==, null, ||, type, ., isUnknownType, (, ), ), {, return, true, ;, }, }, }, return]
[if, (, type, ==, null, ||, type, ., isUnknownType, (, ), ), {, return, true, ;, }, }, }, return]
[if, (, type, ==, null, ||, type, ., isUnknownType, (, ), ), {, return, true, ;, }, }, }, return]
[type, ==, null, ||, type, ., isUnknownType, (, ), ), {, return, true, ;, }, }, }, return, returnType, ==]
[null, ||, type, ., isUnknownType, (, ), ), {, return, true, ;, }, }, }, return, returnType, ==, null, ||]
[null, ||, type, ., isUnknownType, (, ), ), {, return, true, ;, }, }, }, return, returnType, ==, null, ||]
[==, null, ||, returnType, ., isUnknownType, (, ), ;, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return]
[String, toStringHelper, (, boolean, forAnnotations, ), {, return, "[ArrowType]", ;, }, @, Override, public, boolean, hasAnyTemplateTypesInternal, (, ), {, return]
[String, toStringHelper, (, boolean, forAnnotations, ), {, return, "[ArrowType]", ;, }, @, Override, public, boolean, hasAnyTemplateTypesInternal, (, ), {, return]
[String, toStringHelper, (, boolean, forAnnotations, ), {, return, "[ArrowType]", ;, }, @, Override, public, boolean, hasAnyTemplateTypesInternal, (, ), {, return]
[{, return, "[ArrowType]", ;, }, @, Override, public, boolean, hasAnyTemplateTypesInternal, (, ), {, return, returnType, ., hasAnyTemplateTypes, (, ), ||]
[return, returnType, ., hasAnyTemplateTypes, (, ), ||, hasTemplatedParameterType, (, ), ;, }, private, boolean, hasTemplatedParameterType, (, ), {, if, (]
[return, returnType, ., hasAnyTemplateTypes, (, ), ||, hasTemplatedParameterType, (, ), ;, }, private, boolean, hasTemplatedParameterType, (, ), {, if, (]
[., hasAnyTemplateTypes, (, ), ||, hasTemplatedParameterType, (, ), ;, }, private, boolean, hasTemplatedParameterType, (, ), {, if, (, parameters, !=]
[;, }, private, boolean, hasTemplatedParameterType, (, ), {, if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =]
[;, }, private, boolean, hasTemplatedParameterType, (, ), {, if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =]
[), {, if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;]
[), {, if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;]
[if, (, parameters, !=, null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;, paramNode, !=]
[parameters, !=, null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;, paramNode, !=, null, ;]
[null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;, paramNode, !=, null, ;, paramNode, =]
[null, ), {, for, (, Node, paramNode, =, parameters, ., getFirstChild, (, ), ;, paramNode, !=, null, ;, paramNode, =]
[getFirstChild, (, ), ;, paramNode, !=, null, ;, paramNode, =, paramNode, ., getNext, (, ), ), {, JSType, type, =]
[getFirstChild, (, ), ;, paramNode, !=, null, ;, paramNode, =, paramNode, ., getNext, (, ), ), {, JSType, type, =]
[paramNode, =, paramNode, ., getNext, (, ), ), {, JSType, type, =, paramNode, ., getJSType, (, ), ;, if, (]
[paramNode, =, paramNode, ., getNext, (, ), ), {, JSType, type, =, paramNode, ., getJSType, (, ), ;, if, (]
[paramNode, =, paramNode, ., getNext, (, ), ), {, JSType, type, =, paramNode, ., getJSType, (, ), ;, if, (]
[paramNode, ., getNext, (, ), ), {, JSType, type, =, paramNode, ., getJSType, (, ), ;, if, (, type, !=]
[getNext, (, ), ), {, JSType, type, =, paramNode, ., getJSType, (, ), ;, if, (, type, !=, null, &&]
[getNext, (, ), ), {, JSType, type, =, paramNode, ., getJSType, (, ), ;, if, (, type, !=, null, &&]
[paramNode, ., getJSType, (, ), ;, if, (, type, !=, null, &&, type, ., hasAnyTemplateTypes, (, ), ), {, return]
[if, (, type, !=, null, &&, type, ., hasAnyTemplateTypes, (, ), ), {, return, true, ;, }, }, }, return]
