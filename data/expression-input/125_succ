[;, FunctionRewriter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, }, @, Override, public, void, process, (]
[=, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, List, <, Reducer]
[., compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, List]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, List, <, Reducer, >, reducers]
[;, Multimap, <, Reducer, ,, Reduction, >, reductionMap, =, HashMultimap, ., create, (, ), ;, NodeTraversal, ., traverse, (, compiler]
[., of, (, new, ReturnConstantReducer, (, ), ,, new, GetterReducer, (, ), ,, new, SetterReducer, (, ), ,, new, EmptyFunctionReducer]
[,, new, GetterReducer, (, ), ,, new, SetterReducer, (, ), ,, new, EmptyFunctionReducer, (, ), ,, new, IdentityReducer, (, )]
[,, new, SetterReducer, (, ), ,, new, EmptyFunctionReducer, (, ), ,, new, IdentityReducer, (, ), ), ;, Multimap, <, Reducer]
[,, new, EmptyFunctionReducer, (, ), ,, new, IdentityReducer, (, ), ), ;, Multimap, <, Reducer, ,, Reduction, >, reductionMap, =]
[,, new, IdentityReducer, (, ), ), ;, Multimap, <, Reducer, ,, Reduction, >, reductionMap, =, HashMultimap, ., create, (, )]
[), ;, Multimap, <, Reducer, ,, Reduction, >, reductionMap, =, HashMultimap, ., create, (, ), ;, NodeTraversal, ., traverse, (]
[;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, ReductionGatherer, (, reducers, ,, reductionMap, ), ), ;, for, (]
[., create, (, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, ReductionGatherer, (, reducers, ,, reductionMap, )]
[;, for, (, Reducer, reducer, :, reducers, ), {, Collection, <, Reduction, >, reductions, =, reductionMap, ., get, (, reducer]
[., traverse, (, compiler, ,, root, ,, new, ReductionGatherer, (, reducers, ,, reductionMap, ), ), ;, for, (, Reducer, reducer]
[,, root, ,, new, ReductionGatherer, (, reducers, ,, reductionMap, ), ), ;, for, (, Reducer, reducer, :, reducers, ), {]
[,, new, ReductionGatherer, (, reducers, ,, reductionMap, ), ), ;, for, (, Reducer, reducer, :, reducers, ), {, Collection, <]
[), ;, for, (, Reducer, reducer, :, reducers, ), {, Collection, <, Reduction, >, reductions, =, reductionMap, ., get, (]
[,, reductionMap, ), ), ;, for, (, Reducer, reducer, :, reducers, ), {, Collection, <, Reduction, >, reductions, =, reductionMap]
[), ), ;, for, (, Reducer, reducer, :, reducers, ), {, Collection, <, Reduction, >, reductions, =, reductionMap, ., get]
[), {, Collection, <, Reduction, >, reductions, =, reductionMap, ., get, (, reducer, ), ;, if, (, reductions, ., isEmpty]
[;, if, (, reductions, ., isEmpty, (, ), ), {, continue, ;, }, Node, helperCode, =, parseHelperCode, (, reducer, )]
[., get, (, reducer, ), ;, if, (, reductions, ., isEmpty, (, ), ), {, continue, ;, }, Node, helperCode]
[), ;, if, (, reductions, ., isEmpty, (, ), ), {, continue, ;, }, Node, helperCode, =, parseHelperCode, (, reducer]
[), {, continue, ;, }, Node, helperCode, =, parseHelperCode, (, reducer, ), ;, if, (, helperCode, ==, null, ), {]
[., isEmpty, (, ), ), {, continue, ;, }, Node, helperCode, =, parseHelperCode, (, reducer, ), ;, if, (, helperCode]
[;, if, (, helperCode, ==, null, ), {, continue, ;, }, int, helperCodeCost, =, InlineCostEstimator, ., getCost, (, helperCode, )]
[), ;, if, (, helperCode, ==, null, ), {, continue, ;, }, int, helperCodeCost, =, InlineCostEstimator, ., getCost, (, helperCode]
[), {, continue, ;, }, int, helperCodeCost, =, InlineCostEstimator, ., getCost, (, helperCode, ), ;, int, savings, =, 0, ;]
[==, null, ), {, continue, ;, }, int, helperCodeCost, =, InlineCostEstimator, ., getCost, (, helperCode, ), ;, int, savings, =]
[), {, continue, ;, }, int, helperCodeCost, =, InlineCostEstimator, ., getCost, (, helperCode, ), ;, int, savings, =, 0, ;]
[;, int, savings, =, 0, ;, for, (, Reduction, reduction, :, reductions, ), {, savings, +=, reduction, ., estimateSavings, (]
[., getCost, (, helperCode, ), ;, int, savings, =, 0, ;, for, (, Reduction, reduction, :, reductions, ), {, savings]
[), ;, int, savings, =, 0, ;, for, (, Reduction, reduction, :, reductions, ), {, savings, +=, reduction, ., estimateSavings]
[;, for, (, Reduction, reduction, :, reductions, ), {, savings, +=, reduction, ., estimateSavings, (, ), ;, }, if, (]
[), {, savings, +=, reduction, ., estimateSavings, (, ), ;, }, if, (, savings, >, (, helperCodeCost, +, SAVINGS_THRESHOLD, )]
[+=, reduction, ., estimateSavings, (, ), ;, }, if, (, savings, >, (, helperCodeCost, +, SAVINGS_THRESHOLD, ), ), {, for]
[;, }, if, (, savings, >, (, helperCodeCost, +, SAVINGS_THRESHOLD, ), ), {, for, (, Reduction, reduction, :, reductions, )]
[., estimateSavings, (, ), ;, }, if, (, savings, >, (, helperCodeCost, +, SAVINGS_THRESHOLD, ), ), {, for, (, Reduction]
[), {, for, (, Reduction, reduction, :, reductions, ), {, reduction, ., apply, (, ), ;, }, Node, addingRoot, =]
[>, (, helperCodeCost, +, SAVINGS_THRESHOLD, ), ), {, for, (, Reduction, reduction, :, reductions, ), {, reduction, ., apply, (]
[), {, for, (, Reduction, reduction, :, reductions, ), {, reduction, ., apply, (, ), ;, }, Node, addingRoot, =]
[), ), {, for, (, Reduction, reduction, :, reductions, ), {, reduction, ., apply, (, ), ;, }, Node, addingRoot]
[+, SAVINGS_THRESHOLD, ), ), {, for, (, Reduction, reduction, :, reductions, ), {, reduction, ., apply, (, ), ;, }]
[), ), {, for, (, Reduction, reduction, :, reductions, ), {, reduction, ., apply, (, ), ;, }, Node, addingRoot]
[), {, reduction, ., apply, (, ), ;, }, Node, addingRoot, =, compiler, ., getNodeForCodeInsertion, (, null, ), ;, addingRoot]
[;, }, Node, addingRoot, =, compiler, ., getNodeForCodeInsertion, (, null, ), ;, addingRoot, ., addChildrenToFront, (, helperCode, ), ;, compiler]
[., apply, (, ), ;, }, Node, addingRoot, =, compiler, ., getNodeForCodeInsertion, (, null, ), ;, addingRoot, ., addChildrenToFront, (]
[;, addingRoot, ., addChildrenToFront, (, helperCode, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }, }, public, Node, parseHelperCode]
[., getNodeForCodeInsertion, (, null, ), ;, addingRoot, ., addChildrenToFront, (, helperCode, ), ;, compiler, ., reportCodeChange, (, ), ;, }]
[), ;, addingRoot, ., addChildrenToFront, (, helperCode, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }, }, public, Node]
[;, compiler, ., reportCodeChange, (, ), ;, }, }, }, public, Node, parseHelperCode, (, Reducer, reducer, ), {, Node, root]
[., addChildrenToFront, (, helperCode, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }, }, public, Node, parseHelperCode, (, Reducer]
[), ;, compiler, ., reportCodeChange, (, ), ;, }, }, }, public, Node, parseHelperCode, (, Reducer, reducer, ), {, Node]
[;, }, }, }, public, Node, parseHelperCode, (, Reducer, reducer, ), {, Node, root, =, compiler, ., parseSyntheticCode, (, reducer]
[., reportCodeChange, (, ), ;, }, }, }, public, Node, parseHelperCode, (, Reducer, reducer, ), {, Node, root, =, compiler]
[;, return, (, root, !=, null, ), ?, root, ., removeFirstChild, (, ), :, null, ;, }, private, static, boolean]
[., parseSyntheticCode, (, reducer, ., getClass, (, ), ., toString, (, ), +, ":helper", ,, reducer, ., getHelperSource, (, )]
[,, reducer, ., getHelperSource, (, ), ), ;, return, (, root, !=, null, ), ?, root, ., removeFirstChild, (, )]
[+, ":helper", ,, reducer, ., getHelperSource, (, ), ), ;, return, (, root, !=, null, ), ?, root, ., removeFirstChild]
[., toString, (, ), +, ":helper", ,, reducer, ., getHelperSource, (, ), ), ;, return, (, root, !=, null, )]
[., getClass, (, ), ., toString, (, ), +, ":helper", ,, reducer, ., getHelperSource, (, ), ), ;, return, (]
[,, reducer, ., getHelperSource, (, ), ), ;, return, (, root, !=, null, ), ?, root, ., removeFirstChild, (, )]
[), ;, return, (, root, !=, null, ), ?, root, ., removeFirstChild, (, ), :, null, ;, }, private, static]
[., getHelperSource, (, ), ), ;, return, (, root, !=, null, ), ?, root, ., removeFirstChild, (, ), :, null]
[;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {, return, NodeUtil, ., isFunctionExpression, (, n, ), &&, !]
[?, root, ., removeFirstChild, (, ), :, null, ;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {, return]
[), ?, root, ., removeFirstChild, (, ), :, null, ;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {]
[!=, null, ), ?, root, ., removeFirstChild, (, ), :, null, ;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n]
[), ?, root, ., removeFirstChild, (, ), :, null, ;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {]
[:, null, ;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {, return, NodeUtil, ., isFunctionExpression, (, n, )]
[., removeFirstChild, (, ), :, null, ;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {, return, NodeUtil, .]
[;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {, return, NodeUtil, ., isFunctionExpression, (, n, ), &&, !]
[;, }, private, class, Reduction, {, private, final, Node, parent, ;, private, final, Node, oldChild, ;, private, final, Node, newChild]
[&&, !, NodeUtil, ., isGetOrSetKey, (, n, ., getParent, (, ), ), ;, }, private, class, Reduction, {, private, final]
[., isFunctionExpression, (, n, ), &&, !, NodeUtil, ., isGetOrSetKey, (, n, ., getParent, (, ), ), ;, }, private]
[), &&, !, NodeUtil, ., isGetOrSetKey, (, n, ., getParent, (, ), ), ;, }, private, class, Reduction, {, private]
[;, }, private, class, Reduction, {, private, final, Node, parent, ;, private, final, Node, oldChild, ;, private, final, Node, newChild]
[;, }, private, class, Reduction, {, private, final, Node, parent, ;, private, final, Node, oldChild, ;, private, final, Node, newChild]
[., isGetOrSetKey, (, n, ., getParent, (, ), ), ;, }, private, class, Reduction, {, private, final, Node, parent, ;]
[), ;, }, private, class, Reduction, {, private, final, Node, parent, ;, private, final, Node, oldChild, ;, private, final, Node]
[., getParent, (, ), ), ;, }, private, class, Reduction, {, private, final, Node, parent, ;, private, final, Node, oldChild]
[=, parent, ;, this, ., oldChild, =, oldChild, ;, this, ., newChild, =, newChild, ;, }, void, apply, (, )]
[., parent, =, parent, ;, this, ., oldChild, =, oldChild, ;, this, ., newChild, =, newChild, ;, }, void, apply]
[;, this, ., oldChild, =, oldChild, ;, this, ., newChild, =, newChild, ;, }, void, apply, (, ), {, parent]
[=, oldChild, ;, this, ., newChild, =, newChild, ;, }, void, apply, (, ), {, parent, ., replaceChild, (, oldChild]
[., oldChild, =, oldChild, ;, this, ., newChild, =, newChild, ;, }, void, apply, (, ), {, parent, ., replaceChild]
[;, this, ., newChild, =, newChild, ;, }, void, apply, (, ), {, parent, ., replaceChild, (, oldChild, ,, newChild]
[=, newChild, ;, }, void, apply, (, ), {, parent, ., replaceChild, (, oldChild, ,, newChild, ), ;, compiler, .]
[., newChild, =, newChild, ;, }, void, apply, (, ), {, parent, ., replaceChild, (, oldChild, ,, newChild, ), ;]
[;, }, void, apply, (, ), {, parent, ., replaceChild, (, oldChild, ,, newChild, ), ;, compiler, ., reportCodeChange, (]
[;, compiler, ., reportCodeChange, (, ), ;, }, int, estimateSavings, (, ), {, return, InlineCostEstimator, ., getCost, (, oldChild, )]
[., replaceChild, (, oldChild, ,, newChild, ), ;, compiler, ., reportCodeChange, (, ), ;, }, int, estimateSavings, (, ), {]
[,, newChild, ), ;, compiler, ., reportCodeChange, (, ), ;, }, int, estimateSavings, (, ), {, return, InlineCostEstimator, ., getCost]
[), ;, compiler, ., reportCodeChange, (, ), ;, }, int, estimateSavings, (, ), {, return, InlineCostEstimator, ., getCost, (, oldChild]
[;, }, int, estimateSavings, (, ), {, return, InlineCostEstimator, ., getCost, (, oldChild, ), -, InlineCostEstimator, ., getCost, (, newChild]
[., reportCodeChange, (, ), ;, }, int, estimateSavings, (, ), {, return, InlineCostEstimator, ., getCost, (, oldChild, ), -, InlineCostEstimator]
[;, }, }, private, class, ReductionGatherer, implements, Callback, {, private, final, List, <, Reducer, >, reducers, ;, private, final, Multimap]
[-, InlineCostEstimator, ., getCost, (, newChild, ), ;, }, }, private, class, ReductionGatherer, implements, Callback, {, private, final, List, <]
[., getCost, (, oldChild, ), -, InlineCostEstimator, ., getCost, (, newChild, ), ;, }, }, private, class, ReductionGatherer, implements, Callback]
[), -, InlineCostEstimator, ., getCost, (, newChild, ), ;, }, }, private, class, ReductionGatherer, implements, Callback, {, private, final, List]
[;, }, }, private, class, ReductionGatherer, implements, Callback, {, private, final, List, <, Reducer, >, reducers, ;, private, final, Multimap]
[., getCost, (, newChild, ), ;, }, }, private, class, ReductionGatherer, implements, Callback, {, private, final, List, <, Reducer, >]
[), ;, }, }, private, class, ReductionGatherer, implements, Callback, {, private, final, List, <, Reducer, >, reducers, ;, private, final]
[=, reducers, ;, this, ., reductions, =, reductions, ;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, raversal, ,, Node]
[., reducers, =, reducers, ;, this, ., reductions, =, reductions, ;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, raversal]
[;, this, ., reductions, =, reductions, ;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, raversal, ,, Node, node, ,]
[=, reductions, ;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, raversal, ,, Node, node, ,, Node, parent, ), {]
[., reductions, =, reductions, ;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, raversal, ,, Node, node, ,, Node, parent]
[;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, raversal, ,, Node, node, ,, Node, parent, ), {, for, (]
[), {, Node, replacement, =, reducer, ., reduce, (, node, ), ;, if, (, replacement, !=, node, ), {, reductions]
[;, if, (, replacement, !=, node, ), {, reductions, ., put, (, reducer, ,, new, Reduction, (, parent, ,, node]
[., reduce, (, node, ), ;, if, (, replacement, !=, node, ), {, reductions, ., put, (, reducer, ,, new]
[), ;, if, (, replacement, !=, node, ), {, reductions, ., put, (, reducer, ,, new, Reduction, (, parent, ,]
[), {, reductions, ., put, (, reducer, ,, new, Reduction, (, parent, ,, node, ,, replacement, ), ), ;, return]
[!=, node, ), {, reductions, ., put, (, reducer, ,, new, Reduction, (, parent, ,, node, ,, replacement, ), )]
[), {, reductions, ., put, (, reducer, ,, new, Reduction, (, parent, ,, node, ,, replacement, ), ), ;, return]
[;, return, false, ;, }, }, return, true, ;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node]
[., put, (, reducer, ,, new, Reduction, (, parent, ,, node, ,, replacement, ), ), ;, return, false, ;, }]
[,, new, Reduction, (, parent, ,, node, ,, replacement, ), ), ;, return, false, ;, }, }, return, true, ;]
[), ;, return, false, ;, }, }, return, true, ;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,]
[,, node, ,, replacement, ), ), ;, return, false, ;, }, }, return, true, ;, }, @, Override, public, void]
[,, replacement, ), ), ;, return, false, ;, }, }, return, true, ;, }, @, Override, public, void, visit, (]
[), ), ;, return, false, ;, }, }, return, true, ;, }, @, Override, public, void, visit, (, NodeTraversal, traversal]
[;, }, }, return, true, ;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node]
[;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, }, }]
[;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, if, (, argumentNode, !=, null, ), {, call]
[., srcref, (, srcref, ), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, if, (, argumentNode]
[., call, (, IR, ., name, (, methodName, ), ), ., srcref, (, srcref, ), ;, call, ., putBooleanProp, (]
[), ., srcref, (, srcref, ), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, if, (]
[., name, (, methodName, ), ), ., srcref, (, srcref, ), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,]
[), ), ., srcref, (, srcref, ), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, if]
[), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, if, (, argumentNode, !=, null, ), {]
[;, if, (, argumentNode, !=, null, ), {, call, ., addChildToBack, (, argumentNode, ., cloneTree, (, ), ), ;, }]
[., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, if, (, argumentNode, !=, null, ), {, call, ., addChildToBack]
[,, true, ), ;, if, (, argumentNode, !=, null, ), {, call, ., addChildToBack, (, argumentNode, ., cloneTree, (, )]
[., FREE_CALL, ,, true, ), ;, if, (, argumentNode, !=, null, ), {, call, ., addChildToBack, (, argumentNode, ., cloneTree]
[), ;, if, (, argumentNode, !=, null, ), {, call, ., addChildToBack, (, argumentNode, ., cloneTree, (, ), ), ;]
[), {, call, ., addChildToBack, (, argumentNode, ., cloneTree, (, ), ), ;, }, return, call, ;, }, }, private]
[!=, null, ), {, call, ., addChildToBack, (, argumentNode, ., cloneTree, (, ), ), ;, }, return, call, ;, }]
[), {, call, ., addChildToBack, (, argumentNode, ., cloneTree, (, ), ), ;, }, return, call, ;, }, }, private]
[;, }, return, call, ;, }, }, private, static, class, EmptyFunctionReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_emptyFn"]
[., addChildToBack, (, argumentNode, ., cloneTree, (, ), ), ;, }, return, call, ;, }, }, private, static, class, EmptyFunctionReducer]
[), ;, }, return, call, ;, }, }, private, static, class, EmptyFunctionReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =]
[., cloneTree, (, ), ), ;, }, return, call, ;, }, }, private, static, class, EmptyFunctionReducer, extends, Reducer, {, static]
[;, }, }, private, static, class, EmptyFunctionReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_emptyFn", ;, static, final, String]
[;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "() {", +, "  return function() {}", +, "}", ;, @, Override, public, String]
[;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node]
[+, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce]
[+, "  return function() {}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public]
[+, "() {", +, "  return function() {}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @]
[+, FACTORY_METHOD_NAME, +, "() {", +, "  return function() {}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;]
[+, "() {", +, "  return function() {}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @]
[+, "  return function() {}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public]
[+, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce]
[;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node]
[;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, NodeUtil, ., isEmptyFunctionExpression, (, node, )]
[), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, null, ,, node, ), ;, }, else, {, return, node, ;, }, }]
[., isEmptyFunctionExpression, (, node, ), ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, null, ,, node, ), ;, }, else, {]
[), ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, null, ,, node, ), ;, }, else, {, return, node, ;, }]
[;, }, else, {, return, node, ;, }, }, }, abstract, static, class, SingleReturnStatementReducer, extends, Reducer, {, protected, final, Node]
[,, null, ,, node, ), ;, }, else, {, return, node, ;, }, }, }, abstract, static, class, SingleReturnStatementReducer, extends]
[,, node, ), ;, }, else, {, return, node, ;, }, }, }, abstract, static, class, SingleReturnStatementReducer, extends, Reducer, {]
[), ;, }, else, {, return, node, ;, }, }, }, abstract, static, class, SingleReturnStatementReducer, extends, Reducer, {, protected, final]
[;, }, }, }, abstract, static, class, SingleReturnStatementReducer, extends, Reducer, {, protected, final, Node, maybeGetSingleReturnRValue, (, Node, functionNode, ), {]
[;, if, (, !, body, ., hasOneChild, (, ), ), {, return, null, ;, }, Node, statement, =, body, .]
[., getLastChild, (, ), ;, if, (, !, body, ., hasOneChild, (, ), ), {, return, null, ;, }, Node]
[), {, return, null, ;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (, statement, ., isReturn]
[), {, return, null, ;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (, statement, ., isReturn]
[., hasOneChild, (, ), ), {, return, null, ;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if]
[;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (, statement, ., isReturn, (, ), ), {]
[;, if, (, statement, ., isReturn, (, ), ), {, return, statement, ., getFirstChild, (, ), ;, }, return, null]
[., getFirstChild, (, ), ;, if, (, statement, ., isReturn, (, ), ), {, return, statement, ., getFirstChild, (, )]
[), {, return, statement, ., getFirstChild, (, ), ;, }, return, null, ;, }, }, private, static, class, IdentityReducer, extends]
[., isReturn, (, ), ), {, return, statement, ., getFirstChild, (, ), ;, }, return, null, ;, }, }, private]
[;, }, return, null, ;, }, }, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn"]
[., getFirstChild, (, ), ;, }, return, null, ;, }, }, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final]
[;, }, }, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String]
[;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "() {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "return ", +]
[;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node]
[+, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce]
[+, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public]
[+, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @]
[+, "return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;]
[+, "_value) {", +, "return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return]
[+, FACTORY_METHOD_NAME, +, "_value) {", +, "return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, )]
[+, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource]
[+, "() {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public]
[+, FACTORY_METHOD_NAME, +, "() {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @]
[+, "() {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public]
[+, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource]
[+, FACTORY_METHOD_NAME, +, "_value) {", +, "return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, )]
[+, "_value) {", +, "return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return]
[+, "return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;]
[+, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @]
[+, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public]
[+, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce]
[;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node]
[;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, !, isReduceableFunctionExpression, (, node, ), )]
[), {, return, node, ;, }, if, (, isIdentityFunction, (, node, ), ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, null]
[), {, return, node, ;, }, if, (, isIdentityFunction, (, node, ), ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, null]
[), ), {, return, node, ;, }, if, (, isIdentityFunction, (, node, ), ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,]
[;, }, if, (, isIdentityFunction, (, node, ), ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, null, ,, node, ), ;]
[), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, null, ,, node, ), ;, }, else, {, return, node, ;, }, }]
[), ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, null, ,, node, ), ;, }, else, {, return, node, ;, }]
[;, }, else, {, return, node, ;, }, }, private, boolean, isIdentityFunction, (, Node, functionNode, ), {, Node, argList, =]
[,, null, ,, node, ), ;, }, else, {, return, node, ;, }, }, private, boolean, isIdentityFunction, (, Node, functionNode]
[,, node, ), ;, }, else, {, return, node, ;, }, }, private, boolean, isIdentityFunction, (, Node, functionNode, ), {]
[), ;, }, else, {, return, node, ;, }, }, private, boolean, isIdentityFunction, (, Node, functionNode, ), {, Node, argList]
[;, }, }, private, boolean, isIdentityFunction, (, Node, functionNode, ), {, Node, argList, =, functionNode, ., getFirstChild, (, ), .]
[;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (, paramNode, ==, null, ), {, return, false, ;]
[., getNext, (, ), ;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (, paramNode, ==, null, )]
[., getFirstChild, (, ), ., getNext, (, ), ;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (]
[;, if, (, paramNode, ==, null, ), {, return, false, ;, }, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;]
[., getFirstChild, (, ), ;, if, (, paramNode, ==, null, ), {, return, false, ;, }, Node, value, =, maybeGetSingleReturnRValue]
[), {, return, false, ;, }, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&]
[==, null, ), {, return, false, ;, }, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=]
[), {, return, false, ;, }, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&]
[;, }, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&, value, ., isName, (]
[;, if, (, value, !=, null, &&, value, ., isName, (, ), &&, value, ., getString, (, ), ., equals]
[), ;, if, (, value, !=, null, &&, value, ., isName, (, ), &&, value, ., getString, (, ), .]
[), {, return, true, ;, }, return, false, ;, }, }, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final]
[&&, value, ., getString, (, ), ., equals, (, paramNode, ., getString, (, ), ), ), {, return, true, ;]
[&&, value, ., isName, (, ), &&, value, ., getString, (, ), ., equals, (, paramNode, ., getString, (, )]
[!=, null, &&, value, ., isName, (, ), &&, value, ., getString, (, ), ., equals, (, paramNode, ., getString]
[&&, value, ., isName, (, ), &&, value, ., getString, (, ), ., equals, (, paramNode, ., getString, (, )]
[&&, value, ., getString, (, ), ., equals, (, paramNode, ., getString, (, ), ), ), {, return, true, ;]
[., isName, (, ), &&, value, ., getString, (, ), ., equals, (, paramNode, ., getString, (, ), ), )]
[), {, return, true, ;, }, return, false, ;, }, }, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final]
[., equals, (, paramNode, ., getString, (, ), ), ), {, return, true, ;, }, return, false, ;, }, }]
[., getString, (, ), ., equals, (, paramNode, ., getString, (, ), ), ), {, return, true, ;, }, return]
[), ), {, return, true, ;, }, return, false, ;, }, }, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static]
[., getString, (, ), ), ), {, return, true, ;, }, return, false, ;, }, }, private, static, class, ReturnConstantReducer]
[;, }, return, false, ;, }, }, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg"]
[;, }, }, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String]
[;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "  return function() {return ", +, FACTORY_METHOD_NAME, +]
[;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node]
[+, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce]
[+, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public]
[+, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @]
[+, "  return function() {return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;]
[+, "_value) {", +, "  return function() {return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return]
[+, FACTORY_METHOD_NAME, +, "_value) {", +, "  return function() {return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, )]
[+, "(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "  return function() {return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource]
[+, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "  return function() {return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public]
[+, "(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "  return function() {return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource]
[+, FACTORY_METHOD_NAME, +, "_value) {", +, "  return function() {return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, )]
[+, "_value) {", +, "  return function() {return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return]
[+, "  return function() {return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;]
[+, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @]
[+, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public]
[+, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce]
[;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node]
[;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, !, isReduceableFunctionExpression, (, node, ), )]
[), {, return, node, ;, }, Node, valueNode, =, getValueNode, (, node, ), ;, if, (, valueNode, !=, null, )]
[), {, return, node, ;, }, Node, valueNode, =, getValueNode, (, node, ), ;, if, (, valueNode, !=, null, )]
[), ), {, return, node, ;, }, Node, valueNode, =, getValueNode, (, node, ), ;, if, (, valueNode, !=, null]
[;, }, Node, valueNode, =, getValueNode, (, node, ), ;, if, (, valueNode, !=, null, ), {, return, buildCallNode, (]
[;, if, (, valueNode, !=, null, ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, valueNode, ,, node, ), ;, }, else]
[), ;, if, (, valueNode, !=, null, ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, valueNode, ,, node, ), ;, }]
[), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, valueNode, ,, node, ), ;, }, else, {, return, node, ;, }, }]
[!=, null, ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, valueNode, ,, node, ), ;, }, else, {, return, node, ;]
[), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, valueNode, ,, node, ), ;, }, else, {, return, node, ;, }, }]
[;, }, else, {, return, node, ;, }, }, private, Node, getValueNode, (, Node, functionNode, ), {, Node, value, =]
[,, valueNode, ,, node, ), ;, }, else, {, return, node, ;, }, }, private, Node, getValueNode, (, Node, functionNode]
[,, node, ), ;, }, else, {, return, node, ;, }, }, private, Node, getValueNode, (, Node, functionNode, ), {]
[), ;, }, else, {, return, node, ;, }, }, private, Node, getValueNode, (, Node, functionNode, ), {, Node, value]
[;, }, }, private, Node, getValueNode, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if]
[;, if, (, value, !=, null, &&, NodeUtil, ., isImmutableValue, (, value, ), ), {, return, value, ;, }, return]
[), ;, if, (, value, !=, null, &&, NodeUtil, ., isImmutableValue, (, value, ), ), {, return, value, ;, }]
[), {, return, value, ;, }, return, null, ;, }, }, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final]
[&&, NodeUtil, ., isImmutableValue, (, value, ), ), {, return, value, ;, }, return, null, ;, }, }, private, static]
[!=, null, &&, NodeUtil, ., isImmutableValue, (, value, ), ), {, return, value, ;, }, return, null, ;, }, }]
[&&, NodeUtil, ., isImmutableValue, (, value, ), ), {, return, value, ;, }, return, null, ;, }, }, private, static]
[), {, return, value, ;, }, return, null, ;, }, }, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final]
[., isImmutableValue, (, value, ), ), {, return, value, ;, }, return, null, ;, }, }, private, static, class, GetterReducer]
[), ), {, return, value, ;, }, return, null, ;, }, }, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static]
[;, }, return, null, ;, }, }, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get"]
[;, }, }, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String]
[;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function() {return this[", +, FACTORY_METHOD_NAME, +]
[;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node]
[+, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce]
[+, "_name]}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public]
[+, FACTORY_METHOD_NAME, +, "_name]}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @]
[+, "  return function() {return this[", +, FACTORY_METHOD_NAME, +, "_name]}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;]
[+, "_name) {", +, "  return function() {return this[", +, FACTORY_METHOD_NAME, +, "_name]}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return]
[+, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function() {return this[", +, FACTORY_METHOD_NAME, +, "_name]}", +, "}", ;, @, Override, public, String, getHelperSource, (, )]
[+, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function() {return this[", +, FACTORY_METHOD_NAME, +, "_name]}", +, "}", ;, @, Override, public, String, getHelperSource]
[+, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function() {return this[", +, FACTORY_METHOD_NAME, +, "_name]}", +, "}", ;, @, Override, public]
[+, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function() {return this[", +, FACTORY_METHOD_NAME, +, "_name]}", +, "}", ;, @, Override, public, String, getHelperSource]
[+, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function() {return this[", +, FACTORY_METHOD_NAME, +, "_name]}", +, "}", ;, @, Override, public, String, getHelperSource, (, )]
[+, "_name) {", +, "  return function() {return this[", +, FACTORY_METHOD_NAME, +, "_name]}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return]
[+, "  return function() {return this[", +, FACTORY_METHOD_NAME, +, "_name]}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;]
[+, FACTORY_METHOD_NAME, +, "_name]}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @]
[+, "_name]}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public]
[+, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce]
[;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node]
[;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, !, isReduceableFunctionExpression, (, node, ), )]
[), {, return, node, ;, }, Node, propName, =, getGetPropertyName, (, node, ), ;, if, (, propName, !=, null, )]
[), {, return, node, ;, }, Node, propName, =, getGetPropertyName, (, node, ), ;, if, (, propName, !=, null, )]
[), ), {, return, node, ;, }, Node, propName, =, getGetPropertyName, (, node, ), ;, if, (, propName, !=, null]
[;, }, Node, propName, =, getGetPropertyName, (, node, ), ;, if, (, propName, !=, null, ), {, if, (, !]
[;, if, (, propName, !=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw, new]
[), ;, if, (, propName, !=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw]
[), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, .]
[!=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +]
[), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, .]
[), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (, propName, ., getType, (, ), ), ), ;]
[), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (, propName, ., getType, (, ), ), ), ;]
[., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (, propName, ., getType, (]
[;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node, ), ;, }, else, {, return, node, ;, }, }]
[), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node, ), ;, }, else, {, return, node, ;, }]
[+, Token, ., name, (, propName, ., getType, (, ), ), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName]
[), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node, ), ;, }, else, {, return, node, ;, }]
[., name, (, propName, ., getType, (, ), ), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node]
[), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node, ), ;, }, else, {, return, node, ;]
[., getType, (, ), ), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node, ), ;, }, else]
[;, }, else, {, return, node, ;, }, }, private, Node, getGetPropertyName, (, Node, functionNode, ), {, Node, value, =]
[,, propName, ,, node, ), ;, }, else, {, return, node, ;, }, }, private, Node, getGetPropertyName, (, Node, functionNode]
[,, node, ), ;, }, else, {, return, node, ;, }, }, private, Node, getGetPropertyName, (, Node, functionNode, ), {]
[), ;, }, else, {, return, node, ;, }, }, private, Node, getGetPropertyName, (, Node, functionNode, ), {, Node, value]
[;, }, }, private, Node, getGetPropertyName, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if]
[;, if, (, value, !=, null, &&, value, ., isGetProp, (, ), &&, value, ., getFirstChild, (, ), ., isThis]
[), ;, if, (, value, !=, null, &&, value, ., isGetProp, (, ), &&, value, ., getFirstChild, (, ), .]
[), {, return, value, ., getLastChild, (, ), ;, }, return, null, ;, }, }, private, static, class, SetterReducer, extends]
[&&, value, ., getFirstChild, (, ), ., isThis, (, ), ), {, return, value, ., getLastChild, (, ), ;, }]
[&&, value, ., isGetProp, (, ), &&, value, ., getFirstChild, (, ), ., isThis, (, ), ), {, return, value]
[!=, null, &&, value, ., isGetProp, (, ), &&, value, ., getFirstChild, (, ), ., isThis, (, ), ), {]
[&&, value, ., isGetProp, (, ), &&, value, ., getFirstChild, (, ), ., isThis, (, ), ), {, return, value]
[&&, value, ., getFirstChild, (, ), ., isThis, (, ), ), {, return, value, ., getLastChild, (, ), ;, }]
[., isGetProp, (, ), &&, value, ., getFirstChild, (, ), ., isThis, (, ), ), {, return, value, ., getLastChild]
[), {, return, value, ., getLastChild, (, ), ;, }, return, null, ;, }, }, private, static, class, SetterReducer, extends]
[., isThis, (, ), ), {, return, value, ., getLastChild, (, ), ;, }, return, null, ;, }, }, private]
[., getFirstChild, (, ), ., isThis, (, ), ), {, return, value, ., getLastChild, (, ), ;, }, return, null]
[;, }, return, null, ;, }, }, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set"]
[., getLastChild, (, ), ;, }, return, null, ;, }, }, private, static, class, SetterReducer, extends, Reducer, {, static, final]
[;, }, }, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String]
[;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +]
[;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node]
[+, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce]
[+, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public]
[+, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @]
[+, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;]
[+, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return]
[+, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, )]
[+, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource]
[+, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public]
[+, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @]
[+, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}"]
[+, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}"]
[+, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME]
[+, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = "]
[+, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME]
[+, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}"]
[+, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}"]
[+, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @]
[+, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public]
[+, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource]
[+, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, )]
[+, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return]
[+, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;]
[+, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @]
[+, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public]
[+, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce]
[;, @, Override, public, String, getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node]
[;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, !, isReduceableFunctionExpression, (, node, ), )]
[), {, return, node, ;, }, Node, propName, =, getSetPropertyName, (, node, ), ;, if, (, propName, !=, null, )]
[), {, return, node, ;, }, Node, propName, =, getSetPropertyName, (, node, ), ;, if, (, propName, !=, null, )]
[), ), {, return, node, ;, }, Node, propName, =, getSetPropertyName, (, node, ), ;, if, (, propName, !=, null]
[;, }, Node, propName, =, getSetPropertyName, (, node, ), ;, if, (, propName, !=, null, ), {, if, (, !]
[;, if, (, propName, !=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw, new]
[), ;, if, (, propName, !=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw]
[), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, .]
[!=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +]
[), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, .]
[), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (, propName, ., getType, (, ), ), ), ;]
[), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (, propName, ., getType, (, ), ), ), ;]
[., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (, propName, ., getType, (]
[;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node, ), ;, }, else, {, return, node, ;, }, }]
[), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node, ), ;, }, else, {, return, node, ;, }]
[+, Token, ., name, (, propName, ., getType, (, ), ), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName]
[), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node, ), ;, }, else, {, return, node, ;, }]
[., name, (, propName, ., getType, (, ), ), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node]
[), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node, ), ;, }, else, {, return, node, ;]
[., getType, (, ), ), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node, ), ;, }, else]
[;, }, else, {, return, node, ;, }, }, private, Node, getSetPropertyName, (, Node, functionNode, ), {, Node, body, =]
[,, propName, ,, node, ), ;, }, else, {, return, node, ;, }, }, private, Node, getSetPropertyName, (, Node, functionNode]
[,, node, ), ;, }, else, {, return, node, ;, }, }, private, Node, getSetPropertyName, (, Node, functionNode, ), {]
[), ;, }, else, {, return, node, ;, }, }, private, Node, getSetPropertyName, (, Node, functionNode, ), {, Node, body]
[;, }, }, private, Node, getSetPropertyName, (, Node, functionNode, ), {, Node, body, =, functionNode, ., getLastChild, (, ), ;]
[;, if, (, !, body, ., hasOneChild, (, ), ), {, return, null, ;, }, Node, argList, =, functionNode, .]
[., getLastChild, (, ), ;, if, (, !, body, ., hasOneChild, (, ), ), {, return, null, ;, }, Node]
[), {, return, null, ;, }, Node, argList, =, functionNode, ., getFirstChild, (, ), ., getNext, (, ), ;, Node]
[), {, return, null, ;, }, Node, argList, =, functionNode, ., getFirstChild, (, ), ., getNext, (, ), ;, Node]
[., hasOneChild, (, ), ), {, return, null, ;, }, Node, argList, =, functionNode, ., getFirstChild, (, ), ., getNext]
[;, }, Node, argList, =, functionNode, ., getFirstChild, (, ), ., getNext, (, ), ;, Node, paramNode, =, argList, .]
[;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (, paramNode, ==, null, ), {, return, null, ;]
[., getNext, (, ), ;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (, paramNode, ==, null, )]
[., getFirstChild, (, ), ., getNext, (, ), ;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (]
[;, if, (, paramNode, ==, null, ), {, return, null, ;, }, Node, statement, =, body, ., getFirstChild, (, )]
[., getFirstChild, (, ), ;, if, (, paramNode, ==, null, ), {, return, null, ;, }, Node, statement, =, body]
[), {, return, null, ;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (, !, NodeUtil, .]
[==, null, ), {, return, null, ;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (, !]
[), {, return, null, ;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (, !, NodeUtil, .]
[;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (, !, NodeUtil, ., isExprAssign, (, statement, )]
[;, if, (, !, NodeUtil, ., isExprAssign, (, statement, ), ), {, return, null, ;, }, Node, assign, =, statement]
[., getFirstChild, (, ), ;, if, (, !, NodeUtil, ., isExprAssign, (, statement, ), ), {, return, null, ;, }]
[), {, return, null, ;, }, Node, assign, =, statement, ., getFirstChild, (, ), ;, Node, lhs, =, assign, .]
[), {, return, null, ;, }, Node, assign, =, statement, ., getFirstChild, (, ), ;, Node, lhs, =, assign, .]
[., isExprAssign, (, statement, ), ), {, return, null, ;, }, Node, assign, =, statement, ., getFirstChild, (, ), ;]
[), ), {, return, null, ;, }, Node, assign, =, statement, ., getFirstChild, (, ), ;, Node, lhs, =, assign]
[;, }, Node, assign, =, statement, ., getFirstChild, (, ), ;, Node, lhs, =, assign, ., getFirstChild, (, ), ;]
[;, Node, lhs, =, assign, ., getFirstChild, (, ), ;, if, (, lhs, ., isGetProp, (, ), &&, lhs, .]
[., getFirstChild, (, ), ;, Node, lhs, =, assign, ., getFirstChild, (, ), ;, if, (, lhs, ., isGetProp, (]
[;, if, (, lhs, ., isGetProp, (, ), &&, lhs, ., getFirstChild, (, ), ., isThis, (, ), ), {]
[., getFirstChild, (, ), ;, if, (, lhs, ., isGetProp, (, ), &&, lhs, ., getFirstChild, (, ), ., isThis]
[), {, Node, rhs, =, assign, ., getLastChild, (, ), ;, if, (, rhs, ., isName, (, ), &&, rhs]
[&&, lhs, ., getFirstChild, (, ), ., isThis, (, ), ), {, Node, rhs, =, assign, ., getLastChild, (, )]
[., isGetProp, (, ), &&, lhs, ., getFirstChild, (, ), ., isThis, (, ), ), {, Node, rhs, =, assign]
[), {, Node, rhs, =, assign, ., getLastChild, (, ), ;, if, (, rhs, ., isName, (, ), &&, rhs]
[., isThis, (, ), ), {, Node, rhs, =, assign, ., getLastChild, (, ), ;, if, (, rhs, ., isName]
[., getFirstChild, (, ), ., isThis, (, ), ), {, Node, rhs, =, assign, ., getLastChild, (, ), ;, if]
[;, if, (, rhs, ., isName, (, ), &&, rhs, ., getString, (, ), ., equals, (, paramNode, ., getString]
[., getLastChild, (, ), ;, if, (, rhs, ., isName, (, ), &&, rhs, ., getString, (, ), ., equals]
[), {, Node, propertyName, =, lhs, ., getLastChild, (, ), ;, return, propertyName, ;, }, }, return, null, ;, }]
[&&, rhs, ., getString, (, ), ., equals, (, paramNode, ., getString, (, ), ), ), {, Node, propertyName, =]
[., isName, (, ), &&, rhs, ., getString, (, ), ., equals, (, paramNode, ., getString, (, ), ), )]
[), {, Node, propertyName, =, lhs, ., getLastChild, (, ), ;, return, propertyName, ;, }, }, return, null, ;, }]
[., equals, (, paramNode, ., getString, (, ), ), ), {, Node, propertyName, =, lhs, ., getLastChild, (, ), ;]
[., getString, (, ), ., equals, (, paramNode, ., getString, (, ), ), ), {, Node, propertyName, =, lhs, .]
[), ), {, Node, propertyName, =, lhs, ., getLastChild, (, ), ;, return, propertyName, ;, }, }, return, null, ;]
[., getString, (, ), ), ), {, Node, propertyName, =, lhs, ., getLastChild, (, ), ;, return, propertyName, ;, }]
[;, return, propertyName, ;, }, }, return, null, ;, }, }, }]
[., getLastChild, (, ), ;, return, propertyName, ;, }, }, return, null, ;, }, }, }]
[;, }, }, return, null, ;, }, }, }]
[;, }, }, }]
