[java, ., util, ., ArrayList, ;, import, java, ., util, ., LinkedList, ;, import, java, ., util, ., List, ;]
[., ArrayList, ;, import, java, ., util, ., LinkedList, ;, import, java, ., util, ., List, ;, @, SuppressWarnings, (]
[;, @, SuppressWarnings, (, "unchecked", ), public, class, InvocationContainerImpl, implements, InvocationContainer, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[@, SuppressWarnings, (, "unchecked", ), public, class, InvocationContainerImpl, implements, InvocationContainer, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[,, Serializable, {, private, static, final, long, serialVersionUID, =, -, 5334301962749537177L, ;, private, final, LinkedList, <, StubbedInvocationMatcher, >, stubbed, =]
[LinkedList, <, StubbedInvocationMatcher, >, (, ), ;, private, final, MockingProgress, mockingProgress, ;, private, final, List, <, Answer, >, answersForStubbing, =]
[;, private, final, RegisteredInvocations, registeredInvocations, ;, private, InvocationMatcher, invocationForStubbing, ;, public, InvocationContainerImpl, (, MockingProgress, mockingProgress, ,, MockCreationSettings, mockSettings, ), {]
[;, private, final, RegisteredInvocations, registeredInvocations, ;, private, InvocationMatcher, invocationForStubbing, ;, public, InvocationContainerImpl, (, MockingProgress, mockingProgress, ,, MockCreationSettings, mockSettings, ), {]
[registeredInvocations, ;, private, InvocationMatcher, invocationForStubbing, ;, public, InvocationContainerImpl, (, MockingProgress, mockingProgress, ,, MockCreationSettings, mockSettings, ), {, this, ., mockingProgress, =]
[private, InvocationMatcher, invocationForStubbing, ;, public, InvocationContainerImpl, (, MockingProgress, mockingProgress, ,, MockCreationSettings, mockSettings, ), {, this, ., mockingProgress, =, mockingProgress, ;]
[private, InvocationMatcher, invocationForStubbing, ;, public, InvocationContainerImpl, (, MockingProgress, mockingProgress, ,, MockCreationSettings, mockSettings, ), {, this, ., mockingProgress, =, mockingProgress, ;]
[public, InvocationContainerImpl, (, MockingProgress, mockingProgress, ,, MockCreationSettings, mockSettings, ), {, this, ., mockingProgress, =, mockingProgress, ;, this, ., registeredInvocations, =]
[(, MockingProgress, mockingProgress, ,, MockCreationSettings, mockSettings, ), {, this, ., mockingProgress, =, mockingProgress, ;, this, ., registeredInvocations, =, createRegisteredInvocations, (]
[mockingProgress, ;, this, ., registeredInvocations, =, createRegisteredInvocations, (, mockSettings, ), ;, }, public, void, setInvocationForPotentialStubbing, (, InvocationMatcher, invocation, ), {]
[mockingProgress, ;, this, ., registeredInvocations, =, createRegisteredInvocations, (, mockSettings, ), ;, }, public, void, setInvocationForPotentialStubbing, (, InvocationMatcher, invocation, ), {]
[registeredInvocations, =, createRegisteredInvocations, (, mockSettings, ), ;, }, public, void, setInvocationForPotentialStubbing, (, InvocationMatcher, invocation, ), {, registeredInvocations, ., add, (]
[registeredInvocations, =, createRegisteredInvocations, (, mockSettings, ), ;, }, public, void, setInvocationForPotentialStubbing, (, InvocationMatcher, invocation, ), {, registeredInvocations, ., add, (]
[}, public, void, setInvocationForPotentialStubbing, (, InvocationMatcher, invocation, ), {, registeredInvocations, ., add, (, invocation, ., getInvocation, (, ), ), ;]
[}, public, void, setInvocationForPotentialStubbing, (, InvocationMatcher, invocation, ), {, registeredInvocations, ., add, (, invocation, ., getInvocation, (, ), ), ;]
[(, InvocationMatcher, invocation, ), {, registeredInvocations, ., add, (, invocation, ., getInvocation, (, ), ), ;, this, ., invocationForStubbing, =]
[getInvocation, (, ), ), ;, this, ., invocationForStubbing, =, invocation, ;, }, public, void, resetInvocationForPotentialStubbing, (, InvocationMatcher, invocationMatcher, ), {]
[getInvocation, (, ), ), ;, this, ., invocationForStubbing, =, invocation, ;, }, public, void, resetInvocationForPotentialStubbing, (, InvocationMatcher, invocationMatcher, ), {]
[;, this, ., invocationForStubbing, =, invocation, ;, }, public, void, resetInvocationForPotentialStubbing, (, InvocationMatcher, invocationMatcher, ), {, this, ., invocationForStubbing, =]
[(, InvocationMatcher, invocationMatcher, ), {, this, ., invocationForStubbing, =, invocationMatcher, ;, }, public, void, addAnswer, (, Answer, answer, ), {]
[(, InvocationMatcher, invocationMatcher, ), {, this, ., invocationForStubbing, =, invocationMatcher, ;, }, public, void, addAnswer, (, Answer, answer, ), {]
[., invocationForStubbing, =, invocationMatcher, ;, }, public, void, addAnswer, (, Answer, answer, ), {, registeredInvocations, ., removeLast, (, ), ;]
[=, invocationMatcher, ;, }, public, void, addAnswer, (, Answer, answer, ), {, registeredInvocations, ., removeLast, (, ), ;, addAnswer, (]
[;, }, public, void, addAnswer, (, Answer, answer, ), {, registeredInvocations, ., removeLast, (, ), ;, addAnswer, (, answer, ,]
[removeLast, (, ), ;, addAnswer, (, answer, ,, false, ), ;, }, public, void, addConsecutiveAnswer, (, Answer, answer, ), {]
[), ;, addAnswer, (, answer, ,, false, ), ;, }, public, void, addConsecutiveAnswer, (, Answer, answer, ), {, addAnswer, (]
[addAnswer, (, answer, ,, false, ), ;, }, public, void, addConsecutiveAnswer, (, Answer, answer, ), {, addAnswer, (, answer, ,]
[answer, ,, true, ), ;, }, public, void, addAnswer, (, Answer, answer, ,, boolean, isConsecutive, ), {, Invocation, invocation, =]
[answer, ,, true, ), ;, }, public, void, addAnswer, (, Answer, answer, ,, boolean, isConsecutive, ), {, Invocation, invocation, =]
[public, void, addAnswer, (, Answer, answer, ,, boolean, isConsecutive, ), {, Invocation, invocation, =, invocationForStubbing, ., getInvocation, (, ), ;]
[public, void, addAnswer, (, Answer, answer, ,, boolean, isConsecutive, ), {, Invocation, invocation, =, invocationForStubbing, ., getInvocation, (, ), ;]
[Answer, answer, ,, boolean, isConsecutive, ), {, Invocation, invocation, =, invocationForStubbing, ., getInvocation, (, ), ;, mockingProgress, ., stubbingCompleted, (]
[{, Invocation, invocation, =, invocationForStubbing, ., getInvocation, (, ), ;, mockingProgress, ., stubbingCompleted, (, invocation, ), ;, AnswersValidator, answersValidator, =]
[., getInvocation, (, ), ;, mockingProgress, ., stubbingCompleted, (, invocation, ), ;, AnswersValidator, answersValidator, =, new, AnswersValidator, (, ), ;]
[., getInvocation, (, ), ;, mockingProgress, ., stubbingCompleted, (, invocation, ), ;, AnswersValidator, answersValidator, =, new, AnswersValidator, (, ), ;]
[;, mockingProgress, ., stubbingCompleted, (, invocation, ), ;, AnswersValidator, answersValidator, =, new, AnswersValidator, (, ), ;, answersValidator, ., validate, (]
[., stubbingCompleted, (, invocation, ), ;, AnswersValidator, answersValidator, =, new, AnswersValidator, (, ), ;, answersValidator, ., validate, (, answer, ,]
[;, AnswersValidator, answersValidator, =, new, AnswersValidator, (, ), ;, answersValidator, ., validate, (, answer, ,, invocation, ), ;, synchronized, (]
[AnswersValidator, (, ), ;, answersValidator, ., validate, (, answer, ,, invocation, ), ;, synchronized, (, stubbed, ), {, if, (]
[;, answersValidator, ., validate, (, answer, ,, invocation, ), ;, synchronized, (, stubbed, ), {, if, (, isConsecutive, ), {]
[;, answersValidator, ., validate, (, answer, ,, invocation, ), ;, synchronized, (, stubbed, ), {, if, (, isConsecutive, ), {]
[;, answersValidator, ., validate, (, answer, ,, invocation, ), ;, synchronized, (, stubbed, ), {, if, (, isConsecutive, ), {]
[), ;, synchronized, (, stubbed, ), {, if, (, isConsecutive, ), {, stubbed, ., getFirst, (, ), ., addAnswer, (]
[{, if, (, isConsecutive, ), {, stubbed, ., getFirst, (, ), ., addAnswer, (, answer, ), ;, }, else, {]
[{, if, (, isConsecutive, ), {, stubbed, ., getFirst, (, ), ., addAnswer, (, answer, ), ;, }, else, {]
[), {, stubbed, ., getFirst, (, ), ., addAnswer, (, answer, ), ;, }, else, {, stubbed, ., addFirst, (]
[., getFirst, (, ), ., addAnswer, (, answer, ), ;, }, else, {, stubbed, ., addFirst, (, new, StubbedInvocationMatcher, (]
[(, ), ., addAnswer, (, answer, ), ;, }, else, {, stubbed, ., addFirst, (, new, StubbedInvocationMatcher, (, invocationForStubbing, ,]
[(, invocationForStubbing, ,, answer, ), ), ;, }, }, }, Object, answerTo, (, Invocation, invocation, ), throws, Throwable, {, return]
[(, invocationForStubbing, ,, answer, ), ), ;, }, }, }, Object, answerTo, (, Invocation, invocation, ), throws, Throwable, {, return]
[,, answer, ), ), ;, }, }, }, Object, answerTo, (, Invocation, invocation, ), throws, Throwable, {, return, findAnswerFor, (]
[}, }, }, Object, answerTo, (, Invocation, invocation, ), throws, Throwable, {, return, findAnswerFor, (, invocation, ), ., answer, (]
[(, invocation, ), ., answer, (, invocation, ), ;, }, public, StubbedInvocationMatcher, findAnswerFor, (, Invocation, invocation, ), {, synchronized, (]
[;, }, public, StubbedInvocationMatcher, findAnswerFor, (, Invocation, invocation, ), {, synchronized, (, stubbed, ), {, for, (, StubbedInvocationMatcher, s, :]
[(, Invocation, invocation, ), {, synchronized, (, stubbed, ), {, for, (, StubbedInvocationMatcher, s, :, stubbed, ), {, if, (]
[(, Invocation, invocation, ), {, synchronized, (, stubbed, ), {, for, (, StubbedInvocationMatcher, s, :, stubbed, ), {, if, (]
[{, synchronized, (, stubbed, ), {, for, (, StubbedInvocationMatcher, s, :, stubbed, ), {, if, (, s, ., matches, (]
[), {, for, (, StubbedInvocationMatcher, s, :, stubbed, ), {, if, (, s, ., matches, (, invocation, ), ), {]
[), {, for, (, StubbedInvocationMatcher, s, :, stubbed, ), {, if, (, s, ., matches, (, invocation, ), ), {]
[StubbedInvocationMatcher, s, :, stubbed, ), {, if, (, s, ., matches, (, invocation, ), ), {, s, ., markStubUsed, (]
[stubbed, ), {, if, (, s, ., matches, (, invocation, ), ), {, s, ., markStubUsed, (, invocation, ), ;]
[stubbed, ), {, if, (, s, ., matches, (, invocation, ), ), {, s, ., markStubUsed, (, invocation, ), ;]
[(, s, ., matches, (, invocation, ), ), {, s, ., markStubUsed, (, invocation, ), ;, invocation, ., markStubbed, (]
[matches, (, invocation, ), ), {, s, ., markStubUsed, (, invocation, ), ;, invocation, ., markStubbed, (, new, StubInfoImpl, (]
[{, s, ., markStubUsed, (, invocation, ), ;, invocation, ., markStubbed, (, new, StubInfoImpl, (, s, ), ), ;, return]
[), ;, invocation, ., markStubbed, (, new, StubInfoImpl, (, s, ), ), ;, return, s, ;, }, }, }, return]
[), ;, return, s, ;, }, }, }, return, null, ;, }, public, void, addAnswerForVoidMethod, (, Answer, answer, ), {]
[), ;, return, s, ;, }, }, }, return, null, ;, }, public, void, addAnswerForVoidMethod, (, Answer, answer, ), {]
[;, }, }, }, return, null, ;, }, public, void, addAnswerForVoidMethod, (, Answer, answer, ), {, answersForStubbing, ., add, (]
[{, answersForStubbing, ., add, (, answer, ), ;, }, public, void, setAnswersForStubbing, (, List, <, Answer, >, answers, ), {]
[{, answersForStubbing, ., add, (, answer, ), ;, }, public, void, setAnswersForStubbing, (, List, <, Answer, >, answers, ), {]
[(, answer, ), ;, }, public, void, setAnswersForStubbing, (, List, <, Answer, >, answers, ), {, answersForStubbing, ., addAll, (]
[Answer, >, answers, ), {, answersForStubbing, ., addAll, (, answers, ), ;, }, public, boolean, hasAnswersForStubbing, (, ), {, return]
[>, answers, ), {, answersForStubbing, ., addAll, (, answers, ), ;, }, public, boolean, hasAnswersForStubbing, (, ), {, return, !]
[>, answers, ), {, answersForStubbing, ., addAll, (, answers, ), ;, }, public, boolean, hasAnswersForStubbing, (, ), {, return, !]
[hasAnswersForStubbing, (, ), {, return, !, answersForStubbing, ., isEmpty, (, ), ;, }, public, boolean, hasInvocationForPotentialStubbing, (, ), {, return]
[(, ), {, return, !, answersForStubbing, ., isEmpty, (, ), ;, }, public, boolean, hasInvocationForPotentialStubbing, (, ), {, return, !]
[(, ), {, return, !, answersForStubbing, ., isEmpty, (, ), ;, }, public, boolean, hasInvocationForPotentialStubbing, (, ), {, return, !]
[(, ), {, return, !, registeredInvocations, ., isEmpty, (, ), ;, }, public, void, setMethodForStubbing, (, InvocationMatcher, invocation, ), {]
[{, return, !, registeredInvocations, ., isEmpty, (, ), ;, }, public, void, setMethodForStubbing, (, InvocationMatcher, invocation, ), {, invocationForStubbing, =]
[registeredInvocations, ., isEmpty, (, ), ;, }, public, void, setMethodForStubbing, (, InvocationMatcher, invocation, ), {, invocationForStubbing, =, invocation, ;, assert]
[setMethodForStubbing, (, InvocationMatcher, invocation, ), {, invocationForStubbing, =, invocation, ;, assert, hasAnswersForStubbing, (, ), ;, for, (, int, i, =]
[InvocationMatcher, invocation, ), {, invocationForStubbing, =, invocation, ;, assert, hasAnswersForStubbing, (, ), ;, for, (, int, i, =, 0, ;]
[InvocationMatcher, invocation, ), {, invocationForStubbing, =, invocation, ;, assert, hasAnswersForStubbing, (, ), ;, for, (, int, i, =, 0, ;]
[), {, invocationForStubbing, =, invocation, ;, assert, hasAnswersForStubbing, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[), {, invocationForStubbing, =, invocation, ;, assert, hasAnswersForStubbing, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[assert, hasAnswersForStubbing, (, ), ;, for, (, int, i, =, 0, ;, i, <, answersForStubbing, ., size, (, ), ;]
[assert, hasAnswersForStubbing, (, ), ;, for, (, int, i, =, 0, ;, i, <, answersForStubbing, ., size, (, ), ;]
[;, for, (, int, i, =, 0, ;, i, <, answersForStubbing, ., size, (, ), ;, i, ++, ), {]
[(, int, i, =, 0, ;, i, <, answersForStubbing, ., size, (, ), ;, i, ++, ), {, addAnswer, (]
[(, int, i, =, 0, ;, i, <, answersForStubbing, ., size, (, ), ;, i, ++, ), {, addAnswer, (]
[0, ;, i, <, answersForStubbing, ., size, (, ), ;, i, ++, ), {, addAnswer, (, answersForStubbing, ., get, (]
[<, answersForStubbing, ., size, (, ), ;, i, ++, ), {, addAnswer, (, answersForStubbing, ., get, (, i, ), ,]
[<, answersForStubbing, ., size, (, ), ;, i, ++, ), {, addAnswer, (, answersForStubbing, ., get, (, i, ), ,]
[., size, (, ), ;, i, ++, ), {, addAnswer, (, answersForStubbing, ., get, (, i, ), ,, i, !=]
[;, i, ++, ), {, addAnswer, (, answersForStubbing, ., get, (, i, ), ,, i, !=, 0, ), ;, }]
[;, i, ++, ), {, addAnswer, (, answersForStubbing, ., get, (, i, ), ,, i, !=, 0, ), ;, }]
[0, ), ;, }, answersForStubbing, ., clear, (, ), ;, }, @, Override, public, String, toString, (, ), {, return]
[0, ), ;, }, answersForStubbing, ., clear, (, ), ;, }, @, Override, public, String, toString, (, ), {, return]
[;, }, answersForStubbing, ., clear, (, ), ;, }, @, Override, public, String, toString, (, ), {, return, "invocationForStubbing: ", +]
[toString, (, ), {, return, "invocationForStubbing: ", +, invocationForStubbing, ;, }, public, List, <, Invocation, >, getInvocations, (, ), {, return]
[toString, (, ), {, return, "invocationForStubbing: ", +, invocationForStubbing, ;, }, public, List, <, Invocation, >, getInvocations, (, ), {, return]
[), {, return, registeredInvocations, ., getAll, (, ), ;, }, public, List, <, StubbedInvocationMatcher, >, getStubbedInvocations, (, ), {, return]
[public, List, <, StubbedInvocationMatcher, >, getStubbedInvocations, (, ), {, return, stubbed, ;, }, public, Object, invokedMock, (, ), {, return]
[public, List, <, StubbedInvocationMatcher, >, getStubbedInvocations, (, ), {, return, stubbed, ;, }, public, Object, invokedMock, (, ), {, return]
[public, List, <, StubbedInvocationMatcher, >, getStubbedInvocations, (, ), {, return, stubbed, ;, }, public, Object, invokedMock, (, ), {, return]
[{, return, invocationForStubbing, ., getInvocation, (, ), ., getMock, (, ), ;, }, public, InvocationMatcher, getInvocationForStubbing, (, ), {, return]
[}, public, InvocationMatcher, getInvocationForStubbing, (, ), {, return, invocationForStubbing, ;, }, private, RegisteredInvocations, createRegisteredInvocations, (, MockCreationSettings, mockSettings, ), {, return]
[}, public, InvocationMatcher, getInvocationForStubbing, (, ), {, return, invocationForStubbing, ;, }, private, RegisteredInvocations, createRegisteredInvocations, (, MockCreationSettings, mockSettings, ), {, return]
[}, public, InvocationMatcher, getInvocationForStubbing, (, ), {, return, invocationForStubbing, ;, }, private, RegisteredInvocations, createRegisteredInvocations, (, MockCreationSettings, mockSettings, ), {, return]
[{, return, invocationForStubbing, ;, }, private, RegisteredInvocations, createRegisteredInvocations, (, MockCreationSettings, mockSettings, ), {, return, mockSettings, ., isStubOnly, (, ), ?]
[private, RegisteredInvocations, createRegisteredInvocations, (, MockCreationSettings, mockSettings, ), {, return, mockSettings, ., isStubOnly, (, ), ?, new, SingleRegisteredInvocation, (, ), :]
