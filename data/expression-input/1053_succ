[;, private, Block, centerBlock, ;, private, Block, topBlock, ;, private, Block, bottomBlock, ;, private, Block, leftBlock, ;, private, Block, rightBlock]
[), {, this, ., centerBlock, =, block, ;, }, else, {, RectangleEdge, edge, =, (, RectangleEdge, ), key, ;, if]
[==, null, ), {, this, ., centerBlock, =, block, ;, }, else, {, RectangleEdge, edge, =, (, RectangleEdge, ), key]
[), {, this, ., centerBlock, =, block, ;, }, else, {, RectangleEdge, edge, =, (, RectangleEdge, ), key, ;, if]
[=, block, ;, }, else, {, RectangleEdge, edge, =, (, RectangleEdge, ), key, ;, if, (, edge, ==, RectangleEdge, .]
[., centerBlock, =, block, ;, }, else, {, RectangleEdge, edge, =, (, RectangleEdge, ), key, ;, if, (, edge, ==]
[;, }, else, {, RectangleEdge, edge, =, (, RectangleEdge, ), key, ;, if, (, edge, ==, RectangleEdge, ., TOP, )]
[;, if, (, edge, ==, RectangleEdge, ., TOP, ), {, this, ., topBlock, =, block, ;, }, else, if, (]
[;, if, (, edge, ==, RectangleEdge, ., TOP, ), {, this, ., topBlock, =, block, ;, }, else, if, (]
[), {, this, ., topBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., BOTTOM, ), {, this]
[==, RectangleEdge, ., TOP, ), {, this, ., topBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, .]
[), {, this, ., topBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., BOTTOM, ), {, this]
[., TOP, ), {, this, ., topBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., BOTTOM, )]
[=, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., BOTTOM, ), {, this, ., bottomBlock, =, block, ;]
[., topBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., BOTTOM, ), {, this, ., bottomBlock, =]
[;, }, else, if, (, edge, ==, RectangleEdge, ., BOTTOM, ), {, this, ., bottomBlock, =, block, ;, }, else]
[), {, this, ., bottomBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., LEFT, ), {, this]
[==, RectangleEdge, ., BOTTOM, ), {, this, ., bottomBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, .]
[), {, this, ., bottomBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., LEFT, ), {, this]
[., BOTTOM, ), {, this, ., bottomBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., LEFT, )]
[=, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., LEFT, ), {, this, ., leftBlock, =, block, ;]
[., bottomBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., LEFT, ), {, this, ., leftBlock, =]
[;, }, else, if, (, edge, ==, RectangleEdge, ., LEFT, ), {, this, ., leftBlock, =, block, ;, }, else]
[), {, this, ., leftBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ), {, this]
[==, RectangleEdge, ., LEFT, ), {, this, ., leftBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, .]
[), {, this, ., leftBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ), {, this]
[., LEFT, ), {, this, ., leftBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, )]
[=, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ), {, this, ., rightBlock, =, block, ;]
[., leftBlock, =, block, ;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ), {, this, ., rightBlock, =]
[;, }, else, if, (, edge, ==, RectangleEdge, ., RIGHT, ), {, this, ., rightBlock, =, block, ;, }, }]
[), {, this, ., rightBlock, =, block, ;, }, }, }, public, Size2D, arrange, (, BlockContainer, container, ,, Graphics2D, g2]
[==, RectangleEdge, ., RIGHT, ), {, this, ., rightBlock, =, block, ;, }, }, }, public, Size2D, arrange, (, BlockContainer]
[), {, this, ., rightBlock, =, block, ;, }, }, }, public, Size2D, arrange, (, BlockContainer, container, ,, Graphics2D, g2]
[., RIGHT, ), {, this, ., rightBlock, =, block, ;, }, }, }, public, Size2D, arrange, (, BlockContainer, container, ,]
[=, block, ;, }, }, }, public, Size2D, arrange, (, BlockContainer, container, ,, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {]
[., rightBlock, =, block, ;, }, }, }, public, Size2D, arrange, (, BlockContainer, container, ,, Graphics2D, g2, ,, RectangleConstraint, constraint]
[;, }, }, }, public, Size2D, arrange, (, BlockContainer, container, ,, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, RectangleConstraint, contentConstraint]
[;, Size2D, contentSize, =, null, ;, LengthConstraintType, w, =, contentConstraint, ., getWidthConstraintType, (, ), ;, LengthConstraintType, h, =, contentConstraint, .]
[., toContentConstraint, (, constraint, ), ;, Size2D, contentSize, =, null, ;, LengthConstraintType, w, =, contentConstraint, ., getWidthConstraintType, (, ), ;]
[), ;, Size2D, contentSize, =, null, ;, LengthConstraintType, w, =, contentConstraint, ., getWidthConstraintType, (, ), ;, LengthConstraintType, h, =, contentConstraint]
[;, LengthConstraintType, w, =, contentConstraint, ., getWidthConstraintType, (, ), ;, LengthConstraintType, h, =, contentConstraint, ., getHeightConstraintType, (, ), ;, if]
[;, LengthConstraintType, h, =, contentConstraint, ., getHeightConstraintType, (, ), ;, if, (, w, ==, LengthConstraintType, ., NONE, ), {, if]
[., getWidthConstraintType, (, ), ;, LengthConstraintType, h, =, contentConstraint, ., getHeightConstraintType, (, ), ;, if, (, w, ==, LengthConstraintType, .]
[;, if, (, w, ==, LengthConstraintType, ., NONE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize]
[., getHeightConstraintType, (, ), ;, if, (, w, ==, LengthConstraintType, ., NONE, ), {, if, (, h, ==, LengthConstraintType, .]
[), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeNN, (, container, ,, g2, ), ;]
[==, LengthConstraintType, ., NONE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeNN, (, container]
[), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeNN, (, container, ,, g2, ), ;]
[., NONE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeNN, (, container, ,, g2]
[), {, contentSize, =, arrangeNN, (, container, ,, g2, ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED]
[==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeNN, (, container, ,, g2, ), ;, }, else, if, (, h]
[), {, contentSize, =, arrangeNN, (, container, ,, g2, ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED]
[., NONE, ), {, contentSize, =, arrangeNN, (, container, ,, g2, ), ;, }, else, if, (, h, ==, LengthConstraintType]
[=, arrangeNN, (, container, ,, g2, ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw]
[;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }]
[,, g2, ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not implemented."]
[), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;]
[), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {]
[==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType]
[), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {]
[., FIXED, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE]
[;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }]
[), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;]
[), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., FIXED, )]
[==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, }, else, if, (, w, ==]
[), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., FIXED, )]
[., RANGE, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, .]
[;, }, }, else, if, (, w, ==, LengthConstraintType, ., FIXED, ), {, if, (, h, ==, LengthConstraintType, ., NONE]
[), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., FIXED, ), {, if, (, h, ==, LengthConstraintType, .]
[), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeFN, (, container, ,, g2, ,, constraint]
[==, LengthConstraintType, ., FIXED, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeFN, (, container]
[), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeFN, (, container, ,, g2, ,, constraint]
[., FIXED, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeFN, (, container, ,, g2]
[), {, contentSize, =, arrangeFN, (, container, ,, g2, ,, constraint, ., getWidth, (, ), ), ;, }, else, if]
[==, LengthConstraintType, ., NONE, ), {, contentSize, =, arrangeFN, (, container, ,, g2, ,, constraint, ., getWidth, (, ), )]
[), {, contentSize, =, arrangeFN, (, container, ,, g2, ,, constraint, ., getWidth, (, ), ), ;, }, else, if]
[., NONE, ), {, contentSize, =, arrangeFN, (, container, ,, g2, ,, constraint, ., getWidth, (, ), ), ;, }]
[=, arrangeFN, (, container, ,, g2, ,, constraint, ., getWidth, (, ), ), ;, }, else, if, (, h, ==]
[;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, contentSize, =, arrangeFF, (, container, ,, g2, ,]
[,, g2, ,, constraint, ., getWidth, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, )]
[,, constraint, ., getWidth, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, contentSize]
[), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, contentSize, =, arrangeFF, (, container, ,, g2]
[., getWidth, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, contentSize, =, arrangeFF]
[), {, contentSize, =, arrangeFF, (, container, ,, g2, ,, constraint, ), ;, }, else, if, (, h, ==, LengthConstraintType]
[==, LengthConstraintType, ., FIXED, ), {, contentSize, =, arrangeFF, (, container, ,, g2, ,, constraint, ), ;, }, else, if]
[), {, contentSize, =, arrangeFF, (, container, ,, g2, ,, constraint, ), ;, }, else, if, (, h, ==, LengthConstraintType]
[., FIXED, ), {, contentSize, =, arrangeFF, (, container, ,, g2, ,, constraint, ), ;, }, else, if, (, h]
[=, arrangeFF, (, container, ,, g2, ,, constraint, ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, )]
[;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeFR, (, container, ,, g2, ,]
[,, g2, ,, constraint, ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeFR]
[,, constraint, ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeFR, (, container]
[), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeFR, (, container, ,, g2]
[), {, contentSize, =, arrangeFR, (, container, ,, g2, ,, constraint, ), ;, }, }, else, if, (, w, ==]
[==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeFR, (, container, ,, g2, ,, constraint, ), ;, }, }, else]
[), {, contentSize, =, arrangeFR, (, container, ,, g2, ,, constraint, ), ;, }, }, else, if, (, w, ==]
[., RANGE, ), {, contentSize, =, arrangeFR, (, container, ,, g2, ,, constraint, ), ;, }, }, else, if, (]
[=, arrangeFR, (, container, ,, g2, ,, constraint, ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., RANGE]
[;, }, }, else, if, (, w, ==, LengthConstraintType, ., RANGE, ), {, if, (, h, ==, LengthConstraintType, ., NONE]
[,, g2, ,, constraint, ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., RANGE, ), {, if, (]
[,, constraint, ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., RANGE, ), {, if, (, h, ==]
[), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., RANGE, ), {, if, (, h, ==, LengthConstraintType, .]
[), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else]
[==, LengthConstraintType, ., RANGE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (, "Not implemented."]
[), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else]
[., RANGE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;]
[), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {]
[==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType]
[), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {]
[., NONE, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED]
[;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }]
[), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;]
[), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {]
[==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType]
[), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {]
[., FIXED, ), {, throw, new, RuntimeException, (, "Not implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE]
[;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeRR, (, container, ,, constraint, .]
[), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeRR, (, container, ,, constraint]
[), {, contentSize, =, arrangeRR, (, container, ,, constraint, ., getWidthRange, (, ), ,, constraint, ., getHeightRange, (, ), ,]
[==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeRR, (, container, ,, constraint, ., getWidthRange, (, ), ,, constraint, .]
[), {, contentSize, =, arrangeRR, (, container, ,, constraint, ., getWidthRange, (, ), ,, constraint, ., getHeightRange, (, ), ,]
[., RANGE, ), {, contentSize, =, arrangeRR, (, container, ,, constraint, ., getWidthRange, (, ), ,, constraint, ., getHeightRange, (]
[=, arrangeRR, (, container, ,, constraint, ., getWidthRange, (, ), ,, constraint, ., getHeightRange, (, ), ,, g2, ), ;]
[;, }, }, return, new, Size2D, (, container, ., calculateTotalWidth, (, contentSize, ., getWidth, (, ), ), ,, container, .]
[,, constraint, ., getWidthRange, (, ), ,, constraint, ., getHeightRange, (, ), ,, g2, ), ;, }, }, return, new]
[,, constraint, ., getHeightRange, (, ), ,, g2, ), ;, }, }, return, new, Size2D, (, container, ., calculateTotalWidth, (]
[., getWidthRange, (, ), ,, constraint, ., getHeightRange, (, ), ,, g2, ), ;, }, }, return, new, Size2D, (]
[,, g2, ), ;, }, }, return, new, Size2D, (, container, ., calculateTotalWidth, (, contentSize, ., getWidth, (, ), )]
[., getHeightRange, (, ), ,, g2, ), ;, }, }, return, new, Size2D, (, container, ., calculateTotalWidth, (, contentSize, .]
[), ;, }, }, return, new, Size2D, (, container, ., calculateTotalWidth, (, contentSize, ., getWidth, (, ), ), ,, container]
[;, }, protected, Size2D, arrangeNN, (, BlockContainer, container, ,, Graphics2D, g2, ), {, double, [, ], w, =, new, double]
[,, container, ., calculateTotalHeight, (, contentSize, ., getHeight, (, ), ), ), ;, }, protected, Size2D, arrangeNN, (, BlockContainer, container]
[., calculateTotalWidth, (, contentSize, ., getWidth, (, ), ), ,, container, ., calculateTotalHeight, (, contentSize, ., getHeight, (, ), )]
[), ,, container, ., calculateTotalHeight, (, contentSize, ., getHeight, (, ), ), ), ;, }, protected, Size2D, arrangeNN, (, BlockContainer]
[., getWidth, (, ), ), ,, container, ., calculateTotalHeight, (, contentSize, ., getHeight, (, ), ), ), ;, }, protected]
[), ;, }, protected, Size2D, arrangeNN, (, BlockContainer, container, ,, Graphics2D, g2, ), {, double, [, ], w, =, new]
[., calculateTotalHeight, (, contentSize, ., getHeight, (, ), ), ), ;, }, protected, Size2D, arrangeNN, (, BlockContainer, container, ,, Graphics2D]
[), ), ;, }, protected, Size2D, arrangeNN, (, BlockContainer, container, ,, Graphics2D, g2, ), {, double, [, ], w, =]
[., getHeight, (, ), ), ), ;, }, protected, Size2D, arrangeNN, (, BlockContainer, container, ,, Graphics2D, g2, ), {, double]
[;, double, [, ], h, =, new, double, [, 5, ], ;, if, (, this, ., topBlock, !=, null, )]
[], ;, double, [, ], h, =, new, double, [, 5, ], ;, if, (, this, ., topBlock, !=, null]
[;, if, (, this, ., topBlock, !=, null, ), {, Size2D, size, =, this, ., topBlock, ., arrange, (, g2]
[], ;, if, (, this, ., topBlock, !=, null, ), {, Size2D, size, =, this, ., topBlock, ., arrange, (]
[), {, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, []
[!=, null, ), {, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;]
[., topBlock, !=, null, ), {, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE]
[), {, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, []
[;, w, [, 0, ], =, size, ., width, ;, h, [, 0, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, [, 0, ], =, size, ., width, ;, h]
[., topBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, [, 0, ], =, size, ., width]
[,, RectangleConstraint, ., NONE, ), ;, w, [, 0, ], =, size, ., width, ;, h, [, 0, ], =]
[), ;, w, [, 0, ], =, size, ., width, ;, h, [, 0, ], =, size, ., height, ;]
[., NONE, ), ;, w, [, 0, ], =, size, ., width, ;, h, [, 0, ], =, size, .]
[=, size, ., width, ;, h, [, 0, ], =, size, ., height, ;, }, if, (, this, ., bottomBlock]
[[, 0, ], =, size, ., width, ;, h, [, 0, ], =, size, ., height, ;, }, if, (]
[], =, size, ., width, ;, h, [, 0, ], =, size, ., height, ;, }, if, (, this, .]
[;, h, [, 0, ], =, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {]
[., width, ;, h, [, 0, ], =, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null]
[=, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {, Size2D, size, =, this, .]
[[, 0, ], =, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {, Size2D, size]
[], =, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {, Size2D, size, =, this]
[;, }, if, (, this, ., bottomBlock, !=, null, ), {, Size2D, size, =, this, ., bottomBlock, ., arrange, (]
[., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {, Size2D, size, =, this, ., bottomBlock, .]
[), {, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, []
[!=, null, ), {, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;]
[., bottomBlock, !=, null, ), {, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE]
[), {, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, []
[;, w, [, 1, ], =, size, ., width, ;, h, [, 1, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, [, 1, ], =, size, ., width, ;, h]
[., bottomBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, [, 1, ], =, size, ., width]
[,, RectangleConstraint, ., NONE, ), ;, w, [, 1, ], =, size, ., width, ;, h, [, 1, ], =]
[), ;, w, [, 1, ], =, size, ., width, ;, h, [, 1, ], =, size, ., height, ;]
[., NONE, ), ;, w, [, 1, ], =, size, ., width, ;, h, [, 1, ], =, size, .]
[=, size, ., width, ;, h, [, 1, ], =, size, ., height, ;, }, if, (, this, ., leftBlock]
[[, 1, ], =, size, ., width, ;, h, [, 1, ], =, size, ., height, ;, }, if, (]
[], =, size, ., width, ;, h, [, 1, ], =, size, ., height, ;, }, if, (, this, .]
[;, h, [, 1, ], =, size, ., height, ;, }, if, (, this, ., leftBlock, !=, null, ), {]
[., width, ;, h, [, 1, ], =, size, ., height, ;, }, if, (, this, ., leftBlock, !=, null]
[=, size, ., height, ;, }, if, (, this, ., leftBlock, !=, null, ), {, Size2D, size, =, this, .]
[[, 1, ], =, size, ., height, ;, }, if, (, this, ., leftBlock, !=, null, ), {, Size2D, size]
[], =, size, ., height, ;, }, if, (, this, ., leftBlock, !=, null, ), {, Size2D, size, =, this]
[;, }, if, (, this, ., leftBlock, !=, null, ), {, Size2D, size, =, this, ., leftBlock, ., arrange, (]
[., height, ;, }, if, (, this, ., leftBlock, !=, null, ), {, Size2D, size, =, this, ., leftBlock, .]
[), {, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, []
[!=, null, ), {, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;]
[., leftBlock, !=, null, ), {, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE]
[), {, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, []
[;, w, [, 2, ], =, size, ., width, ;, h, [, 2, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, [, 2, ], =, size, ., width, ;, h]
[., leftBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, [, 2, ], =, size, ., width]
[,, RectangleConstraint, ., NONE, ), ;, w, [, 2, ], =, size, ., width, ;, h, [, 2, ], =]
[), ;, w, [, 2, ], =, size, ., width, ;, h, [, 2, ], =, size, ., height, ;]
[., NONE, ), ;, w, [, 2, ], =, size, ., width, ;, h, [, 2, ], =, size, .]
[=, size, ., width, ;, h, [, 2, ], =, size, ., height, ;, }, if, (, this, ., rightBlock]
[[, 2, ], =, size, ., width, ;, h, [, 2, ], =, size, ., height, ;, }, if, (]
[], =, size, ., width, ;, h, [, 2, ], =, size, ., height, ;, }, if, (, this, .]
[;, h, [, 2, ], =, size, ., height, ;, }, if, (, this, ., rightBlock, !=, null, ), {]
[., width, ;, h, [, 2, ], =, size, ., height, ;, }, if, (, this, ., rightBlock, !=, null]
[=, size, ., height, ;, }, if, (, this, ., rightBlock, !=, null, ), {, Size2D, size, =, this, .]
[[, 2, ], =, size, ., height, ;, }, if, (, this, ., rightBlock, !=, null, ), {, Size2D, size]
[], =, size, ., height, ;, }, if, (, this, ., rightBlock, !=, null, ), {, Size2D, size, =, this]
[;, }, if, (, this, ., rightBlock, !=, null, ), {, Size2D, size, =, this, ., rightBlock, ., arrange, (]
[., height, ;, }, if, (, this, ., rightBlock, !=, null, ), {, Size2D, size, =, this, ., rightBlock, .]
[), {, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, []
[!=, null, ), {, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;]
[., rightBlock, !=, null, ), {, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE]
[), {, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, []
[;, w, [, 3, ], =, size, ., width, ;, h, [, 3, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, [, 3, ], =, size, ., width, ;, h]
[., rightBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, [, 3, ], =, size, ., width]
[,, RectangleConstraint, ., NONE, ), ;, w, [, 3, ], =, size, ., width, ;, h, [, 3, ], =]
[), ;, w, [, 3, ], =, size, ., width, ;, h, [, 3, ], =, size, ., height, ;]
[., NONE, ), ;, w, [, 3, ], =, size, ., width, ;, h, [, 3, ], =, size, .]
[=, size, ., width, ;, h, [, 3, ], =, size, ., height, ;, }, h, [, 2, ], =]
[[, 3, ], =, size, ., width, ;, h, [, 3, ], =, size, ., height, ;, }, h, []
[], =, size, ., width, ;, h, [, 3, ], =, size, ., height, ;, }, h, [, 2, ]]
[;, h, [, 3, ], =, size, ., height, ;, }, h, [, 2, ], =, Math, ., max, (]
[., width, ;, h, [, 3, ], =, size, ., height, ;, }, h, [, 2, ], =, Math, .]
[=, size, ., height, ;, }, h, [, 2, ], =, Math, ., max, (, h, [, 2, ], ,]
[[, 3, ], =, size, ., height, ;, }, h, [, 2, ], =, Math, ., max, (, h, []
[], =, size, ., height, ;, }, h, [, 2, ], =, Math, ., max, (, h, [, 2, ]]
[;, }, h, [, 2, ], =, Math, ., max, (, h, [, 2, ], ,, h, [, 3, ]]
[., height, ;, }, h, [, 2, ], =, Math, ., max, (, h, [, 2, ], ,, h, []
[=, Math, ., max, (, h, [, 2, ], ,, h, [, 3, ], ), ;, h, [, 3, ]]
[[, 2, ], =, Math, ., max, (, h, [, 2, ], ,, h, [, 3, ], ), ;, h]
[], =, Math, ., max, (, h, [, 2, ], ,, h, [, 3, ], ), ;, h, [, 3]
[;, h, [, 3, ], =, h, [, 2, ], ;, if, (, this, ., centerBlock, !=, null, ), {]
[., max, (, h, [, 2, ], ,, h, [, 3, ], ), ;, h, [, 3, ], =, h]
[,, h, [, 3, ], ), ;, h, [, 3, ], =, h, [, 2, ], ;, if, (, this]
[[, 2, ], ,, h, [, 3, ], ), ;, h, [, 3, ], =, h, [, 2, ], ;]
[], ,, h, [, 3, ], ), ;, h, [, 3, ], =, h, [, 2, ], ;, if, (]
[), ;, h, [, 3, ], =, h, [, 2, ], ;, if, (, this, ., centerBlock, !=, null, )]
[[, 3, ], ), ;, h, [, 3, ], =, h, [, 2, ], ;, if, (, this, ., centerBlock]
[], ), ;, h, [, 3, ], =, h, [, 2, ], ;, if, (, this, ., centerBlock, !=, null]
[=, h, [, 2, ], ;, if, (, this, ., centerBlock, !=, null, ), {, Size2D, size, =, this, .]
[[, 3, ], =, h, [, 2, ], ;, if, (, this, ., centerBlock, !=, null, ), {, Size2D, size]
[], =, h, [, 2, ], ;, if, (, this, ., centerBlock, !=, null, ), {, Size2D, size, =, this]
[;, if, (, this, ., centerBlock, !=, null, ), {, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2]
[[, 2, ], ;, if, (, this, ., centerBlock, !=, null, ), {, Size2D, size, =, this, ., centerBlock, .]
[], ;, if, (, this, ., centerBlock, !=, null, ), {, Size2D, size, =, this, ., centerBlock, ., arrange, (]
[), {, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, []
[!=, null, ), {, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;]
[., centerBlock, !=, null, ), {, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE]
[), {, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, []
[;, w, [, 4, ], =, size, ., width, ;, h, [, 4, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, [, 4, ], =, size, ., width, ;, h]
[., centerBlock, ., arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;, w, [, 4, ], =, size, ., width]
[,, RectangleConstraint, ., NONE, ), ;, w, [, 4, ], =, size, ., width, ;, h, [, 4, ], =]
[), ;, w, [, 4, ], =, size, ., width, ;, h, [, 4, ], =, size, ., height, ;]
[., NONE, ), ;, w, [, 4, ], =, size, ., width, ;, h, [, 4, ], =, size, .]
[=, size, ., width, ;, h, [, 4, ], =, size, ., height, ;, }, double, width, =, Math, .]
[[, 4, ], =, size, ., width, ;, h, [, 4, ], =, size, ., height, ;, }, double, width]
[], =, size, ., width, ;, h, [, 4, ], =, size, ., height, ;, }, double, width, =, Math]
[;, h, [, 4, ], =, size, ., height, ;, }, double, width, =, Math, ., max, (, w, []
[., width, ;, h, [, 4, ], =, size, ., height, ;, }, double, width, =, Math, ., max, (]
[=, size, ., height, ;, }, double, width, =, Math, ., max, (, w, [, 0, ], ,, Math, .]
[[, 4, ], =, size, ., height, ;, }, double, width, =, Math, ., max, (, w, [, 0, ]]
[], =, size, ., height, ;, }, double, width, =, Math, ., max, (, w, [, 0, ], ,, Math]
[;, }, double, width, =, Math, ., max, (, w, [, 0, ], ,, Math, ., max, (, w, []
[., height, ;, }, double, width, =, Math, ., max, (, w, [, 0, ], ,, Math, ., max, (]
[;, double, centerHeight, =, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h, [, 3]
[., max, (, w, [, 0, ], ,, Math, ., max, (, w, [, 1, ], ,, w, [, 2]
[,, Math, ., max, (, w, [, 1, ], ,, w, [, 2, ], +, w, [, 4, ], +]
[[, 0, ], ,, Math, ., max, (, w, [, 1, ], ,, w, [, 2, ], +, w, []
[], ,, Math, ., max, (, w, [, 1, ], ,, w, [, 2, ], +, w, [, 4, ]]
[), ;, double, centerHeight, =, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h, []
[., max, (, w, [, 1, ], ,, w, [, 2, ], +, w, [, 4, ], +, w, []
[,, w, [, 2, ], +, w, [, 4, ], +, w, [, 3, ], ), ), ;, double, centerHeight]
[[, 1, ], ,, w, [, 2, ], +, w, [, 4, ], +, w, [, 3, ], ), )]
[], ,, w, [, 2, ], +, w, [, 4, ], +, w, [, 3, ], ), ), ;, double]
[), ), ;, double, centerHeight, =, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h]
[+, w, [, 3, ], ), ), ;, double, centerHeight, =, Math, ., max, (, h, [, 2, ], ,]
[+, w, [, 4, ], +, w, [, 3, ], ), ), ;, double, centerHeight, =, Math, ., max, (]
[[, 2, ], +, w, [, 4, ], +, w, [, 3, ], ), ), ;, double, centerHeight, =, Math]
[], +, w, [, 4, ], +, w, [, 3, ], ), ), ;, double, centerHeight, =, Math, ., max]
[+, w, [, 3, ], ), ), ;, double, centerHeight, =, Math, ., max, (, h, [, 2, ], ,]
[[, 4, ], +, w, [, 3, ], ), ), ;, double, centerHeight, =, Math, ., max, (, h, []
[], +, w, [, 3, ], ), ), ;, double, centerHeight, =, Math, ., max, (, h, [, 2, ]]
[), ), ;, double, centerHeight, =, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h]
[[, 3, ], ), ), ;, double, centerHeight, =, Math, ., max, (, h, [, 2, ], ,, Math, .]
[], ), ), ;, double, centerHeight, =, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (]
[;, double, height, =, h, [, 0, ], +, h, [, 1, ], +, centerHeight, ;, if, (, this, .]
[., max, (, h, [, 2, ], ,, Math, ., max, (, h, [, 3, ], ,, h, [, 4]
[,, Math, ., max, (, h, [, 3, ], ,, h, [, 4, ], ), ), ;, double, height, =]
[[, 2, ], ,, Math, ., max, (, h, [, 3, ], ,, h, [, 4, ], ), ), ;]
[], ,, Math, ., max, (, h, [, 3, ], ,, h, [, 4, ], ), ), ;, double, height]
[), ;, double, height, =, h, [, 0, ], +, h, [, 1, ], +, centerHeight, ;, if, (, this]
[., max, (, h, [, 3, ], ,, h, [, 4, ], ), ), ;, double, height, =, h, []
[,, h, [, 4, ], ), ), ;, double, height, =, h, [, 0, ], +, h, [, 1, ]]
[[, 3, ], ,, h, [, 4, ], ), ), ;, double, height, =, h, [, 0, ], +, h]
[], ,, h, [, 4, ], ), ), ;, double, height, =, h, [, 0, ], +, h, [, 1]
[), ), ;, double, height, =, h, [, 0, ], +, h, [, 1, ], +, centerHeight, ;, if, (]
[[, 4, ], ), ), ;, double, height, =, h, [, 0, ], +, h, [, 1, ], +, centerHeight]
[], ), ), ;, double, height, =, h, [, 0, ], +, h, [, 1, ], +, centerHeight, ;, if]
[;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double]
[+, centerHeight, ;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D]
[+, h, [, 1, ], +, centerHeight, ;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock]
[[, 0, ], +, h, [, 1, ], +, centerHeight, ;, if, (, this, ., topBlock, !=, null, ), {]
[], +, h, [, 1, ], +, centerHeight, ;, if, (, this, ., topBlock, !=, null, ), {, this, .]
[+, centerHeight, ;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D]
[[, 1, ], +, centerHeight, ;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds]
[], +, centerHeight, ;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new]
[;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double]
[), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, width, ,, h]
[!=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, width]
[., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0]
[), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, width, ,, h]
[;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, .]
[., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, width, ,, h, [, 0, ], ), )]
[., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, width, ,, h, [, 0, ]]
[), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D]
[,, 0.0, ,, width, ,, h, [, 0, ], ), ), ;, }, if, (, this, ., bottomBlock, !=, null]
[,, width, ,, h, [, 0, ], ), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {]
[,, h, [, 0, ], ), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, .]
[), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (, new]
[[, 0, ], ), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, .]
[], ), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (]
[), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, height, -, h, [, 1]
[!=, null, ), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, height, -, h]
[., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, height]
[), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, height, -, h, [, 1]
[;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, .]
[., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, height, -, h, [, 1, ], ,, width, ,, h]
[., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, height, -, h, [, 1, ], ,, width]
[), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D]
[,, height, -, h, [, 1, ], ,, width, ,, h, [, 1, ], ), ), ;, }, if, (]
[,, width, ,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {]
[-, h, [, 1, ], ,, width, ,, h, [, 1, ], ), ), ;, }, if, (, this, .]
[,, width, ,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {]
[[, 1, ], ,, width, ,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=]
[], ,, width, ,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, )]
[,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, .]
[), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (, new]
[[, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, .]
[], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (]
[), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], ,]
[!=, null, ), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0]
[., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h]
[), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], ,]
[;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, .]
[., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], ,, w, [, 2, ], ,]
[., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], ,, w, [, 2]
[), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D]
[,, h, [, 0, ], ,, w, [, 2, ], ,, centerHeight, ), ), ;, }, if, (, this, .]
[,, w, [, 2, ], ,, centerHeight, ), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {]
[[, 0, ], ,, w, [, 2, ], ,, centerHeight, ), ), ;, }, if, (, this, ., rightBlock, !=]
[], ,, w, [, 2, ], ,, centerHeight, ), ), ;, }, if, (, this, ., rightBlock, !=, null, )]
[,, centerHeight, ), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds]
[[, 2, ], ,, centerHeight, ), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, .]
[], ,, centerHeight, ), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, .]
[), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (, new]
[), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, width, -, w, [, 3, ], ,]
[!=, null, ), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, width, -, w, [, 3]
[., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, width, -, w]
[), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, width, -, w, [, 3, ], ,]
[;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, .]
[., setBounds, (, new, Rectangle2D, ., Double, (, width, -, w, [, 3, ], ,, h, [, 0, ], ,]
[., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, width, -, w, [, 3, ], ,, h, [, 0]
[), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D]
[,, h, [, 0, ], ,, w, [, 3, ], ,, centerHeight, ), ), ;, }, if, (, this, .]
[-, w, [, 3, ], ,, h, [, 0, ], ,, w, [, 3, ], ,, centerHeight, ), ), ;]
[,, h, [, 0, ], ,, w, [, 3, ], ,, centerHeight, ), ), ;, }, if, (, this, .]
[[, 3, ], ,, h, [, 0, ], ,, w, [, 3, ], ,, centerHeight, ), ), ;, }, if]
[], ,, h, [, 0, ], ,, w, [, 3, ], ,, centerHeight, ), ), ;, }, if, (, this]
[,, w, [, 3, ], ,, centerHeight, ), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {]
[[, 0, ], ,, w, [, 3, ], ,, centerHeight, ), ), ;, }, if, (, this, ., centerBlock, !=]
[], ,, w, [, 3, ], ,, centerHeight, ), ), ;, }, if, (, this, ., centerBlock, !=, null, )]
[,, centerHeight, ), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds]
[[, 3, ], ,, centerHeight, ), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, .]
[], ,, centerHeight, ), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, .]
[), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (, new]
[), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,, h, []
[!=, null, ), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,]
[., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2]
[), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,, h, []
[;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected, Size2D, arrangeFR, (, BlockContainer, container, ,, Graphics2D]
[., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,, h, [, 0, ], ,, width, -]
[., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,, h, [, 0, ], ,]
[), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected, Size2D, arrangeFR, (, BlockContainer, container, ,]
[,, h, [, 0, ], ,, width, -, w, [, 2, ], -, w, [, 3, ], ,, centerHeight, )]
[[, 2, ], ,, h, [, 0, ], ,, width, -, w, [, 2, ], -, w, [, 3, ]]
[], ,, h, [, 0, ], ,, width, -, w, [, 2, ], -, w, [, 3, ], ,, centerHeight]
[,, width, -, w, [, 2, ], -, w, [, 3, ], ,, centerHeight, ), ), ;, }, return, new]
[[, 0, ], ,, width, -, w, [, 2, ], -, w, [, 3, ], ,, centerHeight, ), ), ;]
[], ,, width, -, w, [, 2, ], -, w, [, 3, ], ,, centerHeight, ), ), ;, }, return]
[,, centerHeight, ), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected, Size2D, arrangeFR, (]
[-, w, [, 3, ], ,, centerHeight, ), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;]
[-, w, [, 2, ], -, w, [, 3, ], ,, centerHeight, ), ), ;, }, return, new, Size2D, (]
[-, w, [, 3, ], ,, centerHeight, ), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;]
[[, 2, ], -, w, [, 3, ], ,, centerHeight, ), ), ;, }, return, new, Size2D, (, width, ,]
[], -, w, [, 3, ], ,, centerHeight, ), ), ;, }, return, new, Size2D, (, width, ,, height, )]
[,, centerHeight, ), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected, Size2D, arrangeFR, (]
[[, 3, ], ,, centerHeight, ), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected]
[], ,, centerHeight, ), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected, Size2D, arrangeFR]
[), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected, Size2D, arrangeFR, (, BlockContainer, container]
[;, }, protected, Size2D, arrangeFR, (, BlockContainer, container, ,, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, size1, =, arrangeFN]
[,, height, ), ;, }, protected, Size2D, arrangeFR, (, BlockContainer, container, ,, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D]
[), ;, }, protected, Size2D, arrangeFR, (, BlockContainer, container, ,, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, size1, =]
[;, if, (, constraint, ., getHeightRange, (, ), ., contains, (, size1, ., getHeight, (, ), ), ), {, return]
[,, g2, ,, constraint, ., getWidth, (, ), ), ;, if, (, constraint, ., getHeightRange, (, ), ., contains, (]
[,, constraint, ., getWidth, (, ), ), ;, if, (, constraint, ., getHeightRange, (, ), ., contains, (, size1, .]
[), ;, if, (, constraint, ., getHeightRange, (, ), ., contains, (, size1, ., getHeight, (, ), ), ), {]
[., getWidth, (, ), ), ;, if, (, constraint, ., getHeightRange, (, ), ., contains, (, size1, ., getHeight, (]
[), {, return, size1, ;, }, else, {, double, h, =, constraint, ., getHeightRange, (, ), ., constrain, (, size1]
[., contains, (, size1, ., getHeight, (, ), ), ), {, return, size1, ;, }, else, {, double, h, =]
[., getHeightRange, (, ), ., contains, (, size1, ., getHeight, (, ), ), ), {, return, size1, ;, }, else]
[), ), {, return, size1, ;, }, else, {, double, h, =, constraint, ., getHeightRange, (, ), ., constrain, (]
[., getHeight, (, ), ), ), {, return, size1, ;, }, else, {, double, h, =, constraint, ., getHeightRange, (]
[;, }, else, {, double, h, =, constraint, ., getHeightRange, (, ), ., constrain, (, size1, ., getHeight, (, )]
[;, RectangleConstraint, c2, =, constraint, ., toFixedHeight, (, h, ), ;, return, arrange, (, container, ,, g2, ,, c2, )]
[., constrain, (, size1, ., getHeight, (, ), ), ;, RectangleConstraint, c2, =, constraint, ., toFixedHeight, (, h, ), ;]
[., getHeightRange, (, ), ., constrain, (, size1, ., getHeight, (, ), ), ;, RectangleConstraint, c2, =, constraint, ., toFixedHeight]
[), ;, RectangleConstraint, c2, =, constraint, ., toFixedHeight, (, h, ), ;, return, arrange, (, container, ,, g2, ,, c2]
[., getHeight, (, ), ), ;, RectangleConstraint, c2, =, constraint, ., toFixedHeight, (, h, ), ;, return, arrange, (, container]
[;, return, arrange, (, container, ,, g2, ,, c2, ), ;, }, }, protected, Size2D, arrangeFN, (, BlockContainer, container, ,]
[., toFixedHeight, (, h, ), ;, return, arrange, (, container, ,, g2, ,, c2, ), ;, }, }, protected, Size2D]
[), ;, return, arrange, (, container, ,, g2, ,, c2, ), ;, }, }, protected, Size2D, arrangeFN, (, BlockContainer, container]
[;, }, }, protected, Size2D, arrangeFN, (, BlockContainer, container, ,, Graphics2D, g2, ,, double, width, ), {, double, [, ]]
[,, g2, ,, c2, ), ;, }, }, protected, Size2D, arrangeFN, (, BlockContainer, container, ,, Graphics2D, g2, ,, double, width]
[,, c2, ), ;, }, }, protected, Size2D, arrangeFN, (, BlockContainer, container, ,, Graphics2D, g2, ,, double, width, ), {]
[), ;, }, }, protected, Size2D, arrangeFN, (, BlockContainer, container, ,, Graphics2D, g2, ,, double, width, ), {, double, []
[;, double, [, ], h, =, new, double, [, 5, ], ;, RectangleConstraint, c1, =, new, RectangleConstraint, (, width, ,]
[], ;, double, [, ], h, =, new, double, [, 5, ], ;, RectangleConstraint, c1, =, new, RectangleConstraint, (, width]
[;, RectangleConstraint, c1, =, new, RectangleConstraint, (, width, ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType]
[], ;, RectangleConstraint, c1, =, new, RectangleConstraint, (, width, ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null, ,]
[;, if, (, this, ., topBlock, !=, null, ), {, Size2D, size, =, this, ., topBlock, ., arrange, (, g2]
[,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, if, (, this, .]
[,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, if, (, this, ., topBlock, !=]
[,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, if, (, this, ., topBlock, !=, null, ), {, Size2D]
[., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, if, (, this, ., topBlock, !=, null, )]
[,, null, ,, LengthConstraintType, ., NONE, ), ;, if, (, this, ., topBlock, !=, null, ), {, Size2D, size, =]
[,, LengthConstraintType, ., NONE, ), ;, if, (, this, ., topBlock, !=, null, ), {, Size2D, size, =, this, .]
[), ;, if, (, this, ., topBlock, !=, null, ), {, Size2D, size, =, this, ., topBlock, ., arrange, (]
[., NONE, ), ;, if, (, this, ., topBlock, !=, null, ), {, Size2D, size, =, this, ., topBlock, .]
[), {, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, c1, ), ;, w, [, 0, ]]
[!=, null, ), {, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, c1, ), ;, w, []
[., topBlock, !=, null, ), {, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, c1, ), ;]
[), {, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, c1, ), ;, w, [, 0, ]]
[;, w, [, 0, ], =, size, ., width, ;, h, [, 0, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, c1, ), ;, w, [, 0, ], =, size, ., width, ;, h, [, 0]
[., topBlock, ., arrange, (, g2, ,, c1, ), ;, w, [, 0, ], =, size, ., width, ;, h]
[,, c1, ), ;, w, [, 0, ], =, size, ., width, ;, h, [, 0, ], =, size, .]
[), ;, w, [, 0, ], =, size, ., width, ;, h, [, 0, ], =, size, ., height, ;]
[=, size, ., width, ;, h, [, 0, ], =, size, ., height, ;, }, if, (, this, ., bottomBlock]
[[, 0, ], =, size, ., width, ;, h, [, 0, ], =, size, ., height, ;, }, if, (]
[], =, size, ., width, ;, h, [, 0, ], =, size, ., height, ;, }, if, (, this, .]
[;, h, [, 0, ], =, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {]
[., width, ;, h, [, 0, ], =, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null]
[=, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {, Size2D, size, =, this, .]
[[, 0, ], =, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {, Size2D, size]
[], =, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {, Size2D, size, =, this]
[;, }, if, (, this, ., bottomBlock, !=, null, ), {, Size2D, size, =, this, ., bottomBlock, ., arrange, (]
[., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {, Size2D, size, =, this, ., bottomBlock, .]
[), {, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c1, ), ;, w, [, 1, ]]
[!=, null, ), {, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c1, ), ;, w, []
[., bottomBlock, !=, null, ), {, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c1, ), ;]
[), {, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c1, ), ;, w, [, 1, ]]
[;, w, [, 1, ], =, size, ., width, ;, h, [, 1, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, c1, ), ;, w, [, 1, ], =, size, ., width, ;, h, [, 1]
[., bottomBlock, ., arrange, (, g2, ,, c1, ), ;, w, [, 1, ], =, size, ., width, ;, h]
[,, c1, ), ;, w, [, 1, ], =, size, ., width, ;, h, [, 1, ], =, size, .]
[), ;, w, [, 1, ], =, size, ., width, ;, h, [, 1, ], =, size, ., height, ;]
[=, size, ., width, ;, h, [, 1, ], =, size, ., height, ;, }, RectangleConstraint, c2, =, new, RectangleConstraint]
[[, 1, ], =, size, ., width, ;, h, [, 1, ], =, size, ., height, ;, }, RectangleConstraint, c2]
[], =, size, ., width, ;, h, [, 1, ], =, size, ., height, ;, }, RectangleConstraint, c2, =, new]
[;, h, [, 1, ], =, size, ., height, ;, }, RectangleConstraint, c2, =, new, RectangleConstraint, (, 0.0, ,, new]
[., width, ;, h, [, 1, ], =, size, ., height, ;, }, RectangleConstraint, c2, =, new, RectangleConstraint, (, 0.0]
[=, size, ., height, ;, }, RectangleConstraint, c2, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, 0.0, ,, width]
[[, 1, ], =, size, ., height, ;, }, RectangleConstraint, c2, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (]
[], =, size, ., height, ;, }, RectangleConstraint, c2, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, 0.0, ,]
[;, }, RectangleConstraint, c2, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, 0.0, ,, width, ), ,, LengthConstraintType, .]
[., height, ;, }, RectangleConstraint, c2, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, 0.0, ,, width, ), ,]
[;, if, (, this, ., leftBlock, !=, null, ), {, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2]
[,, new, Range, (, 0.0, ,, width, ), ,, LengthConstraintType, ., RANGE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE]
[,, LengthConstraintType, ., RANGE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, if, (, this, ., leftBlock, !=]
[,, width, ), ,, LengthConstraintType, ., RANGE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, if, (, this]
[), ,, LengthConstraintType, ., RANGE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, if, (, this, ., leftBlock]
[,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, if, (, this, ., leftBlock, !=, null, ), {, Size2D]
[., RANGE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, if, (, this, ., leftBlock, !=, null, )]
[,, null, ,, LengthConstraintType, ., NONE, ), ;, if, (, this, ., leftBlock, !=, null, ), {, Size2D, size, =]
[,, LengthConstraintType, ., NONE, ), ;, if, (, this, ., leftBlock, !=, null, ), {, Size2D, size, =, this, .]
[), ;, if, (, this, ., leftBlock, !=, null, ), {, Size2D, size, =, this, ., leftBlock, ., arrange, (]
[., NONE, ), ;, if, (, this, ., leftBlock, !=, null, ), {, Size2D, size, =, this, ., leftBlock, .]
[), {, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, c2, ), ;, w, [, 2, ]]
[!=, null, ), {, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, c2, ), ;, w, []
[., leftBlock, !=, null, ), {, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, c2, ), ;]
[), {, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, c2, ), ;, w, [, 2, ]]
[;, w, [, 2, ], =, size, ., width, ;, h, [, 2, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, c2, ), ;, w, [, 2, ], =, size, ., width, ;, h, [, 2]
[., leftBlock, ., arrange, (, g2, ,, c2, ), ;, w, [, 2, ], =, size, ., width, ;, h]
[,, c2, ), ;, w, [, 2, ], =, size, ., width, ;, h, [, 2, ], =, size, .]
[), ;, w, [, 2, ], =, size, ., width, ;, h, [, 2, ], =, size, ., height, ;]
[=, size, ., width, ;, h, [, 2, ], =, size, ., height, ;, }, if, (, this, ., rightBlock]
[[, 2, ], =, size, ., width, ;, h, [, 2, ], =, size, ., height, ;, }, if, (]
[], =, size, ., width, ;, h, [, 2, ], =, size, ., height, ;, }, if, (, this, .]
[;, h, [, 2, ], =, size, ., height, ;, }, if, (, this, ., rightBlock, !=, null, ), {]
[., width, ;, h, [, 2, ], =, size, ., height, ;, }, if, (, this, ., rightBlock, !=, null]
[=, size, ., height, ;, }, if, (, this, ., rightBlock, !=, null, ), {, double, maxW, =, Math, .]
[[, 2, ], =, size, ., height, ;, }, if, (, this, ., rightBlock, !=, null, ), {, double, maxW]
[], =, size, ., height, ;, }, if, (, this, ., rightBlock, !=, null, ), {, double, maxW, =, Math]
[;, }, if, (, this, ., rightBlock, !=, null, ), {, double, maxW, =, Math, ., max, (, width, -]
[., height, ;, }, if, (, this, ., rightBlock, !=, null, ), {, double, maxW, =, Math, ., max, (]
[), {, double, maxW, =, Math, ., max, (, width, -, w, [, 2, ], ,, 0.0, ), ;, RectangleConstraint]
[!=, null, ), {, double, maxW, =, Math, ., max, (, width, -, w, [, 2, ], ,, 0.0, )]
[., rightBlock, !=, null, ), {, double, maxW, =, Math, ., max, (, width, -, w, [, 2, ], ,]
[), {, double, maxW, =, Math, ., max, (, width, -, w, [, 2, ], ,, 0.0, ), ;, RectangleConstraint]
[;, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, Math, ., min, (, w, [, 2, ]]
[., max, (, width, -, w, [, 2, ], ,, 0.0, ), ;, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0]
[,, 0.0, ), ;, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, Math, ., min, (, w]
[-, w, [, 2, ], ,, 0.0, ), ;, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (]
[,, 0.0, ), ;, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, Math, ., min, (, w]
[[, 2, ], ,, 0.0, ), ;, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, Math, .]
[], ,, 0.0, ), ;, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, Math, ., min, (]
[), ;, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, Math, ., min, (, w, [, 2]
[;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, c3, ), ;, w, [, 3, ], =]
[,, new, Range, (, Math, ., min, (, w, [, 2, ], ,, maxW, ), ,, maxW, ), ,, LengthConstraintType]
[,, LengthConstraintType, ., RANGE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =, this, ., rightBlock]
[,, maxW, ), ,, LengthConstraintType, ., RANGE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =]
[., min, (, w, [, 2, ], ,, maxW, ), ,, maxW, ), ,, LengthConstraintType, ., RANGE, ,, 0.0, ,]
[,, maxW, ), ,, maxW, ), ,, LengthConstraintType, ., RANGE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;]
[[, 2, ], ,, maxW, ), ,, maxW, ), ,, LengthConstraintType, ., RANGE, ,, 0.0, ,, null, ,, LengthConstraintType, .]
[], ,, maxW, ), ,, maxW, ), ,, LengthConstraintType, ., RANGE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, )]
[), ,, maxW, ), ,, LengthConstraintType, ., RANGE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size]
[), ,, LengthConstraintType, ., RANGE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =, this, .]
[,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2]
[., RANGE, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =, this, ., rightBlock, ., arrange]
[,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, c3]
[,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, c3, ), ;]
[), ;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, c3, ), ;, w, [, 3, ]]
[., NONE, ), ;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, c3, ), ;, w, []
[;, w, [, 3, ], =, size, ., width, ;, h, [, 3, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, c3, ), ;, w, [, 3, ], =, size, ., width, ;, h, [, 3]
[., rightBlock, ., arrange, (, g2, ,, c3, ), ;, w, [, 3, ], =, size, ., width, ;, h]
[,, c3, ), ;, w, [, 3, ], =, size, ., width, ;, h, [, 3, ], =, size, .]
[), ;, w, [, 3, ], =, size, ., width, ;, h, [, 3, ], =, size, ., height, ;]
[=, size, ., width, ;, h, [, 3, ], =, size, ., height, ;, }, h, [, 2, ], =]
[[, 3, ], =, size, ., width, ;, h, [, 3, ], =, size, ., height, ;, }, h, []
[], =, size, ., width, ;, h, [, 3, ], =, size, ., height, ;, }, h, [, 2, ]]
[;, h, [, 3, ], =, size, ., height, ;, }, h, [, 2, ], =, Math, ., max, (]
[., width, ;, h, [, 3, ], =, size, ., height, ;, }, h, [, 2, ], =, Math, .]
[=, size, ., height, ;, }, h, [, 2, ], =, Math, ., max, (, h, [, 2, ], ,]
[[, 3, ], =, size, ., height, ;, }, h, [, 2, ], =, Math, ., max, (, h, []
[], =, size, ., height, ;, }, h, [, 2, ], =, Math, ., max, (, h, [, 2, ]]
[;, }, h, [, 2, ], =, Math, ., max, (, h, [, 2, ], ,, h, [, 3, ]]
[., height, ;, }, h, [, 2, ], =, Math, ., max, (, h, [, 2, ], ,, h, []
[=, Math, ., max, (, h, [, 2, ], ,, h, [, 3, ], ), ;, h, [, 3, ]]
[[, 2, ], =, Math, ., max, (, h, [, 2, ], ,, h, [, 3, ], ), ;, h]
[], =, Math, ., max, (, h, [, 2, ], ,, h, [, 3, ], ), ;, h, [, 3]
[;, h, [, 3, ], =, h, [, 2, ], ;, if, (, this, ., centerBlock, !=, null, ), {]
[., max, (, h, [, 2, ], ,, h, [, 3, ], ), ;, h, [, 3, ], =, h]
[,, h, [, 3, ], ), ;, h, [, 3, ], =, h, [, 2, ], ;, if, (, this]
[[, 2, ], ,, h, [, 3, ], ), ;, h, [, 3, ], =, h, [, 2, ], ;]
[], ,, h, [, 3, ], ), ;, h, [, 3, ], =, h, [, 2, ], ;, if, (]
[), ;, h, [, 3, ], =, h, [, 2, ], ;, if, (, this, ., centerBlock, !=, null, )]
[[, 3, ], ), ;, h, [, 3, ], =, h, [, 2, ], ;, if, (, this, ., centerBlock]
[], ), ;, h, [, 3, ], =, h, [, 2, ], ;, if, (, this, ., centerBlock, !=, null]
[=, h, [, 2, ], ;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint]
[[, 3, ], =, h, [, 2, ], ;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c4]
[], =, h, [, 2, ], ;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c4, =, new]
[;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, width, -, w, []
[[, 2, ], ;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, width]
[], ;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, width, -, w]
[), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, width, -, w, [, 2, ], -, w, [, 3, ], ,]
[!=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, width, -, w, [, 2, ], -, w, [, 3]
[., centerBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, width, -, w, [, 2, ], -, w]
[), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, width, -, w, [, 2, ], -, w, [, 3, ], ,]
[;, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2, ,, c4, ), ;, w, [, 4, ], =]
[,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =, this]
[-, w, [, 3, ], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, )]
[-, w, [, 2, ], -, w, [, 3, ], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null]
[-, w, [, 3, ], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, )]
[[, 2, ], -, w, [, 3, ], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType]
[], -, w, [, 3, ], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE]
[,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =, this]
[[, 3, ], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D]
[], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =]
[,, LengthConstraintType, ., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =, this, ., centerBlock]
[,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2]
[., FIXED, ,, 0.0, ,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =, this, ., centerBlock, ., arrange]
[,, null, ,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2, ,, c4]
[,, LengthConstraintType, ., NONE, ), ;, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2, ,, c4, ), ;]
[), ;, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2, ,, c4, ), ;, w, [, 4, ]]
[., NONE, ), ;, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2, ,, c4, ), ;, w, []
[;, w, [, 4, ], =, size, ., width, ;, h, [, 4, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, c4, ), ;, w, [, 4, ], =, size, ., width, ;, h, [, 4]
[., centerBlock, ., arrange, (, g2, ,, c4, ), ;, w, [, 4, ], =, size, ., width, ;, h]
[,, c4, ), ;, w, [, 4, ], =, size, ., width, ;, h, [, 4, ], =, size, .]
[), ;, w, [, 4, ], =, size, ., width, ;, h, [, 4, ], =, size, ., height, ;]
[=, size, ., width, ;, h, [, 4, ], =, size, ., height, ;, }, double, height, =, h, []
[[, 4, ], =, size, ., width, ;, h, [, 4, ], =, size, ., height, ;, }, double, height]
[], =, size, ., width, ;, h, [, 4, ], =, size, ., height, ;, }, double, height, =, h]
[;, h, [, 4, ], =, size, ., height, ;, }, double, height, =, h, [, 0, ], +, h]
[., width, ;, h, [, 4, ], =, size, ., height, ;, }, double, height, =, h, [, 0, ]]
[=, size, ., height, ;, }, double, height, =, h, [, 0, ], +, h, [, 1, ], +, Math]
[[, 4, ], =, size, ., height, ;, }, double, height, =, h, [, 0, ], +, h, [, 1]
[], =, size, ., height, ;, }, double, height, =, h, [, 0, ], +, h, [, 1, ], +]
[;, }, double, height, =, h, [, 0, ], +, h, [, 1, ], +, Math, ., max, (, h]
[., height, ;, }, double, height, =, h, [, 0, ], +, h, [, 1, ], +, Math, ., max]
[;, return, arrange, (, container, ,, g2, ,, new, RectangleConstraint, (, width, ,, height, ), ), ;, }, protected, Size2D]
[+, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h, [, 3, ], ,, h]
[+, h, [, 1, ], +, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h]
[[, 0, ], +, h, [, 1, ], +, Math, ., max, (, h, [, 2, ], ,, Math, .]
[], +, h, [, 1, ], +, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (]
[+, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h, [, 3, ], ,, h]
[[, 1, ], +, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h, [, 3]
[], +, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h, [, 3, ], ,]
[;, return, arrange, (, container, ,, g2, ,, new, RectangleConstraint, (, width, ,, height, ), ), ;, }, protected, Size2D]
[., max, (, h, [, 2, ], ,, Math, ., max, (, h, [, 3, ], ,, h, [, 4]
[,, Math, ., max, (, h, [, 3, ], ,, h, [, 4, ], ), ), ;, return, arrange, (]
[[, 2, ], ,, Math, ., max, (, h, [, 3, ], ,, h, [, 4, ], ), ), ;]
[], ,, Math, ., max, (, h, [, 3, ], ,, h, [, 4, ], ), ), ;, return, arrange]
[), ;, return, arrange, (, container, ,, g2, ,, new, RectangleConstraint, (, width, ,, height, ), ), ;, }, protected]
[., max, (, h, [, 3, ], ,, h, [, 4, ], ), ), ;, return, arrange, (, container, ,]
[,, h, [, 4, ], ), ), ;, return, arrange, (, container, ,, g2, ,, new, RectangleConstraint, (, width, ,]
[[, 3, ], ,, h, [, 4, ], ), ), ;, return, arrange, (, container, ,, g2, ,, new, RectangleConstraint]
[], ,, h, [, 4, ], ), ), ;, return, arrange, (, container, ,, g2, ,, new, RectangleConstraint, (, width]
[), ), ;, return, arrange, (, container, ,, g2, ,, new, RectangleConstraint, (, width, ,, height, ), ), ;, }]
[[, 4, ], ), ), ;, return, arrange, (, container, ,, g2, ,, new, RectangleConstraint, (, width, ,, height, )]
[], ), ), ;, return, arrange, (, container, ,, g2, ,, new, RectangleConstraint, (, width, ,, height, ), ), ;]
[;, }, protected, Size2D, arrangeRR, (, BlockContainer, container, ,, Range, widthRange, ,, Range, heightRange, ,, Graphics2D, g2, ), {, double]
[,, g2, ,, new, RectangleConstraint, (, width, ,, height, ), ), ;, }, protected, Size2D, arrangeRR, (, BlockContainer, container, ,]
[,, new, RectangleConstraint, (, width, ,, height, ), ), ;, }, protected, Size2D, arrangeRR, (, BlockContainer, container, ,, Range, widthRange]
[), ;, }, protected, Size2D, arrangeRR, (, BlockContainer, container, ,, Range, widthRange, ,, Range, heightRange, ,, Graphics2D, g2, ), {]
[,, height, ), ), ;, }, protected, Size2D, arrangeRR, (, BlockContainer, container, ,, Range, widthRange, ,, Range, heightRange, ,, Graphics2D]
[), ), ;, }, protected, Size2D, arrangeRR, (, BlockContainer, container, ,, Range, widthRange, ,, Range, heightRange, ,, Graphics2D, g2, )]
[;, double, [, ], h, =, new, double, [, 5, ], ;, if, (, this, ., topBlock, !=, null, )]
[], ;, double, [, ], h, =, new, double, [, 5, ], ;, if, (, this, ., topBlock, !=, null]
[;, if, (, this, ., topBlock, !=, null, ), {, RectangleConstraint, c1, =, new, RectangleConstraint, (, widthRange, ,, heightRange, )]
[], ;, if, (, this, ., topBlock, !=, null, ), {, RectangleConstraint, c1, =, new, RectangleConstraint, (, widthRange, ,, heightRange]
[), {, RectangleConstraint, c1, =, new, RectangleConstraint, (, widthRange, ,, heightRange, ), ;, Size2D, size, =, this, ., topBlock, .]
[!=, null, ), {, RectangleConstraint, c1, =, new, RectangleConstraint, (, widthRange, ,, heightRange, ), ;, Size2D, size, =, this, .]
[., topBlock, !=, null, ), {, RectangleConstraint, c1, =, new, RectangleConstraint, (, widthRange, ,, heightRange, ), ;, Size2D, size, =]
[), {, RectangleConstraint, c1, =, new, RectangleConstraint, (, widthRange, ,, heightRange, ), ;, Size2D, size, =, this, ., topBlock, .]
[;, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, c1, ), ;, w, [, 0, ], =]
[,, heightRange, ), ;, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, c1, ), ;, w, []
[), ;, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, c1, ), ;, w, [, 0, ]]
[;, w, [, 0, ], =, size, ., width, ;, h, [, 0, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, c1, ), ;, w, [, 0, ], =, size, ., width, ;, h, [, 0]
[., topBlock, ., arrange, (, g2, ,, c1, ), ;, w, [, 0, ], =, size, ., width, ;, h]
[,, c1, ), ;, w, [, 0, ], =, size, ., width, ;, h, [, 0, ], =, size, .]
[), ;, w, [, 0, ], =, size, ., width, ;, h, [, 0, ], =, size, ., height, ;]
[=, size, ., width, ;, h, [, 0, ], =, size, ., height, ;, }, if, (, this, ., bottomBlock]
[[, 0, ], =, size, ., width, ;, h, [, 0, ], =, size, ., height, ;, }, if, (]
[], =, size, ., width, ;, h, [, 0, ], =, size, ., height, ;, }, if, (, this, .]
[;, h, [, 0, ], =, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {]
[., width, ;, h, [, 0, ], =, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null]
[=, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {, Range, heightRange2, =, Range, .]
[[, 0, ], =, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {, Range, heightRange2]
[], =, size, ., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {, Range, heightRange2, =, Range]
[;, }, if, (, this, ., bottomBlock, !=, null, ), {, Range, heightRange2, =, Range, ., shift, (, heightRange, ,]
[., height, ;, }, if, (, this, ., bottomBlock, !=, null, ), {, Range, heightRange2, =, Range, ., shift, (]
[), {, Range, heightRange2, =, Range, ., shift, (, heightRange, ,, -, h, [, 0, ], ,, false, ), ;]
[!=, null, ), {, Range, heightRange2, =, Range, ., shift, (, heightRange, ,, -, h, [, 0, ], ,, false]
[., bottomBlock, !=, null, ), {, Range, heightRange2, =, Range, ., shift, (, heightRange, ,, -, h, [, 0, ]]
[), {, Range, heightRange2, =, Range, ., shift, (, heightRange, ,, -, h, [, 0, ], ,, false, ), ;]
[;, RectangleConstraint, c2, =, new, RectangleConstraint, (, widthRange, ,, heightRange2, ), ;, Size2D, size, =, this, ., bottomBlock, ., arrange]
[., shift, (, heightRange, ,, -, h, [, 0, ], ,, false, ), ;, RectangleConstraint, c2, =, new, RectangleConstraint, (]
[,, -, h, [, 0, ], ,, false, ), ;, RectangleConstraint, c2, =, new, RectangleConstraint, (, widthRange, ,, heightRange2, )]
[,, false, ), ;, RectangleConstraint, c2, =, new, RectangleConstraint, (, widthRange, ,, heightRange2, ), ;, Size2D, size, =, this, .]
[,, false, ), ;, RectangleConstraint, c2, =, new, RectangleConstraint, (, widthRange, ,, heightRange2, ), ;, Size2D, size, =, this, .]
[[, 0, ], ,, false, ), ;, RectangleConstraint, c2, =, new, RectangleConstraint, (, widthRange, ,, heightRange2, ), ;, Size2D, size]
[], ,, false, ), ;, RectangleConstraint, c2, =, new, RectangleConstraint, (, widthRange, ,, heightRange2, ), ;, Size2D, size, =, this]
[), ;, RectangleConstraint, c2, =, new, RectangleConstraint, (, widthRange, ,, heightRange2, ), ;, Size2D, size, =, this, ., bottomBlock, .]
[;, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c2, ), ;, w, [, 1, ], =]
[,, heightRange2, ), ;, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c2, ), ;, w, []
[), ;, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c2, ), ;, w, [, 1, ]]
[;, w, [, 1, ], =, size, ., width, ;, h, [, 1, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, c2, ), ;, w, [, 1, ], =, size, ., width, ;, h, [, 1]
[., bottomBlock, ., arrange, (, g2, ,, c2, ), ;, w, [, 1, ], =, size, ., width, ;, h]
[,, c2, ), ;, w, [, 1, ], =, size, ., width, ;, h, [, 1, ], =, size, .]
[), ;, w, [, 1, ], =, size, ., width, ;, h, [, 1, ], =, size, ., height, ;]
[=, size, ., width, ;, h, [, 1, ], =, size, ., height, ;, }, Range, heightRange3, =, Range, .]
[[, 1, ], =, size, ., width, ;, h, [, 1, ], =, size, ., height, ;, }, Range, heightRange3]
[], =, size, ., width, ;, h, [, 1, ], =, size, ., height, ;, }, Range, heightRange3, =, Range]
[;, h, [, 1, ], =, size, ., height, ;, }, Range, heightRange3, =, Range, ., shift, (, heightRange, ,]
[., width, ;, h, [, 1, ], =, size, ., height, ;, }, Range, heightRange3, =, Range, ., shift, (]
[=, size, ., height, ;, }, Range, heightRange3, =, Range, ., shift, (, heightRange, ,, -, (, h, [, 0]
[[, 1, ], =, size, ., height, ;, }, Range, heightRange3, =, Range, ., shift, (, heightRange, ,, -, (]
[], =, size, ., height, ;, }, Range, heightRange3, =, Range, ., shift, (, heightRange, ,, -, (, h, []
[;, }, Range, heightRange3, =, Range, ., shift, (, heightRange, ,, -, (, h, [, 0, ], +, h, []
[., height, ;, }, Range, heightRange3, =, Range, ., shift, (, heightRange, ,, -, (, h, [, 0, ], +]
[;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, widthRange, ,, heightRange3, )]
[., shift, (, heightRange, ,, -, (, h, [, 0, ], +, h, [, 1, ], ), ), ;, if]
[,, -, (, h, [, 0, ], +, h, [, 1, ], ), ), ;, if, (, this, ., leftBlock]
[), ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, widthRange, ,, heightRange3]
[), ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, widthRange, ,, heightRange3]
[), ), ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, widthRange, ,]
[+, h, [, 1, ], ), ), ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =]
[[, 0, ], +, h, [, 1, ], ), ), ;, if, (, this, ., leftBlock, !=, null, ), {]
[], +, h, [, 1, ], ), ), ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3]
[), ), ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, widthRange, ,]
[[, 1, ], ), ), ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint]
[], ), ), ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, widthRange]
[), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, widthRange, ,, heightRange3, ), ;, Size2D, size, =, this, ., leftBlock, .]
[!=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, widthRange, ,, heightRange3, ), ;, Size2D, size, =, this, .]
[., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, widthRange, ,, heightRange3, ), ;, Size2D, size, =]
[), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, widthRange, ,, heightRange3, ), ;, Size2D, size, =, this, ., leftBlock, .]
[;, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, c3, ), ;, w, [, 2, ], =]
[,, heightRange3, ), ;, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, c3, ), ;, w, []
[), ;, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, c3, ), ;, w, [, 2, ]]
[;, w, [, 2, ], =, size, ., width, ;, h, [, 2, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, c3, ), ;, w, [, 2, ], =, size, ., width, ;, h, [, 2]
[., leftBlock, ., arrange, (, g2, ,, c3, ), ;, w, [, 2, ], =, size, ., width, ;, h]
[,, c3, ), ;, w, [, 2, ], =, size, ., width, ;, h, [, 2, ], =, size, .]
[), ;, w, [, 2, ], =, size, ., width, ;, h, [, 2, ], =, size, ., height, ;]
[=, size, ., width, ;, h, [, 2, ], =, size, ., height, ;, }, Range, widthRange2, =, Range, .]
[[, 2, ], =, size, ., width, ;, h, [, 2, ], =, size, ., height, ;, }, Range, widthRange2]
[], =, size, ., width, ;, h, [, 2, ], =, size, ., height, ;, }, Range, widthRange2, =, Range]
[;, h, [, 2, ], =, size, ., height, ;, }, Range, widthRange2, =, Range, ., shift, (, widthRange, ,]
[., width, ;, h, [, 2, ], =, size, ., height, ;, }, Range, widthRange2, =, Range, ., shift, (]
[=, size, ., height, ;, }, Range, widthRange2, =, Range, ., shift, (, widthRange, ,, -, w, [, 2, ]]
[[, 2, ], =, size, ., height, ;, }, Range, widthRange2, =, Range, ., shift, (, widthRange, ,, -, w]
[], =, size, ., height, ;, }, Range, widthRange2, =, Range, ., shift, (, widthRange, ,, -, w, [, 2]
[;, }, Range, widthRange2, =, Range, ., shift, (, widthRange, ,, -, w, [, 2, ], ,, false, ), ;]
[., height, ;, }, Range, widthRange2, =, Range, ., shift, (, widthRange, ,, -, w, [, 2, ], ,, false]
[;, if, (, this, ., rightBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, widthRange2, ,, heightRange3, )]
[., shift, (, widthRange, ,, -, w, [, 2, ], ,, false, ), ;, if, (, this, ., rightBlock, !=]
[,, -, w, [, 2, ], ,, false, ), ;, if, (, this, ., rightBlock, !=, null, ), {, RectangleConstraint]
[,, false, ), ;, if, (, this, ., rightBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, widthRange2]
[,, false, ), ;, if, (, this, ., rightBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, widthRange2]
[[, 2, ], ,, false, ), ;, if, (, this, ., rightBlock, !=, null, ), {, RectangleConstraint, c4, =, new]
[], ,, false, ), ;, if, (, this, ., rightBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (]
[), ;, if, (, this, ., rightBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, widthRange2, ,, heightRange3]
[), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, widthRange2, ,, heightRange3, ), ;, Size2D, size, =, this, ., rightBlock, .]
[!=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, widthRange2, ,, heightRange3, ), ;, Size2D, size, =, this, .]
[., rightBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, widthRange2, ,, heightRange3, ), ;, Size2D, size, =]
[), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, widthRange2, ,, heightRange3, ), ;, Size2D, size, =, this, ., rightBlock, .]
[;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, c4, ), ;, w, [, 3, ], =]
[,, heightRange3, ), ;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, c4, ), ;, w, []
[), ;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, c4, ), ;, w, [, 3, ]]
[;, w, [, 3, ], =, size, ., width, ;, h, [, 3, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, c4, ), ;, w, [, 3, ], =, size, ., width, ;, h, [, 3]
[., rightBlock, ., arrange, (, g2, ,, c4, ), ;, w, [, 3, ], =, size, ., width, ;, h]
[,, c4, ), ;, w, [, 3, ], =, size, ., width, ;, h, [, 3, ], =, size, .]
[), ;, w, [, 3, ], =, size, ., width, ;, h, [, 3, ], =, size, ., height, ;]
[=, size, ., width, ;, h, [, 3, ], =, size, ., height, ;, }, h, [, 2, ], =]
[[, 3, ], =, size, ., width, ;, h, [, 3, ], =, size, ., height, ;, }, h, []
[], =, size, ., width, ;, h, [, 3, ], =, size, ., height, ;, }, h, [, 2, ]]
[;, h, [, 3, ], =, size, ., height, ;, }, h, [, 2, ], =, Math, ., max, (]
[., width, ;, h, [, 3, ], =, size, ., height, ;, }, h, [, 2, ], =, Math, .]
[=, size, ., height, ;, }, h, [, 2, ], =, Math, ., max, (, h, [, 2, ], ,]
[[, 3, ], =, size, ., height, ;, }, h, [, 2, ], =, Math, ., max, (, h, []
[], =, size, ., height, ;, }, h, [, 2, ], =, Math, ., max, (, h, [, 2, ]]
[;, }, h, [, 2, ], =, Math, ., max, (, h, [, 2, ], ,, h, [, 3, ]]
[., height, ;, }, h, [, 2, ], =, Math, ., max, (, h, [, 2, ], ,, h, []
[=, Math, ., max, (, h, [, 2, ], ,, h, [, 3, ], ), ;, h, [, 3, ]]
[[, 2, ], =, Math, ., max, (, h, [, 2, ], ,, h, [, 3, ], ), ;, h]
[], =, Math, ., max, (, h, [, 2, ], ,, h, [, 3, ], ), ;, h, [, 3]
[;, h, [, 3, ], =, h, [, 2, ], ;, Range, widthRange3, =, Range, ., shift, (, widthRange, ,]
[., max, (, h, [, 2, ], ,, h, [, 3, ], ), ;, h, [, 3, ], =, h]
[,, h, [, 3, ], ), ;, h, [, 3, ], =, h, [, 2, ], ;, Range, widthRange3, =]
[[, 2, ], ,, h, [, 3, ], ), ;, h, [, 3, ], =, h, [, 2, ], ;]
[], ,, h, [, 3, ], ), ;, h, [, 3, ], =, h, [, 2, ], ;, Range, widthRange3]
[), ;, h, [, 3, ], =, h, [, 2, ], ;, Range, widthRange3, =, Range, ., shift, (, widthRange]
[[, 3, ], ), ;, h, [, 3, ], =, h, [, 2, ], ;, Range, widthRange3, =, Range, .]
[], ), ;, h, [, 3, ], =, h, [, 2, ], ;, Range, widthRange3, =, Range, ., shift, (]
[=, h, [, 2, ], ;, Range, widthRange3, =, Range, ., shift, (, widthRange, ,, -, (, w, [, 2]
[[, 3, ], =, h, [, 2, ], ;, Range, widthRange3, =, Range, ., shift, (, widthRange, ,, -, (]
[], =, h, [, 2, ], ;, Range, widthRange3, =, Range, ., shift, (, widthRange, ,, -, (, w, []
[;, Range, widthRange3, =, Range, ., shift, (, widthRange, ,, -, (, w, [, 2, ], +, w, [, 3]
[[, 2, ], ;, Range, widthRange3, =, Range, ., shift, (, widthRange, ,, -, (, w, [, 2, ], +]
[], ;, Range, widthRange3, =, Range, ., shift, (, widthRange, ,, -, (, w, [, 2, ], +, w, []
[;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c5, =, new, RectangleConstraint, (, widthRange3, ,, heightRange3, )]
[., shift, (, widthRange, ,, -, (, w, [, 2, ], +, w, [, 3, ], ), ,, false, )]
[,, -, (, w, [, 2, ], +, w, [, 3, ], ), ,, false, ), ;, if, (, this]
[,, false, ), ;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c5, =, new, RectangleConstraint, (, widthRange3]
[,, false, ), ;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c5, =, new, RectangleConstraint, (, widthRange3]
[), ,, false, ), ;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c5, =, new, RectangleConstraint, (]
[+, w, [, 3, ], ), ,, false, ), ;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint]
[[, 2, ], +, w, [, 3, ], ), ,, false, ), ;, if, (, this, ., centerBlock, !=, null]
[], +, w, [, 3, ], ), ,, false, ), ;, if, (, this, ., centerBlock, !=, null, ), {]
[), ,, false, ), ;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c5, =, new, RectangleConstraint, (]
[[, 3, ], ), ,, false, ), ;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c5, =]
[], ), ,, false, ), ;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c5, =, new, RectangleConstraint]
[), ;, if, (, this, ., centerBlock, !=, null, ), {, RectangleConstraint, c5, =, new, RectangleConstraint, (, widthRange3, ,, heightRange3]
[), {, RectangleConstraint, c5, =, new, RectangleConstraint, (, widthRange3, ,, heightRange3, ), ;, Size2D, size, =, this, ., centerBlock, .]
[!=, null, ), {, RectangleConstraint, c5, =, new, RectangleConstraint, (, widthRange3, ,, heightRange3, ), ;, Size2D, size, =, this, .]
[., centerBlock, !=, null, ), {, RectangleConstraint, c5, =, new, RectangleConstraint, (, widthRange3, ,, heightRange3, ), ;, Size2D, size, =]
[), {, RectangleConstraint, c5, =, new, RectangleConstraint, (, widthRange3, ,, heightRange3, ), ;, Size2D, size, =, this, ., centerBlock, .]
[;, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2, ,, c5, ), ;, w, [, 4, ], =]
[,, heightRange3, ), ;, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2, ,, c5, ), ;, w, []
[), ;, Size2D, size, =, this, ., centerBlock, ., arrange, (, g2, ,, c5, ), ;, w, [, 4, ]]
[;, w, [, 4, ], =, size, ., width, ;, h, [, 4, ], =, size, ., height, ;, }]
[., arrange, (, g2, ,, c5, ), ;, w, [, 4, ], =, size, ., width, ;, h, [, 4]
[., centerBlock, ., arrange, (, g2, ,, c5, ), ;, w, [, 4, ], =, size, ., width, ;, h]
[,, c5, ), ;, w, [, 4, ], =, size, ., width, ;, h, [, 4, ], =, size, .]
[), ;, w, [, 4, ], =, size, ., width, ;, h, [, 4, ], =, size, ., height, ;]
[=, size, ., width, ;, h, [, 4, ], =, size, ., height, ;, }, double, width, =, Math, .]
[[, 4, ], =, size, ., width, ;, h, [, 4, ], =, size, ., height, ;, }, double, width]
[], =, size, ., width, ;, h, [, 4, ], =, size, ., height, ;, }, double, width, =, Math]
[;, h, [, 4, ], =, size, ., height, ;, }, double, width, =, Math, ., max, (, w, []
[., width, ;, h, [, 4, ], =, size, ., height, ;, }, double, width, =, Math, ., max, (]
[=, size, ., height, ;, }, double, width, =, Math, ., max, (, w, [, 0, ], ,, Math, .]
[[, 4, ], =, size, ., height, ;, }, double, width, =, Math, ., max, (, w, [, 0, ]]
[], =, size, ., height, ;, }, double, width, =, Math, ., max, (, w, [, 0, ], ,, Math]
[;, }, double, width, =, Math, ., max, (, w, [, 0, ], ,, Math, ., max, (, w, []
[., height, ;, }, double, width, =, Math, ., max, (, w, [, 0, ], ,, Math, ., max, (]
[;, double, height, =, h, [, 0, ], +, h, [, 1, ], +, Math, ., max, (, h, []
[., max, (, w, [, 0, ], ,, Math, ., max, (, w, [, 1, ], ,, w, [, 2]
[,, Math, ., max, (, w, [, 1, ], ,, w, [, 2, ], +, w, [, 4, ], +]
[[, 0, ], ,, Math, ., max, (, w, [, 1, ], ,, w, [, 2, ], +, w, []
[], ,, Math, ., max, (, w, [, 1, ], ,, w, [, 2, ], +, w, [, 4, ]]
[), ;, double, height, =, h, [, 0, ], +, h, [, 1, ], +, Math, ., max, (, h]
[., max, (, w, [, 1, ], ,, w, [, 2, ], +, w, [, 4, ], +, w, []
[,, w, [, 2, ], +, w, [, 4, ], +, w, [, 3, ], ), ), ;, double, height]
[[, 1, ], ,, w, [, 2, ], +, w, [, 4, ], +, w, [, 3, ], ), )]
[], ,, w, [, 2, ], +, w, [, 4, ], +, w, [, 3, ], ), ), ;, double]
[), ), ;, double, height, =, h, [, 0, ], +, h, [, 1, ], +, Math, ., max, (]
[+, w, [, 3, ], ), ), ;, double, height, =, h, [, 0, ], +, h, [, 1, ]]
[+, w, [, 4, ], +, w, [, 3, ], ), ), ;, double, height, =, h, [, 0, ]]
[[, 2, ], +, w, [, 4, ], +, w, [, 3, ], ), ), ;, double, height, =, h]
[], +, w, [, 4, ], +, w, [, 3, ], ), ), ;, double, height, =, h, [, 0]
[+, w, [, 3, ], ), ), ;, double, height, =, h, [, 0, ], +, h, [, 1, ]]
[[, 4, ], +, w, [, 3, ], ), ), ;, double, height, =, h, [, 0, ], +, h]
[], +, w, [, 3, ], ), ), ;, double, height, =, h, [, 0, ], +, h, [, 1]
[), ), ;, double, height, =, h, [, 0, ], +, h, [, 1, ], +, Math, ., max, (]
[[, 3, ], ), ), ;, double, height, =, h, [, 0, ], +, h, [, 1, ], +, Math]
[], ), ), ;, double, height, =, h, [, 0, ], +, h, [, 1, ], +, Math, ., max]
[;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double]
[+, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h, [, 3, ], ,, h]
[+, h, [, 1, ], +, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h]
[[, 0, ], +, h, [, 1, ], +, Math, ., max, (, h, [, 2, ], ,, Math, .]
[], +, h, [, 1, ], +, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (]
[+, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h, [, 3, ], ,, h]
[[, 1, ], +, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h, [, 3]
[], +, Math, ., max, (, h, [, 2, ], ,, Math, ., max, (, h, [, 3, ], ,]
[;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double]
[., max, (, h, [, 2, ], ,, Math, ., max, (, h, [, 3, ], ,, h, [, 4]
[,, Math, ., max, (, h, [, 3, ], ,, h, [, 4, ], ), ), ;, if, (, this]
[[, 2, ], ,, Math, ., max, (, h, [, 3, ], ,, h, [, 4, ], ), ), ;]
[], ,, Math, ., max, (, h, [, 3, ], ,, h, [, 4, ], ), ), ;, if, (]
[), ;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, .]
[., max, (, h, [, 3, ], ,, h, [, 4, ], ), ), ;, if, (, this, ., topBlock]
[,, h, [, 4, ], ), ), ;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock]
[[, 3, ], ,, h, [, 4, ], ), ), ;, if, (, this, ., topBlock, !=, null, ), {]
[], ,, h, [, 4, ], ), ), ;, if, (, this, ., topBlock, !=, null, ), {, this, .]
[), ), ;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D]
[[, 4, ], ), ), ;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds]
[], ), ), ;, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new]
[), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, width, ,, h]
[!=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, width]
[., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0]
[), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, width, ,, h]
[;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, .]
[., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, width, ,, h, [, 0, ], ), )]
[., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, width, ,, h, [, 0, ]]
[), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D]
[,, 0.0, ,, width, ,, h, [, 0, ], ), ), ;, }, if, (, this, ., bottomBlock, !=, null]
[,, width, ,, h, [, 0, ], ), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {]
[,, h, [, 0, ], ), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, .]
[), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (, new]
[[, 0, ], ), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, .]
[], ), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (]
[), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, height, -, h, [, 1]
[!=, null, ), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, height, -, h]
[., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, height]
[), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, height, -, h, [, 1]
[;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, .]
[., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, height, -, h, [, 1, ], ,, width, ,, h]
[., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, height, -, h, [, 1, ], ,, width]
[), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D]
[,, height, -, h, [, 1, ], ,, width, ,, h, [, 1, ], ), ), ;, }, if, (]
[,, width, ,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {]
[-, h, [, 1, ], ,, width, ,, h, [, 1, ], ), ), ;, }, if, (, this, .]
[,, width, ,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {]
[[, 1, ], ,, width, ,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=]
[], ,, width, ,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, )]
[,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, .]
[), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (, new]
[[, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, .]
[], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (]
[), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], ,]
[!=, null, ), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0]
[., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h]
[), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], ,]
[;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, .]
[., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], ,, w, [, 2, ], ,]
[., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], ,, w, [, 2]
[), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D]
[,, h, [, 0, ], ,, w, [, 2, ], ,, h, [, 2, ], ), ), ;, }, if]
[,, w, [, 2, ], ,, h, [, 2, ], ), ), ;, }, if, (, this, ., rightBlock, !=]
[[, 0, ], ,, w, [, 2, ], ,, h, [, 2, ], ), ), ;, }, if, (, this]
[], ,, w, [, 2, ], ,, h, [, 2, ], ), ), ;, }, if, (, this, ., rightBlock]
[,, h, [, 2, ], ), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, .]
[[, 2, ], ,, h, [, 2, ], ), ), ;, }, if, (, this, ., rightBlock, !=, null, )]
[], ,, h, [, 2, ], ), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this]
[), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (, new]
[[, 2, ], ), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, .]
[], ), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (]
[), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, width, -, w, [, 3, ], ,]
[!=, null, ), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, width, -, w, [, 3]
[., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, width, -, w]
[), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, width, -, w, [, 3, ], ,]
[;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, .]
[., setBounds, (, new, Rectangle2D, ., Double, (, width, -, w, [, 3, ], ,, h, [, 0, ], ,]
[., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, width, -, w, [, 3, ], ,, h, [, 0]
[), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D]
[,, h, [, 0, ], ,, w, [, 3, ], ,, h, [, 3, ], ), ), ;, }, if]
[-, w, [, 3, ], ,, h, [, 0, ], ,, w, [, 3, ], ,, h, [, 3, ]]
[,, h, [, 0, ], ,, w, [, 3, ], ,, h, [, 3, ], ), ), ;, }, if]
[[, 3, ], ,, h, [, 0, ], ,, w, [, 3, ], ,, h, [, 3, ], ), )]
[], ,, h, [, 0, ], ,, w, [, 3, ], ,, h, [, 3, ], ), ), ;, }]
[,, w, [, 3, ], ,, h, [, 3, ], ), ), ;, }, if, (, this, ., centerBlock, !=]
[[, 0, ], ,, w, [, 3, ], ,, h, [, 3, ], ), ), ;, }, if, (, this]
[], ,, w, [, 3, ], ,, h, [, 3, ], ), ), ;, }, if, (, this, ., centerBlock]
[,, h, [, 3, ], ), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, .]
[[, 3, ], ,, h, [, 3, ], ), ), ;, }, if, (, this, ., centerBlock, !=, null, )]
[], ,, h, [, 3, ], ), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this]
[), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (, new]
[[, 3, ], ), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, .]
[], ), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (]
[), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,, h, []
[!=, null, ), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,]
[., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2]
[), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,, h, []
[;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected, Size2D, arrangeFF, (, BlockContainer, container, ,, Graphics2D]
[., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,, h, [, 0, ], ,, width, -]
[., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,, h, [, 0, ], ,]
[), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected, Size2D, arrangeFF, (, BlockContainer, container, ,]
[,, h, [, 0, ], ,, width, -, w, [, 2, ], -, w, [, 3, ], ,, height, -]
[[, 2, ], ,, h, [, 0, ], ,, width, -, w, [, 2, ], -, w, [, 3, ]]
[], ,, h, [, 0, ], ,, width, -, w, [, 2, ], -, w, [, 3, ], ,, height]
[,, width, -, w, [, 2, ], -, w, [, 3, ], ,, height, -, h, [, 0, ], -]
[[, 0, ], ,, width, -, w, [, 2, ], -, w, [, 3, ], ,, height, -, h, []
[], ,, width, -, w, [, 2, ], -, w, [, 3, ], ,, height, -, h, [, 0, ]]
[,, height, -, h, [, 0, ], -, h, [, 1, ], ), ), ;, }, return, new, Size2D, (]
[-, w, [, 3, ], ,, height, -, h, [, 0, ], -, h, [, 1, ], ), ), ;]
[-, w, [, 2, ], -, w, [, 3, ], ,, height, -, h, [, 0, ], -, h, []
[-, w, [, 3, ], ,, height, -, h, [, 0, ], -, h, [, 1, ], ), ), ;]
[[, 2, ], -, w, [, 3, ], ,, height, -, h, [, 0, ], -, h, [, 1, ]]
[], -, w, [, 3, ], ,, height, -, h, [, 0, ], -, h, [, 1, ], ), )]
[,, height, -, h, [, 0, ], -, h, [, 1, ], ), ), ;, }, return, new, Size2D, (]
[[, 3, ], ,, height, -, h, [, 0, ], -, h, [, 1, ], ), ), ;, }, return]
[], ,, height, -, h, [, 0, ], -, h, [, 1, ], ), ), ;, }, return, new, Size2D]
[), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected, Size2D, arrangeFF, (, BlockContainer, container]
[-, h, [, 1, ], ), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected]
[-, h, [, 0, ], -, h, [, 1, ], ), ), ;, }, return, new, Size2D, (, width, ,]
[-, h, [, 1, ], ), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected]
[[, 0, ], -, h, [, 1, ], ), ), ;, }, return, new, Size2D, (, width, ,, height, )]
[], -, h, [, 1, ], ), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }]
[), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected, Size2D, arrangeFF, (, BlockContainer, container]
[[, 1, ], ), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected, Size2D, arrangeFF]
[], ), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, protected, Size2D, arrangeFF, (, BlockContainer]
[;, }, protected, Size2D, arrangeFF, (, BlockContainer, container, ,, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, double, [, ], w]
[,, height, ), ;, }, protected, Size2D, arrangeFF, (, BlockContainer, container, ,, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, double]
[), ;, }, protected, Size2D, arrangeFF, (, BlockContainer, container, ,, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, double, [, ]]
[;, double, [, ], h, =, new, double, [, 5, ], ;, w, [, 0, ], =, constraint, ., getWidth]
[], ;, double, [, ], h, =, new, double, [, 5, ], ;, w, [, 0, ], =, constraint, .]
[;, w, [, 0, ], =, constraint, ., getWidth, (, ), ;, if, (, this, ., topBlock, !=, null, )]
[], ;, w, [, 0, ], =, constraint, ., getWidth, (, ), ;, if, (, this, ., topBlock, !=, null]
[=, constraint, ., getWidth, (, ), ;, if, (, this, ., topBlock, !=, null, ), {, RectangleConstraint, c1, =, new]
[[, 0, ], =, constraint, ., getWidth, (, ), ;, if, (, this, ., topBlock, !=, null, ), {, RectangleConstraint]
[], =, constraint, ., getWidth, (, ), ;, if, (, this, ., topBlock, !=, null, ), {, RectangleConstraint, c1, =]
[;, if, (, this, ., topBlock, !=, null, ), {, RectangleConstraint, c1, =, new, RectangleConstraint, (, w, [, 0, ]]
[., getWidth, (, ), ;, if, (, this, ., topBlock, !=, null, ), {, RectangleConstraint, c1, =, new, RectangleConstraint, (]
[), {, RectangleConstraint, c1, =, new, RectangleConstraint, (, w, [, 0, ], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0]
[!=, null, ), {, RectangleConstraint, c1, =, new, RectangleConstraint, (, w, [, 0, ], ,, null, ,, LengthConstraintType, ., FIXED]
[., topBlock, !=, null, ), {, RectangleConstraint, c1, =, new, RectangleConstraint, (, w, [, 0, ], ,, null, ,, LengthConstraintType]
[), {, RectangleConstraint, c1, =, new, RectangleConstraint, (, w, [, 0, ], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0]
[;, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, c1, ), ;, h, [, 0, ], =]
[,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getHeight, (, ), )]
[[, 0, ], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getHeight]
[], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getHeight, (, )]
[,, LengthConstraintType, ., FIXED, ,, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getHeight, (, ), ), ,, LengthConstraintType]
[,, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getHeight, (, ), ), ,, LengthConstraintType, ., RANGE, ), ;]
[., FIXED, ,, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getHeight, (, ), ), ,, LengthConstraintType, ., RANGE]
[,, new, Range, (, 0.0, ,, constraint, ., getHeight, (, ), ), ,, LengthConstraintType, ., RANGE, ), ;, Size2D, size]
[,, LengthConstraintType, ., RANGE, ), ;, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, c1, ), ;]
[,, constraint, ., getHeight, (, ), ), ,, LengthConstraintType, ., RANGE, ), ;, Size2D, size, =, this, ., topBlock, .]
[), ,, LengthConstraintType, ., RANGE, ), ;, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, c1, )]
[., getHeight, (, ), ), ,, LengthConstraintType, ., RANGE, ), ;, Size2D, size, =, this, ., topBlock, ., arrange, (]
[), ;, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, c1, ), ;, h, [, 0, ]]
[., RANGE, ), ;, Size2D, size, =, this, ., topBlock, ., arrange, (, g2, ,, c1, ), ;, h, []
[;, h, [, 0, ], =, size, ., height, ;, }, w, [, 1, ], =, w, [, 0, ]]
[., arrange, (, g2, ,, c1, ), ;, h, [, 0, ], =, size, ., height, ;, }, w, []
[., topBlock, ., arrange, (, g2, ,, c1, ), ;, h, [, 0, ], =, size, ., height, ;, }]
[,, c1, ), ;, h, [, 0, ], =, size, ., height, ;, }, w, [, 1, ], =, w]
[), ;, h, [, 0, ], =, size, ., height, ;, }, w, [, 1, ], =, w, [, 0]
[=, size, ., height, ;, }, w, [, 1, ], =, w, [, 0, ], ;, if, (, this, .]
[[, 0, ], =, size, ., height, ;, }, w, [, 1, ], =, w, [, 0, ], ;, if]
[], =, size, ., height, ;, }, w, [, 1, ], =, w, [, 0, ], ;, if, (, this]
[;, }, w, [, 1, ], =, w, [, 0, ], ;, if, (, this, ., bottomBlock, !=, null, )]
[., height, ;, }, w, [, 1, ], =, w, [, 0, ], ;, if, (, this, ., bottomBlock, !=]
[=, w, [, 0, ], ;, if, (, this, ., bottomBlock, !=, null, ), {, RectangleConstraint, c2, =, new, RectangleConstraint]
[[, 1, ], =, w, [, 0, ], ;, if, (, this, ., bottomBlock, !=, null, ), {, RectangleConstraint, c2]
[], =, w, [, 0, ], ;, if, (, this, ., bottomBlock, !=, null, ), {, RectangleConstraint, c2, =, new]
[;, if, (, this, ., bottomBlock, !=, null, ), {, RectangleConstraint, c2, =, new, RectangleConstraint, (, w, [, 0, ]]
[[, 0, ], ;, if, (, this, ., bottomBlock, !=, null, ), {, RectangleConstraint, c2, =, new, RectangleConstraint, (, w]
[], ;, if, (, this, ., bottomBlock, !=, null, ), {, RectangleConstraint, c2, =, new, RectangleConstraint, (, w, [, 0]
[), {, RectangleConstraint, c2, =, new, RectangleConstraint, (, w, [, 0, ], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0]
[!=, null, ), {, RectangleConstraint, c2, =, new, RectangleConstraint, (, w, [, 0, ], ,, null, ,, LengthConstraintType, ., FIXED]
[., bottomBlock, !=, null, ), {, RectangleConstraint, c2, =, new, RectangleConstraint, (, w, [, 0, ], ,, null, ,, LengthConstraintType]
[), {, RectangleConstraint, c2, =, new, RectangleConstraint, (, w, [, 0, ], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0]
[;, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c2, ), ;, h, [, 1, ], =]
[,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getHeight, (, ), -]
[[, 0, ], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getHeight]
[], ,, null, ,, LengthConstraintType, ., FIXED, ,, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getHeight, (, )]
[,, LengthConstraintType, ., FIXED, ,, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getHeight, (, ), -, h, []
[,, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getHeight, (, ), -, h, [, 0, ], ), ,]
[., FIXED, ,, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getHeight, (, ), -, h, [, 0, ]]
[,, new, Range, (, 0.0, ,, constraint, ., getHeight, (, ), -, h, [, 0, ], ), ,, LengthConstraintType, .]
[,, LengthConstraintType, ., RANGE, ), ;, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c2, ), ;]
[,, constraint, ., getHeight, (, ), -, h, [, 0, ], ), ,, LengthConstraintType, ., RANGE, ), ;, Size2D, size]
[), ,, LengthConstraintType, ., RANGE, ), ;, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c2, )]
[-, h, [, 0, ], ), ,, LengthConstraintType, ., RANGE, ), ;, Size2D, size, =, this, ., bottomBlock, ., arrange]
[., getHeight, (, ), -, h, [, 0, ], ), ,, LengthConstraintType, ., RANGE, ), ;, Size2D, size, =, this]
[), ,, LengthConstraintType, ., RANGE, ), ;, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c2, )]
[[, 0, ], ), ,, LengthConstraintType, ., RANGE, ), ;, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2]
[], ), ,, LengthConstraintType, ., RANGE, ), ;, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c2]
[), ;, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c2, ), ;, h, [, 1, ]]
[., RANGE, ), ;, Size2D, size, =, this, ., bottomBlock, ., arrange, (, g2, ,, c2, ), ;, h, []
[;, h, [, 1, ], =, size, ., height, ;, }, h, [, 2, ], =, constraint, ., getHeight, (]
[., arrange, (, g2, ,, c2, ), ;, h, [, 1, ], =, size, ., height, ;, }, h, []
[., bottomBlock, ., arrange, (, g2, ,, c2, ), ;, h, [, 1, ], =, size, ., height, ;, }]
[,, c2, ), ;, h, [, 1, ], =, size, ., height, ;, }, h, [, 2, ], =, constraint]
[), ;, h, [, 1, ], =, size, ., height, ;, }, h, [, 2, ], =, constraint, ., getHeight]
[=, size, ., height, ;, }, h, [, 2, ], =, constraint, ., getHeight, (, ), -, h, [, 1]
[[, 1, ], =, size, ., height, ;, }, h, [, 2, ], =, constraint, ., getHeight, (, ), -]
[], =, size, ., height, ;, }, h, [, 2, ], =, constraint, ., getHeight, (, ), -, h, []
[;, }, h, [, 2, ], =, constraint, ., getHeight, (, ), -, h, [, 1, ], -, h, []
[., height, ;, }, h, [, 2, ], =, constraint, ., getHeight, (, ), -, h, [, 1, ], -]
[=, constraint, ., getHeight, (, ), -, h, [, 1, ], -, h, [, 0, ], ;, if, (, this]
[[, 2, ], =, constraint, ., getHeight, (, ), -, h, [, 1, ], -, h, [, 0, ], ;]
[], =, constraint, ., getHeight, (, ), -, h, [, 1, ], -, h, [, 0, ], ;, if, (]
[;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new, Range]
[-, h, [, 0, ], ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint]
[-, h, [, 1, ], -, h, [, 0, ], ;, if, (, this, ., leftBlock, !=, null, ), {]
[., getHeight, (, ), -, h, [, 1, ], -, h, [, 0, ], ;, if, (, this, ., leftBlock]
[-, h, [, 0, ], ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint]
[[, 1, ], -, h, [, 0, ], ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3]
[], -, h, [, 0, ], ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new]
[;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new, Range]
[[, 0, ], ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0]
[], ;, if, (, this, ., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new]
[), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getWidth, (, )]
[!=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getWidth]
[., leftBlock, !=, null, ), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, 0.0, ,, constraint]
[), {, RectangleConstraint, c3, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, 0.0, ,, constraint, ., getWidth, (, )]
[;, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, c3, ), ;, w, [, 2, ], =]
[,, new, Range, (, 0.0, ,, constraint, ., getWidth, (, ), ), ,, LengthConstraintType, ., RANGE, ,, h, [, 2]
[,, LengthConstraintType, ., RANGE, ,, h, [, 2, ], ,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =]
[,, constraint, ., getWidth, (, ), ), ,, LengthConstraintType, ., RANGE, ,, h, [, 2, ], ,, null, ,, LengthConstraintType]
[), ,, LengthConstraintType, ., RANGE, ,, h, [, 2, ], ,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size]
[., getWidth, (, ), ), ,, LengthConstraintType, ., RANGE, ,, h, [, 2, ], ,, null, ,, LengthConstraintType, ., FIXED]
[,, h, [, 2, ], ,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =, this, ., leftBlock, .]
[., RANGE, ,, h, [, 2, ], ,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =, this, .]
[,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, c3]
[[, 2, ], ,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =, this, ., leftBlock, ., arrange, (]
[], ,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,]
[,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, c3, ), ;]
[), ;, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, c3, ), ;, w, [, 2, ]]
[., FIXED, ), ;, Size2D, size, =, this, ., leftBlock, ., arrange, (, g2, ,, c3, ), ;, w, []
[;, w, [, 2, ], =, size, ., width, ;, }, h, [, 3, ], =, h, [, 2, ]]
[., arrange, (, g2, ,, c3, ), ;, w, [, 2, ], =, size, ., width, ;, }, h, []
[., leftBlock, ., arrange, (, g2, ,, c3, ), ;, w, [, 2, ], =, size, ., width, ;, }]
[,, c3, ), ;, w, [, 2, ], =, size, ., width, ;, }, h, [, 3, ], =, h]
[), ;, w, [, 2, ], =, size, ., width, ;, }, h, [, 3, ], =, h, [, 2]
[=, size, ., width, ;, }, h, [, 3, ], =, h, [, 2, ], ;, if, (, this, .]
[[, 2, ], =, size, ., width, ;, }, h, [, 3, ], =, h, [, 2, ], ;, if]
[], =, size, ., width, ;, }, h, [, 3, ], =, h, [, 2, ], ;, if, (, this]
[;, }, h, [, 3, ], =, h, [, 2, ], ;, if, (, this, ., rightBlock, !=, null, )]
[., width, ;, }, h, [, 3, ], =, h, [, 2, ], ;, if, (, this, ., rightBlock, !=]
[=, h, [, 2, ], ;, if, (, this, ., rightBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint]
[[, 3, ], =, h, [, 2, ], ;, if, (, this, ., rightBlock, !=, null, ), {, RectangleConstraint, c4]
[], =, h, [, 2, ], ;, if, (, this, ., rightBlock, !=, null, ), {, RectangleConstraint, c4, =, new]
[;, if, (, this, ., rightBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, 0.0, ,, new, Range]
[[, 2, ], ;, if, (, this, ., rightBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, 0.0]
[], ;, if, (, this, ., rightBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, 0.0, ,, new]
[), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, 0.0, ,, Math, ., max, (, constraint]
[!=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, 0.0, ,, Math, ., max]
[., rightBlock, !=, null, ), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, 0.0, ,, Math]
[), {, RectangleConstraint, c4, =, new, RectangleConstraint, (, 0.0, ,, new, Range, (, 0.0, ,, Math, ., max, (, constraint]
[;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, c4, ), ;, w, [, 3, ], =]
[,, new, Range, (, 0.0, ,, Math, ., max, (, constraint, ., getWidth, (, ), -, w, [, 2, ]]
[,, LengthConstraintType, ., RANGE, ,, h, [, 2, ], ,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =]
[,, Math, ., max, (, constraint, ., getWidth, (, ), -, w, [, 2, ], ,, 0.0, ), ), ,]
[), ,, LengthConstraintType, ., RANGE, ,, h, [, 2, ], ,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size]
[., max, (, constraint, ., getWidth, (, ), -, w, [, 2, ], ,, 0.0, ), ), ,, LengthConstraintType, .]
[,, 0.0, ), ), ,, LengthConstraintType, ., RANGE, ,, h, [, 2, ], ,, null, ,, LengthConstraintType, ., FIXED, )]
[-, w, [, 2, ], ,, 0.0, ), ), ,, LengthConstraintType, ., RANGE, ,, h, [, 2, ], ,, null]
[., getWidth, (, ), -, w, [, 2, ], ,, 0.0, ), ), ,, LengthConstraintType, ., RANGE, ,, h, []
[,, 0.0, ), ), ,, LengthConstraintType, ., RANGE, ,, h, [, 2, ], ,, null, ,, LengthConstraintType, ., FIXED, )]
[[, 2, ], ,, 0.0, ), ), ,, LengthConstraintType, ., RANGE, ,, h, [, 2, ], ,, null, ,, LengthConstraintType]
[], ,, 0.0, ), ), ,, LengthConstraintType, ., RANGE, ,, h, [, 2, ], ,, null, ,, LengthConstraintType, ., FIXED]
[), ), ,, LengthConstraintType, ., RANGE, ,, h, [, 2, ], ,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D]
[,, h, [, 2, ], ,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =, this, ., rightBlock, .]
[., RANGE, ,, h, [, 2, ], ,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =, this, .]
[,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, c4]
[[, 2, ], ,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =, this, ., rightBlock, ., arrange, (]
[], ,, null, ,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,]
[,, LengthConstraintType, ., FIXED, ), ;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, c4, ), ;]
[), ;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, c4, ), ;, w, [, 3, ]]
[., FIXED, ), ;, Size2D, size, =, this, ., rightBlock, ., arrange, (, g2, ,, c4, ), ;, w, []
[;, w, [, 3, ], =, size, ., width, ;, }, h, [, 4, ], =, h, [, 2, ]]
[., arrange, (, g2, ,, c4, ), ;, w, [, 3, ], =, size, ., width, ;, }, h, []
[., rightBlock, ., arrange, (, g2, ,, c4, ), ;, w, [, 3, ], =, size, ., width, ;, }]
[,, c4, ), ;, w, [, 3, ], =, size, ., width, ;, }, h, [, 4, ], =, h]
[), ;, w, [, 3, ], =, size, ., width, ;, }, h, [, 4, ], =, h, [, 2]
[=, size, ., width, ;, }, h, [, 4, ], =, h, [, 2, ], ;, w, [, 4, ]]
[[, 3, ], =, size, ., width, ;, }, h, [, 4, ], =, h, [, 2, ], ;, w]
[], =, size, ., width, ;, }, h, [, 4, ], =, h, [, 2, ], ;, w, [, 4]
[;, }, h, [, 4, ], =, h, [, 2, ], ;, w, [, 4, ], =, constraint, ., getWidth]
[., width, ;, }, h, [, 4, ], =, h, [, 2, ], ;, w, [, 4, ], =, constraint]
[=, h, [, 2, ], ;, w, [, 4, ], =, constraint, ., getWidth, (, ), -, w, [, 3]
[[, 4, ], =, h, [, 2, ], ;, w, [, 4, ], =, constraint, ., getWidth, (, ), -]
[], =, h, [, 2, ], ;, w, [, 4, ], =, constraint, ., getWidth, (, ), -, w, []
[;, w, [, 4, ], =, constraint, ., getWidth, (, ), -, w, [, 3, ], -, w, [, 2]
[[, 2, ], ;, w, [, 4, ], =, constraint, ., getWidth, (, ), -, w, [, 3, ], -]
[], ;, w, [, 4, ], =, constraint, ., getWidth, (, ), -, w, [, 3, ], -, w, []
[=, constraint, ., getWidth, (, ), -, w, [, 3, ], -, w, [, 2, ], ;, RectangleConstraint, c5, =]
[[, 4, ], =, constraint, ., getWidth, (, ), -, w, [, 3, ], -, w, [, 2, ], ;]
[], =, constraint, ., getWidth, (, ), -, w, [, 3, ], -, w, [, 2, ], ;, RectangleConstraint, c5]
[;, RectangleConstraint, c5, =, new, RectangleConstraint, (, w, [, 4, ], ,, h, [, 4, ], ), ;, if, (]
[-, w, [, 2, ], ;, RectangleConstraint, c5, =, new, RectangleConstraint, (, w, [, 4, ], ,, h, [, 4]
[-, w, [, 3, ], -, w, [, 2, ], ;, RectangleConstraint, c5, =, new, RectangleConstraint, (, w, [, 4]
[., getWidth, (, ), -, w, [, 3, ], -, w, [, 2, ], ;, RectangleConstraint, c5, =, new, RectangleConstraint]
[-, w, [, 2, ], ;, RectangleConstraint, c5, =, new, RectangleConstraint, (, w, [, 4, ], ,, h, [, 4]
[[, 3, ], -, w, [, 2, ], ;, RectangleConstraint, c5, =, new, RectangleConstraint, (, w, [, 4, ], ,]
[], -, w, [, 2, ], ;, RectangleConstraint, c5, =, new, RectangleConstraint, (, w, [, 4, ], ,, h, []
[;, RectangleConstraint, c5, =, new, RectangleConstraint, (, w, [, 4, ], ,, h, [, 4, ], ), ;, if, (]
[[, 2, ], ;, RectangleConstraint, c5, =, new, RectangleConstraint, (, w, [, 4, ], ,, h, [, 4, ], )]
[], ;, RectangleConstraint, c5, =, new, RectangleConstraint, (, w, [, 4, ], ,, h, [, 4, ], ), ;, if]
[;, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., arrange, (, g2, ,, c5, )]
[,, h, [, 4, ], ), ;, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, .]
[[, 4, ], ,, h, [, 4, ], ), ;, if, (, this, ., centerBlock, !=, null, ), {, this]
[], ,, h, [, 4, ], ), ;, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock]
[), ;, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., arrange, (, g2, ,, c5]
[[, 4, ], ), ;, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., arrange, (]
[], ), ;, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., arrange, (, g2, ,]
[), {, this, ., centerBlock, ., arrange, (, g2, ,, c5, ), ;, }, if, (, this, ., topBlock, !=]
[!=, null, ), {, this, ., centerBlock, ., arrange, (, g2, ,, c5, ), ;, }, if, (, this, .]
[., centerBlock, !=, null, ), {, this, ., centerBlock, ., arrange, (, g2, ,, c5, ), ;, }, if, (]
[), {, this, ., centerBlock, ., arrange, (, g2, ,, c5, ), ;, }, if, (, this, ., topBlock, !=]
[;, }, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, .]
[., arrange, (, g2, ,, c5, ), ;, }, if, (, this, ., topBlock, !=, null, ), {, this, .]
[., centerBlock, ., arrange, (, g2, ,, c5, ), ;, }, if, (, this, ., topBlock, !=, null, ), {]
[,, c5, ), ;, }, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (]
[), ;, }, if, (, this, ., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D]
[), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, w, [, 0]
[!=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, w]
[., topBlock, !=, null, ), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0]
[), {, this, ., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, w, [, 0]
[;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, .]
[., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, w, [, 0, ], ,, h, [, 0]
[., topBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, w, [, 0, ], ,, h]
[), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D]
[,, 0.0, ,, w, [, 0, ], ,, h, [, 0, ], ), ), ;, }, if, (, this, .]
[,, w, [, 0, ], ,, h, [, 0, ], ), ), ;, }, if, (, this, ., bottomBlock, !=]
[,, h, [, 0, ], ), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, .]
[[, 0, ], ,, h, [, 0, ], ), ), ;, }, if, (, this, ., bottomBlock, !=, null, )]
[], ,, h, [, 0, ], ), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this]
[), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (, new]
[[, 0, ], ), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, .]
[], ), ), ;, }, if, (, this, ., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (]
[), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], +]
[!=, null, ), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0]
[., bottomBlock, !=, null, ), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h]
[), {, this, ., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], +]
[;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, .]
[., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], +, h, [, 2, ], ,]
[., bottomBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], +, h, [, 2]
[), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D]
[,, h, [, 0, ], +, h, [, 2, ], ,, w, [, 1, ], ,, h, [, 1, ]]
[,, w, [, 1, ], ,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=]
[+, h, [, 2, ], ,, w, [, 1, ], ,, h, [, 1, ], ), ), ;, }, if]
[[, 0, ], +, h, [, 2, ], ,, w, [, 1, ], ,, h, [, 1, ], ), )]
[], +, h, [, 2, ], ,, w, [, 1, ], ,, h, [, 1, ], ), ), ;, }]
[,, w, [, 1, ], ,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=]
[[, 2, ], ,, w, [, 1, ], ,, h, [, 1, ], ), ), ;, }, if, (, this]
[], ,, w, [, 1, ], ,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock]
[,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, .]
[[, 1, ], ,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, )]
[], ,, h, [, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this]
[), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (, new]
[[, 1, ], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, .]
[], ), ), ;, }, if, (, this, ., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (]
[), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], ,]
[!=, null, ), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0]
[., leftBlock, !=, null, ), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h]
[), {, this, ., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], ,]
[;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, .]
[., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], ,, w, [, 2, ], ,]
[., leftBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, 0.0, ,, h, [, 0, ], ,, w, [, 2]
[), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D]
[,, h, [, 0, ], ,, w, [, 2, ], ,, h, [, 2, ], ), ), ;, }, if]
[,, w, [, 2, ], ,, h, [, 2, ], ), ), ;, }, if, (, this, ., rightBlock, !=]
[[, 0, ], ,, w, [, 2, ], ,, h, [, 2, ], ), ), ;, }, if, (, this]
[], ,, w, [, 2, ], ,, h, [, 2, ], ), ), ;, }, if, (, this, ., rightBlock]
[,, h, [, 2, ], ), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, .]
[[, 2, ], ,, h, [, 2, ], ), ), ;, }, if, (, this, ., rightBlock, !=, null, )]
[], ,, h, [, 2, ], ), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this]
[), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (, new]
[[, 2, ], ), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, .]
[], ), ), ;, }, if, (, this, ., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (]
[), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], +, w, []
[!=, null, ), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], +]
[., rightBlock, !=, null, ), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2]
[), {, this, ., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], +, w, []
[;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, .]
[., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], +, w, [, 4, ], ,, h, []
[., rightBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], +, w, [, 4, ], ,]
[), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D]
[,, h, [, 0, ], ,, w, [, 3, ], ,, h, [, 3, ], ), ), ;, }, if]
[+, w, [, 4, ], ,, h, [, 0, ], ,, w, [, 3, ], ,, h, [, 3, ]]
[[, 2, ], +, w, [, 4, ], ,, h, [, 0, ], ,, w, [, 3, ], ,, h]
[], +, w, [, 4, ], ,, h, [, 0, ], ,, w, [, 3, ], ,, h, [, 3]
[,, h, [, 0, ], ,, w, [, 3, ], ,, h, [, 3, ], ), ), ;, }, if]
[[, 4, ], ,, h, [, 0, ], ,, w, [, 3, ], ,, h, [, 3, ], ), )]
[], ,, h, [, 0, ], ,, w, [, 3, ], ,, h, [, 3, ], ), ), ;, }]
[,, w, [, 3, ], ,, h, [, 3, ], ), ), ;, }, if, (, this, ., centerBlock, !=]
[[, 0, ], ,, w, [, 3, ], ,, h, [, 3, ], ), ), ;, }, if, (, this]
[], ,, w, [, 3, ], ,, h, [, 3, ], ), ), ;, }, if, (, this, ., centerBlock]
[,, h, [, 3, ], ), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, .]
[[, 3, ], ,, h, [, 3, ], ), ), ;, }, if, (, this, ., centerBlock, !=, null, )]
[], ,, h, [, 3, ], ), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this]
[), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (, new]
[[, 3, ], ), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, .]
[], ), ), ;, }, if, (, this, ., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (]
[), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,, h, []
[!=, null, ), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,]
[., centerBlock, !=, null, ), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2]
[), {, this, ., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,, h, []
[;, }, return, new, Size2D, (, constraint, ., getWidth, (, ), ,, constraint, ., getHeight, (, ), ), ;, }]
[., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,, h, [, 0, ], ,, w, []
[., centerBlock, ., setBounds, (, new, Rectangle2D, ., Double, (, w, [, 2, ], ,, h, [, 0, ], ,]
[), ;, }, return, new, Size2D, (, constraint, ., getWidth, (, ), ,, constraint, ., getHeight, (, ), ), ;]
[,, h, [, 0, ], ,, w, [, 4, ], ,, h, [, 4, ], ), ), ;, }, return]
[[, 2, ], ,, h, [, 0, ], ,, w, [, 4, ], ,, h, [, 4, ], ), )]
[], ,, h, [, 0, ], ,, w, [, 4, ], ,, h, [, 4, ], ), ), ;, }]
[,, w, [, 4, ], ,, h, [, 4, ], ), ), ;, }, return, new, Size2D, (, constraint, .]
[[, 0, ], ,, w, [, 4, ], ,, h, [, 4, ], ), ), ;, }, return, new, Size2D]
[], ,, w, [, 4, ], ,, h, [, 4, ], ), ), ;, }, return, new, Size2D, (, constraint]
[,, h, [, 4, ], ), ), ;, }, return, new, Size2D, (, constraint, ., getWidth, (, ), ,, constraint]
[[, 4, ], ,, h, [, 4, ], ), ), ;, }, return, new, Size2D, (, constraint, ., getWidth, (]
[], ,, h, [, 4, ], ), ), ;, }, return, new, Size2D, (, constraint, ., getWidth, (, ), ,]
[), ), ;, }, return, new, Size2D, (, constraint, ., getWidth, (, ), ,, constraint, ., getHeight, (, ), )]
[[, 4, ], ), ), ;, }, return, new, Size2D, (, constraint, ., getWidth, (, ), ,, constraint, ., getHeight]
[], ), ), ;, }, return, new, Size2D, (, constraint, ., getWidth, (, ), ,, constraint, ., getHeight, (, )]
[;, }, public, void, clear, (, ), {, this, ., centerBlock, =, null, ;, this, ., topBlock, =, null, ;]
[,, constraint, ., getHeight, (, ), ), ;, }, public, void, clear, (, ), {, this, ., centerBlock, =, null]
[., getWidth, (, ), ,, constraint, ., getHeight, (, ), ), ;, }, public, void, clear, (, ), {, this]
[), ;, }, public, void, clear, (, ), {, this, ., centerBlock, =, null, ;, this, ., topBlock, =, null]
[., getHeight, (, ), ), ;, }, public, void, clear, (, ), {, this, ., centerBlock, =, null, ;, this]
[=, null, ;, this, ., topBlock, =, null, ;, this, ., bottomBlock, =, null, ;, this, ., leftBlock, =, null]
[., centerBlock, =, null, ;, this, ., topBlock, =, null, ;, this, ., bottomBlock, =, null, ;, this, ., leftBlock]
[;, this, ., topBlock, =, null, ;, this, ., bottomBlock, =, null, ;, this, ., leftBlock, =, null, ;, this]
[=, null, ;, this, ., bottomBlock, =, null, ;, this, ., leftBlock, =, null, ;, this, ., rightBlock, =, null]
[., topBlock, =, null, ;, this, ., bottomBlock, =, null, ;, this, ., leftBlock, =, null, ;, this, ., rightBlock]
[;, this, ., bottomBlock, =, null, ;, this, ., leftBlock, =, null, ;, this, ., rightBlock, =, null, ;, }]
[=, null, ;, this, ., leftBlock, =, null, ;, this, ., rightBlock, =, null, ;, }, public, boolean, equals, (]
[., bottomBlock, =, null, ;, this, ., leftBlock, =, null, ;, this, ., rightBlock, =, null, ;, }, public, boolean]
[;, this, ., leftBlock, =, null, ;, this, ., rightBlock, =, null, ;, }, public, boolean, equals, (, Object, obj]
[=, null, ;, this, ., rightBlock, =, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., leftBlock, =, null, ;, this, ., rightBlock, =, null, ;, }, public, boolean, equals, (, Object, obj, ), {]
[;, this, ., rightBlock, =, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[=, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[., rightBlock, =, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, BorderArrangement, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, BorderArrangement, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, BorderArrangement, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, BorderArrangement, ), ), {, return, false, ;, }, BorderArrangement, that, =, (]
[), {, return, false, ;, }, BorderArrangement, that, =, (, BorderArrangement, ), obj, ;, if, (, !, ObjectUtilities, ., equal]
[), {, return, false, ;, }, BorderArrangement, that, =, (, BorderArrangement, ), obj, ;, if, (, !, ObjectUtilities, ., equal]
[), ), {, return, false, ;, }, BorderArrangement, that, =, (, BorderArrangement, ), obj, ;, if, (, !, ObjectUtilities, .]
[instanceof, BorderArrangement, ), ), {, return, false, ;, }, BorderArrangement, that, =, (, BorderArrangement, ), obj, ;, if, (, !]
[;, }, BorderArrangement, that, =, (, BorderArrangement, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., topBlock]
[;, if, (, !, ObjectUtilities, ., equal, (, this, ., topBlock, ,, that, ., topBlock, ), ), {, return, false]
[;, if, (, !, ObjectUtilities, ., equal, (, this, ., topBlock, ,, that, ., topBlock, ), ), {, return, false]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., bottomBlock, ,, that, ., bottomBlock]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., bottomBlock, ,, that, ., bottomBlock]
[., equal, (, this, ., topBlock, ,, that, ., topBlock, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., topBlock, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, .]
[., topBlock, ,, that, ., topBlock, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., bottomBlock, ,, that, .]
[., topBlock, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., bottomBlock, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., bottomBlock, ,, that, ., bottomBlock, ), ), {, return]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., leftBlock, ,, that, ., leftBlock]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., leftBlock, ,, that, ., leftBlock]
[., equal, (, this, ., bottomBlock, ,, that, ., bottomBlock, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., bottomBlock, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, .]
[., bottomBlock, ,, that, ., bottomBlock, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., leftBlock, ,, that, .]
[., bottomBlock, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., leftBlock, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., leftBlock, ,, that, ., leftBlock, ), ), {, return]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rightBlock, ,, that, ., rightBlock]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rightBlock, ,, that, ., rightBlock]
[., equal, (, this, ., leftBlock, ,, that, ., leftBlock, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., leftBlock, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, .]
[., leftBlock, ,, that, ., leftBlock, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rightBlock, ,, that, .]
[., leftBlock, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rightBlock, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., rightBlock, ,, that, ., rightBlock, ), ), {, return]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., centerBlock, ,, that, ., centerBlock]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., centerBlock, ,, that, ., centerBlock]
[., equal, (, this, ., rightBlock, ,, that, ., rightBlock, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., rightBlock, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, .]
[., rightBlock, ,, that, ., rightBlock, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., centerBlock, ,, that, .]
[., rightBlock, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., centerBlock, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., centerBlock, ,, that, ., centerBlock, ), ), {, return]
[), {, return, false, ;, }, return, true, ;, }, }]
[), {, return, false, ;, }, return, true, ;, }, }]
[., equal, (, this, ., centerBlock, ,, that, ., centerBlock, ), ), {, return, false, ;, }, return, true, ;]
[,, that, ., centerBlock, ), ), {, return, false, ;, }, return, true, ;, }, }]
[., centerBlock, ,, that, ., centerBlock, ), ), {, return, false, ;, }, return, true, ;, }, }]
[), ), {, return, false, ;, }, return, true, ;, }, }]
[., centerBlock, ), ), {, return, false, ;, }, return, true, ;, }, }]
[;, }, return, true, ;, }, }]
[;, }, }]
