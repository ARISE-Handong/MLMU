[;, private, final, Throwable, stackTraceHolder, ;, private, final, StackTraceFilter, stackTraceFilter, ;, public, LocationImpl, (, ), {, this, (, new, StackTraceFilter]
[;, private, final, Throwable, stackTraceHolder, ;, private, final, StackTraceFilter, stackTraceFilter, ;, public, LocationImpl, (, ), {, this, (, new, StackTraceFilter]
[), ;, }, public, LocationImpl, (, StackTraceFilter, stackTraceFilter, ), {, this, ., stackTraceFilter, =, stackTraceFilter, ;, stackTraceHolder, =, new, Throwable]
[=, stackTraceFilter, ;, stackTraceHolder, =, new, Throwable, (, ), ;, }, @, Override, public, String, toString, (, ), {, StackTraceElement]
[., stackTraceFilter, =, stackTraceFilter, ;, stackTraceHolder, =, new, Throwable, (, ), ;, }, @, Override, public, String, toString, (, )]
[;, stackTraceHolder, =, new, Throwable, (, ), ;, }, @, Override, public, String, toString, (, ), {, StackTraceElement, [, ]]
[=, new, Throwable, (, ), ;, }, @, Override, public, String, toString, (, ), {, StackTraceElement, [, ], filtered, =]
[;, }, @, Override, public, String, toString, (, ), {, StackTraceElement, [, ], filtered, =, stackTraceFilter, ., filter, (, stackTraceHolder]
[;, if, (, filtered, ., length, ==, 0, ), {, return, "-> at <<unknown line>>", ;, }, return, "-> at ", +, filtered, [, 0]
[., filter, (, stackTraceHolder, ., getStackTrace, (, ), ,, false, ), ;, if, (, filtered, ., length, ==, 0, )]
[,, false, ), ;, if, (, filtered, ., length, ==, 0, ), {, return, "-> at <<unknown line>>", ;, }, return, "-> at ", +]
[., getStackTrace, (, ), ,, false, ), ;, if, (, filtered, ., length, ==, 0, ), {, return, "-> at <<unknown line>>", ;]
[), ;, if, (, filtered, ., length, ==, 0, ), {, return, "-> at <<unknown line>>", ;, }, return, "-> at ", +, filtered, []
[), {, return, "-> at <<unknown line>>", ;, }, return, "-> at ", +, filtered, [, 0, ], ., toString, (, ), ;, }, }]
[==, 0, ), {, return, "-> at <<unknown line>>", ;, }, return, "-> at ", +, filtered, [, 0, ], ., toString, (, ), ;]
[., length, ==, 0, ), {, return, "-> at <<unknown line>>", ;, }, return, "-> at ", +, filtered, [, 0, ], ., toString, (]
[), {, return, "-> at <<unknown line>>", ;, }, return, "-> at ", +, filtered, [, 0, ], ., toString, (, ), ;, }, }]
[;, }, return, "-> at ", +, filtered, [, 0, ], ., toString, (, ), ;, }, }]
[;, }, }]
[+, filtered, [, 0, ], ., toString, (, ), ;, }, }]
[;, }, }]
[., toString, (, ), ;, }, }]
[[, 0, ], ., toString, (, ), ;, }, }]
[], ., toString, (, ), ;, }, }]
