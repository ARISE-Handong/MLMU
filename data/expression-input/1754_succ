[;, private, boolean, isArrowAtTop, =, true, ;, public, ArrowNeedle, (, boolean, isArrowAtTop, ), {, this, ., isArrowAtTop, =, isArrowAtTop, ;]
[;, private, boolean, isArrowAtTop, =, true, ;, public, ArrowNeedle, (, boolean, isArrowAtTop, ), {, this, ., isArrowAtTop, =, isArrowAtTop, ;]
[;, public, ArrowNeedle, (, boolean, isArrowAtTop, ), {, this, ., isArrowAtTop, =, isArrowAtTop, ;, }, protected, void, drawNeedle, (, Graphics2D]
[=, isArrowAtTop, ;, }, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, )]
[., isArrowAtTop, =, isArrowAtTop, ;, }, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double]
[;, }, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, Line2D]
[;, Shape, d, =, null, ;, float, x, =, (, float, ), (, plotArea, ., getMinX, (, ), +, (]
[;, float, x, =, (, float, ), (, plotArea, ., getMinX, (, ), +, (, plotArea, ., getWidth, (, )]
[;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxY, =, (, float, ), plotArea]
[;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxY, =, (, float, ), plotArea]
[), ;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxY, =, (, float, )]
[+, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, float, minY, =, (, float, ), plotArea, .]
[., getMinX, (, ), +, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, float, minY, =, (]
[), ;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxY, =, (, float, )]
[), ), ;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxY, =, (, float]
[/, 2, ), ), ;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxY, =]
[., getWidth, (, ), /, 2, ), ), ;, float, minY, =, (, float, ), plotArea, ., getMinY, (, )]
[), ), ;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxY, =, (, float]
[;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, shape, ., setLine, (, x, ,, minY]
[;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, shape, ., setLine, (, x, ,, minY]
[., getMinY, (, ), ;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, shape, ., setLine]
[;, shape, ., setLine, (, x, ,, minY, ,, x, ,, maxY, ), ;, GeneralPath, shape1, =, new, GeneralPath, (]
[;, shape, ., setLine, (, x, ,, minY, ,, x, ,, maxY, ), ;, GeneralPath, shape1, =, new, GeneralPath, (]
[., getMaxY, (, ), ;, shape, ., setLine, (, x, ,, minY, ,, x, ,, maxY, ), ;, GeneralPath, shape1]
[;, GeneralPath, shape1, =, new, GeneralPath, (, ), ;, if, (, this, ., isArrowAtTop, ), {, shape1, ., moveTo, (]
[., setLine, (, x, ,, minY, ,, x, ,, maxY, ), ;, GeneralPath, shape1, =, new, GeneralPath, (, ), ;]
[,, minY, ,, x, ,, maxY, ), ;, GeneralPath, shape1, =, new, GeneralPath, (, ), ;, if, (, this, .]
[,, x, ,, maxY, ), ;, GeneralPath, shape1, =, new, GeneralPath, (, ), ;, if, (, this, ., isArrowAtTop, )]
[,, maxY, ), ;, GeneralPath, shape1, =, new, GeneralPath, (, ), ;, if, (, this, ., isArrowAtTop, ), {, shape1]
[), ;, GeneralPath, shape1, =, new, GeneralPath, (, ), ;, if, (, this, ., isArrowAtTop, ), {, shape1, ., moveTo]
[;, if, (, this, ., isArrowAtTop, ), {, shape1, ., moveTo, (, x, ,, minY, ), ;, minY, +=, 4]
[), {, shape1, ., moveTo, (, x, ,, minY, ), ;, minY, +=, 4, *, getSize, (, ), ;, }]
[., isArrowAtTop, ), {, shape1, ., moveTo, (, x, ,, minY, ), ;, minY, +=, 4, *, getSize, (, )]
[;, minY, +=, 4, *, getSize, (, ), ;, }, else, {, shape1, ., moveTo, (, x, ,, maxY, )]
[., moveTo, (, x, ,, minY, ), ;, minY, +=, 4, *, getSize, (, ), ;, }, else, {, shape1]
[,, minY, ), ;, minY, +=, 4, *, getSize, (, ), ;, }, else, {, shape1, ., moveTo, (, x]
[), ;, minY, +=, 4, *, getSize, (, ), ;, }, else, {, shape1, ., moveTo, (, x, ,, maxY]
[+=, 4, *, getSize, (, ), ;, }, else, {, shape1, ., moveTo, (, x, ,, maxY, ), ;, minY]
[;, }, else, {, shape1, ., moveTo, (, x, ,, maxY, ), ;, minY, =, maxY, -, 4, *, getSize]
[*, getSize, (, ), ;, }, else, {, shape1, ., moveTo, (, x, ,, maxY, ), ;, minY, =, maxY]
[;, }, else, {, shape1, ., moveTo, (, x, ,, maxY, ), ;, minY, =, maxY, -, 4, *, getSize]
[;, minY, =, maxY, -, 4, *, getSize, (, ), ;, }, shape1, ., lineTo, (, x, +, getSize, (]
[., moveTo, (, x, ,, maxY, ), ;, minY, =, maxY, -, 4, *, getSize, (, ), ;, }, shape1]
[,, maxY, ), ;, minY, =, maxY, -, 4, *, getSize, (, ), ;, }, shape1, ., lineTo, (, x]
[), ;, minY, =, maxY, -, 4, *, getSize, (, ), ;, }, shape1, ., lineTo, (, x, +, getSize]
[=, maxY, -, 4, *, getSize, (, ), ;, }, shape1, ., lineTo, (, x, +, getSize, (, ), ,]
[;, }, shape1, ., lineTo, (, x, +, getSize, (, ), ,, minY, ), ;, shape1, ., lineTo, (, x]
[-, 4, *, getSize, (, ), ;, }, shape1, ., lineTo, (, x, +, getSize, (, ), ,, minY, )]
[;, }, shape1, ., lineTo, (, x, +, getSize, (, ), ,, minY, ), ;, shape1, ., lineTo, (, x]
[*, getSize, (, ), ;, }, shape1, ., lineTo, (, x, +, getSize, (, ), ,, minY, ), ;, shape1]
[;, }, shape1, ., lineTo, (, x, +, getSize, (, ), ,, minY, ), ;, shape1, ., lineTo, (, x]
[;, shape1, ., lineTo, (, x, -, getSize, (, ), ,, minY, ), ;, shape1, ., closePath, (, ), ;]
[., lineTo, (, x, +, getSize, (, ), ,, minY, ), ;, shape1, ., lineTo, (, x, -, getSize, (]
[,, minY, ), ;, shape1, ., lineTo, (, x, -, getSize, (, ), ,, minY, ), ;, shape1, ., closePath]
[+, getSize, (, ), ,, minY, ), ;, shape1, ., lineTo, (, x, -, getSize, (, ), ,, minY, )]
[,, minY, ), ;, shape1, ., lineTo, (, x, -, getSize, (, ), ,, minY, ), ;, shape1, ., closePath]
[), ;, shape1, ., lineTo, (, x, -, getSize, (, ), ,, minY, ), ;, shape1, ., closePath, (, )]
[;, shape1, ., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, )]
[., lineTo, (, x, -, getSize, (, ), ,, minY, ), ;, shape1, ., closePath, (, ), ;, if, (]
[,, minY, ), ;, shape1, ., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle]
[-, getSize, (, ), ,, minY, ), ;, shape1, ., closePath, (, ), ;, if, (, (, rotate, !=, null]
[,, minY, ), ;, shape1, ., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle]
[), ;, shape1, ., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0]
[;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), .]
[., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {]
[), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (]
[&&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (]
[), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX]
[!=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate]
[), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX]
[), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (]
[), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY]
[!=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate]
[), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY]
[;, d, =, getTransform, (, ), ., createTransformedShape, (, shape, ), ;, }, else, {, d, =, shape, ;, }]
[., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, d, =]
[,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, d, =, getTransform, (, ), .]
[,, rotate, ., getY, (, ), ), ;, d, =, getTransform, (, ), ., createTransformedShape, (, shape, ), ;, }]
[., getX, (, ), ,, rotate, ., getY, (, ), ), ;, d, =, getTransform, (, ), ., createTransformedShape, (]
[), ;, d, =, getTransform, (, ), ., createTransformedShape, (, shape, ), ;, }, else, {, d, =, shape, ;]
[., getY, (, ), ), ;, d, =, getTransform, (, ), ., createTransformedShape, (, shape, ), ;, }, else, {]
[=, getTransform, (, ), ., createTransformedShape, (, shape, ), ;, }, else, {, d, =, shape, ;, }, defaultDisplay, (]
[;, }, else, {, d, =, shape, ;, }, defaultDisplay, (, g2, ,, d, ), ;, if, (, (, rotate]
[., createTransformedShape, (, shape, ), ;, }, else, {, d, =, shape, ;, }, defaultDisplay, (, g2, ,, d, )]
[), ;, }, else, {, d, =, shape, ;, }, defaultDisplay, (, g2, ,, d, ), ;, if, (, (]
[=, shape, ;, }, defaultDisplay, (, g2, ,, d, ), ;, if, (, (, rotate, !=, null, ), &&, (]
[;, }, defaultDisplay, (, g2, ,, d, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=]
[;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, d, =, getTransform, (]
[,, d, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, d]
[), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, d, =, getTransform]
[), {, d, =, getTransform, (, ), ., createTransformedShape, (, shape1, ), ;, }, else, {, d, =, shape1, ;]
[&&, (, angle, !=, 0, ), ), {, d, =, getTransform, (, ), ., createTransformedShape, (, shape1, ), ;, }]
[), &&, (, angle, !=, 0, ), ), {, d, =, getTransform, (, ), ., createTransformedShape, (, shape1, ), ;]
[!=, null, ), &&, (, angle, !=, 0, ), ), {, d, =, getTransform, (, ), ., createTransformedShape, (, shape1]
[), &&, (, angle, !=, 0, ), ), {, d, =, getTransform, (, ), ., createTransformedShape, (, shape1, ), ;]
[), {, d, =, getTransform, (, ), ., createTransformedShape, (, shape1, ), ;, }, else, {, d, =, shape1, ;]
[), ), {, d, =, getTransform, (, ), ., createTransformedShape, (, shape1, ), ;, }, else, {, d, =, shape1]
[!=, 0, ), ), {, d, =, getTransform, (, ), ., createTransformedShape, (, shape1, ), ;, }, else, {, d]
[), ), {, d, =, getTransform, (, ), ., createTransformedShape, (, shape1, ), ;, }, else, {, d, =, shape1]
[=, getTransform, (, ), ., createTransformedShape, (, shape1, ), ;, }, else, {, d, =, shape1, ;, }, defaultDisplay, (]
[;, }, else, {, d, =, shape1, ;, }, defaultDisplay, (, g2, ,, d, ), ;, }, public, boolean, equals]
[., createTransformedShape, (, shape1, ), ;, }, else, {, d, =, shape1, ;, }, defaultDisplay, (, g2, ,, d, )]
[), ;, }, else, {, d, =, shape1, ;, }, defaultDisplay, (, g2, ,, d, ), ;, }, public, boolean]
[=, shape1, ;, }, defaultDisplay, (, g2, ,, d, ), ;, }, public, boolean, equals, (, Object, obj, ), {]
[;, }, defaultDisplay, (, g2, ,, d, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[,, d, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, ArrowNeedle, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, ArrowNeedle, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, ArrowNeedle, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, ArrowNeedle, ), ), {, return, false, ;, }, if, (, !, super]
[), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false]
[instanceof, ArrowNeedle, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {]
[;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, ArrowNeedle, that, =]
[), {, return, false, ;, }, ArrowNeedle, that, =, (, ArrowNeedle, ), obj, ;, if, (, this, ., isArrowAtTop, !=]
[), {, return, false, ;, }, ArrowNeedle, that, =, (, ArrowNeedle, ), obj, ;, if, (, this, ., isArrowAtTop, !=]
[., equals, (, obj, ), ), {, return, false, ;, }, ArrowNeedle, that, =, (, ArrowNeedle, ), obj, ;, if]
[), ), {, return, false, ;, }, ArrowNeedle, that, =, (, ArrowNeedle, ), obj, ;, if, (, this, ., isArrowAtTop]
[;, }, ArrowNeedle, that, =, (, ArrowNeedle, ), obj, ;, if, (, this, ., isArrowAtTop, !=, that, ., isArrowAtTop, )]
[;, if, (, this, ., isArrowAtTop, !=, that, ., isArrowAtTop, ), {, return, false, ;, }, return, true, ;, }]
[;, if, (, this, ., isArrowAtTop, !=, that, ., isArrowAtTop, ), {, return, false, ;, }, return, true, ;, }]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, super]
[!=, that, ., isArrowAtTop, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {]
[., isArrowAtTop, !=, that, ., isArrowAtTop, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, super]
[., isArrowAtTop, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result]
[;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, )]
[;, }, public, int, hashCode, (, ), {, int, result, =, super, ., hashCode, (, ), ;, result, =, HashUtilities]
[;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., isArrowAtTop, ), ;, return, result, ;, }, public, Object]
[., hashCode, (, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., isArrowAtTop, ), ;, return, result]
[=, HashUtilities, ., hashCode, (, result, ,, this, ., isArrowAtTop, ), ;, return, result, ;, }, public, Object, clone, (]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;]
[., hashCode, (, result, ,, this, ., isArrowAtTop, ), ;, return, result, ;, }, public, Object, clone, (, ), throws]
[,, this, ., isArrowAtTop, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, )]
[., isArrowAtTop, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, }]
[;, }, }]
[., clone, (, ), ;, }, }]
