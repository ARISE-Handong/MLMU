[java, ., util, ., TimeZone, ;, public, class, Hour, extends, RegularTimePeriod, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[., util, ., TimeZone, ;, public, class, Hour, extends, RegularTimePeriod, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[extends, RegularTimePeriod, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -, 835471579831937652L, ;, public, static, final, int, FIRST_HOUR_IN_DAY, =]
[long, serialVersionUID, =, -, 835471579831937652L, ;, public, static, final, int, FIRST_HOUR_IN_DAY, =, 0, ;, public, static, final, int, LAST_HOUR_IN_DAY, =]
[;, private, byte, hour, ;, private, long, firstMillisecond, ;, private, long, lastMillisecond, ;, public, Hour, (, ), {, this, (]
[(, new, Date, (, ), ), ;, }, public, Hour, (, int, hour, ,, Day, day, ), {, if, (]
[(, new, Date, (, ), ), ;, }, public, Hour, (, int, hour, ,, Day, day, ), {, if, (]
[Date, (, ), ), ;, }, public, Hour, (, int, hour, ,, Day, day, ), {, if, (, day, ==]
[;, }, public, Hour, (, int, hour, ,, Day, day, ), {, if, (, day, ==, null, ), {, throw]
[Hour, (, int, hour, ,, Day, day, ), {, if, (, day, ==, null, ), {, throw, new, IllegalArgumentException, (]
[,, Day, day, ), {, if, (, day, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'day' argument.", ), ;, }]
[,, Day, day, ), {, if, (, day, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'day' argument.", ), ;, }]
[{, if, (, day, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'day' argument.", ), ;, }, this, ., hour, =]
[day, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'day' argument.", ), ;, }, this, ., hour, =, (, byte, )]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'day' argument.", ), ;, }, this, ., hour, =, (, byte, ), hour, ;]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'day' argument.", ), ;, }, this, ., hour, =, (, byte, ), hour, ;]
[new, IllegalArgumentException, (, "Null 'day' argument.", ), ;, }, this, ., hour, =, (, byte, ), hour, ;, this, ., day, =]
[(, "Null 'day' argument.", ), ;, }, this, ., hour, =, (, byte, ), hour, ;, this, ., day, =, day, ;]
[), ;, }, this, ., hour, =, (, byte, ), hour, ;, this, ., day, =, day, ;, peg, (]
[), ;, }, this, ., hour, =, (, byte, ), hour, ;, this, ., day, =, day, ;, peg, (]
[;, }, public, Hour, (, int, hour, ,, int, day, ,, int, month, ,, int, year, ), {, this, (]
[public, Hour, (, int, hour, ,, int, day, ,, int, month, ,, int, year, ), {, this, (, hour, ,]
[int, hour, ,, int, day, ,, int, month, ,, int, year, ), {, this, (, hour, ,, new, Day, (]
[,, int, day, ,, int, month, ,, int, year, ), {, this, (, hour, ,, new, Day, (, day, ,]
[day, ,, int, month, ,, int, year, ), {, this, (, hour, ,, new, Day, (, day, ,, month, ,]
[Day, (, day, ,, month, ,, year, ), ), ;, }, public, Hour, (, Date, time, ), {, this, (]
[day, ,, month, ,, year, ), ), ;, }, public, Hour, (, Date, time, ), {, this, (, time, ,]
[day, ,, month, ,, year, ), ), ;, }, public, Hour, (, Date, time, ), {, this, (, time, ,]
[TimeZone, ., getDefault, (, ), ), ;, }, public, Hour, (, Date, time, ,, TimeZone, zone, ), {, if, (]
[TimeZone, ., getDefault, (, ), ), ;, }, public, Hour, (, Date, time, ,, TimeZone, zone, ), {, if, (]
[getDefault, (, ), ), ;, }, public, Hour, (, Date, time, ,, TimeZone, zone, ), {, if, (, time, ==]
[;, }, public, Hour, (, Date, time, ,, TimeZone, zone, ), {, if, (, time, ==, null, ), {, throw]
[Hour, (, Date, time, ,, TimeZone, zone, ), {, if, (, time, ==, null, ), {, throw, new, IllegalArgumentException, (]
[zone, ), {, if, (, time, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'time' argument.", ), ;, }, if, (]
[zone, ), {, if, (, time, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'time' argument.", ), ;, }, if, (]
[{, if, (, time, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'time' argument.", ), ;, }, if, (, zone, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'time' argument.", ), ;, }, if, (, zone, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'time' argument.", ), ;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (]
[;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'zone' argument.", ), ;, }, Calendar, calendar, =]
[;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'zone' argument.", ), ;, }, Calendar, calendar, =]
[zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'zone' argument.", ), ;, }, Calendar, calendar, =, Calendar, ., getInstance, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'zone' argument.", ), ;, }, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ), ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'zone' argument.", ), ;, }, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ), ;]
[IllegalArgumentException, (, "Null 'zone' argument.", ), ;, }, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ), ;, calendar, ., setTime, (]
[), ;, }, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ), ;, calendar, ., setTime, (, time, ), ;]
[), ;, }, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ), ;, calendar, ., setTime, (, time, ), ;]
[calendar, =, Calendar, ., getInstance, (, zone, ), ;, calendar, ., setTime, (, time, ), ;, this, ., hour, =]
[., getInstance, (, zone, ), ;, calendar, ., setTime, (, time, ), ;, this, ., hour, =, (, byte, )]
[., getInstance, (, zone, ), ;, calendar, ., setTime, (, time, ), ;, this, ., hour, =, (, byte, )]
[), ;, calendar, ., setTime, (, time, ), ;, this, ., hour, =, (, byte, ), calendar, ., get, (]
[), ;, calendar, ., setTime, (, time, ), ;, this, ., hour, =, (, byte, ), calendar, ., get, (]
[(, time, ), ;, this, ., hour, =, (, byte, ), calendar, ., get, (, Calendar, ., HOUR_OF_DAY, ), ;]
[(, time, ), ;, this, ., hour, =, (, byte, ), calendar, ., get, (, Calendar, ., HOUR_OF_DAY, ), ;]
[this, ., hour, =, (, byte, ), calendar, ., get, (, Calendar, ., HOUR_OF_DAY, ), ;, this, ., day, =]
[=, (, byte, ), calendar, ., get, (, Calendar, ., HOUR_OF_DAY, ), ;, this, ., day, =, new, Day, (]
[byte, ), calendar, ., get, (, Calendar, ., HOUR_OF_DAY, ), ;, this, ., day, =, new, Day, (, time, ,]
[., get, (, Calendar, ., HOUR_OF_DAY, ), ;, this, ., day, =, new, Day, (, time, ,, zone, ), ;]
[(, Calendar, ., HOUR_OF_DAY, ), ;, this, ., day, =, new, Day, (, time, ,, zone, ), ;, peg, (]
[Day, (, time, ,, zone, ), ;, peg, (, calendar, ), ;, }, public, int, getHour, (, ), {, return]
[Day, (, time, ,, zone, ), ;, peg, (, calendar, ), ;, }, public, int, getHour, (, ), {, return]
[}, public, int, getHour, (, ), {, return, this, ., hour, ;, }, public, Day, getDay, (, ), {, return]
[}, public, int, getHour, (, ), {, return, this, ., hour, ;, }, public, Day, getDay, (, ), {, return]
[}, public, Day, getDay, (, ), {, return, this, ., day, ;, }, public, int, getYear, (, ), {, return]
[}, public, Day, getDay, (, ), {, return, this, ., day, ;, }, public, int, getYear, (, ), {, return]
[}, public, Day, getDay, (, ), {, return, this, ., day, ;, }, public, int, getYear, (, ), {, return]
[(, ), {, return, this, ., day, ., getYear, (, ), ;, }, public, int, getMonth, (, ), {, return]
[(, ), {, return, this, ., day, ., getYear, (, ), ;, }, public, int, getMonth, (, ), {, return]
[(, ), {, return, this, ., day, ., getYear, (, ), ;, }, public, int, getMonth, (, ), {, return]
[(, ), {, return, this, ., day, ., getMonth, (, ), ;, }, public, int, getDayOfMonth, (, ), {, return]
[(, ), {, return, this, ., day, ., getMonth, (, ), ;, }, public, int, getDayOfMonth, (, ), {, return]
[(, ), {, return, this, ., day, ., getMonth, (, ), ;, }, public, int, getDayOfMonth, (, ), {, return]
[(, ), {, return, this, ., day, ., getDayOfMonth, (, ), ;, }, public, long, getFirstMillisecond, (, ), {, return]
[(, ), {, return, this, ., day, ., getDayOfMonth, (, ), ;, }, public, long, getFirstMillisecond, (, ), {, return]
[}, public, long, getFirstMillisecond, (, ), {, return, this, ., firstMillisecond, ;, }, public, long, getLastMillisecond, (, ), {, return]
[}, public, long, getFirstMillisecond, (, ), {, return, this, ., firstMillisecond, ;, }, public, long, getLastMillisecond, (, ), {, return]
[public, long, getLastMillisecond, (, ), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {]
[public, long, getLastMillisecond, (, ), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {]
[), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =]
[return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (]
[lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;]
[lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;]
[void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;, this, ., lastMillisecond, =]
[(, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;, this, ., lastMillisecond, =, getLastMillisecond, (]
[., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Hour, result, ;, if, (]
[., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Hour, result, ;, if, (]
[., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Hour, result, ;, if, (]
[(, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Hour, result, ;, if, (, this, ., hour, !=]
[;, }, public, RegularTimePeriod, previous, (, ), {, Hour, result, ;, if, (, this, ., hour, !=, FIRST_HOUR_IN_DAY, ), {]
[public, RegularTimePeriod, previous, (, ), {, Hour, result, ;, if, (, this, ., hour, !=, FIRST_HOUR_IN_DAY, ), {, result, =]
[(, ), {, Hour, result, ;, if, (, this, ., hour, !=, FIRST_HOUR_IN_DAY, ), {, result, =, new, Hour, (]
[(, ), {, Hour, result, ;, if, (, this, ., hour, !=, FIRST_HOUR_IN_DAY, ), {, result, =, new, Hour, (]
[(, ), {, Hour, result, ;, if, (, this, ., hour, !=, FIRST_HOUR_IN_DAY, ), {, result, =, new, Hour, (]
[result, ;, if, (, this, ., hour, !=, FIRST_HOUR_IN_DAY, ), {, result, =, new, Hour, (, this, ., hour, -]
[if, (, this, ., hour, !=, FIRST_HOUR_IN_DAY, ), {, result, =, new, Hour, (, this, ., hour, -, 1, ,]
[if, (, this, ., hour, !=, FIRST_HOUR_IN_DAY, ), {, result, =, new, Hour, (, this, ., hour, -, 1, ,]
[new, Hour, (, this, ., hour, -, 1, ,, this, ., day, ), ;, }, else, {, Day, prevDay, =]
[this, ., hour, -, 1, ,, this, ., day, ), ;, }, else, {, Day, prevDay, =, (, Day, )]
[this, ., hour, -, 1, ,, this, ., day, ), ;, }, else, {, Day, prevDay, =, (, Day, )]
[this, ., hour, -, 1, ,, this, ., day, ), ;, }, else, {, Day, prevDay, =, (, Day, )]
[;, }, else, {, Day, prevDay, =, (, Day, ), this, ., day, ., previous, (, ), ;, if, (]
[;, }, else, {, Day, prevDay, =, (, Day, ), this, ., day, ., previous, (, ), ;, if, (]
[else, {, Day, prevDay, =, (, Day, ), this, ., day, ., previous, (, ), ;, if, (, prevDay, !=]
[prevDay, =, (, Day, ), this, ., day, ., previous, (, ), ;, if, (, prevDay, !=, null, ), {]
[(, Day, ), this, ., day, ., previous, (, ), ;, if, (, prevDay, !=, null, ), {, result, =]
[this, ., day, ., previous, (, ), ;, if, (, prevDay, !=, null, ), {, result, =, new, Hour, (]
[day, ., previous, (, ), ;, if, (, prevDay, !=, null, ), {, result, =, new, Hour, (, LAST_HOUR_IN_DAY, ,]
[if, (, prevDay, !=, null, ), {, result, =, new, Hour, (, LAST_HOUR_IN_DAY, ,, prevDay, ), ;, }, else, {]
[prevDay, !=, null, ), {, result, =, new, Hour, (, LAST_HOUR_IN_DAY, ,, prevDay, ), ;, }, else, {, result, =]
[result, =, new, Hour, (, LAST_HOUR_IN_DAY, ,, prevDay, ), ;, }, else, {, result, =, null, ;, }, }, return]
[=, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Hour, result, ;, if, (]
[=, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Hour, result, ;, if, (]
[=, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Hour, result, ;, if, (]
[}, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Hour, result, ;, if, (, this, ., hour, !=]
[;, }, public, RegularTimePeriod, next, (, ), {, Hour, result, ;, if, (, this, ., hour, !=, LAST_HOUR_IN_DAY, ), {]
[public, RegularTimePeriod, next, (, ), {, Hour, result, ;, if, (, this, ., hour, !=, LAST_HOUR_IN_DAY, ), {, result, =]
[(, ), {, Hour, result, ;, if, (, this, ., hour, !=, LAST_HOUR_IN_DAY, ), {, result, =, new, Hour, (]
[(, ), {, Hour, result, ;, if, (, this, ., hour, !=, LAST_HOUR_IN_DAY, ), {, result, =, new, Hour, (]
[(, ), {, Hour, result, ;, if, (, this, ., hour, !=, LAST_HOUR_IN_DAY, ), {, result, =, new, Hour, (]
[result, ;, if, (, this, ., hour, !=, LAST_HOUR_IN_DAY, ), {, result, =, new, Hour, (, this, ., hour, +]
[if, (, this, ., hour, !=, LAST_HOUR_IN_DAY, ), {, result, =, new, Hour, (, this, ., hour, +, 1, ,]
[if, (, this, ., hour, !=, LAST_HOUR_IN_DAY, ), {, result, =, new, Hour, (, this, ., hour, +, 1, ,]
[new, Hour, (, this, ., hour, +, 1, ,, this, ., day, ), ;, }, else, {, Day, nextDay, =]
[this, ., hour, +, 1, ,, this, ., day, ), ;, }, else, {, Day, nextDay, =, (, Day, )]
[this, ., hour, +, 1, ,, this, ., day, ), ;, }, else, {, Day, nextDay, =, (, Day, )]
[this, ., hour, +, 1, ,, this, ., day, ), ;, }, else, {, Day, nextDay, =, (, Day, )]
[;, }, else, {, Day, nextDay, =, (, Day, ), this, ., day, ., next, (, ), ;, if, (]
[;, }, else, {, Day, nextDay, =, (, Day, ), this, ., day, ., next, (, ), ;, if, (]
[else, {, Day, nextDay, =, (, Day, ), this, ., day, ., next, (, ), ;, if, (, nextDay, !=]
[nextDay, =, (, Day, ), this, ., day, ., next, (, ), ;, if, (, nextDay, !=, null, ), {]
[(, Day, ), this, ., day, ., next, (, ), ;, if, (, nextDay, !=, null, ), {, result, =]
[this, ., day, ., next, (, ), ;, if, (, nextDay, !=, null, ), {, result, =, new, Hour, (]
[day, ., next, (, ), ;, if, (, nextDay, !=, null, ), {, result, =, new, Hour, (, FIRST_HOUR_IN_DAY, ,]
[if, (, nextDay, !=, null, ), {, result, =, new, Hour, (, FIRST_HOUR_IN_DAY, ,, nextDay, ), ;, }, else, {]
[nextDay, !=, null, ), {, result, =, new, Hour, (, FIRST_HOUR_IN_DAY, ,, nextDay, ), ;, }, else, {, result, =]
[result, =, new, Hour, (, FIRST_HOUR_IN_DAY, ,, nextDay, ), ;, }, else, {, result, =, null, ;, }, }, return]
[}, else, {, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return]
[}, else, {, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return]
[}, else, {, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return]
[}, else, {, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return]
[}, else, {, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return]
[}, return, result, ;, }, public, long, getSerialIndex, (, ), {, return, this, ., day, ., getSerialIndex, (, ), *]
[result, ;, }, public, long, getSerialIndex, (, ), {, return, this, ., day, ., getSerialIndex, (, ), *, 24L, +]
[result, ;, }, public, long, getSerialIndex, (, ), {, return, this, ., day, ., getSerialIndex, (, ), *, 24L, +]
[), *, 24L, +, this, ., hour, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =]
[), *, 24L, +, this, ., hour, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =]
[), *, 24L, +, this, ., hour, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =]
[getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[getFirstMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[=, this, ., day, ., getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -]
[getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -, 1, ;, int, dom, =]
[getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -, 1, ;, int, dom, =]
[getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -, 1, ;, int, dom, =]
[., day, ., getMonth, (, ), -, 1, ;, int, dom, =, this, ., day, ., getDayOfMonth, (, ), ;]
[., day, ., getMonth, (, ), -, 1, ;, int, dom, =, this, ., day, ., getDayOfMonth, (, ), ;]
[(, ), -, 1, ;, int, dom, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., set, (]
[-, 1, ;, int, dom, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., set, (, year, ,]
[;, int, dom, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., set, (, year, ,, month, ,]
[dom, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., set, (, year, ,, month, ,, dom, ,]
[dom, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., set, (, year, ,, month, ,, dom, ,]
[day, ., getDayOfMonth, (, ), ;, calendar, ., set, (, year, ,, month, ,, dom, ,, this, ., hour, ,]
[getDayOfMonth, (, ), ;, calendar, ., set, (, year, ,, month, ,, dom, ,, this, ., hour, ,, 0, ,]
[;, calendar, ., set, (, year, ,, month, ,, dom, ,, this, ., hour, ,, 0, ,, 0, ), ;]
[;, calendar, ., set, (, year, ,, month, ,, dom, ,, this, ., hour, ,, 0, ,, 0, ), ;]
[(, year, ,, month, ,, dom, ,, this, ., hour, ,, 0, ,, 0, ), ;, calendar, ., set, (]
[(, year, ,, month, ,, dom, ,, this, ., hour, ,, 0, ,, 0, ), ;, calendar, ., set, (]
[,, dom, ,, this, ., hour, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,]
[., hour, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[., hour, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[., hour, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, year, =]
[getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, year, =]
[getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, year, =]
[getLastMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[getLastMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[getLastMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[getLastMillisecond, (, Calendar, calendar, ), {, int, year, =, this, ., day, ., getYear, (, ), ;, int, month, =]
[=, this, ., day, ., getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -]
[getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -, 1, ;, int, dom, =]
[getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -, 1, ;, int, dom, =]
[getYear, (, ), ;, int, month, =, this, ., day, ., getMonth, (, ), -, 1, ;, int, dom, =]
[., day, ., getMonth, (, ), -, 1, ;, int, dom, =, this, ., day, ., getDayOfMonth, (, ), ;]
[., day, ., getMonth, (, ), -, 1, ;, int, dom, =, this, ., day, ., getDayOfMonth, (, ), ;]
[(, ), -, 1, ;, int, dom, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., set, (]
[-, 1, ;, int, dom, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., set, (, year, ,]
[;, int, dom, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., set, (, year, ,, month, ,]
[dom, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., set, (, year, ,, month, ,, dom, ,]
[dom, =, this, ., day, ., getDayOfMonth, (, ), ;, calendar, ., set, (, year, ,, month, ,, dom, ,]
[day, ., getDayOfMonth, (, ), ;, calendar, ., set, (, year, ,, month, ,, dom, ,, this, ., hour, ,]
[getDayOfMonth, (, ), ;, calendar, ., set, (, year, ,, month, ,, dom, ,, this, ., hour, ,, 59, ,]
[;, calendar, ., set, (, year, ,, month, ,, dom, ,, this, ., hour, ,, 59, ,, 59, ), ;]
[;, calendar, ., set, (, year, ,, month, ,, dom, ,, this, ., hour, ,, 59, ,, 59, ), ;]
[(, year, ,, month, ,, dom, ,, this, ., hour, ,, 59, ,, 59, ), ;, calendar, ., set, (]
[(, year, ,, month, ,, dom, ,, this, ., hour, ,, 59, ,, 59, ), ;, calendar, ., set, (]
[,, dom, ,, this, ., hour, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,]
[., hour, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[., hour, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[., hour, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[., getTime, (, ), ., getTime, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., getTime, (, ), ., getTime, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[(, ), ., getTime, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[(, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, Hour, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, Hour, ), ), {, return, false, ;, }, Hour, that, =]
[if, (, !, (, obj, instanceof, Hour, ), ), {, return, false, ;, }, Hour, that, =, (, Hour, )]
[obj, instanceof, Hour, ), ), {, return, false, ;, }, Hour, that, =, (, Hour, ), obj, ;, if, (]
[obj, instanceof, Hour, ), ), {, return, false, ;, }, Hour, that, =, (, Hour, ), obj, ;, if, (]
[obj, instanceof, Hour, ), ), {, return, false, ;, }, Hour, that, =, (, Hour, ), obj, ;, if, (]
[), {, return, false, ;, }, Hour, that, =, (, Hour, ), obj, ;, if, (, this, ., hour, !=]
[), {, return, false, ;, }, Hour, that, =, (, Hour, ), obj, ;, if, (, this, ., hour, !=]
[Hour, that, =, (, Hour, ), obj, ;, if, (, this, ., hour, !=, that, ., hour, ), {, return]
[), obj, ;, if, (, this, ., hour, !=, that, ., hour, ), {, return, false, ;, }, if, (]
[obj, ;, if, (, this, ., hour, !=, that, ., hour, ), {, return, false, ;, }, if, (, !]
[obj, ;, if, (, this, ., hour, !=, that, ., hour, ), {, return, false, ;, }, if, (, !]
[obj, ;, if, (, this, ., hour, !=, that, ., hour, ), {, return, false, ;, }, if, (, !]
[hour, !=, that, ., hour, ), {, return, false, ;, }, if, (, !, this, ., day, ., equals, (]
[hour, !=, that, ., hour, ), {, return, false, ;, }, if, (, !, this, ., day, ., equals, (]
[return, false, ;, }, if, (, !, this, ., day, ., equals, (, that, ., day, ), ), {, return]
[if, (, !, this, ., day, ., equals, (, that, ., day, ), ), {, return, false, ;, }, return]
[., day, ), ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[., day, ), ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[., day, ), ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[., day, ), ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[., day, ), ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[., day, ), ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[., day, ), ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[., day, ), ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[., day, ), ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return]
[), ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return, "[", +]
[), ), {, return, false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return, "[", +]
[false, ;, }, return, true, ;, }, public, String, toString, (, ), {, return, "[", +, this, ., hour, +]
[}, return, true, ;, }, public, String, toString, (, ), {, return, "[", +, this, ., hour, +, ",", +]
[}, public, String, toString, (, ), {, return, "[", +, this, ., hour, +, ",", +, getDayOfMonth, (, ), +]
[String, toString, (, ), {, return, "[", +, this, ., hour, +, ",", +, getDayOfMonth, (, ), +, "/", +]
[{, return, "[", +, this, ., hour, +, ",", +, getDayOfMonth, (, ), +, "/", +, getMonth, (, ), +]
["[", +, this, ., hour, +, ",", +, getDayOfMonth, (, ), +, "/", +, getMonth, (, ), +, "/", +]
[hour, +, ",", +, getDayOfMonth, (, ), +, "/", +, getMonth, (, ), +, "/", +, getYear, (, ), +]
[), +, "/", +, getYear, (, ), +, "]", ;, }, public, int, hashCode, (, ), {, int, result, =]
["/", +, getYear, (, ), +, "]", ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;]
[getYear, (, ), +, "]", ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =]
[getYear, (, ), +, "]", ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =]
[getYear, (, ), +, "]", ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =]
[), +, "]", ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *]
["]", ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *, result, +]
["]", ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *, result, +]
[int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., hour, ;]
[(, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =]
[(, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =]
[(, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =]
[{, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =, 37, *]
[result, =, 17, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =, 37, *, result, +]
[result, =, 17, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =, 37, *, result, +]
[result, =, 17, ;, result, =, 37, *, result, +, this, ., hour, ;, result, =, 37, *, result, +]
[+, this, ., hour, ;, result, =, 37, *, result, +, this, ., day, ., hashCode, (, ), ;, return]
[(, ), ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (]
[(, ), ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (]
[int, compareTo, (, Object, o1, ), {, int, result, ;, if, (, o1, instanceof, Hour, ), {, Hour, h, =]
[Object, o1, ), {, int, result, ;, if, (, o1, instanceof, Hour, ), {, Hour, h, =, (, Hour, )]
[), {, int, result, ;, if, (, o1, instanceof, Hour, ), {, Hour, h, =, (, Hour, ), o1, ;]
[int, result, ;, if, (, o1, instanceof, Hour, ), {, Hour, h, =, (, Hour, ), o1, ;, result, =]
[int, result, ;, if, (, o1, instanceof, Hour, ), {, Hour, h, =, (, Hour, ), o1, ;, result, =]
[instanceof, Hour, ), {, Hour, h, =, (, Hour, ), o1, ;, result, =, getDay, (, ), ., compareTo, (]
[instanceof, Hour, ), {, Hour, h, =, (, Hour, ), o1, ;, result, =, getDay, (, ), ., compareTo, (]
[), o1, ;, result, =, getDay, (, ), ., compareTo, (, h, ., getDay, (, ), ), ;, if, (]
[), o1, ;, result, =, getDay, (, ), ., compareTo, (, h, ., getDay, (, ), ), ;, if, (]
[;, result, =, getDay, (, ), ., compareTo, (, h, ., getDay, (, ), ), ;, if, (, result, ==]
[getDay, (, ), ., compareTo, (, h, ., getDay, (, ), ), ;, if, (, result, ==, 0, ), {]
[), ., compareTo, (, h, ., getDay, (, ), ), ;, if, (, result, ==, 0, ), {, result, =]
[), ., compareTo, (, h, ., getDay, (, ), ), ;, if, (, result, ==, 0, ), {, result, =]
[), ., compareTo, (, h, ., getDay, (, ), ), ;, if, (, result, ==, 0, ), {, result, =]
[h, ., getDay, (, ), ), ;, if, (, result, ==, 0, ), {, result, =, this, ., hour, -]
[h, ., getDay, (, ), ), ;, if, (, result, ==, 0, ), {, result, =, this, ., hour, -]
[0, ), {, result, =, this, ., hour, -, h, ., getHour, (, ), ;, }, }, else, if, (]
[0, ), {, result, =, this, ., hour, -, h, ., getHour, (, ), ;, }, }, else, if, (]
[this, ., hour, -, h, ., getHour, (, ), ;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {]
[hour, -, h, ., getHour, (, ), ;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =]
[(, ), ;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {]
[;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =]
[if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =, 1, ;, }, return]
[=, 1, ;, }, return, result, ;, }, public, static, Hour, parseHour, (, String, s, ), {, Hour, result, =]
[;, }, return, result, ;, }, public, static, Hour, parseHour, (, String, s, ), {, Hour, result, =, null, ;]
[return, result, ;, }, public, static, Hour, parseHour, (, String, s, ), {, Hour, result, =, null, ;, s, =]
[return, result, ;, }, public, static, Hour, parseHour, (, String, s, ), {, Hour, result, =, null, ;, s, =]
[String, s, ), {, Hour, result, =, null, ;, s, =, s, ., trim, (, ), ;, String, daystr, =]
[String, s, ), {, Hour, result, =, null, ;, s, =, s, ., trim, (, ), ;, String, daystr, =]
[Hour, result, =, null, ;, s, =, s, ., trim, (, ), ;, String, daystr, =, s, ., substring, (]
[=, null, ;, s, =, s, ., trim, (, ), ;, String, daystr, =, s, ., substring, (, 0, ,]
[=, null, ;, s, =, s, ., trim, (, ), ;, String, daystr, =, s, ., substring, (, 0, ,]
[=, s, ., trim, (, ), ;, String, daystr, =, s, ., substring, (, 0, ,, Math, ., min, (]
[., trim, (, ), ;, String, daystr, =, s, ., substring, (, 0, ,, Math, ., min, (, 10, ,]
[., trim, (, ), ;, String, daystr, =, s, ., substring, (, 0, ,, Math, ., min, (, 10, ,]
[(, 0, ,, Math, ., min, (, 10, ,, s, ., length, (, ), ), ), ;, Day, day, =]
[(, 0, ,, Math, ., min, (, 10, ,, s, ., length, (, ), ), ), ;, Day, day, =]
[., min, (, 10, ,, s, ., length, (, ), ), ), ;, Day, day, =, Day, ., parseDay, (]
[s, ., length, (, ), ), ), ;, Day, day, =, Day, ., parseDay, (, daystr, ), ;, if, (]
[s, ., length, (, ), ), ), ;, Day, day, =, Day, ., parseDay, (, daystr, ), ;, if, (]
[length, (, ), ), ), ;, Day, day, =, Day, ., parseDay, (, daystr, ), ;, if, (, day, !=]
[Day, day, =, Day, ., parseDay, (, daystr, ), ;, if, (, day, !=, null, ), {, String, hourstr, =]
[Day, day, =, Day, ., parseDay, (, daystr, ), ;, if, (, day, !=, null, ), {, String, hourstr, =]
[., parseDay, (, daystr, ), ;, if, (, day, !=, null, ), {, String, hourstr, =, s, ., substring, (]
[., parseDay, (, daystr, ), ;, if, (, day, !=, null, ), {, String, hourstr, =, s, ., substring, (]
[), ;, if, (, day, !=, null, ), {, String, hourstr, =, s, ., substring, (, Math, ., min, (]
[), ;, if, (, day, !=, null, ), {, String, hourstr, =, s, ., substring, (, Math, ., min, (]
[), ;, if, (, day, !=, null, ), {, String, hourstr, =, s, ., substring, (, Math, ., min, (]
[null, ), {, String, hourstr, =, s, ., substring, (, Math, ., min, (, daystr, ., length, (, ), +]
[{, String, hourstr, =, s, ., substring, (, Math, ., min, (, daystr, ., length, (, ), +, 1, ,]
[{, String, hourstr, =, s, ., substring, (, Math, ., min, (, daystr, ., length, (, ), +, 1, ,]
[(, Math, ., min, (, daystr, ., length, (, ), +, 1, ,, s, ., length, (, ), ), ,]
[(, Math, ., min, (, daystr, ., length, (, ), +, 1, ,, s, ., length, (, ), ), ,]
[length, (, ), +, 1, ,, s, ., length, (, ), ), ,, s, ., length, (, ), ), ;]
[), +, 1, ,, s, ., length, (, ), ), ,, s, ., length, (, ), ), ;, hourstr, =]
[), +, 1, ,, s, ., length, (, ), ), ,, s, ., length, (, ), ), ;, hourstr, =]
[), ,, s, ., length, (, ), ), ;, hourstr, =, hourstr, ., trim, (, ), ;, int, hour, =]
[), ,, s, ., length, (, ), ), ;, hourstr, =, hourstr, ., trim, (, ), ;, int, hour, =]
[length, (, ), ), ;, hourstr, =, hourstr, ., trim, (, ), ;, int, hour, =, Integer, ., parseInt, (]
[hourstr, =, hourstr, ., trim, (, ), ;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (]
[hourstr, =, hourstr, ., trim, (, ), ;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (]
[=, hourstr, ., trim, (, ), ;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (]
[=, hourstr, ., trim, (, ), ;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (]
[., trim, (, ), ;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (, hour, >=]
[), ;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (, hour, >=, FIRST_HOUR_IN_DAY, ), &&]
[;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (, hour, >=, FIRST_HOUR_IN_DAY, ), &&, (]
[;, int, hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (, hour, >=, FIRST_HOUR_IN_DAY, ), &&, (]
[hour, =, Integer, ., parseInt, (, hourstr, ), ;, if, (, (, hour, >=, FIRST_HOUR_IN_DAY, ), &&, (, hour, <=]
[parseInt, (, hourstr, ), ;, if, (, (, hour, >=, FIRST_HOUR_IN_DAY, ), &&, (, hour, <=, LAST_HOUR_IN_DAY, ), ), {]
[hourstr, ), ;, if, (, (, hour, >=, FIRST_HOUR_IN_DAY, ), &&, (, hour, <=, LAST_HOUR_IN_DAY, ), ), {, result, =]
[if, (, (, hour, >=, FIRST_HOUR_IN_DAY, ), &&, (, hour, <=, LAST_HOUR_IN_DAY, ), ), {, result, =, new, Hour, (]
[(, hour, >=, FIRST_HOUR_IN_DAY, ), &&, (, hour, <=, LAST_HOUR_IN_DAY, ), ), {, result, =, new, Hour, (, hour, ,]
[(, hour, <=, LAST_HOUR_IN_DAY, ), ), {, result, =, new, Hour, (, hour, ,, day, ), ;, }, }, return]
