[;, private, double, lowerBound, ;, private, double, upperBound, ;, private, double, startAngle, ;, private, double, extent, ;, private, double, tickRadius]
[,, 100.0, ,, 175, ,, -, 170, ,, 10.0, ,, 4, ), ;, }, public, StandardDialScale, (, double, lowerBound, ,]
[,, 175, ,, -, 170, ,, 10.0, ,, 4, ), ;, }, public, StandardDialScale, (, double, lowerBound, ,, double, upperBound]
[,, -, 170, ,, 10.0, ,, 4, ), ;, }, public, StandardDialScale, (, double, lowerBound, ,, double, upperBound, ,, double]
[,, 10.0, ,, 4, ), ;, }, public, StandardDialScale, (, double, lowerBound, ,, double, upperBound, ,, double, startAngle, ,, double]
[,, 10.0, ,, 4, ), ;, }, public, StandardDialScale, (, double, lowerBound, ,, double, upperBound, ,, double, startAngle, ,, double]
[,, 4, ), ;, }, public, StandardDialScale, (, double, lowerBound, ,, double, upperBound, ,, double, startAngle, ,, double, extent, ,]
[), ;, }, public, StandardDialScale, (, double, lowerBound, ,, double, upperBound, ,, double, startAngle, ,, double, extent, ,, double, majorTickIncrement]
[=, startAngle, ;, this, ., extent, =, extent, ;, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound]
[., startAngle, =, startAngle, ;, this, ., extent, =, extent, ;, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound]
[;, this, ., extent, =, extent, ;, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this]
[=, extent, ;, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., tickRadius, =, 0.70]
[., extent, =, extent, ;, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., tickRadius]
[;, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., tickRadius, =, 0.70, ;, this]
[=, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., tickRadius, =, 0.70, ;, this, ., tickLabelsVisible, =, true]
[., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., tickRadius, =, 0.70, ;, this, ., tickLabelsVisible]
[;, this, ., upperBound, =, upperBound, ;, this, ., tickRadius, =, 0.70, ;, this, ., tickLabelsVisible, =, true, ;, this]
[=, upperBound, ;, this, ., tickRadius, =, 0.70, ;, this, ., tickLabelsVisible, =, true, ;, this, ., tickLabelFormatter, =, new]
[., upperBound, =, upperBound, ;, this, ., tickRadius, =, 0.70, ;, this, ., tickLabelsVisible, =, true, ;, this, ., tickLabelFormatter]
[;, this, ., tickRadius, =, 0.70, ;, this, ., tickLabelsVisible, =, true, ;, this, ., tickLabelFormatter, =, new, DecimalFormat, (]
[=, 0.70, ;, this, ., tickLabelsVisible, =, true, ;, this, ., tickLabelFormatter, =, new, DecimalFormat, (, "0.0", ), ;, this]
[., tickRadius, =, 0.70, ;, this, ., tickLabelsVisible, =, true, ;, this, ., tickLabelFormatter, =, new, DecimalFormat, (, "0.0", )]
[;, this, ., tickLabelsVisible, =, true, ;, this, ., tickLabelFormatter, =, new, DecimalFormat, (, "0.0", ), ;, this, ., firstTickLabelVisible]
[=, true, ;, this, ., tickLabelFormatter, =, new, DecimalFormat, (, "0.0", ), ;, this, ., firstTickLabelVisible, =, true, ;, this]
[., tickLabelsVisible, =, true, ;, this, ., tickLabelFormatter, =, new, DecimalFormat, (, "0.0", ), ;, this, ., firstTickLabelVisible, =, true]
[;, this, ., tickLabelFormatter, =, new, DecimalFormat, (, "0.0", ), ;, this, ., firstTickLabelVisible, =, true, ;, this, ., tickLabelFont]
[=, new, DecimalFormat, (, "0.0", ), ;, this, ., firstTickLabelVisible, =, true, ;, this, ., tickLabelFont, =, new, Font, (]
[., tickLabelFormatter, =, new, DecimalFormat, (, "0.0", ), ;, this, ., firstTickLabelVisible, =, true, ;, this, ., tickLabelFont, =, new]
[;, this, ., firstTickLabelVisible, =, true, ;, this, ., tickLabelFont, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,]
[), ;, this, ., firstTickLabelVisible, =, true, ;, this, ., tickLabelFont, =, new, Font, (, "Tahoma", ,, Font, ., BOLD]
[=, true, ;, this, ., tickLabelFont, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 16, ), ;, this]
[., firstTickLabelVisible, =, true, ;, this, ., tickLabelFont, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 16, )]
[;, this, ., tickLabelFont, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 16, ), ;, this, ., tickLabelPaint]
[=, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 16, ), ;, this, ., tickLabelPaint, =, Color, ., blue]
[., tickLabelFont, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 16, ), ;, this, ., tickLabelPaint, =, Color]
[;, this, ., tickLabelPaint, =, Color, ., blue, ;, this, ., tickLabelOffset, =, 0.10, ;, this, ., majorTickIncrement, =, majorTickIncrement]
[,, Font, ., BOLD, ,, 16, ), ;, this, ., tickLabelPaint, =, Color, ., blue, ;, this, ., tickLabelOffset, =]
[,, 16, ), ;, this, ., tickLabelPaint, =, Color, ., blue, ;, this, ., tickLabelOffset, =, 0.10, ;, this, .]
[., BOLD, ,, 16, ), ;, this, ., tickLabelPaint, =, Color, ., blue, ;, this, ., tickLabelOffset, =, 0.10, ;]
[), ;, this, ., tickLabelPaint, =, Color, ., blue, ;, this, ., tickLabelOffset, =, 0.10, ;, this, ., majorTickIncrement, =]
[=, Color, ., blue, ;, this, ., tickLabelOffset, =, 0.10, ;, this, ., majorTickIncrement, =, majorTickIncrement, ;, this, ., majorTickLength]
[., tickLabelPaint, =, Color, ., blue, ;, this, ., tickLabelOffset, =, 0.10, ;, this, ., majorTickIncrement, =, majorTickIncrement, ;, this]
[;, this, ., tickLabelOffset, =, 0.10, ;, this, ., majorTickIncrement, =, majorTickIncrement, ;, this, ., majorTickLength, =, 0.04, ;, this]
[., blue, ;, this, ., tickLabelOffset, =, 0.10, ;, this, ., majorTickIncrement, =, majorTickIncrement, ;, this, ., majorTickLength, =, 0.04]
[=, 0.10, ;, this, ., majorTickIncrement, =, majorTickIncrement, ;, this, ., majorTickLength, =, 0.04, ;, this, ., majorTickPaint, =, Color]
[., tickLabelOffset, =, 0.10, ;, this, ., majorTickIncrement, =, majorTickIncrement, ;, this, ., majorTickLength, =, 0.04, ;, this, ., majorTickPaint]
[;, this, ., majorTickIncrement, =, majorTickIncrement, ;, this, ., majorTickLength, =, 0.04, ;, this, ., majorTickPaint, =, Color, ., black]
[=, majorTickIncrement, ;, this, ., majorTickLength, =, 0.04, ;, this, ., majorTickPaint, =, Color, ., black, ;, this, ., majorTickStroke]
[., majorTickIncrement, =, majorTickIncrement, ;, this, ., majorTickLength, =, 0.04, ;, this, ., majorTickPaint, =, Color, ., black, ;, this]
[;, this, ., majorTickLength, =, 0.04, ;, this, ., majorTickPaint, =, Color, ., black, ;, this, ., majorTickStroke, =, new]
[=, 0.04, ;, this, ., majorTickPaint, =, Color, ., black, ;, this, ., majorTickStroke, =, new, BasicStroke, (, 3.0f, )]
[., majorTickLength, =, 0.04, ;, this, ., majorTickPaint, =, Color, ., black, ;, this, ., majorTickStroke, =, new, BasicStroke, (]
[;, this, ., majorTickPaint, =, Color, ., black, ;, this, ., majorTickStroke, =, new, BasicStroke, (, 3.0f, ), ;, this]
[=, Color, ., black, ;, this, ., majorTickStroke, =, new, BasicStroke, (, 3.0f, ), ;, this, ., minorTickCount, =, minorTickCount]
[., majorTickPaint, =, Color, ., black, ;, this, ., majorTickStroke, =, new, BasicStroke, (, 3.0f, ), ;, this, ., minorTickCount]
[;, this, ., majorTickStroke, =, new, BasicStroke, (, 3.0f, ), ;, this, ., minorTickCount, =, minorTickCount, ;, this, ., minorTickLength]
[., black, ;, this, ., majorTickStroke, =, new, BasicStroke, (, 3.0f, ), ;, this, ., minorTickCount, =, minorTickCount, ;, this]
[=, new, BasicStroke, (, 3.0f, ), ;, this, ., minorTickCount, =, minorTickCount, ;, this, ., minorTickLength, =, 0.02, ;, this]
[., majorTickStroke, =, new, BasicStroke, (, 3.0f, ), ;, this, ., minorTickCount, =, minorTickCount, ;, this, ., minorTickLength, =, 0.02]
[;, this, ., minorTickCount, =, minorTickCount, ;, this, ., minorTickLength, =, 0.02, ;, this, ., minorTickPaint, =, Color, ., black]
[), ;, this, ., minorTickCount, =, minorTickCount, ;, this, ., minorTickLength, =, 0.02, ;, this, ., minorTickPaint, =, Color, .]
[=, minorTickCount, ;, this, ., minorTickLength, =, 0.02, ;, this, ., minorTickPaint, =, Color, ., black, ;, this, ., minorTickStroke]
[., minorTickCount, =, minorTickCount, ;, this, ., minorTickLength, =, 0.02, ;, this, ., minorTickPaint, =, Color, ., black, ;, this]
[;, this, ., minorTickLength, =, 0.02, ;, this, ., minorTickPaint, =, Color, ., black, ;, this, ., minorTickStroke, =, new]
[=, 0.02, ;, this, ., minorTickPaint, =, Color, ., black, ;, this, ., minorTickStroke, =, new, BasicStroke, (, 1.0f, )]
[., minorTickLength, =, 0.02, ;, this, ., minorTickPaint, =, Color, ., black, ;, this, ., minorTickStroke, =, new, BasicStroke, (]
[;, this, ., minorTickPaint, =, Color, ., black, ;, this, ., minorTickStroke, =, new, BasicStroke, (, 1.0f, ), ;, }]
[=, Color, ., black, ;, this, ., minorTickStroke, =, new, BasicStroke, (, 1.0f, ), ;, }, public, double, getLowerBound, (]
[., minorTickPaint, =, Color, ., black, ;, this, ., minorTickStroke, =, new, BasicStroke, (, 1.0f, ), ;, }, public, double]
[;, this, ., minorTickStroke, =, new, BasicStroke, (, 1.0f, ), ;, }, public, double, getLowerBound, (, ), {, return, this]
[., black, ;, this, ., minorTickStroke, =, new, BasicStroke, (, 1.0f, ), ;, }, public, double, getLowerBound, (, ), {]
[=, new, BasicStroke, (, 1.0f, ), ;, }, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }]
[., minorTickStroke, =, new, BasicStroke, (, 1.0f, ), ;, }, public, double, getLowerBound, (, ), {, return, this, ., lowerBound]
[;, }, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, void, setLowerBound, (, double, lower]
[), ;, }, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, void, setLowerBound, (, double]
[;, }, public, void, setLowerBound, (, double, lower, ), {, this, ., lowerBound, =, lower, ;, notifyListeners, (, new, DialLayerChangeEvent]
[., lowerBound, ;, }, public, void, setLowerBound, (, double, lower, ), {, this, ., lowerBound, =, lower, ;, notifyListeners, (]
[=, lower, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getUpperBound, (, ), {, return]
[., lowerBound, =, lower, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getUpperBound, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getUpperBound, (, ), {, return, this, .]
[;, }, public, double, getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, void, setUpperBound, (, double, upper]
[), ;, }, public, double, getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, void, setUpperBound, (, double]
[), ), ;, }, public, double, getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, void, setUpperBound, (]
[;, }, public, void, setUpperBound, (, double, upper, ), {, this, ., upperBound, =, upper, ;, notifyListeners, (, new, DialLayerChangeEvent]
[., upperBound, ;, }, public, void, setUpperBound, (, double, upper, ), {, this, ., upperBound, =, upper, ;, notifyListeners, (]
[=, upper, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getStartAngle, (, ), {, return]
[., upperBound, =, upper, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getStartAngle, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getStartAngle, (, ), {, return, this, .]
[;, }, public, double, getStartAngle, (, ), {, return, this, ., startAngle, ;, }, public, void, setStartAngle, (, double, angle]
[), ;, }, public, double, getStartAngle, (, ), {, return, this, ., startAngle, ;, }, public, void, setStartAngle, (, double]
[), ), ;, }, public, double, getStartAngle, (, ), {, return, this, ., startAngle, ;, }, public, void, setStartAngle, (]
[;, }, public, void, setStartAngle, (, double, angle, ), {, this, ., startAngle, =, angle, ;, notifyListeners, (, new, DialLayerChangeEvent]
[., startAngle, ;, }, public, void, setStartAngle, (, double, angle, ), {, this, ., startAngle, =, angle, ;, notifyListeners, (]
[=, angle, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getExtent, (, ), {, return]
[., startAngle, =, angle, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getExtent, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getExtent, (, ), {, return, this, .]
[;, }, public, double, getExtent, (, ), {, return, this, ., extent, ;, }, public, void, setExtent, (, double, extent]
[), ;, }, public, double, getExtent, (, ), {, return, this, ., extent, ;, }, public, void, setExtent, (, double]
[), ), ;, }, public, double, getExtent, (, ), {, return, this, ., extent, ;, }, public, void, setExtent, (]
[;, }, public, void, setExtent, (, double, extent, ), {, this, ., extent, =, extent, ;, notifyListeners, (, new, DialLayerChangeEvent]
[., extent, ;, }, public, void, setExtent, (, double, extent, ), {, this, ., extent, =, extent, ;, notifyListeners, (]
[=, extent, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getTickRadius, (, ), {, return]
[., extent, =, extent, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getTickRadius, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getTickRadius, (, ), {, return, this, .]
[;, }, public, double, getTickRadius, (, ), {, return, this, ., tickRadius, ;, }, public, void, setTickRadius, (, double, radius]
[), ;, }, public, double, getTickRadius, (, ), {, return, this, ., tickRadius, ;, }, public, void, setTickRadius, (, double]
[), ), ;, }, public, double, getTickRadius, (, ), {, return, this, ., tickRadius, ;, }, public, void, setTickRadius, (]
[;, }, public, void, setTickRadius, (, double, radius, ), {, if, (, radius, <=, 0.0, ), {, throw, new, IllegalArgumentException]
[., tickRadius, ;, }, public, void, setTickRadius, (, double, radius, ), {, if, (, radius, <=, 0.0, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "The 'radius' must be positive.", ), ;, }, this, ., tickRadius, =, radius, ;, notifyListeners, (, new, DialLayerChangeEvent]
[<=, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'radius' must be positive.", ), ;, }, this, ., tickRadius, =, radius, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "The 'radius' must be positive.", ), ;, }, this, ., tickRadius, =, radius, ;, notifyListeners, (, new, DialLayerChangeEvent]
[;, }, this, ., tickRadius, =, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double]
[), ;, }, this, ., tickRadius, =, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getMajorTickIncrement, (, ), {, return]
[., tickRadius, =, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getMajorTickIncrement, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getMajorTickIncrement, (, ), {, return, this, .]
[;, }, public, double, getMajorTickIncrement, (, ), {, return, this, ., majorTickIncrement, ;, }, public, void, setMajorTickIncrement, (, double, increment]
[), ;, }, public, double, getMajorTickIncrement, (, ), {, return, this, ., majorTickIncrement, ;, }, public, void, setMajorTickIncrement, (, double]
[), ), ;, }, public, double, getMajorTickIncrement, (, ), {, return, this, ., majorTickIncrement, ;, }, public, void, setMajorTickIncrement, (]
[;, }, public, void, setMajorTickIncrement, (, double, increment, ), {, if, (, increment, <=, 0.0, ), {, throw, new, IllegalArgumentException]
[., majorTickIncrement, ;, }, public, void, setMajorTickIncrement, (, double, increment, ), {, if, (, increment, <=, 0.0, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "The 'increment' must be positive.", ), ;, }, this, ., majorTickIncrement, =, increment, ;, notifyListeners, (, new, DialLayerChangeEvent]
[<=, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'increment' must be positive.", ), ;, }, this, ., majorTickIncrement, =, increment, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "The 'increment' must be positive.", ), ;, }, this, ., majorTickIncrement, =, increment, ;, notifyListeners, (, new, DialLayerChangeEvent]
[;, }, this, ., majorTickIncrement, =, increment, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double]
[), ;, }, this, ., majorTickIncrement, =, increment, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, increment, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getMajorTickLength, (, ), {, return]
[., majorTickIncrement, =, increment, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getMajorTickLength, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getMajorTickLength, (, ), {, return, this, .]
[;, }, public, double, getMajorTickLength, (, ), {, return, this, ., majorTickLength, ;, }, public, void, setMajorTickLength, (, double, length]
[), ;, }, public, double, getMajorTickLength, (, ), {, return, this, ., majorTickLength, ;, }, public, void, setMajorTickLength, (, double]
[), ), ;, }, public, double, getMajorTickLength, (, ), {, return, this, ., majorTickLength, ;, }, public, void, setMajorTickLength, (]
[;, }, public, void, setMajorTickLength, (, double, length, ), {, if, (, length, <, 0.0, ), {, throw, new, IllegalArgumentException]
[., majorTickLength, ;, }, public, void, setMajorTickLength, (, double, length, ), {, if, (, length, <, 0.0, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Negative 'length' argument.", ), ;, }, this, ., majorTickLength, =, length, ;, notifyListeners, (, new, DialLayerChangeEvent]
[<, 0.0, ), {, throw, new, IllegalArgumentException, (, "Negative 'length' argument.", ), ;, }, this, ., majorTickLength, =, length, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "Negative 'length' argument.", ), ;, }, this, ., majorTickLength, =, length, ;, notifyListeners, (, new, DialLayerChangeEvent]
[;, }, this, ., majorTickLength, =, length, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint]
[), ;, }, this, ., majorTickLength, =, length, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, length, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getMajorTickPaint, (, ), {, return]
[., majorTickLength, =, length, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getMajorTickPaint, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getMajorTickPaint, (, ), {, return, this, .]
[;, }, public, Paint, getMajorTickPaint, (, ), {, return, this, ., majorTickPaint, ;, }, public, void, setMajorTickPaint, (, Paint, paint]
[), ;, }, public, Paint, getMajorTickPaint, (, ), {, return, this, ., majorTickPaint, ;, }, public, void, setMajorTickPaint, (, Paint]
[), ), ;, }, public, Paint, getMajorTickPaint, (, ), {, return, this, ., majorTickPaint, ;, }, public, void, setMajorTickPaint, (]
[;, }, public, void, setMajorTickPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[., majorTickPaint, ;, }, public, void, setMajorTickPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., majorTickPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., majorTickPaint, =, paint, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., majorTickPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent]
[;, }, this, ., majorTickPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Stroke]
[), ;, }, this, ., majorTickPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Stroke, getMajorTickStroke, (, ), {, return]
[., majorTickPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Stroke, getMajorTickStroke, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Stroke, getMajorTickStroke, (, ), {, return, this, .]
[;, }, public, Stroke, getMajorTickStroke, (, ), {, return, this, ., majorTickStroke, ;, }, public, void, setMajorTickStroke, (, Stroke, stroke]
[), ;, }, public, Stroke, getMajorTickStroke, (, ), {, return, this, ., majorTickStroke, ;, }, public, void, setMajorTickStroke, (, Stroke]
[), ), ;, }, public, Stroke, getMajorTickStroke, (, ), {, return, this, ., majorTickStroke, ;, }, public, void, setMajorTickStroke, (]
[;, }, public, void, setMajorTickStroke, (, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException]
[., majorTickStroke, ;, }, public, void, setMajorTickStroke, (, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., majorTickStroke, =, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., majorTickStroke, =, stroke, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., majorTickStroke, =, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent]
[;, }, this, ., majorTickStroke, =, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, int]
[), ;, }, this, ., majorTickStroke, =, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, int, getMinorTickCount, (, ), {, return]
[., majorTickStroke, =, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, int, getMinorTickCount, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, int, getMinorTickCount, (, ), {, return, this, .]
[;, }, public, int, getMinorTickCount, (, ), {, return, this, ., minorTickCount, ;, }, public, void, setMinorTickCount, (, int, count]
[), ;, }, public, int, getMinorTickCount, (, ), {, return, this, ., minorTickCount, ;, }, public, void, setMinorTickCount, (, int]
[), ), ;, }, public, int, getMinorTickCount, (, ), {, return, this, ., minorTickCount, ;, }, public, void, setMinorTickCount, (]
[;, }, public, void, setMinorTickCount, (, int, count, ), {, if, (, count, <, 0, ), {, throw, new, IllegalArgumentException]
[., minorTickCount, ;, }, public, void, setMinorTickCount, (, int, count, ), {, if, (, count, <, 0, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "The 'count' cannot be negative.", ), ;, }, this, ., minorTickCount, =, count, ;, notifyListeners, (, new, DialLayerChangeEvent]
[<, 0, ), {, throw, new, IllegalArgumentException, (, "The 'count' cannot be negative.", ), ;, }, this, ., minorTickCount, =, count, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "The 'count' cannot be negative.", ), ;, }, this, ., minorTickCount, =, count, ;, notifyListeners, (, new, DialLayerChangeEvent]
[;, }, this, ., minorTickCount, =, count, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double]
[), ;, }, this, ., minorTickCount, =, count, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, count, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getMinorTickLength, (, ), {, return]
[., minorTickCount, =, count, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getMinorTickLength, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getMinorTickLength, (, ), {, return, this, .]
[;, }, public, double, getMinorTickLength, (, ), {, return, this, ., minorTickLength, ;, }, public, void, setMinorTickLength, (, double, length]
[), ;, }, public, double, getMinorTickLength, (, ), {, return, this, ., minorTickLength, ;, }, public, void, setMinorTickLength, (, double]
[), ), ;, }, public, double, getMinorTickLength, (, ), {, return, this, ., minorTickLength, ;, }, public, void, setMinorTickLength, (]
[;, }, public, void, setMinorTickLength, (, double, length, ), {, if, (, length, <, 0.0, ), {, throw, new, IllegalArgumentException]
[., minorTickLength, ;, }, public, void, setMinorTickLength, (, double, length, ), {, if, (, length, <, 0.0, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Negative 'length' argument.", ), ;, }, this, ., minorTickLength, =, length, ;, notifyListeners, (, new, DialLayerChangeEvent]
[<, 0.0, ), {, throw, new, IllegalArgumentException, (, "Negative 'length' argument.", ), ;, }, this, ., minorTickLength, =, length, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "Negative 'length' argument.", ), ;, }, this, ., minorTickLength, =, length, ;, notifyListeners, (, new, DialLayerChangeEvent]
[;, }, this, ., minorTickLength, =, length, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint]
[), ;, }, this, ., minorTickLength, =, length, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, length, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getMinorTickPaint, (, ), {, return]
[., minorTickLength, =, length, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getMinorTickPaint, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getMinorTickPaint, (, ), {, return, this, .]
[;, }, public, Paint, getMinorTickPaint, (, ), {, return, this, ., minorTickPaint, ;, }, public, void, setMinorTickPaint, (, Paint, paint]
[), ;, }, public, Paint, getMinorTickPaint, (, ), {, return, this, ., minorTickPaint, ;, }, public, void, setMinorTickPaint, (, Paint]
[), ), ;, }, public, Paint, getMinorTickPaint, (, ), {, return, this, ., minorTickPaint, ;, }, public, void, setMinorTickPaint, (]
[;, }, public, void, setMinorTickPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[., minorTickPaint, ;, }, public, void, setMinorTickPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., minorTickPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., minorTickPaint, =, paint, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., minorTickPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent]
[;, }, this, ., minorTickPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Stroke]
[), ;, }, this, ., minorTickPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Stroke, getMinorTickStroke, (, ), {, return]
[., minorTickPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Stroke, getMinorTickStroke, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Stroke, getMinorTickStroke, (, ), {, return, this, .]
[;, }, public, Stroke, getMinorTickStroke, (, ), {, return, this, ., minorTickStroke, ;, }, public, void, setMinorTickStroke, (, Stroke, stroke]
[), ;, }, public, Stroke, getMinorTickStroke, (, ), {, return, this, ., minorTickStroke, ;, }, public, void, setMinorTickStroke, (, Stroke]
[), ), ;, }, public, Stroke, getMinorTickStroke, (, ), {, return, this, ., minorTickStroke, ;, }, public, void, setMinorTickStroke, (]
[;, }, public, void, setMinorTickStroke, (, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException]
[., minorTickStroke, ;, }, public, void, setMinorTickStroke, (, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., minorTickStroke, =, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., minorTickStroke, =, stroke, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., minorTickStroke, =, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent]
[;, }, this, ., minorTickStroke, =, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double]
[), ;, }, this, ., minorTickStroke, =, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getTickLabelOffset, (, ), {, return]
[., minorTickStroke, =, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getTickLabelOffset, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getTickLabelOffset, (, ), {, return, this, .]
[;, }, public, double, getTickLabelOffset, (, ), {, return, this, ., tickLabelOffset, ;, }, public, void, setTickLabelOffset, (, double, offset]
[), ;, }, public, double, getTickLabelOffset, (, ), {, return, this, ., tickLabelOffset, ;, }, public, void, setTickLabelOffset, (, double]
[), ), ;, }, public, double, getTickLabelOffset, (, ), {, return, this, ., tickLabelOffset, ;, }, public, void, setTickLabelOffset, (]
[;, }, public, void, setTickLabelOffset, (, double, offset, ), {, this, ., tickLabelOffset, =, offset, ;, notifyListeners, (, new, DialLayerChangeEvent]
[., tickLabelOffset, ;, }, public, void, setTickLabelOffset, (, double, offset, ), {, this, ., tickLabelOffset, =, offset, ;, notifyListeners, (]
[=, offset, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Font, getTickLabelFont, (, ), {, return]
[., tickLabelOffset, =, offset, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Font, getTickLabelFont, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Font, getTickLabelFont, (, ), {, return, this, .]
[;, }, public, Font, getTickLabelFont, (, ), {, return, this, ., tickLabelFont, ;, }, public, void, setTickLabelFont, (, Font, font]
[), ;, }, public, Font, getTickLabelFont, (, ), {, return, this, ., tickLabelFont, ;, }, public, void, setTickLabelFont, (, Font]
[), ), ;, }, public, Font, getTickLabelFont, (, ), {, return, this, ., tickLabelFont, ;, }, public, void, setTickLabelFont, (]
[;, }, public, void, setTickLabelFont, (, Font, font, ), {, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException]
[., tickLabelFont, ;, }, public, void, setTickLabelFont, (, Font, font, ), {, if, (, font, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, this, ., tickLabelFont, =, font, ;, notifyListeners, (, new, DialLayerChangeEvent]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, this, ., tickLabelFont, =, font, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, this, ., tickLabelFont, =, font, ;, notifyListeners, (, new, DialLayerChangeEvent]
[;, }, this, ., tickLabelFont, =, font, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint]
[), ;, }, this, ., tickLabelFont, =, font, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, font, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getTickLabelPaint, (, ), {, return]
[., tickLabelFont, =, font, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getTickLabelPaint, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getTickLabelPaint, (, ), {, return, this, .]
[;, }, public, Paint, getTickLabelPaint, (, ), {, return, this, ., tickLabelPaint, ;, }, public, void, setTickLabelPaint, (, Paint, paint]
[), ;, }, public, Paint, getTickLabelPaint, (, ), {, return, this, ., tickLabelPaint, ;, }, public, void, setTickLabelPaint, (, Paint]
[), ), ;, }, public, Paint, getTickLabelPaint, (, ), {, return, this, ., tickLabelPaint, ;, }, public, void, setTickLabelPaint, (]
[;, }, public, void, setTickLabelPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[., tickLabelPaint, ;, }, public, void, setTickLabelPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., tickLabelPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., tickLabelPaint, =, paint, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., tickLabelPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent]
[;, }, this, ., tickLabelPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean]
[), ;, }, this, ., tickLabelPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, getTickLabelsVisible, (, ), {, return]
[., tickLabelPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, getTickLabelsVisible, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, getTickLabelsVisible, (, ), {, return, this, .]
[;, }, public, boolean, getTickLabelsVisible, (, ), {, return, this, ., tickLabelsVisible, ;, }, public, void, setTickLabelsVisible, (, boolean, visible]
[), ;, }, public, boolean, getTickLabelsVisible, (, ), {, return, this, ., tickLabelsVisible, ;, }, public, void, setTickLabelsVisible, (, boolean]
[), ), ;, }, public, boolean, getTickLabelsVisible, (, ), {, return, this, ., tickLabelsVisible, ;, }, public, void, setTickLabelsVisible, (]
[;, }, public, void, setTickLabelsVisible, (, boolean, visible, ), {, this, ., tickLabelsVisible, =, visible, ;, notifyListeners, (, new, DialLayerChangeEvent]
[., tickLabelsVisible, ;, }, public, void, setTickLabelsVisible, (, boolean, visible, ), {, this, ., tickLabelsVisible, =, visible, ;, notifyListeners, (]
[=, visible, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, NumberFormat, getTickLabelFormatter, (, ), {, return]
[., tickLabelsVisible, =, visible, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, NumberFormat, getTickLabelFormatter, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, NumberFormat, getTickLabelFormatter, (, ), {, return, this, .]
[;, }, public, NumberFormat, getTickLabelFormatter, (, ), {, return, this, ., tickLabelFormatter, ;, }, public, void, setTickLabelFormatter, (, NumberFormat, formatter]
[), ;, }, public, NumberFormat, getTickLabelFormatter, (, ), {, return, this, ., tickLabelFormatter, ;, }, public, void, setTickLabelFormatter, (, NumberFormat]
[), ), ;, }, public, NumberFormat, getTickLabelFormatter, (, ), {, return, this, ., tickLabelFormatter, ;, }, public, void, setTickLabelFormatter, (]
[;, }, public, void, setTickLabelFormatter, (, NumberFormat, formatter, ), {, if, (, formatter, ==, null, ), {, throw, new, IllegalArgumentException]
[., tickLabelFormatter, ;, }, public, void, setTickLabelFormatter, (, NumberFormat, formatter, ), {, if, (, formatter, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'formatter' argument.", ), ;, }, this, ., tickLabelFormatter, =, formatter, ;, notifyListeners, (, new, DialLayerChangeEvent]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'formatter' argument.", ), ;, }, this, ., tickLabelFormatter, =, formatter, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'formatter' argument.", ), ;, }, this, ., tickLabelFormatter, =, formatter, ;, notifyListeners, (, new, DialLayerChangeEvent]
[;, }, this, ., tickLabelFormatter, =, formatter, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean]
[), ;, }, this, ., tickLabelFormatter, =, formatter, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, formatter, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, getFirstTickLabelVisible, (, ), {, return]
[., tickLabelFormatter, =, formatter, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, getFirstTickLabelVisible, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, getFirstTickLabelVisible, (, ), {, return, this, .]
[;, }, public, boolean, getFirstTickLabelVisible, (, ), {, return, this, ., firstTickLabelVisible, ;, }, public, void, setFirstTickLabelVisible, (, boolean, visible]
[), ;, }, public, boolean, getFirstTickLabelVisible, (, ), {, return, this, ., firstTickLabelVisible, ;, }, public, void, setFirstTickLabelVisible, (, boolean]
[), ), ;, }, public, boolean, getFirstTickLabelVisible, (, ), {, return, this, ., firstTickLabelVisible, ;, }, public, void, setFirstTickLabelVisible, (]
[;, }, public, void, setFirstTickLabelVisible, (, boolean, visible, ), {, this, ., firstTickLabelVisible, =, visible, ;, notifyListeners, (, new, DialLayerChangeEvent]
[., firstTickLabelVisible, ;, }, public, void, setFirstTickLabelVisible, (, boolean, visible, ), {, this, ., firstTickLabelVisible, =, visible, ;, notifyListeners, (]
[=, visible, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, isClippedToWindow, (, ), {, return]
[., firstTickLabelVisible, =, visible, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, isClippedToWindow, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, isClippedToWindow, (, ), {, return, true, ;]
[;, }, public, boolean, isClippedToWindow, (, ), {, return, true, ;, }, public, void, draw, (, Graphics2D, g2, ,, DialPlot]
[), ;, }, public, boolean, isClippedToWindow, (, ), {, return, true, ;, }, public, void, draw, (, Graphics2D, g2, ,]
[), ), ;, }, public, boolean, isClippedToWindow, (, ), {, return, true, ;, }, public, void, draw, (, Graphics2D, g2]
[;, }, public, void, draw, (, Graphics2D, g2, ,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D]
[;, Rectangle2D, arcRectMajor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., majorTickLength, ,, this, .]
[., rectangleByRadius, (, frame, ,, this, ., tickRadius, ,, this, ., tickRadius, ), ;, Rectangle2D, arcRectMajor, =, DialPlot, ., rectangleByRadius]
[,, this, ., tickRadius, ,, this, ., tickRadius, ), ;, Rectangle2D, arcRectMajor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this]
[,, this, ., tickRadius, ), ;, Rectangle2D, arcRectMajor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this]
[., tickRadius, ,, this, ., tickRadius, ), ;, Rectangle2D, arcRectMajor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius]
[), ;, Rectangle2D, arcRectMajor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., majorTickLength, ,, this]
[., tickRadius, ), ;, Rectangle2D, arcRectMajor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., majorTickLength]
[;, Rectangle2D, arcRectMinor, =, arcRect, ;, if, (, this, ., minorTickCount, >, 0, &&, this, ., minorTickLength, >, 0.0, )]
[., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., majorTickLength, ,, this, ., tickRadius, -, this, ., majorTickLength]
[,, this, ., tickRadius, -, this, ., majorTickLength, ,, this, ., tickRadius, -, this, ., majorTickLength, ), ;, Rectangle2D, arcRectMinor]
[,, this, ., tickRadius, -, this, ., majorTickLength, ), ;, Rectangle2D, arcRectMinor, =, arcRect, ;, if, (, this, ., minorTickCount]
[-, this, ., majorTickLength, ,, this, ., tickRadius, -, this, ., majorTickLength, ), ;, Rectangle2D, arcRectMinor, =, arcRect, ;, if]
[., tickRadius, -, this, ., majorTickLength, ,, this, ., tickRadius, -, this, ., majorTickLength, ), ;, Rectangle2D, arcRectMinor, =, arcRect]
[,, this, ., tickRadius, -, this, ., majorTickLength, ), ;, Rectangle2D, arcRectMinor, =, arcRect, ;, if, (, this, ., minorTickCount]
[., majorTickLength, ,, this, ., tickRadius, -, this, ., majorTickLength, ), ;, Rectangle2D, arcRectMinor, =, arcRect, ;, if, (, this]
[), ;, Rectangle2D, arcRectMinor, =, arcRect, ;, if, (, this, ., minorTickCount, >, 0, &&, this, ., minorTickLength, >, 0.0]
[-, this, ., majorTickLength, ), ;, Rectangle2D, arcRectMinor, =, arcRect, ;, if, (, this, ., minorTickCount, >, 0, &&, this]
[., tickRadius, -, this, ., majorTickLength, ), ;, Rectangle2D, arcRectMinor, =, arcRect, ;, if, (, this, ., minorTickCount, >, 0]
[), ;, Rectangle2D, arcRectMinor, =, arcRect, ;, if, (, this, ., minorTickCount, >, 0, &&, this, ., minorTickLength, >, 0.0]
[., majorTickLength, ), ;, Rectangle2D, arcRectMinor, =, arcRect, ;, if, (, this, ., minorTickCount, >, 0, &&, this, ., minorTickLength]
[;, if, (, this, ., minorTickCount, >, 0, &&, this, ., minorTickLength, >, 0.0, ), {, arcRectMinor, =, DialPlot, .]
[), {, arcRectMinor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., minorTickLength, ,, this, .]
[&&, this, ., minorTickLength, >, 0.0, ), {, arcRectMinor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -]
[>, 0, &&, this, ., minorTickLength, >, 0.0, ), {, arcRectMinor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, .]
[., minorTickCount, >, 0, &&, this, ., minorTickLength, >, 0.0, ), {, arcRectMinor, =, DialPlot, ., rectangleByRadius, (, frame, ,]
[&&, this, ., minorTickLength, >, 0.0, ), {, arcRectMinor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -]
[), {, arcRectMinor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., minorTickLength, ,, this, .]
[>, 0.0, ), {, arcRectMinor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., minorTickLength, ,]
[., minorTickLength, >, 0.0, ), {, arcRectMinor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, .]
[), {, arcRectMinor, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., minorTickLength, ,, this, .]
[=, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., minorTickLength, ,, this, ., tickRadius, -, this]
[;, }, Rectangle2D, arcRectForLabels, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., tickLabelOffset, ,, this]
[., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., minorTickLength, ,, this, ., tickRadius, -, this, ., minorTickLength]
[,, this, ., tickRadius, -, this, ., minorTickLength, ,, this, ., tickRadius, -, this, ., minorTickLength, ), ;, }, Rectangle2D]
[,, this, ., tickRadius, -, this, ., minorTickLength, ), ;, }, Rectangle2D, arcRectForLabels, =, DialPlot, ., rectangleByRadius, (, frame, ,]
[-, this, ., minorTickLength, ,, this, ., tickRadius, -, this, ., minorTickLength, ), ;, }, Rectangle2D, arcRectForLabels, =, DialPlot, .]
[., tickRadius, -, this, ., minorTickLength, ,, this, ., tickRadius, -, this, ., minorTickLength, ), ;, }, Rectangle2D, arcRectForLabels, =]
[,, this, ., tickRadius, -, this, ., minorTickLength, ), ;, }, Rectangle2D, arcRectForLabels, =, DialPlot, ., rectangleByRadius, (, frame, ,]
[., minorTickLength, ,, this, ., tickRadius, -, this, ., minorTickLength, ), ;, }, Rectangle2D, arcRectForLabels, =, DialPlot, ., rectangleByRadius, (]
[), ;, }, Rectangle2D, arcRectForLabels, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., tickLabelOffset, ,]
[-, this, ., minorTickLength, ), ;, }, Rectangle2D, arcRectForLabels, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -]
[., tickRadius, -, this, ., minorTickLength, ), ;, }, Rectangle2D, arcRectForLabels, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, .]
[), ;, }, Rectangle2D, arcRectForLabels, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., tickLabelOffset, ,]
[., minorTickLength, ), ;, }, Rectangle2D, arcRectForLabels, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, .]
[;, boolean, firstLabel, =, true, ;, Arc2D, arc, =, new, Arc2D, ., Double, (, ), ;, Line2D, workingLine, =, new]
[., rectangleByRadius, (, frame, ,, this, ., tickRadius, -, this, ., tickLabelOffset, ,, this, ., tickRadius, -, this, ., tickLabelOffset]
[,, this, ., tickRadius, -, this, ., tickLabelOffset, ,, this, ., tickRadius, -, this, ., tickLabelOffset, ), ;, boolean, firstLabel]
[,, this, ., tickRadius, -, this, ., tickLabelOffset, ), ;, boolean, firstLabel, =, true, ;, Arc2D, arc, =, new, Arc2D]
[-, this, ., tickLabelOffset, ,, this, ., tickRadius, -, this, ., tickLabelOffset, ), ;, boolean, firstLabel, =, true, ;, Arc2D]
[., tickRadius, -, this, ., tickLabelOffset, ,, this, ., tickRadius, -, this, ., tickLabelOffset, ), ;, boolean, firstLabel, =, true]
[,, this, ., tickRadius, -, this, ., tickLabelOffset, ), ;, boolean, firstLabel, =, true, ;, Arc2D, arc, =, new, Arc2D]
[., tickLabelOffset, ,, this, ., tickRadius, -, this, ., tickLabelOffset, ), ;, boolean, firstLabel, =, true, ;, Arc2D, arc, =]
[), ;, boolean, firstLabel, =, true, ;, Arc2D, arc, =, new, Arc2D, ., Double, (, ), ;, Line2D, workingLine, =]
[-, this, ., tickLabelOffset, ), ;, boolean, firstLabel, =, true, ;, Arc2D, arc, =, new, Arc2D, ., Double, (, )]
[., tickRadius, -, this, ., tickLabelOffset, ), ;, boolean, firstLabel, =, true, ;, Arc2D, arc, =, new, Arc2D, ., Double]
[), ;, boolean, firstLabel, =, true, ;, Arc2D, arc, =, new, Arc2D, ., Double, (, ), ;, Line2D, workingLine, =]
[., tickLabelOffset, ), ;, boolean, firstLabel, =, true, ;, Arc2D, arc, =, new, Arc2D, ., Double, (, ), ;, Line2D]
[;, Arc2D, arc, =, new, Arc2D, ., Double, (, ), ;, Line2D, workingLine, =, new, Line2D, ., Double, (, )]
[;, Line2D, workingLine, =, new, Line2D, ., Double, (, ), ;, for, (, double, v, =, this, ., lowerBound, ;]
[;, for, (, double, v, =, this, ., lowerBound, ;, v, <=, this, ., upperBound, ;, v, +=, this, .]
[;, v, <=, this, ., upperBound, ;, v, +=, this, ., majorTickIncrement, ), {, arc, ., setArc, (, arcRect, ,]
[., lowerBound, ;, v, <=, this, ., upperBound, ;, v, +=, this, ., majorTickIncrement, ), {, arc, ., setArc, (]
[;, v, +=, this, ., majorTickIncrement, ), {, arc, ., setArc, (, arcRect, ,, this, ., startAngle, ,, valueToAngle, (]
[<=, this, ., upperBound, ;, v, +=, this, ., majorTickIncrement, ), {, arc, ., setArc, (, arcRect, ,, this, .]
[;, v, +=, this, ., majorTickIncrement, ), {, arc, ., setArc, (, arcRect, ,, this, ., startAngle, ,, valueToAngle, (]
[., upperBound, ;, v, +=, this, ., majorTickIncrement, ), {, arc, ., setArc, (, arcRect, ,, this, ., startAngle, ,]
[+=, this, ., majorTickIncrement, ), {, arc, ., setArc, (, arcRect, ,, this, ., startAngle, ,, valueToAngle, (, v, )]
[), {, arc, ., setArc, (, arcRect, ,, this, ., startAngle, ,, valueToAngle, (, v, ), -, this, ., startAngle]
[., majorTickIncrement, ), {, arc, ., setArc, (, arcRect, ,, this, ., startAngle, ,, valueToAngle, (, v, ), -, this]
[;, Point2D, pt0, =, arc, ., getEndPoint, (, ), ;, arc, ., setArc, (, arcRectMajor, ,, this, ., startAngle, ,]
[., setArc, (, arcRect, ,, this, ., startAngle, ,, valueToAngle, (, v, ), -, this, ., startAngle, ,, Arc2D, .]
[,, this, ., startAngle, ,, valueToAngle, (, v, ), -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D]
[,, valueToAngle, (, v, ), -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt0, =, arc, .]
[., startAngle, ,, valueToAngle, (, v, ), -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt0, =]
[,, Arc2D, ., OPEN, ), ;, Point2D, pt0, =, arc, ., getEndPoint, (, ), ;, arc, ., setArc, (, arcRectMajor]
[-, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt0, =, arc, ., getEndPoint, (, ), ;, arc]
[), -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt0, =, arc, ., getEndPoint, (, ), ;]
[,, Arc2D, ., OPEN, ), ;, Point2D, pt0, =, arc, ., getEndPoint, (, ), ;, arc, ., setArc, (, arcRectMajor]
[., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt0, =, arc, ., getEndPoint, (, ), ;, arc, ., setArc]
[), ;, Point2D, pt0, =, arc, ., getEndPoint, (, ), ;, arc, ., setArc, (, arcRectMajor, ,, this, ., startAngle]
[., OPEN, ), ;, Point2D, pt0, =, arc, ., getEndPoint, (, ), ;, arc, ., setArc, (, arcRectMajor, ,, this]
[;, arc, ., setArc, (, arcRectMajor, ,, this, ., startAngle, ,, valueToAngle, (, v, ), -, this, ., startAngle, ,]
[., getEndPoint, (, ), ;, arc, ., setArc, (, arcRectMajor, ,, this, ., startAngle, ,, valueToAngle, (, v, ), -]
[;, Point2D, pt1, =, arc, ., getEndPoint, (, ), ;, g2, ., setPaint, (, this, ., majorTickPaint, ), ;, g2]
[., setArc, (, arcRectMajor, ,, this, ., startAngle, ,, valueToAngle, (, v, ), -, this, ., startAngle, ,, Arc2D, .]
[,, this, ., startAngle, ,, valueToAngle, (, v, ), -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D]
[,, valueToAngle, (, v, ), -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt1, =, arc, .]
[., startAngle, ,, valueToAngle, (, v, ), -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt1, =]
[,, Arc2D, ., OPEN, ), ;, Point2D, pt1, =, arc, ., getEndPoint, (, ), ;, g2, ., setPaint, (, this]
[-, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt1, =, arc, ., getEndPoint, (, ), ;, g2]
[), -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt1, =, arc, ., getEndPoint, (, ), ;]
[,, Arc2D, ., OPEN, ), ;, Point2D, pt1, =, arc, ., getEndPoint, (, ), ;, g2, ., setPaint, (, this]
[., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt1, =, arc, ., getEndPoint, (, ), ;, g2, ., setPaint]
[), ;, Point2D, pt1, =, arc, ., getEndPoint, (, ), ;, g2, ., setPaint, (, this, ., majorTickPaint, ), ;]
[., OPEN, ), ;, Point2D, pt1, =, arc, ., getEndPoint, (, ), ;, g2, ., setPaint, (, this, ., majorTickPaint]
[;, g2, ., setPaint, (, this, ., majorTickPaint, ), ;, g2, ., setStroke, (, this, ., majorTickStroke, ), ;, workingLine]
[., getEndPoint, (, ), ;, g2, ., setPaint, (, this, ., majorTickPaint, ), ;, g2, ., setStroke, (, this, .]
[;, g2, ., setStroke, (, this, ., majorTickStroke, ), ;, workingLine, ., setLine, (, pt0, ,, pt1, ), ;, g2]
[., setPaint, (, this, ., majorTickPaint, ), ;, g2, ., setStroke, (, this, ., majorTickStroke, ), ;, workingLine, ., setLine]
[), ;, g2, ., setStroke, (, this, ., majorTickStroke, ), ;, workingLine, ., setLine, (, pt0, ,, pt1, ), ;]
[., majorTickPaint, ), ;, g2, ., setStroke, (, this, ., majorTickStroke, ), ;, workingLine, ., setLine, (, pt0, ,, pt1]
[;, workingLine, ., setLine, (, pt0, ,, pt1, ), ;, g2, ., draw, (, workingLine, ), ;, arc, ., setArc]
[., setStroke, (, this, ., majorTickStroke, ), ;, workingLine, ., setLine, (, pt0, ,, pt1, ), ;, g2, ., draw]
[), ;, workingLine, ., setLine, (, pt0, ,, pt1, ), ;, g2, ., draw, (, workingLine, ), ;, arc, .]
[., majorTickStroke, ), ;, workingLine, ., setLine, (, pt0, ,, pt1, ), ;, g2, ., draw, (, workingLine, ), ;]
[;, g2, ., draw, (, workingLine, ), ;, arc, ., setArc, (, arcRectForLabels, ,, this, ., startAngle, ,, valueToAngle, (]
[., setLine, (, pt0, ,, pt1, ), ;, g2, ., draw, (, workingLine, ), ;, arc, ., setArc, (, arcRectForLabels]
[,, pt1, ), ;, g2, ., draw, (, workingLine, ), ;, arc, ., setArc, (, arcRectForLabels, ,, this, ., startAngle]
[), ;, g2, ., draw, (, workingLine, ), ;, arc, ., setArc, (, arcRectForLabels, ,, this, ., startAngle, ,, valueToAngle]
[;, arc, ., setArc, (, arcRectForLabels, ,, this, ., startAngle, ,, valueToAngle, (, v, ), -, this, ., startAngle, ,]
[., draw, (, workingLine, ), ;, arc, ., setArc, (, arcRectForLabels, ,, this, ., startAngle, ,, valueToAngle, (, v, )]
[), ;, arc, ., setArc, (, arcRectForLabels, ,, this, ., startAngle, ,, valueToAngle, (, v, ), -, this, ., startAngle]
[;, Point2D, pt2, =, arc, ., getEndPoint, (, ), ;, if, (, this, ., tickLabelsVisible, ), {, if, (, !]
[., setArc, (, arcRectForLabels, ,, this, ., startAngle, ,, valueToAngle, (, v, ), -, this, ., startAngle, ,, Arc2D, .]
[,, this, ., startAngle, ,, valueToAngle, (, v, ), -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D]
[,, valueToAngle, (, v, ), -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt2, =, arc, .]
[., startAngle, ,, valueToAngle, (, v, ), -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt2, =]
[,, Arc2D, ., OPEN, ), ;, Point2D, pt2, =, arc, ., getEndPoint, (, ), ;, if, (, this, ., tickLabelsVisible]
[-, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt2, =, arc, ., getEndPoint, (, ), ;, if]
[), -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt2, =, arc, ., getEndPoint, (, ), ;]
[,, Arc2D, ., OPEN, ), ;, Point2D, pt2, =, arc, ., getEndPoint, (, ), ;, if, (, this, ., tickLabelsVisible]
[., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt2, =, arc, ., getEndPoint, (, ), ;, if, (, this]
[), ;, Point2D, pt2, =, arc, ., getEndPoint, (, ), ;, if, (, this, ., tickLabelsVisible, ), {, if, (]
[., OPEN, ), ;, Point2D, pt2, =, arc, ., getEndPoint, (, ), ;, if, (, this, ., tickLabelsVisible, ), {]
[;, if, (, this, ., tickLabelsVisible, ), {, if, (, !, firstLabel, ||, this, ., firstTickLabelVisible, ), {, g2, .]
[., getEndPoint, (, ), ;, if, (, this, ., tickLabelsVisible, ), {, if, (, !, firstLabel, ||, this, ., firstTickLabelVisible]
[), {, if, (, !, firstLabel, ||, this, ., firstTickLabelVisible, ), {, g2, ., setFont, (, this, ., tickLabelFont, )]
[., tickLabelsVisible, ), {, if, (, !, firstLabel, ||, this, ., firstTickLabelVisible, ), {, g2, ., setFont, (, this, .]
[), {, g2, ., setFont, (, this, ., tickLabelFont, ), ;, g2, ., setPaint, (, this, ., tickLabelPaint, ), ;]
[||, this, ., firstTickLabelVisible, ), {, g2, ., setFont, (, this, ., tickLabelFont, ), ;, g2, ., setPaint, (, this]
[||, this, ., firstTickLabelVisible, ), {, g2, ., setFont, (, this, ., tickLabelFont, ), ;, g2, ., setPaint, (, this]
[), {, g2, ., setFont, (, this, ., tickLabelFont, ), ;, g2, ., setPaint, (, this, ., tickLabelPaint, ), ;]
[., firstTickLabelVisible, ), {, g2, ., setFont, (, this, ., tickLabelFont, ), ;, g2, ., setPaint, (, this, ., tickLabelPaint]
[;, g2, ., setPaint, (, this, ., tickLabelPaint, ), ;, TextUtilities, ., drawAlignedString, (, this, ., tickLabelFormatter, ., format, (]
[., setFont, (, this, ., tickLabelFont, ), ;, g2, ., setPaint, (, this, ., tickLabelPaint, ), ;, TextUtilities, ., drawAlignedString]
[), ;, g2, ., setPaint, (, this, ., tickLabelPaint, ), ;, TextUtilities, ., drawAlignedString, (, this, ., tickLabelFormatter, ., format]
[., tickLabelFont, ), ;, g2, ., setPaint, (, this, ., tickLabelPaint, ), ;, TextUtilities, ., drawAlignedString, (, this, ., tickLabelFormatter]
[;, TextUtilities, ., drawAlignedString, (, this, ., tickLabelFormatter, ., format, (, v, ), ,, g2, ,, (, float, ), pt2]
[., setPaint, (, this, ., tickLabelPaint, ), ;, TextUtilities, ., drawAlignedString, (, this, ., tickLabelFormatter, ., format, (, v, )]
[), ;, TextUtilities, ., drawAlignedString, (, this, ., tickLabelFormatter, ., format, (, v, ), ,, g2, ,, (, float, )]
[., tickLabelPaint, ), ;, TextUtilities, ., drawAlignedString, (, this, ., tickLabelFormatter, ., format, (, v, ), ,, g2, ,, (]
[;, }, }, firstLabel, =, false, ;, if, (, this, ., minorTickCount, >, 0, &&, this, ., minorTickLength, >, 0.0]
[., drawAlignedString, (, this, ., tickLabelFormatter, ., format, (, v, ), ,, g2, ,, (, float, ), pt2, ., getX]
[,, g2, ,, (, float, ), pt2, ., getX, (, ), ,, (, float, ), pt2, ., getY, (, )]
[., format, (, v, ), ,, g2, ,, (, float, ), pt2, ., getX, (, ), ,, (, float, )]
[., tickLabelFormatter, ., format, (, v, ), ,, g2, ,, (, float, ), pt2, ., getX, (, ), ,, (]
[), ,, g2, ,, (, float, ), pt2, ., getX, (, ), ,, (, float, ), pt2, ., getY, (]
[,, (, float, ), pt2, ., getX, (, ), ,, (, float, ), pt2, ., getY, (, ), ,, TextAnchor]
[,, (, float, ), pt2, ., getY, (, ), ,, TextAnchor, ., CENTER, ), ;, }, }, firstLabel, =, false]
[,, (, float, ), pt2, ., getY, (, ), ,, TextAnchor, ., CENTER, ), ;, }, }, firstLabel, =, false]
[., getX, (, ), ,, (, float, ), pt2, ., getY, (, ), ,, TextAnchor, ., CENTER, ), ;, }]
[,, TextAnchor, ., CENTER, ), ;, }, }, firstLabel, =, false, ;, if, (, this, ., minorTickCount, >, 0, &&]
[,, TextAnchor, ., CENTER, ), ;, }, }, firstLabel, =, false, ;, if, (, this, ., minorTickCount, >, 0, &&]
[., getY, (, ), ,, TextAnchor, ., CENTER, ), ;, }, }, firstLabel, =, false, ;, if, (, this, .]
[), ;, }, }, firstLabel, =, false, ;, if, (, this, ., minorTickCount, >, 0, &&, this, ., minorTickLength, >]
[., CENTER, ), ;, }, }, firstLabel, =, false, ;, if, (, this, ., minorTickCount, >, 0, &&, this, .]
[=, false, ;, if, (, this, ., minorTickCount, >, 0, &&, this, ., minorTickLength, >, 0.0, ), {, double, minorTickIncrement]
[;, if, (, this, ., minorTickCount, >, 0, &&, this, ., minorTickLength, >, 0.0, ), {, double, minorTickIncrement, =, this]
[), {, double, minorTickIncrement, =, this, ., majorTickIncrement, /, (, this, ., minorTickCount, +, 1, ), ;, for, (, int]
[&&, this, ., minorTickLength, >, 0.0, ), {, double, minorTickIncrement, =, this, ., majorTickIncrement, /, (, this, ., minorTickCount, +]
[>, 0, &&, this, ., minorTickLength, >, 0.0, ), {, double, minorTickIncrement, =, this, ., majorTickIncrement, /, (, this, .]
[., minorTickCount, >, 0, &&, this, ., minorTickLength, >, 0.0, ), {, double, minorTickIncrement, =, this, ., majorTickIncrement, /, (]
[&&, this, ., minorTickLength, >, 0.0, ), {, double, minorTickIncrement, =, this, ., majorTickIncrement, /, (, this, ., minorTickCount, +]
[), {, double, minorTickIncrement, =, this, ., majorTickIncrement, /, (, this, ., minorTickCount, +, 1, ), ;, for, (, int]
[>, 0.0, ), {, double, minorTickIncrement, =, this, ., majorTickIncrement, /, (, this, ., minorTickCount, +, 1, ), ;, for]
[., minorTickLength, >, 0.0, ), {, double, minorTickIncrement, =, this, ., majorTickIncrement, /, (, this, ., minorTickCount, +, 1, )]
[), {, double, minorTickIncrement, =, this, ., majorTickIncrement, /, (, this, ., minorTickCount, +, 1, ), ;, for, (, int]
[;, for, (, int, i, =, 0, ;, i, <, this, ., minorTickCount, ;, i, ++, ), {, double, vv]
[/, (, this, ., minorTickCount, +, 1, ), ;, for, (, int, i, =, 0, ;, i, <, this, .]
[., majorTickIncrement, /, (, this, ., minorTickCount, +, 1, ), ;, for, (, int, i, =, 0, ;, i, <]
[;, for, (, int, i, =, 0, ;, i, <, this, ., minorTickCount, ;, i, ++, ), {, double, vv]
[), ;, for, (, int, i, =, 0, ;, i, <, this, ., minorTickCount, ;, i, ++, ), {, double]
[+, 1, ), ;, for, (, int, i, =, 0, ;, i, <, this, ., minorTickCount, ;, i, ++, )]
[., minorTickCount, +, 1, ), ;, for, (, int, i, =, 0, ;, i, <, this, ., minorTickCount, ;, i]
[), ;, for, (, int, i, =, 0, ;, i, <, this, ., minorTickCount, ;, i, ++, ), {, double]
[;, i, <, this, ., minorTickCount, ;, i, ++, ), {, double, vv, =, v, +, (, (, i, +]
[;, i, ++, ), {, double, vv, =, v, +, (, (, i, +, 1, ), *, minorTickIncrement, ), ;]
[<, this, ., minorTickCount, ;, i, ++, ), {, double, vv, =, v, +, (, (, i, +, 1, )]
[;, i, ++, ), {, double, vv, =, v, +, (, (, i, +, 1, ), *, minorTickIncrement, ), ;]
[., minorTickCount, ;, i, ++, ), {, double, vv, =, v, +, (, (, i, +, 1, ), *, minorTickIncrement]
[), {, double, vv, =, v, +, (, (, i, +, 1, ), *, minorTickIncrement, ), ;, if, (, vv]
[++, ), {, double, vv, =, v, +, (, (, i, +, 1, ), *, minorTickIncrement, ), ;, if, (]
[;, if, (, vv, >=, this, ., upperBound, ), {, break, ;, }, double, angle, =, valueToAngle, (, vv, )]
[+, (, (, i, +, 1, ), *, minorTickIncrement, ), ;, if, (, vv, >=, this, ., upperBound, ), {]
[;, if, (, vv, >=, this, ., upperBound, ), {, break, ;, }, double, angle, =, valueToAngle, (, vv, )]
[), ;, if, (, vv, >=, this, ., upperBound, ), {, break, ;, }, double, angle, =, valueToAngle, (, vv]
[*, minorTickIncrement, ), ;, if, (, vv, >=, this, ., upperBound, ), {, break, ;, }, double, angle, =, valueToAngle]
[), *, minorTickIncrement, ), ;, if, (, vv, >=, this, ., upperBound, ), {, break, ;, }, double, angle, =]
[+, 1, ), *, minorTickIncrement, ), ;, if, (, vv, >=, this, ., upperBound, ), {, break, ;, }, double]
[), *, minorTickIncrement, ), ;, if, (, vv, >=, this, ., upperBound, ), {, break, ;, }, double, angle, =]
[), ;, if, (, vv, >=, this, ., upperBound, ), {, break, ;, }, double, angle, =, valueToAngle, (, vv]
[), {, break, ;, }, double, angle, =, valueToAngle, (, vv, ), ;, arc, ., setArc, (, arcRect, ,, this]
[>=, this, ., upperBound, ), {, break, ;, }, double, angle, =, valueToAngle, (, vv, ), ;, arc, ., setArc]
[), {, break, ;, }, double, angle, =, valueToAngle, (, vv, ), ;, arc, ., setArc, (, arcRect, ,, this]
[., upperBound, ), {, break, ;, }, double, angle, =, valueToAngle, (, vv, ), ;, arc, ., setArc, (, arcRect]
[;, arc, ., setArc, (, arcRect, ,, this, ., startAngle, ,, angle, -, this, ., startAngle, ,, Arc2D, ., OPEN]
[), ;, arc, ., setArc, (, arcRect, ,, this, ., startAngle, ,, angle, -, this, ., startAngle, ,, Arc2D, .]
[;, pt0, =, arc, ., getEndPoint, (, ), ;, arc, ., setArc, (, arcRectMinor, ,, this, ., startAngle, ,, angle]
[., setArc, (, arcRect, ,, this, ., startAngle, ,, angle, -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;]
[,, this, ., startAngle, ,, angle, -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, pt0, =, arc, .]
[,, angle, -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, pt0, =, arc, ., getEndPoint, (, ), ;]
[., startAngle, ,, angle, -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, pt0, =, arc, ., getEndPoint, (]
[,, Arc2D, ., OPEN, ), ;, pt0, =, arc, ., getEndPoint, (, ), ;, arc, ., setArc, (, arcRectMinor, ,]
[-, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, pt0, =, arc, ., getEndPoint, (, ), ;, arc, .]
[,, Arc2D, ., OPEN, ), ;, pt0, =, arc, ., getEndPoint, (, ), ;, arc, ., setArc, (, arcRectMinor, ,]
[., startAngle, ,, Arc2D, ., OPEN, ), ;, pt0, =, arc, ., getEndPoint, (, ), ;, arc, ., setArc, (]
[), ;, pt0, =, arc, ., getEndPoint, (, ), ;, arc, ., setArc, (, arcRectMinor, ,, this, ., startAngle, ,]
[., OPEN, ), ;, pt0, =, arc, ., getEndPoint, (, ), ;, arc, ., setArc, (, arcRectMinor, ,, this, .]
[=, arc, ., getEndPoint, (, ), ;, arc, ., setArc, (, arcRectMinor, ,, this, ., startAngle, ,, angle, -, this]
[;, arc, ., setArc, (, arcRectMinor, ,, this, ., startAngle, ,, angle, -, this, ., startAngle, ,, Arc2D, ., OPEN]
[., getEndPoint, (, ), ;, arc, ., setArc, (, arcRectMinor, ,, this, ., startAngle, ,, angle, -, this, ., startAngle]
[;, Point2D, pt3, =, arc, ., getEndPoint, (, ), ;, g2, ., setStroke, (, this, ., minorTickStroke, ), ;, g2]
[., setArc, (, arcRectMinor, ,, this, ., startAngle, ,, angle, -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;]
[,, this, ., startAngle, ,, angle, -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt3, =, arc]
[,, angle, -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt3, =, arc, ., getEndPoint, (, )]
[., startAngle, ,, angle, -, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt3, =, arc, ., getEndPoint]
[,, Arc2D, ., OPEN, ), ;, Point2D, pt3, =, arc, ., getEndPoint, (, ), ;, g2, ., setStroke, (, this]
[-, this, ., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt3, =, arc, ., getEndPoint, (, ), ;, g2]
[,, Arc2D, ., OPEN, ), ;, Point2D, pt3, =, arc, ., getEndPoint, (, ), ;, g2, ., setStroke, (, this]
[., startAngle, ,, Arc2D, ., OPEN, ), ;, Point2D, pt3, =, arc, ., getEndPoint, (, ), ;, g2, ., setStroke]
[), ;, Point2D, pt3, =, arc, ., getEndPoint, (, ), ;, g2, ., setStroke, (, this, ., minorTickStroke, ), ;]
[., OPEN, ), ;, Point2D, pt3, =, arc, ., getEndPoint, (, ), ;, g2, ., setStroke, (, this, ., minorTickStroke]
[;, g2, ., setStroke, (, this, ., minorTickStroke, ), ;, g2, ., setPaint, (, this, ., minorTickPaint, ), ;, workingLine]
[., getEndPoint, (, ), ;, g2, ., setStroke, (, this, ., minorTickStroke, ), ;, g2, ., setPaint, (, this, .]
[;, g2, ., setPaint, (, this, ., minorTickPaint, ), ;, workingLine, ., setLine, (, pt0, ,, pt3, ), ;, g2]
[., setStroke, (, this, ., minorTickStroke, ), ;, g2, ., setPaint, (, this, ., minorTickPaint, ), ;, workingLine, ., setLine]
[), ;, g2, ., setPaint, (, this, ., minorTickPaint, ), ;, workingLine, ., setLine, (, pt0, ,, pt3, ), ;]
[., minorTickStroke, ), ;, g2, ., setPaint, (, this, ., minorTickPaint, ), ;, workingLine, ., setLine, (, pt0, ,, pt3]
[;, workingLine, ., setLine, (, pt0, ,, pt3, ), ;, g2, ., draw, (, workingLine, ), ;, }, }, }]
[., setPaint, (, this, ., minorTickPaint, ), ;, workingLine, ., setLine, (, pt0, ,, pt3, ), ;, g2, ., draw]
[), ;, workingLine, ., setLine, (, pt0, ,, pt3, ), ;, g2, ., draw, (, workingLine, ), ;, }, }]
[., minorTickPaint, ), ;, workingLine, ., setLine, (, pt0, ,, pt3, ), ;, g2, ., draw, (, workingLine, ), ;]
[;, g2, ., draw, (, workingLine, ), ;, }, }, }, }, public, double, valueToAngle, (, double, value, ), {]
[., setLine, (, pt0, ,, pt3, ), ;, g2, ., draw, (, workingLine, ), ;, }, }, }, }, public]
[,, pt3, ), ;, g2, ., draw, (, workingLine, ), ;, }, }, }, }, public, double, valueToAngle, (, double]
[), ;, g2, ., draw, (, workingLine, ), ;, }, }, }, }, public, double, valueToAngle, (, double, value, )]
[;, }, }, }, }, public, double, valueToAngle, (, double, value, ), {, double, range, =, this, ., upperBound, -]
[., draw, (, workingLine, ), ;, }, }, }, }, public, double, valueToAngle, (, double, value, ), {, double, range]
[), ;, }, }, }, }, public, double, valueToAngle, (, double, value, ), {, double, range, =, this, ., upperBound]
[;, double, unit, =, this, ., extent, /, range, ;, return, this, ., startAngle, +, unit, *, (, value, -]
[-, this, ., lowerBound, ;, double, unit, =, this, ., extent, /, range, ;, return, this, ., startAngle, +, unit]
[., upperBound, -, this, ., lowerBound, ;, double, unit, =, this, ., extent, /, range, ;, return, this, ., startAngle]
[;, double, unit, =, this, ., extent, /, range, ;, return, this, ., startAngle, +, unit, *, (, value, -]
[., lowerBound, ;, double, unit, =, this, ., extent, /, range, ;, return, this, ., startAngle, +, unit, *, (]
[;, return, this, ., startAngle, +, unit, *, (, value, -, this, ., lowerBound, ), ;, }, public, double, angleToValue]
[/, range, ;, return, this, ., startAngle, +, unit, *, (, value, -, this, ., lowerBound, ), ;, }, public]
[., extent, /, range, ;, return, this, ., startAngle, +, unit, *, (, value, -, this, ., lowerBound, ), ;]
[;, return, this, ., startAngle, +, unit, *, (, value, -, this, ., lowerBound, ), ;, }, public, double, angleToValue]
[;, }, public, double, angleToValue, (, double, angle, ), {, return, Double, ., NaN, ;, }, public, boolean, equals, (]
[+, unit, *, (, value, -, this, ., lowerBound, ), ;, }, public, double, angleToValue, (, double, angle, ), {]
[., startAngle, +, unit, *, (, value, -, this, ., lowerBound, ), ;, }, public, double, angleToValue, (, double, angle]
[;, }, public, double, angleToValue, (, double, angle, ), {, return, Double, ., NaN, ;, }, public, boolean, equals, (]
[*, (, value, -, this, ., lowerBound, ), ;, }, public, double, angleToValue, (, double, angle, ), {, return, Double]
[;, }, public, double, angleToValue, (, double, angle, ), {, return, Double, ., NaN, ;, }, public, boolean, equals, (]
[), ;, }, public, double, angleToValue, (, double, angle, ), {, return, Double, ., NaN, ;, }, public, boolean, equals]
[-, this, ., lowerBound, ), ;, }, public, double, angleToValue, (, double, angle, ), {, return, Double, ., NaN, ;]
[), ;, }, public, double, angleToValue, (, double, angle, ), {, return, Double, ., NaN, ;, }, public, boolean, equals]
[., lowerBound, ), ;, }, public, double, angleToValue, (, double, angle, ), {, return, Double, ., NaN, ;, }, public]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[., NaN, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, StandardDialScale, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, StandardDialScale, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, StandardDialScale, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, StandardDialScale, ), ), {, return, false, ;, }, StandardDialScale, that, =, (]
[), {, return, false, ;, }, StandardDialScale, that, =, (, StandardDialScale, ), obj, ;, if, (, this, ., lowerBound, !=]
[), {, return, false, ;, }, StandardDialScale, that, =, (, StandardDialScale, ), obj, ;, if, (, this, ., lowerBound, !=]
[), ), {, return, false, ;, }, StandardDialScale, that, =, (, StandardDialScale, ), obj, ;, if, (, this, ., lowerBound]
[instanceof, StandardDialScale, ), ), {, return, false, ;, }, StandardDialScale, that, =, (, StandardDialScale, ), obj, ;, if, (, this]
[;, }, StandardDialScale, that, =, (, StandardDialScale, ), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, )]
[;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, .]
[;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, .]
[), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;]
[!=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, )]
[., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;]
[., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return]
[;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., startAngle, !=, that, ., startAngle, ), {, return, false, ;]
[!=, that, ., upperBound, ), {, return, false, ;, }, if, (, this, ., startAngle, !=, that, ., startAngle, )]
[., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, this, ., startAngle, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., startAngle, !=, that, ., startAngle, ), {, return, false, ;]
[., upperBound, ), {, return, false, ;, }, if, (, this, ., startAngle, !=, that, ., startAngle, ), {, return]
[;, }, if, (, this, ., startAngle, !=, that, ., startAngle, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., extent, !=, that, ., extent, ), {, return, false, ;]
[!=, that, ., startAngle, ), {, return, false, ;, }, if, (, this, ., extent, !=, that, ., extent, )]
[., startAngle, !=, that, ., startAngle, ), {, return, false, ;, }, if, (, this, ., extent, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., extent, !=, that, ., extent, ), {, return, false, ;]
[., startAngle, ), {, return, false, ;, }, if, (, this, ., extent, !=, that, ., extent, ), {, return]
[;, }, if, (, this, ., extent, !=, that, ., extent, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., tickRadius, !=, that, ., tickRadius, ), {, return, false, ;]
[!=, that, ., extent, ), {, return, false, ;, }, if, (, this, ., tickRadius, !=, that, ., tickRadius, )]
[., extent, !=, that, ., extent, ), {, return, false, ;, }, if, (, this, ., tickRadius, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., tickRadius, !=, that, ., tickRadius, ), {, return, false, ;]
[., extent, ), {, return, false, ;, }, if, (, this, ., tickRadius, !=, that, ., tickRadius, ), {, return]
[;, }, if, (, this, ., tickRadius, !=, that, ., tickRadius, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., majorTickIncrement, !=, that, ., majorTickIncrement, ), {, return, false, ;]
[!=, that, ., tickRadius, ), {, return, false, ;, }, if, (, this, ., majorTickIncrement, !=, that, ., majorTickIncrement, )]
[., tickRadius, !=, that, ., tickRadius, ), {, return, false, ;, }, if, (, this, ., majorTickIncrement, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., majorTickIncrement, !=, that, ., majorTickIncrement, ), {, return, false, ;]
[., tickRadius, ), {, return, false, ;, }, if, (, this, ., majorTickIncrement, !=, that, ., majorTickIncrement, ), {, return]
[;, }, if, (, this, ., majorTickIncrement, !=, that, ., majorTickIncrement, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., majorTickLength, !=, that, ., majorTickLength, ), {, return, false, ;]
[!=, that, ., majorTickIncrement, ), {, return, false, ;, }, if, (, this, ., majorTickLength, !=, that, ., majorTickLength, )]
[., majorTickIncrement, !=, that, ., majorTickIncrement, ), {, return, false, ;, }, if, (, this, ., majorTickLength, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., majorTickLength, !=, that, ., majorTickLength, ), {, return, false, ;]
[., majorTickIncrement, ), {, return, false, ;, }, if, (, this, ., majorTickLength, !=, that, ., majorTickLength, ), {, return]
[;, }, if, (, this, ., majorTickLength, !=, that, ., majorTickLength, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., majorTickPaint, ,, that, ., majorTickPaint]
[!=, that, ., majorTickLength, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., majorTickPaint]
[., majorTickLength, !=, that, ., majorTickLength, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., majorTickPaint, ,, that, ., majorTickPaint]
[., majorTickLength, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., majorTickPaint, ,, that]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., majorTickPaint, ,, that, ., majorTickPaint, ), ), {, return]
[), {, return, false, ;, }, if, (, !, this, ., majorTickStroke, ., equals, (, that, ., majorTickStroke, ), )]
[), {, return, false, ;, }, if, (, !, this, ., majorTickStroke, ., equals, (, that, ., majorTickStroke, ), )]
[., equal, (, this, ., majorTickPaint, ,, that, ., majorTickPaint, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., majorTickPaint, ), ), {, return, false, ;, }, if, (, !, this, ., majorTickStroke, ., equals, (]
[., majorTickPaint, ,, that, ., majorTickPaint, ), ), {, return, false, ;, }, if, (, !, this, ., majorTickStroke, .]
[), ), {, return, false, ;, }, if, (, !, this, ., majorTickStroke, ., equals, (, that, ., majorTickStroke, )]
[., majorTickPaint, ), ), {, return, false, ;, }, if, (, !, this, ., majorTickStroke, ., equals, (, that, .]
[;, }, if, (, !, this, ., majorTickStroke, ., equals, (, that, ., majorTickStroke, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., minorTickCount, !=, that, ., minorTickCount, ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., minorTickCount, !=, that, ., minorTickCount, ), {, return, false, ;]
[., equals, (, that, ., majorTickStroke, ), ), {, return, false, ;, }, if, (, this, ., minorTickCount, !=, that]
[., majorTickStroke, ., equals, (, that, ., majorTickStroke, ), ), {, return, false, ;, }, if, (, this, ., minorTickCount]
[), ), {, return, false, ;, }, if, (, this, ., minorTickCount, !=, that, ., minorTickCount, ), {, return, false]
[., majorTickStroke, ), ), {, return, false, ;, }, if, (, this, ., minorTickCount, !=, that, ., minorTickCount, ), {]
[;, }, if, (, this, ., minorTickCount, !=, that, ., minorTickCount, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., minorTickLength, !=, that, ., minorTickLength, ), {, return, false, ;]
[!=, that, ., minorTickCount, ), {, return, false, ;, }, if, (, this, ., minorTickLength, !=, that, ., minorTickLength, )]
[., minorTickCount, !=, that, ., minorTickCount, ), {, return, false, ;, }, if, (, this, ., minorTickLength, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., minorTickLength, !=, that, ., minorTickLength, ), {, return, false, ;]
[., minorTickCount, ), {, return, false, ;, }, if, (, this, ., minorTickLength, !=, that, ., minorTickLength, ), {, return]
[;, }, if, (, this, ., minorTickLength, !=, that, ., minorTickLength, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., minorTickPaint, ,, that, ., minorTickPaint]
[!=, that, ., minorTickLength, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., minorTickPaint]
[., minorTickLength, !=, that, ., minorTickLength, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., minorTickPaint, ,, that, ., minorTickPaint]
[., minorTickLength, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., minorTickPaint, ,, that]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., minorTickPaint, ,, that, ., minorTickPaint, ), ), {, return]
[), {, return, false, ;, }, if, (, !, this, ., minorTickStroke, ., equals, (, that, ., minorTickStroke, ), )]
[), {, return, false, ;, }, if, (, !, this, ., minorTickStroke, ., equals, (, that, ., minorTickStroke, ), )]
[., equal, (, this, ., minorTickPaint, ,, that, ., minorTickPaint, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., minorTickPaint, ), ), {, return, false, ;, }, if, (, !, this, ., minorTickStroke, ., equals, (]
[., minorTickPaint, ,, that, ., minorTickPaint, ), ), {, return, false, ;, }, if, (, !, this, ., minorTickStroke, .]
[), ), {, return, false, ;, }, if, (, !, this, ., minorTickStroke, ., equals, (, that, ., minorTickStroke, )]
[., minorTickPaint, ), ), {, return, false, ;, }, if, (, !, this, ., minorTickStroke, ., equals, (, that, .]
[;, }, if, (, !, this, ., minorTickStroke, ., equals, (, that, ., minorTickStroke, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., tickLabelsVisible, !=, that, ., tickLabelsVisible, ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., tickLabelsVisible, !=, that, ., tickLabelsVisible, ), {, return, false, ;]
[., equals, (, that, ., minorTickStroke, ), ), {, return, false, ;, }, if, (, this, ., tickLabelsVisible, !=, that]
[., minorTickStroke, ., equals, (, that, ., minorTickStroke, ), ), {, return, false, ;, }, if, (, this, ., tickLabelsVisible]
[), ), {, return, false, ;, }, if, (, this, ., tickLabelsVisible, !=, that, ., tickLabelsVisible, ), {, return, false]
[., minorTickStroke, ), ), {, return, false, ;, }, if, (, this, ., tickLabelsVisible, !=, that, ., tickLabelsVisible, ), {]
[;, }, if, (, this, ., tickLabelsVisible, !=, that, ., tickLabelsVisible, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., tickLabelOffset, !=, that, ., tickLabelOffset, ), {, return, false, ;]
[!=, that, ., tickLabelsVisible, ), {, return, false, ;, }, if, (, this, ., tickLabelOffset, !=, that, ., tickLabelOffset, )]
[., tickLabelsVisible, !=, that, ., tickLabelsVisible, ), {, return, false, ;, }, if, (, this, ., tickLabelOffset, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., tickLabelOffset, !=, that, ., tickLabelOffset, ), {, return, false, ;]
[., tickLabelsVisible, ), {, return, false, ;, }, if, (, this, ., tickLabelOffset, !=, that, ., tickLabelOffset, ), {, return]
[;, }, if, (, this, ., tickLabelOffset, !=, that, ., tickLabelOffset, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, this, ., tickLabelFont, ., equals, (, that, ., tickLabelFont, ), )]
[!=, that, ., tickLabelOffset, ), {, return, false, ;, }, if, (, !, this, ., tickLabelFont, ., equals, (, that]
[., tickLabelOffset, !=, that, ., tickLabelOffset, ), {, return, false, ;, }, if, (, !, this, ., tickLabelFont, ., equals]
[), {, return, false, ;, }, if, (, !, this, ., tickLabelFont, ., equals, (, that, ., tickLabelFont, ), )]
[., tickLabelOffset, ), {, return, false, ;, }, if, (, !, this, ., tickLabelFont, ., equals, (, that, ., tickLabelFont]
[;, }, if, (, !, this, ., tickLabelFont, ., equals, (, that, ., tickLabelFont, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., tickLabelPaint, ,, that, ., tickLabelPaint]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., tickLabelPaint, ,, that, ., tickLabelPaint]
[., equals, (, that, ., tickLabelFont, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., tickLabelFont, ., equals, (, that, ., tickLabelFont, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, .]
[), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., tickLabelPaint, ,, that, .]
[., tickLabelFont, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., tickLabelPaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., tickLabelPaint, ,, that, ., tickLabelPaint, ), ), {, return]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[., equal, (, this, ., tickLabelPaint, ,, that, ., tickLabelPaint, ), ), {, return, false, ;, }, return, super, .]
[,, that, ., tickLabelPaint, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }]
[., tickLabelPaint, ,, that, ., tickLabelPaint, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, )]
[), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (]
[., tickLabelPaint, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, long, temp, =, Double, ., doubleToLongBits, (]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, long, temp]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, long, temp, =, Double, ., doubleToLongBits]
[;, long, temp, =, Double, ., doubleToLongBits, (, this, ., lowerBound, ), ;, result, =, 37, *, result, +, (]
[;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, )]
[., doubleToLongBits, (, this, ., lowerBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32]
[., lowerBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (]
[^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, )]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +]
[=, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int, ), (]
[;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, )]
[., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32]
[., upperBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., startAngle, ), ;, result, =, 37, *, result, +, (, int]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., startAngle, ), ;, result, =, 37, *, result, +, (, int]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., startAngle, ), ;, result, =, 37, *, result, +, (, int]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., startAngle, ), ;, result, =, 37, *, result, +, (]
[^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., startAngle, )]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., startAngle, ), ;, result, =, 37, *, result, +, (]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., startAngle, ), ;, result, =, 37, *, result, +]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., startAngle, ), ;, result, =]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., startAngle, ), ;, result, =, 37, *, result, +]
[=, Double, ., doubleToLongBits, (, this, ., startAngle, ), ;, result, =, 37, *, result, +, (, int, ), (]
[;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, )]
[., doubleToLongBits, (, this, ., startAngle, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32]
[., startAngle, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., extent, ), ;, result, =, 37, *, result, +, (, int]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., extent, ), ;, result, =, 37, *, result, +, (, int]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., extent, ), ;, result, =, 37, *, result, +, (, int]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., extent, ), ;, result, =, 37, *, result, +, (]
[^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., extent, )]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., extent, ), ;, result, =, 37, *, result, +, (]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., extent, ), ;, result, =, 37, *, result, +]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., extent, ), ;, result, =]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., extent, ), ;, result, =, 37, *, result, +]
[=, Double, ., doubleToLongBits, (, this, ., extent, ), ;, result, =, 37, *, result, +, (, int, ), (]
[;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, )]
[., doubleToLongBits, (, this, ., extent, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32]
[., extent, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., tickRadius, ), ;, result, =, 37, *, result, +, (, int]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., tickRadius, ), ;, result, =, 37, *, result, +, (, int]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., tickRadius, ), ;, result, =, 37, *, result, +, (, int]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., tickRadius, ), ;, result, =, 37, *, result, +, (]
[^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., tickRadius, )]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., tickRadius, ), ;, result, =, 37, *, result, +, (]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., tickRadius, ), ;, result, =, 37, *, result, +]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., tickRadius, ), ;, result, =]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., tickRadius, ), ;, result, =, 37, *, result, +]
[=, Double, ., doubleToLongBits, (, this, ., tickRadius, ), ;, result, =, 37, *, result, +, (, int, ), (]
[;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, )]
[., doubleToLongBits, (, this, ., tickRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32]
[., tickRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, return, result, ;, }]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, return, result]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, return, result, ;, }]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, )]
[^, (, temp, >, >, >, 32, ), ), ;, return, result, ;, }, public, Object, clone, (, ), throws]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, )]
[), ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (]
[>, >, >, 32, ), ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[), ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private, void]
[;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, .]
[., clone, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (]
[;, SerialUtilities, ., writePaint, (, this, ., majorTickPaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., majorTickStroke, ,]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., majorTickPaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (]
[;, SerialUtilities, ., writeStroke, (, this, ., majorTickStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., minorTickPaint, ,]
[., writePaint, (, this, ., majorTickPaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., majorTickStroke, ,, stream, )]
[,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., majorTickStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this]
[., majorTickPaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., majorTickStroke, ,, stream, ), ;, SerialUtilities, ., writePaint]
[), ;, SerialUtilities, ., writeStroke, (, this, ., majorTickStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., minorTickPaint]
[;, SerialUtilities, ., writePaint, (, this, ., minorTickPaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., minorTickStroke, ,]
[., writeStroke, (, this, ., majorTickStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., minorTickPaint, ,, stream, )]
[,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., minorTickPaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this]
[., majorTickStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., minorTickPaint, ,, stream, ), ;, SerialUtilities, ., writeStroke]
[), ;, SerialUtilities, ., writePaint, (, this, ., minorTickPaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., minorTickStroke]
[;, SerialUtilities, ., writeStroke, (, this, ., minorTickStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., tickLabelPaint, ,]
[., writePaint, (, this, ., minorTickPaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., minorTickStroke, ,, stream, )]
[,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., minorTickStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this]
[., minorTickPaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., minorTickStroke, ,, stream, ), ;, SerialUtilities, ., writePaint]
[), ;, SerialUtilities, ., writeStroke, (, this, ., minorTickStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., tickLabelPaint]
[;, SerialUtilities, ., writePaint, (, this, ., tickLabelPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, )]
[., writeStroke, (, this, ., minorTickStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., tickLabelPaint, ,, stream, )]
[,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., tickLabelPaint, ,, stream, ), ;, }, private, void, readObject, (]
[., minorTickStroke, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., tickLabelPaint, ,, stream, ), ;, }, private, void]
[), ;, SerialUtilities, ., writePaint, (, this, ., tickLabelPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[., writePaint, (, this, ., tickLabelPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException]
[,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject]
[., tickLabelPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream]
[), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, )]
[;, this, ., majorTickPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., majorTickStroke, =, SerialUtilities, ., readStroke, (]
[., defaultReadObject, (, ), ;, this, ., majorTickPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., majorTickStroke, =]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., majorTickStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this]
[., majorTickPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., majorTickStroke, =, SerialUtilities, ., readStroke, (, stream, )]
[;, this, ., majorTickStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., minorTickPaint, =, SerialUtilities, ., readPaint, (]
[., readPaint, (, stream, ), ;, this, ., majorTickStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., minorTickPaint]
[), ;, this, ., majorTickStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., minorTickPaint, =, SerialUtilities, ., readPaint]
[=, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., minorTickPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this]
[., majorTickStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., minorTickPaint, =, SerialUtilities, ., readPaint, (, stream, )]
[;, this, ., minorTickPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., minorTickStroke, =, SerialUtilities, ., readStroke, (]
[., readStroke, (, stream, ), ;, this, ., minorTickPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., minorTickStroke]
[), ;, this, ., minorTickPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., minorTickStroke, =, SerialUtilities, ., readStroke]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., minorTickStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this]
[., minorTickPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., minorTickStroke, =, SerialUtilities, ., readStroke, (, stream, )]
[;, this, ., minorTickStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., tickLabelPaint, =, SerialUtilities, ., readPaint, (]
[., readPaint, (, stream, ), ;, this, ., minorTickStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., tickLabelPaint]
[), ;, this, ., minorTickStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., tickLabelPaint, =, SerialUtilities, ., readPaint]
[=, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., tickLabelPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }]
[., minorTickStroke, =, SerialUtilities, ., readStroke, (, stream, ), ;, this, ., tickLabelPaint, =, SerialUtilities, ., readPaint, (, stream, )]
[;, this, ., tickLabelPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[., readStroke, (, stream, ), ;, this, ., tickLabelPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[), ;, this, ., tickLabelPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[., tickLabelPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[;, }, }]
[., readPaint, (, stream, ), ;, }, }]
[), ;, }, }]
