[;, private, static, final, ReadablePeriod, DUMMY_PERIOD, =, new, AbstractPeriod, (, ), {, public, int, getValue, (, int, index, ), {]
[;, private, static, final, ReadablePeriod, DUMMY_PERIOD, =, new, AbstractPeriod, (, ), {, public, int, getValue, (, int, index, ), {]
[;, private, final, PeriodType, iType, ;, private, final, int, [, ], iValues, ;, protected, BasePeriod, (, int, years, ,, int]
[;, }, public, PeriodType, getPeriodType, (, ), {, return, PeriodType, ., time, (, ), ;, }, }, ;, private, final]
[;, }, }, ;, private, final, PeriodType, iType, ;, private, final, int, [, ], iValues, ;, protected, BasePeriod, (, int]
[., time, (, ), ;, }, }, ;, private, final, PeriodType, iType, ;, private, final, int, [, ], iValues, ;]
[=, checkPeriodType, (, type, ), ;, iType, =, type, ;, iValues, =, setPeriodInternal, (, years, ,, months, ,, weeks, ,]
[;, iType, =, type, ;, iValues, =, setPeriodInternal, (, years, ,, months, ,, weeks, ,, days, ,, hours, ,, minutes]
[), ;, iType, =, type, ;, iValues, =, setPeriodInternal, (, years, ,, months, ,, weeks, ,, days, ,, hours, ,]
[=, type, ;, iValues, =, setPeriodInternal, (, years, ,, months, ,, weeks, ,, days, ,, hours, ,, minutes, ,, seconds]
[;, iValues, =, setPeriodInternal, (, years, ,, months, ,, weeks, ,, days, ,, hours, ,, minutes, ,, seconds, ,, millis]
[=, setPeriodInternal, (, years, ,, months, ,, weeks, ,, days, ,, hours, ,, minutes, ,, seconds, ,, millis, ), ;]
[;, }, protected, BasePeriod, (, long, startInstant, ,, long, endInstant, ,, PeriodType, type, ,, Chronology, chrono, ), {, super, (]
[,, months, ,, weeks, ,, days, ,, hours, ,, minutes, ,, seconds, ,, millis, ), ;, }, protected, BasePeriod, (]
[,, weeks, ,, days, ,, hours, ,, minutes, ,, seconds, ,, millis, ), ;, }, protected, BasePeriod, (, long, startInstant]
[,, days, ,, hours, ,, minutes, ,, seconds, ,, millis, ), ;, }, protected, BasePeriod, (, long, startInstant, ,, long]
[,, hours, ,, minutes, ,, seconds, ,, millis, ), ;, }, protected, BasePeriod, (, long, startInstant, ,, long, endInstant, ,]
[,, minutes, ,, seconds, ,, millis, ), ;, }, protected, BasePeriod, (, long, startInstant, ,, long, endInstant, ,, PeriodType, type]
[,, seconds, ,, millis, ), ;, }, protected, BasePeriod, (, long, startInstant, ,, long, endInstant, ,, PeriodType, type, ,, Chronology]
[,, millis, ), ;, }, protected, BasePeriod, (, long, startInstant, ,, long, endInstant, ,, PeriodType, type, ,, Chronology, chrono, )]
[), ;, }, protected, BasePeriod, (, long, startInstant, ,, long, endInstant, ,, PeriodType, type, ,, Chronology, chrono, ), {, super]
[=, checkPeriodType, (, type, ), ;, chrono, =, DateTimeUtils, ., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues]
[;, chrono, =, DateTimeUtils, ., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues, =, chrono, ., get, (]
[), ;, chrono, =, DateTimeUtils, ., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues, =, chrono, ., get]
[=, DateTimeUtils, ., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,]
[;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startInstant, ,, endInstant, ), ;, }, protected]
[., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startInstant, ,]
[), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startInstant, ,, endInstant, ), ;, }]
[=, type, ;, iValues, =, chrono, ., get, (, this, ,, startInstant, ,, endInstant, ), ;, }, protected, BasePeriod, (]
[;, iValues, =, chrono, ., get, (, this, ,, startInstant, ,, endInstant, ), ;, }, protected, BasePeriod, (, ReadableInstant, startInstant]
[=, chrono, ., get, (, this, ,, startInstant, ,, endInstant, ), ;, }, protected, BasePeriod, (, ReadableInstant, startInstant, ,, ReadableInstant]
[;, }, protected, BasePeriod, (, ReadableInstant, startInstant, ,, ReadableInstant, endInstant, ,, PeriodType, type, ), {, super, (, ), ;, type]
[., get, (, this, ,, startInstant, ,, endInstant, ), ;, }, protected, BasePeriod, (, ReadableInstant, startInstant, ,, ReadableInstant, endInstant, ,]
[,, startInstant, ,, endInstant, ), ;, }, protected, BasePeriod, (, ReadableInstant, startInstant, ,, ReadableInstant, endInstant, ,, PeriodType, type, ), {]
[,, endInstant, ), ;, }, protected, BasePeriod, (, ReadableInstant, startInstant, ,, ReadableInstant, endInstant, ,, PeriodType, type, ), {, super, (]
[), ;, }, protected, BasePeriod, (, ReadableInstant, startInstant, ,, ReadableInstant, endInstant, ,, PeriodType, type, ), {, super, (, ), ;]
[=, checkPeriodType, (, type, ), ;, if, (, startInstant, ==, null, &&, endInstant, ==, null, ), {, iType, =, type]
[;, if, (, startInstant, ==, null, &&, endInstant, ==, null, ), {, iType, =, type, ;, iValues, =, new, int]
[), ;, if, (, startInstant, ==, null, &&, endInstant, ==, null, ), {, iType, =, type, ;, iValues, =, new]
[), {, iType, =, type, ;, iValues, =, new, int, [, size, (, ), ], ;, }, else, {, long]
[&&, endInstant, ==, null, ), {, iType, =, type, ;, iValues, =, new, int, [, size, (, ), ], ;]
[==, null, &&, endInstant, ==, null, ), {, iType, =, type, ;, iValues, =, new, int, [, size, (, )]
[&&, endInstant, ==, null, ), {, iType, =, type, ;, iValues, =, new, int, [, size, (, ), ], ;]
[), {, iType, =, type, ;, iValues, =, new, int, [, size, (, ), ], ;, }, else, {, long]
[==, null, ), {, iType, =, type, ;, iValues, =, new, int, [, size, (, ), ], ;, }, else]
[), {, iType, =, type, ;, iValues, =, new, int, [, size, (, ), ], ;, }, else, {, long]
[=, type, ;, iValues, =, new, int, [, size, (, ), ], ;, }, else, {, long, startMillis, =, DateTimeUtils]
[;, iValues, =, new, int, [, size, (, ), ], ;, }, else, {, long, startMillis, =, DateTimeUtils, ., getInstantMillis]
[=, new, int, [, size, (, ), ], ;, }, else, {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, startInstant]
[;, }, else, {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, startInstant, ), ;, long, endMillis, =, DateTimeUtils, ., getInstantMillis]
[], ;, }, else, {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, startInstant, ), ;, long, endMillis, =, DateTimeUtils, .]
[;, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, endInstant, ), ;, Chronology, chrono, =, DateTimeUtils, ., getIntervalChronology, (, startInstant, ,]
[., getInstantMillis, (, startInstant, ), ;, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, endInstant, ), ;, Chronology, chrono, =, DateTimeUtils]
[), ;, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, endInstant, ), ;, Chronology, chrono, =, DateTimeUtils, ., getIntervalChronology, (, startInstant]
[;, Chronology, chrono, =, DateTimeUtils, ., getIntervalChronology, (, startInstant, ,, endInstant, ), ;, iType, =, type, ;, iValues, =, chrono]
[., getInstantMillis, (, endInstant, ), ;, Chronology, chrono, =, DateTimeUtils, ., getIntervalChronology, (, startInstant, ,, endInstant, ), ;, iType, =]
[), ;, Chronology, chrono, =, DateTimeUtils, ., getIntervalChronology, (, startInstant, ,, endInstant, ), ;, iType, =, type, ;, iValues, =]
[;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, }]
[., getIntervalChronology, (, startInstant, ,, endInstant, ), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,]
[,, endInstant, ), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, )]
[), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }]
[=, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, }, protected, BasePeriod]
[;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, }, protected, BasePeriod, (, ReadablePartial]
[=, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, }, protected, BasePeriod, (, ReadablePartial, start, ,]
[;, }, }, protected, BasePeriod, (, ReadablePartial, start, ,, ReadablePartial, end, ,, PeriodType, type, ), {, super, (, ), ;]
[., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, }, protected, BasePeriod, (, ReadablePartial, start, ,, ReadablePartial, end]
[,, startMillis, ,, endMillis, ), ;, }, }, protected, BasePeriod, (, ReadablePartial, start, ,, ReadablePartial, end, ,, PeriodType, type, )]
[,, endMillis, ), ;, }, }, protected, BasePeriod, (, ReadablePartial, start, ,, ReadablePartial, end, ,, PeriodType, type, ), {, super]
[), ;, }, }, protected, BasePeriod, (, ReadablePartial, start, ,, ReadablePartial, end, ,, PeriodType, type, ), {, super, (, )]
[), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must not be null", ), ;, }, if, (, start, instanceof, BaseLocal, &&, end, instanceof, BaseLocal, &&]
[||, end, ==, null, ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must not be null", ), ;, }, if, (, start, instanceof, BaseLocal, &&]
[==, null, ||, end, ==, null, ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must not be null", ), ;, }, if, (, start, instanceof]
[||, end, ==, null, ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must not be null", ), ;, }, if, (, start, instanceof, BaseLocal, &&]
[), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must not be null", ), ;, }, if, (, start, instanceof, BaseLocal, &&, end, instanceof, BaseLocal, &&]
[==, null, ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must not be null", ), ;, }, if, (, start, instanceof, BaseLocal, &&, end, instanceof]
[), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must not be null", ), ;, }, if, (, start, instanceof, BaseLocal, &&, end, instanceof, BaseLocal, &&]
[;, }, if, (, start, instanceof, BaseLocal, &&, end, instanceof, BaseLocal, &&, start, ., getClass, (, ), ==, end, .]
[), ;, }, if, (, start, instanceof, BaseLocal, &&, end, instanceof, BaseLocal, &&, start, ., getClass, (, ), ==, end]
[), {, type, =, checkPeriodType, (, type, ), ;, long, startMillis, =, (, (, BaseLocal, ), start, ), ., getLocalMillis]
[&&, start, ., getClass, (, ), ==, end, ., getClass, (, ), ), {, type, =, checkPeriodType, (, type, )]
[&&, end, instanceof, BaseLocal, &&, start, ., getClass, (, ), ==, end, ., getClass, (, ), ), {, type, =]
[instanceof, BaseLocal, &&, end, instanceof, BaseLocal, &&, start, ., getClass, (, ), ==, end, ., getClass, (, ), ), {]
[&&, start, ., getClass, (, ), ==, end, ., getClass, (, ), ), {, type, =, checkPeriodType, (, type, )]
[instanceof, BaseLocal, &&, start, ., getClass, (, ), ==, end, ., getClass, (, ), ), {, type, =, checkPeriodType, (]
[), {, type, =, checkPeriodType, (, type, ), ;, long, startMillis, =, (, (, BaseLocal, ), start, ), ., getLocalMillis]
[==, end, ., getClass, (, ), ), {, type, =, checkPeriodType, (, type, ), ;, long, startMillis, =, (, (]
[., getClass, (, ), ==, end, ., getClass, (, ), ), {, type, =, checkPeriodType, (, type, ), ;, long]
[), {, type, =, checkPeriodType, (, type, ), ;, long, startMillis, =, (, (, BaseLocal, ), start, ), ., getLocalMillis]
[., getClass, (, ), ), {, type, =, checkPeriodType, (, type, ), ;, long, startMillis, =, (, (, BaseLocal, )]
[=, checkPeriodType, (, type, ), ;, long, startMillis, =, (, (, BaseLocal, ), start, ), ., getLocalMillis, (, ), ;]
[;, long, startMillis, =, (, (, BaseLocal, ), start, ), ., getLocalMillis, (, ), ;, long, endMillis, =, (, (]
[), ;, long, startMillis, =, (, (, BaseLocal, ), start, ), ., getLocalMillis, (, ), ;, long, endMillis, =, (]
[;, long, endMillis, =, (, (, BaseLocal, ), end, ), ., getLocalMillis, (, ), ;, Chronology, chrono, =, start, .]
[., getLocalMillis, (, ), ;, long, endMillis, =, (, (, BaseLocal, ), end, ), ., getLocalMillis, (, ), ;, Chronology]
[), ., getLocalMillis, (, ), ;, long, endMillis, =, (, (, BaseLocal, ), end, ), ., getLocalMillis, (, ), ;]
[), ., getLocalMillis, (, ), ;, long, endMillis, =, (, (, BaseLocal, ), end, ), ., getLocalMillis, (, ), ;]
[;, Chronology, chrono, =, start, ., getChronology, (, ), ;, chrono, =, DateTimeUtils, ., getChronology, (, chrono, ), ;, iType]
[., getLocalMillis, (, ), ;, Chronology, chrono, =, start, ., getChronology, (, ), ;, chrono, =, DateTimeUtils, ., getChronology, (]
[), ., getLocalMillis, (, ), ;, Chronology, chrono, =, start, ., getChronology, (, ), ;, chrono, =, DateTimeUtils, ., getChronology]
[), ., getLocalMillis, (, ), ;, Chronology, chrono, =, start, ., getChronology, (, ), ;, chrono, =, DateTimeUtils, ., getChronology]
[;, chrono, =, DateTimeUtils, ., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues, =, chrono, ., get, (]
[., getChronology, (, ), ;, chrono, =, DateTimeUtils, ., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues, =]
[=, DateTimeUtils, ., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,]
[;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, else]
[., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,]
[), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }]
[=, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, else, {, if]
[;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, else, {, if, (, start]
[=, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, else, {, if, (, start, ., size]
[;, }, else, {, if, (, start, ., size, (, ), !=, end, ., size, (, ), ), {, throw]
[., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, else, {, if, (, start, ., size, (, )]
[,, startMillis, ,, endMillis, ), ;, }, else, {, if, (, start, ., size, (, ), !=, end, ., size]
[,, endMillis, ), ;, }, else, {, if, (, start, ., size, (, ), !=, end, ., size, (, )]
[), ;, }, else, {, if, (, start, ., size, (, ), !=, end, ., size, (, ), ), {]
[), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", ), ;, }, for, (, int, i, =, 0, ,, isize, =, start]
[!=, end, ., size, (, ), ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", ), ;, }, for, (, int, i]
[., size, (, ), !=, end, ., size, (, ), ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", ), ;, }]
[), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", ), ;, }, for, (, int, i, =, 0, ,, isize, =, start]
[., size, (, ), ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", ), ;, }, for, (, int, i, =, 0]
[;, }, for, (, int, i, =, 0, ,, isize, =, start, ., size, (, ), ;, i, <, isize]
[), ;, }, for, (, int, i, =, 0, ,, isize, =, start, ., size, (, ), ;, i, <]
[,, isize, =, start, ., size, (, ), ;, i, <, isize, ;, i, ++, ), {, if, (, start]
[;, i, <, isize, ;, i, ++, ), {, if, (, start, ., getFieldType, (, i, ), !=, end, .]
[., size, (, ), ;, i, <, isize, ;, i, ++, ), {, if, (, start, ., getFieldType, (, i]
[;, i, ++, ), {, if, (, start, ., getFieldType, (, i, ), !=, end, ., getFieldType, (, i, )]
[<, isize, ;, i, ++, ), {, if, (, start, ., getFieldType, (, i, ), !=, end, ., getFieldType, (]
[;, i, ++, ), {, if, (, start, ., getFieldType, (, i, ), !=, end, ., getFieldType, (, i, )]
[), {, if, (, start, ., getFieldType, (, i, ), !=, end, ., getFieldType, (, i, ), ), {, throw]
[++, ), {, if, (, start, ., getFieldType, (, i, ), !=, end, ., getFieldType, (, i, ), ), {]
[), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", ), ;, }, }, if, (, DateTimeUtils, ., isContiguous, (, start, ), ==]
[!=, end, ., getFieldType, (, i, ), ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", ), ;, }, }, if, (]
[., getFieldType, (, i, ), !=, end, ., getFieldType, (, i, ), ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", )]
[), !=, end, ., getFieldType, (, i, ), ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", ), ;, }, }, if]
[), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", ), ;, }, }, if, (, DateTimeUtils, ., isContiguous, (, start, ), ==]
[., getFieldType, (, i, ), ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", ), ;, }, }, if, (, DateTimeUtils, .]
[), ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must have the same set of fields", ), ;, }, }, if, (, DateTimeUtils, ., isContiguous, (, start, )]
[;, }, }, if, (, DateTimeUtils, ., isContiguous, (, start, ), ==, false, ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must be contiguous"]
[), ;, }, }, if, (, DateTimeUtils, ., isContiguous, (, start, ), ==, false, ), {, throw, new, IllegalArgumentException, (]
[), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must be contiguous", ), ;, }, iType, =, checkPeriodType, (, type, ), ;, Chronology, chrono, =]
[==, false, ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must be contiguous", ), ;, }, iType, =, checkPeriodType, (, type, ), ;, Chronology]
[., isContiguous, (, start, ), ==, false, ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must be contiguous", ), ;, }, iType, =, checkPeriodType]
[), ==, false, ), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must be contiguous", ), ;, }, iType, =, checkPeriodType, (, type, ), ;]
[), {, throw, new, IllegalArgumentException, (, "ReadablePartial objects must be contiguous", ), ;, }, iType, =, checkPeriodType, (, type, ), ;, Chronology, chrono, =]
[;, }, iType, =, checkPeriodType, (, type, ), ;, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (]
[), ;, }, iType, =, checkPeriodType, (, type, ), ;, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology]
[=, checkPeriodType, (, type, ), ;, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), .]
[;, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ., withUTC, (, ), ;, iValues]
[), ;, Chronology, chrono, =, DateTimeUtils, ., getChronology, (, start, ., getChronology, (, ), ), ., withUTC, (, ), ;]
[;, iValues, =, chrono, ., get, (, this, ,, chrono, ., set, (, start, ,, 0L, ), ,, chrono, .]
[., withUTC, (, ), ;, iValues, =, chrono, ., get, (, this, ,, chrono, ., set, (, start, ,, 0L]
[., getChronology, (, start, ., getChronology, (, ), ), ., withUTC, (, ), ;, iValues, =, chrono, ., get, (]
[), ., withUTC, (, ), ;, iValues, =, chrono, ., get, (, this, ,, chrono, ., set, (, start, ,]
[., getChronology, (, ), ), ., withUTC, (, ), ;, iValues, =, chrono, ., get, (, this, ,, chrono, .]
[=, chrono, ., get, (, this, ,, chrono, ., set, (, start, ,, 0L, ), ,, chrono, ., set, (]
[;, }, }, protected, BasePeriod, (, ReadableInstant, startInstant, ,, ReadableDuration, duration, ,, PeriodType, type, ), {, super, (, ), ;]
[., get, (, this, ,, chrono, ., set, (, start, ,, 0L, ), ,, chrono, ., set, (, end, ,]
[,, chrono, ., set, (, start, ,, 0L, ), ,, chrono, ., set, (, end, ,, 0L, ), ), ;]
[,, chrono, ., set, (, end, ,, 0L, ), ), ;, }, }, protected, BasePeriod, (, ReadableInstant, startInstant, ,, ReadableDuration]
[., set, (, start, ,, 0L, ), ,, chrono, ., set, (, end, ,, 0L, ), ), ;, }, }]
[,, 0L, ), ,, chrono, ., set, (, end, ,, 0L, ), ), ;, }, }, protected, BasePeriod, (, ReadableInstant]
[), ,, chrono, ., set, (, end, ,, 0L, ), ), ;, }, }, protected, BasePeriod, (, ReadableInstant, startInstant, ,]
[), ;, }, }, protected, BasePeriod, (, ReadableInstant, startInstant, ,, ReadableDuration, duration, ,, PeriodType, type, ), {, super, (, )]
[., set, (, end, ,, 0L, ), ), ;, }, }, protected, BasePeriod, (, ReadableInstant, startInstant, ,, ReadableDuration, duration, ,]
[,, 0L, ), ), ;, }, }, protected, BasePeriod, (, ReadableInstant, startInstant, ,, ReadableDuration, duration, ,, PeriodType, type, ), {]
[), ), ;, }, }, protected, BasePeriod, (, ReadableInstant, startInstant, ,, ReadableDuration, duration, ,, PeriodType, type, ), {, super, (]
[=, checkPeriodType, (, type, ), ;, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, startInstant, ), ;, long, durationMillis, =, DateTimeUtils]
[;, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, startInstant, ), ;, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, )]
[), ;, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, startInstant, ), ;, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration]
[;, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, long, endMillis, =, FieldUtils, ., safeAdd, (, startMillis, ,]
[., getInstantMillis, (, startInstant, ), ;, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, long, endMillis, =, FieldUtils]
[), ;, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, long, endMillis, =, FieldUtils, ., safeAdd, (, startMillis]
[;, long, endMillis, =, FieldUtils, ., safeAdd, (, startMillis, ,, durationMillis, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (]
[., getDurationMillis, (, duration, ), ;, long, endMillis, =, FieldUtils, ., safeAdd, (, startMillis, ,, durationMillis, ), ;, Chronology, chrono]
[), ;, long, endMillis, =, FieldUtils, ., safeAdd, (, startMillis, ,, durationMillis, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology]
[;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, startInstant, ), ;, iType, =, type, ;, iValues, =, chrono, ., get]
[., safeAdd, (, startMillis, ,, durationMillis, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, startInstant, ), ;, iType, =]
[,, durationMillis, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, startInstant, ), ;, iType, =, type, ;, iValues, =]
[), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, startInstant, ), ;, iType, =, type, ;, iValues, =, chrono, .]
[;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, protected]
[., getInstantChronology, (, startInstant, ), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,]
[), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }]
[=, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, protected, BasePeriod, (]
[;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, protected, BasePeriod, (, ReadableDuration, duration]
[=, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, protected, BasePeriod, (, ReadableDuration, duration, ,, ReadableInstant]
[;, }, protected, BasePeriod, (, ReadableDuration, duration, ,, ReadableInstant, endInstant, ,, PeriodType, type, ), {, super, (, ), ;, type]
[., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, protected, BasePeriod, (, ReadableDuration, duration, ,, ReadableInstant, endInstant, ,]
[,, startMillis, ,, endMillis, ), ;, }, protected, BasePeriod, (, ReadableDuration, duration, ,, ReadableInstant, endInstant, ,, PeriodType, type, ), {]
[,, endMillis, ), ;, }, protected, BasePeriod, (, ReadableDuration, duration, ,, ReadableInstant, endInstant, ,, PeriodType, type, ), {, super, (]
[), ;, }, protected, BasePeriod, (, ReadableDuration, duration, ,, ReadableInstant, endInstant, ,, PeriodType, type, ), {, super, (, ), ;]
[=, checkPeriodType, (, type, ), ;, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, long, endMillis, =, DateTimeUtils]
[;, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, endInstant, )]
[), ;, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, endInstant]
[;, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, endInstant, ), ;, long, startMillis, =, FieldUtils, ., safeSubtract, (, endMillis, ,]
[., getDurationMillis, (, duration, ), ;, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, endInstant, ), ;, long, startMillis, =, FieldUtils]
[), ;, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, endInstant, ), ;, long, startMillis, =, FieldUtils, ., safeSubtract, (, endMillis]
[;, long, startMillis, =, FieldUtils, ., safeSubtract, (, endMillis, ,, durationMillis, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (]
[., getInstantMillis, (, endInstant, ), ;, long, startMillis, =, FieldUtils, ., safeSubtract, (, endMillis, ,, durationMillis, ), ;, Chronology, chrono]
[), ;, long, startMillis, =, FieldUtils, ., safeSubtract, (, endMillis, ,, durationMillis, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology]
[;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, endInstant, ), ;, iType, =, type, ;, iValues, =, chrono, ., get]
[., safeSubtract, (, endMillis, ,, durationMillis, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, endInstant, ), ;, iType, =]
[,, durationMillis, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, endInstant, ), ;, iType, =, type, ;, iValues, =]
[), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, endInstant, ), ;, iType, =, type, ;, iValues, =, chrono, .]
[;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, protected]
[., getInstantChronology, (, endInstant, ), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,]
[), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }]
[=, type, ;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, protected, BasePeriod, (]
[;, iValues, =, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, protected, BasePeriod, (, long, duration]
[=, chrono, ., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, protected, BasePeriod, (, long, duration, ), {]
[;, }, protected, BasePeriod, (, long, duration, ), {, super, (, ), ;, iType, =, PeriodType, ., standard, (, )]
[., get, (, this, ,, startMillis, ,, endMillis, ), ;, }, protected, BasePeriod, (, long, duration, ), {, super, (]
[,, startMillis, ,, endMillis, ), ;, }, protected, BasePeriod, (, long, duration, ), {, super, (, ), ;, iType, =]
[,, endMillis, ), ;, }, protected, BasePeriod, (, long, duration, ), {, super, (, ), ;, iType, =, PeriodType, .]
[), ;, }, protected, BasePeriod, (, long, duration, ), {, super, (, ), ;, iType, =, PeriodType, ., standard, (]
[=, PeriodType, ., standard, (, ), ;, int, [, ], values, =, ISOChronology, ., getInstanceUTC, (, ), ., get, (]
[;, int, [, ], values, =, ISOChronology, ., getInstanceUTC, (, ), ., get, (, DUMMY_PERIOD, ,, duration, ), ;, iValues]
[., standard, (, ), ;, int, [, ], values, =, ISOChronology, ., getInstanceUTC, (, ), ., get, (, DUMMY_PERIOD, ,]
[;, iValues, =, new, int, [, 8, ], ;, System, ., arraycopy, (, values, ,, 0, ,, iValues, ,, 4]
[., get, (, DUMMY_PERIOD, ,, duration, ), ;, iValues, =, new, int, [, 8, ], ;, System, ., arraycopy, (]
[., getInstanceUTC, (, ), ., get, (, DUMMY_PERIOD, ,, duration, ), ;, iValues, =, new, int, [, 8, ], ;]
[,, duration, ), ;, iValues, =, new, int, [, 8, ], ;, System, ., arraycopy, (, values, ,, 0, ,]
[), ;, iValues, =, new, int, [, 8, ], ;, System, ., arraycopy, (, values, ,, 0, ,, iValues, ,]
[=, new, int, [, 8, ], ;, System, ., arraycopy, (, values, ,, 0, ,, iValues, ,, 4, ,, 4]
[;, System, ., arraycopy, (, values, ,, 0, ,, iValues, ,, 4, ,, 4, ), ;, }, protected, BasePeriod, (]
[], ;, System, ., arraycopy, (, values, ,, 0, ,, iValues, ,, 4, ,, 4, ), ;, }, protected, BasePeriod]
[;, }, protected, BasePeriod, (, long, duration, ,, PeriodType, type, ,, Chronology, chrono, ), {, super, (, ), ;, type]
[., arraycopy, (, values, ,, 0, ,, iValues, ,, 4, ,, 4, ), ;, }, protected, BasePeriod, (, long, duration]
[,, 0, ,, iValues, ,, 4, ,, 4, ), ;, }, protected, BasePeriod, (, long, duration, ,, PeriodType, type, ,]
[,, iValues, ,, 4, ,, 4, ), ;, }, protected, BasePeriod, (, long, duration, ,, PeriodType, type, ,, Chronology, chrono]
[,, 4, ,, 4, ), ;, }, protected, BasePeriod, (, long, duration, ,, PeriodType, type, ,, Chronology, chrono, ), {]
[,, 4, ), ;, }, protected, BasePeriod, (, long, duration, ,, PeriodType, type, ,, Chronology, chrono, ), {, super, (]
[), ;, }, protected, BasePeriod, (, long, duration, ,, PeriodType, type, ,, Chronology, chrono, ), {, super, (, ), ;]
[=, checkPeriodType, (, type, ), ;, chrono, =, DateTimeUtils, ., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues]
[;, chrono, =, DateTimeUtils, ., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues, =, chrono, ., get, (]
[), ;, chrono, =, DateTimeUtils, ., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues, =, chrono, ., get]
[=, DateTimeUtils, ., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,]
[;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, duration, ), ;, }, protected, BasePeriod, (]
[., getChronology, (, chrono, ), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, duration, )]
[), ;, iType, =, type, ;, iValues, =, chrono, ., get, (, this, ,, duration, ), ;, }, protected, BasePeriod]
[=, type, ;, iValues, =, chrono, ., get, (, this, ,, duration, ), ;, }, protected, BasePeriod, (, Object, period]
[;, iValues, =, chrono, ., get, (, this, ,, duration, ), ;, }, protected, BasePeriod, (, Object, period, ,, PeriodType]
[=, chrono, ., get, (, this, ,, duration, ), ;, }, protected, BasePeriod, (, Object, period, ,, PeriodType, type, ,]
[;, }, protected, BasePeriod, (, Object, period, ,, PeriodType, type, ,, Chronology, chrono, ), {, super, (, ), ;, PeriodConverter]
[., get, (, this, ,, duration, ), ;, }, protected, BasePeriod, (, Object, period, ,, PeriodType, type, ,, Chronology, chrono]
[,, duration, ), ;, }, protected, BasePeriod, (, Object, period, ,, PeriodType, type, ,, Chronology, chrono, ), {, super, (]
[), ;, }, protected, BasePeriod, (, Object, period, ,, PeriodType, type, ,, Chronology, chrono, ), {, super, (, ), ;]
[;, type, =, (, type, ==, null, ?, converter, ., getPeriodType, (, period, ), :, type, ), ;, type, =]
[., getPeriodConverter, (, period, ), ;, type, =, (, type, ==, null, ?, converter, ., getPeriodType, (, period, ), :]
[., getInstance, (, ), ., getPeriodConverter, (, period, ), ;, type, =, (, type, ==, null, ?, converter, ., getPeriodType]
[), ;, type, =, (, type, ==, null, ?, converter, ., getPeriodType, (, period, ), :, type, ), ;, type]
[=, (, type, ==, null, ?, converter, ., getPeriodType, (, period, ), :, type, ), ;, type, =, checkPeriodType, (]
[;, type, =, checkPeriodType, (, type, ), ;, iType, =, type, ;, if, (, this, instanceof, ReadWritablePeriod, ), {, iValues]
[), ;, type, =, checkPeriodType, (, type, ), ;, iType, =, type, ;, if, (, this, instanceof, ReadWritablePeriod, ), {]
[?, converter, ., getPeriodType, (, period, ), :, type, ), ;, type, =, checkPeriodType, (, type, ), ;, iType, =]
[==, null, ?, converter, ., getPeriodType, (, period, ), :, type, ), ;, type, =, checkPeriodType, (, type, ), ;]
[?, converter, ., getPeriodType, (, period, ), :, type, ), ;, type, =, checkPeriodType, (, type, ), ;, iType, =]
[:, type, ), ;, type, =, checkPeriodType, (, type, ), ;, iType, =, type, ;, if, (, this, instanceof, ReadWritablePeriod]
[., getPeriodType, (, period, ), :, type, ), ;, type, =, checkPeriodType, (, type, ), ;, iType, =, type, ;]
[), :, type, ), ;, type, =, checkPeriodType, (, type, ), ;, iType, =, type, ;, if, (, this, instanceof]
[), ;, type, =, checkPeriodType, (, type, ), ;, iType, =, type, ;, if, (, this, instanceof, ReadWritablePeriod, ), {]
[=, checkPeriodType, (, type, ), ;, iType, =, type, ;, if, (, this, instanceof, ReadWritablePeriod, ), {, iValues, =, new]
[;, iType, =, type, ;, if, (, this, instanceof, ReadWritablePeriod, ), {, iValues, =, new, int, [, size, (, )]
[), ;, iType, =, type, ;, if, (, this, instanceof, ReadWritablePeriod, ), {, iValues, =, new, int, [, size, (]
[=, type, ;, if, (, this, instanceof, ReadWritablePeriod, ), {, iValues, =, new, int, [, size, (, ), ], ;]
[;, if, (, this, instanceof, ReadWritablePeriod, ), {, iValues, =, new, int, [, size, (, ), ], ;, chrono, =]
[), {, iValues, =, new, int, [, size, (, ), ], ;, chrono, =, DateTimeUtils, ., getChronology, (, chrono, )]
[instanceof, ReadWritablePeriod, ), {, iValues, =, new, int, [, size, (, ), ], ;, chrono, =, DateTimeUtils, ., getChronology, (]
[=, new, int, [, size, (, ), ], ;, chrono, =, DateTimeUtils, ., getChronology, (, chrono, ), ;, converter, .]
[;, chrono, =, DateTimeUtils, ., getChronology, (, chrono, ), ;, converter, ., setInto, (, (, ReadWritablePeriod, ), this, ,, period]
[], ;, chrono, =, DateTimeUtils, ., getChronology, (, chrono, ), ;, converter, ., setInto, (, (, ReadWritablePeriod, ), this, ,]
[=, DateTimeUtils, ., getChronology, (, chrono, ), ;, converter, ., setInto, (, (, ReadWritablePeriod, ), this, ,, period, ,, chrono]
[;, converter, ., setInto, (, (, ReadWritablePeriod, ), this, ,, period, ,, chrono, ), ;, }, else, {, iValues, =]
[., getChronology, (, chrono, ), ;, converter, ., setInto, (, (, ReadWritablePeriod, ), this, ,, period, ,, chrono, ), ;]
[), ;, converter, ., setInto, (, (, ReadWritablePeriod, ), this, ,, period, ,, chrono, ), ;, }, else, {, iValues]
[;, }, else, {, iValues, =, new, MutablePeriod, (, period, ,, type, ,, chrono, ), ., getValues, (, ), ;]
[., setInto, (, (, ReadWritablePeriod, ), this, ,, period, ,, chrono, ), ;, }, else, {, iValues, =, new, MutablePeriod]
[,, period, ,, chrono, ), ;, }, else, {, iValues, =, new, MutablePeriod, (, period, ,, type, ,, chrono, )]
[,, period, ,, chrono, ), ;, }, else, {, iValues, =, new, MutablePeriod, (, period, ,, type, ,, chrono, )]
[,, chrono, ), ;, }, else, {, iValues, =, new, MutablePeriod, (, period, ,, type, ,, chrono, ), ., getValues]
[), ;, }, else, {, iValues, =, new, MutablePeriod, (, period, ,, type, ,, chrono, ), ., getValues, (, )]
[=, new, MutablePeriod, (, period, ,, type, ,, chrono, ), ., getValues, (, ), ;, }, }, protected, BasePeriod, (]
[;, }, }, protected, BasePeriod, (, int, [, ], values, ,, PeriodType, type, ), {, super, (, ), ;, iType]
[., getValues, (, ), ;, }, }, protected, BasePeriod, (, int, [, ], values, ,, PeriodType, type, ), {, super]
[,, type, ,, chrono, ), ., getValues, (, ), ;, }, }, protected, BasePeriod, (, int, [, ], values, ,]
[,, chrono, ), ., getValues, (, ), ;, }, }, protected, BasePeriod, (, int, [, ], values, ,, PeriodType, type]
[), ., getValues, (, ), ;, }, }, protected, BasePeriod, (, int, [, ], values, ,, PeriodType, type, ), {]
[=, type, ;, iValues, =, values, ;, }, protected, PeriodType, checkPeriodType, (, PeriodType, type, ), {, return, DateTimeUtils, ., getPeriodType]
[;, iValues, =, values, ;, }, protected, PeriodType, checkPeriodType, (, PeriodType, type, ), {, return, DateTimeUtils, ., getPeriodType, (, type]
[=, values, ;, }, protected, PeriodType, checkPeriodType, (, PeriodType, type, ), {, return, DateTimeUtils, ., getPeriodType, (, type, ), ;]
[;, }, protected, PeriodType, checkPeriodType, (, PeriodType, type, ), {, return, DateTimeUtils, ., getPeriodType, (, type, ), ;, }, public]
[;, }, public, PeriodType, getPeriodType, (, ), {, return, iType, ;, }, public, int, getValue, (, int, index, ), {]
[., getPeriodType, (, type, ), ;, }, public, PeriodType, getPeriodType, (, ), {, return, iType, ;, }, public, int, getValue]
[), ;, }, public, PeriodType, getPeriodType, (, ), {, return, iType, ;, }, public, int, getValue, (, int, index, )]
[;, }, public, int, getValue, (, int, index, ), {, return, iValues, [, index, ], ;, }, public, Duration, toDurationFrom]
[;, }, public, Duration, toDurationFrom, (, ReadableInstant, startInstant, ), {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, startInstant, ), ;]
[[, index, ], ;, }, public, Duration, toDurationFrom, (, ReadableInstant, startInstant, ), {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (]
[], ;, }, public, Duration, toDurationFrom, (, ReadableInstant, startInstant, ), {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, startInstant, )]
[;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, startInstant, ), ;, long, endMillis, =, chrono, ., add, (, this, ,]
[., getInstantMillis, (, startInstant, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, startInstant, ), ;, long, endMillis, =, chrono]
[), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, startInstant, ), ;, long, endMillis, =, chrono, ., add, (, this]
[;, long, endMillis, =, chrono, ., add, (, this, ,, startMillis, ,, 1, ), ;, return, new, Duration, (, startMillis]
[., getInstantChronology, (, startInstant, ), ;, long, endMillis, =, chrono, ., add, (, this, ,, startMillis, ,, 1, ), ;]
[), ;, long, endMillis, =, chrono, ., add, (, this, ,, startMillis, ,, 1, ), ;, return, new, Duration, (]
[;, return, new, Duration, (, startMillis, ,, endMillis, ), ;, }, public, Duration, toDurationTo, (, ReadableInstant, endInstant, ), {, long]
[., add, (, this, ,, startMillis, ,, 1, ), ;, return, new, Duration, (, startMillis, ,, endMillis, ), ;, }]
[,, startMillis, ,, 1, ), ;, return, new, Duration, (, startMillis, ,, endMillis, ), ;, }, public, Duration, toDurationTo, (]
[,, 1, ), ;, return, new, Duration, (, startMillis, ,, endMillis, ), ;, }, public, Duration, toDurationTo, (, ReadableInstant, endInstant]
[), ;, return, new, Duration, (, startMillis, ,, endMillis, ), ;, }, public, Duration, toDurationTo, (, ReadableInstant, endInstant, ), {]
[;, }, public, Duration, toDurationTo, (, ReadableInstant, endInstant, ), {, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, endInstant, ), ;]
[,, endMillis, ), ;, }, public, Duration, toDurationTo, (, ReadableInstant, endInstant, ), {, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (]
[), ;, }, public, Duration, toDurationTo, (, ReadableInstant, endInstant, ), {, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, endInstant, )]
[;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, endInstant, ), ;, long, startMillis, =, chrono, ., add, (, this, ,]
[., getInstantMillis, (, endInstant, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, endInstant, ), ;, long, startMillis, =, chrono]
[), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, endInstant, ), ;, long, startMillis, =, chrono, ., add, (, this]
[;, long, startMillis, =, chrono, ., add, (, this, ,, endMillis, ,, -, 1, ), ;, return, new, Duration, (]
[., getInstantChronology, (, endInstant, ), ;, long, startMillis, =, chrono, ., add, (, this, ,, endMillis, ,, -, 1, )]
[), ;, long, startMillis, =, chrono, ., add, (, this, ,, endMillis, ,, -, 1, ), ;, return, new, Duration]
[;, return, new, Duration, (, startMillis, ,, endMillis, ), ;, }, private, void, checkAndUpdate, (, DurationFieldType, type, ,, int, []
[., add, (, this, ,, endMillis, ,, -, 1, ), ;, return, new, Duration, (, startMillis, ,, endMillis, ), ;]
[,, endMillis, ,, -, 1, ), ;, return, new, Duration, (, startMillis, ,, endMillis, ), ;, }, private, void, checkAndUpdate]
[,, -, 1, ), ;, return, new, Duration, (, startMillis, ,, endMillis, ), ;, }, private, void, checkAndUpdate, (, DurationFieldType]
[), ;, return, new, Duration, (, startMillis, ,, endMillis, ), ;, }, private, void, checkAndUpdate, (, DurationFieldType, type, ,, int]
[), ;, return, new, Duration, (, startMillis, ,, endMillis, ), ;, }, private, void, checkAndUpdate, (, DurationFieldType, type, ,, int]
[;, }, private, void, checkAndUpdate, (, DurationFieldType, type, ,, int, [, ], values, ,, int, newValue, ), {, int, index]
[,, endMillis, ), ;, }, private, void, checkAndUpdate, (, DurationFieldType, type, ,, int, [, ], values, ,, int, newValue, )]
[), ;, }, private, void, checkAndUpdate, (, DurationFieldType, type, ,, int, [, ], values, ,, int, newValue, ), {, int]
[;, if, (, index, ==, -, 1, ), {, if, (, newValue, !=, 0, ), {, throw, new, IllegalArgumentException, (]
[), ;, if, (, index, ==, -, 1, ), {, if, (, newValue, !=, 0, ), {, throw, new, IllegalArgumentException]
[), {, if, (, newValue, !=, 0, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (, )]
[==, -, 1, ), {, if, (, newValue, !=, 0, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, type, .]
[), {, if, (, newValue, !=, 0, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (, )]
[), {, if, (, newValue, !=, 0, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (, )]
[), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (, ), +, "'", ), ;, }, }, else]
[!=, 0, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (, ), +, "'", ), ;, }]
[), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (, ), +, "'", ), ;, }, }, else]
[;, }, }, else, {, values, [, index, ], =, newValue, ;, }, }, protected, void, setPeriod, (, ReadablePeriod, period]
[), ;, }, }, else, {, values, [, index, ], =, newValue, ;, }, }, protected, void, setPeriod, (, ReadablePeriod]
[+, "'", ), ;, }, }, else, {, values, [, index, ], =, newValue, ;, }, }, protected, void, setPeriod]
[+, type, ., getName, (, ), +, "'", ), ;, }, }, else, {, values, [, index, ], =, newValue]
[+, "'", ), ;, }, }, else, {, values, [, index, ], =, newValue, ;, }, }, protected, void, setPeriod]
[., getName, (, ), +, "'", ), ;, }, }, else, {, values, [, index, ], =, newValue, ;, }]
[), ;, }, }, else, {, values, [, index, ], =, newValue, ;, }, }, protected, void, setPeriod, (, ReadablePeriod]
[=, newValue, ;, }, }, protected, void, setPeriod, (, ReadablePeriod, period, ), {, if, (, period, ==, null, ), {]
[[, index, ], =, newValue, ;, }, }, protected, void, setPeriod, (, ReadablePeriod, period, ), {, if, (, period, ==]
[], =, newValue, ;, }, }, protected, void, setPeriod, (, ReadablePeriod, period, ), {, if, (, period, ==, null, )]
[;, }, }, protected, void, setPeriod, (, ReadablePeriod, period, ), {, if, (, period, ==, null, ), {, setValues, (]
[), {, setValues, (, new, int, [, size, (, ), ], ), ;, }, else, {, setPeriodInternal, (, period, )]
[==, null, ), {, setValues, (, new, int, [, size, (, ), ], ), ;, }, else, {, setPeriodInternal, (]
[), {, setValues, (, new, int, [, size, (, ), ], ), ;, }, else, {, setPeriodInternal, (, period, )]
[;, }, else, {, setPeriodInternal, (, period, ), ;, }, }, private, void, setPeriodInternal, (, ReadablePeriod, period, ), {, int]
[), ;, }, else, {, setPeriodInternal, (, period, ), ;, }, }, private, void, setPeriodInternal, (, ReadablePeriod, period, ), {]
[], ), ;, }, else, {, setPeriodInternal, (, period, ), ;, }, }, private, void, setPeriodInternal, (, ReadablePeriod, period, )]
[;, }, }, private, void, setPeriodInternal, (, ReadablePeriod, period, ), {, int, [, ], newValues, =, new, int, [, size]
[), ;, }, }, private, void, setPeriodInternal, (, ReadablePeriod, period, ), {, int, [, ], newValues, =, new, int, []
[;, for, (, int, i, =, 0, ,, isize, =, period, ., size, (, ), ;, i, <, isize, ;]
[], ;, for, (, int, i, =, 0, ,, isize, =, period, ., size, (, ), ;, i, <, isize]
[,, isize, =, period, ., size, (, ), ;, i, <, isize, ;, i, ++, ), {, DurationFieldType, type, =]
[;, i, <, isize, ;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int]
[., size, (, ), ;, i, <, isize, ;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (]
[;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =, period, .]
[<, isize, ;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =]
[;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =, period, .]
[), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =, period, ., getValue, (, i]
[++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =, period, ., getValue, (]
[;, int, value, =, period, ., getValue, (, i, ), ;, checkAndUpdate, (, type, ,, newValues, ,, value, ), ;]
[., getFieldType, (, i, ), ;, int, value, =, period, ., getValue, (, i, ), ;, checkAndUpdate, (, type, ,]
[), ;, int, value, =, period, ., getValue, (, i, ), ;, checkAndUpdate, (, type, ,, newValues, ,, value, )]
[;, checkAndUpdate, (, type, ,, newValues, ,, value, ), ;, }, setValues, (, newValues, ), ;, }, protected, void, setPeriod]
[., getValue, (, i, ), ;, checkAndUpdate, (, type, ,, newValues, ,, value, ), ;, }, setValues, (, newValues, )]
[), ;, checkAndUpdate, (, type, ,, newValues, ,, value, ), ;, }, setValues, (, newValues, ), ;, }, protected, void]
[;, }, setValues, (, newValues, ), ;, }, protected, void, setPeriod, (, int, years, ,, int, months, ,, int, weeks]
[,, newValues, ,, value, ), ;, }, setValues, (, newValues, ), ;, }, protected, void, setPeriod, (, int, years, ,]
[,, value, ), ;, }, setValues, (, newValues, ), ;, }, protected, void, setPeriod, (, int, years, ,, int, months]
[), ;, }, setValues, (, newValues, ), ;, }, protected, void, setPeriod, (, int, years, ,, int, months, ,, int]
[;, }, protected, void, setPeriod, (, int, years, ,, int, months, ,, int, weeks, ,, int, days, ,, int, hours]
[), ;, }, protected, void, setPeriod, (, int, years, ,, int, months, ,, int, weeks, ,, int, days, ,, int]
[;, setValues, (, newValues, ), ;, }, private, int, [, ], setPeriodInternal, (, int, years, ,, int, months, ,, int]
[,, months, ,, weeks, ,, days, ,, hours, ,, minutes, ,, seconds, ,, millis, ), ;, setValues, (, newValues, )]
[,, weeks, ,, days, ,, hours, ,, minutes, ,, seconds, ,, millis, ), ;, setValues, (, newValues, ), ;, }]
[,, days, ,, hours, ,, minutes, ,, seconds, ,, millis, ), ;, setValues, (, newValues, ), ;, }, private, int]
[,, hours, ,, minutes, ,, seconds, ,, millis, ), ;, setValues, (, newValues, ), ;, }, private, int, [, ]]
[,, minutes, ,, seconds, ,, millis, ), ;, setValues, (, newValues, ), ;, }, private, int, [, ], setPeriodInternal, (]
[,, seconds, ,, millis, ), ;, setValues, (, newValues, ), ;, }, private, int, [, ], setPeriodInternal, (, int, years]
[,, millis, ), ;, setValues, (, newValues, ), ;, }, private, int, [, ], setPeriodInternal, (, int, years, ,, int]
[), ;, setValues, (, newValues, ), ;, }, private, int, [, ], setPeriodInternal, (, int, years, ,, int, months, ,]
[;, }, private, int, [, ], setPeriodInternal, (, int, years, ,, int, months, ,, int, weeks, ,, int, days, ,]
[), ;, }, private, int, [, ], setPeriodInternal, (, int, years, ,, int, months, ,, int, weeks, ,, int, days]
[;, checkAndUpdate, (, DurationFieldType, ., years, (, ), ,, newValues, ,, years, ), ;, checkAndUpdate, (, DurationFieldType, ., months, (]
[], ;, checkAndUpdate, (, DurationFieldType, ., years, (, ), ,, newValues, ,, years, ), ;, checkAndUpdate, (, DurationFieldType, ., months]
[;, checkAndUpdate, (, DurationFieldType, ., months, (, ), ,, newValues, ,, months, ), ;, checkAndUpdate, (, DurationFieldType, ., weeks, (]
[,, newValues, ,, years, ), ;, checkAndUpdate, (, DurationFieldType, ., months, (, ), ,, newValues, ,, months, ), ;, checkAndUpdate]
[., years, (, ), ,, newValues, ,, years, ), ;, checkAndUpdate, (, DurationFieldType, ., months, (, ), ,, newValues, ,]
[,, years, ), ;, checkAndUpdate, (, DurationFieldType, ., months, (, ), ,, newValues, ,, months, ), ;, checkAndUpdate, (, DurationFieldType]
[), ;, checkAndUpdate, (, DurationFieldType, ., months, (, ), ,, newValues, ,, months, ), ;, checkAndUpdate, (, DurationFieldType, ., weeks]
[;, checkAndUpdate, (, DurationFieldType, ., weeks, (, ), ,, newValues, ,, weeks, ), ;, checkAndUpdate, (, DurationFieldType, ., days, (]
[,, newValues, ,, months, ), ;, checkAndUpdate, (, DurationFieldType, ., weeks, (, ), ,, newValues, ,, weeks, ), ;, checkAndUpdate]
[., months, (, ), ,, newValues, ,, months, ), ;, checkAndUpdate, (, DurationFieldType, ., weeks, (, ), ,, newValues, ,]
[,, months, ), ;, checkAndUpdate, (, DurationFieldType, ., weeks, (, ), ,, newValues, ,, weeks, ), ;, checkAndUpdate, (, DurationFieldType]
[), ;, checkAndUpdate, (, DurationFieldType, ., weeks, (, ), ,, newValues, ,, weeks, ), ;, checkAndUpdate, (, DurationFieldType, ., days]
[;, checkAndUpdate, (, DurationFieldType, ., days, (, ), ,, newValues, ,, days, ), ;, checkAndUpdate, (, DurationFieldType, ., hours, (]
[,, newValues, ,, weeks, ), ;, checkAndUpdate, (, DurationFieldType, ., days, (, ), ,, newValues, ,, days, ), ;, checkAndUpdate]
[., weeks, (, ), ,, newValues, ,, weeks, ), ;, checkAndUpdate, (, DurationFieldType, ., days, (, ), ,, newValues, ,]
[,, weeks, ), ;, checkAndUpdate, (, DurationFieldType, ., days, (, ), ,, newValues, ,, days, ), ;, checkAndUpdate, (, DurationFieldType]
[), ;, checkAndUpdate, (, DurationFieldType, ., days, (, ), ,, newValues, ,, days, ), ;, checkAndUpdate, (, DurationFieldType, ., hours]
[;, checkAndUpdate, (, DurationFieldType, ., hours, (, ), ,, newValues, ,, hours, ), ;, checkAndUpdate, (, DurationFieldType, ., minutes, (]
[,, newValues, ,, days, ), ;, checkAndUpdate, (, DurationFieldType, ., hours, (, ), ,, newValues, ,, hours, ), ;, checkAndUpdate]
[., days, (, ), ,, newValues, ,, days, ), ;, checkAndUpdate, (, DurationFieldType, ., hours, (, ), ,, newValues, ,]
[,, days, ), ;, checkAndUpdate, (, DurationFieldType, ., hours, (, ), ,, newValues, ,, hours, ), ;, checkAndUpdate, (, DurationFieldType]
[), ;, checkAndUpdate, (, DurationFieldType, ., hours, (, ), ,, newValues, ,, hours, ), ;, checkAndUpdate, (, DurationFieldType, ., minutes]
[;, checkAndUpdate, (, DurationFieldType, ., minutes, (, ), ,, newValues, ,, minutes, ), ;, checkAndUpdate, (, DurationFieldType, ., seconds, (]
[,, newValues, ,, hours, ), ;, checkAndUpdate, (, DurationFieldType, ., minutes, (, ), ,, newValues, ,, minutes, ), ;, checkAndUpdate]
[., hours, (, ), ,, newValues, ,, hours, ), ;, checkAndUpdate, (, DurationFieldType, ., minutes, (, ), ,, newValues, ,]
[,, hours, ), ;, checkAndUpdate, (, DurationFieldType, ., minutes, (, ), ,, newValues, ,, minutes, ), ;, checkAndUpdate, (, DurationFieldType]
[), ;, checkAndUpdate, (, DurationFieldType, ., minutes, (, ), ,, newValues, ,, minutes, ), ;, checkAndUpdate, (, DurationFieldType, ., seconds]
[;, checkAndUpdate, (, DurationFieldType, ., seconds, (, ), ,, newValues, ,, seconds, ), ;, checkAndUpdate, (, DurationFieldType, ., millis, (]
[,, newValues, ,, minutes, ), ;, checkAndUpdate, (, DurationFieldType, ., seconds, (, ), ,, newValues, ,, seconds, ), ;, checkAndUpdate]
[., minutes, (, ), ,, newValues, ,, minutes, ), ;, checkAndUpdate, (, DurationFieldType, ., seconds, (, ), ,, newValues, ,]
[,, minutes, ), ;, checkAndUpdate, (, DurationFieldType, ., seconds, (, ), ,, newValues, ,, seconds, ), ;, checkAndUpdate, (, DurationFieldType]
[), ;, checkAndUpdate, (, DurationFieldType, ., seconds, (, ), ,, newValues, ,, seconds, ), ;, checkAndUpdate, (, DurationFieldType, ., millis]
[;, checkAndUpdate, (, DurationFieldType, ., millis, (, ), ,, newValues, ,, millis, ), ;, return, newValues, ;, }, protected, void]
[,, newValues, ,, seconds, ), ;, checkAndUpdate, (, DurationFieldType, ., millis, (, ), ,, newValues, ,, millis, ), ;, return]
[., seconds, (, ), ,, newValues, ,, seconds, ), ;, checkAndUpdate, (, DurationFieldType, ., millis, (, ), ,, newValues, ,]
[,, seconds, ), ;, checkAndUpdate, (, DurationFieldType, ., millis, (, ), ,, newValues, ,, millis, ), ;, return, newValues, ;]
[), ;, checkAndUpdate, (, DurationFieldType, ., millis, (, ), ,, newValues, ,, millis, ), ;, return, newValues, ;, }, protected]
[;, return, newValues, ;, }, protected, void, setField, (, DurationFieldType, field, ,, int, value, ), {, setFieldInto, (, iValues, ,]
[,, newValues, ,, millis, ), ;, return, newValues, ;, }, protected, void, setField, (, DurationFieldType, field, ,, int, value, )]
[., millis, (, ), ,, newValues, ,, millis, ), ;, return, newValues, ;, }, protected, void, setField, (, DurationFieldType, field]
[,, millis, ), ;, return, newValues, ;, }, protected, void, setField, (, DurationFieldType, field, ,, int, value, ), {, setFieldInto]
[), ;, return, newValues, ;, }, protected, void, setField, (, DurationFieldType, field, ,, int, value, ), {, setFieldInto, (, iValues]
[;, }, protected, void, setField, (, DurationFieldType, field, ,, int, value, ), {, setFieldInto, (, iValues, ,, field, ,, value]
[;, }, protected, void, setFieldInto, (, int, [, ], values, ,, DurationFieldType, field, ,, int, value, ), {, int, index]
[,, field, ,, value, ), ;, }, protected, void, setFieldInto, (, int, [, ], values, ,, DurationFieldType, field, ,, int]
[,, value, ), ;, }, protected, void, setFieldInto, (, int, [, ], values, ,, DurationFieldType, field, ,, int, value, )]
[), ;, }, protected, void, setFieldInto, (, int, [, ], values, ,, DurationFieldType, field, ,, int, value, ), {, int]
[;, if, (, index, ==, -, 1, ), {, if, (, value, !=, 0, ||, field, ==, null, ), {]
[), ;, if, (, index, ==, -, 1, ), {, if, (, value, !=, 0, ||, field, ==, null, )]
[), {, if, (, value, !=, 0, ||, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field]
[==, -, 1, ), {, if, (, value, !=, 0, ||, field, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, value, !=, 0, ||, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field]
[), {, if, (, value, !=, 0, ||, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field]
[), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }, }, else, {, values, [, index]
[||, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }, }, else]
[!=, 0, ||, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }]
[||, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }, }, else]
[), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }, }, else, {, values, [, index]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }, }, else, {, values]
[), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }, }, else, {, values, [, index]
[;, }, }, else, {, values, [, index, ], =, value, ;, }, }, protected, void, addField, (, DurationFieldType, field]
[), ;, }, }, else, {, values, [, index, ], =, value, ;, }, }, protected, void, addField, (, DurationFieldType]
[+, "'", ), ;, }, }, else, {, values, [, index, ], =, value, ;, }, }, protected, void, addField]
[+, field, +, "'", ), ;, }, }, else, {, values, [, index, ], =, value, ;, }, }, protected]
[+, "'", ), ;, }, }, else, {, values, [, index, ], =, value, ;, }, }, protected, void, addField]
[), ;, }, }, else, {, values, [, index, ], =, value, ;, }, }, protected, void, addField, (, DurationFieldType]
[=, value, ;, }, }, protected, void, addField, (, DurationFieldType, field, ,, int, value, ), {, addFieldInto, (, iValues, ,]
[[, index, ], =, value, ;, }, }, protected, void, addField, (, DurationFieldType, field, ,, int, value, ), {, addFieldInto]
[], =, value, ;, }, }, protected, void, addField, (, DurationFieldType, field, ,, int, value, ), {, addFieldInto, (, iValues]
[;, }, }, protected, void, addField, (, DurationFieldType, field, ,, int, value, ), {, addFieldInto, (, iValues, ,, field, ,]
[;, }, protected, void, addFieldInto, (, int, [, ], values, ,, DurationFieldType, field, ,, int, value, ), {, int, index]
[,, field, ,, value, ), ;, }, protected, void, addFieldInto, (, int, [, ], values, ,, DurationFieldType, field, ,, int]
[,, value, ), ;, }, protected, void, addFieldInto, (, int, [, ], values, ,, DurationFieldType, field, ,, int, value, )]
[), ;, }, protected, void, addFieldInto, (, int, [, ], values, ,, DurationFieldType, field, ,, int, value, ), {, int]
[;, if, (, index, ==, -, 1, ), {, if, (, value, !=, 0, ||, field, ==, null, ), {]
[), ;, if, (, index, ==, -, 1, ), {, if, (, value, !=, 0, ||, field, ==, null, )]
[), {, if, (, value, !=, 0, ||, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field]
[==, -, 1, ), {, if, (, value, !=, 0, ||, field, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, value, !=, 0, ||, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field]
[), {, if, (, value, !=, 0, ||, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field]
[), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }, }, else, {, values, [, index]
[||, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }, }, else]
[!=, 0, ||, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }]
[||, field, ==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }, }, else]
[), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }, }, else, {, values, [, index]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }, }, else, {, values]
[), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, field, +, "'", ), ;, }, }, else, {, values, [, index]
[;, }, }, else, {, values, [, index, ], =, FieldUtils, ., safeAdd, (, values, [, index, ], ,, value]
[), ;, }, }, else, {, values, [, index, ], =, FieldUtils, ., safeAdd, (, values, [, index, ], ,]
[+, "'", ), ;, }, }, else, {, values, [, index, ], =, FieldUtils, ., safeAdd, (, values, [, index]
[+, field, +, "'", ), ;, }, }, else, {, values, [, index, ], =, FieldUtils, ., safeAdd, (, values]
[+, "'", ), ;, }, }, else, {, values, [, index, ], =, FieldUtils, ., safeAdd, (, values, [, index]
[), ;, }, }, else, {, values, [, index, ], =, FieldUtils, ., safeAdd, (, values, [, index, ], ,]
[=, FieldUtils, ., safeAdd, (, values, [, index, ], ,, value, ), ;, }, }, protected, void, mergePeriod, (, ReadablePeriod]
[[, index, ], =, FieldUtils, ., safeAdd, (, values, [, index, ], ,, value, ), ;, }, }, protected, void]
[], =, FieldUtils, ., safeAdd, (, values, [, index, ], ,, value, ), ;, }, }, protected, void, mergePeriod, (]
[;, }, }, protected, void, mergePeriod, (, ReadablePeriod, period, ), {, if, (, period, !=, null, ), {, setValues, (]
[., safeAdd, (, values, [, index, ], ,, value, ), ;, }, }, protected, void, mergePeriod, (, ReadablePeriod, period, )]
[,, value, ), ;, }, }, protected, void, mergePeriod, (, ReadablePeriod, period, ), {, if, (, period, !=, null, )]
[[, index, ], ,, value, ), ;, }, }, protected, void, mergePeriod, (, ReadablePeriod, period, ), {, if, (, period]
[], ,, value, ), ;, }, }, protected, void, mergePeriod, (, ReadablePeriod, period, ), {, if, (, period, !=, null]
[), ;, }, }, protected, void, mergePeriod, (, ReadablePeriod, period, ), {, if, (, period, !=, null, ), {, setValues]
[), {, setValues, (, mergePeriodInto, (, getValues, (, ), ,, period, ), ), ;, }, }, protected, int, [, ]]
[!=, null, ), {, setValues, (, mergePeriodInto, (, getValues, (, ), ,, period, ), ), ;, }, }, protected, int]
[), {, setValues, (, mergePeriodInto, (, getValues, (, ), ,, period, ), ), ;, }, }, protected, int, [, ]]
[;, }, }, protected, int, [, ], mergePeriodInto, (, int, [, ], values, ,, ReadablePeriod, period, ), {, for, (]
[), ;, }, }, protected, int, [, ], mergePeriodInto, (, int, [, ], values, ,, ReadablePeriod, period, ), {, for]
[,, period, ), ), ;, }, }, protected, int, [, ], mergePeriodInto, (, int, [, ], values, ,, ReadablePeriod, period]
[), ), ;, }, }, protected, int, [, ], mergePeriodInto, (, int, [, ], values, ,, ReadablePeriod, period, ), {]
[,, isize, =, period, ., size, (, ), ;, i, <, isize, ;, i, ++, ), {, DurationFieldType, type, =]
[;, i, <, isize, ;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int]
[., size, (, ), ;, i, <, isize, ;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (]
[;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =, period, .]
[<, isize, ;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =]
[;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =, period, .]
[), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =, period, ., getValue, (, i]
[++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =, period, ., getValue, (]
[;, int, value, =, period, ., getValue, (, i, ), ;, checkAndUpdate, (, type, ,, values, ,, value, ), ;]
[., getFieldType, (, i, ), ;, int, value, =, period, ., getValue, (, i, ), ;, checkAndUpdate, (, type, ,]
[), ;, int, value, =, period, ., getValue, (, i, ), ;, checkAndUpdate, (, type, ,, values, ,, value, )]
[;, checkAndUpdate, (, type, ,, values, ,, value, ), ;, }, return, values, ;, }, protected, void, addPeriod, (, ReadablePeriod]
[., getValue, (, i, ), ;, checkAndUpdate, (, type, ,, values, ,, value, ), ;, }, return, values, ;, }]
[), ;, checkAndUpdate, (, type, ,, values, ,, value, ), ;, }, return, values, ;, }, protected, void, addPeriod, (]
[;, }, return, values, ;, }, protected, void, addPeriod, (, ReadablePeriod, period, ), {, if, (, period, !=, null, )]
[,, values, ,, value, ), ;, }, return, values, ;, }, protected, void, addPeriod, (, ReadablePeriod, period, ), {, if]
[,, value, ), ;, }, return, values, ;, }, protected, void, addPeriod, (, ReadablePeriod, period, ), {, if, (, period]
[), ;, }, return, values, ;, }, protected, void, addPeriod, (, ReadablePeriod, period, ), {, if, (, period, !=, null]
[;, }, protected, void, addPeriod, (, ReadablePeriod, period, ), {, if, (, period, !=, null, ), {, setValues, (, addPeriodInto]
[), {, setValues, (, addPeriodInto, (, getValues, (, ), ,, period, ), ), ;, }, }, protected, int, [, ]]
[!=, null, ), {, setValues, (, addPeriodInto, (, getValues, (, ), ,, period, ), ), ;, }, }, protected, int]
[), {, setValues, (, addPeriodInto, (, getValues, (, ), ,, period, ), ), ;, }, }, protected, int, [, ]]
[;, }, }, protected, int, [, ], addPeriodInto, (, int, [, ], values, ,, ReadablePeriod, period, ), {, for, (]
[), ;, }, }, protected, int, [, ], addPeriodInto, (, int, [, ], values, ,, ReadablePeriod, period, ), {, for]
[,, period, ), ), ;, }, }, protected, int, [, ], addPeriodInto, (, int, [, ], values, ,, ReadablePeriod, period]
[), ), ;, }, }, protected, int, [, ], addPeriodInto, (, int, [, ], values, ,, ReadablePeriod, period, ), {]
[,, isize, =, period, ., size, (, ), ;, i, <, isize, ;, i, ++, ), {, DurationFieldType, type, =]
[;, i, <, isize, ;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int]
[., size, (, ), ;, i, <, isize, ;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (]
[;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =, period, .]
[<, isize, ;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =]
[;, i, ++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =, period, .]
[), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =, period, ., getValue, (, i]
[++, ), {, DurationFieldType, type, =, period, ., getFieldType, (, i, ), ;, int, value, =, period, ., getValue, (]
[;, int, value, =, period, ., getValue, (, i, ), ;, if, (, value, !=, 0, ), {, int, index]
[., getFieldType, (, i, ), ;, int, value, =, period, ., getValue, (, i, ), ;, if, (, value, !=]
[), ;, int, value, =, period, ., getValue, (, i, ), ;, if, (, value, !=, 0, ), {, int]
[;, if, (, value, !=, 0, ), {, int, index, =, indexOf, (, type, ), ;, if, (, index, ==]
[., getValue, (, i, ), ;, if, (, value, !=, 0, ), {, int, index, =, indexOf, (, type, )]
[), ;, if, (, value, !=, 0, ), {, int, index, =, indexOf, (, type, ), ;, if, (, index]
[), {, int, index, =, indexOf, (, type, ), ;, if, (, index, ==, -, 1, ), {, throw, new]
[!=, 0, ), {, int, index, =, indexOf, (, type, ), ;, if, (, index, ==, -, 1, ), {]
[), {, int, index, =, indexOf, (, type, ), ;, if, (, index, ==, -, 1, ), {, throw, new]
[;, if, (, index, ==, -, 1, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (, )]
[), ;, if, (, index, ==, -, 1, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (]
[), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (, ), +, "'", ), ;, }, else, {]
[==, -, 1, ), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (, ), +, "'", ), ;]
[), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (, ), +, "'", ), ;, }, else, {]
[), {, throw, new, IllegalArgumentException, (, "Period does not support field '", +, type, ., getName, (, ), +, "'", ), ;, }, else, {]
[;, }, else, {, values, [, index, ], =, FieldUtils, ., safeAdd, (, getValue, (, index, ), ,, value, )]
[), ;, }, else, {, values, [, index, ], =, FieldUtils, ., safeAdd, (, getValue, (, index, ), ,, value]
[+, "'", ), ;, }, else, {, values, [, index, ], =, FieldUtils, ., safeAdd, (, getValue, (, index, )]
[+, type, ., getName, (, ), +, "'", ), ;, }, else, {, values, [, index, ], =, FieldUtils, .]
[+, "'", ), ;, }, else, {, values, [, index, ], =, FieldUtils, ., safeAdd, (, getValue, (, index, )]
[., getName, (, ), +, "'", ), ;, }, else, {, values, [, index, ], =, FieldUtils, ., safeAdd, (]
[), ;, }, else, {, values, [, index, ], =, FieldUtils, ., safeAdd, (, getValue, (, index, ), ,, value]
[=, FieldUtils, ., safeAdd, (, getValue, (, index, ), ,, value, ), ;, }, }, }, return, values, ;, }]
[[, index, ], =, FieldUtils, ., safeAdd, (, getValue, (, index, ), ,, value, ), ;, }, }, }, return]
[], =, FieldUtils, ., safeAdd, (, getValue, (, index, ), ,, value, ), ;, }, }, }, return, values, ;]
[;, }, }, }, return, values, ;, }, protected, void, setValue, (, int, index, ,, int, value, ), {, iValues]
[., safeAdd, (, getValue, (, index, ), ,, value, ), ;, }, }, }, return, values, ;, }, protected, void]
[,, value, ), ;, }, }, }, return, values, ;, }, protected, void, setValue, (, int, index, ,, int, value]
[), ,, value, ), ;, }, }, }, return, values, ;, }, protected, void, setValue, (, int, index, ,, int]
[), ;, }, }, }, return, values, ;, }, protected, void, setValue, (, int, index, ,, int, value, ), {]
[;, }, protected, void, setValue, (, int, index, ,, int, value, ), {, iValues, [, index, ], =, value, ;]
[=, value, ;, }, protected, void, setValues, (, int, [, ], values, ), {, System, ., arraycopy, (, values, ,]
[[, index, ], =, value, ;, }, protected, void, setValues, (, int, [, ], values, ), {, System, ., arraycopy]
[], =, value, ;, }, protected, void, setValues, (, int, [, ], values, ), {, System, ., arraycopy, (, values]
[;, }, protected, void, setValues, (, int, [, ], values, ), {, System, ., arraycopy, (, values, ,, 0, ,]
[;, }, }]
[., arraycopy, (, values, ,, 0, ,, iValues, ,, 0, ,, iValues, ., length, ), ;, }, }]
[,, 0, ,, iValues, ,, 0, ,, iValues, ., length, ), ;, }, }]
[,, iValues, ,, 0, ,, iValues, ., length, ), ;, }, }]
[,, 0, ,, iValues, ., length, ), ;, }, }]
[,, iValues, ., length, ), ;, }, }]
[), ;, }, }]
[., length, ), ;, }, }]
