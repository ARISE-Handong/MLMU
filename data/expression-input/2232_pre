[math3, ., optimization, ., PointValuePair, ;, @, Deprecated, public, class, MultiDirectionalSimplex, extends, AbstractSimplex, {, private, static, final, double, DEFAULT_KHI, =]
[public, class, MultiDirectionalSimplex, extends, AbstractSimplex, {, private, static, final, double, DEFAULT_KHI, =, 2, ;, private, static, final, double, DEFAULT_GAMMA, =]
[private, final, double, khi, ;, private, final, double, gamma, ;, public, MultiDirectionalSimplex, (, final, int, n, ), {, this, (]
[double, khi, ;, private, final, double, gamma, ;, public, MultiDirectionalSimplex, (, final, int, n, ), {, this, (, n, ,]
[(, n, ,, 1d, ), ;, }, public, MultiDirectionalSimplex, (, final, int, n, ,, double, sideLength, ), {, this, (]
[,, 1d, ), ;, }, public, MultiDirectionalSimplex, (, final, int, n, ,, double, sideLength, ), {, this, (, n, ,]
[), ;, }, public, MultiDirectionalSimplex, (, final, int, n, ,, double, sideLength, ), {, this, (, n, ,, sideLength, ,]
[}, public, MultiDirectionalSimplex, (, final, int, n, ,, double, sideLength, ), {, this, (, n, ,, sideLength, ,, DEFAULT_KHI, ,]
[;, }, public, MultiDirectionalSimplex, (, final, int, n, ,, final, double, khi, ,, final, double, gamma, ), {, this, (]
[public, MultiDirectionalSimplex, (, final, int, n, ,, final, double, khi, ,, final, double, gamma, ), {, this, (, n, ,]
[(, final, int, n, ,, final, double, khi, ,, final, double, gamma, ), {, this, (, n, ,, 1d, ,]
[int, n, ,, final, double, khi, ,, final, double, gamma, ), {, this, (, n, ,, 1d, ,, khi, ,]
[MultiDirectionalSimplex, (, final, int, n, ,, double, sideLength, ,, final, double, khi, ,, final, double, gamma, ), {, super, (]
[final, int, n, ,, double, sideLength, ,, final, double, khi, ,, final, double, gamma, ), {, super, (, n, ,]
[,, double, sideLength, ,, final, double, khi, ,, final, double, gamma, ), {, super, (, n, ,, sideLength, ), ;]
[,, double, sideLength, ,, final, double, khi, ,, final, double, gamma, ), {, super, (, n, ,, sideLength, ), ;]
[final, double, khi, ,, final, double, gamma, ), {, super, (, n, ,, sideLength, ), ;, this, ., khi, =]
[khi, ,, final, double, gamma, ), {, super, (, n, ,, sideLength, ), ;, this, ., khi, =, khi, ;]
[khi, ,, final, double, gamma, ), {, super, (, n, ,, sideLength, ), ;, this, ., khi, =, khi, ;]
[gamma, ), {, super, (, n, ,, sideLength, ), ;, this, ., khi, =, khi, ;, this, ., gamma, =]
[;, this, ., gamma, =, gamma, ;, }, public, MultiDirectionalSimplex, (, final, double, [, ], steps, ), {, this, (]
[., gamma, =, gamma, ;, }, public, MultiDirectionalSimplex, (, final, double, [, ], steps, ), {, this, (, steps, ,]
[=, gamma, ;, }, public, MultiDirectionalSimplex, (, final, double, [, ], steps, ), {, this, (, steps, ,, DEFAULT_KHI, ,]
[public, MultiDirectionalSimplex, (, final, double, [, ], steps, ,, final, double, khi, ,, final, double, gamma, ), {, super, (]
[final, double, [, ], steps, ,, final, double, khi, ,, final, double, gamma, ), {, super, (, steps, ), ;]
[final, double, [, ], steps, ,, final, double, khi, ,, final, double, gamma, ), {, super, (, steps, ), ;]
[steps, ,, final, double, khi, ,, final, double, gamma, ), {, super, (, steps, ), ;, this, ., khi, =]
[final, double, khi, ,, final, double, gamma, ), {, super, (, steps, ), ;, this, ., khi, =, khi, ;]
[final, double, khi, ,, final, double, gamma, ), {, super, (, steps, ), ;, this, ., khi, =, khi, ;]
[final, double, gamma, ), {, super, (, steps, ), ;, this, ., khi, =, khi, ;, this, ., gamma, =]
[., gamma, =, gamma, ;, }, public, MultiDirectionalSimplex, (, final, double, [, ], [, ], referenceSimplex, ), {, this, (]
[=, gamma, ;, }, public, MultiDirectionalSimplex, (, final, double, [, ], [, ], referenceSimplex, ), {, this, (, referenceSimplex, ,]
[;, }, public, MultiDirectionalSimplex, (, final, double, [, ], [, ], referenceSimplex, ), {, this, (, referenceSimplex, ,, DEFAULT_KHI, ,]
[(, final, double, [, ], [, ], referenceSimplex, ,, final, double, khi, ,, final, double, gamma, ), {, super, (]
[[, ], [, ], referenceSimplex, ,, final, double, khi, ,, final, double, gamma, ), {, super, (, referenceSimplex, ), ;]
[[, ], [, ], referenceSimplex, ,, final, double, khi, ,, final, double, gamma, ), {, super, (, referenceSimplex, ), ;]
[referenceSimplex, ,, final, double, khi, ,, final, double, gamma, ), {, super, (, referenceSimplex, ), ;, this, ., khi, =]
[final, double, khi, ,, final, double, gamma, ), {, super, (, referenceSimplex, ), ;, this, ., khi, =, khi, ;]
[final, double, khi, ,, final, double, gamma, ), {, super, (, referenceSimplex, ), ;, this, ., khi, =, khi, ;]
[final, double, gamma, ), {, super, (, referenceSimplex, ), ;, this, ., khi, =, khi, ;, this, ., gamma, =]
[iterate, (, final, MultivariateFunction, evaluationFunction, ,, final, Comparator, <, PointValuePair, >, comparator, ), {, final, PointValuePair, [, ], original, =]
[<, PointValuePair, >, comparator, ), {, final, PointValuePair, [, ], original, =, getPoints, (, ), ;, final, PointValuePair, best, =]
[<, PointValuePair, >, comparator, ), {, final, PointValuePair, [, ], original, =, getPoints, (, ), ;, final, PointValuePair, best, =]
[>, comparator, ), {, final, PointValuePair, [, ], original, =, getPoints, (, ), ;, final, PointValuePair, best, =, original, []
[], original, =, getPoints, (, ), ;, final, PointValuePair, best, =, original, [, 0, ], ;, final, PointValuePair, reflected, =]
[=, getPoints, (, ), ;, final, PointValuePair, best, =, original, [, 0, ], ;, final, PointValuePair, reflected, =, evaluateNewSimplex, (]
[(, ), ;, final, PointValuePair, best, =, original, [, 0, ], ;, final, PointValuePair, reflected, =, evaluateNewSimplex, (, evaluationFunction, ,]
[;, final, PointValuePair, best, =, original, [, 0, ], ;, final, PointValuePair, reflected, =, evaluateNewSimplex, (, evaluationFunction, ,, original, ,]
[PointValuePair, best, =, original, [, 0, ], ;, final, PointValuePair, reflected, =, evaluateNewSimplex, (, evaluationFunction, ,, original, ,, 1, ,]
[0, ], ;, final, PointValuePair, reflected, =, evaluateNewSimplex, (, evaluationFunction, ,, original, ,, 1, ,, comparator, ), ;, if, (]
[0, ], ;, final, PointValuePair, reflected, =, evaluateNewSimplex, (, evaluationFunction, ,, original, ,, 1, ,, comparator, ), ;, if, (]
[0, ], ;, final, PointValuePair, reflected, =, evaluateNewSimplex, (, evaluationFunction, ,, original, ,, 1, ,, comparator, ), ;, if, (]
[PointValuePair, reflected, =, evaluateNewSimplex, (, evaluationFunction, ,, original, ,, 1, ,, comparator, ), ;, if, (, comparator, ., compare, (]
[=, evaluateNewSimplex, (, evaluationFunction, ,, original, ,, 1, ,, comparator, ), ;, if, (, comparator, ., compare, (, reflected, ,]
[evaluationFunction, ,, original, ,, 1, ,, comparator, ), ;, if, (, comparator, ., compare, (, reflected, ,, best, ), <]
[if, (, comparator, ., compare, (, reflected, ,, best, ), <, 0, ), {, final, PointValuePair, [, ], reflectedSimplex, =]
[best, ), <, 0, ), {, final, PointValuePair, [, ], reflectedSimplex, =, getPoints, (, ), ;, final, PointValuePair, expanded, =]
[<, 0, ), {, final, PointValuePair, [, ], reflectedSimplex, =, getPoints, (, ), ;, final, PointValuePair, expanded, =, evaluateNewSimplex, (]
[), {, final, PointValuePair, [, ], reflectedSimplex, =, getPoints, (, ), ;, final, PointValuePair, expanded, =, evaluateNewSimplex, (, evaluationFunction, ,]
[final, PointValuePair, [, ], reflectedSimplex, =, getPoints, (, ), ;, final, PointValuePair, expanded, =, evaluateNewSimplex, (, evaluationFunction, ,, original, ,]
[[, ], reflectedSimplex, =, getPoints, (, ), ;, final, PointValuePair, expanded, =, evaluateNewSimplex, (, evaluationFunction, ,, original, ,, khi, ,]
[(, ), ;, final, PointValuePair, expanded, =, evaluateNewSimplex, (, evaluationFunction, ,, original, ,, khi, ,, comparator, ), ;, if, (]
[(, ), ;, final, PointValuePair, expanded, =, evaluateNewSimplex, (, evaluationFunction, ,, original, ,, khi, ,, comparator, ), ;, if, (]
[(, ), ;, final, PointValuePair, expanded, =, evaluateNewSimplex, (, evaluationFunction, ,, original, ,, khi, ,, comparator, ), ;, if, (]
[PointValuePair, expanded, =, evaluateNewSimplex, (, evaluationFunction, ,, original, ,, khi, ,, comparator, ), ;, if, (, comparator, ., compare, (]
[=, evaluateNewSimplex, (, evaluationFunction, ,, original, ,, khi, ,, comparator, ), ;, if, (, comparator, ., compare, (, reflected, ,]
[evaluationFunction, ,, original, ,, khi, ,, comparator, ), ;, if, (, comparator, ., compare, (, reflected, ,, expanded, ), <=]
[,, khi, ,, comparator, ), ;, if, (, comparator, ., compare, (, reflected, ,, expanded, ), <=, 0, ), {]
[,, comparator, ), ;, if, (, comparator, ., compare, (, reflected, ,, expanded, ), <=, 0, ), {, setPoints, (]
[., compare, (, reflected, ,, expanded, ), <=, 0, ), {, setPoints, (, reflectedSimplex, ), ;, }, return, ;, }]
[(, reflected, ,, expanded, ), <=, 0, ), {, setPoints, (, reflectedSimplex, ), ;, }, return, ;, }, evaluateNewSimplex, (]
[,, expanded, ), <=, 0, ), {, setPoints, (, reflectedSimplex, ), ;, }, return, ;, }, evaluateNewSimplex, (, evaluationFunction, ,]
[), <=, 0, ), {, setPoints, (, reflectedSimplex, ), ;, }, return, ;, }, evaluateNewSimplex, (, evaluationFunction, ,, original, ,]
[0, ), {, setPoints, (, reflectedSimplex, ), ;, }, return, ;, }, evaluateNewSimplex, (, evaluationFunction, ,, original, ,, gamma, ,]
[original, ,, final, double, coeff, ,, final, Comparator, <, PointValuePair, >, comparator, ), {, final, double, [, ], xSmallest, =]
[original, ,, final, double, coeff, ,, final, Comparator, <, PointValuePair, >, comparator, ), {, final, double, [, ], xSmallest, =]
[original, ,, final, double, coeff, ,, final, Comparator, <, PointValuePair, >, comparator, ), {, final, double, [, ], xSmallest, =]
[final, double, coeff, ,, final, Comparator, <, PointValuePair, >, comparator, ), {, final, double, [, ], xSmallest, =, original, []
[PointValuePair, >, comparator, ), {, final, double, [, ], xSmallest, =, original, [, 0, ], ., getPointRef, (, ), ;]
[comparator, ), {, final, double, [, ], xSmallest, =, original, [, 0, ], ., getPointRef, (, ), ;, setPoint, (]
[{, final, double, [, ], xSmallest, =, original, [, 0, ], ., getPointRef, (, ), ;, setPoint, (, 0, ,]
[{, final, double, [, ], xSmallest, =, original, [, 0, ], ., getPointRef, (, ), ;, setPoint, (, 0, ,]
[double, [, ], xSmallest, =, original, [, 0, ], ., getPointRef, (, ), ;, setPoint, (, 0, ,, original, []
[], ., getPointRef, (, ), ;, setPoint, (, 0, ,, original, [, 0, ], ), ;, final, int, dim, =]
[,, original, [, 0, ], ), ;, final, int, dim, =, getDimension, (, ), ;, for, (, int, i, =]
[[, 0, ], ), ;, final, int, dim, =, getDimension, (, ), ;, for, (, int, i, =, 1, ;]
[[, 0, ], ), ;, final, int, dim, =, getDimension, (, ), ;, for, (, int, i, =, 1, ;]
[], ), ;, final, int, dim, =, getDimension, (, ), ;, for, (, int, i, =, 1, ;, i, <]
[int, dim, =, getDimension, (, ), ;, for, (, int, i, =, 1, ;, i, <, getSize, (, ), ;]
[int, dim, =, getDimension, (, ), ;, for, (, int, i, =, 1, ;, i, <, getSize, (, ), ;]
[i, =, 1, ;, i, <, getSize, (, ), ;, i, ++, ), {, final, double, [, ], xOriginal, =]
[i, =, 1, ;, i, <, getSize, (, ), ;, i, ++, ), {, final, double, [, ], xOriginal, =]
[i, =, 1, ;, i, <, getSize, (, ), ;, i, ++, ), {, final, double, [, ], xOriginal, =]
[1, ;, i, <, getSize, (, ), ;, i, ++, ), {, final, double, [, ], xOriginal, =, original, []
[double, [, ], xOriginal, =, original, [, i, ], ., getPointRef, (, ), ;, final, double, [, ], xTransformed, =]
[xOriginal, =, original, [, i, ], ., getPointRef, (, ), ;, final, double, [, ], xTransformed, =, new, double, []
[(, ), ;, final, double, [, ], xTransformed, =, new, double, [, dim, ], ;, for, (, int, j, =]
[;, final, double, [, ], xTransformed, =, new, double, [, dim, ], ;, for, (, int, j, =, 0, ;]
[;, final, double, [, ], xTransformed, =, new, double, [, dim, ], ;, for, (, int, j, =, 0, ;]
[double, [, ], xTransformed, =, new, double, [, dim, ], ;, for, (, int, j, =, 0, ;, j, <]
[], xTransformed, =, new, double, [, dim, ], ;, for, (, int, j, =, 0, ;, j, <, dim, ;]
[], xTransformed, =, new, double, [, dim, ], ;, for, (, int, j, =, 0, ;, j, <, dim, ;]
[double, [, dim, ], ;, for, (, int, j, =, 0, ;, j, <, dim, ;, j, ++, ), {]
[double, [, dim, ], ;, for, (, int, j, =, 0, ;, j, <, dim, ;, j, ++, ), {]
[dim, ], ;, for, (, int, j, =, 0, ;, j, <, dim, ;, j, ++, ), {, xTransformed, []
[for, (, int, j, =, 0, ;, j, <, dim, ;, j, ++, ), {, xTransformed, [, j, ], =]
[for, (, int, j, =, 0, ;, j, <, dim, ;, j, ++, ), {, xTransformed, [, j, ], =]
[for, (, int, j, =, 0, ;, j, <, dim, ;, j, ++, ), {, xTransformed, [, j, ], =]
[int, j, =, 0, ;, j, <, dim, ;, j, ++, ), {, xTransformed, [, j, ], =, xSmallest, []
[0, ;, j, <, dim, ;, j, ++, ), {, xTransformed, [, j, ], =, xSmallest, [, j, ], +]
[0, ;, j, <, dim, ;, j, ++, ), {, xTransformed, [, j, ], =, xSmallest, [, j, ], +]
[j, <, dim, ;, j, ++, ), {, xTransformed, [, j, ], =, xSmallest, [, j, ], +, coeff, *]
[<, dim, ;, j, ++, ), {, xTransformed, [, j, ], =, xSmallest, [, j, ], +, coeff, *, (]
[<, dim, ;, j, ++, ), {, xTransformed, [, j, ], =, xSmallest, [, j, ], +, coeff, *, (]
[<, dim, ;, j, ++, ), {, xTransformed, [, j, ], =, xSmallest, [, j, ], +, coeff, *, (]
[;, j, ++, ), {, xTransformed, [, j, ], =, xSmallest, [, j, ], +, coeff, *, (, xSmallest, []
[), {, xTransformed, [, j, ], =, xSmallest, [, j, ], +, coeff, *, (, xSmallest, [, j, ], -]
[), {, xTransformed, [, j, ], =, xSmallest, [, j, ], +, coeff, *, (, xSmallest, [, j, ], -]
[xTransformed, [, j, ], =, xSmallest, [, j, ], +, coeff, *, (, xSmallest, [, j, ], -, xOriginal, []
[xSmallest, [, j, ], +, coeff, *, (, xSmallest, [, j, ], -, xOriginal, [, j, ], ), ;, }]
[j, ], +, coeff, *, (, xSmallest, [, j, ], -, xOriginal, [, j, ], ), ;, }, setPoint, (]
[+, coeff, *, (, xSmallest, [, j, ], -, xOriginal, [, j, ], ), ;, }, setPoint, (, i, ,]
[(, xSmallest, [, j, ], -, xOriginal, [, j, ], ), ;, }, setPoint, (, i, ,, new, PointValuePair, (]
[[, j, ], -, xOriginal, [, j, ], ), ;, }, setPoint, (, i, ,, new, PointValuePair, (, xTransformed, ,]
[[, j, ], -, xOriginal, [, j, ], ), ;, }, setPoint, (, i, ,, new, PointValuePair, (, xTransformed, ,]
[xOriginal, [, j, ], ), ;, }, setPoint, (, i, ,, new, PointValuePair, (, xTransformed, ,, Double, ., NaN, ,]
[;, }, setPoint, (, i, ,, new, PointValuePair, (, xTransformed, ,, Double, ., NaN, ,, false, ), ), ;, }]
[setPoint, (, i, ,, new, PointValuePair, (, xTransformed, ,, Double, ., NaN, ,, false, ), ), ;, }, evaluate, (]
[i, ,, new, PointValuePair, (, xTransformed, ,, Double, ., NaN, ,, false, ), ), ;, }, evaluate, (, evaluationFunction, ,]
[(, xTransformed, ,, Double, ., NaN, ,, false, ), ), ;, }, evaluate, (, evaluationFunction, ,, comparator, ), ;, return]
[,, Double, ., NaN, ,, false, ), ), ;, }, evaluate, (, evaluationFunction, ,, comparator, ), ;, return, getPoint, (]
