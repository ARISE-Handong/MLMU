[;, public, static, final, Direction, DOWNSIDE_VARIANCE, =, Direction, ., DOWNSIDE, ;, private, static, final, long, serialVersionUID, =, -, 2653430366886024994L, ;]
[., UPSIDE, ;, public, static, final, Direction, DOWNSIDE_VARIANCE, =, Direction, ., DOWNSIDE, ;, private, static, final, long, serialVersionUID, =, -]
[;, private, static, final, long, serialVersionUID, =, -, 2653430366886024994L, ;, private, boolean, biasCorrected, =, true, ;, private, Direction, varianceDirection, =]
[., DOWNSIDE, ;, private, static, final, long, serialVersionUID, =, -, 2653430366886024994L, ;, private, boolean, biasCorrected, =, true, ;, private, Direction]
[;, private, boolean, biasCorrected, =, true, ;, private, Direction, varianceDirection, =, Direction, ., DOWNSIDE, ;, public, SemiVariance, (, ), {]
[;, private, boolean, biasCorrected, =, true, ;, private, Direction, varianceDirection, =, Direction, ., DOWNSIDE, ;, public, SemiVariance, (, ), {]
[;, private, Direction, varianceDirection, =, Direction, ., DOWNSIDE, ;, public, SemiVariance, (, ), {, }, public, SemiVariance, (, final, boolean]
[;, public, SemiVariance, (, ), {, }, public, SemiVariance, (, final, boolean, biasCorrected, ), {, this, ., biasCorrected, =, biasCorrected]
[., DOWNSIDE, ;, public, SemiVariance, (, ), {, }, public, SemiVariance, (, final, boolean, biasCorrected, ), {, this, ., biasCorrected]
[=, biasCorrected, ;, }, public, SemiVariance, (, final, Direction, direction, ), {, this, ., varianceDirection, =, direction, ;, }, public]
[., biasCorrected, =, biasCorrected, ;, }, public, SemiVariance, (, final, Direction, direction, ), {, this, ., varianceDirection, =, direction, ;]
[;, }, public, SemiVariance, (, final, Direction, direction, ), {, this, ., varianceDirection, =, direction, ;, }, public, SemiVariance, (]
[=, direction, ;, }, public, SemiVariance, (, final, boolean, corrected, ,, final, Direction, direction, ), {, this, ., biasCorrected, =]
[., varianceDirection, =, direction, ;, }, public, SemiVariance, (, final, boolean, corrected, ,, final, Direction, direction, ), {, this, .]
[;, }, public, SemiVariance, (, final, boolean, corrected, ,, final, Direction, direction, ), {, this, ., biasCorrected, =, corrected, ;]
[=, corrected, ;, this, ., varianceDirection, =, direction, ;, }, public, SemiVariance, (, final, SemiVariance, original, ), throws, NullArgumentException, {]
[., biasCorrected, =, corrected, ;, this, ., varianceDirection, =, direction, ;, }, public, SemiVariance, (, final, SemiVariance, original, ), throws]
[;, this, ., varianceDirection, =, direction, ;, }, public, SemiVariance, (, final, SemiVariance, original, ), throws, NullArgumentException, {, copy, (]
[=, direction, ;, }, public, SemiVariance, (, final, SemiVariance, original, ), throws, NullArgumentException, {, copy, (, original, ,, this, )]
[., varianceDirection, =, direction, ;, }, public, SemiVariance, (, final, SemiVariance, original, ), throws, NullArgumentException, {, copy, (, original, ,]
[;, }, public, SemiVariance, (, final, SemiVariance, original, ), throws, NullArgumentException, {, copy, (, original, ,, this, ), ;, }]
[;, }, @, Override, public, SemiVariance, copy, (, ), {, SemiVariance, result, =, new, SemiVariance, (, ), ;, copy, (]
[,, this, ), ;, }, @, Override, public, SemiVariance, copy, (, ), {, SemiVariance, result, =, new, SemiVariance, (, )]
[), ;, }, @, Override, public, SemiVariance, copy, (, ), {, SemiVariance, result, =, new, SemiVariance, (, ), ;, copy]
[;, copy, (, this, ,, result, ), ;, return, result, ;, }, public, static, void, copy, (, final, SemiVariance, source]
[;, return, result, ;, }, public, static, void, copy, (, final, SemiVariance, source, ,, SemiVariance, dest, ), throws, NullArgumentException, {]
[,, result, ), ;, return, result, ;, }, public, static, void, copy, (, final, SemiVariance, source, ,, SemiVariance, dest, )]
[), ;, return, result, ;, }, public, static, void, copy, (, final, SemiVariance, source, ,, SemiVariance, dest, ), throws, NullArgumentException]
[;, }, public, static, void, copy, (, final, SemiVariance, source, ,, SemiVariance, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull]
[;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest]
[., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;]
[;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., biasCorrected, =, source, ., biasCorrected, ;]
[., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., biasCorrected]
[), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., biasCorrected, =, source, ., biasCorrected]
[;, dest, ., biasCorrected, =, source, ., biasCorrected, ;, dest, ., varianceDirection, =, source, ., varianceDirection, ;, }, @, Override]
[., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., biasCorrected, =, source, ., biasCorrected, ;, dest, .]
[), ;, dest, ., biasCorrected, =, source, ., biasCorrected, ;, dest, ., varianceDirection, =, source, ., varianceDirection, ;, }, @]
[., getDataRef, (, ), ), ;, dest, ., biasCorrected, =, source, ., biasCorrected, ;, dest, ., varianceDirection, =, source, .]
[=, source, ., biasCorrected, ;, dest, ., varianceDirection, =, source, ., varianceDirection, ;, }, @, Override, public, double, evaluate, (]
[., biasCorrected, =, source, ., biasCorrected, ;, dest, ., varianceDirection, =, source, ., varianceDirection, ;, }, @, Override, public, double]
[;, dest, ., varianceDirection, =, source, ., varianceDirection, ;, }, @, Override, public, double, evaluate, (, final, double, [, ]]
[., biasCorrected, ;, dest, ., varianceDirection, =, source, ., varianceDirection, ;, }, @, Override, public, double, evaluate, (, final, double]
[=, source, ., varianceDirection, ;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final, int]
[., varianceDirection, =, source, ., varianceDirection, ;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,]
[;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final, int, start, ,, final, int]
[., varianceDirection, ;, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final, int, start, ,]
[;, return, evaluate, (, values, ,, m, ,, varianceDirection, ,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }]
[., evaluate, (, values, ,, start, ,, length, ), ;, return, evaluate, (, values, ,, m, ,, varianceDirection, ,, biasCorrected]
[), ., evaluate, (, values, ,, start, ,, length, ), ;, return, evaluate, (, values, ,, m, ,, varianceDirection, ,]
[,, start, ,, length, ), ;, return, evaluate, (, values, ,, m, ,, varianceDirection, ,, biasCorrected, ,, 0, ,, values]
[,, length, ), ;, return, evaluate, (, values, ,, m, ,, varianceDirection, ,, biasCorrected, ,, 0, ,, values, ., length]
[), ;, return, evaluate, (, values, ,, m, ,, varianceDirection, ,, biasCorrected, ,, 0, ,, values, ., length, ), ;]
[;, }, public, double, evaluate, (, final, double, [, ], values, ,, Direction, direction, ), throws, MathIllegalArgumentException, {, double, m]
[,, m, ,, varianceDirection, ,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final]
[,, varianceDirection, ,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, []
[,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values]
[,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, Direction]
[,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, Direction, direction, )]
[), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, Direction, direction, ), throws, MathIllegalArgumentException, {, double]
[., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, Direction, direction, ), throws, MathIllegalArgumentException]
[;, return, evaluate, (, values, ,, m, ,, direction, ,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }]
[., evaluate, (, values, ), ;, return, evaluate, (, values, ,, m, ,, direction, ,, biasCorrected, ,, 0, ,, values]
[), ., evaluate, (, values, ), ;, return, evaluate, (, values, ,, m, ,, direction, ,, biasCorrected, ,, 0, ,]
[), ;, return, evaluate, (, values, ,, m, ,, direction, ,, biasCorrected, ,, 0, ,, values, ., length, ), ;]
[;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, cutoff, ), throws, MathIllegalArgumentException, {, return]
[,, m, ,, direction, ,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final]
[,, direction, ,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, []
[,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values]
[,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final]
[,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, cutoff]
[), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, cutoff, ), throws, MathIllegalArgumentException, {]
[., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, cutoff, ), throws]
[;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, cutoff, ,, final, Direction, direction, )]
[,, cutoff, ,, varianceDirection, ,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final]
[,, varianceDirection, ,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, []
[,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values]
[,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final]
[,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, cutoff]
[), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, cutoff, ,, final, Direction, direction]
[., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, cutoff, ,, final]
[;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, cutoff, ,, final, Direction, direction, ,]
[,, cutoff, ,, direction, ,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final]
[,, direction, ,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, []
[,, biasCorrected, ,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values]
[,, 0, ,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final]
[,, values, ., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, cutoff]
[), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, cutoff, ,, final, Direction, direction]
[., length, ), ;, }, public, double, evaluate, (, final, double, [, ], values, ,, final, double, cutoff, ,, final]
[;, if, (, values, ., length, ==, 0, ), {, return, Double, ., NaN, ;, }, else, {, if, (]
[,, start, ,, length, ), ;, if, (, values, ., length, ==, 0, ), {, return, Double, ., NaN, ;]
[,, length, ), ;, if, (, values, ., length, ==, 0, ), {, return, Double, ., NaN, ;, }, else]
[), ;, if, (, values, ., length, ==, 0, ), {, return, Double, ., NaN, ;, }, else, {, if]
[), {, return, Double, ., NaN, ;, }, else, {, if, (, values, ., length, ==, 1, ), {, return]
[==, 0, ), {, return, Double, ., NaN, ;, }, else, {, if, (, values, ., length, ==, 1, )]
[., length, ==, 0, ), {, return, Double, ., NaN, ;, }, else, {, if, (, values, ., length, ==]
[), {, return, Double, ., NaN, ;, }, else, {, if, (, values, ., length, ==, 1, ), {, return]
[;, }, else, {, if, (, values, ., length, ==, 1, ), {, return, 0.0, ;, }, else, {, final]
[., NaN, ;, }, else, {, if, (, values, ., length, ==, 1, ), {, return, 0.0, ;, }, else]
[), {, return, 0.0, ;, }, else, {, final, boolean, booleanDirection, =, direction, ., getDirection, (, ), ;, double, dev]
[==, 1, ), {, return, 0.0, ;, }, else, {, final, boolean, booleanDirection, =, direction, ., getDirection, (, ), ;]
[., length, ==, 1, ), {, return, 0.0, ;, }, else, {, final, boolean, booleanDirection, =, direction, ., getDirection, (]
[), {, return, 0.0, ;, }, else, {, final, boolean, booleanDirection, =, direction, ., getDirection, (, ), ;, double, dev]
[;, }, else, {, final, boolean, booleanDirection, =, direction, ., getDirection, (, ), ;, double, dev, =, 0.0, ;, double]
[;, double, dev, =, 0.0, ;, double, sumsq, =, 0.0, ;, for, (, int, i, =, start, ;, i, <]
[., getDirection, (, ), ;, double, dev, =, 0.0, ;, double, sumsq, =, 0.0, ;, for, (, int, i, =]
[;, double, sumsq, =, 0.0, ;, for, (, int, i, =, start, ;, i, <, length, ;, i, ++, )]
[;, for, (, int, i, =, start, ;, i, <, length, ;, i, ++, ), {, if, (, (, values]
[;, i, <, length, ;, i, ++, ), {, if, (, (, values, [, i, ], >, cutoff, ), ==]
[;, i, ++, ), {, if, (, (, values, [, i, ], >, cutoff, ), ==, booleanDirection, ), {, dev]
[<, length, ;, i, ++, ), {, if, (, (, values, [, i, ], >, cutoff, ), ==, booleanDirection, )]
[;, i, ++, ), {, if, (, (, values, [, i, ], >, cutoff, ), ==, booleanDirection, ), {, dev]
[), {, if, (, (, values, [, i, ], >, cutoff, ), ==, booleanDirection, ), {, dev, =, values, []
[++, ), {, if, (, (, values, [, i, ], >, cutoff, ), ==, booleanDirection, ), {, dev, =, values]
[), {, dev, =, values, [, i, ], -, cutoff, ;, sumsq, +=, dev, *, dev, ;, }, }, if]
[==, booleanDirection, ), {, dev, =, values, [, i, ], -, cutoff, ;, sumsq, +=, dev, *, dev, ;, }]
[), ==, booleanDirection, ), {, dev, =, values, [, i, ], -, cutoff, ;, sumsq, +=, dev, *, dev, ;]
[>, cutoff, ), ==, booleanDirection, ), {, dev, =, values, [, i, ], -, cutoff, ;, sumsq, +=, dev, *]
[[, i, ], >, cutoff, ), ==, booleanDirection, ), {, dev, =, values, [, i, ], -, cutoff, ;, sumsq]
[], >, cutoff, ), ==, booleanDirection, ), {, dev, =, values, [, i, ], -, cutoff, ;, sumsq, +=, dev]
[), ==, booleanDirection, ), {, dev, =, values, [, i, ], -, cutoff, ;, sumsq, +=, dev, *, dev, ;]
[), {, dev, =, values, [, i, ], -, cutoff, ;, sumsq, +=, dev, *, dev, ;, }, }, if]
[=, values, [, i, ], -, cutoff, ;, sumsq, +=, dev, *, dev, ;, }, }, if, (, corrected, )]
[;, sumsq, +=, dev, *, dev, ;, }, }, if, (, corrected, ), {, return, sumsq, /, (, length, -]
[-, cutoff, ;, sumsq, +=, dev, *, dev, ;, }, }, if, (, corrected, ), {, return, sumsq, /, (]
[[, i, ], -, cutoff, ;, sumsq, +=, dev, *, dev, ;, }, }, if, (, corrected, ), {, return]
[], -, cutoff, ;, sumsq, +=, dev, *, dev, ;, }, }, if, (, corrected, ), {, return, sumsq, /]
[;, sumsq, +=, dev, *, dev, ;, }, }, if, (, corrected, ), {, return, sumsq, /, (, length, -]
[+=, dev, *, dev, ;, }, }, if, (, corrected, ), {, return, sumsq, /, (, length, -, 1.0, )]
[;, }, }, if, (, corrected, ), {, return, sumsq, /, (, length, -, 1.0, ), ;, }, else, {]
[*, dev, ;, }, }, if, (, corrected, ), {, return, sumsq, /, (, length, -, 1.0, ), ;, }]
[;, }, }, if, (, corrected, ), {, return, sumsq, /, (, length, -, 1.0, ), ;, }, else, {]
[), {, return, sumsq, /, (, length, -, 1.0, ), ;, }, else, {, return, sumsq, /, length, ;, }]
[;, }, else, {, return, sumsq, /, length, ;, }, }, }, }, public, boolean, isBiasCorrected, (, ), {, return]
[/, (, length, -, 1.0, ), ;, }, else, {, return, sumsq, /, length, ;, }, }, }, }, public]
[;, }, else, {, return, sumsq, /, length, ;, }, }, }, }, public, boolean, isBiasCorrected, (, ), {, return]
[), ;, }, else, {, return, sumsq, /, length, ;, }, }, }, }, public, boolean, isBiasCorrected, (, ), {]
[-, 1.0, ), ;, }, else, {, return, sumsq, /, length, ;, }, }, }, }, public, boolean, isBiasCorrected, (]
[), ;, }, else, {, return, sumsq, /, length, ;, }, }, }, }, public, boolean, isBiasCorrected, (, ), {]
[;, }, }, }, }, public, boolean, isBiasCorrected, (, ), {, return, biasCorrected, ;, }, public, void, setBiasCorrected, (, boolean]
[/, length, ;, }, }, }, }, public, boolean, isBiasCorrected, (, ), {, return, biasCorrected, ;, }, public, void, setBiasCorrected]
[;, }, }, }, }, public, boolean, isBiasCorrected, (, ), {, return, biasCorrected, ;, }, public, void, setBiasCorrected, (, boolean]
[;, }, public, void, setBiasCorrected, (, boolean, biasCorrected, ), {, this, ., biasCorrected, =, biasCorrected, ;, }, public, Direction, getVarianceDirection]
[=, biasCorrected, ;, }, public, Direction, getVarianceDirection, (, ), {, return, varianceDirection, ;, }, public, void, setVarianceDirection, (, Direction, varianceDirection]
[., biasCorrected, =, biasCorrected, ;, }, public, Direction, getVarianceDirection, (, ), {, return, varianceDirection, ;, }, public, void, setVarianceDirection, (]
[;, }, public, Direction, getVarianceDirection, (, ), {, return, varianceDirection, ;, }, public, void, setVarianceDirection, (, Direction, varianceDirection, ), {]
[;, }, public, void, setVarianceDirection, (, Direction, varianceDirection, ), {, this, ., varianceDirection, =, varianceDirection, ;, }, public, enum, Direction]
[=, varianceDirection, ;, }, public, enum, Direction, {, UPSIDE, (, true, ), ,, DOWNSIDE, (, false, ), ;, private, boolean]
[., varianceDirection, =, varianceDirection, ;, }, public, enum, Direction, {, UPSIDE, (, true, ), ,, DOWNSIDE, (, false, ), ;]
[;, }, public, enum, Direction, {, UPSIDE, (, true, ), ,, DOWNSIDE, (, false, ), ;, private, boolean, direction, ;]
[=, b, ;, }, boolean, getDirection, (, ), {, return, direction, ;, }, }, }]
[;, }, boolean, getDirection, (, ), {, return, direction, ;, }, }, }]
[;, }, }, }]
[), ,, DOWNSIDE, (, false, ), ;, private, boolean, direction, ;, Direction, (, boolean, b, ), {, direction, =, b]
[), ;, private, boolean, direction, ;, Direction, (, boolean, b, ), {, direction, =, b, ;, }, boolean, getDirection, (]
