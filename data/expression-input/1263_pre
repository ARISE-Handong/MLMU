[., NotStrictlyPositiveException, ;, @, Deprecated, public, class, SimpleVectorValueChecker, extends, AbstractConvergenceChecker, <, PointVectorValuePair, >, {, private, static, final, int, ITERATION_CHECK_DISABLED, =]
[NotStrictlyPositiveException, ;, @, Deprecated, public, class, SimpleVectorValueChecker, extends, AbstractConvergenceChecker, <, PointVectorValuePair, >, {, private, static, final, int, ITERATION_CHECK_DISABLED, =, -]
[static, final, int, ITERATION_CHECK_DISABLED, =, -, 1, ;, private, final, int, maxIterationCount, ;, @, Deprecated, public, SimpleVectorValueChecker, (, ), {]
[int, ITERATION_CHECK_DISABLED, =, -, 1, ;, private, final, int, maxIterationCount, ;, @, Deprecated, public, SimpleVectorValueChecker, (, ), {, maxIterationCount, =]
[{, maxIterationCount, =, ITERATION_CHECK_DISABLED, ;, }, public, SimpleVectorValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ), {, super, (]
[=, ITERATION_CHECK_DISABLED, ;, }, public, SimpleVectorValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ), {, super, (, relativeThreshold, ,]
[}, public, SimpleVectorValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;]
[SimpleVectorValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;, maxIterationCount, =]
[;, }, public, SimpleVectorValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ,, final, int, maxIter, ), {, super, (]
[public, SimpleVectorValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ,, final, int, maxIter, ), {, super, (, relativeThreshold, ,]
[relativeThreshold, ,, final, double, absoluteThreshold, ,, final, int, maxIter, ), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;, if, (]
[relativeThreshold, ,, final, double, absoluteThreshold, ,, final, int, maxIter, ), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;, if, (]
[final, double, absoluteThreshold, ,, final, int, maxIter, ), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;, if, (, maxIter, <=]
[final, int, maxIter, ), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;, if, (, maxIter, <=, 0, ), {, throw]
[), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;, if, (, maxIter, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (]
[relativeThreshold, ,, absoluteThreshold, ), ;, if, (, maxIter, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, maxIter, ), ;, }]
[absoluteThreshold, ), ;, if, (, maxIter, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, maxIter, ), ;, }, maxIterationCount, =]
[Override, public, boolean, converged, (, final, int, iteration, ,, final, PointVectorValuePair, previous, ,, final, PointVectorValuePair, current, ), {, if, (]
[Override, public, boolean, converged, (, final, int, iteration, ,, final, PointVectorValuePair, previous, ,, final, PointVectorValuePair, current, ), {, if, (]
[Override, public, boolean, converged, (, final, int, iteration, ,, final, PointVectorValuePair, previous, ,, final, PointVectorValuePair, current, ), {, if, (]
[boolean, converged, (, final, int, iteration, ,, final, PointVectorValuePair, previous, ,, final, PointVectorValuePair, current, ), {, if, (, maxIterationCount, !=]
[(, final, int, iteration, ,, final, PointVectorValuePair, previous, ,, final, PointVectorValuePair, current, ), {, if, (, maxIterationCount, !=, ITERATION_CHECK_DISABLED, &&]
[(, final, int, iteration, ,, final, PointVectorValuePair, previous, ,, final, PointVectorValuePair, current, ), {, if, (, maxIterationCount, !=, ITERATION_CHECK_DISABLED, &&]
[int, iteration, ,, final, PointVectorValuePair, previous, ,, final, PointVectorValuePair, current, ), {, if, (, maxIterationCount, !=, ITERATION_CHECK_DISABLED, &&, iteration, >=]
[PointVectorValuePair, previous, ,, final, PointVectorValuePair, current, ), {, if, (, maxIterationCount, !=, ITERATION_CHECK_DISABLED, &&, iteration, >=, maxIterationCount, ), {, return]
[(, maxIterationCount, !=, ITERATION_CHECK_DISABLED, &&, iteration, >=, maxIterationCount, ), {, return, true, ;, }, final, double, [, ], p, =]
[(, maxIterationCount, !=, ITERATION_CHECK_DISABLED, &&, iteration, >=, maxIterationCount, ), {, return, true, ;, }, final, double, [, ], p, =]
[;, }, final, double, [, ], p, =, previous, ., getValueRef, (, ), ;, final, double, [, ], c, =]
[;, }, final, double, [, ], p, =, previous, ., getValueRef, (, ), ;, final, double, [, ], c, =]
[(, ), ;, final, double, [, ], c, =, current, ., getValueRef, (, ), ;, for, (, int, i, =]
[;, final, double, [, ], c, =, current, ., getValueRef, (, ), ;, for, (, int, i, =, 0, ;]
[;, final, double, [, ], c, =, current, ., getValueRef, (, ), ;, for, (, int, i, =, 0, ;]
[double, [, ], c, =, current, ., getValueRef, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[double, [, ], c, =, current, ., getValueRef, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[=, current, ., getValueRef, (, ), ;, for, (, int, i, =, 0, ;, i, <, p, ., length, ;]
[current, ., getValueRef, (, ), ;, for, (, int, i, =, 0, ;, i, <, p, ., length, ;, ++]
[(, int, i, =, 0, ;, i, <, p, ., length, ;, ++, i, ), {, final, double, pi, =]
[(, int, i, =, 0, ;, i, <, p, ., length, ;, ++, i, ), {, final, double, pi, =]
[i, =, 0, ;, i, <, p, ., length, ;, ++, i, ), {, final, double, pi, =, p, []
[., length, ;, ++, i, ), {, final, double, pi, =, p, [, i, ], ;, final, double, ci, =]
[., length, ;, ++, i, ), {, final, double, pi, =, p, [, i, ], ;, final, double, ci, =]
[;, ++, i, ), {, final, double, pi, =, p, [, i, ], ;, final, double, ci, =, c, []
[pi, =, p, [, i, ], ;, final, double, ci, =, c, [, i, ], ;, final, double, difference, =]
[pi, =, p, [, i, ], ;, final, double, ci, =, c, [, i, ], ;, final, double, difference, =]
[i, ], ;, final, double, ci, =, c, [, i, ], ;, final, double, difference, =, FastMath, ., abs, (]
[i, ], ;, final, double, ci, =, c, [, i, ], ;, final, double, difference, =, FastMath, ., abs, (]
[;, final, double, ci, =, c, [, i, ], ;, final, double, difference, =, FastMath, ., abs, (, pi, -]
[i, ], ;, final, double, difference, =, FastMath, ., abs, (, pi, -, ci, ), ;, final, double, size, =]
[i, ], ;, final, double, difference, =, FastMath, ., abs, (, pi, -, ci, ), ;, final, double, size, =]
[double, difference, =, FastMath, ., abs, (, pi, -, ci, ), ;, final, double, size, =, FastMath, ., max, (]
[double, difference, =, FastMath, ., abs, (, pi, -, ci, ), ;, final, double, size, =, FastMath, ., max, (]
[., abs, (, pi, -, ci, ), ;, final, double, size, =, FastMath, ., max, (, FastMath, ., abs, (]
[pi, -, ci, ), ;, final, double, size, =, FastMath, ., max, (, FastMath, ., abs, (, pi, ), ,]
[pi, -, ci, ), ;, final, double, size, =, FastMath, ., max, (, FastMath, ., abs, (, pi, ), ,]
[;, final, double, size, =, FastMath, ., max, (, FastMath, ., abs, (, pi, ), ,, FastMath, ., abs, (]
[., max, (, FastMath, ., abs, (, pi, ), ,, FastMath, ., abs, (, ci, ), ), ;, if, (]
[., max, (, FastMath, ., abs, (, pi, ), ,, FastMath, ., abs, (, ci, ), ), ;, if, (]
[., max, (, FastMath, ., abs, (, pi, ), ,, FastMath, ., abs, (, ci, ), ), ;, if, (]
[(, FastMath, ., abs, (, pi, ), ,, FastMath, ., abs, (, ci, ), ), ;, if, (, difference, >]
[(, FastMath, ., abs, (, pi, ), ,, FastMath, ., abs, (, ci, ), ), ;, if, (, difference, >]
[., abs, (, pi, ), ,, FastMath, ., abs, (, ci, ), ), ;, if, (, difference, >, size, *]
[), ,, FastMath, ., abs, (, ci, ), ), ;, if, (, difference, >, size, *, getRelativeThreshold, (, ), &&]
[), ,, FastMath, ., abs, (, ci, ), ), ;, if, (, difference, >, size, *, getRelativeThreshold, (, ), &&]
[FastMath, ., abs, (, ci, ), ), ;, if, (, difference, >, size, *, getRelativeThreshold, (, ), &&, difference, >]
[), ;, if, (, difference, >, size, *, getRelativeThreshold, (, ), &&, difference, >, getAbsoluteThreshold, (, ), ), {, return]
[>, size, *, getRelativeThreshold, (, ), &&, difference, >, getAbsoluteThreshold, (, ), ), {, return, false, ;, }, }, return]
