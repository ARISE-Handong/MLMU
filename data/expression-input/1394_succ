[;, public, static, final, int, FIRST_QUARTER, =, 1, ;, public, static, final, int, LAST_QUARTER, =, 4, ;, public, static, final]
[;, public, static, final, int, LAST_QUARTER, =, 4, ;, public, static, final, int, [, ], FIRST_MONTH_IN_QUARTER, =, {, 0, ,]
[;, public, static, final, int, [, ], FIRST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., JANUARY, ,, MonthConstants, ., APRIL, ,]
[;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., MARCH, ,, MonthConstants, ., JUNE, ,]
[,, MonthConstants, ., JANUARY, ,, MonthConstants, ., APRIL, ,, MonthConstants, ., JULY, ,, MonthConstants, ., OCTOBER, }, ;, public, static]
[,, MonthConstants, ., APRIL, ,, MonthConstants, ., JULY, ,, MonthConstants, ., OCTOBER, }, ;, public, static, final, int, [, ]]
[., JANUARY, ,, MonthConstants, ., APRIL, ,, MonthConstants, ., JULY, ,, MonthConstants, ., OCTOBER, }, ;, public, static, final, int]
[,, MonthConstants, ., JULY, ,, MonthConstants, ., OCTOBER, }, ;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0]
[., APRIL, ,, MonthConstants, ., JULY, ,, MonthConstants, ., OCTOBER, }, ;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =]
[,, MonthConstants, ., OCTOBER, }, ;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., MARCH]
[., JULY, ,, MonthConstants, ., OCTOBER, }, ;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants]
[}, ;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., MARCH, ,, MonthConstants, ., JUNE]
[., OCTOBER, }, ;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., MARCH, ,, MonthConstants]
[;, private, short, year, ;, private, byte, quarter, ;, private, long, firstMillisecond, ;, private, long, lastMillisecond, ;, public, Quarter, (]
[,, MonthConstants, ., MARCH, ,, MonthConstants, ., JUNE, ,, MonthConstants, ., SEPTEMBER, ,, MonthConstants, ., DECEMBER, }, ;, private, short]
[,, MonthConstants, ., JUNE, ,, MonthConstants, ., SEPTEMBER, ,, MonthConstants, ., DECEMBER, }, ;, private, short, year, ;, private, byte]
[., MARCH, ,, MonthConstants, ., JUNE, ,, MonthConstants, ., SEPTEMBER, ,, MonthConstants, ., DECEMBER, }, ;, private, short, year, ;]
[,, MonthConstants, ., SEPTEMBER, ,, MonthConstants, ., DECEMBER, }, ;, private, short, year, ;, private, byte, quarter, ;, private, long]
[., JUNE, ,, MonthConstants, ., SEPTEMBER, ,, MonthConstants, ., DECEMBER, }, ;, private, short, year, ;, private, byte, quarter, ;]
[,, MonthConstants, ., DECEMBER, }, ;, private, short, year, ;, private, byte, quarter, ;, private, long, firstMillisecond, ;, private, long]
[., SEPTEMBER, ,, MonthConstants, ., DECEMBER, }, ;, private, short, year, ;, private, byte, quarter, ;, private, long, firstMillisecond, ;]
[}, ;, private, short, year, ;, private, byte, quarter, ;, private, long, firstMillisecond, ;, private, long, lastMillisecond, ;, public, Quarter]
[., DECEMBER, }, ;, private, short, year, ;, private, byte, quarter, ;, private, long, firstMillisecond, ;, private, long, lastMillisecond, ;]
[), ;, }, public, Quarter, (, int, quarter, ,, int, year, ), {, if, (, (, quarter, <, FIRST_QUARTER, )]
[), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;, this]
[||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =]
[), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year]
[<, FIRST_QUARTER, ), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this]
[), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year]
[), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;, this]
[), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;]
[>, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, )]
[), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;]
[;, }, this, ., year, =, (, short, ), year, ;, this, ., quarter, =, (, byte, ), quarter, ;]
[), ;, }, this, ., year, =, (, short, ), year, ;, this, ., quarter, =, (, byte, ), quarter]
[=, (, short, ), year, ;, this, ., quarter, =, (, byte, ), quarter, ;, peg, (, Calendar, ., getInstance]
[., year, =, (, short, ), year, ;, this, ., quarter, =, (, byte, ), quarter, ;, peg, (, Calendar]
[;, this, ., quarter, =, (, byte, ), quarter, ;, peg, (, Calendar, ., getInstance, (, ), ), ;, }]
[;, this, ., quarter, =, (, byte, ), quarter, ;, peg, (, Calendar, ., getInstance, (, ), ), ;, }]
[=, (, byte, ), quarter, ;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Quarter, (, int]
[., quarter, =, (, byte, ), quarter, ;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Quarter]
[;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Quarter, (, int, quarter, ,, Year, year, )]
[;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Quarter, (, int, quarter, ,, Year, year, )]
[;, }, public, Quarter, (, int, quarter, ,, Year, year, ), {, if, (, (, quarter, <, FIRST_QUARTER, ), ||]
[), ;, }, public, Quarter, (, int, quarter, ,, Year, year, ), {, if, (, (, quarter, <, FIRST_QUARTER, )]
[., getInstance, (, ), ), ;, }, public, Quarter, (, int, quarter, ,, Year, year, ), {, if, (, (]
[), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ., getYear]
[||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =]
[), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year]
[<, FIRST_QUARTER, ), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this]
[), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year]
[), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ., getYear]
[), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, .]
[>, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, )]
[), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, .]
[;, }, this, ., year, =, (, short, ), year, ., getYear, (, ), ;, this, ., quarter, =, (]
[), ;, }, this, ., year, =, (, short, ), year, ., getYear, (, ), ;, this, ., quarter, =]
[=, (, short, ), year, ., getYear, (, ), ;, this, ., quarter, =, (, byte, ), quarter, ;, peg]
[., year, =, (, short, ), year, ., getYear, (, ), ;, this, ., quarter, =, (, byte, ), quarter]
[;, this, ., quarter, =, (, byte, ), quarter, ;, peg, (, Calendar, ., getInstance, (, ), ), ;, }]
[;, this, ., quarter, =, (, byte, ), quarter, ;, peg, (, Calendar, ., getInstance, (, ), ), ;, }]
[., getYear, (, ), ;, this, ., quarter, =, (, byte, ), quarter, ;, peg, (, Calendar, ., getInstance, (]
[=, (, byte, ), quarter, ;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Quarter, (, Date]
[., quarter, =, (, byte, ), quarter, ;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Quarter]
[;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Quarter, (, Date, time, ), {, this, (]
[;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Quarter, (, Date, time, ), {, this, (]
[;, }, public, Quarter, (, Date, time, ), {, this, (, time, ,, TimeZone, ., getDefault, (, ), ), ;]
[), ;, }, public, Quarter, (, Date, time, ), {, this, (, time, ,, TimeZone, ., getDefault, (, ), )]
[., getInstance, (, ), ), ;, }, public, Quarter, (, Date, time, ), {, this, (, time, ,, TimeZone, .]
[,, TimeZone, ., getDefault, (, ), ), ;, }, public, Quarter, (, Date, time, ,, TimeZone, zone, ), {, this]
[), ;, }, public, Quarter, (, Date, time, ,, TimeZone, zone, ), {, this, (, time, ,, zone, ,, Locale]
[., getDefault, (, ), ), ;, }, public, Quarter, (, Date, time, ,, TimeZone, zone, ), {, this, (, time]
[,, zone, ,, Locale, ., getDefault, (, ), ), ;, }, public, Quarter, (, Date, time, ,, TimeZone, zone, ,]
[,, Locale, ., getDefault, (, ), ), ;, }, public, Quarter, (, Date, time, ,, TimeZone, zone, ,, Locale, locale]
[), ;, }, public, Quarter, (, Date, time, ,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =, Calendar]
[., getDefault, (, ), ), ;, }, public, Quarter, (, Date, time, ,, TimeZone, zone, ,, Locale, locale, ), {]
[;, calendar, ., setTime, (, time, ), ;, int, month, =, calendar, ., get, (, Calendar, ., MONTH, ), +]
[., getInstance, (, zone, ,, locale, ), ;, calendar, ., setTime, (, time, ), ;, int, month, =, calendar, .]
[,, locale, ), ;, calendar, ., setTime, (, time, ), ;, int, month, =, calendar, ., get, (, Calendar, .]
[), ;, calendar, ., setTime, (, time, ), ;, int, month, =, calendar, ., get, (, Calendar, ., MONTH, )]
[;, int, month, =, calendar, ., get, (, Calendar, ., MONTH, ), +, 1, ;, this, ., quarter, =, (]
[., setTime, (, time, ), ;, int, month, =, calendar, ., get, (, Calendar, ., MONTH, ), +, 1, ;]
[), ;, int, month, =, calendar, ., get, (, Calendar, ., MONTH, ), +, 1, ;, this, ., quarter, =]
[;, this, ., quarter, =, (, byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;, this, ., year, =, (]
[+, 1, ;, this, ., quarter, =, (, byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;, this, ., year]
[., get, (, Calendar, ., MONTH, ), +, 1, ;, this, ., quarter, =, (, byte, ), SerialDate, ., monthCodeToQuarter]
[), +, 1, ;, this, ., quarter, =, (, byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;, this, .]
[., MONTH, ), +, 1, ;, this, ., quarter, =, (, byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;]
[;, this, ., quarter, =, (, byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;, this, ., year, =, (]
[=, (, byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;, this, ., year, =, (, short, ), calendar, .]
[., quarter, =, (, byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;, this, ., year, =, (, short, )]
[;, this, ., year, =, (, short, ), calendar, ., get, (, Calendar, ., YEAR, ), ;, peg, (, calendar]
[;, this, ., year, =, (, short, ), calendar, ., get, (, Calendar, ., YEAR, ), ;, peg, (, calendar]
[., monthCodeToQuarter, (, month, ), ;, this, ., year, =, (, short, ), calendar, ., get, (, Calendar, ., YEAR]
[), ;, this, ., year, =, (, short, ), calendar, ., get, (, Calendar, ., YEAR, ), ;, peg, (]
[=, (, short, ), calendar, ., get, (, Calendar, ., YEAR, ), ;, peg, (, calendar, ), ;, }, public]
[., year, =, (, short, ), calendar, ., get, (, Calendar, ., YEAR, ), ;, peg, (, calendar, ), ;]
[;, peg, (, calendar, ), ;, }, public, int, getQuarter, (, ), {, return, this, ., quarter, ;, }, public]
[;, peg, (, calendar, ), ;, }, public, int, getQuarter, (, ), {, return, this, ., quarter, ;, }, public]
[., get, (, Calendar, ., YEAR, ), ;, peg, (, calendar, ), ;, }, public, int, getQuarter, (, ), {]
[), ;, peg, (, calendar, ), ;, }, public, int, getQuarter, (, ), {, return, this, ., quarter, ;, }]
[., YEAR, ), ;, peg, (, calendar, ), ;, }, public, int, getQuarter, (, ), {, return, this, ., quarter]
[;, }, public, int, getQuarter, (, ), {, return, this, ., quarter, ;, }, public, Year, getYear, (, ), {]
[), ;, }, public, int, getQuarter, (, ), {, return, this, ., quarter, ;, }, public, Year, getYear, (, )]
[;, }, public, Year, getYear, (, ), {, return, new, Year, (, this, ., year, ), ;, }, public, int]
[., quarter, ;, }, public, Year, getYear, (, ), {, return, new, Year, (, this, ., year, ), ;, }]
[;, }, public, int, getYearValue, (, ), {, return, this, ., year, ;, }, public, long, getFirstMillisecond, (, ), {]
[), ;, }, public, int, getYearValue, (, ), {, return, this, ., year, ;, }, public, long, getFirstMillisecond, (, )]
[., year, ), ;, }, public, int, getYearValue, (, ), {, return, this, ., year, ;, }, public, long, getFirstMillisecond]
[;, }, public, long, getFirstMillisecond, (, ), {, return, this, ., firstMillisecond, ;, }, public, long, getLastMillisecond, (, ), {]
[., year, ;, }, public, long, getFirstMillisecond, (, ), {, return, this, ., firstMillisecond, ;, }, public, long, getLastMillisecond, (]
[;, }, public, long, getLastMillisecond, (, ), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar]
[., firstMillisecond, ;, }, public, long, getLastMillisecond, (, ), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (]
[;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;, this]
[., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, )]
[=, getFirstMillisecond, (, calendar, ), ;, this, ., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (]
[., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;, this, ., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod]
[;, this, ., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Quarter, result, ;]
[), ;, this, ., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Quarter, result]
[=, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Quarter, result, ;, if, (, this, .]
[., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Quarter, result, ;, if, (]
[;, }, public, RegularTimePeriod, previous, (, ), {, Quarter, result, ;, if, (, this, ., quarter, >, FIRST_QUARTER, ), {]
[), ;, }, public, RegularTimePeriod, previous, (, ), {, Quarter, result, ;, if, (, this, ., quarter, >, FIRST_QUARTER, )]
[), {, result, =, new, Quarter, (, this, ., quarter, -, 1, ,, this, ., year, ), ;, }, else]
[>, FIRST_QUARTER, ), {, result, =, new, Quarter, (, this, ., quarter, -, 1, ,, this, ., year, ), ;]
[., quarter, >, FIRST_QUARTER, ), {, result, =, new, Quarter, (, this, ., quarter, -, 1, ,, this, ., year]
[), {, result, =, new, Quarter, (, this, ., quarter, -, 1, ,, this, ., year, ), ;, }, else]
[=, new, Quarter, (, this, ., quarter, -, 1, ,, this, ., year, ), ;, }, else, {, if, (]
[;, }, else, {, if, (, this, ., year, >, 1900, ), {, result, =, new, Quarter, (, LAST_QUARTER, ,]
[,, this, ., year, ), ;, }, else, {, if, (, this, ., year, >, 1900, ), {, result, =]
[-, 1, ,, this, ., year, ), ;, }, else, {, if, (, this, ., year, >, 1900, ), {]
[., quarter, -, 1, ,, this, ., year, ), ;, }, else, {, if, (, this, ., year, >, 1900]
[,, this, ., year, ), ;, }, else, {, if, (, this, ., year, >, 1900, ), {, result, =]
[), ;, }, else, {, if, (, this, ., year, >, 1900, ), {, result, =, new, Quarter, (, LAST_QUARTER]
[., year, ), ;, }, else, {, if, (, this, ., year, >, 1900, ), {, result, =, new, Quarter]
[), {, result, =, new, Quarter, (, LAST_QUARTER, ,, this, ., year, -, 1, ), ;, }, else, {, result]
[>, 1900, ), {, result, =, new, Quarter, (, LAST_QUARTER, ,, this, ., year, -, 1, ), ;, }, else]
[., year, >, 1900, ), {, result, =, new, Quarter, (, LAST_QUARTER, ,, this, ., year, -, 1, ), ;]
[), {, result, =, new, Quarter, (, LAST_QUARTER, ,, this, ., year, -, 1, ), ;, }, else, {, result]
[=, new, Quarter, (, LAST_QUARTER, ,, this, ., year, -, 1, ), ;, }, else, {, result, =, null, ;]
[;, }, else, {, result, =, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {]
[,, this, ., year, -, 1, ), ;, }, else, {, result, =, null, ;, }, }, return, result, ;]
[), ;, }, else, {, result, =, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, )]
[-, 1, ), ;, }, else, {, result, =, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next]
[., year, -, 1, ), ;, }, else, {, result, =, null, ;, }, }, return, result, ;, }, public]
[), ;, }, else, {, result, =, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, )]
[=, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Quarter, result, ;, if, (]
[;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Quarter, result, ;, if, (, this, .]
[;, }, public, RegularTimePeriod, next, (, ), {, Quarter, result, ;, if, (, this, ., quarter, <, LAST_QUARTER, ), {]
[), {, result, =, new, Quarter, (, this, ., quarter, +, 1, ,, this, ., year, ), ;, }, else]
[<, LAST_QUARTER, ), {, result, =, new, Quarter, (, this, ., quarter, +, 1, ,, this, ., year, ), ;]
[., quarter, <, LAST_QUARTER, ), {, result, =, new, Quarter, (, this, ., quarter, +, 1, ,, this, ., year]
[), {, result, =, new, Quarter, (, this, ., quarter, +, 1, ,, this, ., year, ), ;, }, else]
[=, new, Quarter, (, this, ., quarter, +, 1, ,, this, ., year, ), ;, }, else, {, if, (]
[;, }, else, {, if, (, this, ., year, <, 9999, ), {, result, =, new, Quarter, (, FIRST_QUARTER, ,]
[,, this, ., year, ), ;, }, else, {, if, (, this, ., year, <, 9999, ), {, result, =]
[+, 1, ,, this, ., year, ), ;, }, else, {, if, (, this, ., year, <, 9999, ), {]
[., quarter, +, 1, ,, this, ., year, ), ;, }, else, {, if, (, this, ., year, <, 9999]
[,, this, ., year, ), ;, }, else, {, if, (, this, ., year, <, 9999, ), {, result, =]
[), ;, }, else, {, if, (, this, ., year, <, 9999, ), {, result, =, new, Quarter, (, FIRST_QUARTER]
[., year, ), ;, }, else, {, if, (, this, ., year, <, 9999, ), {, result, =, new, Quarter]
[), {, result, =, new, Quarter, (, FIRST_QUARTER, ,, this, ., year, +, 1, ), ;, }, else, {, result]
[<, 9999, ), {, result, =, new, Quarter, (, FIRST_QUARTER, ,, this, ., year, +, 1, ), ;, }, else]
[., year, <, 9999, ), {, result, =, new, Quarter, (, FIRST_QUARTER, ,, this, ., year, +, 1, ), ;]
[), {, result, =, new, Quarter, (, FIRST_QUARTER, ,, this, ., year, +, 1, ), ;, }, else, {, result]
[=, new, Quarter, (, FIRST_QUARTER, ,, this, ., year, +, 1, ), ;, }, else, {, result, =, null, ;]
[;, }, else, {, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {]
[,, this, ., year, +, 1, ), ;, }, else, {, result, =, null, ;, }, }, return, result, ;]
[), ;, }, else, {, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, )]
[+, 1, ), ;, }, else, {, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex]
[., year, +, 1, ), ;, }, else, {, result, =, null, ;, }, }, return, result, ;, }, public]
[), ;, }, else, {, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, )]
[=, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return, this, ., year, *]
[;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return, this, ., year, *, 4L, +]
[;, }, public, long, getSerialIndex, (, ), {, return, this, ., year, *, 4L, +, this, ., quarter, ;, }]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, !=, null, ), {, if, (, obj]
[+, this, ., quarter, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, !=, null, )]
[*, 4L, +, this, ., quarter, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, !=]
[., year, *, 4L, +, this, ., quarter, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[+, this, ., quarter, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, !=, null, )]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, !=, null, ), {, if, (, obj]
[., quarter, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, !=, null, ), {, if]
[), {, if, (, obj, instanceof, Quarter, ), {, Quarter, target, =, (, Quarter, ), obj, ;, return, (, this]
[!=, null, ), {, if, (, obj, instanceof, Quarter, ), {, Quarter, target, =, (, Quarter, ), obj, ;, return]
[), {, if, (, obj, instanceof, Quarter, ), {, Quarter, target, =, (, Quarter, ), obj, ;, return, (, this]
[), {, Quarter, target, =, (, Quarter, ), obj, ;, return, (, this, ., quarter, ==, target, ., getQuarter, (]
[instanceof, Quarter, ), {, Quarter, target, =, (, Quarter, ), obj, ;, return, (, this, ., quarter, ==, target, .]
[;, return, (, this, ., quarter, ==, target, ., getQuarter, (, ), &&, (, this, ., year, ==, target, .]
[;, return, (, this, ., quarter, ==, target, ., getQuarter, (, ), &&, (, this, ., year, ==, target, .]
[;, }, else, {, return, false, ;, }, }, else, {, return, false, ;, }, }, public, int, hashCode, (]
[), ;, }, else, {, return, false, ;, }, }, else, {, return, false, ;, }, }, public, int, hashCode]
[&&, (, this, ., year, ==, target, ., getYearValue, (, ), ), ), ;, }, else, {, return, false, ;]
[==, target, ., getQuarter, (, ), &&, (, this, ., year, ==, target, ., getYearValue, (, ), ), ), ;]
[., quarter, ==, target, ., getQuarter, (, ), &&, (, this, ., year, ==, target, ., getYearValue, (, ), )]
[&&, (, this, ., year, ==, target, ., getYearValue, (, ), ), ), ;, }, else, {, return, false, ;]
[., getQuarter, (, ), &&, (, this, ., year, ==, target, ., getYearValue, (, ), ), ), ;, }, else]
[), ;, }, else, {, return, false, ;, }, }, else, {, return, false, ;, }, }, public, int, hashCode]
[), ), ;, }, else, {, return, false, ;, }, }, else, {, return, false, ;, }, }, public, int]
[==, target, ., getYearValue, (, ), ), ), ;, }, else, {, return, false, ;, }, }, else, {, return]
[., year, ==, target, ., getYearValue, (, ), ), ), ;, }, else, {, return, false, ;, }, }, else]
[), ), ;, }, else, {, return, false, ;, }, }, else, {, return, false, ;, }, }, public, int]
[., getYearValue, (, ), ), ), ;, }, else, {, return, false, ;, }, }, else, {, return, false, ;]
[;, }, }, else, {, return, false, ;, }, }, public, int, hashCode, (, ), {, int, result, =, 17]
[;, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *, result, +]
[;, result, =, 37, *, result, +, this, ., quarter, ;, result, =, 37, *, result, +, this, ., year]
[=, 37, *, result, +, this, ., quarter, ;, result, =, 37, *, result, +, this, ., year, ;, return]
[;, result, =, 37, *, result, +, this, ., year, ;, return, result, ;, }, public, int, compareTo, (, Object]
[+, this, ., quarter, ;, result, =, 37, *, result, +, this, ., year, ;, return, result, ;, }, public]
[*, result, +, this, ., quarter, ;, result, =, 37, *, result, +, this, ., year, ;, return, result, ;]
[+, this, ., quarter, ;, result, =, 37, *, result, +, this, ., year, ;, return, result, ;, }, public]
[;, result, =, 37, *, result, +, this, ., year, ;, return, result, ;, }, public, int, compareTo, (, Object]
[., quarter, ;, result, =, 37, *, result, +, this, ., year, ;, return, result, ;, }, public, int, compareTo]
[=, 37, *, result, +, this, ., year, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, )]
[;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (, o1, instanceof]
[+, this, ., year, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;]
[*, result, +, this, ., year, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int]
[+, this, ., year, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;]
[;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (, o1, instanceof]
[., year, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (]
[;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (, o1, instanceof, Quarter, ), {]
[), {, Quarter, q, =, (, Quarter, ), o1, ;, result, =, this, ., year, -, q, ., getYearValue, (]
[instanceof, Quarter, ), {, Quarter, q, =, (, Quarter, ), o1, ;, result, =, this, ., year, -, q, .]
[;, result, =, this, ., year, -, q, ., getYearValue, (, ), ;, if, (, result, ==, 0, ), {]
[;, result, =, this, ., year, -, q, ., getYearValue, (, ), ;, if, (, result, ==, 0, ), {]
[=, this, ., year, -, q, ., getYearValue, (, ), ;, if, (, result, ==, 0, ), {, result, =]
[;, if, (, result, ==, 0, ), {, result, =, this, ., quarter, -, q, ., getQuarter, (, ), ;]
[-, q, ., getYearValue, (, ), ;, if, (, result, ==, 0, ), {, result, =, this, ., quarter, -]
[., year, -, q, ., getYearValue, (, ), ;, if, (, result, ==, 0, ), {, result, =, this, .]
[;, if, (, result, ==, 0, ), {, result, =, this, ., quarter, -, q, ., getQuarter, (, ), ;]
[., getYearValue, (, ), ;, if, (, result, ==, 0, ), {, result, =, this, ., quarter, -, q, .]
[), {, result, =, this, ., quarter, -, q, ., getQuarter, (, ), ;, }, }, else, if, (, o1]
[==, 0, ), {, result, =, this, ., quarter, -, q, ., getQuarter, (, ), ;, }, }, else, if]
[), {, result, =, this, ., quarter, -, q, ., getQuarter, (, ), ;, }, }, else, if, (, o1]
[=, this, ., quarter, -, q, ., getQuarter, (, ), ;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, )]
[;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =]
[-, q, ., getQuarter, (, ), ;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0]
[., quarter, -, q, ., getQuarter, (, ), ;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result]
[;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =]
[., getQuarter, (, ), ;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }]
[), {, result, =, 0, ;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, String]
[instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =, 1, ;, }, return, result, ;, }]
[=, 0, ;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, )]
[;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return]
[=, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return, "Q", +, this, ., quarter]
[;, }, return, result, ;, }, public, String, toString, (, ), {, return, "Q", +, this, ., quarter, +, "/"]
[;, }, public, String, toString, (, ), {, return, "Q", +, this, ., quarter, +, "/", +, this, ., year]
[;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter, ., FIRST_MONTH_IN_QUARTER, [, this, ., quarter]
[+, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter, ., FIRST_MONTH_IN_QUARTER]
[+, "/", +, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter]
[+, this, ., quarter, +, "/", +, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {]
[+, "/", +, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter]
[., quarter, +, "/", +, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month]
[+, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter, ., FIRST_MONTH_IN_QUARTER]
[;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter, ., FIRST_MONTH_IN_QUARTER, [, this, ., quarter]
[., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter, ., FIRST_MONTH_IN_QUARTER, [, this]
[;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, 1, ,, 0, ,, 0, ,, 0]
[[, this, ., quarter, ], ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, 1, ,]
[., FIRST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,]
[], ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, 1, ,, 0, ,, 0, ,]
[., quarter, ], ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, 1, ,, 0, ,]
[;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return, calendar, ., getTime, (, ), ., getTime]
[., set, (, this, ., year, ,, month, -, 1, ,, 1, ,, 0, ,, 0, ,, 0, ), ;]
[,, month, -, 1, ,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, .]
[., year, ,, month, -, 1, ,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (]
[,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, )]
[-, 1, ,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,]
[,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, )]
[,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return, calendar, .]
[,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return, calendar, ., getTime, (]
[), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return, calendar, ., getTime, (, ), .]
[;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, )]
[., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return, calendar, ., getTime, (, ), ., getTime, (, )]
[,, 0, ), ;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (]
[., MILLISECOND, ,, 0, ), ;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, long]
[), ;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar]
[;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter, ., LAST_MONTH_IN_QUARTER, [, this, ., quarter]
[., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter, ., LAST_MONTH_IN_QUARTER]
[., getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, month]
[;, int, eom, =, SerialDate, ., lastDayOfMonth, (, month, ,, this, ., year, ), ;, calendar, ., set, (, this]
[[, this, ., quarter, ], ;, int, eom, =, SerialDate, ., lastDayOfMonth, (, month, ,, this, ., year, ), ;]
[., LAST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;, int, eom, =, SerialDate, ., lastDayOfMonth, (, month, ,, this, ., year]
[], ;, int, eom, =, SerialDate, ., lastDayOfMonth, (, month, ,, this, ., year, ), ;, calendar, ., set, (]
[., quarter, ], ;, int, eom, =, SerialDate, ., lastDayOfMonth, (, month, ,, this, ., year, ), ;, calendar, .]
[;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, eom, ,, 23, ,, 59, ,, 59]
[., lastDayOfMonth, (, month, ,, this, ., year, ), ;, calendar, ., set, (, this, ., year, ,, month, -]
[,, this, ., year, ), ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, eom, ,]
[), ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, eom, ,, 23, ,, 59, ,]
[., year, ), ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, eom, ,, 23, ,]
[;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return, calendar, ., getTime, (, ), ., getTime]
[., set, (, this, ., year, ,, month, -, 1, ,, eom, ,, 23, ,, 59, ,, 59, ), ;]
[,, month, -, 1, ,, eom, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, .]
[., year, ,, month, -, 1, ,, eom, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (]
[,, eom, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, )]
[-, 1, ,, eom, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,]
[,, eom, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, )]
[,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return, calendar, .]
[,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return, calendar, ., getTime, (]
[), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return, calendar, ., getTime, (, ), .]
[;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, static, Quarter, parseQuarter, (, String, s]
[., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return, calendar, ., getTime, (, ), ., getTime, (, )]
[,, 999, ), ;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, static, Quarter, parseQuarter]
[., MILLISECOND, ,, 999, ), ;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, static]
[), ;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, static, Quarter, parseQuarter, (, String]
[;, }, public, static, Quarter, parseQuarter, (, String, s, ), {, int, i, =, s, ., indexOf, (, "Q", )]
[., getTime, (, ), ;, }, public, static, Quarter, parseQuarter, (, String, s, ), {, int, i, =, s, .]
[., getTime, (, ), ., getTime, (, ), ;, }, public, static, Quarter, parseQuarter, (, String, s, ), {, int]
[;, if, (, i, ==, -, 1, ), {, throw, new, TimePeriodFormatException, (, "Missing Q.", ), ;, }, if, (, i]
[., indexOf, (, "Q", ), ;, if, (, i, ==, -, 1, ), {, throw, new, TimePeriodFormatException, (, "Missing Q.", )]
[), ;, if, (, i, ==, -, 1, ), {, throw, new, TimePeriodFormatException, (, "Missing Q.", ), ;, }, if, (]
[), {, throw, new, TimePeriodFormatException, (, "Missing Q.", ), ;, }, if, (, i, ==, s, ., length, (, ), -]
[==, -, 1, ), {, throw, new, TimePeriodFormatException, (, "Missing Q.", ), ;, }, if, (, i, ==, s, ., length]
[), {, throw, new, TimePeriodFormatException, (, "Missing Q.", ), ;, }, if, (, i, ==, s, ., length, (, ), -]
[), {, throw, new, TimePeriodFormatException, (, "Missing Q.", ), ;, }, if, (, i, ==, s, ., length, (, ), -]
[;, }, if, (, i, ==, s, ., length, (, ), -, 1, ), {, throw, new, TimePeriodFormatException, (, "Q found at end of string."]
[), ;, }, if, (, i, ==, s, ., length, (, ), -, 1, ), {, throw, new, TimePeriodFormatException, (]
[), {, throw, new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr, =, s, ., substring, (, i, +, 1]
[==, s, ., length, (, ), -, 1, ), {, throw, new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr]
[), {, throw, new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr, =, s, ., substring, (, i, +, 1]
[-, 1, ), {, throw, new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr, =, s, ., substring, (, i]
[., length, (, ), -, 1, ), {, throw, new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr, =, s]
[), {, throw, new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr, =, s, ., substring, (, i, +, 1]
[;, }, String, qstr, =, s, ., substring, (, i, +, 1, ,, i, +, 2, ), ;, int, quarter]
[), ;, }, String, qstr, =, s, ., substring, (, i, +, 1, ,, i, +, 2, ), ;, int]
[;, int, quarter, =, Integer, ., parseInt, (, qstr, ), ;, String, remaining, =, s, ., substring, (, 0, ,]
[., substring, (, i, +, 1, ,, i, +, 2, ), ;, int, quarter, =, Integer, ., parseInt, (, qstr]
[,, i, +, 2, ), ;, int, quarter, =, Integer, ., parseInt, (, qstr, ), ;, String, remaining, =, s]
[+, 1, ,, i, +, 2, ), ;, int, quarter, =, Integer, ., parseInt, (, qstr, ), ;, String, remaining]
[,, i, +, 2, ), ;, int, quarter, =, Integer, ., parseInt, (, qstr, ), ;, String, remaining, =, s]
[), ;, int, quarter, =, Integer, ., parseInt, (, qstr, ), ;, String, remaining, =, s, ., substring, (, 0]
[+, 2, ), ;, int, quarter, =, Integer, ., parseInt, (, qstr, ), ;, String, remaining, =, s, ., substring]
[), ;, int, quarter, =, Integer, ., parseInt, (, qstr, ), ;, String, remaining, =, s, ., substring, (, 0]
[;, String, remaining, =, s, ., substring, (, 0, ,, i, ), +, s, ., substring, (, i, +, 2]
[., parseInt, (, qstr, ), ;, String, remaining, =, s, ., substring, (, 0, ,, i, ), +, s, .]
[), ;, String, remaining, =, s, ., substring, (, 0, ,, i, ), +, s, ., substring, (, i, +]
[;, remaining, =, remaining, ., replace, (, '/', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, ',', ,]
[+, s, ., substring, (, i, +, 2, ,, s, ., length, (, ), ), ;, remaining, =, remaining, .]
[., substring, (, 0, ,, i, ), +, s, ., substring, (, i, +, 2, ,, s, ., length, (]
[,, i, ), +, s, ., substring, (, i, +, 2, ,, s, ., length, (, ), ), ;, remaining]
[), +, s, ., substring, (, i, +, 2, ,, s, ., length, (, ), ), ;, remaining, =, remaining]
[;, remaining, =, remaining, ., replace, (, '/', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, ',', ,]
[., substring, (, i, +, 2, ,, s, ., length, (, ), ), ;, remaining, =, remaining, ., replace, (]
[,, s, ., length, (, ), ), ;, remaining, =, remaining, ., replace, (, '/', ,, ' ', ), ;, remaining]
[+, 2, ,, s, ., length, (, ), ), ;, remaining, =, remaining, ., replace, (, '/', ,, ' ', )]
[,, s, ., length, (, ), ), ;, remaining, =, remaining, ., replace, (, '/', ,, ' ', ), ;, remaining]
[), ;, remaining, =, remaining, ., replace, (, '/', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, ',']
[., length, (, ), ), ;, remaining, =, remaining, ., replace, (, '/', ,, ' ', ), ;, remaining, =, remaining]
[=, remaining, ., replace, (, '/', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, ',', ,, ' ', )]
[;, remaining, =, remaining, ., replace, (, ',', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, '-', ,]
[., replace, (, '/', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, ',', ,, ' ', ), ;, remaining]
[,, ' ', ), ;, remaining, =, remaining, ., replace, (, ',', ,, ' ', ), ;, remaining, =, remaining, ., replace]
[), ;, remaining, =, remaining, ., replace, (, ',', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, '-']
[=, remaining, ., replace, (, ',', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, '-', ,, ' ', )]
[;, remaining, =, remaining, ., replace, (, '-', ,, ' ', ), ;, Year, year, =, Year, ., parseYear, (, remaining]
[., replace, (, ',', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, '-', ,, ' ', ), ;, Year]
[,, ' ', ), ;, remaining, =, remaining, ., replace, (, '-', ,, ' ', ), ;, Year, year, =, Year, .]
[), ;, remaining, =, remaining, ., replace, (, '-', ,, ' ', ), ;, Year, year, =, Year, ., parseYear, (]
[=, remaining, ., replace, (, '-', ,, ' ', ), ;, Year, year, =, Year, ., parseYear, (, remaining, ., trim]
[;, Year, year, =, Year, ., parseYear, (, remaining, ., trim, (, ), ), ;, Quarter, result, =, new, Quarter]
[., replace, (, '-', ,, ' ', ), ;, Year, year, =, Year, ., parseYear, (, remaining, ., trim, (, )]
[,, ' ', ), ;, Year, year, =, Year, ., parseYear, (, remaining, ., trim, (, ), ), ;, Quarter, result]
[), ;, Year, year, =, Year, ., parseYear, (, remaining, ., trim, (, ), ), ;, Quarter, result, =, new]
[;, Quarter, result, =, new, Quarter, (, quarter, ,, year, ), ;, return, result, ;, }, }]
[., parseYear, (, remaining, ., trim, (, ), ), ;, Quarter, result, =, new, Quarter, (, quarter, ,, year, )]
[), ;, Quarter, result, =, new, Quarter, (, quarter, ,, year, ), ;, return, result, ;, }, }]
[., trim, (, ), ), ;, Quarter, result, =, new, Quarter, (, quarter, ,, year, ), ;, return, result, ;]
[;, return, result, ;, }, }]
[,, year, ), ;, return, result, ;, }, }]
[), ;, return, result, ;, }, }]
[;, }, }]
