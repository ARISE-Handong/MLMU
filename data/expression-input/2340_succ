[;, public, IntervalBarRenderer, (, ), {, super, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, return]
[;, public, IntervalBarRenderer, (, ), {, super, (, ), ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, return]
[;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryAxis, domainAxis]
[,, true, ), ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot]
[), ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryAxis]
[), {, IntervalCategoryDataset, d, =, (, IntervalCategoryDataset, ), dataset, ;, drawInterval, (, g2, ,, state, ,, dataArea, ,, plot, ,]
[instanceof, IntervalCategoryDataset, ), {, IntervalCategoryDataset, d, =, (, IntervalCategoryDataset, ), dataset, ;, drawInterval, (, g2, ,, state, ,, dataArea, ,]
[;, drawInterval, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, d, ,, row, ,, column]
[;, drawInterval, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, d, ,, row, ,, column]
[;, }, else, {, super, ., drawItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,]
[,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, d, ,, row, ,, column, ,, selected, ), ;]
[,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, d, ,, row, ,, column, ,, selected, ), ;, }, else]
[,, plot, ,, domainAxis, ,, rangeAxis, ,, d, ,, row, ,, column, ,, selected, ), ;, }, else, {, super]
[,, domainAxis, ,, rangeAxis, ,, d, ,, row, ,, column, ,, selected, ), ;, }, else, {, super, ., drawItem]
[,, rangeAxis, ,, d, ,, row, ,, column, ,, selected, ), ;, }, else, {, super, ., drawItem, (, g2]
[,, d, ,, row, ,, column, ,, selected, ), ;, }, else, {, super, ., drawItem, (, g2, ,, state]
[,, row, ,, column, ,, selected, ), ;, }, else, {, super, ., drawItem, (, g2, ,, state, ,, dataArea]
[,, column, ,, selected, ), ;, }, else, {, super, ., drawItem, (, g2, ,, state, ,, dataArea, ,, plot]
[,, selected, ), ;, }, else, {, super, ., drawItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis]
[), ;, }, else, {, super, ., drawItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis]
[;, }, }, protected, void, drawInterval, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryAxis]
[., drawItem, (, g2, ,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column]
[,, state, ,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ,, pass]
[,, dataArea, ,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ,, pass, ), ;]
[,, plot, ,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ,, pass, ), ;, }, }]
[,, domainAxis, ,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ,, pass, ), ;, }, }, protected, void]
[,, rangeAxis, ,, dataset, ,, row, ,, column, ,, selected, ,, pass, ), ;, }, }, protected, void, drawInterval, (]
[,, dataset, ,, row, ,, column, ,, selected, ,, pass, ), ;, }, }, protected, void, drawInterval, (, Graphics2D, g2]
[,, row, ,, column, ,, selected, ,, pass, ), ;, }, }, protected, void, drawInterval, (, Graphics2D, g2, ,, CategoryItemRendererState]
[,, column, ,, selected, ,, pass, ), ;, }, }, protected, void, drawInterval, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,]
[,, selected, ,, pass, ), ;, }, }, protected, void, drawInterval, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea]
[,, pass, ), ;, }, }, protected, void, drawInterval, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot]
[), ;, }, }, protected, void, drawInterval, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,]
[;, if, (, visibleRow, <, 0, ), {, return, ;, }, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), >=]
[., getVisibleSeriesIndex, (, row, ), ;, if, (, visibleRow, <, 0, ), {, return, ;, }, int, seriesCount, =, state]
[), ;, if, (, visibleRow, <, 0, ), {, return, ;, }, int, seriesCount, =, state, ., getVisibleSeriesCount, (, )]
[), {, return, ;, }, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (]
[<, 0, ), {, return, ;, }, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state, .]
[), {, return, ;, }, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (]
[;, int, categoryCount, =, getColumnCount, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, rectX, =]
[?, state, ., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, PlotOrientation, orientation]
[>=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;]
[., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =]
[?, state, ., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, PlotOrientation, orientation]
[:, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, )]
[., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, PlotOrientation, orientation, =, plot]
[;, int, categoryCount, =, getColumnCount, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, rectX, =]
[;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, rectX, =, 0.0, ;, double, rectY, =, 0.0, ;]
[;, double, rectX, =, 0.0, ;, double, rectY, =, 0.0, ;, RectangleEdge, domainAxisLocation, =, plot, ., getDomainAxisEdge, (, ), ;]
[., getOrientation, (, ), ;, double, rectX, =, 0.0, ;, double, rectY, =, 0.0, ;, RectangleEdge, domainAxisLocation, =, plot, .]
[;, double, rectY, =, 0.0, ;, RectangleEdge, domainAxisLocation, =, plot, ., getDomainAxisEdge, (, ), ;, RectangleEdge, rangeAxisLocation, =, plot, .]
[;, RectangleEdge, domainAxisLocation, =, plot, ., getDomainAxisEdge, (, ), ;, RectangleEdge, rangeAxisLocation, =, plot, ., getRangeAxisEdge, (, ), ;, Number]
[;, RectangleEdge, rangeAxisLocation, =, plot, ., getRangeAxisEdge, (, ), ;, Number, value0, =, dataset, ., getEndValue, (, row, ,, column]
[., getDomainAxisEdge, (, ), ;, RectangleEdge, rangeAxisLocation, =, plot, ., getRangeAxisEdge, (, ), ;, Number, value0, =, dataset, ., getEndValue]
[;, Number, value0, =, dataset, ., getEndValue, (, row, ,, column, ), ;, if, (, value0, ==, null, ), {]
[., getRangeAxisEdge, (, ), ;, Number, value0, =, dataset, ., getEndValue, (, row, ,, column, ), ;, if, (, value0]
[;, if, (, value0, ==, null, ), {, return, ;, }, double, java2dValue0, =, rangeAxis, ., valueToJava2D, (, value0, .]
[., getEndValue, (, row, ,, column, ), ;, if, (, value0, ==, null, ), {, return, ;, }, double, java2dValue0]
[,, column, ), ;, if, (, value0, ==, null, ), {, return, ;, }, double, java2dValue0, =, rangeAxis, ., valueToJava2D]
[), ;, if, (, value0, ==, null, ), {, return, ;, }, double, java2dValue0, =, rangeAxis, ., valueToJava2D, (, value0]
[), {, return, ;, }, double, java2dValue0, =, rangeAxis, ., valueToJava2D, (, value0, ., doubleValue, (, ), ,, dataArea, ,]
[==, null, ), {, return, ;, }, double, java2dValue0, =, rangeAxis, ., valueToJava2D, (, value0, ., doubleValue, (, ), ,]
[), {, return, ;, }, double, java2dValue0, =, rangeAxis, ., valueToJava2D, (, value0, ., doubleValue, (, ), ,, dataArea, ,]
[;, Number, value1, =, dataset, ., getStartValue, (, row, ,, column, ), ;, if, (, value1, ==, null, ), {]
[., valueToJava2D, (, value0, ., doubleValue, (, ), ,, dataArea, ,, rangeAxisLocation, ), ;, Number, value1, =, dataset, ., getStartValue]
[,, dataArea, ,, rangeAxisLocation, ), ;, Number, value1, =, dataset, ., getStartValue, (, row, ,, column, ), ;, if, (]
[., doubleValue, (, ), ,, dataArea, ,, rangeAxisLocation, ), ;, Number, value1, =, dataset, ., getStartValue, (, row, ,, column]
[,, rangeAxisLocation, ), ;, Number, value1, =, dataset, ., getStartValue, (, row, ,, column, ), ;, if, (, value1, ==]
[), ;, Number, value1, =, dataset, ., getStartValue, (, row, ,, column, ), ;, if, (, value1, ==, null, )]
[;, if, (, value1, ==, null, ), {, return, ;, }, double, java2dValue1, =, rangeAxis, ., valueToJava2D, (, value1, .]
[., getStartValue, (, row, ,, column, ), ;, if, (, value1, ==, null, ), {, return, ;, }, double, java2dValue1]
[,, column, ), ;, if, (, value1, ==, null, ), {, return, ;, }, double, java2dValue1, =, rangeAxis, ., valueToJava2D]
[), ;, if, (, value1, ==, null, ), {, return, ;, }, double, java2dValue1, =, rangeAxis, ., valueToJava2D, (, value1]
[), {, return, ;, }, double, java2dValue1, =, rangeAxis, ., valueToJava2D, (, value1, ., doubleValue, (, ), ,, dataArea, ,]
[==, null, ), {, return, ;, }, double, java2dValue1, =, rangeAxis, ., valueToJava2D, (, value1, ., doubleValue, (, ), ,]
[), {, return, ;, }, double, java2dValue1, =, rangeAxis, ., valueToJava2D, (, value1, ., doubleValue, (, ), ,, dataArea, ,]
[;, if, (, java2dValue1, <, java2dValue0, ), {, double, temp, =, java2dValue1, ;, java2dValue1, =, java2dValue0, ;, java2dValue0, =, temp]
[., valueToJava2D, (, value1, ., doubleValue, (, ), ,, dataArea, ,, rangeAxisLocation, ), ;, if, (, java2dValue1, <, java2dValue0, )]
[,, dataArea, ,, rangeAxisLocation, ), ;, if, (, java2dValue1, <, java2dValue0, ), {, double, temp, =, java2dValue1, ;, java2dValue1, =]
[., doubleValue, (, ), ,, dataArea, ,, rangeAxisLocation, ), ;, if, (, java2dValue1, <, java2dValue0, ), {, double, temp, =]
[,, rangeAxisLocation, ), ;, if, (, java2dValue1, <, java2dValue0, ), {, double, temp, =, java2dValue1, ;, java2dValue1, =, java2dValue0, ;]
[), ;, if, (, java2dValue1, <, java2dValue0, ), {, double, temp, =, java2dValue1, ;, java2dValue1, =, java2dValue0, ;, java2dValue0, =]
[), {, double, temp, =, java2dValue1, ;, java2dValue1, =, java2dValue0, ;, java2dValue0, =, temp, ;, }, double, rectWidth, =, state]
[<, java2dValue0, ), {, double, temp, =, java2dValue1, ;, java2dValue1, =, java2dValue0, ;, java2dValue0, =, temp, ;, }, double, rectWidth]
[), {, double, temp, =, java2dValue1, ;, java2dValue1, =, java2dValue0, ;, java2dValue0, =, temp, ;, }, double, rectWidth, =, state]
[;, java2dValue1, =, java2dValue0, ;, java2dValue0, =, temp, ;, }, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double]
[=, java2dValue0, ;, java2dValue0, =, temp, ;, }, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =]
[;, java2dValue0, =, temp, ;, }, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =, Math, .]
[=, temp, ;, }, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., abs, (]
[;, }, double, rectWidth, =, state, ., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., abs, (, java2dValue1, -]
[;, double, rectHeight, =, Math, ., abs, (, java2dValue1, -, java2dValue0, ), ;, RectangleEdge, barBase, =, RectangleEdge, ., LEFT, ;]
[., getBarWidth, (, ), ;, double, rectHeight, =, Math, ., abs, (, java2dValue1, -, java2dValue0, ), ;, RectangleEdge, barBase, =]
[;, RectangleEdge, barBase, =, RectangleEdge, ., LEFT, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, rectY, =, domainAxis]
[., abs, (, java2dValue1, -, java2dValue0, ), ;, RectangleEdge, barBase, =, RectangleEdge, ., LEFT, ;, if, (, orientation, ==, PlotOrientation]
[), ;, RectangleEdge, barBase, =, RectangleEdge, ., LEFT, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, rectY, =]
[-, java2dValue0, ), ;, RectangleEdge, barBase, =, RectangleEdge, ., LEFT, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[), ;, RectangleEdge, barBase, =, RectangleEdge, ., LEFT, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, rectY, =]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, rectY, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (]
[., LEFT, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, rectY, =, domainAxis, ., getCategoryStart, (, column, ,]
[), {, rectY, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, domainAxisLocation, ), ;, if]
[==, PlotOrientation, ., HORIZONTAL, ), {, rectY, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[), {, rectY, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, domainAxisLocation, ), ;, if]
[., HORIZONTAL, ), {, rectY, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, domainAxisLocation, )]
[=, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, domainAxisLocation, ), ;, if, (, seriesCount, >]
[;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getHeight, (, ), *, getItemMargin, (, )]
[., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, domainAxisLocation, ), ;, if, (, seriesCount, >, 1, )]
[,, getColumnCount, (, ), ,, dataArea, ,, domainAxisLocation, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =]
[,, dataArea, ,, domainAxisLocation, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getHeight, (]
[,, domainAxisLocation, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getHeight, (, ), *]
[), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getHeight, (, ), *, getItemMargin, (]
[), {, double, seriesGap, =, dataArea, ., getHeight, (, ), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount]
[>, 1, ), {, double, seriesGap, =, dataArea, ., getHeight, (, ), *, getItemMargin, (, ), /, (, categoryCount, *]
[), {, double, seriesGap, =, dataArea, ., getHeight, (, ), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount]
[;, rectY, =, rectY, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else, {]
[/, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, rectY, =, rectY, +, visibleRow, *, (, state, .]
[*, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, rectY, =, rectY, +, visibleRow]
[., getHeight, (, ), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, rectY]
[/, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, rectY, =, rectY, +, visibleRow, *, (, state, .]
[;, rectY, =, rectY, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else, {]
[), ;, rectY, =, rectY, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else]
[*, (, seriesCount, -, 1, ), ), ;, rectY, =, rectY, +, visibleRow, *, (, state, ., getBarWidth, (, )]
[), ;, rectY, =, rectY, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else]
[), ), ;, rectY, =, rectY, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }]
[-, 1, ), ), ;, rectY, =, rectY, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, )]
[), ), ;, rectY, =, rectY, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }]
[=, rectY, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else, {, rectY, =]
[;, }, else, {, rectY, =, rectY, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectX, =, java2dValue0]
[+, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else, {, rectY, =, rectY, +]
[;, }, else, {, rectY, =, rectY, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectX, =, java2dValue0]
[*, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else, {, rectY, =, rectY, +, visibleRow, *]
[;, }, else, {, rectY, =, rectY, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectX, =, java2dValue0]
[), ;, }, else, {, rectY, =, rectY, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectX, =]
[+, seriesGap, ), ;, }, else, {, rectY, =, rectY, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }]
[., getBarWidth, (, ), +, seriesGap, ), ;, }, else, {, rectY, =, rectY, +, visibleRow, *, state, ., getBarWidth]
[), ;, }, else, {, rectY, =, rectY, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectX, =]
[=, rectY, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectX, =, java2dValue0, ;, rectHeight, =, state, .]
[;, }, rectX, =, java2dValue0, ;, rectHeight, =, state, ., getBarWidth, (, ), ;, rectWidth, =, Math, ., abs, (]
[+, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectX, =, java2dValue0, ;, rectHeight, =, state, ., getBarWidth, (]
[;, }, rectX, =, java2dValue0, ;, rectHeight, =, state, ., getBarWidth, (, ), ;, rectWidth, =, Math, ., abs, (]
[*, state, ., getBarWidth, (, ), ;, }, rectX, =, java2dValue0, ;, rectHeight, =, state, ., getBarWidth, (, ), ;]
[;, }, rectX, =, java2dValue0, ;, rectHeight, =, state, ., getBarWidth, (, ), ;, rectWidth, =, Math, ., abs, (]
[., getBarWidth, (, ), ;, }, rectX, =, java2dValue0, ;, rectHeight, =, state, ., getBarWidth, (, ), ;, rectWidth, =]
[=, java2dValue0, ;, rectHeight, =, state, ., getBarWidth, (, ), ;, rectWidth, =, Math, ., abs, (, java2dValue1, -, java2dValue0]
[;, rectHeight, =, state, ., getBarWidth, (, ), ;, rectWidth, =, Math, ., abs, (, java2dValue1, -, java2dValue0, ), ;]
[=, state, ., getBarWidth, (, ), ;, rectWidth, =, Math, ., abs, (, java2dValue1, -, java2dValue0, ), ;, barBase, =]
[;, rectWidth, =, Math, ., abs, (, java2dValue1, -, java2dValue0, ), ;, barBase, =, RectangleEdge, ., LEFT, ;, }, else]
[., getBarWidth, (, ), ;, rectWidth, =, Math, ., abs, (, java2dValue1, -, java2dValue0, ), ;, barBase, =, RectangleEdge, .]
[=, Math, ., abs, (, java2dValue1, -, java2dValue0, ), ;, barBase, =, RectangleEdge, ., LEFT, ;, }, else, if, (]
[;, barBase, =, RectangleEdge, ., LEFT, ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, rectX, =]
[., abs, (, java2dValue1, -, java2dValue0, ), ;, barBase, =, RectangleEdge, ., LEFT, ;, }, else, if, (, orientation, ==]
[), ;, barBase, =, RectangleEdge, ., LEFT, ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, rectX]
[-, java2dValue0, ), ;, barBase, =, RectangleEdge, ., LEFT, ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[), ;, barBase, =, RectangleEdge, ., LEFT, ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, rectX]
[=, RectangleEdge, ., LEFT, ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, rectX, =, domainAxis, .]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, rectX, =, domainAxis, ., getCategoryStart, (, column, ,]
[., LEFT, ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, rectX, =, domainAxis, ., getCategoryStart, (]
[), {, rectX, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, domainAxisLocation, ), ;, if]
[==, PlotOrientation, ., VERTICAL, ), {, rectX, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[), {, rectX, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, domainAxisLocation, ), ;, if]
[., VERTICAL, ), {, rectX, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, domainAxisLocation, )]
[=, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, domainAxisLocation, ), ;, if, (, seriesCount, >]
[;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getWidth, (, ), *, getItemMargin, (, )]
[., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, domainAxisLocation, ), ;, if, (, seriesCount, >, 1, )]
[,, getColumnCount, (, ), ,, dataArea, ,, domainAxisLocation, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =]
[,, dataArea, ,, domainAxisLocation, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getWidth, (]
[,, domainAxisLocation, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getWidth, (, ), *]
[), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, dataArea, ., getWidth, (, ), *, getItemMargin, (]
[), {, double, seriesGap, =, dataArea, ., getWidth, (, ), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount]
[>, 1, ), {, double, seriesGap, =, dataArea, ., getWidth, (, ), *, getItemMargin, (, ), /, (, categoryCount, *]
[), {, double, seriesGap, =, dataArea, ., getWidth, (, ), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount]
[;, rectX, =, rectX, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else, {]
[/, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, rectX, =, rectX, +, visibleRow, *, (, state, .]
[*, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, rectX, =, rectX, +, visibleRow]
[., getWidth, (, ), *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, rectX]
[/, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, rectX, =, rectX, +, visibleRow, *, (, state, .]
[;, rectX, =, rectX, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else, {]
[), ;, rectX, =, rectX, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else]
[*, (, seriesCount, -, 1, ), ), ;, rectX, =, rectX, +, visibleRow, *, (, state, ., getBarWidth, (, )]
[), ;, rectX, =, rectX, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else]
[), ), ;, rectX, =, rectX, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }]
[-, 1, ), ), ;, rectX, =, rectX, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, )]
[), ), ;, rectX, =, rectX, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }]
[=, rectX, +, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else, {, rectX, =]
[;, }, else, {, rectX, =, rectX, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectY, =, java2dValue0]
[+, visibleRow, *, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else, {, rectX, =, rectX, +]
[;, }, else, {, rectX, =, rectX, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectY, =, java2dValue0]
[*, (, state, ., getBarWidth, (, ), +, seriesGap, ), ;, }, else, {, rectX, =, rectX, +, visibleRow, *]
[;, }, else, {, rectX, =, rectX, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectY, =, java2dValue0]
[), ;, }, else, {, rectX, =, rectX, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectY, =]
[+, seriesGap, ), ;, }, else, {, rectX, =, rectX, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }]
[., getBarWidth, (, ), +, seriesGap, ), ;, }, else, {, rectX, =, rectX, +, visibleRow, *, state, ., getBarWidth]
[), ;, }, else, {, rectX, =, rectX, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectY, =]
[=, rectX, +, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectY, =, java2dValue0, ;, barBase, =, RectangleEdge, .]
[;, }, rectY, =, java2dValue0, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double]
[+, visibleRow, *, state, ., getBarWidth, (, ), ;, }, rectY, =, java2dValue0, ;, barBase, =, RectangleEdge, ., BOTTOM, ;]
[;, }, rectY, =, java2dValue0, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double]
[*, state, ., getBarWidth, (, ), ;, }, rectY, =, java2dValue0, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, Rectangle2D]
[;, }, rectY, =, java2dValue0, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double]
[., getBarWidth, (, ), ;, }, rectY, =, java2dValue0, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, Rectangle2D, bar, =]
[=, java2dValue0, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,]
[;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, rectY, ,]
[=, RectangleEdge, ., BOTTOM, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, rectY, ,, rectWidth, ,]
[;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, rectY, ,, rectWidth, ,, rectHeight, ), ;, BarPainter]
[., BOTTOM, ;, }, Rectangle2D, bar, =, new, Rectangle2D, ., Double, (, rectX, ,, rectY, ,, rectWidth, ,, rectHeight, )]
[;, BarPainter, painter, =, getBarPainter, (, ), ;, if, (, getShadowsVisible, (, ), ), {, painter, ., paintBarShadow, (, g2]
[,, rectY, ,, rectWidth, ,, rectHeight, ), ;, BarPainter, painter, =, getBarPainter, (, ), ;, if, (, getShadowsVisible, (, )]
[,, rectWidth, ,, rectHeight, ), ;, BarPainter, painter, =, getBarPainter, (, ), ;, if, (, getShadowsVisible, (, ), ), {]
[,, rectHeight, ), ;, BarPainter, painter, =, getBarPainter, (, ), ;, if, (, getShadowsVisible, (, ), ), {, painter, .]
[), ;, BarPainter, painter, =, getBarPainter, (, ), ;, if, (, getShadowsVisible, (, ), ), {, painter, ., paintBarShadow, (]
[;, if, (, getShadowsVisible, (, ), ), {, painter, ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,]
[), {, painter, ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,]
[;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,]
[., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, false, ), ;]
[,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, false, ), ;, }, getBarPainter, (, )]
[,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, false, ), ;, }, getBarPainter, (, ), ., paintBar]
[,, column, ,, selected, ,, bar, ,, barBase, ,, false, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2]
[,, selected, ,, bar, ,, barBase, ,, false, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this]
[,, bar, ,, barBase, ,, false, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row]
[,, barBase, ,, false, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column]
[,, false, ), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected]
[), ;, }, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar]
[;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible]
[., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator]
[,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row]
[,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column]
[,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected]
[,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;]
[,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=]
[), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&]
[;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2]
[,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, )]
[,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {]
[), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[!=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected]
[,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator]
[), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar]
[;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, false, ), ;, }, EntityCollection]
[,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, false, ), ;, }, EntityCollection, entities, =]
[,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, false, ), ;, }, EntityCollection, entities, =, state, .]
[,, column, ,, selected, ,, generator, ,, bar, ,, false, ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (]
[,, selected, ,, generator, ,, bar, ,, false, ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;]
[,, generator, ,, bar, ,, false, ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[,, bar, ,, false, ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=]
[,, false, ), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, )]
[), ;, }, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, public]
[!=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, public]
[;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj]
[,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {]
[,, row, ,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, column, ,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[,, selected, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, IntervalBarRenderer, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, IntervalBarRenderer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, IntervalBarRenderer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, IntervalBarRenderer, ), ), {, return, false, ;, }, return, super, ., equals]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[instanceof, IntervalBarRenderer, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, }]
[;, }, return, super, ., equals, (, obj, ), ;, }, }]
[;, }, }]
[., equals, (, obj, ), ;, }, }]
[), ;, }, }]
