[jfree, ., chart, ., util, ., Size2D, ;, public, class, TextLine, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[implements, Serializable, {, private, static, final, long, serialVersionUID, =, 7100085690160465444L, ;, private, List, fragments, ;, public, TextLine, (, ), {]
[implements, Serializable, {, private, static, final, long, serialVersionUID, =, 7100085690160465444L, ;, private, List, fragments, ;, public, TextLine, (, ), {]
[static, final, long, serialVersionUID, =, 7100085690160465444L, ;, private, List, fragments, ;, public, TextLine, (, ), {, this, ., fragments, =]
[=, new, java, ., util, ., ArrayList, (, ), ;, }, public, TextLine, (, String, text, ), {, this, (]
[java, ., util, ., ArrayList, (, ), ;, }, public, TextLine, (, String, text, ), {, this, (, text, ,]
[java, ., util, ., ArrayList, (, ), ;, }, public, TextLine, (, String, text, ), {, this, (, text, ,]
[this, (, text, ,, TextFragment, ., DEFAULT_FONT, ), ;, }, public, TextLine, (, String, text, ,, Font, font, ), {]
[this, (, text, ,, TextFragment, ., DEFAULT_FONT, ), ;, }, public, TextLine, (, String, text, ,, Font, font, ), {]
[TextFragment, ., DEFAULT_FONT, ), ;, }, public, TextLine, (, String, text, ,, Font, font, ), {, this, ., fragments, =]
[Font, font, ), {, this, ., fragments, =, new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =]
[{, this, ., fragments, =, new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (]
[., fragments, =, new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,]
[new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,, font, ), ;]
[new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,, font, ), ;]
[new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,, font, ), ;]
[(, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,, font, ), ;, this, ., fragments, ., add, (]
[(, fragment, ), ;, }, public, TextLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {, if, (]
[(, fragment, ), ;, }, public, TextLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {, if, (]
[), ;, }, public, TextLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {, if, (, text, ==]
[TextLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {, if, (, text, ==, null, ), {, throw]
[text, ,, Font, font, ,, Paint, paint, ), {, if, (, text, ==, null, ), {, throw, new, IllegalArgumentException, (]
[paint, ), {, if, (, text, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, if, (]
[paint, ), {, if, (, text, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, if, (]
[{, if, (, text, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, if, (, font, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, if, (, font, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), ;, }, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, if, (]
[), ;, }, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, if, (]
[}, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, if, (, paint, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, if, (, paint, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, "Null 'font' argument.", ), ;, }, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, "Null 'font' argument.", ), ;, }, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[}, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., fragments, =]
["Null 'paint' argument.", ), ;, }, this, ., fragments, =, new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =]
[}, this, ., fragments, =, new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (]
[., fragments, =, new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,]
[=, new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,, font, ,]
[., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,, font, ,, paint, ), ;]
[., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,, font, ,, paint, ), ;]
[., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,, font, ,, paint, ), ;]
[;, TextFragment, fragment, =, new, TextFragment, (, text, ,, font, ,, paint, ), ;, this, ., fragments, ., add, (]
[), ;, this, ., fragments, ., add, (, fragment, ), ;, }, public, void, addFragment, (, TextFragment, fragment, ), {]
[), ;, this, ., fragments, ., add, (, fragment, ), ;, }, public, void, addFragment, (, TextFragment, fragment, ), {]
[), ;, this, ., fragments, ., add, (, fragment, ), ;, }, public, void, addFragment, (, TextFragment, fragment, ), {]
[add, (, fragment, ), ;, }, public, void, addFragment, (, TextFragment, fragment, ), {, this, ., fragments, ., add, (]
[), {, this, ., fragments, ., add, (, fragment, ), ;, }, public, void, removeFragment, (, TextFragment, fragment, ), {]
[), {, this, ., fragments, ., add, (, fragment, ), ;, }, public, void, removeFragment, (, TextFragment, fragment, ), {]
[), {, this, ., fragments, ., add, (, fragment, ), ;, }, public, void, removeFragment, (, TextFragment, fragment, ), {]
[add, (, fragment, ), ;, }, public, void, removeFragment, (, TextFragment, fragment, ), {, this, ., fragments, ., remove, (]
[,, float, anchorY, ,, TextAnchor, anchor, ,, float, rotateX, ,, float, rotateY, ,, double, angle, ), {, float, x, =]
[anchor, ,, float, rotateX, ,, float, rotateY, ,, double, angle, ), {, float, x, =, anchorX, ;, float, yOffset, =]
[float, rotateX, ,, float, rotateY, ,, double, angle, ), {, float, x, =, anchorX, ;, float, yOffset, =, calculateBaselineOffset, (]
[,, float, rotateY, ,, double, angle, ), {, float, x, =, anchorX, ;, float, yOffset, =, calculateBaselineOffset, (, g2, ,]
[), {, float, x, =, anchorX, ;, float, yOffset, =, calculateBaselineOffset, (, g2, ,, anchor, ), ;, Iterator, iterator, =]
[), {, float, x, =, anchorX, ;, float, yOffset, =, calculateBaselineOffset, (, g2, ,, anchor, ), ;, Iterator, iterator, =]
[), {, float, x, =, anchorX, ;, float, yOffset, =, calculateBaselineOffset, (, g2, ,, anchor, ), ;, Iterator, iterator, =]
[calculateBaselineOffset, (, g2, ,, anchor, ), ;, Iterator, iterator, =, this, ., fragments, ., iterator, (, ), ;, while, (]
[calculateBaselineOffset, (, g2, ,, anchor, ), ;, Iterator, iterator, =, this, ., fragments, ., iterator, (, ), ;, while, (]
[this, ., fragments, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, )]
[hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, Size2D, d, =]
[hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, Size2D, d, =]
[{, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, Size2D, d, =, fragment, ., calculateDimensions, (]
[=, (, TextFragment, ), iterator, ., next, (, ), ;, Size2D, d, =, fragment, ., calculateDimensions, (, g2, ), ;]
[=, (, TextFragment, ), iterator, ., next, (, ), ;, Size2D, d, =, fragment, ., calculateDimensions, (, g2, ), ;]
[iterator, ., next, (, ), ;, Size2D, d, =, fragment, ., calculateDimensions, (, g2, ), ;, fragment, ., draw, (]
[next, (, ), ;, Size2D, d, =, fragment, ., calculateDimensions, (, g2, ), ;, fragment, ., draw, (, g2, ,]
[), ;, Size2D, d, =, fragment, ., calculateDimensions, (, g2, ), ;, fragment, ., draw, (, g2, ,, x, ,]
[), ;, Size2D, d, =, fragment, ., calculateDimensions, (, g2, ), ;, fragment, ., draw, (, g2, ,, x, ,]
[Size2D, d, =, fragment, ., calculateDimensions, (, g2, ), ;, fragment, ., draw, (, g2, ,, x, ,, anchorY, +]
[=, fragment, ., calculateDimensions, (, g2, ), ;, fragment, ., draw, (, g2, ,, x, ,, anchorY, +, yOffset, ,]
[=, fragment, ., calculateDimensions, (, g2, ), ;, fragment, ., draw, (, g2, ,, x, ,, anchorY, +, yOffset, ,]
[(, g2, ), ;, fragment, ., draw, (, g2, ,, x, ,, anchorY, +, yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,]
[), ;, fragment, ., draw, (, g2, ,, x, ,, anchorY, +, yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,]
[fragment, ., draw, (, g2, ,, x, ,, anchorY, +, yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,]
[(, g2, ,, x, ,, anchorY, +, yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;]
[,, x, ,, anchorY, +, yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, x, =]
[,, x, ,, anchorY, +, yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, x, =]
[,, anchorY, +, yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, x, =, x, +]
[yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, x, =, x, +, (, float, )]
[yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, x, =, x, +, (, float, )]
[), d, ., getWidth, (, ), ;, }, }, public, Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =]
[), ;, }, }, public, Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height, =]
[Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height, =, 0.0, ;, Iterator, iterator, =]
[Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height, =, 0.0, ;, Iterator, iterator, =]
[Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height, =, 0.0, ;, Iterator, iterator, =]
[0.0, ;, double, height, =, 0.0, ;, Iterator, iterator, =, this, ., fragments, ., iterator, (, ), ;, while, (]
[0.0, ;, double, height, =, 0.0, ;, Iterator, iterator, =, this, ., fragments, ., iterator, (, ), ;, while, (]
[this, ., fragments, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, )]
[hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, Size2D, dimension, =]
[hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, Size2D, dimension, =]
[{, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, Size2D, dimension, =, fragment, ., calculateDimensions, (]
[=, (, TextFragment, ), iterator, ., next, (, ), ;, Size2D, dimension, =, fragment, ., calculateDimensions, (, g2, ), ;]
[TextFragment, ), iterator, ., next, (, ), ;, Size2D, dimension, =, fragment, ., calculateDimensions, (, g2, ), ;, width, =]
[TextFragment, ), iterator, ., next, (, ), ;, Size2D, dimension, =, fragment, ., calculateDimensions, (, g2, ), ;, width, =]
[iterator, ., next, (, ), ;, Size2D, dimension, =, fragment, ., calculateDimensions, (, g2, ), ;, width, =, width, +]
[iterator, ., next, (, ), ;, Size2D, dimension, =, fragment, ., calculateDimensions, (, g2, ), ;, width, =, width, +]
[Size2D, dimension, =, fragment, ., calculateDimensions, (, g2, ), ;, width, =, width, +, dimension, ., getWidth, (, ), ;]
[=, fragment, ., calculateDimensions, (, g2, ), ;, width, =, width, +, dimension, ., getWidth, (, ), ;, height, =]
[=, fragment, ., calculateDimensions, (, g2, ), ;, width, =, width, +, dimension, ., getWidth, (, ), ;, height, =]
[(, g2, ), ;, width, =, width, +, dimension, ., getWidth, (, ), ;, height, =, Math, ., max, (]
[), ;, width, =, width, +, dimension, ., getWidth, (, ), ;, height, =, Math, ., max, (, height, ,]
[), ;, width, =, width, +, dimension, ., getWidth, (, ), ;, height, =, Math, ., max, (, height, ,]
[(, ), ;, height, =, Math, ., max, (, height, ,, dimension, ., getHeight, (, ), ), ;, }, return]
[height, =, Math, ., max, (, height, ,, dimension, ., getHeight, (, ), ), ;, }, return, new, Size2D, (]
[Math, ., max, (, height, ,, dimension, ., getHeight, (, ), ), ;, }, return, new, Size2D, (, width, ,]
[}, return, new, Size2D, (, width, ,, height, ), ;, }, public, TextFragment, getFirstTextFragment, (, ), {, TextFragment, result, =]
[(, width, ,, height, ), ;, }, public, TextFragment, getFirstTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (]
[(, width, ,, height, ), ;, }, public, TextFragment, getFirstTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (]
[(, width, ,, height, ), ;, }, public, TextFragment, getFirstTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (]
[(, width, ,, height, ), ;, }, public, TextFragment, getFirstTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (]
[TextFragment, getFirstTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (, this, ., fragments, ., size, (, ), >]
[), {, TextFragment, result, =, null, ;, if, (, this, ., fragments, ., size, (, ), >, 0, ), {]
[TextFragment, result, =, null, ;, if, (, this, ., fragments, ., size, (, ), >, 0, ), {, result, =]
[null, ;, if, (, this, ., fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, )]
[null, ;, if, (, this, ., fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, )]
[null, ;, if, (, this, ., fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, )]
[fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (]
[>, 0, ), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (, 0, ), ;, }, return]
[., get, (, 0, ), ;, }, return, result, ;, }, public, TextFragment, getLastTextFragment, (, ), {, TextFragment, result, =]
[), ;, }, return, result, ;, }, public, TextFragment, getLastTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (]
[), ;, }, return, result, ;, }, public, TextFragment, getLastTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (]
[), ;, }, return, result, ;, }, public, TextFragment, getLastTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (]
[), ;, }, return, result, ;, }, public, TextFragment, getLastTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (]
[TextFragment, getLastTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (, this, ., fragments, ., size, (, ), >]
[), {, TextFragment, result, =, null, ;, if, (, this, ., fragments, ., size, (, ), >, 0, ), {]
[TextFragment, result, =, null, ;, if, (, this, ., fragments, ., size, (, ), >, 0, ), {, result, =]
[null, ;, if, (, this, ., fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, )]
[null, ;, if, (, this, ., fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, )]
[null, ;, if, (, this, ., fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, )]
[fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (]
[fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (]
[fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (]
[fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (]
[{, result, =, (, TextFragment, ), this, ., fragments, ., get, (, this, ., fragments, ., size, (, ), -]
[), this, ., fragments, ., get, (, this, ., fragments, ., size, (, ), -, 1, ), ;, }, return]
[;, }, return, result, ;, }, private, float, calculateBaselineOffset, (, Graphics2D, g2, ,, TextAnchor, anchor, ), {, float, result, =]
[}, private, float, calculateBaselineOffset, (, Graphics2D, g2, ,, TextAnchor, anchor, ), {, float, result, =, 0.0f, ;, Iterator, iterator, =]
[}, private, float, calculateBaselineOffset, (, Graphics2D, g2, ,, TextAnchor, anchor, ), {, float, result, =, 0.0f, ;, Iterator, iterator, =]
[}, private, float, calculateBaselineOffset, (, Graphics2D, g2, ,, TextAnchor, anchor, ), {, float, result, =, 0.0f, ;, Iterator, iterator, =]
[), {, float, result, =, 0.0f, ;, Iterator, iterator, =, this, ., fragments, ., iterator, (, ), ;, while, (]
[), {, float, result, =, 0.0f, ;, Iterator, iterator, =, this, ., fragments, ., iterator, (, ), ;, while, (]
[this, ., fragments, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, )]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, )]
[(, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;]
[., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, result, =]
[., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, result, =]
[), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, result, =, Math, ., max, (]
[TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, result, =, Math, ., max, (, result, ,]
[TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, result, =, Math, ., max, (, result, ,]
[TextFragment, ), iterator, ., next, (, ), ;, result, =, Math, ., max, (, result, ,, fragment, ., calculateBaselineOffset, (]
[iterator, ., next, (, ), ;, result, =, Math, ., max, (, result, ,, fragment, ., calculateBaselineOffset, (, g2, ,]
[result, =, Math, ., max, (, result, ,, fragment, ., calculateBaselineOffset, (, g2, ,, anchor, ), ), ;, }, return]
[,, anchor, ), ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, anchor, ), ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null, ), {, return, false, ;, }, if, (]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null, ), {, return, false, ;, }, if, (]
[(, Object, obj, ), {, if, (, obj, ==, null, ), {, return, false, ;, }, if, (, obj, ==]
[{, if, (, obj, ==, null, ), {, return, false, ;, }, if, (, obj, ==, this, ), {, return]
[null, ), {, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[null, ), {, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[(, obj, ==, this, ), {, return, true, ;, }, if, (, obj, instanceof, TextLine, ), {, TextLine, line, =]
[this, ), {, return, true, ;, }, if, (, obj, instanceof, TextLine, ), {, TextLine, line, =, (, TextLine, )]
[return, true, ;, }, if, (, obj, instanceof, TextLine, ), {, TextLine, line, =, (, TextLine, ), obj, ;, return]
[return, true, ;, }, if, (, obj, instanceof, TextLine, ), {, TextLine, line, =, (, TextLine, ), obj, ;, return]
[return, true, ;, }, if, (, obj, instanceof, TextLine, ), {, TextLine, line, =, (, TextLine, ), obj, ;, return]
[obj, instanceof, TextLine, ), {, TextLine, line, =, (, TextLine, ), obj, ;, return, this, ., fragments, ., equals, (]
[obj, instanceof, TextLine, ), {, TextLine, line, =, (, TextLine, ), obj, ;, return, this, ., fragments, ., equals, (]
[=, (, TextLine, ), obj, ;, return, this, ., fragments, ., equals, (, line, ., fragments, ), ;, }, return]
[., equals, (, line, ., fragments, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return]
[equals, (, line, ., fragments, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (]
[equals, (, line, ., fragments, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (]
[equals, (, line, ., fragments, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (]
[equals, (, line, ., fragments, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (]
[fragments, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., fragments, !=]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., fragments, !=, null, ?]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., fragments, !=, null, ?]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., fragments, !=, null, ?]
[hashCode, (, ), {, return, (, this, ., fragments, !=, null, ?, this, ., fragments, ., hashCode, (, ), :]
