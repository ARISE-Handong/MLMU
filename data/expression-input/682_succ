[;, @, Deprecated, public, static, final, int, MULTIPLICATIVE_MODE, =, 0, ;, private, static, final, long, serialVersionUID, =, -, 3485529955529426875L, ;]
[;, private, static, final, long, serialVersionUID, =, -, 3485529955529426875L, ;, private, static, final, int, DEFAULT_INITIAL_CAPACITY, =, 16, ;, private, static]
[;, private, static, final, int, DEFAULT_INITIAL_CAPACITY, =, 16, ;, private, static, final, double, DEFAULT_EXPANSION_FACTOR, =, 2.0, ;, private, static, final]
[;, private, static, final, int, DEFAULT_INITIAL_CAPACITY, =, 16, ;, private, static, final, double, DEFAULT_EXPANSION_FACTOR, =, 2.0, ;, private, static, final]
[;, private, static, final, double, DEFAULT_EXPANSION_FACTOR, =, 2.0, ;, private, static, final, double, DEFAULT_CONTRACTION_DELTA, =, 0.5, ;, private, double, contractionCriterion]
[;, private, static, final, double, DEFAULT_CONTRACTION_DELTA, =, 0.5, ;, private, double, contractionCriterion, =, 2.5, ;, private, double, expansionFactor, =, 2.0]
[;, private, double, contractionCriterion, =, 2.5, ;, private, double, expansionFactor, =, 2.0, ;, private, ExpansionMode, expansionMode, =, ExpansionMode, ., MULTIPLICATIVE]
[;, private, double, expansionFactor, =, 2.0, ;, private, ExpansionMode, expansionMode, =, ExpansionMode, ., MULTIPLICATIVE, ;, private, double, [, ], internalArray]
[;, private, ExpansionMode, expansionMode, =, ExpansionMode, ., MULTIPLICATIVE, ;, private, double, [, ], internalArray, ;, private, int, numElements, =, 0]
[;, private, double, [, ], internalArray, ;, private, int, numElements, =, 0, ;, private, int, startIndex, =, 0, ;, public]
[., MULTIPLICATIVE, ;, private, double, [, ], internalArray, ;, private, int, numElements, =, 0, ;, private, int, startIndex, =, 0]
[;, private, int, startIndex, =, 0, ;, public, static, enum, ExpansionMode, {, MULTIPLICATIVE, ,, ADDITIVE, }, public, ResizableDoubleArray, (, )]
[;, public, static, enum, ExpansionMode, {, MULTIPLICATIVE, ,, ADDITIVE, }, public, ResizableDoubleArray, (, ), {, this, (, DEFAULT_INITIAL_CAPACITY, ), ;]
[), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ), throws, MathIllegalArgumentException, {, this, (, initialCapacity, ,, DEFAULT_EXPANSION_FACTOR, ), ;, }]
[,, DEFAULT_EXPANSION_FACTOR, ), ;, }, public, ResizableDoubleArray, (, double, [, ], initialArray, ), {, this, (, DEFAULT_INITIAL_CAPACITY, ,, DEFAULT_EXPANSION_FACTOR, ,]
[), ;, }, public, ResizableDoubleArray, (, double, [, ], initialArray, ), {, this, (, DEFAULT_INITIAL_CAPACITY, ,, DEFAULT_EXPANSION_FACTOR, ,, DEFAULT_CONTRACTION_DELTA, +]
[,, DEFAULT_EXPANSION_FACTOR, ,, DEFAULT_CONTRACTION_DELTA, +, DEFAULT_EXPANSION_FACTOR, ,, ExpansionMode, ., MULTIPLICATIVE, ,, initialArray, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (]
[,, DEFAULT_CONTRACTION_DELTA, +, DEFAULT_EXPANSION_FACTOR, ,, ExpansionMode, ., MULTIPLICATIVE, ,, initialArray, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity]
[,, ExpansionMode, ., MULTIPLICATIVE, ,, initialArray, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, )]
[+, DEFAULT_EXPANSION_FACTOR, ,, ExpansionMode, ., MULTIPLICATIVE, ,, initialArray, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float]
[,, ExpansionMode, ., MULTIPLICATIVE, ,, initialArray, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, )]
[,, initialArray, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, ), throws, MathIllegalArgumentException, {, this]
[., MULTIPLICATIVE, ,, initialArray, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, ), throws, MathIllegalArgumentException]
[), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, ), throws, MathIllegalArgumentException, {, this, (, initialCapacity]
[,, (, double, ), expansionFactor, ), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double, expansionFactor, ), throws, MathIllegalArgumentException, {]
[), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double, expansionFactor, ), throws, MathIllegalArgumentException, {, this, (, initialCapacity, ,, expansionFactor]
[), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double, expansionFactor, ), throws, MathIllegalArgumentException, {, this, (, initialCapacity, ,, expansionFactor]
[,, expansionFactor, ,, DEFAULT_CONTRACTION_DELTA, +, expansionFactor, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, ,]
[,, DEFAULT_CONTRACTION_DELTA, +, expansionFactor, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, ,, float, contractionCriteria]
[), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, ,, float, contractionCriteria, ), throws, MathIllegalArgumentException, {]
[+, expansionFactor, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, ,, float, contractionCriteria, ), throws]
[), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, ,, float, contractionCriteria, ), throws, MathIllegalArgumentException, {]
[,, (, double, ), expansionFactor, ,, (, double, ), contractionCriteria, ), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double]
[,, (, double, ), contractionCriteria, ), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double, expansionFactor, ,, double, contractionCriterion, )]
[,, (, double, ), contractionCriteria, ), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double, expansionFactor, ,, double, contractionCriterion, )]
[), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double, expansionFactor, ,, double, contractionCriterion, ), throws, MathIllegalArgumentException, {, this, (]
[), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double, expansionFactor, ,, double, contractionCriterion, ), throws, MathIllegalArgumentException, {, this, (]
[,, expansionFactor, ,, contractionCriterion, ,, ExpansionMode, ., MULTIPLICATIVE, ,, null, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity]
[,, contractionCriterion, ,, ExpansionMode, ., MULTIPLICATIVE, ,, null, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float]
[,, ExpansionMode, ., MULTIPLICATIVE, ,, null, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, ,]
[,, null, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, ,, float, contractionCriteria, ,, int]
[., MULTIPLICATIVE, ,, null, ), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, ,, float, contractionCriteria]
[), ;, }, @, Deprecated, public, ResizableDoubleArray, (, int, initialCapacity, ,, float, expansionFactor, ,, float, contractionCriteria, ,, int, expansionMode, )]
[,, expansionFactor, ,, contractionCriteria, ,, expansionMode, ==, ADDITIVE_MODE, ?, ExpansionMode, ., ADDITIVE, :, ExpansionMode, ., MULTIPLICATIVE, ,, null, ), ;]
[,, contractionCriteria, ,, expansionMode, ==, ADDITIVE_MODE, ?, ExpansionMode, ., ADDITIVE, :, ExpansionMode, ., MULTIPLICATIVE, ,, null, ), ;, setExpansionMode, (]
[,, expansionMode, ==, ADDITIVE_MODE, ?, ExpansionMode, ., ADDITIVE, :, ExpansionMode, ., MULTIPLICATIVE, ,, null, ), ;, setExpansionMode, (, expansionMode, )]
[,, null, ), ;, setExpansionMode, (, expansionMode, ), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double, expansionFactor, ,, double]
[?, ExpansionMode, ., ADDITIVE, :, ExpansionMode, ., MULTIPLICATIVE, ,, null, ), ;, setExpansionMode, (, expansionMode, ), ;, }, public, ResizableDoubleArray]
[==, ADDITIVE_MODE, ?, ExpansionMode, ., ADDITIVE, :, ExpansionMode, ., MULTIPLICATIVE, ,, null, ), ;, setExpansionMode, (, expansionMode, ), ;, }]
[?, ExpansionMode, ., ADDITIVE, :, ExpansionMode, ., MULTIPLICATIVE, ,, null, ), ;, setExpansionMode, (, expansionMode, ), ;, }, public, ResizableDoubleArray]
[:, ExpansionMode, ., MULTIPLICATIVE, ,, null, ), ;, setExpansionMode, (, expansionMode, ), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,]
[., ADDITIVE, :, ExpansionMode, ., MULTIPLICATIVE, ,, null, ), ;, setExpansionMode, (, expansionMode, ), ;, }, public, ResizableDoubleArray, (, int]
[,, null, ), ;, setExpansionMode, (, expansionMode, ), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double, expansionFactor, ,, double]
[., MULTIPLICATIVE, ,, null, ), ;, setExpansionMode, (, expansionMode, ), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double, expansionFactor]
[), ;, setExpansionMode, (, expansionMode, ), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double, expansionFactor, ,, double, contractionCriterion, ,]
[;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double, expansionFactor, ,, double, contractionCriterion, ,, ExpansionMode, expansionMode, ,, double, ..., data]
[), ;, }, public, ResizableDoubleArray, (, int, initialCapacity, ,, double, expansionFactor, ,, double, contractionCriterion, ,, ExpansionMode, expansionMode, ,, double, ...]
[), {, throw, new, NotStrictlyPositiveException, (, LocalizedFormats, ., INITIAL_CAPACITY_NOT_POSITIVE, ,, initialCapacity, ), ;, }, checkContractExpand, (, contractionCriterion, ,, expansionFactor, )]
[<=, 0, ), {, throw, new, NotStrictlyPositiveException, (, LocalizedFormats, ., INITIAL_CAPACITY_NOT_POSITIVE, ,, initialCapacity, ), ;, }, checkContractExpand, (, contractionCriterion, ,]
[), {, throw, new, NotStrictlyPositiveException, (, LocalizedFormats, ., INITIAL_CAPACITY_NOT_POSITIVE, ,, initialCapacity, ), ;, }, checkContractExpand, (, contractionCriterion, ,, expansionFactor, )]
[;, }, checkContractExpand, (, contractionCriterion, ,, expansionFactor, ), ;, this, ., expansionFactor, =, expansionFactor, ;, this, ., contractionCriterion, =, contractionCriterion]
[,, initialCapacity, ), ;, }, checkContractExpand, (, contractionCriterion, ,, expansionFactor, ), ;, this, ., expansionFactor, =, expansionFactor, ;, this, .]
[., INITIAL_CAPACITY_NOT_POSITIVE, ,, initialCapacity, ), ;, }, checkContractExpand, (, contractionCriterion, ,, expansionFactor, ), ;, this, ., expansionFactor, =, expansionFactor, ;]
[), ;, }, checkContractExpand, (, contractionCriterion, ,, expansionFactor, ), ;, this, ., expansionFactor, =, expansionFactor, ;, this, ., contractionCriterion, =]
[;, this, ., expansionFactor, =, expansionFactor, ;, this, ., contractionCriterion, =, contractionCriterion, ;, this, ., expansionMode, =, expansionMode, ;, internalArray]
[,, expansionFactor, ), ;, this, ., expansionFactor, =, expansionFactor, ;, this, ., contractionCriterion, =, contractionCriterion, ;, this, ., expansionMode, =]
[), ;, this, ., expansionFactor, =, expansionFactor, ;, this, ., contractionCriterion, =, contractionCriterion, ;, this, ., expansionMode, =, expansionMode, ;]
[=, expansionFactor, ;, this, ., contractionCriterion, =, contractionCriterion, ;, this, ., expansionMode, =, expansionMode, ;, internalArray, =, new, double, []
[., expansionFactor, =, expansionFactor, ;, this, ., contractionCriterion, =, contractionCriterion, ;, this, ., expansionMode, =, expansionMode, ;, internalArray, =, new]
[;, this, ., contractionCriterion, =, contractionCriterion, ;, this, ., expansionMode, =, expansionMode, ;, internalArray, =, new, double, [, initialCapacity, ]]
[=, contractionCriterion, ;, this, ., expansionMode, =, expansionMode, ;, internalArray, =, new, double, [, initialCapacity, ], ;, numElements, =, 0]
[., contractionCriterion, =, contractionCriterion, ;, this, ., expansionMode, =, expansionMode, ;, internalArray, =, new, double, [, initialCapacity, ], ;, numElements]
[;, this, ., expansionMode, =, expansionMode, ;, internalArray, =, new, double, [, initialCapacity, ], ;, numElements, =, 0, ;, startIndex]
[=, expansionMode, ;, internalArray, =, new, double, [, initialCapacity, ], ;, numElements, =, 0, ;, startIndex, =, 0, ;, if]
[., expansionMode, =, expansionMode, ;, internalArray, =, new, double, [, initialCapacity, ], ;, numElements, =, 0, ;, startIndex, =, 0]
[;, internalArray, =, new, double, [, initialCapacity, ], ;, numElements, =, 0, ;, startIndex, =, 0, ;, if, (, data]
[=, new, double, [, initialCapacity, ], ;, numElements, =, 0, ;, startIndex, =, 0, ;, if, (, data, !=, null]
[;, numElements, =, 0, ;, startIndex, =, 0, ;, if, (, data, !=, null, ), {, addElements, (, data, )]
[], ;, numElements, =, 0, ;, startIndex, =, 0, ;, if, (, data, !=, null, ), {, addElements, (, data]
[=, 0, ;, startIndex, =, 0, ;, if, (, data, !=, null, ), {, addElements, (, data, ), ;, }]
[;, startIndex, =, 0, ;, if, (, data, !=, null, ), {, addElements, (, data, ), ;, }, }, public]
[=, 0, ;, if, (, data, !=, null, ), {, addElements, (, data, ), ;, }, }, public, ResizableDoubleArray, (]
[;, if, (, data, !=, null, ), {, addElements, (, data, ), ;, }, }, public, ResizableDoubleArray, (, ResizableDoubleArray, original]
[), {, addElements, (, data, ), ;, }, }, public, ResizableDoubleArray, (, ResizableDoubleArray, original, ), throws, NullArgumentException, {, MathUtils, .]
[!=, null, ), {, addElements, (, data, ), ;, }, }, public, ResizableDoubleArray, (, ResizableDoubleArray, original, ), throws, NullArgumentException, {]
[), {, addElements, (, data, ), ;, }, }, public, ResizableDoubleArray, (, ResizableDoubleArray, original, ), throws, NullArgumentException, {, MathUtils, .]
[;, }, }, public, ResizableDoubleArray, (, ResizableDoubleArray, original, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, original, ), ;, copy]
[), ;, }, }, public, ResizableDoubleArray, (, ResizableDoubleArray, original, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, original, ), ;]
[;, copy, (, original, ,, this, ), ;, }, public, synchronized, void, addElement, (, double, value, ), {, if, (]
[., checkNotNull, (, original, ), ;, copy, (, original, ,, this, ), ;, }, public, synchronized, void, addElement, (, double]
[), ;, copy, (, original, ,, this, ), ;, }, public, synchronized, void, addElement, (, double, value, ), {, if]
[;, }, public, synchronized, void, addElement, (, double, value, ), {, if, (, internalArray, ., length, <=, startIndex, +, numElements]
[,, this, ), ;, }, public, synchronized, void, addElement, (, double, value, ), {, if, (, internalArray, ., length, <=]
[), ;, }, public, synchronized, void, addElement, (, double, value, ), {, if, (, internalArray, ., length, <=, startIndex, +]
[), {, expand, (, ), ;, }, internalArray, [, startIndex, +, numElements, ++, ], =, value, ;, }, public, synchronized]
[<=, startIndex, +, numElements, ), {, expand, (, ), ;, }, internalArray, [, startIndex, +, numElements, ++, ], =, value]
[., length, <=, startIndex, +, numElements, ), {, expand, (, ), ;, }, internalArray, [, startIndex, +, numElements, ++, ]]
[), {, expand, (, ), ;, }, internalArray, [, startIndex, +, numElements, ++, ], =, value, ;, }, public, synchronized]
[+, numElements, ), {, expand, (, ), ;, }, internalArray, [, startIndex, +, numElements, ++, ], =, value, ;, }]
[), {, expand, (, ), ;, }, internalArray, [, startIndex, +, numElements, ++, ], =, value, ;, }, public, synchronized]
[;, }, internalArray, [, startIndex, +, numElements, ++, ], =, value, ;, }, public, synchronized, void, addElements, (, double, []
[=, value, ;, }, public, synchronized, void, addElements, (, double, [, ], values, ), {, final, double, [, ], tempArray]
[[, startIndex, +, numElements, ++, ], =, value, ;, }, public, synchronized, void, addElements, (, double, [, ], values, )]
[], =, value, ;, }, public, synchronized, void, addElements, (, double, [, ], values, ), {, final, double, [, ]]
[+, numElements, ++, ], =, value, ;, }, public, synchronized, void, addElements, (, double, [, ], values, ), {, final]
[], =, value, ;, }, public, synchronized, void, addElements, (, double, [, ], values, ), {, final, double, [, ]]
[++, ], =, value, ;, }, public, synchronized, void, addElements, (, double, [, ], values, ), {, final, double, []
[;, }, public, synchronized, void, addElements, (, double, [, ], values, ), {, final, double, [, ], tempArray, =, new]
[;, System, ., arraycopy, (, internalArray, ,, startIndex, ,, tempArray, ,, 0, ,, numElements, ), ;, System, ., arraycopy, (]
[], ;, System, ., arraycopy, (, internalArray, ,, startIndex, ,, tempArray, ,, 0, ,, numElements, ), ;, System, ., arraycopy]
[+, 1, ], ;, System, ., arraycopy, (, internalArray, ,, startIndex, ,, tempArray, ,, 0, ,, numElements, ), ;, System]
[+, values, ., length, +, 1, ], ;, System, ., arraycopy, (, internalArray, ,, startIndex, ,, tempArray, ,, 0, ,]
[+, 1, ], ;, System, ., arraycopy, (, internalArray, ,, startIndex, ,, tempArray, ,, 0, ,, numElements, ), ;, System]
[., length, +, 1, ], ;, System, ., arraycopy, (, internalArray, ,, startIndex, ,, tempArray, ,, 0, ,, numElements, )]
[], ;, System, ., arraycopy, (, internalArray, ,, startIndex, ,, tempArray, ,, 0, ,, numElements, ), ;, System, ., arraycopy]
[;, System, ., arraycopy, (, values, ,, 0, ,, tempArray, ,, numElements, ,, values, ., length, ), ;, internalArray, =]
[., arraycopy, (, internalArray, ,, startIndex, ,, tempArray, ,, 0, ,, numElements, ), ;, System, ., arraycopy, (, values, ,]
[,, startIndex, ,, tempArray, ,, 0, ,, numElements, ), ;, System, ., arraycopy, (, values, ,, 0, ,, tempArray, ,]
[,, tempArray, ,, 0, ,, numElements, ), ;, System, ., arraycopy, (, values, ,, 0, ,, tempArray, ,, numElements, ,]
[,, 0, ,, numElements, ), ;, System, ., arraycopy, (, values, ,, 0, ,, tempArray, ,, numElements, ,, values, .]
[,, numElements, ), ;, System, ., arraycopy, (, values, ,, 0, ,, tempArray, ,, numElements, ,, values, ., length, )]
[), ;, System, ., arraycopy, (, values, ,, 0, ,, tempArray, ,, numElements, ,, values, ., length, ), ;, internalArray]
[;, internalArray, =, tempArray, ;, startIndex, =, 0, ;, numElements, +=, values, ., length, ;, }, public, synchronized, double, addElementRolling]
[., arraycopy, (, values, ,, 0, ,, tempArray, ,, numElements, ,, values, ., length, ), ;, internalArray, =, tempArray, ;]
[,, 0, ,, tempArray, ,, numElements, ,, values, ., length, ), ;, internalArray, =, tempArray, ;, startIndex, =, 0, ;]
[,, tempArray, ,, numElements, ,, values, ., length, ), ;, internalArray, =, tempArray, ;, startIndex, =, 0, ;, numElements, +=]
[,, numElements, ,, values, ., length, ), ;, internalArray, =, tempArray, ;, startIndex, =, 0, ;, numElements, +=, values, .]
[,, values, ., length, ), ;, internalArray, =, tempArray, ;, startIndex, =, 0, ;, numElements, +=, values, ., length, ;]
[), ;, internalArray, =, tempArray, ;, startIndex, =, 0, ;, numElements, +=, values, ., length, ;, }, public, synchronized, double]
[., length, ), ;, internalArray, =, tempArray, ;, startIndex, =, 0, ;, numElements, +=, values, ., length, ;, }, public]
[=, tempArray, ;, startIndex, =, 0, ;, numElements, +=, values, ., length, ;, }, public, synchronized, double, addElementRolling, (, double]
[;, startIndex, =, 0, ;, numElements, +=, values, ., length, ;, }, public, synchronized, double, addElementRolling, (, double, value, )]
[=, 0, ;, numElements, +=, values, ., length, ;, }, public, synchronized, double, addElementRolling, (, double, value, ), {, double]
[;, numElements, +=, values, ., length, ;, }, public, synchronized, double, addElementRolling, (, double, value, ), {, double, discarded, =]
[+=, values, ., length, ;, }, public, synchronized, double, addElementRolling, (, double, value, ), {, double, discarded, =, internalArray, []
[;, }, public, synchronized, double, addElementRolling, (, double, value, ), {, double, discarded, =, internalArray, [, startIndex, ], ;, if]
[., length, ;, }, public, synchronized, double, addElementRolling, (, double, value, ), {, double, discarded, =, internalArray, [, startIndex, ]]
[;, if, (, (, startIndex, +, (, numElements, +, 1, ), ), >, internalArray, ., length, ), {, expand, (]
[[, startIndex, ], ;, if, (, (, startIndex, +, (, numElements, +, 1, ), ), >, internalArray, ., length, )]
[], ;, if, (, (, startIndex, +, (, numElements, +, 1, ), ), >, internalArray, ., length, ), {, expand]
[), {, expand, (, ), ;, }, startIndex, +=, 1, ;, internalArray, [, startIndex, +, (, numElements, -, 1, )]
[>, internalArray, ., length, ), {, expand, (, ), ;, }, startIndex, +=, 1, ;, internalArray, [, startIndex, +, (]
[), >, internalArray, ., length, ), {, expand, (, ), ;, }, startIndex, +=, 1, ;, internalArray, [, startIndex, +]
[+, (, numElements, +, 1, ), ), >, internalArray, ., length, ), {, expand, (, ), ;, }, startIndex, +=]
[), >, internalArray, ., length, ), {, expand, (, ), ;, }, startIndex, +=, 1, ;, internalArray, [, startIndex, +]
[), ), >, internalArray, ., length, ), {, expand, (, ), ;, }, startIndex, +=, 1, ;, internalArray, [, startIndex]
[+, 1, ), ), >, internalArray, ., length, ), {, expand, (, ), ;, }, startIndex, +=, 1, ;, internalArray]
[), ), >, internalArray, ., length, ), {, expand, (, ), ;, }, startIndex, +=, 1, ;, internalArray, [, startIndex]
[), {, expand, (, ), ;, }, startIndex, +=, 1, ;, internalArray, [, startIndex, +, (, numElements, -, 1, )]
[., length, ), {, expand, (, ), ;, }, startIndex, +=, 1, ;, internalArray, [, startIndex, +, (, numElements, -]
[;, }, startIndex, +=, 1, ;, internalArray, [, startIndex, +, (, numElements, -, 1, ), ], =, value, ;, if]
[+=, 1, ;, internalArray, [, startIndex, +, (, numElements, -, 1, ), ], =, value, ;, if, (, shouldContract, (]
[;, internalArray, [, startIndex, +, (, numElements, -, 1, ), ], =, value, ;, if, (, shouldContract, (, ), )]
[=, value, ;, if, (, shouldContract, (, ), ), {, contract, (, ), ;, }, return, discarded, ;, }, public]
[[, startIndex, +, (, numElements, -, 1, ), ], =, value, ;, if, (, shouldContract, (, ), ), {, contract]
[], =, value, ;, if, (, shouldContract, (, ), ), {, contract, (, ), ;, }, return, discarded, ;, }]
[+, (, numElements, -, 1, ), ], =, value, ;, if, (, shouldContract, (, ), ), {, contract, (, )]
[], =, value, ;, if, (, shouldContract, (, ), ), {, contract, (, ), ;, }, return, discarded, ;, }]
[), ], =, value, ;, if, (, shouldContract, (, ), ), {, contract, (, ), ;, }, return, discarded, ;]
[-, 1, ), ], =, value, ;, if, (, shouldContract, (, ), ), {, contract, (, ), ;, }, return]
[), ], =, value, ;, if, (, shouldContract, (, ), ), {, contract, (, ), ;, }, return, discarded, ;]
[;, if, (, shouldContract, (, ), ), {, contract, (, ), ;, }, return, discarded, ;, }, public, synchronized, double]
[), {, contract, (, ), ;, }, return, discarded, ;, }, public, synchronized, double, substituteMostRecentElement, (, double, value, ), throws]
[;, }, return, discarded, ;, }, public, synchronized, double, substituteMostRecentElement, (, double, value, ), throws, MathIllegalStateException, {, if, (, numElements]
[;, }, public, synchronized, double, substituteMostRecentElement, (, double, value, ), throws, MathIllegalStateException, {, if, (, numElements, <, 1, ), {]
[), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY, ), ;, }, final, int, substIndex, =, startIndex, +, (, numElements]
[<, 1, ), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY, ), ;, }, final, int, substIndex, =, startIndex, +]
[), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY, ), ;, }, final, int, substIndex, =, startIndex, +, (, numElements]
[;, }, final, int, substIndex, =, startIndex, +, (, numElements, -, 1, ), ;, final, double, discarded, =, internalArray, []
[), ;, }, final, int, substIndex, =, startIndex, +, (, numElements, -, 1, ), ;, final, double, discarded, =, internalArray]
[., CANNOT_SUBSTITUTE_ELEMENT_FROM_EMPTY_ARRAY, ), ;, }, final, int, substIndex, =, startIndex, +, (, numElements, -, 1, ), ;, final, double, discarded]
[;, final, double, discarded, =, internalArray, [, substIndex, ], ;, internalArray, [, substIndex, ], =, value, ;, return, discarded, ;]
[+, (, numElements, -, 1, ), ;, final, double, discarded, =, internalArray, [, substIndex, ], ;, internalArray, [, substIndex, ]]
[;, final, double, discarded, =, internalArray, [, substIndex, ], ;, internalArray, [, substIndex, ], =, value, ;, return, discarded, ;]
[), ;, final, double, discarded, =, internalArray, [, substIndex, ], ;, internalArray, [, substIndex, ], =, value, ;, return, discarded]
[-, 1, ), ;, final, double, discarded, =, internalArray, [, substIndex, ], ;, internalArray, [, substIndex, ], =, value, ;]
[), ;, final, double, discarded, =, internalArray, [, substIndex, ], ;, internalArray, [, substIndex, ], =, value, ;, return, discarded]
[;, internalArray, [, substIndex, ], =, value, ;, return, discarded, ;, }, @, Deprecated, protected, void, checkContractExpand, (, float, contraction]
[[, substIndex, ], ;, internalArray, [, substIndex, ], =, value, ;, return, discarded, ;, }, @, Deprecated, protected, void, checkContractExpand]
[], ;, internalArray, [, substIndex, ], =, value, ;, return, discarded, ;, }, @, Deprecated, protected, void, checkContractExpand, (, float]
[=, value, ;, return, discarded, ;, }, @, Deprecated, protected, void, checkContractExpand, (, float, contraction, ,, float, expansion, ), throws]
[[, substIndex, ], =, value, ;, return, discarded, ;, }, @, Deprecated, protected, void, checkContractExpand, (, float, contraction, ,, float]
[], =, value, ;, return, discarded, ;, }, @, Deprecated, protected, void, checkContractExpand, (, float, contraction, ,, float, expansion, )]
[;, return, discarded, ;, }, @, Deprecated, protected, void, checkContractExpand, (, float, contraction, ,, float, expansion, ), throws, MathIllegalArgumentException, {]
[;, }, @, Deprecated, protected, void, checkContractExpand, (, float, contraction, ,, float, expansion, ), throws, MathIllegalArgumentException, {, checkContractExpand, (, (]
[;, }, protected, void, checkContractExpand, (, double, contraction, ,, double, expansion, ), throws, NumberIsTooSmallException, {, if, (, contraction, <, expansion]
[,, (, double, ), expansion, ), ;, }, protected, void, checkContractExpand, (, double, contraction, ,, double, expansion, ), throws, NumberIsTooSmallException]
[,, (, double, ), expansion, ), ;, }, protected, void, checkContractExpand, (, double, contraction, ,, double, expansion, ), throws, NumberIsTooSmallException]
[), ;, }, protected, void, checkContractExpand, (, double, contraction, ,, double, expansion, ), throws, NumberIsTooSmallException, {, if, (, contraction, <]
[), ;, }, protected, void, checkContractExpand, (, double, contraction, ,, double, expansion, ), throws, NumberIsTooSmallException, {, if, (, contraction, <]
[), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (, contraction, ,, 1, ,, true, ), ;, e, ., getContext, (]
[<, expansion, ), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (, contraction, ,, 1, ,, true, ), ;, e, .]
[), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (, contraction, ,, 1, ,, true, ), ;, e, ., getContext, (]
[;, e, ., getContext, (, ), ., addMessage, (, LocalizedFormats, ., CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR, ,, contraction, ,, expansion, ), ;, throw, e]
[,, 1, ,, true, ), ;, e, ., getContext, (, ), ., addMessage, (, LocalizedFormats, ., CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR, ,, contraction, ,]
[,, true, ), ;, e, ., getContext, (, ), ., addMessage, (, LocalizedFormats, ., CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR, ,, contraction, ,, expansion, )]
[), ;, e, ., getContext, (, ), ., addMessage, (, LocalizedFormats, ., CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR, ,, contraction, ,, expansion, ), ;, throw]
[;, throw, e, ;, }, if, (, contraction, <=, 1, ), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (, contraction]
[., addMessage, (, LocalizedFormats, ., CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR, ,, contraction, ,, expansion, ), ;, throw, e, ;, }, if, (, contraction, <=]
[., getContext, (, ), ., addMessage, (, LocalizedFormats, ., CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR, ,, contraction, ,, expansion, ), ;, throw, e, ;, }]
[,, contraction, ,, expansion, ), ;, throw, e, ;, }, if, (, contraction, <=, 1, ), {, final, NumberIsTooSmallException, e]
[., CONTRACTION_CRITERIA_SMALLER_THAN_EXPANSION_FACTOR, ,, contraction, ,, expansion, ), ;, throw, e, ;, }, if, (, contraction, <=, 1, ), {, final]
[,, expansion, ), ;, throw, e, ;, }, if, (, contraction, <=, 1, ), {, final, NumberIsTooSmallException, e, =, new]
[), ;, throw, e, ;, }, if, (, contraction, <=, 1, ), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (]
[;, }, if, (, contraction, <=, 1, ), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (, contraction, ,, 1, ,]
[), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (, contraction, ,, 1, ,, false, ), ;, e, ., getContext, (]
[<=, 1, ), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (, contraction, ,, 1, ,, false, ), ;, e, .]
[), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (, contraction, ,, 1, ,, false, ), ;, e, ., getContext, (]
[;, e, ., getContext, (, ), ., addMessage, (, LocalizedFormats, ., CONTRACTION_CRITERIA_SMALLER_THAN_ONE, ,, contraction, ), ;, throw, e, ;, }]
[,, 1, ,, false, ), ;, e, ., getContext, (, ), ., addMessage, (, LocalizedFormats, ., CONTRACTION_CRITERIA_SMALLER_THAN_ONE, ,, contraction, )]
[,, false, ), ;, e, ., getContext, (, ), ., addMessage, (, LocalizedFormats, ., CONTRACTION_CRITERIA_SMALLER_THAN_ONE, ,, contraction, ), ;, throw]
[), ;, e, ., getContext, (, ), ., addMessage, (, LocalizedFormats, ., CONTRACTION_CRITERIA_SMALLER_THAN_ONE, ,, contraction, ), ;, throw, e, ;]
[;, throw, e, ;, }, if, (, expansion, <=, 1, ), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (, contraction]
[., addMessage, (, LocalizedFormats, ., CONTRACTION_CRITERIA_SMALLER_THAN_ONE, ,, contraction, ), ;, throw, e, ;, }, if, (, expansion, <=, 1, )]
[., getContext, (, ), ., addMessage, (, LocalizedFormats, ., CONTRACTION_CRITERIA_SMALLER_THAN_ONE, ,, contraction, ), ;, throw, e, ;, }, if, (]
[,, contraction, ), ;, throw, e, ;, }, if, (, expansion, <=, 1, ), {, final, NumberIsTooSmallException, e, =, new]
[., CONTRACTION_CRITERIA_SMALLER_THAN_ONE, ,, contraction, ), ;, throw, e, ;, }, if, (, expansion, <=, 1, ), {, final, NumberIsTooSmallException, e]
[), ;, throw, e, ;, }, if, (, expansion, <=, 1, ), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (]
[;, }, if, (, expansion, <=, 1, ), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (, contraction, ,, 1, ,]
[), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (, contraction, ,, 1, ,, false, ), ;, e, ., getContext, (]
[<=, 1, ), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (, contraction, ,, 1, ,, false, ), ;, e, .]
[), {, final, NumberIsTooSmallException, e, =, new, NumberIsTooSmallException, (, contraction, ,, 1, ,, false, ), ;, e, ., getContext, (]
[;, e, ., getContext, (, ), ., addMessage, (, LocalizedFormats, ., EXPANSION_FACTOR_SMALLER_THAN_ONE, ,, expansion, ), ;, throw, e, ;, }]
[,, 1, ,, false, ), ;, e, ., getContext, (, ), ., addMessage, (, LocalizedFormats, ., EXPANSION_FACTOR_SMALLER_THAN_ONE, ,, expansion, )]
[,, false, ), ;, e, ., getContext, (, ), ., addMessage, (, LocalizedFormats, ., EXPANSION_FACTOR_SMALLER_THAN_ONE, ,, expansion, ), ;, throw]
[), ;, e, ., getContext, (, ), ., addMessage, (, LocalizedFormats, ., EXPANSION_FACTOR_SMALLER_THAN_ONE, ,, expansion, ), ;, throw, e, ;]
[;, throw, e, ;, }, }, public, synchronized, void, clear, (, ), {, numElements, =, 0, ;, startIndex, =, 0]
[., addMessage, (, LocalizedFormats, ., EXPANSION_FACTOR_SMALLER_THAN_ONE, ,, expansion, ), ;, throw, e, ;, }, }, public, synchronized, void, clear, (]
[., getContext, (, ), ., addMessage, (, LocalizedFormats, ., EXPANSION_FACTOR_SMALLER_THAN_ONE, ,, expansion, ), ;, throw, e, ;, }, }, public]
[,, expansion, ), ;, throw, e, ;, }, }, public, synchronized, void, clear, (, ), {, numElements, =, 0, ;]
[., EXPANSION_FACTOR_SMALLER_THAN_ONE, ,, expansion, ), ;, throw, e, ;, }, }, public, synchronized, void, clear, (, ), {, numElements, =]
[), ;, throw, e, ;, }, }, public, synchronized, void, clear, (, ), {, numElements, =, 0, ;, startIndex, =]
[;, }, }, public, synchronized, void, clear, (, ), {, numElements, =, 0, ;, startIndex, =, 0, ;, }, public]
[=, 0, ;, startIndex, =, 0, ;, }, public, synchronized, void, contract, (, ), {, final, double, [, ], tempArray]
[;, startIndex, =, 0, ;, }, public, synchronized, void, contract, (, ), {, final, double, [, ], tempArray, =, new]
[=, 0, ;, }, public, synchronized, void, contract, (, ), {, final, double, [, ], tempArray, =, new, double, []
[;, }, public, synchronized, void, contract, (, ), {, final, double, [, ], tempArray, =, new, double, [, numElements, +]
[;, System, ., arraycopy, (, internalArray, ,, startIndex, ,, tempArray, ,, 0, ,, numElements, ), ;, internalArray, =, tempArray, ;]
[], ;, System, ., arraycopy, (, internalArray, ,, startIndex, ,, tempArray, ,, 0, ,, numElements, ), ;, internalArray, =, tempArray]
[+, 1, ], ;, System, ., arraycopy, (, internalArray, ,, startIndex, ,, tempArray, ,, 0, ,, numElements, ), ;, internalArray]
[], ;, System, ., arraycopy, (, internalArray, ,, startIndex, ,, tempArray, ,, 0, ,, numElements, ), ;, internalArray, =, tempArray]
[;, internalArray, =, tempArray, ;, startIndex, =, 0, ;, }, public, synchronized, void, discardFrontElements, (, int, i, ), throws, MathIllegalArgumentException]
[., arraycopy, (, internalArray, ,, startIndex, ,, tempArray, ,, 0, ,, numElements, ), ;, internalArray, =, tempArray, ;, startIndex, =]
[,, startIndex, ,, tempArray, ,, 0, ,, numElements, ), ;, internalArray, =, tempArray, ;, startIndex, =, 0, ;, }, public]
[,, tempArray, ,, 0, ,, numElements, ), ;, internalArray, =, tempArray, ;, startIndex, =, 0, ;, }, public, synchronized, void]
[,, 0, ,, numElements, ), ;, internalArray, =, tempArray, ;, startIndex, =, 0, ;, }, public, synchronized, void, discardFrontElements, (]
[,, numElements, ), ;, internalArray, =, tempArray, ;, startIndex, =, 0, ;, }, public, synchronized, void, discardFrontElements, (, int, i]
[), ;, internalArray, =, tempArray, ;, startIndex, =, 0, ;, }, public, synchronized, void, discardFrontElements, (, int, i, ), throws]
[=, tempArray, ;, startIndex, =, 0, ;, }, public, synchronized, void, discardFrontElements, (, int, i, ), throws, MathIllegalArgumentException, {, discardExtremeElements]
[;, startIndex, =, 0, ;, }, public, synchronized, void, discardFrontElements, (, int, i, ), throws, MathIllegalArgumentException, {, discardExtremeElements, (, i]
[=, 0, ;, }, public, synchronized, void, discardFrontElements, (, int, i, ), throws, MathIllegalArgumentException, {, discardExtremeElements, (, i, ,, true]
[;, }, public, synchronized, void, discardFrontElements, (, int, i, ), throws, MathIllegalArgumentException, {, discardExtremeElements, (, i, ,, true, ), ;]
[;, }, public, synchronized, void, discardMostRecentElements, (, int, i, ), throws, MathIllegalArgumentException, {, discardExtremeElements, (, i, ,, false, ), ;]
[,, true, ), ;, }, public, synchronized, void, discardMostRecentElements, (, int, i, ), throws, MathIllegalArgumentException, {, discardExtremeElements, (, i, ,]
[), ;, }, public, synchronized, void, discardMostRecentElements, (, int, i, ), throws, MathIllegalArgumentException, {, discardExtremeElements, (, i, ,, false, )]
[;, }, private, synchronized, void, discardExtremeElements, (, int, i, ,, boolean, front, ), throws, MathIllegalArgumentException, {, if, (, i, >]
[,, false, ), ;, }, private, synchronized, void, discardExtremeElements, (, int, i, ,, boolean, front, ), throws, MathIllegalArgumentException, {, if]
[), ;, }, private, synchronized, void, discardExtremeElements, (, int, i, ,, boolean, front, ), throws, MathIllegalArgumentException, {, if, (, i]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., TOO_MANY_ELEMENTS_TO_DISCARD_FROM_ARRAY, ,, i, ,, numElements, ), ;, }, else, if, (, i]
[>, numElements, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., TOO_MANY_ELEMENTS_TO_DISCARD_FROM_ARRAY, ,, i, ,, numElements, ), ;, }, else, if]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., TOO_MANY_ELEMENTS_TO_DISCARD_FROM_ARRAY, ,, i, ,, numElements, ), ;, }, else, if, (, i]
[;, }, else, if, (, i, <, 0, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS, ,, i, )]
[,, i, ,, numElements, ), ;, }, else, if, (, i, <, 0, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats]
[., TOO_MANY_ELEMENTS_TO_DISCARD_FROM_ARRAY, ,, i, ,, numElements, ), ;, }, else, if, (, i, <, 0, ), {, throw, new, MathIllegalArgumentException]
[,, numElements, ), ;, }, else, if, (, i, <, 0, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS]
[), ;, }, else, if, (, i, <, 0, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS, ,, i]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS, ,, i, ), ;, }, else, {, numElements, -=, i, ;]
[<, 0, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS, ,, i, ), ;, }, else, {, numElements, -=]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS, ,, i, ), ;, }, else, {, numElements, -=, i, ;]
[;, }, else, {, numElements, -=, i, ;, if, (, front, ), {, startIndex, +=, i, ;, }, }, if]
[,, i, ), ;, }, else, {, numElements, -=, i, ;, if, (, front, ), {, startIndex, +=, i, ;]
[., CANNOT_DISCARD_NEGATIVE_NUMBER_OF_ELEMENTS, ,, i, ), ;, }, else, {, numElements, -=, i, ;, if, (, front, ), {, startIndex, +=]
[), ;, }, else, {, numElements, -=, i, ;, if, (, front, ), {, startIndex, +=, i, ;, }, }]
[-=, i, ;, if, (, front, ), {, startIndex, +=, i, ;, }, }, if, (, shouldContract, (, ), )]
[;, if, (, front, ), {, startIndex, +=, i, ;, }, }, if, (, shouldContract, (, ), ), {, contract]
[), {, startIndex, +=, i, ;, }, }, if, (, shouldContract, (, ), ), {, contract, (, ), ;, }]
[+=, i, ;, }, }, if, (, shouldContract, (, ), ), {, contract, (, ), ;, }, }, protected, synchronized]
[;, }, }, if, (, shouldContract, (, ), ), {, contract, (, ), ;, }, }, protected, synchronized, void, expand]
[), {, contract, (, ), ;, }, }, protected, synchronized, void, expand, (, ), {, int, newSize, =, 0, ;]
[;, }, }, protected, synchronized, void, expand, (, ), {, int, newSize, =, 0, ;, if, (, expansionMode, ==, ExpansionMode]
[;, if, (, expansionMode, ==, ExpansionMode, ., MULTIPLICATIVE, ), {, newSize, =, (, int, ), FastMath, ., ceil, (, internalArray]
[), {, newSize, =, (, int, ), FastMath, ., ceil, (, internalArray, ., length, *, expansionFactor, ), ;, }, else]
[==, ExpansionMode, ., MULTIPLICATIVE, ), {, newSize, =, (, int, ), FastMath, ., ceil, (, internalArray, ., length, *, expansionFactor]
[), {, newSize, =, (, int, ), FastMath, ., ceil, (, internalArray, ., length, *, expansionFactor, ), ;, }, else]
[., MULTIPLICATIVE, ), {, newSize, =, (, int, ), FastMath, ., ceil, (, internalArray, ., length, *, expansionFactor, ), ;]
[=, (, int, ), FastMath, ., ceil, (, internalArray, ., length, *, expansionFactor, ), ;, }, else, {, newSize, =]
[;, }, else, {, newSize, =, (, int, ), (, internalArray, ., length, +, FastMath, ., round, (, expansionFactor, )]
[;, }, else, {, newSize, =, (, int, ), (, internalArray, ., length, +, FastMath, ., round, (, expansionFactor, )]
[., ceil, (, internalArray, ., length, *, expansionFactor, ), ;, }, else, {, newSize, =, (, int, ), (, internalArray]
[), ;, }, else, {, newSize, =, (, int, ), (, internalArray, ., length, +, FastMath, ., round, (, expansionFactor]
[*, expansionFactor, ), ;, }, else, {, newSize, =, (, int, ), (, internalArray, ., length, +, FastMath, ., round]
[., length, *, expansionFactor, ), ;, }, else, {, newSize, =, (, int, ), (, internalArray, ., length, +, FastMath]
[), ;, }, else, {, newSize, =, (, int, ), (, internalArray, ., length, +, FastMath, ., round, (, expansionFactor]
[=, (, int, ), (, internalArray, ., length, +, FastMath, ., round, (, expansionFactor, ), ), ;, }, final, double]
[;, }, final, double, [, ], tempArray, =, new, double, [, newSize, ], ;, System, ., arraycopy, (, internalArray, ,]
[;, }, final, double, [, ], tempArray, =, new, double, [, newSize, ], ;, System, ., arraycopy, (, internalArray, ,]
[), ;, }, final, double, [, ], tempArray, =, new, double, [, newSize, ], ;, System, ., arraycopy, (, internalArray]
[+, FastMath, ., round, (, expansionFactor, ), ), ;, }, final, double, [, ], tempArray, =, new, double, [, newSize]
[., length, +, FastMath, ., round, (, expansionFactor, ), ), ;, }, final, double, [, ], tempArray, =, new, double]
[), ;, }, final, double, [, ], tempArray, =, new, double, [, newSize, ], ;, System, ., arraycopy, (, internalArray]
[., round, (, expansionFactor, ), ), ;, }, final, double, [, ], tempArray, =, new, double, [, newSize, ], ;]
[), ), ;, }, final, double, [, ], tempArray, =, new, double, [, newSize, ], ;, System, ., arraycopy, (]
[;, System, ., arraycopy, (, internalArray, ,, 0, ,, tempArray, ,, 0, ,, internalArray, ., length, ), ;, internalArray, =]
[], ;, System, ., arraycopy, (, internalArray, ,, 0, ,, tempArray, ,, 0, ,, internalArray, ., length, ), ;, internalArray]
[;, internalArray, =, tempArray, ;, }, private, synchronized, void, expandTo, (, int, size, ), {, final, double, [, ], tempArray]
[., arraycopy, (, internalArray, ,, 0, ,, tempArray, ,, 0, ,, internalArray, ., length, ), ;, internalArray, =, tempArray, ;]
[,, 0, ,, tempArray, ,, 0, ,, internalArray, ., length, ), ;, internalArray, =, tempArray, ;, }, private, synchronized, void]
[,, tempArray, ,, 0, ,, internalArray, ., length, ), ;, internalArray, =, tempArray, ;, }, private, synchronized, void, expandTo, (]
[,, 0, ,, internalArray, ., length, ), ;, internalArray, =, tempArray, ;, }, private, synchronized, void, expandTo, (, int, size]
[,, internalArray, ., length, ), ;, internalArray, =, tempArray, ;, }, private, synchronized, void, expandTo, (, int, size, ), {]
[), ;, internalArray, =, tempArray, ;, }, private, synchronized, void, expandTo, (, int, size, ), {, final, double, [, ]]
[., length, ), ;, internalArray, =, tempArray, ;, }, private, synchronized, void, expandTo, (, int, size, ), {, final, double]
[=, tempArray, ;, }, private, synchronized, void, expandTo, (, int, size, ), {, final, double, [, ], tempArray, =, new]
[;, }, private, synchronized, void, expandTo, (, int, size, ), {, final, double, [, ], tempArray, =, new, double, []
[;, System, ., arraycopy, (, internalArray, ,, 0, ,, tempArray, ,, 0, ,, internalArray, ., length, ), ;, internalArray, =]
[], ;, System, ., arraycopy, (, internalArray, ,, 0, ,, tempArray, ,, 0, ,, internalArray, ., length, ), ;, internalArray]
[;, internalArray, =, tempArray, ;, }, @, Deprecated, public, float, getContractionCriteria, (, ), {, return, (, float, ), getContractionCriterion, (]
[., arraycopy, (, internalArray, ,, 0, ,, tempArray, ,, 0, ,, internalArray, ., length, ), ;, internalArray, =, tempArray, ;]
[,, 0, ,, tempArray, ,, 0, ,, internalArray, ., length, ), ;, internalArray, =, tempArray, ;, }, @, Deprecated, public]
[,, tempArray, ,, 0, ,, internalArray, ., length, ), ;, internalArray, =, tempArray, ;, }, @, Deprecated, public, float, getContractionCriteria]
[,, 0, ,, internalArray, ., length, ), ;, internalArray, =, tempArray, ;, }, @, Deprecated, public, float, getContractionCriteria, (, )]
[,, internalArray, ., length, ), ;, internalArray, =, tempArray, ;, }, @, Deprecated, public, float, getContractionCriteria, (, ), {, return]
[), ;, internalArray, =, tempArray, ;, }, @, Deprecated, public, float, getContractionCriteria, (, ), {, return, (, float, ), getContractionCriterion]
[., length, ), ;, internalArray, =, tempArray, ;, }, @, Deprecated, public, float, getContractionCriteria, (, ), {, return, (, float]
[=, tempArray, ;, }, @, Deprecated, public, float, getContractionCriteria, (, ), {, return, (, float, ), getContractionCriterion, (, ), ;]
[;, }, @, Deprecated, public, float, getContractionCriteria, (, ), {, return, (, float, ), getContractionCriterion, (, ), ;, }, public]
[;, }, public, double, getContractionCriterion, (, ), {, return, contractionCriterion, ;, }, public, synchronized, double, getElement, (, int, index, )]
[;, }, public, double, getContractionCriterion, (, ), {, return, contractionCriterion, ;, }, public, synchronized, double, getElement, (, int, index, )]
[;, }, public, synchronized, double, getElement, (, int, index, ), {, if, (, index, >=, numElements, ), {, throw, new]
[), {, throw, new, ArrayIndexOutOfBoundsException, (, index, ), ;, }, else, if, (, index, >=, 0, ), {, return, internalArray]
[>=, numElements, ), {, throw, new, ArrayIndexOutOfBoundsException, (, index, ), ;, }, else, if, (, index, >=, 0, ), {]
[), {, throw, new, ArrayIndexOutOfBoundsException, (, index, ), ;, }, else, if, (, index, >=, 0, ), {, return, internalArray]
[;, }, else, if, (, index, >=, 0, ), {, return, internalArray, [, startIndex, +, index, ], ;, }, else]
[), ;, }, else, if, (, index, >=, 0, ), {, return, internalArray, [, startIndex, +, index, ], ;, }]
[), {, return, internalArray, [, startIndex, +, index, ], ;, }, else, {, throw, new, ArrayIndexOutOfBoundsException, (, index, ), ;]
[>=, 0, ), {, return, internalArray, [, startIndex, +, index, ], ;, }, else, {, throw, new, ArrayIndexOutOfBoundsException, (, index]
[), {, return, internalArray, [, startIndex, +, index, ], ;, }, else, {, throw, new, ArrayIndexOutOfBoundsException, (, index, ), ;]
[;, }, else, {, throw, new, ArrayIndexOutOfBoundsException, (, index, ), ;, }, }, public, synchronized, double, [, ], getElements, (]
[[, startIndex, +, index, ], ;, }, else, {, throw, new, ArrayIndexOutOfBoundsException, (, index, ), ;, }, }, public, synchronized]
[], ;, }, else, {, throw, new, ArrayIndexOutOfBoundsException, (, index, ), ;, }, }, public, synchronized, double, [, ], getElements]
[+, index, ], ;, }, else, {, throw, new, ArrayIndexOutOfBoundsException, (, index, ), ;, }, }, public, synchronized, double, []
[], ;, }, else, {, throw, new, ArrayIndexOutOfBoundsException, (, index, ), ;, }, }, public, synchronized, double, [, ], getElements]
[;, }, }, public, synchronized, double, [, ], getElements, (, ), {, final, double, [, ], elementArray, =, new, double]
[), ;, }, }, public, synchronized, double, [, ], getElements, (, ), {, final, double, [, ], elementArray, =, new]
[;, System, ., arraycopy, (, internalArray, ,, startIndex, ,, elementArray, ,, 0, ,, numElements, ), ;, return, elementArray, ;, }]
[], ;, System, ., arraycopy, (, internalArray, ,, startIndex, ,, elementArray, ,, 0, ,, numElements, ), ;, return, elementArray, ;]
[;, return, elementArray, ;, }, @, Deprecated, public, float, getExpansionFactor, (, ), {, return, (, float, ), expansionFactor, ;, }]
[., arraycopy, (, internalArray, ,, startIndex, ,, elementArray, ,, 0, ,, numElements, ), ;, return, elementArray, ;, }, @, Deprecated]
[,, startIndex, ,, elementArray, ,, 0, ,, numElements, ), ;, return, elementArray, ;, }, @, Deprecated, public, float, getExpansionFactor, (]
[,, elementArray, ,, 0, ,, numElements, ), ;, return, elementArray, ;, }, @, Deprecated, public, float, getExpansionFactor, (, ), {]
[,, 0, ,, numElements, ), ;, return, elementArray, ;, }, @, Deprecated, public, float, getExpansionFactor, (, ), {, return, (]
[,, numElements, ), ;, return, elementArray, ;, }, @, Deprecated, public, float, getExpansionFactor, (, ), {, return, (, float, )]
[), ;, return, elementArray, ;, }, @, Deprecated, public, float, getExpansionFactor, (, ), {, return, (, float, ), expansionFactor, ;]
[;, }, @, Deprecated, public, float, getExpansionFactor, (, ), {, return, (, float, ), expansionFactor, ;, }, @, Deprecated, public]
[;, }, @, Deprecated, public, int, getExpansionMode, (, ), {, switch, (, expansionMode, ), {, case, MULTIPLICATIVE, :, return, MULTIPLICATIVE_MODE]
[;, }, @, Deprecated, public, int, getExpansionMode, (, ), {, switch, (, expansionMode, ), {, case, MULTIPLICATIVE, :, return, MULTIPLICATIVE_MODE]
[), {, case, MULTIPLICATIVE, :, return, MULTIPLICATIVE_MODE, ;, case, ADDITIVE, :, return, ADDITIVE_MODE, ;, default, :, throw, new, MathInternalError, (]
[:, return, MULTIPLICATIVE_MODE, ;, case, ADDITIVE, :, return, ADDITIVE_MODE, ;, default, :, throw, new, MathInternalError, (, ), ;, }, }]
[;, case, ADDITIVE, :, return, ADDITIVE_MODE, ;, default, :, throw, new, MathInternalError, (, ), ;, }, }, @, Deprecated, synchronized]
[:, return, ADDITIVE_MODE, ;, default, :, throw, new, MathInternalError, (, ), ;, }, }, @, Deprecated, synchronized, int, getInternalLength, (]
[;, default, :, throw, new, MathInternalError, (, ), ;, }, }, @, Deprecated, synchronized, int, getInternalLength, (, ), {, return]
[;, }, }, @, Deprecated, synchronized, int, getInternalLength, (, ), {, return, internalArray, ., length, ;, }, public, int, getCapacity]
[;, }, public, int, getCapacity, (, ), {, return, internalArray, ., length, ;, }, public, synchronized, int, getNumElements, (, )]
[., length, ;, }, public, int, getCapacity, (, ), {, return, internalArray, ., length, ;, }, public, synchronized, int, getNumElements]
[;, }, public, synchronized, int, getNumElements, (, ), {, return, numElements, ;, }, @, Deprecated, public, synchronized, double, [, ]]
[., length, ;, }, public, synchronized, int, getNumElements, (, ), {, return, numElements, ;, }, @, Deprecated, public, synchronized, double]
[;, }, @, Deprecated, public, synchronized, double, [, ], getInternalValues, (, ), {, return, internalArray, ;, }, protected, double, []
[;, }, protected, double, [, ], getArrayRef, (, ), {, return, internalArray, ;, }, protected, int, getStartIndex, (, ), {]
[;, }, protected, int, getStartIndex, (, ), {, return, startIndex, ;, }, @, Deprecated, public, void, setContractionCriteria, (, float, contractionCriteria]
[;, }, @, Deprecated, public, void, setContractionCriteria, (, float, contractionCriteria, ), throws, MathIllegalArgumentException, {, checkContractExpand, (, contractionCriteria, ,, getExpansionFactor, (]
[;, synchronized, (, this, ), {, this, ., contractionCriterion, =, contractionCriteria, ;, }, }, public, double, compute, (, MathArrays, .]
[,, getExpansionFactor, (, ), ), ;, synchronized, (, this, ), {, this, ., contractionCriterion, =, contractionCriteria, ;, }, }, public]
[), ;, synchronized, (, this, ), {, this, ., contractionCriterion, =, contractionCriteria, ;, }, }, public, double, compute, (, MathArrays]
[), {, this, ., contractionCriterion, =, contractionCriteria, ;, }, }, public, double, compute, (, MathArrays, ., Function, f, ), {]
[=, contractionCriteria, ;, }, }, public, double, compute, (, MathArrays, ., Function, f, ), {, final, double, [, ], array]
[., contractionCriterion, =, contractionCriteria, ;, }, }, public, double, compute, (, MathArrays, ., Function, f, ), {, final, double, []
[;, }, }, public, double, compute, (, MathArrays, ., Function, f, ), {, final, double, [, ], array, ;, final]
[), {, array, =, internalArray, ;, start, =, startIndex, ;, num, =, numElements, ;, }, return, f, ., evaluate, (]
[=, internalArray, ;, start, =, startIndex, ;, num, =, numElements, ;, }, return, f, ., evaluate, (, array, ,, start]
[;, start, =, startIndex, ;, num, =, numElements, ;, }, return, f, ., evaluate, (, array, ,, start, ,, num]
[=, startIndex, ;, num, =, numElements, ;, }, return, f, ., evaluate, (, array, ,, start, ,, num, ), ;]
[;, num, =, numElements, ;, }, return, f, ., evaluate, (, array, ,, start, ,, num, ), ;, }, public]
[=, numElements, ;, }, return, f, ., evaluate, (, array, ,, start, ,, num, ), ;, }, public, synchronized, void]
[;, }, return, f, ., evaluate, (, array, ,, start, ,, num, ), ;, }, public, synchronized, void, setElement, (]
[;, }, public, synchronized, void, setElement, (, int, index, ,, double, value, ), {, if, (, index, <, 0, )]
[., evaluate, (, array, ,, start, ,, num, ), ;, }, public, synchronized, void, setElement, (, int, index, ,, double]
[,, start, ,, num, ), ;, }, public, synchronized, void, setElement, (, int, index, ,, double, value, ), {, if]
[,, num, ), ;, }, public, synchronized, void, setElement, (, int, index, ,, double, value, ), {, if, (, index]
[), ;, }, public, synchronized, void, setElement, (, int, index, ,, double, value, ), {, if, (, index, <, 0]
[), {, throw, new, ArrayIndexOutOfBoundsException, (, index, ), ;, }, if, (, index, +, 1, >, numElements, ), {, numElements]
[<, 0, ), {, throw, new, ArrayIndexOutOfBoundsException, (, index, ), ;, }, if, (, index, +, 1, >, numElements, )]
[), {, throw, new, ArrayIndexOutOfBoundsException, (, index, ), ;, }, if, (, index, +, 1, >, numElements, ), {, numElements]
[;, }, if, (, index, +, 1, >, numElements, ), {, numElements, =, index, +, 1, ;, }, if, (]
[), ;, }, if, (, index, +, 1, >, numElements, ), {, numElements, =, index, +, 1, ;, }, if]
[), {, numElements, =, index, +, 1, ;, }, if, (, (, startIndex, +, index, ), >=, internalArray, ., length]
[>, numElements, ), {, numElements, =, index, +, 1, ;, }, if, (, (, startIndex, +, index, ), >=, internalArray]
[+, 1, >, numElements, ), {, numElements, =, index, +, 1, ;, }, if, (, (, startIndex, +, index, )]
[>, numElements, ), {, numElements, =, index, +, 1, ;, }, if, (, (, startIndex, +, index, ), >=, internalArray]
[), {, numElements, =, index, +, 1, ;, }, if, (, (, startIndex, +, index, ), >=, internalArray, ., length]
[=, index, +, 1, ;, }, if, (, (, startIndex, +, index, ), >=, internalArray, ., length, ), {, expandTo]
[;, }, if, (, (, startIndex, +, index, ), >=, internalArray, ., length, ), {, expandTo, (, startIndex, +, (]
[+, 1, ;, }, if, (, (, startIndex, +, index, ), >=, internalArray, ., length, ), {, expandTo, (, startIndex]
[;, }, if, (, (, startIndex, +, index, ), >=, internalArray, ., length, ), {, expandTo, (, startIndex, +, (]
[), {, expandTo, (, startIndex, +, (, index, +, 1, ), ), ;, }, internalArray, [, startIndex, +, index, ]]
[>=, internalArray, ., length, ), {, expandTo, (, startIndex, +, (, index, +, 1, ), ), ;, }, internalArray, []
[), >=, internalArray, ., length, ), {, expandTo, (, startIndex, +, (, index, +, 1, ), ), ;, }, internalArray]
[+, index, ), >=, internalArray, ., length, ), {, expandTo, (, startIndex, +, (, index, +, 1, ), ), ;]
[), >=, internalArray, ., length, ), {, expandTo, (, startIndex, +, (, index, +, 1, ), ), ;, }, internalArray]
[), {, expandTo, (, startIndex, +, (, index, +, 1, ), ), ;, }, internalArray, [, startIndex, +, index, ]]
[., length, ), {, expandTo, (, startIndex, +, (, index, +, 1, ), ), ;, }, internalArray, [, startIndex, +]
[;, }, internalArray, [, startIndex, +, index, ], =, value, ;, }, @, Deprecated, public, void, setExpansionFactor, (, float, expansionFactor]
[), ;, }, internalArray, [, startIndex, +, index, ], =, value, ;, }, @, Deprecated, public, void, setExpansionFactor, (, float]
[+, (, index, +, 1, ), ), ;, }, internalArray, [, startIndex, +, index, ], =, value, ;, }, @]
[), ;, }, internalArray, [, startIndex, +, index, ], =, value, ;, }, @, Deprecated, public, void, setExpansionFactor, (, float]
[), ), ;, }, internalArray, [, startIndex, +, index, ], =, value, ;, }, @, Deprecated, public, void, setExpansionFactor, (]
[+, 1, ), ), ;, }, internalArray, [, startIndex, +, index, ], =, value, ;, }, @, Deprecated, public, void]
[), ), ;, }, internalArray, [, startIndex, +, index, ], =, value, ;, }, @, Deprecated, public, void, setExpansionFactor, (]
[=, value, ;, }, @, Deprecated, public, void, setExpansionFactor, (, float, expansionFactor, ), throws, MathIllegalArgumentException, {, checkContractExpand, (, getContractionCriterion, (]
[[, startIndex, +, index, ], =, value, ;, }, @, Deprecated, public, void, setExpansionFactor, (, float, expansionFactor, ), throws, MathIllegalArgumentException]
[], =, value, ;, }, @, Deprecated, public, void, setExpansionFactor, (, float, expansionFactor, ), throws, MathIllegalArgumentException, {, checkContractExpand, (, getContractionCriterion]
[+, index, ], =, value, ;, }, @, Deprecated, public, void, setExpansionFactor, (, float, expansionFactor, ), throws, MathIllegalArgumentException, {, checkContractExpand]
[], =, value, ;, }, @, Deprecated, public, void, setExpansionFactor, (, float, expansionFactor, ), throws, MathIllegalArgumentException, {, checkContractExpand, (, getContractionCriterion]
[;, }, @, Deprecated, public, void, setExpansionFactor, (, float, expansionFactor, ), throws, MathIllegalArgumentException, {, checkContractExpand, (, getContractionCriterion, (, ), ,]
[;, synchronized, (, this, ), {, this, ., expansionFactor, =, expansionFactor, ;, }, }, @, Deprecated, public, void, setExpansionMode, (]
[,, expansionFactor, ), ;, synchronized, (, this, ), {, this, ., expansionFactor, =, expansionFactor, ;, }, }, @, Deprecated, public]
[), ;, synchronized, (, this, ), {, this, ., expansionFactor, =, expansionFactor, ;, }, }, @, Deprecated, public, void, setExpansionMode]
[), {, this, ., expansionFactor, =, expansionFactor, ;, }, }, @, Deprecated, public, void, setExpansionMode, (, int, expansionMode, ), throws]
[=, expansionFactor, ;, }, }, @, Deprecated, public, void, setExpansionMode, (, int, expansionMode, ), throws, MathIllegalArgumentException, {, if, (, expansionMode]
[., expansionFactor, =, expansionFactor, ;, }, }, @, Deprecated, public, void, setExpansionMode, (, int, expansionMode, ), throws, MathIllegalArgumentException, {, if]
[;, }, }, @, Deprecated, public, void, setExpansionMode, (, int, expansionMode, ), throws, MathIllegalArgumentException, {, if, (, expansionMode, !=, MULTIPLICATIVE_MODE]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., UNSUPPORTED_EXPANSION_MODE, ,, expansionMode, ,, MULTIPLICATIVE_MODE, ,, "MULTIPLICATIVE_MODE", ,, ADDITIVE_MODE, ,, "ADDITIVE_MODE", )]
[&&, expansionMode, !=, ADDITIVE_MODE, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., UNSUPPORTED_EXPANSION_MODE, ,, expansionMode, ,, MULTIPLICATIVE_MODE, ,, "MULTIPLICATIVE_MODE", ,]
[!=, MULTIPLICATIVE_MODE, &&, expansionMode, !=, ADDITIVE_MODE, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., UNSUPPORTED_EXPANSION_MODE, ,, expansionMode, ,, MULTIPLICATIVE_MODE, ,]
[&&, expansionMode, !=, ADDITIVE_MODE, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., UNSUPPORTED_EXPANSION_MODE, ,, expansionMode, ,, MULTIPLICATIVE_MODE, ,, "MULTIPLICATIVE_MODE", ,]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., UNSUPPORTED_EXPANSION_MODE, ,, expansionMode, ,, MULTIPLICATIVE_MODE, ,, "MULTIPLICATIVE_MODE", ,, ADDITIVE_MODE, ,, "ADDITIVE_MODE", )]
[!=, ADDITIVE_MODE, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., UNSUPPORTED_EXPANSION_MODE, ,, expansionMode, ,, MULTIPLICATIVE_MODE, ,, "MULTIPLICATIVE_MODE", ,, ADDITIVE_MODE, ,]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., UNSUPPORTED_EXPANSION_MODE, ,, expansionMode, ,, MULTIPLICATIVE_MODE, ,, "MULTIPLICATIVE_MODE", ,, ADDITIVE_MODE, ,, "ADDITIVE_MODE", )]
[;, }, synchronized, (, this, ), {, if, (, expansionMode, ==, MULTIPLICATIVE_MODE, ), {, setExpansionMode, (, ExpansionMode, ., MULTIPLICATIVE, )]
[,, expansionMode, ,, MULTIPLICATIVE_MODE, ,, "MULTIPLICATIVE_MODE", ,, ADDITIVE_MODE, ,, "ADDITIVE_MODE", ), ;, }, synchronized, (, this, ), {, if, (]
[., UNSUPPORTED_EXPANSION_MODE, ,, expansionMode, ,, MULTIPLICATIVE_MODE, ,, "MULTIPLICATIVE_MODE", ,, ADDITIVE_MODE, ,, "ADDITIVE_MODE", ), ;, }, synchronized, (, this, ), {]
[,, MULTIPLICATIVE_MODE, ,, "MULTIPLICATIVE_MODE", ,, ADDITIVE_MODE, ,, "ADDITIVE_MODE", ), ;, }, synchronized, (, this, ), {, if, (, expansionMode, ==]
[,, "MULTIPLICATIVE_MODE", ,, ADDITIVE_MODE, ,, "ADDITIVE_MODE", ), ;, }, synchronized, (, this, ), {, if, (, expansionMode, ==, MULTIPLICATIVE_MODE, )]
[,, ADDITIVE_MODE, ,, "ADDITIVE_MODE", ), ;, }, synchronized, (, this, ), {, if, (, expansionMode, ==, MULTIPLICATIVE_MODE, ), {, setExpansionMode]
[,, "ADDITIVE_MODE", ), ;, }, synchronized, (, this, ), {, if, (, expansionMode, ==, MULTIPLICATIVE_MODE, ), {, setExpansionMode, (, ExpansionMode]
[), ;, }, synchronized, (, this, ), {, if, (, expansionMode, ==, MULTIPLICATIVE_MODE, ), {, setExpansionMode, (, ExpansionMode, ., MULTIPLICATIVE]
[), {, if, (, expansionMode, ==, MULTIPLICATIVE_MODE, ), {, setExpansionMode, (, ExpansionMode, ., MULTIPLICATIVE, ), ;, }, else, if, (]
[), {, setExpansionMode, (, ExpansionMode, ., MULTIPLICATIVE, ), ;, }, else, if, (, expansionMode, ==, ADDITIVE_MODE, ), {, setExpansionMode, (]
[==, MULTIPLICATIVE_MODE, ), {, setExpansionMode, (, ExpansionMode, ., MULTIPLICATIVE, ), ;, }, else, if, (, expansionMode, ==, ADDITIVE_MODE, ), {]
[), {, setExpansionMode, (, ExpansionMode, ., MULTIPLICATIVE, ), ;, }, else, if, (, expansionMode, ==, ADDITIVE_MODE, ), {, setExpansionMode, (]
[;, }, else, if, (, expansionMode, ==, ADDITIVE_MODE, ), {, setExpansionMode, (, ExpansionMode, ., ADDITIVE, ), ;, }, }, }]
[), ;, }, else, if, (, expansionMode, ==, ADDITIVE_MODE, ), {, setExpansionMode, (, ExpansionMode, ., ADDITIVE, ), ;, }, }]
[., MULTIPLICATIVE, ), ;, }, else, if, (, expansionMode, ==, ADDITIVE_MODE, ), {, setExpansionMode, (, ExpansionMode, ., ADDITIVE, ), ;]
[), {, setExpansionMode, (, ExpansionMode, ., ADDITIVE, ), ;, }, }, }, @, Deprecated, public, void, setExpansionMode, (, ExpansionMode, expansionMode]
[==, ADDITIVE_MODE, ), {, setExpansionMode, (, ExpansionMode, ., ADDITIVE, ), ;, }, }, }, @, Deprecated, public, void, setExpansionMode, (]
[), {, setExpansionMode, (, ExpansionMode, ., ADDITIVE, ), ;, }, }, }, @, Deprecated, public, void, setExpansionMode, (, ExpansionMode, expansionMode]
[;, }, }, }, @, Deprecated, public, void, setExpansionMode, (, ExpansionMode, expansionMode, ), {, this, ., expansionMode, =, expansionMode, ;]
[), ;, }, }, }, @, Deprecated, public, void, setExpansionMode, (, ExpansionMode, expansionMode, ), {, this, ., expansionMode, =, expansionMode]
[., ADDITIVE, ), ;, }, }, }, @, Deprecated, public, void, setExpansionMode, (, ExpansionMode, expansionMode, ), {, this, ., expansionMode]
[=, expansionMode, ;, }, @, Deprecated, protected, void, setInitialCapacity, (, int, initialCapacity, ), throws, MathIllegalArgumentException, {, }, public, synchronized, void]
[., expansionMode, =, expansionMode, ;, }, @, Deprecated, protected, void, setInitialCapacity, (, int, initialCapacity, ), throws, MathIllegalArgumentException, {, }, public]
[;, }, @, Deprecated, protected, void, setInitialCapacity, (, int, initialCapacity, ), throws, MathIllegalArgumentException, {, }, public, synchronized, void, setNumElements, (]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INDEX_NOT_POSITIVE, ,, i, ), ;, }, final, int, newSize, =, startIndex, +]
[<, 0, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INDEX_NOT_POSITIVE, ,, i, ), ;, }, final, int, newSize, =]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INDEX_NOT_POSITIVE, ,, i, ), ;, }, final, int, newSize, =, startIndex, +]
[;, }, final, int, newSize, =, startIndex, +, i, ;, if, (, newSize, >, internalArray, ., length, ), {, expandTo]
[,, i, ), ;, }, final, int, newSize, =, startIndex, +, i, ;, if, (, newSize, >, internalArray, ., length]
[., INDEX_NOT_POSITIVE, ,, i, ), ;, }, final, int, newSize, =, startIndex, +, i, ;, if, (, newSize, >, internalArray]
[), ;, }, final, int, newSize, =, startIndex, +, i, ;, if, (, newSize, >, internalArray, ., length, ), {]
[;, if, (, newSize, >, internalArray, ., length, ), {, expandTo, (, newSize, ), ;, }, numElements, =, i, ;]
[+, i, ;, if, (, newSize, >, internalArray, ., length, ), {, expandTo, (, newSize, ), ;, }, numElements, =]
[;, if, (, newSize, >, internalArray, ., length, ), {, expandTo, (, newSize, ), ;, }, numElements, =, i, ;]
[), {, expandTo, (, newSize, ), ;, }, numElements, =, i, ;, }, private, synchronized, boolean, shouldContract, (, ), {]
[>, internalArray, ., length, ), {, expandTo, (, newSize, ), ;, }, numElements, =, i, ;, }, private, synchronized, boolean]
[), {, expandTo, (, newSize, ), ;, }, numElements, =, i, ;, }, private, synchronized, boolean, shouldContract, (, ), {]
[., length, ), {, expandTo, (, newSize, ), ;, }, numElements, =, i, ;, }, private, synchronized, boolean, shouldContract, (]
[;, }, numElements, =, i, ;, }, private, synchronized, boolean, shouldContract, (, ), {, if, (, expansionMode, ==, ExpansionMode, .]
[), ;, }, numElements, =, i, ;, }, private, synchronized, boolean, shouldContract, (, ), {, if, (, expansionMode, ==, ExpansionMode]
[=, i, ;, }, private, synchronized, boolean, shouldContract, (, ), {, if, (, expansionMode, ==, ExpansionMode, ., MULTIPLICATIVE, ), {]
[;, }, private, synchronized, boolean, shouldContract, (, ), {, if, (, expansionMode, ==, ExpansionMode, ., MULTIPLICATIVE, ), {, return, (]
[), {, return, (, internalArray, ., length, /, (, (, float, ), numElements, ), ), >, contractionCriterion, ;, }, else]
[==, ExpansionMode, ., MULTIPLICATIVE, ), {, return, (, internalArray, ., length, /, (, (, float, ), numElements, ), ), >]
[), {, return, (, internalArray, ., length, /, (, (, float, ), numElements, ), ), >, contractionCriterion, ;, }, else]
[., MULTIPLICATIVE, ), {, return, (, internalArray, ., length, /, (, (, float, ), numElements, ), ), >, contractionCriterion, ;]
[;, }, else, {, return, (, internalArray, ., length, -, numElements, ), >, contractionCriterion, ;, }, }, @, Deprecated, public]
[>, contractionCriterion, ;, }, else, {, return, (, internalArray, ., length, -, numElements, ), >, contractionCriterion, ;, }, }, @]
[), >, contractionCriterion, ;, }, else, {, return, (, internalArray, ., length, -, numElements, ), >, contractionCriterion, ;, }, }]
[/, (, (, float, ), numElements, ), ), >, contractionCriterion, ;, }, else, {, return, (, internalArray, ., length, -]
[., length, /, (, (, float, ), numElements, ), ), >, contractionCriterion, ;, }, else, {, return, (, internalArray, .]
[), >, contractionCriterion, ;, }, else, {, return, (, internalArray, ., length, -, numElements, ), >, contractionCriterion, ;, }, }]
[), ), >, contractionCriterion, ;, }, else, {, return, (, internalArray, ., length, -, numElements, ), >, contractionCriterion, ;, }]
[), ), >, contractionCriterion, ;, }, else, {, return, (, internalArray, ., length, -, numElements, ), >, contractionCriterion, ;, }]
[;, }, else, {, return, (, internalArray, ., length, -, numElements, ), >, contractionCriterion, ;, }, }, @, Deprecated, public]
[;, }, }, @, Deprecated, public, synchronized, int, start, (, ), {, return, startIndex, ;, }, public, static, void, copy]
[>, contractionCriterion, ;, }, }, @, Deprecated, public, synchronized, int, start, (, ), {, return, startIndex, ;, }, public, static]
[), >, contractionCriterion, ;, }, }, @, Deprecated, public, synchronized, int, start, (, ), {, return, startIndex, ;, }, public]
[-, numElements, ), >, contractionCriterion, ;, }, }, @, Deprecated, public, synchronized, int, start, (, ), {, return, startIndex, ;]
[., length, -, numElements, ), >, contractionCriterion, ;, }, }, @, Deprecated, public, synchronized, int, start, (, ), {, return]
[), >, contractionCriterion, ;, }, }, @, Deprecated, public, synchronized, int, start, (, ), {, return, startIndex, ;, }, public]
[;, }, }, @, Deprecated, public, synchronized, int, start, (, ), {, return, startIndex, ;, }, public, static, void, copy]
[;, }, public, static, void, copy, (, ResizableDoubleArray, source, ,, ResizableDoubleArray, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (]
[;, MathUtils, ., checkNotNull, (, dest, ), ;, synchronized, (, source, ), {, synchronized, (, dest, ), {, dest, .]
[., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, synchronized, (, source, ), {, synchronized, (]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, synchronized, (, source, ), {, synchronized, (, dest, ), {, dest]
[;, synchronized, (, source, ), {, synchronized, (, dest, ), {, dest, ., contractionCriterion, =, source, ., contractionCriterion, ;, dest]
[., checkNotNull, (, dest, ), ;, synchronized, (, source, ), {, synchronized, (, dest, ), {, dest, ., contractionCriterion, =]
[), ;, synchronized, (, source, ), {, synchronized, (, dest, ), {, dest, ., contractionCriterion, =, source, ., contractionCriterion, ;]
[), {, synchronized, (, dest, ), {, dest, ., contractionCriterion, =, source, ., contractionCriterion, ;, dest, ., expansionFactor, =, source]
[), {, dest, ., contractionCriterion, =, source, ., contractionCriterion, ;, dest, ., expansionFactor, =, source, ., expansionFactor, ;, dest, .]
[=, source, ., contractionCriterion, ;, dest, ., expansionFactor, =, source, ., expansionFactor, ;, dest, ., expansionMode, =, source, ., expansionMode]
[., contractionCriterion, =, source, ., contractionCriterion, ;, dest, ., expansionFactor, =, source, ., expansionFactor, ;, dest, ., expansionMode, =, source]
[;, dest, ., expansionFactor, =, source, ., expansionFactor, ;, dest, ., expansionMode, =, source, ., expansionMode, ;, dest, ., internalArray]
[., contractionCriterion, ;, dest, ., expansionFactor, =, source, ., expansionFactor, ;, dest, ., expansionMode, =, source, ., expansionMode, ;, dest]
[=, source, ., expansionFactor, ;, dest, ., expansionMode, =, source, ., expansionMode, ;, dest, ., internalArray, =, new, double, []
[., expansionFactor, =, source, ., expansionFactor, ;, dest, ., expansionMode, =, source, ., expansionMode, ;, dest, ., internalArray, =, new]
[;, dest, ., expansionMode, =, source, ., expansionMode, ;, dest, ., internalArray, =, new, double, [, source, ., internalArray, .]
[., expansionFactor, ;, dest, ., expansionMode, =, source, ., expansionMode, ;, dest, ., internalArray, =, new, double, [, source, .]
[=, source, ., expansionMode, ;, dest, ., internalArray, =, new, double, [, source, ., internalArray, ., length, ], ;, System]
[., expansionMode, =, source, ., expansionMode, ;, dest, ., internalArray, =, new, double, [, source, ., internalArray, ., length, ]]
[;, dest, ., internalArray, =, new, double, [, source, ., internalArray, ., length, ], ;, System, ., arraycopy, (, source]
[., expansionMode, ;, dest, ., internalArray, =, new, double, [, source, ., internalArray, ., length, ], ;, System, ., arraycopy]
[=, new, double, [, source, ., internalArray, ., length, ], ;, System, ., arraycopy, (, source, ., internalArray, ,, 0]
[., internalArray, =, new, double, [, source, ., internalArray, ., length, ], ;, System, ., arraycopy, (, source, ., internalArray]
[;, System, ., arraycopy, (, source, ., internalArray, ,, 0, ,, dest, ., internalArray, ,, 0, ,, dest, ., internalArray]
[], ;, System, ., arraycopy, (, source, ., internalArray, ,, 0, ,, dest, ., internalArray, ,, 0, ,, dest, .]
[., length, ], ;, System, ., arraycopy, (, source, ., internalArray, ,, 0, ,, dest, ., internalArray, ,, 0, ,]
[., internalArray, ., length, ], ;, System, ., arraycopy, (, source, ., internalArray, ,, 0, ,, dest, ., internalArray, ,]
[;, dest, ., numElements, =, source, ., numElements, ;, dest, ., startIndex, =, source, ., startIndex, ;, }, }, }]
[., arraycopy, (, source, ., internalArray, ,, 0, ,, dest, ., internalArray, ,, 0, ,, dest, ., internalArray, ., length]
[,, 0, ,, dest, ., internalArray, ,, 0, ,, dest, ., internalArray, ., length, ), ;, dest, ., numElements, =]
[., internalArray, ,, 0, ,, dest, ., internalArray, ,, 0, ,, dest, ., internalArray, ., length, ), ;, dest, .]
[,, dest, ., internalArray, ,, 0, ,, dest, ., internalArray, ., length, ), ;, dest, ., numElements, =, source, .]
[,, 0, ,, dest, ., internalArray, ., length, ), ;, dest, ., numElements, =, source, ., numElements, ;, dest, .]
[., internalArray, ,, 0, ,, dest, ., internalArray, ., length, ), ;, dest, ., numElements, =, source, ., numElements, ;]
[,, dest, ., internalArray, ., length, ), ;, dest, ., numElements, =, source, ., numElements, ;, dest, ., startIndex, =]
[), ;, dest, ., numElements, =, source, ., numElements, ;, dest, ., startIndex, =, source, ., startIndex, ;, }, }]
[., length, ), ;, dest, ., numElements, =, source, ., numElements, ;, dest, ., startIndex, =, source, ., startIndex, ;]
[., internalArray, ., length, ), ;, dest, ., numElements, =, source, ., numElements, ;, dest, ., startIndex, =, source, .]
[=, source, ., numElements, ;, dest, ., startIndex, =, source, ., startIndex, ;, }, }, }, public, synchronized, ResizableDoubleArray, copy]
[., numElements, =, source, ., numElements, ;, dest, ., startIndex, =, source, ., startIndex, ;, }, }, }, public, synchronized]
[;, dest, ., startIndex, =, source, ., startIndex, ;, }, }, }, public, synchronized, ResizableDoubleArray, copy, (, ), {, final]
[., numElements, ;, dest, ., startIndex, =, source, ., startIndex, ;, }, }, }, public, synchronized, ResizableDoubleArray, copy, (, )]
[=, source, ., startIndex, ;, }, }, }, public, synchronized, ResizableDoubleArray, copy, (, ), {, final, ResizableDoubleArray, result, =, new]
[., startIndex, =, source, ., startIndex, ;, }, }, }, public, synchronized, ResizableDoubleArray, copy, (, ), {, final, ResizableDoubleArray, result]
[;, }, }, }, public, synchronized, ResizableDoubleArray, copy, (, ), {, final, ResizableDoubleArray, result, =, new, ResizableDoubleArray, (, ), ;]
[., startIndex, ;, }, }, }, public, synchronized, ResizableDoubleArray, copy, (, ), {, final, ResizableDoubleArray, result, =, new, ResizableDoubleArray, (]
[;, copy, (, this, ,, result, ), ;, return, result, ;, }, @, Override, public, boolean, equals, (, Object, object]
[;, return, result, ;, }, @, Override, public, boolean, equals, (, Object, object, ), {, if, (, object, ==, this]
[,, result, ), ;, return, result, ;, }, @, Override, public, boolean, equals, (, Object, object, ), {, if, (]
[), ;, return, result, ;, }, @, Override, public, boolean, equals, (, Object, object, ), {, if, (, object, ==]
[;, }, @, Override, public, boolean, equals, (, Object, object, ), {, if, (, object, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, object, instanceof, ResizableDoubleArray, ==, false, ), {, return, false, ;, }, synchronized]
[==, this, ), {, return, true, ;, }, if, (, object, instanceof, ResizableDoubleArray, ==, false, ), {, return, false, ;]
[), {, return, true, ;, }, if, (, object, instanceof, ResizableDoubleArray, ==, false, ), {, return, false, ;, }, synchronized]
[;, }, if, (, object, instanceof, ResizableDoubleArray, ==, false, ), {, return, false, ;, }, synchronized, (, this, ), {]
[), {, return, false, ;, }, synchronized, (, this, ), {, synchronized, (, object, ), {, boolean, result, =, true]
[==, false, ), {, return, false, ;, }, synchronized, (, this, ), {, synchronized, (, object, ), {, boolean, result]
[instanceof, ResizableDoubleArray, ==, false, ), {, return, false, ;, }, synchronized, (, this, ), {, synchronized, (, object, ), {]
[), {, return, false, ;, }, synchronized, (, this, ), {, synchronized, (, object, ), {, boolean, result, =, true]
[;, }, synchronized, (, this, ), {, synchronized, (, object, ), {, boolean, result, =, true, ;, final, ResizableDoubleArray, other]
[), {, synchronized, (, object, ), {, boolean, result, =, true, ;, final, ResizableDoubleArray, other, =, (, ResizableDoubleArray, ), object]
[), {, boolean, result, =, true, ;, final, ResizableDoubleArray, other, =, (, ResizableDoubleArray, ), object, ;, result, =, result, &&]
[;, final, ResizableDoubleArray, other, =, (, ResizableDoubleArray, ), object, ;, result, =, result, &&, (, other, ., contractionCriterion, ==, contractionCriterion]
[;, result, =, result, &&, (, other, ., contractionCriterion, ==, contractionCriterion, ), ;, result, =, result, &&, (, other, .]
[;, result, =, result, &&, (, other, ., contractionCriterion, ==, contractionCriterion, ), ;, result, =, result, &&, (, other, .]
[=, result, &&, (, other, ., contractionCriterion, ==, contractionCriterion, ), ;, result, =, result, &&, (, other, ., expansionFactor, ==]
[;, result, =, result, &&, (, other, ., expansionFactor, ==, expansionFactor, ), ;, result, =, result, &&, (, other, .]
[&&, (, other, ., contractionCriterion, ==, contractionCriterion, ), ;, result, =, result, &&, (, other, ., expansionFactor, ==, expansionFactor, )]
[;, result, =, result, &&, (, other, ., expansionFactor, ==, expansionFactor, ), ;, result, =, result, &&, (, other, .]
[), ;, result, =, result, &&, (, other, ., expansionFactor, ==, expansionFactor, ), ;, result, =, result, &&, (, other]
[==, contractionCriterion, ), ;, result, =, result, &&, (, other, ., expansionFactor, ==, expansionFactor, ), ;, result, =, result, &&]
[., contractionCriterion, ==, contractionCriterion, ), ;, result, =, result, &&, (, other, ., expansionFactor, ==, expansionFactor, ), ;, result, =]
[), ;, result, =, result, &&, (, other, ., expansionFactor, ==, expansionFactor, ), ;, result, =, result, &&, (, other]
[=, result, &&, (, other, ., expansionFactor, ==, expansionFactor, ), ;, result, =, result, &&, (, other, ., expansionMode, ==]
[;, result, =, result, &&, (, other, ., expansionMode, ==, expansionMode, ), ;, result, =, result, &&, (, other, .]
[&&, (, other, ., expansionFactor, ==, expansionFactor, ), ;, result, =, result, &&, (, other, ., expansionMode, ==, expansionMode, )]
[;, result, =, result, &&, (, other, ., expansionMode, ==, expansionMode, ), ;, result, =, result, &&, (, other, .]
[), ;, result, =, result, &&, (, other, ., expansionMode, ==, expansionMode, ), ;, result, =, result, &&, (, other]
[==, expansionFactor, ), ;, result, =, result, &&, (, other, ., expansionMode, ==, expansionMode, ), ;, result, =, result, &&]
[., expansionFactor, ==, expansionFactor, ), ;, result, =, result, &&, (, other, ., expansionMode, ==, expansionMode, ), ;, result, =]
[), ;, result, =, result, &&, (, other, ., expansionMode, ==, expansionMode, ), ;, result, =, result, &&, (, other]
[=, result, &&, (, other, ., expansionMode, ==, expansionMode, ), ;, result, =, result, &&, (, other, ., numElements, ==]
[;, result, =, result, &&, (, other, ., numElements, ==, numElements, ), ;, result, =, result, &&, (, other, .]
[&&, (, other, ., expansionMode, ==, expansionMode, ), ;, result, =, result, &&, (, other, ., numElements, ==, numElements, )]
[;, result, =, result, &&, (, other, ., numElements, ==, numElements, ), ;, result, =, result, &&, (, other, .]
[), ;, result, =, result, &&, (, other, ., numElements, ==, numElements, ), ;, result, =, result, &&, (, other]
[==, expansionMode, ), ;, result, =, result, &&, (, other, ., numElements, ==, numElements, ), ;, result, =, result, &&]
[., expansionMode, ==, expansionMode, ), ;, result, =, result, &&, (, other, ., numElements, ==, numElements, ), ;, result, =]
[), ;, result, =, result, &&, (, other, ., numElements, ==, numElements, ), ;, result, =, result, &&, (, other]
[=, result, &&, (, other, ., numElements, ==, numElements, ), ;, result, =, result, &&, (, other, ., startIndex, ==]
[;, result, =, result, &&, (, other, ., startIndex, ==, startIndex, ), ;, if, (, !, result, ), {, return]
[&&, (, other, ., numElements, ==, numElements, ), ;, result, =, result, &&, (, other, ., startIndex, ==, startIndex, )]
[;, result, =, result, &&, (, other, ., startIndex, ==, startIndex, ), ;, if, (, !, result, ), {, return]
[), ;, result, =, result, &&, (, other, ., startIndex, ==, startIndex, ), ;, if, (, !, result, ), {]
[==, numElements, ), ;, result, =, result, &&, (, other, ., startIndex, ==, startIndex, ), ;, if, (, !, result]
[., numElements, ==, numElements, ), ;, result, =, result, &&, (, other, ., startIndex, ==, startIndex, ), ;, if, (]
[), ;, result, =, result, &&, (, other, ., startIndex, ==, startIndex, ), ;, if, (, !, result, ), {]
[=, result, &&, (, other, ., startIndex, ==, startIndex, ), ;, if, (, !, result, ), {, return, false, ;]
[;, if, (, !, result, ), {, return, false, ;, }, else, {, return, Arrays, ., equals, (, internalArray, ,]
[&&, (, other, ., startIndex, ==, startIndex, ), ;, if, (, !, result, ), {, return, false, ;, }, else]
[;, if, (, !, result, ), {, return, false, ;, }, else, {, return, Arrays, ., equals, (, internalArray, ,]
[), ;, if, (, !, result, ), {, return, false, ;, }, else, {, return, Arrays, ., equals, (, internalArray]
[==, startIndex, ), ;, if, (, !, result, ), {, return, false, ;, }, else, {, return, Arrays, ., equals]
[., startIndex, ==, startIndex, ), ;, if, (, !, result, ), {, return, false, ;, }, else, {, return, Arrays]
[), ;, if, (, !, result, ), {, return, false, ;, }, else, {, return, Arrays, ., equals, (, internalArray]
[), {, return, false, ;, }, else, {, return, Arrays, ., equals, (, internalArray, ,, other, ., internalArray, ), ;]
[), {, return, false, ;, }, else, {, return, Arrays, ., equals, (, internalArray, ,, other, ., internalArray, ), ;]
[;, }, else, {, return, Arrays, ., equals, (, internalArray, ,, other, ., internalArray, ), ;, }, }, }, }]
[;, }, }, }, }, @, Override, public, synchronized, int, hashCode, (, ), {, final, int, [, ], hashData, =]
[., equals, (, internalArray, ,, other, ., internalArray, ), ;, }, }, }, }, @, Override, public, synchronized, int, hashCode]
[,, other, ., internalArray, ), ;, }, }, }, }, @, Override, public, synchronized, int, hashCode, (, ), {, final]
[), ;, }, }, }, }, @, Override, public, synchronized, int, hashCode, (, ), {, final, int, [, ], hashData]
[., internalArray, ), ;, }, }, }, }, @, Override, public, synchronized, int, hashCode, (, ), {, final, int, []
[;, hashData, [, 0, ], =, Double, ., valueOf, (, expansionFactor, ), ., hashCode, (, ), ;, hashData, [, 1]
[], ;, hashData, [, 0, ], =, Double, ., valueOf, (, expansionFactor, ), ., hashCode, (, ), ;, hashData, []
[=, Double, ., valueOf, (, expansionFactor, ), ., hashCode, (, ), ;, hashData, [, 1, ], =, Double, ., valueOf]
[[, 0, ], =, Double, ., valueOf, (, expansionFactor, ), ., hashCode, (, ), ;, hashData, [, 1, ], =]
[], =, Double, ., valueOf, (, expansionFactor, ), ., hashCode, (, ), ;, hashData, [, 1, ], =, Double, .]
[;, hashData, [, 1, ], =, Double, ., valueOf, (, contractionCriterion, ), ., hashCode, (, ), ;, hashData, [, 2]
[., hashCode, (, ), ;, hashData, [, 1, ], =, Double, ., valueOf, (, contractionCriterion, ), ., hashCode, (, )]
[., valueOf, (, expansionFactor, ), ., hashCode, (, ), ;, hashData, [, 1, ], =, Double, ., valueOf, (, contractionCriterion]
[), ., hashCode, (, ), ;, hashData, [, 1, ], =, Double, ., valueOf, (, contractionCriterion, ), ., hashCode, (]
[=, Double, ., valueOf, (, contractionCriterion, ), ., hashCode, (, ), ;, hashData, [, 2, ], =, expansionMode, ., hashCode]
[[, 1, ], =, Double, ., valueOf, (, contractionCriterion, ), ., hashCode, (, ), ;, hashData, [, 2, ], =]
[], =, Double, ., valueOf, (, contractionCriterion, ), ., hashCode, (, ), ;, hashData, [, 2, ], =, expansionMode, .]
[;, hashData, [, 2, ], =, expansionMode, ., hashCode, (, ), ;, hashData, [, 3, ], =, Arrays, ., hashCode]
[., hashCode, (, ), ;, hashData, [, 2, ], =, expansionMode, ., hashCode, (, ), ;, hashData, [, 3, ]]
[., valueOf, (, contractionCriterion, ), ., hashCode, (, ), ;, hashData, [, 2, ], =, expansionMode, ., hashCode, (, )]
[), ., hashCode, (, ), ;, hashData, [, 2, ], =, expansionMode, ., hashCode, (, ), ;, hashData, [, 3]
[=, expansionMode, ., hashCode, (, ), ;, hashData, [, 3, ], =, Arrays, ., hashCode, (, internalArray, ), ;, hashData]
[[, 2, ], =, expansionMode, ., hashCode, (, ), ;, hashData, [, 3, ], =, Arrays, ., hashCode, (, internalArray]
[], =, expansionMode, ., hashCode, (, ), ;, hashData, [, 3, ], =, Arrays, ., hashCode, (, internalArray, ), ;]
[;, hashData, [, 3, ], =, Arrays, ., hashCode, (, internalArray, ), ;, hashData, [, 4, ], =, numElements, ;]
[., hashCode, (, ), ;, hashData, [, 3, ], =, Arrays, ., hashCode, (, internalArray, ), ;, hashData, [, 4]
[=, Arrays, ., hashCode, (, internalArray, ), ;, hashData, [, 4, ], =, numElements, ;, hashData, [, 5, ], =]
[[, 3, ], =, Arrays, ., hashCode, (, internalArray, ), ;, hashData, [, 4, ], =, numElements, ;, hashData, []
[], =, Arrays, ., hashCode, (, internalArray, ), ;, hashData, [, 4, ], =, numElements, ;, hashData, [, 5, ]]
[;, hashData, [, 4, ], =, numElements, ;, hashData, [, 5, ], =, startIndex, ;, return, Arrays, ., hashCode, (]
[., hashCode, (, internalArray, ), ;, hashData, [, 4, ], =, numElements, ;, hashData, [, 5, ], =, startIndex, ;]
[), ;, hashData, [, 4, ], =, numElements, ;, hashData, [, 5, ], =, startIndex, ;, return, Arrays, ., hashCode]
[=, numElements, ;, hashData, [, 5, ], =, startIndex, ;, return, Arrays, ., hashCode, (, hashData, ), ;, }, }]
[[, 4, ], =, numElements, ;, hashData, [, 5, ], =, startIndex, ;, return, Arrays, ., hashCode, (, hashData, )]
[], =, numElements, ;, hashData, [, 5, ], =, startIndex, ;, return, Arrays, ., hashCode, (, hashData, ), ;, }]
[;, hashData, [, 5, ], =, startIndex, ;, return, Arrays, ., hashCode, (, hashData, ), ;, }, }]
[=, startIndex, ;, return, Arrays, ., hashCode, (, hashData, ), ;, }, }]
[[, 5, ], =, startIndex, ;, return, Arrays, ., hashCode, (, hashData, ), ;, }, }]
[], =, startIndex, ;, return, Arrays, ., hashCode, (, hashData, ), ;, }, }]
[;, return, Arrays, ., hashCode, (, hashData, ), ;, }, }]
[;, }, }]
[., hashCode, (, hashData, ), ;, }, }]
[), ;, }, }]
