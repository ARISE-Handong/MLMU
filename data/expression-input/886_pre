[field, ., FieldUtils, ;, import, org, ., joda, ., time, ., field, ., ImpreciseDateTimeField, ;, class, BasicMonthOfYearDateTimeField, extends, ImpreciseDateTimeField, {]
[;, import, org, ., joda, ., time, ., field, ., ImpreciseDateTimeField, ;, class, BasicMonthOfYearDateTimeField, extends, ImpreciseDateTimeField, {, @, SuppressWarnings, (]
[field, ., ImpreciseDateTimeField, ;, class, BasicMonthOfYearDateTimeField, extends, ImpreciseDateTimeField, {, @, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID, =]
[., ImpreciseDateTimeField, ;, class, BasicMonthOfYearDateTimeField, extends, ImpreciseDateTimeField, {, @, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID, =, -]
[@, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID, =, -, 8258715387168736L, ;, private, static, final, int, MIN, =]
[@, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID, =, -, 8258715387168736L, ;, private, static, final, int, MIN, =]
[final, int, iMax, ;, private, final, int, iLeapMonth, ;, BasicMonthOfYearDateTimeField, (, BasicChronology, chronology, ,, int, leapMonth, ), {, super, (]
[final, int, iMax, ;, private, final, int, iLeapMonth, ;, BasicMonthOfYearDateTimeField, (, BasicChronology, chronology, ,, int, leapMonth, ), {, super, (]
[int, iLeapMonth, ;, BasicMonthOfYearDateTimeField, (, BasicChronology, chronology, ,, int, leapMonth, ), {, super, (, DateTimeFieldType, ., monthOfYear, (, ), ,]
[int, iLeapMonth, ;, BasicMonthOfYearDateTimeField, (, BasicChronology, chronology, ,, int, leapMonth, ), {, super, (, DateTimeFieldType, ., monthOfYear, (, ), ,]
[,, int, leapMonth, ), {, super, (, DateTimeFieldType, ., monthOfYear, (, ), ,, chronology, ., getAverageMillisPerMonth, (, ), ), ;]
[leapMonth, ), {, super, (, DateTimeFieldType, ., monthOfYear, (, ), ,, chronology, ., getAverageMillisPerMonth, (, ), ), ;, iChronology, =]
[{, super, (, DateTimeFieldType, ., monthOfYear, (, ), ,, chronology, ., getAverageMillisPerMonth, (, ), ), ;, iChronology, =, chronology, ;]
[(, DateTimeFieldType, ., monthOfYear, (, ), ,, chronology, ., getAverageMillisPerMonth, (, ), ), ;, iChronology, =, chronology, ;, iMax, =]
[(, DateTimeFieldType, ., monthOfYear, (, ), ,, chronology, ., getAverageMillisPerMonth, (, ), ), ;, iChronology, =, chronology, ;, iMax, =]
[,, chronology, ., getAverageMillisPerMonth, (, ), ), ;, iChronology, =, chronology, ;, iMax, =, iChronology, ., getMaxMonth, (, ), ;]
[., getAverageMillisPerMonth, (, ), ), ;, iChronology, =, chronology, ;, iMax, =, iChronology, ., getMaxMonth, (, ), ;, iLeapMonth, =]
[iMax, =, iChronology, ., getMaxMonth, (, ), ;, iLeapMonth, =, leapMonth, ;, }, public, boolean, isLenient, (, ), {, return]
[}, public, boolean, isLenient, (, ), {, return, false, ;, }, public, int, get, (, long, instant, ), {, return]
[}, public, boolean, isLenient, (, ), {, return, false, ;, }, public, int, get, (, long, instant, ), {, return]
[(, ), {, return, false, ;, }, public, int, get, (, long, instant, ), {, return, iChronology, ., getMonthOfYear, (]
[., getMonthOfYear, (, instant, ), ;, }, public, long, add, (, long, instant, ,, int, months, ), {, if, (]
[., getMonthOfYear, (, instant, ), ;, }, public, long, add, (, long, instant, ,, int, months, ), {, if, (]
[(, instant, ), ;, }, public, long, add, (, long, instant, ,, int, months, ), {, if, (, months, ==]
[}, public, long, add, (, long, instant, ,, int, months, ), {, if, (, months, ==, 0, ), {, return]
[instant, ,, int, months, ), {, if, (, months, ==, 0, ), {, return, instant, ;, }, long, timePart, =]
[instant, ,, int, months, ), {, if, (, months, ==, 0, ), {, return, instant, ;, }, long, timePart, =]
[), {, if, (, months, ==, 0, ), {, return, instant, ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (]
[0, ), {, return, instant, ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =]
[0, ), {, return, instant, ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =]
[instant, ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology, ., getYear, (]
[iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =]
[iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =]
[instant, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (]
[;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,]
[), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, int, yearToUse, ;, int, monthToUse, =]
[), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, int, yearToUse, ;, int, monthToUse, =]
[), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, int, yearToUse, ;, int, monthToUse, =]
[int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, int, yearToUse, ;, int, monthToUse, =, thisMonth, -]
[=, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, int, yearToUse, ;, int, monthToUse, =, thisMonth, -, 1, +]
[(, instant, ,, thisYear, ), ;, int, yearToUse, ;, int, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (]
[(, instant, ,, thisYear, ), ;, int, yearToUse, ;, int, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (]
[,, thisYear, ), ;, int, yearToUse, ;, int, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=]
[;, int, yearToUse, ;, int, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {]
[yearToUse, ;, int, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =]
[yearToUse, ;, int, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =]
[int, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +]
[monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (]
[monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (]
[thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /]
[+, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;]
[;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =]
[;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =]
[if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (]
[if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (]
[monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %]
[), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +]
[+, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {]
[monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =]
[monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =]
[monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =]
[iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +]
[), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (]
[), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (]
[monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /]
[monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -]
[iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;]
[+, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =]
[+, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =]
[else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =, Math, ., abs, (]
[(, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =]
[(, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =]
[/, iMax, ), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %]
[1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if, (]
[1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if, (]
[monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if, (, remMonthToUse, ==]
[., abs, (, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if, (, remMonthToUse, ==, 0, ), {]
[(, monthToUse, ), ;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =]
[;, int, remMonthToUse, =, monthToUse, %, iMax, ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }]
[remMonthToUse, =, monthToUse, %, iMax, ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =]
[remMonthToUse, =, monthToUse, %, iMax, ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =]
[remMonthToUse, =, monthToUse, %, iMax, ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =]
[monthToUse, %, iMax, ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -]
[iMax, ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +]
[remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (]
[remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (]
[0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==]
[remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {]
[iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=]
[remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, int, dayToUse, =]
[remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, int, dayToUse, =]
[if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, int, dayToUse, =, iChronology, ., getDayOfMonth, (]
[monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,]
[1, ), {, yearToUse, +=, 1, ;, }, }, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,]
[;, }, }, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int, maxDay, =]
[;, }, }, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int, maxDay, =]
[dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (]
[iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, yearToUse, ,]
[,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, yearToUse, ,, monthToUse, ), ;, if, (]
[,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, yearToUse, ,, monthToUse, ), ;, if, (]
[,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, yearToUse, ,, monthToUse, ), ;, if, (, dayToUse, >]
[;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, yearToUse, ,, monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {]
[maxDay, =, iChronology, ., getDaysInYearMonth, (, yearToUse, ,, monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =]
[yearToUse, ,, monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =]
[yearToUse, ,, monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =]
[;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (]
[(, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, yearToUse, ,]
[>, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, yearToUse, ,, monthToUse, ,]
[dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, yearToUse, ,, monthToUse, ,, dayToUse, ), ;, return]
[dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, yearToUse, ,, monthToUse, ,, dayToUse, ), ;, return]
[maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, yearToUse, ,, monthToUse, ,, dayToUse, ), ;, return, datePart, +]
[return, datePart, +, timePart, ;, }, public, long, add, (, long, instant, ,, long, months, ), {, int, i_months, =]
[timePart, ;, }, public, long, add, (, long, instant, ,, long, months, ), {, int, i_months, =, (, int, )]
[long, add, (, long, instant, ,, long, months, ), {, int, i_months, =, (, int, ), months, ;, if, (]
[long, add, (, long, instant, ,, long, months, ), {, int, i_months, =, (, int, ), months, ;, if, (]
[(, long, instant, ,, long, months, ), {, int, i_months, =, (, int, ), months, ;, if, (, i_months, ==]
[long, months, ), {, int, i_months, =, (, int, ), months, ;, if, (, i_months, ==, months, ), {, return]
[), {, int, i_months, =, (, int, ), months, ;, if, (, i_months, ==, months, ), {, return, add, (]
[int, i_months, =, (, int, ), months, ;, if, (, i_months, ==, months, ), {, return, add, (, instant, ,]
[;, if, (, i_months, ==, months, ), {, return, add, (, instant, ,, i_months, ), ;, }, long, timePart, =]
[;, if, (, i_months, ==, months, ), {, return, add, (, instant, ,, i_months, ), ;, }, long, timePart, =]
[==, months, ), {, return, add, (, instant, ,, i_months, ), ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (]
[(, instant, ,, i_months, ), ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =]
[(, instant, ,, i_months, ), ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =]
[), ;, }, long, timePart, =, iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology, ., getYear, (]
[iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =]
[iChronology, ., getMillisOfDay, (, instant, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =]
[instant, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (]
[;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,]
[), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, long, yearToUse, ;, long, monthToUse, =]
[), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, long, yearToUse, ;, long, monthToUse, =]
[), ;, int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, long, yearToUse, ;, long, monthToUse, =]
[int, thisMonth, =, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, long, yearToUse, ;, long, monthToUse, =, thisMonth, -]
[=, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ;, long, yearToUse, ;, long, monthToUse, =, thisMonth, -, 1, +]
[(, instant, ,, thisYear, ), ;, long, yearToUse, ;, long, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (]
[(, instant, ,, thisYear, ), ;, long, yearToUse, ;, long, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (]
[,, thisYear, ), ;, long, yearToUse, ;, long, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=]
[;, long, yearToUse, ;, long, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {]
[yearToUse, ;, long, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =]
[yearToUse, ;, long, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =]
[long, monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +]
[monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (]
[monthToUse, =, thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (]
[thisMonth, -, 1, +, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /]
[+, months, ;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;]
[;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =]
[;, if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =]
[if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (]
[if, (, monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (]
[monthToUse, >=, 0, ), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %]
[), {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +]
[+, (, monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {]
[monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =]
[monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =]
[monthToUse, /, iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =]
[iMax, ), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +]
[), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (]
[), ;, monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (]
[monthToUse, =, (, monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /]
[monthToUse, %, iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -]
[iMax, ), +, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;]
[+, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =]
[+, 1, ;, }, else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =]
[else, {, yearToUse, =, thisYear, +, (, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =, Math, ., abs, (]
[(, monthToUse, /, iMax, ), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =]
[iMax, ), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, )]
[), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (]
[), -, 1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (]
[1, ;, monthToUse, =, Math, ., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (, monthToUse, %]
[., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (, monthToUse, %, iMax, ), ;, if, (]
[., abs, (, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (, monthToUse, %, iMax, ), ;, if, (]
[(, monthToUse, ), ;, int, remMonthToUse, =, (, int, ), (, monthToUse, %, iMax, ), ;, if, (, remMonthToUse, ==]
[;, int, remMonthToUse, =, (, int, ), (, monthToUse, %, iMax, ), ;, if, (, remMonthToUse, ==, 0, ), {]
[remMonthToUse, =, (, int, ), (, monthToUse, %, iMax, ), ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =]
[int, ), (, monthToUse, %, iMax, ), ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }]
[(, monthToUse, %, iMax, ), ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =]
[(, monthToUse, %, iMax, ), ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =]
[(, monthToUse, %, iMax, ), ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =]
[%, iMax, ), ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -]
[), ;, if, (, remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +]
[remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (]
[remMonthToUse, ==, 0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (]
[0, ), {, remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==]
[remMonthToUse, =, iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {]
[iMax, ;, }, monthToUse, =, iMax, -, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=]
[-, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, if, (]
[-, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, if, (]
[-, remMonthToUse, +, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, if, (]
[+, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, if, (, yearToUse, <]
[+, 1, ;, if, (, monthToUse, ==, 1, ), {, yearToUse, +=, 1, ;, }, }, if, (, yearToUse, <]
[==, 1, ), {, yearToUse, +=, 1, ;, }, }, if, (, yearToUse, <, iChronology, ., getMinYear, (, ), ||]
[==, 1, ), {, yearToUse, +=, 1, ;, }, }, if, (, yearToUse, <, iChronology, ., getMinYear, (, ), ||]
[), {, yearToUse, +=, 1, ;, }, }, if, (, yearToUse, <, iChronology, ., getMinYear, (, ), ||, yearToUse, >]
[), {, yearToUse, +=, 1, ;, }, }, if, (, yearToUse, <, iChronology, ., getMinYear, (, ), ||, yearToUse, >]
[if, (, yearToUse, <, iChronology, ., getMinYear, (, ), ||, yearToUse, >, iChronology, ., getMaxYear, (, ), ), {, throw]
[<, iChronology, ., getMinYear, (, ), ||, yearToUse, >, iChronology, ., getMaxYear, (, ), ), {, throw, new, IllegalArgumentException, (]
[<, iChronology, ., getMinYear, (, ), ||, yearToUse, >, iChronology, ., getMaxYear, (, ), ), {, throw, new, IllegalArgumentException, (]
[., getMinYear, (, ), ||, yearToUse, >, iChronology, ., getMaxYear, (, ), ), {, throw, new, IllegalArgumentException, (, "Magnitude of add amount is too large: ", +]
[iChronology, ., getMaxYear, (, ), ), {, throw, new, IllegalArgumentException, (, "Magnitude of add amount is too large: ", +, months, ), ;, }, int, i_yearToUse, =]
[(, ), ), {, throw, new, IllegalArgumentException, (, "Magnitude of add amount is too large: ", +, months, ), ;, }, int, i_yearToUse, =, (, int, )]
[new, IllegalArgumentException, (, "Magnitude of add amount is too large: ", +, months, ), ;, }, int, i_yearToUse, =, (, int, ), yearToUse, ;, int, i_monthToUse, =]
["Magnitude of add amount is too large: ", +, months, ), ;, }, int, i_yearToUse, =, (, int, ), yearToUse, ;, int, i_monthToUse, =, (, int, )]
[}, int, i_yearToUse, =, (, int, ), yearToUse, ;, int, i_monthToUse, =, (, int, ), monthToUse, ;, int, dayToUse, =]
[}, int, i_yearToUse, =, (, int, ), yearToUse, ;, int, i_monthToUse, =, (, int, ), monthToUse, ;, int, dayToUse, =]
[(, int, ), yearToUse, ;, int, i_monthToUse, =, (, int, ), monthToUse, ;, int, dayToUse, =, iChronology, ., getDayOfMonth, (]
[), yearToUse, ;, int, i_monthToUse, =, (, int, ), monthToUse, ;, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,]
[;, int, i_monthToUse, =, (, int, ), monthToUse, ;, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,]
[), monthToUse, ;, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int, maxDay, =]
[), monthToUse, ;, int, dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int, maxDay, =]
[dayToUse, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (]
[iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, i_yearToUse, ,]
[,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, i_yearToUse, ,, i_monthToUse, ), ;, if, (]
[,, thisYear, ,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, i_yearToUse, ,, i_monthToUse, ), ;, if, (]
[,, thisMonth, ), ;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, i_yearToUse, ,, i_monthToUse, ), ;, if, (, dayToUse, >]
[;, int, maxDay, =, iChronology, ., getDaysInYearMonth, (, i_yearToUse, ,, i_monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {]
[maxDay, =, iChronology, ., getDaysInYearMonth, (, i_yearToUse, ,, i_monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =]
[i_yearToUse, ,, i_monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =]
[i_yearToUse, ,, i_monthToUse, ), ;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =]
[;, if, (, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (]
[(, dayToUse, >, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, i_yearToUse, ,]
[>, maxDay, ), {, dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, i_yearToUse, ,, i_monthToUse, ,]
[dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, i_yearToUse, ,, i_monthToUse, ,, dayToUse, ), ;, return]
[dayToUse, =, maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, i_yearToUse, ,, i_monthToUse, ,, dayToUse, ), ;, return]
[maxDay, ;, }, long, datePart, =, iChronology, ., getYearMonthDayMillis, (, i_yearToUse, ,, i_monthToUse, ,, dayToUse, ), ;, return, datePart, +]
[], add, (, ReadablePartial, partial, ,, int, fieldIndex, ,, int, [, ], values, ,, int, valueToAdd, ), {, if, (]
[], add, (, ReadablePartial, partial, ,, int, fieldIndex, ,, int, [, ], values, ,, int, valueToAdd, ), {, if, (]
[(, ReadablePartial, partial, ,, int, fieldIndex, ,, int, [, ], values, ,, int, valueToAdd, ), {, if, (, valueToAdd, ==]
[int, fieldIndex, ,, int, [, ], values, ,, int, valueToAdd, ), {, if, (, valueToAdd, ==, 0, ), {, return]
[], values, ,, int, valueToAdd, ), {, if, (, valueToAdd, ==, 0, ), {, return, values, ;, }, if, (]
[], values, ,, int, valueToAdd, ), {, if, (, valueToAdd, ==, 0, ), {, return, values, ;, }, if, (]
[], values, ,, int, valueToAdd, ), {, if, (, valueToAdd, ==, 0, ), {, return, values, ;, }, if, (]
[], values, ,, int, valueToAdd, ), {, if, (, valueToAdd, ==, 0, ), {, return, values, ;, }, if, (]
[], values, ,, int, valueToAdd, ), {, if, (, valueToAdd, ==, 0, ), {, return, values, ;, }, if, (]
[{, if, (, valueToAdd, ==, 0, ), {, return, values, ;, }, if, (, partial, ., size, (, ), >]
[(, valueToAdd, ==, 0, ), {, return, values, ;, }, if, (, partial, ., size, (, ), >, 0, &&]
[(, valueToAdd, ==, 0, ), {, return, values, ;, }, if, (, partial, ., size, (, ), >, 0, &&]
[(, valueToAdd, ==, 0, ), {, return, values, ;, }, if, (, partial, ., size, (, ), >, 0, &&]
[), {, return, values, ;, }, if, (, partial, ., size, (, ), >, 0, &&, partial, ., getFieldType, (]
[}, if, (, partial, ., size, (, ), >, 0, &&, partial, ., getFieldType, (, 0, ), ., equals, (]
[}, if, (, partial, ., size, (, ), >, 0, &&, partial, ., getFieldType, (, 0, ), ., equals, (]
[), >, 0, &&, partial, ., getFieldType, (, 0, ), ., equals, (, DateTimeFieldType, ., monthOfYear, (, ), ), &&]
[), >, 0, &&, partial, ., getFieldType, (, 0, ), ., equals, (, DateTimeFieldType, ., monthOfYear, (, ), ), &&]
[0, &&, partial, ., getFieldType, (, 0, ), ., equals, (, DateTimeFieldType, ., monthOfYear, (, ), ), &&, fieldIndex, ==]
[0, ), ., equals, (, DateTimeFieldType, ., monthOfYear, (, ), ), &&, fieldIndex, ==, 0, ), {, int, curMonth0, =]
[0, ), ., equals, (, DateTimeFieldType, ., monthOfYear, (, ), ), &&, fieldIndex, ==, 0, ), {, int, curMonth0, =]
[0, ), ., equals, (, DateTimeFieldType, ., monthOfYear, (, ), ), &&, fieldIndex, ==, 0, ), {, int, curMonth0, =]
[(, DateTimeFieldType, ., monthOfYear, (, ), ), &&, fieldIndex, ==, 0, ), {, int, curMonth0, =, partial, ., getValue, (]
[monthOfYear, (, ), ), &&, fieldIndex, ==, 0, ), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -]
[fieldIndex, ==, 0, ), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =]
[fieldIndex, ==, 0, ), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =]
[==, 0, ), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (]
[==, 0, ), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (]
[0, ), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (, (]
[0, ), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (, (]
[0, ), {, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (, (]
[{, int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (, (, curMonth0, +]
[int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (, (, curMonth0, +, (]
[int, curMonth0, =, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (, (, curMonth0, +, (]
[=, partial, ., getValue, (, 0, ), -, 1, ;, int, newMonth, =, (, (, curMonth0, +, (, valueToAdd, %]
[getValue, (, 0, ), -, 1, ;, int, newMonth, =, (, (, curMonth0, +, (, valueToAdd, %, 12, ), +]
[), -, 1, ;, int, newMonth, =, (, (, curMonth0, +, (, valueToAdd, %, 12, ), +, 12, ), %]
[;, int, newMonth, =, (, (, curMonth0, +, (, valueToAdd, %, 12, ), +, 12, ), %, 12, ), +]
[=, (, (, curMonth0, +, (, valueToAdd, %, 12, ), +, 12, ), %, 12, ), +, 1, ;, return]
[(, curMonth0, +, (, valueToAdd, %, 12, ), +, 12, ), %, 12, ), +, 1, ;, return, set, (]
[+, (, valueToAdd, %, 12, ), +, 12, ), %, 12, ), +, 1, ;, return, set, (, partial, ,]
[valueToAdd, %, 12, ), +, 12, ), %, 12, ), +, 1, ;, return, set, (, partial, ,, 0, ,]
[12, ), +, 12, ), %, 12, ), +, 1, ;, return, set, (, partial, ,, 0, ,, values, ,]
[12, ), +, 1, ;, return, set, (, partial, ,, 0, ,, values, ,, newMonth, ), ;, }, if, (]
[12, ), +, 1, ;, return, set, (, partial, ,, 0, ,, values, ,, newMonth, ), ;, }, if, (]
[;, return, set, (, partial, ,, 0, ,, values, ,, newMonth, ), ;, }, if, (, DateTimeUtils, ., isContiguous, (]
[,, values, ,, newMonth, ), ;, }, if, (, DateTimeUtils, ., isContiguous, (, partial, ), ), {, long, instant, =]
[if, (, DateTimeUtils, ., isContiguous, (, partial, ), ), {, long, instant, =, 0L, ;, for, (, int, i, =]
[isContiguous, (, partial, ), ), {, long, instant, =, 0L, ;, for, (, int, i, =, 0, ,, isize, =]
[isContiguous, (, partial, ), ), {, long, instant, =, 0L, ;, for, (, int, i, =, 0, ,, isize, =]
[long, instant, =, 0L, ;, for, (, int, i, =, 0, ,, isize, =, partial, ., size, (, ), ;]
[long, instant, =, 0L, ;, for, (, int, i, =, 0, ,, isize, =, partial, ., size, (, ), ;]
[=, 0L, ;, for, (, int, i, =, 0, ,, isize, =, partial, ., size, (, ), ;, i, <]
[;, for, (, int, i, =, 0, ,, isize, =, partial, ., size, (, ), ;, i, <, isize, ;]
[;, for, (, int, i, =, 0, ,, isize, =, partial, ., size, (, ), ;, i, <, isize, ;]
[i, =, 0, ,, isize, =, partial, ., size, (, ), ;, i, <, isize, ;, i, ++, ), {]
[0, ,, isize, =, partial, ., size, (, ), ;, i, <, isize, ;, i, ++, ), {, instant, =]
[0, ,, isize, =, partial, ., size, (, ), ;, i, <, isize, ;, i, ++, ), {, instant, =]
[0, ,, isize, =, partial, ., size, (, ), ;, i, <, isize, ;, i, ++, ), {, instant, =]
[0, ,, isize, =, partial, ., size, (, ), ;, i, <, isize, ;, i, ++, ), {, instant, =]
[partial, ., size, (, ), ;, i, <, isize, ;, i, ++, ), {, instant, =, partial, ., getFieldType, (]
[;, i, <, isize, ;, i, ++, ), {, instant, =, partial, ., getFieldType, (, i, ), ., getField, (]
[i, ++, ), {, instant, =, partial, ., getFieldType, (, i, ), ., getField, (, iChronology, ), ., set, (]
[), {, instant, =, partial, ., getFieldType, (, i, ), ., getField, (, iChronology, ), ., set, (, instant, ,]
[), {, instant, =, partial, ., getFieldType, (, i, ), ., getField, (, iChronology, ), ., set, (, instant, ,]
[instant, =, partial, ., getFieldType, (, i, ), ., getField, (, iChronology, ), ., set, (, instant, ,, values, []
[(, i, ), ., getField, (, iChronology, ), ., set, (, instant, ,, values, [, i, ], ), ;, }]
[), ., getField, (, iChronology, ), ., set, (, instant, ,, values, [, i, ], ), ;, }, instant, =]
[getField, (, iChronology, ), ., set, (, instant, ,, values, [, i, ], ), ;, }, instant, =, add, (]
[iChronology, ), ., set, (, instant, ,, values, [, i, ], ), ;, }, instant, =, add, (, instant, ,]
[(, instant, ,, values, [, i, ], ), ;, }, instant, =, add, (, instant, ,, valueToAdd, ), ;, return]
[(, instant, ,, values, [, i, ], ), ;, }, instant, =, add, (, instant, ,, valueToAdd, ), ;, return]
[[, i, ], ), ;, }, instant, =, add, (, instant, ,, valueToAdd, ), ;, return, iChronology, ., get, (]
[], ), ;, }, instant, =, add, (, instant, ,, valueToAdd, ), ;, return, iChronology, ., get, (, partial, ,]
[(, instant, ,, valueToAdd, ), ;, return, iChronology, ., get, (, partial, ,, instant, ), ;, }, else, {, return]
[(, instant, ,, valueToAdd, ), ;, return, iChronology, ., get, (, partial, ,, instant, ), ;, }, else, {, return]
[), ;, return, iChronology, ., get, (, partial, ,, instant, ), ;, }, else, {, return, super, ., add, (]
[return, iChronology, ., get, (, partial, ,, instant, ), ;, }, else, {, return, super, ., add, (, partial, ,]
[., get, (, partial, ,, instant, ), ;, }, else, {, return, super, ., add, (, partial, ,, fieldIndex, ,]
[(, partial, ,, instant, ), ;, }, else, {, return, super, ., add, (, partial, ,, fieldIndex, ,, values, ,]
[,, values, ,, valueToAdd, ), ;, }, }, public, long, addWrapField, (, long, instant, ,, int, months, ), {, return]
[,, valueToAdd, ), ;, }, }, public, long, addWrapField, (, long, instant, ,, int, months, ), {, return, set, (]
[), ;, }, }, public, long, addWrapField, (, long, instant, ,, int, months, ), {, return, set, (, instant, ,]
[), ;, }, }, public, long, addWrapField, (, long, instant, ,, int, months, ), {, return, set, (, instant, ,]
[public, long, addWrapField, (, long, instant, ,, int, months, ), {, return, set, (, instant, ,, FieldUtils, ., getWrappedValue, (]
[addWrapField, (, long, instant, ,, int, months, ), {, return, set, (, instant, ,, FieldUtils, ., getWrappedValue, (, get, (]
[instant, ,, int, months, ), {, return, set, (, instant, ,, FieldUtils, ., getWrappedValue, (, get, (, instant, ), ,]
[int, months, ), {, return, set, (, instant, ,, FieldUtils, ., getWrappedValue, (, get, (, instant, ), ,, months, ,]
[), {, return, set, (, instant, ,, FieldUtils, ., getWrappedValue, (, get, (, instant, ), ,, months, ,, MIN, ,]
[MIN, ,, iMax, ), ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (]
[MIN, ,, iMax, ), ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (]
[iMax, ), ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <]
[}, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant, ), {, return]
[public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant, ), {, return, -]
[getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant, ), {, return, -, getDifference, (]
[long, minuendInstant, ,, long, subtrahendInstant, ), {, if, (, minuendInstant, <, subtrahendInstant, ), {, return, -, getDifference, (, subtrahendInstant, ,]
[if, (, minuendInstant, <, subtrahendInstant, ), {, return, -, getDifference, (, subtrahendInstant, ,, minuendInstant, ), ;, }, int, minuendYear, =]
[if, (, minuendInstant, <, subtrahendInstant, ), {, return, -, getDifference, (, subtrahendInstant, ,, minuendInstant, ), ;, }, int, minuendYear, =]
[subtrahendInstant, ), {, return, -, getDifference, (, subtrahendInstant, ,, minuendInstant, ), ;, }, int, minuendYear, =, iChronology, ., getYear, (]
[(, subtrahendInstant, ,, minuendInstant, ), ;, }, int, minuendYear, =, iChronology, ., getYear, (, minuendInstant, ), ;, int, minuendMonth, =]
[(, subtrahendInstant, ,, minuendInstant, ), ;, }, int, minuendYear, =, iChronology, ., getYear, (, minuendInstant, ), ;, int, minuendMonth, =]
[), ;, }, int, minuendYear, =, iChronology, ., getYear, (, minuendInstant, ), ;, int, minuendMonth, =, iChronology, ., getMonthOfYear, (]
[}, int, minuendYear, =, iChronology, ., getYear, (, minuendInstant, ), ;, int, minuendMonth, =, iChronology, ., getMonthOfYear, (, minuendInstant, ,]
[getYear, (, minuendInstant, ), ;, int, minuendMonth, =, iChronology, ., getMonthOfYear, (, minuendInstant, ,, minuendYear, ), ;, int, subtrahendYear, =]
[getYear, (, minuendInstant, ), ;, int, minuendMonth, =, iChronology, ., getMonthOfYear, (, minuendInstant, ,, minuendYear, ), ;, int, subtrahendYear, =]
[;, int, minuendMonth, =, iChronology, ., getMonthOfYear, (, minuendInstant, ,, minuendYear, ), ;, int, subtrahendYear, =, iChronology, ., getYear, (]
[getMonthOfYear, (, minuendInstant, ,, minuendYear, ), ;, int, subtrahendYear, =, iChronology, ., getYear, (, subtrahendInstant, ), ;, int, subtrahendMonth, =]
[getMonthOfYear, (, minuendInstant, ,, minuendYear, ), ;, int, subtrahendYear, =, iChronology, ., getYear, (, subtrahendInstant, ), ;, int, subtrahendMonth, =]
[minuendYear, ), ;, int, subtrahendYear, =, iChronology, ., getYear, (, subtrahendInstant, ), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (]
[;, int, subtrahendYear, =, iChronology, ., getYear, (, subtrahendInstant, ), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,]
[getYear, (, subtrahendInstant, ), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference, =]
[getYear, (, subtrahendInstant, ), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference, =]
[getYear, (, subtrahendInstant, ), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference, =]
[getYear, (, subtrahendInstant, ), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference, =]
[(, subtrahendInstant, ), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference, =, (]
[(, subtrahendInstant, ), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference, =, (]
[), ;, int, subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference, =, (, minuendYear, -]
[subtrahendMonth, =, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference, =, (, minuendYear, -, subtrahendYear, ), *]
[=, iChronology, ., getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference, =, (, minuendYear, -, subtrahendYear, ), *, (]
[getMonthOfYear, (, subtrahendInstant, ,, subtrahendYear, ), ;, long, difference, =, (, minuendYear, -, subtrahendYear, ), *, (, (, long, )]
[,, subtrahendYear, ), ;, long, difference, =, (, minuendYear, -, subtrahendYear, ), *, (, (, long, ), iMax, ), +]
[), ;, long, difference, =, (, minuendYear, -, subtrahendYear, ), *, (, (, long, ), iMax, ), +, minuendMonth, -]
[(, minuendYear, -, subtrahendYear, ), *, (, (, long, ), iMax, ), +, minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =]
[(, minuendYear, -, subtrahendYear, ), *, (, (, long, ), iMax, ), +, minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =]
[), *, (, (, long, ), iMax, ), +, minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (]
[(, (, long, ), iMax, ), +, minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,]
[long, ), iMax, ), +, minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,]
[minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;, if, (]
[minuendMonth, -, subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;, if, (]
[subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;, if, (, minuendDom, ==]
[subtrahendMonth, ;, int, minuendDom, =, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;, if, (, minuendDom, ==]
[=, iChronology, ., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;, if, (, minuendDom, ==, iChronology, ., getDaysInYearMonth, (]
[., getDayOfMonth, (, minuendInstant, ,, minuendYear, ,, minuendMonth, ), ;, if, (, minuendDom, ==, iChronology, ., getDaysInYearMonth, (, minuendYear, ,]
[minuendMonth, ), ;, if, (, minuendDom, ==, iChronology, ., getDaysInYearMonth, (, minuendYear, ,, minuendMonth, ), ), {, int, subtrahendDom, =]
[minuendMonth, ), ;, if, (, minuendDom, ==, iChronology, ., getDaysInYearMonth, (, minuendYear, ,, minuendMonth, ), ), {, int, subtrahendDom, =]
[(, minuendDom, ==, iChronology, ., getDaysInYearMonth, (, minuendYear, ,, minuendMonth, ), ), {, int, subtrahendDom, =, iChronology, ., getDayOfMonth, (]
[==, iChronology, ., getDaysInYearMonth, (, minuendYear, ,, minuendMonth, ), ), {, int, subtrahendDom, =, iChronology, ., getDayOfMonth, (, subtrahendInstant, ,]
[., getDaysInYearMonth, (, minuendYear, ,, minuendMonth, ), ), {, int, subtrahendDom, =, iChronology, ., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,]
[minuendMonth, ), ), {, int, subtrahendDom, =, iChronology, ., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,, subtrahendMonth, ), ;, if, (]
[minuendMonth, ), ), {, int, subtrahendDom, =, iChronology, ., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,, subtrahendMonth, ), ;, if, (]
[), {, int, subtrahendDom, =, iChronology, ., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, subtrahendDom, >]
[subtrahendDom, =, iChronology, ., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, subtrahendDom, >, minuendDom, ), {]
[iChronology, ., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, subtrahendDom, >, minuendDom, ), {, subtrahendInstant, =]
[iChronology, ., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, subtrahendDom, >, minuendDom, ), {, subtrahendInstant, =]
[iChronology, ., getDayOfMonth, (, subtrahendInstant, ,, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, subtrahendDom, >, minuendDom, ), {, subtrahendInstant, =]
[subtrahendMonth, ), ;, if, (, subtrahendDom, >, minuendDom, ), {, subtrahendInstant, =, iChronology, ., dayOfMonth, (, ), ., set, (]
[;, if, (, subtrahendDom, >, minuendDom, ), {, subtrahendInstant, =, iChronology, ., dayOfMonth, (, ), ., set, (, subtrahendInstant, ,]
[subtrahendInstant, =, iChronology, ., dayOfMonth, (, ), ., set, (, subtrahendInstant, ,, minuendDom, ), ;, }, }, long, minuendRem, =]
[subtrahendInstant, =, iChronology, ., dayOfMonth, (, ), ., set, (, subtrahendInstant, ,, minuendDom, ), ;, }, }, long, minuendRem, =]
[iChronology, ., dayOfMonth, (, ), ., set, (, subtrahendInstant, ,, minuendDom, ), ;, }, }, long, minuendRem, =, minuendInstant, -]
[iChronology, ., dayOfMonth, (, ), ., set, (, subtrahendInstant, ,, minuendDom, ), ;, }, }, long, minuendRem, =, minuendInstant, -]
[), ., set, (, subtrahendInstant, ,, minuendDom, ), ;, }, }, long, minuendRem, =, minuendInstant, -, iChronology, ., getYearMonthMillis, (]
[set, (, subtrahendInstant, ,, minuendDom, ), ;, }, }, long, minuendRem, =, minuendInstant, -, iChronology, ., getYearMonthMillis, (, minuendYear, ,]
[;, }, }, long, minuendRem, =, minuendInstant, -, iChronology, ., getYearMonthMillis, (, minuendYear, ,, minuendMonth, ), ;, long, subtrahendRem, =]
[;, }, }, long, minuendRem, =, minuendInstant, -, iChronology, ., getYearMonthMillis, (, minuendYear, ,, minuendMonth, ), ;, long, subtrahendRem, =]
[}, long, minuendRem, =, minuendInstant, -, iChronology, ., getYearMonthMillis, (, minuendYear, ,, minuendMonth, ), ;, long, subtrahendRem, =, subtrahendInstant, -]
[}, long, minuendRem, =, minuendInstant, -, iChronology, ., getYearMonthMillis, (, minuendYear, ,, minuendMonth, ), ;, long, subtrahendRem, =, subtrahendInstant, -]
[minuendInstant, -, iChronology, ., getYearMonthMillis, (, minuendYear, ,, minuendMonth, ), ;, long, subtrahendRem, =, subtrahendInstant, -, iChronology, ., getYearMonthMillis, (]
[iChronology, ., getYearMonthMillis, (, minuendYear, ,, minuendMonth, ), ;, long, subtrahendRem, =, subtrahendInstant, -, iChronology, ., getYearMonthMillis, (, subtrahendYear, ,]
[,, minuendMonth, ), ;, long, subtrahendRem, =, subtrahendInstant, -, iChronology, ., getYearMonthMillis, (, subtrahendYear, ,, subtrahendMonth, ), ;, if, (]
[,, minuendMonth, ), ;, long, subtrahendRem, =, subtrahendInstant, -, iChronology, ., getYearMonthMillis, (, subtrahendYear, ,, subtrahendMonth, ), ;, if, (]
[), ;, long, subtrahendRem, =, subtrahendInstant, -, iChronology, ., getYearMonthMillis, (, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, minuendRem, <]
[subtrahendRem, =, subtrahendInstant, -, iChronology, ., getYearMonthMillis, (, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, minuendRem, <, subtrahendRem, ), {]
[subtrahendRem, =, subtrahendInstant, -, iChronology, ., getYearMonthMillis, (, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, minuendRem, <, subtrahendRem, ), {]
[., getYearMonthMillis, (, subtrahendYear, ,, subtrahendMonth, ), ;, if, (, minuendRem, <, subtrahendRem, ), {, difference, --, ;, }, return]
[{, difference, --, ;, }, return, difference, ;, }, public, long, set, (, long, instant, ,, int, month, ), {]
[{, difference, --, ;, }, return, difference, ;, }, public, long, set, (, long, instant, ,, int, month, ), {]
[}, return, difference, ;, }, public, long, set, (, long, instant, ,, int, month, ), {, FieldUtils, ., verifyValueBounds, (]
[difference, ;, }, public, long, set, (, long, instant, ,, int, month, ), {, FieldUtils, ., verifyValueBounds, (, this, ,]
[}, public, long, set, (, long, instant, ,, int, month, ), {, FieldUtils, ., verifyValueBounds, (, this, ,, month, ,]
[long, set, (, long, instant, ,, int, month, ), {, FieldUtils, ., verifyValueBounds, (, this, ,, month, ,, MIN, ,]
[int, month, ), {, FieldUtils, ., verifyValueBounds, (, this, ,, month, ,, MIN, ,, iMax, ), ;, int, thisYear, =]
[int, month, ), {, FieldUtils, ., verifyValueBounds, (, this, ,, month, ,, MIN, ,, iMax, ), ;, int, thisYear, =]
[FieldUtils, ., verifyValueBounds, (, this, ,, month, ,, MIN, ,, iMax, ), ;, int, thisYear, =, iChronology, ., getYear, (]
[month, ,, MIN, ,, iMax, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisDom, =]
[month, ,, MIN, ,, iMax, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisDom, =]
[iMax, ), ;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisDom, =, iChronology, ., getDayOfMonth, (]
[;, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, int, thisDom, =, iChronology, ., getDayOfMonth, (, instant, ,]
[getYear, (, instant, ), ;, int, thisDom, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ), ;, int, maxDom, =]
[getYear, (, instant, ), ;, int, thisDom, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ), ;, int, maxDom, =]
[;, int, thisDom, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ), ;, int, maxDom, =, iChronology, ., getDaysInYearMonth, (]
[thisDom, =, iChronology, ., getDayOfMonth, (, instant, ,, thisYear, ), ;, int, maxDom, =, iChronology, ., getDaysInYearMonth, (, thisYear, ,]
[(, instant, ,, thisYear, ), ;, int, maxDom, =, iChronology, ., getDaysInYearMonth, (, thisYear, ,, month, ), ;, if, (]
[(, instant, ,, thisYear, ), ;, int, maxDom, =, iChronology, ., getDaysInYearMonth, (, thisYear, ,, month, ), ;, if, (]
[,, thisYear, ), ;, int, maxDom, =, iChronology, ., getDaysInYearMonth, (, thisYear, ,, month, ), ;, if, (, thisDom, >]
[;, int, maxDom, =, iChronology, ., getDaysInYearMonth, (, thisYear, ,, month, ), ;, if, (, thisDom, >, maxDom, ), {]
[maxDom, =, iChronology, ., getDaysInYearMonth, (, thisYear, ,, month, ), ;, if, (, thisDom, >, maxDom, ), {, thisDom, =]
[getDaysInYearMonth, (, thisYear, ,, month, ), ;, if, (, thisDom, >, maxDom, ), {, thisDom, =, maxDom, ;, }, return]
[getDaysInYearMonth, (, thisYear, ,, month, ), ;, if, (, thisDom, >, maxDom, ), {, thisDom, =, maxDom, ;, }, return]
[getDaysInYearMonth, (, thisYear, ,, month, ), ;, if, (, thisDom, >, maxDom, ), {, thisDom, =, maxDom, ;, }, return]
[month, ), ;, if, (, thisDom, >, maxDom, ), {, thisDom, =, maxDom, ;, }, return, iChronology, ., getYearMonthDayMillis, (]
[;, if, (, thisDom, >, maxDom, ), {, thisDom, =, maxDom, ;, }, return, iChronology, ., getYearMonthDayMillis, (, thisYear, ,]
[(, thisDom, >, maxDom, ), {, thisDom, =, maxDom, ;, }, return, iChronology, ., getYearMonthDayMillis, (, thisYear, ,, month, ,]
[maxDom, ), {, thisDom, =, maxDom, ;, }, return, iChronology, ., getYearMonthDayMillis, (, thisYear, ,, month, ,, thisDom, ), +]
[maxDom, ), {, thisDom, =, maxDom, ;, }, return, iChronology, ., getYearMonthDayMillis, (, thisYear, ,, month, ,, thisDom, ), +]
[=, maxDom, ;, }, return, iChronology, ., getYearMonthDayMillis, (, thisYear, ,, month, ,, thisDom, ), +, iChronology, ., getMillisOfDay, (]
[month, ,, thisDom, ), +, iChronology, ., getMillisOfDay, (, instant, ), ;, }, public, DurationField, getRangeDurationField, (, ), {, return]
[month, ,, thisDom, ), +, iChronology, ., getMillisOfDay, (, instant, ), ;, }, public, DurationField, getRangeDurationField, (, ), {, return]
[{, return, iChronology, ., years, (, ), ;, }, public, boolean, isLeap, (, long, instant, ), {, int, thisYear, =]
[{, return, iChronology, ., years, (, ), ;, }, public, boolean, isLeap, (, long, instant, ), {, int, thisYear, =]
[years, (, ), ;, }, public, boolean, isLeap, (, long, instant, ), {, int, thisYear, =, iChronology, ., getYear, (]
[public, boolean, isLeap, (, long, instant, ), {, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, if, (]
[public, boolean, isLeap, (, long, instant, ), {, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, if, (]
[long, instant, ), {, int, thisYear, =, iChronology, ., getYear, (, instant, ), ;, if, (, iChronology, ., isLeapYear, (]
[thisYear, =, iChronology, ., getYear, (, instant, ), ;, if, (, iChronology, ., isLeapYear, (, thisYear, ), ), {, return]
[=, iChronology, ., getYear, (, instant, ), ;, if, (, iChronology, ., isLeapYear, (, thisYear, ), ), {, return, (]
[=, iChronology, ., getYear, (, instant, ), ;, if, (, iChronology, ., isLeapYear, (, thisYear, ), ), {, return, (]
[=, iChronology, ., getYear, (, instant, ), ;, if, (, iChronology, ., isLeapYear, (, thisYear, ), ), {, return, (]
[(, instant, ), ;, if, (, iChronology, ., isLeapYear, (, thisYear, ), ), {, return, (, iChronology, ., getMonthOfYear, (]
[), ;, if, (, iChronology, ., isLeapYear, (, thisYear, ), ), {, return, (, iChronology, ., getMonthOfYear, (, instant, ,]
[(, iChronology, ., isLeapYear, (, thisYear, ), ), {, return, (, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ==]
[thisYear, ), ), {, return, (, iChronology, ., getMonthOfYear, (, instant, ,, thisYear, ), ==, iLeapMonth, ), ;, }, return]
[thisYear, ), ==, iLeapMonth, ), ;, }, return, false, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return]
[thisYear, ), ==, iLeapMonth, ), ;, }, return, false, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return]
[==, iLeapMonth, ), ;, }, return, false, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, isLeap, (]
[;, }, return, false, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, isLeap, (, instant, ), ?]
[return, false, ;, }, public, int, getLeapAmount, (, long, instant, ), {, return, isLeap, (, instant, ), ?, 1, :]
[), {, return, isLeap, (, instant, ), ?, 1, :, 0, ;, }, public, DurationField, getLeapDurationField, (, ), {, return]
[), {, return, isLeap, (, instant, ), ?, 1, :, 0, ;, }, public, DurationField, getLeapDurationField, (, ), {, return]
[DurationField, getLeapDurationField, (, ), {, return, iChronology, ., days, (, ), ;, }, public, int, getMinimumValue, (, ), {, return]
[), ;, }, public, int, getMinimumValue, (, ), {, return, MIN, ;, }, public, int, getMaximumValue, (, ), {, return]
[int, getMaximumValue, (, ), {, return, iMax, ;, }, public, long, roundFloor, (, long, instant, ), {, int, year, =]
[int, getMaximumValue, (, ), {, return, iMax, ;, }, public, long, roundFloor, (, long, instant, ), {, int, year, =]
[{, return, iMax, ;, }, public, long, roundFloor, (, long, instant, ), {, int, year, =, iChronology, ., getYear, (]
[long, roundFloor, (, long, instant, ), {, int, year, =, iChronology, ., getYear, (, instant, ), ;, int, month, =]
[long, roundFloor, (, long, instant, ), {, int, year, =, iChronology, ., getYear, (, instant, ), ;, int, month, =]
[instant, ), {, int, year, =, iChronology, ., getYear, (, instant, ), ;, int, month, =, iChronology, ., getMonthOfYear, (]
[{, int, year, =, iChronology, ., getYear, (, instant, ), ;, int, month, =, iChronology, ., getMonthOfYear, (, instant, ,]
[iChronology, ., getYear, (, instant, ), ;, int, month, =, iChronology, ., getMonthOfYear, (, instant, ,, year, ), ;, return]
[iChronology, ., getYear, (, instant, ), ;, int, month, =, iChronology, ., getMonthOfYear, (, instant, ,, year, ), ;, return]
[instant, ), ;, int, month, =, iChronology, ., getMonthOfYear, (, instant, ,, year, ), ;, return, iChronology, ., getYearMonthMillis, (]
[;, int, month, =, iChronology, ., getMonthOfYear, (, instant, ,, year, ), ;, return, iChronology, ., getYearMonthMillis, (, year, ,]
[return, iChronology, ., getYearMonthMillis, (, year, ,, month, ), ;, }, public, long, remainder, (, long, instant, ), {, return]
[return, iChronology, ., getYearMonthMillis, (, year, ,, month, ), ;, }, public, long, remainder, (, long, instant, ), {, return]
[., getYearMonthMillis, (, year, ,, month, ), ;, }, public, long, remainder, (, long, instant, ), {, return, instant, -]
[(, year, ,, month, ), ;, }, public, long, remainder, (, long, instant, ), {, return, instant, -, roundFloor, (]
[long, instant, ), {, return, instant, -, roundFloor, (, instant, ), ;, }, private, Object, readResolve, (, ), {, return]
[long, instant, ), {, return, instant, -, roundFloor, (, instant, ), ;, }, private, Object, readResolve, (, ), {, return]
