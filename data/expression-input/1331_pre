[Set, ;, class, ChainCalls, implements, CompilerPass, {, private, final, AbstractCompiler, compiler, ;, private, final, Set, <, Node, >, badFunctionNodes, =]
[Set, ;, class, ChainCalls, implements, CompilerPass, {, private, final, AbstractCompiler, compiler, ;, private, final, Set, <, Node, >, badFunctionNodes, =]
[Set, <, Node, >, badFunctionNodes, =, Sets, ., newHashSet, (, ), ;, private, final, Set, <, Node, >, goodFunctionNodes, =]
[Set, <, Node, >, badFunctionNodes, =, Sets, ., newHashSet, (, ), ;, private, final, Set, <, Node, >, goodFunctionNodes, =]
[Set, <, Node, >, goodFunctionNodes, =, Sets, ., newHashSet, (, ), ;, private, final, List, <, CallSite, >, callSites, =]
[Set, <, Node, >, goodFunctionNodes, =, Sets, ., newHashSet, (, ), ;, private, final, List, <, CallSite, >, callSites, =]
[List, <, CallSite, >, callSites, =, Lists, ., newArrayList, (, ), ;, private, SimpleDefinitionFinder, defFinder, ;, private, GatherFunctions, gatherFunctions, =]
[;, private, SimpleDefinitionFinder, defFinder, ;, private, GatherFunctions, gatherFunctions, =, new, GatherFunctions, (, ), ;, ChainCalls, (, AbstractCompiler, compiler, ), {]
[;, private, SimpleDefinitionFinder, defFinder, ;, private, GatherFunctions, gatherFunctions, =, new, GatherFunctions, (, ), ;, ChainCalls, (, AbstractCompiler, compiler, ), {]
[;, private, GatherFunctions, gatherFunctions, =, new, GatherFunctions, (, ), ;, ChainCalls, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
[this, ., compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, defFinder, =]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, defFinder, =, new, SimpleDefinitionFinder, (]
[Override, public, void, process, (, Node, externs, ,, Node, root, ), {, defFinder, =, new, SimpleDefinitionFinder, (, compiler, ), ;]
[Override, public, void, process, (, Node, externs, ,, Node, root, ), {, defFinder, =, new, SimpleDefinitionFinder, (, compiler, ), ;]
[(, Node, externs, ,, Node, root, ), {, defFinder, =, new, SimpleDefinitionFinder, (, compiler, ), ;, defFinder, ., process, (]
[externs, ,, Node, root, ), {, defFinder, =, new, SimpleDefinitionFinder, (, compiler, ), ;, defFinder, ., process, (, externs, ,]
[root, ), {, defFinder, =, new, SimpleDefinitionFinder, (, compiler, ), ;, defFinder, ., process, (, externs, ,, root, ), ;]
[root, ), {, defFinder, =, new, SimpleDefinitionFinder, (, compiler, ), ;, defFinder, ., process, (, externs, ,, root, ), ;]
[=, new, SimpleDefinitionFinder, (, compiler, ), ;, defFinder, ., process, (, externs, ,, root, ), ;, NodeTraversal, ., traverse, (]
[SimpleDefinitionFinder, (, compiler, ), ;, defFinder, ., process, (, externs, ,, root, ), ;, NodeTraversal, ., traverse, (, compiler, ,]
[compiler, ), ;, defFinder, ., process, (, externs, ,, root, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,]
[;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, GatherCallSites, (, ), ), ;, for, (, CallSite, callSite, :]
[traverse, (, compiler, ,, root, ,, new, GatherCallSites, (, ), ), ;, for, (, CallSite, callSite, :, callSites, ), {]
[traverse, (, compiler, ,, root, ,, new, GatherCallSites, (, ), ), ;, for, (, CallSite, callSite, :, callSites, ), {]
[traverse, (, compiler, ,, root, ,, new, GatherCallSites, (, ), ), ;, for, (, CallSite, callSite, :, callSites, ), {]
[new, GatherCallSites, (, ), ), ;, for, (, CallSite, callSite, :, callSites, ), {, callSite, ., parent, ., removeChild, (]
[new, GatherCallSites, (, ), ), ;, for, (, CallSite, callSite, :, callSites, ), {, callSite, ., parent, ., removeChild, (]
[;, for, (, CallSite, callSite, :, callSites, ), {, callSite, ., parent, ., removeChild, (, callSite, ., n, ), ;]
[;, for, (, CallSite, callSite, :, callSites, ), {, callSite, ., parent, ., removeChild, (, callSite, ., n, ), ;]
[;, for, (, CallSite, callSite, :, callSites, ), {, callSite, ., parent, ., removeChild, (, callSite, ., n, ), ;]
[callSites, ), {, callSite, ., parent, ., removeChild, (, callSite, ., n, ), ;, callSite, ., n, ., removeChild, (]
[callSites, ), {, callSite, ., parent, ., removeChild, (, callSite, ., n, ), ;, callSite, ., n, ., removeChild, (]
[parent, ., removeChild, (, callSite, ., n, ), ;, callSite, ., n, ., removeChild, (, callSite, ., callNode, ), ;]
[parent, ., removeChild, (, callSite, ., n, ), ;, callSite, ., n, ., removeChild, (, callSite, ., callNode, ), ;]
[parent, ., removeChild, (, callSite, ., n, ), ;, callSite, ., n, ., removeChild, (, callSite, ., callNode, ), ;]
[n, ), ;, callSite, ., n, ., removeChild, (, callSite, ., callNode, ), ;, callSite, ., nextGetPropNode, ., replaceChild, (]
[n, ), ;, callSite, ., n, ., removeChild, (, callSite, ., callNode, ), ;, callSite, ., nextGetPropNode, ., replaceChild, (]
[., n, ., removeChild, (, callSite, ., callNode, ), ;, callSite, ., nextGetPropNode, ., replaceChild, (, callSite, ., nextGetPropFirstChildNode, ,]
[., n, ., removeChild, (, callSite, ., callNode, ), ;, callSite, ., nextGetPropNode, ., replaceChild, (, callSite, ., nextGetPropFirstChildNode, ,]
[callSite, ., callNode, ), ;, callSite, ., nextGetPropNode, ., replaceChild, (, callSite, ., nextGetPropFirstChildNode, ,, callSite, ., callNode, ), ;]
[callSite, ., callNode, ), ;, callSite, ., nextGetPropNode, ., replaceChild, (, callSite, ., nextGetPropFirstChildNode, ,, callSite, ., callNode, ), ;]
[GatherFunctions, implements, ScopedCallback, {, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, ControlFlowGraph, <, Node, >, cfg, =]
[GatherFunctions, implements, ScopedCallback, {, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, ControlFlowGraph, <, Node, >, cfg, =]
[Node, >, cfg, =, t, ., getControlFlowGraph, (, ), ;, for, (, DiGraphEdge, <, Node, ,, Branch, >, s, :]
[Node, >, cfg, =, t, ., getControlFlowGraph, (, ), ;, for, (, DiGraphEdge, <, Node, ,, Branch, >, s, :]
[Node, >, cfg, =, t, ., getControlFlowGraph, (, ), ;, for, (, DiGraphEdge, <, Node, ,, Branch, >, s, :]
[Node, ,, Branch, >, s, :, cfg, ., getImplicitReturn, (, ), ., getInEdges, (, ), ), {, Node, exitNode, =]
[Node, ,, Branch, >, s, :, cfg, ., getImplicitReturn, (, ), ., getInEdges, (, ), ), {, Node, exitNode, =]
[Node, ,, Branch, >, s, :, cfg, ., getImplicitReturn, (, ), ., getInEdges, (, ), ), {, Node, exitNode, =]
[getInEdges, (, ), ), {, Node, exitNode, =, s, ., getSource, (, ), ., getValue, (, ), ;, if, (]
[getInEdges, (, ), ), {, Node, exitNode, =, s, ., getSource, (, ), ., getValue, (, ), ;, if, (]
[getInEdges, (, ), ), {, Node, exitNode, =, s, ., getSource, (, ), ., getValue, (, ), ;, if, (]
[(, ), ), {, Node, exitNode, =, s, ., getSource, (, ), ., getValue, (, ), ;, if, (, !]
[(, ), ), {, Node, exitNode, =, s, ., getSource, (, ), ., getValue, (, ), ;, if, (, !]
[=, s, ., getSource, (, ), ., getValue, (, ), ;, if, (, !, exitNode, ., isReturn, (, ), ||]
[=, s, ., getSource, (, ), ., getValue, (, ), ;, if, (, !, exitNode, ., isReturn, (, ), ||]
[=, s, ., getSource, (, ), ., getValue, (, ), ;, if, (, !, exitNode, ., isReturn, (, ), ||]
[., getValue, (, ), ;, if, (, !, exitNode, ., isReturn, (, ), ||, exitNode, ., getFirstChild, (, ), ==]
[(, ), ;, if, (, !, exitNode, ., isReturn, (, ), ||, exitNode, ., getFirstChild, (, ), ==, null, ||]
[), ;, if, (, !, exitNode, ., isReturn, (, ), ||, exitNode, ., getFirstChild, (, ), ==, null, ||, !]
[), ;, if, (, !, exitNode, ., isReturn, (, ), ||, exitNode, ., getFirstChild, (, ), ==, null, ||, !]
[), ;, if, (, !, exitNode, ., isReturn, (, ), ||, exitNode, ., getFirstChild, (, ), ==, null, ||, !]
[exitNode, ., getFirstChild, (, ), ==, null, ||, !, exitNode, ., getFirstChild, (, ), ., isThis, (, ), ), {]
[exitNode, ., getFirstChild, (, ), ==, null, ||, !, exitNode, ., getFirstChild, (, ), ., isThis, (, ), ), {]
[), ==, null, ||, !, exitNode, ., getFirstChild, (, ), ., isThis, (, ), ), {, badFunctionNodes, ., add, (]
[), ==, null, ||, !, exitNode, ., getFirstChild, (, ), ., isThis, (, ), ), {, badFunctionNodes, ., add, (]
[isThis, (, ), ), {, badFunctionNodes, ., add, (, t, ., getScopeRoot, (, ), ), ;, return, ;, }, }]
[isThis, (, ), ), {, badFunctionNodes, ., add, (, t, ., getScopeRoot, (, ), ), ;, return, ;, }, }]
[{, badFunctionNodes, ., add, (, t, ., getScopeRoot, (, ), ), ;, return, ;, }, }, goodFunctionNodes, ., add, (]
[{, badFunctionNodes, ., add, (, t, ., getScopeRoot, (, ), ), ;, return, ;, }, }, goodFunctionNodes, ., add, (]
[), {, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, nodeTraversal, ,, Node, n, ,, Node, parent, ), {, return]
[AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[{, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, !]
[{, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, !]
[Node, parent, ), {, if, (, !, n, ., isExprResult, (, ), ), {, return, ;, }, Node, callNode, =]
[Node, parent, ), {, if, (, !, n, ., isExprResult, (, ), ), {, return, ;, }, Node, callNode, =]
[., isExprResult, (, ), ), {, return, ;, }, Node, callNode, =, n, ., getFirstChild, (, ), ;, if, (]
[isExprResult, (, ), ), {, return, ;, }, Node, callNode, =, n, ., getFirstChild, (, ), ;, if, (, !]
[isExprResult, (, ), ), {, return, ;, }, Node, callNode, =, n, ., getFirstChild, (, ), ;, if, (, !]
[getFirstChild, (, ), ;, if, (, !, callNode, ., isCall, (, ), ), {, return, ;, }, Node, getPropNode, =]
[getFirstChild, (, ), ;, if, (, !, callNode, ., isCall, (, ), ), {, return, ;, }, Node, getPropNode, =]
[., isCall, (, ), ), {, return, ;, }, Node, getPropNode, =, callNode, ., getFirstChild, (, ), ;, if, (]
[isCall, (, ), ), {, return, ;, }, Node, getPropNode, =, callNode, ., getFirstChild, (, ), ;, if, (, !]
[isCall, (, ), ), {, return, ;, }, Node, getPropNode, =, callNode, ., getFirstChild, (, ), ;, if, (, !]
[getFirstChild, (, ), ;, if, (, !, getPropNode, ., isGetProp, (, ), ), {, return, ;, }, Node, getPropFirstChildNode, =]
[getFirstChild, (, ), ;, if, (, !, getPropNode, ., isGetProp, (, ), ), {, return, ;, }, Node, getPropFirstChildNode, =]
[), {, return, ;, }, Node, getPropFirstChildNode, =, getPropNode, ., getFirstChild, (, ), ;, Collection, <, Definition, >, definitions, =]
[), {, return, ;, }, Node, getPropFirstChildNode, =, getPropNode, ., getFirstChild, (, ), ;, Collection, <, Definition, >, definitions, =]
[}, Node, getPropFirstChildNode, =, getPropNode, ., getFirstChild, (, ), ;, Collection, <, Definition, >, definitions, =, defFinder, ., getDefinitionsReferencedAt, (]
[., getFirstChild, (, ), ;, Collection, <, Definition, >, definitions, =, defFinder, ., getDefinitionsReferencedAt, (, getPropNode, ), ;, if, (]
[., getFirstChild, (, ), ;, Collection, <, Definition, >, definitions, =, defFinder, ., getDefinitionsReferencedAt, (, getPropNode, ), ;, if, (]
[(, ), ;, Collection, <, Definition, >, definitions, =, defFinder, ., getDefinitionsReferencedAt, (, getPropNode, ), ;, if, (, definitions, ==]
[getDefinitionsReferencedAt, (, getPropNode, ), ;, if, (, definitions, ==, null, ), {, return, ;, }, for, (, Definition, definition, :]
[(, definitions, ==, null, ), {, return, ;, }, for, (, Definition, definition, :, definitions, ), {, Node, rValue, =]
[(, definitions, ==, null, ), {, return, ;, }, for, (, Definition, definition, :, definitions, ), {, Node, rValue, =]
[}, for, (, Definition, definition, :, definitions, ), {, Node, rValue, =, definition, ., getRValue, (, ), ;, if, (]
[}, for, (, Definition, definition, :, definitions, ), {, Node, rValue, =, definition, ., getRValue, (, ), ;, if, (]
[(, Definition, definition, :, definitions, ), {, Node, rValue, =, definition, ., getRValue, (, ), ;, if, (, rValue, ==]
[rValue, =, definition, ., getRValue, (, ), ;, if, (, rValue, ==, null, ), {, return, ;, }, if, (]
[rValue, =, definition, ., getRValue, (, ), ;, if, (, rValue, ==, null, ), {, return, ;, }, if, (]
[getRValue, (, ), ;, if, (, rValue, ==, null, ), {, return, ;, }, if, (, badFunctionNodes, ., contains, (]
[), {, return, ;, }, if, (, badFunctionNodes, ., contains, (, rValue, ), ), {, return, ;, }, if, (]
[{, return, ;, }, if, (, badFunctionNodes, ., contains, (, rValue, ), ), {, return, ;, }, if, (, !]
[{, return, ;, }, if, (, badFunctionNodes, ., contains, (, rValue, ), ), {, return, ;, }, if, (, !]
[if, (, badFunctionNodes, ., contains, (, rValue, ), ), {, return, ;, }, if, (, !, goodFunctionNodes, ., contains, (]
[contains, (, rValue, ), ), {, return, ;, }, if, (, !, goodFunctionNodes, ., contains, (, rValue, ), ), {]
[contains, (, rValue, ), ), {, return, ;, }, if, (, !, goodFunctionNodes, ., contains, (, rValue, ), ), {]
[), {, return, ;, }, if, (, !, goodFunctionNodes, ., contains, (, rValue, ), ), {, NodeTraversal, ., traverse, (]
[return, ;, }, if, (, !, goodFunctionNodes, ., contains, (, rValue, ), ), {, NodeTraversal, ., traverse, (, compiler, ,]
[}, if, (, !, goodFunctionNodes, ., contains, (, rValue, ), ), {, NodeTraversal, ., traverse, (, compiler, ,, rValue, ,]
[., contains, (, rValue, ), ), {, NodeTraversal, ., traverse, (, compiler, ,, rValue, ,, gatherFunctions, ), ;, if, (]
[., contains, (, rValue, ), ), {, NodeTraversal, ., traverse, (, compiler, ,, rValue, ,, gatherFunctions, ), ;, if, (]
[), ), {, NodeTraversal, ., traverse, (, compiler, ,, rValue, ,, gatherFunctions, ), ;, if, (, badFunctionNodes, ., contains, (]
[), ;, if, (, badFunctionNodes, ., contains, (, rValue, ), ), {, return, ;, }, }, }, Node, nextNode, =]
[), ;, if, (, badFunctionNodes, ., contains, (, rValue, ), ), {, return, ;, }, }, }, Node, nextNode, =]
[rValue, ), ), {, return, ;, }, }, }, Node, nextNode, =, n, ., getNext, (, ), ;, if, (]
[rValue, ), ), {, return, ;, }, }, }, Node, nextNode, =, n, ., getNext, (, ), ;, if, (]
[rValue, ), ), {, return, ;, }, }, }, Node, nextNode, =, n, ., getNext, (, ), ;, if, (]
[), {, return, ;, }, }, }, Node, nextNode, =, n, ., getNext, (, ), ;, if, (, nextNode, ==]
[return, ;, }, }, }, Node, nextNode, =, n, ., getNext, (, ), ;, if, (, nextNode, ==, null, ||]
[;, }, }, }, Node, nextNode, =, n, ., getNext, (, ), ;, if, (, nextNode, ==, null, ||, !]
[;, }, }, }, Node, nextNode, =, n, ., getNext, (, ), ;, if, (, nextNode, ==, null, ||, !]
[if, (, nextNode, ==, null, ||, !, nextNode, ., isExprResult, (, ), ), {, return, ;, }, Node, nextCallNode, =]
[if, (, nextNode, ==, null, ||, !, nextNode, ., isExprResult, (, ), ), {, return, ;, }, Node, nextCallNode, =]
[., isExprResult, (, ), ), {, return, ;, }, Node, nextCallNode, =, nextNode, ., getFirstChild, (, ), ;, if, (]
[isExprResult, (, ), ), {, return, ;, }, Node, nextCallNode, =, nextNode, ., getFirstChild, (, ), ;, if, (, !]
[isExprResult, (, ), ), {, return, ;, }, Node, nextCallNode, =, nextNode, ., getFirstChild, (, ), ;, if, (, !]
[getFirstChild, (, ), ;, if, (, !, nextCallNode, ., isCall, (, ), ), {, return, ;, }, Node, nextGetPropNode, =]
[getFirstChild, (, ), ;, if, (, !, nextCallNode, ., isCall, (, ), ), {, return, ;, }, Node, nextGetPropNode, =]
[., isCall, (, ), ), {, return, ;, }, Node, nextGetPropNode, =, nextCallNode, ., getFirstChild, (, ), ;, if, (]
[isCall, (, ), ), {, return, ;, }, Node, nextGetPropNode, =, nextCallNode, ., getFirstChild, (, ), ;, if, (, !]
[isCall, (, ), ), {, return, ;, }, Node, nextGetPropNode, =, nextCallNode, ., getFirstChild, (, ), ;, if, (, !]
[getFirstChild, (, ), ;, if, (, !, nextGetPropNode, ., isGetProp, (, ), ), {, return, ;, }, Node, nextGetPropFirstChildNode, =]
[getFirstChild, (, ), ;, if, (, !, nextGetPropNode, ., isGetProp, (, ), ), {, return, ;, }, Node, nextGetPropFirstChildNode, =]
[., isGetProp, (, ), ), {, return, ;, }, Node, nextGetPropFirstChildNode, =, nextGetPropNode, ., getFirstChild, (, ), ;, if, (]
[isGetProp, (, ), ), {, return, ;, }, Node, nextGetPropFirstChildNode, =, nextGetPropNode, ., getFirstChild, (, ), ;, if, (, !]
[isGetProp, (, ), ), {, return, ;, }, Node, nextGetPropFirstChildNode, =, nextGetPropNode, ., getFirstChild, (, ), ;, if, (, !]
[{, return, ;, }, Node, nextGetPropFirstChildNode, =, nextGetPropNode, ., getFirstChild, (, ), ;, if, (, !, compiler, ., areNodesEqualForInlining, (]
[;, }, Node, nextGetPropFirstChildNode, =, nextGetPropNode, ., getFirstChild, (, ), ;, if, (, !, compiler, ., areNodesEqualForInlining, (, nextGetPropFirstChildNode, ,]
[), ;, if, (, !, compiler, ., areNodesEqualForInlining, (, nextGetPropFirstChildNode, ,, getPropFirstChildNode, ), ), {, return, ;, }, if, (]
[), ;, if, (, !, compiler, ., areNodesEqualForInlining, (, nextGetPropFirstChildNode, ,, getPropFirstChildNode, ), ), {, return, ;, }, if, (]
[!, compiler, ., areNodesEqualForInlining, (, nextGetPropFirstChildNode, ,, getPropFirstChildNode, ), ), {, return, ;, }, if, (, NodeUtil, ., mayEffectMutableState, (]
[getPropFirstChildNode, ), ), {, return, ;, }, if, (, NodeUtil, ., mayEffectMutableState, (, getPropFirstChildNode, ), ), {, return, ;, }]
[getPropFirstChildNode, ), ), {, return, ;, }, if, (, NodeUtil, ., mayEffectMutableState, (, getPropFirstChildNode, ), ), {, return, ;, }]
[return, ;, }, if, (, NodeUtil, ., mayEffectMutableState, (, getPropFirstChildNode, ), ), {, return, ;, }, callSites, ., add, (]
[if, (, NodeUtil, ., mayEffectMutableState, (, getPropFirstChildNode, ), ), {, return, ;, }, callSites, ., add, (, new, CallSite, (]
[NodeUtil, ., mayEffectMutableState, (, getPropFirstChildNode, ), ), {, return, ;, }, callSites, ., add, (, new, CallSite, (, parent, ,]
[mayEffectMutableState, (, getPropFirstChildNode, ), ), {, return, ;, }, callSites, ., add, (, new, CallSite, (, parent, ,, n, ,]
[getPropFirstChildNode, ), ), {, return, ;, }, callSites, ., add, (, new, CallSite, (, parent, ,, n, ,, callNode, ,]
[), {, return, ;, }, callSites, ., add, (, new, CallSite, (, parent, ,, n, ,, callNode, ,, nextGetPropNode, ,]
[nextGetPropFirstChildNode, ;, CallSite, (, Node, parent, ,, Node, n, ,, Node, callNode, ,, Node, nextGetPropNode, ,, Node, nextGetPropFirstChildNode, ), {]
[nextGetPropFirstChildNode, ;, CallSite, (, Node, parent, ,, Node, n, ,, Node, callNode, ,, Node, nextGetPropNode, ,, Node, nextGetPropFirstChildNode, ), {]
[Node, parent, ,, Node, n, ,, Node, callNode, ,, Node, nextGetPropNode, ,, Node, nextGetPropFirstChildNode, ), {, this, ., parent, =]
[,, Node, n, ,, Node, callNode, ,, Node, nextGetPropNode, ,, Node, nextGetPropFirstChildNode, ), {, this, ., parent, =, parent, ;]
[,, Node, n, ,, Node, callNode, ,, Node, nextGetPropNode, ,, Node, nextGetPropFirstChildNode, ), {, this, ., parent, =, parent, ;]
[Node, callNode, ,, Node, nextGetPropNode, ,, Node, nextGetPropFirstChildNode, ), {, this, ., parent, =, parent, ;, this, ., n, =]
[,, Node, nextGetPropNode, ,, Node, nextGetPropFirstChildNode, ), {, this, ., parent, =, parent, ;, this, ., n, =, n, ;]
[,, Node, nextGetPropNode, ,, Node, nextGetPropFirstChildNode, ), {, this, ., parent, =, parent, ;, this, ., n, =, n, ;]
[Node, nextGetPropFirstChildNode, ), {, this, ., parent, =, parent, ;, this, ., n, =, n, ;, this, ., callNode, =]
[), {, this, ., parent, =, parent, ;, this, ., n, =, n, ;, this, ., callNode, =, callNode, ;]
[), {, this, ., parent, =, parent, ;, this, ., n, =, n, ;, this, ., callNode, =, callNode, ;]
[parent, =, parent, ;, this, ., n, =, n, ;, this, ., callNode, =, callNode, ;, this, ., nextGetPropNode, =]
[parent, ;, this, ., n, =, n, ;, this, ., callNode, =, callNode, ;, this, ., nextGetPropNode, =, nextGetPropNode, ;]
[parent, ;, this, ., n, =, n, ;, this, ., callNode, =, callNode, ;, this, ., nextGetPropNode, =, nextGetPropNode, ;]
[n, =, n, ;, this, ., callNode, =, callNode, ;, this, ., nextGetPropNode, =, nextGetPropNode, ;, this, ., nextGetPropFirstChildNode, =]
