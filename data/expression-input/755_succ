[;, public, SecantSolver, (, ), {, super, (, DEFAULT_ABSOLUTE_ACCURACY, ), ;, }, public, SecantSolver, (, final, double, absoluteAccuracy, ), {]
[), ;, }, public, SecantSolver, (, final, double, absoluteAccuracy, ), {, super, (, absoluteAccuracy, ), ;, }, public, SecantSolver, (]
[), ;, }, public, SecantSolver, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ), {, super, (, relativeAccuracy, ,, absoluteAccuracy]
[,, absoluteAccuracy, ), ;, }, @, Override, protected, final, double, doSolve, (, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, double, x0]
[), ;, }, @, Override, protected, final, double, doSolve, (, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, double, x0, =, getMin]
[;, double, x1, =, getMax, (, ), ;, double, f0, =, computeObjectiveValue, (, x0, ), ;, double, f1, =, computeObjectiveValue]
[;, double, f0, =, computeObjectiveValue, (, x0, ), ;, double, f1, =, computeObjectiveValue, (, x1, ), ;, if, (, f0]
[;, double, f1, =, computeObjectiveValue, (, x1, ), ;, if, (, f0, ==, 0.0, ), {, return, x0, ;, }]
[), ;, double, f1, =, computeObjectiveValue, (, x1, ), ;, if, (, f0, ==, 0.0, ), {, return, x0, ;]
[;, if, (, f0, ==, 0.0, ), {, return, x0, ;, }, if, (, f1, ==, 0.0, ), {, return]
[), ;, if, (, f0, ==, 0.0, ), {, return, x0, ;, }, if, (, f1, ==, 0.0, ), {]
[), {, return, x0, ;, }, if, (, f1, ==, 0.0, ), {, return, x1, ;, }, verifyBracketing, (, x0]
[==, 0.0, ), {, return, x0, ;, }, if, (, f1, ==, 0.0, ), {, return, x1, ;, }, verifyBracketing]
[), {, return, x0, ;, }, if, (, f1, ==, 0.0, ), {, return, x1, ;, }, verifyBracketing, (, x0]
[;, }, if, (, f1, ==, 0.0, ), {, return, x1, ;, }, verifyBracketing, (, x0, ,, x1, ), ;]
[), {, return, x1, ;, }, verifyBracketing, (, x0, ,, x1, ), ;, final, double, ftol, =, getFunctionValueAccuracy, (, )]
[==, 0.0, ), {, return, x1, ;, }, verifyBracketing, (, x0, ,, x1, ), ;, final, double, ftol, =, getFunctionValueAccuracy]
[), {, return, x1, ;, }, verifyBracketing, (, x0, ,, x1, ), ;, final, double, ftol, =, getFunctionValueAccuracy, (, )]
[;, }, verifyBracketing, (, x0, ,, x1, ), ;, final, double, ftol, =, getFunctionValueAccuracy, (, ), ;, final, double, atol]
[;, final, double, ftol, =, getFunctionValueAccuracy, (, ), ;, final, double, atol, =, getAbsoluteAccuracy, (, ), ;, final, double, rtol]
[,, x1, ), ;, final, double, ftol, =, getFunctionValueAccuracy, (, ), ;, final, double, atol, =, getAbsoluteAccuracy, (, ), ;]
[), ;, final, double, ftol, =, getFunctionValueAccuracy, (, ), ;, final, double, atol, =, getAbsoluteAccuracy, (, ), ;, final, double]
[;, final, double, atol, =, getAbsoluteAccuracy, (, ), ;, final, double, rtol, =, getRelativeAccuracy, (, ), ;, while, (, true]
[;, final, double, rtol, =, getRelativeAccuracy, (, ), ;, while, (, true, ), {, final, double, x, =, x1, -]
[;, while, (, true, ), {, final, double, x, =, x1, -, (, (, f1, *, (, x1, -, x0]
[), {, final, double, x, =, x1, -, (, (, f1, *, (, x1, -, x0, ), ), /, (]
[;, final, double, fx, =, computeObjectiveValue, (, x, ), ;, if, (, fx, ==, 0.0, ), {, return, x, ;]
[-, (, (, f1, *, (, x1, -, x0, ), ), /, (, f1, -, f0, ), ), ;, final]
[;, final, double, fx, =, computeObjectiveValue, (, x, ), ;, if, (, fx, ==, 0.0, ), {, return, x, ;]
[), ;, final, double, fx, =, computeObjectiveValue, (, x, ), ;, if, (, fx, ==, 0.0, ), {, return, x]
[/, (, f1, -, f0, ), ), ;, final, double, fx, =, computeObjectiveValue, (, x, ), ;, if, (, fx]
[), /, (, f1, -, f0, ), ), ;, final, double, fx, =, computeObjectiveValue, (, x, ), ;, if, (]
[*, (, x1, -, x0, ), ), /, (, f1, -, f0, ), ), ;, final, double, fx, =, computeObjectiveValue]
[), /, (, f1, -, f0, ), ), ;, final, double, fx, =, computeObjectiveValue, (, x, ), ;, if, (]
[), ), /, (, f1, -, f0, ), ), ;, final, double, fx, =, computeObjectiveValue, (, x, ), ;, if]
[-, x0, ), ), /, (, f1, -, f0, ), ), ;, final, double, fx, =, computeObjectiveValue, (, x, )]
[), ), /, (, f1, -, f0, ), ), ;, final, double, fx, =, computeObjectiveValue, (, x, ), ;, if]
[), ;, final, double, fx, =, computeObjectiveValue, (, x, ), ;, if, (, fx, ==, 0.0, ), {, return, x]
[), ), ;, final, double, fx, =, computeObjectiveValue, (, x, ), ;, if, (, fx, ==, 0.0, ), {, return]
[-, f0, ), ), ;, final, double, fx, =, computeObjectiveValue, (, x, ), ;, if, (, fx, ==, 0.0, )]
[), ), ;, final, double, fx, =, computeObjectiveValue, (, x, ), ;, if, (, fx, ==, 0.0, ), {, return]
[;, if, (, fx, ==, 0.0, ), {, return, x, ;, }, x0, =, x1, ;, f0, =, f1, ;]
[), ;, if, (, fx, ==, 0.0, ), {, return, x, ;, }, x0, =, x1, ;, f0, =, f1]
[), {, return, x, ;, }, x0, =, x1, ;, f0, =, f1, ;, x1, =, x, ;, f1, =]
[==, 0.0, ), {, return, x, ;, }, x0, =, x1, ;, f0, =, f1, ;, x1, =, x, ;]
[), {, return, x, ;, }, x0, =, x1, ;, f0, =, f1, ;, x1, =, x, ;, f1, =]
[;, }, x0, =, x1, ;, f0, =, f1, ;, x1, =, x, ;, f1, =, fx, ;, if, (]
[=, x1, ;, f0, =, f1, ;, x1, =, x, ;, f1, =, fx, ;, if, (, FastMath, ., abs]
[;, f0, =, f1, ;, x1, =, x, ;, f1, =, fx, ;, if, (, FastMath, ., abs, (, f1]
[=, f1, ;, x1, =, x, ;, f1, =, fx, ;, if, (, FastMath, ., abs, (, f1, ), <=]
[;, x1, =, x, ;, f1, =, fx, ;, if, (, FastMath, ., abs, (, f1, ), <=, ftol, )]
[=, x, ;, f1, =, fx, ;, if, (, FastMath, ., abs, (, f1, ), <=, ftol, ), {, return]
[;, f1, =, fx, ;, if, (, FastMath, ., abs, (, f1, ), <=, ftol, ), {, return, x1, ;]
[=, fx, ;, if, (, FastMath, ., abs, (, f1, ), <=, ftol, ), {, return, x1, ;, }, if]
[;, if, (, FastMath, ., abs, (, f1, ), <=, ftol, ), {, return, x1, ;, }, if, (, FastMath]
[), {, return, x1, ;, }, if, (, FastMath, ., abs, (, x1, -, x0, ), <, FastMath, ., max]
[<=, ftol, ), {, return, x1, ;, }, if, (, FastMath, ., abs, (, x1, -, x0, ), <, FastMath]
[., abs, (, f1, ), <=, ftol, ), {, return, x1, ;, }, if, (, FastMath, ., abs, (, x1]
[), <=, ftol, ), {, return, x1, ;, }, if, (, FastMath, ., abs, (, x1, -, x0, ), <]
[), {, return, x1, ;, }, if, (, FastMath, ., abs, (, x1, -, x0, ), <, FastMath, ., max]
[;, }, if, (, FastMath, ., abs, (, x1, -, x0, ), <, FastMath, ., max, (, rtol, *, FastMath]
[), {, return, x1, ;, }, }, }, }]
[<, FastMath, ., max, (, rtol, *, FastMath, ., abs, (, x1, ), ,, atol, ), ), {, return, x1]
[., abs, (, x1, -, x0, ), <, FastMath, ., max, (, rtol, *, FastMath, ., abs, (, x1, )]
[), <, FastMath, ., max, (, rtol, *, FastMath, ., abs, (, x1, ), ,, atol, ), ), {, return]
[-, x0, ), <, FastMath, ., max, (, rtol, *, FastMath, ., abs, (, x1, ), ,, atol, ), )]
[), <, FastMath, ., max, (, rtol, *, FastMath, ., abs, (, x1, ), ,, atol, ), ), {, return]
[), {, return, x1, ;, }, }, }, }]
[., max, (, rtol, *, FastMath, ., abs, (, x1, ), ,, atol, ), ), {, return, x1, ;, }]
[,, atol, ), ), {, return, x1, ;, }, }, }, }]
[*, FastMath, ., abs, (, x1, ), ,, atol, ), ), {, return, x1, ;, }, }, }, }]
[,, atol, ), ), {, return, x1, ;, }, }, }, }]
[., abs, (, x1, ), ,, atol, ), ), {, return, x1, ;, }, }, }, }]
[), ,, atol, ), ), {, return, x1, ;, }, }, }, }]
[), ), {, return, x1, ;, }, }, }, }]
[;, }, }, }, }]
