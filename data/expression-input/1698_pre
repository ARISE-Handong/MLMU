[util, ., List, ;, public, class, TypeBasedCandidateFilter, implements, MockCandidateFilter, {, MockCandidateFilter, next, ;, public, TypeBasedCandidateFilter, (, MockCandidateFilter, next, ), {]
[util, ., List, ;, public, class, TypeBasedCandidateFilter, implements, MockCandidateFilter, {, MockCandidateFilter, next, ;, public, TypeBasedCandidateFilter, (, MockCandidateFilter, next, ), {]
[public, class, TypeBasedCandidateFilter, implements, MockCandidateFilter, {, MockCandidateFilter, next, ;, public, TypeBasedCandidateFilter, (, MockCandidateFilter, next, ), {, this, ., next, =]
[(, Collection, <, Object, >, mocks, ,, Field, field, ,, Object, fieldInstance, ), {, List, <, Object, >, mockTypeMatches, =]
[{, List, <, Object, >, mockTypeMatches, =, new, ArrayList, <, Object, >, (, ), ;, for, (, Object, mock, :]
[mockTypeMatches, =, new, ArrayList, <, Object, >, (, ), ;, for, (, Object, mock, :, mocks, ), {, if, (]
[mockTypeMatches, =, new, ArrayList, <, Object, >, (, ), ;, for, (, Object, mock, :, mocks, ), {, if, (]
[mockTypeMatches, =, new, ArrayList, <, Object, >, (, ), ;, for, (, Object, mock, :, mocks, ), {, if, (]
[), ;, for, (, Object, mock, :, mocks, ), {, if, (, field, ., getType, (, ), ., isAssignableFrom, (]
[), ;, for, (, Object, mock, :, mocks, ), {, if, (, field, ., getType, (, ), ., isAssignableFrom, (]
[), {, if, (, field, ., getType, (, ), ., isAssignableFrom, (, mock, ., getClass, (, ), ), ), {]
[), {, if, (, field, ., getType, (, ), ., isAssignableFrom, (, mock, ., getClass, (, ), ), ), {]
[field, ., getType, (, ), ., isAssignableFrom, (, mock, ., getClass, (, ), ), ), {, mockTypeMatches, ., add, (]
[isAssignableFrom, (, mock, ., getClass, (, ), ), ), {, mockTypeMatches, ., add, (, mock, ), ;, }, }, return]
[isAssignableFrom, (, mock, ., getClass, (, ), ), ), {, mockTypeMatches, ., add, (, mock, ), ;, }, }, return]
[getClass, (, ), ), ), {, mockTypeMatches, ., add, (, mock, ), ;, }, }, return, next, ., filterCandidate, (]
[), ), ), {, mockTypeMatches, ., add, (, mock, ), ;, }, }, return, next, ., filterCandidate, (, mockTypeMatches, ,]
[), {, mockTypeMatches, ., add, (, mock, ), ;, }, }, return, next, ., filterCandidate, (, mockTypeMatches, ,, field, ,]
