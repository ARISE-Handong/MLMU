[;, private, static, final, String, FILE_CHARSET, =, "US-ASCII", ;, private, static, final, long, serialVersionUID, =, 5729073523949762654L, ;, protected, final, RandomDataGenerator]
[;, private, static, final, long, serialVersionUID, =, 5729073523949762654L, ;, protected, final, RandomDataGenerator, randomData, ;, private, final, List, <, SummaryStatistics, >]
[;, protected, final, RandomDataGenerator, randomData, ;, private, final, List, <, SummaryStatistics, >, binStats, ;, private, SummaryStatistics, sampleStats, =, null, ;]
[;, private, double, max, =, Double, ., NEGATIVE_INFINITY, ;, private, double, min, =, Double, ., POSITIVE_INFINITY, ;, private, double, delta]
[;, private, double, min, =, Double, ., POSITIVE_INFINITY, ;, private, double, delta, =, 0d, ;, private, final, int, binCount, ;]
[., NEGATIVE_INFINITY, ;, private, double, min, =, Double, ., POSITIVE_INFINITY, ;, private, double, delta, =, 0d, ;, private, final, int]
[;, private, double, delta, =, 0d, ;, private, final, int, binCount, ;, private, boolean, loaded, =, false, ;, private, double]
[., POSITIVE_INFINITY, ;, private, double, delta, =, 0d, ;, private, final, int, binCount, ;, private, boolean, loaded, =, false, ;]
[;, private, final, int, binCount, ;, private, boolean, loaded, =, false, ;, private, double, [, ], upperBounds, =, null, ;]
[;, private, double, [, ], upperBounds, =, null, ;, public, EmpiricalDistribution, (, ), {, this, (, DEFAULT_BIN_COUNT, ), ;, }]
[;, public, EmpiricalDistribution, (, ), {, this, (, DEFAULT_BIN_COUNT, ), ;, }, public, EmpiricalDistribution, (, int, binCount, ), {, this]
[), ;, }, public, EmpiricalDistribution, (, int, binCount, ), {, this, (, binCount, ,, new, RandomDataGenerator, (, ), ), ;]
[,, new, RandomDataGenerator, (, ), ), ;, }, public, EmpiricalDistribution, (, int, binCount, ,, RandomGenerator, generator, ), {, this, (]
[), ;, }, public, EmpiricalDistribution, (, int, binCount, ,, RandomGenerator, generator, ), {, this, (, binCount, ,, new, RandomDataGenerator, (]
[,, new, RandomDataGenerator, (, generator, ), ), ;, }, public, EmpiricalDistribution, (, RandomGenerator, generator, ), {, this, (, DEFAULT_BIN_COUNT, ,]
[), ;, }, public, EmpiricalDistribution, (, RandomGenerator, generator, ), {, this, (, DEFAULT_BIN_COUNT, ,, generator, ), ;, }, @, Deprecated]
[), ), ;, }, public, EmpiricalDistribution, (, RandomGenerator, generator, ), {, this, (, DEFAULT_BIN_COUNT, ,, generator, ), ;, }, @]
[,, generator, ), ;, }, @, Deprecated, public, EmpiricalDistribution, (, int, binCount, ,, RandomDataImpl, randomData, ), {, this, (, binCount]
[), ;, }, @, Deprecated, public, EmpiricalDistribution, (, int, binCount, ,, RandomDataImpl, randomData, ), {, this, (, binCount, ,, randomData]
[,, randomData, ., getDelegate, (, ), ), ;, }, @, Deprecated, public, EmpiricalDistribution, (, RandomDataImpl, randomData, ), {, this, (]
[), ;, }, @, Deprecated, public, EmpiricalDistribution, (, RandomDataImpl, randomData, ), {, this, (, DEFAULT_BIN_COUNT, ,, randomData, ), ;, }]
[., getDelegate, (, ), ), ;, }, @, Deprecated, public, EmpiricalDistribution, (, RandomDataImpl, randomData, ), {, this, (, DEFAULT_BIN_COUNT, ,]
[,, randomData, ), ;, }, private, EmpiricalDistribution, (, int, binCount, ,, RandomDataGenerator, randomData, ), {, super, (, null, ), ;]
[), ;, }, private, EmpiricalDistribution, (, int, binCount, ,, RandomDataGenerator, randomData, ), {, super, (, null, ), ;, this, .]
[), ;, this, ., binCount, =, binCount, ;, this, ., randomData, =, randomData, ;, binStats, =, new, ArrayList, <, SummaryStatistics]
[=, binCount, ;, this, ., randomData, =, randomData, ;, binStats, =, new, ArrayList, <, SummaryStatistics, >, (, ), ;, }]
[., binCount, =, binCount, ;, this, ., randomData, =, randomData, ;, binStats, =, new, ArrayList, <, SummaryStatistics, >, (, )]
[;, this, ., randomData, =, randomData, ;, binStats, =, new, ArrayList, <, SummaryStatistics, >, (, ), ;, }, public, void]
[=, randomData, ;, binStats, =, new, ArrayList, <, SummaryStatistics, >, (, ), ;, }, public, void, load, (, double, []
[., randomData, =, randomData, ;, binStats, =, new, ArrayList, <, SummaryStatistics, >, (, ), ;, }, public, void, load, (]
[;, binStats, =, new, ArrayList, <, SummaryStatistics, >, (, ), ;, }, public, void, load, (, double, [, ], in]
[=, new, ArrayList, <, SummaryStatistics, >, (, ), ;, }, public, void, load, (, double, [, ], in, ), throws]
[;, }, public, void, load, (, double, [, ], in, ), throws, NullArgumentException, {, DataAdapter, da, =, new, ArrayDataAdapter, (]
[;, try, {, da, ., computeStats, (, ), ;, fillBinStats, (, new, ArrayDataAdapter, (, in, ), ), ;, }, catch]
[), ;, try, {, da, ., computeStats, (, ), ;, fillBinStats, (, new, ArrayDataAdapter, (, in, ), ), ;, }]
[;, fillBinStats, (, new, ArrayDataAdapter, (, in, ), ), ;, }, catch, (, IOException, ex, ), {, throw, new, MathInternalError]
[., computeStats, (, ), ;, fillBinStats, (, new, ArrayDataAdapter, (, in, ), ), ;, }, catch, (, IOException, ex, )]
[;, }, catch, (, IOException, ex, ), {, throw, new, MathInternalError, (, ), ;, }, loaded, =, true, ;, }]
[), ;, }, catch, (, IOException, ex, ), {, throw, new, MathInternalError, (, ), ;, }, loaded, =, true, ;]
[), ), ;, }, catch, (, IOException, ex, ), {, throw, new, MathInternalError, (, ), ;, }, loaded, =, true]
[;, }, loaded, =, true, ;, }, public, void, load, (, URL, url, ), throws, IOException, ,, NullArgumentException, ,, ZeroException]
[=, true, ;, }, public, void, load, (, URL, url, ), throws, IOException, ,, NullArgumentException, ,, ZeroException, {, MathUtils, .]
[;, }, public, void, load, (, URL, url, ), throws, IOException, ,, NullArgumentException, ,, ZeroException, {, MathUtils, ., checkNotNull, (]
[;, Charset, charset, =, Charset, ., forName, (, FILE_CHARSET, ), ;, BufferedReader, in, =, new, BufferedReader, (, new, InputStreamReader, (]
[., checkNotNull, (, url, ), ;, Charset, charset, =, Charset, ., forName, (, FILE_CHARSET, ), ;, BufferedReader, in, =, new]
[), ;, Charset, charset, =, Charset, ., forName, (, FILE_CHARSET, ), ;, BufferedReader, in, =, new, BufferedReader, (, new, InputStreamReader]
[;, BufferedReader, in, =, new, BufferedReader, (, new, InputStreamReader, (, url, ., openStream, (, ), ,, charset, ), ), ;]
[., forName, (, FILE_CHARSET, ), ;, BufferedReader, in, =, new, BufferedReader, (, new, InputStreamReader, (, url, ., openStream, (, )]
[), ;, BufferedReader, in, =, new, BufferedReader, (, new, InputStreamReader, (, url, ., openStream, (, ), ,, charset, ), )]
[;, try, {, DataAdapter, da, =, new, StreamDataAdapter, (, in, ), ;, da, ., computeStats, (, ), ;, if, (]
[), ;, try, {, DataAdapter, da, =, new, StreamDataAdapter, (, in, ), ;, da, ., computeStats, (, ), ;, if]
[,, charset, ), ), ;, try, {, DataAdapter, da, =, new, StreamDataAdapter, (, in, ), ;, da, ., computeStats, (]
[., openStream, (, ), ,, charset, ), ), ;, try, {, DataAdapter, da, =, new, StreamDataAdapter, (, in, ), ;]
[), ), ;, try, {, DataAdapter, da, =, new, StreamDataAdapter, (, in, ), ;, da, ., computeStats, (, ), ;]
[;, da, ., computeStats, (, ), ;, if, (, sampleStats, ., getN, (, ), ==, 0, ), {, throw, new]
[), ;, da, ., computeStats, (, ), ;, if, (, sampleStats, ., getN, (, ), ==, 0, ), {, throw]
[;, if, (, sampleStats, ., getN, (, ), ==, 0, ), {, throw, new, ZeroException, (, LocalizedFormats, ., URL_CONTAINS_NO_DATA, ,]
[., computeStats, (, ), ;, if, (, sampleStats, ., getN, (, ), ==, 0, ), {, throw, new, ZeroException, (]
[), {, throw, new, ZeroException, (, LocalizedFormats, ., URL_CONTAINS_NO_DATA, ,, url, ), ;, }, in, =, new, BufferedReader, (, new]
[==, 0, ), {, throw, new, ZeroException, (, LocalizedFormats, ., URL_CONTAINS_NO_DATA, ,, url, ), ;, }, in, =, new, BufferedReader]
[., getN, (, ), ==, 0, ), {, throw, new, ZeroException, (, LocalizedFormats, ., URL_CONTAINS_NO_DATA, ,, url, ), ;, }]
[), {, throw, new, ZeroException, (, LocalizedFormats, ., URL_CONTAINS_NO_DATA, ,, url, ), ;, }, in, =, new, BufferedReader, (, new]
[;, }, in, =, new, BufferedReader, (, new, InputStreamReader, (, url, ., openStream, (, ), ,, charset, ), ), ;]
[,, url, ), ;, }, in, =, new, BufferedReader, (, new, InputStreamReader, (, url, ., openStream, (, ), ,, charset]
[., URL_CONTAINS_NO_DATA, ,, url, ), ;, }, in, =, new, BufferedReader, (, new, InputStreamReader, (, url, ., openStream, (, )]
[), ;, }, in, =, new, BufferedReader, (, new, InputStreamReader, (, url, ., openStream, (, ), ,, charset, ), )]
[=, new, BufferedReader, (, new, InputStreamReader, (, url, ., openStream, (, ), ,, charset, ), ), ;, fillBinStats, (, new]
[;, fillBinStats, (, new, StreamDataAdapter, (, in, ), ), ;, loaded, =, true, ;, }, finally, {, try, {, in]
[), ;, fillBinStats, (, new, StreamDataAdapter, (, in, ), ), ;, loaded, =, true, ;, }, finally, {, try, {]
[,, charset, ), ), ;, fillBinStats, (, new, StreamDataAdapter, (, in, ), ), ;, loaded, =, true, ;, }, finally]
[., openStream, (, ), ,, charset, ), ), ;, fillBinStats, (, new, StreamDataAdapter, (, in, ), ), ;, loaded, =]
[), ), ;, fillBinStats, (, new, StreamDataAdapter, (, in, ), ), ;, loaded, =, true, ;, }, finally, {, try]
[;, loaded, =, true, ;, }, finally, {, try, {, in, ., close, (, ), ;, }, catch, (, IOException]
[), ;, loaded, =, true, ;, }, finally, {, try, {, in, ., close, (, ), ;, }, catch, (]
[), ), ;, loaded, =, true, ;, }, finally, {, try, {, in, ., close, (, ), ;, }, catch]
[=, true, ;, }, finally, {, try, {, in, ., close, (, ), ;, }, catch, (, IOException, ex, )]
[;, }, finally, {, try, {, in, ., close, (, ), ;, }, catch, (, IOException, ex, ), {, }]
[;, }, catch, (, IOException, ex, ), {, }, }, }, public, void, load, (, File, file, ), throws, IOException]
[., close, (, ), ;, }, catch, (, IOException, ex, ), {, }, }, }, public, void, load, (, File]
[;, Charset, charset, =, Charset, ., forName, (, FILE_CHARSET, ), ;, InputStream, is, =, new, FileInputStream, (, file, ), ;]
[., checkNotNull, (, file, ), ;, Charset, charset, =, Charset, ., forName, (, FILE_CHARSET, ), ;, InputStream, is, =, new]
[), ;, Charset, charset, =, Charset, ., forName, (, FILE_CHARSET, ), ;, InputStream, is, =, new, FileInputStream, (, file, )]
[;, InputStream, is, =, new, FileInputStream, (, file, ), ;, BufferedReader, in, =, new, BufferedReader, (, new, InputStreamReader, (, is]
[., forName, (, FILE_CHARSET, ), ;, InputStream, is, =, new, FileInputStream, (, file, ), ;, BufferedReader, in, =, new, BufferedReader]
[), ;, InputStream, is, =, new, FileInputStream, (, file, ), ;, BufferedReader, in, =, new, BufferedReader, (, new, InputStreamReader, (]
[;, BufferedReader, in, =, new, BufferedReader, (, new, InputStreamReader, (, is, ,, charset, ), ), ;, try, {, DataAdapter, da]
[), ;, BufferedReader, in, =, new, BufferedReader, (, new, InputStreamReader, (, is, ,, charset, ), ), ;, try, {, DataAdapter]
[;, try, {, DataAdapter, da, =, new, StreamDataAdapter, (, in, ), ;, da, ., computeStats, (, ), ;, is, =]
[), ;, try, {, DataAdapter, da, =, new, StreamDataAdapter, (, in, ), ;, da, ., computeStats, (, ), ;, is]
[,, charset, ), ), ;, try, {, DataAdapter, da, =, new, StreamDataAdapter, (, in, ), ;, da, ., computeStats, (]
[), ), ;, try, {, DataAdapter, da, =, new, StreamDataAdapter, (, in, ), ;, da, ., computeStats, (, ), ;]
[;, da, ., computeStats, (, ), ;, is, =, new, FileInputStream, (, file, ), ;, in, =, new, BufferedReader, (]
[), ;, da, ., computeStats, (, ), ;, is, =, new, FileInputStream, (, file, ), ;, in, =, new, BufferedReader]
[;, is, =, new, FileInputStream, (, file, ), ;, in, =, new, BufferedReader, (, new, InputStreamReader, (, is, ,, charset]
[., computeStats, (, ), ;, is, =, new, FileInputStream, (, file, ), ;, in, =, new, BufferedReader, (, new, InputStreamReader]
[=, new, FileInputStream, (, file, ), ;, in, =, new, BufferedReader, (, new, InputStreamReader, (, is, ,, charset, ), )]
[;, in, =, new, BufferedReader, (, new, InputStreamReader, (, is, ,, charset, ), ), ;, fillBinStats, (, new, StreamDataAdapter, (]
[), ;, in, =, new, BufferedReader, (, new, InputStreamReader, (, is, ,, charset, ), ), ;, fillBinStats, (, new, StreamDataAdapter]
[=, new, BufferedReader, (, new, InputStreamReader, (, is, ,, charset, ), ), ;, fillBinStats, (, new, StreamDataAdapter, (, in, )]
[;, fillBinStats, (, new, StreamDataAdapter, (, in, ), ), ;, loaded, =, true, ;, }, finally, {, try, {, in]
[), ;, fillBinStats, (, new, StreamDataAdapter, (, in, ), ), ;, loaded, =, true, ;, }, finally, {, try, {]
[,, charset, ), ), ;, fillBinStats, (, new, StreamDataAdapter, (, in, ), ), ;, loaded, =, true, ;, }, finally]
[), ), ;, fillBinStats, (, new, StreamDataAdapter, (, in, ), ), ;, loaded, =, true, ;, }, finally, {, try]
[;, loaded, =, true, ;, }, finally, {, try, {, in, ., close, (, ), ;, }, catch, (, IOException]
[), ;, loaded, =, true, ;, }, finally, {, try, {, in, ., close, (, ), ;, }, catch, (]
[), ), ;, loaded, =, true, ;, }, finally, {, try, {, in, ., close, (, ), ;, }, catch]
[=, true, ;, }, finally, {, try, {, in, ., close, (, ), ;, }, catch, (, IOException, ex, )]
[;, }, finally, {, try, {, in, ., close, (, ), ;, }, catch, (, IOException, ex, ), {, }]
[;, }, catch, (, IOException, ex, ), {, }, }, }, private, abstract, class, DataAdapter, {, public, abstract, void, computeBinStats]
[., close, (, ), ;, }, catch, (, IOException, ex, ), {, }, }, }, private, abstract, class, DataAdapter, {]
[=, in, ;, }, @, Override, public, void, computeBinStats, (, ), throws, IOException, {, String, str, =, null, ;, double]
[;, }, @, Override, public, void, computeBinStats, (, ), throws, IOException, {, String, str, =, null, ;, double, val, =]
[;, double, val, =, 0.0d, ;, while, (, (, str, =, inputStream, ., readLine, (, ), ), !=, null, )]
[;, while, (, (, str, =, inputStream, ., readLine, (, ), ), !=, null, ), {, val, =, Double, .]
[), {, val, =, Double, ., parseDouble, (, str, ), ;, SummaryStatistics, stats, =, binStats, ., get, (, findBin, (]
[!=, null, ), {, val, =, Double, ., parseDouble, (, str, ), ;, SummaryStatistics, stats, =, binStats, ., get, (]
[=, inputStream, ., readLine, (, ), ), !=, null, ), {, val, =, Double, ., parseDouble, (, str, ), ;]
[), !=, null, ), {, val, =, Double, ., parseDouble, (, str, ), ;, SummaryStatistics, stats, =, binStats, ., get]
[., readLine, (, ), ), !=, null, ), {, val, =, Double, ., parseDouble, (, str, ), ;, SummaryStatistics, stats]
[), {, val, =, Double, ., parseDouble, (, str, ), ;, SummaryStatistics, stats, =, binStats, ., get, (, findBin, (]
[=, Double, ., parseDouble, (, str, ), ;, SummaryStatistics, stats, =, binStats, ., get, (, findBin, (, val, ), )]
[;, SummaryStatistics, stats, =, binStats, ., get, (, findBin, (, val, ), ), ;, stats, ., addValue, (, val, )]
[., parseDouble, (, str, ), ;, SummaryStatistics, stats, =, binStats, ., get, (, findBin, (, val, ), ), ;, stats]
[), ;, SummaryStatistics, stats, =, binStats, ., get, (, findBin, (, val, ), ), ;, stats, ., addValue, (, val]
[;, stats, ., addValue, (, val, ), ;, }, inputStream, ., close, (, ), ;, inputStream, =, null, ;, }]
[., get, (, findBin, (, val, ), ), ;, stats, ., addValue, (, val, ), ;, }, inputStream, ., close]
[), ;, stats, ., addValue, (, val, ), ;, }, inputStream, ., close, (, ), ;, inputStream, =, null, ;]
[), ), ;, stats, ., addValue, (, val, ), ;, }, inputStream, ., close, (, ), ;, inputStream, =, null]
[;, }, inputStream, ., close, (, ), ;, inputStream, =, null, ;, }, @, Override, public, void, computeStats, (, )]
[., addValue, (, val, ), ;, }, inputStream, ., close, (, ), ;, inputStream, =, null, ;, }, @, Override]
[), ;, }, inputStream, ., close, (, ), ;, inputStream, =, null, ;, }, @, Override, public, void, computeStats, (]
[;, inputStream, =, null, ;, }, @, Override, public, void, computeStats, (, ), throws, IOException, {, String, str, =, null]
[., close, (, ), ;, inputStream, =, null, ;, }, @, Override, public, void, computeStats, (, ), throws, IOException, {]
[=, null, ;, }, @, Override, public, void, computeStats, (, ), throws, IOException, {, String, str, =, null, ;, double]
[;, }, @, Override, public, void, computeStats, (, ), throws, IOException, {, String, str, =, null, ;, double, val, =]
[;, double, val, =, 0.0, ;, sampleStats, =, new, SummaryStatistics, (, ), ;, while, (, (, str, =, inputStream, .]
[;, sampleStats, =, new, SummaryStatistics, (, ), ;, while, (, (, str, =, inputStream, ., readLine, (, ), ), !=]
[=, new, SummaryStatistics, (, ), ;, while, (, (, str, =, inputStream, ., readLine, (, ), ), !=, null, )]
[;, while, (, (, str, =, inputStream, ., readLine, (, ), ), !=, null, ), {, val, =, Double, .]
[), {, val, =, Double, ., parseDouble, (, str, ), ;, sampleStats, ., addValue, (, val, ), ;, }, inputStream]
[!=, null, ), {, val, =, Double, ., parseDouble, (, str, ), ;, sampleStats, ., addValue, (, val, ), ;]
[=, inputStream, ., readLine, (, ), ), !=, null, ), {, val, =, Double, ., parseDouble, (, str, ), ;]
[), !=, null, ), {, val, =, Double, ., parseDouble, (, str, ), ;, sampleStats, ., addValue, (, val, )]
[., readLine, (, ), ), !=, null, ), {, val, =, Double, ., parseDouble, (, str, ), ;, sampleStats, .]
[), {, val, =, Double, ., parseDouble, (, str, ), ;, sampleStats, ., addValue, (, val, ), ;, }, inputStream]
[=, Double, ., parseDouble, (, str, ), ;, sampleStats, ., addValue, (, val, ), ;, }, inputStream, ., close, (]
[;, sampleStats, ., addValue, (, val, ), ;, }, inputStream, ., close, (, ), ;, inputStream, =, null, ;, }]
[., parseDouble, (, str, ), ;, sampleStats, ., addValue, (, val, ), ;, }, inputStream, ., close, (, ), ;]
[), ;, sampleStats, ., addValue, (, val, ), ;, }, inputStream, ., close, (, ), ;, inputStream, =, null, ;]
[;, }, inputStream, ., close, (, ), ;, inputStream, =, null, ;, }, }, private, class, ArrayDataAdapter, extends, DataAdapter, {]
[., addValue, (, val, ), ;, }, inputStream, ., close, (, ), ;, inputStream, =, null, ;, }, }, private]
[), ;, }, inputStream, ., close, (, ), ;, inputStream, =, null, ;, }, }, private, class, ArrayDataAdapter, extends, DataAdapter]
[;, inputStream, =, null, ;, }, }, private, class, ArrayDataAdapter, extends, DataAdapter, {, private, double, [, ], inputArray, ;, public]
[., close, (, ), ;, inputStream, =, null, ;, }, }, private, class, ArrayDataAdapter, extends, DataAdapter, {, private, double, []
[=, null, ;, }, }, private, class, ArrayDataAdapter, extends, DataAdapter, {, private, double, [, ], inputArray, ;, public, ArrayDataAdapter, (]
[;, }, }, private, class, ArrayDataAdapter, extends, DataAdapter, {, private, double, [, ], inputArray, ;, public, ArrayDataAdapter, (, double, []
[;, inputArray, =, in, ;, }, @, Override, public, void, computeStats, (, ), throws, IOException, {, sampleStats, =, new, SummaryStatistics]
[., checkNotNull, (, in, ), ;, inputArray, =, in, ;, }, @, Override, public, void, computeStats, (, ), throws, IOException]
[), ;, inputArray, =, in, ;, }, @, Override, public, void, computeStats, (, ), throws, IOException, {, sampleStats, =, new]
[=, in, ;, }, @, Override, public, void, computeStats, (, ), throws, IOException, {, sampleStats, =, new, SummaryStatistics, (, )]
[;, }, @, Override, public, void, computeStats, (, ), throws, IOException, {, sampleStats, =, new, SummaryStatistics, (, ), ;, for]
[=, new, SummaryStatistics, (, ), ;, for, (, int, i, =, 0, ;, i, <, inputArray, ., length, ;, i]
[;, for, (, int, i, =, 0, ;, i, <, inputArray, ., length, ;, i, ++, ), {, sampleStats, .]
[;, i, <, inputArray, ., length, ;, i, ++, ), {, sampleStats, ., addValue, (, inputArray, [, i, ], )]
[;, i, ++, ), {, sampleStats, ., addValue, (, inputArray, [, i, ], ), ;, }, }, @, Override, public]
[<, inputArray, ., length, ;, i, ++, ), {, sampleStats, ., addValue, (, inputArray, [, i, ], ), ;, }]
[;, i, ++, ), {, sampleStats, ., addValue, (, inputArray, [, i, ], ), ;, }, }, @, Override, public]
[., length, ;, i, ++, ), {, sampleStats, ., addValue, (, inputArray, [, i, ], ), ;, }, }, @]
[), {, sampleStats, ., addValue, (, inputArray, [, i, ], ), ;, }, }, @, Override, public, void, computeBinStats, (]
[++, ), {, sampleStats, ., addValue, (, inputArray, [, i, ], ), ;, }, }, @, Override, public, void, computeBinStats]
[;, }, }, @, Override, public, void, computeBinStats, (, ), throws, IOException, {, for, (, int, i, =, 0, ;]
[., addValue, (, inputArray, [, i, ], ), ;, }, }, @, Override, public, void, computeBinStats, (, ), throws, IOException]
[), ;, }, }, @, Override, public, void, computeBinStats, (, ), throws, IOException, {, for, (, int, i, =, 0]
[[, i, ], ), ;, }, }, @, Override, public, void, computeBinStats, (, ), throws, IOException, {, for, (, int]
[], ), ;, }, }, @, Override, public, void, computeBinStats, (, ), throws, IOException, {, for, (, int, i, =]
[;, i, <, inputArray, ., length, ;, i, ++, ), {, SummaryStatistics, stats, =, binStats, ., get, (, findBin, (]
[;, i, ++, ), {, SummaryStatistics, stats, =, binStats, ., get, (, findBin, (, inputArray, [, i, ], ), )]
[<, inputArray, ., length, ;, i, ++, ), {, SummaryStatistics, stats, =, binStats, ., get, (, findBin, (, inputArray, []
[;, i, ++, ), {, SummaryStatistics, stats, =, binStats, ., get, (, findBin, (, inputArray, [, i, ], ), )]
[., length, ;, i, ++, ), {, SummaryStatistics, stats, =, binStats, ., get, (, findBin, (, inputArray, [, i, ]]
[), {, SummaryStatistics, stats, =, binStats, ., get, (, findBin, (, inputArray, [, i, ], ), ), ;, stats, .]
[++, ), {, SummaryStatistics, stats, =, binStats, ., get, (, findBin, (, inputArray, [, i, ], ), ), ;, stats]
[;, stats, ., addValue, (, inputArray, [, i, ], ), ;, }, }, }, private, void, fillBinStats, (, final, DataAdapter]
[., get, (, findBin, (, inputArray, [, i, ], ), ), ;, stats, ., addValue, (, inputArray, [, i, ]]
[), ;, stats, ., addValue, (, inputArray, [, i, ], ), ;, }, }, }, private, void, fillBinStats, (, final]
[), ), ;, stats, ., addValue, (, inputArray, [, i, ], ), ;, }, }, }, private, void, fillBinStats, (]
[[, i, ], ), ), ;, stats, ., addValue, (, inputArray, [, i, ], ), ;, }, }, }, private]
[], ), ), ;, stats, ., addValue, (, inputArray, [, i, ], ), ;, }, }, }, private, void, fillBinStats]
[;, }, }, }, private, void, fillBinStats, (, final, DataAdapter, da, ), throws, IOException, {, min, =, sampleStats, ., getMin]
[., addValue, (, inputArray, [, i, ], ), ;, }, }, }, private, void, fillBinStats, (, final, DataAdapter, da, )]
[), ;, }, }, }, private, void, fillBinStats, (, final, DataAdapter, da, ), throws, IOException, {, min, =, sampleStats, .]
[[, i, ], ), ;, }, }, }, private, void, fillBinStats, (, final, DataAdapter, da, ), throws, IOException, {, min]
[], ), ;, }, }, }, private, void, fillBinStats, (, final, DataAdapter, da, ), throws, IOException, {, min, =, sampleStats]
[=, sampleStats, ., getMin, (, ), ;, max, =, sampleStats, ., getMax, (, ), ;, delta, =, (, max, -]
[;, max, =, sampleStats, ., getMax, (, ), ;, delta, =, (, max, -, min, ), /, (, (, double]
[., getMin, (, ), ;, max, =, sampleStats, ., getMax, (, ), ;, delta, =, (, max, -, min, )]
[=, sampleStats, ., getMax, (, ), ;, delta, =, (, max, -, min, ), /, (, (, double, ), binCount]
[;, delta, =, (, max, -, min, ), /, (, (, double, ), binCount, ), ;, if, (, !, binStats]
[., getMax, (, ), ;, delta, =, (, max, -, min, ), /, (, (, double, ), binCount, ), ;]
[=, (, max, -, min, ), /, (, (, double, ), binCount, ), ;, if, (, !, binStats, ., isEmpty]
[;, if, (, !, binStats, ., isEmpty, (, ), ), {, binStats, ., clear, (, ), ;, }, for, (]
[/, (, (, double, ), binCount, ), ;, if, (, !, binStats, ., isEmpty, (, ), ), {, binStats, .]
[), /, (, (, double, ), binCount, ), ;, if, (, !, binStats, ., isEmpty, (, ), ), {, binStats]
[-, min, ), /, (, (, double, ), binCount, ), ;, if, (, !, binStats, ., isEmpty, (, ), )]
[), /, (, (, double, ), binCount, ), ;, if, (, !, binStats, ., isEmpty, (, ), ), {, binStats]
[;, if, (, !, binStats, ., isEmpty, (, ), ), {, binStats, ., clear, (, ), ;, }, for, (]
[), ;, if, (, !, binStats, ., isEmpty, (, ), ), {, binStats, ., clear, (, ), ;, }, for]
[), ;, if, (, !, binStats, ., isEmpty, (, ), ), {, binStats, ., clear, (, ), ;, }, for]
[), {, binStats, ., clear, (, ), ;, }, for, (, int, i, =, 0, ;, i, <, binCount, ;]
[), {, binStats, ., clear, (, ), ;, }, for, (, int, i, =, 0, ;, i, <, binCount, ;]
[., isEmpty, (, ), ), {, binStats, ., clear, (, ), ;, }, for, (, int, i, =, 0, ;]
[;, }, for, (, int, i, =, 0, ;, i, <, binCount, ;, i, ++, ), {, SummaryStatistics, stats, =]
[., clear, (, ), ;, }, for, (, int, i, =, 0, ;, i, <, binCount, ;, i, ++, )]
[;, i, <, binCount, ;, i, ++, ), {, SummaryStatistics, stats, =, new, SummaryStatistics, (, ), ;, binStats, ., add]
[;, i, ++, ), {, SummaryStatistics, stats, =, new, SummaryStatistics, (, ), ;, binStats, ., add, (, i, ,, stats]
[<, binCount, ;, i, ++, ), {, SummaryStatistics, stats, =, new, SummaryStatistics, (, ), ;, binStats, ., add, (, i]
[;, i, ++, ), {, SummaryStatistics, stats, =, new, SummaryStatistics, (, ), ;, binStats, ., add, (, i, ,, stats]
[), {, SummaryStatistics, stats, =, new, SummaryStatistics, (, ), ;, binStats, ., add, (, i, ,, stats, ), ;, }]
[++, ), {, SummaryStatistics, stats, =, new, SummaryStatistics, (, ), ;, binStats, ., add, (, i, ,, stats, ), ;]
[;, binStats, ., add, (, i, ,, stats, ), ;, }, da, ., computeBinStats, (, ), ;, upperBounds, =, new]
[;, }, da, ., computeBinStats, (, ), ;, upperBounds, =, new, double, [, binCount, ], ;, upperBounds, [, 0, ]]
[., add, (, i, ,, stats, ), ;, }, da, ., computeBinStats, (, ), ;, upperBounds, =, new, double, []
[,, stats, ), ;, }, da, ., computeBinStats, (, ), ;, upperBounds, =, new, double, [, binCount, ], ;, upperBounds]
[), ;, }, da, ., computeBinStats, (, ), ;, upperBounds, =, new, double, [, binCount, ], ;, upperBounds, [, 0]
[;, upperBounds, =, new, double, [, binCount, ], ;, upperBounds, [, 0, ], =, (, (, double, ), binStats, .]
[., computeBinStats, (, ), ;, upperBounds, =, new, double, [, binCount, ], ;, upperBounds, [, 0, ], =, (, (]
[=, new, double, [, binCount, ], ;, upperBounds, [, 0, ], =, (, (, double, ), binStats, ., get, (]
[;, upperBounds, [, 0, ], =, (, (, double, ), binStats, ., get, (, 0, ), ., getN, (, )]
[], ;, upperBounds, [, 0, ], =, (, (, double, ), binStats, ., get, (, 0, ), ., getN, (]
[=, (, (, double, ), binStats, ., get, (, 0, ), ., getN, (, ), ), /, (, double, )]
[[, 0, ], =, (, (, double, ), binStats, ., get, (, 0, ), ., getN, (, ), ), /]
[], =, (, (, double, ), binStats, ., get, (, 0, ), ., getN, (, ), ), /, (, double]
[;, for, (, int, i, =, 1, ;, i, <, binCount, -, 1, ;, i, ++, ), {, upperBounds, []
[/, (, double, ), sampleStats, ., getN, (, ), ;, for, (, int, i, =, 1, ;, i, <, binCount]
[), /, (, double, ), sampleStats, ., getN, (, ), ;, for, (, int, i, =, 1, ;, i, <]
[), /, (, double, ), sampleStats, ., getN, (, ), ;, for, (, int, i, =, 1, ;, i, <]
[., getN, (, ), ), /, (, double, ), sampleStats, ., getN, (, ), ;, for, (, int, i, =]
[., get, (, 0, ), ., getN, (, ), ), /, (, double, ), sampleStats, ., getN, (, ), ;]
[), ., getN, (, ), ), /, (, double, ), sampleStats, ., getN, (, ), ;, for, (, int, i]
[;, for, (, int, i, =, 1, ;, i, <, binCount, -, 1, ;, i, ++, ), {, upperBounds, []
[;, for, (, int, i, =, 1, ;, i, <, binCount, -, 1, ;, i, ++, ), {, upperBounds, []
[., getN, (, ), ;, for, (, int, i, =, 1, ;, i, <, binCount, -, 1, ;, i, ++]
[;, i, <, binCount, -, 1, ;, i, ++, ), {, upperBounds, [, i, ], =, upperBounds, [, i, -]
[;, i, ++, ), {, upperBounds, [, i, ], =, upperBounds, [, i, -, 1, ], +, (, (, double]
[<, binCount, -, 1, ;, i, ++, ), {, upperBounds, [, i, ], =, upperBounds, [, i, -, 1, ]]
[;, i, ++, ), {, upperBounds, [, i, ], =, upperBounds, [, i, -, 1, ], +, (, (, double]
[-, 1, ;, i, ++, ), {, upperBounds, [, i, ], =, upperBounds, [, i, -, 1, ], +, (]
[;, i, ++, ), {, upperBounds, [, i, ], =, upperBounds, [, i, -, 1, ], +, (, (, double]
[), {, upperBounds, [, i, ], =, upperBounds, [, i, -, 1, ], +, (, (, double, ), binStats, .]
[++, ), {, upperBounds, [, i, ], =, upperBounds, [, i, -, 1, ], +, (, (, double, ), binStats]
[=, upperBounds, [, i, -, 1, ], +, (, (, double, ), binStats, ., get, (, i, ), ., getN]
[[, i, ], =, upperBounds, [, i, -, 1, ], +, (, (, double, ), binStats, ., get, (, i]
[], =, upperBounds, [, i, -, 1, ], +, (, (, double, ), binStats, ., get, (, i, ), .]
[;, }, upperBounds, [, binCount, -, 1, ], =, 1.0d, ;, }, private, int, findBin, (, double, value, ), {]
[+, (, (, double, ), binStats, ., get, (, i, ), ., getN, (, ), ), /, (, double, )]
[[, i, -, 1, ], +, (, (, double, ), binStats, ., get, (, i, ), ., getN, (, )]
[], +, (, (, double, ), binStats, ., get, (, i, ), ., getN, (, ), ), /, (, double]
[-, 1, ], +, (, (, double, ), binStats, ., get, (, i, ), ., getN, (, ), ), /]
[], +, (, (, double, ), binStats, ., get, (, i, ), ., getN, (, ), ), /, (, double]
[;, }, upperBounds, [, binCount, -, 1, ], =, 1.0d, ;, }, private, int, findBin, (, double, value, ), {]
[/, (, double, ), sampleStats, ., getN, (, ), ;, }, upperBounds, [, binCount, -, 1, ], =, 1.0d, ;]
[), /, (, double, ), sampleStats, ., getN, (, ), ;, }, upperBounds, [, binCount, -, 1, ], =, 1.0d]
[), /, (, double, ), sampleStats, ., getN, (, ), ;, }, upperBounds, [, binCount, -, 1, ], =, 1.0d]
[., getN, (, ), ), /, (, double, ), sampleStats, ., getN, (, ), ;, }, upperBounds, [, binCount, -]
[., get, (, i, ), ., getN, (, ), ), /, (, double, ), sampleStats, ., getN, (, ), ;]
[), ., getN, (, ), ), /, (, double, ), sampleStats, ., getN, (, ), ;, }, upperBounds, [, binCount]
[;, }, upperBounds, [, binCount, -, 1, ], =, 1.0d, ;, }, private, int, findBin, (, double, value, ), {]
[;, }, upperBounds, [, binCount, -, 1, ], =, 1.0d, ;, }, private, int, findBin, (, double, value, ), {]
[., getN, (, ), ;, }, upperBounds, [, binCount, -, 1, ], =, 1.0d, ;, }, private, int, findBin, (]
[=, 1.0d, ;, }, private, int, findBin, (, double, value, ), {, return, FastMath, ., min, (, FastMath, ., max]
[[, binCount, -, 1, ], =, 1.0d, ;, }, private, int, findBin, (, double, value, ), {, return, FastMath, .]
[], =, 1.0d, ;, }, private, int, findBin, (, double, value, ), {, return, FastMath, ., min, (, FastMath, .]
[-, 1, ], =, 1.0d, ;, }, private, int, findBin, (, double, value, ), {, return, FastMath, ., min, (]
[], =, 1.0d, ;, }, private, int, findBin, (, double, value, ), {, return, FastMath, ., min, (, FastMath, .]
[;, }, private, int, findBin, (, double, value, ), {, return, FastMath, ., min, (, FastMath, ., max, (, (]
[;, }, public, double, getNextValue, (, ), throws, MathIllegalStateException, {, if, (, !, loaded, ), {, throw, new, MathIllegalStateException, (]
[., min, (, FastMath, ., max, (, (, int, ), FastMath, ., ceil, (, (, value, -, min, ), /]
[,, binCount, -, 1, ), ;, }, public, double, getNextValue, (, ), throws, MathIllegalStateException, {, if, (, !, loaded, )]
[., max, (, (, int, ), FastMath, ., ceil, (, (, value, -, min, ), /, delta, ), -, 1]
[,, 0, ), ,, binCount, -, 1, ), ;, }, public, double, getNextValue, (, ), throws, MathIllegalStateException, {, if, (]
[-, 1, ,, 0, ), ,, binCount, -, 1, ), ;, }, public, double, getNextValue, (, ), throws, MathIllegalStateException, {]
[-, 1, ,, 0, ), ,, binCount, -, 1, ), ;, }, public, double, getNextValue, (, ), throws, MathIllegalStateException, {]
[., ceil, (, (, value, -, min, ), /, delta, ), -, 1, ,, 0, ), ,, binCount, -, 1]
[), -, 1, ,, 0, ), ,, binCount, -, 1, ), ;, }, public, double, getNextValue, (, ), throws, MathIllegalStateException]
[/, delta, ), -, 1, ,, 0, ), ,, binCount, -, 1, ), ;, }, public, double, getNextValue, (, )]
[), /, delta, ), -, 1, ,, 0, ), ,, binCount, -, 1, ), ;, }, public, double, getNextValue, (]
[-, min, ), /, delta, ), -, 1, ,, 0, ), ,, binCount, -, 1, ), ;, }, public, double]
[), /, delta, ), -, 1, ,, 0, ), ,, binCount, -, 1, ), ;, }, public, double, getNextValue, (]
[), -, 1, ,, 0, ), ,, binCount, -, 1, ), ;, }, public, double, getNextValue, (, ), throws, MathIllegalStateException]
[,, 0, ), ,, binCount, -, 1, ), ;, }, public, double, getNextValue, (, ), throws, MathIllegalStateException, {, if, (]
[), ,, binCount, -, 1, ), ;, }, public, double, getNextValue, (, ), throws, MathIllegalStateException, {, if, (, !, loaded]
[), ;, }, public, double, getNextValue, (, ), throws, MathIllegalStateException, {, if, (, !, loaded, ), {, throw, new, MathIllegalStateException]
[-, 1, ), ;, }, public, double, getNextValue, (, ), throws, MathIllegalStateException, {, if, (, !, loaded, ), {, throw]
[), ;, }, public, double, getNextValue, (, ), throws, MathIllegalStateException, {, if, (, !, loaded, ), {, throw, new, MathIllegalStateException]
[), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., DISTRIBUTION_NOT_LOADED, ), ;, }, final, double, x, =, randomData, ., nextUniform, (]
[), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., DISTRIBUTION_NOT_LOADED, ), ;, }, final, double, x, =, randomData, ., nextUniform, (]
[;, }, final, double, x, =, randomData, ., nextUniform, (, 0, ,, 1, ), ;, for, (, int, i, =]
[), ;, }, final, double, x, =, randomData, ., nextUniform, (, 0, ,, 1, ), ;, for, (, int, i]
[., DISTRIBUTION_NOT_LOADED, ), ;, }, final, double, x, =, randomData, ., nextUniform, (, 0, ,, 1, ), ;, for, (]
[;, for, (, int, i, =, 0, ;, i, <, binCount, ;, i, ++, ), {, if, (, x, <=]
[., nextUniform, (, 0, ,, 1, ), ;, for, (, int, i, =, 0, ;, i, <, binCount, ;, i]
[,, 1, ), ;, for, (, int, i, =, 0, ;, i, <, binCount, ;, i, ++, ), {, if]
[), ;, for, (, int, i, =, 0, ;, i, <, binCount, ;, i, ++, ), {, if, (, x]
[;, i, <, binCount, ;, i, ++, ), {, if, (, x, <=, upperBounds, [, i, ], ), {, SummaryStatistics]
[;, i, ++, ), {, if, (, x, <=, upperBounds, [, i, ], ), {, SummaryStatistics, stats, =, binStats, .]
[<, binCount, ;, i, ++, ), {, if, (, x, <=, upperBounds, [, i, ], ), {, SummaryStatistics, stats, =]
[;, i, ++, ), {, if, (, x, <=, upperBounds, [, i, ], ), {, SummaryStatistics, stats, =, binStats, .]
[), {, if, (, x, <=, upperBounds, [, i, ], ), {, SummaryStatistics, stats, =, binStats, ., get, (, i]
[++, ), {, if, (, x, <=, upperBounds, [, i, ], ), {, SummaryStatistics, stats, =, binStats, ., get, (]
[), {, SummaryStatistics, stats, =, binStats, ., get, (, i, ), ;, if, (, stats, ., getN, (, ), >]
[<=, upperBounds, [, i, ], ), {, SummaryStatistics, stats, =, binStats, ., get, (, i, ), ;, if, (, stats]
[), {, SummaryStatistics, stats, =, binStats, ., get, (, i, ), ;, if, (, stats, ., getN, (, ), >]
[[, i, ], ), {, SummaryStatistics, stats, =, binStats, ., get, (, i, ), ;, if, (, stats, ., getN]
[], ), {, SummaryStatistics, stats, =, binStats, ., get, (, i, ), ;, if, (, stats, ., getN, (, )]
[;, if, (, stats, ., getN, (, ), >, 0, ), {, if, (, stats, ., getStandardDeviation, (, ), >]
[., get, (, i, ), ;, if, (, stats, ., getN, (, ), >, 0, ), {, if, (, stats]
[), ;, if, (, stats, ., getN, (, ), >, 0, ), {, if, (, stats, ., getStandardDeviation, (, )]
[), {, if, (, stats, ., getStandardDeviation, (, ), >, 0, ), {, return, getKernel, (, stats, ), ., sample]
[>, 0, ), {, if, (, stats, ., getStandardDeviation, (, ), >, 0, ), {, return, getKernel, (, stats, )]
[., getN, (, ), >, 0, ), {, if, (, stats, ., getStandardDeviation, (, ), >, 0, ), {, return]
[), {, if, (, stats, ., getStandardDeviation, (, ), >, 0, ), {, return, getKernel, (, stats, ), ., sample]
[), {, return, getKernel, (, stats, ), ., sample, (, ), ;, }, else, {, return, stats, ., getMean, (]
[>, 0, ), {, return, getKernel, (, stats, ), ., sample, (, ), ;, }, else, {, return, stats, .]
[., getStandardDeviation, (, ), >, 0, ), {, return, getKernel, (, stats, ), ., sample, (, ), ;, }, else]
[), {, return, getKernel, (, stats, ), ., sample, (, ), ;, }, else, {, return, stats, ., getMean, (]
[;, }, else, {, return, stats, ., getMean, (, ), ;, }, }, }, }, throw, new, MathIllegalStateException, (, LocalizedFormats]
[., sample, (, ), ;, }, else, {, return, stats, ., getMean, (, ), ;, }, }, }, }, throw]
[), ., sample, (, ), ;, }, else, {, return, stats, ., getMean, (, ), ;, }, }, }, }]
[;, }, }, }, }, throw, new, MathIllegalStateException, (, LocalizedFormats, ., NO_BIN_SELECTED, ), ;, }, public, StatisticalSummary, getSampleStats, (, )]
[., getMean, (, ), ;, }, }, }, }, throw, new, MathIllegalStateException, (, LocalizedFormats, ., NO_BIN_SELECTED, ), ;, }, public]
[;, }, public, StatisticalSummary, getSampleStats, (, ), {, return, sampleStats, ;, }, public, int, getBinCount, (, ), {, return, binCount]
[), ;, }, public, StatisticalSummary, getSampleStats, (, ), {, return, sampleStats, ;, }, public, int, getBinCount, (, ), {, return]
[., NO_BIN_SELECTED, ), ;, }, public, StatisticalSummary, getSampleStats, (, ), {, return, sampleStats, ;, }, public, int, getBinCount, (, )]
[;, }, public, int, getBinCount, (, ), {, return, binCount, ;, }, public, List, <, SummaryStatistics, >, getBinStats, (, )]
[;, }, public, List, <, SummaryStatistics, >, getBinStats, (, ), {, return, binStats, ;, }, public, double, [, ], getUpperBounds]
[;, }, public, double, [, ], getUpperBounds, (, ), {, double, [, ], binUpperBounds, =, new, double, [, binCount, ]]
[;, for, (, int, i, =, 0, ;, i, <, binCount, -, 1, ;, i, ++, ), {, binUpperBounds, []
[], ;, for, (, int, i, =, 0, ;, i, <, binCount, -, 1, ;, i, ++, ), {, binUpperBounds]
[;, i, <, binCount, -, 1, ;, i, ++, ), {, binUpperBounds, [, i, ], =, min, +, delta, *]
[;, i, ++, ), {, binUpperBounds, [, i, ], =, min, +, delta, *, (, i, +, 1, ), ;]
[<, binCount, -, 1, ;, i, ++, ), {, binUpperBounds, [, i, ], =, min, +, delta, *, (, i]
[;, i, ++, ), {, binUpperBounds, [, i, ], =, min, +, delta, *, (, i, +, 1, ), ;]
[-, 1, ;, i, ++, ), {, binUpperBounds, [, i, ], =, min, +, delta, *, (, i, +, 1]
[;, i, ++, ), {, binUpperBounds, [, i, ], =, min, +, delta, *, (, i, +, 1, ), ;]
[), {, binUpperBounds, [, i, ], =, min, +, delta, *, (, i, +, 1, ), ;, }, binUpperBounds, []
[++, ), {, binUpperBounds, [, i, ], =, min, +, delta, *, (, i, +, 1, ), ;, }, binUpperBounds]
[=, min, +, delta, *, (, i, +, 1, ), ;, }, binUpperBounds, [, binCount, -, 1, ], =, max]
[[, i, ], =, min, +, delta, *, (, i, +, 1, ), ;, }, binUpperBounds, [, binCount, -, 1]
[], =, min, +, delta, *, (, i, +, 1, ), ;, }, binUpperBounds, [, binCount, -, 1, ], =]
[;, }, binUpperBounds, [, binCount, -, 1, ], =, max, ;, return, binUpperBounds, ;, }, public, double, [, ], getGeneratorUpperBounds]
[+, delta, *, (, i, +, 1, ), ;, }, binUpperBounds, [, binCount, -, 1, ], =, max, ;, return]
[;, }, binUpperBounds, [, binCount, -, 1, ], =, max, ;, return, binUpperBounds, ;, }, public, double, [, ], getGeneratorUpperBounds]
[*, (, i, +, 1, ), ;, }, binUpperBounds, [, binCount, -, 1, ], =, max, ;, return, binUpperBounds, ;]
[;, }, binUpperBounds, [, binCount, -, 1, ], =, max, ;, return, binUpperBounds, ;, }, public, double, [, ], getGeneratorUpperBounds]
[), ;, }, binUpperBounds, [, binCount, -, 1, ], =, max, ;, return, binUpperBounds, ;, }, public, double, [, ]]
[+, 1, ), ;, }, binUpperBounds, [, binCount, -, 1, ], =, max, ;, return, binUpperBounds, ;, }, public, double]
[), ;, }, binUpperBounds, [, binCount, -, 1, ], =, max, ;, return, binUpperBounds, ;, }, public, double, [, ]]
[=, max, ;, return, binUpperBounds, ;, }, public, double, [, ], getGeneratorUpperBounds, (, ), {, int, len, =, upperBounds, .]
[[, binCount, -, 1, ], =, max, ;, return, binUpperBounds, ;, }, public, double, [, ], getGeneratorUpperBounds, (, ), {]
[], =, max, ;, return, binUpperBounds, ;, }, public, double, [, ], getGeneratorUpperBounds, (, ), {, int, len, =, upperBounds]
[-, 1, ], =, max, ;, return, binUpperBounds, ;, }, public, double, [, ], getGeneratorUpperBounds, (, ), {, int, len]
[], =, max, ;, return, binUpperBounds, ;, }, public, double, [, ], getGeneratorUpperBounds, (, ), {, int, len, =, upperBounds]
[;, return, binUpperBounds, ;, }, public, double, [, ], getGeneratorUpperBounds, (, ), {, int, len, =, upperBounds, ., length, ;]
[;, }, public, double, [, ], getGeneratorUpperBounds, (, ), {, int, len, =, upperBounds, ., length, ;, double, [, ]]
[;, double, [, ], out, =, new, double, [, len, ], ;, System, ., arraycopy, (, upperBounds, ,, 0, ,]
[., length, ;, double, [, ], out, =, new, double, [, len, ], ;, System, ., arraycopy, (, upperBounds, ,]
[;, System, ., arraycopy, (, upperBounds, ,, 0, ,, out, ,, 0, ,, len, ), ;, return, out, ;, }]
[], ;, System, ., arraycopy, (, upperBounds, ,, 0, ,, out, ,, 0, ,, len, ), ;, return, out, ;]
[;, return, out, ;, }, public, boolean, isLoaded, (, ), {, return, loaded, ;, }, public, void, reSeed, (, long]
[., arraycopy, (, upperBounds, ,, 0, ,, out, ,, 0, ,, len, ), ;, return, out, ;, }, public, boolean]
[,, 0, ,, out, ,, 0, ,, len, ), ;, return, out, ;, }, public, boolean, isLoaded, (, ), {]
[,, out, ,, 0, ,, len, ), ;, return, out, ;, }, public, boolean, isLoaded, (, ), {, return, loaded]
[,, 0, ,, len, ), ;, return, out, ;, }, public, boolean, isLoaded, (, ), {, return, loaded, ;, }]
[,, len, ), ;, return, out, ;, }, public, boolean, isLoaded, (, ), {, return, loaded, ;, }, public, void]
[), ;, return, out, ;, }, public, boolean, isLoaded, (, ), {, return, loaded, ;, }, public, void, reSeed, (]
[;, }, public, boolean, isLoaded, (, ), {, return, loaded, ;, }, public, void, reSeed, (, long, seed, ), {]
[;, }, public, void, reSeed, (, long, seed, ), {, randomData, ., reSeed, (, seed, ), ;, }, @, Override]
[;, }, @, Override, public, double, probability, (, double, x, ), {, return, 0, ;, }, public, double, density, (]
[., reSeed, (, seed, ), ;, }, @, Override, public, double, probability, (, double, x, ), {, return, 0, ;]
[), ;, }, @, Override, public, double, probability, (, double, x, ), {, return, 0, ;, }, public, double, density]
[;, }, public, double, density, (, double, x, ), {, if, (, x, <, min, ||, x, >, max, )]
[), {, return, 0d, ;, }, final, int, binIndex, =, findBin, (, x, ), ;, final, RealDistribution, kernel, =, getKernel]
[||, x, >, max, ), {, return, 0d, ;, }, final, int, binIndex, =, findBin, (, x, ), ;, final]
[<, min, ||, x, >, max, ), {, return, 0d, ;, }, final, int, binIndex, =, findBin, (, x, )]
[||, x, >, max, ), {, return, 0d, ;, }, final, int, binIndex, =, findBin, (, x, ), ;, final]
[), {, return, 0d, ;, }, final, int, binIndex, =, findBin, (, x, ), ;, final, RealDistribution, kernel, =, getKernel]
[>, max, ), {, return, 0d, ;, }, final, int, binIndex, =, findBin, (, x, ), ;, final, RealDistribution, kernel]
[), {, return, 0d, ;, }, final, int, binIndex, =, findBin, (, x, ), ;, final, RealDistribution, kernel, =, getKernel]
[;, }, final, int, binIndex, =, findBin, (, x, ), ;, final, RealDistribution, kernel, =, getKernel, (, binStats, ., get]
[;, final, RealDistribution, kernel, =, getKernel, (, binStats, ., get, (, binIndex, ), ), ;, return, kernel, ., density, (]
[), ;, final, RealDistribution, kernel, =, getKernel, (, binStats, ., get, (, binIndex, ), ), ;, return, kernel, ., density]
[;, return, kernel, ., density, (, x, ), *, pB, (, binIndex, ), /, kB, (, binIndex, ), ;, }]
[), ;, return, kernel, ., density, (, x, ), *, pB, (, binIndex, ), /, kB, (, binIndex, ), ;]
[., get, (, binIndex, ), ), ;, return, kernel, ., density, (, x, ), *, pB, (, binIndex, ), /]
[), ), ;, return, kernel, ., density, (, x, ), *, pB, (, binIndex, ), /, kB, (, binIndex, )]
[;, }, public, double, cumulativeProbability, (, double, x, ), {, if, (, x, <, min, ), {, return, 0d, ;]
[/, kB, (, binIndex, ), ;, }, public, double, cumulativeProbability, (, double, x, ), {, if, (, x, <, min]
[*, pB, (, binIndex, ), /, kB, (, binIndex, ), ;, }, public, double, cumulativeProbability, (, double, x, ), {]
[., density, (, x, ), *, pB, (, binIndex, ), /, kB, (, binIndex, ), ;, }, public, double, cumulativeProbability]
[), *, pB, (, binIndex, ), /, kB, (, binIndex, ), ;, }, public, double, cumulativeProbability, (, double, x, )]
[/, kB, (, binIndex, ), ;, }, public, double, cumulativeProbability, (, double, x, ), {, if, (, x, <, min]
[), /, kB, (, binIndex, ), ;, }, public, double, cumulativeProbability, (, double, x, ), {, if, (, x, <]
[;, }, public, double, cumulativeProbability, (, double, x, ), {, if, (, x, <, min, ), {, return, 0d, ;]
[), ;, }, public, double, cumulativeProbability, (, double, x, ), {, if, (, x, <, min, ), {, return, 0d]
[), {, return, 0d, ;, }, else, if, (, x, >=, max, ), {, return, 1d, ;, }, final, int]
[<, min, ), {, return, 0d, ;, }, else, if, (, x, >=, max, ), {, return, 1d, ;, }]
[), {, return, 0d, ;, }, else, if, (, x, >=, max, ), {, return, 1d, ;, }, final, int]
[;, }, else, if, (, x, >=, max, ), {, return, 1d, ;, }, final, int, binIndex, =, findBin, (]
[), {, return, 1d, ;, }, final, int, binIndex, =, findBin, (, x, ), ;, final, double, pBminus, =, pBminus]
[>=, max, ), {, return, 1d, ;, }, final, int, binIndex, =, findBin, (, x, ), ;, final, double, pBminus]
[), {, return, 1d, ;, }, final, int, binIndex, =, findBin, (, x, ), ;, final, double, pBminus, =, pBminus]
[;, }, final, int, binIndex, =, findBin, (, x, ), ;, final, double, pBminus, =, pBminus, (, binIndex, ), ;]
[;, final, double, pBminus, =, pBminus, (, binIndex, ), ;, final, double, pB, =, pB, (, binIndex, ), ;, final]
[), ;, final, double, pBminus, =, pBminus, (, binIndex, ), ;, final, double, pB, =, pB, (, binIndex, ), ;]
[;, final, double, pB, =, pB, (, binIndex, ), ;, final, double, [, ], binBounds, =, getUpperBounds, (, ), ;]
[), ;, final, double, pB, =, pB, (, binIndex, ), ;, final, double, [, ], binBounds, =, getUpperBounds, (, )]
[;, final, double, [, ], binBounds, =, getUpperBounds, (, ), ;, final, double, kB, =, kB, (, binIndex, ), ;]
[), ;, final, double, [, ], binBounds, =, getUpperBounds, (, ), ;, final, double, kB, =, kB, (, binIndex, )]
[;, final, double, kB, =, kB, (, binIndex, ), ;, final, double, lower, =, binIndex, ==, 0, ?, min, :]
[;, final, double, lower, =, binIndex, ==, 0, ?, min, :, binBounds, [, binIndex, -, 1, ], ;, final, RealDistribution]
[), ;, final, double, lower, =, binIndex, ==, 0, ?, min, :, binBounds, [, binIndex, -, 1, ], ;, final]
[;, final, RealDistribution, kernel, =, k, (, x, ), ;, final, double, withinBinCum, =, (, kernel, ., cumulativeProbability, (, x]
[?, min, :, binBounds, [, binIndex, -, 1, ], ;, final, RealDistribution, kernel, =, k, (, x, ), ;, final]
[==, 0, ?, min, :, binBounds, [, binIndex, -, 1, ], ;, final, RealDistribution, kernel, =, k, (, x, )]
[?, min, :, binBounds, [, binIndex, -, 1, ], ;, final, RealDistribution, kernel, =, k, (, x, ), ;, final]
[:, binBounds, [, binIndex, -, 1, ], ;, final, RealDistribution, kernel, =, k, (, x, ), ;, final, double, withinBinCum]
[;, final, RealDistribution, kernel, =, k, (, x, ), ;, final, double, withinBinCum, =, (, kernel, ., cumulativeProbability, (, x]
[[, binIndex, -, 1, ], ;, final, RealDistribution, kernel, =, k, (, x, ), ;, final, double, withinBinCum, =, (]
[], ;, final, RealDistribution, kernel, =, k, (, x, ), ;, final, double, withinBinCum, =, (, kernel, ., cumulativeProbability, (]
[-, 1, ], ;, final, RealDistribution, kernel, =, k, (, x, ), ;, final, double, withinBinCum, =, (, kernel, .]
[], ;, final, RealDistribution, kernel, =, k, (, x, ), ;, final, double, withinBinCum, =, (, kernel, ., cumulativeProbability, (]
[;, final, double, withinBinCum, =, (, kernel, ., cumulativeProbability, (, x, ), -, kernel, ., cumulativeProbability, (, lower, ), )]
[), ;, final, double, withinBinCum, =, (, kernel, ., cumulativeProbability, (, x, ), -, kernel, ., cumulativeProbability, (, lower, )]
[;, return, pBminus, +, pB, *, withinBinCum, ;, }, @, Override, public, double, inverseCumulativeProbability, (, final, double, p, ), throws]
[/, kB, ;, return, pBminus, +, pB, *, withinBinCum, ;, }, @, Override, public, double, inverseCumulativeProbability, (, final, double, p]
[), /, kB, ;, return, pBminus, +, pB, *, withinBinCum, ;, }, @, Override, public, double, inverseCumulativeProbability, (, final, double]
[-, kernel, ., cumulativeProbability, (, lower, ), ), /, kB, ;, return, pBminus, +, pB, *, withinBinCum, ;, }, @]
[., cumulativeProbability, (, x, ), -, kernel, ., cumulativeProbability, (, lower, ), ), /, kB, ;, return, pBminus, +, pB]
[), -, kernel, ., cumulativeProbability, (, lower, ), ), /, kB, ;, return, pBminus, +, pB, *, withinBinCum, ;, }]
[), /, kB, ;, return, pBminus, +, pB, *, withinBinCum, ;, }, @, Override, public, double, inverseCumulativeProbability, (, final, double]
[., cumulativeProbability, (, lower, ), ), /, kB, ;, return, pBminus, +, pB, *, withinBinCum, ;, }, @, Override, public]
[), ), /, kB, ;, return, pBminus, +, pB, *, withinBinCum, ;, }, @, Override, public, double, inverseCumulativeProbability, (, final]
[;, return, pBminus, +, pB, *, withinBinCum, ;, }, @, Override, public, double, inverseCumulativeProbability, (, final, double, p, ), throws]
[;, }, @, Override, public, double, inverseCumulativeProbability, (, final, double, p, ), throws, OutOfRangeException, {, if, (, p, <, 0.0]
[+, pB, *, withinBinCum, ;, }, @, Override, public, double, inverseCumulativeProbability, (, final, double, p, ), throws, OutOfRangeException, {, if]
[;, }, @, Override, public, double, inverseCumulativeProbability, (, final, double, p, ), throws, OutOfRangeException, {, if, (, p, <, 0.0]
[*, withinBinCum, ;, }, @, Override, public, double, inverseCumulativeProbability, (, final, double, p, ), throws, OutOfRangeException, {, if, (, p]
[;, }, @, Override, public, double, inverseCumulativeProbability, (, final, double, p, ), throws, OutOfRangeException, {, if, (, p, <, 0.0]
[), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }, if, (, p, ==, 0.0, )]
[||, p, >, 1.0, ), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }, if, (]
[<, 0.0, ||, p, >, 1.0, ), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }]
[||, p, >, 1.0, ), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }, if, (]
[), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }, if, (, p, ==, 0.0, )]
[>, 1.0, ), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }, if, (, p, ==]
[), {, throw, new, OutOfRangeException, (, p, ,, 0, ,, 1, ), ;, }, if, (, p, ==, 0.0, )]
[;, }, if, (, p, ==, 0.0, ), {, return, getSupportLowerBound, (, ), ;, }, if, (, p, ==, 1.0]
[,, 0, ,, 1, ), ;, }, if, (, p, ==, 0.0, ), {, return, getSupportLowerBound, (, ), ;, }]
[,, 1, ), ;, }, if, (, p, ==, 0.0, ), {, return, getSupportLowerBound, (, ), ;, }, if, (]
[), ;, }, if, (, p, ==, 0.0, ), {, return, getSupportLowerBound, (, ), ;, }, if, (, p, ==]
[), {, return, getSupportLowerBound, (, ), ;, }, if, (, p, ==, 1.0, ), {, return, getSupportUpperBound, (, ), ;]
[==, 0.0, ), {, return, getSupportLowerBound, (, ), ;, }, if, (, p, ==, 1.0, ), {, return, getSupportUpperBound, (]
[), {, return, getSupportLowerBound, (, ), ;, }, if, (, p, ==, 1.0, ), {, return, getSupportUpperBound, (, ), ;]
[;, }, if, (, p, ==, 1.0, ), {, return, getSupportUpperBound, (, ), ;, }, int, i, =, 0, ;]
[), {, return, getSupportUpperBound, (, ), ;, }, int, i, =, 0, ;, while, (, cumBinP, (, i, ), <]
[==, 1.0, ), {, return, getSupportUpperBound, (, ), ;, }, int, i, =, 0, ;, while, (, cumBinP, (, i]
[), {, return, getSupportUpperBound, (, ), ;, }, int, i, =, 0, ;, while, (, cumBinP, (, i, ), <]
[;, }, int, i, =, 0, ;, while, (, cumBinP, (, i, ), <, p, ), {, i, ++, ;]
[;, while, (, cumBinP, (, i, ), <, p, ), {, i, ++, ;, }, final, RealDistribution, kernel, =, getKernel]
[), {, i, ++, ;, }, final, RealDistribution, kernel, =, getKernel, (, binStats, ., get, (, i, ), ), ;]
[<, p, ), {, i, ++, ;, }, final, RealDistribution, kernel, =, getKernel, (, binStats, ., get, (, i, )]
[), <, p, ), {, i, ++, ;, }, final, RealDistribution, kernel, =, getKernel, (, binStats, ., get, (, i]
[), {, i, ++, ;, }, final, RealDistribution, kernel, =, getKernel, (, binStats, ., get, (, i, ), ), ;]
[;, }, final, RealDistribution, kernel, =, getKernel, (, binStats, ., get, (, i, ), ), ;, final, double, kB, =]
[++, ;, }, final, RealDistribution, kernel, =, getKernel, (, binStats, ., get, (, i, ), ), ;, final, double, kB]
[;, final, double, kB, =, kB, (, i, ), ;, final, double, [, ], binBounds, =, getUpperBounds, (, ), ;]
[), ;, final, double, kB, =, kB, (, i, ), ;, final, double, [, ], binBounds, =, getUpperBounds, (, )]
[., get, (, i, ), ), ;, final, double, kB, =, kB, (, i, ), ;, final, double, [, ]]
[), ), ;, final, double, kB, =, kB, (, i, ), ;, final, double, [, ], binBounds, =, getUpperBounds, (]
[;, final, double, [, ], binBounds, =, getUpperBounds, (, ), ;, final, double, lower, =, i, ==, 0, ?, min]
[), ;, final, double, [, ], binBounds, =, getUpperBounds, (, ), ;, final, double, lower, =, i, ==, 0, ?]
[;, final, double, lower, =, i, ==, 0, ?, min, :, binBounds, [, i, -, 1, ], ;, final, double]
[;, final, double, kBminus, =, kernel, ., cumulativeProbability, (, lower, ), ;, final, double, pB, =, pB, (, i, )]
[?, min, :, binBounds, [, i, -, 1, ], ;, final, double, kBminus, =, kernel, ., cumulativeProbability, (, lower, )]
[==, 0, ?, min, :, binBounds, [, i, -, 1, ], ;, final, double, kBminus, =, kernel, ., cumulativeProbability, (]
[?, min, :, binBounds, [, i, -, 1, ], ;, final, double, kBminus, =, kernel, ., cumulativeProbability, (, lower, )]
[:, binBounds, [, i, -, 1, ], ;, final, double, kBminus, =, kernel, ., cumulativeProbability, (, lower, ), ;, final]
[;, final, double, kBminus, =, kernel, ., cumulativeProbability, (, lower, ), ;, final, double, pB, =, pB, (, i, )]
[[, i, -, 1, ], ;, final, double, kBminus, =, kernel, ., cumulativeProbability, (, lower, ), ;, final, double, pB]
[], ;, final, double, kBminus, =, kernel, ., cumulativeProbability, (, lower, ), ;, final, double, pB, =, pB, (, i]
[-, 1, ], ;, final, double, kBminus, =, kernel, ., cumulativeProbability, (, lower, ), ;, final, double, pB, =, pB]
[], ;, final, double, kBminus, =, kernel, ., cumulativeProbability, (, lower, ), ;, final, double, pB, =, pB, (, i]
[;, final, double, pB, =, pB, (, i, ), ;, final, double, pBminus, =, pBminus, (, i, ), ;, final]
[., cumulativeProbability, (, lower, ), ;, final, double, pB, =, pB, (, i, ), ;, final, double, pBminus, =, pBminus]
[), ;, final, double, pB, =, pB, (, i, ), ;, final, double, pBminus, =, pBminus, (, i, ), ;]
[;, final, double, pBminus, =, pBminus, (, i, ), ;, final, double, pCrit, =, p, -, pBminus, ;, if, (]
[), ;, final, double, pBminus, =, pBminus, (, i, ), ;, final, double, pCrit, =, p, -, pBminus, ;, if]
[;, final, double, pCrit, =, p, -, pBminus, ;, if, (, pCrit, <=, 0, ), {, return, lower, ;, }]
[), ;, final, double, pCrit, =, p, -, pBminus, ;, if, (, pCrit, <=, 0, ), {, return, lower, ;]
[;, if, (, pCrit, <=, 0, ), {, return, lower, ;, }, return, kernel, ., inverseCumulativeProbability, (, kBminus, +, pCrit]
[-, pBminus, ;, if, (, pCrit, <=, 0, ), {, return, lower, ;, }, return, kernel, ., inverseCumulativeProbability, (, kBminus]
[;, if, (, pCrit, <=, 0, ), {, return, lower, ;, }, return, kernel, ., inverseCumulativeProbability, (, kBminus, +, pCrit]
[), {, return, lower, ;, }, return, kernel, ., inverseCumulativeProbability, (, kBminus, +, pCrit, *, kB, /, pB, ), ;]
[<=, 0, ), {, return, lower, ;, }, return, kernel, ., inverseCumulativeProbability, (, kBminus, +, pCrit, *, kB, /, pB]
[), {, return, lower, ;, }, return, kernel, ., inverseCumulativeProbability, (, kBminus, +, pCrit, *, kB, /, pB, ), ;]
[;, }, return, kernel, ., inverseCumulativeProbability, (, kBminus, +, pCrit, *, kB, /, pB, ), ;, }, public, double, getNumericalMean]
[;, }, public, double, getNumericalMean, (, ), {, return, sampleStats, ., getMean, (, ), ;, }, public, double, getNumericalVariance, (]
[., inverseCumulativeProbability, (, kBminus, +, pCrit, *, kB, /, pB, ), ;, }, public, double, getNumericalMean, (, ), {, return]
[), ;, }, public, double, getNumericalMean, (, ), {, return, sampleStats, ., getMean, (, ), ;, }, public, double, getNumericalVariance]
[+, pCrit, *, kB, /, pB, ), ;, }, public, double, getNumericalMean, (, ), {, return, sampleStats, ., getMean, (]
[), ;, }, public, double, getNumericalMean, (, ), {, return, sampleStats, ., getMean, (, ), ;, }, public, double, getNumericalVariance]
[/, pB, ), ;, }, public, double, getNumericalMean, (, ), {, return, sampleStats, ., getMean, (, ), ;, }, public]
[*, kB, /, pB, ), ;, }, public, double, getNumericalMean, (, ), {, return, sampleStats, ., getMean, (, ), ;]
[/, pB, ), ;, }, public, double, getNumericalMean, (, ), {, return, sampleStats, ., getMean, (, ), ;, }, public]
[), ;, }, public, double, getNumericalMean, (, ), {, return, sampleStats, ., getMean, (, ), ;, }, public, double, getNumericalVariance]
[;, }, public, double, getNumericalVariance, (, ), {, return, sampleStats, ., getVariance, (, ), ;, }, public, double, getSupportLowerBound, (]
[., getMean, (, ), ;, }, public, double, getNumericalVariance, (, ), {, return, sampleStats, ., getVariance, (, ), ;, }]
[;, }, public, double, getSupportLowerBound, (, ), {, return, min, ;, }, public, double, getSupportUpperBound, (, ), {, return, max]
[., getVariance, (, ), ;, }, public, double, getSupportLowerBound, (, ), {, return, min, ;, }, public, double, getSupportUpperBound, (]
[;, }, public, double, getSupportUpperBound, (, ), {, return, max, ;, }, public, boolean, isSupportLowerBoundInclusive, (, ), {, return, true]
[;, }, public, boolean, isSupportLowerBoundInclusive, (, ), {, return, true, ;, }, public, boolean, isSupportUpperBoundInclusive, (, ), {, return, true]
[;, }, public, boolean, isSupportUpperBoundInclusive, (, ), {, return, true, ;, }, public, boolean, isSupportConnected, (, ), {, return, true]
[;, }, public, boolean, isSupportConnected, (, ), {, return, true, ;, }, @, Override, public, double, sample, (, ), {]
[;, }, @, Override, public, double, sample, (, ), {, return, getNextValue, (, ), ;, }, @, Override, public, void]
[;, }, @, Override, public, void, reseedRandomGenerator, (, long, seed, ), {, randomData, ., reSeed, (, seed, ), ;, }]
[;, }, private, double, pB, (, int, i, ), {, return, i, ==, 0, ?, upperBounds, [, 0, ], :]
[., reSeed, (, seed, ), ;, }, private, double, pB, (, int, i, ), {, return, i, ==, 0, ?]
[), ;, }, private, double, pB, (, int, i, ), {, return, i, ==, 0, ?, upperBounds, [, 0, ]]
[;, }, private, double, pBminus, (, int, i, ), {, return, i, ==, 0, ?, 0, :, upperBounds, [, i]
[?, upperBounds, [, 0, ], :, upperBounds, [, i, ], -, upperBounds, [, i, -, 1, ], ;, }, private]
[==, 0, ?, upperBounds, [, 0, ], :, upperBounds, [, i, ], -, upperBounds, [, i, -, 1, ], ;]
[?, upperBounds, [, 0, ], :, upperBounds, [, i, ], -, upperBounds, [, i, -, 1, ], ;, }, private]
[:, upperBounds, [, i, ], -, upperBounds, [, i, -, 1, ], ;, }, private, double, pBminus, (, int, i]
[[, 0, ], :, upperBounds, [, i, ], -, upperBounds, [, i, -, 1, ], ;, }, private, double, pBminus]
[], :, upperBounds, [, i, ], -, upperBounds, [, i, -, 1, ], ;, }, private, double, pBminus, (, int]
[;, }, private, double, pBminus, (, int, i, ), {, return, i, ==, 0, ?, 0, :, upperBounds, [, i]
[-, upperBounds, [, i, -, 1, ], ;, }, private, double, pBminus, (, int, i, ), {, return, i, ==]
[[, i, ], -, upperBounds, [, i, -, 1, ], ;, }, private, double, pBminus, (, int, i, ), {]
[], -, upperBounds, [, i, -, 1, ], ;, }, private, double, pBminus, (, int, i, ), {, return, i]
[;, }, private, double, pBminus, (, int, i, ), {, return, i, ==, 0, ?, 0, :, upperBounds, [, i]
[[, i, -, 1, ], ;, }, private, double, pBminus, (, int, i, ), {, return, i, ==, 0, ?]
[], ;, }, private, double, pBminus, (, int, i, ), {, return, i, ==, 0, ?, 0, :, upperBounds, []
[-, 1, ], ;, }, private, double, pBminus, (, int, i, ), {, return, i, ==, 0, ?, 0, :]
[], ;, }, private, double, pBminus, (, int, i, ), {, return, i, ==, 0, ?, 0, :, upperBounds, []
[;, }, @, SuppressWarnings, (, "deprecation", ), private, double, kB, (, int, i, ), {, final, double, [, ], binBounds]
[?, 0, :, upperBounds, [, i, -, 1, ], ;, }, @, SuppressWarnings, (, "deprecation", ), private, double, kB, (]
[==, 0, ?, 0, :, upperBounds, [, i, -, 1, ], ;, }, @, SuppressWarnings, (, "deprecation", ), private, double]
[?, 0, :, upperBounds, [, i, -, 1, ], ;, }, @, SuppressWarnings, (, "deprecation", ), private, double, kB, (]
[:, upperBounds, [, i, -, 1, ], ;, }, @, SuppressWarnings, (, "deprecation", ), private, double, kB, (, int, i]
[;, }, @, SuppressWarnings, (, "deprecation", ), private, double, kB, (, int, i, ), {, final, double, [, ], binBounds]
[[, i, -, 1, ], ;, }, @, SuppressWarnings, (, "deprecation", ), private, double, kB, (, int, i, ), {]
[], ;, }, @, SuppressWarnings, (, "deprecation", ), private, double, kB, (, int, i, ), {, final, double, [, ]]
[-, 1, ], ;, }, @, SuppressWarnings, (, "deprecation", ), private, double, kB, (, int, i, ), {, final, double]
[], ;, }, @, SuppressWarnings, (, "deprecation", ), private, double, kB, (, int, i, ), {, final, double, [, ]]
[private, double, kB, (, int, i, ), {, final, double, [, ], binBounds, =, getUpperBounds, (, ), ;, final, RealDistribution]
[), private, double, kB, (, int, i, ), {, final, double, [, ], binBounds, =, getUpperBounds, (, ), ;, final]
[;, final, RealDistribution, kernel, =, getKernel, (, binStats, ., get, (, i, ), ), ;, return, i, ==, 0, ?]
[;, return, i, ==, 0, ?, kernel, ., cumulativeProbability, (, min, ,, binBounds, [, 0, ], ), :, kernel, .]
[), ;, return, i, ==, 0, ?, kernel, ., cumulativeProbability, (, min, ,, binBounds, [, 0, ], ), :, kernel]
[., get, (, i, ), ), ;, return, i, ==, 0, ?, kernel, ., cumulativeProbability, (, min, ,, binBounds, []
[), ), ;, return, i, ==, 0, ?, kernel, ., cumulativeProbability, (, min, ,, binBounds, [, 0, ], ), :]
[;, }, private, RealDistribution, k, (, double, x, ), {, final, int, binIndex, =, findBin, (, x, ), ;, return]
[?, kernel, ., cumulativeProbability, (, min, ,, binBounds, [, 0, ], ), :, kernel, ., cumulativeProbability, (, binBounds, [, i]
[==, 0, ?, kernel, ., cumulativeProbability, (, min, ,, binBounds, [, 0, ], ), :, kernel, ., cumulativeProbability, (, binBounds]
[?, kernel, ., cumulativeProbability, (, min, ,, binBounds, [, 0, ], ), :, kernel, ., cumulativeProbability, (, binBounds, [, i]
[:, kernel, ., cumulativeProbability, (, binBounds, [, i, -, 1, ], ,, binBounds, [, i, ], ), ;, }, private]
[., cumulativeProbability, (, min, ,, binBounds, [, 0, ], ), :, kernel, ., cumulativeProbability, (, binBounds, [, i, -, 1]
[,, binBounds, [, 0, ], ), :, kernel, ., cumulativeProbability, (, binBounds, [, i, -, 1, ], ,, binBounds, []
[), :, kernel, ., cumulativeProbability, (, binBounds, [, i, -, 1, ], ,, binBounds, [, i, ], ), ;, }]
[[, 0, ], ), :, kernel, ., cumulativeProbability, (, binBounds, [, i, -, 1, ], ,, binBounds, [, i, ]]
[], ), :, kernel, ., cumulativeProbability, (, binBounds, [, i, -, 1, ], ,, binBounds, [, i, ], ), ;]
[;, }, private, RealDistribution, k, (, double, x, ), {, final, int, binIndex, =, findBin, (, x, ), ;, return]
[., cumulativeProbability, (, binBounds, [, i, -, 1, ], ,, binBounds, [, i, ], ), ;, }, private, RealDistribution, k]
[,, binBounds, [, i, ], ), ;, }, private, RealDistribution, k, (, double, x, ), {, final, int, binIndex, =]
[[, i, -, 1, ], ,, binBounds, [, i, ], ), ;, }, private, RealDistribution, k, (, double, x, )]
[], ,, binBounds, [, i, ], ), ;, }, private, RealDistribution, k, (, double, x, ), {, final, int, binIndex]
[-, 1, ], ,, binBounds, [, i, ], ), ;, }, private, RealDistribution, k, (, double, x, ), {, final]
[], ,, binBounds, [, i, ], ), ;, }, private, RealDistribution, k, (, double, x, ), {, final, int, binIndex]
[), ;, }, private, RealDistribution, k, (, double, x, ), {, final, int, binIndex, =, findBin, (, x, ), ;]
[[, i, ], ), ;, }, private, RealDistribution, k, (, double, x, ), {, final, int, binIndex, =, findBin, (]
[], ), ;, }, private, RealDistribution, k, (, double, x, ), {, final, int, binIndex, =, findBin, (, x, )]
[;, return, getKernel, (, binStats, ., get, (, binIndex, ), ), ;, }, private, double, cumBinP, (, int, binIndex, )]
[), ;, return, getKernel, (, binStats, ., get, (, binIndex, ), ), ;, }, private, double, cumBinP, (, int, binIndex]
[;, }, private, double, cumBinP, (, int, binIndex, ), {, return, upperBounds, [, binIndex, ], ;, }, protected, RealDistribution, getKernel]
[), ;, }, private, double, cumBinP, (, int, binIndex, ), {, return, upperBounds, [, binIndex, ], ;, }, protected, RealDistribution]
[., get, (, binIndex, ), ), ;, }, private, double, cumBinP, (, int, binIndex, ), {, return, upperBounds, [, binIndex]
[), ), ;, }, private, double, cumBinP, (, int, binIndex, ), {, return, upperBounds, [, binIndex, ], ;, }, protected]
[;, }, protected, RealDistribution, getKernel, (, SummaryStatistics, bStats, ), {, return, new, NormalDistribution, (, randomData, ., getRandomGenerator, (, ), ,]
[[, binIndex, ], ;, }, protected, RealDistribution, getKernel, (, SummaryStatistics, bStats, ), {, return, new, NormalDistribution, (, randomData, ., getRandomGenerator]
[], ;, }, protected, RealDistribution, getKernel, (, SummaryStatistics, bStats, ), {, return, new, NormalDistribution, (, randomData, ., getRandomGenerator, (, )]
[;, }, }]
[,, bStats, ., getMean, (, ), ,, bStats, ., getStandardDeviation, (, ), ,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, }, }]
[., getRandomGenerator, (, ), ,, bStats, ., getMean, (, ), ,, bStats, ., getStandardDeviation, (, ), ,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY]
[,, bStats, ., getStandardDeviation, (, ), ,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, }, }]
[., getMean, (, ), ,, bStats, ., getStandardDeviation, (, ), ,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, }, }]
[,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, }, }]
[., getStandardDeviation, (, ), ,, NormalDistribution, ., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, }, }]
[), ;, }, }]
[., DEFAULT_INVERSE_ABSOLUTE_ACCURACY, ), ;, }, }]
