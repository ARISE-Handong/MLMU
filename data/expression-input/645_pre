[public, abstract, class, AbstractAnnotation, implements, Annotation, ,, Cloneable, ,, Serializable, {, private, transient, EventListenerList, listenerList, ;, private, boolean, notify, =]
[Cloneable, ,, Serializable, {, private, transient, EventListenerList, listenerList, ;, private, boolean, notify, =, true, ;, protected, AbstractAnnotation, (, ), {]
[Cloneable, ,, Serializable, {, private, transient, EventListenerList, listenerList, ;, private, boolean, notify, =, true, ;, protected, AbstractAnnotation, (, ), {]
[private, transient, EventListenerList, listenerList, ;, private, boolean, notify, =, true, ;, protected, AbstractAnnotation, (, ), {, this, ., listenerList, =]
[), {, this, ., listenerList, =, new, EventListenerList, (, ), ;, }, public, void, addChangeListener, (, AnnotationChangeListener, listener, ), {]
[), {, this, ., listenerList, =, new, EventListenerList, (, ), ;, }, public, void, addChangeListener, (, AnnotationChangeListener, listener, ), {]
[), {, this, ., listenerList, =, new, EventListenerList, (, ), ;, }, public, void, addChangeListener, (, AnnotationChangeListener, listener, ), {]
[new, EventListenerList, (, ), ;, }, public, void, addChangeListener, (, AnnotationChangeListener, listener, ), {, this, ., listenerList, ., add, (]
[;, }, public, void, addChangeListener, (, AnnotationChangeListener, listener, ), {, this, ., listenerList, ., add, (, AnnotationChangeListener, ., class, ,]
[listenerList, ., add, (, AnnotationChangeListener, ., class, ,, listener, ), ;, }, public, void, removeChangeListener, (, AnnotationChangeListener, listener, ), {]
[listenerList, ., add, (, AnnotationChangeListener, ., class, ,, listener, ), ;, }, public, void, removeChangeListener, (, AnnotationChangeListener, listener, ), {]
[listenerList, ., add, (, AnnotationChangeListener, ., class, ,, listener, ), ;, }, public, void, removeChangeListener, (, AnnotationChangeListener, listener, ), {]
[class, ,, listener, ), ;, }, public, void, removeChangeListener, (, AnnotationChangeListener, listener, ), {, this, ., listenerList, ., remove, (]
[;, }, public, void, removeChangeListener, (, AnnotationChangeListener, listener, ), {, this, ., listenerList, ., remove, (, AnnotationChangeListener, ., class, ,]
[(, AnnotationChangeListener, ., class, ,, listener, ), ;, }, public, boolean, hasListener, (, EventListener, listener, ), {, List, list, =]
[(, AnnotationChangeListener, ., class, ,, listener, ), ;, }, public, boolean, hasListener, (, EventListener, listener, ), {, List, list, =]
[,, listener, ), ;, }, public, boolean, hasListener, (, EventListener, listener, ), {, List, list, =, Arrays, ., asList, (]
[,, listener, ), ;, }, public, boolean, hasListener, (, EventListener, listener, ), {, List, list, =, Arrays, ., asList, (]
[,, listener, ), ;, }, public, boolean, hasListener, (, EventListener, listener, ), {, List, list, =, Arrays, ., asList, (]
[listener, ), {, List, list, =, Arrays, ., asList, (, this, ., listenerList, ., getListenerList, (, ), ), ;, return]
[listener, ), {, List, list, =, Arrays, ., asList, (, this, ., listenerList, ., getListenerList, (, ), ), ;, return]
[list, =, Arrays, ., asList, (, this, ., listenerList, ., getListenerList, (, ), ), ;, return, list, ., contains, (]
[), ), ;, return, list, ., contains, (, listener, ), ;, }, protected, void, fireAnnotationChanged, (, ), {, if, (]
[return, list, ., contains, (, listener, ), ;, }, protected, void, fireAnnotationChanged, (, ), {, if, (, notify, ), {]
[., contains, (, listener, ), ;, }, protected, void, fireAnnotationChanged, (, ), {, if, (, notify, ), {, notifyListeners, (]
[listener, ), ;, }, protected, void, fireAnnotationChanged, (, ), {, if, (, notify, ), {, notifyListeners, (, new, AnnotationChangeEvent, (]
[;, }, protected, void, fireAnnotationChanged, (, ), {, if, (, notify, ), {, notifyListeners, (, new, AnnotationChangeEvent, (, this, ,]
[,, this, ), ), ;, }, }, protected, void, notifyListeners, (, AnnotationChangeEvent, event, ), {, Object, [, ], listeners, =]
[,, this, ), ), ;, }, }, protected, void, notifyListeners, (, AnnotationChangeEvent, event, ), {, Object, [, ], listeners, =]
[,, this, ), ), ;, }, }, protected, void, notifyListeners, (, AnnotationChangeEvent, event, ), {, Object, [, ], listeners, =]
[), {, Object, [, ], listeners, =, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =]
[), {, Object, [, ], listeners, =, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =]
[), {, Object, [, ], listeners, =, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =]
[], listeners, =, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -]
[=, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;]
[=, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;]
[., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;, i, >=]
[., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;]
[(, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;, i, -=]
[int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (]
[int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (]
[int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (]
[=, listeners, ., length, -, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (, listeners, []
[length, -, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==]
[>=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class, ), {]
[>=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class, ), {]
[0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class, ), {, (]
[-=, 2, ), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class, ), {, (, (, AnnotationChangeListener, )]
[-=, 2, ), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class, ), {, (, (, AnnotationChangeListener, )]
[), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class, ), {, (, (, AnnotationChangeListener, ), listeners, []
[), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class, ), {, (, (, AnnotationChangeListener, ), listeners, []
[if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class, ), {, (, (, AnnotationChangeListener, ), listeners, [, i, +]
[==, AnnotationChangeListener, ., class, ), {, (, (, AnnotationChangeListener, ), listeners, [, i, +, 1, ], ), ., annotationChanged, (]
[+, 1, ], ), ., annotationChanged, (, event, ), ;, }, }, }, public, boolean, getNotify, (, ), {, return]
[+, 1, ], ), ., annotationChanged, (, event, ), ;, }, }, }, public, boolean, getNotify, (, ), {, return]
[public, boolean, getNotify, (, ), {, return, this, ., notify, ;, }, public, void, setNotify, (, boolean, flag, ), {]
[public, boolean, getNotify, (, ), {, return, this, ., notify, ;, }, public, void, setNotify, (, boolean, flag, ), {]
[), {, return, this, ., notify, ;, }, public, void, setNotify, (, boolean, flag, ), {, this, ., notify, =]
[., notify, ;, }, public, void, setNotify, (, boolean, flag, ), {, this, ., notify, =, flag, ;, if, (]
[}, public, void, setNotify, (, boolean, flag, ), {, this, ., notify, =, flag, ;, if, (, notify, ), {]
[notify, ), {, fireAnnotationChanged, (, ), ;, }, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractAnnotation, clone, =]
[fireAnnotationChanged, (, ), ;, }, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractAnnotation, clone, =, (, AbstractAnnotation, )]
[fireAnnotationChanged, (, ), ;, }, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractAnnotation, clone, =, (, AbstractAnnotation, )]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractAnnotation, clone, =, (, AbstractAnnotation, ), super, ., clone, (, ), ;]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractAnnotation, clone, =, (, AbstractAnnotation, ), super, ., clone, (, ), ;]
[), throws, CloneNotSupportedException, {, AbstractAnnotation, clone, =, (, AbstractAnnotation, ), super, ., clone, (, ), ;, clone, ., listenerList, =]
[=, (, AbstractAnnotation, ), super, ., clone, (, ), ;, clone, ., listenerList, =, new, EventListenerList, (, ), ;, return]
[=, new, EventListenerList, (, ), ;, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[=, new, EventListenerList, (, ), ;, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[{, stream, ., defaultWriteObject, (, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[{, stream, ., defaultWriteObject, (, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., listenerList, =]
