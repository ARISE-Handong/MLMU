[., data, ., event, ., DatasetChangeListener, ;, public, class, XYDatasetTableModel, extends, AbstractTableModel, implements, TableModel, ,, DatasetChangeListener, {, TableXYDataset, model, =]
[XYDatasetTableModel, (, ), {, super, (, ), ;, }, public, XYDatasetTableModel, (, TableXYDataset, dataset, ), {, this, (, ), ;]
[XYDatasetTableModel, (, ), {, super, (, ), ;, }, public, XYDatasetTableModel, (, TableXYDataset, dataset, ), {, this, (, ), ;]
[super, (, ), ;, }, public, XYDatasetTableModel, (, TableXYDataset, dataset, ), {, this, (, ), ;, this, ., model, =]
[), ;, }, public, XYDatasetTableModel, (, TableXYDataset, dataset, ), {, this, (, ), ;, this, ., model, =, dataset, ;]
[), ;, }, public, XYDatasetTableModel, (, TableXYDataset, dataset, ), {, this, (, ), ;, this, ., model, =, dataset, ;]
[), ;, }, public, XYDatasetTableModel, (, TableXYDataset, dataset, ), {, this, (, ), ;, this, ., model, =, dataset, ;]
[TableXYDataset, dataset, ), {, this, (, ), ;, this, ., model, =, dataset, ;, this, ., model, ., addChangeListener, (]
[dataset, ;, this, ., model, ., addChangeListener, (, this, ), ;, }, public, void, setModel, (, TableXYDataset, dataset, ), {]
[dataset, ;, this, ., model, ., addChangeListener, (, this, ), ;, }, public, void, setModel, (, TableXYDataset, dataset, ), {]
[model, ., addChangeListener, (, this, ), ;, }, public, void, setModel, (, TableXYDataset, dataset, ), {, this, ., model, =]
[addChangeListener, (, this, ), ;, }, public, void, setModel, (, TableXYDataset, dataset, ), {, this, ., model, =, dataset, ;]
[addChangeListener, (, this, ), ;, }, public, void, setModel, (, TableXYDataset, dataset, ), {, this, ., model, =, dataset, ;]
[addChangeListener, (, this, ), ;, }, public, void, setModel, (, TableXYDataset, dataset, ), {, this, ., model, =, dataset, ;]
[public, void, setModel, (, TableXYDataset, dataset, ), {, this, ., model, =, dataset, ;, this, ., model, ., addChangeListener, (]
[(, TableXYDataset, dataset, ), {, this, ., model, =, dataset, ;, this, ., model, ., addChangeListener, (, this, ), ;]
[model, ., addChangeListener, (, this, ), ;, fireTableDataChanged, (, ), ;, }, public, int, getRowCount, (, ), {, if, (]
[model, ., addChangeListener, (, this, ), ;, fireTableDataChanged, (, ), ;, }, public, int, getRowCount, (, ), {, if, (]
[model, ., addChangeListener, (, this, ), ;, fireTableDataChanged, (, ), ;, }, public, int, getRowCount, (, ), {, if, (]
[this, ), ;, fireTableDataChanged, (, ), ;, }, public, int, getRowCount, (, ), {, if, (, this, ., model, ==]
[(, ), ;, }, public, int, getRowCount, (, ), {, if, (, this, ., model, ==, null, ), {, return]
[public, int, getRowCount, (, ), {, if, (, this, ., model, ==, null, ), {, return, 0, ;, }, return]
[public, int, getRowCount, (, ), {, if, (, this, ., model, ==, null, ), {, return, 0, ;, }, return]
[public, int, getRowCount, (, ), {, if, (, this, ., model, ==, null, ), {, return, 0, ;, }, return]
[;, }, return, this, ., model, ., getItemCount, (, ), ;, }, public, int, getColumnCount, (, ), {, if, (]
[;, }, return, this, ., model, ., getItemCount, (, ), ;, }, public, int, getColumnCount, (, ), {, if, (]
[;, }, return, this, ., model, ., getItemCount, (, ), ;, }, public, int, getColumnCount, (, ), {, if, (]
[., model, ., getItemCount, (, ), ;, }, public, int, getColumnCount, (, ), {, if, (, this, ., model, ==]
[(, ), ;, }, public, int, getColumnCount, (, ), {, if, (, this, ., model, ==, null, ), {, return]
[public, int, getColumnCount, (, ), {, if, (, this, ., model, ==, null, ), {, return, 0, ;, }, return]
[public, int, getColumnCount, (, ), {, if, (, this, ., model, ==, null, ), {, return, 0, ;, }, return]
[public, int, getColumnCount, (, ), {, if, (, this, ., model, ==, null, ), {, return, 0, ;, }, return]
[public, int, getColumnCount, (, ), {, if, (, this, ., model, ==, null, ), {, return, 0, ;, }, return]
[this, ., model, ==, null, ), {, return, 0, ;, }, return, this, ., model, ., getSeriesCount, (, ), +]
[., model, ., getSeriesCount, (, ), +, 1, ;, }, public, String, getColumnName, (, int, column, ), {, if, (]
[., model, ., getSeriesCount, (, ), +, 1, ;, }, public, String, getColumnName, (, int, column, ), {, if, (]
[., model, ., getSeriesCount, (, ), +, 1, ;, }, public, String, getColumnName, (, int, column, ), {, if, (]
[(, ), +, 1, ;, }, public, String, getColumnName, (, int, column, ), {, if, (, this, ., model, ==]
[;, }, public, String, getColumnName, (, int, column, ), {, if, (, this, ., model, ==, null, ), {, return]
[;, }, public, String, getColumnName, (, int, column, ), {, if, (, this, ., model, ==, null, ), {, return]
[getColumnName, (, int, column, ), {, if, (, this, ., model, ==, null, ), {, return, super, ., getColumnName, (]
[if, (, this, ., model, ==, null, ), {, return, super, ., getColumnName, (, column, ), ;, }, if, (]
[if, (, this, ., model, ==, null, ), {, return, super, ., getColumnName, (, column, ), ;, }, if, (]
[this, ., model, ==, null, ), {, return, super, ., getColumnName, (, column, ), ;, }, if, (, column, <]
[null, ), {, return, super, ., getColumnName, (, column, ), ;, }, if, (, column, <, 1, ), {, return]
[getColumnName, (, column, ), ;, }, if, (, column, <, 1, ), {, return, "X Value", ;, }, else, {, return]
[getColumnName, (, column, ), ;, }, if, (, column, <, 1, ), {, return, "X Value", ;, }, else, {, return]
[getColumnName, (, column, ), ;, }, if, (, column, <, 1, ), {, return, "X Value", ;, }, else, {, return]
[getColumnName, (, column, ), ;, }, if, (, column, <, 1, ), {, return, "X Value", ;, }, else, {, return]
[if, (, column, <, 1, ), {, return, "X Value", ;, }, else, {, return, this, ., model, ., getSeriesKey, (]
[if, (, column, <, 1, ), {, return, "X Value", ;, }, else, {, return, this, ., model, ., getSeriesKey, (]
[column, <, 1, ), {, return, "X Value", ;, }, else, {, return, this, ., model, ., getSeriesKey, (, column, -]
[., toString, (, ), ;, }, }, public, Object, getValueAt, (, int, row, ,, int, column, ), {, if, (]
[., toString, (, ), ;, }, }, public, Object, getValueAt, (, int, row, ,, int, column, ), {, if, (]
[., toString, (, ), ;, }, }, public, Object, getValueAt, (, int, row, ,, int, column, ), {, if, (]
[;, }, }, public, Object, getValueAt, (, int, row, ,, int, column, ), {, if, (, this, ., model, ==]
[Object, getValueAt, (, int, row, ,, int, column, ), {, if, (, this, ., model, ==, null, ), {, return]
[,, int, column, ), {, if, (, this, ., model, ==, null, ), {, return, null, ;, }, if, (]
[,, int, column, ), {, if, (, this, ., model, ==, null, ), {, return, null, ;, }, if, (]
[column, ), {, if, (, this, ., model, ==, null, ), {, return, null, ;, }, if, (, column, <]
[(, this, ., model, ==, null, ), {, return, null, ;, }, if, (, column, <, 1, ), {, return]
[(, this, ., model, ==, null, ), {, return, null, ;, }, if, (, column, <, 1, ), {, return]
[(, this, ., model, ==, null, ), {, return, null, ;, }, if, (, column, <, 1, ), {, return]
[), {, return, null, ;, }, if, (, column, <, 1, ), {, return, this, ., model, ., getX, (]
[return, null, ;, }, if, (, column, <, 1, ), {, return, this, ., model, ., getX, (, 0, ,]
[<, 1, ), {, return, this, ., model, ., getX, (, 0, ,, row, ), ;, }, else, {, return]
[<, 1, ), {, return, this, ., model, ., getX, (, 0, ,, row, ), ;, }, else, {, return]
[<, 1, ), {, return, this, ., model, ., getX, (, 0, ,, row, ), ;, }, else, {, return]
[., model, ., getX, (, 0, ,, row, ), ;, }, else, {, return, this, ., model, ., getY, (]
[., model, ., getX, (, 0, ,, row, ), ;, }, else, {, return, this, ., model, ., getY, (]
[., getX, (, 0, ,, row, ), ;, }, else, {, return, this, ., model, ., getY, (, column, -]
[(, 0, ,, row, ), ;, }, else, {, return, this, ., model, ., getY, (, column, -, 1, ,]
[., getY, (, column, -, 1, ,, row, ), ;, }, }, public, void, datasetChanged, (, DatasetChangeEvent, event, ), {]
[event, ), {, fireTableDataChanged, (, ), ;, }, public, boolean, isCellEditable, (, int, row, ,, int, column, ), {, return]
[return, false, ;, }, public, void, setValueAt, (, Object, value, ,, int, row, ,, int, column, ), {, if, (]
[;, }, public, void, setValueAt, (, Object, value, ,, int, row, ,, int, column, ), {, if, (, isCellEditable, (]
[public, void, setValueAt, (, Object, value, ,, int, row, ,, int, column, ), {, if, (, isCellEditable, (, row, ,]
