[import, com, ., google, ., javascript, ., rhino, ., Node, ;, class, InlineCostEstimator, {, private, static, final, String, ESTIMATED_IDENTIFIER, =]
[rhino, ., Node, ;, class, InlineCostEstimator, {, private, static, final, String, ESTIMATED_IDENTIFIER, =, "ab", ;, static, final, int, ESTIMATED_IDENTIFIER_COST, =]
[rhino, ., Node, ;, class, InlineCostEstimator, {, private, static, final, String, ESTIMATED_IDENTIFIER, =, "ab", ;, static, final, int, ESTIMATED_IDENTIFIER_COST, =]
[., length, (, ), ;, private, InlineCostEstimator, (, ), {, }, static, int, getCost, (, Node, root, ), {, return]
[(, ), ;, private, InlineCostEstimator, (, ), {, }, static, int, getCost, (, Node, root, ), {, return, getCost, (]
[;, private, InlineCostEstimator, (, ), {, }, static, int, getCost, (, Node, root, ), {, return, getCost, (, root, ,]
[;, private, InlineCostEstimator, (, ), {, }, static, int, getCost, (, Node, root, ), {, return, getCost, (, root, ,]
[Integer, ., MAX_VALUE, ), ;, }, static, int, getCost, (, Node, root, ,, int, costThreshhold, ), {, CompiledSizeEstimator, estimator, =]
[), ;, }, static, int, getCost, (, Node, root, ,, int, costThreshhold, ), {, CompiledSizeEstimator, estimator, =, new, CompiledSizeEstimator, (]
[static, int, getCost, (, Node, root, ,, int, costThreshhold, ), {, CompiledSizeEstimator, estimator, =, new, CompiledSizeEstimator, (, costThreshhold, ), ;]
[static, int, getCost, (, Node, root, ,, int, costThreshhold, ), {, CompiledSizeEstimator, estimator, =, new, CompiledSizeEstimator, (, costThreshhold, ), ;]
[Node, root, ,, int, costThreshhold, ), {, CompiledSizeEstimator, estimator, =, new, CompiledSizeEstimator, (, costThreshhold, ), ;, estimator, ., add, (]
[costThreshhold, ), {, CompiledSizeEstimator, estimator, =, new, CompiledSizeEstimator, (, costThreshhold, ), ;, estimator, ., add, (, root, ), ;, return]
[costThreshhold, ), {, CompiledSizeEstimator, estimator, =, new, CompiledSizeEstimator, (, costThreshhold, ), ;, estimator, ., add, (, root, ), ;, return]
[getCost, (, ), ;, }, private, static, class, CompiledSizeEstimator, extends, CodeConsumer, {, private, int, maxCost, ;, private, int, cost, =]
[static, class, CompiledSizeEstimator, extends, CodeConsumer, {, private, int, maxCost, ;, private, int, cost, =, 0, ;, private, char, last, =]
[private, int, maxCost, ;, private, int, cost, =, 0, ;, private, char, last, =, '\0', ;, private, boolean, continueProcessing, =]
[0, ;, private, char, last, =, '\0', ;, private, boolean, continueProcessing, =, true, ;, CompiledSizeEstimator, (, int, costThreshhold, ), {]
[0, ;, private, char, last, =, '\0', ;, private, boolean, continueProcessing, =, true, ;, CompiledSizeEstimator, (, int, costThreshhold, ), {]
[last, =, '\0', ;, private, boolean, continueProcessing, =, true, ;, CompiledSizeEstimator, (, int, costThreshhold, ), {, this, ., maxCost, =]
[costThreshhold, ), {, this, ., maxCost, =, costThreshhold, ;, }, void, add, (, Node, root, ), {, CodeGenerator, cg, =]
[costThreshhold, ), {, this, ., maxCost, =, costThreshhold, ;, }, void, add, (, Node, root, ), {, CodeGenerator, cg, =]
[., maxCost, =, costThreshhold, ;, }, void, add, (, Node, root, ), {, CodeGenerator, cg, =, CodeGenerator, ., forCostEstimation, (]
[costThreshhold, ;, }, void, add, (, Node, root, ), {, CodeGenerator, cg, =, CodeGenerator, ., forCostEstimation, (, this, ), ;]
[costThreshhold, ;, }, void, add, (, Node, root, ), {, CodeGenerator, cg, =, CodeGenerator, ., forCostEstimation, (, this, ), ;]
[add, (, Node, root, ), {, CodeGenerator, cg, =, CodeGenerator, ., forCostEstimation, (, this, ), ;, cg, ., add, (]
[., forCostEstimation, (, this, ), ;, cg, ., add, (, root, ), ;, }, int, getCost, (, ), {, return]
[), ;, }, int, getCost, (, ), {, return, cost, ;, }, @, Override, boolean, continueProcessing, (, ), {, return]
[}, @, Override, boolean, continueProcessing, (, ), {, return, continueProcessing, ;, }, @, Override, char, getLastChar, (, ), {, return]
[@, Override, char, getLastChar, (, ), {, return, last, ;, }, @, Override, void, append, (, String, str, ), {]
[char, getLastChar, (, ), {, return, last, ;, }, @, Override, void, append, (, String, str, ), {, last, =]
[char, getLastChar, (, ), {, return, last, ;, }, @, Override, void, append, (, String, str, ), {, last, =]
[{, return, last, ;, }, @, Override, void, append, (, String, str, ), {, last, =, str, ., charAt, (]
[{, return, last, ;, }, @, Override, void, append, (, String, str, ), {, last, =, str, ., charAt, (]
[{, return, last, ;, }, @, Override, void, append, (, String, str, ), {, last, =, str, ., charAt, (]
[Override, void, append, (, String, str, ), {, last, =, str, ., charAt, (, str, ., length, (, ), -]
[(, String, str, ), {, last, =, str, ., charAt, (, str, ., length, (, ), -, 1, ), ;]
[str, ), {, last, =, str, ., charAt, (, str, ., length, (, ), -, 1, ), ;, cost, +=]
[str, ), {, last, =, str, ., charAt, (, str, ., length, (, ), -, 1, ), ;, cost, +=]
[(, str, ., length, (, ), -, 1, ), ;, cost, +=, str, ., length, (, ), ;, if, (]
[(, str, ., length, (, ), -, 1, ), ;, cost, +=, str, ., length, (, ), ;, if, (]
[., length, (, ), -, 1, ), ;, cost, +=, str, ., length, (, ), ;, if, (, maxCost, <=]
[), -, 1, ), ;, cost, +=, str, ., length, (, ), ;, if, (, maxCost, <=, cost, ), {]
[1, ), ;, cost, +=, str, ., length, (, ), ;, if, (, maxCost, <=, cost, ), {, continueProcessing, =]
[maxCost, <=, cost, ), {, continueProcessing, =, false, ;, }, }, @, Override, void, addIdentifier, (, String, identifier, ), {]
[cost, ), {, continueProcessing, =, false, ;, }, }, @, Override, void, addIdentifier, (, String, identifier, ), {, add, (]
[(, String, identifier, ), {, add, (, ESTIMATED_IDENTIFIER, ), ;, }, @, Override, void, addConstant, (, String, newcode, ), {]
[identifier, ), {, add, (, ESTIMATED_IDENTIFIER, ), ;, }, @, Override, void, addConstant, (, String, newcode, ), {, add, (]
