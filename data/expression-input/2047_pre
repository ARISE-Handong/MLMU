[CompilerPass, {, private, final, AbstractCompiler, compiler, ;, static, class, PropertyInfo, {, PropertyInfo, (, JSType, type, ,, Node, value, ), {]
[CompilerPass, {, private, final, AbstractCompiler, compiler, ;, static, class, PropertyInfo, {, PropertyInfo, (, JSType, type, ,, Node, value, ), {]
[AbstractCompiler, compiler, ;, static, class, PropertyInfo, {, PropertyInfo, (, JSType, type, ,, Node, value, ), {, this, ., type, =]
[;, static, class, PropertyInfo, {, PropertyInfo, (, JSType, type, ,, Node, value, ), {, this, ., type, =, type, ;]
[;, static, class, PropertyInfo, {, PropertyInfo, (, JSType, type, ,, Node, value, ), {, this, ., type, =, type, ;]
[{, PropertyInfo, (, JSType, type, ,, Node, value, ), {, this, ., type, =, type, ;, this, ., value, =]
[value, =, value, ;, }, final, JSType, type, ;, final, Node, value, ;, }, private, static, final, PropertyInfo, INVALIDATED, =]
[;, }, final, JSType, type, ;, final, Node, value, ;, }, private, static, final, PropertyInfo, INVALIDATED, =, new, PropertyInfo, (]
[final, JSType, type, ;, final, Node, value, ;, }, private, static, final, PropertyInfo, INVALIDATED, =, new, PropertyInfo, (, null, ,]
[INVALIDATED, =, new, PropertyInfo, (, null, ,, null, ), ;, private, final, Map, <, String, ,, PropertyInfo, >, props, =]
[INVALIDATED, =, new, PropertyInfo, (, null, ,, null, ), ;, private, final, Map, <, String, ,, PropertyInfo, >, props, =]
[=, Maps, ., newHashMap, (, ), ;, private, Set, <, JSType, >, invalidatingTypes, ;, InlineProperties, (, AbstractCompiler, compiler, ), {]
[=, Maps, ., newHashMap, (, ), ;, private, Set, <, JSType, >, invalidatingTypes, ;, InlineProperties, (, AbstractCompiler, compiler, ), {]
[(, ), ;, private, Set, <, JSType, >, invalidatingTypes, ;, InlineProperties, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
[;, private, Set, <, JSType, >, invalidatingTypes, ;, InlineProperties, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;]
[this, ., compiler, =, compiler, ;, buildInvalidatingTypeSet, (, ), ;, }, private, void, buildInvalidatingTypeSet, (, ), {, JSTypeRegistry, registry, =]
[this, ., compiler, =, compiler, ;, buildInvalidatingTypeSet, (, ), ;, }, private, void, buildInvalidatingTypeSet, (, ), {, JSTypeRegistry, registry, =]
[buildInvalidatingTypeSet, (, ), ;, }, private, void, buildInvalidatingTypeSet, (, ), {, JSTypeRegistry, registry, =, compiler, ., getTypeRegistry, (, ), ;]
[), ;, }, private, void, buildInvalidatingTypeSet, (, ), {, JSTypeRegistry, registry, =, compiler, ., getTypeRegistry, (, ), ;, invalidatingTypes, =]
[), ;, }, private, void, buildInvalidatingTypeSet, (, ), {, JSTypeRegistry, registry, =, compiler, ., getTypeRegistry, (, ), ;, invalidatingTypes, =]
[void, buildInvalidatingTypeSet, (, ), {, JSTypeRegistry, registry, =, compiler, ., getTypeRegistry, (, ), ;, invalidatingTypes, =, Sets, ., newHashSet, (]
[void, buildInvalidatingTypeSet, (, ), {, JSTypeRegistry, registry, =, compiler, ., getTypeRegistry, (, ), ;, invalidatingTypes, =, Sets, ., newHashSet, (]
[{, JSTypeRegistry, registry, =, compiler, ., getTypeRegistry, (, ), ;, invalidatingTypes, =, Sets, ., newHashSet, (, registry, ., getNativeType, (]
[{, JSTypeRegistry, registry, =, compiler, ., getTypeRegistry, (, ), ;, invalidatingTypes, =, Sets, ., newHashSet, (, registry, ., getNativeType, (]
[., getTypeRegistry, (, ), ;, invalidatingTypes, =, Sets, ., newHashSet, (, registry, ., getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,]
[., getTypeRegistry, (, ), ;, invalidatingTypes, =, Sets, ., newHashSet, (, registry, ., getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,]
[;, invalidatingTypes, =, Sets, ., newHashSet, (, registry, ., getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,, registry, ., getNativeType, (]
[;, invalidatingTypes, =, Sets, ., newHashSet, (, registry, ., getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,, registry, ., getNativeType, (]
[newHashSet, (, registry, ., getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,]
[newHashSet, (, registry, ., getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,]
[getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,, registry, ., getNativeType, (]
[getNativeType, (, JSTypeNative, ., ALL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,, registry, ., getNativeType, (]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,]
[getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,, registry, ., getNativeType, (]
[getNativeType, (, JSTypeNative, ., NO_OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,, registry, ., getNativeType, (]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,]
[getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, registry, ., getNativeType, (]
[getNativeType, (, JSTypeNative, ., NO_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, registry, ., getNativeType, (]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,]
[getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, registry, ., getNativeType, (]
[getNativeType, (, JSTypeNative, ., NULL_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, registry, ., getNativeType, (]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,]
[getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (]
[getNativeType, (, JSTypeNative, ., VOID_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,]
[getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, registry, ., getNativeType, (]
[getNativeType, (, JSTypeNative, ., FUNCTION_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, registry, ., getNativeType, (]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,]
[getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,, registry, ., getNativeType, (]
[getNativeType, (, JSTypeNative, ., FUNCTION_INSTANCE_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,, registry, ., getNativeType, (]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,]
[getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,, registry, ., getNativeType, (]
[getNativeType, (, JSTypeNative, ., FUNCTION_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,, registry, ., getNativeType, (]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,]
[getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,, registry, ., getNativeType, (]
[getNativeType, (, JSTypeNative, ., GLOBAL_THIS, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,, registry, ., getNativeType, (]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,]
[getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,, registry, ., getNativeType, (]
[getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,, registry, ., getNativeType, (]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,]
[getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (]
[getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,]
[), ,, registry, ., getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,]
[getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,, registry, ., getNativeType, (]
[getNativeType, (, JSTypeNative, ., OBJECT_FUNCTION_TYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,, registry, ., getNativeType, (]
[JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ), ;, for, (, TypeMismatch, mis, :]
[JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ), ;, for, (, TypeMismatch, mis, :]
[JSTypeNative, ., TOP_LEVEL_PROTOTYPE, ), ,, registry, ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ), ;, for, (, TypeMismatch, mis, :]
[UNKNOWN_TYPE, ), ), ;, for, (, TypeMismatch, mis, :, compiler, ., getTypeValidator, (, ), ., getMismatches, (, ), ), {]
[), ;, for, (, TypeMismatch, mis, :, compiler, ., getTypeValidator, (, ), ., getMismatches, (, ), ), {, addInvalidatingType, (]
[), ;, for, (, TypeMismatch, mis, :, compiler, ., getTypeValidator, (, ), ., getMismatches, (, ), ), {, addInvalidatingType, (]
[mis, :, compiler, ., getTypeValidator, (, ), ., getMismatches, (, ), ), {, addInvalidatingType, (, mis, ., typeA, ), ;]
[compiler, ., getTypeValidator, (, ), ., getMismatches, (, ), ), {, addInvalidatingType, (, mis, ., typeA, ), ;, addInvalidatingType, (]
[compiler, ., getTypeValidator, (, ), ., getMismatches, (, ), ), {, addInvalidatingType, (, mis, ., typeA, ), ;, addInvalidatingType, (]
[typeA, ), ;, addInvalidatingType, (, mis, ., typeB, ), ;, }, }, private, void, addInvalidatingType, (, JSType, type, ), {]
[;, addInvalidatingType, (, mis, ., typeB, ), ;, }, }, private, void, addInvalidatingType, (, JSType, type, ), {, type, =]
[;, addInvalidatingType, (, mis, ., typeB, ), ;, }, }, private, void, addInvalidatingType, (, JSType, type, ), {, type, =]
[}, }, private, void, addInvalidatingType, (, JSType, type, ), {, type, =, type, ., restrictByNotNullOrUndefined, (, ), ;, if, (]
[}, }, private, void, addInvalidatingType, (, JSType, type, ), {, type, =, type, ., restrictByNotNullOrUndefined, (, ), ;, if, (]
[type, ., restrictByNotNullOrUndefined, (, ), ;, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alt, :]
[type, ., restrictByNotNullOrUndefined, (, ), ;, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alt, :]
[type, ., restrictByNotNullOrUndefined, (, ), ;, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alt, :]
[(, ), ), {, for, (, JSType, alt, :, type, ., toMaybeUnionType, (, ), ., getAlternates, (, ), ), {]
[), {, for, (, JSType, alt, :, type, ., toMaybeUnionType, (, ), ., getAlternates, (, ), ), {, addInvalidatingType, (]
[alt, :, type, ., toMaybeUnionType, (, ), ., getAlternates, (, ), ), {, addInvalidatingType, (, alt, ), ;, }, }]
[alt, :, type, ., toMaybeUnionType, (, ), ., getAlternates, (, ), ), {, addInvalidatingType, (, alt, ), ;, }, }]
[toMaybeUnionType, (, ), ., getAlternates, (, ), ), {, addInvalidatingType, (, alt, ), ;, }, }, invalidatingTypes, ., add, (]
[), ), {, addInvalidatingType, (, alt, ), ;, }, }, invalidatingTypes, ., add, (, type, ), ;, ObjectType, objType, =]
[), ), {, addInvalidatingType, (, alt, ), ;, }, }, invalidatingTypes, ., add, (, type, ), ;, ObjectType, objType, =]
[(, alt, ), ;, }, }, invalidatingTypes, ., add, (, type, ), ;, ObjectType, objType, =, ObjectType, ., cast, (]
[}, invalidatingTypes, ., add, (, type, ), ;, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (]
[}, invalidatingTypes, ., add, (, type, ), ;, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (]
[}, invalidatingTypes, ., add, (, type, ), ;, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (]
[., add, (, type, ), ;, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (, objType, !=]
[(, type, ), ;, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (, objType, !=, null, &&]
[(, type, ), ;, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, if, (, objType, !=, null, &&]
[ObjectType, ., cast, (, type, ), ;, if, (, objType, !=, null, &&, objType, ., isInstanceType, (, ), ), {]
[ObjectType, ., cast, (, type, ), ;, if, (, objType, !=, null, &&, objType, ., isInstanceType, (, ), ), {]
[type, ), ;, if, (, objType, !=, null, &&, objType, ., isInstanceType, (, ), ), {, invalidatingTypes, ., add, (]
[type, ), ;, if, (, objType, !=, null, &&, objType, ., isInstanceType, (, ), ), {, invalidatingTypes, ., add, (]
[(, objType, ., getImplicitPrototype, (, ), ), ;, }, }, private, boolean, isInvalidatingType, (, JSType, type, ), {, if, (]
[(, objType, ., getImplicitPrototype, (, ), ), ;, }, }, private, boolean, isInvalidatingType, (, JSType, type, ), {, if, (]
[;, }, }, private, boolean, isInvalidatingType, (, JSType, type, ), {, if, (, type, ., isUnionType, (, ), ), {]
[}, private, boolean, isInvalidatingType, (, JSType, type, ), {, if, (, type, ., isUnionType, (, ), ), {, type, =]
[}, private, boolean, isInvalidatingType, (, JSType, type, ), {, if, (, type, ., isUnionType, (, ), ), {, type, =]
[{, if, (, type, ., isUnionType, (, ), ), {, type, =, type, ., restrictByNotNullOrUndefined, (, ), ;, if, (]
[{, if, (, type, ., isUnionType, (, ), ), {, type, =, type, ., restrictByNotNullOrUndefined, (, ), ;, if, (]
[type, ., restrictByNotNullOrUndefined, (, ), ;, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alt, :]
[type, ., restrictByNotNullOrUndefined, (, ), ;, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alt, :]
[type, ., restrictByNotNullOrUndefined, (, ), ;, if, (, type, ., isUnionType, (, ), ), {, for, (, JSType, alt, :]
[), {, for, (, JSType, alt, :, type, ., toMaybeUnionType, (, ), ., getAlternates, (, ), ), {, if, (]
[for, (, JSType, alt, :, type, ., toMaybeUnionType, (, ), ., getAlternates, (, ), ), {, if, (, isInvalidatingType, (]
[type, ., toMaybeUnionType, (, ), ., getAlternates, (, ), ), {, if, (, isInvalidatingType, (, alt, ), ), {, return]
[., getAlternates, (, ), ), {, if, (, isInvalidatingType, (, alt, ), ), {, return, true, ;, }, }, return]
[(, isInvalidatingType, (, alt, ), ), {, return, true, ;, }, }, return, false, ;, }, }, ObjectType, objType, =]
[(, isInvalidatingType, (, alt, ), ), {, return, true, ;, }, }, return, false, ;, }, }, ObjectType, objType, =]
[), ), {, return, true, ;, }, }, return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (]
[true, ;, }, }, return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return]
[true, ;, }, }, return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return]
[true, ;, }, }, return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return]
[true, ;, }, }, return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return]
[true, ;, }, }, return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return]
[true, ;, }, }, return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return]
[true, ;, }, }, return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return]
[true, ;, }, }, return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return]
[}, }, return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return, objType, ==]
[return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return, objType, ==, null, ||]
[return, false, ;, }, }, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return, objType, ==, null, ||]
[}, ObjectType, objType, =, ObjectType, ., cast, (, type, ), ;, return, objType, ==, null, ||, invalidatingTypes, ., contains, (]
[=, ObjectType, ., cast, (, type, ), ;, return, objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||]
[ObjectType, ., cast, (, type, ), ;, return, objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||, !]
[ObjectType, ., cast, (, type, ), ;, return, objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||, !]
[;, return, objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, ), ||]
[;, return, objType, ==, null, ||, invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, ), ||]
[invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, ), ||]
[invalidatingTypes, ., contains, (, objType, ), ||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, ), ||]
[||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||]
[||, !, objType, ., hasReferenceName, (, ), ||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||]
[), ||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||, objType, ., isEnumType, (, ), ||]
[), ||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||, objType, ., isEnumType, (, ), ||]
[), ||, objType, ., isUnknownType, (, ), ||, objType, ., isEmptyType, (, ), ||, objType, ., isEnumType, (, ), ||]
[), ||, objType, ., isEmptyType, (, ), ||, objType, ., isEnumType, (, ), ||, objType, ., autoboxesTo, (, ), !=]
[objType, ., autoboxesTo, (, ), !=, null, ;, }, private, JSType, getJSType, (, Node, n, ), {, JSType, jsType, =]
[objType, ., autoboxesTo, (, ), !=, null, ;, }, private, JSType, getJSType, (, Node, n, ), {, JSType, jsType, =]
[}, private, JSType, getJSType, (, Node, n, ), {, JSType, jsType, =, n, ., getJSType, (, ), ;, if, (]
[}, private, JSType, getJSType, (, Node, n, ), {, JSType, jsType, =, n, ., getJSType, (, ), ;, if, (]
[JSType, getJSType, (, Node, n, ), {, JSType, jsType, =, n, ., getJSType, (, ), ;, if, (, jsType, ==]
[n, ), {, JSType, jsType, =, n, ., getJSType, (, ), ;, if, (, jsType, ==, null, ), {, return]
[n, ), {, JSType, jsType, =, n, ., getJSType, (, ), ;, if, (, jsType, ==, null, ), {, return]
[n, ), {, JSType, jsType, =, n, ., getJSType, (, ), ;, if, (, jsType, ==, null, ), {, return]
[getJSType, (, ), ;, if, (, jsType, ==, null, ), {, return, compiler, ., getTypeRegistry, (, ), ., getNativeType, (]
[getJSType, (, ), ;, if, (, jsType, ==, null, ), {, return, compiler, ., getTypeRegistry, (, ), ., getNativeType, (]
[), {, return, compiler, ., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., UNKNOWN_TYPE, ), ;, }, else, {, return]
[else, {, return, jsType, ;, }, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[else, {, return, jsType, ;, }, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[;, }, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverseRoots, (]
[}, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverseRoots, (, compiler, ,]
[process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverseRoots, (, compiler, ,, new, GatherCandidates, (, ), ,]
[Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverseRoots, (, compiler, ,, new, GatherCandidates, (, ), ,, externs, ,]
[Node, root, ), {, NodeTraversal, ., traverseRoots, (, compiler, ,, new, GatherCandidates, (, ), ,, externs, ,, root, ), ;]
[Node, root, ), {, NodeTraversal, ., traverseRoots, (, compiler, ,, new, GatherCandidates, (, ), ,, externs, ,, root, ), ;]
[NodeTraversal, ., traverseRoots, (, compiler, ,, new, GatherCandidates, (, ), ,, externs, ,, root, ), ;, NodeTraversal, ., traverseRoots, (]
[traverseRoots, (, compiler, ,, new, GatherCandidates, (, ), ,, externs, ,, root, ), ;, NodeTraversal, ., traverseRoots, (, compiler, ,]
[GatherCandidates, (, ), ,, externs, ,, root, ), ;, NodeTraversal, ., traverseRoots, (, compiler, ,, new, ReplaceCandidates, (, ), ,]
[), ,, externs, ,, root, ), ;, NodeTraversal, ., traverseRoots, (, compiler, ,, new, ReplaceCandidates, (, ), ,, externs, ,]
[{, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, boolean, invalidatingPropRef, =]
[visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, boolean, invalidatingPropRef, =, false, ;, String, propName, =]
[,, Node, n, ,, Node, parent, ), {, boolean, invalidatingPropRef, =, false, ;, String, propName, =, null, ;, if, (]
[,, Node, n, ,, Node, parent, ), {, boolean, invalidatingPropRef, =, false, ;, String, propName, =, null, ;, if, (]
[{, boolean, invalidatingPropRef, =, false, ;, String, propName, =, null, ;, if, (, n, ., isGetProp, (, ), ), {]
[invalidatingPropRef, =, false, ;, String, propName, =, null, ;, if, (, n, ., isGetProp, (, ), ), {, propName, =]
[invalidatingPropRef, =, false, ;, String, propName, =, null, ;, if, (, n, ., isGetProp, (, ), ), {, propName, =]
[invalidatingPropRef, =, false, ;, String, propName, =, null, ;, if, (, n, ., isGetProp, (, ), ), {, propName, =]
[., isGetProp, (, ), ), {, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[., isGetProp, (, ), ), {, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[., isGetProp, (, ), ), {, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, if, (]
[(, ), ., getString, (, ), ;, if, (, t, ., getInput, (, ), ., isExtern, (, ), ), {]
[., getString, (, ), ;, if, (, t, ., getInput, (, ), ., isExtern, (, ), ), {, invalidatingPropRef, =]
[(, t, ., getInput, (, ), ., isExtern, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, if, (]
[(, t, ., getInput, (, ), ., isExtern, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, if, (]
[isExtern, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, if, (, parent, ., isAssign, (, ), ), {]
[), ), {, invalidatingPropRef, =, true, ;, }, else, if, (, parent, ., isAssign, (, ), ), {, invalidatingPropRef, =]
[), {, invalidatingPropRef, =, true, ;, }, else, if, (, parent, ., isAssign, (, ), ), {, invalidatingPropRef, =, !]
[invalidatingPropRef, =, true, ;, }, else, if, (, parent, ., isAssign, (, ), ), {, invalidatingPropRef, =, !, maybeCandidateDefinition, (]
[true, ;, }, else, if, (, parent, ., isAssign, (, ), ), {, invalidatingPropRef, =, !, maybeCandidateDefinition, (, t, ,]
[}, else, if, (, parent, ., isAssign, (, ), ), {, invalidatingPropRef, =, !, maybeCandidateDefinition, (, t, ,, n, ,]
[(, ), ), {, invalidatingPropRef, =, !, maybeCandidateDefinition, (, t, ,, n, ,, parent, ), ;, }, else, if, (]
[(, ), ), {, invalidatingPropRef, =, !, maybeCandidateDefinition, (, t, ,, n, ,, parent, ), ;, }, else, if, (]
[invalidatingPropRef, =, !, maybeCandidateDefinition, (, t, ,, n, ,, parent, ), ;, }, else, if, (, NodeUtil, ., isLValue, (]
[(, t, ,, n, ,, parent, ), ;, }, else, if, (, NodeUtil, ., isLValue, (, n, ), ), {]
[,, n, ,, parent, ), ;, }, else, if, (, NodeUtil, ., isLValue, (, n, ), ), {, invalidatingPropRef, =]
[}, else, if, (, NodeUtil, ., isLValue, (, n, ), ), {, invalidatingPropRef, =, true, ;, }, else, if, (]
[}, else, if, (, NodeUtil, ., isLValue, (, n, ), ), {, invalidatingPropRef, =, true, ;, }, else, if, (]
[(, n, ), ), {, invalidatingPropRef, =, true, ;, }, else, if, (, parent, ., isDelProp, (, ), ), {]
[), ), {, invalidatingPropRef, =, true, ;, }, else, if, (, parent, ., isDelProp, (, ), ), {, invalidatingPropRef, =]
[true, ;, }, else, if, (, parent, ., isDelProp, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, {]
[}, else, if, (, parent, ., isDelProp, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, {, invalidatingPropRef, =]
[(, ), ), {, invalidatingPropRef, =, true, ;, }, else, {, invalidatingPropRef, =, false, ;, }, }, else, if, (]
[(, ), ), {, invalidatingPropRef, =, true, ;, }, else, {, invalidatingPropRef, =, false, ;, }, }, else, if, (]
[;, }, else, {, invalidatingPropRef, =, false, ;, }, }, else, if, (, n, ., isStringKey, (, ), ), {]
[else, {, invalidatingPropRef, =, false, ;, }, }, else, if, (, n, ., isStringKey, (, ), ), {, propName, =]
[else, {, invalidatingPropRef, =, false, ;, }, }, else, if, (, n, ., isStringKey, (, ), ), {, propName, =]
[else, if, (, n, ., isStringKey, (, ), ), {, propName, =, n, ., getString, (, ), ;, if, (]
[else, if, (, n, ., isStringKey, (, ), ), {, propName, =, n, ., getString, (, ), ;, if, (]
[else, if, (, n, ., isStringKey, (, ), ), {, propName, =, n, ., getString, (, ), ;, if, (]
[=, n, ., getString, (, ), ;, if, (, t, ., getInput, (, ), ., isExtern, (, ), ), {]
[., getString, (, ), ;, if, (, t, ., getInput, (, ), ., isExtern, (, ), ), {, invalidatingPropRef, =]
[if, (, t, ., getInput, (, ), ., isExtern, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, {]
[t, ., getInput, (, ), ., isExtern, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, {, invalidatingPropRef, =]
[isExtern, (, ), ), {, invalidatingPropRef, =, true, ;, }, else, {, invalidatingPropRef, =, true, ;, }, }, if, (]
[), {, invalidatingPropRef, =, true, ;, }, else, {, invalidatingPropRef, =, true, ;, }, }, if, (, invalidatingPropRef, ), {]
[), {, invalidatingPropRef, =, true, ;, }, else, {, invalidatingPropRef, =, true, ;, }, }, if, (, invalidatingPropRef, ), {]
[true, ;, }, else, {, invalidatingPropRef, =, true, ;, }, }, if, (, invalidatingPropRef, ), {, Preconditions, ., checkNotNull, (]
[else, {, invalidatingPropRef, =, true, ;, }, }, if, (, invalidatingPropRef, ), {, Preconditions, ., checkNotNull, (, propName, ), ;]
[invalidatingPropRef, =, true, ;, }, }, if, (, invalidatingPropRef, ), {, Preconditions, ., checkNotNull, (, propName, ), ;, invalidateProperty, (]
[(, propName, ), ;, }, }, private, boolean, maybeCandidateDefinition, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {]
[(, propName, ), ;, }, }, private, boolean, maybeCandidateDefinition, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {]
[}, }, private, boolean, maybeCandidateDefinition, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, Preconditions, ., checkState, (]
[}, }, private, boolean, maybeCandidateDefinition, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, Preconditions, ., checkState, (]
[}, }, private, boolean, maybeCandidateDefinition, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, Preconditions, ., checkState, (]
[NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, Preconditions, ., checkState, (, n, ., isGetProp, (, ), &&]
[NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, Preconditions, ., checkState, (, n, ., isGetProp, (, ), &&]
[Preconditions, ., checkState, (, n, ., isGetProp, (, ), &&, parent, ., isAssign, (, ), ), ;, boolean, isCandidate, =]
[., isGetProp, (, ), &&, parent, ., isAssign, (, ), ), ;, boolean, isCandidate, =, false, ;, Node, src, =]
[., isGetProp, (, ), &&, parent, ., isAssign, (, ), ), ;, boolean, isCandidate, =, false, ;, Node, src, =]
[), ), ;, boolean, isCandidate, =, false, ;, Node, src, =, n, ., getFirstChild, (, ), ;, String, propName, =]
[), ), ;, boolean, isCandidate, =, false, ;, Node, src, =, n, ., getFirstChild, (, ), ;, String, propName, =]
[), ), ;, boolean, isCandidate, =, false, ;, Node, src, =, n, ., getFirstChild, (, ), ;, String, propName, =]
[getFirstChild, (, ), ;, String, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, Node, value, =]
[getFirstChild, (, ), ;, String, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, Node, value, =]
[., getLastChild, (, ), ., getString, (, ), ;, Node, value, =, parent, ., getLastChild, (, ), ;, if, (]
[., getLastChild, (, ), ., getString, (, ), ;, Node, value, =, parent, ., getLastChild, (, ), ;, if, (]
[Node, value, =, parent, ., getLastChild, (, ), ;, if, (, src, ., isThis, (, ), ), {, if, (]
[=, parent, ., getLastChild, (, ), ;, if, (, src, ., isThis, (, ), ), {, if, (, inContructor, (]
[(, ), ;, if, (, src, ., isThis, (, ), ), {, if, (, inContructor, (, t, ), ), {]
[;, if, (, src, ., isThis, (, ), ), {, if, (, inContructor, (, t, ), ), {, isCandidate, =]
[(, src, ., isThis, (, ), ), {, if, (, inContructor, (, t, ), ), {, isCandidate, =, maybeStoreCandidateValue, (]
[., isThis, (, ), ), {, if, (, inContructor, (, t, ), ), {, isCandidate, =, maybeStoreCandidateValue, (, getJSType, (]
[), ), {, if, (, inContructor, (, t, ), ), {, isCandidate, =, maybeStoreCandidateValue, (, getJSType, (, src, ), ,]
[{, if, (, inContructor, (, t, ), ), {, isCandidate, =, maybeStoreCandidateValue, (, getJSType, (, src, ), ,, propName, ,]
[{, isCandidate, =, maybeStoreCandidateValue, (, getJSType, (, src, ), ,, propName, ,, value, ), ;, }, }, else, if, (]
[{, isCandidate, =, maybeStoreCandidateValue, (, getJSType, (, src, ), ,, propName, ,, value, ), ;, }, }, else, if, (]
[{, isCandidate, =, maybeStoreCandidateValue, (, getJSType, (, src, ), ,, propName, ,, value, ), ;, }, }, else, if, (]
[{, isCandidate, =, maybeStoreCandidateValue, (, getJSType, (, src, ), ,, propName, ,, value, ), ;, }, }, else, if, (]
[(, src, ), ,, propName, ,, value, ), ;, }, }, else, if, (, t, ., inGlobalScope, (, ), &&]
[(, src, ), ,, propName, ,, value, ), ;, }, }, else, if, (, t, ., inGlobalScope, (, ), &&]
[value, ), ;, }, }, else, if, (, t, ., inGlobalScope, (, ), &&, src, ., isGetProp, (, ), &&]
[value, ), ;, }, }, else, if, (, t, ., inGlobalScope, (, ), &&, src, ., isGetProp, (, ), &&]
[value, ), ;, }, }, else, if, (, t, ., inGlobalScope, (, ), &&, src, ., isGetProp, (, ), &&]
[value, ), ;, }, }, else, if, (, t, ., inGlobalScope, (, ), &&, src, ., isGetProp, (, ), &&]
[), &&, src, ., isGetProp, (, ), &&, src, ., getLastChild, (, ), ., getString, (, ), ., equals, (]
[&&, src, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ), {, JSType, instanceType, =]
[., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ), {, JSType, instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (]
[getString, (, ), ., equals, (, "prototype", ), ), {, JSType, instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (, src, ), ;, if, (]
[getString, (, ), ., equals, (, "prototype", ), ), {, JSType, instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (, src, ), ;, if, (]
[), ., equals, (, "prototype", ), ), {, JSType, instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (, src, ), ;, if, (, instanceType, !=]
[(, "prototype", ), ), {, JSType, instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (, src, ), ;, if, (, instanceType, !=, null, ), {]
[), ), {, JSType, instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (, src, ), ;, if, (, instanceType, !=, null, ), {, isCandidate, =]
[{, JSType, instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (, src, ), ;, if, (, instanceType, !=, null, ), {, isCandidate, =, maybeStoreCandidateValue, (]
[instanceType, =, maybeGetInstanceTypeFromPrototypeRef, (, src, ), ;, if, (, instanceType, !=, null, ), {, isCandidate, =, maybeStoreCandidateValue, (, instanceType, ,]
[maybeGetInstanceTypeFromPrototypeRef, (, src, ), ;, if, (, instanceType, !=, null, ), {, isCandidate, =, maybeStoreCandidateValue, (, instanceType, ,, propName, ,]
[(, instanceType, !=, null, ), {, isCandidate, =, maybeStoreCandidateValue, (, instanceType, ,, propName, ,, value, ), ;, }, }, return]
[value, ), ;, }, }, return, isCandidate, ;, }, private, JSType, maybeGetInstanceTypeFromPrototypeRef, (, Node, src, ), {, JSType, ownerType, =]
[;, }, }, return, isCandidate, ;, }, private, JSType, maybeGetInstanceTypeFromPrototypeRef, (, Node, src, ), {, JSType, ownerType, =, getJSType, (]
[;, }, }, return, isCandidate, ;, }, private, JSType, maybeGetInstanceTypeFromPrototypeRef, (, Node, src, ), {, JSType, ownerType, =, getJSType, (]
[maybeGetInstanceTypeFromPrototypeRef, (, Node, src, ), {, JSType, ownerType, =, getJSType, (, src, ., getFirstChild, (, ), ), ;, if, (]
[maybeGetInstanceTypeFromPrototypeRef, (, Node, src, ), {, JSType, ownerType, =, getJSType, (, src, ., getFirstChild, (, ), ), ;, if, (]
[maybeGetInstanceTypeFromPrototypeRef, (, Node, src, ), {, JSType, ownerType, =, getJSType, (, src, ., getFirstChild, (, ), ), ;, if, (]
[JSType, ownerType, =, getJSType, (, src, ., getFirstChild, (, ), ), ;, if, (, ownerType, ., isFunctionType, (, ), &&]
[JSType, ownerType, =, getJSType, (, src, ., getFirstChild, (, ), ), ;, if, (, ownerType, ., isFunctionType, (, ), &&]
[), ;, if, (, ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =]
[;, if, (, ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (]
[ownerType, ., isFunctionType, (, ), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType, )]
[), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return]
[), &&, ownerType, ., isConstructor, (, ), ), {, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return]
[{, FunctionType, functionType, =, (, (, FunctionType, ), ownerType, ), ;, return, functionType, ., getInstanceType, (, ), ;, }, return]
[return, functionType, ., getInstanceType, (, ), ;, }, return, null, ;, }, private, void, invalidateProperty, (, String, propName, ), {]
[return, functionType, ., getInstanceType, (, ), ;, }, return, null, ;, }, private, void, invalidateProperty, (, String, propName, ), {]
[(, ), ;, }, return, null, ;, }, private, void, invalidateProperty, (, String, propName, ), {, props, ., put, (]
[;, }, return, null, ;, }, private, void, invalidateProperty, (, String, propName, ), {, props, ., put, (, propName, ,]
[propName, ,, INVALIDATED, ), ;, }, private, boolean, maybeStoreCandidateValue, (, JSType, type, ,, String, propName, ,, Node, value, ), {]
[propName, ,, INVALIDATED, ), ;, }, private, boolean, maybeStoreCandidateValue, (, JSType, type, ,, String, propName, ,, Node, value, ), {]
[;, }, private, boolean, maybeStoreCandidateValue, (, JSType, type, ,, String, propName, ,, Node, value, ), {, Preconditions, ., checkNotNull, (]
[(, JSType, type, ,, String, propName, ,, Node, value, ), {, Preconditions, ., checkNotNull, (, value, ), ;, if, (]
[(, JSType, type, ,, String, propName, ,, Node, value, ), {, Preconditions, ., checkNotNull, (, value, ), ;, if, (]
[(, JSType, type, ,, String, propName, ,, Node, value, ), {, Preconditions, ., checkNotNull, (, value, ), ;, if, (]
[(, JSType, type, ,, String, propName, ,, Node, value, ), {, Preconditions, ., checkNotNull, (, value, ), ;, if, (]
[JSType, type, ,, String, propName, ,, Node, value, ), {, Preconditions, ., checkNotNull, (, value, ), ;, if, (, !]
[JSType, type, ,, String, propName, ,, Node, value, ), {, Preconditions, ., checkNotNull, (, value, ), ;, if, (, !]
[propName, ,, Node, value, ), {, Preconditions, ., checkNotNull, (, value, ), ;, if, (, !, props, ., containsKey, (]
[value, ), {, Preconditions, ., checkNotNull, (, value, ), ;, if, (, !, props, ., containsKey, (, propName, ), &&]
[), {, Preconditions, ., checkNotNull, (, value, ), ;, if, (, !, props, ., containsKey, (, propName, ), &&, !]
[Preconditions, ., checkNotNull, (, value, ), ;, if, (, !, props, ., containsKey, (, propName, ), &&, !, isInvalidatingType, (]
[(, value, ), ;, if, (, !, props, ., containsKey, (, propName, ), &&, !, isInvalidatingType, (, type, ), &&]
[(, value, ), ;, if, (, !, props, ., containsKey, (, propName, ), &&, !, isInvalidatingType, (, type, ), &&]
[if, (, !, props, ., containsKey, (, propName, ), &&, !, isInvalidatingType, (, type, ), &&, NodeUtil, ., isImmutableValue, (]
[props, ., containsKey, (, propName, ), &&, !, isInvalidatingType, (, type, ), &&, NodeUtil, ., isImmutableValue, (, value, ), &&]
[props, ., containsKey, (, propName, ), &&, !, isInvalidatingType, (, type, ), &&, NodeUtil, ., isImmutableValue, (, value, ), &&]
[propName, ), &&, !, isInvalidatingType, (, type, ), &&, NodeUtil, ., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (]
[isInvalidatingType, (, type, ), &&, NodeUtil, ., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {]
[isInvalidatingType, (, type, ), &&, NodeUtil, ., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {]
[&&, NodeUtil, ., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {, props, ., put, (]
[., isImmutableValue, (, value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {, props, ., put, (, propName, ,]
[value, ), &&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {, props, ., put, (, propName, ,, new, PropertyInfo, (]
[&&, NodeUtil, ., isExecutedExactlyOnce, (, value, ), ), {, props, ., put, (, propName, ,, new, PropertyInfo, (, type, ,]
[value, ), ), {, props, ., put, (, propName, ,, new, PropertyInfo, (, type, ,, value, ), ), ;, return]
[props, ., put, (, propName, ,, new, PropertyInfo, (, type, ,, value, ), ), ;, return, true, ;, }, return]
[;, return, true, ;, }, return, false, ;, }, private, boolean, inContructor, (, NodeTraversal, t, ), {, Node, root, =]
[;, return, true, ;, }, return, false, ;, }, private, boolean, inContructor, (, NodeTraversal, t, ), {, Node, root, =]
[private, boolean, inContructor, (, NodeTraversal, t, ), {, Node, root, =, t, ., getScopeRoot, (, ), ;, JSDocInfo, info, =]
[private, boolean, inContructor, (, NodeTraversal, t, ), {, Node, root, =, t, ., getScopeRoot, (, ), ;, JSDocInfo, info, =]
[NodeTraversal, t, ), {, Node, root, =, t, ., getScopeRoot, (, ), ;, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (]
[Node, root, =, t, ., getScopeRoot, (, ), ;, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, root, ), ;, return]
[Node, root, =, t, ., getScopeRoot, (, ), ;, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, root, ), ;, return]
[Node, root, =, t, ., getScopeRoot, (, ), ;, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, root, ), ;, return]
[=, t, ., getScopeRoot, (, ), ;, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, root, ), ;, return, info, !=]
[., getScopeRoot, (, ), ;, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, root, ), ;, return, info, !=, null, &&]
[., getScopeRoot, (, ), ;, JSDocInfo, info, =, NodeUtil, ., getBestJSDocInfo, (, root, ), ;, return, info, !=, null, &&]
[AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[AbstractPostOrderCallback, {, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, n, ., isGetProp, (, ), &&]
[(, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, n, ., isGetProp, (, ), &&, !]
[(, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, n, ., isGetProp, (, ), &&, !]
[Node, n, ,, Node, parent, ), {, if, (, n, ., isGetProp, (, ), &&, !, NodeUtil, ., isLValue, (]
[if, (, n, ., isGetProp, (, ), &&, !, NodeUtil, ., isLValue, (, n, ), ), {, Node, target, =]
[if, (, n, ., isGetProp, (, ), &&, !, NodeUtil, ., isLValue, (, n, ), ), {, Node, target, =]
[NodeUtil, ., isLValue, (, n, ), ), {, Node, target, =, n, ., getFirstChild, (, ), ;, String, propName, =]
[NodeUtil, ., isLValue, (, n, ), ), {, Node, target, =, n, ., getFirstChild, (, ), ;, String, propName, =]
[NodeUtil, ., isLValue, (, n, ), ), {, Node, target, =, n, ., getFirstChild, (, ), ;, String, propName, =]
[getFirstChild, (, ), ;, String, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, PropertyInfo, info, =]
[getFirstChild, (, ), ;, String, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, PropertyInfo, info, =]
[String, propName, =, n, ., getLastChild, (, ), ., getString, (, ), ;, PropertyInfo, info, =, props, ., get, (]
[getLastChild, (, ), ., getString, (, ), ;, PropertyInfo, info, =, props, ., get, (, propName, ), ;, if, (]
[getLastChild, (, ), ., getString, (, ), ;, PropertyInfo, info, =, props, ., get, (, propName, ), ;, if, (]
[getLastChild, (, ), ., getString, (, ), ;, PropertyInfo, info, =, props, ., get, (, propName, ), ;, if, (]
[getLastChild, (, ), ., getString, (, ), ;, PropertyInfo, info, =, props, ., get, (, propName, ), ;, if, (]
[), ., getString, (, ), ;, PropertyInfo, info, =, props, ., get, (, propName, ), ;, if, (, info, !=]
[getString, (, ), ;, PropertyInfo, info, =, props, ., get, (, propName, ), ;, if, (, info, !=, null, &&]
[getString, (, ), ;, PropertyInfo, info, =, props, ., get, (, propName, ), ;, if, (, info, !=, null, &&]
[), ;, PropertyInfo, info, =, props, ., get, (, propName, ), ;, if, (, info, !=, null, &&, info, !=]
[PropertyInfo, info, =, props, ., get, (, propName, ), ;, if, (, info, !=, null, &&, info, !=, INVALIDATED, &&]
[=, props, ., get, (, propName, ), ;, if, (, info, !=, null, &&, info, !=, INVALIDATED, &&, isMatchingType, (]
[., get, (, propName, ), ;, if, (, info, !=, null, &&, info, !=, INVALIDATED, &&, isMatchingType, (, target, ,]
[., get, (, propName, ), ;, if, (, info, !=, null, &&, info, !=, INVALIDATED, &&, isMatchingType, (, target, ,]
[!=, null, &&, info, !=, INVALIDATED, &&, isMatchingType, (, target, ,, info, ., type, ), ), {, Node, replacement, =]
[!=, null, &&, info, !=, INVALIDATED, &&, isMatchingType, (, target, ,, info, ., type, ), ), {, Node, replacement, =]
[!=, null, &&, info, !=, INVALIDATED, &&, isMatchingType, (, target, ,, info, ., type, ), ), {, Node, replacement, =]
[,, info, ., type, ), ), {, Node, replacement, =, info, ., value, ., cloneTree, (, ), ;, if, (]
[,, info, ., type, ), ), {, Node, replacement, =, info, ., value, ., cloneTree, (, ), ;, if, (]
[), ), {, Node, replacement, =, info, ., value, ., cloneTree, (, ), ;, if, (, NodeUtil, ., mayHaveSideEffects, (]
[), ), {, Node, replacement, =, info, ., value, ., cloneTree, (, ), ;, if, (, NodeUtil, ., mayHaveSideEffects, (]
[info, ., value, ., cloneTree, (, ), ;, if, (, NodeUtil, ., mayHaveSideEffects, (, n, ., getFirstChild, (, ), ,]
[cloneTree, (, ), ;, if, (, NodeUtil, ., mayHaveSideEffects, (, n, ., getFirstChild, (, ), ,, compiler, ), ), {]
[), ;, if, (, NodeUtil, ., mayHaveSideEffects, (, n, ., getFirstChild, (, ), ,, compiler, ), ), {, replacement, =]
[), ;, if, (, NodeUtil, ., mayHaveSideEffects, (, n, ., getFirstChild, (, ), ,, compiler, ), ), {, replacement, =]
[), ;, if, (, NodeUtil, ., mayHaveSideEffects, (, n, ., getFirstChild, (, ), ,, compiler, ), ), {, replacement, =]
[NodeUtil, ., mayHaveSideEffects, (, n, ., getFirstChild, (, ), ,, compiler, ), ), {, replacement, =, IR, ., comma, (]
[NodeUtil, ., mayHaveSideEffects, (, n, ., getFirstChild, (, ), ,, compiler, ), ), {, replacement, =, IR, ., comma, (]
[getFirstChild, (, ), ,, compiler, ), ), {, replacement, =, IR, ., comma, (, n, ., removeFirstChild, (, ), ,]
[), ), {, replacement, =, IR, ., comma, (, n, ., removeFirstChild, (, ), ,, replacement, ), ., srcref, (]
[=, IR, ., comma, (, n, ., removeFirstChild, (, ), ,, replacement, ), ., srcref, (, n, ), ;, }]
[=, IR, ., comma, (, n, ., removeFirstChild, (, ), ,, replacement, ), ., srcref, (, n, ), ;, }]
[(, n, ., removeFirstChild, (, ), ,, replacement, ), ., srcref, (, n, ), ;, }, parent, ., replaceChild, (]
[., removeFirstChild, (, ), ,, replacement, ), ., srcref, (, n, ), ;, }, parent, ., replaceChild, (, n, ,]
[), ,, replacement, ), ., srcref, (, n, ), ;, }, parent, ., replaceChild, (, n, ,, replacement, ), ;]
[), ,, replacement, ), ., srcref, (, n, ), ;, }, parent, ., replaceChild, (, n, ,, replacement, ), ;]
[compiler, ., reportCodeChange, (, ), ;, }, }, }, private, boolean, isMatchingType, (, Node, n, ,, JSType, src, ), {]
[reportCodeChange, (, ), ;, }, }, }, private, boolean, isMatchingType, (, Node, n, ,, JSType, src, ), {, src, =]
[reportCodeChange, (, ), ;, }, }, }, private, boolean, isMatchingType, (, Node, n, ,, JSType, src, ), {, src, =]
[isMatchingType, (, Node, n, ,, JSType, src, ), {, src, =, src, ., restrictByNotNullOrUndefined, (, ), ;, JSType, dest, =]
[isMatchingType, (, Node, n, ,, JSType, src, ), {, src, =, src, ., restrictByNotNullOrUndefined, (, ), ;, JSType, dest, =]
[Node, n, ,, JSType, src, ), {, src, =, src, ., restrictByNotNullOrUndefined, (, ), ;, JSType, dest, =, getJSType, (]
[src, ., restrictByNotNullOrUndefined, (, ), ;, JSType, dest, =, getJSType, (, n, ), ., restrictByNotNullOrUndefined, (, ), ;, if, (]
[src, ., restrictByNotNullOrUndefined, (, ), ;, JSType, dest, =, getJSType, (, n, ), ., restrictByNotNullOrUndefined, (, ), ;, if, (]
[., restrictByNotNullOrUndefined, (, ), ;, JSType, dest, =, getJSType, (, n, ), ., restrictByNotNullOrUndefined, (, ), ;, if, (, !]
[(, ), ;, JSType, dest, =, getJSType, (, n, ), ., restrictByNotNullOrUndefined, (, ), ;, if, (, !, isInvalidatingType, (]
[JSType, dest, =, getJSType, (, n, ), ., restrictByNotNullOrUndefined, (, ), ;, if, (, !, isInvalidatingType, (, dest, ), &&]
[JSType, dest, =, getJSType, (, n, ), ., restrictByNotNullOrUndefined, (, ), ;, if, (, !, isInvalidatingType, (, dest, ), &&]
[(, n, ), ., restrictByNotNullOrUndefined, (, ), ;, if, (, !, isInvalidatingType, (, dest, ), &&, dest, ., isSubtype, (]
[(, ), ;, if, (, !, isInvalidatingType, (, dest, ), &&, dest, ., isSubtype, (, src, ), ), {, return]
[(, !, isInvalidatingType, (, dest, ), &&, dest, ., isSubtype, (, src, ), ), {, return, true, ;, }, return]
