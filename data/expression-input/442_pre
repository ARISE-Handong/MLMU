[Token, ;, class, ConvertToDottedProperties, extends, AbstractPostOrderCallback, implements, CompilerPass, {, private, final, AbstractCompiler, compiler, ;, ConvertToDottedProperties, (, AbstractCompiler, compiler, ), {]
[Token, ;, class, ConvertToDottedProperties, extends, AbstractPostOrderCallback, implements, CompilerPass, {, private, final, AbstractCompiler, compiler, ;, ConvertToDottedProperties, (, AbstractCompiler, compiler, ), {]
[extends, AbstractPostOrderCallback, implements, CompilerPass, {, private, final, AbstractCompiler, compiler, ;, ConvertToDottedProperties, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
[this, ., compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[this, ., compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (]
[}, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler, ,]
[Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler, ,, root, ,]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (]
[NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (, n, ., getType, (, ), ), {, case]
[NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, switch, (, n, ., getType, (, ), ), {, case]
[,, Node, parent, ), {, switch, (, n, ., getType, (, ), ), {, case, Token, ., GETTER_DEF, :, case]
[,, Node, parent, ), {, switch, (, n, ., getType, (, ), ), {, case, Token, ., GETTER_DEF, :, case]
[switch, (, n, ., getType, (, ), ), {, case, Token, ., GETTER_DEF, :, case, Token, ., SETTER_DEF, :, case]
[switch, (, n, ., getType, (, ), ), {, case, Token, ., GETTER_DEF, :, case, Token, ., SETTER_DEF, :, case]
[), ), {, case, Token, ., GETTER_DEF, :, case, Token, ., SETTER_DEF, :, case, Token, ., STRING_KEY, :, if, (]
[), ), {, case, Token, ., GETTER_DEF, :, case, Token, ., SETTER_DEF, :, case, Token, ., STRING_KEY, :, if, (]
[Token, ., GETTER_DEF, :, case, Token, ., SETTER_DEF, :, case, Token, ., STRING_KEY, :, if, (, NodeUtil, ., isValidPropertyName, (]
[Token, ., GETTER_DEF, :, case, Token, ., SETTER_DEF, :, case, Token, ., STRING_KEY, :, if, (, NodeUtil, ., isValidPropertyName, (]
[:, case, Token, ., STRING_KEY, :, if, (, NodeUtil, ., isValidPropertyName, (, n, ., getString, (, ), ), ), {]
[:, case, Token, ., STRING_KEY, :, if, (, NodeUtil, ., isValidPropertyName, (, n, ., getString, (, ), ), ), {]
[STRING_KEY, :, if, (, NodeUtil, ., isValidPropertyName, (, n, ., getString, (, ), ), ), {, n, ., putBooleanProp, (]
[STRING_KEY, :, if, (, NodeUtil, ., isValidPropertyName, (, n, ., getString, (, ), ), ), {, n, ., putBooleanProp, (]
[NodeUtil, ., isValidPropertyName, (, n, ., getString, (, ), ), ), {, n, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,]
[(, n, ., getString, (, ), ), ), {, n, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,, false, ), ;]
[(, n, ., getString, (, ), ), ), {, n, ., putBooleanProp, (, Node, ., QUOTED_PROP, ,, false, ), ;]
[., putBooleanProp, (, Node, ., QUOTED_PROP, ,, false, ), ;, compiler, ., reportCodeChange, (, ), ;, }, break, ;, case]
[., putBooleanProp, (, Node, ., QUOTED_PROP, ,, false, ), ;, compiler, ., reportCodeChange, (, ), ;, }, break, ;, case]
[false, ), ;, compiler, ., reportCodeChange, (, ), ;, }, break, ;, case, Token, ., GETELEM, :, Node, left, =]
[false, ), ;, compiler, ., reportCodeChange, (, ), ;, }, break, ;, case, Token, ., GETELEM, :, Node, left, =]
[}, break, ;, case, Token, ., GETELEM, :, Node, left, =, n, ., getFirstChild, (, ), ;, Node, right, =]
[}, break, ;, case, Token, ., GETELEM, :, Node, left, =, n, ., getFirstChild, (, ), ;, Node, right, =]
[Node, left, =, n, ., getFirstChild, (, ), ;, Node, right, =, left, ., getNext, (, ), ;, if, (]
[Node, left, =, n, ., getFirstChild, (, ), ;, Node, right, =, left, ., getNext, (, ), ;, if, (]
[Node, left, =, n, ., getFirstChild, (, ), ;, Node, right, =, left, ., getNext, (, ), ;, if, (]
[(, ), ;, Node, right, =, left, ., getNext, (, ), ;, if, (, right, ., isString, (, ), &&]
[(, ), ;, Node, right, =, left, ., getNext, (, ), ;, if, (, right, ., isString, (, ), &&]
[right, =, left, ., getNext, (, ), ;, if, (, right, ., isString, (, ), &&, NodeUtil, ., isValidPropertyName, (]
[right, =, left, ., getNext, (, ), ;, if, (, right, ., isString, (, ), &&, NodeUtil, ., isValidPropertyName, (]
[if, (, right, ., isString, (, ), &&, NodeUtil, ., isValidPropertyName, (, right, ., getString, (, ), ), ), {]
[if, (, right, ., isString, (, ), &&, NodeUtil, ., isValidPropertyName, (, right, ., getString, (, ), ), ), {]
[isString, (, ), &&, NodeUtil, ., isValidPropertyName, (, right, ., getString, (, ), ), ), {, n, ., removeChild, (]
[&&, NodeUtil, ., isValidPropertyName, (, right, ., getString, (, ), ), ), {, n, ., removeChild, (, left, ), ;]
[&&, NodeUtil, ., isValidPropertyName, (, right, ., getString, (, ), ), ), {, n, ., removeChild, (, left, ), ;]
[(, right, ., getString, (, ), ), ), {, n, ., removeChild, (, left, ), ;, n, ., removeChild, (]
[getString, (, ), ), ), {, n, ., removeChild, (, left, ), ;, n, ., removeChild, (, right, ), ;]
[getString, (, ), ), ), {, n, ., removeChild, (, left, ), ;, n, ., removeChild, (, right, ), ;]
[), {, n, ., removeChild, (, left, ), ;, n, ., removeChild, (, right, ), ;, parent, ., replaceChild, (]
[n, ., removeChild, (, left, ), ;, n, ., removeChild, (, right, ), ;, parent, ., replaceChild, (, n, ,]
[n, ., removeChild, (, left, ), ;, n, ., removeChild, (, right, ), ;, parent, ., replaceChild, (, n, ,]
[left, ), ;, n, ., removeChild, (, right, ), ;, parent, ., replaceChild, (, n, ,, IR, ., getprop, (]
[;, n, ., removeChild, (, right, ), ;, parent, ., replaceChild, (, n, ,, IR, ., getprop, (, left, ,]
[(, right, ), ;, parent, ., replaceChild, (, n, ,, IR, ., getprop, (, left, ,, right, ), ), ;]
[(, right, ), ;, parent, ., replaceChild, (, n, ,, IR, ., getprop, (, left, ,, right, ), ), ;]
