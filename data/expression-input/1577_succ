[;, private, transient, DSCompiler, compiler, ;, private, final, double, [, ], data, ;, private, DerivativeStructure, (, final, DSCompiler, compiler, )]
[=, compiler, ;, this, ., data, =, new, double, [, compiler, ., getSize, (, ), ], ;, }, public, DerivativeStructure]
[., compiler, =, compiler, ;, this, ., data, =, new, double, [, compiler, ., getSize, (, ), ], ;, }]
[;, this, ., data, =, new, double, [, compiler, ., getSize, (, ), ], ;, }, public, DerivativeStructure, (, final]
[=, new, double, [, compiler, ., getSize, (, ), ], ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final]
[., data, =, new, double, [, compiler, ., getSize, (, ), ], ;, }, public, DerivativeStructure, (, final, int, parameters]
[;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ), throws, NumberIsTooLargeException, {, this, (, DSCompiler, .]
[], ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ), throws, NumberIsTooLargeException, {, this, (, DSCompiler]
[., getSize, (, ), ], ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ), throws, NumberIsTooLargeException]
[), ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ,, final, double, value, ), throws, NumberIsTooLargeException]
[., getCompiler, (, parameters, ,, order, ), ), ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order]
[,, order, ), ), ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ,, final, double, value]
[), ), ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ,, final, double, value, ), throws]
[,, order, ), ;, this, ., data, [, 0, ], =, value, ;, }, public, DerivativeStructure, (, final, int, parameters]
[), ;, this, ., data, [, 0, ], =, value, ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final]
[=, value, ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ,, final, int, index, ,, final]
[[, 0, ], =, value, ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ,, final, int]
[., data, [, 0, ], =, value, ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ,]
[], =, value, ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ,, final, int, index, ,]
[;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ,, final, int, index, ,, final, double, value]
[,, order, ,, value, ), ;, if, (, index, >=, parameters, ), {, throw, new, NumberIsTooLargeException, (, index, ,, parameters]
[,, value, ), ;, if, (, index, >=, parameters, ), {, throw, new, NumberIsTooLargeException, (, index, ,, parameters, ,, false]
[), ;, if, (, index, >=, parameters, ), {, throw, new, NumberIsTooLargeException, (, index, ,, parameters, ,, false, ), ;]
[), {, throw, new, NumberIsTooLargeException, (, index, ,, parameters, ,, false, ), ;, }, if, (, order, >, 0, )]
[>=, parameters, ), {, throw, new, NumberIsTooLargeException, (, index, ,, parameters, ,, false, ), ;, }, if, (, order, >]
[), {, throw, new, NumberIsTooLargeException, (, index, ,, parameters, ,, false, ), ;, }, if, (, order, >, 0, )]
[;, }, if, (, order, >, 0, ), {, data, [, DSCompiler, ., getCompiler, (, index, ,, order, ), .]
[,, parameters, ,, false, ), ;, }, if, (, order, >, 0, ), {, data, [, DSCompiler, ., getCompiler, (]
[,, false, ), ;, }, if, (, order, >, 0, ), {, data, [, DSCompiler, ., getCompiler, (, index, ,]
[), ;, }, if, (, order, >, 0, ), {, data, [, DSCompiler, ., getCompiler, (, index, ,, order, )]
[), {, data, [, DSCompiler, ., getCompiler, (, index, ,, order, ), ., getSize, (, ), ], =, 1.0, ;]
[>, 0, ), {, data, [, DSCompiler, ., getCompiler, (, index, ,, order, ), ., getSize, (, ), ], =]
[), {, data, [, DSCompiler, ., getCompiler, (, index, ,, order, ), ., getSize, (, ), ], =, 1.0, ;]
[=, 1.0, ;, }, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1, ,, final, double, a2, ,]
[[, DSCompiler, ., getCompiler, (, index, ,, order, ), ., getSize, (, ), ], =, 1.0, ;, }, }, public]
[], =, 1.0, ;, }, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1, ,, final, double, a2]
[., getSize, (, ), ], =, 1.0, ;, }, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1]
[., getCompiler, (, index, ,, order, ), ., getSize, (, ), ], =, 1.0, ;, }, }, public, DerivativeStructure, (]
[,, order, ), ., getSize, (, ), ], =, 1.0, ;, }, }, public, DerivativeStructure, (, final, double, a1, ,]
[), ., getSize, (, ), ], =, 1.0, ;, }, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure]
[;, }, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1, ,, final, double, a2, ,, final, DerivativeStructure]
[), ;, compiler, ., checkCompatibility, (, ds2, ., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data]
[., compiler, ), ;, compiler, ., checkCompatibility, (, ds2, ., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1]
[;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0]
[., checkCompatibility, (, ds2, ., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,]
[), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,]
[., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, .]
[;, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1, ,, final, double, a2, ,, final, DerivativeStructure, ds2]
[., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, data]
[,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, data, ,, 0, ), ;]
[,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (]
[., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, data, ,, 0, ), ;, }, public]
[,, a2, ,, ds2, ., data, ,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, double]
[,, ds2, ., data, ,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, double, a1, ,]
[,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1, ,]
[., data, ,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure]
[,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1, ,, final, double]
[,, 0, ), ;, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1, ,, final, double, a2, ,]
[), ;, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1, ,, final, double, a2, ,, final, DerivativeStructure]
[), ;, compiler, ., checkCompatibility, (, ds2, ., compiler, ), ;, compiler, ., checkCompatibility, (, ds3, ., compiler, ), ;]
[., compiler, ), ;, compiler, ., checkCompatibility, (, ds2, ., compiler, ), ;, compiler, ., checkCompatibility, (, ds3, ., compiler]
[;, compiler, ., checkCompatibility, (, ds3, ., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,]
[., checkCompatibility, (, ds2, ., compiler, ), ;, compiler, ., checkCompatibility, (, ds3, ., compiler, ), ;, compiler, ., linearCombination]
[), ;, compiler, ., checkCompatibility, (, ds3, ., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data]
[., compiler, ), ;, compiler, ., checkCompatibility, (, ds3, ., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1]
[;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0]
[., checkCompatibility, (, ds3, ., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,]
[), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,]
[., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, .]
[;, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1, ,, final, double, a2, ,, final, DerivativeStructure, ds2]
[., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, a3]
[,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, a3, ,, ds3, ., data]
[,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, a3, ,, ds3, ., data, ,, 0, ,, data]
[., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, a3, ,, ds3, ., data, ,, 0]
[,, a2, ,, ds2, ., data, ,, 0, ,, a3, ,, ds3, ., data, ,, 0, ,, data, ,, 0]
[,, ds2, ., data, ,, 0, ,, a3, ,, ds3, ., data, ,, 0, ,, data, ,, 0, ), ;]
[,, 0, ,, a3, ,, ds3, ., data, ,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (]
[., data, ,, 0, ,, a3, ,, ds3, ., data, ,, 0, ,, data, ,, 0, ), ;, }, public]
[,, a3, ,, ds3, ., data, ,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, double]
[,, ds3, ., data, ,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, double, a1, ,]
[,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1, ,]
[., data, ,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure]
[,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1, ,, final, double]
[,, 0, ), ;, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1, ,, final, double, a2, ,]
[), ;, }, public, DerivativeStructure, (, final, double, a1, ,, final, DerivativeStructure, ds1, ,, final, double, a2, ,, final, DerivativeStructure]
[), ;, compiler, ., checkCompatibility, (, ds2, ., compiler, ), ;, compiler, ., checkCompatibility, (, ds3, ., compiler, ), ;]
[., compiler, ), ;, compiler, ., checkCompatibility, (, ds2, ., compiler, ), ;, compiler, ., checkCompatibility, (, ds3, ., compiler]
[;, compiler, ., checkCompatibility, (, ds3, ., compiler, ), ;, compiler, ., checkCompatibility, (, ds4, ., compiler, ), ;, compiler]
[., checkCompatibility, (, ds2, ., compiler, ), ;, compiler, ., checkCompatibility, (, ds3, ., compiler, ), ;, compiler, ., checkCompatibility]
[), ;, compiler, ., checkCompatibility, (, ds3, ., compiler, ), ;, compiler, ., checkCompatibility, (, ds4, ., compiler, ), ;]
[., compiler, ), ;, compiler, ., checkCompatibility, (, ds3, ., compiler, ), ;, compiler, ., checkCompatibility, (, ds4, ., compiler]
[;, compiler, ., checkCompatibility, (, ds4, ., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,]
[., checkCompatibility, (, ds3, ., compiler, ), ;, compiler, ., checkCompatibility, (, ds4, ., compiler, ), ;, compiler, ., linearCombination]
[), ;, compiler, ., checkCompatibility, (, ds4, ., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data]
[., compiler, ), ;, compiler, ., checkCompatibility, (, ds4, ., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1]
[;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0]
[., checkCompatibility, (, ds4, ., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,]
[), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,]
[., compiler, ), ;, compiler, ., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, .]
[;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ,, final, double, ..., derivatives, ), throws, DimensionMismatchException]
[., linearCombination, (, a1, ,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, a3]
[,, ds1, ., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, a3, ,, ds3, ., data]
[,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, a3, ,, ds3, ., data, ,, 0, ,, a4]
[., data, ,, 0, ,, a2, ,, ds2, ., data, ,, 0, ,, a3, ,, ds3, ., data, ,, 0]
[,, a2, ,, ds2, ., data, ,, 0, ,, a3, ,, ds3, ., data, ,, 0, ,, a4, ,, ds4]
[,, ds2, ., data, ,, 0, ,, a3, ,, ds3, ., data, ,, 0, ,, a4, ,, ds4, ., data]
[,, 0, ,, a3, ,, ds3, ., data, ,, 0, ,, a4, ,, ds4, ., data, ,, 0, ,, data]
[., data, ,, 0, ,, a3, ,, ds3, ., data, ,, 0, ,, a4, ,, ds4, ., data, ,, 0]
[,, a3, ,, ds3, ., data, ,, 0, ,, a4, ,, ds4, ., data, ,, 0, ,, data, ,, 0]
[,, ds3, ., data, ,, 0, ,, a4, ,, ds4, ., data, ,, 0, ,, data, ,, 0, ), ;]
[,, 0, ,, a4, ,, ds4, ., data, ,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (]
[., data, ,, 0, ,, a4, ,, ds4, ., data, ,, 0, ,, data, ,, 0, ), ;, }, public]
[,, a4, ,, ds4, ., data, ,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, int]
[,, ds4, ., data, ,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, int, parameters, ,]
[,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ,]
[., data, ,, 0, ,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int]
[,, data, ,, 0, ), ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ,, final, double]
[,, 0, ), ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ,, final, double, ..., derivatives]
[), ;, }, public, DerivativeStructure, (, final, int, parameters, ,, final, int, order, ,, final, double, ..., derivatives, ), throws]
[,, order, ), ;, if, (, derivatives, ., length, !=, data, ., length, ), {, throw, new, DimensionMismatchException, (, derivatives]
[), ;, if, (, derivatives, ., length, !=, data, ., length, ), {, throw, new, DimensionMismatchException, (, derivatives, ., length]
[), {, throw, new, DimensionMismatchException, (, derivatives, ., length, ,, data, ., length, ), ;, }, System, ., arraycopy, (]
[!=, data, ., length, ), {, throw, new, DimensionMismatchException, (, derivatives, ., length, ,, data, ., length, ), ;, }]
[., length, !=, data, ., length, ), {, throw, new, DimensionMismatchException, (, derivatives, ., length, ,, data, ., length, )]
[), {, throw, new, DimensionMismatchException, (, derivatives, ., length, ,, data, ., length, ), ;, }, System, ., arraycopy, (]
[., length, ), {, throw, new, DimensionMismatchException, (, derivatives, ., length, ,, data, ., length, ), ;, }, System, .]
[;, }, System, ., arraycopy, (, derivatives, ,, 0, ,, data, ,, 0, ,, data, ., length, ), ;, }]
[,, data, ., length, ), ;, }, System, ., arraycopy, (, derivatives, ,, 0, ,, data, ,, 0, ,, data]
[., length, ,, data, ., length, ), ;, }, System, ., arraycopy, (, derivatives, ,, 0, ,, data, ,, 0]
[), ;, }, System, ., arraycopy, (, derivatives, ,, 0, ,, data, ,, 0, ,, data, ., length, ), ;]
[., length, ), ;, }, System, ., arraycopy, (, derivatives, ,, 0, ,, data, ,, 0, ,, data, ., length]
[;, }, private, DerivativeStructure, (, final, DerivativeStructure, ds, ), {, this, ., compiler, =, ds, ., compiler, ;, this, .]
[., arraycopy, (, derivatives, ,, 0, ,, data, ,, 0, ,, data, ., length, ), ;, }, private, DerivativeStructure, (]
[,, 0, ,, data, ,, 0, ,, data, ., length, ), ;, }, private, DerivativeStructure, (, final, DerivativeStructure, ds, )]
[,, data, ,, 0, ,, data, ., length, ), ;, }, private, DerivativeStructure, (, final, DerivativeStructure, ds, ), {, this]
[,, 0, ,, data, ., length, ), ;, }, private, DerivativeStructure, (, final, DerivativeStructure, ds, ), {, this, ., compiler]
[,, data, ., length, ), ;, }, private, DerivativeStructure, (, final, DerivativeStructure, ds, ), {, this, ., compiler, =, ds]
[), ;, }, private, DerivativeStructure, (, final, DerivativeStructure, ds, ), {, this, ., compiler, =, ds, ., compiler, ;, this]
[., length, ), ;, }, private, DerivativeStructure, (, final, DerivativeStructure, ds, ), {, this, ., compiler, =, ds, ., compiler]
[=, ds, ., compiler, ;, this, ., data, =, ds, ., data, ., clone, (, ), ;, }, public, int]
[., compiler, =, ds, ., compiler, ;, this, ., data, =, ds, ., data, ., clone, (, ), ;, }]
[;, this, ., data, =, ds, ., data, ., clone, (, ), ;, }, public, int, getFreeParameters, (, ), {]
[., compiler, ;, this, ., data, =, ds, ., data, ., clone, (, ), ;, }, public, int, getFreeParameters, (]
[=, ds, ., data, ., clone, (, ), ;, }, public, int, getFreeParameters, (, ), {, return, compiler, ., getFreeParameters]
[., data, =, ds, ., data, ., clone, (, ), ;, }, public, int, getFreeParameters, (, ), {, return, compiler]
[;, }, public, int, getFreeParameters, (, ), {, return, compiler, ., getFreeParameters, (, ), ;, }, public, int, getOrder, (]
[., clone, (, ), ;, }, public, int, getFreeParameters, (, ), {, return, compiler, ., getFreeParameters, (, ), ;, }]
[., data, ., clone, (, ), ;, }, public, int, getFreeParameters, (, ), {, return, compiler, ., getFreeParameters, (, )]
[;, }, public, int, getOrder, (, ), {, return, compiler, ., getOrder, (, ), ;, }, public, DerivativeStructure, createConstant, (]
[., getFreeParameters, (, ), ;, }, public, int, getOrder, (, ), {, return, compiler, ., getOrder, (, ), ;, }]
[;, }, public, DerivativeStructure, createConstant, (, final, double, c, ), {, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder]
[., getOrder, (, ), ;, }, public, DerivativeStructure, createConstant, (, final, double, c, ), {, return, new, DerivativeStructure, (, getFreeParameters]
[;, }, public, double, getReal, (, ), {, return, data, [, 0, ], ;, }, public, double, getValue, (, )]
[,, getOrder, (, ), ,, c, ), ;, }, public, double, getReal, (, ), {, return, data, [, 0, ]]
[,, c, ), ;, }, public, double, getReal, (, ), {, return, data, [, 0, ], ;, }, public, double]
[), ;, }, public, double, getReal, (, ), {, return, data, [, 0, ], ;, }, public, double, getValue, (]
[;, }, public, double, getValue, (, ), {, return, data, [, 0, ], ;, }, public, double, getPartialDerivative, (, final]
[[, 0, ], ;, }, public, double, getValue, (, ), {, return, data, [, 0, ], ;, }, public, double]
[], ;, }, public, double, getValue, (, ), {, return, data, [, 0, ], ;, }, public, double, getPartialDerivative, (]
[;, }, public, double, getPartialDerivative, (, final, int, ..., orders, ), throws, DimensionMismatchException, ,, NumberIsTooLargeException, {, return, data, [, compiler]
[[, 0, ], ;, }, public, double, getPartialDerivative, (, final, int, ..., orders, ), throws, DimensionMismatchException, ,, NumberIsTooLargeException, {, return]
[], ;, }, public, double, getPartialDerivative, (, final, int, ..., orders, ), throws, DimensionMismatchException, ,, NumberIsTooLargeException, {, return, data, []
[;, }, public, double, [, ], getAllDerivatives, (, ), {, return, data, ., clone, (, ), ;, }, public, DerivativeStructure]
[[, compiler, ., getPartialDerivativeIndex, (, orders, ), ], ;, }, public, double, [, ], getAllDerivatives, (, ), {, return, data]
[], ;, }, public, double, [, ], getAllDerivatives, (, ), {, return, data, ., clone, (, ), ;, }, public]
[., getPartialDerivativeIndex, (, orders, ), ], ;, }, public, double, [, ], getAllDerivatives, (, ), {, return, data, ., clone]
[), ], ;, }, public, double, [, ], getAllDerivatives, (, ), {, return, data, ., clone, (, ), ;, }]
[;, }, public, DerivativeStructure, add, (, final, double, a, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this, )]
[., clone, (, ), ;, }, public, DerivativeStructure, add, (, final, double, a, ), {, final, DerivativeStructure, ds, =, new]
[;, ds, ., data, [, 0, ], +=, a, ;, return, ds, ;, }, public, DerivativeStructure, add, (, final, DerivativeStructure]
[), ;, ds, ., data, [, 0, ], +=, a, ;, return, ds, ;, }, public, DerivativeStructure, add, (, final]
[+=, a, ;, return, ds, ;, }, public, DerivativeStructure, add, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler, .]
[[, 0, ], +=, a, ;, return, ds, ;, }, public, DerivativeStructure, add, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException]
[., data, [, 0, ], +=, a, ;, return, ds, ;, }, public, DerivativeStructure, add, (, final, DerivativeStructure, a, )]
[], +=, a, ;, return, ds, ;, }, public, DerivativeStructure, add, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler]
[;, return, ds, ;, }, public, DerivativeStructure, add, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (]
[;, }, public, DerivativeStructure, add, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (, a, ., compiler]
[;, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this, ), ;, compiler, ., add, (, data, ,, 0, ,, a]
[., checkCompatibility, (, a, ., compiler, ), ;, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this, ), ;, compiler, .]
[), ;, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this, ), ;, compiler, ., add, (, data, ,, 0, ,]
[., compiler, ), ;, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this, ), ;, compiler, ., add, (, data, ,]
[;, compiler, ., add, (, data, ,, 0, ,, a, ., data, ,, 0, ,, ds, ., data, ,, 0]
[), ;, compiler, ., add, (, data, ,, 0, ,, a, ., data, ,, 0, ,, ds, ., data, ,]
[;, return, ds, ;, }, public, DerivativeStructure, subtract, (, final, double, a, ), {, return, add, (, -, a, )]
[., add, (, data, ,, 0, ,, a, ., data, ,, 0, ,, ds, ., data, ,, 0, ), ;]
[,, 0, ,, a, ., data, ,, 0, ,, ds, ., data, ,, 0, ), ;, return, ds, ;, }]
[,, a, ., data, ,, 0, ,, ds, ., data, ,, 0, ), ;, return, ds, ;, }, public, DerivativeStructure]
[,, 0, ,, ds, ., data, ,, 0, ), ;, return, ds, ;, }, public, DerivativeStructure, subtract, (, final, double]
[., data, ,, 0, ,, ds, ., data, ,, 0, ), ;, return, ds, ;, }, public, DerivativeStructure, subtract, (]
[,, ds, ., data, ,, 0, ), ;, return, ds, ;, }, public, DerivativeStructure, subtract, (, final, double, a, )]
[,, 0, ), ;, return, ds, ;, }, public, DerivativeStructure, subtract, (, final, double, a, ), {, return, add, (]
[., data, ,, 0, ), ;, return, ds, ;, }, public, DerivativeStructure, subtract, (, final, double, a, ), {, return]
[), ;, return, ds, ;, }, public, DerivativeStructure, subtract, (, final, double, a, ), {, return, add, (, -, a]
[;, }, public, DerivativeStructure, subtract, (, final, double, a, ), {, return, add, (, -, a, ), ;, }, public]
[;, }, public, DerivativeStructure, subtract, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (, a, ., compiler]
[), ;, }, public, DerivativeStructure, subtract, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (, a, .]
[), ;, }, public, DerivativeStructure, subtract, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (, a, .]
[;, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this, ), ;, compiler, ., subtract, (, data, ,, 0, ,, a]
[., checkCompatibility, (, a, ., compiler, ), ;, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this, ), ;, compiler, .]
[), ;, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this, ), ;, compiler, ., subtract, (, data, ,, 0, ,]
[., compiler, ), ;, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this, ), ;, compiler, ., subtract, (, data, ,]
[;, compiler, ., subtract, (, data, ,, 0, ,, a, ., data, ,, 0, ,, ds, ., data, ,, 0]
[), ;, compiler, ., subtract, (, data, ,, 0, ,, a, ., data, ,, 0, ,, ds, ., data, ,]
[;, return, ds, ;, }, public, DerivativeStructure, multiply, (, final, int, n, ), {, return, multiply, (, (, double, )]
[., subtract, (, data, ,, 0, ,, a, ., data, ,, 0, ,, ds, ., data, ,, 0, ), ;]
[,, 0, ,, a, ., data, ,, 0, ,, ds, ., data, ,, 0, ), ;, return, ds, ;, }]
[,, a, ., data, ,, 0, ,, ds, ., data, ,, 0, ), ;, return, ds, ;, }, public, DerivativeStructure]
[,, 0, ,, ds, ., data, ,, 0, ), ;, return, ds, ;, }, public, DerivativeStructure, multiply, (, final, int]
[., data, ,, 0, ,, ds, ., data, ,, 0, ), ;, return, ds, ;, }, public, DerivativeStructure, multiply, (]
[,, ds, ., data, ,, 0, ), ;, return, ds, ;, }, public, DerivativeStructure, multiply, (, final, int, n, )]
[,, 0, ), ;, return, ds, ;, }, public, DerivativeStructure, multiply, (, final, int, n, ), {, return, multiply, (]
[., data, ,, 0, ), ;, return, ds, ;, }, public, DerivativeStructure, multiply, (, final, int, n, ), {, return]
[), ;, return, ds, ;, }, public, DerivativeStructure, multiply, (, final, int, n, ), {, return, multiply, (, (, double]
[;, }, public, DerivativeStructure, multiply, (, final, int, n, ), {, return, multiply, (, (, double, ), n, ), ;]
[;, }, public, DerivativeStructure, multiply, (, final, double, a, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this, )]
[), ;, }, public, DerivativeStructure, multiply, (, final, double, a, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this]
[), ;, }, public, DerivativeStructure, multiply, (, final, double, a, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this]
[;, for, (, int, i, =, 0, ;, i, <, ds, ., data, ., length, ;, ++, i, ), {]
[), ;, for, (, int, i, =, 0, ;, i, <, ds, ., data, ., length, ;, ++, i, )]
[;, i, <, ds, ., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], *=]
[;, ++, i, ), {, ds, ., data, [, i, ], *=, a, ;, }, return, ds, ;, }, public]
[<, ds, ., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], *=, a, ;]
[;, ++, i, ), {, ds, ., data, [, i, ], *=, a, ;, }, return, ds, ;, }, public]
[., length, ;, ++, i, ), {, ds, ., data, [, i, ], *=, a, ;, }, return, ds, ;]
[., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], *=, a, ;, }, return]
[), {, ds, ., data, [, i, ], *=, a, ;, }, return, ds, ;, }, public, DerivativeStructure, multiply, (]
[), {, ds, ., data, [, i, ], *=, a, ;, }, return, ds, ;, }, public, DerivativeStructure, multiply, (]
[*=, a, ;, }, return, ds, ;, }, public, DerivativeStructure, multiply, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler]
[[, i, ], *=, a, ;, }, return, ds, ;, }, public, DerivativeStructure, multiply, (, final, DerivativeStructure, a, ), throws]
[., data, [, i, ], *=, a, ;, }, return, ds, ;, }, public, DerivativeStructure, multiply, (, final, DerivativeStructure, a]
[], *=, a, ;, }, return, ds, ;, }, public, DerivativeStructure, multiply, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {]
[;, }, return, ds, ;, }, public, DerivativeStructure, multiply, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility]
[;, }, public, DerivativeStructure, multiply, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (, a, ., compiler]
[;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., multiply, (, data, ,, 0, ,, a]
[., checkCompatibility, (, a, ., compiler, ), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., multiply, (, data, ,, 0, ,]
[., compiler, ), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., multiply, (, data, ,]
[;, compiler, ., multiply, (, data, ,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,, 0]
[), ;, compiler, ., multiply, (, data, ,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,]
[;, return, result, ;, }, public, DerivativeStructure, divide, (, final, double, a, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure]
[., multiply, (, data, ,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;]
[,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[,, a, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, divide, (, final, double]
[., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, divide, (]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, divide, (, final, double, a, )]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, divide, (, final, double, a, ), {, final, DerivativeStructure, ds]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, divide, (, final, double, a, ), {, final]
[), ;, return, result, ;, }, public, DerivativeStructure, divide, (, final, double, a, ), {, final, DerivativeStructure, ds, =, new]
[;, }, public, DerivativeStructure, divide, (, final, double, a, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this, )]
[;, for, (, int, i, =, 0, ;, i, <, ds, ., data, ., length, ;, ++, i, ), {]
[), ;, for, (, int, i, =, 0, ;, i, <, ds, ., data, ., length, ;, ++, i, )]
[;, i, <, ds, ., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], /=]
[;, ++, i, ), {, ds, ., data, [, i, ], /=, a, ;, }, return, ds, ;, }, public]
[<, ds, ., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], /=, a, ;]
[;, ++, i, ), {, ds, ., data, [, i, ], /=, a, ;, }, return, ds, ;, }, public]
[., length, ;, ++, i, ), {, ds, ., data, [, i, ], /=, a, ;, }, return, ds, ;]
[., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], /=, a, ;, }, return]
[), {, ds, ., data, [, i, ], /=, a, ;, }, return, ds, ;, }, public, DerivativeStructure, divide, (]
[), {, ds, ., data, [, i, ], /=, a, ;, }, return, ds, ;, }, public, DerivativeStructure, divide, (]
[/=, a, ;, }, return, ds, ;, }, public, DerivativeStructure, divide, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler]
[[, i, ], /=, a, ;, }, return, ds, ;, }, public, DerivativeStructure, divide, (, final, DerivativeStructure, a, ), throws]
[., data, [, i, ], /=, a, ;, }, return, ds, ;, }, public, DerivativeStructure, divide, (, final, DerivativeStructure, a]
[], /=, a, ;, }, return, ds, ;, }, public, DerivativeStructure, divide, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {]
[;, }, return, ds, ;, }, public, DerivativeStructure, divide, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility]
[;, }, public, DerivativeStructure, divide, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (, a, ., compiler]
[;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., divide, (, data, ,, 0, ,, a]
[., checkCompatibility, (, a, ., compiler, ), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., divide, (, data, ,, 0, ,]
[., compiler, ), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., divide, (, data, ,]
[;, compiler, ., divide, (, data, ,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,, 0]
[), ;, compiler, ., divide, (, data, ,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,]
[;, return, result, ;, }, public, DerivativeStructure, remainder, (, final, double, a, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure]
[., divide, (, data, ,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;]
[,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[,, a, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, remainder, (, final, double]
[., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, remainder, (]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, remainder, (, final, double, a, )]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, remainder, (, final, double, a, ), {, final, DerivativeStructure, ds]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, remainder, (, final, double, a, ), {, final]
[), ;, return, result, ;, }, public, DerivativeStructure, remainder, (, final, double, a, ), {, final, DerivativeStructure, ds, =, new]
[;, }, public, DerivativeStructure, remainder, (, final, double, a, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, this, )]
[;, ds, ., data, [, 0, ], =, FastMath, ., IEEEremainder, (, ds, ., data, [, 0, ], ,, a]
[), ;, ds, ., data, [, 0, ], =, FastMath, ., IEEEremainder, (, ds, ., data, [, 0, ], ,]
[=, FastMath, ., IEEEremainder, (, ds, ., data, [, 0, ], ,, a, ), ;, return, ds, ;, }, public]
[[, 0, ], =, FastMath, ., IEEEremainder, (, ds, ., data, [, 0, ], ,, a, ), ;, return, ds]
[., data, [, 0, ], =, FastMath, ., IEEEremainder, (, ds, ., data, [, 0, ], ,, a, ), ;]
[], =, FastMath, ., IEEEremainder, (, ds, ., data, [, 0, ], ,, a, ), ;, return, ds, ;, }]
[;, return, ds, ;, }, public, DerivativeStructure, remainder, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (]
[., IEEEremainder, (, ds, ., data, [, 0, ], ,, a, ), ;, return, ds, ;, }, public, DerivativeStructure, remainder]
[,, a, ), ;, return, ds, ;, }, public, DerivativeStructure, remainder, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler]
[[, 0, ], ,, a, ), ;, return, ds, ;, }, public, DerivativeStructure, remainder, (, final, DerivativeStructure, a, ), throws]
[., data, [, 0, ], ,, a, ), ;, return, ds, ;, }, public, DerivativeStructure, remainder, (, final, DerivativeStructure, a]
[], ,, a, ), ;, return, ds, ;, }, public, DerivativeStructure, remainder, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {]
[), ;, return, ds, ;, }, public, DerivativeStructure, remainder, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility]
[;, }, public, DerivativeStructure, remainder, (, final, DerivativeStructure, a, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (, a, ., compiler]
[;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., remainder, (, data, ,, 0, ,, a]
[., checkCompatibility, (, a, ., compiler, ), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., remainder, (, data, ,, 0, ,]
[., compiler, ), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., remainder, (, data, ,]
[;, compiler, ., remainder, (, data, ,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,, 0]
[), ;, compiler, ., remainder, (, data, ,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,]
[;, return, result, ;, }, public, DerivativeStructure, negate, (, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, compiler, )]
[., remainder, (, data, ,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;]
[,, 0, ,, a, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[,, a, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, negate, (, ), {]
[., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, negate, (]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, negate, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, negate, (, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, negate, (, ), {, final, DerivativeStructure, ds, =]
[), ;, return, result, ;, }, public, DerivativeStructure, negate, (, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, negate, (, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, compiler, ), ;, for, (]
[;, for, (, int, i, =, 0, ;, i, <, ds, ., data, ., length, ;, ++, i, ), {]
[), ;, for, (, int, i, =, 0, ;, i, <, ds, ., data, ., length, ;, ++, i, )]
[;, i, <, ds, ., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], =]
[;, ++, i, ), {, ds, ., data, [, i, ], =, -, data, [, i, ], ;, }, return]
[<, ds, ., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], =, -, data]
[;, ++, i, ), {, ds, ., data, [, i, ], =, -, data, [, i, ], ;, }, return]
[., length, ;, ++, i, ), {, ds, ., data, [, i, ], =, -, data, [, i, ], ;]
[., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], =, -, data, [, i]
[), {, ds, ., data, [, i, ], =, -, data, [, i, ], ;, }, return, ds, ;, }]
[), {, ds, ., data, [, i, ], =, -, data, [, i, ], ;, }, return, ds, ;, }]
[=, -, data, [, i, ], ;, }, return, ds, ;, }, public, DerivativeStructure, abs, (, ), {, if, (]
[[, i, ], =, -, data, [, i, ], ;, }, return, ds, ;, }, public, DerivativeStructure, abs, (, )]
[., data, [, i, ], =, -, data, [, i, ], ;, }, return, ds, ;, }, public, DerivativeStructure, abs]
[], =, -, data, [, i, ], ;, }, return, ds, ;, }, public, DerivativeStructure, abs, (, ), {, if]
[;, }, return, ds, ;, }, public, DerivativeStructure, abs, (, ), {, if, (, Double, ., doubleToLongBits, (, data, []
[;, }, return, ds, ;, }, public, DerivativeStructure, abs, (, ), {, if, (, Double, ., doubleToLongBits, (, data, []
[[, i, ], ;, }, return, ds, ;, }, public, DerivativeStructure, abs, (, ), {, if, (, Double, ., doubleToLongBits]
[], ;, }, return, ds, ;, }, public, DerivativeStructure, abs, (, ), {, if, (, Double, ., doubleToLongBits, (, data]
[;, }, public, DerivativeStructure, abs, (, ), {, if, (, Double, ., doubleToLongBits, (, data, [, 0, ], ), <]
[), {, return, negate, (, ), ;, }, else, {, return, this, ;, }, }, public, DerivativeStructure, ceil, (, )]
[<, 0, ), {, return, negate, (, ), ;, }, else, {, return, this, ;, }, }, public, DerivativeStructure, ceil]
[., doubleToLongBits, (, data, [, 0, ], ), <, 0, ), {, return, negate, (, ), ;, }, else, {]
[), <, 0, ), {, return, negate, (, ), ;, }, else, {, return, this, ;, }, }, public, DerivativeStructure]
[[, 0, ], ), <, 0, ), {, return, negate, (, ), ;, }, else, {, return, this, ;, }]
[], ), <, 0, ), {, return, negate, (, ), ;, }, else, {, return, this, ;, }, }, public]
[), {, return, negate, (, ), ;, }, else, {, return, this, ;, }, }, public, DerivativeStructure, ceil, (, )]
[;, }, else, {, return, this, ;, }, }, public, DerivativeStructure, ceil, (, ), {, return, new, DerivativeStructure, (, compiler]
[;, }, }, public, DerivativeStructure, ceil, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler]
[;, }, public, DerivativeStructure, floor, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, .]
[,, compiler, ., getOrder, (, ), ,, FastMath, ., ceil, (, data, [, 0, ], ), ), ;, }, public]
[., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, FastMath, ., ceil, (, data, [, 0, ], )]
[,, FastMath, ., ceil, (, data, [, 0, ], ), ), ;, }, public, DerivativeStructure, floor, (, ), {, return]
[., getOrder, (, ), ,, FastMath, ., ceil, (, data, [, 0, ], ), ), ;, }, public, DerivativeStructure, floor]
[), ;, }, public, DerivativeStructure, floor, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler]
[., ceil, (, data, [, 0, ], ), ), ;, }, public, DerivativeStructure, floor, (, ), {, return, new, DerivativeStructure]
[), ), ;, }, public, DerivativeStructure, floor, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,]
[[, 0, ], ), ), ;, }, public, DerivativeStructure, floor, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters]
[], ), ), ;, }, public, DerivativeStructure, floor, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, )]
[;, }, public, DerivativeStructure, rint, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, .]
[,, compiler, ., getOrder, (, ), ,, FastMath, ., floor, (, data, [, 0, ], ), ), ;, }, public]
[., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, FastMath, ., floor, (, data, [, 0, ], )]
[,, FastMath, ., floor, (, data, [, 0, ], ), ), ;, }, public, DerivativeStructure, rint, (, ), {, return]
[., getOrder, (, ), ,, FastMath, ., floor, (, data, [, 0, ], ), ), ;, }, public, DerivativeStructure, rint]
[), ;, }, public, DerivativeStructure, rint, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler]
[., floor, (, data, [, 0, ], ), ), ;, }, public, DerivativeStructure, rint, (, ), {, return, new, DerivativeStructure]
[), ), ;, }, public, DerivativeStructure, rint, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,]
[[, 0, ], ), ), ;, }, public, DerivativeStructure, rint, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters]
[], ), ), ;, }, public, DerivativeStructure, rint, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, )]
[;, }, public, long, round, (, ), {, return, FastMath, ., round, (, data, [, 0, ], ), ;, }]
[,, compiler, ., getOrder, (, ), ,, FastMath, ., rint, (, data, [, 0, ], ), ), ;, }, public]
[., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, FastMath, ., rint, (, data, [, 0, ], )]
[,, FastMath, ., rint, (, data, [, 0, ], ), ), ;, }, public, long, round, (, ), {, return]
[., getOrder, (, ), ,, FastMath, ., rint, (, data, [, 0, ], ), ), ;, }, public, long, round]
[), ;, }, public, long, round, (, ), {, return, FastMath, ., round, (, data, [, 0, ], ), ;]
[., rint, (, data, [, 0, ], ), ), ;, }, public, long, round, (, ), {, return, FastMath, .]
[), ), ;, }, public, long, round, (, ), {, return, FastMath, ., round, (, data, [, 0, ], )]
[[, 0, ], ), ), ;, }, public, long, round, (, ), {, return, FastMath, ., round, (, data, []
[], ), ), ;, }, public, long, round, (, ), {, return, FastMath, ., round, (, data, [, 0, ]]
[;, }, public, DerivativeStructure, signum, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, .]
[., round, (, data, [, 0, ], ), ;, }, public, DerivativeStructure, signum, (, ), {, return, new, DerivativeStructure, (]
[), ;, }, public, DerivativeStructure, signum, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler]
[[, 0, ], ), ;, }, public, DerivativeStructure, signum, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (]
[], ), ;, }, public, DerivativeStructure, signum, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,]
[;, }, public, DerivativeStructure, copySign, (, final, DerivativeStructure, sign, ), {, long, m, =, Double, ., doubleToLongBits, (, data, []
[,, compiler, ., getOrder, (, ), ,, FastMath, ., signum, (, data, [, 0, ], ), ), ;, }, public]
[., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, FastMath, ., signum, (, data, [, 0, ], )]
[,, FastMath, ., signum, (, data, [, 0, ], ), ), ;, }, public, DerivativeStructure, copySign, (, final, DerivativeStructure, sign]
[., getOrder, (, ), ,, FastMath, ., signum, (, data, [, 0, ], ), ), ;, }, public, DerivativeStructure, copySign]
[), ;, }, public, DerivativeStructure, copySign, (, final, DerivativeStructure, sign, ), {, long, m, =, Double, ., doubleToLongBits, (, data]
[., signum, (, data, [, 0, ], ), ), ;, }, public, DerivativeStructure, copySign, (, final, DerivativeStructure, sign, ), {]
[), ), ;, }, public, DerivativeStructure, copySign, (, final, DerivativeStructure, sign, ), {, long, m, =, Double, ., doubleToLongBits, (]
[[, 0, ], ), ), ;, }, public, DerivativeStructure, copySign, (, final, DerivativeStructure, sign, ), {, long, m, =, Double]
[], ), ), ;, }, public, DerivativeStructure, copySign, (, final, DerivativeStructure, sign, ), {, long, m, =, Double, ., doubleToLongBits]
[;, long, s, =, Double, ., doubleToLongBits, (, sign, ., data, [, 0, ], ), ;, if, (, (, m]
[., doubleToLongBits, (, data, [, 0, ], ), ;, long, s, =, Double, ., doubleToLongBits, (, sign, ., data, []
[), ;, long, s, =, Double, ., doubleToLongBits, (, sign, ., data, [, 0, ], ), ;, if, (, (]
[[, 0, ], ), ;, long, s, =, Double, ., doubleToLongBits, (, sign, ., data, [, 0, ], ), ;]
[], ), ;, long, s, =, Double, ., doubleToLongBits, (, sign, ., data, [, 0, ], ), ;, if, (]
[;, if, (, (, m, >=, 0, &&, s, >=, 0, ), ||, (, m, <, 0, &&, s, <]
[., doubleToLongBits, (, sign, ., data, [, 0, ], ), ;, if, (, (, m, >=, 0, &&, s, >=]
[), ;, if, (, (, m, >=, 0, &&, s, >=, 0, ), ||, (, m, <, 0, &&, s]
[[, 0, ], ), ;, if, (, (, m, >=, 0, &&, s, >=, 0, ), ||, (, m, <]
[., data, [, 0, ], ), ;, if, (, (, m, >=, 0, &&, s, >=, 0, ), ||, (]
[], ), ;, if, (, (, m, >=, 0, &&, s, >=, 0, ), ||, (, m, <, 0, &&]
[), {, return, this, ;, }, return, negate, (, ), ;, }, public, DerivativeStructure, copySign, (, final, double, sign, )]
[||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (, )]
[), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (]
[&&, s, >=, 0, ), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;]
[>=, 0, &&, s, >=, 0, ), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return]
[&&, s, >=, 0, ), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;]
[), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (]
[>=, 0, ), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;, }, return]
[), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (]
[), {, return, this, ;, }, return, negate, (, ), ;, }, public, DerivativeStructure, copySign, (, final, double, sign, )]
[), ), {, return, this, ;, }, return, negate, (, ), ;, }, public, DerivativeStructure, copySign, (, final, double, sign]
[&&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (, ), ;, }, public, DerivativeStructure, copySign]
[<, 0, &&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (, ), ;, }, public]
[&&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (, ), ;, }, public, DerivativeStructure, copySign]
[), ), {, return, this, ;, }, return, negate, (, ), ;, }, public, DerivativeStructure, copySign, (, final, double, sign]
[<, 0, ), ), {, return, this, ;, }, return, negate, (, ), ;, }, public, DerivativeStructure, copySign, (, final]
[), ), {, return, this, ;, }, return, negate, (, ), ;, }, public, DerivativeStructure, copySign, (, final, double, sign]
[;, }, return, negate, (, ), ;, }, public, DerivativeStructure, copySign, (, final, double, sign, ), {, long, m, =]
[;, }, public, DerivativeStructure, copySign, (, final, double, sign, ), {, long, m, =, Double, ., doubleToLongBits, (, data, []
[;, long, s, =, Double, ., doubleToLongBits, (, sign, ), ;, if, (, (, m, >=, 0, &&, s, >=]
[., doubleToLongBits, (, data, [, 0, ], ), ;, long, s, =, Double, ., doubleToLongBits, (, sign, ), ;, if]
[), ;, long, s, =, Double, ., doubleToLongBits, (, sign, ), ;, if, (, (, m, >=, 0, &&, s]
[[, 0, ], ), ;, long, s, =, Double, ., doubleToLongBits, (, sign, ), ;, if, (, (, m, >=]
[], ), ;, long, s, =, Double, ., doubleToLongBits, (, sign, ), ;, if, (, (, m, >=, 0, &&]
[;, if, (, (, m, >=, 0, &&, s, >=, 0, ), ||, (, m, <, 0, &&, s, <]
[., doubleToLongBits, (, sign, ), ;, if, (, (, m, >=, 0, &&, s, >=, 0, ), ||, (, m]
[), ;, if, (, (, m, >=, 0, &&, s, >=, 0, ), ||, (, m, <, 0, &&, s]
[), {, return, this, ;, }, return, negate, (, ), ;, }, public, int, getExponent, (, ), {, return, FastMath]
[||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (, )]
[), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (]
[&&, s, >=, 0, ), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;]
[>=, 0, &&, s, >=, 0, ), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return]
[&&, s, >=, 0, ), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;]
[), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (]
[>=, 0, ), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;, }, return]
[), ||, (, m, <, 0, &&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (]
[), {, return, this, ;, }, return, negate, (, ), ;, }, public, int, getExponent, (, ), {, return, FastMath]
[), ), {, return, this, ;, }, return, negate, (, ), ;, }, public, int, getExponent, (, ), {, return]
[&&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (, ), ;, }, public, int, getExponent]
[<, 0, &&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (, ), ;, }, public]
[&&, s, <, 0, ), ), {, return, this, ;, }, return, negate, (, ), ;, }, public, int, getExponent]
[), ), {, return, this, ;, }, return, negate, (, ), ;, }, public, int, getExponent, (, ), {, return]
[<, 0, ), ), {, return, this, ;, }, return, negate, (, ), ;, }, public, int, getExponent, (, )]
[), ), {, return, this, ;, }, return, negate, (, ), ;, }, public, int, getExponent, (, ), {, return]
[;, }, return, negate, (, ), ;, }, public, int, getExponent, (, ), {, return, FastMath, ., getExponent, (, data]
[;, }, public, int, getExponent, (, ), {, return, FastMath, ., getExponent, (, data, [, 0, ], ), ;, }]
[;, }, public, DerivativeStructure, scalb, (, final, int, n, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, compiler, )]
[., getExponent, (, data, [, 0, ], ), ;, }, public, DerivativeStructure, scalb, (, final, int, n, ), {, final]
[), ;, }, public, DerivativeStructure, scalb, (, final, int, n, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, compiler]
[[, 0, ], ), ;, }, public, DerivativeStructure, scalb, (, final, int, n, ), {, final, DerivativeStructure, ds, =, new]
[], ), ;, }, public, DerivativeStructure, scalb, (, final, int, n, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (]
[;, for, (, int, i, =, 0, ;, i, <, ds, ., data, ., length, ;, ++, i, ), {]
[), ;, for, (, int, i, =, 0, ;, i, <, ds, ., data, ., length, ;, ++, i, )]
[;, i, <, ds, ., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], =]
[;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, ., scalb, (, data, [, i, ]]
[<, ds, ., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, .]
[;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, ., scalb, (, data, [, i, ]]
[., length, ;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, ., scalb, (, data, []
[., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, ., scalb, (]
[), {, ds, ., data, [, i, ], =, FastMath, ., scalb, (, data, [, i, ], ,, n, )]
[), {, ds, ., data, [, i, ], =, FastMath, ., scalb, (, data, [, i, ], ,, n, )]
[=, FastMath, ., scalb, (, data, [, i, ], ,, n, ), ;, }, return, ds, ;, }, public, DerivativeStructure]
[[, i, ], =, FastMath, ., scalb, (, data, [, i, ], ,, n, ), ;, }, return, ds, ;]
[., data, [, i, ], =, FastMath, ., scalb, (, data, [, i, ], ,, n, ), ;, }, return]
[], =, FastMath, ., scalb, (, data, [, i, ], ,, n, ), ;, }, return, ds, ;, }, public]
[;, }, return, ds, ;, }, public, DerivativeStructure, hypot, (, final, DerivativeStructure, y, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility]
[., scalb, (, data, [, i, ], ,, n, ), ;, }, return, ds, ;, }, public, DerivativeStructure, hypot, (]
[,, n, ), ;, }, return, ds, ;, }, public, DerivativeStructure, hypot, (, final, DerivativeStructure, y, ), throws, DimensionMismatchException, {]
[[, i, ], ,, n, ), ;, }, return, ds, ;, }, public, DerivativeStructure, hypot, (, final, DerivativeStructure, y, )]
[], ,, n, ), ;, }, return, ds, ;, }, public, DerivativeStructure, hypot, (, final, DerivativeStructure, y, ), throws, DimensionMismatchException]
[), ;, }, return, ds, ;, }, public, DerivativeStructure, hypot, (, final, DerivativeStructure, y, ), throws, DimensionMismatchException, {, compiler, .]
[;, }, public, DerivativeStructure, hypot, (, final, DerivativeStructure, y, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (, y, ., compiler]
[;, if, (, Double, ., isInfinite, (, data, [, 0, ], ), ||, Double, ., isInfinite, (, y, ., data]
[., checkCompatibility, (, y, ., compiler, ), ;, if, (, Double, ., isInfinite, (, data, [, 0, ], ), ||]
[), ;, if, (, Double, ., isInfinite, (, data, [, 0, ], ), ||, Double, ., isInfinite, (, y, .]
[., compiler, ), ;, if, (, Double, ., isInfinite, (, data, [, 0, ], ), ||, Double, ., isInfinite, (]
[), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (, ), ,, Double, .]
[||, Double, ., isInfinite, (, y, ., data, [, 0, ], ), ), {, return, new, DerivativeStructure, (, compiler, .]
[., isInfinite, (, data, [, 0, ], ), ||, Double, ., isInfinite, (, y, ., data, [, 0, ], )]
[), ||, Double, ., isInfinite, (, y, ., data, [, 0, ], ), ), {, return, new, DerivativeStructure, (, compiler]
[[, 0, ], ), ||, Double, ., isInfinite, (, y, ., data, [, 0, ], ), ), {, return, new]
[], ), ||, Double, ., isInfinite, (, y, ., data, [, 0, ], ), ), {, return, new, DerivativeStructure, (]
[), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (, ), ,, Double, .]
[., isInfinite, (, y, ., data, [, 0, ], ), ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (]
[), ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (, ), ,, Double]
[[, 0, ], ), ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (]
[., data, [, 0, ], ), ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, .]
[], ), ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (, ), ,]
[;, }, else, if, (, Double, ., isNaN, (, data, [, 0, ], ), ||, Double, ., isNaN, (, y]
[,, compiler, ., getFreeParameters, (, ), ,, Double, ., POSITIVE_INFINITY, ), ;, }, else, if, (, Double, ., isNaN, (]
[., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (, ), ,, Double, ., POSITIVE_INFINITY, ), ;, }, else, if, (]
[,, Double, ., POSITIVE_INFINITY, ), ;, }, else, if, (, Double, ., isNaN, (, data, [, 0, ], ), ||]
[., getFreeParameters, (, ), ,, Double, ., POSITIVE_INFINITY, ), ;, }, else, if, (, Double, ., isNaN, (, data, []
[), ;, }, else, if, (, Double, ., isNaN, (, data, [, 0, ], ), ||, Double, ., isNaN, (]
[., POSITIVE_INFINITY, ), ;, }, else, if, (, Double, ., isNaN, (, data, [, 0, ], ), ||, Double, .]
[), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (, ), ,, Double, .]
[||, Double, ., isNaN, (, y, ., data, [, 0, ], ), ), {, return, new, DerivativeStructure, (, compiler, .]
[., isNaN, (, data, [, 0, ], ), ||, Double, ., isNaN, (, y, ., data, [, 0, ], )]
[), ||, Double, ., isNaN, (, y, ., data, [, 0, ], ), ), {, return, new, DerivativeStructure, (, compiler]
[[, 0, ], ), ||, Double, ., isNaN, (, y, ., data, [, 0, ], ), ), {, return, new]
[], ), ||, Double, ., isNaN, (, y, ., data, [, 0, ], ), ), {, return, new, DerivativeStructure, (]
[), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (, ), ,, Double, .]
[., isNaN, (, y, ., data, [, 0, ], ), ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (]
[), ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (, ), ,, Double]
[[, 0, ], ), ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (]
[., data, [, 0, ], ), ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, .]
[], ), ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (, ), ,]
[;, }, else, {, final, int, expX, =, getExponent, (, ), ;, final, int, expY, =, y, ., getExponent, (]
[,, compiler, ., getFreeParameters, (, ), ,, Double, ., NaN, ), ;, }, else, {, final, int, expX, =, getExponent]
[., getFreeParameters, (, ), ,, compiler, ., getFreeParameters, (, ), ,, Double, ., NaN, ), ;, }, else, {, final]
[,, Double, ., NaN, ), ;, }, else, {, final, int, expX, =, getExponent, (, ), ;, final, int, expY]
[., getFreeParameters, (, ), ,, Double, ., NaN, ), ;, }, else, {, final, int, expX, =, getExponent, (, )]
[), ;, }, else, {, final, int, expX, =, getExponent, (, ), ;, final, int, expY, =, y, ., getExponent]
[., NaN, ), ;, }, else, {, final, int, expX, =, getExponent, (, ), ;, final, int, expY, =, y]
[;, final, int, expY, =, y, ., getExponent, (, ), ;, if, (, expX, >, expY, +, 27, ), {]
[;, if, (, expX, >, expY, +, 27, ), {, return, abs, (, ), ;, }, else, if, (, expY]
[., getExponent, (, ), ;, if, (, expX, >, expY, +, 27, ), {, return, abs, (, ), ;, }]
[), {, return, abs, (, ), ;, }, else, if, (, expY, >, expX, +, 27, ), {, return, y]
[>, expY, +, 27, ), {, return, abs, (, ), ;, }, else, if, (, expY, >, expX, +, 27]
[), {, return, abs, (, ), ;, }, else, if, (, expY, >, expX, +, 27, ), {, return, y]
[+, 27, ), {, return, abs, (, ), ;, }, else, if, (, expY, >, expX, +, 27, ), {]
[), {, return, abs, (, ), ;, }, else, if, (, expY, >, expX, +, 27, ), {, return, y]
[;, }, else, if, (, expY, >, expX, +, 27, ), {, return, y, ., abs, (, ), ;, }]
[), {, return, y, ., abs, (, ), ;, }, else, {, final, int, middleExp, =, (, expX, +, expY]
[>, expX, +, 27, ), {, return, y, ., abs, (, ), ;, }, else, {, final, int, middleExp, =]
[), {, return, y, ., abs, (, ), ;, }, else, {, final, int, middleExp, =, (, expX, +, expY]
[+, 27, ), {, return, y, ., abs, (, ), ;, }, else, {, final, int, middleExp, =, (, expX]
[), {, return, y, ., abs, (, ), ;, }, else, {, final, int, middleExp, =, (, expX, +, expY]
[;, }, else, {, final, int, middleExp, =, (, expX, +, expY, ), /, 2, ;, final, DerivativeStructure, scaledX, =]
[., abs, (, ), ;, }, else, {, final, int, middleExp, =, (, expX, +, expY, ), /, 2, ;]
[;, final, DerivativeStructure, scaledX, =, scalb, (, -, middleExp, ), ;, final, DerivativeStructure, scaledY, =, y, ., scalb, (, -]
[/, 2, ;, final, DerivativeStructure, scaledX, =, scalb, (, -, middleExp, ), ;, final, DerivativeStructure, scaledY, =, y, ., scalb]
[), /, 2, ;, final, DerivativeStructure, scaledX, =, scalb, (, -, middleExp, ), ;, final, DerivativeStructure, scaledY, =, y, .]
[+, expY, ), /, 2, ;, final, DerivativeStructure, scaledX, =, scalb, (, -, middleExp, ), ;, final, DerivativeStructure, scaledY, =]
[), /, 2, ;, final, DerivativeStructure, scaledX, =, scalb, (, -, middleExp, ), ;, final, DerivativeStructure, scaledY, =, y, .]
[;, final, DerivativeStructure, scaledX, =, scalb, (, -, middleExp, ), ;, final, DerivativeStructure, scaledY, =, y, ., scalb, (, -]
[;, final, DerivativeStructure, scaledY, =, y, ., scalb, (, -, middleExp, ), ;, final, DerivativeStructure, scaledH, =, scaledX, ., multiply]
[), ;, final, DerivativeStructure, scaledY, =, y, ., scalb, (, -, middleExp, ), ;, final, DerivativeStructure, scaledH, =, scaledX, .]
[), ;, final, DerivativeStructure, scaledY, =, y, ., scalb, (, -, middleExp, ), ;, final, DerivativeStructure, scaledH, =, scaledX, .]
[;, final, DerivativeStructure, scaledH, =, scaledX, ., multiply, (, scaledX, ), ., add, (, scaledY, ., multiply, (, scaledY, )]
[., scalb, (, -, middleExp, ), ;, final, DerivativeStructure, scaledH, =, scaledX, ., multiply, (, scaledX, ), ., add, (]
[), ;, final, DerivativeStructure, scaledH, =, scaledX, ., multiply, (, scaledX, ), ., add, (, scaledY, ., multiply, (, scaledY]
[), ;, final, DerivativeStructure, scaledH, =, scaledX, ., multiply, (, scaledX, ), ., add, (, scaledY, ., multiply, (, scaledY]
[;, return, scaledH, ., scalb, (, middleExp, ), ;, }, }, }, public, static, DerivativeStructure, hypot, (, final, DerivativeStructure, x]
[., sqrt, (, ), ;, return, scaledH, ., scalb, (, middleExp, ), ;, }, }, }, public, static, DerivativeStructure, hypot]
[., add, (, scaledY, ., multiply, (, scaledY, ), ), ., sqrt, (, ), ;, return, scaledH, ., scalb, (]
[., multiply, (, scaledX, ), ., add, (, scaledY, ., multiply, (, scaledY, ), ), ., sqrt, (, ), ;]
[), ., add, (, scaledY, ., multiply, (, scaledY, ), ), ., sqrt, (, ), ;, return, scaledH, ., scalb]
[), ., sqrt, (, ), ;, return, scaledH, ., scalb, (, middleExp, ), ;, }, }, }, public, static, DerivativeStructure]
[., multiply, (, scaledY, ), ), ., sqrt, (, ), ;, return, scaledH, ., scalb, (, middleExp, ), ;, }]
[), ), ., sqrt, (, ), ;, return, scaledH, ., scalb, (, middleExp, ), ;, }, }, }, public, static]
[;, }, }, }, public, static, DerivativeStructure, hypot, (, final, DerivativeStructure, x, ,, final, DerivativeStructure, y, ), throws, DimensionMismatchException, {]
[., scalb, (, middleExp, ), ;, }, }, }, public, static, DerivativeStructure, hypot, (, final, DerivativeStructure, x, ,, final, DerivativeStructure]
[), ;, }, }, }, public, static, DerivativeStructure, hypot, (, final, DerivativeStructure, x, ,, final, DerivativeStructure, y, ), throws, DimensionMismatchException]
[;, }, public, DerivativeStructure, compose, (, final, double, ..., f, ), throws, DimensionMismatchException, {, if, (, f, ., length, !=]
[., hypot, (, y, ), ;, }, public, DerivativeStructure, compose, (, final, double, ..., f, ), throws, DimensionMismatchException, {, if]
[), ;, }, public, DerivativeStructure, compose, (, final, double, ..., f, ), throws, DimensionMismatchException, {, if, (, f, ., length]
[), {, throw, new, DimensionMismatchException, (, f, ., length, ,, getOrder, (, ), +, 1, ), ;, }, final, DerivativeStructure]
[!=, getOrder, (, ), +, 1, ), {, throw, new, DimensionMismatchException, (, f, ., length, ,, getOrder, (, ), +]
[., length, !=, getOrder, (, ), +, 1, ), {, throw, new, DimensionMismatchException, (, f, ., length, ,, getOrder, (]
[), {, throw, new, DimensionMismatchException, (, f, ., length, ,, getOrder, (, ), +, 1, ), ;, }, final, DerivativeStructure]
[+, 1, ), {, throw, new, DimensionMismatchException, (, f, ., length, ,, getOrder, (, ), +, 1, ), ;, }]
[), {, throw, new, DimensionMismatchException, (, f, ., length, ,, getOrder, (, ), +, 1, ), ;, }, final, DerivativeStructure]
[;, }, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., compose, (, data, ,, 0, ,]
[,, getOrder, (, ), +, 1, ), ;, }, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler]
[., length, ,, getOrder, (, ), +, 1, ), ;, }, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[), ;, }, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., compose, (, data, ,, 0]
[+, 1, ), ;, }, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., compose, (, data]
[), ;, }, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., compose, (, data, ,, 0]
[;, compiler, ., compose, (, data, ,, 0, ,, f, ,, result, ., data, ,, 0, ), ;, return, result]
[), ;, compiler, ., compose, (, data, ,, 0, ,, f, ,, result, ., data, ,, 0, ), ;, return]
[;, return, result, ;, }, public, DerivativeStructure, reciprocal, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., compose, (, data, ,, 0, ,, f, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[,, 0, ,, f, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, reciprocal, (]
[,, f, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, reciprocal, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, reciprocal, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, reciprocal, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, reciprocal, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, reciprocal, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, reciprocal, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., pow, (, data, ,, 0, ,, -, 1, ,, result, ., data, ,, 0, ), ;, return]
[), ;, compiler, ., pow, (, data, ,, 0, ,, -, 1, ,, result, ., data, ,, 0, ), ;]
[;, return, result, ;, }, public, DerivativeStructure, sqrt, (, ), {, return, rootN, (, 2, ), ;, }, public, DerivativeStructure]
[., pow, (, data, ,, 0, ,, -, 1, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[,, 0, ,, -, 1, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sqrt]
[,, -, 1, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sqrt, (, )]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sqrt, (, ), {, return, rootN]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sqrt, (, ), {, return, rootN]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sqrt, (, ), {, return, rootN, (, 2, ), ;]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sqrt, (, ), {, return, rootN, (, 2]
[), ;, return, result, ;, }, public, DerivativeStructure, sqrt, (, ), {, return, rootN, (, 2, ), ;, }, public]
[;, }, public, DerivativeStructure, sqrt, (, ), {, return, rootN, (, 2, ), ;, }, public, DerivativeStructure, cbrt, (, )]
[;, }, public, DerivativeStructure, cbrt, (, ), {, return, rootN, (, 3, ), ;, }, public, DerivativeStructure, rootN, (, final]
[), ;, }, public, DerivativeStructure, cbrt, (, ), {, return, rootN, (, 3, ), ;, }, public, DerivativeStructure, rootN, (]
[;, }, public, DerivativeStructure, rootN, (, final, int, n, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[), ;, }, public, DerivativeStructure, rootN, (, final, int, n, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, compiler, ., rootN, (, data, ,, 0, ,, n, ,, result, ., data, ,, 0, ), ;, return, result]
[), ;, compiler, ., rootN, (, data, ,, 0, ,, n, ,, result, ., data, ,, 0, ), ;, return]
[;, return, result, ;, }, public, Field, <, DerivativeStructure, >, getField, (, ), {, return, new, Field, <, DerivativeStructure, >]
[., rootN, (, data, ,, 0, ,, n, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[,, 0, ,, n, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, Field, <, DerivativeStructure]
[,, n, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, Field, <, DerivativeStructure, >, getField]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, Field, <, DerivativeStructure, >, getField, (, )]
[,, 0, ), ;, return, result, ;, }, public, Field, <, DerivativeStructure, >, getField, (, ), {, return, new, Field]
[., data, ,, 0, ), ;, return, result, ;, }, public, Field, <, DerivativeStructure, >, getField, (, ), {, return]
[), ;, return, result, ;, }, public, Field, <, DerivativeStructure, >, getField, (, ), {, return, new, Field, <, DerivativeStructure]
[;, }, public, Field, <, DerivativeStructure, >, getField, (, ), {, return, new, Field, <, DerivativeStructure, >, (, ), {]
[;, }, public, static, DerivativeStructure, pow, (, final, double, a, ,, final, DerivativeStructure, x, ), {, final, DerivativeStructure, result, =]
[;, }, public, DerivativeStructure, getOne, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler, .]
[,, compiler, ., getOrder, (, ), ,, 0.0, ), ;, }, public, DerivativeStructure, getOne, (, ), {, return, new, DerivativeStructure]
[., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, 0.0, ), ;, }, public, DerivativeStructure, getOne, (, )]
[,, 0.0, ), ;, }, public, DerivativeStructure, getOne, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, )]
[., getOrder, (, ), ,, 0.0, ), ;, }, public, DerivativeStructure, getOne, (, ), {, return, new, DerivativeStructure, (, compiler]
[), ;, }, public, DerivativeStructure, getOne, (, ), {, return, new, DerivativeStructure, (, compiler, ., getFreeParameters, (, ), ,, compiler]
[;, }, public, Class, <, ?, extends, FieldElement, <, DerivativeStructure, >, >, getRuntimeClass, (, ), {, return, DerivativeStructure, ., class]
[,, compiler, ., getOrder, (, ), ,, 1.0, ), ;, }, public, Class, <, ?, extends, FieldElement, <, DerivativeStructure, >]
[., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, 1.0, ), ;, }, public, Class, <, ?, extends]
[,, 1.0, ), ;, }, public, Class, <, ?, extends, FieldElement, <, DerivativeStructure, >, >, getRuntimeClass, (, ), {, return]
[., getOrder, (, ), ,, 1.0, ), ;, }, public, Class, <, ?, extends, FieldElement, <, DerivativeStructure, >, >, getRuntimeClass]
[), ;, }, public, Class, <, ?, extends, FieldElement, <, DerivativeStructure, >, >, getRuntimeClass, (, ), {, return, DerivativeStructure, .]
[;, }, }, ;, }, public, static, DerivativeStructure, pow, (, final, double, a, ,, final, DerivativeStructure, x, ), {, final]
[;, x, ., compiler, ., pow, (, a, ,, x, ., data, ,, 0, ,, result, ., data, ,, 0]
[), ;, x, ., compiler, ., pow, (, a, ,, x, ., data, ,, 0, ,, result, ., data, ,]
[., compiler, ), ;, x, ., compiler, ., pow, (, a, ,, x, ., data, ,, 0, ,, result, .]
[;, return, result, ;, }, public, DerivativeStructure, pow, (, final, double, p, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., pow, (, a, ,, x, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result]
[., compiler, ., pow, (, a, ,, x, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;]
[,, x, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, double]
[., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, double, p, )]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, double, p, ), {, final, DerivativeStructure, result]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, double, p, ), {, final]
[), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, double, p, ), {, final, DerivativeStructure, result, =, new]
[;, }, public, DerivativeStructure, pow, (, final, double, p, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[;, compiler, ., pow, (, data, ,, 0, ,, p, ,, result, ., data, ,, 0, ), ;, return, result]
[), ;, compiler, ., pow, (, data, ,, 0, ,, p, ,, result, ., data, ,, 0, ), ;, return]
[;, return, result, ;, }, public, DerivativeStructure, pow, (, final, int, n, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., pow, (, data, ,, 0, ,, p, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[,, 0, ,, p, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (]
[,, p, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, int]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, int, n, )]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, int, n, ), {, final, DerivativeStructure, result]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, int, n, ), {, final]
[), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, int, n, ), {, final, DerivativeStructure, result, =, new]
[;, }, public, DerivativeStructure, pow, (, final, int, n, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[;, compiler, ., pow, (, data, ,, 0, ,, n, ,, result, ., data, ,, 0, ), ;, return, result]
[), ;, compiler, ., pow, (, data, ,, 0, ,, n, ,, result, ., data, ,, 0, ), ;, return]
[;, return, result, ;, }, public, DerivativeStructure, pow, (, final, DerivativeStructure, e, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (]
[., pow, (, data, ,, 0, ,, n, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[,, 0, ,, n, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (]
[,, n, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, DerivativeStructure]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, DerivativeStructure, e, )]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, DerivativeStructure, e, ), throws, DimensionMismatchException, {, compiler]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, DerivativeStructure, e, ), throws, DimensionMismatchException]
[), ;, return, result, ;, }, public, DerivativeStructure, pow, (, final, DerivativeStructure, e, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility]
[;, }, public, DerivativeStructure, pow, (, final, DerivativeStructure, e, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (, e, ., compiler]
[;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., pow, (, data, ,, 0, ,, e]
[., checkCompatibility, (, e, ., compiler, ), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., pow, (, data, ,, 0, ,]
[., compiler, ), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., pow, (, data, ,]
[;, compiler, ., pow, (, data, ,, 0, ,, e, ., data, ,, 0, ,, result, ., data, ,, 0]
[), ;, compiler, ., pow, (, data, ,, 0, ,, e, ., data, ,, 0, ,, result, ., data, ,]
[;, return, result, ;, }, public, DerivativeStructure, exp, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., pow, (, data, ,, 0, ,, e, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;]
[,, 0, ,, e, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[,, e, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, exp, (, ), {]
[., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, exp, (]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, exp, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, exp, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, exp, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, exp, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, exp, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., exp, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., exp, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, expm1, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., exp, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, expm1, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, expm1, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, expm1, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, expm1, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, expm1, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, expm1, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., expm1, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., expm1, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, log, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., expm1, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, log, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, log, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, log, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, log, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, log, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, log, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., log, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., log, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, log1p, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., log, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, log1p, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, log1p, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, log1p, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, log1p, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, log1p, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, log1p, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., log1p, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., log1p, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, log10, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., log1p, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, log10, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, log10, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, log10, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, log10, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, log10, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, log10, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., log10, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., log10, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, cos, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., log10, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, cos, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, cos, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, cos, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, cos, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, cos, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, cos, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., cos, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., cos, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, sin, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., cos, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sin, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sin, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sin, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sin, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, sin, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, sin, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., sin, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., sin, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, tan, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., sin, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, tan, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, tan, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, tan, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, tan, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, tan, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, tan, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., tan, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., tan, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, acos, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., tan, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, acos, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, acos, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, acos, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, acos, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, acos, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, acos, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., acos, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., acos, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, asin, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., acos, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, asin, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, asin, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, asin, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, asin, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, asin, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, asin, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., asin, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., asin, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, atan, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., asin, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, atan, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, atan, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, atan, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, atan, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, atan, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, atan, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., atan, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., atan, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, atan2, (, final, DerivativeStructure, x, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (]
[., atan, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, atan2, (, final, DerivativeStructure]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, atan2, (, final, DerivativeStructure, x, )]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, atan2, (, final, DerivativeStructure, x, ), throws, DimensionMismatchException, {, compiler]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, atan2, (, final, DerivativeStructure, x, ), throws, DimensionMismatchException]
[), ;, return, result, ;, }, public, DerivativeStructure, atan2, (, final, DerivativeStructure, x, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility]
[;, }, public, DerivativeStructure, atan2, (, final, DerivativeStructure, x, ), throws, DimensionMismatchException, {, compiler, ., checkCompatibility, (, x, ., compiler]
[;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., atan2, (, data, ,, 0, ,, x]
[., checkCompatibility, (, x, ., compiler, ), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., atan2, (, data, ,, 0, ,]
[., compiler, ), ;, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, ., atan2, (, data, ,]
[;, compiler, ., atan2, (, data, ,, 0, ,, x, ., data, ,, 0, ,, result, ., data, ,, 0]
[), ;, compiler, ., atan2, (, data, ,, 0, ,, x, ., data, ,, 0, ,, result, ., data, ,]
[;, return, result, ;, }, public, static, DerivativeStructure, atan2, (, final, DerivativeStructure, y, ,, final, DerivativeStructure, x, ), throws, DimensionMismatchException]
[., atan2, (, data, ,, 0, ,, x, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;]
[,, 0, ,, x, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[,, x, ., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, static]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, static, DerivativeStructure, atan2, (, final]
[., data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, static, DerivativeStructure, atan2]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, static, DerivativeStructure, atan2, (, final, DerivativeStructure, y]
[,, 0, ), ;, return, result, ;, }, public, static, DerivativeStructure, atan2, (, final, DerivativeStructure, y, ,, final, DerivativeStructure, x]
[., data, ,, 0, ), ;, return, result, ;, }, public, static, DerivativeStructure, atan2, (, final, DerivativeStructure, y, ,, final]
[), ;, return, result, ;, }, public, static, DerivativeStructure, atan2, (, final, DerivativeStructure, y, ,, final, DerivativeStructure, x, ), throws]
[;, }, public, static, DerivativeStructure, atan2, (, final, DerivativeStructure, y, ,, final, DerivativeStructure, x, ), throws, DimensionMismatchException, {, return, y]
[;, }, public, DerivativeStructure, cosh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[., atan2, (, x, ), ;, }, public, DerivativeStructure, cosh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (]
[), ;, }, public, DerivativeStructure, cosh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler]
[;, compiler, ., cosh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., cosh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, sinh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., cosh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sinh, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sinh, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sinh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, sinh, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, sinh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, sinh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., sinh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., sinh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, tanh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., sinh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, tanh, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, tanh, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, tanh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, tanh, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, tanh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, tanh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., tanh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., tanh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, acosh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., tanh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, acosh, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, acosh, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, acosh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, acosh, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, acosh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, acosh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., acosh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., acosh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, asinh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., acosh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, asinh, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, asinh, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, asinh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, asinh, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, asinh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, asinh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., asinh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., asinh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, atanh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, )]
[., asinh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, atanh, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, atanh, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, atanh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, atanh, (, ), {, final, DerivativeStructure, result, =]
[), ;, return, result, ;, }, public, DerivativeStructure, atanh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, atanh, (, ), {, final, DerivativeStructure, result, =, new, DerivativeStructure, (, compiler, ), ;, compiler, .]
[;, compiler, ., atanh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }]
[), ;, compiler, ., atanh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;]
[;, return, result, ;, }, public, DerivativeStructure, toDegrees, (, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, compiler, )]
[., atanh, (, data, ,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure]
[,, 0, ,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, toDegrees, (, ), {]
[,, result, ., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, toDegrees, (, ), {, final, DerivativeStructure]
[,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, toDegrees, (, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure]
[., data, ,, 0, ), ;, return, result, ;, }, public, DerivativeStructure, toDegrees, (, ), {, final, DerivativeStructure, ds, =]
[), ;, return, result, ;, }, public, DerivativeStructure, toDegrees, (, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, compiler]
[;, }, public, DerivativeStructure, toDegrees, (, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, compiler, ), ;, for, (]
[;, for, (, int, i, =, 0, ;, i, <, ds, ., data, ., length, ;, ++, i, ), {]
[), ;, for, (, int, i, =, 0, ;, i, <, ds, ., data, ., length, ;, ++, i, )]
[;, i, <, ds, ., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], =]
[;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, ., toDegrees, (, data, [, i, ]]
[<, ds, ., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, .]
[;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, ., toDegrees, (, data, [, i, ]]
[., length, ;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, ., toDegrees, (, data, []
[., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, ., toDegrees, (]
[), {, ds, ., data, [, i, ], =, FastMath, ., toDegrees, (, data, [, i, ], ), ;, }]
[), {, ds, ., data, [, i, ], =, FastMath, ., toDegrees, (, data, [, i, ], ), ;, }]
[=, FastMath, ., toDegrees, (, data, [, i, ], ), ;, }, return, ds, ;, }, public, DerivativeStructure, toRadians, (]
[[, i, ], =, FastMath, ., toDegrees, (, data, [, i, ], ), ;, }, return, ds, ;, }, public]
[., data, [, i, ], =, FastMath, ., toDegrees, (, data, [, i, ], ), ;, }, return, ds, ;]
[], =, FastMath, ., toDegrees, (, data, [, i, ], ), ;, }, return, ds, ;, }, public, DerivativeStructure, toRadians]
[;, }, return, ds, ;, }, public, DerivativeStructure, toRadians, (, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, compiler]
[., toDegrees, (, data, [, i, ], ), ;, }, return, ds, ;, }, public, DerivativeStructure, toRadians, (, ), {]
[), ;, }, return, ds, ;, }, public, DerivativeStructure, toRadians, (, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (]
[[, i, ], ), ;, }, return, ds, ;, }, public, DerivativeStructure, toRadians, (, ), {, final, DerivativeStructure, ds, =]
[], ), ;, }, return, ds, ;, }, public, DerivativeStructure, toRadians, (, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure]
[;, }, public, DerivativeStructure, toRadians, (, ), {, final, DerivativeStructure, ds, =, new, DerivativeStructure, (, compiler, ), ;, for, (]
[;, for, (, int, i, =, 0, ;, i, <, ds, ., data, ., length, ;, ++, i, ), {]
[), ;, for, (, int, i, =, 0, ;, i, <, ds, ., data, ., length, ;, ++, i, )]
[;, i, <, ds, ., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], =]
[;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, ., toRadians, (, data, [, i, ]]
[<, ds, ., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, .]
[;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, ., toRadians, (, data, [, i, ]]
[., length, ;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, ., toRadians, (, data, []
[., data, ., length, ;, ++, i, ), {, ds, ., data, [, i, ], =, FastMath, ., toRadians, (]
[), {, ds, ., data, [, i, ], =, FastMath, ., toRadians, (, data, [, i, ], ), ;, }]
[), {, ds, ., data, [, i, ], =, FastMath, ., toRadians, (, data, [, i, ], ), ;, }]
[=, FastMath, ., toRadians, (, data, [, i, ], ), ;, }, return, ds, ;, }, public, double, taylor, (]
[[, i, ], =, FastMath, ., toRadians, (, data, [, i, ], ), ;, }, return, ds, ;, }, public]
[., data, [, i, ], =, FastMath, ., toRadians, (, data, [, i, ], ), ;, }, return, ds, ;]
[], =, FastMath, ., toRadians, (, data, [, i, ], ), ;, }, return, ds, ;, }, public, double, taylor]
[;, }, return, ds, ;, }, public, double, taylor, (, final, double, ..., delta, ), throws, MathArithmeticException, {, return, compiler]
[., toRadians, (, data, [, i, ], ), ;, }, return, ds, ;, }, public, double, taylor, (, final, double]
[), ;, }, return, ds, ;, }, public, double, taylor, (, final, double, ..., delta, ), throws, MathArithmeticException, {, return]
[[, i, ], ), ;, }, return, ds, ;, }, public, double, taylor, (, final, double, ..., delta, ), throws]
[], ), ;, }, return, ds, ;, }, public, double, taylor, (, final, double, ..., delta, ), throws, MathArithmeticException, {]
[;, }, public, double, taylor, (, final, double, ..., delta, ), throws, MathArithmeticException, {, return, compiler, ., taylor, (, data]
[;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, [, ], a, ,, final, DerivativeStructure, [, ], b, ), throws, DimensionMismatchException]
[., taylor, (, data, ,, 0, ,, delta, ), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, [, ], a]
[,, 0, ,, delta, ), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, [, ], a, ,, final, DerivativeStructure, []
[,, delta, ), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, [, ], a, ,, final, DerivativeStructure, [, ], b]
[), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, [, ], a, ,, final, DerivativeStructure, [, ], b, ), throws]
[;, for, (, int, i, =, 0, ;, i, <, a, ., length, ;, ++, i, ), {, aDouble, []
[], ;, for, (, int, i, =, 0, ;, i, <, a, ., length, ;, ++, i, ), {, aDouble]
[., length, ], ;, for, (, int, i, =, 0, ;, i, <, a, ., length, ;, ++, i, )]
[;, i, <, a, ., length, ;, ++, i, ), {, aDouble, [, i, ], =, a, [, i, ]]
[;, ++, i, ), {, aDouble, [, i, ], =, a, [, i, ], ., getValue, (, ), ;, }]
[<, a, ., length, ;, ++, i, ), {, aDouble, [, i, ], =, a, [, i, ], ., getValue]
[;, ++, i, ), {, aDouble, [, i, ], =, a, [, i, ], ., getValue, (, ), ;, }]
[., length, ;, ++, i, ), {, aDouble, [, i, ], =, a, [, i, ], ., getValue, (, )]
[), {, aDouble, [, i, ], =, a, [, i, ], ., getValue, (, ), ;, }, final, double, []
[), {, aDouble, [, i, ], =, a, [, i, ], ., getValue, (, ), ;, }, final, double, []
[=, a, [, i, ], ., getValue, (, ), ;, }, final, double, [, ], bDouble, =, new, double, []
[[, i, ], =, a, [, i, ], ., getValue, (, ), ;, }, final, double, [, ], bDouble, =]
[], =, a, [, i, ], ., getValue, (, ), ;, }, final, double, [, ], bDouble, =, new, double]
[;, }, final, double, [, ], bDouble, =, new, double, [, b, ., length, ], ;, for, (, int, i]
[., getValue, (, ), ;, }, final, double, [, ], bDouble, =, new, double, [, b, ., length, ], ;]
[[, i, ], ., getValue, (, ), ;, }, final, double, [, ], bDouble, =, new, double, [, b, .]
[], ., getValue, (, ), ;, }, final, double, [, ], bDouble, =, new, double, [, b, ., length, ]]
[;, for, (, int, i, =, 0, ;, i, <, b, ., length, ;, ++, i, ), {, bDouble, []
[], ;, for, (, int, i, =, 0, ;, i, <, b, ., length, ;, ++, i, ), {, bDouble]
[., length, ], ;, for, (, int, i, =, 0, ;, i, <, b, ., length, ;, ++, i, )]
[;, i, <, b, ., length, ;, ++, i, ), {, bDouble, [, i, ], =, b, [, i, ]]
[;, ++, i, ), {, bDouble, [, i, ], =, b, [, i, ], ., getValue, (, ), ;, }]
[<, b, ., length, ;, ++, i, ), {, bDouble, [, i, ], =, b, [, i, ], ., getValue]
[;, ++, i, ), {, bDouble, [, i, ], =, b, [, i, ], ., getValue, (, ), ;, }]
[., length, ;, ++, i, ), {, bDouble, [, i, ], =, b, [, i, ], ., getValue, (, )]
[), {, bDouble, [, i, ], =, b, [, i, ], ., getValue, (, ), ;, }, final, double, accurateValue]
[), {, bDouble, [, i, ], =, b, [, i, ], ., getValue, (, ), ;, }, final, double, accurateValue]
[=, b, [, i, ], ., getValue, (, ), ;, }, final, double, accurateValue, =, MathArrays, ., linearCombination, (, aDouble]
[[, i, ], =, b, [, i, ], ., getValue, (, ), ;, }, final, double, accurateValue, =, MathArrays, .]
[], =, b, [, i, ], ., getValue, (, ), ;, }, final, double, accurateValue, =, MathArrays, ., linearCombination, (]
[;, }, final, double, accurateValue, =, MathArrays, ., linearCombination, (, aDouble, ,, bDouble, ), ;, DerivativeStructure, simpleValue, =, a, []
[., getValue, (, ), ;, }, final, double, accurateValue, =, MathArrays, ., linearCombination, (, aDouble, ,, bDouble, ), ;, DerivativeStructure]
[[, i, ], ., getValue, (, ), ;, }, final, double, accurateValue, =, MathArrays, ., linearCombination, (, aDouble, ,, bDouble]
[], ., getValue, (, ), ;, }, final, double, accurateValue, =, MathArrays, ., linearCombination, (, aDouble, ,, bDouble, ), ;]
[;, DerivativeStructure, simpleValue, =, a, [, 0, ], ., getField, (, ), ., getZero, (, ), ;, for, (, int]
[., linearCombination, (, aDouble, ,, bDouble, ), ;, DerivativeStructure, simpleValue, =, a, [, 0, ], ., getField, (, ), .]
[,, bDouble, ), ;, DerivativeStructure, simpleValue, =, a, [, 0, ], ., getField, (, ), ., getZero, (, ), ;]
[), ;, DerivativeStructure, simpleValue, =, a, [, 0, ], ., getField, (, ), ., getZero, (, ), ;, for, (]
[;, for, (, int, i, =, 0, ;, i, <, a, ., length, ;, ++, i, ), {, simpleValue, =]
[., getZero, (, ), ;, for, (, int, i, =, 0, ;, i, <, a, ., length, ;, ++, i]
[., getField, (, ), ., getZero, (, ), ;, for, (, int, i, =, 0, ;, i, <, a, .]
[[, 0, ], ., getField, (, ), ., getZero, (, ), ;, for, (, int, i, =, 0, ;, i]
[], ., getField, (, ), ., getZero, (, ), ;, for, (, int, i, =, 0, ;, i, <, a]
[;, i, <, a, ., length, ;, ++, i, ), {, simpleValue, =, simpleValue, ., add, (, a, [, i]
[;, ++, i, ), {, simpleValue, =, simpleValue, ., add, (, a, [, i, ], ., multiply, (, b, []
[<, a, ., length, ;, ++, i, ), {, simpleValue, =, simpleValue, ., add, (, a, [, i, ], .]
[;, ++, i, ), {, simpleValue, =, simpleValue, ., add, (, a, [, i, ], ., multiply, (, b, []
[., length, ;, ++, i, ), {, simpleValue, =, simpleValue, ., add, (, a, [, i, ], ., multiply, (]
[), {, simpleValue, =, simpleValue, ., add, (, a, [, i, ], ., multiply, (, b, [, i, ], )]
[), {, simpleValue, =, simpleValue, ., add, (, a, [, i, ], ., multiply, (, b, [, i, ], )]
[=, simpleValue, ., add, (, a, [, i, ], ., multiply, (, b, [, i, ], ), ), ;, }]
[;, }, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue]
[., add, (, a, [, i, ], ., multiply, (, b, [, i, ], ), ), ;, }, final, double]
[), ;, }, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =]
[., multiply, (, b, [, i, ], ), ), ;, }, final, double, [, ], all, =, simpleValue, ., getAllDerivatives]
[[, i, ], ., multiply, (, b, [, i, ], ), ), ;, }, final, double, [, ], all, =]
[], ., multiply, (, b, [, i, ], ), ), ;, }, final, double, [, ], all, =, simpleValue, .]
[), ), ;, }, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ]]
[[, i, ], ), ), ;, }, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all]
[], ), ), ;, }, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0]
[;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (, ), ,, simpleValue, .]
[., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (]
[=, accurateValue, ;, return, new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (, ), ,, simpleValue, ., getOrder, (, ), ,, all]
[[, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (, ), ,, simpleValue, ., getOrder, (]
[], =, accurateValue, ;, return, new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (, ), ,, simpleValue, ., getOrder, (, ), ,]
[;, return, new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (, ), ,, simpleValue, ., getOrder, (, ), ,, all, ), ;]
[;, }, public, DerivativeStructure, linearCombination, (, final, double, [, ], a, ,, final, DerivativeStructure, [, ], b, ), throws, DimensionMismatchException]
[,, simpleValue, ., getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, double, [, ], a]
[., getFreeParameters, (, ), ,, simpleValue, ., getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final]
[,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, double, [, ], a, ,, final, DerivativeStructure, [, ], b]
[., getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, double, [, ], a, ,, final]
[), ;, }, public, DerivativeStructure, linearCombination, (, final, double, [, ], a, ,, final, DerivativeStructure, [, ], b, ), throws]
[;, for, (, int, i, =, 0, ;, i, <, b, ., length, ;, ++, i, ), {, bDouble, []
[], ;, for, (, int, i, =, 0, ;, i, <, b, ., length, ;, ++, i, ), {, bDouble]
[., length, ], ;, for, (, int, i, =, 0, ;, i, <, b, ., length, ;, ++, i, )]
[;, i, <, b, ., length, ;, ++, i, ), {, bDouble, [, i, ], =, b, [, i, ]]
[;, ++, i, ), {, bDouble, [, i, ], =, b, [, i, ], ., getValue, (, ), ;, }]
[<, b, ., length, ;, ++, i, ), {, bDouble, [, i, ], =, b, [, i, ], ., getValue]
[;, ++, i, ), {, bDouble, [, i, ], =, b, [, i, ], ., getValue, (, ), ;, }]
[., length, ;, ++, i, ), {, bDouble, [, i, ], =, b, [, i, ], ., getValue, (, )]
[), {, bDouble, [, i, ], =, b, [, i, ], ., getValue, (, ), ;, }, final, double, accurateValue]
[), {, bDouble, [, i, ], =, b, [, i, ], ., getValue, (, ), ;, }, final, double, accurateValue]
[=, b, [, i, ], ., getValue, (, ), ;, }, final, double, accurateValue, =, MathArrays, ., linearCombination, (, a]
[[, i, ], =, b, [, i, ], ., getValue, (, ), ;, }, final, double, accurateValue, =, MathArrays, .]
[], =, b, [, i, ], ., getValue, (, ), ;, }, final, double, accurateValue, =, MathArrays, ., linearCombination, (]
[;, }, final, double, accurateValue, =, MathArrays, ., linearCombination, (, a, ,, bDouble, ), ;, DerivativeStructure, simpleValue, =, b, []
[., getValue, (, ), ;, }, final, double, accurateValue, =, MathArrays, ., linearCombination, (, a, ,, bDouble, ), ;, DerivativeStructure]
[[, i, ], ., getValue, (, ), ;, }, final, double, accurateValue, =, MathArrays, ., linearCombination, (, a, ,, bDouble]
[], ., getValue, (, ), ;, }, final, double, accurateValue, =, MathArrays, ., linearCombination, (, a, ,, bDouble, ), ;]
[;, DerivativeStructure, simpleValue, =, b, [, 0, ], ., getField, (, ), ., getZero, (, ), ;, for, (, int]
[., linearCombination, (, a, ,, bDouble, ), ;, DerivativeStructure, simpleValue, =, b, [, 0, ], ., getField, (, ), .]
[,, bDouble, ), ;, DerivativeStructure, simpleValue, =, b, [, 0, ], ., getField, (, ), ., getZero, (, ), ;]
[), ;, DerivativeStructure, simpleValue, =, b, [, 0, ], ., getField, (, ), ., getZero, (, ), ;, for, (]
[;, for, (, int, i, =, 0, ;, i, <, a, ., length, ;, ++, i, ), {, simpleValue, =]
[., getZero, (, ), ;, for, (, int, i, =, 0, ;, i, <, a, ., length, ;, ++, i]
[., getField, (, ), ., getZero, (, ), ;, for, (, int, i, =, 0, ;, i, <, a, .]
[[, 0, ], ., getField, (, ), ., getZero, (, ), ;, for, (, int, i, =, 0, ;, i]
[], ., getField, (, ), ., getZero, (, ), ;, for, (, int, i, =, 0, ;, i, <, a]
[;, i, <, a, ., length, ;, ++, i, ), {, simpleValue, =, simpleValue, ., add, (, b, [, i]
[;, ++, i, ), {, simpleValue, =, simpleValue, ., add, (, b, [, i, ], ., multiply, (, a, []
[<, a, ., length, ;, ++, i, ), {, simpleValue, =, simpleValue, ., add, (, b, [, i, ], .]
[;, ++, i, ), {, simpleValue, =, simpleValue, ., add, (, b, [, i, ], ., multiply, (, a, []
[., length, ;, ++, i, ), {, simpleValue, =, simpleValue, ., add, (, b, [, i, ], ., multiply, (]
[), {, simpleValue, =, simpleValue, ., add, (, b, [, i, ], ., multiply, (, a, [, i, ], )]
[), {, simpleValue, =, simpleValue, ., add, (, b, [, i, ], ., multiply, (, a, [, i, ], )]
[=, simpleValue, ., add, (, b, [, i, ], ., multiply, (, a, [, i, ], ), ), ;, }]
[;, }, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue]
[., add, (, b, [, i, ], ., multiply, (, a, [, i, ], ), ), ;, }, final, double]
[), ;, }, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =]
[., multiply, (, a, [, i, ], ), ), ;, }, final, double, [, ], all, =, simpleValue, ., getAllDerivatives]
[[, i, ], ., multiply, (, a, [, i, ], ), ), ;, }, final, double, [, ], all, =]
[], ., multiply, (, a, [, i, ], ), ), ;, }, final, double, [, ], all, =, simpleValue, .]
[), ), ;, }, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ]]
[[, i, ], ), ), ;, }, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all]
[], ), ), ;, }, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0]
[;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (, ), ,, simpleValue, .]
[., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (]
[=, accurateValue, ;, return, new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (, ), ,, simpleValue, ., getOrder, (, ), ,, all]
[[, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (, ), ,, simpleValue, ., getOrder, (]
[], =, accurateValue, ;, return, new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (, ), ,, simpleValue, ., getOrder, (, ), ,]
[;, return, new, DerivativeStructure, (, simpleValue, ., getFreeParameters, (, ), ,, simpleValue, ., getOrder, (, ), ,, all, ), ;]
[;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, a1, ,, final, DerivativeStructure, b1, ,, final, DerivativeStructure, a2, ,, final, DerivativeStructure]
[,, simpleValue, ., getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, a1, ,, final]
[., getFreeParameters, (, ), ,, simpleValue, ., getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final]
[,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, a1, ,, final, DerivativeStructure, b1, ,, final, DerivativeStructure, a2]
[., getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, a1, ,, final, DerivativeStructure, b1]
[), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, a1, ,, final, DerivativeStructure, b1, ,, final, DerivativeStructure, a2, ,, final]
[;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2, )]
[., linearCombination, (, a1, ., getValue, (, ), ,, b1, ., getValue, (, ), ,, a2, ., getValue, (, )]
[,, b1, ., getValue, (, ), ,, a2, ., getValue, (, ), ,, b2, ., getValue, (, ), ), ;]
[., getValue, (, ), ,, b1, ., getValue, (, ), ,, a2, ., getValue, (, ), ,, b2, ., getValue]
[,, a2, ., getValue, (, ), ,, b2, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, a1, .]
[., getValue, (, ), ,, a2, ., getValue, (, ), ,, b2, ., getValue, (, ), ), ;, final, DerivativeStructure]
[,, b2, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (, b1, ), ., add]
[., getValue, (, ), ,, b2, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (]
[), ;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2]
[., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (, b1, ), ., add, (, a2]
[;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;]
[., add, (, a2, ., multiply, (, b2, ), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives]
[., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2, ), ), ;, final, double, [, ]]
[), ., add, (, a2, ., multiply, (, b2, ), ), ;, final, double, [, ], all, =, simpleValue, .]
[), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue]
[., multiply, (, b2, ), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all]
[), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =]
[;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,]
[., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,]
[=, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }, public]
[[, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, )]
[], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }]
[;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination]
[;, }, public, DerivativeStructure, linearCombination, (, final, double, a1, ,, final, DerivativeStructure, b1, ,, final, double, a2, ,, final, DerivativeStructure]
[,, getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, double, a1, ,, final, DerivativeStructure, b1]
[,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, double, a1, ,, final, DerivativeStructure, b1, ,, final, double, a2]
[), ;, }, public, DerivativeStructure, linearCombination, (, final, double, a1, ,, final, DerivativeStructure, b1, ,, final, double, a2, ,, final]
[;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2, )]
[., linearCombination, (, a1, ,, b1, ., getValue, (, ), ,, a2, ,, b2, ., getValue, (, ), ), ;]
[,, b1, ., getValue, (, ), ,, a2, ,, b2, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =]
[,, a2, ,, b2, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, )]
[., getValue, (, ), ,, a2, ,, b2, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, b1, .]
[,, b2, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, ), ., add]
[), ;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2]
[., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, ), ., add, (, b2]
[;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;]
[., add, (, b2, ., multiply, (, a2, ), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives]
[., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2, ), ), ;, final, double, [, ]]
[), ., add, (, b2, ., multiply, (, a2, ), ), ;, final, double, [, ], all, =, simpleValue, .]
[), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue]
[., multiply, (, a2, ), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all]
[), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =]
[;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,]
[., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,]
[=, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }, public]
[[, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, )]
[], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }]
[;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination]
[;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, a1, ,, final, DerivativeStructure, b1, ,, final, DerivativeStructure, a2, ,, final, DerivativeStructure]
[,, getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, a1, ,, final, DerivativeStructure, b1]
[,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, a1, ,, final, DerivativeStructure, b1, ,, final, DerivativeStructure, a2]
[), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, a1, ,, final, DerivativeStructure, b1, ,, final, DerivativeStructure, a2, ,, final]
[;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2, )]
[., linearCombination, (, a1, ., getValue, (, ), ,, b1, ., getValue, (, ), ,, a2, ., getValue, (, )]
[,, b1, ., getValue, (, ), ,, a2, ., getValue, (, ), ,, b2, ., getValue, (, ), ,, a3]
[., getValue, (, ), ,, b1, ., getValue, (, ), ,, a2, ., getValue, (, ), ,, b2, ., getValue]
[,, a2, ., getValue, (, ), ,, b2, ., getValue, (, ), ,, a3, ., getValue, (, ), ,, b3]
[., getValue, (, ), ,, a2, ., getValue, (, ), ,, b2, ., getValue, (, ), ,, a3, ., getValue]
[,, b2, ., getValue, (, ), ,, a3, ., getValue, (, ), ,, b3, ., getValue, (, ), ), ;]
[., getValue, (, ), ,, b2, ., getValue, (, ), ,, a3, ., getValue, (, ), ,, b3, ., getValue]
[,, a3, ., getValue, (, ), ,, b3, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, a1, .]
[., getValue, (, ), ,, a3, ., getValue, (, ), ,, b3, ., getValue, (, ), ), ;, final, DerivativeStructure]
[,, b3, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (, b1, ), ., add]
[., getValue, (, ), ,, b3, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (]
[), ;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2]
[., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (, b1, ), ., add, (, a2]
[;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;]
[., add, (, a3, ., multiply, (, b3, ), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives]
[., add, (, a2, ., multiply, (, b2, ), ), ., add, (, a3, ., multiply, (, b3, ), )]
[., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2, ), ), ., add, (, a3, .]
[), ., add, (, a2, ., multiply, (, b2, ), ), ., add, (, a3, ., multiply, (, b3, )]
[), ., add, (, a3, ., multiply, (, b3, ), ), ;, final, double, [, ], all, =, simpleValue, .]
[., multiply, (, b2, ), ), ., add, (, a3, ., multiply, (, b3, ), ), ;, final, double, []
[), ), ., add, (, a3, ., multiply, (, b3, ), ), ;, final, double, [, ], all, =, simpleValue]
[), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue]
[., multiply, (, b3, ), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all]
[), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =]
[;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,]
[., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,]
[=, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }, public]
[[, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, )]
[], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }]
[;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination]
[;, }, public, DerivativeStructure, linearCombination, (, final, double, a1, ,, final, DerivativeStructure, b1, ,, final, double, a2, ,, final, DerivativeStructure]
[,, getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, double, a1, ,, final, DerivativeStructure, b1]
[,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, double, a1, ,, final, DerivativeStructure, b1, ,, final, double, a2]
[), ;, }, public, DerivativeStructure, linearCombination, (, final, double, a1, ,, final, DerivativeStructure, b1, ,, final, double, a2, ,, final]
[;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2, )]
[., linearCombination, (, a1, ,, b1, ., getValue, (, ), ,, a2, ,, b2, ., getValue, (, ), ,, a3]
[,, b1, ., getValue, (, ), ,, a2, ,, b2, ., getValue, (, ), ,, a3, ,, b3, ., getValue]
[,, a2, ,, b2, ., getValue, (, ), ,, a3, ,, b3, ., getValue, (, ), ), ;, final, DerivativeStructure]
[., getValue, (, ), ,, a2, ,, b2, ., getValue, (, ), ,, a3, ,, b3, ., getValue, (, )]
[,, b2, ., getValue, (, ), ,, a3, ,, b3, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =]
[,, a3, ,, b3, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, )]
[., getValue, (, ), ,, a3, ,, b3, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, b1, .]
[,, b3, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, ), ., add]
[), ;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2]
[., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, ), ., add, (, b2]
[;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;]
[., add, (, b3, ., multiply, (, a3, ), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives]
[., add, (, b2, ., multiply, (, a2, ), ), ., add, (, b3, ., multiply, (, a3, ), )]
[., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2, ), ), ., add, (, b3, .]
[), ., add, (, b2, ., multiply, (, a2, ), ), ., add, (, b3, ., multiply, (, a3, )]
[), ., add, (, b3, ., multiply, (, a3, ), ), ;, final, double, [, ], all, =, simpleValue, .]
[., multiply, (, a2, ), ), ., add, (, b3, ., multiply, (, a3, ), ), ;, final, double, []
[), ), ., add, (, b3, ., multiply, (, a3, ), ), ;, final, double, [, ], all, =, simpleValue]
[), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue]
[., multiply, (, a3, ), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all]
[), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =]
[;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,]
[., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,]
[=, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }, public]
[[, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, )]
[], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }]
[;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination]
[;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, a1, ,, final, DerivativeStructure, b1, ,, final, DerivativeStructure, a2, ,, final, DerivativeStructure]
[,, getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, a1, ,, final, DerivativeStructure, b1]
[,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, a1, ,, final, DerivativeStructure, b1, ,, final, DerivativeStructure, a2]
[), ;, }, public, DerivativeStructure, linearCombination, (, final, DerivativeStructure, a1, ,, final, DerivativeStructure, b1, ,, final, DerivativeStructure, a2, ,, final]
[;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2, )]
[., linearCombination, (, a1, ., getValue, (, ), ,, b1, ., getValue, (, ), ,, a2, ., getValue, (, )]
[,, b1, ., getValue, (, ), ,, a2, ., getValue, (, ), ,, b2, ., getValue, (, ), ,, a3]
[., getValue, (, ), ,, b1, ., getValue, (, ), ,, a2, ., getValue, (, ), ,, b2, ., getValue]
[,, a2, ., getValue, (, ), ,, b2, ., getValue, (, ), ,, a3, ., getValue, (, ), ,, b3]
[., getValue, (, ), ,, a2, ., getValue, (, ), ,, b2, ., getValue, (, ), ,, a3, ., getValue]
[,, b2, ., getValue, (, ), ,, a3, ., getValue, (, ), ,, b3, ., getValue, (, ), ,, a4]
[., getValue, (, ), ,, b2, ., getValue, (, ), ,, a3, ., getValue, (, ), ,, b3, ., getValue]
[,, a3, ., getValue, (, ), ,, b3, ., getValue, (, ), ,, a4, ., getValue, (, ), ,, b4]
[., getValue, (, ), ,, a3, ., getValue, (, ), ,, b3, ., getValue, (, ), ,, a4, ., getValue]
[,, b3, ., getValue, (, ), ,, a4, ., getValue, (, ), ,, b4, ., getValue, (, ), ), ;]
[., getValue, (, ), ,, b3, ., getValue, (, ), ,, a4, ., getValue, (, ), ,, b4, ., getValue]
[,, a4, ., getValue, (, ), ,, b4, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, a1, .]
[., getValue, (, ), ,, a4, ., getValue, (, ), ,, b4, ., getValue, (, ), ), ;, final, DerivativeStructure]
[,, b4, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (, b1, ), ., add]
[., getValue, (, ), ,, b4, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (]
[), ;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2]
[., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, a1, ., multiply, (, b1, ), ., add, (, a2]
[;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;]
[., add, (, a4, ., multiply, (, b4, ), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives]
[., add, (, a3, ., multiply, (, b3, ), ), ., add, (, a4, ., multiply, (, b4, ), )]
[., add, (, a2, ., multiply, (, b2, ), ), ., add, (, a3, ., multiply, (, b3, ), )]
[., multiply, (, b1, ), ., add, (, a2, ., multiply, (, b2, ), ), ., add, (, a3, .]
[), ., add, (, a2, ., multiply, (, b2, ), ), ., add, (, a3, ., multiply, (, b3, )]
[), ., add, (, a3, ., multiply, (, b3, ), ), ., add, (, a4, ., multiply, (, b4, )]
[., multiply, (, b2, ), ), ., add, (, a3, ., multiply, (, b3, ), ), ., add, (, a4]
[), ), ., add, (, a3, ., multiply, (, b3, ), ), ., add, (, a4, ., multiply, (, b4]
[), ., add, (, a4, ., multiply, (, b4, ), ), ;, final, double, [, ], all, =, simpleValue, .]
[., multiply, (, b3, ), ), ., add, (, a4, ., multiply, (, b4, ), ), ;, final, double, []
[), ), ., add, (, a4, ., multiply, (, b4, ), ), ;, final, double, [, ], all, =, simpleValue]
[), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue]
[., multiply, (, b4, ), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all]
[), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =]
[;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,]
[., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,]
[=, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }, public]
[[, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, )]
[], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }]
[;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination]
[;, }, public, DerivativeStructure, linearCombination, (, final, double, a1, ,, final, DerivativeStructure, b1, ,, final, double, a2, ,, final, DerivativeStructure]
[,, getOrder, (, ), ,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, double, a1, ,, final, DerivativeStructure, b1]
[,, all, ), ;, }, public, DerivativeStructure, linearCombination, (, final, double, a1, ,, final, DerivativeStructure, b1, ,, final, double, a2]
[), ;, }, public, DerivativeStructure, linearCombination, (, final, double, a1, ,, final, DerivativeStructure, b1, ,, final, double, a2, ,, final]
[;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2, )]
[., linearCombination, (, a1, ,, b1, ., getValue, (, ), ,, a2, ,, b2, ., getValue, (, ), ,, a3]
[,, b1, ., getValue, (, ), ,, a2, ,, b2, ., getValue, (, ), ,, a3, ,, b3, ., getValue]
[,, a2, ,, b2, ., getValue, (, ), ,, a3, ,, b3, ., getValue, (, ), ,, a4, ,, b4]
[., getValue, (, ), ,, a2, ,, b2, ., getValue, (, ), ,, a3, ,, b3, ., getValue, (, )]
[,, b2, ., getValue, (, ), ,, a3, ,, b3, ., getValue, (, ), ,, a4, ,, b4, ., getValue]
[,, a3, ,, b3, ., getValue, (, ), ,, a4, ,, b4, ., getValue, (, ), ), ;, final, DerivativeStructure]
[., getValue, (, ), ,, a3, ,, b3, ., getValue, (, ), ,, a4, ,, b4, ., getValue, (, )]
[,, b3, ., getValue, (, ), ,, a4, ,, b4, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =]
[,, a4, ,, b4, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, )]
[., getValue, (, ), ,, a4, ,, b4, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, b1, .]
[,, b4, ., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, ), ., add]
[), ;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2]
[., getValue, (, ), ), ;, final, DerivativeStructure, simpleValue, =, b1, ., multiply, (, a1, ), ., add, (, b2]
[;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;]
[., add, (, b4, ., multiply, (, a4, ), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives]
[., add, (, b3, ., multiply, (, a3, ), ), ., add, (, b4, ., multiply, (, a4, ), )]
[., add, (, b2, ., multiply, (, a2, ), ), ., add, (, b3, ., multiply, (, a3, ), )]
[., multiply, (, a1, ), ., add, (, b2, ., multiply, (, a2, ), ), ., add, (, b3, .]
[), ., add, (, b2, ., multiply, (, a2, ), ), ., add, (, b3, ., multiply, (, a3, )]
[), ., add, (, b3, ., multiply, (, a3, ), ), ., add, (, b4, ., multiply, (, a4, )]
[., multiply, (, a2, ), ), ., add, (, b3, ., multiply, (, a3, ), ), ., add, (, b4]
[), ), ., add, (, b3, ., multiply, (, a3, ), ), ., add, (, b4, ., multiply, (, a4]
[), ., add, (, b4, ., multiply, (, a4, ), ), ;, final, double, [, ], all, =, simpleValue, .]
[., multiply, (, a3, ), ), ., add, (, b4, ., multiply, (, a4, ), ), ;, final, double, []
[), ), ., add, (, b4, ., multiply, (, a4, ), ), ;, final, double, [, ], all, =, simpleValue]
[), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue]
[., multiply, (, a4, ), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all]
[), ), ;, final, double, [, ], all, =, simpleValue, ., getAllDerivatives, (, ), ;, all, [, 0, ], =]
[;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,]
[., getAllDerivatives, (, ), ;, all, [, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,]
[=, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }, @]
[[, 0, ], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, )]
[], =, accurateValue, ;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }]
[;, return, new, DerivativeStructure, (, getFreeParameters, (, ), ,, getOrder, (, ), ,, all, ), ;, }, @, Override, public]
[;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (, this, ==, other, ), {, return]
[,, getOrder, (, ), ,, all, ), ;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if]
[,, all, ), ;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (, this, ==, other]
[), ;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (, this, ==, other, ), {]
[), {, return, true, ;, }, if, (, other, instanceof, DerivativeStructure, ), {, final, DerivativeStructure, rhs, =, (, DerivativeStructure, )]
[==, other, ), {, return, true, ;, }, if, (, other, instanceof, DerivativeStructure, ), {, final, DerivativeStructure, rhs, =, (]
[), {, return, true, ;, }, if, (, other, instanceof, DerivativeStructure, ), {, final, DerivativeStructure, rhs, =, (, DerivativeStructure, )]
[;, }, if, (, other, instanceof, DerivativeStructure, ), {, final, DerivativeStructure, rhs, =, (, DerivativeStructure, ), other, ;, return, (]
[), {, final, DerivativeStructure, rhs, =, (, DerivativeStructure, ), other, ;, return, (, getFreeParameters, (, ), ==, rhs, ., getFreeParameters]
[instanceof, DerivativeStructure, ), {, final, DerivativeStructure, rhs, =, (, DerivativeStructure, ), other, ;, return, (, getFreeParameters, (, ), ==, rhs]
[;, return, (, getFreeParameters, (, ), ==, rhs, ., getFreeParameters, (, ), ), &&, (, getOrder, (, ), ==, rhs]
[;, return, (, getFreeParameters, (, ), ==, rhs, ., getFreeParameters, (, ), ), &&, (, getOrder, (, ), ==, rhs]
[;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, 227, +, 229, *, getFreeParameters]
[&&, MathArrays, ., equals, (, data, ,, rhs, ., data, ), ;, }, return, false, ;, }, @, Override, public]
[&&, (, getOrder, (, ), ==, rhs, ., getOrder, (, ), ), &&, MathArrays, ., equals, (, data, ,, rhs]
[), &&, (, getOrder, (, ), ==, rhs, ., getOrder, (, ), ), &&, MathArrays, ., equals, (, data, ,]
[==, rhs, ., getFreeParameters, (, ), ), &&, (, getOrder, (, ), ==, rhs, ., getOrder, (, ), ), &&]
[), &&, (, getOrder, (, ), ==, rhs, ., getOrder, (, ), ), &&, MathArrays, ., equals, (, data, ,]
[., getFreeParameters, (, ), ), &&, (, getOrder, (, ), ==, rhs, ., getOrder, (, ), ), &&, MathArrays, .]
[&&, MathArrays, ., equals, (, data, ,, rhs, ., data, ), ;, }, return, false, ;, }, @, Override, public]
[), &&, MathArrays, ., equals, (, data, ,, rhs, ., data, ), ;, }, return, false, ;, }, @, Override]
[==, rhs, ., getOrder, (, ), ), &&, MathArrays, ., equals, (, data, ,, rhs, ., data, ), ;, }]
[), &&, MathArrays, ., equals, (, data, ,, rhs, ., data, ), ;, }, return, false, ;, }, @, Override]
[., getOrder, (, ), ), &&, MathArrays, ., equals, (, data, ,, rhs, ., data, ), ;, }, return, false]
[;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, 227, +, 229, *, getFreeParameters]
[., equals, (, data, ,, rhs, ., data, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode]
[,, rhs, ., data, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return]
[), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, 227, +, 229, *]
[., data, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, 227, +]
[;, }, @, Override, public, int, hashCode, (, ), {, return, 227, +, 229, *, getFreeParameters, (, ), +, 233]
[;, }, private, Object, writeReplace, (, ), {, return, new, DataTransferObject, (, compiler, ., getFreeParameters, (, ), ,, compiler, .]
[+, 239, *, MathUtils, ., hash, (, data, ), ;, }, private, Object, writeReplace, (, ), {, return, new, DataTransferObject]
[+, 233, *, getOrder, (, ), +, 239, *, MathUtils, ., hash, (, data, ), ;, }, private, Object, writeReplace]
[+, 229, *, getFreeParameters, (, ), +, 233, *, getOrder, (, ), +, 239, *, MathUtils, ., hash, (, data]
[+, 233, *, getOrder, (, ), +, 239, *, MathUtils, ., hash, (, data, ), ;, }, private, Object, writeReplace]
[*, getFreeParameters, (, ), +, 233, *, getOrder, (, ), +, 239, *, MathUtils, ., hash, (, data, ), ;]
[+, 233, *, getOrder, (, ), +, 239, *, MathUtils, ., hash, (, data, ), ;, }, private, Object, writeReplace]
[+, 239, *, MathUtils, ., hash, (, data, ), ;, }, private, Object, writeReplace, (, ), {, return, new, DataTransferObject]
[*, getOrder, (, ), +, 239, *, MathUtils, ., hash, (, data, ), ;, }, private, Object, writeReplace, (, )]
[+, 239, *, MathUtils, ., hash, (, data, ), ;, }, private, Object, writeReplace, (, ), {, return, new, DataTransferObject]
[;, }, private, Object, writeReplace, (, ), {, return, new, DataTransferObject, (, compiler, ., getFreeParameters, (, ), ,, compiler, .]
[*, MathUtils, ., hash, (, data, ), ;, }, private, Object, writeReplace, (, ), {, return, new, DataTransferObject, (, compiler]
[;, }, private, Object, writeReplace, (, ), {, return, new, DataTransferObject, (, compiler, ., getFreeParameters, (, ), ,, compiler, .]
[., hash, (, data, ), ;, }, private, Object, writeReplace, (, ), {, return, new, DataTransferObject, (, compiler, ., getFreeParameters]
[), ;, }, private, Object, writeReplace, (, ), {, return, new, DataTransferObject, (, compiler, ., getFreeParameters, (, ), ,, compiler]
[;, }, private, static, class, DataTransferObject, implements, Serializable, {, private, static, final, long, serialVersionUID, =, 20120730L, ;, private, final, int]
[,, compiler, ., getOrder, (, ), ,, data, ), ;, }, private, static, class, DataTransferObject, implements, Serializable, {, private, static]
[., getFreeParameters, (, ), ,, compiler, ., getOrder, (, ), ,, data, ), ;, }, private, static, class, DataTransferObject, implements]
[,, data, ), ;, }, private, static, class, DataTransferObject, implements, Serializable, {, private, static, final, long, serialVersionUID, =, 20120730L, ;]
[., getOrder, (, ), ,, data, ), ;, }, private, static, class, DataTransferObject, implements, Serializable, {, private, static, final, long]
[), ;, }, private, static, class, DataTransferObject, implements, Serializable, {, private, static, final, long, serialVersionUID, =, 20120730L, ;, private, final]
[;, private, final, int, variables, ;, private, final, int, order, ;, private, final, double, [, ], data, ;, public, DataTransferObject]
[=, variables, ;, this, ., order, =, order, ;, this, ., data, =, data, ;, }, private, Object, readResolve, (]
[., variables, =, variables, ;, this, ., order, =, order, ;, this, ., data, =, data, ;, }, private, Object]
[;, this, ., order, =, order, ;, this, ., data, =, data, ;, }, private, Object, readResolve, (, ), {]
[=, order, ;, this, ., data, =, data, ;, }, private, Object, readResolve, (, ), {, return, new, DerivativeStructure, (]
[., order, =, order, ;, this, ., data, =, data, ;, }, private, Object, readResolve, (, ), {, return, new]
[;, this, ., data, =, data, ;, }, private, Object, readResolve, (, ), {, return, new, DerivativeStructure, (, variables, ,]
[=, data, ;, }, private, Object, readResolve, (, ), {, return, new, DerivativeStructure, (, variables, ,, order, ,, data, )]
[., data, =, data, ;, }, private, Object, readResolve, (, ), {, return, new, DerivativeStructure, (, variables, ,, order, ,]
[;, }, private, Object, readResolve, (, ), {, return, new, DerivativeStructure, (, variables, ,, order, ,, data, ), ;, }]
[;, }, }, }]
[,, order, ,, data, ), ;, }, }, }]
[,, data, ), ;, }, }, }]
[), ;, }, }, }]
