[Array, ;, public, class, Equality, {, public, static, boolean, areEqual, (, Object, o1, ,, Object, o2, ), {, if, (]
[Array, ;, public, class, Equality, {, public, static, boolean, areEqual, (, Object, o1, ,, Object, o2, ), {, if, (]
[public, class, Equality, {, public, static, boolean, areEqual, (, Object, o1, ,, Object, o2, ), {, if, (, o1, ==]
[public, static, boolean, areEqual, (, Object, o1, ,, Object, o2, ), {, if, (, o1, ==, o2, ), {, return]
[o1, ,, Object, o2, ), {, if, (, o1, ==, o2, ), {, return, true, ;, }, else, if, (]
[o1, ,, Object, o2, ), {, if, (, o1, ==, o2, ), {, return, true, ;, }, else, if, (]
[o1, ,, Object, o2, ), {, if, (, o1, ==, o2, ), {, return, true, ;, }, else, if, (]
[Object, o2, ), {, if, (, o1, ==, o2, ), {, return, true, ;, }, else, if, (, o1, ==]
[), {, if, (, o1, ==, o2, ), {, return, true, ;, }, else, if, (, o1, ==, null, ||]
[), {, if, (, o1, ==, o2, ), {, return, true, ;, }, else, if, (, o1, ==, null, ||]
[if, (, o1, ==, o2, ), {, return, true, ;, }, else, if, (, o1, ==, null, ||, o2, ==]
[o2, ), {, return, true, ;, }, else, if, (, o1, ==, null, ||, o2, ==, null, ), {, return]
[o2, ), {, return, true, ;, }, else, if, (, o1, ==, null, ||, o2, ==, null, ), {, return]
[o2, ), {, return, true, ;, }, else, if, (, o1, ==, null, ||, o2, ==, null, ), {, return]
[{, return, true, ;, }, else, if, (, o1, ==, null, ||, o2, ==, null, ), {, return, o1, ==]
[true, ;, }, else, if, (, o1, ==, null, ||, o2, ==, null, ), {, return, o1, ==, null, &&]
[true, ;, }, else, if, (, o1, ==, null, ||, o2, ==, null, ), {, return, o1, ==, null, &&]
[}, else, if, (, o1, ==, null, ||, o2, ==, null, ), {, return, o1, ==, null, &&, o2, ==]
[null, ||, o2, ==, null, ), {, return, o1, ==, null, &&, o2, ==, null, ;, }, else, if, (]
[o2, ==, null, ), {, return, o1, ==, null, &&, o2, ==, null, ;, }, else, if, (, isArray, (]
[return, o1, ==, null, &&, o2, ==, null, ;, }, else, if, (, isArray, (, o1, ), ), {, return]
[return, o1, ==, null, &&, o2, ==, null, ;, }, else, if, (, isArray, (, o1, ), ), {, return]
[==, null, &&, o2, ==, null, ;, }, else, if, (, isArray, (, o1, ), ), {, return, isArray, (]
[o2, ==, null, ;, }, else, if, (, isArray, (, o1, ), ), {, return, isArray, (, o2, ), &&]
[null, ;, }, else, if, (, isArray, (, o1, ), ), {, return, isArray, (, o2, ), &&, areArraysEqual, (]
[}, else, if, (, isArray, (, o1, ), ), {, return, isArray, (, o2, ), &&, areArraysEqual, (, o1, ,]
[), ), {, return, isArray, (, o2, ), &&, areArraysEqual, (, o1, ,, o2, ), ;, }, else, {, return]
[), ), {, return, isArray, (, o2, ), &&, areArraysEqual, (, o1, ,, o2, ), ;, }, else, {, return]
[isArray, (, o2, ), &&, areArraysEqual, (, o1, ,, o2, ), ;, }, else, {, return, o1, ., equals, (]
[., equals, (, o2, ), ;, }, }, static, boolean, areArraysEqual, (, Object, o1, ,, Object, o2, ), {, return]
[., equals, (, o2, ), ;, }, }, static, boolean, areArraysEqual, (, Object, o1, ,, Object, o2, ), {, return]
[(, o2, ), ;, }, }, static, boolean, areArraysEqual, (, Object, o1, ,, Object, o2, ), {, return, areArrayLengthsEqual, (]
[), ;, }, }, static, boolean, areArraysEqual, (, Object, o1, ,, Object, o2, ), {, return, areArrayLengthsEqual, (, o1, ,]
[}, static, boolean, areArraysEqual, (, Object, o1, ,, Object, o2, ), {, return, areArrayLengthsEqual, (, o1, ,, o2, ), &&]
[boolean, areArraysEqual, (, Object, o1, ,, Object, o2, ), {, return, areArrayLengthsEqual, (, o1, ,, o2, ), &&, areArrayElementsEqual, (]
[(, Object, o1, ,, Object, o2, ), {, return, areArrayLengthsEqual, (, o1, ,, o2, ), &&, areArrayElementsEqual, (, o1, ,]
[areArrayElementsEqual, (, o1, ,, o2, ), ;, }, static, boolean, areArrayLengthsEqual, (, Object, o1, ,, Object, o2, ), {, return]
[areArrayElementsEqual, (, o1, ,, o2, ), ;, }, static, boolean, areArrayLengthsEqual, (, Object, o1, ,, Object, o2, ), {, return]
[areArrayElementsEqual, (, o1, ,, o2, ), ;, }, static, boolean, areArrayLengthsEqual, (, Object, o1, ,, Object, o2, ), {, return]
[o2, ), ;, }, static, boolean, areArrayLengthsEqual, (, Object, o1, ,, Object, o2, ), {, return, Array, ., getLength, (]
[}, static, boolean, areArrayLengthsEqual, (, Object, o1, ,, Object, o2, ), {, return, Array, ., getLength, (, o1, ), ==]
[}, static, boolean, areArrayLengthsEqual, (, Object, o1, ,, Object, o2, ), {, return, Array, ., getLength, (, o1, ), ==]
[(, Object, o1, ,, Object, o2, ), {, return, Array, ., getLength, (, o1, ), ==, Array, ., getLength, (]
[o2, ), ;, }, static, boolean, areArrayElementsEqual, (, Object, o1, ,, Object, o2, ), {, for, (, int, i, =]
[;, }, static, boolean, areArrayElementsEqual, (, Object, o1, ,, Object, o2, ), {, for, (, int, i, =, 0, ;]
[;, }, static, boolean, areArrayElementsEqual, (, Object, o1, ,, Object, o2, ), {, for, (, int, i, =, 0, ;]
[static, boolean, areArrayElementsEqual, (, Object, o1, ,, Object, o2, ), {, for, (, int, i, =, 0, ;, i, <]
[static, boolean, areArrayElementsEqual, (, Object, o1, ,, Object, o2, ), {, for, (, int, i, =, 0, ;, i, <]
[Object, o1, ,, Object, o2, ), {, for, (, int, i, =, 0, ;, i, <, Array, ., getLength, (]
[Object, o2, ), {, for, (, int, i, =, 0, ;, i, <, Array, ., getLength, (, o1, ), ;]
[Object, o2, ), {, for, (, int, i, =, 0, ;, i, <, Array, ., getLength, (, o1, ), ;]
[int, i, =, 0, ;, i, <, Array, ., getLength, (, o1, ), ;, i, ++, ), {, if, (]
[i, =, 0, ;, i, <, Array, ., getLength, (, o1, ), ;, i, ++, ), {, if, (, !]
[0, ;, i, <, Array, ., getLength, (, o1, ), ;, i, ++, ), {, if, (, !, areEqual, (]
[0, ;, i, <, Array, ., getLength, (, o1, ), ;, i, ++, ), {, if, (, !, areEqual, (]
[Array, ., getLength, (, o1, ), ;, i, ++, ), {, if, (, !, areEqual, (, Array, ., get, (]
[getLength, (, o1, ), ;, i, ++, ), {, if, (, !, areEqual, (, Array, ., get, (, o1, ,]
[), ;, i, ++, ), {, if, (, !, areEqual, (, Array, ., get, (, o1, ,, i, ), ,]
[), ;, i, ++, ), {, if, (, !, areEqual, (, Array, ., get, (, o1, ,, i, ), ,]
[), {, if, (, !, areEqual, (, Array, ., get, (, o1, ,, i, ), ,, Array, ., get, (]
[if, (, !, areEqual, (, Array, ., get, (, o1, ,, i, ), ,, Array, ., get, (, o2, ,]
[Array, ., get, (, o1, ,, i, ), ,, Array, ., get, (, o2, ,, i, ), ), ), return]
[o1, ,, i, ), ,, Array, ., get, (, o2, ,, i, ), ), ), return, false, ;, }, return]
[), ), ), return, false, ;, }, return, true, ;, }, static, boolean, isArray, (, Object, o, ), {, return]
[), ), ), return, false, ;, }, return, true, ;, }, static, boolean, isArray, (, Object, o, ), {, return]
[), ), ), return, false, ;, }, return, true, ;, }, static, boolean, isArray, (, Object, o, ), {, return]
