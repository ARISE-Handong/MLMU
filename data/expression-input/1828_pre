[;, private, float, shadowOpacity, ;, private, double, angle, ;, private, int, distance, ;, public, DefaultShadowGenerator, (, ), {, this, (]
[float, shadowOpacity, ;, private, double, angle, ;, private, int, distance, ;, public, DefaultShadowGenerator, (, ), {, this, (, 5, ,]
[float, shadowOpacity, ;, private, double, angle, ;, private, int, distance, ;, public, DefaultShadowGenerator, (, ), {, this, (, 5, ,]
[double, angle, ;, private, int, distance, ;, public, DefaultShadowGenerator, (, ), {, this, (, 5, ,, Color, ., black, ,]
[;, private, int, distance, ;, public, DefaultShadowGenerator, (, ), {, this, (, 5, ,, Color, ., black, ,, 0.5f, ,]
[int, distance, ;, public, DefaultShadowGenerator, (, ), {, this, (, 5, ,, Color, ., black, ,, 0.5f, ,, 5, ,]
[int, distance, ;, public, DefaultShadowGenerator, (, ), {, this, (, 5, ,, Color, ., black, ,, 0.5f, ,, 5, ,]
[distance, ;, public, DefaultShadowGenerator, (, ), {, this, (, 5, ,, Color, ., black, ,, 0.5f, ,, 5, ,, -]
[distance, ;, public, DefaultShadowGenerator, (, ), {, this, (, 5, ,, Color, ., black, ,, 0.5f, ,, 5, ,, -]
[(, ), {, this, (, 5, ,, Color, ., black, ,, 0.5f, ,, 5, ,, -, Math, ., PI, /]
[DefaultShadowGenerator, (, int, size, ,, Color, color, ,, float, opacity, ,, int, distance, ,, double, angle, ), {, if, (]
[DefaultShadowGenerator, (, int, size, ,, Color, color, ,, float, opacity, ,, int, distance, ,, double, angle, ), {, if, (]
[int, size, ,, Color, color, ,, float, opacity, ,, int, distance, ,, double, angle, ), {, if, (, color, ==]
[color, ,, float, opacity, ,, int, distance, ,, double, angle, ), {, if, (, color, ==, null, ), {, throw]
[opacity, ,, int, distance, ,, double, angle, ), {, if, (, color, ==, null, ), {, throw, new, IllegalArgumentException, (]
[,, double, angle, ), {, if, (, color, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'color' argument.", ), ;, }]
[,, double, angle, ), {, if, (, color, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'color' argument.", ), ;, }]
[{, if, (, color, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'color' argument.", ), ;, }, this, ., shadowSize, =]
[(, color, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'color' argument.", ), ;, }, this, ., shadowSize, =, size, ;]
[(, color, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'color' argument.", ), ;, }, this, ., shadowSize, =, size, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'color' argument.", ), ;, }, this, ., shadowSize, =, size, ;, this, ., shadowColor, =]
[throw, new, IllegalArgumentException, (, "Null 'color' argument.", ), ;, }, this, ., shadowSize, =, size, ;, this, ., shadowColor, =, color, ;]
[throw, new, IllegalArgumentException, (, "Null 'color' argument.", ), ;, }, this, ., shadowSize, =, size, ;, this, ., shadowColor, =, color, ;]
["Null 'color' argument.", ), ;, }, this, ., shadowSize, =, size, ;, this, ., shadowColor, =, color, ;, this, ., shadowOpacity, =]
[;, }, this, ., shadowSize, =, size, ;, this, ., shadowColor, =, color, ;, this, ., shadowOpacity, =, opacity, ;]
[;, }, this, ., shadowSize, =, size, ;, this, ., shadowColor, =, color, ;, this, ., shadowOpacity, =, opacity, ;]
[shadowSize, =, size, ;, this, ., shadowColor, =, color, ;, this, ., shadowOpacity, =, opacity, ;, this, ., distance, =]
[size, ;, this, ., shadowColor, =, color, ;, this, ., shadowOpacity, =, opacity, ;, this, ., distance, =, distance, ;]
[size, ;, this, ., shadowColor, =, color, ;, this, ., shadowOpacity, =, opacity, ;, this, ., distance, =, distance, ;]
[shadowColor, =, color, ;, this, ., shadowOpacity, =, opacity, ;, this, ., distance, =, distance, ;, this, ., angle, =]
[this, ., distance, =, distance, ;, this, ., angle, =, angle, ;, }, public, int, getShadowSize, (, ), {, return]
[this, ., distance, =, distance, ;, this, ., angle, =, angle, ;, }, public, int, getShadowSize, (, ), {, return]
[}, public, int, getShadowSize, (, ), {, return, this, ., shadowSize, ;, }, public, Color, getShadowColor, (, ), {, return]
[}, public, int, getShadowSize, (, ), {, return, this, ., shadowSize, ;, }, public, Color, getShadowColor, (, ), {, return]
[}, public, Color, getShadowColor, (, ), {, return, this, ., shadowColor, ;, }, public, float, getShadowOpacity, (, ), {, return]
[}, public, Color, getShadowColor, (, ), {, return, this, ., shadowColor, ;, }, public, float, getShadowOpacity, (, ), {, return]
[}, public, float, getShadowOpacity, (, ), {, return, this, ., shadowOpacity, ;, }, public, int, getDistance, (, ), {, return]
[}, public, float, getShadowOpacity, (, ), {, return, this, ., shadowOpacity, ;, }, public, int, getDistance, (, ), {, return]
[}, public, int, getDistance, (, ), {, return, this, ., distance, ;, }, public, double, getAngle, (, ), {, return]
[}, public, int, getDistance, (, ), {, return, this, ., distance, ;, }, public, double, getAngle, (, ), {, return]
[}, public, double, getAngle, (, ), {, return, this, ., angle, ;, }, public, int, calculateOffsetX, (, ), {, return]
[}, public, double, getAngle, (, ), {, return, this, ., angle, ;, }, public, int, calculateOffsetX, (, ), {, return]
[getAngle, (, ), {, return, this, ., angle, ;, }, public, int, calculateOffsetX, (, ), {, return, (, int, )]
[(, ), {, return, this, ., angle, ;, }, public, int, calculateOffsetX, (, ), {, return, (, int, ), (]
[(, ), {, return, this, ., angle, ;, }, public, int, calculateOffsetX, (, ), {, return, (, int, ), (]
[(, ), {, return, this, ., angle, ;, }, public, int, calculateOffsetX, (, ), {, return, (, int, ), (]
[this, ., angle, ;, }, public, int, calculateOffsetX, (, ), {, return, (, int, ), (, Math, ., cos, (]
[this, ., angle, ;, }, public, int, calculateOffsetX, (, ), {, return, (, int, ), (, Math, ., cos, (]
[public, int, calculateOffsetX, (, ), {, return, (, int, ), (, Math, ., cos, (, this, ., angle, ), *]
[public, int, calculateOffsetX, (, ), {, return, (, int, ), (, Math, ., cos, (, this, ., angle, ), *]
[{, return, (, int, ), (, Math, ., cos, (, this, ., angle, ), *, this, ., distance, ), -]
[{, return, (, int, ), (, Math, ., cos, (, this, ., angle, ), *, this, ., distance, ), -]
[angle, ), *, this, ., distance, ), -, this, ., shadowSize, ;, }, public, int, calculateOffsetY, (, ), {, return]
[angle, ), *, this, ., distance, ), -, this, ., shadowSize, ;, }, public, int, calculateOffsetY, (, ), {, return]
[), *, this, ., distance, ), -, this, ., shadowSize, ;, }, public, int, calculateOffsetY, (, ), {, return, -]
[., distance, ), -, this, ., shadowSize, ;, }, public, int, calculateOffsetY, (, ), {, return, -, (, int, )]
[distance, ), -, this, ., shadowSize, ;, }, public, int, calculateOffsetY, (, ), {, return, -, (, int, ), (]
[distance, ), -, this, ., shadowSize, ;, }, public, int, calculateOffsetY, (, ), {, return, -, (, int, ), (]
[distance, ), -, this, ., shadowSize, ;, }, public, int, calculateOffsetY, (, ), {, return, -, (, int, ), (]
[., shadowSize, ;, }, public, int, calculateOffsetY, (, ), {, return, -, (, int, ), (, Math, ., sin, (]
[., shadowSize, ;, }, public, int, calculateOffsetY, (, ), {, return, -, (, int, ), (, Math, ., sin, (]
[int, calculateOffsetY, (, ), {, return, -, (, int, ), (, Math, ., sin, (, this, ., angle, ), *]
[int, calculateOffsetY, (, ), {, return, -, (, int, ), (, Math, ., sin, (, this, ., angle, ), *]
[return, -, (, int, ), (, Math, ., sin, (, this, ., angle, ), *, this, ., distance, ), -]
[return, -, (, int, ), (, Math, ., sin, (, this, ., angle, ), *, this, ., distance, ), -]
[., distance, ), -, this, ., shadowSize, ;, }, public, BufferedImage, createDropShadow, (, BufferedImage, source, ), {, BufferedImage, subject, =]
[-, this, ., shadowSize, ;, }, public, BufferedImage, createDropShadow, (, BufferedImage, source, ), {, BufferedImage, subject, =, new, BufferedImage, (]
[-, this, ., shadowSize, ;, }, public, BufferedImage, createDropShadow, (, BufferedImage, source, ), {, BufferedImage, subject, =, new, BufferedImage, (]
[-, this, ., shadowSize, ;, }, public, BufferedImage, createDropShadow, (, BufferedImage, source, ), {, BufferedImage, subject, =, new, BufferedImage, (]
[public, BufferedImage, createDropShadow, (, BufferedImage, source, ), {, BufferedImage, subject, =, new, BufferedImage, (, source, ., getWidth, (, ), +]
[public, BufferedImage, createDropShadow, (, BufferedImage, source, ), {, BufferedImage, subject, =, new, BufferedImage, (, source, ., getWidth, (, ), +]
[public, BufferedImage, createDropShadow, (, BufferedImage, source, ), {, BufferedImage, subject, =, new, BufferedImage, (, source, ., getWidth, (, ), +]
[BufferedImage, source, ), {, BufferedImage, subject, =, new, BufferedImage, (, source, ., getWidth, (, ), +, this, ., shadowSize, *]
[), {, BufferedImage, subject, =, new, BufferedImage, (, source, ., getWidth, (, ), +, this, ., shadowSize, *, 2, ,]
[), {, BufferedImage, subject, =, new, BufferedImage, (, source, ., getWidth, (, ), +, this, ., shadowSize, *, 2, ,]
[), {, BufferedImage, subject, =, new, BufferedImage, (, source, ., getWidth, (, ), +, this, ., shadowSize, *, 2, ,]
[BufferedImage, (, source, ., getWidth, (, ), +, this, ., shadowSize, *, 2, ,, source, ., getHeight, (, ), +]
[BufferedImage, (, source, ., getWidth, (, ), +, this, ., shadowSize, *, 2, ,, source, ., getHeight, (, ), +]
[BufferedImage, (, source, ., getWidth, (, ), +, this, ., shadowSize, *, 2, ,, source, ., getHeight, (, ), +]
[getWidth, (, ), +, this, ., shadowSize, *, 2, ,, source, ., getHeight, (, ), +, this, ., shadowSize, *]
[), +, this, ., shadowSize, *, 2, ,, source, ., getHeight, (, ), +, this, ., shadowSize, *, 2, ,]
[), +, this, ., shadowSize, *, 2, ,, source, ., getHeight, (, ), +, this, ., shadowSize, *, 2, ,]
[source, ., getHeight, (, ), +, this, ., shadowSize, *, 2, ,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =]
[source, ., getHeight, (, ), +, this, ., shadowSize, *, 2, ,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =]
[this, ., shadowSize, *, 2, ,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, subject, ., createGraphics, (, ), ;]
[this, ., shadowSize, *, 2, ,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, subject, ., createGraphics, (, ), ;]
[2, ,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, subject, ., createGraphics, (, ), ;, g2, ., drawImage, (]
[BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, subject, ., createGraphics, (, ), ;, g2, ., drawImage, (, source, ,]
[TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, subject, ., createGraphics, (, ), ;, g2, ., drawImage, (, source, ,, null, ,]
[;, Graphics2D, g2, =, subject, ., createGraphics, (, ), ;, g2, ., drawImage, (, source, ,, null, ,, shadowSize, ,]
[=, subject, ., createGraphics, (, ), ;, g2, ., drawImage, (, source, ,, null, ,, shadowSize, ,, shadowSize, ), ;]
[=, subject, ., createGraphics, (, ), ;, g2, ., drawImage, (, source, ,, null, ,, shadowSize, ,, shadowSize, ), ;]
[;, g2, ., drawImage, (, source, ,, null, ,, shadowSize, ,, shadowSize, ), ;, g2, ., dispose, (, ), ;]
[., drawImage, (, source, ,, null, ,, shadowSize, ,, shadowSize, ), ;, g2, ., dispose, (, ), ;, applyShadow, (]
[,, null, ,, shadowSize, ,, shadowSize, ), ;, g2, ., dispose, (, ), ;, applyShadow, (, subject, ), ;, return]
[applyShadow, (, subject, ), ;, return, subject, ;, }, protected, void, applyShadow, (, BufferedImage, image, ), {, int, dstWidth, =]
[applyShadow, (, subject, ), ;, return, subject, ;, }, protected, void, applyShadow, (, BufferedImage, image, ), {, int, dstWidth, =]
[protected, void, applyShadow, (, BufferedImage, image, ), {, int, dstWidth, =, image, ., getWidth, (, ), ;, int, dstHeight, =]
[protected, void, applyShadow, (, BufferedImage, image, ), {, int, dstWidth, =, image, ., getWidth, (, ), ;, int, dstHeight, =]
[dstWidth, =, image, ., getWidth, (, ), ;, int, dstHeight, =, image, ., getHeight, (, ), ;, int, left, =]
[dstWidth, =, image, ., getWidth, (, ), ;, int, dstHeight, =, image, ., getHeight, (, ), ;, int, left, =]
[=, image, ., getWidth, (, ), ;, int, dstHeight, =, image, ., getHeight, (, ), ;, int, left, =, (]
[=, image, ., getWidth, (, ), ;, int, dstHeight, =, image, ., getHeight, (, ), ;, int, left, =, (]
[., getWidth, (, ), ;, int, dstHeight, =, image, ., getHeight, (, ), ;, int, left, =, (, shadowSize, -]
[;, int, dstHeight, =, image, ., getHeight, (, ), ;, int, left, =, (, shadowSize, -, 1, ), >, >]
[., getHeight, (, ), ;, int, left, =, (, shadowSize, -, 1, ), >, >, 1, ;, int, right, =]
[., getHeight, (, ), ;, int, left, =, (, shadowSize, -, 1, ), >, >, 1, ;, int, right, =]
[(, ), ;, int, left, =, (, shadowSize, -, 1, ), >, >, 1, ;, int, right, =, shadowSize, -]
[=, (, shadowSize, -, 1, ), >, >, 1, ;, int, right, =, shadowSize, -, left, ;, int, xStart, =]
[), >, >, 1, ;, int, right, =, shadowSize, -, left, ;, int, xStart, =, left, ;, int, xStop, =]
[), >, >, 1, ;, int, right, =, shadowSize, -, left, ;, int, xStart, =, left, ;, int, xStop, =]
[>, 1, ;, int, right, =, shadowSize, -, left, ;, int, xStart, =, left, ;, int, xStop, =, dstWidth, -]
[=, shadowSize, -, left, ;, int, xStart, =, left, ;, int, xStop, =, dstWidth, -, right, ;, int, yStart, =]
[int, xStart, =, left, ;, int, xStop, =, dstWidth, -, right, ;, int, yStart, =, left, ;, int, yStop, =]
[int, xStart, =, left, ;, int, xStop, =, dstWidth, -, right, ;, int, yStart, =, left, ;, int, yStop, =]
[=, left, ;, int, xStop, =, dstWidth, -, right, ;, int, yStart, =, left, ;, int, yStop, =, dstHeight, -]
[=, dstWidth, -, right, ;, int, yStart, =, left, ;, int, yStop, =, dstHeight, -, right, ;, int, shadowRgb, =]
[=, dstWidth, -, right, ;, int, yStart, =, left, ;, int, yStop, =, dstHeight, -, right, ;, int, shadowRgb, =]
[=, dstWidth, -, right, ;, int, yStart, =, left, ;, int, yStop, =, dstHeight, -, right, ;, int, shadowRgb, =]
[yStart, =, left, ;, int, yStop, =, dstHeight, -, right, ;, int, shadowRgb, =, shadowColor, ., getRGB, (, ), &]
[dstHeight, -, right, ;, int, shadowRgb, =, shadowColor, ., getRGB, (, ), &, 0x00FFFFFF, ;, int, [, ], aHistory, =]
[;, int, shadowRgb, =, shadowColor, ., getRGB, (, ), &, 0x00FFFFFF, ;, int, [, ], aHistory, =, new, int, []
[getRGB, (, ), &, 0x00FFFFFF, ;, int, [, ], aHistory, =, new, int, [, shadowSize, ], ;, int, historyIdx, =]
[=, new, int, [, shadowSize, ], ;, int, historyIdx, =, 0, ;, int, aSum, ;, int, [, ], dataBuffer, =]
[=, new, int, [, shadowSize, ], ;, int, historyIdx, =, 0, ;, int, aSum, ;, int, [, ], dataBuffer, =]
[new, int, [, shadowSize, ], ;, int, historyIdx, =, 0, ;, int, aSum, ;, int, [, ], dataBuffer, =, (]
[shadowSize, ], ;, int, historyIdx, =, 0, ;, int, aSum, ;, int, [, ], dataBuffer, =, (, (, DataBufferInt, )]
[shadowSize, ], ;, int, historyIdx, =, 0, ;, int, aSum, ;, int, [, ], dataBuffer, =, (, (, DataBufferInt, )]
[shadowSize, ], ;, int, historyIdx, =, 0, ;, int, aSum, ;, int, [, ], dataBuffer, =, (, (, DataBufferInt, )]
[DataBufferInt, ), image, ., getRaster, (, ), ., getDataBuffer, (, ), ), ., getData, (, ), ;, int, lastPixelOffset, =]
[DataBufferInt, ), image, ., getRaster, (, ), ., getDataBuffer, (, ), ), ., getData, (, ), ;, int, lastPixelOffset, =]
[image, ., getRaster, (, ), ., getDataBuffer, (, ), ), ., getData, (, ), ;, int, lastPixelOffset, =, right, *]
[., getDataBuffer, (, ), ), ., getData, (, ), ;, int, lastPixelOffset, =, right, *, dstWidth, ;, float, sumDivider, =]
[., getDataBuffer, (, ), ), ., getData, (, ), ;, int, lastPixelOffset, =, right, *, dstWidth, ;, float, sumDivider, =]
[(, ), ), ., getData, (, ), ;, int, lastPixelOffset, =, right, *, dstWidth, ;, float, sumDivider, =, shadowOpacity, /]
[;, int, lastPixelOffset, =, right, *, dstWidth, ;, float, sumDivider, =, shadowOpacity, /, shadowSize, ;, for, (, int, y, =]
[right, *, dstWidth, ;, float, sumDivider, =, shadowOpacity, /, shadowSize, ;, for, (, int, y, =, 0, ,, bufferOffset, =]
[dstWidth, ;, float, sumDivider, =, shadowOpacity, /, shadowSize, ;, for, (, int, y, =, 0, ,, bufferOffset, =, 0, ;]
[dstWidth, ;, float, sumDivider, =, shadowOpacity, /, shadowSize, ;, for, (, int, y, =, 0, ,, bufferOffset, =, 0, ;]
[float, sumDivider, =, shadowOpacity, /, shadowSize, ;, for, (, int, y, =, 0, ,, bufferOffset, =, 0, ;, y, <]
[=, shadowOpacity, /, shadowSize, ;, for, (, int, y, =, 0, ,, bufferOffset, =, 0, ;, y, <, dstHeight, ;]
[=, shadowOpacity, /, shadowSize, ;, for, (, int, y, =, 0, ,, bufferOffset, =, 0, ;, y, <, dstHeight, ;]
[shadowSize, ;, for, (, int, y, =, 0, ,, bufferOffset, =, 0, ;, y, <, dstHeight, ;, y, ++, ,]
[for, (, int, y, =, 0, ,, bufferOffset, =, 0, ;, y, <, dstHeight, ;, y, ++, ,, bufferOffset, =]
[for, (, int, y, =, 0, ,, bufferOffset, =, 0, ;, y, <, dstHeight, ;, y, ++, ,, bufferOffset, =]
[int, y, =, 0, ,, bufferOffset, =, 0, ;, y, <, dstHeight, ;, y, ++, ,, bufferOffset, =, y, *]
[0, ,, bufferOffset, =, 0, ;, y, <, dstHeight, ;, y, ++, ,, bufferOffset, =, y, *, dstWidth, ), {]
[bufferOffset, =, 0, ;, y, <, dstHeight, ;, y, ++, ,, bufferOffset, =, y, *, dstWidth, ), {, aSum, =]
[0, ;, y, <, dstHeight, ;, y, ++, ,, bufferOffset, =, y, *, dstWidth, ), {, aSum, =, 0, ;]
[y, <, dstHeight, ;, y, ++, ,, bufferOffset, =, y, *, dstWidth, ), {, aSum, =, 0, ;, historyIdx, =]
[bufferOffset, =, y, *, dstWidth, ), {, aSum, =, 0, ;, historyIdx, =, 0, ;, for, (, int, x, =]
[y, *, dstWidth, ), {, aSum, =, 0, ;, historyIdx, =, 0, ;, for, (, int, x, =, 0, ;]
[y, *, dstWidth, ), {, aSum, =, 0, ;, historyIdx, =, 0, ;, for, (, int, x, =, 0, ;]
[dstWidth, ), {, aSum, =, 0, ;, historyIdx, =, 0, ;, for, (, int, x, =, 0, ;, x, <]
[{, aSum, =, 0, ;, historyIdx, =, 0, ;, for, (, int, x, =, 0, ;, x, <, shadowSize, ;]
[{, aSum, =, 0, ;, historyIdx, =, 0, ;, for, (, int, x, =, 0, ;, x, <, shadowSize, ;]
[0, ;, historyIdx, =, 0, ;, for, (, int, x, =, 0, ;, x, <, shadowSize, ;, x, ++, ,]
[0, ;, historyIdx, =, 0, ;, for, (, int, x, =, 0, ;, x, <, shadowSize, ;, x, ++, ,]
[(, int, x, =, 0, ;, x, <, shadowSize, ;, x, ++, ,, bufferOffset, ++, ), {, int, a, =]
[(, int, x, =, 0, ;, x, <, shadowSize, ;, x, ++, ,, bufferOffset, ++, ), {, int, a, =]
[(, int, x, =, 0, ;, x, <, shadowSize, ;, x, ++, ,, bufferOffset, ++, ), {, int, a, =]
[x, =, 0, ;, x, <, shadowSize, ;, x, ++, ,, bufferOffset, ++, ), {, int, a, =, dataBuffer, []
[<, shadowSize, ;, x, ++, ,, bufferOffset, ++, ), {, int, a, =, dataBuffer, [, bufferOffset, ], >, >, >]
[;, x, ++, ,, bufferOffset, ++, ), {, int, a, =, dataBuffer, [, bufferOffset, ], >, >, >, 24, ;]
[;, x, ++, ,, bufferOffset, ++, ), {, int, a, =, dataBuffer, [, bufferOffset, ], >, >, >, 24, ;]
[++, ,, bufferOffset, ++, ), {, int, a, =, dataBuffer, [, bufferOffset, ], >, >, >, 24, ;, aHistory, []
[++, ), {, int, a, =, dataBuffer, [, bufferOffset, ], >, >, >, 24, ;, aHistory, [, x, ], =]
[{, int, a, =, dataBuffer, [, bufferOffset, ], >, >, >, 24, ;, aHistory, [, x, ], =, a, ;]
[a, =, dataBuffer, [, bufferOffset, ], >, >, >, 24, ;, aHistory, [, x, ], =, a, ;, aSum, +=]
[[, bufferOffset, ], >, >, >, 24, ;, aHistory, [, x, ], =, a, ;, aSum, +=, a, ;, }]
[], >, >, >, 24, ;, aHistory, [, x, ], =, a, ;, aSum, +=, a, ;, }, bufferOffset, -=]
[[, x, ], =, a, ;, aSum, +=, a, ;, }, bufferOffset, -=, right, ;, for, (, int, x, =]
[], =, a, ;, aSum, +=, a, ;, }, bufferOffset, -=, right, ;, for, (, int, x, =, xStart, ;]
[], =, a, ;, aSum, +=, a, ;, }, bufferOffset, -=, right, ;, for, (, int, x, =, xStart, ;]
[a, ;, aSum, +=, a, ;, }, bufferOffset, -=, right, ;, for, (, int, x, =, xStart, ;, x, <]
[aSum, +=, a, ;, }, bufferOffset, -=, right, ;, for, (, int, x, =, xStart, ;, x, <, xStop, ;]
[aSum, +=, a, ;, }, bufferOffset, -=, right, ;, for, (, int, x, =, xStart, ;, x, <, xStop, ;]
[;, }, bufferOffset, -=, right, ;, for, (, int, x, =, xStart, ;, x, <, xStop, ;, x, ++, ,]
[;, }, bufferOffset, -=, right, ;, for, (, int, x, =, xStart, ;, x, <, xStop, ;, x, ++, ,]
[(, int, x, =, xStart, ;, x, <, xStop, ;, x, ++, ,, bufferOffset, ++, ), {, int, a, =]
[=, xStart, ;, x, <, xStop, ;, x, ++, ,, bufferOffset, ++, ), {, int, a, =, (, int, )]
[xStart, ;, x, <, xStop, ;, x, ++, ,, bufferOffset, ++, ), {, int, a, =, (, int, ), (]
[xStart, ;, x, <, xStop, ;, x, ++, ,, bufferOffset, ++, ), {, int, a, =, (, int, ), (]
[x, <, xStop, ;, x, ++, ,, bufferOffset, ++, ), {, int, a, =, (, int, ), (, aSum, *]
[;, x, ++, ,, bufferOffset, ++, ), {, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;]
[;, x, ++, ,, bufferOffset, ++, ), {, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;]
[++, ,, bufferOffset, ++, ), {, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, []
[++, ), {, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =]
[++, ), {, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =]
[++, ), {, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =]
[{, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =, a, <<]
[a, =, (, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =, a, <<, 24, |]
[(, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;]
[), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=]
[), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=]
[aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, []
[), ;, dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;]
[dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =]
[dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =]
[dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =]
[bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =, dataBuffer, []
[bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =, dataBuffer, []
[=, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =, dataBuffer, [, bufferOffset, +]
[shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =, dataBuffer, [, bufferOffset, +, right, ], >, >, >]
[aSum, -=, aHistory, [, historyIdx, ], ;, a, =, dataBuffer, [, bufferOffset, +, right, ], >, >, >, 24, ;]
[aSum, -=, aHistory, [, historyIdx, ], ;, a, =, dataBuffer, [, bufferOffset, +, right, ], >, >, >, 24, ;]
[aHistory, [, historyIdx, ], ;, a, =, dataBuffer, [, bufferOffset, +, right, ], >, >, >, 24, ;, aHistory, []
[], ;, a, =, dataBuffer, [, bufferOffset, +, right, ], >, >, >, 24, ;, aHistory, [, historyIdx, ], =]
[a, =, dataBuffer, [, bufferOffset, +, right, ], >, >, >, 24, ;, aHistory, [, historyIdx, ], =, a, ;]
[dataBuffer, [, bufferOffset, +, right, ], >, >, >, 24, ;, aHistory, [, historyIdx, ], =, a, ;, aSum, +=]
[right, ], >, >, >, 24, ;, aHistory, [, historyIdx, ], =, a, ;, aSum, +=, a, ;, if, (]
[right, ], >, >, >, 24, ;, aHistory, [, historyIdx, ], =, a, ;, aSum, +=, a, ;, if, (]
[], >, >, >, 24, ;, aHistory, [, historyIdx, ], =, a, ;, aSum, +=, a, ;, if, (, ++]
[>, >, 24, ;, aHistory, [, historyIdx, ], =, a, ;, aSum, +=, a, ;, if, (, ++, historyIdx, >=]
[;, aHistory, [, historyIdx, ], =, a, ;, aSum, +=, a, ;, if, (, ++, historyIdx, >=, shadowSize, ), {]
[[, historyIdx, ], =, a, ;, aSum, +=, a, ;, if, (, ++, historyIdx, >=, shadowSize, ), {, historyIdx, -=]
[if, (, ++, historyIdx, >=, shadowSize, ), {, historyIdx, -=, shadowSize, ;, }, }, }, for, (, int, x, =]
[>=, shadowSize, ), {, historyIdx, -=, shadowSize, ;, }, }, }, for, (, int, x, =, 0, ,, bufferOffset, =]
[), {, historyIdx, -=, shadowSize, ;, }, }, }, for, (, int, x, =, 0, ,, bufferOffset, =, 0, ;]
[), {, historyIdx, -=, shadowSize, ;, }, }, }, for, (, int, x, =, 0, ,, bufferOffset, =, 0, ;]
[historyIdx, -=, shadowSize, ;, }, }, }, for, (, int, x, =, 0, ,, bufferOffset, =, 0, ;, x, <]
[shadowSize, ;, }, }, }, for, (, int, x, =, 0, ,, bufferOffset, =, 0, ;, x, <, dstWidth, ;]
[shadowSize, ;, }, }, }, for, (, int, x, =, 0, ,, bufferOffset, =, 0, ;, x, <, dstWidth, ;]
[}, }, for, (, int, x, =, 0, ,, bufferOffset, =, 0, ;, x, <, dstWidth, ;, x, ++, ,]
[for, (, int, x, =, 0, ,, bufferOffset, =, 0, ;, x, <, dstWidth, ;, x, ++, ,, bufferOffset, =]
[x, =, 0, ,, bufferOffset, =, 0, ;, x, <, dstWidth, ;, x, ++, ,, bufferOffset, =, x, ), {]
[0, ,, bufferOffset, =, 0, ;, x, <, dstWidth, ;, x, ++, ,, bufferOffset, =, x, ), {, aSum, =]
[bufferOffset, =, 0, ;, x, <, dstWidth, ;, x, ++, ,, bufferOffset, =, x, ), {, aSum, =, 0, ;]
[0, ;, x, <, dstWidth, ;, x, ++, ,, bufferOffset, =, x, ), {, aSum, =, 0, ;, historyIdx, =]
[++, ,, bufferOffset, =, x, ), {, aSum, =, 0, ;, historyIdx, =, 0, ;, for, (, int, y, =]
[bufferOffset, =, x, ), {, aSum, =, 0, ;, historyIdx, =, 0, ;, for, (, int, y, =, 0, ;]
[bufferOffset, =, x, ), {, aSum, =, 0, ;, historyIdx, =, 0, ;, for, (, int, y, =, 0, ;]
[x, ), {, aSum, =, 0, ;, historyIdx, =, 0, ;, for, (, int, y, =, 0, ;, y, <]
[{, aSum, =, 0, ;, historyIdx, =, 0, ;, for, (, int, y, =, 0, ;, y, <, shadowSize, ;]
[{, aSum, =, 0, ;, historyIdx, =, 0, ;, for, (, int, y, =, 0, ;, y, <, shadowSize, ;]
[0, ;, historyIdx, =, 0, ;, for, (, int, y, =, 0, ;, y, <, shadowSize, ;, y, ++, ,]
[historyIdx, =, 0, ;, for, (, int, y, =, 0, ;, y, <, shadowSize, ;, y, ++, ,, bufferOffset, +=]
[int, y, =, 0, ;, y, <, shadowSize, ;, y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =]
[int, y, =, 0, ;, y, <, shadowSize, ;, y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =]
[int, y, =, 0, ;, y, <, shadowSize, ;, y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =]
[=, 0, ;, y, <, shadowSize, ;, y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =, dataBuffer, []
[shadowSize, ;, y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =, dataBuffer, [, bufferOffset, ], >, >, >]
[y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =, dataBuffer, [, bufferOffset, ], >, >, >, 24, ;]
[y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =, dataBuffer, [, bufferOffset, ], >, >, >, 24, ;]
[,, bufferOffset, +=, dstWidth, ), {, int, a, =, dataBuffer, [, bufferOffset, ], >, >, >, 24, ;, aHistory, []
[dstWidth, ), {, int, a, =, dataBuffer, [, bufferOffset, ], >, >, >, 24, ;, aHistory, [, y, ], =]
[{, int, a, =, dataBuffer, [, bufferOffset, ], >, >, >, 24, ;, aHistory, [, y, ], =, a, ;]
[a, =, dataBuffer, [, bufferOffset, ], >, >, >, 24, ;, aHistory, [, y, ], =, a, ;, aSum, +=]
[[, bufferOffset, ], >, >, >, 24, ;, aHistory, [, y, ], =, a, ;, aSum, +=, a, ;, }]
[], >, >, >, 24, ;, aHistory, [, y, ], =, a, ;, aSum, +=, a, ;, }, bufferOffset, -=]
[[, y, ], =, a, ;, aSum, +=, a, ;, }, bufferOffset, -=, lastPixelOffset, ;, for, (, int, y, =]
[], =, a, ;, aSum, +=, a, ;, }, bufferOffset, -=, lastPixelOffset, ;, for, (, int, y, =, yStart, ;]
[], =, a, ;, aSum, +=, a, ;, }, bufferOffset, -=, lastPixelOffset, ;, for, (, int, y, =, yStart, ;]
[a, ;, aSum, +=, a, ;, }, bufferOffset, -=, lastPixelOffset, ;, for, (, int, y, =, yStart, ;, y, <]
[aSum, +=, a, ;, }, bufferOffset, -=, lastPixelOffset, ;, for, (, int, y, =, yStart, ;, y, <, yStop, ;]
[aSum, +=, a, ;, }, bufferOffset, -=, lastPixelOffset, ;, for, (, int, y, =, yStart, ;, y, <, yStop, ;]
[;, }, bufferOffset, -=, lastPixelOffset, ;, for, (, int, y, =, yStart, ;, y, <, yStop, ;, y, ++, ,]
[bufferOffset, -=, lastPixelOffset, ;, for, (, int, y, =, yStart, ;, y, <, yStop, ;, y, ++, ,, bufferOffset, +=]
[int, y, =, yStart, ;, y, <, yStop, ;, y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =]
[yStart, ;, y, <, yStop, ;, y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =, (, int, )]
[;, y, <, yStop, ;, y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =, (, int, ), (]
[;, y, <, yStop, ;, y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =, (, int, ), (]
[<, yStop, ;, y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =, (, int, ), (, aSum, *]
[y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;]
[y, ++, ,, bufferOffset, +=, dstWidth, ), {, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;]
[,, bufferOffset, +=, dstWidth, ), {, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, []
[dstWidth, ), {, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =]
[dstWidth, ), {, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =]
[dstWidth, ), {, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =]
[{, int, a, =, (, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =, a, <<]
[a, =, (, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =, a, <<, 24, |]
[(, int, ), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;]
[), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=]
[), (, aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=]
[aSum, *, sumDivider, ), ;, dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, []
[), ;, dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;]
[dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =]
[dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =]
[dataBuffer, [, bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =]
[bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =, dataBuffer, []
[bufferOffset, ], =, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =, dataBuffer, []
[=, a, <<, 24, |, shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =, dataBuffer, [, bufferOffset, +]
[shadowRgb, ;, aSum, -=, aHistory, [, historyIdx, ], ;, a, =, dataBuffer, [, bufferOffset, +, lastPixelOffset, ], >, >, >]
[aSum, -=, aHistory, [, historyIdx, ], ;, a, =, dataBuffer, [, bufferOffset, +, lastPixelOffset, ], >, >, >, 24, ;]
[aSum, -=, aHistory, [, historyIdx, ], ;, a, =, dataBuffer, [, bufferOffset, +, lastPixelOffset, ], >, >, >, 24, ;]
[aHistory, [, historyIdx, ], ;, a, =, dataBuffer, [, bufferOffset, +, lastPixelOffset, ], >, >, >, 24, ;, aHistory, []
[], ;, a, =, dataBuffer, [, bufferOffset, +, lastPixelOffset, ], >, >, >, 24, ;, aHistory, [, historyIdx, ], =]
[a, =, dataBuffer, [, bufferOffset, +, lastPixelOffset, ], >, >, >, 24, ;, aHistory, [, historyIdx, ], =, a, ;]
[dataBuffer, [, bufferOffset, +, lastPixelOffset, ], >, >, >, 24, ;, aHistory, [, historyIdx, ], =, a, ;, aSum, +=]
[lastPixelOffset, ], >, >, >, 24, ;, aHistory, [, historyIdx, ], =, a, ;, aSum, +=, a, ;, if, (]
[lastPixelOffset, ], >, >, >, 24, ;, aHistory, [, historyIdx, ], =, a, ;, aSum, +=, a, ;, if, (]
[], >, >, >, 24, ;, aHistory, [, historyIdx, ], =, a, ;, aSum, +=, a, ;, if, (, ++]
[>, >, 24, ;, aHistory, [, historyIdx, ], =, a, ;, aSum, +=, a, ;, if, (, ++, historyIdx, >=]
[;, aHistory, [, historyIdx, ], =, a, ;, aSum, +=, a, ;, if, (, ++, historyIdx, >=, shadowSize, ), {]
[[, historyIdx, ], =, a, ;, aSum, +=, a, ;, if, (, ++, historyIdx, >=, shadowSize, ), {, historyIdx, -=]
[), {, historyIdx, -=, shadowSize, ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), {, historyIdx, -=, shadowSize, ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[historyIdx, -=, shadowSize, ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[}, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DefaultShadowGenerator, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, DefaultShadowGenerator, ), ), {, return, false, ;, }, DefaultShadowGenerator, that, =]
[if, (, !, (, obj, instanceof, DefaultShadowGenerator, ), ), {, return, false, ;, }, DefaultShadowGenerator, that, =, (, DefaultShadowGenerator, )]
[obj, instanceof, DefaultShadowGenerator, ), ), {, return, false, ;, }, DefaultShadowGenerator, that, =, (, DefaultShadowGenerator, ), obj, ;, if, (]
[obj, instanceof, DefaultShadowGenerator, ), ), {, return, false, ;, }, DefaultShadowGenerator, that, =, (, DefaultShadowGenerator, ), obj, ;, if, (]
[obj, instanceof, DefaultShadowGenerator, ), ), {, return, false, ;, }, DefaultShadowGenerator, that, =, (, DefaultShadowGenerator, ), obj, ;, if, (]
[), {, return, false, ;, }, DefaultShadowGenerator, that, =, (, DefaultShadowGenerator, ), obj, ;, if, (, this, ., shadowSize, !=]
[), {, return, false, ;, }, DefaultShadowGenerator, that, =, (, DefaultShadowGenerator, ), obj, ;, if, (, this, ., shadowSize, !=]
[DefaultShadowGenerator, that, =, (, DefaultShadowGenerator, ), obj, ;, if, (, this, ., shadowSize, !=, that, ., shadowSize, ), {, return]
[), obj, ;, if, (, this, ., shadowSize, !=, that, ., shadowSize, ), {, return, false, ;, }, if, (]
[obj, ;, if, (, this, ., shadowSize, !=, that, ., shadowSize, ), {, return, false, ;, }, if, (, !]
[obj, ;, if, (, this, ., shadowSize, !=, that, ., shadowSize, ), {, return, false, ;, }, if, (, !]
[obj, ;, if, (, this, ., shadowSize, !=, that, ., shadowSize, ), {, return, false, ;, }, if, (, !]
[shadowSize, !=, that, ., shadowSize, ), {, return, false, ;, }, if, (, !, this, ., shadowColor, ., equals, (]
[shadowSize, !=, that, ., shadowSize, ), {, return, false, ;, }, if, (, !, this, ., shadowColor, ., equals, (]
[return, false, ;, }, if, (, !, this, ., shadowColor, ., equals, (, that, ., shadowColor, ), ), {, return]
[(, !, this, ., shadowColor, ., equals, (, that, ., shadowColor, ), ), {, return, false, ;, }, if, (]
[(, !, this, ., shadowColor, ., equals, (, that, ., shadowColor, ), ), {, return, false, ;, }, if, (]
[(, !, this, ., shadowColor, ., equals, (, that, ., shadowColor, ), ), {, return, false, ;, }, if, (]
[shadowColor, ., equals, (, that, ., shadowColor, ), ), {, return, false, ;, }, if, (, this, ., shadowOpacity, !=]
[shadowColor, ., equals, (, that, ., shadowColor, ), ), {, return, false, ;, }, if, (, this, ., shadowOpacity, !=]
[shadowColor, ), ), {, return, false, ;, }, if, (, this, ., shadowOpacity, !=, that, ., shadowOpacity, ), {, return]
[false, ;, }, if, (, this, ., shadowOpacity, !=, that, ., shadowOpacity, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., shadowOpacity, !=, that, ., shadowOpacity, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., shadowOpacity, !=, that, ., shadowOpacity, ), {, return, false, ;, }, if, (]
[(, this, ., shadowOpacity, !=, that, ., shadowOpacity, ), {, return, false, ;, }, if, (, this, ., distance, !=]
[(, this, ., shadowOpacity, !=, that, ., shadowOpacity, ), {, return, false, ;, }, if, (, this, ., distance, !=]
[., shadowOpacity, ), {, return, false, ;, }, if, (, this, ., distance, !=, that, ., distance, ), {, return]
[false, ;, }, if, (, this, ., distance, !=, that, ., distance, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., distance, !=, that, ., distance, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., distance, !=, that, ., distance, ), {, return, false, ;, }, if, (]
[(, this, ., distance, !=, that, ., distance, ), {, return, false, ;, }, if, (, this, ., angle, !=]
[(, this, ., distance, !=, that, ., distance, ), {, return, false, ;, }, if, (, this, ., angle, !=]
[., distance, ), {, return, false, ;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return]
[return, false, ;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, return]
[angle, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =]
[angle, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =, HashUtilities, ., hashCode, (]
[}, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =, HashUtilities, ., hashCode, (, 17, ,]
[}, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =, HashUtilities, ., hashCode, (, 17, ,]
[public, int, hashCode, (, ), {, int, hash, =, HashUtilities, ., hashCode, (, 17, ,, this, ., shadowSize, ), ;]
[hashCode, (, ), {, int, hash, =, HashUtilities, ., hashCode, (, 17, ,, this, ., shadowSize, ), ;, hash, =]
[hashCode, (, ), {, int, hash, =, HashUtilities, ., hashCode, (, 17, ,, this, ., shadowSize, ), ;, hash, =]
[int, hash, =, HashUtilities, ., hashCode, (, 17, ,, this, ., shadowSize, ), ;, hash, =, HashUtilities, ., hashCode, (]
[=, HashUtilities, ., hashCode, (, 17, ,, this, ., shadowSize, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[=, HashUtilities, ., hashCode, (, 17, ,, this, ., shadowSize, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[17, ,, this, ., shadowSize, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., shadowColor, ), ;]
[this, ., shadowSize, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., shadowColor, ), ;, hash, =]
[this, ., shadowSize, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., shadowColor, ), ;, hash, =]
[;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., shadowColor, ), ;, hash, =, HashUtilities, ., hashCode, (]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., shadowColor, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., shadowColor, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[hash, ,, this, ., shadowColor, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., shadowOpacity, ), ;]
[this, ., shadowColor, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., shadowOpacity, ), ;, hash, =]
[this, ., shadowColor, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., shadowOpacity, ), ;, hash, =]
[;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., shadowOpacity, ), ;, hash, =, HashUtilities, ., hashCode, (]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., shadowOpacity, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., shadowOpacity, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[hash, ,, this, ., shadowOpacity, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., distance, ), ;]
[this, ., shadowOpacity, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., distance, ), ;, hash, =]
[this, ., shadowOpacity, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., distance, ), ;, hash, =]
[;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., distance, ), ;, hash, =, HashUtilities, ., hashCode, (]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., distance, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., distance, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[,, this, ., distance, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., angle, ), ;, return]
