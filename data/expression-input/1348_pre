[abstract, class, BaseAbstractUnivariateSolver, <, FUNC, extends, UnivariateFunction, >, implements, BaseUnivariateSolver, <, FUNC, >, {, private, static, final, double, DEFAULT_RELATIVE_ACCURACY, =]
[implements, BaseUnivariateSolver, <, FUNC, >, {, private, static, final, double, DEFAULT_RELATIVE_ACCURACY, =, 1e-14, ;, private, static, final, double, DEFAULT_FUNCTION_VALUE_ACCURACY, =]
[private, final, double, functionValueAccuracy, ;, private, final, double, absoluteAccuracy, ;, private, final, double, relativeAccuracy, ;, private, final, Incrementor, evaluations, =]
[searchMax, ;, private, double, searchStart, ;, private, FUNC, function, ;, protected, BaseAbstractUnivariateSolver, (, final, double, absoluteAccuracy, ), {, this, (]
[private, double, searchStart, ;, private, FUNC, function, ;, protected, BaseAbstractUnivariateSolver, (, final, double, absoluteAccuracy, ), {, this, (, DEFAULT_RELATIVE_ACCURACY, ,]
[searchStart, ;, private, FUNC, function, ;, protected, BaseAbstractUnivariateSolver, (, final, double, absoluteAccuracy, ), {, this, (, DEFAULT_RELATIVE_ACCURACY, ,, absoluteAccuracy, ,]
[absoluteAccuracy, ,, DEFAULT_FUNCTION_VALUE_ACCURACY, ), ;, }, protected, BaseAbstractUnivariateSolver, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ), {, this, (]
[DEFAULT_FUNCTION_VALUE_ACCURACY, ), ;, }, protected, BaseAbstractUnivariateSolver, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ), {, this, (, relativeAccuracy, ,]
[;, }, protected, BaseAbstractUnivariateSolver, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ), {, this, (, relativeAccuracy, ,, absoluteAccuracy, ,]
[DEFAULT_FUNCTION_VALUE_ACCURACY, ), ;, }, protected, BaseAbstractUnivariateSolver, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ,, final, double, functionValueAccuracy, ), {]
[DEFAULT_FUNCTION_VALUE_ACCURACY, ), ;, }, protected, BaseAbstractUnivariateSolver, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ,, final, double, functionValueAccuracy, ), {]
[protected, BaseAbstractUnivariateSolver, (, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ,, final, double, functionValueAccuracy, ), {, this, ., absoluteAccuracy, =]
[(, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ,, final, double, functionValueAccuracy, ), {, this, ., absoluteAccuracy, =, absoluteAccuracy, ;]
[(, final, double, relativeAccuracy, ,, final, double, absoluteAccuracy, ,, final, double, functionValueAccuracy, ), {, this, ., absoluteAccuracy, =, absoluteAccuracy, ;]
[,, final, double, absoluteAccuracy, ,, final, double, functionValueAccuracy, ), {, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, this, ., relativeAccuracy, =]
[double, absoluteAccuracy, ,, final, double, functionValueAccuracy, ), {, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, this, ., relativeAccuracy, =, relativeAccuracy, ;]
[double, absoluteAccuracy, ,, final, double, functionValueAccuracy, ), {, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, this, ., relativeAccuracy, =, relativeAccuracy, ;]
[double, functionValueAccuracy, ), {, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy, =]
[this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaxEvaluations, (, ), {, return]
[this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaxEvaluations, (, ), {, return]
[int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (, ), {, return]
[int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (, ), {, return]
[int, getEvaluations, (, ), {, return, evaluations, ., getCount, (, ), ;, }, public, double, getMin, (, ), {, return]
[), ;, }, public, double, getMin, (, ), {, return, searchMin, ;, }, public, double, getMax, (, ), {, return]
[searchMin, ;, }, public, double, getMax, (, ), {, return, searchMax, ;, }, public, double, getStartValue, (, ), {, return]
[searchMax, ;, }, public, double, getStartValue, (, ), {, return, searchStart, ;, }, public, double, getAbsoluteAccuracy, (, ), {, return]
[searchStart, ;, }, public, double, getAbsoluteAccuracy, (, ), {, return, absoluteAccuracy, ;, }, public, double, getRelativeAccuracy, (, ), {, return]
[absoluteAccuracy, ;, }, public, double, getRelativeAccuracy, (, ), {, return, relativeAccuracy, ;, }, public, double, getFunctionValueAccuracy, (, ), {, return]
[public, double, getFunctionValueAccuracy, (, ), {, return, functionValueAccuracy, ;, }, protected, double, computeObjectiveValue, (, double, point, ), throws, TooManyEvaluationsException, {]
[{, return, functionValueAccuracy, ;, }, protected, double, computeObjectiveValue, (, double, point, ), throws, TooManyEvaluationsException, {, incrementEvaluationCount, (, ), ;, return]
[{, return, functionValueAccuracy, ;, }, protected, double, computeObjectiveValue, (, double, point, ), throws, TooManyEvaluationsException, {, incrementEvaluationCount, (, ), ;, return]
[}, protected, double, computeObjectiveValue, (, double, point, ), throws, TooManyEvaluationsException, {, incrementEvaluationCount, (, ), ;, return, function, ., value, (]
[setup, (, int, maxEval, ,, FUNC, f, ,, double, min, ,, double, max, ,, double, startValue, ), throws, NullArgumentException, {]
[setup, (, int, maxEval, ,, FUNC, f, ,, double, min, ,, double, max, ,, double, startValue, ), throws, NullArgumentException, {]
[,, FUNC, f, ,, double, min, ,, double, max, ,, double, startValue, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (]
[,, double, min, ,, double, max, ,, double, startValue, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, f, ), ;]
[min, ,, double, max, ,, double, startValue, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, f, ), ;, searchMin, =]
[double, max, ,, double, startValue, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, f, ), ;, searchMin, =, min, ;]
[,, double, startValue, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, f, ), ;, searchMin, =, min, ;, searchMax, =]
[startValue, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, f, ), ;, searchMin, =, min, ;, searchMax, =, max, ;]
[throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, f, ), ;, searchMin, =, min, ;, searchMax, =, max, ;, searchStart, =]
[{, MathUtils, ., checkNotNull, (, f, ), ;, searchMin, =, min, ;, searchMax, =, max, ;, searchStart, =, startValue, ;]
[., checkNotNull, (, f, ), ;, searchMin, =, min, ;, searchMax, =, max, ;, searchStart, =, startValue, ;, function, =]
[(, f, ), ;, searchMin, =, min, ;, searchMax, =, max, ;, searchStart, =, startValue, ;, function, =, f, ;]
[(, f, ), ;, searchMin, =, min, ;, searchMax, =, max, ;, searchStart, =, startValue, ;, function, =, f, ;]
[searchMin, =, min, ;, searchMax, =, max, ;, searchStart, =, startValue, ;, function, =, f, ;, evaluations, ., setMaximalCount, (]
[;, searchMax, =, max, ;, searchStart, =, startValue, ;, function, =, f, ;, evaluations, ., setMaximalCount, (, maxEval, ), ;]
[;, searchMax, =, max, ;, searchStart, =, startValue, ;, function, =, f, ;, evaluations, ., setMaximalCount, (, maxEval, ), ;]
[int, maxEval, ,, FUNC, f, ,, double, min, ,, double, max, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {]
[,, FUNC, f, ,, double, min, ,, double, max, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, setup, (]
[f, ,, double, min, ,, double, max, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, setup, (, maxEval, ,]
[double, min, ,, double, max, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, setup, (, maxEval, ,, f, ,]
[,, double, max, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, setup, (, maxEval, ,, f, ,, min, ,]
[max, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, setup, (, maxEval, ,, f, ,, min, ,, max, ,]
[), throws, TooManyEvaluationsException, ,, NoBracketingException, {, setup, (, maxEval, ,, f, ,, min, ,, max, ,, startValue, ), ;, return]
[;, }, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, min, ,, double, max, ), {, return]
[public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, min, ,, double, max, ), {, return, solve, (]
[solve, (, int, maxEval, ,, FUNC, f, ,, double, min, ,, double, max, ), {, return, solve, (, maxEval, ,]
[int, maxEval, ,, FUNC, f, ,, double, min, ,, double, max, ), {, return, solve, (, maxEval, ,, f, ,]
[,, FUNC, f, ,, double, min, ,, double, max, ), {, return, solve, (, maxEval, ,, f, ,, min, ,]
[f, ,, double, min, ,, double, max, ), {, return, solve, (, maxEval, ,, f, ,, min, ,, max, ,]
[f, ,, double, min, ,, double, max, ), {, return, solve, (, maxEval, ,, f, ,, min, ,, max, ,]
[double, min, ,, double, max, ), {, return, solve, (, maxEval, ,, f, ,, min, ,, max, ,, min, +]
[double, min, ,, double, max, ), {, return, solve, (, maxEval, ,, f, ,, min, ,, max, ,, min, +]
[,, double, max, ), {, return, solve, (, maxEval, ,, f, ,, min, ,, max, ,, min, +, 0.5, *]
[double, max, ), {, return, solve, (, maxEval, ,, f, ,, min, ,, max, ,, min, +, 0.5, *, (]
[double, max, ), {, return, solve, (, maxEval, ,, f, ,, min, ,, max, ,, min, +, 0.5, *, (]
[), {, return, solve, (, maxEval, ,, f, ,, min, ,, max, ,, min, +, 0.5, *, (, max, -]
[}, public, double, solve, (, int, maxEval, ,, FUNC, f, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, return]
[double, solve, (, int, maxEval, ,, FUNC, f, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, return, solve, (]
[(, int, maxEval, ,, FUNC, f, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, return, solve, (, maxEval, ,]
[maxEval, ,, FUNC, f, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, return, solve, (, maxEval, ,, f, ,]
[maxEval, ,, FUNC, f, ,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, return, solve, (, maxEval, ,, f, ,]
[,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, return, solve, (, maxEval, ,, f, ,, Double, ., NaN, ,]
[,, double, startValue, ), throws, TooManyEvaluationsException, ,, NoBracketingException, {, return, solve, (, maxEval, ,, f, ,, Double, ., NaN, ,]
[throws, TooManyEvaluationsException, ,, NoBracketingException, {, return, solve, (, maxEval, ,, f, ,, Double, ., NaN, ,, Double, ., NaN, ,]
[), throws, TooManyEvaluationsException, ,, NoBracketingException, ;, protected, boolean, isBracketing, (, final, double, lower, ,, final, double, upper, ), {, return]
[), throws, TooManyEvaluationsException, ,, NoBracketingException, ;, protected, boolean, isBracketing, (, final, double, lower, ,, final, double, upper, ), {, return]
[NoBracketingException, ;, protected, boolean, isBracketing, (, final, double, lower, ,, final, double, upper, ), {, return, UnivariateSolverUtils, ., isBracketing, (]
[protected, boolean, isBracketing, (, final, double, lower, ,, final, double, upper, ), {, return, UnivariateSolverUtils, ., isBracketing, (, function, ,]
[isBracketing, (, final, double, lower, ,, final, double, upper, ), {, return, UnivariateSolverUtils, ., isBracketing, (, function, ,, lower, ,]
[;, }, protected, boolean, isSequence, (, final, double, start, ,, final, double, mid, ,, final, double, end, ), {, return]
[;, }, protected, boolean, isSequence, (, final, double, start, ,, final, double, mid, ,, final, double, end, ), {, return]
[isSequence, (, final, double, start, ,, final, double, mid, ,, final, double, end, ), {, return, UnivariateSolverUtils, ., isSequence, (]
[final, double, start, ,, final, double, mid, ,, final, double, end, ), {, return, UnivariateSolverUtils, ., isSequence, (, start, ,]
[start, ,, final, double, mid, ,, final, double, end, ), {, return, UnivariateSolverUtils, ., isSequence, (, start, ,, mid, ,]
[,, end, ), ;, }, protected, void, verifyInterval, (, final, double, lower, ,, final, double, upper, ), throws, NumberIsTooLargeException, {]
[,, end, ), ;, }, protected, void, verifyInterval, (, final, double, lower, ,, final, double, upper, ), throws, NumberIsTooLargeException, {]
[}, protected, void, verifyInterval, (, final, double, lower, ,, final, double, upper, ), throws, NumberIsTooLargeException, {, UnivariateSolverUtils, ., verifyInterval, (]
[void, verifyInterval, (, final, double, lower, ,, final, double, upper, ), throws, NumberIsTooLargeException, {, UnivariateSolverUtils, ., verifyInterval, (, lower, ,]
[}, protected, void, verifySequence, (, final, double, lower, ,, final, double, initial, ,, final, double, upper, ), throws, NumberIsTooLargeException, {]
[}, protected, void, verifySequence, (, final, double, lower, ,, final, double, initial, ,, final, double, upper, ), throws, NumberIsTooLargeException, {]
[(, final, double, lower, ,, final, double, initial, ,, final, double, upper, ), throws, NumberIsTooLargeException, {, UnivariateSolverUtils, ., verifySequence, (]
[double, lower, ,, final, double, initial, ,, final, double, upper, ), throws, NumberIsTooLargeException, {, UnivariateSolverUtils, ., verifySequence, (, lower, ,]
[,, final, double, initial, ,, final, double, upper, ), throws, NumberIsTooLargeException, {, UnivariateSolverUtils, ., verifySequence, (, lower, ,, initial, ,]
[), ;, }, protected, void, verifyBracketing, (, final, double, lower, ,, final, double, upper, ), throws, NullArgumentException, ,, NoBracketingException, {]
[), ;, }, protected, void, verifyBracketing, (, final, double, lower, ,, final, double, upper, ), throws, NullArgumentException, ,, NoBracketingException, {]
[void, verifyBracketing, (, final, double, lower, ,, final, double, upper, ), throws, NullArgumentException, ,, NoBracketingException, {, UnivariateSolverUtils, ., verifyBracketing, (]
[(, final, double, lower, ,, final, double, upper, ), throws, NullArgumentException, ,, NoBracketingException, {, UnivariateSolverUtils, ., verifyBracketing, (, function, ,]
[double, lower, ,, final, double, upper, ), throws, NullArgumentException, ,, NoBracketingException, {, UnivariateSolverUtils, ., verifyBracketing, (, function, ,, lower, ,]
[verifyBracketing, (, function, ,, lower, ,, upper, ), ;, }, protected, void, incrementEvaluationCount, (, ), throws, TooManyEvaluationsException, {, try, {]
[verifyBracketing, (, function, ,, lower, ,, upper, ), ;, }, protected, void, incrementEvaluationCount, (, ), throws, TooManyEvaluationsException, {, try, {]
[), throws, TooManyEvaluationsException, {, try, {, evaluations, ., incrementCount, (, ), ;, }, catch, (, MaxCountExceededException, e, ), {, throw]
[{, try, {, evaluations, ., incrementCount, (, ), ;, }, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (]
[{, try, {, evaluations, ., incrementCount, (, ), ;, }, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (]
