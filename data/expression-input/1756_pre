[OptionalLibraryHolder, {, private, String, libraryClass, ;, private, transient, Library, library, ;, public, OptionalLibraryHolder, (, String, libraryClass, ), {, if, (]
[OptionalLibraryHolder, {, private, String, libraryClass, ;, private, transient, Library, library, ;, public, OptionalLibraryHolder, (, String, libraryClass, ), {, if, (]
[private, String, libraryClass, ;, private, transient, Library, library, ;, public, OptionalLibraryHolder, (, String, libraryClass, ), {, if, (, libraryClass, ==]
[private, transient, Library, library, ;, public, OptionalLibraryHolder, (, String, libraryClass, ), {, if, (, libraryClass, ==, null, ), {, throw]
[library, ;, public, OptionalLibraryHolder, (, String, libraryClass, ), {, if, (, libraryClass, ==, null, ), {, throw, new, NullPointerException, (]
[(, String, libraryClass, ), {, if, (, libraryClass, ==, null, ), {, throw, new, NullPointerException, (, "LibraryClass must not be null.", ), ;, }]
[(, String, libraryClass, ), {, if, (, libraryClass, ==, null, ), {, throw, new, NullPointerException, (, "LibraryClass must not be null.", ), ;, }]
[{, if, (, libraryClass, ==, null, ), {, throw, new, NullPointerException, (, "LibraryClass must not be null.", ), ;, }, this, ., libraryClass, =]
["LibraryClass must not be null.", ), ;, }, this, ., libraryClass, =, libraryClass, ;, }, public, OptionalLibraryHolder, (, Library, library, ), {, if, (]
["LibraryClass must not be null.", ), ;, }, this, ., libraryClass, =, libraryClass, ;, }, public, OptionalLibraryHolder, (, Library, library, ), {, if, (]
[;, }, this, ., libraryClass, =, libraryClass, ;, }, public, OptionalLibraryHolder, (, Library, library, ), {, if, (, library, ==]
[libraryClass, =, libraryClass, ;, }, public, OptionalLibraryHolder, (, Library, library, ), {, if, (, library, ==, null, ), {, throw]
[;, }, public, OptionalLibraryHolder, (, Library, library, ), {, if, (, library, ==, null, ), {, throw, new, NullPointerException, (]
[(, Library, library, ), {, if, (, library, ==, null, ), {, throw, new, NullPointerException, (, "Library must not be null.", ), ;, }]
[(, Library, library, ), {, if, (, library, ==, null, ), {, throw, new, NullPointerException, (, "Library must not be null.", ), ;, }]
[{, if, (, library, ==, null, ), {, throw, new, NullPointerException, (, "Library must not be null.", ), ;, }, this, ., library, =]
[(, library, ==, null, ), {, throw, new, NullPointerException, (, "Library must not be null.", ), ;, }, this, ., library, =, library, ;]
[(, library, ==, null, ), {, throw, new, NullPointerException, (, "Library must not be null.", ), ;, }, this, ., library, =, library, ;]
[), {, throw, new, NullPointerException, (, "Library must not be null.", ), ;, }, this, ., library, =, library, ;, this, ., libraryClass, =]
[), {, throw, new, NullPointerException, (, "Library must not be null.", ), ;, }, this, ., library, =, library, ;, this, ., libraryClass, =]
[), {, throw, new, NullPointerException, (, "Library must not be null.", ), ;, }, this, ., library, =, library, ;, this, ., libraryClass, =]
[libraryClass, =, library, ., getClass, (, ), ., getName, (, ), ;, }, public, String, getLibraryClass, (, ), {, return]
[libraryClass, =, library, ., getClass, (, ), ., getName, (, ), ;, }, public, String, getLibraryClass, (, ), {, return]
[public, String, getLibraryClass, (, ), {, return, this, ., libraryClass, ;, }, public, Library, getLibrary, (, ), {, if, (]
[public, String, getLibraryClass, (, ), {, return, this, ., libraryClass, ;, }, public, Library, getLibrary, (, ), {, if, (]
[public, String, getLibraryClass, (, ), {, return, this, ., libraryClass, ;, }, public, Library, getLibrary, (, ), {, if, (]
[), {, return, this, ., libraryClass, ;, }, public, Library, getLibrary, (, ), {, if, (, this, ., library, ==]
[this, ., libraryClass, ;, }, public, Library, getLibrary, (, ), {, if, (, this, ., library, ==, null, ), {]
[this, ., libraryClass, ;, }, public, Library, getLibrary, (, ), {, if, (, this, ., library, ==, null, ), {]
[}, public, Library, getLibrary, (, ), {, if, (, this, ., library, ==, null, ), {, this, ., library, =]
[Library, getLibrary, (, ), {, if, (, this, ., library, ==, null, ), {, this, ., library, =, loadLibrary, (]
[Library, getLibrary, (, ), {, if, (, this, ., library, ==, null, ), {, this, ., library, =, loadLibrary, (]
[this, ., library, ==, null, ), {, this, ., library, =, loadLibrary, (, this, ., libraryClass, ), ;, }, return]
[this, ., library, ==, null, ), {, this, ., library, =, loadLibrary, (, this, ., libraryClass, ), ;, }, return]
[libraryClass, ), ;, }, return, this, ., library, ;, }, protected, Library, loadLibrary, (, String, classname, ), {, if, (]
[libraryClass, ), ;, }, return, this, ., library, ;, }, protected, Library, loadLibrary, (, String, classname, ), {, if, (]
[;, }, return, this, ., library, ;, }, protected, Library, loadLibrary, (, String, classname, ), {, if, (, classname, ==]
[., library, ;, }, protected, Library, loadLibrary, (, String, classname, ), {, if, (, classname, ==, null, ), {, return]
[String, classname, ), {, if, (, classname, ==, null, ), {, return, null, ;, }, try, {, Class, c, =]
[String, classname, ), {, if, (, classname, ==, null, ), {, return, null, ;, }, try, {, Class, c, =]
[String, classname, ), {, if, (, classname, ==, null, ), {, return, null, ;, }, try, {, Class, c, =]
[if, (, classname, ==, null, ), {, return, null, ;, }, try, {, Class, c, =, ObjectUtilities, ., getClassLoader, (]
[return, null, ;, }, try, {, Class, c, =, ObjectUtilities, ., getClassLoader, (, getClass, (, ), ), ., loadClass, (]
[=, ObjectUtilities, ., getClassLoader, (, getClass, (, ), ), ., loadClass, (, classname, ), ;, try, {, Method, m, =]
[=, ObjectUtilities, ., getClassLoader, (, getClass, (, ), ), ., loadClass, (, classname, ), ;, try, {, Method, m, =]
[(, getClass, (, ), ), ., loadClass, (, classname, ), ;, try, {, Method, m, =, c, ., getMethod, (]
[(, ), ), ., loadClass, (, classname, ), ;, try, {, Method, m, =, c, ., getMethod, (, "getInstance", ,]
[(, classname, ), ;, try, {, Method, m, =, c, ., getMethod, (, "getInstance", ,, (, Class, [, ], )]
[try, {, Method, m, =, c, ., getMethod, (, "getInstance", ,, (, Class, [, ], ), null, ), ;, return]
[m, =, c, ., getMethod, (, "getInstance", ,, (, Class, [, ], ), null, ), ;, return, (, Library, )]
[m, =, c, ., getMethod, (, "getInstance", ,, (, Class, [, ], ), null, ), ;, return, (, Library, )]
[getMethod, (, "getInstance", ,, (, Class, [, ], ), null, ), ;, return, (, Library, ), m, ., invoke, (]
["getInstance", ,, (, Class, [, ], ), null, ), ;, return, (, Library, ), m, ., invoke, (, null, ,]
[], ), null, ), ;, return, (, Library, ), m, ., invoke, (, null, ,, (, Object, [, ], )]
[(, null, ,, (, Object, [, ], ), null, ), ;, }, catch, (, Exception, e, ), {, }, return]
[(, Object, [, ], ), null, ), ;, }, catch, (, Exception, e, ), {, }, return, (, Library, )]
[(, Object, [, ], ), null, ), ;, }, catch, (, Exception, e, ), {, }, return, (, Library, )]
[{, }, return, (, Library, ), c, ., newInstance, (, ), ;, }, catch, (, Exception, e, ), {, return]
[}, }, }, private, String, copyright, ;, private, List, libraries, ;, private, List, optionalLibraries, ;, public, BasicProjectInfo, (, ), {]
[}, }, }, private, String, copyright, ;, private, List, libraries, ;, private, List, optionalLibraries, ;, public, BasicProjectInfo, (, ), {]
[String, copyright, ;, private, List, libraries, ;, private, List, optionalLibraries, ;, public, BasicProjectInfo, (, ), {, this, ., libraries, =]
[libraries, ;, private, List, optionalLibraries, ;, public, BasicProjectInfo, (, ), {, this, ., libraries, =, new, ArrayList, (, ), ;]
[libraries, ;, private, List, optionalLibraries, ;, public, BasicProjectInfo, (, ), {, this, ., libraries, =, new, ArrayList, (, ), ;]
[optionalLibraries, ;, public, BasicProjectInfo, (, ), {, this, ., libraries, =, new, ArrayList, (, ), ;, this, ., optionalLibraries, =]
[public, BasicProjectInfo, (, String, name, ,, String, version, ,, String, licence, ,, String, info, ), {, this, (, ), ;]
[(, String, name, ,, String, version, ,, String, licence, ,, String, info, ), {, this, (, ), ;, setName, (]
[,, String, version, ,, String, licence, ,, String, info, ), {, this, (, ), ;, setName, (, name, ), ;]
[version, ,, String, licence, ,, String, info, ), {, this, (, ), ;, setName, (, name, ), ;, setVersion, (]
[licence, ,, String, info, ), {, this, (, ), ;, setName, (, name, ), ;, setVersion, (, version, ), ;]
[String, info, ), {, this, (, ), ;, setName, (, name, ), ;, setVersion, (, version, ), ;, setLicenceName, (]
[{, this, (, ), ;, setName, (, name, ), ;, setVersion, (, version, ), ;, setLicenceName, (, licence, ), ;]
[(, ), ;, setName, (, name, ), ;, setVersion, (, version, ), ;, setLicenceName, (, licence, ), ;, setInfo, (]
[BasicProjectInfo, (, String, name, ,, String, version, ,, String, info, ,, String, copyright, ,, String, licenceName, ), {, this, (]
[String, name, ,, String, version, ,, String, info, ,, String, copyright, ,, String, licenceName, ), {, this, (, name, ,]
[,, String, version, ,, String, info, ,, String, copyright, ,, String, licenceName, ), {, this, (, name, ,, version, ,]
[version, ,, String, info, ,, String, copyright, ,, String, licenceName, ), {, this, (, name, ,, version, ,, licenceName, ,]
[info, ,, String, copyright, ,, String, licenceName, ), {, this, (, name, ,, version, ,, licenceName, ,, info, ), ;]
[String, copyright, ,, String, licenceName, ), {, this, (, name, ,, version, ,, licenceName, ,, info, ), ;, setCopyright, (]
[version, ,, licenceName, ,, info, ), ;, setCopyright, (, copyright, ), ;, }, public, String, getCopyright, (, ), {, return]
[version, ,, licenceName, ,, info, ), ;, setCopyright, (, copyright, ), ;, }, public, String, getCopyright, (, ), {, return]
[public, String, getCopyright, (, ), {, return, this, ., copyright, ;, }, public, void, setCopyright, (, String, copyright, ), {]
[public, String, getCopyright, (, ), {, return, this, ., copyright, ;, }, public, void, setCopyright, (, String, copyright, ), {]
[), {, return, this, ., copyright, ;, }, public, void, setCopyright, (, String, copyright, ), {, this, ., copyright, =]
[(, String, copyright, ), {, this, ., copyright, =, copyright, ;, }, public, void, setInfo, (, String, info, ), {]
[(, String, copyright, ), {, this, ., copyright, =, copyright, ;, }, public, void, setInfo, (, String, info, ), {]
[{, this, ., copyright, =, copyright, ;, }, public, void, setInfo, (, String, info, ), {, super, ., setInfo, (]
[String, info, ), {, super, ., setInfo, (, info, ), ;, }, public, void, setLicenceName, (, String, licence, ), {]
[String, info, ), {, super, ., setInfo, (, info, ), ;, }, public, void, setLicenceName, (, String, licence, ), {]
[super, ., setInfo, (, info, ), ;, }, public, void, setLicenceName, (, String, licence, ), {, super, ., setLicenceName, (]
[String, licence, ), {, super, ., setLicenceName, (, licence, ), ;, }, public, void, setName, (, String, name, ), {]
[String, licence, ), {, super, ., setLicenceName, (, licence, ), ;, }, public, void, setName, (, String, name, ), {]
[super, ., setLicenceName, (, licence, ), ;, }, public, void, setName, (, String, name, ), {, super, ., setName, (]
[String, name, ), {, super, ., setName, (, name, ), ;, }, public, void, setVersion, (, String, version, ), {]
[String, name, ), {, super, ., setName, (, name, ), ;, }, public, void, setVersion, (, String, version, ), {]
[super, ., setName, (, name, ), ;, }, public, void, setVersion, (, String, version, ), {, super, ., setVersion, (]
[version, ), {, super, ., setVersion, (, version, ), ;, }, public, Library, [, ], getLibraries, (, ), {, return]
[setVersion, (, version, ), ;, }, public, Library, [, ], getLibraries, (, ), {, return, (, Library, [, ], )]
[setVersion, (, version, ), ;, }, public, Library, [, ], getLibraries, (, ), {, return, (, Library, [, ], )]
[setVersion, (, version, ), ;, }, public, Library, [, ], getLibraries, (, ), {, return, (, Library, [, ], )]
[public, Library, [, ], getLibraries, (, ), {, return, (, Library, [, ], ), this, ., libraries, ., toArray, (]
[], getLibraries, (, ), {, return, (, Library, [, ], ), this, ., libraries, ., toArray, (, new, Library, []
[], getLibraries, (, ), {, return, (, Library, [, ], ), this, ., libraries, ., toArray, (, new, Library, []
[], getLibraries, (, ), {, return, (, Library, [, ], ), this, ., libraries, ., toArray, (, new, Library, []
[., libraries, ., size, (, ), ], ), ;, }, public, void, addLibrary, (, Library, library, ), {, if, (]
[., libraries, ., size, (, ), ], ), ;, }, public, void, addLibrary, (, Library, library, ), {, if, (]
[., size, (, ), ], ), ;, }, public, void, addLibrary, (, Library, library, ), {, if, (, library, ==]
[], ), ;, }, public, void, addLibrary, (, Library, library, ), {, if, (, library, ==, null, ), {, throw]
[addLibrary, (, Library, library, ), {, if, (, library, ==, null, ), {, throw, new, NullPointerException, (, ), ;, }]
[addLibrary, (, Library, library, ), {, if, (, library, ==, null, ), {, throw, new, NullPointerException, (, ), ;, }]
[addLibrary, (, Library, library, ), {, if, (, library, ==, null, ), {, throw, new, NullPointerException, (, ), ;, }]
[if, (, library, ==, null, ), {, throw, new, NullPointerException, (, ), ;, }, this, ., libraries, ., add, (]
[., libraries, ., add, (, library, ), ;, }, public, Library, [, ], getOptionalLibraries, (, ), {, ArrayList, libraries, =]
[Library, [, ], getOptionalLibraries, (, ), {, ArrayList, libraries, =, new, ArrayList, (, ), ;, for, (, int, i, =]
[], getOptionalLibraries, (, ), {, ArrayList, libraries, =, new, ArrayList, (, ), ;, for, (, int, i, =, 0, ;]
[], getOptionalLibraries, (, ), {, ArrayList, libraries, =, new, ArrayList, (, ), ;, for, (, int, i, =, 0, ;]
[(, ), {, ArrayList, libraries, =, new, ArrayList, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[(, ), {, ArrayList, libraries, =, new, ArrayList, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[(, ), {, ArrayList, libraries, =, new, ArrayList, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[(, ), ;, for, (, int, i, =, 0, ;, i, <, this, ., optionalLibraries, ., size, (, ), ;]
[(, ), ;, for, (, int, i, =, 0, ;, i, <, this, ., optionalLibraries, ., size, (, ), ;]
[=, 0, ;, i, <, this, ., optionalLibraries, ., size, (, ), ;, i, ++, ), {, OptionalLibraryHolder, holder, =]
[i, <, this, ., optionalLibraries, ., size, (, ), ;, i, ++, ), {, OptionalLibraryHolder, holder, =, (, OptionalLibraryHolder, )]
[i, <, this, ., optionalLibraries, ., size, (, ), ;, i, ++, ), {, OptionalLibraryHolder, holder, =, (, OptionalLibraryHolder, )]
[i, <, this, ., optionalLibraries, ., size, (, ), ;, i, ++, ), {, OptionalLibraryHolder, holder, =, (, OptionalLibraryHolder, )]
[size, (, ), ;, i, ++, ), {, OptionalLibraryHolder, holder, =, (, OptionalLibraryHolder, ), this, ., optionalLibraries, ., get, (]
[), {, OptionalLibraryHolder, holder, =, (, OptionalLibraryHolder, ), this, ., optionalLibraries, ., get, (, i, ), ;, Library, l, =]
[), {, OptionalLibraryHolder, holder, =, (, OptionalLibraryHolder, ), this, ., optionalLibraries, ., get, (, i, ), ;, Library, l, =]
[this, ., optionalLibraries, ., get, (, i, ), ;, Library, l, =, holder, ., getLibrary, (, ), ;, if, (]
[this, ., optionalLibraries, ., get, (, i, ), ;, Library, l, =, holder, ., getLibrary, (, ), ;, if, (]
[optionalLibraries, ., get, (, i, ), ;, Library, l, =, holder, ., getLibrary, (, ), ;, if, (, l, !=]
[(, i, ), ;, Library, l, =, holder, ., getLibrary, (, ), ;, if, (, l, !=, null, ), {]
[(, i, ), ;, Library, l, =, holder, ., getLibrary, (, ), ;, if, (, l, !=, null, ), {]
[Library, l, =, holder, ., getLibrary, (, ), ;, if, (, l, !=, null, ), {, libraries, ., add, (]
[(, ), ;, if, (, l, !=, null, ), {, libraries, ., add, (, l, ), ;, }, }, return]
[l, !=, null, ), {, libraries, ., add, (, l, ), ;, }, }, return, (, Library, [, ], )]
[l, !=, null, ), {, libraries, ., add, (, l, ), ;, }, }, return, (, Library, [, ], )]
[{, libraries, ., add, (, l, ), ;, }, }, return, (, Library, [, ], ), libraries, ., toArray, (]
[add, (, l, ), ;, }, }, return, (, Library, [, ], ), libraries, ., toArray, (, new, Library, []
[add, (, l, ), ;, }, }, return, (, Library, [, ], ), libraries, ., toArray, (, new, Library, []
[[, libraries, ., size, (, ), ], ), ;, }, public, void, addOptionalLibrary, (, String, libraryClass, ), {, if, (]
[[, libraries, ., size, (, ), ], ), ;, }, public, void, addOptionalLibrary, (, String, libraryClass, ), {, if, (]
[., size, (, ), ], ), ;, }, public, void, addOptionalLibrary, (, String, libraryClass, ), {, if, (, libraryClass, ==]
[], ), ;, }, public, void, addOptionalLibrary, (, String, libraryClass, ), {, if, (, libraryClass, ==, null, ), {, throw]
[}, public, void, addOptionalLibrary, (, String, libraryClass, ), {, if, (, libraryClass, ==, null, ), {, throw, new, NullPointerException, (]
[(, String, libraryClass, ), {, if, (, libraryClass, ==, null, ), {, throw, new, NullPointerException, (, "Library classname must be given.", ), ;, }]
[(, String, libraryClass, ), {, if, (, libraryClass, ==, null, ), {, throw, new, NullPointerException, (, "Library classname must be given.", ), ;, }]
[(, String, libraryClass, ), {, if, (, libraryClass, ==, null, ), {, throw, new, NullPointerException, (, "Library classname must be given.", ), ;, }]
[(, libraryClass, ==, null, ), {, throw, new, NullPointerException, (, "Library classname must be given.", ), ;, }, this, ., optionalLibraries, ., add, (]
[null, ), {, throw, new, NullPointerException, (, "Library classname must be given.", ), ;, }, this, ., optionalLibraries, ., add, (, new, OptionalLibraryHolder, (]
[add, (, new, OptionalLibraryHolder, (, libraryClass, ), ), ;, }, public, void, addOptionalLibrary, (, Library, library, ), {, if, (]
[add, (, new, OptionalLibraryHolder, (, libraryClass, ), ), ;, }, public, void, addOptionalLibrary, (, Library, library, ), {, if, (]
[new, OptionalLibraryHolder, (, libraryClass, ), ), ;, }, public, void, addOptionalLibrary, (, Library, library, ), {, if, (, library, ==]
[), ), ;, }, public, void, addOptionalLibrary, (, Library, library, ), {, if, (, library, ==, null, ), {, throw]
[}, public, void, addOptionalLibrary, (, Library, library, ), {, if, (, library, ==, null, ), {, throw, new, NullPointerException, (]
[(, Library, library, ), {, if, (, library, ==, null, ), {, throw, new, NullPointerException, (, "Library must be given.", ), ;, }]
[(, Library, library, ), {, if, (, library, ==, null, ), {, throw, new, NullPointerException, (, "Library must be given.", ), ;, }]
[(, Library, library, ), {, if, (, library, ==, null, ), {, throw, new, NullPointerException, (, "Library must be given.", ), ;, }]
[(, library, ==, null, ), {, throw, new, NullPointerException, (, "Library must be given.", ), ;, }, this, ., optionalLibraries, ., add, (]
[null, ), {, throw, new, NullPointerException, (, "Library must be given.", ), ;, }, this, ., optionalLibraries, ., add, (, new, OptionalLibraryHolder, (]
