[;, public, static, final, int, MAXIMUM_YEAR, =, 9999, ;, private, static, final, long, serialVersionUID, =, -, 7659990929736074836L, ;, private, short]
[;, public, static, final, int, MAXIMUM_YEAR, =, 9999, ;, private, static, final, long, serialVersionUID, =, -, 7659990929736074836L, ;, private, short]
[;, private, static, final, long, serialVersionUID, =, -, 7659990929736074836L, ;, private, short, year, ;, private, long, firstMillisecond, ;, private, long]
[;, private, short, year, ;, private, long, firstMillisecond, ;, private, long, lastMillisecond, ;, public, Year, (, ), {, this, (]
[;, private, short, year, ;, private, long, firstMillisecond, ;, private, long, lastMillisecond, ;, public, Year, (, ), {, this, (]
[), ;, }, public, Year, (, int, year, ), {, if, (, (, year, <, Year, ., MINIMUM_YEAR, ), ||]
[), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range.", ), ;, }, this, ., year, =, (, short]
[||, (, year, >, Year, ., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range.", )]
[), ||, (, year, >, Year, ., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range."]
[<, Year, ., MINIMUM_YEAR, ), ||, (, year, >, Year, ., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year ("]
[), ||, (, year, >, Year, ., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range."]
[., MINIMUM_YEAR, ), ||, (, year, >, Year, ., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year]
[), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range.", ), ;, }, this, ., year, =, (, short]
[), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range.", ), ;, }, this, ., year, =, (]
[>, Year, ., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range.", ), ;, }, this]
[), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range.", ), ;, }, this, ., year, =, (]
[., MAXIMUM_YEAR, ), ), {, throw, new, IllegalArgumentException, (, "Year constructor: year (", +, year, +, ") outside valid range.", ), ;, }, this, ., year]
[;, }, this, ., year, =, (, short, ), year, ;, peg, (, Calendar, ., getInstance, (, ), ), ;]
[), ;, }, this, ., year, =, (, short, ), year, ;, peg, (, Calendar, ., getInstance, (, ), )]
[+, ") outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;, peg, (, Calendar, ., getInstance, (]
[+, year, +, ") outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;, peg, (, Calendar, .]
[+, ") outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;, peg, (, Calendar, ., getInstance, (]
[), ;, }, this, ., year, =, (, short, ), year, ;, peg, (, Calendar, ., getInstance, (, ), )]
[=, (, short, ), year, ;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Year, (, Date]
[., year, =, (, short, ), year, ;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Year]
[;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Year, (, Date, time, ), {, this, (]
[;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Year, (, Date, time, ), {, this, (]
[;, }, public, Year, (, Date, time, ), {, this, (, time, ,, TimeZone, ., getDefault, (, ), ), ;]
[), ;, }, public, Year, (, Date, time, ), {, this, (, time, ,, TimeZone, ., getDefault, (, ), )]
[., getInstance, (, ), ), ;, }, public, Year, (, Date, time, ), {, this, (, time, ,, TimeZone, .]
[,, TimeZone, ., getDefault, (, ), ), ;, }, public, Year, (, Date, time, ,, TimeZone, zone, ), {, this]
[), ;, }, public, Year, (, Date, time, ,, TimeZone, zone, ), {, this, (, time, ,, zone, ,, Locale]
[., getDefault, (, ), ), ;, }, public, Year, (, Date, time, ,, TimeZone, zone, ), {, this, (, time]
[,, zone, ,, Locale, ., getDefault, (, ), ), ;, }, public, Year, (, Date, time, ,, TimeZone, zone, ,]
[,, Locale, ., getDefault, (, ), ), ;, }, public, Year, (, Date, time, ,, TimeZone, zone, ,, Locale, locale]
[), ;, }, public, Year, (, Date, time, ,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =, Calendar]
[., getDefault, (, ), ), ;, }, public, Year, (, Date, time, ,, TimeZone, zone, ,, Locale, locale, ), {]
[;, calendar, ., setTime, (, time, ), ;, this, ., year, =, (, short, ), calendar, ., get, (, Calendar]
[., getInstance, (, zone, ,, locale, ), ;, calendar, ., setTime, (, time, ), ;, this, ., year, =, (]
[,, locale, ), ;, calendar, ., setTime, (, time, ), ;, this, ., year, =, (, short, ), calendar, .]
[), ;, calendar, ., setTime, (, time, ), ;, this, ., year, =, (, short, ), calendar, ., get, (]
[;, this, ., year, =, (, short, ), calendar, ., get, (, Calendar, ., YEAR, ), ;, peg, (, calendar]
[., setTime, (, time, ), ;, this, ., year, =, (, short, ), calendar, ., get, (, Calendar, ., YEAR]
[), ;, this, ., year, =, (, short, ), calendar, ., get, (, Calendar, ., YEAR, ), ;, peg, (]
[=, (, short, ), calendar, ., get, (, Calendar, ., YEAR, ), ;, peg, (, calendar, ), ;, }, public]
[., year, =, (, short, ), calendar, ., get, (, Calendar, ., YEAR, ), ;, peg, (, calendar, ), ;]
[;, peg, (, calendar, ), ;, }, public, int, getYear, (, ), {, return, this, ., year, ;, }, public]
[;, peg, (, calendar, ), ;, }, public, int, getYear, (, ), {, return, this, ., year, ;, }, public]
[., get, (, Calendar, ., YEAR, ), ;, peg, (, calendar, ), ;, }, public, int, getYear, (, ), {]
[), ;, peg, (, calendar, ), ;, }, public, int, getYear, (, ), {, return, this, ., year, ;, }]
[., YEAR, ), ;, peg, (, calendar, ), ;, }, public, int, getYear, (, ), {, return, this, ., year]
[;, }, public, int, getYear, (, ), {, return, this, ., year, ;, }, public, long, getFirstMillisecond, (, ), {]
[), ;, }, public, int, getYear, (, ), {, return, this, ., year, ;, }, public, long, getFirstMillisecond, (, )]
[;, }, public, long, getFirstMillisecond, (, ), {, return, this, ., firstMillisecond, ;, }, public, long, getLastMillisecond, (, ), {]
[., year, ;, }, public, long, getFirstMillisecond, (, ), {, return, this, ., firstMillisecond, ;, }, public, long, getLastMillisecond, (]
[;, }, public, long, getLastMillisecond, (, ), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar]
[., firstMillisecond, ;, }, public, long, getLastMillisecond, (, ), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (]
[;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;, this]
[., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, )]
[=, getFirstMillisecond, (, calendar, ), ;, this, ., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (]
[., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;, this, ., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod]
[;, this, ., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, if, (, this]
[), ;, this, ., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, if, (]
[=, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, if, (, this, ., year, >, Year]
[., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, if, (, this, ., year]
[;, }, public, RegularTimePeriod, previous, (, ), {, if, (, this, ., year, >, Year, ., MINIMUM_YEAR, ), {, return]
[), ;, }, public, RegularTimePeriod, previous, (, ), {, if, (, this, ., year, >, Year, ., MINIMUM_YEAR, ), {]
[), {, return, new, Year, (, this, ., year, -, 1, ), ;, }, else, {, return, null, ;, }]
[>, Year, ., MINIMUM_YEAR, ), {, return, new, Year, (, this, ., year, -, 1, ), ;, }, else, {]
[., year, >, Year, ., MINIMUM_YEAR, ), {, return, new, Year, (, this, ., year, -, 1, ), ;, }]
[), {, return, new, Year, (, this, ., year, -, 1, ), ;, }, else, {, return, null, ;, }]
[., MINIMUM_YEAR, ), {, return, new, Year, (, this, ., year, -, 1, ), ;, }, else, {, return, null]
[;, }, else, {, return, null, ;, }, }, public, RegularTimePeriod, next, (, ), {, if, (, this, ., year]
[), ;, }, else, {, return, null, ;, }, }, public, RegularTimePeriod, next, (, ), {, if, (, this, .]
[-, 1, ), ;, }, else, {, return, null, ;, }, }, public, RegularTimePeriod, next, (, ), {, if, (]
[., year, -, 1, ), ;, }, else, {, return, null, ;, }, }, public, RegularTimePeriod, next, (, ), {]
[), ;, }, else, {, return, null, ;, }, }, public, RegularTimePeriod, next, (, ), {, if, (, this, .]
[;, }, }, public, RegularTimePeriod, next, (, ), {, if, (, this, ., year, <, Year, ., MAXIMUM_YEAR, ), {]
[), {, return, new, Year, (, this, ., year, +, 1, ), ;, }, else, {, return, null, ;, }]
[<, Year, ., MAXIMUM_YEAR, ), {, return, new, Year, (, this, ., year, +, 1, ), ;, }, else, {]
[., year, <, Year, ., MAXIMUM_YEAR, ), {, return, new, Year, (, this, ., year, +, 1, ), ;, }]
[), {, return, new, Year, (, this, ., year, +, 1, ), ;, }, else, {, return, null, ;, }]
[., MAXIMUM_YEAR, ), {, return, new, Year, (, this, ., year, +, 1, ), ;, }, else, {, return, null]
[;, }, else, {, return, null, ;, }, }, public, long, getSerialIndex, (, ), {, return, this, ., year, ;]
[), ;, }, else, {, return, null, ;, }, }, public, long, getSerialIndex, (, ), {, return, this, ., year]
[+, 1, ), ;, }, else, {, return, null, ;, }, }, public, long, getSerialIndex, (, ), {, return, this]
[., year, +, 1, ), ;, }, else, {, return, null, ;, }, }, public, long, getSerialIndex, (, ), {]
[), ;, }, else, {, return, null, ;, }, }, public, long, getSerialIndex, (, ), {, return, this, ., year]
[;, }, }, public, long, getSerialIndex, (, ), {, return, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar]
[;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (, this, ., year, ,, Calendar, .]
[., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (, this, ., year, ,]
[;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return, calendar, ., getTime, (, ), ., getTime]
[., set, (, this, ., year, ,, Calendar, ., JANUARY, ,, 1, ,, 0, ,, 0, ,, 0, ), ;]
[,, Calendar, ., JANUARY, ,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, .]
[., year, ,, Calendar, ., JANUARY, ,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (]
[,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, )]
[., JANUARY, ,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,]
[,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return, calendar, .]
[,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return, calendar, ., getTime, (]
[), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return, calendar, ., getTime, (, ), .]
[;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, )]
[., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return, calendar, ., getTime, (, ), ., getTime, (, )]
[,, 0, ), ;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (]
[., MILLISECOND, ,, 0, ), ;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, long]
[), ;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar]
[;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (, this, ., year, ,, Calendar, .]
[., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, calendar, ., set, (, this, .]
[., getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, calendar, .]
[;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return, calendar, ., getTime, (, ), ., getTime]
[., set, (, this, ., year, ,, Calendar, ., DECEMBER, ,, 31, ,, 23, ,, 59, ,, 59, ), ;]
[,, Calendar, ., DECEMBER, ,, 31, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, .]
[., year, ,, Calendar, ., DECEMBER, ,, 31, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (]
[,, 31, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, )]
[., DECEMBER, ,, 31, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,]
[,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return, calendar, .]
[,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return, calendar, ., getTime, (]
[), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return, calendar, ., getTime, (, ), .]
[;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, boolean, equals, (, Object, obj, )]
[., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return, calendar, ., getTime, (, ), ., getTime, (, )]
[,, 999, ), ;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, boolean, equals, (]
[., MILLISECOND, ,, 999, ), ;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, boolean]
[), ;, return, calendar, ., getTime, (, ), ., getTime, (, ), ;, }, public, boolean, equals, (, Object, obj]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[., getTime, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[., getTime, (, ), ., getTime, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, Year, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, Year, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, Year, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, Year, ), ), {, return, false, ;, }, Year, that, =, (]
[), {, return, false, ;, }, Year, that, =, (, Year, ), obj, ;, return, (, this, ., year, ==]
[), {, return, false, ;, }, Year, that, =, (, Year, ), obj, ;, return, (, this, ., year, ==]
[), ), {, return, false, ;, }, Year, that, =, (, Year, ), obj, ;, return, (, this, ., year]
[instanceof, Year, ), ), {, return, false, ;, }, Year, that, =, (, Year, ), obj, ;, return, (, this]
[;, }, Year, that, =, (, Year, ), obj, ;, return, (, this, ., year, ==, that, ., year, )]
[;, return, (, this, ., year, ==, that, ., year, ), ;, }, public, int, hashCode, (, ), {, int]
[;, return, (, this, ., year, ==, that, ., year, ), ;, }, public, int, hashCode, (, ), {, int]
[;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, int, c, =, this, ., year, ;]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, int, c, =, this, ., year]
[==, that, ., year, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, int, c]
[., year, ==, that, ., year, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, int, c, =, this, ., year]
[., year, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, int, c, =, this]
[;, int, c, =, this, ., year, ;, result, =, 37, *, result, +, c, ;, return, result, ;, }]
[;, result, =, 37, *, result, +, c, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, )]
[., year, ;, result, =, 37, *, result, +, c, ;, return, result, ;, }, public, int, compareTo, (, Object]
[=, 37, *, result, +, c, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int]
[;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (, o1, instanceof]
[+, c, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (]
[*, result, +, c, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;]
[+, c, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (]
[;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (, o1, instanceof]
[;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (, o1, instanceof, Year, ), {]
[), {, Year, y, =, (, Year, ), o1, ;, result, =, this, ., year, -, y, ., getYear, (]
[instanceof, Year, ), {, Year, y, =, (, Year, ), o1, ;, result, =, this, ., year, -, y, .]
[;, result, =, this, ., year, -, y, ., getYear, (, ), ;, }, else, if, (, o1, instanceof, RegularTimePeriod]
[;, result, =, this, ., year, -, y, ., getYear, (, ), ;, }, else, if, (, o1, instanceof, RegularTimePeriod]
[=, this, ., year, -, y, ., getYear, (, ), ;, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {]
[;, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =, 1]
[-, y, ., getYear, (, ), ;, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;]
[., year, -, y, ., getYear, (, ), ;, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =]
[;, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =, 1]
[., getYear, (, ), ;, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else]
[), {, result, =, 0, ;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, String]
[instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =, 1, ;, }, return, result, ;, }]
[=, 0, ;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, )]
[;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return]
[=, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return, Integer, ., toString, (, this]
[;, }, return, result, ;, }, public, String, toString, (, ), {, return, Integer, ., toString, (, this, ., year]
[;, }, public, String, toString, (, ), {, return, Integer, ., toString, (, this, ., year, ), ;, }, public]
[;, }, public, static, Year, parseYear, (, String, s, ), {, int, y, ;, try, {, y, =, Integer, .]
[., toString, (, this, ., year, ), ;, }, public, static, Year, parseYear, (, String, s, ), {, int, y]
[), ;, }, public, static, Year, parseYear, (, String, s, ), {, int, y, ;, try, {, y, =, Integer]
[., year, ), ;, }, public, static, Year, parseYear, (, String, s, ), {, int, y, ;, try, {, y]
[=, Integer, ., parseInt, (, s, ., trim, (, ), ), ;, }, catch, (, NumberFormatException, e, ), {, throw]
[;, }, catch, (, NumberFormatException, e, ), {, throw, new, TimePeriodFormatException, (, "Cannot parse string.", ), ;, }, try, {, return, new]
[., parseInt, (, s, ., trim, (, ), ), ;, }, catch, (, NumberFormatException, e, ), {, throw, new, TimePeriodFormatException]
[), ;, }, catch, (, NumberFormatException, e, ), {, throw, new, TimePeriodFormatException, (, "Cannot parse string.", ), ;, }, try, {, return]
[., trim, (, ), ), ;, }, catch, (, NumberFormatException, e, ), {, throw, new, TimePeriodFormatException, (, "Cannot parse string.", ), ;]
[;, }, try, {, return, new, Year, (, y, ), ;, }, catch, (, IllegalArgumentException, e, ), {, throw, new]
[), ;, }, try, {, return, new, Year, (, y, ), ;, }, catch, (, IllegalArgumentException, e, ), {, throw]
[;, }, catch, (, IllegalArgumentException, e, ), {, throw, new, TimePeriodFormatException, (, "Year outside valid range.", ), ;, }, }, }]
[), ;, }, catch, (, IllegalArgumentException, e, ), {, throw, new, TimePeriodFormatException, (, "Year outside valid range.", ), ;, }, }, }]
[;, }, }, }]
[), ;, }, }, }]
