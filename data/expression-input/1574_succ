[;, private, double, startValue, ;, private, double, endValue, ;, private, GradientPaintTransformer, gradientPaintTransformer, ;, public, IntervalMarker, (, double, start, ,, double]
[;, private, double, startValue, ;, private, double, endValue, ;, private, GradientPaintTransformer, gradientPaintTransformer, ;, public, IntervalMarker, (, double, start, ,, double]
[,, end, ,, Color, ., gray, ,, new, BasicStroke, (, 0.5f, ), ,, Color, ., gray, ,, new, BasicStroke, (]
[,, Color, ., gray, ,, new, BasicStroke, (, 0.5f, ), ,, Color, ., gray, ,, new, BasicStroke, (, 0.5f, )]
[,, new, BasicStroke, (, 0.5f, ), ,, Color, ., gray, ,, new, BasicStroke, (, 0.5f, ), ,, 0.8f, ), ;]
[., gray, ,, new, BasicStroke, (, 0.5f, ), ,, Color, ., gray, ,, new, BasicStroke, (, 0.5f, ), ,, 0.8f]
[,, Color, ., gray, ,, new, BasicStroke, (, 0.5f, ), ,, 0.8f, ), ;, }, public, IntervalMarker, (, double, start]
[), ,, Color, ., gray, ,, new, BasicStroke, (, 0.5f, ), ,, 0.8f, ), ;, }, public, IntervalMarker, (, double]
[,, new, BasicStroke, (, 0.5f, ), ,, 0.8f, ), ;, }, public, IntervalMarker, (, double, start, ,, double, end, ,]
[., gray, ,, new, BasicStroke, (, 0.5f, ), ,, 0.8f, ), ;, }, public, IntervalMarker, (, double, start, ,, double]
[,, 0.8f, ), ;, }, public, IntervalMarker, (, double, start, ,, double, end, ,, Paint, paint, ), {, this, (]
[), ,, 0.8f, ), ;, }, public, IntervalMarker, (, double, start, ,, double, end, ,, Paint, paint, ), {, this]
[), ;, }, public, IntervalMarker, (, double, start, ,, double, end, ,, Paint, paint, ), {, this, (, start, ,]
[,, end, ,, paint, ,, new, BasicStroke, (, 0.5f, ), ,, null, ,, null, ,, 0.8f, ), ;, }, public]
[,, paint, ,, new, BasicStroke, (, 0.5f, ), ,, null, ,, null, ,, 0.8f, ), ;, }, public, IntervalMarker, (]
[,, new, BasicStroke, (, 0.5f, ), ,, null, ,, null, ,, 0.8f, ), ;, }, public, IntervalMarker, (, double, start]
[,, null, ,, null, ,, 0.8f, ), ;, }, public, IntervalMarker, (, double, start, ,, double, end, ,, Paint, paint]
[), ,, null, ,, null, ,, 0.8f, ), ;, }, public, IntervalMarker, (, double, start, ,, double, end, ,, Paint]
[,, null, ,, 0.8f, ), ;, }, public, IntervalMarker, (, double, start, ,, double, end, ,, Paint, paint, ,, Stroke]
[,, 0.8f, ), ;, }, public, IntervalMarker, (, double, start, ,, double, end, ,, Paint, paint, ,, Stroke, stroke, ,]
[), ;, }, public, IntervalMarker, (, double, start, ,, double, end, ,, Paint, paint, ,, Stroke, stroke, ,, Paint, outlinePaint]
[,, stroke, ,, outlinePaint, ,, outlineStroke, ,, alpha, ), ;, this, ., startValue, =, start, ;, this, ., endValue, =]
[,, outlinePaint, ,, outlineStroke, ,, alpha, ), ;, this, ., startValue, =, start, ;, this, ., endValue, =, end, ;]
[,, outlineStroke, ,, alpha, ), ;, this, ., startValue, =, start, ;, this, ., endValue, =, end, ;, this, .]
[,, alpha, ), ;, this, ., startValue, =, start, ;, this, ., endValue, =, end, ;, this, ., gradientPaintTransformer, =]
[), ;, this, ., startValue, =, start, ;, this, ., endValue, =, end, ;, this, ., gradientPaintTransformer, =, null, ;]
[=, start, ;, this, ., endValue, =, end, ;, this, ., gradientPaintTransformer, =, null, ;, setLabelOffsetType, (, LengthAdjustmentType, ., CONTRACT]
[., startValue, =, start, ;, this, ., endValue, =, end, ;, this, ., gradientPaintTransformer, =, null, ;, setLabelOffsetType, (, LengthAdjustmentType]
[;, this, ., endValue, =, end, ;, this, ., gradientPaintTransformer, =, null, ;, setLabelOffsetType, (, LengthAdjustmentType, ., CONTRACT, ), ;]
[=, end, ;, this, ., gradientPaintTransformer, =, null, ;, setLabelOffsetType, (, LengthAdjustmentType, ., CONTRACT, ), ;, }, public, double, getStartValue]
[., endValue, =, end, ;, this, ., gradientPaintTransformer, =, null, ;, setLabelOffsetType, (, LengthAdjustmentType, ., CONTRACT, ), ;, }, public]
[;, this, ., gradientPaintTransformer, =, null, ;, setLabelOffsetType, (, LengthAdjustmentType, ., CONTRACT, ), ;, }, public, double, getStartValue, (, )]
[=, null, ;, setLabelOffsetType, (, LengthAdjustmentType, ., CONTRACT, ), ;, }, public, double, getStartValue, (, ), {, return, this, .]
[., gradientPaintTransformer, =, null, ;, setLabelOffsetType, (, LengthAdjustmentType, ., CONTRACT, ), ;, }, public, double, getStartValue, (, ), {, return]
[;, setLabelOffsetType, (, LengthAdjustmentType, ., CONTRACT, ), ;, }, public, double, getStartValue, (, ), {, return, this, ., startValue, ;]
[;, }, public, double, getStartValue, (, ), {, return, this, ., startValue, ;, }, public, void, setStartValue, (, double, value]
[), ;, }, public, double, getStartValue, (, ), {, return, this, ., startValue, ;, }, public, void, setStartValue, (, double]
[., CONTRACT, ), ;, }, public, double, getStartValue, (, ), {, return, this, ., startValue, ;, }, public, void, setStartValue]
[;, }, public, void, setStartValue, (, double, value, ), {, this, ., startValue, =, value, ;, notifyListeners, (, new, MarkerChangeEvent]
[., startValue, ;, }, public, void, setStartValue, (, double, value, ), {, this, ., startValue, =, value, ;, notifyListeners, (]
[=, value, ;, notifyListeners, (, new, MarkerChangeEvent, (, this, ), ), ;, }, public, double, getEndValue, (, ), {, return]
[., startValue, =, value, ;, notifyListeners, (, new, MarkerChangeEvent, (, this, ), ), ;, }, public, double, getEndValue, (, )]
[;, notifyListeners, (, new, MarkerChangeEvent, (, this, ), ), ;, }, public, double, getEndValue, (, ), {, return, this, .]
[;, }, public, double, getEndValue, (, ), {, return, this, ., endValue, ;, }, public, void, setEndValue, (, double, value]
[), ;, }, public, double, getEndValue, (, ), {, return, this, ., endValue, ;, }, public, void, setEndValue, (, double]
[), ), ;, }, public, double, getEndValue, (, ), {, return, this, ., endValue, ;, }, public, void, setEndValue, (]
[;, }, public, void, setEndValue, (, double, value, ), {, this, ., endValue, =, value, ;, notifyListeners, (, new, MarkerChangeEvent]
[., endValue, ;, }, public, void, setEndValue, (, double, value, ), {, this, ., endValue, =, value, ;, notifyListeners, (]
[=, value, ;, notifyListeners, (, new, MarkerChangeEvent, (, this, ), ), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return]
[., endValue, =, value, ;, notifyListeners, (, new, MarkerChangeEvent, (, this, ), ), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, )]
[;, notifyListeners, (, new, MarkerChangeEvent, (, this, ), ), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return, this, .]
[;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return, this, ., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, transformer]
[), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return, this, ., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer]
[), ), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return, this, ., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (]
[;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, transformer, ), {, this, ., gradientPaintTransformer, =, transformer, ;, notifyListeners, (, new, MarkerChangeEvent]
[., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, transformer, ), {, this, ., gradientPaintTransformer, =, transformer, ;, notifyListeners, (]
[=, transformer, ;, notifyListeners, (, new, MarkerChangeEvent, (, this, ), ), ;, }, public, boolean, equals, (, Object, obj, )]
[., gradientPaintTransformer, =, transformer, ;, notifyListeners, (, new, MarkerChangeEvent, (, this, ), ), ;, }, public, boolean, equals, (, Object]
[;, notifyListeners, (, new, MarkerChangeEvent, (, this, ), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, IntervalMarker, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, IntervalMarker, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, IntervalMarker, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, IntervalMarker, ), ), {, return, false, ;, }, if, (, !, super]
[), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;]
[), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false]
[instanceof, IntervalMarker, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {]
[;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, IntervalMarker, that, =]
[), {, return, false, ;, }, IntervalMarker, that, =, (, IntervalMarker, ), obj, ;, if, (, this, ., startValue, !=]
[), {, return, false, ;, }, IntervalMarker, that, =, (, IntervalMarker, ), obj, ;, if, (, this, ., startValue, !=]
[., equals, (, obj, ), ), {, return, false, ;, }, IntervalMarker, that, =, (, IntervalMarker, ), obj, ;, if]
[), ), {, return, false, ;, }, IntervalMarker, that, =, (, IntervalMarker, ), obj, ;, if, (, this, ., startValue]
[;, }, IntervalMarker, that, =, (, IntervalMarker, ), obj, ;, if, (, this, ., startValue, !=, that, ., startValue, )]
[;, if, (, this, ., startValue, !=, that, ., startValue, ), {, return, false, ;, }, if, (, this, .]
[;, if, (, this, ., startValue, !=, that, ., startValue, ), {, return, false, ;, }, if, (, this, .]
[), {, return, false, ;, }, if, (, this, ., endValue, !=, that, ., endValue, ), {, return, false, ;]
[!=, that, ., startValue, ), {, return, false, ;, }, if, (, this, ., endValue, !=, that, ., endValue, )]
[., startValue, !=, that, ., startValue, ), {, return, false, ;, }, if, (, this, ., endValue, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., endValue, !=, that, ., endValue, ), {, return, false, ;]
[., startValue, ), {, return, false, ;, }, if, (, this, ., endValue, !=, that, ., endValue, ), {, return]
[;, }, if, (, this, ., endValue, !=, that, ., endValue, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer, ,, that, ., gradientPaintTransformer]
[!=, that, ., endValue, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer]
[., endValue, !=, that, ., endValue, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer, ,, that, ., gradientPaintTransformer]
[., endValue, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer, ,, that]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer, ,, that, ., gradientPaintTransformer, ), ), {, return]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super]
[., equal, (, this, ., gradientPaintTransformer, ,, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, return, true, ;]
[,, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, )]
[., gradientPaintTransformer, ,, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone]
[), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[., gradientPaintTransformer, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, )]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, }]
[;, }, }]
[., clone, (, ), ;, }, }]
