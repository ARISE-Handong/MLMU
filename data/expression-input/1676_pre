[;, import, java, ., io, ., Serializable, ;, public, class, ConditionalStackTraceFilter, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[import, java, ., io, ., Serializable, ;, public, class, ConditionalStackTraceFilter, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[public, class, ConditionalStackTraceFilter, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -, 8085849703510292641L, ;, private, final, IMockitoConfiguration, config, =]
[serialVersionUID, =, -, 8085849703510292641L, ;, private, final, IMockitoConfiguration, config, =, new, GlobalConfiguration, (, ), ;, private, final, StackTraceFilter, filter, =]
[private, final, StackTraceFilter, filter, =, new, StackTraceFilter, (, ), ;, public, void, filter, (, Throwable, throwable, ), {, if, (]
[final, StackTraceFilter, filter, =, new, StackTraceFilter, (, ), ;, public, void, filter, (, Throwable, throwable, ), {, if, (, !]
[final, StackTraceFilter, filter, =, new, StackTraceFilter, (, ), ;, public, void, filter, (, Throwable, throwable, ), {, if, (, !]
[), {, if, (, !, config, ., cleansStackTrace, (, ), ), {, return, ;, }, StackTraceElement, [, ], filtered, =]
[), {, if, (, !, config, ., cleansStackTrace, (, ), ), {, return, ;, }, StackTraceElement, [, ], filtered, =]
[!, config, ., cleansStackTrace, (, ), ), {, return, ;, }, StackTraceElement, [, ], filtered, =, filter, ., filter, (]
[!, config, ., cleansStackTrace, (, ), ), {, return, ;, }, StackTraceElement, [, ], filtered, =, filter, ., filter, (]
[), {, return, ;, }, StackTraceElement, [, ], filtered, =, filter, ., filter, (, throwable, ., getStackTrace, (, ), ,]
[;, }, StackTraceElement, [, ], filtered, =, filter, ., filter, (, throwable, ., getStackTrace, (, ), ,, true, ), ;]
[;, }, StackTraceElement, [, ], filtered, =, filter, ., filter, (, throwable, ., getStackTrace, (, ), ,, true, ), ;]
[], filtered, =, filter, ., filter, (, throwable, ., getStackTrace, (, ), ,, true, ), ;, throwable, ., setStackTrace, (]
