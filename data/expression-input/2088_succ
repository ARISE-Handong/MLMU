[;, originOffset, =, 0, ;, setFrame, (, ), ;, }, public, Plane, (, final, Vector3D, p, ,, final, Vector3D, normal]
[), ;, originOffset, =, 0, ;, setFrame, (, ), ;, }, public, Plane, (, final, Vector3D, p, ,, final, Vector3D]
[=, 0, ;, setFrame, (, ), ;, }, public, Plane, (, final, Vector3D, p, ,, final, Vector3D, normal, ), throws]
[;, setFrame, (, ), ;, }, public, Plane, (, final, Vector3D, p, ,, final, Vector3D, normal, ), throws, MathArithmeticException, {]
[;, }, public, Plane, (, final, Vector3D, p, ,, final, Vector3D, normal, ), throws, MathArithmeticException, {, setNormal, (, normal, )]
[;, originOffset, =, -, p, ., dotProduct, (, w, ), ;, setFrame, (, ), ;, }, public, Plane, (, final]
[), ;, originOffset, =, -, p, ., dotProduct, (, w, ), ;, setFrame, (, ), ;, }, public, Plane, (]
[=, -, p, ., dotProduct, (, w, ), ;, setFrame, (, ), ;, }, public, Plane, (, final, Vector3D, p1]
[;, setFrame, (, ), ;, }, public, Plane, (, final, Vector3D, p1, ,, final, Vector3D, p2, ,, final, Vector3D, p3]
[;, setFrame, (, ), ;, }, public, Plane, (, final, Vector3D, p1, ,, final, Vector3D, p2, ,, final, Vector3D, p3]
[., dotProduct, (, w, ), ;, setFrame, (, ), ;, }, public, Plane, (, final, Vector3D, p1, ,, final, Vector3D]
[), ;, setFrame, (, ), ;, }, public, Plane, (, final, Vector3D, p1, ,, final, Vector3D, p2, ,, final, Vector3D]
[;, }, public, Plane, (, final, Vector3D, p1, ,, final, Vector3D, p2, ,, final, Vector3D, p3, ), throws, MathArithmeticException, {]
[,, p2, ., subtract, (, p1, ), ., crossProduct, (, p3, ., subtract, (, p1, ), ), ), ;, }]
[), ;, }, public, Plane, (, final, Plane, plane, ), {, originOffset, =, plane, ., originOffset, ;, origin, =, plane]
[., crossProduct, (, p3, ., subtract, (, p1, ), ), ), ;, }, public, Plane, (, final, Plane, plane, )]
[., subtract, (, p1, ), ., crossProduct, (, p3, ., subtract, (, p1, ), ), ), ;, }, public, Plane]
[), ., crossProduct, (, p3, ., subtract, (, p1, ), ), ), ;, }, public, Plane, (, final, Plane, plane]
[), ), ;, }, public, Plane, (, final, Plane, plane, ), {, originOffset, =, plane, ., originOffset, ;, origin, =]
[., subtract, (, p1, ), ), ), ;, }, public, Plane, (, final, Plane, plane, ), {, originOffset, =, plane]
[), ), ), ;, }, public, Plane, (, final, Plane, plane, ), {, originOffset, =, plane, ., originOffset, ;, origin]
[=, plane, ., originOffset, ;, origin, =, plane, ., origin, ;, u, =, plane, ., u, ;, v, =, plane]
[;, origin, =, plane, ., origin, ;, u, =, plane, ., u, ;, v, =, plane, ., v, ;, w]
[., originOffset, ;, origin, =, plane, ., origin, ;, u, =, plane, ., u, ;, v, =, plane, ., v]
[=, plane, ., origin, ;, u, =, plane, ., u, ;, v, =, plane, ., v, ;, w, =, plane]
[;, u, =, plane, ., u, ;, v, =, plane, ., v, ;, w, =, plane, ., w, ;, }]
[., origin, ;, u, =, plane, ., u, ;, v, =, plane, ., v, ;, w, =, plane, ., w]
[=, plane, ., u, ;, v, =, plane, ., v, ;, w, =, plane, ., w, ;, }, public, Plane]
[;, v, =, plane, ., v, ;, w, =, plane, ., w, ;, }, public, Plane, copySelf, (, ), {]
[., u, ;, v, =, plane, ., v, ;, w, =, plane, ., w, ;, }, public, Plane, copySelf, (]
[=, plane, ., v, ;, w, =, plane, ., w, ;, }, public, Plane, copySelf, (, ), {, return, new]
[;, w, =, plane, ., w, ;, }, public, Plane, copySelf, (, ), {, return, new, Plane, (, this, )]
[., v, ;, w, =, plane, ., w, ;, }, public, Plane, copySelf, (, ), {, return, new, Plane, (]
[=, plane, ., w, ;, }, public, Plane, copySelf, (, ), {, return, new, Plane, (, this, ), ;, }]
[;, }, public, Plane, copySelf, (, ), {, return, new, Plane, (, this, ), ;, }, public, void, reset, (]
[., w, ;, }, public, Plane, copySelf, (, ), {, return, new, Plane, (, this, ), ;, }, public, void]
[;, }, public, void, reset, (, final, Vector3D, p, ,, final, Vector3D, normal, ), throws, MathArithmeticException, {, setNormal, (, normal]
[), ;, }, public, void, reset, (, final, Vector3D, p, ,, final, Vector3D, normal, ), throws, MathArithmeticException, {, setNormal, (]
[;, originOffset, =, -, p, ., dotProduct, (, w, ), ;, setFrame, (, ), ;, }, public, void, reset, (]
[), ;, originOffset, =, -, p, ., dotProduct, (, w, ), ;, setFrame, (, ), ;, }, public, void, reset]
[=, -, p, ., dotProduct, (, w, ), ;, setFrame, (, ), ;, }, public, void, reset, (, final, Plane]
[;, setFrame, (, ), ;, }, public, void, reset, (, final, Plane, original, ), {, originOffset, =, original, ., originOffset]
[;, setFrame, (, ), ;, }, public, void, reset, (, final, Plane, original, ), {, originOffset, =, original, ., originOffset]
[., dotProduct, (, w, ), ;, setFrame, (, ), ;, }, public, void, reset, (, final, Plane, original, ), {]
[), ;, setFrame, (, ), ;, }, public, void, reset, (, final, Plane, original, ), {, originOffset, =, original, .]
[;, }, public, void, reset, (, final, Plane, original, ), {, originOffset, =, original, ., originOffset, ;, origin, =, original]
[=, original, ., originOffset, ;, origin, =, original, ., origin, ;, u, =, original, ., u, ;, v, =, original]
[;, origin, =, original, ., origin, ;, u, =, original, ., u, ;, v, =, original, ., v, ;, w]
[., originOffset, ;, origin, =, original, ., origin, ;, u, =, original, ., u, ;, v, =, original, ., v]
[=, original, ., origin, ;, u, =, original, ., u, ;, v, =, original, ., v, ;, w, =, original]
[;, u, =, original, ., u, ;, v, =, original, ., v, ;, w, =, original, ., w, ;, }]
[., origin, ;, u, =, original, ., u, ;, v, =, original, ., v, ;, w, =, original, ., w]
[=, original, ., u, ;, v, =, original, ., v, ;, w, =, original, ., w, ;, }, private, void]
[;, v, =, original, ., v, ;, w, =, original, ., w, ;, }, private, void, setNormal, (, final, Vector3D]
[., u, ;, v, =, original, ., v, ;, w, =, original, ., w, ;, }, private, void, setNormal, (]
[=, original, ., v, ;, w, =, original, ., w, ;, }, private, void, setNormal, (, final, Vector3D, normal, )]
[;, w, =, original, ., w, ;, }, private, void, setNormal, (, final, Vector3D, normal, ), throws, MathArithmeticException, {, final]
[., v, ;, w, =, original, ., w, ;, }, private, void, setNormal, (, final, Vector3D, normal, ), throws, MathArithmeticException]
[=, original, ., w, ;, }, private, void, setNormal, (, final, Vector3D, normal, ), throws, MathArithmeticException, {, final, double, norm]
[;, }, private, void, setNormal, (, final, Vector3D, normal, ), throws, MathArithmeticException, {, final, double, norm, =, normal, ., getNorm]
[., w, ;, }, private, void, setNormal, (, final, Vector3D, normal, ), throws, MathArithmeticException, {, final, double, norm, =, normal]
[;, if, (, norm, <, 1.0e-10, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, w, =]
[., getNorm, (, ), ;, if, (, norm, <, 1.0e-10, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, )]
[), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, w, =, new, Vector3D, (, 1.0, /, norm]
[<, 1.0e-10, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, w, =, new, Vector3D, (, 1.0]
[), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, w, =, new, Vector3D, (, 1.0, /, norm]
[;, }, w, =, new, Vector3D, (, 1.0, /, norm, ,, normal, ), ;, }, private, void, setFrame, (, )]
[), ;, }, w, =, new, Vector3D, (, 1.0, /, norm, ,, normal, ), ;, }, private, void, setFrame, (]
[., ZERO_NORM, ), ;, }, w, =, new, Vector3D, (, 1.0, /, norm, ,, normal, ), ;, }, private, void]
[=, new, Vector3D, (, 1.0, /, norm, ,, normal, ), ;, }, private, void, setFrame, (, ), {, origin, =]
[;, }, private, void, setFrame, (, ), {, origin, =, new, Vector3D, (, -, originOffset, ,, w, ), ;, u]
[,, normal, ), ;, }, private, void, setFrame, (, ), {, origin, =, new, Vector3D, (, -, originOffset, ,, w]
[/, norm, ,, normal, ), ;, }, private, void, setFrame, (, ), {, origin, =, new, Vector3D, (, -, originOffset]
[,, normal, ), ;, }, private, void, setFrame, (, ), {, origin, =, new, Vector3D, (, -, originOffset, ,, w]
[), ;, }, private, void, setFrame, (, ), {, origin, =, new, Vector3D, (, -, originOffset, ,, w, ), ;]
[=, new, Vector3D, (, -, originOffset, ,, w, ), ;, u, =, w, ., orthogonal, (, ), ;, v, =]
[;, u, =, w, ., orthogonal, (, ), ;, v, =, Vector3D, ., crossProduct, (, w, ,, u, ), ;]
[,, w, ), ;, u, =, w, ., orthogonal, (, ), ;, v, =, Vector3D, ., crossProduct, (, w, ,]
[,, w, ), ;, u, =, w, ., orthogonal, (, ), ;, v, =, Vector3D, ., crossProduct, (, w, ,]
[), ;, u, =, w, ., orthogonal, (, ), ;, v, =, Vector3D, ., crossProduct, (, w, ,, u, )]
[=, w, ., orthogonal, (, ), ;, v, =, Vector3D, ., crossProduct, (, w, ,, u, ), ;, }, public]
[;, v, =, Vector3D, ., crossProduct, (, w, ,, u, ), ;, }, public, Vector3D, getOrigin, (, ), {, return]
[., orthogonal, (, ), ;, v, =, Vector3D, ., crossProduct, (, w, ,, u, ), ;, }, public, Vector3D, getOrigin]
[=, Vector3D, ., crossProduct, (, w, ,, u, ), ;, }, public, Vector3D, getOrigin, (, ), {, return, origin, ;]
[;, }, public, Vector3D, getOrigin, (, ), {, return, origin, ;, }, public, Vector3D, getNormal, (, ), {, return, w]
[., crossProduct, (, w, ,, u, ), ;, }, public, Vector3D, getOrigin, (, ), {, return, origin, ;, }, public]
[,, u, ), ;, }, public, Vector3D, getOrigin, (, ), {, return, origin, ;, }, public, Vector3D, getNormal, (, )]
[), ;, }, public, Vector3D, getOrigin, (, ), {, return, origin, ;, }, public, Vector3D, getNormal, (, ), {, return]
[;, }, public, Vector3D, getNormal, (, ), {, return, w, ;, }, public, Vector3D, getU, (, ), {, return, u]
[;, }, public, Vector3D, getU, (, ), {, return, u, ;, }, public, Vector3D, getV, (, ), {, return, v]
[;, }, public, Vector3D, getV, (, ), {, return, v, ;, }, public, void, revertSelf, (, ), {, final, Vector3D]
[;, }, public, void, revertSelf, (, ), {, final, Vector3D, tmp, =, u, ;, u, =, v, ;, v, =]
[;, u, =, v, ;, v, =, tmp, ;, w, =, w, ., negate, (, ), ;, originOffset, =, -]
[=, v, ;, v, =, tmp, ;, w, =, w, ., negate, (, ), ;, originOffset, =, -, originOffset, ;]
[;, v, =, tmp, ;, w, =, w, ., negate, (, ), ;, originOffset, =, -, originOffset, ;, }, public]
[=, tmp, ;, w, =, w, ., negate, (, ), ;, originOffset, =, -, originOffset, ;, }, public, Vector2D, toSubSpace]
[;, w, =, w, ., negate, (, ), ;, originOffset, =, -, originOffset, ;, }, public, Vector2D, toSubSpace, (, final]
[=, w, ., negate, (, ), ;, originOffset, =, -, originOffset, ;, }, public, Vector2D, toSubSpace, (, final, Vector, <]
[;, originOffset, =, -, originOffset, ;, }, public, Vector2D, toSubSpace, (, final, Vector, <, Euclidean3D, >, point, ), {, return]
[., negate, (, ), ;, originOffset, =, -, originOffset, ;, }, public, Vector2D, toSubSpace, (, final, Vector, <, Euclidean3D, >]
[=, -, originOffset, ;, }, public, Vector2D, toSubSpace, (, final, Vector, <, Euclidean3D, >, point, ), {, return, new, Vector2D]
[;, }, public, Vector2D, toSubSpace, (, final, Vector, <, Euclidean3D, >, point, ), {, return, new, Vector2D, (, point, .]
[;, }, public, Vector2D, toSubSpace, (, final, Vector, <, Euclidean3D, >, point, ), {, return, new, Vector2D, (, point, .]
[;, }, public, Vector3D, toSpace, (, final, Vector, <, Euclidean2D, >, point, ), {, final, Vector2D, p2D, =, (, Vector2D]
[,, point, ., dotProduct, (, v, ), ), ;, }, public, Vector3D, toSpace, (, final, Vector, <, Euclidean2D, >, point]
[., dotProduct, (, u, ), ,, point, ., dotProduct, (, v, ), ), ;, }, public, Vector3D, toSpace, (, final]
[), ,, point, ., dotProduct, (, v, ), ), ;, }, public, Vector3D, toSpace, (, final, Vector, <, Euclidean2D, >]
[), ;, }, public, Vector3D, toSpace, (, final, Vector, <, Euclidean2D, >, point, ), {, final, Vector2D, p2D, =, (]
[., dotProduct, (, v, ), ), ;, }, public, Vector3D, toSpace, (, final, Vector, <, Euclidean2D, >, point, ), {]
[), ), ;, }, public, Vector3D, toSpace, (, final, Vector, <, Euclidean2D, >, point, ), {, final, Vector2D, p2D, =]
[;, return, new, Vector3D, (, p2D, ., getX, (, ), ,, u, ,, p2D, ., getY, (, ), ,, v]
[;, return, new, Vector3D, (, p2D, ., getX, (, ), ,, u, ,, p2D, ., getY, (, ), ,, v]
[;, }, public, Vector3D, getPointAt, (, final, Vector2D, inPlane, ,, final, double, offset, ), {, return, new, Vector3D, (, inPlane]
[,, u, ,, p2D, ., getY, (, ), ,, v, ,, -, originOffset, ,, w, ), ;, }, public, Vector3D]
[., getX, (, ), ,, u, ,, p2D, ., getY, (, ), ,, v, ,, -, originOffset, ,, w, )]
[,, p2D, ., getY, (, ), ,, v, ,, -, originOffset, ,, w, ), ;, }, public, Vector3D, getPointAt, (]
[,, v, ,, -, originOffset, ,, w, ), ;, }, public, Vector3D, getPointAt, (, final, Vector2D, inPlane, ,, final, double]
[., getY, (, ), ,, v, ,, -, originOffset, ,, w, ), ;, }, public, Vector3D, getPointAt, (, final, Vector2D]
[,, -, originOffset, ,, w, ), ;, }, public, Vector3D, getPointAt, (, final, Vector2D, inPlane, ,, final, double, offset, )]
[,, w, ), ;, }, public, Vector3D, getPointAt, (, final, Vector2D, inPlane, ,, final, double, offset, ), {, return, new]
[,, w, ), ;, }, public, Vector3D, getPointAt, (, final, Vector2D, inPlane, ,, final, double, offset, ), {, return, new]
[), ;, }, public, Vector3D, getPointAt, (, final, Vector2D, inPlane, ,, final, double, offset, ), {, return, new, Vector3D, (]
[;, }, public, boolean, isSimilarTo, (, final, Plane, plane, ), {, final, double, angle, =, Vector3D, ., angle, (, w]
[,, u, ,, inPlane, ., getY, (, ), ,, v, ,, offset, -, originOffset, ,, w, ), ;, }, public]
[., getX, (, ), ,, u, ,, inPlane, ., getY, (, ), ,, v, ,, offset, -, originOffset, ,, w]
[,, inPlane, ., getY, (, ), ,, v, ,, offset, -, originOffset, ,, w, ), ;, }, public, boolean, isSimilarTo]
[,, v, ,, offset, -, originOffset, ,, w, ), ;, }, public, boolean, isSimilarTo, (, final, Plane, plane, ), {]
[., getY, (, ), ,, v, ,, offset, -, originOffset, ,, w, ), ;, }, public, boolean, isSimilarTo, (, final]
[,, offset, -, originOffset, ,, w, ), ;, }, public, boolean, isSimilarTo, (, final, Plane, plane, ), {, final, double]
[,, w, ), ;, }, public, boolean, isSimilarTo, (, final, Plane, plane, ), {, final, double, angle, =, Vector3D, .]
[-, originOffset, ,, w, ), ;, }, public, boolean, isSimilarTo, (, final, Plane, plane, ), {, final, double, angle, =]
[,, w, ), ;, }, public, boolean, isSimilarTo, (, final, Plane, plane, ), {, final, double, angle, =, Vector3D, .]
[), ;, }, public, boolean, isSimilarTo, (, final, Plane, plane, ), {, final, double, angle, =, Vector3D, ., angle, (]
[;, return, (, (, angle, <, 1.0e-10, ), &&, (, FastMath, ., abs, (, originOffset, -, plane, ., originOffset, )]
[., angle, (, w, ,, plane, ., w, ), ;, return, (, (, angle, <, 1.0e-10, ), &&, (, FastMath]
[,, plane, ., w, ), ;, return, (, (, angle, <, 1.0e-10, ), &&, (, FastMath, ., abs, (, originOffset]
[), ;, return, (, (, angle, <, 1.0e-10, ), &&, (, FastMath, ., abs, (, originOffset, -, plane, ., originOffset]
[., w, ), ;, return, (, (, angle, <, 1.0e-10, ), &&, (, FastMath, ., abs, (, originOffset, -, plane]
[;, }, public, Plane, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, final, Vector3D, delta, =, origin]
[||, (, (, angle, >, (, FastMath, ., PI, -, 1.0e-10, ), ), &&, (, FastMath, ., abs, (, originOffset]
[), ||, (, (, angle, >, (, FastMath, ., PI, -, 1.0e-10, ), ), &&, (, FastMath, ., abs, (]
[&&, (, FastMath, ., abs, (, originOffset, -, plane, ., originOffset, ), <, 1.0e-10, ), ), ||, (, (, angle]
[), &&, (, FastMath, ., abs, (, originOffset, -, plane, ., originOffset, ), <, 1.0e-10, ), ), ||, (, (]
[<, 1.0e-10, ), &&, (, FastMath, ., abs, (, originOffset, -, plane, ., originOffset, ), <, 1.0e-10, ), ), ||]
[), &&, (, FastMath, ., abs, (, originOffset, -, plane, ., originOffset, ), <, 1.0e-10, ), ), ||, (, (]
[), ||, (, (, angle, >, (, FastMath, ., PI, -, 1.0e-10, ), ), &&, (, FastMath, ., abs, (]
[), ), ||, (, (, angle, >, (, FastMath, ., PI, -, 1.0e-10, ), ), &&, (, FastMath, ., abs]
[<, 1.0e-10, ), ), ||, (, (, angle, >, (, FastMath, ., PI, -, 1.0e-10, ), ), &&, (, FastMath]
[., abs, (, originOffset, -, plane, ., originOffset, ), <, 1.0e-10, ), ), ||, (, (, angle, >, (, FastMath]
[), <, 1.0e-10, ), ), ||, (, (, angle, >, (, FastMath, ., PI, -, 1.0e-10, ), ), &&, (]
[-, plane, ., originOffset, ), <, 1.0e-10, ), ), ||, (, (, angle, >, (, FastMath, ., PI, -, 1.0e-10]
[), <, 1.0e-10, ), ), ||, (, (, angle, >, (, FastMath, ., PI, -, 1.0e-10, ), ), &&, (]
[., originOffset, ), <, 1.0e-10, ), ), ||, (, (, angle, >, (, FastMath, ., PI, -, 1.0e-10, ), )]
[), ), ||, (, (, angle, >, (, FastMath, ., PI, -, 1.0e-10, ), ), &&, (, FastMath, ., abs]
[;, }, public, Plane, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, final, Vector3D, delta, =, origin]
[), ;, }, public, Plane, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, final, Vector3D, delta, =]
[&&, (, FastMath, ., abs, (, originOffset, +, plane, ., originOffset, ), <, 1.0e-10, ), ), ;, }, public, Plane]
[), &&, (, FastMath, ., abs, (, originOffset, +, plane, ., originOffset, ), <, 1.0e-10, ), ), ;, }, public]
[>, (, FastMath, ., PI, -, 1.0e-10, ), ), &&, (, FastMath, ., abs, (, originOffset, +, plane, ., originOffset]
[), &&, (, FastMath, ., abs, (, originOffset, +, plane, ., originOffset, ), <, 1.0e-10, ), ), ;, }, public]
[), ), &&, (, FastMath, ., abs, (, originOffset, +, plane, ., originOffset, ), <, 1.0e-10, ), ), ;, }]
[-, 1.0e-10, ), ), &&, (, FastMath, ., abs, (, originOffset, +, plane, ., originOffset, ), <, 1.0e-10, ), )]
[., PI, -, 1.0e-10, ), ), &&, (, FastMath, ., abs, (, originOffset, +, plane, ., originOffset, ), <, 1.0e-10]
[), ), &&, (, FastMath, ., abs, (, originOffset, +, plane, ., originOffset, ), <, 1.0e-10, ), ), ;, }]
[), ;, }, public, Plane, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, final, Vector3D, delta, =]
[), ), ;, }, public, Plane, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, final, Vector3D, delta]
[<, 1.0e-10, ), ), ;, }, public, Plane, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, final]
[., abs, (, originOffset, +, plane, ., originOffset, ), <, 1.0e-10, ), ), ;, }, public, Plane, rotate, (, final]
[), <, 1.0e-10, ), ), ;, }, public, Plane, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {]
[+, plane, ., originOffset, ), <, 1.0e-10, ), ), ;, }, public, Plane, rotate, (, final, Vector3D, center, ,, final]
[), <, 1.0e-10, ), ), ;, }, public, Plane, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {]
[., originOffset, ), <, 1.0e-10, ), ), ;, }, public, Plane, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation]
[), ), ;, }, public, Plane, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, final, Vector3D, delta]
[;, final, Plane, plane, =, new, Plane, (, center, ., add, (, rotation, ., applyTo, (, delta, ), ), ,]
[., subtract, (, center, ), ;, final, Plane, plane, =, new, Plane, (, center, ., add, (, rotation, ., applyTo]
[), ;, final, Plane, plane, =, new, Plane, (, center, ., add, (, rotation, ., applyTo, (, delta, ), )]
[;, plane, ., u, =, rotation, ., applyTo, (, u, ), ;, plane, ., v, =, rotation, ., applyTo, (]
[,, rotation, ., applyTo, (, w, ), ), ;, plane, ., u, =, rotation, ., applyTo, (, u, ), ;]
[., add, (, rotation, ., applyTo, (, delta, ), ), ,, rotation, ., applyTo, (, w, ), ), ;, plane]
[), ,, rotation, ., applyTo, (, w, ), ), ;, plane, ., u, =, rotation, ., applyTo, (, u, )]
[., applyTo, (, delta, ), ), ,, rotation, ., applyTo, (, w, ), ), ;, plane, ., u, =, rotation]
[), ), ,, rotation, ., applyTo, (, w, ), ), ;, plane, ., u, =, rotation, ., applyTo, (, u]
[), ;, plane, ., u, =, rotation, ., applyTo, (, u, ), ;, plane, ., v, =, rotation, ., applyTo]
[., applyTo, (, w, ), ), ;, plane, ., u, =, rotation, ., applyTo, (, u, ), ;, plane, .]
[), ), ;, plane, ., u, =, rotation, ., applyTo, (, u, ), ;, plane, ., v, =, rotation, .]
[=, rotation, ., applyTo, (, u, ), ;, plane, ., v, =, rotation, ., applyTo, (, v, ), ;, return]
[., u, =, rotation, ., applyTo, (, u, ), ;, plane, ., v, =, rotation, ., applyTo, (, v, )]
[;, plane, ., v, =, rotation, ., applyTo, (, v, ), ;, return, plane, ;, }, public, Plane, translate, (]
[., applyTo, (, u, ), ;, plane, ., v, =, rotation, ., applyTo, (, v, ), ;, return, plane, ;]
[), ;, plane, ., v, =, rotation, ., applyTo, (, v, ), ;, return, plane, ;, }, public, Plane, translate]
[=, rotation, ., applyTo, (, v, ), ;, return, plane, ;, }, public, Plane, translate, (, final, Vector3D, translation, )]
[., v, =, rotation, ., applyTo, (, v, ), ;, return, plane, ;, }, public, Plane, translate, (, final, Vector3D]
[;, return, plane, ;, }, public, Plane, translate, (, final, Vector3D, translation, ), {, final, Plane, plane, =, new, Plane]
[., applyTo, (, v, ), ;, return, plane, ;, }, public, Plane, translate, (, final, Vector3D, translation, ), {, final]
[), ;, return, plane, ;, }, public, Plane, translate, (, final, Vector3D, translation, ), {, final, Plane, plane, =, new]
[;, }, public, Plane, translate, (, final, Vector3D, translation, ), {, final, Plane, plane, =, new, Plane, (, origin, .]
[;, plane, ., u, =, u, ;, plane, ., v, =, v, ;, return, plane, ;, }, public, Vector3D, intersection]
[,, w, ), ;, plane, ., u, =, u, ;, plane, ., v, =, v, ;, return, plane, ;, }]
[., add, (, translation, ), ,, w, ), ;, plane, ., u, =, u, ;, plane, ., v, =, v]
[), ,, w, ), ;, plane, ., u, =, u, ;, plane, ., v, =, v, ;, return, plane, ;]
[), ;, plane, ., u, =, u, ;, plane, ., v, =, v, ;, return, plane, ;, }, public, Vector3D]
[=, u, ;, plane, ., v, =, v, ;, return, plane, ;, }, public, Vector3D, intersection, (, final, Line, line]
[., u, =, u, ;, plane, ., v, =, v, ;, return, plane, ;, }, public, Vector3D, intersection, (, final]
[;, plane, ., v, =, v, ;, return, plane, ;, }, public, Vector3D, intersection, (, final, Line, line, ), {]
[=, v, ;, return, plane, ;, }, public, Vector3D, intersection, (, final, Line, line, ), {, final, Vector3D, direction, =]
[., v, =, v, ;, return, plane, ;, }, public, Vector3D, intersection, (, final, Line, line, ), {, final, Vector3D]
[;, return, plane, ;, }, public, Vector3D, intersection, (, final, Line, line, ), {, final, Vector3D, direction, =, line, .]
[;, }, public, Vector3D, intersection, (, final, Line, line, ), {, final, Vector3D, direction, =, line, ., getDirection, (, )]
[;, final, double, dot, =, w, ., dotProduct, (, direction, ), ;, if, (, FastMath, ., abs, (, dot, )]
[., getDirection, (, ), ;, final, double, dot, =, w, ., dotProduct, (, direction, ), ;, if, (, FastMath, .]
[;, if, (, FastMath, ., abs, (, dot, ), <, 1.0e-10, ), {, return, null, ;, }, final, Vector3D, point]
[., dotProduct, (, direction, ), ;, if, (, FastMath, ., abs, (, dot, ), <, 1.0e-10, ), {, return, null]
[), ;, if, (, FastMath, ., abs, (, dot, ), <, 1.0e-10, ), {, return, null, ;, }, final, Vector3D]
[), {, return, null, ;, }, final, Vector3D, point, =, line, ., toSpace, (, Vector1D, ., ZERO, ), ;, final]
[<, 1.0e-10, ), {, return, null, ;, }, final, Vector3D, point, =, line, ., toSpace, (, Vector1D, ., ZERO, )]
[., abs, (, dot, ), <, 1.0e-10, ), {, return, null, ;, }, final, Vector3D, point, =, line, ., toSpace]
[), <, 1.0e-10, ), {, return, null, ;, }, final, Vector3D, point, =, line, ., toSpace, (, Vector1D, ., ZERO]
[), {, return, null, ;, }, final, Vector3D, point, =, line, ., toSpace, (, Vector1D, ., ZERO, ), ;, final]
[;, }, final, Vector3D, point, =, line, ., toSpace, (, Vector1D, ., ZERO, ), ;, final, double, k, =, -]
[;, final, double, k, =, -, (, originOffset, +, w, ., dotProduct, (, point, ), ), /, dot, ;, return]
[., toSpace, (, Vector1D, ., ZERO, ), ;, final, double, k, =, -, (, originOffset, +, w, ., dotProduct, (]
[), ;, final, double, k, =, -, (, originOffset, +, w, ., dotProduct, (, point, ), ), /, dot, ;]
[., ZERO, ), ;, final, double, k, =, -, (, originOffset, +, w, ., dotProduct, (, point, ), ), /]
[;, return, new, Vector3D, (, 1.0, ,, point, ,, k, ,, direction, ), ;, }, public, Line, intersection, (, final]
[/, dot, ;, return, new, Vector3D, (, 1.0, ,, point, ,, k, ,, direction, ), ;, }, public, Line, intersection]
[/, dot, ;, return, new, Vector3D, (, 1.0, ,, point, ,, k, ,, direction, ), ;, }, public, Line, intersection]
[), /, dot, ;, return, new, Vector3D, (, 1.0, ,, point, ,, k, ,, direction, ), ;, }, public, Line]
[+, w, ., dotProduct, (, point, ), ), /, dot, ;, return, new, Vector3D, (, 1.0, ,, point, ,, k]
[), /, dot, ;, return, new, Vector3D, (, 1.0, ,, point, ,, k, ,, direction, ), ;, }, public, Line]
[., dotProduct, (, point, ), ), /, dot, ;, return, new, Vector3D, (, 1.0, ,, point, ,, k, ,, direction]
[), ), /, dot, ;, return, new, Vector3D, (, 1.0, ,, point, ,, k, ,, direction, ), ;, }, public]
[;, return, new, Vector3D, (, 1.0, ,, point, ,, k, ,, direction, ), ;, }, public, Line, intersection, (, final]
[;, }, public, Line, intersection, (, final, Plane, other, ), {, final, Vector3D, direction, =, Vector3D, ., crossProduct, (, w]
[,, point, ,, k, ,, direction, ), ;, }, public, Line, intersection, (, final, Plane, other, ), {, final, Vector3D]
[,, k, ,, direction, ), ;, }, public, Line, intersection, (, final, Plane, other, ), {, final, Vector3D, direction, =]
[,, direction, ), ;, }, public, Line, intersection, (, final, Plane, other, ), {, final, Vector3D, direction, =, Vector3D, .]
[), ;, }, public, Line, intersection, (, final, Plane, other, ), {, final, Vector3D, direction, =, Vector3D, ., crossProduct, (]
[;, if, (, direction, ., getNorm, (, ), <, 1.0e-10, ), {, return, null, ;, }, final, Vector3D, point, =]
[., crossProduct, (, w, ,, other, ., w, ), ;, if, (, direction, ., getNorm, (, ), <, 1.0e-10, )]
[,, other, ., w, ), ;, if, (, direction, ., getNorm, (, ), <, 1.0e-10, ), {, return, null, ;]
[), ;, if, (, direction, ., getNorm, (, ), <, 1.0e-10, ), {, return, null, ;, }, final, Vector3D, point]
[., w, ), ;, if, (, direction, ., getNorm, (, ), <, 1.0e-10, ), {, return, null, ;, }, final]
[), {, return, null, ;, }, final, Vector3D, point, =, intersection, (, this, ,, other, ,, new, Plane, (, direction]
[<, 1.0e-10, ), {, return, null, ;, }, final, Vector3D, point, =, intersection, (, this, ,, other, ,, new, Plane]
[., getNorm, (, ), <, 1.0e-10, ), {, return, null, ;, }, final, Vector3D, point, =, intersection, (, this, ,]
[), {, return, null, ;, }, final, Vector3D, point, =, intersection, (, this, ,, other, ,, new, Plane, (, direction]
[;, }, final, Vector3D, point, =, intersection, (, this, ,, other, ,, new, Plane, (, direction, ), ), ;, return]
[;, return, new, Line, (, point, ,, point, ., add, (, direction, ), ), ;, }, public, static, Vector3D, intersection]
[,, other, ,, new, Plane, (, direction, ), ), ;, return, new, Line, (, point, ,, point, ., add, (]
[,, new, Plane, (, direction, ), ), ;, return, new, Line, (, point, ,, point, ., add, (, direction, )]
[), ;, return, new, Line, (, point, ,, point, ., add, (, direction, ), ), ;, }, public, static, Vector3D]
[), ), ;, return, new, Line, (, point, ,, point, ., add, (, direction, ), ), ;, }, public, static]
[;, }, public, static, Vector3D, intersection, (, final, Plane, plane1, ,, final, Plane, plane2, ,, final, Plane, plane3, ), {]
[,, point, ., add, (, direction, ), ), ;, }, public, static, Vector3D, intersection, (, final, Plane, plane1, ,, final]
[), ;, }, public, static, Vector3D, intersection, (, final, Plane, plane1, ,, final, Plane, plane2, ,, final, Plane, plane3, )]
[., add, (, direction, ), ), ;, }, public, static, Vector3D, intersection, (, final, Plane, plane1, ,, final, Plane, plane2]
[), ), ;, }, public, static, Vector3D, intersection, (, final, Plane, plane1, ,, final, Plane, plane2, ,, final, Plane, plane3]
[;, final, double, b1, =, plane1, ., w, ., getY, (, ), ;, final, double, c1, =, plane1, ., w]
[., getX, (, ), ;, final, double, b1, =, plane1, ., w, ., getY, (, ), ;, final, double, c1]
[., w, ., getX, (, ), ;, final, double, b1, =, plane1, ., w, ., getY, (, ), ;, final]
[;, final, double, c1, =, plane1, ., w, ., getZ, (, ), ;, final, double, d1, =, plane1, ., originOffset]
[., getY, (, ), ;, final, double, c1, =, plane1, ., w, ., getZ, (, ), ;, final, double, d1]
[., w, ., getY, (, ), ;, final, double, c1, =, plane1, ., w, ., getZ, (, ), ;, final]
[;, final, double, d1, =, plane1, ., originOffset, ;, final, double, a2, =, plane2, ., w, ., getX, (, )]
[., getZ, (, ), ;, final, double, d1, =, plane1, ., originOffset, ;, final, double, a2, =, plane2, ., w]
[., w, ., getZ, (, ), ;, final, double, d1, =, plane1, ., originOffset, ;, final, double, a2, =, plane2]
[;, final, double, a2, =, plane2, ., w, ., getX, (, ), ;, final, double, b2, =, plane2, ., w]
[., originOffset, ;, final, double, a2, =, plane2, ., w, ., getX, (, ), ;, final, double, b2, =, plane2]
[;, final, double, b2, =, plane2, ., w, ., getY, (, ), ;, final, double, c2, =, plane2, ., w]
[., getX, (, ), ;, final, double, b2, =, plane2, ., w, ., getY, (, ), ;, final, double, c2]
[., w, ., getX, (, ), ;, final, double, b2, =, plane2, ., w, ., getY, (, ), ;, final]
[;, final, double, c2, =, plane2, ., w, ., getZ, (, ), ;, final, double, d2, =, plane2, ., originOffset]
[., getY, (, ), ;, final, double, c2, =, plane2, ., w, ., getZ, (, ), ;, final, double, d2]
[., w, ., getY, (, ), ;, final, double, c2, =, plane2, ., w, ., getZ, (, ), ;, final]
[;, final, double, d2, =, plane2, ., originOffset, ;, final, double, a3, =, plane3, ., w, ., getX, (, )]
[., getZ, (, ), ;, final, double, d2, =, plane2, ., originOffset, ;, final, double, a3, =, plane3, ., w]
[., w, ., getZ, (, ), ;, final, double, d2, =, plane2, ., originOffset, ;, final, double, a3, =, plane3]
[;, final, double, a3, =, plane3, ., w, ., getX, (, ), ;, final, double, b3, =, plane3, ., w]
[., originOffset, ;, final, double, a3, =, plane3, ., w, ., getX, (, ), ;, final, double, b3, =, plane3]
[;, final, double, b3, =, plane3, ., w, ., getY, (, ), ;, final, double, c3, =, plane3, ., w]
[., getX, (, ), ;, final, double, b3, =, plane3, ., w, ., getY, (, ), ;, final, double, c3]
[., w, ., getX, (, ), ;, final, double, b3, =, plane3, ., w, ., getY, (, ), ;, final]
[;, final, double, c3, =, plane3, ., w, ., getZ, (, ), ;, final, double, d3, =, plane3, ., originOffset]
[., getY, (, ), ;, final, double, c3, =, plane3, ., w, ., getZ, (, ), ;, final, double, d3]
[., w, ., getY, (, ), ;, final, double, c3, =, plane3, ., w, ., getZ, (, ), ;, final]
[;, final, double, d3, =, plane3, ., originOffset, ;, final, double, a23, =, b2, *, c3, -, b3, *, c2]
[., getZ, (, ), ;, final, double, d3, =, plane3, ., originOffset, ;, final, double, a23, =, b2, *, c3]
[., w, ., getZ, (, ), ;, final, double, d3, =, plane3, ., originOffset, ;, final, double, a23, =, b2]
[;, final, double, a23, =, b2, *, c3, -, b3, *, c2, ;, final, double, b23, =, c2, *, a3]
[., originOffset, ;, final, double, a23, =, b2, *, c3, -, b3, *, c2, ;, final, double, b23, =, c2]
[;, final, double, b23, =, c2, *, a3, -, c3, *, a2, ;, final, double, c23, =, a2, *, b3]
[-, b3, *, c2, ;, final, double, b23, =, c2, *, a3, -, c3, *, a2, ;, final, double, c23]
[*, c3, -, b3, *, c2, ;, final, double, b23, =, c2, *, a3, -, c3, *, a2, ;, final]
[-, b3, *, c2, ;, final, double, b23, =, c2, *, a3, -, c3, *, a2, ;, final, double, c23]
[;, final, double, b23, =, c2, *, a3, -, c3, *, a2, ;, final, double, c23, =, a2, *, b3]
[*, c2, ;, final, double, b23, =, c2, *, a3, -, c3, *, a2, ;, final, double, c23, =, a2]
[;, final, double, b23, =, c2, *, a3, -, c3, *, a2, ;, final, double, c23, =, a2, *, b3]
[;, final, double, c23, =, a2, *, b3, -, a3, *, b2, ;, final, double, determinant, =, a1, *, a23]
[-, c3, *, a2, ;, final, double, c23, =, a2, *, b3, -, a3, *, b2, ;, final, double, determinant]
[*, a3, -, c3, *, a2, ;, final, double, c23, =, a2, *, b3, -, a3, *, b2, ;, final]
[-, c3, *, a2, ;, final, double, c23, =, a2, *, b3, -, a3, *, b2, ;, final, double, determinant]
[;, final, double, c23, =, a2, *, b3, -, a3, *, b2, ;, final, double, determinant, =, a1, *, a23]
[*, a2, ;, final, double, c23, =, a2, *, b3, -, a3, *, b2, ;, final, double, determinant, =, a1]
[;, final, double, c23, =, a2, *, b3, -, a3, *, b2, ;, final, double, determinant, =, a1, *, a23]
[;, final, double, determinant, =, a1, *, a23, +, b1, *, b23, +, c1, *, c23, ;, if, (, FastMath]
[-, a3, *, b2, ;, final, double, determinant, =, a1, *, a23, +, b1, *, b23, +, c1, *, c23]
[*, b3, -, a3, *, b2, ;, final, double, determinant, =, a1, *, a23, +, b1, *, b23, +, c1]
[-, a3, *, b2, ;, final, double, determinant, =, a1, *, a23, +, b1, *, b23, +, c1, *, c23]
[;, final, double, determinant, =, a1, *, a23, +, b1, *, b23, +, c1, *, c23, ;, if, (, FastMath]
[*, b2, ;, final, double, determinant, =, a1, *, a23, +, b1, *, b23, +, c1, *, c23, ;, if]
[;, final, double, determinant, =, a1, *, a23, +, b1, *, b23, +, c1, *, c23, ;, if, (, FastMath]
[;, if, (, FastMath, ., abs, (, determinant, ), <, 1.0e-10, ), {, return, null, ;, }, final, double, r]
[+, c1, *, c23, ;, if, (, FastMath, ., abs, (, determinant, ), <, 1.0e-10, ), {, return, null, ;]
[+, b1, *, b23, +, c1, *, c23, ;, if, (, FastMath, ., abs, (, determinant, ), <, 1.0e-10, )]
[*, a23, +, b1, *, b23, +, c1, *, c23, ;, if, (, FastMath, ., abs, (, determinant, ), <]
[+, b1, *, b23, +, c1, *, c23, ;, if, (, FastMath, ., abs, (, determinant, ), <, 1.0e-10, )]
[+, c1, *, c23, ;, if, (, FastMath, ., abs, (, determinant, ), <, 1.0e-10, ), {, return, null, ;]
[*, b23, +, c1, *, c23, ;, if, (, FastMath, ., abs, (, determinant, ), <, 1.0e-10, ), {, return]
[+, c1, *, c23, ;, if, (, FastMath, ., abs, (, determinant, ), <, 1.0e-10, ), {, return, null, ;]
[;, if, (, FastMath, ., abs, (, determinant, ), <, 1.0e-10, ), {, return, null, ;, }, final, double, r]
[*, c23, ;, if, (, FastMath, ., abs, (, determinant, ), <, 1.0e-10, ), {, return, null, ;, }, final]
[;, if, (, FastMath, ., abs, (, determinant, ), <, 1.0e-10, ), {, return, null, ;, }, final, double, r]
[), {, return, null, ;, }, final, double, r, =, 1.0, /, determinant, ;, return, new, Vector3D, (, (, -]
[<, 1.0e-10, ), {, return, null, ;, }, final, double, r, =, 1.0, /, determinant, ;, return, new, Vector3D, (]
[., abs, (, determinant, ), <, 1.0e-10, ), {, return, null, ;, }, final, double, r, =, 1.0, /, determinant]
[), <, 1.0e-10, ), {, return, null, ;, }, final, double, r, =, 1.0, /, determinant, ;, return, new, Vector3D]
[), {, return, null, ;, }, final, double, r, =, 1.0, /, determinant, ;, return, new, Vector3D, (, (, -]
[;, }, final, double, r, =, 1.0, /, determinant, ;, return, new, Vector3D, (, (, -, a23, *, d1, -]
[;, return, new, Vector3D, (, (, -, a23, *, d1, -, (, c1, *, b3, -, c3, *, b1, )]
[/, determinant, ;, return, new, Vector3D, (, (, -, a23, *, d1, -, (, c1, *, b3, -, c3, *]
[;, return, new, Vector3D, (, (, -, a23, *, d1, -, (, c1, *, b3, -, c3, *, b1, )]
[;, }, public, SubPlane, wholeHyperplane, (, ), {, return, new, SubPlane, (, this, ,, new, PolygonsSet, (, ), ), ;]
[,, (, -, b23, *, d1, -, (, c3, *, a1, -, c1, *, a3, ), *, d2, -, (]
[*, r, ,, (, -, b23, *, d1, -, (, c3, *, a1, -, c1, *, a3, ), *, d2]
[), *, r, ,, (, -, b23, *, d1, -, (, c3, *, a1, -, c1, *, a3, ), *]
[-, (, c2, *, b1, -, c1, *, b2, ), *, d3, ), *, r, ,, (, -, b23, *]
[-, (, c1, *, b3, -, c3, *, b1, ), *, d2, -, (, c2, *, b1, -, c1, *]
[*, d1, -, (, c1, *, b3, -, c3, *, b1, ), *, d2, -, (, c2, *, b1, -]
[*, d1, -, (, c1, *, b3, -, c3, *, b1, ), *, d2, -, (, c2, *, b1, -]
[-, (, c1, *, b3, -, c3, *, b1, ), *, d2, -, (, c2, *, b1, -, c1, *]
[-, (, c2, *, b1, -, c1, *, b2, ), *, d3, ), *, r, ,, (, -, b23, *]
[*, d2, -, (, c2, *, b1, -, c1, *, b2, ), *, d3, ), *, r, ,, (, -]
[), *, d2, -, (, c2, *, b1, -, c1, *, b2, ), *, d3, ), *, r, ,, (]
[-, c3, *, b1, ), *, d2, -, (, c2, *, b1, -, c1, *, b2, ), *, d3, )]
[*, b3, -, c3, *, b1, ), *, d2, -, (, c2, *, b1, -, c1, *, b2, ), *]
[-, c3, *, b1, ), *, d2, -, (, c2, *, b1, -, c1, *, b2, ), *, d3, )]
[), *, d2, -, (, c2, *, b1, -, c1, *, b2, ), *, d3, ), *, r, ,, (]
[*, b1, ), *, d2, -, (, c2, *, b1, -, c1, *, b2, ), *, d3, ), *, r]
[), *, d2, -, (, c2, *, b1, -, c1, *, b2, ), *, d3, ), *, r, ,, (]
[-, (, c2, *, b1, -, c1, *, b2, ), *, d3, ), *, r, ,, (, -, b23, *]
[), *, r, ,, (, -, b23, *, d1, -, (, c3, *, a1, -, c1, *, a3, ), *]
[*, d3, ), *, r, ,, (, -, b23, *, d1, -, (, c3, *, a1, -, c1, *, a3]
[), *, d3, ), *, r, ,, (, -, b23, *, d1, -, (, c3, *, a1, -, c1, *]
[-, c1, *, b2, ), *, d3, ), *, r, ,, (, -, b23, *, d1, -, (, c3, *]
[*, b1, -, c1, *, b2, ), *, d3, ), *, r, ,, (, -, b23, *, d1, -, (]
[-, c1, *, b2, ), *, d3, ), *, r, ,, (, -, b23, *, d1, -, (, c3, *]
[), *, d3, ), *, r, ,, (, -, b23, *, d1, -, (, c3, *, a1, -, c1, *]
[*, b2, ), *, d3, ), *, r, ,, (, -, b23, *, d1, -, (, c3, *, a1, -]
[), *, d3, ), *, r, ,, (, -, b23, *, d1, -, (, c3, *, a1, -, c1, *]
[), *, r, ,, (, -, b23, *, d1, -, (, c3, *, a1, -, c1, *, a3, ), *]
[,, (, -, b23, *, d1, -, (, c3, *, a1, -, c1, *, a3, ), *, d2, -, (]
[,, (, -, c23, *, d1, -, (, b1, *, a3, -, b3, *, a1, ), *, d2, -, (]
[*, r, ,, (, -, c23, *, d1, -, (, b1, *, a3, -, b3, *, a1, ), *, d2]
[), *, r, ,, (, -, c23, *, d1, -, (, b1, *, a3, -, b3, *, a1, ), *]
[-, (, c1, *, a2, -, c2, *, a1, ), *, d3, ), *, r, ,, (, -, c23, *]
[-, (, c3, *, a1, -, c1, *, a3, ), *, d2, -, (, c1, *, a2, -, c2, *]
[*, d1, -, (, c3, *, a1, -, c1, *, a3, ), *, d2, -, (, c1, *, a2, -]
[*, d1, -, (, c3, *, a1, -, c1, *, a3, ), *, d2, -, (, c1, *, a2, -]
[-, (, c3, *, a1, -, c1, *, a3, ), *, d2, -, (, c1, *, a2, -, c2, *]
[-, (, c1, *, a2, -, c2, *, a1, ), *, d3, ), *, r, ,, (, -, c23, *]
[*, d2, -, (, c1, *, a2, -, c2, *, a1, ), *, d3, ), *, r, ,, (, -]
[), *, d2, -, (, c1, *, a2, -, c2, *, a1, ), *, d3, ), *, r, ,, (]
[-, c1, *, a3, ), *, d2, -, (, c1, *, a2, -, c2, *, a1, ), *, d3, )]
[*, a1, -, c1, *, a3, ), *, d2, -, (, c1, *, a2, -, c2, *, a1, ), *]
[-, c1, *, a3, ), *, d2, -, (, c1, *, a2, -, c2, *, a1, ), *, d3, )]
[), *, d2, -, (, c1, *, a2, -, c2, *, a1, ), *, d3, ), *, r, ,, (]
[*, a3, ), *, d2, -, (, c1, *, a2, -, c2, *, a1, ), *, d3, ), *, r]
[), *, d2, -, (, c1, *, a2, -, c2, *, a1, ), *, d3, ), *, r, ,, (]
[-, (, c1, *, a2, -, c2, *, a1, ), *, d3, ), *, r, ,, (, -, c23, *]
[), *, r, ,, (, -, c23, *, d1, -, (, b1, *, a3, -, b3, *, a1, ), *]
[*, d3, ), *, r, ,, (, -, c23, *, d1, -, (, b1, *, a3, -, b3, *, a1]
[), *, d3, ), *, r, ,, (, -, c23, *, d1, -, (, b1, *, a3, -, b3, *]
[-, c2, *, a1, ), *, d3, ), *, r, ,, (, -, c23, *, d1, -, (, b1, *]
[*, a2, -, c2, *, a1, ), *, d3, ), *, r, ,, (, -, c23, *, d1, -, (]
[-, c2, *, a1, ), *, d3, ), *, r, ,, (, -, c23, *, d1, -, (, b1, *]
[), *, d3, ), *, r, ,, (, -, c23, *, d1, -, (, b1, *, a3, -, b3, *]
[*, a1, ), *, d3, ), *, r, ,, (, -, c23, *, d1, -, (, b1, *, a3, -]
[), *, d3, ), *, r, ,, (, -, c23, *, d1, -, (, b1, *, a3, -, b3, *]
[), *, r, ,, (, -, c23, *, d1, -, (, b1, *, a3, -, b3, *, a1, ), *]
[,, (, -, c23, *, d1, -, (, b1, *, a3, -, b3, *, a1, ), *, d2, -, (]
[), ;, }, public, SubPlane, wholeHyperplane, (, ), {, return, new, SubPlane, (, this, ,, new, PolygonsSet, (, ), )]
[*, r, ), ;, }, public, SubPlane, wholeHyperplane, (, ), {, return, new, SubPlane, (, this, ,, new, PolygonsSet, (]
[), *, r, ), ;, }, public, SubPlane, wholeHyperplane, (, ), {, return, new, SubPlane, (, this, ,, new, PolygonsSet]
[-, (, b2, *, a1, -, b1, *, a2, ), *, d3, ), *, r, ), ;, }, public, SubPlane]
[-, (, b1, *, a3, -, b3, *, a1, ), *, d2, -, (, b2, *, a1, -, b1, *]
[*, d1, -, (, b1, *, a3, -, b3, *, a1, ), *, d2, -, (, b2, *, a1, -]
[*, d1, -, (, b1, *, a3, -, b3, *, a1, ), *, d2, -, (, b2, *, a1, -]
[-, (, b1, *, a3, -, b3, *, a1, ), *, d2, -, (, b2, *, a1, -, b1, *]
[-, (, b2, *, a1, -, b1, *, a2, ), *, d3, ), *, r, ), ;, }, public, SubPlane]
[*, d2, -, (, b2, *, a1, -, b1, *, a2, ), *, d3, ), *, r, ), ;, }]
[), *, d2, -, (, b2, *, a1, -, b1, *, a2, ), *, d3, ), *, r, ), ;]
[-, b3, *, a1, ), *, d2, -, (, b2, *, a1, -, b1, *, a2, ), *, d3, )]
[*, a3, -, b3, *, a1, ), *, d2, -, (, b2, *, a1, -, b1, *, a2, ), *]
[-, b3, *, a1, ), *, d2, -, (, b2, *, a1, -, b1, *, a2, ), *, d3, )]
[), *, d2, -, (, b2, *, a1, -, b1, *, a2, ), *, d3, ), *, r, ), ;]
[*, a1, ), *, d2, -, (, b2, *, a1, -, b1, *, a2, ), *, d3, ), *, r]
[), *, d2, -, (, b2, *, a1, -, b1, *, a2, ), *, d3, ), *, r, ), ;]
[-, (, b2, *, a1, -, b1, *, a2, ), *, d3, ), *, r, ), ;, }, public, SubPlane]
[), *, r, ), ;, }, public, SubPlane, wholeHyperplane, (, ), {, return, new, SubPlane, (, this, ,, new, PolygonsSet]
[*, d3, ), *, r, ), ;, }, public, SubPlane, wholeHyperplane, (, ), {, return, new, SubPlane, (, this, ,]
[), *, d3, ), *, r, ), ;, }, public, SubPlane, wholeHyperplane, (, ), {, return, new, SubPlane, (, this]
[-, b1, *, a2, ), *, d3, ), *, r, ), ;, }, public, SubPlane, wholeHyperplane, (, ), {, return]
[*, a1, -, b1, *, a2, ), *, d3, ), *, r, ), ;, }, public, SubPlane, wholeHyperplane, (, )]
[-, b1, *, a2, ), *, d3, ), *, r, ), ;, }, public, SubPlane, wholeHyperplane, (, ), {, return]
[), *, d3, ), *, r, ), ;, }, public, SubPlane, wholeHyperplane, (, ), {, return, new, SubPlane, (, this]
[*, a2, ), *, d3, ), *, r, ), ;, }, public, SubPlane, wholeHyperplane, (, ), {, return, new, SubPlane]
[), *, d3, ), *, r, ), ;, }, public, SubPlane, wholeHyperplane, (, ), {, return, new, SubPlane, (, this]
[), *, r, ), ;, }, public, SubPlane, wholeHyperplane, (, ), {, return, new, SubPlane, (, this, ,, new, PolygonsSet]
[), ;, }, public, SubPlane, wholeHyperplane, (, ), {, return, new, SubPlane, (, this, ,, new, PolygonsSet, (, ), )]
[;, }, public, PolyhedronsSet, wholeSpace, (, ), {, return, new, PolyhedronsSet, (, ), ;, }, public, boolean, contains, (, final]
[,, new, PolygonsSet, (, ), ), ;, }, public, PolyhedronsSet, wholeSpace, (, ), {, return, new, PolyhedronsSet, (, ), ;]
[), ;, }, public, PolyhedronsSet, wholeSpace, (, ), {, return, new, PolyhedronsSet, (, ), ;, }, public, boolean, contains, (]
[;, }, public, boolean, contains, (, final, Vector3D, p, ), {, return, FastMath, ., abs, (, getOffset, (, p, )]
[;, }, public, double, getOffset, (, final, Plane, plane, ), {, return, originOffset, +, (, sameOrientationAs, (, plane, ), ?]
[<, 1.0e-10, ;, }, public, double, getOffset, (, final, Plane, plane, ), {, return, originOffset, +, (, sameOrientationAs, (, plane]
[., abs, (, getOffset, (, p, ), ), <, 1.0e-10, ;, }, public, double, getOffset, (, final, Plane, plane, )]
[), <, 1.0e-10, ;, }, public, double, getOffset, (, final, Plane, plane, ), {, return, originOffset, +, (, sameOrientationAs, (]
[), ), <, 1.0e-10, ;, }, public, double, getOffset, (, final, Plane, plane, ), {, return, originOffset, +, (, sameOrientationAs]
[;, }, public, double, getOffset, (, final, Plane, plane, ), {, return, originOffset, +, (, sameOrientationAs, (, plane, ), ?]
[;, }, public, double, getOffset, (, final, Vector, <, Euclidean3D, >, point, ), {, return, point, ., dotProduct, (, w]
[+, (, sameOrientationAs, (, plane, ), ?, -, plane, ., originOffset, :, plane, ., originOffset, ), ;, }, public, double]
[;, }, public, double, getOffset, (, final, Vector, <, Euclidean3D, >, point, ), {, return, point, ., dotProduct, (, w]
[), ;, }, public, double, getOffset, (, final, Vector, <, Euclidean3D, >, point, ), {, return, point, ., dotProduct, (]
[?, -, plane, ., originOffset, :, plane, ., originOffset, ), ;, }, public, double, getOffset, (, final, Vector, <, Euclidean3D]
[), ?, -, plane, ., originOffset, :, plane, ., originOffset, ), ;, }, public, double, getOffset, (, final, Vector, <]
[:, plane, ., originOffset, ), ;, }, public, double, getOffset, (, final, Vector, <, Euclidean3D, >, point, ), {, return]
[:, plane, ., originOffset, ), ;, }, public, double, getOffset, (, final, Vector, <, Euclidean3D, >, point, ), {, return]
[., originOffset, :, plane, ., originOffset, ), ;, }, public, double, getOffset, (, final, Vector, <, Euclidean3D, >, point, )]
[), ;, }, public, double, getOffset, (, final, Vector, <, Euclidean3D, >, point, ), {, return, point, ., dotProduct, (]
[., originOffset, ), ;, }, public, double, getOffset, (, final, Vector, <, Euclidean3D, >, point, ), {, return, point, .]
[;, }, public, boolean, sameOrientationAs, (, final, Hyperplane, <, Euclidean3D, >, other, ), {, return, (, (, (, Plane, )]
[+, originOffset, ;, }, public, boolean, sameOrientationAs, (, final, Hyperplane, <, Euclidean3D, >, other, ), {, return, (, (, (]
[., dotProduct, (, w, ), +, originOffset, ;, }, public, boolean, sameOrientationAs, (, final, Hyperplane, <, Euclidean3D, >, other, )]
[), +, originOffset, ;, }, public, boolean, sameOrientationAs, (, final, Hyperplane, <, Euclidean3D, >, other, ), {, return, (, (]
[;, }, public, boolean, sameOrientationAs, (, final, Hyperplane, <, Euclidean3D, >, other, ), {, return, (, (, (, Plane, )]
[;, }, }]
[>, 0.0, ;, }, }]
[., dotProduct, (, w, ), >, 0.0, ;, }, }]
[), ., dotProduct, (, w, ), >, 0.0, ;, }, }]
[., w, ), ., dotProduct, (, w, ), >, 0.0, ;, }, }]
[), ., w, ), ., dotProduct, (, w, ), >, 0.0, ;, }, }]
[), ., w, ), ., dotProduct, (, w, ), >, 0.0, ;, }, }]
[), >, 0.0, ;, }, }]
[;, }, }]
