[;, public, static, final, double, DEFAULT_ITEM_MARGIN, =, 0.20, ;, public, static, final, double, BAR_OUTLINE_WIDTH_THRESHOLD, =, 3.0, ;, private, static, BarPainter]
[;, public, static, final, double, BAR_OUTLINE_WIDTH_THRESHOLD, =, 3.0, ;, private, static, BarPainter, defaultBarPainter, =, new, GradientBarPainter, (, ), ;, public]
[;, private, static, BarPainter, defaultBarPainter, =, new, GradientBarPainter, (, ), ;, public, static, BarPainter, getDefaultBarPainter, (, ), {, return, BarRenderer]
[;, public, static, BarPainter, getDefaultBarPainter, (, ), {, return, BarRenderer, ., defaultBarPainter, ;, }, public, static, void, setDefaultBarPainter, (, BarPainter]
[;, }, public, static, void, setDefaultBarPainter, (, BarPainter, painter, ), {, if, (, painter, ==, null, ), {, throw, new]
[., defaultBarPainter, ;, }, public, static, void, setDefaultBarPainter, (, BarPainter, painter, ), {, if, (, painter, ==, null, ), {]
[), {, throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }, BarRenderer, ., defaultBarPainter, =, painter, ;, }, private, static, boolean]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }, BarRenderer, ., defaultBarPainter, =, painter, ;, }, private]
[), {, throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }, BarRenderer, ., defaultBarPainter, =, painter, ;, }, private, static, boolean]
[;, }, BarRenderer, ., defaultBarPainter, =, painter, ;, }, private, static, boolean, defaultShadowsVisible, =, true, ;, public, static, boolean, getDefaultShadowsVisible]
[), ;, }, BarRenderer, ., defaultBarPainter, =, painter, ;, }, private, static, boolean, defaultShadowsVisible, =, true, ;, public, static, boolean]
[=, painter, ;, }, private, static, boolean, defaultShadowsVisible, =, true, ;, public, static, boolean, getDefaultShadowsVisible, (, ), {, return, BarRenderer]
[., defaultBarPainter, =, painter, ;, }, private, static, boolean, defaultShadowsVisible, =, true, ;, public, static, boolean, getDefaultShadowsVisible, (, ), {]
[;, }, private, static, boolean, defaultShadowsVisible, =, true, ;, public, static, boolean, getDefaultShadowsVisible, (, ), {, return, BarRenderer, ., defaultShadowsVisible]
[;, public, static, boolean, getDefaultShadowsVisible, (, ), {, return, BarRenderer, ., defaultShadowsVisible, ;, }, public, static, void, setDefaultShadowsVisible, (, boolean]
[;, }, public, static, void, setDefaultShadowsVisible, (, boolean, visible, ), {, BarRenderer, ., defaultShadowsVisible, =, visible, ;, }, private, double]
[., defaultShadowsVisible, ;, }, public, static, void, setDefaultShadowsVisible, (, boolean, visible, ), {, BarRenderer, ., defaultShadowsVisible, =, visible, ;, }]
[=, visible, ;, }, private, double, itemMargin, ;, private, boolean, drawBarOutline, ;, private, double, maximumBarWidth, ;, private, double, minimumBarLength, ;]
[., defaultShadowsVisible, =, visible, ;, }, private, double, itemMargin, ;, private, boolean, drawBarOutline, ;, private, double, maximumBarWidth, ;, private, double]
[;, }, private, double, itemMargin, ;, private, boolean, drawBarOutline, ;, private, double, maximumBarWidth, ;, private, double, minimumBarLength, ;, private, GradientPaintTransformer]
[=, 0.0, ;, this, ., includeBaseInRange, =, true, ;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false]
[., base, =, 0.0, ;, this, ., includeBaseInRange, =, true, ;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline]
[;, this, ., includeBaseInRange, =, true, ;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;, this]
[=, true, ;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;, this, ., maximumBarWidth, =, 1.0]
[., includeBaseInRange, =, true, ;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;, this, ., maximumBarWidth]
[;, this, ., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;, this, ., maximumBarWidth, =, 1.0, ;, this]
[=, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback, =, null]
[., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., drawBarOutline, =, false, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback]
[;, this, ., drawBarOutline, =, false, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback, =, null, ;, this]
[=, false, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback, =, null, ;, this, ., negativeItemLabelPositionFallback, =, null]
[., drawBarOutline, =, false, ;, this, ., maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback, =, null, ;, this, ., negativeItemLabelPositionFallback]
[;, this, ., maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback, =, null, ;, this, ., negativeItemLabelPositionFallback, =, null, ;, this]
[=, 1.0, ;, this, ., positiveItemLabelPositionFallback, =, null, ;, this, ., negativeItemLabelPositionFallback, =, null, ;, this, ., gradientPaintTransformer, =, new]
[., maximumBarWidth, =, 1.0, ;, this, ., positiveItemLabelPositionFallback, =, null, ;, this, ., negativeItemLabelPositionFallback, =, null, ;, this, ., gradientPaintTransformer]
[;, this, ., positiveItemLabelPositionFallback, =, null, ;, this, ., negativeItemLabelPositionFallback, =, null, ;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (]
[=, null, ;, this, ., negativeItemLabelPositionFallback, =, null, ;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;, this, .]
[., positiveItemLabelPositionFallback, =, null, ;, this, ., negativeItemLabelPositionFallback, =, null, ;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;]
[;, this, ., negativeItemLabelPositionFallback, =, null, ;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;, this, ., minimumBarLength, =]
[=, null, ;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;, this, ., minimumBarLength, =, 0.0, ;, setBaseLegendShape, (]
[., negativeItemLabelPositionFallback, =, null, ;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;, this, ., minimumBarLength, =, 0.0, ;]
[;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;, this, ., minimumBarLength, =, 0.0, ;, setBaseLegendShape, (, new, Rectangle2D]
[=, new, StandardGradientPaintTransformer, (, ), ;, this, ., minimumBarLength, =, 0.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -]
[., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;, this, ., minimumBarLength, =, 0.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double]
[;, this, ., minimumBarLength, =, 0.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,, -, 4.0, ,]
[=, 0.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,, -, 4.0, ,, 8.0, ,, 8.0, )]
[., minimumBarLength, =, 0.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,, -, 4.0, ,, 8.0, ,]
[;, setBaseLegendShape, (, new, Rectangle2D, ., Double, (, -, 4.0, ,, -, 4.0, ,, 8.0, ,, 8.0, ), ), ;]
[;, this, ., barPainter, =, getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this, ., shadowPaint]
[), ;, this, ., barPainter, =, getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this, .]
[,, -, 4.0, ,, 8.0, ,, 8.0, ), ), ;, this, ., barPainter, =, getDefaultBarPainter, (, ), ;, this, .]
[,, -, 4.0, ,, 8.0, ,, 8.0, ), ), ;, this, ., barPainter, =, getDefaultBarPainter, (, ), ;, this, .]
[,, 8.0, ,, 8.0, ), ), ;, this, ., barPainter, =, getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible]
[,, 8.0, ,, 8.0, ), ), ;, this, ., barPainter, =, getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible]
[,, 8.0, ), ), ;, this, ., barPainter, =, getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible, (, )]
[), ), ;, this, ., barPainter, =, getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this]
[=, getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this, ., shadowPaint, =, Color, ., gray]
[., barPainter, =, getDefaultBarPainter, (, ), ;, this, ., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this, ., shadowPaint, =, Color]
[;, this, ., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this, ., shadowPaint, =, Color, ., gray, ;, this, ., shadowXOffset]
[=, getDefaultShadowsVisible, (, ), ;, this, ., shadowPaint, =, Color, ., gray, ;, this, ., shadowXOffset, =, 4.0, ;, this]
[., shadowsVisible, =, getDefaultShadowsVisible, (, ), ;, this, ., shadowPaint, =, Color, ., gray, ;, this, ., shadowXOffset, =, 4.0]
[;, this, ., shadowPaint, =, Color, ., gray, ;, this, ., shadowXOffset, =, 4.0, ;, this, ., shadowYOffset, =, 4.0]
[=, Color, ., gray, ;, this, ., shadowXOffset, =, 4.0, ;, this, ., shadowYOffset, =, 4.0, ;, }, public, double]
[., shadowPaint, =, Color, ., gray, ;, this, ., shadowXOffset, =, 4.0, ;, this, ., shadowYOffset, =, 4.0, ;, }]
[;, this, ., shadowXOffset, =, 4.0, ;, this, ., shadowYOffset, =, 4.0, ;, }, public, double, getBase, (, ), {]
[., gray, ;, this, ., shadowXOffset, =, 4.0, ;, this, ., shadowYOffset, =, 4.0, ;, }, public, double, getBase, (]
[=, 4.0, ;, this, ., shadowYOffset, =, 4.0, ;, }, public, double, getBase, (, ), {, return, this, ., base]
[., shadowXOffset, =, 4.0, ;, this, ., shadowYOffset, =, 4.0, ;, }, public, double, getBase, (, ), {, return, this]
[;, this, ., shadowYOffset, =, 4.0, ;, }, public, double, getBase, (, ), {, return, this, ., base, ;, }]
[=, 4.0, ;, }, public, double, getBase, (, ), {, return, this, ., base, ;, }, public, void, setBase, (]
[., shadowYOffset, =, 4.0, ;, }, public, double, getBase, (, ), {, return, this, ., base, ;, }, public, void]
[;, }, public, double, getBase, (, ), {, return, this, ., base, ;, }, public, void, setBase, (, double, base]
[;, }, public, void, setBase, (, double, base, ), {, this, ., base, =, base, ;, fireChangeEvent, (, ), ;]
[., base, ;, }, public, void, setBase, (, double, base, ), {, this, ., base, =, base, ;, fireChangeEvent, (]
[=, base, ;, fireChangeEvent, (, ), ;, }, public, double, getItemMargin, (, ), {, return, this, ., itemMargin, ;, }]
[., base, =, base, ;, fireChangeEvent, (, ), ;, }, public, double, getItemMargin, (, ), {, return, this, ., itemMargin]
[;, fireChangeEvent, (, ), ;, }, public, double, getItemMargin, (, ), {, return, this, ., itemMargin, ;, }, public, void]
[;, }, public, double, getItemMargin, (, ), {, return, this, ., itemMargin, ;, }, public, void, setItemMargin, (, double, percent]
[;, }, public, void, setItemMargin, (, double, percent, ), {, this, ., itemMargin, =, percent, ;, fireChangeEvent, (, ), ;]
[., itemMargin, ;, }, public, void, setItemMargin, (, double, percent, ), {, this, ., itemMargin, =, percent, ;, fireChangeEvent, (]
[=, percent, ;, fireChangeEvent, (, ), ;, }, public, boolean, isDrawBarOutline, (, ), {, return, this, ., drawBarOutline, ;, }]
[., itemMargin, =, percent, ;, fireChangeEvent, (, ), ;, }, public, boolean, isDrawBarOutline, (, ), {, return, this, ., drawBarOutline]
[;, fireChangeEvent, (, ), ;, }, public, boolean, isDrawBarOutline, (, ), {, return, this, ., drawBarOutline, ;, }, public, void]
[;, }, public, boolean, isDrawBarOutline, (, ), {, return, this, ., drawBarOutline, ;, }, public, void, setDrawBarOutline, (, boolean, draw]
[;, }, public, void, setDrawBarOutline, (, boolean, draw, ), {, this, ., drawBarOutline, =, draw, ;, fireChangeEvent, (, ), ;]
[., drawBarOutline, ;, }, public, void, setDrawBarOutline, (, boolean, draw, ), {, this, ., drawBarOutline, =, draw, ;, fireChangeEvent, (]
[=, draw, ;, fireChangeEvent, (, ), ;, }, public, double, getMaximumBarWidth, (, ), {, return, this, ., maximumBarWidth, ;, }]
[., drawBarOutline, =, draw, ;, fireChangeEvent, (, ), ;, }, public, double, getMaximumBarWidth, (, ), {, return, this, ., maximumBarWidth]
[;, fireChangeEvent, (, ), ;, }, public, double, getMaximumBarWidth, (, ), {, return, this, ., maximumBarWidth, ;, }, public, void]
[;, }, public, double, getMaximumBarWidth, (, ), {, return, this, ., maximumBarWidth, ;, }, public, void, setMaximumBarWidth, (, double, percent]
[;, }, public, void, setMaximumBarWidth, (, double, percent, ), {, this, ., maximumBarWidth, =, percent, ;, fireChangeEvent, (, ), ;]
[., maximumBarWidth, ;, }, public, void, setMaximumBarWidth, (, double, percent, ), {, this, ., maximumBarWidth, =, percent, ;, fireChangeEvent, (]
[=, percent, ;, fireChangeEvent, (, ), ;, }, public, double, getMinimumBarLength, (, ), {, return, this, ., minimumBarLength, ;, }]
[., maximumBarWidth, =, percent, ;, fireChangeEvent, (, ), ;, }, public, double, getMinimumBarLength, (, ), {, return, this, ., minimumBarLength]
[;, fireChangeEvent, (, ), ;, }, public, double, getMinimumBarLength, (, ), {, return, this, ., minimumBarLength, ;, }, public, void]
[;, }, public, double, getMinimumBarLength, (, ), {, return, this, ., minimumBarLength, ;, }, public, void, setMinimumBarLength, (, double, min]
[;, }, public, void, setMinimumBarLength, (, double, min, ), {, if, (, min, <, 0.0, ), {, throw, new, IllegalArgumentException]
[., minimumBarLength, ;, }, public, void, setMinimumBarLength, (, double, min, ), {, if, (, min, <, 0.0, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Requires 'min' >= 0.0", ), ;, }, this, ., minimumBarLength, =, min, ;, fireChangeEvent, (, ), ;]
[<, 0.0, ), {, throw, new, IllegalArgumentException, (, "Requires 'min' >= 0.0", ), ;, }, this, ., minimumBarLength, =, min, ;, fireChangeEvent, (]
[), {, throw, new, IllegalArgumentException, (, "Requires 'min' >= 0.0", ), ;, }, this, ., minimumBarLength, =, min, ;, fireChangeEvent, (, ), ;]
[;, }, this, ., minimumBarLength, =, min, ;, fireChangeEvent, (, ), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return]
[), ;, }, this, ., minimumBarLength, =, min, ;, fireChangeEvent, (, ), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {]
[=, min, ;, fireChangeEvent, (, ), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return, this, ., gradientPaintTransformer, ;, }]
[., minimumBarLength, =, min, ;, fireChangeEvent, (, ), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return, this, ., gradientPaintTransformer]
[;, fireChangeEvent, (, ), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return, this, ., gradientPaintTransformer, ;, }, public, void]
[;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return, this, ., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, transformer]
[;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, transformer, ), {, this, ., gradientPaintTransformer, =, transformer, ;, fireChangeEvent, (, ), ;]
[., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, transformer, ), {, this, ., gradientPaintTransformer, =, transformer, ;, fireChangeEvent, (]
[=, transformer, ;, fireChangeEvent, (, ), ;, }, public, ItemLabelPosition, getPositiveItemLabelPositionFallback, (, ), {, return, this, ., positiveItemLabelPositionFallback, ;, }]
[., gradientPaintTransformer, =, transformer, ;, fireChangeEvent, (, ), ;, }, public, ItemLabelPosition, getPositiveItemLabelPositionFallback, (, ), {, return, this, ., positiveItemLabelPositionFallback]
[;, fireChangeEvent, (, ), ;, }, public, ItemLabelPosition, getPositiveItemLabelPositionFallback, (, ), {, return, this, ., positiveItemLabelPositionFallback, ;, }, public, void]
[;, }, public, ItemLabelPosition, getPositiveItemLabelPositionFallback, (, ), {, return, this, ., positiveItemLabelPositionFallback, ;, }, public, void, setPositiveItemLabelPositionFallback, (, ItemLabelPosition, position]
[;, }, public, void, setPositiveItemLabelPositionFallback, (, ItemLabelPosition, position, ), {, this, ., positiveItemLabelPositionFallback, =, position, ;, fireChangeEvent, (, ), ;]
[., positiveItemLabelPositionFallback, ;, }, public, void, setPositiveItemLabelPositionFallback, (, ItemLabelPosition, position, ), {, this, ., positiveItemLabelPositionFallback, =, position, ;, fireChangeEvent, (]
[=, position, ;, fireChangeEvent, (, ), ;, }, public, ItemLabelPosition, getNegativeItemLabelPositionFallback, (, ), {, return, this, ., negativeItemLabelPositionFallback, ;, }]
[., positiveItemLabelPositionFallback, =, position, ;, fireChangeEvent, (, ), ;, }, public, ItemLabelPosition, getNegativeItemLabelPositionFallback, (, ), {, return, this, ., negativeItemLabelPositionFallback]
[;, fireChangeEvent, (, ), ;, }, public, ItemLabelPosition, getNegativeItemLabelPositionFallback, (, ), {, return, this, ., negativeItemLabelPositionFallback, ;, }, public, void]
[;, }, public, ItemLabelPosition, getNegativeItemLabelPositionFallback, (, ), {, return, this, ., negativeItemLabelPositionFallback, ;, }, public, void, setNegativeItemLabelPositionFallback, (, ItemLabelPosition, position]
[;, }, public, void, setNegativeItemLabelPositionFallback, (, ItemLabelPosition, position, ), {, this, ., negativeItemLabelPositionFallback, =, position, ;, fireChangeEvent, (, ), ;]
[., negativeItemLabelPositionFallback, ;, }, public, void, setNegativeItemLabelPositionFallback, (, ItemLabelPosition, position, ), {, this, ., negativeItemLabelPositionFallback, =, position, ;, fireChangeEvent, (]
[=, position, ;, fireChangeEvent, (, ), ;, }, public, boolean, getIncludeBaseInRange, (, ), {, return, this, ., includeBaseInRange, ;, }]
[., negativeItemLabelPositionFallback, =, position, ;, fireChangeEvent, (, ), ;, }, public, boolean, getIncludeBaseInRange, (, ), {, return, this, ., includeBaseInRange]
[;, fireChangeEvent, (, ), ;, }, public, boolean, getIncludeBaseInRange, (, ), {, return, this, ., includeBaseInRange, ;, }, public, void]
[;, }, public, boolean, getIncludeBaseInRange, (, ), {, return, this, ., includeBaseInRange, ;, }, public, void, setIncludeBaseInRange, (, boolean, include]
[;, }, public, void, setIncludeBaseInRange, (, boolean, include, ), {, if, (, this, ., includeBaseInRange, !=, include, ), {, this]
[., includeBaseInRange, ;, }, public, void, setIncludeBaseInRange, (, boolean, include, ), {, if, (, this, ., includeBaseInRange, !=, include, )]
[), {, this, ., includeBaseInRange, =, include, ;, fireChangeEvent, (, ), ;, }, }, public, BarPainter, getBarPainter, (, ), {]
[!=, include, ), {, this, ., includeBaseInRange, =, include, ;, fireChangeEvent, (, ), ;, }, }, public, BarPainter, getBarPainter, (]
[., includeBaseInRange, !=, include, ), {, this, ., includeBaseInRange, =, include, ;, fireChangeEvent, (, ), ;, }, }, public, BarPainter]
[), {, this, ., includeBaseInRange, =, include, ;, fireChangeEvent, (, ), ;, }, }, public, BarPainter, getBarPainter, (, ), {]
[=, include, ;, fireChangeEvent, (, ), ;, }, }, public, BarPainter, getBarPainter, (, ), {, return, this, ., barPainter, ;]
[., includeBaseInRange, =, include, ;, fireChangeEvent, (, ), ;, }, }, public, BarPainter, getBarPainter, (, ), {, return, this, .]
[;, fireChangeEvent, (, ), ;, }, }, public, BarPainter, getBarPainter, (, ), {, return, this, ., barPainter, ;, }, public]
[;, }, }, public, BarPainter, getBarPainter, (, ), {, return, this, ., barPainter, ;, }, public, void, setBarPainter, (, BarPainter]
[;, }, public, void, setBarPainter, (, BarPainter, painter, ), {, if, (, painter, ==, null, ), {, throw, new, IllegalArgumentException]
[., barPainter, ;, }, public, void, setBarPainter, (, BarPainter, painter, ), {, if, (, painter, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }, this, ., barPainter, =, painter, ;, fireChangeEvent, (, ), ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }, this, ., barPainter, =, painter, ;, fireChangeEvent, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'painter' argument.", ), ;, }, this, ., barPainter, =, painter, ;, fireChangeEvent, (, ), ;]
[;, }, this, ., barPainter, =, painter, ;, fireChangeEvent, (, ), ;, }, public, boolean, getShadowsVisible, (, ), {, return]
[), ;, }, this, ., barPainter, =, painter, ;, fireChangeEvent, (, ), ;, }, public, boolean, getShadowsVisible, (, ), {]
[=, painter, ;, fireChangeEvent, (, ), ;, }, public, boolean, getShadowsVisible, (, ), {, return, this, ., shadowsVisible, ;, }]
[., barPainter, =, painter, ;, fireChangeEvent, (, ), ;, }, public, boolean, getShadowsVisible, (, ), {, return, this, ., shadowsVisible]
[;, fireChangeEvent, (, ), ;, }, public, boolean, getShadowsVisible, (, ), {, return, this, ., shadowsVisible, ;, }, public, void]
[;, }, public, boolean, getShadowsVisible, (, ), {, return, this, ., shadowsVisible, ;, }, public, void, setShadowVisible, (, boolean, visible]
[;, }, public, void, setShadowVisible, (, boolean, visible, ), {, this, ., shadowsVisible, =, visible, ;, fireChangeEvent, (, ), ;]
[., shadowsVisible, ;, }, public, void, setShadowVisible, (, boolean, visible, ), {, this, ., shadowsVisible, =, visible, ;, fireChangeEvent, (]
[=, visible, ;, fireChangeEvent, (, ), ;, }, public, Paint, getShadowPaint, (, ), {, return, this, ., shadowPaint, ;, }]
[., shadowsVisible, =, visible, ;, fireChangeEvent, (, ), ;, }, public, Paint, getShadowPaint, (, ), {, return, this, ., shadowPaint]
[;, fireChangeEvent, (, ), ;, }, public, Paint, getShadowPaint, (, ), {, return, this, ., shadowPaint, ;, }, public, void]
[;, }, public, Paint, getShadowPaint, (, ), {, return, this, ., shadowPaint, ;, }, public, void, setShadowPaint, (, Paint, paint]
[;, }, public, void, setShadowPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[., shadowPaint, ;, }, public, void, setShadowPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., shadowPaint, =, paint, ;, fireChangeEvent, (, ), ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., shadowPaint, =, paint, ;, fireChangeEvent, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., shadowPaint, =, paint, ;, fireChangeEvent, (, ), ;]
[;, }, this, ., shadowPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, double, getShadowXOffset, (, ), {, return]
[), ;, }, this, ., shadowPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, double, getShadowXOffset, (, ), {]
[=, paint, ;, fireChangeEvent, (, ), ;, }, public, double, getShadowXOffset, (, ), {, return, this, ., shadowXOffset, ;, }]
[., shadowPaint, =, paint, ;, fireChangeEvent, (, ), ;, }, public, double, getShadowXOffset, (, ), {, return, this, ., shadowXOffset]
[;, fireChangeEvent, (, ), ;, }, public, double, getShadowXOffset, (, ), {, return, this, ., shadowXOffset, ;, }, public, void]
[;, }, public, double, getShadowXOffset, (, ), {, return, this, ., shadowXOffset, ;, }, public, void, setShadowXOffset, (, double, offset]
[;, }, public, void, setShadowXOffset, (, double, offset, ), {, this, ., shadowXOffset, =, offset, ;, fireChangeEvent, (, ), ;]
[., shadowXOffset, ;, }, public, void, setShadowXOffset, (, double, offset, ), {, this, ., shadowXOffset, =, offset, ;, fireChangeEvent, (]
[=, offset, ;, fireChangeEvent, (, ), ;, }, public, double, getShadowYOffset, (, ), {, return, this, ., shadowYOffset, ;, }]
[., shadowXOffset, =, offset, ;, fireChangeEvent, (, ), ;, }, public, double, getShadowYOffset, (, ), {, return, this, ., shadowYOffset]
[;, fireChangeEvent, (, ), ;, }, public, double, getShadowYOffset, (, ), {, return, this, ., shadowYOffset, ;, }, public, void]
[;, }, public, double, getShadowYOffset, (, ), {, return, this, ., shadowYOffset, ;, }, public, void, setShadowYOffset, (, double, offset]
[;, }, public, void, setShadowYOffset, (, double, offset, ), {, this, ., shadowYOffset, =, offset, ;, fireChangeEvent, (, ), ;]
[., shadowYOffset, ;, }, public, void, setShadowYOffset, (, double, offset, ), {, this, ., shadowYOffset, =, offset, ;, fireChangeEvent, (]
[=, offset, ;, fireChangeEvent, (, ), ;, }, public, CategoryItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot]
[., shadowYOffset, =, offset, ;, fireChangeEvent, (, ), ;, }, public, CategoryItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,]
[;, fireChangeEvent, (, ), ;, }, public, CategoryItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryDataset]
[;, }, public, CategoryItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, PlotRenderingInfo, info]
[;, calculateBarWidth, (, plot, ,, dataArea, ,, dataset, ,, state, ), ;, return, state, ;, }, protected, void, calculateBarWidth, (]
[., initialise, (, g2, ,, dataArea, ,, plot, ,, dataset, ,, info, ), ;, calculateBarWidth, (, plot, ,, dataArea, ,]
[,, dataArea, ,, plot, ,, dataset, ,, info, ), ;, calculateBarWidth, (, plot, ,, dataArea, ,, dataset, ,, state, )]
[,, plot, ,, dataset, ,, info, ), ;, calculateBarWidth, (, plot, ,, dataArea, ,, dataset, ,, state, ), ;, return]
[,, dataset, ,, info, ), ;, calculateBarWidth, (, plot, ,, dataArea, ,, dataset, ,, state, ), ;, return, state, ;]
[,, info, ), ;, calculateBarWidth, (, plot, ,, dataArea, ,, dataset, ,, state, ), ;, return, state, ;, }, protected]
[), ;, calculateBarWidth, (, plot, ,, dataArea, ,, dataset, ,, state, ), ;, return, state, ;, }, protected, void, calculateBarWidth]
[;, return, state, ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState, state]
[,, dataArea, ,, dataset, ,, state, ), ;, return, state, ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D]
[,, dataset, ,, state, ), ;, return, state, ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,]
[,, state, ), ;, return, state, ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset]
[), ;, return, state, ;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState]
[;, }, protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis]
[;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =]
[,, dataset, ), ;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;]
[), ;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows]
[), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, state, ., getVisibleSeriesCount, (, ), >=]
[!=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, state, ., getVisibleSeriesCount, (]
[), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, state, ., getVisibleSeriesCount, (, ), >=]
[;, int, rows, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, dataset, .]
[., getColumnCount, (, ), ;, int, rows, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (]
[;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation]
[?, state, ., getVisibleSeriesCount, (, ), :, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation]
[>=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;]
[., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, dataset, ., getRowCount, (, ), ;, double]
[?, state, ., getVisibleSeriesCount, (, ), :, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation]
[:, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, )]
[., getVisibleSeriesCount, (, ), :, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot]
[;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation]
[., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if]
[;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else]
[., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, .]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;]
[., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, .]
[), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;]
[==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *]
[), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;]
[., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (]
[=, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =]
[;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0]
[., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;]
[;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =]
[*, getMaximumBarWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1]
[;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =]
[;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, )]
[;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows]
[), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =]
[>, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {]
[), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =]
[=, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, )]
[;, }, if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space]
[., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }]
[), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin]
[>, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis]
[), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin]
[=, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -]
[;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (]
[;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[*, (, 1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, )]
[;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min]
[-, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math]
[-, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth]
[-, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >]
[-, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (]
[-, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >]
[., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows]
[-, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth]
[., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, )]
[-, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math]
[), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min]
[), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *, columns, ), ,, maxWidth, )]
[>, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *, columns, ), ,]
[), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *, columns, )]
[*, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *]
[), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *, columns, )]
[), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *, columns, ), ,, maxWidth, )]
[;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }, }]
[., setBarWidth, (, Math, ., min, (, used, /, (, rows, *, columns, ), ,, maxWidth, ), ), ;, }]
[), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }]
[., min, (, used, /, (, rows, *, columns, ), ,, maxWidth, ), ), ;, }, else, {, state, .]
[,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, )]
[/, (, rows, *, columns, ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, .]
[,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, )]
[), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth]
[*, columns, ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used]
[), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth]
[), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;]
[;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation, orientation, ,, Rectangle2D, dataArea, ,, CategoryAxis, domainAxis, ,]
[., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }, }, }, protected, double, calculateBarW0, (]
[), ;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation, orientation, ,, Rectangle2D, dataArea, ,, CategoryAxis, domainAxis]
[., min, (, used, ,, maxWidth, ), ), ;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation]
[,, maxWidth, ), ), ;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation, orientation, ,, Rectangle2D, dataArea]
[), ), ;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation, orientation, ,, Rectangle2D, dataArea, ,, CategoryAxis]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, )]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, )]
[., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth]
[=, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double]
[;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (]
[., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =]
[=, dataArea, ., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, )]
[;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge]
[., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea]
[;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, getRowCount, (]
[., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =, state, ., getVisibleSeriesCount]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), >=, 0]
[,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state]
[), ;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, getRowCount]
[., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount]
[;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, space, *]
[?, state, ., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (]
[>=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;]
[., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =]
[?, state, ., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (]
[:, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double]
[., getVisibleSeriesCount, (, ), :, getRowCount, (, ), ;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >]
[;, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, space, *]
[;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *]
[), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), )]
[>, 1, ), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1]
[), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), )]
[;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row]
[/, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,]
[*, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (]
[/, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,]
[;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row]
[), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +]
[*, (, seriesCount, -, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount]
[), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +]
[), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0]
[-, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0]
[), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0]
[;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (]
[,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +]
[,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW]
[,, seriesCount, ), ;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0]
[), ;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -]
[=, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (, state, .]
[;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, .]
[-, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (]
[+, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {]
[+, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (]
[+, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {]
[*, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /]
[+, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {]
[), +, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else]
[+, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;]
[), +, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else]
[-, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (]
[), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle]
[/, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis]
[), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle]
[;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, .]
[), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot]
[/, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea]
[., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount]
[), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[;, }, return, barW0, ;, }, protected, double, [, ], calculateBarL0L1, (, double, value, ,, double, min, ,, double, max]
[-, state, ., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;, }, protected, double, [, ], calculateBarL0L1, (]
[., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, .]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return]
[,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;]
[), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;, }, protected, double, [, ], calculateBarL0L1]
[., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;, }, protected]
[;, }, return, barW0, ;, }, protected, double, [, ], calculateBarL0L1, (, double, value, ,, double, min, ,, double, max]
[/, 2.0, ;, }, return, barW0, ;, }, protected, double, [, ], calculateBarL0L1, (, double, value, ,, double, min, ,]
[., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;, }, protected, double, [, ], calculateBarL0L1, (, double, value]
[;, }, return, barW0, ;, }, protected, double, [, ], calculateBarL0L1, (, double, value, ,, double, min, ,, double, max]
[;, }, protected, double, [, ], calculateBarL0L1, (, double, value, ,, double, min, ,, double, max, ), {, double, barLow]
[;, double, barHigh, =, Math, ., max, (, this, ., base, ,, value, ), ;, if, (, barHigh, <, min]
[., min, (, this, ., base, ,, value, ), ;, double, barHigh, =, Math, ., max, (, this, ., base]
[,, value, ), ;, double, barHigh, =, Math, ., max, (, this, ., base, ,, value, ), ;, if, (]
[., base, ,, value, ), ;, double, barHigh, =, Math, ., max, (, this, ., base, ,, value, ), ;]
[), ;, double, barHigh, =, Math, ., max, (, this, ., base, ,, value, ), ;, if, (, barHigh, <]
[;, if, (, barHigh, <, min, ), {, return, null, ;, }, if, (, barLow, >, max, ), {, return]
[., max, (, this, ., base, ,, value, ), ;, if, (, barHigh, <, min, ), {, return, null, ;]
[,, value, ), ;, if, (, barHigh, <, min, ), {, return, null, ;, }, if, (, barLow, >, max]
[., base, ,, value, ), ;, if, (, barHigh, <, min, ), {, return, null, ;, }, if, (, barLow]
[), ;, if, (, barHigh, <, min, ), {, return, null, ;, }, if, (, barLow, >, max, ), {]
[), {, return, null, ;, }, if, (, barLow, >, max, ), {, return, null, ;, }, barLow, =, Math]
[<, min, ), {, return, null, ;, }, if, (, barLow, >, max, ), {, return, null, ;, }, barLow]
[), {, return, null, ;, }, if, (, barLow, >, max, ), {, return, null, ;, }, barLow, =, Math]
[;, }, if, (, barLow, >, max, ), {, return, null, ;, }, barLow, =, Math, ., max, (, barLow]
[), {, return, null, ;, }, barLow, =, Math, ., max, (, barLow, ,, min, ), ;, barHigh, =, Math]
[>, max, ), {, return, null, ;, }, barLow, =, Math, ., max, (, barLow, ,, min, ), ;, barHigh]
[), {, return, null, ;, }, barLow, =, Math, ., max, (, barLow, ,, min, ), ;, barHigh, =, Math]
[;, }, barLow, =, Math, ., max, (, barLow, ,, min, ), ;, barHigh, =, Math, ., min, (, barHigh]
[=, Math, ., max, (, barLow, ,, min, ), ;, barHigh, =, Math, ., min, (, barHigh, ,, max, )]
[;, barHigh, =, Math, ., min, (, barHigh, ,, max, ), ;, return, new, double, [, ], {, barLow, ,]
[., max, (, barLow, ,, min, ), ;, barHigh, =, Math, ., min, (, barHigh, ,, max, ), ;, return]
[,, min, ), ;, barHigh, =, Math, ., min, (, barHigh, ,, max, ), ;, return, new, double, [, ]]
[), ;, barHigh, =, Math, ., min, (, barHigh, ,, max, ), ;, return, new, double, [, ], {, barLow]
[=, Math, ., min, (, barHigh, ,, max, ), ;, return, new, double, [, ], {, barLow, ,, barHigh, }]
[;, return, new, double, [, ], {, barLow, ,, barHigh, }, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ,]
[., min, (, barHigh, ,, max, ), ;, return, new, double, [, ], {, barLow, ,, barHigh, }, ;, }]
[,, max, ), ;, return, new, double, [, ], {, barLow, ,, barHigh, }, ;, }, public, Range, findRangeBounds, (]
[), ;, return, new, double, [, ], {, barLow, ,, barHigh, }, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset]
[;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ,, boolean, includeInterval, ), {, if, (, dataset, ==, null, ), {]
[;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ,, boolean, includeInterval, ), {, if, (, dataset, ==, null, ), {]
[,, barHigh, }, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ,, boolean, includeInterval, ), {, if, (, dataset, ==]
[}, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ,, boolean, includeInterval, ), {, if, (, dataset, ==, null, )]
[), {, return, null, ;, }, Range, result, =, super, ., findRangeBounds, (, dataset, ,, includeInterval, ), ;, if, (]
[==, null, ), {, return, null, ;, }, Range, result, =, super, ., findRangeBounds, (, dataset, ,, includeInterval, ), ;]
[), {, return, null, ;, }, Range, result, =, super, ., findRangeBounds, (, dataset, ,, includeInterval, ), ;, if, (]
[;, }, Range, result, =, super, ., findRangeBounds, (, dataset, ,, includeInterval, ), ;, if, (, result, !=, null, )]
[;, if, (, result, !=, null, ), {, if, (, this, ., includeBaseInRange, ), {, result, =, Range, ., expandToInclude]
[., findRangeBounds, (, dataset, ,, includeInterval, ), ;, if, (, result, !=, null, ), {, if, (, this, ., includeBaseInRange]
[,, includeInterval, ), ;, if, (, result, !=, null, ), {, if, (, this, ., includeBaseInRange, ), {, result, =]
[), ;, if, (, result, !=, null, ), {, if, (, this, ., includeBaseInRange, ), {, result, =, Range, .]
[), {, if, (, this, ., includeBaseInRange, ), {, result, =, Range, ., expandToInclude, (, result, ,, this, ., base]
[!=, null, ), {, if, (, this, ., includeBaseInRange, ), {, result, =, Range, ., expandToInclude, (, result, ,, this]
[), {, if, (, this, ., includeBaseInRange, ), {, result, =, Range, ., expandToInclude, (, result, ,, this, ., base]
[), {, result, =, Range, ., expandToInclude, (, result, ,, this, ., base, ), ;, }, }, return, result, ;]
[., includeBaseInRange, ), {, result, =, Range, ., expandToInclude, (, result, ,, this, ., base, ), ;, }, }, return]
[=, Range, ., expandToInclude, (, result, ,, this, ., base, ), ;, }, }, return, result, ;, }, public, LegendItem]
[;, }, }, return, result, ;, }, public, LegendItem, getLegendItem, (, int, datasetIndex, ,, int, series, ), {, CategoryPlot, cp]
[., expandToInclude, (, result, ,, this, ., base, ), ;, }, }, return, result, ;, }, public, LegendItem, getLegendItem, (]
[,, this, ., base, ), ;, }, }, return, result, ;, }, public, LegendItem, getLegendItem, (, int, datasetIndex, ,, int]
[), ;, }, }, return, result, ;, }, public, LegendItem, getLegendItem, (, int, datasetIndex, ,, int, series, ), {, CategoryPlot]
[., base, ), ;, }, }, return, result, ;, }, public, LegendItem, getLegendItem, (, int, datasetIndex, ,, int, series, )]
[;, }, public, LegendItem, getLegendItem, (, int, datasetIndex, ,, int, series, ), {, CategoryPlot, cp, =, getPlot, (, ), ;]
[;, if, (, cp, ==, null, ), {, return, null, ;, }, if, (, !, isSeriesVisible, (, series, ), ||]
[), {, return, null, ;, }, if, (, !, isSeriesVisible, (, series, ), ||, !, isSeriesVisibleInLegend, (, series, ), )]
[==, null, ), {, return, null, ;, }, if, (, !, isSeriesVisible, (, series, ), ||, !, isSeriesVisibleInLegend, (, series]
[), {, return, null, ;, }, if, (, !, isSeriesVisible, (, series, ), ||, !, isSeriesVisibleInLegend, (, series, ), )]
[;, }, if, (, !, isSeriesVisible, (, series, ), ||, !, isSeriesVisibleInLegend, (, series, ), ), {, return, null, ;]
[), {, return, null, ;, }, CategoryDataset, dataset, =, cp, ., getDataset, (, datasetIndex, ), ;, String, label, =, getLegendItemLabelGenerator]
[||, !, isSeriesVisibleInLegend, (, series, ), ), {, return, null, ;, }, CategoryDataset, dataset, =, cp, ., getDataset, (, datasetIndex]
[||, !, isSeriesVisibleInLegend, (, series, ), ), {, return, null, ;, }, CategoryDataset, dataset, =, cp, ., getDataset, (, datasetIndex]
[), ||, !, isSeriesVisibleInLegend, (, series, ), ), {, return, null, ;, }, CategoryDataset, dataset, =, cp, ., getDataset, (]
[), {, return, null, ;, }, CategoryDataset, dataset, =, cp, ., getDataset, (, datasetIndex, ), ;, String, label, =, getLegendItemLabelGenerator]
[), {, return, null, ;, }, CategoryDataset, dataset, =, cp, ., getDataset, (, datasetIndex, ), ;, String, label, =, getLegendItemLabelGenerator]
[), ), {, return, null, ;, }, CategoryDataset, dataset, =, cp, ., getDataset, (, datasetIndex, ), ;, String, label, =]
[;, }, CategoryDataset, dataset, =, cp, ., getDataset, (, datasetIndex, ), ;, String, label, =, getLegendItemLabelGenerator, (, ), ., generateLabel]
[;, String, label, =, getLegendItemLabelGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, String, description, =, label, ;]
[., getDataset, (, datasetIndex, ), ;, String, label, =, getLegendItemLabelGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;]
[), ;, String, label, =, getLegendItemLabelGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, String, description, =, label]
[;, String, description, =, label, ;, String, toolTipText, =, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, ), {]
[., generateLabel, (, dataset, ,, series, ), ;, String, description, =, label, ;, String, toolTipText, =, null, ;, if, (]
[,, series, ), ;, String, description, =, label, ;, String, toolTipText, =, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=]
[), ;, String, description, =, label, ;, String, toolTipText, =, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, )]
[;, String, toolTipText, =, null, ;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, ), {, toolTipText, =, getLegendItemToolTipGenerator, (, )]
[;, if, (, getLegendItemToolTipGenerator, (, ), !=, null, ), {, toolTipText, =, getLegendItemToolTipGenerator, (, ), ., generateLabel, (, dataset, ,]
[), {, toolTipText, =, getLegendItemToolTipGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, String, urlText, =, null]
[!=, null, ), {, toolTipText, =, getLegendItemToolTipGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, String, urlText]
[), {, toolTipText, =, getLegendItemToolTipGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, String, urlText, =, null]
[=, getLegendItemToolTipGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, String, urlText, =, null, ;, if, (]
[;, }, String, urlText, =, null, ;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {, urlText, =, getLegendItemURLGenerator, (]
[., generateLabel, (, dataset, ,, series, ), ;, }, String, urlText, =, null, ;, if, (, getLegendItemURLGenerator, (, ), !=]
[,, series, ), ;, }, String, urlText, =, null, ;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {, urlText]
[), ;, }, String, urlText, =, null, ;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {, urlText, =, getLegendItemURLGenerator]
[;, if, (, getLegendItemURLGenerator, (, ), !=, null, ), {, urlText, =, getLegendItemURLGenerator, (, ), ., generateLabel, (, dataset, ,]
[), {, urlText, =, getLegendItemURLGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, Shape, shape, =, lookupLegendShape]
[!=, null, ), {, urlText, =, getLegendItemURLGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, Shape, shape]
[), {, urlText, =, getLegendItemURLGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, Shape, shape, =, lookupLegendShape]
[=, getLegendItemURLGenerator, (, ), ., generateLabel, (, dataset, ,, series, ), ;, }, Shape, shape, =, lookupLegendShape, (, series, )]
[;, }, Shape, shape, =, lookupLegendShape, (, series, ), ;, Paint, paint, =, lookupSeriesPaint, (, series, ), ;, Paint, outlinePaint]
[., generateLabel, (, dataset, ,, series, ), ;, }, Shape, shape, =, lookupLegendShape, (, series, ), ;, Paint, paint, =]
[,, series, ), ;, }, Shape, shape, =, lookupLegendShape, (, series, ), ;, Paint, paint, =, lookupSeriesPaint, (, series, )]
[), ;, }, Shape, shape, =, lookupLegendShape, (, series, ), ;, Paint, paint, =, lookupSeriesPaint, (, series, ), ;, Paint]
[;, Paint, paint, =, lookupSeriesPaint, (, series, ), ;, Paint, outlinePaint, =, lookupSeriesOutlinePaint, (, series, ), ;, Stroke, outlineStroke, =]
[), ;, Paint, paint, =, lookupSeriesPaint, (, series, ), ;, Paint, outlinePaint, =, lookupSeriesOutlinePaint, (, series, ), ;, Stroke, outlineStroke]
[;, Paint, outlinePaint, =, lookupSeriesOutlinePaint, (, series, ), ;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =]
[), ;, Paint, outlinePaint, =, lookupSeriesOutlinePaint, (, series, ), ;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result]
[;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,, toolTipText]
[), ;, Stroke, outlineStroke, =, lookupSeriesOutlineStroke, (, series, ), ;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,]
[;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,, true, ,, shape, ,, true]
[), ;, LegendItem, result, =, new, LegendItem, (, label, ,, description, ,, toolTipText, ,, urlText, ,, true, ,, shape, ,]
[;, result, ., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if]
[,, description, ,, toolTipText, ,, urlText, ,, true, ,, shape, ,, true, ,, paint, ,, isDrawBarOutline, (, ), ,, outlinePaint]
[,, toolTipText, ,, urlText, ,, true, ,, shape, ,, true, ,, paint, ,, isDrawBarOutline, (, ), ,, outlinePaint, ,, outlineStroke]
[,, urlText, ,, true, ,, shape, ,, true, ,, paint, ,, isDrawBarOutline, (, ), ,, outlinePaint, ,, outlineStroke, ,, false]
[,, true, ,, shape, ,, true, ,, paint, ,, isDrawBarOutline, (, ), ,, outlinePaint, ,, outlineStroke, ,, false, ,, new]
[,, shape, ,, true, ,, paint, ,, isDrawBarOutline, (, ), ,, outlinePaint, ,, outlineStroke, ,, false, ,, new, Line2D, .]
[,, true, ,, paint, ,, isDrawBarOutline, (, ), ,, outlinePaint, ,, outlineStroke, ,, false, ,, new, Line2D, ., Float, (]
[,, paint, ,, isDrawBarOutline, (, ), ,, outlinePaint, ,, outlineStroke, ,, false, ,, new, Line2D, ., Float, (, ), ,]
[,, isDrawBarOutline, (, ), ,, outlinePaint, ,, outlineStroke, ,, false, ,, new, Line2D, ., Float, (, ), ,, new, BasicStroke]
[,, outlinePaint, ,, outlineStroke, ,, false, ,, new, Line2D, ., Float, (, ), ,, new, BasicStroke, (, 1.0f, ), ,]
[,, outlineStroke, ,, false, ,, new, Line2D, ., Float, (, ), ,, new, BasicStroke, (, 1.0f, ), ,, Color, .]
[,, false, ,, new, Line2D, ., Float, (, ), ,, new, BasicStroke, (, 1.0f, ), ,, Color, ., black, )]
[,, new, Line2D, ., Float, (, ), ,, new, BasicStroke, (, 1.0f, ), ,, Color, ., black, ), ;, result]
[,, new, BasicStroke, (, 1.0f, ), ,, Color, ., black, ), ;, result, ., setLabelFont, (, lookupLegendTextFont, (, series, )]
[,, Color, ., black, ), ;, result, ., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint]
[), ,, Color, ., black, ), ;, result, ., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =]
[), ;, result, ., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;]
[., black, ), ;, result, ., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series]
[;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=, null, ), {, result, ., setLabelPaint, (]
[., setLabelFont, (, lookupLegendTextFont, (, series, ), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint]
[), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=, null, ), {, result, ., setLabelPaint]
[), ), ;, Paint, labelPaint, =, lookupLegendTextPaint, (, series, ), ;, if, (, labelPaint, !=, null, ), {, result, .]
[;, if, (, labelPaint, !=, null, ), {, result, ., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (]
[), ;, if, (, labelPaint, !=, null, ), {, result, ., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset]
[), {, result, ., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex]
[!=, null, ), {, result, ., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;, result]
[), {, result, ., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex]
[;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (]
[., setLabelPaint, (, labelPaint, ), ;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, )]
[), ;, }, result, ., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey]
[;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;]
[., setDataset, (, dataset, ), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (, dataset, ., getRowKey]
[), ;, result, ., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (, dataset, ., getRowKey, (, series, ), )]
[;, result, ., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;, result, ., setSeriesIndex, (, series, ), ;]
[., setDatasetIndex, (, datasetIndex, ), ;, result, ., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;, result, .]
[), ;, result, ., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;, result, ., setSeriesIndex, (, series, )]
[;, result, ., setSeriesIndex, (, series, ), ;, if, (, this, ., gradientPaintTransformer, !=, null, ), {, result, ., setFillPaintTransformer]
[., setSeriesKey, (, dataset, ., getRowKey, (, series, ), ), ;, result, ., setSeriesIndex, (, series, ), ;, if, (]
[), ;, result, ., setSeriesIndex, (, series, ), ;, if, (, this, ., gradientPaintTransformer, !=, null, ), {, result, .]
[., getRowKey, (, series, ), ), ;, result, ., setSeriesIndex, (, series, ), ;, if, (, this, ., gradientPaintTransformer, !=]
[), ), ;, result, ., setSeriesIndex, (, series, ), ;, if, (, this, ., gradientPaintTransformer, !=, null, ), {, result]
[;, if, (, this, ., gradientPaintTransformer, !=, null, ), {, result, ., setFillPaintTransformer, (, this, ., gradientPaintTransformer, ), ;, }]
[., setSeriesIndex, (, series, ), ;, if, (, this, ., gradientPaintTransformer, !=, null, ), {, result, ., setFillPaintTransformer, (, this]
[), ;, if, (, this, ., gradientPaintTransformer, !=, null, ), {, result, ., setFillPaintTransformer, (, this, ., gradientPaintTransformer, ), ;]
[), {, result, ., setFillPaintTransformer, (, this, ., gradientPaintTransformer, ), ;, }, return, result, ;, }, public, void, drawItem, (]
[!=, null, ), {, result, ., setFillPaintTransformer, (, this, ., gradientPaintTransformer, ), ;, }, return, result, ;, }, public, void]
[., gradientPaintTransformer, !=, null, ), {, result, ., setFillPaintTransformer, (, this, ., gradientPaintTransformer, ), ;, }, return, result, ;, }]
[), {, result, ., setFillPaintTransformer, (, this, ., gradientPaintTransformer, ), ;, }, return, result, ;, }, public, void, drawItem, (]
[;, }, return, result, ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot]
[., setFillPaintTransformer, (, this, ., gradientPaintTransformer, ), ;, }, return, result, ;, }, public, void, drawItem, (, Graphics2D, g2, ,]
[), ;, }, return, result, ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,]
[., gradientPaintTransformer, ), ;, }, return, result, ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D]
[;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryAxis, domainAxis]
[;, if, (, visibleRow, <, 0, ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,]
[., getVisibleSeriesIndex, (, row, ), ;, if, (, visibleRow, <, 0, ), {, return, ;, }, Number, dataValue, =, dataset]
[), ;, if, (, visibleRow, <, 0, ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row]
[), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue]
[<, 0, ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if]
[), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue]
[;, if, (, dataValue, ==, null, ), {, return, ;, }, final, double, value, =, dataValue, ., doubleValue, (, )]
[., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, final, double]
[,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, final, double, value, =, dataValue, .]
[), ;, if, (, dataValue, ==, null, ), {, return, ;, }, final, double, value, =, dataValue, ., doubleValue, (]
[), {, return, ;, }, final, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, .]
[==, null, ), {, return, ;, }, final, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =]
[), {, return, ;, }, final, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, .]
[;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea]
[., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot]
[;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, )]
[., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,]
[;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound, (]
[,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1]
[,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value]
[,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis]
[,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound]
[,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, )]
[,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis]
[), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound]
[;, if, (, barL0L1, ==, null, ), {, return, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;]
[,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound, (, ), ), ;, if, (, barL0L1, ==, null, )]
[,, rangeAxis, ., getUpperBound, (, ), ), ;, if, (, barL0L1, ==, null, ), {, return, ;, }, RectangleEdge, edge]
[., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound, (, ), ), ;, if, (, barL0L1, ==, null, ), {, return]
[), ;, if, (, barL0L1, ==, null, ), {, return, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, )]
[., getUpperBound, (, ), ), ;, if, (, barL0L1, ==, null, ), {, return, ;, }, RectangleEdge, edge, =, plot]
[), {, return, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D]
[==, null, ), {, return, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis]
[), {, return, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D]
[;, double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1]
[., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge]
[;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive]
[., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (]
[,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,]
[[, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ]]
[], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea]
[,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, )]
[), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean]
[;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, )]
[., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=, this]
[,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted, =]
[[, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;]
[], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted]
[,, edge, ), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted, =, rangeAxis, .]
[), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (]
[;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,, transL1]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,]
[>=, this, ., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, .]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,]
[., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, ., min, (]
[;, double, barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =, Math, ., abs, (]
[., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =]
[;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (]
[., min, (, transL0, ,, transL1, ), ;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;]
[,, transL1, ), ;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0]
[), ;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if]
[;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj]
[., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength]
[), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {]
[-, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, )]
[), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {]
[;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -]
[), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if]
[&&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =]
[>, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double]
[&&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =]
[), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if]
[<, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;]
[), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if]
[=, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if]
[-, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, )]
[;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if]
[;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !]
[), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase]
[==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj]
[), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase]
[., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT]
[||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else]
[&&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;]
[||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT]
[&&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[&&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT]
[=, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }]
[;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted]
[., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&]
[=, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barL0Adj, =]
[., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP]
[||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {]
[&&, !, inverted, ||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;]
[||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {]
[||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP]
[&&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge]
[&&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP]
[=, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }]
[;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar]
[=, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null]
[;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation]
[., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if]
[=, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, )]
[;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new]
[., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj]
[), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,, state]
[==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength]
[), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,, state]
[., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj]
[=, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (]
[;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,, state, ., getBarWidth]
[,, barW0, ,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new]
[-, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar]
[,, barW0, ,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new]
[,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, .]
[,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,]
[+, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (]
[,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,]
[), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,, state, .]
[., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -]
[=, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,, state, ., getBarWidth, (, ), ,, barLength, +]
[;, }, if, (, getShadowsVisible, (, ), ), {, this, ., barPainter, ., paintBarShadow, (, g2, ,, this, ,, row]
[,, barL0, -, barL0Adj, ,, state, ., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, if, (, getShadowsVisible]
[,, state, ., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, if, (, getShadowsVisible, (, ), ), {]
[-, barL0Adj, ,, state, ., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, if, (, getShadowsVisible, (, )]
[,, state, ., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, if, (, getShadowsVisible, (, ), ), {]
[,, barLength, +, barLengthAdj, ), ;, }, if, (, getShadowsVisible, (, ), ), {, this, ., barPainter, ., paintBarShadow, (]
[., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, if, (, getShadowsVisible, (, ), ), {, this, .]
[), ;, }, if, (, getShadowsVisible, (, ), ), {, this, ., barPainter, ., paintBarShadow, (, g2, ,, this, ,]
[+, barLengthAdj, ), ;, }, if, (, getShadowsVisible, (, ), ), {, this, ., barPainter, ., paintBarShadow, (, g2, ,]
[), ;, }, if, (, getShadowsVisible, (, ), ), {, this, ., barPainter, ., paintBarShadow, (, g2, ,, this, ,]
[), {, this, ., barPainter, ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,]
[;, }, this, ., barPainter, ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,]
[., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, true, ), ;]
[., barPainter, ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, true]
[,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, true, ), ;, }, this, ., barPainter]
[,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, true, ), ;, }, this, ., barPainter, ., paintBar]
[,, column, ,, selected, ,, bar, ,, barBase, ,, true, ), ;, }, this, ., barPainter, ., paintBar, (, g2]
[,, selected, ,, bar, ,, barBase, ,, true, ), ;, }, this, ., barPainter, ., paintBar, (, g2, ,, this]
[,, bar, ,, barBase, ,, true, ), ;, }, this, ., barPainter, ., paintBar, (, g2, ,, this, ,, row]
[,, barBase, ,, true, ), ;, }, this, ., barPainter, ., paintBar, (, g2, ,, this, ,, row, ,, column]
[,, true, ), ;, }, this, ., barPainter, ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected]
[), ;, }, this, ., barPainter, ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar]
[;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible]
[., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator]
[., barPainter, ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;]
[,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row]
[,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column]
[,, column, ,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected]
[,, selected, ,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;]
[,, bar, ,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[,, barBase, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=]
[), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&]
[;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2]
[,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, )]
[,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {]
[), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[!=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected]
[,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator]
[), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar]
[;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,]
[,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, )]
[,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;]
[,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, int]
[,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =]
[,, selected, ,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =, plot, .]
[,, generator, ,, bar, ,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (]
[,, bar, ,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, )]
[,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues]
[), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (, )]
[), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (]
[<, 0.0, ), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, .]
[), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (]
[;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,, dataset, ., getRowKey, (, row, ), ,, dataset, ., getColumnKey, (]
[., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,, dataset, ., getRowKey, (, row, )]
[), ;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,, dataset, ., getRowKey, (, row, ), ,, dataset, ., getColumnKey]
[;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities]
[,, dataset, ., getRowKey, (, row, ), ,, dataset, ., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0]
[., getCrosshairState, (, ), ,, dataset, ., getRowKey, (, row, ), ,, dataset, ., getColumnKey, (, column, ), ,, value]
[,, dataset, ., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0, ,, barL0, ,, orientation, ), ;, EntityCollection]
[., getRowKey, (, row, ), ,, dataset, ., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0, ,, barL0]
[), ,, dataset, ., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0, ,, barL0, ,, orientation, ), ;]
[,, value, ,, datasetIndex, ,, barW0, ,, barL0, ,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, )]
[., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0, ,, barL0, ,, orientation, ), ;, EntityCollection, entities, =]
[), ,, value, ,, datasetIndex, ,, barW0, ,, barL0, ,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (]
[,, datasetIndex, ,, barW0, ,, barL0, ,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if]
[,, barW0, ,, barL0, ,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities]
[,, barL0, ,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null]
[,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected]
[!=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }]
[), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected]
[;, }, }, protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,, int, categories, ,, int, series, ), {]
[,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, double, calculateSeriesWidth, (, double, space]
[,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis]
[,, row, ,, column, ,, selected, ), ;, }, }, protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,]
[,, column, ,, selected, ), ;, }, }, protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,, int, categories]
[,, selected, ), ;, }, }, protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,, int, categories, ,, int]
[), ;, }, }, protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,, int, categories, ,, int, series, )]
[;, if, (, categories, >, 1, ), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return]
[-, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {, factor, =, factor, -, axis, .]
[-, axis, ., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {]
[-, getItemMargin, (, ), -, axis, ., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories]
[-, axis, ., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {]
[-, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {, factor, =, factor, -, axis, .]
[., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {, factor, =]
[;, if, (, categories, >, 1, ), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return]
[., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {, factor, =, factor, -, axis, ., getCategoryMargin, (]
[), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /]
[>, 1, ), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor]
[), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /]
[=, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /, (, categories, *]
[;, }, return, (, space, *, factor, ), /, (, categories, *, series, ), ;, }, protected, void, drawItemLabelForBar, (]
[-, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /, (, categories, *, series, )]
[;, }, return, (, space, *, factor, ), /, (, categories, *, series, ), ;, }, protected, void, drawItemLabelForBar, (]
[., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /, (, categories, *, series, ), ;, }]
[;, }, protected, void, drawItemLabelForBar, (, Graphics2D, g2, ,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, int, row, ,, int, column]
[/, (, categories, *, series, ), ;, }, protected, void, drawItemLabelForBar, (, Graphics2D, g2, ,, CategoryPlot, plot, ,, CategoryDataset, dataset]
[), /, (, categories, *, series, ), ;, }, protected, void, drawItemLabelForBar, (, Graphics2D, g2, ,, CategoryPlot, plot, ,, CategoryDataset]
[*, factor, ), /, (, categories, *, series, ), ;, }, protected, void, drawItemLabelForBar, (, Graphics2D, g2, ,, CategoryPlot, plot]
[), /, (, categories, *, series, ), ;, }, protected, void, drawItemLabelForBar, (, Graphics2D, g2, ,, CategoryPlot, plot, ,, CategoryDataset]
[;, }, protected, void, drawItemLabelForBar, (, Graphics2D, g2, ,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, int, row, ,, int, column]
[), ;, }, protected, void, drawItemLabelForBar, (, Graphics2D, g2, ,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, int, row, ,, int]
[*, series, ), ;, }, protected, void, drawItemLabelForBar, (, Graphics2D, g2, ,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, int, row]
[), ;, }, protected, void, drawItemLabelForBar, (, Graphics2D, g2, ,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, int, row, ,, int]
[;, if, (, label, ==, null, ), {, return, ;, }, Font, labelFont, =, getItemLabelFont, (, row, ,, column, ,]
[., generateLabel, (, dataset, ,, row, ,, column, ), ;, if, (, label, ==, null, ), {, return, ;, }]
[,, row, ,, column, ), ;, if, (, label, ==, null, ), {, return, ;, }, Font, labelFont, =, getItemLabelFont]
[,, column, ), ;, if, (, label, ==, null, ), {, return, ;, }, Font, labelFont, =, getItemLabelFont, (, row]
[), ;, if, (, label, ==, null, ), {, return, ;, }, Font, labelFont, =, getItemLabelFont, (, row, ,, column]
[), {, return, ;, }, Font, labelFont, =, getItemLabelFont, (, row, ,, column, ,, selected, ), ;, g2, ., setFont]
[==, null, ), {, return, ;, }, Font, labelFont, =, getItemLabelFont, (, row, ,, column, ,, selected, ), ;, g2]
[), {, return, ;, }, Font, labelFont, =, getItemLabelFont, (, row, ,, column, ,, selected, ), ;, g2, ., setFont]
[;, g2, ., setFont, (, labelFont, ), ;, Paint, paint, =, getItemLabelPaint, (, row, ,, column, ,, selected, ), ;]
[,, column, ,, selected, ), ;, g2, ., setFont, (, labelFont, ), ;, Paint, paint, =, getItemLabelPaint, (, row, ,]
[,, selected, ), ;, g2, ., setFont, (, labelFont, ), ;, Paint, paint, =, getItemLabelPaint, (, row, ,, column, ,]
[), ;, g2, ., setFont, (, labelFont, ), ;, Paint, paint, =, getItemLabelPaint, (, row, ,, column, ,, selected, )]
[;, Paint, paint, =, getItemLabelPaint, (, row, ,, column, ,, selected, ), ;, g2, ., setPaint, (, paint, ), ;]
[., setFont, (, labelFont, ), ;, Paint, paint, =, getItemLabelPaint, (, row, ,, column, ,, selected, ), ;, g2, .]
[), ;, Paint, paint, =, getItemLabelPaint, (, row, ,, column, ,, selected, ), ;, g2, ., setPaint, (, paint, )]
[;, g2, ., setPaint, (, paint, ), ;, ItemLabelPosition, position, =, null, ;, if, (, !, negative, ), {, position]
[,, column, ,, selected, ), ;, g2, ., setPaint, (, paint, ), ;, ItemLabelPosition, position, =, null, ;, if, (]
[,, selected, ), ;, g2, ., setPaint, (, paint, ), ;, ItemLabelPosition, position, =, null, ;, if, (, !, negative]
[), ;, g2, ., setPaint, (, paint, ), ;, ItemLabelPosition, position, =, null, ;, if, (, !, negative, ), {]
[;, ItemLabelPosition, position, =, null, ;, if, (, !, negative, ), {, position, =, getPositiveItemLabelPosition, (, row, ,, column, ,]
[., setPaint, (, paint, ), ;, ItemLabelPosition, position, =, null, ;, if, (, !, negative, ), {, position, =, getPositiveItemLabelPosition]
[), ;, ItemLabelPosition, position, =, null, ;, if, (, !, negative, ), {, position, =, getPositiveItemLabelPosition, (, row, ,, column]
[;, if, (, !, negative, ), {, position, =, getPositiveItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, else]
[), {, position, =, getPositiveItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, else, {, position, =, getNegativeItemLabelPosition, (]
[), {, position, =, getPositiveItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, else, {, position, =, getNegativeItemLabelPosition, (]
[=, getPositiveItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, else, {, position, =, getNegativeItemLabelPosition, (, row, ,, column]
[;, }, else, {, position, =, getNegativeItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, Point2D, anchorPoint, =, calculateLabelAnchorPoint]
[,, column, ,, selected, ), ;, }, else, {, position, =, getNegativeItemLabelPosition, (, row, ,, column, ,, selected, ), ;]
[,, selected, ), ;, }, else, {, position, =, getNegativeItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, Point2D]
[), ;, }, else, {, position, =, getNegativeItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, Point2D, anchorPoint, =]
[=, getNegativeItemLabelPosition, (, row, ,, column, ,, selected, ), ;, }, Point2D, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (]
[;, }, Point2D, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar, ,, plot, ., getOrientation, (, )]
[,, column, ,, selected, ), ;, }, Point2D, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar, ,]
[,, selected, ), ;, }, Point2D, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar, ,, plot, .]
[), ;, }, Point2D, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar, ,, plot, ., getOrientation, (]
[;, if, (, isInternalAnchor, (, position, ., getItemLabelAnchor, (, ), ), ), {, Shape, bounds, =, TextUtilities, ., calculateRotatedStringBounds, (]
[,, bar, ,, plot, ., getOrientation, (, ), ), ;, if, (, isInternalAnchor, (, position, ., getItemLabelAnchor, (, ), )]
[., getItemLabelAnchor, (, ), ,, bar, ,, plot, ., getOrientation, (, ), ), ;, if, (, isInternalAnchor, (, position, .]
[,, plot, ., getOrientation, (, ), ), ;, if, (, isInternalAnchor, (, position, ., getItemLabelAnchor, (, ), ), ), {]
[), ;, if, (, isInternalAnchor, (, position, ., getItemLabelAnchor, (, ), ), ), {, Shape, bounds, =, TextUtilities, ., calculateRotatedStringBounds]
[., getOrientation, (, ), ), ;, if, (, isInternalAnchor, (, position, ., getItemLabelAnchor, (, ), ), ), {, Shape, bounds]
[), {, Shape, bounds, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, (, float, ), anchorPoint, ., getX, (]
[), ), {, Shape, bounds, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, (, float, ), anchorPoint, ., getX]
[., getItemLabelAnchor, (, ), ), ), {, Shape, bounds, =, TextUtilities, ., calculateRotatedStringBounds, (, label, ,, g2, ,, (, float]
[;, if, (, bounds, !=, null, ), {, if, (, !, bar, ., contains, (, bounds, ., getBounds2D, (, )]
[., calculateRotatedStringBounds, (, label, ,, g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, ), anchorPoint]
[,, g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, )]
[,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, ), ,, position]
[,, (, float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (]
[,, (, float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (]
[., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,]
[,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;]
[,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;]
[., getY, (, ), ,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,, position, ., getRotationAnchor]
[,, position, ., getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;, if, (, bounds, !=, null, )]
[., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;, if, (]
[,, position, ., getRotationAnchor, (, ), ), ;, if, (, bounds, !=, null, ), {, if, (, !, bar, .]
[., getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;, if, (, bounds, !=, null, ), {, if]
[), ;, if, (, bounds, !=, null, ), {, if, (, !, bar, ., contains, (, bounds, ., getBounds2D, (]
[., getRotationAnchor, (, ), ), ;, if, (, bounds, !=, null, ), {, if, (, !, bar, ., contains, (]
[), {, if, (, !, bar, ., contains, (, bounds, ., getBounds2D, (, ), ), ), {, if, (, !]
[!=, null, ), {, if, (, !, bar, ., contains, (, bounds, ., getBounds2D, (, ), ), ), {, if]
[), {, if, (, !, bar, ., contains, (, bounds, ., getBounds2D, (, ), ), ), {, if, (, !]
[), {, if, (, !, negative, ), {, position, =, getPositiveItemLabelPositionFallback, (, ), ;, }, else, {, position, =, getNegativeItemLabelPositionFallback]
[), {, if, (, !, negative, ), {, position, =, getPositiveItemLabelPositionFallback, (, ), ;, }, else, {, position, =, getNegativeItemLabelPositionFallback]
[., contains, (, bounds, ., getBounds2D, (, ), ), ), {, if, (, !, negative, ), {, position, =, getPositiveItemLabelPositionFallback]
[), ), {, if, (, !, negative, ), {, position, =, getPositiveItemLabelPositionFallback, (, ), ;, }, else, {, position, =]
[., getBounds2D, (, ), ), ), {, if, (, !, negative, ), {, position, =, getPositiveItemLabelPositionFallback, (, ), ;, }]
[), {, position, =, getPositiveItemLabelPositionFallback, (, ), ;, }, else, {, position, =, getNegativeItemLabelPositionFallback, (, ), ;, }, if, (]
[), {, position, =, getPositiveItemLabelPositionFallback, (, ), ;, }, else, {, position, =, getNegativeItemLabelPositionFallback, (, ), ;, }, if, (]
[=, getPositiveItemLabelPositionFallback, (, ), ;, }, else, {, position, =, getNegativeItemLabelPositionFallback, (, ), ;, }, if, (, position, !=, null]
[;, }, else, {, position, =, getNegativeItemLabelPositionFallback, (, ), ;, }, if, (, position, !=, null, ), {, anchorPoint, =]
[=, getNegativeItemLabelPositionFallback, (, ), ;, }, if, (, position, !=, null, ), {, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor]
[;, }, if, (, position, !=, null, ), {, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar]
[), {, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar, ,, plot, ., getOrientation, (, ), )]
[!=, null, ), {, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar, ,, plot, ., getOrientation, (]
[), {, anchorPoint, =, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar, ,, plot, ., getOrientation, (, ), )]
[=, calculateLabelAnchorPoint, (, position, ., getItemLabelAnchor, (, ), ,, bar, ,, plot, ., getOrientation, (, ), ), ;, }, }]
[;, }, }, }, }, if, (, position, !=, null, ), {, TextUtilities, ., drawRotatedString, (, label, ,, g2, ,]
[,, bar, ,, plot, ., getOrientation, (, ), ), ;, }, }, }, }, if, (, position, !=, null, )]
[., getItemLabelAnchor, (, ), ,, bar, ,, plot, ., getOrientation, (, ), ), ;, }, }, }, }, if, (]
[,, plot, ., getOrientation, (, ), ), ;, }, }, }, }, if, (, position, !=, null, ), {, TextUtilities]
[), ;, }, }, }, }, if, (, position, !=, null, ), {, TextUtilities, ., drawRotatedString, (, label, ,, g2]
[., getOrientation, (, ), ), ;, }, }, }, }, if, (, position, !=, null, ), {, TextUtilities, ., drawRotatedString]
[), {, TextUtilities, ., drawRotatedString, (, label, ,, g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (]
[!=, null, ), {, TextUtilities, ., drawRotatedString, (, label, ,, g2, ,, (, float, ), anchorPoint, ., getX, (, )]
[), {, TextUtilities, ., drawRotatedString, (, label, ,, g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (]
[;, }, }, private, Point2D, calculateLabelAnchorPoint, (, ItemLabelAnchor, anchor, ,, Rectangle2D, bar, ,, PlotOrientation, orientation, ), {, Point2D, result, =]
[., drawRotatedString, (, label, ,, g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, ), anchorPoint]
[,, g2, ,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, )]
[,, (, float, ), anchorPoint, ., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, ), ,, position]
[,, (, float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (]
[,, (, float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (]
[., getX, (, ), ,, (, float, ), anchorPoint, ., getY, (, ), ,, position, ., getTextAnchor, (, ), ,]
[,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;]
[,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;]
[., getY, (, ), ,, position, ., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,, position, ., getRotationAnchor]
[,, position, ., getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;, }, }, private, Point2D, calculateLabelAnchorPoint, (]
[., getTextAnchor, (, ), ,, position, ., getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;, }, }]
[,, position, ., getRotationAnchor, (, ), ), ;, }, }, private, Point2D, calculateLabelAnchorPoint, (, ItemLabelAnchor, anchor, ,, Rectangle2D, bar, ,]
[., getAngle, (, ), ,, position, ., getRotationAnchor, (, ), ), ;, }, }, private, Point2D, calculateLabelAnchorPoint, (, ItemLabelAnchor, anchor]
[), ;, }, }, private, Point2D, calculateLabelAnchorPoint, (, ItemLabelAnchor, anchor, ,, Rectangle2D, bar, ,, PlotOrientation, orientation, ), {, Point2D, result]
[., getRotationAnchor, (, ), ), ;, }, }, private, Point2D, calculateLabelAnchorPoint, (, ItemLabelAnchor, anchor, ,, Rectangle2D, bar, ,, PlotOrientation, orientation]
[;, double, offset, =, getItemLabelAnchorOffset, (, ), ;, double, x0, =, bar, ., getX, (, ), -, offset, ;, double]
[;, double, x0, =, bar, ., getX, (, ), -, offset, ;, double, x1, =, bar, ., getX, (, )]
[;, double, x1, =, bar, ., getX, (, ), ;, double, x2, =, bar, ., getX, (, ), +, offset]
[-, offset, ;, double, x1, =, bar, ., getX, (, ), ;, double, x2, =, bar, ., getX, (, )]
[., getX, (, ), -, offset, ;, double, x1, =, bar, ., getX, (, ), ;, double, x2, =, bar]
[;, double, x1, =, bar, ., getX, (, ), ;, double, x2, =, bar, ., getX, (, ), +, offset]
[;, double, x2, =, bar, ., getX, (, ), +, offset, ;, double, x3, =, bar, ., getCenterX, (, )]
[., getX, (, ), ;, double, x2, =, bar, ., getX, (, ), +, offset, ;, double, x3, =, bar]
[;, double, x3, =, bar, ., getCenterX, (, ), ;, double, x4, =, bar, ., getMaxX, (, ), -, offset]
[+, offset, ;, double, x3, =, bar, ., getCenterX, (, ), ;, double, x4, =, bar, ., getMaxX, (, )]
[., getX, (, ), +, offset, ;, double, x3, =, bar, ., getCenterX, (, ), ;, double, x4, =, bar]
[;, double, x3, =, bar, ., getCenterX, (, ), ;, double, x4, =, bar, ., getMaxX, (, ), -, offset]
[;, double, x4, =, bar, ., getMaxX, (, ), -, offset, ;, double, x5, =, bar, ., getMaxX, (, )]
[., getCenterX, (, ), ;, double, x4, =, bar, ., getMaxX, (, ), -, offset, ;, double, x5, =, bar]
[;, double, x5, =, bar, ., getMaxX, (, ), ;, double, x6, =, bar, ., getMaxX, (, ), +, offset]
[-, offset, ;, double, x5, =, bar, ., getMaxX, (, ), ;, double, x6, =, bar, ., getMaxX, (, )]
[., getMaxX, (, ), -, offset, ;, double, x5, =, bar, ., getMaxX, (, ), ;, double, x6, =, bar]
[;, double, x5, =, bar, ., getMaxX, (, ), ;, double, x6, =, bar, ., getMaxX, (, ), +, offset]
[;, double, x6, =, bar, ., getMaxX, (, ), +, offset, ;, double, y0, =, bar, ., getMaxY, (, )]
[., getMaxX, (, ), ;, double, x6, =, bar, ., getMaxX, (, ), +, offset, ;, double, y0, =, bar]
[;, double, y0, =, bar, ., getMaxY, (, ), +, offset, ;, double, y1, =, bar, ., getMaxY, (, )]
[+, offset, ;, double, y0, =, bar, ., getMaxY, (, ), +, offset, ;, double, y1, =, bar, ., getMaxY]
[., getMaxX, (, ), +, offset, ;, double, y0, =, bar, ., getMaxY, (, ), +, offset, ;, double, y1]
[;, double, y0, =, bar, ., getMaxY, (, ), +, offset, ;, double, y1, =, bar, ., getMaxY, (, )]
[;, double, y1, =, bar, ., getMaxY, (, ), ;, double, y2, =, bar, ., getMaxY, (, ), -, offset]
[+, offset, ;, double, y1, =, bar, ., getMaxY, (, ), ;, double, y2, =, bar, ., getMaxY, (, )]
[., getMaxY, (, ), +, offset, ;, double, y1, =, bar, ., getMaxY, (, ), ;, double, y2, =, bar]
[;, double, y1, =, bar, ., getMaxY, (, ), ;, double, y2, =, bar, ., getMaxY, (, ), -, offset]
[;, double, y2, =, bar, ., getMaxY, (, ), -, offset, ;, double, y3, =, bar, ., getCenterY, (, )]
[., getMaxY, (, ), ;, double, y2, =, bar, ., getMaxY, (, ), -, offset, ;, double, y3, =, bar]
[;, double, y3, =, bar, ., getCenterY, (, ), ;, double, y4, =, bar, ., getMinY, (, ), +, offset]
[-, offset, ;, double, y3, =, bar, ., getCenterY, (, ), ;, double, y4, =, bar, ., getMinY, (, )]
[., getMaxY, (, ), -, offset, ;, double, y3, =, bar, ., getCenterY, (, ), ;, double, y4, =, bar]
[;, double, y3, =, bar, ., getCenterY, (, ), ;, double, y4, =, bar, ., getMinY, (, ), +, offset]
[;, double, y4, =, bar, ., getMinY, (, ), +, offset, ;, double, y5, =, bar, ., getMinY, (, )]
[., getCenterY, (, ), ;, double, y4, =, bar, ., getMinY, (, ), +, offset, ;, double, y5, =, bar]
[;, double, y5, =, bar, ., getMinY, (, ), ;, double, y6, =, bar, ., getMinY, (, ), -, offset]
[+, offset, ;, double, y5, =, bar, ., getMinY, (, ), ;, double, y6, =, bar, ., getMinY, (, )]
[., getMinY, (, ), +, offset, ;, double, y5, =, bar, ., getMinY, (, ), ;, double, y6, =, bar]
[;, double, y5, =, bar, ., getMinY, (, ), ;, double, y6, =, bar, ., getMinY, (, ), -, offset]
[;, double, y6, =, bar, ., getMinY, (, ), -, offset, ;, if, (, anchor, ==, ItemLabelAnchor, ., CENTER, )]
[., getMinY, (, ), ;, double, y6, =, bar, ., getMinY, (, ), -, offset, ;, if, (, anchor, ==]
[;, if, (, anchor, ==, ItemLabelAnchor, ., CENTER, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y3]
[-, offset, ;, if, (, anchor, ==, ItemLabelAnchor, ., CENTER, ), {, result, =, new, Point2D, ., Double, (, x3]
[., getMinY, (, ), -, offset, ;, if, (, anchor, ==, ItemLabelAnchor, ., CENTER, ), {, result, =, new, Point2D]
[;, if, (, anchor, ==, ItemLabelAnchor, ., CENTER, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y3]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y3, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., CENTER, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y3, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y3, ), ;, }, else, if, (, anchor, ==]
[., CENTER, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y3, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x3, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE1]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE1, ), {, result, =, new, Point2D, ., Double, (, x4]
[,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE1, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE1, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., INSIDE1, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==]
[., INSIDE1, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE2]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE2, ), {, result, =, new, Point2D, ., Double, (, x4]
[,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE2, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE2, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., INSIDE2, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==]
[., INSIDE2, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x4, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE3]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE3, ), {, result, =, new, Point2D, ., Double, (, x4]
[,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE3, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE3, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y3, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., INSIDE3, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y3, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y3, ), ;, }, else, if, (, anchor, ==]
[., INSIDE3, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y3, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x4, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE4]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE4, ), {, result, =, new, Point2D, ., Double, (, x4]
[,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE4, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE4, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., INSIDE4, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==]
[., INSIDE4, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE5]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE5, ), {, result, =, new, Point2D, ., Double, (, x4]
[,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE5, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE5, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., INSIDE5, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==]
[., INSIDE5, ), {, result, =, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x4, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE6]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE6, ), {, result, =, new, Point2D, ., Double, (, x3]
[,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE6, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE6, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y2, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., INSIDE6, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y2, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y2, ), ;, }, else, if, (, anchor, ==]
[., INSIDE6, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y2, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x3, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE7]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE7, ), {, result, =, new, Point2D, ., Double, (, x2]
[,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE7, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE7, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., INSIDE7, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==]
[., INSIDE7, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE8]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE8, ), {, result, =, new, Point2D, ., Double, (, x2]
[,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE8, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE8, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., INSIDE8, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==]
[., INSIDE8, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x2, ,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE9]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE9, ), {, result, =, new, Point2D, ., Double, (, x2]
[,, y2, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE9, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE9, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y3, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., INSIDE9, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y3, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y3, ), ;, }, else, if, (, anchor, ==]
[., INSIDE9, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y3, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x2, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE10]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE10, ), {, result, =, new, Point2D, ., Double, (, x2]
[,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE10, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE10, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., INSIDE10, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==]
[., INSIDE10, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE11]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE11, ), {, result, =, new, Point2D, ., Double, (, x2]
[,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE11, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE11, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., INSIDE11, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==]
[., INSIDE11, ), {, result, =, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x2, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE12]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE12, ), {, result, =, new, Point2D, ., Double, (, x3]
[,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE12, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., INSIDE12, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y4, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., INSIDE12, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y4, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y4, ), ;, }, else, if, (, anchor, ==]
[., INSIDE12, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y4, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x3, ,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE1]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE1, ), {, result, =, new, Point2D, ., Double, (, x5]
[,, y4, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE1, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE1, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x5, ,, y6, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., OUTSIDE1, ), {, result, =, new, Point2D, ., Double, (, x5, ,, y6, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x5, ,, y6, ), ;, }, else, if, (, anchor, ==]
[., OUTSIDE1, ), {, result, =, new, Point2D, ., Double, (, x5, ,, y6, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x5, ,, y6, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE2]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE2, ), {, result, =, new, Point2D, ., Double, (, x6]
[,, y6, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE2, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE2, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x6, ,, y5, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., OUTSIDE2, ), {, result, =, new, Point2D, ., Double, (, x6, ,, y5, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x6, ,, y5, ), ;, }, else, if, (, anchor, ==]
[., OUTSIDE2, ), {, result, =, new, Point2D, ., Double, (, x6, ,, y5, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x6, ,, y5, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE3]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE3, ), {, result, =, new, Point2D, ., Double, (, x6]
[,, y5, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE3, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE3, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x6, ,, y3, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., OUTSIDE3, ), {, result, =, new, Point2D, ., Double, (, x6, ,, y3, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x6, ,, y3, ), ;, }, else, if, (, anchor, ==]
[., OUTSIDE3, ), {, result, =, new, Point2D, ., Double, (, x6, ,, y3, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x6, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE4]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE4, ), {, result, =, new, Point2D, ., Double, (, x6]
[,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE4, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE4, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x6, ,, y1, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., OUTSIDE4, ), {, result, =, new, Point2D, ., Double, (, x6, ,, y1, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x6, ,, y1, ), ;, }, else, if, (, anchor, ==]
[., OUTSIDE4, ), {, result, =, new, Point2D, ., Double, (, x6, ,, y1, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x6, ,, y1, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE5]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE5, ), {, result, =, new, Point2D, ., Double, (, x5]
[,, y1, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE5, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE5, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x5, ,, y0, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., OUTSIDE5, ), {, result, =, new, Point2D, ., Double, (, x5, ,, y0, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x5, ,, y0, ), ;, }, else, if, (, anchor, ==]
[., OUTSIDE5, ), {, result, =, new, Point2D, ., Double, (, x5, ,, y0, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x5, ,, y0, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE6]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE6, ), {, result, =, new, Point2D, ., Double, (, x3]
[,, y0, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE6, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE6, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y0, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., OUTSIDE6, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y0, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y0, ), ;, }, else, if, (, anchor, ==]
[., OUTSIDE6, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y0, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x3, ,, y0, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE7]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE7, ), {, result, =, new, Point2D, ., Double, (, x1]
[,, y0, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE7, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE7, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x1, ,, y0, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., OUTSIDE7, ), {, result, =, new, Point2D, ., Double, (, x1, ,, y0, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x1, ,, y0, ), ;, }, else, if, (, anchor, ==]
[., OUTSIDE7, ), {, result, =, new, Point2D, ., Double, (, x1, ,, y0, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x1, ,, y0, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE8]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE8, ), {, result, =, new, Point2D, ., Double, (, x0]
[,, y0, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE8, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE8, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x0, ,, y1, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., OUTSIDE8, ), {, result, =, new, Point2D, ., Double, (, x0, ,, y1, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x0, ,, y1, ), ;, }, else, if, (, anchor, ==]
[., OUTSIDE8, ), {, result, =, new, Point2D, ., Double, (, x0, ,, y1, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x0, ,, y1, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE9]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE9, ), {, result, =, new, Point2D, ., Double, (, x0]
[,, y1, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE9, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE9, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x0, ,, y3, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., OUTSIDE9, ), {, result, =, new, Point2D, ., Double, (, x0, ,, y3, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x0, ,, y3, ), ;, }, else, if, (, anchor, ==]
[., OUTSIDE9, ), {, result, =, new, Point2D, ., Double, (, x0, ,, y3, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x0, ,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE10]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE10, ), {, result, =, new, Point2D, ., Double, (, x0]
[,, y3, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE10, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE10, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x0, ,, y5, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., OUTSIDE10, ), {, result, =, new, Point2D, ., Double, (, x0, ,, y5, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x0, ,, y5, ), ;, }, else, if, (, anchor, ==]
[., OUTSIDE10, ), {, result, =, new, Point2D, ., Double, (, x0, ,, y5, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x0, ,, y5, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE11]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE11, ), {, result, =, new, Point2D, ., Double, (, x1]
[,, y5, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE11, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE11, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x1, ,, y6, ), ;, }, else, if, (, anchor, ==]
[==, ItemLabelAnchor, ., OUTSIDE11, ), {, result, =, new, Point2D, ., Double, (, x1, ,, y6, ), ;, }, else]
[), {, result, =, new, Point2D, ., Double, (, x1, ,, y6, ), ;, }, else, if, (, anchor, ==]
[., OUTSIDE11, ), {, result, =, new, Point2D, ., Double, (, x1, ,, y6, ), ;, }, else, if, (]
[=, new, Point2D, ., Double, (, x1, ,, y6, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE12]
[;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE12, ), {, result, =, new, Point2D, ., Double, (, x3]
[,, y6, ), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE12, ), {, result, =, new, Point2D, .]
[), ;, }, else, if, (, anchor, ==, ItemLabelAnchor, ., OUTSIDE12, ), {, result, =, new, Point2D, ., Double, (]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y6, ), ;, }, return, result, ;, }, private]
[==, ItemLabelAnchor, ., OUTSIDE12, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y6, ), ;, }, return]
[), {, result, =, new, Point2D, ., Double, (, x3, ,, y6, ), ;, }, return, result, ;, }, private]
[., OUTSIDE12, ), {, result, =, new, Point2D, ., Double, (, x3, ,, y6, ), ;, }, return, result, ;]
[=, new, Point2D, ., Double, (, x3, ,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (]
[;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return, anchor, ==, ItemLabelAnchor, ., CENTER]
[,, y6, ), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return, anchor, ==]
[), ;, }, return, result, ;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return, anchor, ==, ItemLabelAnchor, .]
[;, }, private, boolean, isInternalAnchor, (, ItemLabelAnchor, anchor, ), {, return, anchor, ==, ItemLabelAnchor, ., CENTER, ||, anchor, ==, ItemLabelAnchor]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean, equals, (, Object, obj]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor]
[==, ItemLabelAnchor, ., CENTER, ||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor]
[., CENTER, ||, anchor, ==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor]
[==, ItemLabelAnchor, ., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor]
[., INSIDE1, ||, anchor, ==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor]
[==, ItemLabelAnchor, ., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor]
[., INSIDE2, ||, anchor, ==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor]
[==, ItemLabelAnchor, ., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor]
[., INSIDE3, ||, anchor, ==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor]
[==, ItemLabelAnchor, ., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor]
[., INSIDE4, ||, anchor, ==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor]
[==, ItemLabelAnchor, ., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor]
[., INSIDE5, ||, anchor, ==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor]
[==, ItemLabelAnchor, ., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor]
[., INSIDE6, ||, anchor, ==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor]
[==, ItemLabelAnchor, ., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor]
[., INSIDE7, ||, anchor, ==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor]
[==, ItemLabelAnchor, ., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor]
[., INSIDE8, ||, anchor, ==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }]
[==, ItemLabelAnchor, ., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor, ==, ItemLabelAnchor]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }]
[., INSIDE9, ||, anchor, ==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor, ==, ItemLabelAnchor, ., INSIDE12]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean, equals, (, Object, obj]
[==, ItemLabelAnchor, ., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean, equals, (, Object, obj]
[., INSIDE10, ||, anchor, ==, ItemLabelAnchor, ., INSIDE11, ||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean, equals, (]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[==, ItemLabelAnchor, ., INSIDE11, ||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean, equals, (, Object, obj, ), {]
[||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[., INSIDE11, ||, anchor, ==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[==, ItemLabelAnchor, ., INSIDE12, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[., INSIDE12, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, BarRenderer, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, BarRenderer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, BarRenderer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, BarRenderer, ), ), {, return, false, ;, }, BarRenderer, that, =, (]
[), {, return, false, ;, }, BarRenderer, that, =, (, BarRenderer, ), obj, ;, if, (, this, ., base, !=]
[), {, return, false, ;, }, BarRenderer, that, =, (, BarRenderer, ), obj, ;, if, (, this, ., base, !=]
[), ), {, return, false, ;, }, BarRenderer, that, =, (, BarRenderer, ), obj, ;, if, (, this, ., base]
[instanceof, BarRenderer, ), ), {, return, false, ;, }, BarRenderer, that, =, (, BarRenderer, ), obj, ;, if, (, this]
[;, }, BarRenderer, that, =, (, BarRenderer, ), obj, ;, if, (, this, ., base, !=, that, ., base, )]
[;, if, (, this, ., base, !=, that, ., base, ), {, return, false, ;, }, if, (, this, .]
[;, if, (, this, ., base, !=, that, ., base, ), {, return, false, ;, }, if, (, this, .]
[), {, return, false, ;, }, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;]
[!=, that, ., base, ), {, return, false, ;, }, if, (, this, ., itemMargin, !=, that, ., itemMargin, )]
[., base, !=, that, ., base, ), {, return, false, ;, }, if, (, this, ., itemMargin, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;]
[., base, ), {, return, false, ;, }, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return]
[;, }, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., drawBarOutline, !=, that, ., drawBarOutline, ), {, return, false, ;]
[!=, that, ., itemMargin, ), {, return, false, ;, }, if, (, this, ., drawBarOutline, !=, that, ., drawBarOutline, )]
[., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (, this, ., drawBarOutline, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., drawBarOutline, !=, that, ., drawBarOutline, ), {, return, false, ;]
[., itemMargin, ), {, return, false, ;, }, if, (, this, ., drawBarOutline, !=, that, ., drawBarOutline, ), {, return]
[;, }, if, (, this, ., drawBarOutline, !=, that, ., drawBarOutline, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;]
[!=, that, ., drawBarOutline, ), {, return, false, ;, }, if, (, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, )]
[., drawBarOutline, !=, that, ., drawBarOutline, ), {, return, false, ;, }, if, (, this, ., maximumBarWidth, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;]
[., drawBarOutline, ), {, return, false, ;, }, if, (, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return]
[;, }, if, (, this, ., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., minimumBarLength, !=, that, ., minimumBarLength, ), {, return, false, ;]
[!=, that, ., maximumBarWidth, ), {, return, false, ;, }, if, (, this, ., minimumBarLength, !=, that, ., minimumBarLength, )]
[., maximumBarWidth, !=, that, ., maximumBarWidth, ), {, return, false, ;, }, if, (, this, ., minimumBarLength, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., minimumBarLength, !=, that, ., minimumBarLength, ), {, return, false, ;]
[., maximumBarWidth, ), {, return, false, ;, }, if, (, this, ., minimumBarLength, !=, that, ., minimumBarLength, ), {, return]
[;, }, if, (, this, ., minimumBarLength, !=, that, ., minimumBarLength, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer, ,, that, ., gradientPaintTransformer]
[!=, that, ., minimumBarLength, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer]
[., minimumBarLength, !=, that, ., minimumBarLength, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer, ,, that, ., gradientPaintTransformer]
[., minimumBarLength, ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer, ,, that]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., gradientPaintTransformer, ,, that, ., gradientPaintTransformer, ), ), {, return]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., positiveItemLabelPositionFallback, ,, that, ., positiveItemLabelPositionFallback]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., positiveItemLabelPositionFallback, ,, that, ., positiveItemLabelPositionFallback]
[., equal, (, this, ., gradientPaintTransformer, ,, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, .]
[., gradientPaintTransformer, ,, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., positiveItemLabelPositionFallback, ,, that, .]
[., gradientPaintTransformer, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., positiveItemLabelPositionFallback, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., positiveItemLabelPositionFallback, ,, that, ., positiveItemLabelPositionFallback, ), ), {, return]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., negativeItemLabelPositionFallback, ,, that, ., negativeItemLabelPositionFallback]
[), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., negativeItemLabelPositionFallback, ,, that, ., negativeItemLabelPositionFallback]
[., equal, (, this, ., positiveItemLabelPositionFallback, ,, that, ., positiveItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., positiveItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, .]
[., positiveItemLabelPositionFallback, ,, that, ., positiveItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., negativeItemLabelPositionFallback, ,, that, .]
[., positiveItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., negativeItemLabelPositionFallback, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., negativeItemLabelPositionFallback, ,, that, ., negativeItemLabelPositionFallback, ), ), {, return]
[), {, return, false, ;, }, if, (, !, this, ., barPainter, ., equals, (, that, ., barPainter, ), )]
[), {, return, false, ;, }, if, (, !, this, ., barPainter, ., equals, (, that, ., barPainter, ), )]
[., equal, (, this, ., negativeItemLabelPositionFallback, ,, that, ., negativeItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., negativeItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !, this, ., barPainter, ., equals, (]
[., negativeItemLabelPositionFallback, ,, that, ., negativeItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !, this, ., barPainter, .]
[), ), {, return, false, ;, }, if, (, !, this, ., barPainter, ., equals, (, that, ., barPainter, )]
[., negativeItemLabelPositionFallback, ), ), {, return, false, ;, }, if, (, !, this, ., barPainter, ., equals, (, that, .]
[;, }, if, (, !, this, ., barPainter, ., equals, (, that, ., barPainter, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., shadowsVisible, !=, that, ., shadowsVisible, ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., shadowsVisible, !=, that, ., shadowsVisible, ), {, return, false, ;]
[., equals, (, that, ., barPainter, ), ), {, return, false, ;, }, if, (, this, ., shadowsVisible, !=, that]
[., barPainter, ., equals, (, that, ., barPainter, ), ), {, return, false, ;, }, if, (, this, ., shadowsVisible]
[), ), {, return, false, ;, }, if, (, this, ., shadowsVisible, !=, that, ., shadowsVisible, ), {, return, false]
[., barPainter, ), ), {, return, false, ;, }, if, (, this, ., shadowsVisible, !=, that, ., shadowsVisible, ), {]
[;, }, if, (, this, ., shadowsVisible, !=, that, ., shadowsVisible, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., shadowPaint, ,, that, ., shadowPaint]
[!=, that, ., shadowsVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., shadowPaint]
[., shadowsVisible, !=, that, ., shadowsVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., shadowPaint, ,, that, ., shadowPaint]
[., shadowsVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., shadowPaint, ,, that]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., shadowPaint, ,, that, ., shadowPaint, ), ), {, return]
[), {, return, false, ;, }, if, (, this, ., shadowXOffset, !=, that, ., shadowXOffset, ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., shadowXOffset, !=, that, ., shadowXOffset, ), {, return, false, ;]
[., equal, (, this, ., shadowPaint, ,, that, ., shadowPaint, ), ), {, return, false, ;, }, if, (, this]
[,, that, ., shadowPaint, ), ), {, return, false, ;, }, if, (, this, ., shadowXOffset, !=, that, ., shadowXOffset]
[., shadowPaint, ,, that, ., shadowPaint, ), ), {, return, false, ;, }, if, (, this, ., shadowXOffset, !=, that]
[), ), {, return, false, ;, }, if, (, this, ., shadowXOffset, !=, that, ., shadowXOffset, ), {, return, false]
[., shadowPaint, ), ), {, return, false, ;, }, if, (, this, ., shadowXOffset, !=, that, ., shadowXOffset, ), {]
[;, }, if, (, this, ., shadowXOffset, !=, that, ., shadowXOffset, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., shadowYOffset, !=, that, ., shadowYOffset, ), {, return, false, ;]
[!=, that, ., shadowXOffset, ), {, return, false, ;, }, if, (, this, ., shadowYOffset, !=, that, ., shadowYOffset, )]
[., shadowXOffset, !=, that, ., shadowXOffset, ), {, return, false, ;, }, if, (, this, ., shadowYOffset, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., shadowYOffset, !=, that, ., shadowYOffset, ), {, return, false, ;]
[., shadowXOffset, ), {, return, false, ;, }, if, (, this, ., shadowYOffset, !=, that, ., shadowYOffset, ), {, return]
[;, }, if, (, this, ., shadowYOffset, !=, that, ., shadowYOffset, ), {, return, false, ;, }, return, super, .]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream]
[!=, that, ., shadowYOffset, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, private]
[., shadowYOffset, !=, that, ., shadowYOffset, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream]
[., shadowYOffset, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject]
[;, }, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException]
[;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, .]
[., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject]
[), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities]
[;, SerialUtilities, ., writePaint, (, this, ., shadowPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, )]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., shadowPaint, ,, stream, ), ;, }, private, void, readObject]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[., writePaint, (, this, ., shadowPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException]
[,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject]
[., shadowPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream]
[), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, )]
[;, this, ., shadowPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, public, Rectangle2D, createHotSpotBounds, (, Graphics2D, g2, ,]
[., defaultReadObject, (, ), ;, this, ., shadowPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, public, Rectangle2D, createHotSpotBounds]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, }, public, Rectangle2D, createHotSpotBounds, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot]
[., shadowPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, public, Rectangle2D, createHotSpotBounds, (, Graphics2D, g2, ,, Rectangle2D, dataArea]
[;, }, public, Rectangle2D, createHotSpotBounds, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryAxis, domainAxis, ,, ValueAxis, rangeAxis]
[., readPaint, (, stream, ), ;, }, public, Rectangle2D, createHotSpotBounds, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,]
[), ;, }, public, Rectangle2D, createHotSpotBounds, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryAxis, domainAxis, ,, ValueAxis]
[;, if, (, visibleRow, <, 0, ), {, return, null, ;, }, if, (, !, this, ., getItemVisible, (, row]
[., getVisibleSeriesIndex, (, row, ), ;, if, (, visibleRow, <, 0, ), {, return, null, ;, }, if, (, !]
[), ;, if, (, visibleRow, <, 0, ), {, return, null, ;, }, if, (, !, this, ., getItemVisible, (]
[), {, return, null, ;, }, if, (, !, this, ., getItemVisible, (, row, ,, column, ), ), {, return]
[<, 0, ), {, return, null, ;, }, if, (, !, this, ., getItemVisible, (, row, ,, column, ), )]
[), {, return, null, ;, }, if, (, !, this, ., getItemVisible, (, row, ,, column, ), ), {, return]
[;, }, if, (, !, this, ., getItemVisible, (, row, ,, column, ), ), {, return, null, ;, }, Number]
[), {, return, null, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[), {, return, null, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[., getItemVisible, (, row, ,, column, ), ), {, return, null, ;, }, Number, dataValue, =, dataset, ., getValue, (]
[,, column, ), ), {, return, null, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, )]
[), ), {, return, null, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if]
[;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, )]
[;, if, (, dataValue, ==, null, ), {, return, null, ;, }, final, double, value, =, dataValue, ., doubleValue, (]
[., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, null, ;, }, final]
[,, column, ), ;, if, (, dataValue, ==, null, ), {, return, null, ;, }, final, double, value, =, dataValue]
[), ;, if, (, dataValue, ==, null, ), {, return, null, ;, }, final, double, value, =, dataValue, ., doubleValue]
[), {, return, null, ;, }, final, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot]
[==, null, ), {, return, null, ;, }, final, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation]
[), {, return, null, ;, }, final, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot]
[;, }, final, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, )]
[;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea]
[., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot]
[;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, )]
[., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,]
[;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound, (]
[,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1]
[,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value]
[,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis]
[,, state, ,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound]
[,, visibleRow, ,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, )]
[,, column, ), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis]
[), ;, double, [, ], barL0L1, =, calculateBarL0L1, (, value, ,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound]
[;, if, (, barL0L1, ==, null, ), {, return, null, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, )]
[,, rangeAxis, ., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound, (, ), ), ;, if, (, barL0L1, ==, null, )]
[,, rangeAxis, ., getUpperBound, (, ), ), ;, if, (, barL0L1, ==, null, ), {, return, null, ;, }, RectangleEdge]
[., getLowerBound, (, ), ,, rangeAxis, ., getUpperBound, (, ), ), ;, if, (, barL0L1, ==, null, ), {, return]
[), ;, if, (, barL0L1, ==, null, ), {, return, null, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (]
[., getUpperBound, (, ), ), ;, if, (, barL0L1, ==, null, ), {, return, null, ;, }, RectangleEdge, edge, =]
[), {, return, null, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, .]
[==, null, ), {, return, null, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =]
[), {, return, null, ;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, .]
[;, }, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, []
[;, double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1]
[., getRangeAxisEdge, (, ), ;, double, transL0, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge]
[;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive]
[., valueToJava2D, (, barL0L1, [, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (]
[,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,]
[[, 0, ], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ]]
[], ,, dataArea, ,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea]
[,, edge, ), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, )]
[), ;, double, transL1, =, rangeAxis, ., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean]
[;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, )]
[., valueToJava2D, (, barL0L1, [, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=, this]
[,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted, =]
[[, 1, ], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;]
[], ,, dataArea, ,, edge, ), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted]
[,, edge, ), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted, =, rangeAxis, .]
[), ;, boolean, positive, =, (, value, >=, this, ., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (]
[;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,, transL1]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,]
[>=, this, ., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, .]
[), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,]
[., base, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, double, barL0, =, Math, ., min, (]
[;, double, barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =, Math, ., abs, (]
[., isInverted, (, ), ;, double, barL0, =, Math, ., min, (, transL0, ,, transL1, ), ;, double, barLength, =]
[;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (]
[., min, (, transL0, ,, transL1, ), ;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;]
[,, transL1, ), ;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0]
[), ;, double, barLength, =, Math, ., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if]
[;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj]
[., abs, (, transL1, -, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength]
[), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {]
[-, transL0, ), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, )]
[), ;, double, barLengthAdj, =, 0.0, ;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {]
[;, if, (, barLength, >, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -]
[), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if]
[&&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =]
[>, 0.0, &&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double]
[&&, barLength, <, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =]
[), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if]
[<, getMinimumBarLength, (, ), ), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;]
[), {, barLengthAdj, =, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if]
[=, getMinimumBarLength, (, ), -, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if]
[-, barLength, ;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, )]
[;, }, double, barL0Adj, =, 0.0, ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if]
[;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !]
[), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase]
[==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj]
[), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase]
[., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT]
[||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else]
[&&, inverted, ||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;]
[||, !, positive, &&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT]
[&&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[&&, !, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT]
[=, barLengthAdj, ;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }]
[;, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted]
[., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&]
[=, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barL0Adj, =]
[., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP]
[||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {]
[&&, !, inverted, ||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;]
[||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {]
[||, !, positive, &&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP]
[&&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge]
[&&, inverted, ), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge]
[), {, barL0Adj, =, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP]
[=, barLengthAdj, ;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }]
[;, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar]
[=, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null]
[;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation]
[., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if]
[=, RectangleEdge, ., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, )]
[;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new]
[., TOP, ;, }, }, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj]
[), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,, state]
[==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength]
[), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,, state]
[., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj]
[=, new, Rectangle2D, ., Double, (, barL0, -, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (]
[;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,, state, ., getBarWidth]
[,, barW0, ,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new]
[-, barL0Adj, ,, barW0, ,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar]
[,, barW0, ,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new]
[,, barLength, +, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, .]
[,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,]
[+, barLengthAdj, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (]
[,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,]
[), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,, state, .]
[., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -]
[=, new, Rectangle2D, ., Double, (, barW0, ,, barL0, -, barL0Adj, ,, state, ., getBarWidth, (, ), ,, barLength, +]
[;, }, return, bar, ;, }, }]
[,, barL0, -, barL0Adj, ,, state, ., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, return, bar, ;]
[,, state, ., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, return, bar, ;, }, }]
[-, barL0Adj, ,, state, ., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, return, bar, ;, }, }]
[,, state, ., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, return, bar, ;, }, }]
[,, barLength, +, barLengthAdj, ), ;, }, return, bar, ;, }, }]
[., getBarWidth, (, ), ,, barLength, +, barLengthAdj, ), ;, }, return, bar, ;, }, }]
[), ;, }, return, bar, ;, }, }]
[+, barLengthAdj, ), ;, }, return, bar, ;, }, }]
[), ;, }, return, bar, ;, }, }]
[;, }, }]
