[math3, ., util, ., MathUtils, ;, public, class, GeometricMean, extends, AbstractStorelessUnivariateStatistic, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[., util, ., MathUtils, ;, public, class, GeometricMean, extends, AbstractStorelessUnivariateStatistic, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[Serializable, {, private, static, final, long, serialVersionUID, =, -, 8178734905303459453L, ;, private, StorelessUnivariateStatistic, sumOfLogs, ;, public, GeometricMean, (, ), {]
[private, static, final, long, serialVersionUID, =, -, 8178734905303459453L, ;, private, StorelessUnivariateStatistic, sumOfLogs, ;, public, GeometricMean, (, ), {, sumOfLogs, =]
[=, new, SumOfLogs, (, ), ;, }, public, GeometricMean, (, GeometricMean, original, ), throws, NullArgumentException, {, super, (, ), ;]
[SumOfLogs, (, ), ;, }, public, GeometricMean, (, GeometricMean, original, ), throws, NullArgumentException, {, super, (, ), ;, copy, (]
[), ;, }, public, GeometricMean, (, GeometricMean, original, ), throws, NullArgumentException, {, super, (, ), ;, copy, (, original, ,]
[{, super, (, ), ;, copy, (, original, ,, this, ), ;, }, public, GeometricMean, (, SumOfLogs, sumOfLogs, ), {]
[{, super, (, ), ;, copy, (, original, ,, this, ), ;, }, public, GeometricMean, (, SumOfLogs, sumOfLogs, ), {]
[;, copy, (, original, ,, this, ), ;, }, public, GeometricMean, (, SumOfLogs, sumOfLogs, ), {, this, ., sumOfLogs, =]
[), {, this, ., sumOfLogs, =, sumOfLogs, ;, }, @, Override, public, GeometricMean, copy, (, ), {, GeometricMean, result, =]
[=, sumOfLogs, ;, }, @, Override, public, GeometricMean, copy, (, ), {, GeometricMean, result, =, new, GeometricMean, (, ), ;]
[;, }, @, Override, public, GeometricMean, copy, (, ), {, GeometricMean, result, =, new, GeometricMean, (, ), ;, copy, (]
[@, Override, public, GeometricMean, copy, (, ), {, GeometricMean, result, =, new, GeometricMean, (, ), ;, copy, (, this, ,]
[copy, (, ), {, GeometricMean, result, =, new, GeometricMean, (, ), ;, copy, (, this, ,, result, ), ;, return]
[this, ,, result, ), ;, return, result, ;, }, @, Override, public, void, increment, (, final, double, d, ), {]
[this, ,, result, ), ;, return, result, ;, }, @, Override, public, void, increment, (, final, double, d, ), {]
[;, return, result, ;, }, @, Override, public, void, increment, (, final, double, d, ), {, sumOfLogs, ., increment, (]
[), {, sumOfLogs, ., increment, (, d, ), ;, }, @, Override, public, double, getResult, (, ), {, if, (]
[), {, sumOfLogs, ., increment, (, d, ), ;, }, @, Override, public, double, getResult, (, ), {, if, (]
[), {, sumOfLogs, ., increment, (, d, ), ;, }, @, Override, public, double, getResult, (, ), {, if, (]
[d, ), ;, }, @, Override, public, double, getResult, (, ), {, if, (, sumOfLogs, ., getN, (, ), >]
[@, Override, public, double, getResult, (, ), {, if, (, sumOfLogs, ., getN, (, ), >, 0, ), {, return]
[@, Override, public, double, getResult, (, ), {, if, (, sumOfLogs, ., getN, (, ), >, 0, ), {, return]
[getResult, (, ), {, if, (, sumOfLogs, ., getN, (, ), >, 0, ), {, return, FastMath, ., exp, (]
[getResult, (, ), {, if, (, sumOfLogs, ., getN, (, ), >, 0, ), {, return, FastMath, ., exp, (]
[getResult, (, ), {, if, (, sumOfLogs, ., getN, (, ), >, 0, ), {, return, FastMath, ., exp, (]
[sumOfLogs, ., getN, (, ), >, 0, ), {, return, FastMath, ., exp, (, sumOfLogs, ., getResult, (, ), /]
[sumOfLogs, ., getN, (, ), >, 0, ), {, return, FastMath, ., exp, (, sumOfLogs, ., getResult, (, ), /]
[., exp, (, sumOfLogs, ., getResult, (, ), /, sumOfLogs, ., getN, (, ), ), ;, }, else, {, return]
[., exp, (, sumOfLogs, ., getResult, (, ), /, sumOfLogs, ., getN, (, ), ), ;, }, else, {, return]
[), ;, }, else, {, return, Double, ., NaN, ;, }, }, @, Override, public, void, clear, (, ), {]
[), ;, }, else, {, return, Double, ., NaN, ;, }, }, @, Override, public, void, clear, (, ), {]
[evaluate, (, final, double, [, ], values, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return]
[evaluate, (, final, double, [, ], values, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return]
[[, ], values, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., exp, (]
[[, ], values, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., exp, (]
[[, ], values, ,, final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., exp, (]
[final, int, begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., exp, (, sumOfLogs, ., evaluate, (]
[begin, ,, final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., exp, (, sumOfLogs, ., evaluate, (, values, ,]
[final, int, length, ), throws, MathIllegalArgumentException, {, return, FastMath, ., exp, (, sumOfLogs, ., evaluate, (, values, ,, begin, ,]
[), throws, MathIllegalArgumentException, {, return, FastMath, ., exp, (, sumOfLogs, ., evaluate, (, values, ,, begin, ,, length, ), /]
[evaluate, (, values, ,, begin, ,, length, ), /, length, ), ;, }, public, long, getN, (, ), {, return]
[evaluate, (, values, ,, begin, ,, length, ), /, length, ), ;, }, public, long, getN, (, ), {, return]
[), {, return, sumOfLogs, ., getN, (, ), ;, }, public, void, setSumLogImpl, (, StorelessUnivariateStatistic, sumLogImpl, ), throws, MathIllegalStateException, {]
[., getN, (, ), ;, }, public, void, setSumLogImpl, (, StorelessUnivariateStatistic, sumLogImpl, ), throws, MathIllegalStateException, {, checkEmpty, (, ), ;]
[., getN, (, ), ;, }, public, void, setSumLogImpl, (, StorelessUnivariateStatistic, sumLogImpl, ), throws, MathIllegalStateException, {, checkEmpty, (, ), ;]
[;, }, public, void, setSumLogImpl, (, StorelessUnivariateStatistic, sumLogImpl, ), throws, MathIllegalStateException, {, checkEmpty, (, ), ;, this, ., sumOfLogs, =]
[MathIllegalStateException, {, checkEmpty, (, ), ;, this, ., sumOfLogs, =, sumLogImpl, ;, }, public, StorelessUnivariateStatistic, getSumLogImpl, (, ), {, return]
[), {, return, sumOfLogs, ;, }, public, static, void, copy, (, GeometricMean, source, ,, GeometricMean, dest, ), throws, NullArgumentException, {]
[), {, return, sumOfLogs, ;, }, public, static, void, copy, (, GeometricMean, source, ,, GeometricMean, dest, ), throws, NullArgumentException, {]
[;, }, public, static, void, copy, (, GeometricMean, source, ,, GeometricMean, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (]
[static, void, copy, (, GeometricMean, source, ,, GeometricMean, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;]
[static, void, copy, (, GeometricMean, source, ,, GeometricMean, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;]
[GeometricMean, source, ,, GeometricMean, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (]
[GeometricMean, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;]
[GeometricMean, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;]
[NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (]
[NullArgumentException, {, MathUtils, ., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;]
[checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., sumOfLogs, =]
[checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., sumOfLogs, =]
[checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., sumOfLogs, =]
[=, source, ., sumOfLogs, ., copy, (, ), ;, }, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (]
[=, source, ., sumOfLogs, ., copy, (, ), ;, }, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (]
[., copy, (, ), ;, }, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (, getN, (, ), >]
[;, }, private, void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (, getN, (, ), >, 0, ), {, throw]
[void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (, getN, (, ), >, 0, ), {, throw, new, MathIllegalStateException, (]
[void, checkEmpty, (, ), throws, MathIllegalStateException, {, if, (, getN, (, ), >, 0, ), {, throw, new, MathIllegalStateException, (]
[throws, MathIllegalStateException, {, if, (, getN, (, ), >, 0, ), {, throw, new, MathIllegalStateException, (, LocalizedFormats, ., VALUES_ADDED_BEFORE_CONFIGURING_STATISTIC, ,]
