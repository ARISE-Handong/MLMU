[;, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, Area, shape]
[;, int, minY, =, (, int, ), (, plotArea, ., getMinY, (, ), ), ;, int, maxY, =, (, int]
[;, int, maxY, =, (, int, ), (, plotArea, ., getMaxY, (, ), ), ;, int, midY, =, (, (]
[;, int, maxY, =, (, int, ), (, plotArea, ., getMaxY, (, ), ), ;, int, midY, =, (, (]
[), ;, int, maxY, =, (, int, ), (, plotArea, ., getMaxY, (, ), ), ;, int, midY, =, (]
[., getMinY, (, ), ), ;, int, maxY, =, (, int, ), (, plotArea, ., getMaxY, (, ), ), ;]
[;, int, midY, =, (, (, maxY, -, minY, ), /, 2, ), +, minY, ;, int, midX, =, (]
[;, int, midY, =, (, (, maxY, -, minY, ), /, 2, ), +, minY, ;, int, midX, =, (]
[), ;, int, midY, =, (, (, maxY, -, minY, ), /, 2, ), +, minY, ;, int, midX, =]
[., getMaxY, (, ), ), ;, int, midY, =, (, (, maxY, -, minY, ), /, 2, ), +, minY]
[;, int, midX, =, (, int, ), (, plotArea, ., getMinX, (, ), +, (, plotArea, ., getWidth, (, )]
[+, minY, ;, int, midX, =, (, int, ), (, plotArea, ., getMinX, (, ), +, (, plotArea, ., getWidth]
[), +, minY, ;, int, midX, =, (, int, ), (, plotArea, ., getMinX, (, ), +, (, plotArea, .]
[/, 2, ), +, minY, ;, int, midX, =, (, int, ), (, plotArea, ., getMinX, (, ), +, (]
[), /, 2, ), +, minY, ;, int, midX, =, (, int, ), (, plotArea, ., getMinX, (, ), +]
[-, minY, ), /, 2, ), +, minY, ;, int, midX, =, (, int, ), (, plotArea, ., getMinX, (]
[), /, 2, ), +, minY, ;, int, midX, =, (, int, ), (, plotArea, ., getMinX, (, ), +]
[), +, minY, ;, int, midX, =, (, int, ), (, plotArea, ., getMinX, (, ), +, (, plotArea, .]
[;, int, midX, =, (, int, ), (, plotArea, ., getMinX, (, ), +, (, plotArea, ., getWidth, (, )]
[;, int, lenX, =, (, int, ), (, plotArea, ., getWidth, (, ), /, 10, ), ;, if, (, lenX]
[;, int, lenX, =, (, int, ), (, plotArea, ., getWidth, (, ), /, 10, ), ;, if, (, lenX]
[), ;, int, lenX, =, (, int, ), (, plotArea, ., getWidth, (, ), /, 10, ), ;, if, (]
[+, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, int, lenX, =, (, int, ), (, plotArea]
[., getMinX, (, ), +, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, int, lenX, =, (]
[), ;, int, lenX, =, (, int, ), (, plotArea, ., getWidth, (, ), /, 10, ), ;, if, (]
[), ), ;, int, lenX, =, (, int, ), (, plotArea, ., getWidth, (, ), /, 10, ), ;, if]
[/, 2, ), ), ;, int, lenX, =, (, int, ), (, plotArea, ., getWidth, (, ), /, 10, )]
[., getWidth, (, ), /, 2, ), ), ;, int, lenX, =, (, int, ), (, plotArea, ., getWidth, (]
[), ), ;, int, lenX, =, (, int, ), (, plotArea, ., getWidth, (, ), /, 10, ), ;, if]
[;, if, (, lenX, <, 2, ), {, lenX, =, 2, ;, }, pointer, ., moveTo, (, midX, -, lenX]
[;, if, (, lenX, <, 2, ), {, lenX, =, 2, ;, }, pointer, ., moveTo, (, midX, -, lenX]
[), ;, if, (, lenX, <, 2, ), {, lenX, =, 2, ;, }, pointer, ., moveTo, (, midX, -]
[/, 10, ), ;, if, (, lenX, <, 2, ), {, lenX, =, 2, ;, }, pointer, ., moveTo, (]
[., getWidth, (, ), /, 10, ), ;, if, (, lenX, <, 2, ), {, lenX, =, 2, ;, }]
[), ;, if, (, lenX, <, 2, ), {, lenX, =, 2, ;, }, pointer, ., moveTo, (, midX, -]
[), {, lenX, =, 2, ;, }, pointer, ., moveTo, (, midX, -, lenX, ,, midY, -, lenX, ), ;]
[<, 2, ), {, lenX, =, 2, ;, }, pointer, ., moveTo, (, midX, -, lenX, ,, midY, -, lenX]
[), {, lenX, =, 2, ;, }, pointer, ., moveTo, (, midX, -, lenX, ,, midY, -, lenX, ), ;]
[=, 2, ;, }, pointer, ., moveTo, (, midX, -, lenX, ,, midY, -, lenX, ), ;, pointer, ., lineTo]
[;, }, pointer, ., moveTo, (, midX, -, lenX, ,, midY, -, lenX, ), ;, pointer, ., lineTo, (, midX]
[;, pointer, ., lineTo, (, midX, +, lenX, ,, midY, -, lenX, ), ;, pointer, ., lineTo, (, midX, ,]
[., moveTo, (, midX, -, lenX, ,, midY, -, lenX, ), ;, pointer, ., lineTo, (, midX, +, lenX, ,]
[,, midY, -, lenX, ), ;, pointer, ., lineTo, (, midX, +, lenX, ,, midY, -, lenX, ), ;, pointer]
[-, lenX, ,, midY, -, lenX, ), ;, pointer, ., lineTo, (, midX, +, lenX, ,, midY, -, lenX, )]
[,, midY, -, lenX, ), ;, pointer, ., lineTo, (, midX, +, lenX, ,, midY, -, lenX, ), ;, pointer]
[), ;, pointer, ., lineTo, (, midX, +, lenX, ,, midY, -, lenX, ), ;, pointer, ., lineTo, (, midX]
[-, lenX, ), ;, pointer, ., lineTo, (, midX, +, lenX, ,, midY, -, lenX, ), ;, pointer, ., lineTo]
[), ;, pointer, ., lineTo, (, midX, +, lenX, ,, midY, -, lenX, ), ;, pointer, ., lineTo, (, midX]
[;, pointer, ., lineTo, (, midX, ,, minY, ), ;, pointer, ., closePath, (, ), ;, lenX, =, 4, *]
[., lineTo, (, midX, +, lenX, ,, midY, -, lenX, ), ;, pointer, ., lineTo, (, midX, ,, minY, )]
[,, midY, -, lenX, ), ;, pointer, ., lineTo, (, midX, ,, minY, ), ;, pointer, ., closePath, (, )]
[+, lenX, ,, midY, -, lenX, ), ;, pointer, ., lineTo, (, midX, ,, minY, ), ;, pointer, ., closePath]
[,, midY, -, lenX, ), ;, pointer, ., lineTo, (, midX, ,, minY, ), ;, pointer, ., closePath, (, )]
[), ;, pointer, ., lineTo, (, midX, ,, minY, ), ;, pointer, ., closePath, (, ), ;, lenX, =, 4]
[-, lenX, ), ;, pointer, ., lineTo, (, midX, ,, minY, ), ;, pointer, ., closePath, (, ), ;, lenX]
[), ;, pointer, ., lineTo, (, midX, ,, minY, ), ;, pointer, ., closePath, (, ), ;, lenX, =, 4]
[;, pointer, ., closePath, (, ), ;, lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, ., Double]
[., lineTo, (, midX, ,, minY, ), ;, pointer, ., closePath, (, ), ;, lenX, =, 4, *, lenX, ;]
[,, minY, ), ;, pointer, ., closePath, (, ), ;, lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =, new]
[), ;, pointer, ., closePath, (, ), ;, lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, .]
[;, lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (, midX, -, lenX, /, 2]
[., closePath, (, ), ;, lenX, =, 4, *, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (, midX]
[=, 4, *, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (, midX, -, lenX, /, 2, ,, midY]
[;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (, midX, -, lenX, /, 2, ,, midY, -, lenX, ,, lenX]
[*, lenX, ;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (, midX, -, lenX, /, 2, ,, midY, -, lenX]
[;, Ellipse2D, circle, =, new, Ellipse2D, ., Double, (, midX, -, lenX, /, 2, ,, midY, -, lenX, ,, lenX]
[;, shape, =, new, Area, (, circle, ), ;, shape, ., add, (, new, Area, (, pointer, ), ), ;]
[,, midY, -, lenX, ,, lenX, ,, lenX, ), ;, shape, =, new, Area, (, circle, ), ;, shape, .]
[-, lenX, /, 2, ,, midY, -, lenX, ,, lenX, ,, lenX, ), ;, shape, =, new, Area, (, circle]
[,, midY, -, lenX, ,, lenX, ,, lenX, ), ;, shape, =, new, Area, (, circle, ), ;, shape, .]
[/, 2, ,, midY, -, lenX, ,, lenX, ,, lenX, ), ;, shape, =, new, Area, (, circle, ), ;]
[,, midY, -, lenX, ,, lenX, ,, lenX, ), ;, shape, =, new, Area, (, circle, ), ;, shape, .]
[,, lenX, ,, lenX, ), ;, shape, =, new, Area, (, circle, ), ;, shape, ., add, (, new, Area]
[-, lenX, ,, lenX, ,, lenX, ), ;, shape, =, new, Area, (, circle, ), ;, shape, ., add, (]
[,, lenX, ,, lenX, ), ;, shape, =, new, Area, (, circle, ), ;, shape, ., add, (, new, Area]
[,, lenX, ), ;, shape, =, new, Area, (, circle, ), ;, shape, ., add, (, new, Area, (, pointer]
[), ;, shape, =, new, Area, (, circle, ), ;, shape, ., add, (, new, Area, (, pointer, ), )]
[=, new, Area, (, circle, ), ;, shape, ., add, (, new, Area, (, pointer, ), ), ;, if, (]
[;, shape, ., add, (, new, Area, (, pointer, ), ), ;, if, (, (, rotate, !=, null, ), &&]
[), ;, shape, ., add, (, new, Area, (, pointer, ), ), ;, if, (, (, rotate, !=, null, )]
[;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), .]
[., add, (, new, Area, (, pointer, ), ), ;, if, (, (, rotate, !=, null, ), &&, (, angle]
[), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, )]
[), ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (]
[), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (]
[&&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (]
[), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX]
[!=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate]
[), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX]
[), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (]
[), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY]
[!=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate]
[), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY]
[;, shape, ., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (, g2, ,, shape, ), ;, }, public]
[., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, shape, .]
[,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, shape, ., transform, (, getTransform, (]
[,, rotate, ., getY, (, ), ), ;, shape, ., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (]
[., getX, (, ), ,, rotate, ., getY, (, ), ), ;, shape, ., transform, (, getTransform, (, ), )]
[), ;, shape, ., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (, g2, ,, shape, ), ;, }]
[., getY, (, ), ), ;, shape, ., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (, g2, ,]
[;, }, defaultDisplay, (, g2, ,, shape, ), ;, }, public, boolean, equals, (, Object, object, ), {, if, (]
[., transform, (, getTransform, (, ), ), ;, }, defaultDisplay, (, g2, ,, shape, ), ;, }, public, boolean, equals]
[), ;, }, defaultDisplay, (, g2, ,, shape, ), ;, }, public, boolean, equals, (, Object, object, ), {, if]
[;, }, public, boolean, equals, (, Object, object, ), {, if, (, object, ==, null, ), {, return, false, ;]
[,, shape, ), ;, }, public, boolean, equals, (, Object, object, ), {, if, (, object, ==, null, ), {]
[), ;, }, public, boolean, equals, (, Object, object, ), {, if, (, object, ==, null, ), {, return, false]
[), {, return, false, ;, }, if, (, object, ==, this, ), {, return, true, ;, }, if, (, super]
[==, null, ), {, return, false, ;, }, if, (, object, ==, this, ), {, return, true, ;, }, if]
[), {, return, false, ;, }, if, (, object, ==, this, ), {, return, true, ;, }, if, (, super]
[;, }, if, (, object, ==, this, ), {, return, true, ;, }, if, (, super, ., equals, (, object]
[), {, return, true, ;, }, if, (, super, ., equals, (, object, ), &&, object, instanceof, MiddlePinNeedle, ), {]
[==, this, ), {, return, true, ;, }, if, (, super, ., equals, (, object, ), &&, object, instanceof, MiddlePinNeedle]
[), {, return, true, ;, }, if, (, super, ., equals, (, object, ), &&, object, instanceof, MiddlePinNeedle, ), {]
[;, }, if, (, super, ., equals, (, object, ), &&, object, instanceof, MiddlePinNeedle, ), {, return, true, ;, }]
[), {, return, true, ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode]
[&&, object, instanceof, MiddlePinNeedle, ), {, return, true, ;, }, return, false, ;, }, public, int, hashCode, (, ), {]
[., equals, (, object, ), &&, object, instanceof, MiddlePinNeedle, ), {, return, true, ;, }, return, false, ;, }, public]
[), &&, object, instanceof, MiddlePinNeedle, ), {, return, true, ;, }, return, false, ;, }, public, int, hashCode, (, )]
[), {, return, true, ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode]
[instanceof, MiddlePinNeedle, ), {, return, true, ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, super]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, super, ., hashCode, (, ), ;, }]
[;, }, public, int, hashCode, (, ), {, return, super, ., hashCode, (, ), ;, }, public, Object, clone, (]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, }]
[., hashCode, (, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, )]
[;, }, }]
[., clone, (, ), ;, }, }]
