[util, ., List, ;, class, FunctionRewriter, implements, CompilerPass, {, private, final, AbstractCompiler, compiler, ;, private, static, final, int, SAVINGS_THRESHOLD, =]
[{, private, final, AbstractCompiler, compiler, ;, private, static, final, int, SAVINGS_THRESHOLD, =, 16, ;, FunctionRewriter, (, AbstractCompiler, compiler, ), {]
[{, private, final, AbstractCompiler, compiler, ;, private, static, final, int, SAVINGS_THRESHOLD, =, 16, ;, FunctionRewriter, (, AbstractCompiler, compiler, ), {]
[compiler, ;, private, static, final, int, SAVINGS_THRESHOLD, =, 16, ;, FunctionRewriter, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
[}, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, List, <, Reducer, >, reducers, =]
[}, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, List, <, Reducer, >, reducers, =]
[void, process, (, Node, externs, ,, Node, root, ), {, List, <, Reducer, >, reducers, =, ImmutableList, ., of, (]
[,, Node, root, ), {, List, <, Reducer, >, reducers, =, ImmutableList, ., of, (, new, ReturnConstantReducer, (, ), ,]
[List, <, Reducer, >, reducers, =, ImmutableList, ., of, (, new, ReturnConstantReducer, (, ), ,, new, GetterReducer, (, ), ,]
[=, ImmutableList, ., of, (, new, ReturnConstantReducer, (, ), ,, new, GetterReducer, (, ), ,, new, SetterReducer, (, ), ,]
[new, ReturnConstantReducer, (, ), ,, new, GetterReducer, (, ), ,, new, SetterReducer, (, ), ,, new, EmptyFunctionReducer, (, ), ,]
[,, new, EmptyFunctionReducer, (, ), ,, new, IdentityReducer, (, ), ), ;, Multimap, <, Reducer, ,, Reduction, >, reductionMap, =]
[,, new, EmptyFunctionReducer, (, ), ,, new, IdentityReducer, (, ), ), ;, Multimap, <, Reducer, ,, Reduction, >, reductionMap, =]
[new, IdentityReducer, (, ), ), ;, Multimap, <, Reducer, ,, Reduction, >, reductionMap, =, HashMultimap, ., create, (, ), ;]
[new, IdentityReducer, (, ), ), ;, Multimap, <, Reducer, ,, Reduction, >, reductionMap, =, HashMultimap, ., create, (, ), ;]
[), ;, Multimap, <, Reducer, ,, Reduction, >, reductionMap, =, HashMultimap, ., create, (, ), ;, NodeTraversal, ., traverse, (]
[Multimap, <, Reducer, ,, Reduction, >, reductionMap, =, HashMultimap, ., create, (, ), ;, NodeTraversal, ., traverse, (, compiler, ,]
[Reducer, ,, Reduction, >, reductionMap, =, HashMultimap, ., create, (, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,]
[>, reductionMap, =, HashMultimap, ., create, (, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, ReductionGatherer, (]
[=, HashMultimap, ., create, (, ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, ReductionGatherer, (, reducers, ,]
[traverse, (, compiler, ,, root, ,, new, ReductionGatherer, (, reducers, ,, reductionMap, ), ), ;, for, (, Reducer, reducer, :]
[reducers, ,, reductionMap, ), ), ;, for, (, Reducer, reducer, :, reducers, ), {, Collection, <, Reduction, >, reductions, =]
[reducers, ,, reductionMap, ), ), ;, for, (, Reducer, reducer, :, reducers, ), {, Collection, <, Reduction, >, reductions, =]
[), ;, for, (, Reducer, reducer, :, reducers, ), {, Collection, <, Reduction, >, reductions, =, reductionMap, ., get, (]
[reducer, :, reducers, ), {, Collection, <, Reduction, >, reductions, =, reductionMap, ., get, (, reducer, ), ;, if, (]
[reducer, :, reducers, ), {, Collection, <, Reduction, >, reductions, =, reductionMap, ., get, (, reducer, ), ;, if, (]
[get, (, reducer, ), ;, if, (, reductions, ., isEmpty, (, ), ), {, continue, ;, }, Node, helperCode, =]
[reducer, ), ;, if, (, reductions, ., isEmpty, (, ), ), {, continue, ;, }, Node, helperCode, =, parseHelperCode, (]
[reductions, ., isEmpty, (, ), ), {, continue, ;, }, Node, helperCode, =, parseHelperCode, (, reducer, ), ;, if, (]
[reductions, ., isEmpty, (, ), ), {, continue, ;, }, Node, helperCode, =, parseHelperCode, (, reducer, ), ;, if, (]
[isEmpty, (, ), ), {, continue, ;, }, Node, helperCode, =, parseHelperCode, (, reducer, ), ;, if, (, helperCode, ==]
[helperCode, =, parseHelperCode, (, reducer, ), ;, if, (, helperCode, ==, null, ), {, continue, ;, }, int, helperCodeCost, =]
[helperCode, =, parseHelperCode, (, reducer, ), ;, if, (, helperCode, ==, null, ), {, continue, ;, }, int, helperCodeCost, =]
[reducer, ), ;, if, (, helperCode, ==, null, ), {, continue, ;, }, int, helperCodeCost, =, InlineCostEstimator, ., getCost, (]
[==, null, ), {, continue, ;, }, int, helperCodeCost, =, InlineCostEstimator, ., getCost, (, helperCode, ), ;, int, savings, =]
[int, helperCodeCost, =, InlineCostEstimator, ., getCost, (, helperCode, ), ;, int, savings, =, 0, ;, for, (, Reduction, reduction, :]
[InlineCostEstimator, ., getCost, (, helperCode, ), ;, int, savings, =, 0, ;, for, (, Reduction, reduction, :, reductions, ), {]
[getCost, (, helperCode, ), ;, int, savings, =, 0, ;, for, (, Reduction, reduction, :, reductions, ), {, savings, +=]
[getCost, (, helperCode, ), ;, int, savings, =, 0, ;, for, (, Reduction, reduction, :, reductions, ), {, savings, +=]
[;, for, (, Reduction, reduction, :, reductions, ), {, savings, +=, reduction, ., estimateSavings, (, ), ;, }, if, (]
[;, for, (, Reduction, reduction, :, reductions, ), {, savings, +=, reduction, ., estimateSavings, (, ), ;, }, if, (]
[(, Reduction, reduction, :, reductions, ), {, savings, +=, reduction, ., estimateSavings, (, ), ;, }, if, (, savings, >]
[Reduction, reduction, :, reductions, ), {, savings, +=, reduction, ., estimateSavings, (, ), ;, }, if, (, savings, >, (]
[Reduction, reduction, :, reductions, ), {, savings, +=, reduction, ., estimateSavings, (, ), ;, }, if, (, savings, >, (]
[:, reductions, ), {, savings, +=, reduction, ., estimateSavings, (, ), ;, }, if, (, savings, >, (, helperCodeCost, +]
[(, ), ;, }, if, (, savings, >, (, helperCodeCost, +, SAVINGS_THRESHOLD, ), ), {, for, (, Reduction, reduction, :]
[}, if, (, savings, >, (, helperCodeCost, +, SAVINGS_THRESHOLD, ), ), {, for, (, Reduction, reduction, :, reductions, ), {]
[}, if, (, savings, >, (, helperCodeCost, +, SAVINGS_THRESHOLD, ), ), {, for, (, Reduction, reduction, :, reductions, ), {]
[), {, for, (, Reduction, reduction, :, reductions, ), {, reduction, ., apply, (, ), ;, }, Node, addingRoot, =]
[), {, for, (, Reduction, reduction, :, reductions, ), {, reduction, ., apply, (, ), ;, }, Node, addingRoot, =]
[Reduction, reduction, :, reductions, ), {, reduction, ., apply, (, ), ;, }, Node, addingRoot, =, compiler, ., getNodeForCodeInsertion, (]
[reductions, ), {, reduction, ., apply, (, ), ;, }, Node, addingRoot, =, compiler, ., getNodeForCodeInsertion, (, null, ), ;]
[reductions, ), {, reduction, ., apply, (, ), ;, }, Node, addingRoot, =, compiler, ., getNodeForCodeInsertion, (, null, ), ;]
[., apply, (, ), ;, }, Node, addingRoot, =, compiler, ., getNodeForCodeInsertion, (, null, ), ;, addingRoot, ., addChildrenToFront, (]
[), ;, }, Node, addingRoot, =, compiler, ., getNodeForCodeInsertion, (, null, ), ;, addingRoot, ., addChildrenToFront, (, helperCode, ), ;]
[), ;, }, Node, addingRoot, =, compiler, ., getNodeForCodeInsertion, (, null, ), ;, addingRoot, ., addChildrenToFront, (, helperCode, ), ;]
[compiler, ., reportCodeChange, (, ), ;, }, }, }, public, Node, parseHelperCode, (, Reducer, reducer, ), {, Node, root, =]
[compiler, ., reportCodeChange, (, ), ;, }, }, }, public, Node, parseHelperCode, (, Reducer, reducer, ), {, Node, root, =]
[), ;, }, }, }, public, Node, parseHelperCode, (, Reducer, reducer, ), {, Node, root, =, compiler, ., parseSyntheticCode, (]
[), ;, }, }, }, public, Node, parseHelperCode, (, Reducer, reducer, ), {, Node, root, =, compiler, ., parseSyntheticCode, (]
[), ;, }, }, }, public, Node, parseHelperCode, (, Reducer, reducer, ), {, Node, root, =, compiler, ., parseSyntheticCode, (]
[), ;, }, }, }, public, Node, parseHelperCode, (, Reducer, reducer, ), {, Node, root, =, compiler, ., parseSyntheticCode, (]
[reducer, ), {, Node, root, =, compiler, ., parseSyntheticCode, (, reducer, ., getClass, (, ), ., toString, (, ), +]
[{, Node, root, =, compiler, ., parseSyntheticCode, (, reducer, ., getClass, (, ), ., toString, (, ), +, ":helper", ,]
[{, Node, root, =, compiler, ., parseSyntheticCode, (, reducer, ., getClass, (, ), ., toString, (, ), +, ":helper", ,]
[reducer, ., getClass, (, ), ., toString, (, ), +, ":helper", ,, reducer, ., getHelperSource, (, ), ), ;, return]
[reducer, ., getClass, (, ), ., toString, (, ), +, ":helper", ,, reducer, ., getHelperSource, (, ), ), ;, return]
[., getClass, (, ), ., toString, (, ), +, ":helper", ,, reducer, ., getHelperSource, (, ), ), ;, return, (]
[., getClass, (, ), ., toString, (, ), +, ":helper", ,, reducer, ., getHelperSource, (, ), ), ;, return, (]
[(, ), ., toString, (, ), +, ":helper", ,, reducer, ., getHelperSource, (, ), ), ;, return, (, root, !=]
[toString, (, ), +, ":helper", ,, reducer, ., getHelperSource, (, ), ), ;, return, (, root, !=, null, ), ?]
[toString, (, ), +, ":helper", ,, reducer, ., getHelperSource, (, ), ), ;, return, (, root, !=, null, ), ?]
[reducer, ., getHelperSource, (, ), ), ;, return, (, root, !=, null, ), ?, root, ., removeFirstChild, (, ), :]
[?, root, ., removeFirstChild, (, ), :, null, ;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {, return]
[?, root, ., removeFirstChild, (, ), :, null, ;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {, return]
[?, root, ., removeFirstChild, (, ), :, null, ;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {, return]
[(, ), :, null, ;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {, return, NodeUtil, ., isFunctionExpression, (]
[null, ;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {, return, NodeUtil, ., isFunctionExpression, (, n, ), &&]
[;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {, return, NodeUtil, ., isFunctionExpression, (, n, ), &&, !]
[;, }, private, static, boolean, isReduceableFunctionExpression, (, Node, n, ), {, return, NodeUtil, ., isFunctionExpression, (, n, ), &&, !]
[boolean, isReduceableFunctionExpression, (, Node, n, ), {, return, NodeUtil, ., isFunctionExpression, (, n, ), &&, !, NodeUtil, ., isGetOrSetKey, (]
[boolean, isReduceableFunctionExpression, (, Node, n, ), {, return, NodeUtil, ., isFunctionExpression, (, n, ), &&, !, NodeUtil, ., isGetOrSetKey, (]
[Node, oldChild, ;, private, final, Node, newChild, ;, Reduction, (, Node, parent, ,, Node, oldChild, ,, Node, newChild, ), {]
[Node, oldChild, ;, private, final, Node, newChild, ;, Reduction, (, Node, parent, ,, Node, oldChild, ,, Node, newChild, ), {]
[final, Node, newChild, ;, Reduction, (, Node, parent, ,, Node, oldChild, ,, Node, newChild, ), {, this, ., parent, =]
[newChild, ;, Reduction, (, Node, parent, ,, Node, oldChild, ,, Node, newChild, ), {, this, ., parent, =, parent, ;]
[newChild, ;, Reduction, (, Node, parent, ,, Node, oldChild, ,, Node, newChild, ), {, this, ., parent, =, parent, ;]
[Node, parent, ,, Node, oldChild, ,, Node, newChild, ), {, this, ., parent, =, parent, ;, this, ., oldChild, =]
[,, Node, oldChild, ,, Node, newChild, ), {, this, ., parent, =, parent, ;, this, ., oldChild, =, oldChild, ;]
[,, Node, oldChild, ,, Node, newChild, ), {, this, ., parent, =, parent, ;, this, ., oldChild, =, oldChild, ;]
[Node, newChild, ), {, this, ., parent, =, parent, ;, this, ., oldChild, =, oldChild, ;, this, ., newChild, =]
[parent, ;, this, ., oldChild, =, oldChild, ;, this, ., newChild, =, newChild, ;, }, void, apply, (, ), {]
[parent, ;, this, ., oldChild, =, oldChild, ;, this, ., newChild, =, newChild, ;, }, void, apply, (, ), {]
[oldChild, =, oldChild, ;, this, ., newChild, =, newChild, ;, }, void, apply, (, ), {, parent, ., replaceChild, (]
[oldChild, ;, this, ., newChild, =, newChild, ;, }, void, apply, (, ), {, parent, ., replaceChild, (, oldChild, ,]
[., newChild, =, newChild, ;, }, void, apply, (, ), {, parent, ., replaceChild, (, oldChild, ,, newChild, ), ;]
[., newChild, =, newChild, ;, }, void, apply, (, ), {, parent, ., replaceChild, (, oldChild, ,, newChild, ), ;]
[replaceChild, (, oldChild, ,, newChild, ), ;, compiler, ., reportCodeChange, (, ), ;, }, int, estimateSavings, (, ), {, return]
[replaceChild, (, oldChild, ,, newChild, ), ;, compiler, ., reportCodeChange, (, ), ;, }, int, estimateSavings, (, ), {, return]
[replaceChild, (, oldChild, ,, newChild, ), ;, compiler, ., reportCodeChange, (, ), ;, }, int, estimateSavings, (, ), {, return]
[newChild, ), ;, compiler, ., reportCodeChange, (, ), ;, }, int, estimateSavings, (, ), {, return, InlineCostEstimator, ., getCost, (]
[compiler, ., reportCodeChange, (, ), ;, }, int, estimateSavings, (, ), {, return, InlineCostEstimator, ., getCost, (, oldChild, ), -]
[compiler, ., reportCodeChange, (, ), ;, }, int, estimateSavings, (, ), {, return, InlineCostEstimator, ., getCost, (, oldChild, ), -]
[), ;, }, int, estimateSavings, (, ), {, return, InlineCostEstimator, ., getCost, (, oldChild, ), -, InlineCostEstimator, ., getCost, (]
[>, reductions, ;, ReductionGatherer, (, List, <, Reducer, >, reducers, ,, Multimap, <, Reducer, ,, Reduction, >, reductions, ), {]
[>, reductions, ;, ReductionGatherer, (, List, <, Reducer, >, reducers, ,, Multimap, <, Reducer, ,, Reduction, >, reductions, ), {]
[(, List, <, Reducer, >, reducers, ,, Multimap, <, Reducer, ,, Reduction, >, reductions, ), {, this, ., reducers, =]
[<, Reducer, >, reducers, ,, Multimap, <, Reducer, ,, Reduction, >, reductions, ), {, this, ., reducers, =, reducers, ;]
[<, Reducer, >, reducers, ,, Multimap, <, Reducer, ,, Reduction, >, reductions, ), {, this, ., reducers, =, reducers, ;]
[,, Multimap, <, Reducer, ,, Reduction, >, reductions, ), {, this, ., reducers, =, reducers, ;, this, ., reductions, =]
[Override, public, boolean, shouldTraverse, (, NodeTraversal, raversal, ,, Node, node, ,, Node, parent, ), {, for, (, Reducer, reducer, :]
[raversal, ,, Node, node, ,, Node, parent, ), {, for, (, Reducer, reducer, :, reducers, ), {, Node, replacement, =]
[raversal, ,, Node, node, ,, Node, parent, ), {, for, (, Reducer, reducer, :, reducers, ), {, Node, replacement, =]
[,, Node, parent, ), {, for, (, Reducer, reducer, :, reducers, ), {, Node, replacement, =, reducer, ., reduce, (]
[for, (, Reducer, reducer, :, reducers, ), {, Node, replacement, =, reducer, ., reduce, (, node, ), ;, if, (]
[for, (, Reducer, reducer, :, reducers, ), {, Node, replacement, =, reducer, ., reduce, (, node, ), ;, if, (]
[Reducer, reducer, :, reducers, ), {, Node, replacement, =, reducer, ., reduce, (, node, ), ;, if, (, replacement, !=]
[reducers, ), {, Node, replacement, =, reducer, ., reduce, (, node, ), ;, if, (, replacement, !=, node, ), {]
[reducers, ), {, Node, replacement, =, reducer, ., reduce, (, node, ), ;, if, (, replacement, !=, node, ), {]
[replacement, =, reducer, ., reduce, (, node, ), ;, if, (, replacement, !=, node, ), {, reductions, ., put, (]
[reducer, ., reduce, (, node, ), ;, if, (, replacement, !=, node, ), {, reductions, ., put, (, reducer, ,]
[(, node, ), ;, if, (, replacement, !=, node, ), {, reductions, ., put, (, reducer, ,, new, Reduction, (]
[), ;, if, (, replacement, !=, node, ), {, reductions, ., put, (, reducer, ,, new, Reduction, (, parent, ,]
[if, (, replacement, !=, node, ), {, reductions, ., put, (, reducer, ,, new, Reduction, (, parent, ,, node, ,]
[), {, reductions, ., put, (, reducer, ,, new, Reduction, (, parent, ,, node, ,, replacement, ), ), ;, return]
[(, reducer, ,, new, Reduction, (, parent, ,, node, ,, replacement, ), ), ;, return, false, ;, }, }, return]
[), ;, protected, final, Node, buildCallNode, (, String, methodName, ,, Node, argumentNode, ,, Node, srcref, ), {, Node, call, =]
[), ;, protected, final, Node, buildCallNode, (, String, methodName, ,, Node, argumentNode, ,, Node, srcref, ), {, Node, call, =]
[), ;, protected, final, Node, buildCallNode, (, String, methodName, ,, Node, argumentNode, ,, Node, srcref, ), {, Node, call, =]
[Node, buildCallNode, (, String, methodName, ,, Node, argumentNode, ,, Node, srcref, ), {, Node, call, =, IR, ., call, (]
[Node, buildCallNode, (, String, methodName, ,, Node, argumentNode, ,, Node, srcref, ), {, Node, call, =, IR, ., call, (]
[methodName, ,, Node, argumentNode, ,, Node, srcref, ), {, Node, call, =, IR, ., call, (, IR, ., name, (]
[srcref, ), {, Node, call, =, IR, ., call, (, IR, ., name, (, methodName, ), ), ., srcref, (]
[Node, call, =, IR, ., call, (, IR, ., name, (, methodName, ), ), ., srcref, (, srcref, ), ;]
[Node, call, =, IR, ., call, (, IR, ., name, (, methodName, ), ), ., srcref, (, srcref, ), ;]
[., call, (, IR, ., name, (, methodName, ), ), ., srcref, (, srcref, ), ;, call, ., putBooleanProp, (]
[., call, (, IR, ., name, (, methodName, ), ), ., srcref, (, srcref, ), ;, call, ., putBooleanProp, (]
[., name, (, methodName, ), ), ., srcref, (, srcref, ), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,]
[), ., srcref, (, srcref, ), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, if, (]
[), ., srcref, (, srcref, ), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, if, (]
[srcref, (, srcref, ), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, if, (, argumentNode, !=]
[), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, if, (, argumentNode, !=, null, ), {]
[), ;, call, ., putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, if, (, argumentNode, !=, null, ), {]
[putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, if, (, argumentNode, !=, null, ), {, call, ., addChildToBack, (]
[putBooleanProp, (, Node, ., FREE_CALL, ,, true, ), ;, if, (, argumentNode, !=, null, ), {, call, ., addChildToBack, (]
[if, (, argumentNode, !=, null, ), {, call, ., addChildToBack, (, argumentNode, ., cloneTree, (, ), ), ;, }, return]
[), ;, }, return, call, ;, }, }, private, static, class, EmptyFunctionReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =]
[}, private, static, class, EmptyFunctionReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_emptyFn", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, EmptyFunctionReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_emptyFn", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, EmptyFunctionReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_emptyFn", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, EmptyFunctionReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_emptyFn", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, EmptyFunctionReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_emptyFn", ;, static, final, String, HELPER_SOURCE, =]
[static, class, EmptyFunctionReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_emptyFn", ;, static, final, String, HELPER_SOURCE, =, "function ", +]
[EmptyFunctionReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_emptyFn", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +]
[Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_emptyFn", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "() {", +]
[static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_emptyFn", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "() {", +, "  return function() {}", +]
[=, "function ", +, FACTORY_METHOD_NAME, +, "() {", +, "  return function() {}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return]
[getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (]
[getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (]
[return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, NodeUtil, ., isEmptyFunctionExpression, (]
[Override, public, Node, reduce, (, Node, node, ), {, if, (, NodeUtil, ., isEmptyFunctionExpression, (, node, ), ), {, return]
[Node, reduce, (, Node, node, ), {, if, (, NodeUtil, ., isEmptyFunctionExpression, (, node, ), ), {, return, buildCallNode, (]
[(, Node, node, ), {, if, (, NodeUtil, ., isEmptyFunctionExpression, (, node, ), ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,]
[node, ), {, if, (, NodeUtil, ., isEmptyFunctionExpression, (, node, ), ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, null, ,]
[isEmptyFunctionExpression, (, node, ), ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, null, ,, node, ), ;, }, else, {, return]
[}, abstract, static, class, SingleReturnStatementReducer, extends, Reducer, {, protected, final, Node, maybeGetSingleReturnRValue, (, Node, functionNode, ), {, Node, body, =]
[}, abstract, static, class, SingleReturnStatementReducer, extends, Reducer, {, protected, final, Node, maybeGetSingleReturnRValue, (, Node, functionNode, ), {, Node, body, =]
[protected, final, Node, maybeGetSingleReturnRValue, (, Node, functionNode, ), {, Node, body, =, functionNode, ., getLastChild, (, ), ;, if, (]
[final, Node, maybeGetSingleReturnRValue, (, Node, functionNode, ), {, Node, body, =, functionNode, ., getLastChild, (, ), ;, if, (, !]
[final, Node, maybeGetSingleReturnRValue, (, Node, functionNode, ), {, Node, body, =, functionNode, ., getLastChild, (, ), ;, if, (, !]
[Node, body, =, functionNode, ., getLastChild, (, ), ;, if, (, !, body, ., hasOneChild, (, ), ), {, return]
[(, ), ;, if, (, !, body, ., hasOneChild, (, ), ), {, return, null, ;, }, Node, statement, =]
[(, ), ;, if, (, !, body, ., hasOneChild, (, ), ), {, return, null, ;, }, Node, statement, =]
[hasOneChild, (, ), ), {, return, null, ;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (]
[hasOneChild, (, ), ), {, return, null, ;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (]
[}, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (, statement, ., isReturn, (, ), ), {, return]
[}, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (, statement, ., isReturn, (, ), ), {, return]
[), ;, if, (, statement, ., isReturn, (, ), ), {, return, statement, ., getFirstChild, (, ), ;, }, return]
[), ;, }, return, null, ;, }, }, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =]
[}, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =]
[static, class, IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =, "function ", +]
[IdentityReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +]
[SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "() {", +]
[static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "() {", +, "  return function(", +]
[String, FACTORY_METHOD_NAME, =, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "() {", +, "  return function(", +, FACTORY_METHOD_NAME, +]
[=, "JSCompiler_identityFn", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "() {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +]
[;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "() {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "return ", +]
[final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "() {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "return ", +, FACTORY_METHOD_NAME, +]
[HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "() {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "return ", +, FACTORY_METHOD_NAME, +, "_value}", +]
[+, "_value) {", +, "return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return]
[getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (]
[(, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, !]
[{, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, !, isReduceableFunctionExpression, (]
[@, Override, public, Node, reduce, (, Node, node, ), {, if, (, !, isReduceableFunctionExpression, (, node, ), ), {, return]
[(, Node, node, ), {, if, (, !, isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, if, (]
[node, ), {, if, (, !, isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, if, (, isIdentityFunction, (]
[!, isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, if, (, isIdentityFunction, (, node, ), ), {, return]
[(, node, ), ), {, return, node, ;, }, if, (, isIdentityFunction, (, node, ), ), {, return, buildCallNode, (]
[), ), {, return, node, ;, }, if, (, isIdentityFunction, (, node, ), ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,]
[{, return, node, ;, }, if, (, isIdentityFunction, (, node, ), ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, null, ,]
[isIdentityFunction, (, node, ), ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, null, ,, node, ), ;, }, else, {, return]
[;, }, else, {, return, node, ;, }, }, private, boolean, isIdentityFunction, (, Node, functionNode, ), {, Node, argList, =]
[;, }, else, {, return, node, ;, }, }, private, boolean, isIdentityFunction, (, Node, functionNode, ), {, Node, argList, =]
[;, }, else, {, return, node, ;, }, }, private, boolean, isIdentityFunction, (, Node, functionNode, ), {, Node, argList, =]
[Node, functionNode, ), {, Node, argList, =, functionNode, ., getFirstChild, (, ), ., getNext, (, ), ;, Node, paramNode, =]
[Node, functionNode, ), {, Node, argList, =, functionNode, ., getFirstChild, (, ), ., getNext, (, ), ;, Node, paramNode, =]
[., getFirstChild, (, ), ., getNext, (, ), ;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (]
[., getFirstChild, (, ), ., getNext, (, ), ;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (]
[(, ), ., getNext, (, ), ;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (, paramNode, ==]
[(, ), ;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (, paramNode, ==, null, ), {, return]
[argList, ., getFirstChild, (, ), ;, if, (, paramNode, ==, null, ), {, return, false, ;, }, Node, value, =]
[getFirstChild, (, ), ;, if, (, paramNode, ==, null, ), {, return, false, ;, }, Node, value, =, maybeGetSingleReturnRValue, (]
[(, paramNode, ==, null, ), {, return, false, ;, }, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (]
[(, paramNode, ==, null, ), {, return, false, ;, }, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (]
[(, paramNode, ==, null, ), {, return, false, ;, }, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (]
[(, paramNode, ==, null, ), {, return, false, ;, }, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (]
[==, null, ), {, return, false, ;, }, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=]
[), {, return, false, ;, }, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&]
[), {, return, false, ;, }, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&]
[Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&, value, ., isName, (, ), &&]
[Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&, value, ., isName, (, ), &&]
[Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&, value, ., isName, (, ), &&]
[if, (, value, !=, null, &&, value, ., isName, (, ), &&, value, ., getString, (, ), ., equals, (]
[if, (, value, !=, null, &&, value, ., isName, (, ), &&, value, ., getString, (, ), ., equals, (]
[(, ), &&, value, ., getString, (, ), ., equals, (, paramNode, ., getString, (, ), ), ), {, return]
[., getString, (, ), ., equals, (, paramNode, ., getString, (, ), ), ), {, return, true, ;, }, return]
[true, ;, }, return, false, ;, }, }, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =]
[}, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =]
[static, class, ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =, "function ", +]
[ReturnConstantReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +]
[SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +]
[static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +]
[String, FACTORY_METHOD_NAME, =, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_value) {", +]
[=, "JSCompiler_returnArg", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "  return function() {return ", +]
[;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "  return function() {return ", +, FACTORY_METHOD_NAME, +]
[final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "  return function() {return ", +, FACTORY_METHOD_NAME, +, "_value}", +]
[+, "_value) {", +, "  return function() {return ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return]
[getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (]
[(, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, !]
[{, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, !, isReduceableFunctionExpression, (]
[@, Override, public, Node, reduce, (, Node, node, ), {, if, (, !, isReduceableFunctionExpression, (, node, ), ), {, return]
[Node, node, ), {, if, (, !, isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, Node, valueNode, =]
[), {, if, (, !, isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, Node, valueNode, =, getValueNode, (]
[isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, Node, valueNode, =, getValueNode, (, node, ), ;, if, (]
[isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, Node, valueNode, =, getValueNode, (, node, ), ;, if, (]
[node, ), ), {, return, node, ;, }, Node, valueNode, =, getValueNode, (, node, ), ;, if, (, valueNode, !=]
[return, node, ;, }, Node, valueNode, =, getValueNode, (, node, ), ;, if, (, valueNode, !=, null, ), {, return]
[;, }, Node, valueNode, =, getValueNode, (, node, ), ;, if, (, valueNode, !=, null, ), {, return, buildCallNode, (]
[Node, valueNode, =, getValueNode, (, node, ), ;, if, (, valueNode, !=, null, ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,]
[=, getValueNode, (, node, ), ;, if, (, valueNode, !=, null, ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, valueNode, ,]
[(, valueNode, !=, null, ), {, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, valueNode, ,, node, ), ;, }, else, {, return]
[;, }, else, {, return, node, ;, }, }, private, Node, getValueNode, (, Node, functionNode, ), {, Node, value, =]
[else, {, return, node, ;, }, }, private, Node, getValueNode, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (]
[}, }, private, Node, getValueNode, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (]
[}, }, private, Node, getValueNode, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (]
[}, }, private, Node, getValueNode, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (]
[private, Node, getValueNode, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=]
[getValueNode, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&]
[getValueNode, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&]
[), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&, NodeUtil, ., isImmutableValue, (]
[maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&, NodeUtil, ., isImmutableValue, (, value, ), ), {, return]
[;, if, (, value, !=, null, &&, NodeUtil, ., isImmutableValue, (, value, ), ), {, return, value, ;, }, return]
[value, ;, }, return, null, ;, }, }, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =]
[}, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =]
[static, class, GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =, "function ", +]
[GetterReducer, extends, SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +]
[SingleReturnStatementReducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +]
[static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +]
[String, FACTORY_METHOD_NAME, =, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +]
[=, "JSCompiler_get", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function() {return this[", +]
[;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function() {return this[", +, FACTORY_METHOD_NAME, +]
[final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function() {return this[", +, FACTORY_METHOD_NAME, +, "_name]}", +]
[+, "_name) {", +, "  return function() {return this[", +, FACTORY_METHOD_NAME, +, "_name]}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return]
[getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (]
[(, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, !]
[{, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, !, isReduceableFunctionExpression, (]
[@, Override, public, Node, reduce, (, Node, node, ), {, if, (, !, isReduceableFunctionExpression, (, node, ), ), {, return]
[Node, node, ), {, if, (, !, isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, Node, propName, =]
[), {, if, (, !, isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, Node, propName, =, getGetPropertyName, (]
[isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, Node, propName, =, getGetPropertyName, (, node, ), ;, if, (]
[isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, Node, propName, =, getGetPropertyName, (, node, ), ;, if, (]
[node, ), ), {, return, node, ;, }, Node, propName, =, getGetPropertyName, (, node, ), ;, if, (, propName, !=]
[node, ;, }, Node, propName, =, getGetPropertyName, (, node, ), ;, if, (, propName, !=, null, ), {, if, (]
[;, }, Node, propName, =, getGetPropertyName, (, node, ), ;, if, (, propName, !=, null, ), {, if, (, !]
[;, }, Node, propName, =, getGetPropertyName, (, node, ), ;, if, (, propName, !=, null, ), {, if, (, !]
[), ;, if, (, propName, !=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw]
[(, propName, !=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (]
[(, propName, !=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (]
[!=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +]
[!=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +]
[if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (]
[if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (]
[throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (, propName, ., getType, (, ), ), ), ;, }, return]
[IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (, propName, ., getType, (, ), ), ), ;, }, return, buildCallNode, (]
["Expected STRING, got ", +, Token, ., name, (, propName, ., getType, (, ), ), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,]
[Token, ., name, (, propName, ., getType, (, ), ), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,]
[(, ), ), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node, ), ;, }, else, {, return]
[;, }, else, {, return, node, ;, }, }, private, Node, getGetPropertyName, (, Node, functionNode, ), {, Node, value, =]
[else, {, return, node, ;, }, }, private, Node, getGetPropertyName, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (]
[}, }, private, Node, getGetPropertyName, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (]
[}, }, private, Node, getGetPropertyName, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (]
[}, }, private, Node, getGetPropertyName, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (]
[}, }, private, Node, getGetPropertyName, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (]
[private, Node, getGetPropertyName, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=]
[getGetPropertyName, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&]
[getGetPropertyName, (, Node, functionNode, ), {, Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&]
[Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&, value, ., isGetProp, (, ), &&]
[Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&, value, ., isGetProp, (, ), &&]
[Node, value, =, maybeGetSingleReturnRValue, (, functionNode, ), ;, if, (, value, !=, null, &&, value, ., isGetProp, (, ), &&]
[null, &&, value, ., isGetProp, (, ), &&, value, ., getFirstChild, (, ), ., isThis, (, ), ), {, return]
[null, &&, value, ., isGetProp, (, ), &&, value, ., getFirstChild, (, ), ., isThis, (, ), ), {, return]
[value, ., getFirstChild, (, ), ., isThis, (, ), ), {, return, value, ., getLastChild, (, ), ;, }, return]
[), ;, }, return, null, ;, }, }, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[}, private, static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =]
[static, class, SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =, "function ", +]
[SetterReducer, extends, Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +]
[Reducer, {, static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +]
[static, final, String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +]
[String, FACTORY_METHOD_NAME, =, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +]
[=, "JSCompiler_set", ;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +]
[;, static, final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +]
[final, String, HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +]
[HELPER_SOURCE, =, "function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +]
["function ", +, FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +]
[FACTORY_METHOD_NAME, +, "(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +]
["(", +, FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +]
[FACTORY_METHOD_NAME, +, "_name) {", +, "  return function(", +, FACTORY_METHOD_NAME, +, "_value) {", +, "this[", +, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +]
[+, FACTORY_METHOD_NAME, +, "_name] = ", +, FACTORY_METHOD_NAME, +, "_value}", +, "}", ;, @, Override, public, String, getHelperSource, (, ), {, return]
[getHelperSource, (, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (]
[(, ), {, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, !]
[{, return, HELPER_SOURCE, ;, }, @, Override, public, Node, reduce, (, Node, node, ), {, if, (, !, isReduceableFunctionExpression, (]
[@, Override, public, Node, reduce, (, Node, node, ), {, if, (, !, isReduceableFunctionExpression, (, node, ), ), {, return]
[Node, node, ), {, if, (, !, isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, Node, propName, =]
[), {, if, (, !, isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, Node, propName, =, getSetPropertyName, (]
[isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, Node, propName, =, getSetPropertyName, (, node, ), ;, if, (]
[isReduceableFunctionExpression, (, node, ), ), {, return, node, ;, }, Node, propName, =, getSetPropertyName, (, node, ), ;, if, (]
[node, ), ), {, return, node, ;, }, Node, propName, =, getSetPropertyName, (, node, ), ;, if, (, propName, !=]
[node, ;, }, Node, propName, =, getSetPropertyName, (, node, ), ;, if, (, propName, !=, null, ), {, if, (]
[;, }, Node, propName, =, getSetPropertyName, (, node, ), ;, if, (, propName, !=, null, ), {, if, (, !]
[;, }, Node, propName, =, getSetPropertyName, (, node, ), ;, if, (, propName, !=, null, ), {, if, (, !]
[), ;, if, (, propName, !=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw]
[(, propName, !=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (]
[(, propName, !=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (]
[!=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +]
[!=, null, ), {, if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +]
[if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (]
[if, (, !, propName, ., isString, (, ), ), {, throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (]
[throw, new, IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (, propName, ., getType, (, ), ), ), ;, }, return]
[IllegalStateException, (, "Expected STRING, got ", +, Token, ., name, (, propName, ., getType, (, ), ), ), ;, }, return, buildCallNode, (]
["Expected STRING, got ", +, Token, ., name, (, propName, ., getType, (, ), ), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,]
[Token, ., name, (, propName, ., getType, (, ), ), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,]
[(, ), ), ), ;, }, return, buildCallNode, (, FACTORY_METHOD_NAME, ,, propName, ,, node, ), ;, }, else, {, return]
[;, }, else, {, return, node, ;, }, }, private, Node, getSetPropertyName, (, Node, functionNode, ), {, Node, body, =]
[;, }, else, {, return, node, ;, }, }, private, Node, getSetPropertyName, (, Node, functionNode, ), {, Node, body, =]
[}, private, Node, getSetPropertyName, (, Node, functionNode, ), {, Node, body, =, functionNode, ., getLastChild, (, ), ;, if, (]
[private, Node, getSetPropertyName, (, Node, functionNode, ), {, Node, body, =, functionNode, ., getLastChild, (, ), ;, if, (, !]
[private, Node, getSetPropertyName, (, Node, functionNode, ), {, Node, body, =, functionNode, ., getLastChild, (, ), ;, if, (, !]
[Node, body, =, functionNode, ., getLastChild, (, ), ;, if, (, !, body, ., hasOneChild, (, ), ), {, return]
[(, ), ;, if, (, !, body, ., hasOneChild, (, ), ), {, return, null, ;, }, Node, argList, =]
[(, ), ;, if, (, !, body, ., hasOneChild, (, ), ), {, return, null, ;, }, Node, argList, =]
[(, ), ;, if, (, !, body, ., hasOneChild, (, ), ), {, return, null, ;, }, Node, argList, =]
[return, null, ;, }, Node, argList, =, functionNode, ., getFirstChild, (, ), ., getNext, (, ), ;, Node, paramNode, =]
[return, null, ;, }, Node, argList, =, functionNode, ., getFirstChild, (, ), ., getNext, (, ), ;, Node, paramNode, =]
[., getFirstChild, (, ), ., getNext, (, ), ;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (]
[., getFirstChild, (, ), ., getNext, (, ), ;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (]
[(, ), ., getNext, (, ), ;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (, paramNode, ==]
[(, ), ;, Node, paramNode, =, argList, ., getFirstChild, (, ), ;, if, (, paramNode, ==, null, ), {, return]
[argList, ., getFirstChild, (, ), ;, if, (, paramNode, ==, null, ), {, return, null, ;, }, Node, statement, =]
[argList, ., getFirstChild, (, ), ;, if, (, paramNode, ==, null, ), {, return, null, ;, }, Node, statement, =]
[paramNode, ==, null, ), {, return, null, ;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (]
[==, null, ), {, return, null, ;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (, !]
[==, null, ), {, return, null, ;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (, !]
[return, null, ;, }, Node, statement, =, body, ., getFirstChild, (, ), ;, if, (, !, NodeUtil, ., isExprAssign, (]
[statement, =, body, ., getFirstChild, (, ), ;, if, (, !, NodeUtil, ., isExprAssign, (, statement, ), ), {, return]
[), ;, if, (, !, NodeUtil, ., isExprAssign, (, statement, ), ), {, return, null, ;, }, Node, assign, =]
[), ;, if, (, !, NodeUtil, ., isExprAssign, (, statement, ), ), {, return, null, ;, }, Node, assign, =]
[statement, ), ), {, return, null, ;, }, Node, assign, =, statement, ., getFirstChild, (, ), ;, Node, lhs, =]
[statement, ), ), {, return, null, ;, }, Node, assign, =, statement, ., getFirstChild, (, ), ;, Node, lhs, =]
[Node, assign, =, statement, ., getFirstChild, (, ), ;, Node, lhs, =, assign, ., getFirstChild, (, ), ;, if, (]
[Node, assign, =, statement, ., getFirstChild, (, ), ;, Node, lhs, =, assign, ., getFirstChild, (, ), ;, if, (]
[Node, assign, =, statement, ., getFirstChild, (, ), ;, Node, lhs, =, assign, ., getFirstChild, (, ), ;, if, (]
[(, ), ;, Node, lhs, =, assign, ., getFirstChild, (, ), ;, if, (, lhs, ., isGetProp, (, ), &&]
[(, ), ;, Node, lhs, =, assign, ., getFirstChild, (, ), ;, if, (, lhs, ., isGetProp, (, ), &&]
[(, ), ;, Node, lhs, =, assign, ., getFirstChild, (, ), ;, if, (, lhs, ., isGetProp, (, ), &&]
[lhs, ., isGetProp, (, ), &&, lhs, ., getFirstChild, (, ), ., isThis, (, ), ), {, Node, rhs, =]
[lhs, ., isGetProp, (, ), &&, lhs, ., getFirstChild, (, ), ., isThis, (, ), ), {, Node, rhs, =]
[getFirstChild, (, ), ., isThis, (, ), ), {, Node, rhs, =, assign, ., getLastChild, (, ), ;, if, (]
[getFirstChild, (, ), ., isThis, (, ), ), {, Node, rhs, =, assign, ., getLastChild, (, ), ;, if, (]
[getFirstChild, (, ), ., isThis, (, ), ), {, Node, rhs, =, assign, ., getLastChild, (, ), ;, if, (]
[), ), {, Node, rhs, =, assign, ., getLastChild, (, ), ;, if, (, rhs, ., isName, (, ), &&]
[), ), {, Node, rhs, =, assign, ., getLastChild, (, ), ;, if, (, rhs, ., isName, (, ), &&]
[), ), {, Node, rhs, =, assign, ., getLastChild, (, ), ;, if, (, rhs, ., isName, (, ), &&]
[getLastChild, (, ), ;, if, (, rhs, ., isName, (, ), &&, rhs, ., getString, (, ), ., equals, (]
[getLastChild, (, ), ;, if, (, rhs, ., isName, (, ), &&, rhs, ., getString, (, ), ., equals, (]
[&&, rhs, ., getString, (, ), ., equals, (, paramNode, ., getString, (, ), ), ), {, Node, propertyName, =]
[&&, rhs, ., getString, (, ), ., equals, (, paramNode, ., getString, (, ), ), ), {, Node, propertyName, =]
[equals, (, paramNode, ., getString, (, ), ), ), {, Node, propertyName, =, lhs, ., getLastChild, (, ), ;, return]
[(, ), ), ), {, Node, propertyName, =, lhs, ., getLastChild, (, ), ;, return, propertyName, ;, }, }, return]
