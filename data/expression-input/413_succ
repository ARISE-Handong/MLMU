[;, public, MidpointStepInterpolator, (, ), {, }, public, MidpointStepInterpolator, (, final, MidpointStepInterpolator, interpolator, ), {, super, (, interpolator, ), ;]
[), ;, }, @, Override, protected, StepInterpolator, doCopy, (, ), {, return, new, MidpointStepInterpolator, (, this, ), ;, }, @]
[;, }, @, Override, protected, void, computeInterpolatedStateAndDerivatives, (, final, double, theta, ,, final, double, oneMinusThetaH, ), {, final, double, coeffDot2]
[), ;, }, @, Override, protected, void, computeInterpolatedStateAndDerivatives, (, final, double, theta, ,, final, double, oneMinusThetaH, ), {, final, double]
[;, final, double, coeffDot1, =, 1, -, coeffDot2, ;, if, (, (, previousState, !=, null, ), &&, (, theta, <=]
[*, theta, ;, final, double, coeffDot1, =, 1, -, coeffDot2, ;, if, (, (, previousState, !=, null, ), &&, (]
[;, final, double, coeffDot1, =, 1, -, coeffDot2, ;, if, (, (, previousState, !=, null, ), &&, (, theta, <=]
[;, if, (, (, previousState, !=, null, ), &&, (, theta, <=, 0.5, ), ), {, final, double, coeff1, =]
[-, coeffDot2, ;, if, (, (, previousState, !=, null, ), &&, (, theta, <=, 0.5, ), ), {, final, double]
[;, if, (, (, previousState, !=, null, ), &&, (, theta, <=, 0.5, ), ), {, final, double, coeff1, =]
[), {, final, double, coeff1, =, theta, *, oneMinusThetaH, ;, final, double, coeff2, =, theta, *, theta, *, h, ;]
[&&, (, theta, <=, 0.5, ), ), {, final, double, coeff1, =, theta, *, oneMinusThetaH, ;, final, double, coeff2, =]
[), &&, (, theta, <=, 0.5, ), ), {, final, double, coeff1, =, theta, *, oneMinusThetaH, ;, final, double, coeff2]
[!=, null, ), &&, (, theta, <=, 0.5, ), ), {, final, double, coeff1, =, theta, *, oneMinusThetaH, ;, final]
[), &&, (, theta, <=, 0.5, ), ), {, final, double, coeff1, =, theta, *, oneMinusThetaH, ;, final, double, coeff2]
[), {, final, double, coeff1, =, theta, *, oneMinusThetaH, ;, final, double, coeff2, =, theta, *, theta, *, h, ;]
[), ), {, final, double, coeff1, =, theta, *, oneMinusThetaH, ;, final, double, coeff2, =, theta, *, theta, *, h]
[<=, 0.5, ), ), {, final, double, coeff1, =, theta, *, oneMinusThetaH, ;, final, double, coeff2, =, theta, *, theta]
[), ), {, final, double, coeff1, =, theta, *, oneMinusThetaH, ;, final, double, coeff2, =, theta, *, theta, *, h]
[;, final, double, coeff2, =, theta, *, theta, *, h, ;, for, (, int, i, =, 0, ;, i, <]
[*, oneMinusThetaH, ;, final, double, coeff2, =, theta, *, theta, *, h, ;, for, (, int, i, =, 0, ;]
[;, final, double, coeff2, =, theta, *, theta, *, h, ;, for, (, int, i, =, 0, ;, i, <]
[;, for, (, int, i, =, 0, ;, i, <, interpolatedState, ., length, ;, ++, i, ), {, final, double]
[*, h, ;, for, (, int, i, =, 0, ;, i, <, interpolatedState, ., length, ;, ++, i, ), {]
[*, theta, *, h, ;, for, (, int, i, =, 0, ;, i, <, interpolatedState, ., length, ;, ++, i]
[*, h, ;, for, (, int, i, =, 0, ;, i, <, interpolatedState, ., length, ;, ++, i, ), {]
[;, for, (, int, i, =, 0, ;, i, <, interpolatedState, ., length, ;, ++, i, ), {, final, double]
[;, i, <, interpolatedState, ., length, ;, ++, i, ), {, final, double, yDot1, =, yDotK, [, 0, ], []
[;, ++, i, ), {, final, double, yDot1, =, yDotK, [, 0, ], [, i, ], ;, final, double, yDot2]
[<, interpolatedState, ., length, ;, ++, i, ), {, final, double, yDot1, =, yDotK, [, 0, ], [, i, ]]
[;, ++, i, ), {, final, double, yDot1, =, yDotK, [, 0, ], [, i, ], ;, final, double, yDot2]
[., length, ;, ++, i, ), {, final, double, yDot1, =, yDotK, [, 0, ], [, i, ], ;, final]
[), {, final, double, yDot1, =, yDotK, [, 0, ], [, i, ], ;, final, double, yDot2, =, yDotK, []
[), {, final, double, yDot1, =, yDotK, [, 0, ], [, i, ], ;, final, double, yDot2, =, yDotK, []
[;, final, double, yDot2, =, yDotK, [, 1, ], [, i, ], ;, interpolatedState, [, i, ], =, previousState, []
[[, i, ], ;, final, double, yDot2, =, yDotK, [, 1, ], [, i, ], ;, interpolatedState, [, i, ]]
[[, 0, ], [, i, ], ;, final, double, yDot2, =, yDotK, [, 1, ], [, i, ], ;, interpolatedState]
[], [, i, ], ;, final, double, yDot2, =, yDotK, [, 1, ], [, i, ], ;, interpolatedState, [, i]
[], ;, final, double, yDot2, =, yDotK, [, 1, ], [, i, ], ;, interpolatedState, [, i, ], =, previousState]
[;, interpolatedState, [, i, ], =, previousState, [, i, ], +, coeff1, *, yDot1, +, coeff2, *, yDot2, ;, interpolatedDerivatives]
[[, i, ], ;, interpolatedState, [, i, ], =, previousState, [, i, ], +, coeff1, *, yDot1, +, coeff2, *]
[[, 1, ], [, i, ], ;, interpolatedState, [, i, ], =, previousState, [, i, ], +, coeff1, *, yDot1]
[], [, i, ], ;, interpolatedState, [, i, ], =, previousState, [, i, ], +, coeff1, *, yDot1, +, coeff2]
[], ;, interpolatedState, [, i, ], =, previousState, [, i, ], +, coeff1, *, yDot1, +, coeff2, *, yDot2, ;]
[=, previousState, [, i, ], +, coeff1, *, yDot1, +, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1]
[[, i, ], =, previousState, [, i, ], +, coeff1, *, yDot1, +, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i]
[], =, previousState, [, i, ], +, coeff1, *, yDot1, +, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =]
[;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, else, {, final, double]
[+, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }]
[+, coeff1, *, yDot1, +, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *]
[[, i, ], +, coeff1, *, yDot1, +, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1]
[], +, coeff1, *, yDot1, +, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2]
[+, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }]
[*, yDot1, +, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;]
[+, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }]
[;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, else, {, final, double]
[*, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, else, {]
[;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, else, {, final, double]
[=, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, else, {, final, double, coeff1, =, oneMinusThetaH, *, theta]
[[, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, else, {, final, double, coeff1, =]
[], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, else, {, final, double, coeff1, =, oneMinusThetaH, *]
[;, }, }, else, {, final, double, coeff1, =, oneMinusThetaH, *, theta, ;, final, double, coeff2, =, oneMinusThetaH, *, (]
[+, coeffDot2, *, yDot2, ;, }, }, else, {, final, double, coeff1, =, oneMinusThetaH, *, theta, ;, final, double, coeff2]
[*, yDot1, +, coeffDot2, *, yDot2, ;, }, }, else, {, final, double, coeff1, =, oneMinusThetaH, *, theta, ;, final]
[+, coeffDot2, *, yDot2, ;, }, }, else, {, final, double, coeff1, =, oneMinusThetaH, *, theta, ;, final, double, coeff2]
[;, }, }, else, {, final, double, coeff1, =, oneMinusThetaH, *, theta, ;, final, double, coeff2, =, oneMinusThetaH, *, (]
[*, yDot2, ;, }, }, else, {, final, double, coeff1, =, oneMinusThetaH, *, theta, ;, final, double, coeff2, =, oneMinusThetaH]
[;, }, }, else, {, final, double, coeff1, =, oneMinusThetaH, *, theta, ;, final, double, coeff2, =, oneMinusThetaH, *, (]
[;, final, double, coeff2, =, oneMinusThetaH, *, (, 1.0, +, theta, ), ;, for, (, int, i, =, 0, ;]
[*, theta, ;, final, double, coeff2, =, oneMinusThetaH, *, (, 1.0, +, theta, ), ;, for, (, int, i, =]
[;, final, double, coeff2, =, oneMinusThetaH, *, (, 1.0, +, theta, ), ;, for, (, int, i, =, 0, ;]
[;, for, (, int, i, =, 0, ;, i, <, interpolatedState, ., length, ;, ++, i, ), {, final, double]
[*, (, 1.0, +, theta, ), ;, for, (, int, i, =, 0, ;, i, <, interpolatedState, ., length, ;]
[;, for, (, int, i, =, 0, ;, i, <, interpolatedState, ., length, ;, ++, i, ), {, final, double]
[), ;, for, (, int, i, =, 0, ;, i, <, interpolatedState, ., length, ;, ++, i, ), {, final]
[+, theta, ), ;, for, (, int, i, =, 0, ;, i, <, interpolatedState, ., length, ;, ++, i, )]
[), ;, for, (, int, i, =, 0, ;, i, <, interpolatedState, ., length, ;, ++, i, ), {, final]
[;, i, <, interpolatedState, ., length, ;, ++, i, ), {, final, double, yDot1, =, yDotK, [, 0, ], []
[;, ++, i, ), {, final, double, yDot1, =, yDotK, [, 0, ], [, i, ], ;, final, double, yDot2]
[<, interpolatedState, ., length, ;, ++, i, ), {, final, double, yDot1, =, yDotK, [, 0, ], [, i, ]]
[;, ++, i, ), {, final, double, yDot1, =, yDotK, [, 0, ], [, i, ], ;, final, double, yDot2]
[., length, ;, ++, i, ), {, final, double, yDot1, =, yDotK, [, 0, ], [, i, ], ;, final]
[), {, final, double, yDot1, =, yDotK, [, 0, ], [, i, ], ;, final, double, yDot2, =, yDotK, []
[), {, final, double, yDot1, =, yDotK, [, 0, ], [, i, ], ;, final, double, yDot2, =, yDotK, []
[;, final, double, yDot2, =, yDotK, [, 1, ], [, i, ], ;, interpolatedState, [, i, ], =, currentState, []
[[, i, ], ;, final, double, yDot2, =, yDotK, [, 1, ], [, i, ], ;, interpolatedState, [, i, ]]
[[, 0, ], [, i, ], ;, final, double, yDot2, =, yDotK, [, 1, ], [, i, ], ;, interpolatedState]
[], [, i, ], ;, final, double, yDot2, =, yDotK, [, 1, ], [, i, ], ;, interpolatedState, [, i]
[], ;, final, double, yDot2, =, yDotK, [, 1, ], [, i, ], ;, interpolatedState, [, i, ], =, currentState]
[;, interpolatedState, [, i, ], =, currentState, [, i, ], +, coeff1, *, yDot1, -, coeff2, *, yDot2, ;, interpolatedDerivatives]
[[, i, ], ;, interpolatedState, [, i, ], =, currentState, [, i, ], +, coeff1, *, yDot1, -, coeff2, *]
[[, 1, ], [, i, ], ;, interpolatedState, [, i, ], =, currentState, [, i, ], +, coeff1, *, yDot1]
[], [, i, ], ;, interpolatedState, [, i, ], =, currentState, [, i, ], +, coeff1, *, yDot1, -, coeff2]
[], ;, interpolatedState, [, i, ], =, currentState, [, i, ], +, coeff1, *, yDot1, -, coeff2, *, yDot2, ;]
[=, currentState, [, i, ], +, coeff1, *, yDot1, -, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1]
[[, i, ], =, currentState, [, i, ], +, coeff1, *, yDot1, -, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i]
[], =, currentState, [, i, ], +, coeff1, *, yDot1, -, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =]
[;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, }, }]
[-, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }]
[+, coeff1, *, yDot1, -, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *]
[[, i, ], +, coeff1, *, yDot1, -, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1]
[], +, coeff1, *, yDot1, -, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2]
[-, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }]
[*, yDot1, -, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;]
[-, coeff2, *, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }]
[;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, }, }]
[*, yDot2, ;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, }, }]
[;, interpolatedDerivatives, [, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, }, }]
[=, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, }, }]
[[, i, ], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, }, }]
[], =, coeffDot1, *, yDot1, +, coeffDot2, *, yDot2, ;, }, }, }, }]
[;, }, }, }, }]
[+, coeffDot2, *, yDot2, ;, }, }, }, }]
[*, yDot1, +, coeffDot2, *, yDot2, ;, }, }, }, }]
[+, coeffDot2, *, yDot2, ;, }, }, }, }]
[;, }, }, }, }]
[*, yDot2, ;, }, }, }, }]
[;, }, }, }, }]
