[;, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, n]
[., newArrayList, (, ), ;, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, )]
[), {, String, fnName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, if, (, "goog$object$create", ., equals]
[., isCall, (, ), ), {, String, fnName, =, n, ., getFirstChild, (, ), ., getQualifiedName, (, ), ;, if]
[;, if, (, "goog$object$create", ., equals, (, fnName, ), ||, "goog.object.create", ., equals, (, fnName, ), ), {, callNodes, .]
[., getQualifiedName, (, ), ;, if, (, "goog$object$create", ., equals, (, fnName, ), ||, "goog.object.create", ., equals, (, fnName, )]
[., getFirstChild, (, ), ., getQualifiedName, (, ), ;, if, (, "goog$object$create", ., equals, (, fnName, ), ||, "goog.object.create", .]
[), {, callNodes, ., add, (, n, ), ;, }, }, }, }, ClosureOptimizePrimitives, (, AbstractCompiler, compiler, ), {, this]
[||, "goog.object.create", ., equals, (, fnName, ), ), {, callNodes, ., add, (, n, ), ;, }, }, }, }]
[., equals, (, fnName, ), ||, "goog.object.create", ., equals, (, fnName, ), ), {, callNodes, ., add, (, n, )]
[), ||, "goog.object.create", ., equals, (, fnName, ), ), {, callNodes, ., add, (, n, ), ;, }, }, }]
[), {, callNodes, ., add, (, n, ), ;, }, }, }, }, ClosureOptimizePrimitives, (, AbstractCompiler, compiler, ), {, this]
[., equals, (, fnName, ), ), {, callNodes, ., add, (, n, ), ;, }, }, }, }, ClosureOptimizePrimitives, (]
[), ), {, callNodes, ., add, (, n, ), ;, }, }, }, }, ClosureOptimizePrimitives, (, AbstractCompiler, compiler, ), {]
[;, }, }, }, }, ClosureOptimizePrimitives, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, }, @, Override]
[., add, (, n, ), ;, }, }, }, }, ClosureOptimizePrimitives, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
[), ;, }, }, }, }, ClosureOptimizePrimitives, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, }, @]
[=, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, FindObjectCreateCalls, pass, =]
[., compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, FindObjectCreateCalls]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, FindObjectCreateCalls, pass, =, new, FindObjectCreateCalls]
[;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, pass, ), ;, processObjectCreateCalls, (, pass, ., callNodes, ), ;, }]
[;, processObjectCreateCalls, (, pass, ., callNodes, ), ;, }, private, void, processObjectCreateCalls, (, List, <, Node, >, callNodes, ), {]
[., traverse, (, compiler, ,, root, ,, pass, ), ;, processObjectCreateCalls, (, pass, ., callNodes, ), ;, }, private, void]
[,, root, ,, pass, ), ;, processObjectCreateCalls, (, pass, ., callNodes, ), ;, }, private, void, processObjectCreateCalls, (, List, <]
[,, pass, ), ;, processObjectCreateCalls, (, pass, ., callNodes, ), ;, }, private, void, processObjectCreateCalls, (, List, <, Node, >]
[), ;, processObjectCreateCalls, (, pass, ., callNodes, ), ;, }, private, void, processObjectCreateCalls, (, List, <, Node, >, callNodes, )]
[;, }, private, void, processObjectCreateCalls, (, List, <, Node, >, callNodes, ), {, for, (, Node, callNode, :, callNodes, )]
[), ;, }, private, void, processObjectCreateCalls, (, List, <, Node, >, callNodes, ), {, for, (, Node, callNode, :, callNodes]
[., callNodes, ), ;, }, private, void, processObjectCreateCalls, (, List, <, Node, >, callNodes, ), {, for, (, Node, callNode]
[), {, Node, curParam, =, callNode, ., getFirstChild, (, ), ., getNext, (, ), ;, if, (, canOptimizeObjectCreate, (, curParam]
[;, if, (, canOptimizeObjectCreate, (, curParam, ), ), {, Node, objNode, =, IR, ., objectlit, (, ), ., srcref, (]
[., getNext, (, ), ;, if, (, canOptimizeObjectCreate, (, curParam, ), ), {, Node, objNode, =, IR, ., objectlit, (]
[., getFirstChild, (, ), ., getNext, (, ), ;, if, (, canOptimizeObjectCreate, (, curParam, ), ), {, Node, objNode, =]
[), {, Node, objNode, =, IR, ., objectlit, (, ), ., srcref, (, callNode, ), ;, while, (, curParam, !=]
[), ), {, Node, objNode, =, IR, ., objectlit, (, ), ., srcref, (, callNode, ), ;, while, (, curParam]
[;, while, (, curParam, !=, null, ), {, Node, keyNode, =, curParam, ;, Node, valueNode, =, curParam, ., getNext, (]
[., srcref, (, callNode, ), ;, while, (, curParam, !=, null, ), {, Node, keyNode, =, curParam, ;, Node, valueNode]
[., objectlit, (, ), ., srcref, (, callNode, ), ;, while, (, curParam, !=, null, ), {, Node, keyNode, =]
[), ;, while, (, curParam, !=, null, ), {, Node, keyNode, =, curParam, ;, Node, valueNode, =, curParam, ., getNext]
[), {, Node, keyNode, =, curParam, ;, Node, valueNode, =, curParam, ., getNext, (, ), ;, curParam, =, valueNode, .]
[!=, null, ), {, Node, keyNode, =, curParam, ;, Node, valueNode, =, curParam, ., getNext, (, ), ;, curParam, =]
[), {, Node, keyNode, =, curParam, ;, Node, valueNode, =, curParam, ., getNext, (, ), ;, curParam, =, valueNode, .]
[;, Node, valueNode, =, curParam, ., getNext, (, ), ;, curParam, =, valueNode, ., getNext, (, ), ;, callNode, .]
[;, curParam, =, valueNode, ., getNext, (, ), ;, callNode, ., removeChild, (, keyNode, ), ;, callNode, ., removeChild, (]
[., getNext, (, ), ;, curParam, =, valueNode, ., getNext, (, ), ;, callNode, ., removeChild, (, keyNode, ), ;]
[=, valueNode, ., getNext, (, ), ;, callNode, ., removeChild, (, keyNode, ), ;, callNode, ., removeChild, (, valueNode, )]
[;, callNode, ., removeChild, (, keyNode, ), ;, callNode, ., removeChild, (, valueNode, ), ;, if, (, !, keyNode, .]
[., getNext, (, ), ;, callNode, ., removeChild, (, keyNode, ), ;, callNode, ., removeChild, (, valueNode, ), ;, if]
[;, callNode, ., removeChild, (, valueNode, ), ;, if, (, !, keyNode, ., isString, (, ), ), {, keyNode, =]
[., removeChild, (, keyNode, ), ;, callNode, ., removeChild, (, valueNode, ), ;, if, (, !, keyNode, ., isString, (]
[), ;, callNode, ., removeChild, (, valueNode, ), ;, if, (, !, keyNode, ., isString, (, ), ), {, keyNode]
[;, if, (, !, keyNode, ., isString, (, ), ), {, keyNode, =, IR, ., string, (, NodeUtil, ., getStringValue]
[., removeChild, (, valueNode, ), ;, if, (, !, keyNode, ., isString, (, ), ), {, keyNode, =, IR, .]
[), ;, if, (, !, keyNode, ., isString, (, ), ), {, keyNode, =, IR, ., string, (, NodeUtil, .]
[), {, keyNode, =, IR, ., string, (, NodeUtil, ., getStringValue, (, keyNode, ), ), ., srcref, (, keyNode, )]
[), {, keyNode, =, IR, ., string, (, NodeUtil, ., getStringValue, (, keyNode, ), ), ., srcref, (, keyNode, )]
[., isString, (, ), ), {, keyNode, =, IR, ., string, (, NodeUtil, ., getStringValue, (, keyNode, ), ), .]
[=, IR, ., string, (, NodeUtil, ., getStringValue, (, keyNode, ), ), ., srcref, (, keyNode, ), ;, }, keyNode]
[;, }, keyNode, ., setType, (, Token, ., STRING_KEY, ), ;, keyNode, ., setQuotedString, (, ), ;, objNode, ., addChildToBack]
[., srcref, (, keyNode, ), ;, }, keyNode, ., setType, (, Token, ., STRING_KEY, ), ;, keyNode, ., setQuotedString, (]
[., string, (, NodeUtil, ., getStringValue, (, keyNode, ), ), ., srcref, (, keyNode, ), ;, }, keyNode, ., setType]
[), ., srcref, (, keyNode, ), ;, }, keyNode, ., setType, (, Token, ., STRING_KEY, ), ;, keyNode, ., setQuotedString]
[., getStringValue, (, keyNode, ), ), ., srcref, (, keyNode, ), ;, }, keyNode, ., setType, (, Token, ., STRING_KEY]
[), ), ., srcref, (, keyNode, ), ;, }, keyNode, ., setType, (, Token, ., STRING_KEY, ), ;, keyNode, .]
[), ;, }, keyNode, ., setType, (, Token, ., STRING_KEY, ), ;, keyNode, ., setQuotedString, (, ), ;, objNode, .]
[;, keyNode, ., setQuotedString, (, ), ;, objNode, ., addChildToBack, (, IR, ., propdef, (, keyNode, ,, valueNode, ), )]
[., setType, (, Token, ., STRING_KEY, ), ;, keyNode, ., setQuotedString, (, ), ;, objNode, ., addChildToBack, (, IR, .]
[), ;, keyNode, ., setQuotedString, (, ), ;, objNode, ., addChildToBack, (, IR, ., propdef, (, keyNode, ,, valueNode, )]
[., STRING_KEY, ), ;, keyNode, ., setQuotedString, (, ), ;, objNode, ., addChildToBack, (, IR, ., propdef, (, keyNode, ,]
[;, objNode, ., addChildToBack, (, IR, ., propdef, (, keyNode, ,, valueNode, ), ), ;, }, callNode, ., getParent, (]
[., setQuotedString, (, ), ;, objNode, ., addChildToBack, (, IR, ., propdef, (, keyNode, ,, valueNode, ), ), ;, }]
[;, }, callNode, ., getParent, (, ), ., replaceChild, (, callNode, ,, objNode, ), ;, compiler, ., reportCodeChange, (, )]
[., addChildToBack, (, IR, ., propdef, (, keyNode, ,, valueNode, ), ), ;, }, callNode, ., getParent, (, ), .]
[), ;, }, callNode, ., getParent, (, ), ., replaceChild, (, callNode, ,, objNode, ), ;, compiler, ., reportCodeChange, (]
[., propdef, (, keyNode, ,, valueNode, ), ), ;, }, callNode, ., getParent, (, ), ., replaceChild, (, callNode, ,]
[,, valueNode, ), ), ;, }, callNode, ., getParent, (, ), ., replaceChild, (, callNode, ,, objNode, ), ;, compiler]
[), ), ;, }, callNode, ., getParent, (, ), ., replaceChild, (, callNode, ,, objNode, ), ;, compiler, ., reportCodeChange]
[;, compiler, ., reportCodeChange, (, ), ;, }, }, }, private, boolean, canOptimizeObjectCreate, (, Node, firstParam, ), {, Node, curParam]
[., replaceChild, (, callNode, ,, objNode, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }, }, private, boolean, canOptimizeObjectCreate]
[., getParent, (, ), ., replaceChild, (, callNode, ,, objNode, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }]
[,, objNode, ), ;, compiler, ., reportCodeChange, (, ), ;, }, }, }, private, boolean, canOptimizeObjectCreate, (, Node, firstParam, )]
[), ;, compiler, ., reportCodeChange, (, ), ;, }, }, }, private, boolean, canOptimizeObjectCreate, (, Node, firstParam, ), {, Node]
[;, }, }, }, private, boolean, canOptimizeObjectCreate, (, Node, firstParam, ), {, Node, curParam, =, firstParam, ;, while, (, curParam]
[., reportCodeChange, (, ), ;, }, }, }, private, boolean, canOptimizeObjectCreate, (, Node, firstParam, ), {, Node, curParam, =, firstParam]
[;, while, (, curParam, !=, null, ), {, if, (, !, curParam, ., isString, (, ), &&, !, curParam, .]
[), {, if, (, !, curParam, ., isString, (, ), &&, !, curParam, ., isNumber, (, ), ), {, return]
[!=, null, ), {, if, (, !, curParam, ., isString, (, ), &&, !, curParam, ., isNumber, (, ), )]
[), {, if, (, !, curParam, ., isString, (, ), &&, !, curParam, ., isNumber, (, ), ), {, return]
[), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, ), ;, if, (, curParam, ==, null, )]
[&&, !, curParam, ., isNumber, (, ), ), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, )]
[&&, !, curParam, ., isNumber, (, ), ), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, )]
[., isString, (, ), &&, !, curParam, ., isNumber, (, ), ), {, return, false, ;, }, curParam, =, curParam]
[), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, ), ;, if, (, curParam, ==, null, )]
[), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, ), ;, if, (, curParam, ==, null, )]
[., isNumber, (, ), ), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, ), ;, if, (]
[;, }, curParam, =, curParam, ., getNext, (, ), ;, if, (, curParam, ==, null, ), {, return, false, ;]
[=, curParam, ., getNext, (, ), ;, if, (, curParam, ==, null, ), {, return, false, ;, }, curParam, =]
[;, if, (, curParam, ==, null, ), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, ), ;]
[., getNext, (, ), ;, if, (, curParam, ==, null, ), {, return, false, ;, }, curParam, =, curParam, .]
[), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, ), ;, }, return, true, ;, }, }]
[==, null, ), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, ), ;, }, return, true, ;]
[), {, return, false, ;, }, curParam, =, curParam, ., getNext, (, ), ;, }, return, true, ;, }, }]
[;, }, curParam, =, curParam, ., getNext, (, ), ;, }, return, true, ;, }, }]
[=, curParam, ., getNext, (, ), ;, }, return, true, ;, }, }]
[;, }, return, true, ;, }, }]
[., getNext, (, ), ;, }, return, true, ;, }, }]
[;, }, }]
