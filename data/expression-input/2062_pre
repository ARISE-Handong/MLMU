[BigDecimal, two, ;, private, final, BigDecimal, minusOne, ;, private, final, BigDecimal, oneHalf, ;, public, LegendreHighPrecisionRuleFactory, (, ), {, this, (]
[BigDecimal, two, ;, private, final, BigDecimal, minusOne, ;, private, final, BigDecimal, oneHalf, ;, public, LegendreHighPrecisionRuleFactory, (, ), {, this, (]
[public, LegendreHighPrecisionRuleFactory, (, ), {, this, (, MathContext, ., DECIMAL128, ), ;, }, public, LegendreHighPrecisionRuleFactory, (, MathContext, mContext, ), {]
[public, LegendreHighPrecisionRuleFactory, (, ), {, this, (, MathContext, ., DECIMAL128, ), ;, }, public, LegendreHighPrecisionRuleFactory, (, MathContext, mContext, ), {]
[{, this, (, MathContext, ., DECIMAL128, ), ;, }, public, LegendreHighPrecisionRuleFactory, (, MathContext, mContext, ), {, this, ., mContext, =]
[(, MathContext, ., DECIMAL128, ), ;, }, public, LegendreHighPrecisionRuleFactory, (, MathContext, mContext, ), {, this, ., mContext, =, mContext, ;]
[., DECIMAL128, ), ;, }, public, LegendreHighPrecisionRuleFactory, (, MathContext, mContext, ), {, this, ., mContext, =, mContext, ;, two, =]
[;, }, public, LegendreHighPrecisionRuleFactory, (, MathContext, mContext, ), {, this, ., mContext, =, mContext, ;, two, =, new, BigDecimal, (]
[public, LegendreHighPrecisionRuleFactory, (, MathContext, mContext, ), {, this, ., mContext, =, mContext, ;, two, =, new, BigDecimal, (, "2", ,]
[MathContext, mContext, ), {, this, ., mContext, =, mContext, ;, two, =, new, BigDecimal, (, "2", ,, mContext, ), ;]
[), {, this, ., mContext, =, mContext, ;, two, =, new, BigDecimal, (, "2", ,, mContext, ), ;, minusOne, =]
[., mContext, =, mContext, ;, two, =, new, BigDecimal, (, "2", ,, mContext, ), ;, minusOne, =, new, BigDecimal, (]
[=, mContext, ;, two, =, new, BigDecimal, (, "2", ,, mContext, ), ;, minusOne, =, new, BigDecimal, (, "-1", ,]
[two, =, new, BigDecimal, (, "2", ,, mContext, ), ;, minusOne, =, new, BigDecimal, (, "-1", ,, mContext, ), ;]
[new, BigDecimal, (, "2", ,, mContext, ), ;, minusOne, =, new, BigDecimal, (, "-1", ,, mContext, ), ;, oneHalf, =]
["2", ,, mContext, ), ;, minusOne, =, new, BigDecimal, (, "-1", ,, mContext, ), ;, oneHalf, =, new, BigDecimal, (]
[mContext, ), ;, minusOne, =, new, BigDecimal, (, "-1", ,, mContext, ), ;, oneHalf, =, new, BigDecimal, (, "0.5", ,]
[Pair, <, BigDecimal, [, ], ,, BigDecimal, [, ], >, computeRule, (, int, numberOfPoints, ), throws, DimensionMismatchException, {, if, (]
[Pair, <, BigDecimal, [, ], ,, BigDecimal, [, ], >, computeRule, (, int, numberOfPoints, ), throws, DimensionMismatchException, {, if, (]
[BigDecimal, [, ], ,, BigDecimal, [, ], >, computeRule, (, int, numberOfPoints, ), throws, DimensionMismatchException, {, if, (, numberOfPoints, ==]
[BigDecimal, [, ], >, computeRule, (, int, numberOfPoints, ), throws, DimensionMismatchException, {, if, (, numberOfPoints, ==, 1, ), {, return]
[if, (, numberOfPoints, ==, 1, ), {, return, new, Pair, <, BigDecimal, [, ], ,, BigDecimal, [, ], >, (]
[1, ), {, return, new, Pair, <, BigDecimal, [, ], ,, BigDecimal, [, ], >, (, new, BigDecimal, [, ]]
[), {, return, new, Pair, <, BigDecimal, [, ], ,, BigDecimal, [, ], >, (, new, BigDecimal, [, ], {]
[), {, return, new, Pair, <, BigDecimal, [, ], ,, BigDecimal, [, ], >, (, new, BigDecimal, [, ], {]
[<, BigDecimal, [, ], ,, BigDecimal, [, ], >, (, new, BigDecimal, [, ], {, BigDecimal, ., ZERO, }, ,]
[,, BigDecimal, [, ], >, (, new, BigDecimal, [, ], {, BigDecimal, ., ZERO, }, ,, new, BigDecimal, [, ]]
[BigDecimal, [, ], >, (, new, BigDecimal, [, ], {, BigDecimal, ., ZERO, }, ,, new, BigDecimal, [, ], {]
[., ZERO, }, ,, new, BigDecimal, [, ], {, two, }, ), ;, }, final, BigDecimal, [, ], previousPoints, =]
[., ZERO, }, ,, new, BigDecimal, [, ], {, two, }, ), ;, }, final, BigDecimal, [, ], previousPoints, =]
[}, ,, new, BigDecimal, [, ], {, two, }, ), ;, }, final, BigDecimal, [, ], previousPoints, =, getRuleInternal, (]
[}, ,, new, BigDecimal, [, ], {, two, }, ), ;, }, final, BigDecimal, [, ], previousPoints, =, getRuleInternal, (]
[new, BigDecimal, [, ], {, two, }, ), ;, }, final, BigDecimal, [, ], previousPoints, =, getRuleInternal, (, numberOfPoints, -]
[], previousPoints, =, getRuleInternal, (, numberOfPoints, -, 1, ), ., getFirst, (, ), ;, final, BigDecimal, [, ], points, =]
[getRuleInternal, (, numberOfPoints, -, 1, ), ., getFirst, (, ), ;, final, BigDecimal, [, ], points, =, new, BigDecimal, []
[), ;, final, BigDecimal, [, ], points, =, new, BigDecimal, [, numberOfPoints, ], ;, final, BigDecimal, [, ], weights, =]
[BigDecimal, [, ], points, =, new, BigDecimal, [, numberOfPoints, ], ;, final, BigDecimal, [, ], weights, =, new, BigDecimal, []
[[, numberOfPoints, ], ;, final, BigDecimal, [, ], weights, =, new, BigDecimal, [, numberOfPoints, ], ;, final, int, iMax, =]
[[, numberOfPoints, ], ;, final, BigDecimal, [, ], weights, =, new, BigDecimal, [, numberOfPoints, ], ;, final, int, iMax, =]
[], ;, final, BigDecimal, [, ], weights, =, new, BigDecimal, [, numberOfPoints, ], ;, final, int, iMax, =, numberOfPoints, /]
[=, new, BigDecimal, [, numberOfPoints, ], ;, final, int, iMax, =, numberOfPoints, /, 2, ;, for, (, int, i, =]
[BigDecimal, [, numberOfPoints, ], ;, final, int, iMax, =, numberOfPoints, /, 2, ;, for, (, int, i, =, 0, ;]
[BigDecimal, [, numberOfPoints, ], ;, final, int, iMax, =, numberOfPoints, /, 2, ;, for, (, int, i, =, 0, ;]
[numberOfPoints, ], ;, final, int, iMax, =, numberOfPoints, /, 2, ;, for, (, int, i, =, 0, ;, i, <]
[;, final, int, iMax, =, numberOfPoints, /, 2, ;, for, (, int, i, =, 0, ;, i, <, iMax, ;]
[;, final, int, iMax, =, numberOfPoints, /, 2, ;, for, (, int, i, =, 0, ;, i, <, iMax, ;]
[2, ;, for, (, int, i, =, 0, ;, i, <, iMax, ;, i, ++, ), {, BigDecimal, a, =]
[2, ;, for, (, int, i, =, 0, ;, i, <, iMax, ;, i, ++, ), {, BigDecimal, a, =]
[;, for, (, int, i, =, 0, ;, i, <, iMax, ;, i, ++, ), {, BigDecimal, a, =, (]
[;, for, (, int, i, =, 0, ;, i, <, iMax, ;, i, ++, ), {, BigDecimal, a, =, (]
[(, int, i, =, 0, ;, i, <, iMax, ;, i, ++, ), {, BigDecimal, a, =, (, i, ==]
[=, 0, ;, i, <, iMax, ;, i, ++, ), {, BigDecimal, a, =, (, i, ==, 0, ), ?]
[;, i, <, iMax, ;, i, ++, ), {, BigDecimal, a, =, (, i, ==, 0, ), ?, minusOne, :]
[;, i, <, iMax, ;, i, ++, ), {, BigDecimal, a, =, (, i, ==, 0, ), ?, minusOne, :]
[<, iMax, ;, i, ++, ), {, BigDecimal, a, =, (, i, ==, 0, ), ?, minusOne, :, previousPoints, []
[<, iMax, ;, i, ++, ), {, BigDecimal, a, =, (, i, ==, 0, ), ?, minusOne, :, previousPoints, []
[;, i, ++, ), {, BigDecimal, a, =, (, i, ==, 0, ), ?, minusOne, :, previousPoints, [, i, -]
[a, =, (, i, ==, 0, ), ?, minusOne, :, previousPoints, [, i, -, 1, ], ;, BigDecimal, b, =]
[a, =, (, i, ==, 0, ), ?, minusOne, :, previousPoints, [, i, -, 1, ], ;, BigDecimal, b, =]
[=, (, i, ==, 0, ), ?, minusOne, :, previousPoints, [, i, -, 1, ], ;, BigDecimal, b, =, (]
[=, (, i, ==, 0, ), ?, minusOne, :, previousPoints, [, i, -, 1, ], ;, BigDecimal, b, =, (]
[i, ==, 0, ), ?, minusOne, :, previousPoints, [, i, -, 1, ], ;, BigDecimal, b, =, (, iMax, ==]
[), ?, minusOne, :, previousPoints, [, i, -, 1, ], ;, BigDecimal, b, =, (, iMax, ==, 1, ), ?]
[), ?, minusOne, :, previousPoints, [, i, -, 1, ], ;, BigDecimal, b, =, (, iMax, ==, 1, ), ?]
[previousPoints, [, i, -, 1, ], ;, BigDecimal, b, =, (, iMax, ==, 1, ), ?, BigDecimal, ., ONE, :]
[previousPoints, [, i, -, 1, ], ;, BigDecimal, b, =, (, iMax, ==, 1, ), ?, BigDecimal, ., ONE, :]
[i, -, 1, ], ;, BigDecimal, b, =, (, iMax, ==, 1, ), ?, BigDecimal, ., ONE, :, previousPoints, []
[b, =, (, iMax, ==, 1, ), ?, BigDecimal, ., ONE, :, previousPoints, [, i, ], ;, BigDecimal, pma, =]
[b, =, (, iMax, ==, 1, ), ?, BigDecimal, ., ONE, :, previousPoints, [, i, ], ;, BigDecimal, pma, =]
[?, BigDecimal, ., ONE, :, previousPoints, [, i, ], ;, BigDecimal, pma, =, BigDecimal, ., ONE, ;, BigDecimal, pa, =]
[previousPoints, [, i, ], ;, BigDecimal, pma, =, BigDecimal, ., ONE, ;, BigDecimal, pa, =, a, ;, BigDecimal, pmb, =]
[previousPoints, [, i, ], ;, BigDecimal, pma, =, BigDecimal, ., ONE, ;, BigDecimal, pa, =, a, ;, BigDecimal, pmb, =]
[=, BigDecimal, ., ONE, ;, BigDecimal, pa, =, a, ;, BigDecimal, pmb, =, BigDecimal, ., ONE, ;, BigDecimal, pb, =]
[=, a, ;, BigDecimal, pmb, =, BigDecimal, ., ONE, ;, BigDecimal, pb, =, b, ;, for, (, int, j, =]
[;, BigDecimal, pmb, =, BigDecimal, ., ONE, ;, BigDecimal, pb, =, b, ;, for, (, int, j, =, 1, ;]
[;, BigDecimal, pmb, =, BigDecimal, ., ONE, ;, BigDecimal, pb, =, b, ;, for, (, int, j, =, 1, ;]
[pmb, =, BigDecimal, ., ONE, ;, BigDecimal, pb, =, b, ;, for, (, int, j, =, 1, ;, j, <]
[BigDecimal, ., ONE, ;, BigDecimal, pb, =, b, ;, for, (, int, j, =, 1, ;, j, <, numberOfPoints, ;]
[BigDecimal, ., ONE, ;, BigDecimal, pb, =, b, ;, for, (, int, j, =, 1, ;, j, <, numberOfPoints, ;]
[;, for, (, int, j, =, 1, ;, j, <, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =]
[int, j, =, 1, ;, j, <, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (]
[int, j, =, 1, ;, j, <, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (]
[int, j, =, 1, ;, j, <, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (]
[=, 1, ;, j, <, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (, 2, *]
[;, j, <, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (, 2, *, j, +]
[<, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (, 2, *, j, +, 1, ,]
[final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (, 2, *, j, +, 1, ,, mContext, ), ;, final, BigDecimal, b_j, =]
[=, new, BigDecimal, (, 2, *, j, +, 1, ,, mContext, ), ;, final, BigDecimal, b_j, =, new, BigDecimal, (]
[BigDecimal, (, 2, *, j, +, 1, ,, mContext, ), ;, final, BigDecimal, b_j, =, new, BigDecimal, (, j, ,]
[,, mContext, ), ;, final, BigDecimal, b_j, =, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =]
[;, final, BigDecimal, b_j, =, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (]
[;, final, BigDecimal, b_j, =, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (]
[BigDecimal, b_j, =, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +]
[=, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,]
[mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;, BigDecimal, tmp1, =]
[mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;, BigDecimal, tmp1, =]
[BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;, BigDecimal, tmp1, =, a, ., multiply, (]
[=, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;, BigDecimal, tmp1, =, a, ., multiply, (, b_two_j_p_1, ,]
[(, j, +, 1, ,, mContext, ), ;, BigDecimal, tmp1, =, a, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;]
[+, 1, ,, mContext, ), ;, BigDecimal, tmp1, =, a, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =]
[+, 1, ,, mContext, ), ;, BigDecimal, tmp1, =, a, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =]
[), ;, BigDecimal, tmp1, =, a, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pa, ., multiply, (]
[BigDecimal, tmp1, =, a, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pa, ., multiply, (, tmp1, ,]
[(, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pa, ., multiply, (, tmp1, ,, mContext, ), ;, BigDecimal, tmp2, =]
[(, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pa, ., multiply, (, tmp1, ,, mContext, ), ;, BigDecimal, tmp2, =]
[), ;, tmp1, =, pa, ., multiply, (, tmp1, ,, mContext, ), ;, BigDecimal, tmp2, =, pma, ., multiply, (]
[tmp1, =, pa, ., multiply, (, tmp1, ,, mContext, ), ;, BigDecimal, tmp2, =, pma, ., multiply, (, b_j, ,]
[tmp1, ,, mContext, ), ;, BigDecimal, tmp2, =, pma, ., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppa, =]
[tmp1, ,, mContext, ), ;, BigDecimal, tmp2, =, pma, ., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppa, =]
[;, BigDecimal, tmp2, =, pma, ., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppa, =, tmp1, ., subtract, (]
[tmp2, =, pma, ., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppa, =, tmp1, ., subtract, (, tmp2, ,]
[., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppa, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;]
[(, b_j, ,, mContext, ), ;, BigDecimal, ppa, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppa, =]
[(, b_j, ,, mContext, ), ;, BigDecimal, ppa, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppa, =]
[), ;, BigDecimal, ppa, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppa, =, ppa, ., divide, (]
[BigDecimal, ppa, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppa, =, ppa, ., divide, (, b_j_p_1, ,]
[tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppa, =, ppa, ., divide, (, b_j_p_1, ,, mContext, ), ;]
[subtract, (, tmp2, ,, mContext, ), ;, ppa, =, ppa, ., divide, (, b_j_p_1, ,, mContext, ), ;, tmp1, =]
[subtract, (, tmp2, ,, mContext, ), ;, ppa, =, ppa, ., divide, (, b_j_p_1, ,, mContext, ), ;, tmp1, =]
[mContext, ), ;, ppa, =, ppa, ., divide, (, b_j_p_1, ,, mContext, ), ;, tmp1, =, b, ., multiply, (]
[;, ppa, =, ppa, ., divide, (, b_j_p_1, ,, mContext, ), ;, tmp1, =, b, ., multiply, (, b_two_j_p_1, ,]
[ppa, ., divide, (, b_j_p_1, ,, mContext, ), ;, tmp1, =, b, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;]
[divide, (, b_j_p_1, ,, mContext, ), ;, tmp1, =, b, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =]
[divide, (, b_j_p_1, ,, mContext, ), ;, tmp1, =, b, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =]
[mContext, ), ;, tmp1, =, b, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pb, ., multiply, (]
[;, tmp1, =, b, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pb, ., multiply, (, tmp1, ,]
[b, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pb, ., multiply, (, tmp1, ,, mContext, ), ;]
[multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pb, ., multiply, (, tmp1, ,, mContext, ), ;, tmp2, =]
[multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pb, ., multiply, (, tmp1, ,, mContext, ), ;, tmp2, =]
[mContext, ), ;, tmp1, =, pb, ., multiply, (, tmp1, ,, mContext, ), ;, tmp2, =, pmb, ., multiply, (]
[;, tmp1, =, pb, ., multiply, (, tmp1, ,, mContext, ), ;, tmp2, =, pmb, ., multiply, (, b_j, ,]
[(, tmp1, ,, mContext, ), ;, tmp2, =, pmb, ., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppb, =]
[(, tmp1, ,, mContext, ), ;, tmp2, =, pmb, ., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppb, =]
[), ;, tmp2, =, pmb, ., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppb, =, tmp1, ., subtract, (]
[tmp2, =, pmb, ., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppb, =, tmp1, ., subtract, (, tmp2, ,]
[., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppb, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;]
[(, b_j, ,, mContext, ), ;, BigDecimal, ppb, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppb, =]
[(, b_j, ,, mContext, ), ;, BigDecimal, ppb, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppb, =]
[), ;, BigDecimal, ppb, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppb, =, ppb, ., divide, (]
[BigDecimal, ppb, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppb, =, ppb, ., divide, (, b_j_p_1, ,]
[tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppb, =, ppb, ., divide, (, b_j_p_1, ,, mContext, ), ;]
[subtract, (, tmp2, ,, mContext, ), ;, ppb, =, ppb, ., divide, (, b_j_p_1, ,, mContext, ), ;, pma, =]
[tmp2, ,, mContext, ), ;, ppb, =, ppb, ., divide, (, b_j_p_1, ,, mContext, ), ;, pma, =, pa, ;]
[mContext, ), ;, ppb, =, ppb, ., divide, (, b_j_p_1, ,, mContext, ), ;, pma, =, pa, ;, pa, =]
[;, ppb, =, ppb, ., divide, (, b_j_p_1, ,, mContext, ), ;, pma, =, pa, ;, pa, =, ppa, ;]
[=, ppb, ., divide, (, b_j_p_1, ,, mContext, ), ;, pma, =, pa, ;, pa, =, ppa, ;, pmb, =]
[., divide, (, b_j_p_1, ,, mContext, ), ;, pma, =, pa, ;, pa, =, ppa, ;, pmb, =, pb, ;]
[(, b_j_p_1, ,, mContext, ), ;, pma, =, pa, ;, pa, =, ppa, ;, pmb, =, pb, ;, pb, =]
[pma, =, pa, ;, pa, =, ppa, ;, pmb, =, pb, ;, pb, =, ppb, ;, }, BigDecimal, c, =]
[pma, =, pa, ;, pa, =, ppa, ;, pmb, =, pb, ;, pb, =, ppb, ;, }, BigDecimal, c, =]
[pma, =, pa, ;, pa, =, ppa, ;, pmb, =, pb, ;, pb, =, ppb, ;, }, BigDecimal, c, =]
[pa, =, ppa, ;, pmb, =, pb, ;, pb, =, ppb, ;, }, BigDecimal, c, =, a, ., add, (]
[ppa, ;, pmb, =, pb, ;, pb, =, ppb, ;, }, BigDecimal, c, =, a, ., add, (, b, ,]
[;, pb, =, ppb, ;, }, BigDecimal, c, =, a, ., add, (, b, ,, mContext, ), ., multiply, (]
[=, ppb, ;, }, BigDecimal, c, =, a, ., add, (, b, ,, mContext, ), ., multiply, (, oneHalf, ,]
[=, a, ., add, (, b, ,, mContext, ), ., multiply, (, oneHalf, ,, mContext, ), ;, BigDecimal, pmc, =]
[=, a, ., add, (, b, ,, mContext, ), ., multiply, (, oneHalf, ,, mContext, ), ;, BigDecimal, pmc, =]
[mContext, ), ., multiply, (, oneHalf, ,, mContext, ), ;, BigDecimal, pmc, =, BigDecimal, ., ONE, ;, BigDecimal, pc, =]
[oneHalf, ,, mContext, ), ;, BigDecimal, pmc, =, BigDecimal, ., ONE, ;, BigDecimal, pc, =, c, ;, boolean, done, =]
[;, BigDecimal, pmc, =, BigDecimal, ., ONE, ;, BigDecimal, pc, =, c, ;, boolean, done, =, false, ;, while, (]
[BigDecimal, pmc, =, BigDecimal, ., ONE, ;, BigDecimal, pc, =, c, ;, boolean, done, =, false, ;, while, (, !]
[;, BigDecimal, pc, =, c, ;, boolean, done, =, false, ;, while, (, !, done, ), {, BigDecimal, tmp1, =]
[;, BigDecimal, pc, =, c, ;, boolean, done, =, false, ;, while, (, !, done, ), {, BigDecimal, tmp1, =]
[c, ;, boolean, done, =, false, ;, while, (, !, done, ), {, BigDecimal, tmp1, =, b, ., subtract, (]
[boolean, done, =, false, ;, while, (, !, done, ), {, BigDecimal, tmp1, =, b, ., subtract, (, a, ,]
[(, !, done, ), {, BigDecimal, tmp1, =, b, ., subtract, (, a, ,, mContext, ), ;, BigDecimal, tmp2, =]
[(, !, done, ), {, BigDecimal, tmp1, =, b, ., subtract, (, a, ,, mContext, ), ;, BigDecimal, tmp2, =]
[(, !, done, ), {, BigDecimal, tmp1, =, b, ., subtract, (, a, ,, mContext, ), ;, BigDecimal, tmp2, =]
[b, ., subtract, (, a, ,, mContext, ), ;, BigDecimal, tmp2, =, c, ., ulp, (, ), ., multiply, (]
[b, ., subtract, (, a, ,, mContext, ), ;, BigDecimal, tmp2, =, c, ., ulp, (, ), ., multiply, (]
[a, ,, mContext, ), ;, BigDecimal, tmp2, =, c, ., ulp, (, ), ., multiply, (, BigDecimal, ., TEN, ,]
[), ;, BigDecimal, tmp2, =, c, ., ulp, (, ), ., multiply, (, BigDecimal, ., TEN, ,, mContext, ), ;]
[BigDecimal, tmp2, =, c, ., ulp, (, ), ., multiply, (, BigDecimal, ., TEN, ,, mContext, ), ;, done, =]
[BigDecimal, tmp2, =, c, ., ulp, (, ), ., multiply, (, BigDecimal, ., TEN, ,, mContext, ), ;, done, =]
[BigDecimal, tmp2, =, c, ., ulp, (, ), ., multiply, (, BigDecimal, ., TEN, ,, mContext, ), ;, done, =]
[., ulp, (, ), ., multiply, (, BigDecimal, ., TEN, ,, mContext, ), ;, done, =, tmp1, ., compareTo, (]
[), ., multiply, (, BigDecimal, ., TEN, ,, mContext, ), ;, done, =, tmp1, ., compareTo, (, tmp2, ), <=]
[multiply, (, BigDecimal, ., TEN, ,, mContext, ), ;, done, =, tmp1, ., compareTo, (, tmp2, ), <=, 0, ;]
[BigDecimal, ., TEN, ,, mContext, ), ;, done, =, tmp1, ., compareTo, (, tmp2, ), <=, 0, ;, pmc, =]
[BigDecimal, ., TEN, ,, mContext, ), ;, done, =, tmp1, ., compareTo, (, tmp2, ), <=, 0, ;, pmc, =]
[mContext, ), ;, done, =, tmp1, ., compareTo, (, tmp2, ), <=, 0, ;, pmc, =, BigDecimal, ., ONE, ;]
[;, done, =, tmp1, ., compareTo, (, tmp2, ), <=, 0, ;, pmc, =, BigDecimal, ., ONE, ;, pc, =]
[tmp2, ), <=, 0, ;, pmc, =, BigDecimal, ., ONE, ;, pc, =, c, ;, for, (, int, j, =]
[<=, 0, ;, pmc, =, BigDecimal, ., ONE, ;, pc, =, c, ;, for, (, int, j, =, 1, ;]
[<=, 0, ;, pmc, =, BigDecimal, ., ONE, ;, pc, =, c, ;, for, (, int, j, =, 1, ;]
[;, pmc, =, BigDecimal, ., ONE, ;, pc, =, c, ;, for, (, int, j, =, 1, ;, j, <]
[=, BigDecimal, ., ONE, ;, pc, =, c, ;, for, (, int, j, =, 1, ;, j, <, numberOfPoints, ;]
[=, BigDecimal, ., ONE, ;, pc, =, c, ;, for, (, int, j, =, 1, ;, j, <, numberOfPoints, ;]
[;, for, (, int, j, =, 1, ;, j, <, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =]
[int, j, =, 1, ;, j, <, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (]
[int, j, =, 1, ;, j, <, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (]
[int, j, =, 1, ;, j, <, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (]
[=, 1, ;, j, <, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (, 2, *]
[;, j, <, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (, 2, *, j, +]
[<, numberOfPoints, ;, j, ++, ), {, final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (, 2, *, j, +, 1, ,]
[final, BigDecimal, b_two_j_p_1, =, new, BigDecimal, (, 2, *, j, +, 1, ,, mContext, ), ;, final, BigDecimal, b_j, =]
[=, new, BigDecimal, (, 2, *, j, +, 1, ,, mContext, ), ;, final, BigDecimal, b_j, =, new, BigDecimal, (]
[BigDecimal, (, 2, *, j, +, 1, ,, mContext, ), ;, final, BigDecimal, b_j, =, new, BigDecimal, (, j, ,]
[,, mContext, ), ;, final, BigDecimal, b_j, =, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =]
[;, final, BigDecimal, b_j, =, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (]
[;, final, BigDecimal, b_j, =, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (]
[BigDecimal, b_j, =, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +]
[=, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,]
[(, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;]
[,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;, tmp1, =]
[,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;, tmp1, =]
[final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;, tmp1, =, c, ., multiply, (]
[b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;, tmp1, =, c, ., multiply, (, b_two_j_p_1, ,]
[BigDecimal, (, j, +, 1, ,, mContext, ), ;, tmp1, =, c, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;]
[j, +, 1, ,, mContext, ), ;, tmp1, =, c, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =]
[j, +, 1, ,, mContext, ), ;, tmp1, =, c, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =]
[mContext, ), ;, tmp1, =, c, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pc, ., multiply, (]
[;, tmp1, =, c, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pc, ., multiply, (, tmp1, ,]
[c, ., multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pc, ., multiply, (, tmp1, ,, mContext, ), ;]
[multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pc, ., multiply, (, tmp1, ,, mContext, ), ;, tmp2, =]
[multiply, (, b_two_j_p_1, ,, mContext, ), ;, tmp1, =, pc, ., multiply, (, tmp1, ,, mContext, ), ;, tmp2, =]
[mContext, ), ;, tmp1, =, pc, ., multiply, (, tmp1, ,, mContext, ), ;, tmp2, =, pmc, ., multiply, (]
[;, tmp1, =, pc, ., multiply, (, tmp1, ,, mContext, ), ;, tmp2, =, pmc, ., multiply, (, b_j, ,]
[(, tmp1, ,, mContext, ), ;, tmp2, =, pmc, ., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppc, =]
[(, tmp1, ,, mContext, ), ;, tmp2, =, pmc, ., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppc, =]
[), ;, tmp2, =, pmc, ., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppc, =, tmp1, ., subtract, (]
[tmp2, =, pmc, ., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppc, =, tmp1, ., subtract, (, tmp2, ,]
[., multiply, (, b_j, ,, mContext, ), ;, BigDecimal, ppc, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;]
[(, b_j, ,, mContext, ), ;, BigDecimal, ppc, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppc, =]
[(, b_j, ,, mContext, ), ;, BigDecimal, ppc, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppc, =]
[), ;, BigDecimal, ppc, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppc, =, ppc, ., divide, (]
[BigDecimal, ppc, =, tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppc, =, ppc, ., divide, (, b_j_p_1, ,]
[tmp1, ., subtract, (, tmp2, ,, mContext, ), ;, ppc, =, ppc, ., divide, (, b_j_p_1, ,, mContext, ), ;]
[subtract, (, tmp2, ,, mContext, ), ;, ppc, =, ppc, ., divide, (, b_j_p_1, ,, mContext, ), ;, pmc, =]
[tmp2, ,, mContext, ), ;, ppc, =, ppc, ., divide, (, b_j_p_1, ,, mContext, ), ;, pmc, =, pc, ;]
[mContext, ), ;, ppc, =, ppc, ., divide, (, b_j_p_1, ,, mContext, ), ;, pmc, =, pc, ;, pc, =]
[ppc, ., divide, (, b_j_p_1, ,, mContext, ), ;, pmc, =, pc, ;, pc, =, ppc, ;, }, if, (]
[., divide, (, b_j_p_1, ,, mContext, ), ;, pmc, =, pc, ;, pc, =, ppc, ;, }, if, (, !]
[mContext, ), ;, pmc, =, pc, ;, pc, =, ppc, ;, }, if, (, !, done, ), {, if, (]
[mContext, ), ;, pmc, =, pc, ;, pc, =, ppc, ;, }, if, (, !, done, ), {, if, (]
[mContext, ), ;, pmc, =, pc, ;, pc, =, ppc, ;, }, if, (, !, done, ), {, if, (]
[mContext, ), ;, pmc, =, pc, ;, pc, =, ppc, ;, }, if, (, !, done, ), {, if, (]
[;, pc, =, ppc, ;, }, if, (, !, done, ), {, if, (, pa, ., signum, (, ), *]
[;, pc, =, ppc, ;, }, if, (, !, done, ), {, if, (, pa, ., signum, (, ), *]
[if, (, !, done, ), {, if, (, pa, ., signum, (, ), *, pc, ., signum, (, ), <=]
[done, ), {, if, (, pa, ., signum, (, ), *, pc, ., signum, (, ), <=, 0, ), {]
[{, if, (, pa, ., signum, (, ), *, pc, ., signum, (, ), <=, 0, ), {, b, =]
[(, pa, ., signum, (, ), *, pc, ., signum, (, ), <=, 0, ), {, b, =, c, ;]
[., signum, (, ), *, pc, ., signum, (, ), <=, 0, ), {, b, =, c, ;, pmb, =]
[(, ), *, pc, ., signum, (, ), <=, 0, ), {, b, =, c, ;, pmb, =, pmc, ;]
[*, pc, ., signum, (, ), <=, 0, ), {, b, =, c, ;, pmb, =, pmc, ;, pb, =]
[), <=, 0, ), {, b, =, c, ;, pmb, =, pmc, ;, pb, =, pc, ;, }, else, {]
[0, ), {, b, =, c, ;, pmb, =, pmc, ;, pb, =, pc, ;, }, else, {, a, =]
[{, b, =, c, ;, pmb, =, pmc, ;, pb, =, pc, ;, }, else, {, a, =, c, ;]
[=, c, ;, pmb, =, pmc, ;, pb, =, pc, ;, }, else, {, a, =, c, ;, pma, =]
[;, pmb, =, pmc, ;, pb, =, pc, ;, }, else, {, a, =, c, ;, pma, =, pmc, ;]
[=, pmc, ;, pb, =, pc, ;, }, else, {, a, =, c, ;, pma, =, pmc, ;, pa, =]
[pb, =, pc, ;, }, else, {, a, =, c, ;, pma, =, pmc, ;, pa, =, pc, ;, }]
[pc, ;, }, else, {, a, =, c, ;, pma, =, pmc, ;, pa, =, pc, ;, }, c, =]
[pc, ;, }, else, {, a, =, c, ;, pma, =, pmc, ;, pa, =, pc, ;, }, c, =]
[pc, ;, }, else, {, a, =, c, ;, pma, =, pmc, ;, pa, =, pc, ;, }, c, =]
[{, a, =, c, ;, pma, =, pmc, ;, pa, =, pc, ;, }, c, =, a, ., add, (]
[=, c, ;, pma, =, pmc, ;, pa, =, pc, ;, }, c, =, a, ., add, (, b, ,]
[pmc, ;, pa, =, pc, ;, }, c, =, a, ., add, (, b, ,, mContext, ), ., multiply, (]
[pa, =, pc, ;, }, c, =, a, ., add, (, b, ,, mContext, ), ., multiply, (, oneHalf, ,]
[add, (, b, ,, mContext, ), ., multiply, (, oneHalf, ,, mContext, ), ;, }, }, final, BigDecimal, nP, =]
[,, mContext, ), ., multiply, (, oneHalf, ,, mContext, ), ;, }, }, final, BigDecimal, nP, =, new, BigDecimal, (]
[), ., multiply, (, oneHalf, ,, mContext, ), ;, }, }, final, BigDecimal, nP, =, new, BigDecimal, (, numberOfPoints, ,]
[mContext, ), ;, }, }, final, BigDecimal, nP, =, new, BigDecimal, (, numberOfPoints, ,, mContext, ), ;, BigDecimal, tmp1, =]
[mContext, ), ;, }, }, final, BigDecimal, nP, =, new, BigDecimal, (, numberOfPoints, ,, mContext, ), ;, BigDecimal, tmp1, =]
[}, final, BigDecimal, nP, =, new, BigDecimal, (, numberOfPoints, ,, mContext, ), ;, BigDecimal, tmp1, =, pmc, ., subtract, (]
[}, final, BigDecimal, nP, =, new, BigDecimal, (, numberOfPoints, ,, mContext, ), ;, BigDecimal, tmp1, =, pmc, ., subtract, (]
[=, new, BigDecimal, (, numberOfPoints, ,, mContext, ), ;, BigDecimal, tmp1, =, pmc, ., subtract, (, c, ., multiply, (]
[BigDecimal, (, numberOfPoints, ,, mContext, ), ;, BigDecimal, tmp1, =, pmc, ., subtract, (, c, ., multiply, (, pc, ,]
[,, mContext, ), ;, BigDecimal, tmp1, =, pmc, ., subtract, (, c, ., multiply, (, pc, ,, mContext, ), ,]
[;, BigDecimal, tmp1, =, pmc, ., subtract, (, c, ., multiply, (, pc, ,, mContext, ), ,, mContext, ), ;]
[tmp1, =, pmc, ., subtract, (, c, ., multiply, (, pc, ,, mContext, ), ,, mContext, ), ;, tmp1, =]
[tmp1, =, pmc, ., subtract, (, c, ., multiply, (, pc, ,, mContext, ), ,, mContext, ), ;, tmp1, =]
[subtract, (, c, ., multiply, (, pc, ,, mContext, ), ,, mContext, ), ;, tmp1, =, tmp1, ., multiply, (]
[., multiply, (, pc, ,, mContext, ), ,, mContext, ), ;, tmp1, =, tmp1, ., multiply, (, nP, ), ;]
[(, pc, ,, mContext, ), ,, mContext, ), ;, tmp1, =, tmp1, ., multiply, (, nP, ), ;, tmp1, =]
[(, pc, ,, mContext, ), ,, mContext, ), ;, tmp1, =, tmp1, ., multiply, (, nP, ), ;, tmp1, =]
[), ,, mContext, ), ;, tmp1, =, tmp1, ., multiply, (, nP, ), ;, tmp1, =, tmp1, ., pow, (]
[mContext, ), ;, tmp1, =, tmp1, ., multiply, (, nP, ), ;, tmp1, =, tmp1, ., pow, (, 2, ,]
[., multiply, (, nP, ), ;, tmp1, =, tmp1, ., pow, (, 2, ,, mContext, ), ;, BigDecimal, tmp2, =]
[., multiply, (, nP, ), ;, tmp1, =, tmp1, ., pow, (, 2, ,, mContext, ), ;, BigDecimal, tmp2, =]
[), ;, tmp1, =, tmp1, ., pow, (, 2, ,, mContext, ), ;, BigDecimal, tmp2, =, c, ., pow, (]
[tmp1, =, tmp1, ., pow, (, 2, ,, mContext, ), ;, BigDecimal, tmp2, =, c, ., pow, (, 2, ,]
[., pow, (, 2, ,, mContext, ), ;, BigDecimal, tmp2, =, c, ., pow, (, 2, ,, mContext, ), ;]
[(, 2, ,, mContext, ), ;, BigDecimal, tmp2, =, c, ., pow, (, 2, ,, mContext, ), ;, tmp2, =]
[(, 2, ,, mContext, ), ;, BigDecimal, tmp2, =, c, ., pow, (, 2, ,, mContext, ), ;, tmp2, =]
[(, 2, ,, mContext, ), ;, BigDecimal, tmp2, =, c, ., pow, (, 2, ,, mContext, ), ;, tmp2, =]
[BigDecimal, tmp2, =, c, ., pow, (, 2, ,, mContext, ), ;, tmp2, =, BigDecimal, ., ONE, ., subtract, (]
[=, c, ., pow, (, 2, ,, mContext, ), ;, tmp2, =, BigDecimal, ., ONE, ., subtract, (, tmp2, ,]
[pow, (, 2, ,, mContext, ), ;, tmp2, =, BigDecimal, ., ONE, ., subtract, (, tmp2, ,, mContext, ), ;]
[2, ,, mContext, ), ;, tmp2, =, BigDecimal, ., ONE, ., subtract, (, tmp2, ,, mContext, ), ;, tmp2, =]
[2, ,, mContext, ), ;, tmp2, =, BigDecimal, ., ONE, ., subtract, (, tmp2, ,, mContext, ), ;, tmp2, =]
[;, tmp2, =, BigDecimal, ., ONE, ., subtract, (, tmp2, ,, mContext, ), ;, tmp2, =, tmp2, ., multiply, (]
[=, BigDecimal, ., ONE, ., subtract, (, tmp2, ,, mContext, ), ;, tmp2, =, tmp2, ., multiply, (, two, ,]
[ONE, ., subtract, (, tmp2, ,, mContext, ), ;, tmp2, =, tmp2, ., multiply, (, two, ,, mContext, ), ;]
[subtract, (, tmp2, ,, mContext, ), ;, tmp2, =, tmp2, ., multiply, (, two, ,, mContext, ), ;, tmp2, =]
[subtract, (, tmp2, ,, mContext, ), ;, tmp2, =, tmp2, ., multiply, (, two, ,, mContext, ), ;, tmp2, =]
[mContext, ), ;, tmp2, =, tmp2, ., multiply, (, two, ,, mContext, ), ;, tmp2, =, tmp2, ., divide, (]
[;, tmp2, =, tmp2, ., multiply, (, two, ,, mContext, ), ;, tmp2, =, tmp2, ., divide, (, tmp1, ,]
[tmp2, ., multiply, (, two, ,, mContext, ), ;, tmp2, =, tmp2, ., divide, (, tmp1, ,, mContext, ), ;]
[tmp2, ., multiply, (, two, ,, mContext, ), ;, tmp2, =, tmp2, ., divide, (, tmp1, ,, mContext, ), ;]
[multiply, (, two, ,, mContext, ), ;, tmp2, =, tmp2, ., divide, (, tmp1, ,, mContext, ), ;, points, []
[,, mContext, ), ;, tmp2, =, tmp2, ., divide, (, tmp1, ,, mContext, ), ;, points, [, i, ], =]
[), ;, tmp2, =, tmp2, ., divide, (, tmp1, ,, mContext, ), ;, points, [, i, ], =, c, ;]
[), ;, tmp2, =, tmp2, ., divide, (, tmp1, ,, mContext, ), ;, points, [, i, ], =, c, ;]
[tmp2, =, tmp2, ., divide, (, tmp1, ,, mContext, ), ;, points, [, i, ], =, c, ;, weights, []
[., divide, (, tmp1, ,, mContext, ), ;, points, [, i, ], =, c, ;, weights, [, i, ], =]
[), ;, points, [, i, ], =, c, ;, weights, [, i, ], =, tmp2, ;, final, int, idx, =]
[), ;, points, [, i, ], =, c, ;, weights, [, i, ], =, tmp2, ;, final, int, idx, =]
[), ;, points, [, i, ], =, c, ;, weights, [, i, ], =, tmp2, ;, final, int, idx, =]
[points, [, i, ], =, c, ;, weights, [, i, ], =, tmp2, ;, final, int, idx, =, numberOfPoints, -]
[i, ], =, c, ;, weights, [, i, ], =, tmp2, ;, final, int, idx, =, numberOfPoints, -, i, -]
[=, c, ;, weights, [, i, ], =, tmp2, ;, final, int, idx, =, numberOfPoints, -, i, -, 1, ;]
[=, c, ;, weights, [, i, ], =, tmp2, ;, final, int, idx, =, numberOfPoints, -, i, -, 1, ;]
[;, weights, [, i, ], =, tmp2, ;, final, int, idx, =, numberOfPoints, -, i, -, 1, ;, points, []
[i, ], =, tmp2, ;, final, int, idx, =, numberOfPoints, -, i, -, 1, ;, points, [, idx, ], =]
[i, ], =, tmp2, ;, final, int, idx, =, numberOfPoints, -, i, -, 1, ;, points, [, idx, ], =]
[;, final, int, idx, =, numberOfPoints, -, i, -, 1, ;, points, [, idx, ], =, c, ., negate, (]
[idx, =, numberOfPoints, -, i, -, 1, ;, points, [, idx, ], =, c, ., negate, (, mContext, ), ;]
[idx, =, numberOfPoints, -, i, -, 1, ;, points, [, idx, ], =, c, ., negate, (, mContext, ), ;]
[numberOfPoints, -, i, -, 1, ;, points, [, idx, ], =, c, ., negate, (, mContext, ), ;, weights, []
[-, 1, ;, points, [, idx, ], =, c, ., negate, (, mContext, ), ;, weights, [, idx, ], =]
[idx, ], =, c, ., negate, (, mContext, ), ;, weights, [, idx, ], =, tmp2, ;, }, if, (]
[idx, ], =, c, ., negate, (, mContext, ), ;, weights, [, idx, ], =, tmp2, ;, }, if, (]
[idx, ], =, c, ., negate, (, mContext, ), ;, weights, [, idx, ], =, tmp2, ;, }, if, (]
[=, c, ., negate, (, mContext, ), ;, weights, [, idx, ], =, tmp2, ;, }, if, (, numberOfPoints, %]
[., negate, (, mContext, ), ;, weights, [, idx, ], =, tmp2, ;, }, if, (, numberOfPoints, %, 2, !=]
[weights, [, idx, ], =, tmp2, ;, }, if, (, numberOfPoints, %, 2, !=, 0, ), {, BigDecimal, pmc, =]
[weights, [, idx, ], =, tmp2, ;, }, if, (, numberOfPoints, %, 2, !=, 0, ), {, BigDecimal, pmc, =]
[(, numberOfPoints, %, 2, !=, 0, ), {, BigDecimal, pmc, =, BigDecimal, ., ONE, ;, for, (, int, j, =]
[%, 2, !=, 0, ), {, BigDecimal, pmc, =, BigDecimal, ., ONE, ;, for, (, int, j, =, 1, ;]
[%, 2, !=, 0, ), {, BigDecimal, pmc, =, BigDecimal, ., ONE, ;, for, (, int, j, =, 1, ;]
[!=, 0, ), {, BigDecimal, pmc, =, BigDecimal, ., ONE, ;, for, (, int, j, =, 1, ;, j, <]
[), {, BigDecimal, pmc, =, BigDecimal, ., ONE, ;, for, (, int, j, =, 1, ;, j, <, numberOfPoints, ;]
[BigDecimal, pmc, =, BigDecimal, ., ONE, ;, for, (, int, j, =, 1, ;, j, <, numberOfPoints, ;, j, +=]
[for, (, int, j, =, 1, ;, j, <, numberOfPoints, ;, j, +=, 2, ), {, final, BigDecimal, b_j, =]
[j, =, 1, ;, j, <, numberOfPoints, ;, j, +=, 2, ), {, final, BigDecimal, b_j, =, new, BigDecimal, (]
[1, ;, j, <, numberOfPoints, ;, j, +=, 2, ), {, final, BigDecimal, b_j, =, new, BigDecimal, (, j, ,]
[+=, 2, ), {, final, BigDecimal, b_j, =, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =]
[{, final, BigDecimal, b_j, =, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (]
[{, final, BigDecimal, b_j, =, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (]
[BigDecimal, b_j, =, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +]
[=, new, BigDecimal, (, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,]
[(, j, ,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;]
[,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;, pmc, =]
[,, mContext, ), ;, final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;, pmc, =]
[final, BigDecimal, b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;, pmc, =, pmc, ., multiply, (]
[b_j_p_1, =, new, BigDecimal, (, j, +, 1, ,, mContext, ), ;, pmc, =, pmc, ., multiply, (, b_j, ,]
[BigDecimal, (, j, +, 1, ,, mContext, ), ;, pmc, =, pmc, ., multiply, (, b_j, ,, mContext, ), ;]
[j, +, 1, ,, mContext, ), ;, pmc, =, pmc, ., multiply, (, b_j, ,, mContext, ), ;, pmc, =]
[j, +, 1, ,, mContext, ), ;, pmc, =, pmc, ., multiply, (, b_j, ,, mContext, ), ;, pmc, =]
[mContext, ), ;, pmc, =, pmc, ., multiply, (, b_j, ,, mContext, ), ;, pmc, =, pmc, ., divide, (]
[;, pmc, =, pmc, ., multiply, (, b_j, ,, mContext, ), ;, pmc, =, pmc, ., divide, (, b_j_p_1, ,]
[pmc, ., multiply, (, b_j, ,, mContext, ), ;, pmc, =, pmc, ., divide, (, b_j_p_1, ,, mContext, ), ;]
[multiply, (, b_j, ,, mContext, ), ;, pmc, =, pmc, ., divide, (, b_j_p_1, ,, mContext, ), ;, pmc, =]
[multiply, (, b_j, ,, mContext, ), ;, pmc, =, pmc, ., divide, (, b_j_p_1, ,, mContext, ), ;, pmc, =]
[mContext, ), ;, pmc, =, pmc, ., divide, (, b_j_p_1, ,, mContext, ), ;, pmc, =, pmc, ., negate, (]
[(, b_j_p_1, ,, mContext, ), ;, pmc, =, pmc, ., negate, (, mContext, ), ;, }, final, BigDecimal, nP, =]
[mContext, ), ;, pmc, =, pmc, ., negate, (, mContext, ), ;, }, final, BigDecimal, nP, =, new, BigDecimal, (]
[;, pmc, =, pmc, ., negate, (, mContext, ), ;, }, final, BigDecimal, nP, =, new, BigDecimal, (, numberOfPoints, ,]
[(, mContext, ), ;, }, final, BigDecimal, nP, =, new, BigDecimal, (, numberOfPoints, ,, mContext, ), ;, BigDecimal, tmp1, =]
[(, mContext, ), ;, }, final, BigDecimal, nP, =, new, BigDecimal, (, numberOfPoints, ,, mContext, ), ;, BigDecimal, tmp1, =]
[}, final, BigDecimal, nP, =, new, BigDecimal, (, numberOfPoints, ,, mContext, ), ;, BigDecimal, tmp1, =, pmc, ., multiply, (]
[BigDecimal, nP, =, new, BigDecimal, (, numberOfPoints, ,, mContext, ), ;, BigDecimal, tmp1, =, pmc, ., multiply, (, nP, ,]
[new, BigDecimal, (, numberOfPoints, ,, mContext, ), ;, BigDecimal, tmp1, =, pmc, ., multiply, (, nP, ,, mContext, ), ;]
[(, numberOfPoints, ,, mContext, ), ;, BigDecimal, tmp1, =, pmc, ., multiply, (, nP, ,, mContext, ), ;, tmp1, =]
[(, numberOfPoints, ,, mContext, ), ;, BigDecimal, tmp1, =, pmc, ., multiply, (, nP, ,, mContext, ), ;, tmp1, =]
[), ;, BigDecimal, tmp1, =, pmc, ., multiply, (, nP, ,, mContext, ), ;, tmp1, =, tmp1, ., pow, (]
[BigDecimal, tmp1, =, pmc, ., multiply, (, nP, ,, mContext, ), ;, tmp1, =, tmp1, ., pow, (, 2, ,]
[(, nP, ,, mContext, ), ;, tmp1, =, tmp1, ., pow, (, 2, ,, mContext, ), ;, BigDecimal, tmp2, =]
[(, nP, ,, mContext, ), ;, tmp1, =, tmp1, ., pow, (, 2, ,, mContext, ), ;, BigDecimal, tmp2, =]
[), ;, tmp1, =, tmp1, ., pow, (, 2, ,, mContext, ), ;, BigDecimal, tmp2, =, two, ., divide, (]
[tmp1, =, tmp1, ., pow, (, 2, ,, mContext, ), ;, BigDecimal, tmp2, =, two, ., divide, (, tmp1, ,]
[., pow, (, 2, ,, mContext, ), ;, BigDecimal, tmp2, =, two, ., divide, (, tmp1, ,, mContext, ), ;]
[., pow, (, 2, ,, mContext, ), ;, BigDecimal, tmp2, =, two, ., divide, (, tmp1, ,, mContext, ), ;]
[(, 2, ,, mContext, ), ;, BigDecimal, tmp2, =, two, ., divide, (, tmp1, ,, mContext, ), ;, points, []
[mContext, ), ;, BigDecimal, tmp2, =, two, ., divide, (, tmp1, ,, mContext, ), ;, points, [, iMax, ], =]
[mContext, ), ;, BigDecimal, tmp2, =, two, ., divide, (, tmp1, ,, mContext, ), ;, points, [, iMax, ], =]
[tmp2, =, two, ., divide, (, tmp1, ,, mContext, ), ;, points, [, iMax, ], =, BigDecimal, ., ZERO, ;]
[tmp2, =, two, ., divide, (, tmp1, ,, mContext, ), ;, points, [, iMax, ], =, BigDecimal, ., ZERO, ;]
[two, ., divide, (, tmp1, ,, mContext, ), ;, points, [, iMax, ], =, BigDecimal, ., ZERO, ;, weights, []
[(, tmp1, ,, mContext, ), ;, points, [, iMax, ], =, BigDecimal, ., ZERO, ;, weights, [, iMax, ], =]
[), ;, points, [, iMax, ], =, BigDecimal, ., ZERO, ;, weights, [, iMax, ], =, tmp2, ;, }, return]
[[, iMax, ], =, tmp2, ;, }, return, new, Pair, <, BigDecimal, [, ], ,, BigDecimal, [, ], >, (]
[], =, tmp2, ;, }, return, new, Pair, <, BigDecimal, [, ], ,, BigDecimal, [, ], >, (, points, ,]
