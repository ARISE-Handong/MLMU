[google, ., javascript, ., rhino, ., Node, ;, public, class, SyntheticAst, implements, SourceAst, {, private, static, final, long, serialVersionUID, =]
[private, final, InputId, inputId, ;, private, final, SourceFile, sourceFile, ;, private, Node, root, ;, SyntheticAst, (, String, sourceName, ), {]
[private, final, InputId, inputId, ;, private, final, SourceFile, sourceFile, ;, private, Node, root, ;, SyntheticAst, (, String, sourceName, ), {]
[;, private, final, SourceFile, sourceFile, ;, private, Node, root, ;, SyntheticAst, (, String, sourceName, ), {, this, ., inputId, =]
[SourceFile, sourceFile, ;, private, Node, root, ;, SyntheticAst, (, String, sourceName, ), {, this, ., inputId, =, new, InputId, (]
[private, Node, root, ;, SyntheticAst, (, String, sourceName, ), {, this, ., inputId, =, new, InputId, (, sourceName, ), ;]
[private, Node, root, ;, SyntheticAst, (, String, sourceName, ), {, this, ., inputId, =, new, InputId, (, sourceName, ), ;]
[SyntheticAst, (, String, sourceName, ), {, this, ., inputId, =, new, InputId, (, sourceName, ), ;, this, ., sourceFile, =]
[sourceName, ), {, this, ., inputId, =, new, InputId, (, sourceName, ), ;, this, ., sourceFile, =, new, SourceFile, (]
[this, ., inputId, =, new, InputId, (, sourceName, ), ;, this, ., sourceFile, =, new, SourceFile, (, sourceName, ), ;]
[(, sourceName, ), ;, clearAst, (, ), ;, }, @, Override, public, Node, getAstRoot, (, AbstractCompiler, compiler, ), {, return]
[public, Node, getAstRoot, (, AbstractCompiler, compiler, ), {, return, root, ;, }, @, Override, public, void, clearAst, (, ), {]
[getAstRoot, (, AbstractCompiler, compiler, ), {, return, root, ;, }, @, Override, public, void, clearAst, (, ), {, root, =]
[getAstRoot, (, AbstractCompiler, compiler, ), {, return, root, ;, }, @, Override, public, void, clearAst, (, ), {, root, =]
[return, root, ;, }, @, Override, public, void, clearAst, (, ), {, root, =, IR, ., script, (, ), ;]
[return, root, ;, }, @, Override, public, void, clearAst, (, ), {, root, =, IR, ., script, (, ), ;]
[@, Override, public, void, clearAst, (, ), {, root, =, IR, ., script, (, ), ;, root, ., setInputId, (]
[void, clearAst, (, ), {, root, =, IR, ., script, (, ), ;, root, ., setInputId, (, inputId, ), ;]
[void, clearAst, (, ), {, root, =, IR, ., script, (, ), ;, root, ., setInputId, (, inputId, ), ;]
[{, root, =, IR, ., script, (, ), ;, root, ., setInputId, (, inputId, ), ;, root, ., setStaticSourceFile, (]
[inputId, ), ;, root, ., setStaticSourceFile, (, sourceFile, ), ;, }, @, Override, public, InputId, getInputId, (, ), {, return]
[Override, public, InputId, getInputId, (, ), {, return, inputId, ;, }, @, Override, public, SourceFile, getSourceFile, (, ), {, return]
[SourceFile, getSourceFile, (, ), {, return, sourceFile, ;, }, @, Override, public, void, setSourceFile, (, SourceFile, file, ), {, throw]
[), {, return, sourceFile, ;, }, @, Override, public, void, setSourceFile, (, SourceFile, file, ), {, throw, new, IllegalStateException, (]
