[,, 1.0, ), ;, }, public, GrayPaintScale, (, double, lowerBound, ,, double, upperBound, ), {, this, (, lowerBound, ,, upperBound]
[), ;, }, public, GrayPaintScale, (, double, lowerBound, ,, double, upperBound, ), {, this, (, lowerBound, ,, upperBound, ,, 255]
[,, upperBound, ,, 255, ), ;, }, public, GrayPaintScale, (, double, lowerBound, ,, double, upperBound, ,, int, alpha, ), {]
[,, 255, ), ;, }, public, GrayPaintScale, (, double, lowerBound, ,, double, upperBound, ,, int, alpha, ), {, if, (]
[), ;, }, public, GrayPaintScale, (, double, lowerBound, ,, double, upperBound, ,, int, alpha, ), {, if, (, lowerBound, >=]
[), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (, alpha, <, 0, ||, alpha, >, 255, )]
[>=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (, alpha, <, 0, ||, alpha, >]
[), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (, alpha, <, 0, ||, alpha, >, 255, )]
[;, }, if, (, alpha, <, 0, ||, alpha, >, 255, ), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;]
[), ;, }, if, (, alpha, <, 0, ||, alpha, >, 255, ), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", )]
[), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =]
[||, alpha, >, 255, ), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =, lowerBound, ;]
[<, 0, ||, alpha, >, 255, ), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =]
[||, alpha, >, 255, ), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =, lowerBound, ;]
[), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =]
[>, 255, ), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, .]
[), {, throw, new, IllegalArgumentException, (, "Requires alpha in the range 0 to 255.", ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =]
[;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., alpha, =, alpha, ;]
[), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., alpha, =, alpha]
[=, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., alpha, =, alpha, ;, }, public, double, getLowerBound, (]
[., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., alpha, =, alpha, ;, }, public, double]
[;, this, ., upperBound, =, upperBound, ;, this, ., alpha, =, alpha, ;, }, public, double, getLowerBound, (, ), {]
[=, upperBound, ;, this, ., alpha, =, alpha, ;, }, public, double, getLowerBound, (, ), {, return, this, ., lowerBound]
[., upperBound, =, upperBound, ;, this, ., alpha, =, alpha, ;, }, public, double, getLowerBound, (, ), {, return, this]
[;, this, ., alpha, =, alpha, ;, }, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }]
[=, alpha, ;, }, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, double, getUpperBound, (]
[., alpha, =, alpha, ;, }, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, double]
[;, }, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, double, getUpperBound, (, ), {]
[;, }, public, double, getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, int, getAlpha, (, ), {]
[., lowerBound, ;, }, public, double, getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, int, getAlpha, (]
[;, }, public, int, getAlpha, (, ), {, return, this, ., alpha, ;, }, public, Paint, getPaint, (, double, value]
[., upperBound, ;, }, public, int, getAlpha, (, ), {, return, this, ., alpha, ;, }, public, Paint, getPaint, (]
[;, }, public, Paint, getPaint, (, double, value, ), {, double, v, =, Math, ., max, (, value, ,, this]
[., alpha, ;, }, public, Paint, getPaint, (, double, value, ), {, double, v, =, Math, ., max, (, value]
[;, v, =, Math, ., min, (, v, ,, this, ., upperBound, ), ;, int, g, =, (, int, )]
[., max, (, value, ,, this, ., lowerBound, ), ;, v, =, Math, ., min, (, v, ,, this, .]
[,, this, ., lowerBound, ), ;, v, =, Math, ., min, (, v, ,, this, ., upperBound, ), ;, int]
[), ;, v, =, Math, ., min, (, v, ,, this, ., upperBound, ), ;, int, g, =, (, int]
[., lowerBound, ), ;, v, =, Math, ., min, (, v, ,, this, ., upperBound, ), ;, int, g, =]
[=, Math, ., min, (, v, ,, this, ., upperBound, ), ;, int, g, =, (, int, ), (, (]
[;, int, g, =, (, int, ), (, (, v, -, this, ., lowerBound, ), /, (, this, ., upperBound]
[., min, (, v, ,, this, ., upperBound, ), ;, int, g, =, (, int, ), (, (, v, -]
[,, this, ., upperBound, ), ;, int, g, =, (, int, ), (, (, v, -, this, ., lowerBound, )]
[), ;, int, g, =, (, int, ), (, (, v, -, this, ., lowerBound, ), /, (, this, .]
[., upperBound, ), ;, int, g, =, (, int, ), (, (, v, -, this, ., lowerBound, ), /, (]
[;, return, new, Color, (, g, ,, g, ,, g, ,, this, ., alpha, ), ;, }, public, boolean, equals]
[;, return, new, Color, (, g, ,, g, ,, g, ,, this, ., alpha, ), ;, }, public, boolean, equals]
[), ;, return, new, Color, (, g, ,, g, ,, g, ,, this, ., alpha, ), ;, }, public, boolean]
[*, 255.0, ), ;, return, new, Color, (, g, ,, g, ,, g, ,, this, ., alpha, ), ;, }]
[/, (, this, ., upperBound, -, this, ., lowerBound, ), *, 255.0, ), ;, return, new, Color, (, g, ,]
[), /, (, this, ., upperBound, -, this, ., lowerBound, ), *, 255.0, ), ;, return, new, Color, (, g]
[-, this, ., lowerBound, ), /, (, this, ., upperBound, -, this, ., lowerBound, ), *, 255.0, ), ;, return]
[), /, (, this, ., upperBound, -, this, ., lowerBound, ), *, 255.0, ), ;, return, new, Color, (, g]
[., lowerBound, ), /, (, this, ., upperBound, -, this, ., lowerBound, ), *, 255.0, ), ;, return, new, Color]
[*, 255.0, ), ;, return, new, Color, (, g, ,, g, ,, g, ,, this, ., alpha, ), ;, }]
[), *, 255.0, ), ;, return, new, Color, (, g, ,, g, ,, g, ,, this, ., alpha, ), ;]
[-, this, ., lowerBound, ), *, 255.0, ), ;, return, new, Color, (, g, ,, g, ,, g, ,, this]
[., upperBound, -, this, ., lowerBound, ), *, 255.0, ), ;, return, new, Color, (, g, ,, g, ,, g]
[), *, 255.0, ), ;, return, new, Color, (, g, ,, g, ,, g, ,, this, ., alpha, ), ;]
[., lowerBound, ), *, 255.0, ), ;, return, new, Color, (, g, ,, g, ,, g, ,, this, ., alpha]
[), ;, return, new, Color, (, g, ,, g, ,, g, ,, this, ., alpha, ), ;, }, public, boolean]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[,, g, ,, g, ,, this, ., alpha, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if]
[,, g, ,, this, ., alpha, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj]
[,, this, ., alpha, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[., alpha, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, GrayPaintScale, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, GrayPaintScale, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, GrayPaintScale, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, GrayPaintScale, ), ), {, return, false, ;, }, GrayPaintScale, that, =, (]
[), {, return, false, ;, }, GrayPaintScale, that, =, (, GrayPaintScale, ), obj, ;, if, (, this, ., lowerBound, !=]
[), {, return, false, ;, }, GrayPaintScale, that, =, (, GrayPaintScale, ), obj, ;, if, (, this, ., lowerBound, !=]
[), ), {, return, false, ;, }, GrayPaintScale, that, =, (, GrayPaintScale, ), obj, ;, if, (, this, ., lowerBound]
[instanceof, GrayPaintScale, ), ), {, return, false, ;, }, GrayPaintScale, that, =, (, GrayPaintScale, ), obj, ;, if, (, this]
[;, }, GrayPaintScale, that, =, (, GrayPaintScale, ), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, )]
[;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, .]
[;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, .]
[), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;]
[!=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, )]
[., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;]
[., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return]
[;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., alpha, !=, that, ., alpha, ), {, return, false, ;]
[!=, that, ., upperBound, ), {, return, false, ;, }, if, (, this, ., alpha, !=, that, ., alpha, )]
[., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, this, ., alpha, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., alpha, !=, that, ., alpha, ), {, return, false, ;]
[., upperBound, ), {, return, false, ;, }, if, (, this, ., alpha, !=, that, ., alpha, ), {, return]
[;, }, if, (, this, ., alpha, !=, that, ., alpha, ), {, return, false, ;, }, return, true, ;]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =, 7]
[!=, that, ., alpha, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {]
[., alpha, !=, that, ., alpha, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =, 7]
[., alpha, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, hash]
[;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, hash, =, 7, ;, hash, =, HashUtilities]
[;, }, public, int, hashCode, (, ), {, int, hash, =, 7, ;, hash, =, HashUtilities, ., hashCode, (, hash]
[;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., lowerBound, ), ;, hash, =, HashUtilities, ., hashCode, (]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., lowerBound, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., upperBound, ), ;, hash, =, 43, *, hash, +]
[., hashCode, (, hash, ,, this, ., lowerBound, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, .]
[,, this, ., lowerBound, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., upperBound, ), ;, hash]
[), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., upperBound, ), ;, hash, =, 43, *, hash]
[., lowerBound, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., upperBound, ), ;, hash, =, 43]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., upperBound, ), ;, hash, =, 43, *, hash, +, this, .]
[;, hash, =, 43, *, hash, +, this, ., alpha, ;, return, hash, ;, }, public, Object, clone, (, )]
[., hashCode, (, hash, ,, this, ., upperBound, ), ;, hash, =, 43, *, hash, +, this, ., alpha, ;]
[,, this, ., upperBound, ), ;, hash, =, 43, *, hash, +, this, ., alpha, ;, return, hash, ;, }]
[), ;, hash, =, 43, *, hash, +, this, ., alpha, ;, return, hash, ;, }, public, Object, clone, (]
[., upperBound, ), ;, hash, =, 43, *, hash, +, this, ., alpha, ;, return, hash, ;, }, public, Object]
[=, 43, *, hash, +, this, ., alpha, ;, return, hash, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException]
[;, return, hash, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;]
[+, this, ., alpha, ;, return, hash, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, .]
[*, hash, +, this, ., alpha, ;, return, hash, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[+, this, ., alpha, ;, return, hash, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, .]
[;, return, hash, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;]
[., alpha, ;, return, hash, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, }]
[;, }, }]
[., clone, (, ), ;, }, }]
