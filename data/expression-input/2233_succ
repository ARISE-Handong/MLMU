[private, static, class, Flags, {, private, static, final, WarningGuardSpec, warningGuardSpec, =, new, WarningGuardSpec, (, ), ;, @, Option, (, name]
[), private, static, class, Flags, {, private, static, final, WarningGuardSpec, warningGuardSpec, =, new, WarningGuardSpec, (, ), ;, @, Option, (]
[;, @, Option, (, name, =, "--help", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Displays this message", ), private, boolean]
[private, boolean, display_help, =, false, ;, @, Option, (, name, =, "--print_tree", ,, handler, =, BooleanOptionHandler, ., class, ,, usage]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Displays this message", ), private, boolean, display_help, =, false, ;, @, Option, (]
[,, usage, =, "Displays this message", ), private, boolean, display_help, =, false, ;, @, Option, (, name, =, "--print_tree", ,, handler, =]
[), private, boolean, display_help, =, false, ;, @, Option, (, name, =, "--print_tree", ,, handler, =, BooleanOptionHandler, ., class, ,]
[;, @, Option, (, name, =, "--print_tree", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints out the parse tree and exits", ), private, boolean]
[private, boolean, print_tree, =, false, ;, @, Option, (, name, =, "--print_ast", ,, handler, =, BooleanOptionHandler, ., class, ,, usage]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints out the parse tree and exits", ), private, boolean, print_tree, =, false, ;, @, Option, (]
[,, usage, =, "Prints out the parse tree and exits", ), private, boolean, print_tree, =, false, ;, @, Option, (, name, =, "--print_ast", ,, handler, =]
[), private, boolean, print_tree, =, false, ;, @, Option, (, name, =, "--print_ast", ,, handler, =, BooleanOptionHandler, ., class, ,]
[;, @, Option, (, name, =, "--print_ast", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints a dot file describing the internal abstract syntax", +, " tree and exits", )]
[private, boolean, print_ast, =, false, ;, @, Option, (, name, =, "--print_pass_graph", ,, handler, =, BooleanOptionHandler, ., class, ,, usage]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints a dot file describing the internal abstract syntax", +, " tree and exits", ), private, boolean, print_ast, =, false, ;, @]
[,, usage, =, "Prints a dot file describing the internal abstract syntax", +, " tree and exits", ), private, boolean, print_ast, =, false, ;, @, Option, (, name, =, "--print_pass_graph", ,]
[), private, boolean, print_ast, =, false, ;, @, Option, (, name, =, "--print_pass_graph", ,, handler, =, BooleanOptionHandler, ., class, ,]
[+, " tree and exits", ), private, boolean, print_ast, =, false, ;, @, Option, (, name, =, "--print_pass_graph", ,, handler, =, BooleanOptionHandler, .]
[), private, boolean, print_ast, =, false, ;, @, Option, (, name, =, "--print_pass_graph", ,, handler, =, BooleanOptionHandler, ., class, ,]
[;, @, Option, (, name, =, "--print_pass_graph", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints a dot file describing the passes that will get run", +, " and exits", )]
[private, boolean, print_pass_graph, =, false, ;, @, Option, (, name, =, "--jscomp_dev_mode", ,, aliases, =, {, "--dev_mode", }, ), private]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints a dot file describing the passes that will get run", +, " and exits", ), private, boolean, print_pass_graph, =, false, ;, @]
[,, usage, =, "Prints a dot file describing the passes that will get run", +, " and exits", ), private, boolean, print_pass_graph, =, false, ;, @, Option, (, name, =, "--jscomp_dev_mode", ,]
[), private, boolean, print_pass_graph, =, false, ;, @, Option, (, name, =, "--jscomp_dev_mode", ,, aliases, =, {, "--dev_mode", }, )]
[+, " and exits", ), private, boolean, print_pass_graph, =, false, ;, @, Option, (, name, =, "--jscomp_dev_mode", ,, aliases, =, {, "--dev_mode"]
[), private, boolean, print_pass_graph, =, false, ;, @, Option, (, name, =, "--jscomp_dev_mode", ,, aliases, =, {, "--dev_mode", }, )]
[;, @, Option, (, name, =, "--jscomp_dev_mode", ,, aliases, =, {, "--dev_mode", }, ), private, CompilerOptions, ., DevMode, jscomp_dev_mode, =]
[private, CompilerOptions, ., DevMode, jscomp_dev_mode, =, CompilerOptions, ., DevMode, ., OFF, ;, @, Option, (, name, =, "--logging_level", ,, usage]
[,, aliases, =, {, "--dev_mode", }, ), private, CompilerOptions, ., DevMode, jscomp_dev_mode, =, CompilerOptions, ., DevMode, ., OFF, ;, @]
[), private, CompilerOptions, ., DevMode, jscomp_dev_mode, =, CompilerOptions, ., DevMode, ., OFF, ;, @, Option, (, name, =, "--logging_level", ,]
[}, ), private, CompilerOptions, ., DevMode, jscomp_dev_mode, =, CompilerOptions, ., DevMode, ., OFF, ;, @, Option, (, name, =, "--logging_level"]
[;, @, Option, (, name, =, "--logging_level", ,, usage, =, "The logging level (standard java.util.logging.Level", +, " values) for Compiler progress. Does not control errors or", +, " warnings for the JavaScript code under compilation", ), private, String, logging_level, =]
[., OFF, ;, @, Option, (, name, =, "--logging_level", ,, usage, =, "The logging level (standard java.util.logging.Level", +, " values) for Compiler progress. Does not control errors or", +, " warnings for the JavaScript code under compilation", ), private, String]
[., DevMode, ., OFF, ;, @, Option, (, name, =, "--logging_level", ,, usage, =, "The logging level (standard java.util.logging.Level", +, " values) for Compiler progress. Does not control errors or", +, " warnings for the JavaScript code under compilation", )]
[private, String, logging_level, =, Level, ., WARNING, ., getName, (, ), ;, @, Option, (, name, =, "--externs", ,, usage]
[,, usage, =, "The logging level (standard java.util.logging.Level", +, " values) for Compiler progress. Does not control errors or", +, " warnings for the JavaScript code under compilation", ), private, String, logging_level, =, Level, ., WARNING, ., getName, (, )]
[), private, String, logging_level, =, Level, ., WARNING, ., getName, (, ), ;, @, Option, (, name, =, "--externs", ,]
[+, " warnings for the JavaScript code under compilation", ), private, String, logging_level, =, Level, ., WARNING, ., getName, (, ), ;, @, Option, (, name, =]
[+, " values) for Compiler progress. Does not control errors or", +, " warnings for the JavaScript code under compilation", ), private, String, logging_level, =, Level, ., WARNING, ., getName, (, ), ;, @, Option, (]
[+, " warnings for the JavaScript code under compilation", ), private, String, logging_level, =, Level, ., WARNING, ., getName, (, ), ;, @, Option, (, name, =]
[), private, String, logging_level, =, Level, ., WARNING, ., getName, (, ), ;, @, Option, (, name, =, "--externs", ,]
[;, @, Option, (, name, =, "--externs", ,, usage, =, "The file containing JavaScript externs. You may specify", +, " multiple", ), private, List, <, String, >, externs]
[., getName, (, ), ;, @, Option, (, name, =, "--externs", ,, usage, =, "The file containing JavaScript externs. You may specify", +, " multiple", ), private, List]
[., WARNING, ., getName, (, ), ;, @, Option, (, name, =, "--externs", ,, usage, =, "The file containing JavaScript externs. You may specify", +, " multiple", )]
[private, List, <, String, >, externs, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--js", ,]
[,, usage, =, "The file containing JavaScript externs. You may specify", +, " multiple", ), private, List, <, String, >, externs, =, Lists, ., newArrayList, (, ), ;]
[), private, List, <, String, >, externs, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--js"]
[+, " multiple", ), private, List, <, String, >, externs, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name]
[), private, List, <, String, >, externs, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--js"]
[;, @, Option, (, name, =, "--js", ,, usage, =, "The JavaScript filename. You may specify multiple", ), private, List, <, String, >, js, =, Lists]
[., newArrayList, (, ), ;, @, Option, (, name, =, "--js", ,, usage, =, "The JavaScript filename. You may specify multiple", ), private, List, <, String]
[private, List, <, String, >, js, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--js_output_file", ,]
[,, usage, =, "The JavaScript filename. You may specify multiple", ), private, List, <, String, >, js, =, Lists, ., newArrayList, (, ), ;, @, Option]
[), private, List, <, String, >, js, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--js_output_file"]
[;, @, Option, (, name, =, "--js_output_file", ,, usage, =, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String, js_output_file, =, "", ;]
[., newArrayList, (, ), ;, @, Option, (, name, =, "--js_output_file", ,, usage, =, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String]
[private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =, "A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module "]
[,, usage, =, "Primary output filename. If not specified, output is ", +, "written to stdout", ), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,]
[), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =, "A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +]
[+, "written to stdout", ), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =, "A JavaScript module specification. The format is ", +]
[), private, String, js_output_file, =, "", ;, @, Option, (, name, =, "--module", ,, usage, =, "A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +]
[;, @, Option, (, name, =, "--module", ,, usage, =, "A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +]
[private, List, <, String, >, module, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--variable_map_input_file", ,]
[,, usage, =, "A JavaScript module specification. The format is ", +, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private]
[), private, List, <, String, >, module, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--variable_map_input_file"]
[+, "modules.", ), private, List, <, String, >, module, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name]
[+, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >, module, =, Lists, ., newArrayList, (, ), ;, @, Option]
[+, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >, module, =, Lists, ., newArrayList, (, ), ;]
[+, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >, module, =, Lists, ., newArrayList, (]
[+, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >, module, =, Lists, .]
[+, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >, module, =]
[+, "<name>:<num-js-files>[:[<dep>,...][:]]]. Module names must be ", +, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >]
[+, "unique. Each dep is the name of a module that this module ", +, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >, module, =]
[+, "depends on. Modules must be listed in dependency order, and JS ", +, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >, module, =, Lists, .]
[+, "source files must be listed in the corresponding order. Where ", +, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >, module, =, Lists, ., newArrayList, (]
[+, "--module flags occur in relation to --js flags is unimportant. ", +, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >, module, =, Lists, ., newArrayList, (, ), ;]
[+, "Provide the value 'auto' to trigger module creation from CommonJS", +, "modules.", ), private, List, <, String, >, module, =, Lists, ., newArrayList, (, ), ;, @, Option]
[+, "modules.", ), private, List, <, String, >, module, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name]
[), private, List, <, String, >, module, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--variable_map_input_file"]
[;, @, Option, (, name, =, "--variable_map_input_file", ,, usage, =, "File containing the serialized version of the variable ", +, "renaming map produced by a previous compilation", ), private, String, variable_map_input_file, =, "", ;]
[., newArrayList, (, ), ;, @, Option, (, name, =, "--variable_map_input_file", ,, usage, =, "File containing the serialized version of the variable ", +, "renaming map produced by a previous compilation", ), private, String]
[private, String, variable_map_input_file, =, "", ;, @, Option, (, name, =, "--property_map_input_file", ,, usage, =, "File containing the serialized version of the property ", +, "renaming map produced by a previous compilation", ), private]
[,, usage, =, "File containing the serialized version of the variable ", +, "renaming map produced by a previous compilation", ), private, String, variable_map_input_file, =, "", ;, @, Option, (, name, =, "--property_map_input_file", ,]
[), private, String, variable_map_input_file, =, "", ;, @, Option, (, name, =, "--property_map_input_file", ,, usage, =, "File containing the serialized version of the property ", +, "renaming map produced by a previous compilation", )]
[+, "renaming map produced by a previous compilation", ), private, String, variable_map_input_file, =, "", ;, @, Option, (, name, =, "--property_map_input_file", ,, usage, =, "File containing the serialized version of the property ", +]
[), private, String, variable_map_input_file, =, "", ;, @, Option, (, name, =, "--property_map_input_file", ,, usage, =, "File containing the serialized version of the property ", +, "renaming map produced by a previous compilation", )]
[;, @, Option, (, name, =, "--property_map_input_file", ,, usage, =, "File containing the serialized version of the property ", +, "renaming map produced by a previous compilation", ), private, String, property_map_input_file, =, "", ;]
[private, String, property_map_input_file, =, "", ;, @, Option, (, name, =, "--variable_map_output_file", ,, usage, =, "File where the serialized version of the variable ", +, "renaming map produced should be saved", ), private]
[,, usage, =, "File containing the serialized version of the property ", +, "renaming map produced by a previous compilation", ), private, String, property_map_input_file, =, "", ;, @, Option, (, name, =, "--variable_map_output_file", ,]
[), private, String, property_map_input_file, =, "", ;, @, Option, (, name, =, "--variable_map_output_file", ,, usage, =, "File where the serialized version of the variable ", +, "renaming map produced should be saved", )]
[+, "renaming map produced by a previous compilation", ), private, String, property_map_input_file, =, "", ;, @, Option, (, name, =, "--variable_map_output_file", ,, usage, =, "File where the serialized version of the variable ", +]
[), private, String, property_map_input_file, =, "", ;, @, Option, (, name, =, "--variable_map_output_file", ,, usage, =, "File where the serialized version of the variable ", +, "renaming map produced should be saved", )]
[;, @, Option, (, name, =, "--variable_map_output_file", ,, usage, =, "File where the serialized version of the variable ", +, "renaming map produced should be saved", ), private, String, variable_map_output_file, =, "", ;]
[private, String, variable_map_output_file, =, "", ;, @, Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,, usage]
[,, usage, =, "File where the serialized version of the variable ", +, "renaming map produced should be saved", ), private, String, variable_map_output_file, =, "", ;, @, Option, (, name, =, "--create_name_map_files", ,]
[), private, String, variable_map_output_file, =, "", ;, @, Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,]
[+, "renaming map produced should be saved", ), private, String, variable_map_output_file, =, "", ;, @, Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, .]
[), private, String, variable_map_output_file, =, "", ;, @, Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,]
[;, @, Option, (, name, =, "--create_name_map_files", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "If true, variable renaming and property renaming map ", +, "files will be produced as {binary name}_vars_map.out and ", +]
[private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =, "--property_map_output_file", ,, usage, =, "File where the serialized version of the property ", +, "renaming map produced should be saved", ), private]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "If true, variable renaming and property renaming map ", +, "files will be produced as {binary name}_vars_map.out and ", +, "{binary name}_props_map.out. Note that this flag cannot be used ", +, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file", ), private]
[,, usage, =, "If true, variable renaming and property renaming map ", +, "files will be produced as {binary name}_vars_map.out and ", +, "{binary name}_props_map.out. Note that this flag cannot be used ", +, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file", ), private, boolean, create_name_map_files, =, false, ;, @]
[), private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =, "--property_map_output_file", ,, usage, =, "File where the serialized version of the property ", +, "renaming map produced should be saved", )]
[+, "property_map_output_file", ), private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =, "--property_map_output_file", ,, usage, =, "File where the serialized version of the property ", +]
[+, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file", ), private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =, "--property_map_output_file", ,, usage, =]
[+, "{binary name}_props_map.out. Note that this flag cannot be used ", +, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file", ), private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =, "--property_map_output_file", ,]
[+, "files will be produced as {binary name}_vars_map.out and ", +, "{binary name}_props_map.out. Note that this flag cannot be used ", +, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file", ), private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =]
[+, "{binary name}_props_map.out. Note that this flag cannot be used ", +, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file", ), private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =, "--property_map_output_file", ,]
[+, "in conjunction with either variable_map_output_file or ", +, "property_map_output_file", ), private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =, "--property_map_output_file", ,, usage, =]
[+, "property_map_output_file", ), private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =, "--property_map_output_file", ,, usage, =, "File where the serialized version of the property ", +]
[), private, boolean, create_name_map_files, =, false, ;, @, Option, (, name, =, "--property_map_output_file", ,, usage, =, "File where the serialized version of the property ", +, "renaming map produced should be saved", )]
[;, @, Option, (, name, =, "--property_map_output_file", ,, usage, =, "File where the serialized version of the property ", +, "renaming map produced should be saved", ), private, String, property_map_output_file, =, "", ;]
[private, String, property_map_output_file, =, "", ;, @, Option, (, name, =, "--third_party", ,, handler, =, BooleanOptionHandler, ., class, ,, usage]
[,, usage, =, "File where the serialized version of the property ", +, "renaming map produced should be saved", ), private, String, property_map_output_file, =, "", ;, @, Option, (, name, =, "--third_party", ,]
[), private, String, property_map_output_file, =, "", ;, @, Option, (, name, =, "--third_party", ,, handler, =, BooleanOptionHandler, ., class, ,]
[+, "renaming map produced should be saved", ), private, String, property_map_output_file, =, "", ;, @, Option, (, name, =, "--third_party", ,, handler, =, BooleanOptionHandler, .]
[), private, String, property_map_output_file, =, "", ;, @, Option, (, name, =, "--third_party", ,, handler, =, BooleanOptionHandler, ., class, ,]
[;, @, Option, (, name, =, "--third_party", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Check source validity but do not enforce Closure style ", +, "rules and conventions", )]
[private, boolean, third_party, =, false, ;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =, "Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +, "errors or warnings), 2 (print summary if the 'checkTypes' "]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Check source validity but do not enforce Closure style ", +, "rules and conventions", ), private, boolean, third_party, =, false, ;, @]
[,, usage, =, "Check source validity but do not enforce Closure style ", +, "rules and conventions", ), private, boolean, third_party, =, false, ;, @, Option, (, name, =, "--summary_detail_level", ,]
[), private, boolean, third_party, =, false, ;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =, "Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +]
[+, "rules and conventions", ), private, boolean, third_party, =, false, ;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =, "Controls how detailed the compilation summary is. Values:", +]
[), private, boolean, third_party, =, false, ;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =, "Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +]
[;, @, Option, (, name, =, "--summary_detail_level", ,, usage, =, "Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +, "errors or warnings), 2 (print summary if the 'checkTypes' ", +, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", )]
[private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,, usage, =, "Interpolate output into this string at the place denoted", +, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output."]
[,, usage, =, "Controls how detailed the compilation summary is. Values:", +, " 0 (never print summary), 1 (print summary only if there are ", +, "errors or warnings), 2 (print summary if the 'checkTypes' ", +, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;, @]
[), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,, usage, =, "Interpolate output into this string at the place denoted", +, " by the marker token %output%. Use marker token %output|jsstring%", +]
[+, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,, usage, =, "Interpolate output into this string at the place denoted", +]
[+, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,, usage, =]
[+, "errors or warnings), 2 (print summary if the 'checkTypes' ", +, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,]
[+, " 0 (never print summary), 1 (print summary only if there are ", +, "errors or warnings), 2 (print summary if the 'checkTypes' ", +, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =]
[+, "errors or warnings), 2 (print summary if the 'checkTypes' ", +, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,]
[+, "diagnostic  group is enabled, see --jscomp_warning), ", +, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,, usage, =]
[+, "3 (always print summary). The default level is 1", ), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,, usage, =, "Interpolate output into this string at the place denoted", +]
[), private, int, summary_detail_level, =, 1, ;, @, Option, (, name, =, "--output_wrapper", ,, usage, =, "Interpolate output into this string at the place denoted", +, " by the marker token %output%. Use marker token %output|jsstring%", +]
[;, @, Option, (, name, =, "--output_wrapper", ,, usage, =, "Interpolate output into this string at the place denoted", +, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output.", ), private, String, output_wrapper, =]
[private, String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =, "An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +, "with a module specified using --module. The wrapper must "]
[,, usage, =, "Interpolate output into this string at the place denoted", +, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output.", ), private, String, output_wrapper, =, "", ;, @, Option, (, name, =]
[), private, String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =, "An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +]
[+, " to do js string escaping on the output.", ), private, String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =, "An output wrapper for a JavaScript module (optional). ", +]
[+, " by the marker token %output%. Use marker token %output|jsstring%", +, " to do js string escaping on the output.", ), private, String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =]
[+, " to do js string escaping on the output.", ), private, String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =, "An output wrapper for a JavaScript module (optional). ", +]
[), private, String, output_wrapper, =, "", ;, @, Option, (, name, =, "--module_wrapper", ,, usage, =, "An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +]
[;, @, Option, (, name, =, "--module_wrapper", ,, usage, =, "An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +, "with a module specified using --module. The wrapper must ", +, "contain %s as the code placeholder. The %basename% placeholder can ", +, "also be used to substitute the base name of the module output file.", )]
[private, List, <, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--module_output_path_prefix", ,]
[,, usage, =, "An output wrapper for a JavaScript module (optional). ", +, "The format is <name>:<wrapper>. The module name must correspond ", +, "with a module specified using --module. The wrapper must ", +, "contain %s as the code placeholder. The %basename% placeholder can ", +, "also be used to substitute the base name of the module output file.", ), private, List, <, String, >, module_wrapper, =]
[), private, List, <, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--module_output_path_prefix"]
[+, "also be used to substitute the base name of the module output file.", ), private, List, <, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name]
[+, "contain %s as the code placeholder. The %basename% placeholder can ", +, "also be used to substitute the base name of the module output file.", ), private, List, <, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;, @, Option]
[+, "with a module specified using --module. The wrapper must ", +, "contain %s as the code placeholder. The %basename% placeholder can ", +, "also be used to substitute the base name of the module output file.", ), private, List, <, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;]
[+, "The format is <name>:<wrapper>. The module name must correspond ", +, "with a module specified using --module. The wrapper must ", +, "contain %s as the code placeholder. The %basename% placeholder can ", +, "also be used to substitute the base name of the module output file.", ), private, List, <, String, >, module_wrapper, =, Lists, ., newArrayList, (]
[+, "with a module specified using --module. The wrapper must ", +, "contain %s as the code placeholder. The %basename% placeholder can ", +, "also be used to substitute the base name of the module output file.", ), private, List, <, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;]
[+, "contain %s as the code placeholder. The %basename% placeholder can ", +, "also be used to substitute the base name of the module output file.", ), private, List, <, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;, @, Option]
[+, "also be used to substitute the base name of the module output file.", ), private, List, <, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name]
[), private, List, <, String, >, module_wrapper, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--module_output_path_prefix"]
[;, @, Option, (, name, =, "--module_output_path_prefix", ,, usage, =, "Prefix for filenames of compiled JS modules. ", +, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =]
[., newArrayList, (, ), ;, @, Option, (, name, =, "--module_output_path_prefix", ,, usage, =, "Prefix for filenames of compiled JS modules. ", +, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module", )]
[private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =, "If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +, "output to the specified path. The %outname% placeholder will "]
[,, usage, =, "Prefix for filenames of compiled JS modules. ", +, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =]
[), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =, "If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +]
[+, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =, "If specified, a source map file mapping the generated ", +]
[+, "<module-name>.js will be appended to this prefix. Directories ", +, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =]
[+, "will be created as needed. Use with --module", ), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =, "If specified, a source map file mapping the generated ", +]
[), private, String, module_output_path_prefix, =, "./", ;, @, Option, (, name, =, "--create_source_map", ,, usage, =, "If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +]
[;, @, Option, (, name, =, "--create_source_map", ,, usage, =, "If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +, "output to the specified path. The %outname% placeholder will ", +, "expand to the name of the output file that the source map ", +, "corresponds to.", )]
[private, String, create_source_map, =, "", ;, @, Option, (, name, =, "--source_map_format", ,, usage, =, "The source map format to produce. ", +, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.", ), private]
[,, usage, =, "If specified, a source map file mapping the generated ", +, "source files back to the original source file will be ", +, "output to the specified path. The %outname% placeholder will ", +, "expand to the name of the output file that the source map ", +, "corresponds to.", ), private, String, create_source_map, =, "", ;, @]
[), private, String, create_source_map, =, "", ;, @, Option, (, name, =, "--source_map_format", ,, usage, =, "The source map format to produce. ", +, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.", )]
[+, "corresponds to.", ), private, String, create_source_map, =, "", ;, @, Option, (, name, =, "--source_map_format", ,, usage, =, "The source map format to produce. ", +]
[+, "expand to the name of the output file that the source map ", +, "corresponds to.", ), private, String, create_source_map, =, "", ;, @, Option, (, name, =, "--source_map_format", ,, usage, =]
[+, "output to the specified path. The %outname% placeholder will ", +, "expand to the name of the output file that the source map ", +, "corresponds to.", ), private, String, create_source_map, =, "", ;, @, Option, (, name, =, "--source_map_format", ,]
[+, "source files back to the original source file will be ", +, "output to the specified path. The %outname% placeholder will ", +, "expand to the name of the output file that the source map ", +, "corresponds to.", ), private, String, create_source_map, =, "", ;, @, Option, (, name, =]
[+, "output to the specified path. The %outname% placeholder will ", +, "expand to the name of the output file that the source map ", +, "corresponds to.", ), private, String, create_source_map, =, "", ;, @, Option, (, name, =, "--source_map_format", ,]
[+, "expand to the name of the output file that the source map ", +, "corresponds to.", ), private, String, create_source_map, =, "", ;, @, Option, (, name, =, "--source_map_format", ,, usage, =]
[+, "corresponds to.", ), private, String, create_source_map, =, "", ;, @, Option, (, name, =, "--source_map_format", ,, usage, =, "The source map format to produce. ", +]
[), private, String, create_source_map, =, "", ;, @, Option, (, name, =, "--source_map_format", ,, usage, =, "The source map format to produce. ", +, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.", )]
[;, @, Option, (, name, =, "--source_map_format", ,, usage, =, "The source map format to produce. ", +, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.", ), private, SourceMap, ., Format, source_map_format, =]
[private, SourceMap, ., Format, source_map_format, =, SourceMap, ., Format, ., DEFAULT, ;, @, SuppressWarnings, (, "unused", ), @, Option, (]
[,, usage, =, "The source map format to produce. ", +, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.", ), private, SourceMap, ., Format, source_map_format, =, SourceMap, ., Format, ., DEFAULT, ;, @]
[), private, SourceMap, ., Format, source_map_format, =, SourceMap, ., Format, ., DEFAULT, ;, @, SuppressWarnings, (, "unused", ), @, Option]
[+, "Options: V1, V2, V3, DEFAULT. DEFAULT produces V2.", ), private, SourceMap, ., Format, source_map_format, =, SourceMap, ., Format, ., DEFAULT, ;, @, SuppressWarnings, (, "unused", )]
[), private, SourceMap, ., Format, source_map_format, =, SourceMap, ., Format, ., DEFAULT, ;, @, SuppressWarnings, (, "unused", ), @, Option]
[;, @, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_error", ,, handler, =, WarningGuardErrorOptionHandler, ., class, ,, usage]
[., DEFAULT, ;, @, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_error", ,, handler, =, WarningGuardErrorOptionHandler, ., class]
[., Format, ., DEFAULT, ;, @, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_error", ,, handler, =, WarningGuardErrorOptionHandler]
[@, Option, (, name, =, "--jscomp_error", ,, handler, =, WarningGuardErrorOptionHandler, ., class, ,, usage, =, "Make the named class of warnings an error. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES]
[), @, Option, (, name, =, "--jscomp_error", ,, handler, =, WarningGuardErrorOptionHandler, ., class, ,, usage, =, "Make the named class of warnings an error. Options:", +, DiagnosticGroups, .]
[private, List, <, String, >, jscomp_error, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", ), @, Option]
[,, handler, =, WarningGuardErrorOptionHandler, ., class, ,, usage, =, "Make the named class of warnings an error. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >]
[,, usage, =, "Make the named class of warnings an error. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_error, =, Lists, ., newArrayList, (]
[), private, List, <, String, >, jscomp_error, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", ), @]
[+, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_error, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings]
[), private, List, <, String, >, jscomp_error, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", ), @]
[., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_error, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused"]
[;, @, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_warning", ,, handler, =, WarningGuardWarningOptionHandler, ., class, ,, usage]
[., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_warning", ,, handler, =, WarningGuardWarningOptionHandler]
[@, Option, (, name, =, "--jscomp_warning", ,, handler, =, WarningGuardWarningOptionHandler, ., class, ,, usage, =, "Make the named class of warnings a normal warning. ", +, "Options:", +, DiagnosticGroups]
[), @, Option, (, name, =, "--jscomp_warning", ,, handler, =, WarningGuardWarningOptionHandler, ., class, ,, usage, =, "Make the named class of warnings a normal warning. ", +, "Options:", +]
[private, List, <, String, >, jscomp_warning, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", ), @, Option]
[,, handler, =, WarningGuardWarningOptionHandler, ., class, ,, usage, =, "Make the named class of warnings a normal warning. ", +, "Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <]
[,, usage, =, "Make the named class of warnings a normal warning. ", +, "Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_warning, =, Lists, .]
[), private, List, <, String, >, jscomp_warning, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", ), @]
[+, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_warning, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings]
[+, "Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_warning, =, Lists, ., newArrayList, (, ), ;]
[+, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_warning, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings]
[), private, List, <, String, >, jscomp_warning, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", ), @]
[., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_warning, =, Lists, ., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused"]
[;, @, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_off", ,, handler, =, WarningGuardOffOptionHandler, ., class, ,, usage]
[., newArrayList, (, ), ;, @, SuppressWarnings, (, "unused", ), @, Option, (, name, =, "--jscomp_off", ,, handler, =, WarningGuardOffOptionHandler]
[@, Option, (, name, =, "--jscomp_off", ,, handler, =, WarningGuardOffOptionHandler, ., class, ,, usage, =, "Turn off the named class of warnings. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES]
[), @, Option, (, name, =, "--jscomp_off", ,, handler, =, WarningGuardOffOptionHandler, ., class, ,, usage, =, "Turn off the named class of warnings. Options:", +, DiagnosticGroups, .]
[private, List, <, String, >, jscomp_off, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--define", ,]
[,, handler, =, WarningGuardOffOptionHandler, ., class, ,, usage, =, "Turn off the named class of warnings. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >]
[,, usage, =, "Turn off the named class of warnings. Options:", +, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_off, =, Lists, ., newArrayList, (]
[), private, List, <, String, >, jscomp_off, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--define"]
[+, DiagnosticGroups, ., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_off, =, Lists, ., newArrayList, (, ), ;, @, Option]
[), private, List, <, String, >, jscomp_off, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--define"]
[., DIAGNOSTIC_GROUP_NAMES, ), private, List, <, String, >, jscomp_off, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name]
[;, @, Option, (, name, =, "--define", ,, aliases, =, {, "--D", ,, "-D", }, ,, usage, =, "Override the value of a variable annotated @define. ", +]
[., newArrayList, (, ), ;, @, Option, (, name, =, "--define", ,, aliases, =, {, "--D", ,, "-D", }, ,]
[private, List, <, String, >, define, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--charset", ,]
[,, aliases, =, {, "--D", ,, "-D", }, ,, usage, =, "Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define ", +, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true"]
[,, usage, =, "Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define ", +, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true", ), private, List, <, String, >, define, =]
[,, "-D", }, ,, usage, =, "Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define ", +, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true", ), private, List, <, String]
[}, ,, usage, =, "Override the value of a variable annotated @define. ", +, "The format is <name>[=<val>], where <name> is the name of a @define ", +, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true", ), private, List, <, String, >, define]
[), private, List, <, String, >, define, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--charset"]
[+, "the variable is marked true", ), private, List, <, String, >, define, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name]
[+, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true", ), private, List, <, String, >, define, =, Lists, ., newArrayList, (, ), ;, @, Option]
[+, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true", ), private, List, <, String, >, define, =, Lists, ., newArrayList, (, ), ;]
[+, "The format is <name>[=<val>], where <name> is the name of a @define ", +, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true", ), private, List, <, String, >, define, =, Lists, ., newArrayList, (]
[+, "variable and <val> is a boolean, number, or a single-quoted string ", +, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true", ), private, List, <, String, >, define, =, Lists, ., newArrayList, (, ), ;]
[+, "that contains no single quotes. If [=<val>] is omitted, ", +, "the variable is marked true", ), private, List, <, String, >, define, =, Lists, ., newArrayList, (, ), ;, @, Option]
[+, "the variable is marked true", ), private, List, <, String, >, define, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name]
[), private, List, <, String, >, define, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--charset"]
[;, @, Option, (, name, =, "--charset", ,, usage, =, "Input and output charset for all files. By default, we ", +, "accept UTF-8 as input and output US_ASCII", ), private, String, charset, =, "", ;]
[., newArrayList, (, ), ;, @, Option, (, name, =, "--charset", ,, usage, =, "Input and output charset for all files. By default, we ", +, "accept UTF-8 as input and output US_ASCII", ), private, String]
[private, String, charset, =, "", ;, @, Option, (, name, =, "--compilation_level", ,, usage, =, "Specifies the compilation level to use. Options: ", +, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", ), private]
[,, usage, =, "Input and output charset for all files. By default, we ", +, "accept UTF-8 as input and output US_ASCII", ), private, String, charset, =, "", ;, @, Option, (, name, =, "--compilation_level", ,]
[), private, String, charset, =, "", ;, @, Option, (, name, =, "--compilation_level", ,, usage, =, "Specifies the compilation level to use. Options: ", +, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", )]
[+, "accept UTF-8 as input and output US_ASCII", ), private, String, charset, =, "", ;, @, Option, (, name, =, "--compilation_level", ,, usage, =, "Specifies the compilation level to use. Options: ", +]
[), private, String, charset, =, "", ;, @, Option, (, name, =, "--compilation_level", ,, usage, =, "Specifies the compilation level to use. Options: ", +, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", )]
[;, @, Option, (, name, =, "--compilation_level", ,, usage, =, "Specifies the compilation level to use. Options: ", +, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", ), private, CompilationLevel, compilation_level, =, CompilationLevel, .]
[private, CompilationLevel, compilation_level, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, @, Option, (, name, =, "--use_types_for_optimization", ,, usage, =, "Experimental: perform additional optimizations ", +, "based on available information.  Inaccurate type annotations "]
[,, usage, =, "Specifies the compilation level to use. Options: ", +, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", ), private, CompilationLevel, compilation_level, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, @, Option, (, name, =]
[), private, CompilationLevel, compilation_level, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, @, Option, (, name, =, "--use_types_for_optimization", ,, usage, =, "Experimental: perform additional optimizations ", +]
[+, "WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS", ), private, CompilationLevel, compilation_level, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, @, Option, (, name, =, "--use_types_for_optimization", ,, usage, =]
[), private, CompilationLevel, compilation_level, =, CompilationLevel, ., SIMPLE_OPTIMIZATIONS, ;, @, Option, (, name, =, "--use_types_for_optimization", ,, usage, =, "Experimental: perform additional optimizations ", +]
[;, @, Option, (, name, =, "--use_types_for_optimization", ,, usage, =, "Experimental: perform additional optimizations ", +, "based on available information.  Inaccurate type annotations ", +, "may result in incorrect results.", ), private, boolean, use_types_for_optimization, =]
[., SIMPLE_OPTIMIZATIONS, ;, @, Option, (, name, =, "--use_types_for_optimization", ,, usage, =, "Experimental: perform additional optimizations ", +, "based on available information.  Inaccurate type annotations ", +, "may result in incorrect results.", ), private, boolean]
[private, boolean, use_types_for_optimization, =, false, ;, @, Option, (, name, =, "--warning_level", ,, usage, =, "Specifies the warning level to use. Options: ", +, "QUIET, DEFAULT, VERBOSE", ), private]
[,, usage, =, "Experimental: perform additional optimizations ", +, "based on available information.  Inaccurate type annotations ", +, "may result in incorrect results.", ), private, boolean, use_types_for_optimization, =, false, ;, @, Option, (, name, =]
[), private, boolean, use_types_for_optimization, =, false, ;, @, Option, (, name, =, "--warning_level", ,, usage, =, "Specifies the warning level to use. Options: ", +, "QUIET, DEFAULT, VERBOSE", )]
[+, "may result in incorrect results.", ), private, boolean, use_types_for_optimization, =, false, ;, @, Option, (, name, =, "--warning_level", ,, usage, =, "Specifies the warning level to use. Options: ", +]
[+, "based on available information.  Inaccurate type annotations ", +, "may result in incorrect results.", ), private, boolean, use_types_for_optimization, =, false, ;, @, Option, (, name, =, "--warning_level", ,, usage, =]
[+, "may result in incorrect results.", ), private, boolean, use_types_for_optimization, =, false, ;, @, Option, (, name, =, "--warning_level", ,, usage, =, "Specifies the warning level to use. Options: ", +]
[), private, boolean, use_types_for_optimization, =, false, ;, @, Option, (, name, =, "--warning_level", ,, usage, =, "Specifies the warning level to use. Options: ", +, "QUIET, DEFAULT, VERBOSE", )]
[;, @, Option, (, name, =, "--warning_level", ,, usage, =, "Specifies the warning level to use. Options: ", +, "QUIET, DEFAULT, VERBOSE", ), private, WarningLevel, warning_level, =, WarningLevel, .]
[private, WarningLevel, warning_level, =, WarningLevel, ., DEFAULT, ;, @, Option, (, name, =, "--use_only_custom_externs", ,, handler, =, BooleanOptionHandler, ., class]
[,, usage, =, "Specifies the warning level to use. Options: ", +, "QUIET, DEFAULT, VERBOSE", ), private, WarningLevel, warning_level, =, WarningLevel, ., DEFAULT, ;, @, Option, (, name, =]
[), private, WarningLevel, warning_level, =, WarningLevel, ., DEFAULT, ;, @, Option, (, name, =, "--use_only_custom_externs", ,, handler, =, BooleanOptionHandler, .]
[+, "QUIET, DEFAULT, VERBOSE", ), private, WarningLevel, warning_level, =, WarningLevel, ., DEFAULT, ;, @, Option, (, name, =, "--use_only_custom_externs", ,, handler, =]
[), private, WarningLevel, warning_level, =, WarningLevel, ., DEFAULT, ;, @, Option, (, name, =, "--use_only_custom_externs", ,, handler, =, BooleanOptionHandler, .]
[;, @, Option, (, name, =, "--use_only_custom_externs", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Specifies whether the default externs should be excluded", ), private, boolean]
[., DEFAULT, ;, @, Option, (, name, =, "--use_only_custom_externs", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Specifies whether the default externs should be excluded", )]
[private, boolean, use_only_custom_externs, =, false, ;, @, Option, (, name, =, "--debug", ,, handler, =, BooleanOptionHandler, ., class, ,, usage]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Specifies whether the default externs should be excluded", ), private, boolean, use_only_custom_externs, =, false, ;, @, Option, (]
[,, usage, =, "Specifies whether the default externs should be excluded", ), private, boolean, use_only_custom_externs, =, false, ;, @, Option, (, name, =, "--debug", ,, handler, =]
[), private, boolean, use_only_custom_externs, =, false, ;, @, Option, (, name, =, "--debug", ,, handler, =, BooleanOptionHandler, ., class, ,]
[;, @, Option, (, name, =, "--debug", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Enable debugging options", ), private, boolean]
[private, boolean, debug, =, false, ;, @, Option, (, name, =, "--generate_exports", ,, handler, =, BooleanOptionHandler, ., class, ,, usage]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Enable debugging options", ), private, boolean, debug, =, false, ;, @, Option, (]
[,, usage, =, "Enable debugging options", ), private, boolean, debug, =, false, ;, @, Option, (, name, =, "--generate_exports", ,, handler, =]
[), private, boolean, debug, =, false, ;, @, Option, (, name, =, "--generate_exports", ,, handler, =, BooleanOptionHandler, ., class, ,]
[;, @, Option, (, name, =, "--generate_exports", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Generates export code for those marked with @export", ), private, boolean]
[private, boolean, generate_exports, =, false, ;, @, Option, (, name, =, "--formatting", ,, usage, =, "Specifies which formatting options, if any, should be ", +, "applied to the output JS. Options: ", +, "PRETTY_PRINT, PRINT_INPUT_DELIMITER, SINGLE_QUOTES"]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Generates export code for those marked with @export", ), private, boolean, generate_exports, =, false, ;, @, Option, (]
[,, usage, =, "Generates export code for those marked with @export", ), private, boolean, generate_exports, =, false, ;, @, Option, (, name, =, "--formatting", ,, usage, =]
[), private, boolean, generate_exports, =, false, ;, @, Option, (, name, =, "--formatting", ,, usage, =, "Specifies which formatting options, if any, should be ", +, "applied to the output JS. Options: ", +]
[;, @, Option, (, name, =, "--formatting", ,, usage, =, "Specifies which formatting options, if any, should be ", +, "applied to the output JS. Options: ", +, "PRETTY_PRINT, PRINT_INPUT_DELIMITER, SINGLE_QUOTES", ), private, List, <, FormattingOption]
[private, List, <, FormattingOption, >, formatting, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--process_common_js_modules", ,]
[,, usage, =, "Specifies which formatting options, if any, should be ", +, "applied to the output JS. Options: ", +, "PRETTY_PRINT, PRINT_INPUT_DELIMITER, SINGLE_QUOTES", ), private, List, <, FormattingOption, >, formatting, =, Lists, ., newArrayList, (]
[), private, List, <, FormattingOption, >, formatting, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--process_common_js_modules"]
[+, "PRETTY_PRINT, PRINT_INPUT_DELIMITER, SINGLE_QUOTES", ), private, List, <, FormattingOption, >, formatting, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name]
[+, "applied to the output JS. Options: ", +, "PRETTY_PRINT, PRINT_INPUT_DELIMITER, SINGLE_QUOTES", ), private, List, <, FormattingOption, >, formatting, =, Lists, ., newArrayList, (, ), ;, @, Option]
[+, "PRETTY_PRINT, PRINT_INPUT_DELIMITER, SINGLE_QUOTES", ), private, List, <, FormattingOption, >, formatting, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name]
[), private, List, <, FormattingOption, >, formatting, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--process_common_js_modules"]
[;, @, Option, (, name, =, "--process_common_js_modules", ,, usage, =, "Process CommonJS modules to a concatenable form.", ), private, boolean, process_common_js_modules, =, false, ;, @, Option]
[., newArrayList, (, ), ;, @, Option, (, name, =, "--process_common_js_modules", ,, usage, =, "Process CommonJS modules to a concatenable form.", ), private, boolean, process_common_js_modules, =]
[private, boolean, process_common_js_modules, =, false, ;, @, Option, (, name, =, "--common_js_module_path_prefix", ,, usage, =, "Path prefix to be removed from CommonJS module names.", ), private, String, common_js_path_prefix]
[,, usage, =, "Process CommonJS modules to a concatenable form.", ), private, boolean, process_common_js_modules, =, false, ;, @, Option, (, name, =, "--common_js_module_path_prefix", ,, usage, =]
[), private, boolean, process_common_js_modules, =, false, ;, @, Option, (, name, =, "--common_js_module_path_prefix", ,, usage, =, "Path prefix to be removed from CommonJS module names.", ), private, String]
[;, @, Option, (, name, =, "--common_js_module_path_prefix", ,, usage, =, "Path prefix to be removed from CommonJS module names.", ), private, String, common_js_path_prefix, =, ProcessCommonJSModules, ., DEFAULT_FILENAME_PREFIX, ;]
[private, String, common_js_path_prefix, =, ProcessCommonJSModules, ., DEFAULT_FILENAME_PREFIX, ;, @, Option, (, name, =, "--common_js_entry_module", ,, usage, =, "Root of your common JS dependency hierarchy. ", +, "Your main script."]
[,, usage, =, "Path prefix to be removed from CommonJS module names.", ), private, String, common_js_path_prefix, =, ProcessCommonJSModules, ., DEFAULT_FILENAME_PREFIX, ;, @, Option, (, name, =, "--common_js_entry_module", ,]
[), private, String, common_js_path_prefix, =, ProcessCommonJSModules, ., DEFAULT_FILENAME_PREFIX, ;, @, Option, (, name, =, "--common_js_entry_module", ,, usage, =, "Root of your common JS dependency hierarchy. ", +]
[;, @, Option, (, name, =, "--common_js_entry_module", ,, usage, =, "Root of your common JS dependency hierarchy. ", +, "Your main script.", ), private, String, common_js_entry_module, ;, @, Option]
[., DEFAULT_FILENAME_PREFIX, ;, @, Option, (, name, =, "--common_js_entry_module", ,, usage, =, "Root of your common JS dependency hierarchy. ", +, "Your main script.", ), private, String, common_js_entry_module, ;]
[private, String, common_js_entry_module, ;, @, Option, (, name, =, "--transform_amd_modules", ,, usage, =, "Transform AMD to CommonJS modules.", ), private, boolean, transform_amd_modules, =, false]
[,, usage, =, "Root of your common JS dependency hierarchy. ", +, "Your main script.", ), private, String, common_js_entry_module, ;, @, Option, (, name, =, "--transform_amd_modules", ,, usage, =]
[), private, String, common_js_entry_module, ;, @, Option, (, name, =, "--transform_amd_modules", ,, usage, =, "Transform AMD to CommonJS modules.", ), private, boolean, transform_amd_modules, =]
[+, "Your main script.", ), private, String, common_js_entry_module, ;, @, Option, (, name, =, "--transform_amd_modules", ,, usage, =, "Transform AMD to CommonJS modules.", ), private, boolean]
[), private, String, common_js_entry_module, ;, @, Option, (, name, =, "--transform_amd_modules", ,, usage, =, "Transform AMD to CommonJS modules.", ), private, boolean, transform_amd_modules, =]
[private, boolean, transform_amd_modules, =, false, ;, @, Option, (, name, =, "--process_closure_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage]
[,, usage, =, "Transform AMD to CommonJS modules.", ), private, boolean, transform_amd_modules, =, false, ;, @, Option, (, name, =, "--process_closure_primitives", ,, handler, =]
[), private, boolean, transform_amd_modules, =, false, ;, @, Option, (, name, =, "--process_closure_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,]
[;, @, Option, (, name, =, "--process_closure_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Processes built-ins from the Closure library, such as ", +, "goog.require(), goog.provide(), and goog.exportSymbol()", )]
[private, boolean, process_closure_primitives, =, true, ;, @, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Processes built-ins from the Closure library, such as ", +, "goog.require(), goog.provide(), and goog.exportSymbol()", ), private, boolean, process_closure_primitives, =, true, ;, @]
[,, usage, =, "Processes built-ins from the Closure library, such as ", +, "goog.require(), goog.provide(), and goog.exportSymbol()", ), private, boolean, process_closure_primitives, =, true, ;, @, Option, (, name, =, "--manage_closure_dependencies", ,]
[), private, boolean, process_closure_primitives, =, true, ;, @, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,]
[+, "goog.require(), goog.provide(), and goog.exportSymbol()", ), private, boolean, process_closure_primitives, =, true, ;, @, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, .]
[), private, boolean, process_closure_primitives, =, true, ;, @, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,]
[;, @, Option, (, name, =, "--manage_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Automatically sort dependencies so that a file that ", +, "goog.provides symbol X will always come before a file that ", +]
[private, boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Automatically sort dependencies so that a file that ", +, "goog.provides symbol X will always come before a file that ", +, "goog.requires symbol X. If an input provides symbols, and ", +, "those symbols are never required, then that input will not ", +, "be included in the compilation.", ), private]
[,, usage, =, "Automatically sort dependencies so that a file that ", +, "goog.provides symbol X will always come before a file that ", +, "goog.requires symbol X. If an input provides symbols, and ", +, "those symbols are never required, then that input will not ", +, "be included in the compilation.", ), private, boolean, manage_closure_dependencies, =, false, ;, @]
[), private, boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,]
[+, "be included in the compilation.", ), private, boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, .]
[+, "those symbols are never required, then that input will not ", +, "be included in the compilation.", ), private, boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =]
[+, "goog.requires symbol X. If an input provides symbols, and ", +, "those symbols are never required, then that input will not ", +, "be included in the compilation.", ), private, boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,]
[+, "goog.provides symbol X will always come before a file that ", +, "goog.requires symbol X. If an input provides symbols, and ", +, "those symbols are never required, then that input will not ", +, "be included in the compilation.", ), private, boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =]
[+, "goog.requires symbol X. If an input provides symbols, and ", +, "those symbols are never required, then that input will not ", +, "be included in the compilation.", ), private, boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,]
[+, "those symbols are never required, then that input will not ", +, "be included in the compilation.", ), private, boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =]
[+, "be included in the compilation.", ), private, boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, .]
[), private, boolean, manage_closure_dependencies, =, false, ;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,]
[;, @, Option, (, name, =, "--only_closure_dependencies", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Only include files in the transitive dependency of the ", +, "entry points (specified by closure_entry_point). Files that do ", +]
[private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =, "Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without "]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Only include files in the transitive dependency of the ", +, "entry points (specified by closure_entry_point). Files that do ", +, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies]
[,, usage, =, "Only include files in the transitive dependency of the ", +, "entry points (specified by closure_entry_point). Files that do ", +, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (]
[), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =, "Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +]
[+, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =, "Entry points to the program. Must be goog.provide'd ", +]
[+, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =]
[+, "entry points (specified by closure_entry_point). Files that do ", +, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,]
[+, "not provide dependencies will be removed. This supersedes", +, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =]
[+, "manage_closure_dependencies", ), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =, "Entry points to the program. Must be goog.provide'd ", +]
[), private, boolean, only_closure_dependencies, =, false, ;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =, "Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +]
[;, @, Option, (, name, =, "--closure_entry_point", ,, usage, =, "Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +]
[private, List, <, String, >, closure_entry_point, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--process_jquery_primitives", ,]
[,, usage, =, "Entry points to the program. Must be goog.provide'd ", +, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", ), private, List, <]
[), private, List, <, String, >, closure_entry_point, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--process_jquery_primitives"]
[+, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name]
[+, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =, Lists, ., newArrayList, (, ), ;, @, Option]
[+, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =, Lists, ., newArrayList, (, ), ;]
[+, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =, Lists, ., newArrayList, (]
[+, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =, Lists, .]
[+, "symbols. Any goog.provide'd symbols that are not a transitive ", +, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =]
[+, "dependency of the entry points will be removed. Files without ", +, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =, Lists, .]
[+, "goog.provides, and their dependencies, will always be left in. ", +, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =, Lists, ., newArrayList, (]
[+, "If any entry points are specified, then the ", +, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =, Lists, ., newArrayList, (, ), ;]
[+, "manage_closure_dependencies option will be set to true and ", +, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =, Lists, ., newArrayList, (, ), ;, @, Option]
[+, "all files will be sorted in dependency order.", ), private, List, <, String, >, closure_entry_point, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name]
[), private, List, <, String, >, closure_entry_point, =, Lists, ., newArrayList, (, ), ;, @, Option, (, name, =, "--process_jquery_primitives"]
[;, @, Option, (, name, =, "--process_jquery_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()", )]
[., newArrayList, (, ), ;, @, Option, (, name, =, "--process_jquery_primitives", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =]
[private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =, "Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. "]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()", ), private, boolean, process_jquery_primitives, =, false, ;, @]
[,, usage, =, "Processes built-ins from the Jquery library, such as ", +, "jQuery.fn and jQuery.extend()", ), private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,]
[), private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =, "Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +]
[+, "jQuery.fn and jQuery.extend()", ), private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =, "Prints out a list of all the files in the compilation. ", +]
[), private, boolean, process_jquery_primitives, =, false, ;, @, Option, (, name, =, "--output_manifest", ,, usage, =, "Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +]
[;, @, Option, (, name, =, "--output_manifest", ,, usage, =, "Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create ", +]
[private, String, output_manifest, =, "", ;, @, Option, (, name, =, "--output_module_dependencies", ,, usage, =, "Prints out a JSON file of dependencies between modules.", ), private, String, output_module_dependencies]
[,, usage, =, "Prints out a list of all the files in the compilation. ", +, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create ", +, "a manifest for each module.", ), private, String, output_manifest, =, ""]
[), private, String, output_manifest, =, "", ;, @, Option, (, name, =, "--output_module_dependencies", ,, usage, =, "Prints out a JSON file of dependencies between modules.", ), private, String]
[+, "a manifest for each module.", ), private, String, output_manifest, =, "", ;, @, Option, (, name, =, "--output_module_dependencies", ,, usage, =, "Prints out a JSON file of dependencies between modules.", )]
[+, "If you're using modularization, using %outname% will create ", +, "a manifest for each module.", ), private, String, output_manifest, =, "", ;, @, Option, (, name, =, "--output_module_dependencies", ,, usage, =]
[+, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create ", +, "a manifest for each module.", ), private, String, output_manifest, =, "", ;, @, Option, (, name, =, "--output_module_dependencies", ,]
[+, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create ", +, "a manifest for each module.", ), private, String, output_manifest, =, "", ;, @, Option, (, name, =]
[+, "If --manage_closure_dependencies is on, this will not include ", +, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create ", +, "a manifest for each module.", ), private, String, output_manifest, =, "", ;, @, Option, (]
[+, "files that got dropped because they were not required. ", +, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create ", +, "a manifest for each module.", ), private, String, output_manifest, =, "", ;, @, Option, (, name, =]
[+, "The %outname% placeholder expands to the JS output file. ", +, "If you're using modularization, using %outname% will create ", +, "a manifest for each module.", ), private, String, output_manifest, =, "", ;, @, Option, (, name, =, "--output_module_dependencies", ,]
[+, "If you're using modularization, using %outname% will create ", +, "a manifest for each module.", ), private, String, output_manifest, =, "", ;, @, Option, (, name, =, "--output_module_dependencies", ,, usage, =]
[+, "a manifest for each module.", ), private, String, output_manifest, =, "", ;, @, Option, (, name, =, "--output_module_dependencies", ,, usage, =, "Prints out a JSON file of dependencies between modules.", )]
[), private, String, output_manifest, =, "", ;, @, Option, (, name, =, "--output_module_dependencies", ,, usage, =, "Prints out a JSON file of dependencies between modules.", ), private, String]
[;, @, Option, (, name, =, "--output_module_dependencies", ,, usage, =, "Prints out a JSON file of dependencies between modules.", ), private, String, output_module_dependencies, =, "", ;, @, Option]
[private, String, output_module_dependencies, =, "", ;, @, Option, (, name, =, "--accept_const_keyword", ,, usage, =, "Allows usage of const keyword.", ), private, boolean, accept_const_keyword]
[,, usage, =, "Prints out a JSON file of dependencies between modules.", ), private, String, output_module_dependencies, =, "", ;, @, Option, (, name, =, "--accept_const_keyword", ,, usage, =]
[), private, String, output_module_dependencies, =, "", ;, @, Option, (, name, =, "--accept_const_keyword", ,, usage, =, "Allows usage of const keyword.", ), private, boolean]
[;, @, Option, (, name, =, "--accept_const_keyword", ,, usage, =, "Allows usage of const keyword.", ), private, boolean, accept_const_keyword, =, false, ;, @, Option]
[private, boolean, accept_const_keyword, =, false, ;, @, Option, (, name, =, "--language_in", ,, usage, =, "Sets what language spec that input sources conform. ", +, "Options: ECMASCRIPT3 (default), ECMASCRIPT5, ECMASCRIPT5_STRICT", ), private]
[,, usage, =, "Allows usage of const keyword.", ), private, boolean, accept_const_keyword, =, false, ;, @, Option, (, name, =, "--language_in", ,, usage, =]
[), private, boolean, accept_const_keyword, =, false, ;, @, Option, (, name, =, "--language_in", ,, usage, =, "Sets what language spec that input sources conform. ", +, "Options: ECMASCRIPT3 (default), ECMASCRIPT5, ECMASCRIPT5_STRICT", )]
[;, @, Option, (, name, =, "--language_in", ,, usage, =, "Sets what language spec that input sources conform. ", +, "Options: ECMASCRIPT3 (default), ECMASCRIPT5, ECMASCRIPT5_STRICT", ), private, String, language_in, =, "ECMASCRIPT3", ;]
[private, String, language_in, =, "ECMASCRIPT3", ;, @, Option, (, name, =, "--version", ,, handler, =, BooleanOptionHandler, ., class, ,, usage]
[,, usage, =, "Sets what language spec that input sources conform. ", +, "Options: ECMASCRIPT3 (default), ECMASCRIPT5, ECMASCRIPT5_STRICT", ), private, String, language_in, =, "ECMASCRIPT3", ;, @, Option, (, name, =, "--version", ,]
[), private, String, language_in, =, "ECMASCRIPT3", ;, @, Option, (, name, =, "--version", ,, handler, =, BooleanOptionHandler, ., class, ,]
[+, "Options: ECMASCRIPT3 (default), ECMASCRIPT5, ECMASCRIPT5_STRICT", ), private, String, language_in, =, "ECMASCRIPT3", ;, @, Option, (, name, =, "--version", ,, handler, =, BooleanOptionHandler, .]
[), private, String, language_in, =, "ECMASCRIPT3", ;, @, Option, (, name, =, "--version", ,, handler, =, BooleanOptionHandler, ., class, ,]
[;, @, Option, (, name, =, "--version", ,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints the compiler version to stderr.", ), private, boolean]
[private, boolean, version, =, false, ;, @, Option, (, name, =, "--translations_file", ,, usage, =, "Source of translated messages. Currently only supports XTB.", ), private, String, translationsFile]
[,, handler, =, BooleanOptionHandler, ., class, ,, usage, =, "Prints the compiler version to stderr.", ), private, boolean, version, =, false, ;, @, Option, (]
[,, usage, =, "Prints the compiler version to stderr.", ), private, boolean, version, =, false, ;, @, Option, (, name, =, "--translations_file", ,, usage, =]
[), private, boolean, version, =, false, ;, @, Option, (, name, =, "--translations_file", ,, usage, =, "Source of translated messages. Currently only supports XTB.", ), private, String]
[;, @, Option, (, name, =, "--translations_file", ,, usage, =, "Source of translated messages. Currently only supports XTB.", ), private, String, translationsFile, =, "", ;, @, Option]
[private, String, translationsFile, =, "", ;, @, Option, (, name, =, "--translations_project", ,, usage, =, "Scopes all translations to the specified project.", +, "When specified, we will use different message ids so that messages ", +, "in different projects can have different translations."]
[,, usage, =, "Source of translated messages. Currently only supports XTB.", ), private, String, translationsFile, =, "", ;, @, Option, (, name, =, "--translations_project", ,, usage, =]
[), private, String, translationsFile, =, "", ;, @, Option, (, name, =, "--translations_project", ,, usage, =, "Scopes all translations to the specified project.", +, "When specified, we will use different message ids so that messages ", +]
[;, @, Option, (, name, =, "--translations_project", ,, usage, =, "Scopes all translations to the specified project.", +, "When specified, we will use different message ids so that messages ", +, "in different projects can have different translations.", ), private, String, translationsProject, =]
[private, String, translationsProject, =, null, ;, @, Option, (, name, =, "--flagfile", ,, usage, =, "A file containing additional command-line options.", ), private, String, flag_file]
[,, usage, =, "Scopes all translations to the specified project.", +, "When specified, we will use different message ids so that messages ", +, "in different projects can have different translations.", ), private, String, translationsProject, =, null, ;, @, Option, (, name, =]
[), private, String, translationsProject, =, null, ;, @, Option, (, name, =, "--flagfile", ,, usage, =, "A file containing additional command-line options.", ), private, String]
[+, "in different projects can have different translations.", ), private, String, translationsProject, =, null, ;, @, Option, (, name, =, "--flagfile", ,, usage, =, "A file containing additional command-line options.", )]
[+, "When specified, we will use different message ids so that messages ", +, "in different projects can have different translations.", ), private, String, translationsProject, =, null, ;, @, Option, (, name, =, "--flagfile", ,, usage, =]
[+, "in different projects can have different translations.", ), private, String, translationsProject, =, null, ;, @, Option, (, name, =, "--flagfile", ,, usage, =, "A file containing additional command-line options.", )]
[), private, String, translationsProject, =, null, ;, @, Option, (, name, =, "--flagfile", ,, usage, =, "A file containing additional command-line options.", ), private, String]
[;, @, Option, (, name, =, "--flagfile", ,, usage, =, "A file containing additional command-line options.", ), private, String, flag_file, =, "", ;, @, Option]
[private, String, flag_file, =, "", ;, @, Option, (, name, =, "--warnings_whitelist_file", ,, usage, =, "A file containing warnings to suppress. Each line should be ", +, "of the form\n", +, "<file-name>:<line-number>?  <warning-description>"]
[,, usage, =, "A file containing additional command-line options.", ), private, String, flag_file, =, "", ;, @, Option, (, name, =, "--warnings_whitelist_file", ,, usage, =]
[), private, String, flag_file, =, "", ;, @, Option, (, name, =, "--warnings_whitelist_file", ,, usage, =, "A file containing warnings to suppress. Each line should be ", +, "of the form\n", +]
[;, @, Option, (, name, =, "--warnings_whitelist_file", ,, usage, =, "A file containing warnings to suppress. Each line should be ", +, "of the form\n", +, "<file-name>:<line-number>?  <warning-description>", ), private, String, warnings_whitelist_file, =]
[private, String, warnings_whitelist_file, =, "", ;, @, Argument, private, List, <, String, >, arguments, =, Lists, ., newArrayList, (, )]
[,, usage, =, "A file containing warnings to suppress. Each line should be ", +, "of the form\n", +, "<file-name>:<line-number>?  <warning-description>", ), private, String, warnings_whitelist_file, =, "", ;, @, Argument, private, List, <]
[), private, String, warnings_whitelist_file, =, "", ;, @, Argument, private, List, <, String, >, arguments, =, Lists, ., newArrayList, (]
[+, "<file-name>:<line-number>?  <warning-description>", ), private, String, warnings_whitelist_file, =, "", ;, @, Argument, private, List, <, String, >, arguments, =, Lists, .]
[+, "of the form\n", +, "<file-name>:<line-number>?  <warning-description>", ), private, String, warnings_whitelist_file, =, "", ;, @, Argument, private, List, <, String, >, arguments, =]
[+, "<file-name>:<line-number>?  <warning-description>", ), private, String, warnings_whitelist_file, =, "", ;, @, Argument, private, List, <, String, >, arguments, =, Lists, .]
[), private, String, warnings_whitelist_file, =, "", ;, @, Argument, private, List, <, String, >, arguments, =, Lists, ., newArrayList, (]
[;, @, Argument, private, List, <, String, >, arguments, =, Lists, ., newArrayList, (, ), ;, List, <, String, >]
[;, List, <, String, >, getJsFiles, (, ), {, List, <, String, >, allJsInputs, =, Lists, ., newArrayListWithCapacity, (, js]
[., newArrayList, (, ), ;, List, <, String, >, getJsFiles, (, ), {, List, <, String, >, allJsInputs, =, Lists]
[;, allJsInputs, ., addAll, (, js, ), ;, allJsInputs, ., addAll, (, arguments, ), ;, return, allJsInputs, ;, }, public]
[., newArrayListWithCapacity, (, js, ., size, (, ), +, arguments, ., size, (, ), ), ;, allJsInputs, ., addAll, (]
[), ;, allJsInputs, ., addAll, (, js, ), ;, allJsInputs, ., addAll, (, arguments, ), ;, return, allJsInputs, ;, }]
[+, arguments, ., size, (, ), ), ;, allJsInputs, ., addAll, (, js, ), ;, allJsInputs, ., addAll, (, arguments]
[., size, (, ), +, arguments, ., size, (, ), ), ;, allJsInputs, ., addAll, (, js, ), ;, allJsInputs]
[), ;, allJsInputs, ., addAll, (, js, ), ;, allJsInputs, ., addAll, (, arguments, ), ;, return, allJsInputs, ;, }]
[., size, (, ), ), ;, allJsInputs, ., addAll, (, js, ), ;, allJsInputs, ., addAll, (, arguments, ), ;]
[;, allJsInputs, ., addAll, (, arguments, ), ;, return, allJsInputs, ;, }, public, static, class, BooleanOptionHandler, extends, OptionHandler, <, Boolean]
[., addAll, (, js, ), ;, allJsInputs, ., addAll, (, arguments, ), ;, return, allJsInputs, ;, }, public, static, class]
[), ;, allJsInputs, ., addAll, (, arguments, ), ;, return, allJsInputs, ;, }, public, static, class, BooleanOptionHandler, extends, OptionHandler, <]
[;, return, allJsInputs, ;, }, public, static, class, BooleanOptionHandler, extends, OptionHandler, <, Boolean, >, {, private, static, final, Set, <]
[., addAll, (, arguments, ), ;, return, allJsInputs, ;, }, public, static, class, BooleanOptionHandler, extends, OptionHandler, <, Boolean, >, {]
[), ;, return, allJsInputs, ;, }, public, static, class, BooleanOptionHandler, extends, OptionHandler, <, Boolean, >, {, private, static, final, Set]
[;, }, public, static, class, BooleanOptionHandler, extends, OptionHandler, <, Boolean, >, {, private, static, final, Set, <, String, >, TRUES]
[;, private, static, final, Set, <, String, >, FALSES, =, Sets, ., newHashSet, (, "false", ,, "off", ,, "no", ,]
[., newHashSet, (, "true", ,, "on", ,, "yes", ,, "1", ), ;, private, static, final, Set, <, String, >, FALSES]
[,, "on", ,, "yes", ,, "1", ), ;, private, static, final, Set, <, String, >, FALSES, =, Sets, ., newHashSet]
[,, "yes", ,, "1", ), ;, private, static, final, Set, <, String, >, FALSES, =, Sets, ., newHashSet, (, "false"]
[,, "1", ), ;, private, static, final, Set, <, String, >, FALSES, =, Sets, ., newHashSet, (, "false", ,, "off"]
[), ;, private, static, final, Set, <, String, >, FALSES, =, Sets, ., newHashSet, (, "false", ,, "off", ,, "no"]
[;, public, BooleanOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option, ,, Setter, <, ?, super, Boolean, >, setter, ), {, super]
[., newHashSet, (, "false", ,, "off", ,, "no", ,, "0", ), ;, public, BooleanOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option]
[,, "off", ,, "no", ,, "0", ), ;, public, BooleanOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option, ,, Setter, <, ?]
[,, "no", ,, "0", ), ;, public, BooleanOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option, ,, Setter, <, ?, super, Boolean]
[,, "0", ), ;, public, BooleanOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option, ,, Setter, <, ?, super, Boolean, >, setter]
[), ;, public, BooleanOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option, ,, Setter, <, ?, super, Boolean, >, setter, ), {]
[,, option, ,, setter, ), ;, }, @, Override, public, int, parseArguments, (, Parameters, params, ), throws, CmdLineException, {, String]
[,, setter, ), ;, }, @, Override, public, int, parseArguments, (, Parameters, params, ), throws, CmdLineException, {, String, param, =]
[), ;, }, @, Override, public, int, parseArguments, (, Parameters, params, ), throws, CmdLineException, {, String, param, =, null, ;]
[;, try, {, param, =, params, ., getParameter, (, 0, ), ;, }, catch, (, CmdLineException, e, ), {, }]
[=, params, ., getParameter, (, 0, ), ;, }, catch, (, CmdLineException, e, ), {, }, if, (, param, ==]
[;, }, catch, (, CmdLineException, e, ), {, }, if, (, param, ==, null, ), {, setter, ., addValue, (]
[., getParameter, (, 0, ), ;, }, catch, (, CmdLineException, e, ), {, }, if, (, param, ==, null, )]
[), ;, }, catch, (, CmdLineException, e, ), {, }, if, (, param, ==, null, ), {, setter, ., addValue]
[), {, setter, ., addValue, (, true, ), ;, return, 0, ;, }, else, {, String, lowerParam, =, param, .]
[==, null, ), {, setter, ., addValue, (, true, ), ;, return, 0, ;, }, else, {, String, lowerParam, =]
[), {, setter, ., addValue, (, true, ), ;, return, 0, ;, }, else, {, String, lowerParam, =, param, .]
[;, return, 0, ;, }, else, {, String, lowerParam, =, param, ., toLowerCase, (, ), ;, if, (, TRUES, .]
[., addValue, (, true, ), ;, return, 0, ;, }, else, {, String, lowerParam, =, param, ., toLowerCase, (, )]
[), ;, return, 0, ;, }, else, {, String, lowerParam, =, param, ., toLowerCase, (, ), ;, if, (, TRUES]
[;, }, else, {, String, lowerParam, =, param, ., toLowerCase, (, ), ;, if, (, TRUES, ., contains, (, lowerParam]
[;, if, (, TRUES, ., contains, (, lowerParam, ), ), {, setter, ., addValue, (, true, ), ;, }, else]
[., toLowerCase, (, ), ;, if, (, TRUES, ., contains, (, lowerParam, ), ), {, setter, ., addValue, (, true]
[), {, setter, ., addValue, (, true, ), ;, }, else, if, (, FALSES, ., contains, (, lowerParam, ), )]
[., contains, (, lowerParam, ), ), {, setter, ., addValue, (, true, ), ;, }, else, if, (, FALSES, .]
[), ), {, setter, ., addValue, (, true, ), ;, }, else, if, (, FALSES, ., contains, (, lowerParam, )]
[;, }, else, if, (, FALSES, ., contains, (, lowerParam, ), ), {, setter, ., addValue, (, false, ), ;]
[., addValue, (, true, ), ;, }, else, if, (, FALSES, ., contains, (, lowerParam, ), ), {, setter, .]
[), ;, }, else, if, (, FALSES, ., contains, (, lowerParam, ), ), {, setter, ., addValue, (, false, )]
[), {, setter, ., addValue, (, false, ), ;, }, else, {, setter, ., addValue, (, true, ), ;, return]
[., contains, (, lowerParam, ), ), {, setter, ., addValue, (, false, ), ;, }, else, {, setter, ., addValue]
[), ), {, setter, ., addValue, (, false, ), ;, }, else, {, setter, ., addValue, (, true, ), ;]
[;, }, else, {, setter, ., addValue, (, true, ), ;, return, 0, ;, }, return, 1, ;, }, }]
[., addValue, (, false, ), ;, }, else, {, setter, ., addValue, (, true, ), ;, return, 0, ;, }]
[), ;, }, else, {, setter, ., addValue, (, true, ), ;, return, 0, ;, }, return, 1, ;, }]
[;, return, 0, ;, }, return, 1, ;, }, }, @, Override, public, String, getDefaultMetaVariable, (, ), {, return, null]
[., addValue, (, true, ), ;, return, 0, ;, }, return, 1, ;, }, }, @, Override, public, String, getDefaultMetaVariable]
[), ;, return, 0, ;, }, return, 1, ;, }, }, @, Override, public, String, getDefaultMetaVariable, (, ), {, return]
[;, }, return, 1, ;, }, }, @, Override, public, String, getDefaultMetaVariable, (, ), {, return, null, ;, }, }]
[;, }, }, @, Override, public, String, getDefaultMetaVariable, (, ), {, return, null, ;, }, }, public, static, class, WarningGuardErrorOptionHandler]
[;, }, }, public, static, class, WarningGuardErrorOptionHandler, extends, StringOptionHandler, {, public, WarningGuardErrorOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option, ,, Setter]
[,, option, ,, new, WarningGuardSetter, (, setter, ,, CheckLevel, ., ERROR, ), ), ;, }, }, public, static, class, WarningGuardWarningOptionHandler]
[,, new, WarningGuardSetter, (, setter, ,, CheckLevel, ., ERROR, ), ), ;, }, }, public, static, class, WarningGuardWarningOptionHandler, extends, StringOptionHandler]
[), ;, }, }, public, static, class, WarningGuardWarningOptionHandler, extends, StringOptionHandler, {, public, WarningGuardWarningOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option, ,]
[,, CheckLevel, ., ERROR, ), ), ;, }, }, public, static, class, WarningGuardWarningOptionHandler, extends, StringOptionHandler, {, public, WarningGuardWarningOptionHandler, (, CmdLineParser]
[), ), ;, }, }, public, static, class, WarningGuardWarningOptionHandler, extends, StringOptionHandler, {, public, WarningGuardWarningOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option]
[., ERROR, ), ), ;, }, }, public, static, class, WarningGuardWarningOptionHandler, extends, StringOptionHandler, {, public, WarningGuardWarningOptionHandler, (, CmdLineParser, parser, ,]
[,, option, ,, new, WarningGuardSetter, (, setter, ,, CheckLevel, ., WARNING, ), ), ;, }, }, public, static, class, WarningGuardOffOptionHandler]
[,, new, WarningGuardSetter, (, setter, ,, CheckLevel, ., WARNING, ), ), ;, }, }, public, static, class, WarningGuardOffOptionHandler, extends, StringOptionHandler]
[), ;, }, }, public, static, class, WarningGuardOffOptionHandler, extends, StringOptionHandler, {, public, WarningGuardOffOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option, ,]
[,, CheckLevel, ., WARNING, ), ), ;, }, }, public, static, class, WarningGuardOffOptionHandler, extends, StringOptionHandler, {, public, WarningGuardOffOptionHandler, (, CmdLineParser]
[), ), ;, }, }, public, static, class, WarningGuardOffOptionHandler, extends, StringOptionHandler, {, public, WarningGuardOffOptionHandler, (, CmdLineParser, parser, ,, OptionDef, option]
[., WARNING, ), ), ;, }, }, public, static, class, WarningGuardOffOptionHandler, extends, StringOptionHandler, {, public, WarningGuardOffOptionHandler, (, CmdLineParser, parser, ,]
[,, option, ,, new, WarningGuardSetter, (, setter, ,, CheckLevel, ., OFF, ), ), ;, }, }, private, static, class, WarningGuardSetter]
[,, new, WarningGuardSetter, (, setter, ,, CheckLevel, ., OFF, ), ), ;, }, }, private, static, class, WarningGuardSetter, implements, Setter]
[), ;, }, }, private, static, class, WarningGuardSetter, implements, Setter, <, String, >, {, private, final, Setter, <, ?, super]
[,, CheckLevel, ., OFF, ), ), ;, }, }, private, static, class, WarningGuardSetter, implements, Setter, <, String, >, {, private]
[), ), ;, }, }, private, static, class, WarningGuardSetter, implements, Setter, <, String, >, {, private, final, Setter, <, ?]
[., OFF, ), ), ;, }, }, private, static, class, WarningGuardSetter, implements, Setter, <, String, >, {, private, final, Setter]
[=, proxy, ;, this, ., level, =, level, ;, }, @, Override, public, boolean, isMultiValued, (, ), {, return, proxy]
[., proxy, =, proxy, ;, this, ., level, =, level, ;, }, @, Override, public, boolean, isMultiValued, (, ), {]
[;, this, ., level, =, level, ;, }, @, Override, public, boolean, isMultiValued, (, ), {, return, proxy, ., isMultiValued]
[=, level, ;, }, @, Override, public, boolean, isMultiValued, (, ), {, return, proxy, ., isMultiValued, (, ), ;, }]
[., level, =, level, ;, }, @, Override, public, boolean, isMultiValued, (, ), {, return, proxy, ., isMultiValued, (, )]
[;, }, @, Override, public, boolean, isMultiValued, (, ), {, return, proxy, ., isMultiValued, (, ), ;, }, @, Override]
[;, }, @, Override, public, Class, <, String, >, getType, (, ), {, return, (, Class, <, String, >, )]
[., isMultiValued, (, ), ;, }, @, Override, public, Class, <, String, >, getType, (, ), {, return, (, Class]
[;, }, @, Override, public, void, addValue, (, String, value, ), throws, CmdLineException, {, proxy, ., addValue, (, value, )]
[;, }, @, Override, public, void, addValue, (, String, value, ), throws, CmdLineException, {, proxy, ., addValue, (, value, )]
[., getType, (, ), ;, }, @, Override, public, void, addValue, (, String, value, ), throws, CmdLineException, {, proxy, .]
[;, warningGuardSpec, ., add, (, level, ,, value, ), ;, }, }, }, private, static, enum, FormattingOption, {, PRETTY_PRINT, ,]
[., addValue, (, value, ), ;, warningGuardSpec, ., add, (, level, ,, value, ), ;, }, }, }, private, static]
[), ;, warningGuardSpec, ., add, (, level, ,, value, ), ;, }, }, }, private, static, enum, FormattingOption, {, PRETTY_PRINT]
[;, }, }, }, private, static, enum, FormattingOption, {, PRETTY_PRINT, ,, PRINT_INPUT_DELIMITER, ,, SINGLE_QUOTES, ;, private, void, applyToOptions, (, CompilerOptions]
[., add, (, level, ,, value, ), ;, }, }, }, private, static, enum, FormattingOption, {, PRETTY_PRINT, ,, PRINT_INPUT_DELIMITER, ,]
[,, value, ), ;, }, }, }, private, static, enum, FormattingOption, {, PRETTY_PRINT, ,, PRINT_INPUT_DELIMITER, ,, SINGLE_QUOTES, ;, private, void]
[), ;, }, }, }, private, static, enum, FormattingOption, {, PRETTY_PRINT, ,, PRINT_INPUT_DELIMITER, ,, SINGLE_QUOTES, ;, private, void, applyToOptions, (]
[), {, case, PRETTY_PRINT, :, options, ., prettyPrint, =, true, ;, break, ;, case, PRINT_INPUT_DELIMITER, :, options, ., printInputDelimiter, =]
[:, options, ., prettyPrint, =, true, ;, break, ;, case, PRINT_INPUT_DELIMITER, :, options, ., printInputDelimiter, =, true, ;, break, ;]
[=, true, ;, break, ;, case, PRINT_INPUT_DELIMITER, :, options, ., printInputDelimiter, =, true, ;, break, ;, case, SINGLE_QUOTES, :, options]
[., prettyPrint, =, true, ;, break, ;, case, PRINT_INPUT_DELIMITER, :, options, ., printInputDelimiter, =, true, ;, break, ;, case, SINGLE_QUOTES]
[;, break, ;, case, PRINT_INPUT_DELIMITER, :, options, ., printInputDelimiter, =, true, ;, break, ;, case, SINGLE_QUOTES, :, options, ., setPreferSingleQuotes]
[:, options, ., printInputDelimiter, =, true, ;, break, ;, case, SINGLE_QUOTES, :, options, ., setPreferSingleQuotes, (, true, ), ;, break]
[=, true, ;, break, ;, case, SINGLE_QUOTES, :, options, ., setPreferSingleQuotes, (, true, ), ;, break, ;, default, :, throw]
[., printInputDelimiter, =, true, ;, break, ;, case, SINGLE_QUOTES, :, options, ., setPreferSingleQuotes, (, true, ), ;, break, ;, default]
[;, break, ;, case, SINGLE_QUOTES, :, options, ., setPreferSingleQuotes, (, true, ), ;, break, ;, default, :, throw, new, RuntimeException]
[:, options, ., setPreferSingleQuotes, (, true, ), ;, break, ;, default, :, throw, new, RuntimeException, (, "Unknown formatting option: ", +, this, )]
[;, break, ;, default, :, throw, new, RuntimeException, (, "Unknown formatting option: ", +, this, ), ;, }, }, }, private, final, Flags]
[., setPreferSingleQuotes, (, true, ), ;, break, ;, default, :, throw, new, RuntimeException, (, "Unknown formatting option: ", +, this, ), ;, }]
[), ;, break, ;, default, :, throw, new, RuntimeException, (, "Unknown formatting option: ", +, this, ), ;, }, }, }, private, final]
[;, }, }, }, private, final, Flags, flags, =, new, Flags, (, ), ;, private, boolean, isConfigValid, =, false, ;]
[), ;, }, }, }, private, final, Flags, flags, =, new, Flags, (, ), ;, private, boolean, isConfigValid, =, false]
[+, this, ), ;, }, }, }, private, final, Flags, flags, =, new, Flags, (, ), ;, private, boolean, isConfigValid]
[), ;, }, }, }, private, final, Flags, flags, =, new, Flags, (, ), ;, private, boolean, isConfigValid, =, false]
[;, private, boolean, isConfigValid, =, false, ;, protected, CommandLineRunner, (, String, [, ], args, ), {, super, (, ), ;]
[;, protected, CommandLineRunner, (, String, [, ], args, ), {, super, (, ), ;, initConfigFromFlags, (, args, ,, System, .]
[;, }, protected, CommandLineRunner, (, String, [, ], args, ,, PrintStream, out, ,, PrintStream, err, ), {, super, (, out]
[,, System, ., err, ), ;, }, protected, CommandLineRunner, (, String, [, ], args, ,, PrintStream, out, ,, PrintStream, err]
[), ;, }, protected, CommandLineRunner, (, String, [, ], args, ,, PrintStream, out, ,, PrintStream, err, ), {, super, (]
[., err, ), ;, }, protected, CommandLineRunner, (, String, [, ], args, ,, PrintStream, out, ,, PrintStream, err, ), {]
[,, err, ), ;, initConfigFromFlags, (, args, ,, err, ), ;, }, private, List, <, String, >, tokenizeKeepingQuotedStrings, (, List]
[), ;, initConfigFromFlags, (, args, ,, err, ), ;, }, private, List, <, String, >, tokenizeKeepingQuotedStrings, (, List, <, String]
[;, }, private, List, <, String, >, tokenizeKeepingQuotedStrings, (, List, <, String, >, lines, ), {, List, <, String, >]
[,, err, ), ;, }, private, List, <, String, >, tokenizeKeepingQuotedStrings, (, List, <, String, >, lines, ), {, List]
[), ;, }, private, List, <, String, >, tokenizeKeepingQuotedStrings, (, List, <, String, >, lines, ), {, List, <, String]
[;, Pattern, tokenPattern, =, Pattern, ., compile, (, "(?:[^ \t\f\\x0B'\"]|(?:'[^']*'|\"[^\"]*\"))+", ), ;, for, (, String, line, :, lines, ), {, Matcher]
[., newArrayList, (, ), ;, Pattern, tokenPattern, =, Pattern, ., compile, (, "(?:[^ \t\f\\x0B'\"]|(?:'[^']*'|\"[^\"]*\"))+", ), ;, for, (, String, line, :]
[;, for, (, String, line, :, lines, ), {, Matcher, matcher, =, tokenPattern, ., matcher, (, line, ), ;, while]
[., compile, (, "(?:[^ \t\f\\x0B'\"]|(?:'[^']*'|\"[^\"]*\"))+", ), ;, for, (, String, line, :, lines, ), {, Matcher, matcher, =, tokenPattern, ., matcher]
[), ;, for, (, String, line, :, lines, ), {, Matcher, matcher, =, tokenPattern, ., matcher, (, line, ), ;]
[), {, Matcher, matcher, =, tokenPattern, ., matcher, (, line, ), ;, while, (, matcher, ., find, (, ), )]
[;, while, (, matcher, ., find, (, ), ), {, tokens, ., add, (, matcher, ., group, (, 0, )]
[., matcher, (, line, ), ;, while, (, matcher, ., find, (, ), ), {, tokens, ., add, (, matcher]
[), ;, while, (, matcher, ., find, (, ), ), {, tokens, ., add, (, matcher, ., group, (, 0]
[), {, tokens, ., add, (, matcher, ., group, (, 0, ), ), ;, }, }, return, tokens, ;, }]
[., find, (, ), ), {, tokens, ., add, (, matcher, ., group, (, 0, ), ), ;, }, }]
[;, }, }, return, tokens, ;, }, private, List, <, String, >, processArgs, (, String, [, ], args, ), {]
[., add, (, matcher, ., group, (, 0, ), ), ;, }, }, return, tokens, ;, }, private, List, <]
[), ;, }, }, return, tokens, ;, }, private, List, <, String, >, processArgs, (, String, [, ], args, )]
[., group, (, 0, ), ), ;, }, }, return, tokens, ;, }, private, List, <, String, >, processArgs, (]
[), ), ;, }, }, return, tokens, ;, }, private, List, <, String, >, processArgs, (, String, [, ], args]
[;, }, private, List, <, String, >, processArgs, (, String, [, ], args, ), {, Pattern, argPattern, =, Pattern, .]
[;, Pattern, quotesPattern, =, Pattern, ., compile, (, "^['\"](.*)['\"]$", ), ;, List, <, String, >, processedArgs, =, Lists, ., newArrayList]
[., compile, (, "(--[a-zA-Z_]+)=(.*)", ), ;, Pattern, quotesPattern, =, Pattern, ., compile, (, "^['\"](.*)['\"]$", ), ;, List, <, String, >]
[), ;, Pattern, quotesPattern, =, Pattern, ., compile, (, "^['\"](.*)['\"]$", ), ;, List, <, String, >, processedArgs, =, Lists, .]
[;, List, <, String, >, processedArgs, =, Lists, ., newArrayList, (, ), ;, for, (, String, arg, :, args, )]
[., compile, (, "^['\"](.*)['\"]$", ), ;, List, <, String, >, processedArgs, =, Lists, ., newArrayList, (, ), ;, for, (]
[), ;, List, <, String, >, processedArgs, =, Lists, ., newArrayList, (, ), ;, for, (, String, arg, :, args]
[;, for, (, String, arg, :, args, ), {, Matcher, matcher, =, argPattern, ., matcher, (, arg, ), ;, if]
[., newArrayList, (, ), ;, for, (, String, arg, :, args, ), {, Matcher, matcher, =, argPattern, ., matcher, (]
[), {, Matcher, matcher, =, argPattern, ., matcher, (, arg, ), ;, if, (, matcher, ., matches, (, ), )]
[;, if, (, matcher, ., matches, (, ), ), {, processedArgs, ., add, (, matcher, ., group, (, 1, )]
[., matcher, (, arg, ), ;, if, (, matcher, ., matches, (, ), ), {, processedArgs, ., add, (, matcher]
[), ;, if, (, matcher, ., matches, (, ), ), {, processedArgs, ., add, (, matcher, ., group, (, 1]
[), {, processedArgs, ., add, (, matcher, ., group, (, 1, ), ), ;, String, value, =, matcher, ., group]
[., matches, (, ), ), {, processedArgs, ., add, (, matcher, ., group, (, 1, ), ), ;, String, value]
[;, String, value, =, matcher, ., group, (, 2, ), ;, Matcher, quotesMatcher, =, quotesPattern, ., matcher, (, value, )]
[., add, (, matcher, ., group, (, 1, ), ), ;, String, value, =, matcher, ., group, (, 2, )]
[), ;, String, value, =, matcher, ., group, (, 2, ), ;, Matcher, quotesMatcher, =, quotesPattern, ., matcher, (, value]
[., group, (, 1, ), ), ;, String, value, =, matcher, ., group, (, 2, ), ;, Matcher, quotesMatcher, =]
[), ), ;, String, value, =, matcher, ., group, (, 2, ), ;, Matcher, quotesMatcher, =, quotesPattern, ., matcher, (]
[;, Matcher, quotesMatcher, =, quotesPattern, ., matcher, (, value, ), ;, if, (, quotesMatcher, ., matches, (, ), ), {]
[., group, (, 2, ), ;, Matcher, quotesMatcher, =, quotesPattern, ., matcher, (, value, ), ;, if, (, quotesMatcher, .]
[), ;, Matcher, quotesMatcher, =, quotesPattern, ., matcher, (, value, ), ;, if, (, quotesMatcher, ., matches, (, ), )]
[;, if, (, quotesMatcher, ., matches, (, ), ), {, processedArgs, ., add, (, quotesMatcher, ., group, (, 1, )]
[., matcher, (, value, ), ;, if, (, quotesMatcher, ., matches, (, ), ), {, processedArgs, ., add, (, quotesMatcher]
[), ;, if, (, quotesMatcher, ., matches, (, ), ), {, processedArgs, ., add, (, quotesMatcher, ., group, (, 1]
[), {, processedArgs, ., add, (, quotesMatcher, ., group, (, 1, ), ), ;, }, else, {, processedArgs, ., add]
[., matches, (, ), ), {, processedArgs, ., add, (, quotesMatcher, ., group, (, 1, ), ), ;, }, else]
[;, }, else, {, processedArgs, ., add, (, value, ), ;, }, }, else, {, processedArgs, ., add, (, arg]
[., add, (, quotesMatcher, ., group, (, 1, ), ), ;, }, else, {, processedArgs, ., add, (, value, )]
[), ;, }, else, {, processedArgs, ., add, (, value, ), ;, }, }, else, {, processedArgs, ., add, (]
[., group, (, 1, ), ), ;, }, else, {, processedArgs, ., add, (, value, ), ;, }, }, else]
[), ), ;, }, else, {, processedArgs, ., add, (, value, ), ;, }, }, else, {, processedArgs, ., add]
[;, }, }, else, {, processedArgs, ., add, (, arg, ), ;, }, }, return, processedArgs, ;, }, private, void]
[., add, (, value, ), ;, }, }, else, {, processedArgs, ., add, (, arg, ), ;, }, }, return]
[), ;, }, }, else, {, processedArgs, ., add, (, arg, ), ;, }, }, return, processedArgs, ;, }, private]
[;, }, }, return, processedArgs, ;, }, private, void, processFlagFile, (, PrintStream, err, ), throws, CmdLineException, ,, IOException, {, File]
[., add, (, arg, ), ;, }, }, return, processedArgs, ;, }, private, void, processFlagFile, (, PrintStream, err, ), throws]
[), ;, }, }, return, processedArgs, ;, }, private, void, processFlagFile, (, PrintStream, err, ), throws, CmdLineException, ,, IOException, {]
[;, }, private, void, processFlagFile, (, PrintStream, err, ), throws, CmdLineException, ,, IOException, {, File, flagFileInput, =, new, File, (]
[;, List, <, String, >, argsInFile, =, tokenizeKeepingQuotedStrings, (, Files, ., readLines, (, flagFileInput, ,, Charset, ., defaultCharset, (, )]
[), ;, List, <, String, >, argsInFile, =, tokenizeKeepingQuotedStrings, (, Files, ., readLines, (, flagFileInput, ,, Charset, ., defaultCharset, (]
[., flag_file, ), ;, List, <, String, >, argsInFile, =, tokenizeKeepingQuotedStrings, (, Files, ., readLines, (, flagFileInput, ,, Charset, .]
[;, flags, ., flag_file, =, "", ;, List, <, String, >, processedFileArgs, =, processArgs, (, argsInFile, ., toArray, (, new]
[), ;, flags, ., flag_file, =, "", ;, List, <, String, >, processedFileArgs, =, processArgs, (, argsInFile, ., toArray, (]
[., readLines, (, flagFileInput, ,, Charset, ., defaultCharset, (, ), ), ), ;, flags, ., flag_file, =, "", ;, List]
[,, Charset, ., defaultCharset, (, ), ), ), ;, flags, ., flag_file, =, "", ;, List, <, String, >, processedFileArgs]
[), ), ;, flags, ., flag_file, =, "", ;, List, <, String, >, processedFileArgs, =, processArgs, (, argsInFile, ., toArray]
[., defaultCharset, (, ), ), ), ;, flags, ., flag_file, =, "", ;, List, <, String, >, processedFileArgs, =, processArgs]
[=, "", ;, List, <, String, >, processedFileArgs, =, processArgs, (, argsInFile, ., toArray, (, new, String, [, ], {]
[., flag_file, =, "", ;, List, <, String, >, processedFileArgs, =, processArgs, (, argsInFile, ., toArray, (, new, String, []
[;, List, <, String, >, processedFileArgs, =, processArgs, (, argsInFile, ., toArray, (, new, String, [, ], {, }, )]
[;, CmdLineParser, parserFileArgs, =, new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, parserFileArgs, .]
[), ;, CmdLineParser, parserFileArgs, =, new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, parserFileArgs]
[., toArray, (, new, String, [, ], {, }, ), ), ;, CmdLineParser, parserFileArgs, =, new, CmdLineParser, (, flags, )]
[), ), ;, CmdLineParser, parserFileArgs, =, new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;]
[), ), ;, CmdLineParser, parserFileArgs, =, new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;]
[;, Flags, ., warningGuardSpec, ., clear, (, ), ;, parserFileArgs, ., parseArgument, (, processedFileArgs, ., toArray, (, new, String, []
[), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, parserFileArgs, ., parseArgument, (, processedFileArgs, ., toArray, (, new, String]
[;, parserFileArgs, ., parseArgument, (, processedFileArgs, ., toArray, (, new, String, [, ], {, }, ), ), ;, if, (]
[., clear, (, ), ;, parserFileArgs, ., parseArgument, (, processedFileArgs, ., toArray, (, new, String, [, ], {, }, )]
[., warningGuardSpec, ., clear, (, ), ;, parserFileArgs, ., parseArgument, (, processedFileArgs, ., toArray, (, new, String, [, ], {]
[;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {, err, ., println, (, "ERROR - Arguments in the file cannot contain ", +]
[., parseArgument, (, processedFileArgs, ., toArray, (, new, String, [, ], {, }, ), ), ;, if, (, !, flags]
[), ;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {, err, ., println, (, "ERROR - Arguments in the file cannot contain "]
[., toArray, (, new, String, [, ], {, }, ), ), ;, if, (, !, flags, ., flag_file, ., equals]
[), ), ;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {, err, ., println, (]
[), ), ;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {, err, ., println, (]
[), {, err, ., println, (, "ERROR - Arguments in the file cannot contain ", +, "--flagfile option.", ), ;, isConfigValid, =, false, ;, }, }, private, void, initConfigFromFlags]
[), {, err, ., println, (, "ERROR - Arguments in the file cannot contain ", +, "--flagfile option.", ), ;, isConfigValid, =, false, ;, }, }, private, void, initConfigFromFlags]
[., equals, (, "", ), ), {, err, ., println, (, "ERROR - Arguments in the file cannot contain ", +, "--flagfile option.", ), ;, isConfigValid, =, false, ;]
[., flag_file, ., equals, (, "", ), ), {, err, ., println, (, "ERROR - Arguments in the file cannot contain ", +, "--flagfile option.", ), ;, isConfigValid, =]
[), ), {, err, ., println, (, "ERROR - Arguments in the file cannot contain ", +, "--flagfile option.", ), ;, isConfigValid, =, false, ;, }, }, private, void]
[;, isConfigValid, =, false, ;, }, }, private, void, initConfigFromFlags, (, String, [, ], args, ,, PrintStream, err, ), {]
[., println, (, "ERROR - Arguments in the file cannot contain ", +, "--flagfile option.", ), ;, isConfigValid, =, false, ;, }, }, private, void, initConfigFromFlags, (, String, []
[), ;, isConfigValid, =, false, ;, }, }, private, void, initConfigFromFlags, (, String, [, ], args, ,, PrintStream, err, )]
[+, "--flagfile option.", ), ;, isConfigValid, =, false, ;, }, }, private, void, initConfigFromFlags, (, String, [, ], args, ,, PrintStream]
[), ;, isConfigValid, =, false, ;, }, }, private, void, initConfigFromFlags, (, String, [, ], args, ,, PrintStream, err, )]
[=, false, ;, }, }, private, void, initConfigFromFlags, (, String, [, ], args, ,, PrintStream, err, ), {, List, <]
[;, }, }, private, void, initConfigFromFlags, (, String, [, ], args, ,, PrintStream, err, ), {, List, <, String, >]
[;, CmdLineParser, parser, =, new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, isConfigValid, =]
[), ;, CmdLineParser, parser, =, new, CmdLineParser, (, flags, ), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, isConfigValid]
[;, Flags, ., warningGuardSpec, ., clear, (, ), ;, isConfigValid, =, true, ;, try, {, parser, ., parseArgument, (, processedArgs]
[), ;, Flags, ., warningGuardSpec, ., clear, (, ), ;, isConfigValid, =, true, ;, try, {, parser, ., parseArgument, (]
[;, isConfigValid, =, true, ;, try, {, parser, ., parseArgument, (, processedArgs, ., toArray, (, new, String, [, ], {]
[., clear, (, ), ;, isConfigValid, =, true, ;, try, {, parser, ., parseArgument, (, processedArgs, ., toArray, (, new]
[., warningGuardSpec, ., clear, (, ), ;, isConfigValid, =, true, ;, try, {, parser, ., parseArgument, (, processedArgs, ., toArray]
[=, true, ;, try, {, parser, ., parseArgument, (, processedArgs, ., toArray, (, new, String, [, ], {, }, )]
[;, try, {, parser, ., parseArgument, (, processedArgs, ., toArray, (, new, String, [, ], {, }, ), ), ;]
[;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {, processFlagFile, (, err, ), ;, }]
[., parseArgument, (, processedArgs, ., toArray, (, new, String, [, ], {, }, ), ), ;, if, (, !, flags]
[), ;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {, processFlagFile, (, err, ), ;]
[., toArray, (, new, String, [, ], {, }, ), ), ;, if, (, !, flags, ., flag_file, ., equals]
[), ), ;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {, processFlagFile, (, err, )]
[), ), ;, if, (, !, flags, ., flag_file, ., equals, (, "", ), ), {, processFlagFile, (, err, )]
[), {, processFlagFile, (, err, ), ;, }, }, catch, (, CmdLineException, e, ), {, err, ., println, (, e]
[), {, processFlagFile, (, err, ), ;, }, }, catch, (, CmdLineException, e, ), {, err, ., println, (, e]
[., equals, (, "", ), ), {, processFlagFile, (, err, ), ;, }, }, catch, (, CmdLineException, e, ), {]
[., flag_file, ., equals, (, "", ), ), {, processFlagFile, (, err, ), ;, }, }, catch, (, CmdLineException, e]
[), ), {, processFlagFile, (, err, ), ;, }, }, catch, (, CmdLineException, e, ), {, err, ., println, (]
[;, }, }, catch, (, CmdLineException, e, ), {, err, ., println, (, e, ., getMessage, (, ), ), ;]
[), ;, }, }, catch, (, CmdLineException, e, ), {, err, ., println, (, e, ., getMessage, (, ), )]
[;, isConfigValid, =, false, ;, }, catch, (, IOException, ioErr, ), {, err, ., println, (, "ERROR - ", +, flags, .]
[., println, (, e, ., getMessage, (, ), ), ;, isConfigValid, =, false, ;, }, catch, (, IOException, ioErr, )]
[), ;, isConfigValid, =, false, ;, }, catch, (, IOException, ioErr, ), {, err, ., println, (, "ERROR - ", +, flags]
[., getMessage, (, ), ), ;, isConfigValid, =, false, ;, }, catch, (, IOException, ioErr, ), {, err, ., println]
[=, false, ;, }, catch, (, IOException, ioErr, ), {, err, ., println, (, "ERROR - ", +, flags, ., flag_file, +]
[;, }, catch, (, IOException, ioErr, ), {, err, ., println, (, "ERROR - ", +, flags, ., flag_file, +, " read error.", )]
[;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: "]
[., println, (, "ERROR - ", +, flags, ., flag_file, +, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (, flags]
[), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +]
[+, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (]
[+, flags, ., flag_file, +, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {]
[+, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (]
[., flag_file, +, " read error.", ), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, .]
[), ;, isConfigValid, =, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +]
[=, false, ;, }, if, (, flags, ., version, ), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler]
[;, }, if, (, flags, ., version, ), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler, ., getReleaseVersion]
[), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +, "\n", +, "Built on: ", +]
[., version, ), {, err, ., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +, "\n", +]
[;, err, ., flush, (, ), ;, }, if, (, flags, ., process_common_js_modules, ), {, flags, ., process_closure_primitives, =, true]
[., println, (, "Closure Compiler (http://code.google.com/closure/compiler)\n", +, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +, "\n", +, "Built on: ", +, Compiler, ., getReleaseDate]
[), ;, err, ., flush, (, ), ;, }, if, (, flags, ., process_common_js_modules, ), {, flags, ., process_closure_primitives, =]
[+, Compiler, ., getReleaseDate, (, ), ), ;, err, ., flush, (, ), ;, }, if, (, flags, ., process_common_js_modules]
[+, "Built on: ", +, Compiler, ., getReleaseDate, (, ), ), ;, err, ., flush, (, ), ;, }, if, (, flags]
[+, "\n", +, "Built on: ", +, Compiler, ., getReleaseDate, (, ), ), ;, err, ., flush, (, ), ;, }, if]
[+, Compiler, ., getReleaseVersion, (, ), +, "\n", +, "Built on: ", +, Compiler, ., getReleaseDate, (, ), ), ;, err, .]
[+, "Version: ", +, Compiler, ., getReleaseVersion, (, ), +, "\n", +, "Built on: ", +, Compiler, ., getReleaseDate, (, ), ), ;]
[+, Compiler, ., getReleaseVersion, (, ), +, "\n", +, "Built on: ", +, Compiler, ., getReleaseDate, (, ), ), ;, err, .]
[+, "\n", +, "Built on: ", +, Compiler, ., getReleaseDate, (, ), ), ;, err, ., flush, (, ), ;, }, if]
[., getReleaseVersion, (, ), +, "\n", +, "Built on: ", +, Compiler, ., getReleaseDate, (, ), ), ;, err, ., flush, (]
[+, "Built on: ", +, Compiler, ., getReleaseDate, (, ), ), ;, err, ., flush, (, ), ;, }, if, (, flags]
[+, Compiler, ., getReleaseDate, (, ), ), ;, err, ., flush, (, ), ;, }, if, (, flags, ., process_common_js_modules]
[), ;, err, ., flush, (, ), ;, }, if, (, flags, ., process_common_js_modules, ), {, flags, ., process_closure_primitives, =]
[., getReleaseDate, (, ), ), ;, err, ., flush, (, ), ;, }, if, (, flags, ., process_common_js_modules, ), {]
[;, }, if, (, flags, ., process_common_js_modules, ), {, flags, ., process_closure_primitives, =, true, ;, flags, ., manage_closure_dependencies, =, true]
[., flush, (, ), ;, }, if, (, flags, ., process_common_js_modules, ), {, flags, ., process_closure_primitives, =, true, ;, flags]
[), {, flags, ., process_closure_primitives, =, true, ;, flags, ., manage_closure_dependencies, =, true, ;, if, (, flags, ., common_js_entry_module, ==]
[., process_common_js_modules, ), {, flags, ., process_closure_primitives, =, true, ;, flags, ., manage_closure_dependencies, =, true, ;, if, (, flags, .]
[=, true, ;, flags, ., manage_closure_dependencies, =, true, ;, if, (, flags, ., common_js_entry_module, ==, null, ), {, err, .]
[., process_closure_primitives, =, true, ;, flags, ., manage_closure_dependencies, =, true, ;, if, (, flags, ., common_js_entry_module, ==, null, ), {]
[;, flags, ., manage_closure_dependencies, =, true, ;, if, (, flags, ., common_js_entry_module, ==, null, ), {, err, ., println, (]
[=, true, ;, if, (, flags, ., common_js_entry_module, ==, null, ), {, err, ., println, (, "Please specify --common_js_entry_module.", ), ;, err]
[., manage_closure_dependencies, =, true, ;, if, (, flags, ., common_js_entry_module, ==, null, ), {, err, ., println, (, "Please specify --common_js_entry_module.", )]
[;, if, (, flags, ., common_js_entry_module, ==, null, ), {, err, ., println, (, "Please specify --common_js_entry_module.", ), ;, err, ., flush]
[), {, err, ., println, (, "Please specify --common_js_entry_module.", ), ;, err, ., flush, (, ), ;, isConfigValid, =, false, ;, }]
[==, null, ), {, err, ., println, (, "Please specify --common_js_entry_module.", ), ;, err, ., flush, (, ), ;, isConfigValid, =, false]
[., common_js_entry_module, ==, null, ), {, err, ., println, (, "Please specify --common_js_entry_module.", ), ;, err, ., flush, (, ), ;, isConfigValid]
[), {, err, ., println, (, "Please specify --common_js_entry_module.", ), ;, err, ., flush, (, ), ;, isConfigValid, =, false, ;, }]
[;, err, ., flush, (, ), ;, isConfigValid, =, false, ;, }, flags, ., closure_entry_point, =, Lists, ., newArrayList, (]
[., println, (, "Please specify --common_js_entry_module.", ), ;, err, ., flush, (, ), ;, isConfigValid, =, false, ;, }, flags, ., closure_entry_point]
[), ;, err, ., flush, (, ), ;, isConfigValid, =, false, ;, }, flags, ., closure_entry_point, =, Lists, ., newArrayList]
[;, isConfigValid, =, false, ;, }, flags, ., closure_entry_point, =, Lists, ., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (, flags, .]
[., flush, (, ), ;, isConfigValid, =, false, ;, }, flags, ., closure_entry_point, =, Lists, ., newArrayList, (, ProcessCommonJSModules, .]
[=, false, ;, }, flags, ., closure_entry_point, =, Lists, ., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (, flags, ., common_js_entry_module, )]
[;, }, flags, ., closure_entry_point, =, Lists, ., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (, flags, ., common_js_entry_module, ), ), ;]
[=, Lists, ., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (, flags, ., common_js_entry_module, ), ), ;, }, if, (, !, isConfigValid]
[., closure_entry_point, =, Lists, ., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (, flags, ., common_js_entry_module, ), ), ;, }, if, (]
[;, }, if, (, !, isConfigValid, ||, flags, ., display_help, ), {, isConfigValid, =, false, ;, parser, ., printUsage, (]
[., newArrayList, (, ProcessCommonJSModules, ., toModuleName, (, flags, ., common_js_entry_module, ), ), ;, }, if, (, !, isConfigValid, ||, flags]
[), ;, }, if, (, !, isConfigValid, ||, flags, ., display_help, ), {, isConfigValid, =, false, ;, parser, ., printUsage]
[., toModuleName, (, flags, ., common_js_entry_module, ), ), ;, }, if, (, !, isConfigValid, ||, flags, ., display_help, ), {]
[), ), ;, }, if, (, !, isConfigValid, ||, flags, ., display_help, ), {, isConfigValid, =, false, ;, parser, .]
[., common_js_entry_module, ), ), ;, }, if, (, !, isConfigValid, ||, flags, ., display_help, ), {, isConfigValid, =, false, ;]
[), {, isConfigValid, =, false, ;, parser, ., printUsage, (, err, ), ;, }, else, {, CodingConvention, conv, ;, if]
[||, flags, ., display_help, ), {, isConfigValid, =, false, ;, parser, ., printUsage, (, err, ), ;, }, else, {]
[||, flags, ., display_help, ), {, isConfigValid, =, false, ;, parser, ., printUsage, (, err, ), ;, }, else, {]
[), {, isConfigValid, =, false, ;, parser, ., printUsage, (, err, ), ;, }, else, {, CodingConvention, conv, ;, if]
[., display_help, ), {, isConfigValid, =, false, ;, parser, ., printUsage, (, err, ), ;, }, else, {, CodingConvention, conv]
[=, false, ;, parser, ., printUsage, (, err, ), ;, }, else, {, CodingConvention, conv, ;, if, (, flags, .]
[;, parser, ., printUsage, (, err, ), ;, }, else, {, CodingConvention, conv, ;, if, (, flags, ., third_party, )]
[;, }, else, {, CodingConvention, conv, ;, if, (, flags, ., third_party, ), {, conv, =, CodingConventions, ., getDefault, (]
[., printUsage, (, err, ), ;, }, else, {, CodingConvention, conv, ;, if, (, flags, ., third_party, ), {, conv]
[), ;, }, else, {, CodingConvention, conv, ;, if, (, flags, ., third_party, ), {, conv, =, CodingConventions, ., getDefault]
[), {, conv, =, CodingConventions, ., getDefault, (, ), ;, }, else, if, (, flags, ., process_jquery_primitives, ), {, conv]
[., third_party, ), {, conv, =, CodingConventions, ., getDefault, (, ), ;, }, else, if, (, flags, ., process_jquery_primitives, )]
[=, CodingConventions, ., getDefault, (, ), ;, }, else, if, (, flags, ., process_jquery_primitives, ), {, conv, =, new, JqueryCodingConvention]
[;, }, else, if, (, flags, ., process_jquery_primitives, ), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {]
[., getDefault, (, ), ;, }, else, if, (, flags, ., process_jquery_primitives, ), {, conv, =, new, JqueryCodingConvention, (, )]
[), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }]
[., process_jquery_primitives, ), {, conv, =, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, )]
[=, new, JqueryCodingConvention, (, ), ;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }, getCommandLineConfig, (, )]
[;, }, else, {, conv, =, new, ClosureCodingConvention, (, ), ;, }, getCommandLineConfig, (, ), ., setPrintTree, (, flags, .]
[=, new, ClosureCodingConvention, (, ), ;, }, getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (]
[;, }, getCommandLineConfig, (, ), ., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), .]
[;, }, }, @, Override, protected, CompilerOptions, createOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;, if]
[., setWarningsWhitelistFile, (, flags, ., warnings_whitelist_file, ), ;, }, }, @, Override, protected, CompilerOptions, createOptions, (, ), {, CompilerOptions, options]
[., setTransformAMDToCJSModules, (, flags, ., transform_amd_modules, ), ., setWarningsWhitelistFile, (, flags, ., warnings_whitelist_file, ), ;, }, }, @, Override, protected]
[., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix, ), ., setTransformAMDToCJSModules, (, flags, ., transform_amd_modules, ), ., setWarningsWhitelistFile, (, flags, ., warnings_whitelist_file]
[., setProcessCommonJSModules, (, flags, ., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix, ), ., setTransformAMDToCJSModules, (, flags, ., transform_amd_modules]
[., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix]
[., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules]
[., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in]
[., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), .]
[., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), ), .]
[., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of]
[., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point]
[., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies]
[., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies]
[., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset]
[., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define]
[., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec]
[., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format]
[., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map]
[., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix]
[., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper]
[., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), .]
[., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), .]
[., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), .]
[., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file]
[., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files]
[., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file]
[., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file]
[., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file]
[., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags]
[., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags]
[., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles]
[., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs]
[., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level]
[., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode]
[., setPrintTree, (, flags, ., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph]
[), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, .]
[., print_tree, ), ., setPrintAst, (, flags, ., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (]
[), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, .]
[., print_ast, ), ., setPrintPassGraph, (, flags, ., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (]
[), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, .]
[., print_pass_graph, ), ., setJscompDevMode, (, flags, ., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (]
[), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, .]
[., jscomp_dev_mode, ), ., setLoggingLevel, (, flags, ., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (]
[), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (]
[., logging_level, ), ., setExterns, (, flags, ., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), .]
[), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (]
[., externs, ), ., setJs, (, flags, ., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), .]
[), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, .]
[., getJsFiles, (, ), ), ., setJsOutputFile, (, flags, ., js_output_file, ), ., setModule, (, flags, ., module, ), .]
[), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, .]
[., js_output_file, ), ., setModule, (, flags, ., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (]
[), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, .]
[., module, ), ., setVariableMapInputFile, (, flags, ., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (]
[), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, .]
[., variable_map_input_file, ), ., setPropertyMapInputFile, (, flags, ., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (]
[), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, .]
[., property_map_input_file, ), ., setVariableMapOutputFile, (, flags, ., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (]
[), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, )]
[., variable_map_output_file, ), ., setCreateNameMapFiles, (, flags, ., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (]
[), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, )]
[., create_name_map_files, ), ., setPropertyMapOutputFile, (, flags, ., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, .]
[), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, )]
[., property_map_output_file, ), ., setCodingConvention, (, conv, ), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, .]
[), ., setSummaryDetailLevel, (, flags, ., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, .]
[), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, .]
[., summary_detail_level, ), ., setOutputWrapper, (, flags, ., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (]
[), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, .]
[., output_wrapper, ), ., setModuleWrapper, (, flags, ., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (]
[), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, .]
[., module_wrapper, ), ., setModuleOutputPathPrefix, (, flags, ., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (]
[), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, .]
[., module_output_path_prefix, ), ., setCreateSourceMap, (, flags, ., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (]
[), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, .]
[., create_source_map, ), ., setSourceMapFormat, (, flags, ., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (]
[), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, .]
[., source_map_format, ), ., setWarningGuardSpec, (, Flags, ., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (]
[), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, .]
[., warningGuardSpec, ), ., setDefine, (, flags, ., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (]
[), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, .]
[., define, ), ., setCharset, (, flags, ., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (]
[), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, .]
[., charset, ), ., setManageClosureDependencies, (, flags, ., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (]
[), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, .]
[., manage_closure_dependencies, ), ., setOnlyClosureDependencies, (, flags, ., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (]
[), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), )]
[., only_closure_dependencies, ), ., setClosureEntryPoints, (, flags, ., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest]
[), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, )]
[., closure_entry_point, ), ., setOutputManifest, (, ImmutableList, ., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, .]
[), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (, flags, .]
[., of, (, flags, ., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, .]
[), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (, flags]
[., output_manifest, ), ), ., setOutputModuleDependencies, (, flags, ., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn]
[), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (, flags, .]
[., output_module_dependencies, ), ., setAcceptConstKeyword, (, flags, ., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (]
[), ., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (, flags, .]
[., accept_const_keyword, ), ., setLanguageIn, (, flags, ., language_in, ), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (]
[), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix, ), ., setTransformAMDToCJSModules, (, flags, .]
[., language_in, ), ., setProcessCommonJSModules, (, flags, ., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix, ), ., setTransformAMDToCJSModules, (]
[), ., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix, ), ., setTransformAMDToCJSModules, (, flags, ., transform_amd_modules, ), ., setWarningsWhitelistFile, (, flags, .]
[., process_common_js_modules, ), ., setCommonJSModulePathPrefix, (, flags, ., common_js_path_prefix, ), ., setTransformAMDToCJSModules, (, flags, ., transform_amd_modules, ), ., setWarningsWhitelistFile, (]
[), ., setTransformAMDToCJSModules, (, flags, ., transform_amd_modules, ), ., setWarningsWhitelistFile, (, flags, ., warnings_whitelist_file, ), ;, }, }, @, Override]
[., common_js_path_prefix, ), ., setTransformAMDToCJSModules, (, flags, ., transform_amd_modules, ), ., setWarningsWhitelistFile, (, flags, ., warnings_whitelist_file, ), ;, }, }]
[), ., setWarningsWhitelistFile, (, flags, ., warnings_whitelist_file, ), ;, }, }, @, Override, protected, CompilerOptions, createOptions, (, ), {, CompilerOptions]
[., transform_amd_modules, ), ., setWarningsWhitelistFile, (, flags, ., warnings_whitelist_file, ), ;, }, }, @, Override, protected, CompilerOptions, createOptions, (, )]
[), ;, }, }, @, Override, protected, CompilerOptions, createOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (, ), ;]
[., warnings_whitelist_file, ), ;, }, }, @, Override, protected, CompilerOptions, createOptions, (, ), {, CompilerOptions, options, =, new, CompilerOptions, (]
[;, if, (, flags, ., process_jquery_primitives, ), {, options, ., setCodingConvention, (, new, JqueryCodingConvention, (, ), ), ;, }, else]
[), {, options, ., setCodingConvention, (, new, JqueryCodingConvention, (, ), ), ;, }, else, {, options, ., setCodingConvention, (, new]
[., process_jquery_primitives, ), {, options, ., setCodingConvention, (, new, JqueryCodingConvention, (, ), ), ;, }, else, {, options, ., setCodingConvention]
[;, }, else, {, options, ., setCodingConvention, (, new, ClosureCodingConvention, (, ), ), ;, }, CompilationLevel, level, =, flags, .]
[., setCodingConvention, (, new, JqueryCodingConvention, (, ), ), ;, }, else, {, options, ., setCodingConvention, (, new, ClosureCodingConvention, (, )]
[), ;, }, else, {, options, ., setCodingConvention, (, new, ClosureCodingConvention, (, ), ), ;, }, CompilationLevel, level, =, flags]
[;, }, CompilationLevel, level, =, flags, ., compilation_level, ;, level, ., setOptionsForCompilationLevel, (, options, ), ;, if, (, flags, .]
[., setCodingConvention, (, new, ClosureCodingConvention, (, ), ), ;, }, CompilationLevel, level, =, flags, ., compilation_level, ;, level, ., setOptionsForCompilationLevel]
[), ;, }, CompilationLevel, level, =, flags, ., compilation_level, ;, level, ., setOptionsForCompilationLevel, (, options, ), ;, if, (, flags]
[;, level, ., setOptionsForCompilationLevel, (, options, ), ;, if, (, flags, ., debug, ), {, level, ., setDebugOptionsForCompilationLevel, (, options]
[., compilation_level, ;, level, ., setOptionsForCompilationLevel, (, options, ), ;, if, (, flags, ., debug, ), {, level, ., setDebugOptionsForCompilationLevel]
[;, if, (, flags, ., debug, ), {, level, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, if, (, flags, .]
[., setOptionsForCompilationLevel, (, options, ), ;, if, (, flags, ., debug, ), {, level, ., setDebugOptionsForCompilationLevel, (, options, ), ;]
[), ;, if, (, flags, ., debug, ), {, level, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, if, (, flags]
[), {, level, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, if, (, flags, ., use_types_for_optimization, ), {, level, ., setTypeBasedOptimizationOptions]
[., debug, ), {, level, ., setDebugOptionsForCompilationLevel, (, options, ), ;, }, if, (, flags, ., use_types_for_optimization, ), {, level]
[;, }, if, (, flags, ., use_types_for_optimization, ), {, level, ., setTypeBasedOptimizationOptions, (, options, ), ;, }, if, (, flags]
[., setDebugOptionsForCompilationLevel, (, options, ), ;, }, if, (, flags, ., use_types_for_optimization, ), {, level, ., setTypeBasedOptimizationOptions, (, options, )]
[), ;, }, if, (, flags, ., use_types_for_optimization, ), {, level, ., setTypeBasedOptimizationOptions, (, options, ), ;, }, if, (]
[), {, level, ., setTypeBasedOptimizationOptions, (, options, ), ;, }, if, (, flags, ., generate_exports, ), {, options, ., setGenerateExports]
[., use_types_for_optimization, ), {, level, ., setTypeBasedOptimizationOptions, (, options, ), ;, }, if, (, flags, ., generate_exports, ), {, options]
[;, }, if, (, flags, ., generate_exports, ), {, options, ., setGenerateExports, (, flags, ., generate_exports, ), ;, }, WarningLevel]
[., setTypeBasedOptimizationOptions, (, options, ), ;, }, if, (, flags, ., generate_exports, ), {, options, ., setGenerateExports, (, flags, .]
[), ;, }, if, (, flags, ., generate_exports, ), {, options, ., setGenerateExports, (, flags, ., generate_exports, ), ;, }]
[), {, options, ., setGenerateExports, (, flags, ., generate_exports, ), ;, }, WarningLevel, wLevel, =, flags, ., warning_level, ;, wLevel]
[., generate_exports, ), {, options, ., setGenerateExports, (, flags, ., generate_exports, ), ;, }, WarningLevel, wLevel, =, flags, ., warning_level]
[;, }, WarningLevel, wLevel, =, flags, ., warning_level, ;, wLevel, ., setOptionsForWarningLevel, (, options, ), ;, for, (, FormattingOption, formattingOption]
[., setGenerateExports, (, flags, ., generate_exports, ), ;, }, WarningLevel, wLevel, =, flags, ., warning_level, ;, wLevel, ., setOptionsForWarningLevel, (]
[), ;, }, WarningLevel, wLevel, =, flags, ., warning_level, ;, wLevel, ., setOptionsForWarningLevel, (, options, ), ;, for, (, FormattingOption]
[., generate_exports, ), ;, }, WarningLevel, wLevel, =, flags, ., warning_level, ;, wLevel, ., setOptionsForWarningLevel, (, options, ), ;, for]
[;, wLevel, ., setOptionsForWarningLevel, (, options, ), ;, for, (, FormattingOption, formattingOption, :, flags, ., formatting, ), {, formattingOption, .]
[., warning_level, ;, wLevel, ., setOptionsForWarningLevel, (, options, ), ;, for, (, FormattingOption, formattingOption, :, flags, ., formatting, ), {]
[;, for, (, FormattingOption, formattingOption, :, flags, ., formatting, ), {, formattingOption, ., applyToOptions, (, options, ), ;, }, options]
[., setOptionsForWarningLevel, (, options, ), ;, for, (, FormattingOption, formattingOption, :, flags, ., formatting, ), {, formattingOption, ., applyToOptions, (]
[), ;, for, (, FormattingOption, formattingOption, :, flags, ., formatting, ), {, formattingOption, ., applyToOptions, (, options, ), ;, }]
[), {, formattingOption, ., applyToOptions, (, options, ), ;, }, options, ., closurePass, =, flags, ., process_closure_primitives, ;, options, .]
[., formatting, ), {, formattingOption, ., applyToOptions, (, options, ), ;, }, options, ., closurePass, =, flags, ., process_closure_primitives, ;]
[;, }, options, ., closurePass, =, flags, ., process_closure_primitives, ;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&, CompilationLevel, .]
[., applyToOptions, (, options, ), ;, }, options, ., closurePass, =, flags, ., process_closure_primitives, ;, options, ., jqueryPass, =, flags]
[), ;, }, options, ., closurePass, =, flags, ., process_closure_primitives, ;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&, CompilationLevel]
[=, flags, ., process_closure_primitives, ;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ;, if]
[., closurePass, =, flags, ., process_closure_primitives, ;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level]
[;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ;, if, (, !, flags, .]
[., process_closure_primitives, ;, options, ., jqueryPass, =, flags, ., process_jquery_primitives, &&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ;, if, (, !]
[=, flags, ., process_jquery_primitives, &&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ;, if, (, !, flags, ., translationsFile, ., isEmpty, (]
[., jqueryPass, =, flags, ., process_jquery_primitives, &&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ;, if, (, !, flags, ., translationsFile, .]
[;, if, (, !, flags, ., translationsFile, ., isEmpty, (, ), ), {, try, {, options, ., messageBundle, =, new]
[&&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ;, if, (, !, flags, ., translationsFile, ., isEmpty, (, ), ), {, try]
[., process_jquery_primitives, &&, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ;, if, (, !, flags, ., translationsFile, ., isEmpty, (, ), )]
[;, if, (, !, flags, ., translationsFile, ., isEmpty, (, ), ), {, try, {, options, ., messageBundle, =, new]
[==, level, ;, if, (, !, flags, ., translationsFile, ., isEmpty, (, ), ), {, try, {, options, ., messageBundle]
[., ADVANCED_OPTIMIZATIONS, ==, level, ;, if, (, !, flags, ., translationsFile, ., isEmpty, (, ), ), {, try, {, options]
[;, if, (, !, flags, ., translationsFile, ., isEmpty, (, ), ), {, try, {, options, ., messageBundle, =, new]
[), {, try, {, options, ., messageBundle, =, new, XtbMessageBundle, (, new, FileInputStream, (, flags, ., translationsFile, ), ,, flags]
[), {, try, {, options, ., messageBundle, =, new, XtbMessageBundle, (, new, FileInputStream, (, flags, ., translationsFile, ), ,, flags]
[., isEmpty, (, ), ), {, try, {, options, ., messageBundle, =, new, XtbMessageBundle, (, new, FileInputStream, (, flags, .]
[., translationsFile, ., isEmpty, (, ), ), {, try, {, options, ., messageBundle, =, new, XtbMessageBundle, (, new, FileInputStream, (]
[=, new, XtbMessageBundle, (, new, FileInputStream, (, flags, ., translationsFile, ), ,, flags, ., translationsProject, ), ;, }, catch, (]
[., messageBundle, =, new, XtbMessageBundle, (, new, FileInputStream, (, flags, ., translationsFile, ), ,, flags, ., translationsProject, ), ;, }]
[;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, "Reading XTB file", ,, e, ), ;, }, }, else]
[,, flags, ., translationsProject, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, "Reading XTB file", ,, e]
[), ,, flags, ., translationsProject, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, "Reading XTB file", ,]
[., translationsFile, ), ,, flags, ., translationsProject, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (]
[), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, "Reading XTB file", ,, e, ), ;, }, }]
[., translationsProject, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, "Reading XTB file", ,, e, ), ;]
[;, }, }, else, if, (, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ), {, options, ., messageBundle, =, new, EmptyMessageBundle, (]
[,, e, ), ;, }, }, else, if, (, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ), {, options, ., messageBundle, =]
[), ;, }, }, else, if, (, CompilationLevel, ., ADVANCED_OPTIMIZATIONS, ==, level, ), {, options, ., messageBundle, =, new, EmptyMessageBundle]
[), {, options, ., messageBundle, =, new, EmptyMessageBundle, (, ), ;, }, return, options, ;, }, @, Override, protected, Compiler]
[==, level, ), {, options, ., messageBundle, =, new, EmptyMessageBundle, (, ), ;, }, return, options, ;, }, @, Override]
[., ADVANCED_OPTIMIZATIONS, ==, level, ), {, options, ., messageBundle, =, new, EmptyMessageBundle, (, ), ;, }, return, options, ;, }]
[), {, options, ., messageBundle, =, new, EmptyMessageBundle, (, ), ;, }, return, options, ;, }, @, Override, protected, Compiler]
[=, new, EmptyMessageBundle, (, ), ;, }, return, options, ;, }, @, Override, protected, Compiler, createCompiler, (, ), {, return]
[., messageBundle, =, new, EmptyMessageBundle, (, ), ;, }, return, options, ;, }, @, Override, protected, Compiler, createCompiler, (, )]
[;, }, return, options, ;, }, @, Override, protected, Compiler, createCompiler, (, ), {, return, new, Compiler, (, getErrorPrintStream, (]
[;, }, @, Override, protected, Compiler, createCompiler, (, ), {, return, new, Compiler, (, getErrorPrintStream, (, ), ), ;, }]
[;, }, @, Override, protected, List, <, SourceFile, >, createExterns, (, ), throws, FlagUsageException, ,, IOException, {, List, <, SourceFile]
[), ;, }, @, Override, protected, List, <, SourceFile, >, createExterns, (, ), throws, FlagUsageException, ,, IOException, {, List, <]
[;, if, (, flags, ., use_only_custom_externs, ||, isInTestMode, (, ), ), {, return, externs, ;, }, else, {, List, <]
[., createExterns, (, ), ;, if, (, flags, ., use_only_custom_externs, ||, isInTestMode, (, ), ), {, return, externs, ;, }]
[), {, return, externs, ;, }, else, {, List, <, SourceFile, >, defaultExterns, =, getDefaultExterns, (, ), ;, defaultExterns, .]
[||, isInTestMode, (, ), ), {, return, externs, ;, }, else, {, List, <, SourceFile, >, defaultExterns, =, getDefaultExterns, (]
[., use_only_custom_externs, ||, isInTestMode, (, ), ), {, return, externs, ;, }, else, {, List, <, SourceFile, >, defaultExterns, =]
[), {, return, externs, ;, }, else, {, List, <, SourceFile, >, defaultExterns, =, getDefaultExterns, (, ), ;, defaultExterns, .]
[;, }, else, {, List, <, SourceFile, >, defaultExterns, =, getDefaultExterns, (, ), ;, defaultExterns, ., addAll, (, externs, )]
[;, defaultExterns, ., addAll, (, externs, ), ;, return, defaultExterns, ;, }, }, private, static, final, List, <, String, >]
[;, return, defaultExterns, ;, }, }, private, static, final, List, <, String, >, DEFAULT_EXTERNS_NAMES, =, ImmutableList, ., of, (, "es3.js"]
[., addAll, (, externs, ), ;, return, defaultExterns, ;, }, }, private, static, final, List, <, String, >, DEFAULT_EXTERNS_NAMES, =]
[), ;, return, defaultExterns, ;, }, }, private, static, final, List, <, String, >, DEFAULT_EXTERNS_NAMES, =, ImmutableList, ., of, (]
[;, }, }, private, static, final, List, <, String, >, DEFAULT_EXTERNS_NAMES, =, ImmutableList, ., of, (, "es3.js", ,, "es5.js", ,]
[;, public, static, List, <, SourceFile, >, getDefaultExterns, (, ), throws, IOException, {, InputStream, input, =, CommandLineRunner, ., class, .]
[., of, (, "es3.js", ,, "es5.js", ,, "w3c_event.js", ,, "w3c_event3.js", ,, "gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js"]
[,, "es5.js", ,, "w3c_event.js", ,, "w3c_event3.js", ,, "gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js"]
[,, "w3c_event.js", ,, "w3c_event3.js", ,, "gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js"]
[,, "w3c_event3.js", ,, "gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js"]
[,, "gecko_event.js", ,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js"]
[,, "ie_event.js", ,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js"]
[,, "webkit_event.js", ,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js"]
[,, "w3c_dom1.js", ,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js"]
[,, "w3c_dom2.js", ,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js"]
[,, "w3c_dom3.js", ,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js"]
[,, "gecko_dom.js", ,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js"]
[,, "ie_dom.js", ,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js"]
[,, "webkit_dom.js", ,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js"]
[,, "w3c_css.js", ,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js"]
[,, "gecko_css.js", ,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js"]
[,, "ie_css.js", ,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js"]
[,, "webkit_css.js", ,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js"]
[,, "google.js", ,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js"]
[,, "deprecated.js", ,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js"]
[,, "fileapi.js", ,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js"]
[,, "flash.js", ,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js"]
[,, "gears_symbols.js", ,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js"]
[,, "gears_types.js", ,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js"]
[,, "gecko_xml.js", ,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js"]
[,, "html5.js", ,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js"]
[,, "ie_vml.js", ,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js"]
[,, "iphone.js", ,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,, "w3c_selectors.js"]
[,, "webstorage.js", ,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,, "w3c_selectors.js", ,, "w3c_xml.js"]
[,, "w3c_anim_timing.js", ,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,, "w3c_selectors.js", ,, "w3c_xml.js", ,, "window.js"]
[,, "w3c_css3d.js", ,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,, "w3c_selectors.js", ,, "w3c_xml.js", ,, "window.js", ,, "webkit_notifications.js"]
[,, "w3c_elementtraversal.js", ,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,, "w3c_selectors.js", ,, "w3c_xml.js", ,, "window.js", ,, "webkit_notifications.js", ,, "webgl.js"]
[,, "w3c_geolocation.js", ,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,, "w3c_selectors.js", ,, "w3c_xml.js", ,, "window.js", ,, "webkit_notifications.js", ,, "webgl.js", ), ;]
[,, "w3c_indexeddb.js", ,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,, "w3c_selectors.js", ,, "w3c_xml.js", ,, "window.js", ,, "webkit_notifications.js", ,, "webgl.js", ), ;, public, static]
[,, "w3c_navigation_timing.js", ,, "w3c_range.js", ,, "w3c_selectors.js", ,, "w3c_xml.js", ,, "window.js", ,, "webkit_notifications.js", ,, "webgl.js", ), ;, public, static, List, <]
[,, "w3c_range.js", ,, "w3c_selectors.js", ,, "w3c_xml.js", ,, "window.js", ,, "webkit_notifications.js", ,, "webgl.js", ), ;, public, static, List, <, SourceFile, >]
[,, "w3c_selectors.js", ,, "w3c_xml.js", ,, "window.js", ,, "webkit_notifications.js", ,, "webgl.js", ), ;, public, static, List, <, SourceFile, >, getDefaultExterns, (]
[,, "w3c_xml.js", ,, "window.js", ,, "webkit_notifications.js", ,, "webgl.js", ), ;, public, static, List, <, SourceFile, >, getDefaultExterns, (, ), throws]
[,, "window.js", ,, "webkit_notifications.js", ,, "webgl.js", ), ;, public, static, List, <, SourceFile, >, getDefaultExterns, (, ), throws, IOException, {]
[,, "webkit_notifications.js", ,, "webgl.js", ), ;, public, static, List, <, SourceFile, >, getDefaultExterns, (, ), throws, IOException, {, InputStream, input]
[,, "webgl.js", ), ;, public, static, List, <, SourceFile, >, getDefaultExterns, (, ), throws, IOException, {, InputStream, input, =, CommandLineRunner]
[), ;, public, static, List, <, SourceFile, >, getDefaultExterns, (, ), throws, IOException, {, InputStream, input, =, CommandLineRunner, ., class]
[;, if, (, input, ==, null, ), {, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "externs.zip", ), ;, }]
[., getResourceAsStream, (, "/externs.zip", ), ;, if, (, input, ==, null, ), {, input, =, CommandLineRunner, ., class, ., getResourceAsStream]
[), ;, if, (, input, ==, null, ), {, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "externs.zip", ), ;]
[), {, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "externs.zip", ), ;, }, Preconditions, ., checkNotNull, (, input, )]
[==, null, ), {, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "externs.zip", ), ;, }, Preconditions, ., checkNotNull, (]
[), {, input, =, CommandLineRunner, ., class, ., getResourceAsStream, (, "externs.zip", ), ;, }, Preconditions, ., checkNotNull, (, input, )]
[=, CommandLineRunner, ., class, ., getResourceAsStream, (, "externs.zip", ), ;, }, Preconditions, ., checkNotNull, (, input, ), ;, ZipInputStream, zip]
[;, }, Preconditions, ., checkNotNull, (, input, ), ;, ZipInputStream, zip, =, new, ZipInputStream, (, input, ), ;, Map, <]
[., getResourceAsStream, (, "externs.zip", ), ;, }, Preconditions, ., checkNotNull, (, input, ), ;, ZipInputStream, zip, =, new, ZipInputStream, (]
[), ;, }, Preconditions, ., checkNotNull, (, input, ), ;, ZipInputStream, zip, =, new, ZipInputStream, (, input, ), ;, Map]
[;, ZipInputStream, zip, =, new, ZipInputStream, (, input, ), ;, Map, <, String, ,, SourceFile, >, externsMap, =, Maps, .]
[., checkNotNull, (, input, ), ;, ZipInputStream, zip, =, new, ZipInputStream, (, input, ), ;, Map, <, String, ,, SourceFile]
[), ;, ZipInputStream, zip, =, new, ZipInputStream, (, input, ), ;, Map, <, String, ,, SourceFile, >, externsMap, =, Maps]
[;, Map, <, String, ,, SourceFile, >, externsMap, =, Maps, ., newHashMap, (, ), ;, for, (, ZipEntry, entry, =]
[), ;, Map, <, String, ,, SourceFile, >, externsMap, =, Maps, ., newHashMap, (, ), ;, for, (, ZipEntry, entry]
[;, for, (, ZipEntry, entry, =, null, ;, (, entry, =, zip, ., getNextEntry, (, ), ), !=, null, ;]
[., newHashMap, (, ), ;, for, (, ZipEntry, entry, =, null, ;, (, entry, =, zip, ., getNextEntry, (, )]
[;, (, entry, =, zip, ., getNextEntry, (, ), ), !=, null, ;, ), {, BufferedInputStream, entryStream, =, new, BufferedInputStream]
[;, ), {, BufferedInputStream, entryStream, =, new, BufferedInputStream, (, new, LimitInputStream, (, zip, ,, entry, ., getSize, (, ), )]
[!=, null, ;, ), {, BufferedInputStream, entryStream, =, new, BufferedInputStream, (, new, LimitInputStream, (, zip, ,, entry, ., getSize, (]
[=, zip, ., getNextEntry, (, ), ), !=, null, ;, ), {, BufferedInputStream, entryStream, =, new, BufferedInputStream, (, new, LimitInputStream]
[), !=, null, ;, ), {, BufferedInputStream, entryStream, =, new, BufferedInputStream, (, new, LimitInputStream, (, zip, ,, entry, ., getSize]
[., getNextEntry, (, ), ), !=, null, ;, ), {, BufferedInputStream, entryStream, =, new, BufferedInputStream, (, new, LimitInputStream, (, zip]
[;, ), {, BufferedInputStream, entryStream, =, new, BufferedInputStream, (, new, LimitInputStream, (, zip, ,, entry, ., getSize, (, ), )]
[;, externsMap, ., put, (, entry, ., getName, (, ), ,, SourceFile, ., fromInputStream, (, "externs.zip//", +, entry, ., getName]
[), ;, externsMap, ., put, (, entry, ., getName, (, ), ,, SourceFile, ., fromInputStream, (, "externs.zip//", +, entry, .]
[,, entry, ., getSize, (, ), ), ), ;, externsMap, ., put, (, entry, ., getName, (, ), ,, SourceFile]
[), ), ;, externsMap, ., put, (, entry, ., getName, (, ), ,, SourceFile, ., fromInputStream, (, "externs.zip//", +, entry]
[., getSize, (, ), ), ), ;, externsMap, ., put, (, entry, ., getName, (, ), ,, SourceFile, ., fromInputStream]
[;, }, Preconditions, ., checkState, (, externsMap, ., keySet, (, ), ., equals, (, Sets, ., newHashSet, (, DEFAULT_EXTERNS_NAMES, )]
[., put, (, entry, ., getName, (, ), ,, SourceFile, ., fromInputStream, (, "externs.zip//", +, entry, ., getName, (, )]
[,, SourceFile, ., fromInputStream, (, "externs.zip//", +, entry, ., getName, (, ), ,, entryStream, ), ), ;, }, Preconditions, .]
[., getName, (, ), ,, SourceFile, ., fromInputStream, (, "externs.zip//", +, entry, ., getName, (, ), ,, entryStream, ), )]
[), ;, }, Preconditions, ., checkState, (, externsMap, ., keySet, (, ), ., equals, (, Sets, ., newHashSet, (, DEFAULT_EXTERNS_NAMES]
[., fromInputStream, (, "externs.zip//", +, entry, ., getName, (, ), ,, entryStream, ), ), ;, }, Preconditions, ., checkState, (]
[,, entryStream, ), ), ;, }, Preconditions, ., checkState, (, externsMap, ., keySet, (, ), ., equals, (, Sets, .]
[+, entry, ., getName, (, ), ,, entryStream, ), ), ;, }, Preconditions, ., checkState, (, externsMap, ., keySet, (]
[,, entryStream, ), ), ;, }, Preconditions, ., checkState, (, externsMap, ., keySet, (, ), ., equals, (, Sets, .]
[., getName, (, ), ,, entryStream, ), ), ;, }, Preconditions, ., checkState, (, externsMap, ., keySet, (, ), .]
[), ), ;, }, Preconditions, ., checkState, (, externsMap, ., keySet, (, ), ., equals, (, Sets, ., newHashSet, (]
[;, List, <, SourceFile, >, externs, =, Lists, ., newArrayList, (, ), ;, for, (, String, key, :, DEFAULT_EXTERNS_NAMES, )]
[., checkState, (, externsMap, ., keySet, (, ), ., equals, (, Sets, ., newHashSet, (, DEFAULT_EXTERNS_NAMES, ), ), ,, "Externs zip must match our hard-coded list of externs."]
[,, "Externs zip must match our hard-coded list of externs.", ), ;, List, <, SourceFile, >, externs, =, Lists, ., newArrayList, (, ), ;, for, (, String, key]
[., equals, (, Sets, ., newHashSet, (, DEFAULT_EXTERNS_NAMES, ), ), ,, "Externs zip must match our hard-coded list of externs.", ), ;, List, <, SourceFile, >, externs, =]
[., keySet, (, ), ., equals, (, Sets, ., newHashSet, (, DEFAULT_EXTERNS_NAMES, ), ), ,, "Externs zip must match our hard-coded list of externs.", ), ;, List, <]
[), ,, "Externs zip must match our hard-coded list of externs.", ), ;, List, <, SourceFile, >, externs, =, Lists, ., newArrayList, (, ), ;, for, (, String]
[., newHashSet, (, DEFAULT_EXTERNS_NAMES, ), ), ,, "Externs zip must match our hard-coded list of externs.", ), ;, List, <, SourceFile, >, externs, =, Lists, ., newArrayList, (]
[), ), ,, "Externs zip must match our hard-coded list of externs.", ), ;, List, <, SourceFile, >, externs, =, Lists, ., newArrayList, (, ), ;, for, (]
[), ;, List, <, SourceFile, >, externs, =, Lists, ., newArrayList, (, ), ;, for, (, String, key, :, DEFAULT_EXTERNS_NAMES]
[;, for, (, String, key, :, DEFAULT_EXTERNS_NAMES, ), {, externs, ., add, (, externsMap, ., get, (, key, ), )]
[., newArrayList, (, ), ;, for, (, String, key, :, DEFAULT_EXTERNS_NAMES, ), {, externs, ., add, (, externsMap, ., get]
[), {, externs, ., add, (, externsMap, ., get, (, key, ), ), ;, }, return, externs, ;, }, public]
[;, }, return, externs, ;, }, public, boolean, shouldRunCompiler, (, ), {, return, this, ., isConfigValid, ;, }, public, static]
[., add, (, externsMap, ., get, (, key, ), ), ;, }, return, externs, ;, }, public, boolean, shouldRunCompiler, (]
[), ;, }, return, externs, ;, }, public, boolean, shouldRunCompiler, (, ), {, return, this, ., isConfigValid, ;, }, public]
[., get, (, key, ), ), ;, }, return, externs, ;, }, public, boolean, shouldRunCompiler, (, ), {, return, this]
[), ), ;, }, return, externs, ;, }, public, boolean, shouldRunCompiler, (, ), {, return, this, ., isConfigValid, ;, }]
[;, }, public, boolean, shouldRunCompiler, (, ), {, return, this, ., isConfigValid, ;, }, public, static, void, main, (, String]
[;, }, public, static, void, main, (, String, [, ], args, ), {, CommandLineRunner, runner, =, new, CommandLineRunner, (, args]
[., isConfigValid, ;, }, public, static, void, main, (, String, [, ], args, ), {, CommandLineRunner, runner, =, new, CommandLineRunner]
[;, if, (, runner, ., shouldRunCompiler, (, ), ), {, runner, ., run, (, ), ;, }, else, {, System]
[), ;, if, (, runner, ., shouldRunCompiler, (, ), ), {, runner, ., run, (, ), ;, }, else, {]
[), {, runner, ., run, (, ), ;, }, else, {, System, ., exit, (, -, 1, ), ;, }]
[., shouldRunCompiler, (, ), ), {, runner, ., run, (, ), ;, }, else, {, System, ., exit, (, -]
[;, }, else, {, System, ., exit, (, -, 1, ), ;, }, }, }]
[., run, (, ), ;, }, else, {, System, ., exit, (, -, 1, ), ;, }, }, }]
[;, }, }, }]
[., exit, (, -, 1, ), ;, }, }, }]
[), ;, }, }, }]
[), ;, }, }, }]
