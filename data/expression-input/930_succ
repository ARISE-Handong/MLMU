[), ;, this, ., clusterer, =, clusterer, ;, this, ., numTrials, =, numTrials, ;, }, public, KMeansPlusPlusClusterer, <, T, >]
[., getDistanceMeasure, (, ), ), ;, this, ., clusterer, =, clusterer, ;, this, ., numTrials, =, numTrials, ;, }, public]
[=, clusterer, ;, this, ., numTrials, =, numTrials, ;, }, public, KMeansPlusPlusClusterer, <, T, >, getClusterer, (, ), {, return]
[., clusterer, =, clusterer, ;, this, ., numTrials, =, numTrials, ;, }, public, KMeansPlusPlusClusterer, <, T, >, getClusterer, (, )]
[;, this, ., numTrials, =, numTrials, ;, }, public, KMeansPlusPlusClusterer, <, T, >, getClusterer, (, ), {, return, clusterer, ;]
[=, numTrials, ;, }, public, KMeansPlusPlusClusterer, <, T, >, getClusterer, (, ), {, return, clusterer, ;, }, public, int, getNumTrials]
[., numTrials, =, numTrials, ;, }, public, KMeansPlusPlusClusterer, <, T, >, getClusterer, (, ), {, return, clusterer, ;, }, public]
[;, }, public, KMeansPlusPlusClusterer, <, T, >, getClusterer, (, ), {, return, clusterer, ;, }, public, int, getNumTrials, (, )]
[;, }, public, int, getNumTrials, (, ), {, return, numTrials, ;, }, @, Override, public, List, <, CentroidCluster, <, T]
[;, }, @, Override, public, List, <, CentroidCluster, <, T, >, >, cluster, (, final, Collection, <, T, >, points]
[;, double, bestVarianceSum, =, Double, ., POSITIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <, numTrials, ;, ++]
[;, for, (, int, i, =, 0, ;, i, <, numTrials, ;, ++, i, ), {, List, <, CentroidCluster, <]
[., POSITIVE_INFINITY, ;, for, (, int, i, =, 0, ;, i, <, numTrials, ;, ++, i, ), {, List, <]
[;, i, <, numTrials, ;, ++, i, ), {, List, <, CentroidCluster, <, T, >, >, clusters, =, clusterer, .]
[;, ++, i, ), {, List, <, CentroidCluster, <, T, >, >, clusters, =, clusterer, ., cluster, (, points, )]
[<, numTrials, ;, ++, i, ), {, List, <, CentroidCluster, <, T, >, >, clusters, =, clusterer, ., cluster, (]
[;, ++, i, ), {, List, <, CentroidCluster, <, T, >, >, clusters, =, clusterer, ., cluster, (, points, )]
[), {, List, <, CentroidCluster, <, T, >, >, clusters, =, clusterer, ., cluster, (, points, ), ;, double, varianceSum]
[), {, List, <, CentroidCluster, <, T, >, >, clusters, =, clusterer, ., cluster, (, points, ), ;, double, varianceSum]
[;, double, varianceSum, =, 0.0, ;, for, (, final, CentroidCluster, <, T, >, cluster, :, clusters, ), {, if, (]
[., cluster, (, points, ), ;, double, varianceSum, =, 0.0, ;, for, (, final, CentroidCluster, <, T, >, cluster, :]
[), ;, double, varianceSum, =, 0.0, ;, for, (, final, CentroidCluster, <, T, >, cluster, :, clusters, ), {, if]
[;, for, (, final, CentroidCluster, <, T, >, cluster, :, clusters, ), {, if, (, !, cluster, ., getPoints, (]
[), {, if, (, !, cluster, ., getPoints, (, ), ., isEmpty, (, ), ), {, final, Clusterable, center, =]
[), {, final, Clusterable, center, =, cluster, ., getCenter, (, ), ;, final, Variance, stat, =, new, Variance, (, )]
[), {, final, Clusterable, center, =, cluster, ., getCenter, (, ), ;, final, Variance, stat, =, new, Variance, (, )]
[., isEmpty, (, ), ), {, final, Clusterable, center, =, cluster, ., getCenter, (, ), ;, final, Variance, stat, =]
[., getPoints, (, ), ., isEmpty, (, ), ), {, final, Clusterable, center, =, cluster, ., getCenter, (, ), ;]
[;, final, Variance, stat, =, new, Variance, (, ), ;, for, (, final, T, point, :, cluster, ., getPoints, (]
[., getCenter, (, ), ;, final, Variance, stat, =, new, Variance, (, ), ;, for, (, final, T, point, :]
[;, for, (, final, T, point, :, cluster, ., getPoints, (, ), ), {, stat, ., increment, (, distance, (]
[), {, stat, ., increment, (, distance, (, point, ,, center, ), ), ;, }, varianceSum, +=, stat, ., getResult]
[., getPoints, (, ), ), {, stat, ., increment, (, distance, (, point, ,, center, ), ), ;, }, varianceSum]
[;, }, varianceSum, +=, stat, ., getResult, (, ), ;, }, }, if, (, varianceSum, <=, bestVarianceSum, ), {, best]
[., increment, (, distance, (, point, ,, center, ), ), ;, }, varianceSum, +=, stat, ., getResult, (, ), ;]
[), ;, }, varianceSum, +=, stat, ., getResult, (, ), ;, }, }, if, (, varianceSum, <=, bestVarianceSum, ), {]
[,, center, ), ), ;, }, varianceSum, +=, stat, ., getResult, (, ), ;, }, }, if, (, varianceSum, <=]
[), ), ;, }, varianceSum, +=, stat, ., getResult, (, ), ;, }, }, if, (, varianceSum, <=, bestVarianceSum, )]
[+=, stat, ., getResult, (, ), ;, }, }, if, (, varianceSum, <=, bestVarianceSum, ), {, best, =, clusters, ;]
[;, }, }, if, (, varianceSum, <=, bestVarianceSum, ), {, best, =, clusters, ;, bestVarianceSum, =, varianceSum, ;, }, }]
[., getResult, (, ), ;, }, }, if, (, varianceSum, <=, bestVarianceSum, ), {, best, =, clusters, ;, bestVarianceSum, =]
[), {, best, =, clusters, ;, bestVarianceSum, =, varianceSum, ;, }, }, return, best, ;, }, }]
[<=, bestVarianceSum, ), {, best, =, clusters, ;, bestVarianceSum, =, varianceSum, ;, }, }, return, best, ;, }, }]
[), {, best, =, clusters, ;, bestVarianceSum, =, varianceSum, ;, }, }, return, best, ;, }, }]
[=, clusters, ;, bestVarianceSum, =, varianceSum, ;, }, }, return, best, ;, }, }]
[;, bestVarianceSum, =, varianceSum, ;, }, }, return, best, ;, }, }]
[=, varianceSum, ;, }, }, return, best, ;, }, }]
[;, }, }, return, best, ;, }, }]
[;, }, }]
