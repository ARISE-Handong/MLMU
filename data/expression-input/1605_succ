[=, n, ;, }, @, Override, public, int, getColumnDimension, (, ), {, return, n, ;, }, public, long, getEntry, (]
[., n, =, n, ;, }, @, Override, public, int, getColumnDimension, (, ), {, return, n, ;, }, public, long]
[;, }, @, Override, public, int, getColumnDimension, (, ), {, return, n, ;, }, public, long, getEntry, (, final, int]
[;, }, public, long, getEntry, (, final, int, i, ,, final, int, j, ), {, long, val, =, i, +]
[;, long, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, n, +, i, ,, n, -, j, -, 1, ), ;, val]
[+, 1, ;, long, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, n, +, i, ,, n, -, j, -, 1, )]
[+, j, +, 1, ;, long, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, n, +, i, ,, n, -, j, -]
[+, 1, ;, long, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, n, +, i, ,, n, -, j, -, 1, )]
[;, long, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, n, +, i, ,, n, -, j, -, 1, ), ;, val]
[;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, n, +]
[., binomialCoefficient, (, n, +, i, ,, n, -, j, -, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (]
[,, n, -, j, -, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux]
[+, i, ,, n, -, j, -, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, )]
[,, n, -, j, -, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux]
[), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, n]
[-, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient]
[-, j, -, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils]
[-, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient]
[), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, n]
[=, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, n, +, j, ,]
[;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, n, +, j, ,, n, -, i, -, 1, ), ;, val, =]
[., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, n, +, j, ,, n, -]
[,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, n, +, j, ,, n, -, i, -, 1, )]
[), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, n, +, j, ,, n, -, i, -, 1, ), ;, val]
[=, CombinatoricsUtils, ., binomialCoefficient, (, n, +, j, ,, n, -, i, -, 1, ), ;, val, =, ArithmeticUtils, .]
[;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, i, +]
[., binomialCoefficient, (, n, +, j, ,, n, -, i, -, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (]
[,, n, -, i, -, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux]
[+, j, ,, n, -, i, -, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, )]
[,, n, -, i, -, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux]
[), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, i]
[-, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient]
[-, i, -, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils]
[-, 1, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient]
[), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, i]
[=, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, i, +, j, ,]
[;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, i, +, j, ,, i, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (]
[., mulAndCheck, (, val, ,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, i, +, j, ,, i, )]
[,, aux, ), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, i, +, j, ,, i, ), ;, val, =, ArithmeticUtils]
[), ;, aux, =, CombinatoricsUtils, ., binomialCoefficient, (, i, +, j, ,, i, ), ;, val, =, ArithmeticUtils, ., mulAndCheck]
[=, CombinatoricsUtils, ., binomialCoefficient, (, i, +, j, ,, i, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,]
[;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,]
[., binomialCoefficient, (, i, +, j, ,, i, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, )]
[,, i, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, val, =, ArithmeticUtils, ., mulAndCheck]
[+, j, ,, i, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, val, =, ArithmeticUtils]
[,, i, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, val, =, ArithmeticUtils, ., mulAndCheck]
[), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val]
[=, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, )]
[;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, return, (, (, i, +, j, ), &]
[., mulAndCheck, (, val, ,, aux, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, return]
[,, aux, ), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, return, (, (, i, +]
[), ;, val, =, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, return, (, (, i, +, j, )]
[=, ArithmeticUtils, ., mulAndCheck, (, val, ,, aux, ), ;, return, (, (, i, +, j, ), &, 1, )]
[;, return, (, (, i, +, j, ), &, 1, ), ==, 0, ?, val, :, -, val, ;, }]
[., mulAndCheck, (, val, ,, aux, ), ;, return, (, (, i, +, j, ), &, 1, ), ==, 0]
[,, aux, ), ;, return, (, (, i, +, j, ), &, 1, ), ==, 0, ?, val, :, -]
[), ;, return, (, (, i, +, j, ), &, 1, ), ==, 0, ?, val, :, -, val, ;]
[;, }, @, Override, public, int, getRowDimension, (, ), {, return, n, ;, }, @, Override, public, RealVector, operate, (]
[?, val, :, -, val, ;, }, @, Override, public, int, getRowDimension, (, ), {, return, n, ;, }, @]
[==, 0, ?, val, :, -, val, ;, }, @, Override, public, int, getRowDimension, (, ), {, return, n, ;]
[), ==, 0, ?, val, :, -, val, ;, }, @, Override, public, int, getRowDimension, (, ), {, return, n]
[&, 1, ), ==, 0, ?, val, :, -, val, ;, }, @, Override, public, int, getRowDimension, (, ), {]
[), &, 1, ), ==, 0, ?, val, :, -, val, ;, }, @, Override, public, int, getRowDimension, (, )]
[+, j, ), &, 1, ), ==, 0, ?, val, :, -, val, ;, }, @, Override, public, int, getRowDimension]
[), &, 1, ), ==, 0, ?, val, :, -, val, ;, }, @, Override, public, int, getRowDimension, (, )]
[), ==, 0, ?, val, :, -, val, ;, }, @, Override, public, int, getRowDimension, (, ), {, return, n]
[?, val, :, -, val, ;, }, @, Override, public, int, getRowDimension, (, ), {, return, n, ;, }, @]
[:, -, val, ;, }, @, Override, public, int, getRowDimension, (, ), {, return, n, ;, }, @, Override, public]
[;, }, @, Override, public, int, getRowDimension, (, ), {, return, n, ;, }, @, Override, public, RealVector, operate, (]
[;, }, @, Override, public, int, getRowDimension, (, ), {, return, n, ;, }, @, Override, public, RealVector, operate, (]
[;, }, @, Override, public, RealVector, operate, (, final, RealVector, x, ), {, if, (, x, ., getDimension, (, )]
[), {, throw, new, DimensionMismatchException, (, x, ., getDimension, (, ), ,, n, ), ;, }, final, double, [, ]]
[!=, n, ), {, throw, new, DimensionMismatchException, (, x, ., getDimension, (, ), ,, n, ), ;, }, final, double]
[., getDimension, (, ), !=, n, ), {, throw, new, DimensionMismatchException, (, x, ., getDimension, (, ), ,, n, )]
[), {, throw, new, DimensionMismatchException, (, x, ., getDimension, (, ), ,, n, ), ;, }, final, double, [, ]]
[;, }, final, double, [, ], y, =, new, double, [, n, ], ;, for, (, int, i, =, 0]
[,, n, ), ;, }, final, double, [, ], y, =, new, double, [, n, ], ;, for, (, int]
[., getDimension, (, ), ,, n, ), ;, }, final, double, [, ], y, =, new, double, [, n, ]]
[), ;, }, final, double, [, ], y, =, new, double, [, n, ], ;, for, (, int, i, =]
[;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, ), {, double, pos, =, 0.]
[], ;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, ), {, double, pos, =]
[;, i, <, n, ;, i, ++, ), {, double, pos, =, 0., ;, double, neg, =, 0., ;, for]
[;, i, ++, ), {, double, pos, =, 0., ;, double, neg, =, 0., ;, for, (, int, j, =]
[<, n, ;, i, ++, ), {, double, pos, =, 0., ;, double, neg, =, 0., ;, for, (, int]
[;, i, ++, ), {, double, pos, =, 0., ;, double, neg, =, 0., ;, for, (, int, j, =]
[), {, double, pos, =, 0., ;, double, neg, =, 0., ;, for, (, int, j, =, 0, ;, j]
[++, ), {, double, pos, =, 0., ;, double, neg, =, 0., ;, for, (, int, j, =, 0, ;]
[;, double, neg, =, 0., ;, for, (, int, j, =, 0, ;, j, <, n, ;, j, ++, )]
[;, for, (, int, j, =, 0, ;, j, <, n, ;, j, ++, ), {, final, double, xj, =]
[;, j, <, n, ;, j, ++, ), {, final, double, xj, =, x, ., getEntry, (, j, ), ;]
[;, j, ++, ), {, final, double, xj, =, x, ., getEntry, (, j, ), ;, final, long, coeff, =]
[<, n, ;, j, ++, ), {, final, double, xj, =, x, ., getEntry, (, j, ), ;, final, long]
[;, j, ++, ), {, final, double, xj, =, x, ., getEntry, (, j, ), ;, final, long, coeff, =]
[), {, final, double, xj, =, x, ., getEntry, (, j, ), ;, final, long, coeff, =, getEntry, (, i]
[++, ), {, final, double, xj, =, x, ., getEntry, (, j, ), ;, final, long, coeff, =, getEntry, (]
[;, final, long, coeff, =, getEntry, (, i, ,, j, ), ;, final, double, daux, =, coeff, *, xj, ;]
[., getEntry, (, j, ), ;, final, long, coeff, =, getEntry, (, i, ,, j, ), ;, final, double, daux]
[), ;, final, long, coeff, =, getEntry, (, i, ,, j, ), ;, final, double, daux, =, coeff, *, xj]
[;, final, double, daux, =, coeff, *, xj, ;, if, (, daux, >, 0., ), {, pos, +=, daux, ;]
[,, j, ), ;, final, double, daux, =, coeff, *, xj, ;, if, (, daux, >, 0., ), {, pos]
[), ;, final, double, daux, =, coeff, *, xj, ;, if, (, daux, >, 0., ), {, pos, +=, daux]
[;, if, (, daux, >, 0., ), {, pos, +=, daux, ;, }, else, {, neg, +=, daux, ;, }]
[*, xj, ;, if, (, daux, >, 0., ), {, pos, +=, daux, ;, }, else, {, neg, +=, daux]
[;, if, (, daux, >, 0., ), {, pos, +=, daux, ;, }, else, {, neg, +=, daux, ;, }]
[), {, pos, +=, daux, ;, }, else, {, neg, +=, daux, ;, }, }, y, [, i, ], =]
[>, 0., ), {, pos, +=, daux, ;, }, else, {, neg, +=, daux, ;, }, }, y, [, i]
[), {, pos, +=, daux, ;, }, else, {, neg, +=, daux, ;, }, }, y, [, i, ], =]
[+=, daux, ;, }, else, {, neg, +=, daux, ;, }, }, y, [, i, ], =, pos, +, neg]
[;, }, else, {, neg, +=, daux, ;, }, }, y, [, i, ], =, pos, +, neg, ;, }]
[+=, daux, ;, }, }, y, [, i, ], =, pos, +, neg, ;, }, return, new, ArrayRealVector, (, y]
[;, }, }, y, [, i, ], =, pos, +, neg, ;, }, return, new, ArrayRealVector, (, y, ,, false]
[=, pos, +, neg, ;, }, return, new, ArrayRealVector, (, y, ,, false, ), ;, }, }]
[[, i, ], =, pos, +, neg, ;, }, return, new, ArrayRealVector, (, y, ,, false, ), ;, }, }]
[], =, pos, +, neg, ;, }, return, new, ArrayRealVector, (, y, ,, false, ), ;, }, }]
[;, }, return, new, ArrayRealVector, (, y, ,, false, ), ;, }, }]
[+, neg, ;, }, return, new, ArrayRealVector, (, y, ,, false, ), ;, }, }]
[;, }, return, new, ArrayRealVector, (, y, ,, false, ), ;, }, }]
[;, }, }]
[,, false, ), ;, }, }]
[), ;, }, }]
