[=, null, ;, n, =, 0, ;, }, public, Covariance, (, double, [, ], [, ], data, ,, boolean, biasCorrected]
[;, n, =, 0, ;, }, public, Covariance, (, double, [, ], [, ], data, ,, boolean, biasCorrected, ), throws]
[=, 0, ;, }, public, Covariance, (, double, [, ], [, ], data, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, ,]
[;, }, public, Covariance, (, double, [, ], [, ], data, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {]
[,, biasCorrected, ), ;, }, public, Covariance, (, double, [, ], [, ], data, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {]
[), ,, biasCorrected, ), ;, }, public, Covariance, (, double, [, ], [, ], data, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException]
[), ;, }, public, Covariance, (, double, [, ], [, ], data, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, this, (]
[,, true, ), ;, }, public, Covariance, (, RealMatrix, matrix, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {, checkSufficientData, (, matrix]
[), ;, }, public, Covariance, (, RealMatrix, matrix, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {, checkSufficientData, (, matrix, ), ;]
[;, n, =, matrix, ., getRowDimension, (, ), ;, covarianceMatrix, =, computeCovarianceMatrix, (, matrix, ,, biasCorrected, ), ;, }, public]
[), ;, n, =, matrix, ., getRowDimension, (, ), ;, covarianceMatrix, =, computeCovarianceMatrix, (, matrix, ,, biasCorrected, ), ;, }]
[=, matrix, ., getRowDimension, (, ), ;, covarianceMatrix, =, computeCovarianceMatrix, (, matrix, ,, biasCorrected, ), ;, }, public, Covariance, (]
[;, covarianceMatrix, =, computeCovarianceMatrix, (, matrix, ,, biasCorrected, ), ;, }, public, Covariance, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {]
[., getRowDimension, (, ), ;, covarianceMatrix, =, computeCovarianceMatrix, (, matrix, ,, biasCorrected, ), ;, }, public, Covariance, (, RealMatrix, matrix]
[=, computeCovarianceMatrix, (, matrix, ,, biasCorrected, ), ;, }, public, Covariance, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, this, (]
[;, }, public, Covariance, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, this, (, matrix, ,, true, ), ;, }, public]
[,, biasCorrected, ), ;, }, public, Covariance, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, this, (, matrix, ,, true, )]
[), ;, }, public, Covariance, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, this, (, matrix, ,, true, ), ;, }]
[,, true, ), ;, }, public, RealMatrix, getCovarianceMatrix, (, ), {, return, covarianceMatrix, ;, }, public, int, getN, (, )]
[), ;, }, public, RealMatrix, getCovarianceMatrix, (, ), {, return, covarianceMatrix, ;, }, public, int, getN, (, ), {, return]
[;, }, public, int, getN, (, ), {, return, n, ;, }, protected, RealMatrix, computeCovarianceMatrix, (, RealMatrix, matrix, ,, boolean]
[;, }, protected, RealMatrix, computeCovarianceMatrix, (, RealMatrix, matrix, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, {, int, dimension, =, matrix, .]
[;, Variance, variance, =, new, Variance, (, biasCorrected, ), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, dimension, ,, dimension, )]
[., getColumnDimension, (, ), ;, Variance, variance, =, new, Variance, (, biasCorrected, ), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (]
[;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, dimension, ,, dimension, ), ;, for, (, int, i, =, 0, ;, i]
[), ;, RealMatrix, outMatrix, =, new, BlockRealMatrix, (, dimension, ,, dimension, ), ;, for, (, int, i, =, 0, ;]
[;, for, (, int, i, =, 0, ;, i, <, dimension, ;, i, ++, ), {, for, (, int, j]
[,, dimension, ), ;, for, (, int, i, =, 0, ;, i, <, dimension, ;, i, ++, ), {, for]
[), ;, for, (, int, i, =, 0, ;, i, <, dimension, ;, i, ++, ), {, for, (, int]
[;, i, <, dimension, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;]
[;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {]
[<, dimension, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++]
[;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {]
[), {, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, cov, =]
[++, ), {, for, (, int, j, =, 0, ;, j, <, i, ;, j, ++, ), {, double, cov]
[;, j, <, i, ;, j, ++, ), {, double, cov, =, covariance, (, matrix, ., getColumn, (, i, )]
[;, j, ++, ), {, double, cov, =, covariance, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn]
[<, i, ;, j, ++, ), {, double, cov, =, covariance, (, matrix, ., getColumn, (, i, ), ,, matrix]
[;, j, ++, ), {, double, cov, =, covariance, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn]
[), {, double, cov, =, covariance, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn, (, j, )]
[++, ), {, double, cov, =, covariance, (, matrix, ., getColumn, (, i, ), ,, matrix, ., getColumn, (, j]
[;, outMatrix, ., setEntry, (, i, ,, j, ,, cov, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,]
[,, matrix, ., getColumn, (, j, ), ,, biasCorrected, ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, cov]
[., getColumn, (, i, ), ,, matrix, ., getColumn, (, j, ), ,, biasCorrected, ), ;, outMatrix, ., setEntry, (]
[), ,, matrix, ., getColumn, (, j, ), ,, biasCorrected, ), ;, outMatrix, ., setEntry, (, i, ,, j, ,]
[,, biasCorrected, ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, cov, ), ;, outMatrix, ., setEntry, (, j]
[., getColumn, (, j, ), ,, biasCorrected, ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, cov, ), ;]
[), ,, biasCorrected, ), ;, outMatrix, ., setEntry, (, i, ,, j, ,, cov, ), ;, outMatrix, ., setEntry, (]
[), ;, outMatrix, ., setEntry, (, i, ,, j, ,, cov, ), ;, outMatrix, ., setEntry, (, j, ,, i]
[;, outMatrix, ., setEntry, (, j, ,, i, ,, cov, ), ;, }, outMatrix, ., setEntry, (, i, ,, i]
[., setEntry, (, i, ,, j, ,, cov, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, cov, )]
[,, j, ,, cov, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, cov, ), ;, }, outMatrix, .]
[,, cov, ), ;, outMatrix, ., setEntry, (, j, ,, i, ,, cov, ), ;, }, outMatrix, ., setEntry, (]
[), ;, outMatrix, ., setEntry, (, j, ,, i, ,, cov, ), ;, }, outMatrix, ., setEntry, (, i, ,]
[;, }, outMatrix, ., setEntry, (, i, ,, i, ,, variance, ., evaluate, (, matrix, ., getColumn, (, i, )]
[., setEntry, (, j, ,, i, ,, cov, ), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,, variance]
[,, i, ,, cov, ), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,, variance, ., evaluate, (, matrix]
[,, cov, ), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,, variance, ., evaluate, (, matrix, ., getColumn]
[), ;, }, outMatrix, ., setEntry, (, i, ,, i, ,, variance, ., evaluate, (, matrix, ., getColumn, (, i]
[;, }, return, outMatrix, ;, }, protected, RealMatrix, computeCovarianceMatrix, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, return, computeCovarianceMatrix, (, matrix]
[., setEntry, (, i, ,, i, ,, variance, ., evaluate, (, matrix, ., getColumn, (, i, ), ), ), ;]
[,, i, ,, variance, ., evaluate, (, matrix, ., getColumn, (, i, ), ), ), ;, }, return, outMatrix, ;]
[,, variance, ., evaluate, (, matrix, ., getColumn, (, i, ), ), ), ;, }, return, outMatrix, ;, }, protected]
[), ;, }, return, outMatrix, ;, }, protected, RealMatrix, computeCovarianceMatrix, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, return, computeCovarianceMatrix, (]
[., evaluate, (, matrix, ., getColumn, (, i, ), ), ), ;, }, return, outMatrix, ;, }, protected, RealMatrix, computeCovarianceMatrix]
[), ), ;, }, return, outMatrix, ;, }, protected, RealMatrix, computeCovarianceMatrix, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, return, computeCovarianceMatrix]
[., getColumn, (, i, ), ), ), ;, }, return, outMatrix, ;, }, protected, RealMatrix, computeCovarianceMatrix, (, RealMatrix, matrix, )]
[), ), ), ;, }, return, outMatrix, ;, }, protected, RealMatrix, computeCovarianceMatrix, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, return]
[;, }, protected, RealMatrix, computeCovarianceMatrix, (, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, return, computeCovarianceMatrix, (, matrix, ,, true, ), ;]
[;, }, protected, RealMatrix, computeCovarianceMatrix, (, double, [, ], [, ], data, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException]
[,, true, ), ;, }, protected, RealMatrix, computeCovarianceMatrix, (, double, [, ], [, ], data, ,, boolean, biasCorrected, ), throws]
[), ;, }, protected, RealMatrix, computeCovarianceMatrix, (, double, [, ], [, ], data, ,, boolean, biasCorrected, ), throws, MathIllegalArgumentException, ,]
[;, }, protected, RealMatrix, computeCovarianceMatrix, (, double, [, ], [, ], data, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, return, computeCovarianceMatrix]
[,, biasCorrected, ), ;, }, protected, RealMatrix, computeCovarianceMatrix, (, double, [, ], [, ], data, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException]
[), ,, biasCorrected, ), ;, }, protected, RealMatrix, computeCovarianceMatrix, (, double, [, ], [, ], data, ), throws, MathIllegalArgumentException, ,]
[), ;, }, protected, RealMatrix, computeCovarianceMatrix, (, double, [, ], [, ], data, ), throws, MathIllegalArgumentException, ,, NotStrictlyPositiveException, {, return]
[;, }, public, double, covariance, (, final, double, [, ], xArray, ,, final, double, [, ], yArray, ,, boolean, biasCorrected]
[,, true, ), ;, }, public, double, covariance, (, final, double, [, ], xArray, ,, final, double, [, ], yArray]
[), ;, }, public, double, covariance, (, final, double, [, ], xArray, ,, final, double, [, ], yArray, ,, boolean]
[;, double, result, =, 0d, ;, int, length, =, xArray, ., length, ;, if, (, length, !=, yArray, ., length]
[;, int, length, =, xArray, ., length, ;, if, (, length, !=, yArray, ., length, ), {, throw, new, MathIllegalArgumentException]
[;, if, (, length, !=, yArray, ., length, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, length, ,]
[., length, ;, if, (, length, !=, yArray, ., length, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, length, ,, yArray, ., length, ), ;, }, else, if]
[!=, yArray, ., length, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, length, ,, yArray, ., length, )]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, length, ,, yArray, ., length, ), ;, }, else, if]
[., length, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., DIMENSIONS_MISMATCH_SIMPLE, ,, length, ,, yArray, ., length, ), ;, }]
[;, }, else, if, (, length, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, length, ,]
[,, length, ,, yArray, ., length, ), ;, }, else, if, (, length, <, 2, ), {, throw, new, MathIllegalArgumentException]
[., DIMENSIONS_MISMATCH_SIMPLE, ,, length, ,, yArray, ., length, ), ;, }, else, if, (, length, <, 2, ), {, throw]
[,, yArray, ., length, ), ;, }, else, if, (, length, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats]
[), ;, }, else, if, (, length, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, length]
[., length, ), ;, }, else, if, (, length, <, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, length, ,, 2, ), ;, }, else, {, double, xMean]
[<, 2, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, length, ,, 2, ), ;, }, else, {]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, length, ,, 2, ), ;, }, else, {, double, xMean]
[;, }, else, {, double, xMean, =, mean, ., evaluate, (, xArray, ), ;, double, yMean, =, mean, ., evaluate]
[,, length, ,, 2, ), ;, }, else, {, double, xMean, =, mean, ., evaluate, (, xArray, ), ;, double]
[., INSUFFICIENT_OBSERVED_POINTS_IN_SAMPLE, ,, length, ,, 2, ), ;, }, else, {, double, xMean, =, mean, ., evaluate, (, xArray, )]
[,, 2, ), ;, }, else, {, double, xMean, =, mean, ., evaluate, (, xArray, ), ;, double, yMean, =]
[), ;, }, else, {, double, xMean, =, mean, ., evaluate, (, xArray, ), ;, double, yMean, =, mean, .]
[;, double, yMean, =, mean, ., evaluate, (, yArray, ), ;, for, (, int, i, =, 0, ;, i, <]
[., evaluate, (, xArray, ), ;, double, yMean, =, mean, ., evaluate, (, yArray, ), ;, for, (, int, i]
[), ;, double, yMean, =, mean, ., evaluate, (, yArray, ), ;, for, (, int, i, =, 0, ;, i]
[;, for, (, int, i, =, 0, ;, i, <, length, ;, i, ++, ), {, double, xDev, =, xArray]
[., evaluate, (, yArray, ), ;, for, (, int, i, =, 0, ;, i, <, length, ;, i, ++, )]
[), ;, for, (, int, i, =, 0, ;, i, <, length, ;, i, ++, ), {, double, xDev, =]
[;, i, <, length, ;, i, ++, ), {, double, xDev, =, xArray, [, i, ], -, xMean, ;, double]
[;, i, ++, ), {, double, xDev, =, xArray, [, i, ], -, xMean, ;, double, yDev, =, yArray, []
[<, length, ;, i, ++, ), {, double, xDev, =, xArray, [, i, ], -, xMean, ;, double, yDev, =]
[;, i, ++, ), {, double, xDev, =, xArray, [, i, ], -, xMean, ;, double, yDev, =, yArray, []
[), {, double, xDev, =, xArray, [, i, ], -, xMean, ;, double, yDev, =, yArray, [, i, ], -]
[++, ), {, double, xDev, =, xArray, [, i, ], -, xMean, ;, double, yDev, =, yArray, [, i, ]]
[;, double, yDev, =, yArray, [, i, ], -, yMean, ;, result, +=, (, xDev, *, yDev, -, result, )]
[-, xMean, ;, double, yDev, =, yArray, [, i, ], -, yMean, ;, result, +=, (, xDev, *, yDev, -]
[[, i, ], -, xMean, ;, double, yDev, =, yArray, [, i, ], -, yMean, ;, result, +=, (, xDev]
[], -, xMean, ;, double, yDev, =, yArray, [, i, ], -, yMean, ;, result, +=, (, xDev, *, yDev]
[;, double, yDev, =, yArray, [, i, ], -, yMean, ;, result, +=, (, xDev, *, yDev, -, result, )]
[;, result, +=, (, xDev, *, yDev, -, result, ), /, (, i, +, 1, ), ;, }, }, return]
[-, yMean, ;, result, +=, (, xDev, *, yDev, -, result, ), /, (, i, +, 1, ), ;, }]
[[, i, ], -, yMean, ;, result, +=, (, xDev, *, yDev, -, result, ), /, (, i, +, 1]
[], -, yMean, ;, result, +=, (, xDev, *, yDev, -, result, ), /, (, i, +, 1, ), ;]
[;, result, +=, (, xDev, *, yDev, -, result, ), /, (, i, +, 1, ), ;, }, }, return]
[+=, (, xDev, *, yDev, -, result, ), /, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?]
[;, }, }, return, biasCorrected, ?, result, *, (, (, double, ), length, /, (, double, ), (, length, -]
[/, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?, result, *, (, (, double, ), length, /]
[), /, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?, result, *, (, (, double, ), length]
[-, result, ), /, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?, result, *, (, (, double]
[*, yDev, -, result, ), /, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?, result, *, (]
[-, result, ), /, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?, result, *, (, (, double]
[), /, (, i, +, 1, ), ;, }, }, return, biasCorrected, ?, result, *, (, (, double, ), length]
[;, }, }, return, biasCorrected, ?, result, *, (, (, double, ), length, /, (, double, ), (, length, -]
[), ;, }, }, return, biasCorrected, ?, result, *, (, (, double, ), length, /, (, double, ), (, length]
[+, 1, ), ;, }, }, return, biasCorrected, ?, result, *, (, (, double, ), length, /, (, double, )]
[), ;, }, }, return, biasCorrected, ?, result, *, (, (, double, ), length, /, (, double, ), (, length]
[;, }, public, double, covariance, (, final, double, [, ], xArray, ,, final, double, [, ], yArray, ), throws, MathIllegalArgumentException]
[?, result, *, (, (, double, ), length, /, (, double, ), (, length, -, 1, ), ), :, result]
[:, result, ;, }, public, double, covariance, (, final, double, [, ], xArray, ,, final, double, [, ], yArray, )]
[*, (, (, double, ), length, /, (, double, ), (, length, -, 1, ), ), :, result, ;, }]
[:, result, ;, }, public, double, covariance, (, final, double, [, ], xArray, ,, final, double, [, ], yArray, )]
[), :, result, ;, }, public, double, covariance, (, final, double, [, ], xArray, ,, final, double, [, ], yArray]
[/, (, double, ), (, length, -, 1, ), ), :, result, ;, }, public, double, covariance, (, final, double]
[/, (, double, ), (, length, -, 1, ), ), :, result, ;, }, public, double, covariance, (, final, double]
[), :, result, ;, }, public, double, covariance, (, final, double, [, ], xArray, ,, final, double, [, ], yArray]
[), :, result, ;, }, public, double, covariance, (, final, double, [, ], xArray, ,, final, double, [, ], yArray]
[), ), :, result, ;, }, public, double, covariance, (, final, double, [, ], xArray, ,, final, double, [, ]]
[-, 1, ), ), :, result, ;, }, public, double, covariance, (, final, double, [, ], xArray, ,, final, double]
[), ), :, result, ;, }, public, double, covariance, (, final, double, [, ], xArray, ,, final, double, [, ]]
[;, }, public, double, covariance, (, final, double, [, ], xArray, ,, final, double, [, ], yArray, ), throws, MathIllegalArgumentException]
[;, }, private, void, checkSufficientData, (, final, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, int, nRows, =, matrix, ., getRowDimension, (]
[,, yArray, ,, true, ), ;, }, private, void, checkSufficientData, (, final, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, int, nRows]
[,, true, ), ;, }, private, void, checkSufficientData, (, final, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, int, nRows, =, matrix]
[), ;, }, private, void, checkSufficientData, (, final, RealMatrix, matrix, ), throws, MathIllegalArgumentException, {, int, nRows, =, matrix, ., getRowDimension]
[;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||, nCols, <, 1, )]
[., getRowDimension, (, ), ;, int, nCols, =, matrix, ., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||]
[;, if, (, nRows, <, 2, ||, nCols, <, 1, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,]
[., getColumnDimension, (, ), ;, if, (, nRows, <, 2, ||, nCols, <, 1, ), {, throw, new, MathIllegalArgumentException, (]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }, }, }]
[||, nCols, <, 1, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }]
[<, 2, ||, nCols, <, 1, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, )]
[||, nCols, <, 1, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }, }, }]
[<, 1, ), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }, }, }]
[), {, throw, new, MathIllegalArgumentException, (, LocalizedFormats, ., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }, }, }]
[;, }, }, }]
[,, nRows, ,, nCols, ), ;, }, }, }]
[., INSUFFICIENT_ROWS_AND_COLUMNS, ,, nRows, ,, nCols, ), ;, }, }, }]
[,, nCols, ), ;, }, }, }]
[), ;, }, }, }]
