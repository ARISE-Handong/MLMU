[;, public, class, ImageTitle, extends, Title, {, private, Image, image, ;, public, ImageTitle, (, Image, image, ), {, this, (]
[class, ImageTitle, extends, Title, {, private, Image, image, ;, public, ImageTitle, (, Image, image, ), {, this, (, image, ,]
[class, ImageTitle, extends, Title, {, private, Image, image, ;, public, ImageTitle, (, Image, image, ), {, this, (, image, ,]
[{, private, Image, image, ;, public, ImageTitle, (, Image, image, ), {, this, (, image, ,, image, ., getHeight, (]
[image, ;, public, ImageTitle, (, Image, image, ), {, this, (, image, ,, image, ., getHeight, (, null, ), ,]
[image, ;, public, ImageTitle, (, Image, image, ), {, this, (, image, ,, image, ., getHeight, (, null, ), ,]
[(, Image, image, ), {, this, (, image, ,, image, ., getHeight, (, null, ), ,, image, ., getWidth, (]
[), {, this, (, image, ,, image, ., getHeight, (, null, ), ,, image, ., getWidth, (, null, ), ,]
[), {, this, (, image, ,, image, ., getHeight, (, null, ), ,, image, ., getWidth, (, null, ), ,]
[image, ,, image, ., getHeight, (, null, ), ,, image, ., getWidth, (, null, ), ,, Title, ., DEFAULT_POSITION, ,]
[image, ,, image, ., getHeight, (, null, ), ,, image, ., getWidth, (, null, ), ,, Title, ., DEFAULT_POSITION, ,]
[getHeight, (, null, ), ,, image, ., getWidth, (, null, ), ,, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,]
[getHeight, (, null, ), ,, image, ., getWidth, (, null, ), ,, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,]
[,, image, ., getWidth, (, null, ), ,, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,]
[,, image, ., getWidth, (, null, ), ,, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,]
[;, }, public, ImageTitle, (, Image, image, ,, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {, this, (]
[public, ImageTitle, (, Image, image, ,, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {, this, (, image, ,]
[public, ImageTitle, (, Image, image, ,, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {, this, (, image, ,]
[image, ,, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {, this, (, image, ,, image, ., getHeight, (]
[position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {, this, (, image, ,, image, ., getHeight, (, null, ), ,]
[position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {, this, (, image, ,, image, ., getHeight, (, null, ), ,]
[,, VerticalAlignment, verticalAlignment, ), {, this, (, image, ,, image, ., getHeight, (, null, ), ,, image, ., getWidth, (]
[), {, this, (, image, ,, image, ., getHeight, (, null, ), ,, image, ., getWidth, (, null, ), ,]
[this, (, image, ,, image, ., getHeight, (, null, ), ,, image, ., getWidth, (, null, ), ,, position, ,]
[image, ,, image, ., getHeight, (, null, ), ,, image, ., getWidth, (, null, ), ,, position, ,, horizontalAlignment, ,]
[image, ., getHeight, (, null, ), ,, image, ., getWidth, (, null, ), ,, position, ,, horizontalAlignment, ,, verticalAlignment, ,]
[image, ., getHeight, (, null, ), ,, image, ., getWidth, (, null, ), ,, position, ,, horizontalAlignment, ,, verticalAlignment, ,]
[height, ,, int, width, ,, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ,, RectangleInsets, padding, ), {, super, (]
[int, width, ,, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ,, RectangleInsets, padding, ), {, super, (, position, ,]
[,, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ,, RectangleInsets, padding, ), {, super, (, position, ,, horizontalAlignment, ,]
[position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ,, RectangleInsets, padding, ), {, super, (, position, ,, horizontalAlignment, ,, verticalAlignment, ,]
[VerticalAlignment, verticalAlignment, ,, RectangleInsets, padding, ), {, super, (, position, ,, horizontalAlignment, ,, verticalAlignment, ,, padding, ), ;, if, (]
[VerticalAlignment, verticalAlignment, ,, RectangleInsets, padding, ), {, super, (, position, ,, horizontalAlignment, ,, verticalAlignment, ,, padding, ), ;, if, (]
[,, RectangleInsets, padding, ), {, super, (, position, ,, horizontalAlignment, ,, verticalAlignment, ,, padding, ), ;, if, (, image, ==]
[{, super, (, position, ,, horizontalAlignment, ,, verticalAlignment, ,, padding, ), ;, if, (, image, ==, null, ), {, throw]
[position, ,, horizontalAlignment, ,, verticalAlignment, ,, padding, ), ;, if, (, image, ==, null, ), {, throw, new, NullPointerException, (]
[verticalAlignment, ,, padding, ), ;, if, (, image, ==, null, ), {, throw, new, NullPointerException, (, "Null 'image' argument.", ), ;, }]
[verticalAlignment, ,, padding, ), ;, if, (, image, ==, null, ), {, throw, new, NullPointerException, (, "Null 'image' argument.", ), ;, }]
[;, if, (, image, ==, null, ), {, throw, new, NullPointerException, (, "Null 'image' argument.", ), ;, }, this, ., image, =]
[(, image, ==, null, ), {, throw, new, NullPointerException, (, "Null 'image' argument.", ), ;, }, this, ., image, =, image, ;]
[==, null, ), {, throw, new, NullPointerException, (, "Null 'image' argument.", ), ;, }, this, ., image, =, image, ;, setHeight, (]
[{, throw, new, NullPointerException, (, "Null 'image' argument.", ), ;, }, this, ., image, =, image, ;, setHeight, (, height, ), ;]
[new, NullPointerException, (, "Null 'image' argument.", ), ;, }, this, ., image, =, image, ;, setHeight, (, height, ), ;, setWidth, (]
[image, ;, setHeight, (, height, ), ;, setWidth, (, width, ), ;, }, public, Image, getImage, (, ), {, return]
[image, ;, setHeight, (, height, ), ;, setWidth, (, width, ), ;, }, public, Image, getImage, (, ), {, return]
[getImage, (, ), {, return, this, ., image, ;, }, public, void, setImage, (, Image, image, ), {, if, (]
[getImage, (, ), {, return, this, ., image, ;, }, public, void, setImage, (, Image, image, ), {, if, (]
[), {, return, this, ., image, ;, }, public, void, setImage, (, Image, image, ), {, if, (, image, ==]
[., image, ;, }, public, void, setImage, (, Image, image, ), {, if, (, image, ==, null, ), {, throw]
[}, public, void, setImage, (, Image, image, ), {, if, (, image, ==, null, ), {, throw, new, NullPointerException, (]
[(, Image, image, ), {, if, (, image, ==, null, ), {, throw, new, NullPointerException, (, "Null 'image' argument.", ), ;, }]
[(, Image, image, ), {, if, (, image, ==, null, ), {, throw, new, NullPointerException, (, "Null 'image' argument.", ), ;, }]
[{, if, (, image, ==, null, ), {, throw, new, NullPointerException, (, "Null 'image' argument.", ), ;, }, this, ., image, =]
[(, image, ==, null, ), {, throw, new, NullPointerException, (, "Null 'image' argument.", ), ;, }, this, ., image, =, image, ;]
[==, null, ), {, throw, new, NullPointerException, (, "Null 'image' argument.", ), ;, }, this, ., image, =, image, ;, notifyListeners, (]
[{, throw, new, NullPointerException, (, "Null 'image' argument.", ), ;, }, this, ., image, =, image, ;, notifyListeners, (, new, TitleChangeEvent, (]
[(, this, ), ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, s, =]
[), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, s, =, new, Size2D, (]
[), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, s, =, new, Size2D, (]
[), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, s, =, new, Size2D, (]
[(, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, s, =, new, Size2D, (, this, ., image, ., getWidth, (]
[,, RectangleConstraint, constraint, ), {, Size2D, s, =, new, Size2D, (, this, ., image, ., getWidth, (, null, ), ,]
[,, RectangleConstraint, constraint, ), {, Size2D, s, =, new, Size2D, (, this, ., image, ., getWidth, (, null, ), ,]
[,, RectangleConstraint, constraint, ), {, Size2D, s, =, new, Size2D, (, this, ., image, ., getWidth, (, null, ), ,]
[s, =, new, Size2D, (, this, ., image, ., getWidth, (, null, ), ,, this, ., image, ., getHeight, (]
[this, ., image, ., getWidth, (, null, ), ,, this, ., image, ., getHeight, (, null, ), ), ;, return]
[., getWidth, (, null, ), ,, this, ., image, ., getHeight, (, null, ), ), ;, return, new, Size2D, (]
[(, null, ), ,, this, ., image, ., getHeight, (, null, ), ), ;, return, new, Size2D, (, calculateTotalWidth, (]
[(, null, ), ,, this, ., image, ., getHeight, (, null, ), ), ;, return, new, Size2D, (, calculateTotalWidth, (]
[., getHeight, (, null, ), ), ;, return, new, Size2D, (, calculateTotalWidth, (, s, ., getWidth, (, ), ), ,]
[(, null, ), ), ;, return, new, Size2D, (, calculateTotalWidth, (, s, ., getWidth, (, ), ), ,, calculateTotalHeight, (]
[(, null, ), ), ;, return, new, Size2D, (, calculateTotalWidth, (, s, ., getWidth, (, ), ), ,, calculateTotalHeight, (]
[(, ), ), ), ;, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, RectangleEdge, position, =]
[public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (]
[public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (]
[public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (]
[draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==]
[draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==]
[,, Rectangle2D, area, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., TOP, ||]
[,, Rectangle2D, area, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., TOP, ||]
[area, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., TOP, ||, position, ==]
[area, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., TOP, ||, position, ==]
[=, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {]
[(, ), ;, if, (, position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, drawHorizontal, (]
[;, if, (, position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, drawHorizontal, (, g2, ,]
[TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (]
[TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (]
[TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (]
[position, ==, RectangleEdge, ., BOTTOM, ), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (, position, ==]
[position, ==, RectangleEdge, ., BOTTOM, ), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (, position, ==]
[BOTTOM, ), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||]
[BOTTOM, ), {, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||]
[{, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==]
[{, drawHorizontal, (, g2, ,, area, ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==]
[area, ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {]
[;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, drawVertical, (]
[else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, drawVertical, (, g2, ,]
[LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, drawVertical, (, g2, ,, area, ), ;, }, else, {, throw]
[==, RectangleEdge, ., RIGHT, ), {, drawVertical, (, g2, ,, area, ), ;, }, else, {, throw, new, RuntimeException, (]
[(, "Invalid title position.", ), ;, }, }, protected, Size2D, drawHorizontal, (, Graphics2D, g2, ,, Rectangle2D, chartArea, ), {, double, startY, =]
[}, protected, Size2D, drawHorizontal, (, Graphics2D, g2, ,, Rectangle2D, chartArea, ), {, double, startY, =, 0.0, ;, double, topSpace, =]
[Graphics2D, g2, ,, Rectangle2D, chartArea, ), {, double, startY, =, 0.0, ;, double, topSpace, =, 0.0, ;, double, bottomSpace, =]
[), {, double, startY, =, 0.0, ;, double, topSpace, =, 0.0, ;, double, bottomSpace, =, 0.0, ;, double, leftSpace, =]
[0.0, ;, double, topSpace, =, 0.0, ;, double, bottomSpace, =, 0.0, ;, double, leftSpace, =, 0.0, ;, double, rightSpace, =]
[0.0, ;, double, bottomSpace, =, 0.0, ;, double, leftSpace, =, 0.0, ;, double, rightSpace, =, 0.0, ;, double, w, =]
[double, leftSpace, =, 0.0, ;, double, rightSpace, =, 0.0, ;, double, w, =, getWidth, (, ), ;, double, h, =]
[=, 0.0, ;, double, w, =, getWidth, (, ), ;, double, h, =, getHeight, (, ), ;, RectangleInsets, padding, =]
[w, =, getWidth, (, ), ;, double, h, =, getHeight, (, ), ;, RectangleInsets, padding, =, getPadding, (, ), ;]
[getWidth, (, ), ;, double, h, =, getHeight, (, ), ;, RectangleInsets, padding, =, getPadding, (, ), ;, topSpace, =]
[getWidth, (, ), ;, double, h, =, getHeight, (, ), ;, RectangleInsets, padding, =, getPadding, (, ), ;, topSpace, =]
[double, h, =, getHeight, (, ), ;, RectangleInsets, padding, =, getPadding, (, ), ;, topSpace, =, padding, ., calculateTopOutset, (]
[getHeight, (, ), ;, RectangleInsets, padding, =, getPadding, (, ), ;, topSpace, =, padding, ., calculateTopOutset, (, h, ), ;]
[), ;, RectangleInsets, padding, =, getPadding, (, ), ;, topSpace, =, padding, ., calculateTopOutset, (, h, ), ;, bottomSpace, =]
[), ;, RectangleInsets, padding, =, getPadding, (, ), ;, topSpace, =, padding, ., calculateTopOutset, (, h, ), ;, bottomSpace, =]
[=, getPadding, (, ), ;, topSpace, =, padding, ., calculateTopOutset, (, h, ), ;, bottomSpace, =, padding, ., calculateBottomOutset, (]
[), ;, topSpace, =, padding, ., calculateTopOutset, (, h, ), ;, bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;]
[topSpace, =, padding, ., calculateTopOutset, (, h, ), ;, bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;, leftSpace, =]
[topSpace, =, padding, ., calculateTopOutset, (, h, ), ;, bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;, leftSpace, =]
[calculateTopOutset, (, h, ), ;, bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;, leftSpace, =, padding, ., calculateLeftOutset, (]
[), ;, bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;, leftSpace, =, padding, ., calculateLeftOutset, (, w, ), ;]
[bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;, leftSpace, =, padding, ., calculateLeftOutset, (, w, ), ;, rightSpace, =]
[bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;, leftSpace, =, padding, ., calculateLeftOutset, (, w, ), ;, rightSpace, =]
[calculateBottomOutset, (, h, ), ;, leftSpace, =, padding, ., calculateLeftOutset, (, w, ), ;, rightSpace, =, padding, ., calculateRightOutset, (]
[leftSpace, =, padding, ., calculateLeftOutset, (, w, ), ;, rightSpace, =, padding, ., calculateRightOutset, (, w, ), ;, if, (]
[leftSpace, =, padding, ., calculateLeftOutset, (, w, ), ;, rightSpace, =, padding, ., calculateRightOutset, (, w, ), ;, if, (]
[calculateLeftOutset, (, w, ), ;, rightSpace, =, padding, ., calculateRightOutset, (, w, ), ;, if, (, getPosition, (, ), ==]
[calculateLeftOutset, (, w, ), ;, rightSpace, =, padding, ., calculateRightOutset, (, w, ), ;, if, (, getPosition, (, ), ==]
[rightSpace, =, padding, ., calculateRightOutset, (, w, ), ;, if, (, getPosition, (, ), ==, RectangleEdge, ., TOP, ), {]
[padding, ., calculateRightOutset, (, w, ), ;, if, (, getPosition, (, ), ==, RectangleEdge, ., TOP, ), {, startY, =]
[padding, ., calculateRightOutset, (, w, ), ;, if, (, getPosition, (, ), ==, RectangleEdge, ., TOP, ), {, startY, =]
[padding, ., calculateRightOutset, (, w, ), ;, if, (, getPosition, (, ), ==, RectangleEdge, ., TOP, ), {, startY, =]
[;, if, (, getPosition, (, ), ==, RectangleEdge, ., TOP, ), {, startY, =, chartArea, ., getY, (, ), +]
[), ==, RectangleEdge, ., TOP, ), {, startY, =, chartArea, ., getY, (, ), +, topSpace, ;, }, else, {]
[RectangleEdge, ., TOP, ), {, startY, =, chartArea, ., getY, (, ), +, topSpace, ;, }, else, {, startY, =]
[RectangleEdge, ., TOP, ), {, startY, =, chartArea, ., getY, (, ), +, topSpace, ;, }, else, {, startY, =]
[RectangleEdge, ., TOP, ), {, startY, =, chartArea, ., getY, (, ), +, topSpace, ;, }, else, {, startY, =]
[RectangleEdge, ., TOP, ), {, startY, =, chartArea, ., getY, (, ), +, topSpace, ;, }, else, {, startY, =]
[RectangleEdge, ., TOP, ), {, startY, =, chartArea, ., getY, (, ), +, topSpace, ;, }, else, {, startY, =]
[=, chartArea, ., getY, (, ), +, topSpace, ;, }, else, {, startY, =, chartArea, ., getY, (, ), +]
[=, chartArea, ., getY, (, ), +, topSpace, ;, }, else, {, startY, =, chartArea, ., getY, (, ), +]
[+, topSpace, ;, }, else, {, startY, =, chartArea, ., getY, (, ), +, chartArea, ., getHeight, (, ), -]
[;, }, else, {, startY, =, chartArea, ., getY, (, ), +, chartArea, ., getHeight, (, ), -, bottomSpace, -]
[chartArea, ., getY, (, ), +, chartArea, ., getHeight, (, ), -, bottomSpace, -, h, ;, }, HorizontalAlignment, horizontalAlignment, =]
[., getHeight, (, ), -, bottomSpace, -, h, ;, }, HorizontalAlignment, horizontalAlignment, =, getHorizontalAlignment, (, ), ;, double, startX, =]
[-, bottomSpace, -, h, ;, }, HorizontalAlignment, horizontalAlignment, =, getHorizontalAlignment, (, ), ;, double, startX, =, 0.0, ;, if, (]
[-, bottomSpace, -, h, ;, }, HorizontalAlignment, horizontalAlignment, =, getHorizontalAlignment, (, ), ;, double, startX, =, 0.0, ;, if, (]
[-, h, ;, }, HorizontalAlignment, horizontalAlignment, =, getHorizontalAlignment, (, ), ;, double, startX, =, 0.0, ;, if, (, horizontalAlignment, ==]
[-, h, ;, }, HorizontalAlignment, horizontalAlignment, =, getHorizontalAlignment, (, ), ;, double, startX, =, 0.0, ;, if, (, horizontalAlignment, ==]
[horizontalAlignment, =, getHorizontalAlignment, (, ), ;, double, startX, =, 0.0, ;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {]
[getHorizontalAlignment, (, ), ;, double, startX, =, 0.0, ;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, startX, =]
[getHorizontalAlignment, (, ), ;, double, startX, =, 0.0, ;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, startX, =]
[getHorizontalAlignment, (, ), ;, double, startX, =, 0.0, ;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, startX, =]
[getHorizontalAlignment, (, ), ;, double, startX, =, 0.0, ;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, startX, =]
[getHorizontalAlignment, (, ), ;, double, startX, =, 0.0, ;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, startX, =]
[=, 0.0, ;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, startX, =, chartArea, ., getX, (, ), +]
[;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, +]
[;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, +]
[;, if, (, horizontalAlignment, ==, HorizontalAlignment, ., CENTER, ), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, +]
[., CENTER, ), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, +, chartArea, ., getWidth, (, ), /]
[), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, +, chartArea, ., getWidth, (, ), /, 2.0, -]
[), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, +, chartArea, ., getWidth, (, ), /, 2.0, -]
[startX, =, chartArea, ., getX, (, ), +, leftSpace, +, chartArea, ., getWidth, (, ), /, 2.0, -, w, /]
[), +, leftSpace, +, chartArea, ., getWidth, (, ), /, 2.0, -, w, /, 2.0, ;, }, else, if, (]
[), +, leftSpace, +, chartArea, ., getWidth, (, ), /, 2.0, -, w, /, 2.0, ;, }, else, if, (]
[leftSpace, +, chartArea, ., getWidth, (, ), /, 2.0, -, w, /, 2.0, ;, }, else, if, (, horizontalAlignment, ==]
[leftSpace, +, chartArea, ., getWidth, (, ), /, 2.0, -, w, /, 2.0, ;, }, else, if, (, horizontalAlignment, ==]
[(, ), /, 2.0, -, w, /, 2.0, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT, ), {]
[/, 2.0, -, w, /, 2.0, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT, ), {, startX, =]
[/, 2.0, -, w, /, 2.0, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT, ), {, startX, =]
[/, 2.0, -, w, /, 2.0, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT, ), {, startX, =]
[;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., LEFT, ), {, startX, =, chartArea, ., getX, (, ), +]
[==, HorizontalAlignment, ., LEFT, ), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, ;, }, else, if, (]
[==, HorizontalAlignment, ., LEFT, ), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, ;, }, else, if, (]
[., LEFT, ), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, ;, }, else, if, (, horizontalAlignment, ==]
[., LEFT, ), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, ;, }, else, if, (, horizontalAlignment, ==]
[=, chartArea, ., getX, (, ), +, leftSpace, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {]
[., getX, (, ), +, leftSpace, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, startX, =]
[., getX, (, ), +, leftSpace, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, startX, =]
[., getX, (, ), +, leftSpace, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, startX, =]
[., getX, (, ), +, leftSpace, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, startX, =]
[., getX, (, ), +, leftSpace, ;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, startX, =]
[;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, startX, =, chartArea, ., getX, (, ), +]
[;, }, else, if, (, horizontalAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, startX, =, chartArea, ., getX, (, ), +]
[==, HorizontalAlignment, ., RIGHT, ), {, startX, =, chartArea, ., getX, (, ), +, chartArea, ., getWidth, (, ), -]
[., RIGHT, ), {, startX, =, chartArea, ., getX, (, ), +, chartArea, ., getWidth, (, ), -, rightSpace, -]
[{, startX, =, chartArea, ., getX, (, ), +, chartArea, ., getWidth, (, ), -, rightSpace, -, w, ;, }]
[{, startX, =, chartArea, ., getX, (, ), +, chartArea, ., getWidth, (, ), -, rightSpace, -, w, ;, }]
[., getX, (, ), +, chartArea, ., getWidth, (, ), -, rightSpace, -, w, ;, }, g2, ., drawImage, (]
[., getX, (, ), +, chartArea, ., getWidth, (, ), -, rightSpace, -, w, ;, }, g2, ., drawImage, (]
[+, chartArea, ., getWidth, (, ), -, rightSpace, -, w, ;, }, g2, ., drawImage, (, this, ., image, ,]
[getWidth, (, ), -, rightSpace, -, w, ;, }, g2, ., drawImage, (, this, ., image, ,, (, int, )]
[), -, rightSpace, -, w, ;, }, g2, ., drawImage, (, this, ., image, ,, (, int, ), startX, ,]
[-, w, ;, }, g2, ., drawImage, (, this, ., image, ,, (, int, ), startX, ,, (, int, )]
[;, }, g2, ., drawImage, (, this, ., image, ,, (, int, ), startX, ,, (, int, ), startY, ,]
[., drawImage, (, this, ., image, ,, (, int, ), startX, ,, (, int, ), startY, ,, (, int, )]
[(, this, ., image, ,, (, int, ), startX, ,, (, int, ), startY, ,, (, int, ), w, ,]
[image, ,, (, int, ), startX, ,, (, int, ), startY, ,, (, int, ), w, ,, (, int, )]
[(, int, ), startX, ,, (, int, ), startY, ,, (, int, ), w, ,, (, int, ), h, ,]
[,, (, int, ), startY, ,, (, int, ), w, ,, (, int, ), h, ,, null, ), ;, return]
[), startY, ,, (, int, ), w, ,, (, int, ), h, ,, null, ), ;, return, new, Size2D, (]
[), startY, ,, (, int, ), w, ,, (, int, ), h, ,, null, ), ;, return, new, Size2D, (]
[), startY, ,, (, int, ), w, ,, (, int, ), h, ,, null, ), ;, return, new, Size2D, (]
[), startY, ,, (, int, ), w, ,, (, int, ), h, ,, null, ), ;, return, new, Size2D, (]
[w, ,, (, int, ), h, ,, null, ), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +]
[(, int, ), h, ,, null, ), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +, leftSpace, +]
[), h, ,, null, ), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +, leftSpace, +, rightSpace, ,]
[), h, ,, null, ), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +, leftSpace, +, rightSpace, ,]
[), h, ,, null, ), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +, leftSpace, +, rightSpace, ,]
[,, null, ), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +, leftSpace, +, rightSpace, ,, h, +]
[), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +, leftSpace, +, rightSpace, ,, h, +, topSpace, +]
[topSpace, +, bottomSpace, ), ;, }, protected, Size2D, drawVertical, (, Graphics2D, g2, ,, Rectangle2D, chartArea, ), {, double, startX, =]
[}, protected, Size2D, drawVertical, (, Graphics2D, g2, ,, Rectangle2D, chartArea, ), {, double, startX, =, 0.0, ;, double, topSpace, =]
[Graphics2D, g2, ,, Rectangle2D, chartArea, ), {, double, startX, =, 0.0, ;, double, topSpace, =, 0.0, ;, double, bottomSpace, =]
[), {, double, startX, =, 0.0, ;, double, topSpace, =, 0.0, ;, double, bottomSpace, =, 0.0, ;, double, leftSpace, =]
[0.0, ;, double, topSpace, =, 0.0, ;, double, bottomSpace, =, 0.0, ;, double, leftSpace, =, 0.0, ;, double, rightSpace, =]
[0.0, ;, double, bottomSpace, =, 0.0, ;, double, leftSpace, =, 0.0, ;, double, rightSpace, =, 0.0, ;, double, w, =]
[double, leftSpace, =, 0.0, ;, double, rightSpace, =, 0.0, ;, double, w, =, getWidth, (, ), ;, double, h, =]
[=, 0.0, ;, double, w, =, getWidth, (, ), ;, double, h, =, getHeight, (, ), ;, RectangleInsets, padding, =]
[getWidth, (, ), ;, double, h, =, getHeight, (, ), ;, RectangleInsets, padding, =, getPadding, (, ), ;, if, (]
[getWidth, (, ), ;, double, h, =, getHeight, (, ), ;, RectangleInsets, padding, =, getPadding, (, ), ;, if, (]
[), ;, double, h, =, getHeight, (, ), ;, RectangleInsets, padding, =, getPadding, (, ), ;, if, (, padding, !=]
[h, =, getHeight, (, ), ;, RectangleInsets, padding, =, getPadding, (, ), ;, if, (, padding, !=, null, ), {]
[getHeight, (, ), ;, RectangleInsets, padding, =, getPadding, (, ), ;, if, (, padding, !=, null, ), {, topSpace, =]
[getHeight, (, ), ;, RectangleInsets, padding, =, getPadding, (, ), ;, if, (, padding, !=, null, ), {, topSpace, =]
[RectangleInsets, padding, =, getPadding, (, ), ;, if, (, padding, !=, null, ), {, topSpace, =, padding, ., calculateTopOutset, (]
[getPadding, (, ), ;, if, (, padding, !=, null, ), {, topSpace, =, padding, ., calculateTopOutset, (, h, ), ;]
[), ;, if, (, padding, !=, null, ), {, topSpace, =, padding, ., calculateTopOutset, (, h, ), ;, bottomSpace, =]
[), ;, if, (, padding, !=, null, ), {, topSpace, =, padding, ., calculateTopOutset, (, h, ), ;, bottomSpace, =]
[padding, !=, null, ), {, topSpace, =, padding, ., calculateTopOutset, (, h, ), ;, bottomSpace, =, padding, ., calculateBottomOutset, (]
[), {, topSpace, =, padding, ., calculateTopOutset, (, h, ), ;, bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;]
[topSpace, =, padding, ., calculateTopOutset, (, h, ), ;, bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;, leftSpace, =]
[topSpace, =, padding, ., calculateTopOutset, (, h, ), ;, bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;, leftSpace, =]
[calculateTopOutset, (, h, ), ;, bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;, leftSpace, =, padding, ., calculateLeftOutset, (]
[), ;, bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;, leftSpace, =, padding, ., calculateLeftOutset, (, w, ), ;]
[bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;, leftSpace, =, padding, ., calculateLeftOutset, (, w, ), ;, rightSpace, =]
[bottomSpace, =, padding, ., calculateBottomOutset, (, h, ), ;, leftSpace, =, padding, ., calculateLeftOutset, (, w, ), ;, rightSpace, =]
[calculateBottomOutset, (, h, ), ;, leftSpace, =, padding, ., calculateLeftOutset, (, w, ), ;, rightSpace, =, padding, ., calculateRightOutset, (]
[=, padding, ., calculateLeftOutset, (, w, ), ;, rightSpace, =, padding, ., calculateRightOutset, (, w, ), ;, }, if, (]
[=, padding, ., calculateLeftOutset, (, w, ), ;, rightSpace, =, padding, ., calculateRightOutset, (, w, ), ;, }, if, (]
[(, w, ), ;, rightSpace, =, padding, ., calculateRightOutset, (, w, ), ;, }, if, (, getPosition, (, ), ==]
[(, w, ), ;, rightSpace, =, padding, ., calculateRightOutset, (, w, ), ;, }, if, (, getPosition, (, ), ==]
[=, padding, ., calculateRightOutset, (, w, ), ;, }, if, (, getPosition, (, ), ==, RectangleEdge, ., LEFT, ), {]
[., calculateRightOutset, (, w, ), ;, }, if, (, getPosition, (, ), ==, RectangleEdge, ., LEFT, ), {, startX, =]
[., calculateRightOutset, (, w, ), ;, }, if, (, getPosition, (, ), ==, RectangleEdge, ., LEFT, ), {, startX, =]
[., calculateRightOutset, (, w, ), ;, }, if, (, getPosition, (, ), ==, RectangleEdge, ., LEFT, ), {, startX, =]
[}, if, (, getPosition, (, ), ==, RectangleEdge, ., LEFT, ), {, startX, =, chartArea, ., getX, (, ), +]
[), ==, RectangleEdge, ., LEFT, ), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, ;, }, else, {]
[RectangleEdge, ., LEFT, ), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, ;, }, else, {, startX, =]
[RectangleEdge, ., LEFT, ), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, ;, }, else, {, startX, =]
[RectangleEdge, ., LEFT, ), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, ;, }, else, {, startX, =]
[RectangleEdge, ., LEFT, ), {, startX, =, chartArea, ., getX, (, ), +, leftSpace, ;, }, else, {, startX, =]
[=, chartArea, ., getX, (, ), +, leftSpace, ;, }, else, {, startX, =, chartArea, ., getMaxX, (, ), -]
[., getX, (, ), +, leftSpace, ;, }, else, {, startX, =, chartArea, ., getMaxX, (, ), -, rightSpace, -]
[;, }, else, {, startX, =, chartArea, ., getMaxX, (, ), -, rightSpace, -, w, ;, }, VerticalAlignment, alignment, =]
[., getMaxX, (, ), -, rightSpace, -, w, ;, }, VerticalAlignment, alignment, =, getVerticalAlignment, (, ), ;, double, startY, =]
[-, rightSpace, -, w, ;, }, VerticalAlignment, alignment, =, getVerticalAlignment, (, ), ;, double, startY, =, 0.0, ;, if, (]
[-, rightSpace, -, w, ;, }, VerticalAlignment, alignment, =, getVerticalAlignment, (, ), ;, double, startY, =, 0.0, ;, if, (]
[-, w, ;, }, VerticalAlignment, alignment, =, getVerticalAlignment, (, ), ;, double, startY, =, 0.0, ;, if, (, alignment, ==]
[-, w, ;, }, VerticalAlignment, alignment, =, getVerticalAlignment, (, ), ;, double, startY, =, 0.0, ;, if, (, alignment, ==]
[alignment, =, getVerticalAlignment, (, ), ;, double, startY, =, 0.0, ;, if, (, alignment, ==, VerticalAlignment, ., CENTER, ), {]
[getVerticalAlignment, (, ), ;, double, startY, =, 0.0, ;, if, (, alignment, ==, VerticalAlignment, ., CENTER, ), {, startY, =]
[getVerticalAlignment, (, ), ;, double, startY, =, 0.0, ;, if, (, alignment, ==, VerticalAlignment, ., CENTER, ), {, startY, =]
[getVerticalAlignment, (, ), ;, double, startY, =, 0.0, ;, if, (, alignment, ==, VerticalAlignment, ., CENTER, ), {, startY, =]
[getVerticalAlignment, (, ), ;, double, startY, =, 0.0, ;, if, (, alignment, ==, VerticalAlignment, ., CENTER, ), {, startY, =]
[getVerticalAlignment, (, ), ;, double, startY, =, 0.0, ;, if, (, alignment, ==, VerticalAlignment, ., CENTER, ), {, startY, =]
[=, 0.0, ;, if, (, alignment, ==, VerticalAlignment, ., CENTER, ), {, startY, =, chartArea, ., getMinY, (, ), +]
[;, if, (, alignment, ==, VerticalAlignment, ., CENTER, ), {, startY, =, chartArea, ., getMinY, (, ), +, topSpace, +]
[;, if, (, alignment, ==, VerticalAlignment, ., CENTER, ), {, startY, =, chartArea, ., getMinY, (, ), +, topSpace, +]
[;, if, (, alignment, ==, VerticalAlignment, ., CENTER, ), {, startY, =, chartArea, ., getMinY, (, ), +, topSpace, +]
[., CENTER, ), {, startY, =, chartArea, ., getMinY, (, ), +, topSpace, +, chartArea, ., getHeight, (, ), /]
[), {, startY, =, chartArea, ., getMinY, (, ), +, topSpace, +, chartArea, ., getHeight, (, ), /, 2.0, -]
[), {, startY, =, chartArea, ., getMinY, (, ), +, topSpace, +, chartArea, ., getHeight, (, ), /, 2.0, -]
[startY, =, chartArea, ., getMinY, (, ), +, topSpace, +, chartArea, ., getHeight, (, ), /, 2.0, -, h, /]
[), +, topSpace, +, chartArea, ., getHeight, (, ), /, 2.0, -, h, /, 2.0, ;, }, else, if, (]
[), +, topSpace, +, chartArea, ., getHeight, (, ), /, 2.0, -, h, /, 2.0, ;, }, else, if, (]
[topSpace, +, chartArea, ., getHeight, (, ), /, 2.0, -, h, /, 2.0, ;, }, else, if, (, alignment, ==]
[topSpace, +, chartArea, ., getHeight, (, ), /, 2.0, -, h, /, 2.0, ;, }, else, if, (, alignment, ==]
[(, ), /, 2.0, -, h, /, 2.0, ;, }, else, if, (, alignment, ==, VerticalAlignment, ., TOP, ), {]
[/, 2.0, -, h, /, 2.0, ;, }, else, if, (, alignment, ==, VerticalAlignment, ., TOP, ), {, startY, =]
[/, 2.0, -, h, /, 2.0, ;, }, else, if, (, alignment, ==, VerticalAlignment, ., TOP, ), {, startY, =]
[/, 2.0, -, h, /, 2.0, ;, }, else, if, (, alignment, ==, VerticalAlignment, ., TOP, ), {, startY, =]
[;, }, else, if, (, alignment, ==, VerticalAlignment, ., TOP, ), {, startY, =, chartArea, ., getMinY, (, ), +]
[==, VerticalAlignment, ., TOP, ), {, startY, =, chartArea, ., getMinY, (, ), +, topSpace, ;, }, else, if, (]
[==, VerticalAlignment, ., TOP, ), {, startY, =, chartArea, ., getMinY, (, ), +, topSpace, ;, }, else, if, (]
[., TOP, ), {, startY, =, chartArea, ., getMinY, (, ), +, topSpace, ;, }, else, if, (, alignment, ==]
[., TOP, ), {, startY, =, chartArea, ., getMinY, (, ), +, topSpace, ;, }, else, if, (, alignment, ==]
[=, chartArea, ., getMinY, (, ), +, topSpace, ;, }, else, if, (, alignment, ==, VerticalAlignment, ., BOTTOM, ), {]
[., getMinY, (, ), +, topSpace, ;, }, else, if, (, alignment, ==, VerticalAlignment, ., BOTTOM, ), {, startY, =]
[., getMinY, (, ), +, topSpace, ;, }, else, if, (, alignment, ==, VerticalAlignment, ., BOTTOM, ), {, startY, =]
[., getMinY, (, ), +, topSpace, ;, }, else, if, (, alignment, ==, VerticalAlignment, ., BOTTOM, ), {, startY, =]
[., getMinY, (, ), +, topSpace, ;, }, else, if, (, alignment, ==, VerticalAlignment, ., BOTTOM, ), {, startY, =]
[;, }, else, if, (, alignment, ==, VerticalAlignment, ., BOTTOM, ), {, startY, =, chartArea, ., getMaxY, (, ), -]
[else, if, (, alignment, ==, VerticalAlignment, ., BOTTOM, ), {, startY, =, chartArea, ., getMaxY, (, ), -, bottomSpace, -]
[alignment, ==, VerticalAlignment, ., BOTTOM, ), {, startY, =, chartArea, ., getMaxY, (, ), -, bottomSpace, -, h, ;, }]
[alignment, ==, VerticalAlignment, ., BOTTOM, ), {, startY, =, chartArea, ., getMaxY, (, ), -, bottomSpace, -, h, ;, }]
[BOTTOM, ), {, startY, =, chartArea, ., getMaxY, (, ), -, bottomSpace, -, h, ;, }, g2, ., drawImage, (]
[BOTTOM, ), {, startY, =, chartArea, ., getMaxY, (, ), -, bottomSpace, -, h, ;, }, g2, ., drawImage, (]
[=, chartArea, ., getMaxY, (, ), -, bottomSpace, -, h, ;, }, g2, ., drawImage, (, this, ., image, ,]
[getMaxY, (, ), -, bottomSpace, -, h, ;, }, g2, ., drawImage, (, this, ., image, ,, (, int, )]
[), -, bottomSpace, -, h, ;, }, g2, ., drawImage, (, this, ., image, ,, (, int, ), startX, ,]
[-, h, ;, }, g2, ., drawImage, (, this, ., image, ,, (, int, ), startX, ,, (, int, )]
[;, }, g2, ., drawImage, (, this, ., image, ,, (, int, ), startX, ,, (, int, ), startY, ,]
[., drawImage, (, this, ., image, ,, (, int, ), startX, ,, (, int, ), startY, ,, (, int, )]
[(, this, ., image, ,, (, int, ), startX, ,, (, int, ), startY, ,, (, int, ), w, ,]
[image, ,, (, int, ), startX, ,, (, int, ), startY, ,, (, int, ), w, ,, (, int, )]
[(, int, ), startX, ,, (, int, ), startY, ,, (, int, ), w, ,, (, int, ), h, ,]
[,, (, int, ), startY, ,, (, int, ), w, ,, (, int, ), h, ,, null, ), ;, return]
[), startY, ,, (, int, ), w, ,, (, int, ), h, ,, null, ), ;, return, new, Size2D, (]
[), startY, ,, (, int, ), w, ,, (, int, ), h, ,, null, ), ;, return, new, Size2D, (]
[), startY, ,, (, int, ), w, ,, (, int, ), h, ,, null, ), ;, return, new, Size2D, (]
[), startY, ,, (, int, ), w, ,, (, int, ), h, ,, null, ), ;, return, new, Size2D, (]
[w, ,, (, int, ), h, ,, null, ), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +]
[(, int, ), h, ,, null, ), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +, leftSpace, +]
[), h, ,, null, ), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +, leftSpace, +, rightSpace, ,]
[), h, ,, null, ), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +, leftSpace, +, rightSpace, ,]
[), h, ,, null, ), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +, leftSpace, +, rightSpace, ,]
[,, null, ), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +, leftSpace, +, rightSpace, ,, h, +]
[), ;, return, new, Size2D, (, chartArea, ., getWidth, (, ), +, leftSpace, +, rightSpace, ,, h, +, topSpace, +]
[topSpace, +, bottomSpace, ), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {]
[bottomSpace, ), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, draw, (]
[;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, draw, (, g2, ,]
[draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, draw, (, g2, ,, area, ), ;, return]
[(, g2, ,, area, ), ;, return, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[(, g2, ,, area, ), ;, return, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, area, ), ;, return, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[return, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, ImageTitle, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, ImageTitle, ), ), {, return, false, ;, }, ImageTitle, that, =]
[if, (, !, (, obj, instanceof, ImageTitle, ), ), {, return, false, ;, }, ImageTitle, that, =, (, ImageTitle, )]
[obj, instanceof, ImageTitle, ), ), {, return, false, ;, }, ImageTitle, that, =, (, ImageTitle, ), obj, ;, if, (]
[instanceof, ImageTitle, ), ), {, return, false, ;, }, ImageTitle, that, =, (, ImageTitle, ), obj, ;, if, (, !]
[instanceof, ImageTitle, ), ), {, return, false, ;, }, ImageTitle, that, =, (, ImageTitle, ), obj, ;, if, (, !]
[{, return, false, ;, }, ImageTitle, that, =, (, ImageTitle, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (]
[{, return, false, ;, }, ImageTitle, that, =, (, ImageTitle, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (]
[}, ImageTitle, that, =, (, ImageTitle, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., image, ,]
[}, ImageTitle, that, =, (, ImageTitle, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., image, ,]
[obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., image, ,, that, ., image, ), ), {, return]
[!, ObjectUtilities, ., equal, (, this, ., image, ,, that, ., image, ), ), {, return, false, ;, }, return]
[!, ObjectUtilities, ., equal, (, this, ., image, ,, that, ., image, ), ), {, return, false, ;, }, return]
[(, this, ., image, ,, that, ., image, ), ), {, return, false, ;, }, return, super, ., equals, (]
