[implements, PaintScale, ,, PublicCloneable, ,, Serializable, {, static, class, PaintItem, implements, Comparable, ,, Serializable, {, static, final, long, serialVersionUID, =]
[=, 698920578512361570L, ;, double, value, ;, transient, Paint, paint, ;, public, PaintItem, (, double, value, ,, Paint, paint, ), {]
[=, 698920578512361570L, ;, double, value, ;, transient, Paint, paint, ;, public, PaintItem, (, double, value, ,, Paint, paint, ), {]
[value, ;, transient, Paint, paint, ;, public, PaintItem, (, double, value, ,, Paint, paint, ), {, this, ., value, =]
[transient, Paint, paint, ;, public, PaintItem, (, double, value, ,, Paint, paint, ), {, this, ., value, =, value, ;]
[transient, Paint, paint, ;, public, PaintItem, (, double, value, ,, Paint, paint, ), {, this, ., value, =, value, ;]
[public, PaintItem, (, double, value, ,, Paint, paint, ), {, this, ., value, =, value, ;, this, ., paint, =]
[value, ;, this, ., paint, =, paint, ;, }, public, int, compareTo, (, Object, obj, ), {, PaintItem, that, =]
[., paint, =, paint, ;, }, public, int, compareTo, (, Object, obj, ), {, PaintItem, that, =, (, PaintItem, )]
[}, public, int, compareTo, (, Object, obj, ), {, PaintItem, that, =, (, PaintItem, ), obj, ;, double, d1, =]
[}, public, int, compareTo, (, Object, obj, ), {, PaintItem, that, =, (, PaintItem, ), obj, ;, double, d1, =]
[), {, PaintItem, that, =, (, PaintItem, ), obj, ;, double, d1, =, this, ., value, ;, double, d2, =]
[), {, PaintItem, that, =, (, PaintItem, ), obj, ;, double, d1, =, this, ., value, ;, double, d2, =]
[PaintItem, ), obj, ;, double, d1, =, this, ., value, ;, double, d2, =, that, ., value, ;, if, (]
[PaintItem, ), obj, ;, double, d1, =, this, ., value, ;, double, d2, =, that, ., value, ;, if, (]
[obj, ;, double, d1, =, this, ., value, ;, double, d2, =, that, ., value, ;, if, (, d1, >]
[=, this, ., value, ;, double, d2, =, that, ., value, ;, if, (, d1, >, d2, ), {, return]
[double, d2, =, that, ., value, ;, if, (, d1, >, d2, ), {, return, 1, ;, }, if, (]
[double, d2, =, that, ., value, ;, if, (, d1, >, d2, ), {, return, 1, ;, }, if, (]
[=, that, ., value, ;, if, (, d1, >, d2, ), {, return, 1, ;, }, if, (, d1, <]
[;, if, (, d1, >, d2, ), {, return, 1, ;, }, if, (, d1, <, d2, ), {, return]
[if, (, d1, >, d2, ), {, return, 1, ;, }, if, (, d1, <, d2, ), {, return, -]
[d2, ), {, return, 1, ;, }, if, (, d1, <, d2, ), {, return, -, 1, ;, }, return]
[{, return, -, 1, ;, }, return, 0, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[{, return, -, 1, ;, }, return, 0, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[-, 1, ;, }, return, 0, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[return, 0, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, PaintItem, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, PaintItem, ), ), {, return, false, ;, }, PaintItem, that, =]
[if, (, !, (, obj, instanceof, PaintItem, ), ), {, return, false, ;, }, PaintItem, that, =, (, PaintItem, )]
[obj, instanceof, PaintItem, ), ), {, return, false, ;, }, PaintItem, that, =, (, PaintItem, ), obj, ;, if, (]
[obj, instanceof, PaintItem, ), ), {, return, false, ;, }, PaintItem, that, =, (, PaintItem, ), obj, ;, if, (]
[obj, instanceof, PaintItem, ), ), {, return, false, ;, }, PaintItem, that, =, (, PaintItem, ), obj, ;, if, (]
[), {, return, false, ;, }, PaintItem, that, =, (, PaintItem, ), obj, ;, if, (, this, ., value, !=]
[), {, return, false, ;, }, PaintItem, that, =, (, PaintItem, ), obj, ;, if, (, this, ., value, !=]
[PaintItem, that, =, (, PaintItem, ), obj, ;, if, (, this, ., value, !=, that, ., value, ), {, return]
[), obj, ;, if, (, this, ., value, !=, that, ., value, ), {, return, false, ;, }, if, (]
[obj, ;, if, (, this, ., value, !=, that, ., value, ), {, return, false, ;, }, if, (, !]
[obj, ;, if, (, this, ., value, !=, that, ., value, ), {, return, false, ;, }, if, (, !]
[this, ., value, !=, that, ., value, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[this, ., value, !=, that, ., value, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[that, ., value, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[that, ., value, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return]
[!, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, return]
[), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[), {, return, false, ;, }, return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[return, true, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,]
[this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (]
[), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }, static, final, long, serialVersionUID, =]
[;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }, static, final, long, serialVersionUID, =, -]
[private, double, upperBound, ;, private, transient, Paint, defaultPaint, ;, private, List, lookupTable, ;, public, LookupPaintScale, (, ), {, this, (]
[upperBound, ;, private, transient, Paint, defaultPaint, ;, private, List, lookupTable, ;, public, LookupPaintScale, (, ), {, this, (, 0.0, ,]
[private, transient, Paint, defaultPaint, ;, private, List, lookupTable, ;, public, LookupPaintScale, (, ), {, this, (, 0.0, ,, 1.0, ,]
[private, transient, Paint, defaultPaint, ;, private, List, lookupTable, ;, public, LookupPaintScale, (, ), {, this, (, 0.0, ,, 1.0, ,]
[., lightGray, ), ;, }, public, LookupPaintScale, (, double, lowerBound, ,, double, upperBound, ,, Paint, defaultPaint, ), {, if, (]
[., lightGray, ), ;, }, public, LookupPaintScale, (, double, lowerBound, ,, double, upperBound, ,, Paint, defaultPaint, ), {, if, (]
[), ;, }, public, LookupPaintScale, (, double, lowerBound, ,, double, upperBound, ,, Paint, defaultPaint, ), {, if, (, lowerBound, >=]
[LookupPaintScale, (, double, lowerBound, ,, double, upperBound, ,, Paint, defaultPaint, ), {, if, (, lowerBound, >=, upperBound, ), {, throw]
[lowerBound, ,, double, upperBound, ,, Paint, defaultPaint, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (]
[defaultPaint, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (]
[defaultPaint, ), {, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (]
[{, if, (, lowerBound, >=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (, defaultPaint, ==]
[>=, upperBound, ), {, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (, defaultPaint, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Requires lowerBound < upperBound.", ), ;, }, if, (, defaultPaint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, "Requires lowerBound < upperBound.", ), ;, }, if, (, defaultPaint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, "Requires lowerBound < upperBound.", ), ;, }, if, (, defaultPaint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[}, if, (, defaultPaint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., lowerBound, =]
[(, defaultPaint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., lowerBound, =, lowerBound, ;]
[(, defaultPaint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., lowerBound, =, lowerBound, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =]
[throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;]
[throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;]
["Null 'paint' argument.", ), ;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., defaultPaint, =]
[;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., defaultPaint, =, defaultPaint, ;]
[;, }, this, ., lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., defaultPaint, =, defaultPaint, ;]
[lowerBound, =, lowerBound, ;, this, ., upperBound, =, upperBound, ;, this, ., defaultPaint, =, defaultPaint, ;, this, ., lookupTable, =]
[., lookupTable, =, new, java, ., util, ., ArrayList, (, ), ;, }, public, Paint, getDefaultPaint, (, ), {, return]
[., lookupTable, =, new, java, ., util, ., ArrayList, (, ), ;, }, public, Paint, getDefaultPaint, (, ), {, return]
[}, public, Paint, getDefaultPaint, (, ), {, return, this, ., defaultPaint, ;, }, public, double, getLowerBound, (, ), {, return]
[}, public, Paint, getDefaultPaint, (, ), {, return, this, ., defaultPaint, ;, }, public, double, getLowerBound, (, ), {, return]
[}, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, double, getUpperBound, (, ), {, return]
[}, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, double, getUpperBound, (, ), {, return]
[return, this, ., upperBound, ;, }, public, void, add, (, double, value, ,, Paint, paint, ), {, PaintItem, item, =]
[upperBound, ;, }, public, void, add, (, double, value, ,, Paint, paint, ), {, PaintItem, item, =, new, PaintItem, (]
[}, public, void, add, (, double, value, ,, Paint, paint, ), {, PaintItem, item, =, new, PaintItem, (, value, ,]
[value, ,, Paint, paint, ), {, PaintItem, item, =, new, PaintItem, (, value, ,, paint, ), ;, int, index, =]
[value, ,, Paint, paint, ), {, PaintItem, item, =, new, PaintItem, (, value, ,, paint, ), ;, int, index, =]
[), {, PaintItem, item, =, new, PaintItem, (, value, ,, paint, ), ;, int, index, =, Collections, ., binarySearch, (]
[), {, PaintItem, item, =, new, PaintItem, (, value, ,, paint, ), ;, int, index, =, Collections, ., binarySearch, (]
[=, new, PaintItem, (, value, ,, paint, ), ;, int, index, =, Collections, ., binarySearch, (, this, ., lookupTable, ,]
[,, paint, ), ;, int, index, =, Collections, ., binarySearch, (, this, ., lookupTable, ,, item, ), ;, if, (]
[,, paint, ), ;, int, index, =, Collections, ., binarySearch, (, this, ., lookupTable, ,, item, ), ;, if, (]
[), ;, int, index, =, Collections, ., binarySearch, (, this, ., lookupTable, ,, item, ), ;, if, (, index, >=]
[index, =, Collections, ., binarySearch, (, this, ., lookupTable, ,, item, ), ;, if, (, index, >=, 0, ), {]
[index, =, Collections, ., binarySearch, (, this, ., lookupTable, ,, item, ), ;, if, (, index, >=, 0, ), {]
[index, =, Collections, ., binarySearch, (, this, ., lookupTable, ,, item, ), ;, if, (, index, >=, 0, ), {]
[this, ., lookupTable, ,, item, ), ;, if, (, index, >=, 0, ), {, this, ., lookupTable, ., set, (]
[lookupTable, ,, item, ), ;, if, (, index, >=, 0, ), {, this, ., lookupTable, ., set, (, index, ,]
[(, index, >=, 0, ), {, this, ., lookupTable, ., set, (, index, ,, item, ), ;, }, else, {]
[(, index, >=, 0, ), {, this, ., lookupTable, ., set, (, index, ,, item, ), ;, }, else, {]
[(, index, >=, 0, ), {, this, ., lookupTable, ., set, (, index, ,, item, ), ;, }, else, {]
[this, ., lookupTable, ., set, (, index, ,, item, ), ;, }, else, {, this, ., lookupTable, ., add, (]
[., lookupTable, ., set, (, index, ,, item, ), ;, }, else, {, this, ., lookupTable, ., add, (, -]
[lookupTable, ., set, (, index, ,, item, ), ;, }, else, {, this, ., lookupTable, ., add, (, -, (]
[lookupTable, ., set, (, index, ,, item, ), ;, }, else, {, this, ., lookupTable, ., add, (, -, (]
[set, (, index, ,, item, ), ;, }, else, {, this, ., lookupTable, ., add, (, -, (, index, +]
[,, item, ), ;, }, else, {, this, ., lookupTable, ., add, (, -, (, index, +, 1, ), ,]
[index, +, 1, ), ,, item, ), ;, }, }, public, Paint, getPaint, (, double, value, ), {, if, (]
[index, +, 1, ), ,, item, ), ;, }, }, public, Paint, getPaint, (, double, value, ), {, if, (]
[1, ), ,, item, ), ;, }, }, public, Paint, getPaint, (, double, value, ), {, if, (, value, <]
[1, ), ,, item, ), ;, }, }, public, Paint, getPaint, (, double, value, ), {, if, (, value, <]
[}, }, public, Paint, getPaint, (, double, value, ), {, if, (, value, <, this, ., lowerBound, ), {, return]
[}, }, public, Paint, getPaint, (, double, value, ), {, if, (, value, <, this, ., lowerBound, ), {, return]
[value, ), {, if, (, value, <, this, ., lowerBound, ), {, return, this, ., defaultPaint, ;, }, if, (]
[value, ), {, if, (, value, <, this, ., lowerBound, ), {, return, this, ., defaultPaint, ;, }, if, (]
[{, if, (, value, <, this, ., lowerBound, ), {, return, this, ., defaultPaint, ;, }, if, (, value, >]
[{, if, (, value, <, this, ., lowerBound, ), {, return, this, ., defaultPaint, ;, }, if, (, value, >]
[., lowerBound, ), {, return, this, ., defaultPaint, ;, }, if, (, value, >, this, ., upperBound, ), {, return]
[., lowerBound, ), {, return, this, ., defaultPaint, ;, }, if, (, value, >, this, ., upperBound, ), {, return]
[;, }, if, (, value, >, this, ., upperBound, ), {, return, this, ., defaultPaint, ;, }, int, count, =]
[;, }, if, (, value, >, this, ., upperBound, ), {, return, this, ., defaultPaint, ;, }, int, count, =]
[;, }, if, (, value, >, this, ., upperBound, ), {, return, this, ., defaultPaint, ;, }, int, count, =]
[{, return, this, ., defaultPaint, ;, }, int, count, =, this, ., lookupTable, ., size, (, ), ;, if, (]
[{, return, this, ., defaultPaint, ;, }, int, count, =, this, ., lookupTable, ., size, (, ), ;, if, (]
[this, ., defaultPaint, ;, }, int, count, =, this, ., lookupTable, ., size, (, ), ;, if, (, count, ==]
[}, int, count, =, this, ., lookupTable, ., size, (, ), ;, if, (, count, ==, 0, ), {, return]
[}, int, count, =, this, ., lookupTable, ., size, (, ), ;, if, (, count, ==, 0, ), {, return]
[size, (, ), ;, if, (, count, ==, 0, ), {, return, this, ., defaultPaint, ;, }, PaintItem, item, =]
[;, if, (, count, ==, 0, ), {, return, this, ., defaultPaint, ;, }, PaintItem, item, =, (, PaintItem, )]
[;, if, (, count, ==, 0, ), {, return, this, ., defaultPaint, ;, }, PaintItem, item, =, (, PaintItem, )]
[;, if, (, count, ==, 0, ), {, return, this, ., defaultPaint, ;, }, PaintItem, item, =, (, PaintItem, )]
[), {, return, this, ., defaultPaint, ;, }, PaintItem, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (]
[defaultPaint, ;, }, PaintItem, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, 0, ), ;, if, (]
[defaultPaint, ;, }, PaintItem, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, 0, ), ;, if, (]
[}, PaintItem, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, 0, ), ;, if, (, value, <]
[}, PaintItem, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, 0, ), ;, if, (, value, <]
[), this, ., lookupTable, ., get, (, 0, ), ;, if, (, value, <, item, ., value, ), {, return]
[), this, ., lookupTable, ., get, (, 0, ), ;, if, (, value, <, item, ., value, ), {, return]
[), ;, if, (, value, <, item, ., value, ), {, return, this, ., defaultPaint, ;, }, int, low, =]
[<, item, ., value, ), {, return, this, ., defaultPaint, ;, }, int, low, =, 0, ;, int, high, =]
[<, item, ., value, ), {, return, this, ., defaultPaint, ;, }, int, low, =, 0, ;, int, high, =]
[<, item, ., value, ), {, return, this, ., defaultPaint, ;, }, int, low, =, 0, ;, int, high, =]
[<, item, ., value, ), {, return, this, ., defaultPaint, ;, }, int, low, =, 0, ;, int, high, =]
[., defaultPaint, ;, }, int, low, =, 0, ;, int, high, =, this, ., lookupTable, ., size, (, ), -]
[int, low, =, 0, ;, int, high, =, this, ., lookupTable, ., size, (, ), -, 1, ;, while, (]
[int, low, =, 0, ;, int, high, =, this, ., lookupTable, ., size, (, ), -, 1, ;, while, (]
[int, low, =, 0, ;, int, high, =, this, ., lookupTable, ., size, (, ), -, 1, ;, while, (]
[=, 0, ;, int, high, =, this, ., lookupTable, ., size, (, ), -, 1, ;, while, (, high, -]
[;, int, high, =, this, ., lookupTable, ., size, (, ), -, 1, ;, while, (, high, -, low, >]
[lookupTable, ., size, (, ), -, 1, ;, while, (, high, -, low, >, 1, ), {, int, current, =]
[lookupTable, ., size, (, ), -, 1, ;, while, (, high, -, low, >, 1, ), {, int, current, =]
[., size, (, ), -, 1, ;, while, (, high, -, low, >, 1, ), {, int, current, =, (]
[., size, (, ), -, 1, ;, while, (, high, -, low, >, 1, ), {, int, current, =, (]
[(, ), -, 1, ;, while, (, high, -, low, >, 1, ), {, int, current, =, (, low, +]
[1, ;, while, (, high, -, low, >, 1, ), {, int, current, =, (, low, +, high, ), /]
[while, (, high, -, low, >, 1, ), {, int, current, =, (, low, +, high, ), /, 2, ;]
[high, -, low, >, 1, ), {, int, current, =, (, low, +, high, ), /, 2, ;, item, =]
[>, 1, ), {, int, current, =, (, low, +, high, ), /, 2, ;, item, =, (, PaintItem, )]
[>, 1, ), {, int, current, =, (, low, +, high, ), /, 2, ;, item, =, (, PaintItem, )]
[>, 1, ), {, int, current, =, (, low, +, high, ), /, 2, ;, item, =, (, PaintItem, )]
[=, (, low, +, high, ), /, 2, ;, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (]
[), /, 2, ;, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, current, ), ;, if, (]
[), /, 2, ;, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, current, ), ;, if, (]
[2, ;, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, current, ), ;, if, (, value, >=]
[2, ;, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, current, ), ;, if, (, value, >=]
[PaintItem, ), this, ., lookupTable, ., get, (, current, ), ;, if, (, value, >=, item, ., value, ), {]
[this, ., lookupTable, ., get, (, current, ), ;, if, (, value, >=, item, ., value, ), {, low, =]
[(, current, ), ;, if, (, value, >=, item, ., value, ), {, low, =, current, ;, }, else, {]
[), ;, if, (, value, >=, item, ., value, ), {, low, =, current, ;, }, else, {, high, =]
[item, ., value, ), {, low, =, current, ;, }, else, {, high, =, current, ;, }, }, if, (]
[item, ., value, ), {, low, =, current, ;, }, else, {, high, =, current, ;, }, }, if, (]
[value, ), {, low, =, current, ;, }, else, {, high, =, current, ;, }, }, if, (, high, >]
[low, =, current, ;, }, else, {, high, =, current, ;, }, }, if, (, high, >, low, ), {]
[current, ;, }, else, {, high, =, current, ;, }, }, if, (, high, >, low, ), {, item, =]
[else, {, high, =, current, ;, }, }, if, (, high, >, low, ), {, item, =, (, PaintItem, )]
[else, {, high, =, current, ;, }, }, if, (, high, >, low, ), {, item, =, (, PaintItem, )]
[else, {, high, =, current, ;, }, }, if, (, high, >, low, ), {, item, =, (, PaintItem, )]
[}, }, if, (, high, >, low, ), {, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (]
[>, low, ), {, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, high, ), ;, if, (]
[>, low, ), {, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, high, ), ;, if, (]
[), {, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, high, ), ;, if, (, value, <]
[), {, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, high, ), ;, if, (, value, <]
[PaintItem, ), this, ., lookupTable, ., get, (, high, ), ;, if, (, value, <, item, ., value, ), {]
[this, ., lookupTable, ., get, (, high, ), ;, if, (, value, <, item, ., value, ), {, item, =]
[., get, (, high, ), ;, if, (, value, <, item, ., value, ), {, item, =, (, PaintItem, )]
[., get, (, high, ), ;, if, (, value, <, item, ., value, ), {, item, =, (, PaintItem, )]
[., get, (, high, ), ;, if, (, value, <, item, ., value, ), {, item, =, (, PaintItem, )]
[if, (, value, <, item, ., value, ), {, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (]
[value, ), {, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, low, ), ;, }, }, return]
[), {, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, low, ), ;, }, }, return, (]
[), {, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, low, ), ;, }, }, return, (]
[), {, item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, low, ), ;, }, }, return, (]
[item, =, (, PaintItem, ), this, ., lookupTable, ., get, (, low, ), ;, }, }, return, (, item, !=]
[(, PaintItem, ), this, ., lookupTable, ., get, (, low, ), ;, }, }, return, (, item, !=, null, ?]
[(, PaintItem, ), this, ., lookupTable, ., get, (, low, ), ;, }, }, return, (, item, !=, null, ?]
[., lookupTable, ., get, (, low, ), ;, }, }, return, (, item, !=, null, ?, item, ., paint, :]
[., lookupTable, ., get, (, low, ), ;, }, }, return, (, item, !=, null, ?, item, ., paint, :]
[item, ., paint, :, this, ., defaultPaint, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[item, ., paint, :, this, ., defaultPaint, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[paint, :, this, ., defaultPaint, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[defaultPaint, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, LookupPaintScale, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, LookupPaintScale, ), ), {, return, false, ;, }, LookupPaintScale, that, =]
[if, (, !, (, obj, instanceof, LookupPaintScale, ), ), {, return, false, ;, }, LookupPaintScale, that, =, (, LookupPaintScale, )]
[obj, instanceof, LookupPaintScale, ), ), {, return, false, ;, }, LookupPaintScale, that, =, (, LookupPaintScale, ), obj, ;, if, (]
[obj, instanceof, LookupPaintScale, ), ), {, return, false, ;, }, LookupPaintScale, that, =, (, LookupPaintScale, ), obj, ;, if, (]
[obj, instanceof, LookupPaintScale, ), ), {, return, false, ;, }, LookupPaintScale, that, =, (, LookupPaintScale, ), obj, ;, if, (]
[), {, return, false, ;, }, LookupPaintScale, that, =, (, LookupPaintScale, ), obj, ;, if, (, this, ., lowerBound, !=]
[), {, return, false, ;, }, LookupPaintScale, that, =, (, LookupPaintScale, ), obj, ;, if, (, this, ., lowerBound, !=]
[LookupPaintScale, that, =, (, LookupPaintScale, ), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return]
[), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (]
[(, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=]
[(, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=]
[., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return]
[false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, !]
[this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[that, ., upperBound, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., defaultPaint, ,]
[that, ., upperBound, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., defaultPaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., defaultPaint, ,, that, ., defaultPaint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., defaultPaint, ,, that, ., defaultPaint, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., defaultPaint, ,, that, ., defaultPaint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., defaultPaint, ,, that, ., defaultPaint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., defaultPaint, ,, that, ., defaultPaint, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., defaultPaint, ), ), {, return, false, ;, }, if, (, !, this, ., lookupTable, ., equals, (]
[,, that, ., defaultPaint, ), ), {, return, false, ;, }, if, (, !, this, ., lookupTable, ., equals, (]
[return, false, ;, }, if, (, !, this, ., lookupTable, ., equals, (, that, ., lookupTable, ), ), {, return]
[if, (, !, this, ., lookupTable, ., equals, (, that, ., lookupTable, ), ), {, return, false, ;, }, return]
[{, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, LookupPaintScale, clone, =]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, LookupPaintScale, clone, =, (, LookupPaintScale, )]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, LookupPaintScale, clone, =, (, LookupPaintScale, )]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, LookupPaintScale, clone, =, (, LookupPaintScale, ), super, ., clone, (, ), ;]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, LookupPaintScale, clone, =, (, LookupPaintScale, ), super, ., clone, (, ), ;]
[), throws, CloneNotSupportedException, {, LookupPaintScale, clone, =, (, LookupPaintScale, ), super, ., clone, (, ), ;, clone, ., lookupTable, =]
[(, LookupPaintScale, ), super, ., clone, (, ), ;, clone, ., lookupTable, =, new, java, ., util, ., ArrayList, (]
[(, LookupPaintScale, ), super, ., clone, (, ), ;, clone, ., lookupTable, =, new, java, ., util, ., ArrayList, (]
[(, ), ;, clone, ., lookupTable, =, new, java, ., util, ., ArrayList, (, this, ., lookupTable, ), ;, return]
[(, this, ., lookupTable, ), ;, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[(, this, ., lookupTable, ), ;, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., defaultPaint, ,]
[this, ., defaultPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[this, ., defaultPaint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., defaultPaint, =]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., defaultPaint, =]
[), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., defaultPaint, =, SerialUtilities, ., readPaint, (]
