[;, protected, ISOPeriodFormat, (, ), {, super, (, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (]
[;, protected, ISOPeriodFormat, (, ), {, super, (, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (]
[ISOPeriodFormat, (, ), {, super, (, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==]
[{, super, (, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[(, ), ;, }, public, static, PeriodFormatter, standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =]
[standard, (, ), {, if, (, cStandard, ==, null, ), {, cStandard, =, new, PeriodFormatterBuilder, (, ), ., appendLiteral, (]
[), {, cStandard, =, new, PeriodFormatterBuilder, (, ), ., appendLiteral, (, "P", ), ., appendYears, (, ), ., appendSuffix, (]
[appendLiteral, (, "P", ), ., appendYears, (, ), ., appendSuffix, (, "Y", ), ., appendMonths, (, ), ., appendSuffix, (]
[appendSuffix, (, "Y", ), ., appendMonths, (, ), ., appendSuffix, (, "M", ), ., appendWeeks, (, ), ., appendSuffix, (]
[appendSuffix, (, "M", ), ., appendWeeks, (, ), ., appendSuffix, (, "W", ), ., appendDays, (, ), ., appendSuffix, (]
[appendWeeks, (, ), ., appendSuffix, (, "W", ), ., appendDays, (, ), ., appendSuffix, (, "D", ), ., appendSeparatorIfFieldsAfter, (]
[appendDays, (, ), ., appendSuffix, (, "D", ), ., appendSeparatorIfFieldsAfter, (, "T", ), ., appendHours, (, ), ., appendSuffix, (]
[appendSeparatorIfFieldsAfter, (, "T", ), ., appendHours, (, ), ., appendSuffix, (, "H", ), ., appendMinutes, (, ), ., appendSuffix, (]
[appendSuffix, (, "H", ), ., appendMinutes, (, ), ., appendSuffix, (, "M", ), ., appendSecondsWithOptionalMillis, (, ), ., appendSuffix, (]
[appendSuffix, (, "M", ), ., appendSecondsWithOptionalMillis, (, ), ., appendSuffix, (, "S", ), ., toFormatter, (, ), ;, }, return]
[), ., toFormatter, (, ), ;, }, return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (]
[), ., toFormatter, (, ), ;, }, return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (]
[toFormatter, (, ), ;, }, return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==]
[;, }, return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {]
[return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =]
[return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =]
[return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =]
[return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =]
[return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =]
[return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =]
[return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =]
[return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =]
[return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =]
[return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =]
[return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =]
[return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =]
[return, cStandard, ;, }, public, static, PeriodFormatter, alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =]
[alternate, (, ), {, if, (, cAlternate, ==, null, ), {, cAlternate, =, new, PeriodFormatterBuilder, (, ), ., appendLiteral, (]
[), {, cAlternate, =, new, PeriodFormatterBuilder, (, ), ., appendLiteral, (, "P", ), ., printZeroAlways, (, ), ., minimumPrintedDigits, (]
[appendLiteral, (, "P", ), ., printZeroAlways, (, ), ., minimumPrintedDigits, (, 4, ), ., appendYears, (, ), ., minimumPrintedDigits, (]
[., appendYears, (, ), ., minimumPrintedDigits, (, 2, ), ., appendMonths, (, ), ., appendDays, (, ), ., appendSeparatorIfFieldsAfter, (]
[), ., appendHours, (, ), ., appendMinutes, (, ), ., appendSecondsWithOptionalMillis, (, ), ., toFormatter, (, ), ;, }, return]
[), ., toFormatter, (, ), ;, }, return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (]
[), ., toFormatter, (, ), ;, }, return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (]
[toFormatter, (, ), ;, }, return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==]
[;, }, return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[return, cAlternate, ;, }, public, static, PeriodFormatter, alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =]
[alternateExtended, (, ), {, if, (, cAlternateExtended, ==, null, ), {, cAlternateExtended, =, new, PeriodFormatterBuilder, (, ), ., appendLiteral, (]
[), {, cAlternateExtended, =, new, PeriodFormatterBuilder, (, ), ., appendLiteral, (, "P", ), ., printZeroAlways, (, ), ., minimumPrintedDigits, (]
[appendLiteral, (, "P", ), ., printZeroAlways, (, ), ., minimumPrintedDigits, (, 4, ), ., appendYears, (, ), ., appendSeparator, (]
[printZeroAlways, (, ), ., minimumPrintedDigits, (, 4, ), ., appendYears, (, ), ., appendSeparator, (, "-", ), ., minimumPrintedDigits, (]
[appendYears, (, ), ., appendSeparator, (, "-", ), ., minimumPrintedDigits, (, 2, ), ., appendMonths, (, ), ., appendSeparator, (]
[minimumPrintedDigits, (, 2, ), ., appendMonths, (, ), ., appendSeparator, (, "-", ), ., appendDays, (, ), ., appendSeparatorIfFieldsAfter, (]
[appendSeparator, (, "-", ), ., appendDays, (, ), ., appendSeparatorIfFieldsAfter, (, "T", ), ., appendHours, (, ), ., appendSeparator, (]
[appendSeparatorIfFieldsAfter, (, "T", ), ., appendHours, (, ), ., appendSeparator, (, ":", ), ., appendMinutes, (, ), ., appendSeparator, (]
[., appendMinutes, (, ), ., appendSeparator, (, ":", ), ., appendSecondsWithOptionalMillis, (, ), ., toFormatter, (, ), ;, }, return]
[), ., toFormatter, (, ), ;, }, return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (]
[), ., toFormatter, (, ), ;, }, return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (]
[toFormatter, (, ), ;, }, return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==]
[;, }, return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[return, cAlternateExtended, ;, }, public, static, PeriodFormatter, alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =]
[alternateWithWeeks, (, ), {, if, (, cAlternateWithWeeks, ==, null, ), {, cAlternateWithWeeks, =, new, PeriodFormatterBuilder, (, ), ., appendLiteral, (]
[), {, cAlternateWithWeeks, =, new, PeriodFormatterBuilder, (, ), ., appendLiteral, (, "P", ), ., printZeroAlways, (, ), ., minimumPrintedDigits, (]
[appendLiteral, (, "P", ), ., printZeroAlways, (, ), ., minimumPrintedDigits, (, 4, ), ., appendYears, (, ), ., minimumPrintedDigits, (]
[printZeroAlways, (, ), ., minimumPrintedDigits, (, 4, ), ., appendYears, (, ), ., minimumPrintedDigits, (, 2, ), ., appendPrefix, (]
[minimumPrintedDigits, (, 2, ), ., appendPrefix, (, "W", ), ., appendWeeks, (, ), ., appendDays, (, ), ., appendSeparatorIfFieldsAfter, (]
[), ., appendHours, (, ), ., appendMinutes, (, ), ., appendSecondsWithOptionalMillis, (, ), ., toFormatter, (, ), ;, }, return]
[), ., toFormatter, (, ), ;, }, return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (]
[), ., toFormatter, (, ), ;, }, return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (]
[toFormatter, (, ), ;, }, return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==]
[;, }, return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[return, cAlternateWithWeeks, ;, }, public, static, PeriodFormatter, alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =]
[alternateExtendedWithWeeks, (, ), {, if, (, cAlternateExtendedWihWeeks, ==, null, ), {, cAlternateExtendedWihWeeks, =, new, PeriodFormatterBuilder, (, ), ., appendLiteral, (]
[), {, cAlternateExtendedWihWeeks, =, new, PeriodFormatterBuilder, (, ), ., appendLiteral, (, "P", ), ., printZeroAlways, (, ), ., minimumPrintedDigits, (]
[appendLiteral, (, "P", ), ., printZeroAlways, (, ), ., minimumPrintedDigits, (, 4, ), ., appendYears, (, ), ., appendSeparator, (]
[printZeroAlways, (, ), ., minimumPrintedDigits, (, 4, ), ., appendYears, (, ), ., appendSeparator, (, "-", ), ., minimumPrintedDigits, (]
[(, 4, ), ., appendYears, (, ), ., appendSeparator, (, "-", ), ., minimumPrintedDigits, (, 2, ), ., appendPrefix, (]
[(, "-", ), ., minimumPrintedDigits, (, 2, ), ., appendPrefix, (, "W", ), ., appendWeeks, (, ), ., appendSeparator, (]
[appendPrefix, (, "W", ), ., appendWeeks, (, ), ., appendSeparator, (, "-", ), ., appendDays, (, ), ., appendSeparatorIfFieldsAfter, (]
[appendSeparator, (, "-", ), ., appendDays, (, ), ., appendSeparatorIfFieldsAfter, (, "T", ), ., appendHours, (, ), ., appendSeparator, (]
[appendSeparatorIfFieldsAfter, (, "T", ), ., appendHours, (, ), ., appendSeparator, (, ":", ), ., appendMinutes, (, ), ., appendSeparator, (]
[., appendMinutes, (, ), ., appendSeparator, (, ":", ), ., appendSecondsWithOptionalMillis, (, ), ., toFormatter, (, ), ;, }, return]
