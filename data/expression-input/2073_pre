[., time, ., ReadablePartial, ;, public, final, class, UnsupportedDateTimeField, extends, DateTimeField, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[time, ., ReadablePartial, ;, public, final, class, UnsupportedDateTimeField, extends, DateTimeField, implements, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[cCache, ;, public, static, synchronized, UnsupportedDateTimeField, getInstance, (, DateTimeFieldType, type, ,, DurationField, durationField, ), {, UnsupportedDateTimeField, field, ;, if, (]
[cCache, ;, public, static, synchronized, UnsupportedDateTimeField, getInstance, (, DateTimeFieldType, type, ,, DurationField, durationField, ), {, UnsupportedDateTimeField, field, ;, if, (]
[public, static, synchronized, UnsupportedDateTimeField, getInstance, (, DateTimeFieldType, type, ,, DurationField, durationField, ), {, UnsupportedDateTimeField, field, ;, if, (, cCache, ==]
[UnsupportedDateTimeField, getInstance, (, DateTimeFieldType, type, ,, DurationField, durationField, ), {, UnsupportedDateTimeField, field, ;, if, (, cCache, ==, null, ), {]
[(, DateTimeFieldType, type, ,, DurationField, durationField, ), {, UnsupportedDateTimeField, field, ;, if, (, cCache, ==, null, ), {, cCache, =]
[UnsupportedDateTimeField, field, ;, if, (, cCache, ==, null, ), {, cCache, =, new, HashMap, <, DateTimeFieldType, ,, UnsupportedDateTimeField, >, (]
[if, (, cCache, ==, null, ), {, cCache, =, new, HashMap, <, DateTimeFieldType, ,, UnsupportedDateTimeField, >, (, 7, ), ;]
[cCache, ==, null, ), {, cCache, =, new, HashMap, <, DateTimeFieldType, ,, UnsupportedDateTimeField, >, (, 7, ), ;, field, =]
[cCache, =, new, HashMap, <, DateTimeFieldType, ,, UnsupportedDateTimeField, >, (, 7, ), ;, field, =, null, ;, }, else, {]
[new, HashMap, <, DateTimeFieldType, ,, UnsupportedDateTimeField, >, (, 7, ), ;, field, =, null, ;, }, else, {, field, =]
[new, HashMap, <, DateTimeFieldType, ,, UnsupportedDateTimeField, >, (, 7, ), ;, field, =, null, ;, }, else, {, field, =]
[,, UnsupportedDateTimeField, >, (, 7, ), ;, field, =, null, ;, }, else, {, field, =, cCache, ., get, (]
[), ;, field, =, null, ;, }, else, {, field, =, cCache, ., get, (, type, ), ;, if, (]
[), ;, field, =, null, ;, }, else, {, field, =, cCache, ., get, (, type, ), ;, if, (]
[), ;, field, =, null, ;, }, else, {, field, =, cCache, ., get, (, type, ), ;, if, (]
[field, =, null, ;, }, else, {, field, =, cCache, ., get, (, type, ), ;, if, (, field, !=]
[null, ;, }, else, {, field, =, cCache, ., get, (, type, ), ;, if, (, field, !=, null, &&]
[null, ;, }, else, {, field, =, cCache, ., get, (, type, ), ;, if, (, field, !=, null, &&]
[null, ;, }, else, {, field, =, cCache, ., get, (, type, ), ;, if, (, field, !=, null, &&]
[=, cCache, ., get, (, type, ), ;, if, (, field, !=, null, &&, field, ., getDurationField, (, ), !=]
[get, (, type, ), ;, if, (, field, !=, null, &&, field, ., getDurationField, (, ), !=, durationField, ), {]
[type, ), ;, if, (, field, !=, null, &&, field, ., getDurationField, (, ), !=, durationField, ), {, field, =]
[!=, null, &&, field, ., getDurationField, (, ), !=, durationField, ), {, field, =, null, ;, }, }, if, (]
[!=, null, &&, field, ., getDurationField, (, ), !=, durationField, ), {, field, =, null, ;, }, }, if, (]
[&&, field, ., getDurationField, (, ), !=, durationField, ), {, field, =, null, ;, }, }, if, (, field, ==]
[getDurationField, (, ), !=, durationField, ), {, field, =, null, ;, }, }, if, (, field, ==, null, ), {]
[), !=, durationField, ), {, field, =, null, ;, }, }, if, (, field, ==, null, ), {, field, =]
[), {, field, =, null, ;, }, }, if, (, field, ==, null, ), {, field, =, new, UnsupportedDateTimeField, (]
[field, =, null, ;, }, }, if, (, field, ==, null, ), {, field, =, new, UnsupportedDateTimeField, (, type, ,]
[;, }, }, if, (, field, ==, null, ), {, field, =, new, UnsupportedDateTimeField, (, type, ,, durationField, ), ;]
[;, }, }, if, (, field, ==, null, ), {, field, =, new, UnsupportedDateTimeField, (, type, ,, durationField, ), ;]
[(, field, ==, null, ), {, field, =, new, UnsupportedDateTimeField, (, type, ,, durationField, ), ;, cCache, ., put, (]
[==, null, ), {, field, =, new, UnsupportedDateTimeField, (, type, ,, durationField, ), ;, cCache, ., put, (, type, ,]
[=, new, UnsupportedDateTimeField, (, type, ,, durationField, ), ;, cCache, ., put, (, type, ,, field, ), ;, }, return]
[DateTimeFieldType, iType, ;, private, final, DurationField, iDurationField, ;, private, UnsupportedDateTimeField, (, DateTimeFieldType, type, ,, DurationField, durationField, ), {, if, (]
[DateTimeFieldType, iType, ;, private, final, DurationField, iDurationField, ;, private, UnsupportedDateTimeField, (, DateTimeFieldType, type, ,, DurationField, durationField, ), {, if, (]
[DateTimeFieldType, iType, ;, private, final, DurationField, iDurationField, ;, private, UnsupportedDateTimeField, (, DateTimeFieldType, type, ,, DurationField, durationField, ), {, if, (]
[;, private, final, DurationField, iDurationField, ;, private, UnsupportedDateTimeField, (, DateTimeFieldType, type, ,, DurationField, durationField, ), {, if, (, type, ==]
[final, DurationField, iDurationField, ;, private, UnsupportedDateTimeField, (, DateTimeFieldType, type, ,, DurationField, durationField, ), {, if, (, type, ==, null, ||]
[final, DurationField, iDurationField, ;, private, UnsupportedDateTimeField, (, DateTimeFieldType, type, ,, DurationField, durationField, ), {, if, (, type, ==, null, ||]
[iDurationField, ;, private, UnsupportedDateTimeField, (, DateTimeFieldType, type, ,, DurationField, durationField, ), {, if, (, type, ==, null, ||, durationField, ==]
[(, DateTimeFieldType, type, ,, DurationField, durationField, ), {, if, (, type, ==, null, ||, durationField, ==, null, ), {, throw]
[), {, if, (, type, ==, null, ||, durationField, ==, null, ), {, throw, new, IllegalArgumentException, (, ), ;, }]
[if, (, type, ==, null, ||, durationField, ==, null, ), {, throw, new, IllegalArgumentException, (, ), ;, }, iType, =]
[type, ==, null, ||, durationField, ==, null, ), {, throw, new, IllegalArgumentException, (, ), ;, }, iType, =, type, ;]
[null, ||, durationField, ==, null, ), {, throw, new, IllegalArgumentException, (, ), ;, }, iType, =, type, ;, iDurationField, =]
[(, ), ;, }, iType, =, type, ;, iDurationField, =, durationField, ;, }, public, DateTimeFieldType, getType, (, ), {, return]
[durationField, ;, }, public, DateTimeFieldType, getType, (, ), {, return, iType, ;, }, public, String, getName, (, ), {, return]
[durationField, ;, }, public, DateTimeFieldType, getType, (, ), {, return, iType, ;, }, public, String, getName, (, ), {, return]
[String, getName, (, ), {, return, iType, ., getName, (, ), ;, }, public, boolean, isSupported, (, ), {, return]
[), ;, }, public, boolean, isSupported, (, ), {, return, false, ;, }, public, boolean, isLenient, (, ), {, return]
[}, public, boolean, isLenient, (, ), {, return, false, ;, }, public, int, get, (, long, instant, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, String, getAsText, (, long, instant, ,, Locale, locale, ), {, throw]
[,, Locale, locale, ), {, throw, unsupported, (, ), ;, }, public, String, getAsText, (, long, instant, ), {, throw]
[unsupported, (, ), ;, }, public, String, getAsText, (, ReadablePartial, partial, ,, int, fieldValue, ,, Locale, locale, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, String, getAsText, (, ReadablePartial, partial, ,, Locale, locale, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, String, getAsText, (, int, fieldValue, ,, Locale, locale, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, String, getAsShortText, (, long, instant, ,, Locale, locale, ), {, throw]
[,, Locale, locale, ), {, throw, unsupported, (, ), ;, }, public, String, getAsShortText, (, long, instant, ), {, throw]
[unsupported, (, ), ;, }, public, String, getAsShortText, (, ReadablePartial, partial, ,, int, fieldValue, ,, Locale, locale, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, String, getAsShortText, (, ReadablePartial, partial, ,, Locale, locale, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, String, getAsShortText, (, int, fieldValue, ,, Locale, locale, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, return]
[), {, throw, unsupported, (, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, return]
[;, }, public, long, add, (, long, instant, ,, int, value, ), {, return, getDurationField, (, ), ., add, (]
[public, long, add, (, long, instant, ,, int, value, ), {, return, getDurationField, (, ), ., add, (, instant, ,]
[add, (, instant, ,, value, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return]
[add, (, instant, ,, value, ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, return]
[;, }, public, long, add, (, long, instant, ,, long, value, ), {, return, getDurationField, (, ), ., add, (]
[public, long, add, (, long, instant, ,, long, value, ), {, return, getDurationField, (, ), ., add, (, instant, ,]
[[, ], add, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,, int, valueToAdd, ), {, throw]
[[, ], addWrapPartial, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,, int, valueToAdd, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, long, addWrapField, (, long, instant, ,, int, value, ), {, throw]
[[, ], addWrapField, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,, int, valueToAdd, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[), {, throw, unsupported, (, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getDurationField, (, ), ., getDifference, (]
[public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getDurationField, (, ), ., getDifference, (, minuendInstant, ,]
[getDifference, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[getDifference, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return]
[;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getDurationField, (, ), ., getDifferenceAsLong, (]
[public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, return, getDurationField, (, ), ., getDifferenceAsLong, (, minuendInstant, ,]
[getDifferenceAsLong, (, minuendInstant, ,, subtrahendInstant, ), ;, }, public, long, set, (, long, instant, ,, int, value, ), {, throw]
[[, ], set, (, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,, int, newValue, ), {, throw]
[unsupported, (, ), ;, }, public, long, set, (, long, instant, ,, String, text, ,, Locale, locale, ), {, throw]
[), {, throw, unsupported, (, ), ;, }, public, long, set, (, long, instant, ,, String, text, ), {, throw]
[(, ReadablePartial, instant, ,, int, fieldIndex, ,, int, [, ], values, ,, String, text, ,, Locale, locale, ), {, throw]
[String, text, ,, Locale, locale, ), {, throw, unsupported, (, ), ;, }, public, DurationField, getDurationField, (, ), {, return]
[), ;, }, public, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public, DurationField, getRangeDurationField, (, ), {, return]
[}, public, DurationField, getRangeDurationField, (, ), {, return, null, ;, }, public, boolean, isLeap, (, long, instant, ), {, throw]
[(, long, instant, ), {, throw, unsupported, (, ), ;, }, public, int, getLeapAmount, (, long, instant, ), {, throw]
[int, getLeapAmount, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, DurationField, getLeapDurationField, (, ), {, return]
[), ;, }, public, DurationField, getLeapDurationField, (, ), {, return, null, ;, }, public, int, getMinimumValue, (, ), {, throw]
[int, getMinimumValue, (, ), {, throw, unsupported, (, ), ;, }, public, int, getMinimumValue, (, long, instant, ), {, throw]
[(, long, instant, ), {, throw, unsupported, (, ), ;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ), {, throw]
[throw, unsupported, (, ), ;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, throw]
[,, int, [, ], values, ), {, throw, unsupported, (, ), ;, }, public, int, getMaximumValue, (, ), {, throw]
[int, getMaximumValue, (, ), {, throw, unsupported, (, ), ;, }, public, int, getMaximumValue, (, long, instant, ), {, throw]
[(, long, instant, ), {, throw, unsupported, (, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, throw]
[throw, unsupported, (, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, throw]
[[, ], values, ), {, throw, unsupported, (, ), ;, }, public, int, getMaximumTextLength, (, Locale, locale, ), {, throw]
[(, Locale, locale, ), {, throw, unsupported, (, ), ;, }, public, int, getMaximumShortTextLength, (, Locale, locale, ), {, throw]
[(, Locale, locale, ), {, throw, unsupported, (, ), ;, }, public, long, roundFloor, (, long, instant, ), {, throw]
[(, long, instant, ), {, throw, unsupported, (, ), ;, }, public, long, roundCeiling, (, long, instant, ), {, throw]
[(, long, instant, ), {, throw, unsupported, (, ), ;, }, public, long, roundHalfFloor, (, long, instant, ), {, throw]
[(, long, instant, ), {, throw, unsupported, (, ), ;, }, public, long, roundHalfCeiling, (, long, instant, ), {, throw]
[(, long, instant, ), {, throw, unsupported, (, ), ;, }, public, long, roundHalfEven, (, long, instant, ), {, throw]
[(, long, instant, ), {, throw, unsupported, (, ), ;, }, public, long, remainder, (, long, instant, ), {, throw]
[long, remainder, (, long, instant, ), {, throw, unsupported, (, ), ;, }, public, String, toString, (, ), {, return]
[), ;, }, public, String, toString, (, ), {, return, "UnsupportedDateTimeField", ;, }, private, Object, readResolve, (, ), {, return]
[}, public, String, toString, (, ), {, return, "UnsupportedDateTimeField", ;, }, private, Object, readResolve, (, ), {, return, getInstance, (]
[String, toString, (, ), {, return, "UnsupportedDateTimeField", ;, }, private, Object, readResolve, (, ), {, return, getInstance, (, iType, ,]
[readResolve, (, ), {, return, getInstance, (, iType, ,, iDurationField, ), ;, }, private, UnsupportedOperationException, unsupported, (, ), {, return]
[{, return, getInstance, (, iType, ,, iDurationField, ), ;, }, private, UnsupportedOperationException, unsupported, (, ), {, return, new, UnsupportedOperationException, (]
[{, return, getInstance, (, iType, ,, iDurationField, ), ;, }, private, UnsupportedOperationException, unsupported, (, ), {, return, new, UnsupportedOperationException, (]
[getInstance, (, iType, ,, iDurationField, ), ;, }, private, UnsupportedOperationException, unsupported, (, ), {, return, new, UnsupportedOperationException, (, iType, +]
