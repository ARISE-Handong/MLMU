[., data, ., Range, ;, public, class, PaintScaleLegend, extends, Title, implements, AxisChangeListener, ,, PublicCloneable, {, static, final, long, serialVersionUID, =]
[data, ., Range, ;, public, class, PaintScaleLegend, extends, Title, implements, AxisChangeListener, ,, PublicCloneable, {, static, final, long, serialVersionUID, =, -]
[transient, Paint, backgroundPaint, ;, private, int, subdivisions, ;, public, PaintScaleLegend, (, PaintScale, scale, ,, ValueAxis, axis, ), {, if, (]
[transient, Paint, backgroundPaint, ;, private, int, subdivisions, ;, public, PaintScaleLegend, (, PaintScale, scale, ,, ValueAxis, axis, ), {, if, (]
[backgroundPaint, ;, private, int, subdivisions, ;, public, PaintScaleLegend, (, PaintScale, scale, ,, ValueAxis, axis, ), {, if, (, axis, ==]
[subdivisions, ;, public, PaintScaleLegend, (, PaintScale, scale, ,, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw]
[PaintScaleLegend, (, PaintScale, scale, ,, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (]
[,, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }]
[,, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }]
[{, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., scale, =]
[(, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., scale, =, scale, ;]
[(, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., scale, =, scale, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., scale, =, scale, ;, this, ., axis, =]
[throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., scale, =, scale, ;, this, ., axis, =, axis, ;]
[throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., scale, =, scale, ;, this, ., axis, =, axis, ;]
[throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., scale, =, scale, ;, this, ., axis, =, axis, ;]
[;, }, this, ., scale, =, scale, ;, this, ., axis, =, axis, ;, this, ., axis, ., addChangeListener, (]
[., scale, =, scale, ;, this, ., axis, =, axis, ;, this, ., axis, ., addChangeListener, (, this, ), ;]
[., scale, =, scale, ;, this, ., axis, =, axis, ;, this, ., axis, ., addChangeListener, (, this, ), ;]
[;, this, ., axis, =, axis, ;, this, ., axis, ., addChangeListener, (, this, ), ;, this, ., axisLocation, =]
[;, this, ., axis, =, axis, ;, this, ., axis, ., addChangeListener, (, this, ), ;, this, ., axisLocation, =]
[=, axis, ;, this, ., axis, ., addChangeListener, (, this, ), ;, this, ., axisLocation, =, AxisLocation, ., BOTTOM_OR_LEFT, ;]
[=, axis, ;, this, ., axis, ., addChangeListener, (, this, ), ;, this, ., axisLocation, =, AxisLocation, ., BOTTOM_OR_LEFT, ;]
[., axis, ., addChangeListener, (, this, ), ;, this, ., axisLocation, =, AxisLocation, ., BOTTOM_OR_LEFT, ;, this, ., axisOffset, =]
[., addChangeListener, (, this, ), ;, this, ., axisLocation, =, AxisLocation, ., BOTTOM_OR_LEFT, ;, this, ., axisOffset, =, 0.0, ;]
[., addChangeListener, (, this, ), ;, this, ., axisLocation, =, AxisLocation, ., BOTTOM_OR_LEFT, ;, this, ., axisOffset, =, 0.0, ;]
[., addChangeListener, (, this, ), ;, this, ., axisLocation, =, AxisLocation, ., BOTTOM_OR_LEFT, ;, this, ., axisOffset, =, 0.0, ;]
[this, ., axisLocation, =, AxisLocation, ., BOTTOM_OR_LEFT, ;, this, ., axisOffset, =, 0.0, ;, this, ., axis, ., setRange, (]
[this, ., axisLocation, =, AxisLocation, ., BOTTOM_OR_LEFT, ;, this, ., axisOffset, =, 0.0, ;, this, ., axis, ., setRange, (]
[BOTTOM_OR_LEFT, ;, this, ., axisOffset, =, 0.0, ;, this, ., axis, ., setRange, (, scale, ., getLowerBound, (, ), ,]
[BOTTOM_OR_LEFT, ;, this, ., axisOffset, =, 0.0, ;, this, ., axis, ., setRange, (, scale, ., getLowerBound, (, ), ,]
[;, this, ., axis, ., setRange, (, scale, ., getLowerBound, (, ), ,, scale, ., getUpperBound, (, ), ), ;]
[;, this, ., axis, ., setRange, (, scale, ., getLowerBound, (, ), ,, scale, ., getUpperBound, (, ), ), ;]
[., setRange, (, scale, ., getLowerBound, (, ), ,, scale, ., getUpperBound, (, ), ), ;, this, ., stripWidth, =]
[(, scale, ., getLowerBound, (, ), ,, scale, ., getUpperBound, (, ), ), ;, this, ., stripWidth, =, 15.0, ;]
[(, scale, ., getLowerBound, (, ), ,, scale, ., getUpperBound, (, ), ), ;, this, ., stripWidth, =, 15.0, ;]
[(, ), ,, scale, ., getUpperBound, (, ), ), ;, this, ., stripWidth, =, 15.0, ;, this, ., stripOutlineVisible, =]
[,, scale, ., getUpperBound, (, ), ), ;, this, ., stripWidth, =, 15.0, ;, this, ., stripOutlineVisible, =, true, ;]
[,, scale, ., getUpperBound, (, ), ), ;, this, ., stripWidth, =, 15.0, ;, this, ., stripOutlineVisible, =, true, ;]
[(, ), ), ;, this, ., stripWidth, =, 15.0, ;, this, ., stripOutlineVisible, =, true, ;, this, ., stripOutlinePaint, =]
[(, ), ), ;, this, ., stripWidth, =, 15.0, ;, this, ., stripOutlineVisible, =, true, ;, this, ., stripOutlinePaint, =]
[this, ., stripWidth, =, 15.0, ;, this, ., stripOutlineVisible, =, true, ;, this, ., stripOutlinePaint, =, Color, ., gray, ;]
[this, ., stripWidth, =, 15.0, ;, this, ., stripOutlineVisible, =, true, ;, this, ., stripOutlinePaint, =, Color, ., gray, ;]
[15.0, ;, this, ., stripOutlineVisible, =, true, ;, this, ., stripOutlinePaint, =, Color, ., gray, ;, this, ., stripOutlineStroke, =]
[., stripOutlineVisible, =, true, ;, this, ., stripOutlinePaint, =, Color, ., gray, ;, this, ., stripOutlineStroke, =, new, BasicStroke, (]
[true, ;, this, ., stripOutlinePaint, =, Color, ., gray, ;, this, ., stripOutlineStroke, =, new, BasicStroke, (, 0.5f, ), ;]
[true, ;, this, ., stripOutlinePaint, =, Color, ., gray, ;, this, ., stripOutlineStroke, =, new, BasicStroke, (, 0.5f, ), ;]
[stripOutlinePaint, =, Color, ., gray, ;, this, ., stripOutlineStroke, =, new, BasicStroke, (, 0.5f, ), ;, this, ., backgroundPaint, =]
[stripOutlinePaint, =, Color, ., gray, ;, this, ., stripOutlineStroke, =, new, BasicStroke, (, 0.5f, ), ;, this, ., backgroundPaint, =]
[gray, ;, this, ., stripOutlineStroke, =, new, BasicStroke, (, 0.5f, ), ;, this, ., backgroundPaint, =, Color, ., white, ;]
[gray, ;, this, ., stripOutlineStroke, =, new, BasicStroke, (, 0.5f, ), ;, this, ., backgroundPaint, =, Color, ., white, ;]
[stripOutlineStroke, =, new, BasicStroke, (, 0.5f, ), ;, this, ., backgroundPaint, =, Color, ., white, ;, this, ., subdivisions, =]
[backgroundPaint, =, Color, ., white, ;, this, ., subdivisions, =, 100, ;, }, public, PaintScale, getScale, (, ), {, return]
[backgroundPaint, =, Color, ., white, ;, this, ., subdivisions, =, 100, ;, }, public, PaintScale, getScale, (, ), {, return]
[getScale, (, ), {, return, this, ., scale, ;, }, public, void, setScale, (, PaintScale, scale, ), {, if, (]
[getScale, (, ), {, return, this, ., scale, ;, }, public, void, setScale, (, PaintScale, scale, ), {, if, (]
[), {, return, this, ., scale, ;, }, public, void, setScale, (, PaintScale, scale, ), {, if, (, scale, ==]
[., scale, ;, }, public, void, setScale, (, PaintScale, scale, ), {, if, (, scale, ==, null, ), {, throw]
[}, public, void, setScale, (, PaintScale, scale, ), {, if, (, scale, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, PaintScale, scale, ), {, if, (, scale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }]
[(, PaintScale, scale, ), {, if, (, scale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }]
[{, if, (, scale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, this, ., scale, =]
[(, scale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, this, ., scale, =, scale, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, this, ., scale, =, scale, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, this, ., scale, =, scale, ;, notifyListeners, (, new, TitleChangeEvent, (]
[=, scale, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, ValueAxis, getAxis, (, ), {, return]
[=, scale, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, ValueAxis, getAxis, (, ), {, return]
[getAxis, (, ), {, return, this, ., axis, ;, }, public, void, setAxis, (, ValueAxis, axis, ), {, if, (]
[getAxis, (, ), {, return, this, ., axis, ;, }, public, void, setAxis, (, ValueAxis, axis, ), {, if, (]
[), {, return, this, ., axis, ;, }, public, void, setAxis, (, ValueAxis, axis, ), {, if, (, axis, ==]
[., axis, ;, }, public, void, setAxis, (, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw]
[}, public, void, setAxis, (, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }]
[(, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }]
[(, ValueAxis, axis, ), {, if, (, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }]
[(, axis, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., axis, ., removeChangeListener, (]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., axis, ., removeChangeListener, (, this, ), ;]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., axis, ., removeChangeListener, (, this, ), ;]
[new, IllegalArgumentException, (, "Null 'axis' argument.", ), ;, }, this, ., axis, ., removeChangeListener, (, this, ), ;, this, ., axis, =]
[(, "Null 'axis' argument.", ), ;, }, this, ., axis, ., removeChangeListener, (, this, ), ;, this, ., axis, =, axis, ;]
[(, "Null 'axis' argument.", ), ;, }, this, ., axis, ., removeChangeListener, (, this, ), ;, this, ., axis, =, axis, ;]
[(, "Null 'axis' argument.", ), ;, }, this, ., axis, ., removeChangeListener, (, this, ), ;, this, ., axis, =, axis, ;]
[., axis, ., removeChangeListener, (, this, ), ;, this, ., axis, =, axis, ;, this, ., axis, ., addChangeListener, (]
[removeChangeListener, (, this, ), ;, this, ., axis, =, axis, ;, this, ., axis, ., addChangeListener, (, this, ), ;]
[this, ), ;, this, ., axis, =, axis, ;, this, ., axis, ., addChangeListener, (, this, ), ;, notifyListeners, (]
[this, ., axis, =, axis, ;, this, ., axis, ., addChangeListener, (, this, ), ;, notifyListeners, (, new, TitleChangeEvent, (]
[this, ), ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, AxisLocation, getAxisLocation, (, ), {, return]
[this, ), ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, AxisLocation, getAxisLocation, (, ), {, return]
[getAxisLocation, (, ), {, return, this, ., axisLocation, ;, }, public, void, setAxisLocation, (, AxisLocation, location, ), {, if, (]
[getAxisLocation, (, ), {, return, this, ., axisLocation, ;, }, public, void, setAxisLocation, (, AxisLocation, location, ), {, if, (]
[), {, return, this, ., axisLocation, ;, }, public, void, setAxisLocation, (, AxisLocation, location, ), {, if, (, location, ==]
[., axisLocation, ;, }, public, void, setAxisLocation, (, AxisLocation, location, ), {, if, (, location, ==, null, ), {, throw]
[}, public, void, setAxisLocation, (, AxisLocation, location, ), {, if, (, location, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, AxisLocation, location, ), {, if, (, location, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'location' argument.", ), ;, }]
[(, AxisLocation, location, ), {, if, (, location, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'location' argument.", ), ;, }]
[{, if, (, location, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'location' argument.", ), ;, }, this, ., axisLocation, =]
[(, location, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'location' argument.", ), ;, }, this, ., axisLocation, =, location, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'location' argument.", ), ;, }, this, ., axisLocation, =, location, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'location' argument.", ), ;, }, this, ., axisLocation, =, location, ;, notifyListeners, (, new, TitleChangeEvent, (]
[=, location, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, double, getAxisOffset, (, ), {, return]
[=, location, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, double, getAxisOffset, (, ), {, return]
[public, double, getAxisOffset, (, ), {, return, this, ., axisOffset, ;, }, public, void, setAxisOffset, (, double, offset, ), {]
[public, double, getAxisOffset, (, ), {, return, this, ., axisOffset, ;, }, public, void, setAxisOffset, (, double, offset, ), {]
[), {, return, this, ., axisOffset, ;, }, public, void, setAxisOffset, (, double, offset, ), {, this, ., axisOffset, =]
[return, this, ., axisOffset, ;, }, public, void, setAxisOffset, (, double, offset, ), {, this, ., axisOffset, =, offset, ;]
[., axisOffset, ;, }, public, void, setAxisOffset, (, double, offset, ), {, this, ., axisOffset, =, offset, ;, notifyListeners, (]
[}, public, void, setAxisOffset, (, double, offset, ), {, this, ., axisOffset, =, offset, ;, notifyListeners, (, new, TitleChangeEvent, (]
[=, offset, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, double, getStripWidth, (, ), {, return]
[=, offset, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, double, getStripWidth, (, ), {, return]
[public, double, getStripWidth, (, ), {, return, this, ., stripWidth, ;, }, public, void, setStripWidth, (, double, width, ), {]
[public, double, getStripWidth, (, ), {, return, this, ., stripWidth, ;, }, public, void, setStripWidth, (, double, width, ), {]
[), {, return, this, ., stripWidth, ;, }, public, void, setStripWidth, (, double, width, ), {, this, ., stripWidth, =]
[return, this, ., stripWidth, ;, }, public, void, setStripWidth, (, double, width, ), {, this, ., stripWidth, =, width, ;]
[., stripWidth, ;, }, public, void, setStripWidth, (, double, width, ), {, this, ., stripWidth, =, width, ;, notifyListeners, (]
[}, public, void, setStripWidth, (, double, width, ), {, this, ., stripWidth, =, width, ;, notifyListeners, (, new, TitleChangeEvent, (]
[=, width, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, boolean, isStripOutlineVisible, (, ), {, return]
[=, width, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, boolean, isStripOutlineVisible, (, ), {, return]
[public, boolean, isStripOutlineVisible, (, ), {, return, this, ., stripOutlineVisible, ;, }, public, void, setStripOutlineVisible, (, boolean, visible, ), {]
[public, boolean, isStripOutlineVisible, (, ), {, return, this, ., stripOutlineVisible, ;, }, public, void, setStripOutlineVisible, (, boolean, visible, ), {]
[), {, return, this, ., stripOutlineVisible, ;, }, public, void, setStripOutlineVisible, (, boolean, visible, ), {, this, ., stripOutlineVisible, =]
[return, this, ., stripOutlineVisible, ;, }, public, void, setStripOutlineVisible, (, boolean, visible, ), {, this, ., stripOutlineVisible, =, visible, ;]
[., stripOutlineVisible, ;, }, public, void, setStripOutlineVisible, (, boolean, visible, ), {, this, ., stripOutlineVisible, =, visible, ;, notifyListeners, (]
[}, public, void, setStripOutlineVisible, (, boolean, visible, ), {, this, ., stripOutlineVisible, =, visible, ;, notifyListeners, (, new, TitleChangeEvent, (]
[=, visible, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, Paint, getStripOutlinePaint, (, ), {, return]
[=, visible, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, Paint, getStripOutlinePaint, (, ), {, return]
[getStripOutlinePaint, (, ), {, return, this, ., stripOutlinePaint, ;, }, public, void, setStripOutlinePaint, (, Paint, paint, ), {, if, (]
[getStripOutlinePaint, (, ), {, return, this, ., stripOutlinePaint, ;, }, public, void, setStripOutlinePaint, (, Paint, paint, ), {, if, (]
[), {, return, this, ., stripOutlinePaint, ;, }, public, void, setStripOutlinePaint, (, Paint, paint, ), {, if, (, paint, ==]
[., stripOutlinePaint, ;, }, public, void, setStripOutlinePaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[}, public, void, setStripOutlinePaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., stripOutlinePaint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., stripOutlinePaint, =, paint, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., stripOutlinePaint, =, paint, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., stripOutlinePaint, =, paint, ;, notifyListeners, (, new, TitleChangeEvent, (]
[=, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, Stroke, getStripOutlineStroke, (, ), {, return]
[=, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, Stroke, getStripOutlineStroke, (, ), {, return]
[getStripOutlineStroke, (, ), {, return, this, ., stripOutlineStroke, ;, }, public, void, setStripOutlineStroke, (, Stroke, stroke, ), {, if, (]
[getStripOutlineStroke, (, ), {, return, this, ., stripOutlineStroke, ;, }, public, void, setStripOutlineStroke, (, Stroke, stroke, ), {, if, (]
[), {, return, this, ., stripOutlineStroke, ;, }, public, void, setStripOutlineStroke, (, Stroke, stroke, ), {, if, (, stroke, ==]
[., stripOutlineStroke, ;, }, public, void, setStripOutlineStroke, (, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw]
[}, public, void, setStripOutlineStroke, (, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }]
[(, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }]
[{, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., stripOutlineStroke, =]
[(, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., stripOutlineStroke, =, stroke, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., stripOutlineStroke, =, stroke, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., stripOutlineStroke, =, stroke, ;, notifyListeners, (, new, TitleChangeEvent, (]
[=, stroke, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, Paint, getBackgroundPaint, (, ), {, return]
[=, stroke, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, Paint, getBackgroundPaint, (, ), {, return]
[public, Paint, getBackgroundPaint, (, ), {, return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {]
[public, Paint, getBackgroundPaint, (, ), {, return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {]
[), {, return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {, this, ., backgroundPaint, =]
[return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {, this, ., backgroundPaint, =, paint, ;]
[., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {, this, ., backgroundPaint, =, paint, ;, notifyListeners, (]
[}, public, void, setBackgroundPaint, (, Paint, paint, ), {, this, ., backgroundPaint, =, paint, ;, notifyListeners, (, new, TitleChangeEvent, (]
[=, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, int, getSubdivisionCount, (, ), {, return]
[=, paint, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, int, getSubdivisionCount, (, ), {, return]
[getSubdivisionCount, (, ), {, return, this, ., subdivisions, ;, }, public, void, setSubdivisionCount, (, int, count, ), {, if, (]
[getSubdivisionCount, (, ), {, return, this, ., subdivisions, ;, }, public, void, setSubdivisionCount, (, int, count, ), {, if, (]
[), {, return, this, ., subdivisions, ;, }, public, void, setSubdivisionCount, (, int, count, ), {, if, (, count, <=]
[., subdivisions, ;, }, public, void, setSubdivisionCount, (, int, count, ), {, if, (, count, <=, 0, ), {, throw]
[}, public, void, setSubdivisionCount, (, int, count, ), {, if, (, count, <=, 0, ), {, throw, new, IllegalArgumentException, (]
[(, int, count, ), {, if, (, count, <=, 0, ), {, throw, new, IllegalArgumentException, (, "Requires 'count' > 0.", ), ;, }]
[(, int, count, ), {, if, (, count, <=, 0, ), {, throw, new, IllegalArgumentException, (, "Requires 'count' > 0.", ), ;, }]
[{, if, (, count, <=, 0, ), {, throw, new, IllegalArgumentException, (, "Requires 'count' > 0.", ), ;, }, this, ., subdivisions, =]
[(, count, <=, 0, ), {, throw, new, IllegalArgumentException, (, "Requires 'count' > 0.", ), ;, }, this, ., subdivisions, =, count, ;]
[<=, 0, ), {, throw, new, IllegalArgumentException, (, "Requires 'count' > 0.", ), ;, }, this, ., subdivisions, =, count, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Requires 'count' > 0.", ), ;, }, this, ., subdivisions, =, count, ;, notifyListeners, (, new, TitleChangeEvent, (]
[notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, void, axisChanged, (, AxisChangeEvent, event, ), {, if, (]
[notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, void, axisChanged, (, AxisChangeEvent, event, ), {, if, (]
[notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, void, axisChanged, (, AxisChangeEvent, event, ), {, if, (]
[(, this, ), ), ;, }, public, void, axisChanged, (, AxisChangeEvent, event, ), {, if, (, this, ., axis, ==]
[(, this, ), ), ;, }, public, void, axisChanged, (, AxisChangeEvent, event, ), {, if, (, this, ., axis, ==]
[void, axisChanged, (, AxisChangeEvent, event, ), {, if, (, this, ., axis, ==, event, ., getAxis, (, ), ), {]
[(, AxisChangeEvent, event, ), {, if, (, this, ., axis, ==, event, ., getAxis, (, ), ), {, notifyListeners, (]
[), {, if, (, this, ., axis, ==, event, ., getAxis, (, ), ), {, notifyListeners, (, new, TitleChangeEvent, (]
[this, ), ), ;, }, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, RectangleConstraint, cc, =]
[), ;, }, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, RectangleConstraint, cc, =, toContentConstraint, (]
[arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, RectangleConstraint, cc, =, toContentConstraint, (, constraint, ), ;, LengthConstraintType, w, =]
[arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, RectangleConstraint, cc, =, toContentConstraint, (, constraint, ), ;, LengthConstraintType, w, =]
[RectangleConstraint, cc, =, toContentConstraint, (, constraint, ), ;, LengthConstraintType, w, =, cc, ., getWidthConstraintType, (, ), ;, LengthConstraintType, h, =]
[RectangleConstraint, cc, =, toContentConstraint, (, constraint, ), ;, LengthConstraintType, w, =, cc, ., getWidthConstraintType, (, ), ;, LengthConstraintType, h, =]
[w, =, cc, ., getWidthConstraintType, (, ), ;, LengthConstraintType, h, =, cc, ., getHeightConstraintType, (, ), ;, Size2D, contentSize, =]
[getWidthConstraintType, (, ), ;, LengthConstraintType, h, =, cc, ., getHeightConstraintType, (, ), ;, Size2D, contentSize, =, null, ;, if, (]
[getWidthConstraintType, (, ), ;, LengthConstraintType, h, =, cc, ., getHeightConstraintType, (, ), ;, Size2D, contentSize, =, null, ;, if, (]
[), ;, LengthConstraintType, h, =, cc, ., getHeightConstraintType, (, ), ;, Size2D, contentSize, =, null, ;, if, (, w, ==]
[), ;, LengthConstraintType, h, =, cc, ., getHeightConstraintType, (, ), ;, Size2D, contentSize, =, null, ;, if, (, w, ==]
[getHeightConstraintType, (, ), ;, Size2D, contentSize, =, null, ;, if, (, w, ==, LengthConstraintType, ., NONE, ), {, if, (]
[getHeightConstraintType, (, ), ;, Size2D, contentSize, =, null, ;, if, (, w, ==, LengthConstraintType, ., NONE, ), {, if, (]
[), ;, Size2D, contentSize, =, null, ;, if, (, w, ==, LengthConstraintType, ., NONE, ), {, if, (, h, ==]
[), ;, Size2D, contentSize, =, null, ;, if, (, w, ==, LengthConstraintType, ., NONE, ), {, if, (, h, ==]
[null, ;, if, (, w, ==, LengthConstraintType, ., NONE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {]
[if, (, w, ==, LengthConstraintType, ., NONE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =]
[==, LengthConstraintType, ., NONE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, new, Size2D, (]
[), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, contentSize, =, new, Size2D, (, getWidth, (, ), ,]
[), {, contentSize, =, new, Size2D, (, getWidth, (, ), ,, getHeight, (, ), ), ;, }, else, if, (]
[), {, contentSize, =, new, Size2D, (, getWidth, (, ), ,, getHeight, (, ), ), ;, }, else, if, (]
[contentSize, =, new, Size2D, (, getWidth, (, ), ,, getHeight, (, ), ), ;, }, else, if, (, h, ==]
[contentSize, =, new, Size2D, (, getWidth, (, ), ,, getHeight, (, ), ), ;, }, else, if, (, h, ==]
[(, ), ,, getHeight, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw]
[getHeight, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (]
[if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (]
[if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (]
[h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==]
[h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==]
[{, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw]
[RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (]
[(, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (]
[(, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (]
[==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==]
[==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==]
[new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., RANGE, ), {, if, (]
[new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., RANGE, ), {, if, (]
[(, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., RANGE, ), {, if, (, h, ==]
[(, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., RANGE, ), {, if, (, h, ==]
[else, if, (, w, ==, LengthConstraintType, ., RANGE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, throw]
[w, ==, LengthConstraintType, ., RANGE, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (]
[if, (, h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (]
[if, (, h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (]
[h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==]
[h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==]
[), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {]
[throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =]
[RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeRR, (]
["Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeRR, (, g2, ,]
["Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeRR, (, g2, ,]
[(, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeRR, (, g2, ,, cc, ., getWidthRange, (, ), ,]
[(, h, ==, LengthConstraintType, ., RANGE, ), {, contentSize, =, arrangeRR, (, g2, ,, cc, ., getWidthRange, (, ), ,]
[(, g2, ,, cc, ., getWidthRange, (, ), ,, cc, ., getHeightRange, (, ), ), ;, }, else, if, (]
[(, g2, ,, cc, ., getWidthRange, (, ), ,, cc, ., getHeightRange, (, ), ), ;, }, else, if, (]
[,, cc, ., getWidthRange, (, ), ,, cc, ., getHeightRange, (, ), ), ;, }, else, if, (, h, ==]
[,, cc, ., getWidthRange, (, ), ,, cc, ., getHeightRange, (, ), ), ;, }, else, if, (, h, ==]
[,, cc, ., getHeightRange, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw]
[getHeightRange, (, ), ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (]
[(, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (]
[(, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (]
[==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==]
[==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==]
[new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., FIXED, ), {, if, (]
[new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., FIXED, ), {, if, (]
[(, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., FIXED, ), {, if, (, h, ==]
[(, "Not yet implemented.", ), ;, }, }, else, if, (, w, ==, LengthConstraintType, ., FIXED, ), {, if, (, h, ==]
[else, if, (, w, ==, LengthConstraintType, ., FIXED, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, throw]
[w, ==, LengthConstraintType, ., FIXED, ), {, if, (, h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (]
[if, (, h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (]
[if, (, h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (]
[h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==]
[h, ==, LengthConstraintType, ., NONE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==]
[{, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw]
[RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (]
[if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (]
[if, (, h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (]
[h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==]
[h, ==, LengthConstraintType, ., RANGE, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==]
[{, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw]
[RuntimeException, (, "Not yet implemented.", ), ;, }, else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (]
[else, if, (, h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, return]
[h, ==, LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, return, new, Size2D, (]
[LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, return, new, Size2D, (, calculateTotalWidth, (]
[LengthConstraintType, ., FIXED, ), {, throw, new, RuntimeException, (, "Not yet implemented.", ), ;, }, }, return, new, Size2D, (, calculateTotalWidth, (]
[RuntimeException, (, "Not yet implemented.", ), ;, }, }, return, new, Size2D, (, calculateTotalWidth, (, contentSize, ., getWidth, (, ), ), ,]
["Not yet implemented.", ), ;, }, }, return, new, Size2D, (, calculateTotalWidth, (, contentSize, ., getWidth, (, ), ), ,, calculateTotalHeight, (]
["Not yet implemented.", ), ;, }, }, return, new, Size2D, (, calculateTotalWidth, (, contentSize, ., getWidth, (, ), ), ,, calculateTotalHeight, (]
[), ;, }, protected, Size2D, arrangeRR, (, Graphics2D, g2, ,, Range, widthRange, ,, Range, heightRange, ), {, RectangleEdge, position, =]
[(, Graphics2D, g2, ,, Range, widthRange, ,, Range, heightRange, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (]
[(, Graphics2D, g2, ,, Range, widthRange, ,, Range, heightRange, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (]
[(, Graphics2D, g2, ,, Range, widthRange, ,, Range, heightRange, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (]
[g2, ,, Range, widthRange, ,, Range, heightRange, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==]
[g2, ,, Range, widthRange, ,, Range, heightRange, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==]
[,, Range, heightRange, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., TOP, ||]
[,, Range, heightRange, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., TOP, ||]
[heightRange, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., TOP, ||, position, ==]
[heightRange, ), {, RectangleEdge, position, =, getPosition, (, ), ;, if, (, position, ==, RectangleEdge, ., TOP, ||, position, ==]
[), ;, if, (, position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =]
[(, position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, )]
[(, position, ==, RectangleEdge, ., TOP, ||, position, ==, RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, )]
[RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, ), widthRange, ., getUpperBound, (, ), ;, AxisSpace, space, =]
[RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, ), widthRange, ., getUpperBound, (, ), ;, AxisSpace, space, =]
[RectangleEdge, ., BOTTOM, ), {, float, maxWidth, =, (, float, ), widthRange, ., getUpperBound, (, ), ;, AxisSpace, space, =]
[maxWidth, =, (, float, ), widthRange, ., getUpperBound, (, ), ;, AxisSpace, space, =, this, ., axis, ., reserveSpace, (]
[(, float, ), widthRange, ., getUpperBound, (, ), ;, AxisSpace, space, =, this, ., axis, ., reserveSpace, (, g2, ,]
[), widthRange, ., getUpperBound, (, ), ;, AxisSpace, space, =, this, ., axis, ., reserveSpace, (, g2, ,, null, ,]
[), ;, AxisSpace, space, =, this, ., axis, ., reserveSpace, (, g2, ,, null, ,, new, Rectangle2D, ., Double, (]
[AxisSpace, space, =, this, ., axis, ., reserveSpace, (, g2, ,, null, ,, new, Rectangle2D, ., Double, (, 0, ,]
[=, this, ., axis, ., reserveSpace, (, g2, ,, null, ,, new, Rectangle2D, ., Double, (, 0, ,, 0, ,]
[., axis, ., reserveSpace, (, g2, ,, null, ,, new, Rectangle2D, ., Double, (, 0, ,, 0, ,, maxWidth, ,]
[reserveSpace, (, g2, ,, null, ,, new, Rectangle2D, ., Double, (, 0, ,, 0, ,, maxWidth, ,, 100, ), ,]
[reserveSpace, (, g2, ,, null, ,, new, Rectangle2D, ., Double, (, 0, ,, 0, ,, maxWidth, ,, 100, ), ,]
[null, ,, new, Rectangle2D, ., Double, (, 0, ,, 0, ,, maxWidth, ,, 100, ), ,, RectangleEdge, ., BOTTOM, ,]
[., Double, (, 0, ,, 0, ,, maxWidth, ,, 100, ), ,, RectangleEdge, ., BOTTOM, ,, null, ), ;, return]
[0, ,, 0, ,, maxWidth, ,, 100, ), ,, RectangleEdge, ., BOTTOM, ,, null, ), ;, return, new, Size2D, (]
[0, ,, maxWidth, ,, 100, ), ,, RectangleEdge, ., BOTTOM, ,, null, ), ;, return, new, Size2D, (, maxWidth, ,]
[0, ,, maxWidth, ,, 100, ), ,, RectangleEdge, ., BOTTOM, ,, null, ), ;, return, new, Size2D, (, maxWidth, ,]
[0, ,, maxWidth, ,, 100, ), ,, RectangleEdge, ., BOTTOM, ,, null, ), ;, return, new, Size2D, (, maxWidth, ,]
[0, ,, maxWidth, ,, 100, ), ,, RectangleEdge, ., BOTTOM, ,, null, ), ;, return, new, Size2D, (, maxWidth, ,]
[0, ,, maxWidth, ,, 100, ), ,, RectangleEdge, ., BOTTOM, ,, null, ), ;, return, new, Size2D, (, maxWidth, ,]
[100, ), ,, RectangleEdge, ., BOTTOM, ,, null, ), ;, return, new, Size2D, (, maxWidth, ,, this, ., stripWidth, +]
[100, ), ,, RectangleEdge, ., BOTTOM, ,, null, ), ;, return, new, Size2D, (, maxWidth, ,, this, ., stripWidth, +]
[., BOTTOM, ,, null, ), ;, return, new, Size2D, (, maxWidth, ,, this, ., stripWidth, +, this, ., axisOffset, +]
[., BOTTOM, ,, null, ), ;, return, new, Size2D, (, maxWidth, ,, this, ., stripWidth, +, this, ., axisOffset, +]
[return, new, Size2D, (, maxWidth, ,, this, ., stripWidth, +, this, ., axisOffset, +, space, ., getTop, (, ), +]
[return, new, Size2D, (, maxWidth, ,, this, ., stripWidth, +, this, ., axisOffset, +, space, ., getTop, (, ), +]
[., axisOffset, +, space, ., getTop, (, ), +, space, ., getBottom, (, ), ), ;, }, else, if, (]
[., axisOffset, +, space, ., getTop, (, ), +, space, ., getBottom, (, ), ), ;, }, else, if, (]
[., axisOffset, +, space, ., getTop, (, ), +, space, ., getBottom, (, ), ), ;, }, else, if, (]
[+, space, ., getTop, (, ), +, space, ., getBottom, (, ), ), ;, }, else, if, (, position, ==]
[+, space, ., getTop, (, ), +, space, ., getBottom, (, ), ), ;, }, else, if, (, position, ==]
[(, ), +, space, ., getBottom, (, ), ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||]
[(, ), +, space, ., getBottom, (, ), ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||]
[+, space, ., getBottom, (, ), ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==]
[+, space, ., getBottom, (, ), ), ;, }, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==]
[}, else, if, (, position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, float, maxHeight, =]
[(, position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, float, maxHeight, =, (, float, )]
[(, position, ==, RectangleEdge, ., LEFT, ||, position, ==, RectangleEdge, ., RIGHT, ), {, float, maxHeight, =, (, float, )]
[RectangleEdge, ., RIGHT, ), {, float, maxHeight, =, (, float, ), heightRange, ., getUpperBound, (, ), ;, AxisSpace, space, =]
[RectangleEdge, ., RIGHT, ), {, float, maxHeight, =, (, float, ), heightRange, ., getUpperBound, (, ), ;, AxisSpace, space, =]
[RectangleEdge, ., RIGHT, ), {, float, maxHeight, =, (, float, ), heightRange, ., getUpperBound, (, ), ;, AxisSpace, space, =]
[maxHeight, =, (, float, ), heightRange, ., getUpperBound, (, ), ;, AxisSpace, space, =, this, ., axis, ., reserveSpace, (]
[(, float, ), heightRange, ., getUpperBound, (, ), ;, AxisSpace, space, =, this, ., axis, ., reserveSpace, (, g2, ,]
[), heightRange, ., getUpperBound, (, ), ;, AxisSpace, space, =, this, ., axis, ., reserveSpace, (, g2, ,, null, ,]
[), ;, AxisSpace, space, =, this, ., axis, ., reserveSpace, (, g2, ,, null, ,, new, Rectangle2D, ., Double, (]
[AxisSpace, space, =, this, ., axis, ., reserveSpace, (, g2, ,, null, ,, new, Rectangle2D, ., Double, (, 0, ,]
[=, this, ., axis, ., reserveSpace, (, g2, ,, null, ,, new, Rectangle2D, ., Double, (, 0, ,, 0, ,]
[., axis, ., reserveSpace, (, g2, ,, null, ,, new, Rectangle2D, ., Double, (, 0, ,, 0, ,, 100, ,]
[reserveSpace, (, g2, ,, null, ,, new, Rectangle2D, ., Double, (, 0, ,, 0, ,, 100, ,, maxHeight, ), ,]
[reserveSpace, (, g2, ,, null, ,, new, Rectangle2D, ., Double, (, 0, ,, 0, ,, 100, ,, maxHeight, ), ,]
[null, ,, new, Rectangle2D, ., Double, (, 0, ,, 0, ,, 100, ,, maxHeight, ), ,, RectangleEdge, ., RIGHT, ,]
[., Double, (, 0, ,, 0, ,, 100, ,, maxHeight, ), ,, RectangleEdge, ., RIGHT, ,, null, ), ;, return]
[0, ,, 0, ,, 100, ,, maxHeight, ), ,, RectangleEdge, ., RIGHT, ,, null, ), ;, return, new, Size2D, (]
[0, ,, 0, ,, 100, ,, maxHeight, ), ,, RectangleEdge, ., RIGHT, ,, null, ), ;, return, new, Size2D, (]
[0, ,, 0, ,, 100, ,, maxHeight, ), ,, RectangleEdge, ., RIGHT, ,, null, ), ;, return, new, Size2D, (]
[0, ,, 0, ,, 100, ,, maxHeight, ), ,, RectangleEdge, ., RIGHT, ,, null, ), ;, return, new, Size2D, (]
[0, ,, 0, ,, 100, ,, maxHeight, ), ,, RectangleEdge, ., RIGHT, ,, null, ), ;, return, new, Size2D, (]
[100, ,, maxHeight, ), ,, RectangleEdge, ., RIGHT, ,, null, ), ;, return, new, Size2D, (, this, ., stripWidth, +]
[100, ,, maxHeight, ), ,, RectangleEdge, ., RIGHT, ,, null, ), ;, return, new, Size2D, (, this, ., stripWidth, +]
[,, RectangleEdge, ., RIGHT, ,, null, ), ;, return, new, Size2D, (, this, ., stripWidth, +, this, ., axisOffset, +]
[,, RectangleEdge, ., RIGHT, ,, null, ), ;, return, new, Size2D, (, this, ., stripWidth, +, this, ., axisOffset, +]
[), ;, return, new, Size2D, (, this, ., stripWidth, +, this, ., axisOffset, +, space, ., getLeft, (, ), +]
[), ;, return, new, Size2D, (, this, ., stripWidth, +, this, ., axisOffset, +, space, ., getLeft, (, ), +]
[this, ., stripWidth, +, this, ., axisOffset, +, space, ., getLeft, (, ), +, space, ., getRight, (, ), ,]
[+, space, ., getLeft, (, ), +, space, ., getRight, (, ), ,, maxHeight, ), ;, }, else, {, throw]
[getLeft, (, ), +, space, ., getRight, (, ), ,, maxHeight, ), ;, }, else, {, throw, new, RuntimeException, (]
[throw, new, RuntimeException, (, "Unrecognised position.", ), ;, }, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {]
[RuntimeException, (, "Unrecognised position.", ), ;, }, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (]
["Unrecognised position.", ), ;, }, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (, g2, ,]
[;, }, }, public, void, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, draw, (, g2, ,, area, ,]
[), ;, }, public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, Rectangle2D, target, =]
[public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, Rectangle2D, target, =, (, Rectangle2D, )]
[public, Object, draw, (, Graphics2D, g2, ,, Rectangle2D, area, ,, Object, params, ), {, Rectangle2D, target, =, (, Rectangle2D, )]
[,, Rectangle2D, area, ,, Object, params, ), {, Rectangle2D, target, =, (, Rectangle2D, ), area, ., clone, (, ), ;]
[area, ,, Object, params, ), {, Rectangle2D, target, =, (, Rectangle2D, ), area, ., clone, (, ), ;, target, =]
[Object, params, ), {, Rectangle2D, target, =, (, Rectangle2D, ), area, ., clone, (, ), ;, target, =, trimMargin, (]
[target, =, (, Rectangle2D, ), area, ., clone, (, ), ;, target, =, trimMargin, (, target, ), ;, if, (]
[target, =, (, Rectangle2D, ), area, ., clone, (, ), ;, target, =, trimMargin, (, target, ), ;, if, (]
[target, =, (, Rectangle2D, ), area, ., clone, (, ), ;, target, =, trimMargin, (, target, ), ;, if, (]
[), area, ., clone, (, ), ;, target, =, trimMargin, (, target, ), ;, if, (, this, ., backgroundPaint, !=]
[clone, (, ), ;, target, =, trimMargin, (, target, ), ;, if, (, this, ., backgroundPaint, !=, null, ), {]
[clone, (, ), ;, target, =, trimMargin, (, target, ), ;, if, (, this, ., backgroundPaint, !=, null, ), {]
[target, =, trimMargin, (, target, ), ;, if, (, this, ., backgroundPaint, !=, null, ), {, g2, ., setPaint, (]
[target, =, trimMargin, (, target, ), ;, if, (, this, ., backgroundPaint, !=, null, ), {, g2, ., setPaint, (]
[), ;, if, (, this, ., backgroundPaint, !=, null, ), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;]
[), ;, if, (, this, ., backgroundPaint, !=, null, ), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;]
[this, ., backgroundPaint, !=, null, ), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (]
[null, ), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, target, ), ;, }]
[null, ), {, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, target, ), ;, }]
[(, this, ., backgroundPaint, ), ;, g2, ., fill, (, target, ), ;, }, getFrame, (, ), ., draw, (]
[., backgroundPaint, ), ;, g2, ., fill, (, target, ), ;, }, getFrame, (, ), ., draw, (, g2, ,]
[;, g2, ., fill, (, target, ), ;, }, getFrame, (, ), ., draw, (, g2, ,, target, ), ;]
[;, g2, ., fill, (, target, ), ;, }, getFrame, (, ), ., draw, (, g2, ,, target, ), ;]
[;, g2, ., fill, (, target, ), ;, }, getFrame, (, ), ., draw, (, g2, ,, target, ), ;]
[(, ), ., draw, (, g2, ,, target, ), ;, getFrame, (, ), ., getInsets, (, ), ., trim, (]
[draw, (, g2, ,, target, ), ;, getFrame, (, ), ., getInsets, (, ), ., trim, (, target, ), ;]
[g2, ,, target, ), ;, getFrame, (, ), ., getInsets, (, ), ., trim, (, target, ), ;, target, =]
[target, ), ;, getFrame, (, ), ., getInsets, (, ), ., trim, (, target, ), ;, target, =, trimPadding, (]
[., getInsets, (, ), ., trim, (, target, ), ;, target, =, trimPadding, (, target, ), ;, double, base, =]
[., getInsets, (, ), ., trim, (, target, ), ;, target, =, trimPadding, (, target, ), ;, double, base, =]
[., getInsets, (, ), ., trim, (, target, ), ;, target, =, trimPadding, (, target, ), ;, double, base, =]
[=, trimPadding, (, target, ), ;, double, base, =, this, ., axis, ., getLowerBound, (, ), ;, double, increment, =]
[=, trimPadding, (, target, ), ;, double, base, =, this, ., axis, ., getLowerBound, (, ), ;, double, increment, =]
[=, trimPadding, (, target, ), ;, double, base, =, this, ., axis, ., getLowerBound, (, ), ;, double, increment, =]
[=, trimPadding, (, target, ), ;, double, base, =, this, ., axis, ., getLowerBound, (, ), ;, double, increment, =]
[=, trimPadding, (, target, ), ;, double, base, =, this, ., axis, ., getLowerBound, (, ), ;, double, increment, =]
[., getLowerBound, (, ), ;, double, increment, =, this, ., axis, ., getRange, (, ), ., getLength, (, ), /]
[., getLowerBound, (, ), ;, double, increment, =, this, ., axis, ., getRange, (, ), ., getLength, (, ), /]
[=, this, ., axis, ., getRange, (, ), ., getLength, (, ), /, this, ., subdivisions, ;, Rectangle2D, r, =]
[getLength, (, ), /, this, ., subdivisions, ;, Rectangle2D, r, =, new, Rectangle2D, ., Double, (, ), ;, if, (]
[getLength, (, ), /, this, ., subdivisions, ;, Rectangle2D, r, =, new, Rectangle2D, ., Double, (, ), ;, if, (]
[this, ., subdivisions, ;, Rectangle2D, r, =, new, Rectangle2D, ., Double, (, ), ;, if, (, RectangleEdge, ., isTopOrBottom, (]
[., Double, (, ), ;, if, (, RectangleEdge, ., isTopOrBottom, (, getPosition, (, ), ), ), {, RectangleEdge, axisEdge, =]
[., Double, (, ), ;, if, (, RectangleEdge, ., isTopOrBottom, (, getPosition, (, ), ), ), {, RectangleEdge, axisEdge, =]
[;, if, (, RectangleEdge, ., isTopOrBottom, (, getPosition, (, ), ), ), {, RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (]
[;, if, (, RectangleEdge, ., isTopOrBottom, (, getPosition, (, ), ), ), {, RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (]
[., isTopOrBottom, (, getPosition, (, ), ), ), {, RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (, this, ., axisLocation, ,]
[., isTopOrBottom, (, getPosition, (, ), ), ), {, RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (, this, ., axisLocation, ,]
[), {, RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (, this, ., axisLocation, ,, PlotOrientation, ., HORIZONTAL, ), ;, if, (]
[), {, RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (, this, ., axisLocation, ,, PlotOrientation, ., HORIZONTAL, ), ;, if, (]
[RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (, this, ., axisLocation, ,, PlotOrientation, ., HORIZONTAL, ), ;, if, (, axisEdge, ==]
[RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (, this, ., axisLocation, ,, PlotOrientation, ., HORIZONTAL, ), ;, if, (, axisEdge, ==]
[,, PlotOrientation, ., HORIZONTAL, ), ;, if, (, axisEdge, ==, RectangleEdge, ., TOP, ), {, for, (, int, i, =]
[., HORIZONTAL, ), ;, if, (, axisEdge, ==, RectangleEdge, ., TOP, ), {, for, (, int, i, =, 0, ;]
[., HORIZONTAL, ), ;, if, (, axisEdge, ==, RectangleEdge, ., TOP, ), {, for, (, int, i, =, 0, ;]
[), ;, if, (, axisEdge, ==, RectangleEdge, ., TOP, ), {, for, (, int, i, =, 0, ;, i, <]
[), ;, if, (, axisEdge, ==, RectangleEdge, ., TOP, ), {, for, (, int, i, =, 0, ;, i, <]
[axisEdge, ==, RectangleEdge, ., TOP, ), {, for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;]
[axisEdge, ==, RectangleEdge, ., TOP, ), {, for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;]
[for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =]
[for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =]
[int, i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +]
[i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +, (]
[i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +, (]
[0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *]
[subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =]
[subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =]
[subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =]
[double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (]
[i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =]
[i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =]
[i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =]
[p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (]
[this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (, v, ,]
[scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,]
[scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,]
[vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., TOP, ), ;, double, vv1, =]
[vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., TOP, ), ;, double, vv1, =]
[vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., TOP, ), ;, double, vv1, =]
[valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., TOP, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (]
[valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., TOP, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (]
[v, ,, target, ,, RectangleEdge, ., TOP, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +]
[target, ,, RectangleEdge, ., TOP, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +, increment, ,]
[RectangleEdge, ., TOP, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,]
[RectangleEdge, ., TOP, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,]
[this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., TOP, ), ;, double, ww, =]
[this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., TOP, ), ;, double, ww, =]
[this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., TOP, ), ;, double, ww, =]
[valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., TOP, ), ;, double, ww, =, Math, ., abs, (]
[valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., TOP, ), ;, double, ww, =, Math, ., abs, (]
[v, +, increment, ,, target, ,, RectangleEdge, ., TOP, ), ;, double, ww, =, Math, ., abs, (, vv1, -]
[,, target, ,, RectangleEdge, ., TOP, ), ;, double, ww, =, Math, ., abs, (, vv1, -, vv0, ), +]
[,, RectangleEdge, ., TOP, ), ;, double, ww, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;]
[,, RectangleEdge, ., TOP, ), ;, double, ww, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;]
[), ;, double, ww, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (]
[), ;, double, ww, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (]
[=, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (, Math, ., min, (]
[., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (, Math, ., min, (, vv0, ,]
[vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (, Math, ., min, (, vv0, ,, vv1, ), ,]
[vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (, Math, ., min, (, vv0, ,, vv1, ), ,]
[vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (, Math, ., min, (, vv0, ,, vv1, ), ,]
[;, r, ., setRect, (, Math, ., min, (, vv0, ,, vv1, ), ,, target, ., getMaxY, (, ), -]
[;, r, ., setRect, (, Math, ., min, (, vv0, ,, vv1, ), ,, target, ., getMaxY, (, ), -]
[(, Math, ., min, (, vv0, ,, vv1, ), ,, target, ., getMaxY, (, ), -, this, ., stripWidth, ,]
[., min, (, vv0, ,, vv1, ), ,, target, ., getMaxY, (, ), -, this, ., stripWidth, ,, ww, ,]
[., min, (, vv0, ,, vv1, ), ,, target, ., getMaxY, (, ), -, this, ., stripWidth, ,, ww, ,]
[vv1, ), ,, target, ., getMaxY, (, ), -, this, ., stripWidth, ,, ww, ,, this, ., stripWidth, ), ;]
[vv1, ), ,, target, ., getMaxY, (, ), -, this, ., stripWidth, ,, ww, ,, this, ., stripWidth, ), ;]
[., getMaxY, (, ), -, this, ., stripWidth, ,, ww, ,, this, ., stripWidth, ), ;, g2, ., setPaint, (]
[), -, this, ., stripWidth, ,, ww, ,, this, ., stripWidth, ), ;, g2, ., setPaint, (, p, ), ;]
[), -, this, ., stripWidth, ,, ww, ,, this, ., stripWidth, ), ;, g2, ., setPaint, (, p, ), ;]
[stripWidth, ,, ww, ,, this, ., stripWidth, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fill, (]
[stripWidth, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fill, (, r, ), ;, }, if, (]
[setPaint, (, p, ), ;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {]
[setPaint, (, p, ), ;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {]
[;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (]
[;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (]
[r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;]
[r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;]
[if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (]
[if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (]
[), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;]
[), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;]
[setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;, g2, ., draw, (]
[), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (]
[), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (]
[this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,]
[this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,]
[this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,]
[., draw, (, new, Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,, target, ., getMaxY, (, ), -]
[., draw, (, new, Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,, target, ., getMaxY, (, ), -]
[Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,, target, ., getMaxY, (, ), -, this, ., stripWidth, ,]
[Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,, target, ., getMaxY, (, ), -, this, ., stripWidth, ,]
[getMinX, (, ), ,, target, ., getMaxY, (, ), -, this, ., stripWidth, ,, target, ., getWidth, (, ), ,]
[getMinX, (, ), ,, target, ., getMaxY, (, ), -, this, ., stripWidth, ,, target, ., getWidth, (, ), ,]
[(, ), -, this, ., stripWidth, ,, target, ., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }]
[(, ), -, this, ., stripWidth, ,, target, ., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }]
[(, ), -, this, ., stripWidth, ,, target, ., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }]
[,, target, ., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }, this, ., axis, ., draw, (]
[., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., stripWidth, ), ), ;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMaxY, (, ), -]
[., stripWidth, ), ), ;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMaxY, (, ), -]
[;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMaxY, (, ), -, this, ., stripWidth, -]
[;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMaxY, (, ), -, this, ., stripWidth, -]
[axis, ., draw, (, g2, ,, target, ., getMaxY, (, ), -, this, ., stripWidth, -, this, ., axisOffset, ,]
[draw, (, g2, ,, target, ., getMaxY, (, ), -, this, ., stripWidth, -, this, ., axisOffset, ,, target, ,]
[g2, ,, target, ., getMaxY, (, ), -, this, ., stripWidth, -, this, ., axisOffset, ,, target, ,, target, ,]
[g2, ,, target, ., getMaxY, (, ), -, this, ., stripWidth, -, this, ., axisOffset, ,, target, ,, target, ,]
[getMaxY, (, ), -, this, ., stripWidth, -, this, ., axisOffset, ,, target, ,, target, ,, RectangleEdge, ., TOP, ,]
[-, this, ., axisOffset, ,, target, ,, target, ,, RectangleEdge, ., TOP, ,, null, ), ;, }, else, if, (]
[-, this, ., axisOffset, ,, target, ,, target, ,, RectangleEdge, ., TOP, ,, null, ), ;, }, else, if, (]
[., axisOffset, ,, target, ,, target, ,, RectangleEdge, ., TOP, ,, null, ), ;, }, else, if, (, axisEdge, ==]
[., axisOffset, ,, target, ,, target, ,, RectangleEdge, ., TOP, ,, null, ), ;, }, else, if, (, axisEdge, ==]
[,, null, ), ;, }, else, if, (, axisEdge, ==, RectangleEdge, ., BOTTOM, ), {, for, (, int, i, =]
[), ;, }, else, if, (, axisEdge, ==, RectangleEdge, ., BOTTOM, ), {, for, (, int, i, =, 0, ;]
[), ;, }, else, if, (, axisEdge, ==, RectangleEdge, ., BOTTOM, ), {, for, (, int, i, =, 0, ;]
[}, else, if, (, axisEdge, ==, RectangleEdge, ., BOTTOM, ), {, for, (, int, i, =, 0, ;, i, <]
[}, else, if, (, axisEdge, ==, RectangleEdge, ., BOTTOM, ), {, for, (, int, i, =, 0, ;, i, <]
[axisEdge, ==, RectangleEdge, ., BOTTOM, ), {, for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;]
[axisEdge, ==, RectangleEdge, ., BOTTOM, ), {, for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;]
[for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =]
[for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =]
[int, i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +]
[i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +, (]
[i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +, (]
[0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *]
[subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =]
[subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =]
[subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =]
[double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (]
[i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =]
[i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =]
[i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =]
[p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (]
[this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (, v, ,]
[scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,]
[scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,]
[vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., BOTTOM, ), ;, double, vv1, =]
[vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., BOTTOM, ), ;, double, vv1, =]
[vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., BOTTOM, ), ;, double, vv1, =]
[valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., BOTTOM, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (]
[valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., BOTTOM, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (]
[v, ,, target, ,, RectangleEdge, ., BOTTOM, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +]
[target, ,, RectangleEdge, ., BOTTOM, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +, increment, ,]
[RectangleEdge, ., BOTTOM, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,]
[RectangleEdge, ., BOTTOM, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,]
[this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., BOTTOM, ), ;, double, ww, =]
[this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., BOTTOM, ), ;, double, ww, =]
[this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., BOTTOM, ), ;, double, ww, =]
[valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., BOTTOM, ), ;, double, ww, =, Math, ., abs, (]
[valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., BOTTOM, ), ;, double, ww, =, Math, ., abs, (]
[v, +, increment, ,, target, ,, RectangleEdge, ., BOTTOM, ), ;, double, ww, =, Math, ., abs, (, vv1, -]
[,, target, ,, RectangleEdge, ., BOTTOM, ), ;, double, ww, =, Math, ., abs, (, vv1, -, vv0, ), +]
[,, RectangleEdge, ., BOTTOM, ), ;, double, ww, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;]
[,, RectangleEdge, ., BOTTOM, ), ;, double, ww, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;]
[), ;, double, ww, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (]
[), ;, double, ww, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (]
[=, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (, Math, ., min, (]
[., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (, Math, ., min, (, vv0, ,]
[vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (, Math, ., min, (, vv0, ,, vv1, ), ,]
[vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (, Math, ., min, (, vv0, ,, vv1, ), ,]
[;, r, ., setRect, (, Math, ., min, (, vv0, ,, vv1, ), ,, target, ., getMinY, (, ), ,]
[., setRect, (, Math, ., min, (, vv0, ,, vv1, ), ,, target, ., getMinY, (, ), ,, ww, ,]
[., setRect, (, Math, ., min, (, vv0, ,, vv1, ), ,, target, ., getMinY, (, ), ,, ww, ,]
[min, (, vv0, ,, vv1, ), ,, target, ., getMinY, (, ), ,, ww, ,, this, ., stripWidth, ), ;]
[min, (, vv0, ,, vv1, ), ,, target, ., getMinY, (, ), ,, ww, ,, this, ., stripWidth, ), ;]
[vv1, ), ,, target, ., getMinY, (, ), ,, ww, ,, this, ., stripWidth, ), ;, g2, ., setPaint, (]
[target, ., getMinY, (, ), ,, ww, ,, this, ., stripWidth, ), ;, g2, ., setPaint, (, p, ), ;]
[target, ., getMinY, (, ), ,, ww, ,, this, ., stripWidth, ), ;, g2, ., setPaint, (, p, ), ;]
[), ,, ww, ,, this, ., stripWidth, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fill, (]
[stripWidth, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fill, (, r, ), ;, }, if, (]
[setPaint, (, p, ), ;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {]
[setPaint, (, p, ), ;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {]
[;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (]
[;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (]
[r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;]
[r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;]
[if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (]
[if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (]
[), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;]
[), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;]
[setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;, g2, ., draw, (]
[), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (]
[), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (]
[this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,]
[this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,]
[., draw, (, new, Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,, target, ., getMinY, (, ), ,]
[., draw, (, new, Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,, target, ., getMinY, (, ), ,]
[Double, (, target, ., getMinX, (, ), ,, target, ., getMinY, (, ), ,, target, ., getWidth, (, ), ,]
[Double, (, target, ., getMinX, (, ), ,, target, ., getMinY, (, ), ,, target, ., getWidth, (, ), ,]
[,, target, ., getMinY, (, ), ,, target, ., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }]
[,, target, ., getMinY, (, ), ,, target, ., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }]
[,, target, ., getMinY, (, ), ,, target, ., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }]
[,, target, ., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }, this, ., axis, ., draw, (]
[., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., getWidth, (, ), ,, this, ., stripWidth, ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., stripWidth, ), ), ;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMinY, (, ), +]
[., stripWidth, ), ), ;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMinY, (, ), +]
[;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMinY, (, ), +, this, ., stripWidth, +]
[;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMinY, (, ), +, this, ., stripWidth, +]
[axis, ., draw, (, g2, ,, target, ., getMinY, (, ), +, this, ., stripWidth, +, this, ., axisOffset, ,]
[draw, (, g2, ,, target, ., getMinY, (, ), +, this, ., stripWidth, +, this, ., axisOffset, ,, target, ,]
[g2, ,, target, ., getMinY, (, ), +, this, ., stripWidth, +, this, ., axisOffset, ,, target, ,, target, ,]
[g2, ,, target, ., getMinY, (, ), +, this, ., stripWidth, +, this, ., axisOffset, ,, target, ,, target, ,]
[getMinY, (, ), +, this, ., stripWidth, +, this, ., axisOffset, ,, target, ,, target, ,, RectangleEdge, ., BOTTOM, ,]
[axisOffset, ,, target, ,, target, ,, RectangleEdge, ., BOTTOM, ,, null, ), ;, }, }, else, {, RectangleEdge, axisEdge, =]
[axisOffset, ,, target, ,, target, ,, RectangleEdge, ., BOTTOM, ,, null, ), ;, }, }, else, {, RectangleEdge, axisEdge, =]
[target, ,, RectangleEdge, ., BOTTOM, ,, null, ), ;, }, }, else, {, RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (]
[target, ,, RectangleEdge, ., BOTTOM, ,, null, ), ;, }, }, else, {, RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (]
[BOTTOM, ,, null, ), ;, }, }, else, {, RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (, this, ., axisLocation, ,]
[BOTTOM, ,, null, ), ;, }, }, else, {, RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (, this, ., axisLocation, ,]
[else, {, RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (, this, ., axisLocation, ,, PlotOrientation, ., VERTICAL, ), ;, if, (]
[else, {, RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (, this, ., axisLocation, ,, PlotOrientation, ., VERTICAL, ), ;, if, (]
[RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (, this, ., axisLocation, ,, PlotOrientation, ., VERTICAL, ), ;, if, (, axisEdge, ==]
[RectangleEdge, axisEdge, =, Plot, ., resolveRangeAxisLocation, (, this, ., axisLocation, ,, PlotOrientation, ., VERTICAL, ), ;, if, (, axisEdge, ==]
[,, PlotOrientation, ., VERTICAL, ), ;, if, (, axisEdge, ==, RectangleEdge, ., LEFT, ), {, for, (, int, i, =]
[., VERTICAL, ), ;, if, (, axisEdge, ==, RectangleEdge, ., LEFT, ), {, for, (, int, i, =, 0, ;]
[., VERTICAL, ), ;, if, (, axisEdge, ==, RectangleEdge, ., LEFT, ), {, for, (, int, i, =, 0, ;]
[), ;, if, (, axisEdge, ==, RectangleEdge, ., LEFT, ), {, for, (, int, i, =, 0, ;, i, <]
[), ;, if, (, axisEdge, ==, RectangleEdge, ., LEFT, ), {, for, (, int, i, =, 0, ;, i, <]
[axisEdge, ==, RectangleEdge, ., LEFT, ), {, for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;]
[axisEdge, ==, RectangleEdge, ., LEFT, ), {, for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;]
[for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =]
[for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =]
[int, i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +]
[i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +, (]
[i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +, (]
[0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *]
[subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =]
[subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =]
[subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =]
[double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (]
[i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =]
[i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =]
[i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =]
[p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (]
[this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (, v, ,]
[scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,]
[scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,]
[vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =]
[vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =]
[vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =]
[valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (]
[valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (]
[v, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +]
[target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +, increment, ,]
[RectangleEdge, ., LEFT, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,]
[RectangleEdge, ., LEFT, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,]
[this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =]
[this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =]
[this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =]
[valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =, Math, ., abs, (]
[valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =, Math, ., abs, (]
[v, +, increment, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =, Math, ., abs, (, vv1, -]
[,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =, Math, ., abs, (, vv1, -, vv0, ), +]
[,, RectangleEdge, ., LEFT, ), ;, double, hh, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;]
[,, RectangleEdge, ., LEFT, ), ;, double, hh, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;]
[), ;, double, hh, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (]
[), ;, double, hh, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (]
[), ;, double, hh, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (]
[., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (, target, ., getMaxX, (, ), -]
[., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (, target, ., getMaxX, (, ), -]
[-, vv0, ), +, 1.0, ;, r, ., setRect, (, target, ., getMaxX, (, ), -, this, ., stripWidth, ,]
[-, vv0, ), +, 1.0, ;, r, ., setRect, (, target, ., getMaxX, (, ), -, this, ., stripWidth, ,]
[1.0, ;, r, ., setRect, (, target, ., getMaxX, (, ), -, this, ., stripWidth, ,, Math, ., min, (]
[r, ., setRect, (, target, ., getMaxX, (, ), -, this, ., stripWidth, ,, Math, ., min, (, vv0, ,]
[(, target, ., getMaxX, (, ), -, this, ., stripWidth, ,, Math, ., min, (, vv0, ,, vv1, ), ,]
[(, target, ., getMaxX, (, ), -, this, ., stripWidth, ,, Math, ., min, (, vv0, ,, vv1, ), ,]
[(, ), -, this, ., stripWidth, ,, Math, ., min, (, vv0, ,, vv1, ), ,, this, ., stripWidth, ,]
[this, ., stripWidth, ,, Math, ., min, (, vv0, ,, vv1, ), ,, this, ., stripWidth, ,, hh, ), ;]
[this, ., stripWidth, ,, Math, ., min, (, vv0, ,, vv1, ), ,, this, ., stripWidth, ,, hh, ), ;]
[Math, ., min, (, vv0, ,, vv1, ), ,, this, ., stripWidth, ,, hh, ), ;, g2, ., setPaint, (]
[(, vv0, ,, vv1, ), ,, this, ., stripWidth, ,, hh, ), ;, g2, ., setPaint, (, p, ), ;]
[(, vv0, ,, vv1, ), ,, this, ., stripWidth, ,, hh, ), ;, g2, ., setPaint, (, p, ), ;]
[), ,, this, ., stripWidth, ,, hh, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fill, (]
[hh, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fill, (, r, ), ;, }, if, (]
[setPaint, (, p, ), ;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {]
[setPaint, (, p, ), ;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {]
[;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (]
[;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (]
[r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;]
[r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;]
[if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (]
[if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (]
[), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;]
[), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;]
[setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;, g2, ., draw, (]
[), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (]
[), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (]
[), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (]
[this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, target, ., getMaxX, (, ), -]
[this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, target, ., getMaxX, (, ), -]
[;, g2, ., draw, (, new, Rectangle2D, ., Double, (, target, ., getMaxX, (, ), -, this, ., stripWidth, ,]
[;, g2, ., draw, (, new, Rectangle2D, ., Double, (, target, ., getMaxX, (, ), -, this, ., stripWidth, ,]
[Rectangle2D, ., Double, (, target, ., getMaxX, (, ), -, this, ., stripWidth, ,, target, ., getMinY, (, ), ,]
[Rectangle2D, ., Double, (, target, ., getMaxX, (, ), -, this, ., stripWidth, ,, target, ., getMinY, (, ), ,]
[target, ., getMaxX, (, ), -, this, ., stripWidth, ,, target, ., getMinY, (, ), ,, this, ., stripWidth, ,]
[target, ., getMaxX, (, ), -, this, ., stripWidth, ,, target, ., getMinY, (, ), ,, this, ., stripWidth, ,]
[,, target, ., getMinY, (, ), ,, this, ., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }]
[,, target, ., getMinY, (, ), ,, this, ., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }]
[,, target, ., getMinY, (, ), ,, this, ., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }]
[,, this, ., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }, this, ., axis, ., draw, (]
[., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[(, ), ), ), ;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMaxX, (, ), -]
[(, ), ), ), ;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMaxX, (, ), -]
[;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMaxX, (, ), -, this, ., stripWidth, -]
[;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMaxX, (, ), -, this, ., stripWidth, -]
[axis, ., draw, (, g2, ,, target, ., getMaxX, (, ), -, this, ., stripWidth, -, this, ., axisOffset, ,]
[draw, (, g2, ,, target, ., getMaxX, (, ), -, this, ., stripWidth, -, this, ., axisOffset, ,, target, ,]
[g2, ,, target, ., getMaxX, (, ), -, this, ., stripWidth, -, this, ., axisOffset, ,, target, ,, target, ,]
[g2, ,, target, ., getMaxX, (, ), -, this, ., stripWidth, -, this, ., axisOffset, ,, target, ,, target, ,]
[getMaxX, (, ), -, this, ., stripWidth, -, this, ., axisOffset, ,, target, ,, target, ,, RectangleEdge, ., LEFT, ,]
[-, this, ., axisOffset, ,, target, ,, target, ,, RectangleEdge, ., LEFT, ,, null, ), ;, }, else, if, (]
[-, this, ., axisOffset, ,, target, ,, target, ,, RectangleEdge, ., LEFT, ,, null, ), ;, }, else, if, (]
[., axisOffset, ,, target, ,, target, ,, RectangleEdge, ., LEFT, ,, null, ), ;, }, else, if, (, axisEdge, ==]
[., axisOffset, ,, target, ,, target, ,, RectangleEdge, ., LEFT, ,, null, ), ;, }, else, if, (, axisEdge, ==]
[,, null, ), ;, }, else, if, (, axisEdge, ==, RectangleEdge, ., RIGHT, ), {, for, (, int, i, =]
[), ;, }, else, if, (, axisEdge, ==, RectangleEdge, ., RIGHT, ), {, for, (, int, i, =, 0, ;]
[), ;, }, else, if, (, axisEdge, ==, RectangleEdge, ., RIGHT, ), {, for, (, int, i, =, 0, ;]
[}, else, if, (, axisEdge, ==, RectangleEdge, ., RIGHT, ), {, for, (, int, i, =, 0, ;, i, <]
[}, else, if, (, axisEdge, ==, RectangleEdge, ., RIGHT, ), {, for, (, int, i, =, 0, ;, i, <]
[axisEdge, ==, RectangleEdge, ., RIGHT, ), {, for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;]
[axisEdge, ==, RectangleEdge, ., RIGHT, ), {, for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;]
[for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =]
[for, (, int, i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =]
[int, i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +]
[i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +, (]
[i, =, 0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +, (]
[0, ;, i, <, this, ., subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *]
[subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =]
[subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =]
[subdivisions, ;, i, ++, ), {, double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =]
[double, v, =, base, +, (, i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (]
[i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =]
[i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =]
[i, *, increment, ), ;, Paint, p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =]
[p, =, this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (]
[this, ., scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (, v, ,]
[scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,]
[scale, ., getPaint, (, v, ), ;, double, vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,]
[vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =]
[vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =]
[vv0, =, this, ., axis, ., valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =]
[valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (]
[valueToJava2D, (, v, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (]
[v, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +]
[target, ,, RectangleEdge, ., LEFT, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +, increment, ,]
[RectangleEdge, ., LEFT, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,]
[RectangleEdge, ., LEFT, ), ;, double, vv1, =, this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,]
[this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =]
[this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =]
[this, ., axis, ., valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =]
[valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =, Math, ., abs, (]
[valueToJava2D, (, v, +, increment, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =, Math, ., abs, (]
[v, +, increment, ,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =, Math, ., abs, (, vv1, -]
[,, target, ,, RectangleEdge, ., LEFT, ), ;, double, hh, =, Math, ., abs, (, vv1, -, vv0, ), +]
[,, RectangleEdge, ., LEFT, ), ;, double, hh, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;]
[,, RectangleEdge, ., LEFT, ), ;, double, hh, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;]
[), ;, double, hh, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (]
[), ;, double, hh, =, Math, ., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (]
[., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (, target, ., getMinX, (, ), ,]
[., abs, (, vv1, -, vv0, ), +, 1.0, ;, r, ., setRect, (, target, ., getMinX, (, ), ,]
[-, vv0, ), +, 1.0, ;, r, ., setRect, (, target, ., getMinX, (, ), ,, Math, ., min, (]
[), +, 1.0, ;, r, ., setRect, (, target, ., getMinX, (, ), ,, Math, ., min, (, vv0, ,]
[;, r, ., setRect, (, target, ., getMinX, (, ), ,, Math, ., min, (, vv0, ,, vv1, ), ,]
[;, r, ., setRect, (, target, ., getMinX, (, ), ,, Math, ., min, (, vv0, ,, vv1, ), ,]
[(, target, ., getMinX, (, ), ,, Math, ., min, (, vv0, ,, vv1, ), ,, this, ., stripWidth, ,]
[getMinX, (, ), ,, Math, ., min, (, vv0, ,, vv1, ), ,, this, ., stripWidth, ,, hh, ), ;]
[getMinX, (, ), ,, Math, ., min, (, vv0, ,, vv1, ), ,, this, ., stripWidth, ,, hh, ), ;]
[Math, ., min, (, vv0, ,, vv1, ), ,, this, ., stripWidth, ,, hh, ), ;, g2, ., setPaint, (]
[(, vv0, ,, vv1, ), ,, this, ., stripWidth, ,, hh, ), ;, g2, ., setPaint, (, p, ), ;]
[(, vv0, ,, vv1, ), ,, this, ., stripWidth, ,, hh, ), ;, g2, ., setPaint, (, p, ), ;]
[), ,, this, ., stripWidth, ,, hh, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fill, (]
[hh, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fill, (, r, ), ;, }, if, (]
[setPaint, (, p, ), ;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {]
[setPaint, (, p, ), ;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {]
[;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (]
[;, g2, ., fill, (, r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (]
[r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;]
[r, ), ;, }, if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;]
[if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (]
[if, (, isStripOutlineVisible, (, ), ), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (]
[), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;]
[), {, g2, ., setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;]
[setPaint, (, this, ., stripOutlinePaint, ), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;, g2, ., draw, (]
[), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (]
[), ;, g2, ., setStroke, (, this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (]
[this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,]
[this, ., stripOutlineStroke, ), ;, g2, ., draw, (, new, Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,]
[., draw, (, new, Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,, target, ., getMinY, (, ), ,]
[., draw, (, new, Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,, target, ., getMinY, (, ), ,]
[Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,, target, ., getMinY, (, ), ,, this, ., stripWidth, ,]
[Rectangle2D, ., Double, (, target, ., getMinX, (, ), ,, target, ., getMinY, (, ), ,, this, ., stripWidth, ,]
[,, target, ., getMinY, (, ), ,, this, ., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }]
[,, target, ., getMinY, (, ), ,, this, ., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }]
[,, target, ., getMinY, (, ), ,, this, ., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }]
[,, this, ., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }, this, ., axis, ., draw, (]
[., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[., stripWidth, ,, target, ., getHeight, (, ), ), ), ;, }, this, ., axis, ., draw, (, g2, ,]
[(, ), ), ), ;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMinX, (, ), +]
[(, ), ), ), ;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMinX, (, ), +]
[;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMinX, (, ), +, this, ., stripWidth, +]
[;, }, this, ., axis, ., draw, (, g2, ,, target, ., getMinX, (, ), +, this, ., stripWidth, +]
[axis, ., draw, (, g2, ,, target, ., getMinX, (, ), +, this, ., stripWidth, +, this, ., axisOffset, ,]
[draw, (, g2, ,, target, ., getMinX, (, ), +, this, ., stripWidth, +, this, ., axisOffset, ,, target, ,]
[g2, ,, target, ., getMinX, (, ), +, this, ., stripWidth, +, this, ., axisOffset, ,, target, ,, target, ,]
[g2, ,, target, ., getMinX, (, ), +, this, ., stripWidth, +, this, ., axisOffset, ,, target, ,, target, ,]
[getMinX, (, ), +, this, ., stripWidth, +, this, ., axisOffset, ,, target, ,, target, ,, RectangleEdge, ., RIGHT, ,]
[stripWidth, +, this, ., axisOffset, ,, target, ,, target, ,, RectangleEdge, ., RIGHT, ,, null, ), ;, }, }, return]
[,, null, ), ;, }, }, return, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[null, ), ;, }, }, return, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, !]
[), ;, }, }, return, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, !, (]
[), ;, }, }, return, null, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, !, (]
[}, public, boolean, equals, (, Object, obj, ), {, if, (, !, (, obj, instanceof, PaintScaleLegend, ), ), {, return]
[obj, ), {, if, (, !, (, obj, instanceof, PaintScaleLegend, ), ), {, return, false, ;, }, PaintScaleLegend, that, =]
[if, (, !, (, obj, instanceof, PaintScaleLegend, ), ), {, return, false, ;, }, PaintScaleLegend, that, =, (, PaintScaleLegend, )]
[obj, instanceof, PaintScaleLegend, ), ), {, return, false, ;, }, PaintScaleLegend, that, =, (, PaintScaleLegend, ), obj, ;, if, (]
[instanceof, PaintScaleLegend, ), ), {, return, false, ;, }, PaintScaleLegend, that, =, (, PaintScaleLegend, ), obj, ;, if, (, !]
[instanceof, PaintScaleLegend, ), ), {, return, false, ;, }, PaintScaleLegend, that, =, (, PaintScaleLegend, ), obj, ;, if, (, !]
[instanceof, PaintScaleLegend, ), ), {, return, false, ;, }, PaintScaleLegend, that, =, (, PaintScaleLegend, ), obj, ;, if, (, !]
[false, ;, }, PaintScaleLegend, that, =, (, PaintScaleLegend, ), obj, ;, if, (, !, this, ., scale, ., equals, (]
[false, ;, }, PaintScaleLegend, that, =, (, PaintScaleLegend, ), obj, ;, if, (, !, this, ., scale, ., equals, (]
[PaintScaleLegend, ), obj, ;, if, (, !, this, ., scale, ., equals, (, that, ., scale, ), ), {, return]
[(, !, this, ., scale, ., equals, (, that, ., scale, ), ), {, return, false, ;, }, if, (]
[!, this, ., scale, ., equals, (, that, ., scale, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., scale, ., equals, (, that, ., scale, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., scale, ., equals, (, that, ., scale, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., scale, ), ), {, return, false, ;, }, if, (, !, this, ., axis, ., equals, (]
[(, that, ., scale, ), ), {, return, false, ;, }, if, (, !, this, ., axis, ., equals, (]
[return, false, ;, }, if, (, !, this, ., axis, ., equals, (, that, ., axis, ), ), {, return]
[(, !, this, ., axis, ., equals, (, that, ., axis, ), ), {, return, false, ;, }, if, (]
[!, this, ., axis, ., equals, (, that, ., axis, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., axis, ., equals, (, that, ., axis, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., axis, ., equals, (, that, ., axis, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., axis, ), ), {, return, false, ;, }, if, (, !, this, ., axisLocation, ., equals, (]
[(, that, ., axis, ), ), {, return, false, ;, }, if, (, !, this, ., axisLocation, ., equals, (]
[return, false, ;, }, if, (, !, this, ., axisLocation, ., equals, (, that, ., axisLocation, ), ), {, return]
[(, !, this, ., axisLocation, ., equals, (, that, ., axisLocation, ), ), {, return, false, ;, }, if, (]
[(, !, this, ., axisLocation, ., equals, (, that, ., axisLocation, ), ), {, return, false, ;, }, if, (]
[(, !, this, ., axisLocation, ., equals, (, that, ., axisLocation, ), ), {, return, false, ;, }, if, (]
[axisLocation, ., equals, (, that, ., axisLocation, ), ), {, return, false, ;, }, if, (, this, ., axisOffset, !=]
[axisLocation, ., equals, (, that, ., axisLocation, ), ), {, return, false, ;, }, if, (, this, ., axisOffset, !=]
[axisLocation, ), ), {, return, false, ;, }, if, (, this, ., axisOffset, !=, that, ., axisOffset, ), {, return]
[false, ;, }, if, (, this, ., axisOffset, !=, that, ., axisOffset, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., axisOffset, !=, that, ., axisOffset, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., axisOffset, !=, that, ., axisOffset, ), {, return, false, ;, }, if, (]
[(, this, ., axisOffset, !=, that, ., axisOffset, ), {, return, false, ;, }, if, (, this, ., stripWidth, !=]
[(, this, ., axisOffset, !=, that, ., axisOffset, ), {, return, false, ;, }, if, (, this, ., stripWidth, !=]
[., axisOffset, ), {, return, false, ;, }, if, (, this, ., stripWidth, !=, that, ., stripWidth, ), {, return]
[false, ;, }, if, (, this, ., stripWidth, !=, that, ., stripWidth, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., stripWidth, !=, that, ., stripWidth, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., stripWidth, !=, that, ., stripWidth, ), {, return, false, ;, }, if, (]
[(, this, ., stripWidth, !=, that, ., stripWidth, ), {, return, false, ;, }, if, (, this, ., stripOutlineVisible, !=]
[(, this, ., stripWidth, !=, that, ., stripWidth, ), {, return, false, ;, }, if, (, this, ., stripOutlineVisible, !=]
[., stripWidth, ), {, return, false, ;, }, if, (, this, ., stripOutlineVisible, !=, that, ., stripOutlineVisible, ), {, return]
[false, ;, }, if, (, this, ., stripOutlineVisible, !=, that, ., stripOutlineVisible, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., stripOutlineVisible, !=, that, ., stripOutlineVisible, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., stripOutlineVisible, !=, that, ., stripOutlineVisible, ), {, return, false, ;, }, if, (, !]
[this, ., stripOutlineVisible, !=, that, ., stripOutlineVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[this, ., stripOutlineVisible, !=, that, ., stripOutlineVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[that, ., stripOutlineVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., stripOutlinePaint, ,]
[that, ., stripOutlineVisible, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., stripOutlinePaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., stripOutlinePaint, ,, that, ., stripOutlinePaint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., stripOutlinePaint, ,, that, ., stripOutlinePaint, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., stripOutlinePaint, ,, that, ., stripOutlinePaint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., stripOutlinePaint, ,, that, ., stripOutlinePaint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., stripOutlinePaint, ,, that, ., stripOutlinePaint, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., stripOutlinePaint, ), ), {, return, false, ;, }, if, (, !, this, ., stripOutlineStroke, ., equals, (]
[,, that, ., stripOutlinePaint, ), ), {, return, false, ;, }, if, (, !, this, ., stripOutlineStroke, ., equals, (]
[return, false, ;, }, if, (, !, this, ., stripOutlineStroke, ., equals, (, that, ., stripOutlineStroke, ), ), {, return]
[(, !, this, ., stripOutlineStroke, ., equals, (, that, ., stripOutlineStroke, ), ), {, return, false, ;, }, if, (]
[!, this, ., stripOutlineStroke, ., equals, (, that, ., stripOutlineStroke, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., stripOutlineStroke, ., equals, (, that, ., stripOutlineStroke, ), ), {, return, false, ;, }, if, (, !]
[., equals, (, that, ., stripOutlineStroke, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., equals, (, that, ., stripOutlineStroke, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., stripOutlineStroke, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,]
[., stripOutlineStroke, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (]
[PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (]
[PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (]
[this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (, this, ., subdivisions, !=]
[this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (, this, ., subdivisions, !=]
[backgroundPaint, ), ), {, return, false, ;, }, if, (, this, ., subdivisions, !=, that, ., subdivisions, ), {, return]
[return, false, ;, }, if, (, this, ., subdivisions, !=, that, ., subdivisions, ), {, return, false, ;, }, return]
[return, false, ;, }, if, (, this, ., subdivisions, !=, that, ., subdivisions, ), {, return, false, ;, }, return]
[if, (, this, ., subdivisions, !=, that, ., subdivisions, ), {, return, false, ;, }, return, super, ., equals, (]
[}, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[}, return, super, ., equals, (, obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[obj, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,]
[throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;]
[throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (]
[;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., stripOutlinePaint, ,]
[writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., stripOutlinePaint, ,, stream, ), ;]
[writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., stripOutlinePaint, ,, stream, ), ;]
[backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., stripOutlinePaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (]
[backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., stripOutlinePaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (]
[;, SerialUtilities, ., writePaint, (, this, ., stripOutlinePaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., stripOutlineStroke, ,]
[this, ., stripOutlineStroke, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[this, ., stripOutlineStroke, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., backgroundPaint, =]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., backgroundPaint, =]
[), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (]
[,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[., defaultReadObject, (, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., stripOutlinePaint, =]
[., defaultReadObject, (, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., stripOutlinePaint, =]
[;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., stripOutlinePaint, =, SerialUtilities, ., readPaint, (]
[backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., stripOutlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., stripOutlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[readPaint, (, stream, ), ;, this, ., stripOutlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., stripOutlineStroke, =]
[readPaint, (, stream, ), ;, this, ., stripOutlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., stripOutlineStroke, =]
[;, this, ., stripOutlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., stripOutlineStroke, =, SerialUtilities, ., readStroke, (]
