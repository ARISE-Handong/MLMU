[final, JSModuleGraph, moduleGraph, ;, private, final, FunctionInformationMap, ., Builder, mapBuilder, ;, RecordFunctionInformation, (, Compiler, compiler, ,, FunctionNames, functionNames, ), {]
[final, JSModuleGraph, moduleGraph, ;, private, final, FunctionInformationMap, ., Builder, mapBuilder, ;, RecordFunctionInformation, (, Compiler, compiler, ,, FunctionNames, functionNames, ), {]
[private, final, FunctionInformationMap, ., Builder, mapBuilder, ;, RecordFunctionInformation, (, Compiler, compiler, ,, FunctionNames, functionNames, ), {, this, ., compiler, =]
[FunctionInformationMap, ., Builder, mapBuilder, ;, RecordFunctionInformation, (, Compiler, compiler, ,, FunctionNames, functionNames, ), {, this, ., compiler, =, compiler, ;]
[FunctionInformationMap, ., Builder, mapBuilder, ;, RecordFunctionInformation, (, Compiler, compiler, ,, FunctionNames, functionNames, ), {, this, ., compiler, =, compiler, ;]
[;, RecordFunctionInformation, (, Compiler, compiler, ,, FunctionNames, functionNames, ), {, this, ., compiler, =, compiler, ;, this, ., moduleGraph, =]
[;, RecordFunctionInformation, (, Compiler, compiler, ,, FunctionNames, functionNames, ), {, this, ., compiler, =, compiler, ;, this, ., moduleGraph, =]
[FunctionNames, functionNames, ), {, this, ., compiler, =, compiler, ;, this, ., moduleGraph, =, compiler, ., getModuleGraph, (, ), ;]
[FunctionNames, functionNames, ), {, this, ., compiler, =, compiler, ;, this, ., moduleGraph, =, compiler, ., getModuleGraph, (, ), ;]
[this, ., compiler, =, compiler, ;, this, ., moduleGraph, =, compiler, ., getModuleGraph, (, ), ;, this, ., functionNames, =]
[compiler, =, compiler, ;, this, ., moduleGraph, =, compiler, ., getModuleGraph, (, ), ;, this, ., functionNames, =, functionNames, ;]
[compiler, =, compiler, ;, this, ., moduleGraph, =, compiler, ., getModuleGraph, (, ), ;, this, ., functionNames, =, functionNames, ;]
[this, ., moduleGraph, =, compiler, ., getModuleGraph, (, ), ;, this, ., functionNames, =, functionNames, ;, this, ., mapBuilder, =]
[this, ., moduleGraph, =, compiler, ., getModuleGraph, (, ), ;, this, ., functionNames, =, functionNames, ;, this, ., mapBuilder, =]
[=, functionNames, ;, this, ., mapBuilder, =, FunctionInformationMap, ., newBuilder, (, ), ;, }, FunctionInformationMap, getMap, (, ), {, return]
[=, functionNames, ;, this, ., mapBuilder, =, FunctionInformationMap, ., newBuilder, (, ), ;, }, FunctionInformationMap, getMap, (, ), {, return]
[mapBuilder, ., build, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[mapBuilder, ., build, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {]
[), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (]
[}, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler, ,]
[Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler, ,, root, ,]
[Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler, ,, root, ,, this, ), ;, if, (]
[Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler, ,, root, ,, this, ), ;, if, (]
[,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler, ,, root, ,, this, ), ;, if, (, moduleGraph, ==]
[), {, NodeTraversal, ., traverse, (, compiler, ,, root, ,, this, ), ;, if, (, moduleGraph, ==, null, ), {]
[NodeTraversal, ., traverse, (, compiler, ,, root, ,, this, ), ;, if, (, moduleGraph, ==, null, ), {, addModuleInformation, (]
[(, moduleGraph, ==, null, ), {, addModuleInformation, (, null, ), ;, }, else, {, TreeSet, <, JSModule, >, modules, =]
[(, moduleGraph, ==, null, ), {, addModuleInformation, (, null, ), ;, }, else, {, TreeSet, <, JSModule, >, modules, =]
[), {, addModuleInformation, (, null, ), ;, }, else, {, TreeSet, <, JSModule, >, modules, =, Sets, ., newTreeSet, (]
[<, JSModule, >, (, ), {, @, Override, public, int, compare, (, JSModule, o1, ,, JSModule, o2, ), {, return]
[<, JSModule, >, (, ), {, @, Override, public, int, compare, (, JSModule, o1, ,, JSModule, o2, ), {, return]
[<, JSModule, >, (, ), {, @, Override, public, int, compare, (, JSModule, o1, ,, JSModule, o2, ), {, return]
[public, int, compare, (, JSModule, o1, ,, JSModule, o2, ), {, return, o1, ., getName, (, ), ., compareTo, (]
[public, int, compare, (, JSModule, o1, ,, JSModule, o2, ), {, return, o1, ., getName, (, ), ., compareTo, (]
[return, o1, ., getName, (, ), ., compareTo, (, o2, ., getName, (, ), ), ;, }, }, ), ;]
[return, o1, ., getName, (, ), ., compareTo, (, o2, ., getName, (, ), ), ;, }, }, ), ;]
[(, ), ., compareTo, (, o2, ., getName, (, ), ), ;, }, }, ), ;, Iterables, ., addAll, (]
[., compareTo, (, o2, ., getName, (, ), ), ;, }, }, ), ;, Iterables, ., addAll, (, modules, ,]
[., compareTo, (, o2, ., getName, (, ), ), ;, }, }, ), ;, Iterables, ., addAll, (, modules, ,]
[), ;, Iterables, ., addAll, (, modules, ,, moduleGraph, ., getAllModules, (, ), ), ;, for, (, JSModule, m, :]
[., addAll, (, modules, ,, moduleGraph, ., getAllModules, (, ), ), ;, for, (, JSModule, m, :, modules, ), {]
[(, modules, ,, moduleGraph, ., getAllModules, (, ), ), ;, for, (, JSModule, m, :, modules, ), {, addModuleInformation, (]
[}, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[}, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, !]
[}, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (, !]
[Node, parent, ), {, if, (, !, n, ., isFunction, (, ), ), {, return, ;, }, int, id, =]
[Node, parent, ), {, if, (, !, n, ., isFunction, (, ), ), {, return, ;, }, int, id, =]
[if, (, !, n, ., isFunction, (, ), ), {, return, ;, }, int, id, =, functionNames, ., getFunctionId, (]
[isFunction, (, ), ), {, return, ;, }, int, id, =, functionNames, ., getFunctionId, (, n, ), ;, if, (]
[isFunction, (, ), ), {, return, ;, }, int, id, =, functionNames, ., getFunctionId, (, n, ), ;, if, (]
[), ), {, return, ;, }, int, id, =, functionNames, ., getFunctionId, (, n, ), ;, if, (, id, <]
[functionNames, ., getFunctionId, (, n, ), ;, if, (, id, <, 0, ), {, return, ;, }, String, compiledSource, =]
[functionNames, ., getFunctionId, (, n, ), ;, if, (, id, <, 0, ), {, return, ;, }, String, compiledSource, =]
[n, ), ;, if, (, id, <, 0, ), {, return, ;, }, String, compiledSource, =, compiler, ., toSource, (]
[<, 0, ), {, return, ;, }, String, compiledSource, =, compiler, ., toSource, (, n, ), ;, JSModule, module, =]
[<, 0, ), {, return, ;, }, String, compiledSource, =, compiler, ., toSource, (, n, ), ;, JSModule, module, =]
[}, String, compiledSource, =, compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;]
[}, String, compiledSource, =, compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;]
[compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (]
[compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (]
[compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (]
[compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (]
[compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (]
[compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (]
[compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (]
[compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (]
[compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (]
[compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (]
[compiler, ., toSource, (, n, ), ;, JSModule, module, =, t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (]
[t, ., getModule, (, ), ;, mapBuilder, ., addEntry, (, FunctionInformationMap, ., Entry, ., newBuilder, (, ), ., setId, (]
[;, mapBuilder, ., addEntry, (, FunctionInformationMap, ., Entry, ., newBuilder, (, ), ., setId, (, id, ), ., setSourceName, (]
[;, mapBuilder, ., addEntry, (, FunctionInformationMap, ., Entry, ., newBuilder, (, ), ., setId, (, id, ), ., setSourceName, (]
[(, FunctionInformationMap, ., Entry, ., newBuilder, (, ), ., setId, (, id, ), ., setSourceName, (, NodeUtil, ., getSourceName, (]
[(, ), ., setId, (, id, ), ., setSourceName, (, NodeUtil, ., getSourceName, (, n, ), ), ., setLineNumber, (]
[(, ), ., setId, (, id, ), ., setSourceName, (, NodeUtil, ., getSourceName, (, n, ), ), ., setLineNumber, (]
[(, NodeUtil, ., getSourceName, (, n, ), ), ., setLineNumber, (, n, ., getLineno, (, ), ), ., setModuleName, (]
[(, NodeUtil, ., getSourceName, (, n, ), ), ., setLineNumber, (, n, ., getLineno, (, ), ), ., setModuleName, (]
[(, NodeUtil, ., getSourceName, (, n, ), ), ., setLineNumber, (, n, ., getLineno, (, ), ), ., setModuleName, (]
[., getSourceName, (, n, ), ), ., setLineNumber, (, n, ., getLineno, (, ), ), ., setModuleName, (, moduleGraph, ==]
[(, n, ), ), ., setLineNumber, (, n, ., getLineno, (, ), ), ., setModuleName, (, moduleGraph, ==, null, ?]
[), ), ., setLineNumber, (, n, ., getLineno, (, ), ), ., setModuleName, (, moduleGraph, ==, null, ?, "", :]
[), ), ., setLineNumber, (, n, ., getLineno, (, ), ), ., setModuleName, (, moduleGraph, ==, null, ?, "", :]
[), ), ., setModuleName, (, moduleGraph, ==, null, ?, "", :, module, ., getName, (, ), ), ., setSize, (]
[), ), ., setModuleName, (, moduleGraph, ==, null, ?, "", :, module, ., getName, (, ), ), ., setSize, (]
["", :, module, ., getName, (, ), ), ., setSize, (, compiledSource, ., length, (, ), ), ., setName, (]
["", :, module, ., getName, (, ), ), ., setSize, (, compiledSource, ., length, (, ), ), ., setName, (]
[getName, (, ), ), ., setSize, (, compiledSource, ., length, (, ), ), ., setName, (, functionNames, ., getFunctionName, (]
[(, compiledSource, ., length, (, ), ), ., setName, (, functionNames, ., getFunctionName, (, n, ), ), ., setCompiledSource, (]
[), ), ;, }, private, void, addModuleInformation, (, JSModule, module, ), {, String, name, ;, String, source, ;, if, (]
[), ), ;, }, private, void, addModuleInformation, (, JSModule, module, ), {, String, name, ;, String, source, ;, if, (]
[;, }, private, void, addModuleInformation, (, JSModule, module, ), {, String, name, ;, String, source, ;, if, (, module, !=]
[void, addModuleInformation, (, JSModule, module, ), {, String, name, ;, String, source, ;, if, (, module, !=, null, ), {]
[(, JSModule, module, ), {, String, name, ;, String, source, ;, if, (, module, !=, null, ), {, name, =]
[(, JSModule, module, ), {, String, name, ;, String, source, ;, if, (, module, !=, null, ), {, name, =]
[name, ;, String, source, ;, if, (, module, !=, null, ), {, name, =, module, ., getName, (, ), ;]
[String, source, ;, if, (, module, !=, null, ), {, name, =, module, ., getName, (, ), ;, source, =]
[String, source, ;, if, (, module, !=, null, ), {, name, =, module, ., getName, (, ), ;, source, =]
[(, module, !=, null, ), {, name, =, module, ., getName, (, ), ;, source, =, compiler, ., toSource, (]
[name, =, module, ., getName, (, ), ;, source, =, compiler, ., toSource, (, module, ), ;, }, else, {]
[module, ., getName, (, ), ;, source, =, compiler, ., toSource, (, module, ), ;, }, else, {, name, =]
[getName, (, ), ;, source, =, compiler, ., toSource, (, module, ), ;, }, else, {, name, =, "", ;]
[), ;, source, =, compiler, ., toSource, (, module, ), ;, }, else, {, name, =, "", ;, source, =]
[), ;, source, =, compiler, ., toSource, (, module, ), ;, }, else, {, name, =, "", ;, source, =]
[(, module, ), ;, }, else, {, name, =, "", ;, source, =, compiler, ., toSource, (, ), ;, }]
[(, module, ), ;, }, else, {, name, =, "", ;, source, =, compiler, ., toSource, (, ), ;, }]
[}, else, {, name, =, "", ;, source, =, compiler, ., toSource, (, ), ;, }, mapBuilder, ., addModule, (]
[}, else, {, name, =, "", ;, source, =, compiler, ., toSource, (, ), ;, }, mapBuilder, ., addModule, (]
[}, else, {, name, =, "", ;, source, =, compiler, ., toSource, (, ), ;, }, mapBuilder, ., addModule, (]
[}, else, {, name, =, "", ;, source, =, compiler, ., toSource, (, ), ;, }, mapBuilder, ., addModule, (]
[}, else, {, name, =, "", ;, source, =, compiler, ., toSource, (, ), ;, }, mapBuilder, ., addModule, (]
[}, else, {, name, =, "", ;, source, =, compiler, ., toSource, (, ), ;, }, mapBuilder, ., addModule, (]
[., toSource, (, ), ;, }, mapBuilder, ., addModule, (, FunctionInformationMap, ., Module, ., newBuilder, (, ), ., setName, (]
[}, mapBuilder, ., addModule, (, FunctionInformationMap, ., Module, ., newBuilder, (, ), ., setName, (, name, ), ., setCompiledSource, (]
