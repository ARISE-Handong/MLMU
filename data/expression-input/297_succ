[;, private, List, fragments, ;, public, TextLine, (, ), {, this, ., fragments, =, new, java, ., util, ., ArrayList]
[=, new, java, ., util, ., ArrayList, (, ), ;, }, public, TextLine, (, String, text, ), {, this, (]
[., fragments, =, new, java, ., util, ., ArrayList, (, ), ;, }, public, TextLine, (, String, text, ), {]
[;, }, public, TextLine, (, String, text, ), {, this, (, text, ,, TextFragment, ., DEFAULT_FONT, ), ;, }, public]
[,, TextFragment, ., DEFAULT_FONT, ), ;, }, public, TextLine, (, String, text, ,, Font, font, ), {, this, ., fragments]
[), ;, }, public, TextLine, (, String, text, ,, Font, font, ), {, this, ., fragments, =, new, java, .]
[., DEFAULT_FONT, ), ;, }, public, TextLine, (, String, text, ,, Font, font, ), {, this, ., fragments, =, new]
[=, new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,, font, )]
[., fragments, =, new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,]
[;, TextFragment, fragment, =, new, TextFragment, (, text, ,, font, ), ;, this, ., fragments, ., add, (, fragment, )]
[;, this, ., fragments, ., add, (, fragment, ), ;, }, public, TextLine, (, String, text, ,, Font, font, ,]
[,, font, ), ;, this, ., fragments, ., add, (, fragment, ), ;, }, public, TextLine, (, String, text, ,]
[), ;, this, ., fragments, ., add, (, fragment, ), ;, }, public, TextLine, (, String, text, ,, Font, font]
[;, }, public, TextLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {, if, (, text, ==, null]
[., add, (, fragment, ), ;, }, public, TextLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {]
[., fragments, ., add, (, fragment, ), ;, }, public, TextLine, (, String, text, ,, Font, font, ,, Paint, paint]
[), ;, }, public, TextLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {, if, (, text, ==]
[), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, if, (, font, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, if, (, paint]
[), ;, }, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, if, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., fragments]
[), ;, }, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., fragments, =, new, java, ., util, ., ArrayList]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., fragments, =, new, java, ., util]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., fragments, =, new, java, ., util, ., ArrayList]
[;, }, this, ., fragments, =, new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment]
[), ;, }, this, ., fragments, =, new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new]
[=, new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,, font, ,]
[., fragments, =, new, java, ., util, ., ArrayList, (, ), ;, TextFragment, fragment, =, new, TextFragment, (, text, ,]
[;, TextFragment, fragment, =, new, TextFragment, (, text, ,, font, ,, paint, ), ;, this, ., fragments, ., add, (]
[;, this, ., fragments, ., add, (, fragment, ), ;, }, public, void, addFragment, (, TextFragment, fragment, ), {, this]
[,, font, ,, paint, ), ;, this, ., fragments, ., add, (, fragment, ), ;, }, public, void, addFragment, (]
[,, paint, ), ;, this, ., fragments, ., add, (, fragment, ), ;, }, public, void, addFragment, (, TextFragment, fragment]
[), ;, this, ., fragments, ., add, (, fragment, ), ;, }, public, void, addFragment, (, TextFragment, fragment, ), {]
[;, }, public, void, addFragment, (, TextFragment, fragment, ), {, this, ., fragments, ., add, (, fragment, ), ;, }]
[., add, (, fragment, ), ;, }, public, void, addFragment, (, TextFragment, fragment, ), {, this, ., fragments, ., add]
[., fragments, ., add, (, fragment, ), ;, }, public, void, addFragment, (, TextFragment, fragment, ), {, this, ., fragments]
[), ;, }, public, void, addFragment, (, TextFragment, fragment, ), {, this, ., fragments, ., add, (, fragment, ), ;]
[;, }, public, void, removeFragment, (, TextFragment, fragment, ), {, this, ., fragments, ., remove, (, fragment, ), ;, }]
[., add, (, fragment, ), ;, }, public, void, removeFragment, (, TextFragment, fragment, ), {, this, ., fragments, ., remove]
[., fragments, ., add, (, fragment, ), ;, }, public, void, removeFragment, (, TextFragment, fragment, ), {, this, ., fragments]
[), ;, }, public, void, removeFragment, (, TextFragment, fragment, ), {, this, ., fragments, ., remove, (, fragment, ), ;]
[;, }, public, void, draw, (, Graphics2D, g2, ,, float, anchorX, ,, float, anchorY, ,, TextAnchor, anchor, ,, float, rotateX]
[., remove, (, fragment, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, float, anchorX, ,, float, anchorY, ,]
[., fragments, ., remove, (, fragment, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, float, anchorX, ,, float]
[), ;, }, public, void, draw, (, Graphics2D, g2, ,, float, anchorX, ,, float, anchorY, ,, TextAnchor, anchor, ,, float]
[;, float, yOffset, =, calculateBaselineOffset, (, g2, ,, anchor, ), ;, Iterator, iterator, =, this, ., fragments, ., iterator, (]
[;, Iterator, iterator, =, this, ., fragments, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), )]
[,, anchor, ), ;, Iterator, iterator, =, this, ., fragments, ., iterator, (, ), ;, while, (, iterator, ., hasNext]
[), ;, Iterator, iterator, =, this, ., fragments, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, )]
[;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, )]
[., fragments, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (]
[), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, Size2D, d, =, fragment, ., calculateDimensions]
[., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, Size2D, d]
[;, Size2D, d, =, fragment, ., calculateDimensions, (, g2, ), ;, fragment, ., draw, (, g2, ,, x, ,, anchorY]
[;, Size2D, d, =, fragment, ., calculateDimensions, (, g2, ), ;, fragment, ., draw, (, g2, ,, x, ,, anchorY]
[., next, (, ), ;, Size2D, d, =, fragment, ., calculateDimensions, (, g2, ), ;, fragment, ., draw, (, g2]
[;, fragment, ., draw, (, g2, ,, x, ,, anchorY, +, yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY]
[., calculateDimensions, (, g2, ), ;, fragment, ., draw, (, g2, ,, x, ,, anchorY, +, yOffset, ,, TextAnchor, .]
[), ;, fragment, ., draw, (, g2, ,, x, ,, anchorY, +, yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,]
[;, x, =, x, +, (, float, ), d, ., getWidth, (, ), ;, }, }, public, Size2D, calculateDimensions, (]
[., draw, (, g2, ,, x, ,, anchorY, +, yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,, angle]
[,, x, ,, anchorY, +, yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, x, =]
[,, anchorY, +, yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, x, =, x, +]
[,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, x, =, x, +, (, float, ), d]
[+, yOffset, ,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, x, =, x, +, (, float]
[,, TextAnchor, ., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, x, =, x, +, (, float, ), d]
[,, rotateX, ,, rotateY, ,, angle, ), ;, x, =, x, +, (, float, ), d, ., getWidth, (, )]
[., BASELINE_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, x, =, x, +, (, float, ), d, ., getWidth]
[,, rotateY, ,, angle, ), ;, x, =, x, +, (, float, ), d, ., getWidth, (, ), ;, }]
[,, angle, ), ;, x, =, x, +, (, float, ), d, ., getWidth, (, ), ;, }, }, public]
[), ;, x, =, x, +, (, float, ), d, ., getWidth, (, ), ;, }, }, public, Size2D, calculateDimensions]
[=, x, +, (, float, ), d, ., getWidth, (, ), ;, }, }, public, Size2D, calculateDimensions, (, Graphics2D, g2]
[;, }, }, public, Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height, =, 0.0]
[+, (, float, ), d, ., getWidth, (, ), ;, }, }, public, Size2D, calculateDimensions, (, Graphics2D, g2, ), {]
[;, }, }, public, Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height, =, 0.0]
[;, }, }, public, Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height, =, 0.0]
[., getWidth, (, ), ;, }, }, public, Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;]
[;, double, height, =, 0.0, ;, Iterator, iterator, =, this, ., fragments, ., iterator, (, ), ;, while, (, iterator]
[;, Iterator, iterator, =, this, ., fragments, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), )]
[;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, )]
[., fragments, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (]
[), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, Size2D, dimension, =, fragment, ., calculateDimensions]
[., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, Size2D, dimension]
[;, Size2D, dimension, =, fragment, ., calculateDimensions, (, g2, ), ;, width, =, width, +, dimension, ., getWidth, (, )]
[;, Size2D, dimension, =, fragment, ., calculateDimensions, (, g2, ), ;, width, =, width, +, dimension, ., getWidth, (, )]
[., next, (, ), ;, Size2D, dimension, =, fragment, ., calculateDimensions, (, g2, ), ;, width, =, width, +, dimension]
[;, width, =, width, +, dimension, ., getWidth, (, ), ;, height, =, Math, ., max, (, height, ,, dimension]
[., calculateDimensions, (, g2, ), ;, width, =, width, +, dimension, ., getWidth, (, ), ;, height, =, Math, .]
[), ;, width, =, width, +, dimension, ., getWidth, (, ), ;, height, =, Math, ., max, (, height, ,]
[=, width, +, dimension, ., getWidth, (, ), ;, height, =, Math, ., max, (, height, ,, dimension, ., getHeight]
[;, height, =, Math, ., max, (, height, ,, dimension, ., getHeight, (, ), ), ;, }, return, new, Size2D]
[+, dimension, ., getWidth, (, ), ;, height, =, Math, ., max, (, height, ,, dimension, ., getHeight, (, )]
[;, height, =, Math, ., max, (, height, ,, dimension, ., getHeight, (, ), ), ;, }, return, new, Size2D]
[., getWidth, (, ), ;, height, =, Math, ., max, (, height, ,, dimension, ., getHeight, (, ), ), ;]
[=, Math, ., max, (, height, ,, dimension, ., getHeight, (, ), ), ;, }, return, new, Size2D, (, width]
[;, }, return, new, Size2D, (, width, ,, height, ), ;, }, public, TextFragment, getFirstTextFragment, (, ), {, TextFragment, result]
[., max, (, height, ,, dimension, ., getHeight, (, ), ), ;, }, return, new, Size2D, (, width, ,, height]
[,, dimension, ., getHeight, (, ), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, public]
[), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, public, TextFragment, getFirstTextFragment, (, ), {, TextFragment]
[., getHeight, (, ), ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, public, TextFragment, getFirstTextFragment]
[;, }, public, TextFragment, getFirstTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (, this, ., fragments, ., size]
[,, height, ), ;, }, public, TextFragment, getFirstTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (, this, .]
[), ;, }, public, TextFragment, getFirstTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (, this, ., fragments, .]
[;, if, (, this, ., fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, ), this]
[), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (, 0, ), ;, }, return, result, ;]
[>, 0, ), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (, 0, ), ;, }, return]
[., size, (, ), >, 0, ), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (, 0]
[., fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, ), this, ., fragments, ., get]
[), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (, 0, ), ;, }, return, result, ;]
[=, (, TextFragment, ), this, ., fragments, ., get, (, 0, ), ;, }, return, result, ;, }, public, TextFragment]
[;, }, return, result, ;, }, public, TextFragment, getLastTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (, this]
[;, }, return, result, ;, }, public, TextFragment, getLastTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (, this]
[., get, (, 0, ), ;, }, return, result, ;, }, public, TextFragment, getLastTextFragment, (, ), {, TextFragment, result, =]
[., fragments, ., get, (, 0, ), ;, }, return, result, ;, }, public, TextFragment, getLastTextFragment, (, ), {, TextFragment]
[), ;, }, return, result, ;, }, public, TextFragment, getLastTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (]
[;, }, public, TextFragment, getLastTextFragment, (, ), {, TextFragment, result, =, null, ;, if, (, this, ., fragments, ., size]
[;, if, (, this, ., fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, ), this]
[), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (, this, ., fragments, ., size, (, )]
[>, 0, ), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (, this, ., fragments, ., size]
[., size, (, ), >, 0, ), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (, this]
[., fragments, ., size, (, ), >, 0, ), {, result, =, (, TextFragment, ), this, ., fragments, ., get]
[), {, result, =, (, TextFragment, ), this, ., fragments, ., get, (, this, ., fragments, ., size, (, )]
[=, (, TextFragment, ), this, ., fragments, ., get, (, this, ., fragments, ., size, (, ), -, 1, )]
[;, }, return, result, ;, }, private, float, calculateBaselineOffset, (, Graphics2D, g2, ,, TextAnchor, anchor, ), {, float, result, =]
[;, }, return, result, ;, }, private, float, calculateBaselineOffset, (, Graphics2D, g2, ,, TextAnchor, anchor, ), {, float, result, =]
[., get, (, this, ., fragments, ., size, (, ), -, 1, ), ;, }, return, result, ;, }, private]
[., fragments, ., get, (, this, ., fragments, ., size, (, ), -, 1, ), ;, }, return, result, ;]
[), ;, }, return, result, ;, }, private, float, calculateBaselineOffset, (, Graphics2D, g2, ,, TextAnchor, anchor, ), {, float, result]
[-, 1, ), ;, }, return, result, ;, }, private, float, calculateBaselineOffset, (, Graphics2D, g2, ,, TextAnchor, anchor, ), {]
[., size, (, ), -, 1, ), ;, }, return, result, ;, }, private, float, calculateBaselineOffset, (, Graphics2D, g2, ,]
[., fragments, ., size, (, ), -, 1, ), ;, }, return, result, ;, }, private, float, calculateBaselineOffset, (, Graphics2D]
[), ;, }, return, result, ;, }, private, float, calculateBaselineOffset, (, Graphics2D, g2, ,, TextAnchor, anchor, ), {, float, result]
[;, }, private, float, calculateBaselineOffset, (, Graphics2D, g2, ,, TextAnchor, anchor, ), {, float, result, =, 0.0f, ;, Iterator, iterator]
[;, Iterator, iterator, =, this, ., fragments, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), )]
[;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, )]
[., fragments, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextFragment, fragment, =, (]
[), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, result, =, Math, ., max, (]
[., hasNext, (, ), ), {, TextFragment, fragment, =, (, TextFragment, ), iterator, ., next, (, ), ;, result, =]
[;, result, =, Math, ., max, (, result, ,, fragment, ., calculateBaselineOffset, (, g2, ,, anchor, ), ), ;, }]
[;, result, =, Math, ., max, (, result, ,, fragment, ., calculateBaselineOffset, (, g2, ,, anchor, ), ), ;, }]
[., next, (, ), ;, result, =, Math, ., max, (, result, ,, fragment, ., calculateBaselineOffset, (, g2, ,, anchor]
[=, Math, ., max, (, result, ,, fragment, ., calculateBaselineOffset, (, g2, ,, anchor, ), ), ;, }, return, result]
[;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null, )]
[., max, (, result, ,, fragment, ., calculateBaselineOffset, (, g2, ,, anchor, ), ), ;, }, return, result, ;, }]
[,, fragment, ., calculateBaselineOffset, (, g2, ,, anchor, ), ), ;, }, return, result, ;, }, public, boolean, equals, (]
[), ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null]
[., calculateBaselineOffset, (, g2, ,, anchor, ), ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj]
[,, anchor, ), ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, null, ), {, return, false, ;]
[), {, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, obj]
[==, null, ), {, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if]
[), {, return, false, ;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, obj]
[;, }, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, obj, instanceof, TextLine, ), {]
[), {, return, true, ;, }, if, (, obj, instanceof, TextLine, ), {, TextLine, line, =, (, TextLine, ), obj]
[==, this, ), {, return, true, ;, }, if, (, obj, instanceof, TextLine, ), {, TextLine, line, =, (, TextLine]
[), {, return, true, ;, }, if, (, obj, instanceof, TextLine, ), {, TextLine, line, =, (, TextLine, ), obj]
[;, }, if, (, obj, instanceof, TextLine, ), {, TextLine, line, =, (, TextLine, ), obj, ;, return, this, .]
[), {, TextLine, line, =, (, TextLine, ), obj, ;, return, this, ., fragments, ., equals, (, line, ., fragments]
[instanceof, TextLine, ), {, TextLine, line, =, (, TextLine, ), obj, ;, return, this, ., fragments, ., equals, (, line]
[;, return, this, ., fragments, ., equals, (, line, ., fragments, ), ;, }, return, false, ;, }, public, int]
[;, return, this, ., fragments, ., equals, (, line, ., fragments, ), ;, }, return, false, ;, }, public, int]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., fragments, !=, null, ?]
[., equals, (, line, ., fragments, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return]
[., fragments, ., equals, (, line, ., fragments, ), ;, }, return, false, ;, }, public, int, hashCode, (, )]
[), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., fragments, !=, null]
[., fragments, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., fragments]
[;, }, public, int, hashCode, (, ), {, return, (, this, ., fragments, !=, null, ?, this, ., fragments, .]
[;, }, }]
[), ;, }, }]
[?, this, ., fragments, ., hashCode, (, ), :, 0, ), ;, }, }]
[!=, null, ?, this, ., fragments, ., hashCode, (, ), :, 0, ), ;, }, }]
[., fragments, !=, null, ?, this, ., fragments, ., hashCode, (, ), :, 0, ), ;, }, }]
[?, this, ., fragments, ., hashCode, (, ), :, 0, ), ;, }, }]
[:, 0, ), ;, }, }]
[., hashCode, (, ), :, 0, ), ;, }, }]
[., fragments, ., hashCode, (, ), :, 0, ), ;, }, }]
[), ;, }, }]
