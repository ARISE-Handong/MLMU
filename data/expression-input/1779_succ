[;, private, final, AbstractCompiler, compiler, ;, private, Node, assignLhsChild, =, null, ;, CheckGlobalThis, (, AbstractCompiler, compiler, ), {, this, .]
[., warning, (, "JSC_USED_GLOBAL_THIS", ,, "dangerous use of the global 'this' object", ), ;, private, final, AbstractCompiler, compiler, ;, private, Node, assignLhsChild, =, null, ;, CheckGlobalThis]
[,, "dangerous use of the global 'this' object", ), ;, private, final, AbstractCompiler, compiler, ;, private, Node, assignLhsChild, =, null, ;, CheckGlobalThis, (, AbstractCompiler, compiler, )]
[), ;, private, final, AbstractCompiler, compiler, ;, private, Node, assignLhsChild, =, null, ;, CheckGlobalThis, (, AbstractCompiler, compiler, ), {, this]
[;, CheckGlobalThis, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, }, @, Override, public, boolean, shouldTraverse, (]
[=, compiler, ;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {]
[., compiler, =, compiler, ;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, t, ,, Node, n, ,, Node, parent]
[;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[), {, JSDocInfo, jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (, jsDoc, !=, null, &&, (, jsDoc, ., isConstructor]
[., isFunction, (, ), ), {, JSDocInfo, jsDoc, =, getFunctionJsDocInfo, (, n, ), ;, if, (, jsDoc, !=, null, &&]
[;, if, (, jsDoc, !=, null, &&, (, jsDoc, ., isConstructor, (, ), ||, jsDoc, ., isInterface, (, ), ||]
[), ;, if, (, jsDoc, !=, null, &&, (, jsDoc, ., isConstructor, (, ), ||, jsDoc, ., isInterface, (, )]
[), {, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (, pType]
[&&, (, jsDoc, ., isConstructor, (, ), ||, jsDoc, ., isInterface, (, ), ||, jsDoc, ., hasThisType, (, ), ||]
[!=, null, &&, (, jsDoc, ., isConstructor, (, ), ||, jsDoc, ., isInterface, (, ), ||, jsDoc, ., hasThisType, (]
[&&, (, jsDoc, ., isConstructor, (, ), ||, jsDoc, ., isInterface, (, ), ||, jsDoc, ., hasThisType, (, ), ||]
[), {, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (, pType]
[), ), {, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (]
[||, jsDoc, ., isOverride, (, ), ), ), {, return, false, ;, }, int, pType, =, parent, ., getType, (]
[||, jsDoc, ., hasThisType, (, ), ||, jsDoc, ., isOverride, (, ), ), ), {, return, false, ;, }, int]
[||, jsDoc, ., isInterface, (, ), ||, jsDoc, ., hasThisType, (, ), ||, jsDoc, ., isOverride, (, ), ), )]
[., isConstructor, (, ), ||, jsDoc, ., isInterface, (, ), ||, jsDoc, ., hasThisType, (, ), ||, jsDoc, ., isOverride]
[||, jsDoc, ., hasThisType, (, ), ||, jsDoc, ., isOverride, (, ), ), ), {, return, false, ;, }, int]
[., isInterface, (, ), ||, jsDoc, ., hasThisType, (, ), ||, jsDoc, ., isOverride, (, ), ), ), {, return]
[||, jsDoc, ., isOverride, (, ), ), ), {, return, false, ;, }, int, pType, =, parent, ., getType, (]
[., hasThisType, (, ), ||, jsDoc, ., isOverride, (, ), ), ), {, return, false, ;, }, int, pType, =]
[), ), {, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (]
[., isOverride, (, ), ), ), {, return, false, ;, }, int, pType, =, parent, ., getType, (, ), ;]
[;, }, int, pType, =, parent, ., getType, (, ), ;, if, (, !, (, pType, ==, Token, ., BLOCK]
[;, if, (, !, (, pType, ==, Token, ., BLOCK, ||, pType, ==, Token, ., SCRIPT, ||, pType, ==, Token]
[., getType, (, ), ;, if, (, !, (, pType, ==, Token, ., BLOCK, ||, pType, ==, Token, ., SCRIPT]
[), {, return, false, ;, }, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, NodeUtil, ., isObjectLitKey]
[), {, return, false, ;, }, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, NodeUtil, ., isObjectLitKey]
[), ), {, return, false, ;, }, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, NodeUtil, .]
[||, pType, ==, Token, ., STRING_KEY, ), ), {, return, false, ;, }, Node, gramps, =, parent, ., getParent, (]
[||, pType, ==, Token, ., ASSIGN, ||, pType, ==, Token, ., STRING_KEY, ), ), {, return, false, ;, }, Node]
[||, pType, ==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN, ||, pType, ==, Token, ., STRING_KEY, ), )]
[||, pType, ==, Token, ., SCRIPT, ||, pType, ==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN, ||, pType]
[==, Token, ., BLOCK, ||, pType, ==, Token, ., SCRIPT, ||, pType, ==, Token, ., NAME, ||, pType, ==, Token]
[||, pType, ==, Token, ., SCRIPT, ||, pType, ==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN, ||, pType]
[., BLOCK, ||, pType, ==, Token, ., SCRIPT, ||, pType, ==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN]
[||, pType, ==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN, ||, pType, ==, Token, ., STRING_KEY, ), )]
[==, Token, ., SCRIPT, ||, pType, ==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN, ||, pType, ==, Token]
[||, pType, ==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN, ||, pType, ==, Token, ., STRING_KEY, ), )]
[., SCRIPT, ||, pType, ==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN, ||, pType, ==, Token, ., STRING_KEY]
[||, pType, ==, Token, ., ASSIGN, ||, pType, ==, Token, ., STRING_KEY, ), ), {, return, false, ;, }, Node]
[==, Token, ., NAME, ||, pType, ==, Token, ., ASSIGN, ||, pType, ==, Token, ., STRING_KEY, ), ), {, return]
[||, pType, ==, Token, ., ASSIGN, ||, pType, ==, Token, ., STRING_KEY, ), ), {, return, false, ;, }, Node]
[., NAME, ||, pType, ==, Token, ., ASSIGN, ||, pType, ==, Token, ., STRING_KEY, ), ), {, return, false, ;]
[||, pType, ==, Token, ., STRING_KEY, ), ), {, return, false, ;, }, Node, gramps, =, parent, ., getParent, (]
[==, Token, ., ASSIGN, ||, pType, ==, Token, ., STRING_KEY, ), ), {, return, false, ;, }, Node, gramps, =]
[||, pType, ==, Token, ., STRING_KEY, ), ), {, return, false, ;, }, Node, gramps, =, parent, ., getParent, (]
[., ASSIGN, ||, pType, ==, Token, ., STRING_KEY, ), ), {, return, false, ;, }, Node, gramps, =, parent, .]
[), ), {, return, false, ;, }, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, NodeUtil, .]
[==, Token, ., STRING_KEY, ), ), {, return, false, ;, }, Node, gramps, =, parent, ., getParent, (, ), ;]
[), ), {, return, false, ;, }, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, NodeUtil, .]
[., STRING_KEY, ), ), {, return, false, ;, }, Node, gramps, =, parent, ., getParent, (, ), ;, if, (]
[;, }, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, NodeUtil, ., isObjectLitKey, (, parent, ,, gramps]
[;, if, (, NodeUtil, ., isObjectLitKey, (, parent, ,, gramps, ), ), {, JSDocInfo, maybeLends, =, gramps, ., getJSDocInfo, (]
[., getParent, (, ), ;, if, (, NodeUtil, ., isObjectLitKey, (, parent, ,, gramps, ), ), {, JSDocInfo, maybeLends, =]
[), {, JSDocInfo, maybeLends, =, gramps, ., getJSDocInfo, (, ), ;, if, (, maybeLends, !=, null, &&, maybeLends, ., getLendsName]
[., isObjectLitKey, (, parent, ,, gramps, ), ), {, JSDocInfo, maybeLends, =, gramps, ., getJSDocInfo, (, ), ;, if, (]
[,, gramps, ), ), {, JSDocInfo, maybeLends, =, gramps, ., getJSDocInfo, (, ), ;, if, (, maybeLends, !=, null, &&]
[), ), {, JSDocInfo, maybeLends, =, gramps, ., getJSDocInfo, (, ), ;, if, (, maybeLends, !=, null, &&, maybeLends, .]
[;, if, (, maybeLends, !=, null, &&, maybeLends, ., getLendsName, (, ), !=, null, &&, maybeLends, ., getLendsName, (, )]
[., getJSDocInfo, (, ), ;, if, (, maybeLends, !=, null, &&, maybeLends, ., getLendsName, (, ), !=, null, &&, maybeLends]
[), {, return, false, ;, }, }, }, if, (, parent, !=, null, &&, parent, ., isAssign, (, ), )]
[&&, maybeLends, ., getLendsName, (, ), ., endsWith, (, ".prototype", ), ), {, return, false, ;, }, }, }, if]
[&&, maybeLends, ., getLendsName, (, ), !=, null, &&, maybeLends, ., getLendsName, (, ), ., endsWith, (, ".prototype", ), )]
[!=, null, &&, maybeLends, ., getLendsName, (, ), !=, null, &&, maybeLends, ., getLendsName, (, ), ., endsWith, (, ".prototype"]
[&&, maybeLends, ., getLendsName, (, ), !=, null, &&, maybeLends, ., getLendsName, (, ), ., endsWith, (, ".prototype", ), )]
[&&, maybeLends, ., getLendsName, (, ), ., endsWith, (, ".prototype", ), ), {, return, false, ;, }, }, }, if]
[!=, null, &&, maybeLends, ., getLendsName, (, ), ., endsWith, (, ".prototype", ), ), {, return, false, ;, }, }]
[., getLendsName, (, ), !=, null, &&, maybeLends, ., getLendsName, (, ), ., endsWith, (, ".prototype", ), ), {, return]
[&&, maybeLends, ., getLendsName, (, ), ., endsWith, (, ".prototype", ), ), {, return, false, ;, }, }, }, if]
[), {, return, false, ;, }, }, }, if, (, parent, !=, null, &&, parent, ., isAssign, (, ), )]
[., endsWith, (, ".prototype", ), ), {, return, false, ;, }, }, }, if, (, parent, !=, null, &&, parent]
[., getLendsName, (, ), ., endsWith, (, ".prototype", ), ), {, return, false, ;, }, }, }, if, (, parent]
[), ), {, return, false, ;, }, }, }, if, (, parent, !=, null, &&, parent, ., isAssign, (, )]
[;, }, }, }, if, (, parent, !=, null, &&, parent, ., isAssign, (, ), ), {, Node, lhs, =]
[), {, Node, lhs, =, parent, ., getFirstChild, (, ), ;, Node, rhs, =, lhs, ., getNext, (, ), ;]
[&&, parent, ., isAssign, (, ), ), {, Node, lhs, =, parent, ., getFirstChild, (, ), ;, Node, rhs, =]
[!=, null, &&, parent, ., isAssign, (, ), ), {, Node, lhs, =, parent, ., getFirstChild, (, ), ;, Node]
[&&, parent, ., isAssign, (, ), ), {, Node, lhs, =, parent, ., getFirstChild, (, ), ;, Node, rhs, =]
[), {, Node, lhs, =, parent, ., getFirstChild, (, ), ;, Node, rhs, =, lhs, ., getNext, (, ), ;]
[., isAssign, (, ), ), {, Node, lhs, =, parent, ., getFirstChild, (, ), ;, Node, rhs, =, lhs, .]
[;, Node, rhs, =, lhs, ., getNext, (, ), ;, if, (, n, ==, lhs, ), {, if, (, assignLhsChild]
[., getFirstChild, (, ), ;, Node, rhs, =, lhs, ., getNext, (, ), ;, if, (, n, ==, lhs, )]
[;, if, (, n, ==, lhs, ), {, if, (, assignLhsChild, ==, null, ), {, assignLhsChild, =, lhs, ;, }]
[., getNext, (, ), ;, if, (, n, ==, lhs, ), {, if, (, assignLhsChild, ==, null, ), {, assignLhsChild]
[), {, if, (, assignLhsChild, ==, null, ), {, assignLhsChild, =, lhs, ;, }, }, else, {, if, (, NodeUtil]
[==, lhs, ), {, if, (, assignLhsChild, ==, null, ), {, assignLhsChild, =, lhs, ;, }, }, else, {, if]
[), {, if, (, assignLhsChild, ==, null, ), {, assignLhsChild, =, lhs, ;, }, }, else, {, if, (, NodeUtil]
[), {, assignLhsChild, =, lhs, ;, }, }, else, {, if, (, NodeUtil, ., isGet, (, lhs, ), ), {]
[==, null, ), {, assignLhsChild, =, lhs, ;, }, }, else, {, if, (, NodeUtil, ., isGet, (, lhs, )]
[), {, assignLhsChild, =, lhs, ;, }, }, else, {, if, (, NodeUtil, ., isGet, (, lhs, ), ), {]
[=, lhs, ;, }, }, else, {, if, (, NodeUtil, ., isGet, (, lhs, ), ), {, if, (, lhs]
[;, }, }, else, {, if, (, NodeUtil, ., isGet, (, lhs, ), ), {, if, (, lhs, ., isGetProp]
[), {, if, (, lhs, ., isGetProp, (, ), &&, lhs, ., getLastChild, (, ), ., getString, (, ), .]
[., isGet, (, lhs, ), ), {, if, (, lhs, ., isGetProp, (, ), &&, lhs, ., getLastChild, (, )]
[), ), {, if, (, lhs, ., isGetProp, (, ), &&, lhs, ., getLastChild, (, ), ., getString, (, )]
[), {, return, false, ;, }, Node, llhs, =, lhs, ., getFirstChild, (, ), ;, if, (, llhs, ., isGetProp]
[&&, lhs, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ), {, return, false, ;]
[., isGetProp, (, ), &&, lhs, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), )]
[), {, return, false, ;, }, Node, llhs, =, lhs, ., getFirstChild, (, ), ;, if, (, llhs, ., isGetProp]
[., equals, (, "prototype", ), ), {, return, false, ;, }, Node, llhs, =, lhs, ., getFirstChild, (, ), ;]
[., getString, (, ), ., equals, (, "prototype", ), ), {, return, false, ;, }, Node, llhs, =, lhs, .]
[., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ), {, return, false, ;, }, Node]
[), ), {, return, false, ;, }, Node, llhs, =, lhs, ., getFirstChild, (, ), ;, if, (, llhs, .]
[;, }, Node, llhs, =, lhs, ., getFirstChild, (, ), ;, if, (, llhs, ., isGetProp, (, ), &&, llhs]
[;, if, (, llhs, ., isGetProp, (, ), &&, llhs, ., getLastChild, (, ), ., getString, (, ), ., equals]
[., getFirstChild, (, ), ;, if, (, llhs, ., isGetProp, (, ), &&, llhs, ., getLastChild, (, ), ., getString]
[), {, return, false, ;, }, }, }, }, return, true, ;, }, @, Override, public, void, visit, (, NodeTraversal]
[&&, llhs, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ), {, return, false, ;]
[., isGetProp, (, ), &&, llhs, ., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), )]
[), {, return, false, ;, }, }, }, }, return, true, ;, }, @, Override, public, void, visit, (, NodeTraversal]
[., equals, (, "prototype", ), ), {, return, false, ;, }, }, }, }, return, true, ;, }, @, Override]
[., getString, (, ), ., equals, (, "prototype", ), ), {, return, false, ;, }, }, }, }, return, true]
[., getLastChild, (, ), ., getString, (, ), ., equals, (, "prototype", ), ), {, return, false, ;, }, }]
[), ), {, return, false, ;, }, }, }, }, return, true, ;, }, @, Override, public, void, visit, (]
[;, }, }, }, }, return, true, ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, GLOBAL_THIS, ), ), ;, }, if, (, n]
[&&, shouldReportThis, (, n, ,, parent, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, GLOBAL_THIS]
[., isThis, (, ), &&, shouldReportThis, (, n, ,, parent, ), ), {, compiler, ., report, (, t, ., makeError]
[), {, compiler, ., report, (, t, ., makeError, (, n, ,, GLOBAL_THIS, ), ), ;, }, if, (, n]
[,, parent, ), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, GLOBAL_THIS, ), ), ;, }]
[), ), {, compiler, ., report, (, t, ., makeError, (, n, ,, GLOBAL_THIS, ), ), ;, }, if, (]
[;, }, if, (, n, ==, assignLhsChild, ), {, assignLhsChild, =, null, ;, }, }, private, boolean, shouldReportThis, (, Node]
[., report, (, t, ., makeError, (, n, ,, GLOBAL_THIS, ), ), ;, }, if, (, n, ==, assignLhsChild, )]
[), ;, }, if, (, n, ==, assignLhsChild, ), {, assignLhsChild, =, null, ;, }, }, private, boolean, shouldReportThis, (]
[., makeError, (, n, ,, GLOBAL_THIS, ), ), ;, }, if, (, n, ==, assignLhsChild, ), {, assignLhsChild, =, null]
[,, GLOBAL_THIS, ), ), ;, }, if, (, n, ==, assignLhsChild, ), {, assignLhsChild, =, null, ;, }, }, private]
[), ), ;, }, if, (, n, ==, assignLhsChild, ), {, assignLhsChild, =, null, ;, }, }, private, boolean, shouldReportThis]
[), {, assignLhsChild, =, null, ;, }, }, private, boolean, shouldReportThis, (, Node, n, ,, Node, parent, ), {, if]
[==, assignLhsChild, ), {, assignLhsChild, =, null, ;, }, }, private, boolean, shouldReportThis, (, Node, n, ,, Node, parent, )]
[), {, assignLhsChild, =, null, ;, }, }, private, boolean, shouldReportThis, (, Node, n, ,, Node, parent, ), {, if]
[=, null, ;, }, }, private, boolean, shouldReportThis, (, Node, n, ,, Node, parent, ), {, if, (, assignLhsChild, !=]
[;, }, }, private, boolean, shouldReportThis, (, Node, n, ,, Node, parent, ), {, if, (, assignLhsChild, !=, null, )]
[), {, return, true, ;, }, return, parent, !=, null, &&, NodeUtil, ., isGet, (, parent, ), ;, }, private]
[!=, null, ), {, return, true, ;, }, return, parent, !=, null, &&, NodeUtil, ., isGet, (, parent, ), ;]
[), {, return, true, ;, }, return, parent, !=, null, &&, NodeUtil, ., isGet, (, parent, ), ;, }, private]
[;, }, return, parent, !=, null, &&, NodeUtil, ., isGet, (, parent, ), ;, }, private, JSDocInfo, getFunctionJsDocInfo, (, Node]
[;, }, private, JSDocInfo, getFunctionJsDocInfo, (, Node, n, ), {, JSDocInfo, jsDoc, =, n, ., getJSDocInfo, (, ), ;, Node]
[&&, NodeUtil, ., isGet, (, parent, ), ;, }, private, JSDocInfo, getFunctionJsDocInfo, (, Node, n, ), {, JSDocInfo, jsDoc, =]
[!=, null, &&, NodeUtil, ., isGet, (, parent, ), ;, }, private, JSDocInfo, getFunctionJsDocInfo, (, Node, n, ), {, JSDocInfo]
[&&, NodeUtil, ., isGet, (, parent, ), ;, }, private, JSDocInfo, getFunctionJsDocInfo, (, Node, n, ), {, JSDocInfo, jsDoc, =]
[;, }, private, JSDocInfo, getFunctionJsDocInfo, (, Node, n, ), {, JSDocInfo, jsDoc, =, n, ., getJSDocInfo, (, ), ;, Node]
[., isGet, (, parent, ), ;, }, private, JSDocInfo, getFunctionJsDocInfo, (, Node, n, ), {, JSDocInfo, jsDoc, =, n, .]
[), ;, }, private, JSDocInfo, getFunctionJsDocInfo, (, Node, n, ), {, JSDocInfo, jsDoc, =, n, ., getJSDocInfo, (, ), ;]
[;, Node, parent, =, n, ., getParent, (, ), ;, if, (, jsDoc, ==, null, ), {, int, parentType, =]
[., getJSDocInfo, (, ), ;, Node, parent, =, n, ., getParent, (, ), ;, if, (, jsDoc, ==, null, )]
[;, if, (, jsDoc, ==, null, ), {, int, parentType, =, parent, ., getType, (, ), ;, if, (, parentType]
[., getParent, (, ), ;, if, (, jsDoc, ==, null, ), {, int, parentType, =, parent, ., getType, (, )]
[), {, int, parentType, =, parent, ., getType, (, ), ;, if, (, parentType, ==, Token, ., NAME, ||, parentType]
[==, null, ), {, int, parentType, =, parent, ., getType, (, ), ;, if, (, parentType, ==, Token, ., NAME]
[), {, int, parentType, =, parent, ., getType, (, ), ;, if, (, parentType, ==, Token, ., NAME, ||, parentType]
[;, if, (, parentType, ==, Token, ., NAME, ||, parentType, ==, Token, ., ASSIGN, ), {, jsDoc, =, parent, .]
[., getType, (, ), ;, if, (, parentType, ==, Token, ., NAME, ||, parentType, ==, Token, ., ASSIGN, ), {]
[), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (, jsDoc, ==, null, &&, parentType, ==, Token, .]
[||, parentType, ==, Token, ., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (, jsDoc, ==]
[==, Token, ., NAME, ||, parentType, ==, Token, ., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;]
[||, parentType, ==, Token, ., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (, jsDoc, ==]
[., NAME, ||, parentType, ==, Token, ., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (]
[), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (, jsDoc, ==, null, &&, parentType, ==, Token, .]
[==, Token, ., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (, jsDoc, ==, null, &&]
[), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (, jsDoc, ==, null, &&, parentType, ==, Token, .]
[., ASSIGN, ), {, jsDoc, =, parent, ., getJSDocInfo, (, ), ;, if, (, jsDoc, ==, null, &&, parentType, ==]
[=, parent, ., getJSDocInfo, (, ), ;, if, (, jsDoc, ==, null, &&, parentType, ==, Token, ., NAME, ), {]
[;, if, (, jsDoc, ==, null, &&, parentType, ==, Token, ., NAME, ), {, Node, gramps, =, parent, ., getParent]
[., getJSDocInfo, (, ), ;, if, (, jsDoc, ==, null, &&, parentType, ==, Token, ., NAME, ), {, Node, gramps]
[), {, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, gramps, ., isVar, (, ), ), {]
[&&, parentType, ==, Token, ., NAME, ), {, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, gramps]
[==, null, &&, parentType, ==, Token, ., NAME, ), {, Node, gramps, =, parent, ., getParent, (, ), ;, if]
[&&, parentType, ==, Token, ., NAME, ), {, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, gramps]
[), {, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, gramps, ., isVar, (, ), ), {]
[==, Token, ., NAME, ), {, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, gramps, ., isVar]
[), {, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, gramps, ., isVar, (, ), ), {]
[., NAME, ), {, Node, gramps, =, parent, ., getParent, (, ), ;, if, (, gramps, ., isVar, (, )]
[;, if, (, gramps, ., isVar, (, ), ), {, jsDoc, =, gramps, ., getJSDocInfo, (, ), ;, }, }]
[., getParent, (, ), ;, if, (, gramps, ., isVar, (, ), ), {, jsDoc, =, gramps, ., getJSDocInfo, (]
[), {, jsDoc, =, gramps, ., getJSDocInfo, (, ), ;, }, }, }, }, return, jsDoc, ;, }, }]
[., isVar, (, ), ), {, jsDoc, =, gramps, ., getJSDocInfo, (, ), ;, }, }, }, }, return, jsDoc]
[=, gramps, ., getJSDocInfo, (, ), ;, }, }, }, }, return, jsDoc, ;, }, }]
[;, }, }, }, }, return, jsDoc, ;, }, }]
[., getJSDocInfo, (, ), ;, }, }, }, }, return, jsDoc, ;, }, }]
[;, }, }]
