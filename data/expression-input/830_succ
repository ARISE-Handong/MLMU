[;, private, Comparable, key, ;, private, List, bins, ;, private, boolean, adjustForBinSize, ;, public, SimpleHistogramDataset, (, Comparable, key, ), {]
[), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, this, ., key, =, key, ;, this, ., bins, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, this, ., key, =, key, ;, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'key' argument.", ), ;, }, this, ., key, =, key, ;, this, ., bins, =]
[;, }, this, ., key, =, key, ;, this, ., bins, =, new, ArrayList, (, ), ;, this, ., adjustForBinSize]
[), ;, }, this, ., key, =, key, ;, this, ., bins, =, new, ArrayList, (, ), ;, this, .]
[=, key, ;, this, ., bins, =, new, ArrayList, (, ), ;, this, ., adjustForBinSize, =, true, ;, setSelectionState, (]
[., key, =, key, ;, this, ., bins, =, new, ArrayList, (, ), ;, this, ., adjustForBinSize, =, true, ;]
[;, this, ., bins, =, new, ArrayList, (, ), ;, this, ., adjustForBinSize, =, true, ;, setSelectionState, (, this, )]
[=, new, ArrayList, (, ), ;, this, ., adjustForBinSize, =, true, ;, setSelectionState, (, this, ), ;, }, public, boolean]
[., bins, =, new, ArrayList, (, ), ;, this, ., adjustForBinSize, =, true, ;, setSelectionState, (, this, ), ;, }]
[;, this, ., adjustForBinSize, =, true, ;, setSelectionState, (, this, ), ;, }, public, boolean, getAdjustForBinSize, (, ), {, return]
[=, true, ;, setSelectionState, (, this, ), ;, }, public, boolean, getAdjustForBinSize, (, ), {, return, this, ., adjustForBinSize, ;]
[., adjustForBinSize, =, true, ;, setSelectionState, (, this, ), ;, }, public, boolean, getAdjustForBinSize, (, ), {, return, this, .]
[;, setSelectionState, (, this, ), ;, }, public, boolean, getAdjustForBinSize, (, ), {, return, this, ., adjustForBinSize, ;, }, public]
[;, }, public, boolean, getAdjustForBinSize, (, ), {, return, this, ., adjustForBinSize, ;, }, public, void, setAdjustForBinSize, (, boolean, adjust]
[), ;, }, public, boolean, getAdjustForBinSize, (, ), {, return, this, ., adjustForBinSize, ;, }, public, void, setAdjustForBinSize, (, boolean]
[;, }, public, void, setAdjustForBinSize, (, boolean, adjust, ), {, this, ., adjustForBinSize, =, adjust, ;, fireDatasetChanged, (, new, DatasetChangeInfo]
[., adjustForBinSize, ;, }, public, void, setAdjustForBinSize, (, boolean, adjust, ), {, this, ., adjustForBinSize, =, adjust, ;, fireDatasetChanged, (]
[=, adjust, ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, int, getSeriesCount, (, ), {, return, 1]
[., adjustForBinSize, =, adjust, ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, int, getSeriesCount, (, ), {]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, int, getSeriesCount, (, ), {, return, 1, ;, }]
[;, }, public, int, getSeriesCount, (, ), {, return, 1, ;, }, public, Comparable, getSeriesKey, (, int, series, ), {]
[), ;, }, public, int, getSeriesCount, (, ), {, return, 1, ;, }, public, Comparable, getSeriesKey, (, int, series, )]
[;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, this, ., key, ;, }, public, DomainOrder, getDomainOrder, (]
[;, }, public, DomainOrder, getDomainOrder, (, ), {, return, DomainOrder, ., ASCENDING, ;, }, public, int, getItemCount, (, int, series]
[., key, ;, }, public, DomainOrder, getDomainOrder, (, ), {, return, DomainOrder, ., ASCENDING, ;, }, public, int, getItemCount, (]
[;, }, public, int, getItemCount, (, int, series, ), {, return, this, ., bins, ., size, (, ), ;, }]
[., ASCENDING, ;, }, public, int, getItemCount, (, int, series, ), {, return, this, ., bins, ., size, (, )]
[;, }, public, void, addBin, (, SimpleHistogramBin, bin, ), {, Iterator, iterator, =, this, ., bins, ., iterator, (, )]
[., size, (, ), ;, }, public, void, addBin, (, SimpleHistogramBin, bin, ), {, Iterator, iterator, =, this, ., bins]
[., bins, ., size, (, ), ;, }, public, void, addBin, (, SimpleHistogramBin, bin, ), {, Iterator, iterator, =, this]
[;, while, (, iterator, ., hasNext, (, ), ), {, SimpleHistogramBin, existingBin, =, (, SimpleHistogramBin, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, SimpleHistogramBin, existingBin, =, (, SimpleHistogramBin, )]
[., bins, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, SimpleHistogramBin, existingBin, =, (]
[), {, SimpleHistogramBin, existingBin, =, (, SimpleHistogramBin, ), iterator, ., next, (, ), ;, if, (, bin, ., overlapsWith, (]
[., hasNext, (, ), ), {, SimpleHistogramBin, existingBin, =, (, SimpleHistogramBin, ), iterator, ., next, (, ), ;, if, (]
[;, if, (, bin, ., overlapsWith, (, existingBin, ), ), {, throw, new, RuntimeException, (, "Overlapping bin", ), ;, }, }]
[;, if, (, bin, ., overlapsWith, (, existingBin, ), ), {, throw, new, RuntimeException, (, "Overlapping bin", ), ;, }, }]
[., next, (, ), ;, if, (, bin, ., overlapsWith, (, existingBin, ), ), {, throw, new, RuntimeException, (, "Overlapping bin"]
[), {, throw, new, RuntimeException, (, "Overlapping bin", ), ;, }, }, this, ., bins, ., add, (, bin, ), ;]
[., overlapsWith, (, existingBin, ), ), {, throw, new, RuntimeException, (, "Overlapping bin", ), ;, }, }, this, ., bins, .]
[), ), {, throw, new, RuntimeException, (, "Overlapping bin", ), ;, }, }, this, ., bins, ., add, (, bin, )]
[;, }, }, this, ., bins, ., add, (, bin, ), ;, Collections, ., sort, (, this, ., bins, )]
[), ;, }, }, this, ., bins, ., add, (, bin, ), ;, Collections, ., sort, (, this, ., bins]
[;, Collections, ., sort, (, this, ., bins, ), ;, }, public, void, addObservation, (, double, value, ), {, addObservation]
[., add, (, bin, ), ;, Collections, ., sort, (, this, ., bins, ), ;, }, public, void, addObservation, (]
[., bins, ., add, (, bin, ), ;, Collections, ., sort, (, this, ., bins, ), ;, }, public, void]
[), ;, Collections, ., sort, (, this, ., bins, ), ;, }, public, void, addObservation, (, double, value, ), {]
[;, }, public, void, addObservation, (, double, value, ), {, addObservation, (, value, ,, true, ), ;, }, public, void]
[., sort, (, this, ., bins, ), ;, }, public, void, addObservation, (, double, value, ), {, addObservation, (, value]
[), ;, }, public, void, addObservation, (, double, value, ), {, addObservation, (, value, ,, true, ), ;, }, public]
[., bins, ), ;, }, public, void, addObservation, (, double, value, ), {, addObservation, (, value, ,, true, ), ;]
[;, }, public, void, addObservation, (, double, value, ,, boolean, notify, ), {, boolean, placed, =, false, ;, Iterator, iterator]
[,, true, ), ;, }, public, void, addObservation, (, double, value, ,, boolean, notify, ), {, boolean, placed, =, false]
[), ;, }, public, void, addObservation, (, double, value, ,, boolean, notify, ), {, boolean, placed, =, false, ;, Iterator]
[;, Iterator, iterator, =, this, ., bins, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), &&]
[;, while, (, iterator, ., hasNext, (, ), &&, !, placed, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), iterator]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), &&, !, placed, ), {, SimpleHistogramBin, bin, =]
[., bins, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), &&, !, placed, ), {, SimpleHistogramBin]
[), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), iterator, ., next, (, ), ;, if, (, bin, ., accepts, (]
[&&, !, placed, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), iterator, ., next, (, ), ;, if, (, bin]
[., hasNext, (, ), &&, !, placed, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), iterator, ., next, (, )]
[), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), iterator, ., next, (, ), ;, if, (, bin, ., accepts, (]
[), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), iterator, ., next, (, ), ;, if, (, bin, ., accepts, (]
[;, if, (, bin, ., accepts, (, value, ), ), {, bin, ., setItemCount, (, bin, ., getItemCount, (, )]
[;, if, (, bin, ., accepts, (, value, ), ), {, bin, ., setItemCount, (, bin, ., getItemCount, (, )]
[., next, (, ), ;, if, (, bin, ., accepts, (, value, ), ), {, bin, ., setItemCount, (, bin]
[), {, bin, ., setItemCount, (, bin, ., getItemCount, (, ), +, 1, ), ;, placed, =, true, ;, }]
[., accepts, (, value, ), ), {, bin, ., setItemCount, (, bin, ., getItemCount, (, ), +, 1, ), ;]
[), ), {, bin, ., setItemCount, (, bin, ., getItemCount, (, ), +, 1, ), ;, placed, =, true, ;]
[;, placed, =, true, ;, }, }, if, (, !, placed, ), {, throw, new, RuntimeException, (, "No bin.", ), ;]
[., setItemCount, (, bin, ., getItemCount, (, ), +, 1, ), ;, placed, =, true, ;, }, }, if, (]
[), ;, placed, =, true, ;, }, }, if, (, !, placed, ), {, throw, new, RuntimeException, (, "No bin.", )]
[+, 1, ), ;, placed, =, true, ;, }, }, if, (, !, placed, ), {, throw, new, RuntimeException, (]
[., getItemCount, (, ), +, 1, ), ;, placed, =, true, ;, }, }, if, (, !, placed, ), {]
[), ;, placed, =, true, ;, }, }, if, (, !, placed, ), {, throw, new, RuntimeException, (, "No bin.", )]
[=, true, ;, }, }, if, (, !, placed, ), {, throw, new, RuntimeException, (, "No bin.", ), ;, }, if]
[;, }, }, if, (, !, placed, ), {, throw, new, RuntimeException, (, "No bin.", ), ;, }, if, (, notify]
[), {, throw, new, RuntimeException, (, "No bin.", ), ;, }, if, (, notify, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (]
[), {, throw, new, RuntimeException, (, "No bin.", ), ;, }, if, (, notify, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (]
[;, }, if, (, notify, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void, addObservations]
[), ;, }, if, (, notify, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void]
[), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, }, public, void, addObservations, (, double, [, ], values]
[;, }, }, public, void, addObservations, (, double, [, ], values, ), {, for, (, int, i, =, 0, ;]
[), ;, }, }, public, void, addObservations, (, double, [, ], values, ), {, for, (, int, i, =, 0]
[;, i, <, values, ., length, ;, i, ++, ), {, addObservation, (, values, [, i, ], ,, false, )]
[;, i, ++, ), {, addObservation, (, values, [, i, ], ,, false, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo]
[<, values, ., length, ;, i, ++, ), {, addObservation, (, values, [, i, ], ,, false, ), ;, }]
[;, i, ++, ), {, addObservation, (, values, [, i, ], ,, false, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo]
[., length, ;, i, ++, ), {, addObservation, (, values, [, i, ], ,, false, ), ;, }, fireDatasetChanged, (]
[), {, addObservation, (, values, [, i, ], ,, false, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), )]
[++, ), {, addObservation, (, values, [, i, ], ,, false, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, )]
[;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, clearObservations, (, ), {, Iterator, iterator, =]
[,, false, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, clearObservations, (, ), {]
[[, i, ], ,, false, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, clearObservations]
[], ,, false, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, clearObservations, (, )]
[), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, clearObservations, (, ), {, Iterator, iterator]
[;, }, public, void, clearObservations, (, ), {, Iterator, iterator, =, this, ., bins, ., iterator, (, ), ;, while]
[), ;, }, public, void, clearObservations, (, ), {, Iterator, iterator, =, this, ., bins, ., iterator, (, ), ;]
[;, while, (, iterator, ., hasNext, (, ), ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, )]
[., bins, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, SimpleHistogramBin, bin, =, (]
[), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), iterator, ., next, (, ), ;, bin, ., setItemCount, (, 0, )]
[., hasNext, (, ), ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), iterator, ., next, (, ), ;, bin, .]
[;, bin, ., setItemCount, (, 0, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void]
[;, bin, ., setItemCount, (, 0, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void]
[., next, (, ), ;, bin, ., setItemCount, (, 0, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), )]
[;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeAllBins, (, ), {, this, ., bins]
[., setItemCount, (, 0, ), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeAllBins, (]
[), ;, }, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, void, removeAllBins, (, ), {, this, .]
[;, }, public, void, removeAllBins, (, ), {, this, ., bins, =, new, ArrayList, (, ), ;, fireDatasetChanged, (, new]
[), ;, }, public, void, removeAllBins, (, ), {, this, ., bins, =, new, ArrayList, (, ), ;, fireDatasetChanged, (]
[=, new, ArrayList, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, Number, getX, (, int]
[., bins, =, new, ArrayList, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, Number, getX]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, Number, getX, (, int, series, ,, int, item, )]
[;, }, public, Number, getX, (, int, series, ,, int, item, ), {, return, new, Double, (, getXValue, (, series]
[), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, return, new, Double, (, getXValue, (]
[;, }, public, double, getXValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), this]
[), ;, }, public, double, getXValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, )]
[,, item, ), ), ;, }, public, double, getXValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =]
[), ), ;, }, public, double, getXValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin]
[;, return, (, bin, ., getLowerBound, (, ), +, bin, ., getUpperBound, (, ), ), /, 2.0, ;, }, public]
[;, return, (, bin, ., getLowerBound, (, ), +, bin, ., getUpperBound, (, ), ), /, 2.0, ;, }, public]
[., get, (, item, ), ;, return, (, bin, ., getLowerBound, (, ), +, bin, ., getUpperBound, (, ), )]
[., bins, ., get, (, item, ), ;, return, (, bin, ., getLowerBound, (, ), +, bin, ., getUpperBound, (]
[), ;, return, (, bin, ., getLowerBound, (, ), +, bin, ., getUpperBound, (, ), ), /, 2.0, ;, }]
[;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (, getYValue, (, series]
[/, 2.0, ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (, getYValue]
[), /, 2.0, ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (]
[+, bin, ., getUpperBound, (, ), ), /, 2.0, ;, }, public, Number, getY, (, int, series, ,, int, item]
[., getLowerBound, (, ), +, bin, ., getUpperBound, (, ), ), /, 2.0, ;, }, public, Number, getY, (, int]
[), /, 2.0, ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (]
[., getUpperBound, (, ), ), /, 2.0, ;, }, public, Number, getY, (, int, series, ,, int, item, ), {]
[;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (, getYValue, (, series]
[;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), this]
[), ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, )]
[,, item, ), ), ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =]
[), ), ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin]
[;, if, (, this, ., adjustForBinSize, ), {, return, bin, ., getItemCount, (, ), /, (, bin, ., getUpperBound, (]
[;, if, (, this, ., adjustForBinSize, ), {, return, bin, ., getItemCount, (, ), /, (, bin, ., getUpperBound, (]
[., get, (, item, ), ;, if, (, this, ., adjustForBinSize, ), {, return, bin, ., getItemCount, (, ), /]
[., bins, ., get, (, item, ), ;, if, (, this, ., adjustForBinSize, ), {, return, bin, ., getItemCount, (]
[), ;, if, (, this, ., adjustForBinSize, ), {, return, bin, ., getItemCount, (, ), /, (, bin, ., getUpperBound]
[), {, return, bin, ., getItemCount, (, ), /, (, bin, ., getUpperBound, (, ), -, bin, ., getLowerBound, (]
[., adjustForBinSize, ), {, return, bin, ., getItemCount, (, ), /, (, bin, ., getUpperBound, (, ), -, bin, .]
[;, }, else, {, return, bin, ., getItemCount, (, ), ;, }, }, public, Number, getStartX, (, int, series, ,]
[/, (, bin, ., getUpperBound, (, ), -, bin, ., getLowerBound, (, ), ), ;, }, else, {, return, bin]
[., getItemCount, (, ), /, (, bin, ., getUpperBound, (, ), -, bin, ., getLowerBound, (, ), ), ;, }]
[;, }, else, {, return, bin, ., getItemCount, (, ), ;, }, }, public, Number, getStartX, (, int, series, ,]
[), ;, }, else, {, return, bin, ., getItemCount, (, ), ;, }, }, public, Number, getStartX, (, int, series]
[-, bin, ., getLowerBound, (, ), ), ;, }, else, {, return, bin, ., getItemCount, (, ), ;, }, }]
[., getUpperBound, (, ), -, bin, ., getLowerBound, (, ), ), ;, }, else, {, return, bin, ., getItemCount, (]
[), ;, }, else, {, return, bin, ., getItemCount, (, ), ;, }, }, public, Number, getStartX, (, int, series]
[., getLowerBound, (, ), ), ;, }, else, {, return, bin, ., getItemCount, (, ), ;, }, }, public, Number]
[;, }, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, new, Double, (, getStartXValue, (]
[., getItemCount, (, ), ;, }, }, public, Number, getStartX, (, int, series, ,, int, item, ), {, return, new]
[;, }, public, double, getStartXValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), this]
[), ;, }, public, double, getStartXValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, )]
[,, item, ), ), ;, }, public, double, getStartXValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =]
[), ), ;, }, public, double, getStartXValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin]
[;, return, bin, ., getLowerBound, (, ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {]
[;, return, bin, ., getLowerBound, (, ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {]
[., get, (, item, ), ;, return, bin, ., getLowerBound, (, ), ;, }, public, Number, getEndX, (, int, series]
[., bins, ., get, (, item, ), ;, return, bin, ., getLowerBound, (, ), ;, }, public, Number, getEndX, (]
[), ;, return, bin, ., getLowerBound, (, ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, )]
[;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, new, Double, (, getEndXValue, (, series]
[., getLowerBound, (, ), ;, }, public, Number, getEndX, (, int, series, ,, int, item, ), {, return, new, Double]
[;, }, public, double, getEndXValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), this]
[), ;, }, public, double, getEndXValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, )]
[,, item, ), ), ;, }, public, double, getEndXValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =]
[), ), ;, }, public, double, getEndXValue, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin]
[;, return, bin, ., getUpperBound, (, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {]
[;, return, bin, ., getUpperBound, (, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {]
[., get, (, item, ), ;, return, bin, ., getUpperBound, (, ), ;, }, public, Number, getStartY, (, int, series]
[., bins, ., get, (, item, ), ;, return, bin, ., getUpperBound, (, ), ;, }, public, Number, getStartY, (]
[), ;, return, bin, ., getUpperBound, (, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, )]
[;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item, )]
[., getUpperBound, (, ), ;, }, public, Number, getStartY, (, int, series, ,, int, item, ), {, return, getY, (]
[;, }, public, double, getStartYValue, (, int, series, ,, int, item, ), {, return, getYValue, (, series, ,, item, )]
[,, item, ), ;, }, public, double, getStartYValue, (, int, series, ,, int, item, ), {, return, getYValue, (, series]
[), ;, }, public, double, getStartYValue, (, int, series, ,, int, item, ), {, return, getYValue, (, series, ,, item]
[;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item, )]
[,, item, ), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series]
[), ;, }, public, Number, getEndY, (, int, series, ,, int, item, ), {, return, getY, (, series, ,, item]
[;, }, public, double, getEndYValue, (, int, series, ,, int, item, ), {, return, getYValue, (, series, ,, item, )]
[,, item, ), ;, }, public, double, getEndYValue, (, int, series, ,, int, item, ), {, return, getYValue, (, series]
[), ;, }, public, double, getEndYValue, (, int, series, ,, int, item, ), {, return, getYValue, (, series, ,, item]
[;, }, public, boolean, isSelected, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), this]
[,, item, ), ;, }, public, boolean, isSelected, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (]
[), ;, }, public, boolean, isSelected, (, int, series, ,, int, item, ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, )]
[;, return, bin, ., isSelected, (, ), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean]
[;, return, bin, ., isSelected, (, ), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean]
[., get, (, item, ), ;, return, bin, ., isSelected, (, ), ;, }, public, void, setSelected, (, int, series]
[., bins, ., get, (, item, ), ;, return, bin, ., isSelected, (, ), ;, }, public, void, setSelected, (]
[), ;, return, bin, ., isSelected, (, ), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,]
[;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean, selected, ), {, setSelected, (, series, ,]
[., isSelected, (, ), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean, selected, ), {]
[;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean, selected, ,, boolean, notify, ), {, SimpleHistogramBin]
[,, item, ,, selected, ,, true, ), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean]
[,, selected, ,, true, ), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean, selected, ,]
[,, true, ), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean, selected, ,, boolean, notify]
[), ;, }, public, void, setSelected, (, int, series, ,, int, item, ,, boolean, selected, ,, boolean, notify, ), {]
[;, bin, ., setSelected, (, selected, ), ;, if, (, notify, ), {, fireSelectionEvent, (, ), ;, }, }, public]
[;, bin, ., setSelected, (, selected, ), ;, if, (, notify, ), {, fireSelectionEvent, (, ), ;, }, }, public]
[., get, (, item, ), ;, bin, ., setSelected, (, selected, ), ;, if, (, notify, ), {, fireSelectionEvent, (]
[., bins, ., get, (, item, ), ;, bin, ., setSelected, (, selected, ), ;, if, (, notify, ), {]
[), ;, bin, ., setSelected, (, selected, ), ;, if, (, notify, ), {, fireSelectionEvent, (, ), ;, }, }]
[;, if, (, notify, ), {, fireSelectionEvent, (, ), ;, }, }, public, void, clearSelection, (, ), {, Iterator, iterator]
[., setSelected, (, selected, ), ;, if, (, notify, ), {, fireSelectionEvent, (, ), ;, }, }, public, void, clearSelection]
[), ;, if, (, notify, ), {, fireSelectionEvent, (, ), ;, }, }, public, void, clearSelection, (, ), {, Iterator]
[), {, fireSelectionEvent, (, ), ;, }, }, public, void, clearSelection, (, ), {, Iterator, iterator, =, this, ., bins]
[;, }, }, public, void, clearSelection, (, ), {, Iterator, iterator, =, this, ., bins, ., iterator, (, ), ;]
[;, boolean, changed, =, false, ;, while, (, iterator, ., hasNext, (, ), ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin]
[., iterator, (, ), ;, boolean, changed, =, false, ;, while, (, iterator, ., hasNext, (, ), ), {, SimpleHistogramBin]
[., bins, ., iterator, (, ), ;, boolean, changed, =, false, ;, while, (, iterator, ., hasNext, (, ), )]
[;, while, (, iterator, ., hasNext, (, ), ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), iterator, ., next, (]
[), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), iterator, ., next, (, ), ;, if, (, bin, ., isSelected, (]
[., hasNext, (, ), ), {, SimpleHistogramBin, bin, =, (, SimpleHistogramBin, ), iterator, ., next, (, ), ;, if, (]
[;, if, (, bin, ., isSelected, (, ), ), {, bin, ., setSelected, (, false, ), ;, changed, =, true]
[;, if, (, bin, ., isSelected, (, ), ), {, bin, ., setSelected, (, false, ), ;, changed, =, true]
[., next, (, ), ;, if, (, bin, ., isSelected, (, ), ), {, bin, ., setSelected, (, false, )]
[), {, bin, ., setSelected, (, false, ), ;, changed, =, true, ;, }, }, if, (, changed, ), {]
[., isSelected, (, ), ), {, bin, ., setSelected, (, false, ), ;, changed, =, true, ;, }, }, if]
[;, changed, =, true, ;, }, }, if, (, changed, ), {, fireSelectionEvent, (, ), ;, }, }, public, void]
[., setSelected, (, false, ), ;, changed, =, true, ;, }, }, if, (, changed, ), {, fireSelectionEvent, (, )]
[), ;, changed, =, true, ;, }, }, if, (, changed, ), {, fireSelectionEvent, (, ), ;, }, }, public]
[=, true, ;, }, }, if, (, changed, ), {, fireSelectionEvent, (, ), ;, }, }, public, void, fireSelectionEvent, (]
[;, }, }, if, (, changed, ), {, fireSelectionEvent, (, ), ;, }, }, public, void, fireSelectionEvent, (, ), {]
[), {, fireSelectionEvent, (, ), ;, }, }, public, void, fireSelectionEvent, (, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, )]
[;, }, }, public, void, fireSelectionEvent, (, ), {, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, SimpleHistogramDataset, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, SimpleHistogramDataset, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, SimpleHistogramDataset, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, SimpleHistogramDataset, ), ), {, return, false, ;, }, SimpleHistogramDataset, that, =, (]
[), {, return, false, ;, }, SimpleHistogramDataset, that, =, (, SimpleHistogramDataset, ), obj, ;, if, (, !, this, ., key]
[), {, return, false, ;, }, SimpleHistogramDataset, that, =, (, SimpleHistogramDataset, ), obj, ;, if, (, !, this, ., key]
[), ), {, return, false, ;, }, SimpleHistogramDataset, that, =, (, SimpleHistogramDataset, ), obj, ;, if, (, !, this, .]
[instanceof, SimpleHistogramDataset, ), ), {, return, false, ;, }, SimpleHistogramDataset, that, =, (, SimpleHistogramDataset, ), obj, ;, if, (, !]
[;, }, SimpleHistogramDataset, that, =, (, SimpleHistogramDataset, ), obj, ;, if, (, !, this, ., key, ., equals, (, that]
[;, if, (, !, this, ., key, ., equals, (, that, ., key, ), ), {, return, false, ;, }]
[;, if, (, !, this, ., key, ., equals, (, that, ., key, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, if, (, this, ., adjustForBinSize, !=, that, ., adjustForBinSize, ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., adjustForBinSize, !=, that, ., adjustForBinSize, ), {, return, false, ;]
[., equals, (, that, ., key, ), ), {, return, false, ;, }, if, (, this, ., adjustForBinSize, !=, that]
[., key, ., equals, (, that, ., key, ), ), {, return, false, ;, }, if, (, this, ., adjustForBinSize]
[), ), {, return, false, ;, }, if, (, this, ., adjustForBinSize, !=, that, ., adjustForBinSize, ), {, return, false]
[., key, ), ), {, return, false, ;, }, if, (, this, ., adjustForBinSize, !=, that, ., adjustForBinSize, ), {]
[;, }, if, (, this, ., adjustForBinSize, !=, that, ., adjustForBinSize, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, this, ., bins, ., equals, (, that, ., bins, ), )]
[!=, that, ., adjustForBinSize, ), {, return, false, ;, }, if, (, !, this, ., bins, ., equals, (, that]
[., adjustForBinSize, !=, that, ., adjustForBinSize, ), {, return, false, ;, }, if, (, !, this, ., bins, ., equals]
[), {, return, false, ;, }, if, (, !, this, ., bins, ., equals, (, that, ., bins, ), )]
[., adjustForBinSize, ), {, return, false, ;, }, if, (, !, this, ., bins, ., equals, (, that, ., bins]
[;, }, if, (, !, this, ., bins, ., equals, (, that, ., bins, ), ), {, return, false, ;]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, SimpleHistogramDataset, clone]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, SimpleHistogramDataset, clone]
[., equals, (, that, ., bins, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone]
[., bins, ., equals, (, that, ., bins, ), ), {, return, false, ;, }, return, true, ;, }, public]
[), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, SimpleHistogramDataset]
[., bins, ), ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, SimpleHistogramDataset, clone, =, (, SimpleHistogramDataset, )]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, SimpleHistogramDataset, clone, =, (, SimpleHistogramDataset, ), super, ., clone, (]
[;, clone, ., bins, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., bins, ), ;, return, clone, ;]
[;, clone, ., bins, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., bins, ), ;, return, clone, ;]
[., clone, (, ), ;, clone, ., bins, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., bins, )]
[=, (, List, ), ObjectUtilities, ., deepClone, (, this, ., bins, ), ;, return, clone, ;, }, }]
[., bins, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., bins, ), ;, return, clone, ;, }, }]
[;, return, clone, ;, }, }]
[;, return, clone, ;, }, }]
[., deepClone, (, this, ., bins, ), ;, return, clone, ;, }, }]
[), ;, return, clone, ;, }, }]
[., bins, ), ;, return, clone, ;, }, }]
[;, }, }]
