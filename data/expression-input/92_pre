[class, Calls, implements, VerificationMode, ,, VerificationInOrderMode, {, final, int, wantedCount, ;, public, Calls, (, int, wantedNumberOfInvocations, ), {, if, (]
[class, Calls, implements, VerificationMode, ,, VerificationInOrderMode, {, final, int, wantedCount, ;, public, Calls, (, int, wantedNumberOfInvocations, ), {, if, (]
[implements, VerificationMode, ,, VerificationInOrderMode, {, final, int, wantedCount, ;, public, Calls, (, int, wantedNumberOfInvocations, ), {, if, (, wantedNumberOfInvocations, <=]
[{, final, int, wantedCount, ;, public, Calls, (, int, wantedNumberOfInvocations, ), {, if, (, wantedNumberOfInvocations, <=, 0, ), {, throw]
[wantedCount, ;, public, Calls, (, int, wantedNumberOfInvocations, ), {, if, (, wantedNumberOfInvocations, <=, 0, ), {, throw, new, MockitoException, (]
[(, int, wantedNumberOfInvocations, ), {, if, (, wantedNumberOfInvocations, <=, 0, ), {, throw, new, MockitoException, (, "Negative and zero values are not allowed here", ), ;, }]
[(, int, wantedNumberOfInvocations, ), {, if, (, wantedNumberOfInvocations, <=, 0, ), {, throw, new, MockitoException, (, "Negative and zero values are not allowed here", ), ;, }]
[{, if, (, wantedNumberOfInvocations, <=, 0, ), {, throw, new, MockitoException, (, "Negative and zero values are not allowed here", ), ;, }, this, ., wantedCount, =]
["Negative and zero values are not allowed here", ), ;, }, this, ., wantedCount, =, wantedNumberOfInvocations, ;, }, public, void, verify, (, VerificationData, data, ), {, throw]
[}, this, ., wantedCount, =, wantedNumberOfInvocations, ;, }, public, void, verify, (, VerificationData, data, ), {, throw, new, MockitoException, (]
[MockitoException, (, "calls is only intended to work with InOrder", ), ;, }, public, void, verifyInOrder, (, VerificationDataInOrder, data, ), {, List, <, Invocation, >, allInvocations, =]
[MockitoException, (, "calls is only intended to work with InOrder", ), ;, }, public, void, verifyInOrder, (, VerificationDataInOrder, data, ), {, List, <, Invocation, >, allInvocations, =]
[(, VerificationDataInOrder, data, ), {, List, <, Invocation, >, allInvocations, =, data, ., getAllInvocations, (, ), ;, InvocationMatcher, wanted, =]
[(, VerificationDataInOrder, data, ), {, List, <, Invocation, >, allInvocations, =, data, ., getAllInvocations, (, ), ;, InvocationMatcher, wanted, =]
[allInvocations, =, data, ., getAllInvocations, (, ), ;, InvocationMatcher, wanted, =, data, ., getWanted, (, ), ;, MissingInvocationInOrderChecker, missingInvocation, =]
[(, ), ;, InvocationMatcher, wanted, =, data, ., getWanted, (, ), ;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (, ), ;]
[(, ), ;, InvocationMatcher, wanted, =, data, ., getWanted, (, ), ;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (, ), ;]
[wanted, =, data, ., getWanted, (, ), ;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (, ), ;, missingInvocation, ., check, (]
[data, ., getWanted, (, ), ;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (, ), ;, missingInvocation, ., check, (, allInvocations, ,]
[getWanted, (, ), ;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (, ), ;, missingInvocation, ., check, (, allInvocations, ,, wanted, ,]
[), ;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (, ), ;, missingInvocation, ., check, (, allInvocations, ,, wanted, ,, this, ,]
[), ;, MissingInvocationInOrderChecker, missingInvocation, =, new, MissingInvocationInOrderChecker, (, ), ;, missingInvocation, ., check, (, allInvocations, ,, wanted, ,, this, ,]
[missingInvocation, ., check, (, allInvocations, ,, wanted, ,, this, ,, data, ., getOrderingContext, (, ), ), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =]
[,, wanted, ,, this, ,, data, ., getOrderingContext, (, ), ), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, NonGreedyNumberOfInvocationsInOrderChecker, (, ), ;]
[,, wanted, ,, this, ,, data, ., getOrderingContext, (, ), ), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, NonGreedyNumberOfInvocationsInOrderChecker, (, ), ;]
[,, data, ., getOrderingContext, (, ), ), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, NonGreedyNumberOfInvocationsInOrderChecker, (, ), ;, numberOfCalls, ., check, (]
[., getOrderingContext, (, ), ), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, NonGreedyNumberOfInvocationsInOrderChecker, (, ), ;, numberOfCalls, ., check, (, allInvocations, ,]
[(, ), ), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, NonGreedyNumberOfInvocationsInOrderChecker, (, ), ;, numberOfCalls, ., check, (, allInvocations, ,, wanted, ,]
[), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, NonGreedyNumberOfInvocationsInOrderChecker, (, ), ;, numberOfCalls, ., check, (, allInvocations, ,, wanted, ,, wantedCount, ,]
[), ;, NonGreedyNumberOfInvocationsInOrderChecker, numberOfCalls, =, new, NonGreedyNumberOfInvocationsInOrderChecker, (, ), ;, numberOfCalls, ., check, (, allInvocations, ,, wanted, ,, wantedCount, ,]
[,, wantedCount, ,, data, ., getOrderingContext, (, ), ), ;, }, @, Override, public, String, toString, (, ), {, return]
[,, wantedCount, ,, data, ., getOrderingContext, (, ), ), ;, }, @, Override, public, String, toString, (, ), {, return]
[,, data, ., getOrderingContext, (, ), ), ;, }, @, Override, public, String, toString, (, ), {, return, "Wanted invocations count (non-greedy): ", +]
