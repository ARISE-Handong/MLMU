[public, class, FieldVector3D, <, T, extends, RealFieldElement, <, T, >, >, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[final, T, z, ;, public, FieldVector3D, (, final, T, x, ,, final, T, y, ,, final, T, z, ), {]
[final, T, z, ;, public, FieldVector3D, (, final, T, x, ,, final, T, y, ,, final, T, z, ), {]
[public, FieldVector3D, (, final, T, x, ,, final, T, y, ,, final, T, z, ), {, this, ., x, =]
[(, final, T, x, ,, final, T, y, ,, final, T, z, ), {, this, ., x, =, x, ;]
[(, final, T, x, ,, final, T, y, ,, final, T, z, ), {, this, ., x, =, x, ;]
[,, final, T, y, ,, final, T, z, ), {, this, ., x, =, x, ;, this, ., y, =]
[T, y, ,, final, T, z, ), {, this, ., x, =, x, ;, this, ., y, =, y, ;]
[T, y, ,, final, T, z, ), {, this, ., x, =, x, ;, this, ., y, =, y, ;]
[T, z, ), {, this, ., x, =, x, ;, this, ., y, =, y, ;, this, ., z, =]
[., z, =, z, ;, }, public, FieldVector3D, (, final, T, [, ], v, ), throws, DimensionMismatchException, {, if, (]
[., z, =, z, ;, }, public, FieldVector3D, (, final, T, [, ], v, ), throws, DimensionMismatchException, {, if, (]
[., z, =, z, ;, }, public, FieldVector3D, (, final, T, [, ], v, ), throws, DimensionMismatchException, {, if, (]
[;, }, public, FieldVector3D, (, final, T, [, ], v, ), throws, DimensionMismatchException, {, if, (, v, ., length, !=]
[(, final, T, [, ], v, ), throws, DimensionMismatchException, {, if, (, v, ., length, !=, 3, ), {, throw]
[[, ], v, ), throws, DimensionMismatchException, {, if, (, v, ., length, !=, 3, ), {, throw, new, DimensionMismatchException, (]
[[, ], v, ), throws, DimensionMismatchException, {, if, (, v, ., length, !=, 3, ), {, throw, new, DimensionMismatchException, (]
[throws, DimensionMismatchException, {, if, (, v, ., length, !=, 3, ), {, throw, new, DimensionMismatchException, (, v, ., length, ,]
[(, v, ., length, !=, 3, ), {, throw, new, DimensionMismatchException, (, v, ., length, ,, 3, ), ;, }]
[(, v, ., length, !=, 3, ), {, throw, new, DimensionMismatchException, (, v, ., length, ,, 3, ), ;, }]
[!=, 3, ), {, throw, new, DimensionMismatchException, (, v, ., length, ,, 3, ), ;, }, this, ., x, =]
[!=, 3, ), {, throw, new, DimensionMismatchException, (, v, ., length, ,, 3, ), ;, }, this, ., x, =]
[), {, throw, new, DimensionMismatchException, (, v, ., length, ,, 3, ), ;, }, this, ., x, =, v, []
[new, DimensionMismatchException, (, v, ., length, ,, 3, ), ;, }, this, ., x, =, v, [, 0, ], ;]
[new, DimensionMismatchException, (, v, ., length, ,, 3, ), ;, }, this, ., x, =, v, [, 0, ], ;]
[., length, ,, 3, ), ;, }, this, ., x, =, v, [, 0, ], ;, this, ., y, =]
[., length, ,, 3, ), ;, }, this, ., x, =, v, [, 0, ], ;, this, ., y, =]
[,, 3, ), ;, }, this, ., x, =, v, [, 0, ], ;, this, ., y, =, v, []
[;, }, this, ., x, =, v, [, 0, ], ;, this, ., y, =, v, [, 1, ], ;]
[;, }, this, ., x, =, v, [, 0, ], ;, this, ., y, =, v, [, 1, ], ;]
[x, =, v, [, 0, ], ;, this, ., y, =, v, [, 1, ], ;, this, ., z, =]
[x, =, v, [, 0, ], ;, this, ., y, =, v, [, 1, ], ;, this, ., z, =]
[v, [, 0, ], ;, this, ., y, =, v, [, 1, ], ;, this, ., z, =, v, []
[[, 2, ], ;, }, public, FieldVector3D, (, final, T, alpha, ,, final, T, delta, ), {, T, cosDelta, =]
[[, 2, ], ;, }, public, FieldVector3D, (, final, T, alpha, ,, final, T, delta, ), {, T, cosDelta, =]
[FieldVector3D, (, final, T, alpha, ,, final, T, delta, ), {, T, cosDelta, =, delta, ., cos, (, ), ;]
[FieldVector3D, (, final, T, alpha, ,, final, T, delta, ), {, T, cosDelta, =, delta, ., cos, (, ), ;]
[alpha, ,, final, T, delta, ), {, T, cosDelta, =, delta, ., cos, (, ), ;, this, ., x, =]
[alpha, ,, final, T, delta, ), {, T, cosDelta, =, delta, ., cos, (, ), ;, this, ., x, =]
[alpha, ,, final, T, delta, ), {, T, cosDelta, =, delta, ., cos, (, ), ;, this, ., x, =]
[cosDelta, =, delta, ., cos, (, ), ;, this, ., x, =, alpha, ., cos, (, ), ., multiply, (]
[., cos, (, ), ;, this, ., x, =, alpha, ., cos, (, ), ., multiply, (, cosDelta, ), ;]
[., cos, (, ), ;, this, ., x, =, alpha, ., cos, (, ), ., multiply, (, cosDelta, ), ;]
[;, this, ., x, =, alpha, ., cos, (, ), ., multiply, (, cosDelta, ), ;, this, ., y, =]
[;, this, ., x, =, alpha, ., cos, (, ), ., multiply, (, cosDelta, ), ;, this, ., y, =]
[;, this, ., x, =, alpha, ., cos, (, ), ., multiply, (, cosDelta, ), ;, this, ., y, =]
[(, ), ., multiply, (, cosDelta, ), ;, this, ., y, =, alpha, ., sin, (, ), ., multiply, (]
[multiply, (, cosDelta, ), ;, this, ., y, =, alpha, ., sin, (, ), ., multiply, (, cosDelta, ), ;]
[multiply, (, cosDelta, ), ;, this, ., y, =, alpha, ., sin, (, ), ., multiply, (, cosDelta, ), ;]
[;, this, ., y, =, alpha, ., sin, (, ), ., multiply, (, cosDelta, ), ;, this, ., z, =]
[;, this, ., y, =, alpha, ., sin, (, ), ., multiply, (, cosDelta, ), ;, this, ., z, =]
[sin, (, ), ;, }, public, FieldVector3D, (, final, T, a, ,, final, FieldVector3D, <, T, >, u, ), {]
[sin, (, ), ;, }, public, FieldVector3D, (, final, T, a, ,, final, FieldVector3D, <, T, >, u, ), {]
[}, public, FieldVector3D, (, final, T, a, ,, final, FieldVector3D, <, T, >, u, ), {, this, ., x, =]
[}, public, FieldVector3D, (, final, T, a, ,, final, FieldVector3D, <, T, >, u, ), {, this, ., x, =]
[final, T, a, ,, final, FieldVector3D, <, T, >, u, ), {, this, ., x, =, a, ., multiply, (]
[final, T, a, ,, final, FieldVector3D, <, T, >, u, ), {, this, ., x, =, a, ., multiply, (]
[FieldVector3D, <, T, >, u, ), {, this, ., x, =, a, ., multiply, (, u, ., x, ), ;]
[FieldVector3D, <, T, >, u, ), {, this, ., x, =, a, ., multiply, (, u, ., x, ), ;]
[u, ), {, this, ., x, =, a, ., multiply, (, u, ., x, ), ;, this, ., y, =]
[u, ), {, this, ., x, =, a, ., multiply, (, u, ., x, ), ;, this, ., y, =]
[., x, =, a, ., multiply, (, u, ., x, ), ;, this, ., y, =, a, ., multiply, (]
[., x, =, a, ., multiply, (, u, ., x, ), ;, this, ., y, =, a, ., multiply, (]
[multiply, (, u, ., x, ), ;, this, ., y, =, a, ., multiply, (, u, ., y, ), ;]
[multiply, (, u, ., x, ), ;, this, ., y, =, a, ., multiply, (, u, ., y, ), ;]
[x, ), ;, this, ., y, =, a, ., multiply, (, u, ., y, ), ;, this, ., z, =]
[x, ), ;, this, ., y, =, a, ., multiply, (, u, ., y, ), ;, this, ., z, =]
[., y, =, a, ., multiply, (, u, ., y, ), ;, this, ., z, =, a, ., multiply, (]
[., y, =, a, ., multiply, (, u, ., y, ), ;, this, ., z, =, a, ., multiply, (]
[multiply, (, u, ., z, ), ;, }, public, FieldVector3D, (, final, T, a, ,, final, Vector3D, u, ), {]
[multiply, (, u, ., z, ), ;, }, public, FieldVector3D, (, final, T, a, ,, final, Vector3D, u, ), {]
[z, ), ;, }, public, FieldVector3D, (, final, T, a, ,, final, Vector3D, u, ), {, this, ., x, =]
[z, ), ;, }, public, FieldVector3D, (, final, T, a, ,, final, Vector3D, u, ), {, this, ., x, =]
[public, FieldVector3D, (, final, T, a, ,, final, Vector3D, u, ), {, this, ., x, =, a, ., multiply, (]
[public, FieldVector3D, (, final, T, a, ,, final, Vector3D, u, ), {, this, ., x, =, a, ., multiply, (]
[final, Vector3D, u, ), {, this, ., x, =, a, ., multiply, (, u, ., getX, (, ), ), ;]
[final, Vector3D, u, ), {, this, ., x, =, a, ., multiply, (, u, ., getX, (, ), ), ;]
[{, this, ., x, =, a, ., multiply, (, u, ., getX, (, ), ), ;, this, ., y, =]
[{, this, ., x, =, a, ., multiply, (, u, ., getX, (, ), ), ;, this, ., y, =]
[=, a, ., multiply, (, u, ., getX, (, ), ), ;, this, ., y, =, a, ., multiply, (]
[=, a, ., multiply, (, u, ., getX, (, ), ), ;, this, ., y, =, a, ., multiply, (]
[getX, (, ), ), ;, this, ., y, =, a, ., multiply, (, u, ., getY, (, ), ), ;]
[getX, (, ), ), ;, this, ., y, =, a, ., multiply, (, u, ., getY, (, ), ), ;]
[;, this, ., y, =, a, ., multiply, (, u, ., getY, (, ), ), ;, this, ., z, =]
[;, this, ., y, =, a, ., multiply, (, u, ., getY, (, ), ), ;, this, ., z, =]
[=, a, ., multiply, (, u, ., getY, (, ), ), ;, this, ., z, =, a, ., multiply, (]
[=, a, ., multiply, (, u, ., getY, (, ), ), ;, this, ., z, =, a, ., multiply, (]
[(, ), ), ;, }, public, FieldVector3D, (, final, double, a, ,, final, FieldVector3D, <, T, >, u, ), {]
[(, ), ), ;, }, public, FieldVector3D, (, final, double, a, ,, final, FieldVector3D, <, T, >, u, ), {]
[}, public, FieldVector3D, (, final, double, a, ,, final, FieldVector3D, <, T, >, u, ), {, this, ., x, =]
[}, public, FieldVector3D, (, final, double, a, ,, final, FieldVector3D, <, T, >, u, ), {, this, ., x, =]
[}, public, FieldVector3D, (, final, double, a, ,, final, FieldVector3D, <, T, >, u, ), {, this, ., x, =]
[a, ,, final, FieldVector3D, <, T, >, u, ), {, this, ., x, =, u, ., x, ., multiply, (]
[FieldVector3D, <, T, >, u, ), {, this, ., x, =, u, ., x, ., multiply, (, a, ), ;]
[FieldVector3D, <, T, >, u, ), {, this, ., x, =, u, ., x, ., multiply, (, a, ), ;]
[u, ), {, this, ., x, =, u, ., x, ., multiply, (, a, ), ;, this, ., y, =]
[u, ), {, this, ., x, =, u, ., x, ., multiply, (, a, ), ;, this, ., y, =]
[u, ), {, this, ., x, =, u, ., x, ., multiply, (, a, ), ;, this, ., y, =]
[=, u, ., x, ., multiply, (, a, ), ;, this, ., y, =, u, ., y, ., multiply, (]
[x, ., multiply, (, a, ), ;, this, ., y, =, u, ., y, ., multiply, (, a, ), ;]
[x, ., multiply, (, a, ), ;, this, ., y, =, u, ., y, ., multiply, (, a, ), ;]
[a, ), ;, this, ., y, =, u, ., y, ., multiply, (, a, ), ;, this, ., z, =]
[a, ), ;, this, ., y, =, u, ., y, ., multiply, (, a, ), ;, this, ., z, =]
[a, ), ;, this, ., y, =, u, ., y, ., multiply, (, a, ), ;, this, ., z, =]
[=, u, ., y, ., multiply, (, a, ), ;, this, ., z, =, u, ., z, ., multiply, (]
[T, >, u1, ,, final, T, a2, ,, final, FieldVector3D, <, T, >, u2, ), {, final, T, prototype, =]
[u1, ,, final, T, a2, ,, final, FieldVector3D, <, T, >, u2, ), {, final, T, prototype, =, a1, ;]
[u1, ,, final, T, a2, ,, final, FieldVector3D, <, T, >, u2, ), {, final, T, prototype, =, a1, ;]
[a2, ,, final, FieldVector3D, <, T, >, u2, ), {, final, T, prototype, =, a1, ;, this, ., x, =]
[a2, ,, final, FieldVector3D, <, T, >, u2, ), {, final, T, prototype, =, a1, ;, this, ., x, =]
[<, T, >, u2, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (]
[>, u2, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,]
[>, u2, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,]
[prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,]
[a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,]
[a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,]
[., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ), ;]
[., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ), ;]
[,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ), ;, this, ., y, =]
[,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ), ;, this, ., y, =]
[(, ), ,, a2, ,, u2, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (]
[,, a2, ,, u2, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,]
[,, a2, ,, u2, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,]
[(, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,]
[), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,]
[), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,]
[., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ), ;]
[., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ), ;]
[,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ), ;, this, ., z, =]
[,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ), ;, this, ., z, =]
[(, ), ,, a2, ,, u2, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (]
[,, a2, ,, u2, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,]
[,, a2, ,, u2, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,]
[(, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,]
[), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,]
[), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,]
[T, a1, ,, final, Vector3D, u1, ,, final, T, a2, ,, final, Vector3D, u2, ), {, final, T, prototype, =]
[,, final, Vector3D, u1, ,, final, T, a2, ,, final, Vector3D, u2, ), {, final, T, prototype, =, a1, ;]
[,, final, Vector3D, u1, ,, final, T, a2, ,, final, Vector3D, u2, ), {, final, T, prototype, =, a1, ;]
[,, final, T, a2, ,, final, Vector3D, u2, ), {, final, T, prototype, =, a1, ;, this, ., x, =]
[,, final, T, a2, ,, final, Vector3D, u2, ), {, final, T, prototype, =, a1, ;, this, ., x, =]
[,, final, Vector3D, u2, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (]
[,, final, Vector3D, u2, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (]
[final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, u1, ., getX, (, ), ,]
[prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, u1, ., getX, (, ), ,, a1, ,]
[prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, u1, ., getX, (, ), ,, a1, ,]
[x, =, prototype, ., linearCombination, (, u1, ., getX, (, ), ,, a1, ,, u2, ., getX, (, ), ,]
[., linearCombination, (, u1, ., getX, (, ), ,, a1, ,, u2, ., getX, (, ), ,, a2, ), ;]
[., linearCombination, (, u1, ., getX, (, ), ,, a1, ,, u2, ., getX, (, ), ,, a2, ), ;]
[., getX, (, ), ,, a1, ,, u2, ., getX, (, ), ,, a2, ), ;, this, ., y, =]
[., getX, (, ), ,, a1, ,, u2, ., getX, (, ), ,, a2, ), ;, this, ., y, =]
[,, a1, ,, u2, ., getX, (, ), ,, a2, ), ;, this, ., y, =, prototype, ., linearCombination, (]
[,, a1, ,, u2, ., getX, (, ), ,, a2, ), ;, this, ., y, =, prototype, ., linearCombination, (]
[(, ), ,, a2, ), ;, this, ., y, =, prototype, ., linearCombination, (, u1, ., getY, (, ), ,]
[,, a2, ), ;, this, ., y, =, prototype, ., linearCombination, (, u1, ., getY, (, ), ,, a1, ,]
[,, a2, ), ;, this, ., y, =, prototype, ., linearCombination, (, u1, ., getY, (, ), ,, a1, ,]
[y, =, prototype, ., linearCombination, (, u1, ., getY, (, ), ,, a1, ,, u2, ., getY, (, ), ,]
[., linearCombination, (, u1, ., getY, (, ), ,, a1, ,, u2, ., getY, (, ), ,, a2, ), ;]
[., linearCombination, (, u1, ., getY, (, ), ,, a1, ,, u2, ., getY, (, ), ,, a2, ), ;]
[., getY, (, ), ,, a1, ,, u2, ., getY, (, ), ,, a2, ), ;, this, ., z, =]
[., getY, (, ), ,, a1, ,, u2, ., getY, (, ), ,, a2, ), ;, this, ., z, =]
[,, a1, ,, u2, ., getY, (, ), ,, a2, ), ;, this, ., z, =, prototype, ., linearCombination, (]
[,, a1, ,, u2, ., getY, (, ), ,, a2, ), ;, this, ., z, =, prototype, ., linearCombination, (]
[(, ), ,, a2, ), ;, this, ., z, =, prototype, ., linearCombination, (, u1, ., getZ, (, ), ,]
[,, a2, ), ;, this, ., z, =, prototype, ., linearCombination, (, u1, ., getZ, (, ), ,, a1, ,]
[,, a2, ), ;, this, ., z, =, prototype, ., linearCombination, (, u1, ., getZ, (, ), ,, a1, ,]
[z, =, prototype, ., linearCombination, (, u1, ., getZ, (, ), ,, a1, ,, u2, ., getZ, (, ), ,]
[T, >, u1, ,, final, double, a2, ,, final, FieldVector3D, <, T, >, u2, ), {, final, T, prototype, =]
[T, >, u1, ,, final, double, a2, ,, final, FieldVector3D, <, T, >, u2, ), {, final, T, prototype, =]
[a2, ,, final, FieldVector3D, <, T, >, u2, ), {, final, T, prototype, =, u1, ., getX, (, ), ;]
[a2, ,, final, FieldVector3D, <, T, >, u2, ), {, final, T, prototype, =, u1, ., getX, (, ), ;]
[<, T, >, u2, ), {, final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =]
[<, T, >, u2, ), {, final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =]
[), {, final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =, prototype, ., linearCombination, (]
[final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,]
[final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,]
[getX, (, ), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,]
[), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,]
[), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,]
[., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ), ;]
[., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ), ;]
[,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ), ;, this, ., y, =]
[,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ), ;, this, ., y, =]
[(, ), ,, a2, ,, u2, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (]
[,, a2, ,, u2, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,]
[,, a2, ,, u2, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,]
[(, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,]
[), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,]
[), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,]
[., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ), ;]
[., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ), ;]
[,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ), ;, this, ., z, =]
[,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ), ;, this, ., z, =]
[(, ), ,, a2, ,, u2, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (]
[,, a2, ,, u2, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,]
[,, a2, ,, u2, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,]
[(, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,]
[), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,]
[), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,]
[T, >, u2, ,, final, T, a3, ,, final, FieldVector3D, <, T, >, u3, ), {, final, T, prototype, =]
[u2, ,, final, T, a3, ,, final, FieldVector3D, <, T, >, u3, ), {, final, T, prototype, =, a1, ;]
[u2, ,, final, T, a3, ,, final, FieldVector3D, <, T, >, u3, ), {, final, T, prototype, =, a1, ;]
[a3, ,, final, FieldVector3D, <, T, >, u3, ), {, final, T, prototype, =, a1, ;, this, ., x, =]
[a3, ,, final, FieldVector3D, <, T, >, u3, ), {, final, T, prototype, =, a1, ;, this, ., x, =]
[<, T, >, u3, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (]
[>, u3, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,]
[>, u3, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,]
[prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,]
[a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,]
[a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,]
[linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,]
[linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,]
[(, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ), ;]
[(, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ), ;]
[,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ), ;, this, ., y, =]
[,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ), ;, this, ., y, =]
[(, ), ,, a3, ,, u3, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (]
[,, a3, ,, u3, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,]
[,, a3, ,, u3, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,]
[(, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,]
[), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,]
[), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,]
[linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,]
[linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,]
[(, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ), ;]
[(, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ), ;]
[,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ), ;, this, ., z, =]
[,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ), ;, this, ., z, =]
[(, ), ,, a3, ,, u3, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (]
[,, a3, ,, u3, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,]
[,, a3, ,, u3, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,]
[(, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,]
[), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,]
[), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,]
[linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,]
[linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,]
[T, a2, ,, final, Vector3D, u2, ,, final, T, a3, ,, final, Vector3D, u3, ), {, final, T, prototype, =]
[,, final, Vector3D, u2, ,, final, T, a3, ,, final, Vector3D, u3, ), {, final, T, prototype, =, a1, ;]
[,, final, Vector3D, u2, ,, final, T, a3, ,, final, Vector3D, u3, ), {, final, T, prototype, =, a1, ;]
[,, final, T, a3, ,, final, Vector3D, u3, ), {, final, T, prototype, =, a1, ;, this, ., x, =]
[,, final, T, a3, ,, final, Vector3D, u3, ), {, final, T, prototype, =, a1, ;, this, ., x, =]
[,, final, Vector3D, u3, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (]
[,, final, Vector3D, u3, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (]
[final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, u1, ., getX, (, ), ,]
[prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, u1, ., getX, (, ), ,, a1, ,]
[prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, u1, ., getX, (, ), ,, a1, ,]
[x, =, prototype, ., linearCombination, (, u1, ., getX, (, ), ,, a1, ,, u2, ., getX, (, ), ,]
[prototype, ., linearCombination, (, u1, ., getX, (, ), ,, a1, ,, u2, ., getX, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, u1, ., getX, (, ), ,, a1, ,, u2, ., getX, (, ), ,, a2, ,]
[getX, (, ), ,, a1, ,, u2, ., getX, (, ), ,, a2, ,, u3, ., getX, (, ), ,]
[,, a1, ,, u2, ., getX, (, ), ,, a2, ,, u3, ., getX, (, ), ,, a3, ), ;]
[,, a1, ,, u2, ., getX, (, ), ,, a2, ,, u3, ., getX, (, ), ,, a3, ), ;]
[., getX, (, ), ,, a2, ,, u3, ., getX, (, ), ,, a3, ), ;, this, ., y, =]
[., getX, (, ), ,, a2, ,, u3, ., getX, (, ), ,, a3, ), ;, this, ., y, =]
[,, a2, ,, u3, ., getX, (, ), ,, a3, ), ;, this, ., y, =, prototype, ., linearCombination, (]
[,, a2, ,, u3, ., getX, (, ), ,, a3, ), ;, this, ., y, =, prototype, ., linearCombination, (]
[(, ), ,, a3, ), ;, this, ., y, =, prototype, ., linearCombination, (, u1, ., getY, (, ), ,]
[,, a3, ), ;, this, ., y, =, prototype, ., linearCombination, (, u1, ., getY, (, ), ,, a1, ,]
[,, a3, ), ;, this, ., y, =, prototype, ., linearCombination, (, u1, ., getY, (, ), ,, a1, ,]
[y, =, prototype, ., linearCombination, (, u1, ., getY, (, ), ,, a1, ,, u2, ., getY, (, ), ,]
[prototype, ., linearCombination, (, u1, ., getY, (, ), ,, a1, ,, u2, ., getY, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, u1, ., getY, (, ), ,, a1, ,, u2, ., getY, (, ), ,, a2, ,]
[getY, (, ), ,, a1, ,, u2, ., getY, (, ), ,, a2, ,, u3, ., getY, (, ), ,]
[,, a1, ,, u2, ., getY, (, ), ,, a2, ,, u3, ., getY, (, ), ,, a3, ), ;]
[,, a1, ,, u2, ., getY, (, ), ,, a2, ,, u3, ., getY, (, ), ,, a3, ), ;]
[., getY, (, ), ,, a2, ,, u3, ., getY, (, ), ,, a3, ), ;, this, ., z, =]
[., getY, (, ), ,, a2, ,, u3, ., getY, (, ), ,, a3, ), ;, this, ., z, =]
[,, a2, ,, u3, ., getY, (, ), ,, a3, ), ;, this, ., z, =, prototype, ., linearCombination, (]
[,, a2, ,, u3, ., getY, (, ), ,, a3, ), ;, this, ., z, =, prototype, ., linearCombination, (]
[(, ), ,, a3, ), ;, this, ., z, =, prototype, ., linearCombination, (, u1, ., getZ, (, ), ,]
[,, a3, ), ;, this, ., z, =, prototype, ., linearCombination, (, u1, ., getZ, (, ), ,, a1, ,]
[,, a3, ), ;, this, ., z, =, prototype, ., linearCombination, (, u1, ., getZ, (, ), ,, a1, ,]
[z, =, prototype, ., linearCombination, (, u1, ., getZ, (, ), ,, a1, ,, u2, ., getZ, (, ), ,]
[prototype, ., linearCombination, (, u1, ., getZ, (, ), ,, a1, ,, u2, ., getZ, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, u1, ., getZ, (, ), ,, a1, ,, u2, ., getZ, (, ), ,, a2, ,]
[getZ, (, ), ,, a1, ,, u2, ., getZ, (, ), ,, a2, ,, u3, ., getZ, (, ), ,]
[T, >, u2, ,, final, double, a3, ,, final, FieldVector3D, <, T, >, u3, ), {, final, T, prototype, =]
[T, >, u2, ,, final, double, a3, ,, final, FieldVector3D, <, T, >, u3, ), {, final, T, prototype, =]
[a3, ,, final, FieldVector3D, <, T, >, u3, ), {, final, T, prototype, =, u1, ., getX, (, ), ;]
[a3, ,, final, FieldVector3D, <, T, >, u3, ), {, final, T, prototype, =, u1, ., getX, (, ), ;]
[<, T, >, u3, ), {, final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =]
[<, T, >, u3, ), {, final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =]
[), {, final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =, prototype, ., linearCombination, (]
[final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,]
[final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,]
[getX, (, ), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,]
[), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,]
[), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,]
[linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,]
[linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,]
[(, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ), ;]
[(, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ), ;]
[,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ), ;, this, ., y, =]
[,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ), ;, this, ., y, =]
[(, ), ,, a3, ,, u3, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (]
[,, a3, ,, u3, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,]
[,, a3, ,, u3, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,]
[(, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,]
[), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,]
[), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,]
[linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,]
[linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,]
[(, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ), ;]
[(, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ), ;]
[,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ), ;, this, ., z, =]
[,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ), ;, this, ., z, =]
[(, ), ,, a3, ,, u3, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (]
[,, a3, ,, u3, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,]
[,, a3, ,, u3, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,]
[(, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,]
[), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,]
[), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,]
[linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,]
[linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,]
[T, >, u3, ,, final, T, a4, ,, final, FieldVector3D, <, T, >, u4, ), {, final, T, prototype, =]
[u3, ,, final, T, a4, ,, final, FieldVector3D, <, T, >, u4, ), {, final, T, prototype, =, a1, ;]
[u3, ,, final, T, a4, ,, final, FieldVector3D, <, T, >, u4, ), {, final, T, prototype, =, a1, ;]
[a4, ,, final, FieldVector3D, <, T, >, u4, ), {, final, T, prototype, =, a1, ;, this, ., x, =]
[a4, ,, final, FieldVector3D, <, T, >, u4, ), {, final, T, prototype, =, a1, ;, this, ., x, =]
[<, T, >, u4, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (]
[>, u4, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,]
[>, u4, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,]
[prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,]
[a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,]
[a1, ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,]
[linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,]
[linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,]
[getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ,]
[), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ,, a4, ,]
[), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ,, a4, ,]
[(, ), ,, a3, ,, u3, ., getX, (, ), ,, a4, ,, u4, ., getX, (, ), ), ;]
[(, ), ,, a3, ,, u3, ., getX, (, ), ,, a4, ,, u4, ., getX, (, ), ), ;]
[,, u3, ., getX, (, ), ,, a4, ,, u4, ., getX, (, ), ), ;, this, ., y, =]
[,, u3, ., getX, (, ), ,, a4, ,, u4, ., getX, (, ), ), ;, this, ., y, =]
[(, ), ,, a4, ,, u4, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (]
[,, a4, ,, u4, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,]
[,, a4, ,, u4, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,]
[(, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,]
[), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,]
[), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,]
[linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,]
[linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,]
[getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ,]
[), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ,, a4, ,]
[), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ,, a4, ,]
[(, ), ,, a3, ,, u3, ., getY, (, ), ,, a4, ,, u4, ., getY, (, ), ), ;]
[(, ), ,, a3, ,, u3, ., getY, (, ), ,, a4, ,, u4, ., getY, (, ), ), ;]
[,, u3, ., getY, (, ), ,, a4, ,, u4, ., getY, (, ), ), ;, this, ., z, =]
[,, u3, ., getY, (, ), ,, a4, ,, u4, ., getY, (, ), ), ;, this, ., z, =]
[(, ), ,, a4, ,, u4, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (]
[,, a4, ,, u4, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,]
[,, a4, ,, u4, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,]
[(, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,]
[), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,]
[), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,]
[linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,]
[linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,]
[getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,, u3, ., getZ, (, ), ,]
[), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,, u3, ., getZ, (, ), ,, a4, ,]
[), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,, u3, ., getZ, (, ), ,, a4, ,]
[T, a3, ,, final, Vector3D, u3, ,, final, T, a4, ,, final, Vector3D, u4, ), {, final, T, prototype, =]
[,, final, Vector3D, u3, ,, final, T, a4, ,, final, Vector3D, u4, ), {, final, T, prototype, =, a1, ;]
[,, final, Vector3D, u3, ,, final, T, a4, ,, final, Vector3D, u4, ), {, final, T, prototype, =, a1, ;]
[,, final, T, a4, ,, final, Vector3D, u4, ), {, final, T, prototype, =, a1, ;, this, ., x, =]
[,, final, T, a4, ,, final, Vector3D, u4, ), {, final, T, prototype, =, a1, ;, this, ., x, =]
[,, final, Vector3D, u4, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (]
[,, final, Vector3D, u4, ), {, final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (]
[final, T, prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, u1, ., getX, (, ), ,]
[prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, u1, ., getX, (, ), ,, a1, ,]
[prototype, =, a1, ;, this, ., x, =, prototype, ., linearCombination, (, u1, ., getX, (, ), ,, a1, ,]
[x, =, prototype, ., linearCombination, (, u1, ., getX, (, ), ,, a1, ,, u2, ., getX, (, ), ,]
[prototype, ., linearCombination, (, u1, ., getX, (, ), ,, a1, ,, u2, ., getX, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, u1, ., getX, (, ), ,, a1, ,, u2, ., getX, (, ), ,, a2, ,]
[getX, (, ), ,, a1, ,, u2, ., getX, (, ), ,, a2, ,, u3, ., getX, (, ), ,]
[), ,, a1, ,, u2, ., getX, (, ), ,, a2, ,, u3, ., getX, (, ), ,, a3, ,]
[), ,, a1, ,, u2, ., getX, (, ), ,, a2, ,, u3, ., getX, (, ), ,, a3, ,]
[getX, (, ), ,, a2, ,, u3, ., getX, (, ), ,, a3, ,, u4, ., getX, (, ), ,]
[,, a2, ,, u3, ., getX, (, ), ,, a3, ,, u4, ., getX, (, ), ,, a4, ), ;]
[,, a2, ,, u3, ., getX, (, ), ,, a3, ,, u4, ., getX, (, ), ,, a4, ), ;]
[., getX, (, ), ,, a3, ,, u4, ., getX, (, ), ,, a4, ), ;, this, ., y, =]
[., getX, (, ), ,, a3, ,, u4, ., getX, (, ), ,, a4, ), ;, this, ., y, =]
[,, a3, ,, u4, ., getX, (, ), ,, a4, ), ;, this, ., y, =, prototype, ., linearCombination, (]
[,, a3, ,, u4, ., getX, (, ), ,, a4, ), ;, this, ., y, =, prototype, ., linearCombination, (]
[(, ), ,, a4, ), ;, this, ., y, =, prototype, ., linearCombination, (, u1, ., getY, (, ), ,]
[,, a4, ), ;, this, ., y, =, prototype, ., linearCombination, (, u1, ., getY, (, ), ,, a1, ,]
[,, a4, ), ;, this, ., y, =, prototype, ., linearCombination, (, u1, ., getY, (, ), ,, a1, ,]
[y, =, prototype, ., linearCombination, (, u1, ., getY, (, ), ,, a1, ,, u2, ., getY, (, ), ,]
[prototype, ., linearCombination, (, u1, ., getY, (, ), ,, a1, ,, u2, ., getY, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, u1, ., getY, (, ), ,, a1, ,, u2, ., getY, (, ), ,, a2, ,]
[getY, (, ), ,, a1, ,, u2, ., getY, (, ), ,, a2, ,, u3, ., getY, (, ), ,]
[), ,, a1, ,, u2, ., getY, (, ), ,, a2, ,, u3, ., getY, (, ), ,, a3, ,]
[), ,, a1, ,, u2, ., getY, (, ), ,, a2, ,, u3, ., getY, (, ), ,, a3, ,]
[getY, (, ), ,, a2, ,, u3, ., getY, (, ), ,, a3, ,, u4, ., getY, (, ), ,]
[,, a2, ,, u3, ., getY, (, ), ,, a3, ,, u4, ., getY, (, ), ,, a4, ), ;]
[,, a2, ,, u3, ., getY, (, ), ,, a3, ,, u4, ., getY, (, ), ,, a4, ), ;]
[., getY, (, ), ,, a3, ,, u4, ., getY, (, ), ,, a4, ), ;, this, ., z, =]
[., getY, (, ), ,, a3, ,, u4, ., getY, (, ), ,, a4, ), ;, this, ., z, =]
[,, a3, ,, u4, ., getY, (, ), ,, a4, ), ;, this, ., z, =, prototype, ., linearCombination, (]
[,, a3, ,, u4, ., getY, (, ), ,, a4, ), ;, this, ., z, =, prototype, ., linearCombination, (]
[(, ), ,, a4, ), ;, this, ., z, =, prototype, ., linearCombination, (, u1, ., getZ, (, ), ,]
[,, a4, ), ;, this, ., z, =, prototype, ., linearCombination, (, u1, ., getZ, (, ), ,, a1, ,]
[,, a4, ), ;, this, ., z, =, prototype, ., linearCombination, (, u1, ., getZ, (, ), ,, a1, ,]
[z, =, prototype, ., linearCombination, (, u1, ., getZ, (, ), ,, a1, ,, u2, ., getZ, (, ), ,]
[prototype, ., linearCombination, (, u1, ., getZ, (, ), ,, a1, ,, u2, ., getZ, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, u1, ., getZ, (, ), ,, a1, ,, u2, ., getZ, (, ), ,, a2, ,]
[getZ, (, ), ,, a1, ,, u2, ., getZ, (, ), ,, a2, ,, u3, ., getZ, (, ), ,]
[), ,, a1, ,, u2, ., getZ, (, ), ,, a2, ,, u3, ., getZ, (, ), ,, a3, ,]
[), ,, a1, ,, u2, ., getZ, (, ), ,, a2, ,, u3, ., getZ, (, ), ,, a3, ,]
[getZ, (, ), ,, a2, ,, u3, ., getZ, (, ), ,, a3, ,, u4, ., getZ, (, ), ,]
[T, >, u3, ,, final, double, a4, ,, final, FieldVector3D, <, T, >, u4, ), {, final, T, prototype, =]
[T, >, u3, ,, final, double, a4, ,, final, FieldVector3D, <, T, >, u4, ), {, final, T, prototype, =]
[a4, ,, final, FieldVector3D, <, T, >, u4, ), {, final, T, prototype, =, u1, ., getX, (, ), ;]
[a4, ,, final, FieldVector3D, <, T, >, u4, ), {, final, T, prototype, =, u1, ., getX, (, ), ;]
[<, T, >, u4, ), {, final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =]
[<, T, >, u4, ), {, final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =]
[), {, final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =, prototype, ., linearCombination, (]
[final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,]
[final, T, prototype, =, u1, ., getX, (, ), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,]
[getX, (, ), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,]
[), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,]
[), ;, this, ., x, =, prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,]
[linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,]
[linearCombination, (, a1, ,, u1, ., getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,]
[getX, (, ), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ,]
[), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ,, a4, ,]
[), ,, a2, ,, u2, ., getX, (, ), ,, a3, ,, u3, ., getX, (, ), ,, a4, ,]
[(, ), ,, a3, ,, u3, ., getX, (, ), ,, a4, ,, u4, ., getX, (, ), ), ;]
[(, ), ,, a3, ,, u3, ., getX, (, ), ,, a4, ,, u4, ., getX, (, ), ), ;]
[,, u3, ., getX, (, ), ,, a4, ,, u4, ., getX, (, ), ), ;, this, ., y, =]
[,, u3, ., getX, (, ), ,, a4, ,, u4, ., getX, (, ), ), ;, this, ., y, =]
[(, ), ,, a4, ,, u4, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (]
[,, a4, ,, u4, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,]
[,, a4, ,, u4, ., getX, (, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,]
[(, ), ), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,]
[), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,]
[), ;, this, ., y, =, prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,]
[linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,]
[linearCombination, (, a1, ,, u1, ., getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,]
[getY, (, ), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ,]
[), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ,, a4, ,]
[), ,, a2, ,, u2, ., getY, (, ), ,, a3, ,, u3, ., getY, (, ), ,, a4, ,]
[(, ), ,, a3, ,, u3, ., getY, (, ), ,, a4, ,, u4, ., getY, (, ), ), ;]
[(, ), ,, a3, ,, u3, ., getY, (, ), ,, a4, ,, u4, ., getY, (, ), ), ;]
[,, u3, ., getY, (, ), ,, a4, ,, u4, ., getY, (, ), ), ;, this, ., z, =]
[,, u3, ., getY, (, ), ,, a4, ,, u4, ., getY, (, ), ), ;, this, ., z, =]
[(, ), ,, a4, ,, u4, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (]
[,, a4, ,, u4, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,]
[,, a4, ,, u4, ., getY, (, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,]
[(, ), ), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,]
[), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,]
[), ;, this, ., z, =, prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,]
[prototype, ., linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,]
[linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,]
[linearCombination, (, a1, ,, u1, ., getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,]
[getZ, (, ), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,, u3, ., getZ, (, ), ,]
[), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,, u3, ., getZ, (, ), ,, a4, ,]
[), ,, a2, ,, u2, ., getZ, (, ), ,, a3, ,, u3, ., getZ, (, ), ,, a4, ,]
[(, ), ,, a4, ,, u4, ., getZ, (, ), ), ;, }, public, T, getX, (, ), {, return]
[), ;, }, public, T, getX, (, ), {, return, x, ;, }, public, T, getY, (, ), {, return]
[x, ;, }, public, T, getY, (, ), {, return, y, ;, }, public, T, getZ, (, ), {, return]
[), {, return, z, ;, }, public, T, [, ], toArray, (, ), {, final, T, [, ], array, =]
[), {, return, z, ;, }, public, T, [, ], toArray, (, ), {, final, T, [, ], array, =]
[;, }, public, T, [, ], toArray, (, ), {, final, T, [, ], array, =, MathArrays, ., buildArray, (]
[;, }, public, T, [, ], toArray, (, ), {, final, T, [, ], array, =, MathArrays, ., buildArray, (]
[toArray, (, ), {, final, T, [, ], array, =, MathArrays, ., buildArray, (, x, ., getField, (, ), ,]
[{, final, T, [, ], array, =, MathArrays, ., buildArray, (, x, ., getField, (, ), ,, 3, ), ;]
[{, final, T, [, ], array, =, MathArrays, ., buildArray, (, x, ., getField, (, ), ,, 3, ), ;]
[T, [, ], array, =, MathArrays, ., buildArray, (, x, ., getField, (, ), ,, 3, ), ;, array, []
[array, =, MathArrays, ., buildArray, (, x, ., getField, (, ), ,, 3, ), ;, array, [, 0, ], =]
[MathArrays, ., buildArray, (, x, ., getField, (, ), ,, 3, ), ;, array, [, 0, ], =, x, ;]
[MathArrays, ., buildArray, (, x, ., getField, (, ), ,, 3, ), ;, array, [, 0, ], =, x, ;]
[buildArray, (, x, ., getField, (, ), ,, 3, ), ;, array, [, 0, ], =, x, ;, array, []
[., getField, (, ), ,, 3, ), ;, array, [, 0, ], =, x, ;, array, [, 1, ], =]
[(, ), ,, 3, ), ;, array, [, 0, ], =, x, ;, array, [, 1, ], =, y, ;]
[(, ), ,, 3, ), ;, array, [, 0, ], =, x, ;, array, [, 1, ], =, y, ;]
[,, 3, ), ;, array, [, 0, ], =, x, ;, array, [, 1, ], =, y, ;, array, []
[;, array, [, 0, ], =, x, ;, array, [, 1, ], =, y, ;, array, [, 2, ], =]
[0, ], =, x, ;, array, [, 1, ], =, y, ;, array, [, 2, ], =, z, ;, return]
[y, ;, array, [, 2, ], =, z, ;, return, array, ;, }, public, Vector3D, toVector3D, (, ), {, return]
[[, 2, ], =, z, ;, return, array, ;, }, public, Vector3D, toVector3D, (, ), {, return, new, Vector3D, (]
[[, 2, ], =, z, ;, return, array, ;, }, public, Vector3D, toVector3D, (, ), {, return, new, Vector3D, (]
[return, array, ;, }, public, Vector3D, toVector3D, (, ), {, return, new, Vector3D, (, x, ., getReal, (, ), ,]
[return, array, ;, }, public, Vector3D, toVector3D, (, ), {, return, new, Vector3D, (, x, ., getReal, (, ), ,]
[toVector3D, (, ), {, return, new, Vector3D, (, x, ., getReal, (, ), ,, y, ., getReal, (, ), ,]
[toVector3D, (, ), {, return, new, Vector3D, (, x, ., getReal, (, ), ,, y, ., getReal, (, ), ,]
[., getReal, (, ), ,, z, ., getReal, (, ), ), ;, }, public, T, getNorm1, (, ), {, return]
[., getReal, (, ), ,, z, ., getReal, (, ), ), ;, }, public, T, getNorm1, (, ), {, return]
[., getReal, (, ), ,, z, ., getReal, (, ), ), ;, }, public, T, getNorm1, (, ), {, return]
[., getReal, (, ), ,, z, ., getReal, (, ), ), ;, }, public, T, getNorm1, (, ), {, return]
[(, ), ), ;, }, public, T, getNorm1, (, ), {, return, x, ., abs, (, ), ., add, (]
[(, ), ), ;, }, public, T, getNorm1, (, ), {, return, x, ., abs, (, ), ., add, (]
[), {, return, x, ., abs, (, ), ., add, (, y, ., abs, (, ), ), ., add, (]
[), {, return, x, ., abs, (, ), ., add, (, y, ., abs, (, ), ), ., add, (]
[), ), ., add, (, z, ., abs, (, ), ), ;, }, public, T, getNorm, (, ), {, return]
[), ), ., add, (, z, ., abs, (, ), ), ;, }, public, T, getNorm, (, ), {, return]
[), ), ., add, (, z, ., abs, (, ), ), ;, }, public, T, getNorm, (, ), {, return]
[), ), ., add, (, z, ., abs, (, ), ), ;, }, public, T, getNorm, (, ), {, return]
[), ), ., add, (, z, ., abs, (, ), ), ;, }, public, T, getNorm, (, ), {, return]
[(, z, ., abs, (, ), ), ;, }, public, T, getNorm, (, ), {, return, x, ., multiply, (]
[), ), ;, }, public, T, getNorm, (, ), {, return, x, ., multiply, (, x, ), ., add, (]
[), ), ;, }, public, T, getNorm, (, ), {, return, x, ., multiply, (, x, ), ., add, (]
[public, T, getNorm, (, ), {, return, x, ., multiply, (, x, ), ., add, (, y, ., multiply, (]
[return, x, ., multiply, (, x, ), ., add, (, y, ., multiply, (, y, ), ), ., add, (]
[return, x, ., multiply, (, x, ), ., add, (, y, ., multiply, (, y, ), ), ., add, (]
[(, x, ), ., add, (, y, ., multiply, (, y, ), ), ., add, (, z, ., multiply, (]
[z, ., multiply, (, z, ), ), ., sqrt, (, ), ;, }, public, T, getNormSq, (, ), {, return]
[z, ., multiply, (, z, ), ), ., sqrt, (, ), ;, }, public, T, getNormSq, (, ), {, return]
[z, ., multiply, (, z, ), ), ., sqrt, (, ), ;, }, public, T, getNormSq, (, ), {, return]
[z, ., multiply, (, z, ), ), ., sqrt, (, ), ;, }, public, T, getNormSq, (, ), {, return]
[z, ), ), ., sqrt, (, ), ;, }, public, T, getNormSq, (, ), {, return, x, ., multiply, (]
[(, ), ;, }, public, T, getNormSq, (, ), {, return, x, ., multiply, (, x, ), ., add, (]
[(, ), ;, }, public, T, getNormSq, (, ), {, return, x, ., multiply, (, x, ), ., add, (]
[public, T, getNormSq, (, ), {, return, x, ., multiply, (, x, ), ., add, (, y, ., multiply, (]
[return, x, ., multiply, (, x, ), ., add, (, y, ., multiply, (, y, ), ), ., add, (]
[return, x, ., multiply, (, x, ), ., add, (, y, ., multiply, (, y, ), ), ., add, (]
[(, x, ), ., add, (, y, ., multiply, (, y, ), ), ., add, (, z, ., multiply, (]
[(, z, ., multiply, (, z, ), ), ;, }, public, T, getNormInf, (, ), {, final, T, xAbs, =]
[(, z, ., multiply, (, z, ), ), ;, }, public, T, getNormInf, (, ), {, final, T, xAbs, =]
[public, T, getNormInf, (, ), {, final, T, xAbs, =, x, ., abs, (, ), ;, final, T, yAbs, =]
[public, T, getNormInf, (, ), {, final, T, xAbs, =, x, ., abs, (, ), ;, final, T, yAbs, =]
[x, ., abs, (, ), ;, final, T, yAbs, =, y, ., abs, (, ), ;, final, T, zAbs, =]
[x, ., abs, (, ), ;, final, T, yAbs, =, y, ., abs, (, ), ;, final, T, zAbs, =]
[yAbs, =, y, ., abs, (, ), ;, final, T, zAbs, =, z, ., abs, (, ), ;, if, (]
[yAbs, =, y, ., abs, (, ), ;, final, T, zAbs, =, z, ., abs, (, ), ;, if, (]
[yAbs, =, y, ., abs, (, ), ;, final, T, zAbs, =, z, ., abs, (, ), ;, if, (]
[), ;, final, T, zAbs, =, z, ., abs, (, ), ;, if, (, xAbs, ., getReal, (, ), <=]
[), ;, final, T, zAbs, =, z, ., abs, (, ), ;, if, (, xAbs, ., getReal, (, ), <=]
[(, ), ;, if, (, xAbs, ., getReal, (, ), <=, yAbs, ., getReal, (, ), ), {, if, (]
[(, ), ;, if, (, xAbs, ., getReal, (, ), <=, yAbs, ., getReal, (, ), ), {, if, (]
[(, ), ;, if, (, xAbs, ., getReal, (, ), <=, yAbs, ., getReal, (, ), ), {, if, (]
[., getReal, (, ), <=, yAbs, ., getReal, (, ), ), {, if, (, yAbs, ., getReal, (, ), <=]
[., getReal, (, ), <=, yAbs, ., getReal, (, ), ), {, if, (, yAbs, ., getReal, (, ), <=]
[(, ), ), {, if, (, yAbs, ., getReal, (, ), <=, zAbs, ., getReal, (, ), ), {, return]
[yAbs, ., getReal, (, ), <=, zAbs, ., getReal, (, ), ), {, return, zAbs, ;, }, else, {, return]
[getReal, (, ), ), {, return, zAbs, ;, }, else, {, return, yAbs, ;, }, }, else, {, if, (]
[getReal, (, ), ), {, return, zAbs, ;, }, else, {, return, yAbs, ;, }, }, else, {, if, (]
[getReal, (, ), ), {, return, zAbs, ;, }, else, {, return, yAbs, ;, }, }, else, {, if, (]
[zAbs, ;, }, else, {, return, yAbs, ;, }, }, else, {, if, (, xAbs, ., getReal, (, ), <=]
[zAbs, ;, }, else, {, return, yAbs, ;, }, }, else, {, if, (, xAbs, ., getReal, (, ), <=]
[}, }, else, {, if, (, xAbs, ., getReal, (, ), <=, zAbs, ., getReal, (, ), ), {, return]
[xAbs, ., getReal, (, ), <=, zAbs, ., getReal, (, ), ), {, return, zAbs, ;, }, else, {, return]
[{, return, zAbs, ;, }, else, {, return, xAbs, ;, }, }, }, public, T, getAlpha, (, ), {, return]
[{, return, zAbs, ;, }, else, {, return, xAbs, ;, }, }, }, public, T, getAlpha, (, ), {, return]
[}, else, {, return, xAbs, ;, }, }, }, public, T, getAlpha, (, ), {, return, y, ., atan2, (]
[getAlpha, (, ), {, return, y, ., atan2, (, x, ), ;, }, public, T, getDelta, (, ), {, return]
[getAlpha, (, ), {, return, y, ., atan2, (, x, ), ;, }, public, T, getDelta, (, ), {, return]
[getAlpha, (, ), {, return, y, ., atan2, (, x, ), ;, }, public, T, getDelta, (, ), {, return]
[return, y, ., atan2, (, x, ), ;, }, public, T, getDelta, (, ), {, return, z, ., divide, (]
[(, ), ;, }, public, FieldVector3D, <, T, >, add, (, final, FieldVector3D, <, T, >, v, ), {, return]
[<, T, >, add, (, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[<, T, >, add, (, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[(, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (]
[(, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (]
[>, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (, v, ., x, ), ,]
[>, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (, v, ., x, ), ,]
[return, new, FieldVector3D, <, T, >, (, x, ., add, (, v, ., x, ), ,, y, ., add, (]
[return, new, FieldVector3D, <, T, >, (, x, ., add, (, v, ., x, ), ,, y, ., add, (]
[>, (, x, ., add, (, v, ., x, ), ,, y, ., add, (, v, ., y, ), ,]
[>, (, x, ., add, (, v, ., x, ), ,, y, ., add, (, v, ., y, ), ,]
[add, (, v, ., x, ), ,, y, ., add, (, v, ., y, ), ,, z, ., add, (]
[add, (, v, ., x, ), ,, y, ., add, (, v, ., y, ), ,, z, ., add, (]
[v, ., z, ), ), ;, }, public, FieldVector3D, <, T, >, add, (, final, Vector3D, v, ), {, return]
[}, public, FieldVector3D, <, T, >, add, (, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[}, public, FieldVector3D, <, T, >, add, (, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[T, >, add, (, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (]
[T, >, add, (, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (]
[), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (, v, ., getX, (, ), ), ,]
[), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (, v, ., getX, (, ), ), ,]
[FieldVector3D, <, T, >, (, x, ., add, (, v, ., getX, (, ), ), ,, y, ., add, (]
[FieldVector3D, <, T, >, (, x, ., add, (, v, ., getX, (, ), ), ,, y, ., add, (]
[add, (, v, ., getX, (, ), ), ,, y, ., add, (, v, ., getY, (, ), ), ,]
[add, (, v, ., getX, (, ), ), ,, y, ., add, (, v, ., getY, (, ), ), ,]
[getX, (, ), ), ,, y, ., add, (, v, ., getY, (, ), ), ,, z, ., add, (]
[getX, (, ), ), ,, y, ., add, (, v, ., getY, (, ), ), ,, z, ., add, (]
[public, FieldVector3D, <, T, >, add, (, final, T, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return]
[(, final, T, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[(, final, T, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[(, final, T, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., getField, (, ), ., getOne, (, ), ,]
[{, return, new, FieldVector3D, <, T, >, (, x, ., getField, (, ), ., getOne, (, ), ,, this, ,]
[new, FieldVector3D, <, T, >, (, x, ., getField, (, ), ., getOne, (, ), ,, this, ,, factor, ,]
[), ;, }, public, FieldVector3D, <, T, >, add, (, final, T, factor, ,, final, Vector3D, v, ), {, return]
[T, >, add, (, final, T, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[T, >, add, (, final, T, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[final, T, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (]
[final, T, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (]
[final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (, factor, ., multiply, (]
[final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (, factor, ., multiply, (]
[<, T, >, (, x, ., add, (, factor, ., multiply, (, v, ., getX, (, ), ), ), ,]
[<, T, >, (, x, ., add, (, factor, ., multiply, (, v, ., getX, (, ), ), ), ,]
[x, ., add, (, factor, ., multiply, (, v, ., getX, (, ), ), ), ,, y, ., add, (]
[x, ., add, (, factor, ., multiply, (, v, ., getX, (, ), ), ), ,, y, ., add, (]
[factor, ., multiply, (, v, ., getX, (, ), ), ), ,, y, ., add, (, factor, ., multiply, (]
[factor, ., multiply, (, v, ., getX, (, ), ), ), ,, y, ., add, (, factor, ., multiply, (]
[), ), ), ,, y, ., add, (, factor, ., multiply, (, v, ., getY, (, ), ), ), ,]
[), ), ), ,, y, ., add, (, factor, ., multiply, (, v, ., getY, (, ), ), ), ,]
[y, ., add, (, factor, ., multiply, (, v, ., getY, (, ), ), ), ,, z, ., add, (]
[y, ., add, (, factor, ., multiply, (, v, ., getY, (, ), ), ), ,, z, ., add, (]
[factor, ., multiply, (, v, ., getY, (, ), ), ), ,, z, ., add, (, factor, ., multiply, (]
[factor, ., multiply, (, v, ., getY, (, ), ), ), ,, z, ., add, (, factor, ., multiply, (]
[public, FieldVector3D, <, T, >, add, (, final, double, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return]
[(, final, double, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[double, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, 1.0, ,]
[,, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, 1.0, ,, this, ,]
[FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, 1.0, ,, this, ,, factor, ,]
[), ;, }, public, FieldVector3D, <, T, >, add, (, final, double, factor, ,, final, Vector3D, v, ), {, return]
[T, >, add, (, final, double, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[T, >, add, (, final, double, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[final, double, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (]
[final, double, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (]
[factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (, factor, *]
[factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., add, (, factor, *]
[return, new, FieldVector3D, <, T, >, (, x, ., add, (, factor, *, v, ., getX, (, ), ), ,]
[return, new, FieldVector3D, <, T, >, (, x, ., add, (, factor, *, v, ., getX, (, ), ), ,]
[T, >, (, x, ., add, (, factor, *, v, ., getX, (, ), ), ,, y, ., add, (]
[T, >, (, x, ., add, (, factor, *, v, ., getX, (, ), ), ,, y, ., add, (]
[(, x, ., add, (, factor, *, v, ., getX, (, ), ), ,, y, ., add, (, factor, *]
[(, x, ., add, (, factor, *, v, ., getX, (, ), ), ,, y, ., add, (, factor, *]
[v, ., getX, (, ), ), ,, y, ., add, (, factor, *, v, ., getY, (, ), ), ,]
[v, ., getX, (, ), ), ,, y, ., add, (, factor, *, v, ., getY, (, ), ), ,]
[), ), ,, y, ., add, (, factor, *, v, ., getY, (, ), ), ,, z, ., add, (]
[), ), ,, y, ., add, (, factor, *, v, ., getY, (, ), ), ,, z, ., add, (]
[,, y, ., add, (, factor, *, v, ., getY, (, ), ), ,, z, ., add, (, factor, *]
[,, y, ., add, (, factor, *, v, ., getY, (, ), ), ,, z, ., add, (, factor, *]
[), ), ;, }, public, FieldVector3D, <, T, >, subtract, (, final, FieldVector3D, <, T, >, v, ), {, return]
[<, T, >, subtract, (, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[<, T, >, subtract, (, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[(, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (]
[(, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (]
[>, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (, v, ., x, ), ,]
[>, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (, v, ., x, ), ,]
[return, new, FieldVector3D, <, T, >, (, x, ., subtract, (, v, ., x, ), ,, y, ., subtract, (]
[return, new, FieldVector3D, <, T, >, (, x, ., subtract, (, v, ., x, ), ,, y, ., subtract, (]
[>, (, x, ., subtract, (, v, ., x, ), ,, y, ., subtract, (, v, ., y, ), ,]
[>, (, x, ., subtract, (, v, ., x, ), ,, y, ., subtract, (, v, ., y, ), ,]
[subtract, (, v, ., x, ), ,, y, ., subtract, (, v, ., y, ), ,, z, ., subtract, (]
[subtract, (, v, ., x, ), ,, y, ., subtract, (, v, ., y, ), ,, z, ., subtract, (]
[v, ., z, ), ), ;, }, public, FieldVector3D, <, T, >, subtract, (, final, Vector3D, v, ), {, return]
[}, public, FieldVector3D, <, T, >, subtract, (, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[}, public, FieldVector3D, <, T, >, subtract, (, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[T, >, subtract, (, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (]
[T, >, subtract, (, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (]
[), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (, v, ., getX, (, ), ), ,]
[), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (, v, ., getX, (, ), ), ,]
[FieldVector3D, <, T, >, (, x, ., subtract, (, v, ., getX, (, ), ), ,, y, ., subtract, (]
[FieldVector3D, <, T, >, (, x, ., subtract, (, v, ., getX, (, ), ), ,, y, ., subtract, (]
[subtract, (, v, ., getX, (, ), ), ,, y, ., subtract, (, v, ., getY, (, ), ), ,]
[subtract, (, v, ., getX, (, ), ), ,, y, ., subtract, (, v, ., getY, (, ), ), ,]
[getX, (, ), ), ,, y, ., subtract, (, v, ., getY, (, ), ), ,, z, ., subtract, (]
[getX, (, ), ), ,, y, ., subtract, (, v, ., getY, (, ), ), ,, z, ., subtract, (]
[public, FieldVector3D, <, T, >, subtract, (, final, T, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return]
[(, final, T, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[(, final, T, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[(, final, T, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., getField, (, ), ., getOne, (, ), ,]
[{, return, new, FieldVector3D, <, T, >, (, x, ., getField, (, ), ., getOne, (, ), ,, this, ,]
[{, return, new, FieldVector3D, <, T, >, (, x, ., getField, (, ), ., getOne, (, ), ,, this, ,]
[>, (, x, ., getField, (, ), ., getOne, (, ), ,, this, ,, factor, ., negate, (, ), ,]
[), ;, }, public, FieldVector3D, <, T, >, subtract, (, final, T, factor, ,, final, Vector3D, v, ), {, return]
[T, >, subtract, (, final, T, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[T, >, subtract, (, final, T, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[final, T, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (]
[final, T, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (]
[final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (, factor, ., multiply, (]
[final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (, factor, ., multiply, (]
[<, T, >, (, x, ., subtract, (, factor, ., multiply, (, v, ., getX, (, ), ), ), ,]
[<, T, >, (, x, ., subtract, (, factor, ., multiply, (, v, ., getX, (, ), ), ), ,]
[x, ., subtract, (, factor, ., multiply, (, v, ., getX, (, ), ), ), ,, y, ., subtract, (]
[x, ., subtract, (, factor, ., multiply, (, v, ., getX, (, ), ), ), ,, y, ., subtract, (]
[factor, ., multiply, (, v, ., getX, (, ), ), ), ,, y, ., subtract, (, factor, ., multiply, (]
[factor, ., multiply, (, v, ., getX, (, ), ), ), ,, y, ., subtract, (, factor, ., multiply, (]
[), ), ), ,, y, ., subtract, (, factor, ., multiply, (, v, ., getY, (, ), ), ), ,]
[), ), ), ,, y, ., subtract, (, factor, ., multiply, (, v, ., getY, (, ), ), ), ,]
[y, ., subtract, (, factor, ., multiply, (, v, ., getY, (, ), ), ), ,, z, ., subtract, (]
[y, ., subtract, (, factor, ., multiply, (, v, ., getY, (, ), ), ), ,, z, ., subtract, (]
[factor, ., multiply, (, v, ., getY, (, ), ), ), ,, z, ., subtract, (, factor, ., multiply, (]
[factor, ., multiply, (, v, ., getY, (, ), ), ), ,, z, ., subtract, (, factor, ., multiply, (]
[public, FieldVector3D, <, T, >, subtract, (, final, double, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return]
[(, final, double, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[double, factor, ,, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, 1.0, ,]
[,, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, 1.0, ,, this, ,]
[final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, 1.0, ,, this, ,, -]
[<, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, 1.0, ,, this, ,, -, factor, ,]
[), ;, }, public, FieldVector3D, <, T, >, subtract, (, final, double, factor, ,, final, Vector3D, v, ), {, return]
[T, >, subtract, (, final, double, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[T, >, subtract, (, final, double, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[final, double, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (]
[final, double, factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (]
[factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (, factor, *]
[factor, ,, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., subtract, (, factor, *]
[return, new, FieldVector3D, <, T, >, (, x, ., subtract, (, factor, *, v, ., getX, (, ), ), ,]
[return, new, FieldVector3D, <, T, >, (, x, ., subtract, (, factor, *, v, ., getX, (, ), ), ,]
[T, >, (, x, ., subtract, (, factor, *, v, ., getX, (, ), ), ,, y, ., subtract, (]
[T, >, (, x, ., subtract, (, factor, *, v, ., getX, (, ), ), ,, y, ., subtract, (]
[(, x, ., subtract, (, factor, *, v, ., getX, (, ), ), ,, y, ., subtract, (, factor, *]
[(, x, ., subtract, (, factor, *, v, ., getX, (, ), ), ,, y, ., subtract, (, factor, *]
[v, ., getX, (, ), ), ,, y, ., subtract, (, factor, *, v, ., getY, (, ), ), ,]
[v, ., getX, (, ), ), ,, y, ., subtract, (, factor, *, v, ., getY, (, ), ), ,]
[), ), ,, y, ., subtract, (, factor, *, v, ., getY, (, ), ), ,, z, ., subtract, (]
[), ), ,, y, ., subtract, (, factor, *, v, ., getY, (, ), ), ,, z, ., subtract, (]
[,, y, ., subtract, (, factor, *, v, ., getY, (, ), ), ,, z, ., subtract, (, factor, *]
[,, y, ., subtract, (, factor, *, v, ., getY, (, ), ), ,, z, ., subtract, (, factor, *]
[), ), ), ;, }, public, FieldVector3D, <, T, >, normalize, (, ), throws, MathArithmeticException, {, final, T, s, =]
[FieldVector3D, <, T, >, normalize, (, ), throws, MathArithmeticException, {, final, T, s, =, getNorm, (, ), ;, if, (]
[FieldVector3D, <, T, >, normalize, (, ), throws, MathArithmeticException, {, final, T, s, =, getNorm, (, ), ;, if, (]
[FieldVector3D, <, T, >, normalize, (, ), throws, MathArithmeticException, {, final, T, s, =, getNorm, (, ), ;, if, (]
[), throws, MathArithmeticException, {, final, T, s, =, getNorm, (, ), ;, if, (, s, ., getReal, (, ), ==]
[final, T, s, =, getNorm, (, ), ;, if, (, s, ., getReal, (, ), ==, 0, ), {, throw]
[=, getNorm, (, ), ;, if, (, s, ., getReal, (, ), ==, 0, ), {, throw, new, MathArithmeticException, (]
[=, getNorm, (, ), ;, if, (, s, ., getReal, (, ), ==, 0, ), {, throw, new, MathArithmeticException, (]
[s, ., getReal, (, ), ==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR, ), ;, }, return]
[getReal, (, ), ==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR, ), ;, }, return, scalarMultiply, (]
[getReal, (, ), ==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., CANNOT_NORMALIZE_A_ZERO_NORM_VECTOR, ), ;, }, return, scalarMultiply, (]
[(, ), ), ;, }, public, FieldVector3D, <, T, >, orthogonal, (, ), throws, MathArithmeticException, {, final, double, threshold, =]
[(, ), ), ;, }, public, FieldVector3D, <, T, >, orthogonal, (, ), throws, MathArithmeticException, {, final, double, threshold, =]
[), ;, }, public, FieldVector3D, <, T, >, orthogonal, (, ), throws, MathArithmeticException, {, final, double, threshold, =, 0.6, *]
[), ;, }, public, FieldVector3D, <, T, >, orthogonal, (, ), throws, MathArithmeticException, {, final, double, threshold, =, 0.6, *]
[), throws, MathArithmeticException, {, final, double, threshold, =, 0.6, *, getNorm, (, ), ., getReal, (, ), ;, if, (]
[), throws, MathArithmeticException, {, final, double, threshold, =, 0.6, *, getNorm, (, ), ., getReal, (, ), ;, if, (]
[MathArithmeticException, {, final, double, threshold, =, 0.6, *, getNorm, (, ), ., getReal, (, ), ;, if, (, threshold, ==]
[threshold, =, 0.6, *, getNorm, (, ), ., getReal, (, ), ;, if, (, threshold, ==, 0, ), {, throw]
[*, getNorm, (, ), ., getReal, (, ), ;, if, (, threshold, ==, 0, ), {, throw, new, MathArithmeticException, (]
[*, getNorm, (, ), ., getReal, (, ), ;, if, (, threshold, ==, 0, ), {, throw, new, MathArithmeticException, (]
[;, if, (, threshold, ==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, if, (]
[;, if, (, threshold, ==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, if, (]
[;, if, (, threshold, ==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, if, (]
[==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, if, (, FastMath, ., abs, (]
[==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, if, (, FastMath, ., abs, (]
[(, LocalizedFormats, ., ZERO_NORM, ), ;, }, if, (, FastMath, ., abs, (, x, ., getReal, (, ), ), <=]
[if, (, FastMath, ., abs, (, x, ., getReal, (, ), ), <=, threshold, ), {, final, T, inverse, =]
[if, (, FastMath, ., abs, (, x, ., getReal, (, ), ), <=, threshold, ), {, final, T, inverse, =]
[if, (, FastMath, ., abs, (, x, ., getReal, (, ), ), <=, threshold, ), {, final, T, inverse, =]
[if, (, FastMath, ., abs, (, x, ., getReal, (, ), ), <=, threshold, ), {, final, T, inverse, =]
[if, (, FastMath, ., abs, (, x, ., getReal, (, ), ), <=, threshold, ), {, final, T, inverse, =]
[abs, (, x, ., getReal, (, ), ), <=, threshold, ), {, final, T, inverse, =, y, ., multiply, (]
[(, ), ), <=, threshold, ), {, final, T, inverse, =, y, ., multiply, (, y, ), ., add, (]
[(, ), ), <=, threshold, ), {, final, T, inverse, =, y, ., multiply, (, y, ), ., add, (]
[threshold, ), {, final, T, inverse, =, y, ., multiply, (, y, ), ., add, (, z, ., multiply, (]
[., add, (, z, ., multiply, (, z, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, return]
[(, z, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[(, z, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[(, z, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[(, ), ;, return, new, FieldVector3D, <, T, >, (, inverse, ., getField, (, ), ., getZero, (, ), ,]
[(, ), ;, return, new, FieldVector3D, <, T, >, (, inverse, ., getField, (, ), ., getZero, (, ), ,]
[new, FieldVector3D, <, T, >, (, inverse, ., getField, (, ), ., getZero, (, ), ,, inverse, ., multiply, (]
[T, >, (, inverse, ., getField, (, ), ., getZero, (, ), ,, inverse, ., multiply, (, z, ), ,]
[T, >, (, inverse, ., getField, (, ), ., getZero, (, ), ,, inverse, ., multiply, (, z, ), ,]
[T, >, (, inverse, ., getField, (, ), ., getZero, (, ), ,, inverse, ., multiply, (, z, ), ,]
[., getField, (, ), ., getZero, (, ), ,, inverse, ., multiply, (, z, ), ,, inverse, ., multiply, (]
[(, z, ), ,, inverse, ., multiply, (, y, ), ., negate, (, ), ), ;, }, else, if, (]
[(, z, ), ,, inverse, ., multiply, (, y, ), ., negate, (, ), ), ;, }, else, if, (]
[(, z, ), ,, inverse, ., multiply, (, y, ), ., negate, (, ), ), ;, }, else, if, (]
[inverse, ., multiply, (, y, ), ., negate, (, ), ), ;, }, else, if, (, FastMath, ., abs, (]
[inverse, ., multiply, (, y, ), ., negate, (, ), ), ;, }, else, if, (, FastMath, ., abs, (]
[negate, (, ), ), ;, }, else, if, (, FastMath, ., abs, (, y, ., getReal, (, ), ), <=]
[if, (, FastMath, ., abs, (, y, ., getReal, (, ), ), <=, threshold, ), {, final, T, inverse, =]
[if, (, FastMath, ., abs, (, y, ., getReal, (, ), ), <=, threshold, ), {, final, T, inverse, =]
[if, (, FastMath, ., abs, (, y, ., getReal, (, ), ), <=, threshold, ), {, final, T, inverse, =]
[if, (, FastMath, ., abs, (, y, ., getReal, (, ), ), <=, threshold, ), {, final, T, inverse, =]
[if, (, FastMath, ., abs, (, y, ., getReal, (, ), ), <=, threshold, ), {, final, T, inverse, =]
[abs, (, y, ., getReal, (, ), ), <=, threshold, ), {, final, T, inverse, =, x, ., multiply, (]
[(, ), ), <=, threshold, ), {, final, T, inverse, =, x, ., multiply, (, x, ), ., add, (]
[(, ), ), <=, threshold, ), {, final, T, inverse, =, x, ., multiply, (, x, ), ., add, (]
[threshold, ), {, final, T, inverse, =, x, ., multiply, (, x, ), ., add, (, z, ., multiply, (]
[., add, (, z, ., multiply, (, z, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, return]
[(, z, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[(, z, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[(, z, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[., sqrt, (, ), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (, inverse, ., multiply, (]
[), ;, return, new, FieldVector3D, <, T, >, (, inverse, ., multiply, (, z, ), ., negate, (, ), ,]
[), ;, return, new, FieldVector3D, <, T, >, (, inverse, ., multiply, (, z, ), ., negate, (, ), ,]
[), ;, return, new, FieldVector3D, <, T, >, (, inverse, ., multiply, (, z, ), ., negate, (, ), ,]
[., multiply, (, z, ), ., negate, (, ), ,, inverse, ., getField, (, ), ., getZero, (, ), ,]
[., multiply, (, z, ), ., negate, (, ), ,, inverse, ., getField, (, ), ., getZero, (, ), ,]
[), ., negate, (, ), ,, inverse, ., getField, (, ), ., getZero, (, ), ,, inverse, ., multiply, (]
[., getZero, (, ), ,, inverse, ., multiply, (, x, ), ), ;, }, else, {, final, T, inverse, =]
[., getZero, (, ), ,, inverse, ., multiply, (, x, ), ), ;, }, else, {, final, T, inverse, =]
[., getZero, (, ), ,, inverse, ., multiply, (, x, ), ), ;, }, else, {, final, T, inverse, =]
[., getZero, (, ), ,, inverse, ., multiply, (, x, ), ), ;, }, else, {, final, T, inverse, =]
[., getZero, (, ), ,, inverse, ., multiply, (, x, ), ), ;, }, else, {, final, T, inverse, =]
[,, inverse, ., multiply, (, x, ), ), ;, }, else, {, final, T, inverse, =, x, ., multiply, (]
[x, ), ), ;, }, else, {, final, T, inverse, =, x, ., multiply, (, x, ), ., add, (]
[x, ), ), ;, }, else, {, final, T, inverse, =, x, ., multiply, (, x, ), ., add, (]
[}, else, {, final, T, inverse, =, x, ., multiply, (, x, ), ., add, (, y, ., multiply, (]
[., add, (, y, ., multiply, (, y, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, return]
[(, y, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[(, y, ), ), ., sqrt, (, ), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (]
[., sqrt, (, ), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (, inverse, ., multiply, (]
[), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (, inverse, ., multiply, (, y, ), ,]
[), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (, inverse, ., multiply, (, y, ), ,]
[), ., reciprocal, (, ), ;, return, new, FieldVector3D, <, T, >, (, inverse, ., multiply, (, y, ), ,]
[), ;, return, new, FieldVector3D, <, T, >, (, inverse, ., multiply, (, y, ), ,, inverse, ., multiply, (]
[>, (, inverse, ., multiply, (, y, ), ,, inverse, ., multiply, (, x, ), ., negate, (, ), ,]
[>, (, inverse, ., multiply, (, y, ), ,, inverse, ., multiply, (, x, ), ., negate, (, ), ,]
[>, (, inverse, ., multiply, (, y, ), ,, inverse, ., multiply, (, x, ), ., negate, (, ), ,]
[FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), throws, MathArithmeticException, {, final, T, normProduct, =]
[FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), throws, MathArithmeticException, {, final, T, normProduct, =]
[FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), throws, MathArithmeticException, {, final, T, normProduct, =]
[<, T, >, v2, ), throws, MathArithmeticException, {, final, T, normProduct, =, v1, ., getNorm, (, ), ., multiply, (]
[<, T, >, v2, ), throws, MathArithmeticException, {, final, T, normProduct, =, v1, ., getNorm, (, ), ., multiply, (]
[T, normProduct, =, v1, ., getNorm, (, ), ., multiply, (, v2, ., getNorm, (, ), ), ;, if, (]
[T, normProduct, =, v1, ., getNorm, (, ), ., multiply, (, v2, ., getNorm, (, ), ), ;, if, (]
[T, normProduct, =, v1, ., getNorm, (, ), ., multiply, (, v2, ., getNorm, (, ), ), ;, if, (]
[(, ), ., multiply, (, v2, ., getNorm, (, ), ), ;, if, (, normProduct, ., getReal, (, ), ==]
[(, v2, ., getNorm, (, ), ), ;, if, (, normProduct, ., getReal, (, ), ==, 0, ), {, throw]
[getNorm, (, ), ), ;, if, (, normProduct, ., getReal, (, ), ==, 0, ), {, throw, new, MathArithmeticException, (]
[getNorm, (, ), ), ;, if, (, normProduct, ., getReal, (, ), ==, 0, ), {, throw, new, MathArithmeticException, (]
[(, ), ==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, final, T, dot, =]
[==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, final, T, dot, =, dotProduct, (]
[), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, final, T, dot, =, dotProduct, (, v1, ,]
[., ZERO_NORM, ), ;, }, final, T, dot, =, dotProduct, (, v1, ,, v2, ), ;, final, double, threshold, =]
[., ZERO_NORM, ), ;, }, final, T, dot, =, dotProduct, (, v1, ,, v2, ), ;, final, double, threshold, =]
[., ZERO_NORM, ), ;, }, final, T, dot, =, dotProduct, (, v1, ,, v2, ), ;, final, double, threshold, =]
[T, dot, =, dotProduct, (, v1, ,, v2, ), ;, final, double, threshold, =, normProduct, ., getReal, (, ), *]
[(, v1, ,, v2, ), ;, final, double, threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (]
[(, v1, ,, v2, ), ;, final, double, threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (]
[v1, ,, v2, ), ;, final, double, threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (, (]
[v1, ,, v2, ), ;, final, double, threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (, (]
[v1, ,, v2, ), ;, final, double, threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (, (]
[double, threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (, (, dot, ., getReal, (, ), <]
[threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (, (, dot, ., getReal, (, ), <, -]
[., getReal, (, ), *, 0.9999, ;, if, (, (, dot, ., getReal, (, ), <, -, threshold, ), ||]
[getReal, (, ), *, 0.9999, ;, if, (, (, dot, ., getReal, (, ), <, -, threshold, ), ||, (]
[getReal, (, ), *, 0.9999, ;, if, (, (, dot, ., getReal, (, ), <, -, threshold, ), ||, (]
[getReal, (, ), *, 0.9999, ;, if, (, (, dot, ., getReal, (, ), <, -, threshold, ), ||, (]
[if, (, (, dot, ., getReal, (, ), <, -, threshold, ), ||, (, dot, ., getReal, (, ), >]
[threshold, ), ||, (, dot, ., getReal, (, ), >, threshold, ), ), {, FieldVector3D, <, T, >, v3, =]
[||, (, dot, ., getReal, (, ), >, threshold, ), ), {, FieldVector3D, <, T, >, v3, =, crossProduct, (]
[dot, ., getReal, (, ), >, threshold, ), ), {, FieldVector3D, <, T, >, v3, =, crossProduct, (, v1, ,]
[>, threshold, ), ), {, FieldVector3D, <, T, >, v3, =, crossProduct, (, v1, ,, v2, ), ;, if, (]
[>, threshold, ), ), {, FieldVector3D, <, T, >, v3, =, crossProduct, (, v1, ,, v2, ), ;, if, (]
[>, threshold, ), ), {, FieldVector3D, <, T, >, v3, =, crossProduct, (, v1, ,, v2, ), ;, if, (]
[<, T, >, v3, =, crossProduct, (, v1, ,, v2, ), ;, if, (, dot, ., getReal, (, ), >=]
[=, crossProduct, (, v1, ,, v2, ), ;, if, (, dot, ., getReal, (, ), >=, 0, ), {, return]
[=, crossProduct, (, v1, ,, v2, ), ;, if, (, dot, ., getReal, (, ), >=, 0, ), {, return]
[=, crossProduct, (, v1, ,, v2, ), ;, if, (, dot, ., getReal, (, ), >=, 0, ), {, return]
[=, crossProduct, (, v1, ,, v2, ), ;, if, (, dot, ., getReal, (, ), >=, 0, ), {, return]
[if, (, dot, ., getReal, (, ), >=, 0, ), {, return, v3, ., getNorm, (, ), ., divide, (]
[), {, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ;, }, return]
[), {, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ;, }, return]
[), {, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ;, }, return]
[), {, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ;, }, return]
[), {, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ;, }, return]
[), {, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ;, }, return]
[., divide, (, normProduct, ), ., asin, (, ), ;, }, return, v3, ., getNorm, (, ), ., divide, (]
[;, }, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ., subtract, (]
[;, }, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ., subtract, (]
[normProduct, ), ., asin, (, ), ., subtract, (, FastMath, ., PI, ), ., negate, (, ), ;, }, return]
[normProduct, ), ., asin, (, ), ., subtract, (, FastMath, ., PI, ), ., negate, (, ), ;, }, return]
[normProduct, ), ., asin, (, ), ., subtract, (, FastMath, ., PI, ), ., negate, (, ), ;, }, return]
[(, ), ., subtract, (, FastMath, ., PI, ), ., negate, (, ), ;, }, return, dot, ., divide, (]
[angle, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), throws, MathArithmeticException, {, final, T, normProduct, =]
[angle, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), throws, MathArithmeticException, {, final, T, normProduct, =]
[angle, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), throws, MathArithmeticException, {, final, T, normProduct, =]
[,, final, Vector3D, v2, ), throws, MathArithmeticException, {, final, T, normProduct, =, v1, ., getNorm, (, ), ., multiply, (]
[,, final, Vector3D, v2, ), throws, MathArithmeticException, {, final, T, normProduct, =, v1, ., getNorm, (, ), ., multiply, (]
[T, normProduct, =, v1, ., getNorm, (, ), ., multiply, (, v2, ., getNorm, (, ), ), ;, if, (]
[T, normProduct, =, v1, ., getNorm, (, ), ., multiply, (, v2, ., getNorm, (, ), ), ;, if, (]
[T, normProduct, =, v1, ., getNorm, (, ), ., multiply, (, v2, ., getNorm, (, ), ), ;, if, (]
[(, ), ., multiply, (, v2, ., getNorm, (, ), ), ;, if, (, normProduct, ., getReal, (, ), ==]
[(, v2, ., getNorm, (, ), ), ;, if, (, normProduct, ., getReal, (, ), ==, 0, ), {, throw]
[getNorm, (, ), ), ;, if, (, normProduct, ., getReal, (, ), ==, 0, ), {, throw, new, MathArithmeticException, (]
[getNorm, (, ), ), ;, if, (, normProduct, ., getReal, (, ), ==, 0, ), {, throw, new, MathArithmeticException, (]
[(, ), ==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, final, T, dot, =]
[==, 0, ), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, final, T, dot, =, dotProduct, (]
[), {, throw, new, MathArithmeticException, (, LocalizedFormats, ., ZERO_NORM, ), ;, }, final, T, dot, =, dotProduct, (, v1, ,]
[., ZERO_NORM, ), ;, }, final, T, dot, =, dotProduct, (, v1, ,, v2, ), ;, final, double, threshold, =]
[., ZERO_NORM, ), ;, }, final, T, dot, =, dotProduct, (, v1, ,, v2, ), ;, final, double, threshold, =]
[., ZERO_NORM, ), ;, }, final, T, dot, =, dotProduct, (, v1, ,, v2, ), ;, final, double, threshold, =]
[T, dot, =, dotProduct, (, v1, ,, v2, ), ;, final, double, threshold, =, normProduct, ., getReal, (, ), *]
[(, v1, ,, v2, ), ;, final, double, threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (]
[(, v1, ,, v2, ), ;, final, double, threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (]
[v1, ,, v2, ), ;, final, double, threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (, (]
[v1, ,, v2, ), ;, final, double, threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (, (]
[v1, ,, v2, ), ;, final, double, threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (, (]
[double, threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (, (, dot, ., getReal, (, ), <]
[threshold, =, normProduct, ., getReal, (, ), *, 0.9999, ;, if, (, (, dot, ., getReal, (, ), <, -]
[., getReal, (, ), *, 0.9999, ;, if, (, (, dot, ., getReal, (, ), <, -, threshold, ), ||]
[getReal, (, ), *, 0.9999, ;, if, (, (, dot, ., getReal, (, ), <, -, threshold, ), ||, (]
[getReal, (, ), *, 0.9999, ;, if, (, (, dot, ., getReal, (, ), <, -, threshold, ), ||, (]
[getReal, (, ), *, 0.9999, ;, if, (, (, dot, ., getReal, (, ), <, -, threshold, ), ||, (]
[if, (, (, dot, ., getReal, (, ), <, -, threshold, ), ||, (, dot, ., getReal, (, ), >]
[threshold, ), ||, (, dot, ., getReal, (, ), >, threshold, ), ), {, FieldVector3D, <, T, >, v3, =]
[||, (, dot, ., getReal, (, ), >, threshold, ), ), {, FieldVector3D, <, T, >, v3, =, crossProduct, (]
[dot, ., getReal, (, ), >, threshold, ), ), {, FieldVector3D, <, T, >, v3, =, crossProduct, (, v1, ,]
[>, threshold, ), ), {, FieldVector3D, <, T, >, v3, =, crossProduct, (, v1, ,, v2, ), ;, if, (]
[>, threshold, ), ), {, FieldVector3D, <, T, >, v3, =, crossProduct, (, v1, ,, v2, ), ;, if, (]
[>, threshold, ), ), {, FieldVector3D, <, T, >, v3, =, crossProduct, (, v1, ,, v2, ), ;, if, (]
[<, T, >, v3, =, crossProduct, (, v1, ,, v2, ), ;, if, (, dot, ., getReal, (, ), >=]
[=, crossProduct, (, v1, ,, v2, ), ;, if, (, dot, ., getReal, (, ), >=, 0, ), {, return]
[=, crossProduct, (, v1, ,, v2, ), ;, if, (, dot, ., getReal, (, ), >=, 0, ), {, return]
[=, crossProduct, (, v1, ,, v2, ), ;, if, (, dot, ., getReal, (, ), >=, 0, ), {, return]
[=, crossProduct, (, v1, ,, v2, ), ;, if, (, dot, ., getReal, (, ), >=, 0, ), {, return]
[if, (, dot, ., getReal, (, ), >=, 0, ), {, return, v3, ., getNorm, (, ), ., divide, (]
[), {, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ;, }, return]
[), {, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ;, }, return]
[), {, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ;, }, return]
[), {, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ;, }, return]
[), {, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ;, }, return]
[), {, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ;, }, return]
[., divide, (, normProduct, ), ., asin, (, ), ;, }, return, v3, ., getNorm, (, ), ., divide, (]
[;, }, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ., subtract, (]
[;, }, return, v3, ., getNorm, (, ), ., divide, (, normProduct, ), ., asin, (, ), ., subtract, (]
[normProduct, ), ., asin, (, ), ., subtract, (, FastMath, ., PI, ), ., negate, (, ), ;, }, return]
[normProduct, ), ., asin, (, ), ., subtract, (, FastMath, ., PI, ), ., negate, (, ), ;, }, return]
[normProduct, ), ., asin, (, ), ., subtract, (, FastMath, ., PI, ), ., negate, (, ), ;, }, return]
[(, ), ., subtract, (, FastMath, ., PI, ), ., negate, (, ), ;, }, return, dot, ., divide, (]
[>, >, T, angle, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), throws, MathArithmeticException, {, return]
[T, angle, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), throws, MathArithmeticException, {, return, angle, (]
[(, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), throws, MathArithmeticException, {, return, angle, (, v2, ,]
[{, return, angle, (, v2, ,, v1, ), ;, }, public, FieldVector3D, <, T, >, negate, (, ), {, return]
[v1, ), ;, }, public, FieldVector3D, <, T, >, negate, (, ), {, return, new, FieldVector3D, <, T, >, (]
[v1, ), ;, }, public, FieldVector3D, <, T, >, negate, (, ), {, return, new, FieldVector3D, <, T, >, (]
[<, T, >, negate, (, ), {, return, new, FieldVector3D, <, T, >, (, x, ., negate, (, ), ,]
[<, T, >, negate, (, ), {, return, new, FieldVector3D, <, T, >, (, x, ., negate, (, ), ,]
[{, return, new, FieldVector3D, <, T, >, (, x, ., negate, (, ), ,, y, ., negate, (, ), ,]
[{, return, new, FieldVector3D, <, T, >, (, x, ., negate, (, ), ,, y, ., negate, (, ), ,]
[., negate, (, ), ), ;, }, public, FieldVector3D, <, T, >, scalarMultiply, (, final, T, a, ), {, return]
[}, public, FieldVector3D, <, T, >, scalarMultiply, (, final, T, a, ), {, return, new, FieldVector3D, <, T, >, (]
[}, public, FieldVector3D, <, T, >, scalarMultiply, (, final, T, a, ), {, return, new, FieldVector3D, <, T, >, (]
[T, >, scalarMultiply, (, final, T, a, ), {, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (]
[(, final, T, a, ), {, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, a, ), ,]
[(, final, T, a, ), {, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, a, ), ,]
[), {, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, a, ), ,, y, ., multiply, (]
[new, FieldVector3D, <, T, >, (, x, ., multiply, (, a, ), ,, y, ., multiply, (, a, ), ,]
[new, FieldVector3D, <, T, >, (, x, ., multiply, (, a, ), ,, y, ., multiply, (, a, ), ,]
[>, (, x, ., multiply, (, a, ), ,, y, ., multiply, (, a, ), ,, z, ., multiply, (]
[multiply, (, a, ), ), ;, }, public, FieldVector3D, <, T, >, scalarMultiply, (, final, double, a, ), {, return]
[}, public, FieldVector3D, <, T, >, scalarMultiply, (, final, double, a, ), {, return, new, FieldVector3D, <, T, >, (]
[}, public, FieldVector3D, <, T, >, scalarMultiply, (, final, double, a, ), {, return, new, FieldVector3D, <, T, >, (]
[T, >, scalarMultiply, (, final, double, a, ), {, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (]
[(, final, double, a, ), {, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, a, ), ,]
[(, final, double, a, ), {, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, a, ), ,]
[), {, return, new, FieldVector3D, <, T, >, (, x, ., multiply, (, a, ), ,, y, ., multiply, (]
[new, FieldVector3D, <, T, >, (, x, ., multiply, (, a, ), ,, y, ., multiply, (, a, ), ,]
[new, FieldVector3D, <, T, >, (, x, ., multiply, (, a, ), ,, y, ., multiply, (, a, ), ,]
[>, (, x, ., multiply, (, a, ), ,, y, ., multiply, (, a, ), ,, z, ., multiply, (]
[(, a, ), ,, z, ., multiply, (, a, ), ), ;, }, public, boolean, isNaN, (, ), {, return]
[(, a, ), ,, z, ., multiply, (, a, ), ), ;, }, public, boolean, isNaN, (, ), {, return]
[(, a, ), ,, z, ., multiply, (, a, ), ), ;, }, public, boolean, isNaN, (, ), {, return]
[(, a, ), ,, z, ., multiply, (, a, ), ), ;, }, public, boolean, isNaN, (, ), {, return]
[z, ., multiply, (, a, ), ), ;, }, public, boolean, isNaN, (, ), {, return, Double, ., isNaN, (]
[z, ., multiply, (, a, ), ), ;, }, public, boolean, isNaN, (, ), {, return, Double, ., isNaN, (]
[;, }, public, boolean, isNaN, (, ), {, return, Double, ., isNaN, (, x, ., getReal, (, ), ), ||]
[;, }, public, boolean, isNaN, (, ), {, return, Double, ., isNaN, (, x, ., getReal, (, ), ), ||]
[isNaN, (, ), {, return, Double, ., isNaN, (, x, ., getReal, (, ), ), ||, Double, ., isNaN, (]
[isNaN, (, ), {, return, Double, ., isNaN, (, x, ., getReal, (, ), ), ||, Double, ., isNaN, (]
[isNaN, (, x, ., getReal, (, ), ), ||, Double, ., isNaN, (, y, ., getReal, (, ), ), ||]
[isNaN, (, x, ., getReal, (, ), ), ||, Double, ., isNaN, (, y, ., getReal, (, ), ), ||]
[getReal, (, ), ), ||, Double, ., isNaN, (, y, ., getReal, (, ), ), ||, Double, ., isNaN, (]
[getReal, (, ), ), ||, Double, ., isNaN, (, y, ., getReal, (, ), ), ||, Double, ., isNaN, (]
[||, Double, ., isNaN, (, z, ., getReal, (, ), ), ;, }, public, boolean, isInfinite, (, ), {, return]
[||, Double, ., isNaN, (, z, ., getReal, (, ), ), ;, }, public, boolean, isInfinite, (, ), {, return]
[Double, ., isNaN, (, z, ., getReal, (, ), ), ;, }, public, boolean, isInfinite, (, ), {, return, !]
[z, ., getReal, (, ), ), ;, }, public, boolean, isInfinite, (, ), {, return, !, isNaN, (, ), &&]
[., getReal, (, ), ), ;, }, public, boolean, isInfinite, (, ), {, return, !, isNaN, (, ), &&, (]
[., getReal, (, ), ), ;, }, public, boolean, isInfinite, (, ), {, return, !, isNaN, (, ), &&, (]
[., getReal, (, ), ), ;, }, public, boolean, isInfinite, (, ), {, return, !, isNaN, (, ), &&, (]
[., getReal, (, ), ), ;, }, public, boolean, isInfinite, (, ), {, return, !, isNaN, (, ), &&, (]
[), ;, }, public, boolean, isInfinite, (, ), {, return, !, isNaN, (, ), &&, (, Double, ., isInfinite, (]
[), ;, }, public, boolean, isInfinite, (, ), {, return, !, isNaN, (, ), &&, (, Double, ., isInfinite, (]
[), {, return, !, isNaN, (, ), &&, (, Double, ., isInfinite, (, x, ., getReal, (, ), ), ||]
[), {, return, !, isNaN, (, ), &&, (, Double, ., isInfinite, (, x, ., getReal, (, ), ), ||]
[isNaN, (, ), &&, (, Double, ., isInfinite, (, x, ., getReal, (, ), ), ||, Double, ., isInfinite, (]
[isNaN, (, ), &&, (, Double, ., isInfinite, (, x, ., getReal, (, ), ), ||, Double, ., isInfinite, (]
[isInfinite, (, x, ., getReal, (, ), ), ||, Double, ., isInfinite, (, y, ., getReal, (, ), ), ||]
[isInfinite, (, x, ., getReal, (, ), ), ||, Double, ., isInfinite, (, y, ., getReal, (, ), ), ||]
[getReal, (, ), ), ||, Double, ., isInfinite, (, y, ., getReal, (, ), ), ||, Double, ., isInfinite, (]
[getReal, (, ), ), ||, Double, ., isInfinite, (, y, ., getReal, (, ), ), ||, Double, ., isInfinite, (]
[., getReal, (, ), ), ), ;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (]
[., getReal, (, ), ), ), ;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (]
[(, ), ), ), ;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (, this, ==]
[;, }, @, Override, public, boolean, equals, (, Object, other, ), {, if, (, this, ==, other, ), {, return]
[boolean, equals, (, Object, other, ), {, if, (, this, ==, other, ), {, return, true, ;, }, if, (]
[boolean, equals, (, Object, other, ), {, if, (, this, ==, other, ), {, return, true, ;, }, if, (]
[), {, if, (, this, ==, other, ), {, return, true, ;, }, if, (, other, instanceof, FieldVector3D, ), {]
[(, this, ==, other, ), {, return, true, ;, }, if, (, other, instanceof, FieldVector3D, ), {, @, SuppressWarnings, (]
[}, if, (, other, instanceof, FieldVector3D, ), {, @, SuppressWarnings, (, "unchecked", ), final, FieldVector3D, <, T, >, rhs, =]
[), {, @, SuppressWarnings, (, "unchecked", ), final, FieldVector3D, <, T, >, rhs, =, (, FieldVector3D, <, T, >, )]
[(, "unchecked", ), final, FieldVector3D, <, T, >, rhs, =, (, FieldVector3D, <, T, >, ), other, ;, if, (]
[(, "unchecked", ), final, FieldVector3D, <, T, >, rhs, =, (, FieldVector3D, <, T, >, ), other, ;, if, (]
[rhs, =, (, FieldVector3D, <, T, >, ), other, ;, if, (, rhs, ., isNaN, (, ), ), {, return]
[rhs, =, (, FieldVector3D, <, T, >, ), other, ;, if, (, rhs, ., isNaN, (, ), ), {, return]
[other, ;, if, (, rhs, ., isNaN, (, ), ), {, return, this, ., isNaN, (, ), ;, }, return]
[other, ;, if, (, rhs, ., isNaN, (, ), ), {, return, this, ., isNaN, (, ), ;, }, return]
[other, ;, if, (, rhs, ., isNaN, (, ), ), {, return, this, ., isNaN, (, ), ;, }, return]
[other, ;, if, (, rhs, ., isNaN, (, ), ), {, return, this, ., isNaN, (, ), ;, }, return]
[rhs, ., isNaN, (, ), ), {, return, this, ., isNaN, (, ), ;, }, return, x, ., equals, (]
[rhs, ., isNaN, (, ), ), {, return, this, ., isNaN, (, ), ;, }, return, x, ., equals, (]
[), {, return, this, ., isNaN, (, ), ;, }, return, x, ., equals, (, rhs, ., x, ), &&]
[), {, return, this, ., isNaN, (, ), ;, }, return, x, ., equals, (, rhs, ., x, ), &&]
[., isNaN, (, ), ;, }, return, x, ., equals, (, rhs, ., x, ), &&, y, ., equals, (]
[., isNaN, (, ), ;, }, return, x, ., equals, (, rhs, ., x, ), &&, y, ., equals, (]
[}, return, x, ., equals, (, rhs, ., x, ), &&, y, ., equals, (, rhs, ., y, ), &&]
[}, return, x, ., equals, (, rhs, ., x, ), &&, y, ., equals, (, rhs, ., y, ), &&]
[equals, (, rhs, ., x, ), &&, y, ., equals, (, rhs, ., y, ), &&, z, ., equals, (]
[equals, (, rhs, ., x, ), &&, y, ., equals, (, rhs, ., y, ), &&, z, ., equals, (]
[y, ., equals, (, rhs, ., y, ), &&, z, ., equals, (, rhs, ., z, ), ;, }, return]
[rhs, ., z, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, if, (]
[return, false, ;, }, @, Override, public, int, hashCode, (, ), {, if, (, isNaN, (, ), ), {, return]
[@, Override, public, int, hashCode, (, ), {, if, (, isNaN, (, ), ), {, return, 409, ;, }, return]
[@, Override, public, int, hashCode, (, ), {, if, (, isNaN, (, ), ), {, return, 409, ;, }, return]
[public, int, hashCode, (, ), {, if, (, isNaN, (, ), ), {, return, 409, ;, }, return, 311, *]
[int, hashCode, (, ), {, if, (, isNaN, (, ), ), {, return, 409, ;, }, return, 311, *, (]
[int, hashCode, (, ), {, if, (, isNaN, (, ), ), {, return, 409, ;, }, return, 311, *, (]
[int, hashCode, (, ), {, if, (, isNaN, (, ), ), {, return, 409, ;, }, return, 311, *, (]
[int, hashCode, (, ), {, if, (, isNaN, (, ), ), {, return, 409, ;, }, return, 311, *, (]
[(, ), {, if, (, isNaN, (, ), ), {, return, 409, ;, }, return, 311, *, (, 107, *]
[(, ), {, if, (, isNaN, (, ), ), {, return, 409, ;, }, return, 311, *, (, 107, *]
[(, ), ), {, return, 409, ;, }, return, 311, *, (, 107, *, x, ., hashCode, (, ), +]
[(, ), ), {, return, 409, ;, }, return, 311, *, (, 107, *, x, ., hashCode, (, ), +]
[), {, return, 409, ;, }, return, 311, *, (, 107, *, x, ., hashCode, (, ), +, 83, *]
[), {, return, 409, ;, }, return, 311, *, (, 107, *, x, ., hashCode, (, ), +, 83, *]
[return, 311, *, (, 107, *, x, ., hashCode, (, ), +, 83, *, y, ., hashCode, (, ), +]
[return, 311, *, (, 107, *, x, ., hashCode, (, ), +, 83, *, y, ., hashCode, (, ), +]
[., hashCode, (, ), ), ;, }, public, T, dotProduct, (, final, FieldVector3D, <, T, >, v, ), {, return]
[., hashCode, (, ), ), ;, }, public, T, dotProduct, (, final, FieldVector3D, <, T, >, v, ), {, return]
[), ;, }, public, T, dotProduct, (, final, FieldVector3D, <, T, >, v, ), {, return, x, ., linearCombination, (]
[}, public, T, dotProduct, (, final, FieldVector3D, <, T, >, v, ), {, return, x, ., linearCombination, (, x, ,]
[}, public, T, dotProduct, (, final, FieldVector3D, <, T, >, v, ), {, return, x, ., linearCombination, (, x, ,]
[(, final, FieldVector3D, <, T, >, v, ), {, return, x, ., linearCombination, (, x, ,, v, ., x, ,]
[FieldVector3D, <, T, >, v, ), {, return, x, ., linearCombination, (, x, ,, v, ., x, ,, y, ,]
[FieldVector3D, <, T, >, v, ), {, return, x, ., linearCombination, (, x, ,, v, ., x, ,, y, ,]
[v, ), {, return, x, ., linearCombination, (, x, ,, v, ., x, ,, y, ,, v, ., y, ,]
[{, return, x, ., linearCombination, (, x, ,, v, ., x, ,, y, ,, v, ., y, ,, z, ,]
[{, return, x, ., linearCombination, (, x, ,, v, ., x, ,, y, ,, v, ., y, ,, z, ,]
[y, ,, z, ,, v, ., z, ), ;, }, public, T, dotProduct, (, final, Vector3D, v, ), {, return]
[y, ,, z, ,, v, ., z, ), ;, }, public, T, dotProduct, (, final, Vector3D, v, ), {, return]
[v, ., z, ), ;, }, public, T, dotProduct, (, final, Vector3D, v, ), {, return, x, ., linearCombination, (]
[v, ., z, ), ;, }, public, T, dotProduct, (, final, Vector3D, v, ), {, return, x, ., linearCombination, (]
[public, T, dotProduct, (, final, Vector3D, v, ), {, return, x, ., linearCombination, (, v, ., getX, (, ), ,]
[dotProduct, (, final, Vector3D, v, ), {, return, x, ., linearCombination, (, v, ., getX, (, ), ,, x, ,]
[dotProduct, (, final, Vector3D, v, ), {, return, x, ., linearCombination, (, v, ., getX, (, ), ,, x, ,]
[{, return, x, ., linearCombination, (, v, ., getX, (, ), ,, x, ,, v, ., getY, (, ), ,]
[x, ., linearCombination, (, v, ., getX, (, ), ,, x, ,, v, ., getY, (, ), ,, y, ,]
[x, ., linearCombination, (, v, ., getX, (, ), ,, x, ,, v, ., getY, (, ), ,, y, ,]
[getX, (, ), ,, x, ,, v, ., getY, (, ), ,, y, ,, v, ., getZ, (, ), ,]
[z, ), ;, }, public, FieldVector3D, <, T, >, crossProduct, (, final, FieldVector3D, <, T, >, v, ), {, return]
[<, T, >, crossProduct, (, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[<, T, >, crossProduct, (, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (]
[(, final, FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., linearCombination, (]
[FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., linearCombination, (, y, ,]
[FieldVector3D, <, T, >, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., linearCombination, (, y, ,]
[v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., linearCombination, (, y, ,, v, ., z, ,]
[v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., linearCombination, (, y, ,, v, ., z, ,]
[<, T, >, (, x, ., linearCombination, (, y, ,, v, ., z, ,, z, ., negate, (, ), ,]
[<, T, >, (, x, ., linearCombination, (, y, ,, v, ., z, ,, z, ., negate, (, ), ,]
[., linearCombination, (, y, ,, v, ., z, ,, z, ., negate, (, ), ,, v, ., y, ), ,]
[., linearCombination, (, y, ,, v, ., z, ,, z, ., negate, (, ), ,, v, ., y, ), ,]
[,, v, ., z, ,, z, ., negate, (, ), ,, v, ., y, ), ,, y, ., linearCombination, (]
[., z, ,, z, ., negate, (, ), ,, v, ., y, ), ,, y, ., linearCombination, (, z, ,]
[., z, ,, z, ., negate, (, ), ,, v, ., y, ), ,, y, ., linearCombination, (, z, ,]
[., negate, (, ), ,, v, ., y, ), ,, y, ., linearCombination, (, z, ,, v, ., x, ,]
[., negate, (, ), ,, v, ., y, ), ,, y, ., linearCombination, (, z, ,, v, ., x, ,]
[., y, ), ,, y, ., linearCombination, (, z, ,, v, ., x, ,, x, ., negate, (, ), ,]
[., y, ), ,, y, ., linearCombination, (, z, ,, v, ., x, ,, x, ., negate, (, ), ,]
[., linearCombination, (, z, ,, v, ., x, ,, x, ., negate, (, ), ,, v, ., z, ), ,]
[., linearCombination, (, z, ,, v, ., x, ,, x, ., negate, (, ), ,, v, ., z, ), ,]
[,, v, ., x, ,, x, ., negate, (, ), ,, v, ., z, ), ,, z, ., linearCombination, (]
[., x, ,, x, ., negate, (, ), ,, v, ., z, ), ,, z, ., linearCombination, (, x, ,]
[., x, ,, x, ., negate, (, ), ,, v, ., z, ), ,, z, ., linearCombination, (, x, ,]
[., negate, (, ), ,, v, ., z, ), ,, z, ., linearCombination, (, x, ,, v, ., y, ,]
[., negate, (, ), ,, v, ., z, ), ,, z, ., linearCombination, (, x, ,, v, ., y, ,]
[., z, ), ,, z, ., linearCombination, (, x, ,, v, ., y, ,, y, ., negate, (, ), ,]
[., z, ), ,, z, ., linearCombination, (, x, ,, v, ., y, ,, y, ., negate, (, ), ,]
[v, ., x, ), ), ;, }, public, FieldVector3D, <, T, >, crossProduct, (, final, Vector3D, v, ), {, return]
[}, public, FieldVector3D, <, T, >, crossProduct, (, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[}, public, FieldVector3D, <, T, >, crossProduct, (, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (]
[T, >, crossProduct, (, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., linearCombination, (]
[T, >, crossProduct, (, final, Vector3D, v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., linearCombination, (]
[v, ), {, return, new, FieldVector3D, <, T, >, (, x, ., linearCombination, (, v, ., getZ, (, ), ,]
[{, return, new, FieldVector3D, <, T, >, (, x, ., linearCombination, (, v, ., getZ, (, ), ,, y, ,]
[return, new, FieldVector3D, <, T, >, (, x, ., linearCombination, (, v, ., getZ, (, ), ,, y, ,, -]
[return, new, FieldVector3D, <, T, >, (, x, ., linearCombination, (, v, ., getZ, (, ), ,, y, ,, -]
[(, x, ., linearCombination, (, v, ., getZ, (, ), ,, y, ,, -, v, ., getY, (, ), ,]
[linearCombination, (, v, ., getZ, (, ), ,, y, ,, -, v, ., getY, (, ), ,, z, ), ,]
[linearCombination, (, v, ., getZ, (, ), ,, y, ,, -, v, ., getY, (, ), ,, z, ), ,]
[getZ, (, ), ,, y, ,, -, v, ., getY, (, ), ,, z, ), ,, y, ., linearCombination, (]
[getZ, (, ), ,, y, ,, -, v, ., getY, (, ), ,, z, ), ,, y, ., linearCombination, (]
[-, v, ., getY, (, ), ,, z, ), ,, y, ., linearCombination, (, v, ., getX, (, ), ,]
[., getY, (, ), ,, z, ), ,, y, ., linearCombination, (, v, ., getX, (, ), ,, z, ,]
[getY, (, ), ,, z, ), ,, y, ., linearCombination, (, v, ., getX, (, ), ,, z, ,, -]
[getY, (, ), ,, z, ), ,, y, ., linearCombination, (, v, ., getX, (, ), ,, z, ,, -]
[,, y, ., linearCombination, (, v, ., getX, (, ), ,, z, ,, -, v, ., getZ, (, ), ,]
[linearCombination, (, v, ., getX, (, ), ,, z, ,, -, v, ., getZ, (, ), ,, x, ), ,]
[linearCombination, (, v, ., getX, (, ), ,, z, ,, -, v, ., getZ, (, ), ,, x, ), ,]
[getX, (, ), ,, z, ,, -, v, ., getZ, (, ), ,, x, ), ,, z, ., linearCombination, (]
[getX, (, ), ,, z, ,, -, v, ., getZ, (, ), ,, x, ), ,, z, ., linearCombination, (]
[-, v, ., getZ, (, ), ,, x, ), ,, z, ., linearCombination, (, v, ., getY, (, ), ,]
[., getZ, (, ), ,, x, ), ,, z, ., linearCombination, (, v, ., getY, (, ), ,, x, ,]
[getZ, (, ), ,, x, ), ,, z, ., linearCombination, (, v, ., getY, (, ), ,, x, ,, -]
[getZ, (, ), ,, x, ), ,, z, ., linearCombination, (, v, ., getY, (, ), ,, x, ,, -]
[,, z, ., linearCombination, (, v, ., getY, (, ), ,, x, ,, -, v, ., getX, (, ), ,]
[), ), ;, }, public, T, distance1, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[), ), ;, }, public, T, distance1, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[), ), ;, }, public, T, distance1, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[), ), ;, }, public, T, distance1, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[distance1, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =, v, ., x, ., subtract, (]
[T, dx, =, v, ., x, ., subtract, (, x, ), ., abs, (, ), ;, final, T, dy, =]
[T, dx, =, v, ., x, ., subtract, (, x, ), ., abs, (, ), ;, final, T, dy, =]
[T, dx, =, v, ., x, ., subtract, (, x, ), ., abs, (, ), ;, final, T, dy, =]
[T, dx, =, v, ., x, ., subtract, (, x, ), ., abs, (, ), ;, final, T, dy, =]
[., subtract, (, x, ), ., abs, (, ), ;, final, T, dy, =, v, ., y, ., subtract, (]
[T, dy, =, v, ., y, ., subtract, (, y, ), ., abs, (, ), ;, final, T, dz, =]
[T, dy, =, v, ., y, ., subtract, (, y, ), ., abs, (, ), ;, final, T, dz, =]
[T, dy, =, v, ., y, ., subtract, (, y, ), ., abs, (, ), ;, final, T, dz, =]
[T, dy, =, v, ., y, ., subtract, (, y, ), ., abs, (, ), ;, final, T, dz, =]
[., subtract, (, y, ), ., abs, (, ), ;, final, T, dz, =, v, ., z, ., subtract, (]
[), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ., abs, (, ), ;, return]
[), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ., abs, (, ), ;, return]
[), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ., abs, (, ), ;, return]
[dz, =, v, ., z, ., subtract, (, z, ), ., abs, (, ), ;, return, dx, ., add, (]
[., subtract, (, z, ), ., abs, (, ), ;, return, dx, ., add, (, dy, ), ., add, (]
[., add, (, dz, ), ;, }, public, T, distance1, (, final, Vector3D, v, ), {, final, T, dx, =]
[., add, (, dz, ), ;, }, public, T, distance1, (, final, Vector3D, v, ), {, final, T, dx, =]
[., add, (, dz, ), ;, }, public, T, distance1, (, final, Vector3D, v, ), {, final, T, dx, =]
[), ;, }, public, T, distance1, (, final, Vector3D, v, ), {, final, T, dx, =, x, ., subtract, (]
[), ;, }, public, T, distance1, (, final, Vector3D, v, ), {, final, T, dx, =, x, ., subtract, (]
[=, x, ., subtract, (, v, ., getX, (, ), ), ., abs, (, ), ;, final, T, dy, =]
[=, x, ., subtract, (, v, ., getX, (, ), ), ., abs, (, ), ;, final, T, dy, =]
[=, x, ., subtract, (, v, ., getX, (, ), ), ., abs, (, ), ;, final, T, dy, =]
[(, v, ., getX, (, ), ), ., abs, (, ), ;, final, T, dy, =, y, ., subtract, (]
[(, v, ., getX, (, ), ), ., abs, (, ), ;, final, T, dy, =, y, ., subtract, (]
[=, y, ., subtract, (, v, ., getY, (, ), ), ., abs, (, ), ;, final, T, dz, =]
[=, y, ., subtract, (, v, ., getY, (, ), ), ., abs, (, ), ;, final, T, dz, =]
[=, y, ., subtract, (, v, ., getY, (, ), ), ., abs, (, ), ;, final, T, dz, =]
[(, v, ., getY, (, ), ), ., abs, (, ), ;, final, T, dz, =, z, ., subtract, (]
[(, v, ., getY, (, ), ), ., abs, (, ), ;, final, T, dz, =, z, ., subtract, (]
[final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ., abs, (, ), ;, return]
[final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ., abs, (, ), ;, return]
[final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ., abs, (, ), ;, return]
[z, ., subtract, (, v, ., getZ, (, ), ), ., abs, (, ), ;, return, dx, ., add, (]
[., getZ, (, ), ), ., abs, (, ), ;, return, dx, ., add, (, dy, ), ., add, (]
[dz, ), ;, }, public, T, distance, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[dz, ), ;, }, public, T, distance, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[dz, ), ;, }, public, T, distance, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[distance, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =, v, ., x, ., subtract, (]
[v, ), {, final, T, dx, =, v, ., x, ., subtract, (, x, ), ;, final, T, dy, =]
[v, ), {, final, T, dx, =, v, ., x, ., subtract, (, x, ), ;, final, T, dy, =]
[v, ), {, final, T, dx, =, v, ., x, ., subtract, (, x, ), ;, final, T, dy, =]
[=, v, ., x, ., subtract, (, x, ), ;, final, T, dy, =, v, ., y, ., subtract, (]
[x, ), ;, final, T, dy, =, v, ., y, ., subtract, (, y, ), ;, final, T, dz, =]
[x, ), ;, final, T, dy, =, v, ., y, ., subtract, (, y, ), ;, final, T, dz, =]
[x, ), ;, final, T, dy, =, v, ., y, ., subtract, (, y, ), ;, final, T, dz, =]
[=, v, ., y, ., subtract, (, y, ), ;, final, T, dz, =, v, ., z, ., subtract, (]
[., subtract, (, y, ), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ;, return]
[., subtract, (, y, ), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ;, return]
[., subtract, (, y, ), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ;, return]
[., subtract, (, y, ), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ;, return]
[., subtract, (, y, ), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ;, return]
[), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ;, return, dx, ., multiply, (]
[=, v, ., z, ., subtract, (, z, ), ;, return, dx, ., multiply, (, dx, ), ., add, (]
[=, v, ., z, ., subtract, (, z, ), ;, return, dx, ., multiply, (, dx, ), ., add, (]
[., subtract, (, z, ), ;, return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (]
[return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., add, (]
[return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., add, (]
[(, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., add, (, dz, ., multiply, (]
[), ., sqrt, (, ), ;, }, public, T, distance, (, final, Vector3D, v, ), {, final, T, dx, =]
[), ., sqrt, (, ), ;, }, public, T, distance, (, final, Vector3D, v, ), {, final, T, dx, =]
[), ;, }, public, T, distance, (, final, Vector3D, v, ), {, final, T, dx, =, x, ., subtract, (]
[), ;, }, public, T, distance, (, final, Vector3D, v, ), {, final, T, dx, =, x, ., subtract, (]
[{, final, T, dx, =, x, ., subtract, (, v, ., getX, (, ), ), ;, final, T, dy, =]
[{, final, T, dx, =, x, ., subtract, (, v, ., getX, (, ), ), ;, final, T, dy, =]
[=, x, ., subtract, (, v, ., getX, (, ), ), ;, final, T, dy, =, y, ., subtract, (]
[=, x, ., subtract, (, v, ., getX, (, ), ), ;, final, T, dy, =, y, ., subtract, (]
[;, final, T, dy, =, y, ., subtract, (, v, ., getY, (, ), ), ;, final, T, dz, =]
[;, final, T, dy, =, y, ., subtract, (, v, ., getY, (, ), ), ;, final, T, dz, =]
[=, y, ., subtract, (, v, ., getY, (, ), ), ;, final, T, dz, =, z, ., subtract, (]
[=, y, ., subtract, (, v, ., getY, (, ), ), ;, final, T, dz, =, z, ., subtract, (]
[(, ), ), ;, final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ;, return]
[(, ), ), ;, final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ;, return]
[(, ), ), ;, final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ;, return]
[(, ), ), ;, final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ;, return]
[(, ), ), ;, final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ;, return]
[final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ;, return, dx, ., multiply, (]
[., subtract, (, v, ., getZ, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (]
[., subtract, (, v, ., getZ, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (]
[., getZ, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (]
[return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., add, (]
[return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., add, (]
[(, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., add, (, dz, ., multiply, (]
[(, ), ;, }, public, T, distanceInf, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[(, ), ;, }, public, T, distanceInf, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[(, ), ;, }, public, T, distanceInf, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[(, ), ;, }, public, T, distanceInf, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[distanceInf, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =, v, ., x, ., subtract, (]
[T, dx, =, v, ., x, ., subtract, (, x, ), ., abs, (, ), ;, final, T, dy, =]
[T, dx, =, v, ., x, ., subtract, (, x, ), ., abs, (, ), ;, final, T, dy, =]
[T, dx, =, v, ., x, ., subtract, (, x, ), ., abs, (, ), ;, final, T, dy, =]
[T, dx, =, v, ., x, ., subtract, (, x, ), ., abs, (, ), ;, final, T, dy, =]
[., subtract, (, x, ), ., abs, (, ), ;, final, T, dy, =, v, ., y, ., subtract, (]
[T, dy, =, v, ., y, ., subtract, (, y, ), ., abs, (, ), ;, final, T, dz, =]
[T, dy, =, v, ., y, ., subtract, (, y, ), ., abs, (, ), ;, final, T, dz, =]
[T, dy, =, v, ., y, ., subtract, (, y, ), ., abs, (, ), ;, final, T, dz, =]
[T, dy, =, v, ., y, ., subtract, (, y, ), ., abs, (, ), ;, final, T, dz, =]
[., subtract, (, y, ), ., abs, (, ), ;, final, T, dz, =, v, ., z, ., subtract, (]
[;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ., abs, (, ), ;, if, (]
[;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ., abs, (, ), ;, if, (]
[;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ., abs, (, ), ;, if, (]
[., z, ., subtract, (, z, ), ., abs, (, ), ;, if, (, dx, ., getReal, (, ), <=]
[., z, ., subtract, (, z, ), ., abs, (, ), ;, if, (, dx, ., getReal, (, ), <=]
[(, ), ;, if, (, dx, ., getReal, (, ), <=, dy, ., getReal, (, ), ), {, if, (]
[(, ), ;, if, (, dx, ., getReal, (, ), <=, dy, ., getReal, (, ), ), {, if, (]
[(, ), ;, if, (, dx, ., getReal, (, ), <=, dy, ., getReal, (, ), ), {, if, (]
[., getReal, (, ), <=, dy, ., getReal, (, ), ), {, if, (, dy, ., getReal, (, ), <=]
[., getReal, (, ), <=, dy, ., getReal, (, ), ), {, if, (, dy, ., getReal, (, ), <=]
[(, ), ), {, if, (, dy, ., getReal, (, ), <=, dz, ., getReal, (, ), ), {, return]
[dy, ., getReal, (, ), <=, dz, ., getReal, (, ), ), {, return, dz, ;, }, else, {, return]
[getReal, (, ), ), {, return, dz, ;, }, else, {, return, dy, ;, }, }, else, {, if, (]
[getReal, (, ), ), {, return, dz, ;, }, else, {, return, dy, ;, }, }, else, {, if, (]
[getReal, (, ), ), {, return, dz, ;, }, else, {, return, dy, ;, }, }, else, {, if, (]
[dz, ;, }, else, {, return, dy, ;, }, }, else, {, if, (, dx, ., getReal, (, ), <=]
[dz, ;, }, else, {, return, dy, ;, }, }, else, {, if, (, dx, ., getReal, (, ), <=]
[}, }, else, {, if, (, dx, ., getReal, (, ), <=, dz, ., getReal, (, ), ), {, return]
[dx, ., getReal, (, ), <=, dz, ., getReal, (, ), ), {, return, dz, ;, }, else, {, return]
[{, return, dx, ;, }, }, }, public, T, distanceInf, (, final, Vector3D, v, ), {, final, T, dx, =]
[{, return, dx, ;, }, }, }, public, T, distanceInf, (, final, Vector3D, v, ), {, final, T, dx, =]
[{, return, dx, ;, }, }, }, public, T, distanceInf, (, final, Vector3D, v, ), {, final, T, dx, =]
[}, }, }, public, T, distanceInf, (, final, Vector3D, v, ), {, final, T, dx, =, x, ., subtract, (]
[}, }, }, public, T, distanceInf, (, final, Vector3D, v, ), {, final, T, dx, =, x, ., subtract, (]
[=, x, ., subtract, (, v, ., getX, (, ), ), ., abs, (, ), ;, final, T, dy, =]
[=, x, ., subtract, (, v, ., getX, (, ), ), ., abs, (, ), ;, final, T, dy, =]
[=, x, ., subtract, (, v, ., getX, (, ), ), ., abs, (, ), ;, final, T, dy, =]
[(, v, ., getX, (, ), ), ., abs, (, ), ;, final, T, dy, =, y, ., subtract, (]
[(, v, ., getX, (, ), ), ., abs, (, ), ;, final, T, dy, =, y, ., subtract, (]
[=, y, ., subtract, (, v, ., getY, (, ), ), ., abs, (, ), ;, final, T, dz, =]
[=, y, ., subtract, (, v, ., getY, (, ), ), ., abs, (, ), ;, final, T, dz, =]
[=, y, ., subtract, (, v, ., getY, (, ), ), ., abs, (, ), ;, final, T, dz, =]
[(, v, ., getY, (, ), ), ., abs, (, ), ;, final, T, dz, =, z, ., subtract, (]
[(, v, ., getY, (, ), ), ., abs, (, ), ;, final, T, dz, =, z, ., subtract, (]
[T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ., abs, (, ), ;, if, (]
[T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ., abs, (, ), ;, if, (]
[T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ., abs, (, ), ;, if, (]
[(, v, ., getZ, (, ), ), ., abs, (, ), ;, if, (, dx, ., getReal, (, ), <=]
[(, v, ., getZ, (, ), ), ., abs, (, ), ;, if, (, dx, ., getReal, (, ), <=]
[(, ), ;, if, (, dx, ., getReal, (, ), <=, dy, ., getReal, (, ), ), {, if, (]
[(, ), ;, if, (, dx, ., getReal, (, ), <=, dy, ., getReal, (, ), ), {, if, (]
[(, ), ;, if, (, dx, ., getReal, (, ), <=, dy, ., getReal, (, ), ), {, if, (]
[., getReal, (, ), <=, dy, ., getReal, (, ), ), {, if, (, dy, ., getReal, (, ), <=]
[., getReal, (, ), <=, dy, ., getReal, (, ), ), {, if, (, dy, ., getReal, (, ), <=]
[(, ), ), {, if, (, dy, ., getReal, (, ), <=, dz, ., getReal, (, ), ), {, return]
[dy, ., getReal, (, ), <=, dz, ., getReal, (, ), ), {, return, dz, ;, }, else, {, return]
[getReal, (, ), ), {, return, dz, ;, }, else, {, return, dy, ;, }, }, else, {, if, (]
[getReal, (, ), ), {, return, dz, ;, }, else, {, return, dy, ;, }, }, else, {, if, (]
[getReal, (, ), ), {, return, dz, ;, }, else, {, return, dy, ;, }, }, else, {, if, (]
[dz, ;, }, else, {, return, dy, ;, }, }, else, {, if, (, dx, ., getReal, (, ), <=]
[dz, ;, }, else, {, return, dy, ;, }, }, else, {, if, (, dx, ., getReal, (, ), <=]
[}, }, else, {, if, (, dx, ., getReal, (, ), <=, dz, ., getReal, (, ), ), {, return]
[dx, ., getReal, (, ), <=, dz, ., getReal, (, ), ), {, return, dz, ;, }, else, {, return]
[;, }, }, }, public, T, distanceSq, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[;, }, }, }, public, T, distanceSq, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[;, }, }, }, public, T, distanceSq, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =]
[distanceSq, (, final, FieldVector3D, <, T, >, v, ), {, final, T, dx, =, v, ., x, ., subtract, (]
[v, ), {, final, T, dx, =, v, ., x, ., subtract, (, x, ), ;, final, T, dy, =]
[v, ), {, final, T, dx, =, v, ., x, ., subtract, (, x, ), ;, final, T, dy, =]
[v, ), {, final, T, dx, =, v, ., x, ., subtract, (, x, ), ;, final, T, dy, =]
[=, v, ., x, ., subtract, (, x, ), ;, final, T, dy, =, v, ., y, ., subtract, (]
[x, ), ;, final, T, dy, =, v, ., y, ., subtract, (, y, ), ;, final, T, dz, =]
[x, ), ;, final, T, dy, =, v, ., y, ., subtract, (, y, ), ;, final, T, dz, =]
[x, ), ;, final, T, dy, =, v, ., y, ., subtract, (, y, ), ;, final, T, dz, =]
[=, v, ., y, ., subtract, (, y, ), ;, final, T, dz, =, v, ., z, ., subtract, (]
[., subtract, (, y, ), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ;, return]
[., subtract, (, y, ), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ;, return]
[., subtract, (, y, ), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ;, return]
[., subtract, (, y, ), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ;, return]
[), ;, final, T, dz, =, v, ., z, ., subtract, (, z, ), ;, return, dx, ., multiply, (]
[=, v, ., z, ., subtract, (, z, ), ;, return, dx, ., multiply, (, dx, ), ., add, (]
[=, v, ., z, ., subtract, (, z, ), ;, return, dx, ., multiply, (, dx, ), ., add, (]
[., subtract, (, z, ), ;, return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (]
[return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., add, (]
[return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., add, (]
[(, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., add, (, dz, ., multiply, (]
[multiply, (, dz, ), ), ;, }, public, T, distanceSq, (, final, Vector3D, v, ), {, final, T, dx, =]
[multiply, (, dz, ), ), ;, }, public, T, distanceSq, (, final, Vector3D, v, ), {, final, T, dx, =]
[), ;, }, public, T, distanceSq, (, final, Vector3D, v, ), {, final, T, dx, =, x, ., subtract, (]
[), ;, }, public, T, distanceSq, (, final, Vector3D, v, ), {, final, T, dx, =, x, ., subtract, (]
[{, final, T, dx, =, x, ., subtract, (, v, ., getX, (, ), ), ;, final, T, dy, =]
[{, final, T, dx, =, x, ., subtract, (, v, ., getX, (, ), ), ;, final, T, dy, =]
[=, x, ., subtract, (, v, ., getX, (, ), ), ;, final, T, dy, =, y, ., subtract, (]
[=, x, ., subtract, (, v, ., getX, (, ), ), ;, final, T, dy, =, y, ., subtract, (]
[;, final, T, dy, =, y, ., subtract, (, v, ., getY, (, ), ), ;, final, T, dz, =]
[;, final, T, dy, =, y, ., subtract, (, v, ., getY, (, ), ), ;, final, T, dz, =]
[=, y, ., subtract, (, v, ., getY, (, ), ), ;, final, T, dz, =, z, ., subtract, (]
[=, y, ., subtract, (, v, ., getY, (, ), ), ;, final, T, dz, =, z, ., subtract, (]
[(, ), ), ;, final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ;, return]
[(, ), ), ;, final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ;, return]
[(, ), ), ;, final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ;, return]
[(, ), ), ;, final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ;, return]
[final, T, dz, =, z, ., subtract, (, v, ., getZ, (, ), ), ;, return, dx, ., multiply, (]
[., subtract, (, v, ., getZ, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (]
[., subtract, (, v, ., getZ, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (]
[., getZ, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (]
[return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., add, (]
[return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., add, (]
[(, dx, ), ., add, (, dy, ., multiply, (, dy, ), ), ., add, (, dz, ., multiply, (]
[>, T, dotProduct, (, final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[>, T, dotProduct, (, final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, v1, ., dotProduct, (]
[<, T, >, >, T, dotProduct, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return]
[<, T, >, >, T, dotProduct, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return]
[T, dotProduct, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return, v1, ., dotProduct, (]
[<, T, >, >, T, dotProduct, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[<, T, >, >, T, dotProduct, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[T, dotProduct, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, v2, ., dotProduct, (]
[T, >, crossProduct, (, final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[T, >, crossProduct, (, final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, v1, ., crossProduct, (]
[>, FieldVector3D, <, T, >, crossProduct, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return]
[>, FieldVector3D, <, T, >, crossProduct, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return]
[>, crossProduct, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return, v1, ., crossProduct, (]
[>, FieldVector3D, <, T, >, crossProduct, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[(, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, new, FieldVector3D, <, T, >, (]
[(, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, new, FieldVector3D, <, T, >, (]
[(, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, new, FieldVector3D, <, T, >, (]
[FieldVector3D, <, T, >, v2, ), {, return, new, FieldVector3D, <, T, >, (, v2, ., x, ., linearCombination, (]
[FieldVector3D, <, T, >, v2, ), {, return, new, FieldVector3D, <, T, >, (, v2, ., x, ., linearCombination, (]
[{, return, new, FieldVector3D, <, T, >, (, v2, ., x, ., linearCombination, (, v1, ., getY, (, ), ,]
[{, return, new, FieldVector3D, <, T, >, (, v2, ., x, ., linearCombination, (, v1, ., getY, (, ), ,]
[<, T, >, (, v2, ., x, ., linearCombination, (, v1, ., getY, (, ), ,, v2, ., z, ,]
[T, >, (, v2, ., x, ., linearCombination, (, v1, ., getY, (, ), ,, v2, ., z, ,, -]
[T, >, (, v2, ., x, ., linearCombination, (, v1, ., getY, (, ), ,, v2, ., z, ,, -]
[., linearCombination, (, v1, ., getY, (, ), ,, v2, ., z, ,, -, v1, ., getZ, (, ), ,]
[., linearCombination, (, v1, ., getY, (, ), ,, v2, ., z, ,, -, v1, ., getZ, (, ), ,]
[getY, (, ), ,, v2, ., z, ,, -, v1, ., getZ, (, ), ,, v2, ., y, ), ,]
[getY, (, ), ,, v2, ., z, ,, -, v1, ., getZ, (, ), ,, v2, ., y, ), ,]
[getY, (, ), ,, v2, ., z, ,, -, v1, ., getZ, (, ), ,, v2, ., y, ), ,]
[z, ,, -, v1, ., getZ, (, ), ,, v2, ., y, ), ,, v2, ., y, ., linearCombination, (]
[z, ,, -, v1, ., getZ, (, ), ,, v2, ., y, ), ,, v2, ., y, ., linearCombination, (]
[(, ), ,, v2, ., y, ), ,, v2, ., y, ., linearCombination, (, v1, ., getZ, (, ), ,]
[(, ), ,, v2, ., y, ), ,, v2, ., y, ., linearCombination, (, v1, ., getZ, (, ), ,]
[., y, ), ,, v2, ., y, ., linearCombination, (, v1, ., getZ, (, ), ,, v2, ., x, ,]
[y, ), ,, v2, ., y, ., linearCombination, (, v1, ., getZ, (, ), ,, v2, ., x, ,, -]
[y, ), ,, v2, ., y, ., linearCombination, (, v1, ., getZ, (, ), ,, v2, ., x, ,, -]
[., linearCombination, (, v1, ., getZ, (, ), ,, v2, ., x, ,, -, v1, ., getX, (, ), ,]
[., linearCombination, (, v1, ., getZ, (, ), ,, v2, ., x, ,, -, v1, ., getX, (, ), ,]
[getZ, (, ), ,, v2, ., x, ,, -, v1, ., getX, (, ), ,, v2, ., z, ), ,]
[getZ, (, ), ,, v2, ., x, ,, -, v1, ., getX, (, ), ,, v2, ., z, ), ,]
[getZ, (, ), ,, v2, ., x, ,, -, v1, ., getX, (, ), ,, v2, ., z, ), ,]
[x, ,, -, v1, ., getX, (, ), ,, v2, ., z, ), ,, v2, ., z, ., linearCombination, (]
[x, ,, -, v1, ., getX, (, ), ,, v2, ., z, ), ,, v2, ., z, ., linearCombination, (]
[(, ), ,, v2, ., z, ), ,, v2, ., z, ., linearCombination, (, v1, ., getX, (, ), ,]
[(, ), ,, v2, ., z, ), ,, v2, ., z, ., linearCombination, (, v1, ., getX, (, ), ,]
[., z, ), ,, v2, ., z, ., linearCombination, (, v1, ., getX, (, ), ,, v2, ., y, ,]
[z, ), ,, v2, ., z, ., linearCombination, (, v1, ., getX, (, ), ,, v2, ., y, ,, -]
[z, ), ,, v2, ., z, ., linearCombination, (, v1, ., getX, (, ), ,, v2, ., y, ,, -]
[., linearCombination, (, v1, ., getX, (, ), ,, v2, ., y, ,, -, v1, ., getY, (, ), ,]
[., linearCombination, (, v1, ., getX, (, ), ,, v2, ., y, ,, -, v1, ., getY, (, ), ,]
[>, T, distance1, (, final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[>, T, distance1, (, final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, v1, ., distance1, (]
[<, T, >, >, T, distance1, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return]
[<, T, >, >, T, distance1, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return]
[T, distance1, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return, v1, ., distance1, (]
[<, T, >, >, T, distance1, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[<, T, >, >, T, distance1, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[T, distance1, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, v2, ., distance1, (]
[>, T, distance, (, final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[>, T, distance, (, final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, v1, ., distance, (]
[<, T, >, >, T, distance, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return]
[<, T, >, >, T, distance, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return]
[T, distance, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return, v1, ., distance, (]
[<, T, >, >, T, distance, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[<, T, >, >, T, distance, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[T, distance, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, v2, ., distance, (]
[>, T, distanceInf, (, final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[>, T, distanceInf, (, final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, v1, ., distanceInf, (]
[<, T, >, >, T, distanceInf, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return]
[<, T, >, >, T, distanceInf, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return]
[T, distanceInf, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return, v1, ., distanceInf, (]
[<, T, >, >, T, distanceInf, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[<, T, >, >, T, distanceInf, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[T, distanceInf, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, v2, ., distanceInf, (]
[>, T, distanceSq, (, final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[>, T, distanceSq, (, final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[final, FieldVector3D, <, T, >, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, v1, ., distanceSq, (]
[<, T, >, >, T, distanceSq, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return]
[<, T, >, >, T, distanceSq, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return]
[T, distanceSq, (, final, FieldVector3D, <, T, >, v1, ,, final, Vector3D, v2, ), {, return, v1, ., distanceSq, (]
[<, T, >, >, T, distanceSq, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[<, T, >, >, T, distanceSq, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return]
[T, distanceSq, (, final, Vector3D, v1, ,, final, FieldVector3D, <, T, >, v2, ), {, return, v2, ., distanceSq, (]
[), {, return, v2, ., distanceSq, (, v1, ), ;, }, @, Override, public, String, toString, (, ), {, return]
[), {, return, v2, ., distanceSq, (, v1, ), ;, }, @, Override, public, String, toString, (, ), {, return]
[), {, return, v2, ., distanceSq, (, v1, ), ;, }, @, Override, public, String, toString, (, ), {, return]
[), ;, }, @, Override, public, String, toString, (, ), {, return, Vector3DFormat, ., getInstance, (, ), ., format, (]
[), ., format, (, toVector3D, (, ), ), ;, }, public, String, toString, (, final, NumberFormat, format, ), {, return]
[), ., format, (, toVector3D, (, ), ), ;, }, public, String, toString, (, final, NumberFormat, format, ), {, return]
[(, toVector3D, (, ), ), ;, }, public, String, toString, (, final, NumberFormat, format, ), {, return, new, Vector3DFormat, (]
[;, }, public, String, toString, (, final, NumberFormat, format, ), {, return, new, Vector3DFormat, (, format, ), ., format, (]
