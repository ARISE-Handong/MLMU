[;, private, boolean, editable, ;, private, RegularTimePeriod, newTimePeriod, ;, private, Number, newValue, ;, public, TimeSeriesTableModel, (, ), {, this, (]
[editable, ;, private, RegularTimePeriod, newTimePeriod, ;, private, Number, newValue, ;, public, TimeSeriesTableModel, (, ), {, this, (, new, TimeSeries, (]
[{, this, (, new, TimeSeries, (, "Untitled", ), ), ;, }, public, TimeSeriesTableModel, (, TimeSeries, series, ), {, this, (]
[(, new, TimeSeries, (, "Untitled", ), ), ;, }, public, TimeSeriesTableModel, (, TimeSeries, series, ), {, this, (, series, ,]
[), {, this, (, series, ,, false, ), ;, }, public, TimeSeriesTableModel, (, TimeSeries, series, ,, boolean, editable, ), {]
[), {, this, (, series, ,, false, ), ;, }, public, TimeSeriesTableModel, (, TimeSeries, series, ,, boolean, editable, ), {]
[series, ,, false, ), ;, }, public, TimeSeriesTableModel, (, TimeSeries, series, ,, boolean, editable, ), {, this, ., series, =]
[false, ), ;, }, public, TimeSeriesTableModel, (, TimeSeries, series, ,, boolean, editable, ), {, this, ., series, =, series, ;]
[false, ), ;, }, public, TimeSeriesTableModel, (, TimeSeries, series, ,, boolean, editable, ), {, this, ., series, =, series, ;]
[false, ), ;, }, public, TimeSeriesTableModel, (, TimeSeries, series, ,, boolean, editable, ), {, this, ., series, =, series, ;]
[(, TimeSeries, series, ,, boolean, editable, ), {, this, ., series, =, series, ;, this, ., series, ., addChangeListener, (]
[,, boolean, editable, ), {, this, ., series, =, series, ;, this, ., series, ., addChangeListener, (, this, ), ;]
[,, boolean, editable, ), {, this, ., series, =, series, ;, this, ., series, ., addChangeListener, (, this, ), ;]
[{, this, ., series, =, series, ;, this, ., series, ., addChangeListener, (, this, ), ;, this, ., editable, =]
[., addChangeListener, (, this, ), ;, this, ., editable, =, editable, ;, }, public, int, getColumnCount, (, ), {, return]
[public, int, getColumnCount, (, ), {, return, 2, ;, }, public, Class, getColumnClass, (, int, column, ), {, if, (]
[public, int, getColumnCount, (, ), {, return, 2, ;, }, public, Class, getColumnClass, (, int, column, ), {, if, (]
[getColumnCount, (, ), {, return, 2, ;, }, public, Class, getColumnClass, (, int, column, ), {, if, (, column, ==]
[return, 2, ;, }, public, Class, getColumnClass, (, int, column, ), {, if, (, column, ==, 0, ), {, return]
[column, ), {, if, (, column, ==, 0, ), {, return, String, ., class, ;, }, else, {, if, (]
[column, ), {, if, (, column, ==, 0, ), {, return, String, ., class, ;, }, else, {, if, (]
[{, if, (, column, ==, 0, ), {, return, String, ., class, ;, }, else, {, if, (, column, ==]
[==, 0, ), {, return, String, ., class, ;, }, else, {, if, (, column, ==, 1, ), {, return]
[;, }, else, {, if, (, column, ==, 1, ), {, return, Double, ., class, ;, }, else, {, return]
[;, }, else, {, return, null, ;, }, }, }, public, String, getColumnName, (, int, column, ), {, if, (]
[;, }, else, {, return, null, ;, }, }, }, public, String, getColumnName, (, int, column, ), {, if, (]
[else, {, return, null, ;, }, }, }, public, String, getColumnName, (, int, column, ), {, if, (, column, ==]
[;, }, }, }, public, String, getColumnName, (, int, column, ), {, if, (, column, ==, 0, ), {, return]
[(, int, column, ), {, if, (, column, ==, 0, ), {, return, "Period:", ;, }, else, {, if, (]
[(, int, column, ), {, if, (, column, ==, 0, ), {, return, "Period:", ;, }, else, {, if, (]
[column, ), {, if, (, column, ==, 0, ), {, return, "Period:", ;, }, else, {, if, (, column, ==]
[(, column, ==, 0, ), {, return, "Period:", ;, }, else, {, if, (, column, ==, 1, ), {, return]
[return, "Period:", ;, }, else, {, if, (, column, ==, 1, ), {, return, "Value:", ;, }, else, {, return]
[{, return, "Value:", ;, }, else, {, return, null, ;, }, }, }, public, int, getRowCount, (, ), {, return]
[{, return, "Value:", ;, }, else, {, return, null, ;, }, }, }, public, int, getRowCount, (, ), {, return]
[{, return, "Value:", ;, }, else, {, return, null, ;, }, }, }, public, int, getRowCount, (, ), {, return]
[series, ., getItemCount, (, ), ;, }, public, Object, getValueAt, (, int, row, ,, int, column, ), {, if, (]
[series, ., getItemCount, (, ), ;, }, public, Object, getValueAt, (, int, row, ,, int, column, ), {, if, (]
[getItemCount, (, ), ;, }, public, Object, getValueAt, (, int, row, ,, int, column, ), {, if, (, row, <]
[getItemCount, (, ), ;, }, public, Object, getValueAt, (, int, row, ,, int, column, ), {, if, (, row, <]
[getItemCount, (, ), ;, }, public, Object, getValueAt, (, int, row, ,, int, column, ), {, if, (, row, <]
[,, int, column, ), {, if, (, row, <, this, ., series, ., getItemCount, (, ), ), {, if, (]
[,, int, column, ), {, if, (, row, <, this, ., series, ., getItemCount, (, ), ), {, if, (]
[column, ), {, if, (, row, <, this, ., series, ., getItemCount, (, ), ), {, if, (, column, ==]
[(, row, <, this, ., series, ., getItemCount, (, ), ), {, if, (, column, ==, 0, ), {, return]
[(, row, <, this, ., series, ., getItemCount, (, ), ), {, if, (, column, ==, 0, ), {, return]
[(, row, <, this, ., series, ., getItemCount, (, ), ), {, if, (, column, ==, 0, ), {, return]
[., getItemCount, (, ), ), {, if, (, column, ==, 0, ), {, return, this, ., series, ., getTimePeriod, (]
[column, ==, 0, ), {, return, this, ., series, ., getTimePeriod, (, row, ), ;, }, else, {, if, (]
[column, ==, 0, ), {, return, this, ., series, ., getTimePeriod, (, row, ), ;, }, else, {, if, (]
[0, ), {, return, this, ., series, ., getTimePeriod, (, row, ), ;, }, else, {, if, (, column, ==]
[this, ., series, ., getTimePeriod, (, row, ), ;, }, else, {, if, (, column, ==, 1, ), {, return]
[this, ., series, ., getTimePeriod, (, row, ), ;, }, else, {, if, (, column, ==, 1, ), {, return]
[this, ., series, ., getTimePeriod, (, row, ), ;, }, else, {, if, (, column, ==, 1, ), {, return]
[row, ), ;, }, else, {, if, (, column, ==, 1, ), {, return, this, ., series, ., getValue, (]
[(, column, ==, 1, ), {, return, this, ., series, ., getValue, (, row, ), ;, }, else, {, return]
[series, ., getValue, (, row, ), ;, }, else, {, return, null, ;, }, }, }, else, {, if, (]
[series, ., getValue, (, row, ), ;, }, else, {, return, null, ;, }, }, }, else, {, if, (]
[getValue, (, row, ), ;, }, else, {, return, null, ;, }, }, }, else, {, if, (, column, ==]
[;, }, else, {, return, null, ;, }, }, }, else, {, if, (, column, ==, 0, ), {, return]
[;, }, else, {, return, null, ;, }, }, }, else, {, if, (, column, ==, 0, ), {, return]
[}, else, {, if, (, column, ==, 0, ), {, return, this, ., newTimePeriod, ;, }, else, {, if, (]
[}, else, {, if, (, column, ==, 0, ), {, return, this, ., newTimePeriod, ;, }, else, {, if, (]
[{, if, (, column, ==, 0, ), {, return, this, ., newTimePeriod, ;, }, else, {, if, (, column, ==]
[==, 0, ), {, return, this, ., newTimePeriod, ;, }, else, {, if, (, column, ==, 1, ), {, return]
[==, 0, ), {, return, this, ., newTimePeriod, ;, }, else, {, if, (, column, ==, 1, ), {, return]
[;, }, else, {, if, (, column, ==, 1, ), {, return, this, ., newValue, ;, }, else, {, return]
[return, null, ;, }, }, }, }, public, boolean, isCellEditable, (, int, row, ,, int, column, ), {, if, (]
[return, null, ;, }, }, }, }, public, boolean, isCellEditable, (, int, row, ,, int, column, ), {, if, (]
[public, boolean, isCellEditable, (, int, row, ,, int, column, ), {, if, (, this, ., editable, ), {, if, (]
[public, boolean, isCellEditable, (, int, row, ,, int, column, ), {, if, (, this, ., editable, ), {, if, (]
[boolean, isCellEditable, (, int, row, ,, int, column, ), {, if, (, this, ., editable, ), {, if, (, (]
[boolean, isCellEditable, (, int, row, ,, int, column, ), {, if, (, this, ., editable, ), {, if, (, (]
[(, int, row, ,, int, column, ), {, if, (, this, ., editable, ), {, if, (, (, column, ==]
[,, int, column, ), {, if, (, this, ., editable, ), {, if, (, (, column, ==, 0, ), ||]
[int, column, ), {, if, (, this, ., editable, ), {, if, (, (, column, ==, 0, ), ||, (]
[int, column, ), {, if, (, this, ., editable, ), {, if, (, (, column, ==, 0, ), ||, (]
[), {, if, (, this, ., editable, ), {, if, (, (, column, ==, 0, ), ||, (, column, ==]
[., editable, ), {, if, (, (, column, ==, 0, ), ||, (, column, ==, 1, ), ), {, return]
[(, column, ==, 0, ), ||, (, column, ==, 1, ), ), {, return, true, ;, }, else, {, return]
[column, ==, 1, ), ), {, return, true, ;, }, else, {, return, false, ;, }, }, else, {, return]
[false, ;, }, }, public, void, setValueAt, (, Object, value, ,, int, row, ,, int, column, ), {, if, (]
[false, ;, }, }, public, void, setValueAt, (, Object, value, ,, int, row, ,, int, column, ), {, if, (]
[}, }, public, void, setValueAt, (, Object, value, ,, int, row, ,, int, column, ), {, if, (, row, <]
[}, }, public, void, setValueAt, (, Object, value, ,, int, row, ,, int, column, ), {, if, (, row, <]
[}, }, public, void, setValueAt, (, Object, value, ,, int, row, ,, int, column, ), {, if, (, row, <]
[,, int, column, ), {, if, (, row, <, this, ., series, ., getItemCount, (, ), ), {, if, (]
[,, int, column, ), {, if, (, row, <, this, ., series, ., getItemCount, (, ), ), {, if, (]
[column, ), {, if, (, row, <, this, ., series, ., getItemCount, (, ), ), {, if, (, column, ==]
[., series, ., getItemCount, (, ), ), {, if, (, column, ==, 1, ), {, try, {, Double, v, =]
[., series, ., getItemCount, (, ), ), {, if, (, column, ==, 1, ), {, try, {, Double, v, =]
[(, ), ), {, if, (, column, ==, 1, ), {, try, {, Double, v, =, Double, ., valueOf, (]
[(, ), ), {, if, (, column, ==, 1, ), {, try, {, Double, v, =, Double, ., valueOf, (]
[==, 1, ), {, try, {, Double, v, =, Double, ., valueOf, (, value, ., toString, (, ), ), ;]
[==, 1, ), {, try, {, Double, v, =, Double, ., valueOf, (, value, ., toString, (, ), ), ;]
[==, 1, ), {, try, {, Double, v, =, Double, ., valueOf, (, value, ., toString, (, ), ), ;]
[Double, v, =, Double, ., valueOf, (, value, ., toString, (, ), ), ;, this, ., series, ., update, (]
[=, Double, ., valueOf, (, value, ., toString, (, ), ), ;, this, ., series, ., update, (, row, ,]
[), ;, this, ., series, ., update, (, row, ,, v, ), ;, }, catch, (, NumberFormatException, nfe, ), {]
[), ;, this, ., series, ., update, (, row, ,, v, ), ;, }, catch, (, NumberFormatException, nfe, ), {]
[), ;, this, ., series, ., update, (, row, ,, v, ), ;, }, catch, (, NumberFormatException, nfe, ), {]
[update, (, row, ,, v, ), ;, }, catch, (, NumberFormatException, nfe, ), {, System, ., err, ., println, (]
[NumberFormatException, nfe, ), {, System, ., err, ., println, (, "Number format exception", ), ;, }, }, }, else, {, if, (]
[NumberFormatException, nfe, ), {, System, ., err, ., println, (, "Number format exception", ), ;, }, }, }, else, {, if, (]
[), {, System, ., err, ., println, (, "Number format exception", ), ;, }, }, }, else, {, if, (, column, ==]
[., err, ., println, (, "Number format exception", ), ;, }, }, }, else, {, if, (, column, ==, 0, ), {]
[., err, ., println, (, "Number format exception", ), ;, }, }, }, else, {, if, (, column, ==, 0, ), {]
[(, "Number format exception", ), ;, }, }, }, else, {, if, (, column, ==, 0, ), {, this, ., newTimePeriod, =]
[}, else, {, if, (, column, ==, 0, ), {, this, ., newTimePeriod, =, null, ;, }, else, if, (]
[}, else, {, if, (, column, ==, 0, ), {, this, ., newTimePeriod, =, null, ;, }, else, if, (]
[{, if, (, column, ==, 0, ), {, this, ., newTimePeriod, =, null, ;, }, else, if, (, column, ==]
[column, ==, 0, ), {, this, ., newTimePeriod, =, null, ;, }, else, if, (, column, ==, 1, ), {]
[column, ==, 0, ), {, this, ., newTimePeriod, =, null, ;, }, else, if, (, column, ==, 1, ), {]
[{, this, ., newTimePeriod, =, null, ;, }, else, if, (, column, ==, 1, ), {, this, ., newValue, =]
[{, this, ., newTimePeriod, =, null, ;, }, else, if, (, column, ==, 1, ), {, this, ., newValue, =]
[=, null, ;, }, else, if, (, column, ==, 1, ), {, this, ., newValue, =, Double, ., valueOf, (]
[=, null, ;, }, else, if, (, column, ==, 1, ), {, this, ., newValue, =, Double, ., valueOf, (]
[valueOf, (, value, ., toString, (, ), ), ;, }, }, }, public, void, seriesChanged, (, SeriesChangeEvent, event, ), {]
