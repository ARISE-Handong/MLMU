[ArrayList, ;, import, java, ., util, ., StringTokenizer, ;, public, final, class, ObjectUtilities, {, public, static, final, String, THREAD_CONTEXT, =]
[;, public, final, class, ObjectUtilities, {, public, static, final, String, THREAD_CONTEXT, =, "ThreadContext", ;, public, static, final, String, CLASS_CONTEXT, =]
[static, final, String, THREAD_CONTEXT, =, "ThreadContext", ;, public, static, final, String, CLASS_CONTEXT, =, "ClassContext", ;, private, static, String, classLoaderSource, =]
[;, private, static, ClassLoader, classLoader, ;, private, ObjectUtilities, (, ), {, }, public, static, String, getClassLoaderSource, (, ), {, return]
[static, String, getClassLoaderSource, (, ), {, return, classLoaderSource, ;, }, public, static, void, setClassLoaderSource, (, final, String, classLoaderSource, ), {]
[static, String, getClassLoaderSource, (, ), {, return, classLoaderSource, ;, }, public, static, void, setClassLoaderSource, (, final, String, classLoaderSource, ), {]
[), {, return, classLoaderSource, ;, }, public, static, void, setClassLoaderSource, (, final, String, classLoaderSource, ), {, ObjectUtilities, ., classLoaderSource, =]
[=, classLoaderSource, ;, }, public, static, boolean, equal, (, final, Object, o1, ,, final, Object, o2, ), {, if, (]
[=, classLoaderSource, ;, }, public, static, boolean, equal, (, final, Object, o1, ,, final, Object, o2, ), {, if, (]
[;, }, public, static, boolean, equal, (, final, Object, o1, ,, final, Object, o2, ), {, if, (, o1, ==]
[boolean, equal, (, final, Object, o1, ,, final, Object, o2, ), {, if, (, o1, ==, o2, ), {, return]
[o1, ,, final, Object, o2, ), {, if, (, o1, ==, o2, ), {, return, true, ;, }, if, (]
[o1, ,, final, Object, o2, ), {, if, (, o1, ==, o2, ), {, return, true, ;, }, if, (]
[final, Object, o2, ), {, if, (, o1, ==, o2, ), {, return, true, ;, }, if, (, o1, !=]
[{, if, (, o1, ==, o2, ), {, return, true, ;, }, if, (, o1, !=, null, ), {, return]
[{, if, (, o1, ==, o2, ), {, return, true, ;, }, if, (, o1, !=, null, ), {, return]
[==, o2, ), {, return, true, ;, }, if, (, o1, !=, null, ), {, return, o1, ., equals, (]
[}, if, (, o1, !=, null, ), {, return, o1, ., equals, (, o2, ), ;, }, else, {, return]
[else, {, return, false, ;, }, }, public, static, int, hashCode, (, final, Object, object, ), {, int, result, =]
[;, }, }, public, static, int, hashCode, (, final, Object, object, ), {, int, result, =, 0, ;, if, (]
[;, }, }, public, static, int, hashCode, (, final, Object, object, ), {, int, result, =, 0, ;, if, (]
[}, public, static, int, hashCode, (, final, Object, object, ), {, int, result, =, 0, ;, if, (, object, !=]
[int, hashCode, (, final, Object, object, ), {, int, result, =, 0, ;, if, (, object, !=, null, ), {]
[(, final, Object, object, ), {, int, result, =, 0, ;, if, (, object, !=, null, ), {, result, =]
[(, final, Object, object, ), {, int, result, =, 0, ;, if, (, object, !=, null, ), {, result, =]
[=, 0, ;, if, (, object, !=, null, ), {, result, =, object, ., hashCode, (, ), ;, }, return]
[;, }, return, result, ;, }, public, static, Object, clone, (, final, Object, object, ), throws, CloneNotSupportedException, {, if, (]
[;, }, return, result, ;, }, public, static, Object, clone, (, final, Object, object, ), throws, CloneNotSupportedException, {, if, (]
[return, result, ;, }, public, static, Object, clone, (, final, Object, object, ), throws, CloneNotSupportedException, {, if, (, object, ==]
[public, static, Object, clone, (, final, Object, object, ), throws, CloneNotSupportedException, {, if, (, object, ==, null, ), {, throw]
[clone, (, final, Object, object, ), throws, CloneNotSupportedException, {, if, (, object, ==, null, ), {, throw, new, IllegalArgumentException, (]
[throws, CloneNotSupportedException, {, if, (, object, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'object' argument.", ), ;, }, if, (]
[throws, CloneNotSupportedException, {, if, (, object, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'object' argument.", ), ;, }, if, (]
[{, throw, new, IllegalArgumentException, (, "Null 'object' argument.", ), ;, }, if, (, object, instanceof, PublicCloneable, ), {, final, PublicCloneable, pc, =]
[IllegalArgumentException, (, "Null 'object' argument.", ), ;, }, if, (, object, instanceof, PublicCloneable, ), {, final, PublicCloneable, pc, =, (, PublicCloneable, )]
[), ;, }, if, (, object, instanceof, PublicCloneable, ), {, final, PublicCloneable, pc, =, (, PublicCloneable, ), object, ;, return]
[), ;, }, if, (, object, instanceof, PublicCloneable, ), {, final, PublicCloneable, pc, =, (, PublicCloneable, ), object, ;, return]
[PublicCloneable, ), object, ;, return, pc, ., clone, (, ), ;, }, else, {, try, {, final, Method, method, =]
[PublicCloneable, ), object, ;, return, pc, ., clone, (, ), ;, }, else, {, try, {, final, Method, method, =]
[PublicCloneable, ), object, ;, return, pc, ., clone, (, ), ;, }, else, {, try, {, final, Method, method, =]
[(, ), ;, }, else, {, try, {, final, Method, method, =, object, ., getClass, (, ), ., getMethod, (]
[;, }, else, {, try, {, final, Method, method, =, object, ., getClass, (, ), ., getMethod, (, "clone", ,]
[{, final, Method, method, =, object, ., getClass, (, ), ., getMethod, (, "clone", ,, (, Class, [, ], )]
[object, ., getClass, (, ), ., getMethod, (, "clone", ,, (, Class, [, ], ), null, ), ;, if, (]
[object, ., getClass, (, ), ., getMethod, (, "clone", ,, (, Class, [, ], ), null, ), ;, if, (]
[), ., getMethod, (, "clone", ,, (, Class, [, ], ), null, ), ;, if, (, Modifier, ., isPublic, (]
[), ., getMethod, (, "clone", ,, (, Class, [, ], ), null, ), ;, if, (, Modifier, ., isPublic, (]
[], ), null, ), ;, if, (, Modifier, ., isPublic, (, method, ., getModifiers, (, ), ), ), {, return]
[], ), null, ), ;, if, (, Modifier, ., isPublic, (, method, ., getModifiers, (, ), ), ), {, return]
[;, if, (, Modifier, ., isPublic, (, method, ., getModifiers, (, ), ), ), {, return, method, ., invoke, (]
[(, Modifier, ., isPublic, (, method, ., getModifiers, (, ), ), ), {, return, method, ., invoke, (, object, ,]
[method, ., getModifiers, (, ), ), ), {, return, method, ., invoke, (, object, ,, (, Object, [, ], )]
[invoke, (, object, ,, (, Object, [, ], ), null, ), ;, }, }, catch, (, NoSuchMethodException, e, ), {]
[invoke, (, object, ,, (, Object, [, ], ), null, ), ;, }, }, catch, (, NoSuchMethodException, e, ), {]
[}, catch, (, NoSuchMethodException, e, ), {, e, ., printStackTrace, (, ), ;, }, catch, (, IllegalAccessException, e, ), {]
[}, catch, (, NoSuchMethodException, e, ), {, e, ., printStackTrace, (, ), ;, }, catch, (, IllegalAccessException, e, ), {]
[}, catch, (, IllegalAccessException, e, ), {, e, ., printStackTrace, (, ), ;, }, catch, (, InvocationTargetException, e, ), {]
[}, catch, (, IllegalAccessException, e, ), {, e, ., printStackTrace, (, ), ;, }, catch, (, InvocationTargetException, e, ), {]
[printStackTrace, (, ), ;, }, catch, (, InvocationTargetException, e, ), {, e, ., printStackTrace, (, ), ;, }, }, throw]
[;, }, catch, (, InvocationTargetException, e, ), {, e, ., printStackTrace, (, ), ;, }, }, throw, new, CloneNotSupportedException, (]
[CloneNotSupportedException, (, "Failed to clone.", ), ;, }, public, static, Collection, deepClone, (, final, Collection, collection, ), throws, CloneNotSupportedException, {, if, (]
[CloneNotSupportedException, (, "Failed to clone.", ), ;, }, public, static, Collection, deepClone, (, final, Collection, collection, ), throws, CloneNotSupportedException, {, if, (]
["Failed to clone.", ), ;, }, public, static, Collection, deepClone, (, final, Collection, collection, ), throws, CloneNotSupportedException, {, if, (, collection, ==]
[public, static, Collection, deepClone, (, final, Collection, collection, ), throws, CloneNotSupportedException, {, if, (, collection, ==, null, ), {, throw]
[deepClone, (, final, Collection, collection, ), throws, CloneNotSupportedException, {, if, (, collection, ==, null, ), {, throw, new, IllegalArgumentException, (]
[{, if, (, collection, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'collection' argument.", ), ;, }, final, Collection, result, =]
[collection, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'collection' argument.", ), ;, }, final, Collection, result, =, (, Collection, )]
[collection, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'collection' argument.", ), ;, }, final, Collection, result, =, (, Collection, )]
[{, throw, new, IllegalArgumentException, (, "Null 'collection' argument.", ), ;, }, final, Collection, result, =, (, Collection, ), ObjectUtilities, ., clone, (]
[IllegalArgumentException, (, "Null 'collection' argument.", ), ;, }, final, Collection, result, =, (, Collection, ), ObjectUtilities, ., clone, (, collection, ), ;]
[IllegalArgumentException, (, "Null 'collection' argument.", ), ;, }, final, Collection, result, =, (, Collection, ), ObjectUtilities, ., clone, (, collection, ), ;]
[(, Collection, ), ObjectUtilities, ., clone, (, collection, ), ;, result, ., clear, (, ), ;, final, Iterator, iterator, =]
[(, Collection, ), ObjectUtilities, ., clone, (, collection, ), ;, result, ., clear, (, ), ;, final, Iterator, iterator, =]
[), ;, result, ., clear, (, ), ;, final, Iterator, iterator, =, collection, ., iterator, (, ), ;, while, (]
[), ;, result, ., clear, (, ), ;, final, Iterator, iterator, =, collection, ., iterator, (, ), ;, while, (]
[=, collection, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, final, Object, item, =]
[=, collection, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, final, Object, item, =]
[(, iterator, ., hasNext, (, ), ), {, final, Object, item, =, iterator, ., next, (, ), ;, if, (]
[(, iterator, ., hasNext, (, ), ), {, final, Object, item, =, iterator, ., next, (, ), ;, if, (]
[., hasNext, (, ), ), {, final, Object, item, =, iterator, ., next, (, ), ;, if, (, item, !=]
[), ), {, final, Object, item, =, iterator, ., next, (, ), ;, if, (, item, !=, null, ), {]
[), ), {, final, Object, item, =, iterator, ., next, (, ), ;, if, (, item, !=, null, ), {]
[Object, item, =, iterator, ., next, (, ), ;, if, (, item, !=, null, ), {, result, ., add, (]
[=, iterator, ., next, (, ), ;, if, (, item, !=, null, ), {, result, ., add, (, clone, (]
[if, (, item, !=, null, ), {, result, ., add, (, clone, (, item, ), ), ;, }, else, {]
[if, (, item, !=, null, ), {, result, ., add, (, clone, (, item, ), ), ;, }, else, {]
[null, ), {, result, ., add, (, clone, (, item, ), ), ;, }, else, {, result, ., add, (]
[(, clone, (, item, ), ), ;, }, else, {, result, ., add, (, null, ), ;, }, }, return]
[null, ), ;, }, }, return, result, ;, }, public, synchronized, static, void, setClassLoader, (, final, ClassLoader, classLoader, ), {]
[null, ), ;, }, }, return, result, ;, }, public, synchronized, static, void, setClassLoader, (, final, ClassLoader, classLoader, ), {]
[}, return, result, ;, }, public, synchronized, static, void, setClassLoader, (, final, ClassLoader, classLoader, ), {, ObjectUtilities, ., classLoader, =]
[final, ClassLoader, classLoader, ), {, ObjectUtilities, ., classLoader, =, classLoader, ;, }, public, static, ClassLoader, getClassLoader, (, ), {, return]
[(, ), {, return, classLoader, ;, }, public, synchronized, static, ClassLoader, getClassLoader, (, final, Class, c, ), {, if, (]
[(, ), {, return, classLoader, ;, }, public, synchronized, static, ClassLoader, getClassLoader, (, final, Class, c, ), {, if, (]
[{, return, classLoader, ;, }, public, synchronized, static, ClassLoader, getClassLoader, (, final, Class, c, ), {, if, (, classLoader, !=]
[}, public, synchronized, static, ClassLoader, getClassLoader, (, final, Class, c, ), {, if, (, classLoader, !=, null, ), {, return]
[getClassLoader, (, final, Class, c, ), {, if, (, classLoader, !=, null, ), {, return, classLoader, ;, }, if, (]
[getClassLoader, (, final, Class, c, ), {, if, (, classLoader, !=, null, ), {, return, classLoader, ;, }, if, (]
[c, ), {, if, (, classLoader, !=, null, ), {, return, classLoader, ;, }, if, (, "ThreadContext", ., equals, (]
[), {, return, classLoader, ;, }, if, (, "ThreadContext", ., equals, (, classLoaderSource, ), ), {, final, ClassLoader, threadLoader, =]
[), {, return, classLoader, ;, }, if, (, "ThreadContext", ., equals, (, classLoaderSource, ), ), {, final, ClassLoader, threadLoader, =]
[), {, return, classLoader, ;, }, if, (, "ThreadContext", ., equals, (, classLoaderSource, ), ), {, final, ClassLoader, threadLoader, =]
[classLoaderSource, ), ), {, final, ClassLoader, threadLoader, =, Thread, ., currentThread, (, ), ., getContextClassLoader, (, ), ;, if, (]
[classLoaderSource, ), ), {, final, ClassLoader, threadLoader, =, Thread, ., currentThread, (, ), ., getContextClassLoader, (, ), ;, if, (]
[), {, final, ClassLoader, threadLoader, =, Thread, ., currentThread, (, ), ., getContextClassLoader, (, ), ;, if, (, threadLoader, !=]
[threadLoader, =, Thread, ., currentThread, (, ), ., getContextClassLoader, (, ), ;, if, (, threadLoader, !=, null, ), {, return]
[getContextClassLoader, (, ), ;, if, (, threadLoader, !=, null, ), {, return, threadLoader, ;, }, }, final, ClassLoader, applicationCL, =]
[getContextClassLoader, (, ), ;, if, (, threadLoader, !=, null, ), {, return, threadLoader, ;, }, }, final, ClassLoader, applicationCL, =]
[null, ), {, return, threadLoader, ;, }, }, final, ClassLoader, applicationCL, =, c, ., getClassLoader, (, ), ;, if, (]
[null, ), {, return, threadLoader, ;, }, }, final, ClassLoader, applicationCL, =, c, ., getClassLoader, (, ), ;, if, (]
[{, return, threadLoader, ;, }, }, final, ClassLoader, applicationCL, =, c, ., getClassLoader, (, ), ;, if, (, applicationCL, ==]
[}, }, final, ClassLoader, applicationCL, =, c, ., getClassLoader, (, ), ;, if, (, applicationCL, ==, null, ), {, return]
[}, }, final, ClassLoader, applicationCL, =, c, ., getClassLoader, (, ), ;, if, (, applicationCL, ==, null, ), {, return]
[), ;, if, (, applicationCL, ==, null, ), {, return, ClassLoader, ., getSystemClassLoader, (, ), ;, }, else, {, return]
[}, }, public, static, URL, getResource, (, final, String, name, ,, final, Class, c, ), {, final, ClassLoader, cl, =]
[public, static, URL, getResource, (, final, String, name, ,, final, Class, c, ), {, final, ClassLoader, cl, =, getClassLoader, (]
[final, String, name, ,, final, Class, c, ), {, final, ClassLoader, cl, =, getClassLoader, (, c, ), ;, if, (]
[final, String, name, ,, final, Class, c, ), {, final, ClassLoader, cl, =, getClassLoader, (, c, ), ;, if, (]
[name, ,, final, Class, c, ), {, final, ClassLoader, cl, =, getClassLoader, (, c, ), ;, if, (, cl, ==]
[c, ), {, final, ClassLoader, cl, =, getClassLoader, (, c, ), ;, if, (, cl, ==, null, ), {, return]
[ClassLoader, cl, =, getClassLoader, (, c, ), ;, if, (, cl, ==, null, ), {, return, null, ;, }, return]
[ClassLoader, cl, =, getClassLoader, (, c, ), ;, if, (, cl, ==, null, ), {, return, null, ;, }, return]
[(, c, ), ;, if, (, cl, ==, null, ), {, return, null, ;, }, return, cl, ., getResource, (]
[;, }, public, static, URL, getResourceRelative, (, final, String, name, ,, final, Class, c, ), {, final, ClassLoader, cl, =]
[public, static, URL, getResourceRelative, (, final, String, name, ,, final, Class, c, ), {, final, ClassLoader, cl, =, getClassLoader, (]
[name, ,, final, Class, c, ), {, final, ClassLoader, cl, =, getClassLoader, (, c, ), ;, final, String, cname, =]
[final, Class, c, ), {, final, ClassLoader, cl, =, getClassLoader, (, c, ), ;, final, String, cname, =, convertName, (]
[c, ), {, final, ClassLoader, cl, =, getClassLoader, (, c, ), ;, final, String, cname, =, convertName, (, name, ,]
[cl, =, getClassLoader, (, c, ), ;, final, String, cname, =, convertName, (, name, ,, c, ), ;, if, (]
[cl, =, getClassLoader, (, c, ), ;, final, String, cname, =, convertName, (, name, ,, c, ), ;, if, (]
[getClassLoader, (, c, ), ;, final, String, cname, =, convertName, (, name, ,, c, ), ;, if, (, cl, ==]
[;, final, String, cname, =, convertName, (, name, ,, c, ), ;, if, (, cl, ==, null, ), {, return]
[=, convertName, (, name, ,, c, ), ;, if, (, cl, ==, null, ), {, return, null, ;, }, return]
[=, convertName, (, name, ,, c, ), ;, if, (, cl, ==, null, ), {, return, null, ;, }, return]
[,, c, ), ;, if, (, cl, ==, null, ), {, return, null, ;, }, return, cl, ., getResource, (]
[(, cname, ), ;, }, private, static, String, convertName, (, final, String, name, ,, Class, c, ), {, if, (]
[(, cname, ), ;, }, private, static, String, convertName, (, final, String, name, ,, Class, c, ), {, if, (]
[}, private, static, String, convertName, (, final, String, name, ,, Class, c, ), {, if, (, name, ., startsWith, (]
[(, final, String, name, ,, Class, c, ), {, if, (, name, ., startsWith, (, "/", ), ), {, return]
[(, final, String, name, ,, Class, c, ), {, if, (, name, ., startsWith, (, "/", ), ), {, return]
[,, Class, c, ), {, if, (, name, ., startsWith, (, "/", ), ), {, return, name, ., substring, (]
[(, name, ., startsWith, (, "/", ), ), {, return, name, ., substring, (, 1, ), ;, }, while, (]
[(, name, ., startsWith, (, "/", ), ), {, return, name, ., substring, (, 1, ), ;, }, while, (]
[), {, return, name, ., substring, (, 1, ), ;, }, while, (, c, ., isArray, (, ), ), {]
[return, name, ., substring, (, 1, ), ;, }, while, (, c, ., isArray, (, ), ), {, c, =]
[return, name, ., substring, (, 1, ), ;, }, while, (, c, ., isArray, (, ), ), {, c, =]
[c, ., isArray, (, ), ), {, c, =, c, ., getComponentType, (, ), ;, }, final, String, baseName, =]
[c, ., isArray, (, ), ), {, c, =, c, ., getComponentType, (, ), ;, }, final, String, baseName, =]
[., getComponentType, (, ), ;, }, final, String, baseName, =, c, ., getName, (, ), ;, final, int, index, =]
[., getComponentType, (, ), ;, }, final, String, baseName, =, c, ., getName, (, ), ;, final, int, index, =]
[;, }, final, String, baseName, =, c, ., getName, (, ), ;, final, int, index, =, baseName, ., lastIndexOf, (]
[=, c, ., getName, (, ), ;, final, int, index, =, baseName, ., lastIndexOf, (, '.', ), ;, if, (]
[=, c, ., getName, (, ), ;, final, int, index, =, baseName, ., lastIndexOf, (, '.', ), ;, if, (]
[., getName, (, ), ;, final, int, index, =, baseName, ., lastIndexOf, (, '.', ), ;, if, (, index, ==]
[getName, (, ), ;, final, int, index, =, baseName, ., lastIndexOf, (, '.', ), ;, if, (, index, ==, -]
[final, int, index, =, baseName, ., lastIndexOf, (, '.', ), ;, if, (, index, ==, -, 1, ), {, return]
[(, '.', ), ;, if, (, index, ==, -, 1, ), {, return, name, ;, }, final, String, pkgName, =]
[(, '.', ), ;, if, (, index, ==, -, 1, ), {, return, name, ;, }, final, String, pkgName, =]
[if, (, index, ==, -, 1, ), {, return, name, ;, }, final, String, pkgName, =, baseName, ., substring, (]
[index, ==, -, 1, ), {, return, name, ;, }, final, String, pkgName, =, baseName, ., substring, (, 0, ,]
[), {, return, name, ;, }, final, String, pkgName, =, baseName, ., substring, (, 0, ,, index, ), ;, return]
[), {, return, name, ;, }, final, String, pkgName, =, baseName, ., substring, (, 0, ,, index, ), ;, return]
[), {, return, name, ;, }, final, String, pkgName, =, baseName, ., substring, (, 0, ,, index, ), ;, return]
[), {, return, name, ;, }, final, String, pkgName, =, baseName, ., substring, (, 0, ,, index, ), ;, return]
[;, }, final, String, pkgName, =, baseName, ., substring, (, 0, ,, index, ), ;, return, pkgName, ., replace, (]
[final, String, pkgName, =, baseName, ., substring, (, 0, ,, index, ), ;, return, pkgName, ., replace, (, '.', ,]
[=, baseName, ., substring, (, 0, ,, index, ), ;, return, pkgName, ., replace, (, '.', ,, '/', ), +]
[., substring, (, 0, ,, index, ), ;, return, pkgName, ., replace, (, '.', ,, '/', ), +, "/", +]
[;, }, public, static, InputStream, getResourceAsStream, (, final, String, name, ,, final, Class, context, ), {, final, URL, url, =]
[public, static, InputStream, getResourceAsStream, (, final, String, name, ,, final, Class, context, ), {, final, URL, url, =, getResource, (]
[InputStream, getResourceAsStream, (, final, String, name, ,, final, Class, context, ), {, final, URL, url, =, getResource, (, name, ,]
[name, ,, final, Class, context, ), {, final, URL, url, =, getResource, (, name, ,, context, ), ;, if, (]
[name, ,, final, Class, context, ), {, final, URL, url, =, getResource, (, name, ,, context, ), ;, if, (]
[final, Class, context, ), {, final, URL, url, =, getResource, (, name, ,, context, ), ;, if, (, url, ==]
[{, final, URL, url, =, getResource, (, name, ,, context, ), ;, if, (, url, ==, null, ), {, return]
[(, name, ,, context, ), ;, if, (, url, ==, null, ), {, return, null, ;, }, try, {, return]
[(, name, ,, context, ), ;, if, (, url, ==, null, ), {, return, null, ;, }, try, {, return]
[null, ;, }, try, {, return, url, ., openStream, (, ), ;, }, catch, (, IOException, e, ), {, return]
[}, }, public, static, InputStream, getResourceRelativeAsStream, (, final, String, name, ,, final, Class, context, ), {, final, URL, url, =]
[public, static, InputStream, getResourceRelativeAsStream, (, final, String, name, ,, final, Class, context, ), {, final, URL, url, =, getResourceRelative, (]
[InputStream, getResourceRelativeAsStream, (, final, String, name, ,, final, Class, context, ), {, final, URL, url, =, getResourceRelative, (, name, ,]
[name, ,, final, Class, context, ), {, final, URL, url, =, getResourceRelative, (, name, ,, context, ), ;, if, (]
[name, ,, final, Class, context, ), {, final, URL, url, =, getResourceRelative, (, name, ,, context, ), ;, if, (]
[final, Class, context, ), {, final, URL, url, =, getResourceRelative, (, name, ,, context, ), ;, if, (, url, ==]
[{, final, URL, url, =, getResourceRelative, (, name, ,, context, ), ;, if, (, url, ==, null, ), {, return]
[(, name, ,, context, ), ;, if, (, url, ==, null, ), {, return, null, ;, }, try, {, return]
[(, name, ,, context, ), ;, if, (, url, ==, null, ), {, return, null, ;, }, try, {, return]
[null, ;, }, try, {, return, url, ., openStream, (, ), ;, }, catch, (, IOException, e, ), {, return]
[public, static, Object, loadAndInstantiate, (, final, String, className, ,, final, Class, source, ), {, try, {, final, ClassLoader, loader, =]
[Object, loadAndInstantiate, (, final, String, className, ,, final, Class, source, ), {, try, {, final, ClassLoader, loader, =, getClassLoader, (]
[final, Class, source, ), {, try, {, final, ClassLoader, loader, =, getClassLoader, (, source, ), ;, final, Class, c, =]
[final, Class, source, ), {, try, {, final, ClassLoader, loader, =, getClassLoader, (, source, ), ;, final, Class, c, =]
[{, try, {, final, ClassLoader, loader, =, getClassLoader, (, source, ), ;, final, Class, c, =, loader, ., loadClass, (]
[ClassLoader, loader, =, getClassLoader, (, source, ), ;, final, Class, c, =, loader, ., loadClass, (, className, ), ;, return]
[ClassLoader, loader, =, getClassLoader, (, source, ), ;, final, Class, c, =, loader, ., loadClass, (, className, ), ;, return]
[loadClass, (, className, ), ;, return, c, ., newInstance, (, ), ;, }, catch, (, Exception, e, ), {, return]
[public, static, Object, loadAndInstantiate, (, String, className, ,, Class, source, ,, Class, type, ), {, try, {, ClassLoader, loader, =]
[Object, loadAndInstantiate, (, String, className, ,, Class, source, ,, Class, type, ), {, try, {, ClassLoader, loader, =, getClassLoader, (]
[Class, source, ,, Class, type, ), {, try, {, ClassLoader, loader, =, getClassLoader, (, source, ), ;, Class, c, =]
[Class, source, ,, Class, type, ), {, try, {, ClassLoader, loader, =, getClassLoader, (, source, ), ;, Class, c, =]
[type, ), {, try, {, ClassLoader, loader, =, getClassLoader, (, source, ), ;, Class, c, =, loader, ., loadClass, (]
[ClassLoader, loader, =, getClassLoader, (, source, ), ;, Class, c, =, loader, ., loadClass, (, className, ), ;, if, (]
[ClassLoader, loader, =, getClassLoader, (, source, ), ;, Class, c, =, loader, ., loadClass, (, className, ), ;, if, (]
[(, source, ), ;, Class, c, =, loader, ., loadClass, (, className, ), ;, if, (, type, ., isAssignableFrom, (]
[c, =, loader, ., loadClass, (, className, ), ;, if, (, type, ., isAssignableFrom, (, c, ), ), {, return]
[c, =, loader, ., loadClass, (, className, ), ;, if, (, type, ., isAssignableFrom, (, c, ), ), {, return]
[c, ), ), {, return, c, ., newInstance, (, ), ;, }, }, catch, (, Exception, e, ), {, return]
[return, c, ., newInstance, (, ), ;, }, }, catch, (, Exception, e, ), {, return, null, ;, }, return]
[), {, return, null, ;, }, return, null, ;, }, public, static, boolean, isJDK14, (, ), {, ClassLoader, loader, =]
[return, null, ;, }, return, null, ;, }, public, static, boolean, isJDK14, (, ), {, ClassLoader, loader, =, getClassLoader, (]
[}, public, static, boolean, isJDK14, (, ), {, ClassLoader, loader, =, getClassLoader, (, ObjectUtilities, ., class, ), ;, if, (]
[}, public, static, boolean, isJDK14, (, ), {, ClassLoader, loader, =, getClassLoader, (, ObjectUtilities, ., class, ), ;, if, (]
[static, boolean, isJDK14, (, ), {, ClassLoader, loader, =, getClassLoader, (, ObjectUtilities, ., class, ), ;, if, (, loader, !=]
[{, ClassLoader, loader, =, getClassLoader, (, ObjectUtilities, ., class, ), ;, if, (, loader, !=, null, ), {, try, {]
[{, ClassLoader, loader, =, getClassLoader, (, ObjectUtilities, ., class, ), ;, if, (, loader, !=, null, ), {, try, {]
[getClassLoader, (, ObjectUtilities, ., class, ), ;, if, (, loader, !=, null, ), {, try, {, loader, ., loadClass, (]
[class, ), ;, if, (, loader, !=, null, ), {, try, {, loader, ., loadClass, (, "java.util.RandomAccess", ), ;, return]
[try, {, loader, ., loadClass, (, "java.util.RandomAccess", ), ;, return, true, ;, }, catch, (, ClassNotFoundException, e, ), {, return]
[e, ), {, return, false, ;, }, catch, (, Exception, e, ), {, }, }, try, {, String, version, =]
[e, ), {, return, false, ;, }, catch, (, Exception, e, ), {, }, }, try, {, String, version, =]
[false, ;, }, catch, (, Exception, e, ), {, }, }, try, {, String, version, =, System, ., getProperty, (]
[Exception, e, ), {, }, }, try, {, String, version, =, System, ., getProperty, (, "java.vm.specification.version", ), ;, if, (]
[Exception, e, ), {, }, }, try, {, String, version, =, System, ., getProperty, (, "java.vm.specification.version", ), ;, if, (]
[), {, }, }, try, {, String, version, =, System, ., getProperty, (, "java.vm.specification.version", ), ;, if, (, version, ==]
[try, {, String, version, =, System, ., getProperty, (, "java.vm.specification.version", ), ;, if, (, version, ==, null, ), {, return]
[(, "java.vm.specification.version", ), ;, if, (, version, ==, null, ), {, return, false, ;, }, String, [, ], versions, =]
[), ;, if, (, version, ==, null, ), {, return, false, ;, }, String, [, ], versions, =, parseVersions, (]
[{, return, false, ;, }, String, [, ], versions, =, parseVersions, (, version, ), ;, String, [, ], target, =]
[}, String, [, ], versions, =, parseVersions, (, version, ), ;, String, [, ], target, =, new, String, [, ]]
[String, [, ], versions, =, parseVersions, (, version, ), ;, String, [, ], target, =, new, String, [, ], {]
[], versions, =, parseVersions, (, version, ), ;, String, [, ], target, =, new, String, [, ], {, "1", ,]
[(, version, ), ;, String, [, ], target, =, new, String, [, ], {, "1", ,, "4", }, ;, return]
[version, ), ;, String, [, ], target, =, new, String, [, ], {, "1", ,, "4", }, ;, return, (]
[version, ), ;, String, [, ], target, =, new, String, [, ], {, "1", ,, "4", }, ;, return, (]
[version, ), ;, String, [, ], target, =, new, String, [, ], {, "1", ,, "4", }, ;, return, (]
[[, ], target, =, new, String, [, ], {, "1", ,, "4", }, ;, return, (, ArrayUtilities, ., compareVersionArrays, (]
[target, =, new, String, [, ], {, "1", ,, "4", }, ;, return, (, ArrayUtilities, ., compareVersionArrays, (, versions, ,]
[String, [, ], {, "1", ,, "4", }, ;, return, (, ArrayUtilities, ., compareVersionArrays, (, versions, ,, target, ), >=]
[ArrayUtilities, ., compareVersionArrays, (, versions, ,, target, ), >=, 0, ), ;, }, catch, (, Exception, e, ), {, return]
[), {, return, false, ;, }, }, private, static, String, [, ], parseVersions, (, String, version, ), {, if, (]
[), {, return, false, ;, }, }, private, static, String, [, ], parseVersions, (, String, version, ), {, if, (]
[return, false, ;, }, }, private, static, String, [, ], parseVersions, (, String, version, ), {, if, (, version, ==]
[}, private, static, String, [, ], parseVersions, (, String, version, ), {, if, (, version, ==, null, ), {, return]
[String, [, ], parseVersions, (, String, version, ), {, if, (, version, ==, null, ), {, return, new, String, []
[), {, if, (, version, ==, null, ), {, return, new, String, [, 0, ], ;, }, ArrayList, versions, =]
[{, return, new, String, [, 0, ], ;, }, ArrayList, versions, =, new, ArrayList, (, ), ;, StringTokenizer, strtok, =]
[String, [, 0, ], ;, }, ArrayList, versions, =, new, ArrayList, (, ), ;, StringTokenizer, strtok, =, new, StringTokenizer, (]
[0, ], ;, }, ArrayList, versions, =, new, ArrayList, (, ), ;, StringTokenizer, strtok, =, new, StringTokenizer, (, version, ,]
[versions, =, new, ArrayList, (, ), ;, StringTokenizer, strtok, =, new, StringTokenizer, (, version, ,, ".", ), ;, while, (]
[versions, =, new, ArrayList, (, ), ;, StringTokenizer, strtok, =, new, StringTokenizer, (, version, ,, ".", ), ;, while, (]
[StringTokenizer, strtok, =, new, StringTokenizer, (, version, ,, ".", ), ;, while, (, strtok, ., hasMoreTokens, (, ), ), {]
[StringTokenizer, strtok, =, new, StringTokenizer, (, version, ,, ".", ), ;, while, (, strtok, ., hasMoreTokens, (, ), ), {]
[StringTokenizer, (, version, ,, ".", ), ;, while, (, strtok, ., hasMoreTokens, (, ), ), {, versions, ., add, (]
[StringTokenizer, (, version, ,, ".", ), ;, while, (, strtok, ., hasMoreTokens, (, ), ), {, versions, ., add, (]
[strtok, ., hasMoreTokens, (, ), ), {, versions, ., add, (, strtok, ., nextToken, (, ), ), ;, }, return]
[), {, versions, ., add, (, strtok, ., nextToken, (, ), ), ;, }, return, (, String, [, ], )]
[), {, versions, ., add, (, strtok, ., nextToken, (, ), ), ;, }, return, (, String, [, ], )]
[add, (, strtok, ., nextToken, (, ), ), ;, }, return, (, String, [, ], ), versions, ., toArray, (]
[., nextToken, (, ), ), ;, }, return, (, String, [, ], ), versions, ., toArray, (, new, String, []
[., nextToken, (, ), ), ;, }, return, (, String, [, ], ), versions, ., toArray, (, new, String, []
