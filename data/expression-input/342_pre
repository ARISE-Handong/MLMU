[., NotStrictlyPositiveException, ;, @, Deprecated, public, class, SimpleValueChecker, extends, AbstractConvergenceChecker, <, PointValuePair, >, {, private, static, final, int, ITERATION_CHECK_DISABLED, =]
[NotStrictlyPositiveException, ;, @, Deprecated, public, class, SimpleValueChecker, extends, AbstractConvergenceChecker, <, PointValuePair, >, {, private, static, final, int, ITERATION_CHECK_DISABLED, =, -]
[static, final, int, ITERATION_CHECK_DISABLED, =, -, 1, ;, private, final, int, maxIterationCount, ;, @, Deprecated, public, SimpleValueChecker, (, ), {]
[int, ITERATION_CHECK_DISABLED, =, -, 1, ;, private, final, int, maxIterationCount, ;, @, Deprecated, public, SimpleValueChecker, (, ), {, maxIterationCount, =]
[{, maxIterationCount, =, ITERATION_CHECK_DISABLED, ;, }, public, SimpleValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ), {, super, (]
[=, ITERATION_CHECK_DISABLED, ;, }, public, SimpleValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ), {, super, (, relativeThreshold, ,]
[}, public, SimpleValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;]
[SimpleValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;, maxIterationCount, =]
[;, }, public, SimpleValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ,, final, int, maxIter, ), {, super, (]
[public, SimpleValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ,, final, int, maxIter, ), {, super, (, relativeThreshold, ,]
[relativeThreshold, ,, final, double, absoluteThreshold, ,, final, int, maxIter, ), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;, if, (]
[relativeThreshold, ,, final, double, absoluteThreshold, ,, final, int, maxIter, ), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;, if, (]
[final, double, absoluteThreshold, ,, final, int, maxIter, ), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;, if, (, maxIter, <=]
[final, int, maxIter, ), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;, if, (, maxIter, <=, 0, ), {, throw]
[), {, super, (, relativeThreshold, ,, absoluteThreshold, ), ;, if, (, maxIter, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (]
[relativeThreshold, ,, absoluteThreshold, ), ;, if, (, maxIter, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, maxIter, ), ;, }]
[absoluteThreshold, ), ;, if, (, maxIter, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, maxIter, ), ;, }, maxIterationCount, =]
[Override, public, boolean, converged, (, final, int, iteration, ,, final, PointValuePair, previous, ,, final, PointValuePair, current, ), {, if, (]
[Override, public, boolean, converged, (, final, int, iteration, ,, final, PointValuePair, previous, ,, final, PointValuePair, current, ), {, if, (]
[Override, public, boolean, converged, (, final, int, iteration, ,, final, PointValuePair, previous, ,, final, PointValuePair, current, ), {, if, (]
[boolean, converged, (, final, int, iteration, ,, final, PointValuePair, previous, ,, final, PointValuePair, current, ), {, if, (, maxIterationCount, !=]
[(, final, int, iteration, ,, final, PointValuePair, previous, ,, final, PointValuePair, current, ), {, if, (, maxIterationCount, !=, ITERATION_CHECK_DISABLED, &&]
[(, final, int, iteration, ,, final, PointValuePair, previous, ,, final, PointValuePair, current, ), {, if, (, maxIterationCount, !=, ITERATION_CHECK_DISABLED, &&]
[int, iteration, ,, final, PointValuePair, previous, ,, final, PointValuePair, current, ), {, if, (, maxIterationCount, !=, ITERATION_CHECK_DISABLED, &&, iteration, >=]
[PointValuePair, previous, ,, final, PointValuePair, current, ), {, if, (, maxIterationCount, !=, ITERATION_CHECK_DISABLED, &&, iteration, >=, maxIterationCount, ), {, return]
[{, if, (, maxIterationCount, !=, ITERATION_CHECK_DISABLED, &&, iteration, >=, maxIterationCount, ), {, return, true, ;, }, final, double, p, =]
[{, if, (, maxIterationCount, !=, ITERATION_CHECK_DISABLED, &&, iteration, >=, maxIterationCount, ), {, return, true, ;, }, final, double, p, =]
[), {, return, true, ;, }, final, double, p, =, previous, ., getValue, (, ), ;, final, double, c, =]
[), {, return, true, ;, }, final, double, p, =, previous, ., getValue, (, ), ;, final, double, c, =]
[previous, ., getValue, (, ), ;, final, double, c, =, current, ., getValue, (, ), ;, final, double, difference, =]
[previous, ., getValue, (, ), ;, final, double, c, =, current, ., getValue, (, ), ;, final, double, difference, =]
[), ;, final, double, c, =, current, ., getValue, (, ), ;, final, double, difference, =, FastMath, ., abs, (]
[), ;, final, double, c, =, current, ., getValue, (, ), ;, final, double, difference, =, FastMath, ., abs, (]
[final, double, c, =, current, ., getValue, (, ), ;, final, double, difference, =, FastMath, ., abs, (, p, -]
[(, ), ;, final, double, difference, =, FastMath, ., abs, (, p, -, c, ), ;, final, double, size, =]
[(, ), ;, final, double, difference, =, FastMath, ., abs, (, p, -, c, ), ;, final, double, size, =]
[double, difference, =, FastMath, ., abs, (, p, -, c, ), ;, final, double, size, =, FastMath, ., max, (]
[double, difference, =, FastMath, ., abs, (, p, -, c, ), ;, final, double, size, =, FastMath, ., max, (]
[., abs, (, p, -, c, ), ;, final, double, size, =, FastMath, ., max, (, FastMath, ., abs, (]
[p, -, c, ), ;, final, double, size, =, FastMath, ., max, (, FastMath, ., abs, (, p, ), ,]
[p, -, c, ), ;, final, double, size, =, FastMath, ., max, (, FastMath, ., abs, (, p, ), ,]
[;, final, double, size, =, FastMath, ., max, (, FastMath, ., abs, (, p, ), ,, FastMath, ., abs, (]
[FastMath, ., max, (, FastMath, ., abs, (, p, ), ,, FastMath, ., abs, (, c, ), ), ;, return]
[FastMath, ., max, (, FastMath, ., abs, (, p, ), ,, FastMath, ., abs, (, c, ), ), ;, return]
[FastMath, ., max, (, FastMath, ., abs, (, p, ), ,, FastMath, ., abs, (, c, ), ), ;, return]
[max, (, FastMath, ., abs, (, p, ), ,, FastMath, ., abs, (, c, ), ), ;, return, difference, <=]
[max, (, FastMath, ., abs, (, p, ), ,, FastMath, ., abs, (, c, ), ), ;, return, difference, <=]
[FastMath, ., abs, (, p, ), ,, FastMath, ., abs, (, c, ), ), ;, return, difference, <=, size, *]
[p, ), ,, FastMath, ., abs, (, c, ), ), ;, return, difference, <=, size, *, getRelativeThreshold, (, ), ||]
[p, ), ,, FastMath, ., abs, (, c, ), ), ;, return, difference, <=, size, *, getRelativeThreshold, (, ), ||]
[,, FastMath, ., abs, (, c, ), ), ;, return, difference, <=, size, *, getRelativeThreshold, (, ), ||, difference, <=]
