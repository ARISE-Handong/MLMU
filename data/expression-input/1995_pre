[;, public, class, DialValueIndicator, extends, AbstractDialLayer, implements, DialLayer, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, static, final, long, serialVersionUID, =]
[;, private, RectangleInsets, insets, ;, private, RectangleAnchor, valueAnchor, ;, private, TextAnchor, textAnchor, ;, public, DialValueIndicator, (, ), {, this, (]
[textAnchor, ;, public, DialValueIndicator, (, ), {, this, (, 0, ), ;, }, public, DialValueIndicator, (, int, datasetIndex, ), {]
[textAnchor, ;, public, DialValueIndicator, (, ), {, this, (, 0, ), ;, }, public, DialValueIndicator, (, int, datasetIndex, ), {]
[(, ), {, this, (, 0, ), ;, }, public, DialValueIndicator, (, int, datasetIndex, ), {, this, ., datasetIndex, =]
[{, this, (, 0, ), ;, }, public, DialValueIndicator, (, int, datasetIndex, ), {, this, ., datasetIndex, =, datasetIndex, ;]
[{, this, (, 0, ), ;, }, public, DialValueIndicator, (, int, datasetIndex, ), {, this, ., datasetIndex, =, datasetIndex, ;]
[), ;, }, public, DialValueIndicator, (, int, datasetIndex, ), {, this, ., datasetIndex, =, datasetIndex, ;, this, ., angle, =]
[;, }, public, DialValueIndicator, (, int, datasetIndex, ), {, this, ., datasetIndex, =, datasetIndex, ;, this, ., angle, =, -]
[public, DialValueIndicator, (, int, datasetIndex, ), {, this, ., datasetIndex, =, datasetIndex, ;, this, ., angle, =, -, 90.0, ;]
[public, DialValueIndicator, (, int, datasetIndex, ), {, this, ., datasetIndex, =, datasetIndex, ;, this, ., angle, =, -, 90.0, ;]
[datasetIndex, ), {, this, ., datasetIndex, =, datasetIndex, ;, this, ., angle, =, -, 90.0, ;, this, ., radius, =]
[{, this, ., datasetIndex, =, datasetIndex, ;, this, ., angle, =, -, 90.0, ;, this, ., radius, =, 0.3, ;]
[{, this, ., datasetIndex, =, datasetIndex, ;, this, ., angle, =, -, 90.0, ;, this, ., radius, =, 0.3, ;]
[=, datasetIndex, ;, this, ., angle, =, -, 90.0, ;, this, ., radius, =, 0.3, ;, this, ., frameAnchor, =]
[=, datasetIndex, ;, this, ., angle, =, -, 90.0, ;, this, ., radius, =, 0.3, ;, this, ., frameAnchor, =]
[., angle, =, -, 90.0, ;, this, ., radius, =, 0.3, ;, this, ., frameAnchor, =, RectangleAnchor, ., CENTER, ;]
[., angle, =, -, 90.0, ;, this, ., radius, =, 0.3, ;, this, ., frameAnchor, =, RectangleAnchor, ., CENTER, ;]
[90.0, ;, this, ., radius, =, 0.3, ;, this, ., frameAnchor, =, RectangleAnchor, ., CENTER, ;, this, ., templateValue, =]
[., radius, =, 0.3, ;, this, ., frameAnchor, =, RectangleAnchor, ., CENTER, ;, this, ., templateValue, =, new, Double, (]
[0.3, ;, this, ., frameAnchor, =, RectangleAnchor, ., CENTER, ;, this, ., templateValue, =, new, Double, (, 100.0, ), ;]
[0.3, ;, this, ., frameAnchor, =, RectangleAnchor, ., CENTER, ;, this, ., templateValue, =, new, Double, (, 100.0, ), ;]
[frameAnchor, =, RectangleAnchor, ., CENTER, ;, this, ., templateValue, =, new, Double, (, 100.0, ), ;, this, ., maxTemplateValue, =]
[RectangleAnchor, ., CENTER, ;, this, ., templateValue, =, new, Double, (, 100.0, ), ;, this, ., maxTemplateValue, =, null, ;]
[RectangleAnchor, ., CENTER, ;, this, ., templateValue, =, new, Double, (, 100.0, ), ;, this, ., maxTemplateValue, =, null, ;]
[this, ., templateValue, =, new, Double, (, 100.0, ), ;, this, ., maxTemplateValue, =, null, ;, this, ., formatter, =]
[=, new, Double, (, 100.0, ), ;, this, ., maxTemplateValue, =, null, ;, this, ., formatter, =, new, DecimalFormat, (]
[(, 100.0, ), ;, this, ., maxTemplateValue, =, null, ;, this, ., formatter, =, new, DecimalFormat, (, "0.0", ), ;]
[(, 100.0, ), ;, this, ., maxTemplateValue, =, null, ;, this, ., formatter, =, new, DecimalFormat, (, "0.0", ), ;]
[this, ., maxTemplateValue, =, null, ;, this, ., formatter, =, new, DecimalFormat, (, "0.0", ), ;, this, ., font, =]
[=, null, ;, this, ., formatter, =, new, DecimalFormat, (, "0.0", ), ;, this, ., font, =, new, Font, (]
[;, this, ., formatter, =, new, DecimalFormat, (, "0.0", ), ;, this, ., font, =, new, Font, (, "Tahoma", ,]
[;, this, ., formatter, =, new, DecimalFormat, (, "0.0", ), ;, this, ., font, =, new, Font, (, "Tahoma", ,]
[=, new, DecimalFormat, (, "0.0", ), ;, this, ., font, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,]
[(, "0.0", ), ;, this, ., font, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 14, ), ;]
[(, "0.0", ), ;, this, ., font, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 14, ), ;]
[this, ., font, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 14, ), ;, this, ., paint, =]
[this, ., font, =, new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 14, ), ;, this, ., paint, =]
[new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 14, ), ;, this, ., paint, =, Color, ., black, ;]
[new, Font, (, "Tahoma", ,, Font, ., BOLD, ,, 14, ), ;, this, ., paint, =, Color, ., black, ;]
[,, Font, ., BOLD, ,, 14, ), ;, this, ., paint, =, Color, ., black, ;, this, ., backgroundPaint, =]
[,, Font, ., BOLD, ,, 14, ), ;, this, ., paint, =, Color, ., black, ;, this, ., backgroundPaint, =]
[,, 14, ), ;, this, ., paint, =, Color, ., black, ;, this, ., backgroundPaint, =, Color, ., white, ;]
[,, 14, ), ;, this, ., paint, =, Color, ., black, ;, this, ., backgroundPaint, =, Color, ., white, ;]
[this, ., paint, =, Color, ., black, ;, this, ., backgroundPaint, =, Color, ., white, ;, this, ., outlineStroke, =]
[=, Color, ., black, ;, this, ., backgroundPaint, =, Color, ., white, ;, this, ., outlineStroke, =, new, BasicStroke, (]
[black, ;, this, ., backgroundPaint, =, Color, ., white, ;, this, ., outlineStroke, =, new, BasicStroke, (, 1.0f, ), ;]
[black, ;, this, ., backgroundPaint, =, Color, ., white, ;, this, ., outlineStroke, =, new, BasicStroke, (, 1.0f, ), ;]
[backgroundPaint, =, Color, ., white, ;, this, ., outlineStroke, =, new, BasicStroke, (, 1.0f, ), ;, this, ., outlinePaint, =]
[backgroundPaint, =, Color, ., white, ;, this, ., outlineStroke, =, new, BasicStroke, (, 1.0f, ), ;, this, ., outlinePaint, =]
[white, ;, this, ., outlineStroke, =, new, BasicStroke, (, 1.0f, ), ;, this, ., outlinePaint, =, Color, ., blue, ;]
[white, ;, this, ., outlineStroke, =, new, BasicStroke, (, 1.0f, ), ;, this, ., outlinePaint, =, Color, ., blue, ;]
[outlineStroke, =, new, BasicStroke, (, 1.0f, ), ;, this, ., outlinePaint, =, Color, ., blue, ;, this, ., insets, =]
[BasicStroke, (, 1.0f, ), ;, this, ., outlinePaint, =, Color, ., blue, ;, this, ., insets, =, new, RectangleInsets, (]
[1.0f, ), ;, this, ., outlinePaint, =, Color, ., blue, ;, this, ., insets, =, new, RectangleInsets, (, 4, ,]
[;, this, ., outlinePaint, =, Color, ., blue, ;, this, ., insets, =, new, RectangleInsets, (, 4, ,, 4, ,]
[., outlinePaint, =, Color, ., blue, ;, this, ., insets, =, new, RectangleInsets, (, 4, ,, 4, ,, 4, ,]
[Color, ., blue, ;, this, ., insets, =, new, RectangleInsets, (, 4, ,, 4, ,, 4, ,, 4, ), ;]
[Color, ., blue, ;, this, ., insets, =, new, RectangleInsets, (, 4, ,, 4, ,, 4, ,, 4, ), ;]
[this, ., insets, =, new, RectangleInsets, (, 4, ,, 4, ,, 4, ,, 4, ), ;, this, ., valueAnchor, =]
[this, ., insets, =, new, RectangleInsets, (, 4, ,, 4, ,, 4, ,, 4, ), ;, this, ., valueAnchor, =]
[new, RectangleInsets, (, 4, ,, 4, ,, 4, ,, 4, ), ;, this, ., valueAnchor, =, RectangleAnchor, ., RIGHT, ;]
[new, RectangleInsets, (, 4, ,, 4, ,, 4, ,, 4, ), ;, this, ., valueAnchor, =, RectangleAnchor, ., RIGHT, ;]
[,, 4, ,, 4, ,, 4, ), ;, this, ., valueAnchor, =, RectangleAnchor, ., RIGHT, ;, this, ., textAnchor, =]
[,, 4, ,, 4, ,, 4, ), ;, this, ., valueAnchor, =, RectangleAnchor, ., RIGHT, ;, this, ., textAnchor, =]
[RectangleAnchor, ., RIGHT, ;, this, ., textAnchor, =, TextAnchor, ., CENTER_RIGHT, ;, }, public, int, getDatasetIndex, (, ), {, return]
[RectangleAnchor, ., RIGHT, ;, this, ., textAnchor, =, TextAnchor, ., CENTER_RIGHT, ;, }, public, int, getDatasetIndex, (, ), {, return]
[public, int, getDatasetIndex, (, ), {, return, this, ., datasetIndex, ;, }, public, void, setDatasetIndex, (, int, index, ), {]
[public, int, getDatasetIndex, (, ), {, return, this, ., datasetIndex, ;, }, public, void, setDatasetIndex, (, int, index, ), {]
[), {, return, this, ., datasetIndex, ;, }, public, void, setDatasetIndex, (, int, index, ), {, this, ., datasetIndex, =]
[return, this, ., datasetIndex, ;, }, public, void, setDatasetIndex, (, int, index, ), {, this, ., datasetIndex, =, index, ;]
[., datasetIndex, ;, }, public, void, setDatasetIndex, (, int, index, ), {, this, ., datasetIndex, =, index, ;, notifyListeners, (]
[}, public, void, setDatasetIndex, (, int, index, ), {, this, ., datasetIndex, =, index, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, index, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getAngle, (, ), {, return]
[=, index, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getAngle, (, ), {, return]
[public, double, getAngle, (, ), {, return, this, ., angle, ;, }, public, void, setAngle, (, double, angle, ), {]
[public, double, getAngle, (, ), {, return, this, ., angle, ;, }, public, void, setAngle, (, double, angle, ), {]
[), {, return, this, ., angle, ;, }, public, void, setAngle, (, double, angle, ), {, this, ., angle, =]
[return, this, ., angle, ;, }, public, void, setAngle, (, double, angle, ), {, this, ., angle, =, angle, ;]
[., angle, ;, }, public, void, setAngle, (, double, angle, ), {, this, ., angle, =, angle, ;, notifyListeners, (]
[}, public, void, setAngle, (, double, angle, ), {, this, ., angle, =, angle, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, angle, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getRadius, (, ), {, return]
[=, angle, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getRadius, (, ), {, return]
[public, double, getRadius, (, ), {, return, this, ., radius, ;, }, public, void, setRadius, (, double, radius, ), {]
[public, double, getRadius, (, ), {, return, this, ., radius, ;, }, public, void, setRadius, (, double, radius, ), {]
[), {, return, this, ., radius, ;, }, public, void, setRadius, (, double, radius, ), {, this, ., radius, =]
[return, this, ., radius, ;, }, public, void, setRadius, (, double, radius, ), {, this, ., radius, =, radius, ;]
[., radius, ;, }, public, void, setRadius, (, double, radius, ), {, this, ., radius, =, radius, ;, notifyListeners, (]
[}, public, void, setRadius, (, double, radius, ), {, this, ., radius, =, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, RectangleAnchor, getFrameAnchor, (, ), {, return]
[=, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, RectangleAnchor, getFrameAnchor, (, ), {, return]
[getFrameAnchor, (, ), {, return, this, ., frameAnchor, ;, }, public, void, setFrameAnchor, (, RectangleAnchor, anchor, ), {, if, (]
[getFrameAnchor, (, ), {, return, this, ., frameAnchor, ;, }, public, void, setFrameAnchor, (, RectangleAnchor, anchor, ), {, if, (]
[), {, return, this, ., frameAnchor, ;, }, public, void, setFrameAnchor, (, RectangleAnchor, anchor, ), {, if, (, anchor, ==]
[., frameAnchor, ;, }, public, void, setFrameAnchor, (, RectangleAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw]
[}, public, void, setFrameAnchor, (, RectangleAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, RectangleAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }]
[(, RectangleAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }]
[{, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., frameAnchor, =]
[(, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., frameAnchor, =, anchor, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., frameAnchor, =, anchor, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., frameAnchor, =, anchor, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, anchor, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Number, getTemplateValue, (, ), {, return]
[=, anchor, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Number, getTemplateValue, (, ), {, return]
[getTemplateValue, (, ), {, return, this, ., templateValue, ;, }, public, void, setTemplateValue, (, Number, value, ), {, if, (]
[getTemplateValue, (, ), {, return, this, ., templateValue, ;, }, public, void, setTemplateValue, (, Number, value, ), {, if, (]
[), {, return, this, ., templateValue, ;, }, public, void, setTemplateValue, (, Number, value, ), {, if, (, value, ==]
[., templateValue, ;, }, public, void, setTemplateValue, (, Number, value, ), {, if, (, value, ==, null, ), {, throw]
[}, public, void, setTemplateValue, (, Number, value, ), {, if, (, value, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Number, value, ), {, if, (, value, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'value' argument.", ), ;, }]
[(, Number, value, ), {, if, (, value, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'value' argument.", ), ;, }]
[{, if, (, value, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'value' argument.", ), ;, }, this, ., templateValue, =]
[(, value, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'value' argument.", ), ;, }, this, ., templateValue, =, value, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'value' argument.", ), ;, }, this, ., templateValue, =, value, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'value' argument.", ), ;, }, this, ., templateValue, =, value, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, value, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Number, getMaxTemplateValue, (, ), {, return]
[=, value, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Number, getMaxTemplateValue, (, ), {, return]
[public, Number, getMaxTemplateValue, (, ), {, return, this, ., maxTemplateValue, ;, }, public, void, setMaxTemplateValue, (, Number, value, ), {]
[public, Number, getMaxTemplateValue, (, ), {, return, this, ., maxTemplateValue, ;, }, public, void, setMaxTemplateValue, (, Number, value, ), {]
[), {, return, this, ., maxTemplateValue, ;, }, public, void, setMaxTemplateValue, (, Number, value, ), {, this, ., maxTemplateValue, =]
[return, this, ., maxTemplateValue, ;, }, public, void, setMaxTemplateValue, (, Number, value, ), {, this, ., maxTemplateValue, =, value, ;]
[., maxTemplateValue, ;, }, public, void, setMaxTemplateValue, (, Number, value, ), {, this, ., maxTemplateValue, =, value, ;, notifyListeners, (]
[}, public, void, setMaxTemplateValue, (, Number, value, ), {, this, ., maxTemplateValue, =, value, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, value, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, NumberFormat, getNumberFormat, (, ), {, return]
[=, value, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, NumberFormat, getNumberFormat, (, ), {, return]
[getNumberFormat, (, ), {, return, this, ., formatter, ;, }, public, void, setNumberFormat, (, NumberFormat, formatter, ), {, if, (]
[getNumberFormat, (, ), {, return, this, ., formatter, ;, }, public, void, setNumberFormat, (, NumberFormat, formatter, ), {, if, (]
[), {, return, this, ., formatter, ;, }, public, void, setNumberFormat, (, NumberFormat, formatter, ), {, if, (, formatter, ==]
[., formatter, ;, }, public, void, setNumberFormat, (, NumberFormat, formatter, ), {, if, (, formatter, ==, null, ), {, throw]
[}, public, void, setNumberFormat, (, NumberFormat, formatter, ), {, if, (, formatter, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, NumberFormat, formatter, ), {, if, (, formatter, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'formatter' argument.", ), ;, }]
[(, NumberFormat, formatter, ), {, if, (, formatter, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'formatter' argument.", ), ;, }]
[{, if, (, formatter, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'formatter' argument.", ), ;, }, this, ., formatter, =]
[(, formatter, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'formatter' argument.", ), ;, }, this, ., formatter, =, formatter, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'formatter' argument.", ), ;, }, this, ., formatter, =, formatter, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'formatter' argument.", ), ;, }, this, ., formatter, =, formatter, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, formatter, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Font, getFont, (, ), {, return]
[=, formatter, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Font, getFont, (, ), {, return]
[getFont, (, ), {, return, this, ., font, ;, }, public, void, setFont, (, Font, font, ), {, if, (]
[getFont, (, ), {, return, this, ., font, ;, }, public, void, setFont, (, Font, font, ), {, if, (]
[), {, return, this, ., font, ;, }, public, void, setFont, (, Font, font, ), {, if, (, font, ==]
[., font, ;, }, public, void, setFont, (, Font, font, ), {, if, (, font, ==, null, ), {, throw]
[}, public, void, setFont, (, Font, font, ), {, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Font, font, ), {, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }]
[(, Font, font, ), {, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }]
[{, if, (, font, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, this, ., font, =]
[(, font, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, this, ., font, =, font, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, this, ., font, =, font, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'font' argument.", ), ;, }, this, ., font, =, font, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, font, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getPaint, (, ), {, return]
[=, font, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getPaint, (, ), {, return]
[getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (]
[getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (]
[), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==]
[., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[}, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getBackgroundPaint, (, ), {, return]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getBackgroundPaint, (, ), {, return]
[getBackgroundPaint, (, ), {, return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {, if, (]
[getBackgroundPaint, (, ), {, return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {, if, (]
[), {, return, this, ., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {, if, (, paint, ==]
[., backgroundPaint, ;, }, public, void, setBackgroundPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[}, public, void, setBackgroundPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., backgroundPaint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., backgroundPaint, =, paint, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., backgroundPaint, =, paint, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., backgroundPaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Stroke, getOutlineStroke, (, ), {, return]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Stroke, getOutlineStroke, (, ), {, return]
[getOutlineStroke, (, ), {, return, this, ., outlineStroke, ;, }, public, void, setOutlineStroke, (, Stroke, stroke, ), {, if, (]
[getOutlineStroke, (, ), {, return, this, ., outlineStroke, ;, }, public, void, setOutlineStroke, (, Stroke, stroke, ), {, if, (]
[), {, return, this, ., outlineStroke, ;, }, public, void, setOutlineStroke, (, Stroke, stroke, ), {, if, (, stroke, ==]
[., outlineStroke, ;, }, public, void, setOutlineStroke, (, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw]
[}, public, void, setOutlineStroke, (, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }]
[(, Stroke, stroke, ), {, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }]
[{, if, (, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., outlineStroke, =]
[(, stroke, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., outlineStroke, =, stroke, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., outlineStroke, =, stroke, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'stroke' argument.", ), ;, }, this, ., outlineStroke, =, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getOutlinePaint, (, ), {, return]
[=, stroke, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getOutlinePaint, (, ), {, return]
[getOutlinePaint, (, ), {, return, this, ., outlinePaint, ;, }, public, void, setOutlinePaint, (, Paint, paint, ), {, if, (]
[getOutlinePaint, (, ), {, return, this, ., outlinePaint, ;, }, public, void, setOutlinePaint, (, Paint, paint, ), {, if, (]
[), {, return, this, ., outlinePaint, ;, }, public, void, setOutlinePaint, (, Paint, paint, ), {, if, (, paint, ==]
[., outlinePaint, ;, }, public, void, setOutlinePaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[}, public, void, setOutlinePaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., outlinePaint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., outlinePaint, =, paint, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., outlinePaint, =, paint, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., outlinePaint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, RectangleInsets, getInsets, (, ), {, return]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, RectangleInsets, getInsets, (, ), {, return]
[getInsets, (, ), {, return, this, ., insets, ;, }, public, void, setInsets, (, RectangleInsets, insets, ), {, if, (]
[getInsets, (, ), {, return, this, ., insets, ;, }, public, void, setInsets, (, RectangleInsets, insets, ), {, if, (]
[), {, return, this, ., insets, ;, }, public, void, setInsets, (, RectangleInsets, insets, ), {, if, (, insets, ==]
[., insets, ;, }, public, void, setInsets, (, RectangleInsets, insets, ), {, if, (, insets, ==, null, ), {, throw]
[}, public, void, setInsets, (, RectangleInsets, insets, ), {, if, (, insets, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, RectangleInsets, insets, ), {, if, (, insets, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }]
[(, RectangleInsets, insets, ), {, if, (, insets, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }]
[{, if, (, insets, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }, this, ., insets, =]
[(, insets, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }, this, ., insets, =, insets, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }, this, ., insets, =, insets, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'insets' argument.", ), ;, }, this, ., insets, =, insets, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, insets, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, RectangleAnchor, getValueAnchor, (, ), {, return]
[=, insets, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, RectangleAnchor, getValueAnchor, (, ), {, return]
[getValueAnchor, (, ), {, return, this, ., valueAnchor, ;, }, public, void, setValueAnchor, (, RectangleAnchor, anchor, ), {, if, (]
[getValueAnchor, (, ), {, return, this, ., valueAnchor, ;, }, public, void, setValueAnchor, (, RectangleAnchor, anchor, ), {, if, (]
[), {, return, this, ., valueAnchor, ;, }, public, void, setValueAnchor, (, RectangleAnchor, anchor, ), {, if, (, anchor, ==]
[., valueAnchor, ;, }, public, void, setValueAnchor, (, RectangleAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw]
[}, public, void, setValueAnchor, (, RectangleAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, RectangleAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }]
[(, RectangleAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }]
[{, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., valueAnchor, =]
[(, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., valueAnchor, =, anchor, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., valueAnchor, =, anchor, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., valueAnchor, =, anchor, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, anchor, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, TextAnchor, getTextAnchor, (, ), {, return]
[=, anchor, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, TextAnchor, getTextAnchor, (, ), {, return]
[getTextAnchor, (, ), {, return, this, ., textAnchor, ;, }, public, void, setTextAnchor, (, TextAnchor, anchor, ), {, if, (]
[getTextAnchor, (, ), {, return, this, ., textAnchor, ;, }, public, void, setTextAnchor, (, TextAnchor, anchor, ), {, if, (]
[), {, return, this, ., textAnchor, ;, }, public, void, setTextAnchor, (, TextAnchor, anchor, ), {, if, (, anchor, ==]
[., textAnchor, ;, }, public, void, setTextAnchor, (, TextAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw]
[}, public, void, setTextAnchor, (, TextAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, TextAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }]
[(, TextAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }]
[{, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., textAnchor, =]
[(, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., textAnchor, =, anchor, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., textAnchor, =, anchor, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, this, ., textAnchor, =, anchor, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, anchor, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, isClippedToWindow, (, ), {, return]
[public, void, draw, (, Graphics2D, g2, ,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =]
[public, void, draw, (, Graphics2D, g2, ,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =]
[Graphics2D, g2, ,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =, DialPlot, ., rectangleByRadius, (]
[,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =, DialPlot, ., rectangleByRadius, (, frame, ,]
[,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =, DialPlot, ., rectangleByRadius, (, frame, ,]
[Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., radius, ,]
[Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D, f, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., radius, ,]
[f, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., radius, ,, this, ., radius, ), ;, Arc2D, arc, =]
[(, frame, ,, this, ., radius, ,, this, ., radius, ), ;, Arc2D, arc, =, new, Arc2D, ., Double, (]
[,, this, ., radius, ,, this, ., radius, ), ;, Arc2D, arc, =, new, Arc2D, ., Double, (, f, ,]
[,, this, ., radius, ,, this, ., radius, ), ;, Arc2D, arc, =, new, Arc2D, ., Double, (, f, ,]
[,, this, ., radius, ), ;, Arc2D, arc, =, new, Arc2D, ., Double, (, f, ,, this, ., angle, ,]
[., radius, ), ;, Arc2D, arc, =, new, Arc2D, ., Double, (, f, ,, this, ., angle, ,, 0.0, ,]
[., radius, ), ;, Arc2D, arc, =, new, Arc2D, ., Double, (, f, ,, this, ., angle, ,, 0.0, ,]
[Arc2D, ., Double, (, f, ,, this, ., angle, ,, 0.0, ,, Arc2D, ., OPEN, ), ;, Point2D, pt, =]
[Arc2D, ., Double, (, f, ,, this, ., angle, ,, 0.0, ,, Arc2D, ., OPEN, ), ;, Point2D, pt, =]
[,, 0.0, ,, Arc2D, ., OPEN, ), ;, Point2D, pt, =, arc, ., getStartPoint, (, ), ;, FontMetrics, fm, =]
[,, 0.0, ,, Arc2D, ., OPEN, ), ;, Point2D, pt, =, arc, ., getStartPoint, (, ), ;, FontMetrics, fm, =]
[., OPEN, ), ;, Point2D, pt, =, arc, ., getStartPoint, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (]
[., OPEN, ), ;, Point2D, pt, =, arc, ., getStartPoint, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (]
[., getStartPoint, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, this, ., font, ), ;, double, value, =]
[., getStartPoint, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, this, ., font, ), ;, double, value, =]
[;, FontMetrics, fm, =, g2, ., getFontMetrics, (, this, ., font, ), ;, double, value, =, plot, ., getValue, (]
[;, FontMetrics, fm, =, g2, ., getFontMetrics, (, this, ., font, ), ;, double, value, =, plot, ., getValue, (]
[this, ., font, ), ;, double, value, =, plot, ., getValue, (, this, ., datasetIndex, ), ;, String, valueStr, =]
[this, ., font, ), ;, double, value, =, plot, ., getValue, (, this, ., datasetIndex, ), ;, String, valueStr, =]
[this, ., font, ), ;, double, value, =, plot, ., getValue, (, this, ., datasetIndex, ), ;, String, valueStr, =]
[value, =, plot, ., getValue, (, this, ., datasetIndex, ), ;, String, valueStr, =, this, ., formatter, ., format, (]
[this, ., datasetIndex, ), ;, String, valueStr, =, this, ., formatter, ., format, (, value, ), ;, Rectangle2D, valueBounds, =]
[this, ., datasetIndex, ), ;, String, valueStr, =, this, ., formatter, ., format, (, value, ), ;, Rectangle2D, valueBounds, =]
[;, String, valueStr, =, this, ., formatter, ., format, (, value, ), ;, Rectangle2D, valueBounds, =, TextUtilities, ., getTextBounds, (]
[valueStr, =, this, ., formatter, ., format, (, value, ), ;, Rectangle2D, valueBounds, =, TextUtilities, ., getTextBounds, (, valueStr, ,]
[this, ., formatter, ., format, (, value, ), ;, Rectangle2D, valueBounds, =, TextUtilities, ., getTextBounds, (, valueStr, ,, g2, ,]
[value, ), ;, Rectangle2D, valueBounds, =, TextUtilities, ., getTextBounds, (, valueStr, ,, g2, ,, fm, ), ;, String, s, =]
[value, ), ;, Rectangle2D, valueBounds, =, TextUtilities, ., getTextBounds, (, valueStr, ,, g2, ,, fm, ), ;, String, s, =]
[value, ), ;, Rectangle2D, valueBounds, =, TextUtilities, ., getTextBounds, (, valueStr, ,, g2, ,, fm, ), ;, String, s, =]
[TextUtilities, ., getTextBounds, (, valueStr, ,, g2, ,, fm, ), ;, String, s, =, this, ., formatter, ., format, (]
[TextUtilities, ., getTextBounds, (, valueStr, ,, g2, ,, fm, ), ;, String, s, =, this, ., formatter, ., format, (]
[fm, ), ;, String, s, =, this, ., formatter, ., format, (, this, ., templateValue, ), ;, Rectangle2D, tb, =]
[fm, ), ;, String, s, =, this, ., formatter, ., format, (, this, ., templateValue, ), ;, Rectangle2D, tb, =]
[s, =, this, ., formatter, ., format, (, this, ., templateValue, ), ;, Rectangle2D, tb, =, TextUtilities, ., getTextBounds, (]
[this, ., formatter, ., format, (, this, ., templateValue, ), ;, Rectangle2D, tb, =, TextUtilities, ., getTextBounds, (, s, ,]
[formatter, ., format, (, this, ., templateValue, ), ;, Rectangle2D, tb, =, TextUtilities, ., getTextBounds, (, s, ,, g2, ,]
[templateValue, ), ;, Rectangle2D, tb, =, TextUtilities, ., getTextBounds, (, s, ,, g2, ,, fm, ), ;, double, minW, =]
[templateValue, ), ;, Rectangle2D, tb, =, TextUtilities, ., getTextBounds, (, s, ,, g2, ,, fm, ), ;, double, minW, =]
[(, s, ,, g2, ,, fm, ), ;, double, minW, =, tb, ., getWidth, (, ), ;, double, minH, =]
[(, s, ,, g2, ,, fm, ), ;, double, minW, =, tb, ., getWidth, (, ), ;, double, minH, =]
[minW, =, tb, ., getWidth, (, ), ;, double, minH, =, tb, ., getHeight, (, ), ;, double, maxW, =]
[minW, =, tb, ., getWidth, (, ), ;, double, minH, =, tb, ., getHeight, (, ), ;, double, maxW, =]
[;, double, minH, =, tb, ., getHeight, (, ), ;, double, maxW, =, Double, ., MAX_VALUE, ;, double, maxH, =]
[;, double, minH, =, tb, ., getHeight, (, ), ;, double, maxW, =, Double, ., MAX_VALUE, ;, double, maxH, =]
[getHeight, (, ), ;, double, maxW, =, Double, ., MAX_VALUE, ;, double, maxH, =, Double, ., MAX_VALUE, ;, if, (]
[getHeight, (, ), ;, double, maxW, =, Double, ., MAX_VALUE, ;, double, maxH, =, Double, ., MAX_VALUE, ;, if, (]
[getHeight, (, ), ;, double, maxW, =, Double, ., MAX_VALUE, ;, double, maxH, =, Double, ., MAX_VALUE, ;, if, (]
[double, maxW, =, Double, ., MAX_VALUE, ;, double, maxH, =, Double, ., MAX_VALUE, ;, if, (, this, ., maxTemplateValue, !=]
[Double, ., MAX_VALUE, ;, double, maxH, =, Double, ., MAX_VALUE, ;, if, (, this, ., maxTemplateValue, !=, null, ), {]
[MAX_VALUE, ;, double, maxH, =, Double, ., MAX_VALUE, ;, if, (, this, ., maxTemplateValue, !=, null, ), {, s, =]
[MAX_VALUE, ;, double, maxH, =, Double, ., MAX_VALUE, ;, if, (, this, ., maxTemplateValue, !=, null, ), {, s, =]
[MAX_VALUE, ;, double, maxH, =, Double, ., MAX_VALUE, ;, if, (, this, ., maxTemplateValue, !=, null, ), {, s, =]
[., MAX_VALUE, ;, if, (, this, ., maxTemplateValue, !=, null, ), {, s, =, this, ., formatter, ., format, (]
[., MAX_VALUE, ;, if, (, this, ., maxTemplateValue, !=, null, ), {, s, =, this, ., formatter, ., format, (]
[this, ., maxTemplateValue, !=, null, ), {, s, =, this, ., formatter, ., format, (, this, ., maxTemplateValue, ), ;]
[maxTemplateValue, !=, null, ), {, s, =, this, ., formatter, ., format, (, this, ., maxTemplateValue, ), ;, tb, =]
[maxTemplateValue, !=, null, ), {, s, =, this, ., formatter, ., format, (, this, ., maxTemplateValue, ), ;, tb, =]
[{, s, =, this, ., formatter, ., format, (, this, ., maxTemplateValue, ), ;, tb, =, TextUtilities, ., getTextBounds, (]
[=, this, ., formatter, ., format, (, this, ., maxTemplateValue, ), ;, tb, =, TextUtilities, ., getTextBounds, (, s, ,]
[., formatter, ., format, (, this, ., maxTemplateValue, ), ;, tb, =, TextUtilities, ., getTextBounds, (, s, ,, g2, ,]
[format, (, this, ., maxTemplateValue, ), ;, tb, =, TextUtilities, ., getTextBounds, (, s, ,, g2, ,, fm, ), ;]
[this, ., maxTemplateValue, ), ;, tb, =, TextUtilities, ., getTextBounds, (, s, ,, g2, ,, fm, ), ;, maxW, =]
[this, ., maxTemplateValue, ), ;, tb, =, TextUtilities, ., getTextBounds, (, s, ,, g2, ,, fm, ), ;, maxW, =]
[;, tb, =, TextUtilities, ., getTextBounds, (, s, ,, g2, ,, fm, ), ;, maxW, =, Math, ., max, (]
[;, tb, =, TextUtilities, ., getTextBounds, (, s, ,, g2, ,, fm, ), ;, maxW, =, Math, ., max, (]
[(, s, ,, g2, ,, fm, ), ;, maxW, =, Math, ., max, (, tb, ., getWidth, (, ), ,]
[g2, ,, fm, ), ;, maxW, =, Math, ., max, (, tb, ., getWidth, (, ), ,, minW, ), ;]
[fm, ), ;, maxW, =, Math, ., max, (, tb, ., getWidth, (, ), ,, minW, ), ;, maxH, =]
[fm, ), ;, maxW, =, Math, ., max, (, tb, ., getWidth, (, ), ,, minW, ), ;, maxH, =]
[=, Math, ., max, (, tb, ., getWidth, (, ), ,, minW, ), ;, maxH, =, Math, ., max, (]
[=, Math, ., max, (, tb, ., getWidth, (, ), ,, minW, ), ;, maxH, =, Math, ., max, (]
[., getWidth, (, ), ,, minW, ), ;, maxH, =, Math, ., max, (, tb, ., getHeight, (, ), ,]
[;, maxH, =, Math, ., max, (, tb, ., getHeight, (, ), ,, minH, ), ;, }, double, w, =]
[=, Math, ., max, (, tb, ., getHeight, (, ), ,, minH, ), ;, }, double, w, =, fixToRange, (]
[=, Math, ., max, (, tb, ., getHeight, (, ), ,, minH, ), ;, }, double, w, =, fixToRange, (]
[., getHeight, (, ), ,, minH, ), ;, }, double, w, =, fixToRange, (, valueBounds, ., getWidth, (, ), ,]
[(, ), ,, minH, ), ;, }, double, w, =, fixToRange, (, valueBounds, ., getWidth, (, ), ,, minW, ,]
[}, double, w, =, fixToRange, (, valueBounds, ., getWidth, (, ), ,, minW, ,, maxW, ), ;, double, h, =]
[w, =, fixToRange, (, valueBounds, ., getWidth, (, ), ,, minW, ,, maxW, ), ;, double, h, =, fixToRange, (]
[w, =, fixToRange, (, valueBounds, ., getWidth, (, ), ,, minW, ,, maxW, ), ;, double, h, =, fixToRange, (]
[getWidth, (, ), ,, minW, ,, maxW, ), ;, double, h, =, fixToRange, (, valueBounds, ., getHeight, (, ), ,]
[), ,, minW, ,, maxW, ), ;, double, h, =, fixToRange, (, valueBounds, ., getHeight, (, ), ,, minH, ,]
[;, double, h, =, fixToRange, (, valueBounds, ., getHeight, (, ), ,, minH, ,, maxH, ), ;, Rectangle2D, bounds, =]
[;, double, h, =, fixToRange, (, valueBounds, ., getHeight, (, ), ,, minH, ,, maxH, ), ;, Rectangle2D, bounds, =]
[fixToRange, (, valueBounds, ., getHeight, (, ), ,, minH, ,, maxH, ), ;, Rectangle2D, bounds, =, RectangleAnchor, ., createRectangle, (]
[., getHeight, (, ), ,, minH, ,, maxH, ), ;, Rectangle2D, bounds, =, RectangleAnchor, ., createRectangle, (, new, Size2D, (]
[(, ), ,, minH, ,, maxH, ), ;, Rectangle2D, bounds, =, RectangleAnchor, ., createRectangle, (, new, Size2D, (, w, ,]
[minH, ,, maxH, ), ;, Rectangle2D, bounds, =, RectangleAnchor, ., createRectangle, (, new, Size2D, (, w, ,, h, ), ,]
[minH, ,, maxH, ), ;, Rectangle2D, bounds, =, RectangleAnchor, ., createRectangle, (, new, Size2D, (, w, ,, h, ), ,]
[bounds, =, RectangleAnchor, ., createRectangle, (, new, Size2D, (, w, ,, h, ), ,, pt, ., getX, (, ), ,]
[bounds, =, RectangleAnchor, ., createRectangle, (, new, Size2D, (, w, ,, h, ), ,, pt, ., getX, (, ), ,]
[new, Size2D, (, w, ,, h, ), ,, pt, ., getX, (, ), ,, pt, ., getY, (, ), ,]
[new, Size2D, (, w, ,, h, ), ,, pt, ., getX, (, ), ,, pt, ., getY, (, ), ,]
[pt, ., getX, (, ), ,, pt, ., getY, (, ), ,, this, ., frameAnchor, ), ;, Rectangle2D, fb, =]
[pt, ., getX, (, ), ,, pt, ., getY, (, ), ,, this, ., frameAnchor, ), ;, Rectangle2D, fb, =]
[pt, ., getX, (, ), ,, pt, ., getY, (, ), ,, this, ., frameAnchor, ), ;, Rectangle2D, fb, =]
[pt, ., getY, (, ), ,, this, ., frameAnchor, ), ;, Rectangle2D, fb, =, this, ., insets, ., createOutsetRectangle, (]
[(, ), ,, this, ., frameAnchor, ), ;, Rectangle2D, fb, =, this, ., insets, ., createOutsetRectangle, (, bounds, ), ;]
[(, ), ,, this, ., frameAnchor, ), ;, Rectangle2D, fb, =, this, ., insets, ., createOutsetRectangle, (, bounds, ), ;]
[., frameAnchor, ), ;, Rectangle2D, fb, =, this, ., insets, ., createOutsetRectangle, (, bounds, ), ;, g2, ., setPaint, (]
[., frameAnchor, ), ;, Rectangle2D, fb, =, this, ., insets, ., createOutsetRectangle, (, bounds, ), ;, g2, ., setPaint, (]
[fb, =, this, ., insets, ., createOutsetRectangle, (, bounds, ), ;, g2, ., setPaint, (, this, ., backgroundPaint, ), ;]
[fb, =, this, ., insets, ., createOutsetRectangle, (, bounds, ), ;, g2, ., setPaint, (, this, ., backgroundPaint, ), ;]
[insets, ., createOutsetRectangle, (, bounds, ), ;, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (]
[(, bounds, ), ;, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, fb, ), ;]
[(, bounds, ), ;, g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, fb, ), ;]
[g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, fb, ), ;, g2, ., setStroke, (]
[g2, ., setPaint, (, this, ., backgroundPaint, ), ;, g2, ., fill, (, fb, ), ;, g2, ., setStroke, (]
[., backgroundPaint, ), ;, g2, ., fill, (, fb, ), ;, g2, ., setStroke, (, this, ., outlineStroke, ), ;]
[., backgroundPaint, ), ;, g2, ., fill, (, fb, ), ;, g2, ., setStroke, (, this, ., outlineStroke, ), ;]
[g2, ., fill, (, fb, ), ;, g2, ., setStroke, (, this, ., outlineStroke, ), ;, g2, ., setPaint, (]
[g2, ., fill, (, fb, ), ;, g2, ., setStroke, (, this, ., outlineStroke, ), ;, g2, ., setPaint, (]
[), ;, g2, ., setStroke, (, this, ., outlineStroke, ), ;, g2, ., setPaint, (, this, ., outlinePaint, ), ;]
[), ;, g2, ., setStroke, (, this, ., outlineStroke, ), ;, g2, ., setPaint, (, this, ., outlinePaint, ), ;]
[setStroke, (, this, ., outlineStroke, ), ;, g2, ., setPaint, (, this, ., outlinePaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, this, ., outlinePaint, ), ;, g2, ., draw, (, fb, ), ;, Shape, savedClip, =]
[;, g2, ., setPaint, (, this, ., outlinePaint, ), ;, g2, ., draw, (, fb, ), ;, Shape, savedClip, =]
[., outlinePaint, ), ;, g2, ., draw, (, fb, ), ;, Shape, savedClip, =, g2, ., getClip, (, ), ;]
[., outlinePaint, ), ;, g2, ., draw, (, fb, ), ;, Shape, savedClip, =, g2, ., getClip, (, ), ;]
[g2, ., draw, (, fb, ), ;, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (]
[;, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (, fb, ), ;, Point2D, pt2, =]
[;, Shape, savedClip, =, g2, ., getClip, (, ), ;, g2, ., clip, (, fb, ), ;, Point2D, pt2, =]
[g2, ., getClip, (, ), ;, g2, ., clip, (, fb, ), ;, Point2D, pt2, =, RectangleAnchor, ., coordinates, (]
[getClip, (, ), ;, g2, ., clip, (, fb, ), ;, Point2D, pt2, =, RectangleAnchor, ., coordinates, (, bounds, ,]
[getClip, (, ), ;, g2, ., clip, (, fb, ), ;, Point2D, pt2, =, RectangleAnchor, ., coordinates, (, bounds, ,]
[., clip, (, fb, ), ;, Point2D, pt2, =, RectangleAnchor, ., coordinates, (, bounds, ,, this, ., valueAnchor, ), ;]
[., clip, (, fb, ), ;, Point2D, pt2, =, RectangleAnchor, ., coordinates, (, bounds, ,, this, ., valueAnchor, ), ;]
[), ;, Point2D, pt2, =, RectangleAnchor, ., coordinates, (, bounds, ,, this, ., valueAnchor, ), ;, g2, ., setPaint, (]
[), ;, Point2D, pt2, =, RectangleAnchor, ., coordinates, (, bounds, ,, this, ., valueAnchor, ), ;, g2, ., setPaint, (]
[RectangleAnchor, ., coordinates, (, bounds, ,, this, ., valueAnchor, ), ;, g2, ., setPaint, (, this, ., paint, ), ;]
[RectangleAnchor, ., coordinates, (, bounds, ,, this, ., valueAnchor, ), ;, g2, ., setPaint, (, this, ., paint, ), ;]
[bounds, ,, this, ., valueAnchor, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setFont, (]
[bounds, ,, this, ., valueAnchor, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setFont, (]
[), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setFont, (, this, ., font, ), ;]
[), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setFont, (, this, ., font, ), ;]
[setPaint, (, this, ., paint, ), ;, g2, ., setFont, (, this, ., font, ), ;, TextUtilities, ., drawAlignedString, (]
[this, ., paint, ), ;, g2, ., setFont, (, this, ., font, ), ;, TextUtilities, ., drawAlignedString, (, valueStr, ,]
[paint, ), ;, g2, ., setFont, (, this, ., font, ), ;, TextUtilities, ., drawAlignedString, (, valueStr, ,, g2, ,]
[g2, ., setFont, (, this, ., font, ), ;, TextUtilities, ., drawAlignedString, (, valueStr, ,, g2, ,, (, float, )]
[g2, ., setFont, (, this, ., font, ), ;, TextUtilities, ., drawAlignedString, (, valueStr, ,, g2, ,, (, float, )]
[font, ), ;, TextUtilities, ., drawAlignedString, (, valueStr, ,, g2, ,, (, float, ), pt2, ., getX, (, ), ,]
[TextUtilities, ., drawAlignedString, (, valueStr, ,, g2, ,, (, float, ), pt2, ., getX, (, ), ,, (, float, )]
[TextUtilities, ., drawAlignedString, (, valueStr, ,, g2, ,, (, float, ), pt2, ., getX, (, ), ,, (, float, )]
[g2, ,, (, float, ), pt2, ., getX, (, ), ,, (, float, ), pt2, ., getY, (, ), ,]
[g2, ,, (, float, ), pt2, ., getX, (, ), ,, (, float, ), pt2, ., getY, (, ), ,]
[pt2, ., getX, (, ), ,, (, float, ), pt2, ., getY, (, ), ,, this, ., textAnchor, ), ;]
[pt2, ., getX, (, ), ,, (, float, ), pt2, ., getY, (, ), ,, this, ., textAnchor, ), ;]
[), ,, (, float, ), pt2, ., getY, (, ), ,, this, ., textAnchor, ), ;, g2, ., setClip, (]
[savedClip, ), ;, }, private, double, fixToRange, (, double, x, ,, double, minX, ,, double, maxX, ), {, if, (]
[savedClip, ), ;, }, private, double, fixToRange, (, double, x, ,, double, minX, ,, double, maxX, ), {, if, (]
[;, }, private, double, fixToRange, (, double, x, ,, double, minX, ,, double, maxX, ), {, if, (, minX, >]
[fixToRange, (, double, x, ,, double, minX, ,, double, maxX, ), {, if, (, minX, >, maxX, ), {, throw]
[x, ,, double, minX, ,, double, maxX, ), {, if, (, minX, >, maxX, ), {, throw, new, IllegalArgumentException, (]
[maxX, ), {, if, (, minX, >, maxX, ), {, throw, new, IllegalArgumentException, (, "Requires 'minX' <= 'maxX'.", ), ;, }, if, (]
[maxX, ), {, if, (, minX, >, maxX, ), {, throw, new, IllegalArgumentException, (, "Requires 'minX' <= 'maxX'.", ), ;, }, if, (]
[{, if, (, minX, >, maxX, ), {, throw, new, IllegalArgumentException, (, "Requires 'minX' <= 'maxX'.", ), ;, }, if, (, x, <]
[>, maxX, ), {, throw, new, IllegalArgumentException, (, "Requires 'minX' <= 'maxX'.", ), ;, }, if, (, x, <, minX, ), {, return]
[IllegalArgumentException, (, "Requires 'minX' <= 'maxX'.", ), ;, }, if, (, x, <, minX, ), {, return, minX, ;, }, else, if, (]
[IllegalArgumentException, (, "Requires 'minX' <= 'maxX'.", ), ;, }, if, (, x, <, minX, ), {, return, minX, ;, }, else, if, (]
["Requires 'minX' <= 'maxX'.", ), ;, }, if, (, x, <, minX, ), {, return, minX, ;, }, else, if, (, x, >]
[if, (, x, <, minX, ), {, return, minX, ;, }, else, if, (, x, >, maxX, ), {, return]
[{, return, minX, ;, }, else, if, (, x, >, maxX, ), {, return, maxX, ;, }, else, {, return]
[maxX, ;, }, else, {, return, x, ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[maxX, ;, }, else, {, return, x, ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[}, else, {, return, x, ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[x, ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DialValueIndicator, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, DialValueIndicator, ), ), {, return, false, ;, }, DialValueIndicator, that, =]
[if, (, !, (, obj, instanceof, DialValueIndicator, ), ), {, return, false, ;, }, DialValueIndicator, that, =, (, DialValueIndicator, )]
[obj, instanceof, DialValueIndicator, ), ), {, return, false, ;, }, DialValueIndicator, that, =, (, DialValueIndicator, ), obj, ;, if, (]
[obj, instanceof, DialValueIndicator, ), ), {, return, false, ;, }, DialValueIndicator, that, =, (, DialValueIndicator, ), obj, ;, if, (]
[obj, instanceof, DialValueIndicator, ), ), {, return, false, ;, }, DialValueIndicator, that, =, (, DialValueIndicator, ), obj, ;, if, (]
[), {, return, false, ;, }, DialValueIndicator, that, =, (, DialValueIndicator, ), obj, ;, if, (, this, ., datasetIndex, !=]
[), {, return, false, ;, }, DialValueIndicator, that, =, (, DialValueIndicator, ), obj, ;, if, (, this, ., datasetIndex, !=]
[DialValueIndicator, that, =, (, DialValueIndicator, ), obj, ;, if, (, this, ., datasetIndex, !=, that, ., datasetIndex, ), {, return]
[), obj, ;, if, (, this, ., datasetIndex, !=, that, ., datasetIndex, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., datasetIndex, !=, that, ., datasetIndex, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., datasetIndex, !=, that, ., datasetIndex, ), {, return, false, ;, }, if, (]
[(, this, ., datasetIndex, !=, that, ., datasetIndex, ), {, return, false, ;, }, if, (, this, ., angle, !=]
[(, this, ., datasetIndex, !=, that, ., datasetIndex, ), {, return, false, ;, }, if, (, this, ., angle, !=]
[., datasetIndex, ), {, return, false, ;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return]
[false, ;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (]
[(, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (, this, ., radius, !=]
[(, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (, this, ., radius, !=]
[., angle, ), {, return, false, ;, }, if, (, this, ., radius, !=, that, ., radius, ), {, return]
[false, ;, }, if, (, this, ., radius, !=, that, ., radius, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., radius, !=, that, ., radius, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., radius, !=, that, ., radius, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., radius, !=, that, ., radius, ), {, return, false, ;, }, if, (, !]
[radius, !=, that, ., radius, ), {, return, false, ;, }, if, (, !, this, ., frameAnchor, ., equals, (]
[radius, !=, that, ., radius, ), {, return, false, ;, }, if, (, !, this, ., frameAnchor, ., equals, (]
[return, false, ;, }, if, (, !, this, ., frameAnchor, ., equals, (, that, ., frameAnchor, ), ), {, return]
[(, !, this, ., frameAnchor, ., equals, (, that, ., frameAnchor, ), ), {, return, false, ;, }, if, (]
[!, this, ., frameAnchor, ., equals, (, that, ., frameAnchor, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., frameAnchor, ., equals, (, that, ., frameAnchor, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., frameAnchor, ., equals, (, that, ., frameAnchor, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., frameAnchor, ), ), {, return, false, ;, }, if, (, !, this, ., templateValue, ., equals, (]
[(, that, ., frameAnchor, ), ), {, return, false, ;, }, if, (, !, this, ., templateValue, ., equals, (]
[return, false, ;, }, if, (, !, this, ., templateValue, ., equals, (, that, ., templateValue, ), ), {, return]
[(, !, this, ., templateValue, ., equals, (, that, ., templateValue, ), ), {, return, false, ;, }, if, (]
[!, this, ., templateValue, ., equals, (, that, ., templateValue, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., templateValue, ., equals, (, that, ., templateValue, ), ), {, return, false, ;, }, if, (, !]
[., equals, (, that, ., templateValue, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., equals, (, that, ., templateValue, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (]
[., templateValue, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., maxTemplateValue, ,]
[., templateValue, ), ), {, return, false, ;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., maxTemplateValue, ,]
[;, }, if, (, !, ObjectUtilities, ., equal, (, this, ., maxTemplateValue, ,, that, ., maxTemplateValue, ), ), {, return]
[ObjectUtilities, ., equal, (, this, ., maxTemplateValue, ,, that, ., maxTemplateValue, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., maxTemplateValue, ,, that, ., maxTemplateValue, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., maxTemplateValue, ,, that, ., maxTemplateValue, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., maxTemplateValue, ,, that, ., maxTemplateValue, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., maxTemplateValue, ), ), {, return, false, ;, }, if, (, !, this, ., font, ., equals, (]
[,, that, ., maxTemplateValue, ), ), {, return, false, ;, }, if, (, !, this, ., font, ., equals, (]
[return, false, ;, }, if, (, !, this, ., font, ., equals, (, that, ., font, ), ), {, return]
[(, !, this, ., font, ., equals, (, that, ., font, ), ), {, return, false, ;, }, if, (]
[!, this, ., font, ., equals, (, that, ., font, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., font, ., equals, (, that, ., font, ), ), {, return, false, ;, }, if, (, !]
[., equals, (, that, ., font, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., equals, (, that, ., font, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., font, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[., font, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, !]
[., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., paint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,]
[., paint, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., backgroundPaint, ,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (, !, this, ., outlineStroke, ., equals, (]
[,, that, ., backgroundPaint, ), ), {, return, false, ;, }, if, (, !, this, ., outlineStroke, ., equals, (]
[return, false, ;, }, if, (, !, this, ., outlineStroke, ., equals, (, that, ., outlineStroke, ), ), {, return]
[(, !, this, ., outlineStroke, ., equals, (, that, ., outlineStroke, ), ), {, return, false, ;, }, if, (]
[!, this, ., outlineStroke, ., equals, (, that, ., outlineStroke, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., outlineStroke, ., equals, (, that, ., outlineStroke, ), ), {, return, false, ;, }, if, (, !]
[., equals, (, that, ., outlineStroke, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., equals, (, that, ., outlineStroke, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (]
[., outlineStroke, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., outlinePaint, ,]
[., outlineStroke, ), ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., outlinePaint, ,]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., outlinePaint, ,, that, ., outlinePaint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., outlinePaint, ,, that, ., outlinePaint, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., outlinePaint, ,, that, ., outlinePaint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., outlinePaint, ,, that, ., outlinePaint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., outlinePaint, ,, that, ., outlinePaint, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., outlinePaint, ), ), {, return, false, ;, }, if, (, !, this, ., insets, ., equals, (]
[,, that, ., outlinePaint, ), ), {, return, false, ;, }, if, (, !, this, ., insets, ., equals, (]
[return, false, ;, }, if, (, !, this, ., insets, ., equals, (, that, ., insets, ), ), {, return]
[(, !, this, ., insets, ., equals, (, that, ., insets, ), ), {, return, false, ;, }, if, (]
[!, this, ., insets, ., equals, (, that, ., insets, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., insets, ., equals, (, that, ., insets, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., insets, ., equals, (, that, ., insets, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., insets, ), ), {, return, false, ;, }, if, (, !, this, ., valueAnchor, ., equals, (]
[(, that, ., insets, ), ), {, return, false, ;, }, if, (, !, this, ., valueAnchor, ., equals, (]
[return, false, ;, }, if, (, !, this, ., valueAnchor, ., equals, (, that, ., valueAnchor, ), ), {, return]
[(, !, this, ., valueAnchor, ., equals, (, that, ., valueAnchor, ), ), {, return, false, ;, }, if, (]
[!, this, ., valueAnchor, ., equals, (, that, ., valueAnchor, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., valueAnchor, ., equals, (, that, ., valueAnchor, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., valueAnchor, ., equals, (, that, ., valueAnchor, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., valueAnchor, ), ), {, return, false, ;, }, if, (, !, this, ., textAnchor, ., equals, (]
[(, that, ., valueAnchor, ), ), {, return, false, ;, }, if, (, !, this, ., textAnchor, ., equals, (]
[return, false, ;, }, if, (, !, this, ., textAnchor, ., equals, (, that, ., textAnchor, ), ), {, return]
[if, (, !, this, ., textAnchor, ., equals, (, that, ., textAnchor, ), ), {, return, false, ;, }, return]
[if, (, !, this, ., textAnchor, ., equals, (, that, ., textAnchor, ), ), {, return, false, ;, }, return]
[., textAnchor, ., equals, (, that, ., textAnchor, ), ), {, return, false, ;, }, return, super, ., equals, (]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[(, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +]
[int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[int, result, =, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;]
[=, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =]
[=, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =]
[=, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =]
[;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =, 37, *]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =, 37, *, result, +]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =, 37, *, result, +]
[+, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[+, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[this, ., paint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., backgroundPaint, ), ;]
[paint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., backgroundPaint, ), ;, result, =]
[paint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., backgroundPaint, ), ;, result, =]
[paint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., backgroundPaint, ), ;, result, =]
[;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., backgroundPaint, ), ;, result, =, 37, *]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., backgroundPaint, ), ;, result, =, 37, *, result, +]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., backgroundPaint, ), ;, result, =, 37, *, result, +]
[+, HashUtilities, ., hashCodeForPaint, (, this, ., backgroundPaint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[+, HashUtilities, ., hashCodeForPaint, (, this, ., backgroundPaint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[this, ., backgroundPaint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;]
[backgroundPaint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =]
[backgroundPaint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =]
[backgroundPaint, ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =]
[;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =, 37, *]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =, 37, *, result, +]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =, 37, *, result, +]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., outlinePaint, ), ;, result, =, 37, *, result, +]
[this, ., outlinePaint, ), ;, result, =, 37, *, result, +, this, ., outlineStroke, ., hashCode, (, ), ;, return]
[., outlineStroke, ., hashCode, (, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[., outlineStroke, ., hashCode, (, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[(, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[(, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,]
[throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;]
[throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writePaint, (]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writePaint, (]
[;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,]
[writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;]
[writePaint, (, this, ., paint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;]
[paint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (]
[paint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (]
[;, SerialUtilities, ., writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., outlinePaint, ,]
[writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., outlinePaint, ,, stream, ), ;]
[writePaint, (, this, ., backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., outlinePaint, ,, stream, ), ;]
[backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., outlinePaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (]
[backgroundPaint, ,, stream, ), ;, SerialUtilities, ., writePaint, (, this, ., outlinePaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (]
[;, SerialUtilities, ., writePaint, (, this, ., outlinePaint, ,, stream, ), ;, SerialUtilities, ., writeStroke, (, this, ., outlineStroke, ,]
[this, ., outlineStroke, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[this, ., outlineStroke, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (]
[,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., backgroundPaint, =]
[., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., backgroundPaint, =]
[;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (]
[paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[readPaint, (, stream, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., outlinePaint, =]
[readPaint, (, stream, ), ;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., outlinePaint, =]
[;, this, ., backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., outlinePaint, =, SerialUtilities, ., readPaint, (]
[backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., outlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[backgroundPaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., outlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;]
[readPaint, (, stream, ), ;, this, ., outlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., outlineStroke, =]
[readPaint, (, stream, ), ;, this, ., outlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., outlineStroke, =]
[;, this, ., outlinePaint, =, SerialUtilities, ., readPaint, (, stream, ), ;, this, ., outlineStroke, =, SerialUtilities, ., readStroke, (]
