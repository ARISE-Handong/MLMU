[;, private, String, id, ;, private, RectangleInsets, margin, ;, private, BlockFrame, frame, ;, private, RectangleInsets, padding, ;, private, double, width]
[=, null, ;, this, ., width, =, 0.0, ;, this, ., height, =, 0.0, ;, this, ., bounds, =, new]
[., id, =, null, ;, this, ., width, =, 0.0, ;, this, ., height, =, 0.0, ;, this, ., bounds]
[;, this, ., width, =, 0.0, ;, this, ., height, =, 0.0, ;, this, ., bounds, =, new, Rectangle2D, .]
[=, 0.0, ;, this, ., height, =, 0.0, ;, this, ., bounds, =, new, Rectangle2D, ., Float, (, ), ;]
[., width, =, 0.0, ;, this, ., height, =, 0.0, ;, this, ., bounds, =, new, Rectangle2D, ., Float, (]
[;, this, ., height, =, 0.0, ;, this, ., bounds, =, new, Rectangle2D, ., Float, (, ), ;, this, .]
[=, 0.0, ;, this, ., bounds, =, new, Rectangle2D, ., Float, (, ), ;, this, ., margin, =, RectangleInsets, .]
[., height, =, 0.0, ;, this, ., bounds, =, new, Rectangle2D, ., Float, (, ), ;, this, ., margin, =]
[;, this, ., bounds, =, new, Rectangle2D, ., Float, (, ), ;, this, ., margin, =, RectangleInsets, ., ZERO_INSETS, ;]
[=, new, Rectangle2D, ., Float, (, ), ;, this, ., margin, =, RectangleInsets, ., ZERO_INSETS, ;, this, ., frame, =]
[., bounds, =, new, Rectangle2D, ., Float, (, ), ;, this, ., margin, =, RectangleInsets, ., ZERO_INSETS, ;, this, .]
[;, this, ., margin, =, RectangleInsets, ., ZERO_INSETS, ;, this, ., frame, =, BlockBorder, ., NONE, ;, this, ., padding]
[=, RectangleInsets, ., ZERO_INSETS, ;, this, ., frame, =, BlockBorder, ., NONE, ;, this, ., padding, =, RectangleInsets, ., ZERO_INSETS]
[., margin, =, RectangleInsets, ., ZERO_INSETS, ;, this, ., frame, =, BlockBorder, ., NONE, ;, this, ., padding, =, RectangleInsets]
[;, this, ., frame, =, BlockBorder, ., NONE, ;, this, ., padding, =, RectangleInsets, ., ZERO_INSETS, ;, }, public, String]
[., ZERO_INSETS, ;, this, ., frame, =, BlockBorder, ., NONE, ;, this, ., padding, =, RectangleInsets, ., ZERO_INSETS, ;, }]
[=, BlockBorder, ., NONE, ;, this, ., padding, =, RectangleInsets, ., ZERO_INSETS, ;, }, public, String, getID, (, ), {]
[., frame, =, BlockBorder, ., NONE, ;, this, ., padding, =, RectangleInsets, ., ZERO_INSETS, ;, }, public, String, getID, (]
[;, this, ., padding, =, RectangleInsets, ., ZERO_INSETS, ;, }, public, String, getID, (, ), {, return, this, ., id]
[., NONE, ;, this, ., padding, =, RectangleInsets, ., ZERO_INSETS, ;, }, public, String, getID, (, ), {, return, this]
[=, RectangleInsets, ., ZERO_INSETS, ;, }, public, String, getID, (, ), {, return, this, ., id, ;, }, public, void]
[., padding, =, RectangleInsets, ., ZERO_INSETS, ;, }, public, String, getID, (, ), {, return, this, ., id, ;, }]
[;, }, public, String, getID, (, ), {, return, this, ., id, ;, }, public, void, setID, (, String, id]
[., ZERO_INSETS, ;, }, public, String, getID, (, ), {, return, this, ., id, ;, }, public, void, setID, (]
[;, }, public, void, setID, (, String, id, ), {, this, ., id, =, id, ;, }, public, double, getWidth]
[., id, ;, }, public, void, setID, (, String, id, ), {, this, ., id, =, id, ;, }, public]
[=, id, ;, }, public, double, getWidth, (, ), {, return, this, ., width, ;, }, public, void, setWidth, (]
[., id, =, id, ;, }, public, double, getWidth, (, ), {, return, this, ., width, ;, }, public, void]
[;, }, public, double, getWidth, (, ), {, return, this, ., width, ;, }, public, void, setWidth, (, double, width]
[;, }, public, void, setWidth, (, double, width, ), {, this, ., width, =, width, ;, }, public, double, getHeight]
[., width, ;, }, public, void, setWidth, (, double, width, ), {, this, ., width, =, width, ;, }, public]
[=, width, ;, }, public, double, getHeight, (, ), {, return, this, ., height, ;, }, public, void, setHeight, (]
[., width, =, width, ;, }, public, double, getHeight, (, ), {, return, this, ., height, ;, }, public, void]
[;, }, public, double, getHeight, (, ), {, return, this, ., height, ;, }, public, void, setHeight, (, double, height]
[;, }, public, void, setHeight, (, double, height, ), {, this, ., height, =, height, ;, }, public, RectangleInsets, getMargin]
[., height, ;, }, public, void, setHeight, (, double, height, ), {, this, ., height, =, height, ;, }, public]
[=, height, ;, }, public, RectangleInsets, getMargin, (, ), {, return, this, ., margin, ;, }, public, void, setMargin, (]
[., height, =, height, ;, }, public, RectangleInsets, getMargin, (, ), {, return, this, ., margin, ;, }, public, void]
[;, }, public, RectangleInsets, getMargin, (, ), {, return, this, ., margin, ;, }, public, void, setMargin, (, RectangleInsets, margin]
[;, }, public, void, setMargin, (, RectangleInsets, margin, ), {, if, (, margin, ==, null, ), {, throw, new, IllegalArgumentException]
[., margin, ;, }, public, void, setMargin, (, RectangleInsets, margin, ), {, if, (, margin, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'margin' argument.", ), ;, }, this, ., margin, =, margin, ;, }, public, void, setMargin]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'margin' argument.", ), ;, }, this, ., margin, =, margin, ;, }, public]
[), {, throw, new, IllegalArgumentException, (, "Null 'margin' argument.", ), ;, }, this, ., margin, =, margin, ;, }, public, void, setMargin]
[;, }, this, ., margin, =, margin, ;, }, public, void, setMargin, (, double, top, ,, double, left, ,, double]
[), ;, }, this, ., margin, =, margin, ;, }, public, void, setMargin, (, double, top, ,, double, left, ,]
[=, margin, ;, }, public, void, setMargin, (, double, top, ,, double, left, ,, double, bottom, ,, double, right, )]
[., margin, =, margin, ;, }, public, void, setMargin, (, double, top, ,, double, left, ,, double, bottom, ,, double]
[;, }, public, void, setMargin, (, double, top, ,, double, left, ,, double, bottom, ,, double, right, ), {, setMargin]
[;, }, public, BlockFrame, getFrame, (, ), {, return, this, ., frame, ;, }, public, void, setFrame, (, BlockFrame, frame]
[), ;, }, public, BlockFrame, getFrame, (, ), {, return, this, ., frame, ;, }, public, void, setFrame, (, BlockFrame]
[,, left, ,, bottom, ,, right, ), ), ;, }, public, BlockFrame, getFrame, (, ), {, return, this, ., frame]
[,, bottom, ,, right, ), ), ;, }, public, BlockFrame, getFrame, (, ), {, return, this, ., frame, ;, }]
[,, right, ), ), ;, }, public, BlockFrame, getFrame, (, ), {, return, this, ., frame, ;, }, public, void]
[), ), ;, }, public, BlockFrame, getFrame, (, ), {, return, this, ., frame, ;, }, public, void, setFrame, (]
[;, }, public, void, setFrame, (, BlockFrame, frame, ), {, if, (, frame, ==, null, ), {, throw, new, IllegalArgumentException]
[., frame, ;, }, public, void, setFrame, (, BlockFrame, frame, ), {, if, (, frame, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'frame' argument.", ), ;, }, this, ., frame, =, frame, ;, }, public, RectangleInsets, getPadding]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'frame' argument.", ), ;, }, this, ., frame, =, frame, ;, }, public]
[), {, throw, new, IllegalArgumentException, (, "Null 'frame' argument.", ), ;, }, this, ., frame, =, frame, ;, }, public, RectangleInsets, getPadding]
[;, }, this, ., frame, =, frame, ;, }, public, RectangleInsets, getPadding, (, ), {, return, this, ., padding, ;]
[), ;, }, this, ., frame, =, frame, ;, }, public, RectangleInsets, getPadding, (, ), {, return, this, ., padding]
[=, frame, ;, }, public, RectangleInsets, getPadding, (, ), {, return, this, ., padding, ;, }, public, void, setPadding, (]
[., frame, =, frame, ;, }, public, RectangleInsets, getPadding, (, ), {, return, this, ., padding, ;, }, public, void]
[;, }, public, RectangleInsets, getPadding, (, ), {, return, this, ., padding, ;, }, public, void, setPadding, (, RectangleInsets, padding]
[;, }, public, void, setPadding, (, RectangleInsets, padding, ), {, if, (, padding, ==, null, ), {, throw, new, IllegalArgumentException]
[., padding, ;, }, public, void, setPadding, (, RectangleInsets, padding, ), {, if, (, padding, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'padding' argument.", ), ;, }, this, ., padding, =, padding, ;, }, public, void, setPadding]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'padding' argument.", ), ;, }, this, ., padding, =, padding, ;, }, public]
[), {, throw, new, IllegalArgumentException, (, "Null 'padding' argument.", ), ;, }, this, ., padding, =, padding, ;, }, public, void, setPadding]
[;, }, this, ., padding, =, padding, ;, }, public, void, setPadding, (, double, top, ,, double, left, ,, double]
[), ;, }, this, ., padding, =, padding, ;, }, public, void, setPadding, (, double, top, ,, double, left, ,]
[=, padding, ;, }, public, void, setPadding, (, double, top, ,, double, left, ,, double, bottom, ,, double, right, )]
[., padding, =, padding, ;, }, public, void, setPadding, (, double, top, ,, double, left, ,, double, bottom, ,, double]
[;, }, public, void, setPadding, (, double, top, ,, double, left, ,, double, bottom, ,, double, right, ), {, setPadding]
[;, }, public, double, getContentXOffset, (, ), {, return, this, ., margin, ., getLeft, (, ), +, this, ., frame]
[), ;, }, public, double, getContentXOffset, (, ), {, return, this, ., margin, ., getLeft, (, ), +, this, .]
[,, left, ,, bottom, ,, right, ), ), ;, }, public, double, getContentXOffset, (, ), {, return, this, ., margin]
[,, bottom, ,, right, ), ), ;, }, public, double, getContentXOffset, (, ), {, return, this, ., margin, ., getLeft]
[,, right, ), ), ;, }, public, double, getContentXOffset, (, ), {, return, this, ., margin, ., getLeft, (, )]
[), ), ;, }, public, double, getContentXOffset, (, ), {, return, this, ., margin, ., getLeft, (, ), +, this]
[;, }, public, double, getContentYOffset, (, ), {, return, this, ., margin, ., getTop, (, ), +, this, ., frame]
[+, this, ., padding, ., getLeft, (, ), ;, }, public, double, getContentYOffset, (, ), {, return, this, ., margin]
[+, this, ., frame, ., getInsets, (, ), ., getLeft, (, ), +, this, ., padding, ., getLeft, (, )]
[., getLeft, (, ), +, this, ., frame, ., getInsets, (, ), ., getLeft, (, ), +, this, ., padding]
[., margin, ., getLeft, (, ), +, this, ., frame, ., getInsets, (, ), ., getLeft, (, ), +, this]
[+, this, ., padding, ., getLeft, (, ), ;, }, public, double, getContentYOffset, (, ), {, return, this, ., margin]
[., getLeft, (, ), +, this, ., padding, ., getLeft, (, ), ;, }, public, double, getContentYOffset, (, ), {]
[., getInsets, (, ), ., getLeft, (, ), +, this, ., padding, ., getLeft, (, ), ;, }, public, double]
[., frame, ., getInsets, (, ), ., getLeft, (, ), +, this, ., padding, ., getLeft, (, ), ;, }]
[;, }, public, double, getContentYOffset, (, ), {, return, this, ., margin, ., getTop, (, ), +, this, ., frame]
[., getLeft, (, ), ;, }, public, double, getContentYOffset, (, ), {, return, this, ., margin, ., getTop, (, )]
[., padding, ., getLeft, (, ), ;, }, public, double, getContentYOffset, (, ), {, return, this, ., margin, ., getTop]
[;, }, public, Size2D, arrange, (, Graphics2D, g2, ), {, return, arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;]
[+, this, ., padding, ., getTop, (, ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ), {, return, arrange]
[+, this, ., frame, ., getInsets, (, ), ., getTop, (, ), +, this, ., padding, ., getTop, (, )]
[., getTop, (, ), +, this, ., frame, ., getInsets, (, ), ., getTop, (, ), +, this, ., padding]
[., margin, ., getTop, (, ), +, this, ., frame, ., getInsets, (, ), ., getTop, (, ), +, this]
[+, this, ., padding, ., getTop, (, ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ), {, return, arrange]
[., getTop, (, ), +, this, ., padding, ., getTop, (, ), ;, }, public, Size2D, arrange, (, Graphics2D, g2]
[., getInsets, (, ), ., getTop, (, ), +, this, ., padding, ., getTop, (, ), ;, }, public, Size2D]
[., frame, ., getInsets, (, ), ., getTop, (, ), +, this, ., padding, ., getTop, (, ), ;, }]
[;, }, public, Size2D, arrange, (, Graphics2D, g2, ), {, return, arrange, (, g2, ,, RectangleConstraint, ., NONE, ), ;]
[., getTop, (, ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ), {, return, arrange, (, g2, ,, RectangleConstraint]
[., padding, ., getTop, (, ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ), {, return, arrange, (, g2]
[;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, base, =, new, Size2D, (, getWidth]
[,, RectangleConstraint, ., NONE, ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, base]
[), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, base, =, new, Size2D, (]
[., NONE, ), ;, }, public, Size2D, arrange, (, Graphics2D, g2, ,, RectangleConstraint, constraint, ), {, Size2D, base, =, new]
[;, return, constraint, ., calculateConstrainedSize, (, base, ), ;, }, public, Rectangle2D, getBounds, (, ), {, return, this, ., bounds]
[,, getHeight, (, ), ), ;, return, constraint, ., calculateConstrainedSize, (, base, ), ;, }, public, Rectangle2D, getBounds, (, )]
[), ;, return, constraint, ., calculateConstrainedSize, (, base, ), ;, }, public, Rectangle2D, getBounds, (, ), {, return, this, .]
[;, }, public, Rectangle2D, getBounds, (, ), {, return, this, ., bounds, ;, }, public, void, setBounds, (, Rectangle2D, bounds]
[., calculateConstrainedSize, (, base, ), ;, }, public, Rectangle2D, getBounds, (, ), {, return, this, ., bounds, ;, }, public]
[), ;, }, public, Rectangle2D, getBounds, (, ), {, return, this, ., bounds, ;, }, public, void, setBounds, (, Rectangle2D]
[;, }, public, void, setBounds, (, Rectangle2D, bounds, ), {, if, (, bounds, ==, null, ), {, throw, new, IllegalArgumentException]
[., bounds, ;, }, public, void, setBounds, (, Rectangle2D, bounds, ), {, if, (, bounds, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'bounds' argument.", ), ;, }, this, ., bounds, =, bounds, ;, }, protected, double, trimToContentWidth]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'bounds' argument.", ), ;, }, this, ., bounds, =, bounds, ;, }, protected]
[), {, throw, new, IllegalArgumentException, (, "Null 'bounds' argument.", ), ;, }, this, ., bounds, =, bounds, ;, }, protected, double, trimToContentWidth]
[;, }, this, ., bounds, =, bounds, ;, }, protected, double, trimToContentWidth, (, double, fixedWidth, ), {, double, result, =]
[), ;, }, this, ., bounds, =, bounds, ;, }, protected, double, trimToContentWidth, (, double, fixedWidth, ), {, double, result]
[=, bounds, ;, }, protected, double, trimToContentWidth, (, double, fixedWidth, ), {, double, result, =, this, ., margin, ., trimWidth]
[., bounds, =, bounds, ;, }, protected, double, trimToContentWidth, (, double, fixedWidth, ), {, double, result, =, this, ., margin]
[;, }, protected, double, trimToContentWidth, (, double, fixedWidth, ), {, double, result, =, this, ., margin, ., trimWidth, (, fixedWidth]
[;, result, =, this, ., frame, ., getInsets, (, ), ., trimWidth, (, result, ), ;, result, =, this, .]
[., trimWidth, (, fixedWidth, ), ;, result, =, this, ., frame, ., getInsets, (, ), ., trimWidth, (, result, )]
[., margin, ., trimWidth, (, fixedWidth, ), ;, result, =, this, ., frame, ., getInsets, (, ), ., trimWidth, (]
[), ;, result, =, this, ., frame, ., getInsets, (, ), ., trimWidth, (, result, ), ;, result, =, this]
[=, this, ., frame, ., getInsets, (, ), ., trimWidth, (, result, ), ;, result, =, this, ., padding, .]
[;, result, =, this, ., padding, ., trimWidth, (, result, ), ;, return, Math, ., max, (, result, ,, 0.0]
[., trimWidth, (, result, ), ;, result, =, this, ., padding, ., trimWidth, (, result, ), ;, return, Math, .]
[., getInsets, (, ), ., trimWidth, (, result, ), ;, result, =, this, ., padding, ., trimWidth, (, result, )]
[., frame, ., getInsets, (, ), ., trimWidth, (, result, ), ;, result, =, this, ., padding, ., trimWidth, (]
[), ;, result, =, this, ., padding, ., trimWidth, (, result, ), ;, return, Math, ., max, (, result, ,]
[=, this, ., padding, ., trimWidth, (, result, ), ;, return, Math, ., max, (, result, ,, 0.0, ), ;]
[;, return, Math, ., max, (, result, ,, 0.0, ), ;, }, protected, double, trimToContentHeight, (, double, fixedHeight, ), {]
[., trimWidth, (, result, ), ;, return, Math, ., max, (, result, ,, 0.0, ), ;, }, protected, double, trimToContentHeight]
[., padding, ., trimWidth, (, result, ), ;, return, Math, ., max, (, result, ,, 0.0, ), ;, }, protected]
[), ;, return, Math, ., max, (, result, ,, 0.0, ), ;, }, protected, double, trimToContentHeight, (, double, fixedHeight, )]
[;, }, protected, double, trimToContentHeight, (, double, fixedHeight, ), {, double, result, =, this, ., margin, ., trimHeight, (, fixedHeight]
[., max, (, result, ,, 0.0, ), ;, }, protected, double, trimToContentHeight, (, double, fixedHeight, ), {, double, result, =]
[,, 0.0, ), ;, }, protected, double, trimToContentHeight, (, double, fixedHeight, ), {, double, result, =, this, ., margin, .]
[), ;, }, protected, double, trimToContentHeight, (, double, fixedHeight, ), {, double, result, =, this, ., margin, ., trimHeight, (]
[;, result, =, this, ., frame, ., getInsets, (, ), ., trimHeight, (, result, ), ;, result, =, this, .]
[., trimHeight, (, fixedHeight, ), ;, result, =, this, ., frame, ., getInsets, (, ), ., trimHeight, (, result, )]
[., margin, ., trimHeight, (, fixedHeight, ), ;, result, =, this, ., frame, ., getInsets, (, ), ., trimHeight, (]
[), ;, result, =, this, ., frame, ., getInsets, (, ), ., trimHeight, (, result, ), ;, result, =, this]
[=, this, ., frame, ., getInsets, (, ), ., trimHeight, (, result, ), ;, result, =, this, ., padding, .]
[;, result, =, this, ., padding, ., trimHeight, (, result, ), ;, return, Math, ., max, (, result, ,, 0.0]
[., trimHeight, (, result, ), ;, result, =, this, ., padding, ., trimHeight, (, result, ), ;, return, Math, .]
[., getInsets, (, ), ., trimHeight, (, result, ), ;, result, =, this, ., padding, ., trimHeight, (, result, )]
[., frame, ., getInsets, (, ), ., trimHeight, (, result, ), ;, result, =, this, ., padding, ., trimHeight, (]
[), ;, result, =, this, ., padding, ., trimHeight, (, result, ), ;, return, Math, ., max, (, result, ,]
[=, this, ., padding, ., trimHeight, (, result, ), ;, return, Math, ., max, (, result, ,, 0.0, ), ;]
[;, return, Math, ., max, (, result, ,, 0.0, ), ;, }, protected, RectangleConstraint, toContentConstraint, (, RectangleConstraint, c, ), {]
[., trimHeight, (, result, ), ;, return, Math, ., max, (, result, ,, 0.0, ), ;, }, protected, RectangleConstraint, toContentConstraint]
[., padding, ., trimHeight, (, result, ), ;, return, Math, ., max, (, result, ,, 0.0, ), ;, }, protected]
[), ;, return, Math, ., max, (, result, ,, 0.0, ), ;, }, protected, RectangleConstraint, toContentConstraint, (, RectangleConstraint, c, )]
[;, }, protected, RectangleConstraint, toContentConstraint, (, RectangleConstraint, c, ), {, if, (, c, ==, null, ), {, throw, new, IllegalArgumentException]
[., max, (, result, ,, 0.0, ), ;, }, protected, RectangleConstraint, toContentConstraint, (, RectangleConstraint, c, ), {, if, (, c]
[,, 0.0, ), ;, }, protected, RectangleConstraint, toContentConstraint, (, RectangleConstraint, c, ), {, if, (, c, ==, null, ), {]
[), ;, }, protected, RectangleConstraint, toContentConstraint, (, RectangleConstraint, c, ), {, if, (, c, ==, null, ), {, throw, new]
[), {, throw, new, IllegalArgumentException, (, "Null 'c' argument.", ), ;, }, if, (, c, ., equals, (, RectangleConstraint, ., NONE, )]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'c' argument.", ), ;, }, if, (, c, ., equals, (, RectangleConstraint, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'c' argument.", ), ;, }, if, (, c, ., equals, (, RectangleConstraint, ., NONE, )]
[;, }, if, (, c, ., equals, (, RectangleConstraint, ., NONE, ), ), {, return, c, ;, }, double, w]
[), ;, }, if, (, c, ., equals, (, RectangleConstraint, ., NONE, ), ), {, return, c, ;, }, double]
[), {, return, c, ;, }, double, w, =, c, ., getWidth, (, ), ;, Range, wr, =, c, .]
[., equals, (, RectangleConstraint, ., NONE, ), ), {, return, c, ;, }, double, w, =, c, ., getWidth, (]
[), ), {, return, c, ;, }, double, w, =, c, ., getWidth, (, ), ;, Range, wr, =, c]
[., NONE, ), ), {, return, c, ;, }, double, w, =, c, ., getWidth, (, ), ;, Range, wr]
[;, }, double, w, =, c, ., getWidth, (, ), ;, Range, wr, =, c, ., getWidthRange, (, ), ;]
[;, Range, wr, =, c, ., getWidthRange, (, ), ;, double, h, =, c, ., getHeight, (, ), ;, Range]
[., getWidth, (, ), ;, Range, wr, =, c, ., getWidthRange, (, ), ;, double, h, =, c, ., getHeight]
[;, double, h, =, c, ., getHeight, (, ), ;, Range, hr, =, c, ., getHeightRange, (, ), ;, double]
[., getWidthRange, (, ), ;, double, h, =, c, ., getHeight, (, ), ;, Range, hr, =, c, ., getHeightRange]
[;, Range, hr, =, c, ., getHeightRange, (, ), ;, double, ww, =, trimToContentWidth, (, w, ), ;, double, hh]
[., getHeight, (, ), ;, Range, hr, =, c, ., getHeightRange, (, ), ;, double, ww, =, trimToContentWidth, (, w]
[;, double, ww, =, trimToContentWidth, (, w, ), ;, double, hh, =, trimToContentHeight, (, h, ), ;, Range, wwr, =]
[., getHeightRange, (, ), ;, double, ww, =, trimToContentWidth, (, w, ), ;, double, hh, =, trimToContentHeight, (, h, )]
[;, double, hh, =, trimToContentHeight, (, h, ), ;, Range, wwr, =, trimToContentWidth, (, wr, ), ;, Range, hhr, =]
[), ;, double, hh, =, trimToContentHeight, (, h, ), ;, Range, wwr, =, trimToContentWidth, (, wr, ), ;, Range, hhr]
[;, Range, wwr, =, trimToContentWidth, (, wr, ), ;, Range, hhr, =, trimToContentHeight, (, hr, ), ;, return, new, RectangleConstraint]
[), ;, Range, wwr, =, trimToContentWidth, (, wr, ), ;, Range, hhr, =, trimToContentHeight, (, hr, ), ;, return, new]
[;, Range, hhr, =, trimToContentHeight, (, hr, ), ;, return, new, RectangleConstraint, (, ww, ,, wwr, ,, c, ., getWidthConstraintType]
[), ;, Range, hhr, =, trimToContentHeight, (, hr, ), ;, return, new, RectangleConstraint, (, ww, ,, wwr, ,, c, .]
[;, return, new, RectangleConstraint, (, ww, ,, wwr, ,, c, ., getWidthConstraintType, (, ), ,, hh, ,, hhr, ,, c]
[), ;, return, new, RectangleConstraint, (, ww, ,, wwr, ,, c, ., getWidthConstraintType, (, ), ,, hh, ,, hhr, ,]
[;, }, private, Range, trimToContentWidth, (, Range, r, ), {, if, (, r, ==, null, ), {, return, null, ;]
[,, wwr, ,, c, ., getWidthConstraintType, (, ), ,, hh, ,, hhr, ,, c, ., getHeightConstraintType, (, ), ), ;]
[,, c, ., getWidthConstraintType, (, ), ,, hh, ,, hhr, ,, c, ., getHeightConstraintType, (, ), ), ;, }, private]
[,, hh, ,, hhr, ,, c, ., getHeightConstraintType, (, ), ), ;, }, private, Range, trimToContentWidth, (, Range, r, )]
[., getWidthConstraintType, (, ), ,, hh, ,, hhr, ,, c, ., getHeightConstraintType, (, ), ), ;, }, private, Range, trimToContentWidth]
[,, hhr, ,, c, ., getHeightConstraintType, (, ), ), ;, }, private, Range, trimToContentWidth, (, Range, r, ), {, if]
[,, c, ., getHeightConstraintType, (, ), ), ;, }, private, Range, trimToContentWidth, (, Range, r, ), {, if, (, r]
[), ;, }, private, Range, trimToContentWidth, (, Range, r, ), {, if, (, r, ==, null, ), {, return, null]
[., getHeightConstraintType, (, ), ), ;, }, private, Range, trimToContentWidth, (, Range, r, ), {, if, (, r, ==, null]
[), {, return, null, ;, }, double, lowerBound, =, 0.0, ;, double, upperBound, =, Double, ., POSITIVE_INFINITY, ;, if, (]
[==, null, ), {, return, null, ;, }, double, lowerBound, =, 0.0, ;, double, upperBound, =, Double, ., POSITIVE_INFINITY, ;]
[), {, return, null, ;, }, double, lowerBound, =, 0.0, ;, double, upperBound, =, Double, ., POSITIVE_INFINITY, ;, if, (]
[;, }, double, lowerBound, =, 0.0, ;, double, upperBound, =, Double, ., POSITIVE_INFINITY, ;, if, (, r, ., getLowerBound, (]
[;, double, upperBound, =, Double, ., POSITIVE_INFINITY, ;, if, (, r, ., getLowerBound, (, ), >, 0.0, ), {, lowerBound]
[;, if, (, r, ., getLowerBound, (, ), >, 0.0, ), {, lowerBound, =, trimToContentWidth, (, r, ., getLowerBound, (]
[., POSITIVE_INFINITY, ;, if, (, r, ., getLowerBound, (, ), >, 0.0, ), {, lowerBound, =, trimToContentWidth, (, r, .]
[), {, lowerBound, =, trimToContentWidth, (, r, ., getLowerBound, (, ), ), ;, }, if, (, r, ., getUpperBound, (]
[>, 0.0, ), {, lowerBound, =, trimToContentWidth, (, r, ., getLowerBound, (, ), ), ;, }, if, (, r, .]
[., getLowerBound, (, ), >, 0.0, ), {, lowerBound, =, trimToContentWidth, (, r, ., getLowerBound, (, ), ), ;, }]
[), {, lowerBound, =, trimToContentWidth, (, r, ., getLowerBound, (, ), ), ;, }, if, (, r, ., getUpperBound, (]
[=, trimToContentWidth, (, r, ., getLowerBound, (, ), ), ;, }, if, (, r, ., getUpperBound, (, ), <, Double]
[;, }, if, (, r, ., getUpperBound, (, ), <, Double, ., POSITIVE_INFINITY, ), {, upperBound, =, trimToContentWidth, (, r]
[), ;, }, if, (, r, ., getUpperBound, (, ), <, Double, ., POSITIVE_INFINITY, ), {, upperBound, =, trimToContentWidth, (]
[., getLowerBound, (, ), ), ;, }, if, (, r, ., getUpperBound, (, ), <, Double, ., POSITIVE_INFINITY, ), {]
[), {, upperBound, =, trimToContentWidth, (, r, ., getUpperBound, (, ), ), ;, }, return, new, Range, (, lowerBound, ,]
[<, Double, ., POSITIVE_INFINITY, ), {, upperBound, =, trimToContentWidth, (, r, ., getUpperBound, (, ), ), ;, }, return, new]
[., getUpperBound, (, ), <, Double, ., POSITIVE_INFINITY, ), {, upperBound, =, trimToContentWidth, (, r, ., getUpperBound, (, ), )]
[), {, upperBound, =, trimToContentWidth, (, r, ., getUpperBound, (, ), ), ;, }, return, new, Range, (, lowerBound, ,]
[., POSITIVE_INFINITY, ), {, upperBound, =, trimToContentWidth, (, r, ., getUpperBound, (, ), ), ;, }, return, new, Range, (]
[=, trimToContentWidth, (, r, ., getUpperBound, (, ), ), ;, }, return, new, Range, (, lowerBound, ,, upperBound, ), ;]
[;, }, return, new, Range, (, lowerBound, ,, upperBound, ), ;, }, private, Range, trimToContentHeight, (, Range, r, ), {]
[), ;, }, return, new, Range, (, lowerBound, ,, upperBound, ), ;, }, private, Range, trimToContentHeight, (, Range, r, )]
[., getUpperBound, (, ), ), ;, }, return, new, Range, (, lowerBound, ,, upperBound, ), ;, }, private, Range, trimToContentHeight]
[;, }, private, Range, trimToContentHeight, (, Range, r, ), {, if, (, r, ==, null, ), {, return, null, ;]
[,, upperBound, ), ;, }, private, Range, trimToContentHeight, (, Range, r, ), {, if, (, r, ==, null, ), {]
[), ;, }, private, Range, trimToContentHeight, (, Range, r, ), {, if, (, r, ==, null, ), {, return, null]
[), {, return, null, ;, }, double, lowerBound, =, 0.0, ;, double, upperBound, =, Double, ., POSITIVE_INFINITY, ;, if, (]
[==, null, ), {, return, null, ;, }, double, lowerBound, =, 0.0, ;, double, upperBound, =, Double, ., POSITIVE_INFINITY, ;]
[), {, return, null, ;, }, double, lowerBound, =, 0.0, ;, double, upperBound, =, Double, ., POSITIVE_INFINITY, ;, if, (]
[;, }, double, lowerBound, =, 0.0, ;, double, upperBound, =, Double, ., POSITIVE_INFINITY, ;, if, (, r, ., getLowerBound, (]
[;, double, upperBound, =, Double, ., POSITIVE_INFINITY, ;, if, (, r, ., getLowerBound, (, ), >, 0.0, ), {, lowerBound]
[;, if, (, r, ., getLowerBound, (, ), >, 0.0, ), {, lowerBound, =, trimToContentHeight, (, r, ., getLowerBound, (]
[., POSITIVE_INFINITY, ;, if, (, r, ., getLowerBound, (, ), >, 0.0, ), {, lowerBound, =, trimToContentHeight, (, r, .]
[), {, lowerBound, =, trimToContentHeight, (, r, ., getLowerBound, (, ), ), ;, }, if, (, r, ., getUpperBound, (]
[>, 0.0, ), {, lowerBound, =, trimToContentHeight, (, r, ., getLowerBound, (, ), ), ;, }, if, (, r, .]
[., getLowerBound, (, ), >, 0.0, ), {, lowerBound, =, trimToContentHeight, (, r, ., getLowerBound, (, ), ), ;, }]
[), {, lowerBound, =, trimToContentHeight, (, r, ., getLowerBound, (, ), ), ;, }, if, (, r, ., getUpperBound, (]
[=, trimToContentHeight, (, r, ., getLowerBound, (, ), ), ;, }, if, (, r, ., getUpperBound, (, ), <, Double]
[;, }, if, (, r, ., getUpperBound, (, ), <, Double, ., POSITIVE_INFINITY, ), {, upperBound, =, trimToContentHeight, (, r]
[), ;, }, if, (, r, ., getUpperBound, (, ), <, Double, ., POSITIVE_INFINITY, ), {, upperBound, =, trimToContentHeight, (]
[., getLowerBound, (, ), ), ;, }, if, (, r, ., getUpperBound, (, ), <, Double, ., POSITIVE_INFINITY, ), {]
[), {, upperBound, =, trimToContentHeight, (, r, ., getUpperBound, (, ), ), ;, }, return, new, Range, (, lowerBound, ,]
[<, Double, ., POSITIVE_INFINITY, ), {, upperBound, =, trimToContentHeight, (, r, ., getUpperBound, (, ), ), ;, }, return, new]
[., getUpperBound, (, ), <, Double, ., POSITIVE_INFINITY, ), {, upperBound, =, trimToContentHeight, (, r, ., getUpperBound, (, ), )]
[), {, upperBound, =, trimToContentHeight, (, r, ., getUpperBound, (, ), ), ;, }, return, new, Range, (, lowerBound, ,]
[., POSITIVE_INFINITY, ), {, upperBound, =, trimToContentHeight, (, r, ., getUpperBound, (, ), ), ;, }, return, new, Range, (]
[=, trimToContentHeight, (, r, ., getUpperBound, (, ), ), ;, }, return, new, Range, (, lowerBound, ,, upperBound, ), ;]
[;, }, return, new, Range, (, lowerBound, ,, upperBound, ), ;, }, protected, double, calculateTotalWidth, (, double, contentWidth, ), {]
[), ;, }, return, new, Range, (, lowerBound, ,, upperBound, ), ;, }, protected, double, calculateTotalWidth, (, double, contentWidth, )]
[., getUpperBound, (, ), ), ;, }, return, new, Range, (, lowerBound, ,, upperBound, ), ;, }, protected, double, calculateTotalWidth]
[;, }, protected, double, calculateTotalWidth, (, double, contentWidth, ), {, double, result, =, contentWidth, ;, result, =, this, ., padding]
[,, upperBound, ), ;, }, protected, double, calculateTotalWidth, (, double, contentWidth, ), {, double, result, =, contentWidth, ;, result, =]
[), ;, }, protected, double, calculateTotalWidth, (, double, contentWidth, ), {, double, result, =, contentWidth, ;, result, =, this, .]
[;, result, =, this, ., padding, ., extendWidth, (, result, ), ;, result, =, this, ., frame, ., getInsets, (]
[=, this, ., padding, ., extendWidth, (, result, ), ;, result, =, this, ., frame, ., getInsets, (, ), .]
[;, result, =, this, ., frame, ., getInsets, (, ), ., extendWidth, (, result, ), ;, result, =, this, .]
[., extendWidth, (, result, ), ;, result, =, this, ., frame, ., getInsets, (, ), ., extendWidth, (, result, )]
[., padding, ., extendWidth, (, result, ), ;, result, =, this, ., frame, ., getInsets, (, ), ., extendWidth, (]
[), ;, result, =, this, ., frame, ., getInsets, (, ), ., extendWidth, (, result, ), ;, result, =, this]
[=, this, ., frame, ., getInsets, (, ), ., extendWidth, (, result, ), ;, result, =, this, ., margin, .]
[;, result, =, this, ., margin, ., extendWidth, (, result, ), ;, return, result, ;, }, protected, double, calculateTotalHeight, (]
[., extendWidth, (, result, ), ;, result, =, this, ., margin, ., extendWidth, (, result, ), ;, return, result, ;]
[., getInsets, (, ), ., extendWidth, (, result, ), ;, result, =, this, ., margin, ., extendWidth, (, result, )]
[., frame, ., getInsets, (, ), ., extendWidth, (, result, ), ;, result, =, this, ., margin, ., extendWidth, (]
[), ;, result, =, this, ., margin, ., extendWidth, (, result, ), ;, return, result, ;, }, protected, double, calculateTotalHeight]
[=, this, ., margin, ., extendWidth, (, result, ), ;, return, result, ;, }, protected, double, calculateTotalHeight, (, double, contentHeight]
[;, return, result, ;, }, protected, double, calculateTotalHeight, (, double, contentHeight, ), {, double, result, =, contentHeight, ;, result, =]
[., extendWidth, (, result, ), ;, return, result, ;, }, protected, double, calculateTotalHeight, (, double, contentHeight, ), {, double, result]
[., margin, ., extendWidth, (, result, ), ;, return, result, ;, }, protected, double, calculateTotalHeight, (, double, contentHeight, ), {]
[), ;, return, result, ;, }, protected, double, calculateTotalHeight, (, double, contentHeight, ), {, double, result, =, contentHeight, ;, result]
[;, }, protected, double, calculateTotalHeight, (, double, contentHeight, ), {, double, result, =, contentHeight, ;, result, =, this, ., padding]
[;, result, =, this, ., padding, ., extendHeight, (, result, ), ;, result, =, this, ., frame, ., getInsets, (]
[=, this, ., padding, ., extendHeight, (, result, ), ;, result, =, this, ., frame, ., getInsets, (, ), .]
[;, result, =, this, ., frame, ., getInsets, (, ), ., extendHeight, (, result, ), ;, result, =, this, .]
[., extendHeight, (, result, ), ;, result, =, this, ., frame, ., getInsets, (, ), ., extendHeight, (, result, )]
[., padding, ., extendHeight, (, result, ), ;, result, =, this, ., frame, ., getInsets, (, ), ., extendHeight, (]
[), ;, result, =, this, ., frame, ., getInsets, (, ), ., extendHeight, (, result, ), ;, result, =, this]
[=, this, ., frame, ., getInsets, (, ), ., extendHeight, (, result, ), ;, result, =, this, ., margin, .]
[;, result, =, this, ., margin, ., extendHeight, (, result, ), ;, return, result, ;, }, protected, Rectangle2D, trimMargin, (]
[., extendHeight, (, result, ), ;, result, =, this, ., margin, ., extendHeight, (, result, ), ;, return, result, ;]
[., getInsets, (, ), ., extendHeight, (, result, ), ;, result, =, this, ., margin, ., extendHeight, (, result, )]
[., frame, ., getInsets, (, ), ., extendHeight, (, result, ), ;, result, =, this, ., margin, ., extendHeight, (]
[), ;, result, =, this, ., margin, ., extendHeight, (, result, ), ;, return, result, ;, }, protected, Rectangle2D, trimMargin]
[=, this, ., margin, ., extendHeight, (, result, ), ;, return, result, ;, }, protected, Rectangle2D, trimMargin, (, Rectangle2D, area]
[;, return, result, ;, }, protected, Rectangle2D, trimMargin, (, Rectangle2D, area, ), {, this, ., margin, ., trim, (, area]
[., extendHeight, (, result, ), ;, return, result, ;, }, protected, Rectangle2D, trimMargin, (, Rectangle2D, area, ), {, this, .]
[., margin, ., extendHeight, (, result, ), ;, return, result, ;, }, protected, Rectangle2D, trimMargin, (, Rectangle2D, area, ), {]
[), ;, return, result, ;, }, protected, Rectangle2D, trimMargin, (, Rectangle2D, area, ), {, this, ., margin, ., trim, (]
[;, }, protected, Rectangle2D, trimMargin, (, Rectangle2D, area, ), {, this, ., margin, ., trim, (, area, ), ;, return]
[;, return, area, ;, }, protected, Rectangle2D, trimBorder, (, Rectangle2D, area, ), {, this, ., frame, ., getInsets, (, )]
[., trim, (, area, ), ;, return, area, ;, }, protected, Rectangle2D, trimBorder, (, Rectangle2D, area, ), {, this, .]
[., margin, ., trim, (, area, ), ;, return, area, ;, }, protected, Rectangle2D, trimBorder, (, Rectangle2D, area, ), {]
[), ;, return, area, ;, }, protected, Rectangle2D, trimBorder, (, Rectangle2D, area, ), {, this, ., frame, ., getInsets, (]
[;, }, protected, Rectangle2D, trimBorder, (, Rectangle2D, area, ), {, this, ., frame, ., getInsets, (, ), ., trim, (]
[;, return, area, ;, }, protected, Rectangle2D, trimPadding, (, Rectangle2D, area, ), {, this, ., padding, ., trim, (, area]
[., trim, (, area, ), ;, return, area, ;, }, protected, Rectangle2D, trimPadding, (, Rectangle2D, area, ), {, this, .]
[., getInsets, (, ), ., trim, (, area, ), ;, return, area, ;, }, protected, Rectangle2D, trimPadding, (, Rectangle2D, area]
[., frame, ., getInsets, (, ), ., trim, (, area, ), ;, return, area, ;, }, protected, Rectangle2D, trimPadding, (]
[), ;, return, area, ;, }, protected, Rectangle2D, trimPadding, (, Rectangle2D, area, ), {, this, ., padding, ., trim, (]
[;, }, protected, Rectangle2D, trimPadding, (, Rectangle2D, area, ), {, this, ., padding, ., trim, (, area, ), ;, return]
[;, return, area, ;, }, protected, void, drawBorder, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, this, ., frame, .]
[., trim, (, area, ), ;, return, area, ;, }, protected, void, drawBorder, (, Graphics2D, g2, ,, Rectangle2D, area, )]
[., padding, ., trim, (, area, ), ;, return, area, ;, }, protected, void, drawBorder, (, Graphics2D, g2, ,, Rectangle2D]
[), ;, return, area, ;, }, protected, void, drawBorder, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, this, ., frame]
[;, }, protected, void, drawBorder, (, Graphics2D, g2, ,, Rectangle2D, area, ), {, this, ., frame, ., draw, (, g2]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[., draw, (, g2, ,, area, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj]
[., frame, ., draw, (, g2, ,, area, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if]
[,, area, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, AbstractBlock, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, AbstractBlock, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, AbstractBlock, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, AbstractBlock, ), ), {, return, false, ;, }, AbstractBlock, that, =, (]
[), {, return, false, ;, }, AbstractBlock, that, =, (, AbstractBlock, ), obj, ;, if, (, !, ObjectUtilities, ., equal]
[), {, return, false, ;, }, AbstractBlock, that, =, (, AbstractBlock, ), obj, ;, if, (, !, ObjectUtilities, ., equal]
[), ), {, return, false, ;, }, AbstractBlock, that, =, (, AbstractBlock, ), obj, ;, if, (, !, ObjectUtilities, .]
[instanceof, AbstractBlock, ), ), {, return, false, ;, }, AbstractBlock, that, =, (, AbstractBlock, ), obj, ;, if, (, !]
[;, }, AbstractBlock, that, =, (, AbstractBlock, ), obj, ;, if, (, !, ObjectUtilities, ., equal, (, this, ., id]
[;, if, (, !, ObjectUtilities, ., equal, (, this, ., id, ,, that, ., id, ), ), {, return, false]
[;, if, (, !, ObjectUtilities, ., equal, (, this, ., id, ,, that, ., id, ), ), {, return, false]
[), {, return, false, ;, }, if, (, !, this, ., frame, ., equals, (, that, ., frame, ), )]
[), {, return, false, ;, }, if, (, !, this, ., frame, ., equals, (, that, ., frame, ), )]
[., equal, (, this, ., id, ,, that, ., id, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., id, ), ), {, return, false, ;, }, if, (, !, this, ., frame, ., equals, (]
[., id, ,, that, ., id, ), ), {, return, false, ;, }, if, (, !, this, ., frame, .]
[), ), {, return, false, ;, }, if, (, !, this, ., frame, ., equals, (, that, ., frame, )]
[., id, ), ), {, return, false, ;, }, if, (, !, this, ., frame, ., equals, (, that, .]
[;, }, if, (, !, this, ., frame, ., equals, (, that, ., frame, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, !, this, ., bounds, ., equals, (, that, ., bounds, ), )]
[), {, return, false, ;, }, if, (, !, this, ., bounds, ., equals, (, that, ., bounds, ), )]
[., equals, (, that, ., frame, ), ), {, return, false, ;, }, if, (, !, this, ., bounds, .]
[., frame, ., equals, (, that, ., frame, ), ), {, return, false, ;, }, if, (, !, this, .]
[), ), {, return, false, ;, }, if, (, !, this, ., bounds, ., equals, (, that, ., bounds, )]
[., frame, ), ), {, return, false, ;, }, if, (, !, this, ., bounds, ., equals, (, that, .]
[;, }, if, (, !, this, ., bounds, ., equals, (, that, ., bounds, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, !, this, ., margin, ., equals, (, that, ., margin, ), )]
[), {, return, false, ;, }, if, (, !, this, ., margin, ., equals, (, that, ., margin, ), )]
[., equals, (, that, ., bounds, ), ), {, return, false, ;, }, if, (, !, this, ., margin, .]
[., bounds, ., equals, (, that, ., bounds, ), ), {, return, false, ;, }, if, (, !, this, .]
[), ), {, return, false, ;, }, if, (, !, this, ., margin, ., equals, (, that, ., margin, )]
[., bounds, ), ), {, return, false, ;, }, if, (, !, this, ., margin, ., equals, (, that, .]
[;, }, if, (, !, this, ., margin, ., equals, (, that, ., margin, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, !, this, ., padding, ., equals, (, that, ., padding, ), )]
[), {, return, false, ;, }, if, (, !, this, ., padding, ., equals, (, that, ., padding, ), )]
[., equals, (, that, ., margin, ), ), {, return, false, ;, }, if, (, !, this, ., padding, .]
[., margin, ., equals, (, that, ., margin, ), ), {, return, false, ;, }, if, (, !, this, .]
[), ), {, return, false, ;, }, if, (, !, this, ., padding, ., equals, (, that, ., padding, )]
[., margin, ), ), {, return, false, ;, }, if, (, !, this, ., padding, ., equals, (, that, .]
[;, }, if, (, !, this, ., padding, ., equals, (, that, ., padding, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., height, !=, that, ., height, ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., height, !=, that, ., height, ), {, return, false, ;]
[., equals, (, that, ., padding, ), ), {, return, false, ;, }, if, (, this, ., height, !=, that]
[., padding, ., equals, (, that, ., padding, ), ), {, return, false, ;, }, if, (, this, ., height]
[), ), {, return, false, ;, }, if, (, this, ., height, !=, that, ., height, ), {, return, false]
[., padding, ), ), {, return, false, ;, }, if, (, this, ., height, !=, that, ., height, ), {]
[;, }, if, (, this, ., height, !=, that, ., height, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., width, !=, that, ., width, ), {, return, false, ;]
[!=, that, ., height, ), {, return, false, ;, }, if, (, this, ., width, !=, that, ., width, )]
[., height, !=, that, ., height, ), {, return, false, ;, }, if, (, this, ., width, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., width, !=, that, ., width, ), {, return, false, ;]
[., height, ), {, return, false, ;, }, if, (, this, ., width, !=, that, ., width, ), {, return]
[;, }, if, (, this, ., width, !=, that, ., width, ), {, return, false, ;, }, return, true, ;]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractBlock, clone]
[!=, that, ., width, ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws]
[., width, !=, that, ., width, ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (]
[), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractBlock, clone]
[., width, ), {, return, false, ;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {]
[;, }, return, true, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractBlock, clone, =, (, AbstractBlock, )]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractBlock, clone, =, (, AbstractBlock, ), super, ., clone, (]
[;, clone, ., bounds, =, (, Rectangle2D, ), ShapeUtilities, ., clone, (, this, ., bounds, ), ;, if, (, this]
[;, clone, ., bounds, =, (, Rectangle2D, ), ShapeUtilities, ., clone, (, this, ., bounds, ), ;, if, (, this]
[., clone, (, ), ;, clone, ., bounds, =, (, Rectangle2D, ), ShapeUtilities, ., clone, (, this, ., bounds, )]
[=, (, Rectangle2D, ), ShapeUtilities, ., clone, (, this, ., bounds, ), ;, if, (, this, ., frame, instanceof, PublicCloneable]
[., bounds, =, (, Rectangle2D, ), ShapeUtilities, ., clone, (, this, ., bounds, ), ;, if, (, this, ., frame]
[;, if, (, this, ., frame, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., frame, ;]
[;, if, (, this, ., frame, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., frame, ;]
[., clone, (, this, ., bounds, ), ;, if, (, this, ., frame, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =]
[), ;, if, (, this, ., frame, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., frame]
[., bounds, ), ;, if, (, this, ., frame, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this]
[), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., frame, ;, clone, ., frame, =, (, BlockFrame, ), pc]
[instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., frame, ;, clone, ., frame, =, (, BlockFrame]
[., frame, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., frame, ;, clone, ., frame, =]
[;, clone, ., frame, =, (, BlockFrame, ), pc, ., clone, (, ), ;, }, return, clone, ;, }, private]
[;, clone, ., frame, =, (, BlockFrame, ), pc, ., clone, (, ), ;, }, return, clone, ;, }, private]
[., frame, ;, clone, ., frame, =, (, BlockFrame, ), pc, ., clone, (, ), ;, }, return, clone, ;]
[=, (, BlockFrame, ), pc, ., clone, (, ), ;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream]
[., frame, =, (, BlockFrame, ), pc, ., clone, (, ), ;, }, return, clone, ;, }, private, void, writeObject]
[;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (]
[;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (]
[., clone, (, ), ;, }, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, .]
[;, SerialUtilities, ., writeShape, (, this, ., bounds, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, )]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writeShape, (, this, ., bounds, ,, stream, ), ;, }, private, void, readObject]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[., writeShape, (, this, ., bounds, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException]
[,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject]
[., bounds, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream]
[), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, )]
[;, this, ., bounds, =, (, Rectangle2D, ), SerialUtilities, ., readShape, (, stream, ), ;, }, }]
[., defaultReadObject, (, ), ;, this, ., bounds, =, (, Rectangle2D, ), SerialUtilities, ., readShape, (, stream, ), ;, }]
[=, (, Rectangle2D, ), SerialUtilities, ., readShape, (, stream, ), ;, }, }]
[., bounds, =, (, Rectangle2D, ), SerialUtilities, ., readShape, (, stream, ), ;, }, }]
[;, }, }]
[;, }, }]
[., readShape, (, stream, ), ;, }, }]
[), ;, }, }]
