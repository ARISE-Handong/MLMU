[;, static, final, char, PREFIX, =, '$', ;, static, final, String, PREFIX_STRING, =, "$", ;, private, final, AbstractCompiler, compiler, ;]
[., getLogger, (, NameAnonymousFunctionsMapped, ., class, ., getName, (, ), ), ;, static, final, char, PREFIX, =, '$', ;, static]
[), ;, static, final, char, PREFIX, =, '$', ;, static, final, String, PREFIX_STRING, =, "$", ;, private, final, AbstractCompiler, compiler]
[., getName, (, ), ), ;, static, final, char, PREFIX, =, '$', ;, static, final, String, PREFIX_STRING, =, "$", ;]
[;, static, final, String, PREFIX_STRING, =, "$", ;, private, final, AbstractCompiler, compiler, ;, private, final, NameGenerator, nameGenerator, ;, private, final]
[;, private, final, AbstractCompiler, compiler, ;, private, final, NameGenerator, nameGenerator, ;, private, final, VariableMap, previousMap, ;, private, final, Map, <]
[;, private, int, bytesUsed, =, 0, ;, NameAnonymousFunctionsMapped, (, AbstractCompiler, compiler, ,, VariableMap, previousMap, ), {, this, ., compiler, =]
[;, NameAnonymousFunctionsMapped, (, AbstractCompiler, compiler, ,, VariableMap, previousMap, ), {, this, ., compiler, =, compiler, ;, Set, <, String, >]
[=, compiler, ;, Set, <, String, >, reserved, =, previousMap, !=, null, ?, previousMap, ., getNewNameToOriginalNameMap, (, ), ., keySet]
[., compiler, =, compiler, ;, Set, <, String, >, reserved, =, previousMap, !=, null, ?, previousMap, ., getNewNameToOriginalNameMap, (, )]
[;, Set, <, String, >, reserved, =, previousMap, !=, null, ?, previousMap, ., getNewNameToOriginalNameMap, (, ), ., keySet, (, )]
[;, this, ., nameGenerator, =, new, NameGenerator, (, reserved, ,, PREFIX_STRING, ,, null, ), ;, this, ., previousMap, =, previousMap]
[?, previousMap, ., getNewNameToOriginalNameMap, (, ), ., keySet, (, ), :, Collections, ., <, String, >, emptySet, (, ), ;]
[!=, null, ?, previousMap, ., getNewNameToOriginalNameMap, (, ), ., keySet, (, ), :, Collections, ., <, String, >, emptySet, (]
[?, previousMap, ., getNewNameToOriginalNameMap, (, ), ., keySet, (, ), :, Collections, ., <, String, >, emptySet, (, ), ;]
[:, Collections, ., <, String, >, emptySet, (, ), ;, this, ., nameGenerator, =, new, NameGenerator, (, reserved, ,, PREFIX_STRING]
[., keySet, (, ), :, Collections, ., <, String, >, emptySet, (, ), ;, this, ., nameGenerator, =, new, NameGenerator]
[., getNewNameToOriginalNameMap, (, ), ., keySet, (, ), :, Collections, ., <, String, >, emptySet, (, ), ;, this, .]
[;, this, ., nameGenerator, =, new, NameGenerator, (, reserved, ,, PREFIX_STRING, ,, null, ), ;, this, ., previousMap, =, previousMap]
[., <, String, >, emptySet, (, ), ;, this, ., nameGenerator, =, new, NameGenerator, (, reserved, ,, PREFIX_STRING, ,, null]
[=, new, NameGenerator, (, reserved, ,, PREFIX_STRING, ,, null, ), ;, this, ., previousMap, =, previousMap, ;, this, ., renameMap]
[., nameGenerator, =, new, NameGenerator, (, reserved, ,, PREFIX_STRING, ,, null, ), ;, this, ., previousMap, =, previousMap, ;, this]
[;, this, ., previousMap, =, previousMap, ;, this, ., renameMap, =, Maps, ., newHashMap, (, ), ;, }, @, Override]
[,, PREFIX_STRING, ,, null, ), ;, this, ., previousMap, =, previousMap, ;, this, ., renameMap, =, Maps, ., newHashMap, (]
[,, null, ), ;, this, ., previousMap, =, previousMap, ;, this, ., renameMap, =, Maps, ., newHashMap, (, ), ;]
[), ;, this, ., previousMap, =, previousMap, ;, this, ., renameMap, =, Maps, ., newHashMap, (, ), ;, }, @]
[=, previousMap, ;, this, ., renameMap, =, Maps, ., newHashMap, (, ), ;, }, @, Override, public, void, process, (]
[., previousMap, =, previousMap, ;, this, ., renameMap, =, Maps, ., newHashMap, (, ), ;, }, @, Override, public, void]
[;, this, ., renameMap, =, Maps, ., newHashMap, (, ), ;, }, @, Override, public, void, process, (, Node, externs]
[=, Maps, ., newHashMap, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, )]
[., renameMap, =, Maps, ., newHashMap, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, AnonymousFunctionNamingCallback, namingCallback, =, new, AnonymousFunctionNamingCallback]
[., newHashMap, (, ), ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, AnonymousFunctionNamingCallback]
[;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, namingCallback, ), ;, logger, ., fine, (, "Named ", +, namedCount, +]
[), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, namingCallback, ), ;, logger, ., fine, (, "Named ", +, namedCount]
[;, logger, ., fine, (, "Named ", +, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, if, (, namedCount, >]
[., traverse, (, compiler, ,, root, ,, namingCallback, ), ;, logger, ., fine, (, "Named ", +, namedCount, +, " anon functions using ", +]
[,, root, ,, namingCallback, ), ;, logger, ., fine, (, "Named ", +, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes", )]
[,, namingCallback, ), ;, logger, ., fine, (, "Named ", +, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, if]
[), ;, logger, ., fine, (, "Named ", +, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, if, (, namedCount]
[;, if, (, namedCount, >, 0, ), {, compiler, ., reportCodeChange, (, ), ;, }, }, private, class, MappedFunctionNamer, implements]
[., fine, (, "Named ", +, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, if, (, namedCount, >, 0, )]
[), ;, if, (, namedCount, >, 0, ), {, compiler, ., reportCodeChange, (, ), ;, }, }, private, class, MappedFunctionNamer]
[+, " bytes", ), ;, if, (, namedCount, >, 0, ), {, compiler, ., reportCodeChange, (, ), ;, }, }, private]
[+, bytesUsed, +, " bytes", ), ;, if, (, namedCount, >, 0, ), {, compiler, ., reportCodeChange, (, ), ;, }]
[+, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, if, (, namedCount, >, 0, ), {, compiler, ., reportCodeChange, (, )]
[+, namedCount, +, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, if, (, namedCount, >, 0, ), {, compiler, ., reportCodeChange]
[+, " anon functions using ", +, bytesUsed, +, " bytes", ), ;, if, (, namedCount, >, 0, ), {, compiler, ., reportCodeChange, (, )]
[+, bytesUsed, +, " bytes", ), ;, if, (, namedCount, >, 0, ), {, compiler, ., reportCodeChange, (, ), ;, }]
[+, " bytes", ), ;, if, (, namedCount, >, 0, ), {, compiler, ., reportCodeChange, (, ), ;, }, }, private]
[), ;, if, (, namedCount, >, 0, ), {, compiler, ., reportCodeChange, (, ), ;, }, }, private, class, MappedFunctionNamer]
[), {, compiler, ., reportCodeChange, (, ), ;, }, }, private, class, MappedFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, static, final]
[>, 0, ), {, compiler, ., reportCodeChange, (, ), ;, }, }, private, class, MappedFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {]
[), {, compiler, ., reportCodeChange, (, ), ;, }, }, private, class, MappedFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, static, final]
[;, }, }, private, class, MappedFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, static, final, char, DELIMITER, =, '.', ;, @, Override]
[., reportCodeChange, (, ), ;, }, }, private, class, MappedFunctionNamer, implements, AnonymousFunctionNamingCallback, ., FunctionNamer, {, static, final, char, DELIMITER, =]
[;, @, Override, public, final, String, getName, (, Node, node, ), {, switch, (, node, ., getType, (, ), )]
[), {, case, Token, ., NAME, :, case, Token, ., STRING, :, case, Token, ., STRING_KEY, :, return, node, .]
[., getType, (, ), ), {, case, Token, ., NAME, :, case, Token, ., STRING, :, case, Token, ., STRING_KEY]
[:, case, Token, ., STRING, :, case, Token, ., STRING_KEY, :, return, node, ., getString, (, ), ;, default, :]
[., NAME, :, case, Token, ., STRING, :, case, Token, ., STRING_KEY, :, return, node, ., getString, (, ), ;]
[:, case, Token, ., STRING_KEY, :, return, node, ., getString, (, ), ;, default, :, return, new, CodePrinter, ., Builder]
[., STRING, :, case, Token, ., STRING_KEY, :, return, node, ., getString, (, ), ;, default, :, return, new, CodePrinter]
[:, return, node, ., getString, (, ), ;, default, :, return, new, CodePrinter, ., Builder, (, node, ), ., build]
[., STRING_KEY, :, return, node, ., getString, (, ), ;, default, :, return, new, CodePrinter, ., Builder, (, node, )]
[;, default, :, return, new, CodePrinter, ., Builder, (, node, ), ., build, (, ), ;, }, }, @, Override]
[., getString, (, ), ;, default, :, return, new, CodePrinter, ., Builder, (, node, ), ., build, (, ), ;]
[;, }, }, @, Override, public, final, void, setFunctionName, (, String, name, ,, Node, fnNode, ), {, Node, fnNameNode, =]
[., build, (, ), ;, }, }, @, Override, public, final, void, setFunctionName, (, String, name, ,, Node, fnNode, )]
[), ., build, (, ), ;, }, }, @, Override, public, final, void, setFunctionName, (, String, name, ,, Node, fnNode]
[;, String, newName, =, getAlternateName, (, name, ), ;, fnNameNode, ., setString, (, newName, ), ;, namedCount, ++, ;, bytesUsed]
[., getFirstChild, (, ), ;, String, newName, =, getAlternateName, (, name, ), ;, fnNameNode, ., setString, (, newName, ), ;]
[;, fnNameNode, ., setString, (, newName, ), ;, namedCount, ++, ;, bytesUsed, +=, newName, ., length, (, ), ;, }]
[), ;, fnNameNode, ., setString, (, newName, ), ;, namedCount, ++, ;, bytesUsed, +=, newName, ., length, (, ), ;]
[;, namedCount, ++, ;, bytesUsed, +=, newName, ., length, (, ), ;, }, String, getAlternateName, (, String, name, ), {]
[., setString, (, newName, ), ;, namedCount, ++, ;, bytesUsed, +=, newName, ., length, (, ), ;, }, String, getAlternateName]
[), ;, namedCount, ++, ;, bytesUsed, +=, newName, ., length, (, ), ;, }, String, getAlternateName, (, String, name, )]
[;, bytesUsed, +=, newName, ., length, (, ), ;, }, String, getAlternateName, (, String, name, ), {, String, newName, =]
[++, ;, bytesUsed, +=, newName, ., length, (, ), ;, }, String, getAlternateName, (, String, name, ), {, String, newName]
[+=, newName, ., length, (, ), ;, }, String, getAlternateName, (, String, name, ), {, String, newName, =, renameMap, .]
[;, }, String, getAlternateName, (, String, name, ), {, String, newName, =, renameMap, ., get, (, name, ), ;, if]
[., length, (, ), ;, }, String, getAlternateName, (, String, name, ), {, String, newName, =, renameMap, ., get, (]
[;, if, (, newName, ==, null, ), {, if, (, previousMap, !=, null, ), {, newName, =, previousMap, ., lookupNewName]
[., get, (, name, ), ;, if, (, newName, ==, null, ), {, if, (, previousMap, !=, null, ), {]
[), ;, if, (, newName, ==, null, ), {, if, (, previousMap, !=, null, ), {, newName, =, previousMap, .]
[), {, if, (, previousMap, !=, null, ), {, newName, =, previousMap, ., lookupNewName, (, name, ), ;, }, if]
[==, null, ), {, if, (, previousMap, !=, null, ), {, newName, =, previousMap, ., lookupNewName, (, name, ), ;]
[), {, if, (, previousMap, !=, null, ), {, newName, =, previousMap, ., lookupNewName, (, name, ), ;, }, if]
[), {, newName, =, previousMap, ., lookupNewName, (, name, ), ;, }, if, (, newName, ==, null, ), {, newName]
[!=, null, ), {, newName, =, previousMap, ., lookupNewName, (, name, ), ;, }, if, (, newName, ==, null, )]
[), {, newName, =, previousMap, ., lookupNewName, (, name, ), ;, }, if, (, newName, ==, null, ), {, newName]
[=, previousMap, ., lookupNewName, (, name, ), ;, }, if, (, newName, ==, null, ), {, newName, =, nameGenerator, .]
[;, }, if, (, newName, ==, null, ), {, newName, =, nameGenerator, ., generateNextName, (, ), ;, }, renameMap, .]
[., lookupNewName, (, name, ), ;, }, if, (, newName, ==, null, ), {, newName, =, nameGenerator, ., generateNextName, (]
[), ;, }, if, (, newName, ==, null, ), {, newName, =, nameGenerator, ., generateNextName, (, ), ;, }, renameMap]
[), {, newName, =, nameGenerator, ., generateNextName, (, ), ;, }, renameMap, ., put, (, name, ,, newName, ), ;]
[==, null, ), {, newName, =, nameGenerator, ., generateNextName, (, ), ;, }, renameMap, ., put, (, name, ,, newName]
[), {, newName, =, nameGenerator, ., generateNextName, (, ), ;, }, renameMap, ., put, (, name, ,, newName, ), ;]
[=, nameGenerator, ., generateNextName, (, ), ;, }, renameMap, ., put, (, name, ,, newName, ), ;, }, return, newName]
[;, }, renameMap, ., put, (, name, ,, newName, ), ;, }, return, newName, ;, }, @, Override, public, final]
[., generateNextName, (, ), ;, }, renameMap, ., put, (, name, ,, newName, ), ;, }, return, newName, ;, }]
[;, }, return, newName, ;, }, @, Override, public, final, String, getCombinedName, (, String, lhs, ,, String, rhs, ), {]
[., put, (, name, ,, newName, ), ;, }, return, newName, ;, }, @, Override, public, final, String, getCombinedName, (]
[,, newName, ), ;, }, return, newName, ;, }, @, Override, public, final, String, getCombinedName, (, String, lhs, ,, String]
[), ;, }, return, newName, ;, }, @, Override, public, final, String, getCombinedName, (, String, lhs, ,, String, rhs, )]
[;, }, @, Override, public, final, String, getCombinedName, (, String, lhs, ,, String, rhs, ), {, return, lhs, +, DELIMITER]
[;, }, }, VariableMap, getFunctionMap, (, ), {, return, new, VariableMap, (, ImmutableMap, ., copyOf, (, renameMap, ), ), ;]
[+, rhs, ;, }, }, VariableMap, getFunctionMap, (, ), {, return, new, VariableMap, (, ImmutableMap, ., copyOf, (, renameMap, )]
[+, DELIMITER, +, rhs, ;, }, }, VariableMap, getFunctionMap, (, ), {, return, new, VariableMap, (, ImmutableMap, ., copyOf, (]
[+, rhs, ;, }, }, VariableMap, getFunctionMap, (, ), {, return, new, VariableMap, (, ImmutableMap, ., copyOf, (, renameMap, )]
[;, }, }, VariableMap, getFunctionMap, (, ), {, return, new, VariableMap, (, ImmutableMap, ., copyOf, (, renameMap, ), ), ;]
[;, }, }]
[), ;, }, }]
[., copyOf, (, renameMap, ), ), ;, }, }]
[), ), ;, }, }]
