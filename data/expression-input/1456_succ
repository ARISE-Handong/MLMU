[), {, return, (, p2, ==, null, ), ;, }, if, (, p2, ==, null, ), {, return, false, ;]
[==, null, ), {, return, (, p2, ==, null, ), ;, }, if, (, p2, ==, null, ), {, return]
[), {, return, (, p2, ==, null, ), ;, }, if, (, p2, ==, null, ), {, return, false, ;]
[;, }, if, (, p2, ==, null, ), {, return, false, ;, }, boolean, result, =, false, ;, if, (]
[), ;, }, if, (, p2, ==, null, ), {, return, false, ;, }, boolean, result, =, false, ;, if]
[==, null, ), ;, }, if, (, p2, ==, null, ), {, return, false, ;, }, boolean, result, =, false]
[), ;, }, if, (, p2, ==, null, ), {, return, false, ;, }, boolean, result, =, false, ;, if]
[), {, return, false, ;, }, boolean, result, =, false, ;, if, (, p1, instanceof, GradientPaint, &&, p2, instanceof, GradientPaint]
[==, null, ), {, return, false, ;, }, boolean, result, =, false, ;, if, (, p1, instanceof, GradientPaint, &&, p2]
[), {, return, false, ;, }, boolean, result, =, false, ;, if, (, p1, instanceof, GradientPaint, &&, p2, instanceof, GradientPaint]
[;, }, boolean, result, =, false, ;, if, (, p1, instanceof, GradientPaint, &&, p2, instanceof, GradientPaint, ), {, GradientPaint, gp1]
[;, if, (, p1, instanceof, GradientPaint, &&, p2, instanceof, GradientPaint, ), {, GradientPaint, gp1, =, (, GradientPaint, ), p1, ;]
[), {, GradientPaint, gp1, =, (, GradientPaint, ), p1, ;, GradientPaint, gp2, =, (, GradientPaint, ), p2, ;, result, =]
[&&, p2, instanceof, GradientPaint, ), {, GradientPaint, gp1, =, (, GradientPaint, ), p1, ;, GradientPaint, gp2, =, (, GradientPaint, )]
[instanceof, GradientPaint, &&, p2, instanceof, GradientPaint, ), {, GradientPaint, gp1, =, (, GradientPaint, ), p1, ;, GradientPaint, gp2, =, (]
[), {, GradientPaint, gp1, =, (, GradientPaint, ), p1, ;, GradientPaint, gp2, =, (, GradientPaint, ), p2, ;, result, =]
[instanceof, GradientPaint, ), {, GradientPaint, gp1, =, (, GradientPaint, ), p1, ;, GradientPaint, gp2, =, (, GradientPaint, ), p2, ;]
[;, GradientPaint, gp2, =, (, GradientPaint, ), p2, ;, result, =, gp1, ., getColor1, (, ), ., equals, (, gp2]
[;, GradientPaint, gp2, =, (, GradientPaint, ), p2, ;, result, =, gp1, ., getColor1, (, ), ., equals, (, gp2]
[;, result, =, gp1, ., getColor1, (, ), ., equals, (, gp2, ., getColor1, (, ), ), &&, gp1, .]
[;, result, =, gp1, ., getColor1, (, ), ., equals, (, gp2, ., getColor1, (, ), ), &&, gp1, .]
[=, gp1, ., getColor1, (, ), ., equals, (, gp2, ., getColor1, (, ), ), &&, gp1, ., getColor2, (]
[;, }, else, {, result, =, p1, ., equals, (, p2, ), ;, }, return, result, ;, }, public, static]
[&&, gp1, ., getTransparency, (, ), ==, gp1, ., getTransparency, (, ), ;, }, else, {, result, =, p1, .]
[&&, gp1, ., isCyclic, (, ), ==, gp2, ., isCyclic, (, ), &&, gp1, ., getTransparency, (, ), ==, gp1]
[&&, gp1, ., getPoint2, (, ), ., equals, (, gp2, ., getPoint2, (, ), ), &&, gp1, ., isCyclic, (]
[&&, gp1, ., getPoint1, (, ), ., equals, (, gp2, ., getPoint1, (, ), ), &&, gp1, ., getPoint2, (]
[&&, gp1, ., getColor2, (, ), ., equals, (, gp2, ., getColor2, (, ), ), &&, gp1, ., getPoint1, (]
[., equals, (, gp2, ., getColor1, (, ), ), &&, gp1, ., getColor2, (, ), ., equals, (, gp2, .]
[., getColor1, (, ), ., equals, (, gp2, ., getColor1, (, ), ), &&, gp1, ., getColor2, (, ), .]
[), &&, gp1, ., getColor2, (, ), ., equals, (, gp2, ., getColor2, (, ), ), &&, gp1, ., getPoint1]
[., getColor1, (, ), ), &&, gp1, ., getColor2, (, ), ., equals, (, gp2, ., getColor2, (, ), )]
[&&, gp1, ., getPoint1, (, ), ., equals, (, gp2, ., getPoint1, (, ), ), &&, gp1, ., getPoint2, (]
[., equals, (, gp2, ., getColor2, (, ), ), &&, gp1, ., getPoint1, (, ), ., equals, (, gp2, .]
[., getColor2, (, ), ., equals, (, gp2, ., getColor2, (, ), ), &&, gp1, ., getPoint1, (, ), .]
[), &&, gp1, ., getPoint1, (, ), ., equals, (, gp2, ., getPoint1, (, ), ), &&, gp1, ., getPoint2]
[., getColor2, (, ), ), &&, gp1, ., getPoint1, (, ), ., equals, (, gp2, ., getPoint1, (, ), )]
[&&, gp1, ., getPoint2, (, ), ., equals, (, gp2, ., getPoint2, (, ), ), &&, gp1, ., isCyclic, (]
[., equals, (, gp2, ., getPoint1, (, ), ), &&, gp1, ., getPoint2, (, ), ., equals, (, gp2, .]
[., getPoint1, (, ), ., equals, (, gp2, ., getPoint1, (, ), ), &&, gp1, ., getPoint2, (, ), .]
[), &&, gp1, ., getPoint2, (, ), ., equals, (, gp2, ., getPoint2, (, ), ), &&, gp1, ., isCyclic]
[., getPoint1, (, ), ), &&, gp1, ., getPoint2, (, ), ., equals, (, gp2, ., getPoint2, (, ), )]
[&&, gp1, ., isCyclic, (, ), ==, gp2, ., isCyclic, (, ), &&, gp1, ., getTransparency, (, ), ==, gp1]
[., equals, (, gp2, ., getPoint2, (, ), ), &&, gp1, ., isCyclic, (, ), ==, gp2, ., isCyclic, (]
[., getPoint2, (, ), ., equals, (, gp2, ., getPoint2, (, ), ), &&, gp1, ., isCyclic, (, ), ==]
[), &&, gp1, ., isCyclic, (, ), ==, gp2, ., isCyclic, (, ), &&, gp1, ., getTransparency, (, ), ==]
[., getPoint2, (, ), ), &&, gp1, ., isCyclic, (, ), ==, gp2, ., isCyclic, (, ), &&, gp1, .]
[&&, gp1, ., getTransparency, (, ), ==, gp1, ., getTransparency, (, ), ;, }, else, {, result, =, p1, .]
[==, gp2, ., isCyclic, (, ), &&, gp1, ., getTransparency, (, ), ==, gp1, ., getTransparency, (, ), ;, }]
[., isCyclic, (, ), ==, gp2, ., isCyclic, (, ), &&, gp1, ., getTransparency, (, ), ==, gp1, ., getTransparency]
[&&, gp1, ., getTransparency, (, ), ==, gp1, ., getTransparency, (, ), ;, }, else, {, result, =, p1, .]
[., isCyclic, (, ), &&, gp1, ., getTransparency, (, ), ==, gp1, ., getTransparency, (, ), ;, }, else, {]
[;, }, else, {, result, =, p1, ., equals, (, p2, ), ;, }, return, result, ;, }, public, static]
[==, gp1, ., getTransparency, (, ), ;, }, else, {, result, =, p1, ., equals, (, p2, ), ;, }]
[., getTransparency, (, ), ==, gp1, ., getTransparency, (, ), ;, }, else, {, result, =, p1, ., equals, (]
[;, }, else, {, result, =, p1, ., equals, (, p2, ), ;, }, return, result, ;, }, public, static]
[., getTransparency, (, ), ;, }, else, {, result, =, p1, ., equals, (, p2, ), ;, }, return, result]
[=, p1, ., equals, (, p2, ), ;, }, return, result, ;, }, public, static, String, colorToString, (, Color, c]
[;, }, return, result, ;, }, public, static, String, colorToString, (, Color, c, ), {, try, {, Field, [, ]]
[., equals, (, p2, ), ;, }, return, result, ;, }, public, static, String, colorToString, (, Color, c, ), {]
[), ;, }, return, result, ;, }, public, static, String, colorToString, (, Color, c, ), {, try, {, Field, []
[;, }, public, static, String, colorToString, (, Color, c, ), {, try, {, Field, [, ], fields, =, Color, .]
[;, for, (, int, i, =, 0, ;, i, <, fields, ., length, ;, i, ++, ), {, Field, f]
[., getFields, (, ), ;, for, (, int, i, =, 0, ;, i, <, fields, ., length, ;, i, ++]
[;, i, <, fields, ., length, ;, i, ++, ), {, Field, f, =, fields, [, i, ], ;, if]
[;, i, ++, ), {, Field, f, =, fields, [, i, ], ;, if, (, Modifier, ., isPublic, (, f]
[<, fields, ., length, ;, i, ++, ), {, Field, f, =, fields, [, i, ], ;, if, (, Modifier]
[;, i, ++, ), {, Field, f, =, fields, [, i, ], ;, if, (, Modifier, ., isPublic, (, f]
[., length, ;, i, ++, ), {, Field, f, =, fields, [, i, ], ;, if, (, Modifier, ., isPublic]
[), {, Field, f, =, fields, [, i, ], ;, if, (, Modifier, ., isPublic, (, f, ., getModifiers, (]
[++, ), {, Field, f, =, fields, [, i, ], ;, if, (, Modifier, ., isPublic, (, f, ., getModifiers]
[;, if, (, Modifier, ., isPublic, (, f, ., getModifiers, (, ), ), &&, Modifier, ., isFinal, (, f, .]
[[, i, ], ;, if, (, Modifier, ., isPublic, (, f, ., getModifiers, (, ), ), &&, Modifier, ., isFinal]
[], ;, if, (, Modifier, ., isPublic, (, f, ., getModifiers, (, ), ), &&, Modifier, ., isFinal, (, f]
[), {, String, name, =, f, ., getName, (, ), ;, Object, oColor, =, f, ., get, (, null, )]
[&&, Modifier, ., isStatic, (, f, ., getModifiers, (, ), ), ), {, String, name, =, f, ., getName, (]
[&&, Modifier, ., isFinal, (, f, ., getModifiers, (, ), ), &&, Modifier, ., isStatic, (, f, ., getModifiers, (]
[., isPublic, (, f, ., getModifiers, (, ), ), &&, Modifier, ., isFinal, (, f, ., getModifiers, (, ), )]
[), &&, Modifier, ., isFinal, (, f, ., getModifiers, (, ), ), &&, Modifier, ., isStatic, (, f, ., getModifiers]
[., getModifiers, (, ), ), &&, Modifier, ., isFinal, (, f, ., getModifiers, (, ), ), &&, Modifier, ., isStatic]
[&&, Modifier, ., isStatic, (, f, ., getModifiers, (, ), ), ), {, String, name, =, f, ., getName, (]
[., isFinal, (, f, ., getModifiers, (, ), ), &&, Modifier, ., isStatic, (, f, ., getModifiers, (, ), )]
[), &&, Modifier, ., isStatic, (, f, ., getModifiers, (, ), ), ), {, String, name, =, f, ., getName]
[., getModifiers, (, ), ), &&, Modifier, ., isStatic, (, f, ., getModifiers, (, ), ), ), {, String, name]
[), {, String, name, =, f, ., getName, (, ), ;, Object, oColor, =, f, ., get, (, null, )]
[., isStatic, (, f, ., getModifiers, (, ), ), ), {, String, name, =, f, ., getName, (, ), ;]
[), ), {, String, name, =, f, ., getName, (, ), ;, Object, oColor, =, f, ., get, (, null]
[., getModifiers, (, ), ), ), {, String, name, =, f, ., getName, (, ), ;, Object, oColor, =, f]
[;, Object, oColor, =, f, ., get, (, null, ), ;, if, (, oColor, instanceof, Color, ), {, if, (]
[., getName, (, ), ;, Object, oColor, =, f, ., get, (, null, ), ;, if, (, oColor, instanceof, Color]
[;, if, (, oColor, instanceof, Color, ), {, if, (, c, ., equals, (, oColor, ), ), {, return, name]
[., get, (, null, ), ;, if, (, oColor, instanceof, Color, ), {, if, (, c, ., equals, (, oColor]
[), ;, if, (, oColor, instanceof, Color, ), {, if, (, c, ., equals, (, oColor, ), ), {, return]
[), {, if, (, c, ., equals, (, oColor, ), ), {, return, name, ;, }, }, }, }, }]
[instanceof, Color, ), {, if, (, c, ., equals, (, oColor, ), ), {, return, name, ;, }, }, }]
[), {, return, name, ;, }, }, }, }, }, catch, (, Exception, e, ), {, }, String, color, =]
[., equals, (, oColor, ), ), {, return, name, ;, }, }, }, }, }, catch, (, Exception, e, )]
[), ), {, return, name, ;, }, }, }, }, }, catch, (, Exception, e, ), {, }, String, color]
[;, }, }, }, }, }, catch, (, Exception, e, ), {, }, String, color, =, Integer, ., toHexString, (]
[;, StringBuffer, retval, =, new, StringBuffer, (, 7, ), ;, retval, ., append, (, "#", ), ;, int, fillUp, =]
[., toHexString, (, c, ., getRGB, (, ), &, 0x00ffffff, ), ;, StringBuffer, retval, =, new, StringBuffer, (, 7, )]
[), ;, StringBuffer, retval, =, new, StringBuffer, (, 7, ), ;, retval, ., append, (, "#", ), ;, int, fillUp]
[&, 0x00ffffff, ), ;, StringBuffer, retval, =, new, StringBuffer, (, 7, ), ;, retval, ., append, (, "#", ), ;]
[., getRGB, (, ), &, 0x00ffffff, ), ;, StringBuffer, retval, =, new, StringBuffer, (, 7, ), ;, retval, ., append]
[), ;, StringBuffer, retval, =, new, StringBuffer, (, 7, ), ;, retval, ., append, (, "#", ), ;, int, fillUp]
[;, retval, ., append, (, "#", ), ;, int, fillUp, =, 6, -, color, ., length, (, ), ;, for]
[), ;, retval, ., append, (, "#", ), ;, int, fillUp, =, 6, -, color, ., length, (, ), ;]
[;, int, fillUp, =, 6, -, color, ., length, (, ), ;, for, (, int, i, =, 0, ;, i]
[., append, (, "#", ), ;, int, fillUp, =, 6, -, color, ., length, (, ), ;, for, (, int]
[), ;, int, fillUp, =, 6, -, color, ., length, (, ), ;, for, (, int, i, =, 0, ;]
[;, for, (, int, i, =, 0, ;, i, <, fillUp, ;, i, ++, ), {, retval, ., append, (]
[-, color, ., length, (, ), ;, for, (, int, i, =, 0, ;, i, <, fillUp, ;, i, ++]
[;, for, (, int, i, =, 0, ;, i, <, fillUp, ;, i, ++, ), {, retval, ., append, (]
[., length, (, ), ;, for, (, int, i, =, 0, ;, i, <, fillUp, ;, i, ++, ), {]
[;, i, <, fillUp, ;, i, ++, ), {, retval, ., append, (, "0", ), ;, }, retval, ., append]
[;, i, ++, ), {, retval, ., append, (, "0", ), ;, }, retval, ., append, (, color, ), ;]
[<, fillUp, ;, i, ++, ), {, retval, ., append, (, "0", ), ;, }, retval, ., append, (, color]
[;, i, ++, ), {, retval, ., append, (, "0", ), ;, }, retval, ., append, (, color, ), ;]
[), {, retval, ., append, (, "0", ), ;, }, retval, ., append, (, color, ), ;, return, retval, .]
[++, ), {, retval, ., append, (, "0", ), ;, }, retval, ., append, (, color, ), ;, return, retval]
[;, }, retval, ., append, (, color, ), ;, return, retval, ., toString, (, ), ;, }, public, static, Color]
[., append, (, "0", ), ;, }, retval, ., append, (, color, ), ;, return, retval, ., toString, (, )]
[), ;, }, retval, ., append, (, color, ), ;, return, retval, ., toString, (, ), ;, }, public, static]
[;, return, retval, ., toString, (, ), ;, }, public, static, Color, stringToColor, (, String, value, ), {, if, (]
[., append, (, color, ), ;, return, retval, ., toString, (, ), ;, }, public, static, Color, stringToColor, (, String]
[), ;, return, retval, ., toString, (, ), ;, }, public, static, Color, stringToColor, (, String, value, ), {, if]
[;, }, public, static, Color, stringToColor, (, String, value, ), {, if, (, value, ==, null, ), {, return, Color]
[., toString, (, ), ;, }, public, static, Color, stringToColor, (, String, value, ), {, if, (, value, ==, null]
[), {, return, Color, ., black, ;, }, try, {, return, Color, ., decode, (, value, ), ;, }, catch]
[==, null, ), {, return, Color, ., black, ;, }, try, {, return, Color, ., decode, (, value, ), ;]
[), {, return, Color, ., black, ;, }, try, {, return, Color, ., decode, (, value, ), ;, }, catch]
[;, }, try, {, return, Color, ., decode, (, value, ), ;, }, catch, (, NumberFormatException, nfe, ), {, try]
[., black, ;, }, try, {, return, Color, ., decode, (, value, ), ;, }, catch, (, NumberFormatException, nfe, )]
[;, }, catch, (, NumberFormatException, nfe, ), {, try, {, final, Field, f, =, Color, ., class, ., getField, (]
[., decode, (, value, ), ;, }, catch, (, NumberFormatException, nfe, ), {, try, {, final, Field, f, =, Color]
[), ;, }, catch, (, NumberFormatException, nfe, ), {, try, {, final, Field, f, =, Color, ., class, ., getField]
[;, return, (, Color, ), f, ., get, (, null, ), ;, }, catch, (, Exception, ce, ), {, return]
[., getField, (, value, ), ;, return, (, Color, ), f, ., get, (, null, ), ;, }, catch, (]
[), ;, return, (, Color, ), f, ., get, (, null, ), ;, }, catch, (, Exception, ce, ), {]
[;, }, catch, (, Exception, ce, ), {, return, Color, ., black, ;, }, }, }, }]
[;, }, catch, (, Exception, ce, ), {, return, Color, ., black, ;, }, }, }, }]
[., get, (, null, ), ;, }, catch, (, Exception, ce, ), {, return, Color, ., black, ;, }, }]
[), ;, }, catch, (, Exception, ce, ), {, return, Color, ., black, ;, }, }, }, }]
[;, }, }, }, }]
[., black, ;, }, }, }, }]
