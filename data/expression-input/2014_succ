[;, protected, double, [, ], stateVariation, ;, private, double, scalingH, ;, private, double, referenceTime, ;, private, double, [, ], scaled]
[;, protected, double, [, ], stateVariation, ;, private, double, scalingH, ;, private, double, referenceTime, ;, private, double, [, ], scaled]
[), ;, scalingH, =, interpolator, ., scalingH, ;, referenceTime, =, interpolator, ., referenceTime, ;, if, (, interpolator, ., scaled, !=]
[=, interpolator, ., scalingH, ;, referenceTime, =, interpolator, ., referenceTime, ;, if, (, interpolator, ., scaled, !=, null, ), {]
[;, referenceTime, =, interpolator, ., referenceTime, ;, if, (, interpolator, ., scaled, !=, null, ), {, scaled, =, interpolator, .]
[., scalingH, ;, referenceTime, =, interpolator, ., referenceTime, ;, if, (, interpolator, ., scaled, !=, null, ), {, scaled, =]
[=, interpolator, ., referenceTime, ;, if, (, interpolator, ., scaled, !=, null, ), {, scaled, =, interpolator, ., scaled, .]
[;, if, (, interpolator, ., scaled, !=, null, ), {, scaled, =, interpolator, ., scaled, ., clone, (, ), ;]
[., referenceTime, ;, if, (, interpolator, ., scaled, !=, null, ), {, scaled, =, interpolator, ., scaled, ., clone, (]
[), {, scaled, =, interpolator, ., scaled, ., clone, (, ), ;, }, if, (, interpolator, ., nordsieck, !=, null]
[!=, null, ), {, scaled, =, interpolator, ., scaled, ., clone, (, ), ;, }, if, (, interpolator, ., nordsieck]
[., scaled, !=, null, ), {, scaled, =, interpolator, ., scaled, ., clone, (, ), ;, }, if, (, interpolator]
[), {, scaled, =, interpolator, ., scaled, ., clone, (, ), ;, }, if, (, interpolator, ., nordsieck, !=, null]
[=, interpolator, ., scaled, ., clone, (, ), ;, }, if, (, interpolator, ., nordsieck, !=, null, ), {, nordsieck]
[;, }, if, (, interpolator, ., nordsieck, !=, null, ), {, nordsieck, =, new, Array2DRowRealMatrix, (, interpolator, ., nordsieck, .]
[., clone, (, ), ;, }, if, (, interpolator, ., nordsieck, !=, null, ), {, nordsieck, =, new, Array2DRowRealMatrix, (]
[., scaled, ., clone, (, ), ;, }, if, (, interpolator, ., nordsieck, !=, null, ), {, nordsieck, =, new]
[), {, nordsieck, =, new, Array2DRowRealMatrix, (, interpolator, ., nordsieck, ., getDataRef, (, ), ,, true, ), ;, }, if]
[!=, null, ), {, nordsieck, =, new, Array2DRowRealMatrix, (, interpolator, ., nordsieck, ., getDataRef, (, ), ,, true, ), ;]
[., nordsieck, !=, null, ), {, nordsieck, =, new, Array2DRowRealMatrix, (, interpolator, ., nordsieck, ., getDataRef, (, ), ,, true]
[), {, nordsieck, =, new, Array2DRowRealMatrix, (, interpolator, ., nordsieck, ., getDataRef, (, ), ,, true, ), ;, }, if]
[=, new, Array2DRowRealMatrix, (, interpolator, ., nordsieck, ., getDataRef, (, ), ,, true, ), ;, }, if, (, interpolator, .]
[;, }, if, (, interpolator, ., stateVariation, !=, null, ), {, stateVariation, =, interpolator, ., stateVariation, ., clone, (, )]
[,, true, ), ;, }, if, (, interpolator, ., stateVariation, !=, null, ), {, stateVariation, =, interpolator, ., stateVariation, .]
[., getDataRef, (, ), ,, true, ), ;, }, if, (, interpolator, ., stateVariation, !=, null, ), {, stateVariation, =]
[., nordsieck, ., getDataRef, (, ), ,, true, ), ;, }, if, (, interpolator, ., stateVariation, !=, null, ), {]
[), ;, }, if, (, interpolator, ., stateVariation, !=, null, ), {, stateVariation, =, interpolator, ., stateVariation, ., clone, (]
[), {, stateVariation, =, interpolator, ., stateVariation, ., clone, (, ), ;, }, }, @, Override, protected, StepInterpolator, doCopy, (]
[!=, null, ), {, stateVariation, =, interpolator, ., stateVariation, ., clone, (, ), ;, }, }, @, Override, protected, StepInterpolator]
[., stateVariation, !=, null, ), {, stateVariation, =, interpolator, ., stateVariation, ., clone, (, ), ;, }, }, @, Override]
[), {, stateVariation, =, interpolator, ., stateVariation, ., clone, (, ), ;, }, }, @, Override, protected, StepInterpolator, doCopy, (]
[=, interpolator, ., stateVariation, ., clone, (, ), ;, }, }, @, Override, protected, StepInterpolator, doCopy, (, ), {, return]
[;, }, }, @, Override, protected, StepInterpolator, doCopy, (, ), {, return, new, NordsieckStepInterpolator, (, this, ), ;, }, @]
[., clone, (, ), ;, }, }, @, Override, protected, StepInterpolator, doCopy, (, ), {, return, new, NordsieckStepInterpolator, (, this]
[., stateVariation, ., clone, (, ), ;, }, }, @, Override, protected, StepInterpolator, doCopy, (, ), {, return, new, NordsieckStepInterpolator]
[;, }, @, Override, public, void, reinitialize, (, final, double, [, ], y, ,, final, boolean, forward, ,, final, EquationsMapper]
[), ;, }, @, Override, public, void, reinitialize, (, final, double, [, ], y, ,, final, boolean, forward, ,, final]
[;, stateVariation, =, new, double, [, y, ., length, ], ;, }, public, void, reinitialize, (, final, double, time, ,]
[., reinitialize, (, y, ,, forward, ,, primaryMapper, ,, secondaryMappers, ), ;, stateVariation, =, new, double, [, y, ., length]
[,, forward, ,, primaryMapper, ,, secondaryMappers, ), ;, stateVariation, =, new, double, [, y, ., length, ], ;, }, public]
[,, primaryMapper, ,, secondaryMappers, ), ;, stateVariation, =, new, double, [, y, ., length, ], ;, }, public, void, reinitialize]
[,, secondaryMappers, ), ;, stateVariation, =, new, double, [, y, ., length, ], ;, }, public, void, reinitialize, (, final]
[), ;, stateVariation, =, new, double, [, y, ., length, ], ;, }, public, void, reinitialize, (, final, double, time]
[=, new, double, [, y, ., length, ], ;, }, public, void, reinitialize, (, final, double, time, ,, final, double]
[;, }, public, void, reinitialize, (, final, double, time, ,, final, double, stepSize, ,, final, double, [, ], scaledDerivative, ,]
[], ;, }, public, void, reinitialize, (, final, double, time, ,, final, double, stepSize, ,, final, double, [, ], scaledDerivative]
[., length, ], ;, }, public, void, reinitialize, (, final, double, time, ,, final, double, stepSize, ,, final, double, []
[=, time, ;, this, ., scalingH, =, stepSize, ;, this, ., scaled, =, scaledDerivative, ;, this, ., nordsieck, =, nordsieckVector]
[., referenceTime, =, time, ;, this, ., scalingH, =, stepSize, ;, this, ., scaled, =, scaledDerivative, ;, this, ., nordsieck]
[;, this, ., scalingH, =, stepSize, ;, this, ., scaled, =, scaledDerivative, ;, this, ., nordsieck, =, nordsieckVector, ;, setInterpolatedTime]
[=, stepSize, ;, this, ., scaled, =, scaledDerivative, ;, this, ., nordsieck, =, nordsieckVector, ;, setInterpolatedTime, (, getInterpolatedTime, (, )]
[., scalingH, =, stepSize, ;, this, ., scaled, =, scaledDerivative, ;, this, ., nordsieck, =, nordsieckVector, ;, setInterpolatedTime, (, getInterpolatedTime]
[;, this, ., scaled, =, scaledDerivative, ;, this, ., nordsieck, =, nordsieckVector, ;, setInterpolatedTime, (, getInterpolatedTime, (, ), ), ;]
[=, scaledDerivative, ;, this, ., nordsieck, =, nordsieckVector, ;, setInterpolatedTime, (, getInterpolatedTime, (, ), ), ;, }, public, void, rescale]
[., scaled, =, scaledDerivative, ;, this, ., nordsieck, =, nordsieckVector, ;, setInterpolatedTime, (, getInterpolatedTime, (, ), ), ;, }, public]
[;, this, ., nordsieck, =, nordsieckVector, ;, setInterpolatedTime, (, getInterpolatedTime, (, ), ), ;, }, public, void, rescale, (, final]
[=, nordsieckVector, ;, setInterpolatedTime, (, getInterpolatedTime, (, ), ), ;, }, public, void, rescale, (, final, double, stepSize, ), {]
[., nordsieck, =, nordsieckVector, ;, setInterpolatedTime, (, getInterpolatedTime, (, ), ), ;, }, public, void, rescale, (, final, double, stepSize]
[;, setInterpolatedTime, (, getInterpolatedTime, (, ), ), ;, }, public, void, rescale, (, final, double, stepSize, ), {, final, double]
[;, }, public, void, rescale, (, final, double, stepSize, ), {, final, double, ratio, =, stepSize, /, scalingH, ;, for]
[), ;, }, public, void, rescale, (, final, double, stepSize, ), {, final, double, ratio, =, stepSize, /, scalingH, ;]
[;, for, (, int, i, =, 0, ;, i, <, scaled, ., length, ;, ++, i, ), {, scaled, []
[/, scalingH, ;, for, (, int, i, =, 0, ;, i, <, scaled, ., length, ;, ++, i, ), {]
[;, for, (, int, i, =, 0, ;, i, <, scaled, ., length, ;, ++, i, ), {, scaled, []
[;, i, <, scaled, ., length, ;, ++, i, ), {, scaled, [, i, ], *=, ratio, ;, }, final]
[;, ++, i, ), {, scaled, [, i, ], *=, ratio, ;, }, final, double, [, ], [, ], nData]
[<, scaled, ., length, ;, ++, i, ), {, scaled, [, i, ], *=, ratio, ;, }, final, double, []
[;, ++, i, ), {, scaled, [, i, ], *=, ratio, ;, }, final, double, [, ], [, ], nData]
[., length, ;, ++, i, ), {, scaled, [, i, ], *=, ratio, ;, }, final, double, [, ], []
[), {, scaled, [, i, ], *=, ratio, ;, }, final, double, [, ], [, ], nData, =, nordsieck, .]
[), {, scaled, [, i, ], *=, ratio, ;, }, final, double, [, ], [, ], nData, =, nordsieck, .]
[*=, ratio, ;, }, final, double, [, ], [, ], nData, =, nordsieck, ., getDataRef, (, ), ;, double, power]
[[, i, ], *=, ratio, ;, }, final, double, [, ], [, ], nData, =, nordsieck, ., getDataRef, (, )]
[], *=, ratio, ;, }, final, double, [, ], [, ], nData, =, nordsieck, ., getDataRef, (, ), ;, double]
[;, }, final, double, [, ], [, ], nData, =, nordsieck, ., getDataRef, (, ), ;, double, power, =, ratio]
[;, double, power, =, ratio, ;, for, (, int, i, =, 0, ;, i, <, nData, ., length, ;, ++]
[., getDataRef, (, ), ;, double, power, =, ratio, ;, for, (, int, i, =, 0, ;, i, <, nData]
[;, for, (, int, i, =, 0, ;, i, <, nData, ., length, ;, ++, i, ), {, power, *=]
[;, i, <, nData, ., length, ;, ++, i, ), {, power, *=, ratio, ;, final, double, [, ], nDataI]
[;, ++, i, ), {, power, *=, ratio, ;, final, double, [, ], nDataI, =, nData, [, i, ], ;]
[<, nData, ., length, ;, ++, i, ), {, power, *=, ratio, ;, final, double, [, ], nDataI, =, nData]
[;, ++, i, ), {, power, *=, ratio, ;, final, double, [, ], nDataI, =, nData, [, i, ], ;]
[., length, ;, ++, i, ), {, power, *=, ratio, ;, final, double, [, ], nDataI, =, nData, [, i]
[), {, power, *=, ratio, ;, final, double, [, ], nDataI, =, nData, [, i, ], ;, for, (, int]
[), {, power, *=, ratio, ;, final, double, [, ], nDataI, =, nData, [, i, ], ;, for, (, int]
[*=, ratio, ;, final, double, [, ], nDataI, =, nData, [, i, ], ;, for, (, int, j, =, 0]
[;, final, double, [, ], nDataI, =, nData, [, i, ], ;, for, (, int, j, =, 0, ;, j]
[;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, ), {, nDataI, []
[[, i, ], ;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, )]
[], ;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, ), {, nDataI]
[;, j, <, nDataI, ., length, ;, ++, j, ), {, nDataI, [, j, ], *=, power, ;, }, }]
[;, ++, j, ), {, nDataI, [, j, ], *=, power, ;, }, }, scalingH, =, stepSize, ;, }, public]
[<, nDataI, ., length, ;, ++, j, ), {, nDataI, [, j, ], *=, power, ;, }, }, scalingH, =]
[;, ++, j, ), {, nDataI, [, j, ], *=, power, ;, }, }, scalingH, =, stepSize, ;, }, public]
[., length, ;, ++, j, ), {, nDataI, [, j, ], *=, power, ;, }, }, scalingH, =, stepSize, ;]
[), {, nDataI, [, j, ], *=, power, ;, }, }, scalingH, =, stepSize, ;, }, public, double, [, ]]
[), {, nDataI, [, j, ], *=, power, ;, }, }, scalingH, =, stepSize, ;, }, public, double, [, ]]
[*=, power, ;, }, }, scalingH, =, stepSize, ;, }, public, double, [, ], getInterpolatedStateVariation, (, ), throws, MaxCountExceededException, {]
[[, j, ], *=, power, ;, }, }, scalingH, =, stepSize, ;, }, public, double, [, ], getInterpolatedStateVariation, (, )]
[], *=, power, ;, }, }, scalingH, =, stepSize, ;, }, public, double, [, ], getInterpolatedStateVariation, (, ), throws, MaxCountExceededException]
[;, }, }, scalingH, =, stepSize, ;, }, public, double, [, ], getInterpolatedStateVariation, (, ), throws, MaxCountExceededException, {, getInterpolatedState, (]
[=, stepSize, ;, }, public, double, [, ], getInterpolatedStateVariation, (, ), throws, MaxCountExceededException, {, getInterpolatedState, (, ), ;, return, stateVariation]
[;, }, public, double, [, ], getInterpolatedStateVariation, (, ), throws, MaxCountExceededException, {, getInterpolatedState, (, ), ;, return, stateVariation, ;, }]
[;, return, stateVariation, ;, }, @, Override, protected, void, computeInterpolatedStateAndDerivatives, (, final, double, theta, ,, final, double, oneMinusThetaH, ), {]
[;, }, @, Override, protected, void, computeInterpolatedStateAndDerivatives, (, final, double, theta, ,, final, double, oneMinusThetaH, ), {, final, double, x]
[;, final, double, normalizedAbscissa, =, x, /, scalingH, ;, Arrays, ., fill, (, stateVariation, ,, 0.0, ), ;, Arrays, .]
[-, referenceTime, ;, final, double, normalizedAbscissa, =, x, /, scalingH, ;, Arrays, ., fill, (, stateVariation, ,, 0.0, ), ;]
[;, final, double, normalizedAbscissa, =, x, /, scalingH, ;, Arrays, ., fill, (, stateVariation, ,, 0.0, ), ;, Arrays, .]
[;, Arrays, ., fill, (, stateVariation, ,, 0.0, ), ;, Arrays, ., fill, (, interpolatedDerivatives, ,, 0.0, ), ;, final]
[/, scalingH, ;, Arrays, ., fill, (, stateVariation, ,, 0.0, ), ;, Arrays, ., fill, (, interpolatedDerivatives, ,, 0.0, )]
[;, Arrays, ., fill, (, stateVariation, ,, 0.0, ), ;, Arrays, ., fill, (, interpolatedDerivatives, ,, 0.0, ), ;, final]
[;, Arrays, ., fill, (, interpolatedDerivatives, ,, 0.0, ), ;, final, double, [, ], [, ], nData, =, nordsieck, .]
[., fill, (, stateVariation, ,, 0.0, ), ;, Arrays, ., fill, (, interpolatedDerivatives, ,, 0.0, ), ;, final, double, []
[,, 0.0, ), ;, Arrays, ., fill, (, interpolatedDerivatives, ,, 0.0, ), ;, final, double, [, ], [, ], nData]
[), ;, Arrays, ., fill, (, interpolatedDerivatives, ,, 0.0, ), ;, final, double, [, ], [, ], nData, =, nordsieck]
[;, final, double, [, ], [, ], nData, =, nordsieck, ., getDataRef, (, ), ;, for, (, int, i, =]
[., fill, (, interpolatedDerivatives, ,, 0.0, ), ;, final, double, [, ], [, ], nData, =, nordsieck, ., getDataRef, (]
[,, 0.0, ), ;, final, double, [, ], [, ], nData, =, nordsieck, ., getDataRef, (, ), ;, for, (]
[), ;, final, double, [, ], [, ], nData, =, nordsieck, ., getDataRef, (, ), ;, for, (, int, i]
[;, for, (, int, i, =, nData, ., length, -, 1, ;, i, >=, 0, ;, --, i, ), {]
[., getDataRef, (, ), ;, for, (, int, i, =, nData, ., length, -, 1, ;, i, >=, 0, ;]
[;, i, >=, 0, ;, --, i, ), {, final, int, order, =, i, +, 2, ;, final, double, []
[-, 1, ;, i, >=, 0, ;, --, i, ), {, final, int, order, =, i, +, 2, ;, final]
[., length, -, 1, ;, i, >=, 0, ;, --, i, ), {, final, int, order, =, i, +, 2]
[;, i, >=, 0, ;, --, i, ), {, final, int, order, =, i, +, 2, ;, final, double, []
[;, --, i, ), {, final, int, order, =, i, +, 2, ;, final, double, [, ], nDataI, =, nData]
[>=, 0, ;, --, i, ), {, final, int, order, =, i, +, 2, ;, final, double, [, ], nDataI]
[;, --, i, ), {, final, int, order, =, i, +, 2, ;, final, double, [, ], nDataI, =, nData]
[), {, final, int, order, =, i, +, 2, ;, final, double, [, ], nDataI, =, nData, [, i, ]]
[), {, final, int, order, =, i, +, 2, ;, final, double, [, ], nDataI, =, nData, [, i, ]]
[;, final, double, [, ], nDataI, =, nData, [, i, ], ;, final, double, power, =, FastMath, ., pow, (]
[+, 2, ;, final, double, [, ], nDataI, =, nData, [, i, ], ;, final, double, power, =, FastMath, .]
[;, final, double, [, ], nDataI, =, nData, [, i, ], ;, final, double, power, =, FastMath, ., pow, (]
[;, final, double, power, =, FastMath, ., pow, (, normalizedAbscissa, ,, order, ), ;, for, (, int, j, =, 0]
[[, i, ], ;, final, double, power, =, FastMath, ., pow, (, normalizedAbscissa, ,, order, ), ;, for, (, int]
[], ;, final, double, power, =, FastMath, ., pow, (, normalizedAbscissa, ,, order, ), ;, for, (, int, j, =]
[;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, ), {, final, double]
[., pow, (, normalizedAbscissa, ,, order, ), ;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length]
[,, order, ), ;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, )]
[), ;, for, (, int, j, =, 0, ;, j, <, nDataI, ., length, ;, ++, j, ), {, final]
[;, j, <, nDataI, ., length, ;, ++, j, ), {, final, double, d, =, nDataI, [, j, ], *]
[;, ++, j, ), {, final, double, d, =, nDataI, [, j, ], *, power, ;, stateVariation, [, j, ]]
[<, nDataI, ., length, ;, ++, j, ), {, final, double, d, =, nDataI, [, j, ], *, power, ;]
[;, ++, j, ), {, final, double, d, =, nDataI, [, j, ], *, power, ;, stateVariation, [, j, ]]
[., length, ;, ++, j, ), {, final, double, d, =, nDataI, [, j, ], *, power, ;, stateVariation, []
[), {, final, double, d, =, nDataI, [, j, ], *, power, ;, stateVariation, [, j, ], +=, d, ;]
[), {, final, double, d, =, nDataI, [, j, ], *, power, ;, stateVariation, [, j, ], +=, d, ;]
[;, stateVariation, [, j, ], +=, d, ;, interpolatedDerivatives, [, j, ], +=, order, *, d, ;, }, }, for]
[*, power, ;, stateVariation, [, j, ], +=, d, ;, interpolatedDerivatives, [, j, ], +=, order, *, d, ;, }]
[[, j, ], *, power, ;, stateVariation, [, j, ], +=, d, ;, interpolatedDerivatives, [, j, ], +=, order, *]
[], *, power, ;, stateVariation, [, j, ], +=, d, ;, interpolatedDerivatives, [, j, ], +=, order, *, d, ;]
[;, stateVariation, [, j, ], +=, d, ;, interpolatedDerivatives, [, j, ], +=, order, *, d, ;, }, }, for]
[+=, d, ;, interpolatedDerivatives, [, j, ], +=, order, *, d, ;, }, }, for, (, int, j, =, 0]
[[, j, ], +=, d, ;, interpolatedDerivatives, [, j, ], +=, order, *, d, ;, }, }, for, (, int]
[], +=, d, ;, interpolatedDerivatives, [, j, ], +=, order, *, d, ;, }, }, for, (, int, j, =]
[;, interpolatedDerivatives, [, j, ], +=, order, *, d, ;, }, }, for, (, int, j, =, 0, ;, j]
[+=, order, *, d, ;, }, }, for, (, int, j, =, 0, ;, j, <, currentState, ., length, ;]
[[, j, ], +=, order, *, d, ;, }, }, for, (, int, j, =, 0, ;, j, <, currentState]
[], +=, order, *, d, ;, }, }, for, (, int, j, =, 0, ;, j, <, currentState, ., length]
[;, }, }, for, (, int, j, =, 0, ;, j, <, currentState, ., length, ;, ++, j, ), {]
[*, d, ;, }, }, for, (, int, j, =, 0, ;, j, <, currentState, ., length, ;, ++, j]
[;, }, }, for, (, int, j, =, 0, ;, j, <, currentState, ., length, ;, ++, j, ), {]
[;, j, <, currentState, ., length, ;, ++, j, ), {, stateVariation, [, j, ], +=, scaled, [, j, ]]
[;, ++, j, ), {, stateVariation, [, j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j]
[<, currentState, ., length, ;, ++, j, ), {, stateVariation, [, j, ], +=, scaled, [, j, ], *, normalizedAbscissa]
[;, ++, j, ), {, stateVariation, [, j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j]
[., length, ;, ++, j, ), {, stateVariation, [, j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState]
[), {, stateVariation, [, j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState]
[), {, stateVariation, [, j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState]
[+=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState, [, j, ], +, stateVariation, []
[[, j, ], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState, [, j, ]]
[], +=, scaled, [, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState, [, j, ], +, stateVariation]
[;, interpolatedState, [, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ]]
[*, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, []
[[, j, ], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ]]
[], *, normalizedAbscissa, ;, interpolatedState, [, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives]
[;, interpolatedState, [, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ]]
[=, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j]
[[, j, ], =, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (]
[], =, currentState, [, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, []
[;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j, ], +, scaled, [, j, ], *, normalizedAbscissa, ), /]
[+, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j, ], +, scaled, [, j]
[[, j, ], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j, ], +]
[], +, stateVariation, [, j, ], ;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j, ], +, scaled, []
[;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j, ], +, scaled, [, j, ], *, normalizedAbscissa, ), /]
[[, j, ], ;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j, ], +, scaled, [, j, ], *]
[], ;, interpolatedDerivatives, [, j, ], =, (, interpolatedDerivatives, [, j, ], +, scaled, [, j, ], *, normalizedAbscissa, )]
[=, (, interpolatedDerivatives, [, j, ], +, scaled, [, j, ], *, normalizedAbscissa, ), /, x, ;, }, }, @]
[[, j, ], =, (, interpolatedDerivatives, [, j, ], +, scaled, [, j, ], *, normalizedAbscissa, ), /, x, ;]
[], =, (, interpolatedDerivatives, [, j, ], +, scaled, [, j, ], *, normalizedAbscissa, ), /, x, ;, }, }]
[;, }, }, @, Override, public, void, writeExternal, (, final, ObjectOutput, out, ), throws, IOException, {, writeBaseExternal, (, out, )]
[/, x, ;, }, }, @, Override, public, void, writeExternal, (, final, ObjectOutput, out, ), throws, IOException, {, writeBaseExternal, (]
[), /, x, ;, }, }, @, Override, public, void, writeExternal, (, final, ObjectOutput, out, ), throws, IOException, {, writeBaseExternal]
[+, scaled, [, j, ], *, normalizedAbscissa, ), /, x, ;, }, }, @, Override, public, void, writeExternal, (, final]
[[, j, ], +, scaled, [, j, ], *, normalizedAbscissa, ), /, x, ;, }, }, @, Override, public, void]
[], +, scaled, [, j, ], *, normalizedAbscissa, ), /, x, ;, }, }, @, Override, public, void, writeExternal, (]
[), /, x, ;, }, }, @, Override, public, void, writeExternal, (, final, ObjectOutput, out, ), throws, IOException, {, writeBaseExternal]
[*, normalizedAbscissa, ), /, x, ;, }, }, @, Override, public, void, writeExternal, (, final, ObjectOutput, out, ), throws, IOException]
[[, j, ], *, normalizedAbscissa, ), /, x, ;, }, }, @, Override, public, void, writeExternal, (, final, ObjectOutput, out]
[], *, normalizedAbscissa, ), /, x, ;, }, }, @, Override, public, void, writeExternal, (, final, ObjectOutput, out, ), throws]
[), /, x, ;, }, }, @, Override, public, void, writeExternal, (, final, ObjectOutput, out, ), throws, IOException, {, writeBaseExternal]
[;, }, }, @, Override, public, void, writeExternal, (, final, ObjectOutput, out, ), throws, IOException, {, writeBaseExternal, (, out, )]
[;, out, ., writeDouble, (, scalingH, ), ;, out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =, (]
[), ;, out, ., writeDouble, (, scalingH, ), ;, out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =]
[;, out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =, (, currentState, ==, null, ), ?, -, 1]
[., writeDouble, (, scalingH, ), ;, out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =, (, currentState, ==]
[), ;, out, ., writeDouble, (, referenceTime, ), ;, final, int, n, =, (, currentState, ==, null, ), ?, -]
[;, final, int, n, =, (, currentState, ==, null, ), ?, -, 1, :, currentState, ., length, ;, if, (]
[., writeDouble, (, referenceTime, ), ;, final, int, n, =, (, currentState, ==, null, ), ?, -, 1, :, currentState]
[), ;, final, int, n, =, (, currentState, ==, null, ), ?, -, 1, :, currentState, ., length, ;, if]
[;, if, (, scaled, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {, out, .]
[?, -, 1, :, currentState, ., length, ;, if, (, scaled, ==, null, ), {, out, ., writeBoolean, (, false]
[), ?, -, 1, :, currentState, ., length, ;, if, (, scaled, ==, null, ), {, out, ., writeBoolean, (]
[==, null, ), ?, -, 1, :, currentState, ., length, ;, if, (, scaled, ==, null, ), {, out, .]
[), ?, -, 1, :, currentState, ., length, ;, if, (, scaled, ==, null, ), {, out, ., writeBoolean, (]
[:, currentState, ., length, ;, if, (, scaled, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }]
[:, currentState, ., length, ;, if, (, scaled, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }]
[;, if, (, scaled, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {, out, .]
[., length, ;, if, (, scaled, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {]
[), {, out, ., writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (, true, ), ;, for]
[==, null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (, true, )]
[), {, out, ., writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (, true, ), ;, for]
[;, }, else, {, out, ., writeBoolean, (, true, ), ;, for, (, int, j, =, 0, ;, j, <]
[., writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (, true, ), ;, for, (, int, j]
[), ;, }, else, {, out, ., writeBoolean, (, true, ), ;, for, (, int, j, =, 0, ;, j]
[;, for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {, out, ., writeDouble, (]
[., writeBoolean, (, true, ), ;, for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, )]
[), ;, for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {, out, ., writeDouble]
[;, j, <, n, ;, ++, j, ), {, out, ., writeDouble, (, scaled, [, j, ], ), ;, }]
[;, ++, j, ), {, out, ., writeDouble, (, scaled, [, j, ], ), ;, }, }, if, (, nordsieck]
[<, n, ;, ++, j, ), {, out, ., writeDouble, (, scaled, [, j, ], ), ;, }, }, if]
[;, ++, j, ), {, out, ., writeDouble, (, scaled, [, j, ], ), ;, }, }, if, (, nordsieck]
[), {, out, ., writeDouble, (, scaled, [, j, ], ), ;, }, }, if, (, nordsieck, ==, null, )]
[), {, out, ., writeDouble, (, scaled, [, j, ], ), ;, }, }, if, (, nordsieck, ==, null, )]
[;, }, }, if, (, nordsieck, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {]
[., writeDouble, (, scaled, [, j, ], ), ;, }, }, if, (, nordsieck, ==, null, ), {, out, .]
[), ;, }, }, if, (, nordsieck, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }, else]
[[, j, ], ), ;, }, }, if, (, nordsieck, ==, null, ), {, out, ., writeBoolean, (, false, )]
[], ), ;, }, }, if, (, nordsieck, ==, null, ), {, out, ., writeBoolean, (, false, ), ;, }]
[), {, out, ., writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (, true, ), ;, out]
[==, null, ), {, out, ., writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (, true, )]
[), {, out, ., writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (, true, ), ;, out]
[;, }, else, {, out, ., writeBoolean, (, true, ), ;, out, ., writeObject, (, nordsieck, ), ;, }, }]
[., writeBoolean, (, false, ), ;, }, else, {, out, ., writeBoolean, (, true, ), ;, out, ., writeObject, (]
[), ;, }, else, {, out, ., writeBoolean, (, true, ), ;, out, ., writeObject, (, nordsieck, ), ;, }]
[;, out, ., writeObject, (, nordsieck, ), ;, }, }, @, Override, public, void, readExternal, (, final, ObjectInput, in, )]
[., writeBoolean, (, true, ), ;, out, ., writeObject, (, nordsieck, ), ;, }, }, @, Override, public, void, readExternal]
[), ;, out, ., writeObject, (, nordsieck, ), ;, }, }, @, Override, public, void, readExternal, (, final, ObjectInput, in]
[;, }, }, @, Override, public, void, readExternal, (, final, ObjectInput, in, ), throws, IOException, ,, ClassNotFoundException, {, final, double]
[., writeObject, (, nordsieck, ), ;, }, }, @, Override, public, void, readExternal, (, final, ObjectInput, in, ), throws, IOException]
[), ;, }, }, @, Override, public, void, readExternal, (, final, ObjectInput, in, ), throws, IOException, ,, ClassNotFoundException, {, final]
[;, scalingH, =, in, ., readDouble, (, ), ;, referenceTime, =, in, ., readDouble, (, ), ;, final, int, n]
[), ;, scalingH, =, in, ., readDouble, (, ), ;, referenceTime, =, in, ., readDouble, (, ), ;, final, int]
[=, in, ., readDouble, (, ), ;, referenceTime, =, in, ., readDouble, (, ), ;, final, int, n, =, (]
[;, referenceTime, =, in, ., readDouble, (, ), ;, final, int, n, =, (, currentState, ==, null, ), ?, -]
[., readDouble, (, ), ;, referenceTime, =, in, ., readDouble, (, ), ;, final, int, n, =, (, currentState, ==]
[=, in, ., readDouble, (, ), ;, final, int, n, =, (, currentState, ==, null, ), ?, -, 1, :]
[;, final, int, n, =, (, currentState, ==, null, ), ?, -, 1, :, currentState, ., length, ;, final, boolean]
[., readDouble, (, ), ;, final, int, n, =, (, currentState, ==, null, ), ?, -, 1, :, currentState, .]
[;, final, boolean, hasScaled, =, in, ., readBoolean, (, ), ;, if, (, hasScaled, ), {, scaled, =, new, double]
[?, -, 1, :, currentState, ., length, ;, final, boolean, hasScaled, =, in, ., readBoolean, (, ), ;, if, (]
[), ?, -, 1, :, currentState, ., length, ;, final, boolean, hasScaled, =, in, ., readBoolean, (, ), ;, if]
[==, null, ), ?, -, 1, :, currentState, ., length, ;, final, boolean, hasScaled, =, in, ., readBoolean, (, )]
[), ?, -, 1, :, currentState, ., length, ;, final, boolean, hasScaled, =, in, ., readBoolean, (, ), ;, if]
[:, currentState, ., length, ;, final, boolean, hasScaled, =, in, ., readBoolean, (, ), ;, if, (, hasScaled, ), {]
[:, currentState, ., length, ;, final, boolean, hasScaled, =, in, ., readBoolean, (, ), ;, if, (, hasScaled, ), {]
[;, final, boolean, hasScaled, =, in, ., readBoolean, (, ), ;, if, (, hasScaled, ), {, scaled, =, new, double]
[., length, ;, final, boolean, hasScaled, =, in, ., readBoolean, (, ), ;, if, (, hasScaled, ), {, scaled, =]
[;, if, (, hasScaled, ), {, scaled, =, new, double, [, n, ], ;, for, (, int, j, =, 0]
[., readBoolean, (, ), ;, if, (, hasScaled, ), {, scaled, =, new, double, [, n, ], ;, for, (]
[), {, scaled, =, new, double, [, n, ], ;, for, (, int, j, =, 0, ;, j, <, n]
[=, new, double, [, n, ], ;, for, (, int, j, =, 0, ;, j, <, n, ;, ++, j]
[;, for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {, scaled, [, j, ]]
[], ;, for, (, int, j, =, 0, ;, j, <, n, ;, ++, j, ), {, scaled, [, j]
[;, j, <, n, ;, ++, j, ), {, scaled, [, j, ], =, in, ., readDouble, (, ), ;]
[;, ++, j, ), {, scaled, [, j, ], =, in, ., readDouble, (, ), ;, }, }, else, {]
[<, n, ;, ++, j, ), {, scaled, [, j, ], =, in, ., readDouble, (, ), ;, }, }]
[;, ++, j, ), {, scaled, [, j, ], =, in, ., readDouble, (, ), ;, }, }, else, {]
[), {, scaled, [, j, ], =, in, ., readDouble, (, ), ;, }, }, else, {, scaled, =, null]
[), {, scaled, [, j, ], =, in, ., readDouble, (, ), ;, }, }, else, {, scaled, =, null]
[=, in, ., readDouble, (, ), ;, }, }, else, {, scaled, =, null, ;, }, final, boolean, hasNordsieck, =]
[[, j, ], =, in, ., readDouble, (, ), ;, }, }, else, {, scaled, =, null, ;, }, final]
[], =, in, ., readDouble, (, ), ;, }, }, else, {, scaled, =, null, ;, }, final, boolean, hasNordsieck]
[;, }, }, else, {, scaled, =, null, ;, }, final, boolean, hasNordsieck, =, in, ., readBoolean, (, ), ;]
[., readDouble, (, ), ;, }, }, else, {, scaled, =, null, ;, }, final, boolean, hasNordsieck, =, in, .]
[=, null, ;, }, final, boolean, hasNordsieck, =, in, ., readBoolean, (, ), ;, if, (, hasNordsieck, ), {, nordsieck]
[;, }, final, boolean, hasNordsieck, =, in, ., readBoolean, (, ), ;, if, (, hasNordsieck, ), {, nordsieck, =, (]
[;, if, (, hasNordsieck, ), {, nordsieck, =, (, Array2DRowRealMatrix, ), in, ., readObject, (, ), ;, }, else, {]
[., readBoolean, (, ), ;, if, (, hasNordsieck, ), {, nordsieck, =, (, Array2DRowRealMatrix, ), in, ., readObject, (, )]
[), {, nordsieck, =, (, Array2DRowRealMatrix, ), in, ., readObject, (, ), ;, }, else, {, nordsieck, =, null, ;]
[=, (, Array2DRowRealMatrix, ), in, ., readObject, (, ), ;, }, else, {, nordsieck, =, null, ;, }, if, (]
[;, }, else, {, nordsieck, =, null, ;, }, if, (, hasScaled, &&, hasNordsieck, ), {, stateVariation, =, new, double]
[;, }, else, {, nordsieck, =, null, ;, }, if, (, hasScaled, &&, hasNordsieck, ), {, stateVariation, =, new, double]
[., readObject, (, ), ;, }, else, {, nordsieck, =, null, ;, }, if, (, hasScaled, &&, hasNordsieck, ), {]
[=, null, ;, }, if, (, hasScaled, &&, hasNordsieck, ), {, stateVariation, =, new, double, [, n, ], ;, setInterpolatedTime]
[;, }, if, (, hasScaled, &&, hasNordsieck, ), {, stateVariation, =, new, double, [, n, ], ;, setInterpolatedTime, (, t]
[), {, stateVariation, =, new, double, [, n, ], ;, setInterpolatedTime, (, t, ), ;, }, else, {, stateVariation, =]
[&&, hasNordsieck, ), {, stateVariation, =, new, double, [, n, ], ;, setInterpolatedTime, (, t, ), ;, }, else, {]
[), {, stateVariation, =, new, double, [, n, ], ;, setInterpolatedTime, (, t, ), ;, }, else, {, stateVariation, =]
[=, new, double, [, n, ], ;, setInterpolatedTime, (, t, ), ;, }, else, {, stateVariation, =, null, ;, }]
[;, setInterpolatedTime, (, t, ), ;, }, else, {, stateVariation, =, null, ;, }, }, }]
[], ;, setInterpolatedTime, (, t, ), ;, }, else, {, stateVariation, =, null, ;, }, }, }]
[;, }, else, {, stateVariation, =, null, ;, }, }, }]
[), ;, }, else, {, stateVariation, =, null, ;, }, }, }]
[=, null, ;, }, }, }]
[;, }, }, }]
