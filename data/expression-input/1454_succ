[=, line, ;, this, ., remainingRegion, =, remainingRegion, ;, }, public, SubLine, (, final, Vector3D, start, ,, final, Vector3D, end]
[., line, =, line, ;, this, ., remainingRegion, =, remainingRegion, ;, }, public, SubLine, (, final, Vector3D, start, ,, final]
[;, this, ., remainingRegion, =, remainingRegion, ;, }, public, SubLine, (, final, Vector3D, start, ,, final, Vector3D, end, ), throws]
[=, remainingRegion, ;, }, public, SubLine, (, final, Vector3D, start, ,, final, Vector3D, end, ), throws, MathIllegalArgumentException, {, this, (]
[., remainingRegion, =, remainingRegion, ;, }, public, SubLine, (, final, Vector3D, start, ,, final, Vector3D, end, ), throws, MathIllegalArgumentException, {]
[;, }, public, SubLine, (, final, Vector3D, start, ,, final, Vector3D, end, ), throws, MathIllegalArgumentException, {, this, (, new, Line]
[,, buildIntervalSet, (, start, ,, end, ), ), ;, }, public, SubLine, (, final, Segment, segment, ), throws, MathIllegalArgumentException, {]
[,, end, ), ,, buildIntervalSet, (, start, ,, end, ), ), ;, }, public, SubLine, (, final, Segment, segment, )]
[), ,, buildIntervalSet, (, start, ,, end, ), ), ;, }, public, SubLine, (, final, Segment, segment, ), throws, MathIllegalArgumentException]
[), ;, }, public, SubLine, (, final, Segment, segment, ), throws, MathIllegalArgumentException, {, this, (, segment, ., getLine, (, )]
[,, end, ), ), ;, }, public, SubLine, (, final, Segment, segment, ), throws, MathIllegalArgumentException, {, this, (, segment, .]
[), ), ;, }, public, SubLine, (, final, Segment, segment, ), throws, MathIllegalArgumentException, {, this, (, segment, ., getLine, (]
[,, buildIntervalSet, (, segment, ., getStart, (, ), ,, segment, ., getEnd, (, ), ), ), ;, }, public, List]
[., getLine, (, ), ,, buildIntervalSet, (, segment, ., getStart, (, ), ,, segment, ., getEnd, (, ), ), )]
[), ;, }, public, List, <, Segment, >, getSegments, (, ), {, final, List, <, Interval, >, list, =, remainingRegion]
[,, segment, ., getEnd, (, ), ), ), ;, }, public, List, <, Segment, >, getSegments, (, ), {, final]
[., getStart, (, ), ,, segment, ., getEnd, (, ), ), ), ;, }, public, List, <, Segment, >, getSegments]
[), ), ;, }, public, List, <, Segment, >, getSegments, (, ), {, final, List, <, Interval, >, list, =]
[., getEnd, (, ), ), ), ;, }, public, List, <, Segment, >, getSegments, (, ), {, final, List, <]
[;, final, List, <, Segment, >, segments, =, new, ArrayList, <, Segment, >, (, list, ., size, (, ), )]
[., asList, (, ), ;, final, List, <, Segment, >, segments, =, new, ArrayList, <, Segment, >, (, list, .]
[;, for, (, final, Interval, interval, :, list, ), {, final, Vector3D, start, =, line, ., toSpace, (, new, Vector1D]
[), ;, for, (, final, Interval, interval, :, list, ), {, final, Vector3D, start, =, line, ., toSpace, (, new]
[., size, (, ), ), ;, for, (, final, Interval, interval, :, list, ), {, final, Vector3D, start, =, line]
[), {, final, Vector3D, start, =, line, ., toSpace, (, new, Vector1D, (, interval, ., getInf, (, ), ), )]
[;, final, Vector3D, end, =, line, ., toSpace, (, new, Vector1D, (, interval, ., getSup, (, ), ), ), ;]
[., toSpace, (, new, Vector1D, (, interval, ., getInf, (, ), ), ), ;, final, Vector3D, end, =, line, .]
[), ;, final, Vector3D, end, =, line, ., toSpace, (, new, Vector1D, (, interval, ., getSup, (, ), ), )]
[), ), ;, final, Vector3D, end, =, line, ., toSpace, (, new, Vector1D, (, interval, ., getSup, (, ), )]
[., getInf, (, ), ), ), ;, final, Vector3D, end, =, line, ., toSpace, (, new, Vector1D, (, interval, .]
[;, segments, ., add, (, new, Segment, (, start, ,, end, ,, line, ), ), ;, }, return, segments, ;]
[., toSpace, (, new, Vector1D, (, interval, ., getSup, (, ), ), ), ;, segments, ., add, (, new, Segment]
[), ;, segments, ., add, (, new, Segment, (, start, ,, end, ,, line, ), ), ;, }, return, segments]
[), ), ;, segments, ., add, (, new, Segment, (, start, ,, end, ,, line, ), ), ;, }, return]
[., getSup, (, ), ), ), ;, segments, ., add, (, new, Segment, (, start, ,, end, ,, line, )]
[;, }, return, segments, ;, }, public, Vector3D, intersection, (, final, SubLine, subLine, ,, final, boolean, includeEndPoints, ), {, Vector3D]
[., add, (, new, Segment, (, start, ,, end, ,, line, ), ), ;, }, return, segments, ;, }, public]
[), ;, }, return, segments, ;, }, public, Vector3D, intersection, (, final, SubLine, subLine, ,, final, boolean, includeEndPoints, ), {]
[,, end, ,, line, ), ), ;, }, return, segments, ;, }, public, Vector3D, intersection, (, final, SubLine, subLine, ,]
[,, line, ), ), ;, }, return, segments, ;, }, public, Vector3D, intersection, (, final, SubLine, subLine, ,, final, boolean]
[), ), ;, }, return, segments, ;, }, public, Vector3D, intersection, (, final, SubLine, subLine, ,, final, boolean, includeEndPoints, )]
[;, }, public, Vector3D, intersection, (, final, SubLine, subLine, ,, final, boolean, includeEndPoints, ), {, Vector3D, v1D, =, line, .]
[;, if, (, v1D, ==, null, ), {, return, null, ;, }, Location, loc1, =, remainingRegion, ., checkPoint, (, line]
[., intersection, (, subLine, ., line, ), ;, if, (, v1D, ==, null, ), {, return, null, ;, }, Location]
[), ;, if, (, v1D, ==, null, ), {, return, null, ;, }, Location, loc1, =, remainingRegion, ., checkPoint, (]
[., line, ), ;, if, (, v1D, ==, null, ), {, return, null, ;, }, Location, loc1, =, remainingRegion, .]
[), {, return, null, ;, }, Location, loc1, =, remainingRegion, ., checkPoint, (, line, ., toSubSpace, (, v1D, ), )]
[==, null, ), {, return, null, ;, }, Location, loc1, =, remainingRegion, ., checkPoint, (, line, ., toSubSpace, (, v1D]
[), {, return, null, ;, }, Location, loc1, =, remainingRegion, ., checkPoint, (, line, ., toSubSpace, (, v1D, ), )]
[;, }, Location, loc1, =, remainingRegion, ., checkPoint, (, line, ., toSubSpace, (, v1D, ), ), ;, Location, loc2, =]
[;, Location, loc2, =, subLine, ., remainingRegion, ., checkPoint, (, subLine, ., line, ., toSubSpace, (, v1D, ), ), ;]
[., checkPoint, (, line, ., toSubSpace, (, v1D, ), ), ;, Location, loc2, =, subLine, ., remainingRegion, ., checkPoint, (]
[), ;, Location, loc2, =, subLine, ., remainingRegion, ., checkPoint, (, subLine, ., line, ., toSubSpace, (, v1D, ), )]
[., toSubSpace, (, v1D, ), ), ;, Location, loc2, =, subLine, ., remainingRegion, ., checkPoint, (, subLine, ., line, .]
[), ), ;, Location, loc2, =, subLine, ., remainingRegion, ., checkPoint, (, subLine, ., line, ., toSubSpace, (, v1D, )]
[;, if, (, includeEndPoints, ), {, return, (, (, loc1, !=, Location, ., OUTSIDE, ), &&, (, loc2, !=, Location]
[., checkPoint, (, subLine, ., line, ., toSubSpace, (, v1D, ), ), ;, if, (, includeEndPoints, ), {, return, (]
[., remainingRegion, ., checkPoint, (, subLine, ., line, ., toSubSpace, (, v1D, ), ), ;, if, (, includeEndPoints, ), {]
[), ;, if, (, includeEndPoints, ), {, return, (, (, loc1, !=, Location, ., OUTSIDE, ), &&, (, loc2, !=]
[., toSubSpace, (, v1D, ), ), ;, if, (, includeEndPoints, ), {, return, (, (, loc1, !=, Location, ., OUTSIDE]
[., line, ., toSubSpace, (, v1D, ), ), ;, if, (, includeEndPoints, ), {, return, (, (, loc1, !=, Location]
[), ), ;, if, (, includeEndPoints, ), {, return, (, (, loc1, !=, Location, ., OUTSIDE, ), &&, (, loc2]
[), {, return, (, (, loc1, !=, Location, ., OUTSIDE, ), &&, (, loc2, !=, Location, ., OUTSIDE, ), )]
[;, }, else, {, return, (, (, loc1, ==, Location, ., INSIDE, ), &&, (, loc2, ==, Location, ., INSIDE]
[?, v1D, :, null, ;, }, else, {, return, (, (, loc1, ==, Location, ., INSIDE, ), &&, (, loc2]
[), ?, v1D, :, null, ;, }, else, {, return, (, (, loc1, ==, Location, ., INSIDE, ), &&, (]
[&&, (, loc2, !=, Location, ., OUTSIDE, ), ), ?, v1D, :, null, ;, }, else, {, return, (, (]
[), &&, (, loc2, !=, Location, ., OUTSIDE, ), ), ?, v1D, :, null, ;, }, else, {, return, (]
[!=, Location, ., OUTSIDE, ), &&, (, loc2, !=, Location, ., OUTSIDE, ), ), ?, v1D, :, null, ;, }]
[), &&, (, loc2, !=, Location, ., OUTSIDE, ), ), ?, v1D, :, null, ;, }, else, {, return, (]
[., OUTSIDE, ), &&, (, loc2, !=, Location, ., OUTSIDE, ), ), ?, v1D, :, null, ;, }, else, {]
[), ?, v1D, :, null, ;, }, else, {, return, (, (, loc1, ==, Location, ., INSIDE, ), &&, (]
[), ), ?, v1D, :, null, ;, }, else, {, return, (, (, loc1, ==, Location, ., INSIDE, ), &&]
[!=, Location, ., OUTSIDE, ), ), ?, v1D, :, null, ;, }, else, {, return, (, (, loc1, ==, Location]
[), ), ?, v1D, :, null, ;, }, else, {, return, (, (, loc1, ==, Location, ., INSIDE, ), &&]
[., OUTSIDE, ), ), ?, v1D, :, null, ;, }, else, {, return, (, (, loc1, ==, Location, ., INSIDE]
[:, null, ;, }, else, {, return, (, (, loc1, ==, Location, ., INSIDE, ), &&, (, loc2, ==, Location]
[;, }, else, {, return, (, (, loc1, ==, Location, ., INSIDE, ), &&, (, loc2, ==, Location, ., INSIDE]
[;, }, }, private, static, IntervalsSet, buildIntervalSet, (, final, Vector3D, start, ,, final, Vector3D, end, ), throws, MathIllegalArgumentException, {, final]
[?, v1D, :, null, ;, }, }, private, static, IntervalsSet, buildIntervalSet, (, final, Vector3D, start, ,, final, Vector3D, end, )]
[), ?, v1D, :, null, ;, }, }, private, static, IntervalsSet, buildIntervalSet, (, final, Vector3D, start, ,, final, Vector3D, end]
[&&, (, loc2, ==, Location, ., INSIDE, ), ), ?, v1D, :, null, ;, }, }, private, static, IntervalsSet, buildIntervalSet]
[), &&, (, loc2, ==, Location, ., INSIDE, ), ), ?, v1D, :, null, ;, }, }, private, static, IntervalsSet]
[==, Location, ., INSIDE, ), &&, (, loc2, ==, Location, ., INSIDE, ), ), ?, v1D, :, null, ;, }]
[), &&, (, loc2, ==, Location, ., INSIDE, ), ), ?, v1D, :, null, ;, }, }, private, static, IntervalsSet]
[., INSIDE, ), &&, (, loc2, ==, Location, ., INSIDE, ), ), ?, v1D, :, null, ;, }, }, private]
[), ?, v1D, :, null, ;, }, }, private, static, IntervalsSet, buildIntervalSet, (, final, Vector3D, start, ,, final, Vector3D, end]
[), ), ?, v1D, :, null, ;, }, }, private, static, IntervalsSet, buildIntervalSet, (, final, Vector3D, start, ,, final, Vector3D]
[==, Location, ., INSIDE, ), ), ?, v1D, :, null, ;, }, }, private, static, IntervalsSet, buildIntervalSet, (, final, Vector3D]
[), ), ?, v1D, :, null, ;, }, }, private, static, IntervalsSet, buildIntervalSet, (, final, Vector3D, start, ,, final, Vector3D]
[., INSIDE, ), ), ?, v1D, :, null, ;, }, }, private, static, IntervalsSet, buildIntervalSet, (, final, Vector3D, start, ,]
[:, null, ;, }, }, private, static, IntervalsSet, buildIntervalSet, (, final, Vector3D, start, ,, final, Vector3D, end, ), throws, MathIllegalArgumentException]
[;, }, }, private, static, IntervalsSet, buildIntervalSet, (, final, Vector3D, start, ,, final, Vector3D, end, ), throws, MathIllegalArgumentException, {, final]
[;, return, new, IntervalsSet, (, line, ., toSubSpace, (, start, ), ., getX, (, ), ,, line, ., toSubSpace, (]
[,, end, ), ;, return, new, IntervalsSet, (, line, ., toSubSpace, (, start, ), ., getX, (, ), ,, line]
[), ;, return, new, IntervalsSet, (, line, ., toSubSpace, (, start, ), ., getX, (, ), ,, line, ., toSubSpace]
[;, }, }]
[,, line, ., toSubSpace, (, end, ), ., getX, (, ), ), ;, }, }]
[., getX, (, ), ,, line, ., toSubSpace, (, end, ), ., getX, (, ), ), ;, }, }]
[., toSubSpace, (, start, ), ., getX, (, ), ,, line, ., toSubSpace, (, end, ), ., getX, (, )]
[), ., getX, (, ), ,, line, ., toSubSpace, (, end, ), ., getX, (, ), ), ;, }, }]
[), ;, }, }]
[., getX, (, ), ), ;, }, }]
[., toSubSpace, (, end, ), ., getX, (, ), ), ;, }, }]
[), ., getX, (, ), ), ;, }, }]
