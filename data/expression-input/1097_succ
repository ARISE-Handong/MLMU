[;, this, ., convention, =, convention, ;, this, ., typeRegistry, =, typeRegistry, ;, firstLink, =, this, ;, nextLink, =, null]
[., checkNotNull, (, convention, ), ;, this, ., convention, =, convention, ;, this, ., typeRegistry, =, typeRegistry, ;, firstLink, =]
[), ;, this, ., convention, =, convention, ;, this, ., typeRegistry, =, typeRegistry, ;, firstLink, =, this, ;, nextLink, =]
[=, convention, ;, this, ., typeRegistry, =, typeRegistry, ;, firstLink, =, this, ;, nextLink, =, null, ;, }, public, ChainableReverseAbstractInterpreter]
[., convention, =, convention, ;, this, ., typeRegistry, =, typeRegistry, ;, firstLink, =, this, ;, nextLink, =, null, ;, }]
[;, this, ., typeRegistry, =, typeRegistry, ;, firstLink, =, this, ;, nextLink, =, null, ;, }, public, ChainableReverseAbstractInterpreter, append, (]
[=, typeRegistry, ;, firstLink, =, this, ;, nextLink, =, null, ;, }, public, ChainableReverseAbstractInterpreter, append, (, ChainableReverseAbstractInterpreter, lastLink, ), {]
[., typeRegistry, =, typeRegistry, ;, firstLink, =, this, ;, nextLink, =, null, ;, }, public, ChainableReverseAbstractInterpreter, append, (, ChainableReverseAbstractInterpreter, lastLink]
[;, firstLink, =, this, ;, nextLink, =, null, ;, }, public, ChainableReverseAbstractInterpreter, append, (, ChainableReverseAbstractInterpreter, lastLink, ), {, Preconditions, .]
[=, this, ;, nextLink, =, null, ;, }, public, ChainableReverseAbstractInterpreter, append, (, ChainableReverseAbstractInterpreter, lastLink, ), {, Preconditions, ., checkArgument, (]
[;, nextLink, =, null, ;, }, public, ChainableReverseAbstractInterpreter, append, (, ChainableReverseAbstractInterpreter, lastLink, ), {, Preconditions, ., checkArgument, (, lastLink, .]
[=, null, ;, }, public, ChainableReverseAbstractInterpreter, append, (, ChainableReverseAbstractInterpreter, lastLink, ), {, Preconditions, ., checkArgument, (, lastLink, ., nextLink, ==]
[;, }, public, ChainableReverseAbstractInterpreter, append, (, ChainableReverseAbstractInterpreter, lastLink, ), {, Preconditions, ., checkArgument, (, lastLink, ., nextLink, ==, null, )]
[;, this, ., nextLink, =, lastLink, ;, lastLink, ., firstLink, =, this, ., firstLink, ;, return, lastLink, ;, }, public]
[., checkArgument, (, lastLink, ., nextLink, ==, null, ), ;, this, ., nextLink, =, lastLink, ;, lastLink, ., firstLink, =]
[), ;, this, ., nextLink, =, lastLink, ;, lastLink, ., firstLink, =, this, ., firstLink, ;, return, lastLink, ;, }]
[==, null, ), ;, this, ., nextLink, =, lastLink, ;, lastLink, ., firstLink, =, this, ., firstLink, ;, return, lastLink]
[., nextLink, ==, null, ), ;, this, ., nextLink, =, lastLink, ;, lastLink, ., firstLink, =, this, ., firstLink, ;]
[), ;, this, ., nextLink, =, lastLink, ;, lastLink, ., firstLink, =, this, ., firstLink, ;, return, lastLink, ;, }]
[=, lastLink, ;, lastLink, ., firstLink, =, this, ., firstLink, ;, return, lastLink, ;, }, public, ChainableReverseAbstractInterpreter, getFirst, (, )]
[., nextLink, =, lastLink, ;, lastLink, ., firstLink, =, this, ., firstLink, ;, return, lastLink, ;, }, public, ChainableReverseAbstractInterpreter, getFirst]
[;, lastLink, ., firstLink, =, this, ., firstLink, ;, return, lastLink, ;, }, public, ChainableReverseAbstractInterpreter, getFirst, (, ), {, return]
[=, this, ., firstLink, ;, return, lastLink, ;, }, public, ChainableReverseAbstractInterpreter, getFirst, (, ), {, return, firstLink, ;, }, protected]
[., firstLink, =, this, ., firstLink, ;, return, lastLink, ;, }, public, ChainableReverseAbstractInterpreter, getFirst, (, ), {, return, firstLink, ;]
[;, return, lastLink, ;, }, public, ChainableReverseAbstractInterpreter, getFirst, (, ), {, return, firstLink, ;, }, protected, FlowScope, firstPreciserScopeKnowingConditionOutcome, (, Node]
[., firstLink, ;, return, lastLink, ;, }, public, ChainableReverseAbstractInterpreter, getFirst, (, ), {, return, firstLink, ;, }, protected, FlowScope, firstPreciserScopeKnowingConditionOutcome]
[;, }, public, ChainableReverseAbstractInterpreter, getFirst, (, ), {, return, firstLink, ;, }, protected, FlowScope, firstPreciserScopeKnowingConditionOutcome, (, Node, condition, ,, FlowScope]
[;, }, protected, FlowScope, firstPreciserScopeKnowingConditionOutcome, (, Node, condition, ,, FlowScope, blindScope, ,, boolean, outcome, ), {, return, firstLink, ., getPreciserScopeKnowingConditionOutcome]
[;, }, protected, FlowScope, nextPreciserScopeKnowingConditionOutcome, (, Node, condition, ,, FlowScope, blindScope, ,, boolean, outcome, ), {, return, nextLink, !=, null]
[., getPreciserScopeKnowingConditionOutcome, (, condition, ,, blindScope, ,, outcome, ), ;, }, protected, FlowScope, nextPreciserScopeKnowingConditionOutcome, (, Node, condition, ,, FlowScope, blindScope]
[,, blindScope, ,, outcome, ), ;, }, protected, FlowScope, nextPreciserScopeKnowingConditionOutcome, (, Node, condition, ,, FlowScope, blindScope, ,, boolean, outcome, )]
[,, outcome, ), ;, }, protected, FlowScope, nextPreciserScopeKnowingConditionOutcome, (, Node, condition, ,, FlowScope, blindScope, ,, boolean, outcome, ), {, return]
[), ;, }, protected, FlowScope, nextPreciserScopeKnowingConditionOutcome, (, Node, condition, ,, FlowScope, blindScope, ,, boolean, outcome, ), {, return, nextLink, !=]
[;, }, protected, JSType, getTypeIfRefinable, (, Node, node, ,, FlowScope, scope, ), {, switch, (, node, ., getType, (, )]
[?, nextLink, ., getPreciserScopeKnowingConditionOutcome, (, condition, ,, blindScope, ,, outcome, ), :, blindScope, ;, }, protected, JSType, getTypeIfRefinable, (, Node]
[!=, null, ?, nextLink, ., getPreciserScopeKnowingConditionOutcome, (, condition, ,, blindScope, ,, outcome, ), :, blindScope, ;, }, protected, JSType, getTypeIfRefinable]
[?, nextLink, ., getPreciserScopeKnowingConditionOutcome, (, condition, ,, blindScope, ,, outcome, ), :, blindScope, ;, }, protected, JSType, getTypeIfRefinable, (, Node]
[:, blindScope, ;, }, protected, JSType, getTypeIfRefinable, (, Node, node, ,, FlowScope, scope, ), {, switch, (, node, ., getType]
[., getPreciserScopeKnowingConditionOutcome, (, condition, ,, blindScope, ,, outcome, ), :, blindScope, ;, }, protected, JSType, getTypeIfRefinable, (, Node, node, ,]
[,, blindScope, ,, outcome, ), :, blindScope, ;, }, protected, JSType, getTypeIfRefinable, (, Node, node, ,, FlowScope, scope, ), {]
[,, outcome, ), :, blindScope, ;, }, protected, JSType, getTypeIfRefinable, (, Node, node, ,, FlowScope, scope, ), {, switch, (]
[), :, blindScope, ;, }, protected, JSType, getTypeIfRefinable, (, Node, node, ,, FlowScope, scope, ), {, switch, (, node, .]
[;, }, protected, JSType, getTypeIfRefinable, (, Node, node, ,, FlowScope, scope, ), {, switch, (, node, ., getType, (, )]
[), {, case, Token, ., NAME, :, StaticSlot, <, JSType, >, nameVar, =, scope, ., getSlot, (, node, ., getString]
[., getType, (, ), ), {, case, Token, ., NAME, :, StaticSlot, <, JSType, >, nameVar, =, scope, ., getSlot]
[:, StaticSlot, <, JSType, >, nameVar, =, scope, ., getSlot, (, node, ., getString, (, ), ), ;, if, (]
[., NAME, :, StaticSlot, <, JSType, >, nameVar, =, scope, ., getSlot, (, node, ., getString, (, ), ), ;]
[;, if, (, nameVar, !=, null, ), {, JSType, nameVarType, =, nameVar, ., getType, (, ), ;, if, (, nameVarType]
[., getSlot, (, node, ., getString, (, ), ), ;, if, (, nameVar, !=, null, ), {, JSType, nameVarType, =]
[), ;, if, (, nameVar, !=, null, ), {, JSType, nameVarType, =, nameVar, ., getType, (, ), ;, if, (]
[., getString, (, ), ), ;, if, (, nameVar, !=, null, ), {, JSType, nameVarType, =, nameVar, ., getType, (]
[), {, JSType, nameVarType, =, nameVar, ., getType, (, ), ;, if, (, nameVarType, ==, null, ), {, nameVarType, =]
[!=, null, ), {, JSType, nameVarType, =, nameVar, ., getType, (, ), ;, if, (, nameVarType, ==, null, ), {]
[), {, JSType, nameVarType, =, nameVar, ., getType, (, ), ;, if, (, nameVarType, ==, null, ), {, nameVarType, =]
[;, if, (, nameVarType, ==, null, ), {, nameVarType, =, node, ., getJSType, (, ), ;, }, return, nameVarType, ;]
[., getType, (, ), ;, if, (, nameVarType, ==, null, ), {, nameVarType, =, node, ., getJSType, (, ), ;]
[), {, nameVarType, =, node, ., getJSType, (, ), ;, }, return, nameVarType, ;, }, return, null, ;, case, Token]
[==, null, ), {, nameVarType, =, node, ., getJSType, (, ), ;, }, return, nameVarType, ;, }, return, null, ;]
[), {, nameVarType, =, node, ., getJSType, (, ), ;, }, return, nameVarType, ;, }, return, null, ;, case, Token]
[=, node, ., getJSType, (, ), ;, }, return, nameVarType, ;, }, return, null, ;, case, Token, ., GETPROP, :]
[;, }, return, nameVarType, ;, }, return, null, ;, case, Token, ., GETPROP, :, String, qualifiedName, =, node, ., getQualifiedName]
[., getJSType, (, ), ;, }, return, nameVarType, ;, }, return, null, ;, case, Token, ., GETPROP, :, String, qualifiedName]
[;, }, return, null, ;, case, Token, ., GETPROP, :, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, if]
[;, case, Token, ., GETPROP, :, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, if, (, qualifiedName, ==, null]
[:, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, if, (, qualifiedName, ==, null, ), {, return, null, ;]
[., GETPROP, :, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, if, (, qualifiedName, ==, null, ), {, return]
[;, if, (, qualifiedName, ==, null, ), {, return, null, ;, }, StaticSlot, <, JSType, >, propVar, =, scope, .]
[., getQualifiedName, (, ), ;, if, (, qualifiedName, ==, null, ), {, return, null, ;, }, StaticSlot, <, JSType, >]
[), {, return, null, ;, }, StaticSlot, <, JSType, >, propVar, =, scope, ., getSlot, (, qualifiedName, ), ;, JSType]
[==, null, ), {, return, null, ;, }, StaticSlot, <, JSType, >, propVar, =, scope, ., getSlot, (, qualifiedName, )]
[), {, return, null, ;, }, StaticSlot, <, JSType, >, propVar, =, scope, ., getSlot, (, qualifiedName, ), ;, JSType]
[;, }, StaticSlot, <, JSType, >, propVar, =, scope, ., getSlot, (, qualifiedName, ), ;, JSType, propVarType, =, null, ;]
[;, JSType, propVarType, =, null, ;, if, (, propVar, !=, null, ), {, propVarType, =, propVar, ., getType, (, )]
[., getSlot, (, qualifiedName, ), ;, JSType, propVarType, =, null, ;, if, (, propVar, !=, null, ), {, propVarType, =]
[), ;, JSType, propVarType, =, null, ;, if, (, propVar, !=, null, ), {, propVarType, =, propVar, ., getType, (]
[;, if, (, propVar, !=, null, ), {, propVarType, =, propVar, ., getType, (, ), ;, }, if, (, propVarType]
[), {, propVarType, =, propVar, ., getType, (, ), ;, }, if, (, propVarType, ==, null, ), {, propVarType, =]
[!=, null, ), {, propVarType, =, propVar, ., getType, (, ), ;, }, if, (, propVarType, ==, null, ), {]
[), {, propVarType, =, propVar, ., getType, (, ), ;, }, if, (, propVarType, ==, null, ), {, propVarType, =]
[=, propVar, ., getType, (, ), ;, }, if, (, propVarType, ==, null, ), {, propVarType, =, node, ., getJSType]
[;, }, if, (, propVarType, ==, null, ), {, propVarType, =, node, ., getJSType, (, ), ;, }, if, (]
[., getType, (, ), ;, }, if, (, propVarType, ==, null, ), {, propVarType, =, node, ., getJSType, (, )]
[), {, propVarType, =, node, ., getJSType, (, ), ;, }, if, (, propVarType, ==, null, ), {, propVarType, =]
[==, null, ), {, propVarType, =, node, ., getJSType, (, ), ;, }, if, (, propVarType, ==, null, ), {]
[), {, propVarType, =, node, ., getJSType, (, ), ;, }, if, (, propVarType, ==, null, ), {, propVarType, =]
[=, node, ., getJSType, (, ), ;, }, if, (, propVarType, ==, null, ), {, propVarType, =, getNativeType, (, UNKNOWN_TYPE]
[;, }, if, (, propVarType, ==, null, ), {, propVarType, =, getNativeType, (, UNKNOWN_TYPE, ), ;, }, return, propVarType, ;]
[., getJSType, (, ), ;, }, if, (, propVarType, ==, null, ), {, propVarType, =, getNativeType, (, UNKNOWN_TYPE, ), ;]
[), {, propVarType, =, getNativeType, (, UNKNOWN_TYPE, ), ;, }, return, propVarType, ;, }, return, null, ;, }, protected, void]
[==, null, ), {, propVarType, =, getNativeType, (, UNKNOWN_TYPE, ), ;, }, return, propVarType, ;, }, return, null, ;, }]
[), {, propVarType, =, getNativeType, (, UNKNOWN_TYPE, ), ;, }, return, propVarType, ;, }, return, null, ;, }, protected, void]
[=, getNativeType, (, UNKNOWN_TYPE, ), ;, }, return, propVarType, ;, }, return, null, ;, }, protected, void, declareNameInScope, (, FlowScope]
[;, }, return, propVarType, ;, }, return, null, ;, }, protected, void, declareNameInScope, (, FlowScope, scope, ,, Node, node, ,]
[), ;, }, return, propVarType, ;, }, return, null, ;, }, protected, void, declareNameInScope, (, FlowScope, scope, ,, Node, node]
[;, }, return, null, ;, }, protected, void, declareNameInScope, (, FlowScope, scope, ,, Node, node, ,, JSType, type, ), {]
[;, }, protected, void, declareNameInScope, (, FlowScope, scope, ,, Node, node, ,, JSType, type, ), {, switch, (, node, .]
[), {, case, Token, ., NAME, :, scope, ., inferSlotType, (, node, ., getString, (, ), ,, type, ), ;]
[., getType, (, ), ), {, case, Token, ., NAME, :, scope, ., inferSlotType, (, node, ., getString, (, )]
[:, scope, ., inferSlotType, (, node, ., getString, (, ), ,, type, ), ;, break, ;, case, Token, ., GETPROP]
[., NAME, :, scope, ., inferSlotType, (, node, ., getString, (, ), ,, type, ), ;, break, ;, case, Token]
[;, break, ;, case, Token, ., GETPROP, :, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, Preconditions, ., checkNotNull]
[., inferSlotType, (, node, ., getString, (, ), ,, type, ), ;, break, ;, case, Token, ., GETPROP, :, String]
[,, type, ), ;, break, ;, case, Token, ., GETPROP, :, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;]
[., getString, (, ), ,, type, ), ;, break, ;, case, Token, ., GETPROP, :, String, qualifiedName, =, node, .]
[), ;, break, ;, case, Token, ., GETPROP, :, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, Preconditions, .]
[:, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, Preconditions, ., checkNotNull, (, qualifiedName, ), ;, JSType, origType, =]
[., GETPROP, :, String, qualifiedName, =, node, ., getQualifiedName, (, ), ;, Preconditions, ., checkNotNull, (, qualifiedName, ), ;, JSType]
[;, Preconditions, ., checkNotNull, (, qualifiedName, ), ;, JSType, origType, =, node, ., getJSType, (, ), ;, origType, =, origType]
[., getQualifiedName, (, ), ;, Preconditions, ., checkNotNull, (, qualifiedName, ), ;, JSType, origType, =, node, ., getJSType, (, )]
[;, JSType, origType, =, node, ., getJSType, (, ), ;, origType, =, origType, ==, null, ?, getNativeType, (, UNKNOWN_TYPE, )]
[., checkNotNull, (, qualifiedName, ), ;, JSType, origType, =, node, ., getJSType, (, ), ;, origType, =, origType, ==, null]
[), ;, JSType, origType, =, node, ., getJSType, (, ), ;, origType, =, origType, ==, null, ?, getNativeType, (, UNKNOWN_TYPE]
[;, origType, =, origType, ==, null, ?, getNativeType, (, UNKNOWN_TYPE, ), :, origType, ;, scope, ., inferQualifiedSlot, (, node, ,]
[., getJSType, (, ), ;, origType, =, origType, ==, null, ?, getNativeType, (, UNKNOWN_TYPE, ), :, origType, ;, scope, .]
[=, origType, ==, null, ?, getNativeType, (, UNKNOWN_TYPE, ), :, origType, ;, scope, ., inferQualifiedSlot, (, node, ,, qualifiedName, ,]
[;, scope, ., inferQualifiedSlot, (, node, ,, qualifiedName, ,, origType, ,, type, ), ;, break, ;, case, Token, ., THIS]
[?, getNativeType, (, UNKNOWN_TYPE, ), :, origType, ;, scope, ., inferQualifiedSlot, (, node, ,, qualifiedName, ,, origType, ,, type, )]
[==, null, ?, getNativeType, (, UNKNOWN_TYPE, ), :, origType, ;, scope, ., inferQualifiedSlot, (, node, ,, qualifiedName, ,, origType, ,]
[?, getNativeType, (, UNKNOWN_TYPE, ), :, origType, ;, scope, ., inferQualifiedSlot, (, node, ,, qualifiedName, ,, origType, ,, type, )]
[:, origType, ;, scope, ., inferQualifiedSlot, (, node, ,, qualifiedName, ,, origType, ,, type, ), ;, break, ;, case, Token]
[), :, origType, ;, scope, ., inferQualifiedSlot, (, node, ,, qualifiedName, ,, origType, ,, type, ), ;, break, ;, case]
[;, scope, ., inferQualifiedSlot, (, node, ,, qualifiedName, ,, origType, ,, type, ), ;, break, ;, case, Token, ., THIS]
[;, break, ;, case, Token, ., THIS, :, break, ;, default, :, throw, new, IllegalArgumentException, (, "Node cannot be refined. \n", +, node, .]
[., inferQualifiedSlot, (, node, ,, qualifiedName, ,, origType, ,, type, ), ;, break, ;, case, Token, ., THIS, :, break]
[,, qualifiedName, ,, origType, ,, type, ), ;, break, ;, case, Token, ., THIS, :, break, ;, default, :, throw]
[,, origType, ,, type, ), ;, break, ;, case, Token, ., THIS, :, break, ;, default, :, throw, new, IllegalArgumentException]
[,, type, ), ;, break, ;, case, Token, ., THIS, :, break, ;, default, :, throw, new, IllegalArgumentException, (, "Node cannot be refined. \n"]
[), ;, break, ;, case, Token, ., THIS, :, break, ;, default, :, throw, new, IllegalArgumentException, (, "Node cannot be refined. \n", +, node]
[:, break, ;, default, :, throw, new, IllegalArgumentException, (, "Node cannot be refined. \n", +, node, ., toStringTree, (, ), ), ;, }, }]
[., THIS, :, break, ;, default, :, throw, new, IllegalArgumentException, (, "Node cannot be refined. \n", +, node, ., toStringTree, (, ), ), ;]
[;, }, }, private, final, Visitor, <, JSType, >, restrictUndefinedVisitor, =, new, Visitor, <, JSType, >, (, ), {, @]
[), ;, }, }, private, final, Visitor, <, JSType, >, restrictUndefinedVisitor, =, new, Visitor, <, JSType, >, (, ), {]
[+, node, ., toStringTree, (, ), ), ;, }, }, private, final, Visitor, <, JSType, >, restrictUndefinedVisitor, =, new, Visitor]
[), ;, }, }, private, final, Visitor, <, JSType, >, restrictUndefinedVisitor, =, new, Visitor, <, JSType, >, (, ), {]
[., toStringTree, (, ), ), ;, }, }, private, final, Visitor, <, JSType, >, restrictUndefinedVisitor, =, new, Visitor, <, JSType]
[;, private, final, Visitor, <, JSType, >, restrictNullVisitor, =, new, Visitor, <, JSType, >, (, ), {, @, Override, public]
[;, if, (, type, !=, null, &&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return]
[., visit, (, this, ), ;, if, (, type, !=, null, &&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (]
[., getPrimitiveType, (, ), ., visit, (, this, ), ;, if, (, type, !=, null, &&, enumElementType, ., getPrimitiveType, (]
[), ;, if, (, type, !=, null, &&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {]
[), {, return, enumElementType, ;, }, else, {, return, type, ;, }, }, @, Override, public, JSType, caseAllType, (, )]
[&&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else, {, return]
[!=, null, &&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else]
[&&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else, {, return]
[), {, return, enumElementType, ;, }, else, {, return, type, ;, }, }, @, Override, public, JSType, caseAllType, (, )]
[., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else, {, return, type, ;, }, }, @, Override]
[., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else, {, return, type, ;]
[), ), {, return, enumElementType, ;, }, else, {, return, type, ;, }, }, @, Override, public, JSType, caseAllType, (]
[;, }, else, {, return, type, ;, }, }, @, Override, public, JSType, caseAllType, (, ), {, return, typeRegistry, .]
[;, }, }, @, Override, public, JSType, caseAllType, (, ), {, return, typeRegistry, ., createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,]
[;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, getNativeType, (, NO_OBJECT_TYPE, ), ;, }, @, Override, public]
[., createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE, ,, NULL_TYPE, ), ;, }, @, Override, public, JSType, caseNoObjectType]
[,, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE, ,, NULL_TYPE, ), ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return]
[,, STRING_TYPE, ,, BOOLEAN_TYPE, ,, NULL_TYPE, ), ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, getNativeType, (]
[,, BOOLEAN_TYPE, ,, NULL_TYPE, ), ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, getNativeType, (, NO_OBJECT_TYPE, )]
[,, NULL_TYPE, ), ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, getNativeType, (, NO_OBJECT_TYPE, ), ;, }]
[), ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, getNativeType, (, NO_OBJECT_TYPE, ), ;, }, @, Override]
[;, }, @, Override, public, JSType, caseNoType, (, ), {, return, getNativeType, (, NO_TYPE, ), ;, }, @, Override, public]
[), ;, }, @, Override, public, JSType, caseNoType, (, ), {, return, getNativeType, (, NO_TYPE, ), ;, }, @, Override]
[;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, getNativeType, (, BOOLEAN_TYPE, ), ;, }, @, Override, public]
[), ;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, getNativeType, (, BOOLEAN_TYPE, ), ;, }, @, Override]
[;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, type, ;, }, @, Override, public, JSType]
[), ;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, type, ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseNullType, (, ), {, return, getNativeType, (, NULL_TYPE, ), ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, getNativeType, (, NUMBER_TYPE, ), ;, }, @, Override, public]
[), ;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, getNativeType, (, NUMBER_TYPE, ), ;, }, @, Override]
[;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, type, ;, }, @, Override, public, JSType]
[), ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, type, ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseStringType, (, ), {, return, getNativeType, (, STRING_TYPE, ), ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseUnionType, (, UnionType, type, ), {, return, type, ., getRestrictedUnion, (, getNativeType, (, VOID_TYPE]
[), ;, }, @, Override, public, JSType, caseUnionType, (, UnionType, type, ), {, return, type, ., getRestrictedUnion, (, getNativeType, (]
[;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return, getNativeType, (, UNKNOWN_TYPE, ), ;, }, @, Override, public]
[., getRestrictedUnion, (, getNativeType, (, VOID_TYPE, ), ), ;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return, getNativeType]
[), ;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return, getNativeType, (, UNKNOWN_TYPE, ), ;, }, @, Override]
[), ), ;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return, getNativeType, (, UNKNOWN_TYPE, ), ;, }, @]
[;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, null, ;, }, @, Override, public, JSType, caseParameterizedType, (]
[), ;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, null, ;, }, @, Override, public, JSType, caseParameterizedType]
[;, }, @, Override, public, JSType, caseParameterizedType, (, ParameterizedType, type, ), {, return, caseObjectType, (, type, ), ;, }, @]
[;, }, @, Override, public, JSType, caseTemplateType, (, TemplateType, templateType, ), {, return, caseObjectType, (, templateType, ), ;, }, }]
[), ;, }, @, Override, public, JSType, caseTemplateType, (, TemplateType, templateType, ), {, return, caseObjectType, (, templateType, ), ;, }]
[;, }, }, ;, private, final, Visitor, <, JSType, >, restrictNullVisitor, =, new, Visitor, <, JSType, >, (, ), {]
[), ;, }, }, ;, private, final, Visitor, <, JSType, >, restrictNullVisitor, =, new, Visitor, <, JSType, >, (, )]
[;, abstract, class, RestrictByTypeOfResultVisitor, implements, Visitor, <, JSType, >, {, protected, abstract, JSType, caseTopType, (, JSType, topType, ), ;, @]
[;, if, (, type, !=, null, &&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return]
[., visit, (, this, ), ;, if, (, type, !=, null, &&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (]
[., getPrimitiveType, (, ), ., visit, (, this, ), ;, if, (, type, !=, null, &&, enumElementType, ., getPrimitiveType, (]
[), ;, if, (, type, !=, null, &&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {]
[), {, return, enumElementType, ;, }, else, {, return, type, ;, }, }, @, Override, public, JSType, caseAllType, (, )]
[&&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else, {, return]
[!=, null, &&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else]
[&&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else, {, return]
[), {, return, enumElementType, ;, }, else, {, return, type, ;, }, }, @, Override, public, JSType, caseAllType, (, )]
[., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else, {, return, type, ;, }, }, @, Override]
[., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else, {, return, type, ;]
[), ), {, return, enumElementType, ;, }, else, {, return, type, ;, }, }, @, Override, public, JSType, caseAllType, (]
[;, }, else, {, return, type, ;, }, }, @, Override, public, JSType, caseAllType, (, ), {, return, typeRegistry, .]
[;, }, }, @, Override, public, JSType, caseAllType, (, ), {, return, typeRegistry, ., createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,]
[;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, getNativeType, (, NO_OBJECT_TYPE, ), ;, }, @, Override, public]
[., createUnionType, (, OBJECT_TYPE, ,, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE, ,, VOID_TYPE, ), ;, }, @, Override, public, JSType, caseNoObjectType]
[,, NUMBER_TYPE, ,, STRING_TYPE, ,, BOOLEAN_TYPE, ,, VOID_TYPE, ), ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return]
[,, STRING_TYPE, ,, BOOLEAN_TYPE, ,, VOID_TYPE, ), ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, getNativeType, (]
[,, BOOLEAN_TYPE, ,, VOID_TYPE, ), ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, getNativeType, (, NO_OBJECT_TYPE, )]
[,, VOID_TYPE, ), ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, getNativeType, (, NO_OBJECT_TYPE, ), ;, }]
[), ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, getNativeType, (, NO_OBJECT_TYPE, ), ;, }, @, Override]
[;, }, @, Override, public, JSType, caseNoType, (, ), {, return, getNativeType, (, NO_TYPE, ), ;, }, @, Override, public]
[), ;, }, @, Override, public, JSType, caseNoType, (, ), {, return, getNativeType, (, NO_TYPE, ), ;, }, @, Override]
[;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, getNativeType, (, BOOLEAN_TYPE, ), ;, }, @, Override, public]
[), ;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, getNativeType, (, BOOLEAN_TYPE, ), ;, }, @, Override]
[;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, type, ;, }, @, Override, public, JSType]
[), ;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, type, ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseNullType, (, ), {, return, null, ;, }, @, Override, public, JSType, caseNumberType, (]
[;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, getNativeType, (, NUMBER_TYPE, ), ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, type, ;, }, @, Override, public, JSType]
[), ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, type, ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseStringType, (, ), {, return, getNativeType, (, STRING_TYPE, ), ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseUnionType, (, UnionType, type, ), {, return, type, ., getRestrictedUnion, (, getNativeType, (, NULL_TYPE]
[), ;, }, @, Override, public, JSType, caseUnionType, (, UnionType, type, ), {, return, type, ., getRestrictedUnion, (, getNativeType, (]
[;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return, getNativeType, (, UNKNOWN_TYPE, ), ;, }, @, Override, public]
[., getRestrictedUnion, (, getNativeType, (, NULL_TYPE, ), ), ;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return, getNativeType]
[), ;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return, getNativeType, (, UNKNOWN_TYPE, ), ;, }, @, Override]
[), ), ;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return, getNativeType, (, UNKNOWN_TYPE, ), ;, }, @]
[;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, getNativeType, (, VOID_TYPE, ), ;, }, @, Override, public]
[), ;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, getNativeType, (, VOID_TYPE, ), ;, }, @, Override]
[;, }, @, Override, public, JSType, caseParameterizedType, (, ParameterizedType, type, ), {, return, caseObjectType, (, type, ), ;, }, @]
[), ;, }, @, Override, public, JSType, caseParameterizedType, (, ParameterizedType, type, ), {, return, caseObjectType, (, type, ), ;, }]
[;, }, @, Override, public, JSType, caseTemplateType, (, TemplateType, templateType, ), {, return, caseObjectType, (, templateType, ), ;, }, }]
[), ;, }, @, Override, public, JSType, caseTemplateType, (, TemplateType, templateType, ), {, return, caseObjectType, (, templateType, ), ;, }]
[;, }, }, ;, abstract, class, RestrictByTypeOfResultVisitor, implements, Visitor, <, JSType, >, {, protected, abstract, JSType, caseTopType, (, JSType, topType]
[), ;, }, }, ;, abstract, class, RestrictByTypeOfResultVisitor, implements, Visitor, <, JSType, >, {, protected, abstract, JSType, caseTopType, (, JSType]
[;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return, caseTopType, (, getNativeType, (, CHECKED_UNKNOWN_TYPE, ), ), ;, }]
[), ;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return, caseTopType, (, getNativeType, (, CHECKED_UNKNOWN_TYPE, ), ), ;]
[), ), ;, }, @, Override, public, JSType, caseUnknownType, (, ), {, return, caseTopType, (, getNativeType, (, CHECKED_UNKNOWN_TYPE, ), )]
[;, }, @, Override, public, JSType, caseUnionType, (, UnionType, type, ), {, JSType, restricted, =, null, ;, for, (, JSType]
[), ;, }, @, Override, public, JSType, caseUnionType, (, UnionType, type, ), {, JSType, restricted, =, null, ;, for, (]
[), ), ;, }, @, Override, public, JSType, caseUnionType, (, UnionType, type, ), {, JSType, restricted, =, null, ;, for]
[;, for, (, JSType, alternate, :, type, ., getAlternates, (, ), ), {, JSType, restrictedAlternate, =, alternate, ., visit, (]
[), {, JSType, restrictedAlternate, =, alternate, ., visit, (, this, ), ;, if, (, restrictedAlternate, !=, null, ), {, if]
[., getAlternates, (, ), ), {, JSType, restrictedAlternate, =, alternate, ., visit, (, this, ), ;, if, (, restrictedAlternate, !=]
[;, if, (, restrictedAlternate, !=, null, ), {, if, (, restricted, ==, null, ), {, restricted, =, restrictedAlternate, ;, }]
[., visit, (, this, ), ;, if, (, restrictedAlternate, !=, null, ), {, if, (, restricted, ==, null, ), {]
[), ;, if, (, restrictedAlternate, !=, null, ), {, if, (, restricted, ==, null, ), {, restricted, =, restrictedAlternate, ;]
[), {, if, (, restricted, ==, null, ), {, restricted, =, restrictedAlternate, ;, }, else, {, restricted, =, restrictedAlternate, .]
[!=, null, ), {, if, (, restricted, ==, null, ), {, restricted, =, restrictedAlternate, ;, }, else, {, restricted, =]
[), {, if, (, restricted, ==, null, ), {, restricted, =, restrictedAlternate, ;, }, else, {, restricted, =, restrictedAlternate, .]
[), {, restricted, =, restrictedAlternate, ;, }, else, {, restricted, =, restrictedAlternate, ., getLeastSupertype, (, restricted, ), ;, }, }]
[==, null, ), {, restricted, =, restrictedAlternate, ;, }, else, {, restricted, =, restrictedAlternate, ., getLeastSupertype, (, restricted, ), ;]
[), {, restricted, =, restrictedAlternate, ;, }, else, {, restricted, =, restrictedAlternate, ., getLeastSupertype, (, restricted, ), ;, }, }]
[=, restrictedAlternate, ;, }, else, {, restricted, =, restrictedAlternate, ., getLeastSupertype, (, restricted, ), ;, }, }, }, return, restricted]
[;, }, else, {, restricted, =, restrictedAlternate, ., getLeastSupertype, (, restricted, ), ;, }, }, }, return, restricted, ;, }]
[=, restrictedAlternate, ., getLeastSupertype, (, restricted, ), ;, }, }, }, return, restricted, ;, }, @, Override, public, JSType, caseNoType]
[;, }, }, }, return, restricted, ;, }, @, Override, public, JSType, caseNoType, (, ), {, return, getNativeType, (, NO_TYPE]
[., getLeastSupertype, (, restricted, ), ;, }, }, }, return, restricted, ;, }, @, Override, public, JSType, caseNoType, (, )]
[), ;, }, }, }, return, restricted, ;, }, @, Override, public, JSType, caseNoType, (, ), {, return, getNativeType, (]
[;, }, @, Override, public, JSType, caseNoType, (, ), {, return, getNativeType, (, NO_TYPE, ), ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseEnumElementType, (, EnumElementType, enumElementType, ), {, JSType, type, =, enumElementType, ., getPrimitiveType, (, )]
[), ;, }, @, Override, public, JSType, caseEnumElementType, (, EnumElementType, enumElementType, ), {, JSType, type, =, enumElementType, ., getPrimitiveType, (]
[;, if, (, type, !=, null, &&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return]
[., visit, (, this, ), ;, if, (, type, !=, null, &&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (]
[., getPrimitiveType, (, ), ., visit, (, this, ), ;, if, (, type, !=, null, &&, enumElementType, ., getPrimitiveType, (]
[), ;, if, (, type, !=, null, &&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {]
[), {, return, enumElementType, ;, }, else, {, return, type, ;, }, }, @, Override, public, JSType, caseParameterizedType, (, ParameterizedType]
[&&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else, {, return]
[!=, null, &&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else]
[&&, enumElementType, ., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else, {, return]
[), {, return, enumElementType, ;, }, else, {, return, type, ;, }, }, @, Override, public, JSType, caseParameterizedType, (, ParameterizedType]
[., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else, {, return, type, ;, }, }, @, Override]
[., getPrimitiveType, (, ), ., isEquivalentTo, (, type, ), ), {, return, enumElementType, ;, }, else, {, return, type, ;]
[), ), {, return, enumElementType, ;, }, else, {, return, type, ;, }, }, @, Override, public, JSType, caseParameterizedType, (]
[;, }, else, {, return, type, ;, }, }, @, Override, public, JSType, caseParameterizedType, (, ParameterizedType, type, ), {, return]
[;, }, }, @, Override, public, JSType, caseParameterizedType, (, ParameterizedType, type, ), {, return, caseObjectType, (, type, ), ;, }]
[;, }, @, Override, public, JSType, caseTemplateType, (, TemplateType, templateType, ), {, return, caseObjectType, (, templateType, ), ;, }, }]
[), ;, }, @, Override, public, JSType, caseTemplateType, (, TemplateType, templateType, ), {, return, caseObjectType, (, templateType, ), ;, }]
[;, }, }, abstract, class, RestrictByTrueTypeOfResultVisitor, extends, RestrictByTypeOfResultVisitor, {, @, Override, public, JSType, caseNoObjectType, (, ), {, return, null, ;]
[), ;, }, }, abstract, class, RestrictByTrueTypeOfResultVisitor, extends, RestrictByTypeOfResultVisitor, {, @, Override, public, JSType, caseNoObjectType, (, ), {, return, null]
[;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, null, ;, }, @, Override, public, JSType, caseFunctionType, (]
[;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, null, ;, }, @, Override, public, JSType]
[;, }, @, Override, public, JSType, caseNullType, (, ), {, return, null, ;, }, @, Override, public, JSType, caseNumberType, (]
[;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, null, ;, }, @, Override, public, JSType, caseObjectType, (]
[;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, null, ;, }, @, Override, public, JSType]
[;, }, @, Override, public, JSType, caseStringType, (, ), {, return, null, ;, }, @, Override, public, JSType, caseVoidType, (]
[;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, null, ;, }, }, abstract, class, RestrictByFalseTypeOfResultVisitor, extends, RestrictByTypeOfResultVisitor]
[;, }, }, abstract, class, RestrictByFalseTypeOfResultVisitor, extends, RestrictByTypeOfResultVisitor, {, @, Override, protected, JSType, caseTopType, (, JSType, topType, ), {, return]
[;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, getNativeType, (, NO_OBJECT_TYPE, ), ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, getNativeType, (, BOOLEAN_TYPE, ), ;, }, @, Override, public]
[), ;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, getNativeType, (, BOOLEAN_TYPE, ), ;, }, @, Override]
[;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, type, ;, }, @, Override, public, JSType]
[), ;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, type, ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseNullType, (, ), {, return, getNativeType, (, NULL_TYPE, ), ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, getNativeType, (, NUMBER_TYPE, ), ;, }, @, Override, public]
[), ;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, getNativeType, (, NUMBER_TYPE, ), ;, }, @, Override]
[;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, type, ;, }, @, Override, public, JSType]
[), ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, return, type, ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseStringType, (, ), {, return, getNativeType, (, STRING_TYPE, ), ;, }, @, Override, public]
[;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, getNativeType, (, VOID_TYPE, ), ;, }, }, private, class]
[), ;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, getNativeType, (, VOID_TYPE, ), ;, }, }, private]
[;, }, }, private, class, RestrictByOneTypeOfResultVisitor, extends, RestrictByTypeOfResultVisitor, {, private, final, String, value, ;, private, final, boolean, resultEqualsValue, ;, RestrictByOneTypeOfResultVisitor]
[), ;, }, }, private, class, RestrictByOneTypeOfResultVisitor, extends, RestrictByTypeOfResultVisitor, {, private, final, String, value, ;, private, final, boolean, resultEqualsValue, ;]
[=, value, ;, this, ., resultEqualsValue, =, resultEqualsValue, ;, }, private, boolean, matchesExpectation, (, String, result, ), {, return, result]
[., value, =, value, ;, this, ., resultEqualsValue, =, resultEqualsValue, ;, }, private, boolean, matchesExpectation, (, String, result, ), {]
[;, this, ., resultEqualsValue, =, resultEqualsValue, ;, }, private, boolean, matchesExpectation, (, String, result, ), {, return, result, ., equals]
[=, resultEqualsValue, ;, }, private, boolean, matchesExpectation, (, String, result, ), {, return, result, ., equals, (, value, ), ==]
[., resultEqualsValue, =, resultEqualsValue, ;, }, private, boolean, matchesExpectation, (, String, result, ), {, return, result, ., equals, (, value]
[;, }, private, boolean, matchesExpectation, (, String, result, ), {, return, result, ., equals, (, value, ), ==, resultEqualsValue, ;]
[;, }, @, Override, protected, JSType, caseTopType, (, JSType, topType, ), {, JSType, result, =, topType, ;, if, (, resultEqualsValue]
[==, resultEqualsValue, ;, }, @, Override, protected, JSType, caseTopType, (, JSType, topType, ), {, JSType, result, =, topType, ;, if]
[., equals, (, value, ), ==, resultEqualsValue, ;, }, @, Override, protected, JSType, caseTopType, (, JSType, topType, ), {, JSType]
[), ==, resultEqualsValue, ;, }, @, Override, protected, JSType, caseTopType, (, JSType, topType, ), {, JSType, result, =, topType, ;]
[;, }, @, Override, protected, JSType, caseTopType, (, JSType, topType, ), {, JSType, result, =, topType, ;, if, (, resultEqualsValue]
[;, if, (, resultEqualsValue, ), {, JSType, typeByName, =, getNativeTypeForTypeOf, (, value, ), ;, if, (, typeByName, !=, null, )]
[), {, JSType, typeByName, =, getNativeTypeForTypeOf, (, value, ), ;, if, (, typeByName, !=, null, ), {, result, =, typeByName]
[;, if, (, typeByName, !=, null, ), {, result, =, typeByName, ;, }, }, return, result, ;, }, @, Override]
[), ;, if, (, typeByName, !=, null, ), {, result, =, typeByName, ;, }, }, return, result, ;, }, @]
[), {, result, =, typeByName, ;, }, }, return, result, ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {]
[!=, null, ), {, result, =, typeByName, ;, }, }, return, result, ;, }, @, Override, public, JSType, caseNoObjectType, (]
[), {, result, =, typeByName, ;, }, }, return, result, ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {]
[=, typeByName, ;, }, }, return, result, ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, (, value]
[;, }, }, return, result, ;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, (, value, ., equals]
[;, }, @, Override, public, JSType, caseNoObjectType, (, ), {, return, (, value, ., equals, (, "object", ), ||, value]
[;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, matchesExpectation, (, "boolean", ), ?, getNativeType, (, BOOLEAN_TYPE, )]
[?, getNativeType, (, NO_OBJECT_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, matchesExpectation, (]
[==, resultEqualsValue, ?, getNativeType, (, NO_OBJECT_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return]
[), ==, resultEqualsValue, ?, getNativeType, (, NO_OBJECT_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseBooleanType, (, ), {]
[||, value, ., equals, (, "function", ), ), ==, resultEqualsValue, ?, getNativeType, (, NO_OBJECT_TYPE, ), :, null, ;, }, @]
[., equals, (, "object", ), ||, value, ., equals, (, "function", ), ), ==, resultEqualsValue, ?, getNativeType, (, NO_OBJECT_TYPE, )]
[), ||, value, ., equals, (, "function", ), ), ==, resultEqualsValue, ?, getNativeType, (, NO_OBJECT_TYPE, ), :, null, ;, }]
[), ==, resultEqualsValue, ?, getNativeType, (, NO_OBJECT_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseBooleanType, (, ), {]
[., equals, (, "function", ), ), ==, resultEqualsValue, ?, getNativeType, (, NO_OBJECT_TYPE, ), :, null, ;, }, @, Override, public]
[), ), ==, resultEqualsValue, ?, getNativeType, (, NO_OBJECT_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseBooleanType, (, )]
[?, getNativeType, (, NO_OBJECT_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, matchesExpectation, (]
[:, null, ;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, matchesExpectation, (, "boolean", ), ?, getNativeType, (]
[), :, null, ;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, matchesExpectation, (, "boolean", ), ?, getNativeType]
[;, }, @, Override, public, JSType, caseBooleanType, (, ), {, return, matchesExpectation, (, "boolean", ), ?, getNativeType, (, BOOLEAN_TYPE, )]
[;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, matchesExpectation, (, "function", ), ?, type, :]
[?, getNativeType, (, BOOLEAN_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return]
[), ?, getNativeType, (, BOOLEAN_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {]
[:, null, ;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, matchesExpectation, (, "function", ), ?]
[), :, null, ;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, matchesExpectation, (, "function", )]
[;, }, @, Override, public, JSType, caseFunctionType, (, FunctionType, type, ), {, return, matchesExpectation, (, "function", ), ?, type, :]
[;, }, @, Override, public, JSType, caseNullType, (, ), {, return, matchesExpectation, (, "object", ), ?, getNativeType, (, NULL_TYPE, )]
[?, type, :, null, ;, }, @, Override, public, JSType, caseNullType, (, ), {, return, matchesExpectation, (, "object", ), ?]
[), ?, type, :, null, ;, }, @, Override, public, JSType, caseNullType, (, ), {, return, matchesExpectation, (, "object", )]
[:, null, ;, }, @, Override, public, JSType, caseNullType, (, ), {, return, matchesExpectation, (, "object", ), ?, getNativeType, (]
[;, }, @, Override, public, JSType, caseNullType, (, ), {, return, matchesExpectation, (, "object", ), ?, getNativeType, (, NULL_TYPE, )]
[;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, matchesExpectation, (, "number", ), ?, getNativeType, (, NUMBER_TYPE, )]
[?, getNativeType, (, NULL_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, matchesExpectation, (]
[), ?, getNativeType, (, NULL_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, matchesExpectation]
[:, null, ;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, matchesExpectation, (, "number", ), ?, getNativeType, (]
[), :, null, ;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, matchesExpectation, (, "number", ), ?, getNativeType]
[;, }, @, Override, public, JSType, caseNumberType, (, ), {, return, matchesExpectation, (, "number", ), ?, getNativeType, (, NUMBER_TYPE, )]
[;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, if, (, value, ., equals, (, "function", )]
[?, getNativeType, (, NUMBER_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, if]
[), ?, getNativeType, (, NUMBER_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {]
[:, null, ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, if, (, value, ., equals, (]
[), :, null, ;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, if, (, value, ., equals]
[;, }, @, Override, public, JSType, caseObjectType, (, ObjectType, type, ), {, if, (, value, ., equals, (, "function", )]
[), {, JSType, ctorType, =, getNativeType, (, U2U_CONSTRUCTOR_TYPE, ), ;, if, (, resultEqualsValue, ), {, return, ctorType, ., getGreatestSubtype, (]
[., equals, (, "function", ), ), {, JSType, ctorType, =, getNativeType, (, U2U_CONSTRUCTOR_TYPE, ), ;, if, (, resultEqualsValue, ), {]
[), ), {, JSType, ctorType, =, getNativeType, (, U2U_CONSTRUCTOR_TYPE, ), ;, if, (, resultEqualsValue, ), {, return, ctorType, ., getGreatestSubtype]
[;, if, (, resultEqualsValue, ), {, return, ctorType, ., getGreatestSubtype, (, type, ), ;, }, else, {, return, type, .]
[), ;, if, (, resultEqualsValue, ), {, return, ctorType, ., getGreatestSubtype, (, type, ), ;, }, else, {, return, type]
[), {, return, ctorType, ., getGreatestSubtype, (, type, ), ;, }, else, {, return, type, ., isSubtype, (, ctorType, )]
[;, }, else, {, return, type, ., isSubtype, (, ctorType, ), ?, null, :, type, ;, }, }, return, matchesExpectation]
[., getGreatestSubtype, (, type, ), ;, }, else, {, return, type, ., isSubtype, (, ctorType, ), ?, null, :, type]
[), ;, }, else, {, return, type, ., isSubtype, (, ctorType, ), ?, null, :, type, ;, }, }, return]
[;, }, }, return, matchesExpectation, (, "object", ), ?, type, :, null, ;, }, @, Override, public, JSType, caseStringType, (]
[?, null, :, type, ;, }, }, return, matchesExpectation, (, "object", ), ?, type, :, null, ;, }, @, Override]
[., isSubtype, (, ctorType, ), ?, null, :, type, ;, }, }, return, matchesExpectation, (, "object", ), ?, type, :]
[), ?, null, :, type, ;, }, }, return, matchesExpectation, (, "object", ), ?, type, :, null, ;, }, @]
[:, type, ;, }, }, return, matchesExpectation, (, "object", ), ?, type, :, null, ;, }, @, Override, public, JSType]
[;, }, }, return, matchesExpectation, (, "object", ), ?, type, :, null, ;, }, @, Override, public, JSType, caseStringType, (]
[;, }, @, Override, public, JSType, caseStringType, (, ), {, return, matchesExpectation, (, "string", ), ?, getNativeType, (, STRING_TYPE, )]
[?, type, :, null, ;, }, @, Override, public, JSType, caseStringType, (, ), {, return, matchesExpectation, (, "string", ), ?]
[), ?, type, :, null, ;, }, @, Override, public, JSType, caseStringType, (, ), {, return, matchesExpectation, (, "string", )]
[:, null, ;, }, @, Override, public, JSType, caseStringType, (, ), {, return, matchesExpectation, (, "string", ), ?, getNativeType, (]
[;, }, @, Override, public, JSType, caseStringType, (, ), {, return, matchesExpectation, (, "string", ), ?, getNativeType, (, STRING_TYPE, )]
[;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, matchesExpectation, (, "undefined", ), ?, getNativeType, (, VOID_TYPE, )]
[?, getNativeType, (, STRING_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, matchesExpectation, (]
[), ?, getNativeType, (, STRING_TYPE, ), :, null, ;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, matchesExpectation]
[:, null, ;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, matchesExpectation, (, "undefined", ), ?, getNativeType, (]
[), :, null, ;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, matchesExpectation, (, "undefined", ), ?, getNativeType]
[;, }, @, Override, public, JSType, caseVoidType, (, ), {, return, matchesExpectation, (, "undefined", ), ?, getNativeType, (, VOID_TYPE, )]
[;, }, }, protected, final, JSType, getRestrictedWithoutUndefined, (, JSType, type, ), {, return, type, ==, null, ?, null, :, type]
[?, getNativeType, (, VOID_TYPE, ), :, null, ;, }, }, protected, final, JSType, getRestrictedWithoutUndefined, (, JSType, type, ), {, return]
[), ?, getNativeType, (, VOID_TYPE, ), :, null, ;, }, }, protected, final, JSType, getRestrictedWithoutUndefined, (, JSType, type, ), {]
[:, null, ;, }, }, protected, final, JSType, getRestrictedWithoutUndefined, (, JSType, type, ), {, return, type, ==, null, ?, null]
[), :, null, ;, }, }, protected, final, JSType, getRestrictedWithoutUndefined, (, JSType, type, ), {, return, type, ==, null, ?]
[;, }, }, protected, final, JSType, getRestrictedWithoutUndefined, (, JSType, type, ), {, return, type, ==, null, ?, null, :, type]
[;, }, protected, final, JSType, getRestrictedWithoutNull, (, JSType, type, ), {, return, type, ==, null, ?, null, :, type, .]
[?, null, :, type, ., visit, (, restrictUndefinedVisitor, ), ;, }, protected, final, JSType, getRestrictedWithoutNull, (, JSType, type, ), {]
[==, null, ?, null, :, type, ., visit, (, restrictUndefinedVisitor, ), ;, }, protected, final, JSType, getRestrictedWithoutNull, (, JSType, type]
[?, null, :, type, ., visit, (, restrictUndefinedVisitor, ), ;, }, protected, final, JSType, getRestrictedWithoutNull, (, JSType, type, ), {]
[:, type, ., visit, (, restrictUndefinedVisitor, ), ;, }, protected, final, JSType, getRestrictedWithoutNull, (, JSType, type, ), {, return, type]
[;, }, protected, final, JSType, getRestrictedWithoutNull, (, JSType, type, ), {, return, type, ==, null, ?, null, :, type, .]
[., visit, (, restrictUndefinedVisitor, ), ;, }, protected, final, JSType, getRestrictedWithoutNull, (, JSType, type, ), {, return, type, ==, null]
[), ;, }, protected, final, JSType, getRestrictedWithoutNull, (, JSType, type, ), {, return, type, ==, null, ?, null, :, type]
[;, }, JSType, getRestrictedByTypeOfResult, (, JSType, type, ,, String, value, ,, boolean, resultEqualsValue, ), {, if, (, type, ==, null]
[?, null, :, type, ., visit, (, restrictNullVisitor, ), ;, }, JSType, getRestrictedByTypeOfResult, (, JSType, type, ,, String, value, ,]
[==, null, ?, null, :, type, ., visit, (, restrictNullVisitor, ), ;, }, JSType, getRestrictedByTypeOfResult, (, JSType, type, ,, String]
[?, null, :, type, ., visit, (, restrictNullVisitor, ), ;, }, JSType, getRestrictedByTypeOfResult, (, JSType, type, ,, String, value, ,]
[:, type, ., visit, (, restrictNullVisitor, ), ;, }, JSType, getRestrictedByTypeOfResult, (, JSType, type, ,, String, value, ,, boolean, resultEqualsValue]
[;, }, JSType, getRestrictedByTypeOfResult, (, JSType, type, ,, String, value, ,, boolean, resultEqualsValue, ), {, if, (, type, ==, null]
[., visit, (, restrictNullVisitor, ), ;, }, JSType, getRestrictedByTypeOfResult, (, JSType, type, ,, String, value, ,, boolean, resultEqualsValue, ), {]
[), ;, }, JSType, getRestrictedByTypeOfResult, (, JSType, type, ,, String, value, ,, boolean, resultEqualsValue, ), {, if, (, type, ==]
[), {, if, (, resultEqualsValue, ), {, JSType, result, =, getNativeTypeForTypeOf, (, value, ), ;, return, result, ==, null, ?]
[==, null, ), {, if, (, resultEqualsValue, ), {, JSType, result, =, getNativeTypeForTypeOf, (, value, ), ;, return, result, ==]
[), {, if, (, resultEqualsValue, ), {, JSType, result, =, getNativeTypeForTypeOf, (, value, ), ;, return, result, ==, null, ?]
[), {, JSType, result, =, getNativeTypeForTypeOf, (, value, ), ;, return, result, ==, null, ?, getNativeType, (, CHECKED_UNKNOWN_TYPE, ), :]
[;, return, result, ==, null, ?, getNativeType, (, CHECKED_UNKNOWN_TYPE, ), :, result, ;, }, else, {, return, null, ;, }]
[), ;, return, result, ==, null, ?, getNativeType, (, CHECKED_UNKNOWN_TYPE, ), :, result, ;, }, else, {, return, null, ;]
[;, }, else, {, return, null, ;, }, }, return, type, ., visit, (, new, RestrictByOneTypeOfResultVisitor, (, value, ,, resultEqualsValue]
[?, getNativeType, (, CHECKED_UNKNOWN_TYPE, ), :, result, ;, }, else, {, return, null, ;, }, }, return, type, ., visit]
[==, null, ?, getNativeType, (, CHECKED_UNKNOWN_TYPE, ), :, result, ;, }, else, {, return, null, ;, }, }, return, type]
[?, getNativeType, (, CHECKED_UNKNOWN_TYPE, ), :, result, ;, }, else, {, return, null, ;, }, }, return, type, ., visit]
[:, result, ;, }, else, {, return, null, ;, }, }, return, type, ., visit, (, new, RestrictByOneTypeOfResultVisitor, (, value]
[), :, result, ;, }, else, {, return, null, ;, }, }, return, type, ., visit, (, new, RestrictByOneTypeOfResultVisitor, (]
[;, }, else, {, return, null, ;, }, }, return, type, ., visit, (, new, RestrictByOneTypeOfResultVisitor, (, value, ,, resultEqualsValue]
[;, }, }, return, type, ., visit, (, new, RestrictByOneTypeOfResultVisitor, (, value, ,, resultEqualsValue, ), ), ;, }, JSType, getNativeType]
[;, }, JSType, getNativeType, (, JSTypeNative, typeId, ), {, return, typeRegistry, ., getNativeType, (, typeId, ), ;, }, private, JSType]
[., visit, (, new, RestrictByOneTypeOfResultVisitor, (, value, ,, resultEqualsValue, ), ), ;, }, JSType, getNativeType, (, JSTypeNative, typeId, ), {]
[), ;, }, JSType, getNativeType, (, JSTypeNative, typeId, ), {, return, typeRegistry, ., getNativeType, (, typeId, ), ;, }, private]
[,, resultEqualsValue, ), ), ;, }, JSType, getNativeType, (, JSTypeNative, typeId, ), {, return, typeRegistry, ., getNativeType, (, typeId, )]
[), ), ;, }, JSType, getNativeType, (, JSTypeNative, typeId, ), {, return, typeRegistry, ., getNativeType, (, typeId, ), ;, }]
[;, }, private, JSType, getNativeTypeForTypeOf, (, String, value, ), {, if, (, value, ., equals, (, "number", ), ), {]
[., getNativeType, (, typeId, ), ;, }, private, JSType, getNativeTypeForTypeOf, (, String, value, ), {, if, (, value, ., equals]
[), ;, }, private, JSType, getNativeTypeForTypeOf, (, String, value, ), {, if, (, value, ., equals, (, "number", ), )]
[), {, return, getNativeType, (, NUMBER_TYPE, ), ;, }, else, if, (, value, ., equals, (, "boolean", ), ), {]
[., equals, (, "number", ), ), {, return, getNativeType, (, NUMBER_TYPE, ), ;, }, else, if, (, value, ., equals]
[), ), {, return, getNativeType, (, NUMBER_TYPE, ), ;, }, else, if, (, value, ., equals, (, "boolean", ), )]
[;, }, else, if, (, value, ., equals, (, "boolean", ), ), {, return, getNativeType, (, BOOLEAN_TYPE, ), ;, }]
[), ;, }, else, if, (, value, ., equals, (, "boolean", ), ), {, return, getNativeType, (, BOOLEAN_TYPE, ), ;]
[), {, return, getNativeType, (, BOOLEAN_TYPE, ), ;, }, else, if, (, value, ., equals, (, "string", ), ), {]
[., equals, (, "boolean", ), ), {, return, getNativeType, (, BOOLEAN_TYPE, ), ;, }, else, if, (, value, ., equals]
[), ), {, return, getNativeType, (, BOOLEAN_TYPE, ), ;, }, else, if, (, value, ., equals, (, "string", ), )]
[;, }, else, if, (, value, ., equals, (, "string", ), ), {, return, getNativeType, (, STRING_TYPE, ), ;, }]
[), ;, }, else, if, (, value, ., equals, (, "string", ), ), {, return, getNativeType, (, STRING_TYPE, ), ;]
[), {, return, getNativeType, (, STRING_TYPE, ), ;, }, else, if, (, value, ., equals, (, "undefined", ), ), {]
[., equals, (, "string", ), ), {, return, getNativeType, (, STRING_TYPE, ), ;, }, else, if, (, value, ., equals]
[), ), {, return, getNativeType, (, STRING_TYPE, ), ;, }, else, if, (, value, ., equals, (, "undefined", ), )]
[;, }, else, if, (, value, ., equals, (, "undefined", ), ), {, return, getNativeType, (, VOID_TYPE, ), ;, }]
[), ;, }, else, if, (, value, ., equals, (, "undefined", ), ), {, return, getNativeType, (, VOID_TYPE, ), ;]
[), {, return, getNativeType, (, VOID_TYPE, ), ;, }, else, if, (, value, ., equals, (, "function", ), ), {]
[., equals, (, "undefined", ), ), {, return, getNativeType, (, VOID_TYPE, ), ;, }, else, if, (, value, ., equals]
[), ), {, return, getNativeType, (, VOID_TYPE, ), ;, }, else, if, (, value, ., equals, (, "function", ), )]
[;, }, else, if, (, value, ., equals, (, "function", ), ), {, return, getNativeType, (, U2U_CONSTRUCTOR_TYPE, ), ;, }]
[), ;, }, else, if, (, value, ., equals, (, "function", ), ), {, return, getNativeType, (, U2U_CONSTRUCTOR_TYPE, ), ;]
[), {, return, getNativeType, (, U2U_CONSTRUCTOR_TYPE, ), ;, }, else, {, return, null, ;, }, }, }]
[., equals, (, "function", ), ), {, return, getNativeType, (, U2U_CONSTRUCTOR_TYPE, ), ;, }, else, {, return, null, ;, }]
[), ), {, return, getNativeType, (, U2U_CONSTRUCTOR_TYPE, ), ;, }, else, {, return, null, ;, }, }, }]
[;, }, else, {, return, null, ;, }, }, }]
[), ;, }, else, {, return, null, ;, }, }, }]
[;, }, }, }]
