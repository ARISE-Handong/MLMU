[., Vector2D, ;, class, CircleVectorial, implements, MultivariateDifferentiableVectorFunction, {, private, ArrayList, <, Vector2D, >, points, ;, public, CircleVectorial, (, ), {]
[;, class, CircleVectorial, implements, MultivariateDifferentiableVectorFunction, {, private, ArrayList, <, Vector2D, >, points, ;, public, CircleVectorial, (, ), {, points, =]
[new, ArrayList, <, Vector2D, >, (, ), ;, }, public, void, addPoint, (, double, px, ,, double, py, ), {]
[new, ArrayList, <, Vector2D, >, (, ), ;, }, public, void, addPoint, (, double, px, ,, double, py, ), {]
[>, (, ), ;, }, public, void, addPoint, (, double, px, ,, double, py, ), {, points, ., add, (]
[;, }, public, void, addPoint, (, double, px, ,, double, py, ), {, points, ., add, (, new, Vector2D, (]
[public, void, addPoint, (, double, px, ,, double, py, ), {, points, ., add, (, new, Vector2D, (, px, ,]
[., add, (, new, Vector2D, (, px, ,, py, ), ), ;, }, public, int, getN, (, ), {, return]
[., add, (, new, Vector2D, (, px, ,, py, ), ), ;, }, public, int, getN, (, ), {, return]
[{, return, points, ., size, (, ), ;, }, public, double, getRadius, (, Vector2D, center, ), {, double, r, =]
[;, }, public, double, getRadius, (, Vector2D, center, ), {, double, r, =, 0, ;, for, (, Vector2D, point, :]
[double, getRadius, (, Vector2D, center, ), {, double, r, =, 0, ;, for, (, Vector2D, point, :, points, ), {]
[(, Vector2D, center, ), {, double, r, =, 0, ;, for, (, Vector2D, point, :, points, ), {, r, +=]
[(, Vector2D, center, ), {, double, r, =, 0, ;, for, (, Vector2D, point, :, points, ), {, r, +=]
[{, double, r, =, 0, ;, for, (, Vector2D, point, :, points, ), {, r, +=, point, ., distance, (]
[;, for, (, Vector2D, point, :, points, ), {, r, +=, point, ., distance, (, center, ), ;, }, return]
[;, for, (, Vector2D, point, :, points, ), {, r, +=, point, ., distance, (, center, ), ;, }, return]
[(, Vector2D, point, :, points, ), {, r, +=, point, ., distance, (, center, ), ;, }, return, r, /]
[(, Vector2D, point, :, points, ), {, r, +=, point, ., distance, (, center, ), ;, }, return, r, /]
[), ;, }, private, DerivativeStructure, distance, (, Vector2D, point, ,, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, dx, =]
[), ;, }, private, DerivativeStructure, distance, (, Vector2D, point, ,, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, dx, =]
[DerivativeStructure, distance, (, Vector2D, point, ,, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, dx, =, cx, ., subtract, (]
[DerivativeStructure, distance, (, Vector2D, point, ,, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, dx, =, cx, ., subtract, (]
[cy, ), {, DerivativeStructure, dx, =, cx, ., subtract, (, point, ., getX, (, ), ), ;, DerivativeStructure, dy, =]
[cy, ), {, DerivativeStructure, dx, =, cx, ., subtract, (, point, ., getX, (, ), ), ;, DerivativeStructure, dy, =]
[dx, =, cx, ., subtract, (, point, ., getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (]
[dx, =, cx, ., subtract, (, point, ., getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (]
[getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY, (, ), ), ;, return]
[getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY, (, ), ), ;, return]
[getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY, (, ), ), ;, return]
[getX, (, ), ), ;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY, (, ), ), ;, return]
[;, DerivativeStructure, dy, =, cy, ., subtract, (, point, ., getY, (, ), ), ;, return, dx, ., multiply, (]
[., subtract, (, point, ., getY, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (]
[., subtract, (, point, ., getY, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (]
[., getY, (, ), ), ;, return, dx, ., multiply, (, dx, ), ., add, (, dy, ., multiply, (]
[., sqrt, (, ), ;, }, public, DerivativeStructure, getRadius, (, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, r, =]
[., sqrt, (, ), ;, }, public, DerivativeStructure, getRadius, (, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, r, =]
[., sqrt, (, ), ;, }, public, DerivativeStructure, getRadius, (, DerivativeStructure, cx, ,, DerivativeStructure, cy, ), {, DerivativeStructure, r, =]
[), {, DerivativeStructure, r, =, cx, ., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :]
[r, =, cx, ., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {]
[cx, ., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, r, =]
[cx, ., getField, (, ), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, r, =]
[), ., getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, r, =, r, ., add, (]
[getZero, (, ), ;, for, (, Vector2D, point, :, points, ), {, r, =, r, ., add, (, distance, (]
[), ;, for, (, Vector2D, point, :, points, ), {, r, =, r, ., add, (, distance, (, point, ,]
[for, (, Vector2D, point, :, points, ), {, r, =, r, ., add, (, distance, (, point, ,, cx, ,]
[), {, r, =, r, ., add, (, distance, (, point, ,, cx, ,, cy, ), ), ;, }, return]
[), {, r, =, r, ., add, (, distance, (, point, ,, cx, ,, cy, ), ), ;, }, return]
[r, ., add, (, distance, (, point, ,, cx, ,, cy, ), ), ;, }, return, r, ., divide, (]
[r, ., add, (, distance, (, point, ,, cx, ,, cy, ), ), ;, }, return, r, ., divide, (]
[(, ), ), ;, }, public, double, [, ], value, (, double, [, ], variables, ), {, Vector2D, center, =]
[;, }, public, double, [, ], value, (, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (]
[;, }, public, double, [, ], value, (, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (]
[public, double, [, ], value, (, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (, variables, []
[], value, (, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (, variables, [, 0, ], ,]
[], value, (, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (, variables, [, 0, ], ,]
[(, double, [, ], variables, ), {, Vector2D, center, =, new, Vector2D, (, variables, [, 0, ], ,, variables, []
[Vector2D, center, =, new, Vector2D, (, variables, [, 0, ], ,, variables, [, 1, ], ), ;, double, radius, =]
[=, new, Vector2D, (, variables, [, 0, ], ,, variables, [, 1, ], ), ;, double, radius, =, getRadius, (]
[,, variables, [, 1, ], ), ;, double, radius, =, getRadius, (, center, ), ;, double, [, ], residuals, =]
[1, ], ), ;, double, radius, =, getRadius, (, center, ), ;, double, [, ], residuals, =, new, double, []
[1, ], ), ;, double, radius, =, getRadius, (, center, ), ;, double, [, ], residuals, =, new, double, []
[double, [, ], residuals, =, new, double, [, points, ., size, (, ), ], ;, for, (, int, i, =]
[], residuals, =, new, double, [, points, ., size, (, ), ], ;, for, (, int, i, =, 0, ;]
[], residuals, =, new, double, [, points, ., size, (, ), ], ;, for, (, int, i, =, 0, ;]
[=, new, double, [, points, ., size, (, ), ], ;, for, (, int, i, =, 0, ;, i, <]
[=, new, double, [, points, ., size, (, ), ], ;, for, (, int, i, =, 0, ;, i, <]
[points, ., size, (, ), ], ;, for, (, int, i, =, 0, ;, i, <, residuals, ., length, ;]
[., size, (, ), ], ;, for, (, int, i, =, 0, ;, i, <, residuals, ., length, ;, ++]
[), ], ;, for, (, int, i, =, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {]
[), ], ;, for, (, int, i, =, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {]
[;, for, (, int, i, =, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {, residuals, []
[int, i, =, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {, residuals, [, i, ], =]
[int, i, =, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {, residuals, [, i, ], =]
[int, i, =, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {, residuals, [, i, ], =]
[int, i, =, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {, residuals, [, i, ], =]
[;, i, <, residuals, ., length, ;, ++, i, ), {, residuals, [, i, ], =, points, ., get, (]
[length, ;, ++, i, ), {, residuals, [, i, ], =, points, ., get, (, i, ), ., distance, (]
[i, ), {, residuals, [, i, ], =, points, ., get, (, i, ), ., distance, (, center, ), -]
[[, i, ], =, points, ., get, (, i, ), ., distance, (, center, ), -, radius, ;, }, return]
[}, return, residuals, ;, }, public, DerivativeStructure, [, ], value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =]
[residuals, ;, }, public, DerivativeStructure, [, ], value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius, (]
[residuals, ;, }, public, DerivativeStructure, [, ], value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius, (]
[}, public, DerivativeStructure, [, ], value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius, (, variables, []
[[, ], value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius, (, variables, [, 0, ], ,]
[[, ], value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius, (, variables, [, 0, ], ,]
[value, (, DerivativeStructure, [, ], variables, ), {, DerivativeStructure, radius, =, getRadius, (, variables, [, 0, ], ,, variables, []
[radius, =, getRadius, (, variables, [, 0, ], ,, variables, [, 1, ], ), ;, DerivativeStructure, [, ], residuals, =]
[(, variables, [, 0, ], ,, variables, [, 1, ], ), ;, DerivativeStructure, [, ], residuals, =, new, DerivativeStructure, []
[(, variables, [, 0, ], ,, variables, [, 1, ], ), ;, DerivativeStructure, [, ], residuals, =, new, DerivativeStructure, []
[DerivativeStructure, [, ], residuals, =, new, DerivativeStructure, [, points, ., size, (, ), ], ;, for, (, int, i, =]
[], residuals, =, new, DerivativeStructure, [, points, ., size, (, ), ], ;, for, (, int, i, =, 0, ;]
[], residuals, =, new, DerivativeStructure, [, points, ., size, (, ), ], ;, for, (, int, i, =, 0, ;]
[=, new, DerivativeStructure, [, points, ., size, (, ), ], ;, for, (, int, i, =, 0, ;, i, <]
[=, new, DerivativeStructure, [, points, ., size, (, ), ], ;, for, (, int, i, =, 0, ;, i, <]
[points, ., size, (, ), ], ;, for, (, int, i, =, 0, ;, i, <, residuals, ., length, ;]
[., size, (, ), ], ;, for, (, int, i, =, 0, ;, i, <, residuals, ., length, ;, ++]
[), ], ;, for, (, int, i, =, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {]
[), ], ;, for, (, int, i, =, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {]
[;, for, (, int, i, =, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {, residuals, []
[int, i, =, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {, residuals, [, i, ], =]
[int, i, =, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {, residuals, [, i, ], =]
[=, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {, residuals, [, i, ], =, distance, (]
[=, 0, ;, i, <, residuals, ., length, ;, ++, i, ), {, residuals, [, i, ], =, distance, (]
[<, residuals, ., length, ;, ++, i, ), {, residuals, [, i, ], =, distance, (, points, ., get, (]
[length, ;, ++, i, ), {, residuals, [, i, ], =, distance, (, points, ., get, (, i, ), ,]
[length, ;, ++, i, ), {, residuals, [, i, ], =, distance, (, points, ., get, (, i, ), ,]
[++, i, ), {, residuals, [, i, ], =, distance, (, points, ., get, (, i, ), ,, variables, []
[{, residuals, [, i, ], =, distance, (, points, ., get, (, i, ), ,, variables, [, 0, ], ,]
[{, residuals, [, i, ], =, distance, (, points, ., get, (, i, ), ,, variables, [, 0, ], ,]
[[, i, ], =, distance, (, points, ., get, (, i, ), ,, variables, [, 0, ], ,, variables, []
[points, ., get, (, i, ), ,, variables, [, 0, ], ,, variables, [, 1, ], ), ., subtract, (]
[), ,, variables, [, 0, ], ,, variables, [, 1, ], ), ., subtract, (, radius, ), ;, }, return]
