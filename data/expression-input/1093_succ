[;, public, AtMost, (, int, maxNumberOfInvocations, ), {, if, (, maxNumberOfInvocations, <, 0, ), {, throw, new, MockitoException, (, "Negative value is not allowed here"]
[), {, throw, new, MockitoException, (, "Negative value is not allowed here", ), ;, }, this, ., maxNumberOfInvocations, =, maxNumberOfInvocations, ;, }, public, void, verify]
[<, 0, ), {, throw, new, MockitoException, (, "Negative value is not allowed here", ), ;, }, this, ., maxNumberOfInvocations, =, maxNumberOfInvocations, ;, }, public]
[), {, throw, new, MockitoException, (, "Negative value is not allowed here", ), ;, }, this, ., maxNumberOfInvocations, =, maxNumberOfInvocations, ;, }, public, void, verify]
[;, }, this, ., maxNumberOfInvocations, =, maxNumberOfInvocations, ;, }, public, void, verify, (, VerificationData, data, ), {, List, <, Invocation]
[), ;, }, this, ., maxNumberOfInvocations, =, maxNumberOfInvocations, ;, }, public, void, verify, (, VerificationData, data, ), {, List, <]
[=, maxNumberOfInvocations, ;, }, public, void, verify, (, VerificationData, data, ), {, List, <, Invocation, >, invocations, =, data, .]
[., maxNumberOfInvocations, =, maxNumberOfInvocations, ;, }, public, void, verify, (, VerificationData, data, ), {, List, <, Invocation, >, invocations, =]
[;, }, public, void, verify, (, VerificationData, data, ), {, List, <, Invocation, >, invocations, =, data, ., getAllInvocations, (]
[;, InvocationMatcher, wanted, =, data, ., getWanted, (, ), ;, InvocationsFinder, finder, =, new, InvocationsFinder, (, ), ;, List, <]
[., getAllInvocations, (, ), ;, InvocationMatcher, wanted, =, data, ., getWanted, (, ), ;, InvocationsFinder, finder, =, new, InvocationsFinder, (]
[;, InvocationsFinder, finder, =, new, InvocationsFinder, (, ), ;, List, <, Invocation, >, found, =, finder, ., findInvocations, (, invocations]
[., getWanted, (, ), ;, InvocationsFinder, finder, =, new, InvocationsFinder, (, ), ;, List, <, Invocation, >, found, =, finder]
[;, List, <, Invocation, >, found, =, finder, ., findInvocations, (, invocations, ,, wanted, ), ;, int, foundSize, =, found]
[;, int, foundSize, =, found, ., size, (, ), ;, if, (, foundSize, >, maxNumberOfInvocations, ), {, new, Reporter, (]
[., findInvocations, (, invocations, ,, wanted, ), ;, int, foundSize, =, found, ., size, (, ), ;, if, (, foundSize]
[,, wanted, ), ;, int, foundSize, =, found, ., size, (, ), ;, if, (, foundSize, >, maxNumberOfInvocations, ), {]
[), ;, int, foundSize, =, found, ., size, (, ), ;, if, (, foundSize, >, maxNumberOfInvocations, ), {, new, Reporter]
[;, if, (, foundSize, >, maxNumberOfInvocations, ), {, new, Reporter, (, ), ., wantedAtMostX, (, maxNumberOfInvocations, ,, foundSize, ), ;]
[., size, (, ), ;, if, (, foundSize, >, maxNumberOfInvocations, ), {, new, Reporter, (, ), ., wantedAtMostX, (, maxNumberOfInvocations]
[), {, new, Reporter, (, ), ., wantedAtMostX, (, maxNumberOfInvocations, ,, foundSize, ), ;, }, invocationMarker, ., markVerified, (, found]
[>, maxNumberOfInvocations, ), {, new, Reporter, (, ), ., wantedAtMostX, (, maxNumberOfInvocations, ,, foundSize, ), ;, }, invocationMarker, ., markVerified]
[), {, new, Reporter, (, ), ., wantedAtMostX, (, maxNumberOfInvocations, ,, foundSize, ), ;, }, invocationMarker, ., markVerified, (, found]
[;, }, invocationMarker, ., markVerified, (, found, ,, wanted, ), ;, }, }]
[., wantedAtMostX, (, maxNumberOfInvocations, ,, foundSize, ), ;, }, invocationMarker, ., markVerified, (, found, ,, wanted, ), ;, }, }]
[,, foundSize, ), ;, }, invocationMarker, ., markVerified, (, found, ,, wanted, ), ;, }, }]
[), ;, }, invocationMarker, ., markVerified, (, found, ,, wanted, ), ;, }, }]
[;, }, }]
[., markVerified, (, found, ,, wanted, ), ;, }, }]
[,, wanted, ), ;, }, }]
[), ;, }, }]
