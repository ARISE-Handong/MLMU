[;, import, javax, ., annotation, ., Nullable, ;, public, class, SourceMapGeneratorV1, implements, SourceMapGenerator, {, private, final, static, int, UNMAPPED, =]
[import, javax, ., annotation, ., Nullable, ;, public, class, SourceMapGeneratorV1, implements, SourceMapGenerator, {, private, final, static, int, UNMAPPED, =, -]
[SourceMapGeneratorV1, implements, SourceMapGenerator, {, private, final, static, int, UNMAPPED, =, -, 1, ;, static, class, Mapping, {, int, id, =]
[UNMAPPED, ;, String, sourceFile, ;, FilePosition, originalPosition, ;, FilePosition, startPosition, ;, FilePosition, endPosition, ;, String, originalName, ;, boolean, used, =]
[FilePosition, endPosition, ;, String, originalName, ;, boolean, used, =, false, ;, }, private, class, MappingWriter, {, private, String, lastSourceFile, =]
[boolean, used, =, false, ;, }, private, class, MappingWriter, {, private, String, lastSourceFile, =, null, ;, private, String, lastSourceFileEscaped, =]
[private, class, MappingWriter, {, private, String, lastSourceFile, =, null, ;, private, String, lastSourceFileEscaped, =, null, ;, private, int, lastLine, =]
[lastSourceFile, =, null, ;, private, String, lastSourceFileEscaped, =, null, ;, private, int, lastLine, =, 0, ;, private, String, lastLineString, =]
[lastSourceFile, =, null, ;, private, String, lastSourceFileEscaped, =, null, ;, private, int, lastLine, =, 0, ;, private, String, lastLineString, =]
[private, String, lastSourceFileEscaped, =, null, ;, private, int, lastLine, =, 0, ;, private, String, lastLineString, =, String, ., valueOf, (]
[String, ., valueOf, (, 0, ), ;, private, void, appendMappingTo, (, Mapping, m, ,, Appendable, out, ), throws, IOException, {]
[String, ., valueOf, (, 0, ), ;, private, void, appendMappingTo, (, Mapping, m, ,, Appendable, out, ), throws, IOException, {]
[0, ), ;, private, void, appendMappingTo, (, Mapping, m, ,, Appendable, out, ), throws, IOException, {, out, ., append, (]
[(, Mapping, m, ,, Appendable, out, ), throws, IOException, {, out, ., append, (, "[", ), ;, String, sourceFile, =]
[(, Mapping, m, ,, Appendable, out, ), throws, IOException, {, out, ., append, (, "[", ), ;, String, sourceFile, =]
[{, out, ., append, (, "[", ), ;, String, sourceFile, =, m, ., sourceFile, ;, String, escapedSourceFile, ;, if, (]
[{, out, ., append, (, "[", ), ;, String, sourceFile, =, m, ., sourceFile, ;, String, escapedSourceFile, ;, if, (]
[., append, (, "[", ), ;, String, sourceFile, =, m, ., sourceFile, ;, String, escapedSourceFile, ;, if, (, lastSourceFile, !=]
["[", ), ;, String, sourceFile, =, m, ., sourceFile, ;, String, escapedSourceFile, ;, if, (, lastSourceFile, !=, sourceFile, ), {]
[;, String, sourceFile, =, m, ., sourceFile, ;, String, escapedSourceFile, ;, if, (, lastSourceFile, !=, sourceFile, ), {, lastSourceFile, =]
[sourceFile, =, m, ., sourceFile, ;, String, escapedSourceFile, ;, if, (, lastSourceFile, !=, sourceFile, ), {, lastSourceFile, =, sourceFile, ;]
[m, ., sourceFile, ;, String, escapedSourceFile, ;, if, (, lastSourceFile, !=, sourceFile, ), {, lastSourceFile, =, sourceFile, ;, lastSourceFileEscaped, =]
[sourceFile, ;, String, escapedSourceFile, ;, if, (, lastSourceFile, !=, sourceFile, ), {, lastSourceFile, =, sourceFile, ;, lastSourceFileEscaped, =, escapeString, (]
[;, if, (, lastSourceFile, !=, sourceFile, ), {, lastSourceFile, =, sourceFile, ;, lastSourceFileEscaped, =, escapeString, (, sourceFile, ), ;, }]
[(, lastSourceFile, !=, sourceFile, ), {, lastSourceFile, =, sourceFile, ;, lastSourceFileEscaped, =, escapeString, (, sourceFile, ), ;, }, escapedSourceFile, =]
[!=, sourceFile, ), {, lastSourceFile, =, sourceFile, ;, lastSourceFileEscaped, =, escapeString, (, sourceFile, ), ;, }, escapedSourceFile, =, lastSourceFileEscaped, ;]
[!=, sourceFile, ), {, lastSourceFile, =, sourceFile, ;, lastSourceFileEscaped, =, escapeString, (, sourceFile, ), ;, }, escapedSourceFile, =, lastSourceFileEscaped, ;]
[lastSourceFile, =, sourceFile, ;, lastSourceFileEscaped, =, escapeString, (, sourceFile, ), ;, }, escapedSourceFile, =, lastSourceFileEscaped, ;, out, ., append, (]
[;, lastSourceFileEscaped, =, escapeString, (, sourceFile, ), ;, }, escapedSourceFile, =, lastSourceFileEscaped, ;, out, ., append, (, escapedSourceFile, ), ;]
[;, lastSourceFileEscaped, =, escapeString, (, sourceFile, ), ;, }, escapedSourceFile, =, lastSourceFileEscaped, ;, out, ., append, (, escapedSourceFile, ), ;]
[(, sourceFile, ), ;, }, escapedSourceFile, =, lastSourceFileEscaped, ;, out, ., append, (, escapedSourceFile, ), ;, out, ., append, (]
[=, lastSourceFileEscaped, ;, out, ., append, (, escapedSourceFile, ), ;, out, ., append, (, ",", ), ;, int, line, =]
[=, lastSourceFileEscaped, ;, out, ., append, (, escapedSourceFile, ), ;, out, ., append, (, ",", ), ;, int, line, =]
[=, lastSourceFileEscaped, ;, out, ., append, (, escapedSourceFile, ), ;, out, ., append, (, ",", ), ;, int, line, =]
[out, ., append, (, ",", ), ;, int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (]
[out, ., append, (, ",", ), ;, int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (]
[append, (, ",", ), ;, int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (, line, !=]
[), ;, int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (, line, !=, lastLine, ), {]
[int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (, line, !=, lastLine, ), {, lastLineString, =]
[int, line, =, m, ., originalPosition, ., getLine, (, ), ;, if, (, line, !=, lastLine, ), {, lastLineString, =]
[., originalPosition, ., getLine, (, ), ;, if, (, line, !=, lastLine, ), {, lastLineString, =, String, ., valueOf, (]
[if, (, line, !=, lastLine, ), {, lastLineString, =, String, ., valueOf, (, line, ), ;, }, String, lineValue, =]
[line, !=, lastLine, ), {, lastLineString, =, String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;]
[line, !=, lastLine, ), {, lastLineString, =, String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;]
[{, lastLineString, =, String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;, out, ., append, (]
[String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, ), ;]
[String, ., valueOf, (, line, ), ;, }, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, ), ;]
[line, ), ;, }, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, ), ;, out, ., append, (]
[}, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, ), ;, out, ., append, (, ",", ), ;]
[}, String, lineValue, =, lastLineString, ;, out, ., append, (, lineValue, ), ;, out, ., append, (, ",", ), ;]
[lastLineString, ;, out, ., append, (, lineValue, ), ;, out, ., append, (, ",", ), ;, out, ., append, (]
[lastLineString, ;, out, ., append, (, lineValue, ), ;, out, ., append, (, ",", ), ;, out, ., append, (]
[append, (, lineValue, ), ;, out, ., append, (, ",", ), ;, out, ., append, (, String, ., valueOf, (]
[append, (, lineValue, ), ;, out, ., append, (, ",", ), ;, out, ., append, (, String, ., valueOf, (]
[append, (, lineValue, ), ;, out, ., append, (, ",", ), ;, out, ., append, (, String, ., valueOf, (]
[out, ., append, (, String, ., valueOf, (, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (]
[out, ., append, (, String, ., valueOf, (, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (]
[out, ., append, (, String, ., valueOf, (, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (]
[String, ., valueOf, (, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (, m, ., originalName, !=]
[(, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (, m, ., originalName, !=, null, ), {]
[(, m, ., originalPosition, ., getColumn, (, ), ), ), ;, if, (, m, ., originalName, !=, null, ), {]
[., getColumn, (, ), ), ), ;, if, (, m, ., originalName, !=, null, ), {, out, ., append, (]
[), ), ), ;, if, (, m, ., originalName, !=, null, ), {, out, ., append, (, ",", ), ;]
[), ), ), ;, if, (, m, ., originalName, !=, null, ), {, out, ., append, (, ",", ), ;]
[if, (, m, ., originalName, !=, null, ), {, out, ., append, (, ",", ), ;, out, ., append, (]
[m, ., originalName, !=, null, ), {, out, ., append, (, ",", ), ;, out, ., append, (, escapeString, (]
[m, ., originalName, !=, null, ), {, out, ., append, (, ",", ), ;, out, ., append, (, escapeString, (]
[out, ., append, (, ",", ), ;, out, ., append, (, escapeString, (, m, ., originalName, ), ), ;, }]
[out, ., append, (, ",", ), ;, out, ., append, (, escapeString, (, m, ., originalName, ), ), ;, }]
[",", ), ;, out, ., append, (, escapeString, (, m, ., originalName, ), ), ;, }, out, ., append, (]
[append, (, "]\n", ), ;, }, void, appendMappings, (, Appendable, out, ), throws, IOException, {, for, (, Mapping, m, :]
[}, void, appendMappings, (, Appendable, out, ), throws, IOException, {, for, (, Mapping, m, :, mappings, ), {, if, (]
[}, void, appendMappings, (, Appendable, out, ), throws, IOException, {, for, (, Mapping, m, :, mappings, ), {, if, (]
[out, ), throws, IOException, {, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {]
[throws, IOException, {, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {, appendMappingTo, (]
[{, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {, appendMappingTo, (, m, ,]
[), {, appendMappingTo, (, m, ,, out, ), ;, }, }, }, }, private, List, <, Mapping, >, mappings, =]
[), {, appendMappingTo, (, m, ,, out, ), ;, }, }, }, }, private, List, <, Mapping, >, mappings, =]
[List, <, Mapping, >, mappings, =, Lists, ., newArrayList, (, ), ;, private, Mapping, lastMapping, ;, private, FilePosition, offsetPosition, =]
[>, mappings, =, Lists, ., newArrayList, (, ), ;, private, Mapping, lastMapping, ;, private, FilePosition, offsetPosition, =, new, FilePosition, (]
[=, Lists, ., newArrayList, (, ), ;, private, Mapping, lastMapping, ;, private, FilePosition, offsetPosition, =, new, FilePosition, (, 0, ,]
[private, Mapping, lastMapping, ;, private, FilePosition, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, FilePosition, prefixPosition, =]
[;, private, FilePosition, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, FilePosition, prefixPosition, =, new, FilePosition, (]
[FilePosition, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, FilePosition, prefixPosition, =, new, FilePosition, (, 0, ,]
[prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, static, String, escapeString, (, String, value, ), {, return]
[prefixPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, private, static, String, escapeString, (, String, value, ), {, return]
[(, 0, ,, 0, ), ;, private, static, String, escapeString, (, String, value, ), {, return, Util, ., escapeString, (]
[String, sourceName, ,, @, Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (]
[String, sourceName, ,, @, Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (]
[String, sourceName, ,, @, Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (]
[,, @, Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (, sourceName, ==]
[Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (, sourceName, ==, null, ||]
[Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (, sourceName, ==, null, ||]
[Nullable, String, symbolName, ,, FilePosition, sourceStartPosition, ,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (, sourceName, ==, null, ||]
[,, FilePosition, startPosition, ,, FilePosition, endPosition, ), {, if, (, sourceName, ==, null, ||, sourceStartPosition, ., getLine, (, ), <]
[(, sourceName, ==, null, ||, sourceStartPosition, ., getLine, (, ), <, 0, ), {, return, ;, }, Mapping, mapping, =]
[sourceStartPosition, ., getLine, (, ), <, 0, ), {, return, ;, }, Mapping, mapping, =, new, Mapping, (, ), ;]
[sourceStartPosition, ., getLine, (, ), <, 0, ), {, return, ;, }, Mapping, mapping, =, new, Mapping, (, ), ;]
[), <, 0, ), {, return, ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =]
[0, ), {, return, ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName, ;]
[0, ), {, return, ;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName, ;]
[;, }, Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName, ;, mapping, ., originalPosition, =]
[Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName, ;, mapping, ., originalPosition, =, sourceStartPosition, ;]
[Mapping, mapping, =, new, Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName, ;, mapping, ., originalPosition, =, sourceStartPosition, ;]
[Mapping, (, ), ;, mapping, ., sourceFile, =, sourceName, ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =]
[mapping, ., sourceFile, =, sourceName, ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if, (]
[mapping, ., sourceFile, =, sourceName, ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if, (]
[mapping, ., sourceFile, =, sourceName, ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if, (]
[mapping, ., sourceFile, =, sourceName, ;, mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if, (]
[mapping, ., originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if, (, offsetPosition, ., getLine, (, ), ==]
[originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if, (, offsetPosition, ., getLine, (, ), ==, 0, &&]
[originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if, (, offsetPosition, ., getLine, (, ), ==, 0, &&]
[originalPosition, =, sourceStartPosition, ;, mapping, ., originalName, =, symbolName, ;, if, (, offsetPosition, ., getLine, (, ), ==, 0, &&]
[originalName, =, symbolName, ;, if, (, offsetPosition, ., getLine, (, ), ==, 0, &&, offsetPosition, ., getColumn, (, ), ==]
[;, if, (, offsetPosition, ., getLine, (, ), ==, 0, &&, offsetPosition, ., getColumn, (, ), ==, 0, ), {]
[;, if, (, offsetPosition, ., getLine, (, ), ==, 0, &&, offsetPosition, ., getColumn, (, ), ==, 0, ), {]
[., getLine, (, ), ==, 0, &&, offsetPosition, ., getColumn, (, ), ==, 0, ), {, mapping, ., startPosition, =]
[(, ), ==, 0, &&, offsetPosition, ., getColumn, (, ), ==, 0, ), {, mapping, ., startPosition, =, startPosition, ;]
[(, ), ==, 0, &&, offsetPosition, ., getColumn, (, ), ==, 0, ), {, mapping, ., startPosition, =, startPosition, ;]
[&&, offsetPosition, ., getColumn, (, ), ==, 0, ), {, mapping, ., startPosition, =, startPosition, ;, mapping, ., endPosition, =]
[), {, mapping, ., startPosition, =, startPosition, ;, mapping, ., endPosition, =, endPosition, ;, }, else, {, int, offsetLine, =]
[), {, mapping, ., startPosition, =, startPosition, ;, mapping, ., endPosition, =, endPosition, ;, }, else, {, int, offsetLine, =]
[., endPosition, =, endPosition, ;, }, else, {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =]
[., endPosition, =, endPosition, ;, }, else, {, int, offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =]
[offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =]
[offsetLine, =, offsetPosition, ., getLine, (, ), ;, int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =]
[int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (]
[int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (]
[int, startOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (]
[(, ), ;, int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (, startPosition, ., getLine, (, ), >]
[int, endOffsetPosition, =, offsetPosition, ., getColumn, (, ), ;, if, (, startPosition, ., getLine, (, ), >, 0, ), {]
[=, offsetPosition, ., getColumn, (, ), ;, if, (, startPosition, ., getLine, (, ), >, 0, ), {, startOffsetPosition, =]
[), ;, if, (, startPosition, ., getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (]
[), ;, if, (, startPosition, ., getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (]
[), ;, if, (, startPosition, ., getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (]
[getLine, (, ), >, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, ), >]
[>, 0, ), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {]
[), {, startOffsetPosition, =, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =]
[=, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }]
[=, 0, ;, }, if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }]
[if, (, endPosition, ., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }, mapping, ., startPosition, =]
[., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }, mapping, ., startPosition, =, new, FilePosition, (]
[., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }, mapping, ., startPosition, =, new, FilePosition, (]
[., getLine, (, ), >, 0, ), {, endOffsetPosition, =, 0, ;, }, mapping, ., startPosition, =, new, FilePosition, (]
[), {, endOffsetPosition, =, 0, ;, }, mapping, ., startPosition, =, new, FilePosition, (, startPosition, ., getLine, (, ), +]
[endOffsetPosition, =, 0, ;, }, mapping, ., startPosition, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,]
[endOffsetPosition, =, 0, ;, }, mapping, ., startPosition, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,]
[endOffsetPosition, =, 0, ;, }, mapping, ., startPosition, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,]
[., startPosition, =, new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +]
[new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;]
[new, FilePosition, (, startPosition, ., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;]
[., getLine, (, ), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, mapping, ., endPosition, =]
[), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, mapping, ., endPosition, =, new, FilePosition, (]
[), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, mapping, ., endPosition, =, new, FilePosition, (]
[), +, offsetLine, ,, startPosition, ., getColumn, (, ), +, startOffsetPosition, ), ;, mapping, ., endPosition, =, new, FilePosition, (]
[getColumn, (, ), +, startOffsetPosition, ), ;, mapping, ., endPosition, =, new, FilePosition, (, endPosition, ., getLine, (, ), +]
[), +, startOffsetPosition, ), ;, mapping, ., endPosition, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,]
[), +, startOffsetPosition, ), ;, mapping, ., endPosition, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,]
[), +, startOffsetPosition, ), ;, mapping, ., endPosition, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,]
[., endPosition, =, new, FilePosition, (, endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, ), +]
[endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, if, (]
[endPosition, ., getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, if, (]
[getLine, (, ), +, offsetLine, ,, endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, if, (, lastMapping, !=]
[endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, if, (, lastMapping, !=, null, ), {, int, lastLine, =]
[endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, if, (, lastMapping, !=, null, ), {, int, lastLine, =]
[endPosition, ., getColumn, (, ), +, endOffsetPosition, ), ;, }, if, (, lastMapping, !=, null, ), {, int, lastLine, =]
[(, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;, int, lastColumn, =]
[(, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;, int, lastColumn, =]
[(, lastMapping, !=, null, ), {, int, lastLine, =, lastMapping, ., startPosition, ., getLine, (, ), ;, int, lastColumn, =]
[startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, ., getColumn, (, ), ;, int, nextLine, =]
[startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, ., getColumn, (, ), ;, int, nextLine, =]
[startPosition, ., getLine, (, ), ;, int, lastColumn, =, lastMapping, ., startPosition, ., getColumn, (, ), ;, int, nextLine, =]
[startPosition, ., getColumn, (, ), ;, int, nextLine, =, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =]
[startPosition, ., getColumn, (, ), ;, int, nextLine, =, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =]
[startPosition, ., getColumn, (, ), ;, int, nextLine, =, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =]
[=, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;]
[=, mapping, ., startPosition, ., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;]
[., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (]
[., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (]
[., getLine, (, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (]
[(, ), ;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >]
[;, int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||]
[int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (]
[int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (]
[int, nextColumn, =, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (]
[=, mapping, ., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==]
[., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&]
[., startPosition, ., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&]
[., getColumn, (, ), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=]
[), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,]
[), ;, Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,]
[Preconditions, ., checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +]
[checkState, (, nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,]
[nextLine, >, lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,]
[lastLine, ||, (, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,]
[(, nextLine, ==, lastLine, &&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,]
[&&, nextColumn, >=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }]
[>=, lastColumn, ), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =]
[), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;]
[), ,, "Incorrect source mappings order, previous : (%s,%s)\n", +, "new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;]
["new : (%s,%s)\nnode : %s", ,, lastLine, ,, lastColumn, ,, nextLine, ,, nextColumn, ), ;, }, lastMapping, =, mapping, ;, mappings, ., add, (]
[., add, (, mapping, ), ;, }, @, Override, public, void, setWrapperPrefix, (, String, prefix, ), {, int, prefixLine, =]
[;, }, @, Override, public, void, setWrapperPrefix, (, String, prefix, ), {, int, prefixLine, =, 0, ;, int, prefixIndex, =]
[(, String, prefix, ), {, int, prefixLine, =, 0, ;, int, prefixIndex, =, 0, ;, for, (, int, i, =]
[prefix, ), {, int, prefixLine, =, 0, ;, int, prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;]
[prefix, ), {, int, prefixLine, =, 0, ;, int, prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;]
[{, int, prefixLine, =, 0, ;, int, prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;, i, <]
[{, int, prefixLine, =, 0, ;, int, prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;, i, <]
[int, prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;, i, <, prefix, ., length, (, ), ;]
[prefixIndex, =, 0, ;, for, (, int, i, =, 0, ;, i, <, prefix, ., length, (, ), ;, ++]
[(, int, i, =, 0, ;, i, <, prefix, ., length, (, ), ;, ++, i, ), {, if, (]
[(, int, i, =, 0, ;, i, <, prefix, ., length, (, ), ;, ++, i, ), {, if, (]
[(, int, i, =, 0, ;, i, <, prefix, ., length, (, ), ;, ++, i, ), {, if, (]
[0, ;, i, <, prefix, ., length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (]
[<, prefix, ., length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==]
[length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {]
[length, (, ), ;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {]
[;, ++, i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;]
[i, ), {, if, (, prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =]
[prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {]
[prefix, ., charAt, (, i, ), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {]
[), ==, '\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }]
['\n', ), {, prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =]
[prefixLine, ++, ;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new, FilePosition, (]
[;, prefixIndex, =, 0, ;, }, else, {, prefixIndex, ++, ;, }, }, prefixPosition, =, new, FilePosition, (, prefixLine, ,]
[(, prefixLine, ,, prefixIndex, ), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {]
[(, prefixLine, ,, prefixIndex, ), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {]
[), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (]
[), ;, }, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (]
[}, @, Override, public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine, >=]
[public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;]
[public, void, setStartingPosition, (, int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;]
[int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (]
[int, offsetLine, ,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (]
[,, int, offsetIndex, ), {, Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=]
[), {, Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;]
[Preconditions, ., checkState, (, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =]
[(, offsetLine, >=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (]
[>=, 0, ), ;, Preconditions, ., checkState, (, offsetIndex, >=, 0, ), ;, offsetPosition, =, new, FilePosition, (, offsetLine, ,]
[;, offsetPosition, =, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @, Override, public, void, reset, (, ), {]
[=, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @, Override, public, void, reset, (, ), {, mappings, =]
[=, new, FilePosition, (, offsetLine, ,, offsetIndex, ), ;, }, @, Override, public, void, reset, (, ), {, mappings, =]
[offsetIndex, ), ;, }, @, Override, public, void, reset, (, ), {, mappings, =, Lists, ., newArrayList, (, ), ;]
[;, }, @, Override, public, void, reset, (, ), {, mappings, =, Lists, ., newArrayList, (, ), ;, lastMapping, =]
[@, Override, public, void, reset, (, ), {, mappings, =, Lists, ., newArrayList, (, ), ;, lastMapping, =, null, ;]
[public, void, reset, (, ), {, mappings, =, Lists, ., newArrayList, (, ), ;, lastMapping, =, null, ;, offsetPosition, =]
[(, ), {, mappings, =, Lists, ., newArrayList, (, ), ;, lastMapping, =, null, ;, offsetPosition, =, new, FilePosition, (]
[{, mappings, =, Lists, ., newArrayList, (, ), ;, lastMapping, =, null, ;, offsetPosition, =, new, FilePosition, (, 0, ,]
[Lists, ., newArrayList, (, ), ;, lastMapping, =, null, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;]
[newArrayList, (, ), ;, lastMapping, =, null, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =]
[;, lastMapping, =, null, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =, new, FilePosition, (]
[=, null, ;, offsetPosition, =, new, FilePosition, (, 0, ,, 0, ), ;, prefixPosition, =, new, FilePosition, (, 0, ,]
[;, }, @, Override, public, void, appendTo, (, Appendable, out, ,, String, name, ), throws, IOException, {, int, maxLine, =]
[public, void, appendTo, (, Appendable, out, ,, String, name, ), throws, IOException, {, int, maxLine, =, prepMappings, (, ), ;]
[public, void, appendTo, (, Appendable, out, ,, String, name, ), throws, IOException, {, int, maxLine, =, prepMappings, (, ), ;]
[Appendable, out, ,, String, name, ), throws, IOException, {, int, maxLine, =, prepMappings, (, ), ;, out, ., append, (]
[String, name, ), throws, IOException, {, int, maxLine, =, prepMappings, (, ), ;, out, ., append, (, "/** Begin line maps. **/{ \"file\" : ", ), ;]
[String, name, ), throws, IOException, {, int, maxLine, =, prepMappings, (, ), ;, out, ., append, (, "/** Begin line maps. **/{ \"file\" : ", ), ;]
[IOException, {, int, maxLine, =, prepMappings, (, ), ;, out, ., append, (, "/** Begin line maps. **/{ \"file\" : ", ), ;, out, ., append, (]
[int, maxLine, =, prepMappings, (, ), ;, out, ., append, (, "/** Begin line maps. **/{ \"file\" : ", ), ;, out, ., append, (, escapeString, (]
[(, ), ;, out, ., append, (, "/** Begin line maps. **/{ \"file\" : ", ), ;, out, ., append, (, escapeString, (, name, ), ), ;]
[(, ), ;, out, ., append, (, "/** Begin line maps. **/{ \"file\" : ", ), ;, out, ., append, (, escapeString, (, name, ), ), ;]
[., append, (, "/** Begin line maps. **/{ \"file\" : ", ), ;, out, ., append, (, escapeString, (, name, ), ), ;, out, ., append, (]
["/** Begin line maps. **/{ \"file\" : ", ), ;, out, ., append, (, escapeString, (, name, ), ), ;, out, ., append, (, ", \"count\": ", ), ;]
["/** Begin line maps. **/{ \"file\" : ", ), ;, out, ., append, (, escapeString, (, name, ), ), ;, out, ., append, (, ", \"count\": ", ), ;]
[., append, (, escapeString, (, name, ), ), ;, out, ., append, (, ", \"count\": ", ), ;, out, ., append, (]
[., append, (, escapeString, (, name, ), ), ;, out, ., append, (, ", \"count\": ", ), ;, out, ., append, (]
[(, name, ), ), ;, out, ., append, (, ", \"count\": ", ), ;, out, ., append, (, String, ., valueOf, (]
[(, name, ), ), ;, out, ., append, (, ", \"count\": ", ), ;, out, ., append, (, String, ., valueOf, (]
[), ), ;, out, ., append, (, ", \"count\": ", ), ;, out, ., append, (, String, ., valueOf, (, maxLine, +]
[., append, (, ", \"count\": ", ), ;, out, ., append, (, String, ., valueOf, (, maxLine, +, 1, ), ), ;]
[., append, (, ", \"count\": ", ), ;, out, ., append, (, String, ., valueOf, (, maxLine, +, 1, ), ), ;]
[), ;, out, ., append, (, String, ., valueOf, (, maxLine, +, 1, ), ), ;, out, ., append, (]
[., append, (, String, ., valueOf, (, maxLine, +, 1, ), ), ;, out, ., append, (, " }\n", ), ;]
[., append, (, String, ., valueOf, (, maxLine, +, 1, ), ), ;, out, ., append, (, " }\n", ), ;]
[append, (, String, ., valueOf, (, maxLine, +, 1, ), ), ;, out, ., append, (, " }\n", ), ;, (]
[., valueOf, (, maxLine, +, 1, ), ), ;, out, ., append, (, " }\n", ), ;, (, new, LineMapper, (]
[;, out, ., append, (, " }\n", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;]
[;, out, ., append, (, " }\n", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;]
[(, " }\n", ), ;, (, new, LineMapper, (, out, ), ), ., appendLineMappings, (, ), ;, out, ., append, (]
[out, ), ), ., appendLineMappings, (, ), ;, out, ., append, (, "/** Begin file information. **/\n", ), ;, for, (, int, i, =]
[), ., appendLineMappings, (, ), ;, out, ., append, (, "/** Begin file information. **/\n", ), ;, for, (, int, i, =, 0, ;]
[), ., appendLineMappings, (, ), ;, out, ., append, (, "/** Begin file information. **/\n", ), ;, for, (, int, i, =, 0, ;]
[appendLineMappings, (, ), ;, out, ., append, (, "/** Begin file information. **/\n", ), ;, for, (, int, i, =, 0, ;, i, <=]
[), ;, out, ., append, (, "/** Begin file information. **/\n", ), ;, for, (, int, i, =, 0, ;, i, <=, maxLine, ;]
[;, out, ., append, (, "/** Begin file information. **/\n", ), ;, for, (, int, i, =, 0, ;, i, <=, maxLine, ;, ++]
[append, (, "/** Begin file information. **/\n", ), ;, for, (, int, i, =, 0, ;, i, <=, maxLine, ;, ++, i, ), {]
[append, (, "/** Begin file information. **/\n", ), ;, for, (, int, i, =, 0, ;, i, <=, maxLine, ;, ++, i, ), {]
[;, for, (, int, i, =, 0, ;, i, <=, maxLine, ;, ++, i, ), {, out, ., append, (]
[i, =, 0, ;, i, <=, maxLine, ;, ++, i, ), {, out, ., append, (, "[]\n", ), ;, }]
[i, =, 0, ;, i, <=, maxLine, ;, ++, i, ), {, out, ., append, (, "[]\n", ), ;, }]
[i, <=, maxLine, ;, ++, i, ), {, out, ., append, (, "[]\n", ), ;, }, out, ., append, (]
[;, ++, i, ), {, out, ., append, (, "[]\n", ), ;, }, out, ., append, (, "/** Begin mapping definitions. **/\n", ), ;]
[;, ++, i, ), {, out, ., append, (, "[]\n", ), ;, }, out, ., append, (, "/** Begin mapping definitions. **/\n", ), ;]
[++, i, ), {, out, ., append, (, "[]\n", ), ;, }, out, ., append, (, "/** Begin mapping definitions. **/\n", ), ;, (]
["[]\n", ), ;, }, out, ., append, (, "/** Begin mapping definitions. **/\n", ), ;, (, new, MappingWriter, (, ), ), ., appendMappings, (]
[new, MappingWriter, (, ), ), ., appendMappings, (, out, ), ;, }, private, int, prepMappings, (, ), throws, IOException, {]
[new, MappingWriter, (, ), ), ., appendMappings, (, out, ), ;, }, private, int, prepMappings, (, ), throws, IOException, {]
[MappingWriter, (, ), ), ., appendMappings, (, out, ), ;, }, private, int, prepMappings, (, ), throws, IOException, {, (]
[), ;, }, private, int, prepMappings, (, ), throws, IOException, {, (, new, MappingTraversal, (, ), ), ., traverse, (]
[IOException, {, (, new, MappingTraversal, (, ), ), ., traverse, (, new, UsedMappingCheck, (, ), ), ;, int, id, =]
[(, ), ), ., traverse, (, new, UsedMappingCheck, (, ), ), ;, int, id, =, 0, ;, int, maxLine, =]
[UsedMappingCheck, (, ), ), ;, int, id, =, 0, ;, int, maxLine, =, 0, ;, for, (, Mapping, m, :]
[int, id, =, 0, ;, int, maxLine, =, 0, ;, for, (, Mapping, m, :, mappings, ), {, if, (]
[int, id, =, 0, ;, int, maxLine, =, 0, ;, for, (, Mapping, m, :, mappings, ), {, if, (]
[int, maxLine, =, 0, ;, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {]
[int, maxLine, =, 0, ;, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {]
[;, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {, m, ., id, =]
[;, for, (, Mapping, m, :, mappings, ), {, if, (, m, ., used, ), {, m, ., id, =]
[mappings, ), {, if, (, m, ., used, ), {, m, ., id, =, id, ++, ;, int, endPositionLine, =]
[mappings, ), {, if, (, m, ., used, ), {, m, ., id, =, id, ++, ;, int, endPositionLine, =]
[mappings, ), {, if, (, m, ., used, ), {, m, ., id, =, id, ++, ;, int, endPositionLine, =]
[), {, m, ., id, =, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;]
[m, ., id, =, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =]
[m, ., id, =, id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =]
[id, ++, ;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (]
[;, int, endPositionLine, =, m, ., endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,]
[endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return]
[endPosition, ., getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return]
[getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return, maxLine, +]
[getLine, (, ), ;, maxLine, =, Math, ., max, (, maxLine, ,, endPositionLine, ), ;, }, }, return, maxLine, +]
[getLine, (, ), ;, }, private, class, LineMapper, implements, MappingVisitor, {, private, final, Appendable, out, ;, private, boolean, firstChar, =]
[implements, MappingVisitor, {, private, final, Appendable, out, ;, private, boolean, firstChar, =, true, ;, private, final, static, String, UNMAPPED_STRING, =]
[out, ;, private, boolean, firstChar, =, true, ;, private, final, static, String, UNMAPPED_STRING, =, "-1", ;, private, int, lastId, =]
[true, ;, private, final, static, String, UNMAPPED_STRING, =, "-1", ;, private, int, lastId, =, UNMAPPED, ;, private, String, lastIdString, =]
["-1", ;, private, int, lastId, =, UNMAPPED, ;, private, String, lastIdString, =, UNMAPPED_STRING, ;, LineMapper, (, Appendable, out, ), {]
["-1", ;, private, int, lastId, =, UNMAPPED, ;, private, String, lastIdString, =, UNMAPPED_STRING, ;, LineMapper, (, Appendable, out, ), {]
[lastId, =, UNMAPPED, ;, private, String, lastIdString, =, UNMAPPED_STRING, ;, LineMapper, (, Appendable, out, ), {, this, ., out, =]
[m, ,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =]
[m, ,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =]
[,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =, (]
[,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =, (]
[line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =, (, m, !=]
[col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =, (, m, !=, null, ), ?]
[col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, int, id, =, (, m, !=, null, ), ?]
[,, int, nextCol, ), throws, IOException, {, int, id, =, (, m, !=, null, ), ?, m, ., id, :]
[throws, IOException, {, int, id, =, (, m, !=, null, ), ?, m, ., id, :, UNMAPPED, ;, if, (]
[throws, IOException, {, int, id, =, (, m, !=, null, ), ?, m, ., id, :, UNMAPPED, ;, if, (]
[{, int, id, =, (, m, !=, null, ), ?, m, ., id, :, UNMAPPED, ;, if, (, lastId, !=]
[=, (, m, !=, null, ), ?, m, ., id, :, UNMAPPED, ;, if, (, lastId, !=, id, ), {]
[m, !=, null, ), ?, m, ., id, :, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =]
[m, !=, null, ), ?, m, ., id, :, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =]
[!=, null, ), ?, m, ., id, :, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =, (]
[!=, null, ), ?, m, ., id, :, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =, (]
[), ?, m, ., id, :, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =, (, id, ==]
[., id, :, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =, (, id, ==, UNMAPPED, ), ?]
[:, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =, (, id, ==, UNMAPPED, ), ?, UNMAPPED_STRING, :]
[:, UNMAPPED, ;, if, (, lastId, !=, id, ), {, lastIdString, =, (, id, ==, UNMAPPED, ), ?, UNMAPPED_STRING, :]
[(, lastId, !=, id, ), {, lastIdString, =, (, id, ==, UNMAPPED, ), ?, UNMAPPED_STRING, :, String, ., valueOf, (]
[id, ), {, lastIdString, =, (, id, ==, UNMAPPED, ), ?, UNMAPPED_STRING, :, String, ., valueOf, (, id, ), ;]
[{, lastIdString, =, (, id, ==, UNMAPPED, ), ?, UNMAPPED_STRING, :, String, ., valueOf, (, id, ), ;, lastId, =]
[UNMAPPED, ), ?, UNMAPPED_STRING, :, String, ., valueOf, (, id, ), ;, lastId, =, id, ;, }, String, idString, =]
[valueOf, (, id, ), ;, lastId, =, id, ;, }, String, idString, =, lastIdString, ;, for, (, int, i, =]
[id, ), ;, lastId, =, id, ;, }, String, idString, =, lastIdString, ;, for, (, int, i, =, line, ;]
[id, ), ;, lastId, =, id, ;, }, String, idString, =, lastIdString, ;, for, (, int, i, =, line, ;]
[;, lastId, =, id, ;, }, String, idString, =, lastIdString, ;, for, (, int, i, =, line, ;, i, <=]
[=, id, ;, }, String, idString, =, lastIdString, ;, for, (, int, i, =, line, ;, i, <=, nextLine, ;]
[=, id, ;, }, String, idString, =, lastIdString, ;, for, (, int, i, =, line, ;, i, <=, nextLine, ;]
[=, lastIdString, ;, for, (, int, i, =, line, ;, i, <=, nextLine, ;, i, ++, ), {, if, (]
[=, lastIdString, ;, for, (, int, i, =, line, ;, i, <=, nextLine, ;, i, ++, ), {, if, (]
[;, for, (, int, i, =, line, ;, i, <=, nextLine, ;, i, ++, ), {, if, (, i, ==]
[i, <=, nextLine, ;, i, ++, ), {, if, (, i, ==, nextLine, ), {, for, (, int, j, =]
[nextLine, ;, i, ++, ), {, if, (, i, ==, nextLine, ), {, for, (, int, j, =, col, ;]
[nextLine, ;, i, ++, ), {, if, (, i, ==, nextLine, ), {, for, (, int, j, =, col, ;]
[i, ++, ), {, if, (, i, ==, nextLine, ), {, for, (, int, j, =, col, ;, j, <]
[), {, if, (, i, ==, nextLine, ), {, for, (, int, j, =, col, ;, j, <, nextCol, ;]
[), {, if, (, i, ==, nextLine, ), {, for, (, int, j, =, col, ;, j, <, nextCol, ;]
[i, ==, nextLine, ), {, for, (, int, j, =, col, ;, j, <, nextCol, ;, j, ++, ), {]
[nextLine, ), {, for, (, int, j, =, col, ;, j, <, nextCol, ;, j, ++, ), {, addCharEntry, (]
[=, col, ;, j, <, nextCol, ;, j, ++, ), {, addCharEntry, (, idString, ), ;, }, break, ;, }]
[<, nextCol, ;, j, ++, ), {, addCharEntry, (, idString, ), ;, }, break, ;, }, closeLine, (, ), ;]
[++, ), {, addCharEntry, (, idString, ), ;, }, break, ;, }, closeLine, (, ), ;, openLine, (, ), ;]
[{, addCharEntry, (, idString, ), ;, }, break, ;, }, closeLine, (, ), ;, openLine, (, ), ;, col, =]
[(, ), ;, openLine, (, ), ;, col, =, 0, ;, }, }, void, appendLineMappings, (, ), throws, IOException, {]
[(, ), ;, col, =, 0, ;, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, ), ;]
[(, ), ;, col, =, 0, ;, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, ), ;]
[), ;, col, =, 0, ;, }, }, void, appendLineMappings, (, ), throws, IOException, {, openLine, (, ), ;, (]
[void, appendLineMappings, (, ), throws, IOException, {, openLine, (, ), ;, (, new, MappingTraversal, (, ), ), ., traverse, (]
[), throws, IOException, {, openLine, (, ), ;, (, new, MappingTraversal, (, ), ), ., traverse, (, this, ), ;]
[traverse, (, this, ), ;, closeLine, (, ), ;, }, private, void, openLine, (, ), throws, IOException, {, if, (]
[traverse, (, this, ), ;, closeLine, (, ), ;, }, private, void, openLine, (, ), throws, IOException, {, if, (]
[this, ), ;, closeLine, (, ), ;, }, private, void, openLine, (, ), throws, IOException, {, if, (, out, !=]
[closeLine, (, ), ;, }, private, void, openLine, (, ), throws, IOException, {, if, (, out, !=, null, ), {]
[closeLine, (, ), ;, }, private, void, openLine, (, ), throws, IOException, {, if, (, out, !=, null, ), {]
[}, private, void, openLine, (, ), throws, IOException, {, if, (, out, !=, null, ), {, out, ., append, (]
[openLine, (, ), throws, IOException, {, if, (, out, !=, null, ), {, out, ., append, (, "[", ), ;]
[openLine, (, ), throws, IOException, {, if, (, out, !=, null, ), {, out, ., append, (, "[", ), ;]
[IOException, {, if, (, out, !=, null, ), {, out, ., append, (, "[", ), ;, this, ., firstChar, =]
[), ;, this, ., firstChar, =, true, ;, }, }, private, void, closeLine, (, ), throws, IOException, {, if, (]
[), ;, this, ., firstChar, =, true, ;, }, }, private, void, closeLine, (, ), throws, IOException, {, if, (]
[this, ., firstChar, =, true, ;, }, }, private, void, closeLine, (, ), throws, IOException, {, if, (, out, !=]
[=, true, ;, }, }, private, void, closeLine, (, ), throws, IOException, {, if, (, out, !=, null, ), {]
[=, true, ;, }, }, private, void, closeLine, (, ), throws, IOException, {, if, (, out, !=, null, ), {]
[}, private, void, closeLine, (, ), throws, IOException, {, if, (, out, !=, null, ), {, out, ., append, (]
[., append, (, "]\n", ), ;, }, }, private, void, addCharEntry, (, String, id, ), throws, IOException, {, if, (]
[., append, (, "]\n", ), ;, }, }, private, void, addCharEntry, (, String, id, ), throws, IOException, {, if, (]
[(, "]\n", ), ;, }, }, private, void, addCharEntry, (, String, id, ), throws, IOException, {, if, (, out, !=]
[}, private, void, addCharEntry, (, String, id, ), throws, IOException, {, if, (, out, !=, null, ), {, if, (]
[addCharEntry, (, String, id, ), throws, IOException, {, if, (, out, !=, null, ), {, if, (, firstChar, ), {]
[String, id, ), throws, IOException, {, if, (, out, !=, null, ), {, if, (, firstChar, ), {, firstChar, =]
[{, if, (, out, !=, null, ), {, if, (, firstChar, ), {, firstChar, =, false, ;, }, else, {]
[{, if, (, out, !=, null, ), {, if, (, firstChar, ), {, firstChar, =, false, ;, }, else, {]
[!=, null, ), {, if, (, firstChar, ), {, firstChar, =, false, ;, }, else, {, out, ., append, (]
[if, (, firstChar, ), {, firstChar, =, false, ;, }, else, {, out, ., append, (, ",", ), ;, }]
[if, (, firstChar, ), {, firstChar, =, false, ;, }, else, {, out, ., append, (, ",", ), ;, }]
[{, firstChar, =, false, ;, }, else, {, out, ., append, (, ",", ), ;, }, out, ., append, (]
[Mapping, m, ,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, if, (]
[Mapping, m, ,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, if, (]
[,, int, line, ,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, if, (, m, !=]
[,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, if, (, m, !=, null, ), {]
[,, int, col, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, if, (, m, !=, null, ), {]
[int, nextLine, ,, int, nextCol, ), throws, IOException, {, if, (, m, !=, null, ), {, m, ., used, =]
[MappingTraversal, (, ), {, }, void, traverse, (, MappingVisitor, v, ), throws, IOException, {, Deque, <, Mapping, >, stack, =]
[{, Deque, <, Mapping, >, stack, =, new, ArrayDeque, <, Mapping, >, (, ), ;, for, (, Mapping, m, :]
[stack, =, new, ArrayDeque, <, Mapping, >, (, ), ;, for, (, Mapping, m, :, mappings, ), {, while, (]
[stack, =, new, ArrayDeque, <, Mapping, >, (, ), ;, for, (, Mapping, m, :, mappings, ), {, while, (]
[=, new, ArrayDeque, <, Mapping, >, (, ), ;, for, (, Mapping, m, :, mappings, ), {, while, (, !]
[=, new, ArrayDeque, <, Mapping, >, (, ), ;, for, (, Mapping, m, :, mappings, ), {, while, (, !]
[(, ), ;, for, (, Mapping, m, :, mappings, ), {, while, (, !, stack, ., isEmpty, (, ), &&]
[), ;, for, (, Mapping, m, :, mappings, ), {, while, (, !, stack, ., isEmpty, (, ), &&, !]
[for, (, Mapping, m, :, mappings, ), {, while, (, !, stack, ., isEmpty, (, ), &&, !, isOverlapped, (]
[for, (, Mapping, m, :, mappings, ), {, while, (, !, stack, ., isEmpty, (, ), &&, !, isOverlapped, (]
[), {, while, (, !, stack, ., isEmpty, (, ), &&, !, isOverlapped, (, stack, ., peek, (, ), ,]
[isEmpty, (, ), &&, !, isOverlapped, (, stack, ., peek, (, ), ,, m, ), ), {, Mapping, previous, =]
[isEmpty, (, ), &&, !, isOverlapped, (, stack, ., peek, (, ), ,, m, ), ), {, Mapping, previous, =]
[(, stack, ., peek, (, ), ,, m, ), ), {, Mapping, previous, =, stack, ., pop, (, ), ;]
[., peek, (, ), ,, m, ), ), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (]
[(, ), ,, m, ), ), {, Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,]
[Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping, parent, =]
[Mapping, previous, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping, parent, =]
[(, ), ;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;]
[;, maybeVisit, (, v, ,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (]
[(, v, ,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,]
[,, previous, ), ;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,]
[;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;]
[;, }, Mapping, parent, =, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;]
[=, stack, ., peek, (, ), ;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;, stack, ., push, (]
[;, maybeVisitParent, (, v, ,, parent, ,, m, ), ;, stack, ., push, (, m, ), ;, }, while, (]
[maybeVisitParent, (, v, ,, parent, ,, m, ), ;, stack, ., push, (, m, ), ;, }, while, (, !]
[maybeVisitParent, (, v, ,, parent, ,, m, ), ;, stack, ., push, (, m, ), ;, }, while, (, !]
[., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =]
[., push, (, m, ), ;, }, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =]
[}, while, (, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =, stack, ., pop, (, ), ;]
[(, !, stack, ., isEmpty, (, ), ), {, Mapping, m, =, stack, ., pop, (, ), ;, maybeVisit, (]
[stack, ., isEmpty, (, ), ), {, Mapping, m, =, stack, ., pop, (, ), ;, maybeVisit, (, v, ,]
[), ;, maybeVisit, (, v, ,, m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return]
[), ;, maybeVisit, (, v, ,, m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return]
[), ;, maybeVisit, (, v, ,, m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return]
[m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return, p, ., getLine, (, ), +]
[m, ), ;, }, }, private, int, getAdjustedLine, (, FilePosition, p, ), {, return, p, ., getLine, (, ), +]
[), +, prefixPosition, ., getLine, (, ), ;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =]
[), +, prefixPosition, ., getLine, (, ), ;, }, private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =]
[private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =, p, ., getLine, (, ), ;, int, rawCol, =]
[private, int, getAdjustedCol, (, FilePosition, p, ), {, int, rawLine, =, p, ., getLine, (, ), ;, int, rawCol, =]
[{, int, rawLine, =, p, ., getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return]
[{, int, rawLine, =, p, ., getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return]
[int, rawLine, =, p, ., getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (]
[int, rawLine, =, p, ., getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (]
[=, p, ., getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=]
[getLine, (, ), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?]
[), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?, rawCol, :]
[), ;, int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?, rawCol, :]
[int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?, rawCol, :, rawCol, +]
[int, rawCol, =, p, ., getColumn, (, ), ;, return, (, rawLine, !=, 0, ), ?, rawCol, :, rawCol, +]
[., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =]
[., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =]
[., getColumn, (, ), ;, }, private, boolean, isOverlapped, (, Mapping, m1, ,, Mapping, m2, ), {, int, l1, =]
[m1, ,, Mapping, m2, ), {, int, l1, =, m1, ., endPosition, ., getLine, (, ), ;, int, l2, =]
[m1, ,, Mapping, m2, ), {, int, l1, =, m1, ., endPosition, ., getLine, (, ), ;, int, l2, =]
[m1, ,, Mapping, m2, ), {, int, l1, =, m1, ., endPosition, ., getLine, (, ), ;, int, l2, =]
[endPosition, ., getLine, (, ), ;, int, l2, =, m2, ., startPosition, ., getLine, (, ), ;, int, c1, =]
[endPosition, ., getLine, (, ), ;, int, l2, =, m2, ., startPosition, ., getLine, (, ), ;, int, c1, =]
[endPosition, ., getLine, (, ), ;, int, l2, =, m2, ., startPosition, ., getLine, (, ), ;, int, c1, =]
[startPosition, ., getLine, (, ), ;, int, c1, =, m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =]
[startPosition, ., getLine, (, ), ;, int, c1, =, m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =]
[startPosition, ., getLine, (, ), ;, int, c1, =, m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =]
[m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return]
[m1, ., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return]
[., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (]
[., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (]
[., endPosition, ., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (]
[., getColumn, (, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==]
[(, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&]
[(, ), ;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&]
[;, int, c2, =, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=]
[=, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=, c2, ), ||]
[=, m2, ., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=, c2, ), ||]
[., startPosition, ., getColumn, (, ), ;, return, (, l1, ==, l2, &&, c1, >=, c2, ), ||, l1, >]
[>, l2, ;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =]
[;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[;, }, private, void, maybeVisit, (, MappingVisitor, v, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (, m, ., endPosition, ), ;, int, nextCol, =]
[m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (, m, ., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (]
[m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (, m, ., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (]
[=, getAdjustedLine, (, m, ., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (]
[=, getAdjustedLine, (, m, ., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (]
[=, getAdjustedLine, (, m, ., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (]
[(, m, ., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <]
[., endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||]
[endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (]
[endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (]
[endPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (]
[;, int, nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==]
[nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&]
[nextCol, =, getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&]
[getAdjustedCol, (, m, ., endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <]
[endPosition, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {]
[;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (]
[(, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,]
[<, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,]
[||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, m, ,, nextLine, ,]
[}, private, void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =]
[void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[void, maybeVisitParent, (, MappingVisitor, v, ,, Mapping, parent, ,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (]
[,, Mapping, m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (, m, ., startPosition, ), ;, int, nextCol, =]
[m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (]
[m, ), throws, IOException, {, int, nextLine, =, getAdjustedLine, (, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (]
[int, nextLine, =, getAdjustedLine, (, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;]
[int, nextLine, =, getAdjustedLine, (, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;]
[(, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (]
[(, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (]
[(, m, ., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (]
[., startPosition, ), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <]
[), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||]
[), ;, int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||]
[int, nextCol, =, getAdjustedCol, (, m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=]
[m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (]
[m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (]
[m, ., startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (]
[startPosition, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <]
[;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||]
[Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (]
[Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (]
[Preconditions, ., checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (]
[checkState, (, line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==]
[line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&]
[line, <, nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&]
[nextLine, ||, col, <=, nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <]
[nextCol, ), ;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {]
[;, if, (, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (]
[(, line, <, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,]
[<, nextLine, ||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,]
[||, (, line, ==, nextLine, &&, col, <, nextCol, ), ), {, visit, (, v, ,, parent, ,, nextLine, ,]
[}, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {]
[}, private, void, visit, (, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {]
[(, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (]
[(, MappingVisitor, v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (]
[v, ,, Mapping, m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=]
[m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;]
[m, ,, int, nextLine, ,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;]
[,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (]
[,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (]
[,, int, nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (]
[nextCol, ), throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <]
[throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||]
[throws, IOException, {, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||]
[{, Preconditions, ., checkState, (, line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <]
[line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (]
[line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (]
[line, <=, nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (]
[nextLine, ), ;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==]
[;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&]
[;, Preconditions, ., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&]
[., checkState, (, line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==]
[line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {]
[line, <, nextLine, ||, col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {]
[col, <, nextCol, ), ;, if, (, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (]
[(, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }]
[(, line, ==, nextLine, &&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }]
[&&, col, ==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (]
[==, nextCol, ), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,]
[), {, Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,]
[Preconditions, ., checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,]
[checkState, (, false, ), ;, return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,, nextLine, ,]
[), ;, return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;]
[return, ;, }, v, ., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;, line, =]
[}, v, ., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;, line, =, nextLine, ;]
[., visit, (, m, ,, line, ,, col, ,, nextLine, ,, nextCol, ), ;, line, =, nextLine, ;, col, =]
[@, Override, public, void, appendIndexMapTo, (, Appendable, out, ,, String, name, ,, List, <, SourceMapSection, >, appSections, ), {, throw]
