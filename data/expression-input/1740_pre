[jfree, ., chart, ., util, ., RectangleAnchor, ;, public, class, CategoryLabelPosition, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[;, private, double, angle, ;, private, CategoryLabelWidthType, widthType, ;, private, float, widthRatio, ;, public, CategoryLabelPosition, (, ), {, this, (]
[;, private, double, angle, ;, private, CategoryLabelWidthType, widthType, ;, private, float, widthRatio, ;, public, CategoryLabelPosition, (, ), {, this, (]
[;, private, CategoryLabelWidthType, widthType, ;, private, float, widthRatio, ;, public, CategoryLabelPosition, (, ), {, this, (, RectangleAnchor, ., CENTER, ,]
[;, private, CategoryLabelWidthType, widthType, ;, private, float, widthRatio, ;, public, CategoryLabelPosition, (, ), {, this, (, RectangleAnchor, ., CENTER, ,]
[;, private, float, widthRatio, ;, public, CategoryLabelPosition, (, ), {, this, (, RectangleAnchor, ., CENTER, ,, TextBlockAnchor, ., BOTTOM_CENTER, ,]
[;, private, float, widthRatio, ;, public, CategoryLabelPosition, (, ), {, this, (, RectangleAnchor, ., CENTER, ,, TextBlockAnchor, ., BOTTOM_CENTER, ,]
[;, public, CategoryLabelPosition, (, ), {, this, (, RectangleAnchor, ., CENTER, ,, TextBlockAnchor, ., BOTTOM_CENTER, ,, TextAnchor, ., CENTER, ,]
[CategoryLabelPosition, (, ), {, this, (, RectangleAnchor, ., CENTER, ,, TextBlockAnchor, ., BOTTOM_CENTER, ,, TextAnchor, ., CENTER, ,, 0.0, ,]
[CategoryLabelPosition, (, ), {, this, (, RectangleAnchor, ., CENTER, ,, TextBlockAnchor, ., BOTTOM_CENTER, ,, TextAnchor, ., CENTER, ,, 0.0, ,]
[this, (, RectangleAnchor, ., CENTER, ,, TextBlockAnchor, ., BOTTOM_CENTER, ,, TextAnchor, ., CENTER, ,, 0.0, ,, CategoryLabelWidthType, ., CATEGORY, ,]
[CategoryLabelWidthType, ., CATEGORY, ,, 0.95f, ), ;, }, public, CategoryLabelPosition, (, RectangleAnchor, categoryAnchor, ,, TextBlockAnchor, labelAnchor, ), {, this, (]
[CATEGORY, ,, 0.95f, ), ;, }, public, CategoryLabelPosition, (, RectangleAnchor, categoryAnchor, ,, TextBlockAnchor, labelAnchor, ), {, this, (, categoryAnchor, ,]
[0.95f, ), ;, }, public, CategoryLabelPosition, (, RectangleAnchor, categoryAnchor, ,, TextBlockAnchor, labelAnchor, ), {, this, (, categoryAnchor, ,, labelAnchor, ,]
[0.95f, ), ;, }, public, CategoryLabelPosition, (, RectangleAnchor, categoryAnchor, ,, TextBlockAnchor, labelAnchor, ), {, this, (, categoryAnchor, ,, labelAnchor, ,]
[public, CategoryLabelPosition, (, RectangleAnchor, categoryAnchor, ,, TextBlockAnchor, labelAnchor, ), {, this, (, categoryAnchor, ,, labelAnchor, ,, TextAnchor, ., CENTER, ,]
[(, RectangleAnchor, categoryAnchor, ,, TextBlockAnchor, labelAnchor, ), {, this, (, categoryAnchor, ,, labelAnchor, ,, TextAnchor, ., CENTER, ,, 0.0, ,]
[(, RectangleAnchor, categoryAnchor, ,, TextBlockAnchor, labelAnchor, ), {, this, (, categoryAnchor, ,, labelAnchor, ,, TextAnchor, ., CENTER, ,, 0.0, ,]
[TextBlockAnchor, labelAnchor, ), {, this, (, categoryAnchor, ,, labelAnchor, ,, TextAnchor, ., CENTER, ,, 0.0, ,, CategoryLabelWidthType, ., CATEGORY, ,]
[;, }, public, CategoryLabelPosition, (, RectangleAnchor, categoryAnchor, ,, TextBlockAnchor, labelAnchor, ,, CategoryLabelWidthType, widthType, ,, float, widthRatio, ), {, this, (]
[public, CategoryLabelPosition, (, RectangleAnchor, categoryAnchor, ,, TextBlockAnchor, labelAnchor, ,, CategoryLabelWidthType, widthType, ,, float, widthRatio, ), {, this, (, categoryAnchor, ,]
[(, RectangleAnchor, categoryAnchor, ,, TextBlockAnchor, labelAnchor, ,, CategoryLabelWidthType, widthType, ,, float, widthRatio, ), {, this, (, categoryAnchor, ,, labelAnchor, ,]
[(, RectangleAnchor, categoryAnchor, ,, TextBlockAnchor, labelAnchor, ,, CategoryLabelWidthType, widthType, ,, float, widthRatio, ), {, this, (, categoryAnchor, ,, labelAnchor, ,]
[TextBlockAnchor, labelAnchor, ,, CategoryLabelWidthType, widthType, ,, float, widthRatio, ), {, this, (, categoryAnchor, ,, labelAnchor, ,, TextAnchor, ., CENTER, ,]
[,, CategoryLabelWidthType, widthType, ,, float, widthRatio, ), {, this, (, categoryAnchor, ,, labelAnchor, ,, TextAnchor, ., CENTER, ,, 0.0, ,]
[widthType, ,, float, widthRatio, ), {, this, (, categoryAnchor, ,, labelAnchor, ,, TextAnchor, ., CENTER, ,, 0.0, ,, widthType, ,]
[categoryAnchor, ,, TextBlockAnchor, labelAnchor, ,, TextAnchor, rotationAnchor, ,, double, angle, ,, CategoryLabelWidthType, widthType, ,, float, widthRatio, ), {, if, (]
[categoryAnchor, ,, TextBlockAnchor, labelAnchor, ,, TextAnchor, rotationAnchor, ,, double, angle, ,, CategoryLabelWidthType, widthType, ,, float, widthRatio, ), {, if, (]
[TextBlockAnchor, labelAnchor, ,, TextAnchor, rotationAnchor, ,, double, angle, ,, CategoryLabelWidthType, widthType, ,, float, widthRatio, ), {, if, (, categoryAnchor, ==]
[rotationAnchor, ,, double, angle, ,, CategoryLabelWidthType, widthType, ,, float, widthRatio, ), {, if, (, categoryAnchor, ==, null, ), {, throw]
[angle, ,, CategoryLabelWidthType, widthType, ,, float, widthRatio, ), {, if, (, categoryAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (]
[widthRatio, ), {, if, (, categoryAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'categoryAnchor' argument.", ), ;, }, if, (]
[widthRatio, ), {, if, (, categoryAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'categoryAnchor' argument.", ), ;, }, if, (]
[{, if, (, categoryAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'categoryAnchor' argument.", ), ;, }, if, (, labelAnchor, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'categoryAnchor' argument.", ), ;, }, if, (, labelAnchor, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'categoryAnchor' argument.", ), ;, }, if, (, labelAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), ;, }, if, (, labelAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'labelAnchor' argument.", ), ;, }, if, (]
[), ;, }, if, (, labelAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'labelAnchor' argument.", ), ;, }, if, (]
[}, if, (, labelAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'labelAnchor' argument.", ), ;, }, if, (, rotationAnchor, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'labelAnchor' argument.", ), ;, }, if, (, rotationAnchor, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'labelAnchor' argument.", ), ;, }, if, (, rotationAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), ;, }, if, (, rotationAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rotationAnchor' argument.", ), ;, }, if, (]
[), ;, }, if, (, rotationAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rotationAnchor' argument.", ), ;, }, if, (]
[}, if, (, rotationAnchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rotationAnchor' argument.", ), ;, }, if, (, widthType, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'rotationAnchor' argument.", ), ;, }, if, (, widthType, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'rotationAnchor' argument.", ), ;, }, if, (, widthType, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, "Null 'rotationAnchor' argument.", ), ;, }, if, (, widthType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'widthType' argument.", ), ;, }]
[(, "Null 'rotationAnchor' argument.", ), ;, }, if, (, widthType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'widthType' argument.", ), ;, }]
[}, if, (, widthType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'widthType' argument.", ), ;, }, this, ., categoryAnchor, =]
[(, widthType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'widthType' argument.", ), ;, }, this, ., categoryAnchor, =, categoryAnchor, ;]
[(, widthType, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'widthType' argument.", ), ;, }, this, ., categoryAnchor, =, categoryAnchor, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'widthType' argument.", ), ;, }, this, ., categoryAnchor, =, categoryAnchor, ;, this, ., labelAnchor, =]
[throw, new, IllegalArgumentException, (, "Null 'widthType' argument.", ), ;, }, this, ., categoryAnchor, =, categoryAnchor, ;, this, ., labelAnchor, =, labelAnchor, ;]
[throw, new, IllegalArgumentException, (, "Null 'widthType' argument.", ), ;, }, this, ., categoryAnchor, =, categoryAnchor, ;, this, ., labelAnchor, =, labelAnchor, ;]
["Null 'widthType' argument.", ), ;, }, this, ., categoryAnchor, =, categoryAnchor, ;, this, ., labelAnchor, =, labelAnchor, ;, this, ., rotationAnchor, =]
[;, }, this, ., categoryAnchor, =, categoryAnchor, ;, this, ., labelAnchor, =, labelAnchor, ;, this, ., rotationAnchor, =, rotationAnchor, ;]
[;, }, this, ., categoryAnchor, =, categoryAnchor, ;, this, ., labelAnchor, =, labelAnchor, ;, this, ., rotationAnchor, =, rotationAnchor, ;]
[categoryAnchor, =, categoryAnchor, ;, this, ., labelAnchor, =, labelAnchor, ;, this, ., rotationAnchor, =, rotationAnchor, ;, this, ., angle, =]
[categoryAnchor, ;, this, ., labelAnchor, =, labelAnchor, ;, this, ., rotationAnchor, =, rotationAnchor, ;, this, ., angle, =, angle, ;]
[categoryAnchor, ;, this, ., labelAnchor, =, labelAnchor, ;, this, ., rotationAnchor, =, rotationAnchor, ;, this, ., angle, =, angle, ;]
[labelAnchor, =, labelAnchor, ;, this, ., rotationAnchor, =, rotationAnchor, ;, this, ., angle, =, angle, ;, this, ., widthType, =]
[labelAnchor, ;, this, ., rotationAnchor, =, rotationAnchor, ;, this, ., angle, =, angle, ;, this, ., widthType, =, widthType, ;]
[labelAnchor, ;, this, ., rotationAnchor, =, rotationAnchor, ;, this, ., angle, =, angle, ;, this, ., widthType, =, widthType, ;]
[rotationAnchor, =, rotationAnchor, ;, this, ., angle, =, angle, ;, this, ., widthType, =, widthType, ;, this, ., widthRatio, =]
[this, ., widthType, =, widthType, ;, this, ., widthRatio, =, widthRatio, ;, }, public, RectangleAnchor, getCategoryAnchor, (, ), {, return]
[this, ., widthType, =, widthType, ;, this, ., widthRatio, =, widthRatio, ;, }, public, RectangleAnchor, getCategoryAnchor, (, ), {, return]
[}, public, RectangleAnchor, getCategoryAnchor, (, ), {, return, this, ., categoryAnchor, ;, }, public, TextBlockAnchor, getLabelAnchor, (, ), {, return]
[}, public, RectangleAnchor, getCategoryAnchor, (, ), {, return, this, ., categoryAnchor, ;, }, public, TextBlockAnchor, getLabelAnchor, (, ), {, return]
[}, public, TextBlockAnchor, getLabelAnchor, (, ), {, return, this, ., labelAnchor, ;, }, public, TextAnchor, getRotationAnchor, (, ), {, return]
[}, public, TextBlockAnchor, getLabelAnchor, (, ), {, return, this, ., labelAnchor, ;, }, public, TextAnchor, getRotationAnchor, (, ), {, return]
[}, public, TextAnchor, getRotationAnchor, (, ), {, return, this, ., rotationAnchor, ;, }, public, double, getAngle, (, ), {, return]
[}, public, TextAnchor, getRotationAnchor, (, ), {, return, this, ., rotationAnchor, ;, }, public, double, getAngle, (, ), {, return]
[}, public, double, getAngle, (, ), {, return, this, ., angle, ;, }, public, CategoryLabelWidthType, getWidthType, (, ), {, return]
[}, public, double, getAngle, (, ), {, return, this, ., angle, ;, }, public, CategoryLabelWidthType, getWidthType, (, ), {, return]
[}, public, CategoryLabelWidthType, getWidthType, (, ), {, return, this, ., widthType, ;, }, public, float, getWidthRatio, (, ), {, return]
[}, public, CategoryLabelWidthType, getWidthType, (, ), {, return, this, ., widthType, ;, }, public, float, getWidthRatio, (, ), {, return]
[getWidthRatio, (, ), {, return, this, ., widthRatio, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[getWidthRatio, (, ), {, return, this, ., widthRatio, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), {, return, this, ., widthRatio, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[., widthRatio, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, CategoryLabelPosition, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, CategoryLabelPosition, ), ), {, return, false, ;, }, CategoryLabelPosition, that, =]
[if, (, !, (, obj, instanceof, CategoryLabelPosition, ), ), {, return, false, ;, }, CategoryLabelPosition, that, =, (, CategoryLabelPosition, )]
[obj, instanceof, CategoryLabelPosition, ), ), {, return, false, ;, }, CategoryLabelPosition, that, =, (, CategoryLabelPosition, ), obj, ;, if, (]
[instanceof, CategoryLabelPosition, ), ), {, return, false, ;, }, CategoryLabelPosition, that, =, (, CategoryLabelPosition, ), obj, ;, if, (, !]
[instanceof, CategoryLabelPosition, ), ), {, return, false, ;, }, CategoryLabelPosition, that, =, (, CategoryLabelPosition, ), obj, ;, if, (, !]
[instanceof, CategoryLabelPosition, ), ), {, return, false, ;, }, CategoryLabelPosition, that, =, (, CategoryLabelPosition, ), obj, ;, if, (, !]
[false, ;, }, CategoryLabelPosition, that, =, (, CategoryLabelPosition, ), obj, ;, if, (, !, this, ., categoryAnchor, ., equals, (]
[false, ;, }, CategoryLabelPosition, that, =, (, CategoryLabelPosition, ), obj, ;, if, (, !, this, ., categoryAnchor, ., equals, (]
[CategoryLabelPosition, ), obj, ;, if, (, !, this, ., categoryAnchor, ., equals, (, that, ., categoryAnchor, ), ), {, return]
[(, !, this, ., categoryAnchor, ., equals, (, that, ., categoryAnchor, ), ), {, return, false, ;, }, if, (]
[!, this, ., categoryAnchor, ., equals, (, that, ., categoryAnchor, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., categoryAnchor, ., equals, (, that, ., categoryAnchor, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., categoryAnchor, ., equals, (, that, ., categoryAnchor, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., categoryAnchor, ), ), {, return, false, ;, }, if, (, !, this, ., labelAnchor, ., equals, (]
[(, that, ., categoryAnchor, ), ), {, return, false, ;, }, if, (, !, this, ., labelAnchor, ., equals, (]
[return, false, ;, }, if, (, !, this, ., labelAnchor, ., equals, (, that, ., labelAnchor, ), ), {, return]
[(, !, this, ., labelAnchor, ., equals, (, that, ., labelAnchor, ), ), {, return, false, ;, }, if, (]
[!, this, ., labelAnchor, ., equals, (, that, ., labelAnchor, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., labelAnchor, ., equals, (, that, ., labelAnchor, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., labelAnchor, ., equals, (, that, ., labelAnchor, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., labelAnchor, ), ), {, return, false, ;, }, if, (, !, this, ., rotationAnchor, ., equals, (]
[(, that, ., labelAnchor, ), ), {, return, false, ;, }, if, (, !, this, ., rotationAnchor, ., equals, (]
[return, false, ;, }, if, (, !, this, ., rotationAnchor, ., equals, (, that, ., rotationAnchor, ), ), {, return]
[(, !, this, ., rotationAnchor, ., equals, (, that, ., rotationAnchor, ), ), {, return, false, ;, }, if, (]
[(, !, this, ., rotationAnchor, ., equals, (, that, ., rotationAnchor, ), ), {, return, false, ;, }, if, (]
[(, !, this, ., rotationAnchor, ., equals, (, that, ., rotationAnchor, ), ), {, return, false, ;, }, if, (]
[rotationAnchor, ., equals, (, that, ., rotationAnchor, ), ), {, return, false, ;, }, if, (, this, ., angle, !=]
[rotationAnchor, ., equals, (, that, ., rotationAnchor, ), ), {, return, false, ;, }, if, (, this, ., angle, !=]
[rotationAnchor, ), ), {, return, false, ;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return]
[false, ;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (]
[(, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (, this, ., widthType, !=]
[(, this, ., angle, !=, that, ., angle, ), {, return, false, ;, }, if, (, this, ., widthType, !=]
[., angle, ), {, return, false, ;, }, if, (, this, ., widthType, !=, that, ., widthType, ), {, return]
[false, ;, }, if, (, this, ., widthType, !=, that, ., widthType, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., widthType, !=, that, ., widthType, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., widthType, !=, that, ., widthType, ), {, return, false, ;, }, if, (]
[(, this, ., widthType, !=, that, ., widthType, ), {, return, false, ;, }, if, (, this, ., widthRatio, !=]
[(, this, ., widthType, !=, that, ., widthType, ), {, return, false, ;, }, if, (, this, ., widthRatio, !=]
[., widthType, ), {, return, false, ;, }, if, (, this, ., widthRatio, !=, that, ., widthRatio, ), {, return]
[return, false, ;, }, if, (, this, ., widthRatio, !=, that, ., widthRatio, ), {, return, false, ;, }, return]
[widthRatio, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =]
[{, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 19, ;]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 19, ;, result, =]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 19, ;, result, =]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 19, ;, result, =]
[}, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 19, ;, result, =, 37, *]
[true, ;, }, public, int, hashCode, (, ), {, int, result, =, 19, ;, result, =, 37, *, result, +]
[true, ;, }, public, int, hashCode, (, ), {, int, result, =, 19, ;, result, =, 37, *, result, +]
[true, ;, }, public, int, hashCode, (, ), {, int, result, =, 19, ;, result, =, 37, *, result, +]
[{, int, result, =, 19, ;, result, =, 37, *, result, +, this, ., categoryAnchor, ., hashCode, (, ), ;]
[result, =, 19, ;, result, =, 37, *, result, +, this, ., categoryAnchor, ., hashCode, (, ), ;, result, =]
[result, =, 19, ;, result, =, 37, *, result, +, this, ., categoryAnchor, ., hashCode, (, ), ;, result, =]
[result, =, 19, ;, result, =, 37, *, result, +, this, ., categoryAnchor, ., hashCode, (, ), ;, result, =]
[19, ;, result, =, 37, *, result, +, this, ., categoryAnchor, ., hashCode, (, ), ;, result, =, 37, *]
[result, =, 37, *, result, +, this, ., categoryAnchor, ., hashCode, (, ), ;, result, =, 37, *, result, +]
[result, =, 37, *, result, +, this, ., categoryAnchor, ., hashCode, (, ), ;, result, =, 37, *, result, +]
[result, =, 37, *, result, +, this, ., categoryAnchor, ., hashCode, (, ), ;, result, =, 37, *, result, +]
[categoryAnchor, ., hashCode, (, ), ;, result, =, 37, *, result, +, this, ., labelAnchor, ., hashCode, (, ), ;]
[hashCode, (, ), ;, result, =, 37, *, result, +, this, ., labelAnchor, ., hashCode, (, ), ;, result, =]
[hashCode, (, ), ;, result, =, 37, *, result, +, this, ., labelAnchor, ., hashCode, (, ), ;, result, =]
[hashCode, (, ), ;, result, =, 37, *, result, +, this, ., labelAnchor, ., hashCode, (, ), ;, result, =]
[), ;, result, =, 37, *, result, +, this, ., labelAnchor, ., hashCode, (, ), ;, result, =, 37, *]
[result, =, 37, *, result, +, this, ., labelAnchor, ., hashCode, (, ), ;, result, =, 37, *, result, +]
[result, =, 37, *, result, +, this, ., labelAnchor, ., hashCode, (, ), ;, result, =, 37, *, result, +]
[result, =, 37, *, result, +, this, ., labelAnchor, ., hashCode, (, ), ;, result, =, 37, *, result, +]
[., hashCode, (, ), ;, result, =, 37, *, result, +, this, ., rotationAnchor, ., hashCode, (, ), ;, return]
