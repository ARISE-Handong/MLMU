[;, protected, AbstractAnnotation, (, ), {, this, ., listenerList, =, new, EventListenerList, (, ), ;, }, public, void, addChangeListener, (]
[=, new, EventListenerList, (, ), ;, }, public, void, addChangeListener, (, AnnotationChangeListener, listener, ), {, this, ., listenerList, ., add]
[., listenerList, =, new, EventListenerList, (, ), ;, }, public, void, addChangeListener, (, AnnotationChangeListener, listener, ), {, this, ., listenerList]
[;, }, public, void, addChangeListener, (, AnnotationChangeListener, listener, ), {, this, ., listenerList, ., add, (, AnnotationChangeListener, ., class, ,]
[;, }, public, void, removeChangeListener, (, AnnotationChangeListener, listener, ), {, this, ., listenerList, ., remove, (, AnnotationChangeListener, ., class, ,]
[., add, (, AnnotationChangeListener, ., class, ,, listener, ), ;, }, public, void, removeChangeListener, (, AnnotationChangeListener, listener, ), {, this]
[., listenerList, ., add, (, AnnotationChangeListener, ., class, ,, listener, ), ;, }, public, void, removeChangeListener, (, AnnotationChangeListener, listener, )]
[,, listener, ), ;, }, public, void, removeChangeListener, (, AnnotationChangeListener, listener, ), {, this, ., listenerList, ., remove, (, AnnotationChangeListener]
[), ;, }, public, void, removeChangeListener, (, AnnotationChangeListener, listener, ), {, this, ., listenerList, ., remove, (, AnnotationChangeListener, ., class]
[;, }, public, boolean, hasListener, (, EventListener, listener, ), {, List, list, =, Arrays, ., asList, (, this, ., listenerList]
[., remove, (, AnnotationChangeListener, ., class, ,, listener, ), ;, }, public, boolean, hasListener, (, EventListener, listener, ), {, List]
[., listenerList, ., remove, (, AnnotationChangeListener, ., class, ,, listener, ), ;, }, public, boolean, hasListener, (, EventListener, listener, )]
[,, listener, ), ;, }, public, boolean, hasListener, (, EventListener, listener, ), {, List, list, =, Arrays, ., asList, (]
[), ;, }, public, boolean, hasListener, (, EventListener, listener, ), {, List, list, =, Arrays, ., asList, (, this, .]
[;, return, list, ., contains, (, listener, ), ;, }, protected, void, fireAnnotationChanged, (, ), {, if, (, notify, )]
[., asList, (, this, ., listenerList, ., getListenerList, (, ), ), ;, return, list, ., contains, (, listener, ), ;]
[), ;, return, list, ., contains, (, listener, ), ;, }, protected, void, fireAnnotationChanged, (, ), {, if, (, notify]
[., getListenerList, (, ), ), ;, return, list, ., contains, (, listener, ), ;, }, protected, void, fireAnnotationChanged, (, )]
[., listenerList, ., getListenerList, (, ), ), ;, return, list, ., contains, (, listener, ), ;, }, protected, void, fireAnnotationChanged]
[;, }, protected, void, fireAnnotationChanged, (, ), {, if, (, notify, ), {, notifyListeners, (, new, AnnotationChangeEvent, (, this, ,]
[., contains, (, listener, ), ;, }, protected, void, fireAnnotationChanged, (, ), {, if, (, notify, ), {, notifyListeners, (]
[), ;, }, protected, void, fireAnnotationChanged, (, ), {, if, (, notify, ), {, notifyListeners, (, new, AnnotationChangeEvent, (, this]
[), {, notifyListeners, (, new, AnnotationChangeEvent, (, this, ,, this, ), ), ;, }, }, protected, void, notifyListeners, (, AnnotationChangeEvent]
[;, }, }, protected, void, notifyListeners, (, AnnotationChangeEvent, event, ), {, Object, [, ], listeners, =, this, ., listenerList, .]
[), ;, }, }, protected, void, notifyListeners, (, AnnotationChangeEvent, event, ), {, Object, [, ], listeners, =, this, ., listenerList]
[,, this, ), ), ;, }, }, protected, void, notifyListeners, (, AnnotationChangeEvent, event, ), {, Object, [, ], listeners, =]
[), ), ;, }, }, protected, void, notifyListeners, (, AnnotationChangeEvent, event, ), {, Object, [, ], listeners, =, this, .]
[;, for, (, int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;, i, -=, 2, )]
[., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;]
[., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;, i, >=]
[;, i, >=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class]
[-, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener]
[., length, -, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ]]
[;, i, >=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class]
[;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class, ), {, (, (]
[>=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class, ), {]
[;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class, ), {, (, (]
[-=, 2, ), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class, ), {, (, (, AnnotationChangeListener, )]
[), {, if, (, listeners, [, i, ], ==, AnnotationChangeListener, ., class, ), {, (, (, AnnotationChangeListener, ), listeners, []
[), {, (, (, AnnotationChangeListener, ), listeners, [, i, +, 1, ], ), ., annotationChanged, (, event, ), ;, }]
[==, AnnotationChangeListener, ., class, ), {, (, (, AnnotationChangeListener, ), listeners, [, i, +, 1, ], ), ., annotationChanged, (]
[[, i, ], ==, AnnotationChangeListener, ., class, ), {, (, (, AnnotationChangeListener, ), listeners, [, i, +, 1, ], )]
[], ==, AnnotationChangeListener, ., class, ), {, (, (, AnnotationChangeListener, ), listeners, [, i, +, 1, ], ), ., annotationChanged]
[), {, (, (, AnnotationChangeListener, ), listeners, [, i, +, 1, ], ), ., annotationChanged, (, event, ), ;, }]
[;, }, }, }, public, boolean, getNotify, (, ), {, return, this, ., notify, ;, }, public, void, setNotify, (]
[., annotationChanged, (, event, ), ;, }, }, }, public, boolean, getNotify, (, ), {, return, this, ., notify, ;]
[), ., annotationChanged, (, event, ), ;, }, }, }, public, boolean, getNotify, (, ), {, return, this, ., notify]
[), ., annotationChanged, (, event, ), ;, }, }, }, public, boolean, getNotify, (, ), {, return, this, ., notify]
[[, i, +, 1, ], ), ., annotationChanged, (, event, ), ;, }, }, }, public, boolean, getNotify, (, )]
[], ), ., annotationChanged, (, event, ), ;, }, }, }, public, boolean, getNotify, (, ), {, return, this, .]
[+, 1, ], ), ., annotationChanged, (, event, ), ;, }, }, }, public, boolean, getNotify, (, ), {, return]
[], ), ., annotationChanged, (, event, ), ;, }, }, }, public, boolean, getNotify, (, ), {, return, this, .]
[), ;, }, }, }, public, boolean, getNotify, (, ), {, return, this, ., notify, ;, }, public, void, setNotify]
[;, }, public, void, setNotify, (, boolean, flag, ), {, this, ., notify, =, flag, ;, if, (, notify, )]
[., notify, ;, }, public, void, setNotify, (, boolean, flag, ), {, this, ., notify, =, flag, ;, if, (]
[=, flag, ;, if, (, notify, ), {, fireAnnotationChanged, (, ), ;, }, }, public, Object, clone, (, ), throws]
[., notify, =, flag, ;, if, (, notify, ), {, fireAnnotationChanged, (, ), ;, }, }, public, Object, clone, (]
[;, if, (, notify, ), {, fireAnnotationChanged, (, ), ;, }, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {]
[), {, fireAnnotationChanged, (, ), ;, }, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractAnnotation, clone, =, (]
[;, }, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, AbstractAnnotation, clone, =, (, AbstractAnnotation, ), super, ., clone]
[;, clone, ., listenerList, =, new, EventListenerList, (, ), ;, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream]
[;, clone, ., listenerList, =, new, EventListenerList, (, ), ;, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream]
[., clone, (, ), ;, clone, ., listenerList, =, new, EventListenerList, (, ), ;, return, clone, ;, }, private, void]
[=, new, EventListenerList, (, ), ;, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[., listenerList, =, new, EventListenerList, (, ), ;, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws]
[;, return, clone, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, )]
[;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, }, private]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[., defaultWriteObject, (, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, .]
[;, this, ., listenerList, =, new, EventListenerList, (, ), ;, }, }]
[., defaultReadObject, (, ), ;, this, ., listenerList, =, new, EventListenerList, (, ), ;, }, }]
[=, new, EventListenerList, (, ), ;, }, }]
[., listenerList, =, new, EventListenerList, (, ), ;, }, }]
[;, }, }]
