[., BufferedImage, ;, import, java, ., io, ., IOException, ;, public, class, ChartTransferable, implements, Transferable, {, final, DataFlavor, imageFlavor, =]
[import, java, ., io, ., IOException, ;, public, class, ChartTransferable, implements, Transferable, {, final, DataFlavor, imageFlavor, =, new, DataFlavor, (]
[., io, ., IOException, ;, public, class, ChartTransferable, implements, Transferable, {, final, DataFlavor, imageFlavor, =, new, DataFlavor, (, "image/x-java-image; class=java.awt.Image", ,]
[;, private, int, maxDrawHeight, ;, public, ChartTransferable, (, JFreeChart, chart, ,, int, width, ,, int, height, ), {, this, (]
[int, maxDrawHeight, ;, public, ChartTransferable, (, JFreeChart, chart, ,, int, width, ,, int, height, ), {, this, (, chart, ,]
[;, public, ChartTransferable, (, JFreeChart, chart, ,, int, width, ,, int, height, ), {, this, (, chart, ,, width, ,]
[ChartTransferable, (, JFreeChart, chart, ,, int, width, ,, int, height, ), {, this, (, chart, ,, width, ,, height, ,]
[;, }, public, ChartTransferable, (, JFreeChart, chart, ,, int, width, ,, int, height, ,, boolean, cloneData, ), {, this, (]
[public, ChartTransferable, (, JFreeChart, chart, ,, int, width, ,, int, height, ,, boolean, cloneData, ), {, this, (, chart, ,]
[(, JFreeChart, chart, ,, int, width, ,, int, height, ,, boolean, cloneData, ), {, this, (, chart, ,, width, ,]
[chart, ,, int, width, ,, int, height, ,, boolean, cloneData, ), {, this, (, chart, ,, width, ,, height, ,]
[int, width, ,, int, height, ,, boolean, cloneData, ), {, this, (, chart, ,, width, ,, height, ,, 0, ,]
[,, int, height, ,, boolean, cloneData, ), {, this, (, chart, ,, width, ,, height, ,, 0, ,, 0, ,]
[,, int, height, ,, boolean, cloneData, ), {, this, (, chart, ,, width, ,, height, ,, 0, ,, 0, ,]
[boolean, cloneData, ), {, this, (, chart, ,, width, ,, height, ,, 0, ,, 0, ,, Integer, ., MAX_VALUE, ,]
[boolean, cloneData, ), {, this, (, chart, ,, width, ,, height, ,, 0, ,, 0, ,, Integer, ., MAX_VALUE, ,]
[this, (, chart, ,, width, ,, height, ,, 0, ,, 0, ,, Integer, ., MAX_VALUE, ,, Integer, ., MAX_VALUE, ,]
[height, ,, int, minDrawW, ,, int, minDrawH, ,, int, maxDrawW, ,, int, maxDrawH, ,, boolean, cloneData, ), {, try, {]
[height, ,, int, minDrawW, ,, int, minDrawH, ,, int, maxDrawW, ,, int, maxDrawH, ,, boolean, cloneData, ), {, try, {]
[,, int, minDrawH, ,, int, maxDrawW, ,, int, maxDrawH, ,, boolean, cloneData, ), {, try, {, this, ., chart, =]
[,, int, maxDrawW, ,, int, maxDrawH, ,, boolean, cloneData, ), {, try, {, this, ., chart, =, (, JFreeChart, )]
[,, int, maxDrawW, ,, int, maxDrawH, ,, boolean, cloneData, ), {, try, {, this, ., chart, =, (, JFreeChart, )]
[this, ., chart, =, (, JFreeChart, ), chart, ., clone, (, ), ;, }, catch, (, CloneNotSupportedException, e, ), {]
[this, ., chart, =, (, JFreeChart, ), chart, ., clone, (, ), ;, }, catch, (, CloneNotSupportedException, e, ), {]
[(, JFreeChart, ), chart, ., clone, (, ), ;, }, catch, (, CloneNotSupportedException, e, ), {, this, ., chart, =]
[chart, ., clone, (, ), ;, }, catch, (, CloneNotSupportedException, e, ), {, this, ., chart, =, chart, ;, }]
[chart, ., clone, (, ), ;, }, catch, (, CloneNotSupportedException, e, ), {, this, ., chart, =, chart, ;, }]
[), ;, }, catch, (, CloneNotSupportedException, e, ), {, this, ., chart, =, chart, ;, }, this, ., width, =]
[}, catch, (, CloneNotSupportedException, e, ), {, this, ., chart, =, chart, ;, }, this, ., width, =, width, ;]
[}, catch, (, CloneNotSupportedException, e, ), {, this, ., chart, =, chart, ;, }, this, ., width, =, width, ;]
[e, ), {, this, ., chart, =, chart, ;, }, this, ., width, =, width, ;, this, ., height, =]
[{, this, ., chart, =, chart, ;, }, this, ., width, =, width, ;, this, ., height, =, height, ;]
[{, this, ., chart, =, chart, ;, }, this, ., width, =, width, ;, this, ., height, =, height, ;]
[=, chart, ;, }, this, ., width, =, width, ;, this, ., height, =, height, ;, this, ., minDrawWidth, =]
[;, }, this, ., width, =, width, ;, this, ., height, =, height, ;, this, ., minDrawWidth, =, minDrawW, ;]
[;, }, this, ., width, =, width, ;, this, ., height, =, height, ;, this, ., minDrawWidth, =, minDrawW, ;]
[width, =, width, ;, this, ., height, =, height, ;, this, ., minDrawWidth, =, minDrawW, ;, this, ., minDrawHeight, =]
[width, ;, this, ., height, =, height, ;, this, ., minDrawWidth, =, minDrawW, ;, this, ., minDrawHeight, =, minDrawH, ;]
[width, ;, this, ., height, =, height, ;, this, ., minDrawWidth, =, minDrawW, ;, this, ., minDrawHeight, =, minDrawH, ;]
[height, =, height, ;, this, ., minDrawWidth, =, minDrawW, ;, this, ., minDrawHeight, =, minDrawH, ;, this, ., maxDrawWidth, =]
[height, ;, this, ., minDrawWidth, =, minDrawW, ;, this, ., minDrawHeight, =, minDrawH, ;, this, ., maxDrawWidth, =, maxDrawW, ;]
[height, ;, this, ., minDrawWidth, =, minDrawW, ;, this, ., minDrawHeight, =, minDrawH, ;, this, ., maxDrawWidth, =, maxDrawW, ;]
[minDrawWidth, =, minDrawW, ;, this, ., minDrawHeight, =, minDrawH, ;, this, ., maxDrawWidth, =, maxDrawW, ;, this, ., maxDrawHeight, =]
[maxDrawWidth, =, maxDrawW, ;, this, ., maxDrawHeight, =, maxDrawH, ;, }, public, DataFlavor, [, ], getTransferDataFlavors, (, ), {, return]
[this, ., maxDrawHeight, =, maxDrawH, ;, }, public, DataFlavor, [, ], getTransferDataFlavors, (, ), {, return, new, DataFlavor, [, ]]
[., maxDrawHeight, =, maxDrawH, ;, }, public, DataFlavor, [, ], getTransferDataFlavors, (, ), {, return, new, DataFlavor, [, ], {]
[., maxDrawHeight, =, maxDrawH, ;, }, public, DataFlavor, [, ], getTransferDataFlavors, (, ), {, return, new, DataFlavor, [, ], {]
[new, DataFlavor, [, ], {, this, ., imageFlavor, }, ;, }, public, boolean, isDataFlavorSupported, (, DataFlavor, flavor, ), {, return]
[new, DataFlavor, [, ], {, this, ., imageFlavor, }, ;, }, public, boolean, isDataFlavorSupported, (, DataFlavor, flavor, ), {, return]
[new, DataFlavor, [, ], {, this, ., imageFlavor, }, ;, }, public, boolean, isDataFlavorSupported, (, DataFlavor, flavor, ), {, return]
[., imageFlavor, }, ;, }, public, boolean, isDataFlavorSupported, (, DataFlavor, flavor, ), {, return, this, ., imageFlavor, ., equals, (]
[equals, (, flavor, ), ;, }, public, Object, getTransferData, (, DataFlavor, flavor, ), throws, UnsupportedFlavorException, ,, IOException, {, if, (]
[equals, (, flavor, ), ;, }, public, Object, getTransferData, (, DataFlavor, flavor, ), throws, UnsupportedFlavorException, ,, IOException, {, if, (]
[equals, (, flavor, ), ;, }, public, Object, getTransferData, (, DataFlavor, flavor, ), throws, UnsupportedFlavorException, ,, IOException, {, if, (]
[public, Object, getTransferData, (, DataFlavor, flavor, ), throws, UnsupportedFlavorException, ,, IOException, {, if, (, this, ., imageFlavor, ., equals, (]
[flavor, ), throws, UnsupportedFlavorException, ,, IOException, {, if, (, this, ., imageFlavor, ., equals, (, flavor, ), ), {, return]
[throws, UnsupportedFlavorException, ,, IOException, {, if, (, this, ., imageFlavor, ., equals, (, flavor, ), ), {, return, createBufferedImage, (]
[throws, UnsupportedFlavorException, ,, IOException, {, if, (, this, ., imageFlavor, ., equals, (, flavor, ), ), {, return, createBufferedImage, (]
[{, if, (, this, ., imageFlavor, ., equals, (, flavor, ), ), {, return, createBufferedImage, (, this, ., chart, ,]
[{, if, (, this, ., imageFlavor, ., equals, (, flavor, ), ), {, return, createBufferedImage, (, this, ., chart, ,]
[., imageFlavor, ., equals, (, flavor, ), ), {, return, createBufferedImage, (, this, ., chart, ,, this, ., width, ,]
[., imageFlavor, ., equals, (, flavor, ), ), {, return, createBufferedImage, (, this, ., chart, ,, this, ., width, ,]
[(, flavor, ), ), {, return, createBufferedImage, (, this, ., chart, ,, this, ., width, ,, this, ., height, ,]
[(, flavor, ), ), {, return, createBufferedImage, (, this, ., chart, ,, this, ., width, ,, this, ., height, ,]
[{, return, createBufferedImage, (, this, ., chart, ,, this, ., width, ,, this, ., height, ,, this, ., minDrawWidth, ,]
[{, return, createBufferedImage, (, this, ., chart, ,, this, ., width, ,, this, ., height, ,, this, ., minDrawWidth, ,]
[this, ., chart, ,, this, ., width, ,, this, ., height, ,, this, ., minDrawWidth, ,, this, ., minDrawHeight, ,]
[this, ., chart, ,, this, ., width, ,, this, ., height, ,, this, ., minDrawWidth, ,, this, ., minDrawHeight, ,]
[this, ., width, ,, this, ., height, ,, this, ., minDrawWidth, ,, this, ., minDrawHeight, ,, this, ., maxDrawWidth, ,]
[this, ., width, ,, this, ., height, ,, this, ., minDrawWidth, ,, this, ., minDrawHeight, ,, this, ., maxDrawWidth, ,]
[., minDrawWidth, ,, this, ., minDrawHeight, ,, this, ., maxDrawWidth, ,, this, ., maxDrawHeight, ), ;, }, else, {, throw]
[this, ., minDrawHeight, ,, this, ., maxDrawWidth, ,, this, ., maxDrawHeight, ), ;, }, else, {, throw, new, UnsupportedFlavorException, (]
[,, int, h, ,, int, minDrawW, ,, int, minDrawH, ,, int, maxDrawW, ,, int, maxDrawH, ), {, BufferedImage, image, =]
[,, int, minDrawW, ,, int, minDrawH, ,, int, maxDrawW, ,, int, maxDrawH, ), {, BufferedImage, image, =, new, BufferedImage, (]
[minDrawW, ,, int, minDrawH, ,, int, maxDrawW, ,, int, maxDrawH, ), {, BufferedImage, image, =, new, BufferedImage, (, w, ,]
[int, minDrawH, ,, int, maxDrawW, ,, int, maxDrawH, ), {, BufferedImage, image, =, new, BufferedImage, (, w, ,, h, ,]
[int, minDrawH, ,, int, maxDrawW, ,, int, maxDrawH, ), {, BufferedImage, image, =, new, BufferedImage, (, w, ,, h, ,]
[), {, BufferedImage, image, =, new, BufferedImage, (, w, ,, h, ,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =]
[), {, BufferedImage, image, =, new, BufferedImage, (, w, ,, h, ,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =]
[,, h, ,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, image, ., createGraphics, (, ), ;, boolean, scale, =]
[TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, image, ., createGraphics, (, ), ;, boolean, scale, =, false, ;, double, drawWidth, =]
[=, image, ., createGraphics, (, ), ;, boolean, scale, =, false, ;, double, drawWidth, =, w, ;, double, drawHeight, =]
[), ;, boolean, scale, =, false, ;, double, drawWidth, =, w, ;, double, drawHeight, =, h, ;, double, scaleX, =]
[false, ;, double, drawWidth, =, w, ;, double, drawHeight, =, h, ;, double, scaleX, =, 1.0, ;, double, scaleY, =]
[=, w, ;, double, drawHeight, =, h, ;, double, scaleX, =, 1.0, ;, double, scaleY, =, 1.0, ;, if, (]
[=, w, ;, double, drawHeight, =, h, ;, double, scaleX, =, 1.0, ;, double, scaleY, =, 1.0, ;, if, (]
[;, double, drawHeight, =, h, ;, double, scaleX, =, 1.0, ;, double, scaleY, =, 1.0, ;, if, (, drawWidth, <]
[=, h, ;, double, scaleX, =, 1.0, ;, double, scaleY, =, 1.0, ;, if, (, drawWidth, <, minDrawW, ), {]
[;, double, scaleX, =, 1.0, ;, double, scaleY, =, 1.0, ;, if, (, drawWidth, <, minDrawW, ), {, scaleX, =]
[;, double, scaleX, =, 1.0, ;, double, scaleY, =, 1.0, ;, if, (, drawWidth, <, minDrawW, ), {, scaleX, =]
[scaleX, =, 1.0, ;, double, scaleY, =, 1.0, ;, if, (, drawWidth, <, minDrawW, ), {, scaleX, =, drawWidth, /]
[1.0, ;, double, scaleY, =, 1.0, ;, if, (, drawWidth, <, minDrawW, ), {, scaleX, =, drawWidth, /, minDrawW, ;]
[double, scaleY, =, 1.0, ;, if, (, drawWidth, <, minDrawW, ), {, scaleX, =, drawWidth, /, minDrawW, ;, drawWidth, =]
[=, 1.0, ;, if, (, drawWidth, <, minDrawW, ), {, scaleX, =, drawWidth, /, minDrawW, ;, drawWidth, =, minDrawW, ;]
[;, if, (, drawWidth, <, minDrawW, ), {, scaleX, =, drawWidth, /, minDrawW, ;, drawWidth, =, minDrawW, ;, scale, =]
[), {, scaleX, =, drawWidth, /, minDrawW, ;, drawWidth, =, minDrawW, ;, scale, =, true, ;, }, else, if, (]
[), {, scaleX, =, drawWidth, /, minDrawW, ;, drawWidth, =, minDrawW, ;, scale, =, true, ;, }, else, if, (]
[scaleX, =, drawWidth, /, minDrawW, ;, drawWidth, =, minDrawW, ;, scale, =, true, ;, }, else, if, (, drawWidth, >]
[/, minDrawW, ;, drawWidth, =, minDrawW, ;, scale, =, true, ;, }, else, if, (, drawWidth, >, maxDrawW, ), {]
[;, drawWidth, =, minDrawW, ;, scale, =, true, ;, }, else, if, (, drawWidth, >, maxDrawW, ), {, scaleX, =]
[;, drawWidth, =, minDrawW, ;, scale, =, true, ;, }, else, if, (, drawWidth, >, maxDrawW, ), {, scaleX, =]
[=, minDrawW, ;, scale, =, true, ;, }, else, if, (, drawWidth, >, maxDrawW, ), {, scaleX, =, drawWidth, /]
[;, scale, =, true, ;, }, else, if, (, drawWidth, >, maxDrawW, ), {, scaleX, =, drawWidth, /, maxDrawW, ;]
[=, true, ;, }, else, if, (, drawWidth, >, maxDrawW, ), {, scaleX, =, drawWidth, /, maxDrawW, ;, drawWidth, =]
[;, }, else, if, (, drawWidth, >, maxDrawW, ), {, scaleX, =, drawWidth, /, maxDrawW, ;, drawWidth, =, maxDrawW, ;]
[else, if, (, drawWidth, >, maxDrawW, ), {, scaleX, =, drawWidth, /, maxDrawW, ;, drawWidth, =, maxDrawW, ;, scale, =]
[maxDrawW, ), {, scaleX, =, drawWidth, /, maxDrawW, ;, drawWidth, =, maxDrawW, ;, scale, =, true, ;, }, if, (]
[maxDrawW, ), {, scaleX, =, drawWidth, /, maxDrawW, ;, drawWidth, =, maxDrawW, ;, scale, =, true, ;, }, if, (]
[{, scaleX, =, drawWidth, /, maxDrawW, ;, drawWidth, =, maxDrawW, ;, scale, =, true, ;, }, if, (, drawHeight, <]
[drawWidth, /, maxDrawW, ;, drawWidth, =, maxDrawW, ;, scale, =, true, ;, }, if, (, drawHeight, <, minDrawH, ), {]
[maxDrawW, ;, drawWidth, =, maxDrawW, ;, scale, =, true, ;, }, if, (, drawHeight, <, minDrawH, ), {, scaleY, =]
[maxDrawW, ;, drawWidth, =, maxDrawW, ;, scale, =, true, ;, }, if, (, drawHeight, <, minDrawH, ), {, scaleY, =]
[drawWidth, =, maxDrawW, ;, scale, =, true, ;, }, if, (, drawHeight, <, minDrawH, ), {, scaleY, =, drawHeight, /]
[maxDrawW, ;, scale, =, true, ;, }, if, (, drawHeight, <, minDrawH, ), {, scaleY, =, drawHeight, /, minDrawH, ;]
[scale, =, true, ;, }, if, (, drawHeight, <, minDrawH, ), {, scaleY, =, drawHeight, /, minDrawH, ;, drawHeight, =]
[true, ;, }, if, (, drawHeight, <, minDrawH, ), {, scaleY, =, drawHeight, /, minDrawH, ;, drawHeight, =, minDrawH, ;]
[}, if, (, drawHeight, <, minDrawH, ), {, scaleY, =, drawHeight, /, minDrawH, ;, drawHeight, =, minDrawH, ;, scale, =]
[), {, scaleY, =, drawHeight, /, minDrawH, ;, drawHeight, =, minDrawH, ;, scale, =, true, ;, }, else, if, (]
[), {, scaleY, =, drawHeight, /, minDrawH, ;, drawHeight, =, minDrawH, ;, scale, =, true, ;, }, else, if, (]
[scaleY, =, drawHeight, /, minDrawH, ;, drawHeight, =, minDrawH, ;, scale, =, true, ;, }, else, if, (, drawHeight, >]
[/, minDrawH, ;, drawHeight, =, minDrawH, ;, scale, =, true, ;, }, else, if, (, drawHeight, >, maxDrawH, ), {]
[;, drawHeight, =, minDrawH, ;, scale, =, true, ;, }, else, if, (, drawHeight, >, maxDrawH, ), {, scaleY, =]
[;, drawHeight, =, minDrawH, ;, scale, =, true, ;, }, else, if, (, drawHeight, >, maxDrawH, ), {, scaleY, =]
[=, minDrawH, ;, scale, =, true, ;, }, else, if, (, drawHeight, >, maxDrawH, ), {, scaleY, =, drawHeight, /]
[;, scale, =, true, ;, }, else, if, (, drawHeight, >, maxDrawH, ), {, scaleY, =, drawHeight, /, maxDrawH, ;]
[=, true, ;, }, else, if, (, drawHeight, >, maxDrawH, ), {, scaleY, =, drawHeight, /, maxDrawH, ;, drawHeight, =]
[;, }, else, if, (, drawHeight, >, maxDrawH, ), {, scaleY, =, drawHeight, /, maxDrawH, ;, drawHeight, =, maxDrawH, ;]
[else, if, (, drawHeight, >, maxDrawH, ), {, scaleY, =, drawHeight, /, maxDrawH, ;, drawHeight, =, maxDrawH, ;, scale, =]
[), {, scaleY, =, drawHeight, /, maxDrawH, ;, drawHeight, =, maxDrawH, ;, scale, =, true, ;, }, Rectangle2D, chartArea, =]
[/, maxDrawH, ;, drawHeight, =, maxDrawH, ;, scale, =, true, ;, }, Rectangle2D, chartArea, =, new, Rectangle2D, ., Double, (]
[;, drawHeight, =, maxDrawH, ;, scale, =, true, ;, }, Rectangle2D, chartArea, =, new, Rectangle2D, ., Double, (, 0.0, ,]
[=, maxDrawH, ;, scale, =, true, ;, }, Rectangle2D, chartArea, =, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,]
[;, scale, =, true, ;, }, Rectangle2D, chartArea, =, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, drawWidth, ,]
[}, Rectangle2D, chartArea, =, new, Rectangle2D, ., Double, (, 0.0, ,, 0.0, ,, drawWidth, ,, drawHeight, ), ;, if, (]
[., Double, (, 0.0, ,, 0.0, ,, drawWidth, ,, drawHeight, ), ;, if, (, scale, ), {, AffineTransform, st, =]
[., Double, (, 0.0, ,, 0.0, ,, drawWidth, ,, drawHeight, ), ;, if, (, scale, ), {, AffineTransform, st, =]
[,, 0.0, ,, drawWidth, ,, drawHeight, ), ;, if, (, scale, ), {, AffineTransform, st, =, AffineTransform, ., getScaleInstance, (]
[,, drawWidth, ,, drawHeight, ), ;, if, (, scale, ), {, AffineTransform, st, =, AffineTransform, ., getScaleInstance, (, scaleX, ,]
[drawHeight, ), ;, if, (, scale, ), {, AffineTransform, st, =, AffineTransform, ., getScaleInstance, (, scaleX, ,, scaleY, ), ;]
[drawHeight, ), ;, if, (, scale, ), {, AffineTransform, st, =, AffineTransform, ., getScaleInstance, (, scaleX, ,, scaleY, ), ;]
[(, scale, ), {, AffineTransform, st, =, AffineTransform, ., getScaleInstance, (, scaleX, ,, scaleY, ), ;, g2, ., transform, (]
[AffineTransform, st, =, AffineTransform, ., getScaleInstance, (, scaleX, ,, scaleY, ), ;, g2, ., transform, (, st, ), ;, }]
[AffineTransform, st, =, AffineTransform, ., getScaleInstance, (, scaleX, ,, scaleY, ), ;, g2, ., transform, (, st, ), ;, }]
[., getScaleInstance, (, scaleX, ,, scaleY, ), ;, g2, ., transform, (, st, ), ;, }, chart, ., draw, (]
[(, scaleX, ,, scaleY, ), ;, g2, ., transform, (, st, ), ;, }, chart, ., draw, (, g2, ,]
[,, scaleY, ), ;, g2, ., transform, (, st, ), ;, }, chart, ., draw, (, g2, ,, chartArea, ,]
[), ;, g2, ., transform, (, st, ), ;, }, chart, ., draw, (, g2, ,, chartArea, ,, null, ,]
[., transform, (, st, ), ;, }, chart, ., draw, (, g2, ,, chartArea, ,, null, ,, null, ), ;]
[., transform, (, st, ), ;, }, chart, ., draw, (, g2, ,, chartArea, ,, null, ,, null, ), ;]
[chart, ., draw, (, g2, ,, chartArea, ,, null, ,, null, ), ;, g2, ., dispose, (, ), ;, return]
