[;, private, final, int, maximalOrder, ;, private, final, Dfp, functionValueAccuracy, ;, private, final, Dfp, absoluteAccuracy, ;, private, final, Dfp, relativeAccuracy]
[;, public, BracketingNthOrderBrentSolverDFP, (, final, Dfp, relativeAccuracy, ,, final, Dfp, absoluteAccuracy, ,, final, Dfp, functionValueAccuracy, ,, final, int, maximalOrder, )]
[), {, throw, new, NumberIsTooSmallException, (, maximalOrder, ,, 2, ,, true, ), ;, }, this, ., maximalOrder, =, maximalOrder, ;]
[<, 2, ), {, throw, new, NumberIsTooSmallException, (, maximalOrder, ,, 2, ,, true, ), ;, }, this, ., maximalOrder, =]
[), {, throw, new, NumberIsTooSmallException, (, maximalOrder, ,, 2, ,, true, ), ;, }, this, ., maximalOrder, =, maximalOrder, ;]
[;, }, this, ., maximalOrder, =, maximalOrder, ;, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, this, ., relativeAccuracy, =, relativeAccuracy, ;]
[,, 2, ,, true, ), ;, }, this, ., maximalOrder, =, maximalOrder, ;, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, this]
[,, true, ), ;, }, this, ., maximalOrder, =, maximalOrder, ;, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, this, ., relativeAccuracy]
[), ;, }, this, ., maximalOrder, =, maximalOrder, ;, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, this, ., relativeAccuracy, =, relativeAccuracy]
[=, maximalOrder, ;, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy]
[., maximalOrder, =, maximalOrder, ;, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy]
[;, this, ., absoluteAccuracy, =, absoluteAccuracy, ;, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }]
[=, absoluteAccuracy, ;, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaximalOrder, (]
[., absoluteAccuracy, =, absoluteAccuracy, ;, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int]
[;, this, ., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaximalOrder, (, ), {]
[=, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaximalOrder, (, ), {, return, maximalOrder, ;, }]
[., relativeAccuracy, =, relativeAccuracy, ;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaximalOrder, (, ), {, return, maximalOrder]
[;, this, ., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaximalOrder, (, ), {, return, maximalOrder, ;, }, public, int]
[=, functionValueAccuracy, ;, }, public, int, getMaximalOrder, (, ), {, return, maximalOrder, ;, }, public, int, getMaxEvaluations, (, ), {]
[., functionValueAccuracy, =, functionValueAccuracy, ;, }, public, int, getMaximalOrder, (, ), {, return, maximalOrder, ;, }, public, int, getMaxEvaluations, (]
[;, }, public, int, getMaximalOrder, (, ), {, return, maximalOrder, ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations]
[;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (]
[;, }, public, int, getEvaluations, (, ), {, return, evaluations, ., getCount, (, ), ;, }, public, Dfp, getAbsoluteAccuracy, (]
[., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (, ), {, return, evaluations, ., getCount, (, ), ;, }]
[;, }, public, Dfp, getAbsoluteAccuracy, (, ), {, return, absoluteAccuracy, ;, }, public, Dfp, getRelativeAccuracy, (, ), {, return, relativeAccuracy]
[., getCount, (, ), ;, }, public, Dfp, getAbsoluteAccuracy, (, ), {, return, absoluteAccuracy, ;, }, public, Dfp, getRelativeAccuracy, (]
[;, }, public, Dfp, getRelativeAccuracy, (, ), {, return, relativeAccuracy, ;, }, public, Dfp, getFunctionValueAccuracy, (, ), {, return, functionValueAccuracy]
[;, }, public, Dfp, getFunctionValueAccuracy, (, ), {, return, functionValueAccuracy, ;, }, public, Dfp, solve, (, final, int, maxEval, ,]
[;, }, public, Dfp, solve, (, final, int, maxEval, ,, final, UnivariateDfpFunction, f, ,, final, Dfp, min, ,, final, Dfp]
[;, }, public, Dfp, solve, (, final, int, maxEval, ,, final, UnivariateDfpFunction, f, ,, final, Dfp, min, ,, final, Dfp]
[,, f, ,, min, ,, max, ,, min, ., add, (, max, ), ., divide, (, 2, ), ,, allowedSolution]
[,, min, ,, max, ,, min, ., add, (, max, ), ., divide, (, 2, ), ,, allowedSolution, ), ;]
[,, max, ,, min, ., add, (, max, ), ., divide, (, 2, ), ,, allowedSolution, ), ;, }, public]
[,, min, ., add, (, max, ), ., divide, (, 2, ), ,, allowedSolution, ), ;, }, public, Dfp, solve]
[,, allowedSolution, ), ;, }, public, Dfp, solve, (, final, int, maxEval, ,, final, UnivariateDfpFunction, f, ,, final, Dfp, min]
[., divide, (, 2, ), ,, allowedSolution, ), ;, }, public, Dfp, solve, (, final, int, maxEval, ,, final, UnivariateDfpFunction]
[., add, (, max, ), ., divide, (, 2, ), ,, allowedSolution, ), ;, }, public, Dfp, solve, (, final]
[), ., divide, (, 2, ), ,, allowedSolution, ), ;, }, public, Dfp, solve, (, final, int, maxEval, ,, final]
[), ,, allowedSolution, ), ;, }, public, Dfp, solve, (, final, int, maxEval, ,, final, UnivariateDfpFunction, f, ,, final, Dfp]
[), ;, }, public, Dfp, solve, (, final, int, maxEval, ,, final, UnivariateDfpFunction, f, ,, final, Dfp, min, ,, final]
[;, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;, Dfp, zero, =, startValue, ., getZero]
[., checkNotNull, (, f, ), ;, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;, Dfp]
[), ;, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;, Dfp, zero, =, startValue, .]
[;, evaluations, ., resetCount, (, ), ;, Dfp, zero, =, startValue, ., getZero, (, ), ;, Dfp, nan, =, zero]
[., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;, Dfp, zero, =, startValue, ., getZero, (, )]
[), ;, evaluations, ., resetCount, (, ), ;, Dfp, zero, =, startValue, ., getZero, (, ), ;, Dfp, nan, =]
[;, Dfp, zero, =, startValue, ., getZero, (, ), ;, Dfp, nan, =, zero, ., newInstance, (, (, byte, )]
[., resetCount, (, ), ;, Dfp, zero, =, startValue, ., getZero, (, ), ;, Dfp, nan, =, zero, ., newInstance]
[;, Dfp, nan, =, zero, ., newInstance, (, (, byte, ), 1, ,, Dfp, ., QNAN, ), ;, final, Dfp]
[., getZero, (, ), ;, Dfp, nan, =, zero, ., newInstance, (, (, byte, ), 1, ,, Dfp, ., QNAN]
[;, final, Dfp, [, ], x, =, new, Dfp, [, maximalOrder, +, 1, ], ;, final, Dfp, [, ], y]
[., newInstance, (, (, byte, ), 1, ,, Dfp, ., QNAN, ), ;, final, Dfp, [, ], x, =, new]
[,, Dfp, ., QNAN, ), ;, final, Dfp, [, ], x, =, new, Dfp, [, maximalOrder, +, 1, ], ;]
[,, Dfp, ., QNAN, ), ;, final, Dfp, [, ], x, =, new, Dfp, [, maximalOrder, +, 1, ], ;]
[), ;, final, Dfp, [, ], x, =, new, Dfp, [, maximalOrder, +, 1, ], ;, final, Dfp, [, ]]
[., QNAN, ), ;, final, Dfp, [, ], x, =, new, Dfp, [, maximalOrder, +, 1, ], ;, final, Dfp]
[;, final, Dfp, [, ], y, =, new, Dfp, [, maximalOrder, +, 1, ], ;, x, [, 0, ], =]
[], ;, final, Dfp, [, ], y, =, new, Dfp, [, maximalOrder, +, 1, ], ;, x, [, 0, ]]
[+, 1, ], ;, final, Dfp, [, ], y, =, new, Dfp, [, maximalOrder, +, 1, ], ;, x, []
[], ;, final, Dfp, [, ], y, =, new, Dfp, [, maximalOrder, +, 1, ], ;, x, [, 0, ]]
[;, x, [, 0, ], =, min, ;, x, [, 1, ], =, startValue, ;, x, [, 2, ], =]
[], ;, x, [, 0, ], =, min, ;, x, [, 1, ], =, startValue, ;, x, [, 2, ]]
[+, 1, ], ;, x, [, 0, ], =, min, ;, x, [, 1, ], =, startValue, ;, x, []
[], ;, x, [, 0, ], =, min, ;, x, [, 1, ], =, startValue, ;, x, [, 2, ]]
[=, min, ;, x, [, 1, ], =, startValue, ;, x, [, 2, ], =, max, ;, evaluations, ., incrementCount]
[[, 0, ], =, min, ;, x, [, 1, ], =, startValue, ;, x, [, 2, ], =, max, ;]
[], =, min, ;, x, [, 1, ], =, startValue, ;, x, [, 2, ], =, max, ;, evaluations, .]
[;, x, [, 1, ], =, startValue, ;, x, [, 2, ], =, max, ;, evaluations, ., incrementCount, (, )]
[=, startValue, ;, x, [, 2, ], =, max, ;, evaluations, ., incrementCount, (, ), ;, y, [, 1, ]]
[[, 1, ], =, startValue, ;, x, [, 2, ], =, max, ;, evaluations, ., incrementCount, (, ), ;, y]
[], =, startValue, ;, x, [, 2, ], =, max, ;, evaluations, ., incrementCount, (, ), ;, y, [, 1]
[;, x, [, 2, ], =, max, ;, evaluations, ., incrementCount, (, ), ;, y, [, 1, ], =, f]
[=, max, ;, evaluations, ., incrementCount, (, ), ;, y, [, 1, ], =, f, ., value, (, x, []
[[, 2, ], =, max, ;, evaluations, ., incrementCount, (, ), ;, y, [, 1, ], =, f, ., value]
[], =, max, ;, evaluations, ., incrementCount, (, ), ;, y, [, 1, ], =, f, ., value, (, x]
[;, evaluations, ., incrementCount, (, ), ;, y, [, 1, ], =, f, ., value, (, x, [, 1, ]]
[;, y, [, 1, ], =, f, ., value, (, x, [, 1, ], ), ;, if, (, y, []
[., incrementCount, (, ), ;, y, [, 1, ], =, f, ., value, (, x, [, 1, ], ), ;]
[=, f, ., value, (, x, [, 1, ], ), ;, if, (, y, [, 1, ], ., isZero, (]
[[, 1, ], =, f, ., value, (, x, [, 1, ], ), ;, if, (, y, [, 1, ]]
[], =, f, ., value, (, x, [, 1, ], ), ;, if, (, y, [, 1, ], ., isZero]
[;, if, (, y, [, 1, ], ., isZero, (, ), ), {, return, x, [, 1, ], ;, }]
[., value, (, x, [, 1, ], ), ;, if, (, y, [, 1, ], ., isZero, (, ), )]
[), ;, if, (, y, [, 1, ], ., isZero, (, ), ), {, return, x, [, 1, ], ;]
[[, 1, ], ), ;, if, (, y, [, 1, ], ., isZero, (, ), ), {, return, x, []
[], ), ;, if, (, y, [, 1, ], ., isZero, (, ), ), {, return, x, [, 1, ]]
[), {, return, x, [, 1, ], ;, }, evaluations, ., incrementCount, (, ), ;, y, [, 0, ], =]
[., isZero, (, ), ), {, return, x, [, 1, ], ;, }, evaluations, ., incrementCount, (, ), ;, y]
[[, 1, ], ., isZero, (, ), ), {, return, x, [, 1, ], ;, }, evaluations, ., incrementCount, (]
[], ., isZero, (, ), ), {, return, x, [, 1, ], ;, }, evaluations, ., incrementCount, (, ), ;]
[;, }, evaluations, ., incrementCount, (, ), ;, y, [, 0, ], =, f, ., value, (, x, [, 0]
[[, 1, ], ;, }, evaluations, ., incrementCount, (, ), ;, y, [, 0, ], =, f, ., value, (]
[], ;, }, evaluations, ., incrementCount, (, ), ;, y, [, 0, ], =, f, ., value, (, x, []
[;, y, [, 0, ], =, f, ., value, (, x, [, 0, ], ), ;, if, (, y, []
[., incrementCount, (, ), ;, y, [, 0, ], =, f, ., value, (, x, [, 0, ], ), ;]
[=, f, ., value, (, x, [, 0, ], ), ;, if, (, y, [, 0, ], ., isZero, (]
[[, 0, ], =, f, ., value, (, x, [, 0, ], ), ;, if, (, y, [, 0, ]]
[], =, f, ., value, (, x, [, 0, ], ), ;, if, (, y, [, 0, ], ., isZero]
[;, if, (, y, [, 0, ], ., isZero, (, ), ), {, return, x, [, 0, ], ;, }]
[., value, (, x, [, 0, ], ), ;, if, (, y, [, 0, ], ., isZero, (, ), )]
[), ;, if, (, y, [, 0, ], ., isZero, (, ), ), {, return, x, [, 0, ], ;]
[[, 0, ], ), ;, if, (, y, [, 0, ], ., isZero, (, ), ), {, return, x, []
[], ), ;, if, (, y, [, 0, ], ., isZero, (, ), ), {, return, x, [, 0, ]]
[), {, return, x, [, 0, ], ;, }, int, nbPoints, ;, int, signChangeIndex, ;, if, (, y, [, 0]
[., isZero, (, ), ), {, return, x, [, 0, ], ;, }, int, nbPoints, ;, int, signChangeIndex, ;, if]
[[, 0, ], ., isZero, (, ), ), {, return, x, [, 0, ], ;, }, int, nbPoints, ;, int]
[], ., isZero, (, ), ), {, return, x, [, 0, ], ;, }, int, nbPoints, ;, int, signChangeIndex, ;]
[;, }, int, nbPoints, ;, int, signChangeIndex, ;, if, (, y, [, 0, ], ., multiply, (, y, [, 1]
[[, 0, ], ;, }, int, nbPoints, ;, int, signChangeIndex, ;, if, (, y, [, 0, ], ., multiply, (]
[], ;, }, int, nbPoints, ;, int, signChangeIndex, ;, if, (, y, [, 0, ], ., multiply, (, y, []
[), {, nbPoints, =, 2, ;, signChangeIndex, =, 1, ;, }, else, {, evaluations, ., incrementCount, (, ), ;, y]
[., negativeOrNull, (, ), ), {, nbPoints, =, 2, ;, signChangeIndex, =, 1, ;, }, else, {, evaluations, ., incrementCount]
[., multiply, (, y, [, 1, ], ), ., negativeOrNull, (, ), ), {, nbPoints, =, 2, ;, signChangeIndex, =]
[[, 0, ], ., multiply, (, y, [, 1, ], ), ., negativeOrNull, (, ), ), {, nbPoints, =, 2]
[], ., multiply, (, y, [, 1, ], ), ., negativeOrNull, (, ), ), {, nbPoints, =, 2, ;, signChangeIndex]
[), ., negativeOrNull, (, ), ), {, nbPoints, =, 2, ;, signChangeIndex, =, 1, ;, }, else, {, evaluations, .]
[[, 1, ], ), ., negativeOrNull, (, ), ), {, nbPoints, =, 2, ;, signChangeIndex, =, 1, ;, }, else]
[], ), ., negativeOrNull, (, ), ), {, nbPoints, =, 2, ;, signChangeIndex, =, 1, ;, }, else, {, evaluations]
[=, 2, ;, signChangeIndex, =, 1, ;, }, else, {, evaluations, ., incrementCount, (, ), ;, y, [, 2, ]]
[;, signChangeIndex, =, 1, ;, }, else, {, evaluations, ., incrementCount, (, ), ;, y, [, 2, ], =, f]
[=, 1, ;, }, else, {, evaluations, ., incrementCount, (, ), ;, y, [, 2, ], =, f, ., value]
[;, }, else, {, evaluations, ., incrementCount, (, ), ;, y, [, 2, ], =, f, ., value, (, x]
[;, y, [, 2, ], =, f, ., value, (, x, [, 2, ], ), ;, if, (, y, []
[., incrementCount, (, ), ;, y, [, 2, ], =, f, ., value, (, x, [, 2, ], ), ;]
[=, f, ., value, (, x, [, 2, ], ), ;, if, (, y, [, 2, ], ., isZero, (]
[[, 2, ], =, f, ., value, (, x, [, 2, ], ), ;, if, (, y, [, 2, ]]
[], =, f, ., value, (, x, [, 2, ], ), ;, if, (, y, [, 2, ], ., isZero]
[;, if, (, y, [, 2, ], ., isZero, (, ), ), {, return, x, [, 2, ], ;, }]
[., value, (, x, [, 2, ], ), ;, if, (, y, [, 2, ], ., isZero, (, ), )]
[), ;, if, (, y, [, 2, ], ., isZero, (, ), ), {, return, x, [, 2, ], ;]
[[, 2, ], ), ;, if, (, y, [, 2, ], ., isZero, (, ), ), {, return, x, []
[], ), ;, if, (, y, [, 2, ], ., isZero, (, ), ), {, return, x, [, 2, ]]
[), {, return, x, [, 2, ], ;, }, if, (, y, [, 1, ], ., multiply, (, y, []
[., isZero, (, ), ), {, return, x, [, 2, ], ;, }, if, (, y, [, 1, ], .]
[[, 2, ], ., isZero, (, ), ), {, return, x, [, 2, ], ;, }, if, (, y, []
[], ., isZero, (, ), ), {, return, x, [, 2, ], ;, }, if, (, y, [, 1, ]]
[;, }, if, (, y, [, 1, ], ., multiply, (, y, [, 2, ], ), ., negativeOrNull, (, )]
[[, 2, ], ;, }, if, (, y, [, 1, ], ., multiply, (, y, [, 2, ], ), .]
[], ;, }, if, (, y, [, 1, ], ., multiply, (, y, [, 2, ], ), ., negativeOrNull, (]
[), {, nbPoints, =, 3, ;, signChangeIndex, =, 2, ;, }, else, {, throw, new, NoBracketingException, (, x, [, 0]
[., negativeOrNull, (, ), ), {, nbPoints, =, 3, ;, signChangeIndex, =, 2, ;, }, else, {, throw, new, NoBracketingException]
[., multiply, (, y, [, 2, ], ), ., negativeOrNull, (, ), ), {, nbPoints, =, 3, ;, signChangeIndex, =]
[[, 1, ], ., multiply, (, y, [, 2, ], ), ., negativeOrNull, (, ), ), {, nbPoints, =, 3]
[], ., multiply, (, y, [, 2, ], ), ., negativeOrNull, (, ), ), {, nbPoints, =, 3, ;, signChangeIndex]
[), ., negativeOrNull, (, ), ), {, nbPoints, =, 3, ;, signChangeIndex, =, 2, ;, }, else, {, throw, new]
[[, 2, ], ), ., negativeOrNull, (, ), ), {, nbPoints, =, 3, ;, signChangeIndex, =, 2, ;, }, else]
[], ), ., negativeOrNull, (, ), ), {, nbPoints, =, 3, ;, signChangeIndex, =, 2, ;, }, else, {, throw]
[=, 3, ;, signChangeIndex, =, 2, ;, }, else, {, throw, new, NoBracketingException, (, x, [, 0, ], ., toDouble]
[;, signChangeIndex, =, 2, ;, }, else, {, throw, new, NoBracketingException, (, x, [, 0, ], ., toDouble, (, )]
[=, 2, ;, }, else, {, throw, new, NoBracketingException, (, x, [, 0, ], ., toDouble, (, ), ,, x]
[;, }, else, {, throw, new, NoBracketingException, (, x, [, 0, ], ., toDouble, (, ), ,, x, [, 2]
[;, }, }, final, Dfp, [, ], tmpX, =, new, Dfp, [, x, ., length, ], ;, Dfp, xA, =]
[,, x, [, 2, ], ., toDouble, (, ), ,, y, [, 0, ], ., toDouble, (, ), ,, y]
[., toDouble, (, ), ,, x, [, 2, ], ., toDouble, (, ), ,, y, [, 0, ], ., toDouble]
[[, 0, ], ., toDouble, (, ), ,, x, [, 2, ], ., toDouble, (, ), ,, y, [, 0]
[], ., toDouble, (, ), ,, x, [, 2, ], ., toDouble, (, ), ,, y, [, 0, ], .]
[,, y, [, 0, ], ., toDouble, (, ), ,, y, [, 2, ], ., toDouble, (, ), ), ;]
[., toDouble, (, ), ,, y, [, 0, ], ., toDouble, (, ), ,, y, [, 2, ], ., toDouble]
[[, 2, ], ., toDouble, (, ), ,, y, [, 0, ], ., toDouble, (, ), ,, y, [, 2]
[], ., toDouble, (, ), ,, y, [, 0, ], ., toDouble, (, ), ,, y, [, 2, ], .]
[,, y, [, 2, ], ., toDouble, (, ), ), ;, }, }, final, Dfp, [, ], tmpX, =, new]
[., toDouble, (, ), ,, y, [, 2, ], ., toDouble, (, ), ), ;, }, }, final, Dfp, []
[[, 0, ], ., toDouble, (, ), ,, y, [, 2, ], ., toDouble, (, ), ), ;, }, }]
[], ., toDouble, (, ), ,, y, [, 2, ], ., toDouble, (, ), ), ;, }, }, final, Dfp]
[), ;, }, }, final, Dfp, [, ], tmpX, =, new, Dfp, [, x, ., length, ], ;, Dfp, xA]
[., toDouble, (, ), ), ;, }, }, final, Dfp, [, ], tmpX, =, new, Dfp, [, x, ., length]
[[, 2, ], ., toDouble, (, ), ), ;, }, }, final, Dfp, [, ], tmpX, =, new, Dfp, []
[], ., toDouble, (, ), ), ;, }, }, final, Dfp, [, ], tmpX, =, new, Dfp, [, x, .]
[;, Dfp, xA, =, x, [, signChangeIndex, -, 1, ], ;, Dfp, yA, =, y, [, signChangeIndex, -, 1, ]]
[], ;, Dfp, xA, =, x, [, signChangeIndex, -, 1, ], ;, Dfp, yA, =, y, [, signChangeIndex, -, 1]
[., length, ], ;, Dfp, xA, =, x, [, signChangeIndex, -, 1, ], ;, Dfp, yA, =, y, [, signChangeIndex]
[;, Dfp, yA, =, y, [, signChangeIndex, -, 1, ], ;, Dfp, absXA, =, xA, ., abs, (, ), ;]
[[, signChangeIndex, -, 1, ], ;, Dfp, yA, =, y, [, signChangeIndex, -, 1, ], ;, Dfp, absXA, =, xA]
[], ;, Dfp, yA, =, y, [, signChangeIndex, -, 1, ], ;, Dfp, absXA, =, xA, ., abs, (, )]
[-, 1, ], ;, Dfp, yA, =, y, [, signChangeIndex, -, 1, ], ;, Dfp, absXA, =, xA, ., abs]
[], ;, Dfp, yA, =, y, [, signChangeIndex, -, 1, ], ;, Dfp, absXA, =, xA, ., abs, (, )]
[;, Dfp, absXA, =, xA, ., abs, (, ), ;, Dfp, absYA, =, yA, ., abs, (, ), ;, int]
[[, signChangeIndex, -, 1, ], ;, Dfp, absXA, =, xA, ., abs, (, ), ;, Dfp, absYA, =, yA, .]
[], ;, Dfp, absXA, =, xA, ., abs, (, ), ;, Dfp, absYA, =, yA, ., abs, (, ), ;]
[-, 1, ], ;, Dfp, absXA, =, xA, ., abs, (, ), ;, Dfp, absYA, =, yA, ., abs, (]
[], ;, Dfp, absXA, =, xA, ., abs, (, ), ;, Dfp, absYA, =, yA, ., abs, (, ), ;]
[;, Dfp, absYA, =, yA, ., abs, (, ), ;, int, agingA, =, 0, ;, Dfp, xB, =, x, []
[., abs, (, ), ;, Dfp, absYA, =, yA, ., abs, (, ), ;, int, agingA, =, 0, ;, Dfp]
[;, int, agingA, =, 0, ;, Dfp, xB, =, x, [, signChangeIndex, ], ;, Dfp, yB, =, y, [, signChangeIndex]
[., abs, (, ), ;, int, agingA, =, 0, ;, Dfp, xB, =, x, [, signChangeIndex, ], ;, Dfp, yB]
[;, Dfp, xB, =, x, [, signChangeIndex, ], ;, Dfp, yB, =, y, [, signChangeIndex, ], ;, Dfp, absXB, =]
[;, Dfp, yB, =, y, [, signChangeIndex, ], ;, Dfp, absXB, =, xB, ., abs, (, ), ;, Dfp, absYB]
[[, signChangeIndex, ], ;, Dfp, yB, =, y, [, signChangeIndex, ], ;, Dfp, absXB, =, xB, ., abs, (, )]
[], ;, Dfp, yB, =, y, [, signChangeIndex, ], ;, Dfp, absXB, =, xB, ., abs, (, ), ;, Dfp]
[;, Dfp, absXB, =, xB, ., abs, (, ), ;, Dfp, absYB, =, yB, ., abs, (, ), ;, int]
[[, signChangeIndex, ], ;, Dfp, absXB, =, xB, ., abs, (, ), ;, Dfp, absYB, =, yB, ., abs, (]
[], ;, Dfp, absXB, =, xB, ., abs, (, ), ;, Dfp, absYB, =, yB, ., abs, (, ), ;]
[;, Dfp, absYB, =, yB, ., abs, (, ), ;, int, agingB, =, 0, ;, while, (, true, ), {]
[., abs, (, ), ;, Dfp, absYB, =, yB, ., abs, (, ), ;, int, agingB, =, 0, ;, while]
[;, int, agingB, =, 0, ;, while, (, true, ), {, Dfp, maxX, =, absXA, ., lessThan, (, absXB, )]
[., abs, (, ), ;, int, agingB, =, 0, ;, while, (, true, ), {, Dfp, maxX, =, absXA, .]
[;, while, (, true, ), {, Dfp, maxX, =, absXA, ., lessThan, (, absXB, ), ?, absXB, :, absXA, ;]
[), {, Dfp, maxX, =, absXA, ., lessThan, (, absXB, ), ?, absXB, :, absXA, ;, Dfp, maxY, =, absYA]
[;, Dfp, maxY, =, absYA, ., lessThan, (, absYB, ), ?, absYB, :, absYA, ;, final, Dfp, xTol, =, absoluteAccuracy]
[?, absXB, :, absXA, ;, Dfp, maxY, =, absYA, ., lessThan, (, absYB, ), ?, absYB, :, absYA, ;, final]
[., lessThan, (, absXB, ), ?, absXB, :, absXA, ;, Dfp, maxY, =, absYA, ., lessThan, (, absYB, ), ?]
[), ?, absXB, :, absXA, ;, Dfp, maxY, =, absYA, ., lessThan, (, absYB, ), ?, absYB, :, absYA, ;]
[:, absXA, ;, Dfp, maxY, =, absYA, ., lessThan, (, absYB, ), ?, absYB, :, absYA, ;, final, Dfp, xTol]
[;, Dfp, maxY, =, absYA, ., lessThan, (, absYB, ), ?, absYB, :, absYA, ;, final, Dfp, xTol, =, absoluteAccuracy]
[;, final, Dfp, xTol, =, absoluteAccuracy, ., add, (, relativeAccuracy, ., multiply, (, maxX, ), ), ;, if, (, xB]
[?, absYB, :, absYA, ;, final, Dfp, xTol, =, absoluteAccuracy, ., add, (, relativeAccuracy, ., multiply, (, maxX, ), )]
[., lessThan, (, absYB, ), ?, absYB, :, absYA, ;, final, Dfp, xTol, =, absoluteAccuracy, ., add, (, relativeAccuracy, .]
[), ?, absYB, :, absYA, ;, final, Dfp, xTol, =, absoluteAccuracy, ., add, (, relativeAccuracy, ., multiply, (, maxX, )]
[:, absYA, ;, final, Dfp, xTol, =, absoluteAccuracy, ., add, (, relativeAccuracy, ., multiply, (, maxX, ), ), ;, if]
[;, final, Dfp, xTol, =, absoluteAccuracy, ., add, (, relativeAccuracy, ., multiply, (, maxX, ), ), ;, if, (, xB]
[;, if, (, xB, ., subtract, (, xA, ), ., subtract, (, xTol, ), ., negativeOrNull, (, ), ||, maxY]
[., add, (, relativeAccuracy, ., multiply, (, maxX, ), ), ;, if, (, xB, ., subtract, (, xA, ), .]
[), ;, if, (, xB, ., subtract, (, xA, ), ., subtract, (, xTol, ), ., negativeOrNull, (, ), ||]
[., multiply, (, maxX, ), ), ;, if, (, xB, ., subtract, (, xA, ), ., subtract, (, xTol, )]
[), ), ;, if, (, xB, ., subtract, (, xA, ), ., subtract, (, xTol, ), ., negativeOrNull, (, )]
[), {, switch, (, allowedSolution, ), {, case, ANY_SIDE, :, return, absYA, ., lessThan, (, absYB, ), ?, xA, :]
[||, maxY, ., lessThan, (, functionValueAccuracy, ), ), {, switch, (, allowedSolution, ), {, case, ANY_SIDE, :, return, absYA, .]
[., negativeOrNull, (, ), ||, maxY, ., lessThan, (, functionValueAccuracy, ), ), {, switch, (, allowedSolution, ), {, case, ANY_SIDE]
[., subtract, (, xTol, ), ., negativeOrNull, (, ), ||, maxY, ., lessThan, (, functionValueAccuracy, ), ), {, switch, (]
[., subtract, (, xA, ), ., subtract, (, xTol, ), ., negativeOrNull, (, ), ||, maxY, ., lessThan, (, functionValueAccuracy]
[), ., subtract, (, xTol, ), ., negativeOrNull, (, ), ||, maxY, ., lessThan, (, functionValueAccuracy, ), ), {, switch]
[), ., negativeOrNull, (, ), ||, maxY, ., lessThan, (, functionValueAccuracy, ), ), {, switch, (, allowedSolution, ), {, case]
[), {, switch, (, allowedSolution, ), {, case, ANY_SIDE, :, return, absYA, ., lessThan, (, absYB, ), ?, xA, :]
[., lessThan, (, functionValueAccuracy, ), ), {, switch, (, allowedSolution, ), {, case, ANY_SIDE, :, return, absYA, ., lessThan, (]
[), ), {, switch, (, allowedSolution, ), {, case, ANY_SIDE, :, return, absYA, ., lessThan, (, absYB, ), ?, xA]
[), {, case, ANY_SIDE, :, return, absYA, ., lessThan, (, absYB, ), ?, xA, :, xB, ;, case, LEFT_SIDE, :]
[:, return, absYA, ., lessThan, (, absYB, ), ?, xA, :, xB, ;, case, LEFT_SIDE, :, return, xA, ;, case]
[;, case, LEFT_SIDE, :, return, xA, ;, case, RIGHT_SIDE, :, return, xB, ;, case, BELOW_SIDE, :, return, yA, ., lessThan]
[?, xA, :, xB, ;, case, LEFT_SIDE, :, return, xA, ;, case, RIGHT_SIDE, :, return, xB, ;, case, BELOW_SIDE, :]
[., lessThan, (, absYB, ), ?, xA, :, xB, ;, case, LEFT_SIDE, :, return, xA, ;, case, RIGHT_SIDE, :, return]
[), ?, xA, :, xB, ;, case, LEFT_SIDE, :, return, xA, ;, case, RIGHT_SIDE, :, return, xB, ;, case, BELOW_SIDE]
[:, xB, ;, case, LEFT_SIDE, :, return, xA, ;, case, RIGHT_SIDE, :, return, xB, ;, case, BELOW_SIDE, :, return, yA]
[;, case, LEFT_SIDE, :, return, xA, ;, case, RIGHT_SIDE, :, return, xB, ;, case, BELOW_SIDE, :, return, yA, ., lessThan]
[:, return, xA, ;, case, RIGHT_SIDE, :, return, xB, ;, case, BELOW_SIDE, :, return, yA, ., lessThan, (, zero, )]
[;, case, RIGHT_SIDE, :, return, xB, ;, case, BELOW_SIDE, :, return, yA, ., lessThan, (, zero, ), ?, xA, :]
[:, return, xB, ;, case, BELOW_SIDE, :, return, yA, ., lessThan, (, zero, ), ?, xA, :, xB, ;, case]
[;, case, BELOW_SIDE, :, return, yA, ., lessThan, (, zero, ), ?, xA, :, xB, ;, case, ABOVE_SIDE, :, return]
[:, return, yA, ., lessThan, (, zero, ), ?, xA, :, xB, ;, case, ABOVE_SIDE, :, return, yA, ., lessThan]
[;, case, ABOVE_SIDE, :, return, yA, ., lessThan, (, zero, ), ?, xB, :, xA, ;, default, :, throw, new]
[?, xA, :, xB, ;, case, ABOVE_SIDE, :, return, yA, ., lessThan, (, zero, ), ?, xB, :, xA, ;]
[., lessThan, (, zero, ), ?, xA, :, xB, ;, case, ABOVE_SIDE, :, return, yA, ., lessThan, (, zero, )]
[), ?, xA, :, xB, ;, case, ABOVE_SIDE, :, return, yA, ., lessThan, (, zero, ), ?, xB, :, xA]
[:, xB, ;, case, ABOVE_SIDE, :, return, yA, ., lessThan, (, zero, ), ?, xB, :, xA, ;, default, :]
[;, case, ABOVE_SIDE, :, return, yA, ., lessThan, (, zero, ), ?, xB, :, xA, ;, default, :, throw, new]
[:, return, yA, ., lessThan, (, zero, ), ?, xB, :, xA, ;, default, :, throw, new, MathInternalError, (, null]
[;, default, :, throw, new, MathInternalError, (, null, ), ;, }, }, Dfp, targetY, ;, if, (, agingA, >=, MAXIMAL_AGING]
[?, xB, :, xA, ;, default, :, throw, new, MathInternalError, (, null, ), ;, }, }, Dfp, targetY, ;, if]
[., lessThan, (, zero, ), ?, xB, :, xA, ;, default, :, throw, new, MathInternalError, (, null, ), ;, }]
[), ?, xB, :, xA, ;, default, :, throw, new, MathInternalError, (, null, ), ;, }, }, Dfp, targetY, ;]
[:, xA, ;, default, :, throw, new, MathInternalError, (, null, ), ;, }, }, Dfp, targetY, ;, if, (, agingA]
[;, default, :, throw, new, MathInternalError, (, null, ), ;, }, }, Dfp, targetY, ;, if, (, agingA, >=, MAXIMAL_AGING]
[;, }, }, Dfp, targetY, ;, if, (, agingA, >=, MAXIMAL_AGING, ), {, targetY, =, yB, ., divide, (, 16]
[), ;, }, }, Dfp, targetY, ;, if, (, agingA, >=, MAXIMAL_AGING, ), {, targetY, =, yB, ., divide, (]
[), {, targetY, =, yB, ., divide, (, 16, ), ., negate, (, ), ;, }, else, if, (, agingB]
[>=, MAXIMAL_AGING, ), {, targetY, =, yB, ., divide, (, 16, ), ., negate, (, ), ;, }, else, if]
[), {, targetY, =, yB, ., divide, (, 16, ), ., negate, (, ), ;, }, else, if, (, agingB]
[=, yB, ., divide, (, 16, ), ., negate, (, ), ;, }, else, if, (, agingB, >=, MAXIMAL_AGING, )]
[;, }, else, if, (, agingB, >=, MAXIMAL_AGING, ), {, targetY, =, yA, ., divide, (, 16, ), ., negate]
[., negate, (, ), ;, }, else, if, (, agingB, >=, MAXIMAL_AGING, ), {, targetY, =, yA, ., divide, (]
[., divide, (, 16, ), ., negate, (, ), ;, }, else, if, (, agingB, >=, MAXIMAL_AGING, ), {, targetY]
[), ., negate, (, ), ;, }, else, if, (, agingB, >=, MAXIMAL_AGING, ), {, targetY, =, yA, ., divide]
[), {, targetY, =, yA, ., divide, (, 16, ), ., negate, (, ), ;, }, else, {, targetY, =]
[>=, MAXIMAL_AGING, ), {, targetY, =, yA, ., divide, (, 16, ), ., negate, (, ), ;, }, else, {]
[), {, targetY, =, yA, ., divide, (, 16, ), ., negate, (, ), ;, }, else, {, targetY, =]
[=, yA, ., divide, (, 16, ), ., negate, (, ), ;, }, else, {, targetY, =, zero, ;, }]
[;, }, else, {, targetY, =, zero, ;, }, Dfp, nextX, ;, int, start, =, 0, ;, int, end, =]
[., negate, (, ), ;, }, else, {, targetY, =, zero, ;, }, Dfp, nextX, ;, int, start, =, 0]
[., divide, (, 16, ), ., negate, (, ), ;, }, else, {, targetY, =, zero, ;, }, Dfp, nextX]
[), ., negate, (, ), ;, }, else, {, targetY, =, zero, ;, }, Dfp, nextX, ;, int, start, =]
[=, zero, ;, }, Dfp, nextX, ;, int, start, =, 0, ;, int, end, =, nbPoints, ;, do, {, System]
[;, }, Dfp, nextX, ;, int, start, =, 0, ;, int, end, =, nbPoints, ;, do, {, System, ., arraycopy]
[;, int, end, =, nbPoints, ;, do, {, System, ., arraycopy, (, x, ,, start, ,, tmpX, ,, start, ,]
[;, do, {, System, ., arraycopy, (, x, ,, start, ,, tmpX, ,, start, ,, end, -, start, ), ;]
[;, nextX, =, guessX, (, targetY, ,, tmpX, ,, y, ,, start, ,, end, ), ;, if, (, !, (]
[., arraycopy, (, x, ,, start, ,, tmpX, ,, start, ,, end, -, start, ), ;, nextX, =, guessX, (]
[,, start, ,, tmpX, ,, start, ,, end, -, start, ), ;, nextX, =, guessX, (, targetY, ,, tmpX, ,]
[,, tmpX, ,, start, ,, end, -, start, ), ;, nextX, =, guessX, (, targetY, ,, tmpX, ,, y, ,]
[,, start, ,, end, -, start, ), ;, nextX, =, guessX, (, targetY, ,, tmpX, ,, y, ,, start, ,]
[,, end, -, start, ), ;, nextX, =, guessX, (, targetY, ,, tmpX, ,, y, ,, start, ,, end, )]
[), ;, nextX, =, guessX, (, targetY, ,, tmpX, ,, y, ,, start, ,, end, ), ;, if, (, !]
[-, start, ), ;, nextX, =, guessX, (, targetY, ,, tmpX, ,, y, ,, start, ,, end, ), ;, if]
[), ;, nextX, =, guessX, (, targetY, ,, tmpX, ,, y, ,, start, ,, end, ), ;, if, (, !]
[=, guessX, (, targetY, ,, tmpX, ,, y, ,, start, ,, end, ), ;, if, (, !, (, nextX, .]
[;, if, (, !, (, nextX, ., greaterThan, (, xA, ), &&, nextX, ., lessThan, (, xB, ), ), )]
[,, tmpX, ,, y, ,, start, ,, end, ), ;, if, (, !, (, nextX, ., greaterThan, (, xA, )]
[,, y, ,, start, ,, end, ), ;, if, (, !, (, nextX, ., greaterThan, (, xA, ), &&, nextX]
[,, start, ,, end, ), ;, if, (, !, (, nextX, ., greaterThan, (, xA, ), &&, nextX, ., lessThan]
[,, end, ), ;, if, (, !, (, nextX, ., greaterThan, (, xA, ), &&, nextX, ., lessThan, (, xB]
[), ;, if, (, !, (, nextX, ., greaterThan, (, xA, ), &&, nextX, ., lessThan, (, xB, ), )]
[), {, if, (, signChangeIndex, -, start, >=, end, -, signChangeIndex, ), {, ++, start, ;, }, else, {, --]
[), {, if, (, signChangeIndex, -, start, >=, end, -, signChangeIndex, ), {, ++, start, ;, }, else, {, --]
[), ), {, if, (, signChangeIndex, -, start, >=, end, -, signChangeIndex, ), {, ++, start, ;, }, else, {]
[&&, nextX, ., lessThan, (, xB, ), ), ), {, if, (, signChangeIndex, -, start, >=, end, -, signChangeIndex, )]
[., greaterThan, (, xA, ), &&, nextX, ., lessThan, (, xB, ), ), ), {, if, (, signChangeIndex, -, start]
[), &&, nextX, ., lessThan, (, xB, ), ), ), {, if, (, signChangeIndex, -, start, >=, end, -, signChangeIndex]
[), ), {, if, (, signChangeIndex, -, start, >=, end, -, signChangeIndex, ), {, ++, start, ;, }, else, {]
[., lessThan, (, xB, ), ), ), {, if, (, signChangeIndex, -, start, >=, end, -, signChangeIndex, ), {, ++]
[), ), ), {, if, (, signChangeIndex, -, start, >=, end, -, signChangeIndex, ), {, ++, start, ;, }, else]
[), {, ++, start, ;, }, else, {, --, end, ;, }, nextX, =, nan, ;, }, }, while, (]
[>=, end, -, signChangeIndex, ), {, ++, start, ;, }, else, {, --, end, ;, }, nextX, =, nan, ;]
[-, start, >=, end, -, signChangeIndex, ), {, ++, start, ;, }, else, {, --, end, ;, }, nextX, =]
[>=, end, -, signChangeIndex, ), {, ++, start, ;, }, else, {, --, end, ;, }, nextX, =, nan, ;]
[), {, ++, start, ;, }, else, {, --, end, ;, }, nextX, =, nan, ;, }, }, while, (]
[-, signChangeIndex, ), {, ++, start, ;, }, else, {, --, end, ;, }, nextX, =, nan, ;, }, }]
[), {, ++, start, ;, }, else, {, --, end, ;, }, nextX, =, nan, ;, }, }, while, (]
[;, }, else, {, --, end, ;, }, nextX, =, nan, ;, }, }, while, (, nextX, ., isNaN, (]
[;, }, else, {, --, end, ;, }, nextX, =, nan, ;, }, }, while, (, nextX, ., isNaN, (]
[;, }, nextX, =, nan, ;, }, }, while, (, nextX, ., isNaN, (, ), &&, (, end, -, start]
[;, }, nextX, =, nan, ;, }, }, while, (, nextX, ., isNaN, (, ), &&, (, end, -, start]
[=, nan, ;, }, }, while, (, nextX, ., isNaN, (, ), &&, (, end, -, start, >, 1, )]
[;, }, }, while, (, nextX, ., isNaN, (, ), &&, (, end, -, start, >, 1, ), ), ;]
[), ;, if, (, nextX, ., isNaN, (, ), ), {, nextX, =, xA, ., add, (, xB, ., subtract]
[&&, (, end, -, start, >, 1, ), ), ;, if, (, nextX, ., isNaN, (, ), ), {, nextX]
[., isNaN, (, ), &&, (, end, -, start, >, 1, ), ), ;, if, (, nextX, ., isNaN, (]
[), ;, if, (, nextX, ., isNaN, (, ), ), {, nextX, =, xA, ., add, (, xB, ., subtract]
[), ), ;, if, (, nextX, ., isNaN, (, ), ), {, nextX, =, xA, ., add, (, xB, .]
[>, 1, ), ), ;, if, (, nextX, ., isNaN, (, ), ), {, nextX, =, xA, ., add, (]
[-, start, >, 1, ), ), ;, if, (, nextX, ., isNaN, (, ), ), {, nextX, =, xA, .]
[>, 1, ), ), ;, if, (, nextX, ., isNaN, (, ), ), {, nextX, =, xA, ., add, (]
[), ), ;, if, (, nextX, ., isNaN, (, ), ), {, nextX, =, xA, ., add, (, xB, .]
[), {, nextX, =, xA, ., add, (, xB, ., subtract, (, xA, ), ., divide, (, 2, ), )]
[., isNaN, (, ), ), {, nextX, =, xA, ., add, (, xB, ., subtract, (, xA, ), ., divide]
[=, xA, ., add, (, xB, ., subtract, (, xA, ), ., divide, (, 2, ), ), ;, start, =]
[;, start, =, signChangeIndex, -, 1, ;, end, =, signChangeIndex, ;, }, evaluations, ., incrementCount, (, ), ;, final, Dfp]
[., add, (, xB, ., subtract, (, xA, ), ., divide, (, 2, ), ), ;, start, =, signChangeIndex, -]
[), ;, start, =, signChangeIndex, -, 1, ;, end, =, signChangeIndex, ;, }, evaluations, ., incrementCount, (, ), ;, final]
[., divide, (, 2, ), ), ;, start, =, signChangeIndex, -, 1, ;, end, =, signChangeIndex, ;, }, evaluations, .]
[., subtract, (, xA, ), ., divide, (, 2, ), ), ;, start, =, signChangeIndex, -, 1, ;, end, =]
[), ., divide, (, 2, ), ), ;, start, =, signChangeIndex, -, 1, ;, end, =, signChangeIndex, ;, }, evaluations]
[), ), ;, start, =, signChangeIndex, -, 1, ;, end, =, signChangeIndex, ;, }, evaluations, ., incrementCount, (, ), ;]
[=, signChangeIndex, -, 1, ;, end, =, signChangeIndex, ;, }, evaluations, ., incrementCount, (, ), ;, final, Dfp, nextY, =]
[;, end, =, signChangeIndex, ;, }, evaluations, ., incrementCount, (, ), ;, final, Dfp, nextY, =, f, ., value, (]
[-, 1, ;, end, =, signChangeIndex, ;, }, evaluations, ., incrementCount, (, ), ;, final, Dfp, nextY, =, f, .]
[;, end, =, signChangeIndex, ;, }, evaluations, ., incrementCount, (, ), ;, final, Dfp, nextY, =, f, ., value, (]
[=, signChangeIndex, ;, }, evaluations, ., incrementCount, (, ), ;, final, Dfp, nextY, =, f, ., value, (, nextX, )]
[;, }, evaluations, ., incrementCount, (, ), ;, final, Dfp, nextY, =, f, ., value, (, nextX, ), ;, if]
[;, final, Dfp, nextY, =, f, ., value, (, nextX, ), ;, if, (, nextY, ., isZero, (, ), )]
[., incrementCount, (, ), ;, final, Dfp, nextY, =, f, ., value, (, nextX, ), ;, if, (, nextY, .]
[;, if, (, nextY, ., isZero, (, ), ), {, return, nextX, ;, }, if, (, (, nbPoints, >, 2]
[., value, (, nextX, ), ;, if, (, nextY, ., isZero, (, ), ), {, return, nextX, ;, }, if]
[), ;, if, (, nextY, ., isZero, (, ), ), {, return, nextX, ;, }, if, (, (, nbPoints, >]
[), {, return, nextX, ;, }, if, (, (, nbPoints, >, 2, ), &&, (, end, -, start, !=, nbPoints]
[., isZero, (, ), ), {, return, nextX, ;, }, if, (, (, nbPoints, >, 2, ), &&, (, end]
[;, }, if, (, (, nbPoints, >, 2, ), &&, (, end, -, start, !=, nbPoints, ), ), {, nbPoints]
[), {, nbPoints, =, end, -, start, ;, System, ., arraycopy, (, x, ,, start, ,, x, ,, 0, ,]
[&&, (, end, -, start, !=, nbPoints, ), ), {, nbPoints, =, end, -, start, ;, System, ., arraycopy, (]
[), &&, (, end, -, start, !=, nbPoints, ), ), {, nbPoints, =, end, -, start, ;, System, ., arraycopy]
[>, 2, ), &&, (, end, -, start, !=, nbPoints, ), ), {, nbPoints, =, end, -, start, ;, System]
[), &&, (, end, -, start, !=, nbPoints, ), ), {, nbPoints, =, end, -, start, ;, System, ., arraycopy]
[), {, nbPoints, =, end, -, start, ;, System, ., arraycopy, (, x, ,, start, ,, x, ,, 0, ,]
[), ), {, nbPoints, =, end, -, start, ;, System, ., arraycopy, (, x, ,, start, ,, x, ,, 0]
[!=, nbPoints, ), ), {, nbPoints, =, end, -, start, ;, System, ., arraycopy, (, x, ,, start, ,, x]
[-, start, !=, nbPoints, ), ), {, nbPoints, =, end, -, start, ;, System, ., arraycopy, (, x, ,, start]
[!=, nbPoints, ), ), {, nbPoints, =, end, -, start, ;, System, ., arraycopy, (, x, ,, start, ,, x]
[), ), {, nbPoints, =, end, -, start, ;, System, ., arraycopy, (, x, ,, start, ,, x, ,, 0]
[=, end, -, start, ;, System, ., arraycopy, (, x, ,, start, ,, x, ,, 0, ,, nbPoints, ), ;]
[;, System, ., arraycopy, (, x, ,, start, ,, x, ,, 0, ,, nbPoints, ), ;, System, ., arraycopy, (]
[-, start, ;, System, ., arraycopy, (, x, ,, start, ,, x, ,, 0, ,, nbPoints, ), ;, System, .]
[;, System, ., arraycopy, (, x, ,, start, ,, x, ,, 0, ,, nbPoints, ), ;, System, ., arraycopy, (]
[;, System, ., arraycopy, (, y, ,, start, ,, y, ,, 0, ,, nbPoints, ), ;, signChangeIndex, -=, start, ;]
[., arraycopy, (, x, ,, start, ,, x, ,, 0, ,, nbPoints, ), ;, System, ., arraycopy, (, y, ,]
[,, start, ,, x, ,, 0, ,, nbPoints, ), ;, System, ., arraycopy, (, y, ,, start, ,, y, ,]
[,, x, ,, 0, ,, nbPoints, ), ;, System, ., arraycopy, (, y, ,, start, ,, y, ,, 0, ,]
[,, 0, ,, nbPoints, ), ;, System, ., arraycopy, (, y, ,, start, ,, y, ,, 0, ,, nbPoints, )]
[,, nbPoints, ), ;, System, ., arraycopy, (, y, ,, start, ,, y, ,, 0, ,, nbPoints, ), ;, signChangeIndex]
[), ;, System, ., arraycopy, (, y, ,, start, ,, y, ,, 0, ,, nbPoints, ), ;, signChangeIndex, -=, start]
[;, signChangeIndex, -=, start, ;, }, else, if, (, nbPoints, ==, x, ., length, ), {, nbPoints, --, ;, if]
[., arraycopy, (, y, ,, start, ,, y, ,, 0, ,, nbPoints, ), ;, signChangeIndex, -=, start, ;, }, else]
[,, start, ,, y, ,, 0, ,, nbPoints, ), ;, signChangeIndex, -=, start, ;, }, else, if, (, nbPoints, ==]
[,, y, ,, 0, ,, nbPoints, ), ;, signChangeIndex, -=, start, ;, }, else, if, (, nbPoints, ==, x, .]
[,, 0, ,, nbPoints, ), ;, signChangeIndex, -=, start, ;, }, else, if, (, nbPoints, ==, x, ., length, )]
[,, nbPoints, ), ;, signChangeIndex, -=, start, ;, }, else, if, (, nbPoints, ==, x, ., length, ), {, nbPoints]
[), ;, signChangeIndex, -=, start, ;, }, else, if, (, nbPoints, ==, x, ., length, ), {, nbPoints, --, ;]
[-=, start, ;, }, else, if, (, nbPoints, ==, x, ., length, ), {, nbPoints, --, ;, if, (, signChangeIndex]
[;, }, else, if, (, nbPoints, ==, x, ., length, ), {, nbPoints, --, ;, if, (, signChangeIndex, >=, (]
[), {, nbPoints, --, ;, if, (, signChangeIndex, >=, (, x, ., length, +, 1, ), /, 2, ), {]
[==, x, ., length, ), {, nbPoints, --, ;, if, (, signChangeIndex, >=, (, x, ., length, +, 1, )]
[), {, nbPoints, --, ;, if, (, signChangeIndex, >=, (, x, ., length, +, 1, ), /, 2, ), {]
[., length, ), {, nbPoints, --, ;, if, (, signChangeIndex, >=, (, x, ., length, +, 1, ), /, 2]
[;, if, (, signChangeIndex, >=, (, x, ., length, +, 1, ), /, 2, ), {, System, ., arraycopy, (]
[--, ;, if, (, signChangeIndex, >=, (, x, ., length, +, 1, ), /, 2, ), {, System, ., arraycopy]
[), {, System, ., arraycopy, (, x, ,, 1, ,, x, ,, 0, ,, nbPoints, ), ;, System, ., arraycopy]
[>=, (, x, ., length, +, 1, ), /, 2, ), {, System, ., arraycopy, (, x, ,, 1, ,]
[), {, System, ., arraycopy, (, x, ,, 1, ,, x, ,, 0, ,, nbPoints, ), ;, System, ., arraycopy]
[/, 2, ), {, System, ., arraycopy, (, x, ,, 1, ,, x, ,, 0, ,, nbPoints, ), ;, System]
[), /, 2, ), {, System, ., arraycopy, (, x, ,, 1, ,, x, ,, 0, ,, nbPoints, ), ;]
[+, 1, ), /, 2, ), {, System, ., arraycopy, (, x, ,, 1, ,, x, ,, 0, ,, nbPoints]
[., length, +, 1, ), /, 2, ), {, System, ., arraycopy, (, x, ,, 1, ,, x, ,, 0]
[), /, 2, ), {, System, ., arraycopy, (, x, ,, 1, ,, x, ,, 0, ,, nbPoints, ), ;]
[), {, System, ., arraycopy, (, x, ,, 1, ,, x, ,, 0, ,, nbPoints, ), ;, System, ., arraycopy]
[;, System, ., arraycopy, (, y, ,, 1, ,, y, ,, 0, ,, nbPoints, ), ;, --, signChangeIndex, ;, }]
[., arraycopy, (, x, ,, 1, ,, x, ,, 0, ,, nbPoints, ), ;, System, ., arraycopy, (, y, ,]
[,, 1, ,, x, ,, 0, ,, nbPoints, ), ;, System, ., arraycopy, (, y, ,, 1, ,, y, ,]
[,, x, ,, 0, ,, nbPoints, ), ;, System, ., arraycopy, (, y, ,, 1, ,, y, ,, 0, ,]
[,, 0, ,, nbPoints, ), ;, System, ., arraycopy, (, y, ,, 1, ,, y, ,, 0, ,, nbPoints, )]
[,, nbPoints, ), ;, System, ., arraycopy, (, y, ,, 1, ,, y, ,, 0, ,, nbPoints, ), ;, --]
[), ;, System, ., arraycopy, (, y, ,, 1, ,, y, ,, 0, ,, nbPoints, ), ;, --, signChangeIndex, ;]
[;, --, signChangeIndex, ;, }, }, System, ., arraycopy, (, x, ,, signChangeIndex, ,, x, ,, signChangeIndex, +, 1, ,]
[., arraycopy, (, y, ,, 1, ,, y, ,, 0, ,, nbPoints, ), ;, --, signChangeIndex, ;, }, }, System]
[,, 1, ,, y, ,, 0, ,, nbPoints, ), ;, --, signChangeIndex, ;, }, }, System, ., arraycopy, (, x]
[,, y, ,, 0, ,, nbPoints, ), ;, --, signChangeIndex, ;, }, }, System, ., arraycopy, (, x, ,, signChangeIndex]
[,, 0, ,, nbPoints, ), ;, --, signChangeIndex, ;, }, }, System, ., arraycopy, (, x, ,, signChangeIndex, ,, x]
[,, nbPoints, ), ;, --, signChangeIndex, ;, }, }, System, ., arraycopy, (, x, ,, signChangeIndex, ,, x, ,, signChangeIndex]
[), ;, --, signChangeIndex, ;, }, }, System, ., arraycopy, (, x, ,, signChangeIndex, ,, x, ,, signChangeIndex, +, 1]
[;, }, }, System, ., arraycopy, (, x, ,, signChangeIndex, ,, x, ,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex]
[;, }, }, System, ., arraycopy, (, x, ,, signChangeIndex, ,, x, ,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex]
[;, x, [, signChangeIndex, ], =, nextX, ;, System, ., arraycopy, (, y, ,, signChangeIndex, ,, y, ,, signChangeIndex, +]
[., arraycopy, (, x, ,, signChangeIndex, ,, x, ,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex, ), ;, x, []
[,, signChangeIndex, ,, x, ,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex, ), ;, x, [, signChangeIndex, ], =, nextX]
[,, x, ,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex, ), ;, x, [, signChangeIndex, ], =, nextX, ;, System]
[,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex, ), ;, x, [, signChangeIndex, ], =, nextX, ;, System, ., arraycopy]
[,, nbPoints, -, signChangeIndex, ), ;, x, [, signChangeIndex, ], =, nextX, ;, System, ., arraycopy, (, y, ,, signChangeIndex]
[+, 1, ,, nbPoints, -, signChangeIndex, ), ;, x, [, signChangeIndex, ], =, nextX, ;, System, ., arraycopy, (, y]
[,, nbPoints, -, signChangeIndex, ), ;, x, [, signChangeIndex, ], =, nextX, ;, System, ., arraycopy, (, y, ,, signChangeIndex]
[), ;, x, [, signChangeIndex, ], =, nextX, ;, System, ., arraycopy, (, y, ,, signChangeIndex, ,, y, ,, signChangeIndex]
[-, signChangeIndex, ), ;, x, [, signChangeIndex, ], =, nextX, ;, System, ., arraycopy, (, y, ,, signChangeIndex, ,, y]
[), ;, x, [, signChangeIndex, ], =, nextX, ;, System, ., arraycopy, (, y, ,, signChangeIndex, ,, y, ,, signChangeIndex]
[=, nextX, ;, System, ., arraycopy, (, y, ,, signChangeIndex, ,, y, ,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex]
[[, signChangeIndex, ], =, nextX, ;, System, ., arraycopy, (, y, ,, signChangeIndex, ,, y, ,, signChangeIndex, +, 1, ,]
[], =, nextX, ;, System, ., arraycopy, (, y, ,, signChangeIndex, ,, y, ,, signChangeIndex, +, 1, ,, nbPoints, -]
[;, System, ., arraycopy, (, y, ,, signChangeIndex, ,, y, ,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex, ), ;]
[;, y, [, signChangeIndex, ], =, nextY, ;, ++, nbPoints, ;, if, (, nextY, ., multiply, (, yA, ), .]
[., arraycopy, (, y, ,, signChangeIndex, ,, y, ,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex, ), ;, y, []
[,, signChangeIndex, ,, y, ,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex, ), ;, y, [, signChangeIndex, ], =, nextY]
[,, y, ,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex, ), ;, y, [, signChangeIndex, ], =, nextY, ;, ++]
[,, signChangeIndex, +, 1, ,, nbPoints, -, signChangeIndex, ), ;, y, [, signChangeIndex, ], =, nextY, ;, ++, nbPoints, ;]
[,, nbPoints, -, signChangeIndex, ), ;, y, [, signChangeIndex, ], =, nextY, ;, ++, nbPoints, ;, if, (, nextY, .]
[+, 1, ,, nbPoints, -, signChangeIndex, ), ;, y, [, signChangeIndex, ], =, nextY, ;, ++, nbPoints, ;, if, (]
[,, nbPoints, -, signChangeIndex, ), ;, y, [, signChangeIndex, ], =, nextY, ;, ++, nbPoints, ;, if, (, nextY, .]
[), ;, y, [, signChangeIndex, ], =, nextY, ;, ++, nbPoints, ;, if, (, nextY, ., multiply, (, yA, )]
[-, signChangeIndex, ), ;, y, [, signChangeIndex, ], =, nextY, ;, ++, nbPoints, ;, if, (, nextY, ., multiply, (]
[), ;, y, [, signChangeIndex, ], =, nextY, ;, ++, nbPoints, ;, if, (, nextY, ., multiply, (, yA, )]
[=, nextY, ;, ++, nbPoints, ;, if, (, nextY, ., multiply, (, yA, ), ., negativeOrNull, (, ), ), {]
[[, signChangeIndex, ], =, nextY, ;, ++, nbPoints, ;, if, (, nextY, ., multiply, (, yA, ), ., negativeOrNull, (]
[], =, nextY, ;, ++, nbPoints, ;, if, (, nextY, ., multiply, (, yA, ), ., negativeOrNull, (, ), )]
[;, ++, nbPoints, ;, if, (, nextY, ., multiply, (, yA, ), ., negativeOrNull, (, ), ), {, xB, =]
[;, if, (, nextY, ., multiply, (, yA, ), ., negativeOrNull, (, ), ), {, xB, =, nextX, ;, yB]
[;, if, (, nextY, ., multiply, (, yA, ), ., negativeOrNull, (, ), ), {, xB, =, nextX, ;, yB]
[), {, xB, =, nextX, ;, yB, =, nextY, ;, absYB, =, yB, ., abs, (, ), ;, ++, agingA]
[., negativeOrNull, (, ), ), {, xB, =, nextX, ;, yB, =, nextY, ;, absYB, =, yB, ., abs, (]
[., multiply, (, yA, ), ., negativeOrNull, (, ), ), {, xB, =, nextX, ;, yB, =, nextY, ;, absYB]
[), ., negativeOrNull, (, ), ), {, xB, =, nextX, ;, yB, =, nextY, ;, absYB, =, yB, ., abs]
[=, nextX, ;, yB, =, nextY, ;, absYB, =, yB, ., abs, (, ), ;, ++, agingA, ;, agingB, =]
[;, yB, =, nextY, ;, absYB, =, yB, ., abs, (, ), ;, ++, agingA, ;, agingB, =, 0, ;]
[=, nextY, ;, absYB, =, yB, ., abs, (, ), ;, ++, agingA, ;, agingB, =, 0, ;, }, else]
[;, absYB, =, yB, ., abs, (, ), ;, ++, agingA, ;, agingB, =, 0, ;, }, else, {, xA]
[=, yB, ., abs, (, ), ;, ++, agingA, ;, agingB, =, 0, ;, }, else, {, xA, =, nextX]
[;, ++, agingA, ;, agingB, =, 0, ;, }, else, {, xA, =, nextX, ;, yA, =, nextY, ;, absYA]
[., abs, (, ), ;, ++, agingA, ;, agingB, =, 0, ;, }, else, {, xA, =, nextX, ;, yA]
[;, agingB, =, 0, ;, }, else, {, xA, =, nextX, ;, yA, =, nextY, ;, absYA, =, yA, .]
[;, agingB, =, 0, ;, }, else, {, xA, =, nextX, ;, yA, =, nextY, ;, absYA, =, yA, .]
[=, 0, ;, }, else, {, xA, =, nextX, ;, yA, =, nextY, ;, absYA, =, yA, ., abs, (]
[;, }, else, {, xA, =, nextX, ;, yA, =, nextY, ;, absYA, =, yA, ., abs, (, ), ;]
[=, nextX, ;, yA, =, nextY, ;, absYA, =, yA, ., abs, (, ), ;, agingA, =, 0, ;, ++]
[;, yA, =, nextY, ;, absYA, =, yA, ., abs, (, ), ;, agingA, =, 0, ;, ++, agingB, ;]
[=, nextY, ;, absYA, =, yA, ., abs, (, ), ;, agingA, =, 0, ;, ++, agingB, ;, signChangeIndex, ++]
[;, absYA, =, yA, ., abs, (, ), ;, agingA, =, 0, ;, ++, agingB, ;, signChangeIndex, ++, ;, }]
[=, yA, ., abs, (, ), ;, agingA, =, 0, ;, ++, agingB, ;, signChangeIndex, ++, ;, }, }, }]
[;, agingA, =, 0, ;, ++, agingB, ;, signChangeIndex, ++, ;, }, }, }, private, Dfp, guessX, (, final, Dfp]
[., abs, (, ), ;, agingA, =, 0, ;, ++, agingB, ;, signChangeIndex, ++, ;, }, }, }, private, Dfp]
[=, 0, ;, ++, agingB, ;, signChangeIndex, ++, ;, }, }, }, private, Dfp, guessX, (, final, Dfp, targetY, ,]
[;, ++, agingB, ;, signChangeIndex, ++, ;, }, }, }, private, Dfp, guessX, (, final, Dfp, targetY, ,, final, Dfp]
[;, signChangeIndex, ++, ;, }, }, }, private, Dfp, guessX, (, final, Dfp, targetY, ,, final, Dfp, [, ], x]
[;, signChangeIndex, ++, ;, }, }, }, private, Dfp, guessX, (, final, Dfp, targetY, ,, final, Dfp, [, ], x]
[;, }, }, }, private, Dfp, guessX, (, final, Dfp, targetY, ,, final, Dfp, [, ], x, ,, final, Dfp]
[++, ;, }, }, }, private, Dfp, guessX, (, final, Dfp, targetY, ,, final, Dfp, [, ], x, ,, final]
[;, i, <, end, -, 1, ;, ++, i, ), {, final, int, delta, =, i, +, 1, -, start]
[;, ++, i, ), {, final, int, delta, =, i, +, 1, -, start, ;, for, (, int, j, =]
[<, end, -, 1, ;, ++, i, ), {, final, int, delta, =, i, +, 1, -, start, ;, for]
[;, ++, i, ), {, final, int, delta, =, i, +, 1, -, start, ;, for, (, int, j, =]
[-, 1, ;, ++, i, ), {, final, int, delta, =, i, +, 1, -, start, ;, for, (, int]
[;, ++, i, ), {, final, int, delta, =, i, +, 1, -, start, ;, for, (, int, j, =]
[), {, final, int, delta, =, i, +, 1, -, start, ;, for, (, int, j, =, end, -, 1]
[), {, final, int, delta, =, i, +, 1, -, start, ;, for, (, int, j, =, end, -, 1]
[;, for, (, int, j, =, end, -, 1, ;, j, >, i, ;, --, j, ), {, x, []
[-, start, ;, for, (, int, j, =, end, -, 1, ;, j, >, i, ;, --, j, ), {]
[+, 1, -, start, ;, for, (, int, j, =, end, -, 1, ;, j, >, i, ;, --, j]
[-, start, ;, for, (, int, j, =, end, -, 1, ;, j, >, i, ;, --, j, ), {]
[;, for, (, int, j, =, end, -, 1, ;, j, >, i, ;, --, j, ), {, x, []
[;, j, >, i, ;, --, j, ), {, x, [, j, ], =, x, [, j, ], ., subtract]
[-, 1, ;, j, >, i, ;, --, j, ), {, x, [, j, ], =, x, [, j, ]]
[;, j, >, i, ;, --, j, ), {, x, [, j, ], =, x, [, j, ], ., subtract]
[;, --, j, ), {, x, [, j, ], =, x, [, j, ], ., subtract, (, x, [, j]
[>, i, ;, --, j, ), {, x, [, j, ], =, x, [, j, ], ., subtract, (, x]
[;, --, j, ), {, x, [, j, ], =, x, [, j, ], ., subtract, (, x, [, j]
[), {, x, [, j, ], =, x, [, j, ], ., subtract, (, x, [, j, -, 1, ]]
[), {, x, [, j, ], =, x, [, j, ], ., subtract, (, x, [, j, -, 1, ]]
[=, x, [, j, ], ., subtract, (, x, [, j, -, 1, ], ), ., divide, (, y, []
[[, j, ], =, x, [, j, ], ., subtract, (, x, [, j, -, 1, ], ), ., divide]
[], =, x, [, j, ], ., subtract, (, x, [, j, -, 1, ], ), ., divide, (, y]
[;, }, }, Dfp, x0, =, targetY, ., getZero, (, ), ;, for, (, int, j, =, end, -, 1]
[., divide, (, y, [, j, ], ., subtract, (, y, [, j, -, delta, ], ), ), ;, }]
[., subtract, (, x, [, j, -, 1, ], ), ., divide, (, y, [, j, ], ., subtract, (]
[[, j, ], ., subtract, (, x, [, j, -, 1, ], ), ., divide, (, y, [, j, ]]
[], ., subtract, (, x, [, j, -, 1, ], ), ., divide, (, y, [, j, ], ., subtract]
[), ., divide, (, y, [, j, ], ., subtract, (, y, [, j, -, delta, ], ), ), ;]
[[, j, -, 1, ], ), ., divide, (, y, [, j, ], ., subtract, (, y, [, j, -]
[], ), ., divide, (, y, [, j, ], ., subtract, (, y, [, j, -, delta, ], ), )]
[-, 1, ], ), ., divide, (, y, [, j, ], ., subtract, (, y, [, j, -, delta, ]]
[], ), ., divide, (, y, [, j, ], ., subtract, (, y, [, j, -, delta, ], ), )]
[), ;, }, }, Dfp, x0, =, targetY, ., getZero, (, ), ;, for, (, int, j, =, end, -]
[., subtract, (, y, [, j, -, delta, ], ), ), ;, }, }, Dfp, x0, =, targetY, ., getZero]
[[, j, ], ., subtract, (, y, [, j, -, delta, ], ), ), ;, }, }, Dfp, x0, =]
[], ., subtract, (, y, [, j, -, delta, ], ), ), ;, }, }, Dfp, x0, =, targetY, .]
[), ), ;, }, }, Dfp, x0, =, targetY, ., getZero, (, ), ;, for, (, int, j, =, end]
[[, j, -, delta, ], ), ), ;, }, }, Dfp, x0, =, targetY, ., getZero, (, ), ;, for]
[], ), ), ;, }, }, Dfp, x0, =, targetY, ., getZero, (, ), ;, for, (, int, j, =]
[-, delta, ], ), ), ;, }, }, Dfp, x0, =, targetY, ., getZero, (, ), ;, for, (, int]
[], ), ), ;, }, }, Dfp, x0, =, targetY, ., getZero, (, ), ;, for, (, int, j, =]
[;, for, (, int, j, =, end, -, 1, ;, j, >=, start, ;, --, j, ), {, x0, =]
[., getZero, (, ), ;, for, (, int, j, =, end, -, 1, ;, j, >=, start, ;, --, j]
[;, j, >=, start, ;, --, j, ), {, x0, =, x, [, j, ], ., add, (, x0, .]
[-, 1, ;, j, >=, start, ;, --, j, ), {, x0, =, x, [, j, ], ., add, (]
[;, j, >=, start, ;, --, j, ), {, x0, =, x, [, j, ], ., add, (, x0, .]
[;, --, j, ), {, x0, =, x, [, j, ], ., add, (, x0, ., multiply, (, targetY, .]
[>=, start, ;, --, j, ), {, x0, =, x, [, j, ], ., add, (, x0, ., multiply, (]
[;, --, j, ), {, x0, =, x, [, j, ], ., add, (, x0, ., multiply, (, targetY, .]
[), {, x0, =, x, [, j, ], ., add, (, x0, ., multiply, (, targetY, ., subtract, (, y]
[), {, x0, =, x, [, j, ], ., add, (, x0, ., multiply, (, targetY, ., subtract, (, y]
[=, x, [, j, ], ., add, (, x0, ., multiply, (, targetY, ., subtract, (, y, [, j, ]]
[;, }, return, x0, ;, }, }]
[., add, (, x0, ., multiply, (, targetY, ., subtract, (, y, [, j, ], ), ), ), ;, }]
[[, j, ], ., add, (, x0, ., multiply, (, targetY, ., subtract, (, y, [, j, ], ), )]
[], ., add, (, x0, ., multiply, (, targetY, ., subtract, (, y, [, j, ], ), ), ), ;]
[), ;, }, return, x0, ;, }, }]
[., multiply, (, targetY, ., subtract, (, y, [, j, ], ), ), ), ;, }, return, x0, ;, }]
[), ), ;, }, return, x0, ;, }, }]
[., subtract, (, y, [, j, ], ), ), ), ;, }, return, x0, ;, }, }]
[), ), ), ;, }, return, x0, ;, }, }]
[[, j, ], ), ), ), ;, }, return, x0, ;, }, }]
[], ), ), ), ;, }, return, x0, ;, }, }]
[;, }, }]
