[;, import, java, ., util, ., List, ;, public, class, OutlierListCollection, {, private, List, outlierLists, ;, private, boolean, highFarOut, =]
[List, ;, public, class, OutlierListCollection, {, private, List, outlierLists, ;, private, boolean, highFarOut, =, false, ;, private, boolean, lowFarOut, =]
[List, outlierLists, ;, private, boolean, highFarOut, =, false, ;, private, boolean, lowFarOut, =, false, ;, public, OutlierListCollection, (, ), {]
[List, outlierLists, ;, private, boolean, highFarOut, =, false, ;, private, boolean, lowFarOut, =, false, ;, public, OutlierListCollection, (, ), {]
[boolean, highFarOut, =, false, ;, private, boolean, lowFarOut, =, false, ;, public, OutlierListCollection, (, ), {, this, ., outlierLists, =]
[(, ), {, this, ., outlierLists, =, new, ArrayList, (, ), ;, }, public, boolean, isHighFarOut, (, ), {, return]
[(, ), {, this, ., outlierLists, =, new, ArrayList, (, ), ;, }, public, boolean, isHighFarOut, (, ), {, return]
[public, boolean, isHighFarOut, (, ), {, return, this, ., highFarOut, ;, }, public, void, setHighFarOut, (, boolean, farOut, ), {]
[public, boolean, isHighFarOut, (, ), {, return, this, ., highFarOut, ;, }, public, void, setHighFarOut, (, boolean, farOut, ), {]
[), {, return, this, ., highFarOut, ;, }, public, void, setHighFarOut, (, boolean, farOut, ), {, this, ., highFarOut, =]
[setHighFarOut, (, boolean, farOut, ), {, this, ., highFarOut, =, farOut, ;, }, public, boolean, isLowFarOut, (, ), {, return]
[setHighFarOut, (, boolean, farOut, ), {, this, ., highFarOut, =, farOut, ;, }, public, boolean, isLowFarOut, (, ), {, return]
[public, boolean, isLowFarOut, (, ), {, return, this, ., lowFarOut, ;, }, public, void, setLowFarOut, (, boolean, farOut, ), {]
[public, boolean, isLowFarOut, (, ), {, return, this, ., lowFarOut, ;, }, public, void, setLowFarOut, (, boolean, farOut, ), {]
[), {, return, this, ., lowFarOut, ;, }, public, void, setLowFarOut, (, boolean, farOut, ), {, this, ., lowFarOut, =]
[farOut, ), {, this, ., lowFarOut, =, farOut, ;, }, public, boolean, add, (, Outlier, outlier, ), {, if, (]
[farOut, ), {, this, ., lowFarOut, =, farOut, ;, }, public, boolean, add, (, Outlier, outlier, ), {, if, (]
[farOut, ), {, this, ., lowFarOut, =, farOut, ;, }, public, boolean, add, (, Outlier, outlier, ), {, if, (]
[public, boolean, add, (, Outlier, outlier, ), {, if, (, this, ., outlierLists, ., isEmpty, (, ), ), {, return]
[public, boolean, add, (, Outlier, outlier, ), {, if, (, this, ., outlierLists, ., isEmpty, (, ), ), {, return]
[public, boolean, add, (, Outlier, outlier, ), {, if, (, this, ., outlierLists, ., isEmpty, (, ), ), {, return]
[), {, if, (, this, ., outlierLists, ., isEmpty, (, ), ), {, return, this, ., outlierLists, ., add, (]
[(, this, ., outlierLists, ., isEmpty, (, ), ), {, return, this, ., outlierLists, ., add, (, new, OutlierList, (]
[return, this, ., outlierLists, ., add, (, new, OutlierList, (, outlier, ), ), ;, }, else, {, boolean, updated, =]
[new, OutlierList, (, outlier, ), ), ;, }, else, {, boolean, updated, =, false, ;, for, (, Iterator, iterator, =]
[new, OutlierList, (, outlier, ), ), ;, }, else, {, boolean, updated, =, false, ;, for, (, Iterator, iterator, =]
[new, OutlierList, (, outlier, ), ), ;, }, else, {, boolean, updated, =, false, ;, for, (, Iterator, iterator, =]
[else, {, boolean, updated, =, false, ;, for, (, Iterator, iterator, =, this, ., outlierLists, ., iterator, (, ), ;]
[else, {, boolean, updated, =, false, ;, for, (, Iterator, iterator, =, this, ., outlierLists, ., iterator, (, ), ;]
[=, this, ., outlierLists, ., iterator, (, ), ;, iterator, ., hasNext, (, ), ;, ), {, OutlierList, list, =]
[outlierLists, ., iterator, (, ), ;, iterator, ., hasNext, (, ), ;, ), {, OutlierList, list, =, (, OutlierList, )]
[outlierLists, ., iterator, (, ), ;, iterator, ., hasNext, (, ), ;, ), {, OutlierList, list, =, (, OutlierList, )]
[hasNext, (, ), ;, ), {, OutlierList, list, =, (, OutlierList, ), iterator, ., next, (, ), ;, if, (]
[hasNext, (, ), ;, ), {, OutlierList, list, =, (, OutlierList, ), iterator, ., next, (, ), ;, if, (]
[), {, OutlierList, list, =, (, OutlierList, ), iterator, ., next, (, ), ;, if, (, list, ., isOverlapped, (]
[=, (, OutlierList, ), iterator, ., next, (, ), ;, if, (, list, ., isOverlapped, (, outlier, ), ), {]
[OutlierList, ), iterator, ., next, (, ), ;, if, (, list, ., isOverlapped, (, outlier, ), ), {, updated, =]
[iterator, ., next, (, ), ;, if, (, list, ., isOverlapped, (, outlier, ), ), {, updated, =, updateOutlierList, (]
[next, (, ), ;, if, (, list, ., isOverlapped, (, outlier, ), ), {, updated, =, updateOutlierList, (, list, ,]
[., isOverlapped, (, outlier, ), ), {, updated, =, updateOutlierList, (, list, ,, outlier, ), ;, }, }, if, (]
[isOverlapped, (, outlier, ), ), {, updated, =, updateOutlierList, (, list, ,, outlier, ), ;, }, }, if, (, !]
[), ), {, updated, =, updateOutlierList, (, list, ,, outlier, ), ;, }, }, if, (, !, updated, ), {]
[{, updated, =, updateOutlierList, (, list, ,, outlier, ), ;, }, }, if, (, !, updated, ), {, updated, =]
[{, updated, =, updateOutlierList, (, list, ,, outlier, ), ;, }, }, if, (, !, updated, ), {, updated, =]
[{, updated, =, updateOutlierList, (, list, ,, outlier, ), ;, }, }, if, (, !, updated, ), {, updated, =]
[,, outlier, ), ;, }, }, if, (, !, updated, ), {, updated, =, this, ., outlierLists, ., add, (]
[;, }, }, if, (, !, updated, ), {, updated, =, this, ., outlierLists, ., add, (, new, OutlierList, (]
[updated, ), {, updated, =, this, ., outlierLists, ., add, (, new, OutlierList, (, outlier, ), ), ;, }, return]
[new, OutlierList, (, outlier, ), ), ;, }, return, updated, ;, }, }, public, Iterator, iterator, (, ), {, return]
[new, OutlierList, (, outlier, ), ), ;, }, return, updated, ;, }, }, public, Iterator, iterator, (, ), {, return]
[new, OutlierList, (, outlier, ), ), ;, }, return, updated, ;, }, }, public, Iterator, iterator, (, ), {, return]
[., iterator, (, ), ;, }, private, boolean, updateOutlierList, (, OutlierList, list, ,, Outlier, outlier, ), {, boolean, result, =]
[(, ), ;, }, private, boolean, updateOutlierList, (, OutlierList, list, ,, Outlier, outlier, ), {, boolean, result, =, false, ;]
[;, }, private, boolean, updateOutlierList, (, OutlierList, list, ,, Outlier, outlier, ), {, boolean, result, =, false, ;, result, =]
[;, }, private, boolean, updateOutlierList, (, OutlierList, list, ,, Outlier, outlier, ), {, boolean, result, =, false, ;, result, =]
[updateOutlierList, (, OutlierList, list, ,, Outlier, outlier, ), {, boolean, result, =, false, ;, result, =, list, ., add, (]
[list, ,, Outlier, outlier, ), {, boolean, result, =, false, ;, result, =, list, ., add, (, outlier, ), ;]
[list, ,, Outlier, outlier, ), {, boolean, result, =, false, ;, result, =, list, ., add, (, outlier, ), ;]
[boolean, result, =, false, ;, result, =, list, ., add, (, outlier, ), ;, list, ., updateAveragedOutlier, (, ), ;]
[boolean, result, =, false, ;, result, =, list, ., add, (, outlier, ), ;, list, ., updateAveragedOutlier, (, ), ;]
[;, result, =, list, ., add, (, outlier, ), ;, list, ., updateAveragedOutlier, (, ), ;, list, ., setMultiple, (]
[., add, (, outlier, ), ;, list, ., updateAveragedOutlier, (, ), ;, list, ., setMultiple, (, true, ), ;, return]
