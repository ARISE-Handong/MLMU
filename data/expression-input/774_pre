[public, class, SymbolicXYItemLabelGenerator, implements, XYItemLabelGenerator, ,, XYToolTipGenerator, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[String, generateToolTip, (, XYDataset, data, ,, int, series, ,, int, item, ), {, String, xStr, ,, yStr, ;, if, (]
[String, generateToolTip, (, XYDataset, data, ,, int, series, ,, int, item, ), {, String, xStr, ,, yStr, ;, if, (]
[,, int, series, ,, int, item, ), {, String, xStr, ,, yStr, ;, if, (, data, instanceof, YisSymbolic, ), {]
[series, ,, int, item, ), {, String, xStr, ,, yStr, ;, if, (, data, instanceof, YisSymbolic, ), {, yStr, =]
[series, ,, int, item, ), {, String, xStr, ,, yStr, ;, if, (, data, instanceof, YisSymbolic, ), {, yStr, =]
[,, int, item, ), {, String, xStr, ,, yStr, ;, if, (, data, instanceof, YisSymbolic, ), {, yStr, =, (]
[), {, String, xStr, ,, yStr, ;, if, (, data, instanceof, YisSymbolic, ), {, yStr, =, (, (, YisSymbolic, )]
[yStr, ;, if, (, data, instanceof, YisSymbolic, ), {, yStr, =, (, (, YisSymbolic, ), data, ), ., getYSymbolicValue, (]
[if, (, data, instanceof, YisSymbolic, ), {, yStr, =, (, (, YisSymbolic, ), data, ), ., getYSymbolicValue, (, series, ,]
[(, (, YisSymbolic, ), data, ), ., getYSymbolicValue, (, series, ,, item, ), ;, }, else, {, double, y, =]
[(, (, YisSymbolic, ), data, ), ., getYSymbolicValue, (, series, ,, item, ), ;, }, else, {, double, y, =]
[data, ), ., getYSymbolicValue, (, series, ,, item, ), ;, }, else, {, double, y, =, data, ., getYValue, (]
[., getYSymbolicValue, (, series, ,, item, ), ;, }, else, {, double, y, =, data, ., getYValue, (, series, ,]
[series, ,, item, ), ;, }, else, {, double, y, =, data, ., getYValue, (, series, ,, item, ), ;]
[item, ), ;, }, else, {, double, y, =, data, ., getYValue, (, series, ,, item, ), ;, yStr, =]
[item, ), ;, }, else, {, double, y, =, data, ., getYValue, (, series, ,, item, ), ;, yStr, =]
[else, {, double, y, =, data, ., getYValue, (, series, ,, item, ), ;, yStr, =, Double, ., toString, (]
[double, y, =, data, ., getYValue, (, series, ,, item, ), ;, yStr, =, Double, ., toString, (, round, (]
[=, data, ., getYValue, (, series, ,, item, ), ;, yStr, =, Double, ., toString, (, round, (, y, ,]
[item, ), ;, yStr, =, Double, ., toString, (, round, (, y, ,, 2, ), ), ;, }, if, (]
[item, ), ;, yStr, =, Double, ., toString, (, round, (, y, ,, 2, ), ), ;, }, if, (]
[Double, ., toString, (, round, (, y, ,, 2, ), ), ;, }, if, (, data, instanceof, XisSymbolic, ), {]
[toString, (, round, (, y, ,, 2, ), ), ;, }, if, (, data, instanceof, XisSymbolic, ), {, xStr, =]
[toString, (, round, (, y, ,, 2, ), ), ;, }, if, (, data, instanceof, XisSymbolic, ), {, xStr, =]
[(, round, (, y, ,, 2, ), ), ;, }, if, (, data, instanceof, XisSymbolic, ), {, xStr, =, (]
[y, ,, 2, ), ), ;, }, if, (, data, instanceof, XisSymbolic, ), {, xStr, =, (, (, XisSymbolic, )]
[;, }, if, (, data, instanceof, XisSymbolic, ), {, xStr, =, (, (, XisSymbolic, ), data, ), ., getXSymbolicValue, (]
[if, (, data, instanceof, XisSymbolic, ), {, xStr, =, (, (, XisSymbolic, ), data, ), ., getXSymbolicValue, (, series, ,]
[xStr, =, (, (, XisSymbolic, ), data, ), ., getXSymbolicValue, (, series, ,, item, ), ;, }, else, if, (]
[xStr, =, (, (, XisSymbolic, ), data, ), ., getXSymbolicValue, (, series, ,, item, ), ;, }, else, if, (]
[., getXSymbolicValue, (, series, ,, item, ), ;, }, else, if, (, data, instanceof, TimeSeriesCollection, ), {, RegularTimePeriod, p, =]
[., getXSymbolicValue, (, series, ,, item, ), ;, }, else, if, (, data, instanceof, TimeSeriesCollection, ), {, RegularTimePeriod, p, =]
[., getXSymbolicValue, (, series, ,, item, ), ;, }, else, if, (, data, instanceof, TimeSeriesCollection, ), {, RegularTimePeriod, p, =]
[getXSymbolicValue, (, series, ,, item, ), ;, }, else, if, (, data, instanceof, TimeSeriesCollection, ), {, RegularTimePeriod, p, =, (]
[,, item, ), ;, }, else, if, (, data, instanceof, TimeSeriesCollection, ), {, RegularTimePeriod, p, =, (, (, TimeSeriesCollection, )]
[else, if, (, data, instanceof, TimeSeriesCollection, ), {, RegularTimePeriod, p, =, (, (, TimeSeriesCollection, ), data, ), ., getSeries, (]
[TimeSeriesCollection, ), {, RegularTimePeriod, p, =, (, (, TimeSeriesCollection, ), data, ), ., getSeries, (, series, ), ., getTimePeriod, (]
[RegularTimePeriod, p, =, (, (, TimeSeriesCollection, ), data, ), ., getSeries, (, series, ), ., getTimePeriod, (, item, ), ;]
[=, (, (, TimeSeriesCollection, ), data, ), ., getSeries, (, series, ), ., getTimePeriod, (, item, ), ;, xStr, =]
[=, (, (, TimeSeriesCollection, ), data, ), ., getSeries, (, series, ), ., getTimePeriod, (, item, ), ;, xStr, =]
[., getTimePeriod, (, item, ), ;, xStr, =, p, ., toString, (, ), ;, }, else, {, double, x, =]
[., getTimePeriod, (, item, ), ;, xStr, =, p, ., toString, (, ), ;, }, else, {, double, x, =]
[), ;, xStr, =, p, ., toString, (, ), ;, }, else, {, double, x, =, data, ., getXValue, (]
[xStr, =, p, ., toString, (, ), ;, }, else, {, double, x, =, data, ., getXValue, (, series, ,]
[., toString, (, ), ;, }, else, {, double, x, =, data, ., getXValue, (, series, ,, item, ), ;]
[(, ), ;, }, else, {, double, x, =, data, ., getXValue, (, series, ,, item, ), ;, xStr, =]
[(, ), ;, }, else, {, double, x, =, data, ., getXValue, (, series, ,, item, ), ;, xStr, =]
[else, {, double, x, =, data, ., getXValue, (, series, ,, item, ), ;, xStr, =, Double, ., toString, (]
[double, x, =, data, ., getXValue, (, series, ,, item, ), ;, xStr, =, Double, ., toString, (, round, (]
[=, data, ., getXValue, (, series, ,, item, ), ;, xStr, =, Double, ., toString, (, round, (, x, ,]
[,, item, ), ;, xStr, =, Double, ., toString, (, round, (, x, ,, 2, ), ), ;, }, return]
[,, item, ), ;, xStr, =, Double, ., toString, (, round, (, x, ,, 2, ), ), ;, }, return]
[,, item, ), ;, xStr, =, Double, ., toString, (, round, (, x, ,, 2, ), ), ;, }, return]
[,, item, ), ;, xStr, =, Double, ., toString, (, round, (, x, ,, 2, ), ), ;, }, return]
[), ;, xStr, =, Double, ., toString, (, round, (, x, ,, 2, ), ), ;, }, return, "X: ", +]
[xStr, =, Double, ., toString, (, round, (, x, ,, 2, ), ), ;, }, return, "X: ", +, xStr, +]
[Double, ., toString, (, round, (, x, ,, 2, ), ), ;, }, return, "X: ", +, xStr, +, ", Y: ", +]
[", Y: ", +, yStr, ;, }, public, String, generateLabel, (, XYDataset, dataset, ,, int, series, ,, int, category, ), {, return]
[), {, return, null, ;, }, private, static, double, round, (, double, value, ,, int, nb, ), {, if, (]
[), {, return, null, ;, }, private, static, double, round, (, double, value, ,, int, nb, ), {, if, (]
[return, null, ;, }, private, static, double, round, (, double, value, ,, int, nb, ), {, if, (, nb, <=]
[private, static, double, round, (, double, value, ,, int, nb, ), {, if, (, nb, <=, 0, ), {, return]
[private, static, double, round, (, double, value, ,, int, nb, ), {, if, (, nb, <=, 0, ), {, return]
[(, double, value, ,, int, nb, ), {, if, (, nb, <=, 0, ), {, return, Math, ., floor, (]
[(, double, value, ,, int, nb, ), {, if, (, nb, <=, 0, ), {, return, Math, ., floor, (]
[value, ,, int, nb, ), {, if, (, nb, <=, 0, ), {, return, Math, ., floor, (, value, +]
[(, nb, <=, 0, ), {, return, Math, ., floor, (, value, +, 0.5d, ), ;, }, double, p, =]
[(, nb, <=, 0, ), {, return, Math, ., floor, (, value, +, 0.5d, ), ;, }, double, p, =]
[), {, return, Math, ., floor, (, value, +, 0.5d, ), ;, }, double, p, =, Math, ., pow, (]
[return, Math, ., floor, (, value, +, 0.5d, ), ;, }, double, p, =, Math, ., pow, (, 10, ,]
[+, 0.5d, ), ;, }, double, p, =, Math, ., pow, (, 10, ,, nb, ), ;, double, tempval, =]
[+, 0.5d, ), ;, }, double, p, =, Math, ., pow, (, 10, ,, nb, ), ;, double, tempval, =]
[}, double, p, =, Math, ., pow, (, 10, ,, nb, ), ;, double, tempval, =, Math, ., floor, (]
[}, double, p, =, Math, ., pow, (, 10, ,, nb, ), ;, double, tempval, =, Math, ., floor, (]
[}, double, p, =, Math, ., pow, (, 10, ,, nb, ), ;, double, tempval, =, Math, ., floor, (]
[p, =, Math, ., pow, (, 10, ,, nb, ), ;, double, tempval, =, Math, ., floor, (, value, *]
[Math, ., pow, (, 10, ,, nb, ), ;, double, tempval, =, Math, ., floor, (, value, *, p, +]
[10, ,, nb, ), ;, double, tempval, =, Math, ., floor, (, value, *, p, +, 0.5d, ), ;, return]
[10, ,, nb, ), ;, double, tempval, =, Math, ., floor, (, value, *, p, +, 0.5d, ), ;, return]
[nb, ), ;, double, tempval, =, Math, ., floor, (, value, *, p, +, 0.5d, ), ;, return, tempval, /]
[p, +, 0.5d, ), ;, return, tempval, /, p, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[p, +, 0.5d, ), ;, return, tempval, /, p, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[return, super, ., clone, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[(, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[{, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, obj, instanceof, SymbolicXYItemLabelGenerator, ), {, return]
[==, this, ), {, return, true, ;, }, if, (, obj, instanceof, SymbolicXYItemLabelGenerator, ), {, return, true, ;, }, return]
[SymbolicXYItemLabelGenerator, ), {, return, true, ;, }, return, false, ;, }, public, int, hashCode, (, ), {, int, result, =]
[return, true, ;, }, return, false, ;, }, public, int, hashCode, (, ), {, int, result, =, 127, ;, return]
