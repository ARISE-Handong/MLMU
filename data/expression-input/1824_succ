[), {, throw, new, NonSquareMatrixException, (, matrix, ., getRowDimension, (, ), ,, matrix, ., getColumnDimension, (, ), ), ;, }]
[), {, throw, new, NonSquareMatrixException, (, matrix, ., getRowDimension, (, ), ,, matrix, ., getColumnDimension, (, ), ), ;, }]
[., isSquare, (, ), ), {, throw, new, NonSquareMatrixException, (, matrix, ., getRowDimension, (, ), ,, matrix, ., getColumnDimension, (]
[;, }, final, int, m, =, matrix, ., getRowDimension, (, ), ;, householderVectors, =, matrix, ., getData, (, ), ;]
[,, matrix, ., getColumnDimension, (, ), ), ;, }, final, int, m, =, matrix, ., getRowDimension, (, ), ;, householderVectors]
[., getRowDimension, (, ), ,, matrix, ., getColumnDimension, (, ), ), ;, }, final, int, m, =, matrix, ., getRowDimension]
[), ;, }, final, int, m, =, matrix, ., getRowDimension, (, ), ;, householderVectors, =, matrix, ., getData, (, )]
[., getColumnDimension, (, ), ), ;, }, final, int, m, =, matrix, ., getRowDimension, (, ), ;, householderVectors, =, matrix]
[;, householderVectors, =, matrix, ., getData, (, ), ;, ort, =, new, double, [, m, ], ;, cachedP, =, null]
[., getRowDimension, (, ), ;, householderVectors, =, matrix, ., getData, (, ), ;, ort, =, new, double, [, m, ]]
[=, matrix, ., getData, (, ), ;, ort, =, new, double, [, m, ], ;, cachedP, =, null, ;, cachedPt]
[;, ort, =, new, double, [, m, ], ;, cachedP, =, null, ;, cachedPt, =, null, ;, cachedH, =, null]
[., getData, (, ), ;, ort, =, new, double, [, m, ], ;, cachedP, =, null, ;, cachedPt, =, null]
[=, new, double, [, m, ], ;, cachedP, =, null, ;, cachedPt, =, null, ;, cachedH, =, null, ;, transform]
[;, cachedP, =, null, ;, cachedPt, =, null, ;, cachedH, =, null, ;, transform, (, ), ;, }, public, RealMatrix]
[], ;, cachedP, =, null, ;, cachedPt, =, null, ;, cachedH, =, null, ;, transform, (, ), ;, }, public]
[=, null, ;, cachedPt, =, null, ;, cachedH, =, null, ;, transform, (, ), ;, }, public, RealMatrix, getP, (]
[;, cachedPt, =, null, ;, cachedH, =, null, ;, transform, (, ), ;, }, public, RealMatrix, getP, (, ), {]
[=, null, ;, cachedH, =, null, ;, transform, (, ), ;, }, public, RealMatrix, getP, (, ), {, if, (]
[;, cachedH, =, null, ;, transform, (, ), ;, }, public, RealMatrix, getP, (, ), {, if, (, cachedP, ==]
[=, null, ;, transform, (, ), ;, }, public, RealMatrix, getP, (, ), {, if, (, cachedP, ==, null, )]
[;, transform, (, ), ;, }, public, RealMatrix, getP, (, ), {, if, (, cachedP, ==, null, ), {, final]
[;, }, public, RealMatrix, getP, (, ), {, if, (, cachedP, ==, null, ), {, final, int, n, =, householderVectors]
[), {, final, int, n, =, householderVectors, ., length, ;, final, int, high, =, n, -, 1, ;, final, double]
[==, null, ), {, final, int, n, =, householderVectors, ., length, ;, final, int, high, =, n, -, 1, ;]
[), {, final, int, n, =, householderVectors, ., length, ;, final, int, high, =, n, -, 1, ;, final, double]
[;, final, int, high, =, n, -, 1, ;, final, double, [, ], [, ], pa, =, new, double, []
[., length, ;, final, int, high, =, n, -, 1, ;, final, double, [, ], [, ], pa, =, new]
[;, final, double, [, ], [, ], pa, =, new, double, [, n, ], [, n, ], ;, for, (]
[-, 1, ;, final, double, [, ], [, ], pa, =, new, double, [, n, ], [, n, ], ;]
[;, final, double, [, ], [, ], pa, =, new, double, [, n, ], [, n, ], ;, for, (]
[;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, ), {, for, (, int, j]
[], [, n, ], ;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, ), {]
[], ;, for, (, int, i, =, 0, ;, i, <, n, ;, i, ++, ), {, for, (, int]
[;, i, <, n, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, n, ;]
[;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, n, ;, j, ++, ), {]
[<, n, ;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, n, ;, j, ++]
[;, i, ++, ), {, for, (, int, j, =, 0, ;, j, <, n, ;, j, ++, ), {]
[), {, for, (, int, j, =, 0, ;, j, <, n, ;, j, ++, ), {, pa, [, i]
[++, ), {, for, (, int, j, =, 0, ;, j, <, n, ;, j, ++, ), {, pa, []
[;, j, <, n, ;, j, ++, ), {, pa, [, i, ], [, j, ], =, (, i, ==]
[;, j, ++, ), {, pa, [, i, ], [, j, ], =, (, i, ==, j, ), ?, 1]
[<, n, ;, j, ++, ), {, pa, [, i, ], [, j, ], =, (, i, ==, j, )]
[;, j, ++, ), {, pa, [, i, ], [, j, ], =, (, i, ==, j, ), ?, 1]
[), {, pa, [, i, ], [, j, ], =, (, i, ==, j, ), ?, 1, :, 0, ;]
[++, ), {, pa, [, i, ], [, j, ], =, (, i, ==, j, ), ?, 1, :, 0]
[=, (, i, ==, j, ), ?, 1, :, 0, ;, }, }, for, (, int, m, =, high, -]
[[, j, ], =, (, i, ==, j, ), ?, 1, :, 0, ;, }, }, for, (, int, m]
[[, i, ], [, j, ], =, (, i, ==, j, ), ?, 1, :, 0, ;, }, }, for]
[], [, j, ], =, (, i, ==, j, ), ?, 1, :, 0, ;, }, }, for, (, int]
[], =, (, i, ==, j, ), ?, 1, :, 0, ;, }, }, for, (, int, m, =, high]
[;, }, }, for, (, int, m, =, high, -, 1, ;, m, >=, 1, ;, m, --, ), {]
[?, 1, :, 0, ;, }, }, for, (, int, m, =, high, -, 1, ;, m, >=, 1, ;]
[), ?, 1, :, 0, ;, }, }, for, (, int, m, =, high, -, 1, ;, m, >=, 1]
[==, j, ), ?, 1, :, 0, ;, }, }, for, (, int, m, =, high, -, 1, ;, m]
[), ?, 1, :, 0, ;, }, }, for, (, int, m, =, high, -, 1, ;, m, >=, 1]
[:, 0, ;, }, }, for, (, int, m, =, high, -, 1, ;, m, >=, 1, ;, m, --]
[;, }, }, for, (, int, m, =, high, -, 1, ;, m, >=, 1, ;, m, --, ), {]
[;, m, >=, 1, ;, m, --, ), {, if, (, householderVectors, [, m, ], [, m, -, 1, ]]
[-, 1, ;, m, >=, 1, ;, m, --, ), {, if, (, householderVectors, [, m, ], [, m, -]
[;, m, >=, 1, ;, m, --, ), {, if, (, householderVectors, [, m, ], [, m, -, 1, ]]
[;, m, --, ), {, if, (, householderVectors, [, m, ], [, m, -, 1, ], !=, 0.0, ), {]
[>=, 1, ;, m, --, ), {, if, (, householderVectors, [, m, ], [, m, -, 1, ], !=, 0.0]
[;, m, --, ), {, if, (, householderVectors, [, m, ], [, m, -, 1, ], !=, 0.0, ), {]
[), {, if, (, householderVectors, [, m, ], [, m, -, 1, ], !=, 0.0, ), {, for, (, int]
[--, ), {, if, (, householderVectors, [, m, ], [, m, -, 1, ], !=, 0.0, ), {, for, (]
[), {, for, (, int, i, =, m, +, 1, ;, i, <=, high, ;, i, ++, ), {, ort]
[!=, 0.0, ), {, for, (, int, i, =, m, +, 1, ;, i, <=, high, ;, i, ++, )]
[[, m, -, 1, ], !=, 0.0, ), {, for, (, int, i, =, m, +, 1, ;, i, <=]
[[, m, ], [, m, -, 1, ], !=, 0.0, ), {, for, (, int, i, =, m, +, 1]
[], [, m, -, 1, ], !=, 0.0, ), {, for, (, int, i, =, m, +, 1, ;, i]
[], !=, 0.0, ), {, for, (, int, i, =, m, +, 1, ;, i, <=, high, ;, i, ++]
[-, 1, ], !=, 0.0, ), {, for, (, int, i, =, m, +, 1, ;, i, <=, high, ;]
[], !=, 0.0, ), {, for, (, int, i, =, m, +, 1, ;, i, <=, high, ;, i, ++]
[), {, for, (, int, i, =, m, +, 1, ;, i, <=, high, ;, i, ++, ), {, ort]
[;, i, <=, high, ;, i, ++, ), {, ort, [, i, ], =, householderVectors, [, i, ], [, m]
[+, 1, ;, i, <=, high, ;, i, ++, ), {, ort, [, i, ], =, householderVectors, [, i, ]]
[;, i, <=, high, ;, i, ++, ), {, ort, [, i, ], =, householderVectors, [, i, ], [, m]
[;, i, ++, ), {, ort, [, i, ], =, householderVectors, [, i, ], [, m, -, 1, ], ;]
[<=, high, ;, i, ++, ), {, ort, [, i, ], =, householderVectors, [, i, ], [, m, -, 1]
[;, i, ++, ), {, ort, [, i, ], =, householderVectors, [, i, ], [, m, -, 1, ], ;]
[), {, ort, [, i, ], =, householderVectors, [, i, ], [, m, -, 1, ], ;, }, for, (]
[++, ), {, ort, [, i, ], =, householderVectors, [, i, ], [, m, -, 1, ], ;, }, for]
[=, householderVectors, [, i, ], [, m, -, 1, ], ;, }, for, (, int, j, =, m, ;, j]
[[, i, ], =, householderVectors, [, i, ], [, m, -, 1, ], ;, }, for, (, int, j, =]
[], =, householderVectors, [, i, ], [, m, -, 1, ], ;, }, for, (, int, j, =, m, ;]
[;, }, for, (, int, j, =, m, ;, j, <=, high, ;, j, ++, ), {, double, g, =]
[[, m, -, 1, ], ;, }, for, (, int, j, =, m, ;, j, <=, high, ;, j, ++]
[[, i, ], [, m, -, 1, ], ;, }, for, (, int, j, =, m, ;, j, <=, high]
[], [, m, -, 1, ], ;, }, for, (, int, j, =, m, ;, j, <=, high, ;, j]
[], ;, }, for, (, int, j, =, m, ;, j, <=, high, ;, j, ++, ), {, double, g]
[-, 1, ], ;, }, for, (, int, j, =, m, ;, j, <=, high, ;, j, ++, ), {]
[], ;, }, for, (, int, j, =, m, ;, j, <=, high, ;, j, ++, ), {, double, g]
[;, j, <=, high, ;, j, ++, ), {, double, g, =, 0.0, ;, for, (, int, i, =, m]
[;, j, ++, ), {, double, g, =, 0.0, ;, for, (, int, i, =, m, ;, i, <=, high]
[<=, high, ;, j, ++, ), {, double, g, =, 0.0, ;, for, (, int, i, =, m, ;, i]
[;, j, ++, ), {, double, g, =, 0.0, ;, for, (, int, i, =, m, ;, i, <=, high]
[), {, double, g, =, 0.0, ;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++]
[++, ), {, double, g, =, 0.0, ;, for, (, int, i, =, m, ;, i, <=, high, ;, i]
[;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++, ), {, g, +=, ort, []
[;, i, <=, high, ;, i, ++, ), {, g, +=, ort, [, i, ], *, pa, [, i, ]]
[;, i, ++, ), {, g, +=, ort, [, i, ], *, pa, [, i, ], [, j, ], ;]
[<=, high, ;, i, ++, ), {, g, +=, ort, [, i, ], *, pa, [, i, ], [, j]
[;, i, ++, ), {, g, +=, ort, [, i, ], *, pa, [, i, ], [, j, ], ;]
[), {, g, +=, ort, [, i, ], *, pa, [, i, ], [, j, ], ;, }, g, =]
[++, ), {, g, +=, ort, [, i, ], *, pa, [, i, ], [, j, ], ;, }, g]
[+=, ort, [, i, ], *, pa, [, i, ], [, j, ], ;, }, g, =, (, g, /]
[;, }, g, =, (, g, /, ort, [, m, ], ), /, householderVectors, [, m, ], [, m, -]
[*, pa, [, i, ], [, j, ], ;, }, g, =, (, g, /, ort, [, m, ], )]
[[, i, ], *, pa, [, i, ], [, j, ], ;, }, g, =, (, g, /, ort, []
[], *, pa, [, i, ], [, j, ], ;, }, g, =, (, g, /, ort, [, m, ]]
[;, }, g, =, (, g, /, ort, [, m, ], ), /, householderVectors, [, m, ], [, m, -]
[[, j, ], ;, }, g, =, (, g, /, ort, [, m, ], ), /, householderVectors, [, m, ]]
[[, i, ], [, j, ], ;, }, g, =, (, g, /, ort, [, m, ], ), /, householderVectors]
[], [, j, ], ;, }, g, =, (, g, /, ort, [, m, ], ), /, householderVectors, [, m]
[], ;, }, g, =, (, g, /, ort, [, m, ], ), /, householderVectors, [, m, ], [, m]
[=, (, g, /, ort, [, m, ], ), /, householderVectors, [, m, ], [, m, -, 1, ], ;]
[;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++, ), {, pa, [, i, ]]
[/, householderVectors, [, m, ], [, m, -, 1, ], ;, for, (, int, i, =, m, ;, i, <=]
[), /, householderVectors, [, m, ], [, m, -, 1, ], ;, for, (, int, i, =, m, ;, i]
[/, ort, [, m, ], ), /, householderVectors, [, m, ], [, m, -, 1, ], ;, for, (, int]
[), /, householderVectors, [, m, ], [, m, -, 1, ], ;, for, (, int, i, =, m, ;, i]
[[, m, ], ), /, householderVectors, [, m, ], [, m, -, 1, ], ;, for, (, int, i, =]
[], ), /, householderVectors, [, m, ], [, m, -, 1, ], ;, for, (, int, i, =, m, ;]
[;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++, ), {, pa, [, i, ]]
[[, m, -, 1, ], ;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++, )]
[[, m, ], [, m, -, 1, ], ;, for, (, int, i, =, m, ;, i, <=, high, ;]
[], [, m, -, 1, ], ;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++]
[], ;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++, ), {, pa, [, i]
[-, 1, ], ;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++, ), {, pa]
[], ;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++, ), {, pa, [, i]
[;, i, <=, high, ;, i, ++, ), {, pa, [, i, ], [, j, ], +=, g, *, ort]
[;, i, ++, ), {, pa, [, i, ], [, j, ], +=, g, *, ort, [, i, ], ;]
[<=, high, ;, i, ++, ), {, pa, [, i, ], [, j, ], +=, g, *, ort, [, i]
[;, i, ++, ), {, pa, [, i, ], [, j, ], +=, g, *, ort, [, i, ], ;]
[), {, pa, [, i, ], [, j, ], +=, g, *, ort, [, i, ], ;, }, }, }]
[++, ), {, pa, [, i, ], [, j, ], +=, g, *, ort, [, i, ], ;, }, }]
[+=, g, *, ort, [, i, ], ;, }, }, }, }, cachedP, =, MatrixUtils, ., createRealMatrix, (, pa, )]
[[, j, ], +=, g, *, ort, [, i, ], ;, }, }, }, }, cachedP, =, MatrixUtils, ., createRealMatrix]
[[, i, ], [, j, ], +=, g, *, ort, [, i, ], ;, }, }, }, }, cachedP, =]
[], [, j, ], +=, g, *, ort, [, i, ], ;, }, }, }, }, cachedP, =, MatrixUtils, .]
[], +=, g, *, ort, [, i, ], ;, }, }, }, }, cachedP, =, MatrixUtils, ., createRealMatrix, (, pa]
[;, }, }, }, }, cachedP, =, MatrixUtils, ., createRealMatrix, (, pa, ), ;, }, return, cachedP, ;, }, public]
[*, ort, [, i, ], ;, }, }, }, }, cachedP, =, MatrixUtils, ., createRealMatrix, (, pa, ), ;, }]
[;, }, }, }, }, cachedP, =, MatrixUtils, ., createRealMatrix, (, pa, ), ;, }, return, cachedP, ;, }, public]
[[, i, ], ;, }, }, }, }, cachedP, =, MatrixUtils, ., createRealMatrix, (, pa, ), ;, }, return, cachedP]
[], ;, }, }, }, }, cachedP, =, MatrixUtils, ., createRealMatrix, (, pa, ), ;, }, return, cachedP, ;, }]
[=, MatrixUtils, ., createRealMatrix, (, pa, ), ;, }, return, cachedP, ;, }, public, RealMatrix, getPT, (, ), {, if]
[;, }, return, cachedP, ;, }, public, RealMatrix, getPT, (, ), {, if, (, cachedPt, ==, null, ), {, cachedPt]
[., createRealMatrix, (, pa, ), ;, }, return, cachedP, ;, }, public, RealMatrix, getPT, (, ), {, if, (, cachedPt]
[), ;, }, return, cachedP, ;, }, public, RealMatrix, getPT, (, ), {, if, (, cachedPt, ==, null, ), {]
[;, }, public, RealMatrix, getPT, (, ), {, if, (, cachedPt, ==, null, ), {, cachedPt, =, getP, (, )]
[), {, cachedPt, =, getP, (, ), ., transpose, (, ), ;, }, return, cachedPt, ;, }, public, RealMatrix, getH]
[==, null, ), {, cachedPt, =, getP, (, ), ., transpose, (, ), ;, }, return, cachedPt, ;, }, public]
[), {, cachedPt, =, getP, (, ), ., transpose, (, ), ;, }, return, cachedPt, ;, }, public, RealMatrix, getH]
[=, getP, (, ), ., transpose, (, ), ;, }, return, cachedPt, ;, }, public, RealMatrix, getH, (, ), {]
[;, }, return, cachedPt, ;, }, public, RealMatrix, getH, (, ), {, if, (, cachedH, ==, null, ), {, final]
[., transpose, (, ), ;, }, return, cachedPt, ;, }, public, RealMatrix, getH, (, ), {, if, (, cachedH, ==]
[;, }, public, RealMatrix, getH, (, ), {, if, (, cachedH, ==, null, ), {, final, int, m, =, householderVectors]
[), {, final, int, m, =, householderVectors, ., length, ;, final, double, [, ], [, ], h, =, new, double]
[==, null, ), {, final, int, m, =, householderVectors, ., length, ;, final, double, [, ], [, ], h, =]
[), {, final, int, m, =, householderVectors, ., length, ;, final, double, [, ], [, ], h, =, new, double]
[;, final, double, [, ], [, ], h, =, new, double, [, m, ], [, m, ], ;, for, (]
[., length, ;, final, double, [, ], [, ], h, =, new, double, [, m, ], [, m, ], ;]
[;, for, (, int, i, =, 0, ;, i, <, m, ;, ++, i, ), {, if, (, i, >]
[], [, m, ], ;, for, (, int, i, =, 0, ;, i, <, m, ;, ++, i, ), {]
[], ;, for, (, int, i, =, 0, ;, i, <, m, ;, ++, i, ), {, if, (, i]
[;, i, <, m, ;, ++, i, ), {, if, (, i, >, 0, ), {, h, [, i, ]]
[;, ++, i, ), {, if, (, i, >, 0, ), {, h, [, i, ], [, i, -, 1]
[<, m, ;, ++, i, ), {, if, (, i, >, 0, ), {, h, [, i, ], [, i]
[;, ++, i, ), {, if, (, i, >, 0, ), {, h, [, i, ], [, i, -, 1]
[), {, if, (, i, >, 0, ), {, h, [, i, ], [, i, -, 1, ], =, householderVectors]
[), {, if, (, i, >, 0, ), {, h, [, i, ], [, i, -, 1, ], =, householderVectors]
[), {, h, [, i, ], [, i, -, 1, ], =, householderVectors, [, i, ], [, i, -, 1]
[>, 0, ), {, h, [, i, ], [, i, -, 1, ], =, householderVectors, [, i, ], [, i]
[), {, h, [, i, ], [, i, -, 1, ], =, householderVectors, [, i, ], [, i, -, 1]
[=, householderVectors, [, i, ], [, i, -, 1, ], ;, }, for, (, int, j, =, i, ;, j]
[[, i, -, 1, ], =, householderVectors, [, i, ], [, i, -, 1, ], ;, }, for, (, int]
[[, i, ], [, i, -, 1, ], =, householderVectors, [, i, ], [, i, -, 1, ], ;, }]
[], [, i, -, 1, ], =, householderVectors, [, i, ], [, i, -, 1, ], ;, }, for, (]
[], =, householderVectors, [, i, ], [, i, -, 1, ], ;, }, for, (, int, j, =, i, ;]
[-, 1, ], =, householderVectors, [, i, ], [, i, -, 1, ], ;, }, for, (, int, j, =]
[], =, householderVectors, [, i, ], [, i, -, 1, ], ;, }, for, (, int, j, =, i, ;]
[;, }, for, (, int, j, =, i, ;, j, <, m, ;, ++, j, ), {, h, [, i]
[[, i, -, 1, ], ;, }, for, (, int, j, =, i, ;, j, <, m, ;, ++, j]
[[, i, ], [, i, -, 1, ], ;, }, for, (, int, j, =, i, ;, j, <, m]
[], [, i, -, 1, ], ;, }, for, (, int, j, =, i, ;, j, <, m, ;, ++]
[], ;, }, for, (, int, j, =, i, ;, j, <, m, ;, ++, j, ), {, h, []
[-, 1, ], ;, }, for, (, int, j, =, i, ;, j, <, m, ;, ++, j, ), {]
[], ;, }, for, (, int, j, =, i, ;, j, <, m, ;, ++, j, ), {, h, []
[;, j, <, m, ;, ++, j, ), {, h, [, i, ], [, j, ], =, householderVectors, [, i]
[;, ++, j, ), {, h, [, i, ], [, j, ], =, householderVectors, [, i, ], [, j, ]]
[<, m, ;, ++, j, ), {, h, [, i, ], [, j, ], =, householderVectors, [, i, ], []
[;, ++, j, ), {, h, [, i, ], [, j, ], =, householderVectors, [, i, ], [, j, ]]
[), {, h, [, i, ], [, j, ], =, householderVectors, [, i, ], [, j, ], ;, }, }]
[), {, h, [, i, ], [, j, ], =, householderVectors, [, i, ], [, j, ], ;, }, }]
[=, householderVectors, [, i, ], [, j, ], ;, }, }, cachedH, =, MatrixUtils, ., createRealMatrix, (, h, ), ;]
[[, j, ], =, householderVectors, [, i, ], [, j, ], ;, }, }, cachedH, =, MatrixUtils, ., createRealMatrix, (]
[[, i, ], [, j, ], =, householderVectors, [, i, ], [, j, ], ;, }, }, cachedH, =, MatrixUtils]
[], [, j, ], =, householderVectors, [, i, ], [, j, ], ;, }, }, cachedH, =, MatrixUtils, ., createRealMatrix]
[], =, householderVectors, [, i, ], [, j, ], ;, }, }, cachedH, =, MatrixUtils, ., createRealMatrix, (, h, )]
[;, }, }, cachedH, =, MatrixUtils, ., createRealMatrix, (, h, ), ;, }, return, cachedH, ;, }, double, [, ]]
[[, j, ], ;, }, }, cachedH, =, MatrixUtils, ., createRealMatrix, (, h, ), ;, }, return, cachedH, ;, }]
[[, i, ], [, j, ], ;, }, }, cachedH, =, MatrixUtils, ., createRealMatrix, (, h, ), ;, }, return]
[], [, j, ], ;, }, }, cachedH, =, MatrixUtils, ., createRealMatrix, (, h, ), ;, }, return, cachedH, ;]
[], ;, }, }, cachedH, =, MatrixUtils, ., createRealMatrix, (, h, ), ;, }, return, cachedH, ;, }, double, []
[=, MatrixUtils, ., createRealMatrix, (, h, ), ;, }, return, cachedH, ;, }, double, [, ], [, ], getHouseholderVectorsRef, (]
[;, }, return, cachedH, ;, }, double, [, ], [, ], getHouseholderVectorsRef, (, ), {, return, householderVectors, ;, }, private]
[., createRealMatrix, (, h, ), ;, }, return, cachedH, ;, }, double, [, ], [, ], getHouseholderVectorsRef, (, ), {]
[), ;, }, return, cachedH, ;, }, double, [, ], [, ], getHouseholderVectorsRef, (, ), {, return, householderVectors, ;, }]
[;, }, double, [, ], [, ], getHouseholderVectorsRef, (, ), {, return, householderVectors, ;, }, private, void, transform, (, )]
[;, }, private, void, transform, (, ), {, final, int, n, =, householderVectors, ., length, ;, final, int, high, =]
[;, final, int, high, =, n, -, 1, ;, for, (, int, m, =, 1, ;, m, <=, high, -]
[., length, ;, final, int, high, =, n, -, 1, ;, for, (, int, m, =, 1, ;, m, <=]
[;, for, (, int, m, =, 1, ;, m, <=, high, -, 1, ;, m, ++, ), {, double, scale]
[-, 1, ;, for, (, int, m, =, 1, ;, m, <=, high, -, 1, ;, m, ++, ), {]
[;, for, (, int, m, =, 1, ;, m, <=, high, -, 1, ;, m, ++, ), {, double, scale]
[;, m, <=, high, -, 1, ;, m, ++, ), {, double, scale, =, 0, ;, for, (, int, i]
[;, m, ++, ), {, double, scale, =, 0, ;, for, (, int, i, =, m, ;, i, <=, high]
[<=, high, -, 1, ;, m, ++, ), {, double, scale, =, 0, ;, for, (, int, i, =, m]
[;, m, ++, ), {, double, scale, =, 0, ;, for, (, int, i, =, m, ;, i, <=, high]
[-, 1, ;, m, ++, ), {, double, scale, =, 0, ;, for, (, int, i, =, m, ;, i]
[;, m, ++, ), {, double, scale, =, 0, ;, for, (, int, i, =, m, ;, i, <=, high]
[), {, double, scale, =, 0, ;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++]
[++, ), {, double, scale, =, 0, ;, for, (, int, i, =, m, ;, i, <=, high, ;, i]
[;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++, ), {, scale, +=, FastMath, .]
[;, i, <=, high, ;, i, ++, ), {, scale, +=, FastMath, ., abs, (, householderVectors, [, i, ], []
[;, i, ++, ), {, scale, +=, FastMath, ., abs, (, householderVectors, [, i, ], [, m, -, 1, ]]
[<=, high, ;, i, ++, ), {, scale, +=, FastMath, ., abs, (, householderVectors, [, i, ], [, m, -]
[;, i, ++, ), {, scale, +=, FastMath, ., abs, (, householderVectors, [, i, ], [, m, -, 1, ]]
[), {, scale, +=, FastMath, ., abs, (, householderVectors, [, i, ], [, m, -, 1, ], ), ;, }]
[++, ), {, scale, +=, FastMath, ., abs, (, householderVectors, [, i, ], [, m, -, 1, ], ), ;]
[+=, FastMath, ., abs, (, householderVectors, [, i, ], [, m, -, 1, ], ), ;, }, if, (, !]
[;, }, if, (, !, Precision, ., equals, (, scale, ,, 0, ), ), {, double, h, =, 0, ;]
[., abs, (, householderVectors, [, i, ], [, m, -, 1, ], ), ;, }, if, (, !, Precision, .]
[), ;, }, if, (, !, Precision, ., equals, (, scale, ,, 0, ), ), {, double, h, =, 0]
[[, m, -, 1, ], ), ;, }, if, (, !, Precision, ., equals, (, scale, ,, 0, ), )]
[[, i, ], [, m, -, 1, ], ), ;, }, if, (, !, Precision, ., equals, (, scale, ,]
[], [, m, -, 1, ], ), ;, }, if, (, !, Precision, ., equals, (, scale, ,, 0, )]
[], ), ;, }, if, (, !, Precision, ., equals, (, scale, ,, 0, ), ), {, double, h, =]
[-, 1, ], ), ;, }, if, (, !, Precision, ., equals, (, scale, ,, 0, ), ), {, double]
[], ), ;, }, if, (, !, Precision, ., equals, (, scale, ,, 0, ), ), {, double, h, =]
[), {, double, h, =, 0, ;, for, (, int, i, =, high, ;, i, >=, m, ;, i, --]
[), {, double, h, =, 0, ;, for, (, int, i, =, high, ;, i, >=, m, ;, i, --]
[., equals, (, scale, ,, 0, ), ), {, double, h, =, 0, ;, for, (, int, i, =, high]
[,, 0, ), ), {, double, h, =, 0, ;, for, (, int, i, =, high, ;, i, >=, m]
[), ), {, double, h, =, 0, ;, for, (, int, i, =, high, ;, i, >=, m, ;, i]
[;, for, (, int, i, =, high, ;, i, >=, m, ;, i, --, ), {, ort, [, i, ]]
[;, i, >=, m, ;, i, --, ), {, ort, [, i, ], =, householderVectors, [, i, ], [, m]
[;, i, --, ), {, ort, [, i, ], =, householderVectors, [, i, ], [, m, -, 1, ], /]
[>=, m, ;, i, --, ), {, ort, [, i, ], =, householderVectors, [, i, ], [, m, -, 1]
[;, i, --, ), {, ort, [, i, ], =, householderVectors, [, i, ], [, m, -, 1, ], /]
[), {, ort, [, i, ], =, householderVectors, [, i, ], [, m, -, 1, ], /, scale, ;, h]
[--, ), {, ort, [, i, ], =, householderVectors, [, i, ], [, m, -, 1, ], /, scale, ;]
[=, householderVectors, [, i, ], [, m, -, 1, ], /, scale, ;, h, +=, ort, [, i, ], *]
[[, i, ], =, householderVectors, [, i, ], [, m, -, 1, ], /, scale, ;, h, +=, ort, []
[], =, householderVectors, [, i, ], [, m, -, 1, ], /, scale, ;, h, +=, ort, [, i, ]]
[;, h, +=, ort, [, i, ], *, ort, [, i, ], ;, }, final, double, g, =, (, ort]
[/, scale, ;, h, +=, ort, [, i, ], *, ort, [, i, ], ;, }, final, double, g, =]
[[, m, -, 1, ], /, scale, ;, h, +=, ort, [, i, ], *, ort, [, i, ], ;]
[[, i, ], [, m, -, 1, ], /, scale, ;, h, +=, ort, [, i, ], *, ort, []
[], [, m, -, 1, ], /, scale, ;, h, +=, ort, [, i, ], *, ort, [, i, ]]
[], /, scale, ;, h, +=, ort, [, i, ], *, ort, [, i, ], ;, }, final, double, g]
[-, 1, ], /, scale, ;, h, +=, ort, [, i, ], *, ort, [, i, ], ;, }, final]
[], /, scale, ;, h, +=, ort, [, i, ], *, ort, [, i, ], ;, }, final, double, g]
[;, h, +=, ort, [, i, ], *, ort, [, i, ], ;, }, final, double, g, =, (, ort]
[+=, ort, [, i, ], *, ort, [, i, ], ;, }, final, double, g, =, (, ort, [, m]
[;, }, final, double, g, =, (, ort, [, m, ], >, 0, ), ?, -, FastMath, ., sqrt, (]
[*, ort, [, i, ], ;, }, final, double, g, =, (, ort, [, m, ], >, 0, ), ?]
[[, i, ], *, ort, [, i, ], ;, }, final, double, g, =, (, ort, [, m, ], >]
[], *, ort, [, i, ], ;, }, final, double, g, =, (, ort, [, m, ], >, 0, )]
[;, }, final, double, g, =, (, ort, [, m, ], >, 0, ), ?, -, FastMath, ., sqrt, (]
[[, i, ], ;, }, final, double, g, =, (, ort, [, m, ], >, 0, ), ?, -, FastMath]
[], ;, }, final, double, g, =, (, ort, [, m, ], >, 0, ), ?, -, FastMath, ., sqrt]
[;, h, =, h, -, ort, [, m, ], *, g, ;, ort, [, m, ], =, ort, [, m]
[?, -, FastMath, ., sqrt, (, h, ), :, FastMath, ., sqrt, (, h, ), ;, h, =, h, -]
[), ?, -, FastMath, ., sqrt, (, h, ), :, FastMath, ., sqrt, (, h, ), ;, h, =, h]
[>, 0, ), ?, -, FastMath, ., sqrt, (, h, ), :, FastMath, ., sqrt, (, h, ), ;, h]
[[, m, ], >, 0, ), ?, -, FastMath, ., sqrt, (, h, ), :, FastMath, ., sqrt, (, h]
[], >, 0, ), ?, -, FastMath, ., sqrt, (, h, ), :, FastMath, ., sqrt, (, h, ), ;]
[), ?, -, FastMath, ., sqrt, (, h, ), :, FastMath, ., sqrt, (, h, ), ;, h, =, h]
[:, FastMath, ., sqrt, (, h, ), ;, h, =, h, -, ort, [, m, ], *, g, ;, ort]
[:, FastMath, ., sqrt, (, h, ), ;, h, =, h, -, ort, [, m, ], *, g, ;, ort]
[., sqrt, (, h, ), :, FastMath, ., sqrt, (, h, ), ;, h, =, h, -, ort, [, m]
[), :, FastMath, ., sqrt, (, h, ), ;, h, =, h, -, ort, [, m, ], *, g, ;]
[;, h, =, h, -, ort, [, m, ], *, g, ;, ort, [, m, ], =, ort, [, m]
[., sqrt, (, h, ), ;, h, =, h, -, ort, [, m, ], *, g, ;, ort, [, m]
[), ;, h, =, h, -, ort, [, m, ], *, g, ;, ort, [, m, ], =, ort, []
[=, h, -, ort, [, m, ], *, g, ;, ort, [, m, ], =, ort, [, m, ], -]
[;, ort, [, m, ], =, ort, [, m, ], -, g, ;, for, (, int, j, =, m, ;]
[-, ort, [, m, ], *, g, ;, ort, [, m, ], =, ort, [, m, ], -, g, ;]
[;, ort, [, m, ], =, ort, [, m, ], -, g, ;, for, (, int, j, =, m, ;]
[*, g, ;, ort, [, m, ], =, ort, [, m, ], -, g, ;, for, (, int, j, =]
[[, m, ], *, g, ;, ort, [, m, ], =, ort, [, m, ], -, g, ;, for, (]
[], *, g, ;, ort, [, m, ], =, ort, [, m, ], -, g, ;, for, (, int, j]
[;, ort, [, m, ], =, ort, [, m, ], -, g, ;, for, (, int, j, =, m, ;]
[=, ort, [, m, ], -, g, ;, for, (, int, j, =, m, ;, j, <, n, ;, j]
[[, m, ], =, ort, [, m, ], -, g, ;, for, (, int, j, =, m, ;, j, <]
[], =, ort, [, m, ], -, g, ;, for, (, int, j, =, m, ;, j, <, n, ;]
[;, for, (, int, j, =, m, ;, j, <, n, ;, j, ++, ), {, double, f, =, 0]
[-, g, ;, for, (, int, j, =, m, ;, j, <, n, ;, j, ++, ), {, double, f]
[[, m, ], -, g, ;, for, (, int, j, =, m, ;, j, <, n, ;, j, ++, )]
[], -, g, ;, for, (, int, j, =, m, ;, j, <, n, ;, j, ++, ), {, double]
[;, for, (, int, j, =, m, ;, j, <, n, ;, j, ++, ), {, double, f, =, 0]
[;, j, <, n, ;, j, ++, ), {, double, f, =, 0, ;, for, (, int, i, =, high]
[;, j, ++, ), {, double, f, =, 0, ;, for, (, int, i, =, high, ;, i, >=, m]
[<, n, ;, j, ++, ), {, double, f, =, 0, ;, for, (, int, i, =, high, ;, i]
[;, j, ++, ), {, double, f, =, 0, ;, for, (, int, i, =, high, ;, i, >=, m]
[), {, double, f, =, 0, ;, for, (, int, i, =, high, ;, i, >=, m, ;, i, --]
[++, ), {, double, f, =, 0, ;, for, (, int, i, =, high, ;, i, >=, m, ;, i]
[;, for, (, int, i, =, high, ;, i, >=, m, ;, i, --, ), {, f, +=, ort, []
[;, i, >=, m, ;, i, --, ), {, f, +=, ort, [, i, ], *, householderVectors, [, i, ]]
[;, i, --, ), {, f, +=, ort, [, i, ], *, householderVectors, [, i, ], [, j, ], ;]
[>=, m, ;, i, --, ), {, f, +=, ort, [, i, ], *, householderVectors, [, i, ], [, j]
[;, i, --, ), {, f, +=, ort, [, i, ], *, householderVectors, [, i, ], [, j, ], ;]
[), {, f, +=, ort, [, i, ], *, householderVectors, [, i, ], [, j, ], ;, }, f, =]
[--, ), {, f, +=, ort, [, i, ], *, householderVectors, [, i, ], [, j, ], ;, }, f]
[+=, ort, [, i, ], *, householderVectors, [, i, ], [, j, ], ;, }, f, =, f, /, h]
[;, }, f, =, f, /, h, ;, for, (, int, i, =, m, ;, i, <=, high, ;, i]
[*, householderVectors, [, i, ], [, j, ], ;, }, f, =, f, /, h, ;, for, (, int, i]
[[, i, ], *, householderVectors, [, i, ], [, j, ], ;, }, f, =, f, /, h, ;, for]
[], *, householderVectors, [, i, ], [, j, ], ;, }, f, =, f, /, h, ;, for, (, int]
[;, }, f, =, f, /, h, ;, for, (, int, i, =, m, ;, i, <=, high, ;, i]
[[, j, ], ;, }, f, =, f, /, h, ;, for, (, int, i, =, m, ;, i, <=]
[[, i, ], [, j, ], ;, }, f, =, f, /, h, ;, for, (, int, i, =, m]
[], [, j, ], ;, }, f, =, f, /, h, ;, for, (, int, i, =, m, ;, i]
[], ;, }, f, =, f, /, h, ;, for, (, int, i, =, m, ;, i, <=, high, ;]
[=, f, /, h, ;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++, ), {]
[;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++, ), {, householderVectors, [, i, ]]
[/, h, ;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++, ), {, householderVectors, []
[;, for, (, int, i, =, m, ;, i, <=, high, ;, i, ++, ), {, householderVectors, [, i, ]]
[;, i, <=, high, ;, i, ++, ), {, householderVectors, [, i, ], [, j, ], -=, f, *, ort]
[;, i, ++, ), {, householderVectors, [, i, ], [, j, ], -=, f, *, ort, [, i, ], ;]
[<=, high, ;, i, ++, ), {, householderVectors, [, i, ], [, j, ], -=, f, *, ort, [, i]
[;, i, ++, ), {, householderVectors, [, i, ], [, j, ], -=, f, *, ort, [, i, ], ;]
[), {, householderVectors, [, i, ], [, j, ], -=, f, *, ort, [, i, ], ;, }, }, for]
[++, ), {, householderVectors, [, i, ], [, j, ], -=, f, *, ort, [, i, ], ;, }, }]
[-=, f, *, ort, [, i, ], ;, }, }, for, (, int, i, =, 0, ;, i, <=, high]
[[, j, ], -=, f, *, ort, [, i, ], ;, }, }, for, (, int, i, =, 0, ;]
[[, i, ], [, j, ], -=, f, *, ort, [, i, ], ;, }, }, for, (, int, i]
[], [, j, ], -=, f, *, ort, [, i, ], ;, }, }, for, (, int, i, =, 0]
[], -=, f, *, ort, [, i, ], ;, }, }, for, (, int, i, =, 0, ;, i, <=]
[;, }, }, for, (, int, i, =, 0, ;, i, <=, high, ;, i, ++, ), {, double, f]
[*, ort, [, i, ], ;, }, }, for, (, int, i, =, 0, ;, i, <=, high, ;, i]
[;, }, }, for, (, int, i, =, 0, ;, i, <=, high, ;, i, ++, ), {, double, f]
[[, i, ], ;, }, }, for, (, int, i, =, 0, ;, i, <=, high, ;, i, ++, )]
[], ;, }, }, for, (, int, i, =, 0, ;, i, <=, high, ;, i, ++, ), {, double]
[;, i, <=, high, ;, i, ++, ), {, double, f, =, 0, ;, for, (, int, j, =, high]
[;, i, ++, ), {, double, f, =, 0, ;, for, (, int, j, =, high, ;, j, >=, m]
[<=, high, ;, i, ++, ), {, double, f, =, 0, ;, for, (, int, j, =, high, ;, j]
[;, i, ++, ), {, double, f, =, 0, ;, for, (, int, j, =, high, ;, j, >=, m]
[), {, double, f, =, 0, ;, for, (, int, j, =, high, ;, j, >=, m, ;, j, --]
[++, ), {, double, f, =, 0, ;, for, (, int, j, =, high, ;, j, >=, m, ;, j]
[;, for, (, int, j, =, high, ;, j, >=, m, ;, j, --, ), {, f, +=, ort, []
[;, j, >=, m, ;, j, --, ), {, f, +=, ort, [, j, ], *, householderVectors, [, i, ]]
[;, j, --, ), {, f, +=, ort, [, j, ], *, householderVectors, [, i, ], [, j, ], ;]
[>=, m, ;, j, --, ), {, f, +=, ort, [, j, ], *, householderVectors, [, i, ], [, j]
[;, j, --, ), {, f, +=, ort, [, j, ], *, householderVectors, [, i, ], [, j, ], ;]
[), {, f, +=, ort, [, j, ], *, householderVectors, [, i, ], [, j, ], ;, }, f, =]
[--, ), {, f, +=, ort, [, j, ], *, householderVectors, [, i, ], [, j, ], ;, }, f]
[+=, ort, [, j, ], *, householderVectors, [, i, ], [, j, ], ;, }, f, =, f, /, h]
[;, }, f, =, f, /, h, ;, for, (, int, j, =, m, ;, j, <=, high, ;, j]
[*, householderVectors, [, i, ], [, j, ], ;, }, f, =, f, /, h, ;, for, (, int, j]
[[, j, ], *, householderVectors, [, i, ], [, j, ], ;, }, f, =, f, /, h, ;, for]
[], *, householderVectors, [, i, ], [, j, ], ;, }, f, =, f, /, h, ;, for, (, int]
[;, }, f, =, f, /, h, ;, for, (, int, j, =, m, ;, j, <=, high, ;, j]
[[, j, ], ;, }, f, =, f, /, h, ;, for, (, int, j, =, m, ;, j, <=]
[[, i, ], [, j, ], ;, }, f, =, f, /, h, ;, for, (, int, j, =, m]
[], [, j, ], ;, }, f, =, f, /, h, ;, for, (, int, j, =, m, ;, j]
[], ;, }, f, =, f, /, h, ;, for, (, int, j, =, m, ;, j, <=, high, ;]
[=, f, /, h, ;, for, (, int, j, =, m, ;, j, <=, high, ;, j, ++, ), {]
[;, for, (, int, j, =, m, ;, j, <=, high, ;, j, ++, ), {, householderVectors, [, i, ]]
[/, h, ;, for, (, int, j, =, m, ;, j, <=, high, ;, j, ++, ), {, householderVectors, []
[;, for, (, int, j, =, m, ;, j, <=, high, ;, j, ++, ), {, householderVectors, [, i, ]]
[;, j, <=, high, ;, j, ++, ), {, householderVectors, [, i, ], [, j, ], -=, f, *, ort]
[;, j, ++, ), {, householderVectors, [, i, ], [, j, ], -=, f, *, ort, [, j, ], ;]
[<=, high, ;, j, ++, ), {, householderVectors, [, i, ], [, j, ], -=, f, *, ort, [, j]
[;, j, ++, ), {, householderVectors, [, i, ], [, j, ], -=, f, *, ort, [, j, ], ;]
[), {, householderVectors, [, i, ], [, j, ], -=, f, *, ort, [, j, ], ;, }, }, ort]
[++, ), {, householderVectors, [, i, ], [, j, ], -=, f, *, ort, [, j, ], ;, }, }]
[-=, f, *, ort, [, j, ], ;, }, }, ort, [, m, ], =, scale, *, ort, [, m]
[[, j, ], -=, f, *, ort, [, j, ], ;, }, }, ort, [, m, ], =, scale, *]
[[, i, ], [, j, ], -=, f, *, ort, [, j, ], ;, }, }, ort, [, m, ]]
[], [, j, ], -=, f, *, ort, [, j, ], ;, }, }, ort, [, m, ], =, scale]
[], -=, f, *, ort, [, j, ], ;, }, }, ort, [, m, ], =, scale, *, ort, []
[;, }, }, ort, [, m, ], =, scale, *, ort, [, m, ], ;, householderVectors, [, m, ], []
[*, ort, [, j, ], ;, }, }, ort, [, m, ], =, scale, *, ort, [, m, ], ;]
[;, }, }, ort, [, m, ], =, scale, *, ort, [, m, ], ;, householderVectors, [, m, ], []
[[, j, ], ;, }, }, ort, [, m, ], =, scale, *, ort, [, m, ], ;, householderVectors, []
[], ;, }, }, ort, [, m, ], =, scale, *, ort, [, m, ], ;, householderVectors, [, m, ]]
[=, scale, *, ort, [, m, ], ;, householderVectors, [, m, ], [, m, -, 1, ], =, scale, *]
[[, m, ], =, scale, *, ort, [, m, ], ;, householderVectors, [, m, ], [, m, -, 1, ]]
[], =, scale, *, ort, [, m, ], ;, householderVectors, [, m, ], [, m, -, 1, ], =, scale]
[;, householderVectors, [, m, ], [, m, -, 1, ], =, scale, *, g, ;, }, }, }, }]
[*, ort, [, m, ], ;, householderVectors, [, m, ], [, m, -, 1, ], =, scale, *, g, ;]
[;, householderVectors, [, m, ], [, m, -, 1, ], =, scale, *, g, ;, }, }, }, }]
[[, m, ], ;, householderVectors, [, m, ], [, m, -, 1, ], =, scale, *, g, ;, }, }]
[], ;, householderVectors, [, m, ], [, m, -, 1, ], =, scale, *, g, ;, }, }, }, }]
[=, scale, *, g, ;, }, }, }, }]
[[, m, -, 1, ], =, scale, *, g, ;, }, }, }, }]
[[, m, ], [, m, -, 1, ], =, scale, *, g, ;, }, }, }, }]
[], [, m, -, 1, ], =, scale, *, g, ;, }, }, }, }]
[], =, scale, *, g, ;, }, }, }, }]
[-, 1, ], =, scale, *, g, ;, }, }, }, }]
[], =, scale, *, g, ;, }, }, }, }]
[;, }, }, }, }]
[*, g, ;, }, }, }, }]
[;, }, }, }, }]
