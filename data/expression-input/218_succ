[;, private, final, Map, <, Integer, ,, Pair, <, double, [, ], ,, double, [, ], >, >, pointsAndWeightsDouble, =]
[;, public, Pair, <, double, [, ], ,, double, [, ], >, getRule, (, int, numberOfPoints, ), throws, NotStrictlyPositiveException, ,]
[), {, throw, new, NotStrictlyPositiveException, (, LocalizedFormats, ., NUMBER_OF_POINTS, ,, numberOfPoints, ), ;, }, Pair, <, double, [, ], ,]
[<=, 0, ), {, throw, new, NotStrictlyPositiveException, (, LocalizedFormats, ., NUMBER_OF_POINTS, ,, numberOfPoints, ), ;, }, Pair, <, double, []
[), {, throw, new, NotStrictlyPositiveException, (, LocalizedFormats, ., NUMBER_OF_POINTS, ,, numberOfPoints, ), ;, }, Pair, <, double, [, ], ,]
[;, }, Pair, <, double, [, ], ,, double, [, ], >, cached, =, pointsAndWeightsDouble, ., get, (, numberOfPoints, )]
[,, numberOfPoints, ), ;, }, Pair, <, double, [, ], ,, double, [, ], >, cached, =, pointsAndWeightsDouble, ., get]
[., NUMBER_OF_POINTS, ,, numberOfPoints, ), ;, }, Pair, <, double, [, ], ,, double, [, ], >, cached, =, pointsAndWeightsDouble]
[), ;, }, Pair, <, double, [, ], ,, double, [, ], >, cached, =, pointsAndWeightsDouble, ., get, (, numberOfPoints]
[;, if, (, cached, ==, null, ), {, final, Pair, <, T, [, ], ,, T, [, ], >, rule]
[., get, (, numberOfPoints, ), ;, if, (, cached, ==, null, ), {, final, Pair, <, T, [, ], ,]
[), ;, if, (, cached, ==, null, ), {, final, Pair, <, T, [, ], ,, T, [, ], >]
[), {, final, Pair, <, T, [, ], ,, T, [, ], >, rule, =, getRuleInternal, (, numberOfPoints, ), ;]
[==, null, ), {, final, Pair, <, T, [, ], ,, T, [, ], >, rule, =, getRuleInternal, (, numberOfPoints]
[), {, final, Pair, <, T, [, ], ,, T, [, ], >, rule, =, getRuleInternal, (, numberOfPoints, ), ;]
[;, cached, =, convertToDouble, (, rule, ), ;, pointsAndWeightsDouble, ., put, (, numberOfPoints, ,, cached, ), ;, }, return, new]
[), ;, cached, =, convertToDouble, (, rule, ), ;, pointsAndWeightsDouble, ., put, (, numberOfPoints, ,, cached, ), ;, }, return]
[=, convertToDouble, (, rule, ), ;, pointsAndWeightsDouble, ., put, (, numberOfPoints, ,, cached, ), ;, }, return, new, Pair, <]
[;, pointsAndWeightsDouble, ., put, (, numberOfPoints, ,, cached, ), ;, }, return, new, Pair, <, double, [, ], ,, double]
[), ;, pointsAndWeightsDouble, ., put, (, numberOfPoints, ,, cached, ), ;, }, return, new, Pair, <, double, [, ], ,]
[;, }, return, new, Pair, <, double, [, ], ,, double, [, ], >, (, cached, ., getFirst, (, )]
[., put, (, numberOfPoints, ,, cached, ), ;, }, return, new, Pair, <, double, [, ], ,, double, [, ]]
[,, cached, ), ;, }, return, new, Pair, <, double, [, ], ,, double, [, ], >, (, cached, .]
[), ;, }, return, new, Pair, <, double, [, ], ,, double, [, ], >, (, cached, ., getFirst, (]
[;, }, protected, synchronized, Pair, <, T, [, ], ,, T, [, ], >, getRuleInternal, (, int, numberOfPoints, ), throws]
[,, cached, ., getSecond, (, ), ., clone, (, ), ), ;, }, protected, synchronized, Pair, <, T, [, ]]
[., clone, (, ), ,, cached, ., getSecond, (, ), ., clone, (, ), ), ;, }, protected, synchronized, Pair]
[., getFirst, (, ), ., clone, (, ), ,, cached, ., getSecond, (, ), ., clone, (, ), ), ;]
[), ;, }, protected, synchronized, Pair, <, T, [, ], ,, T, [, ], >, getRuleInternal, (, int, numberOfPoints, )]
[., clone, (, ), ), ;, }, protected, synchronized, Pair, <, T, [, ], ,, T, [, ], >, getRuleInternal]
[., getSecond, (, ), ., clone, (, ), ), ;, }, protected, synchronized, Pair, <, T, [, ], ,, T]
[;, if, (, rule, ==, null, ), {, addRule, (, computeRule, (, numberOfPoints, ), ), ;, return, getRuleInternal, (, numberOfPoints]
[., get, (, numberOfPoints, ), ;, if, (, rule, ==, null, ), {, addRule, (, computeRule, (, numberOfPoints, ), )]
[), ;, if, (, rule, ==, null, ), {, addRule, (, computeRule, (, numberOfPoints, ), ), ;, return, getRuleInternal, (]
[), {, addRule, (, computeRule, (, numberOfPoints, ), ), ;, return, getRuleInternal, (, numberOfPoints, ), ;, }, return, rule, ;]
[==, null, ), {, addRule, (, computeRule, (, numberOfPoints, ), ), ;, return, getRuleInternal, (, numberOfPoints, ), ;, }, return]
[), {, addRule, (, computeRule, (, numberOfPoints, ), ), ;, return, getRuleInternal, (, numberOfPoints, ), ;, }, return, rule, ;]
[;, return, getRuleInternal, (, numberOfPoints, ), ;, }, return, rule, ;, }, protected, void, addRule, (, Pair, <, T, []
[), ;, return, getRuleInternal, (, numberOfPoints, ), ;, }, return, rule, ;, }, protected, void, addRule, (, Pair, <, T]
[), ), ;, return, getRuleInternal, (, numberOfPoints, ), ;, }, return, rule, ;, }, protected, void, addRule, (, Pair, <]
[;, }, return, rule, ;, }, protected, void, addRule, (, Pair, <, T, [, ], ,, T, [, ], >]
[), ;, }, return, rule, ;, }, protected, void, addRule, (, Pair, <, T, [, ], ,, T, [, ]]
[;, }, protected, void, addRule, (, Pair, <, T, [, ], ,, T, [, ], >, rule, ), throws, DimensionMismatchException]
[), {, throw, new, DimensionMismatchException, (, rule, ., getFirst, (, ), ., length, ,, rule, ., getSecond, (, ), .]
[!=, rule, ., getSecond, (, ), ., length, ), {, throw, new, DimensionMismatchException, (, rule, ., getFirst, (, ), .]
[., length, !=, rule, ., getSecond, (, ), ., length, ), {, throw, new, DimensionMismatchException, (, rule, ., getFirst, (]
[., getFirst, (, ), ., length, !=, rule, ., getSecond, (, ), ., length, ), {, throw, new, DimensionMismatchException, (]
[), {, throw, new, DimensionMismatchException, (, rule, ., getFirst, (, ), ., length, ,, rule, ., getSecond, (, ), .]
[., length, ), {, throw, new, DimensionMismatchException, (, rule, ., getFirst, (, ), ., length, ,, rule, ., getSecond, (]
[., getSecond, (, ), ., length, ), {, throw, new, DimensionMismatchException, (, rule, ., getFirst, (, ), ., length, ,]
[;, }, pointsAndWeights, ., put, (, rule, ., getFirst, (, ), ., length, ,, rule, ), ;, }, protected, abstract]
[,, rule, ., getSecond, (, ), ., length, ), ;, }, pointsAndWeights, ., put, (, rule, ., getFirst, (, )]
[., length, ,, rule, ., getSecond, (, ), ., length, ), ;, }, pointsAndWeights, ., put, (, rule, ., getFirst]
[., getFirst, (, ), ., length, ,, rule, ., getSecond, (, ), ., length, ), ;, }, pointsAndWeights, ., put]
[), ;, }, pointsAndWeights, ., put, (, rule, ., getFirst, (, ), ., length, ,, rule, ), ;, }, protected]
[., length, ), ;, }, pointsAndWeights, ., put, (, rule, ., getFirst, (, ), ., length, ,, rule, ), ;]
[., getSecond, (, ), ., length, ), ;, }, pointsAndWeights, ., put, (, rule, ., getFirst, (, ), ., length]
[;, }, protected, abstract, Pair, <, T, [, ], ,, T, [, ], >, computeRule, (, int, numberOfPoints, ), throws]
[., put, (, rule, ., getFirst, (, ), ., length, ,, rule, ), ;, }, protected, abstract, Pair, <, T]
[,, rule, ), ;, }, protected, abstract, Pair, <, T, [, ], ,, T, [, ], >, computeRule, (, int]
[., length, ,, rule, ), ;, }, protected, abstract, Pair, <, T, [, ], ,, T, [, ], >, computeRule]
[., getFirst, (, ), ., length, ,, rule, ), ;, }, protected, abstract, Pair, <, T, [, ], ,, T]
[), ;, }, protected, abstract, Pair, <, T, [, ], ,, T, [, ], >, computeRule, (, int, numberOfPoints, )]
[;, final, T, [, ], wT, =, rule, ., getSecond, (, ), ;, final, int, len, =, pT, ., length]
[., getFirst, (, ), ;, final, T, [, ], wT, =, rule, ., getSecond, (, ), ;, final, int, len]
[;, final, int, len, =, pT, ., length, ;, final, double, [, ], pD, =, new, double, [, len, ]]
[., getSecond, (, ), ;, final, int, len, =, pT, ., length, ;, final, double, [, ], pD, =, new]
[;, final, double, [, ], pD, =, new, double, [, len, ], ;, final, double, [, ], wD, =, new]
[., length, ;, final, double, [, ], pD, =, new, double, [, len, ], ;, final, double, [, ], wD]
[;, final, double, [, ], wD, =, new, double, [, len, ], ;, for, (, int, i, =, 0, ;]
[], ;, final, double, [, ], wD, =, new, double, [, len, ], ;, for, (, int, i, =, 0]
[;, for, (, int, i, =, 0, ;, i, <, len, ;, i, ++, ), {, pD, [, i, ]]
[], ;, for, (, int, i, =, 0, ;, i, <, len, ;, i, ++, ), {, pD, [, i]
[;, i, <, len, ;, i, ++, ), {, pD, [, i, ], =, pT, [, i, ], ., doubleValue]
[;, i, ++, ), {, pD, [, i, ], =, pT, [, i, ], ., doubleValue, (, ), ;, wD]
[<, len, ;, i, ++, ), {, pD, [, i, ], =, pT, [, i, ], ., doubleValue, (, )]
[;, i, ++, ), {, pD, [, i, ], =, pT, [, i, ], ., doubleValue, (, ), ;, wD]
[), {, pD, [, i, ], =, pT, [, i, ], ., doubleValue, (, ), ;, wD, [, i, ]]
[++, ), {, pD, [, i, ], =, pT, [, i, ], ., doubleValue, (, ), ;, wD, [, i]
[=, pT, [, i, ], ., doubleValue, (, ), ;, wD, [, i, ], =, wT, [, i, ], .]
[[, i, ], =, pT, [, i, ], ., doubleValue, (, ), ;, wD, [, i, ], =, wT, []
[], =, pT, [, i, ], ., doubleValue, (, ), ;, wD, [, i, ], =, wT, [, i, ]]
[;, wD, [, i, ], =, wT, [, i, ], ., doubleValue, (, ), ;, }, return, new, Pair, <]
[., doubleValue, (, ), ;, wD, [, i, ], =, wT, [, i, ], ., doubleValue, (, ), ;, }]
[[, i, ], ., doubleValue, (, ), ;, wD, [, i, ], =, wT, [, i, ], ., doubleValue, (]
[], ., doubleValue, (, ), ;, wD, [, i, ], =, wT, [, i, ], ., doubleValue, (, ), ;]
[=, wT, [, i, ], ., doubleValue, (, ), ;, }, return, new, Pair, <, double, [, ], ,, double]
[[, i, ], =, wT, [, i, ], ., doubleValue, (, ), ;, }, return, new, Pair, <, double, []
[], =, wT, [, i, ], ., doubleValue, (, ), ;, }, return, new, Pair, <, double, [, ], ,]
[;, }, return, new, Pair, <, double, [, ], ,, double, [, ], >, (, pD, ,, wD, ), ;]
[., doubleValue, (, ), ;, }, return, new, Pair, <, double, [, ], ,, double, [, ], >, (, pD]
[[, i, ], ., doubleValue, (, ), ;, }, return, new, Pair, <, double, [, ], ,, double, [, ]]
[], ., doubleValue, (, ), ;, }, return, new, Pair, <, double, [, ], ,, double, [, ], >, (]
[;, }, }]
[,, wD, ), ;, }, }]
[), ;, }, }]
