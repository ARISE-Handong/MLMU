[;, public, class, DialBackground, extends, AbstractDialLayer, implements, DialLayer, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, static, final, long, serialVersionUID, =]
[public, class, DialBackground, extends, AbstractDialLayer, implements, DialLayer, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, static, final, long, serialVersionUID, =, -]
[=, -, 9019069533317612375L, ;, private, transient, Paint, paint, ;, private, GradientPaintTransformer, gradientPaintTransformer, ;, public, DialBackground, (, ), {, this, (]
[=, -, 9019069533317612375L, ;, private, transient, Paint, paint, ;, private, GradientPaintTransformer, gradientPaintTransformer, ;, public, DialBackground, (, ), {, this, (]
[(, ), {, this, (, Color, ., white, ), ;, }, public, DialBackground, (, Paint, paint, ), {, if, (]
[(, ), {, this, (, Color, ., white, ), ;, }, public, DialBackground, (, Paint, paint, ), {, if, (]
[{, this, (, Color, ., white, ), ;, }, public, DialBackground, (, Paint, paint, ), {, if, (, paint, ==]
[., white, ), ;, }, public, DialBackground, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[;, }, public, DialBackground, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, this, ., gradientPaintTransformer, =]
[=, paint, ;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;, }, public, Paint, getPaint, (, ), {, return]
[=, paint, ;, this, ., gradientPaintTransformer, =, new, StandardGradientPaintTransformer, (, ), ;, }, public, Paint, getPaint, (, ), {, return]
[getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (]
[getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (]
[), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==]
[., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[}, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[(, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }]
[{, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =]
[(, paint, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, GradientPaintTransformer, getGradientPaintTransformer, (, ), {, return]
[getGradientPaintTransformer, (, ), {, return, this, ., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, t, ), {, if, (]
[getGradientPaintTransformer, (, ), {, return, this, ., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, t, ), {, if, (]
[), {, return, this, ., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, t, ), {, if, (, t, ==]
[., gradientPaintTransformer, ;, }, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, t, ), {, if, (, t, ==, null, ), {, throw]
[}, public, void, setGradientPaintTransformer, (, GradientPaintTransformer, t, ), {, if, (, t, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, GradientPaintTransformer, t, ), {, if, (, t, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 't' argument.", ), ;, }]
[(, GradientPaintTransformer, t, ), {, if, (, t, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 't' argument.", ), ;, }]
[{, if, (, t, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 't' argument.", ), ;, }, this, ., gradientPaintTransformer, =]
[(, t, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 't' argument.", ), ;, }, this, ., gradientPaintTransformer, =, t, ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 't' argument.", ), ;, }, this, ., gradientPaintTransformer, =, t, ;, notifyListeners, (]
[{, throw, new, IllegalArgumentException, (, "Null 't' argument.", ), ;, }, this, ., gradientPaintTransformer, =, t, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, t, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, isClippedToWindow, (, ), {, return]
[public, void, draw, (, Graphics2D, g2, ,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Paint, p, =]
[public, void, draw, (, Graphics2D, g2, ,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Paint, p, =]
[,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Paint, p, =, this, ., paint, ;, if, (]
[,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Paint, p, =, this, ., paint, ;, if, (]
[frame, ,, Rectangle2D, view, ), {, Paint, p, =, this, ., paint, ;, if, (, p, instanceof, GradientPaint, ), {]
[Rectangle2D, view, ), {, Paint, p, =, this, ., paint, ;, if, (, p, instanceof, GradientPaint, ), {, p, =]
[Rectangle2D, view, ), {, Paint, p, =, this, ., paint, ;, if, (, p, instanceof, GradientPaint, ), {, p, =]
[Rectangle2D, view, ), {, Paint, p, =, this, ., paint, ;, if, (, p, instanceof, GradientPaint, ), {, p, =]
[=, this, ., paint, ;, if, (, p, instanceof, GradientPaint, ), {, p, =, this, ., gradientPaintTransformer, ., transform, (]
[paint, ;, if, (, p, instanceof, GradientPaint, ), {, p, =, this, ., gradientPaintTransformer, ., transform, (, (, GradientPaint, )]
[if, (, p, instanceof, GradientPaint, ), {, p, =, this, ., gradientPaintTransformer, ., transform, (, (, GradientPaint, ), p, ,]
[GradientPaint, ), {, p, =, this, ., gradientPaintTransformer, ., transform, (, (, GradientPaint, ), p, ,, view, ), ;, }]
[GradientPaint, ), {, p, =, this, ., gradientPaintTransformer, ., transform, (, (, GradientPaint, ), p, ,, view, ), ;, }]
[=, this, ., gradientPaintTransformer, ., transform, (, (, GradientPaint, ), p, ,, view, ), ;, }, g2, ., setPaint, (]
[gradientPaintTransformer, ., transform, (, (, GradientPaint, ), p, ,, view, ), ;, }, g2, ., setPaint, (, p, ), ;]
[gradientPaintTransformer, ., transform, (, (, GradientPaint, ), p, ,, view, ), ;, }, g2, ., setPaint, (, p, ), ;]
[(, GradientPaint, ), p, ,, view, ), ;, }, g2, ., setPaint, (, p, ), ;, g2, ., fill, (]
[), ;, g2, ., fill, (, view, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ;, g2, ., fill, (, view, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[g2, ., fill, (, view, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[view, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, DialBackground, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, DialBackground, ), ), {, return, false, ;, }, DialBackground, that, =]
[if, (, !, (, obj, instanceof, DialBackground, ), ), {, return, false, ;, }, DialBackground, that, =, (, DialBackground, )]
[obj, instanceof, DialBackground, ), ), {, return, false, ;, }, DialBackground, that, =, (, DialBackground, ), obj, ;, if, (]
[instanceof, DialBackground, ), ), {, return, false, ;, }, DialBackground, that, =, (, DialBackground, ), obj, ;, if, (, !]
[instanceof, DialBackground, ), ), {, return, false, ;, }, DialBackground, that, =, (, DialBackground, ), obj, ;, if, (, !]
[{, return, false, ;, }, DialBackground, that, =, (, DialBackground, ), obj, ;, if, (, !, PaintUtilities, ., equal, (]
[{, return, false, ;, }, DialBackground, that, =, (, DialBackground, ), obj, ;, if, (, !, PaintUtilities, ., equal, (]
[}, DialBackground, that, =, (, DialBackground, ), obj, ;, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[}, DialBackground, that, =, (, DialBackground, ), obj, ;, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,]
[obj, ;, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return]
[PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (]
[., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, !]
[., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, !]
[,, that, ., paint, ), ), {, return, false, ;, }, if, (, !, this, ., gradientPaintTransformer, ., equals, (]
[,, that, ., paint, ), ), {, return, false, ;, }, if, (, !, this, ., gradientPaintTransformer, ., equals, (]
[return, false, ;, }, if, (, !, this, ., gradientPaintTransformer, ., equals, (, that, ., gradientPaintTransformer, ), ), {, return]
[if, (, !, this, ., gradientPaintTransformer, ., equals, (, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, return]
[if, (, !, this, ., gradientPaintTransformer, ., equals, (, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, return]
[., gradientPaintTransformer, ., equals, (, that, ., gradientPaintTransformer, ), ), {, return, false, ;, }, return, super, ., equals, (]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[(, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +]
[int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[int, result, =, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;]
[=, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =]
[=, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =]
[=, 193, ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =]
[;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =, 37, *]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =, 37, *, result, +]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =, 37, *, result, +]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, result, =, 37, *, result, +]
[this, ., paint, ), ;, result, =, 37, *, result, +, this, ., gradientPaintTransformer, ., hashCode, (, ), ;, return]
[., gradientPaintTransformer, ., hashCode, (, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[., gradientPaintTransformer, ., hashCode, (, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[(, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[(, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (]
[ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,]
[this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =]
[), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (]
