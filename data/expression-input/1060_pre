[commons, ., math3, ., util, ., IterationManager, ;, public, class, ConjugateGradient, extends, PreconditionedIterativeLinearSolver, {, public, static, final, String, OPERATOR, =]
[public, class, ConjugateGradient, extends, PreconditionedIterativeLinearSolver, {, public, static, final, String, OPERATOR, =, "operator", ;, public, static, final, String, VECTOR, =]
[delta, ;, public, ConjugateGradient, (, final, int, maxIterations, ,, final, double, delta, ,, final, boolean, check, ), {, super, (]
[ConjugateGradient, (, final, int, maxIterations, ,, final, double, delta, ,, final, boolean, check, ), {, super, (, maxIterations, ), ;]
[ConjugateGradient, (, final, int, maxIterations, ,, final, double, delta, ,, final, boolean, check, ), {, super, (, maxIterations, ), ;]
[maxIterations, ,, final, double, delta, ,, final, boolean, check, ), {, super, (, maxIterations, ), ;, this, ., delta, =]
[final, double, delta, ,, final, boolean, check, ), {, super, (, maxIterations, ), ;, this, ., delta, =, delta, ;]
[final, double, delta, ,, final, boolean, check, ), {, super, (, maxIterations, ), ;, this, ., delta, =, delta, ;]
[final, boolean, check, ), {, super, (, maxIterations, ), ;, this, ., delta, =, delta, ;, this, ., check, =]
[public, ConjugateGradient, (, final, IterationManager, manager, ,, final, double, delta, ,, final, boolean, check, ), throws, NullArgumentException, {, super, (]
[final, IterationManager, manager, ,, final, double, delta, ,, final, boolean, check, ), throws, NullArgumentException, {, super, (, manager, ), ;]
[final, IterationManager, manager, ,, final, double, delta, ,, final, boolean, check, ), throws, NullArgumentException, {, super, (, manager, ), ;]
[final, double, delta, ,, final, boolean, check, ), throws, NullArgumentException, {, super, (, manager, ), ;, this, ., delta, =]
[delta, ,, final, boolean, check, ), throws, NullArgumentException, {, super, (, manager, ), ;, this, ., delta, =, delta, ;]
[delta, ,, final, boolean, check, ), throws, NullArgumentException, {, super, (, manager, ), ;, this, ., delta, =, delta, ;]
[check, ), throws, NullArgumentException, {, super, (, manager, ), ;, this, ., delta, =, delta, ;, this, ., check, =]
[., delta, =, delta, ;, this, ., check, =, check, ;, }, public, final, boolean, getCheck, (, ), {, return]
[RealVector, b, ,, final, RealVector, x0, ), throws, NullArgumentException, ,, NonPositiveDefiniteOperatorException, ,, NonSquareOperatorException, ,, DimensionMismatchException, ,, MaxCountExceededException, ,, NonPositiveDefiniteOperatorException, {]
[,, final, RealVector, x0, ), throws, NullArgumentException, ,, NonPositiveDefiniteOperatorException, ,, NonSquareOperatorException, ,, DimensionMismatchException, ,, MaxCountExceededException, ,, NonPositiveDefiniteOperatorException, {, checkParameters, (]
[RealVector, x0, ), throws, NullArgumentException, ,, NonPositiveDefiniteOperatorException, ,, NonSquareOperatorException, ,, DimensionMismatchException, ,, MaxCountExceededException, ,, NonPositiveDefiniteOperatorException, {, checkParameters, (, a, ,]
[), throws, NullArgumentException, ,, NonPositiveDefiniteOperatorException, ,, NonSquareOperatorException, ,, DimensionMismatchException, ,, MaxCountExceededException, ,, NonPositiveDefiniteOperatorException, {, checkParameters, (, a, ,, m, ,]
[NullArgumentException, ,, NonPositiveDefiniteOperatorException, ,, NonSquareOperatorException, ,, DimensionMismatchException, ,, MaxCountExceededException, ,, NonPositiveDefiniteOperatorException, {, checkParameters, (, a, ,, m, ,, b, ,]
[,, MaxCountExceededException, ,, NonPositiveDefiniteOperatorException, {, checkParameters, (, a, ,, m, ,, b, ,, x0, ), ;, final, IterationManager, manager, =]
[{, checkParameters, (, a, ,, m, ,, b, ,, x0, ), ;, final, IterationManager, manager, =, getIterationManager, (, ), ;]
[{, checkParameters, (, a, ,, m, ,, b, ,, x0, ), ;, final, IterationManager, manager, =, getIterationManager, (, ), ;]
[), ;, final, IterationManager, manager, =, getIterationManager, (, ), ;, manager, ., resetIterationCount, (, ), ;, final, double, rmax, =]
[), ;, final, IterationManager, manager, =, getIterationManager, (, ), ;, manager, ., resetIterationCount, (, ), ;, final, double, rmax, =]
[final, IterationManager, manager, =, getIterationManager, (, ), ;, manager, ., resetIterationCount, (, ), ;, final, double, rmax, =, delta, *]
[final, IterationManager, manager, =, getIterationManager, (, ), ;, manager, ., resetIterationCount, (, ), ;, final, double, rmax, =, delta, *]
[resetIterationCount, (, ), ;, final, double, rmax, =, delta, *, b, ., getNorm, (, ), ;, final, RealVector, bro, =]
[resetIterationCount, (, ), ;, final, double, rmax, =, delta, *, b, ., getNorm, (, ), ;, final, RealVector, bro, =]
[final, double, rmax, =, delta, *, b, ., getNorm, (, ), ;, final, RealVector, bro, =, RealVector, ., unmodifiableRealVector, (]
[=, delta, *, b, ., getNorm, (, ), ;, final, RealVector, bro, =, RealVector, ., unmodifiableRealVector, (, b, ), ;]
[=, delta, *, b, ., getNorm, (, ), ;, final, RealVector, bro, =, RealVector, ., unmodifiableRealVector, (, b, ), ;]
[RealVector, bro, =, RealVector, ., unmodifiableRealVector, (, b, ), ;, manager, ., incrementIterationCount, (, ), ;, final, RealVector, x, =]
[(, b, ), ;, manager, ., incrementIterationCount, (, ), ;, final, RealVector, x, =, x0, ;, final, RealVector, xro, =]
[(, b, ), ;, manager, ., incrementIterationCount, (, ), ;, final, RealVector, x, =, x0, ;, final, RealVector, xro, =]
[manager, ., incrementIterationCount, (, ), ;, final, RealVector, x, =, x0, ;, final, RealVector, xro, =, RealVector, ., unmodifiableRealVector, (]
[RealVector, x, =, x0, ;, final, RealVector, xro, =, RealVector, ., unmodifiableRealVector, (, x, ), ;, final, RealVector, p, =]
[RealVector, x, =, x0, ;, final, RealVector, xro, =, RealVector, ., unmodifiableRealVector, (, x, ), ;, final, RealVector, p, =]
[RealVector, ., unmodifiableRealVector, (, x, ), ;, final, RealVector, p, =, x, ., copy, (, ), ;, RealVector, q, =]
[RealVector, ., unmodifiableRealVector, (, x, ), ;, final, RealVector, p, =, x, ., copy, (, ), ;, RealVector, q, =]
[x, ), ;, final, RealVector, p, =, x, ., copy, (, ), ;, RealVector, q, =, a, ., operate, (]
[x, ., copy, (, ), ;, RealVector, q, =, a, ., operate, (, p, ), ;, final, RealVector, r, =]
[x, ., copy, (, ), ;, RealVector, q, =, a, ., operate, (, p, ), ;, final, RealVector, r, =]
[), ;, RealVector, q, =, a, ., operate, (, p, ), ;, final, RealVector, r, =, b, ., combine, (]
[RealVector, q, =, a, ., operate, (, p, ), ;, final, RealVector, r, =, b, ., combine, (, 1, ,]
[q, =, a, ., operate, (, p, ), ;, final, RealVector, r, =, b, ., combine, (, 1, ,, -]
[a, ., operate, (, p, ), ;, final, RealVector, r, =, b, ., combine, (, 1, ,, -, 1, ,]
[final, RealVector, r, =, b, ., combine, (, 1, ,, -, 1, ,, q, ), ;, final, RealVector, rro, =]
[final, RealVector, r, =, b, ., combine, (, 1, ,, -, 1, ,, q, ), ;, final, RealVector, rro, =]
[b, ., combine, (, 1, ,, -, 1, ,, q, ), ;, final, RealVector, rro, =, RealVector, ., unmodifiableRealVector, (]
[-, 1, ,, q, ), ;, final, RealVector, rro, =, RealVector, ., unmodifiableRealVector, (, r, ), ;, double, rnorm, =]
[-, 1, ,, q, ), ;, final, RealVector, rro, =, RealVector, ., unmodifiableRealVector, (, r, ), ;, double, rnorm, =]
[., unmodifiableRealVector, (, r, ), ;, double, rnorm, =, r, ., getNorm, (, ), ;, RealVector, z, ;, if, (]
[., unmodifiableRealVector, (, r, ), ;, double, rnorm, =, r, ., getNorm, (, ), ;, RealVector, z, ;, if, (]
[(, r, ), ;, double, rnorm, =, r, ., getNorm, (, ), ;, RealVector, z, ;, if, (, m, ==]
[;, double, rnorm, =, r, ., getNorm, (, ), ;, RealVector, z, ;, if, (, m, ==, null, ), {]
[rnorm, =, r, ., getNorm, (, ), ;, RealVector, z, ;, if, (, m, ==, null, ), {, z, =]
[(, ), ;, RealVector, z, ;, if, (, m, ==, null, ), {, z, =, r, ;, }, else, {]
[;, RealVector, z, ;, if, (, m, ==, null, ), {, z, =, r, ;, }, else, {, z, =]
[m, ==, null, ), {, z, =, r, ;, }, else, {, z, =, null, ;, }, IterativeLinearSolverEvent, evt, ;]
[null, ), {, z, =, r, ;, }, else, {, z, =, null, ;, }, IterativeLinearSolverEvent, evt, ;, evt, =]
[z, =, r, ;, }, else, {, z, =, null, ;, }, IterativeLinearSolverEvent, evt, ;, evt, =, new, DefaultIterativeLinearSolverEvent, (]
[r, ;, }, else, {, z, =, null, ;, }, IterativeLinearSolverEvent, evt, ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,]
[r, ;, }, else, {, z, =, null, ;, }, IterativeLinearSolverEvent, evt, ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,]
[=, null, ;, }, IterativeLinearSolverEvent, evt, ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,]
[;, }, IterativeLinearSolverEvent, evt, ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,]
[IterativeLinearSolverEvent, evt, ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,]
[;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,]
[new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;]
[new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;]
[,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireInitializationEvent, (]
[), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireInitializationEvent, (, evt, ), ;, if, (]
[), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireInitializationEvent, (, evt, ), ;, if, (]
[xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireInitializationEvent, (, evt, ), ;, if, (, rnorm, <=]
[,, rro, ,, rnorm, ), ;, manager, ., fireInitializationEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {]
[,, rro, ,, rnorm, ), ;, manager, ., fireInitializationEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {]
[), ;, manager, ., fireInitializationEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (]
[fireInitializationEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (, evt, ), ;, return]
[(, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, double, rhoPrev, =]
[), {, manager, ., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, double, rhoPrev, =, 0., ;, while, (]
[., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, double, rhoPrev, =, 0., ;, while, (, true, ), {]
[., fireTerminationEvent, (, evt, ), ;, return, x, ;, }, double, rhoPrev, =, 0., ;, while, (, true, ), {]
[return, x, ;, }, double, rhoPrev, =, 0., ;, while, (, true, ), {, manager, ., incrementIterationCount, (, ), ;]
[;, }, double, rhoPrev, =, 0., ;, while, (, true, ), {, manager, ., incrementIterationCount, (, ), ;, evt, =]
[rhoPrev, =, 0., ;, while, (, true, ), {, manager, ., incrementIterationCount, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (]
[0., ;, while, (, true, ), {, manager, ., incrementIterationCount, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,]
[0., ;, while, (, true, ), {, manager, ., incrementIterationCount, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,]
[{, manager, ., incrementIterationCount, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,]
[., incrementIterationCount, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,]
[(, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,]
[;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,]
[new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;]
[new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;]
[,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationStartedEvent, (]
[), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationStartedEvent, (, evt, ), ;, if, (]
[), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationStartedEvent, (, evt, ), ;, if, (]
[xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationStartedEvent, (, evt, ), ;, if, (, m, !=]
[,, rro, ,, rnorm, ), ;, manager, ., fireIterationStartedEvent, (, evt, ), ;, if, (, m, !=, null, ), {]
[,, rnorm, ), ;, manager, ., fireIterationStartedEvent, (, evt, ), ;, if, (, m, !=, null, ), {, z, =]
[,, rnorm, ), ;, manager, ., fireIterationStartedEvent, (, evt, ), ;, if, (, m, !=, null, ), {, z, =]
[manager, ., fireIterationStartedEvent, (, evt, ), ;, if, (, m, !=, null, ), {, z, =, m, ., operate, (]
[(, m, !=, null, ), {, z, =, m, ., operate, (, r, ), ;, }, final, double, rhoNext, =]
[(, m, !=, null, ), {, z, =, m, ., operate, (, r, ), ;, }, final, double, rhoNext, =]
[), {, z, =, m, ., operate, (, r, ), ;, }, final, double, rhoNext, =, r, ., dotProduct, (]
[., operate, (, r, ), ;, }, final, double, rhoNext, =, r, ., dotProduct, (, z, ), ;, if, (]
[., operate, (, r, ), ;, }, final, double, rhoNext, =, r, ., dotProduct, (, z, ), ;, if, (]
[(, r, ), ;, }, final, double, rhoNext, =, r, ., dotProduct, (, z, ), ;, if, (, check, &&]
[r, ), ;, }, final, double, rhoNext, =, r, ., dotProduct, (, z, ), ;, if, (, check, &&, (]
[r, ), ;, }, final, double, rhoNext, =, r, ., dotProduct, (, z, ), ;, if, (, check, &&, (]
[;, }, final, double, rhoNext, =, r, ., dotProduct, (, z, ), ;, if, (, check, &&, (, rhoNext, <=]
[dotProduct, (, z, ), ;, if, (, check, &&, (, rhoNext, <=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;]
[z, ), ;, if, (, check, &&, (, rhoNext, <=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =]
[<=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =]
[<=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =]
[NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;]
[NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;]
[=, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;, context, ., setValue, (]
[NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,]
[;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,, m, ), ;]
[;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,, m, ), ;]
[=, e, ., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,, m, ), ;, context, ., setValue, (]
[., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,, m, ), ;, context, ., setValue, (, VECTOR, ,]
[;, context, ., setValue, (, OPERATOR, ,, m, ), ;, context, ., setValue, (, VECTOR, ,, r, ), ;, throw]
[OPERATOR, ,, m, ), ;, context, ., setValue, (, VECTOR, ,, r, ), ;, throw, e, ;, }, if, (]
[OPERATOR, ,, m, ), ;, context, ., setValue, (, VECTOR, ,, r, ), ;, throw, e, ;, }, if, (]
[OPERATOR, ,, m, ), ;, context, ., setValue, (, VECTOR, ,, r, ), ;, throw, e, ;, }, if, (]
[., setValue, (, VECTOR, ,, r, ), ;, throw, e, ;, }, if, (, manager, ., getIterations, (, ), ==]
[VECTOR, ,, r, ), ;, throw, e, ;, }, if, (, manager, ., getIterations, (, ), ==, 2, ), {]
[VECTOR, ,, r, ), ;, throw, e, ;, }, if, (, manager, ., getIterations, (, ), ==, 2, ), {]
[;, throw, e, ;, }, if, (, manager, ., getIterations, (, ), ==, 2, ), {, p, ., setSubVector, (]
[e, ;, }, if, (, manager, ., getIterations, (, ), ==, 2, ), {, p, ., setSubVector, (, 0, ,]
[., getIterations, (, ), ==, 2, ), {, p, ., setSubVector, (, 0, ,, z, ), ;, }, else, {]
[., getIterations, (, ), ==, 2, ), {, p, ., setSubVector, (, 0, ,, z, ), ;, }, else, {]
[==, 2, ), {, p, ., setSubVector, (, 0, ,, z, ), ;, }, else, {, p, ., combineToSelf, (]
[==, 2, ), {, p, ., setSubVector, (, 0, ,, z, ), ;, }, else, {, p, ., combineToSelf, (]
[), {, p, ., setSubVector, (, 0, ,, z, ), ;, }, else, {, p, ., combineToSelf, (, rhoNext, /]
[p, ., setSubVector, (, 0, ,, z, ), ;, }, else, {, p, ., combineToSelf, (, rhoNext, /, rhoPrev, ,]
[setSubVector, (, 0, ,, z, ), ;, }, else, {, p, ., combineToSelf, (, rhoNext, /, rhoPrev, ,, 1., ,]
[z, ), ;, }, else, {, p, ., combineToSelf, (, rhoNext, /, rhoPrev, ,, 1., ,, z, ), ;, }]
[;, }, else, {, p, ., combineToSelf, (, rhoNext, /, rhoPrev, ,, 1., ,, z, ), ;, }, q, =]
[;, }, else, {, p, ., combineToSelf, (, rhoNext, /, rhoPrev, ,, 1., ,, z, ), ;, }, q, =]
[p, ., combineToSelf, (, rhoNext, /, rhoPrev, ,, 1., ,, z, ), ;, }, q, =, a, ., operate, (]
[,, 1., ,, z, ), ;, }, q, =, a, ., operate, (, p, ), ;, final, double, pq, =]
[,, 1., ,, z, ), ;, }, q, =, a, ., operate, (, p, ), ;, final, double, pq, =]
[), ;, }, q, =, a, ., operate, (, p, ), ;, final, double, pq, =, p, ., dotProduct, (]
[a, ., operate, (, p, ), ;, final, double, pq, =, p, ., dotProduct, (, q, ), ;, if, (]
[a, ., operate, (, p, ), ;, final, double, pq, =, p, ., dotProduct, (, q, ), ;, if, (]
[operate, (, p, ), ;, final, double, pq, =, p, ., dotProduct, (, q, ), ;, if, (, check, &&]
[(, p, ), ;, final, double, pq, =, p, ., dotProduct, (, q, ), ;, if, (, check, &&, (]
[(, p, ), ;, final, double, pq, =, p, ., dotProduct, (, q, ), ;, if, (, check, &&, (]
[), ;, final, double, pq, =, p, ., dotProduct, (, q, ), ;, if, (, check, &&, (, pq, <=]
[dotProduct, (, q, ), ;, if, (, check, &&, (, pq, <=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;]
[q, ), ;, if, (, check, &&, (, pq, <=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =]
[<=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =]
[<=, 0., ), ), {, final, NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =]
[NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;]
[NonPositiveDefiniteOperatorException, e, ;, e, =, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;]
[=, new, NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;, context, ., setValue, (]
[NonPositiveDefiniteOperatorException, (, ), ;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,]
[;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,, a, ), ;]
[;, final, ExceptionContext, context, =, e, ., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,, a, ), ;]
[=, e, ., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,, a, ), ;, context, ., setValue, (]
[., getContext, (, ), ;, context, ., setValue, (, OPERATOR, ,, a, ), ;, context, ., setValue, (, VECTOR, ,]
[;, context, ., setValue, (, OPERATOR, ,, a, ), ;, context, ., setValue, (, VECTOR, ,, p, ), ;, throw]
[a, ), ;, context, ., setValue, (, VECTOR, ,, p, ), ;, throw, e, ;, }, final, double, alpha, =]
[a, ), ;, context, ., setValue, (, VECTOR, ,, p, ), ;, throw, e, ;, }, final, double, alpha, =]
[;, context, ., setValue, (, VECTOR, ,, p, ), ;, throw, e, ;, }, final, double, alpha, =, rhoNext, /]
[., setValue, (, VECTOR, ,, p, ), ;, throw, e, ;, }, final, double, alpha, =, rhoNext, /, pq, ;]
[., setValue, (, VECTOR, ,, p, ), ;, throw, e, ;, }, final, double, alpha, =, rhoNext, /, pq, ;]
[,, p, ), ;, throw, e, ;, }, final, double, alpha, =, rhoNext, /, pq, ;, x, ., combineToSelf, (]
[), ;, throw, e, ;, }, final, double, alpha, =, rhoNext, /, pq, ;, x, ., combineToSelf, (, 1., ,]
[throw, e, ;, }, final, double, alpha, =, rhoNext, /, pq, ;, x, ., combineToSelf, (, 1., ,, alpha, ,]
[}, final, double, alpha, =, rhoNext, /, pq, ;, x, ., combineToSelf, (, 1., ,, alpha, ,, p, ), ;]
[}, final, double, alpha, =, rhoNext, /, pq, ;, x, ., combineToSelf, (, 1., ,, alpha, ,, p, ), ;]
[=, rhoNext, /, pq, ;, x, ., combineToSelf, (, 1., ,, alpha, ,, p, ), ;, r, ., combineToSelf, (]
[/, pq, ;, x, ., combineToSelf, (, 1., ,, alpha, ,, p, ), ;, r, ., combineToSelf, (, 1., ,]
[pq, ;, x, ., combineToSelf, (, 1., ,, alpha, ,, p, ), ;, r, ., combineToSelf, (, 1., ,, -]
[x, ., combineToSelf, (, 1., ,, alpha, ,, p, ), ;, r, ., combineToSelf, (, 1., ,, -, alpha, ,]
[(, 1., ,, alpha, ,, p, ), ;, r, ., combineToSelf, (, 1., ,, -, alpha, ,, q, ), ;]
[,, alpha, ,, p, ), ;, r, ., combineToSelf, (, 1., ,, -, alpha, ,, q, ), ;, rhoPrev, =]
[,, p, ), ;, r, ., combineToSelf, (, 1., ,, -, alpha, ,, q, ), ;, rhoPrev, =, rhoNext, ;]
[), ;, r, ., combineToSelf, (, 1., ,, -, alpha, ,, q, ), ;, rhoPrev, =, rhoNext, ;, rnorm, =]
[), ;, r, ., combineToSelf, (, 1., ,, -, alpha, ,, q, ), ;, rhoPrev, =, rhoNext, ;, rnorm, =]
[1., ,, -, alpha, ,, q, ), ;, rhoPrev, =, rhoNext, ;, rnorm, =, r, ., getNorm, (, ), ;]
[-, alpha, ,, q, ), ;, rhoPrev, =, rhoNext, ;, rnorm, =, r, ., getNorm, (, ), ;, evt, =]
[q, ), ;, rhoPrev, =, rhoNext, ;, rnorm, =, r, ., getNorm, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (]
[;, rhoPrev, =, rhoNext, ;, rnorm, =, r, ., getNorm, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,]
[;, rhoPrev, =, rhoNext, ;, rnorm, =, r, ., getNorm, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,]
[=, r, ., getNorm, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,]
[., getNorm, (, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,]
[(, ), ;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,]
[;, evt, =, new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,]
[new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;]
[new, DefaultIterativeLinearSolverEvent, (, this, ,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;]
[,, manager, ., getIterations, (, ), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationPerformedEvent, (]
[), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationPerformedEvent, (, evt, ), ;, if, (]
[), ,, xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationPerformedEvent, (, evt, ), ;, if, (]
[xro, ,, bro, ,, rro, ,, rnorm, ), ;, manager, ., fireIterationPerformedEvent, (, evt, ), ;, if, (, rnorm, <=]
[,, rro, ,, rnorm, ), ;, manager, ., fireIterationPerformedEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {]
[,, rro, ,, rnorm, ), ;, manager, ., fireIterationPerformedEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {]
[), ;, manager, ., fireIterationPerformedEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (]
[fireIterationPerformedEvent, (, evt, ), ;, if, (, rnorm, <=, rmax, ), {, manager, ., fireTerminationEvent, (, evt, ), ;, return]
