[., reflect, ., InvocationTargetException, ;, public, class, RunnerFactory, {, private, final, RunnerProvider, runnerProvider, ;, RunnerFactory, (, RunnerProvider, runnerProvider, ), {]
[., reflect, ., InvocationTargetException, ;, public, class, RunnerFactory, {, private, final, RunnerProvider, runnerProvider, ;, RunnerFactory, (, RunnerProvider, runnerProvider, ), {]
[;, public, class, RunnerFactory, {, private, final, RunnerProvider, runnerProvider, ;, RunnerFactory, (, RunnerProvider, runnerProvider, ), {, this, ., runnerProvider, =]
[RunnerFactory, (, RunnerProvider, runnerProvider, ), {, this, ., runnerProvider, =, runnerProvider, ;, }, public, RunnerFactory, (, ), {, this, (]
[), ;, }, public, RunnerImpl, create, (, Class, <, ?, >, klass, ), throws, InvocationTargetException, {, try, {, if, (]
[), ;, }, public, RunnerImpl, create, (, Class, <, ?, >, klass, ), throws, InvocationTargetException, {, try, {, if, (]
[<, ?, >, klass, ), throws, InvocationTargetException, {, try, {, if, (, runnerProvider, ., isJUnit45OrHigherAvailable, (, ), ), {, return]
[<, ?, >, klass, ), throws, InvocationTargetException, {, try, {, if, (, runnerProvider, ., isJUnit45OrHigherAvailable, (, ), ), {, return]
[), throws, InvocationTargetException, {, try, {, if, (, runnerProvider, ., isJUnit45OrHigherAvailable, (, ), ), {, return, runnerProvider, ., newInstance, (]
[InvocationTargetException, {, try, {, if, (, runnerProvider, ., isJUnit45OrHigherAvailable, (, ), ), {, return, runnerProvider, ., newInstance, (, "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl", ,]
[., isJUnit45OrHigherAvailable, (, ), ), {, return, runnerProvider, ., newInstance, (, "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl", ,, klass, ), ;, }, else, {, return]
[., isJUnit45OrHigherAvailable, (, ), ), {, return, runnerProvider, ., newInstance, (, "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl", ,, klass, ), ;, }, else, {, return]
[), {, return, runnerProvider, ., newInstance, (, "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl", ,, klass, ), ;, }, else, {, return, runnerProvider, ., newInstance, (]
[return, runnerProvider, ., newInstance, (, "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl", ,, klass, ), ;, }, else, {, return, runnerProvider, ., newInstance, (, "org.mockito.internal.runners.JUnit44RunnerImpl", ,]
[return, runnerProvider, ., newInstance, (, "org.mockito.internal.runners.JUnit44RunnerImpl", ,, klass, ), ;, }, }, catch, (, InvocationTargetException, e, ), {, if, (]
[runnerProvider, ., newInstance, (, "org.mockito.internal.runners.JUnit44RunnerImpl", ,, klass, ), ;, }, }, catch, (, InvocationTargetException, e, ), {, if, (, !]
[runnerProvider, ., newInstance, (, "org.mockito.internal.runners.JUnit44RunnerImpl", ,, klass, ), ;, }, }, catch, (, InvocationTargetException, e, ), {, if, (, !]
[), ;, }, }, catch, (, InvocationTargetException, e, ), {, if, (, !, new, TestMethodsFinder, (, ), ., hasTestMethods, (]
[(, InvocationTargetException, e, ), {, if, (, !, new, TestMethodsFinder, (, ), ., hasTestMethods, (, klass, ), ), {, throw]
[), {, if, (, !, new, TestMethodsFinder, (, ), ., hasTestMethods, (, klass, ), ), {, throw, new, MockitoException, (]
[), {, if, (, !, new, TestMethodsFinder, (, ), ., hasTestMethods, (, klass, ), ), {, throw, new, MockitoException, (]
[), {, if, (, !, new, TestMethodsFinder, (, ), ., hasTestMethods, (, klass, ), ), {, throw, new, MockitoException, (]
[), {, if, (, !, new, TestMethodsFinder, (, ), ., hasTestMethods, (, klass, ), ), {, throw, new, MockitoException, (]
[), {, if, (, !, new, TestMethodsFinder, (, ), ., hasTestMethods, (, klass, ), ), {, throw, new, MockitoException, (]
[), {, if, (, !, new, TestMethodsFinder, (, ), ., hasTestMethods, (, klass, ), ), {, throw, new, MockitoException, (]
[if, (, !, new, TestMethodsFinder, (, ), ., hasTestMethods, (, klass, ), ), {, throw, new, MockitoException, (, "\n", +]
[!, new, TestMethodsFinder, (, ), ., hasTestMethods, (, klass, ), ), {, throw, new, MockitoException, (, "\n", +, "\n", +]
[TestMethodsFinder, (, ), ., hasTestMethods, (, klass, ), ), {, throw, new, MockitoException, (, "\n", +, "\n", +, "No tests found in ", +]
[TestMethodsFinder, (, ), ., hasTestMethods, (, klass, ), ), {, throw, new, MockitoException, (, "\n", +, "\n", +, "No tests found in ", +]
[klass, ), ), {, throw, new, MockitoException, (, "\n", +, "\n", +, "No tests found in ", +, klass, ., getSimpleName, (, ), +]
[), {, throw, new, MockitoException, (, "\n", +, "\n", +, "No tests found in ", +, klass, ., getSimpleName, (, ), +, "\n", +]
[throw, new, MockitoException, (, "\n", +, "\n", +, "No tests found in ", +, klass, ., getSimpleName, (, ), +, "\n", +, "Haven't you forgot @Test annotation?\n", ,]
[+, "\n", +, "No tests found in ", +, klass, ., getSimpleName, (, ), +, "\n", +, "Haven't you forgot @Test annotation?\n", ,, e, ), ;, }, throw]
[+, "\n", +, "Haven't you forgot @Test annotation?\n", ,, e, ), ;, }, throw, e, ;, }, catch, (, Throwable, t, ), {, throw]
["Haven't you forgot @Test annotation?\n", ,, e, ), ;, }, throw, e, ;, }, catch, (, Throwable, t, ), {, throw, new, MockitoException, (]
["Haven't you forgot @Test annotation?\n", ,, e, ), ;, }, throw, e, ;, }, catch, (, Throwable, t, ), {, throw, new, MockitoException, (]
["Haven't you forgot @Test annotation?\n", ,, e, ), ;, }, throw, e, ;, }, catch, (, Throwable, t, ), {, throw, new, MockitoException, (]
["Haven't you forgot @Test annotation?\n", ,, e, ), ;, }, throw, e, ;, }, catch, (, Throwable, t, ), {, throw, new, MockitoException, (]
["Haven't you forgot @Test annotation?\n", ,, e, ), ;, }, throw, e, ;, }, catch, (, Throwable, t, ), {, throw, new, MockitoException, (]
["Haven't you forgot @Test annotation?\n", ,, e, ), ;, }, throw, e, ;, }, catch, (, Throwable, t, ), {, throw, new, MockitoException, (]
[e, ), ;, }, throw, e, ;, }, catch, (, Throwable, t, ), {, throw, new, MockitoException, (, "\n", +]
[;, }, throw, e, ;, }, catch, (, Throwable, t, ), {, throw, new, MockitoException, (, "\n", +, "\n", +]
[throw, e, ;, }, catch, (, Throwable, t, ), {, throw, new, MockitoException, (, "\n", +, "\n", +, "MockitoRunner can only be used with JUnit 4.4 or higher.\n", +]
[;, }, catch, (, Throwable, t, ), {, throw, new, MockitoException, (, "\n", +, "\n", +, "MockitoRunner can only be used with JUnit 4.4 or higher.\n", +, "You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\n", +]
[catch, (, Throwable, t, ), {, throw, new, MockitoException, (, "\n", +, "\n", +, "MockitoRunner can only be used with JUnit 4.4 or higher.\n", +, "You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\n", +, "Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\n", +]
[Throwable, t, ), {, throw, new, MockitoException, (, "\n", +, "\n", +, "MockitoRunner can only be used with JUnit 4.4 or higher.\n", +, "You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\n", +, "Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\n", +, "If you get this error despite using JUnit 4.4 or higher then please report this error to the mockito mailing list.\n", ,]
