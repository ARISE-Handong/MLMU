[commons, ., math3, ., random, ., UnitSphereRandomVectorGenerator, ;, public, class, MicrosphereInterpolator, implements, MultivariateInterpolator, {, public, static, final, int, DEFAULT_MICROSPHERE_ELEMENTS, =]
[public, class, MicrosphereInterpolator, implements, MultivariateInterpolator, {, public, static, final, int, DEFAULT_MICROSPHERE_ELEMENTS, =, 2000, ;, public, static, final, int, DEFAULT_BRIGHTNESS_EXPONENT, =]
[=, 2, ;, private, final, int, microsphereElements, ;, private, final, int, brightnessExponent, ;, public, MicrosphereInterpolator, (, ), {, this, (]
[;, private, final, int, microsphereElements, ;, private, final, int, brightnessExponent, ;, public, MicrosphereInterpolator, (, ), {, this, (, DEFAULT_MICROSPHERE_ELEMENTS, ,]
[;, }, public, MicrosphereInterpolator, (, final, int, elements, ,, final, int, exponent, ), throws, NotPositiveException, ,, NotStrictlyPositiveException, {, if, (]
[;, }, public, MicrosphereInterpolator, (, final, int, elements, ,, final, int, exponent, ), throws, NotPositiveException, ,, NotStrictlyPositiveException, {, if, (]
[public, MicrosphereInterpolator, (, final, int, elements, ,, final, int, exponent, ), throws, NotPositiveException, ,, NotStrictlyPositiveException, {, if, (, exponent, <]
[int, elements, ,, final, int, exponent, ), throws, NotPositiveException, ,, NotStrictlyPositiveException, {, if, (, exponent, <, 0, ), {, throw]
[final, int, exponent, ), throws, NotPositiveException, ,, NotStrictlyPositiveException, {, if, (, exponent, <, 0, ), {, throw, new, NotPositiveException, (]
[,, NotStrictlyPositiveException, {, if, (, exponent, <, 0, ), {, throw, new, NotPositiveException, (, exponent, ), ;, }, if, (]
[,, NotStrictlyPositiveException, {, if, (, exponent, <, 0, ), {, throw, new, NotPositiveException, (, exponent, ), ;, }, if, (]
[{, if, (, exponent, <, 0, ), {, throw, new, NotPositiveException, (, exponent, ), ;, }, if, (, elements, <=]
[<, 0, ), {, throw, new, NotPositiveException, (, exponent, ), ;, }, if, (, elements, <=, 0, ), {, throw]
[{, throw, new, NotPositiveException, (, exponent, ), ;, }, if, (, elements, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (]
[(, exponent, ), ;, }, if, (, elements, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, elements, ), ;, }]
[), ;, }, if, (, elements, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, elements, ), ;, }, microsphereElements, =]
[}, if, (, elements, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, elements, ), ;, }, microsphereElements, =, elements, ;]
[(, elements, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, elements, ), ;, }, microsphereElements, =, elements, ;, brightnessExponent, =]
[], xval, ,, final, double, [, ], yval, ), throws, DimensionMismatchException, ,, NoDataException, ,, NullArgumentException, {, final, UnitSphereRandomVectorGenerator, rand, =]
[final, double, [, ], yval, ), throws, DimensionMismatchException, ,, NoDataException, ,, NullArgumentException, {, final, UnitSphereRandomVectorGenerator, rand, =, new, UnitSphereRandomVectorGenerator, (]
[final, double, [, ], yval, ), throws, DimensionMismatchException, ,, NoDataException, ,, NullArgumentException, {, final, UnitSphereRandomVectorGenerator, rand, =, new, UnitSphereRandomVectorGenerator, (]
[final, double, [, ], yval, ), throws, DimensionMismatchException, ,, NoDataException, ,, NullArgumentException, {, final, UnitSphereRandomVectorGenerator, rand, =, new, UnitSphereRandomVectorGenerator, (]
[[, ], yval, ), throws, DimensionMismatchException, ,, NoDataException, ,, NullArgumentException, {, final, UnitSphereRandomVectorGenerator, rand, =, new, UnitSphereRandomVectorGenerator, (, xval, []
[NoDataException, ,, NullArgumentException, {, final, UnitSphereRandomVectorGenerator, rand, =, new, UnitSphereRandomVectorGenerator, (, xval, [, 0, ], ., length, ), ;, return]
[{, final, UnitSphereRandomVectorGenerator, rand, =, new, UnitSphereRandomVectorGenerator, (, xval, [, 0, ], ., length, ), ;, return, new, MicrosphereInterpolatingFunction, (]
[UnitSphereRandomVectorGenerator, rand, =, new, UnitSphereRandomVectorGenerator, (, xval, [, 0, ], ., length, ), ;, return, new, MicrosphereInterpolatingFunction, (, xval, ,]
[=, new, UnitSphereRandomVectorGenerator, (, xval, [, 0, ], ., length, ), ;, return, new, MicrosphereInterpolatingFunction, (, xval, ,, yval, ,]
[UnitSphereRandomVectorGenerator, (, xval, [, 0, ], ., length, ), ;, return, new, MicrosphereInterpolatingFunction, (, xval, ,, yval, ,, brightnessExponent, ,]
[xval, [, 0, ], ., length, ), ;, return, new, MicrosphereInterpolatingFunction, (, xval, ,, yval, ,, brightnessExponent, ,, microsphereElements, ,]
