[;, int, cols, =, dataset, ., getXSampleCount, (, ), ;, for, (, int, c, =, 0, ;, c, <, cols]
[), ;, int, cols, =, dataset, ., getXSampleCount, (, ), ;, for, (, int, c, =, 0, ;, c, <]
[;, for, (, int, c, =, 0, ;, c, <, cols, ;, c, ++, ), {, series, ., add, (]
[., getXSampleCount, (, ), ;, for, (, int, c, =, 0, ;, c, <, cols, ;, c, ++, ), {]
[;, c, <, cols, ;, c, ++, ), {, series, ., add, (, dataset, ., getXValue, (, c, ), ,]
[;, c, ++, ), {, series, ., add, (, dataset, ., getXValue, (, c, ), ,, dataset, ., getZValue, (]
[<, cols, ;, c, ++, ), {, series, ., add, (, dataset, ., getXValue, (, c, ), ,, dataset, .]
[;, c, ++, ), {, series, ., add, (, dataset, ., getXValue, (, c, ), ,, dataset, ., getZValue, (]
[), {, series, ., add, (, dataset, ., getXValue, (, c, ), ,, dataset, ., getZValue, (, c, ,, row]
[++, ), {, series, ., add, (, dataset, ., getXValue, (, c, ), ,, dataset, ., getZValue, (, c, ,]
[;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, ), ;, return, result, ;, }, public, static, XYDataset, extractColumnFromHeatMapDataset, (]
[., add, (, dataset, ., getXValue, (, c, ), ,, dataset, ., getZValue, (, c, ,, row, ), ), ;]
[,, dataset, ., getZValue, (, c, ,, row, ), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, )]
[., getXValue, (, c, ), ,, dataset, ., getZValue, (, c, ,, row, ), ), ;, }, XYSeriesCollection, result, =]
[), ,, dataset, ., getZValue, (, c, ,, row, ), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series]
[), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, ), ;, return, result, ;, }, public, static, XYDataset, extractColumnFromHeatMapDataset]
[., getZValue, (, c, ,, row, ), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, ), ;, return]
[,, row, ), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, ), ;, return, result, ;, }, public]
[), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, ), ;, return, result, ;, }, public, static, XYDataset]
[;, return, result, ;, }, public, static, XYDataset, extractColumnFromHeatMapDataset, (, HeatMapDataset, dataset, ,, int, column, ,, Comparable, seriesName, ), {]
[), ;, return, result, ;, }, public, static, XYDataset, extractColumnFromHeatMapDataset, (, HeatMapDataset, dataset, ,, int, column, ,, Comparable, seriesName, )]
[;, }, public, static, XYDataset, extractColumnFromHeatMapDataset, (, HeatMapDataset, dataset, ,, int, column, ,, Comparable, seriesName, ), {, XYSeries, series, =]
[;, int, rows, =, dataset, ., getYSampleCount, (, ), ;, for, (, int, r, =, 0, ;, r, <, rows]
[), ;, int, rows, =, dataset, ., getYSampleCount, (, ), ;, for, (, int, r, =, 0, ;, r, <]
[;, for, (, int, r, =, 0, ;, r, <, rows, ;, r, ++, ), {, series, ., add, (]
[., getYSampleCount, (, ), ;, for, (, int, r, =, 0, ;, r, <, rows, ;, r, ++, ), {]
[;, r, <, rows, ;, r, ++, ), {, series, ., add, (, dataset, ., getYValue, (, r, ), ,]
[;, r, ++, ), {, series, ., add, (, dataset, ., getYValue, (, r, ), ,, dataset, ., getZValue, (]
[<, rows, ;, r, ++, ), {, series, ., add, (, dataset, ., getYValue, (, r, ), ,, dataset, .]
[;, r, ++, ), {, series, ., add, (, dataset, ., getYValue, (, r, ), ,, dataset, ., getZValue, (]
[), {, series, ., add, (, dataset, ., getYValue, (, r, ), ,, dataset, ., getZValue, (, column, ,, r]
[++, ), {, series, ., add, (, dataset, ., getYValue, (, r, ), ,, dataset, ., getZValue, (, column, ,]
[;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, ), ;, return, result, ;, }, public, static, BufferedImage, createHeatMapImage, (]
[., add, (, dataset, ., getYValue, (, r, ), ,, dataset, ., getZValue, (, column, ,, r, ), ), ;]
[,, dataset, ., getZValue, (, column, ,, r, ), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, )]
[., getYValue, (, r, ), ,, dataset, ., getZValue, (, column, ,, r, ), ), ;, }, XYSeriesCollection, result, =]
[), ,, dataset, ., getZValue, (, column, ,, r, ), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series]
[), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, ), ;, return, result, ;, }, public, static, BufferedImage, createHeatMapImage]
[., getZValue, (, column, ,, r, ), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, ), ;, return]
[,, r, ), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, ), ;, return, result, ;, }, public]
[), ), ;, }, XYSeriesCollection, result, =, new, XYSeriesCollection, (, series, ), ;, return, result, ;, }, public, static, BufferedImage]
[;, return, result, ;, }, public, static, BufferedImage, createHeatMapImage, (, HeatMapDataset, dataset, ,, PaintScale, paintScale, ), {, if, (, dataset]
[), ;, return, result, ;, }, public, static, BufferedImage, createHeatMapImage, (, HeatMapDataset, dataset, ,, PaintScale, paintScale, ), {, if, (]
[;, }, public, static, BufferedImage, createHeatMapImage, (, HeatMapDataset, dataset, ,, PaintScale, paintScale, ), {, if, (, dataset, ==, null, )]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, if, (, paintScale, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, if, (, paintScale, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, if, (, paintScale, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, paintScale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paintScale' argument.", ), ;, }, int, xCount, =]
[), ;, }, if, (, paintScale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paintScale' argument.", ), ;, }, int, xCount]
[), {, throw, new, IllegalArgumentException, (, "Null 'paintScale' argument.", ), ;, }, int, xCount, =, dataset, ., getXSampleCount, (, ), ;, int]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paintScale' argument.", ), ;, }, int, xCount, =, dataset, ., getXSampleCount, (, )]
[), {, throw, new, IllegalArgumentException, (, "Null 'paintScale' argument.", ), ;, }, int, xCount, =, dataset, ., getXSampleCount, (, ), ;, int]
[;, }, int, xCount, =, dataset, ., getXSampleCount, (, ), ;, int, yCount, =, dataset, ., getYSampleCount, (, ), ;]
[), ;, }, int, xCount, =, dataset, ., getXSampleCount, (, ), ;, int, yCount, =, dataset, ., getYSampleCount, (, )]
[;, int, yCount, =, dataset, ., getYSampleCount, (, ), ;, BufferedImage, image, =, new, BufferedImage, (, xCount, ,, yCount, ,]
[., getXSampleCount, (, ), ;, int, yCount, =, dataset, ., getYSampleCount, (, ), ;, BufferedImage, image, =, new, BufferedImage, (]
[;, BufferedImage, image, =, new, BufferedImage, (, xCount, ,, yCount, ,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, image]
[., getYSampleCount, (, ), ;, BufferedImage, image, =, new, BufferedImage, (, xCount, ,, yCount, ,, BufferedImage, ., TYPE_INT_ARGB, ), ;]
[;, Graphics2D, g2, =, image, ., createGraphics, (, ), ;, for, (, int, xIndex, =, 0, ;, xIndex, <, xCount]
[,, yCount, ,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, image, ., createGraphics, (, ), ;, for, (, int]
[,, BufferedImage, ., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, image, ., createGraphics, (, ), ;, for, (, int, xIndex, =]
[), ;, Graphics2D, g2, =, image, ., createGraphics, (, ), ;, for, (, int, xIndex, =, 0, ;, xIndex, <]
[., TYPE_INT_ARGB, ), ;, Graphics2D, g2, =, image, ., createGraphics, (, ), ;, for, (, int, xIndex, =, 0, ;]
[;, for, (, int, xIndex, =, 0, ;, xIndex, <, xCount, ;, xIndex, ++, ), {, for, (, int, yIndex]
[., createGraphics, (, ), ;, for, (, int, xIndex, =, 0, ;, xIndex, <, xCount, ;, xIndex, ++, ), {]
[;, xIndex, <, xCount, ;, xIndex, ++, ), {, for, (, int, yIndex, =, 0, ;, yIndex, <, yCount, ;]
[;, xIndex, ++, ), {, for, (, int, yIndex, =, 0, ;, yIndex, <, yCount, ;, yIndex, ++, ), {]
[<, xCount, ;, xIndex, ++, ), {, for, (, int, yIndex, =, 0, ;, yIndex, <, yCount, ;, yIndex, ++]
[;, xIndex, ++, ), {, for, (, int, yIndex, =, 0, ;, yIndex, <, yCount, ;, yIndex, ++, ), {]
[), {, for, (, int, yIndex, =, 0, ;, yIndex, <, yCount, ;, yIndex, ++, ), {, double, z, =]
[++, ), {, for, (, int, yIndex, =, 0, ;, yIndex, <, yCount, ;, yIndex, ++, ), {, double, z]
[;, yIndex, <, yCount, ;, yIndex, ++, ), {, double, z, =, dataset, ., getZValue, (, xIndex, ,, yIndex, )]
[;, yIndex, ++, ), {, double, z, =, dataset, ., getZValue, (, xIndex, ,, yIndex, ), ;, Paint, p, =]
[<, yCount, ;, yIndex, ++, ), {, double, z, =, dataset, ., getZValue, (, xIndex, ,, yIndex, ), ;, Paint]
[;, yIndex, ++, ), {, double, z, =, dataset, ., getZValue, (, xIndex, ,, yIndex, ), ;, Paint, p, =]
[), {, double, z, =, dataset, ., getZValue, (, xIndex, ,, yIndex, ), ;, Paint, p, =, paintScale, ., getPaint]
[++, ), {, double, z, =, dataset, ., getZValue, (, xIndex, ,, yIndex, ), ;, Paint, p, =, paintScale, .]
[;, Paint, p, =, paintScale, ., getPaint, (, z, ), ;, g2, ., setPaint, (, p, ), ;, g2, .]
[., getZValue, (, xIndex, ,, yIndex, ), ;, Paint, p, =, paintScale, ., getPaint, (, z, ), ;, g2, .]
[,, yIndex, ), ;, Paint, p, =, paintScale, ., getPaint, (, z, ), ;, g2, ., setPaint, (, p, )]
[), ;, Paint, p, =, paintScale, ., getPaint, (, z, ), ;, g2, ., setPaint, (, p, ), ;, g2]
[;, g2, ., setPaint, (, p, ), ;, g2, ., fillRect, (, xIndex, ,, yCount, -, yIndex, -, 1, ,]
[., getPaint, (, z, ), ;, g2, ., setPaint, (, p, ), ;, g2, ., fillRect, (, xIndex, ,, yCount]
[), ;, g2, ., setPaint, (, p, ), ;, g2, ., fillRect, (, xIndex, ,, yCount, -, yIndex, -, 1]
[;, g2, ., fillRect, (, xIndex, ,, yCount, -, yIndex, -, 1, ,, 1, ,, 1, ), ;, }, }]
[., setPaint, (, p, ), ;, g2, ., fillRect, (, xIndex, ,, yCount, -, yIndex, -, 1, ,, 1, ,]
[), ;, g2, ., fillRect, (, xIndex, ,, yCount, -, yIndex, -, 1, ,, 1, ,, 1, ), ;, }]
[;, }, }, return, image, ;, }, }]
[., fillRect, (, xIndex, ,, yCount, -, yIndex, -, 1, ,, 1, ,, 1, ), ;, }, }, return, image]
[,, yCount, -, yIndex, -, 1, ,, 1, ,, 1, ), ;, }, }, return, image, ;, }, }]
[,, 1, ,, 1, ), ;, }, }, return, image, ;, }, }]
[-, 1, ,, 1, ,, 1, ), ;, }, }, return, image, ;, }, }]
[-, yIndex, -, 1, ,, 1, ,, 1, ), ;, }, }, return, image, ;, }, }]
[-, 1, ,, 1, ,, 1, ), ;, }, }, return, image, ;, }, }]
[,, 1, ,, 1, ), ;, }, }, return, image, ;, }, }]
[,, 1, ), ;, }, }, return, image, ;, }, }]
[), ;, }, }, return, image, ;, }, }]
[;, }, }]
