[ISOPeriodFormat, ;, public, class, MutableInterval, extends, BaseInterval, implements, ReadWritableInterval, ,, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[;, public, class, MutableInterval, extends, BaseInterval, implements, ReadWritableInterval, ,, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[{, private, static, final, long, serialVersionUID, =, -, 5982824024992428470L, ;, public, static, MutableInterval, parse, (, String, str, ), {, return]
[final, long, serialVersionUID, =, -, 5982824024992428470L, ;, public, static, MutableInterval, parse, (, String, str, ), {, return, new, MutableInterval, (]
[(, String, str, ), {, return, new, MutableInterval, (, str, ), ;, }, public, MutableInterval, (, ), {, super, (]
[str, ), {, return, new, MutableInterval, (, str, ), ;, }, public, MutableInterval, (, ), {, super, (, 0L, ,]
[{, return, new, MutableInterval, (, str, ), ;, }, public, MutableInterval, (, ), {, super, (, 0L, ,, 0L, ,]
[0L, ,, 0L, ,, null, ), ;, }, public, MutableInterval, (, long, startInstant, ,, long, endInstant, ), {, super, (]
[0L, ,, null, ), ;, }, public, MutableInterval, (, long, startInstant, ,, long, endInstant, ), {, super, (, startInstant, ,]
[null, ), ;, }, public, MutableInterval, (, long, startInstant, ,, long, endInstant, ), {, super, (, startInstant, ,, endInstant, ,]
[,, null, ), ;, }, public, MutableInterval, (, long, startInstant, ,, long, endInstant, ,, Chronology, chronology, ), {, super, (]
[), ;, }, public, MutableInterval, (, long, startInstant, ,, long, endInstant, ,, Chronology, chronology, ), {, super, (, startInstant, ,]
[}, public, MutableInterval, (, long, startInstant, ,, long, endInstant, ,, Chronology, chronology, ), {, super, (, startInstant, ,, endInstant, ,]
[startInstant, ,, endInstant, ,, chronology, ), ;, }, public, MutableInterval, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, super, (]
[endInstant, ,, chronology, ), ;, }, public, MutableInterval, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, super, (, start, ,]
[super, (, start, ,, end, ), ;, }, public, MutableInterval, (, ReadableInstant, start, ,, ReadableDuration, duration, ), {, super, (]
[start, ,, end, ), ;, }, public, MutableInterval, (, ReadableInstant, start, ,, ReadableDuration, duration, ), {, super, (, start, ,]
[super, (, start, ,, duration, ), ;, }, public, MutableInterval, (, ReadableDuration, duration, ,, ReadableInstant, end, ), {, super, (]
[start, ,, duration, ), ;, }, public, MutableInterval, (, ReadableDuration, duration, ,, ReadableInstant, end, ), {, super, (, duration, ,]
[super, (, duration, ,, end, ), ;, }, public, MutableInterval, (, ReadableInstant, start, ,, ReadablePeriod, period, ), {, super, (]
[duration, ,, end, ), ;, }, public, MutableInterval, (, ReadableInstant, start, ,, ReadablePeriod, period, ), {, super, (, start, ,]
[super, (, start, ,, period, ), ;, }, public, MutableInterval, (, ReadablePeriod, period, ,, ReadableInstant, end, ), {, super, (]
[start, ,, period, ), ;, }, public, MutableInterval, (, ReadablePeriod, period, ,, ReadableInstant, end, ), {, super, (, period, ,]
[end, ), {, super, (, period, ,, end, ), ;, }, public, MutableInterval, (, Object, interval, ), {, super, (]
[{, super, (, period, ,, end, ), ;, }, public, MutableInterval, (, Object, interval, ), {, super, (, interval, ,]
[super, (, interval, ,, null, ), ;, }, public, MutableInterval, (, Object, interval, ,, Chronology, chronology, ), {, super, (]
[interval, ,, null, ), ;, }, public, MutableInterval, (, Object, interval, ,, Chronology, chronology, ), {, super, (, interval, ,]
[{, super, (, interval, ,, chronology, ), ;, }, public, void, setInterval, (, long, startInstant, ,, long, endInstant, ), {]
[{, super, (, interval, ,, chronology, ), ;, }, public, void, setInterval, (, long, startInstant, ,, long, endInstant, ), {]
[,, chronology, ), ;, }, public, void, setInterval, (, long, startInstant, ,, long, endInstant, ), {, super, ., setInterval, (]
[), ;, }, public, void, setInterval, (, long, startInstant, ,, long, endInstant, ), {, super, ., setInterval, (, startInstant, ,]
[}, public, void, setInterval, (, long, startInstant, ,, long, endInstant, ), {, super, ., setInterval, (, startInstant, ,, endInstant, ,]
[startInstant, ,, endInstant, ,, getChronology, (, ), ), ;, }, public, void, setInterval, (, ReadableInterval, interval, ), {, if, (]
[startInstant, ,, endInstant, ,, getChronology, (, ), ), ;, }, public, void, setInterval, (, ReadableInterval, interval, ), {, if, (]
[endInstant, ,, getChronology, (, ), ), ;, }, public, void, setInterval, (, ReadableInterval, interval, ), {, if, (, interval, ==]
[), ), ;, }, public, void, setInterval, (, ReadableInterval, interval, ), {, if, (, interval, ==, null, ), {, throw]
[}, public, void, setInterval, (, ReadableInterval, interval, ), {, if, (, interval, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, interval, ==, null, ), {, throw, new, IllegalArgumentException, (, "Interval must not be null", ), ;, }, long, startMillis, =]
[), {, if, (, interval, ==, null, ), {, throw, new, IllegalArgumentException, (, "Interval must not be null", ), ;, }, long, startMillis, =]
[throw, new, IllegalArgumentException, (, "Interval must not be null", ), ;, }, long, startMillis, =, interval, ., getStartMillis, (, ), ;, long, endMillis, =]
[throw, new, IllegalArgumentException, (, "Interval must not be null", ), ;, }, long, startMillis, =, interval, ., getStartMillis, (, ), ;, long, endMillis, =]
[startMillis, =, interval, ., getStartMillis, (, ), ;, long, endMillis, =, interval, ., getEndMillis, (, ), ;, Chronology, chrono, =]
[startMillis, =, interval, ., getStartMillis, (, ), ;, long, endMillis, =, interval, ., getEndMillis, (, ), ;, Chronology, chrono, =]
[), ;, long, endMillis, =, interval, ., getEndMillis, (, ), ;, Chronology, chrono, =, interval, ., getChronology, (, ), ;]
[), ;, long, endMillis, =, interval, ., getEndMillis, (, ), ;, Chronology, chrono, =, interval, ., getChronology, (, ), ;]
[=, interval, ., getEndMillis, (, ), ;, Chronology, chrono, =, interval, ., getChronology, (, ), ;, super, ., setInterval, (]
[., getEndMillis, (, ), ;, Chronology, chrono, =, interval, ., getChronology, (, ), ;, super, ., setInterval, (, startMillis, ,]
[(, ), ;, Chronology, chrono, =, interval, ., getChronology, (, ), ;, super, ., setInterval, (, startMillis, ,, endMillis, ,]
[,, endMillis, ,, chrono, ), ;, }, public, void, setInterval, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, if, (]
[,, endMillis, ,, chrono, ), ;, }, public, void, setInterval, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, if, (]
[,, endMillis, ,, chrono, ), ;, }, public, void, setInterval, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, if, (]
[,, chrono, ), ;, }, public, void, setInterval, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, if, (, start, ==]
[), ;, }, public, void, setInterval, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, if, (, start, ==, null, &&]
[), ;, }, public, void, setInterval, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, if, (, start, ==, null, &&]
[}, public, void, setInterval, (, ReadableInstant, start, ,, ReadableInstant, end, ), {, if, (, start, ==, null, &&, end, ==]
[start, ,, ReadableInstant, end, ), {, if, (, start, ==, null, &&, end, ==, null, ), {, long, now, =]
[start, ,, ReadableInstant, end, ), {, if, (, start, ==, null, &&, end, ==, null, ), {, long, now, =]
[if, (, start, ==, null, &&, end, ==, null, ), {, long, now, =, DateTimeUtils, ., currentTimeMillis, (, ), ;]
[start, ==, null, &&, end, ==, null, ), {, long, now, =, DateTimeUtils, ., currentTimeMillis, (, ), ;, setInterval, (]
[null, &&, end, ==, null, ), {, long, now, =, DateTimeUtils, ., currentTimeMillis, (, ), ;, setInterval, (, now, ,]
[=, DateTimeUtils, ., currentTimeMillis, (, ), ;, setInterval, (, now, ,, now, ), ;, }, else, {, long, startMillis, =]
[=, DateTimeUtils, ., currentTimeMillis, (, ), ;, setInterval, (, now, ,, now, ), ;, }, else, {, long, startMillis, =]
[(, ), ;, setInterval, (, now, ,, now, ), ;, }, else, {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (]
[,, now, ), ;, }, else, {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, start, ), ;, long, endMillis, =]
[,, now, ), ;, }, else, {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, start, ), ;, long, endMillis, =]
[}, else, {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, start, ), ;, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (]
[DateTimeUtils, ., getInstantMillis, (, start, ), ;, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, end, ), ;, Chronology, chrono, =]
[DateTimeUtils, ., getInstantMillis, (, start, ), ;, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, end, ), ;, Chronology, chrono, =]
[start, ), ;, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, end, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (]
[long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, end, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, start, ), ;]
[long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, end, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, start, ), ;]
[., getInstantMillis, (, end, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, start, ), ;, super, ., setInterval, (]
[(, end, ), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, start, ), ;, super, ., setInterval, (, startMillis, ,]
[), ;, Chronology, chrono, =, DateTimeUtils, ., getInstantChronology, (, start, ), ;, super, ., setInterval, (, startMillis, ,, endMillis, ,]
[., setInterval, (, startMillis, ,, endMillis, ,, chrono, ), ;, }, }, public, void, setChronology, (, Chronology, chrono, ), {]
[., setInterval, (, startMillis, ,, endMillis, ,, chrono, ), ;, }, }, public, void, setChronology, (, Chronology, chrono, ), {]
[,, endMillis, ,, chrono, ), ;, }, }, public, void, setChronology, (, Chronology, chrono, ), {, super, ., setInterval, (]
[), ;, }, }, public, void, setChronology, (, Chronology, chrono, ), {, super, ., setInterval, (, getStartMillis, (, ), ,]
[public, void, setChronology, (, Chronology, chrono, ), {, super, ., setInterval, (, getStartMillis, (, ), ,, getEndMillis, (, ), ,]
[getStartMillis, (, ), ,, getEndMillis, (, ), ,, chrono, ), ;, }, public, void, setStartMillis, (, long, startInstant, ), {]
[getStartMillis, (, ), ,, getEndMillis, (, ), ,, chrono, ), ;, }, public, void, setStartMillis, (, long, startInstant, ), {]
[getEndMillis, (, ), ,, chrono, ), ;, }, public, void, setStartMillis, (, long, startInstant, ), {, super, ., setInterval, (]
[), ,, chrono, ), ;, }, public, void, setStartMillis, (, long, startInstant, ), {, super, ., setInterval, (, startInstant, ,]
[;, }, public, void, setStartMillis, (, long, startInstant, ), {, super, ., setInterval, (, startInstant, ,, getEndMillis, (, ), ,]
[(, ), ,, getChronology, (, ), ), ;, }, public, void, setStart, (, ReadableInstant, start, ), {, long, startMillis, =]
[(, ), ,, getChronology, (, ), ), ;, }, public, void, setStart, (, ReadableInstant, start, ), {, long, startMillis, =]
[(, ), ), ;, }, public, void, setStart, (, ReadableInstant, start, ), {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (]
[;, }, public, void, setStart, (, ReadableInstant, start, ), {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, start, ), ;]
[;, }, public, void, setStart, (, ReadableInstant, start, ), {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, start, ), ;]
[setStart, (, ReadableInstant, start, ), {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, start, ), ;, super, ., setInterval, (]
[ReadableInstant, start, ), {, long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, start, ), ;, super, ., setInterval, (, startMillis, ,]
[long, startMillis, =, DateTimeUtils, ., getInstantMillis, (, start, ), ;, super, ., setInterval, (, startMillis, ,, getEndMillis, (, ), ,]
[startMillis, ,, getEndMillis, (, ), ,, getChronology, (, ), ), ;, }, public, void, setEndMillis, (, long, endInstant, ), {]
[startMillis, ,, getEndMillis, (, ), ,, getChronology, (, ), ), ;, }, public, void, setEndMillis, (, long, endInstant, ), {]
[), ,, getChronology, (, ), ), ;, }, public, void, setEndMillis, (, long, endInstant, ), {, super, ., setInterval, (]
[), ), ;, }, public, void, setEndMillis, (, long, endInstant, ), {, super, ., setInterval, (, getStartMillis, (, ), ,]
[;, }, public, void, setEndMillis, (, long, endInstant, ), {, super, ., setInterval, (, getStartMillis, (, ), ,, endInstant, ,]
[,, endInstant, ,, getChronology, (, ), ), ;, }, public, void, setEnd, (, ReadableInstant, end, ), {, long, endMillis, =]
[,, endInstant, ,, getChronology, (, ), ), ;, }, public, void, setEnd, (, ReadableInstant, end, ), {, long, endMillis, =]
[(, ), ), ;, }, public, void, setEnd, (, ReadableInstant, end, ), {, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (]
[;, }, public, void, setEnd, (, ReadableInstant, end, ), {, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, end, ), ;]
[;, }, public, void, setEnd, (, ReadableInstant, end, ), {, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, end, ), ;]
[setEnd, (, ReadableInstant, end, ), {, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, end, ), ;, super, ., setInterval, (]
[), {, long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, end, ), ;, super, ., setInterval, (, getStartMillis, (, ), ,]
[long, endMillis, =, DateTimeUtils, ., getInstantMillis, (, end, ), ;, super, ., setInterval, (, getStartMillis, (, ), ,, endMillis, ,]
[getStartMillis, (, ), ,, endMillis, ,, getChronology, (, ), ), ;, }, public, void, setDurationAfterStart, (, long, duration, ), {]
[), ,, endMillis, ,, getChronology, (, ), ), ;, }, public, void, setDurationAfterStart, (, long, duration, ), {, setEndMillis, (]
[), ,, endMillis, ,, getChronology, (, ), ), ;, }, public, void, setDurationAfterStart, (, long, duration, ), {, setEndMillis, (]
[getChronology, (, ), ), ;, }, public, void, setDurationAfterStart, (, long, duration, ), {, setEndMillis, (, FieldUtils, ., safeAdd, (]
[;, }, public, void, setDurationAfterStart, (, long, duration, ), {, setEndMillis, (, FieldUtils, ., safeAdd, (, getStartMillis, (, ), ,]
[., safeAdd, (, getStartMillis, (, ), ,, duration, ), ), ;, }, public, void, setDurationBeforeEnd, (, long, duration, ), {]
[(, getStartMillis, (, ), ,, duration, ), ), ;, }, public, void, setDurationBeforeEnd, (, long, duration, ), {, setStartMillis, (]
[(, getStartMillis, (, ), ,, duration, ), ), ;, }, public, void, setDurationBeforeEnd, (, long, duration, ), {, setStartMillis, (]
[,, duration, ), ), ;, }, public, void, setDurationBeforeEnd, (, long, duration, ), {, setStartMillis, (, FieldUtils, ., safeAdd, (]
[;, }, public, void, setDurationBeforeEnd, (, long, duration, ), {, setStartMillis, (, FieldUtils, ., safeAdd, (, getEndMillis, (, ), ,]
[}, public, void, setDurationBeforeEnd, (, long, duration, ), {, setStartMillis, (, FieldUtils, ., safeAdd, (, getEndMillis, (, ), ,, -]
[(, ), ,, -, duration, ), ), ;, }, public, void, setDurationAfterStart, (, ReadableDuration, duration, ), {, long, durationMillis, =]
[(, ), ,, -, duration, ), ), ;, }, public, void, setDurationAfterStart, (, ReadableDuration, duration, ), {, long, durationMillis, =]
[duration, ), ), ;, }, public, void, setDurationAfterStart, (, ReadableDuration, duration, ), {, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (]
[;, }, public, void, setDurationAfterStart, (, ReadableDuration, duration, ), {, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;]
[public, void, setDurationAfterStart, (, ReadableDuration, duration, ), {, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, setEndMillis, (]
[public, void, setDurationAfterStart, (, ReadableDuration, duration, ), {, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, setEndMillis, (]
[ReadableDuration, duration, ), {, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, setEndMillis, (, FieldUtils, ., safeAdd, (]
[long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, setEndMillis, (, FieldUtils, ., safeAdd, (, getStartMillis, (, ), ,]
[getStartMillis, (, ), ,, durationMillis, ), ), ;, }, public, void, setDurationBeforeEnd, (, ReadableDuration, duration, ), {, long, durationMillis, =]
[getStartMillis, (, ), ,, durationMillis, ), ), ;, }, public, void, setDurationBeforeEnd, (, ReadableDuration, duration, ), {, long, durationMillis, =]
[durationMillis, ), ), ;, }, public, void, setDurationBeforeEnd, (, ReadableDuration, duration, ), {, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (]
[;, }, public, void, setDurationBeforeEnd, (, ReadableDuration, duration, ), {, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;]
[public, void, setDurationBeforeEnd, (, ReadableDuration, duration, ), {, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, setStartMillis, (]
[public, void, setDurationBeforeEnd, (, ReadableDuration, duration, ), {, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, setStartMillis, (]
[ReadableDuration, duration, ), {, long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, setStartMillis, (, FieldUtils, ., safeAdd, (]
[long, durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, setStartMillis, (, FieldUtils, ., safeAdd, (, getEndMillis, (, ), ,]
[durationMillis, =, DateTimeUtils, ., getDurationMillis, (, duration, ), ;, setStartMillis, (, FieldUtils, ., safeAdd, (, getEndMillis, (, ), ,, -]
[getEndMillis, (, ), ,, -, durationMillis, ), ), ;, }, public, void, setPeriodAfterStart, (, ReadablePeriod, period, ), {, if, (]
[getEndMillis, (, ), ,, -, durationMillis, ), ), ;, }, public, void, setPeriodAfterStart, (, ReadablePeriod, period, ), {, if, (]
[), ,, -, durationMillis, ), ), ;, }, public, void, setPeriodAfterStart, (, ReadablePeriod, period, ), {, if, (, period, ==]
[durationMillis, ), ), ;, }, public, void, setPeriodAfterStart, (, ReadablePeriod, period, ), {, if, (, period, ==, null, ), {]
[), ;, }, public, void, setPeriodAfterStart, (, ReadablePeriod, period, ), {, if, (, period, ==, null, ), {, setEndMillis, (]
[period, ), {, if, (, period, ==, null, ), {, setEndMillis, (, getStartMillis, (, ), ), ;, }, else, {]
[{, if, (, period, ==, null, ), {, setEndMillis, (, getStartMillis, (, ), ), ;, }, else, {, setEndMillis, (]
[{, if, (, period, ==, null, ), {, setEndMillis, (, getStartMillis, (, ), ), ;, }, else, {, setEndMillis, (]
[), {, setEndMillis, (, getStartMillis, (, ), ), ;, }, else, {, setEndMillis, (, getChronology, (, ), ., add, (]
[setEndMillis, (, getStartMillis, (, ), ), ;, }, else, {, setEndMillis, (, getChronology, (, ), ., add, (, period, ,]
[), ), ;, }, else, {, setEndMillis, (, getChronology, (, ), ., add, (, period, ,, getStartMillis, (, ), ,]
[getStartMillis, (, ), ,, 1, ), ), ;, }, }, public, void, setPeriodBeforeEnd, (, ReadablePeriod, period, ), {, if, (]
[getStartMillis, (, ), ,, 1, ), ), ;, }, }, public, void, setPeriodBeforeEnd, (, ReadablePeriod, period, ), {, if, (]
[), ,, 1, ), ), ;, }, }, public, void, setPeriodBeforeEnd, (, ReadablePeriod, period, ), {, if, (, period, ==]
[), ), ;, }, }, public, void, setPeriodBeforeEnd, (, ReadablePeriod, period, ), {, if, (, period, ==, null, ), {]
[;, }, }, public, void, setPeriodBeforeEnd, (, ReadablePeriod, period, ), {, if, (, period, ==, null, ), {, setStartMillis, (]
[period, ), {, if, (, period, ==, null, ), {, setStartMillis, (, getEndMillis, (, ), ), ;, }, else, {]
[{, if, (, period, ==, null, ), {, setStartMillis, (, getEndMillis, (, ), ), ;, }, else, {, setStartMillis, (]
[{, if, (, period, ==, null, ), {, setStartMillis, (, getEndMillis, (, ), ), ;, }, else, {, setStartMillis, (]
[), {, setStartMillis, (, getEndMillis, (, ), ), ;, }, else, {, setStartMillis, (, getChronology, (, ), ., add, (]
[setStartMillis, (, getEndMillis, (, ), ), ;, }, else, {, setStartMillis, (, getChronology, (, ), ., add, (, period, ,]
[), ), ;, }, else, {, setStartMillis, (, getChronology, (, ), ., add, (, period, ,, getEndMillis, (, ), ,]
[), ;, }, else, {, setStartMillis, (, getChronology, (, ), ., add, (, period, ,, getEndMillis, (, ), ,, -]
[period, ,, getEndMillis, (, ), ,, -, 1, ), ), ;, }, }, public, MutableInterval, copy, (, ), {, return]
[(, ), ,, -, 1, ), ), ;, }, }, public, MutableInterval, copy, (, ), {, return, (, MutableInterval, )]
[), {, return, (, MutableInterval, ), clone, (, ), ;, }, public, Object, clone, (, ), {, try, {, return]
[), {, return, (, MutableInterval, ), clone, (, ), ;, }, public, Object, clone, (, ), {, try, {, return]
[(, ), {, try, {, return, super, ., clone, (, ), ;, }, catch, (, CloneNotSupportedException, ex, ), {, throw]
[try, {, return, super, ., clone, (, ), ;, }, catch, (, CloneNotSupportedException, ex, ), {, throw, new, InternalError, (]
