[;, private, double, headLength, =, 0.14, ;, public, VectorRenderer, (, ), {, }, public, Range, findDomainBounds, (, XYDataset, dataset, )]
[;, public, VectorRenderer, (, ), {, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==, null]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =]
[;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset]
[), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =]
[;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double, lvalue, ;]
[., POSITIVE_INFINITY, ;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double]
[;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, if, (, dataset, instanceof]
[., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, if, (]
[;, double, lvalue, ;, double, uvalue, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, )]
[., getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset]
[), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;, series, <, seriesCount]
[instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;, series]
[;, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset]
[;, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset]
[;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[<, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item]
[++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;]
[;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, delta, =, vdataset]
[., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, )]
[), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, delta, =]
[;, item, <, itemCount, ;, item, ++, ), {, double, delta, =, vdataset, ., getVectorXValue, (, series, ,, item, )]
[;, item, ++, ), {, double, delta, =, vdataset, ., getVectorXValue, (, series, ,, item, ), ;, if, (, delta]
[<, itemCount, ;, item, ++, ), {, double, delta, =, vdataset, ., getVectorXValue, (, series, ,, item, ), ;, if]
[;, item, ++, ), {, double, delta, =, vdataset, ., getVectorXValue, (, series, ,, item, ), ;, if, (, delta]
[), {, double, delta, =, vdataset, ., getVectorXValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0, )]
[++, ), {, double, delta, =, vdataset, ., getVectorXValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0]
[;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, lvalue]
[., getVectorXValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getXValue]
[,, item, ), ;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getXValue, (, series, ,, item]
[), ;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;]
[), {, uvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }]
[<, 0.0, ), {, uvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta]
[), {, uvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }]
[=, vdataset, ., getXValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue]
[;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getXValue, (, series, ,, item, )]
[., getXValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset]
[,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getXValue, (, series]
[), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getXValue, (, series, ,, item]
[=, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, uvalue]
[;, }, else, {, lvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta]
[+, delta, ;, }, else, {, lvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue]
[;, }, else, {, lvalue, =, vdataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta]
[=, vdataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math]
[;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum]
[., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min]
[,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue]
[), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;]
[=, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math]
[;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum]
[+, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max]
[;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum]
[=, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, )]
[;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int]
[., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }]
[,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {]
[), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (]
[=, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =]
[;, }, }, }, else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, )]
[., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;]
[,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;]
[), ;, }, }, }, else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++]
[;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[<, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item]
[++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;]
[;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset, .]
[., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, )]
[), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset]
[;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getXValue, (, series, ,, item, ), ;]
[;, item, ++, ), {, lvalue, =, dataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;]
[<, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =]
[;, item, ++, ), {, lvalue, =, dataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;]
[), {, lvalue, =, dataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math]
[++, ), {, lvalue, =, dataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =]
[=, dataset, ., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (]
[;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, .]
[., getXValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,]
[,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum]
[), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math]
[=, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (]
[;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,]
[=, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, )]
[;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (, minimum, >, maximum]
[., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }]
[,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (]
[), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (, minimum, >]
[=, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (, minimum, >, maximum, ), {]
[;, }, }, }, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {, return, new, Range]
[., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (, minimum, >, maximum, ), {, return, null]
[,, uvalue, ), ;, }, }, }, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {]
[), ;, }, }, }, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {, return, new]
[), {, return, null, ;, }, else, {, return, new, Range, (, minimum, ,, maximum, ), ;, }, }, public]
[>, maximum, ), {, return, null, ;, }, else, {, return, new, Range, (, minimum, ,, maximum, ), ;, }]
[), {, return, null, ;, }, else, {, return, new, Range, (, minimum, ,, maximum, ), ;, }, }, public]
[;, }, else, {, return, new, Range, (, minimum, ,, maximum, ), ;, }, }, public, Range, findRangeBounds, (, XYDataset]
[;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==, null, ), {, throw, new]
[,, maximum, ), ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==, null, )]
[), ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double]
[), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =]
[;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset]
[), ;, }, double, minimum, =, Double, ., POSITIVE_INFINITY, ;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =]
[;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double, lvalue, ;]
[., POSITIVE_INFINITY, ;, double, maximum, =, Double, ., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double]
[;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, if, (, dataset, instanceof]
[., NEGATIVE_INFINITY, ;, int, seriesCount, =, dataset, ., getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, if, (]
[;, double, lvalue, ;, double, uvalue, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, )]
[., getSeriesCount, (, ), ;, double, lvalue, ;, double, uvalue, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset]
[), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;, series, <, seriesCount]
[instanceof, VectorXYDataset, ), {, VectorXYDataset, vdataset, =, (, VectorXYDataset, ), dataset, ;, for, (, int, series, =, 0, ;, series]
[;, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset]
[;, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset]
[;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[<, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item]
[++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;]
[;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, delta, =, vdataset]
[., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, )]
[), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, double, delta, =]
[;, item, <, itemCount, ;, item, ++, ), {, double, delta, =, vdataset, ., getVectorYValue, (, series, ,, item, )]
[;, item, ++, ), {, double, delta, =, vdataset, ., getVectorYValue, (, series, ,, item, ), ;, if, (, delta]
[<, itemCount, ;, item, ++, ), {, double, delta, =, vdataset, ., getVectorYValue, (, series, ,, item, ), ;, if]
[;, item, ++, ), {, double, delta, =, vdataset, ., getVectorYValue, (, series, ,, item, ), ;, if, (, delta]
[), {, double, delta, =, vdataset, ., getVectorYValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0, )]
[++, ), {, double, delta, =, vdataset, ., getVectorYValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0]
[;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, lvalue]
[., getVectorYValue, (, series, ,, item, ), ;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getYValue]
[,, item, ), ;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getYValue, (, series, ,, item]
[), ;, if, (, delta, <, 0.0, ), {, uvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;]
[), {, uvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }]
[<, 0.0, ), {, uvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta]
[), {, uvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }]
[=, vdataset, ., getYValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue]
[;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getYValue, (, series, ,, item, )]
[., getYValue, (, series, ,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset]
[,, item, ), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getYValue, (, series]
[), ;, lvalue, =, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getYValue, (, series, ,, item]
[=, uvalue, +, delta, ;, }, else, {, lvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, uvalue]
[;, }, else, {, lvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta]
[+, delta, ;, }, else, {, lvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue]
[;, }, else, {, lvalue, =, vdataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta]
[=, vdataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math]
[;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum]
[., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min]
[,, item, ), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue]
[), ;, uvalue, =, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;]
[=, lvalue, +, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math]
[;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum]
[+, delta, ;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max]
[;, }, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum]
[=, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, )]
[;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int]
[., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }]
[,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {]
[), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (]
[=, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =]
[;, }, }, }, else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++, )]
[., max, (, maximum, ,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;]
[,, uvalue, ), ;, }, }, }, else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;]
[), ;, }, }, }, else, {, for, (, int, series, =, 0, ;, series, <, seriesCount, ;, series, ++]
[;, series, <, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[<, seriesCount, ;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int]
[;, series, ++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =]
[), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item]
[++, ), {, int, itemCount, =, dataset, ., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;]
[;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset, .]
[., getItemCount, (, series, ), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, )]
[), ;, for, (, int, item, =, 0, ;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset]
[;, item, <, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getYValue, (, series, ,, item, ), ;]
[;, item, ++, ), {, lvalue, =, dataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;]
[<, itemCount, ;, item, ++, ), {, lvalue, =, dataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =]
[;, item, ++, ), {, lvalue, =, dataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;]
[), {, lvalue, =, dataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math]
[++, ), {, lvalue, =, dataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =]
[=, dataset, ., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (]
[;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, .]
[., getYValue, (, series, ,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,]
[,, item, ), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum]
[), ;, uvalue, =, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math]
[=, lvalue, ;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (]
[;, minimum, =, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,]
[=, Math, ., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, )]
[;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (, minimum, >, maximum]
[., min, (, minimum, ,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }]
[,, lvalue, ), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (]
[), ;, maximum, =, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (, minimum, >]
[=, Math, ., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (, minimum, >, maximum, ), {]
[;, }, }, }, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {, return, new, Range]
[., max, (, maximum, ,, uvalue, ), ;, }, }, }, if, (, minimum, >, maximum, ), {, return, null]
[,, uvalue, ), ;, }, }, }, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {]
[), ;, }, }, }, if, (, minimum, >, maximum, ), {, return, null, ;, }, else, {, return, new]
[), {, return, null, ;, }, else, {, return, new, Range, (, minimum, ,, maximum, ), ;, }, }, public]
[>, maximum, ), {, return, null, ;, }, else, {, return, new, Range, (, minimum, ,, maximum, ), ;, }]
[), {, return, null, ;, }, else, {, return, new, Range, (, minimum, ,, maximum, ), ;, }, }, public]
[;, }, else, {, return, new, Range, (, minimum, ,, maximum, ), ;, }, }, public, void, drawItem, (, Graphics2D]
[;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, ValueAxis]
[,, maximum, ), ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot]
[), ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,]
[;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, double, dx, =, 0.0, ;, double, dy]
[., getXValue, (, series, ,, item, ), ;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;]
[,, item, ), ;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, double, dx, =, 0.0]
[), ;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, double, dx, =, 0.0, ;, double]
[;, double, dx, =, 0.0, ;, double, dy, =, 0.0, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, dx, =]
[., getYValue, (, series, ,, item, ), ;, double, dx, =, 0.0, ;, double, dy, =, 0.0, ;, if, (]
[,, item, ), ;, double, dx, =, 0.0, ;, double, dy, =, 0.0, ;, if, (, dataset, instanceof, VectorXYDataset, )]
[), ;, double, dx, =, 0.0, ;, double, dy, =, 0.0, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, dx]
[;, double, dy, =, 0.0, ;, if, (, dataset, instanceof, VectorXYDataset, ), {, dx, =, (, (, VectorXYDataset, ), dataset]
[;, if, (, dataset, instanceof, VectorXYDataset, ), {, dx, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorXValue, (, series]
[), {, dx, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorXValue, (, series, ,, item, ), ;, dy, =]
[instanceof, VectorXYDataset, ), {, dx, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorXValue, (, series, ,, item, ), ;]
[=, (, (, VectorXYDataset, ), dataset, ), ., getVectorXValue, (, series, ,, item, ), ;, dy, =, (, (, VectorXYDataset]
[;, dy, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorYValue, (, series, ,, item, ), ;, }, double, xx0]
[., getVectorXValue, (, series, ,, item, ), ;, dy, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorYValue, (, series]
[), ., getVectorXValue, (, series, ,, item, ), ;, dy, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorYValue, (]
[), ., getVectorXValue, (, series, ,, item, ), ;, dy, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorYValue, (]
[,, item, ), ;, dy, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorYValue, (, series, ,, item, ), ;]
[), ;, dy, =, (, (, VectorXYDataset, ), dataset, ), ., getVectorYValue, (, series, ,, item, ), ;, }, double]
[=, (, (, VectorXYDataset, ), dataset, ), ., getVectorYValue, (, series, ,, item, ), ;, }, double, xx0, =, domainAxis]
[;, }, double, xx0, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;]
[., getVectorYValue, (, series, ,, item, ), ;, }, double, xx0, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,]
[), ., getVectorYValue, (, series, ,, item, ), ;, }, double, xx0, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea]
[), ., getVectorYValue, (, series, ,, item, ), ;, }, double, xx0, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea]
[,, item, ), ;, }, double, xx0, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,, plot, ., getDomainAxisEdge, (]
[), ;, }, double, xx0, =, domainAxis, ., valueToJava2D, (, x, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), )]
[;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double]
[., valueToJava2D, (, x, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, ,, dataArea]
[,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,, plot]
[), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;]
[., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, ,, dataArea, ,, plot, ., getRangeAxisEdge]
[;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, dx, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), )]
[., valueToJava2D, (, y, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D]
[,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, dx]
[,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, dx, ,, dataArea]
[), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, dx, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, )]
[., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, dx, ,, dataArea, ,, plot]
[;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, dy, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), )]
[., valueToJava2D, (, x, +, dx, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, dy]
[+, dx, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, dy]
[,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, dy, ,, dataArea]
[), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, dy, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, )]
[., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, dy, ,, dataArea, ,, plot]
[;, Line2D, line, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ., equals, (, PlotOrientation]
[., valueToJava2D, (, y, +, dy, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Line2D, line, ;, PlotOrientation]
[,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Line2D, line, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (]
[+, dy, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Line2D, line, ;, PlotOrientation, orientation, =, plot, .]
[,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Line2D, line, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (]
[,, plot, ., getRangeAxisEdge, (, ), ), ;, Line2D, line, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;]
[), ;, Line2D, line, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ., equals, (]
[., getRangeAxisEdge, (, ), ), ;, Line2D, line, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[;, if, (, orientation, ., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, line, =, new, Line2D, ., Double, (]
[., getOrientation, (, ), ;, if, (, orientation, ., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, line, =, new]
[), {, line, =, new, Line2D, ., Double, (, yy0, ,, xx0, ,, yy1, ,, xx1, ), ;, }, else]
[., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, line, =, new, Line2D, ., Double, (, yy0, ,, xx0, ,]
[), ), {, line, =, new, Line2D, ., Double, (, yy0, ,, xx0, ,, yy1, ,, xx1, ), ;, }]
[., HORIZONTAL, ), ), {, line, =, new, Line2D, ., Double, (, yy0, ,, xx0, ,, yy1, ,, xx1, )]
[=, new, Line2D, ., Double, (, yy0, ,, xx0, ,, yy1, ,, xx1, ), ;, }, else, {, line, =]
[;, }, else, {, line, =, new, Line2D, ., Double, (, xx0, ,, yy0, ,, xx1, ,, yy1, ), ;]
[,, xx0, ,, yy1, ,, xx1, ), ;, }, else, {, line, =, new, Line2D, ., Double, (, xx0, ,]
[,, yy1, ,, xx1, ), ;, }, else, {, line, =, new, Line2D, ., Double, (, xx0, ,, yy0, ,]
[,, xx1, ), ;, }, else, {, line, =, new, Line2D, ., Double, (, xx0, ,, yy0, ,, xx1, ,]
[), ;, }, else, {, line, =, new, Line2D, ., Double, (, xx0, ,, yy0, ,, xx1, ,, yy1, )]
[=, new, Line2D, ., Double, (, xx0, ,, yy0, ,, xx1, ,, yy1, ), ;, }, g2, ., setPaint, (]
[;, }, g2, ., setPaint, (, getItemPaint, (, series, ,, item, ,, selected, ), ), ;, g2, ., setStroke, (]
[,, yy0, ,, xx1, ,, yy1, ), ;, }, g2, ., setPaint, (, getItemPaint, (, series, ,, item, ,, selected]
[,, xx1, ,, yy1, ), ;, }, g2, ., setPaint, (, getItemPaint, (, series, ,, item, ,, selected, ), )]
[,, yy1, ), ;, }, g2, ., setPaint, (, getItemPaint, (, series, ,, item, ,, selected, ), ), ;, g2]
[), ;, }, g2, ., setPaint, (, getItemPaint, (, series, ,, item, ,, selected, ), ), ;, g2, ., setStroke]
[;, g2, ., setStroke, (, getItemStroke, (, series, ,, item, ,, selected, ), ), ;, g2, ., draw, (, line]
[., setPaint, (, getItemPaint, (, series, ,, item, ,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (, series]
[), ;, g2, ., setStroke, (, getItemStroke, (, series, ,, item, ,, selected, ), ), ;, g2, ., draw, (]
[,, item, ,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (, series, ,, item, ,, selected, ), )]
[,, selected, ), ), ;, g2, ., setStroke, (, getItemStroke, (, series, ,, item, ,, selected, ), ), ;, g2]
[), ), ;, g2, ., setStroke, (, getItemStroke, (, series, ,, item, ,, selected, ), ), ;, g2, ., draw]
[;, g2, ., draw, (, line, ), ;, double, dxx, =, (, xx1, -, xx0, ), ;, double, dyy, =]
[., setStroke, (, getItemStroke, (, series, ,, item, ,, selected, ), ), ;, g2, ., draw, (, line, ), ;]
[), ;, g2, ., draw, (, line, ), ;, double, dxx, =, (, xx1, -, xx0, ), ;, double, dyy]
[,, item, ,, selected, ), ), ;, g2, ., draw, (, line, ), ;, double, dxx, =, (, xx1, -]
[,, selected, ), ), ;, g2, ., draw, (, line, ), ;, double, dxx, =, (, xx1, -, xx0, )]
[), ), ;, g2, ., draw, (, line, ), ;, double, dxx, =, (, xx1, -, xx0, ), ;, double]
[;, double, dxx, =, (, xx1, -, xx0, ), ;, double, dyy, =, (, yy1, -, yy0, ), ;, double]
[., draw, (, line, ), ;, double, dxx, =, (, xx1, -, xx0, ), ;, double, dyy, =, (, yy1]
[), ;, double, dxx, =, (, xx1, -, xx0, ), ;, double, dyy, =, (, yy1, -, yy0, ), ;]
[;, double, dyy, =, (, yy1, -, yy0, ), ;, double, bx, =, xx0, +, (, 1.0, -, this, .]
[), ;, double, dyy, =, (, yy1, -, yy0, ), ;, double, bx, =, xx0, +, (, 1.0, -, this]
[-, xx0, ), ;, double, dyy, =, (, yy1, -, yy0, ), ;, double, bx, =, xx0, +, (, 1.0]
[), ;, double, dyy, =, (, yy1, -, yy0, ), ;, double, bx, =, xx0, +, (, 1.0, -, this]
[;, double, bx, =, xx0, +, (, 1.0, -, this, ., baseLength, ), *, dxx, ;, double, by, =, yy0]
[), ;, double, bx, =, xx0, +, (, 1.0, -, this, ., baseLength, ), *, dxx, ;, double, by, =]
[-, yy0, ), ;, double, bx, =, xx0, +, (, 1.0, -, this, ., baseLength, ), *, dxx, ;, double]
[), ;, double, bx, =, xx0, +, (, 1.0, -, this, ., baseLength, ), *, dxx, ;, double, by, =]
[;, double, by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double, cx, =, xx0]
[+, (, 1.0, -, this, ., baseLength, ), *, dxx, ;, double, by, =, yy0, +, (, 1.0, -, this]
[;, double, by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double, cx, =, xx0]
[*, dxx, ;, double, by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double, cx]
[), *, dxx, ;, double, by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double]
[-, this, ., baseLength, ), *, dxx, ;, double, by, =, yy0, +, (, 1.0, -, this, ., baseLength, )]
[), *, dxx, ;, double, by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double]
[., baseLength, ), *, dxx, ;, double, by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy]
[;, double, by, =, yy0, +, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double, cx, =, xx0]
[;, double, cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double, cy, =, yy0]
[+, (, 1.0, -, this, ., baseLength, ), *, dyy, ;, double, cx, =, xx0, +, (, 1.0, -, this]
[;, double, cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double, cy, =, yy0]
[*, dyy, ;, double, cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double, cy]
[), *, dyy, ;, double, cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double]
[-, this, ., baseLength, ), *, dyy, ;, double, cx, =, xx0, +, (, 1.0, -, this, ., headLength, )]
[), *, dyy, ;, double, cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double]
[., baseLength, ), *, dyy, ;, double, cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx]
[;, double, cx, =, xx0, +, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double, cy, =, yy0]
[;, double, cy, =, yy0, +, (, 1.0, -, this, ., headLength, ), *, dyy, ;, double, angle, =, 0.0]
[+, (, 1.0, -, this, ., headLength, ), *, dxx, ;, double, cy, =, yy0, +, (, 1.0, -, this]
[;, double, cy, =, yy0, +, (, 1.0, -, this, ., headLength, ), *, dyy, ;, double, angle, =, 0.0]
[*, dxx, ;, double, cy, =, yy0, +, (, 1.0, -, this, ., headLength, ), *, dyy, ;, double, angle]
[), *, dxx, ;, double, cy, =, yy0, +, (, 1.0, -, this, ., headLength, ), *, dyy, ;, double]
[-, this, ., headLength, ), *, dxx, ;, double, cy, =, yy0, +, (, 1.0, -, this, ., headLength, )]
[), *, dxx, ;, double, cy, =, yy0, +, (, 1.0, -, this, ., headLength, ), *, dyy, ;, double]
[., headLength, ), *, dxx, ;, double, cy, =, yy0, +, (, 1.0, -, this, ., headLength, ), *, dyy]
[;, double, cy, =, yy0, +, (, 1.0, -, this, ., headLength, ), *, dyy, ;, double, angle, =, 0.0]
[;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =, Math, ., PI, /, 2.0]
[+, (, 1.0, -, this, ., headLength, ), *, dyy, ;, double, angle, =, 0.0, ;, if, (, dxx, !=]
[;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =, Math, ., PI, /, 2.0]
[*, dyy, ;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =, Math, ., PI]
[), *, dyy, ;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =, Math, .]
[-, this, ., headLength, ), *, dyy, ;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {]
[), *, dyy, ;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =, Math, .]
[., headLength, ), *, dyy, ;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =]
[;, double, angle, =, 0.0, ;, if, (, dxx, !=, 0.0, ), {, angle, =, Math, ., PI, /, 2.0]
[;, if, (, dxx, !=, 0.0, ), {, angle, =, Math, ., PI, /, 2.0, -, Math, ., atan, (]
[), {, angle, =, Math, ., PI, /, 2.0, -, Math, ., atan, (, dyy, /, dxx, ), ;, }]
[!=, 0.0, ), {, angle, =, Math, ., PI, /, 2.0, -, Math, ., atan, (, dyy, /, dxx, )]
[), {, angle, =, Math, ., PI, /, 2.0, -, Math, ., atan, (, dyy, /, dxx, ), ;, }]
[=, Math, ., PI, /, 2.0, -, Math, ., atan, (, dyy, /, dxx, ), ;, }, double, deltaX, =]
[;, }, double, deltaX, =, 2.0, *, Math, ., cos, (, angle, ), ;, double, deltaY, =, 2.0, *, Math]
[-, Math, ., atan, (, dyy, /, dxx, ), ;, }, double, deltaX, =, 2.0, *, Math, ., cos, (]
[/, 2.0, -, Math, ., atan, (, dyy, /, dxx, ), ;, }, double, deltaX, =, 2.0, *, Math, .]
[., PI, /, 2.0, -, Math, ., atan, (, dyy, /, dxx, ), ;, }, double, deltaX, =, 2.0, *]
[-, Math, ., atan, (, dyy, /, dxx, ), ;, }, double, deltaX, =, 2.0, *, Math, ., cos, (]
[;, }, double, deltaX, =, 2.0, *, Math, ., cos, (, angle, ), ;, double, deltaY, =, 2.0, *, Math]
[., atan, (, dyy, /, dxx, ), ;, }, double, deltaX, =, 2.0, *, Math, ., cos, (, angle, )]
[), ;, }, double, deltaX, =, 2.0, *, Math, ., cos, (, angle, ), ;, double, deltaY, =, 2.0, *]
[/, dxx, ), ;, }, double, deltaX, =, 2.0, *, Math, ., cos, (, angle, ), ;, double, deltaY, =]
[), ;, }, double, deltaX, =, 2.0, *, Math, ., cos, (, angle, ), ;, double, deltaY, =, 2.0, *]
[;, double, deltaY, =, 2.0, *, Math, ., sin, (, angle, ), ;, double, leftx, =, cx, +, deltaX, ;]
[*, Math, ., cos, (, angle, ), ;, double, deltaY, =, 2.0, *, Math, ., sin, (, angle, ), ;]
[;, double, deltaY, =, 2.0, *, Math, ., sin, (, angle, ), ;, double, leftx, =, cx, +, deltaX, ;]
[., cos, (, angle, ), ;, double, deltaY, =, 2.0, *, Math, ., sin, (, angle, ), ;, double, leftx]
[), ;, double, deltaY, =, 2.0, *, Math, ., sin, (, angle, ), ;, double, leftx, =, cx, +, deltaX]
[;, double, leftx, =, cx, +, deltaX, ;, double, lefty, =, cy, -, deltaY, ;, double, rightx, =, cx, -]
[*, Math, ., sin, (, angle, ), ;, double, leftx, =, cx, +, deltaX, ;, double, lefty, =, cy, -]
[;, double, leftx, =, cx, +, deltaX, ;, double, lefty, =, cy, -, deltaY, ;, double, rightx, =, cx, -]
[., sin, (, angle, ), ;, double, leftx, =, cx, +, deltaX, ;, double, lefty, =, cy, -, deltaY, ;]
[), ;, double, leftx, =, cx, +, deltaX, ;, double, lefty, =, cy, -, deltaY, ;, double, rightx, =, cx]
[;, double, lefty, =, cy, -, deltaY, ;, double, rightx, =, cx, -, deltaX, ;, double, righty, =, cy, +]
[+, deltaX, ;, double, lefty, =, cy, -, deltaY, ;, double, rightx, =, cx, -, deltaX, ;, double, righty, =]
[;, double, lefty, =, cy, -, deltaY, ;, double, rightx, =, cx, -, deltaX, ;, double, righty, =, cy, +]
[;, double, rightx, =, cx, -, deltaX, ;, double, righty, =, cy, +, deltaY, ;, GeneralPath, p, =, new, GeneralPath]
[-, deltaY, ;, double, rightx, =, cx, -, deltaX, ;, double, righty, =, cy, +, deltaY, ;, GeneralPath, p, =]
[;, double, rightx, =, cx, -, deltaX, ;, double, righty, =, cy, +, deltaY, ;, GeneralPath, p, =, new, GeneralPath]
[;, double, righty, =, cy, +, deltaY, ;, GeneralPath, p, =, new, GeneralPath, (, ), ;, if, (, orientation, ==]
[-, deltaX, ;, double, righty, =, cy, +, deltaY, ;, GeneralPath, p, =, new, GeneralPath, (, ), ;, if, (]
[;, double, righty, =, cy, +, deltaY, ;, GeneralPath, p, =, new, GeneralPath, (, ), ;, if, (, orientation, ==]
[;, GeneralPath, p, =, new, GeneralPath, (, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, p, .]
[+, deltaY, ;, GeneralPath, p, =, new, GeneralPath, (, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[;, GeneralPath, p, =, new, GeneralPath, (, ), ;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, p, .]
[;, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, p, ., moveTo, (, (, float, ), xx1, ,, (]
[), {, p, ., moveTo, (, (, float, ), xx1, ,, (, float, ), yy1, ), ;, p, ., lineTo]
[==, PlotOrientation, ., VERTICAL, ), {, p, ., moveTo, (, (, float, ), xx1, ,, (, float, ), yy1, )]
[), {, p, ., moveTo, (, (, float, ), xx1, ,, (, float, ), yy1, ), ;, p, ., lineTo]
[., VERTICAL, ), {, p, ., moveTo, (, (, float, ), xx1, ,, (, float, ), yy1, ), ;, p]
[;, p, ., lineTo, (, (, float, ), rightx, ,, (, float, ), righty, ), ;, p, ., lineTo, (]
[., moveTo, (, (, float, ), xx1, ,, (, float, ), yy1, ), ;, p, ., lineTo, (, (, float]
[,, (, float, ), yy1, ), ;, p, ., lineTo, (, (, float, ), rightx, ,, (, float, ), righty]
[,, (, float, ), yy1, ), ;, p, ., lineTo, (, (, float, ), rightx, ,, (, float, ), righty]
[), ;, p, ., lineTo, (, (, float, ), rightx, ,, (, float, ), righty, ), ;, p, ., lineTo]
[), ;, p, ., lineTo, (, (, float, ), rightx, ,, (, float, ), righty, ), ;, p, ., lineTo]
[;, p, ., lineTo, (, (, float, ), bx, ,, (, float, ), by, ), ;, p, ., lineTo, (]
[., lineTo, (, (, float, ), rightx, ,, (, float, ), righty, ), ;, p, ., lineTo, (, (, float]
[,, (, float, ), righty, ), ;, p, ., lineTo, (, (, float, ), bx, ,, (, float, ), by]
[,, (, float, ), righty, ), ;, p, ., lineTo, (, (, float, ), bx, ,, (, float, ), by]
[), ;, p, ., lineTo, (, (, float, ), bx, ,, (, float, ), by, ), ;, p, ., lineTo]
[), ;, p, ., lineTo, (, (, float, ), bx, ,, (, float, ), by, ), ;, p, ., lineTo]
[;, p, ., lineTo, (, (, float, ), leftx, ,, (, float, ), lefty, ), ;, }, else, {, p]
[., lineTo, (, (, float, ), bx, ,, (, float, ), by, ), ;, p, ., lineTo, (, (, float]
[,, (, float, ), by, ), ;, p, ., lineTo, (, (, float, ), leftx, ,, (, float, ), lefty]
[,, (, float, ), by, ), ;, p, ., lineTo, (, (, float, ), leftx, ,, (, float, ), lefty]
[), ;, p, ., lineTo, (, (, float, ), leftx, ,, (, float, ), lefty, ), ;, }, else, {]
[), ;, p, ., lineTo, (, (, float, ), leftx, ,, (, float, ), lefty, ), ;, }, else, {]
[;, }, else, {, p, ., moveTo, (, (, float, ), yy1, ,, (, float, ), xx1, ), ;, p]
[., lineTo, (, (, float, ), leftx, ,, (, float, ), lefty, ), ;, }, else, {, p, ., moveTo]
[,, (, float, ), lefty, ), ;, }, else, {, p, ., moveTo, (, (, float, ), yy1, ,, (]
[,, (, float, ), lefty, ), ;, }, else, {, p, ., moveTo, (, (, float, ), yy1, ,, (]
[), ;, }, else, {, p, ., moveTo, (, (, float, ), yy1, ,, (, float, ), xx1, ), ;]
[), ;, }, else, {, p, ., moveTo, (, (, float, ), yy1, ,, (, float, ), xx1, ), ;]
[;, p, ., lineTo, (, (, float, ), righty, ,, (, float, ), rightx, ), ;, p, ., lineTo, (]
[., moveTo, (, (, float, ), yy1, ,, (, float, ), xx1, ), ;, p, ., lineTo, (, (, float]
[,, (, float, ), xx1, ), ;, p, ., lineTo, (, (, float, ), righty, ,, (, float, ), rightx]
[,, (, float, ), xx1, ), ;, p, ., lineTo, (, (, float, ), righty, ,, (, float, ), rightx]
[), ;, p, ., lineTo, (, (, float, ), righty, ,, (, float, ), rightx, ), ;, p, ., lineTo]
[), ;, p, ., lineTo, (, (, float, ), righty, ,, (, float, ), rightx, ), ;, p, ., lineTo]
[;, p, ., lineTo, (, (, float, ), by, ,, (, float, ), bx, ), ;, p, ., lineTo, (]
[., lineTo, (, (, float, ), righty, ,, (, float, ), rightx, ), ;, p, ., lineTo, (, (, float]
[,, (, float, ), rightx, ), ;, p, ., lineTo, (, (, float, ), by, ,, (, float, ), bx]
[,, (, float, ), rightx, ), ;, p, ., lineTo, (, (, float, ), by, ,, (, float, ), bx]
[), ;, p, ., lineTo, (, (, float, ), by, ,, (, float, ), bx, ), ;, p, ., lineTo]
[), ;, p, ., lineTo, (, (, float, ), by, ,, (, float, ), bx, ), ;, p, ., lineTo]
[;, p, ., lineTo, (, (, float, ), lefty, ,, (, float, ), leftx, ), ;, }, p, ., closePath]
[., lineTo, (, (, float, ), by, ,, (, float, ), bx, ), ;, p, ., lineTo, (, (, float]
[,, (, float, ), bx, ), ;, p, ., lineTo, (, (, float, ), lefty, ,, (, float, ), leftx]
[,, (, float, ), bx, ), ;, p, ., lineTo, (, (, float, ), lefty, ,, (, float, ), leftx]
[), ;, p, ., lineTo, (, (, float, ), lefty, ,, (, float, ), leftx, ), ;, }, p, .]
[), ;, p, ., lineTo, (, (, float, ), lefty, ,, (, float, ), leftx, ), ;, }, p, .]
[;, }, p, ., closePath, (, ), ;, g2, ., draw, (, p, ), ;, EntityCollection, entities, =, null, ;]
[., lineTo, (, (, float, ), lefty, ,, (, float, ), leftx, ), ;, }, p, ., closePath, (, )]
[,, (, float, ), leftx, ), ;, }, p, ., closePath, (, ), ;, g2, ., draw, (, p, )]
[,, (, float, ), leftx, ), ;, }, p, ., closePath, (, ), ;, g2, ., draw, (, p, )]
[), ;, }, p, ., closePath, (, ), ;, g2, ., draw, (, p, ), ;, EntityCollection, entities, =, null]
[), ;, }, p, ., closePath, (, ), ;, g2, ., draw, (, p, ), ;, EntityCollection, entities, =, null]
[;, g2, ., draw, (, p, ), ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, )]
[., closePath, (, ), ;, g2, ., draw, (, p, ), ;, EntityCollection, entities, =, null, ;, if, (, state]
[;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =, state]
[., draw, (, p, ), ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null]
[), ;, EntityCollection, entities, =, null, ;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =]
[;, if, (, state, ., getInfo, (, ), !=, null, ), {, entities, =, state, ., getInfo, (, ), .]
[), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (]
[!=, null, ), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;]
[., getInfo, (, ), !=, null, ), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), .]
[), {, entities, =, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (]
[=, state, ., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, line, ., getBounds, (, ), ,, dataset, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, line, ., getBounds, (]
[., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[., getInfo, (, ), ., getOwner, (, ), ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[), {, addEntity, (, entities, ,, line, ., getBounds, (, ), ,, dataset, ,, series, ,, item, ,, selected, ,]
[!=, null, ), {, addEntity, (, entities, ,, line, ., getBounds, (, ), ,, dataset, ,, series, ,, item, ,]
[), {, addEntity, (, entities, ,, line, ., getBounds, (, ), ,, dataset, ,, series, ,, item, ,, selected, ,]
[;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[,, line, ., getBounds, (, ), ,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, ), ;]
[,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, }, public, boolean, equals]
[., getBounds, (, ), ,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, ), ;, }, }]
[,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object]
[,, item, ,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, )]
[,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if]
[,, 0.0, ,, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj]
[,, 0.0, ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this]
[), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, VectorRenderer, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, VectorRenderer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, VectorRenderer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, VectorRenderer, ), ), {, return, false, ;, }, VectorRenderer, that, =, (]
[), {, return, false, ;, }, VectorRenderer, that, =, (, VectorRenderer, ), obj, ;, if, (, this, ., baseLength, !=]
[), {, return, false, ;, }, VectorRenderer, that, =, (, VectorRenderer, ), obj, ;, if, (, this, ., baseLength, !=]
[), ), {, return, false, ;, }, VectorRenderer, that, =, (, VectorRenderer, ), obj, ;, if, (, this, ., baseLength]
[instanceof, VectorRenderer, ), ), {, return, false, ;, }, VectorRenderer, that, =, (, VectorRenderer, ), obj, ;, if, (, this]
[;, }, VectorRenderer, that, =, (, VectorRenderer, ), obj, ;, if, (, this, ., baseLength, !=, that, ., baseLength, )]
[;, if, (, this, ., baseLength, !=, that, ., baseLength, ), {, return, false, ;, }, if, (, this, .]
[;, if, (, this, ., baseLength, !=, that, ., baseLength, ), {, return, false, ;, }, if, (, this, .]
[), {, return, false, ;, }, if, (, this, ., headLength, !=, that, ., headLength, ), {, return, false, ;]
[!=, that, ., baseLength, ), {, return, false, ;, }, if, (, this, ., headLength, !=, that, ., headLength, )]
[., baseLength, !=, that, ., baseLength, ), {, return, false, ;, }, if, (, this, ., headLength, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., headLength, !=, that, ., headLength, ), {, return, false, ;]
[., baseLength, ), {, return, false, ;, }, if, (, this, ., headLength, !=, that, ., headLength, ), {, return]
[;, }, if, (, this, ., headLength, !=, that, ., headLength, ), {, return, false, ;, }, return, super, .]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, )]
[!=, that, ., headLength, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public]
[., headLength, !=, that, ., headLength, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, )]
[., headLength, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, }]
[., equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (]
[), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, }]
[;, }, }]
[., clone, (, ), ;, }, }]
