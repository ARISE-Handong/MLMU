[;, public, abstract, class, Title, extends, AbstractBlock, implements, Block, ,, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[public, abstract, class, Title, extends, AbstractBlock, implements, Block, ,, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[,, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -, 6675162505277817221L, ;, public, static, final, RectangleEdge, DEFAULT_POSITION, =]
[,, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -, 6675162505277817221L, ;, public, static, final, RectangleEdge, DEFAULT_POSITION, =]
[=, -, 6675162505277817221L, ;, public, static, final, RectangleEdge, DEFAULT_POSITION, =, RectangleEdge, ., TOP, ;, public, static, final, HorizontalAlignment, DEFAULT_HORIZONTAL_ALIGNMENT, =]
[=, -, 6675162505277817221L, ;, public, static, final, RectangleEdge, DEFAULT_POSITION, =, RectangleEdge, ., TOP, ;, public, static, final, HorizontalAlignment, DEFAULT_HORIZONTAL_ALIGNMENT, =]
[RectangleEdge, ., TOP, ;, public, static, final, HorizontalAlignment, DEFAULT_HORIZONTAL_ALIGNMENT, =, HorizontalAlignment, ., CENTER, ;, public, static, final, VerticalAlignment, DEFAULT_VERTICAL_ALIGNMENT, =]
[RectangleEdge, ., TOP, ;, public, static, final, HorizontalAlignment, DEFAULT_HORIZONTAL_ALIGNMENT, =, HorizontalAlignment, ., CENTER, ;, public, static, final, VerticalAlignment, DEFAULT_VERTICAL_ALIGNMENT, =]
[HorizontalAlignment, ., CENTER, ;, public, static, final, VerticalAlignment, DEFAULT_VERTICAL_ALIGNMENT, =, VerticalAlignment, ., CENTER, ;, public, static, final, RectangleInsets, DEFAULT_PADDING, =]
[;, public, static, final, VerticalAlignment, DEFAULT_VERTICAL_ALIGNMENT, =, VerticalAlignment, ., CENTER, ;, public, static, final, RectangleInsets, DEFAULT_PADDING, =, new, RectangleInsets, (]
[static, final, VerticalAlignment, DEFAULT_VERTICAL_ALIGNMENT, =, VerticalAlignment, ., CENTER, ;, public, static, final, RectangleInsets, DEFAULT_PADDING, =, new, RectangleInsets, (, 1, ,]
[VerticalAlignment, DEFAULT_VERTICAL_ALIGNMENT, =, VerticalAlignment, ., CENTER, ;, public, static, final, RectangleInsets, DEFAULT_PADDING, =, new, RectangleInsets, (, 1, ,, 1, ,]
[=, VerticalAlignment, ., CENTER, ;, public, static, final, RectangleInsets, DEFAULT_PADDING, =, new, RectangleInsets, (, 1, ,, 1, ,, 1, ,]
[private, VerticalAlignment, verticalAlignment, ;, private, transient, EventListenerList, listenerList, ;, private, boolean, notify, ;, protected, Title, (, ), {, this, (]
[private, VerticalAlignment, verticalAlignment, ;, private, transient, EventListenerList, listenerList, ;, private, boolean, notify, ;, protected, Title, (, ), {, this, (]
[private, transient, EventListenerList, listenerList, ;, private, boolean, notify, ;, protected, Title, (, ), {, this, (, Title, ., DEFAULT_POSITION, ,]
[private, transient, EventListenerList, listenerList, ;, private, boolean, notify, ;, protected, Title, (, ), {, this, (, Title, ., DEFAULT_POSITION, ,]
[;, private, boolean, notify, ;, protected, Title, (, ), {, this, (, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,]
[;, private, boolean, notify, ;, protected, Title, (, ), {, this, (, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,]
[;, protected, Title, (, ), {, this, (, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,]
[;, protected, Title, (, ), {, this, (, Title, ., DEFAULT_POSITION, ,, Title, ., DEFAULT_HORIZONTAL_ALIGNMENT, ,, Title, ., DEFAULT_VERTICAL_ALIGNMENT, ,]
[., DEFAULT_PADDING, ), ;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {, this, (]
[), ;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {, this, (, position, ,]
[}, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {, this, (, position, ,, horizontalAlignment, ,]
[Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {, this, (, position, ,, horizontalAlignment, ,, verticalAlignment, ,]
[Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ), {, this, (, position, ,, horizontalAlignment, ,, verticalAlignment, ,]
[;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ,, RectangleInsets, padding, ), {, if, (]
[;, }, protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ,, RectangleInsets, padding, ), {, if, (]
[protected, Title, (, RectangleEdge, position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ,, RectangleInsets, padding, ), {, if, (, position, ==]
[position, ,, HorizontalAlignment, horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ,, RectangleInsets, padding, ), {, if, (, position, ==, null, ), {, throw]
[horizontalAlignment, ,, VerticalAlignment, verticalAlignment, ,, RectangleInsets, padding, ), {, if, (, position, ==, null, ), {, throw, new, IllegalArgumentException, (]
[padding, ), {, if, (, position, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (]
[padding, ), {, if, (, position, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (]
[{, if, (, position, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (, horizontalAlignment, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (, horizontalAlignment, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (, horizontalAlignment, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), ;, }, if, (, horizontalAlignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'horizontalAlignment' argument.", ), ;, }, if, (]
[), ;, }, if, (, horizontalAlignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'horizontalAlignment' argument.", ), ;, }, if, (]
[}, if, (, horizontalAlignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'horizontalAlignment' argument.", ), ;, }, if, (, verticalAlignment, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'horizontalAlignment' argument.", ), ;, }, if, (, verticalAlignment, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'horizontalAlignment' argument.", ), ;, }, if, (, verticalAlignment, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), ;, }, if, (, verticalAlignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'verticalAlignment' argument.", ), ;, }, if, (]
[), ;, }, if, (, verticalAlignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'verticalAlignment' argument.", ), ;, }, if, (]
[}, if, (, verticalAlignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'verticalAlignment' argument.", ), ;, }, if, (, padding, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'verticalAlignment' argument.", ), ;, }, if, (, padding, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "Null 'verticalAlignment' argument.", ), ;, }, if, (, padding, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, "Null 'verticalAlignment' argument.", ), ;, }, if, (, padding, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'spacer' argument.", ), ;, }]
[(, "Null 'verticalAlignment' argument.", ), ;, }, if, (, padding, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'spacer' argument.", ), ;, }]
[}, if, (, padding, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'spacer' argument.", ), ;, }, this, ., visible, =]
[(, padding, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'spacer' argument.", ), ;, }, this, ., visible, =, true, ;]
[(, padding, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'spacer' argument.", ), ;, }, this, ., visible, =, true, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'spacer' argument.", ), ;, }, this, ., visible, =, true, ;, this, ., position, =]
[throw, new, IllegalArgumentException, (, "Null 'spacer' argument.", ), ;, }, this, ., visible, =, true, ;, this, ., position, =, position, ;]
[throw, new, IllegalArgumentException, (, "Null 'spacer' argument.", ), ;, }, this, ., visible, =, true, ;, this, ., position, =, position, ;]
["Null 'spacer' argument.", ), ;, }, this, ., visible, =, true, ;, this, ., position, =, position, ;, this, ., horizontalAlignment, =]
[;, }, this, ., visible, =, true, ;, this, ., position, =, position, ;, this, ., horizontalAlignment, =, horizontalAlignment, ;]
[;, }, this, ., visible, =, true, ;, this, ., position, =, position, ;, this, ., horizontalAlignment, =, horizontalAlignment, ;]
[visible, =, true, ;, this, ., position, =, position, ;, this, ., horizontalAlignment, =, horizontalAlignment, ;, this, ., verticalAlignment, =]
[true, ;, this, ., position, =, position, ;, this, ., horizontalAlignment, =, horizontalAlignment, ;, this, ., verticalAlignment, =, verticalAlignment, ;]
[this, ., position, =, position, ;, this, ., horizontalAlignment, =, horizontalAlignment, ;, this, ., verticalAlignment, =, verticalAlignment, ;, setPadding, (]
[=, position, ;, this, ., horizontalAlignment, =, horizontalAlignment, ;, this, ., verticalAlignment, =, verticalAlignment, ;, setPadding, (, padding, ), ;]
[=, position, ;, this, ., horizontalAlignment, =, horizontalAlignment, ;, this, ., verticalAlignment, =, verticalAlignment, ;, setPadding, (, padding, ), ;]
[., horizontalAlignment, =, horizontalAlignment, ;, this, ., verticalAlignment, =, verticalAlignment, ;, setPadding, (, padding, ), ;, this, ., listenerList, =]
[this, ., verticalAlignment, =, verticalAlignment, ;, setPadding, (, padding, ), ;, this, ., listenerList, =, new, EventListenerList, (, ), ;]
[this, ., verticalAlignment, =, verticalAlignment, ;, setPadding, (, padding, ), ;, this, ., listenerList, =, new, EventListenerList, (, ), ;]
[verticalAlignment, ;, setPadding, (, padding, ), ;, this, ., listenerList, =, new, EventListenerList, (, ), ;, this, ., notify, =]
[=, new, EventListenerList, (, ), ;, this, ., notify, =, true, ;, }, public, boolean, isVisible, (, ), {, return]
[=, new, EventListenerList, (, ), ;, this, ., notify, =, true, ;, }, public, boolean, isVisible, (, ), {, return]
[public, boolean, isVisible, (, ), {, return, this, ., visible, ;, }, public, void, setVisible, (, boolean, visible, ), {]
[public, boolean, isVisible, (, ), {, return, this, ., visible, ;, }, public, void, setVisible, (, boolean, visible, ), {]
[), {, return, this, ., visible, ;, }, public, void, setVisible, (, boolean, visible, ), {, this, ., visible, =]
[return, this, ., visible, ;, }, public, void, setVisible, (, boolean, visible, ), {, this, ., visible, =, visible, ;]
[., visible, ;, }, public, void, setVisible, (, boolean, visible, ), {, this, ., visible, =, visible, ;, notifyListeners, (]
[}, public, void, setVisible, (, boolean, visible, ), {, this, ., visible, =, visible, ;, notifyListeners, (, new, TitleChangeEvent, (]
[=, visible, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, RectangleEdge, getPosition, (, ), {, return]
[=, visible, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, public, RectangleEdge, getPosition, (, ), {, return]
[getPosition, (, ), {, return, this, ., position, ;, }, public, void, setPosition, (, RectangleEdge, position, ), {, if, (]
[getPosition, (, ), {, return, this, ., position, ;, }, public, void, setPosition, (, RectangleEdge, position, ), {, if, (]
[), {, return, this, ., position, ;, }, public, void, setPosition, (, RectangleEdge, position, ), {, if, (, position, ==]
[., position, ;, }, public, void, setPosition, (, RectangleEdge, position, ), {, if, (, position, ==, null, ), {, throw]
[}, public, void, setPosition, (, RectangleEdge, position, ), {, if, (, position, ==, null, ), {, throw, new, IllegalArgumentException, (]
[position, ), {, if, (, position, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (]
[position, ), {, if, (, position, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (]
[position, ), {, if, (, position, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (]
[(, position, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (, this, ., position, !=]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (, this, ., position, !=, position, ), {]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (, this, ., position, !=, position, ), {]
[new, IllegalArgumentException, (, "Null 'position' argument.", ), ;, }, if, (, this, ., position, !=, position, ), {, this, ., position, =]
[(, "Null 'position' argument.", ), ;, }, if, (, this, ., position, !=, position, ), {, this, ., position, =, position, ;]
[), ;, }, if, (, this, ., position, !=, position, ), {, this, ., position, =, position, ;, notifyListeners, (]
[if, (, this, ., position, !=, position, ), {, this, ., position, =, position, ;, notifyListeners, (, new, TitleChangeEvent, (]
[position, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, HorizontalAlignment, getHorizontalAlignment, (, ), {, return]
[position, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, HorizontalAlignment, getHorizontalAlignment, (, ), {, return]
[getHorizontalAlignment, (, ), {, return, this, ., horizontalAlignment, ;, }, public, void, setHorizontalAlignment, (, HorizontalAlignment, alignment, ), {, if, (]
[getHorizontalAlignment, (, ), {, return, this, ., horizontalAlignment, ;, }, public, void, setHorizontalAlignment, (, HorizontalAlignment, alignment, ), {, if, (]
[), {, return, this, ., horizontalAlignment, ;, }, public, void, setHorizontalAlignment, (, HorizontalAlignment, alignment, ), {, if, (, alignment, ==]
[., horizontalAlignment, ;, }, public, void, setHorizontalAlignment, (, HorizontalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw]
[}, public, void, setHorizontalAlignment, (, HorizontalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (]
[alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (]
[alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (]
[alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (]
[(, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., horizontalAlignment, !=]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., horizontalAlignment, !=, alignment, ), {]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., horizontalAlignment, !=, alignment, ), {]
[new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., horizontalAlignment, !=, alignment, ), {, this, ., horizontalAlignment, =]
[(, "Null 'alignment' argument.", ), ;, }, if, (, this, ., horizontalAlignment, !=, alignment, ), {, this, ., horizontalAlignment, =, alignment, ;]
[), ;, }, if, (, this, ., horizontalAlignment, !=, alignment, ), {, this, ., horizontalAlignment, =, alignment, ;, notifyListeners, (]
[if, (, this, ., horizontalAlignment, !=, alignment, ), {, this, ., horizontalAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (]
[alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, VerticalAlignment, getVerticalAlignment, (, ), {, return]
[alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, VerticalAlignment, getVerticalAlignment, (, ), {, return]
[getVerticalAlignment, (, ), {, return, this, ., verticalAlignment, ;, }, public, void, setVerticalAlignment, (, VerticalAlignment, alignment, ), {, if, (]
[getVerticalAlignment, (, ), {, return, this, ., verticalAlignment, ;, }, public, void, setVerticalAlignment, (, VerticalAlignment, alignment, ), {, if, (]
[), {, return, this, ., verticalAlignment, ;, }, public, void, setVerticalAlignment, (, VerticalAlignment, alignment, ), {, if, (, alignment, ==]
[., verticalAlignment, ;, }, public, void, setVerticalAlignment, (, VerticalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw]
[}, public, void, setVerticalAlignment, (, VerticalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (]
[alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (]
[alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (]
[alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (]
[(, alignment, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., verticalAlignment, !=]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., verticalAlignment, !=, alignment, ), {]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., verticalAlignment, !=, alignment, ), {]
[new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, if, (, this, ., verticalAlignment, !=, alignment, ), {, this, ., verticalAlignment, =]
[(, "Null 'alignment' argument.", ), ;, }, if, (, this, ., verticalAlignment, !=, alignment, ), {, this, ., verticalAlignment, =, alignment, ;]
[), ;, }, if, (, this, ., verticalAlignment, !=, alignment, ), {, this, ., verticalAlignment, =, alignment, ;, notifyListeners, (]
[if, (, this, ., verticalAlignment, !=, alignment, ), {, this, ., verticalAlignment, =, alignment, ;, notifyListeners, (, new, TitleChangeEvent, (]
[alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, boolean, getNotify, (, ), {, return]
[alignment, ;, notifyListeners, (, new, TitleChangeEvent, (, this, ), ), ;, }, }, public, boolean, getNotify, (, ), {, return]
[public, boolean, getNotify, (, ), {, return, this, ., notify, ;, }, public, void, setNotify, (, boolean, flag, ), {]
[public, boolean, getNotify, (, ), {, return, this, ., notify, ;, }, public, void, setNotify, (, boolean, flag, ), {]
[), {, return, this, ., notify, ;, }, public, void, setNotify, (, boolean, flag, ), {, this, ., notify, =]
[., notify, ;, }, public, void, setNotify, (, boolean, flag, ), {, this, ., notify, =, flag, ;, if, (]
[}, public, void, setNotify, (, boolean, flag, ), {, this, ., notify, =, flag, ;, if, (, flag, ), {]
[void, setNotify, (, boolean, flag, ), {, this, ., notify, =, flag, ;, if, (, flag, ), {, notifyListeners, (]
[boolean, flag, ), {, this, ., notify, =, flag, ;, if, (, flag, ), {, notifyListeners, (, new, TitleChangeEvent, (]
[draw, (, Graphics2D, g2, ,, Rectangle2D, area, ), ;, public, Object, clone, (, ), throws, CloneNotSupportedException, {, Title, duplicate, =]
[g2, ,, Rectangle2D, area, ), ;, public, Object, clone, (, ), throws, CloneNotSupportedException, {, Title, duplicate, =, (, Title, )]
[g2, ,, Rectangle2D, area, ), ;, public, Object, clone, (, ), throws, CloneNotSupportedException, {, Title, duplicate, =, (, Title, )]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, Title, duplicate, =, (, Title, ), super, ., clone, (, ), ;]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, Title, duplicate, =, (, Title, ), super, ., clone, (, ), ;]
[), throws, CloneNotSupportedException, {, Title, duplicate, =, (, Title, ), super, ., clone, (, ), ;, duplicate, ., listenerList, =]
[=, (, Title, ), super, ., clone, (, ), ;, duplicate, ., listenerList, =, new, EventListenerList, (, ), ;, return]
[., listenerList, =, new, EventListenerList, (, ), ;, return, duplicate, ;, }, public, void, addChangeListener, (, TitleChangeListener, listener, ), {]
[., listenerList, =, new, EventListenerList, (, ), ;, return, duplicate, ;, }, public, void, addChangeListener, (, TitleChangeListener, listener, ), {]
[., listenerList, =, new, EventListenerList, (, ), ;, return, duplicate, ;, }, public, void, addChangeListener, (, TitleChangeListener, listener, ), {]
[), ;, return, duplicate, ;, }, public, void, addChangeListener, (, TitleChangeListener, listener, ), {, this, ., listenerList, ., add, (]
[;, }, public, void, addChangeListener, (, TitleChangeListener, listener, ), {, this, ., listenerList, ., add, (, TitleChangeListener, ., class, ,]
[listenerList, ., add, (, TitleChangeListener, ., class, ,, listener, ), ;, }, public, void, removeChangeListener, (, TitleChangeListener, listener, ), {]
[listenerList, ., add, (, TitleChangeListener, ., class, ,, listener, ), ;, }, public, void, removeChangeListener, (, TitleChangeListener, listener, ), {]
[listenerList, ., add, (, TitleChangeListener, ., class, ,, listener, ), ;, }, public, void, removeChangeListener, (, TitleChangeListener, listener, ), {]
[class, ,, listener, ), ;, }, public, void, removeChangeListener, (, TitleChangeListener, listener, ), {, this, ., listenerList, ., remove, (]
[;, }, public, void, removeChangeListener, (, TitleChangeListener, listener, ), {, this, ., listenerList, ., remove, (, TitleChangeListener, ., class, ,]
[remove, (, TitleChangeListener, ., class, ,, listener, ), ;, }, protected, void, notifyListeners, (, TitleChangeEvent, event, ), {, if, (]
[remove, (, TitleChangeListener, ., class, ,, listener, ), ;, }, protected, void, notifyListeners, (, TitleChangeEvent, event, ), {, if, (]
[protected, void, notifyListeners, (, TitleChangeEvent, event, ), {, if, (, this, ., notify, ), {, Object, [, ], listeners, =]
[protected, void, notifyListeners, (, TitleChangeEvent, event, ), {, if, (, this, ., notify, ), {, Object, [, ], listeners, =]
[protected, void, notifyListeners, (, TitleChangeEvent, event, ), {, if, (, this, ., notify, ), {, Object, [, ], listeners, =]
[), {, Object, [, ], listeners, =, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =]
[), {, Object, [, ], listeners, =, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =]
[), {, Object, [, ], listeners, =, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =]
[], listeners, =, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -]
[=, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;]
[=, this, ., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;]
[., listenerList, ., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;, i, >=]
[., getListenerList, (, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;]
[(, ), ;, for, (, int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;, i, -=]
[int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (]
[int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (]
[int, i, =, listeners, ., length, -, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (]
[=, listeners, ., length, -, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (, listeners, []
[length, -, 2, ;, i, >=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==]
[>=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class, ), {]
[>=, 0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class, ), {]
[0, ;, i, -=, 2, ), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class, ), {, (]
[-=, 2, ), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class, ), {, (, (, TitleChangeListener, )]
[-=, 2, ), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class, ), {, (, (, TitleChangeListener, )]
[), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class, ), {, (, (, TitleChangeListener, ), listeners, []
[), {, if, (, listeners, [, i, ], ==, TitleChangeListener, ., class, ), {, (, (, TitleChangeListener, ), listeners, []
[if, (, listeners, [, i, ], ==, TitleChangeListener, ., class, ), {, (, (, TitleChangeListener, ), listeners, [, i, +]
[==, TitleChangeListener, ., class, ), {, (, (, TitleChangeListener, ), listeners, [, i, +, 1, ], ), ., titleChanged, (]
[., titleChanged, (, event, ), ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., titleChanged, (, event, ), ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[(, event, ), ;, }, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[}, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, Title, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, Title, ), ), {, return, false, ;, }, Title, that, =]
[if, (, !, (, obj, instanceof, Title, ), ), {, return, false, ;, }, Title, that, =, (, Title, )]
[obj, instanceof, Title, ), ), {, return, false, ;, }, Title, that, =, (, Title, ), obj, ;, if, (]
[obj, instanceof, Title, ), ), {, return, false, ;, }, Title, that, =, (, Title, ), obj, ;, if, (]
[obj, instanceof, Title, ), ), {, return, false, ;, }, Title, that, =, (, Title, ), obj, ;, if, (]
[), {, return, false, ;, }, Title, that, =, (, Title, ), obj, ;, if, (, this, ., visible, !=]
[), {, return, false, ;, }, Title, that, =, (, Title, ), obj, ;, if, (, this, ., visible, !=]
[Title, that, =, (, Title, ), obj, ;, if, (, this, ., visible, !=, that, ., visible, ), {, return]
[), obj, ;, if, (, this, ., visible, !=, that, ., visible, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., visible, !=, that, ., visible, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., visible, !=, that, ., visible, ), {, return, false, ;, }, if, (]
[(, this, ., visible, !=, that, ., visible, ), {, return, false, ;, }, if, (, this, ., position, !=]
[(, this, ., visible, !=, that, ., visible, ), {, return, false, ;, }, if, (, this, ., position, !=]
[., visible, ), {, return, false, ;, }, if, (, this, ., position, !=, that, ., position, ), {, return]
[false, ;, }, if, (, this, ., position, !=, that, ., position, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., position, !=, that, ., position, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., position, !=, that, ., position, ), {, return, false, ;, }, if, (]
[(, this, ., position, !=, that, ., position, ), {, return, false, ;, }, if, (, this, ., horizontalAlignment, !=]
[(, this, ., position, !=, that, ., position, ), {, return, false, ;, }, if, (, this, ., horizontalAlignment, !=]
[., position, ), {, return, false, ;, }, if, (, this, ., horizontalAlignment, !=, that, ., horizontalAlignment, ), {, return]
[false, ;, }, if, (, this, ., horizontalAlignment, !=, that, ., horizontalAlignment, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., horizontalAlignment, !=, that, ., horizontalAlignment, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., horizontalAlignment, !=, that, ., horizontalAlignment, ), {, return, false, ;, }, if, (]
[(, this, ., horizontalAlignment, !=, that, ., horizontalAlignment, ), {, return, false, ;, }, if, (, this, ., verticalAlignment, !=]
[(, this, ., horizontalAlignment, !=, that, ., horizontalAlignment, ), {, return, false, ;, }, if, (, this, ., verticalAlignment, !=]
[., horizontalAlignment, ), {, return, false, ;, }, if, (, this, ., verticalAlignment, !=, that, ., verticalAlignment, ), {, return]
[false, ;, }, if, (, this, ., verticalAlignment, !=, that, ., verticalAlignment, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., verticalAlignment, !=, that, ., verticalAlignment, ), {, return, false, ;, }, if, (]
[false, ;, }, if, (, this, ., verticalAlignment, !=, that, ., verticalAlignment, ), {, return, false, ;, }, if, (]
[(, this, ., verticalAlignment, !=, that, ., verticalAlignment, ), {, return, false, ;, }, if, (, this, ., notify, !=]
[(, this, ., verticalAlignment, !=, that, ., verticalAlignment, ), {, return, false, ;, }, if, (, this, ., notify, !=]
[., verticalAlignment, ), {, return, false, ;, }, if, (, this, ., notify, !=, that, ., notify, ), {, return]
[return, false, ;, }, if, (, this, ., notify, !=, that, ., notify, ), {, return, false, ;, }, return]
[return, false, ;, }, if, (, this, ., notify, !=, that, ., notify, ), {, return, false, ;, }, return]
[if, (, this, ., notify, !=, that, ., notify, ), {, return, false, ;, }, return, super, ., equals, (]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =]
[(, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +]
[int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[int, hashCode, (, ), {, int, result, =, 193, ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[int, result, =, 193, ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., position, ), ;]
[=, 193, ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., position, ), ;, result, =]
[=, 193, ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., position, ), ;, result, =]
[=, 193, ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., position, ), ;, result, =]
[;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., position, ), ;, result, =, 37, *]
[=, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., position, ), ;, result, =, 37, *, result, +]
[=, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., position, ), ;, result, =, 37, *, result, +]
[+, ObjectUtilities, ., hashCode, (, this, ., position, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[+, ObjectUtilities, ., hashCode, (, this, ., position, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[this, ., position, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;]
[position, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =]
[position, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =]
[position, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =]
[;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =, 37, *]
[=, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =, 37, *, result, +]
[=, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =, 37, *, result, +]
[+, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[+, ObjectUtilities, ., hashCode, (, this, ., horizontalAlignment, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (]
[., horizontalAlignment, ), ;, result, =, 37, *, result, +, ObjectUtilities, ., hashCode, (, this, ., verticalAlignment, ), ;, return]
[(, this, ., verticalAlignment, ), ;, return, result, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[(, this, ., verticalAlignment, ), ;, return, result, ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {]
[{, stream, ., defaultWriteObject, (, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[{, stream, ., defaultWriteObject, (, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;, this, ., listenerList, =]
