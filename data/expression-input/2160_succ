[;, private, JSType, primitiveType, ;, private, ObjectType, primitiveObjectType, ;, private, final, String, name, ;, EnumElementType, (, JSTypeRegistry, registry, ,, JSType]
[), ;, this, ., primitiveType, =, elementType, ;, this, ., primitiveObjectType, =, elementType, ., toObjectType, (, ), ;, this, .]
[=, elementType, ;, this, ., primitiveObjectType, =, elementType, ., toObjectType, (, ), ;, this, ., name, =, name, ;, }]
[., primitiveType, =, elementType, ;, this, ., primitiveObjectType, =, elementType, ., toObjectType, (, ), ;, this, ., name, =, name]
[;, this, ., primitiveObjectType, =, elementType, ., toObjectType, (, ), ;, this, ., name, =, name, ;, }, @, Override]
[=, elementType, ., toObjectType, (, ), ;, this, ., name, =, name, ;, }, @, Override, public, PropertyMap, getPropertyMap, (]
[., primitiveObjectType, =, elementType, ., toObjectType, (, ), ;, this, ., name, =, name, ;, }, @, Override, public, PropertyMap]
[;, this, ., name, =, name, ;, }, @, Override, public, PropertyMap, getPropertyMap, (, ), {, return, primitiveObjectType, ==, null]
[., toObjectType, (, ), ;, this, ., name, =, name, ;, }, @, Override, public, PropertyMap, getPropertyMap, (, ), {]
[=, name, ;, }, @, Override, public, PropertyMap, getPropertyMap, (, ), {, return, primitiveObjectType, ==, null, ?, PropertyMap, ., immutableEmptyMap]
[., name, =, name, ;, }, @, Override, public, PropertyMap, getPropertyMap, (, ), {, return, primitiveObjectType, ==, null, ?, PropertyMap]
[;, }, @, Override, public, PropertyMap, getPropertyMap, (, ), {, return, primitiveObjectType, ==, null, ?, PropertyMap, ., immutableEmptyMap, (, )]
[;, }, @, Override, public, EnumElementType, toMaybeEnumElementType, (, ), {, return, this, ;, }, @, Override, public, boolean, matchesNumberContext, (]
[?, PropertyMap, ., immutableEmptyMap, (, ), :, primitiveObjectType, ., getPropertyMap, (, ), ;, }, @, Override, public, EnumElementType, toMaybeEnumElementType, (]
[==, null, ?, PropertyMap, ., immutableEmptyMap, (, ), :, primitiveObjectType, ., getPropertyMap, (, ), ;, }, @, Override, public, EnumElementType]
[?, PropertyMap, ., immutableEmptyMap, (, ), :, primitiveObjectType, ., getPropertyMap, (, ), ;, }, @, Override, public, EnumElementType, toMaybeEnumElementType, (]
[:, primitiveObjectType, ., getPropertyMap, (, ), ;, }, @, Override, public, EnumElementType, toMaybeEnumElementType, (, ), {, return, this, ;, }]
[., immutableEmptyMap, (, ), :, primitiveObjectType, ., getPropertyMap, (, ), ;, }, @, Override, public, EnumElementType, toMaybeEnumElementType, (, ), {]
[;, }, @, Override, public, EnumElementType, toMaybeEnumElementType, (, ), {, return, this, ;, }, @, Override, public, boolean, matchesNumberContext, (]
[., getPropertyMap, (, ), ;, }, @, Override, public, EnumElementType, toMaybeEnumElementType, (, ), {, return, this, ;, }, @, Override]
[;, }, @, Override, public, boolean, matchesNumberContext, (, ), {, return, primitiveType, ., matchesNumberContext, (, ), ;, }, @, Override]
[;, }, @, Override, public, boolean, matchesStringContext, (, ), {, return, primitiveType, ., matchesStringContext, (, ), ;, }, @, Override]
[., matchesNumberContext, (, ), ;, }, @, Override, public, boolean, matchesStringContext, (, ), {, return, primitiveType, ., matchesStringContext, (, )]
[;, }, @, Override, public, boolean, matchesObjectContext, (, ), {, return, primitiveType, ., matchesObjectContext, (, ), ;, }, @, Override]
[., matchesStringContext, (, ), ;, }, @, Override, public, boolean, matchesObjectContext, (, ), {, return, primitiveType, ., matchesObjectContext, (, )]
[;, }, @, Override, public, boolean, canBeCalled, (, ), {, return, primitiveType, ., canBeCalled, (, ), ;, }, @, Override]
[., matchesObjectContext, (, ), ;, }, @, Override, public, boolean, canBeCalled, (, ), {, return, primitiveType, ., canBeCalled, (, )]
[;, }, @, Override, public, boolean, isObject, (, ), {, return, primitiveType, ., isObject, (, ), ;, }, @, Override]
[., canBeCalled, (, ), ;, }, @, Override, public, boolean, isObject, (, ), {, return, primitiveType, ., isObject, (, )]
[;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, return, primitiveType, ., testForEquality, (, that, ), ;]
[., isObject, (, ), ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, return, primitiveType, ., testForEquality]
[;, }, @, Override, public, boolean, isNullable, (, ), {, return, primitiveType, ., isNullable, (, ), ;, }, @, Override]
[., testForEquality, (, that, ), ;, }, @, Override, public, boolean, isNullable, (, ), {, return, primitiveType, ., isNullable, (]
[), ;, }, @, Override, public, boolean, isNullable, (, ), {, return, primitiveType, ., isNullable, (, ), ;, }, @]
[;, }, @, Override, public, boolean, isNominalType, (, ), {, return, hasReferenceName, (, ), ;, }, @, Override, public, int]
[., isNullable, (, ), ;, }, @, Override, public, boolean, isNominalType, (, ), {, return, hasReferenceName, (, ), ;, }]
[;, }, @, Override, public, int, hashCode, (, ), {, if, (, hasReferenceName, (, ), ), {, return, getReferenceName, (]
[), {, return, getReferenceName, (, ), ., hashCode, (, ), ;, }, else, {, return, super, ., hashCode, (, )]
[;, }, else, {, return, super, ., hashCode, (, ), ;, }, }, @, Override, String, toStringHelper, (, boolean, forAnnotations]
[., hashCode, (, ), ;, }, else, {, return, super, ., hashCode, (, ), ;, }, }, @, Override, String]
[;, }, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return, forAnnotations, ?, primitiveType, ., toString, (, )]
[., hashCode, (, ), ;, }, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return, forAnnotations, ?, primitiveType]
[;, }, @, Override, public, String, getReferenceName, (, ), {, return, name, ;, }, @, Override, public, boolean, hasReferenceName, (]
[?, primitiveType, ., toString, (, ), :, (, getReferenceName, (, ), +, ".<", +, primitiveType, +, ">", ), ;, }]
[:, (, getReferenceName, (, ), +, ".<", +, primitiveType, +, ">", ), ;, }, @, Override, public, String, getReferenceName, (]
[., toString, (, ), :, (, getReferenceName, (, ), +, ".<", +, primitiveType, +, ">", ), ;, }, @, Override]
[;, }, @, Override, public, String, getReferenceName, (, ), {, return, name, ;, }, @, Override, public, boolean, hasReferenceName, (]
[), ;, }, @, Override, public, String, getReferenceName, (, ), {, return, name, ;, }, @, Override, public, boolean, hasReferenceName]
[+, ">", ), ;, }, @, Override, public, String, getReferenceName, (, ), {, return, name, ;, }, @, Override, public]
[+, primitiveType, +, ">", ), ;, }, @, Override, public, String, getReferenceName, (, ), {, return, name, ;, }, @]
[+, ".<", +, primitiveType, +, ">", ), ;, }, @, Override, public, String, getReferenceName, (, ), {, return, name, ;]
[+, primitiveType, +, ">", ), ;, }, @, Override, public, String, getReferenceName, (, ), {, return, name, ;, }, @]
[+, ">", ), ;, }, @, Override, public, String, getReferenceName, (, ), {, return, name, ;, }, @, Override, public]
[), ;, }, @, Override, public, String, getReferenceName, (, ), {, return, name, ;, }, @, Override, public, boolean, hasReferenceName]
[;, }, @, Override, public, boolean, hasReferenceName, (, ), {, return, true, ;, }, @, Override, public, boolean, isSubtype, (]
[;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, if, (, JSType, ., isSubtypeHelper, (, this, ,]
[), {, return, true, ;, }, else, {, return, primitiveType, ., isSubtype, (, that, ), ;, }, }, @, Override]
[., isSubtypeHelper, (, this, ,, that, ), ), {, return, true, ;, }, else, {, return, primitiveType, ., isSubtype, (]
[,, that, ), ), {, return, true, ;, }, else, {, return, primitiveType, ., isSubtype, (, that, ), ;, }]
[), ), {, return, true, ;, }, else, {, return, primitiveType, ., isSubtype, (, that, ), ;, }, }, @]
[;, }, else, {, return, primitiveType, ., isSubtype, (, that, ), ;, }, }, @, Override, public, <, T, >]
[;, }, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, return]
[., isSubtype, (, that, ), ;, }, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T]
[), ;, }, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {]
[;, }, @, Override, <, T, >, T, visit, (, RelationshipVisitor, <, T, >, visitor, ,, JSType, that, ), {]
[., caseEnumElementType, (, this, ), ;, }, @, Override, <, T, >, T, visit, (, RelationshipVisitor, <, T, >, visitor]
[), ;, }, @, Override, <, T, >, T, visit, (, RelationshipVisitor, <, T, >, visitor, ,, JSType, that, )]
[;, }, @, Override, boolean, defineProperty, (, String, propertyName, ,, JSType, type, ,, boolean, inferred, ,, Node, propertyNode, ), {]
[., caseEnumElementType, (, this, ,, that, ), ;, }, @, Override, boolean, defineProperty, (, String, propertyName, ,, JSType, type, ,]
[,, that, ), ;, }, @, Override, boolean, defineProperty, (, String, propertyName, ,, JSType, type, ,, boolean, inferred, ,, Node]
[), ;, }, @, Override, boolean, defineProperty, (, String, propertyName, ,, JSType, type, ,, boolean, inferred, ,, Node, propertyNode, )]
[;, }, @, Override, public, ObjectType, getImplicitPrototype, (, ), {, return, null, ;, }, @, Override, public, JSType, findPropertyType, (]
[;, }, @, Override, public, JSType, findPropertyType, (, String, propertyName, ), {, return, primitiveType, ., findPropertyType, (, propertyName, ), ;]
[;, }, @, Override, public, FunctionType, getConstructor, (, ), {, return, primitiveObjectType, ==, null, ?, null, :, primitiveObjectType, ., getConstructor]
[., findPropertyType, (, propertyName, ), ;, }, @, Override, public, FunctionType, getConstructor, (, ), {, return, primitiveObjectType, ==, null, ?]
[), ;, }, @, Override, public, FunctionType, getConstructor, (, ), {, return, primitiveObjectType, ==, null, ?, null, :, primitiveObjectType, .]
[;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return, primitiveType, ., autoboxesTo, (, ), ;, }, public, JSType]
[?, null, :, primitiveObjectType, ., getConstructor, (, ), ;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return, primitiveType]
[==, null, ?, null, :, primitiveObjectType, ., getConstructor, (, ), ;, }, @, Override, public, JSType, autoboxesTo, (, ), {]
[?, null, :, primitiveObjectType, ., getConstructor, (, ), ;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return, primitiveType]
[:, primitiveObjectType, ., getConstructor, (, ), ;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return, primitiveType, ., autoboxesTo]
[;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return, primitiveType, ., autoboxesTo, (, ), ;, }, public, JSType]
[., getConstructor, (, ), ;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return, primitiveType, ., autoboxesTo, (, )]
[;, }, public, JSType, getPrimitiveType, (, ), {, return, primitiveType, ;, }, JSType, meet, (, JSType, that, ), {, JSType]
[., autoboxesTo, (, ), ;, }, public, JSType, getPrimitiveType, (, ), {, return, primitiveType, ;, }, JSType, meet, (, JSType]
[;, }, JSType, meet, (, JSType, that, ), {, JSType, meetPrimitive, =, primitiveType, ., getGreatestSubtype, (, that, ), ;, if]
[;, if, (, meetPrimitive, ., isEmptyType, (, ), ), {, return, null, ;, }, else, {, return, new, EnumElementType, (]
[., getGreatestSubtype, (, that, ), ;, if, (, meetPrimitive, ., isEmptyType, (, ), ), {, return, null, ;, }, else]
[), ;, if, (, meetPrimitive, ., isEmptyType, (, ), ), {, return, null, ;, }, else, {, return, new, EnumElementType]
[), {, return, null, ;, }, else, {, return, new, EnumElementType, (, registry, ,, meetPrimitive, ,, name, ), ;, }]
[., isEmptyType, (, ), ), {, return, null, ;, }, else, {, return, new, EnumElementType, (, registry, ,, meetPrimitive, ,]
[;, }, else, {, return, new, EnumElementType, (, registry, ,, meetPrimitive, ,, name, ), ;, }, }, @, Override, JSType]
[;, }, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, primitiveType, =]
[,, meetPrimitive, ,, name, ), ;, }, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >]
[,, name, ), ;, }, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, )]
[), ;, }, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, primitiveType]
[=, primitiveType, ., resolve, (, t, ,, scope, ), ;, primitiveObjectType, =, ObjectType, ., cast, (, primitiveType, ), ;, return]
[;, primitiveObjectType, =, ObjectType, ., cast, (, primitiveType, ), ;, return, this, ;, }, }]
[., resolve, (, t, ,, scope, ), ;, primitiveObjectType, =, ObjectType, ., cast, (, primitiveType, ), ;, return, this, ;]
[,, scope, ), ;, primitiveObjectType, =, ObjectType, ., cast, (, primitiveType, ), ;, return, this, ;, }, }]
[), ;, primitiveObjectType, =, ObjectType, ., cast, (, primitiveType, ), ;, return, this, ;, }, }]
[=, ObjectType, ., cast, (, primitiveType, ), ;, return, this, ;, }, }]
[;, return, this, ;, }, }]
[., cast, (, primitiveType, ), ;, return, this, ;, }, }]
[), ;, return, this, ;, }, }]
[;, }, }]
