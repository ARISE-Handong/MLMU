[;, private, final, double, [, ], point, ;, public, EuclideanDoublePoint, (, final, double, [, ], point, ), {, this, .]
[=, point, ;, }, public, EuclideanDoublePoint, centroidOf, (, final, Collection, <, EuclideanDoublePoint, >, points, ), {, final, double, [, ]]
[., point, =, point, ;, }, public, EuclideanDoublePoint, centroidOf, (, final, Collection, <, EuclideanDoublePoint, >, points, ), {, final, double]
[;, }, public, EuclideanDoublePoint, centroidOf, (, final, Collection, <, EuclideanDoublePoint, >, points, ), {, final, double, [, ], centroid, =]
[;, for, (, final, EuclideanDoublePoint, p, :, points, ), {, for, (, int, i, =, 0, ;, i, <, centroid]
[], ;, for, (, final, EuclideanDoublePoint, p, :, points, ), {, for, (, int, i, =, 0, ;, i, <]
[., length, ], ;, for, (, final, EuclideanDoublePoint, p, :, points, ), {, for, (, int, i, =, 0, ;]
[), {, for, (, int, i, =, 0, ;, i, <, centroid, ., length, ;, i, ++, ), {, centroid]
[;, i, <, centroid, ., length, ;, i, ++, ), {, centroid, [, i, ], +=, p, ., getPoint, (]
[;, i, ++, ), {, centroid, [, i, ], +=, p, ., getPoint, (, ), [, i, ], ;, }]
[<, centroid, ., length, ;, i, ++, ), {, centroid, [, i, ], +=, p, ., getPoint, (, ), []
[;, i, ++, ), {, centroid, [, i, ], +=, p, ., getPoint, (, ), [, i, ], ;, }]
[., length, ;, i, ++, ), {, centroid, [, i, ], +=, p, ., getPoint, (, ), [, i, ]]
[), {, centroid, [, i, ], +=, p, ., getPoint, (, ), [, i, ], ;, }, }, for, (]
[++, ), {, centroid, [, i, ], +=, p, ., getPoint, (, ), [, i, ], ;, }, }, for]
[+=, p, ., getPoint, (, ), [, i, ], ;, }, }, for, (, int, i, =, 0, ;, i]
[[, i, ], +=, p, ., getPoint, (, ), [, i, ], ;, }, }, for, (, int, i, =]
[], +=, p, ., getPoint, (, ), [, i, ], ;, }, }, for, (, int, i, =, 0, ;]
[;, }, }, for, (, int, i, =, 0, ;, i, <, centroid, ., length, ;, i, ++, ), {]
[[, i, ], ;, }, }, for, (, int, i, =, 0, ;, i, <, centroid, ., length, ;, i]
[., getPoint, (, ), [, i, ], ;, }, }, for, (, int, i, =, 0, ;, i, <, centroid]
[], ;, }, }, for, (, int, i, =, 0, ;, i, <, centroid, ., length, ;, i, ++, )]
[;, i, <, centroid, ., length, ;, i, ++, ), {, centroid, [, i, ], /=, points, ., size, (]
[;, i, ++, ), {, centroid, [, i, ], /=, points, ., size, (, ), ;, }, return, new, EuclideanDoublePoint]
[<, centroid, ., length, ;, i, ++, ), {, centroid, [, i, ], /=, points, ., size, (, ), ;]
[;, i, ++, ), {, centroid, [, i, ], /=, points, ., size, (, ), ;, }, return, new, EuclideanDoublePoint]
[., length, ;, i, ++, ), {, centroid, [, i, ], /=, points, ., size, (, ), ;, }, return]
[), {, centroid, [, i, ], /=, points, ., size, (, ), ;, }, return, new, EuclideanDoublePoint, (, centroid, )]
[++, ), {, centroid, [, i, ], /=, points, ., size, (, ), ;, }, return, new, EuclideanDoublePoint, (, centroid]
[/=, points, ., size, (, ), ;, }, return, new, EuclideanDoublePoint, (, centroid, ), ;, }, public, double, distanceFrom, (]
[[, i, ], /=, points, ., size, (, ), ;, }, return, new, EuclideanDoublePoint, (, centroid, ), ;, }, public]
[], /=, points, ., size, (, ), ;, }, return, new, EuclideanDoublePoint, (, centroid, ), ;, }, public, double, distanceFrom]
[;, }, return, new, EuclideanDoublePoint, (, centroid, ), ;, }, public, double, distanceFrom, (, final, EuclideanDoublePoint, p, ), {, return]
[., size, (, ), ;, }, return, new, EuclideanDoublePoint, (, centroid, ), ;, }, public, double, distanceFrom, (, final, EuclideanDoublePoint]
[;, }, public, double, distanceFrom, (, final, EuclideanDoublePoint, p, ), {, return, MathArrays, ., distance, (, point, ,, p, .]
[), ;, }, public, double, distanceFrom, (, final, EuclideanDoublePoint, p, ), {, return, MathArrays, ., distance, (, point, ,, p]
[;, }, @, Override, public, boolean, equals, (, final, Object, other, ), {, if, (, !, (, other, instanceof, EuclideanDoublePoint]
[., distance, (, point, ,, p, ., getPoint, (, ), ), ;, }, @, Override, public, boolean, equals, (, final]
[,, p, ., getPoint, (, ), ), ;, }, @, Override, public, boolean, equals, (, final, Object, other, ), {]
[), ;, }, @, Override, public, boolean, equals, (, final, Object, other, ), {, if, (, !, (, other, instanceof]
[., getPoint, (, ), ), ;, }, @, Override, public, boolean, equals, (, final, Object, other, ), {, if, (]
[), {, return, false, ;, }, return, Arrays, ., equals, (, point, ,, (, (, EuclideanDoublePoint, ), other, ), .]
[), {, return, false, ;, }, return, Arrays, ., equals, (, point, ,, (, (, EuclideanDoublePoint, ), other, ), .]
[), ), {, return, false, ;, }, return, Arrays, ., equals, (, point, ,, (, (, EuclideanDoublePoint, ), other, )]
[instanceof, EuclideanDoublePoint, ), ), {, return, false, ;, }, return, Arrays, ., equals, (, point, ,, (, (, EuclideanDoublePoint, )]
[;, }, return, Arrays, ., equals, (, point, ,, (, (, EuclideanDoublePoint, ), other, ), ., point, ), ;, }]
[;, }, public, double, [, ], getPoint, (, ), {, return, point, ;, }, @, Override, public, int, hashCode, (]
[., equals, (, point, ,, (, (, EuclideanDoublePoint, ), other, ), ., point, ), ;, }, public, double, [, ]]
[,, (, (, EuclideanDoublePoint, ), other, ), ., point, ), ;, }, public, double, [, ], getPoint, (, ), {]
[), ;, }, public, double, [, ], getPoint, (, ), {, return, point, ;, }, @, Override, public, int, hashCode]
[., point, ), ;, }, public, double, [, ], getPoint, (, ), {, return, point, ;, }, @, Override, public]
[), ., point, ), ;, }, public, double, [, ], getPoint, (, ), {, return, point, ;, }, @, Override]
[), ., point, ), ;, }, public, double, [, ], getPoint, (, ), {, return, point, ;, }, @, Override]
[;, }, @, Override, public, int, hashCode, (, ), {, return, Arrays, ., hashCode, (, point, ), ;, }, @]
[;, }, @, Override, public, String, toString, (, ), {, return, Arrays, ., toString, (, point, ), ;, }, }]
[., hashCode, (, point, ), ;, }, @, Override, public, String, toString, (, ), {, return, Arrays, ., toString, (]
[), ;, }, @, Override, public, String, toString, (, ), {, return, Arrays, ., toString, (, point, ), ;, }]
[;, }, }]
[., toString, (, point, ), ;, }, }]
[), ;, }, }]
