[util, ., List, ;, public, class, NameBasedCandidateFilter, implements, MockCandidateFilter, {, private, final, MockCandidateFilter, next, ;, private, final, MockUtil, mockUtil, =]
[MockCandidateFilter, next, ;, private, final, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, public, NameBasedCandidateFilter, (, MockCandidateFilter, next, ), {]
[MockCandidateFilter, next, ;, private, final, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, public, NameBasedCandidateFilter, (, MockCandidateFilter, next, ), {]
[final, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, public, NameBasedCandidateFilter, (, MockCandidateFilter, next, ), {, this, ., next, =]
[(, Collection, <, Object, >, mocks, ,, Field, field, ,, Object, fieldInstance, ), {, List, <, Object, >, mockNameMatches, =]
[Object, fieldInstance, ), {, List, <, Object, >, mockNameMatches, =, new, ArrayList, <, Object, >, (, ), ;, if, (]
[Object, fieldInstance, ), {, List, <, Object, >, mockNameMatches, =, new, ArrayList, <, Object, >, (, ), ;, if, (]
[Object, fieldInstance, ), {, List, <, Object, >, mockNameMatches, =, new, ArrayList, <, Object, >, (, ), ;, if, (]
[Object, >, mockNameMatches, =, new, ArrayList, <, Object, >, (, ), ;, if, (, mocks, ., size, (, ), >]
[>, (, ), ;, if, (, mocks, ., size, (, ), >, 1, ), {, for, (, Object, mock, :]
[(, mocks, ., size, (, ), >, 1, ), {, for, (, Object, mock, :, mocks, ), {, if, (]
[(, mocks, ., size, (, ), >, 1, ), {, for, (, Object, mock, :, mocks, ), {, if, (]
[(, mocks, ., size, (, ), >, 1, ), {, for, (, Object, mock, :, mocks, ), {, if, (]
[), {, for, (, Object, mock, :, mocks, ), {, if, (, field, ., getName, (, ), ., equals, (]
[), {, for, (, Object, mock, :, mocks, ), {, if, (, field, ., getName, (, ), ., equals, (]
[), {, for, (, Object, mock, :, mocks, ), {, if, (, field, ., getName, (, ), ., equals, (]
[Object, mock, :, mocks, ), {, if, (, field, ., getName, (, ), ., equals, (, mockUtil, ., getMockName, (]
[., getName, (, ), ., equals, (, mockUtil, ., getMockName, (, mock, ), ., toString, (, ), ), ), {]
[., getName, (, ), ., equals, (, mockUtil, ., getMockName, (, mock, ), ., toString, (, ), ), ), {]
[., equals, (, mockUtil, ., getMockName, (, mock, ), ., toString, (, ), ), ), {, mockNameMatches, ., add, (]
[(, mock, ), ., toString, (, ), ), ), {, mockNameMatches, ., add, (, mock, ), ;, }, }, return]
[(, mock, ), ., toString, (, ), ), ), {, mockNameMatches, ., add, (, mock, ), ;, }, }, return]
[toString, (, ), ), ), {, mockNameMatches, ., add, (, mock, ), ;, }, }, return, next, ., filterCandidate, (]
[), ), ), {, mockNameMatches, ., add, (, mock, ), ;, }, }, return, next, ., filterCandidate, (, mockNameMatches, ,]
[), {, mockNameMatches, ., add, (, mock, ), ;, }, }, return, next, ., filterCandidate, (, mockNameMatches, ,, field, ,]
[(, mock, ), ;, }, }, return, next, ., filterCandidate, (, mockNameMatches, ,, field, ,, fieldInstance, ), ;, }, return]
[(, mock, ), ;, }, }, return, next, ., filterCandidate, (, mockNameMatches, ,, field, ,, fieldInstance, ), ;, }, return]
[}, }, return, next, ., filterCandidate, (, mockNameMatches, ,, field, ,, fieldInstance, ), ;, }, return, next, ., filterCandidate, (]
[return, next, ., filterCandidate, (, mockNameMatches, ,, field, ,, fieldInstance, ), ;, }, return, next, ., filterCandidate, (, mocks, ,]
[., filterCandidate, (, mockNameMatches, ,, field, ,, fieldInstance, ), ;, }, return, next, ., filterCandidate, (, mocks, ,, field, ,]
