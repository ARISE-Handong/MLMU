[., ReadablePartial, ;, import, org, ., joda, ., time, ., field, ., PreciseDurationDateTimeField, ;, final, class, BasicDayOfYearDateTimeField, extends, PreciseDurationDateTimeField, {]
[import, org, ., joda, ., time, ., field, ., PreciseDurationDateTimeField, ;, final, class, BasicDayOfYearDateTimeField, extends, PreciseDurationDateTimeField, {, @, SuppressWarnings, (]
[., PreciseDurationDateTimeField, ;, final, class, BasicDayOfYearDateTimeField, extends, PreciseDurationDateTimeField, {, @, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID, =]
[PreciseDurationDateTimeField, ;, final, class, BasicDayOfYearDateTimeField, extends, PreciseDurationDateTimeField, {, @, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID, =, -]
[=, -, 6821236822336841037L, ;, private, final, BasicChronology, iChronology, ;, BasicDayOfYearDateTimeField, (, BasicChronology, chronology, ,, DurationField, days, ), {, super, (]
[=, -, 6821236822336841037L, ;, private, final, BasicChronology, iChronology, ;, BasicDayOfYearDateTimeField, (, BasicChronology, chronology, ,, DurationField, days, ), {, super, (]
[BasicChronology, iChronology, ;, BasicDayOfYearDateTimeField, (, BasicChronology, chronology, ,, DurationField, days, ), {, super, (, DateTimeFieldType, ., dayOfYear, (, ), ,]
[BasicDayOfYearDateTimeField, (, BasicChronology, chronology, ,, DurationField, days, ), {, super, (, DateTimeFieldType, ., dayOfYear, (, ), ,, days, ), ;]
[BasicChronology, chronology, ,, DurationField, days, ), {, super, (, DateTimeFieldType, ., dayOfYear, (, ), ,, days, ), ;, iChronology, =]
[(, ), ,, days, ), ;, iChronology, =, chronology, ;, }, public, int, get, (, long, instant, ), {, return]
[(, ), ,, days, ), ;, iChronology, =, chronology, ;, }, public, int, get, (, long, instant, ), {, return]
[), ;, iChronology, =, chronology, ;, }, public, int, get, (, long, instant, ), {, return, iChronology, ., getDayOfYear, (]
[long, instant, ), {, return, iChronology, ., getDayOfYear, (, instant, ), ;, }, public, DurationField, getRangeDurationField, (, ), {, return]
[long, instant, ), {, return, iChronology, ., getDayOfYear, (, instant, ), ;, }, public, DurationField, getRangeDurationField, (, ), {, return]
[DurationField, getRangeDurationField, (, ), {, return, iChronology, ., years, (, ), ;, }, public, int, getMinimumValue, (, ), {, return]
[), ;, }, public, int, getMinimumValue, (, ), {, return, 1, ;, }, public, int, getMaximumValue, (, ), {, return]
[), ;, }, public, int, getMinimumValue, (, ), {, return, 1, ;, }, public, int, getMaximumValue, (, ), {, return]
[{, return, iChronology, ., getDaysInYearMax, (, ), ;, }, public, int, getMaximumValue, (, long, instant, ), {, int, year, =]
[{, return, iChronology, ., getDaysInYearMax, (, ), ;, }, public, int, getMaximumValue, (, long, instant, ), {, int, year, =]
[getDaysInYearMax, (, ), ;, }, public, int, getMaximumValue, (, long, instant, ), {, int, year, =, iChronology, ., getYear, (]
[}, public, int, getMaximumValue, (, long, instant, ), {, int, year, =, iChronology, ., getYear, (, instant, ), ;, return]
[}, public, int, getMaximumValue, (, long, instant, ), {, int, year, =, iChronology, ., getYear, (, instant, ), ;, return]
[(, long, instant, ), {, int, year, =, iChronology, ., getYear, (, instant, ), ;, return, iChronology, ., getDaysInYear, (]
[;, return, iChronology, ., getDaysInYear, (, year, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, partial, ), {, if, (]
[;, return, iChronology, ., getDaysInYear, (, year, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, partial, ), {, if, (]
[getDaysInYear, (, year, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, partial, ), {, if, (, partial, ., isSupported, (]
[getDaysInYear, (, year, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, partial, ), {, if, (, partial, ., isSupported, (]
[partial, ), {, if, (, partial, ., isSupported, (, DateTimeFieldType, ., year, (, ), ), ), {, int, year, =]
[partial, ), {, if, (, partial, ., isSupported, (, DateTimeFieldType, ., year, (, ), ), ), {, int, year, =]
[(, partial, ., isSupported, (, DateTimeFieldType, ., year, (, ), ), ), {, int, year, =, partial, ., get, (]
[(, partial, ., isSupported, (, DateTimeFieldType, ., year, (, ), ), ), {, int, year, =, partial, ., get, (]
[(, ), ), ), {, int, year, =, partial, ., get, (, DateTimeFieldType, ., year, (, ), ), ;, return]
[(, ), ), ), {, int, year, =, partial, ., get, (, DateTimeFieldType, ., year, (, ), ), ;, return]
[{, int, year, =, partial, ., get, (, DateTimeFieldType, ., year, (, ), ), ;, return, iChronology, ., getDaysInYear, (]
[., get, (, DateTimeFieldType, ., year, (, ), ), ;, return, iChronology, ., getDaysInYear, (, year, ), ;, }, return]
[., get, (, DateTimeFieldType, ., year, (, ), ), ;, return, iChronology, ., getDaysInYear, (, year, ), ;, }, return]
[(, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, partial, ,, int, [, ], values, ), {, int, size, =]
[(, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, partial, ,, int, [, ], values, ), {, int, size, =]
[int, [, ], values, ), {, int, size, =, partial, ., size, (, ), ;, for, (, int, i, =]
[], values, ), {, int, size, =, partial, ., size, (, ), ;, for, (, int, i, =, 0, ;]
[], values, ), {, int, size, =, partial, ., size, (, ), ;, for, (, int, i, =, 0, ;]
[), {, int, size, =, partial, ., size, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[int, size, =, partial, ., size, (, ), ;, for, (, int, i, =, 0, ;, i, <, size, ;]
[int, size, =, partial, ., size, (, ), ;, for, (, int, i, =, 0, ;, i, <, size, ;]
[(, ), ;, for, (, int, i, =, 0, ;, i, <, size, ;, i, ++, ), {, if, (]
[(, ), ;, for, (, int, i, =, 0, ;, i, <, size, ;, i, ++, ), {, if, (]
[(, ), ;, for, (, int, i, =, 0, ;, i, <, size, ;, i, ++, ), {, if, (]
[(, int, i, =, 0, ;, i, <, size, ;, i, ++, ), {, if, (, partial, ., getFieldType, (]
[=, 0, ;, i, <, size, ;, i, ++, ), {, if, (, partial, ., getFieldType, (, i, ), ==]
[=, 0, ;, i, <, size, ;, i, ++, ), {, if, (, partial, ., getFieldType, (, i, ), ==]
[{, if, (, partial, ., getFieldType, (, i, ), ==, DateTimeFieldType, ., year, (, ), ), {, int, year, =]
[{, if, (, partial, ., getFieldType, (, i, ), ==, DateTimeFieldType, ., year, (, ), ), {, int, year, =]
[(, partial, ., getFieldType, (, i, ), ==, DateTimeFieldType, ., year, (, ), ), {, int, year, =, values, []
[(, i, ), ==, DateTimeFieldType, ., year, (, ), ), {, int, year, =, values, [, i, ], ;, return]
[(, i, ), ==, DateTimeFieldType, ., year, (, ), ), {, int, year, =, values, [, i, ], ;, return]
[DateTimeFieldType, ., year, (, ), ), {, int, year, =, values, [, i, ], ;, return, iChronology, ., getDaysInYear, (]
[{, int, year, =, values, [, i, ], ;, return, iChronology, ., getDaysInYear, (, year, ), ;, }, }, return]
[{, int, year, =, values, [, i, ], ;, return, iChronology, ., getDaysInYear, (, year, ), ;, }, }, return]
[., getDaysInYearMax, (, ), ;, }, protected, int, getMaximumValueForSet, (, long, instant, ,, int, value, ), {, int, maxLessOne, =]
[., getDaysInYearMax, (, ), ;, }, protected, int, getMaximumValueForSet, (, long, instant, ,, int, value, ), {, int, maxLessOne, =]
[., getDaysInYearMax, (, ), ;, }, protected, int, getMaximumValueForSet, (, long, instant, ,, int, value, ), {, int, maxLessOne, =]
[protected, int, getMaximumValueForSet, (, long, instant, ,, int, value, ), {, int, maxLessOne, =, iChronology, ., getDaysInYearMax, (, ), -]
[(, long, instant, ,, int, value, ), {, int, maxLessOne, =, iChronology, ., getDaysInYearMax, (, ), -, 1, ;, return]
[(, long, instant, ,, int, value, ), {, int, maxLessOne, =, iChronology, ., getDaysInYearMax, (, ), -, 1, ;, return]
[long, instant, ,, int, value, ), {, int, maxLessOne, =, iChronology, ., getDaysInYearMax, (, ), -, 1, ;, return, (]
[long, instant, ,, int, value, ), {, int, maxLessOne, =, iChronology, ., getDaysInYearMax, (, ), -, 1, ;, return, (]
[long, instant, ,, int, value, ), {, int, maxLessOne, =, iChronology, ., getDaysInYearMax, (, ), -, 1, ;, return, (]
[,, int, value, ), {, int, maxLessOne, =, iChronology, ., getDaysInYearMax, (, ), -, 1, ;, return, (, value, >]
[value, ), {, int, maxLessOne, =, iChronology, ., getDaysInYearMax, (, ), -, 1, ;, return, (, value, >, maxLessOne, ||]
[value, ), {, int, maxLessOne, =, iChronology, ., getDaysInYearMax, (, ), -, 1, ;, return, (, value, >, maxLessOne, ||]
[{, int, maxLessOne, =, iChronology, ., getDaysInYearMax, (, ), -, 1, ;, return, (, value, >, maxLessOne, ||, value, <]
[=, iChronology, ., getDaysInYearMax, (, ), -, 1, ;, return, (, value, >, maxLessOne, ||, value, <, 1, ), ?]
[., getDaysInYearMax, (, ), -, 1, ;, return, (, value, >, maxLessOne, ||, value, <, 1, ), ?, getMaximumValue, (]
[), -, 1, ;, return, (, value, >, maxLessOne, ||, value, <, 1, ), ?, getMaximumValue, (, instant, ), :]
[value, <, 1, ), ?, getMaximumValue, (, instant, ), :, maxLessOne, ;, }, private, Object, readResolve, (, ), {, return]
[value, <, 1, ), ?, getMaximumValue, (, instant, ), :, maxLessOne, ;, }, private, Object, readResolve, (, ), {, return]
