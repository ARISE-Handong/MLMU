[;, public, Timer, (, long, durationMillis, ), {, validateInput, (, durationMillis, ), ;, this, ., durationMillis, =, durationMillis, ;, }]
[;, public, Timer, (, long, durationMillis, ), {, validateInput, (, durationMillis, ), ;, this, ., durationMillis, =, durationMillis, ;, }]
[;, this, ., durationMillis, =, durationMillis, ;, }, public, boolean, isCounting, (, ), {, assert, startTime, !=, -, 1, ;]
[), ;, this, ., durationMillis, =, durationMillis, ;, }, public, boolean, isCounting, (, ), {, assert, startTime, !=, -, 1]
[=, durationMillis, ;, }, public, boolean, isCounting, (, ), {, assert, startTime, !=, -, 1, ;, return, System, ., currentTimeMillis]
[., durationMillis, =, durationMillis, ;, }, public, boolean, isCounting, (, ), {, assert, startTime, !=, -, 1, ;, return, System]
[;, }, public, boolean, isCounting, (, ), {, assert, startTime, !=, -, 1, ;, return, System, ., currentTimeMillis, (, )]
[;, return, System, ., currentTimeMillis, (, ), -, startTime, <=, durationMillis, ;, }, public, void, start, (, ), {, startTime]
[!=, -, 1, ;, return, System, ., currentTimeMillis, (, ), -, startTime, <=, durationMillis, ;, }, public, void, start, (]
[;, return, System, ., currentTimeMillis, (, ), -, startTime, <=, durationMillis, ;, }, public, void, start, (, ), {, startTime]
[;, return, System, ., currentTimeMillis, (, ), -, startTime, <=, durationMillis, ;, }, public, void, start, (, ), {, startTime]
[;, }, public, void, start, (, ), {, startTime, =, System, ., currentTimeMillis, (, ), ;, }, private, void, validateInput]
[<=, durationMillis, ;, }, public, void, start, (, ), {, startTime, =, System, ., currentTimeMillis, (, ), ;, }, private]
[-, startTime, <=, durationMillis, ;, }, public, void, start, (, ), {, startTime, =, System, ., currentTimeMillis, (, ), ;]
[., currentTimeMillis, (, ), -, startTime, <=, durationMillis, ;, }, public, void, start, (, ), {, startTime, =, System, .]
[<=, durationMillis, ;, }, public, void, start, (, ), {, startTime, =, System, ., currentTimeMillis, (, ), ;, }, private]
[;, }, public, void, start, (, ), {, startTime, =, System, ., currentTimeMillis, (, ), ;, }, private, void, validateInput]
[=, System, ., currentTimeMillis, (, ), ;, }, private, void, validateInput, (, long, durationMillis, ), {, if, (, durationMillis, <]
[;, }, private, void, validateInput, (, long, durationMillis, ), {, if, (, durationMillis, <, 0, ), {, new, Reporter, (]
[., currentTimeMillis, (, ), ;, }, private, void, validateInput, (, long, durationMillis, ), {, if, (, durationMillis, <, 0, )]
[), {, new, Reporter, (, ), ., cannotCreateTimerWithNegativeDurationTime, (, durationMillis, ), ;, }, }, public, long, duration, (, ), {]
[<, 0, ), {, new, Reporter, (, ), ., cannotCreateTimerWithNegativeDurationTime, (, durationMillis, ), ;, }, }, public, long, duration, (]
[), {, new, Reporter, (, ), ., cannotCreateTimerWithNegativeDurationTime, (, durationMillis, ), ;, }, }, public, long, duration, (, ), {]
[;, }, }, public, long, duration, (, ), {, return, durationMillis, ;, }, }]
[., cannotCreateTimerWithNegativeDurationTime, (, durationMillis, ), ;, }, }, public, long, duration, (, ), {, return, durationMillis, ;, }, }]
[), ;, }, }, public, long, duration, (, ), {, return, durationMillis, ;, }, }]
[;, }, }]
