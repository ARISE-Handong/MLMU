[=, name, ;, stepHandlers, =, new, ArrayList, <, StepHandler, >, (, ), ;, stepStart, =, Double, ., NaN, ;, stepSize]
[., name, =, name, ;, stepHandlers, =, new, ArrayList, <, StepHandler, >, (, ), ;, stepStart, =, Double, ., NaN]
[;, stepHandlers, =, new, ArrayList, <, StepHandler, >, (, ), ;, stepStart, =, Double, ., NaN, ;, stepSize, =, Double]
[=, new, ArrayList, <, StepHandler, >, (, ), ;, stepStart, =, Double, ., NaN, ;, stepSize, =, Double, ., NaN]
[;, stepStart, =, Double, ., NaN, ;, stepSize, =, Double, ., NaN, ;, eventsStates, =, new, ArrayList, <, EventState, >]
[=, Double, ., NaN, ;, stepSize, =, Double, ., NaN, ;, eventsStates, =, new, ArrayList, <, EventState, >, (, )]
[;, stepSize, =, Double, ., NaN, ;, eventsStates, =, new, ArrayList, <, EventState, >, (, ), ;, statesInitialized, =, false]
[., NaN, ;, stepSize, =, Double, ., NaN, ;, eventsStates, =, new, ArrayList, <, EventState, >, (, ), ;, statesInitialized]
[=, Double, ., NaN, ;, eventsStates, =, new, ArrayList, <, EventState, >, (, ), ;, statesInitialized, =, false, ;, evaluations]
[;, eventsStates, =, new, ArrayList, <, EventState, >, (, ), ;, statesInitialized, =, false, ;, evaluations, =, new, Incrementor, (]
[., NaN, ;, eventsStates, =, new, ArrayList, <, EventState, >, (, ), ;, statesInitialized, =, false, ;, evaluations, =, new]
[=, new, ArrayList, <, EventState, >, (, ), ;, statesInitialized, =, false, ;, evaluations, =, new, Incrementor, (, ), ;]
[;, statesInitialized, =, false, ;, evaluations, =, new, Incrementor, (, ), ;, setMaxEvaluations, (, -, 1, ), ;, evaluations, .]
[=, false, ;, evaluations, =, new, Incrementor, (, ), ;, setMaxEvaluations, (, -, 1, ), ;, evaluations, ., resetCount, (]
[;, evaluations, =, new, Incrementor, (, ), ;, setMaxEvaluations, (, -, 1, ), ;, evaluations, ., resetCount, (, ), ;]
[=, new, Incrementor, (, ), ;, setMaxEvaluations, (, -, 1, ), ;, evaluations, ., resetCount, (, ), ;, }, protected]
[;, setMaxEvaluations, (, -, 1, ), ;, evaluations, ., resetCount, (, ), ;, }, protected, AbstractIntegrator, (, ), {, this]
[;, evaluations, ., resetCount, (, ), ;, }, protected, AbstractIntegrator, (, ), {, this, (, null, ), ;, }, public]
[), ;, evaluations, ., resetCount, (, ), ;, }, protected, AbstractIntegrator, (, ), {, this, (, null, ), ;, }]
[), ;, evaluations, ., resetCount, (, ), ;, }, protected, AbstractIntegrator, (, ), {, this, (, null, ), ;, }]
[;, }, protected, AbstractIntegrator, (, ), {, this, (, null, ), ;, }, public, String, getName, (, ), {, return]
[., resetCount, (, ), ;, }, protected, AbstractIntegrator, (, ), {, this, (, null, ), ;, }, public, String, getName]
[), ;, }, public, String, getName, (, ), {, return, name, ;, }, public, void, addStepHandler, (, final, StepHandler, handler]
[;, }, public, void, addStepHandler, (, final, StepHandler, handler, ), {, stepHandlers, ., add, (, handler, ), ;, }, public]
[;, }, public, Collection, <, StepHandler, >, getStepHandlers, (, ), {, return, Collections, ., unmodifiableCollection, (, stepHandlers, ), ;, }]
[., add, (, handler, ), ;, }, public, Collection, <, StepHandler, >, getStepHandlers, (, ), {, return, Collections, ., unmodifiableCollection]
[), ;, }, public, Collection, <, StepHandler, >, getStepHandlers, (, ), {, return, Collections, ., unmodifiableCollection, (, stepHandlers, ), ;]
[;, }, public, void, clearStepHandlers, (, ), {, stepHandlers, ., clear, (, ), ;, }, public, void, addEventHandler, (, final]
[., unmodifiableCollection, (, stepHandlers, ), ;, }, public, void, clearStepHandlers, (, ), {, stepHandlers, ., clear, (, ), ;, }]
[), ;, }, public, void, clearStepHandlers, (, ), {, stepHandlers, ., clear, (, ), ;, }, public, void, addEventHandler, (]
[;, }, public, void, addEventHandler, (, final, EventHandler, handler, ,, final, double, maxCheckInterval, ,, final, double, convergence, ,, final, int]
[., clear, (, ), ;, }, public, void, addEventHandler, (, final, EventHandler, handler, ,, final, double, maxCheckInterval, ,, final, double]
[;, }, public, void, addEventHandler, (, final, EventHandler, handler, ,, final, double, maxCheckInterval, ,, final, double, convergence, ,, final, int]
[,, maxCheckInterval, ,, convergence, ,, maxIterationCount, ,, new, BracketingNthOrderBrentSolver, (, convergence, ,, 5, ), ), ;, }, public, void, addEventHandler]
[,, convergence, ,, maxIterationCount, ,, new, BracketingNthOrderBrentSolver, (, convergence, ,, 5, ), ), ;, }, public, void, addEventHandler, (, final]
[,, maxIterationCount, ,, new, BracketingNthOrderBrentSolver, (, convergence, ,, 5, ), ), ;, }, public, void, addEventHandler, (, final, EventHandler, handler]
[,, new, BracketingNthOrderBrentSolver, (, convergence, ,, 5, ), ), ;, }, public, void, addEventHandler, (, final, EventHandler, handler, ,, final]
[), ;, }, public, void, addEventHandler, (, final, EventHandler, handler, ,, final, double, maxCheckInterval, ,, final, double, convergence, ,, final]
[,, 5, ), ), ;, }, public, void, addEventHandler, (, final, EventHandler, handler, ,, final, double, maxCheckInterval, ,, final, double]
[), ), ;, }, public, void, addEventHandler, (, final, EventHandler, handler, ,, final, double, maxCheckInterval, ,, final, double, convergence, ,]
[;, }, public, Collection, <, EventHandler, >, getEventHandlers, (, ), {, final, List, <, EventHandler, >, list, =, new, ArrayList]
[., add, (, new, EventState, (, handler, ,, maxCheckInterval, ,, convergence, ,, maxIterationCount, ,, solver, ), ), ;, }, public]
[), ;, }, public, Collection, <, EventHandler, >, getEventHandlers, (, ), {, final, List, <, EventHandler, >, list, =, new]
[,, maxCheckInterval, ,, convergence, ,, maxIterationCount, ,, solver, ), ), ;, }, public, Collection, <, EventHandler, >, getEventHandlers, (, )]
[,, convergence, ,, maxIterationCount, ,, solver, ), ), ;, }, public, Collection, <, EventHandler, >, getEventHandlers, (, ), {, final]
[,, maxIterationCount, ,, solver, ), ), ;, }, public, Collection, <, EventHandler, >, getEventHandlers, (, ), {, final, List, <]
[,, solver, ), ), ;, }, public, Collection, <, EventHandler, >, getEventHandlers, (, ), {, final, List, <, EventHandler, >]
[), ), ;, }, public, Collection, <, EventHandler, >, getEventHandlers, (, ), {, final, List, <, EventHandler, >, list, =]
[;, for, (, EventState, state, :, eventsStates, ), {, list, ., add, (, state, ., getEventHandler, (, ), ), ;]
[), ;, for, (, EventState, state, :, eventsStates, ), {, list, ., add, (, state, ., getEventHandler, (, ), )]
[., size, (, ), ), ;, for, (, EventState, state, :, eventsStates, ), {, list, ., add, (, state, .]
[), {, list, ., add, (, state, ., getEventHandler, (, ), ), ;, }, return, Collections, ., unmodifiableCollection, (, list]
[;, }, return, Collections, ., unmodifiableCollection, (, list, ), ;, }, public, void, clearEventHandlers, (, ), {, eventsStates, ., clear]
[., add, (, state, ., getEventHandler, (, ), ), ;, }, return, Collections, ., unmodifiableCollection, (, list, ), ;, }]
[), ;, }, return, Collections, ., unmodifiableCollection, (, list, ), ;, }, public, void, clearEventHandlers, (, ), {, eventsStates, .]
[., getEventHandler, (, ), ), ;, }, return, Collections, ., unmodifiableCollection, (, list, ), ;, }, public, void, clearEventHandlers, (]
[;, }, public, void, clearEventHandlers, (, ), {, eventsStates, ., clear, (, ), ;, }, public, double, getCurrentStepStart, (, )]
[., unmodifiableCollection, (, list, ), ;, }, public, void, clearEventHandlers, (, ), {, eventsStates, ., clear, (, ), ;, }]
[), ;, }, public, void, clearEventHandlers, (, ), {, eventsStates, ., clear, (, ), ;, }, public, double, getCurrentStepStart, (]
[;, }, public, double, getCurrentStepStart, (, ), {, return, stepStart, ;, }, public, double, getCurrentSignedStepsize, (, ), {, return, stepSize]
[., clear, (, ), ;, }, public, double, getCurrentStepStart, (, ), {, return, stepStart, ;, }, public, double, getCurrentSignedStepsize, (]
[;, }, public, double, getCurrentSignedStepsize, (, ), {, return, stepSize, ;, }, public, void, setMaxEvaluations, (, int, maxEvaluations, ), {]
[;, }, public, void, setMaxEvaluations, (, int, maxEvaluations, ), {, evaluations, ., setMaximalCount, (, (, maxEvaluations, <, 0, ), ?]
[;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (]
[., setMaximalCount, (, (, maxEvaluations, <, 0, ), ?, Integer, ., MAX_VALUE, :, maxEvaluations, ), ;, }, public, int, getMaxEvaluations]
[), ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations]
[?, Integer, ., MAX_VALUE, :, maxEvaluations, ), ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (]
[), ?, Integer, ., MAX_VALUE, :, maxEvaluations, ), ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount]
[<, 0, ), ?, Integer, ., MAX_VALUE, :, maxEvaluations, ), ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations]
[), ?, Integer, ., MAX_VALUE, :, maxEvaluations, ), ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount]
[:, maxEvaluations, ), ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public]
[., MAX_VALUE, :, maxEvaluations, ), ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;]
[), ;, }, public, int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations]
[;, }, public, int, getEvaluations, (, ), {, return, evaluations, ., getCount, (, ), ;, }, protected, void, initIntegration, (]
[., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (, ), {, return, evaluations, ., getCount, (, ), ;, }]
[;, }, protected, void, initIntegration, (, final, double, t0, ,, final, double, [, ], y0, ,, final, double, t, )]
[., getCount, (, ), ;, }, protected, void, initIntegration, (, final, double, t0, ,, final, double, [, ], y0, ,]
[;, for, (, final, EventState, state, :, eventsStates, ), {, state, ., setExpandable, (, expandable, ), ;, state, ., getEventHandler]
[., resetCount, (, ), ;, for, (, final, EventState, state, :, eventsStates, ), {, state, ., setExpandable, (, expandable, )]
[), {, state, ., setExpandable, (, expandable, ), ;, state, ., getEventHandler, (, ), ., init, (, t0, ,, y0]
[;, state, ., getEventHandler, (, ), ., init, (, t0, ,, y0, ,, t, ), ;, }, for, (, StepHandler]
[., setExpandable, (, expandable, ), ;, state, ., getEventHandler, (, ), ., init, (, t0, ,, y0, ,, t, )]
[), ;, state, ., getEventHandler, (, ), ., init, (, t0, ,, y0, ,, t, ), ;, }, for, (]
[;, }, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., init, (, t0, ,, y0, ,, t, )]
[., init, (, t0, ,, y0, ,, t, ), ;, }, for, (, StepHandler, handler, :, stepHandlers, ), {, handler]
[., getEventHandler, (, ), ., init, (, t0, ,, y0, ,, t, ), ;, }, for, (, StepHandler, handler, :]
[,, y0, ,, t, ), ;, }, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., init, (, t0]
[,, t, ), ;, }, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., init, (, t0, ,, y0]
[), ;, }, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., init, (, t0, ,, y0, ,, t]
[), {, handler, ., init, (, t0, ,, y0, ,, t, ), ;, }, setStateInitialized, (, false, ), ;, }]
[;, }, setStateInitialized, (, false, ), ;, }, protected, void, setEquations, (, final, ExpandableStatefulODE, equations, ), {, this, ., expandable]
[., init, (, t0, ,, y0, ,, t, ), ;, }, setStateInitialized, (, false, ), ;, }, protected, void, setEquations]
[,, y0, ,, t, ), ;, }, setStateInitialized, (, false, ), ;, }, protected, void, setEquations, (, final, ExpandableStatefulODE, equations]
[,, t, ), ;, }, setStateInitialized, (, false, ), ;, }, protected, void, setEquations, (, final, ExpandableStatefulODE, equations, ), {]
[), ;, }, setStateInitialized, (, false, ), ;, }, protected, void, setEquations, (, final, ExpandableStatefulODE, equations, ), {, this, .]
[;, }, protected, void, setEquations, (, final, ExpandableStatefulODE, equations, ), {, this, ., expandable, =, equations, ;, }, protected, ExpandableStatefulODE]
[), ;, }, protected, void, setEquations, (, final, ExpandableStatefulODE, equations, ), {, this, ., expandable, =, equations, ;, }, protected]
[=, equations, ;, }, protected, ExpandableStatefulODE, getExpandable, (, ), {, return, expandable, ;, }, protected, Incrementor, getEvaluationsCounter, (, ), {]
[., expandable, =, equations, ;, }, protected, ExpandableStatefulODE, getExpandable, (, ), {, return, expandable, ;, }, protected, Incrementor, getEvaluationsCounter, (]
[;, }, protected, ExpandableStatefulODE, getExpandable, (, ), {, return, expandable, ;, }, protected, Incrementor, getEvaluationsCounter, (, ), {, return, evaluations]
[;, }, protected, Incrementor, getEvaluationsCounter, (, ), {, return, evaluations, ;, }, public, double, integrate, (, final, FirstOrderDifferentialEquations, equations, ,]
[;, }, public, double, integrate, (, final, FirstOrderDifferentialEquations, equations, ,, final, double, t0, ,, final, double, [, ], y0, ,]
[), {, throw, new, DimensionMismatchException, (, y0, ., length, ,, equations, ., getDimension, (, ), ), ;, }, if, (]
[!=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (, y0, ., length, ,, equations, ., getDimension, (]
[., length, !=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (, y0, ., length, ,, equations, .]
[), {, throw, new, DimensionMismatchException, (, y0, ., length, ,, equations, ., getDimension, (, ), ), ;, }, if, (]
[., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (, y0, ., length, ,, equations, ., getDimension, (, ), )]
[;, }, if, (, y, ., length, !=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (, y]
[,, equations, ., getDimension, (, ), ), ;, }, if, (, y, ., length, !=, equations, ., getDimension, (, )]
[., length, ,, equations, ., getDimension, (, ), ), ;, }, if, (, y, ., length, !=, equations, ., getDimension]
[), ;, }, if, (, y, ., length, !=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (]
[., getDimension, (, ), ), ;, }, if, (, y, ., length, !=, equations, ., getDimension, (, ), ), {]
[), {, throw, new, DimensionMismatchException, (, y, ., length, ,, equations, ., getDimension, (, ), ), ;, }, final, ExpandableStatefulODE]
[!=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (, y, ., length, ,, equations, ., getDimension, (]
[., length, !=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (, y, ., length, ,, equations, .]
[), {, throw, new, DimensionMismatchException, (, y, ., length, ,, equations, ., getDimension, (, ), ), ;, }, final, ExpandableStatefulODE]
[., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (, y, ., length, ,, equations, ., getDimension, (, ), )]
[;, }, final, ExpandableStatefulODE, expandableODE, =, new, ExpandableStatefulODE, (, equations, ), ;, expandableODE, ., setTime, (, t0, ), ;, expandableODE]
[,, equations, ., getDimension, (, ), ), ;, }, final, ExpandableStatefulODE, expandableODE, =, new, ExpandableStatefulODE, (, equations, ), ;, expandableODE]
[., length, ,, equations, ., getDimension, (, ), ), ;, }, final, ExpandableStatefulODE, expandableODE, =, new, ExpandableStatefulODE, (, equations, )]
[), ;, }, final, ExpandableStatefulODE, expandableODE, =, new, ExpandableStatefulODE, (, equations, ), ;, expandableODE, ., setTime, (, t0, ), ;]
[., getDimension, (, ), ), ;, }, final, ExpandableStatefulODE, expandableODE, =, new, ExpandableStatefulODE, (, equations, ), ;, expandableODE, ., setTime]
[;, expandableODE, ., setTime, (, t0, ), ;, expandableODE, ., setPrimaryState, (, y0, ), ;, integrate, (, expandableODE, ,, t]
[), ;, expandableODE, ., setTime, (, t0, ), ;, expandableODE, ., setPrimaryState, (, y0, ), ;, integrate, (, expandableODE, ,]
[;, expandableODE, ., setPrimaryState, (, y0, ), ;, integrate, (, expandableODE, ,, t, ), ;, System, ., arraycopy, (, expandableODE]
[., setTime, (, t0, ), ;, expandableODE, ., setPrimaryState, (, y0, ), ;, integrate, (, expandableODE, ,, t, ), ;]
[), ;, expandableODE, ., setPrimaryState, (, y0, ), ;, integrate, (, expandableODE, ,, t, ), ;, System, ., arraycopy, (]
[;, integrate, (, expandableODE, ,, t, ), ;, System, ., arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,, 0, ,]
[., setPrimaryState, (, y0, ), ;, integrate, (, expandableODE, ,, t, ), ;, System, ., arraycopy, (, expandableODE, ., getPrimaryState]
[), ;, integrate, (, expandableODE, ,, t, ), ;, System, ., arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,, 0]
[;, System, ., arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,, 0, ,, y, ,, 0, ,, y, ., length]
[,, t, ), ;, System, ., arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,, 0, ,, y, ,, 0, ,]
[), ;, System, ., arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,, 0, ,, y, ,, 0, ,, y, .]
[;, return, expandableODE, ., getTime, (, ), ;, }, public, abstract, void, integrate, (, ExpandableStatefulODE, equations, ,, double, t, )]
[., arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;]
[,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, return, expandableODE, ., getTime, (, ), ;, }]
[., getPrimaryState, (, ), ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, return, expandableODE, ., getTime]
[,, y, ,, 0, ,, y, ., length, ), ;, return, expandableODE, ., getTime, (, ), ;, }, public, abstract]
[,, 0, ,, y, ., length, ), ;, return, expandableODE, ., getTime, (, ), ;, }, public, abstract, void, integrate]
[,, y, ., length, ), ;, return, expandableODE, ., getTime, (, ), ;, }, public, abstract, void, integrate, (, ExpandableStatefulODE]
[), ;, return, expandableODE, ., getTime, (, ), ;, }, public, abstract, void, integrate, (, ExpandableStatefulODE, equations, ,, double, t]
[., length, ), ;, return, expandableODE, ., getTime, (, ), ;, }, public, abstract, void, integrate, (, ExpandableStatefulODE, equations, ,]
[;, }, public, abstract, void, integrate, (, ExpandableStatefulODE, equations, ,, double, t, ), throws, NumberIsTooSmallException, ,, DimensionMismatchException, ,, MaxCountExceededException, ,]
[., getTime, (, ), ;, }, public, abstract, void, integrate, (, ExpandableStatefulODE, equations, ,, double, t, ), throws, NumberIsTooSmallException, ,]
[;, expandable, ., computeDerivatives, (, t, ,, y, ,, yDot, ), ;, }, protected, void, setStateInitialized, (, final, boolean, stateInitialized]
[., incrementCount, (, ), ;, expandable, ., computeDerivatives, (, t, ,, y, ,, yDot, ), ;, }, protected, void, setStateInitialized]
[;, }, protected, void, setStateInitialized, (, final, boolean, stateInitialized, ), {, this, ., statesInitialized, =, stateInitialized, ;, }, protected, double]
[., computeDerivatives, (, t, ,, y, ,, yDot, ), ;, }, protected, void, setStateInitialized, (, final, boolean, stateInitialized, ), {]
[,, y, ,, yDot, ), ;, }, protected, void, setStateInitialized, (, final, boolean, stateInitialized, ), {, this, ., statesInitialized, =]
[,, yDot, ), ;, }, protected, void, setStateInitialized, (, final, boolean, stateInitialized, ), {, this, ., statesInitialized, =, stateInitialized, ;]
[), ;, }, protected, void, setStateInitialized, (, final, boolean, stateInitialized, ), {, this, ., statesInitialized, =, stateInitialized, ;, }, protected]
[=, stateInitialized, ;, }, protected, double, acceptStep, (, final, AbstractStepInterpolator, interpolator, ,, final, double, [, ], y, ,, final, double]
[., statesInitialized, =, stateInitialized, ;, }, protected, double, acceptStep, (, final, AbstractStepInterpolator, interpolator, ,, final, double, [, ], y, ,]
[;, }, protected, double, acceptStep, (, final, AbstractStepInterpolator, interpolator, ,, final, double, [, ], y, ,, final, double, [, ]]
[;, final, double, currentT, =, interpolator, ., getGlobalCurrentTime, (, ), ;, if, (, !, statesInitialized, ), {, for, (, EventState]
[., getGlobalPreviousTime, (, ), ;, final, double, currentT, =, interpolator, ., getGlobalCurrentTime, (, ), ;, if, (, !, statesInitialized, )]
[;, if, (, !, statesInitialized, ), {, for, (, EventState, state, :, eventsStates, ), {, state, ., reinitializeBegin, (, interpolator]
[., getGlobalCurrentTime, (, ), ;, if, (, !, statesInitialized, ), {, for, (, EventState, state, :, eventsStates, ), {, state]
[), {, for, (, EventState, state, :, eventsStates, ), {, state, ., reinitializeBegin, (, interpolator, ), ;, }, statesInitialized, =]
[), {, for, (, EventState, state, :, eventsStates, ), {, state, ., reinitializeBegin, (, interpolator, ), ;, }, statesInitialized, =]
[), {, state, ., reinitializeBegin, (, interpolator, ), ;, }, statesInitialized, =, true, ;, }, final, int, orderingSign, =, interpolator]
[;, }, statesInitialized, =, true, ;, }, final, int, orderingSign, =, interpolator, ., isForward, (, ), ?, +, 1, :]
[., reinitializeBegin, (, interpolator, ), ;, }, statesInitialized, =, true, ;, }, final, int, orderingSign, =, interpolator, ., isForward, (]
[), ;, }, statesInitialized, =, true, ;, }, final, int, orderingSign, =, interpolator, ., isForward, (, ), ?, +, 1]
[=, true, ;, }, final, int, orderingSign, =, interpolator, ., isForward, (, ), ?, +, 1, :, -, 1, ;]
[;, }, final, int, orderingSign, =, interpolator, ., isForward, (, ), ?, +, 1, :, -, 1, ;, SortedSet, <]
[;, SortedSet, <, EventState, >, occurringEvents, =, new, TreeSet, <, EventState, >, (, new, Comparator, <, EventState, >, (, )]
[?, +, 1, :, -, 1, ;, SortedSet, <, EventState, >, occurringEvents, =, new, TreeSet, <, EventState, >, (, new]
[., isForward, (, ), ?, +, 1, :, -, 1, ;, SortedSet, <, EventState, >, occurringEvents, =, new, TreeSet, <]
[:, -, 1, ;, SortedSet, <, EventState, >, occurringEvents, =, new, TreeSet, <, EventState, >, (, new, Comparator, <, EventState]
[:, -, 1, ;, SortedSet, <, EventState, >, occurringEvents, =, new, TreeSet, <, EventState, >, (, new, Comparator, <, EventState]
[;, SortedSet, <, EventState, >, occurringEvents, =, new, TreeSet, <, EventState, >, (, new, Comparator, <, EventState, >, (, )]
[;, SortedSet, <, EventState, >, occurringEvents, =, new, TreeSet, <, EventState, >, (, new, Comparator, <, EventState, >, (, )]
[;, for, (, final, EventState, state, :, eventsStates, ), {, if, (, state, ., evaluateStep, (, interpolator, ), ), {]
[), ;, for, (, final, EventState, state, :, eventsStates, ), {, if, (, state, ., evaluateStep, (, interpolator, ), )]
[;, }, }, ), ;, for, (, final, EventState, state, :, eventsStates, ), {, if, (, state, ., evaluateStep, (]
[*, Double, ., compare, (, es0, ., getEventTime, (, ), ,, es1, ., getEventTime, (, ), ), ;, }, }]
[;, }, }, ), ;, for, (, final, EventState, state, :, eventsStates, ), {, if, (, state, ., evaluateStep, (]
[., compare, (, es0, ., getEventTime, (, ), ,, es1, ., getEventTime, (, ), ), ;, }, }, ), ;]
[,, es1, ., getEventTime, (, ), ), ;, }, }, ), ;, for, (, final, EventState, state, :, eventsStates, )]
[., getEventTime, (, ), ,, es1, ., getEventTime, (, ), ), ;, }, }, ), ;, for, (, final, EventState]
[), ;, }, }, ), ;, for, (, final, EventState, state, :, eventsStates, ), {, if, (, state, ., evaluateStep]
[., getEventTime, (, ), ), ;, }, }, ), ;, for, (, final, EventState, state, :, eventsStates, ), {, if]
[), {, if, (, state, ., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (, state, ), ;, }]
[), {, occurringEvents, ., add, (, state, ), ;, }, }, while, (, !, occurringEvents, ., isEmpty, (, ), )]
[., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (, state, ), ;, }, }, while, (, !, occurringEvents]
[), ), {, occurringEvents, ., add, (, state, ), ;, }, }, while, (, !, occurringEvents, ., isEmpty, (, )]
[;, }, }, while, (, !, occurringEvents, ., isEmpty, (, ), ), {, final, Iterator, <, EventState, >, iterator, =]
[., add, (, state, ), ;, }, }, while, (, !, occurringEvents, ., isEmpty, (, ), ), {, final, Iterator]
[), ;, }, }, while, (, !, occurringEvents, ., isEmpty, (, ), ), {, final, Iterator, <, EventState, >, iterator]
[), {, final, Iterator, <, EventState, >, iterator, =, occurringEvents, ., iterator, (, ), ;, final, EventState, currentEvent, =, iterator]
[), {, final, Iterator, <, EventState, >, iterator, =, occurringEvents, ., iterator, (, ), ;, final, EventState, currentEvent, =, iterator]
[., isEmpty, (, ), ), {, final, Iterator, <, EventState, >, iterator, =, occurringEvents, ., iterator, (, ), ;, final]
[;, final, EventState, currentEvent, =, iterator, ., next, (, ), ;, iterator, ., remove, (, ), ;, final, double, eventT]
[., iterator, (, ), ;, final, EventState, currentEvent, =, iterator, ., next, (, ), ;, iterator, ., remove, (, )]
[;, iterator, ., remove, (, ), ;, final, double, eventT, =, currentEvent, ., getEventTime, (, ), ;, interpolator, ., setSoftPreviousTime]
[., next, (, ), ;, iterator, ., remove, (, ), ;, final, double, eventT, =, currentEvent, ., getEventTime, (, )]
[;, final, double, eventT, =, currentEvent, ., getEventTime, (, ), ;, interpolator, ., setSoftPreviousTime, (, previousT, ), ;, interpolator, .]
[., remove, (, ), ;, final, double, eventT, =, currentEvent, ., getEventTime, (, ), ;, interpolator, ., setSoftPreviousTime, (, previousT]
[;, interpolator, ., setSoftPreviousTime, (, previousT, ), ;, interpolator, ., setSoftCurrentTime, (, eventT, ), ;, interpolator, ., setInterpolatedTime, (, eventT]
[., getEventTime, (, ), ;, interpolator, ., setSoftPreviousTime, (, previousT, ), ;, interpolator, ., setSoftCurrentTime, (, eventT, ), ;, interpolator]
[;, interpolator, ., setSoftCurrentTime, (, eventT, ), ;, interpolator, ., setInterpolatedTime, (, eventT, ), ;, final, double, [, ], eventYComplete]
[., setSoftPreviousTime, (, previousT, ), ;, interpolator, ., setSoftCurrentTime, (, eventT, ), ;, interpolator, ., setInterpolatedTime, (, eventT, ), ;]
[), ;, interpolator, ., setSoftCurrentTime, (, eventT, ), ;, interpolator, ., setInterpolatedTime, (, eventT, ), ;, final, double, [, ]]
[;, interpolator, ., setInterpolatedTime, (, eventT, ), ;, final, double, [, ], eventYComplete, =, new, double, [, y, ., length]
[., setSoftCurrentTime, (, eventT, ), ;, interpolator, ., setInterpolatedTime, (, eventT, ), ;, final, double, [, ], eventYComplete, =, new]
[), ;, interpolator, ., setInterpolatedTime, (, eventT, ), ;, final, double, [, ], eventYComplete, =, new, double, [, y, .]
[;, final, double, [, ], eventYComplete, =, new, double, [, y, ., length, ], ;, expandable, ., getPrimaryMapper, (, )]
[., setInterpolatedTime, (, eventT, ), ;, final, double, [, ], eventYComplete, =, new, double, [, y, ., length, ], ;]
[), ;, final, double, [, ], eventYComplete, =, new, double, [, y, ., length, ], ;, expandable, ., getPrimaryMapper, (]
[;, expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, eventYComplete, ), ;, int, index]
[], ;, expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, eventYComplete, ), ;, int]
[., length, ], ;, expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, eventYComplete, )]
[;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary, .]
[., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, eventYComplete, ), ;, int, index, =, 0, ;, for, (, EquationsMapper]
[., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, eventYComplete, ), ;, int, index, =, 0]
[,, eventYComplete, ), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), )]
[., getInterpolatedState, (, ), ,, eventYComplete, ), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, .]
[), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary]
[;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState]
[), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ++, ), ,, eventYComplete, ), ;, }, for, (]
[., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ++, ), ,, eventYComplete, )]
[;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, eventT, ,, eventYComplete, ), ;]
[., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ++, ), ,, eventYComplete, ), ;, }, for, (, final, EventState, state]
[,, eventYComplete, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, eventT, ,]
[., getInterpolatedSecondaryState, (, index, ++, ), ,, eventYComplete, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {]
[), ,, eventYComplete, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, eventT]
[++, ), ,, eventYComplete, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (]
[), ;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, eventT, ,, eventYComplete, )]
[), {, state, ., stepAccepted, (, eventT, ,, eventYComplete, ), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, )]
[;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, for, (, final, StepHandler, handler, :, stepHandlers, )]
[., stepAccepted, (, eventT, ,, eventYComplete, ), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, for]
[,, eventYComplete, ), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, for, (, final, StepHandler, handler]
[), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, for, (, final, StepHandler, handler, :, stepHandlers]
[=, isLastStep, ||, state, ., stop, (, ), ;, }, for, (, final, StepHandler, handler, :, stepHandlers, ), {, handler]
[;, }, for, (, final, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator, ,, isLastStep, ), ;]
[||, state, ., stop, (, ), ;, }, for, (, final, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep]
[;, }, for, (, final, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator, ,, isLastStep, ), ;]
[., stop, (, ), ;, }, for, (, final, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator]
[), {, handler, ., handleStep, (, interpolator, ,, isLastStep, ), ;, }, if, (, isLastStep, ), {, System, ., arraycopy]
[;, }, if, (, isLastStep, ), {, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,, y]
[., handleStep, (, interpolator, ,, isLastStep, ), ;, }, if, (, isLastStep, ), {, System, ., arraycopy, (, eventYComplete, ,]
[,, isLastStep, ), ;, }, if, (, isLastStep, ), {, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,]
[), ;, }, if, (, isLastStep, ), {, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,]
[), {, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, return]
[;, return, eventT, ;, }, boolean, needReset, =, false, ;, for, (, final, EventState, state, :, eventsStates, ), {, needReset]
[., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, return, eventT, ;, }]
[,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, return, eventT, ;, }, boolean, needReset, =, false]
[,, y, ,, 0, ,, y, ., length, ), ;, return, eventT, ;, }, boolean, needReset, =, false, ;, for]
[,, 0, ,, y, ., length, ), ;, return, eventT, ;, }, boolean, needReset, =, false, ;, for, (, final]
[,, y, ., length, ), ;, return, eventT, ;, }, boolean, needReset, =, false, ;, for, (, final, EventState, state]
[), ;, return, eventT, ;, }, boolean, needReset, =, false, ;, for, (, final, EventState, state, :, eventsStates, ), {]
[., length, ), ;, return, eventT, ;, }, boolean, needReset, =, false, ;, for, (, final, EventState, state, :, eventsStates]
[;, }, boolean, needReset, =, false, ;, for, (, final, EventState, state, :, eventsStates, ), {, needReset, =, needReset, ||]
[;, for, (, final, EventState, state, :, eventsStates, ), {, needReset, =, needReset, ||, state, ., reset, (, eventT, ,]
[), {, needReset, =, needReset, ||, state, ., reset, (, eventT, ,, eventYComplete, ), ;, }, if, (, needReset, )]
[=, needReset, ||, state, ., reset, (, eventT, ,, eventYComplete, ), ;, }, if, (, needReset, ), {, interpolator, .]
[;, }, if, (, needReset, ), {, interpolator, ., setInterpolatedTime, (, eventT, ), ;, System, ., arraycopy, (, eventYComplete, ,]
[||, state, ., reset, (, eventT, ,, eventYComplete, ), ;, }, if, (, needReset, ), {, interpolator, ., setInterpolatedTime, (]
[;, }, if, (, needReset, ), {, interpolator, ., setInterpolatedTime, (, eventT, ), ;, System, ., arraycopy, (, eventYComplete, ,]
[., reset, (, eventT, ,, eventYComplete, ), ;, }, if, (, needReset, ), {, interpolator, ., setInterpolatedTime, (, eventT, )]
[,, eventYComplete, ), ;, }, if, (, needReset, ), {, interpolator, ., setInterpolatedTime, (, eventT, ), ;, System, ., arraycopy]
[), ;, }, if, (, needReset, ), {, interpolator, ., setInterpolatedTime, (, eventT, ), ;, System, ., arraycopy, (, eventYComplete]
[), {, interpolator, ., setInterpolatedTime, (, eventT, ), ;, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0]
[;, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, computeDerivatives, (]
[., setInterpolatedTime, (, eventT, ), ;, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,, y, .]
[), ;, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, computeDerivatives]
[;, computeDerivatives, (, eventT, ,, y, ,, yDot, ), ;, resetOccurred, =, true, ;, return, eventT, ;, }, previousT, =]
[., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, computeDerivatives, (, eventT, ,]
[,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, computeDerivatives, (, eventT, ,, y, ,, yDot, )]
[,, y, ,, 0, ,, y, ., length, ), ;, computeDerivatives, (, eventT, ,, y, ,, yDot, ), ;, resetOccurred]
[,, 0, ,, y, ., length, ), ;, computeDerivatives, (, eventT, ,, y, ,, yDot, ), ;, resetOccurred, =, true]
[,, y, ., length, ), ;, computeDerivatives, (, eventT, ,, y, ,, yDot, ), ;, resetOccurred, =, true, ;, return]
[), ;, computeDerivatives, (, eventT, ,, y, ,, yDot, ), ;, resetOccurred, =, true, ;, return, eventT, ;, }, previousT]
[., length, ), ;, computeDerivatives, (, eventT, ,, y, ,, yDot, ), ;, resetOccurred, =, true, ;, return, eventT, ;]
[;, resetOccurred, =, true, ;, return, eventT, ;, }, previousT, =, eventT, ;, interpolator, ., setSoftPreviousTime, (, eventT, ), ;]
[,, y, ,, yDot, ), ;, resetOccurred, =, true, ;, return, eventT, ;, }, previousT, =, eventT, ;, interpolator, .]
[,, yDot, ), ;, resetOccurred, =, true, ;, return, eventT, ;, }, previousT, =, eventT, ;, interpolator, ., setSoftPreviousTime, (]
[), ;, resetOccurred, =, true, ;, return, eventT, ;, }, previousT, =, eventT, ;, interpolator, ., setSoftPreviousTime, (, eventT, )]
[=, true, ;, return, eventT, ;, }, previousT, =, eventT, ;, interpolator, ., setSoftPreviousTime, (, eventT, ), ;, interpolator, .]
[;, return, eventT, ;, }, previousT, =, eventT, ;, interpolator, ., setSoftPreviousTime, (, eventT, ), ;, interpolator, ., setSoftCurrentTime, (]
[;, }, previousT, =, eventT, ;, interpolator, ., setSoftPreviousTime, (, eventT, ), ;, interpolator, ., setSoftCurrentTime, (, currentT, ), ;]
[=, eventT, ;, interpolator, ., setSoftPreviousTime, (, eventT, ), ;, interpolator, ., setSoftCurrentTime, (, currentT, ), ;, if, (, currentEvent]
[;, interpolator, ., setSoftPreviousTime, (, eventT, ), ;, interpolator, ., setSoftCurrentTime, (, currentT, ), ;, if, (, currentEvent, ., evaluateStep]
[;, interpolator, ., setSoftCurrentTime, (, currentT, ), ;, if, (, currentEvent, ., evaluateStep, (, interpolator, ), ), {, occurringEvents, .]
[., setSoftPreviousTime, (, eventT, ), ;, interpolator, ., setSoftCurrentTime, (, currentT, ), ;, if, (, currentEvent, ., evaluateStep, (, interpolator]
[), ;, interpolator, ., setSoftCurrentTime, (, currentT, ), ;, if, (, currentEvent, ., evaluateStep, (, interpolator, ), ), {, occurringEvents]
[;, if, (, currentEvent, ., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (, currentEvent, ), ;, }, }]
[., setSoftCurrentTime, (, currentT, ), ;, if, (, currentEvent, ., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (]
[), ;, if, (, currentEvent, ., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (, currentEvent, ), ;, }]
[), {, occurringEvents, ., add, (, currentEvent, ), ;, }, }, interpolator, ., setInterpolatedTime, (, currentT, ), ;, final, double]
[., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (, currentEvent, ), ;, }, }, interpolator, ., setInterpolatedTime, (]
[), ), {, occurringEvents, ., add, (, currentEvent, ), ;, }, }, interpolator, ., setInterpolatedTime, (, currentT, ), ;, final]
[;, }, }, interpolator, ., setInterpolatedTime, (, currentT, ), ;, final, double, [, ], currentY, =, new, double, [, y]
[., add, (, currentEvent, ), ;, }, }, interpolator, ., setInterpolatedTime, (, currentT, ), ;, final, double, [, ], currentY]
[), ;, }, }, interpolator, ., setInterpolatedTime, (, currentT, ), ;, final, double, [, ], currentY, =, new, double, []
[;, final, double, [, ], currentY, =, new, double, [, y, ., length, ], ;, expandable, ., getPrimaryMapper, (, )]
[., setInterpolatedTime, (, currentT, ), ;, final, double, [, ], currentY, =, new, double, [, y, ., length, ], ;]
[), ;, final, double, [, ], currentY, =, new, double, [, y, ., length, ], ;, expandable, ., getPrimaryMapper, (]
[;, expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, currentY, ), ;, int, index]
[], ;, expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, currentY, ), ;, int]
[., length, ], ;, expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, currentY, )]
[;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary, .]
[., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, currentY, ), ;, int, index, =, 0, ;, for, (, EquationsMapper]
[., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, currentY, ), ;, int, index, =, 0]
[,, currentY, ), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), )]
[., getInterpolatedState, (, ), ,, currentY, ), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, .]
[), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary]
[;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState]
[), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ++, ), ,, currentY, ), ;, }, for, (]
[., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ++, ), ,, currentY, )]
[;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, currentT, ,, currentY, ), ;]
[., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ++, ), ,, currentY, ), ;, }, for, (, final, EventState, state]
[,, currentY, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, currentT, ,]
[., getInterpolatedSecondaryState, (, index, ++, ), ,, currentY, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {]
[), ,, currentY, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, currentT]
[++, ), ,, currentY, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (]
[), ;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, currentT, ,, currentY, )]
[), {, state, ., stepAccepted, (, currentT, ,, currentY, ), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, )]
[;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, isLastStep, =, isLastStep, ||, Precision, ., equals, (]
[., stepAccepted, (, currentT, ,, currentY, ), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, isLastStep]
[,, currentY, ), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, isLastStep, =, isLastStep, ||, Precision]
[), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, isLastStep, =, isLastStep, ||, Precision, ., equals]
[=, isLastStep, ||, state, ., stop, (, ), ;, }, isLastStep, =, isLastStep, ||, Precision, ., equals, (, currentT, ,]
[;, }, isLastStep, =, isLastStep, ||, Precision, ., equals, (, currentT, ,, tEnd, ,, 1, ), ;, for, (, StepHandler]
[||, state, ., stop, (, ), ;, }, isLastStep, =, isLastStep, ||, Precision, ., equals, (, currentT, ,, tEnd, ,]
[;, }, isLastStep, =, isLastStep, ||, Precision, ., equals, (, currentT, ,, tEnd, ,, 1, ), ;, for, (, StepHandler]
[., stop, (, ), ;, }, isLastStep, =, isLastStep, ||, Precision, ., equals, (, currentT, ,, tEnd, ,, 1, )]
[=, isLastStep, ||, Precision, ., equals, (, currentT, ,, tEnd, ,, 1, ), ;, for, (, StepHandler, handler, :, stepHandlers]
[;, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator, ,, isLastStep, ), ;, }, return]
[||, Precision, ., equals, (, currentT, ,, tEnd, ,, 1, ), ;, for, (, StepHandler, handler, :, stepHandlers, ), {]
[;, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator, ,, isLastStep, ), ;, }, return]
[., equals, (, currentT, ,, tEnd, ,, 1, ), ;, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, .]
[,, tEnd, ,, 1, ), ;, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator, ,]
[,, 1, ), ;, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator, ,, isLastStep, )]
[), ;, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator, ,, isLastStep, ), ;, }]
[), {, handler, ., handleStep, (, interpolator, ,, isLastStep, ), ;, }, return, currentT, ;, }, protected, void, sanityChecks, (]
[;, }, return, currentT, ;, }, protected, void, sanityChecks, (, final, ExpandableStatefulODE, equations, ,, final, double, t, ), throws, NumberIsTooSmallException]
[., handleStep, (, interpolator, ,, isLastStep, ), ;, }, return, currentT, ;, }, protected, void, sanityChecks, (, final, ExpandableStatefulODE, equations]
[,, isLastStep, ), ;, }, return, currentT, ;, }, protected, void, sanityChecks, (, final, ExpandableStatefulODE, equations, ,, final, double, t]
[), ;, }, return, currentT, ;, }, protected, void, sanityChecks, (, final, ExpandableStatefulODE, equations, ,, final, double, t, ), throws]
[;, }, protected, void, sanityChecks, (, final, ExpandableStatefulODE, equations, ,, final, double, t, ), throws, NumberIsTooSmallException, ,, DimensionMismatchException, {, final]
[;, final, double, dt, =, FastMath, ., abs, (, equations, ., getTime, (, ), -, t, ), ;, if, (]
[*, FastMath, ., ulp, (, FastMath, ., max, (, FastMath, ., abs, (, equations, ., getTime, (, ), ), ,]
[;, final, double, dt, =, FastMath, ., abs, (, equations, ., getTime, (, ), -, t, ), ;, if, (]
[., ulp, (, FastMath, ., max, (, FastMath, ., abs, (, equations, ., getTime, (, ), ), ,, FastMath, .]
[), ;, final, double, dt, =, FastMath, ., abs, (, equations, ., getTime, (, ), -, t, ), ;, if]
[., max, (, FastMath, ., abs, (, equations, ., getTime, (, ), ), ,, FastMath, ., abs, (, t, )]
[,, FastMath, ., abs, (, t, ), ), ), ;, final, double, dt, =, FastMath, ., abs, (, equations, .]
[., abs, (, equations, ., getTime, (, ), ), ,, FastMath, ., abs, (, t, ), ), ), ;, final]
[), ,, FastMath, ., abs, (, t, ), ), ), ;, final, double, dt, =, FastMath, ., abs, (, equations]
[., getTime, (, ), ), ,, FastMath, ., abs, (, t, ), ), ), ;, final, double, dt, =, FastMath]
[), ), ;, final, double, dt, =, FastMath, ., abs, (, equations, ., getTime, (, ), -, t, ), ;]
[., abs, (, t, ), ), ), ;, final, double, dt, =, FastMath, ., abs, (, equations, ., getTime, (]
[), ), ), ;, final, double, dt, =, FastMath, ., abs, (, equations, ., getTime, (, ), -, t, )]
[;, if, (, dt, <=, threshold, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., TOO_SMALL_INTEGRATION_INTERVAL, ,, dt, ,, threshold, ,]
[., abs, (, equations, ., getTime, (, ), -, t, ), ;, if, (, dt, <=, threshold, ), {, throw]
[), ;, if, (, dt, <=, threshold, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., TOO_SMALL_INTEGRATION_INTERVAL, ,, dt, ,, threshold]
[-, t, ), ;, if, (, dt, <=, threshold, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., TOO_SMALL_INTEGRATION_INTERVAL, ,, dt]
[., getTime, (, ), -, t, ), ;, if, (, dt, <=, threshold, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats]
[), ;, if, (, dt, <=, threshold, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., TOO_SMALL_INTEGRATION_INTERVAL, ,, dt, ,, threshold]
[), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., TOO_SMALL_INTEGRATION_INTERVAL, ,, dt, ,, threshold, ,, false, ), ;, }, }, }]
[<=, threshold, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., TOO_SMALL_INTEGRATION_INTERVAL, ,, dt, ,, threshold, ,, false, ), ;, }]
[), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., TOO_SMALL_INTEGRATION_INTERVAL, ,, dt, ,, threshold, ,, false, ), ;, }, }, }]
[;, }, }, }]
[,, dt, ,, threshold, ,, false, ), ;, }, }, }]
[., TOO_SMALL_INTEGRATION_INTERVAL, ,, dt, ,, threshold, ,, false, ), ;, }, }, }]
[,, threshold, ,, false, ), ;, }, }, }]
[,, false, ), ;, }, }, }]
[), ;, }, }, }]
