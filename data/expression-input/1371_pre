[String, name, ;, private, Incrementor, evaluations, ;, private, transient, ExpandableStatefulODE, expandable, ;, public, AbstractIntegrator, (, final, String, name, ), {]
[String, name, ;, private, Incrementor, evaluations, ;, private, transient, ExpandableStatefulODE, expandable, ;, public, AbstractIntegrator, (, final, String, name, ), {]
[Incrementor, evaluations, ;, private, transient, ExpandableStatefulODE, expandable, ;, public, AbstractIntegrator, (, final, String, name, ), {, this, ., name, =]
[;, private, transient, ExpandableStatefulODE, expandable, ;, public, AbstractIntegrator, (, final, String, name, ), {, this, ., name, =, name, ;]
[transient, ExpandableStatefulODE, expandable, ;, public, AbstractIntegrator, (, final, String, name, ), {, this, ., name, =, name, ;, stepHandlers, =]
[String, name, ), {, this, ., name, =, name, ;, stepHandlers, =, new, ArrayList, <, StepHandler, >, (, ), ;]
[), {, this, ., name, =, name, ;, stepHandlers, =, new, ArrayList, <, StepHandler, >, (, ), ;, stepStart, =]
[), {, this, ., name, =, name, ;, stepHandlers, =, new, ArrayList, <, StepHandler, >, (, ), ;, stepStart, =]
[name, =, name, ;, stepHandlers, =, new, ArrayList, <, StepHandler, >, (, ), ;, stepStart, =, Double, ., NaN, ;]
[name, ;, stepHandlers, =, new, ArrayList, <, StepHandler, >, (, ), ;, stepStart, =, Double, ., NaN, ;, stepSize, =]
[name, ;, stepHandlers, =, new, ArrayList, <, StepHandler, >, (, ), ;, stepStart, =, Double, ., NaN, ;, stepSize, =]
[new, ArrayList, <, StepHandler, >, (, ), ;, stepStart, =, Double, ., NaN, ;, stepSize, =, Double, ., NaN, ;]
[<, StepHandler, >, (, ), ;, stepStart, =, Double, ., NaN, ;, stepSize, =, Double, ., NaN, ;, eventsStates, =]
[Double, ., NaN, ;, stepSize, =, Double, ., NaN, ;, eventsStates, =, new, ArrayList, <, EventState, >, (, ), ;]
[NaN, ;, stepSize, =, Double, ., NaN, ;, eventsStates, =, new, ArrayList, <, EventState, >, (, ), ;, statesInitialized, =]
[stepSize, =, Double, ., NaN, ;, eventsStates, =, new, ArrayList, <, EventState, >, (, ), ;, statesInitialized, =, false, ;]
[Double, ., NaN, ;, eventsStates, =, new, ArrayList, <, EventState, >, (, ), ;, statesInitialized, =, false, ;, evaluations, =]
[=, new, ArrayList, <, EventState, >, (, ), ;, statesInitialized, =, false, ;, evaluations, =, new, Incrementor, (, ), ;]
[ArrayList, <, EventState, >, (, ), ;, statesInitialized, =, false, ;, evaluations, =, new, Incrementor, (, ), ;, setMaxEvaluations, (]
[<, EventState, >, (, ), ;, statesInitialized, =, false, ;, evaluations, =, new, Incrementor, (, ), ;, setMaxEvaluations, (, -]
[(, ), ;, statesInitialized, =, false, ;, evaluations, =, new, Incrementor, (, ), ;, setMaxEvaluations, (, -, 1, ), ;]
[(, ), ;, statesInitialized, =, false, ;, evaluations, =, new, Incrementor, (, ), ;, setMaxEvaluations, (, -, 1, ), ;]
[setMaxEvaluations, (, -, 1, ), ;, evaluations, ., resetCount, (, ), ;, }, protected, AbstractIntegrator, (, ), {, this, (]
[;, }, protected, AbstractIntegrator, (, ), {, this, (, null, ), ;, }, public, String, getName, (, ), {, return]
[}, public, String, getName, (, ), {, return, name, ;, }, public, void, addStepHandler, (, final, StepHandler, handler, ), {]
[}, public, String, getName, (, ), {, return, name, ;, }, public, void, addStepHandler, (, final, StepHandler, handler, ), {]
[(, ), {, return, name, ;, }, public, void, addStepHandler, (, final, StepHandler, handler, ), {, stepHandlers, ., add, (]
[), {, stepHandlers, ., add, (, handler, ), ;, }, public, Collection, <, StepHandler, >, getStepHandlers, (, ), {, return]
[), {, stepHandlers, ., add, (, handler, ), ;, }, public, Collection, <, StepHandler, >, getStepHandlers, (, ), {, return]
[add, (, handler, ), ;, }, public, Collection, <, StepHandler, >, getStepHandlers, (, ), {, return, Collections, ., unmodifiableCollection, (]
[>, getStepHandlers, (, ), {, return, Collections, ., unmodifiableCollection, (, stepHandlers, ), ;, }, public, void, clearStepHandlers, (, ), {]
[>, getStepHandlers, (, ), {, return, Collections, ., unmodifiableCollection, (, stepHandlers, ), ;, }, public, void, clearStepHandlers, (, ), {]
[void, addEventHandler, (, final, EventHandler, handler, ,, final, double, maxCheckInterval, ,, final, double, convergence, ,, final, int, maxIterationCount, ), {]
[(, final, EventHandler, handler, ,, final, double, maxCheckInterval, ,, final, double, convergence, ,, final, int, maxIterationCount, ), {, addEventHandler, (]
[EventHandler, handler, ,, final, double, maxCheckInterval, ,, final, double, convergence, ,, final, int, maxIterationCount, ), {, addEventHandler, (, handler, ,]
[,, final, double, maxCheckInterval, ,, final, double, convergence, ,, final, int, maxIterationCount, ), {, addEventHandler, (, handler, ,, maxCheckInterval, ,]
[double, maxCheckInterval, ,, final, double, convergence, ,, final, int, maxIterationCount, ), {, addEventHandler, (, handler, ,, maxCheckInterval, ,, convergence, ,]
[,, final, double, convergence, ,, final, int, maxIterationCount, ), {, addEventHandler, (, handler, ,, maxCheckInterval, ,, convergence, ,, maxIterationCount, ,]
[convergence, ,, final, int, maxIterationCount, ), {, addEventHandler, (, handler, ,, maxCheckInterval, ,, convergence, ,, maxIterationCount, ,, new, BracketingNthOrderBrentSolver, (]
[final, int, maxIterationCount, ), {, addEventHandler, (, handler, ,, maxCheckInterval, ,, convergence, ,, maxIterationCount, ,, new, BracketingNthOrderBrentSolver, (, convergence, ,]
[EventHandler, handler, ,, final, double, maxCheckInterval, ,, final, double, convergence, ,, final, int, maxIterationCount, ,, final, UnivariateSolver, solver, ), {]
[EventHandler, handler, ,, final, double, maxCheckInterval, ,, final, double, convergence, ,, final, int, maxIterationCount, ,, final, UnivariateSolver, solver, ), {]
[double, maxCheckInterval, ,, final, double, convergence, ,, final, int, maxIterationCount, ,, final, UnivariateSolver, solver, ), {, eventsStates, ., add, (]
[final, double, convergence, ,, final, int, maxIterationCount, ,, final, UnivariateSolver, solver, ), {, eventsStates, ., add, (, new, EventState, (]
[convergence, ,, final, int, maxIterationCount, ,, final, UnivariateSolver, solver, ), {, eventsStates, ., add, (, new, EventState, (, handler, ,]
[final, int, maxIterationCount, ,, final, UnivariateSolver, solver, ), {, eventsStates, ., add, (, new, EventState, (, handler, ,, maxCheckInterval, ,]
[maxIterationCount, ,, final, UnivariateSolver, solver, ), {, eventsStates, ., add, (, new, EventState, (, handler, ,, maxCheckInterval, ,, convergence, ,]
[final, UnivariateSolver, solver, ), {, eventsStates, ., add, (, new, EventState, (, handler, ,, maxCheckInterval, ,, convergence, ,, maxIterationCount, ,]
[), ), ;, }, public, Collection, <, EventHandler, >, getEventHandlers, (, ), {, final, List, <, EventHandler, >, list, =]
[<, EventHandler, >, getEventHandlers, (, ), {, final, List, <, EventHandler, >, list, =, new, ArrayList, <, EventHandler, >, (]
[<, EventHandler, >, getEventHandlers, (, ), {, final, List, <, EventHandler, >, list, =, new, ArrayList, <, EventHandler, >, (]
[list, =, new, ArrayList, <, EventHandler, >, (, eventsStates, ., size, (, ), ), ;, for, (, EventState, state, :]
[ArrayList, <, EventHandler, >, (, eventsStates, ., size, (, ), ), ;, for, (, EventState, state, :, eventsStates, ), {]
[ArrayList, <, EventHandler, >, (, eventsStates, ., size, (, ), ), ;, for, (, EventState, state, :, eventsStates, ), {]
[(, eventsStates, ., size, (, ), ), ;, for, (, EventState, state, :, eventsStates, ), {, list, ., add, (]
[(, eventsStates, ., size, (, ), ), ;, for, (, EventState, state, :, eventsStates, ), {, list, ., add, (]
[(, EventState, state, :, eventsStates, ), {, list, ., add, (, state, ., getEventHandler, (, ), ), ;, }, return]
[(, EventState, state, :, eventsStates, ), {, list, ., add, (, state, ., getEventHandler, (, ), ), ;, }, return]
[eventsStates, ), {, list, ., add, (, state, ., getEventHandler, (, ), ), ;, }, return, Collections, ., unmodifiableCollection, (]
[(, ), ), ;, }, return, Collections, ., unmodifiableCollection, (, list, ), ;, }, public, void, clearEventHandlers, (, ), {]
[(, ), ), ;, }, return, Collections, ., unmodifiableCollection, (, list, ), ;, }, public, void, clearEventHandlers, (, ), {]
[public, void, clearEventHandlers, (, ), {, eventsStates, ., clear, (, ), ;, }, public, double, getCurrentStepStart, (, ), {, return]
[), ;, }, public, double, getCurrentStepStart, (, ), {, return, stepStart, ;, }, public, double, getCurrentSignedStepsize, (, ), {, return]
[;, }, public, double, getCurrentSignedStepsize, (, ), {, return, stepSize, ;, }, public, void, setMaxEvaluations, (, int, maxEvaluations, ), {]
[;, }, public, double, getCurrentSignedStepsize, (, ), {, return, stepSize, ;, }, public, void, setMaxEvaluations, (, int, maxEvaluations, ), {]
[getCurrentSignedStepsize, (, ), {, return, stepSize, ;, }, public, void, setMaxEvaluations, (, int, maxEvaluations, ), {, evaluations, ., setMaximalCount, (]
[getCurrentSignedStepsize, (, ), {, return, stepSize, ;, }, public, void, setMaxEvaluations, (, int, maxEvaluations, ), {, evaluations, ., setMaximalCount, (]
[(, ), {, return, stepSize, ;, }, public, void, setMaxEvaluations, (, int, maxEvaluations, ), {, evaluations, ., setMaximalCount, (, (]
[(, ), {, return, stepSize, ;, }, public, void, setMaxEvaluations, (, int, maxEvaluations, ), {, evaluations, ., setMaximalCount, (, (]
[{, return, stepSize, ;, }, public, void, setMaxEvaluations, (, int, maxEvaluations, ), {, evaluations, ., setMaximalCount, (, (, maxEvaluations, <]
[;, }, public, void, setMaxEvaluations, (, int, maxEvaluations, ), {, evaluations, ., setMaximalCount, (, (, maxEvaluations, <, 0, ), ?]
[;, }, public, void, setMaxEvaluations, (, int, maxEvaluations, ), {, evaluations, ., setMaximalCount, (, (, maxEvaluations, <, 0, ), ?]
[setMaxEvaluations, (, int, maxEvaluations, ), {, evaluations, ., setMaximalCount, (, (, maxEvaluations, <, 0, ), ?, Integer, ., MAX_VALUE, :]
[maxEvaluations, <, 0, ), ?, Integer, ., MAX_VALUE, :, maxEvaluations, ), ;, }, public, int, getMaxEvaluations, (, ), {, return]
[maxEvaluations, <, 0, ), ?, Integer, ., MAX_VALUE, :, maxEvaluations, ), ;, }, public, int, getMaxEvaluations, (, ), {, return]
[int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (, ), {, return]
[int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (, ), {, return]
[}, protected, void, initIntegration, (, final, double, t0, ,, final, double, [, ], y0, ,, final, double, t, ), {]
[}, protected, void, initIntegration, (, final, double, t0, ,, final, double, [, ], y0, ,, final, double, t, ), {]
[], y0, ,, final, double, t, ), {, evaluations, ., resetCount, (, ), ;, for, (, final, EventState, state, :]
[final, double, t, ), {, evaluations, ., resetCount, (, ), ;, for, (, final, EventState, state, :, eventsStates, ), {]
[final, double, t, ), {, evaluations, ., resetCount, (, ), ;, for, (, final, EventState, state, :, eventsStates, ), {]
[{, evaluations, ., resetCount, (, ), ;, for, (, final, EventState, state, :, eventsStates, ), {, state, ., setExpandable, (]
[resetCount, (, ), ;, for, (, final, EventState, state, :, eventsStates, ), {, state, ., setExpandable, (, expandable, ), ;]
[resetCount, (, ), ;, for, (, final, EventState, state, :, eventsStates, ), {, state, ., setExpandable, (, expandable, ), ;]
[resetCount, (, ), ;, for, (, final, EventState, state, :, eventsStates, ), {, state, ., setExpandable, (, expandable, ), ;]
[state, :, eventsStates, ), {, state, ., setExpandable, (, expandable, ), ;, state, ., getEventHandler, (, ), ., init, (]
[eventsStates, ), {, state, ., setExpandable, (, expandable, ), ;, state, ., getEventHandler, (, ), ., init, (, t0, ,]
[{, state, ., setExpandable, (, expandable, ), ;, state, ., getEventHandler, (, ), ., init, (, t0, ,, y0, ,]
[., getEventHandler, (, ), ., init, (, t0, ,, y0, ,, t, ), ;, }, for, (, StepHandler, handler, :]
[), ., init, (, t0, ,, y0, ,, t, ), ;, }, for, (, StepHandler, handler, :, stepHandlers, ), {]
[), ., init, (, t0, ,, y0, ,, t, ), ;, }, for, (, StepHandler, handler, :, stepHandlers, ), {]
[t0, ,, y0, ,, t, ), ;, }, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., init, (]
[y0, ,, t, ), ;, }, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., init, (, t0, ,]
[t, ), ;, }, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., init, (, t0, ,, y0, ,]
[for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., init, (, t0, ,, y0, ,, t, ), ;, }]
[StepHandler, handler, :, stepHandlers, ), {, handler, ., init, (, t0, ,, y0, ,, t, ), ;, }, setStateInitialized, (]
[,, t, ), ;, }, setStateInitialized, (, false, ), ;, }, protected, void, setEquations, (, final, ExpandableStatefulODE, equations, ), {]
[,, t, ), ;, }, setStateInitialized, (, false, ), ;, }, protected, void, setEquations, (, final, ExpandableStatefulODE, equations, ), {]
[}, setStateInitialized, (, false, ), ;, }, protected, void, setEquations, (, final, ExpandableStatefulODE, equations, ), {, this, ., expandable, =]
[(, final, ExpandableStatefulODE, equations, ), {, this, ., expandable, =, equations, ;, }, protected, ExpandableStatefulODE, getExpandable, (, ), {, return]
[equations, ;, }, protected, ExpandableStatefulODE, getExpandable, (, ), {, return, expandable, ;, }, protected, Incrementor, getEvaluationsCounter, (, ), {, return]
[double, t, ,, final, double, [, ], y, ), throws, DimensionMismatchException, ,, NumberIsTooSmallException, ,, MaxCountExceededException, ,, NoBracketingException, {, if, (]
[double, t, ,, final, double, [, ], y, ), throws, DimensionMismatchException, ,, NumberIsTooSmallException, ,, MaxCountExceededException, ,, NoBracketingException, {, if, (]
[double, t, ,, final, double, [, ], y, ), throws, DimensionMismatchException, ,, NumberIsTooSmallException, ,, MaxCountExceededException, ,, NoBracketingException, {, if, (]
[double, [, ], y, ), throws, DimensionMismatchException, ,, NumberIsTooSmallException, ,, MaxCountExceededException, ,, NoBracketingException, {, if, (, y0, ., length, !=]
[double, [, ], y, ), throws, DimensionMismatchException, ,, NumberIsTooSmallException, ,, MaxCountExceededException, ,, NoBracketingException, {, if, (, y0, ., length, !=]
[NumberIsTooSmallException, ,, MaxCountExceededException, ,, NoBracketingException, {, if, (, y0, ., length, !=, equations, ., getDimension, (, ), ), {, throw]
[,, NoBracketingException, {, if, (, y0, ., length, !=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (]
[,, NoBracketingException, {, if, (, y0, ., length, !=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (]
[(, y0, ., length, !=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (, y0, ., length, ,]
[(, y0, ., length, !=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (, y0, ., length, ,]
[), {, throw, new, DimensionMismatchException, (, y0, ., length, ,, equations, ., getDimension, (, ), ), ;, }, if, (]
[), {, throw, new, DimensionMismatchException, (, y0, ., length, ,, equations, ., getDimension, (, ), ), ;, }, if, (]
[), {, throw, new, DimensionMismatchException, (, y0, ., length, ,, equations, ., getDimension, (, ), ), ;, }, if, (]
[DimensionMismatchException, (, y0, ., length, ,, equations, ., getDimension, (, ), ), ;, }, if, (, y, ., length, !=]
[DimensionMismatchException, (, y0, ., length, ,, equations, ., getDimension, (, ), ), ;, }, if, (, y, ., length, !=]
[getDimension, (, ), ), ;, }, if, (, y, ., length, !=, equations, ., getDimension, (, ), ), {, throw]
[), ;, }, if, (, y, ., length, !=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (]
[), ;, }, if, (, y, ., length, !=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (]
[(, y, ., length, !=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (, y, ., length, ,]
[(, y, ., length, !=, equations, ., getDimension, (, ), ), {, throw, new, DimensionMismatchException, (, y, ., length, ,]
[throw, new, DimensionMismatchException, (, y, ., length, ,, equations, ., getDimension, (, ), ), ;, }, final, ExpandableStatefulODE, expandableODE, =]
[(, y, ., length, ,, equations, ., getDimension, (, ), ), ;, }, final, ExpandableStatefulODE, expandableODE, =, new, ExpandableStatefulODE, (]
[length, ,, equations, ., getDimension, (, ), ), ;, }, final, ExpandableStatefulODE, expandableODE, =, new, ExpandableStatefulODE, (, equations, ), ;]
[length, ,, equations, ., getDimension, (, ), ), ;, }, final, ExpandableStatefulODE, expandableODE, =, new, ExpandableStatefulODE, (, equations, ), ;]
[getDimension, (, ), ), ;, }, final, ExpandableStatefulODE, expandableODE, =, new, ExpandableStatefulODE, (, equations, ), ;, expandableODE, ., setTime, (]
[), ;, }, final, ExpandableStatefulODE, expandableODE, =, new, ExpandableStatefulODE, (, equations, ), ;, expandableODE, ., setTime, (, t0, ), ;]
[), ;, }, final, ExpandableStatefulODE, expandableODE, =, new, ExpandableStatefulODE, (, equations, ), ;, expandableODE, ., setTime, (, t0, ), ;]
[ExpandableStatefulODE, expandableODE, =, new, ExpandableStatefulODE, (, equations, ), ;, expandableODE, ., setTime, (, t0, ), ;, expandableODE, ., setPrimaryState, (]
[new, ExpandableStatefulODE, (, equations, ), ;, expandableODE, ., setTime, (, t0, ), ;, expandableODE, ., setPrimaryState, (, y0, ), ;]
[(, equations, ), ;, expandableODE, ., setTime, (, t0, ), ;, expandableODE, ., setPrimaryState, (, y0, ), ;, integrate, (]
[), ;, expandableODE, ., setTime, (, t0, ), ;, expandableODE, ., setPrimaryState, (, y0, ), ;, integrate, (, expandableODE, ,]
[., setTime, (, t0, ), ;, expandableODE, ., setPrimaryState, (, y0, ), ;, integrate, (, expandableODE, ,, t, ), ;]
[., setTime, (, t0, ), ;, expandableODE, ., setPrimaryState, (, y0, ), ;, integrate, (, expandableODE, ,, t, ), ;]
[), ;, expandableODE, ., setPrimaryState, (, y0, ), ;, integrate, (, expandableODE, ,, t, ), ;, System, ., arraycopy, (]
[), ;, expandableODE, ., setPrimaryState, (, y0, ), ;, integrate, (, expandableODE, ,, t, ), ;, System, ., arraycopy, (]
[y0, ), ;, integrate, (, expandableODE, ,, t, ), ;, System, ., arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,]
[;, integrate, (, expandableODE, ,, t, ), ;, System, ., arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,, 0, ,]
[(, expandableODE, ,, t, ), ;, System, ., arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,, 0, ,, y, ,]
[,, t, ), ;, System, ., arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,, 0, ,, y, ,, 0, ,]
[,, t, ), ;, System, ., arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,, 0, ,, y, ,, 0, ,]
[arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, return]
[arraycopy, (, expandableODE, ., getPrimaryState, (, ), ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, return]
[double, t, ,, final, double, [, ], y, ,, final, double, [, ], yDot, ), throws, MaxCountExceededException, ,, DimensionMismatchException, {]
[double, t, ,, final, double, [, ], y, ,, final, double, [, ], yDot, ), throws, MaxCountExceededException, ,, DimensionMismatchException, {]
[], y, ,, final, double, [, ], yDot, ), throws, MaxCountExceededException, ,, DimensionMismatchException, {, evaluations, ., incrementCount, (, ), ;]
[], y, ,, final, double, [, ], yDot, ), throws, MaxCountExceededException, ,, DimensionMismatchException, {, evaluations, ., incrementCount, (, ), ;]
[double, [, ], yDot, ), throws, MaxCountExceededException, ,, DimensionMismatchException, {, evaluations, ., incrementCount, (, ), ;, expandable, ., computeDerivatives, (]
[], yDot, ), throws, MaxCountExceededException, ,, DimensionMismatchException, {, evaluations, ., incrementCount, (, ), ;, expandable, ., computeDerivatives, (, t, ,]
[), throws, MaxCountExceededException, ,, DimensionMismatchException, {, evaluations, ., incrementCount, (, ), ;, expandable, ., computeDerivatives, (, t, ,, y, ,]
[., computeDerivatives, (, t, ,, y, ,, yDot, ), ;, }, protected, void, setStateInitialized, (, final, boolean, stateInitialized, ), {]
[., computeDerivatives, (, t, ,, y, ,, yDot, ), ;, }, protected, void, setStateInitialized, (, final, boolean, stateInitialized, ), {]
[,, y, ,, yDot, ), ;, }, protected, void, setStateInitialized, (, final, boolean, stateInitialized, ), {, this, ., statesInitialized, =]
[final, double, [, ], yDot, ,, final, double, tEnd, ), throws, MaxCountExceededException, ,, DimensionMismatchException, ,, NoBracketingException, {, double, previousT, =]
[final, double, [, ], yDot, ,, final, double, tEnd, ), throws, MaxCountExceededException, ,, DimensionMismatchException, ,, NoBracketingException, {, double, previousT, =]
[throws, MaxCountExceededException, ,, DimensionMismatchException, ,, NoBracketingException, {, double, previousT, =, interpolator, ., getGlobalPreviousTime, (, ), ;, final, double, currentT, =]
[throws, MaxCountExceededException, ,, DimensionMismatchException, ,, NoBracketingException, {, double, previousT, =, interpolator, ., getGlobalPreviousTime, (, ), ;, final, double, currentT, =]
[previousT, =, interpolator, ., getGlobalPreviousTime, (, ), ;, final, double, currentT, =, interpolator, ., getGlobalCurrentTime, (, ), ;, if, (]
[=, interpolator, ., getGlobalPreviousTime, (, ), ;, final, double, currentT, =, interpolator, ., getGlobalCurrentTime, (, ), ;, if, (, !]
[double, currentT, =, interpolator, ., getGlobalCurrentTime, (, ), ;, if, (, !, statesInitialized, ), {, for, (, EventState, state, :]
[interpolator, ., getGlobalCurrentTime, (, ), ;, if, (, !, statesInitialized, ), {, for, (, EventState, state, :, eventsStates, ), {]
[interpolator, ., getGlobalCurrentTime, (, ), ;, if, (, !, statesInitialized, ), {, for, (, EventState, state, :, eventsStates, ), {]
[), ;, if, (, !, statesInitialized, ), {, for, (, EventState, state, :, eventsStates, ), {, state, ., reinitializeBegin, (]
[!, statesInitialized, ), {, for, (, EventState, state, :, eventsStates, ), {, state, ., reinitializeBegin, (, interpolator, ), ;, }]
[), {, for, (, EventState, state, :, eventsStates, ), {, state, ., reinitializeBegin, (, interpolator, ), ;, }, statesInitialized, =]
[eventsStates, ), {, state, ., reinitializeBegin, (, interpolator, ), ;, }, statesInitialized, =, true, ;, }, final, int, orderingSign, =]
[eventsStates, ), {, state, ., reinitializeBegin, (, interpolator, ), ;, }, statesInitialized, =, true, ;, }, final, int, orderingSign, =]
[eventsStates, ), {, state, ., reinitializeBegin, (, interpolator, ), ;, }, statesInitialized, =, true, ;, }, final, int, orderingSign, =]
[(, interpolator, ), ;, }, statesInitialized, =, true, ;, }, final, int, orderingSign, =, interpolator, ., isForward, (, ), ?]
[interpolator, ), ;, }, statesInitialized, =, true, ;, }, final, int, orderingSign, =, interpolator, ., isForward, (, ), ?, +]
[;, }, statesInitialized, =, true, ;, }, final, int, orderingSign, =, interpolator, ., isForward, (, ), ?, +, 1, :]
[}, statesInitialized, =, true, ;, }, final, int, orderingSign, =, interpolator, ., isForward, (, ), ?, +, 1, :, -]
[orderingSign, =, interpolator, ., isForward, (, ), ?, +, 1, :, -, 1, ;, SortedSet, <, EventState, >, occurringEvents, =]
[), ?, +, 1, :, -, 1, ;, SortedSet, <, EventState, >, occurringEvents, =, new, TreeSet, <, EventState, >, (]
[new, Comparator, <, EventState, >, (, ), {, public, int, compare, (, EventState, es0, ,, EventState, es1, ), {, return]
[new, Comparator, <, EventState, >, (, ), {, public, int, compare, (, EventState, es0, ,, EventState, es1, ), {, return]
[<, EventState, >, (, ), {, public, int, compare, (, EventState, es0, ,, EventState, es1, ), {, return, orderingSign, *]
[<, EventState, >, (, ), {, public, int, compare, (, EventState, es0, ,, EventState, es1, ), {, return, orderingSign, *]
[), {, public, int, compare, (, EventState, es0, ,, EventState, es1, ), {, return, orderingSign, *, Double, ., compare, (]
[), {, public, int, compare, (, EventState, es0, ,, EventState, es1, ), {, return, orderingSign, *, Double, ., compare, (]
[EventState, es0, ,, EventState, es1, ), {, return, orderingSign, *, Double, ., compare, (, es0, ., getEventTime, (, ), ,]
[EventState, es0, ,, EventState, es1, ), {, return, orderingSign, *, Double, ., compare, (, es0, ., getEventTime, (, ), ,]
[(, ), ,, es1, ., getEventTime, (, ), ), ;, }, }, ), ;, for, (, final, EventState, state, :]
[getEventTime, (, ), ), ;, }, }, ), ;, for, (, final, EventState, state, :, eventsStates, ), {, if, (]
[getEventTime, (, ), ), ;, }, }, ), ;, for, (, final, EventState, state, :, eventsStates, ), {, if, (]
[;, }, }, ), ;, for, (, final, EventState, state, :, eventsStates, ), {, if, (, state, ., evaluateStep, (]
[;, for, (, final, EventState, state, :, eventsStates, ), {, if, (, state, ., evaluateStep, (, interpolator, ), ), {]
[;, for, (, final, EventState, state, :, eventsStates, ), {, if, (, state, ., evaluateStep, (, interpolator, ), ), {]
[EventState, state, :, eventsStates, ), {, if, (, state, ., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (]
[(, state, ., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (, state, ), ;, }, }, while, (]
[state, ., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (, state, ), ;, }, }, while, (, !]
[state, ., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (, state, ), ;, }, }, while, (, !]
[;, }, }, while, (, !, occurringEvents, ., isEmpty, (, ), ), {, final, Iterator, <, EventState, >, iterator, =]
[;, }, }, while, (, !, occurringEvents, ., isEmpty, (, ), ), {, final, Iterator, <, EventState, >, iterator, =]
[), ), {, final, Iterator, <, EventState, >, iterator, =, occurringEvents, ., iterator, (, ), ;, final, EventState, currentEvent, =]
[), ), {, final, Iterator, <, EventState, >, iterator, =, occurringEvents, ., iterator, (, ), ;, final, EventState, currentEvent, =]
[EventState, >, iterator, =, occurringEvents, ., iterator, (, ), ;, final, EventState, currentEvent, =, iterator, ., next, (, ), ;]
[EventState, >, iterator, =, occurringEvents, ., iterator, (, ), ;, final, EventState, currentEvent, =, iterator, ., next, (, ), ;]
[final, EventState, currentEvent, =, iterator, ., next, (, ), ;, iterator, ., remove, (, ), ;, final, double, eventT, =]
[final, EventState, currentEvent, =, iterator, ., next, (, ), ;, iterator, ., remove, (, ), ;, final, double, eventT, =]
[next, (, ), ;, iterator, ., remove, (, ), ;, final, double, eventT, =, currentEvent, ., getEventTime, (, ), ;]
[next, (, ), ;, iterator, ., remove, (, ), ;, final, double, eventT, =, currentEvent, ., getEventTime, (, ), ;]
[iterator, ., remove, (, ), ;, final, double, eventT, =, currentEvent, ., getEventTime, (, ), ;, interpolator, ., setSoftPreviousTime, (]
[(, ), ;, final, double, eventT, =, currentEvent, ., getEventTime, (, ), ;, interpolator, ., setSoftPreviousTime, (, previousT, ), ;]
[(, ), ;, final, double, eventT, =, currentEvent, ., getEventTime, (, ), ;, interpolator, ., setSoftPreviousTime, (, previousT, ), ;]
[double, eventT, =, currentEvent, ., getEventTime, (, ), ;, interpolator, ., setSoftPreviousTime, (, previousT, ), ;, interpolator, ., setSoftCurrentTime, (]
[currentEvent, ., getEventTime, (, ), ;, interpolator, ., setSoftPreviousTime, (, previousT, ), ;, interpolator, ., setSoftCurrentTime, (, eventT, ), ;]
[currentEvent, ., getEventTime, (, ), ;, interpolator, ., setSoftPreviousTime, (, previousT, ), ;, interpolator, ., setSoftCurrentTime, (, eventT, ), ;]
[), ;, interpolator, ., setSoftPreviousTime, (, previousT, ), ;, interpolator, ., setSoftCurrentTime, (, eventT, ), ;, interpolator, ., setInterpolatedTime, (]
[interpolator, ., setSoftCurrentTime, (, eventT, ), ;, interpolator, ., setInterpolatedTime, (, eventT, ), ;, final, double, [, ], eventYComplete, =]
[(, eventT, ), ;, interpolator, ., setInterpolatedTime, (, eventT, ), ;, final, double, [, ], eventYComplete, =, new, double, []
[(, eventT, ), ;, interpolator, ., setInterpolatedTime, (, eventT, ), ;, final, double, [, ], eventYComplete, =, new, double, []
[., setInterpolatedTime, (, eventT, ), ;, final, double, [, ], eventYComplete, =, new, double, [, y, ., length, ], ;]
[., setInterpolatedTime, (, eventT, ), ;, final, double, [, ], eventYComplete, =, new, double, [, y, ., length, ], ;]
[., setInterpolatedTime, (, eventT, ), ;, final, double, [, ], eventYComplete, =, new, double, [, y, ., length, ], ;]
[[, ], eventYComplete, =, new, double, [, y, ., length, ], ;, expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (]
[[, ], eventYComplete, =, new, double, [, y, ., length, ], ;, expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (]
[[, y, ., length, ], ;, expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,]
[expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, eventYComplete, ), ;, int, index, =]
[(, interpolator, ., getInterpolatedState, (, ), ,, eventYComplete, ), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :]
[(, interpolator, ., getInterpolatedState, (, ), ,, eventYComplete, ), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :]
[eventYComplete, ), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {]
[eventYComplete, ), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {]
[index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (]
[index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (]
[for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (]
[for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (]
[:, expandable, ., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ++, ), ,]
[insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ++, ), ,, eventYComplete, ), ;, }, for, (, final, EventState, state, :]
[., getInterpolatedSecondaryState, (, index, ++, ), ,, eventYComplete, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {]
[., getInterpolatedSecondaryState, (, index, ++, ), ,, eventYComplete, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {]
[++, ), ,, eventYComplete, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (]
[,, eventYComplete, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, eventT, ,]
[;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, eventT, ,, eventYComplete, ), ;]
[for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, eventT, ,, eventYComplete, ), ;, isLastStep, =]
[for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, eventT, ,, eventYComplete, ), ;, isLastStep, =]
[final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, eventT, ,, eventYComplete, ), ;, isLastStep, =, isLastStep, ||]
[final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, eventT, ,, eventYComplete, ), ;, isLastStep, =, isLastStep, ||]
[eventYComplete, ), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, for, (, final, StepHandler, handler, :]
[isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, for, (, final, StepHandler, handler, :, stepHandlers, ), {]
[isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, for, (, final, StepHandler, handler, :, stepHandlers, ), {]
[state, ., stop, (, ), ;, }, for, (, final, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (]
[stop, (, ), ;, }, for, (, final, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator, ,]
[(, final, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator, ,, isLastStep, ), ;, }, if, (]
[handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator, ,, isLastStep, ), ;, }, if, (, isLastStep, ), {]
[handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator, ,, isLastStep, ), ;, }, if, (, isLastStep, ), {]
[{, handler, ., handleStep, (, interpolator, ,, isLastStep, ), ;, }, if, (, isLastStep, ), {, System, ., arraycopy, (]
[., handleStep, (, interpolator, ,, isLastStep, ), ;, }, if, (, isLastStep, ), {, System, ., arraycopy, (, eventYComplete, ,]
[(, interpolator, ,, isLastStep, ), ;, }, if, (, isLastStep, ), {, System, ., arraycopy, (, eventYComplete, ,, 0, ,]
[,, isLastStep, ), ;, }, if, (, isLastStep, ), {, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,]
[), ;, }, if, (, isLastStep, ), {, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,]
[), ;, }, if, (, isLastStep, ), {, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,]
[), {, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, return]
[eventYComplete, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, return, eventT, ;, }, boolean, needReset, =]
[y, ., length, ), ;, return, eventT, ;, }, boolean, needReset, =, false, ;, for, (, final, EventState, state, :]
[), ;, return, eventT, ;, }, boolean, needReset, =, false, ;, for, (, final, EventState, state, :, eventsStates, ), {]
[return, eventT, ;, }, boolean, needReset, =, false, ;, for, (, final, EventState, state, :, eventsStates, ), {, needReset, =]
[return, eventT, ;, }, boolean, needReset, =, false, ;, for, (, final, EventState, state, :, eventsStates, ), {, needReset, =]
[;, }, boolean, needReset, =, false, ;, for, (, final, EventState, state, :, eventsStates, ), {, needReset, =, needReset, ||]
[;, }, boolean, needReset, =, false, ;, for, (, final, EventState, state, :, eventsStates, ), {, needReset, =, needReset, ||]
[=, false, ;, for, (, final, EventState, state, :, eventsStates, ), {, needReset, =, needReset, ||, state, ., reset, (]
[;, for, (, final, EventState, state, :, eventsStates, ), {, needReset, =, needReset, ||, state, ., reset, (, eventT, ,]
[:, eventsStates, ), {, needReset, =, needReset, ||, state, ., reset, (, eventT, ,, eventYComplete, ), ;, }, if, (]
[{, needReset, =, needReset, ||, state, ., reset, (, eventT, ,, eventYComplete, ), ;, }, if, (, needReset, ), {]
[{, needReset, =, needReset, ||, state, ., reset, (, eventT, ,, eventYComplete, ), ;, }, if, (, needReset, ), {]
[||, state, ., reset, (, eventT, ,, eventYComplete, ), ;, }, if, (, needReset, ), {, interpolator, ., setInterpolatedTime, (]
[reset, (, eventT, ,, eventYComplete, ), ;, }, if, (, needReset, ), {, interpolator, ., setInterpolatedTime, (, eventT, ), ;]
[reset, (, eventT, ,, eventYComplete, ), ;, }, if, (, needReset, ), {, interpolator, ., setInterpolatedTime, (, eventT, ), ;]
[eventYComplete, ), ;, }, if, (, needReset, ), {, interpolator, ., setInterpolatedTime, (, eventT, ), ;, System, ., arraycopy, (]
[;, }, if, (, needReset, ), {, interpolator, ., setInterpolatedTime, (, eventT, ), ;, System, ., arraycopy, (, eventYComplete, ,]
[if, (, needReset, ), {, interpolator, ., setInterpolatedTime, (, eventT, ), ;, System, ., arraycopy, (, eventYComplete, ,, 0, ,]
[needReset, ), {, interpolator, ., setInterpolatedTime, (, eventT, ), ;, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,]
[{, interpolator, ., setInterpolatedTime, (, eventT, ), ;, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,]
[{, interpolator, ., setInterpolatedTime, (, eventT, ), ;, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,]
[eventT, ), ;, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;]
[;, System, ., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, computeDerivatives, (]
[., arraycopy, (, eventYComplete, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, computeDerivatives, (, eventT, ,]
[(, eventYComplete, ,, 0, ,, y, ,, 0, ,, y, ., length, ), ;, computeDerivatives, (, eventT, ,, y, ,]
[0, ,, y, ,, 0, ,, y, ., length, ), ;, computeDerivatives, (, eventT, ,, y, ,, yDot, ), ;]
[y, ,, 0, ,, y, ., length, ), ;, computeDerivatives, (, eventT, ,, y, ,, yDot, ), ;, resetOccurred, =]
[,, y, ., length, ), ;, computeDerivatives, (, eventT, ,, y, ,, yDot, ), ;, resetOccurred, =, true, ;, return]
[length, ), ;, computeDerivatives, (, eventT, ,, y, ,, yDot, ), ;, resetOccurred, =, true, ;, return, eventT, ;, }]
[;, computeDerivatives, (, eventT, ,, y, ,, yDot, ), ;, resetOccurred, =, true, ;, return, eventT, ;, }, previousT, =]
[(, eventT, ,, y, ,, yDot, ), ;, resetOccurred, =, true, ;, return, eventT, ;, }, previousT, =, eventT, ;]
[(, eventT, ,, y, ,, yDot, ), ;, resetOccurred, =, true, ;, return, eventT, ;, }, previousT, =, eventT, ;]
[,, yDot, ), ;, resetOccurred, =, true, ;, return, eventT, ;, }, previousT, =, eventT, ;, interpolator, ., setSoftPreviousTime, (]
[;, resetOccurred, =, true, ;, return, eventT, ;, }, previousT, =, eventT, ;, interpolator, ., setSoftPreviousTime, (, eventT, ), ;]
[;, resetOccurred, =, true, ;, return, eventT, ;, }, previousT, =, eventT, ;, interpolator, ., setSoftPreviousTime, (, eventT, ), ;]
[;, return, eventT, ;, }, previousT, =, eventT, ;, interpolator, ., setSoftPreviousTime, (, eventT, ), ;, interpolator, ., setSoftCurrentTime, (]
[previousT, =, eventT, ;, interpolator, ., setSoftPreviousTime, (, eventT, ), ;, interpolator, ., setSoftCurrentTime, (, currentT, ), ;, if, (]
[previousT, =, eventT, ;, interpolator, ., setSoftPreviousTime, (, eventT, ), ;, interpolator, ., setSoftCurrentTime, (, currentT, ), ;, if, (]
[interpolator, ., setSoftPreviousTime, (, eventT, ), ;, interpolator, ., setSoftCurrentTime, (, currentT, ), ;, if, (, currentEvent, ., evaluateStep, (]
[eventT, ), ;, interpolator, ., setSoftCurrentTime, (, currentT, ), ;, if, (, currentEvent, ., evaluateStep, (, interpolator, ), ), {]
[eventT, ), ;, interpolator, ., setSoftCurrentTime, (, currentT, ), ;, if, (, currentEvent, ., evaluateStep, (, interpolator, ), ), {]
[., setSoftCurrentTime, (, currentT, ), ;, if, (, currentEvent, ., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (]
[;, if, (, currentEvent, ., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (, currentEvent, ), ;, }, }]
[;, if, (, currentEvent, ., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (, currentEvent, ), ;, }, }]
[., evaluateStep, (, interpolator, ), ), {, occurringEvents, ., add, (, currentEvent, ), ;, }, }, interpolator, ., setInterpolatedTime, (]
[add, (, currentEvent, ), ;, }, }, interpolator, ., setInterpolatedTime, (, currentT, ), ;, final, double, [, ], currentY, =]
[), ;, }, }, interpolator, ., setInterpolatedTime, (, currentT, ), ;, final, double, [, ], currentY, =, new, double, []
[), ;, }, }, interpolator, ., setInterpolatedTime, (, currentT, ), ;, final, double, [, ], currentY, =, new, double, []
[., setInterpolatedTime, (, currentT, ), ;, final, double, [, ], currentY, =, new, double, [, y, ., length, ], ;]
[., setInterpolatedTime, (, currentT, ), ;, final, double, [, ], currentY, =, new, double, [, y, ., length, ], ;]
[., setInterpolatedTime, (, currentT, ), ;, final, double, [, ], currentY, =, new, double, [, y, ., length, ], ;]
[[, ], currentY, =, new, double, [, y, ., length, ], ;, expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (]
[[, ], currentY, =, new, double, [, y, ., length, ], ;, expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (]
[[, y, ., length, ], ;, expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,]
[expandable, ., getPrimaryMapper, (, ), ., insertEquationData, (, interpolator, ., getInterpolatedState, (, ), ,, currentY, ), ;, int, index, =]
[(, interpolator, ., getInterpolatedState, (, ), ,, currentY, ), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :]
[(, interpolator, ., getInterpolatedState, (, ), ,, currentY, ), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :]
[currentY, ), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {]
[currentY, ), ;, int, index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {]
[index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (]
[index, =, 0, ;, for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (]
[for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (]
[for, (, EquationsMapper, secondary, :, expandable, ., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (]
[:, expandable, ., getSecondaryMappers, (, ), ), {, secondary, ., insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ++, ), ,]
[insertEquationData, (, interpolator, ., getInterpolatedSecondaryState, (, index, ++, ), ,, currentY, ), ;, }, for, (, final, EventState, state, :]
[., getInterpolatedSecondaryState, (, index, ++, ), ,, currentY, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {]
[., getInterpolatedSecondaryState, (, index, ++, ), ,, currentY, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {]
[++, ), ,, currentY, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (]
[,, currentY, ), ;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, currentT, ,]
[;, }, for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, currentT, ,, currentY, ), ;]
[for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, currentT, ,, currentY, ), ;, isLastStep, =]
[for, (, final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, currentT, ,, currentY, ), ;, isLastStep, =]
[final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, currentT, ,, currentY, ), ;, isLastStep, =, isLastStep, ||]
[final, EventState, state, :, eventsStates, ), {, state, ., stepAccepted, (, currentT, ,, currentY, ), ;, isLastStep, =, isLastStep, ||]
[state, ., stepAccepted, (, currentT, ,, currentY, ), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }]
[stepAccepted, (, currentT, ,, currentY, ), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, isLastStep, =]
[stepAccepted, (, currentT, ,, currentY, ), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, isLastStep, =]
[currentT, ,, currentY, ), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, isLastStep, =, isLastStep, ||]
[currentT, ,, currentY, ), ;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, isLastStep, =, isLastStep, ||]
[;, isLastStep, =, isLastStep, ||, state, ., stop, (, ), ;, }, isLastStep, =, isLastStep, ||, Precision, ., equals, (]
[=, isLastStep, ||, state, ., stop, (, ), ;, }, isLastStep, =, isLastStep, ||, Precision, ., equals, (, currentT, ,]
[||, state, ., stop, (, ), ;, }, isLastStep, =, isLastStep, ||, Precision, ., equals, (, currentT, ,, tEnd, ,]
[isLastStep, =, isLastStep, ||, Precision, ., equals, (, currentT, ,, tEnd, ,, 1, ), ;, for, (, StepHandler, handler, :]
[||, Precision, ., equals, (, currentT, ,, tEnd, ,, 1, ), ;, for, (, StepHandler, handler, :, stepHandlers, ), {]
[||, Precision, ., equals, (, currentT, ,, tEnd, ,, 1, ), ;, for, (, StepHandler, handler, :, stepHandlers, ), {]
[(, currentT, ,, tEnd, ,, 1, ), ;, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (]
[,, tEnd, ,, 1, ), ;, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator, ,]
[;, for, (, StepHandler, handler, :, stepHandlers, ), {, handler, ., handleStep, (, interpolator, ,, isLastStep, ), ;, }, return]
[void, sanityChecks, (, final, ExpandableStatefulODE, equations, ,, final, double, t, ), throws, NumberIsTooSmallException, ,, DimensionMismatchException, {, final, double, threshold, =]
[void, sanityChecks, (, final, ExpandableStatefulODE, equations, ,, final, double, t, ), throws, NumberIsTooSmallException, ,, DimensionMismatchException, {, final, double, threshold, =]
[(, final, ExpandableStatefulODE, equations, ,, final, double, t, ), throws, NumberIsTooSmallException, ,, DimensionMismatchException, {, final, double, threshold, =, 1000, *]
[(, final, ExpandableStatefulODE, equations, ,, final, double, t, ), throws, NumberIsTooSmallException, ,, DimensionMismatchException, {, final, double, threshold, =, 1000, *]
[,, final, double, t, ), throws, NumberIsTooSmallException, ,, DimensionMismatchException, {, final, double, threshold, =, 1000, *, FastMath, ., ulp, (]
[,, final, double, t, ), throws, NumberIsTooSmallException, ,, DimensionMismatchException, {, final, double, threshold, =, 1000, *, FastMath, ., ulp, (]
[), throws, NumberIsTooSmallException, ,, DimensionMismatchException, {, final, double, threshold, =, 1000, *, FastMath, ., ulp, (, FastMath, ., max, (]
[), throws, NumberIsTooSmallException, ,, DimensionMismatchException, {, final, double, threshold, =, 1000, *, FastMath, ., ulp, (, FastMath, ., max, (]
[DimensionMismatchException, {, final, double, threshold, =, 1000, *, FastMath, ., ulp, (, FastMath, ., max, (, FastMath, ., abs, (]
[DimensionMismatchException, {, final, double, threshold, =, 1000, *, FastMath, ., ulp, (, FastMath, ., max, (, FastMath, ., abs, (]
[*, FastMath, ., ulp, (, FastMath, ., max, (, FastMath, ., abs, (, equations, ., getTime, (, ), ), ,]
[*, FastMath, ., ulp, (, FastMath, ., max, (, FastMath, ., abs, (, equations, ., getTime, (, ), ), ,]
[(, FastMath, ., max, (, FastMath, ., abs, (, equations, ., getTime, (, ), ), ,, FastMath, ., abs, (]
[equations, ., getTime, (, ), ), ,, FastMath, ., abs, (, t, ), ), ), ;, final, double, dt, =]
[equations, ., getTime, (, ), ), ,, FastMath, ., abs, (, t, ), ), ), ;, final, double, dt, =]
[), ), ,, FastMath, ., abs, (, t, ), ), ), ;, final, double, dt, =, FastMath, ., abs, (]
[), ), ,, FastMath, ., abs, (, t, ), ), ), ;, final, double, dt, =, FastMath, ., abs, (]
[), ), ,, FastMath, ., abs, (, t, ), ), ), ;, final, double, dt, =, FastMath, ., abs, (]
[(, t, ), ), ), ;, final, double, dt, =, FastMath, ., abs, (, equations, ., getTime, (, ), -]
[;, final, double, dt, =, FastMath, ., abs, (, equations, ., getTime, (, ), -, t, ), ;, if, (]
[;, final, double, dt, =, FastMath, ., abs, (, equations, ., getTime, (, ), -, t, ), ;, if, (]
[double, dt, =, FastMath, ., abs, (, equations, ., getTime, (, ), -, t, ), ;, if, (, dt, <=]
[., abs, (, equations, ., getTime, (, ), -, t, ), ;, if, (, dt, <=, threshold, ), {, throw]
[equations, ., getTime, (, ), -, t, ), ;, if, (, dt, <=, threshold, ), {, throw, new, NumberIsTooSmallException, (]
[equations, ., getTime, (, ), -, t, ), ;, if, (, dt, <=, threshold, ), {, throw, new, NumberIsTooSmallException, (]
[), -, t, ), ;, if, (, dt, <=, threshold, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., TOO_SMALL_INTEGRATION_INTERVAL, ,]
[t, ), ;, if, (, dt, <=, threshold, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., TOO_SMALL_INTEGRATION_INTERVAL, ,, dt, ,]
[;, if, (, dt, <=, threshold, ), {, throw, new, NumberIsTooSmallException, (, LocalizedFormats, ., TOO_SMALL_INTEGRATION_INTERVAL, ,, dt, ,, threshold, ,]
