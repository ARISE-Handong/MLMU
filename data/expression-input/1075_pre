[mockito, ., mock, ., SerializableMode, ;, import, java, ., io, ., Serializable, ;, import, java, ., util, ., Collection, ;]
[., SerializableMode, ;, import, java, ., io, ., Serializable, ;, import, java, ., util, ., Collection, ;, @, SuppressWarnings, (]
[java, ., util, ., Collection, ;, @, SuppressWarnings, (, "unchecked", ), public, class, MockCreationValidator, {, private, final, MockUtil, mockUtil, =]
[private, final, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, public, void, validateType, (, Class, classToMock, ), {, if, (]
[final, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, public, void, validateType, (, Class, classToMock, ), {, if, (, !]
[final, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, public, void, validateType, (, Class, classToMock, ), {, if, (, !]
[new, MockUtil, (, ), ;, public, void, validateType, (, Class, classToMock, ), {, if, (, !, mockUtil, ., isTypeMockable, (]
[;, public, void, validateType, (, Class, classToMock, ), {, if, (, !, mockUtil, ., isTypeMockable, (, classToMock, ), ), {]
[;, public, void, validateType, (, Class, classToMock, ), {, if, (, !, mockUtil, ., isTypeMockable, (, classToMock, ), ), {]
[), {, if, (, !, mockUtil, ., isTypeMockable, (, classToMock, ), ), {, new, Reporter, (, ), ., cannotMockFinalClass, (]
[), ;, }, }, public, void, validateExtraInterfaces, (, Class, classToMock, ,, Collection, <, Class, >, extraInterfaces, ), {, if, (]
[), ;, }, }, public, void, validateExtraInterfaces, (, Class, classToMock, ,, Collection, <, Class, >, extraInterfaces, ), {, if, (]
[}, }, public, void, validateExtraInterfaces, (, Class, classToMock, ,, Collection, <, Class, >, extraInterfaces, ), {, if, (, extraInterfaces, ==]
[Class, >, extraInterfaces, ), {, if, (, extraInterfaces, ==, null, ), {, return, ;, }, for, (, Class, i, :]
[if, (, extraInterfaces, ==, null, ), {, return, ;, }, for, (, Class, i, :, extraInterfaces, ), {, if, (]
[if, (, extraInterfaces, ==, null, ), {, return, ;, }, for, (, Class, i, :, extraInterfaces, ), {, if, (]
[extraInterfaces, ==, null, ), {, return, ;, }, for, (, Class, i, :, extraInterfaces, ), {, if, (, classToMock, ==]
[), {, return, ;, }, for, (, Class, i, :, extraInterfaces, ), {, if, (, classToMock, ==, i, ), {]
[), {, return, ;, }, for, (, Class, i, :, extraInterfaces, ), {, if, (, classToMock, ==, i, ), {]
[Class, i, :, extraInterfaces, ), {, if, (, classToMock, ==, i, ), {, new, Reporter, (, ), ., extraInterfacesCannotContainMockedType, (]
[(, classToMock, ), ;, }, }, }, public, void, validateMockedType, (, Class, classToMock, ,, Object, spiedInstance, ), {, if, (]
[(, classToMock, ), ;, }, }, }, public, void, validateMockedType, (, Class, classToMock, ,, Object, spiedInstance, ), {, if, (]
[(, classToMock, ), ;, }, }, }, public, void, validateMockedType, (, Class, classToMock, ,, Object, spiedInstance, ), {, if, (]
[), ;, }, }, }, public, void, validateMockedType, (, Class, classToMock, ,, Object, spiedInstance, ), {, if, (, classToMock, ==]
[}, }, }, public, void, validateMockedType, (, Class, classToMock, ,, Object, spiedInstance, ), {, if, (, classToMock, ==, null, ||]
[}, }, }, public, void, validateMockedType, (, Class, classToMock, ,, Object, spiedInstance, ), {, if, (, classToMock, ==, null, ||]
[}, public, void, validateMockedType, (, Class, classToMock, ,, Object, spiedInstance, ), {, if, (, classToMock, ==, null, ||, spiedInstance, ==]
[Object, spiedInstance, ), {, if, (, classToMock, ==, null, ||, spiedInstance, ==, null, ), {, return, ;, }, if, (]
[spiedInstance, ), {, if, (, classToMock, ==, null, ||, spiedInstance, ==, null, ), {, return, ;, }, if, (, !]
[spiedInstance, ), {, if, (, classToMock, ==, null, ||, spiedInstance, ==, null, ), {, return, ;, }, if, (, !]
[(, classToMock, ==, null, ||, spiedInstance, ==, null, ), {, return, ;, }, if, (, !, classToMock, ., equals, (]
[(, classToMock, ==, null, ||, spiedInstance, ==, null, ), {, return, ;, }, if, (, !, classToMock, ., equals, (]
[), {, return, ;, }, if, (, !, classToMock, ., equals, (, spiedInstance, ., getClass, (, ), ), ), {]
[), {, return, ;, }, if, (, !, classToMock, ., equals, (, spiedInstance, ., getClass, (, ), ), ), {]
[!, classToMock, ., equals, (, spiedInstance, ., getClass, (, ), ), ), {, new, Reporter, (, ), ., mockedTypeIsInconsistentWithSpiedInstanceType, (]
[., equals, (, spiedInstance, ., getClass, (, ), ), ), {, new, Reporter, (, ), ., mockedTypeIsInconsistentWithSpiedInstanceType, (, classToMock, ,]
[classToMock, ,, spiedInstance, ), ;, }, }, public, void, validateDelegatedInstance, (, Class, classToMock, ,, Object, delegatedInstance, ), {, if, (]
[classToMock, ,, spiedInstance, ), ;, }, }, public, void, validateDelegatedInstance, (, Class, classToMock, ,, Object, delegatedInstance, ), {, if, (]
[classToMock, ,, spiedInstance, ), ;, }, }, public, void, validateDelegatedInstance, (, Class, classToMock, ,, Object, delegatedInstance, ), {, if, (]
[spiedInstance, ), ;, }, }, public, void, validateDelegatedInstance, (, Class, classToMock, ,, Object, delegatedInstance, ), {, if, (, classToMock, ==]
[;, }, }, public, void, validateDelegatedInstance, (, Class, classToMock, ,, Object, delegatedInstance, ), {, if, (, classToMock, ==, null, ||]
[;, }, }, public, void, validateDelegatedInstance, (, Class, classToMock, ,, Object, delegatedInstance, ), {, if, (, classToMock, ==, null, ||]
[}, public, void, validateDelegatedInstance, (, Class, classToMock, ,, Object, delegatedInstance, ), {, if, (, classToMock, ==, null, ||, delegatedInstance, ==]
[Object, delegatedInstance, ), {, if, (, classToMock, ==, null, ||, delegatedInstance, ==, null, ), {, return, ;, }, if, (]
[Object, delegatedInstance, ), {, if, (, classToMock, ==, null, ||, delegatedInstance, ==, null, ), {, return, ;, }, if, (]
[Object, delegatedInstance, ), {, if, (, classToMock, ==, null, ||, delegatedInstance, ==, null, ), {, return, ;, }, if, (]
[null, ||, delegatedInstance, ==, null, ), {, return, ;, }, if, (, delegatedInstance, ., getClass, (, ), ., isAssignableFrom, (]
[null, ), {, return, ;, }, if, (, delegatedInstance, ., getClass, (, ), ., isAssignableFrom, (, classToMock, ), ), {]
[null, ), {, return, ;, }, if, (, delegatedInstance, ., getClass, (, ), ., isAssignableFrom, (, classToMock, ), ), {]
[(, delegatedInstance, ., getClass, (, ), ., isAssignableFrom, (, classToMock, ), ), {, new, Reporter, (, ), ., mockedTypeIsInconsistentWithDelegatedInstanceType, (]
[., getClass, (, ), ., isAssignableFrom, (, classToMock, ), ), {, new, Reporter, (, ), ., mockedTypeIsInconsistentWithDelegatedInstanceType, (, classToMock, ,]
[classToMock, ,, delegatedInstance, ), ;, }, }, public, void, validateSerializable, (, Class, classToMock, ,, boolean, serializable, ), {, if, (]
[classToMock, ,, delegatedInstance, ), ;, }, }, public, void, validateSerializable, (, Class, classToMock, ,, boolean, serializable, ), {, if, (]
[classToMock, ,, delegatedInstance, ), ;, }, }, public, void, validateSerializable, (, Class, classToMock, ,, boolean, serializable, ), {, if, (]
[classToMock, ,, delegatedInstance, ), ;, }, }, public, void, validateSerializable, (, Class, classToMock, ,, boolean, serializable, ), {, if, (]
[delegatedInstance, ), ;, }, }, public, void, validateSerializable, (, Class, classToMock, ,, boolean, serializable, ), {, if, (, serializable, &&]
[), ;, }, }, public, void, validateSerializable, (, Class, classToMock, ,, boolean, serializable, ), {, if, (, serializable, &&, !]
[), ;, }, }, public, void, validateSerializable, (, Class, classToMock, ,, boolean, serializable, ), {, if, (, serializable, &&, !]
[validateSerializable, (, Class, classToMock, ,, boolean, serializable, ), {, if, (, serializable, &&, !, classToMock, ., isInterface, (, ), &&]
[(, Class, classToMock, ,, boolean, serializable, ), {, if, (, serializable, &&, !, classToMock, ., isInterface, (, ), &&, !]
[Class, classToMock, ,, boolean, serializable, ), {, if, (, serializable, &&, !, classToMock, ., isInterface, (, ), &&, !, (]
[Class, classToMock, ,, boolean, serializable, ), {, if, (, serializable, &&, !, classToMock, ., isInterface, (, ), &&, !, (]
[{, if, (, serializable, &&, !, classToMock, ., isInterface, (, ), &&, !, (, Serializable, ., class, ., isAssignableFrom, (]
[&&, !, classToMock, ., isInterface, (, ), &&, !, (, Serializable, ., class, ., isAssignableFrom, (, classToMock, ), ), &&]
[&&, !, classToMock, ., isInterface, (, ), &&, !, (, Serializable, ., class, ., isAssignableFrom, (, classToMock, ), ), &&]
[&&, !, classToMock, ., isInterface, (, ), &&, !, (, Serializable, ., class, ., isAssignableFrom, (, classToMock, ), ), &&]
[isInterface, (, ), &&, !, (, Serializable, ., class, ., isAssignableFrom, (, classToMock, ), ), &&, Constructors, ., noArgConstructorOf, (]
[&&, !, (, Serializable, ., class, ., isAssignableFrom, (, classToMock, ), ), &&, Constructors, ., noArgConstructorOf, (, classToMock, ), ==]
[Serializable, ., class, ., isAssignableFrom, (, classToMock, ), ), &&, Constructors, ., noArgConstructorOf, (, classToMock, ), ==, null, ), {]
[Serializable, ., class, ., isAssignableFrom, (, classToMock, ), ), &&, Constructors, ., noArgConstructorOf, (, classToMock, ), ==, null, ), {]
[), ), &&, Constructors, ., noArgConstructorOf, (, classToMock, ), ==, null, ), {, new, Reporter, (, ), ., serializableWontWorkForObjectsThatDontImplementSerializable, (]
[serializableWontWorkForObjectsThatDontImplementSerializable, (, classToMock, ), ;, }, }, public, void, validateConstructorUse, (, boolean, usingConstructor, ,, SerializableMode, mode, ), {, if, (]
[serializableWontWorkForObjectsThatDontImplementSerializable, (, classToMock, ), ;, }, }, public, void, validateConstructorUse, (, boolean, usingConstructor, ,, SerializableMode, mode, ), {, if, (]
[classToMock, ), ;, }, }, public, void, validateConstructorUse, (, boolean, usingConstructor, ,, SerializableMode, mode, ), {, if, (, usingConstructor, &&]
[classToMock, ), ;, }, }, public, void, validateConstructorUse, (, boolean, usingConstructor, ,, SerializableMode, mode, ), {, if, (, usingConstructor, &&]
[;, }, }, public, void, validateConstructorUse, (, boolean, usingConstructor, ,, SerializableMode, mode, ), {, if, (, usingConstructor, &&, mode, ==]
[;, }, }, public, void, validateConstructorUse, (, boolean, usingConstructor, ,, SerializableMode, mode, ), {, if, (, usingConstructor, &&, mode, ==]
[validateConstructorUse, (, boolean, usingConstructor, ,, SerializableMode, mode, ), {, if, (, usingConstructor, &&, mode, ==, SerializableMode, ., ACROSS_CLASSLOADERS, ), {]
[validateConstructorUse, (, boolean, usingConstructor, ,, SerializableMode, mode, ), {, if, (, usingConstructor, &&, mode, ==, SerializableMode, ., ACROSS_CLASSLOADERS, ), {]
[), {, if, (, usingConstructor, &&, mode, ==, SerializableMode, ., ACROSS_CLASSLOADERS, ), {, new, Reporter, (, ), ., usingConstructorWithFancySerializable, (]
