[;, public, static, JSSourceFile, fromFile, (, String, fileName, ,, Charset, charSet, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile]
[;, }, public, static, JSSourceFile, fromFile, (, String, fileName, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (, fileName]
[), ;, }, public, static, JSSourceFile, fromFile, (, String, fileName, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (]
[., fromFile, (, fileName, ,, charSet, ), ), ;, }, public, static, JSSourceFile, fromFile, (, String, fileName, ), {, return]
[,, charSet, ), ), ;, }, public, static, JSSourceFile, fromFile, (, String, fileName, ), {, return, new, JSSourceFile, (, SourceFile]
[), ), ;, }, public, static, JSSourceFile, fromFile, (, String, fileName, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile]
[;, }, public, static, JSSourceFile, fromFile, (, File, file, ,, Charset, charSet, ), {, return, new, JSSourceFile, (, SourceFile, .]
[), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ,, Charset, charSet, ), {, return, new, JSSourceFile, (, SourceFile]
[., fromFile, (, fileName, ,, Charsets, ., UTF_8, ), ), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ,]
[,, Charsets, ., UTF_8, ), ), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ,, Charset, charSet, ), {]
[), ), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ,, Charset, charSet, ), {, return, new, JSSourceFile, (]
[., UTF_8, ), ), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ,, Charset, charSet, ), {, return, new]
[;, }, public, static, JSSourceFile, fromFile, (, File, file, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (, file]
[), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile, (]
[., fromFile, (, file, ,, charSet, ), ), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ), {, return]
[,, charSet, ), ), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ), {, return, new, JSSourceFile, (, SourceFile]
[), ), ;, }, public, static, JSSourceFile, fromFile, (, File, file, ), {, return, new, JSSourceFile, (, SourceFile, ., fromFile]
[;, }, public, static, JSSourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return, new, JSSourceFile, (, SourceFile, .]
[), ;, }, public, static, JSSourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return, new, JSSourceFile, (, SourceFile]
[., fromFile, (, file, ,, Charsets, ., UTF_8, ), ), ;, }, public, static, JSSourceFile, fromCode, (, String, fileName, ,]
[,, Charsets, ., UTF_8, ), ), ;, }, public, static, JSSourceFile, fromCode, (, String, fileName, ,, String, code, ), {]
[), ), ;, }, public, static, JSSourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return, new, JSSourceFile, (]
[., UTF_8, ), ), ;, }, public, static, JSSourceFile, fromCode, (, String, fileName, ,, String, code, ), {, return, new]
[;, }, public, static, JSSourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, new, JSSourceFile, (]
[), ;, }, public, static, JSSourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, new, JSSourceFile]
[., fromCode, (, fileName, ,, code, ), ), ;, }, public, static, JSSourceFile, fromInputStream, (, String, fileName, ,, InputStream, s]
[,, code, ), ), ;, }, public, static, JSSourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {]
[), ), ;, }, public, static, JSSourceFile, fromInputStream, (, String, fileName, ,, InputStream, s, ), throws, IOException, {, return, new]
[;, }, public, static, JSSourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new, JSSourceFile, (, SourceFile, .]
[), ;, }, public, static, JSSourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new, JSSourceFile, (, SourceFile]
[., fromInputStream, (, fileName, ,, s, ), ), ;, }, public, static, JSSourceFile, fromGenerator, (, String, fileName, ,, Generator, generator]
[,, s, ), ), ;, }, public, static, JSSourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new]
[), ), ;, }, public, static, JSSourceFile, fromGenerator, (, String, fileName, ,, Generator, generator, ), {, return, new, JSSourceFile, (]
[;, }, private, SourceFile, referenced, ;, private, JSSourceFile, (, SourceFile, referenced, ), {, super, (, referenced, ., getName, (, )]
[), ;, }, private, SourceFile, referenced, ;, private, JSSourceFile, (, SourceFile, referenced, ), {, super, (, referenced, ., getName, (]
[., fromGenerator, (, fileName, ,, generator, ), ), ;, }, private, SourceFile, referenced, ;, private, JSSourceFile, (, SourceFile, referenced, )]
[,, generator, ), ), ;, }, private, SourceFile, referenced, ;, private, JSSourceFile, (, SourceFile, referenced, ), {, super, (, referenced]
[), ), ;, }, private, SourceFile, referenced, ;, private, JSSourceFile, (, SourceFile, referenced, ), {, super, (, referenced, ., getName]
[), ;, this, ., referenced, =, referenced, ;, }, @, Override, public, String, getCode, (, ), throws, IOException, {, return]
[., getName, (, ), ), ;, this, ., referenced, =, referenced, ;, }, @, Override, public, String, getCode, (, )]
[=, referenced, ;, }, @, Override, public, String, getCode, (, ), throws, IOException, {, return, referenced, ., getCode, (, )]
[., referenced, =, referenced, ;, }, @, Override, public, String, getCode, (, ), throws, IOException, {, return, referenced, ., getCode]
[;, }, @, Override, public, String, getCode, (, ), throws, IOException, {, return, referenced, ., getCode, (, ), ;, }]
[;, }, @, Override, public, void, clearCachedSource, (, ), {, referenced, ., clearCachedSource, (, ), ;, }, @, Override, @]
[., getCode, (, ), ;, }, @, Override, public, void, clearCachedSource, (, ), {, referenced, ., clearCachedSource, (, ), ;]
[;, }, @, Override, @, VisibleForTesting, String, getCodeNoCache, (, ), {, return, referenced, ., getCodeNoCache, (, ), ;, }, }]
[., clearCachedSource, (, ), ;, }, @, Override, @, VisibleForTesting, String, getCodeNoCache, (, ), {, return, referenced, ., getCodeNoCache, (]
[;, }, }]
[., getCodeNoCache, (, ), ;, }, }]
