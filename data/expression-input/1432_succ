[;, private, final, AbstractCompiler, compiler, ;, public, CheckDebuggerStatement, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;, }]
[., disabled, (, "JSC_DEBUGGER_STATEMENT_PRESENT", ,, "Using the debugger statement can halt your application if the user ", +, "has a JavaScript debugger running.", ), ;, private, final, AbstractCompiler, compiler, ;, public, CheckDebuggerStatement, (, AbstractCompiler, compiler]
[,, "Using the debugger statement can halt your application if the user ", +, "has a JavaScript debugger running.", ), ;, private, final, AbstractCompiler, compiler, ;, public, CheckDebuggerStatement, (, AbstractCompiler, compiler, ), {, this, .]
[), ;, private, final, AbstractCompiler, compiler, ;, public, CheckDebuggerStatement, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;]
[+, "has a JavaScript debugger running.", ), ;, private, final, AbstractCompiler, compiler, ;, public, CheckDebuggerStatement, (, AbstractCompiler, compiler, ), {, this, ., compiler, =]
[), ;, private, final, AbstractCompiler, compiler, ;, public, CheckDebuggerStatement, (, AbstractCompiler, compiler, ), {, this, ., compiler, =, compiler, ;]
[=, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse]
[., compiler, =, compiler, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, NodeTraversal, ., traverse, (, compiler]
[;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if, (]
[., traverse, (, compiler, ,, root, ,, this, ), ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,]
[,, root, ,, this, ), ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node]
[,, this, ), ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, )]
[), ;, }, @, Override, public, void, visit, (, NodeTraversal, t, ,, Node, n, ,, Node, parent, ), {, if]
[), {, t, ., report, (, n, ,, DEBUGGER_STATEMENT_PRESENT, ), ;, }, }, }]
[., isDebugger, (, ), ), {, t, ., report, (, n, ,, DEBUGGER_STATEMENT_PRESENT, ), ;, }, }, }]
[;, }, }, }]
[., report, (, n, ,, DEBUGGER_STATEMENT_PRESENT, ), ;, }, }, }]
[,, DEBUGGER_STATEMENT_PRESENT, ), ;, }, }, }]
[), ;, }, }, }]
