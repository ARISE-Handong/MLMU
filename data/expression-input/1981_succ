[;, protected, ThirdMoment, moment, =, null, ;, protected, boolean, incMoment, ;, public, Skewness, (, ), {, incMoment, =, true, ;]
[;, protected, boolean, incMoment, ;, public, Skewness, (, ), {, incMoment, =, true, ;, moment, =, new, ThirdMoment, (, )]
[=, true, ;, moment, =, new, ThirdMoment, (, ), ;, }, public, Skewness, (, final, ThirdMoment, m3, ), {, incMoment]
[;, moment, =, new, ThirdMoment, (, ), ;, }, public, Skewness, (, final, ThirdMoment, m3, ), {, incMoment, =, false]
[=, new, ThirdMoment, (, ), ;, }, public, Skewness, (, final, ThirdMoment, m3, ), {, incMoment, =, false, ;, this]
[;, }, public, Skewness, (, final, ThirdMoment, m3, ), {, incMoment, =, false, ;, this, ., moment, =, m3, ;]
[=, false, ;, this, ., moment, =, m3, ;, }, public, Skewness, (, Skewness, original, ), throws, NullArgumentException, {, copy]
[;, this, ., moment, =, m3, ;, }, public, Skewness, (, Skewness, original, ), throws, NullArgumentException, {, copy, (, original]
[=, m3, ;, }, public, Skewness, (, Skewness, original, ), throws, NullArgumentException, {, copy, (, original, ,, this, ), ;]
[., moment, =, m3, ;, }, public, Skewness, (, Skewness, original, ), throws, NullArgumentException, {, copy, (, original, ,, this]
[;, }, public, Skewness, (, Skewness, original, ), throws, NullArgumentException, {, copy, (, original, ,, this, ), ;, }, @]
[;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, incMoment, ), {, moment, .]
[,, this, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, incMoment, )]
[), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, incMoment, ), {, moment]
[), {, moment, ., increment, (, d, ), ;, }, }, @, Override, public, double, getResult, (, ), {, if]
[;, }, }, @, Override, public, double, getResult, (, ), {, if, (, moment, ., n, <, 3, ), {]
[., increment, (, d, ), ;, }, }, @, Override, public, double, getResult, (, ), {, if, (, moment, .]
[), ;, }, }, @, Override, public, double, getResult, (, ), {, if, (, moment, ., n, <, 3, )]
[), {, return, Double, ., NaN, ;, }, double, variance, =, moment, ., m2, /, (, moment, ., n, -]
[<, 3, ), {, return, Double, ., NaN, ;, }, double, variance, =, moment, ., m2, /, (, moment, .]
[., n, <, 3, ), {, return, Double, ., NaN, ;, }, double, variance, =, moment, ., m2, /, (]
[), {, return, Double, ., NaN, ;, }, double, variance, =, moment, ., m2, /, (, moment, ., n, -]
[;, }, double, variance, =, moment, ., m2, /, (, moment, ., n, -, 1, ), ;, if, (, variance]
[., NaN, ;, }, double, variance, =, moment, ., m2, /, (, moment, ., n, -, 1, ), ;, if]
[;, if, (, variance, <, 10E-20, ), {, return, 0.0d, ;, }, else, {, double, n0, =, moment, ., getN]
[/, (, moment, ., n, -, 1, ), ;, if, (, variance, <, 10E-20, ), {, return, 0.0d, ;, }]
[., m2, /, (, moment, ., n, -, 1, ), ;, if, (, variance, <, 10E-20, ), {, return, 0.0d]
[;, if, (, variance, <, 10E-20, ), {, return, 0.0d, ;, }, else, {, double, n0, =, moment, ., getN]
[), ;, if, (, variance, <, 10E-20, ), {, return, 0.0d, ;, }, else, {, double, n0, =, moment, .]
[-, 1, ), ;, if, (, variance, <, 10E-20, ), {, return, 0.0d, ;, }, else, {, double, n0, =]
[., n, -, 1, ), ;, if, (, variance, <, 10E-20, ), {, return, 0.0d, ;, }, else, {, double]
[), ;, if, (, variance, <, 10E-20, ), {, return, 0.0d, ;, }, else, {, double, n0, =, moment, .]
[), {, return, 0.0d, ;, }, else, {, double, n0, =, moment, ., getN, (, ), ;, return, (, n0]
[<, 10E-20, ), {, return, 0.0d, ;, }, else, {, double, n0, =, moment, ., getN, (, ), ;, return]
[), {, return, 0.0d, ;, }, else, {, double, n0, =, moment, ., getN, (, ), ;, return, (, n0]
[;, }, else, {, double, n0, =, moment, ., getN, (, ), ;, return, (, n0, *, moment, ., m3]
[;, return, (, n0, *, moment, ., m3, ), /, (, (, n0, -, 1, ), *, (, n0, -]
[., getN, (, ), ;, return, (, n0, *, moment, ., m3, ), /, (, (, n0, -, 1, )]
[;, }, }, public, long, getN, (, ), {, return, moment, ., getN, (, ), ;, }, @, Override, public]
[/, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, FastMath, ., sqrt, (, variance, )]
[), /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, FastMath, ., sqrt, (, variance]
[*, moment, ., m3, ), /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, FastMath]
[), /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, FastMath, ., sqrt, (, variance]
[., m3, ), /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), *, FastMath, ., sqrt]
[;, }, }, public, long, getN, (, ), {, return, moment, ., getN, (, ), ;, }, @, Override, public]
[), ;, }, }, public, long, getN, (, ), {, return, moment, ., getN, (, ), ;, }, @, Override]
[*, variance, ), ;, }, }, public, long, getN, (, ), {, return, moment, ., getN, (, ), ;, }]
[*, FastMath, ., sqrt, (, variance, ), *, variance, ), ;, }, }, public, long, getN, (, ), {, return]
[*, (, n0, -, 2, ), *, FastMath, ., sqrt, (, variance, ), *, variance, ), ;, }, }, public]
[), *, (, n0, -, 2, ), *, FastMath, ., sqrt, (, variance, ), *, variance, ), ;, }, }]
[-, 1, ), *, (, n0, -, 2, ), *, FastMath, ., sqrt, (, variance, ), *, variance, ), ;]
[), *, (, n0, -, 2, ), *, FastMath, ., sqrt, (, variance, ), *, variance, ), ;, }, }]
[*, FastMath, ., sqrt, (, variance, ), *, variance, ), ;, }, }, public, long, getN, (, ), {, return]
[), *, FastMath, ., sqrt, (, variance, ), *, variance, ), ;, }, }, public, long, getN, (, ), {]
[-, 2, ), *, FastMath, ., sqrt, (, variance, ), *, variance, ), ;, }, }, public, long, getN, (]
[), *, FastMath, ., sqrt, (, variance, ), *, variance, ), ;, }, }, public, long, getN, (, ), {]
[*, variance, ), ;, }, }, public, long, getN, (, ), {, return, moment, ., getN, (, ), ;, }]
[., sqrt, (, variance, ), *, variance, ), ;, }, }, public, long, getN, (, ), {, return, moment, .]
[), *, variance, ), ;, }, }, public, long, getN, (, ), {, return, moment, ., getN, (, ), ;]
[), ;, }, }, public, long, getN, (, ), {, return, moment, ., getN, (, ), ;, }, @, Override]
[;, }, @, Override, public, void, clear, (, ), {, if, (, incMoment, ), {, moment, ., clear, (, )]
[., getN, (, ), ;, }, @, Override, public, void, clear, (, ), {, if, (, incMoment, ), {, moment]
[), {, moment, ., clear, (, ), ;, }, }, @, Override, public, double, evaluate, (, final, double, [, ]]
[;, }, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final, int, begin, ,, final]
[., clear, (, ), ;, }, }, @, Override, public, double, evaluate, (, final, double, [, ], values, ,, final]
[;, if, (, test, (, values, ,, begin, ,, length, ), &&, length, >, 2, ), {, Mean, mean, =]
[., NaN, ;, if, (, test, (, values, ,, begin, ,, length, ), &&, length, >, 2, ), {, Mean]
[), {, Mean, mean, =, new, Mean, (, ), ;, double, m, =, mean, ., evaluate, (, values, ,, begin]
[&&, length, >, 2, ), {, Mean, mean, =, new, Mean, (, ), ;, double, m, =, mean, ., evaluate]
[,, begin, ,, length, ), &&, length, >, 2, ), {, Mean, mean, =, new, Mean, (, ), ;, double]
[,, length, ), &&, length, >, 2, ), {, Mean, mean, =, new, Mean, (, ), ;, double, m, =]
[), &&, length, >, 2, ), {, Mean, mean, =, new, Mean, (, ), ;, double, m, =, mean, .]
[), {, Mean, mean, =, new, Mean, (, ), ;, double, m, =, mean, ., evaluate, (, values, ,, begin]
[>, 2, ), {, Mean, mean, =, new, Mean, (, ), ;, double, m, =, mean, ., evaluate, (, values]
[), {, Mean, mean, =, new, Mean, (, ), ;, double, m, =, mean, ., evaluate, (, values, ,, begin]
[;, double, m, =, mean, ., evaluate, (, values, ,, begin, ,, length, ), ;, double, accum, =, 0.0, ;]
[;, double, accum, =, 0.0, ;, double, accum2, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <]
[., evaluate, (, values, ,, begin, ,, length, ), ;, double, accum, =, 0.0, ;, double, accum2, =, 0.0, ;]
[,, begin, ,, length, ), ;, double, accum, =, 0.0, ;, double, accum2, =, 0.0, ;, for, (, int, i]
[,, length, ), ;, double, accum, =, 0.0, ;, double, accum2, =, 0.0, ;, for, (, int, i, =, begin]
[), ;, double, accum, =, 0.0, ;, double, accum2, =, 0.0, ;, for, (, int, i, =, begin, ;, i]
[;, double, accum2, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i]
[;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i, ++, ), {, final, double]
[;, i, <, begin, +, length, ;, i, ++, ), {, final, double, d, =, values, [, i, ], -]
[;, i, ++, ), {, final, double, d, =, values, [, i, ], -, m, ;, accum, +=, d, *]
[<, begin, +, length, ;, i, ++, ), {, final, double, d, =, values, [, i, ], -, m, ;]
[;, i, ++, ), {, final, double, d, =, values, [, i, ], -, m, ;, accum, +=, d, *]
[+, length, ;, i, ++, ), {, final, double, d, =, values, [, i, ], -, m, ;, accum, +=]
[;, i, ++, ), {, final, double, d, =, values, [, i, ], -, m, ;, accum, +=, d, *]
[), {, final, double, d, =, values, [, i, ], -, m, ;, accum, +=, d, *, d, ;, accum2]
[++, ), {, final, double, d, =, values, [, i, ], -, m, ;, accum, +=, d, *, d, ;]
[;, accum, +=, d, *, d, ;, accum2, +=, d, ;, }, final, double, variance, =, (, accum, -, (]
[-, m, ;, accum, +=, d, *, d, ;, accum2, +=, d, ;, }, final, double, variance, =, (, accum]
[[, i, ], -, m, ;, accum, +=, d, *, d, ;, accum2, +=, d, ;, }, final, double, variance]
[], -, m, ;, accum, +=, d, *, d, ;, accum2, +=, d, ;, }, final, double, variance, =, (]
[;, accum, +=, d, *, d, ;, accum2, +=, d, ;, }, final, double, variance, =, (, accum, -, (]
[+=, d, *, d, ;, accum2, +=, d, ;, }, final, double, variance, =, (, accum, -, (, accum2, *]
[;, accum2, +=, d, ;, }, final, double, variance, =, (, accum, -, (, accum2, *, accum2, /, length, )]
[*, d, ;, accum2, +=, d, ;, }, final, double, variance, =, (, accum, -, (, accum2, *, accum2, /]
[;, accum2, +=, d, ;, }, final, double, variance, =, (, accum, -, (, accum2, *, accum2, /, length, )]
[+=, d, ;, }, final, double, variance, =, (, accum, -, (, accum2, *, accum2, /, length, ), ), /]
[;, }, final, double, variance, =, (, accum, -, (, accum2, *, accum2, /, length, ), ), /, (, length]
[;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i]
[/, (, length, -, 1, ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i]
[), /, (, length, -, 1, ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;]
[-, (, accum2, *, accum2, /, length, ), ), /, (, length, -, 1, ), ;, double, accum3, =, 0.0]
[), /, (, length, -, 1, ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;]
[), ), /, (, length, -, 1, ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin]
[/, length, ), ), /, (, length, -, 1, ), ;, double, accum3, =, 0.0, ;, for, (, int, i]
[*, accum2, /, length, ), ), /, (, length, -, 1, ), ;, double, accum3, =, 0.0, ;, for, (]
[/, length, ), ), /, (, length, -, 1, ), ;, double, accum3, =, 0.0, ;, for, (, int, i]
[), ), /, (, length, -, 1, ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin]
[;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i]
[), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;]
[-, 1, ), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <, begin, +]
[), ;, double, accum3, =, 0.0, ;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;]
[;, for, (, int, i, =, begin, ;, i, <, begin, +, length, ;, i, ++, ), {, final, double]
[;, i, <, begin, +, length, ;, i, ++, ), {, final, double, d, =, values, [, i, ], -]
[;, i, ++, ), {, final, double, d, =, values, [, i, ], -, m, ;, accum3, +=, d, *]
[<, begin, +, length, ;, i, ++, ), {, final, double, d, =, values, [, i, ], -, m, ;]
[;, i, ++, ), {, final, double, d, =, values, [, i, ], -, m, ;, accum3, +=, d, *]
[+, length, ;, i, ++, ), {, final, double, d, =, values, [, i, ], -, m, ;, accum3, +=]
[;, i, ++, ), {, final, double, d, =, values, [, i, ], -, m, ;, accum3, +=, d, *]
[), {, final, double, d, =, values, [, i, ], -, m, ;, accum3, +=, d, *, d, *, d]
[++, ), {, final, double, d, =, values, [, i, ], -, m, ;, accum3, +=, d, *, d, *]
[;, accum3, +=, d, *, d, *, d, ;, }, accum3, /=, variance, *, FastMath, ., sqrt, (, variance, )]
[-, m, ;, accum3, +=, d, *, d, *, d, ;, }, accum3, /=, variance, *, FastMath, ., sqrt, (]
[[, i, ], -, m, ;, accum3, +=, d, *, d, *, d, ;, }, accum3, /=, variance, *, FastMath]
[], -, m, ;, accum3, +=, d, *, d, *, d, ;, }, accum3, /=, variance, *, FastMath, ., sqrt]
[;, accum3, +=, d, *, d, *, d, ;, }, accum3, /=, variance, *, FastMath, ., sqrt, (, variance, )]
[+=, d, *, d, *, d, ;, }, accum3, /=, variance, *, FastMath, ., sqrt, (, variance, ), ;, double]
[;, }, accum3, /=, variance, *, FastMath, ., sqrt, (, variance, ), ;, double, n0, =, length, ;, skew, =]
[*, d, ;, }, accum3, /=, variance, *, FastMath, ., sqrt, (, variance, ), ;, double, n0, =, length, ;]
[*, d, *, d, ;, }, accum3, /=, variance, *, FastMath, ., sqrt, (, variance, ), ;, double, n0, =]
[*, d, ;, }, accum3, /=, variance, *, FastMath, ., sqrt, (, variance, ), ;, double, n0, =, length, ;]
[;, }, accum3, /=, variance, *, FastMath, ., sqrt, (, variance, ), ;, double, n0, =, length, ;, skew, =]
[/=, variance, *, FastMath, ., sqrt, (, variance, ), ;, double, n0, =, length, ;, skew, =, (, n0, /]
[;, double, n0, =, length, ;, skew, =, (, n0, /, (, (, n0, -, 1, ), *, (, n0]
[*, FastMath, ., sqrt, (, variance, ), ;, double, n0, =, length, ;, skew, =, (, n0, /, (, (]
[;, double, n0, =, length, ;, skew, =, (, n0, /, (, (, n0, -, 1, ), *, (, n0]
[., sqrt, (, variance, ), ;, double, n0, =, length, ;, skew, =, (, n0, /, (, (, n0, -]
[), ;, double, n0, =, length, ;, skew, =, (, n0, /, (, (, n0, -, 1, ), *, (]
[;, skew, =, (, n0, /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), ), )]
[=, (, n0, /, (, (, n0, -, 1, ), *, (, n0, -, 2, ), ), ), *, accum3]
[;, }, return, skew, ;, }, @, Override, public, Skewness, copy, (, ), {, Skewness, result, =, new, Skewness, (]
[*, accum3, ;, }, return, skew, ;, }, @, Override, public, Skewness, copy, (, ), {, Skewness, result, =, new]
[), *, accum3, ;, }, return, skew, ;, }, @, Override, public, Skewness, copy, (, ), {, Skewness, result, =]
[/, (, (, n0, -, 1, ), *, (, n0, -, 2, ), ), ), *, accum3, ;, }, return]
[), *, accum3, ;, }, return, skew, ;, }, @, Override, public, Skewness, copy, (, ), {, Skewness, result, =]
[), ), *, accum3, ;, }, return, skew, ;, }, @, Override, public, Skewness, copy, (, ), {, Skewness, result]
[*, (, n0, -, 2, ), ), ), *, accum3, ;, }, return, skew, ;, }, @, Override, public, Skewness]
[), *, (, n0, -, 2, ), ), ), *, accum3, ;, }, return, skew, ;, }, @, Override, public]
[-, 1, ), *, (, n0, -, 2, ), ), ), *, accum3, ;, }, return, skew, ;, }, @]
[), *, (, n0, -, 2, ), ), ), *, accum3, ;, }, return, skew, ;, }, @, Override, public]
[), ), *, accum3, ;, }, return, skew, ;, }, @, Override, public, Skewness, copy, (, ), {, Skewness, result]
[), ), ), *, accum3, ;, }, return, skew, ;, }, @, Override, public, Skewness, copy, (, ), {, Skewness]
[-, 2, ), ), ), *, accum3, ;, }, return, skew, ;, }, @, Override, public, Skewness, copy, (, )]
[), ), ), *, accum3, ;, }, return, skew, ;, }, @, Override, public, Skewness, copy, (, ), {, Skewness]
[;, }, return, skew, ;, }, @, Override, public, Skewness, copy, (, ), {, Skewness, result, =, new, Skewness, (]
[;, }, @, Override, public, Skewness, copy, (, ), {, Skewness, result, =, new, Skewness, (, ), ;, copy, (]
[;, copy, (, this, ,, result, ), ;, return, result, ;, }, public, static, void, copy, (, Skewness, source, ,]
[;, return, result, ;, }, public, static, void, copy, (, Skewness, source, ,, Skewness, dest, ), throws, NullArgumentException, {, MathUtils]
[,, result, ), ;, return, result, ;, }, public, static, void, copy, (, Skewness, source, ,, Skewness, dest, ), throws]
[), ;, return, result, ;, }, public, static, void, copy, (, Skewness, source, ,, Skewness, dest, ), throws, NullArgumentException, {]
[;, }, public, static, void, copy, (, Skewness, source, ,, Skewness, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (]
[;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest]
[., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;]
[;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., moment, =, new, ThirdMoment, (, source]
[., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., moment]
[), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., moment, =, new, ThirdMoment, (]
[;, dest, ., moment, =, new, ThirdMoment, (, source, ., moment, ., copy, (, ), ), ;, dest, ., incMoment]
[., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., moment, =, new, ThirdMoment, (, source, ., moment]
[), ;, dest, ., moment, =, new, ThirdMoment, (, source, ., moment, ., copy, (, ), ), ;, dest, .]
[., getDataRef, (, ), ), ;, dest, ., moment, =, new, ThirdMoment, (, source, ., moment, ., copy, (, )]
[=, new, ThirdMoment, (, source, ., moment, ., copy, (, ), ), ;, dest, ., incMoment, =, source, ., incMoment]
[., moment, =, new, ThirdMoment, (, source, ., moment, ., copy, (, ), ), ;, dest, ., incMoment, =, source]
[;, dest, ., incMoment, =, source, ., incMoment, ;, }, }]
[), ;, dest, ., incMoment, =, source, ., incMoment, ;, }, }]
[., copy, (, ), ), ;, dest, ., incMoment, =, source, ., incMoment, ;, }, }]
[., moment, ., copy, (, ), ), ;, dest, ., incMoment, =, source, ., incMoment, ;, }, }]
[=, source, ., incMoment, ;, }, }]
[., incMoment, =, source, ., incMoment, ;, }, }]
[;, }, }]
[., incMoment, ;, }, }]
