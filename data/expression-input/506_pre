[., DatasetUtilities, ;, public, class, StackedBarRenderer, extends, BarRenderer, implements, Cloneable, ,, PublicCloneable, ,, Serializable, {, static, final, long, serialVersionUID, =]
[Serializable, {, static, final, long, serialVersionUID, =, 6402943811500067531L, ;, private, boolean, renderAsPercentages, ;, public, StackedBarRenderer, (, ), {, this, (]
[(, ), {, this, (, false, ), ;, }, public, StackedBarRenderer, (, boolean, renderAsPercentages, ), {, super, (, ), ;]
[(, ), {, this, (, false, ), ;, }, public, StackedBarRenderer, (, boolean, renderAsPercentages, ), {, super, (, ), ;]
[(, false, ), ;, }, public, StackedBarRenderer, (, boolean, renderAsPercentages, ), {, super, (, ), ;, this, ., renderAsPercentages, =]
[public, StackedBarRenderer, (, boolean, renderAsPercentages, ), {, super, (, ), ;, this, ., renderAsPercentages, =, renderAsPercentages, ;, ItemLabelPosition, p, =]
[boolean, renderAsPercentages, ), {, super, (, ), ;, this, ., renderAsPercentages, =, renderAsPercentages, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (]
[boolean, renderAsPercentages, ), {, super, (, ), ;, this, ., renderAsPercentages, =, renderAsPercentages, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (]
[super, (, ), ;, this, ., renderAsPercentages, =, renderAsPercentages, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,]
[super, (, ), ;, this, ., renderAsPercentages, =, renderAsPercentages, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,]
[., renderAsPercentages, =, renderAsPercentages, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;]
[=, renderAsPercentages, ;, ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (]
[ItemLabelPosition, p, =, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;]
[=, new, ItemLabelPosition, (, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (]
[(, ItemLabelAnchor, ., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;]
[., CENTER, ,, TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (]
[TextAnchor, ., CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;]
[CENTER, ), ;, setBasePositiveItemLabelPosition, (, p, ), ;, setBaseNegativeItemLabelPosition, (, p, ), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (]
[), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return]
[), ;, setPositiveItemLabelPositionFallback, (, null, ), ;, setNegativeItemLabelPositionFallback, (, null, ), ;, }, public, boolean, getRenderAsPercentages, (, ), {, return]
[public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {]
[public, boolean, getRenderAsPercentages, (, ), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {]
[), {, return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {, this, ., renderAsPercentages, =]
[return, this, ., renderAsPercentages, ;, }, public, void, setRenderAsPercentages, (, boolean, asPercentages, ), {, this, ., renderAsPercentages, =, asPercentages, ;]
[), {, this, ., renderAsPercentages, =, asPercentages, ;, fireChangeEvent, (, ), ;, }, public, int, getPassCount, (, ), {, return]
[public, int, getPassCount, (, ), {, return, 3, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (]
[public, int, getPassCount, (, ), {, return, 3, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (]
[getPassCount, (, ), {, return, 3, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==]
[return, 3, ;, }, public, Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==, null, ), {, return]
[Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==, null, ), {, return, null, ;, }, if, (]
[Range, findRangeBounds, (, CategoryDataset, dataset, ), {, if, (, dataset, ==, null, ), {, return, null, ;, }, if, (]
[{, if, (, dataset, ==, null, ), {, return, null, ;, }, if, (, this, ., renderAsPercentages, ), {, return]
[dataset, ==, null, ), {, return, null, ;, }, if, (, this, ., renderAsPercentages, ), {, return, new, Range, (]
[null, ), {, return, null, ;, }, if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,]
[if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return]
[if, (, this, ., renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return]
[renderAsPercentages, ), {, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (]
[{, return, new, Range, (, 0.0, ,, 1.0, ), ;, }, else, {, return, DatasetUtilities, ., findStackedRangeBounds, (, dataset, ,]
[protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, int, rendererIndex, ,, CategoryItemRendererState, state, ), {, CategoryAxis, xAxis, =]
[protected, void, calculateBarWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, int, rendererIndex, ,, CategoryItemRendererState, state, ), {, CategoryAxis, xAxis, =]
[CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, int, rendererIndex, ,, CategoryItemRendererState, state, ), {, CategoryAxis, xAxis, =, plot, ., getDomainAxisForDataset, (]
[int, rendererIndex, ,, CategoryItemRendererState, state, ), {, CategoryAxis, xAxis, =, plot, ., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =]
[int, rendererIndex, ,, CategoryItemRendererState, state, ), {, CategoryAxis, xAxis, =, plot, ., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =]
[state, ), {, CategoryAxis, xAxis, =, plot, ., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =, plot, ., getDataset, (]
[=, plot, ., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (]
[=, plot, ., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (]
[., getDomainAxisForDataset, (, rendererIndex, ), ;, CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (, data, !=]
[CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (, data, !=, null, ), {, PlotOrientation, orientation, =]
[CategoryDataset, data, =, plot, ., getDataset, (, rendererIndex, ), ;, if, (, data, !=, null, ), {, PlotOrientation, orientation, =]
[;, if, (, data, !=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =]
[!=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (]
[!=, null, ), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (]
[), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==]
[), {, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==]
[plot, ., getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[getOrientation, (, ), ;, double, space, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =]
[(, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (]
[(, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[{, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[(, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =]
[(, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =]
[==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *]
[=, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, int, columns, =]
[=, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, int, columns, =]
[maxWidth, =, space, *, getMaximumBarWidth, (, ), ;, int, columns, =, data, ., getColumnCount, (, ), ;, double, categoryMargin, =]
[getMaximumBarWidth, (, ), ;, int, columns, =, data, ., getColumnCount, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (]
[getMaximumBarWidth, (, ), ;, int, columns, =, data, ., getColumnCount, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (]
[), ;, int, columns, =, data, ., getColumnCount, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (, columns, >]
[columns, =, data, ., getColumnCount, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (, columns, >, 1, ), {]
[data, ., getColumnCount, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =]
[data, ., getColumnCount, (, ), ;, double, categoryMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =]
[;, if, (, columns, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =]
[;, if, (, columns, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =]
[(, columns, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *]
[columns, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (]
[columns, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (]
[columns, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (]
[columns, >, 1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (]
[1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -]
[1, ), {, categoryMargin, =, xAxis, ., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -]
[., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, xAxis, ., getLowerMargin, (, ), -]
[., getCategoryMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, xAxis, ., getLowerMargin, (, ), -]
[double, used, =, space, *, (, 1, -, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -]
[(, 1, -, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (]
[(, 1, -, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (]
[-, xAxis, ., getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, columns, >]
[getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, columns, >, 0, ), {]
[getLowerMargin, (, ), -, xAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, columns, >, 0, ), {]
[xAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (]
[xAxis, ., getUpperMargin, (, ), -, categoryMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (]
[), -, categoryMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[), -, categoryMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[categoryMargin, ), ;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /]
[;, if, (, columns, >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,]
[{, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else, {]
[{, state, ., setBarWidth, (, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else, {]
[(, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (]
[(, Math, ., min, (, used, /, columns, ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (]
[(, used, /, columns, ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (]
[/, columns, ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,]
[rangeAxis, ,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, if, (]
[,, CategoryDataset, dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, if, (, !]
[dataset, ,, int, row, ,, int, column, ,, boolean, selected, ,, int, pass, ), {, if, (, !, isSeriesVisible, (]
[,, int, pass, ), {, if, (, !, isSeriesVisible, (, row, ), ), {, return, ;, }, Number, dataValue, =]
[,, int, pass, ), {, if, (, !, isSeriesVisible, (, row, ), ), {, return, ;, }, Number, dataValue, =]
[{, if, (, !, isSeriesVisible, (, row, ), ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (]
[(, !, isSeriesVisible, (, row, ), ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,]
[), ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[), ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (]
[{, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==]
[getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =]
[getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =]
[dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, double, total, =]
[{, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, double, total, =, 0.0, ;, if, (]
[{, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, double, total, =, 0.0, ;, if, (]
[value, =, dataValue, ., doubleValue, (, ), ;, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {]
[dataValue, ., doubleValue, (, ), ;, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =]
[dataValue, ., doubleValue, (, ), ;, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =]
[), ;, double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =, DataUtilities, ., calculateColumnTotal, (]
[double, total, =, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,]
[=, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, column, ,]
[=, 0.0, ;, if, (, this, ., renderAsPercentages, ), {, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, column, ,]
[renderAsPercentages, ), {, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, column, ,, state, ., getVisibleSeriesArray, (, ), ), ;]
[{, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, column, ,, state, ., getVisibleSeriesArray, (, ), ), ;, value, =]
[{, total, =, DataUtilities, ., calculateColumnTotal, (, dataset, ,, column, ,, state, ., getVisibleSeriesArray, (, ), ), ;, value, =]
[=, DataUtilities, ., calculateColumnTotal, (, dataset, ,, column, ,, state, ., getVisibleSeriesArray, (, ), ), ;, value, =, value, /]
[,, column, ,, state, ., getVisibleSeriesArray, (, ), ), ;, value, =, value, /, total, ;, }, PlotOrientation, orientation, =]
[,, column, ,, state, ., getVisibleSeriesArray, (, ), ), ;, value, =, value, /, total, ;, }, PlotOrientation, orientation, =]
[;, value, =, value, /, total, ;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =]
[;, value, =, value, /, total, ;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =]
[;, value, =, value, /, total, ;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =]
[/, total, ;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, domainAxis, ., getCategoryMiddle, (]
[;, }, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,]
[=, plot, ., getOrientation, (, ), ;, double, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,]
[., getOrientation, (, ), ;, double, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[., getOrientation, (, ), ;, double, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /]
[dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, double, positiveBase, =]
[), -, state, ., getBarWidth, (, ), /, 2.0, ;, double, positiveBase, =, getBase, (, ), ;, double, negativeBase, =]
[/, 2.0, ;, double, positiveBase, =, getBase, (, ), ;, double, negativeBase, =, positiveBase, ;, for, (, int, i, =]
[;, double, positiveBase, =, getBase, (, ), ;, double, negativeBase, =, positiveBase, ;, for, (, int, i, =, 0, ;]
[;, double, positiveBase, =, getBase, (, ), ;, double, negativeBase, =, positiveBase, ;, for, (, int, i, =, 0, ;]
[positiveBase, =, getBase, (, ), ;, double, negativeBase, =, positiveBase, ;, for, (, int, i, =, 0, ;, i, <]
[getBase, (, ), ;, double, negativeBase, =, positiveBase, ;, for, (, int, i, =, 0, ;, i, <, row, ;]
[getBase, (, ), ;, double, negativeBase, =, positiveBase, ;, for, (, int, i, =, 0, ;, i, <, row, ;]
[positiveBase, ;, for, (, int, i, =, 0, ;, i, <, row, ;, i, ++, ), {, Number, v, =]
[positiveBase, ;, for, (, int, i, =, 0, ;, i, <, row, ;, i, ++, ), {, Number, v, =]
[int, i, =, 0, ;, i, <, row, ;, i, ++, ), {, Number, v, =, dataset, ., getValue, (]
[=, 0, ;, i, <, row, ;, i, ++, ), {, Number, v, =, dataset, ., getValue, (, i, ,]
[row, ;, i, ++, ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (]
[row, ;, i, ++, ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (]
[row, ;, i, ++, ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (]
[i, ++, ), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v, !=]
[), {, Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v, !=, null, &&]
[Number, v, =, dataset, ., getValue, (, i, ,, column, ), ;, if, (, v, !=, null, &&, isSeriesVisible, (]
[i, ,, column, ), ;, if, (, v, !=, null, &&, isSeriesVisible, (, i, ), ), {, double, d, =]
[i, ,, column, ), ;, if, (, v, !=, null, &&, isSeriesVisible, (, i, ), ), {, double, d, =]
[!=, null, &&, isSeriesVisible, (, i, ), ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (]
[!=, null, &&, isSeriesVisible, (, i, ), ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (]
[i, ), ), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {]
[), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, d, =]
[), {, double, d, =, v, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, d, =]
[double, d, =, v, ., doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, d, =, d, /]
[doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, d, =, d, /, total, ;, }, if, (]
[doubleValue, (, ), ;, if, (, this, ., renderAsPercentages, ), {, d, =, d, /, total, ;, }, if, (]
[), ;, if, (, this, ., renderAsPercentages, ), {, d, =, d, /, total, ;, }, if, (, d, >]
[(, this, ., renderAsPercentages, ), {, d, =, d, /, total, ;, }, if, (, d, >, 0, ), {]
[., renderAsPercentages, ), {, d, =, d, /, total, ;, }, if, (, d, >, 0, ), {, positiveBase, =]
[., renderAsPercentages, ), {, d, =, d, /, total, ;, }, if, (, d, >, 0, ), {, positiveBase, =]
[), {, d, =, d, /, total, ;, }, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +]
[/, total, ;, }, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {]
[;, }, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =]
[;, }, if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =]
[if, (, d, >, 0, ), {, positiveBase, =, positiveBase, +, d, ;, }, else, {, negativeBase, =, negativeBase, +]
[else, {, negativeBase, =, negativeBase, +, d, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =]
[{, negativeBase, =, negativeBase, +, d, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (]
[{, negativeBase, =, negativeBase, +, d, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (]
[=, negativeBase, +, d, ;, }, }, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value, >]
[}, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value, >, 0.0, ), ;, boolean, inverted, =]
[}, }, double, translatedBase, ;, double, translatedValue, ;, boolean, positive, =, (, value, >, 0.0, ), ;, boolean, inverted, =]
[(, value, >, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (]
[(, value, >, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (]
[>, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[>, 0.0, ), ;, boolean, inverted, =, rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==]
[rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[rangeAxis, ., isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (]
[isInverted, (, ), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&]
[), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||]
[), ;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||]
[;, RectangleEdge, barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !]
[barBase, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {]
[PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =]
[PlotOrientation, ., HORIZONTAL, ), {, if, (, positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =]
[positive, &&, inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {]
[inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[inverted, ||, !, positive, &&, !, inverted, ), {, barBase, =, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[=, RectangleEdge, ., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (]
[., RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&]
[RIGHT, ;, }, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !]
[}, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||]
[}, else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||]
[else, {, barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !]
[barBase, =, RectangleEdge, ., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&]
[., LEFT, ;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =]
[;, }, }, else, {, if, (, positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =]
[positive, &&, !, inverted, ||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {]
[!, inverted, ||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =]
[!, inverted, ||, !, positive, &&, inverted, ), {, barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =]
[barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =]
[barBase, =, RectangleEdge, ., BOTTOM, ;, }, else, {, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =]
[{, barBase, =, RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (]
[RectangleEdge, ., TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, positive, ), {]
[TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, positive, ), {, translatedBase, =]
[TOP, ;, }, }, RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, positive, ), {, translatedBase, =]
[RectangleEdge, location, =, plot, ., getRangeAxisEdge, (, ), ;, if, (, positive, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (]
[=, plot, ., getRangeAxisEdge, (, ), ;, if, (, positive, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,]
[., getRangeAxisEdge, (, ), ;, if, (, positive, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,]
[), ;, if, (, positive, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;]
[if, (, positive, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =]
[if, (, positive, ), {, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =]
[{, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (]
[{, translatedBase, =, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (]
[=, rangeAxis, ., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +]
[., valueToJava2D, (, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,]
[(, positiveBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,]
[), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {]
[translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =]
[translatedValue, =, rangeAxis, ., valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =]
[valueToJava2D, (, positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (]
[positiveBase, +, value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,]
[value, ,, dataArea, ,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,]
[,, location, ), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;]
[), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =]
[), ;, }, else, {, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =]
[{, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (]
[{, translatedBase, =, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (]
[=, rangeAxis, ., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +]
[., valueToJava2D, (, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,]
[(, negativeBase, ,, dataArea, ,, location, ), ;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,]
[;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =]
[;, translatedValue, =, rangeAxis, ., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =]
[., valueToJava2D, (, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, ., min, (]
[(, negativeBase, +, value, ,, dataArea, ,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,]
[,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =]
[,, location, ), ;, }, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =]
[}, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max, (]
[}, double, barL0, =, Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max, (]
[Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (]
[Math, ., min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (]
[min, (, translatedBase, ,, translatedValue, ), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (, translatedValue, -]
[,, translatedValue, ), ;, double, barLength, =, Math, ., max, (, Math, ., abs, (, translatedValue, -, translatedBase, ), ,]
[., max, (, Math, ., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =]
[., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (]
[., abs, (, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (]
[(, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==]
[(, translatedValue, -, translatedBase, ), ,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==]
[,, getMinimumBarLength, (, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[(, ), ), ;, Rectangle2D, bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =]
[bar, =, null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (]
[null, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,]
[if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,]
[orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, bar, =, new, Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,]
[Rectangle2D, ., Double, (, barL0, ,, barW0, ,, barLength, ,, state, ., getBarWidth, (, ), ), ;, }, else, {]
[Double, (, barL0, ,, barW0, ,, barLength, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =]
[,, barLength, ,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (]
[,, state, ., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,]
[., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,]
[., getBarWidth, (, ), ), ;, }, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,]
[}, else, {, bar, =, new, Rectangle2D, ., Double, (, barW0, ,, barL0, ,, state, ., getBarWidth, (, ), ,]
[Rectangle2D, ., Double, (, barW0, ,, barL0, ,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }, if, (]
[Rectangle2D, ., Double, (, barW0, ,, barL0, ,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }, if, (]
[Double, (, barW0, ,, barL0, ,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }, if, (, pass, ==]
[,, state, ., getBarWidth, (, ), ,, barLength, ), ;, }, if, (, pass, ==, 0, ), {, if, (]
[), ;, }, if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, boolean, pegToBase, =]
[), ;, }, if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, boolean, pegToBase, =]
[;, }, if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, boolean, pegToBase, =, (]
[;, }, if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, boolean, pegToBase, =, (]
[if, (, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, boolean, pegToBase, =, (, positive, &&]
[(, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, boolean, pegToBase, =, (, positive, &&, (]
[(, pass, ==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, boolean, pegToBase, =, (, positive, &&, (]
[==, 0, ), {, if, (, getShadowsVisible, (, ), ), {, boolean, pegToBase, =, (, positive, &&, (, positiveBase, ==]
[getShadowsVisible, (, ), ), {, boolean, pegToBase, =, (, positive, &&, (, positiveBase, ==, getBase, (, ), ), ), ||]
[(, ), ), {, boolean, pegToBase, =, (, positive, &&, (, positiveBase, ==, getBase, (, ), ), ), ||, (]
[(, ), ), {, boolean, pegToBase, =, (, positive, &&, (, positiveBase, ==, getBase, (, ), ), ), ||, (]
[), ), {, boolean, pegToBase, =, (, positive, &&, (, positiveBase, ==, getBase, (, ), ), ), ||, (, !]
[{, boolean, pegToBase, =, (, positive, &&, (, positiveBase, ==, getBase, (, ), ), ), ||, (, !, positive, &&]
[boolean, pegToBase, =, (, positive, &&, (, positiveBase, ==, getBase, (, ), ), ), ||, (, !, positive, &&, (]
[boolean, pegToBase, =, (, positive, &&, (, positiveBase, ==, getBase, (, ), ), ), ||, (, !, positive, &&, (]
[=, (, positive, &&, (, positiveBase, ==, getBase, (, ), ), ), ||, (, !, positive, &&, (, negativeBase, ==]
[==, getBase, (, ), ), ), ||, (, !, positive, &&, (, negativeBase, ==, getBase, (, ), ), ), ;]
[==, getBase, (, ), ), ), ||, (, !, positive, &&, (, negativeBase, ==, getBase, (, ), ), ), ;]
[||, (, !, positive, &&, (, negativeBase, ==, getBase, (, ), ), ), ;, getBarPainter, (, ), ., paintBarShadow, (]
[!, positive, &&, (, negativeBase, ==, getBase, (, ), ), ), ;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,]
[&&, (, negativeBase, ==, getBase, (, ), ), ), ;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,]
[negativeBase, ==, getBase, (, ), ), ), ;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, row, ,]
[getBase, (, ), ), ), ;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,]
[), ), ), ;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,]
[), ;, getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,]
[getBarPainter, (, ), ., paintBarShadow, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,]
[this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, pegToBase, ), ;, }, }, else, if, (]
[this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ,, pegToBase, ), ;, }, }, else, if, (]
[row, ,, column, ,, selected, ,, bar, ,, barBase, ,, pegToBase, ), ;, }, }, else, if, (, pass, ==]
[,, selected, ,, bar, ,, barBase, ,, pegToBase, ), ;, }, }, else, if, (, pass, ==, 1, ), {]
[,, selected, ,, bar, ,, barBase, ,, pegToBase, ), ;, }, }, else, if, (, pass, ==, 1, ), {]
[,, pegToBase, ), ;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (]
[), ;, }, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,]
[}, }, else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,]
[else, if, (, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,]
[(, pass, ==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,]
[==, 1, ), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,]
[), {, getBarPainter, (, ), ., paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,]
[paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, EntityCollection, entities, =]
[paintBar, (, g2, ,, this, ,, row, ,, column, ,, selected, ,, bar, ,, barBase, ), ;, EntityCollection, entities, =]
[column, ,, selected, ,, bar, ,, barBase, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[column, ,, selected, ,, bar, ,, barBase, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[selected, ,, bar, ,, barBase, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=]
[,, barBase, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[=, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,]
[(, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,]
[addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, else, if, (]
[addEntity, (, entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, else, if, (]
[entities, ,, bar, ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, else, if, (, pass, ==]
[row, ,, column, ,, selected, ), ;, }, }, else, if, (, pass, ==, 2, ), {, CategoryItemLabelGenerator, generator, =]
[column, ,, selected, ), ;, }, }, else, if, (, pass, ==, 2, ), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (]
[selected, ), ;, }, }, else, if, (, pass, ==, 2, ), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,]
[;, }, }, else, if, (, pass, ==, 2, ), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,]
[(, pass, ==, 2, ), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[(, pass, ==, 2, ), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[(, pass, ==, 2, ), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[==, 2, ), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=]
[), {, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&]
[CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (]
[=, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,]
[(, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,]
[,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {]
[), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (]
[if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,]
[generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,]
[null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,]
[isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,]
[row, ,, column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,]
[column, ,, selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,]
[selected, ), ), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,]
[), {, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,]
[{, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (]
[{, drawItemLabelForBar, (, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (]
[(, g2, ,, plot, ,, dataset, ,, row, ,, column, ,, selected, ,, generator, ,, bar, ,, (, value, <]
[(, value, <, 0.0, ), ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[(, value, <, 0.0, ), ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[<, 0.0, ), ), ;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[;, }, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, StackedBarRenderer, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, StackedBarRenderer, ), ), {, return, false, ;, }, StackedBarRenderer, that, =]
[if, (, !, (, obj, instanceof, StackedBarRenderer, ), ), {, return, false, ;, }, StackedBarRenderer, that, =, (, StackedBarRenderer, )]
[obj, instanceof, StackedBarRenderer, ), ), {, return, false, ;, }, StackedBarRenderer, that, =, (, StackedBarRenderer, ), obj, ;, if, (]
[obj, instanceof, StackedBarRenderer, ), ), {, return, false, ;, }, StackedBarRenderer, that, =, (, StackedBarRenderer, ), obj, ;, if, (]
[obj, instanceof, StackedBarRenderer, ), ), {, return, false, ;, }, StackedBarRenderer, that, =, (, StackedBarRenderer, ), obj, ;, if, (]
[), {, return, false, ;, }, StackedBarRenderer, that, =, (, StackedBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=]
[), {, return, false, ;, }, StackedBarRenderer, that, =, (, StackedBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=]
[StackedBarRenderer, that, =, (, StackedBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return]
[StackedBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return]
[StackedBarRenderer, ), obj, ;, if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return]
[if, (, this, ., renderAsPercentages, !=, that, ., renderAsPercentages, ), {, return, false, ;, }, return, super, ., equals, (]
