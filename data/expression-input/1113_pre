[M, ,, R, >, extends, Triple, <, L, ,, M, ,, R, >, {, private, static, final, long, serialVersionUID, =]
[M, ,, R, >, of, (, final, L, left, ,, final, M, middle, ,, final, R, right, ), {, return]
[final, M, middle, ,, final, R, right, ), {, return, new, ImmutableTriple, <, L, ,, M, ,, R, >, (]
[middle, ,, final, R, right, ), {, return, new, ImmutableTriple, <, L, ,, M, ,, R, >, (, left, ,]
[final, R, right, ), {, return, new, ImmutableTriple, <, L, ,, M, ,, R, >, (, left, ,, middle, ,]
[public, ImmutableTriple, (, final, L, left, ,, final, M, middle, ,, final, R, right, ), {, super, (, ), ;]
[public, ImmutableTriple, (, final, L, left, ,, final, M, middle, ,, final, R, right, ), {, super, (, ), ;]
[L, left, ,, final, M, middle, ,, final, R, right, ), {, super, (, ), ;, this, ., left, =]
[,, final, M, middle, ,, final, R, right, ), {, super, (, ), ;, this, ., left, =, left, ;]
[,, final, M, middle, ,, final, R, right, ), {, super, (, ), ;, this, ., left, =, left, ;]
[,, final, R, right, ), {, super, (, ), ;, this, ., left, =, left, ;, this, ., middle, =]
[R, right, ), {, super, (, ), ;, this, ., left, =, left, ;, this, ., middle, =, middle, ;]
[R, right, ), {, super, (, ), ;, this, ., left, =, left, ;, this, ., middle, =, middle, ;]
[super, (, ), ;, this, ., left, =, left, ;, this, ., middle, =, middle, ;, this, ., right, =]
[middle, =, middle, ;, this, ., right, =, right, ;, }, @, Override, public, L, getLeft, (, ), {, return]
[Override, public, L, getLeft, (, ), {, return, left, ;, }, @, Override, public, M, getMiddle, (, ), {, return]
[Override, public, M, getMiddle, (, ), {, return, middle, ;, }, @, Override, public, R, getRight, (, ), {, return]
