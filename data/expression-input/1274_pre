[private, StringUtilities, (, ), {, }, public, static, boolean, startsWithIgnoreCase, (, String, base, ,, String, start, ), {, if, (]
[private, StringUtilities, (, ), {, }, public, static, boolean, startsWithIgnoreCase, (, String, base, ,, String, start, ), {, if, (]
[private, StringUtilities, (, ), {, }, public, static, boolean, startsWithIgnoreCase, (, String, base, ,, String, start, ), {, if, (]
[public, static, boolean, startsWithIgnoreCase, (, String, base, ,, String, start, ), {, if, (, base, ., length, (, ), <]
[public, static, boolean, startsWithIgnoreCase, (, String, base, ,, String, start, ), {, if, (, base, ., length, (, ), <]
[String, start, ), {, if, (, base, ., length, (, ), <, start, ., length, (, ), ), {, return]
[if, (, base, ., length, (, ), <, start, ., length, (, ), ), {, return, false, ;, }, return]
[if, (, base, ., length, (, ), <, start, ., length, (, ), ), {, return, false, ;, }, return]
[length, (, ), <, start, ., length, (, ), ), {, return, false, ;, }, return, base, ., regionMatches, (]
[), <, start, ., length, (, ), ), {, return, false, ;, }, return, base, ., regionMatches, (, true, ,]
[start, ., length, (, ), ), {, return, false, ;, }, return, base, ., regionMatches, (, true, ,, 0, ,]
[length, (, ), ), {, return, false, ;, }, return, base, ., regionMatches, (, true, ,, 0, ,, start, ,]
[), ), {, return, false, ;, }, return, base, ., regionMatches, (, true, ,, 0, ,, start, ,, 0, ,]
[), ), {, return, false, ;, }, return, base, ., regionMatches, (, true, ,, 0, ,, start, ,, 0, ,]
[length, (, ), ), ;, }, public, static, boolean, endsWithIgnoreCase, (, String, base, ,, String, end, ), {, if, (]
[length, (, ), ), ;, }, public, static, boolean, endsWithIgnoreCase, (, String, base, ,, String, end, ), {, if, (]
[length, (, ), ), ;, }, public, static, boolean, endsWithIgnoreCase, (, String, base, ,, String, end, ), {, if, (]
[public, static, boolean, endsWithIgnoreCase, (, String, base, ,, String, end, ), {, if, (, base, ., length, (, ), <]
[public, static, boolean, endsWithIgnoreCase, (, String, base, ,, String, end, ), {, if, (, base, ., length, (, ), <]
[String, end, ), {, if, (, base, ., length, (, ), <, end, ., length, (, ), ), {, return]
[if, (, base, ., length, (, ), <, end, ., length, (, ), ), {, return, false, ;, }, return]
[if, (, base, ., length, (, ), <, end, ., length, (, ), ), {, return, false, ;, }, return]
[length, (, ), <, end, ., length, (, ), ), {, return, false, ;, }, return, base, ., regionMatches, (]
[), <, end, ., length, (, ), ), {, return, false, ;, }, return, base, ., regionMatches, (, true, ,]
[), <, end, ., length, (, ), ), {, return, false, ;, }, return, base, ., regionMatches, (, true, ,]
[), <, end, ., length, (, ), ), {, return, false, ;, }, return, base, ., regionMatches, (, true, ,]
[), ), {, return, false, ;, }, return, base, ., regionMatches, (, true, ,, base, ., length, (, ), -]
[), ), {, return, false, ;, }, return, base, ., regionMatches, (, true, ,, base, ., length, (, ), -]
[}, return, base, ., regionMatches, (, true, ,, base, ., length, (, ), -, end, ., length, (, ), ,]
[base, ., regionMatches, (, true, ,, base, ., length, (, ), -, end, ., length, (, ), ,, end, ,]
[regionMatches, (, true, ,, base, ., length, (, ), -, end, ., length, (, ), ,, end, ,, 0, ,]
[regionMatches, (, true, ,, base, ., length, (, ), -, end, ., length, (, ), ,, end, ,, 0, ,]
[0, ,, end, ., length, (, ), ), ;, }, public, static, String, getLineSeparator, (, ), {, try, {, return]
[0, ,, end, ., length, (, ), ), ;, }, public, static, String, getLineSeparator, (, ), {, try, {, return]
[length, (, ), ), ;, }, public, static, String, getLineSeparator, (, ), {, try, {, return, System, ., getProperty, (]
[), ), ;, }, public, static, String, getLineSeparator, (, ), {, try, {, return, System, ., getProperty, (, "line.separator", ,]
[try, {, return, System, ., getProperty, (, "line.separator", ,, "\n", ), ;, }, catch, (, Exception, e, ), {, return]
