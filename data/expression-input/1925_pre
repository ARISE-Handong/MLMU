[util, ., MockUtil, ;, public, class, HashCodeAndEqualsMockWrapper, {, private, final, Object, mockInstance, ;, public, HashCodeAndEqualsMockWrapper, (, Object, mockInstance, ), {]
[util, ., MockUtil, ;, public, class, HashCodeAndEqualsMockWrapper, {, private, final, Object, mockInstance, ;, public, HashCodeAndEqualsMockWrapper, (, Object, mockInstance, ), {]
[public, class, HashCodeAndEqualsMockWrapper, {, private, final, Object, mockInstance, ;, public, HashCodeAndEqualsMockWrapper, (, Object, mockInstance, ), {, this, ., mockInstance, =]
[HashCodeAndEqualsMockWrapper, (, Object, mockInstance, ), {, this, ., mockInstance, =, mockInstance, ;, }, public, Object, get, (, ), {, return]
[get, (, ), {, return, mockInstance, ;, }, @, Override, public, boolean, equals, (, Object, o, ), {, if, (]
[get, (, ), {, return, mockInstance, ;, }, @, Override, public, boolean, equals, (, Object, o, ), {, if, (]
[), {, return, mockInstance, ;, }, @, Override, public, boolean, equals, (, Object, o, ), {, if, (, this, ==]
[mockInstance, ;, }, @, Override, public, boolean, equals, (, Object, o, ), {, if, (, this, ==, o, ), return]
[Override, public, boolean, equals, (, Object, o, ), {, if, (, this, ==, o, ), return, true, ;, if, (]
[public, boolean, equals, (, Object, o, ), {, if, (, this, ==, o, ), return, true, ;, if, (, !]
[boolean, equals, (, Object, o, ), {, if, (, this, ==, o, ), return, true, ;, if, (, !, (]
[boolean, equals, (, Object, o, ), {, if, (, this, ==, o, ), return, true, ;, if, (, !, (]
[{, if, (, this, ==, o, ), return, true, ;, if, (, !, (, o, instanceof, HashCodeAndEqualsMockWrapper, ), ), return]
[o, ), return, true, ;, if, (, !, (, o, instanceof, HashCodeAndEqualsMockWrapper, ), ), return, false, ;, HashCodeAndEqualsMockWrapper, that, =]
[true, ;, if, (, !, (, o, instanceof, HashCodeAndEqualsMockWrapper, ), ), return, false, ;, HashCodeAndEqualsMockWrapper, that, =, (, HashCodeAndEqualsMockWrapper, )]
[(, !, (, o, instanceof, HashCodeAndEqualsMockWrapper, ), ), return, false, ;, HashCodeAndEqualsMockWrapper, that, =, (, HashCodeAndEqualsMockWrapper, ), o, ;, return]
[(, !, (, o, instanceof, HashCodeAndEqualsMockWrapper, ), ), return, false, ;, HashCodeAndEqualsMockWrapper, that, =, (, HashCodeAndEqualsMockWrapper, ), o, ;, return]
[(, o, instanceof, HashCodeAndEqualsMockWrapper, ), ), return, false, ;, HashCodeAndEqualsMockWrapper, that, =, (, HashCodeAndEqualsMockWrapper, ), o, ;, return, mockInstance, ==]
[(, o, instanceof, HashCodeAndEqualsMockWrapper, ), ), return, false, ;, HashCodeAndEqualsMockWrapper, that, =, (, HashCodeAndEqualsMockWrapper, ), o, ;, return, mockInstance, ==]
[), o, ;, return, mockInstance, ==, that, ., mockInstance, ;, }, @, Override, public, int, hashCode, (, ), {, return]
[), o, ;, return, mockInstance, ==, that, ., mockInstance, ;, }, @, Override, public, int, hashCode, (, ), {, return]
[mockInstance, ==, that, ., mockInstance, ;, }, @, Override, public, int, hashCode, (, ), {, return, System, ., identityHashCode, (]
[{, return, System, ., identityHashCode, (, mockInstance, ), ;, }, public, static, HashCodeAndEqualsMockWrapper, of, (, Object, mock, ), {, return]
[., identityHashCode, (, mockInstance, ), ;, }, public, static, HashCodeAndEqualsMockWrapper, of, (, Object, mock, ), {, return, new, HashCodeAndEqualsMockWrapper, (]
[{, return, new, HashCodeAndEqualsMockWrapper, (, mock, ), ;, }, @, Override, public, String, toString, (, ), {, MockUtil, mockUtil, =]
[), ;, }, @, Override, public, String, toString, (, ), {, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, return]
[), ;, }, @, Override, public, String, toString, (, ), {, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, return]
[), ;, }, @, Override, public, String, toString, (, ), {, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, return]
[), ;, }, @, Override, public, String, toString, (, ), {, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, return]
[}, @, Override, public, String, toString, (, ), {, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, return, "HashCodeAndEqualsMockWrapper{", +]
[Override, public, String, toString, (, ), {, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, return, "HashCodeAndEqualsMockWrapper{", +, "mockInstance=", +]
[public, String, toString, (, ), {, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, return, "HashCodeAndEqualsMockWrapper{", +, "mockInstance=", +, (]
[public, String, toString, (, ), {, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, return, "HashCodeAndEqualsMockWrapper{", +, "mockInstance=", +, (]
[public, String, toString, (, ), {, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, return, "HashCodeAndEqualsMockWrapper{", +, "mockInstance=", +, (]
[), {, MockUtil, mockUtil, =, new, MockUtil, (, ), ;, return, "HashCodeAndEqualsMockWrapper{", +, "mockInstance=", +, (, mockUtil, ., isMock, (]
[mockUtil, =, new, MockUtil, (, ), ;, return, "HashCodeAndEqualsMockWrapper{", +, "mockInstance=", +, (, mockUtil, ., isMock, (, mockInstance, ), ?]
[mockUtil, =, new, MockUtil, (, ), ;, return, "HashCodeAndEqualsMockWrapper{", +, "mockInstance=", +, (, mockUtil, ., isMock, (, mockInstance, ), ?]
[(, ), ;, return, "HashCodeAndEqualsMockWrapper{", +, "mockInstance=", +, (, mockUtil, ., isMock, (, mockInstance, ), ?, mockUtil, ., getMockName, (]
[return, "HashCodeAndEqualsMockWrapper{", +, "mockInstance=", +, (, mockUtil, ., isMock, (, mockInstance, ), ?, mockUtil, ., getMockName, (, mockInstance, ), :]
[(, mockUtil, ., isMock, (, mockInstance, ), ?, mockUtil, ., getMockName, (, mockInstance, ), :, typeInstanceString, (, ), ), +]
[getMockName, (, mockInstance, ), :, typeInstanceString, (, ), ), +, '}', ;, }, private, String, typeInstanceString, (, ), {, return]
[getMockName, (, mockInstance, ), :, typeInstanceString, (, ), ), +, '}', ;, }, private, String, typeInstanceString, (, ), {, return]
[getMockName, (, mockInstance, ), :, typeInstanceString, (, ), ), +, '}', ;, }, private, String, typeInstanceString, (, ), {, return]
[getMockName, (, mockInstance, ), :, typeInstanceString, (, ), ), +, '}', ;, }, private, String, typeInstanceString, (, ), {, return]
[getMockName, (, mockInstance, ), :, typeInstanceString, (, ), ), +, '}', ;, }, private, String, typeInstanceString, (, ), {, return]
[getMockName, (, mockInstance, ), :, typeInstanceString, (, ), ), +, '}', ;, }, private, String, typeInstanceString, (, ), {, return]
['}', ;, }, private, String, typeInstanceString, (, ), {, return, mockInstance, ., getClass, (, ), ., getSimpleName, (, ), +]
[}, private, String, typeInstanceString, (, ), {, return, mockInstance, ., getClass, (, ), ., getSimpleName, (, ), +, "(", +]
[}, private, String, typeInstanceString, (, ), {, return, mockInstance, ., getClass, (, ), ., getSimpleName, (, ), +, "(", +]
[(, ), {, return, mockInstance, ., getClass, (, ), ., getSimpleName, (, ), +, "(", +, System, ., identityHashCode, (]
[return, mockInstance, ., getClass, (, ), ., getSimpleName, (, ), +, "(", +, System, ., identityHashCode, (, mockInstance, ), +]
