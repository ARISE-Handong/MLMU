[;, private, int, scaleIndex, ;, private, double, lowerBound, ;, private, double, upperBound, ;, private, transient, Paint, paint, ;, private, double]
[,, 100.0, ,, Color, ., white, ), ;, }, public, StandardDialRange, (, double, lower, ,, double, upper, ,, Paint, paint]
[,, Color, ., white, ), ;, }, public, StandardDialRange, (, double, lower, ,, double, upper, ,, Paint, paint, ), {]
[), ;, }, public, StandardDialRange, (, double, lower, ,, double, upper, ,, Paint, paint, ), {, if, (, paint, ==]
[., white, ), ;, }, public, StandardDialRange, (, double, lower, ,, double, upper, ,, Paint, paint, ), {, if, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., scaleIndex, =, 0, ;, this, ., lowerBound, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., scaleIndex, =, 0, ;, this, .]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., scaleIndex, =, 0, ;, this, ., lowerBound, =]
[;, }, this, ., scaleIndex, =, 0, ;, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;]
[), ;, }, this, ., scaleIndex, =, 0, ;, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper]
[=, 0, ;, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;, this, ., innerRadius, =, 0.48]
[., scaleIndex, =, 0, ;, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;, this, ., innerRadius]
[;, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;, this, ., innerRadius, =, 0.48, ;, this]
[=, lower, ;, this, ., upperBound, =, upper, ;, this, ., innerRadius, =, 0.48, ;, this, ., outerRadius, =, 0.52]
[., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;, this, ., innerRadius, =, 0.48, ;, this, ., outerRadius]
[;, this, ., upperBound, =, upper, ;, this, ., innerRadius, =, 0.48, ;, this, ., outerRadius, =, 0.52, ;, this]
[=, upper, ;, this, ., innerRadius, =, 0.48, ;, this, ., outerRadius, =, 0.52, ;, this, ., paint, =, paint]
[., upperBound, =, upper, ;, this, ., innerRadius, =, 0.48, ;, this, ., outerRadius, =, 0.52, ;, this, ., paint]
[;, this, ., innerRadius, =, 0.48, ;, this, ., outerRadius, =, 0.52, ;, this, ., paint, =, paint, ;, }]
[=, 0.48, ;, this, ., outerRadius, =, 0.52, ;, this, ., paint, =, paint, ;, }, public, int, getScaleIndex, (]
[., innerRadius, =, 0.48, ;, this, ., outerRadius, =, 0.52, ;, this, ., paint, =, paint, ;, }, public, int]
[;, this, ., outerRadius, =, 0.52, ;, this, ., paint, =, paint, ;, }, public, int, getScaleIndex, (, ), {]
[=, 0.52, ;, this, ., paint, =, paint, ;, }, public, int, getScaleIndex, (, ), {, return, this, ., scaleIndex]
[., outerRadius, =, 0.52, ;, this, ., paint, =, paint, ;, }, public, int, getScaleIndex, (, ), {, return, this]
[;, this, ., paint, =, paint, ;, }, public, int, getScaleIndex, (, ), {, return, this, ., scaleIndex, ;, }]
[=, paint, ;, }, public, int, getScaleIndex, (, ), {, return, this, ., scaleIndex, ;, }, public, void, setScaleIndex, (]
[., paint, =, paint, ;, }, public, int, getScaleIndex, (, ), {, return, this, ., scaleIndex, ;, }, public, void]
[;, }, public, int, getScaleIndex, (, ), {, return, this, ., scaleIndex, ;, }, public, void, setScaleIndex, (, int, index]
[;, }, public, void, setScaleIndex, (, int, index, ), {, this, ., scaleIndex, =, index, ;, notifyListeners, (, new, DialLayerChangeEvent]
[., scaleIndex, ;, }, public, void, setScaleIndex, (, int, index, ), {, this, ., scaleIndex, =, index, ;, notifyListeners, (]
[=, index, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getLowerBound, (, ), {, return]
[., scaleIndex, =, index, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getLowerBound, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getLowerBound, (, ), {, return, this, .]
[;, }, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, void, setLowerBound, (, double, bound]
[), ;, }, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, void, setLowerBound, (, double]
[), ), ;, }, public, double, getLowerBound, (, ), {, return, this, ., lowerBound, ;, }, public, void, setLowerBound, (]
[;, }, public, void, setLowerBound, (, double, bound, ), {, if, (, bound, >=, this, ., upperBound, ), {, throw]
[., lowerBound, ;, }, public, void, setLowerBound, (, double, bound, ), {, if, (, bound, >=, this, ., upperBound, )]
[), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., lowerBound, =, bound, ;, notifyListeners, (, new, DialLayerChangeEvent]
[>=, this, ., upperBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., lowerBound, =, bound, ;]
[), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., lowerBound, =, bound, ;, notifyListeners, (, new, DialLayerChangeEvent]
[., upperBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., lowerBound, =, bound, ;, notifyListeners, (]
[;, }, this, ., lowerBound, =, bound, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double]
[), ;, }, this, ., lowerBound, =, bound, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, bound, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getUpperBound, (, ), {, return]
[., lowerBound, =, bound, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getUpperBound, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getUpperBound, (, ), {, return, this, .]
[;, }, public, double, getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, void, setUpperBound, (, double, bound]
[), ;, }, public, double, getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, void, setUpperBound, (, double]
[), ), ;, }, public, double, getUpperBound, (, ), {, return, this, ., upperBound, ;, }, public, void, setUpperBound, (]
[;, }, public, void, setUpperBound, (, double, bound, ), {, if, (, bound, <=, this, ., lowerBound, ), {, throw]
[., upperBound, ;, }, public, void, setUpperBound, (, double, bound, ), {, if, (, bound, <=, this, ., lowerBound, )]
[), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., upperBound, =, bound, ;, notifyListeners, (, new, DialLayerChangeEvent]
[<=, this, ., lowerBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., upperBound, =, bound, ;]
[), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., upperBound, =, bound, ;, notifyListeners, (, new, DialLayerChangeEvent]
[., lowerBound, ), {, throw, new, IllegalArgumentException, (, "Lower bound must be less than upper bound.", ), ;, }, this, ., upperBound, =, bound, ;, notifyListeners, (]
[;, }, this, ., upperBound, =, bound, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, void]
[), ;, }, this, ., upperBound, =, bound, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, bound, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, void, setBounds, (, double, lower, ,]
[., upperBound, =, bound, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, void, setBounds, (, double]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, void, setBounds, (, double, lower, ,, double, upper]
[;, }, public, void, setBounds, (, double, lower, ,, double, upper, ), {, if, (, lower, >=, upper, ), {]
[), ;, }, public, void, setBounds, (, double, lower, ,, double, upper, ), {, if, (, lower, >=, upper, )]
[), ), ;, }, public, void, setBounds, (, double, lower, ,, double, upper, ), {, if, (, lower, >=, upper]
[), {, throw, new, IllegalArgumentException, (, "Lower must be less than upper.", ), ;, }, this, ., lowerBound, =, lower, ;, this, ., upperBound, =]
[>=, upper, ), {, throw, new, IllegalArgumentException, (, "Lower must be less than upper.", ), ;, }, this, ., lowerBound, =, lower, ;, this, .]
[), {, throw, new, IllegalArgumentException, (, "Lower must be less than upper.", ), ;, }, this, ., lowerBound, =, lower, ;, this, ., upperBound, =]
[;, }, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this]
[), ;, }, this, ., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;, notifyListeners, (, new, DialLayerChangeEvent, (]
[=, lower, ;, this, ., upperBound, =, upper, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[., lowerBound, =, lower, ;, this, ., upperBound, =, upper, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;]
[;, this, ., upperBound, =, upper, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getPaint]
[=, upper, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getPaint, (, ), {, return]
[., upperBound, =, upper, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getPaint, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, Paint, getPaint, (, ), {, return, this, .]
[;, }, public, Paint, getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint, paint]
[), ;, }, public, Paint, getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (, Paint]
[), ), ;, }, public, Paint, getPaint, (, ), {, return, this, ., paint, ;, }, public, void, setPaint, (]
[;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw, new, IllegalArgumentException]
[., paint, ;, }, public, void, setPaint, (, Paint, paint, ), {, if, (, paint, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, notifyListeners, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'paint' argument.", ), ;, }, this, ., paint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent]
[;, }, this, ., paint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double]
[), ;, }, this, ., paint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public]
[=, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getInnerRadius, (, ), {, return]
[., paint, =, paint, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getInnerRadius, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getInnerRadius, (, ), {, return, this, .]
[;, }, public, double, getInnerRadius, (, ), {, return, this, ., innerRadius, ;, }, public, void, setInnerRadius, (, double, radius]
[), ;, }, public, double, getInnerRadius, (, ), {, return, this, ., innerRadius, ;, }, public, void, setInnerRadius, (, double]
[), ), ;, }, public, double, getInnerRadius, (, ), {, return, this, ., innerRadius, ;, }, public, void, setInnerRadius, (]
[;, }, public, void, setInnerRadius, (, double, radius, ), {, this, ., innerRadius, =, radius, ;, notifyListeners, (, new, DialLayerChangeEvent]
[., innerRadius, ;, }, public, void, setInnerRadius, (, double, radius, ), {, this, ., innerRadius, =, radius, ;, notifyListeners, (]
[=, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getOuterRadius, (, ), {, return]
[., innerRadius, =, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getOuterRadius, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, double, getOuterRadius, (, ), {, return, this, .]
[;, }, public, double, getOuterRadius, (, ), {, return, this, ., outerRadius, ;, }, public, void, setOuterRadius, (, double, radius]
[), ;, }, public, double, getOuterRadius, (, ), {, return, this, ., outerRadius, ;, }, public, void, setOuterRadius, (, double]
[), ), ;, }, public, double, getOuterRadius, (, ), {, return, this, ., outerRadius, ;, }, public, void, setOuterRadius, (]
[;, }, public, void, setOuterRadius, (, double, radius, ), {, this, ., outerRadius, =, radius, ;, notifyListeners, (, new, DialLayerChangeEvent]
[., outerRadius, ;, }, public, void, setOuterRadius, (, double, radius, ), {, this, ., outerRadius, =, radius, ;, notifyListeners, (]
[=, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, isClippedToWindow, (, ), {, return]
[., outerRadius, =, radius, ;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, isClippedToWindow, (, )]
[;, notifyListeners, (, new, DialLayerChangeEvent, (, this, ), ), ;, }, public, boolean, isClippedToWindow, (, ), {, return, true, ;]
[;, }, public, boolean, isClippedToWindow, (, ), {, return, true, ;, }, public, void, draw, (, Graphics2D, g2, ,, DialPlot]
[), ;, }, public, boolean, isClippedToWindow, (, ), {, return, true, ;, }, public, void, draw, (, Graphics2D, g2, ,]
[), ), ;, }, public, boolean, isClippedToWindow, (, ), {, return, true, ;, }, public, void, draw, (, Graphics2D, g2]
[;, }, public, void, draw, (, Graphics2D, g2, ,, DialPlot, plot, ,, Rectangle2D, frame, ,, Rectangle2D, view, ), {, Rectangle2D]
[;, Rectangle2D, arcRectOuter, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., outerRadius, ,, this, ., outerRadius, ), ;, DialScale]
[., rectangleByRadius, (, frame, ,, this, ., innerRadius, ,, this, ., innerRadius, ), ;, Rectangle2D, arcRectOuter, =, DialPlot, ., rectangleByRadius]
[,, this, ., innerRadius, ,, this, ., innerRadius, ), ;, Rectangle2D, arcRectOuter, =, DialPlot, ., rectangleByRadius, (, frame, ,, this]
[,, this, ., innerRadius, ), ;, Rectangle2D, arcRectOuter, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., outerRadius, ,, this]
[., innerRadius, ,, this, ., innerRadius, ), ;, Rectangle2D, arcRectOuter, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., outerRadius]
[), ;, Rectangle2D, arcRectOuter, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., outerRadius, ,, this, ., outerRadius, ), ;]
[., innerRadius, ), ;, Rectangle2D, arcRectOuter, =, DialPlot, ., rectangleByRadius, (, frame, ,, this, ., outerRadius, ,, this, ., outerRadius]
[;, DialScale, scale, =, plot, ., getScale, (, this, ., scaleIndex, ), ;, if, (, scale, ==, null, ), {]
[., rectangleByRadius, (, frame, ,, this, ., outerRadius, ,, this, ., outerRadius, ), ;, DialScale, scale, =, plot, ., getScale]
[,, this, ., outerRadius, ,, this, ., outerRadius, ), ;, DialScale, scale, =, plot, ., getScale, (, this, ., scaleIndex]
[,, this, ., outerRadius, ), ;, DialScale, scale, =, plot, ., getScale, (, this, ., scaleIndex, ), ;, if, (]
[., outerRadius, ,, this, ., outerRadius, ), ;, DialScale, scale, =, plot, ., getScale, (, this, ., scaleIndex, ), ;]
[), ;, DialScale, scale, =, plot, ., getScale, (, this, ., scaleIndex, ), ;, if, (, scale, ==, null, )]
[., outerRadius, ), ;, DialScale, scale, =, plot, ., getScale, (, this, ., scaleIndex, ), ;, if, (, scale, ==]
[;, if, (, scale, ==, null, ), {, throw, new, RuntimeException, (, "No scale for scaleIndex = ", +, this, ., scaleIndex, ), ;, }]
[., getScale, (, this, ., scaleIndex, ), ;, if, (, scale, ==, null, ), {, throw, new, RuntimeException, (, "No scale for scaleIndex = "]
[), ;, if, (, scale, ==, null, ), {, throw, new, RuntimeException, (, "No scale for scaleIndex = ", +, this, ., scaleIndex, ), ;]
[., scaleIndex, ), ;, if, (, scale, ==, null, ), {, throw, new, RuntimeException, (, "No scale for scaleIndex = ", +, this, ., scaleIndex]
[), {, throw, new, RuntimeException, (, "No scale for scaleIndex = ", +, this, ., scaleIndex, ), ;, }, double, angleMin, =, scale, ., valueToAngle]
[==, null, ), {, throw, new, RuntimeException, (, "No scale for scaleIndex = ", +, this, ., scaleIndex, ), ;, }, double, angleMin, =, scale]
[), {, throw, new, RuntimeException, (, "No scale for scaleIndex = ", +, this, ., scaleIndex, ), ;, }, double, angleMin, =, scale, ., valueToAngle]
[;, }, double, angleMin, =, scale, ., valueToAngle, (, this, ., lowerBound, ), ;, double, angleMax, =, scale, ., valueToAngle]
[), ;, }, double, angleMin, =, scale, ., valueToAngle, (, this, ., lowerBound, ), ;, double, angleMax, =, scale, .]
[+, this, ., scaleIndex, ), ;, }, double, angleMin, =, scale, ., valueToAngle, (, this, ., lowerBound, ), ;, double]
[), ;, }, double, angleMin, =, scale, ., valueToAngle, (, this, ., lowerBound, ), ;, double, angleMax, =, scale, .]
[., scaleIndex, ), ;, }, double, angleMin, =, scale, ., valueToAngle, (, this, ., lowerBound, ), ;, double, angleMax, =]
[;, double, angleMax, =, scale, ., valueToAngle, (, this, ., upperBound, ), ;, Arc2D, arcInner, =, new, Arc2D, ., Double]
[., valueToAngle, (, this, ., lowerBound, ), ;, double, angleMax, =, scale, ., valueToAngle, (, this, ., upperBound, ), ;]
[), ;, double, angleMax, =, scale, ., valueToAngle, (, this, ., upperBound, ), ;, Arc2D, arcInner, =, new, Arc2D, .]
[., lowerBound, ), ;, double, angleMax, =, scale, ., valueToAngle, (, this, ., upperBound, ), ;, Arc2D, arcInner, =, new]
[;, Arc2D, arcInner, =, new, Arc2D, ., Double, (, arcRectInner, ,, angleMin, ,, angleMax, -, angleMin, ,, Arc2D, ., OPEN]
[., valueToAngle, (, this, ., upperBound, ), ;, Arc2D, arcInner, =, new, Arc2D, ., Double, (, arcRectInner, ,, angleMin, ,]
[), ;, Arc2D, arcInner, =, new, Arc2D, ., Double, (, arcRectInner, ,, angleMin, ,, angleMax, -, angleMin, ,, Arc2D, .]
[., upperBound, ), ;, Arc2D, arcInner, =, new, Arc2D, ., Double, (, arcRectInner, ,, angleMin, ,, angleMax, -, angleMin, ,]
[;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,, angleMax, ,, angleMin, -, angleMax, ,, Arc2D, ., OPEN]
[,, angleMin, ,, angleMax, -, angleMin, ,, Arc2D, ., OPEN, ), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (]
[,, angleMax, -, angleMin, ,, Arc2D, ., OPEN, ), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,]
[,, Arc2D, ., OPEN, ), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,, angleMax, ,, angleMin, -]
[-, angleMin, ,, Arc2D, ., OPEN, ), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,, angleMax, ,]
[,, Arc2D, ., OPEN, ), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,, angleMax, ,, angleMin, -]
[), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,, angleMax, ,, angleMin, -, angleMax, ,, Arc2D, .]
[., OPEN, ), ;, Arc2D, arcOuter, =, new, Arc2D, ., Double, (, arcRectOuter, ,, angleMax, ,, angleMin, -, angleMax, ,]
[;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setStroke, (, new, BasicStroke, (, 2.0f, ), )]
[,, angleMax, ,, angleMin, -, angleMax, ,, Arc2D, ., OPEN, ), ;, g2, ., setPaint, (, this, ., paint, )]
[,, angleMin, -, angleMax, ,, Arc2D, ., OPEN, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2]
[,, Arc2D, ., OPEN, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setStroke, (, new]
[-, angleMax, ,, Arc2D, ., OPEN, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setStroke]
[,, Arc2D, ., OPEN, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setStroke, (, new]
[), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setStroke, (, new, BasicStroke, (, 2.0f, )]
[., OPEN, ), ;, g2, ., setPaint, (, this, ., paint, ), ;, g2, ., setStroke, (, new, BasicStroke, (]
[;, g2, ., setStroke, (, new, BasicStroke, (, 2.0f, ), ), ;, g2, ., draw, (, arcInner, ), ;, g2]
[., setPaint, (, this, ., paint, ), ;, g2, ., setStroke, (, new, BasicStroke, (, 2.0f, ), ), ;, g2]
[), ;, g2, ., setStroke, (, new, BasicStroke, (, 2.0f, ), ), ;, g2, ., draw, (, arcInner, ), ;]
[., paint, ), ;, g2, ., setStroke, (, new, BasicStroke, (, 2.0f, ), ), ;, g2, ., draw, (, arcInner]
[;, g2, ., draw, (, arcInner, ), ;, g2, ., draw, (, arcOuter, ), ;, }, public, boolean, equals, (]
[., setStroke, (, new, BasicStroke, (, 2.0f, ), ), ;, g2, ., draw, (, arcInner, ), ;, g2, ., draw]
[), ;, g2, ., draw, (, arcInner, ), ;, g2, ., draw, (, arcOuter, ), ;, }, public, boolean, equals]
[), ), ;, g2, ., draw, (, arcInner, ), ;, g2, ., draw, (, arcOuter, ), ;, }, public, boolean]
[;, g2, ., draw, (, arcOuter, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj]
[., draw, (, arcInner, ), ;, g2, ., draw, (, arcOuter, ), ;, }, public, boolean, equals, (, Object, obj]
[), ;, g2, ., draw, (, arcOuter, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[., draw, (, arcOuter, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, StandardDialRange, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, StandardDialRange, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, StandardDialRange, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, StandardDialRange, ), ), {, return, false, ;, }, StandardDialRange, that, =, (]
[), {, return, false, ;, }, StandardDialRange, that, =, (, StandardDialRange, ), obj, ;, if, (, this, ., scaleIndex, !=]
[), {, return, false, ;, }, StandardDialRange, that, =, (, StandardDialRange, ), obj, ;, if, (, this, ., scaleIndex, !=]
[), ), {, return, false, ;, }, StandardDialRange, that, =, (, StandardDialRange, ), obj, ;, if, (, this, ., scaleIndex]
[instanceof, StandardDialRange, ), ), {, return, false, ;, }, StandardDialRange, that, =, (, StandardDialRange, ), obj, ;, if, (, this]
[;, }, StandardDialRange, that, =, (, StandardDialRange, ), obj, ;, if, (, this, ., scaleIndex, !=, that, ., scaleIndex, )]
[;, if, (, this, ., scaleIndex, !=, that, ., scaleIndex, ), {, return, false, ;, }, if, (, this, .]
[;, if, (, this, ., scaleIndex, !=, that, ., scaleIndex, ), {, return, false, ;, }, if, (, this, .]
[), {, return, false, ;, }, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;]
[!=, that, ., scaleIndex, ), {, return, false, ;, }, if, (, this, ., lowerBound, !=, that, ., lowerBound, )]
[., scaleIndex, !=, that, ., scaleIndex, ), {, return, false, ;, }, if, (, this, ., lowerBound, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;]
[., scaleIndex, ), {, return, false, ;, }, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return]
[;, }, if, (, this, ., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;]
[!=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, )]
[., lowerBound, !=, that, ., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;]
[., lowerBound, ), {, return, false, ;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return]
[;, }, if, (, this, ., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint]
[!=, that, ., upperBound, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint]
[., upperBound, !=, that, ., upperBound, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this]
[), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint]
[., upperBound, ), {, return, false, ;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that]
[;, }, if, (, !, PaintUtilities, ., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return]
[), {, return, false, ;, }, if, (, this, ., innerRadius, !=, that, ., innerRadius, ), {, return, false, ;]
[), {, return, false, ;, }, if, (, this, ., innerRadius, !=, that, ., innerRadius, ), {, return, false, ;]
[., equal, (, this, ., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, this]
[,, that, ., paint, ), ), {, return, false, ;, }, if, (, this, ., innerRadius, !=, that, ., innerRadius]
[., paint, ,, that, ., paint, ), ), {, return, false, ;, }, if, (, this, ., innerRadius, !=, that]
[), ), {, return, false, ;, }, if, (, this, ., innerRadius, !=, that, ., innerRadius, ), {, return, false]
[., paint, ), ), {, return, false, ;, }, if, (, this, ., innerRadius, !=, that, ., innerRadius, ), {]
[;, }, if, (, this, ., innerRadius, !=, that, ., innerRadius, ), {, return, false, ;, }, if, (, this]
[), {, return, false, ;, }, if, (, this, ., outerRadius, !=, that, ., outerRadius, ), {, return, false, ;]
[!=, that, ., innerRadius, ), {, return, false, ;, }, if, (, this, ., outerRadius, !=, that, ., outerRadius, )]
[., innerRadius, !=, that, ., innerRadius, ), {, return, false, ;, }, if, (, this, ., outerRadius, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., outerRadius, !=, that, ., outerRadius, ), {, return, false, ;]
[., innerRadius, ), {, return, false, ;, }, if, (, this, ., outerRadius, !=, that, ., outerRadius, ), {, return]
[;, }, if, (, this, ., outerRadius, !=, that, ., outerRadius, ), {, return, false, ;, }, return, super, .]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[!=, that, ., outerRadius, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public]
[., outerRadius, !=, that, ., outerRadius, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[., outerRadius, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =]
[;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, long, temp, =, Double, ., doubleToLongBits, (]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, long, temp]
[), ;, }, public, int, hashCode, (, ), {, int, result, =, 193, ;, long, temp, =, Double, ., doubleToLongBits]
[;, long, temp, =, Double, ., doubleToLongBits, (, this, ., lowerBound, ), ;, result, =, 37, *, result, +, (]
[;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, )]
[., doubleToLongBits, (, this, ., lowerBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32]
[., lowerBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (]
[^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, )]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +]
[=, Double, ., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int, ), (]
[;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, )]
[., doubleToLongBits, (, this, ., upperBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32]
[., upperBound, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +, (, int]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +, (, int]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +, (, int]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +, (]
[^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, )]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +, (]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +]
[=, Double, ., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (]
[;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, )]
[., doubleToLongBits, (, this, ., innerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32]
[., innerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +, (, int]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, .]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +, (, int]
[;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +, (, int]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +, (]
[^, (, temp, >, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, )]
[), ;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +, (]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +]
[>, >, >, 32, ), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =]
[), ), ;, temp, =, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +]
[=, Double, ., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (]
[;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, )]
[., doubleToLongBits, (, this, ., outerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^]
[), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32]
[., outerRadius, ), ;, result, =, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >]
[=, 37, *, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;]
[;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, return, result, ;, }]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, result, =, 37, *]
[*, result, +, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, result, =]
[+, (, int, ), (, temp, ^, (, temp, >, >, >, 32, ), ), ;, result, =, 37, *]
[;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, return, result, ;, }]
[;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, return, result, ;, }]
[), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, return, result, ;]
[^, (, temp, >, >, >, 32, ), ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (]
[), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, return, result, ;]
[), ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, return, result]
[>, >, >, 32, ), ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint]
[), ), ;, result, =, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, return, result]
[=, 37, *, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, return, result, ;, }, public, Object]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;]
[+, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, return, result, ;, }, public, Object, clone, (, ), throws]
[*, result, +, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, return, result, ;, }, public, Object, clone, (]
[+, HashUtilities, ., hashCodeForPaint, (, this, ., paint, ), ;, return, result, ;, }, public, Object, clone, (, ), throws]
[;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;]
[., hashCodeForPaint, (, this, ., paint, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, )]
[., paint, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return, super, ., clone, (, ), ;, }, private, void]
[;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (, ), ;, SerialUtilities, .]
[., clone, (, ), ;, }, private, void, writeObject, (, ObjectOutputStream, stream, ), throws, IOException, {, stream, ., defaultWriteObject, (]
[;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, )]
[., defaultWriteObject, (, ), ;, SerialUtilities, ., writePaint, (, this, ., paint, ,, stream, ), ;, }, private, void, readObject]
[;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, ), ;]
[., writePaint, (, this, ., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException]
[,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject]
[., paint, ,, stream, ), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream]
[), ;, }, private, void, readObject, (, ObjectInputStream, stream, ), throws, IOException, ,, ClassNotFoundException, {, stream, ., defaultReadObject, (, )]
[;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[., defaultReadObject, (, ), ;, this, ., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[=, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[., paint, =, SerialUtilities, ., readPaint, (, stream, ), ;, }, }]
[;, }, }]
[., readPaint, (, stream, ), ;, }, }]
[), ;, }, }]
