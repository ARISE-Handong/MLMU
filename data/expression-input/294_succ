[;, static, final, DateTimeFormatter, cOffsetFormatter, =, new, DateTimeFormatterBuilder, (, ), ., appendTimeZoneOffset, (, null, ,, true, ,, 2, ,, 4]
[., currentTimeMillis, (, ), ;, static, final, DateTimeFormatter, cOffsetFormatter, =, new, DateTimeFormatterBuilder, (, ), ., appendTimeZoneOffset, (, null, ,, true]
[;, public, static, void, main, (, String, [, ], args, ), throws, Exception, {, Set, idSet, =, DateTimeZone, ., getAvailableIDs]
[., toFormatter, (, ), ;, public, static, void, main, (, String, [, ], args, ), throws, Exception, {, Set, idSet]
[., appendTimeZoneOffset, (, null, ,, true, ,, 2, ,, 4, ), ., toFormatter, (, ), ;, public, static, void, main]
[,, true, ,, 2, ,, 4, ), ., toFormatter, (, ), ;, public, static, void, main, (, String, [, ]]
[,, 2, ,, 4, ), ., toFormatter, (, ), ;, public, static, void, main, (, String, [, ], args, )]
[,, 4, ), ., toFormatter, (, ), ;, public, static, void, main, (, String, [, ], args, ), throws, Exception]
[), ., toFormatter, (, ), ;, public, static, void, main, (, String, [, ], args, ), throws, Exception, {, Set]
[;, ZoneData, [, ], zones, =, new, ZoneData, [, idSet, ., size, (, ), ], ;, {, Iterator, it, =]
[., getAvailableIDs, (, ), ;, ZoneData, [, ], zones, =, new, ZoneData, [, idSet, ., size, (, ), ], ;]
[;, {, Iterator, it, =, idSet, ., iterator, (, ), ;, int, i, =, 0, ;, while, (, it, .]
[], ;, {, Iterator, it, =, idSet, ., iterator, (, ), ;, int, i, =, 0, ;, while, (, it]
[., size, (, ), ], ;, {, Iterator, it, =, idSet, ., iterator, (, ), ;, int, i, =, 0]
[;, int, i, =, 0, ;, while, (, it, ., hasNext, (, ), ), {, String, id, =, (, String]
[., iterator, (, ), ;, int, i, =, 0, ;, while, (, it, ., hasNext, (, ), ), {, String]
[;, while, (, it, ., hasNext, (, ), ), {, String, id, =, (, String, ), it, ., next, (]
[), {, String, id, =, (, String, ), it, ., next, (, ), ;, zones, [, i, ++, ], =]
[., hasNext, (, ), ), {, String, id, =, (, String, ), it, ., next, (, ), ;, zones, []
[;, zones, [, i, ++, ], =, new, ZoneData, (, id, ,, DateTimeZone, ., forID, (, id, ), ), ;]
[;, zones, [, i, ++, ], =, new, ZoneData, (, id, ,, DateTimeZone, ., forID, (, id, ), ), ;]
[., next, (, ), ;, zones, [, i, ++, ], =, new, ZoneData, (, id, ,, DateTimeZone, ., forID, (]
[=, new, ZoneData, (, id, ,, DateTimeZone, ., forID, (, id, ), ), ;, }, Arrays, ., sort, (, zones]
[[, i, ++, ], =, new, ZoneData, (, id, ,, DateTimeZone, ., forID, (, id, ), ), ;, }, Arrays]
[], =, new, ZoneData, (, id, ,, DateTimeZone, ., forID, (, id, ), ), ;, }, Arrays, ., sort, (]
[++, ], =, new, ZoneData, (, id, ,, DateTimeZone, ., forID, (, id, ), ), ;, }, Arrays, ., sort]
[;, }, Arrays, ., sort, (, zones, ), ;, }, PrintStream, out, =, System, ., out, ;, out, ., println]
[,, DateTimeZone, ., forID, (, id, ), ), ;, }, Arrays, ., sort, (, zones, ), ;, }, PrintStream, out]
[), ;, }, Arrays, ., sort, (, zones, ), ;, }, PrintStream, out, =, System, ., out, ;, out, .]
[., forID, (, id, ), ), ;, }, Arrays, ., sort, (, zones, ), ;, }, PrintStream, out, =, System]
[), ), ;, }, Arrays, ., sort, (, zones, ), ;, }, PrintStream, out, =, System, ., out, ;, out]
[;, }, PrintStream, out, =, System, ., out, ;, out, ., println, (, "<table>", ), ;, out, ., println, (]
[., sort, (, zones, ), ;, }, PrintStream, out, =, System, ., out, ;, out, ., println, (, "<table>", )]
[), ;, }, PrintStream, out, =, System, ., out, ;, out, ., println, (, "<table>", ), ;, out, ., println]
[;, out, ., println, (, "<table>", ), ;, out, ., println, (, "<tr>", +, "<th align=\"left\">Standard Offset</th>", +, "<th align=\"left\">Canonical ID</th>", +, "<th align=\"left\">Aliases</th>", +]
[., out, ;, out, ., println, (, "<table>", ), ;, out, ., println, (, "<tr>", +, "<th align=\"left\">Standard Offset</th>", +, "<th align=\"left\">Canonical ID</th>", +]
[;, out, ., println, (, "<tr>", +, "<th align=\"left\">Standard Offset</th>", +, "<th align=\"left\">Canonical ID</th>", +, "<th align=\"left\">Aliases</th>", +, "</tr>", ), ;, ZoneData, canonical, =, null]
[., println, (, "<table>", ), ;, out, ., println, (, "<tr>", +, "<th align=\"left\">Standard Offset</th>", +, "<th align=\"left\">Canonical ID</th>", +, "<th align=\"left\">Aliases</th>", +, "</tr>", )]
[), ;, out, ., println, (, "<tr>", +, "<th align=\"left\">Standard Offset</th>", +, "<th align=\"left\">Canonical ID</th>", +, "<th align=\"left\">Aliases</th>", +, "</tr>", ), ;, ZoneData, canonical, =]
[;, ZoneData, canonical, =, null, ;, List, <, ZoneData, >, aliases, =, new, ArrayList, <, ZoneData, >, (, ), ;]
[., println, (, "<tr>", +, "<th align=\"left\">Standard Offset</th>", +, "<th align=\"left\">Canonical ID</th>", +, "<th align=\"left\">Aliases</th>", +, "</tr>", ), ;, ZoneData, canonical, =, null, ;, List]
[), ;, ZoneData, canonical, =, null, ;, List, <, ZoneData, >, aliases, =, new, ArrayList, <, ZoneData, >, (, )]
[+, "</tr>", ), ;, ZoneData, canonical, =, null, ;, List, <, ZoneData, >, aliases, =, new, ArrayList, <, ZoneData, >]
[+, "<th align=\"left\">Aliases</th>", +, "</tr>", ), ;, ZoneData, canonical, =, null, ;, List, <, ZoneData, >, aliases, =, new, ArrayList, <]
[+, "<th align=\"left\">Canonical ID</th>", +, "<th align=\"left\">Aliases</th>", +, "</tr>", ), ;, ZoneData, canonical, =, null, ;, List, <, ZoneData, >, aliases, =, new]
[+, "<th align=\"left\">Standard Offset</th>", +, "<th align=\"left\">Canonical ID</th>", +, "<th align=\"left\">Aliases</th>", +, "</tr>", ), ;, ZoneData, canonical, =, null, ;, List, <, ZoneData, >, aliases]
[+, "<th align=\"left\">Canonical ID</th>", +, "<th align=\"left\">Aliases</th>", +, "</tr>", ), ;, ZoneData, canonical, =, null, ;, List, <, ZoneData, >, aliases, =, new]
[+, "<th align=\"left\">Aliases</th>", +, "</tr>", ), ;, ZoneData, canonical, =, null, ;, List, <, ZoneData, >, aliases, =, new, ArrayList, <]
[+, "</tr>", ), ;, ZoneData, canonical, =, null, ;, List, <, ZoneData, >, aliases, =, new, ArrayList, <, ZoneData, >]
[), ;, ZoneData, canonical, =, null, ;, List, <, ZoneData, >, aliases, =, new, ArrayList, <, ZoneData, >, (, )]
[;, List, <, ZoneData, >, aliases, =, new, ArrayList, <, ZoneData, >, (, ), ;, for, (, int, i, =]
[;, for, (, int, i, =, 0, ;, i, <, zones, ., length, ;, i, ++, ), {, ZoneData, zone]
[;, i, <, zones, ., length, ;, i, ++, ), {, ZoneData, zone, =, zones, [, i, ], ;, if]
[;, i, ++, ), {, ZoneData, zone, =, zones, [, i, ], ;, if, (, !, zone, ., isCanonical, (]
[<, zones, ., length, ;, i, ++, ), {, ZoneData, zone, =, zones, [, i, ], ;, if, (, !]
[;, i, ++, ), {, ZoneData, zone, =, zones, [, i, ], ;, if, (, !, zone, ., isCanonical, (]
[., length, ;, i, ++, ), {, ZoneData, zone, =, zones, [, i, ], ;, if, (, !, zone, .]
[), {, ZoneData, zone, =, zones, [, i, ], ;, if, (, !, zone, ., isCanonical, (, ), ), {]
[++, ), {, ZoneData, zone, =, zones, [, i, ], ;, if, (, !, zone, ., isCanonical, (, ), )]
[;, if, (, !, zone, ., isCanonical, (, ), ), {, aliases, ., add, (, zone, ), ;, continue, ;]
[[, i, ], ;, if, (, !, zone, ., isCanonical, (, ), ), {, aliases, ., add, (, zone, )]
[], ;, if, (, !, zone, ., isCanonical, (, ), ), {, aliases, ., add, (, zone, ), ;, continue]
[), {, aliases, ., add, (, zone, ), ;, continue, ;, }, if, (, canonical, !=, null, ), {, printRow]
[), {, aliases, ., add, (, zone, ), ;, continue, ;, }, if, (, canonical, !=, null, ), {, printRow]
[., isCanonical, (, ), ), {, aliases, ., add, (, zone, ), ;, continue, ;, }, if, (, canonical, !=]
[;, continue, ;, }, if, (, canonical, !=, null, ), {, printRow, (, out, ,, canonical, ,, aliases, ), ;]
[., add, (, zone, ), ;, continue, ;, }, if, (, canonical, !=, null, ), {, printRow, (, out, ,]
[), ;, continue, ;, }, if, (, canonical, !=, null, ), {, printRow, (, out, ,, canonical, ,, aliases, )]
[), {, printRow, (, out, ,, canonical, ,, aliases, ), ;, }, canonical, =, zone, ;, aliases, ., clear, (]
[!=, null, ), {, printRow, (, out, ,, canonical, ,, aliases, ), ;, }, canonical, =, zone, ;, aliases, .]
[), {, printRow, (, out, ,, canonical, ,, aliases, ), ;, }, canonical, =, zone, ;, aliases, ., clear, (]
[;, }, canonical, =, zone, ;, aliases, ., clear, (, ), ;, }, if, (, canonical, !=, null, ), {]
[,, canonical, ,, aliases, ), ;, }, canonical, =, zone, ;, aliases, ., clear, (, ), ;, }, if, (]
[,, aliases, ), ;, }, canonical, =, zone, ;, aliases, ., clear, (, ), ;, }, if, (, canonical, !=]
[), ;, }, canonical, =, zone, ;, aliases, ., clear, (, ), ;, }, if, (, canonical, !=, null, )]
[=, zone, ;, aliases, ., clear, (, ), ;, }, if, (, canonical, !=, null, ), {, printRow, (, out]
[;, aliases, ., clear, (, ), ;, }, if, (, canonical, !=, null, ), {, printRow, (, out, ,, canonical]
[;, }, if, (, canonical, !=, null, ), {, printRow, (, out, ,, canonical, ,, aliases, ), ;, }, out]
[., clear, (, ), ;, }, if, (, canonical, !=, null, ), {, printRow, (, out, ,, canonical, ,, aliases]
[), {, printRow, (, out, ,, canonical, ,, aliases, ), ;, }, out, ., println, (, "</table>", ), ;, }]
[!=, null, ), {, printRow, (, out, ,, canonical, ,, aliases, ), ;, }, out, ., println, (, "</table>", )]
[), {, printRow, (, out, ,, canonical, ,, aliases, ), ;, }, out, ., println, (, "</table>", ), ;, }]
[;, }, out, ., println, (, "</table>", ), ;, }, private, static, void, printRow, (, PrintStream, out, ,, ZoneData, zone]
[,, canonical, ,, aliases, ), ;, }, out, ., println, (, "</table>", ), ;, }, private, static, void, printRow, (]
[,, aliases, ), ;, }, out, ., println, (, "</table>", ), ;, }, private, static, void, printRow, (, PrintStream, out]
[), ;, }, out, ., println, (, "</table>", ), ;, }, private, static, void, printRow, (, PrintStream, out, ,, ZoneData]
[;, }, private, static, void, printRow, (, PrintStream, out, ,, ZoneData, zone, ,, List, aliases, ), {, out, ., print]
[., println, (, "</table>", ), ;, }, private, static, void, printRow, (, PrintStream, out, ,, ZoneData, zone, ,, List, aliases]
[), ;, }, private, static, void, printRow, (, PrintStream, out, ,, ZoneData, zone, ,, List, aliases, ), {, out, .]
[;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;, out, ., print, (, zone, ., getStandardOffsetStr, (, ), ), ;, out]
[., print, (, "<tr>", ), ;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;, out, ., print, (, zone, ., getStandardOffsetStr]
[), ;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;, out, ., print, (, zone, ., getStandardOffsetStr, (, ), ), ;]
[;, out, ., print, (, zone, ., getStandardOffsetStr, (, ), ), ;, out, ., print, (, "</td>", ), ;, out]
[., print, (, "<td align=\"left\" valign=\"top\">", ), ;, out, ., print, (, zone, ., getStandardOffsetStr, (, ), ), ;, out, ., print]
[), ;, out, ., print, (, zone, ., getStandardOffsetStr, (, ), ), ;, out, ., print, (, "</td>", ), ;]
[;, out, ., print, (, "</td>", ), ;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;, out, ., print, (, zone]
[., print, (, zone, ., getStandardOffsetStr, (, ), ), ;, out, ., print, (, "</td>", ), ;, out, ., print]
[), ;, out, ., print, (, "</td>", ), ;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;, out, ., print, (]
[., getStandardOffsetStr, (, ), ), ;, out, ., print, (, "</td>", ), ;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;]
[;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;, out, ., print, (, zone, ., getCanonicalID, (, ), ), ;, out]
[., print, (, "</td>", ), ;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;, out, ., print, (, zone, ., getCanonicalID]
[), ;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;, out, ., print, (, zone, ., getCanonicalID, (, ), ), ;]
[;, out, ., print, (, zone, ., getCanonicalID, (, ), ), ;, out, ., print, (, "</td>", ), ;, out]
[., print, (, "<td align=\"left\" valign=\"top\">", ), ;, out, ., print, (, zone, ., getCanonicalID, (, ), ), ;, out, ., print]
[), ;, out, ., print, (, zone, ., getCanonicalID, (, ), ), ;, out, ., print, (, "</td>", ), ;]
[;, out, ., print, (, "</td>", ), ;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;, if, (, aliases, ., size]
[., print, (, zone, ., getCanonicalID, (, ), ), ;, out, ., print, (, "</td>", ), ;, out, ., print]
[), ;, out, ., print, (, "</td>", ), ;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;, if, (, aliases, .]
[., getCanonicalID, (, ), ), ;, out, ., print, (, "</td>", ), ;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;]
[;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;, if, (, aliases, ., size, (, ), >, 0, ), {, for]
[., print, (, "</td>", ), ;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;, if, (, aliases, ., size, (, )]
[), ;, out, ., print, (, "<td align=\"left\" valign=\"top\">", ), ;, if, (, aliases, ., size, (, ), >, 0, ), {]
[;, if, (, aliases, ., size, (, ), >, 0, ), {, for, (, int, j, =, 0, ;, j]
[., print, (, "<td align=\"left\" valign=\"top\">", ), ;, if, (, aliases, ., size, (, ), >, 0, ), {, for, (, int]
[), ;, if, (, aliases, ., size, (, ), >, 0, ), {, for, (, int, j, =, 0, ;]
[), {, for, (, int, j, =, 0, ;, j, <, aliases, ., size, (, ), ;, j, ++, )]
[>, 0, ), {, for, (, int, j, =, 0, ;, j, <, aliases, ., size, (, ), ;, j]
[., size, (, ), >, 0, ), {, for, (, int, j, =, 0, ;, j, <, aliases, ., size]
[), {, for, (, int, j, =, 0, ;, j, <, aliases, ., size, (, ), ;, j, ++, )]
[;, j, <, aliases, ., size, (, ), ;, j, ++, ), {, if, (, j, >, 0, ), {]
[;, j, ++, ), {, if, (, j, >, 0, ), {, out, ., print, (, ", ", ), ;, }]
[<, aliases, ., size, (, ), ;, j, ++, ), {, if, (, j, >, 0, ), {, out, .]
[;, j, ++, ), {, if, (, j, >, 0, ), {, out, ., print, (, ", ", ), ;, }]
[., size, (, ), ;, j, ++, ), {, if, (, j, >, 0, ), {, out, ., print, (]
[), {, if, (, j, >, 0, ), {, out, ., print, (, ", ", ), ;, }, out, ., print]
[++, ), {, if, (, j, >, 0, ), {, out, ., print, (, ", ", ), ;, }, out, .]
[), {, out, ., print, (, ", ", ), ;, }, out, ., print, (, (, (, ZoneData, ), aliases, .]
[>, 0, ), {, out, ., print, (, ", ", ), ;, }, out, ., print, (, (, (, ZoneData, )]
[), {, out, ., print, (, ", ", ), ;, }, out, ., print, (, (, (, ZoneData, ), aliases, .]
[;, }, out, ., print, (, (, (, ZoneData, ), aliases, ., get, (, j, ), ), ., getID, (]
[., print, (, ", ", ), ;, }, out, ., print, (, (, (, ZoneData, ), aliases, ., get, (, j]
[), ;, }, out, ., print, (, (, (, ZoneData, ), aliases, ., get, (, j, ), ), ., getID]
[;, }, }, out, ., print, (, "</td>", ), ;, out, ., println, (, "</tr>", ), ;, }, private, static]
[., print, (, (, (, ZoneData, ), aliases, ., get, (, j, ), ), ., getID, (, ), ), ;]
[), ;, }, }, out, ., print, (, "</td>", ), ;, out, ., println, (, "</tr>", ), ;, }, private]
[., getID, (, ), ), ;, }, }, out, ., print, (, "</td>", ), ;, out, ., println, (, "</tr>"]
[), ., getID, (, ), ), ;, }, }, out, ., print, (, "</td>", ), ;, out, ., println, (]
[), ., getID, (, ), ), ;, }, }, out, ., print, (, "</td>", ), ;, out, ., println, (]
[., get, (, j, ), ), ., getID, (, ), ), ;, }, }, out, ., print, (, "</td>", )]
[), ), ., getID, (, ), ), ;, }, }, out, ., print, (, "</td>", ), ;, out, ., println]
[;, out, ., println, (, "</tr>", ), ;, }, private, static, class, ZoneData, implements, Comparable, {, private, final, String, iID]
[., print, (, "</td>", ), ;, out, ., println, (, "</tr>", ), ;, }, private, static, class, ZoneData, implements, Comparable]
[), ;, out, ., println, (, "</tr>", ), ;, }, private, static, class, ZoneData, implements, Comparable, {, private, final, String]
[;, }, private, static, class, ZoneData, implements, Comparable, {, private, final, String, iID, ;, private, final, DateTimeZone, iZone, ;, ZoneData]
[., println, (, "</tr>", ), ;, }, private, static, class, ZoneData, implements, Comparable, {, private, final, String, iID, ;, private]
[), ;, }, private, static, class, ZoneData, implements, Comparable, {, private, final, String, iID, ;, private, final, DateTimeZone, iZone, ;]
[=, id, ;, iZone, =, zone, ;, }, public, String, getID, (, ), {, return, iID, ;, }, public, String]
[;, iZone, =, zone, ;, }, public, String, getID, (, ), {, return, iID, ;, }, public, String, getCanonicalID, (]
[=, zone, ;, }, public, String, getID, (, ), {, return, iID, ;, }, public, String, getCanonicalID, (, ), {]
[;, }, public, String, getID, (, ), {, return, iID, ;, }, public, String, getCanonicalID, (, ), {, return, iZone]
[;, }, public, String, getCanonicalID, (, ), {, return, iZone, ., getID, (, ), ;, }, public, boolean, isCanonical, (]
[;, }, public, boolean, isCanonical, (, ), {, return, getID, (, ), ., equals, (, getCanonicalID, (, ), ), ;]
[., getID, (, ), ;, }, public, boolean, isCanonical, (, ), {, return, getID, (, ), ., equals, (, getCanonicalID]
[;, }, public, String, getStandardOffsetStr, (, ), {, long, millis, =, cNow, ;, while, (, iZone, ., getOffset, (, millis]
[., equals, (, getCanonicalID, (, ), ), ;, }, public, String, getStandardOffsetStr, (, ), {, long, millis, =, cNow, ;]
[), ;, }, public, String, getStandardOffsetStr, (, ), {, long, millis, =, cNow, ;, while, (, iZone, ., getOffset, (]
[;, while, (, iZone, ., getOffset, (, millis, ), !=, iZone, ., getStandardOffset, (, millis, ), ), {, long, next]
[), {, long, next, =, iZone, ., nextTransition, (, millis, ), ;, if, (, next, ==, millis, ), {, break]
[!=, iZone, ., getStandardOffset, (, millis, ), ), {, long, next, =, iZone, ., nextTransition, (, millis, ), ;, if]
[., getOffset, (, millis, ), !=, iZone, ., getStandardOffset, (, millis, ), ), {, long, next, =, iZone, ., nextTransition]
[), !=, iZone, ., getStandardOffset, (, millis, ), ), {, long, next, =, iZone, ., nextTransition, (, millis, ), ;]
[), {, long, next, =, iZone, ., nextTransition, (, millis, ), ;, if, (, next, ==, millis, ), {, break]
[., getStandardOffset, (, millis, ), ), {, long, next, =, iZone, ., nextTransition, (, millis, ), ;, if, (, next]
[), ), {, long, next, =, iZone, ., nextTransition, (, millis, ), ;, if, (, next, ==, millis, ), {]
[;, if, (, next, ==, millis, ), {, break, ;, }, millis, =, next, ;, }, return, cOffsetFormatter, ., withZone]
[., nextTransition, (, millis, ), ;, if, (, next, ==, millis, ), {, break, ;, }, millis, =, next, ;]
[), ;, if, (, next, ==, millis, ), {, break, ;, }, millis, =, next, ;, }, return, cOffsetFormatter, .]
[), {, break, ;, }, millis, =, next, ;, }, return, cOffsetFormatter, ., withZone, (, iZone, ), ., print, (]
[==, millis, ), {, break, ;, }, millis, =, next, ;, }, return, cOffsetFormatter, ., withZone, (, iZone, ), .]
[), {, break, ;, }, millis, =, next, ;, }, return, cOffsetFormatter, ., withZone, (, iZone, ), ., print, (]
[=, next, ;, }, return, cOffsetFormatter, ., withZone, (, iZone, ), ., print, (, millis, ), ;, }, public, int]
[;, }, return, cOffsetFormatter, ., withZone, (, iZone, ), ., print, (, millis, ), ;, }, public, int, compareTo, (]
[;, }, public, int, compareTo, (, Object, obj, ), {, ZoneData, other, =, (, ZoneData, ), obj, ;, int, offsetA]
[., print, (, millis, ), ;, }, public, int, compareTo, (, Object, obj, ), {, ZoneData, other, =, (, ZoneData]
[., withZone, (, iZone, ), ., print, (, millis, ), ;, }, public, int, compareTo, (, Object, obj, ), {]
[), ., print, (, millis, ), ;, }, public, int, compareTo, (, Object, obj, ), {, ZoneData, other, =, (]
[), ;, }, public, int, compareTo, (, Object, obj, ), {, ZoneData, other, =, (, ZoneData, ), obj, ;, int]
[;, int, offsetA, =, iZone, ., getStandardOffset, (, cNow, ), ;, int, offsetB, =, other, ., iZone, ., getStandardOffset, (]
[;, int, offsetA, =, iZone, ., getStandardOffset, (, cNow, ), ;, int, offsetB, =, other, ., iZone, ., getStandardOffset, (]
[;, int, offsetB, =, other, ., iZone, ., getStandardOffset, (, cNow, ), ;, if, (, offsetA, <, offsetB, ), {]
[., getStandardOffset, (, cNow, ), ;, int, offsetB, =, other, ., iZone, ., getStandardOffset, (, cNow, ), ;, if, (]
[), ;, int, offsetB, =, other, ., iZone, ., getStandardOffset, (, cNow, ), ;, if, (, offsetA, <, offsetB, )]
[;, if, (, offsetA, <, offsetB, ), {, return, -, 1, ;, }, if, (, offsetA, >, offsetB, ), {]
[., getStandardOffset, (, cNow, ), ;, if, (, offsetA, <, offsetB, ), {, return, -, 1, ;, }, if, (]
[., iZone, ., getStandardOffset, (, cNow, ), ;, if, (, offsetA, <, offsetB, ), {, return, -, 1, ;, }]
[), ;, if, (, offsetA, <, offsetB, ), {, return, -, 1, ;, }, if, (, offsetA, >, offsetB, )]
[), {, return, -, 1, ;, }, if, (, offsetA, >, offsetB, ), {, return, 1, ;, }, int, result]
[<, offsetB, ), {, return, -, 1, ;, }, if, (, offsetA, >, offsetB, ), {, return, 1, ;, }]
[), {, return, -, 1, ;, }, if, (, offsetA, >, offsetB, ), {, return, 1, ;, }, int, result]
[;, }, if, (, offsetA, >, offsetB, ), {, return, 1, ;, }, int, result, =, getCanonicalID, (, ), .]
[;, }, if, (, offsetA, >, offsetB, ), {, return, 1, ;, }, int, result, =, getCanonicalID, (, ), .]
[), {, return, 1, ;, }, int, result, =, getCanonicalID, (, ), ., compareTo, (, other, ., getCanonicalID, (, )]
[>, offsetB, ), {, return, 1, ;, }, int, result, =, getCanonicalID, (, ), ., compareTo, (, other, ., getCanonicalID]
[), {, return, 1, ;, }, int, result, =, getCanonicalID, (, ), ., compareTo, (, other, ., getCanonicalID, (, )]
[;, }, int, result, =, getCanonicalID, (, ), ., compareTo, (, other, ., getCanonicalID, (, ), ), ;, if, (]
[;, if, (, result, !=, 0, ), {, return, result, ;, }, if, (, isCanonical, (, ), ), {, if]
[., compareTo, (, other, ., getCanonicalID, (, ), ), ;, if, (, result, !=, 0, ), {, return, result, ;]
[), ;, if, (, result, !=, 0, ), {, return, result, ;, }, if, (, isCanonical, (, ), ), {]
[., getCanonicalID, (, ), ), ;, if, (, result, !=, 0, ), {, return, result, ;, }, if, (, isCanonical]
[), {, return, result, ;, }, if, (, isCanonical, (, ), ), {, if, (, !, other, ., isCanonical, (]
[!=, 0, ), {, return, result, ;, }, if, (, isCanonical, (, ), ), {, if, (, !, other, .]
[), {, return, result, ;, }, if, (, isCanonical, (, ), ), {, if, (, !, other, ., isCanonical, (]
[;, }, if, (, isCanonical, (, ), ), {, if, (, !, other, ., isCanonical, (, ), ), {, return]
[), {, if, (, !, other, ., isCanonical, (, ), ), {, return, -, 1, ;, }, }, else, if]
[), {, return, -, 1, ;, }, }, else, if, (, other, ., isCanonical, (, ), ), {, return, 1]
[), {, return, -, 1, ;, }, }, else, if, (, other, ., isCanonical, (, ), ), {, return, 1]
[., isCanonical, (, ), ), {, return, -, 1, ;, }, }, else, if, (, other, ., isCanonical, (, )]
[;, }, }, else, if, (, other, ., isCanonical, (, ), ), {, return, 1, ;, }, return, getID, (]
[;, }, }, else, if, (, other, ., isCanonical, (, ), ), {, return, 1, ;, }, return, getID, (]
[), {, return, 1, ;, }, return, getID, (, ), ., compareTo, (, other, ., getID, (, ), ), ;]
[., isCanonical, (, ), ), {, return, 1, ;, }, return, getID, (, ), ., compareTo, (, other, ., getID]
[;, }, return, getID, (, ), ., compareTo, (, other, ., getID, (, ), ), ;, }, }, }]
[;, }, }, }]
[., compareTo, (, other, ., getID, (, ), ), ;, }, }, }]
[), ;, }, }, }]
[., getID, (, ), ), ;, }, }, }]
