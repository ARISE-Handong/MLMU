[;, private, PaintSample, gridPaintSample, ;, private, StrokeSample, gridStrokeSample, ;, private, StrokeSample, [, ], availableStrokeSamples, ;, protected, static, ResourceBundle, localizationResources, =]
[;, private, PaintSample, gridPaintSample, ;, private, StrokeSample, gridStrokeSample, ;, private, StrokeSample, [, ], availableStrokeSamples, ;, protected, static, ResourceBundle, localizationResources, =]
[;, private, StrokeSample, gridStrokeSample, ;, private, StrokeSample, [, ], availableStrokeSamples, ;, protected, static, ResourceBundle, localizationResources, =, ResourceBundleWrapper, ., getBundle, (]
[static, ResourceBundle, localizationResources, =, ResourceBundleWrapper, ., getBundle, (, "org.jfree.chart.editor.LocalizationBundle", ), ;, public, DefaultNumberAxisEditor, (, NumberAxis, axis, ), {, super, (]
[=, ResourceBundleWrapper, ., getBundle, (, "org.jfree.chart.editor.LocalizationBundle", ), ;, public, DefaultNumberAxisEditor, (, NumberAxis, axis, ), {, super, (, axis, ), ;]
[=, ResourceBundleWrapper, ., getBundle, (, "org.jfree.chart.editor.LocalizationBundle", ), ;, public, DefaultNumberAxisEditor, (, NumberAxis, axis, ), {, super, (, axis, ), ;]
[(, "org.jfree.chart.editor.LocalizationBundle", ), ;, public, DefaultNumberAxisEditor, (, NumberAxis, axis, ), {, super, (, axis, ), ;, this, ., autoRange, =]
[(, "org.jfree.chart.editor.LocalizationBundle", ), ;, public, DefaultNumberAxisEditor, (, NumberAxis, axis, ), {, super, (, axis, ), ;, this, ., autoRange, =]
[(, NumberAxis, axis, ), {, super, (, axis, ), ;, this, ., autoRange, =, axis, ., isAutoRange, (, ), ;]
[(, NumberAxis, axis, ), {, super, (, axis, ), ;, this, ., autoRange, =, axis, ., isAutoRange, (, ), ;]
[{, super, (, axis, ), ;, this, ., autoRange, =, axis, ., isAutoRange, (, ), ;, this, ., minimumValue, =]
[{, super, (, axis, ), ;, this, ., autoRange, =, axis, ., isAutoRange, (, ), ;, this, ., minimumValue, =]
[this, ., autoRange, =, axis, ., isAutoRange, (, ), ;, this, ., minimumValue, =, axis, ., getLowerBound, (, ), ;]
[this, ., autoRange, =, axis, ., isAutoRange, (, ), ;, this, ., minimumValue, =, axis, ., getLowerBound, (, ), ;]
[axis, ., isAutoRange, (, ), ;, this, ., minimumValue, =, axis, ., getLowerBound, (, ), ;, this, ., maximumValue, =]
[axis, ., isAutoRange, (, ), ;, this, ., minimumValue, =, axis, ., getLowerBound, (, ), ;, this, ., maximumValue, =]
[this, ., minimumValue, =, axis, ., getLowerBound, (, ), ;, this, ., maximumValue, =, axis, ., getUpperBound, (, ), ;]
[this, ., minimumValue, =, axis, ., getLowerBound, (, ), ;, this, ., maximumValue, =, axis, ., getUpperBound, (, ), ;]
[axis, ., getLowerBound, (, ), ;, this, ., maximumValue, =, axis, ., getUpperBound, (, ), ;, this, ., gridPaintSample, =]
[(, ), ;, this, ., maximumValue, =, axis, ., getUpperBound, (, ), ;, this, ., gridPaintSample, =, new, PaintSample, (]
[(, ), ;, this, ., maximumValue, =, axis, ., getUpperBound, (, ), ;, this, ., gridPaintSample, =, new, PaintSample, (]
[maximumValue, =, axis, ., getUpperBound, (, ), ;, this, ., gridPaintSample, =, new, PaintSample, (, Color, ., blue, ), ;]
[maximumValue, =, axis, ., getUpperBound, (, ), ;, this, ., gridPaintSample, =, new, PaintSample, (, Color, ., blue, ), ;]
[getUpperBound, (, ), ;, this, ., gridPaintSample, =, new, PaintSample, (, Color, ., blue, ), ;, this, ., gridStrokeSample, =]
[;, this, ., gridPaintSample, =, new, PaintSample, (, Color, ., blue, ), ;, this, ., gridStrokeSample, =, new, StrokeSample, (]
[gridPaintSample, =, new, PaintSample, (, Color, ., blue, ), ;, this, ., gridStrokeSample, =, new, StrokeSample, (, new, BasicStroke, (]
[(, Color, ., blue, ), ;, this, ., gridStrokeSample, =, new, StrokeSample, (, new, BasicStroke, (, 1.0f, ), ), ;]
[(, Color, ., blue, ), ;, this, ., gridStrokeSample, =, new, StrokeSample, (, new, BasicStroke, (, 1.0f, ), ), ;]
[), ;, this, ., gridStrokeSample, =, new, StrokeSample, (, new, BasicStroke, (, 1.0f, ), ), ;, this, ., availableStrokeSamples, =]
[., gridStrokeSample, =, new, StrokeSample, (, new, BasicStroke, (, 1.0f, ), ), ;, this, ., availableStrokeSamples, =, new, StrokeSample, []
[new, StrokeSample, (, new, BasicStroke, (, 1.0f, ), ), ;, this, ., availableStrokeSamples, =, new, StrokeSample, [, 3, ], ;]
[new, StrokeSample, (, new, BasicStroke, (, 1.0f, ), ), ;, this, ., availableStrokeSamples, =, new, StrokeSample, [, 3, ], ;]
[new, StrokeSample, (, new, BasicStroke, (, 1.0f, ), ), ;, this, ., availableStrokeSamples, =, new, StrokeSample, [, 3, ], ;]
[BasicStroke, (, 1.0f, ), ), ;, this, ., availableStrokeSamples, =, new, StrokeSample, [, 3, ], ;, this, ., availableStrokeSamples, []
[), ), ;, this, ., availableStrokeSamples, =, new, StrokeSample, [, 3, ], ;, this, ., availableStrokeSamples, [, 0, ], =]
[this, ., availableStrokeSamples, =, new, StrokeSample, [, 3, ], ;, this, ., availableStrokeSamples, [, 0, ], =, new, StrokeSample, (]
[=, new, StrokeSample, [, 3, ], ;, this, ., availableStrokeSamples, [, 0, ], =, new, StrokeSample, (, new, BasicStroke, (]
[3, ], ;, this, ., availableStrokeSamples, [, 0, ], =, new, StrokeSample, (, new, BasicStroke, (, 1.0f, ), ), ;]
[3, ], ;, this, ., availableStrokeSamples, [, 0, ], =, new, StrokeSample, (, new, BasicStroke, (, 1.0f, ), ), ;]
[3, ], ;, this, ., availableStrokeSamples, [, 0, ], =, new, StrokeSample, (, new, BasicStroke, (, 1.0f, ), ), ;]
[., availableStrokeSamples, [, 0, ], =, new, StrokeSample, (, new, BasicStroke, (, 1.0f, ), ), ;, this, ., availableStrokeSamples, []
[0, ], =, new, StrokeSample, (, new, BasicStroke, (, 1.0f, ), ), ;, this, ., availableStrokeSamples, [, 1, ], =]
[new, StrokeSample, (, new, BasicStroke, (, 1.0f, ), ), ;, this, ., availableStrokeSamples, [, 1, ], =, new, StrokeSample, (]
[new, BasicStroke, (, 1.0f, ), ), ;, this, ., availableStrokeSamples, [, 1, ], =, new, StrokeSample, (, new, BasicStroke, (]
[), ), ;, this, ., availableStrokeSamples, [, 1, ], =, new, StrokeSample, (, new, BasicStroke, (, 2.0f, ), ), ;]
[), ), ;, this, ., availableStrokeSamples, [, 1, ], =, new, StrokeSample, (, new, BasicStroke, (, 2.0f, ), ), ;]
[), ), ;, this, ., availableStrokeSamples, [, 1, ], =, new, StrokeSample, (, new, BasicStroke, (, 2.0f, ), ), ;]
[., availableStrokeSamples, [, 1, ], =, new, StrokeSample, (, new, BasicStroke, (, 2.0f, ), ), ;, this, ., availableStrokeSamples, []
[1, ], =, new, StrokeSample, (, new, BasicStroke, (, 2.0f, ), ), ;, this, ., availableStrokeSamples, [, 2, ], =]
[new, StrokeSample, (, new, BasicStroke, (, 2.0f, ), ), ;, this, ., availableStrokeSamples, [, 2, ], =, new, StrokeSample, (]
[new, BasicStroke, (, 2.0f, ), ), ;, this, ., availableStrokeSamples, [, 2, ], =, new, StrokeSample, (, new, BasicStroke, (]
[this, ., availableStrokeSamples, [, 2, ], =, new, StrokeSample, (, new, BasicStroke, (, 3.0f, ), ), ;, JTabbedPane, other, =]
[new, StrokeSample, (, new, BasicStroke, (, 3.0f, ), ), ;, JTabbedPane, other, =, getOtherTabs, (, ), ;, JPanel, range, =]
[new, BasicStroke, (, 3.0f, ), ), ;, JTabbedPane, other, =, getOtherTabs, (, ), ;, JPanel, range, =, new, JPanel, (]
[3.0f, ), ), ;, JTabbedPane, other, =, getOtherTabs, (, ), ;, JPanel, range, =, new, JPanel, (, new, LCBLayout, (]
[JTabbedPane, other, =, getOtherTabs, (, ), ;, JPanel, range, =, new, JPanel, (, new, LCBLayout, (, 3, ), ), ;]
[JTabbedPane, other, =, getOtherTabs, (, ), ;, JPanel, range, =, new, JPanel, (, new, LCBLayout, (, 3, ), ), ;]
[(, ), ;, JPanel, range, =, new, JPanel, (, new, LCBLayout, (, 3, ), ), ;, range, ., setBorder, (]
[(, ), ;, JPanel, range, =, new, JPanel, (, new, LCBLayout, (, 3, ), ), ;, range, ., setBorder, (]
[range, =, new, JPanel, (, new, LCBLayout, (, 3, ), ), ;, range, ., setBorder, (, BorderFactory, ., createEmptyBorder, (]
[new, JPanel, (, new, LCBLayout, (, 3, ), ), ;, range, ., setBorder, (, BorderFactory, ., createEmptyBorder, (, 4, ,]
[(, new, LCBLayout, (, 3, ), ), ;, range, ., setBorder, (, BorderFactory, ., createEmptyBorder, (, 4, ,, 4, ,]
[LCBLayout, (, 3, ), ), ;, range, ., setBorder, (, BorderFactory, ., createEmptyBorder, (, 4, ,, 4, ,, 4, ,]
[), ;, range, ., setBorder, (, BorderFactory, ., createEmptyBorder, (, 4, ,, 4, ,, 4, ,, 4, ), ), ;]
[), ;, range, ., setBorder, (, BorderFactory, ., createEmptyBorder, (, 4, ,, 4, ,, 4, ,, 4, ), ), ;]
[setBorder, (, BorderFactory, ., createEmptyBorder, (, 4, ,, 4, ,, 4, ,, 4, ), ), ;, range, ., add, (]
[4, ,, 4, ,, 4, ,, 4, ), ), ;, range, ., add, (, new, JPanel, (, ), ), ;]
[4, ,, 4, ,, 4, ,, 4, ), ), ;, range, ., add, (, new, JPanel, (, ), ), ;]
[4, ,, 4, ), ), ;, range, ., add, (, new, JPanel, (, ), ), ;, this, ., autoRangeCheckBox, =]
[), ), ;, range, ., add, (, new, JPanel, (, ), ), ;, this, ., autoRangeCheckBox, =, new, JCheckBox, (]
[), ), ;, range, ., add, (, new, JPanel, (, ), ), ;, this, ., autoRangeCheckBox, =, new, JCheckBox, (]
[., add, (, new, JPanel, (, ), ), ;, this, ., autoRangeCheckBox, =, new, JCheckBox, (, localizationResources, ., getString, (]
[new, JPanel, (, ), ), ;, this, ., autoRangeCheckBox, =, new, JCheckBox, (, localizationResources, ., getString, (, "Auto-adjust_range", ), ,]
[new, JPanel, (, ), ), ;, this, ., autoRangeCheckBox, =, new, JCheckBox, (, localizationResources, ., getString, (, "Auto-adjust_range", ), ,]
[;, this, ., autoRangeCheckBox, =, new, JCheckBox, (, localizationResources, ., getString, (, "Auto-adjust_range", ), ,, this, ., autoRange, ), ;]
[;, this, ., autoRangeCheckBox, =, new, JCheckBox, (, localizationResources, ., getString, (, "Auto-adjust_range", ), ,, this, ., autoRange, ), ;]
[;, this, ., autoRangeCheckBox, =, new, JCheckBox, (, localizationResources, ., getString, (, "Auto-adjust_range", ), ,, this, ., autoRange, ), ;]
[JCheckBox, (, localizationResources, ., getString, (, "Auto-adjust_range", ), ,, this, ., autoRange, ), ;, this, ., autoRangeCheckBox, ., setActionCommand, (]
[., getString, (, "Auto-adjust_range", ), ,, this, ., autoRange, ), ;, this, ., autoRangeCheckBox, ., setActionCommand, (, "AutoRangeOnOff", ), ;]
[., getString, (, "Auto-adjust_range", ), ,, this, ., autoRange, ), ;, this, ., autoRangeCheckBox, ., setActionCommand, (, "AutoRangeOnOff", ), ;]
[., getString, (, "Auto-adjust_range", ), ,, this, ., autoRange, ), ;, this, ., autoRangeCheckBox, ., setActionCommand, (, "AutoRangeOnOff", ), ;]
[this, ., autoRange, ), ;, this, ., autoRangeCheckBox, ., setActionCommand, (, "AutoRangeOnOff", ), ;, this, ., autoRangeCheckBox, ., addActionListener, (]
[), ;, this, ., autoRangeCheckBox, ., setActionCommand, (, "AutoRangeOnOff", ), ;, this, ., autoRangeCheckBox, ., addActionListener, (, this, ), ;]
[), ;, this, ., autoRangeCheckBox, ., setActionCommand, (, "AutoRangeOnOff", ), ;, this, ., autoRangeCheckBox, ., addActionListener, (, this, ), ;]
[autoRangeCheckBox, ., setActionCommand, (, "AutoRangeOnOff", ), ;, this, ., autoRangeCheckBox, ., addActionListener, (, this, ), ;, range, ., add, (]
[autoRangeCheckBox, ., setActionCommand, (, "AutoRangeOnOff", ), ;, this, ., autoRangeCheckBox, ., addActionListener, (, this, ), ;, range, ., add, (]
[), ;, this, ., autoRangeCheckBox, ., addActionListener, (, this, ), ;, range, ., add, (, this, ., autoRangeCheckBox, ), ;]
[), ;, this, ., autoRangeCheckBox, ., addActionListener, (, this, ), ;, range, ., add, (, this, ., autoRangeCheckBox, ), ;]
[autoRangeCheckBox, ., addActionListener, (, this, ), ;, range, ., add, (, this, ., autoRangeCheckBox, ), ;, range, ., add, (]
[;, range, ., add, (, this, ., autoRangeCheckBox, ), ;, range, ., add, (, new, JPanel, (, ), ), ;]
[;, range, ., add, (, this, ., autoRangeCheckBox, ), ;, range, ., add, (, new, JPanel, (, ), ), ;]
[(, this, ., autoRangeCheckBox, ), ;, range, ., add, (, new, JPanel, (, ), ), ;, range, ., add, (]
[autoRangeCheckBox, ), ;, range, ., add, (, new, JPanel, (, ), ), ;, range, ., add, (, new, JLabel, (]
[autoRangeCheckBox, ), ;, range, ., add, (, new, JPanel, (, ), ), ;, range, ., add, (, new, JLabel, (]
[., add, (, new, JPanel, (, ), ), ;, range, ., add, (, new, JLabel, (, localizationResources, ., getString, (]
[(, ), ), ;, range, ., add, (, new, JLabel, (, localizationResources, ., getString, (, "Minimum_range_value", ), ), ), ;]
[(, ), ), ;, range, ., add, (, new, JLabel, (, localizationResources, ., getString, (, "Minimum_range_value", ), ), ), ;]
[range, ., add, (, new, JLabel, (, localizationResources, ., getString, (, "Minimum_range_value", ), ), ), ;, this, ., minimumRangeValue, =]
[(, new, JLabel, (, localizationResources, ., getString, (, "Minimum_range_value", ), ), ), ;, this, ., minimumRangeValue, =, new, JTextField, (]
[(, new, JLabel, (, localizationResources, ., getString, (, "Minimum_range_value", ), ), ), ;, this, ., minimumRangeValue, =, new, JTextField, (]
[localizationResources, ., getString, (, "Minimum_range_value", ), ), ), ;, this, ., minimumRangeValue, =, new, JTextField, (, Double, ., toString, (]
[localizationResources, ., getString, (, "Minimum_range_value", ), ), ), ;, this, ., minimumRangeValue, =, new, JTextField, (, Double, ., toString, (]
[), ), ;, this, ., minimumRangeValue, =, new, JTextField, (, Double, ., toString, (, this, ., minimumValue, ), ), ;]
[), ), ;, this, ., minimumRangeValue, =, new, JTextField, (, Double, ., toString, (, this, ., minimumValue, ), ), ;]
[), ), ;, this, ., minimumRangeValue, =, new, JTextField, (, Double, ., toString, (, this, ., minimumValue, ), ), ;]
[=, new, JTextField, (, Double, ., toString, (, this, ., minimumValue, ), ), ;, this, ., minimumRangeValue, ., setEnabled, (]
[new, JTextField, (, Double, ., toString, (, this, ., minimumValue, ), ), ;, this, ., minimumRangeValue, ., setEnabled, (, !]
[new, JTextField, (, Double, ., toString, (, this, ., minimumValue, ), ), ;, this, ., minimumRangeValue, ., setEnabled, (, !]
[toString, (, this, ., minimumValue, ), ), ;, this, ., minimumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;]
[toString, (, this, ., minimumValue, ), ), ;, this, ., minimumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;]
[toString, (, this, ., minimumValue, ), ), ;, this, ., minimumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;]
[), ;, this, ., minimumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;, this, ., minimumRangeValue, ., setActionCommand, (]
[., minimumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;, this, ., minimumRangeValue, ., setActionCommand, (, "MinimumRange", ), ;]
[., minimumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;, this, ., minimumRangeValue, ., setActionCommand, (, "MinimumRange", ), ;]
[., minimumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;, this, ., minimumRangeValue, ., setActionCommand, (, "MinimumRange", ), ;]
[this, ., autoRange, ), ;, this, ., minimumRangeValue, ., setActionCommand, (, "MinimumRange", ), ;, this, ., minimumRangeValue, ., addActionListener, (]
[), ;, this, ., minimumRangeValue, ., setActionCommand, (, "MinimumRange", ), ;, this, ., minimumRangeValue, ., addActionListener, (, this, ), ;]
[), ;, this, ., minimumRangeValue, ., setActionCommand, (, "MinimumRange", ), ;, this, ., minimumRangeValue, ., addActionListener, (, this, ), ;]
[), ;, this, ., minimumRangeValue, ., setActionCommand, (, "MinimumRange", ), ;, this, ., minimumRangeValue, ., addActionListener, (, this, ), ;]
[setActionCommand, (, "MinimumRange", ), ;, this, ., minimumRangeValue, ., addActionListener, (, this, ), ;, this, ., minimumRangeValue, ., addFocusListener, (]
[), ;, this, ., minimumRangeValue, ., addActionListener, (, this, ), ;, this, ., minimumRangeValue, ., addFocusListener, (, this, ), ;]
[), ;, this, ., minimumRangeValue, ., addActionListener, (, this, ), ;, this, ., minimumRangeValue, ., addFocusListener, (, this, ), ;]
[minimumRangeValue, ., addActionListener, (, this, ), ;, this, ., minimumRangeValue, ., addFocusListener, (, this, ), ;, range, ., add, (]
[minimumRangeValue, ., addActionListener, (, this, ), ;, this, ., minimumRangeValue, ., addFocusListener, (, this, ), ;, range, ., add, (]
[), ;, this, ., minimumRangeValue, ., addFocusListener, (, this, ), ;, range, ., add, (, this, ., minimumRangeValue, ), ;]
[), ;, this, ., minimumRangeValue, ., addFocusListener, (, this, ), ;, range, ., add, (, this, ., minimumRangeValue, ), ;]
[minimumRangeValue, ., addFocusListener, (, this, ), ;, range, ., add, (, this, ., minimumRangeValue, ), ;, range, ., add, (]
[;, range, ., add, (, this, ., minimumRangeValue, ), ;, range, ., add, (, new, JPanel, (, ), ), ;]
[;, range, ., add, (, this, ., minimumRangeValue, ), ;, range, ., add, (, new, JPanel, (, ), ), ;]
[(, this, ., minimumRangeValue, ), ;, range, ., add, (, new, JPanel, (, ), ), ;, range, ., add, (]
[minimumRangeValue, ), ;, range, ., add, (, new, JPanel, (, ), ), ;, range, ., add, (, new, JLabel, (]
[minimumRangeValue, ), ;, range, ., add, (, new, JPanel, (, ), ), ;, range, ., add, (, new, JLabel, (]
[., add, (, new, JPanel, (, ), ), ;, range, ., add, (, new, JLabel, (, localizationResources, ., getString, (]
[(, ), ), ;, range, ., add, (, new, JLabel, (, localizationResources, ., getString, (, "Maximum_range_value", ), ), ), ;]
[(, ), ), ;, range, ., add, (, new, JLabel, (, localizationResources, ., getString, (, "Maximum_range_value", ), ), ), ;]
[range, ., add, (, new, JLabel, (, localizationResources, ., getString, (, "Maximum_range_value", ), ), ), ;, this, ., maximumRangeValue, =]
[(, new, JLabel, (, localizationResources, ., getString, (, "Maximum_range_value", ), ), ), ;, this, ., maximumRangeValue, =, new, JTextField, (]
[(, new, JLabel, (, localizationResources, ., getString, (, "Maximum_range_value", ), ), ), ;, this, ., maximumRangeValue, =, new, JTextField, (]
[localizationResources, ., getString, (, "Maximum_range_value", ), ), ), ;, this, ., maximumRangeValue, =, new, JTextField, (, Double, ., toString, (]
[localizationResources, ., getString, (, "Maximum_range_value", ), ), ), ;, this, ., maximumRangeValue, =, new, JTextField, (, Double, ., toString, (]
[), ), ;, this, ., maximumRangeValue, =, new, JTextField, (, Double, ., toString, (, this, ., maximumValue, ), ), ;]
[), ), ;, this, ., maximumRangeValue, =, new, JTextField, (, Double, ., toString, (, this, ., maximumValue, ), ), ;]
[), ), ;, this, ., maximumRangeValue, =, new, JTextField, (, Double, ., toString, (, this, ., maximumValue, ), ), ;]
[=, new, JTextField, (, Double, ., toString, (, this, ., maximumValue, ), ), ;, this, ., maximumRangeValue, ., setEnabled, (]
[new, JTextField, (, Double, ., toString, (, this, ., maximumValue, ), ), ;, this, ., maximumRangeValue, ., setEnabled, (, !]
[new, JTextField, (, Double, ., toString, (, this, ., maximumValue, ), ), ;, this, ., maximumRangeValue, ., setEnabled, (, !]
[toString, (, this, ., maximumValue, ), ), ;, this, ., maximumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;]
[toString, (, this, ., maximumValue, ), ), ;, this, ., maximumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;]
[toString, (, this, ., maximumValue, ), ), ;, this, ., maximumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;]
[), ;, this, ., maximumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;, this, ., maximumRangeValue, ., setActionCommand, (]
[., maximumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;, this, ., maximumRangeValue, ., setActionCommand, (, "MaximumRange", ), ;]
[., maximumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;, this, ., maximumRangeValue, ., setActionCommand, (, "MaximumRange", ), ;]
[., maximumRangeValue, ., setEnabled, (, !, this, ., autoRange, ), ;, this, ., maximumRangeValue, ., setActionCommand, (, "MaximumRange", ), ;]
[this, ., autoRange, ), ;, this, ., maximumRangeValue, ., setActionCommand, (, "MaximumRange", ), ;, this, ., maximumRangeValue, ., addActionListener, (]
[), ;, this, ., maximumRangeValue, ., setActionCommand, (, "MaximumRange", ), ;, this, ., maximumRangeValue, ., addActionListener, (, this, ), ;]
[), ;, this, ., maximumRangeValue, ., setActionCommand, (, "MaximumRange", ), ;, this, ., maximumRangeValue, ., addActionListener, (, this, ), ;]
[), ;, this, ., maximumRangeValue, ., setActionCommand, (, "MaximumRange", ), ;, this, ., maximumRangeValue, ., addActionListener, (, this, ), ;]
[setActionCommand, (, "MaximumRange", ), ;, this, ., maximumRangeValue, ., addActionListener, (, this, ), ;, this, ., maximumRangeValue, ., addFocusListener, (]
[), ;, this, ., maximumRangeValue, ., addActionListener, (, this, ), ;, this, ., maximumRangeValue, ., addFocusListener, (, this, ), ;]
[), ;, this, ., maximumRangeValue, ., addActionListener, (, this, ), ;, this, ., maximumRangeValue, ., addFocusListener, (, this, ), ;]
[maximumRangeValue, ., addActionListener, (, this, ), ;, this, ., maximumRangeValue, ., addFocusListener, (, this, ), ;, range, ., add, (]
[maximumRangeValue, ., addActionListener, (, this, ), ;, this, ., maximumRangeValue, ., addFocusListener, (, this, ), ;, range, ., add, (]
[), ;, this, ., maximumRangeValue, ., addFocusListener, (, this, ), ;, range, ., add, (, this, ., maximumRangeValue, ), ;]
[), ;, this, ., maximumRangeValue, ., addFocusListener, (, this, ), ;, range, ., add, (, this, ., maximumRangeValue, ), ;]
[maximumRangeValue, ., addFocusListener, (, this, ), ;, range, ., add, (, this, ., maximumRangeValue, ), ;, range, ., add, (]
[;, range, ., add, (, this, ., maximumRangeValue, ), ;, range, ., add, (, new, JPanel, (, ), ), ;]
[;, range, ., add, (, this, ., maximumRangeValue, ), ;, range, ., add, (, new, JPanel, (, ), ), ;]
[(, this, ., maximumRangeValue, ), ;, range, ., add, (, new, JPanel, (, ), ), ;, other, ., add, (]
[(, this, ., maximumRangeValue, ), ;, range, ., add, (, new, JPanel, (, ), ), ;, other, ., add, (]
[), ;, range, ., add, (, new, JPanel, (, ), ), ;, other, ., add, (, localizationResources, ., getString, (]
[., add, (, new, JPanel, (, ), ), ;, other, ., add, (, localizationResources, ., getString, (, "Range", ), ,]
[add, (, localizationResources, ., getString, (, "Range", ), ,, range, ), ;, }, public, boolean, isAutoRange, (, ), {, return]
[add, (, localizationResources, ., getString, (, "Range", ), ,, range, ), ;, }, public, boolean, isAutoRange, (, ), {, return]
[}, public, boolean, isAutoRange, (, ), {, return, this, ., autoRange, ;, }, public, double, getMinimumValue, (, ), {, return]
[}, public, boolean, isAutoRange, (, ), {, return, this, ., autoRange, ;, }, public, double, getMinimumValue, (, ), {, return]
[}, public, double, getMinimumValue, (, ), {, return, this, ., minimumValue, ;, }, public, double, getMaximumValue, (, ), {, return]
[}, public, double, getMinimumValue, (, ), {, return, this, ., minimumValue, ;, }, public, double, getMaximumValue, (, ), {, return]
[(, ), {, return, this, ., maximumValue, ;, }, public, void, actionPerformed, (, ActionEvent, event, ), {, String, command, =]
[(, ), {, return, this, ., maximumValue, ;, }, public, void, actionPerformed, (, ActionEvent, event, ), {, String, command, =]
[}, public, void, actionPerformed, (, ActionEvent, event, ), {, String, command, =, event, ., getActionCommand, (, ), ;, if, (]
[}, public, void, actionPerformed, (, ActionEvent, event, ), {, String, command, =, event, ., getActionCommand, (, ), ;, if, (]
[(, ActionEvent, event, ), {, String, command, =, event, ., getActionCommand, (, ), ;, if, (, command, ., equals, (]
[{, String, command, =, event, ., getActionCommand, (, ), ;, if, (, command, ., equals, (, "GridStroke", ), ), {]
[), ;, if, (, command, ., equals, (, "GridStroke", ), ), {, attemptGridStrokeSelection, (, ), ;, }, else, if, (]
[), ;, if, (, command, ., equals, (, "GridStroke", ), ), {, attemptGridStrokeSelection, (, ), ;, }, else, if, (]
[command, ., equals, (, "GridStroke", ), ), {, attemptGridStrokeSelection, (, ), ;, }, else, if, (, command, ., equals, (]
["GridStroke", ), ), {, attemptGridStrokeSelection, (, ), ;, }, else, if, (, command, ., equals, (, "GridPaint", ), ), {]
[}, else, if, (, command, ., equals, (, "GridPaint", ), ), {, attemptGridPaintSelection, (, ), ;, }, else, if, (]
[}, else, if, (, command, ., equals, (, "GridPaint", ), ), {, attemptGridPaintSelection, (, ), ;, }, else, if, (]
[command, ., equals, (, "GridPaint", ), ), {, attemptGridPaintSelection, (, ), ;, }, else, if, (, command, ., equals, (]
["GridPaint", ), ), {, attemptGridPaintSelection, (, ), ;, }, else, if, (, command, ., equals, (, "AutoRangeOnOff", ), ), {]
[}, else, if, (, command, ., equals, (, "AutoRangeOnOff", ), ), {, toggleAutoRange, (, ), ;, }, else, if, (]
[}, else, if, (, command, ., equals, (, "AutoRangeOnOff", ), ), {, toggleAutoRange, (, ), ;, }, else, if, (]
[command, ., equals, (, "AutoRangeOnOff", ), ), {, toggleAutoRange, (, ), ;, }, else, if, (, command, ., equals, (]
["AutoRangeOnOff", ), ), {, toggleAutoRange, (, ), ;, }, else, if, (, command, ., equals, (, "MinimumRange", ), ), {]
[}, else, if, (, command, ., equals, (, "MinimumRange", ), ), {, validateMinimum, (, ), ;, }, else, if, (]
[}, else, if, (, command, ., equals, (, "MinimumRange", ), ), {, validateMinimum, (, ), ;, }, else, if, (]
[command, ., equals, (, "MinimumRange", ), ), {, validateMinimum, (, ), ;, }, else, if, (, command, ., equals, (]
["MinimumRange", ), ), {, validateMinimum, (, ), ;, }, else, if, (, command, ., equals, (, "MaximumRange", ), ), {]
[;, }, else, if, (, command, ., equals, (, "MaximumRange", ), ), {, validateMaximum, (, ), ;, }, else, {]
[;, }, else, if, (, command, ., equals, (, "MaximumRange", ), ), {, validateMaximum, (, ), ;, }, else, {]
[(, command, ., equals, (, "MaximumRange", ), ), {, validateMaximum, (, ), ;, }, else, {, super, ., actionPerformed, (]
[else, {, super, ., actionPerformed, (, event, ), ;, }, }, private, void, attemptGridStrokeSelection, (, ), {, StrokeChooserPanel, panel, =]
[., actionPerformed, (, event, ), ;, }, }, private, void, attemptGridStrokeSelection, (, ), {, StrokeChooserPanel, panel, =, new, StrokeChooserPanel, (]
[., actionPerformed, (, event, ), ;, }, }, private, void, attemptGridStrokeSelection, (, ), {, StrokeChooserPanel, panel, =, new, StrokeChooserPanel, (]
[), ;, }, }, private, void, attemptGridStrokeSelection, (, ), {, StrokeChooserPanel, panel, =, new, StrokeChooserPanel, (, this, ., gridStrokeSample, ,]
[), ;, }, }, private, void, attemptGridStrokeSelection, (, ), {, StrokeChooserPanel, panel, =, new, StrokeChooserPanel, (, this, ., gridStrokeSample, ,]
[), {, StrokeChooserPanel, panel, =, new, StrokeChooserPanel, (, this, ., gridStrokeSample, ,, this, ., availableStrokeSamples, ), ;, int, result, =]
[), {, StrokeChooserPanel, panel, =, new, StrokeChooserPanel, (, this, ., gridStrokeSample, ,, this, ., availableStrokeSamples, ), ;, int, result, =]
[=, new, StrokeChooserPanel, (, this, ., gridStrokeSample, ,, this, ., availableStrokeSamples, ), ;, int, result, =, JOptionPane, ., showConfirmDialog, (]
[StrokeChooserPanel, (, this, ., gridStrokeSample, ,, this, ., availableStrokeSamples, ), ;, int, result, =, JOptionPane, ., showConfirmDialog, (, this, ,]
[this, ., gridStrokeSample, ,, this, ., availableStrokeSamples, ), ;, int, result, =, JOptionPane, ., showConfirmDialog, (, this, ,, panel, ,]
[this, ., gridStrokeSample, ,, this, ., availableStrokeSamples, ), ;, int, result, =, JOptionPane, ., showConfirmDialog, (, this, ,, panel, ,]
[this, ., availableStrokeSamples, ), ;, int, result, =, JOptionPane, ., showConfirmDialog, (, this, ,, panel, ,, localizationResources, ., getString, (]
[), ;, int, result, =, JOptionPane, ., showConfirmDialog, (, this, ,, panel, ,, localizationResources, ., getString, (, "Stroke_Selection", ), ,]
[), ;, int, result, =, JOptionPane, ., showConfirmDialog, (, this, ,, panel, ,, localizationResources, ., getString, (, "Stroke_Selection", ), ,]
[=, JOptionPane, ., showConfirmDialog, (, this, ,, panel, ,, localizationResources, ., getString, (, "Stroke_Selection", ), ,, JOptionPane, ., OK_CANCEL_OPTION, ,]
[=, JOptionPane, ., showConfirmDialog, (, this, ,, panel, ,, localizationResources, ., getString, (, "Stroke_Selection", ), ,, JOptionPane, ., OK_CANCEL_OPTION, ,]
[panel, ,, localizationResources, ., getString, (, "Stroke_Selection", ), ,, JOptionPane, ., OK_CANCEL_OPTION, ,, JOptionPane, ., PLAIN_MESSAGE, ), ;, if, (]
[panel, ,, localizationResources, ., getString, (, "Stroke_Selection", ), ,, JOptionPane, ., OK_CANCEL_OPTION, ,, JOptionPane, ., PLAIN_MESSAGE, ), ;, if, (]
[localizationResources, ., getString, (, "Stroke_Selection", ), ,, JOptionPane, ., OK_CANCEL_OPTION, ,, JOptionPane, ., PLAIN_MESSAGE, ), ;, if, (, result, ==]
[localizationResources, ., getString, (, "Stroke_Selection", ), ,, JOptionPane, ., OK_CANCEL_OPTION, ,, JOptionPane, ., PLAIN_MESSAGE, ), ;, if, (, result, ==]
[), ,, JOptionPane, ., OK_CANCEL_OPTION, ,, JOptionPane, ., PLAIN_MESSAGE, ), ;, if, (, result, ==, JOptionPane, ., OK_OPTION, ), {]
[), ,, JOptionPane, ., OK_CANCEL_OPTION, ,, JOptionPane, ., PLAIN_MESSAGE, ), ;, if, (, result, ==, JOptionPane, ., OK_OPTION, ), {]
[), ,, JOptionPane, ., OK_CANCEL_OPTION, ,, JOptionPane, ., PLAIN_MESSAGE, ), ;, if, (, result, ==, JOptionPane, ., OK_OPTION, ), {]
[JOptionPane, ., PLAIN_MESSAGE, ), ;, if, (, result, ==, JOptionPane, ., OK_OPTION, ), {, this, ., gridStrokeSample, ., setStroke, (]
[JOptionPane, ., PLAIN_MESSAGE, ), ;, if, (, result, ==, JOptionPane, ., OK_OPTION, ), {, this, ., gridStrokeSample, ., setStroke, (]
[setStroke, (, panel, ., getSelectedStroke, (, ), ), ;, }, }, private, void, attemptGridPaintSelection, (, ), {, Color, c, ;]
[panel, ., getSelectedStroke, (, ), ), ;, }, }, private, void, attemptGridPaintSelection, (, ), {, Color, c, ;, c, =]
[panel, ., getSelectedStroke, (, ), ), ;, }, }, private, void, attemptGridPaintSelection, (, ), {, Color, c, ;, c, =]
[), ), ;, }, }, private, void, attemptGridPaintSelection, (, ), {, Color, c, ;, c, =, JColorChooser, ., showDialog, (]
[;, }, }, private, void, attemptGridPaintSelection, (, ), {, Color, c, ;, c, =, JColorChooser, ., showDialog, (, this, ,]
[;, }, }, private, void, attemptGridPaintSelection, (, ), {, Color, c, ;, c, =, JColorChooser, ., showDialog, (, this, ,]
[void, attemptGridPaintSelection, (, ), {, Color, c, ;, c, =, JColorChooser, ., showDialog, (, this, ,, localizationResources, ., getString, (]
[), {, Color, c, ;, c, =, JColorChooser, ., showDialog, (, this, ,, localizationResources, ., getString, (, "Grid_Color", ), ,]
[), {, Color, c, ;, c, =, JColorChooser, ., showDialog, (, this, ,, localizationResources, ., getString, (, "Grid_Color", ), ,]
[JColorChooser, ., showDialog, (, this, ,, localizationResources, ., getString, (, "Grid_Color", ), ,, Color, ., blue, ), ;, if, (]
[JColorChooser, ., showDialog, (, this, ,, localizationResources, ., getString, (, "Grid_Color", ), ,, Color, ., blue, ), ;, if, (]
[showDialog, (, this, ,, localizationResources, ., getString, (, "Grid_Color", ), ,, Color, ., blue, ), ;, if, (, c, !=]
[,, localizationResources, ., getString, (, "Grid_Color", ), ,, Color, ., blue, ), ;, if, (, c, !=, null, ), {]
[,, localizationResources, ., getString, (, "Grid_Color", ), ,, Color, ., blue, ), ;, if, (, c, !=, null, ), {]
[,, localizationResources, ., getString, (, "Grid_Color", ), ,, Color, ., blue, ), ;, if, (, c, !=, null, ), {]
[), ,, Color, ., blue, ), ;, if, (, c, !=, null, ), {, this, ., gridPaintSample, ., setPaint, (]
[}, public, void, focusGained, (, FocusEvent, event, ), {, }, public, void, focusLost, (, FocusEvent, event, ), {, if, (]
[}, public, void, focusGained, (, FocusEvent, event, ), {, }, public, void, focusLost, (, FocusEvent, event, ), {, if, (]
[}, public, void, focusGained, (, FocusEvent, event, ), {, }, public, void, focusLost, (, FocusEvent, event, ), {, if, (]
[event, ), {, }, public, void, focusLost, (, FocusEvent, event, ), {, if, (, event, ., getSource, (, ), ==]
[event, ), {, }, public, void, focusLost, (, FocusEvent, event, ), {, if, (, event, ., getSource, (, ), ==]
[void, focusLost, (, FocusEvent, event, ), {, if, (, event, ., getSource, (, ), ==, this, ., minimumRangeValue, ), {]
[(, event, ., getSource, (, ), ==, this, ., minimumRangeValue, ), {, validateMinimum, (, ), ;, }, else, if, (]
[(, event, ., getSource, (, ), ==, this, ., minimumRangeValue, ), {, validateMinimum, (, ), ;, }, else, if, (]
[(, event, ., getSource, (, ), ==, this, ., minimumRangeValue, ), {, validateMinimum, (, ), ;, }, else, if, (]
[==, this, ., minimumRangeValue, ), {, validateMinimum, (, ), ;, }, else, if, (, event, ., getSource, (, ), ==]
[==, this, ., minimumRangeValue, ), {, validateMinimum, (, ), ;, }, else, if, (, event, ., getSource, (, ), ==]
[{, validateMinimum, (, ), ;, }, else, if, (, event, ., getSource, (, ), ==, this, ., maximumRangeValue, ), {]
[(, ), ==, this, ., maximumRangeValue, ), {, validateMaximum, (, ), ;, }, }, public, void, toggleAutoRange, (, ), {]
[(, ), ==, this, ., maximumRangeValue, ), {, validateMaximum, (, ), ;, }, }, public, void, toggleAutoRange, (, ), {]
[., maximumRangeValue, ), {, validateMaximum, (, ), ;, }, }, public, void, toggleAutoRange, (, ), {, this, ., autoRange, =]
[., maximumRangeValue, ), {, validateMaximum, (, ), ;, }, }, public, void, toggleAutoRange, (, ), {, this, ., autoRange, =]
[., maximumRangeValue, ), {, validateMaximum, (, ), ;, }, }, public, void, toggleAutoRange, (, ), {, this, ., autoRange, =]
[public, void, toggleAutoRange, (, ), {, this, ., autoRange, =, this, ., autoRangeCheckBox, ., isSelected, (, ), ;, if, (]
[public, void, toggleAutoRange, (, ), {, this, ., autoRange, =, this, ., autoRangeCheckBox, ., isSelected, (, ), ;, if, (]
[{, this, ., autoRange, =, this, ., autoRangeCheckBox, ., isSelected, (, ), ;, if, (, this, ., autoRange, ), {]
[{, this, ., autoRange, =, this, ., autoRangeCheckBox, ., isSelected, (, ), ;, if, (, this, ., autoRange, ), {]
[{, this, ., autoRange, =, this, ., autoRangeCheckBox, ., isSelected, (, ), ;, if, (, this, ., autoRange, ), {]
[., autoRangeCheckBox, ., isSelected, (, ), ;, if, (, this, ., autoRange, ), {, this, ., minimumRangeValue, ., setText, (]
[., autoRangeCheckBox, ., isSelected, (, ), ;, if, (, this, ., autoRange, ), {, this, ., minimumRangeValue, ., setText, (]
[(, ), ;, if, (, this, ., autoRange, ), {, this, ., minimumRangeValue, ., setText, (, Double, ., toString, (]
[(, ), ;, if, (, this, ., autoRange, ), {, this, ., minimumRangeValue, ., setText, (, Double, ., toString, (]
[., autoRange, ), {, this, ., minimumRangeValue, ., setText, (, Double, ., toString, (, this, ., minimumValue, ), ), ;]
[., autoRange, ), {, this, ., minimumRangeValue, ., setText, (, Double, ., toString, (, this, ., minimumValue, ), ), ;]
[., autoRange, ), {, this, ., minimumRangeValue, ., setText, (, Double, ., toString, (, this, ., minimumValue, ), ), ;]
[minimumRangeValue, ., setText, (, Double, ., toString, (, this, ., minimumValue, ), ), ;, this, ., minimumRangeValue, ., setEnabled, (]
[(, Double, ., toString, (, this, ., minimumValue, ), ), ;, this, ., minimumRangeValue, ., setEnabled, (, false, ), ;]
[(, Double, ., toString, (, this, ., minimumValue, ), ), ;, this, ., minimumRangeValue, ., setEnabled, (, false, ), ;]
[(, Double, ., toString, (, this, ., minimumValue, ), ), ;, this, ., minimumRangeValue, ., setEnabled, (, false, ), ;]
[., minimumValue, ), ), ;, this, ., minimumRangeValue, ., setEnabled, (, false, ), ;, this, ., maximumRangeValue, ., setText, (]
[., minimumValue, ), ), ;, this, ., minimumRangeValue, ., setEnabled, (, false, ), ;, this, ., maximumRangeValue, ., setText, (]
[;, this, ., minimumRangeValue, ., setEnabled, (, false, ), ;, this, ., maximumRangeValue, ., setText, (, Double, ., toString, (]
[;, this, ., minimumRangeValue, ., setEnabled, (, false, ), ;, this, ., maximumRangeValue, ., setText, (, Double, ., toString, (]
[(, false, ), ;, this, ., maximumRangeValue, ., setText, (, Double, ., toString, (, this, ., maximumValue, ), ), ;]
[(, false, ), ;, this, ., maximumRangeValue, ., setText, (, Double, ., toString, (, this, ., maximumValue, ), ), ;]
[(, false, ), ;, this, ., maximumRangeValue, ., setText, (, Double, ., toString, (, this, ., maximumValue, ), ), ;]
[maximumRangeValue, ., setText, (, Double, ., toString, (, this, ., maximumValue, ), ), ;, this, ., maximumRangeValue, ., setEnabled, (]
[toString, (, this, ., maximumValue, ), ), ;, this, ., maximumRangeValue, ., setEnabled, (, false, ), ;, }, else, {]
[toString, (, this, ., maximumValue, ), ), ;, this, ., maximumRangeValue, ., setEnabled, (, false, ), ;, }, else, {]
[toString, (, this, ., maximumValue, ), ), ;, this, ., maximumRangeValue, ., setEnabled, (, false, ), ;, }, else, {]
[), ;, this, ., maximumRangeValue, ., setEnabled, (, false, ), ;, }, else, {, this, ., minimumRangeValue, ., setEnabled, (]
[., maximumRangeValue, ., setEnabled, (, false, ), ;, }, else, {, this, ., minimumRangeValue, ., setEnabled, (, true, ), ;]
[., maximumRangeValue, ., setEnabled, (, false, ), ;, }, else, {, this, ., minimumRangeValue, ., setEnabled, (, true, ), ;]
[., maximumRangeValue, ., setEnabled, (, false, ), ;, }, else, {, this, ., minimumRangeValue, ., setEnabled, (, true, ), ;]
[), ;, }, else, {, this, ., minimumRangeValue, ., setEnabled, (, true, ), ;, this, ., maximumRangeValue, ., setEnabled, (]
[maximumRangeValue, ., setEnabled, (, true, ), ;, }, }, public, void, validateMinimum, (, ), {, double, newMin, ;, try, {]
[setEnabled, (, true, ), ;, }, }, public, void, validateMinimum, (, ), {, double, newMin, ;, try, {, newMin, =]
[setEnabled, (, true, ), ;, }, }, public, void, validateMinimum, (, ), {, double, newMin, ;, try, {, newMin, =]
[;, }, }, public, void, validateMinimum, (, ), {, double, newMin, ;, try, {, newMin, =, Double, ., parseDouble, (]
[;, }, }, public, void, validateMinimum, (, ), {, double, newMin, ;, try, {, newMin, =, Double, ., parseDouble, (]
[;, }, }, public, void, validateMinimum, (, ), {, double, newMin, ;, try, {, newMin, =, Double, ., parseDouble, (]
[;, try, {, newMin, =, Double, ., parseDouble, (, this, ., minimumRangeValue, ., getText, (, ), ), ;, if, (]
[;, try, {, newMin, =, Double, ., parseDouble, (, this, ., minimumRangeValue, ., getText, (, ), ), ;, if, (]
[{, newMin, =, Double, ., parseDouble, (, this, ., minimumRangeValue, ., getText, (, ), ), ;, if, (, newMin, >=]
[{, newMin, =, Double, ., parseDouble, (, this, ., minimumRangeValue, ., getText, (, ), ), ;, if, (, newMin, >=]
[parseDouble, (, this, ., minimumRangeValue, ., getText, (, ), ), ;, if, (, newMin, >=, this, ., maximumValue, ), {]
[this, ., minimumRangeValue, ., getText, (, ), ), ;, if, (, newMin, >=, this, ., maximumValue, ), {, newMin, =]
[this, ., minimumRangeValue, ., getText, (, ), ), ;, if, (, newMin, >=, this, ., maximumValue, ), {, newMin, =]
[>=, this, ., maximumValue, ), {, newMin, =, this, ., minimumValue, ;, }, }, catch, (, NumberFormatException, e, ), {]
[., maximumValue, ), {, newMin, =, this, ., minimumValue, ;, }, }, catch, (, NumberFormatException, e, ), {, newMin, =]
[., maximumValue, ), {, newMin, =, this, ., minimumValue, ;, }, }, catch, (, NumberFormatException, e, ), {, newMin, =]
[=, this, ., minimumValue, ;, }, }, catch, (, NumberFormatException, e, ), {, newMin, =, this, ., minimumValue, ;, }]
[=, this, ., minimumValue, ;, }, }, catch, (, NumberFormatException, e, ), {, newMin, =, this, ., minimumValue, ;, }]
[;, }, }, catch, (, NumberFormatException, e, ), {, newMin, =, this, ., minimumValue, ;, }, this, ., minimumValue, =]
[}, catch, (, NumberFormatException, e, ), {, newMin, =, this, ., minimumValue, ;, }, this, ., minimumValue, =, newMin, ;]
[}, catch, (, NumberFormatException, e, ), {, newMin, =, this, ., minimumValue, ;, }, this, ., minimumValue, =, newMin, ;]
[}, catch, (, NumberFormatException, e, ), {, newMin, =, this, ., minimumValue, ;, }, this, ., minimumValue, =, newMin, ;]
[{, newMin, =, this, ., minimumValue, ;, }, this, ., minimumValue, =, newMin, ;, this, ., minimumRangeValue, ., setText, (]
[{, newMin, =, this, ., minimumValue, ;, }, this, ., minimumValue, =, newMin, ;, this, ., minimumRangeValue, ., setText, (]
[., minimumValue, ;, }, this, ., minimumValue, =, newMin, ;, this, ., minimumRangeValue, ., setText, (, Double, ., toString, (]
[., minimumValue, ;, }, this, ., minimumValue, =, newMin, ;, this, ., minimumRangeValue, ., setText, (, Double, ., toString, (]
[toString, (, this, ., minimumValue, ), ), ;, }, public, void, validateMaximum, (, ), {, double, newMax, ;, try, {]
[this, ., minimumValue, ), ), ;, }, public, void, validateMaximum, (, ), {, double, newMax, ;, try, {, newMax, =]
[this, ., minimumValue, ), ), ;, }, public, void, validateMaximum, (, ), {, double, newMax, ;, try, {, newMax, =]
[), ;, }, public, void, validateMaximum, (, ), {, double, newMax, ;, try, {, newMax, =, Double, ., parseDouble, (]
[), ;, }, public, void, validateMaximum, (, ), {, double, newMax, ;, try, {, newMax, =, Double, ., parseDouble, (]
[), ;, }, public, void, validateMaximum, (, ), {, double, newMax, ;, try, {, newMax, =, Double, ., parseDouble, (]
[;, try, {, newMax, =, Double, ., parseDouble, (, this, ., maximumRangeValue, ., getText, (, ), ), ;, if, (]
[;, try, {, newMax, =, Double, ., parseDouble, (, this, ., maximumRangeValue, ., getText, (, ), ), ;, if, (]
[{, newMax, =, Double, ., parseDouble, (, this, ., maximumRangeValue, ., getText, (, ), ), ;, if, (, newMax, <=]
[{, newMax, =, Double, ., parseDouble, (, this, ., maximumRangeValue, ., getText, (, ), ), ;, if, (, newMax, <=]
[parseDouble, (, this, ., maximumRangeValue, ., getText, (, ), ), ;, if, (, newMax, <=, this, ., minimumValue, ), {]
[this, ., maximumRangeValue, ., getText, (, ), ), ;, if, (, newMax, <=, this, ., minimumValue, ), {, newMax, =]
[this, ., maximumRangeValue, ., getText, (, ), ), ;, if, (, newMax, <=, this, ., minimumValue, ), {, newMax, =]
[<=, this, ., minimumValue, ), {, newMax, =, this, ., maximumValue, ;, }, }, catch, (, NumberFormatException, e, ), {]
[., minimumValue, ), {, newMax, =, this, ., maximumValue, ;, }, }, catch, (, NumberFormatException, e, ), {, newMax, =]
[., minimumValue, ), {, newMax, =, this, ., maximumValue, ;, }, }, catch, (, NumberFormatException, e, ), {, newMax, =]
[=, this, ., maximumValue, ;, }, }, catch, (, NumberFormatException, e, ), {, newMax, =, this, ., maximumValue, ;, }]
[=, this, ., maximumValue, ;, }, }, catch, (, NumberFormatException, e, ), {, newMax, =, this, ., maximumValue, ;, }]
[;, }, }, catch, (, NumberFormatException, e, ), {, newMax, =, this, ., maximumValue, ;, }, this, ., maximumValue, =]
[}, catch, (, NumberFormatException, e, ), {, newMax, =, this, ., maximumValue, ;, }, this, ., maximumValue, =, newMax, ;]
[}, catch, (, NumberFormatException, e, ), {, newMax, =, this, ., maximumValue, ;, }, this, ., maximumValue, =, newMax, ;]
[}, catch, (, NumberFormatException, e, ), {, newMax, =, this, ., maximumValue, ;, }, this, ., maximumValue, =, newMax, ;]
[{, newMax, =, this, ., maximumValue, ;, }, this, ., maximumValue, =, newMax, ;, this, ., maximumRangeValue, ., setText, (]
[{, newMax, =, this, ., maximumValue, ;, }, this, ., maximumValue, =, newMax, ;, this, ., maximumRangeValue, ., setText, (]
[., maximumValue, ;, }, this, ., maximumValue, =, newMax, ;, this, ., maximumRangeValue, ., setText, (, Double, ., toString, (]
[., maximumValue, ;, }, this, ., maximumValue, =, newMax, ;, this, ., maximumRangeValue, ., setText, (, Double, ., toString, (]
[(, Double, ., toString, (, this, ., maximumValue, ), ), ;, }, public, void, setAxisProperties, (, Axis, axis, ), {]
[(, Double, ., toString, (, this, ., maximumValue, ), ), ;, }, public, void, setAxisProperties, (, Axis, axis, ), {]
[(, this, ., maximumValue, ), ), ;, }, public, void, setAxisProperties, (, Axis, axis, ), {, super, ., setAxisProperties, (]
[;, }, public, void, setAxisProperties, (, Axis, axis, ), {, super, ., setAxisProperties, (, axis, ), ;, NumberAxis, numberAxis, =]
[void, setAxisProperties, (, Axis, axis, ), {, super, ., setAxisProperties, (, axis, ), ;, NumberAxis, numberAxis, =, (, NumberAxis, )]
[(, Axis, axis, ), {, super, ., setAxisProperties, (, axis, ), ;, NumberAxis, numberAxis, =, (, NumberAxis, ), axis, ;]
[(, Axis, axis, ), {, super, ., setAxisProperties, (, axis, ), ;, NumberAxis, numberAxis, =, (, NumberAxis, ), axis, ;]
[{, super, ., setAxisProperties, (, axis, ), ;, NumberAxis, numberAxis, =, (, NumberAxis, ), axis, ;, numberAxis, ., setAutoRange, (]
[{, super, ., setAxisProperties, (, axis, ), ;, NumberAxis, numberAxis, =, (, NumberAxis, ), axis, ;, numberAxis, ., setAutoRange, (]
[;, NumberAxis, numberAxis, =, (, NumberAxis, ), axis, ;, numberAxis, ., setAutoRange, (, this, ., autoRange, ), ;, if, (]
[NumberAxis, numberAxis, =, (, NumberAxis, ), axis, ;, numberAxis, ., setAutoRange, (, this, ., autoRange, ), ;, if, (, !]
[NumberAxis, numberAxis, =, (, NumberAxis, ), axis, ;, numberAxis, ., setAutoRange, (, this, ., autoRange, ), ;, if, (, !]
[), axis, ;, numberAxis, ., setAutoRange, (, this, ., autoRange, ), ;, if, (, !, this, ., autoRange, ), {]
[), axis, ;, numberAxis, ., setAutoRange, (, this, ., autoRange, ), ;, if, (, !, this, ., autoRange, ), {]
[., setAutoRange, (, this, ., autoRange, ), ;, if, (, !, this, ., autoRange, ), {, numberAxis, ., setRange, (]
[., setAutoRange, (, this, ., autoRange, ), ;, if, (, !, this, ., autoRange, ), {, numberAxis, ., setRange, (]
[., autoRange, ), ;, if, (, !, this, ., autoRange, ), {, numberAxis, ., setRange, (, this, ., minimumValue, ,]
[., autoRange, ), ;, if, (, !, this, ., autoRange, ), {, numberAxis, ., setRange, (, this, ., minimumValue, ,]
