[private, final, MessageFormatter, formatter, ;, private, final, Task, task, ;, public, AntErrorManager, (, MessageFormatter, formatter, ,, Task, task, ), {]
[private, final, MessageFormatter, formatter, ;, private, final, Task, task, ;, public, AntErrorManager, (, MessageFormatter, formatter, ,, Task, task, ), {]
[;, private, final, Task, task, ;, public, AntErrorManager, (, MessageFormatter, formatter, ,, Task, task, ), {, this, ., formatter, =]
[final, Task, task, ;, public, AntErrorManager, (, MessageFormatter, formatter, ,, Task, task, ), {, this, ., formatter, =, formatter, ;]
[final, Task, task, ;, public, AntErrorManager, (, MessageFormatter, formatter, ,, Task, task, ), {, this, ., formatter, =, formatter, ;]
[public, AntErrorManager, (, MessageFormatter, formatter, ,, Task, task, ), {, this, ., formatter, =, formatter, ;, this, ., task, =]
[task, =, task, ;, }, @, Override, public, void, println, (, CheckLevel, level, ,, JSError, error, ), {, switch, (]
[}, @, Override, public, void, println, (, CheckLevel, level, ,, JSError, error, ), {, switch, (, level, ), {, case]
[Override, public, void, println, (, CheckLevel, level, ,, JSError, error, ), {, switch, (, level, ), {, case, ERROR, :]
[Override, public, void, println, (, CheckLevel, level, ,, JSError, error, ), {, switch, (, level, ), {, case, ERROR, :]
[Override, public, void, println, (, CheckLevel, level, ,, JSError, error, ), {, switch, (, level, ), {, case, ERROR, :]
[level, ,, JSError, error, ), {, switch, (, level, ), {, case, ERROR, :, this, ., task, ., log, (]
[level, ,, JSError, error, ), {, switch, (, level, ), {, case, ERROR, :, this, ., task, ., log, (]
[), {, switch, (, level, ), {, case, ERROR, :, this, ., task, ., log, (, error, ., format, (]
[switch, (, level, ), {, case, ERROR, :, this, ., task, ., log, (, error, ., format, (, level, ,]
[switch, (, level, ), {, case, ERROR, :, this, ., task, ., log, (, error, ., format, (, level, ,]
[case, ERROR, :, this, ., task, ., log, (, error, ., format, (, level, ,, this, ., formatter, ), ,]
[case, ERROR, :, this, ., task, ., log, (, error, ., format, (, level, ,, this, ., formatter, ), ,]
[(, error, ., format, (, level, ,, this, ., formatter, ), ,, Project, ., MSG_ERR, ), ;, break, ;, case]
[., format, (, level, ,, this, ., formatter, ), ,, Project, ., MSG_ERR, ), ;, break, ;, case, WARNING, :]
[., format, (, level, ,, this, ., formatter, ), ,, Project, ., MSG_ERR, ), ;, break, ;, case, WARNING, :]
[., format, (, level, ,, this, ., formatter, ), ,, Project, ., MSG_ERR, ), ;, break, ;, case, WARNING, :]
[., formatter, ), ,, Project, ., MSG_ERR, ), ;, break, ;, case, WARNING, :, this, ., task, ., log, (]
[., formatter, ), ,, Project, ., MSG_ERR, ), ;, break, ;, case, WARNING, :, this, ., task, ., log, (]
[Project, ., MSG_ERR, ), ;, break, ;, case, WARNING, :, this, ., task, ., log, (, error, ., format, (]
[MSG_ERR, ), ;, break, ;, case, WARNING, :, this, ., task, ., log, (, error, ., format, (, level, ,]
[MSG_ERR, ), ;, break, ;, case, WARNING, :, this, ., task, ., log, (, error, ., format, (, level, ,]
[case, WARNING, :, this, ., task, ., log, (, error, ., format, (, level, ,, this, ., formatter, ), ,]
[case, WARNING, :, this, ., task, ., log, (, error, ., format, (, level, ,, this, ., formatter, ), ,]
[(, error, ., format, (, level, ,, this, ., formatter, ), ,, Project, ., MSG_WARN, ), ;, break, ;, case]
[break, ;, case, OFF, :, break, ;, }, }, @, Override, protected, void, printSummary, (, ), {, String, message, =]
[break, ;, case, OFF, :, break, ;, }, }, @, Override, protected, void, printSummary, (, ), {, String, message, =]
[break, ;, case, OFF, :, break, ;, }, }, @, Override, protected, void, printSummary, (, ), {, String, message, =]
[break, ;, case, OFF, :, break, ;, }, }, @, Override, protected, void, printSummary, (, ), {, String, message, =]
[:, break, ;, }, }, @, Override, protected, void, printSummary, (, ), {, String, message, =, getErrorCount, (, ), +]
[;, }, }, @, Override, protected, void, printSummary, (, ), {, String, message, =, getErrorCount, (, ), +, " error(s), ", +]
[Override, protected, void, printSummary, (, ), {, String, message, =, getErrorCount, (, ), +, " error(s), ", +, getWarningCount, (, ), +]
[(, ), {, String, message, =, getErrorCount, (, ), +, " error(s), ", +, getWarningCount, (, ), +, " warning(s)", ;, if, (]
[(, ), {, String, message, =, getErrorCount, (, ), +, " error(s), ", +, getWarningCount, (, ), +, " warning(s)", ;, if, (]
[message, =, getErrorCount, (, ), +, " error(s), ", +, getWarningCount, (, ), +, " warning(s)", ;, if, (, getTypedPercent, (, ), >]
[(, ), +, " error(s), ", +, getWarningCount, (, ), +, " warning(s)", ;, if, (, getTypedPercent, (, ), >, 0.0, ), {]
[+, " error(s), ", +, getWarningCount, (, ), +, " warning(s)", ;, if, (, getTypedPercent, (, ), >, 0.0, ), {, message, +=]
[+, " error(s), ", +, getWarningCount, (, ), +, " warning(s)", ;, if, (, getTypedPercent, (, ), >, 0.0, ), {, message, +=]
[+, " error(s), ", +, getWarningCount, (, ), +, " warning(s)", ;, if, (, getTypedPercent, (, ), >, 0.0, ), {, message, +=]
[+, getWarningCount, (, ), +, " warning(s)", ;, if, (, getTypedPercent, (, ), >, 0.0, ), {, message, +=, ", ", +]
[+, " warning(s)", ;, if, (, getTypedPercent, (, ), >, 0.0, ), {, message, +=, ", ", +, getTypedPercent, (, ), +]
[(, ), >, 0.0, ), {, message, +=, ", ", +, getTypedPercent, (, ), +, " typed", ;, }, int, level, =]
[(, ), >, 0.0, ), {, message, +=, ", ", +, getTypedPercent, (, ), +, " typed", ;, }, int, level, =]
[), >, 0.0, ), {, message, +=, ", ", +, getTypedPercent, (, ), +, " typed", ;, }, int, level, =, (]
[), >, 0.0, ), {, message, +=, ", ", +, getTypedPercent, (, ), +, " typed", ;, }, int, level, =, (]
[), >, 0.0, ), {, message, +=, ", ", +, getTypedPercent, (, ), +, " typed", ;, }, int, level, =, (]
[{, message, +=, ", ", +, getTypedPercent, (, ), +, " typed", ;, }, int, level, =, (, getErrorCount, (, ), +]
[+, getTypedPercent, (, ), +, " typed", ;, }, int, level, =, (, getErrorCount, (, ), +, getWarningCount, (, ), ==]
[), +, " typed", ;, }, int, level, =, (, getErrorCount, (, ), +, getWarningCount, (, ), ==, 0, ), ?]
[), +, " typed", ;, }, int, level, =, (, getErrorCount, (, ), +, getWarningCount, (, ), ==, 0, ), ?]
[}, int, level, =, (, getErrorCount, (, ), +, getWarningCount, (, ), ==, 0, ), ?, Project, ., MSG_INFO, :]
[}, int, level, =, (, getErrorCount, (, ), +, getWarningCount, (, ), ==, 0, ), ?, Project, ., MSG_INFO, :]
[(, getErrorCount, (, ), +, getWarningCount, (, ), ==, 0, ), ?, Project, ., MSG_INFO, :, Project, ., MSG_WARN, ;]
[(, getErrorCount, (, ), +, getWarningCount, (, ), ==, 0, ), ?, Project, ., MSG_INFO, :, Project, ., MSG_WARN, ;]
[(, getErrorCount, (, ), +, getWarningCount, (, ), ==, 0, ), ?, Project, ., MSG_INFO, :, Project, ., MSG_WARN, ;]
[(, ), ==, 0, ), ?, Project, ., MSG_INFO, :, Project, ., MSG_WARN, ;, this, ., task, ., log, (]
[==, 0, ), ?, Project, ., MSG_INFO, :, Project, ., MSG_WARN, ;, this, ., task, ., log, (, message, ,]
