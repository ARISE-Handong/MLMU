[;, static, final, DiagnosticType, INVALID_MODIFIES_ANNOTATION, =, DiagnosticType, ., error, (, "JSC_INVALID_MODIFIES_ANNOTATION", ,, "@modifies may only appear in externs files.", ), ;, private, final, AbstractCompiler, compiler, ;]
[., error, (, "JSC_INVALID_NO_SIDE_EFFECT_ANNOTATION", ,, "@nosideeffects may only appear in externs files.", ), ;, static, final, DiagnosticType, INVALID_MODIFIES_ANNOTATION, =, DiagnosticType, ., error, (, "JSC_INVALID_MODIFIES_ANNOTATION", ,, "@modifies may only appear in externs files."]
[,, "@nosideeffects may only appear in externs files.", ), ;, static, final, DiagnosticType, INVALID_MODIFIES_ANNOTATION, =, DiagnosticType, ., error, (, "JSC_INVALID_MODIFIES_ANNOTATION", ,, "@modifies may only appear in externs files.", ), ;, private, final]
[), ;, static, final, DiagnosticType, INVALID_MODIFIES_ANNOTATION, =, DiagnosticType, ., error, (, "JSC_INVALID_MODIFIES_ANNOTATION", ,, "@modifies may only appear in externs files.", ), ;, private, final, AbstractCompiler, compiler]
[;, private, final, AbstractCompiler, compiler, ;, private, final, DefinitionProvider, definitionProvider, ;, private, final, Map, <, Node, ,, FunctionInformation, >, functionSideEffectMap]
[., error, (, "JSC_INVALID_MODIFIES_ANNOTATION", ,, "@modifies may only appear in externs files.", ), ;, private, final, AbstractCompiler, compiler, ;, private, final, DefinitionProvider, definitionProvider, ;, private, final]
[,, "@modifies may only appear in externs files.", ), ;, private, final, AbstractCompiler, compiler, ;, private, final, DefinitionProvider, definitionProvider, ;, private, final, Map, <, Node, ,]
[), ;, private, final, AbstractCompiler, compiler, ;, private, final, DefinitionProvider, definitionProvider, ;, private, final, Map, <, Node, ,, FunctionInformation, >]
[=, compiler, ;, this, ., definitionProvider, =, definitionProvider, ;, this, ., functionSideEffectMap, =, Maps, ., newHashMap, (, ), ;, this]
[., compiler, =, compiler, ;, this, ., definitionProvider, =, definitionProvider, ;, this, ., functionSideEffectMap, =, Maps, ., newHashMap, (, )]
[;, this, ., definitionProvider, =, definitionProvider, ;, this, ., functionSideEffectMap, =, Maps, ., newHashMap, (, ), ;, this, ., allFunctionCalls]
[=, definitionProvider, ;, this, ., functionSideEffectMap, =, Maps, ., newHashMap, (, ), ;, this, ., allFunctionCalls, =, Lists, ., newArrayList]
[., definitionProvider, =, definitionProvider, ;, this, ., functionSideEffectMap, =, Maps, ., newHashMap, (, ), ;, this, ., allFunctionCalls, =, Lists]
[;, this, ., functionSideEffectMap, =, Maps, ., newHashMap, (, ), ;, this, ., allFunctionCalls, =, Lists, ., newArrayList, (, )]
[=, Maps, ., newHashMap, (, ), ;, this, ., allFunctionCalls, =, Lists, ., newArrayList, (, ), ;, this, ., externs]
[., functionSideEffectMap, =, Maps, ., newHashMap, (, ), ;, this, ., allFunctionCalls, =, Lists, ., newArrayList, (, ), ;, this]
[;, this, ., allFunctionCalls, =, Lists, ., newArrayList, (, ), ;, this, ., externs, =, null, ;, this, ., root]
[., newHashMap, (, ), ;, this, ., allFunctionCalls, =, Lists, ., newArrayList, (, ), ;, this, ., externs, =, null]
[=, Lists, ., newArrayList, (, ), ;, this, ., externs, =, null, ;, this, ., root, =, null, ;, }]
[., allFunctionCalls, =, Lists, ., newArrayList, (, ), ;, this, ., externs, =, null, ;, this, ., root, =, null]
[;, this, ., externs, =, null, ;, this, ., root, =, null, ;, }, @, Override, public, void, process, (]
[., newArrayList, (, ), ;, this, ., externs, =, null, ;, this, ., root, =, null, ;, }, @, Override]
[=, null, ;, this, ., root, =, null, ;, }, @, Override, public, void, process, (, Node, externsAst, ,, Node]
[., externs, =, null, ;, this, ., root, =, null, ;, }, @, Override, public, void, process, (, Node, externsAst]
[;, this, ., root, =, null, ;, }, @, Override, public, void, process, (, Node, externsAst, ,, Node, srcAst, )]
[=, null, ;, }, @, Override, public, void, process, (, Node, externsAst, ,, Node, srcAst, ), {, if, (, externs]
[., root, =, null, ;, }, @, Override, public, void, process, (, Node, externsAst, ,, Node, srcAst, ), {, if]
[;, }, @, Override, public, void, process, (, Node, externsAst, ,, Node, srcAst, ), {, if, (, externs, !=, null]
[), {, throw, new, IllegalStateException, (, "It is illegal to call PureFunctionIdentifier.process ", +, "twice the same instance.  Please use a new ", +, "PureFunctionIdentifier instance each time.", ), ;, }, externs, =, externsAst, ;, root, =]
[||, root, !=, null, ), {, throw, new, IllegalStateException, (, "It is illegal to call PureFunctionIdentifier.process ", +, "twice the same instance.  Please use a new ", +, "PureFunctionIdentifier instance each time.", ), ;, }, externs, =]
[!=, null, ||, root, !=, null, ), {, throw, new, IllegalStateException, (, "It is illegal to call PureFunctionIdentifier.process ", +, "twice the same instance.  Please use a new ", +, "PureFunctionIdentifier instance each time.", ), ;, }]
[||, root, !=, null, ), {, throw, new, IllegalStateException, (, "It is illegal to call PureFunctionIdentifier.process ", +, "twice the same instance.  Please use a new ", +, "PureFunctionIdentifier instance each time.", ), ;, }, externs, =]
[), {, throw, new, IllegalStateException, (, "It is illegal to call PureFunctionIdentifier.process ", +, "twice the same instance.  Please use a new ", +, "PureFunctionIdentifier instance each time.", ), ;, }, externs, =, externsAst, ;, root, =]
[!=, null, ), {, throw, new, IllegalStateException, (, "It is illegal to call PureFunctionIdentifier.process ", +, "twice the same instance.  Please use a new ", +, "PureFunctionIdentifier instance each time.", ), ;, }, externs, =, externsAst, ;]
[), {, throw, new, IllegalStateException, (, "It is illegal to call PureFunctionIdentifier.process ", +, "twice the same instance.  Please use a new ", +, "PureFunctionIdentifier instance each time.", ), ;, }, externs, =, externsAst, ;, root, =]
[;, }, externs, =, externsAst, ;, root, =, srcAst, ;, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, FunctionAnalyzer]
[), ;, }, externs, =, externsAst, ;, root, =, srcAst, ;, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new]
[+, "PureFunctionIdentifier instance each time.", ), ;, }, externs, =, externsAst, ;, root, =, srcAst, ;, NodeTraversal, ., traverse, (, compiler, ,, externs]
[+, "twice the same instance.  Please use a new ", +, "PureFunctionIdentifier instance each time.", ), ;, }, externs, =, externsAst, ;, root, =, srcAst, ;, NodeTraversal, ., traverse, (, compiler]
[+, "PureFunctionIdentifier instance each time.", ), ;, }, externs, =, externsAst, ;, root, =, srcAst, ;, NodeTraversal, ., traverse, (, compiler, ,, externs]
[), ;, }, externs, =, externsAst, ;, root, =, srcAst, ;, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new]
[=, externsAst, ;, root, =, srcAst, ;, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, FunctionAnalyzer, (, true, )]
[;, root, =, srcAst, ;, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, FunctionAnalyzer, (, true, ), ), ;]
[=, srcAst, ;, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, FunctionAnalyzer, (, true, ), ), ;, NodeTraversal, .]
[;, NodeTraversal, ., traverse, (, compiler, ,, externs, ,, new, FunctionAnalyzer, (, true, ), ), ;, NodeTraversal, ., traverse, (]
[;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, FunctionAnalyzer, (, false, ), ), ;, propagateSideEffects, (, ), ;]
[., traverse, (, compiler, ,, externs, ,, new, FunctionAnalyzer, (, true, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,]
[,, externs, ,, new, FunctionAnalyzer, (, true, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, FunctionAnalyzer]
[,, new, FunctionAnalyzer, (, true, ), ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, FunctionAnalyzer, (, false]
[), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, FunctionAnalyzer, (, false, ), ), ;, propagateSideEffects, (, )]
[), ), ;, NodeTraversal, ., traverse, (, compiler, ,, root, ,, new, FunctionAnalyzer, (, false, ), ), ;, propagateSideEffects, (]
[;, propagateSideEffects, (, ), ;, markPureFunctionCalls, (, ), ;, }, String, getDebugReport, (, ), {, Preconditions, ., checkNotNull, (, externs]
[., traverse, (, compiler, ,, root, ,, new, FunctionAnalyzer, (, false, ), ), ;, propagateSideEffects, (, ), ;, markPureFunctionCalls, (]
[,, root, ,, new, FunctionAnalyzer, (, false, ), ), ;, propagateSideEffects, (, ), ;, markPureFunctionCalls, (, ), ;, }, String]
[,, new, FunctionAnalyzer, (, false, ), ), ;, propagateSideEffects, (, ), ;, markPureFunctionCalls, (, ), ;, }, String, getDebugReport, (]
[), ;, propagateSideEffects, (, ), ;, markPureFunctionCalls, (, ), ;, }, String, getDebugReport, (, ), {, Preconditions, ., checkNotNull, (]
[), ), ;, propagateSideEffects, (, ), ;, markPureFunctionCalls, (, ), ;, }, String, getDebugReport, (, ), {, Preconditions, ., checkNotNull]
[;, markPureFunctionCalls, (, ), ;, }, String, getDebugReport, (, ), {, Preconditions, ., checkNotNull, (, externs, ), ;, Preconditions, .]
[;, }, String, getDebugReport, (, ), {, Preconditions, ., checkNotNull, (, externs, ), ;, Preconditions, ., checkNotNull, (, root, )]
[;, Preconditions, ., checkNotNull, (, root, ), ;, StringBuilder, sb, =, new, StringBuilder, (, ), ;, FunctionNames, functionNames, =, new]
[., checkNotNull, (, externs, ), ;, Preconditions, ., checkNotNull, (, root, ), ;, StringBuilder, sb, =, new, StringBuilder, (, )]
[), ;, Preconditions, ., checkNotNull, (, root, ), ;, StringBuilder, sb, =, new, StringBuilder, (, ), ;, FunctionNames, functionNames, =]
[;, StringBuilder, sb, =, new, StringBuilder, (, ), ;, FunctionNames, functionNames, =, new, FunctionNames, (, compiler, ), ;, functionNames, .]
[., checkNotNull, (, root, ), ;, StringBuilder, sb, =, new, StringBuilder, (, ), ;, FunctionNames, functionNames, =, new, FunctionNames, (]
[), ;, StringBuilder, sb, =, new, StringBuilder, (, ), ;, FunctionNames, functionNames, =, new, FunctionNames, (, compiler, ), ;, functionNames]
[;, FunctionNames, functionNames, =, new, FunctionNames, (, compiler, ), ;, functionNames, ., process, (, null, ,, externs, ), ;, functionNames]
[;, functionNames, ., process, (, null, ,, externs, ), ;, functionNames, ., process, (, null, ,, root, ), ;, sb]
[), ;, functionNames, ., process, (, null, ,, externs, ), ;, functionNames, ., process, (, null, ,, root, ), ;]
[;, functionNames, ., process, (, null, ,, root, ), ;, sb, ., append, (, "Pure functions:\n", ), ;, for, (, Map]
[., process, (, null, ,, externs, ), ;, functionNames, ., process, (, null, ,, root, ), ;, sb, ., append]
[,, externs, ), ;, functionNames, ., process, (, null, ,, root, ), ;, sb, ., append, (, "Pure functions:\n", ), ;]
[), ;, functionNames, ., process, (, null, ,, root, ), ;, sb, ., append, (, "Pure functions:\n", ), ;, for, (]
[;, sb, ., append, (, "Pure functions:\n", ), ;, for, (, Map, ., Entry, <, Node, ,, FunctionInformation, >, entry, :]
[., process, (, null, ,, root, ), ;, sb, ., append, (, "Pure functions:\n", ), ;, for, (, Map, ., Entry]
[,, root, ), ;, sb, ., append, (, "Pure functions:\n", ), ;, for, (, Map, ., Entry, <, Node, ,, FunctionInformation]
[), ;, sb, ., append, (, "Pure functions:\n", ), ;, for, (, Map, ., Entry, <, Node, ,, FunctionInformation, >, entry]
[;, for, (, Map, ., Entry, <, Node, ,, FunctionInformation, >, entry, :, functionSideEffectMap, ., entrySet, (, ), ), {]
[., append, (, "Pure functions:\n", ), ;, for, (, Map, ., Entry, <, Node, ,, FunctionInformation, >, entry, :, functionSideEffectMap, .]
[), ;, for, (, Map, ., Entry, <, Node, ,, FunctionInformation, >, entry, :, functionSideEffectMap, ., entrySet, (, ), )]
[), {, Node, function, =, entry, ., getKey, (, ), ;, FunctionInformation, functionInfo, =, entry, ., getValue, (, ), ;]
[., entrySet, (, ), ), {, Node, function, =, entry, ., getKey, (, ), ;, FunctionInformation, functionInfo, =, entry, .]
[;, FunctionInformation, functionInfo, =, entry, ., getValue, (, ), ;, boolean, isPure, =, functionInfo, ., mayBePure, (, ), &&, !]
[., getKey, (, ), ;, FunctionInformation, functionInfo, =, entry, ., getValue, (, ), ;, boolean, isPure, =, functionInfo, ., mayBePure]
[;, boolean, isPure, =, functionInfo, ., mayBePure, (, ), &&, !, functionInfo, ., mayHaveSideEffects, (, ), ;, if, (, isPure]
[., getValue, (, ), ;, boolean, isPure, =, functionInfo, ., mayBePure, (, ), &&, !, functionInfo, ., mayHaveSideEffects, (, )]
[;, if, (, isPure, ), {, sb, ., append, (, "  ", +, functionNames, ., getFunctionName, (, function, ), +, "\n"]
[&&, !, functionInfo, ., mayHaveSideEffects, (, ), ;, if, (, isPure, ), {, sb, ., append, (, "  ", +, functionNames]
[., mayBePure, (, ), &&, !, functionInfo, ., mayHaveSideEffects, (, ), ;, if, (, isPure, ), {, sb, ., append]
[;, if, (, isPure, ), {, sb, ., append, (, "  ", +, functionNames, ., getFunctionName, (, function, ), +, "\n"]
[;, if, (, isPure, ), {, sb, ., append, (, "  ", +, functionNames, ., getFunctionName, (, function, ), +, "\n"]
[., mayHaveSideEffects, (, ), ;, if, (, isPure, ), {, sb, ., append, (, "  ", +, functionNames, ., getFunctionName, (]
[), {, sb, ., append, (, "  ", +, functionNames, ., getFunctionName, (, function, ), +, "\n", ), ;, }, }]
[;, }, }, sb, ., append, (, "\n", ), ;, for, (, Map, ., Entry, <, Node, ,, FunctionInformation, >]
[., append, (, "  ", +, functionNames, ., getFunctionName, (, function, ), +, "\n", ), ;, }, }, sb, ., append]
[), ;, }, }, sb, ., append, (, "\n", ), ;, for, (, Map, ., Entry, <, Node, ,, FunctionInformation]
[+, "\n", ), ;, }, }, sb, ., append, (, "\n", ), ;, for, (, Map, ., Entry, <, Node]
[+, functionNames, ., getFunctionName, (, function, ), +, "\n", ), ;, }, }, sb, ., append, (, "\n", ), ;]
[+, "\n", ), ;, }, }, sb, ., append, (, "\n", ), ;, for, (, Map, ., Entry, <, Node]
[., getFunctionName, (, function, ), +, "\n", ), ;, }, }, sb, ., append, (, "\n", ), ;, for, (]
[), +, "\n", ), ;, }, }, sb, ., append, (, "\n", ), ;, for, (, Map, ., Entry, <]
[), ;, }, }, sb, ., append, (, "\n", ), ;, for, (, Map, ., Entry, <, Node, ,, FunctionInformation]
[;, for, (, Map, ., Entry, <, Node, ,, FunctionInformation, >, entry, :, functionSideEffectMap, ., entrySet, (, ), ), {]
[., append, (, "\n", ), ;, for, (, Map, ., Entry, <, Node, ,, FunctionInformation, >, entry, :, functionSideEffectMap, .]
[), ;, for, (, Map, ., Entry, <, Node, ,, FunctionInformation, >, entry, :, functionSideEffectMap, ., entrySet, (, ), )]
[), {, Node, function, =, entry, ., getKey, (, ), ;, FunctionInformation, functionInfo, =, entry, ., getValue, (, ), ;]
[., entrySet, (, ), ), {, Node, function, =, entry, ., getKey, (, ), ;, FunctionInformation, functionInfo, =, entry, .]
[;, FunctionInformation, functionInfo, =, entry, ., getValue, (, ), ;, Set, <, String, >, depFunctionNames, =, Sets, ., newHashSet, (]
[., getKey, (, ), ;, FunctionInformation, functionInfo, =, entry, ., getValue, (, ), ;, Set, <, String, >, depFunctionNames, =]
[;, Set, <, String, >, depFunctionNames, =, Sets, ., newHashSet, (, ), ;, for, (, Node, callSite, :, functionInfo, .]
[., getValue, (, ), ;, Set, <, String, >, depFunctionNames, =, Sets, ., newHashSet, (, ), ;, for, (, Node]
[;, for, (, Node, callSite, :, functionInfo, ., getCallsInFunctionBody, (, ), ), {, Collection, <, Definition, >, defs, =, getCallableDefinitions]
[., newHashSet, (, ), ;, for, (, Node, callSite, :, functionInfo, ., getCallsInFunctionBody, (, ), ), {, Collection, <, Definition]
[), {, Collection, <, Definition, >, defs, =, getCallableDefinitions, (, definitionProvider, ,, callSite, ., getFirstChild, (, ), ), ;, if]
[., getCallsInFunctionBody, (, ), ), {, Collection, <, Definition, >, defs, =, getCallableDefinitions, (, definitionProvider, ,, callSite, ., getFirstChild, (]
[;, if, (, defs, ==, null, ), {, depFunctionNames, ., add, (, "<null def list>", ), ;, continue, ;, }, for, (]
[,, callSite, ., getFirstChild, (, ), ), ;, if, (, defs, ==, null, ), {, depFunctionNames, ., add, (, "<null def list>"]
[), ;, if, (, defs, ==, null, ), {, depFunctionNames, ., add, (, "<null def list>", ), ;, continue, ;, }, for]
[., getFirstChild, (, ), ), ;, if, (, defs, ==, null, ), {, depFunctionNames, ., add, (, "<null def list>", ), ;]
[), {, depFunctionNames, ., add, (, "<null def list>", ), ;, continue, ;, }, for, (, Definition, def, :, defs, ), {]
[==, null, ), {, depFunctionNames, ., add, (, "<null def list>", ), ;, continue, ;, }, for, (, Definition, def, :, defs]
[), {, depFunctionNames, ., add, (, "<null def list>", ), ;, continue, ;, }, for, (, Definition, def, :, defs, ), {]
[;, continue, ;, }, for, (, Definition, def, :, defs, ), {, depFunctionNames, ., add, (, functionNames, ., getFunctionName, (]
[., add, (, "<null def list>", ), ;, continue, ;, }, for, (, Definition, def, :, defs, ), {, depFunctionNames, ., add]
[), ;, continue, ;, }, for, (, Definition, def, :, defs, ), {, depFunctionNames, ., add, (, functionNames, ., getFunctionName]
[), {, depFunctionNames, ., add, (, functionNames, ., getFunctionName, (, def, ., getRValue, (, ), ), ), ;, }, }]
[;, }, }, sb, ., append, (, functionNames, ., getFunctionName, (, function, ), +, " ", +, functionInfo, ., toString, (]
[., add, (, functionNames, ., getFunctionName, (, def, ., getRValue, (, ), ), ), ;, }, }, sb, ., append]
[), ;, }, }, sb, ., append, (, functionNames, ., getFunctionName, (, function, ), +, " ", +, functionInfo, ., toString]
[., getFunctionName, (, def, ., getRValue, (, ), ), ), ;, }, }, sb, ., append, (, functionNames, ., getFunctionName]
[), ), ;, }, }, sb, ., append, (, functionNames, ., getFunctionName, (, function, ), +, " ", +, functionInfo, .]
[., getRValue, (, ), ), ), ;, }, }, sb, ., append, (, functionNames, ., getFunctionName, (, function, ), +]
[;, }, return, sb, ., toString, (, ), ;, }, private, static, Collection, <, Definition, >, getCallableDefinitions, (, DefinitionProvider, definitionProvider]
[., append, (, functionNames, ., getFunctionName, (, function, ), +, " ", +, functionInfo, ., toString, (, ), +, " Calls: ", +]
[), ;, }, return, sb, ., toString, (, ), ;, }, private, static, Collection, <, Definition, >, getCallableDefinitions, (, DefinitionProvider]
[+, "\n", ), ;, }, return, sb, ., toString, (, ), ;, }, private, static, Collection, <, Definition, >, getCallableDefinitions]
[+, depFunctionNames, +, "\n", ), ;, }, return, sb, ., toString, (, ), ;, }, private, static, Collection, <, Definition]
[+, " Calls: ", +, depFunctionNames, +, "\n", ), ;, }, return, sb, ., toString, (, ), ;, }, private, static, Collection]
[+, functionInfo, ., toString, (, ), +, " Calls: ", +, depFunctionNames, +, "\n", ), ;, }, return, sb, ., toString, (]
[+, " ", +, functionInfo, ., toString, (, ), +, " Calls: ", +, depFunctionNames, +, "\n", ), ;, }, return, sb, .]
[., getFunctionName, (, function, ), +, " ", +, functionInfo, ., toString, (, ), +, " Calls: ", +, depFunctionNames, +, "\n", )]
[), +, " ", +, functionInfo, ., toString, (, ), +, " Calls: ", +, depFunctionNames, +, "\n", ), ;, }, return, sb]
[+, functionInfo, ., toString, (, ), +, " Calls: ", +, depFunctionNames, +, "\n", ), ;, }, return, sb, ., toString, (]
[+, " Calls: ", +, depFunctionNames, +, "\n", ), ;, }, return, sb, ., toString, (, ), ;, }, private, static, Collection]
[., toString, (, ), +, " Calls: ", +, depFunctionNames, +, "\n", ), ;, }, return, sb, ., toString, (, ), ;]
[+, depFunctionNames, +, "\n", ), ;, }, return, sb, ., toString, (, ), ;, }, private, static, Collection, <, Definition]
[+, "\n", ), ;, }, return, sb, ., toString, (, ), ;, }, private, static, Collection, <, Definition, >, getCallableDefinitions]
[), ;, }, return, sb, ., toString, (, ), ;, }, private, static, Collection, <, Definition, >, getCallableDefinitions, (, DefinitionProvider]
[;, }, private, static, Collection, <, Definition, >, getCallableDefinitions, (, DefinitionProvider, definitionProvider, ,, Node, name, ), {, if, (, name]
[., toString, (, ), ;, }, private, static, Collection, <, Definition, >, getCallableDefinitions, (, DefinitionProvider, definitionProvider, ,, Node, name, )]
[), {, List, <, Definition, >, result, =, Lists, ., newArrayList, (, ), ;, Collection, <, Definition, >, decls, =]
[||, name, ., isName, (, ), ), {, List, <, Definition, >, result, =, Lists, ., newArrayList, (, ), ;]
[., isGetProp, (, ), ||, name, ., isName, (, ), ), {, List, <, Definition, >, result, =, Lists, .]
[), {, List, <, Definition, >, result, =, Lists, ., newArrayList, (, ), ;, Collection, <, Definition, >, decls, =]
[., isName, (, ), ), {, List, <, Definition, >, result, =, Lists, ., newArrayList, (, ), ;, Collection, <]
[;, Collection, <, Definition, >, decls, =, definitionProvider, ., getDefinitionsReferencedAt, (, name, ), ;, if, (, decls, ==, null, )]
[., newArrayList, (, ), ;, Collection, <, Definition, >, decls, =, definitionProvider, ., getDefinitionsReferencedAt, (, name, ), ;, if, (]
[;, if, (, decls, ==, null, ), {, return, null, ;, }, for, (, Definition, current, :, decls, ), {]
[., getDefinitionsReferencedAt, (, name, ), ;, if, (, decls, ==, null, ), {, return, null, ;, }, for, (, Definition]
[), ;, if, (, decls, ==, null, ), {, return, null, ;, }, for, (, Definition, current, :, decls, )]
[), {, return, null, ;, }, for, (, Definition, current, :, decls, ), {, Node, rValue, =, current, ., getRValue]
[==, null, ), {, return, null, ;, }, for, (, Definition, current, :, decls, ), {, Node, rValue, =, current]
[), {, return, null, ;, }, for, (, Definition, current, :, decls, ), {, Node, rValue, =, current, ., getRValue]
[;, }, for, (, Definition, current, :, decls, ), {, Node, rValue, =, current, ., getRValue, (, ), ;, if]
[), {, Node, rValue, =, current, ., getRValue, (, ), ;, if, (, (, rValue, !=, null, ), &&, rValue]
[;, if, (, (, rValue, !=, null, ), &&, rValue, ., isFunction, (, ), ), {, result, ., add, (]
[., getRValue, (, ), ;, if, (, (, rValue, !=, null, ), &&, rValue, ., isFunction, (, ), ), {]
[), {, result, ., add, (, current, ), ;, }, else, {, return, null, ;, }, }, return, result, ;]
[&&, rValue, ., isFunction, (, ), ), {, result, ., add, (, current, ), ;, }, else, {, return, null]
[), &&, rValue, ., isFunction, (, ), ), {, result, ., add, (, current, ), ;, }, else, {, return]
[!=, null, ), &&, rValue, ., isFunction, (, ), ), {, result, ., add, (, current, ), ;, }, else]
[), &&, rValue, ., isFunction, (, ), ), {, result, ., add, (, current, ), ;, }, else, {, return]
[), {, result, ., add, (, current, ), ;, }, else, {, return, null, ;, }, }, return, result, ;]
[., isFunction, (, ), ), {, result, ., add, (, current, ), ;, }, else, {, return, null, ;, }]
[;, }, else, {, return, null, ;, }, }, return, result, ;, }, else, if, (, name, ., isOr, (]
[., add, (, current, ), ;, }, else, {, return, null, ;, }, }, return, result, ;, }, else, if]
[), ;, }, else, {, return, null, ;, }, }, return, result, ;, }, else, if, (, name, ., isOr]
[;, }, }, return, result, ;, }, else, if, (, name, ., isOr, (, ), ||, name, ., isHook, (]
[;, }, else, if, (, name, ., isOr, (, ), ||, name, ., isHook, (, ), ), {, Node, firstVal]
[), {, Node, firstVal, ;, if, (, name, ., isHook, (, ), ), {, firstVal, =, name, ., getFirstChild, (]
[||, name, ., isHook, (, ), ), {, Node, firstVal, ;, if, (, name, ., isHook, (, ), ), {]
[., isOr, (, ), ||, name, ., isHook, (, ), ), {, Node, firstVal, ;, if, (, name, ., isHook]
[), {, Node, firstVal, ;, if, (, name, ., isHook, (, ), ), {, firstVal, =, name, ., getFirstChild, (]
[., isHook, (, ), ), {, Node, firstVal, ;, if, (, name, ., isHook, (, ), ), {, firstVal, =]
[), {, firstVal, =, name, ., getFirstChild, (, ), ., getNext, (, ), ;, }, else, {, firstVal, =, name]
[., isHook, (, ), ), {, firstVal, =, name, ., getFirstChild, (, ), ., getNext, (, ), ;, }, else]
[=, name, ., getFirstChild, (, ), ., getNext, (, ), ;, }, else, {, firstVal, =, name, ., getFirstChild, (]
[;, }, else, {, firstVal, =, name, ., getFirstChild, (, ), ;, }, Collection, <, Definition, >, defs1, =, getCallableDefinitions]
[., getNext, (, ), ;, }, else, {, firstVal, =, name, ., getFirstChild, (, ), ;, }, Collection, <, Definition]
[., getFirstChild, (, ), ., getNext, (, ), ;, }, else, {, firstVal, =, name, ., getFirstChild, (, ), ;]
[=, name, ., getFirstChild, (, ), ;, }, Collection, <, Definition, >, defs1, =, getCallableDefinitions, (, definitionProvider, ,, firstVal, )]
[;, }, Collection, <, Definition, >, defs1, =, getCallableDefinitions, (, definitionProvider, ,, firstVal, ), ;, Collection, <, Definition, >, defs2]
[., getFirstChild, (, ), ;, }, Collection, <, Definition, >, defs1, =, getCallableDefinitions, (, definitionProvider, ,, firstVal, ), ;, Collection]
[;, Collection, <, Definition, >, defs2, =, getCallableDefinitions, (, definitionProvider, ,, firstVal, ., getNext, (, ), ), ;, if, (]
[,, firstVal, ), ;, Collection, <, Definition, >, defs2, =, getCallableDefinitions, (, definitionProvider, ,, firstVal, ., getNext, (, ), )]
[), ;, Collection, <, Definition, >, defs2, =, getCallableDefinitions, (, definitionProvider, ,, firstVal, ., getNext, (, ), ), ;, if]
[;, if, (, defs1, !=, null, &&, defs2, !=, null, ), {, defs1, ., addAll, (, defs2, ), ;, return]
[,, firstVal, ., getNext, (, ), ), ;, if, (, defs1, !=, null, &&, defs2, !=, null, ), {, defs1]
[), ;, if, (, defs1, !=, null, &&, defs2, !=, null, ), {, defs1, ., addAll, (, defs2, ), ;]
[., getNext, (, ), ), ;, if, (, defs1, !=, null, &&, defs2, !=, null, ), {, defs1, ., addAll]
[), {, defs1, ., addAll, (, defs2, ), ;, return, defs1, ;, }, else, {, return, null, ;, }, }]
[&&, defs2, !=, null, ), {, defs1, ., addAll, (, defs2, ), ;, return, defs1, ;, }, else, {, return]
[!=, null, &&, defs2, !=, null, ), {, defs1, ., addAll, (, defs2, ), ;, return, defs1, ;, }, else]
[&&, defs2, !=, null, ), {, defs1, ., addAll, (, defs2, ), ;, return, defs1, ;, }, else, {, return]
[), {, defs1, ., addAll, (, defs2, ), ;, return, defs1, ;, }, else, {, return, null, ;, }, }]
[!=, null, ), {, defs1, ., addAll, (, defs2, ), ;, return, defs1, ;, }, else, {, return, null, ;]
[), {, defs1, ., addAll, (, defs2, ), ;, return, defs1, ;, }, else, {, return, null, ;, }, }]
[;, return, defs1, ;, }, else, {, return, null, ;, }, }, else, if, (, NodeUtil, ., isFunctionExpression, (, name]
[., addAll, (, defs2, ), ;, return, defs1, ;, }, else, {, return, null, ;, }, }, else, if, (]
[), ;, return, defs1, ;, }, else, {, return, null, ;, }, }, else, if, (, NodeUtil, ., isFunctionExpression, (]
[;, }, else, {, return, null, ;, }, }, else, if, (, NodeUtil, ., isFunctionExpression, (, name, ), ), {]
[;, }, }, else, if, (, NodeUtil, ., isFunctionExpression, (, name, ), ), {, return, Lists, ., newArrayList, (, (]
[), {, return, Lists, ., newArrayList, (, (, Definition, ), new, DefinitionsRemover, ., FunctionExpressionDefinition, (, name, ,, false, ), )]
[., isFunctionExpression, (, name, ), ), {, return, Lists, ., newArrayList, (, (, Definition, ), new, DefinitionsRemover, ., FunctionExpressionDefinition, (]
[), ), {, return, Lists, ., newArrayList, (, (, Definition, ), new, DefinitionsRemover, ., FunctionExpressionDefinition, (, name, ,, false, )]
[;, }, else, {, return, null, ;, }, }, private, void, propagateSideEffects, (, ), {, DiGraph, <, FunctionInformation, ,, Node]
[., newArrayList, (, (, Definition, ), new, DefinitionsRemover, ., FunctionExpressionDefinition, (, name, ,, false, ), ), ;, }, else, {]
[), ;, }, else, {, return, null, ;, }, }, private, void, propagateSideEffects, (, ), {, DiGraph, <, FunctionInformation, ,]
[), ;, }, else, {, return, null, ;, }, }, private, void, propagateSideEffects, (, ), {, DiGraph, <, FunctionInformation, ,]
[,, false, ), ), ;, }, else, {, return, null, ;, }, }, private, void, propagateSideEffects, (, ), {, DiGraph]
[), ), ;, }, else, {, return, null, ;, }, }, private, void, propagateSideEffects, (, ), {, DiGraph, <, FunctionInformation]
[;, }, }, private, void, propagateSideEffects, (, ), {, DiGraph, <, FunctionInformation, ,, Node, >, sideEffectGraph, =, LinkedDirectedGraph, ., createWithoutAnnotations]
[;, for, (, FunctionInformation, functionInfo, :, functionSideEffectMap, ., values, (, ), ), {, sideEffectGraph, ., createNode, (, functionInfo, ), ;]
[., createWithoutAnnotations, (, ), ;, for, (, FunctionInformation, functionInfo, :, functionSideEffectMap, ., values, (, ), ), {, sideEffectGraph, ., createNode]
[), {, sideEffectGraph, ., createNode, (, functionInfo, ), ;, }, for, (, FunctionInformation, functionInfo, :, functionSideEffectMap, ., values, (, )]
[., values, (, ), ), {, sideEffectGraph, ., createNode, (, functionInfo, ), ;, }, for, (, FunctionInformation, functionInfo, :, functionSideEffectMap]
[;, }, for, (, FunctionInformation, functionInfo, :, functionSideEffectMap, ., values, (, ), ), {, if, (, !, functionInfo, ., mayHaveSideEffects]
[., createNode, (, functionInfo, ), ;, }, for, (, FunctionInformation, functionInfo, :, functionSideEffectMap, ., values, (, ), ), {, if]
[), ;, }, for, (, FunctionInformation, functionInfo, :, functionSideEffectMap, ., values, (, ), ), {, if, (, !, functionInfo, .]
[), {, if, (, !, functionInfo, ., mayHaveSideEffects, (, ), ), {, continue, ;, }, for, (, Node, callSite, :]
[., values, (, ), ), {, if, (, !, functionInfo, ., mayHaveSideEffects, (, ), ), {, continue, ;, }, for]
[), {, continue, ;, }, for, (, Node, callSite, :, functionInfo, ., getCallsInFunctionBody, (, ), ), {, Node, callee, =]
[), {, continue, ;, }, for, (, Node, callSite, :, functionInfo, ., getCallsInFunctionBody, (, ), ), {, Node, callee, =]
[., mayHaveSideEffects, (, ), ), {, continue, ;, }, for, (, Node, callSite, :, functionInfo, ., getCallsInFunctionBody, (, ), )]
[), {, Node, callee, =, callSite, ., getFirstChild, (, ), ;, Collection, <, Definition, >, defs, =, getCallableDefinitions, (, definitionProvider]
[., getCallsInFunctionBody, (, ), ), {, Node, callee, =, callSite, ., getFirstChild, (, ), ;, Collection, <, Definition, >, defs]
[;, Collection, <, Definition, >, defs, =, getCallableDefinitions, (, definitionProvider, ,, callee, ), ;, if, (, defs, ==, null, )]
[., getFirstChild, (, ), ;, Collection, <, Definition, >, defs, =, getCallableDefinitions, (, definitionProvider, ,, callee, ), ;, if, (]
[;, if, (, defs, ==, null, ), {, functionInfo, ., setTaintsUnknown, (, ), ;, break, ;, }, for, (, Definition]
[,, callee, ), ;, if, (, defs, ==, null, ), {, functionInfo, ., setTaintsUnknown, (, ), ;, break, ;, }]
[), ;, if, (, defs, ==, null, ), {, functionInfo, ., setTaintsUnknown, (, ), ;, break, ;, }, for, (]
[), {, functionInfo, ., setTaintsUnknown, (, ), ;, break, ;, }, for, (, Definition, def, :, defs, ), {, Node]
[==, null, ), {, functionInfo, ., setTaintsUnknown, (, ), ;, break, ;, }, for, (, Definition, def, :, defs, )]
[), {, functionInfo, ., setTaintsUnknown, (, ), ;, break, ;, }, for, (, Definition, def, :, defs, ), {, Node]
[;, break, ;, }, for, (, Definition, def, :, defs, ), {, Node, defValue, =, def, ., getRValue, (, )]
[., setTaintsUnknown, (, ), ;, break, ;, }, for, (, Definition, def, :, defs, ), {, Node, defValue, =, def]
[), {, Node, defValue, =, def, ., getRValue, (, ), ;, FunctionInformation, dep, =, functionSideEffectMap, ., get, (, defValue, )]
[;, FunctionInformation, dep, =, functionSideEffectMap, ., get, (, defValue, ), ;, Preconditions, ., checkNotNull, (, dep, ), ;, sideEffectGraph, .]
[., getRValue, (, ), ;, FunctionInformation, dep, =, functionSideEffectMap, ., get, (, defValue, ), ;, Preconditions, ., checkNotNull, (, dep]
[;, Preconditions, ., checkNotNull, (, dep, ), ;, sideEffectGraph, ., connect, (, dep, ,, callSite, ,, functionInfo, ), ;, }]
[., get, (, defValue, ), ;, Preconditions, ., checkNotNull, (, dep, ), ;, sideEffectGraph, ., connect, (, dep, ,, callSite]
[), ;, Preconditions, ., checkNotNull, (, dep, ), ;, sideEffectGraph, ., connect, (, dep, ,, callSite, ,, functionInfo, ), ;]
[;, sideEffectGraph, ., connect, (, dep, ,, callSite, ,, functionInfo, ), ;, }, }, }, FixedPointGraphTraversal, ., newTraversal, (, new]
[., checkNotNull, (, dep, ), ;, sideEffectGraph, ., connect, (, dep, ,, callSite, ,, functionInfo, ), ;, }, }, }]
[), ;, sideEffectGraph, ., connect, (, dep, ,, callSite, ,, functionInfo, ), ;, }, }, }, FixedPointGraphTraversal, ., newTraversal, (]
[;, }, }, }, FixedPointGraphTraversal, ., newTraversal, (, new, SideEffectPropagationCallback, (, ), ), ., computeFixedPoint, (, sideEffectGraph, ), ;, for]
[., connect, (, dep, ,, callSite, ,, functionInfo, ), ;, }, }, }, FixedPointGraphTraversal, ., newTraversal, (, new, SideEffectPropagationCallback, (]
[,, callSite, ,, functionInfo, ), ;, }, }, }, FixedPointGraphTraversal, ., newTraversal, (, new, SideEffectPropagationCallback, (, ), ), ., computeFixedPoint]
[,, functionInfo, ), ;, }, }, }, FixedPointGraphTraversal, ., newTraversal, (, new, SideEffectPropagationCallback, (, ), ), ., computeFixedPoint, (, sideEffectGraph]
[), ;, }, }, }, FixedPointGraphTraversal, ., newTraversal, (, new, SideEffectPropagationCallback, (, ), ), ., computeFixedPoint, (, sideEffectGraph, ), ;]
[;, for, (, FunctionInformation, functionInfo, :, functionSideEffectMap, ., values, (, ), ), {, if, (, functionInfo, ., mayBePure, (, )]
[., computeFixedPoint, (, sideEffectGraph, ), ;, for, (, FunctionInformation, functionInfo, :, functionSideEffectMap, ., values, (, ), ), {, if, (]
[., newTraversal, (, new, SideEffectPropagationCallback, (, ), ), ., computeFixedPoint, (, sideEffectGraph, ), ;, for, (, FunctionInformation, functionInfo, :, functionSideEffectMap]
[), ., computeFixedPoint, (, sideEffectGraph, ), ;, for, (, FunctionInformation, functionInfo, :, functionSideEffectMap, ., values, (, ), ), {, if]
[), ;, for, (, FunctionInformation, functionInfo, :, functionSideEffectMap, ., values, (, ), ), {, if, (, functionInfo, ., mayBePure, (]
[), {, if, (, functionInfo, ., mayBePure, (, ), ), {, functionInfo, ., setIsPure, (, ), ;, }, }, }]
[., values, (, ), ), {, if, (, functionInfo, ., mayBePure, (, ), ), {, functionInfo, ., setIsPure, (, )]
[), {, functionInfo, ., setIsPure, (, ), ;, }, }, }, private, void, markPureFunctionCalls, (, ), {, for, (, Node]
[., mayBePure, (, ), ), {, functionInfo, ., setIsPure, (, ), ;, }, }, }, private, void, markPureFunctionCalls, (, )]
[;, }, }, }, private, void, markPureFunctionCalls, (, ), {, for, (, Node, callNode, :, allFunctionCalls, ), {, Node, name]
[., setIsPure, (, ), ;, }, }, }, private, void, markPureFunctionCalls, (, ), {, for, (, Node, callNode, :, allFunctionCalls]
[), {, Node, name, =, callNode, ., getFirstChild, (, ), ;, Collection, <, Definition, >, defs, =, getCallableDefinitions, (, definitionProvider]
[;, Collection, <, Definition, >, defs, =, getCallableDefinitions, (, definitionProvider, ,, name, ), ;, Node, ., SideEffectFlags, flags, =, new]
[., getFirstChild, (, ), ;, Collection, <, Definition, >, defs, =, getCallableDefinitions, (, definitionProvider, ,, name, ), ;, Node, .]
[;, Node, ., SideEffectFlags, flags, =, new, Node, ., SideEffectFlags, (, ), ;, if, (, defs, ==, null, ), {]
[,, name, ), ;, Node, ., SideEffectFlags, flags, =, new, Node, ., SideEffectFlags, (, ), ;, if, (, defs, ==]
[), ;, Node, ., SideEffectFlags, flags, =, new, Node, ., SideEffectFlags, (, ), ;, if, (, defs, ==, null, )]
[;, if, (, defs, ==, null, ), {, flags, ., setMutatesGlobalState, (, ), ;, flags, ., setThrows, (, ), ;]
[), {, flags, ., setMutatesGlobalState, (, ), ;, flags, ., setThrows, (, ), ;, flags, ., setReturnsTainted, (, ), ;]
[==, null, ), {, flags, ., setMutatesGlobalState, (, ), ;, flags, ., setThrows, (, ), ;, flags, ., setReturnsTainted, (]
[), {, flags, ., setMutatesGlobalState, (, ), ;, flags, ., setThrows, (, ), ;, flags, ., setReturnsTainted, (, ), ;]
[;, flags, ., setThrows, (, ), ;, flags, ., setReturnsTainted, (, ), ;, }, else, {, flags, ., clearAllFlags, (]
[., setMutatesGlobalState, (, ), ;, flags, ., setThrows, (, ), ;, flags, ., setReturnsTainted, (, ), ;, }, else, {]
[;, flags, ., setReturnsTainted, (, ), ;, }, else, {, flags, ., clearAllFlags, (, ), ;, for, (, Definition, def]
[., setThrows, (, ), ;, flags, ., setReturnsTainted, (, ), ;, }, else, {, flags, ., clearAllFlags, (, ), ;]
[;, }, else, {, flags, ., clearAllFlags, (, ), ;, for, (, Definition, def, :, defs, ), {, FunctionInformation, functionInfo]
[., setReturnsTainted, (, ), ;, }, else, {, flags, ., clearAllFlags, (, ), ;, for, (, Definition, def, :, defs]
[;, for, (, Definition, def, :, defs, ), {, FunctionInformation, functionInfo, =, functionSideEffectMap, ., get, (, def, ., getRValue, (]
[., clearAllFlags, (, ), ;, for, (, Definition, def, :, defs, ), {, FunctionInformation, functionInfo, =, functionSideEffectMap, ., get, (]
[), {, FunctionInformation, functionInfo, =, functionSideEffectMap, ., get, (, def, ., getRValue, (, ), ), ;, Preconditions, ., checkNotNull, (]
[;, Preconditions, ., checkNotNull, (, functionInfo, ), ;, if, (, functionInfo, ., mutatesGlobalState, (, ), ), {, flags, ., setMutatesGlobalState]
[., get, (, def, ., getRValue, (, ), ), ;, Preconditions, ., checkNotNull, (, functionInfo, ), ;, if, (, functionInfo]
[), ;, Preconditions, ., checkNotNull, (, functionInfo, ), ;, if, (, functionInfo, ., mutatesGlobalState, (, ), ), {, flags, .]
[., getRValue, (, ), ), ;, Preconditions, ., checkNotNull, (, functionInfo, ), ;, if, (, functionInfo, ., mutatesGlobalState, (, )]
[;, if, (, functionInfo, ., mutatesGlobalState, (, ), ), {, flags, ., setMutatesGlobalState, (, ), ;, }, if, (, functionInfo]
[., checkNotNull, (, functionInfo, ), ;, if, (, functionInfo, ., mutatesGlobalState, (, ), ), {, flags, ., setMutatesGlobalState, (, )]
[), ;, if, (, functionInfo, ., mutatesGlobalState, (, ), ), {, flags, ., setMutatesGlobalState, (, ), ;, }, if, (]
[), {, flags, ., setMutatesGlobalState, (, ), ;, }, if, (, functionInfo, ., functionThrows, ), {, flags, ., setThrows, (]
[., mutatesGlobalState, (, ), ), {, flags, ., setMutatesGlobalState, (, ), ;, }, if, (, functionInfo, ., functionThrows, ), {]
[;, }, if, (, functionInfo, ., functionThrows, ), {, flags, ., setThrows, (, ), ;, }, if, (, !, callNode]
[., setMutatesGlobalState, (, ), ;, }, if, (, functionInfo, ., functionThrows, ), {, flags, ., setThrows, (, ), ;, }]
[), {, flags, ., setThrows, (, ), ;, }, if, (, !, callNode, ., isNew, (, ), ), {, if]
[., functionThrows, ), {, flags, ., setThrows, (, ), ;, }, if, (, !, callNode, ., isNew, (, ), )]
[;, }, if, (, !, callNode, ., isNew, (, ), ), {, if, (, functionInfo, ., taintsThis, ), {, flags]
[., setThrows, (, ), ;, }, if, (, !, callNode, ., isNew, (, ), ), {, if, (, functionInfo, .]
[), {, if, (, functionInfo, ., taintsThis, ), {, flags, ., setMutatesThis, (, ), ;, }, }, if, (, functionInfo]
[), {, if, (, functionInfo, ., taintsThis, ), {, flags, ., setMutatesThis, (, ), ;, }, }, if, (, functionInfo]
[., isNew, (, ), ), {, if, (, functionInfo, ., taintsThis, ), {, flags, ., setMutatesThis, (, ), ;, }]
[), {, flags, ., setMutatesThis, (, ), ;, }, }, if, (, functionInfo, ., taintsReturn, ), {, flags, ., setReturnsTainted]
[., taintsThis, ), {, flags, ., setMutatesThis, (, ), ;, }, }, if, (, functionInfo, ., taintsReturn, ), {, flags]
[;, }, }, if, (, functionInfo, ., taintsReturn, ), {, flags, ., setReturnsTainted, (, ), ;, }, if, (, flags]
[., setMutatesThis, (, ), ;, }, }, if, (, functionInfo, ., taintsReturn, ), {, flags, ., setReturnsTainted, (, ), ;]
[), {, flags, ., setReturnsTainted, (, ), ;, }, if, (, flags, ., areAllFlagsSet, (, ), ), {, break, ;]
[., taintsReturn, ), {, flags, ., setReturnsTainted, (, ), ;, }, if, (, flags, ., areAllFlagsSet, (, ), ), {]
[;, }, if, (, flags, ., areAllFlagsSet, (, ), ), {, break, ;, }, }, }, if, (, callNode, .]
[., setReturnsTainted, (, ), ;, }, if, (, flags, ., areAllFlagsSet, (, ), ), {, break, ;, }, }, }]
[), {, break, ;, }, }, }, if, (, callNode, ., isCall, (, ), ), {, Preconditions, ., checkState, (]
[., areAllFlagsSet, (, ), ), {, break, ;, }, }, }, if, (, callNode, ., isCall, (, ), ), {]
[), {, Preconditions, ., checkState, (, compiler, !=, null, ), ;, if, (, !, NodeUtil, ., functionCallHasSideEffects, (, callNode, ,]
[., isCall, (, ), ), {, Preconditions, ., checkState, (, compiler, !=, null, ), ;, if, (, !, NodeUtil, .]
[;, if, (, !, NodeUtil, ., functionCallHasSideEffects, (, callNode, ,, compiler, ), ), {, flags, ., clearSideEffectFlags, (, ), ;]
[., checkState, (, compiler, !=, null, ), ;, if, (, !, NodeUtil, ., functionCallHasSideEffects, (, callNode, ,, compiler, ), )]
[), ;, if, (, !, NodeUtil, ., functionCallHasSideEffects, (, callNode, ,, compiler, ), ), {, flags, ., clearSideEffectFlags, (, )]
[!=, null, ), ;, if, (, !, NodeUtil, ., functionCallHasSideEffects, (, callNode, ,, compiler, ), ), {, flags, ., clearSideEffectFlags]
[), ;, if, (, !, NodeUtil, ., functionCallHasSideEffects, (, callNode, ,, compiler, ), ), {, flags, ., clearSideEffectFlags, (, )]
[), {, flags, ., clearSideEffectFlags, (, ), ;, }, }, else, if, (, callNode, ., isNew, (, ), ), {]
[), {, flags, ., clearSideEffectFlags, (, ), ;, }, }, else, if, (, callNode, ., isNew, (, ), ), {]
[., functionCallHasSideEffects, (, callNode, ,, compiler, ), ), {, flags, ., clearSideEffectFlags, (, ), ;, }, }, else, if, (]
[,, compiler, ), ), {, flags, ., clearSideEffectFlags, (, ), ;, }, }, else, if, (, callNode, ., isNew, (]
[), ), {, flags, ., clearSideEffectFlags, (, ), ;, }, }, else, if, (, callNode, ., isNew, (, ), )]
[;, }, }, else, if, (, callNode, ., isNew, (, ), ), {, if, (, !, NodeUtil, ., constructorCallHasSideEffects, (]
[., clearSideEffectFlags, (, ), ;, }, }, else, if, (, callNode, ., isNew, (, ), ), {, if, (, !]
[), {, if, (, !, NodeUtil, ., constructorCallHasSideEffects, (, callNode, ), ), {, flags, ., clearSideEffectFlags, (, ), ;, }]
[., isNew, (, ), ), {, if, (, !, NodeUtil, ., constructorCallHasSideEffects, (, callNode, ), ), {, flags, ., clearSideEffectFlags]
[), {, flags, ., clearSideEffectFlags, (, ), ;, }, }, callNode, ., setSideEffectFlags, (, flags, ., valueOf, (, ), )]
[), {, flags, ., clearSideEffectFlags, (, ), ;, }, }, callNode, ., setSideEffectFlags, (, flags, ., valueOf, (, ), )]
[., constructorCallHasSideEffects, (, callNode, ), ), {, flags, ., clearSideEffectFlags, (, ), ;, }, }, callNode, ., setSideEffectFlags, (, flags]
[), ), {, flags, ., clearSideEffectFlags, (, ), ;, }, }, callNode, ., setSideEffectFlags, (, flags, ., valueOf, (, )]
[;, }, }, callNode, ., setSideEffectFlags, (, flags, ., valueOf, (, ), ), ;, }, }, private, class, FunctionAnalyzer, implements]
[., clearSideEffectFlags, (, ), ;, }, }, callNode, ., setSideEffectFlags, (, flags, ., valueOf, (, ), ), ;, }, }]
[;, }, }, private, class, FunctionAnalyzer, implements, ScopedCallback, {, private, final, boolean, inExterns, ;, FunctionAnalyzer, (, boolean, inExterns, ), {]
[., setSideEffectFlags, (, flags, ., valueOf, (, ), ), ;, }, }, private, class, FunctionAnalyzer, implements, ScopedCallback, {, private, final]
[), ;, }, }, private, class, FunctionAnalyzer, implements, ScopedCallback, {, private, final, boolean, inExterns, ;, FunctionAnalyzer, (, boolean, inExterns, )]
[., valueOf, (, ), ), ;, }, }, private, class, FunctionAnalyzer, implements, ScopedCallback, {, private, final, boolean, inExterns, ;, FunctionAnalyzer]
[=, inExterns, ;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {]
[., inExterns, =, inExterns, ;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent]
[;, }, @, Override, public, boolean, shouldTraverse, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, if, (]
[), {, Node, gramp, =, parent, ., getParent, (, ), ;, visitFunction, (, traversal, ,, node, ,, parent, ,, gramp]
[., isFunction, (, ), ), {, Node, gramp, =, parent, ., getParent, (, ), ;, visitFunction, (, traversal, ,, node]
[;, visitFunction, (, traversal, ,, node, ,, parent, ,, gramp, ), ;, }, return, true, ;, }, @, Override, public]
[., getParent, (, ), ;, visitFunction, (, traversal, ,, node, ,, parent, ,, gramp, ), ;, }, return, true, ;]
[;, }, return, true, ;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent]
[,, node, ,, parent, ,, gramp, ), ;, }, return, true, ;, }, @, Override, public, void, visit, (, NodeTraversal]
[,, parent, ,, gramp, ), ;, }, return, true, ;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,]
[,, gramp, ), ;, }, return, true, ;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node]
[), ;, }, return, true, ;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node]
[;, }, @, Override, public, void, visit, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ), {, if, (]
[), {, return, ;, }, if, (, !, NodeUtil, ., nodeTypeMayHaveSideEffects, (, node, ), &&, !, node, ., isReturn, (]
[), {, return, ;, }, if, (, node, ., isCall, (, ), ||, node, ., isNew, (, ), ), {]
[&&, !, node, ., isReturn, (, ), ), {, return, ;, }, if, (, node, ., isCall, (, ), ||]
[&&, !, node, ., isReturn, (, ), ), {, return, ;, }, if, (, node, ., isCall, (, ), ||]
[., nodeTypeMayHaveSideEffects, (, node, ), &&, !, node, ., isReturn, (, ), ), {, return, ;, }, if, (, node]
[), &&, !, node, ., isReturn, (, ), ), {, return, ;, }, if, (, node, ., isCall, (, )]
[), {, return, ;, }, if, (, node, ., isCall, (, ), ||, node, ., isNew, (, ), ), {]
[), {, return, ;, }, if, (, node, ., isCall, (, ), ||, node, ., isNew, (, ), ), {]
[., isReturn, (, ), ), {, return, ;, }, if, (, node, ., isCall, (, ), ||, node, ., isNew]
[), {, allFunctionCalls, ., add, (, node, ), ;, }, Node, enclosingFunction, =, traversal, ., getEnclosingFunction, (, ), ;, if]
[||, node, ., isNew, (, ), ), {, allFunctionCalls, ., add, (, node, ), ;, }, Node, enclosingFunction, =, traversal]
[., isCall, (, ), ||, node, ., isNew, (, ), ), {, allFunctionCalls, ., add, (, node, ), ;, }]
[), {, allFunctionCalls, ., add, (, node, ), ;, }, Node, enclosingFunction, =, traversal, ., getEnclosingFunction, (, ), ;, if]
[., isNew, (, ), ), {, allFunctionCalls, ., add, (, node, ), ;, }, Node, enclosingFunction, =, traversal, ., getEnclosingFunction]
[;, }, Node, enclosingFunction, =, traversal, ., getEnclosingFunction, (, ), ;, if, (, enclosingFunction, !=, null, ), {, FunctionInformation, sideEffectInfo]
[., add, (, node, ), ;, }, Node, enclosingFunction, =, traversal, ., getEnclosingFunction, (, ), ;, if, (, enclosingFunction, !=]
[), ;, }, Node, enclosingFunction, =, traversal, ., getEnclosingFunction, (, ), ;, if, (, enclosingFunction, !=, null, ), {, FunctionInformation]
[;, if, (, enclosingFunction, !=, null, ), {, FunctionInformation, sideEffectInfo, =, functionSideEffectMap, ., get, (, enclosingFunction, ), ;, Preconditions, .]
[., getEnclosingFunction, (, ), ;, if, (, enclosingFunction, !=, null, ), {, FunctionInformation, sideEffectInfo, =, functionSideEffectMap, ., get, (, enclosingFunction]
[), {, FunctionInformation, sideEffectInfo, =, functionSideEffectMap, ., get, (, enclosingFunction, ), ;, Preconditions, ., checkNotNull, (, sideEffectInfo, ), ;, if]
[!=, null, ), {, FunctionInformation, sideEffectInfo, =, functionSideEffectMap, ., get, (, enclosingFunction, ), ;, Preconditions, ., checkNotNull, (, sideEffectInfo, )]
[), {, FunctionInformation, sideEffectInfo, =, functionSideEffectMap, ., get, (, enclosingFunction, ), ;, Preconditions, ., checkNotNull, (, sideEffectInfo, ), ;, if]
[;, Preconditions, ., checkNotNull, (, sideEffectInfo, ), ;, if, (, NodeUtil, ., isAssignmentOp, (, node, ), ), {, visitAssignmentOrUnaryOperator, (]
[., get, (, enclosingFunction, ), ;, Preconditions, ., checkNotNull, (, sideEffectInfo, ), ;, if, (, NodeUtil, ., isAssignmentOp, (, node]
[), ;, Preconditions, ., checkNotNull, (, sideEffectInfo, ), ;, if, (, NodeUtil, ., isAssignmentOp, (, node, ), ), {, visitAssignmentOrUnaryOperator]
[;, if, (, NodeUtil, ., isAssignmentOp, (, node, ), ), {, visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,, traversal, ., getScope, (, )]
[., checkNotNull, (, sideEffectInfo, ), ;, if, (, NodeUtil, ., isAssignmentOp, (, node, ), ), {, visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,]
[), ;, if, (, NodeUtil, ., isAssignmentOp, (, node, ), ), {, visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,, traversal, ., getScope, (]
[), {, visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,, traversal, ., getScope, (, ), ,, node, ,, node, ., getFirstChild, (, ), ,]
[., isAssignmentOp, (, node, ), ), {, visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,, traversal, ., getScope, (, ), ,, node, ,, node]
[), ), {, visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,, traversal, ., getScope, (, ), ,, node, ,, node, ., getFirstChild, (, )]
[;, }, else, {, switch, (, node, ., getType, (, ), ), {, case, Token, ., CALL, :, case, Token]
[,, traversal, ., getScope, (, ), ,, node, ,, node, ., getFirstChild, (, ), ,, node, ., getLastChild, (, )]
[,, node, ,, node, ., getFirstChild, (, ), ,, node, ., getLastChild, (, ), ), ;, }, else, {, switch]
[., getScope, (, ), ,, node, ,, node, ., getFirstChild, (, ), ,, node, ., getLastChild, (, ), ), ;]
[,, node, ., getFirstChild, (, ), ,, node, ., getLastChild, (, ), ), ;, }, else, {, switch, (, node]
[,, node, ., getLastChild, (, ), ), ;, }, else, {, switch, (, node, ., getType, (, ), ), {]
[., getFirstChild, (, ), ,, node, ., getLastChild, (, ), ), ;, }, else, {, switch, (, node, ., getType]
[), ;, }, else, {, switch, (, node, ., getType, (, ), ), {, case, Token, ., CALL, :, case]
[., getLastChild, (, ), ), ;, }, else, {, switch, (, node, ., getType, (, ), ), {, case, Token]
[), {, case, Token, ., CALL, :, case, Token, ., NEW, :, visitCall, (, sideEffectInfo, ,, node, ), ;, break]
[., getType, (, ), ), {, case, Token, ., CALL, :, case, Token, ., NEW, :, visitCall, (, sideEffectInfo, ,]
[:, case, Token, ., NEW, :, visitCall, (, sideEffectInfo, ,, node, ), ;, break, ;, case, Token, ., DELPROP, :]
[., CALL, :, case, Token, ., NEW, :, visitCall, (, sideEffectInfo, ,, node, ), ;, break, ;, case, Token, .]
[:, visitCall, (, sideEffectInfo, ,, node, ), ;, break, ;, case, Token, ., DELPROP, :, case, Token, ., DEC, :]
[., NEW, :, visitCall, (, sideEffectInfo, ,, node, ), ;, break, ;, case, Token, ., DELPROP, :, case, Token, .]
[;, break, ;, case, Token, ., DELPROP, :, case, Token, ., DEC, :, case, Token, ., INC, :, visitAssignmentOrUnaryOperator, (]
[,, node, ), ;, break, ;, case, Token, ., DELPROP, :, case, Token, ., DEC, :, case, Token, ., INC]
[), ;, break, ;, case, Token, ., DELPROP, :, case, Token, ., DEC, :, case, Token, ., INC, :, visitAssignmentOrUnaryOperator]
[:, case, Token, ., DEC, :, case, Token, ., INC, :, visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,, traversal, ., getScope, (, )]
[., DELPROP, :, case, Token, ., DEC, :, case, Token, ., INC, :, visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,, traversal, ., getScope]
[:, case, Token, ., INC, :, visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,, traversal, ., getScope, (, ), ,, node, ,, node, .]
[., DEC, :, case, Token, ., INC, :, visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,, traversal, ., getScope, (, ), ,, node, ,]
[:, visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,, traversal, ., getScope, (, ), ,, node, ,, node, ., getFirstChild, (, ), ,, null]
[., INC, :, visitAssignmentOrUnaryOperator, (, sideEffectInfo, ,, traversal, ., getScope, (, ), ,, node, ,, node, ., getFirstChild, (, )]
[;, break, ;, case, Token, ., NAME, :, Preconditions, ., checkArgument, (, NodeUtil, ., isVarDeclaration, (, node, ), ), ;]
[,, traversal, ., getScope, (, ), ,, node, ,, node, ., getFirstChild, (, ), ,, null, ), ;, break, ;]
[,, node, ,, node, ., getFirstChild, (, ), ,, null, ), ;, break, ;, case, Token, ., NAME, :, Preconditions]
[., getScope, (, ), ,, node, ,, node, ., getFirstChild, (, ), ,, null, ), ;, break, ;, case, Token]
[,, node, ., getFirstChild, (, ), ,, null, ), ;, break, ;, case, Token, ., NAME, :, Preconditions, ., checkArgument]
[,, null, ), ;, break, ;, case, Token, ., NAME, :, Preconditions, ., checkArgument, (, NodeUtil, ., isVarDeclaration, (, node]
[., getFirstChild, (, ), ,, null, ), ;, break, ;, case, Token, ., NAME, :, Preconditions, ., checkArgument, (, NodeUtil]
[), ;, break, ;, case, Token, ., NAME, :, Preconditions, ., checkArgument, (, NodeUtil, ., isVarDeclaration, (, node, ), )]
[:, Preconditions, ., checkArgument, (, NodeUtil, ., isVarDeclaration, (, node, ), ), ;, Node, value, =, node, ., getFirstChild, (]
[., NAME, :, Preconditions, ., checkArgument, (, NodeUtil, ., isVarDeclaration, (, node, ), ), ;, Node, value, =, node, .]
[;, Node, value, =, node, ., getFirstChild, (, ), ;, if, (, value, !=, null, &&, !, NodeUtil, ., evaluatesToLocalValue]
[., checkArgument, (, NodeUtil, ., isVarDeclaration, (, node, ), ), ;, Node, value, =, node, ., getFirstChild, (, ), ;]
[), ;, Node, value, =, node, ., getFirstChild, (, ), ;, if, (, value, !=, null, &&, !, NodeUtil, .]
[., isVarDeclaration, (, node, ), ), ;, Node, value, =, node, ., getFirstChild, (, ), ;, if, (, value, !=]
[), ), ;, Node, value, =, node, ., getFirstChild, (, ), ;, if, (, value, !=, null, &&, !, NodeUtil]
[;, if, (, value, !=, null, &&, !, NodeUtil, ., evaluatesToLocalValue, (, value, ), ), {, Scope, scope, =, traversal]
[., getFirstChild, (, ), ;, if, (, value, !=, null, &&, !, NodeUtil, ., evaluatesToLocalValue, (, value, ), ), {]
[), {, Scope, scope, =, traversal, ., getScope, (, ), ;, Var, var, =, scope, ., getVar, (, node, .]
[&&, !, NodeUtil, ., evaluatesToLocalValue, (, value, ), ), {, Scope, scope, =, traversal, ., getScope, (, ), ;, Var]
[!=, null, &&, !, NodeUtil, ., evaluatesToLocalValue, (, value, ), ), {, Scope, scope, =, traversal, ., getScope, (, )]
[&&, !, NodeUtil, ., evaluatesToLocalValue, (, value, ), ), {, Scope, scope, =, traversal, ., getScope, (, ), ;, Var]
[), {, Scope, scope, =, traversal, ., getScope, (, ), ;, Var, var, =, scope, ., getVar, (, node, .]
[), {, Scope, scope, =, traversal, ., getScope, (, ), ;, Var, var, =, scope, ., getVar, (, node, .]
[., evaluatesToLocalValue, (, value, ), ), {, Scope, scope, =, traversal, ., getScope, (, ), ;, Var, var, =, scope]
[), ), {, Scope, scope, =, traversal, ., getScope, (, ), ;, Var, var, =, scope, ., getVar, (, node]
[;, Var, var, =, scope, ., getVar, (, node, ., getString, (, ), ), ;, sideEffectInfo, ., blacklistLocal, (, var]
[., getScope, (, ), ;, Var, var, =, scope, ., getVar, (, node, ., getString, (, ), ), ;, sideEffectInfo]
[;, sideEffectInfo, ., blacklistLocal, (, var, ), ;, }, break, ;, case, Token, ., THROW, :, visitThrow, (, sideEffectInfo, )]
[., getVar, (, node, ., getString, (, ), ), ;, sideEffectInfo, ., blacklistLocal, (, var, ), ;, }, break, ;]
[), ;, sideEffectInfo, ., blacklistLocal, (, var, ), ;, }, break, ;, case, Token, ., THROW, :, visitThrow, (, sideEffectInfo]
[., getString, (, ), ), ;, sideEffectInfo, ., blacklistLocal, (, var, ), ;, }, break, ;, case, Token, ., THROW]
[;, }, break, ;, case, Token, ., THROW, :, visitThrow, (, sideEffectInfo, ), ;, break, ;, case, Token, ., RETURN]
[., blacklistLocal, (, var, ), ;, }, break, ;, case, Token, ., THROW, :, visitThrow, (, sideEffectInfo, ), ;, break]
[), ;, }, break, ;, case, Token, ., THROW, :, visitThrow, (, sideEffectInfo, ), ;, break, ;, case, Token, .]
[:, visitThrow, (, sideEffectInfo, ), ;, break, ;, case, Token, ., RETURN, :, if, (, node, ., hasChildren, (, )]
[., THROW, :, visitThrow, (, sideEffectInfo, ), ;, break, ;, case, Token, ., RETURN, :, if, (, node, ., hasChildren]
[;, break, ;, case, Token, ., RETURN, :, if, (, node, ., hasChildren, (, ), &&, !, NodeUtil, ., evaluatesToLocalValue]
[), ;, break, ;, case, Token, ., RETURN, :, if, (, node, ., hasChildren, (, ), &&, !, NodeUtil, .]
[:, if, (, node, ., hasChildren, (, ), &&, !, NodeUtil, ., evaluatesToLocalValue, (, node, ., getFirstChild, (, ), )]
[., RETURN, :, if, (, node, ., hasChildren, (, ), &&, !, NodeUtil, ., evaluatesToLocalValue, (, node, ., getFirstChild, (]
[), {, sideEffectInfo, ., setTaintsReturn, (, ), ;, }, break, ;, default, :, throw, new, IllegalArgumentException, (, "Unhandled side effect node type ", +, Token]
[&&, !, NodeUtil, ., evaluatesToLocalValue, (, node, ., getFirstChild, (, ), ), ), {, sideEffectInfo, ., setTaintsReturn, (, ), ;]
[., hasChildren, (, ), &&, !, NodeUtil, ., evaluatesToLocalValue, (, node, ., getFirstChild, (, ), ), ), {, sideEffectInfo, .]
[), {, sideEffectInfo, ., setTaintsReturn, (, ), ;, }, break, ;, default, :, throw, new, IllegalArgumentException, (, "Unhandled side effect node type ", +, Token]
[), {, sideEffectInfo, ., setTaintsReturn, (, ), ;, }, break, ;, default, :, throw, new, IllegalArgumentException, (, "Unhandled side effect node type ", +, Token]
[., evaluatesToLocalValue, (, node, ., getFirstChild, (, ), ), ), {, sideEffectInfo, ., setTaintsReturn, (, ), ;, }, break, ;]
[), ), {, sideEffectInfo, ., setTaintsReturn, (, ), ;, }, break, ;, default, :, throw, new, IllegalArgumentException, (, "Unhandled side effect node type ", +]
[., getFirstChild, (, ), ), ), {, sideEffectInfo, ., setTaintsReturn, (, ), ;, }, break, ;, default, :, throw, new]
[;, }, break, ;, default, :, throw, new, IllegalArgumentException, (, "Unhandled side effect node type ", +, Token, ., name, (, node, ., getType, (]
[., setTaintsReturn, (, ), ;, }, break, ;, default, :, throw, new, IllegalArgumentException, (, "Unhandled side effect node type ", +, Token, ., name, (]
[;, }, }, }, }, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, }, @, Override, public, void]
[), ;, }, }, }, }, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, }, @, Override, public]
[+, Token, ., name, (, node, ., getType, (, ), ), ), ;, }, }, }, }, @, Override, public]
[), ;, }, }, }, }, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, }, @, Override, public]
[., name, (, node, ., getType, (, ), ), ), ;, }, }, }, }, @, Override, public, void, enterScope]
[), ), ;, }, }, }, }, @, Override, public, void, enterScope, (, NodeTraversal, t, ), {, }, @, Override]
[., getType, (, ), ), ), ;, }, }, }, }, @, Override, public, void, enterScope, (, NodeTraversal, t, )]
[), {, return, ;, }, FunctionInformation, sideEffectInfo, =, functionSideEffectMap, ., get, (, t, ., getScopeRoot, (, ), ), ;, if]
[., inGlobalScope, (, ), ), {, return, ;, }, FunctionInformation, sideEffectInfo, =, functionSideEffectMap, ., get, (, t, ., getScopeRoot, (]
[;, if, (, sideEffectInfo, ., mutatesGlobalState, (, ), ), {, sideEffectInfo, ., resetLocalVars, (, ), ;, return, ;, }, for]
[., get, (, t, ., getScopeRoot, (, ), ), ;, if, (, sideEffectInfo, ., mutatesGlobalState, (, ), ), {, sideEffectInfo]
[), ;, if, (, sideEffectInfo, ., mutatesGlobalState, (, ), ), {, sideEffectInfo, ., resetLocalVars, (, ), ;, return, ;, }]
[., getScopeRoot, (, ), ), ;, if, (, sideEffectInfo, ., mutatesGlobalState, (, ), ), {, sideEffectInfo, ., resetLocalVars, (, )]
[), {, sideEffectInfo, ., resetLocalVars, (, ), ;, return, ;, }, for, (, Iterator, <, Var, >, i, =, t]
[., mutatesGlobalState, (, ), ), {, sideEffectInfo, ., resetLocalVars, (, ), ;, return, ;, }, for, (, Iterator, <, Var]
[;, return, ;, }, for, (, Iterator, <, Var, >, i, =, t, ., getScope, (, ), ., getVars, (]
[., resetLocalVars, (, ), ;, return, ;, }, for, (, Iterator, <, Var, >, i, =, t, ., getScope, (]
[;, i, ., hasNext, (, ), ;, ), {, Var, v, =, i, ., next, (, ), ;, boolean, localVar]
[., getVars, (, ), ;, i, ., hasNext, (, ), ;, ), {, Var, v, =, i, ., next, (]
[., getScope, (, ), ., getVars, (, ), ;, i, ., hasNext, (, ), ;, ), {, Var, v, =]
[;, ), {, Var, v, =, i, ., next, (, ), ;, boolean, localVar, =, false, ;, if, (, v]
[., hasNext, (, ), ;, ), {, Var, v, =, i, ., next, (, ), ;, boolean, localVar, =, false]
[;, boolean, localVar, =, false, ;, if, (, v, ., getParentNode, (, ), ., isVar, (, ), ), {, sideEffectInfo]
[., next, (, ), ;, boolean, localVar, =, false, ;, if, (, v, ., getParentNode, (, ), ., isVar, (]
[;, if, (, v, ., getParentNode, (, ), ., isVar, (, ), ), {, sideEffectInfo, ., knownLocals, ., add, (]
[), {, sideEffectInfo, ., knownLocals, ., add, (, v, ., getName, (, ), ), ;, localVar, =, true, ;, }]
[., isVar, (, ), ), {, sideEffectInfo, ., knownLocals, ., add, (, v, ., getName, (, ), ), ;, localVar]
[., getParentNode, (, ), ., isVar, (, ), ), {, sideEffectInfo, ., knownLocals, ., add, (, v, ., getName, (]
[;, localVar, =, true, ;, }, if, (, !, localVar, ||, sideEffectInfo, ., blacklisted, ., contains, (, v, ), )]
[., add, (, v, ., getName, (, ), ), ;, localVar, =, true, ;, }, if, (, !, localVar, ||]
[., knownLocals, ., add, (, v, ., getName, (, ), ), ;, localVar, =, true, ;, }, if, (, !]
[), ;, localVar, =, true, ;, }, if, (, !, localVar, ||, sideEffectInfo, ., blacklisted, ., contains, (, v, )]
[., getName, (, ), ), ;, localVar, =, true, ;, }, if, (, !, localVar, ||, sideEffectInfo, ., blacklisted, .]
[=, true, ;, }, if, (, !, localVar, ||, sideEffectInfo, ., blacklisted, ., contains, (, v, ), ), {, if]
[;, }, if, (, !, localVar, ||, sideEffectInfo, ., blacklisted, ., contains, (, v, ), ), {, if, (, sideEffectInfo]
[), {, if, (, sideEffectInfo, ., taintedLocals, ., contains, (, v, ), ), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;]
[||, sideEffectInfo, ., blacklisted, ., contains, (, v, ), ), {, if, (, sideEffectInfo, ., taintedLocals, ., contains, (, v]
[||, sideEffectInfo, ., blacklisted, ., contains, (, v, ), ), {, if, (, sideEffectInfo, ., taintedLocals, ., contains, (, v]
[), {, if, (, sideEffectInfo, ., taintedLocals, ., contains, (, v, ), ), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;]
[., contains, (, v, ), ), {, if, (, sideEffectInfo, ., taintedLocals, ., contains, (, v, ), ), {, sideEffectInfo]
[., blacklisted, ., contains, (, v, ), ), {, if, (, sideEffectInfo, ., taintedLocals, ., contains, (, v, ), )]
[), ), {, if, (, sideEffectInfo, ., taintedLocals, ., contains, (, v, ), ), {, sideEffectInfo, ., setTaintsUnknown, (, )]
[), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, sideEffectInfo, ., resetLocalVars, (, ), ;, break, ;, }, }, }, sideEffectInfo]
[., contains, (, v, ), ), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, sideEffectInfo, ., resetLocalVars, (, ), ;, break]
[., taintedLocals, ., contains, (, v, ), ), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, sideEffectInfo, ., resetLocalVars, (, )]
[), ), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, sideEffectInfo, ., resetLocalVars, (, ), ;, break, ;, }, }, }]
[;, sideEffectInfo, ., resetLocalVars, (, ), ;, break, ;, }, }, }, sideEffectInfo, ., taintedLocals, =, null, ;, sideEffectInfo, .]
[., setTaintsUnknown, (, ), ;, sideEffectInfo, ., resetLocalVars, (, ), ;, break, ;, }, }, }, sideEffectInfo, ., taintedLocals, =]
[;, break, ;, }, }, }, sideEffectInfo, ., taintedLocals, =, null, ;, sideEffectInfo, ., blacklisted, =, null, ;, }, private]
[., resetLocalVars, (, ), ;, break, ;, }, }, }, sideEffectInfo, ., taintedLocals, =, null, ;, sideEffectInfo, ., blacklisted, =]
[=, null, ;, sideEffectInfo, ., blacklisted, =, null, ;, }, private, void, visitAssignmentOrUnaryOperator, (, FunctionInformation, sideEffectInfo, ,, Scope, scope, ,]
[., taintedLocals, =, null, ;, sideEffectInfo, ., blacklisted, =, null, ;, }, private, void, visitAssignmentOrUnaryOperator, (, FunctionInformation, sideEffectInfo, ,, Scope]
[;, sideEffectInfo, ., blacklisted, =, null, ;, }, private, void, visitAssignmentOrUnaryOperator, (, FunctionInformation, sideEffectInfo, ,, Scope, scope, ,, Node, op]
[=, null, ;, }, private, void, visitAssignmentOrUnaryOperator, (, FunctionInformation, sideEffectInfo, ,, Scope, scope, ,, Node, op, ,, Node, lhs, ,]
[., blacklisted, =, null, ;, }, private, void, visitAssignmentOrUnaryOperator, (, FunctionInformation, sideEffectInfo, ,, Scope, scope, ,, Node, op, ,, Node]
[;, }, private, void, visitAssignmentOrUnaryOperator, (, FunctionInformation, sideEffectInfo, ,, Scope, scope, ,, Node, op, ,, Node, lhs, ,, Node, rhs]
[), {, Var, var, =, scope, ., getVar, (, lhs, ., getString, (, ), ), ;, if, (, var, ==]
[., isName, (, ), ), {, Var, var, =, scope, ., getVar, (, lhs, ., getString, (, ), ), ;]
[;, if, (, var, ==, null, ||, var, ., scope, !=, scope, ), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;]
[., getVar, (, lhs, ., getString, (, ), ), ;, if, (, var, ==, null, ||, var, ., scope, !=]
[), ;, if, (, var, ==, null, ||, var, ., scope, !=, scope, ), {, sideEffectInfo, ., setTaintsGlobalState, (, )]
[., getString, (, ), ), ;, if, (, var, ==, null, ||, var, ., scope, !=, scope, ), {, sideEffectInfo]
[), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, else, {, Preconditions, ., checkState, (, NodeUtil, ., isAssignmentOp, (, op]
[||, var, ., scope, !=, scope, ), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, else, {, Preconditions, ., checkState]
[==, null, ||, var, ., scope, !=, scope, ), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, else, {, Preconditions]
[||, var, ., scope, !=, scope, ), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, else, {, Preconditions, ., checkState]
[), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, else, {, Preconditions, ., checkState, (, NodeUtil, ., isAssignmentOp, (, op]
[!=, scope, ), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, else, {, Preconditions, ., checkState, (, NodeUtil, ., isAssignmentOp]
[., scope, !=, scope, ), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, else, {, Preconditions, ., checkState, (, NodeUtil]
[), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, else, {, Preconditions, ., checkState, (, NodeUtil, ., isAssignmentOp, (, op]
[;, }, else, {, Preconditions, ., checkState, (, NodeUtil, ., isAssignmentOp, (, op, ), ||, isIncDec, (, op, ), ||]
[., setTaintsGlobalState, (, ), ;, }, else, {, Preconditions, ., checkState, (, NodeUtil, ., isAssignmentOp, (, op, ), ||, isIncDec]
[;, if, (, rhs, !=, null, &&, op, ., isAssign, (, ), &&, !, NodeUtil, ., evaluatesToLocalValue, (, rhs, )]
[., checkState, (, NodeUtil, ., isAssignmentOp, (, op, ), ||, isIncDec, (, op, ), ||, op, ., isDelProp, (, )]
[), ;, if, (, rhs, !=, null, &&, op, ., isAssign, (, ), &&, !, NodeUtil, ., evaluatesToLocalValue, (, rhs]
[||, op, ., isDelProp, (, ), ), ;, if, (, rhs, !=, null, &&, op, ., isAssign, (, ), &&]
[||, isIncDec, (, op, ), ||, op, ., isDelProp, (, ), ), ;, if, (, rhs, !=, null, &&, op]
[., isAssignmentOp, (, op, ), ||, isIncDec, (, op, ), ||, op, ., isDelProp, (, ), ), ;, if, (]
[), ||, isIncDec, (, op, ), ||, op, ., isDelProp, (, ), ), ;, if, (, rhs, !=, null, &&]
[||, op, ., isDelProp, (, ), ), ;, if, (, rhs, !=, null, &&, op, ., isAssign, (, ), &&]
[), ||, op, ., isDelProp, (, ), ), ;, if, (, rhs, !=, null, &&, op, ., isAssign, (, )]
[), ;, if, (, rhs, !=, null, &&, op, ., isAssign, (, ), &&, !, NodeUtil, ., evaluatesToLocalValue, (, rhs]
[., isDelProp, (, ), ), ;, if, (, rhs, !=, null, &&, op, ., isAssign, (, ), &&, !, NodeUtil]
[), {, sideEffectInfo, ., blacklistLocal, (, var, ), ;, }, }, }, else, if, (, NodeUtil, ., isGet, (, lhs]
[&&, !, NodeUtil, ., evaluatesToLocalValue, (, rhs, ), ), {, sideEffectInfo, ., blacklistLocal, (, var, ), ;, }, }, }]
[&&, op, ., isAssign, (, ), &&, !, NodeUtil, ., evaluatesToLocalValue, (, rhs, ), ), {, sideEffectInfo, ., blacklistLocal, (]
[!=, null, &&, op, ., isAssign, (, ), &&, !, NodeUtil, ., evaluatesToLocalValue, (, rhs, ), ), {, sideEffectInfo, .]
[&&, op, ., isAssign, (, ), &&, !, NodeUtil, ., evaluatesToLocalValue, (, rhs, ), ), {, sideEffectInfo, ., blacklistLocal, (]
[&&, !, NodeUtil, ., evaluatesToLocalValue, (, rhs, ), ), {, sideEffectInfo, ., blacklistLocal, (, var, ), ;, }, }, }]
[., isAssign, (, ), &&, !, NodeUtil, ., evaluatesToLocalValue, (, rhs, ), ), {, sideEffectInfo, ., blacklistLocal, (, var, )]
[), {, sideEffectInfo, ., blacklistLocal, (, var, ), ;, }, }, }, else, if, (, NodeUtil, ., isGet, (, lhs]
[), {, sideEffectInfo, ., blacklistLocal, (, var, ), ;, }, }, }, else, if, (, NodeUtil, ., isGet, (, lhs]
[., evaluatesToLocalValue, (, rhs, ), ), {, sideEffectInfo, ., blacklistLocal, (, var, ), ;, }, }, }, else, if, (]
[), ), {, sideEffectInfo, ., blacklistLocal, (, var, ), ;, }, }, }, else, if, (, NodeUtil, ., isGet, (]
[;, }, }, }, else, if, (, NodeUtil, ., isGet, (, lhs, ), ), {, if, (, lhs, ., getFirstChild]
[., blacklistLocal, (, var, ), ;, }, }, }, else, if, (, NodeUtil, ., isGet, (, lhs, ), ), {]
[), ;, }, }, }, else, if, (, NodeUtil, ., isGet, (, lhs, ), ), {, if, (, lhs, .]
[), {, if, (, lhs, ., getFirstChild, (, ), ., isThis, (, ), ), {, sideEffectInfo, ., setTaintsThis, (, )]
[., isGet, (, lhs, ), ), {, if, (, lhs, ., getFirstChild, (, ), ., isThis, (, ), ), {]
[), ), {, if, (, lhs, ., getFirstChild, (, ), ., isThis, (, ), ), {, sideEffectInfo, ., setTaintsThis, (]
[), {, sideEffectInfo, ., setTaintsThis, (, ), ;, }, else, {, Var, var, =, null, ;, Node, objectNode, =, lhs]
[., isThis, (, ), ), {, sideEffectInfo, ., setTaintsThis, (, ), ;, }, else, {, Var, var, =, null, ;]
[., getFirstChild, (, ), ., isThis, (, ), ), {, sideEffectInfo, ., setTaintsThis, (, ), ;, }, else, {, Var]
[;, }, else, {, Var, var, =, null, ;, Node, objectNode, =, lhs, ., getFirstChild, (, ), ;, if, (]
[., setTaintsThis, (, ), ;, }, else, {, Var, var, =, null, ;, Node, objectNode, =, lhs, ., getFirstChild, (]
[;, Node, objectNode, =, lhs, ., getFirstChild, (, ), ;, if, (, objectNode, ., isName, (, ), ), {, var]
[;, if, (, objectNode, ., isName, (, ), ), {, var, =, scope, ., getVar, (, objectNode, ., getString, (]
[., getFirstChild, (, ), ;, if, (, objectNode, ., isName, (, ), ), {, var, =, scope, ., getVar, (]
[), {, var, =, scope, ., getVar, (, objectNode, ., getString, (, ), ), ;, }, if, (, var, ==]
[., isName, (, ), ), {, var, =, scope, ., getVar, (, objectNode, ., getString, (, ), ), ;, }]
[=, scope, ., getVar, (, objectNode, ., getString, (, ), ), ;, }, if, (, var, ==, null, ||, var]
[;, }, if, (, var, ==, null, ||, var, ., scope, !=, scope, ), {, sideEffectInfo, ., setTaintsUnknown, (, )]
[., getVar, (, objectNode, ., getString, (, ), ), ;, }, if, (, var, ==, null, ||, var, ., scope]
[), ;, }, if, (, var, ==, null, ||, var, ., scope, !=, scope, ), {, sideEffectInfo, ., setTaintsUnknown, (]
[., getString, (, ), ), ;, }, if, (, var, ==, null, ||, var, ., scope, !=, scope, ), {]
[), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, }, else, {, sideEffectInfo, ., addTaintedLocalObject, (, var, ), ;, }, }]
[||, var, ., scope, !=, scope, ), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, }, else, {, sideEffectInfo, ., addTaintedLocalObject]
[==, null, ||, var, ., scope, !=, scope, ), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, }, else, {, sideEffectInfo]
[||, var, ., scope, !=, scope, ), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, }, else, {, sideEffectInfo, ., addTaintedLocalObject]
[), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, }, else, {, sideEffectInfo, ., addTaintedLocalObject, (, var, ), ;, }, }]
[!=, scope, ), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, }, else, {, sideEffectInfo, ., addTaintedLocalObject, (, var, ), ;]
[., scope, !=, scope, ), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, }, else, {, sideEffectInfo, ., addTaintedLocalObject, (, var]
[), {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, }, else, {, sideEffectInfo, ., addTaintedLocalObject, (, var, ), ;, }, }]
[;, }, else, {, sideEffectInfo, ., addTaintedLocalObject, (, var, ), ;, }, }, }, else, {, sideEffectInfo, ., setTaintsUnknown, (]
[., setTaintsUnknown, (, ), ;, }, else, {, sideEffectInfo, ., addTaintedLocalObject, (, var, ), ;, }, }, }, else, {]
[;, }, }, }, else, {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, }, }, private, void, visitCall, (, FunctionInformation, sideEffectInfo]
[., addTaintedLocalObject, (, var, ), ;, }, }, }, else, {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, }, }, private]
[), ;, }, }, }, else, {, sideEffectInfo, ., setTaintsUnknown, (, ), ;, }, }, private, void, visitCall, (, FunctionInformation]
[;, }, }, private, void, visitCall, (, FunctionInformation, sideEffectInfo, ,, Node, node, ), {, if, (, node, ., isCall, (]
[., setTaintsUnknown, (, ), ;, }, }, private, void, visitCall, (, FunctionInformation, sideEffectInfo, ,, Node, node, ), {, if, (]
[), {, return, ;, }, if, (, node, ., isNew, (, ), &&, !, NodeUtil, ., constructorCallHasSideEffects, (, node, )]
[&&, !, NodeUtil, ., functionCallHasSideEffects, (, node, ,, compiler, ), ), {, return, ;, }, if, (, node, ., isNew]
[., isCall, (, ), &&, !, NodeUtil, ., functionCallHasSideEffects, (, node, ,, compiler, ), ), {, return, ;, }, if]
[), {, return, ;, }, if, (, node, ., isNew, (, ), &&, !, NodeUtil, ., constructorCallHasSideEffects, (, node, )]
[), {, return, ;, }, if, (, node, ., isNew, (, ), &&, !, NodeUtil, ., constructorCallHasSideEffects, (, node, )]
[., functionCallHasSideEffects, (, node, ,, compiler, ), ), {, return, ;, }, if, (, node, ., isNew, (, ), &&]
[,, compiler, ), ), {, return, ;, }, if, (, node, ., isNew, (, ), &&, !, NodeUtil, ., constructorCallHasSideEffects]
[), ), {, return, ;, }, if, (, node, ., isNew, (, ), &&, !, NodeUtil, ., constructorCallHasSideEffects, (, node]
[), {, return, ;, }, sideEffectInfo, ., appendCall, (, node, ), ;, }, private, void, visitFunction, (, NodeTraversal, traversal, ,]
[&&, !, NodeUtil, ., constructorCallHasSideEffects, (, node, ), ), {, return, ;, }, sideEffectInfo, ., appendCall, (, node, ), ;]
[., isNew, (, ), &&, !, NodeUtil, ., constructorCallHasSideEffects, (, node, ), ), {, return, ;, }, sideEffectInfo, ., appendCall]
[), {, return, ;, }, sideEffectInfo, ., appendCall, (, node, ), ;, }, private, void, visitFunction, (, NodeTraversal, traversal, ,]
[), {, return, ;, }, sideEffectInfo, ., appendCall, (, node, ), ;, }, private, void, visitFunction, (, NodeTraversal, traversal, ,]
[., constructorCallHasSideEffects, (, node, ), ), {, return, ;, }, sideEffectInfo, ., appendCall, (, node, ), ;, }, private, void]
[), ), {, return, ;, }, sideEffectInfo, ., appendCall, (, node, ), ;, }, private, void, visitFunction, (, NodeTraversal, traversal]
[;, }, private, void, visitFunction, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ,, Node, gramp, ), {, Preconditions]
[., appendCall, (, node, ), ;, }, private, void, visitFunction, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ,]
[), ;, }, private, void, visitFunction, (, NodeTraversal, traversal, ,, Node, node, ,, Node, parent, ,, Node, gramp, ), {]
[;, FunctionInformation, sideEffectInfo, =, new, FunctionInformation, (, inExterns, ), ;, functionSideEffectMap, ., put, (, node, ,, sideEffectInfo, ), ;, if]
[., checkArgument, (, !, functionSideEffectMap, ., containsKey, (, node, ), ), ;, FunctionInformation, sideEffectInfo, =, new, FunctionInformation, (, inExterns, )]
[), ;, FunctionInformation, sideEffectInfo, =, new, FunctionInformation, (, inExterns, ), ;, functionSideEffectMap, ., put, (, node, ,, sideEffectInfo, ), ;]
[), ;, FunctionInformation, sideEffectInfo, =, new, FunctionInformation, (, inExterns, ), ;, functionSideEffectMap, ., put, (, node, ,, sideEffectInfo, ), ;]
[., containsKey, (, node, ), ), ;, FunctionInformation, sideEffectInfo, =, new, FunctionInformation, (, inExterns, ), ;, functionSideEffectMap, ., put, (]
[), ), ;, FunctionInformation, sideEffectInfo, =, new, FunctionInformation, (, inExterns, ), ;, functionSideEffectMap, ., put, (, node, ,, sideEffectInfo, )]
[;, functionSideEffectMap, ., put, (, node, ,, sideEffectInfo, ), ;, if, (, inExterns, ), {, JSType, jstype, =, node, .]
[), ;, functionSideEffectMap, ., put, (, node, ,, sideEffectInfo, ), ;, if, (, inExterns, ), {, JSType, jstype, =, node]
[;, if, (, inExterns, ), {, JSType, jstype, =, node, ., getJSType, (, ), ;, boolean, knownLocalResult, =, false, ;]
[., put, (, node, ,, sideEffectInfo, ), ;, if, (, inExterns, ), {, JSType, jstype, =, node, ., getJSType, (]
[,, sideEffectInfo, ), ;, if, (, inExterns, ), {, JSType, jstype, =, node, ., getJSType, (, ), ;, boolean, knownLocalResult]
[), ;, if, (, inExterns, ), {, JSType, jstype, =, node, ., getJSType, (, ), ;, boolean, knownLocalResult, =, false]
[), {, JSType, jstype, =, node, ., getJSType, (, ), ;, boolean, knownLocalResult, =, false, ;, FunctionType, functionType, =, JSType]
[;, boolean, knownLocalResult, =, false, ;, FunctionType, functionType, =, JSType, ., toMaybeFunctionType, (, jstype, ), ;, if, (, functionType, !=]
[., getJSType, (, ), ;, boolean, knownLocalResult, =, false, ;, FunctionType, functionType, =, JSType, ., toMaybeFunctionType, (, jstype, ), ;]
[;, FunctionType, functionType, =, JSType, ., toMaybeFunctionType, (, jstype, ), ;, if, (, functionType, !=, null, ), {, JSType, jstypeReturn]
[;, if, (, functionType, !=, null, ), {, JSType, jstypeReturn, =, functionType, ., getReturnType, (, ), ;, if, (, isLocalValueType]
[., toMaybeFunctionType, (, jstype, ), ;, if, (, functionType, !=, null, ), {, JSType, jstypeReturn, =, functionType, ., getReturnType, (]
[), ;, if, (, functionType, !=, null, ), {, JSType, jstypeReturn, =, functionType, ., getReturnType, (, ), ;, if, (]
[), {, JSType, jstypeReturn, =, functionType, ., getReturnType, (, ), ;, if, (, isLocalValueType, (, jstypeReturn, ,, true, ), )]
[!=, null, ), {, JSType, jstypeReturn, =, functionType, ., getReturnType, (, ), ;, if, (, isLocalValueType, (, jstypeReturn, ,, true]
[), {, JSType, jstypeReturn, =, functionType, ., getReturnType, (, ), ;, if, (, isLocalValueType, (, jstypeReturn, ,, true, ), )]
[;, if, (, isLocalValueType, (, jstypeReturn, ,, true, ), ), {, knownLocalResult, =, true, ;, }, }, if, (, !]
[., getReturnType, (, ), ;, if, (, isLocalValueType, (, jstypeReturn, ,, true, ), ), {, knownLocalResult, =, true, ;, }]
[), {, knownLocalResult, =, true, ;, }, }, if, (, !, knownLocalResult, ), {, sideEffectInfo, ., setTaintsReturn, (, ), ;]
[,, true, ), ), {, knownLocalResult, =, true, ;, }, }, if, (, !, knownLocalResult, ), {, sideEffectInfo, ., setTaintsReturn]
[), ), {, knownLocalResult, =, true, ;, }, }, if, (, !, knownLocalResult, ), {, sideEffectInfo, ., setTaintsReturn, (, )]
[=, true, ;, }, }, if, (, !, knownLocalResult, ), {, sideEffectInfo, ., setTaintsReturn, (, ), ;, }, }, JSDocInfo]
[;, }, }, if, (, !, knownLocalResult, ), {, sideEffectInfo, ., setTaintsReturn, (, ), ;, }, }, JSDocInfo, info, =]
[), {, sideEffectInfo, ., setTaintsReturn, (, ), ;, }, }, JSDocInfo, info, =, getJSDocInfoForFunction, (, node, ,, parent, ,, gramp]
[), {, sideEffectInfo, ., setTaintsReturn, (, ), ;, }, }, JSDocInfo, info, =, getJSDocInfoForFunction, (, node, ,, parent, ,, gramp]
[;, }, }, JSDocInfo, info, =, getJSDocInfoForFunction, (, node, ,, parent, ,, gramp, ), ;, if, (, info, !=, null]
[., setTaintsReturn, (, ), ;, }, }, JSDocInfo, info, =, getJSDocInfoForFunction, (, node, ,, parent, ,, gramp, ), ;, if]
[;, if, (, info, !=, null, ), {, boolean, hasSpecificSideEffects, =, false, ;, if, (, hasSideEffectsThisAnnotation, (, info, ), )]
[,, parent, ,, gramp, ), ;, if, (, info, !=, null, ), {, boolean, hasSpecificSideEffects, =, false, ;, if, (]
[,, gramp, ), ;, if, (, info, !=, null, ), {, boolean, hasSpecificSideEffects, =, false, ;, if, (, hasSideEffectsThisAnnotation, (]
[), ;, if, (, info, !=, null, ), {, boolean, hasSpecificSideEffects, =, false, ;, if, (, hasSideEffectsThisAnnotation, (, info, )]
[), {, boolean, hasSpecificSideEffects, =, false, ;, if, (, hasSideEffectsThisAnnotation, (, info, ), ), {, if, (, inExterns, ), {]
[!=, null, ), {, boolean, hasSpecificSideEffects, =, false, ;, if, (, hasSideEffectsThisAnnotation, (, info, ), ), {, if, (, inExterns]
[), {, boolean, hasSpecificSideEffects, =, false, ;, if, (, hasSideEffectsThisAnnotation, (, info, ), ), {, if, (, inExterns, ), {]
[;, if, (, hasSideEffectsThisAnnotation, (, info, ), ), {, if, (, inExterns, ), {, hasSpecificSideEffects, =, true, ;, sideEffectInfo, .]
[), {, if, (, inExterns, ), {, hasSpecificSideEffects, =, true, ;, sideEffectInfo, ., setTaintsThis, (, ), ;, }, else, {]
[), ), {, if, (, inExterns, ), {, hasSpecificSideEffects, =, true, ;, sideEffectInfo, ., setTaintsThis, (, ), ;, }, else]
[), {, hasSpecificSideEffects, =, true, ;, sideEffectInfo, ., setTaintsThis, (, ), ;, }, else, {, traversal, ., report, (, node]
[=, true, ;, sideEffectInfo, ., setTaintsThis, (, ), ;, }, else, {, traversal, ., report, (, node, ,, INVALID_MODIFIES_ANNOTATION, )]
[;, sideEffectInfo, ., setTaintsThis, (, ), ;, }, else, {, traversal, ., report, (, node, ,, INVALID_MODIFIES_ANNOTATION, ), ;, }]
[;, }, else, {, traversal, ., report, (, node, ,, INVALID_MODIFIES_ANNOTATION, ), ;, }, }, if, (, hasSideEffectsArgumentsAnnotation, (, info]
[., setTaintsThis, (, ), ;, }, else, {, traversal, ., report, (, node, ,, INVALID_MODIFIES_ANNOTATION, ), ;, }, }, if]
[;, }, }, if, (, hasSideEffectsArgumentsAnnotation, (, info, ), ), {, if, (, inExterns, ), {, hasSpecificSideEffects, =, true, ;]
[., report, (, node, ,, INVALID_MODIFIES_ANNOTATION, ), ;, }, }, if, (, hasSideEffectsArgumentsAnnotation, (, info, ), ), {, if, (]
[,, INVALID_MODIFIES_ANNOTATION, ), ;, }, }, if, (, hasSideEffectsArgumentsAnnotation, (, info, ), ), {, if, (, inExterns, ), {, hasSpecificSideEffects]
[), ;, }, }, if, (, hasSideEffectsArgumentsAnnotation, (, info, ), ), {, if, (, inExterns, ), {, hasSpecificSideEffects, =, true]
[), {, if, (, inExterns, ), {, hasSpecificSideEffects, =, true, ;, sideEffectInfo, ., setTaintsArguments, (, ), ;, }, else, {]
[), ), {, if, (, inExterns, ), {, hasSpecificSideEffects, =, true, ;, sideEffectInfo, ., setTaintsArguments, (, ), ;, }, else]
[), {, hasSpecificSideEffects, =, true, ;, sideEffectInfo, ., setTaintsArguments, (, ), ;, }, else, {, traversal, ., report, (, node]
[=, true, ;, sideEffectInfo, ., setTaintsArguments, (, ), ;, }, else, {, traversal, ., report, (, node, ,, INVALID_MODIFIES_ANNOTATION, )]
[;, sideEffectInfo, ., setTaintsArguments, (, ), ;, }, else, {, traversal, ., report, (, node, ,, INVALID_MODIFIES_ANNOTATION, ), ;, }]
[;, }, else, {, traversal, ., report, (, node, ,, INVALID_MODIFIES_ANNOTATION, ), ;, }, }, if, (, inExterns, &&, !]
[., setTaintsArguments, (, ), ;, }, else, {, traversal, ., report, (, node, ,, INVALID_MODIFIES_ANNOTATION, ), ;, }, }, if]
[;, }, }, if, (, inExterns, &&, !, info, ., getThrownTypes, (, ), ., isEmpty, (, ), ), {, hasSpecificSideEffects]
[., report, (, node, ,, INVALID_MODIFIES_ANNOTATION, ), ;, }, }, if, (, inExterns, &&, !, info, ., getThrownTypes, (, )]
[,, INVALID_MODIFIES_ANNOTATION, ), ;, }, }, if, (, inExterns, &&, !, info, ., getThrownTypes, (, ), ., isEmpty, (, )]
[), ;, }, }, if, (, inExterns, &&, !, info, ., getThrownTypes, (, ), ., isEmpty, (, ), ), {]
[), {, hasSpecificSideEffects, =, true, ;, sideEffectInfo, ., setFunctionThrows, (, ), ;, }, if, (, !, hasSpecificSideEffects, ), {, if]
[&&, !, info, ., getThrownTypes, (, ), ., isEmpty, (, ), ), {, hasSpecificSideEffects, =, true, ;, sideEffectInfo, ., setFunctionThrows]
[), {, hasSpecificSideEffects, =, true, ;, sideEffectInfo, ., setFunctionThrows, (, ), ;, }, if, (, !, hasSpecificSideEffects, ), {, if]
[), {, hasSpecificSideEffects, =, true, ;, sideEffectInfo, ., setFunctionThrows, (, ), ;, }, if, (, !, hasSpecificSideEffects, ), {, if]
[., isEmpty, (, ), ), {, hasSpecificSideEffects, =, true, ;, sideEffectInfo, ., setFunctionThrows, (, ), ;, }, if, (, !]
[., getThrownTypes, (, ), ., isEmpty, (, ), ), {, hasSpecificSideEffects, =, true, ;, sideEffectInfo, ., setFunctionThrows, (, ), ;]
[=, true, ;, sideEffectInfo, ., setFunctionThrows, (, ), ;, }, if, (, !, hasSpecificSideEffects, ), {, if, (, hasNoSideEffectsAnnotation, (]
[;, sideEffectInfo, ., setFunctionThrows, (, ), ;, }, if, (, !, hasSpecificSideEffects, ), {, if, (, hasNoSideEffectsAnnotation, (, info, )]
[;, }, if, (, !, hasSpecificSideEffects, ), {, if, (, hasNoSideEffectsAnnotation, (, info, ), ), {, if, (, inExterns, )]
[., setFunctionThrows, (, ), ;, }, if, (, !, hasSpecificSideEffects, ), {, if, (, hasNoSideEffectsAnnotation, (, info, ), ), {]
[), {, if, (, hasNoSideEffectsAnnotation, (, info, ), ), {, if, (, inExterns, ), {, sideEffectInfo, ., setIsPure, (, )]
[), {, if, (, hasNoSideEffectsAnnotation, (, info, ), ), {, if, (, inExterns, ), {, sideEffectInfo, ., setIsPure, (, )]
[), {, if, (, inExterns, ), {, sideEffectInfo, ., setIsPure, (, ), ;, }, else, {, traversal, ., report, (]
[), ), {, if, (, inExterns, ), {, sideEffectInfo, ., setIsPure, (, ), ;, }, else, {, traversal, ., report]
[), {, sideEffectInfo, ., setIsPure, (, ), ;, }, else, {, traversal, ., report, (, node, ,, INVALID_NO_SIDE_EFFECT_ANNOTATION, ), ;]
[;, }, else, {, traversal, ., report, (, node, ,, INVALID_NO_SIDE_EFFECT_ANNOTATION, ), ;, }, }, else, if, (, inExterns, )]
[., setIsPure, (, ), ;, }, else, {, traversal, ., report, (, node, ,, INVALID_NO_SIDE_EFFECT_ANNOTATION, ), ;, }, }, else]
[;, }, }, else, if, (, inExterns, ), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, }, }, else, {]
[., report, (, node, ,, INVALID_NO_SIDE_EFFECT_ANNOTATION, ), ;, }, }, else, if, (, inExterns, ), {, sideEffectInfo, ., setTaintsGlobalState, (]
[,, INVALID_NO_SIDE_EFFECT_ANNOTATION, ), ;, }, }, else, if, (, inExterns, ), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, }]
[), ;, }, }, else, if, (, inExterns, ), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, }, }, else]
[), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, }, }, else, {, if, (, inExterns, ), {, sideEffectInfo, .]
[;, }, }, }, else, {, if, (, inExterns, ), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, }, }]
[., setTaintsGlobalState, (, ), ;, }, }, }, else, {, if, (, inExterns, ), {, sideEffectInfo, ., setTaintsGlobalState, (, )]
[), {, sideEffectInfo, ., setTaintsGlobalState, (, ), ;, }, }, }, private, boolean, isLocalValueType, (, JSType, jstype, ,, boolean, recurse]
[;, }, }, }, private, boolean, isLocalValueType, (, JSType, jstype, ,, boolean, recurse, ), {, Preconditions, ., checkNotNull, (, jstype]
[., setTaintsGlobalState, (, ), ;, }, }, }, private, boolean, isLocalValueType, (, JSType, jstype, ,, boolean, recurse, ), {, Preconditions]
[;, JSType, subtype, =, jstype, ., getGreatestSubtype, (, compiler, ., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, )]
[., checkNotNull, (, jstype, ), ;, JSType, subtype, =, jstype, ., getGreatestSubtype, (, compiler, ., getTypeRegistry, (, ), ., getNativeType]
[), ;, JSType, subtype, =, jstype, ., getGreatestSubtype, (, compiler, ., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE]
[;, return, subtype, ., isNoType, (, ), ;, }, private, void, visitThrow, (, FunctionInformation, sideEffectInfo, ), {, sideEffectInfo, ., setFunctionThrows]
[., getGreatestSubtype, (, compiler, ., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ;, return, subtype, .]
[), ;, return, subtype, ., isNoType, (, ), ;, }, private, void, visitThrow, (, FunctionInformation, sideEffectInfo, ), {, sideEffectInfo, .]
[., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ;, return, subtype, ., isNoType, (, ), ;, }, private, void, visitThrow]
[., getTypeRegistry, (, ), ., getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ;, return, subtype, ., isNoType, (, ), ;]
[), ), ;, return, subtype, ., isNoType, (, ), ;, }, private, void, visitThrow, (, FunctionInformation, sideEffectInfo, ), {, sideEffectInfo]
[., OBJECT_TYPE, ), ), ;, return, subtype, ., isNoType, (, ), ;, }, private, void, visitThrow, (, FunctionInformation, sideEffectInfo, )]
[;, }, private, void, visitThrow, (, FunctionInformation, sideEffectInfo, ), {, sideEffectInfo, ., setFunctionThrows, (, ), ;, }, private, JSDocInfo, getJSDocInfoForFunction]
[., isNoType, (, ), ;, }, private, void, visitThrow, (, FunctionInformation, sideEffectInfo, ), {, sideEffectInfo, ., setFunctionThrows, (, ), ;]
[;, }, private, JSDocInfo, getJSDocInfoForFunction, (, Node, node, ,, Node, parent, ,, Node, gramp, ), {, JSDocInfo, info, =, node]
[., setFunctionThrows, (, ), ;, }, private, JSDocInfo, getJSDocInfoForFunction, (, Node, node, ,, Node, parent, ,, Node, gramp, ), {]
[;, if, (, info, !=, null, ), {, return, info, ;, }, else, if, (, parent, ., isName, (, )]
[., getJSDocInfo, (, ), ;, if, (, info, !=, null, ), {, return, info, ;, }, else, if, (, parent]
[), {, return, info, ;, }, else, if, (, parent, ., isName, (, ), ), {, return, gramp, ., hasOneChild]
[!=, null, ), {, return, info, ;, }, else, if, (, parent, ., isName, (, ), ), {, return, gramp]
[), {, return, info, ;, }, else, if, (, parent, ., isName, (, ), ), {, return, gramp, ., hasOneChild]
[;, }, else, if, (, parent, ., isName, (, ), ), {, return, gramp, ., hasOneChild, (, ), ?, gramp]
[), {, return, gramp, ., hasOneChild, (, ), ?, gramp, ., getJSDocInfo, (, ), :, null, ;, }, else, if]
[., isName, (, ), ), {, return, gramp, ., hasOneChild, (, ), ?, gramp, ., getJSDocInfo, (, ), :, null]
[;, }, else, if, (, parent, ., isAssign, (, ), ), {, return, parent, ., getJSDocInfo, (, ), ;, }]
[?, gramp, ., getJSDocInfo, (, ), :, null, ;, }, else, if, (, parent, ., isAssign, (, ), ), {]
[., hasOneChild, (, ), ?, gramp, ., getJSDocInfo, (, ), :, null, ;, }, else, if, (, parent, ., isAssign]
[:, null, ;, }, else, if, (, parent, ., isAssign, (, ), ), {, return, parent, ., getJSDocInfo, (, )]
[., getJSDocInfo, (, ), :, null, ;, }, else, if, (, parent, ., isAssign, (, ), ), {, return, parent]
[;, }, else, if, (, parent, ., isAssign, (, ), ), {, return, parent, ., getJSDocInfo, (, ), ;, }]
[), {, return, parent, ., getJSDocInfo, (, ), ;, }, else, {, return, null, ;, }, }, private, boolean, hasNoSideEffectsAnnotation]
[., isAssign, (, ), ), {, return, parent, ., getJSDocInfo, (, ), ;, }, else, {, return, null, ;, }]
[;, }, else, {, return, null, ;, }, }, private, boolean, hasNoSideEffectsAnnotation, (, JSDocInfo, docInfo, ), {, Preconditions, ., checkNotNull]
[., getJSDocInfo, (, ), ;, }, else, {, return, null, ;, }, }, private, boolean, hasNoSideEffectsAnnotation, (, JSDocInfo, docInfo, )]
[;, }, }, private, boolean, hasNoSideEffectsAnnotation, (, JSDocInfo, docInfo, ), {, Preconditions, ., checkNotNull, (, docInfo, ), ;, return, docInfo]
[;, return, docInfo, ., isNoSideEffects, (, ), ;, }, private, boolean, hasSideEffectsThisAnnotation, (, JSDocInfo, docInfo, ), {, Preconditions, ., checkNotNull]
[., checkNotNull, (, docInfo, ), ;, return, docInfo, ., isNoSideEffects, (, ), ;, }, private, boolean, hasSideEffectsThisAnnotation, (, JSDocInfo, docInfo]
[), ;, return, docInfo, ., isNoSideEffects, (, ), ;, }, private, boolean, hasSideEffectsThisAnnotation, (, JSDocInfo, docInfo, ), {, Preconditions, .]
[;, }, private, boolean, hasSideEffectsThisAnnotation, (, JSDocInfo, docInfo, ), {, Preconditions, ., checkNotNull, (, docInfo, ), ;, return, (, docInfo]
[., isNoSideEffects, (, ), ;, }, private, boolean, hasSideEffectsThisAnnotation, (, JSDocInfo, docInfo, ), {, Preconditions, ., checkNotNull, (, docInfo, )]
[;, return, (, docInfo, ., getModifies, (, ), ., contains, (, "this", ), ), ;, }, private, boolean, hasSideEffectsArgumentsAnnotation, (]
[., checkNotNull, (, docInfo, ), ;, return, (, docInfo, ., getModifies, (, ), ., contains, (, "this", ), ), ;]
[), ;, return, (, docInfo, ., getModifies, (, ), ., contains, (, "this", ), ), ;, }, private, boolean, hasSideEffectsArgumentsAnnotation]
[;, }, private, boolean, hasSideEffectsArgumentsAnnotation, (, JSDocInfo, docInfo, ), {, Preconditions, ., checkNotNull, (, docInfo, ), ;, Set, <, String]
[), ;, }, private, boolean, hasSideEffectsArgumentsAnnotation, (, JSDocInfo, docInfo, ), {, Preconditions, ., checkNotNull, (, docInfo, ), ;, Set, <]
[., contains, (, "this", ), ), ;, }, private, boolean, hasSideEffectsArgumentsAnnotation, (, JSDocInfo, docInfo, ), {, Preconditions, ., checkNotNull, (]
[., getModifies, (, ), ., contains, (, "this", ), ), ;, }, private, boolean, hasSideEffectsArgumentsAnnotation, (, JSDocInfo, docInfo, ), {]
[), ), ;, }, private, boolean, hasSideEffectsArgumentsAnnotation, (, JSDocInfo, docInfo, ), {, Preconditions, ., checkNotNull, (, docInfo, ), ;, Set]
[;, Set, <, String, >, modifies, =, docInfo, ., getModifies, (, ), ;, return, (, modifies, ., size, (, )]
[., checkNotNull, (, docInfo, ), ;, Set, <, String, >, modifies, =, docInfo, ., getModifies, (, ), ;, return, (]
[), ;, Set, <, String, >, modifies, =, docInfo, ., getModifies, (, ), ;, return, (, modifies, ., size, (]
[;, return, (, modifies, ., size, (, ), >, 1, ||, (, modifies, ., size, (, ), ==, 1, &&]
[., getModifies, (, ), ;, return, (, modifies, ., size, (, ), >, 1, ||, (, modifies, ., size, (]
[;, }, }, private, static, boolean, isIncDec, (, Node, n, ), {, int, type, =, n, ., getType, (, )]
[), ;, }, }, private, static, boolean, isIncDec, (, Node, n, ), {, int, type, =, n, ., getType, (]
[||, (, modifies, ., size, (, ), ==, 1, &&, !, modifies, ., contains, (, "this", ), ), ), ;]
[>, 1, ||, (, modifies, ., size, (, ), ==, 1, &&, !, modifies, ., contains, (, "this", ), )]
[., size, (, ), >, 1, ||, (, modifies, ., size, (, ), ==, 1, &&, !, modifies, ., contains]
[||, (, modifies, ., size, (, ), ==, 1, &&, !, modifies, ., contains, (, "this", ), ), ), ;]
[), ;, }, }, private, static, boolean, isIncDec, (, Node, n, ), {, int, type, =, n, ., getType, (]
[), ), ;, }, }, private, static, boolean, isIncDec, (, Node, n, ), {, int, type, =, n, ., getType]
[&&, !, modifies, ., contains, (, "this", ), ), ), ;, }, }, private, static, boolean, isIncDec, (, Node, n]
[==, 1, &&, !, modifies, ., contains, (, "this", ), ), ), ;, }, }, private, static, boolean, isIncDec, (]
[., size, (, ), ==, 1, &&, !, modifies, ., contains, (, "this", ), ), ), ;, }, }, private]
[&&, !, modifies, ., contains, (, "this", ), ), ), ;, }, }, private, static, boolean, isIncDec, (, Node, n]
[), ), ;, }, }, private, static, boolean, isIncDec, (, Node, n, ), {, int, type, =, n, ., getType]
[), ), ;, }, }, private, static, boolean, isIncDec, (, Node, n, ), {, int, type, =, n, ., getType]
[., contains, (, "this", ), ), ), ;, }, }, private, static, boolean, isIncDec, (, Node, n, ), {, int]
[), ), ), ;, }, }, private, static, boolean, isIncDec, (, Node, n, ), {, int, type, =, n, .]
[;, return, (, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC, ), ;, }, @, SuppressWarnings, (]
[., getType, (, ), ;, return, (, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC, ), ;]
[;, }, @, SuppressWarnings, (, "unused", ), private, static, boolean, isKnownLocalValue, (, final, Node, value, ), {, Predicate, <, Node]
[), ;, }, @, SuppressWarnings, (, "unused", ), private, static, boolean, isKnownLocalValue, (, final, Node, value, ), {, Predicate, <]
[||, type, ==, Token, ., DEC, ), ;, }, @, SuppressWarnings, (, "unused", ), private, static, boolean, isKnownLocalValue, (, final]
[==, Token, ., INC, ||, type, ==, Token, ., DEC, ), ;, }, @, SuppressWarnings, (, "unused", ), private, static]
[||, type, ==, Token, ., DEC, ), ;, }, @, SuppressWarnings, (, "unused", ), private, static, boolean, isKnownLocalValue, (, final]
[., INC, ||, type, ==, Token, ., DEC, ), ;, }, @, SuppressWarnings, (, "unused", ), private, static, boolean, isKnownLocalValue]
[), ;, }, @, SuppressWarnings, (, "unused", ), private, static, boolean, isKnownLocalValue, (, final, Node, value, ), {, Predicate, <]
[==, Token, ., DEC, ), ;, }, @, SuppressWarnings, (, "unused", ), private, static, boolean, isKnownLocalValue, (, final, Node, value]
[), ;, }, @, SuppressWarnings, (, "unused", ), private, static, boolean, isKnownLocalValue, (, final, Node, value, ), {, Predicate, <]
[., DEC, ), ;, }, @, SuppressWarnings, (, "unused", ), private, static, boolean, isKnownLocalValue, (, final, Node, value, ), {]
[private, static, boolean, isKnownLocalValue, (, final, Node, value, ), {, Predicate, <, Node, >, taintingPredicate, =, new, Predicate, <, Node]
[), private, static, boolean, isKnownLocalValue, (, final, Node, value, ), {, Predicate, <, Node, >, taintingPredicate, =, new, Predicate, <]
[;, return, NodeUtil, ., evaluatesToLocalValue, (, value, ,, taintingPredicate, ), ;, }, private, static, class, SideEffectPropagationCallback, implements, EdgeCallback, <, FunctionInformation]
[), {, case, Token, ., ASSIGN, :, return, false, ;, case, Token, ., THIS, :, return, false, ;, case, Token]
[., getType, (, ), ), {, case, Token, ., ASSIGN, :, return, false, ;, case, Token, ., THIS, :, return]
[:, return, false, ;, case, Token, ., THIS, :, return, false, ;, case, Token, ., NAME, :, return, false, ;]
[., ASSIGN, :, return, false, ;, case, Token, ., THIS, :, return, false, ;, case, Token, ., NAME, :, return]
[;, case, Token, ., THIS, :, return, false, ;, case, Token, ., NAME, :, return, false, ;, case, Token, .]
[:, return, false, ;, case, Token, ., NAME, :, return, false, ;, case, Token, ., GETELEM, :, case, Token, .]
[., THIS, :, return, false, ;, case, Token, ., NAME, :, return, false, ;, case, Token, ., GETELEM, :, case]
[;, case, Token, ., NAME, :, return, false, ;, case, Token, ., GETELEM, :, case, Token, ., GETPROP, :, return]
[:, return, false, ;, case, Token, ., GETELEM, :, case, Token, ., GETPROP, :, return, false, ;, case, Token, .]
[., NAME, :, return, false, ;, case, Token, ., GETELEM, :, case, Token, ., GETPROP, :, return, false, ;, case]
[;, case, Token, ., GETELEM, :, case, Token, ., GETPROP, :, return, false, ;, case, Token, ., CALL, :, return]
[:, case, Token, ., GETPROP, :, return, false, ;, case, Token, ., CALL, :, return, false, ;, }, return, false]
[., GETELEM, :, case, Token, ., GETPROP, :, return, false, ;, case, Token, ., CALL, :, return, false, ;, }]
[:, return, false, ;, case, Token, ., CALL, :, return, false, ;, }, return, false, ;, }, }, ;, return]
[., GETPROP, :, return, false, ;, case, Token, ., CALL, :, return, false, ;, }, return, false, ;, }, }]
[;, case, Token, ., CALL, :, return, false, ;, }, return, false, ;, }, }, ;, return, NodeUtil, ., evaluatesToLocalValue]
[:, return, false, ;, }, return, false, ;, }, }, ;, return, NodeUtil, ., evaluatesToLocalValue, (, value, ,, taintingPredicate, )]
[., CALL, :, return, false, ;, }, return, false, ;, }, }, ;, return, NodeUtil, ., evaluatesToLocalValue, (, value, ,]
[;, }, return, false, ;, }, }, ;, return, NodeUtil, ., evaluatesToLocalValue, (, value, ,, taintingPredicate, ), ;, }, private]
[;, }, }, ;, return, NodeUtil, ., evaluatesToLocalValue, (, value, ,, taintingPredicate, ), ;, }, private, static, class, SideEffectPropagationCallback, implements]
[;, }, private, static, class, SideEffectPropagationCallback, implements, EdgeCallback, <, FunctionInformation, ,, Node, >, {, @, Override, public, boolean, traverseEdge, (]
[., evaluatesToLocalValue, (, value, ,, taintingPredicate, ), ;, }, private, static, class, SideEffectPropagationCallback, implements, EdgeCallback, <, FunctionInformation, ,, Node, >]
[,, taintingPredicate, ), ;, }, private, static, class, SideEffectPropagationCallback, implements, EdgeCallback, <, FunctionInformation, ,, Node, >, {, @, Override, public]
[), ;, }, private, static, class, SideEffectPropagationCallback, implements, EdgeCallback, <, FunctionInformation, ,, Node, >, {, @, Override, public, boolean, traverseEdge]
[;, boolean, changed, =, false, ;, if, (, !, caller, ., mutatesGlobalState, (, ), &&, callee, ., mutatesGlobalState, (, )]
[., checkArgument, (, callSite, ., isCall, (, ), ||, callSite, ., isNew, (, ), ), ;, boolean, changed, =, false]
[), ;, boolean, changed, =, false, ;, if, (, !, caller, ., mutatesGlobalState, (, ), &&, callee, ., mutatesGlobalState, (]
[||, callSite, ., isNew, (, ), ), ;, boolean, changed, =, false, ;, if, (, !, caller, ., mutatesGlobalState, (]
[., isCall, (, ), ||, callSite, ., isNew, (, ), ), ;, boolean, changed, =, false, ;, if, (, !]
[), ;, boolean, changed, =, false, ;, if, (, !, caller, ., mutatesGlobalState, (, ), &&, callee, ., mutatesGlobalState, (]
[., isNew, (, ), ), ;, boolean, changed, =, false, ;, if, (, !, caller, ., mutatesGlobalState, (, ), &&]
[;, if, (, !, caller, ., mutatesGlobalState, (, ), &&, callee, ., mutatesGlobalState, (, ), ), {, caller, ., setTaintsGlobalState]
[), {, caller, ., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, if, (, !, caller, ., functionThrows, (]
[&&, callee, ., mutatesGlobalState, (, ), ), {, caller, ., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, if]
[&&, callee, ., mutatesGlobalState, (, ), ), {, caller, ., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, if]
[., mutatesGlobalState, (, ), &&, callee, ., mutatesGlobalState, (, ), ), {, caller, ., setTaintsGlobalState, (, ), ;, changed, =]
[), {, caller, ., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, if, (, !, caller, ., functionThrows, (]
[., mutatesGlobalState, (, ), ), {, caller, ., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, if, (, !]
[;, changed, =, true, ;, }, if, (, !, caller, ., functionThrows, (, ), &&, callee, ., functionThrows, (, )]
[., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, if, (, !, caller, ., functionThrows, (, ), &&, callee]
[=, true, ;, }, if, (, !, caller, ., functionThrows, (, ), &&, callee, ., functionThrows, (, ), ), {]
[;, }, if, (, !, caller, ., functionThrows, (, ), &&, callee, ., functionThrows, (, ), ), {, caller, .]
[), {, caller, ., setFunctionThrows, (, ), ;, changed, =, true, ;, }, if, (, callee, ., mutatesThis, (, )]
[&&, callee, ., functionThrows, (, ), ), {, caller, ., setFunctionThrows, (, ), ;, changed, =, true, ;, }, if]
[&&, callee, ., functionThrows, (, ), ), {, caller, ., setFunctionThrows, (, ), ;, changed, =, true, ;, }, if]
[., functionThrows, (, ), &&, callee, ., functionThrows, (, ), ), {, caller, ., setFunctionThrows, (, ), ;, changed, =]
[), {, caller, ., setFunctionThrows, (, ), ;, changed, =, true, ;, }, if, (, callee, ., mutatesThis, (, )]
[., functionThrows, (, ), ), {, caller, ., setFunctionThrows, (, ), ;, changed, =, true, ;, }, if, (, callee]
[;, changed, =, true, ;, }, if, (, callee, ., mutatesThis, (, ), ), {, if, (, !, callSite, .]
[., setFunctionThrows, (, ), ;, changed, =, true, ;, }, if, (, callee, ., mutatesThis, (, ), ), {, if]
[=, true, ;, }, if, (, callee, ., mutatesThis, (, ), ), {, if, (, !, callSite, ., isNew, (]
[;, }, if, (, callee, ., mutatesThis, (, ), ), {, if, (, !, callSite, ., isNew, (, ), )]
[), {, if, (, !, callSite, ., isNew, (, ), ), {, Node, objectNode, =, getCallThisObject, (, callSite, ), ;]
[., mutatesThis, (, ), ), {, if, (, !, callSite, ., isNew, (, ), ), {, Node, objectNode, =, getCallThisObject]
[), {, Node, objectNode, =, getCallThisObject, (, callSite, ), ;, if, (, objectNode, !=, null, &&, objectNode, ., isName, (]
[), {, Node, objectNode, =, getCallThisObject, (, callSite, ), ;, if, (, objectNode, !=, null, &&, objectNode, ., isName, (]
[., isNew, (, ), ), {, Node, objectNode, =, getCallThisObject, (, callSite, ), ;, if, (, objectNode, !=, null, &&]
[;, if, (, objectNode, !=, null, &&, objectNode, ., isName, (, ), &&, !, isCallOrApply, (, callSite, ), ), {]
[), ;, if, (, objectNode, !=, null, &&, objectNode, ., isName, (, ), &&, !, isCallOrApply, (, callSite, ), )]
[), {, String, name, =, objectNode, ., getString, (, ), ;, if, (, !, caller, ., mutatesGlobalState, (, ), )]
[&&, !, isCallOrApply, (, callSite, ), ), {, String, name, =, objectNode, ., getString, (, ), ;, if, (, !]
[&&, objectNode, ., isName, (, ), &&, !, isCallOrApply, (, callSite, ), ), {, String, name, =, objectNode, ., getString]
[!=, null, &&, objectNode, ., isName, (, ), &&, !, isCallOrApply, (, callSite, ), ), {, String, name, =, objectNode]
[&&, objectNode, ., isName, (, ), &&, !, isCallOrApply, (, callSite, ), ), {, String, name, =, objectNode, ., getString]
[&&, !, isCallOrApply, (, callSite, ), ), {, String, name, =, objectNode, ., getString, (, ), ;, if, (, !]
[., isName, (, ), &&, !, isCallOrApply, (, callSite, ), ), {, String, name, =, objectNode, ., getString, (, )]
[), {, String, name, =, objectNode, ., getString, (, ), ;, if, (, !, caller, ., mutatesGlobalState, (, ), )]
[), {, String, name, =, objectNode, ., getString, (, ), ;, if, (, !, caller, ., mutatesGlobalState, (, ), )]
[), ), {, String, name, =, objectNode, ., getString, (, ), ;, if, (, !, caller, ., mutatesGlobalState, (, )]
[;, if, (, !, caller, ., mutatesGlobalState, (, ), ), {, caller, ., setTaintsGlobalState, (, ), ;, changed, =, true]
[., getString, (, ), ;, if, (, !, caller, ., mutatesGlobalState, (, ), ), {, caller, ., setTaintsGlobalState, (, )]
[), {, caller, ., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, }, else, if, (, objectNode, !=, null]
[), {, caller, ., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, }, else, if, (, objectNode, !=, null]
[., mutatesGlobalState, (, ), ), {, caller, ., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, }, else, if]
[;, changed, =, true, ;, }, }, else, if, (, objectNode, !=, null, &&, objectNode, ., isThis, (, ), )]
[., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, }, else, if, (, objectNode, !=, null, &&, objectNode, .]
[=, true, ;, }, }, else, if, (, objectNode, !=, null, &&, objectNode, ., isThis, (, ), ), {, if]
[;, }, }, else, if, (, objectNode, !=, null, &&, objectNode, ., isThis, (, ), ), {, if, (, !]
[), {, if, (, !, caller, ., mutatesThis, (, ), ), {, caller, ., setTaintsThis, (, ), ;, changed, =]
[&&, objectNode, ., isThis, (, ), ), {, if, (, !, caller, ., mutatesThis, (, ), ), {, caller, .]
[!=, null, &&, objectNode, ., isThis, (, ), ), {, if, (, !, caller, ., mutatesThis, (, ), ), {]
[&&, objectNode, ., isThis, (, ), ), {, if, (, !, caller, ., mutatesThis, (, ), ), {, caller, .]
[), {, if, (, !, caller, ., mutatesThis, (, ), ), {, caller, ., setTaintsThis, (, ), ;, changed, =]
[., isThis, (, ), ), {, if, (, !, caller, ., mutatesThis, (, ), ), {, caller, ., setTaintsThis, (]
[), {, caller, ., setTaintsThis, (, ), ;, changed, =, true, ;, }, }, else, if, (, objectNode, !=, null]
[), {, caller, ., setTaintsThis, (, ), ;, changed, =, true, ;, }, }, else, if, (, objectNode, !=, null]
[., mutatesThis, (, ), ), {, caller, ., setTaintsThis, (, ), ;, changed, =, true, ;, }, }, else, if]
[;, changed, =, true, ;, }, }, else, if, (, objectNode, !=, null, &&, NodeUtil, ., evaluatesToLocalValue, (, objectNode, )]
[., setTaintsThis, (, ), ;, changed, =, true, ;, }, }, else, if, (, objectNode, !=, null, &&, NodeUtil, .]
[=, true, ;, }, }, else, if, (, objectNode, !=, null, &&, NodeUtil, ., evaluatesToLocalValue, (, objectNode, ), &&, !]
[;, }, }, else, if, (, objectNode, !=, null, &&, NodeUtil, ., evaluatesToLocalValue, (, objectNode, ), &&, !, isCallOrApply, (]
[), {, }, else, if, (, !, caller, ., mutatesGlobalState, (, ), ), {, caller, ., setTaintsGlobalState, (, ), ;]
[&&, !, isCallOrApply, (, callSite, ), ), {, }, else, if, (, !, caller, ., mutatesGlobalState, (, ), ), {]
[&&, NodeUtil, ., evaluatesToLocalValue, (, objectNode, ), &&, !, isCallOrApply, (, callSite, ), ), {, }, else, if, (, !]
[!=, null, &&, NodeUtil, ., evaluatesToLocalValue, (, objectNode, ), &&, !, isCallOrApply, (, callSite, ), ), {, }, else, if]
[&&, NodeUtil, ., evaluatesToLocalValue, (, objectNode, ), &&, !, isCallOrApply, (, callSite, ), ), {, }, else, if, (, !]
[&&, !, isCallOrApply, (, callSite, ), ), {, }, else, if, (, !, caller, ., mutatesGlobalState, (, ), ), {]
[., evaluatesToLocalValue, (, objectNode, ), &&, !, isCallOrApply, (, callSite, ), ), {, }, else, if, (, !, caller, .]
[), &&, !, isCallOrApply, (, callSite, ), ), {, }, else, if, (, !, caller, ., mutatesGlobalState, (, ), )]
[), {, }, else, if, (, !, caller, ., mutatesGlobalState, (, ), ), {, caller, ., setTaintsGlobalState, (, ), ;]
[), {, }, else, if, (, !, caller, ., mutatesGlobalState, (, ), ), {, caller, ., setTaintsGlobalState, (, ), ;]
[), ), {, }, else, if, (, !, caller, ., mutatesGlobalState, (, ), ), {, caller, ., setTaintsGlobalState, (, )]
[), {, caller, ., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, }, }, return, changed, ;, }, }]
[), {, caller, ., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, }, }, return, changed, ;, }, }]
[., mutatesGlobalState, (, ), ), {, caller, ., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, }, }, return]
[;, changed, =, true, ;, }, }, }, return, changed, ;, }, }, private, static, Node, getCallThisObject, (, Node, callSite]
[., setTaintsGlobalState, (, ), ;, changed, =, true, ;, }, }, }, return, changed, ;, }, }, private, static, Node]
[=, true, ;, }, }, }, return, changed, ;, }, }, private, static, Node, getCallThisObject, (, Node, callSite, ), {]
[;, }, }, }, return, changed, ;, }, }, private, static, Node, getCallThisObject, (, Node, callSite, ), {, Node, callTarget]
[;, }, }, private, static, Node, getCallThisObject, (, Node, callSite, ), {, Node, callTarget, =, callSite, ., getFirstChild, (, )]
[;, if, (, !, NodeUtil, ., isGet, (, callTarget, ), ), {, return, null, ;, }, String, propString, =, callTarget]
[., getFirstChild, (, ), ;, if, (, !, NodeUtil, ., isGet, (, callTarget, ), ), {, return, null, ;, }]
[), {, return, null, ;, }, String, propString, =, callTarget, ., getLastChild, (, ), ., getString, (, ), ;, if]
[), {, return, null, ;, }, String, propString, =, callTarget, ., getLastChild, (, ), ., getString, (, ), ;, if]
[., isGet, (, callTarget, ), ), {, return, null, ;, }, String, propString, =, callTarget, ., getLastChild, (, ), .]
[), ), {, return, null, ;, }, String, propString, =, callTarget, ., getLastChild, (, ), ., getString, (, ), ;]
[;, }, String, propString, =, callTarget, ., getLastChild, (, ), ., getString, (, ), ;, if, (, propString, ., equals]
[;, if, (, propString, ., equals, (, "call", ), ||, propString, ., equals, (, "apply", ), ), {, return, callTarget]
[., getString, (, ), ;, if, (, propString, ., equals, (, "call", ), ||, propString, ., equals, (, "apply", )]
[., getLastChild, (, ), ., getString, (, ), ;, if, (, propString, ., equals, (, "call", ), ||, propString, .]
[), {, return, callTarget, ., getNext, (, ), ;, }, else, {, return, callTarget, ., getFirstChild, (, ), ;, }]
[||, propString, ., equals, (, "apply", ), ), {, return, callTarget, ., getNext, (, ), ;, }, else, {, return]
[., equals, (, "call", ), ||, propString, ., equals, (, "apply", ), ), {, return, callTarget, ., getNext, (, )]
[), ||, propString, ., equals, (, "apply", ), ), {, return, callTarget, ., getNext, (, ), ;, }, else, {]
[), {, return, callTarget, ., getNext, (, ), ;, }, else, {, return, callTarget, ., getFirstChild, (, ), ;, }]
[., equals, (, "apply", ), ), {, return, callTarget, ., getNext, (, ), ;, }, else, {, return, callTarget, .]
[), ), {, return, callTarget, ., getNext, (, ), ;, }, else, {, return, callTarget, ., getFirstChild, (, ), ;]
[;, }, else, {, return, callTarget, ., getFirstChild, (, ), ;, }, }, private, static, boolean, isCallOrApply, (, Node, callSite]
[., getNext, (, ), ;, }, else, {, return, callTarget, ., getFirstChild, (, ), ;, }, }, private, static, boolean]
[;, }, }, private, static, boolean, isCallOrApply, (, Node, callSite, ), {, Node, callTarget, =, callSite, ., getFirstChild, (, )]
[., getFirstChild, (, ), ;, }, }, private, static, boolean, isCallOrApply, (, Node, callSite, ), {, Node, callTarget, =, callSite]
[;, if, (, NodeUtil, ., isGet, (, callTarget, ), ), {, String, propString, =, callTarget, ., getLastChild, (, ), .]
[., getFirstChild, (, ), ;, if, (, NodeUtil, ., isGet, (, callTarget, ), ), {, String, propString, =, callTarget, .]
[), {, String, propString, =, callTarget, ., getLastChild, (, ), ., getString, (, ), ;, if, (, propString, ., equals]
[., isGet, (, callTarget, ), ), {, String, propString, =, callTarget, ., getLastChild, (, ), ., getString, (, ), ;]
[), ), {, String, propString, =, callTarget, ., getLastChild, (, ), ., getString, (, ), ;, if, (, propString, .]
[;, if, (, propString, ., equals, (, "call", ), ||, propString, ., equals, (, "apply", ), ), {, return, true]
[., getString, (, ), ;, if, (, propString, ., equals, (, "call", ), ||, propString, ., equals, (, "apply", )]
[., getLastChild, (, ), ., getString, (, ), ;, if, (, propString, ., equals, (, "call", ), ||, propString, .]
[), {, return, true, ;, }, }, return, false, ;, }, private, static, class, FunctionInformation, {, private, final, boolean, extern]
[||, propString, ., equals, (, "apply", ), ), {, return, true, ;, }, }, return, false, ;, }, private, static]
[., equals, (, "call", ), ||, propString, ., equals, (, "apply", ), ), {, return, true, ;, }, }, return]
[), ||, propString, ., equals, (, "apply", ), ), {, return, true, ;, }, }, return, false, ;, }, private]
[), {, return, true, ;, }, }, return, false, ;, }, private, static, class, FunctionInformation, {, private, final, boolean, extern]
[., equals, (, "apply", ), ), {, return, true, ;, }, }, return, false, ;, }, private, static, class, FunctionInformation]
[), ), {, return, true, ;, }, }, return, false, ;, }, private, static, class, FunctionInformation, {, private, final, boolean]
[;, }, }, return, false, ;, }, private, static, class, FunctionInformation, {, private, final, boolean, extern, ;, private, final, List]
[;, }, private, static, class, FunctionInformation, {, private, final, boolean, extern, ;, private, final, List, <, Node, >, callsInFunctionBody, =]
[;, private, Set, <, Var, >, blacklisted, =, Sets, ., newHashSet, (, ), ;, private, Set, <, Var, >, taintedLocals]
[., newArrayList, (, ), ;, private, Set, <, Var, >, blacklisted, =, Sets, ., newHashSet, (, ), ;, private, Set]
[;, private, Set, <, Var, >, taintedLocals, =, Sets, ., newHashSet, (, ), ;, private, Set, <, String, >, knownLocals]
[., newHashSet, (, ), ;, private, Set, <, Var, >, taintedLocals, =, Sets, ., newHashSet, (, ), ;, private, Set]
[;, private, Set, <, String, >, knownLocals, =, Sets, ., newHashSet, (, ), ;, private, boolean, pureFunction, =, false, ;]
[., newHashSet, (, ), ;, private, Set, <, String, >, knownLocals, =, Sets, ., newHashSet, (, ), ;, private, boolean]
[;, private, boolean, pureFunction, =, false, ;, private, boolean, functionThrows, =, false, ;, private, boolean, taintsGlobalState, =, false, ;, private]
[., newHashSet, (, ), ;, private, boolean, pureFunction, =, false, ;, private, boolean, functionThrows, =, false, ;, private, boolean, taintsGlobalState]
[;, private, boolean, functionThrows, =, false, ;, private, boolean, taintsGlobalState, =, false, ;, private, boolean, taintsThis, =, false, ;, private]
[;, private, boolean, taintsGlobalState, =, false, ;, private, boolean, taintsThis, =, false, ;, private, boolean, taintsArguments, =, false, ;, private]
[;, private, boolean, taintsThis, =, false, ;, private, boolean, taintsArguments, =, false, ;, private, boolean, taintsUnknown, =, false, ;, private]
[;, private, boolean, taintsArguments, =, false, ;, private, boolean, taintsUnknown, =, false, ;, private, boolean, taintsReturn, =, false, ;, FunctionInformation]
[;, private, boolean, taintsUnknown, =, false, ;, private, boolean, taintsReturn, =, false, ;, FunctionInformation, (, boolean, extern, ), {, this]
[;, private, boolean, taintsReturn, =, false, ;, FunctionInformation, (, boolean, extern, ), {, this, ., extern, =, extern, ;, checkInvariant]
[;, FunctionInformation, (, boolean, extern, ), {, this, ., extern, =, extern, ;, checkInvariant, (, ), ;, }, void, addTaintedLocalObject]
[=, extern, ;, checkInvariant, (, ), ;, }, void, addTaintedLocalObject, (, Var, var, ), {, taintedLocals, ., add, (, var]
[., extern, =, extern, ;, checkInvariant, (, ), ;, }, void, addTaintedLocalObject, (, Var, var, ), {, taintedLocals, ., add]
[;, checkInvariant, (, ), ;, }, void, addTaintedLocalObject, (, Var, var, ), {, taintedLocals, ., add, (, var, ), ;]
[;, }, void, addTaintedLocalObject, (, Var, var, ), {, taintedLocals, ., add, (, var, ), ;, }, void, resetLocalVars, (]
[;, }, void, resetLocalVars, (, ), {, blacklisted, =, null, ;, taintedLocals, =, null, ;, knownLocals, =, Collections, ., emptySet]
[., add, (, var, ), ;, }, void, resetLocalVars, (, ), {, blacklisted, =, null, ;, taintedLocals, =, null, ;]
[), ;, }, void, resetLocalVars, (, ), {, blacklisted, =, null, ;, taintedLocals, =, null, ;, knownLocals, =, Collections, .]
[=, null, ;, taintedLocals, =, null, ;, knownLocals, =, Collections, ., emptySet, (, ), ;, }, public, void, blacklistLocal, (]
[;, taintedLocals, =, null, ;, knownLocals, =, Collections, ., emptySet, (, ), ;, }, public, void, blacklistLocal, (, Var, var]
[=, null, ;, knownLocals, =, Collections, ., emptySet, (, ), ;, }, public, void, blacklistLocal, (, Var, var, ), {]
[;, knownLocals, =, Collections, ., emptySet, (, ), ;, }, public, void, blacklistLocal, (, Var, var, ), {, blacklisted, .]
[=, Collections, ., emptySet, (, ), ;, }, public, void, blacklistLocal, (, Var, var, ), {, blacklisted, ., add, (]
[;, }, public, void, blacklistLocal, (, Var, var, ), {, blacklisted, ., add, (, var, ), ;, }, boolean, mayBePure]
[., emptySet, (, ), ;, }, public, void, blacklistLocal, (, Var, var, ), {, blacklisted, ., add, (, var, )]
[;, }, boolean, mayBePure, (, ), {, return, !, (, functionThrows, ||, taintsGlobalState, ||, taintsThis, ||, taintsArguments, ||, taintsUnknown, )]
[., add, (, var, ), ;, }, boolean, mayBePure, (, ), {, return, !, (, functionThrows, ||, taintsGlobalState, ||, taintsThis]
[), ;, }, boolean, mayBePure, (, ), {, return, !, (, functionThrows, ||, taintsGlobalState, ||, taintsThis, ||, taintsArguments, ||, taintsUnknown]
[;, }, boolean, mayHaveSideEffects, (, ), {, return, !, pureFunction, ;, }, void, setIsPure, (, ), {, pureFunction, =, true]
[;, }, boolean, mayHaveSideEffects, (, ), {, return, !, pureFunction, ;, }, void, setIsPure, (, ), {, pureFunction, =, true]
[), ;, }, boolean, mayHaveSideEffects, (, ), {, return, !, pureFunction, ;, }, void, setIsPure, (, ), {, pureFunction, =]
[||, taintsUnknown, ), ;, }, boolean, mayHaveSideEffects, (, ), {, return, !, pureFunction, ;, }, void, setIsPure, (, ), {]
[||, taintsArguments, ||, taintsUnknown, ), ;, }, boolean, mayHaveSideEffects, (, ), {, return, !, pureFunction, ;, }, void, setIsPure, (]
[||, taintsThis, ||, taintsArguments, ||, taintsUnknown, ), ;, }, boolean, mayHaveSideEffects, (, ), {, return, !, pureFunction, ;, }, void]
[||, taintsGlobalState, ||, taintsThis, ||, taintsArguments, ||, taintsUnknown, ), ;, }, boolean, mayHaveSideEffects, (, ), {, return, !, pureFunction, ;]
[||, taintsThis, ||, taintsArguments, ||, taintsUnknown, ), ;, }, boolean, mayHaveSideEffects, (, ), {, return, !, pureFunction, ;, }, void]
[||, taintsArguments, ||, taintsUnknown, ), ;, }, boolean, mayHaveSideEffects, (, ), {, return, !, pureFunction, ;, }, void, setIsPure, (]
[||, taintsUnknown, ), ;, }, boolean, mayHaveSideEffects, (, ), {, return, !, pureFunction, ;, }, void, setIsPure, (, ), {]
[), ;, }, boolean, mayHaveSideEffects, (, ), {, return, !, pureFunction, ;, }, void, setIsPure, (, ), {, pureFunction, =]
[;, }, void, setIsPure, (, ), {, pureFunction, =, true, ;, checkInvariant, (, ), ;, }, void, setTaintsGlobalState, (, )]
[;, }, void, setIsPure, (, ), {, pureFunction, =, true, ;, checkInvariant, (, ), ;, }, void, setTaintsGlobalState, (, )]
[=, true, ;, checkInvariant, (, ), ;, }, void, setTaintsGlobalState, (, ), {, taintsGlobalState, =, true, ;, checkInvariant, (, )]
[;, checkInvariant, (, ), ;, }, void, setTaintsGlobalState, (, ), {, taintsGlobalState, =, true, ;, checkInvariant, (, ), ;, }]
[;, }, void, setTaintsGlobalState, (, ), {, taintsGlobalState, =, true, ;, checkInvariant, (, ), ;, }, void, setTaintsThis, (, )]
[=, true, ;, checkInvariant, (, ), ;, }, void, setTaintsThis, (, ), {, taintsThis, =, true, ;, checkInvariant, (, )]
[;, checkInvariant, (, ), ;, }, void, setTaintsThis, (, ), {, taintsThis, =, true, ;, checkInvariant, (, ), ;, }]
[;, }, void, setTaintsThis, (, ), {, taintsThis, =, true, ;, checkInvariant, (, ), ;, }, void, setTaintsArguments, (, )]
[=, true, ;, checkInvariant, (, ), ;, }, void, setTaintsArguments, (, ), {, taintsArguments, =, true, ;, checkInvariant, (, )]
[;, checkInvariant, (, ), ;, }, void, setTaintsArguments, (, ), {, taintsArguments, =, true, ;, checkInvariant, (, ), ;, }]
[;, }, void, setTaintsArguments, (, ), {, taintsArguments, =, true, ;, checkInvariant, (, ), ;, }, void, setFunctionThrows, (, )]
[=, true, ;, checkInvariant, (, ), ;, }, void, setFunctionThrows, (, ), {, functionThrows, =, true, ;, checkInvariant, (, )]
[;, checkInvariant, (, ), ;, }, void, setFunctionThrows, (, ), {, functionThrows, =, true, ;, checkInvariant, (, ), ;, }]
[;, }, void, setFunctionThrows, (, ), {, functionThrows, =, true, ;, checkInvariant, (, ), ;, }, void, setTaintsUnknown, (, )]
[=, true, ;, checkInvariant, (, ), ;, }, void, setTaintsUnknown, (, ), {, taintsUnknown, =, true, ;, checkInvariant, (, )]
[;, checkInvariant, (, ), ;, }, void, setTaintsUnknown, (, ), {, taintsUnknown, =, true, ;, checkInvariant, (, ), ;, }]
[;, }, void, setTaintsUnknown, (, ), {, taintsUnknown, =, true, ;, checkInvariant, (, ), ;, }, void, setTaintsReturn, (, )]
[=, true, ;, checkInvariant, (, ), ;, }, void, setTaintsReturn, (, ), {, taintsReturn, =, true, ;, checkInvariant, (, )]
[;, checkInvariant, (, ), ;, }, void, setTaintsReturn, (, ), {, taintsReturn, =, true, ;, checkInvariant, (, ), ;, }]
[;, }, void, setTaintsReturn, (, ), {, taintsReturn, =, true, ;, checkInvariant, (, ), ;, }, boolean, mutatesGlobalState, (, )]
[=, true, ;, checkInvariant, (, ), ;, }, boolean, mutatesGlobalState, (, ), {, return, taintsGlobalState, ||, taintsArguments, ||, taintsUnknown, ;]
[;, checkInvariant, (, ), ;, }, boolean, mutatesGlobalState, (, ), {, return, taintsGlobalState, ||, taintsArguments, ||, taintsUnknown, ;, }, boolean]
[;, }, boolean, mutatesGlobalState, (, ), {, return, taintsGlobalState, ||, taintsArguments, ||, taintsUnknown, ;, }, boolean, mutatesThis, (, ), {]
[;, }, boolean, mutatesThis, (, ), {, return, taintsThis, ;, }, boolean, functionThrows, (, ), {, return, functionThrows, ;, }]
[||, taintsUnknown, ;, }, boolean, mutatesThis, (, ), {, return, taintsThis, ;, }, boolean, functionThrows, (, ), {, return, functionThrows]
[||, taintsArguments, ||, taintsUnknown, ;, }, boolean, mutatesThis, (, ), {, return, taintsThis, ;, }, boolean, functionThrows, (, ), {]
[||, taintsUnknown, ;, }, boolean, mutatesThis, (, ), {, return, taintsThis, ;, }, boolean, functionThrows, (, ), {, return, functionThrows]
[;, }, boolean, mutatesThis, (, ), {, return, taintsThis, ;, }, boolean, functionThrows, (, ), {, return, functionThrows, ;, }]
[;, }, boolean, functionThrows, (, ), {, return, functionThrows, ;, }, private, void, checkInvariant, (, ), {, boolean, invariant, =]
[;, }, private, void, checkInvariant, (, ), {, boolean, invariant, =, mayBePure, (, ), ||, mayHaveSideEffects, (, ), ;, if]
[;, if, (, !, invariant, ), {, throw, new, IllegalStateException, (, "Invariant failed.  ", +, toString, (, ), ), ;, }, }]
[||, mayHaveSideEffects, (, ), ;, if, (, !, invariant, ), {, throw, new, IllegalStateException, (, "Invariant failed.  ", +, toString, (, )]
[;, if, (, !, invariant, ), {, throw, new, IllegalStateException, (, "Invariant failed.  ", +, toString, (, ), ), ;, }, }]
[), {, throw, new, IllegalStateException, (, "Invariant failed.  ", +, toString, (, ), ), ;, }, }, void, appendCall, (, Node, callNode]
[), {, throw, new, IllegalStateException, (, "Invariant failed.  ", +, toString, (, ), ), ;, }, }, void, appendCall, (, Node, callNode]
[;, }, }, void, appendCall, (, Node, callNode, ), {, callsInFunctionBody, ., add, (, callNode, ), ;, }, List, <]
[), ;, }, }, void, appendCall, (, Node, callNode, ), {, callsInFunctionBody, ., add, (, callNode, ), ;, }, List]
[+, toString, (, ), ), ;, }, }, void, appendCall, (, Node, callNode, ), {, callsInFunctionBody, ., add, (, callNode]
[), ;, }, }, void, appendCall, (, Node, callNode, ), {, callsInFunctionBody, ., add, (, callNode, ), ;, }, List]
[;, }, List, <, Node, >, getCallsInFunctionBody, (, ), {, return, callsInFunctionBody, ;, }, @, Override, public, String, toString, (]
[., add, (, callNode, ), ;, }, List, <, Node, >, getCallsInFunctionBody, (, ), {, return, callsInFunctionBody, ;, }, @]
[), ;, }, List, <, Node, >, getCallsInFunctionBody, (, ), {, return, callsInFunctionBody, ;, }, @, Override, public, String, toString]
[;, }, @, Override, public, String, toString, (, ), {, List, <, String, >, status, =, Lists, ., newArrayList, (]
[;, if, (, extern, ), {, status, ., add, (, "extern", ), ;, }, if, (, pureFunction, ), {, status]
[., newArrayList, (, ), ;, if, (, extern, ), {, status, ., add, (, "extern", ), ;, }, if, (]
[), {, status, ., add, (, "extern", ), ;, }, if, (, pureFunction, ), {, status, ., add, (, "pure"]
[;, }, if, (, pureFunction, ), {, status, ., add, (, "pure", ), ;, }, if, (, taintsThis, ), {]
[., add, (, "extern", ), ;, }, if, (, pureFunction, ), {, status, ., add, (, "pure", ), ;, }]
[), ;, }, if, (, pureFunction, ), {, status, ., add, (, "pure", ), ;, }, if, (, taintsThis, )]
[), {, status, ., add, (, "pure", ), ;, }, if, (, taintsThis, ), {, status, ., add, (, "this"]
[;, }, if, (, taintsThis, ), {, status, ., add, (, "this", ), ;, }, if, (, taintsGlobalState, ), {]
[., add, (, "pure", ), ;, }, if, (, taintsThis, ), {, status, ., add, (, "this", ), ;, }]
[), ;, }, if, (, taintsThis, ), {, status, ., add, (, "this", ), ;, }, if, (, taintsGlobalState, )]
[), {, status, ., add, (, "this", ), ;, }, if, (, taintsGlobalState, ), {, status, ., add, (, "global"]
[;, }, if, (, taintsGlobalState, ), {, status, ., add, (, "global", ), ;, }, if, (, functionThrows, ), {]
[., add, (, "this", ), ;, }, if, (, taintsGlobalState, ), {, status, ., add, (, "global", ), ;, }]
[), ;, }, if, (, taintsGlobalState, ), {, status, ., add, (, "global", ), ;, }, if, (, functionThrows, )]
[), {, status, ., add, (, "global", ), ;, }, if, (, functionThrows, ), {, status, ., add, (, "throw"]
[;, }, if, (, functionThrows, ), {, status, ., add, (, "throw", ), ;, }, if, (, taintsUnknown, ), {]
[., add, (, "global", ), ;, }, if, (, functionThrows, ), {, status, ., add, (, "throw", ), ;, }]
[), ;, }, if, (, functionThrows, ), {, status, ., add, (, "throw", ), ;, }, if, (, taintsUnknown, )]
[), {, status, ., add, (, "throw", ), ;, }, if, (, taintsUnknown, ), {, status, ., add, (, "complex"]
[;, }, if, (, taintsUnknown, ), {, status, ., add, (, "complex", ), ;, }, return, "Side effects: ", +, status, .]
[., add, (, "throw", ), ;, }, if, (, taintsUnknown, ), {, status, ., add, (, "complex", ), ;, }]
[), ;, }, if, (, taintsUnknown, ), {, status, ., add, (, "complex", ), ;, }, return, "Side effects: ", +, status]
[), {, status, ., add, (, "complex", ), ;, }, return, "Side effects: ", +, status, ., toString, (, ), ;, }]
[;, }, return, "Side effects: ", +, status, ., toString, (, ), ;, }, }, static, class, Driver, implements, CompilerPass, {, private]
[., add, (, "complex", ), ;, }, return, "Side effects: ", +, status, ., toString, (, ), ;, }, }, static, class]
[), ;, }, return, "Side effects: ", +, status, ., toString, (, ), ;, }, }, static, class, Driver, implements, CompilerPass, {]
[;, }, }, static, class, Driver, implements, CompilerPass, {, private, final, AbstractCompiler, compiler, ;, private, final, String, reportPath, ;, private]
[+, status, ., toString, (, ), ;, }, }, static, class, Driver, implements, CompilerPass, {, private, final, AbstractCompiler, compiler, ;]
[;, }, }, static, class, Driver, implements, CompilerPass, {, private, final, AbstractCompiler, compiler, ;, private, final, String, reportPath, ;, private]
[., toString, (, ), ;, }, }, static, class, Driver, implements, CompilerPass, {, private, final, AbstractCompiler, compiler, ;, private, final]
[=, compiler, ;, this, ., reportPath, =, reportPath, ;, this, ., useNameReferenceGraph, =, useNameReferenceGraph, ;, }, @, Override, public, void]
[., compiler, =, compiler, ;, this, ., reportPath, =, reportPath, ;, this, ., useNameReferenceGraph, =, useNameReferenceGraph, ;, }, @, Override]
[;, this, ., reportPath, =, reportPath, ;, this, ., useNameReferenceGraph, =, useNameReferenceGraph, ;, }, @, Override, public, void, process, (]
[=, reportPath, ;, this, ., useNameReferenceGraph, =, useNameReferenceGraph, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node]
[., reportPath, =, reportPath, ;, this, ., useNameReferenceGraph, =, useNameReferenceGraph, ;, }, @, Override, public, void, process, (, Node, externs]
[;, this, ., useNameReferenceGraph, =, useNameReferenceGraph, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, )]
[=, useNameReferenceGraph, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, DefinitionProvider, definitionProvider, =]
[., useNameReferenceGraph, =, useNameReferenceGraph, ;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, DefinitionProvider]
[;, }, @, Override, public, void, process, (, Node, externs, ,, Node, root, ), {, DefinitionProvider, definitionProvider, =, null, ;]
[;, if, (, useNameReferenceGraph, ), {, NameReferenceGraphConstruction, graphBuilder, =, new, NameReferenceGraphConstruction, (, compiler, ), ;, graphBuilder, ., process, (, externs]
[), {, NameReferenceGraphConstruction, graphBuilder, =, new, NameReferenceGraphConstruction, (, compiler, ), ;, graphBuilder, ., process, (, externs, ,, root, ), ;]
[;, graphBuilder, ., process, (, externs, ,, root, ), ;, definitionProvider, =, graphBuilder, ., getNameReferenceGraph, (, ), ;, }, else]
[), ;, graphBuilder, ., process, (, externs, ,, root, ), ;, definitionProvider, =, graphBuilder, ., getNameReferenceGraph, (, ), ;, }]
[;, definitionProvider, =, graphBuilder, ., getNameReferenceGraph, (, ), ;, }, else, {, SimpleDefinitionFinder, defFinder, =, new, SimpleDefinitionFinder, (, compiler, )]
[., process, (, externs, ,, root, ), ;, definitionProvider, =, graphBuilder, ., getNameReferenceGraph, (, ), ;, }, else, {, SimpleDefinitionFinder]
[,, root, ), ;, definitionProvider, =, graphBuilder, ., getNameReferenceGraph, (, ), ;, }, else, {, SimpleDefinitionFinder, defFinder, =, new, SimpleDefinitionFinder]
[), ;, definitionProvider, =, graphBuilder, ., getNameReferenceGraph, (, ), ;, }, else, {, SimpleDefinitionFinder, defFinder, =, new, SimpleDefinitionFinder, (, compiler]
[=, graphBuilder, ., getNameReferenceGraph, (, ), ;, }, else, {, SimpleDefinitionFinder, defFinder, =, new, SimpleDefinitionFinder, (, compiler, ), ;, defFinder]
[;, }, else, {, SimpleDefinitionFinder, defFinder, =, new, SimpleDefinitionFinder, (, compiler, ), ;, defFinder, ., process, (, externs, ,, root]
[., getNameReferenceGraph, (, ), ;, }, else, {, SimpleDefinitionFinder, defFinder, =, new, SimpleDefinitionFinder, (, compiler, ), ;, defFinder, ., process]
[;, defFinder, ., process, (, externs, ,, root, ), ;, definitionProvider, =, defFinder, ;, }, PureFunctionIdentifier, pureFunctionIdentifier, =, new, PureFunctionIdentifier]
[), ;, defFinder, ., process, (, externs, ,, root, ), ;, definitionProvider, =, defFinder, ;, }, PureFunctionIdentifier, pureFunctionIdentifier, =, new]
[;, definitionProvider, =, defFinder, ;, }, PureFunctionIdentifier, pureFunctionIdentifier, =, new, PureFunctionIdentifier, (, compiler, ,, definitionProvider, ), ;, pureFunctionIdentifier, ., process]
[., process, (, externs, ,, root, ), ;, definitionProvider, =, defFinder, ;, }, PureFunctionIdentifier, pureFunctionIdentifier, =, new, PureFunctionIdentifier, (, compiler]
[,, root, ), ;, definitionProvider, =, defFinder, ;, }, PureFunctionIdentifier, pureFunctionIdentifier, =, new, PureFunctionIdentifier, (, compiler, ,, definitionProvider, ), ;]
[), ;, definitionProvider, =, defFinder, ;, }, PureFunctionIdentifier, pureFunctionIdentifier, =, new, PureFunctionIdentifier, (, compiler, ,, definitionProvider, ), ;, pureFunctionIdentifier, .]
[=, defFinder, ;, }, PureFunctionIdentifier, pureFunctionIdentifier, =, new, PureFunctionIdentifier, (, compiler, ,, definitionProvider, ), ;, pureFunctionIdentifier, ., process, (, externs]
[;, }, PureFunctionIdentifier, pureFunctionIdentifier, =, new, PureFunctionIdentifier, (, compiler, ,, definitionProvider, ), ;, pureFunctionIdentifier, ., process, (, externs, ,, root]
[;, pureFunctionIdentifier, ., process, (, externs, ,, root, ), ;, if, (, reportPath, !=, null, ), {, try, {, Files]
[,, definitionProvider, ), ;, pureFunctionIdentifier, ., process, (, externs, ,, root, ), ;, if, (, reportPath, !=, null, ), {]
[), ;, pureFunctionIdentifier, ., process, (, externs, ,, root, ), ;, if, (, reportPath, !=, null, ), {, try, {]
[;, if, (, reportPath, !=, null, ), {, try, {, Files, ., write, (, pureFunctionIdentifier, ., getDebugReport, (, ), ,]
[., process, (, externs, ,, root, ), ;, if, (, reportPath, !=, null, ), {, try, {, Files, ., write]
[,, root, ), ;, if, (, reportPath, !=, null, ), {, try, {, Files, ., write, (, pureFunctionIdentifier, ., getDebugReport]
[), ;, if, (, reportPath, !=, null, ), {, try, {, Files, ., write, (, pureFunctionIdentifier, ., getDebugReport, (, )]
[), {, try, {, Files, ., write, (, pureFunctionIdentifier, ., getDebugReport, (, ), ,, new, File, (, reportPath, ), ,]
[!=, null, ), {, try, {, Files, ., write, (, pureFunctionIdentifier, ., getDebugReport, (, ), ,, new, File, (, reportPath]
[), {, try, {, Files, ., write, (, pureFunctionIdentifier, ., getDebugReport, (, ), ,, new, File, (, reportPath, ), ,]
[;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, }, }, }, }]
[., write, (, pureFunctionIdentifier, ., getDebugReport, (, ), ,, new, File, (, reportPath, ), ,, Charsets, ., UTF_8, ), ;]
[,, new, File, (, reportPath, ), ,, Charsets, ., UTF_8, ), ;, }, catch, (, IOException, e, ), {, throw]
[., getDebugReport, (, ), ,, new, File, (, reportPath, ), ,, Charsets, ., UTF_8, ), ;, }, catch, (, IOException]
[,, Charsets, ., UTF_8, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;]
[), ,, Charsets, ., UTF_8, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, )]
[), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, }, }, }]
[., UTF_8, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, }]
[;, }, }, }, }, }]
[), ;, }, }, }, }, }]
