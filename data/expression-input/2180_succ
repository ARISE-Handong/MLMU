[), {, throw, new, IllegalArgumentException, (, "Null 'coefficients' argument", ), ;, }, this, ., coefficients, =, (, double, [, ], ), coefficients]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'coefficients' argument", ), ;, }, this, ., coefficients, =, (, double, [, ]]
[), {, throw, new, IllegalArgumentException, (, "Null 'coefficients' argument", ), ;, }, this, ., coefficients, =, (, double, [, ], ), coefficients]
[;, }, this, ., coefficients, =, (, double, [, ], ), coefficients, ., clone, (, ), ;, }, public, double]
[), ;, }, this, ., coefficients, =, (, double, [, ], ), coefficients, ., clone, (, ), ;, }, public]
[=, (, double, [, ], ), coefficients, ., clone, (, ), ;, }, public, double, [, ], getCoefficients, (, )]
[., coefficients, =, (, double, [, ], ), coefficients, ., clone, (, ), ;, }, public, double, [, ], getCoefficients]
[;, }, public, double, [, ], getCoefficients, (, ), {, return, (, double, [, ], ), this, ., coefficients, .]
[;, }, public, double, [, ], getCoefficients, (, ), {, return, (, double, [, ], ), this, ., coefficients, .]
[., clone, (, ), ;, }, public, double, [, ], getCoefficients, (, ), {, return, (, double, [, ], )]
[;, }, public, int, getOrder, (, ), {, return, this, ., coefficients, ., length, -, 1, ;, }, public, double]
[;, }, public, int, getOrder, (, ), {, return, this, ., coefficients, ., length, -, 1, ;, }, public, double]
[., clone, (, ), ;, }, public, int, getOrder, (, ), {, return, this, ., coefficients, ., length, -, 1]
[., coefficients, ., clone, (, ), ;, }, public, int, getOrder, (, ), {, return, this, ., coefficients, ., length]
[;, }, public, double, getValue, (, double, x, ), {, double, y, =, 0, ;, for, (, int, i, =]
[-, 1, ;, }, public, double, getValue, (, double, x, ), {, double, y, =, 0, ;, for, (, int]
[., length, -, 1, ;, }, public, double, getValue, (, double, x, ), {, double, y, =, 0, ;, for]
[., coefficients, ., length, -, 1, ;, }, public, double, getValue, (, double, x, ), {, double, y, =, 0]
[;, }, public, double, getValue, (, double, x, ), {, double, y, =, 0, ;, for, (, int, i, =]
[;, for, (, int, i, =, 0, ;, i, <, coefficients, ., length, ;, i, ++, ), {, y, +=]
[;, i, <, coefficients, ., length, ;, i, ++, ), {, y, +=, coefficients, [, i, ], *, Math, .]
[;, i, ++, ), {, y, +=, coefficients, [, i, ], *, Math, ., pow, (, x, ,, i, )]
[<, coefficients, ., length, ;, i, ++, ), {, y, +=, coefficients, [, i, ], *, Math, ., pow, (]
[;, i, ++, ), {, y, +=, coefficients, [, i, ], *, Math, ., pow, (, x, ,, i, )]
[., length, ;, i, ++, ), {, y, +=, coefficients, [, i, ], *, Math, ., pow, (, x, ,]
[), {, y, +=, coefficients, [, i, ], *, Math, ., pow, (, x, ,, i, ), ;, }, return]
[++, ), {, y, +=, coefficients, [, i, ], *, Math, ., pow, (, x, ,, i, ), ;, }]
[+=, coefficients, [, i, ], *, Math, ., pow, (, x, ,, i, ), ;, }, return, y, ;, }]
[;, }, return, y, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, !, (, obj, instanceof]
[*, Math, ., pow, (, x, ,, i, ), ;, }, return, y, ;, }, public, boolean, equals, (, Object]
[[, i, ], *, Math, ., pow, (, x, ,, i, ), ;, }, return, y, ;, }, public, boolean]
[], *, Math, ., pow, (, x, ,, i, ), ;, }, return, y, ;, }, public, boolean, equals, (]
[;, }, return, y, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, !, (, obj, instanceof]
[., pow, (, x, ,, i, ), ;, }, return, y, ;, }, public, boolean, equals, (, Object, obj, )]
[,, i, ), ;, }, return, y, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, !]
[), ;, }, return, y, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, !, (, obj]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, !, (, obj, instanceof, PolynomialFunction2D, ), ), {]
[), {, return, false, ;, }, PolynomialFunction2D, that, =, (, PolynomialFunction2D, ), obj, ;, return, Arrays, ., equals, (, this]
[), {, return, false, ;, }, PolynomialFunction2D, that, =, (, PolynomialFunction2D, ), obj, ;, return, Arrays, ., equals, (, this]
[), ), {, return, false, ;, }, PolynomialFunction2D, that, =, (, PolynomialFunction2D, ), obj, ;, return, Arrays, ., equals, (]
[instanceof, PolynomialFunction2D, ), ), {, return, false, ;, }, PolynomialFunction2D, that, =, (, PolynomialFunction2D, ), obj, ;, return, Arrays, .]
[;, }, PolynomialFunction2D, that, =, (, PolynomialFunction2D, ), obj, ;, return, Arrays, ., equals, (, this, ., coefficients, ,, that]
[;, return, Arrays, ., equals, (, this, ., coefficients, ,, that, ., coefficients, ), ;, }, public, int, hashCode, (]
[;, return, Arrays, ., equals, (, this, ., coefficients, ,, that, ., coefficients, ), ;, }, public, int, hashCode, (]
[;, }, public, int, hashCode, (, ), {, return, HashUtilities, ., hashCodeForDoubleArray, (, this, ., coefficients, ), ;, }, }]
[., equals, (, this, ., coefficients, ,, that, ., coefficients, ), ;, }, public, int, hashCode, (, ), {, return]
[,, that, ., coefficients, ), ;, }, public, int, hashCode, (, ), {, return, HashUtilities, ., hashCodeForDoubleArray, (, this, .]
[., coefficients, ,, that, ., coefficients, ), ;, }, public, int, hashCode, (, ), {, return, HashUtilities, ., hashCodeForDoubleArray, (]
[), ;, }, public, int, hashCode, (, ), {, return, HashUtilities, ., hashCodeForDoubleArray, (, this, ., coefficients, ), ;, }]
[., coefficients, ), ;, }, public, int, hashCode, (, ), {, return, HashUtilities, ., hashCodeForDoubleArray, (, this, ., coefficients, )]
[;, }, }]
[., hashCodeForDoubleArray, (, this, ., coefficients, ), ;, }, }]
[), ;, }, }]
[., coefficients, ), ;, }, }]
