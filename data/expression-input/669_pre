[import, org, ., mockito, ., MockitoAnnotations, ;, import, org, ., mockito, ., internal, ., runners, ., util, ., FrameworkUsageValidator, ;]
[mockito, ., MockitoAnnotations, ;, import, org, ., mockito, ., internal, ., runners, ., util, ., FrameworkUsageValidator, ;, @, SuppressWarnings, (]
[class, JUnit44RunnerImpl, implements, RunnerImpl, {, JUnit4ClassRunner, runner, ;, public, JUnit44RunnerImpl, (, Class, <, ?, >, klass, ), throws, InitializationError, {]
[class, JUnit44RunnerImpl, implements, RunnerImpl, {, JUnit4ClassRunner, runner, ;, public, JUnit44RunnerImpl, (, Class, <, ?, >, klass, ), throws, InitializationError, {]
[{, JUnit4ClassRunner, runner, ;, public, JUnit44RunnerImpl, (, Class, <, ?, >, klass, ), throws, InitializationError, {, this, ., runner, =]
[;, public, JUnit44RunnerImpl, (, Class, <, ?, >, klass, ), throws, InitializationError, {, this, ., runner, =, new, JUnit4ClassRunner, (]
[=, new, JUnit4ClassRunner, (, klass, ), {, @, Override, protected, Object, createTest, (, ), throws, Exception, {, Object, test, =]
[=, new, JUnit4ClassRunner, (, klass, ), {, @, Override, protected, Object, createTest, (, ), throws, Exception, {, Object, test, =]
[{, @, Override, protected, Object, createTest, (, ), throws, Exception, {, Object, test, =, super, ., createTest, (, ), ;]
[{, @, Override, protected, Object, createTest, (, ), throws, Exception, {, Object, test, =, super, ., createTest, (, ), ;]
[Object, createTest, (, ), throws, Exception, {, Object, test, =, super, ., createTest, (, ), ;, MockitoAnnotations, ., initMocks, (]
[throws, Exception, {, Object, test, =, super, ., createTest, (, ), ;, MockitoAnnotations, ., initMocks, (, test, ), ;, return]
[initMocks, (, test, ), ;, return, test, ;, }, }, ;, }, public, void, run, (, RunNotifier, notifier, ), {]
[initMocks, (, test, ), ;, return, test, ;, }, }, ;, }, public, void, run, (, RunNotifier, notifier, ), {]
[;, return, test, ;, }, }, ;, }, public, void, run, (, RunNotifier, notifier, ), {, notifier, ., addListener, (]
[;, }, }, ;, }, public, void, run, (, RunNotifier, notifier, ), {, notifier, ., addListener, (, new, FrameworkUsageValidator, (]
[}, public, void, run, (, RunNotifier, notifier, ), {, notifier, ., addListener, (, new, FrameworkUsageValidator, (, notifier, ), ), ;]
[}, public, void, run, (, RunNotifier, notifier, ), {, notifier, ., addListener, (, new, FrameworkUsageValidator, (, notifier, ), ), ;]
[(, RunNotifier, notifier, ), {, notifier, ., addListener, (, new, FrameworkUsageValidator, (, notifier, ), ), ;, runner, ., run, (]
[(, notifier, ), ), ;, runner, ., run, (, notifier, ), ;, }, public, Description, getDescription, (, ), {, return]
[(, notifier, ), ), ;, runner, ., run, (, notifier, ), ;, }, public, Description, getDescription, (, ), {, return]
[), {, return, runner, ., getDescription, (, ), ;, }, public, void, filter, (, Filter, filter, ), throws, NoTestsRemainException, {]
[), {, return, runner, ., getDescription, (, ), ;, }, public, void, filter, (, Filter, filter, ), throws, NoTestsRemainException, {]
[., getDescription, (, ), ;, }, public, void, filter, (, Filter, filter, ), throws, NoTestsRemainException, {, runner, ., filter, (]
