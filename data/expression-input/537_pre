[io, ., Serializable, ;, public, class, WindNeedle, extends, ArrowNeedle, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[., Serializable, ;, public, class, WindNeedle, extends, ArrowNeedle, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -, 2861061368907167834L, ;, public, WindNeedle, (, ), {, super, (]
[), ;, }, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {]
[), ;, }, protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {]
[void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, super, ., drawNeedle, (]
[(, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, super, ., drawNeedle, (, g2, ,]
[g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, super, ., drawNeedle, (, g2, ,, plotArea, ,]
[Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, super, ., drawNeedle, (, g2, ,, plotArea, ,, rotate, ,]
[,, double, angle, ), {, super, ., drawNeedle, (, g2, ,, plotArea, ,, rotate, ,, angle, ), ;, if, (]
[,, double, angle, ), {, super, ., drawNeedle, (, g2, ,, plotArea, ,, rotate, ,, angle, ), ;, if, (]
[double, angle, ), {, super, ., drawNeedle, (, g2, ,, plotArea, ,, rotate, ,, angle, ), ;, if, (, (]
[double, angle, ), {, super, ., drawNeedle, (, g2, ,, plotArea, ,, rotate, ,, angle, ), ;, if, (, (]
[), {, super, ., drawNeedle, (, g2, ,, plotArea, ,, rotate, ,, angle, ), ;, if, (, (, rotate, !=]
[., drawNeedle, (, g2, ,, plotArea, ,, rotate, ,, angle, ), ;, if, (, (, rotate, !=, null, ), &&]
[drawNeedle, (, g2, ,, plotArea, ,, rotate, ,, angle, ), ;, if, (, (, rotate, !=, null, ), &&, (]
[drawNeedle, (, g2, ,, plotArea, ,, rotate, ,, angle, ), ;, if, (, (, rotate, !=, null, ), &&, (]
[g2, ,, plotArea, ,, rotate, ,, angle, ), ;, if, (, (, rotate, !=, null, ), &&, (, plotArea, !=]
[), ;, if, (, (, rotate, !=, null, ), &&, (, plotArea, !=, null, ), ), {, int, spacing, =]
[), ;, if, (, (, rotate, !=, null, ), &&, (, plotArea, !=, null, ), ), {, int, spacing, =]
[(, rotate, !=, null, ), &&, (, plotArea, !=, null, ), ), {, int, spacing, =, getSize, (, ), *]
[&&, (, plotArea, !=, null, ), ), {, int, spacing, =, getSize, (, ), *, 3, ;, Rectangle2D, newArea, =]
[=, getSize, (, ), *, 3, ;, Rectangle2D, newArea, =, new, Rectangle2D, ., Double, (, ), ;, Point2D, newRotate, =]
[(, ), *, 3, ;, Rectangle2D, newArea, =, new, Rectangle2D, ., Double, (, ), ;, Point2D, newRotate, =, rotate, ;]
[(, ), *, 3, ;, Rectangle2D, newArea, =, new, Rectangle2D, ., Double, (, ), ;, Point2D, newRotate, =, rotate, ;]
[;, Rectangle2D, newArea, =, new, Rectangle2D, ., Double, (, ), ;, Point2D, newRotate, =, rotate, ;, newArea, ., setRect, (]
[;, Rectangle2D, newArea, =, new, Rectangle2D, ., Double, (, ), ;, Point2D, newRotate, =, rotate, ;, newArea, ., setRect, (]
[;, Rectangle2D, newArea, =, new, Rectangle2D, ., Double, (, ), ;, Point2D, newRotate, =, rotate, ;, newArea, ., setRect, (]
[., Double, (, ), ;, Point2D, newRotate, =, rotate, ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), -]
[(, ), ;, Point2D, newRotate, =, rotate, ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), -, spacing, ,]
[(, ), ;, Point2D, newRotate, =, rotate, ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), -, spacing, ,]
[rotate, ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), -, spacing, ,, plotArea, ., getMinY, (, ), ,]
[rotate, ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), -, spacing, ,, plotArea, ., getMinY, (, ), ,]
[plotArea, ., getMinX, (, ), -, spacing, ,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,]
[plotArea, ., getMinX, (, ), -, spacing, ,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,]
[,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;]
[,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;]
[(, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (]
[,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,]
[., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,]
[(, ), ,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,]
[plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, ), ;]
[plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, ), ;]
[), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, ), ;, newArea, ., setRect, (]
[), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, ), ;, newArea, ., setRect, (]
[), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,, angle, ), ;, newArea, ., setRect, (]
[(, g2, ,, newArea, ,, newRotate, ,, angle, ), ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), +]
[,, newArea, ,, newRotate, ,, angle, ), ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), +, spacing, ,]
[,, newArea, ,, newRotate, ,, angle, ), ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), +, spacing, ,]
[), ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), +, spacing, ,, plotArea, ., getMinY, (, ), ,]
[), ;, newArea, ., setRect, (, plotArea, ., getMinX, (, ), +, spacing, ,, plotArea, ., getMinY, (, ), ,]
[plotArea, ., getMinX, (, ), +, spacing, ,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,]
[plotArea, ., getMinX, (, ), +, spacing, ,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,]
[,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;]
[,, plotArea, ., getMinY, (, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;]
[(, ), ,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (]
[,, plotArea, ., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,]
[., getWidth, (, ), ,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,]
[(, ), ,, plotArea, ., getHeight, (, ), ), ;, super, ., drawNeedle, (, g2, ,, newArea, ,, newRotate, ,]
[,, newArea, ,, newRotate, ,, angle, ), ;, }, }, public, boolean, equals, (, Object, object, ), {, if, (]
[,, newArea, ,, newRotate, ,, angle, ), ;, }, }, public, boolean, equals, (, Object, object, ), {, if, (]
[,, newRotate, ,, angle, ), ;, }, }, public, boolean, equals, (, Object, object, ), {, if, (, object, ==]
[), ;, }, }, public, boolean, equals, (, Object, object, ), {, if, (, object, ==, null, ), {, return]
[boolean, equals, (, Object, object, ), {, if, (, object, ==, null, ), {, return, false, ;, }, if, (]
[boolean, equals, (, Object, object, ), {, if, (, object, ==, null, ), {, return, false, ;, }, if, (]
[(, Object, object, ), {, if, (, object, ==, null, ), {, return, false, ;, }, if, (, object, ==]
[{, if, (, object, ==, null, ), {, return, false, ;, }, if, (, object, ==, this, ), {, return]
[null, ), {, return, false, ;, }, if, (, object, ==, this, ), {, return, true, ;, }, if, (]
[null, ), {, return, false, ;, }, if, (, object, ==, this, ), {, return, true, ;, }, if, (]
[null, ), {, return, false, ;, }, if, (, object, ==, this, ), {, return, true, ;, }, if, (]
[false, ;, }, if, (, object, ==, this, ), {, return, true, ;, }, if, (, super, ., equals, (]
[if, (, object, ==, this, ), {, return, true, ;, }, if, (, super, ., equals, (, object, ), &&]
[if, (, object, ==, this, ), {, return, true, ;, }, if, (, super, ., equals, (, object, ), &&]
[{, return, true, ;, }, if, (, super, ., equals, (, object, ), &&, object, instanceof, WindNeedle, ), {, return]
[}, if, (, super, ., equals, (, object, ), &&, object, instanceof, WindNeedle, ), {, return, true, ;, }, return]
[object, instanceof, WindNeedle, ), {, return, true, ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return]
[object, instanceof, WindNeedle, ), {, return, true, ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return]
