[XYZDataset, ;, public, class, XYBlockRenderer, extends, AbstractXYItemRenderer, implements, XYItemRenderer, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, double, blockWidth, =]
[AbstractXYItemRenderer, implements, XYItemRenderer, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, double, blockWidth, =, 1.0, ;, private, double, blockHeight, =]
[PublicCloneable, ,, Serializable, {, private, double, blockWidth, =, 1.0, ;, private, double, blockHeight, =, 1.0, ;, private, RectangleAnchor, blockAnchor, =]
[PublicCloneable, ,, Serializable, {, private, double, blockWidth, =, 1.0, ;, private, double, blockHeight, =, 1.0, ;, private, RectangleAnchor, blockAnchor, =]
[., CENTER, ;, private, double, xOffset, ;, private, double, yOffset, ;, private, PaintScale, paintScale, ;, public, XYBlockRenderer, (, ), {]
[double, xOffset, ;, private, double, yOffset, ;, private, PaintScale, paintScale, ;, public, XYBlockRenderer, (, ), {, updateOffsets, (, ), ;]
[double, xOffset, ;, private, double, yOffset, ;, private, PaintScale, paintScale, ;, public, XYBlockRenderer, (, ), {, updateOffsets, (, ), ;]
[double, yOffset, ;, private, PaintScale, paintScale, ;, public, XYBlockRenderer, (, ), {, updateOffsets, (, ), ;, this, ., paintScale, =]
[(, ), ;, this, ., paintScale, =, new, LookupPaintScale, (, ), ;, }, public, double, getBlockWidth, (, ), {, return]
[(, ), ;, this, ., paintScale, =, new, LookupPaintScale, (, ), ;, }, public, double, getBlockWidth, (, ), {, return]
[getBlockWidth, (, ), {, return, this, ., blockWidth, ;, }, public, void, setBlockWidth, (, double, width, ), {, if, (]
[getBlockWidth, (, ), {, return, this, ., blockWidth, ;, }, public, void, setBlockWidth, (, double, width, ), {, if, (]
[), {, return, this, ., blockWidth, ;, }, public, void, setBlockWidth, (, double, width, ), {, if, (, width, <=]
[., blockWidth, ;, }, public, void, setBlockWidth, (, double, width, ), {, if, (, width, <=, 0.0, ), {, throw]
[}, public, void, setBlockWidth, (, double, width, ), {, if, (, width, <=, 0.0, ), {, throw, new, IllegalArgumentException, (]
[(, double, width, ), {, if, (, width, <=, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'width' argument must be > 0.0", ), ;, }]
[(, double, width, ), {, if, (, width, <=, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'width' argument must be > 0.0", ), ;, }]
[{, if, (, width, <=, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'width' argument must be > 0.0", ), ;, }, this, ., blockWidth, =]
[(, width, <=, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'width' argument must be > 0.0", ), ;, }, this, ., blockWidth, =, width, ;]
[), {, throw, new, IllegalArgumentException, (, "The 'width' argument must be > 0.0", ), ;, }, this, ., blockWidth, =, width, ;, updateOffsets, (, ), ;]
[blockWidth, =, width, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, double, getBlockHeight, (, ), {, return]
[blockWidth, =, width, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, double, getBlockHeight, (, ), {, return]
[getBlockHeight, (, ), {, return, this, ., blockHeight, ;, }, public, void, setBlockHeight, (, double, height, ), {, if, (]
[getBlockHeight, (, ), {, return, this, ., blockHeight, ;, }, public, void, setBlockHeight, (, double, height, ), {, if, (]
[), {, return, this, ., blockHeight, ;, }, public, void, setBlockHeight, (, double, height, ), {, if, (, height, <=]
[., blockHeight, ;, }, public, void, setBlockHeight, (, double, height, ), {, if, (, height, <=, 0.0, ), {, throw]
[}, public, void, setBlockHeight, (, double, height, ), {, if, (, height, <=, 0.0, ), {, throw, new, IllegalArgumentException, (]
[(, double, height, ), {, if, (, height, <=, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'height' argument must be > 0.0", ), ;, }]
[(, double, height, ), {, if, (, height, <=, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'height' argument must be > 0.0", ), ;, }]
[{, if, (, height, <=, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'height' argument must be > 0.0", ), ;, }, this, ., blockHeight, =]
[(, height, <=, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'height' argument must be > 0.0", ), ;, }, this, ., blockHeight, =, height, ;]
[), {, throw, new, IllegalArgumentException, (, "The 'height' argument must be > 0.0", ), ;, }, this, ., blockHeight, =, height, ;, updateOffsets, (, ), ;]
[blockHeight, =, height, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, RectangleAnchor, getBlockAnchor, (, ), {, return]
[blockHeight, =, height, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, RectangleAnchor, getBlockAnchor, (, ), {, return]
[getBlockAnchor, (, ), {, return, this, ., blockAnchor, ;, }, public, void, setBlockAnchor, (, RectangleAnchor, anchor, ), {, if, (]
[getBlockAnchor, (, ), {, return, this, ., blockAnchor, ;, }, public, void, setBlockAnchor, (, RectangleAnchor, anchor, ), {, if, (]
[), {, return, this, ., blockAnchor, ;, }, public, void, setBlockAnchor, (, RectangleAnchor, anchor, ), {, if, (, anchor, ==]
[., blockAnchor, ;, }, public, void, setBlockAnchor, (, RectangleAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw]
[}, public, void, setBlockAnchor, (, RectangleAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (]
[anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, if, (]
[anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, if, (]
[anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, if, (]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, if, (, this, ., blockAnchor, ., equals, (]
[(, "Null 'anchor' argument.", ), ;, }, if, (, this, ., blockAnchor, ., equals, (, anchor, ), ), {, return, ;, }]
[(, "Null 'anchor' argument.", ), ;, }, if, (, this, ., blockAnchor, ., equals, (, anchor, ), ), {, return, ;, }]
[}, if, (, this, ., blockAnchor, ., equals, (, anchor, ), ), {, return, ;, }, this, ., blockAnchor, =]
[(, this, ., blockAnchor, ., equals, (, anchor, ), ), {, return, ;, }, this, ., blockAnchor, =, anchor, ;]
[., equals, (, anchor, ), ), {, return, ;, }, this, ., blockAnchor, =, anchor, ;, updateOffsets, (, ), ;]
[blockAnchor, =, anchor, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, PaintScale, getPaintScale, (, ), {, return]
[blockAnchor, =, anchor, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, PaintScale, getPaintScale, (, ), {, return]
[getPaintScale, (, ), {, return, this, ., paintScale, ;, }, public, void, setPaintScale, (, PaintScale, scale, ), {, if, (]
[getPaintScale, (, ), {, return, this, ., paintScale, ;, }, public, void, setPaintScale, (, PaintScale, scale, ), {, if, (]
[), {, return, this, ., paintScale, ;, }, public, void, setPaintScale, (, PaintScale, scale, ), {, if, (, scale, ==]
[., paintScale, ;, }, public, void, setPaintScale, (, PaintScale, scale, ), {, if, (, scale, ==, null, ), {, throw]
[}, public, void, setPaintScale, (, PaintScale, scale, ), {, if, (, scale, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, PaintScale, scale, ), {, if, (, scale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }]
[(, PaintScale, scale, ), {, if, (, scale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }]
[{, if, (, scale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, this, ., paintScale, =]
[(, scale, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, this, ., paintScale, =, scale, ;]
[}, this, ., paintScale, =, scale, ;, fireChangeEvent, (, ), ;, }, private, void, updateOffsets, (, ), {, if, (]
[}, this, ., paintScale, =, scale, ;, fireChangeEvent, (, ), ;, }, private, void, updateOffsets, (, ), {, if, (]
[}, this, ., paintScale, =, scale, ;, fireChangeEvent, (, ), ;, }, private, void, updateOffsets, (, ), {, if, (]
[;, fireChangeEvent, (, ), ;, }, private, void, updateOffsets, (, ), {, if, (, this, ., blockAnchor, ., equals, (]
[;, fireChangeEvent, (, ), ;, }, private, void, updateOffsets, (, ), {, if, (, this, ., blockAnchor, ., equals, (]
[private, void, updateOffsets, (, ), {, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {]
[private, void, updateOffsets, (, ), {, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {]
[), {, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, this, ., xOffset, =]
[if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;]
[if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;]
[blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =]
[BOTTOM_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (]
[BOTTOM_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (]
[BOTTOM_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (]
[xOffset, =, 0.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[xOffset, =, 0.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {]
[yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {]
[}, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, this, ., xOffset, =]
[}, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, this, ., xOffset, =]
[else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, this, ., xOffset, =, -]
[else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, this, ., xOffset, =, -]
[., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /]
[., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;]
[., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;]
[., BOTTOM, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =]
[., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (]
[., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (]
[., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (]
[blockWidth, /, 2.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[blockWidth, /, 2.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {]
[yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {]
[}, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, this, ., xOffset, =]
[else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, this, ., xOffset, =, -]
[else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, this, ., xOffset, =, -]
[., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;]
[., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;]
[(, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =]
[{, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (]
[{, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (]
[{, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (]
[this, ., blockWidth, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[this, ., blockWidth, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {]
[yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {]
[}, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, this, ., xOffset, =]
[if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, this, ., xOffset, =, 0.0, ;]
[if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, this, ., xOffset, =, 0.0, ;]
[blockAnchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =]
[blockAnchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =]
[., equals, (, RectangleAnchor, ., LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -]
[., equals, (, RectangleAnchor, ., LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -]
[., LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /]
[., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (]
[., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (]
[., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (]
[., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., CENTER, ), ), {]
[blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., CENTER, ), ), {]
[}, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, this, ., xOffset, =]
[}, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, this, ., xOffset, =]
[else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, this, ., xOffset, =, -]
[else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, this, ., xOffset, =, -]
[., blockAnchor, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /]
[., equals, (, RectangleAnchor, ., CENTER, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;]
[., equals, (, RectangleAnchor, ., CENTER, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;]
[., CENTER, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =]
[., CENTER, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =]
[CENTER, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -]
[CENTER, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -]
[this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /]
[., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (]
[., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (]
[., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (]
[., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {]
[blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {]
[}, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, this, ., xOffset, =]
[else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, this, ., xOffset, =, -]
[else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, this, ., xOffset, =, -]
[., blockAnchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;]
[., blockAnchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;]
[(, RectangleAnchor, ., RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =]
[(, RectangleAnchor, ., RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =]
[RectangleAnchor, ., RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, -]
[RectangleAnchor, ., RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, -]
[), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight, /]
[-, this, ., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (]
[-, this, ., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (]
[-, this, ., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (]
[., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {]
[blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {]
[}, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, this, ., xOffset, =]
[if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;]
[if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;]
[blockAnchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =]
[., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -]
[., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -]
[{, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (]
[{, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (]
[{, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (]
[;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {]
[this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {]
[}, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, this, ., xOffset, =]
[}, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, this, ., xOffset, =]
[else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, this, ., xOffset, =, -]
[else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, this, ., xOffset, =, -]
[., blockAnchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /]
[., equals, (, RectangleAnchor, ., TOP, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;]
[., equals, (, RectangleAnchor, ., TOP, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;]
[., TOP, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =]
[TOP, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -]
[TOP, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -]
[-, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (]
[-, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (]
[-, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (]
[;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {]
[this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {]
[}, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, this, ., xOffset, =]
[else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, this, ., xOffset, =, -]
[else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, this, ., xOffset, =, -]
[., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;]
[., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;]
[(, RectangleAnchor, ., TOP_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =]
[RectangleAnchor, ., TOP_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, -]
[RectangleAnchor, ., TOP_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, -]
[., yOffset, =, -, this, ., blockHeight, ;, }, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (]
[., yOffset, =, -, this, ., blockHeight, ;, }, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (]
[=, -, this, ., blockHeight, ;, }, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=]
[}, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, Range, r, =]
[}, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, Range, r, =]
[findDomainBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, Range, r, =, DatasetUtilities, ., findDomainBounds, (]
[XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, Range, r, =, DatasetUtilities, ., findDomainBounds, (, dataset, ,]
[(, dataset, !=, null, ), {, Range, r, =, DatasetUtilities, ., findDomainBounds, (, dataset, ,, false, ), ;, if, (]
[(, dataset, !=, null, ), {, Range, r, =, DatasetUtilities, ., findDomainBounds, (, dataset, ,, false, ), ;, if, (]
[!=, null, ), {, Range, r, =, DatasetUtilities, ., findDomainBounds, (, dataset, ,, false, ), ;, if, (, r, ==]
[Range, r, =, DatasetUtilities, ., findDomainBounds, (, dataset, ,, false, ), ;, if, (, r, ==, null, ), {, return]
[(, dataset, ,, false, ), ;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return]
[false, ), ;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return, new, Range, (]
[false, ), ;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return, new, Range, (]
[false, ), ;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return, new, Range, (]
[==, null, ), {, return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +]
[==, null, ), {, return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +]
[return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., xOffset, ,]
[return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., xOffset, ,]
[return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., xOffset, ,]
[return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., xOffset, ,]
[return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., xOffset, ,, r, ., getUpperBound, (, ), +]
[return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., xOffset, ,, r, ., getUpperBound, (, ), +]
[r, ., getLowerBound, (, ), +, this, ., xOffset, ,, r, ., getUpperBound, (, ), +, this, ., blockWidth, +]
[r, ., getLowerBound, (, ), +, this, ., xOffset, ,, r, ., getUpperBound, (, ), +, this, ., blockWidth, +]
[r, ., getUpperBound, (, ), +, this, ., blockWidth, +, this, ., xOffset, ), ;, }, }, else, {, return]
[;, }, }, else, {, return, null, ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (]
[;, }, }, else, {, return, null, ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (]
[}, else, {, return, null, ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=]
[}, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, Range, r, =]
[}, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, Range, r, =]
[findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, Range, r, =, DatasetUtilities, ., findRangeBounds, (]
[XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, Range, r, =, DatasetUtilities, ., findRangeBounds, (, dataset, ,]
[(, dataset, !=, null, ), {, Range, r, =, DatasetUtilities, ., findRangeBounds, (, dataset, ,, false, ), ;, if, (]
[(, dataset, !=, null, ), {, Range, r, =, DatasetUtilities, ., findRangeBounds, (, dataset, ,, false, ), ;, if, (]
[!=, null, ), {, Range, r, =, DatasetUtilities, ., findRangeBounds, (, dataset, ,, false, ), ;, if, (, r, ==]
[Range, r, =, DatasetUtilities, ., findRangeBounds, (, dataset, ,, false, ), ;, if, (, r, ==, null, ), {, return]
[(, dataset, ,, false, ), ;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return]
[false, ), ;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return, new, Range, (]
[false, ), ;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return, new, Range, (]
[false, ), ;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return, new, Range, (]
[==, null, ), {, return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +]
[==, null, ), {, return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +]
[return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., yOffset, ,]
[return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., yOffset, ,]
[return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., yOffset, ,]
[return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., yOffset, ,]
[return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., yOffset, ,, r, ., getUpperBound, (, ), +]
[return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., yOffset, ,, r, ., getUpperBound, (, ), +]
[r, ., getLowerBound, (, ), +, this, ., yOffset, ,, r, ., getUpperBound, (, ), +, this, ., blockHeight, +]
[r, ., getLowerBound, (, ), +, this, ., yOffset, ,, r, ., getUpperBound, (, ), +, this, ., blockHeight, +]
[r, ., getUpperBound, (, ), +, this, ., blockHeight, +, this, ., yOffset, ), ;, }, }, else, {, return]
[,, XYDataset, dataset, ,, int, series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, double, x, =]
[,, XYDataset, dataset, ,, int, series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, double, x, =]
[int, series, ,, int, item, ,, boolean, selected, ,, int, pass, ), {, double, x, =, dataset, ., getXValue, (]
[,, int, item, ,, boolean, selected, ,, int, pass, ), {, double, x, =, dataset, ., getXValue, (, series, ,]
[,, int, pass, ), {, double, x, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y, =]
[,, int, pass, ), {, double, x, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y, =]
[{, double, x, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y, =, dataset, ., getYValue, (]
[x, =, dataset, ., getXValue, (, series, ,, item, ), ;, double, y, =, dataset, ., getYValue, (, series, ,]
[series, ,, item, ), ;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, double, z, =]
[;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, double, z, =, 0.0, ;, if, (]
[;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, double, z, =, 0.0, ;, if, (]
[., getYValue, (, series, ,, item, ), ;, double, z, =, 0.0, ;, if, (, dataset, instanceof, XYZDataset, ), {]
[(, series, ,, item, ), ;, double, z, =, 0.0, ;, if, (, dataset, instanceof, XYZDataset, ), {, z, =]
[(, series, ,, item, ), ;, double, z, =, 0.0, ;, if, (, dataset, instanceof, XYZDataset, ), {, z, =]
[series, ,, item, ), ;, double, z, =, 0.0, ;, if, (, dataset, instanceof, XYZDataset, ), {, z, =, (]
[), ;, double, z, =, 0.0, ;, if, (, dataset, instanceof, XYZDataset, ), {, z, =, (, (, XYZDataset, )]
[0.0, ;, if, (, dataset, instanceof, XYZDataset, ), {, z, =, (, (, XYZDataset, ), dataset, ), ., getZValue, (]
[if, (, dataset, instanceof, XYZDataset, ), {, z, =, (, (, XYZDataset, ), dataset, ), ., getZValue, (, series, ,]
[z, =, (, (, XYZDataset, ), dataset, ), ., getZValue, (, series, ,, item, ), ;, }, Paint, p, =]
[z, =, (, (, XYZDataset, ), dataset, ), ., getZValue, (, series, ,, item, ), ;, }, Paint, p, =]
[z, =, (, (, XYZDataset, ), dataset, ), ., getZValue, (, series, ,, item, ), ;, }, Paint, p, =]
[dataset, ), ., getZValue, (, series, ,, item, ), ;, }, Paint, p, =, this, ., paintScale, ., getPaint, (]
[,, item, ), ;, }, Paint, p, =, this, ., paintScale, ., getPaint, (, z, ), ;, double, xx0, =]
[,, item, ), ;, }, Paint, p, =, this, ., paintScale, ., getPaint, (, z, ), ;, double, xx0, =]
[}, Paint, p, =, this, ., paintScale, ., getPaint, (, z, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (]
[}, Paint, p, =, this, ., paintScale, ., getPaint, (, z, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (]
[p, =, this, ., paintScale, ., getPaint, (, z, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (, x, +]
[p, =, this, ., paintScale, ., getPaint, (, z, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (, x, +]
[paintScale, ., getPaint, (, z, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (, x, +, this, ., xOffset, ,]
[getPaint, (, z, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (, x, +, this, ., xOffset, ,, dataArea, ,]
[getPaint, (, z, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (, x, +, this, ., xOffset, ,, dataArea, ,]
[valueToJava2D, (, x, +, this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =]
[valueToJava2D, (, x, +, this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =]
[this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (]
[this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (]
[xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, +]
[xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, +]
[plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., yOffset, ,]
[getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., yOffset, ,, dataArea, ,]
[getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., yOffset, ,, dataArea, ,]
[valueToJava2D, (, y, +, this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =]
[valueToJava2D, (, y, +, this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =]
[this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (]
[this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (]
[this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (]
[yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +]
[yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +]
[plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, this, ., blockWidth, +]
[plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, this, ., blockWidth, +]
[), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, this, ., blockWidth, +, this, ., xOffset, ,]
[;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, this, ., blockWidth, +, this, ., xOffset, ,, dataArea, ,]
[;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, this, ., blockWidth, +, this, ., xOffset, ,, dataArea, ,]
[this, ., blockWidth, +, this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =]
[this, ., blockWidth, +, this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =]
[this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (]
[this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (]
[this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (]
[xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +]
[xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +]
[plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., blockHeight, +]
[plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., blockHeight, +]
[), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., blockHeight, +, this, ., yOffset, ,]
[;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., blockHeight, +, this, ., yOffset, ,, dataArea, ,]
[;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., blockHeight, +, this, ., yOffset, ,, dataArea, ,]
[+, this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =]
[+, this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =]
[., getRangeAxisEdge, (, ), ), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[., getRangeAxisEdge, (, ), ), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ., equals, (]
[), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ., equals, (]
[orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {]
[plot, ., getOrientation, (, ), ;, if, (, orientation, ., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, block, =]
[;, if, (, orientation, ., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, block, =, new, Rectangle2D, ., Double, (]
[;, if, (, orientation, ., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, block, =, new, Rectangle2D, ., Double, (]
[., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (]
[(, PlotOrientation, ., HORIZONTAL, ), ), {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, yy0, ,]
[HORIZONTAL, ), ), {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, yy0, ,, yy1, ), ,]
[HORIZONTAL, ), ), {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, yy0, ,, yy1, ), ,]
[block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., min, (]
[new, Rectangle2D, ., Double, (, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., min, (, xx0, ,]
[Double, (, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., min, (, xx0, ,, xx1, ), ,]
[Double, (, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., min, (, xx0, ,, xx1, ), ,]
[min, (, yy0, ,, yy1, ), ,, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., abs, (]
[min, (, yy0, ,, yy1, ), ,, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., abs, (]
[yy0, ,, yy1, ), ,, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., abs, (, yy1, -]
[), ,, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., abs, (, yy1, -, yy0, ), ,]
[), ,, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., abs, (, yy1, -, yy0, ), ,]
[min, (, xx0, ,, xx1, ), ,, Math, ., abs, (, yy1, -, yy0, ), ,, Math, ., abs, (]
[min, (, xx0, ,, xx1, ), ,, Math, ., abs, (, yy1, -, yy0, ), ,, Math, ., abs, (]
[xx0, ,, xx1, ), ,, Math, ., abs, (, yy1, -, yy0, ), ,, Math, ., abs, (, xx0, -]
[abs, (, yy1, -, yy0, ), ,, Math, ., abs, (, xx0, -, xx1, ), ), ;, }, else, {]
[yy1, -, yy0, ), ,, Math, ., abs, (, xx0, -, xx1, ), ), ;, }, else, {, block, =]
[Math, ., abs, (, xx0, -, xx1, ), ), ;, }, else, {, block, =, new, Rectangle2D, ., Double, (]
[Math, ., abs, (, xx0, -, xx1, ), ), ;, }, else, {, block, =, new, Rectangle2D, ., Double, (]
[xx0, -, xx1, ), ), ;, }, else, {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (]
[xx1, ), ), ;, }, else, {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, xx0, ,]
[;, }, else, {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, xx0, ,, xx1, ), ,]
[;, }, else, {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, xx0, ,, xx1, ), ,]
[block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., min, (]
[new, Rectangle2D, ., Double, (, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., min, (, yy0, ,]
[Double, (, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., min, (, yy0, ,, yy1, ), ,]
[Double, (, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., min, (, yy0, ,, yy1, ), ,]
[min, (, xx0, ,, xx1, ), ,, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., abs, (]
[min, (, xx0, ,, xx1, ), ,, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., abs, (]
[xx0, ,, xx1, ), ,, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., abs, (, xx1, -]
[), ,, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., abs, (, xx1, -, xx0, ), ,]
[), ,, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., abs, (, xx1, -, xx0, ), ,]
[min, (, yy0, ,, yy1, ), ,, Math, ., abs, (, xx1, -, xx0, ), ,, Math, ., abs, (]
[min, (, yy0, ,, yy1, ), ,, Math, ., abs, (, xx1, -, xx0, ), ,, Math, ., abs, (]
[yy0, ,, yy1, ), ,, Math, ., abs, (, xx1, -, xx0, ), ,, Math, ., abs, (, yy1, -]
[Math, ., abs, (, xx1, -, xx0, ), ,, Math, ., abs, (, yy1, -, yy0, ), ), ;, }]
[Math, ., abs, (, xx1, -, xx0, ), ,, Math, ., abs, (, yy1, -, yy0, ), ), ;, }]
[xx1, -, xx0, ), ,, Math, ., abs, (, yy1, -, yy0, ), ), ;, }, g2, ., setPaint, (]
[), ,, Math, ., abs, (, yy1, -, yy0, ), ), ;, }, g2, ., setPaint, (, p, ), ;]
[), ,, Math, ., abs, (, yy1, -, yy0, ), ), ;, }, g2, ., setPaint, (, p, ), ;]
[abs, (, yy1, -, yy0, ), ), ;, }, g2, ., setPaint, (, p, ), ;, g2, ., fill, (]
[-, yy0, ), ), ;, }, g2, ., setPaint, (, p, ), ;, g2, ., fill, (, block, ), ;]
[-, yy0, ), ), ;, }, g2, ., setPaint, (, p, ), ;, g2, ., fill, (, block, ), ;]
[;, }, g2, ., setPaint, (, p, ), ;, g2, ., fill, (, block, ), ;, g2, ., setStroke, (]
[., setPaint, (, p, ), ;, g2, ., fill, (, block, ), ;, g2, ., setStroke, (, new, BasicStroke, (]
[), ;, g2, ., fill, (, block, ), ;, g2, ., setStroke, (, new, BasicStroke, (, 1.0f, ), ), ;]
[), ;, g2, ., fill, (, block, ), ;, g2, ., setStroke, (, new, BasicStroke, (, 1.0f, ), ), ;]
[fill, (, block, ), ;, g2, ., setStroke, (, new, BasicStroke, (, 1.0f, ), ), ;, g2, ., draw, (]
[., setStroke, (, new, BasicStroke, (, 1.0f, ), ), ;, g2, ., draw, (, block, ), ;, EntityCollection, entities, =]
[., setStroke, (, new, BasicStroke, (, 1.0f, ), ), ;, g2, ., draw, (, block, ), ;, EntityCollection, entities, =]
[), ;, g2, ., draw, (, block, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[), ;, g2, ., draw, (, block, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[g2, ., draw, (, block, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=]
[(, block, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,]
[=, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, block, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, block, ,, dataset, ,]
[(, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, block, ,, dataset, ,, series, ,]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, block, ,, dataset, ,, series, ,, item, ,]
[(, entities, !=, null, ), {, addEntity, (, entities, ,, block, ,, dataset, ,, series, ,, item, ,, selected, ,]
[!=, null, ), {, addEntity, (, entities, ,, block, ,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,]
[,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, 0.0, ,, 0.0, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, XYBlockRenderer, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, XYBlockRenderer, ), ), {, return, false, ;, }, XYBlockRenderer, that, =]
[if, (, !, (, obj, instanceof, XYBlockRenderer, ), ), {, return, false, ;, }, XYBlockRenderer, that, =, (, XYBlockRenderer, )]
[obj, instanceof, XYBlockRenderer, ), ), {, return, false, ;, }, XYBlockRenderer, that, =, (, XYBlockRenderer, ), obj, ;, if, (]
[obj, instanceof, XYBlockRenderer, ), ), {, return, false, ;, }, XYBlockRenderer, that, =, (, XYBlockRenderer, ), obj, ;, if, (]
[obj, instanceof, XYBlockRenderer, ), ), {, return, false, ;, }, XYBlockRenderer, that, =, (, XYBlockRenderer, ), obj, ;, if, (]
[), {, return, false, ;, }, XYBlockRenderer, that, =, (, XYBlockRenderer, ), obj, ;, if, (, this, ., blockHeight, !=]
[), {, return, false, ;, }, XYBlockRenderer, that, =, (, XYBlockRenderer, ), obj, ;, if, (, this, ., blockHeight, !=]
[XYBlockRenderer, that, =, (, XYBlockRenderer, ), obj, ;, if, (, this, ., blockHeight, !=, that, ., blockHeight, ), {, return]
[), obj, ;, if, (, this, ., blockHeight, !=, that, ., blockHeight, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., blockHeight, !=, that, ., blockHeight, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., blockHeight, !=, that, ., blockHeight, ), {, return, false, ;, }, if, (]
[(, this, ., blockHeight, !=, that, ., blockHeight, ), {, return, false, ;, }, if, (, this, ., blockWidth, !=]
[(, this, ., blockHeight, !=, that, ., blockHeight, ), {, return, false, ;, }, if, (, this, ., blockWidth, !=]
[., blockHeight, ), {, return, false, ;, }, if, (, this, ., blockWidth, !=, that, ., blockWidth, ), {, return]
[false, ;, }, if, (, this, ., blockWidth, !=, that, ., blockWidth, ), {, return, false, ;, }, if, (]
[;, }, if, (, this, ., blockWidth, !=, that, ., blockWidth, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., blockWidth, !=, that, ., blockWidth, ), {, return, false, ;, }, if, (, !]
[;, }, if, (, this, ., blockWidth, !=, that, ., blockWidth, ), {, return, false, ;, }, if, (, !]
[blockWidth, !=, that, ., blockWidth, ), {, return, false, ;, }, if, (, !, this, ., blockAnchor, ., equals, (]
[blockWidth, !=, that, ., blockWidth, ), {, return, false, ;, }, if, (, !, this, ., blockAnchor, ., equals, (]
[return, false, ;, }, if, (, !, this, ., blockAnchor, ., equals, (, that, ., blockAnchor, ), ), {, return]
[(, !, this, ., blockAnchor, ., equals, (, that, ., blockAnchor, ), ), {, return, false, ;, }, if, (]
[!, this, ., blockAnchor, ., equals, (, that, ., blockAnchor, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., blockAnchor, ., equals, (, that, ., blockAnchor, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., blockAnchor, ., equals, (, that, ., blockAnchor, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., blockAnchor, ), ), {, return, false, ;, }, if, (, !, this, ., paintScale, ., equals, (]
[(, that, ., blockAnchor, ), ), {, return, false, ;, }, if, (, !, this, ., paintScale, ., equals, (]
[return, false, ;, }, if, (, !, this, ., paintScale, ., equals, (, that, ., paintScale, ), ), {, return]
[if, (, !, this, ., paintScale, ., equals, (, that, ., paintScale, ), ), {, return, false, ;, }, return]
[if, (, !, this, ., paintScale, ., equals, (, that, ., paintScale, ), ), {, return, false, ;, }, return]
[., paintScale, ., equals, (, that, ., paintScale, ), ), {, return, false, ;, }, return, super, ., equals, (]
[return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, XYBlockRenderer, clone, =]
[equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, XYBlockRenderer, clone, =, (, XYBlockRenderer, )]
[equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, XYBlockRenderer, clone, =, (, XYBlockRenderer, )]
[clone, (, ), throws, CloneNotSupportedException, {, XYBlockRenderer, clone, =, (, XYBlockRenderer, ), super, ., clone, (, ), ;, if, (]
[clone, (, ), throws, CloneNotSupportedException, {, XYBlockRenderer, clone, =, (, XYBlockRenderer, ), super, ., clone, (, ), ;, if, (]
[clone, (, ), throws, CloneNotSupportedException, {, XYBlockRenderer, clone, =, (, XYBlockRenderer, ), super, ., clone, (, ), ;, if, (]
[XYBlockRenderer, ), super, ., clone, (, ), ;, if, (, this, ., paintScale, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =]
[., clone, (, ), ;, if, (, this, ., paintScale, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, )]
[., clone, (, ), ;, if, (, this, ., paintScale, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, )]
[;, if, (, this, ., paintScale, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., paintScale, ;]
[;, if, (, this, ., paintScale, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., paintScale, ;]
[., paintScale, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., paintScale, ;, clone, ., paintScale, =]
[PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., paintScale, ;, clone, ., paintScale, =, (, PaintScale, )]
[PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., paintScale, ;, clone, ., paintScale, =, (, PaintScale, )]
[), this, ., paintScale, ;, clone, ., paintScale, =, (, PaintScale, ), pc, ., clone, (, ), ;, }, return]
