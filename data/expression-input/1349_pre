[;, public, class, JacobianFunction, implements, MultivariateMatrixFunction, {, private, final, MultivariateDifferentiableVectorFunction, f, ;, public, JacobianFunction, (, final, MultivariateDifferentiableVectorFunction, f, ), {]
[;, public, class, JacobianFunction, implements, MultivariateMatrixFunction, {, private, final, MultivariateDifferentiableVectorFunction, f, ;, public, JacobianFunction, (, final, MultivariateDifferentiableVectorFunction, f, ), {]
[implements, MultivariateMatrixFunction, {, private, final, MultivariateDifferentiableVectorFunction, f, ;, public, JacobianFunction, (, final, MultivariateDifferentiableVectorFunction, f, ), {, this, ., f, =]
[public, double, [, ], [, ], value, (, double, [, ], point, ), {, final, DerivativeStructure, [, ], dsX, =]
[], [, ], value, (, double, [, ], point, ), {, final, DerivativeStructure, [, ], dsX, =, new, DerivativeStructure, []
[], [, ], value, (, double, [, ], point, ), {, final, DerivativeStructure, [, ], dsX, =, new, DerivativeStructure, []
[{, final, DerivativeStructure, [, ], dsX, =, new, DerivativeStructure, [, point, ., length, ], ;, for, (, int, i, =]
[DerivativeStructure, [, ], dsX, =, new, DerivativeStructure, [, point, ., length, ], ;, for, (, int, i, =, 0, ;]
[DerivativeStructure, [, ], dsX, =, new, DerivativeStructure, [, point, ., length, ], ;, for, (, int, i, =, 0, ;]
[], dsX, =, new, DerivativeStructure, [, point, ., length, ], ;, for, (, int, i, =, 0, ;, i, <]
[], dsX, =, new, DerivativeStructure, [, point, ., length, ], ;, for, (, int, i, =, 0, ;, i, <]
[DerivativeStructure, [, point, ., length, ], ;, for, (, int, i, =, 0, ;, i, <, point, ., length, ;]
[[, point, ., length, ], ;, for, (, int, i, =, 0, ;, i, <, point, ., length, ;, ++]
[length, ], ;, for, (, int, i, =, 0, ;, i, <, point, ., length, ;, ++, i, ), {]
[length, ], ;, for, (, int, i, =, 0, ;, i, <, point, ., length, ;, ++, i, ), {]
[;, for, (, int, i, =, 0, ;, i, <, point, ., length, ;, ++, i, ), {, dsX, []
[int, i, =, 0, ;, i, <, point, ., length, ;, ++, i, ), {, dsX, [, i, ], =]
[0, ;, i, <, point, ., length, ;, ++, i, ), {, dsX, [, i, ], =, new, DerivativeStructure, (]
[0, ;, i, <, point, ., length, ;, ++, i, ), {, dsX, [, i, ], =, new, DerivativeStructure, (]
[point, ., length, ;, ++, i, ), {, dsX, [, i, ], =, new, DerivativeStructure, (, point, ., length, ,]
[length, ;, ++, i, ), {, dsX, [, i, ], =, new, DerivativeStructure, (, point, ., length, ,, 1, ,]
[++, i, ), {, dsX, [, i, ], =, new, DerivativeStructure, (, point, ., length, ,, 1, ,, i, ,]
[++, i, ), {, dsX, [, i, ], =, new, DerivativeStructure, (, point, ., length, ,, 1, ,, i, ,]
[), {, dsX, [, i, ], =, new, DerivativeStructure, (, point, ., length, ,, 1, ,, i, ,, point, []
[., length, ,, 1, ,, i, ,, point, [, i, ], ), ;, }, final, DerivativeStructure, [, ], dsY, =]
[., length, ,, 1, ,, i, ,, point, [, i, ], ), ;, }, final, DerivativeStructure, [, ], dsY, =]
[,, i, ,, point, [, i, ], ), ;, }, final, DerivativeStructure, [, ], dsY, =, f, ., value, (]
[DerivativeStructure, [, ], dsY, =, f, ., value, (, dsX, ), ;, final, double, [, ], [, ], y, =]
[dsY, =, f, ., value, (, dsX, ), ;, final, double, [, ], [, ], y, =, new, double, []
[dsY, =, f, ., value, (, dsX, ), ;, final, double, [, ], [, ], y, =, new, double, []
[(, dsX, ), ;, final, double, [, ], [, ], y, =, new, double, [, dsY, ., length, ], []
[(, dsX, ), ;, final, double, [, ], [, ], y, =, new, double, [, dsY, ., length, ], []
[=, new, double, [, dsY, ., length, ], [, point, ., length, ], ;, final, int, [, ], orders, =]
[[, dsY, ., length, ], [, point, ., length, ], ;, final, int, [, ], orders, =, new, int, []
[[, dsY, ., length, ], [, point, ., length, ], ;, final, int, [, ], orders, =, new, int, []
[;, final, int, [, ], orders, =, new, int, [, point, ., length, ], ;, for, (, int, i, =]
[int, [, ], orders, =, new, int, [, point, ., length, ], ;, for, (, int, i, =, 0, ;]
[int, [, ], orders, =, new, int, [, point, ., length, ], ;, for, (, int, i, =, 0, ;]
[], orders, =, new, int, [, point, ., length, ], ;, for, (, int, i, =, 0, ;, i, <]
[], orders, =, new, int, [, point, ., length, ], ;, for, (, int, i, =, 0, ;, i, <]
[int, [, point, ., length, ], ;, for, (, int, i, =, 0, ;, i, <, dsY, ., length, ;]
[[, point, ., length, ], ;, for, (, int, i, =, 0, ;, i, <, dsY, ., length, ;, ++]
[int, i, =, 0, ;, i, <, dsY, ., length, ;, ++, i, ), {, for, (, int, j, =]
[=, 0, ;, i, <, dsY, ., length, ;, ++, i, ), {, for, (, int, j, =, 0, ;]
[=, 0, ;, i, <, dsY, ., length, ;, ++, i, ), {, for, (, int, j, =, 0, ;]
[;, i, <, dsY, ., length, ;, ++, i, ), {, for, (, int, j, =, 0, ;, j, <]
[;, i, <, dsY, ., length, ;, ++, i, ), {, for, (, int, j, =, 0, ;, j, <]
[., length, ;, ++, i, ), {, for, (, int, j, =, 0, ;, j, <, point, ., length, ;]
[length, ;, ++, i, ), {, for, (, int, j, =, 0, ;, j, <, point, ., length, ;, ++]
[i, ), {, for, (, int, j, =, 0, ;, j, <, point, ., length, ;, ++, j, ), {]
[i, ), {, for, (, int, j, =, 0, ;, j, <, point, ., length, ;, ++, j, ), {]
[{, for, (, int, j, =, 0, ;, j, <, point, ., length, ;, ++, j, ), {, orders, []
[int, j, =, 0, ;, j, <, point, ., length, ;, ++, j, ), {, orders, [, j, ], =]
[=, 0, ;, j, <, point, ., length, ;, ++, j, ), {, orders, [, j, ], =, 1, ;]
[=, 0, ;, j, <, point, ., length, ;, ++, j, ), {, orders, [, j, ], =, 1, ;]
[=, 0, ;, j, <, point, ., length, ;, ++, j, ), {, orders, [, j, ], =, 1, ;]
[;, j, <, point, ., length, ;, ++, j, ), {, orders, [, j, ], =, 1, ;, y, []
[point, ., length, ;, ++, j, ), {, orders, [, j, ], =, 1, ;, y, [, i, ], []
[;, ++, j, ), {, orders, [, j, ], =, 1, ;, y, [, i, ], [, j, ], =]
[;, ++, j, ), {, orders, [, j, ], =, 1, ;, y, [, i, ], [, j, ], =]
[;, ++, j, ), {, orders, [, j, ], =, 1, ;, y, [, i, ], [, j, ], =]
[j, ), {, orders, [, j, ], =, 1, ;, y, [, i, ], [, j, ], =, dsY, []
[j, ], =, 1, ;, y, [, i, ], [, j, ], =, dsY, [, i, ], ., getPartialDerivative, (]
[1, ;, y, [, i, ], [, j, ], =, dsY, [, i, ], ., getPartialDerivative, (, orders, ), ;]
[1, ;, y, [, i, ], [, j, ], =, dsY, [, i, ], ., getPartialDerivative, (, orders, ), ;]
[y, [, i, ], [, j, ], =, dsY, [, i, ], ., getPartialDerivative, (, orders, ), ;, orders, []
[], [, j, ], =, dsY, [, i, ], ., getPartialDerivative, (, orders, ), ;, orders, [, j, ], =]
[dsY, [, i, ], ., getPartialDerivative, (, orders, ), ;, orders, [, j, ], =, 0, ;, }, }, return]
