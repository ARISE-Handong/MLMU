[io, ., Serializable, ;, public, class, PointerNeedle, extends, MeterNeedle, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[., Serializable, ;, public, class, PointerNeedle, extends, MeterNeedle, implements, Cloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, -]
[protected, void, drawNeedle, (, Graphics2D, g2, ,, Rectangle2D, plotArea, ,, Point2D, rotate, ,, double, angle, ), {, GeneralPath, shape1, =]
[plotArea, ,, Point2D, rotate, ,, double, angle, ), {, GeneralPath, shape1, =, new, GeneralPath, (, ), ;, GeneralPath, shape2, =]
[{, GeneralPath, shape1, =, new, GeneralPath, (, ), ;, GeneralPath, shape2, =, new, GeneralPath, (, ), ;, float, minX, =]
[=, new, GeneralPath, (, ), ;, GeneralPath, shape2, =, new, GeneralPath, (, ), ;, float, minX, =, (, float, )]
[=, new, GeneralPath, (, ), ;, GeneralPath, shape2, =, new, GeneralPath, (, ), ;, float, minX, =, (, float, )]
[new, GeneralPath, (, ), ;, float, minX, =, (, float, ), plotArea, ., getMinX, (, ), ;, float, minY, =]
[), ;, float, minX, =, (, float, ), plotArea, ., getMinX, (, ), ;, float, minY, =, (, float, )]
[), ;, float, minX, =, (, float, ), plotArea, ., getMinX, (, ), ;, float, minY, =, (, float, )]
[., getMinX, (, ), ;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxX, =]
[), ;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxX, =, (, float, )]
[), ;, float, minY, =, (, float, ), plotArea, ., getMinY, (, ), ;, float, maxX, =, (, float, )]
[., getMinY, (, ), ;, float, maxX, =, (, float, ), plotArea, ., getMaxX, (, ), ;, float, maxY, =]
[), ;, float, maxX, =, (, float, ), plotArea, ., getMaxX, (, ), ;, float, maxY, =, (, float, )]
[), ;, float, maxX, =, (, float, ), plotArea, ., getMaxX, (, ), ;, float, maxY, =, (, float, )]
[., getMaxX, (, ), ;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =]
[), ;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, )]
[;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (]
[;, float, maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (]
[maxY, =, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (, minX, +]
[=, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (, minX, +, (]
[=, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (, minX, +, (]
[=, (, float, ), plotArea, ., getMaxY, (, ), ;, float, midX, =, (, float, ), (, minX, +, (]
[getMaxY, (, ), ;, float, midX, =, (, float, ), (, minX, +, (, plotArea, ., getWidth, (, ), /]
[(, float, ), (, minX, +, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, float, midY, =]
[(, minX, +, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, float, midY, =, (, float, )]
[minX, +, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, float, midY, =, (, float, ), (]
[minX, +, (, plotArea, ., getWidth, (, ), /, 2, ), ), ;, float, midY, =, (, float, ), (]
[(, plotArea, ., getWidth, (, ), /, 2, ), ), ;, float, midY, =, (, float, ), (, minY, +]
[plotArea, ., getWidth, (, ), /, 2, ), ), ;, float, midY, =, (, float, ), (, minY, +, (]
[plotArea, ., getWidth, (, ), /, 2, ), ), ;, float, midY, =, (, float, ), (, minY, +, (]
[plotArea, ., getWidth, (, ), /, 2, ), ), ;, float, midY, =, (, float, ), (, minY, +, (]
[2, ), ), ;, float, midY, =, (, float, ), (, minY, +, (, plotArea, ., getHeight, (, ), /]
[float, midY, =, (, float, ), (, minY, +, (, plotArea, ., getHeight, (, ), /, 2, ), ), ;]
[float, midY, =, (, float, ), (, minY, +, (, plotArea, ., getHeight, (, ), /, 2, ), ), ;]
[float, ), (, minY, +, (, plotArea, ., getHeight, (, ), /, 2, ), ), ;, shape1, ., moveTo, (]
[(, minY, +, (, plotArea, ., getHeight, (, ), /, 2, ), ), ;, shape1, ., moveTo, (, minX, ,]
[(, plotArea, ., getHeight, (, ), /, 2, ), ), ;, shape1, ., moveTo, (, minX, ,, midY, ), ;]
[(, plotArea, ., getHeight, (, ), /, 2, ), ), ;, shape1, ., moveTo, (, minX, ,, midY, ), ;]
[(, ), /, 2, ), ), ;, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (]
[/, 2, ), ), ;, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,]
[), ;, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;]
[), ;, shape1, ., moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;]
[moveTo, (, minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1, ., lineTo, (]
[minX, ,, midY, ), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1, ., lineTo, (, maxX, ,]
[), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1, ., lineTo, (, maxX, ,, midY, ), ;]
[), ;, shape1, ., lineTo, (, midX, ,, minY, ), ;, shape1, ., lineTo, (, maxX, ,, midY, ), ;]
[midX, ,, minY, ), ;, shape1, ., lineTo, (, maxX, ,, midY, ), ;, shape1, ., closePath, (, ), ;]
[midX, ,, minY, ), ;, shape1, ., lineTo, (, maxX, ,, midY, ), ;, shape1, ., closePath, (, ), ;]
[;, shape1, ., lineTo, (, maxX, ,, midY, ), ;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (]
[., lineTo, (, maxX, ,, midY, ), ;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (, minX, ,]
[maxX, ,, midY, ), ;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (, minX, ,, midY, ), ;]
[maxX, ,, midY, ), ;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (, minX, ,, midY, ), ;]
[;, shape1, ., closePath, (, ), ;, shape2, ., moveTo, (, minX, ,, midY, ), ;, shape2, ., lineTo, (]
[., closePath, (, ), ;, shape2, ., moveTo, (, minX, ,, midY, ), ;, shape2, ., lineTo, (, midX, ,]
[), ;, shape2, ., moveTo, (, minX, ,, midY, ), ;, shape2, ., lineTo, (, midX, ,, maxY, ), ;]
[), ;, shape2, ., moveTo, (, minX, ,, midY, ), ;, shape2, ., lineTo, (, midX, ,, maxY, ), ;]
[moveTo, (, minX, ,, midY, ), ;, shape2, ., lineTo, (, midX, ,, maxY, ), ;, shape2, ., lineTo, (]
[minX, ,, midY, ), ;, shape2, ., lineTo, (, midX, ,, maxY, ), ;, shape2, ., lineTo, (, maxX, ,]
[), ;, shape2, ., lineTo, (, midX, ,, maxY, ), ;, shape2, ., lineTo, (, maxX, ,, midY, ), ;]
[), ;, shape2, ., lineTo, (, midX, ,, maxY, ), ;, shape2, ., lineTo, (, maxX, ,, midY, ), ;]
[maxY, ), ;, shape2, ., lineTo, (, maxX, ,, midY, ), ;, shape2, ., closePath, (, ), ;, if, (]
[maxY, ), ;, shape2, ., lineTo, (, maxX, ,, midY, ), ;, shape2, ., closePath, (, ), ;, if, (]
[), ;, shape2, ., lineTo, (, maxX, ,, midY, ), ;, shape2, ., closePath, (, ), ;, if, (, (]
[), ;, shape2, ., lineTo, (, maxX, ,, midY, ), ;, shape2, ., closePath, (, ), ;, if, (, (]
[shape2, ., lineTo, (, maxX, ,, midY, ), ;, shape2, ., closePath, (, ), ;, if, (, (, rotate, !=]
[(, maxX, ,, midY, ), ;, shape2, ., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&]
[maxX, ,, midY, ), ;, shape2, ., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (]
[maxX, ,, midY, ), ;, shape2, ., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (]
[midY, ), ;, shape2, ., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=]
[., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {]
[., closePath, (, ), ;, if, (, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {]
[(, (, rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (]
[rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,]
[rotate, !=, null, ), &&, (, angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,]
[angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,]
[angle, !=, 0, ), ), {, getTransform, (, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,]
[(, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;]
[(, ), ., setToRotation, (, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;]
[(, angle, ,, rotate, ., getX, (, ), ,, rotate, ., getY, (, ), ), ;, shape1, ., transform, (]
[getX, (, ), ,, rotate, ., getY, (, ), ), ;, shape1, ., transform, (, getTransform, (, ), ), ;]
[getX, (, ), ,, rotate, ., getY, (, ), ), ;, shape1, ., transform, (, getTransform, (, ), ), ;]
[rotate, ., getY, (, ), ), ;, shape1, ., transform, (, getTransform, (, ), ), ;, shape2, ., transform, (]
[., transform, (, getTransform, (, ), ), ;, shape2, ., transform, (, getTransform, (, ), ), ;, }, if, (]
[., transform, (, getTransform, (, ), ), ;, shape2, ., transform, (, getTransform, (, ), ), ;, }, if, (]
[(, ), ), ;, shape2, ., transform, (, getTransform, (, ), ), ;, }, if, (, getFillPaint, (, ), !=]
[;, shape2, ., transform, (, getTransform, (, ), ), ;, }, if, (, getFillPaint, (, ), !=, null, ), {]
[;, shape2, ., transform, (, getTransform, (, ), ), ;, }, if, (, getFillPaint, (, ), !=, null, ), {]
[(, getTransform, (, ), ), ;, }, if, (, getFillPaint, (, ), !=, null, ), {, g2, ., setPaint, (]
[;, }, if, (, getFillPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getFillPaint, (, ), ), ;]
[;, }, if, (, getFillPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getFillPaint, (, ), ), ;]
[getFillPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getFillPaint, (, ), ), ;, g2, ., fill, (]
[{, g2, ., setPaint, (, getFillPaint, (, ), ), ;, g2, ., fill, (, shape1, ), ;, }, if, (]
[{, g2, ., setPaint, (, getFillPaint, (, ), ), ;, g2, ., fill, (, shape1, ), ;, }, if, (]
[(, getFillPaint, (, ), ), ;, g2, ., fill, (, shape1, ), ;, }, if, (, getHighlightPaint, (, ), !=]
[), ), ;, g2, ., fill, (, shape1, ), ;, }, if, (, getHighlightPaint, (, ), !=, null, ), {]
[), ), ;, g2, ., fill, (, shape1, ), ;, }, if, (, getHighlightPaint, (, ), !=, null, ), {]
[., fill, (, shape1, ), ;, }, if, (, getHighlightPaint, (, ), !=, null, ), {, g2, ., setPaint, (]
[;, }, if, (, getHighlightPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;]
[;, }, if, (, getHighlightPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;]
[getHighlightPaint, (, ), !=, null, ), {, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;, g2, ., fill, (]
[{, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;, g2, ., fill, (, shape2, ), ;, }, if, (]
[{, g2, ., setPaint, (, getHighlightPaint, (, ), ), ;, g2, ., fill, (, shape2, ), ;, }, if, (]
[(, getHighlightPaint, (, ), ), ;, g2, ., fill, (, shape2, ), ;, }, if, (, getOutlinePaint, (, ), !=]
[), ), ;, g2, ., fill, (, shape2, ), ;, }, if, (, getOutlinePaint, (, ), !=, null, ), {]
[), ), ;, g2, ., fill, (, shape2, ), ;, }, if, (, getOutlinePaint, (, ), !=, null, ), {]
[., fill, (, shape2, ), ;, }, if, (, getOutlinePaint, (, ), !=, null, ), {, g2, ., setStroke, (]
[;, }, if, (, getOutlinePaint, (, ), !=, null, ), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;]
[;, }, if, (, getOutlinePaint, (, ), !=, null, ), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;]
[getOutlinePaint, (, ), !=, null, ), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;, g2, ., setPaint, (]
[), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;]
[), {, g2, ., setStroke, (, getOutlineStroke, (, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;]
[setStroke, (, getOutlineStroke, (, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;, g2, ., draw, (]
[(, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;, g2, ., draw, (, shape1, ), ;]
[(, ), ), ;, g2, ., setPaint, (, getOutlinePaint, (, ), ), ;, g2, ., draw, (, shape1, ), ;]
[g2, ., setPaint, (, getOutlinePaint, (, ), ), ;, g2, ., draw, (, shape1, ), ;, g2, ., draw, (]
[;, g2, ., draw, (, shape2, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[;, g2, ., draw, (, shape2, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., draw, (, shape2, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, PointerNeedle, ), ), {, return]
[return, true, ;, }, if, (, !, (, obj, instanceof, PointerNeedle, ), ), {, return, false, ;, }, if, (]
[true, ;, }, if, (, !, (, obj, instanceof, PointerNeedle, ), ), {, return, false, ;, }, if, (, !]
[true, ;, }, if, (, !, (, obj, instanceof, PointerNeedle, ), ), {, return, false, ;, }, if, (, !]
[(, !, (, obj, instanceof, PointerNeedle, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (]
[PointerNeedle, ), ), {, return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return]
[return, false, ;, }, if, (, !, super, ., equals, (, obj, ), ), {, return, false, ;, }, return]
[(, obj, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[(, obj, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[(, ), {, return, super, ., hashCode, (, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
[(, ), {, return, super, ., hashCode, (, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, return]
