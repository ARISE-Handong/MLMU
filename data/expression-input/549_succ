[;, private, long, time, ;, public, FixedMillisecond, (, ), {, this, (, new, Date, (, ), ), ;, }, public]
[), ;, }, public, FixedMillisecond, (, long, millisecond, ), {, this, (, new, Date, (, millisecond, ), ), ;, }]
[), ;, }, public, FixedMillisecond, (, Date, time, ), {, this, ., time, =, time, ., getTime, (, ), ;]
[), ), ;, }, public, FixedMillisecond, (, Date, time, ), {, this, ., time, =, time, ., getTime, (, )]
[=, time, ., getTime, (, ), ;, }, public, Date, getTime, (, ), {, return, new, Date, (, this, .]
[., time, =, time, ., getTime, (, ), ;, }, public, Date, getTime, (, ), {, return, new, Date, (]
[;, }, public, Date, getTime, (, ), {, return, new, Date, (, this, ., time, ), ;, }, public, void]
[., getTime, (, ), ;, }, public, Date, getTime, (, ), {, return, new, Date, (, this, ., time, )]
[;, }, public, void, peg, (, Calendar, calendar, ), {, }, public, RegularTimePeriod, previous, (, ), {, RegularTimePeriod, result, =]
[), ;, }, public, void, peg, (, Calendar, calendar, ), {, }, public, RegularTimePeriod, previous, (, ), {, RegularTimePeriod, result]
[., time, ), ;, }, public, void, peg, (, Calendar, calendar, ), {, }, public, RegularTimePeriod, previous, (, ), {]
[;, long, t, =, this, ., time, ;, if, (, t, !=, Long, ., MIN_VALUE, ), {, result, =, new]
[;, if, (, t, !=, Long, ., MIN_VALUE, ), {, result, =, new, FixedMillisecond, (, t, -, 1, ), ;]
[., time, ;, if, (, t, !=, Long, ., MIN_VALUE, ), {, result, =, new, FixedMillisecond, (, t, -, 1]
[), {, result, =, new, FixedMillisecond, (, t, -, 1, ), ;, }, return, result, ;, }, public, RegularTimePeriod, next]
[!=, Long, ., MIN_VALUE, ), {, result, =, new, FixedMillisecond, (, t, -, 1, ), ;, }, return, result, ;]
[), {, result, =, new, FixedMillisecond, (, t, -, 1, ), ;, }, return, result, ;, }, public, RegularTimePeriod, next]
[., MIN_VALUE, ), {, result, =, new, FixedMillisecond, (, t, -, 1, ), ;, }, return, result, ;, }, public]
[=, new, FixedMillisecond, (, t, -, 1, ), ;, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {]
[;, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =]
[), ;, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, RegularTimePeriod, result, =, null, ;, long, t]
[-, 1, ), ;, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, RegularTimePeriod, result, =, null, ;]
[), ;, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, RegularTimePeriod, result, =, null, ;, long, t]
[;, }, public, RegularTimePeriod, next, (, ), {, RegularTimePeriod, result, =, null, ;, long, t, =, this, ., time, ;]
[;, long, t, =, this, ., time, ;, if, (, t, !=, Long, ., MAX_VALUE, ), {, result, =, new]
[;, if, (, t, !=, Long, ., MAX_VALUE, ), {, result, =, new, FixedMillisecond, (, t, +, 1, ), ;]
[., time, ;, if, (, t, !=, Long, ., MAX_VALUE, ), {, result, =, new, FixedMillisecond, (, t, +, 1]
[), {, result, =, new, FixedMillisecond, (, t, +, 1, ), ;, }, return, result, ;, }, public, boolean, equals]
[!=, Long, ., MAX_VALUE, ), {, result, =, new, FixedMillisecond, (, t, +, 1, ), ;, }, return, result, ;]
[), {, result, =, new, FixedMillisecond, (, t, +, 1, ), ;, }, return, result, ;, }, public, boolean, equals]
[., MAX_VALUE, ), {, result, =, new, FixedMillisecond, (, t, +, 1, ), ;, }, return, result, ;, }, public]
[=, new, FixedMillisecond, (, t, +, 1, ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, object]
[;, }, return, result, ;, }, public, boolean, equals, (, Object, object, ), {, if, (, object, instanceof, FixedMillisecond, )]
[), ;, }, return, result, ;, }, public, boolean, equals, (, Object, object, ), {, if, (, object, instanceof, FixedMillisecond]
[+, 1, ), ;, }, return, result, ;, }, public, boolean, equals, (, Object, object, ), {, if, (, object]
[), ;, }, return, result, ;, }, public, boolean, equals, (, Object, object, ), {, if, (, object, instanceof, FixedMillisecond]
[;, }, public, boolean, equals, (, Object, object, ), {, if, (, object, instanceof, FixedMillisecond, ), {, FixedMillisecond, m, =]
[), {, FixedMillisecond, m, =, (, FixedMillisecond, ), object, ;, return, this, ., time, ==, m, ., getFirstMillisecond, (, )]
[instanceof, FixedMillisecond, ), {, FixedMillisecond, m, =, (, FixedMillisecond, ), object, ;, return, this, ., time, ==, m, ., getFirstMillisecond]
[;, return, this, ., time, ==, m, ., getFirstMillisecond, (, ), ;, }, else, {, return, false, ;, }, }]
[;, return, this, ., time, ==, m, ., getFirstMillisecond, (, ), ;, }, else, {, return, false, ;, }, }]
[;, }, else, {, return, false, ;, }, }, public, int, hashCode, (, ), {, return, (, int, ), this]
[==, m, ., getFirstMillisecond, (, ), ;, }, else, {, return, false, ;, }, }, public, int, hashCode, (, )]
[., time, ==, m, ., getFirstMillisecond, (, ), ;, }, else, {, return, false, ;, }, }, public, int, hashCode]
[;, }, else, {, return, false, ;, }, }, public, int, hashCode, (, ), {, return, (, int, ), this]
[., getFirstMillisecond, (, ), ;, }, else, {, return, false, ;, }, }, public, int, hashCode, (, ), {, return]
[;, }, }, public, int, hashCode, (, ), {, return, (, int, ), this, ., time, ;, }, public, int]
[;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, long, difference, ;, if, (, o1, instanceof]
[;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, long, difference, ;, if, (, o1, instanceof]
[., time, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, long, difference, ;, if, (]
[), {, FixedMillisecond, t1, =, (, FixedMillisecond, ), o1, ;, difference, =, this, ., time, -, t1, ., time, ;]
[instanceof, FixedMillisecond, ), {, FixedMillisecond, t1, =, (, FixedMillisecond, ), o1, ;, difference, =, this, ., time, -, t1, .]
[;, difference, =, this, ., time, -, t1, ., time, ;, if, (, difference, >, 0, ), {, result, =]
[;, difference, =, this, ., time, -, t1, ., time, ;, if, (, difference, >, 0, ), {, result, =]
[=, this, ., time, -, t1, ., time, ;, if, (, difference, >, 0, ), {, result, =, 1, ;]
[;, if, (, difference, >, 0, ), {, result, =, 1, ;, }, else, {, if, (, difference, <, 0]
[-, t1, ., time, ;, if, (, difference, >, 0, ), {, result, =, 1, ;, }, else, {, if]
[., time, -, t1, ., time, ;, if, (, difference, >, 0, ), {, result, =, 1, ;, }, else]
[;, if, (, difference, >, 0, ), {, result, =, 1, ;, }, else, {, if, (, difference, <, 0]
[., time, ;, if, (, difference, >, 0, ), {, result, =, 1, ;, }, else, {, if, (, difference]
[), {, result, =, 1, ;, }, else, {, if, (, difference, <, 0, ), {, result, =, -, 1]
[>, 0, ), {, result, =, 1, ;, }, else, {, if, (, difference, <, 0, ), {, result, =]
[), {, result, =, 1, ;, }, else, {, if, (, difference, <, 0, ), {, result, =, -, 1]
[=, 1, ;, }, else, {, if, (, difference, <, 0, ), {, result, =, -, 1, ;, }, else]
[;, }, else, {, if, (, difference, <, 0, ), {, result, =, -, 1, ;, }, else, {, result]
[), {, result, =, -, 1, ;, }, else, {, result, =, 0, ;, }, }, }, else, if, (]
[<, 0, ), {, result, =, -, 1, ;, }, else, {, result, =, 0, ;, }, }, }, else]
[), {, result, =, -, 1, ;, }, else, {, result, =, 0, ;, }, }, }, else, if, (]
[=, -, 1, ;, }, else, {, result, =, 0, ;, }, }, }, else, if, (, o1, instanceof, RegularTimePeriod]
[;, }, else, {, result, =, 0, ;, }, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result]
[;, }, else, {, result, =, 0, ;, }, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result]
[=, 0, ;, }, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else]
[;, }, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result]
[), {, result, =, 0, ;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, long]
[instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =, 1, ;, }, return, result, ;, }]
[=, 0, ;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, long, getFirstMillisecond, (, )]
[;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, long, getFirstMillisecond, (, ), {, return]
[=, 1, ;, }, return, result, ;, }, public, long, getFirstMillisecond, (, ), {, return, this, ., time, ;, }]
[;, }, return, result, ;, }, public, long, getFirstMillisecond, (, ), {, return, this, ., time, ;, }, public, long]
[;, }, public, long, getFirstMillisecond, (, ), {, return, this, ., time, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar]
[;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, return, this, ., time, ;, }, public, long, getLastMillisecond, (]
[., time, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, return, this, ., time, ;, }, public, long]
[;, }, public, long, getLastMillisecond, (, ), {, return, this, ., time, ;, }, public, long, getLastMillisecond, (, Calendar, calendar]
[., time, ;, }, public, long, getLastMillisecond, (, ), {, return, this, ., time, ;, }, public, long, getLastMillisecond, (]
[;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, return, this, ., time, ;, }, public, long, getMiddleMillisecond, (]
[., time, ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, return, this, ., time, ;, }, public, long]
[;, }, public, long, getMiddleMillisecond, (, ), {, return, this, ., time, ;, }, public, long, getMiddleMillisecond, (, Calendar, calendar]
[., time, ;, }, public, long, getMiddleMillisecond, (, ), {, return, this, ., time, ;, }, public, long, getMiddleMillisecond, (]
[;, }, public, long, getMiddleMillisecond, (, Calendar, calendar, ), {, return, this, ., time, ;, }, public, long, getSerialIndex, (]
[., time, ;, }, public, long, getMiddleMillisecond, (, Calendar, calendar, ), {, return, this, ., time, ;, }, public, long]
[;, }, public, long, getSerialIndex, (, ), {, return, this, ., time, ;, }, }]
[., time, ;, }, public, long, getSerialIndex, (, ), {, return, this, ., time, ;, }, }]
[;, }, }]
[., time, ;, }, }]
