[;, private, static, final, int, SST_IDX, =, 1, ;, private, static, final, int, RSQ_IDX, =, 2, ;, private, static, final]
[;, private, static, final, int, RSQ_IDX, =, 2, ;, private, static, final, int, MSE_IDX, =, 3, ;, private, static, final]
[;, private, static, final, int, MSE_IDX, =, 3, ;, private, static, final, int, ADJRSQ_IDX, =, 4, ;, private, static, final]
[;, private, static, final, int, ADJRSQ_IDX, =, 4, ;, private, static, final, long, serialVersionUID, =, 1l, ;, private, final, double]
[;, private, static, final, long, serialVersionUID, =, 1l, ;, private, final, double, [, ], parameters, ;, private, final, double, []
[;, private, final, double, [, ], parameters, ;, private, final, double, [, ], [, ], varCovData, ;, private, final, boolean]
[private, final, int, rank, ;, private, final, long, nobs, ;, private, final, boolean, containsConstant, ;, private, final, double, [, ]]
[), private, final, int, rank, ;, private, final, long, nobs, ;, private, final, boolean, containsConstant, ;, private, final, double, []
[private, RegressionResults, (, ), {, this, ., parameters, =, null, ;, this, ., varCovData, =, null, ;, this, ., rank]
[), private, RegressionResults, (, ), {, this, ., parameters, =, null, ;, this, ., varCovData, =, null, ;, this, .]
[=, null, ;, this, ., varCovData, =, null, ;, this, ., rank, =, -, 1, ;, this, ., nobs, =]
[., parameters, =, null, ;, this, ., varCovData, =, null, ;, this, ., rank, =, -, 1, ;, this, .]
[;, this, ., varCovData, =, null, ;, this, ., rank, =, -, 1, ;, this, ., nobs, =, -, 1]
[=, null, ;, this, ., rank, =, -, 1, ;, this, ., nobs, =, -, 1, ;, this, ., containsConstant]
[., varCovData, =, null, ;, this, ., rank, =, -, 1, ;, this, ., nobs, =, -, 1, ;, this]
[;, this, ., rank, =, -, 1, ;, this, ., nobs, =, -, 1, ;, this, ., containsConstant, =, false]
[=, -, 1, ;, this, ., nobs, =, -, 1, ;, this, ., containsConstant, =, false, ;, this, ., isSymmetricVCD]
[., rank, =, -, 1, ;, this, ., nobs, =, -, 1, ;, this, ., containsConstant, =, false, ;, this]
[;, this, ., nobs, =, -, 1, ;, this, ., containsConstant, =, false, ;, this, ., isSymmetricVCD, =, false, ;]
[;, this, ., nobs, =, -, 1, ;, this, ., containsConstant, =, false, ;, this, ., isSymmetricVCD, =, false, ;]
[=, -, 1, ;, this, ., containsConstant, =, false, ;, this, ., isSymmetricVCD, =, false, ;, this, ., globalFitInfo, =]
[., nobs, =, -, 1, ;, this, ., containsConstant, =, false, ;, this, ., isSymmetricVCD, =, false, ;, this, .]
[;, this, ., containsConstant, =, false, ;, this, ., isSymmetricVCD, =, false, ;, this, ., globalFitInfo, =, null, ;, }]
[;, this, ., containsConstant, =, false, ;, this, ., isSymmetricVCD, =, false, ;, this, ., globalFitInfo, =, null, ;, }]
[=, false, ;, this, ., isSymmetricVCD, =, false, ;, this, ., globalFitInfo, =, null, ;, }, public, RegressionResults, (, final]
[., containsConstant, =, false, ;, this, ., isSymmetricVCD, =, false, ;, this, ., globalFitInfo, =, null, ;, }, public, RegressionResults]
[;, this, ., isSymmetricVCD, =, false, ;, this, ., globalFitInfo, =, null, ;, }, public, RegressionResults, (, final, double, []
[=, false, ;, this, ., globalFitInfo, =, null, ;, }, public, RegressionResults, (, final, double, [, ], parameters, ,, final]
[., isSymmetricVCD, =, false, ;, this, ., globalFitInfo, =, null, ;, }, public, RegressionResults, (, final, double, [, ], parameters]
[;, this, ., globalFitInfo, =, null, ;, }, public, RegressionResults, (, final, double, [, ], parameters, ,, final, double, []
[=, null, ;, }, public, RegressionResults, (, final, double, [, ], parameters, ,, final, double, [, ], [, ], varcov]
[., globalFitInfo, =, null, ;, }, public, RegressionResults, (, final, double, [, ], parameters, ,, final, double, [, ], []
[;, }, public, RegressionResults, (, final, double, [, ], parameters, ,, final, double, [, ], [, ], varcov, ,, final]
[), {, this, ., parameters, =, MathArrays, ., copyOf, (, parameters, ), ;, this, ., varCovData, =, new, double, []
[=, MathArrays, ., copyOf, (, parameters, ), ;, this, ., varCovData, =, new, double, [, varcov, ., length, ], []
[., parameters, =, MathArrays, ., copyOf, (, parameters, ), ;, this, ., varCovData, =, new, double, [, varcov, ., length]
[;, this, ., varCovData, =, new, double, [, varcov, ., length, ], [, ], ;, for, (, int, i, =]
[., copyOf, (, parameters, ), ;, this, ., varCovData, =, new, double, [, varcov, ., length, ], [, ], ;]
[), ;, this, ., varCovData, =, new, double, [, varcov, ., length, ], [, ], ;, for, (, int, i]
[=, new, double, [, varcov, ., length, ], [, ], ;, for, (, int, i, =, 0, ;, i, <]
[., varCovData, =, new, double, [, varcov, ., length, ], [, ], ;, for, (, int, i, =, 0, ;]
[;, for, (, int, i, =, 0, ;, i, <, varcov, ., length, ;, i, ++, ), {, this, .]
[], [, ], ;, for, (, int, i, =, 0, ;, i, <, varcov, ., length, ;, i, ++, )]
[., length, ], [, ], ;, for, (, int, i, =, 0, ;, i, <, varcov, ., length, ;, i]
[;, i, <, varcov, ., length, ;, i, ++, ), {, this, ., varCovData, [, i, ], =, MathArrays, .]
[;, i, ++, ), {, this, ., varCovData, [, i, ], =, MathArrays, ., copyOf, (, varcov, [, i, ]]
[<, varcov, ., length, ;, i, ++, ), {, this, ., varCovData, [, i, ], =, MathArrays, ., copyOf, (]
[;, i, ++, ), {, this, ., varCovData, [, i, ], =, MathArrays, ., copyOf, (, varcov, [, i, ]]
[., length, ;, i, ++, ), {, this, ., varCovData, [, i, ], =, MathArrays, ., copyOf, (, varcov, []
[), {, this, ., varCovData, [, i, ], =, MathArrays, ., copyOf, (, varcov, [, i, ], ), ;, }]
[++, ), {, this, ., varCovData, [, i, ], =, MathArrays, ., copyOf, (, varcov, [, i, ], ), ;]
[=, MathArrays, ., copyOf, (, varcov, [, i, ], ), ;, }, }, else, {, this, ., parameters, =, parameters]
[[, i, ], =, MathArrays, ., copyOf, (, varcov, [, i, ], ), ;, }, }, else, {, this, .]
[., varCovData, [, i, ], =, MathArrays, ., copyOf, (, varcov, [, i, ], ), ;, }, }, else, {]
[], =, MathArrays, ., copyOf, (, varcov, [, i, ], ), ;, }, }, else, {, this, ., parameters, =]
[;, }, }, else, {, this, ., parameters, =, parameters, ;, this, ., varCovData, =, varcov, ;, }, this, .]
[., copyOf, (, varcov, [, i, ], ), ;, }, }, else, {, this, ., parameters, =, parameters, ;, this]
[), ;, }, }, else, {, this, ., parameters, =, parameters, ;, this, ., varCovData, =, varcov, ;, }, this]
[[, i, ], ), ;, }, }, else, {, this, ., parameters, =, parameters, ;, this, ., varCovData, =, varcov]
[], ), ;, }, }, else, {, this, ., parameters, =, parameters, ;, this, ., varCovData, =, varcov, ;, }]
[=, parameters, ;, this, ., varCovData, =, varcov, ;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;, this, ., nobs, =]
[., parameters, =, parameters, ;, this, ., varCovData, =, varcov, ;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;, this, .]
[;, this, ., varCovData, =, varcov, ;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;]
[=, varcov, ;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;, this, ., rank, =]
[., varCovData, =, varcov, ;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;, this, .]
[;, }, this, ., isSymmetricVCD, =, isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;, this, ., rank, =, rank, ;]
[=, isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;, this, ., rank, =, rank, ;, this, ., containsConstant, =, containsConstant]
[., isSymmetricVCD, =, isSymmetricCompressed, ;, this, ., nobs, =, nobs, ;, this, ., rank, =, rank, ;, this, ., containsConstant]
[;, this, ., nobs, =, nobs, ;, this, ., rank, =, rank, ;, this, ., containsConstant, =, containsConstant, ;, this]
[=, nobs, ;, this, ., rank, =, rank, ;, this, ., containsConstant, =, containsConstant, ;, this, ., globalFitInfo, =, new]
[., nobs, =, nobs, ;, this, ., rank, =, rank, ;, this, ., containsConstant, =, containsConstant, ;, this, ., globalFitInfo]
[;, this, ., rank, =, rank, ;, this, ., containsConstant, =, containsConstant, ;, this, ., globalFitInfo, =, new, double, []
[=, rank, ;, this, ., containsConstant, =, containsConstant, ;, this, ., globalFitInfo, =, new, double, [, 5, ], ;, Arrays]
[., rank, =, rank, ;, this, ., containsConstant, =, containsConstant, ;, this, ., globalFitInfo, =, new, double, [, 5, ]]
[;, this, ., containsConstant, =, containsConstant, ;, this, ., globalFitInfo, =, new, double, [, 5, ], ;, Arrays, ., fill]
[=, containsConstant, ;, this, ., globalFitInfo, =, new, double, [, 5, ], ;, Arrays, ., fill, (, this, ., globalFitInfo]
[., containsConstant, =, containsConstant, ;, this, ., globalFitInfo, =, new, double, [, 5, ], ;, Arrays, ., fill, (, this]
[;, this, ., globalFitInfo, =, new, double, [, 5, ], ;, Arrays, ., fill, (, this, ., globalFitInfo, ,, Double]
[=, new, double, [, 5, ], ;, Arrays, ., fill, (, this, ., globalFitInfo, ,, Double, ., NaN, ), ;]
[., globalFitInfo, =, new, double, [, 5, ], ;, Arrays, ., fill, (, this, ., globalFitInfo, ,, Double, ., NaN]
[;, Arrays, ., fill, (, this, ., globalFitInfo, ,, Double, ., NaN, ), ;, if, (, rank, >, 0, )]
[], ;, Arrays, ., fill, (, this, ., globalFitInfo, ,, Double, ., NaN, ), ;, if, (, rank, >, 0]
[;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -]
[., fill, (, this, ., globalFitInfo, ,, Double, ., NaN, ), ;, if, (, rank, >, 0, ), {, this]
[,, Double, ., NaN, ), ;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =]
[., globalFitInfo, ,, Double, ., NaN, ), ;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX]
[), ;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq]
[., NaN, ), ;, if, (, rank, >, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?]
[), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -, sumy, *, sumy, /, nobs, )]
[>, 0, ), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -, sumy, *, sumy, /]
[), {, this, ., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -, sumy, *, sumy, /, nobs, )]
[=, containsConstant, ?, (, sumysq, -, sumy, *, sumy, /, nobs, ), :, sumysq, ;, }, this, ., globalFitInfo, []
[[, SST_IDX, ], =, containsConstant, ?, (, sumysq, -, sumy, *, sumy, /, nobs, ), :, sumysq, ;, }, this]
[., globalFitInfo, [, SST_IDX, ], =, containsConstant, ?, (, sumysq, -, sumy, *, sumy, /, nobs, ), :, sumysq, ;]
[], =, containsConstant, ?, (, sumysq, -, sumy, *, sumy, /, nobs, ), :, sumysq, ;, }, this, ., globalFitInfo]
[;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =, this, .]
[?, (, sumysq, -, sumy, *, sumy, /, nobs, ), :, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ]]
[:, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =]
[), :, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ]]
[-, sumy, *, sumy, /, nobs, ), :, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;]
[), :, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ]]
[/, nobs, ), :, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, []
[*, sumy, /, nobs, ), :, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, .]
[/, nobs, ), :, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, []
[), :, sumysq, ;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ]]
[;, }, this, ., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =, this, .]
[=, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -]
[[, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /]
[., globalFitInfo, [, SSE_IDX, ], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX]
[], =, sse, ;, this, ., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs]
[;, this, ., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, )]
[=, this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ]]
[[, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;, this, ., globalFitInfo]
[., globalFitInfo, [, MSE_IDX, ], =, this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;, this]
[], =, this, ., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX]
[;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo]
[/, (, nobs, -, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo, []
[[, SSE_IDX, ], /, (, nobs, -, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this]
[., globalFitInfo, [, SSE_IDX, ], /, (, nobs, -, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0]
[], /, (, nobs, -, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo]
[;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo]
[), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /, this, .]
[-, rank, ), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /]
[), ;, this, ., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /, this, .]
[=, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo, [, SST_IDX, ], ;, if, (, !]
[[, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo, [, SST_IDX, ], ;]
[., globalFitInfo, [, RSQ_IDX, ], =, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo, [, SST_IDX]
[], =, 1.0, -, this, ., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo, [, SST_IDX, ], ;, if, (]
[;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -, this]
[-, this, ., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, )]
[;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -, this]
[/, this, ., globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ]]
[[, SSE_IDX, ], /, this, ., globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo]
[., globalFitInfo, [, SSE_IDX, ], /, this, ., globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, ), {, this]
[], /, this, ., globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX]
[;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -, this]
[[, SST_IDX, ], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (]
[., globalFitInfo, [, SST_IDX, ], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0]
[], ;, if, (, !, containsConstant, ), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -]
[), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ]]
[), {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ]]
[=, 1.0, -, (, 1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (, (, double, ), nobs, /]
[[, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (, (, double]
[., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, 1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (]
[], =, 1.0, -, (, 1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (, (, double, ), nobs]
[;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs, -, 1.0]
[-, (, 1.0, -, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (, (, double, ), nobs, /, (, (]
[;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs, -, 1.0]
[*, (, (, double, ), nobs, /, (, (, double, ), (, nobs, -, rank, ), ), ), ;, }]
[), *, (, (, double, ), nobs, /, (, (, double, ), (, nobs, -, rank, ), ), ), ;]
[-, this, ., globalFitInfo, [, RSQ_IDX, ], ), *, (, (, double, ), nobs, /, (, (, double, ), (]
[), *, (, (, double, ), nobs, /, (, (, double, ), (, nobs, -, rank, ), ), ), ;]
[[, RSQ_IDX, ], ), *, (, (, double, ), nobs, /, (, (, double, ), (, nobs, -, rank, )]
[., globalFitInfo, [, RSQ_IDX, ], ), *, (, (, double, ), nobs, /, (, (, double, ), (, nobs, -]
[], ), *, (, (, double, ), nobs, /, (, (, double, ), (, nobs, -, rank, ), ), )]
[;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs, -, 1.0]
[), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs, -]
[/, (, (, double, ), (, nobs, -, rank, ), ), ), ;, }, else, {, this, ., globalFitInfo, []
[/, (, (, double, ), (, nobs, -, rank, ), ), ), ;, }, else, {, this, ., globalFitInfo, []
[), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs, -]
[), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs]
[), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs]
[), ), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (]
[-, rank, ), ), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse]
[), ), ), ;, }, else, {, this, ., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (]
[=, 1.0, -, (, sse, *, (, nobs, -, 1.0, ), ), /, (, globalFitInfo, [, SST_IDX, ], *, (]
[[, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs, -, 1.0, ), ), /, (, globalFitInfo, [, SST_IDX]
[., globalFitInfo, [, ADJRSQ_IDX, ], =, 1.0, -, (, sse, *, (, nobs, -, 1.0, ), ), /, (, globalFitInfo]
[], =, 1.0, -, (, sse, *, (, nobs, -, 1.0, ), ), /, (, globalFitInfo, [, SST_IDX, ], *]
[;, }, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {]
[-, (, sse, *, (, nobs, -, 1.0, ), ), /, (, globalFitInfo, [, SST_IDX, ], *, (, nobs, -]
[;, }, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {]
[/, (, globalFitInfo, [, SST_IDX, ], *, (, nobs, -, rank, ), ), ;, }, }, public, double, getParameterEstimate, (]
[), /, (, globalFitInfo, [, SST_IDX, ], *, (, nobs, -, rank, ), ), ;, }, }, public, double, getParameterEstimate]
[*, (, nobs, -, 1.0, ), ), /, (, globalFitInfo, [, SST_IDX, ], *, (, nobs, -, rank, ), )]
[), /, (, globalFitInfo, [, SST_IDX, ], *, (, nobs, -, rank, ), ), ;, }, }, public, double, getParameterEstimate]
[), ), /, (, globalFitInfo, [, SST_IDX, ], *, (, nobs, -, rank, ), ), ;, }, }, public, double]
[-, 1.0, ), ), /, (, globalFitInfo, [, SST_IDX, ], *, (, nobs, -, rank, ), ), ;, }, }]
[), ), /, (, globalFitInfo, [, SST_IDX, ], *, (, nobs, -, rank, ), ), ;, }, }, public, double]
[;, }, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {]
[), ;, }, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, )]
[*, (, nobs, -, rank, ), ), ;, }, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {]
[[, SST_IDX, ], *, (, nobs, -, rank, ), ), ;, }, }, public, double, getParameterEstimate, (, int, index, )]
[], *, (, nobs, -, rank, ), ), ;, }, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException]
[), ;, }, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, )]
[), ), ;, }, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null]
[-, rank, ), ), ;, }, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters]
[), ), ;, }, }, public, double, getParameterEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null]
[), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||, index, >=, this, ., parameters, .]
[==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||, index, >=, this, .]
[), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||, index, >=, this, ., parameters, .]
[;, }, if, (, index, <, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException]
[., NaN, ;, }, if, (, index, <, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw]
[), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }]
[||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, .]
[<, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,]
[||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, .]
[), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }]
[>=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, .]
[), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }]
[., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -, 1, )]
[., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -]
[;, }, return, this, ., parameters, [, index, ], ;, }, public, double, [, ], getParameterEstimates, (, ), {, if]
[,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, return, this, ., parameters, [, index, ]]
[,, this, ., parameters, ., length, -, 1, ), ;, }, return, this, ., parameters, [, index, ], ;, }]
[), ;, }, return, this, ., parameters, [, index, ], ;, }, public, double, [, ], getParameterEstimates, (, ), {]
[-, 1, ), ;, }, return, this, ., parameters, [, index, ], ;, }, public, double, [, ], getParameterEstimates, (]
[., length, -, 1, ), ;, }, return, this, ., parameters, [, index, ], ;, }, public, double, [, ]]
[., parameters, ., length, -, 1, ), ;, }, return, this, ., parameters, [, index, ], ;, }, public, double]
[), ;, }, return, this, ., parameters, [, index, ], ;, }, public, double, [, ], getParameterEstimates, (, ), {]
[;, }, public, double, [, ], getParameterEstimates, (, ), {, if, (, this, ., parameters, ==, null, ), {, return]
[[, index, ], ;, }, public, double, [, ], getParameterEstimates, (, ), {, if, (, this, ., parameters, ==, null]
[., parameters, [, index, ], ;, }, public, double, [, ], getParameterEstimates, (, ), {, if, (, this, ., parameters]
[], ;, }, public, double, [, ], getParameterEstimates, (, ), {, if, (, this, ., parameters, ==, null, ), {]
[), {, return, null, ;, }, return, MathArrays, ., copyOf, (, parameters, ), ;, }, public, double, getStdErrorOfEstimate, (, int]
[==, null, ), {, return, null, ;, }, return, MathArrays, ., copyOf, (, parameters, ), ;, }, public, double, getStdErrorOfEstimate]
[., parameters, ==, null, ), {, return, null, ;, }, return, MathArrays, ., copyOf, (, parameters, ), ;, }, public]
[), {, return, null, ;, }, return, MathArrays, ., copyOf, (, parameters, ), ;, }, public, double, getStdErrorOfEstimate, (, int]
[;, }, return, MathArrays, ., copyOf, (, parameters, ), ;, }, public, double, getStdErrorOfEstimate, (, int, index, ), throws, OutOfRangeException]
[;, }, public, double, getStdErrorOfEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {, return]
[., copyOf, (, parameters, ), ;, }, public, double, getStdErrorOfEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters]
[), ;, }, public, double, getStdErrorOfEstimate, (, int, index, ), throws, OutOfRangeException, {, if, (, parameters, ==, null, ), {]
[), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||, index, >=, this, ., parameters, .]
[==, null, ), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||, index, >=, this, .]
[), {, return, Double, ., NaN, ;, }, if, (, index, <, 0, ||, index, >=, this, ., parameters, .]
[;, }, if, (, index, <, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException]
[., NaN, ;, }, if, (, index, <, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw]
[), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }]
[||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, .]
[<, 0, ||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,]
[||, index, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, .]
[), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }]
[>=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, .]
[), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }]
[., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -, 1, )]
[., parameters, ., length, ), {, throw, new, OutOfRangeException, (, index, ,, 0, ,, this, ., parameters, ., length, -]
[;, }, double, var, =, this, ., getVcvElement, (, index, ,, index, ), ;, if, (, !, Double, ., isNaN]
[,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, double, var, =, this, ., getVcvElement, (]
[,, this, ., parameters, ., length, -, 1, ), ;, }, double, var, =, this, ., getVcvElement, (, index, ,]
[), ;, }, double, var, =, this, ., getVcvElement, (, index, ,, index, ), ;, if, (, !, Double, .]
[-, 1, ), ;, }, double, var, =, this, ., getVcvElement, (, index, ,, index, ), ;, if, (, !]
[., length, -, 1, ), ;, }, double, var, =, this, ., getVcvElement, (, index, ,, index, ), ;, if]
[., parameters, ., length, -, 1, ), ;, }, double, var, =, this, ., getVcvElement, (, index, ,, index, )]
[), ;, }, double, var, =, this, ., getVcvElement, (, index, ,, index, ), ;, if, (, !, Double, .]
[;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {, return, FastMath]
[., getVcvElement, (, index, ,, index, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >]
[,, index, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, )]
[), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {, return]
[), {, return, FastMath, ., sqrt, (, var, ), ;, }, return, Double, ., NaN, ;, }, public, double, []
[&&, var, >, Double, ., MIN_VALUE, ), {, return, FastMath, ., sqrt, (, var, ), ;, }, return, Double, .]
[&&, var, >, Double, ., MIN_VALUE, ), {, return, FastMath, ., sqrt, (, var, ), ;, }, return, Double, .]
[., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {, return, FastMath, ., sqrt, (, var, )]
[), &&, var, >, Double, ., MIN_VALUE, ), {, return, FastMath, ., sqrt, (, var, ), ;, }, return, Double]
[), {, return, FastMath, ., sqrt, (, var, ), ;, }, return, Double, ., NaN, ;, }, public, double, []
[>, Double, ., MIN_VALUE, ), {, return, FastMath, ., sqrt, (, var, ), ;, }, return, Double, ., NaN, ;]
[), {, return, FastMath, ., sqrt, (, var, ), ;, }, return, Double, ., NaN, ;, }, public, double, []
[., MIN_VALUE, ), {, return, FastMath, ., sqrt, (, var, ), ;, }, return, Double, ., NaN, ;, }, public]
[;, }, return, Double, ., NaN, ;, }, public, double, [, ], getStdErrorOfEstimates, (, ), {, if, (, parameters, ==]
[., sqrt, (, var, ), ;, }, return, Double, ., NaN, ;, }, public, double, [, ], getStdErrorOfEstimates, (, )]
[), ;, }, return, Double, ., NaN, ;, }, public, double, [, ], getStdErrorOfEstimates, (, ), {, if, (, parameters]
[;, }, public, double, [, ], getStdErrorOfEstimates, (, ), {, if, (, parameters, ==, null, ), {, return, null, ;]
[., NaN, ;, }, public, double, [, ], getStdErrorOfEstimates, (, ), {, if, (, parameters, ==, null, ), {, return]
[), {, return, null, ;, }, double, [, ], se, =, new, double, [, this, ., parameters, ., length, ]]
[==, null, ), {, return, null, ;, }, double, [, ], se, =, new, double, [, this, ., parameters, .]
[), {, return, null, ;, }, double, [, ], se, =, new, double, [, this, ., parameters, ., length, ]]
[;, }, double, [, ], se, =, new, double, [, this, ., parameters, ., length, ], ;, for, (, int]
[;, for, (, int, i, =, 0, ;, i, <, this, ., parameters, ., length, ;, i, ++, ), {]
[], ;, for, (, int, i, =, 0, ;, i, <, this, ., parameters, ., length, ;, i, ++, )]
[., length, ], ;, for, (, int, i, =, 0, ;, i, <, this, ., parameters, ., length, ;, i]
[., parameters, ., length, ], ;, for, (, int, i, =, 0, ;, i, <, this, ., parameters, ., length]
[;, i, <, this, ., parameters, ., length, ;, i, ++, ), {, double, var, =, this, ., getVcvElement, (]
[;, i, ++, ), {, double, var, =, this, ., getVcvElement, (, i, ,, i, ), ;, if, (, !]
[<, this, ., parameters, ., length, ;, i, ++, ), {, double, var, =, this, ., getVcvElement, (, i, ,]
[;, i, ++, ), {, double, var, =, this, ., getVcvElement, (, i, ,, i, ), ;, if, (, !]
[., length, ;, i, ++, ), {, double, var, =, this, ., getVcvElement, (, i, ,, i, ), ;, if]
[., parameters, ., length, ;, i, ++, ), {, double, var, =, this, ., getVcvElement, (, i, ,, i, )]
[), {, double, var, =, this, ., getVcvElement, (, i, ,, i, ), ;, if, (, !, Double, ., isNaN]
[++, ), {, double, var, =, this, ., getVcvElement, (, i, ,, i, ), ;, if, (, !, Double, .]
[;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {, se, []
[., getVcvElement, (, i, ,, i, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >]
[,, i, ), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, )]
[), ;, if, (, !, Double, ., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {, se]
[), {, se, [, i, ], =, FastMath, ., sqrt, (, var, ), ;, continue, ;, }, se, [, i]
[&&, var, >, Double, ., MIN_VALUE, ), {, se, [, i, ], =, FastMath, ., sqrt, (, var, ), ;]
[&&, var, >, Double, ., MIN_VALUE, ), {, se, [, i, ], =, FastMath, ., sqrt, (, var, ), ;]
[., isNaN, (, var, ), &&, var, >, Double, ., MIN_VALUE, ), {, se, [, i, ], =, FastMath, .]
[), &&, var, >, Double, ., MIN_VALUE, ), {, se, [, i, ], =, FastMath, ., sqrt, (, var, )]
[), {, se, [, i, ], =, FastMath, ., sqrt, (, var, ), ;, continue, ;, }, se, [, i]
[>, Double, ., MIN_VALUE, ), {, se, [, i, ], =, FastMath, ., sqrt, (, var, ), ;, continue, ;]
[), {, se, [, i, ], =, FastMath, ., sqrt, (, var, ), ;, continue, ;, }, se, [, i]
[., MIN_VALUE, ), {, se, [, i, ], =, FastMath, ., sqrt, (, var, ), ;, continue, ;, }, se]
[=, FastMath, ., sqrt, (, var, ), ;, continue, ;, }, se, [, i, ], =, Double, ., NaN, ;]
[[, i, ], =, FastMath, ., sqrt, (, var, ), ;, continue, ;, }, se, [, i, ], =, Double]
[], =, FastMath, ., sqrt, (, var, ), ;, continue, ;, }, se, [, i, ], =, Double, ., NaN]
[;, continue, ;, }, se, [, i, ], =, Double, ., NaN, ;, }, return, se, ;, }, public, double]
[., sqrt, (, var, ), ;, continue, ;, }, se, [, i, ], =, Double, ., NaN, ;, }, return]
[), ;, continue, ;, }, se, [, i, ], =, Double, ., NaN, ;, }, return, se, ;, }, public]
[=, Double, ., NaN, ;, }, return, se, ;, }, public, double, getCovarianceOfParameters, (, int, i, ,, int, j, )]
[[, i, ], =, Double, ., NaN, ;, }, return, se, ;, }, public, double, getCovarianceOfParameters, (, int, i, ,]
[], =, Double, ., NaN, ;, }, return, se, ;, }, public, double, getCovarianceOfParameters, (, int, i, ,, int, j]
[;, }, return, se, ;, }, public, double, getCovarianceOfParameters, (, int, i, ,, int, j, ), throws, OutOfRangeException, {, if]
[., NaN, ;, }, return, se, ;, }, public, double, getCovarianceOfParameters, (, int, i, ,, int, j, ), throws, OutOfRangeException]
[;, }, public, double, getCovarianceOfParameters, (, int, i, ,, int, j, ), throws, OutOfRangeException, {, if, (, parameters, ==, null]
[), {, return, Double, ., NaN, ;, }, if, (, i, <, 0, ||, i, >=, this, ., parameters, .]
[==, null, ), {, return, Double, ., NaN, ;, }, if, (, i, <, 0, ||, i, >=, this, .]
[), {, return, Double, ., NaN, ;, }, if, (, i, <, 0, ||, i, >=, this, ., parameters, .]
[;, }, if, (, i, <, 0, ||, i, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException]
[., NaN, ;, }, if, (, i, <, 0, ||, i, >=, this, ., parameters, ., length, ), {, throw]
[), {, throw, new, OutOfRangeException, (, i, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }]
[||, i, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, i, ,, 0, ,, this, .]
[<, 0, ||, i, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, i, ,, 0, ,]
[||, i, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, i, ,, 0, ,, this, .]
[), {, throw, new, OutOfRangeException, (, i, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }]
[>=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, i, ,, 0, ,, this, ., parameters, .]
[), {, throw, new, OutOfRangeException, (, i, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }]
[., length, ), {, throw, new, OutOfRangeException, (, i, ,, 0, ,, this, ., parameters, ., length, -, 1, )]
[., parameters, ., length, ), {, throw, new, OutOfRangeException, (, i, ,, 0, ,, this, ., parameters, ., length, -]
[;, }, if, (, j, <, 0, ||, j, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException]
[,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, if, (, j, <, 0, ||, j]
[,, this, ., parameters, ., length, -, 1, ), ;, }, if, (, j, <, 0, ||, j, >=, this]
[), ;, }, if, (, j, <, 0, ||, j, >=, this, ., parameters, ., length, ), {, throw, new]
[-, 1, ), ;, }, if, (, j, <, 0, ||, j, >=, this, ., parameters, ., length, ), {]
[., length, -, 1, ), ;, }, if, (, j, <, 0, ||, j, >=, this, ., parameters, ., length]
[., parameters, ., length, -, 1, ), ;, }, if, (, j, <, 0, ||, j, >=, this, ., parameters]
[), ;, }, if, (, j, <, 0, ||, j, >=, this, ., parameters, ., length, ), {, throw, new]
[), {, throw, new, OutOfRangeException, (, j, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }]
[||, j, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, j, ,, 0, ,, this, .]
[<, 0, ||, j, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, j, ,, 0, ,]
[||, j, >=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, j, ,, 0, ,, this, .]
[), {, throw, new, OutOfRangeException, (, j, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }]
[>=, this, ., parameters, ., length, ), {, throw, new, OutOfRangeException, (, j, ,, 0, ,, this, ., parameters, .]
[), {, throw, new, OutOfRangeException, (, j, ,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }]
[., length, ), {, throw, new, OutOfRangeException, (, j, ,, 0, ,, this, ., parameters, ., length, -, 1, )]
[., parameters, ., length, ), {, throw, new, OutOfRangeException, (, j, ,, 0, ,, this, ., parameters, ., length, -]
[;, }, return, this, ., getVcvElement, (, i, ,, j, ), ;, }, public, int, getNumberOfParameters, (, ), {, if]
[,, 0, ,, this, ., parameters, ., length, -, 1, ), ;, }, return, this, ., getVcvElement, (, i, ,]
[,, this, ., parameters, ., length, -, 1, ), ;, }, return, this, ., getVcvElement, (, i, ,, j, )]
[), ;, }, return, this, ., getVcvElement, (, i, ,, j, ), ;, }, public, int, getNumberOfParameters, (, ), {]
[-, 1, ), ;, }, return, this, ., getVcvElement, (, i, ,, j, ), ;, }, public, int, getNumberOfParameters, (]
[., length, -, 1, ), ;, }, return, this, ., getVcvElement, (, i, ,, j, ), ;, }, public, int]
[., parameters, ., length, -, 1, ), ;, }, return, this, ., getVcvElement, (, i, ,, j, ), ;, }]
[), ;, }, return, this, ., getVcvElement, (, i, ,, j, ), ;, }, public, int, getNumberOfParameters, (, ), {]
[;, }, public, int, getNumberOfParameters, (, ), {, if, (, this, ., parameters, ==, null, ), {, return, -, 1]
[., getVcvElement, (, i, ,, j, ), ;, }, public, int, getNumberOfParameters, (, ), {, if, (, this, ., parameters]
[,, j, ), ;, }, public, int, getNumberOfParameters, (, ), {, if, (, this, ., parameters, ==, null, ), {]
[), ;, }, public, int, getNumberOfParameters, (, ), {, if, (, this, ., parameters, ==, null, ), {, return, -]
[), {, return, -, 1, ;, }, return, this, ., parameters, ., length, ;, }, public, long, getN, (, )]
[==, null, ), {, return, -, 1, ;, }, return, this, ., parameters, ., length, ;, }, public, long, getN]
[., parameters, ==, null, ), {, return, -, 1, ;, }, return, this, ., parameters, ., length, ;, }, public]
[), {, return, -, 1, ;, }, return, this, ., parameters, ., length, ;, }, public, long, getN, (, )]
[;, }, return, this, ., parameters, ., length, ;, }, public, long, getN, (, ), {, return, this, ., nobs]
[;, }, return, this, ., parameters, ., length, ;, }, public, long, getN, (, ), {, return, this, ., nobs]
[;, }, public, long, getN, (, ), {, return, this, ., nobs, ;, }, public, double, getTotalSumSquares, (, ), {]
[., length, ;, }, public, long, getN, (, ), {, return, this, ., nobs, ;, }, public, double, getTotalSumSquares, (]
[., parameters, ., length, ;, }, public, long, getN, (, ), {, return, this, ., nobs, ;, }, public, double]
[;, }, public, double, getTotalSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ], ;, }, public, double, getRegressionSumSquares]
[., nobs, ;, }, public, double, getTotalSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ], ;, }, public]
[;, }, public, double, getRegressionSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ], -, this, ., globalFitInfo, []
[[, SST_IDX, ], ;, }, public, double, getRegressionSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ], -, this]
[., globalFitInfo, [, SST_IDX, ], ;, }, public, double, getRegressionSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ]]
[], ;, }, public, double, getRegressionSumSquares, (, ), {, return, this, ., globalFitInfo, [, SST_IDX, ], -, this, ., globalFitInfo]
[;, }, public, double, getErrorSumSquares, (, ), {, return, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getMeanSquareError]
[-, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getErrorSumSquares, (, ), {, return, this, ., globalFitInfo, []
[[, SST_IDX, ], -, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getErrorSumSquares, (, ), {, return, this]
[., globalFitInfo, [, SST_IDX, ], -, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getErrorSumSquares, (, ), {]
[], -, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getErrorSumSquares, (, ), {, return, this, ., globalFitInfo]
[;, }, public, double, getErrorSumSquares, (, ), {, return, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getMeanSquareError]
[[, SSE_IDX, ], ;, }, public, double, getErrorSumSquares, (, ), {, return, this, ., globalFitInfo, [, SSE_IDX, ], ;, }]
[., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getErrorSumSquares, (, ), {, return, this, ., globalFitInfo, [, SSE_IDX, ]]
[], ;, }, public, double, getErrorSumSquares, (, ), {, return, this, ., globalFitInfo, [, SSE_IDX, ], ;, }, public, double]
[;, }, public, double, getMeanSquareError, (, ), {, return, this, ., globalFitInfo, [, MSE_IDX, ], ;, }, public, double, getRSquared]
[[, SSE_IDX, ], ;, }, public, double, getMeanSquareError, (, ), {, return, this, ., globalFitInfo, [, MSE_IDX, ], ;, }]
[., globalFitInfo, [, SSE_IDX, ], ;, }, public, double, getMeanSquareError, (, ), {, return, this, ., globalFitInfo, [, MSE_IDX, ]]
[], ;, }, public, double, getMeanSquareError, (, ), {, return, this, ., globalFitInfo, [, MSE_IDX, ], ;, }, public, double]
[;, }, public, double, getRSquared, (, ), {, return, this, ., globalFitInfo, [, RSQ_IDX, ], ;, }, public, double, getAdjustedRSquared]
[[, MSE_IDX, ], ;, }, public, double, getRSquared, (, ), {, return, this, ., globalFitInfo, [, RSQ_IDX, ], ;, }]
[., globalFitInfo, [, MSE_IDX, ], ;, }, public, double, getRSquared, (, ), {, return, this, ., globalFitInfo, [, RSQ_IDX, ]]
[], ;, }, public, double, getRSquared, (, ), {, return, this, ., globalFitInfo, [, RSQ_IDX, ], ;, }, public, double]
[;, }, public, double, getAdjustedRSquared, (, ), {, return, this, ., globalFitInfo, [, ADJRSQ_IDX, ], ;, }, public, boolean, hasIntercept]
[[, RSQ_IDX, ], ;, }, public, double, getAdjustedRSquared, (, ), {, return, this, ., globalFitInfo, [, ADJRSQ_IDX, ], ;, }]
[., globalFitInfo, [, RSQ_IDX, ], ;, }, public, double, getAdjustedRSquared, (, ), {, return, this, ., globalFitInfo, [, ADJRSQ_IDX, ]]
[], ;, }, public, double, getAdjustedRSquared, (, ), {, return, this, ., globalFitInfo, [, ADJRSQ_IDX, ], ;, }, public, boolean]
[;, }, public, boolean, hasIntercept, (, ), {, return, this, ., containsConstant, ;, }, private, double, getVcvElement, (, int, i]
[[, ADJRSQ_IDX, ], ;, }, public, boolean, hasIntercept, (, ), {, return, this, ., containsConstant, ;, }, private, double, getVcvElement]
[., globalFitInfo, [, ADJRSQ_IDX, ], ;, }, public, boolean, hasIntercept, (, ), {, return, this, ., containsConstant, ;, }, private]
[], ;, }, public, boolean, hasIntercept, (, ), {, return, this, ., containsConstant, ;, }, private, double, getVcvElement, (, int]
[;, }, private, double, getVcvElement, (, int, i, ,, int, j, ), {, if, (, this, ., isSymmetricVCD, ), {]
[., containsConstant, ;, }, private, double, getVcvElement, (, int, i, ,, int, j, ), {, if, (, this, ., isSymmetricVCD]
[), {, if, (, this, ., varCovData, ., length, >, 1, ), {, if, (, i, ==, j, ), {]
[., isSymmetricVCD, ), {, if, (, this, ., varCovData, ., length, >, 1, ), {, if, (, i, ==, j]
[), {, if, (, i, ==, j, ), {, return, varCovData, [, i, ], [, i, ], ;, }, else]
[>, 1, ), {, if, (, i, ==, j, ), {, return, varCovData, [, i, ], [, i, ], ;]
[., length, >, 1, ), {, if, (, i, ==, j, ), {, return, varCovData, [, i, ], [, i]
[., varCovData, ., length, >, 1, ), {, if, (, i, ==, j, ), {, return, varCovData, [, i, ]]
[), {, if, (, i, ==, j, ), {, return, varCovData, [, i, ], [, i, ], ;, }, else]
[), {, return, varCovData, [, i, ], [, i, ], ;, }, else, if, (, i, >=, varCovData, [, j]
[==, j, ), {, return, varCovData, [, i, ], [, i, ], ;, }, else, if, (, i, >=, varCovData]
[), {, return, varCovData, [, i, ], [, i, ], ;, }, else, if, (, i, >=, varCovData, [, j]
[;, }, else, if, (, i, >=, varCovData, [, j, ], ., length, ), {, return, varCovData, [, i, ]]
[[, i, ], ;, }, else, if, (, i, >=, varCovData, [, j, ], ., length, ), {, return, varCovData]
[[, i, ], [, i, ], ;, }, else, if, (, i, >=, varCovData, [, j, ], ., length, )]
[], [, i, ], ;, }, else, if, (, i, >=, varCovData, [, j, ], ., length, ), {, return]
[], ;, }, else, if, (, i, >=, varCovData, [, j, ], ., length, ), {, return, varCovData, [, i]
[), {, return, varCovData, [, i, ], [, j, ], ;, }, else, {, return, varCovData, [, j, ], []
[>=, varCovData, [, j, ], ., length, ), {, return, varCovData, [, i, ], [, j, ], ;, }, else]
[), {, return, varCovData, [, i, ], [, j, ], ;, }, else, {, return, varCovData, [, j, ], []
[., length, ), {, return, varCovData, [, i, ], [, j, ], ;, }, else, {, return, varCovData, [, j]
[[, j, ], ., length, ), {, return, varCovData, [, i, ], [, j, ], ;, }, else, {, return]
[], ., length, ), {, return, varCovData, [, i, ], [, j, ], ;, }, else, {, return, varCovData, []
[;, }, else, {, return, varCovData, [, j, ], [, i, ], ;, }, }, else, {, if, (, i]
[[, j, ], ;, }, else, {, return, varCovData, [, j, ], [, i, ], ;, }, }, else, {]
[[, i, ], [, j, ], ;, }, else, {, return, varCovData, [, j, ], [, i, ], ;, }]
[], [, j, ], ;, }, else, {, return, varCovData, [, j, ], [, i, ], ;, }, }, else]
[], ;, }, else, {, return, varCovData, [, j, ], [, i, ], ;, }, }, else, {, if, (]
[;, }, }, else, {, if, (, i, >, j, ), {, return, varCovData, [, 0, ], [, (, i]
[[, i, ], ;, }, }, else, {, if, (, i, >, j, ), {, return, varCovData, [, 0, ]]
[[, j, ], [, i, ], ;, }, }, else, {, if, (, i, >, j, ), {, return, varCovData]
[], [, i, ], ;, }, }, else, {, if, (, i, >, j, ), {, return, varCovData, [, 0]
[], ;, }, }, else, {, if, (, i, >, j, ), {, return, varCovData, [, 0, ], [, (]
[), {, return, varCovData, [, 0, ], [, (, i, +, 1, ), *, i, /, 2, +, j, ]]
[>, j, ), {, return, varCovData, [, 0, ], [, (, i, +, 1, ), *, i, /, 2, +]
[), {, return, varCovData, [, 0, ], [, (, i, +, 1, ), *, i, /, 2, +, j, ]]
[;, }, else, {, return, varCovData, [, 0, ], [, (, j, +, 1, ), *, j, /, 2, +]
[[, (, i, +, 1, ), *, i, /, 2, +, j, ], ;, }, else, {, return, varCovData, []
[[, 0, ], [, (, i, +, 1, ), *, i, /, 2, +, j, ], ;, }, else, {]
[], [, (, i, +, 1, ), *, i, /, 2, +, j, ], ;, }, else, {, return, varCovData]
[], ;, }, else, {, return, varCovData, [, 0, ], [, (, j, +, 1, ), *, j, /, 2]
[+, j, ], ;, }, else, {, return, varCovData, [, 0, ], [, (, j, +, 1, ), *, j]
[/, 2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], [, (, j, +, 1, )]
[*, i, /, 2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], [, (, j, +]
[), *, i, /, 2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], [, (, j]
[+, 1, ), *, i, /, 2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], []
[), *, i, /, 2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], [, (, j]
[/, 2, +, j, ], ;, }, else, {, return, varCovData, [, 0, ], [, (, j, +, 1, )]
[+, j, ], ;, }, else, {, return, varCovData, [, 0, ], [, (, j, +, 1, ), *, j]
[], ;, }, else, {, return, varCovData, [, 0, ], [, (, j, +, 1, ), *, j, /, 2]
[;, }, }, }, else, {, return, this, ., varCovData, [, i, ], [, j, ], ;, }, }, }]
[[, (, j, +, 1, ), *, j, /, 2, +, i, ], ;, }, }, }, else, {, return]
[[, 0, ], [, (, j, +, 1, ), *, j, /, 2, +, i, ], ;, }, }, }]
[], [, (, j, +, 1, ), *, j, /, 2, +, i, ], ;, }, }, }, else, {]
[], ;, }, }, }, else, {, return, this, ., varCovData, [, i, ], [, j, ], ;, }, }]
[+, i, ], ;, }, }, }, else, {, return, this, ., varCovData, [, i, ], [, j, ], ;]
[/, 2, +, i, ], ;, }, }, }, else, {, return, this, ., varCovData, [, i, ], [, j]
[*, j, /, 2, +, i, ], ;, }, }, }, else, {, return, this, ., varCovData, [, i, ]]
[), *, j, /, 2, +, i, ], ;, }, }, }, else, {, return, this, ., varCovData, [, i]
[+, 1, ), *, j, /, 2, +, i, ], ;, }, }, }, else, {, return, this, ., varCovData]
[), *, j, /, 2, +, i, ], ;, }, }, }, else, {, return, this, ., varCovData, [, i]
[/, 2, +, i, ], ;, }, }, }, else, {, return, this, ., varCovData, [, i, ], [, j]
[+, i, ], ;, }, }, }, else, {, return, this, ., varCovData, [, i, ], [, j, ], ;]
[], ;, }, }, }, else, {, return, this, ., varCovData, [, i, ], [, j, ], ;, }, }]
[;, }, }, }]
[[, j, ], ;, }, }, }]
[[, i, ], [, j, ], ;, }, }, }]
[., varCovData, [, i, ], [, j, ], ;, }, }, }]
[], [, j, ], ;, }, }, }]
[], ;, }, }, }]
