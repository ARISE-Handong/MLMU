[;, try, {, Constructor, constructor, =, c, ., getDeclaredConstructor, (, new, Class, [, ], {, Date, ., class, ,, TimeZone]
[;, result, =, (, RegularTimePeriod, ), constructor, ., newInstance, (, new, Object, [, ], {, millisecond, ,, zone, }, )]
[., getDeclaredConstructor, (, new, Class, [, ], {, Date, ., class, ,, TimeZone, ., class, }, ), ;, result, =]
[), ;, result, =, (, RegularTimePeriod, ), constructor, ., newInstance, (, new, Object, [, ], {, millisecond, ,, zone, }]
[), ;, result, =, (, RegularTimePeriod, ), constructor, ., newInstance, (, new, Object, [, ], {, millisecond, ,, zone, }]
[,, TimeZone, ., class, }, ), ;, result, =, (, RegularTimePeriod, ), constructor, ., newInstance, (, new, Object, [, ]]
[}, ), ;, result, =, (, RegularTimePeriod, ), constructor, ., newInstance, (, new, Object, [, ], {, millisecond, ,, zone]
[=, (, RegularTimePeriod, ), constructor, ., newInstance, (, new, Object, [, ], {, millisecond, ,, zone, }, ), ;, }]
[;, }, catch, (, Exception, e, ), {, }, return, result, ;, }, public, static, Class, downsize, (, Class, c]
[;, }, catch, (, Exception, e, ), {, }, return, result, ;, }, public, static, Class, downsize, (, Class, c]
[., newInstance, (, new, Object, [, ], {, millisecond, ,, zone, }, ), ;, }, catch, (, Exception, e, )]
[), ;, }, catch, (, Exception, e, ), {, }, return, result, ;, }, public, static, Class, downsize, (, Class]
[), ;, }, catch, (, Exception, e, ), {, }, return, result, ;, }, public, static, Class, downsize, (, Class]
[,, zone, }, ), ;, }, catch, (, Exception, e, ), {, }, return, result, ;, }, public, static, Class]
[}, ), ;, }, catch, (, Exception, e, ), {, }, return, result, ;, }, public, static, Class, downsize, (]
[;, }, public, static, Class, downsize, (, Class, c, ), {, if, (, c, ., equals, (, Year, ., class]
[), {, return, Quarter, ., class, ;, }, else, if, (, c, ., equals, (, Quarter, ., class, ), )]
[., equals, (, Year, ., class, ), ), {, return, Quarter, ., class, ;, }, else, if, (, c, .]
[), ), {, return, Quarter, ., class, ;, }, else, if, (, c, ., equals, (, Quarter, ., class, )]
[;, }, else, if, (, c, ., equals, (, Quarter, ., class, ), ), {, return, Month, ., class, ;]
[), {, return, Month, ., class, ;, }, else, if, (, c, ., equals, (, Month, ., class, ), )]
[., equals, (, Quarter, ., class, ), ), {, return, Month, ., class, ;, }, else, if, (, c, .]
[), ), {, return, Month, ., class, ;, }, else, if, (, c, ., equals, (, Month, ., class, )]
[;, }, else, if, (, c, ., equals, (, Month, ., class, ), ), {, return, Day, ., class, ;]
[), {, return, Day, ., class, ;, }, else, if, (, c, ., equals, (, Day, ., class, ), )]
[., equals, (, Month, ., class, ), ), {, return, Day, ., class, ;, }, else, if, (, c, .]
[), ), {, return, Day, ., class, ;, }, else, if, (, c, ., equals, (, Day, ., class, )]
[;, }, else, if, (, c, ., equals, (, Day, ., class, ), ), {, return, Hour, ., class, ;]
[), {, return, Hour, ., class, ;, }, else, if, (, c, ., equals, (, Hour, ., class, ), )]
[., equals, (, Day, ., class, ), ), {, return, Hour, ., class, ;, }, else, if, (, c, .]
[), ), {, return, Hour, ., class, ;, }, else, if, (, c, ., equals, (, Hour, ., class, )]
[;, }, else, if, (, c, ., equals, (, Hour, ., class, ), ), {, return, Minute, ., class, ;]
[), {, return, Minute, ., class, ;, }, else, if, (, c, ., equals, (, Minute, ., class, ), )]
[., equals, (, Hour, ., class, ), ), {, return, Minute, ., class, ;, }, else, if, (, c, .]
[), ), {, return, Minute, ., class, ;, }, else, if, (, c, ., equals, (, Minute, ., class, )]
[;, }, else, if, (, c, ., equals, (, Minute, ., class, ), ), {, return, Second, ., class, ;]
[), {, return, Second, ., class, ;, }, else, if, (, c, ., equals, (, Second, ., class, ), )]
[., equals, (, Minute, ., class, ), ), {, return, Second, ., class, ;, }, else, if, (, c, .]
[), ), {, return, Second, ., class, ;, }, else, if, (, c, ., equals, (, Second, ., class, )]
[;, }, else, if, (, c, ., equals, (, Second, ., class, ), ), {, return, Millisecond, ., class, ;]
[), {, return, Millisecond, ., class, ;, }, else, {, return, Millisecond, ., class, ;, }, }, public, abstract, RegularTimePeriod]
[., equals, (, Second, ., class, ), ), {, return, Millisecond, ., class, ;, }, else, {, return, Millisecond, .]
[), ), {, return, Millisecond, ., class, ;, }, else, {, return, Millisecond, ., class, ;, }, }, public, abstract]
[;, }, else, {, return, Millisecond, ., class, ;, }, }, public, abstract, RegularTimePeriod, previous, (, ), ;, public, abstract]
[;, }, }, public, abstract, RegularTimePeriod, previous, (, ), ;, public, abstract, RegularTimePeriod, next, (, ), ;, public, abstract, long]
[;, }, public, Date, getEnd, (, ), {, return, new, Date, (, getLastMillisecond, (, ), ), ;, }, public, abstract]
[), ;, }, public, Date, getEnd, (, ), {, return, new, Date, (, getLastMillisecond, (, ), ), ;, }, public]
[;, }, public, abstract, long, getFirstMillisecond, (, ), ;, public, abstract, long, getFirstMillisecond, (, Calendar, calendar, ), ;, public, abstract]
[), ;, }, public, abstract, long, getFirstMillisecond, (, ), ;, public, abstract, long, getFirstMillisecond, (, Calendar, calendar, ), ;, public]
[;, long, m2, =, getLastMillisecond, (, ), ;, return, m1, +, (, m2, -, m1, ), /, 2, ;, }]
[;, return, m1, +, (, m2, -, m1, ), /, 2, ;, }, public, long, getMiddleMillisecond, (, Calendar, calendar, )]
[;, }, public, long, getMiddleMillisecond, (, Calendar, calendar, ), {, long, m1, =, getFirstMillisecond, (, calendar, ), ;, long, m2]
[+, (, m2, -, m1, ), /, 2, ;, }, public, long, getMiddleMillisecond, (, Calendar, calendar, ), {, long, m1]
[;, }, public, long, getMiddleMillisecond, (, Calendar, calendar, ), {, long, m1, =, getFirstMillisecond, (, calendar, ), ;, long, m2]
[/, 2, ;, }, public, long, getMiddleMillisecond, (, Calendar, calendar, ), {, long, m1, =, getFirstMillisecond, (, calendar, ), ;]
[), /, 2, ;, }, public, long, getMiddleMillisecond, (, Calendar, calendar, ), {, long, m1, =, getFirstMillisecond, (, calendar, )]
[-, m1, ), /, 2, ;, }, public, long, getMiddleMillisecond, (, Calendar, calendar, ), {, long, m1, =, getFirstMillisecond, (]
[), /, 2, ;, }, public, long, getMiddleMillisecond, (, Calendar, calendar, ), {, long, m1, =, getFirstMillisecond, (, calendar, )]
[;, }, public, long, getMiddleMillisecond, (, Calendar, calendar, ), {, long, m1, =, getFirstMillisecond, (, calendar, ), ;, long, m2]
[;, long, m2, =, getLastMillisecond, (, calendar, ), ;, return, m1, +, (, m2, -, m1, ), /, 2, ;]
[), ;, long, m2, =, getLastMillisecond, (, calendar, ), ;, return, m1, +, (, m2, -, m1, ), /, 2]
[;, return, m1, +, (, m2, -, m1, ), /, 2, ;, }, public, String, toString, (, ), {, return]
[), ;, return, m1, +, (, m2, -, m1, ), /, 2, ;, }, public, String, toString, (, ), {]
[;, }, public, String, toString, (, ), {, return, String, ., valueOf, (, getStart, (, ), ), ;, }, }]
[+, (, m2, -, m1, ), /, 2, ;, }, public, String, toString, (, ), {, return, String, ., valueOf]
[;, }, public, String, toString, (, ), {, return, String, ., valueOf, (, getStart, (, ), ), ;, }, }]
[/, 2, ;, }, public, String, toString, (, ), {, return, String, ., valueOf, (, getStart, (, ), ), ;]
[), /, 2, ;, }, public, String, toString, (, ), {, return, String, ., valueOf, (, getStart, (, ), )]
[-, m1, ), /, 2, ;, }, public, String, toString, (, ), {, return, String, ., valueOf, (, getStart, (]
[), /, 2, ;, }, public, String, toString, (, ), {, return, String, ., valueOf, (, getStart, (, ), )]
[;, }, public, String, toString, (, ), {, return, String, ., valueOf, (, getStart, (, ), ), ;, }, }]
[;, }, }]
[., valueOf, (, getStart, (, ), ), ;, }, }]
[), ;, }, }]
