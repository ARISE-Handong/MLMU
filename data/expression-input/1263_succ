[;, private, final, int, maxIterationCount, ;, @, Deprecated, public, SimpleVectorValueChecker, (, ), {, maxIterationCount, =, ITERATION_CHECK_DISABLED, ;, }, public, SimpleVectorValueChecker]
[;, private, final, int, maxIterationCount, ;, @, Deprecated, public, SimpleVectorValueChecker, (, ), {, maxIterationCount, =, ITERATION_CHECK_DISABLED, ;, }, public, SimpleVectorValueChecker]
[=, ITERATION_CHECK_DISABLED, ;, }, public, SimpleVectorValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ), {, super, (, relativeThreshold, ,]
[;, }, public, SimpleVectorValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ), {, super, (, relativeThreshold, ,, absoluteThreshold, )]
[,, absoluteThreshold, ), ;, maxIterationCount, =, ITERATION_CHECK_DISABLED, ;, }, public, SimpleVectorValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ,]
[), ;, maxIterationCount, =, ITERATION_CHECK_DISABLED, ;, }, public, SimpleVectorValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ,, final, int]
[=, ITERATION_CHECK_DISABLED, ;, }, public, SimpleVectorValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ,, final, int, maxIter, ), {]
[;, }, public, SimpleVectorValueChecker, (, final, double, relativeThreshold, ,, final, double, absoluteThreshold, ,, final, int, maxIter, ), {, super, (]
[,, absoluteThreshold, ), ;, if, (, maxIter, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, maxIter, ), ;, }, maxIterationCount]
[), ;, if, (, maxIter, <=, 0, ), {, throw, new, NotStrictlyPositiveException, (, maxIter, ), ;, }, maxIterationCount, =, maxIter]
[), {, throw, new, NotStrictlyPositiveException, (, maxIter, ), ;, }, maxIterationCount, =, maxIter, ;, }, @, Override, public, boolean, converged]
[<=, 0, ), {, throw, new, NotStrictlyPositiveException, (, maxIter, ), ;, }, maxIterationCount, =, maxIter, ;, }, @, Override, public]
[), {, throw, new, NotStrictlyPositiveException, (, maxIter, ), ;, }, maxIterationCount, =, maxIter, ;, }, @, Override, public, boolean, converged]
[;, }, maxIterationCount, =, maxIter, ;, }, @, Override, public, boolean, converged, (, final, int, iteration, ,, final, PointVectorValuePair, previous]
[), ;, }, maxIterationCount, =, maxIter, ;, }, @, Override, public, boolean, converged, (, final, int, iteration, ,, final, PointVectorValuePair]
[=, maxIter, ;, }, @, Override, public, boolean, converged, (, final, int, iteration, ,, final, PointVectorValuePair, previous, ,, final, PointVectorValuePair]
[;, }, @, Override, public, boolean, converged, (, final, int, iteration, ,, final, PointVectorValuePair, previous, ,, final, PointVectorValuePair, current, )]
[), {, return, true, ;, }, final, double, [, ], p, =, previous, ., getValueRef, (, ), ;, final, double]
[&&, iteration, >=, maxIterationCount, ), {, return, true, ;, }, final, double, [, ], p, =, previous, ., getValueRef, (]
[!=, ITERATION_CHECK_DISABLED, &&, iteration, >=, maxIterationCount, ), {, return, true, ;, }, final, double, [, ], p, =, previous, .]
[&&, iteration, >=, maxIterationCount, ), {, return, true, ;, }, final, double, [, ], p, =, previous, ., getValueRef, (]
[), {, return, true, ;, }, final, double, [, ], p, =, previous, ., getValueRef, (, ), ;, final, double]
[>=, maxIterationCount, ), {, return, true, ;, }, final, double, [, ], p, =, previous, ., getValueRef, (, ), ;]
[), {, return, true, ;, }, final, double, [, ], p, =, previous, ., getValueRef, (, ), ;, final, double]
[;, }, final, double, [, ], p, =, previous, ., getValueRef, (, ), ;, final, double, [, ], c, =]
[;, final, double, [, ], c, =, current, ., getValueRef, (, ), ;, for, (, int, i, =, 0, ;]
[., getValueRef, (, ), ;, final, double, [, ], c, =, current, ., getValueRef, (, ), ;, for, (, int]
[;, for, (, int, i, =, 0, ;, i, <, p, ., length, ;, ++, i, ), {, final, double]
[., getValueRef, (, ), ;, for, (, int, i, =, 0, ;, i, <, p, ., length, ;, ++, i]
[;, i, <, p, ., length, ;, ++, i, ), {, final, double, pi, =, p, [, i, ], ;]
[;, ++, i, ), {, final, double, pi, =, p, [, i, ], ;, final, double, ci, =, c, []
[<, p, ., length, ;, ++, i, ), {, final, double, pi, =, p, [, i, ], ;, final, double]
[;, ++, i, ), {, final, double, pi, =, p, [, i, ], ;, final, double, ci, =, c, []
[., length, ;, ++, i, ), {, final, double, pi, =, p, [, i, ], ;, final, double, ci, =]
[), {, final, double, pi, =, p, [, i, ], ;, final, double, ci, =, c, [, i, ], ;]
[), {, final, double, pi, =, p, [, i, ], ;, final, double, ci, =, c, [, i, ], ;]
[;, final, double, ci, =, c, [, i, ], ;, final, double, difference, =, FastMath, ., abs, (, pi, -]
[[, i, ], ;, final, double, ci, =, c, [, i, ], ;, final, double, difference, =, FastMath, ., abs]
[], ;, final, double, ci, =, c, [, i, ], ;, final, double, difference, =, FastMath, ., abs, (, pi]
[;, final, double, difference, =, FastMath, ., abs, (, pi, -, ci, ), ;, final, double, size, =, FastMath, .]
[[, i, ], ;, final, double, difference, =, FastMath, ., abs, (, pi, -, ci, ), ;, final, double, size]
[], ;, final, double, difference, =, FastMath, ., abs, (, pi, -, ci, ), ;, final, double, size, =, FastMath]
[;, final, double, size, =, FastMath, ., max, (, FastMath, ., abs, (, pi, ), ,, FastMath, ., abs, (]
[., abs, (, pi, -, ci, ), ;, final, double, size, =, FastMath, ., max, (, FastMath, ., abs, (]
[), ;, final, double, size, =, FastMath, ., max, (, FastMath, ., abs, (, pi, ), ,, FastMath, ., abs]
[-, ci, ), ;, final, double, size, =, FastMath, ., max, (, FastMath, ., abs, (, pi, ), ,, FastMath]
[), ;, final, double, size, =, FastMath, ., max, (, FastMath, ., abs, (, pi, ), ,, FastMath, ., abs]
[;, if, (, difference, >, size, *, getRelativeThreshold, (, ), &&, difference, >, getAbsoluteThreshold, (, ), ), {, return, false]
[., max, (, FastMath, ., abs, (, pi, ), ,, FastMath, ., abs, (, ci, ), ), ;, if, (]
[,, FastMath, ., abs, (, ci, ), ), ;, if, (, difference, >, size, *, getRelativeThreshold, (, ), &&, difference]
[., abs, (, pi, ), ,, FastMath, ., abs, (, ci, ), ), ;, if, (, difference, >, size, *]
[), ,, FastMath, ., abs, (, ci, ), ), ;, if, (, difference, >, size, *, getRelativeThreshold, (, ), &&]
[), ;, if, (, difference, >, size, *, getRelativeThreshold, (, ), &&, difference, >, getAbsoluteThreshold, (, ), ), {, return]
[., abs, (, ci, ), ), ;, if, (, difference, >, size, *, getRelativeThreshold, (, ), &&, difference, >, getAbsoluteThreshold]
[), ), ;, if, (, difference, >, size, *, getRelativeThreshold, (, ), &&, difference, >, getAbsoluteThreshold, (, ), ), {]
[), {, return, false, ;, }, }, return, true, ;, }, }]
[&&, difference, >, getAbsoluteThreshold, (, ), ), {, return, false, ;, }, }, return, true, ;, }, }]
[>, size, *, getRelativeThreshold, (, ), &&, difference, >, getAbsoluteThreshold, (, ), ), {, return, false, ;, }, }, return]
[&&, difference, >, getAbsoluteThreshold, (, ), ), {, return, false, ;, }, }, return, true, ;, }, }]
[*, getRelativeThreshold, (, ), &&, difference, >, getAbsoluteThreshold, (, ), ), {, return, false, ;, }, }, return, true, ;]
[&&, difference, >, getAbsoluteThreshold, (, ), ), {, return, false, ;, }, }, return, true, ;, }, }]
[), {, return, false, ;, }, }, return, true, ;, }, }]
[>, getAbsoluteThreshold, (, ), ), {, return, false, ;, }, }, return, true, ;, }, }]
[), {, return, false, ;, }, }, return, true, ;, }, }]
[;, }, }, return, true, ;, }, }]
[;, }, }]
