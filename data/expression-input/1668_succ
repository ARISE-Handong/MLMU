[;, useDrawRotatedStringWorkaround, =, (, isJava14, ==, false, ), ;, useFontMetricsGetStringBounds, =, (, isJava14, ==, true, ), ;, }, private, TextUtilities]
[., isJDK14, (, ), ;, useDrawRotatedStringWorkaround, =, (, isJava14, ==, false, ), ;, useFontMetricsGetStringBounds, =, (, isJava14, ==, true, )]
[=, (, isJava14, ==, false, ), ;, useFontMetricsGetStringBounds, =, (, isJava14, ==, true, ), ;, }, private, TextUtilities, (, )]
[;, useFontMetricsGetStringBounds, =, (, isJava14, ==, true, ), ;, }, private, TextUtilities, (, ), {, }, public, static, TextBlock, createTextBlock]
[), ;, useFontMetricsGetStringBounds, =, (, isJava14, ==, true, ), ;, }, private, TextUtilities, (, ), {, }, public, static, TextBlock]
[==, false, ), ;, useFontMetricsGetStringBounds, =, (, isJava14, ==, true, ), ;, }, private, TextUtilities, (, ), {, }, public]
[), ;, useFontMetricsGetStringBounds, =, (, isJava14, ==, true, ), ;, }, private, TextUtilities, (, ), {, }, public, static, TextBlock]
[=, (, isJava14, ==, true, ), ;, }, private, TextUtilities, (, ), {, }, public, static, TextBlock, createTextBlock, (, String]
[;, }, private, TextUtilities, (, ), {, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,, Paint]
[), ;, }, private, TextUtilities, (, ), {, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,]
[==, true, ), ;, }, private, TextUtilities, (, ), {, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font]
[), ;, }, private, TextUtilities, (, ), {, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,]
[), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, TextBlock, result, =, new, TextBlock, (, ), ;, String, input]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, TextBlock, result, =, new, TextBlock, (, ), ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'text' argument.", ), ;, }, TextBlock, result, =, new, TextBlock, (, ), ;, String, input]
[;, }, TextBlock, result, =, new, TextBlock, (, ), ;, String, input, =, text, ;, boolean, moreInputToProcess, =, (, text]
[), ;, }, TextBlock, result, =, new, TextBlock, (, ), ;, String, input, =, text, ;, boolean, moreInputToProcess, =, (]
[;, String, input, =, text, ;, boolean, moreInputToProcess, =, (, text, ., length, (, ), >, 0, ), ;, int]
[;, boolean, moreInputToProcess, =, (, text, ., length, (, ), >, 0, ), ;, int, start, =, 0, ;, while]
[;, int, start, =, 0, ;, while, (, moreInputToProcess, ), {, int, index, =, input, ., indexOf, (, "\n", )]
[), ;, int, start, =, 0, ;, while, (, moreInputToProcess, ), {, int, index, =, input, ., indexOf, (, "\n"]
[>, 0, ), ;, int, start, =, 0, ;, while, (, moreInputToProcess, ), {, int, index, =, input, ., indexOf]
[., length, (, ), >, 0, ), ;, int, start, =, 0, ;, while, (, moreInputToProcess, ), {, int, index]
[), ;, int, start, =, 0, ;, while, (, moreInputToProcess, ), {, int, index, =, input, ., indexOf, (, "\n"]
[;, while, (, moreInputToProcess, ), {, int, index, =, input, ., indexOf, (, "\n", ), ;, if, (, index, >]
[), {, int, index, =, input, ., indexOf, (, "\n", ), ;, if, (, index, >, start, ), {, String]
[;, if, (, index, >, start, ), {, String, line, =, input, ., substring, (, start, ,, index, ), ;]
[., indexOf, (, "\n", ), ;, if, (, index, >, start, ), {, String, line, =, input, ., substring, (]
[), ;, if, (, index, >, start, ), {, String, line, =, input, ., substring, (, start, ,, index, )]
[), {, String, line, =, input, ., substring, (, start, ,, index, ), ;, if, (, index, <, input, .]
[>, start, ), {, String, line, =, input, ., substring, (, start, ,, index, ), ;, if, (, index, <]
[), {, String, line, =, input, ., substring, (, start, ,, index, ), ;, if, (, index, <, input, .]
[;, if, (, index, <, input, ., length, (, ), -, 1, ), {, result, ., addLine, (, line, ,]
[., substring, (, start, ,, index, ), ;, if, (, index, <, input, ., length, (, ), -, 1, )]
[,, index, ), ;, if, (, index, <, input, ., length, (, ), -, 1, ), {, result, ., addLine]
[), ;, if, (, index, <, input, ., length, (, ), -, 1, ), {, result, ., addLine, (, line]
[), {, result, ., addLine, (, line, ,, font, ,, paint, ), ;, input, =, input, ., substring, (, index]
[<, input, ., length, (, ), -, 1, ), {, result, ., addLine, (, line, ,, font, ,, paint, )]
[), {, result, ., addLine, (, line, ,, font, ,, paint, ), ;, input, =, input, ., substring, (, index]
[-, 1, ), {, result, ., addLine, (, line, ,, font, ,, paint, ), ;, input, =, input, ., substring]
[., length, (, ), -, 1, ), {, result, ., addLine, (, line, ,, font, ,, paint, ), ;, input]
[), {, result, ., addLine, (, line, ,, font, ,, paint, ), ;, input, =, input, ., substring, (, index]
[;, input, =, input, ., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }]
[., addLine, (, line, ,, font, ,, paint, ), ;, input, =, input, ., substring, (, index, +, 1, )]
[,, font, ,, paint, ), ;, input, =, input, ., substring, (, index, +, 1, ), ;, }, else, {]
[,, paint, ), ;, input, =, input, ., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =]
[), ;, input, =, input, ., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;]
[=, input, ., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else]
[;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, if, (, index, ==, start, ), {, if, (]
[., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, if, (]
[), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, if, (, index, ==, start, ), {, if]
[+, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, if, (, index, ==, start, )]
[), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, if, (, index, ==, start, ), {, if]
[=, false, ;, }, }, else, if, (, index, ==, start, ), {, if, (, index, <, input, ., length]
[;, }, }, else, if, (, index, ==, start, ), {, if, (, index, <, input, ., length, (, )]
[), {, if, (, index, <, input, ., length, (, ), -, 1, ), {, input, =, input, ., substring]
[==, start, ), {, if, (, index, <, input, ., length, (, ), -, 1, ), {, input, =, input]
[), {, if, (, index, <, input, ., length, (, ), -, 1, ), {, input, =, input, ., substring]
[), {, input, =, input, ., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;]
[<, input, ., length, (, ), -, 1, ), {, input, =, input, ., substring, (, index, +, 1, )]
[), {, input, =, input, ., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;]
[-, 1, ), {, input, =, input, ., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =]
[., length, (, ), -, 1, ), {, input, =, input, ., substring, (, index, +, 1, ), ;, }]
[), {, input, =, input, ., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;]
[=, input, ., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else]
[;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, {, result, ., addLine, (, input, ,, font, ,]
[., substring, (, index, +, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, {, result]
[), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, {, result, ., addLine, (, input, ,, font]
[+, 1, ), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, {, result, ., addLine, (, input]
[), ;, }, else, {, moreInputToProcess, =, false, ;, }, }, else, {, result, ., addLine, (, input, ,, font]
[=, false, ;, }, }, else, {, result, ., addLine, (, input, ,, font, ,, paint, ), ;, moreInputToProcess, =]
[;, }, }, else, {, result, ., addLine, (, input, ,, font, ,, paint, ), ;, moreInputToProcess, =, false, ;]
[;, moreInputToProcess, =, false, ;, }, }, return, result, ;, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font]
[., addLine, (, input, ,, font, ,, paint, ), ;, moreInputToProcess, =, false, ;, }, }, return, result, ;, }]
[,, font, ,, paint, ), ;, moreInputToProcess, =, false, ;, }, }, return, result, ;, }, public, static, TextBlock, createTextBlock]
[,, paint, ), ;, moreInputToProcess, =, false, ;, }, }, return, result, ;, }, public, static, TextBlock, createTextBlock, (, String]
[), ;, moreInputToProcess, =, false, ;, }, }, return, result, ;, }, public, static, TextBlock, createTextBlock, (, String, text, ,]
[=, false, ;, }, }, return, result, ;, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,]
[;, }, }, return, result, ;, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,, Paint, paint]
[;, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,, Paint, paint, ,, float, maxWidth, ,, TextMeasurer]
[;, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,, Paint, paint, ,, float, maxWidth, ,, int]
[,, font, ,, paint, ,, maxWidth, ,, Integer, ., MAX_VALUE, ,, measurer, ), ;, }, public, static, TextBlock, createTextBlock, (]
[,, paint, ,, maxWidth, ,, Integer, ., MAX_VALUE, ,, measurer, ), ;, }, public, static, TextBlock, createTextBlock, (, String, text]
[,, maxWidth, ,, Integer, ., MAX_VALUE, ,, measurer, ), ;, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font]
[,, Integer, ., MAX_VALUE, ,, measurer, ), ;, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,]
[,, measurer, ), ;, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,, Paint, paint, ,, float]
[., MAX_VALUE, ,, measurer, ), ;, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,, Paint, paint]
[), ;, }, public, static, TextBlock, createTextBlock, (, String, text, ,, Font, font, ,, Paint, paint, ,, float, maxWidth, ,]
[;, BreakIterator, iterator, =, BreakIterator, ., getLineInstance, (, ), ;, iterator, ., setText, (, text, ), ;, int, current, =]
[;, iterator, ., setText, (, text, ), ;, int, current, =, 0, ;, int, lines, =, 0, ;, int, length]
[., getLineInstance, (, ), ;, iterator, ., setText, (, text, ), ;, int, current, =, 0, ;, int, lines, =]
[;, int, current, =, 0, ;, int, lines, =, 0, ;, int, length, =, text, ., length, (, ), ;]
[., setText, (, text, ), ;, int, current, =, 0, ;, int, lines, =, 0, ;, int, length, =, text]
[), ;, int, current, =, 0, ;, int, lines, =, 0, ;, int, length, =, text, ., length, (, )]
[;, int, lines, =, 0, ;, int, length, =, text, ., length, (, ), ;, while, (, current, <, length]
[;, int, length, =, text, ., length, (, ), ;, while, (, current, <, length, &&, lines, <, maxLines, )]
[;, while, (, current, <, length, &&, lines, <, maxLines, ), {, int, next, =, nextLineBreak, (, text, ,, current]
[., length, (, ), ;, while, (, current, <, length, &&, lines, <, maxLines, ), {, int, next, =, nextLineBreak]
[), {, int, next, =, nextLineBreak, (, text, ,, current, ,, maxWidth, ,, iterator, ,, measurer, ), ;, if, (]
[&&, lines, <, maxLines, ), {, int, next, =, nextLineBreak, (, text, ,, current, ,, maxWidth, ,, iterator, ,, measurer]
[<, length, &&, lines, <, maxLines, ), {, int, next, =, nextLineBreak, (, text, ,, current, ,, maxWidth, ,, iterator]
[&&, lines, <, maxLines, ), {, int, next, =, nextLineBreak, (, text, ,, current, ,, maxWidth, ,, iterator, ,, measurer]
[), {, int, next, =, nextLineBreak, (, text, ,, current, ,, maxWidth, ,, iterator, ,, measurer, ), ;, if, (]
[<, maxLines, ), {, int, next, =, nextLineBreak, (, text, ,, current, ,, maxWidth, ,, iterator, ,, measurer, ), ;]
[), {, int, next, =, nextLineBreak, (, text, ,, current, ,, maxWidth, ,, iterator, ,, measurer, ), ;, if, (]
[;, if, (, next, ==, BreakIterator, ., DONE, ), {, result, ., addLine, (, text, ., substring, (, current, )]
[,, current, ,, maxWidth, ,, iterator, ,, measurer, ), ;, if, (, next, ==, BreakIterator, ., DONE, ), {, result]
[,, maxWidth, ,, iterator, ,, measurer, ), ;, if, (, next, ==, BreakIterator, ., DONE, ), {, result, ., addLine]
[,, iterator, ,, measurer, ), ;, if, (, next, ==, BreakIterator, ., DONE, ), {, result, ., addLine, (, text]
[,, measurer, ), ;, if, (, next, ==, BreakIterator, ., DONE, ), {, result, ., addLine, (, text, ., substring]
[), ;, if, (, next, ==, BreakIterator, ., DONE, ), {, result, ., addLine, (, text, ., substring, (, current]
[), {, result, ., addLine, (, text, ., substring, (, current, ), ,, font, ,, paint, ), ;, return, result]
[==, BreakIterator, ., DONE, ), {, result, ., addLine, (, text, ., substring, (, current, ), ,, font, ,, paint]
[), {, result, ., addLine, (, text, ., substring, (, current, ), ,, font, ,, paint, ), ;, return, result]
[., DONE, ), {, result, ., addLine, (, text, ., substring, (, current, ), ,, font, ,, paint, ), ;]
[;, return, result, ;, }, result, ., addLine, (, text, ., substring, (, current, ,, next, ), ,, font, ,]
[., addLine, (, text, ., substring, (, current, ), ,, font, ,, paint, ), ;, return, result, ;, }, result]
[,, font, ,, paint, ), ;, return, result, ;, }, result, ., addLine, (, text, ., substring, (, current, ,]
[., substring, (, current, ), ,, font, ,, paint, ), ;, return, result, ;, }, result, ., addLine, (, text]
[), ,, font, ,, paint, ), ;, return, result, ;, }, result, ., addLine, (, text, ., substring, (, current]
[,, paint, ), ;, return, result, ;, }, result, ., addLine, (, text, ., substring, (, current, ,, next, )]
[), ;, return, result, ;, }, result, ., addLine, (, text, ., substring, (, current, ,, next, ), ,, font]
[;, }, result, ., addLine, (, text, ., substring, (, current, ,, next, ), ,, font, ,, paint, ), ;]
[;, lines, ++, ;, current, =, next, ;, while, (, current, <, text, ., length, (, ), &&, text, .]
[., addLine, (, text, ., substring, (, current, ,, next, ), ,, font, ,, paint, ), ;, lines, ++, ;]
[,, font, ,, paint, ), ;, lines, ++, ;, current, =, next, ;, while, (, current, <, text, ., length]
[., substring, (, current, ,, next, ), ,, font, ,, paint, ), ;, lines, ++, ;, current, =, next, ;]
[,, next, ), ,, font, ,, paint, ), ;, lines, ++, ;, current, =, next, ;, while, (, current, <]
[), ,, font, ,, paint, ), ;, lines, ++, ;, current, =, next, ;, while, (, current, <, text, .]
[,, paint, ), ;, lines, ++, ;, current, =, next, ;, while, (, current, <, text, ., length, (, )]
[), ;, lines, ++, ;, current, =, next, ;, while, (, current, <, text, ., length, (, ), &&, text]
[;, current, =, next, ;, while, (, current, <, text, ., length, (, ), &&, text, ., charAt, (, current]
[++, ;, current, =, next, ;, while, (, current, <, text, ., length, (, ), &&, text, ., charAt, (]
[=, next, ;, while, (, current, <, text, ., length, (, ), &&, text, ., charAt, (, current, ), ==]
[;, while, (, current, <, text, ., length, (, ), &&, text, ., charAt, (, current, ), ==, '\n', )]
[), {, current, ++, ;, }, }, if, (, current, <, length, ), {, TextLine, lastLine, =, result, ., getLastLine]
[&&, text, ., charAt, (, current, ), ==, '\n', ), {, current, ++, ;, }, }, if, (, current, <]
[<, text, ., length, (, ), &&, text, ., charAt, (, current, ), ==, '\n', ), {, current, ++, ;]
[&&, text, ., charAt, (, current, ), ==, '\n', ), {, current, ++, ;, }, }, if, (, current, <]
[., length, (, ), &&, text, ., charAt, (, current, ), ==, '\n', ), {, current, ++, ;, }, }]
[), {, current, ++, ;, }, }, if, (, current, <, length, ), {, TextLine, lastLine, =, result, ., getLastLine]
[==, '\n', ), {, current, ++, ;, }, }, if, (, current, <, length, ), {, TextLine, lastLine, =, result]
[., charAt, (, current, ), ==, '\n', ), {, current, ++, ;, }, }, if, (, current, <, length, )]
[), ==, '\n', ), {, current, ++, ;, }, }, if, (, current, <, length, ), {, TextLine, lastLine, =]
[), {, current, ++, ;, }, }, if, (, current, <, length, ), {, TextLine, lastLine, =, result, ., getLastLine]
[;, }, }, if, (, current, <, length, ), {, TextLine, lastLine, =, result, ., getLastLine, (, ), ;, TextFragment]
[++, ;, }, }, if, (, current, <, length, ), {, TextLine, lastLine, =, result, ., getLastLine, (, ), ;]
[), {, TextLine, lastLine, =, result, ., getLastLine, (, ), ;, TextFragment, lastFragment, =, lastLine, ., getLastTextFragment, (, ), ;]
[<, length, ), {, TextLine, lastLine, =, result, ., getLastLine, (, ), ;, TextFragment, lastFragment, =, lastLine, ., getLastTextFragment, (]
[), {, TextLine, lastLine, =, result, ., getLastLine, (, ), ;, TextFragment, lastFragment, =, lastLine, ., getLastTextFragment, (, ), ;]
[;, TextFragment, lastFragment, =, lastLine, ., getLastTextFragment, (, ), ;, String, oldStr, =, lastFragment, ., getText, (, ), ;, String]
[., getLastLine, (, ), ;, TextFragment, lastFragment, =, lastLine, ., getLastTextFragment, (, ), ;, String, oldStr, =, lastFragment, ., getText]
[;, String, oldStr, =, lastFragment, ., getText, (, ), ;, String, newStr, =, "...", ;, if, (, oldStr, ., length]
[., getLastTextFragment, (, ), ;, String, oldStr, =, lastFragment, ., getText, (, ), ;, String, newStr, =, "...", ;, if]
[;, String, newStr, =, "...", ;, if, (, oldStr, ., length, (, ), >, 3, ), {, newStr, =, oldStr]
[., getText, (, ), ;, String, newStr, =, "...", ;, if, (, oldStr, ., length, (, ), >, 3, )]
[;, if, (, oldStr, ., length, (, ), >, 3, ), {, newStr, =, oldStr, ., substring, (, 0, ,]
[), {, newStr, =, oldStr, ., substring, (, 0, ,, oldStr, ., length, (, ), -, 3, ), +, "..."]
[>, 3, ), {, newStr, =, oldStr, ., substring, (, 0, ,, oldStr, ., length, (, ), -, 3, )]
[., length, (, ), >, 3, ), {, newStr, =, oldStr, ., substring, (, 0, ,, oldStr, ., length, (]
[), {, newStr, =, oldStr, ., substring, (, 0, ,, oldStr, ., length, (, ), -, 3, ), +, "..."]
[=, oldStr, ., substring, (, 0, ,, oldStr, ., length, (, ), -, 3, ), +, "...", ;, }, lastLine]
[;, }, lastLine, ., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment, =, new, TextFragment, (, newStr, ,, lastFragment, ., getFont]
[+, "...", ;, }, lastLine, ., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment, =, new, TextFragment, (, newStr, ,, lastFragment]
[., substring, (, 0, ,, oldStr, ., length, (, ), -, 3, ), +, "...", ;, }, lastLine, ., removeFragment]
[,, oldStr, ., length, (, ), -, 3, ), +, "...", ;, }, lastLine, ., removeFragment, (, lastFragment, ), ;]
[), +, "...", ;, }, lastLine, ., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment, =, new, TextFragment, (, newStr, ,]
[-, 3, ), +, "...", ;, }, lastLine, ., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment, =, new, TextFragment, (]
[., length, (, ), -, 3, ), +, "...", ;, }, lastLine, ., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment]
[), +, "...", ;, }, lastLine, ., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment, =, new, TextFragment, (, newStr, ,]
[;, }, lastLine, ., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment, =, new, TextFragment, (, newStr, ,, lastFragment, ., getFont]
[;, TextFragment, newFragment, =, new, TextFragment, (, newStr, ,, lastFragment, ., getFont, (, ), ,, lastFragment, ., getPaint, (, )]
[., removeFragment, (, lastFragment, ), ;, TextFragment, newFragment, =, new, TextFragment, (, newStr, ,, lastFragment, ., getFont, (, ), ,]
[), ;, TextFragment, newFragment, =, new, TextFragment, (, newStr, ,, lastFragment, ., getFont, (, ), ,, lastFragment, ., getPaint, (]
[;, lastLine, ., addFragment, (, newFragment, ), ;, }, return, result, ;, }, private, static, int, nextLineBreak, (, String, text]
[,, lastFragment, ., getFont, (, ), ,, lastFragment, ., getPaint, (, ), ), ;, lastLine, ., addFragment, (, newFragment, )]
[,, lastFragment, ., getPaint, (, ), ), ;, lastLine, ., addFragment, (, newFragment, ), ;, }, return, result, ;, }]
[., getFont, (, ), ,, lastFragment, ., getPaint, (, ), ), ;, lastLine, ., addFragment, (, newFragment, ), ;, }]
[), ;, lastLine, ., addFragment, (, newFragment, ), ;, }, return, result, ;, }, private, static, int, nextLineBreak, (, String]
[., getPaint, (, ), ), ;, lastLine, ., addFragment, (, newFragment, ), ;, }, return, result, ;, }, private, static]
[;, }, return, result, ;, }, private, static, int, nextLineBreak, (, String, text, ,, int, start, ,, float, width, ,]
[., addFragment, (, newFragment, ), ;, }, return, result, ;, }, private, static, int, nextLineBreak, (, String, text, ,, int]
[), ;, }, return, result, ;, }, private, static, int, nextLineBreak, (, String, text, ,, int, start, ,, float, width]
[;, }, private, static, int, nextLineBreak, (, String, text, ,, int, start, ,, float, width, ,, BreakIterator, iterator, ,, TextMeasurer]
[;, int, end, ;, float, x, =, 0.0f, ;, boolean, firstWord, =, true, ;, int, newline, =, text, ., indexOf]
[;, boolean, firstWord, =, true, ;, int, newline, =, text, ., indexOf, (, '\n', ,, start, ), ;, if, (]
[;, int, newline, =, text, ., indexOf, (, '\n', ,, start, ), ;, if, (, newline, <, 0, ), {]
[;, if, (, newline, <, 0, ), {, newline, =, Integer, ., MAX_VALUE, ;, }, while, (, (, (, end]
[., indexOf, (, '\n', ,, start, ), ;, if, (, newline, <, 0, ), {, newline, =, Integer, ., MAX_VALUE]
[,, start, ), ;, if, (, newline, <, 0, ), {, newline, =, Integer, ., MAX_VALUE, ;, }, while, (]
[), ;, if, (, newline, <, 0, ), {, newline, =, Integer, ., MAX_VALUE, ;, }, while, (, (, (]
[), {, newline, =, Integer, ., MAX_VALUE, ;, }, while, (, (, (, end, =, iterator, ., next, (, )]
[<, 0, ), {, newline, =, Integer, ., MAX_VALUE, ;, }, while, (, (, (, end, =, iterator, ., next]
[), {, newline, =, Integer, ., MAX_VALUE, ;, }, while, (, (, (, end, =, iterator, ., next, (, )]
[=, Integer, ., MAX_VALUE, ;, }, while, (, (, (, end, =, iterator, ., next, (, ), ), !=, BreakIterator]
[;, }, while, (, (, (, end, =, iterator, ., next, (, ), ), !=, BreakIterator, ., DONE, ), )]
[., MAX_VALUE, ;, }, while, (, (, (, end, =, iterator, ., next, (, ), ), !=, BreakIterator, ., DONE]
[), {, x, +=, measurer, ., getStringWidth, (, text, ,, current, ,, end, ), ;, if, (, x, >, width]
[), ), {, x, +=, measurer, ., getStringWidth, (, text, ,, current, ,, end, ), ;, if, (, x, >]
[!=, BreakIterator, ., DONE, ), ), {, x, +=, measurer, ., getStringWidth, (, text, ,, current, ,, end, ), ;]
[=, iterator, ., next, (, ), ), !=, BreakIterator, ., DONE, ), ), {, x, +=, measurer, ., getStringWidth, (]
[), !=, BreakIterator, ., DONE, ), ), {, x, +=, measurer, ., getStringWidth, (, text, ,, current, ,, end, )]
[., next, (, ), ), !=, BreakIterator, ., DONE, ), ), {, x, +=, measurer, ., getStringWidth, (, text, ,]
[), ), {, x, +=, measurer, ., getStringWidth, (, text, ,, current, ,, end, ), ;, if, (, x, >]
[., DONE, ), ), {, x, +=, measurer, ., getStringWidth, (, text, ,, current, ,, end, ), ;, if, (]
[+=, measurer, ., getStringWidth, (, text, ,, current, ,, end, ), ;, if, (, x, >, width, ), {, if]
[;, if, (, x, >, width, ), {, if, (, firstWord, ), {, while, (, measurer, ., getStringWidth, (, text]
[., getStringWidth, (, text, ,, current, ,, end, ), ;, if, (, x, >, width, ), {, if, (, firstWord]
[,, current, ,, end, ), ;, if, (, x, >, width, ), {, if, (, firstWord, ), {, while, (]
[,, end, ), ;, if, (, x, >, width, ), {, if, (, firstWord, ), {, while, (, measurer, .]
[), ;, if, (, x, >, width, ), {, if, (, firstWord, ), {, while, (, measurer, ., getStringWidth, (]
[), {, if, (, firstWord, ), {, while, (, measurer, ., getStringWidth, (, text, ,, start, ,, end, ), >]
[>, width, ), {, if, (, firstWord, ), {, while, (, measurer, ., getStringWidth, (, text, ,, start, ,, end]
[), {, if, (, firstWord, ), {, while, (, measurer, ., getStringWidth, (, text, ,, start, ,, end, ), >]
[), {, while, (, measurer, ., getStringWidth, (, text, ,, start, ,, end, ), >, width, ), {, end, --]
[), {, end, --, ;, if, (, end, <=, start, ), {, return, end, ;, }, }, return, end, ;]
[>, width, ), {, end, --, ;, if, (, end, <=, start, ), {, return, end, ;, }, }, return]
[., getStringWidth, (, text, ,, start, ,, end, ), >, width, ), {, end, --, ;, if, (, end, <=]
[,, start, ,, end, ), >, width, ), {, end, --, ;, if, (, end, <=, start, ), {, return]
[,, end, ), >, width, ), {, end, --, ;, if, (, end, <=, start, ), {, return, end, ;]
[), >, width, ), {, end, --, ;, if, (, end, <=, start, ), {, return, end, ;, }, }]
[), {, end, --, ;, if, (, end, <=, start, ), {, return, end, ;, }, }, return, end, ;]
[;, if, (, end, <=, start, ), {, return, end, ;, }, }, return, end, ;, }, else, {, end]
[--, ;, if, (, end, <=, start, ), {, return, end, ;, }, }, return, end, ;, }, else, {]
[), {, return, end, ;, }, }, return, end, ;, }, else, {, end, =, iterator, ., previous, (, )]
[<=, start, ), {, return, end, ;, }, }, return, end, ;, }, else, {, end, =, iterator, ., previous]
[), {, return, end, ;, }, }, return, end, ;, }, else, {, end, =, iterator, ., previous, (, )]
[;, }, }, return, end, ;, }, else, {, end, =, iterator, ., previous, (, ), ;, return, end, ;]
[;, }, else, {, end, =, iterator, ., previous, (, ), ;, return, end, ;, }, }, else, {, if]
[=, iterator, ., previous, (, ), ;, return, end, ;, }, }, else, {, if, (, end, >, newline, )]
[;, return, end, ;, }, }, else, {, if, (, end, >, newline, ), {, return, newline, ;, }, }]
[., previous, (, ), ;, return, end, ;, }, }, else, {, if, (, end, >, newline, ), {, return]
[;, }, }, else, {, if, (, end, >, newline, ), {, return, newline, ;, }, }, firstWord, =, false]
[), {, return, newline, ;, }, }, firstWord, =, false, ;, current, =, end, ;, }, return, BreakIterator, ., DONE]
[>, newline, ), {, return, newline, ;, }, }, firstWord, =, false, ;, current, =, end, ;, }, return, BreakIterator]
[), {, return, newline, ;, }, }, firstWord, =, false, ;, current, =, end, ;, }, return, BreakIterator, ., DONE]
[;, }, }, firstWord, =, false, ;, current, =, end, ;, }, return, BreakIterator, ., DONE, ;, }, public, static]
[=, false, ;, current, =, end, ;, }, return, BreakIterator, ., DONE, ;, }, public, static, Rectangle2D, getTextBounds, (, String]
[;, current, =, end, ;, }, return, BreakIterator, ., DONE, ;, }, public, static, Rectangle2D, getTextBounds, (, String, text, ,]
[=, end, ;, }, return, BreakIterator, ., DONE, ;, }, public, static, Rectangle2D, getTextBounds, (, String, text, ,, Graphics2D, g2]
[;, }, return, BreakIterator, ., DONE, ;, }, public, static, Rectangle2D, getTextBounds, (, String, text, ,, Graphics2D, g2, ,, FontMetrics]
[;, }, public, static, Rectangle2D, getTextBounds, (, String, text, ,, Graphics2D, g2, ,, FontMetrics, fm, ), {, final, Rectangle2D, bounds]
[., DONE, ;, }, public, static, Rectangle2D, getTextBounds, (, String, text, ,, Graphics2D, g2, ,, FontMetrics, fm, ), {, final]
[), {, bounds, =, fm, ., getStringBounds, (, text, ,, g2, ), ;, LineMetrics, lm, =, fm, ., getFont, (]
[., useFontMetricsGetStringBounds, ), {, bounds, =, fm, ., getStringBounds, (, text, ,, g2, ), ;, LineMetrics, lm, =, fm, .]
[=, fm, ., getStringBounds, (, text, ,, g2, ), ;, LineMetrics, lm, =, fm, ., getFont, (, ), ., getLineMetrics]
[;, LineMetrics, lm, =, fm, ., getFont, (, ), ., getLineMetrics, (, text, ,, g2, ., getFontRenderContext, (, ), )]
[., getStringBounds, (, text, ,, g2, ), ;, LineMetrics, lm, =, fm, ., getFont, (, ), ., getLineMetrics, (, text]
[,, g2, ), ;, LineMetrics, lm, =, fm, ., getFont, (, ), ., getLineMetrics, (, text, ,, g2, ., getFontRenderContext]
[), ;, LineMetrics, lm, =, fm, ., getFont, (, ), ., getLineMetrics, (, text, ,, g2, ., getFontRenderContext, (, )]
[;, bounds, ., setRect, (, bounds, ., getX, (, ), ,, bounds, ., getY, (, ), ,, bounds, ., getWidth]
[., getLineMetrics, (, text, ,, g2, ., getFontRenderContext, (, ), ), ;, bounds, ., setRect, (, bounds, ., getX, (]
[., getFont, (, ), ., getLineMetrics, (, text, ,, g2, ., getFontRenderContext, (, ), ), ;, bounds, ., setRect, (]
[,, g2, ., getFontRenderContext, (, ), ), ;, bounds, ., setRect, (, bounds, ., getX, (, ), ,, bounds, .]
[), ;, bounds, ., setRect, (, bounds, ., getX, (, ), ,, bounds, ., getY, (, ), ,, bounds, .]
[., getFontRenderContext, (, ), ), ;, bounds, ., setRect, (, bounds, ., getX, (, ), ,, bounds, ., getY, (]
[;, }, else, {, double, width, =, fm, ., stringWidth, (, text, ), ;, double, height, =, fm, ., getHeight]
[., setRect, (, bounds, ., getX, (, ), ,, bounds, ., getY, (, ), ,, bounds, ., getWidth, (, )]
[,, bounds, ., getY, (, ), ,, bounds, ., getWidth, (, ), ,, lm, ., getHeight, (, ), ), ;]
[., getX, (, ), ,, bounds, ., getY, (, ), ,, bounds, ., getWidth, (, ), ,, lm, ., getHeight]
[,, bounds, ., getWidth, (, ), ,, lm, ., getHeight, (, ), ), ;, }, else, {, double, width, =]
[., getY, (, ), ,, bounds, ., getWidth, (, ), ,, lm, ., getHeight, (, ), ), ;, }, else]
[,, lm, ., getHeight, (, ), ), ;, }, else, {, double, width, =, fm, ., stringWidth, (, text, )]
[., getWidth, (, ), ,, lm, ., getHeight, (, ), ), ;, }, else, {, double, width, =, fm, .]
[), ;, }, else, {, double, width, =, fm, ., stringWidth, (, text, ), ;, double, height, =, fm, .]
[., getHeight, (, ), ), ;, }, else, {, double, width, =, fm, ., stringWidth, (, text, ), ;, double]
[;, double, height, =, fm, ., getHeight, (, ), ;, bounds, =, new, Rectangle2D, ., Double, (, 0.0, ,, -]
[., stringWidth, (, text, ), ;, double, height, =, fm, ., getHeight, (, ), ;, bounds, =, new, Rectangle2D, .]
[), ;, double, height, =, fm, ., getHeight, (, ), ;, bounds, =, new, Rectangle2D, ., Double, (, 0.0, ,]
[;, bounds, =, new, Rectangle2D, ., Double, (, 0.0, ,, -, fm, ., getAscent, (, ), ,, width, ,, height]
[., getHeight, (, ), ;, bounds, =, new, Rectangle2D, ., Double, (, 0.0, ,, -, fm, ., getAscent, (, )]
[=, new, Rectangle2D, ., Double, (, 0.0, ,, -, fm, ., getAscent, (, ), ,, width, ,, height, ), ;]
[;, }, return, bounds, ;, }, public, static, Rectangle2D, drawAlignedString, (, String, text, ,, Graphics2D, g2, ,, float, x, ,]
[,, -, fm, ., getAscent, (, ), ,, width, ,, height, ), ;, }, return, bounds, ;, }, public, static]
[,, width, ,, height, ), ;, }, return, bounds, ;, }, public, static, Rectangle2D, drawAlignedString, (, String, text, ,, Graphics2D]
[,, width, ,, height, ), ;, }, return, bounds, ;, }, public, static, Rectangle2D, drawAlignedString, (, String, text, ,, Graphics2D]
[., getAscent, (, ), ,, width, ,, height, ), ;, }, return, bounds, ;, }, public, static, Rectangle2D, drawAlignedString, (]
[,, height, ), ;, }, return, bounds, ;, }, public, static, Rectangle2D, drawAlignedString, (, String, text, ,, Graphics2D, g2, ,]
[), ;, }, return, bounds, ;, }, public, static, Rectangle2D, drawAlignedString, (, String, text, ,, Graphics2D, g2, ,, float, x]
[;, }, public, static, Rectangle2D, drawAlignedString, (, String, text, ,, Graphics2D, g2, ,, float, x, ,, float, y, ,, TextAnchor]
[;, float, [, ], adjust, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, anchor, ,, textBounds, ), ;, textBounds, ., setRect]
[;, textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1, ], +, adjust]
[,, text, ,, anchor, ,, textBounds, ), ;, textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,, y]
[,, anchor, ,, textBounds, ), ;, textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,, y, +, adjust]
[,, textBounds, ), ;, textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1]
[), ;, textBounds, ., setRect, (, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1, ], +]
[;, g2, ., drawString, (, text, ,, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1, ]]
[., setRect, (, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1, ], +, adjust, [, 2]
[,, y, +, adjust, [, 1, ], +, adjust, [, 2, ], ,, textBounds, ., getWidth, (, ), ,, textBounds]
[+, adjust, [, 0, ], ,, y, +, adjust, [, 1, ], +, adjust, [, 2, ], ,, textBounds, .]
[,, y, +, adjust, [, 1, ], +, adjust, [, 2, ], ,, textBounds, ., getWidth, (, ), ,, textBounds]
[[, 0, ], ,, y, +, adjust, [, 1, ], +, adjust, [, 2, ], ,, textBounds, ., getWidth, (]
[], ,, y, +, adjust, [, 1, ], +, adjust, [, 2, ], ,, textBounds, ., getWidth, (, ), ,]
[,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;, g2, ., drawString, (, text, ,]
[+, adjust, [, 2, ], ,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;, g2]
[+, adjust, [, 1, ], +, adjust, [, 2, ], ,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight]
[+, adjust, [, 2, ], ,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;, g2]
[[, 1, ], +, adjust, [, 2, ], ,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight, (, )]
[], +, adjust, [, 2, ], ,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;]
[,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;, g2, ., drawString, (, text, ,]
[[, 2, ], ,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;, g2, ., drawString]
[], ,, textBounds, ., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;, g2, ., drawString, (, text]
[,, textBounds, ., getHeight, (, ), ), ;, g2, ., drawString, (, text, ,, x, +, adjust, [, 0, ]]
[., getWidth, (, ), ,, textBounds, ., getHeight, (, ), ), ;, g2, ., drawString, (, text, ,, x, +]
[), ;, g2, ., drawString, (, text, ,, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1]
[., getHeight, (, ), ), ;, g2, ., drawString, (, text, ,, x, +, adjust, [, 0, ], ,, y]
[;, return, textBounds, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor, anchor]
[., drawString, (, text, ,, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1, ], ), ;]
[,, x, +, adjust, [, 0, ], ,, y, +, adjust, [, 1, ], ), ;, return, textBounds, ;, }]
[,, y, +, adjust, [, 1, ], ), ;, return, textBounds, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (]
[+, adjust, [, 0, ], ,, y, +, adjust, [, 1, ], ), ;, return, textBounds, ;, }, private, static]
[,, y, +, adjust, [, 1, ], ), ;, return, textBounds, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (]
[[, 0, ], ,, y, +, adjust, [, 1, ], ), ;, return, textBounds, ;, }, private, static, float, []
[], ,, y, +, adjust, [, 1, ], ), ;, return, textBounds, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets]
[), ;, return, textBounds, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor]
[+, adjust, [, 1, ], ), ;, return, textBounds, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2]
[), ;, return, textBounds, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor]
[[, 1, ], ), ;, return, textBounds, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String]
[], ), ;, return, textBounds, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,]
[;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor, anchor, ,, Rectangle2D, textBounds]
[;, FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, Font, f, =, g2, ., getFont, (, ), ;, FontMetrics]
[], ;, FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, Font, f, =, g2, ., getFont, (, ), ;]
[;, Font, f, =, g2, ., getFont, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;]
[., getFontRenderContext, (, ), ;, Font, f, =, g2, ., getFont, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics]
[;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,]
[., getFont, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =, TextUtilities, .]
[;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =, f, .]
[., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;]
[), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =, f]
[;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (]
[., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc]
[,, g2, ,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent]
[,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =, metrics]
[), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent]
[;, float, ascent, =, metrics, ., getAscent, (, ), ;, result, [, 2, ], =, -, ascent, ;, float, halfAscent]
[., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, result, [, 2]
[,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, result, [, 2, ], =, -, ascent]
[), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, result, [, 2, ], =, -, ascent, ;, float]
[;, result, [, 2, ], =, -, ascent, ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics]
[., getAscent, (, ), ;, result, [, 2, ], =, -, ascent, ;, float, halfAscent, =, ascent, /, 2.0f, ;]
[=, -, ascent, ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;]
[[, 2, ], =, -, ascent, ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent]
[], =, -, ascent, ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, )]
[;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =]
[;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =]
[;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float]
[/, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, )]
[;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float]
[;, float, leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;]
[., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float]
[;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor]
[., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor]
[;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {]
[||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor]
[==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor]
[., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {]
[==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {]
[., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -]
[., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, .]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /]
[., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else]
[=, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor]
[., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor]
[==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor]
[., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -]
[==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -]
[., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;]
[==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, .]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;]
[., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor]
[., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor]
[=, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||]
[;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, .]
[;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, .]
[;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, .]
[., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else]
[||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, .]
[||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading]
[==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading]
[., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent]
[||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, .]
[==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (]
[||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, .]
[., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, )]
[), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else]
[==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (]
[), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else]
[., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;]
[=, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor]
[+, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||]
[-, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, .]
[-, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, .]
[+, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||]
[;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor]
[., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER]
[), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, .]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else]
[==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else]
[., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==]
[), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, .]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||]
[), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, .]
[., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==]
[=, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor]
[), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds]
[||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading]
[==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading]
[., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds]
[==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds]
[., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, )]
[), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0]
[==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight]
[), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0]
[., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight, (, )]
[=, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }]
[;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor]
[+, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==]
[-, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[-, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[+, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==]
[;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[/, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, .]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else]
[==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else]
[., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, .]
[==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||]
[), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, .]
[., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[=, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor]
[), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, if, (]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent]
[==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent]
[., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, )]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading]
[., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics]
[), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, if, (]
[==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, )]
[), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, if, (]
[., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }]
[=, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, if, (, textBounds, !=, null]
[;, }, if, (, textBounds, !=, null, ), {, textBounds, ., setRect, (, bounds, ), ;, }, result, [, 0]
[-, metrics, ., getLeading, (, ), ;, }, if, (, textBounds, !=, null, ), {, textBounds, ., setRect, (, bounds]
[-, metrics, ., getLeading, (, ), ;, }, if, (, textBounds, !=, null, ), {, textBounds, ., setRect, (, bounds]
[., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, if, (, textBounds, !=, null, ), {, textBounds]
[;, }, if, (, textBounds, !=, null, ), {, textBounds, ., setRect, (, bounds, ), ;, }, result, [, 0]
[., getLeading, (, ), ;, }, if, (, textBounds, !=, null, ), {, textBounds, ., setRect, (, bounds, ), ;]
[), {, textBounds, ., setRect, (, bounds, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1]
[!=, null, ), {, textBounds, ., setRect, (, bounds, ), ;, }, result, [, 0, ], =, xAdj, ;, result]
[), {, textBounds, ., setRect, (, bounds, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1]
[;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }]
[., setRect, (, bounds, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj]
[), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;]
[=, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, public, static, void, setUseDrawRotatedStringWorkaround, (, boolean]
[[, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, public, static, void]
[], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, public, static, void, setUseDrawRotatedStringWorkaround, (]
[;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, public, static, void, setUseDrawRotatedStringWorkaround, (, boolean, use, )]
[=, yAdj, ;, return, result, ;, }, public, static, void, setUseDrawRotatedStringWorkaround, (, boolean, use, ), {, useDrawRotatedStringWorkaround, =, use, ;]
[[, 1, ], =, yAdj, ;, return, result, ;, }, public, static, void, setUseDrawRotatedStringWorkaround, (, boolean, use, ), {, useDrawRotatedStringWorkaround]
[], =, yAdj, ;, return, result, ;, }, public, static, void, setUseDrawRotatedStringWorkaround, (, boolean, use, ), {, useDrawRotatedStringWorkaround, =, use]
[;, return, result, ;, }, public, static, void, setUseDrawRotatedStringWorkaround, (, boolean, use, ), {, useDrawRotatedStringWorkaround, =, use, ;, }, public]
[;, }, public, static, void, setUseDrawRotatedStringWorkaround, (, boolean, use, ), {, useDrawRotatedStringWorkaround, =, use, ;, }, public, static, void, drawRotatedString]
[=, use, ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, double, angle, ,, float, x]
[;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, double, angle, ,, float, x, ,, float]
[;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, float, textX, ,, float, textY, ,, double]
[,, g2, ,, x, ,, y, ,, angle, ,, x, ,, y, ), ;, }, public, static, void, drawRotatedString, (]
[,, x, ,, y, ,, angle, ,, x, ,, y, ), ;, }, public, static, void, drawRotatedString, (, String, text]
[,, y, ,, angle, ,, x, ,, y, ), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D]
[,, angle, ,, x, ,, y, ), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,]
[,, x, ,, y, ), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, float, textX]
[,, y, ), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, float, textX, ,, float]
[), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, float, textX, ,, float, textY, ,]
[), {, return, ;, }, AffineTransform, saved, =, g2, ., getTransform, (, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance]
[||, (, text, ., equals, (, "", ), ), ), {, return, ;, }, AffineTransform, saved, =, g2, ., getTransform]
[), ||, (, text, ., equals, (, "", ), ), ), {, return, ;, }, AffineTransform, saved, =, g2, .]
[==, null, ), ||, (, text, ., equals, (, "", ), ), ), {, return, ;, }, AffineTransform, saved, =]
[), ||, (, text, ., equals, (, "", ), ), ), {, return, ;, }, AffineTransform, saved, =, g2, .]
[), {, return, ;, }, AffineTransform, saved, =, g2, ., getTransform, (, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance]
[), ), {, return, ;, }, AffineTransform, saved, =, g2, ., getTransform, (, ), ;, AffineTransform, rotate, =, AffineTransform, .]
[., equals, (, "", ), ), ), {, return, ;, }, AffineTransform, saved, =, g2, ., getTransform, (, ), ;]
[), ), ), {, return, ;, }, AffineTransform, saved, =, g2, ., getTransform, (, ), ;, AffineTransform, rotate, =, AffineTransform]
[;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;, g2, ., transform, (, rotate]
[., getTransform, (, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;, g2]
[;, g2, ., transform, (, rotate, ), ;, if, (, useDrawRotatedStringWorkaround, ), {, TextLayout, tl, =, new, TextLayout, (, text]
[., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;, g2, ., transform, (, rotate, ), ;, if, (, useDrawRotatedStringWorkaround]
[,, rotateX, ,, rotateY, ), ;, g2, ., transform, (, rotate, ), ;, if, (, useDrawRotatedStringWorkaround, ), {, TextLayout, tl]
[,, rotateY, ), ;, g2, ., transform, (, rotate, ), ;, if, (, useDrawRotatedStringWorkaround, ), {, TextLayout, tl, =, new]
[), ;, g2, ., transform, (, rotate, ), ;, if, (, useDrawRotatedStringWorkaround, ), {, TextLayout, tl, =, new, TextLayout, (]
[;, if, (, useDrawRotatedStringWorkaround, ), {, TextLayout, tl, =, new, TextLayout, (, text, ,, g2, ., getFont, (, ), ,]
[., transform, (, rotate, ), ;, if, (, useDrawRotatedStringWorkaround, ), {, TextLayout, tl, =, new, TextLayout, (, text, ,, g2]
[), ;, if, (, useDrawRotatedStringWorkaround, ), {, TextLayout, tl, =, new, TextLayout, (, text, ,, g2, ., getFont, (, )]
[), {, TextLayout, tl, =, new, TextLayout, (, text, ,, g2, ., getFont, (, ), ,, g2, ., getFontRenderContext, (]
[;, tl, ., draw, (, g2, ,, textX, ,, textY, ), ;, }, else, {, AttributedString, as, =, new, AttributedString]
[,, g2, ., getFont, (, ), ,, g2, ., getFontRenderContext, (, ), ), ;, tl, ., draw, (, g2, ,]
[,, g2, ., getFontRenderContext, (, ), ), ;, tl, ., draw, (, g2, ,, textX, ,, textY, ), ;, }]
[., getFont, (, ), ,, g2, ., getFontRenderContext, (, ), ), ;, tl, ., draw, (, g2, ,, textX, ,]
[), ;, tl, ., draw, (, g2, ,, textX, ,, textY, ), ;, }, else, {, AttributedString, as, =, new]
[., getFontRenderContext, (, ), ), ;, tl, ., draw, (, g2, ,, textX, ,, textY, ), ;, }, else, {]
[;, }, else, {, AttributedString, as, =, new, AttributedString, (, text, ,, g2, ., getFont, (, ), ., getAttributes, (]
[., draw, (, g2, ,, textX, ,, textY, ), ;, }, else, {, AttributedString, as, =, new, AttributedString, (, text]
[,, textX, ,, textY, ), ;, }, else, {, AttributedString, as, =, new, AttributedString, (, text, ,, g2, ., getFont]
[,, textY, ), ;, }, else, {, AttributedString, as, =, new, AttributedString, (, text, ,, g2, ., getFont, (, )]
[), ;, }, else, {, AttributedString, as, =, new, AttributedString, (, text, ,, g2, ., getFont, (, ), ., getAttributes]
[;, g2, ., drawString, (, as, ., getIterator, (, ), ,, textX, ,, textY, ), ;, }, g2, ., setTransform]
[,, g2, ., getFont, (, ), ., getAttributes, (, ), ), ;, g2, ., drawString, (, as, ., getIterator, (]
[), ;, g2, ., drawString, (, as, ., getIterator, (, ), ,, textX, ,, textY, ), ;, }, g2, .]
[., getAttributes, (, ), ), ;, g2, ., drawString, (, as, ., getIterator, (, ), ,, textX, ,, textY, )]
[., getFont, (, ), ., getAttributes, (, ), ), ;, g2, ., drawString, (, as, ., getIterator, (, ), ,]
[;, }, g2, ., setTransform, (, saved, ), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2]
[., drawString, (, as, ., getIterator, (, ), ,, textX, ,, textY, ), ;, }, g2, ., setTransform, (, saved]
[,, textX, ,, textY, ), ;, }, g2, ., setTransform, (, saved, ), ;, }, public, static, void, drawRotatedString, (]
[., getIterator, (, ), ,, textX, ,, textY, ), ;, }, g2, ., setTransform, (, saved, ), ;, }, public]
[,, textY, ), ;, }, g2, ., setTransform, (, saved, ), ;, }, public, static, void, drawRotatedString, (, String, text]
[), ;, }, g2, ., setTransform, (, saved, ), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D]
[;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, float, x, ,, float, y, ,, TextAnchor]
[., setTransform, (, saved, ), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, float, x]
[), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, float, x, ,, float, y, ,]
[), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, drawRotatedString]
[||, text, ., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2]
[==, null, ||, text, ., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets]
[||, text, ., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2]
[), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, drawRotatedString]
[., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text]
[), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;]
[;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ]]
[,, text, ,, textAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y]
[,, textAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj]
[), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1]
[;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, float, x, ,, float, y, ,, TextAnchor]
[,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, rotationX]
[,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, rotationX, ,, rotationY]
[,, y, +, textAdj, [, 1, ], ,, angle, ,, rotationX, ,, rotationY, ), ;, }, public, static, void, drawRotatedString]
[+, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, rotationX, ,, rotationY, ), ;]
[,, y, +, textAdj, [, 1, ], ,, angle, ,, rotationX, ,, rotationY, ), ;, }, public, static, void, drawRotatedString]
[[, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, rotationX, ,, rotationY, ), ;, }, public]
[], ,, y, +, textAdj, [, 1, ], ,, angle, ,, rotationX, ,, rotationY, ), ;, }, public, static, void]
[,, angle, ,, rotationX, ,, rotationY, ), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,]
[+, textAdj, [, 1, ], ,, angle, ,, rotationX, ,, rotationY, ), ;, }, public, static, void, drawRotatedString, (, String]
[,, angle, ,, rotationX, ,, rotationY, ), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,]
[[, 1, ], ,, angle, ,, rotationX, ,, rotationY, ), ;, }, public, static, void, drawRotatedString, (, String, text, ,]
[], ,, angle, ,, rotationX, ,, rotationY, ), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2]
[,, rotationX, ,, rotationY, ), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, float, x]
[,, rotationY, ), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, float, x, ,, float]
[), ;, }, public, static, void, drawRotatedString, (, String, text, ,, Graphics2D, g2, ,, float, x, ,, float, y, ,]
[), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, float]
[||, text, ., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2]
[==, null, ||, text, ., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets]
[||, text, ., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2]
[), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, float]
[., equals, (, "", ), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text]
[), ), {, return, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;]
[;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, drawRotatedString, (, text, ,, g2]
[,, text, ,, textAnchor, ), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;]
[,, textAnchor, ), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, drawRotatedString, (]
[), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, drawRotatedString, (, text, ,]
[;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ]]
[,, text, ,, rotationAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y]
[,, rotationAnchor, ), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj]
[), ;, drawRotatedString, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1]
[;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D, g2, ,, float, x, ,, float, y, ,, TextAnchor]
[,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x]
[,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj]
[,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0]
[+, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0]
[,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0]
[[, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +]
[], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, []
[,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1]
[+, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,]
[,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1]
[[, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +]
[], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, []
[,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +]
[,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, }, public, static, Shape, calculateRotatedStringBounds, (]
[+, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, }]
[+, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, []
[+, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, }]
[[, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ]]
[], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;]
[,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, }, public, static, Shape, calculateRotatedStringBounds, (]
[[, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, }, public, static]
[], ,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, }, public, static, Shape, calculateRotatedStringBounds]
[), ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D, g2, ,, float, x, ,, float, y, ,]
[+, rotateAdj, [, 1, ], ), ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D, g2, ,, float]
[+, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text]
[+, rotateAdj, [, 1, ], ), ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D, g2, ,, float]
[[, 1, ], +, rotateAdj, [, 1, ], ), ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D]
[], +, rotateAdj, [, 1, ], ), ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D, g2, ,]
[), ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D, g2, ,, float, x, ,, float, y, ,]
[[, 1, ], ), ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D, g2, ,, float, x, ,]
[], ), ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D, g2, ,, float, x, ,, float, y]
[), {, return, null, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;]
[||, text, ., equals, (, "", ), ), {, return, null, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (]
[==, null, ||, text, ., equals, (, "", ), ), {, return, null, ;, }, float, [, ], textAdj, =]
[||, text, ., equals, (, "", ), ), {, return, null, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (]
[), {, return, null, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;]
[., equals, (, "", ), ), {, return, null, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,]
[), ), {, return, null, ;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, )]
[;, }, float, [, ], textAdj, =, deriveTextBoundsAnchorOffsets, (, g2, ,, text, ,, textAnchor, ), ;, float, [, ], rotateAdj]
[;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, Shape, result, =, calculateRotatedStringBounds, (]
[,, text, ,, textAnchor, ), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;]
[,, textAnchor, ), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, Shape, result]
[), ;, float, [, ], rotateAdj, =, deriveRotationAnchorOffsets, (, g2, ,, text, ,, rotationAnchor, ), ;, Shape, result, =, calculateRotatedStringBounds]
[;, Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj]
[,, text, ,, rotationAnchor, ), ;, Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,, x, +, textAdj, [, 0]
[,, rotationAnchor, ), ;, Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,]
[), ;, Shape, result, =, calculateRotatedStringBounds, (, text, ,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +]
[;, return, result, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor, anchor]
[,, g2, ,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x]
[,, x, +, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj]
[,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0]
[+, textAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0]
[,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0]
[[, 0, ], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +]
[], ,, y, +, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, []
[,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1]
[+, textAdj, [, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,]
[,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1]
[[, 1, ], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +]
[], ,, angle, ,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, []
[,, x, +, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +]
[,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, return, result, ;, }, private, static]
[+, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, return]
[+, textAdj, [, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, []
[+, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, return]
[[, 0, ], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ]]
[], +, rotateAdj, [, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;]
[,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, return, result, ;, }, private, static]
[[, 0, ], ,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, return, result, ;]
[], ,, y, +, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, return, result, ;, }, private]
[), ;, return, result, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor]
[+, rotateAdj, [, 1, ], ), ;, return, result, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2]
[+, textAdj, [, 1, ], +, rotateAdj, [, 1, ], ), ;, return, result, ;, }, private, static, float, []
[+, rotateAdj, [, 1, ], ), ;, return, result, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2]
[[, 1, ], +, rotateAdj, [, 1, ], ), ;, return, result, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets]
[], +, rotateAdj, [, 1, ], ), ;, return, result, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D]
[), ;, return, result, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor]
[[, 1, ], ), ;, return, result, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String]
[], ), ;, return, result, ;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,]
[;, }, private, static, float, [, ], deriveTextBoundsAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor, anchor, ), {, float]
[;, FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, Font, f, =, g2, ., getFont, (, ), ;, FontMetrics]
[], ;, FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, Font, f, =, g2, ., getFont, (, ), ;]
[;, Font, f, =, g2, ., getFont, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;]
[., getFontRenderContext, (, ), ;, Font, f, =, g2, ., getFont, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics]
[;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,]
[., getFont, (, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =, TextUtilities, .]
[;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =, f, .]
[., getFontMetrics, (, f, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;]
[), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =, f]
[;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (]
[., getTextBounds, (, text, ,, g2, ,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc]
[,, g2, ,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent]
[,, fm, ), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =, metrics]
[), ;, LineMetrics, metrics, =, f, ., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent]
[;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =]
[., getLineMetrics, (, text, ,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =]
[,, frc, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =, ascent, /, 2.0f, ;]
[), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent]
[;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =]
[., getAscent, (, ), ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, )]
[;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float]
[/, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, )]
[;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float]
[;, float, leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;]
[., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float]
[;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor]
[., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor]
[;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||]
[;, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {]
[||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor]
[==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor]
[., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {]
[==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {]
[., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -]
[., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, .]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /]
[., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (]
[., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else]
[=, (, float, ), -, bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor]
[., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor]
[==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor]
[., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -]
[==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -]
[., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;]
[==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, .]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;]
[., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if]
[), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor]
[., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor]
[=, (, float, ), -, bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||]
[;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, .]
[;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, .]
[;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, .]
[., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else]
[||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, .]
[||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading]
[==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading]
[., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent]
[||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, .]
[==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (]
[||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, .]
[., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, )]
[), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else]
[==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (]
[), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else]
[., TOP_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;]
[=, -, descent, -, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor]
[+, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||]
[-, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, .]
[-, leading, +, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, .]
[+, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||]
[;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor]
[., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER]
[), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, .]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else]
[==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else]
[., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==]
[), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, .]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||]
[), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, .]
[., HALF_ASCENT_RIGHT, ), {, yAdj, =, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==]
[=, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor]
[), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds]
[||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading]
[==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading]
[., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds]
[==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds]
[., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, )]
[), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0]
[==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight]
[), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0]
[., CENTER_RIGHT, ), {, yAdj, =, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight, (, )]
[=, -, descent, -, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }]
[;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor]
[+, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==]
[-, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[-, leading, +, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[+, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==]
[;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[/, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==]
[), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, .]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else]
[==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else]
[., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, .]
[==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||]
[), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, .]
[., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[=, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor]
[), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, result, []
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent]
[==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent]
[., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, )]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading]
[., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics]
[), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, result, []
[==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, )]
[), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, result, []
[., BOTTOM_RIGHT, ), {, yAdj, =, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }]
[=, -, metrics, ., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =]
[;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }]
[-, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =]
[-, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =]
[., getDescent, (, ), -, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;, result]
[;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }]
[., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;]
[=, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, private, static, float, [, ], deriveRotationAnchorOffsets]
[[, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, private, static, float]
[], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, private, static, float, [, ]]
[;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, private, static, float, [, ], deriveRotationAnchorOffsets, (, Graphics2D]
[=, yAdj, ;, return, result, ;, }, private, static, float, [, ], deriveRotationAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,]
[[, 1, ], =, yAdj, ;, return, result, ;, }, private, static, float, [, ], deriveRotationAnchorOffsets, (, Graphics2D, g2, ,]
[], =, yAdj, ;, return, result, ;, }, private, static, float, [, ], deriveRotationAnchorOffsets, (, Graphics2D, g2, ,, String, text]
[;, return, result, ;, }, private, static, float, [, ], deriveRotationAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor, anchor]
[;, }, private, static, float, [, ], deriveRotationAnchorOffsets, (, Graphics2D, g2, ,, String, text, ,, TextAnchor, anchor, ), {, float]
[;, FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, LineMetrics, metrics, =, g2, ., getFont, (, ), ., getLineMetrics]
[], ;, FontRenderContext, frc, =, g2, ., getFontRenderContext, (, ), ;, LineMetrics, metrics, =, g2, ., getFont, (, ), .]
[;, LineMetrics, metrics, =, g2, ., getFont, (, ), ., getLineMetrics, (, text, ,, frc, ), ;, FontMetrics, fm, =]
[., getFontRenderContext, (, ), ;, LineMetrics, metrics, =, g2, ., getFont, (, ), ., getLineMetrics, (, text, ,, frc, )]
[;, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2]
[., getLineMetrics, (, text, ,, frc, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =]
[., getFont, (, ), ., getLineMetrics, (, text, ,, frc, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, )]
[,, frc, ), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (]
[), ;, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,]
[;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, float, ascent, =, metrics, .]
[., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, float]
[;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =]
[., getTextBounds, (, text, ,, g2, ,, fm, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, float]
[,, g2, ,, fm, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =, ascent, /]
[,, fm, ), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =, ascent, /, 2.0f, ;]
[), ;, float, ascent, =, metrics, ., getAscent, (, ), ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent]
[;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =]
[., getAscent, (, ), ;, float, halfAscent, =, ascent, /, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, )]
[;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float]
[/, 2.0f, ;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, )]
[;, float, descent, =, metrics, ., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float]
[;, float, leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;]
[., getDescent, (, ), ;, float, leading, =, metrics, ., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float]
[;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor]
[., getLeading, (, ), ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor]
[;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||]
[;, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT]
[), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, .]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else]
[||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {]
[||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor]
[==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor]
[., TOP_LEFT, ||, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT]
[||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {]
[==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {]
[., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT]
[||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else]
[==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =]
[||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else]
[., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, .]
[==, TextAnchor, ., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, .]
[., HALF_ASCENT_LEFT, ), {, xAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==]
[=, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor]
[), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {]
[||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor]
[==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor]
[., TOP_CENTER, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {]
[==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {]
[., CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds]
[., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f]
[., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, )]
[), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }]
[), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor]
[., HALF_ASCENT_CENTER, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if]
[=, (, float, ), bounds, ., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor]
[., getWidth, (, ), /, 2.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor]
[), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, .]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor]
[==, TextAnchor, ., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor]
[., TOP_RIGHT, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[==, TextAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {]
[., CENTER_RIGHT, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds]
[==, TextAnchor, ., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds]
[., BOTTOM_RIGHT, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }]
[==, TextAnchor, ., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds, ., getWidth]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }]
[., BASELINE_RIGHT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, )]
[), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, .]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (]
[), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, .]
[., HALF_ASCENT_RIGHT, ), {, xAdj, =, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==]
[=, (, float, ), bounds, ., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor]
[;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, .]
[;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, .]
[., getWidth, (, ), ;, }, if, (, anchor, ==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||]
[), {, yAdj, =, descent, +, leading, -, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if]
[||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), bounds, ., getHeight]
[||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, descent, +, leading, -]
[==, TextAnchor, ., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, descent, +, leading, -]
[., TOP_LEFT, ||, anchor, ==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, descent, +]
[||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), bounds, ., getHeight]
[==, TextAnchor, ., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float]
[||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), bounds, ., getHeight]
[., TOP_CENTER, ||, anchor, ==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), bounds]
[), {, yAdj, =, descent, +, leading, -, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if]
[==, TextAnchor, ., TOP_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), bounds, ., getHeight, (, )]
[), {, yAdj, =, descent, +, leading, -, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if]
[., TOP_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), bounds, ., getHeight, (, ), ;, }]
[=, descent, +, leading, -, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==]
[;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor]
[-, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||]
[+, leading, -, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, .]
[-, (, float, ), bounds, ., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||]
[;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor]
[., getHeight, (, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER]
[), {, yAdj, =, descent, +, leading, -, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, )]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), (, bounds, .]
[||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -]
[==, TextAnchor, ., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -]
[., CENTER_LEFT, ||, anchor, ==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), (, bounds, .]
[==, TextAnchor, ., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float]
[||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), (, bounds, .]
[., CENTER, ||, anchor, ==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), (]
[), {, yAdj, =, descent, +, leading, -, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, )]
[==, TextAnchor, ., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), (, bounds, ., getHeight, (]
[), {, yAdj, =, descent, +, leading, -, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, )]
[., CENTER_RIGHT, ), {, yAdj, =, descent, +, leading, -, (, float, ), (, bounds, ., getHeight, (, ), /]
[=, descent, +, leading, -, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else]
[;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor]
[-, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==]
[+, leading, -, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (]
[-, (, float, ), (, bounds, ., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==]
[;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==]
[/, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||]
[., getHeight, (, ), /, 2.0, ), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==]
[), ;, }, else, if, (, anchor, ==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==]
[), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }]
[==, TextAnchor, ., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }]
[., HALF_ASCENT_LEFT, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor]
[==, TextAnchor, ., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if]
[||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor]
[., HALF_ASCENT_CENTER, ||, anchor, ==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor]
[), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor]
[==, TextAnchor, ., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT]
[), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor]
[., HALF_ASCENT_RIGHT, ), {, yAdj, =, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor]
[=, -, halfAscent, ;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||]
[;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor]
[), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, .]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else]
[==, TextAnchor, ., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else]
[., BASELINE_LEFT, ||, anchor, ==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[==, TextAnchor, ., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, .]
[., BASELINE_CENTER, ||, anchor, ==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, .]
[==, TextAnchor, ., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||]
[), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, .]
[., BASELINE_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==]
[=, 0.0f, ;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor]
[;, }, else, if, (, anchor, ==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor]
[), {, yAdj, =, metrics, ., getDescent, (, ), +, metrics, ., getLeading, (, ), ;, }, result, [, 0]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (, ), +, metrics, ., getLeading, (]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (]
[==, TextAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (]
[., BOTTOM_LEFT, ||, anchor, ==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, metrics, .]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (, ), +, metrics, ., getLeading, (]
[==, TextAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (, ), +]
[||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (, ), +, metrics, ., getLeading, (]
[., BOTTOM_CENTER, ||, anchor, ==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (, ), +, metrics, .]
[), {, yAdj, =, metrics, ., getDescent, (, ), +, metrics, ., getLeading, (, ), ;, }, result, [, 0]
[==, TextAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (, ), +, metrics, ., getLeading, (, ), ;]
[), {, yAdj, =, metrics, ., getDescent, (, ), +, metrics, ., getLeading, (, ), ;, }, result, [, 0]
[., BOTTOM_RIGHT, ), {, yAdj, =, metrics, ., getDescent, (, ), +, metrics, ., getLeading, (, ), ;, }, result]
[=, metrics, ., getDescent, (, ), +, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj]
[;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }]
[+, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =]
[., getDescent, (, ), +, metrics, ., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;, result]
[;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }]
[., getLeading, (, ), ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;]
[=, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, public, static, Shape, calculateRotatedStringBounds, (, String]
[[, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, public, static, Shape]
[], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, public, static, Shape, calculateRotatedStringBounds, (]
[;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,]
[=, yAdj, ;, return, result, ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D, g2, ,, float, textX]
[[, 1, ], =, yAdj, ;, return, result, ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D, g2]
[], =, yAdj, ;, return, result, ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D, g2, ,, float]
[;, return, result, ;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D, g2, ,, float, textX, ,, float]
[;, }, public, static, Shape, calculateRotatedStringBounds, (, String, text, ,, Graphics2D, g2, ,, float, textX, ,, float, textY, ,, double]
[), {, return, null, ;, }, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, .]
[||, (, text, ., equals, (, "", ), ), ), {, return, null, ;, }, FontMetrics, fm, =, g2, .]
[), ||, (, text, ., equals, (, "", ), ), ), {, return, null, ;, }, FontMetrics, fm, =, g2]
[==, null, ), ||, (, text, ., equals, (, "", ), ), ), {, return, null, ;, }, FontMetrics, fm]
[), ||, (, text, ., equals, (, "", ), ), ), {, return, null, ;, }, FontMetrics, fm, =, g2]
[), {, return, null, ;, }, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, .]
[), ), {, return, null, ;, }, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities]
[., equals, (, "", ), ), ), {, return, null, ;, }, FontMetrics, fm, =, g2, ., getFontMetrics, (, )]
[), ), ), {, return, null, ;, }, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =]
[;, }, FontMetrics, fm, =, g2, ., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,]
[;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, AffineTransform, translate, =, AffineTransform, .]
[., getFontMetrics, (, ), ;, Rectangle2D, bounds, =, TextUtilities, ., getTextBounds, (, text, ,, g2, ,, fm, ), ;, AffineTransform]
[;, AffineTransform, translate, =, AffineTransform, ., getTranslateInstance, (, textX, ,, textY, ), ;, Shape, translatedBounds, =, translate, ., createTransformedShape, (]
[., getTextBounds, (, text, ,, g2, ,, fm, ), ;, AffineTransform, translate, =, AffineTransform, ., getTranslateInstance, (, textX, ,, textY]
[,, g2, ,, fm, ), ;, AffineTransform, translate, =, AffineTransform, ., getTranslateInstance, (, textX, ,, textY, ), ;, Shape, translatedBounds]
[,, fm, ), ;, AffineTransform, translate, =, AffineTransform, ., getTranslateInstance, (, textX, ,, textY, ), ;, Shape, translatedBounds, =, translate]
[), ;, AffineTransform, translate, =, AffineTransform, ., getTranslateInstance, (, textX, ,, textY, ), ;, Shape, translatedBounds, =, translate, ., createTransformedShape]
[;, Shape, translatedBounds, =, translate, ., createTransformedShape, (, bounds, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,]
[., getTranslateInstance, (, textX, ,, textY, ), ;, Shape, translatedBounds, =, translate, ., createTransformedShape, (, bounds, ), ;, AffineTransform, rotate]
[,, textY, ), ;, Shape, translatedBounds, =, translate, ., createTransformedShape, (, bounds, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance]
[), ;, Shape, translatedBounds, =, translate, ., createTransformedShape, (, bounds, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle]
[;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;, Shape, result, =, rotate, .]
[., createTransformedShape, (, bounds, ), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;]
[), ;, AffineTransform, rotate, =, AffineTransform, ., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;, Shape, result, =, rotate]
[;, Shape, result, =, rotate, ., createTransformedShape, (, translatedBounds, ), ;, return, result, ;, }, public, static, boolean, getUseFontMetricsGetStringBounds, (]
[., getRotateInstance, (, angle, ,, rotateX, ,, rotateY, ), ;, Shape, result, =, rotate, ., createTransformedShape, (, translatedBounds, ), ;]
[,, rotateX, ,, rotateY, ), ;, Shape, result, =, rotate, ., createTransformedShape, (, translatedBounds, ), ;, return, result, ;, }]
[,, rotateY, ), ;, Shape, result, =, rotate, ., createTransformedShape, (, translatedBounds, ), ;, return, result, ;, }, public, static]
[), ;, Shape, result, =, rotate, ., createTransformedShape, (, translatedBounds, ), ;, return, result, ;, }, public, static, boolean, getUseFontMetricsGetStringBounds]
[;, return, result, ;, }, public, static, boolean, getUseFontMetricsGetStringBounds, (, ), {, return, useFontMetricsGetStringBounds, ;, }, public, static, void, setUseFontMetricsGetStringBounds]
[., createTransformedShape, (, translatedBounds, ), ;, return, result, ;, }, public, static, boolean, getUseFontMetricsGetStringBounds, (, ), {, return, useFontMetricsGetStringBounds, ;]
[), ;, return, result, ;, }, public, static, boolean, getUseFontMetricsGetStringBounds, (, ), {, return, useFontMetricsGetStringBounds, ;, }, public, static, void]
[;, }, public, static, boolean, getUseFontMetricsGetStringBounds, (, ), {, return, useFontMetricsGetStringBounds, ;, }, public, static, void, setUseFontMetricsGetStringBounds, (, final, boolean]
[;, }, public, static, void, setUseFontMetricsGetStringBounds, (, final, boolean, use, ), {, useFontMetricsGetStringBounds, =, use, ;, }, public, static, boolean]
[=, use, ;, }, public, static, boolean, isUseDrawRotatedStringWorkaround, (, ), {, return, useDrawRotatedStringWorkaround, ;, }, }]
[;, }, public, static, boolean, isUseDrawRotatedStringWorkaround, (, ), {, return, useDrawRotatedStringWorkaround, ;, }, }]
[;, }, }]
