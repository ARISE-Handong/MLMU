[;, import, java, ., util, ., Set, ;, public, class, EnumType, extends, PrototypeObjectType, {, private, static, final, long, serialVersionUID, =]
[=, 1L, ;, private, final, Node, source, ;, private, EnumElementType, elementsType, ;, private, final, Set, <, String, >, elements, =]
[(, ), ;, EnumType, (, JSTypeRegistry, registry, ,, String, name, ,, Node, source, ,, JSType, elementsType, ), {, super, (]
[;, EnumType, (, JSTypeRegistry, registry, ,, String, name, ,, Node, source, ,, JSType, elementsType, ), {, super, (, registry, ,]
[;, EnumType, (, JSTypeRegistry, registry, ,, String, name, ,, Node, source, ,, JSType, elementsType, ), {, super, (, registry, ,]
[;, EnumType, (, JSTypeRegistry, registry, ,, String, name, ,, Node, source, ,, JSType, elementsType, ), {, super, (, registry, ,]
[(, JSTypeRegistry, registry, ,, String, name, ,, Node, source, ,, JSType, elementsType, ), {, super, (, registry, ,, "enum{", +]
[registry, ,, String, name, ,, Node, source, ,, JSType, elementsType, ), {, super, (, registry, ,, "enum{", +, name, +]
[String, name, ,, Node, source, ,, JSType, elementsType, ), {, super, (, registry, ,, "enum{", +, name, +, "}", ,]
[Node, source, ,, JSType, elementsType, ), {, super, (, registry, ,, "enum{", +, name, +, "}", ,, null, ), ;]
[Node, source, ,, JSType, elementsType, ), {, super, (, registry, ,, "enum{", +, name, +, "}", ,, null, ), ;]
[elementsType, ), {, super, (, registry, ,, "enum{", +, name, +, "}", ,, null, ), ;, this, ., source, =]
[{, super, (, registry, ,, "enum{", +, name, +, "}", ,, null, ), ;, this, ., source, =, source, ;]
[{, super, (, registry, ,, "enum{", +, name, +, "}", ,, null, ), ;, this, ., source, =, source, ;]
[,, "enum{", +, name, +, "}", ,, null, ), ;, this, ., source, =, source, ;, this, ., elementsType, =]
[name, +, "}", ,, null, ), ;, this, ., source, =, source, ;, this, ., elementsType, =, new, EnumElementType, (]
["}", ,, null, ), ;, this, ., source, =, source, ;, this, ., elementsType, =, new, EnumElementType, (, registry, ,]
[null, ), ;, this, ., source, =, source, ;, this, ., elementsType, =, new, EnumElementType, (, registry, ,, elementsType, ,]
[elementsType, =, new, EnumElementType, (, registry, ,, elementsType, ,, name, ), ;, }, public, Node, getSource, (, ), {, return]
[}, public, Node, getSource, (, ), {, return, source, ;, }, @, Override, public, EnumType, toMaybeEnumType, (, ), {, return]
[Override, public, EnumType, toMaybeEnumType, (, ), {, return, this, ;, }, @, Override, public, ObjectType, getImplicitPrototype, (, ), {, return]
[Override, public, EnumType, toMaybeEnumType, (, ), {, return, this, ;, }, @, Override, public, ObjectType, getImplicitPrototype, (, ), {, return]
[(, ), {, return, this, ;, }, @, Override, public, ObjectType, getImplicitPrototype, (, ), {, return, registry, ., getNativeObjectType, (]
[(, ), {, return, this, ;, }, @, Override, public, ObjectType, getImplicitPrototype, (, ), {, return, registry, ., getNativeObjectType, (]
[registry, ., getNativeObjectType, (, JSTypeNative, ., OBJECT_TYPE, ), ;, }, public, Set, <, String, >, getElements, (, ), {, return]
[registry, ., getNativeObjectType, (, JSTypeNative, ., OBJECT_TYPE, ), ;, }, public, Set, <, String, >, getElements, (, ), {, return]
[JSTypeNative, ., OBJECT_TYPE, ), ;, }, public, Set, <, String, >, getElements, (, ), {, return, Collections, ., unmodifiableSet, (]
[return, Collections, ., unmodifiableSet, (, elements, ), ;, }, public, boolean, defineElement, (, String, name, ,, Node, definingNode, ), {]
[return, Collections, ., unmodifiableSet, (, elements, ), ;, }, public, boolean, defineElement, (, String, name, ,, Node, definingNode, ), {]
[(, elements, ), ;, }, public, boolean, defineElement, (, String, name, ,, Node, definingNode, ), {, elements, ., add, (]
[}, public, boolean, defineElement, (, String, name, ,, Node, definingNode, ), {, elements, ., add, (, name, ), ;, return]
[boolean, defineElement, (, String, name, ,, Node, definingNode, ), {, elements, ., add, (, name, ), ;, return, defineDeclaredProperty, (]
[(, String, name, ,, Node, definingNode, ), {, elements, ., add, (, name, ), ;, return, defineDeclaredProperty, (, name, ,]
[name, ,, Node, definingNode, ), {, elements, ., add, (, name, ), ;, return, defineDeclaredProperty, (, name, ,, elementsType, ,]
[), ;, return, defineDeclaredProperty, (, name, ,, elementsType, ,, definingNode, ), ;, }, public, EnumElementType, getElementsType, (, ), {, return]
[(, ), {, return, elementsType, ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =]
[(, ), {, return, elementsType, ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =]
[elementsType, ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =, super, ., testForEquality, (]
[public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =, super, ., testForEquality, (, that, ), ;, if, (]
[public, TernaryValue, testForEquality, (, JSType, that, ), {, TernaryValue, result, =, super, ., testForEquality, (, that, ), ;, if, (]
[testForEquality, (, JSType, that, ), {, TernaryValue, result, =, super, ., testForEquality, (, that, ), ;, if, (, result, !=]
[), {, TernaryValue, result, =, super, ., testForEquality, (, that, ), ;, if, (, result, !=, null, ), {, return]
[=, super, ., testForEquality, (, that, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, return]
[=, super, ., testForEquality, (, that, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, return]
[=, super, ., testForEquality, (, that, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, return]
[(, that, ), ;, if, (, result, !=, null, ), {, return, result, ;, }, return, this, ., isEquivalentTo, (]
[;, if, (, result, !=, null, ), {, return, result, ;, }, return, this, ., isEquivalentTo, (, that, ), ?]
[(, result, !=, null, ), {, return, result, ;, }, return, this, ., isEquivalentTo, (, that, ), ?, TRUE, :]
[(, that, ), ?, TRUE, :, FALSE, ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, return]
[(, that, ), ?, TRUE, :, FALSE, ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, return]
[(, that, ), ?, TRUE, :, FALSE, ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, return]
[(, that, ), ?, TRUE, :, FALSE, ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, return]
[TRUE, :, FALSE, ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, return, that, ., isEquivalentTo, (]
[FALSE, ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, return, that, ., isEquivalentTo, (, getNativeType, (]
[FALSE, ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, return, that, ., isEquivalentTo, (, getNativeType, (]
[boolean, isSubtype, (, JSType, that, ), {, return, that, ., isEquivalentTo, (, getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ||]
[boolean, isSubtype, (, JSType, that, ), {, return, that, ., isEquivalentTo, (, getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ||]
[that, ), {, return, that, ., isEquivalentTo, (, getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ||, that, ., isEquivalentTo, (]
[{, return, that, ., isEquivalentTo, (, getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ||, that, ., isEquivalentTo, (, getNativeType, (]
[{, return, that, ., isEquivalentTo, (, getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ||, that, ., isEquivalentTo, (, getNativeType, (]
[getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ||, that, ., isEquivalentTo, (, getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ), ||]
[getNativeType, (, JSTypeNative, ., OBJECT_TYPE, ), ), ||, that, ., isEquivalentTo, (, getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ), ||]
[OBJECT_TYPE, ), ), ||, that, ., isEquivalentTo, (, getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ), ||, JSType, ., isSubtypeHelper, (]
[), ||, that, ., isEquivalentTo, (, getNativeType, (, JSTypeNative, ., OBJECT_PROTOTYPE, ), ), ||, JSType, ., isSubtypeHelper, (, this, ,]
[JSType, ., isSubtypeHelper, (, this, ,, that, ), ;, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return]
[JSType, ., isSubtypeHelper, (, this, ,, that, ), ;, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return]
[isSubtypeHelper, (, this, ,, that, ), ;, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return, forAnnotations, ?]
[this, ,, that, ), ;, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return, forAnnotations, ?, "Object", :]
[{, return, forAnnotations, ?, "Object", :, getReferenceName, (, ), ;, }, @, Override, public, String, getDisplayName, (, ), {, return]
[{, return, forAnnotations, ?, "Object", :, getReferenceName, (, ), ;, }, @, Override, public, String, getDisplayName, (, ), {, return]
[), ;, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, return]
[), ;, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, return]
[Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, return, visitor, ., caseObjectType, (]
[}, @, Override, <, T, >, T, visit, (, RelationshipVisitor, <, T, >, visitor, ,, JSType, that, ), {, return]
[}, @, Override, <, T, >, T, visit, (, RelationshipVisitor, <, T, >, visitor, ,, JSType, that, ), {, return]
[T, >, T, visit, (, RelationshipVisitor, <, T, >, visitor, ,, JSType, that, ), {, return, visitor, ., caseObjectType, (]
[T, visit, (, RelationshipVisitor, <, T, >, visitor, ,, JSType, that, ), {, return, visitor, ., caseObjectType, (, this, ,]
[return, visitor, ., caseObjectType, (, this, ,, that, ), ;, }, @, Override, public, FunctionType, getConstructor, (, ), {, return]
[Override, public, FunctionType, getConstructor, (, ), {, return, null, ;, }, @, Override, public, boolean, matchesNumberContext, (, ), {, return]
[Override, public, boolean, matchesNumberContext, (, ), {, return, false, ;, }, @, Override, public, boolean, matchesStringContext, (, ), {, return]
[Override, public, boolean, matchesStringContext, (, ), {, return, true, ;, }, @, Override, public, boolean, matchesObjectContext, (, ), {, return]
[{, return, true, ;, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {]
[true, ;, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, elementsType, =]
[@, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, elementsType, =, (, EnumElementType, )]
[@, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, elementsType, =, (, EnumElementType, )]
[(, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, elementsType, =, (, EnumElementType, ), elementsType, ., resolve, (]
[t, ,, StaticScope, <, JSType, >, scope, ), {, elementsType, =, (, EnumElementType, ), elementsType, ., resolve, (, t, ,]
[JSType, >, scope, ), {, elementsType, =, (, EnumElementType, ), elementsType, ., resolve, (, t, ,, scope, ), ;, return]
[JSType, >, scope, ), {, elementsType, =, (, EnumElementType, ), elementsType, ., resolve, (, t, ,, scope, ), ;, return]
[{, elementsType, =, (, EnumElementType, ), elementsType, ., resolve, (, t, ,, scope, ), ;, return, super, ., resolveInternal, (]
[=, (, EnumElementType, ), elementsType, ., resolve, (, t, ,, scope, ), ;, return, super, ., resolveInternal, (, t, ,]
