[., time, ., field, ., BaseDurationField, ;, public, final, class, ZonedChronology, extends, AssembledChronology, {, private, static, final, long, serialVersionUID, =]
[time, ., field, ., BaseDurationField, ;, public, final, class, ZonedChronology, extends, AssembledChronology, {, private, static, final, long, serialVersionUID, =, -]
[long, serialVersionUID, =, -, 1079258847191166848L, ;, public, static, ZonedChronology, getInstance, (, Chronology, base, ,, DateTimeZone, zone, ), {, if, (]
[long, serialVersionUID, =, -, 1079258847191166848L, ;, public, static, ZonedChronology, getInstance, (, Chronology, base, ,, DateTimeZone, zone, ), {, if, (]
[=, -, 1079258847191166848L, ;, public, static, ZonedChronology, getInstance, (, Chronology, base, ,, DateTimeZone, zone, ), {, if, (, base, ==]
[public, static, ZonedChronology, getInstance, (, Chronology, base, ,, DateTimeZone, zone, ), {, if, (, base, ==, null, ), {, throw]
[getInstance, (, Chronology, base, ,, DateTimeZone, zone, ), {, if, (, base, ==, null, ), {, throw, new, IllegalArgumentException, (]
[,, DateTimeZone, zone, ), {, if, (, base, ==, null, ), {, throw, new, IllegalArgumentException, (, "Must supply a chronology", ), ;, }]
[zone, ), {, if, (, base, ==, null, ), {, throw, new, IllegalArgumentException, (, "Must supply a chronology", ), ;, }, base, =]
[zone, ), {, if, (, base, ==, null, ), {, throw, new, IllegalArgumentException, (, "Must supply a chronology", ), ;, }, base, =]
[), {, throw, new, IllegalArgumentException, (, "Must supply a chronology", ), ;, }, base, =, base, ., withUTC, (, ), ;, if, (]
[), {, throw, new, IllegalArgumentException, (, "Must supply a chronology", ), ;, }, base, =, base, ., withUTC, (, ), ;, if, (]
[throw, new, IllegalArgumentException, (, "Must supply a chronology", ), ;, }, base, =, base, ., withUTC, (, ), ;, if, (, base, ==]
["Must supply a chronology", ), ;, }, base, =, base, ., withUTC, (, ), ;, if, (, base, ==, null, ), {, throw]
[}, base, =, base, ., withUTC, (, ), ;, if, (, base, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, ), ;, if, (, base, ==, null, ), {, throw, new, IllegalArgumentException, (, "UTC chronology must not be null", ), ;, }, if, (]
[(, ), ;, if, (, base, ==, null, ), {, throw, new, IllegalArgumentException, (, "UTC chronology must not be null", ), ;, }, if, (]
[;, if, (, base, ==, null, ), {, throw, new, IllegalArgumentException, (, "UTC chronology must not be null", ), ;, }, if, (, zone, ==]
[==, null, ), {, throw, new, IllegalArgumentException, (, "UTC chronology must not be null", ), ;, }, if, (, zone, ==, null, ), {, throw]
[{, throw, new, IllegalArgumentException, (, "UTC chronology must not be null", ), ;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (]
["UTC chronology must not be null", ), ;, }, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "DateTimeZone must not be null", ), ;, }, return]
[}, if, (, zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "DateTimeZone must not be null", ), ;, }, return, new, ZonedChronology, (]
[(, zone, ==, null, ), {, throw, new, IllegalArgumentException, (, "DateTimeZone must not be null", ), ;, }, return, new, ZonedChronology, (, base, ,]
[}, return, new, ZonedChronology, (, base, ,, zone, ), ;, }, static, boolean, useTimeArithmetic, (, DurationField, field, ), {, return]
[}, return, new, ZonedChronology, (, base, ,, zone, ), ;, }, static, boolean, useTimeArithmetic, (, DurationField, field, ), {, return]
[}, return, new, ZonedChronology, (, base, ,, zone, ), ;, }, static, boolean, useTimeArithmetic, (, DurationField, field, ), {, return]
[new, ZonedChronology, (, base, ,, zone, ), ;, }, static, boolean, useTimeArithmetic, (, DurationField, field, ), {, return, field, !=]
[(, base, ,, zone, ), ;, }, static, boolean, useTimeArithmetic, (, DurationField, field, ), {, return, field, !=, null, &&]
[(, base, ,, zone, ), ;, }, static, boolean, useTimeArithmetic, (, DurationField, field, ), {, return, field, !=, null, &&]
[(, base, ,, zone, ), ;, }, static, boolean, useTimeArithmetic, (, DurationField, field, ), {, return, field, !=, null, &&]
[}, static, boolean, useTimeArithmetic, (, DurationField, field, ), {, return, field, !=, null, &&, field, ., getUnitMillis, (, ), <]
[}, static, boolean, useTimeArithmetic, (, DurationField, field, ), {, return, field, !=, null, &&, field, ., getUnitMillis, (, ), <]
[}, static, boolean, useTimeArithmetic, (, DurationField, field, ), {, return, field, !=, null, &&, field, ., getUnitMillis, (, ), <]
[(, DurationField, field, ), {, return, field, !=, null, &&, field, ., getUnitMillis, (, ), <, DateTimeConstants, ., MILLIS_PER_HOUR, *]
[<, DateTimeConstants, ., MILLIS_PER_HOUR, *, 12, ;, }, private, ZonedChronology, (, Chronology, base, ,, DateTimeZone, zone, ), {, super, (]
[., MILLIS_PER_HOUR, *, 12, ;, }, private, ZonedChronology, (, Chronology, base, ,, DateTimeZone, zone, ), {, super, (, base, ,]
[,, DateTimeZone, zone, ), {, super, (, base, ,, zone, ), ;, }, public, DateTimeZone, getZone, (, ), {, return]
[), {, super, (, base, ,, zone, ), ;, }, public, DateTimeZone, getZone, (, ), {, return, (, DateTimeZone, )]
[getZone, (, ), {, return, (, DateTimeZone, ), getParam, (, ), ;, }, public, Chronology, withUTC, (, ), {, return]
[withUTC, (, ), {, return, getBase, (, ), ;, }, public, Chronology, withZone, (, DateTimeZone, zone, ), {, if, (]
[withUTC, (, ), {, return, getBase, (, ), ;, }, public, Chronology, withZone, (, DateTimeZone, zone, ), {, if, (]
[), {, return, getBase, (, ), ;, }, public, Chronology, withZone, (, DateTimeZone, zone, ), {, if, (, zone, ==]
[getBase, (, ), ;, }, public, Chronology, withZone, (, DateTimeZone, zone, ), {, if, (, zone, ==, null, ), {]
[), ;, }, public, Chronology, withZone, (, DateTimeZone, zone, ), {, if, (, zone, ==, null, ), {, zone, =]
[), ;, }, public, Chronology, withZone, (, DateTimeZone, zone, ), {, if, (, zone, ==, null, ), {, zone, =]
[), {, if, (, zone, ==, null, ), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, if, (]
[), {, if, (, zone, ==, null, ), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, if, (]
[if, (, zone, ==, null, ), {, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, if, (, zone, ==]
[{, zone, =, DateTimeZone, ., getDefault, (, ), ;, }, if, (, zone, ==, getParam, (, ), ), {, return]
[getDefault, (, ), ;, }, if, (, zone, ==, getParam, (, ), ), {, return, this, ;, }, if, (]
[getDefault, (, ), ;, }, if, (, zone, ==, getParam, (, ), ), {, return, this, ;, }, if, (]
[), ;, }, if, (, zone, ==, getParam, (, ), ), {, return, this, ;, }, if, (, zone, ==]
[), ;, }, if, (, zone, ==, getParam, (, ), ), {, return, this, ;, }, if, (, zone, ==]
[==, getParam, (, ), ), {, return, this, ;, }, if, (, zone, ==, DateTimeZone, ., UTC, ), {, return]
[return, this, ;, }, if, (, zone, ==, DateTimeZone, ., UTC, ), {, return, getBase, (, ), ;, }, return]
[}, if, (, zone, ==, DateTimeZone, ., UTC, ), {, return, getBase, (, ), ;, }, return, new, ZonedChronology, (]
[==, DateTimeZone, ., UTC, ), {, return, getBase, (, ), ;, }, return, new, ZonedChronology, (, getBase, (, ), ,]
[public, long, getDateTimeMillis, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, int, millisOfDay, ), throws, IllegalArgumentException, {, return]
[getDateTimeMillis, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, int, millisOfDay, ), throws, IllegalArgumentException, {, return, localToUTC, (]
[getDateTimeMillis, (, int, year, ,, int, monthOfYear, ,, int, dayOfMonth, ,, int, millisOfDay, ), throws, IllegalArgumentException, {, return, localToUTC, (]
[monthOfYear, ,, int, dayOfMonth, ,, int, millisOfDay, ), throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (]
[int, dayOfMonth, ,, int, millisOfDay, ), throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (, year, ,]
[,, int, millisOfDay, ), throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (, year, ,, monthOfYear, ,]
[millisOfDay, ), throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (, year, ,, monthOfYear, ,, dayOfMonth, ,]
[,, int, dayOfMonth, ,, int, hourOfDay, ,, int, minuteOfHour, ,, int, secondOfMinute, ,, int, millisOfSecond, ), throws, IllegalArgumentException, {, return]
[dayOfMonth, ,, int, hourOfDay, ,, int, minuteOfHour, ,, int, secondOfMinute, ,, int, millisOfSecond, ), throws, IllegalArgumentException, {, return, localToUTC, (]
[dayOfMonth, ,, int, hourOfDay, ,, int, minuteOfHour, ,, int, secondOfMinute, ,, int, millisOfSecond, ), throws, IllegalArgumentException, {, return, localToUTC, (]
[minuteOfHour, ,, int, secondOfMinute, ,, int, millisOfSecond, ), throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (]
[int, secondOfMinute, ,, int, millisOfSecond, ), throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (, year, ,]
[,, int, millisOfSecond, ), throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (, year, ,, monthOfYear, ,]
[millisOfSecond, ), throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (, year, ,, monthOfYear, ,, dayOfMonth, ,]
[throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (, year, ,, monthOfYear, ,, dayOfMonth, ,, hourOfDay, ,]
[{, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (, year, ,, monthOfYear, ,, dayOfMonth, ,, hourOfDay, ,, minuteOfHour, ,]
[localToUTC, (, getBase, (, ), ., getDateTimeMillis, (, year, ,, monthOfYear, ,, dayOfMonth, ,, hourOfDay, ,, minuteOfHour, ,, secondOfMinute, ,]
[(, long, instant, ,, int, hourOfDay, ,, int, minuteOfHour, ,, int, secondOfMinute, ,, int, millisOfSecond, ), throws, IllegalArgumentException, {, return]
[instant, ,, int, hourOfDay, ,, int, minuteOfHour, ,, int, secondOfMinute, ,, int, millisOfSecond, ), throws, IllegalArgumentException, {, return, localToUTC, (]
[instant, ,, int, hourOfDay, ,, int, minuteOfHour, ,, int, secondOfMinute, ,, int, millisOfSecond, ), throws, IllegalArgumentException, {, return, localToUTC, (]
[minuteOfHour, ,, int, secondOfMinute, ,, int, millisOfSecond, ), throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (]
[minuteOfHour, ,, int, secondOfMinute, ,, int, millisOfSecond, ), throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (]
[int, secondOfMinute, ,, int, millisOfSecond, ), throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (, instant, +]
[int, secondOfMinute, ,, int, millisOfSecond, ), throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (, instant, +]
[throws, IllegalArgumentException, {, return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (, instant, +, getZone, (, ), ., getOffset, (]
[return, localToUTC, (, getBase, (, ), ., getDateTimeMillis, (, instant, +, getZone, (, ), ., getOffset, (, instant, ), ,]
[(, getBase, (, ), ., getDateTimeMillis, (, instant, +, getZone, (, ), ., getOffset, (, instant, ), ,, hourOfDay, ,]
[(, ), ., getDateTimeMillis, (, instant, +, getZone, (, ), ., getOffset, (, instant, ), ,, hourOfDay, ,, minuteOfHour, ,]
[., getDateTimeMillis, (, instant, +, getZone, (, ), ., getOffset, (, instant, ), ,, hourOfDay, ,, minuteOfHour, ,, secondOfMinute, ,]
[minuteOfHour, ,, secondOfMinute, ,, millisOfSecond, ), ), ;, }, private, long, localToUTC, (, long, localInstant, ), {, DateTimeZone, zone, =]
[;, }, private, long, localToUTC, (, long, localInstant, ), {, DateTimeZone, zone, =, getZone, (, ), ;, int, offset, =]
[;, }, private, long, localToUTC, (, long, localInstant, ), {, DateTimeZone, zone, =, getZone, (, ), ;, int, offset, =]
[localToUTC, (, long, localInstant, ), {, DateTimeZone, zone, =, getZone, (, ), ;, int, offset, =, zone, ., getOffsetFromLocal, (]
[localInstant, ), {, DateTimeZone, zone, =, getZone, (, ), ;, int, offset, =, zone, ., getOffsetFromLocal, (, localInstant, ), ;]
[{, DateTimeZone, zone, =, getZone, (, ), ;, int, offset, =, zone, ., getOffsetFromLocal, (, localInstant, ), ;, localInstant, -=]
[getZone, (, ), ;, int, offset, =, zone, ., getOffsetFromLocal, (, localInstant, ), ;, localInstant, -=, offset, ;, if, (]
[getZone, (, ), ;, int, offset, =, zone, ., getOffsetFromLocal, (, localInstant, ), ;, localInstant, -=, offset, ;, if, (]
[), ;, int, offset, =, zone, ., getOffsetFromLocal, (, localInstant, ), ;, localInstant, -=, offset, ;, if, (, offset, !=]
[), ;, int, offset, =, zone, ., getOffsetFromLocal, (, localInstant, ), ;, localInstant, -=, offset, ;, if, (, offset, !=]
[=, zone, ., getOffsetFromLocal, (, localInstant, ), ;, localInstant, -=, offset, ;, if, (, offset, !=, zone, ., getOffset, (]
[localInstant, ), ;, localInstant, -=, offset, ;, if, (, offset, !=, zone, ., getOffset, (, localInstant, ), ), {, throw]
[localInstant, -=, offset, ;, if, (, offset, !=, zone, ., getOffset, (, localInstant, ), ), {, throw, new, IllegalInstantException, (]
[offset, ;, if, (, offset, !=, zone, ., getOffset, (, localInstant, ), ), {, throw, new, IllegalInstantException, (, localInstant, ,]
[offset, ;, if, (, offset, !=, zone, ., getOffset, (, localInstant, ), ), {, throw, new, IllegalInstantException, (, localInstant, ,]
[(, localInstant, ), ), {, throw, new, IllegalInstantException, (, localInstant, ,, zone, ., getID, (, ), ), ;, }, return]
[return, localInstant, ;, }, protected, void, assemble, (, Fields, fields, ), {, HashMap, <, Object, ,, Object, >, converted, =]
[), {, HashMap, <, Object, ,, Object, >, converted, =, new, HashMap, <, Object, ,, Object, >, (, ), ;]
[), {, HashMap, <, Object, ,, Object, >, converted, =, new, HashMap, <, Object, ,, Object, >, (, ), ;]
[Object, ,, Object, >, converted, =, new, HashMap, <, Object, ,, Object, >, (, ), ;, fields, ., eras, =]
[Object, >, converted, =, new, HashMap, <, Object, ,, Object, >, (, ), ;, fields, ., eras, =, convertField, (]
[Object, >, converted, =, new, HashMap, <, Object, ,, Object, >, (, ), ;, fields, ., eras, =, convertField, (]
[new, HashMap, <, Object, ,, Object, >, (, ), ;, fields, ., eras, =, convertField, (, fields, ., eras, ,]
[Object, ,, Object, >, (, ), ;, fields, ., eras, =, convertField, (, fields, ., eras, ,, converted, ), ;]
[Object, ,, Object, >, (, ), ;, fields, ., eras, =, convertField, (, fields, ., eras, ,, converted, ), ;]
[(, ), ;, fields, ., eras, =, convertField, (, fields, ., eras, ,, converted, ), ;, fields, ., centuries, =]
[;, fields, ., eras, =, convertField, (, fields, ., eras, ,, converted, ), ;, fields, ., centuries, =, convertField, (]
[;, fields, ., eras, =, convertField, (, fields, ., eras, ,, converted, ), ;, fields, ., centuries, =, convertField, (]
[=, convertField, (, fields, ., eras, ,, converted, ), ;, fields, ., centuries, =, convertField, (, fields, ., centuries, ,]
[fields, ., eras, ,, converted, ), ;, fields, ., centuries, =, convertField, (, fields, ., centuries, ,, converted, ), ;]
[fields, ., eras, ,, converted, ), ;, fields, ., centuries, =, convertField, (, fields, ., centuries, ,, converted, ), ;]
[converted, ), ;, fields, ., centuries, =, convertField, (, fields, ., centuries, ,, converted, ), ;, fields, ., years, =]
[;, fields, ., centuries, =, convertField, (, fields, ., centuries, ,, converted, ), ;, fields, ., years, =, convertField, (]
[;, fields, ., centuries, =, convertField, (, fields, ., centuries, ,, converted, ), ;, fields, ., years, =, convertField, (]
[=, convertField, (, fields, ., centuries, ,, converted, ), ;, fields, ., years, =, convertField, (, fields, ., years, ,]
[fields, ., centuries, ,, converted, ), ;, fields, ., years, =, convertField, (, fields, ., years, ,, converted, ), ;]
[fields, ., centuries, ,, converted, ), ;, fields, ., years, =, convertField, (, fields, ., years, ,, converted, ), ;]
[converted, ), ;, fields, ., years, =, convertField, (, fields, ., years, ,, converted, ), ;, fields, ., months, =]
[;, fields, ., years, =, convertField, (, fields, ., years, ,, converted, ), ;, fields, ., months, =, convertField, (]
[;, fields, ., years, =, convertField, (, fields, ., years, ,, converted, ), ;, fields, ., months, =, convertField, (]
[=, convertField, (, fields, ., years, ,, converted, ), ;, fields, ., months, =, convertField, (, fields, ., months, ,]
[fields, ., years, ,, converted, ), ;, fields, ., months, =, convertField, (, fields, ., months, ,, converted, ), ;]
[fields, ., years, ,, converted, ), ;, fields, ., months, =, convertField, (, fields, ., months, ,, converted, ), ;]
[converted, ), ;, fields, ., months, =, convertField, (, fields, ., months, ,, converted, ), ;, fields, ., weekyears, =]
[;, fields, ., months, =, convertField, (, fields, ., months, ,, converted, ), ;, fields, ., weekyears, =, convertField, (]
[;, fields, ., months, =, convertField, (, fields, ., months, ,, converted, ), ;, fields, ., weekyears, =, convertField, (]
[=, convertField, (, fields, ., months, ,, converted, ), ;, fields, ., weekyears, =, convertField, (, fields, ., weekyears, ,]
[fields, ., months, ,, converted, ), ;, fields, ., weekyears, =, convertField, (, fields, ., weekyears, ,, converted, ), ;]
[fields, ., months, ,, converted, ), ;, fields, ., weekyears, =, convertField, (, fields, ., weekyears, ,, converted, ), ;]
[converted, ), ;, fields, ., weekyears, =, convertField, (, fields, ., weekyears, ,, converted, ), ;, fields, ., weeks, =]
[;, fields, ., weekyears, =, convertField, (, fields, ., weekyears, ,, converted, ), ;, fields, ., weeks, =, convertField, (]
[;, fields, ., weekyears, =, convertField, (, fields, ., weekyears, ,, converted, ), ;, fields, ., weeks, =, convertField, (]
[=, convertField, (, fields, ., weekyears, ,, converted, ), ;, fields, ., weeks, =, convertField, (, fields, ., weeks, ,]
[fields, ., weekyears, ,, converted, ), ;, fields, ., weeks, =, convertField, (, fields, ., weeks, ,, converted, ), ;]
[fields, ., weekyears, ,, converted, ), ;, fields, ., weeks, =, convertField, (, fields, ., weeks, ,, converted, ), ;]
[converted, ), ;, fields, ., weeks, =, convertField, (, fields, ., weeks, ,, converted, ), ;, fields, ., days, =]
[;, fields, ., weeks, =, convertField, (, fields, ., weeks, ,, converted, ), ;, fields, ., days, =, convertField, (]
[;, fields, ., weeks, =, convertField, (, fields, ., weeks, ,, converted, ), ;, fields, ., days, =, convertField, (]
[=, convertField, (, fields, ., weeks, ,, converted, ), ;, fields, ., days, =, convertField, (, fields, ., days, ,]
[fields, ., weeks, ,, converted, ), ;, fields, ., days, =, convertField, (, fields, ., days, ,, converted, ), ;]
[fields, ., weeks, ,, converted, ), ;, fields, ., days, =, convertField, (, fields, ., days, ,, converted, ), ;]
[converted, ), ;, fields, ., days, =, convertField, (, fields, ., days, ,, converted, ), ;, fields, ., halfdays, =]
[;, fields, ., days, =, convertField, (, fields, ., days, ,, converted, ), ;, fields, ., halfdays, =, convertField, (]
[;, fields, ., days, =, convertField, (, fields, ., days, ,, converted, ), ;, fields, ., halfdays, =, convertField, (]
[=, convertField, (, fields, ., days, ,, converted, ), ;, fields, ., halfdays, =, convertField, (, fields, ., halfdays, ,]
[fields, ., days, ,, converted, ), ;, fields, ., halfdays, =, convertField, (, fields, ., halfdays, ,, converted, ), ;]
[fields, ., days, ,, converted, ), ;, fields, ., halfdays, =, convertField, (, fields, ., halfdays, ,, converted, ), ;]
[converted, ), ;, fields, ., halfdays, =, convertField, (, fields, ., halfdays, ,, converted, ), ;, fields, ., hours, =]
[;, fields, ., halfdays, =, convertField, (, fields, ., halfdays, ,, converted, ), ;, fields, ., hours, =, convertField, (]
[;, fields, ., halfdays, =, convertField, (, fields, ., halfdays, ,, converted, ), ;, fields, ., hours, =, convertField, (]
[=, convertField, (, fields, ., halfdays, ,, converted, ), ;, fields, ., hours, =, convertField, (, fields, ., hours, ,]
[fields, ., halfdays, ,, converted, ), ;, fields, ., hours, =, convertField, (, fields, ., hours, ,, converted, ), ;]
[fields, ., halfdays, ,, converted, ), ;, fields, ., hours, =, convertField, (, fields, ., hours, ,, converted, ), ;]
[converted, ), ;, fields, ., hours, =, convertField, (, fields, ., hours, ,, converted, ), ;, fields, ., minutes, =]
[;, fields, ., hours, =, convertField, (, fields, ., hours, ,, converted, ), ;, fields, ., minutes, =, convertField, (]
[;, fields, ., hours, =, convertField, (, fields, ., hours, ,, converted, ), ;, fields, ., minutes, =, convertField, (]
[=, convertField, (, fields, ., hours, ,, converted, ), ;, fields, ., minutes, =, convertField, (, fields, ., minutes, ,]
[fields, ., hours, ,, converted, ), ;, fields, ., minutes, =, convertField, (, fields, ., minutes, ,, converted, ), ;]
[fields, ., hours, ,, converted, ), ;, fields, ., minutes, =, convertField, (, fields, ., minutes, ,, converted, ), ;]
[converted, ), ;, fields, ., minutes, =, convertField, (, fields, ., minutes, ,, converted, ), ;, fields, ., seconds, =]
[;, fields, ., minutes, =, convertField, (, fields, ., minutes, ,, converted, ), ;, fields, ., seconds, =, convertField, (]
[;, fields, ., minutes, =, convertField, (, fields, ., minutes, ,, converted, ), ;, fields, ., seconds, =, convertField, (]
[=, convertField, (, fields, ., minutes, ,, converted, ), ;, fields, ., seconds, =, convertField, (, fields, ., seconds, ,]
[fields, ., minutes, ,, converted, ), ;, fields, ., seconds, =, convertField, (, fields, ., seconds, ,, converted, ), ;]
[fields, ., minutes, ,, converted, ), ;, fields, ., seconds, =, convertField, (, fields, ., seconds, ,, converted, ), ;]
[converted, ), ;, fields, ., seconds, =, convertField, (, fields, ., seconds, ,, converted, ), ;, fields, ., millis, =]
[;, fields, ., seconds, =, convertField, (, fields, ., seconds, ,, converted, ), ;, fields, ., millis, =, convertField, (]
[;, fields, ., seconds, =, convertField, (, fields, ., seconds, ,, converted, ), ;, fields, ., millis, =, convertField, (]
[=, convertField, (, fields, ., seconds, ,, converted, ), ;, fields, ., millis, =, convertField, (, fields, ., millis, ,]
[fields, ., seconds, ,, converted, ), ;, fields, ., millis, =, convertField, (, fields, ., millis, ,, converted, ), ;]
[fields, ., seconds, ,, converted, ), ;, fields, ., millis, =, convertField, (, fields, ., millis, ,, converted, ), ;]
[converted, ), ;, fields, ., millis, =, convertField, (, fields, ., millis, ,, converted, ), ;, fields, ., year, =]
[;, fields, ., millis, =, convertField, (, fields, ., millis, ,, converted, ), ;, fields, ., year, =, convertField, (]
[;, fields, ., millis, =, convertField, (, fields, ., millis, ,, converted, ), ;, fields, ., year, =, convertField, (]
[=, convertField, (, fields, ., millis, ,, converted, ), ;, fields, ., year, =, convertField, (, fields, ., year, ,]
[fields, ., millis, ,, converted, ), ;, fields, ., year, =, convertField, (, fields, ., year, ,, converted, ), ;]
[fields, ., millis, ,, converted, ), ;, fields, ., year, =, convertField, (, fields, ., year, ,, converted, ), ;]
[converted, ), ;, fields, ., year, =, convertField, (, fields, ., year, ,, converted, ), ;, fields, ., yearOfEra, =]
[;, fields, ., year, =, convertField, (, fields, ., year, ,, converted, ), ;, fields, ., yearOfEra, =, convertField, (]
[;, fields, ., year, =, convertField, (, fields, ., year, ,, converted, ), ;, fields, ., yearOfEra, =, convertField, (]
[=, convertField, (, fields, ., year, ,, converted, ), ;, fields, ., yearOfEra, =, convertField, (, fields, ., yearOfEra, ,]
[fields, ., year, ,, converted, ), ;, fields, ., yearOfEra, =, convertField, (, fields, ., yearOfEra, ,, converted, ), ;]
[fields, ., year, ,, converted, ), ;, fields, ., yearOfEra, =, convertField, (, fields, ., yearOfEra, ,, converted, ), ;]
[converted, ), ;, fields, ., yearOfEra, =, convertField, (, fields, ., yearOfEra, ,, converted, ), ;, fields, ., yearOfCentury, =]
[;, fields, ., yearOfEra, =, convertField, (, fields, ., yearOfEra, ,, converted, ), ;, fields, ., yearOfCentury, =, convertField, (]
[;, fields, ., yearOfEra, =, convertField, (, fields, ., yearOfEra, ,, converted, ), ;, fields, ., yearOfCentury, =, convertField, (]
[=, convertField, (, fields, ., yearOfEra, ,, converted, ), ;, fields, ., yearOfCentury, =, convertField, (, fields, ., yearOfCentury, ,]
[fields, ., yearOfEra, ,, converted, ), ;, fields, ., yearOfCentury, =, convertField, (, fields, ., yearOfCentury, ,, converted, ), ;]
[fields, ., yearOfEra, ,, converted, ), ;, fields, ., yearOfCentury, =, convertField, (, fields, ., yearOfCentury, ,, converted, ), ;]
[converted, ), ;, fields, ., yearOfCentury, =, convertField, (, fields, ., yearOfCentury, ,, converted, ), ;, fields, ., centuryOfEra, =]
[;, fields, ., yearOfCentury, =, convertField, (, fields, ., yearOfCentury, ,, converted, ), ;, fields, ., centuryOfEra, =, convertField, (]
[;, fields, ., yearOfCentury, =, convertField, (, fields, ., yearOfCentury, ,, converted, ), ;, fields, ., centuryOfEra, =, convertField, (]
[=, convertField, (, fields, ., yearOfCentury, ,, converted, ), ;, fields, ., centuryOfEra, =, convertField, (, fields, ., centuryOfEra, ,]
[fields, ., yearOfCentury, ,, converted, ), ;, fields, ., centuryOfEra, =, convertField, (, fields, ., centuryOfEra, ,, converted, ), ;]
[fields, ., yearOfCentury, ,, converted, ), ;, fields, ., centuryOfEra, =, convertField, (, fields, ., centuryOfEra, ,, converted, ), ;]
[converted, ), ;, fields, ., centuryOfEra, =, convertField, (, fields, ., centuryOfEra, ,, converted, ), ;, fields, ., era, =]
[;, fields, ., centuryOfEra, =, convertField, (, fields, ., centuryOfEra, ,, converted, ), ;, fields, ., era, =, convertField, (]
[;, fields, ., centuryOfEra, =, convertField, (, fields, ., centuryOfEra, ,, converted, ), ;, fields, ., era, =, convertField, (]
[=, convertField, (, fields, ., centuryOfEra, ,, converted, ), ;, fields, ., era, =, convertField, (, fields, ., era, ,]
[fields, ., centuryOfEra, ,, converted, ), ;, fields, ., era, =, convertField, (, fields, ., era, ,, converted, ), ;]
[fields, ., centuryOfEra, ,, converted, ), ;, fields, ., era, =, convertField, (, fields, ., era, ,, converted, ), ;]
[converted, ), ;, fields, ., era, =, convertField, (, fields, ., era, ,, converted, ), ;, fields, ., dayOfWeek, =]
[;, fields, ., era, =, convertField, (, fields, ., era, ,, converted, ), ;, fields, ., dayOfWeek, =, convertField, (]
[;, fields, ., era, =, convertField, (, fields, ., era, ,, converted, ), ;, fields, ., dayOfWeek, =, convertField, (]
[=, convertField, (, fields, ., era, ,, converted, ), ;, fields, ., dayOfWeek, =, convertField, (, fields, ., dayOfWeek, ,]
[fields, ., era, ,, converted, ), ;, fields, ., dayOfWeek, =, convertField, (, fields, ., dayOfWeek, ,, converted, ), ;]
[fields, ., era, ,, converted, ), ;, fields, ., dayOfWeek, =, convertField, (, fields, ., dayOfWeek, ,, converted, ), ;]
[converted, ), ;, fields, ., dayOfWeek, =, convertField, (, fields, ., dayOfWeek, ,, converted, ), ;, fields, ., dayOfMonth, =]
[;, fields, ., dayOfWeek, =, convertField, (, fields, ., dayOfWeek, ,, converted, ), ;, fields, ., dayOfMonth, =, convertField, (]
[;, fields, ., dayOfWeek, =, convertField, (, fields, ., dayOfWeek, ,, converted, ), ;, fields, ., dayOfMonth, =, convertField, (]
[=, convertField, (, fields, ., dayOfWeek, ,, converted, ), ;, fields, ., dayOfMonth, =, convertField, (, fields, ., dayOfMonth, ,]
[fields, ., dayOfWeek, ,, converted, ), ;, fields, ., dayOfMonth, =, convertField, (, fields, ., dayOfMonth, ,, converted, ), ;]
[fields, ., dayOfWeek, ,, converted, ), ;, fields, ., dayOfMonth, =, convertField, (, fields, ., dayOfMonth, ,, converted, ), ;]
[converted, ), ;, fields, ., dayOfMonth, =, convertField, (, fields, ., dayOfMonth, ,, converted, ), ;, fields, ., dayOfYear, =]
[;, fields, ., dayOfMonth, =, convertField, (, fields, ., dayOfMonth, ,, converted, ), ;, fields, ., dayOfYear, =, convertField, (]
[;, fields, ., dayOfMonth, =, convertField, (, fields, ., dayOfMonth, ,, converted, ), ;, fields, ., dayOfYear, =, convertField, (]
[=, convertField, (, fields, ., dayOfMonth, ,, converted, ), ;, fields, ., dayOfYear, =, convertField, (, fields, ., dayOfYear, ,]
[fields, ., dayOfMonth, ,, converted, ), ;, fields, ., dayOfYear, =, convertField, (, fields, ., dayOfYear, ,, converted, ), ;]
[fields, ., dayOfMonth, ,, converted, ), ;, fields, ., dayOfYear, =, convertField, (, fields, ., dayOfYear, ,, converted, ), ;]
[converted, ), ;, fields, ., dayOfYear, =, convertField, (, fields, ., dayOfYear, ,, converted, ), ;, fields, ., monthOfYear, =]
[;, fields, ., dayOfYear, =, convertField, (, fields, ., dayOfYear, ,, converted, ), ;, fields, ., monthOfYear, =, convertField, (]
[;, fields, ., dayOfYear, =, convertField, (, fields, ., dayOfYear, ,, converted, ), ;, fields, ., monthOfYear, =, convertField, (]
[=, convertField, (, fields, ., dayOfYear, ,, converted, ), ;, fields, ., monthOfYear, =, convertField, (, fields, ., monthOfYear, ,]
[fields, ., dayOfYear, ,, converted, ), ;, fields, ., monthOfYear, =, convertField, (, fields, ., monthOfYear, ,, converted, ), ;]
[fields, ., dayOfYear, ,, converted, ), ;, fields, ., monthOfYear, =, convertField, (, fields, ., monthOfYear, ,, converted, ), ;]
[converted, ), ;, fields, ., monthOfYear, =, convertField, (, fields, ., monthOfYear, ,, converted, ), ;, fields, ., weekOfWeekyear, =]
[;, fields, ., monthOfYear, =, convertField, (, fields, ., monthOfYear, ,, converted, ), ;, fields, ., weekOfWeekyear, =, convertField, (]
[;, fields, ., monthOfYear, =, convertField, (, fields, ., monthOfYear, ,, converted, ), ;, fields, ., weekOfWeekyear, =, convertField, (]
[=, convertField, (, fields, ., monthOfYear, ,, converted, ), ;, fields, ., weekOfWeekyear, =, convertField, (, fields, ., weekOfWeekyear, ,]
[fields, ., monthOfYear, ,, converted, ), ;, fields, ., weekOfWeekyear, =, convertField, (, fields, ., weekOfWeekyear, ,, converted, ), ;]
[fields, ., monthOfYear, ,, converted, ), ;, fields, ., weekOfWeekyear, =, convertField, (, fields, ., weekOfWeekyear, ,, converted, ), ;]
[converted, ), ;, fields, ., weekOfWeekyear, =, convertField, (, fields, ., weekOfWeekyear, ,, converted, ), ;, fields, ., weekyear, =]
[;, fields, ., weekOfWeekyear, =, convertField, (, fields, ., weekOfWeekyear, ,, converted, ), ;, fields, ., weekyear, =, convertField, (]
[;, fields, ., weekOfWeekyear, =, convertField, (, fields, ., weekOfWeekyear, ,, converted, ), ;, fields, ., weekyear, =, convertField, (]
[=, convertField, (, fields, ., weekOfWeekyear, ,, converted, ), ;, fields, ., weekyear, =, convertField, (, fields, ., weekyear, ,]
[fields, ., weekOfWeekyear, ,, converted, ), ;, fields, ., weekyear, =, convertField, (, fields, ., weekyear, ,, converted, ), ;]
[fields, ., weekOfWeekyear, ,, converted, ), ;, fields, ., weekyear, =, convertField, (, fields, ., weekyear, ,, converted, ), ;]
[converted, ), ;, fields, ., weekyear, =, convertField, (, fields, ., weekyear, ,, converted, ), ;, fields, ., weekyearOfCentury, =]
[;, fields, ., weekyear, =, convertField, (, fields, ., weekyear, ,, converted, ), ;, fields, ., weekyearOfCentury, =, convertField, (]
[;, fields, ., weekyear, =, convertField, (, fields, ., weekyear, ,, converted, ), ;, fields, ., weekyearOfCentury, =, convertField, (]
[=, convertField, (, fields, ., weekyear, ,, converted, ), ;, fields, ., weekyearOfCentury, =, convertField, (, fields, ., weekyearOfCentury, ,]
[fields, ., weekyear, ,, converted, ), ;, fields, ., weekyearOfCentury, =, convertField, (, fields, ., weekyearOfCentury, ,, converted, ), ;]
[fields, ., weekyear, ,, converted, ), ;, fields, ., weekyearOfCentury, =, convertField, (, fields, ., weekyearOfCentury, ,, converted, ), ;]
[converted, ), ;, fields, ., weekyearOfCentury, =, convertField, (, fields, ., weekyearOfCentury, ,, converted, ), ;, fields, ., millisOfSecond, =]
[;, fields, ., weekyearOfCentury, =, convertField, (, fields, ., weekyearOfCentury, ,, converted, ), ;, fields, ., millisOfSecond, =, convertField, (]
[;, fields, ., weekyearOfCentury, =, convertField, (, fields, ., weekyearOfCentury, ,, converted, ), ;, fields, ., millisOfSecond, =, convertField, (]
[=, convertField, (, fields, ., weekyearOfCentury, ,, converted, ), ;, fields, ., millisOfSecond, =, convertField, (, fields, ., millisOfSecond, ,]
[fields, ., weekyearOfCentury, ,, converted, ), ;, fields, ., millisOfSecond, =, convertField, (, fields, ., millisOfSecond, ,, converted, ), ;]
[fields, ., weekyearOfCentury, ,, converted, ), ;, fields, ., millisOfSecond, =, convertField, (, fields, ., millisOfSecond, ,, converted, ), ;]
[converted, ), ;, fields, ., millisOfSecond, =, convertField, (, fields, ., millisOfSecond, ,, converted, ), ;, fields, ., millisOfDay, =]
[;, fields, ., millisOfSecond, =, convertField, (, fields, ., millisOfSecond, ,, converted, ), ;, fields, ., millisOfDay, =, convertField, (]
[;, fields, ., millisOfSecond, =, convertField, (, fields, ., millisOfSecond, ,, converted, ), ;, fields, ., millisOfDay, =, convertField, (]
[=, convertField, (, fields, ., millisOfSecond, ,, converted, ), ;, fields, ., millisOfDay, =, convertField, (, fields, ., millisOfDay, ,]
[fields, ., millisOfSecond, ,, converted, ), ;, fields, ., millisOfDay, =, convertField, (, fields, ., millisOfDay, ,, converted, ), ;]
[fields, ., millisOfSecond, ,, converted, ), ;, fields, ., millisOfDay, =, convertField, (, fields, ., millisOfDay, ,, converted, ), ;]
[converted, ), ;, fields, ., millisOfDay, =, convertField, (, fields, ., millisOfDay, ,, converted, ), ;, fields, ., secondOfMinute, =]
[;, fields, ., millisOfDay, =, convertField, (, fields, ., millisOfDay, ,, converted, ), ;, fields, ., secondOfMinute, =, convertField, (]
[;, fields, ., millisOfDay, =, convertField, (, fields, ., millisOfDay, ,, converted, ), ;, fields, ., secondOfMinute, =, convertField, (]
[=, convertField, (, fields, ., millisOfDay, ,, converted, ), ;, fields, ., secondOfMinute, =, convertField, (, fields, ., secondOfMinute, ,]
[fields, ., millisOfDay, ,, converted, ), ;, fields, ., secondOfMinute, =, convertField, (, fields, ., secondOfMinute, ,, converted, ), ;]
[fields, ., millisOfDay, ,, converted, ), ;, fields, ., secondOfMinute, =, convertField, (, fields, ., secondOfMinute, ,, converted, ), ;]
[converted, ), ;, fields, ., secondOfMinute, =, convertField, (, fields, ., secondOfMinute, ,, converted, ), ;, fields, ., secondOfDay, =]
[;, fields, ., secondOfMinute, =, convertField, (, fields, ., secondOfMinute, ,, converted, ), ;, fields, ., secondOfDay, =, convertField, (]
[;, fields, ., secondOfMinute, =, convertField, (, fields, ., secondOfMinute, ,, converted, ), ;, fields, ., secondOfDay, =, convertField, (]
[=, convertField, (, fields, ., secondOfMinute, ,, converted, ), ;, fields, ., secondOfDay, =, convertField, (, fields, ., secondOfDay, ,]
[fields, ., secondOfMinute, ,, converted, ), ;, fields, ., secondOfDay, =, convertField, (, fields, ., secondOfDay, ,, converted, ), ;]
[fields, ., secondOfMinute, ,, converted, ), ;, fields, ., secondOfDay, =, convertField, (, fields, ., secondOfDay, ,, converted, ), ;]
[converted, ), ;, fields, ., secondOfDay, =, convertField, (, fields, ., secondOfDay, ,, converted, ), ;, fields, ., minuteOfHour, =]
[;, fields, ., secondOfDay, =, convertField, (, fields, ., secondOfDay, ,, converted, ), ;, fields, ., minuteOfHour, =, convertField, (]
[;, fields, ., secondOfDay, =, convertField, (, fields, ., secondOfDay, ,, converted, ), ;, fields, ., minuteOfHour, =, convertField, (]
[=, convertField, (, fields, ., secondOfDay, ,, converted, ), ;, fields, ., minuteOfHour, =, convertField, (, fields, ., minuteOfHour, ,]
[fields, ., secondOfDay, ,, converted, ), ;, fields, ., minuteOfHour, =, convertField, (, fields, ., minuteOfHour, ,, converted, ), ;]
[fields, ., secondOfDay, ,, converted, ), ;, fields, ., minuteOfHour, =, convertField, (, fields, ., minuteOfHour, ,, converted, ), ;]
[converted, ), ;, fields, ., minuteOfHour, =, convertField, (, fields, ., minuteOfHour, ,, converted, ), ;, fields, ., minuteOfDay, =]
[;, fields, ., minuteOfHour, =, convertField, (, fields, ., minuteOfHour, ,, converted, ), ;, fields, ., minuteOfDay, =, convertField, (]
[;, fields, ., minuteOfHour, =, convertField, (, fields, ., minuteOfHour, ,, converted, ), ;, fields, ., minuteOfDay, =, convertField, (]
[=, convertField, (, fields, ., minuteOfHour, ,, converted, ), ;, fields, ., minuteOfDay, =, convertField, (, fields, ., minuteOfDay, ,]
[fields, ., minuteOfHour, ,, converted, ), ;, fields, ., minuteOfDay, =, convertField, (, fields, ., minuteOfDay, ,, converted, ), ;]
[fields, ., minuteOfHour, ,, converted, ), ;, fields, ., minuteOfDay, =, convertField, (, fields, ., minuteOfDay, ,, converted, ), ;]
[converted, ), ;, fields, ., minuteOfDay, =, convertField, (, fields, ., minuteOfDay, ,, converted, ), ;, fields, ., hourOfDay, =]
[;, fields, ., minuteOfDay, =, convertField, (, fields, ., minuteOfDay, ,, converted, ), ;, fields, ., hourOfDay, =, convertField, (]
[;, fields, ., minuteOfDay, =, convertField, (, fields, ., minuteOfDay, ,, converted, ), ;, fields, ., hourOfDay, =, convertField, (]
[=, convertField, (, fields, ., minuteOfDay, ,, converted, ), ;, fields, ., hourOfDay, =, convertField, (, fields, ., hourOfDay, ,]
[fields, ., minuteOfDay, ,, converted, ), ;, fields, ., hourOfDay, =, convertField, (, fields, ., hourOfDay, ,, converted, ), ;]
[fields, ., minuteOfDay, ,, converted, ), ;, fields, ., hourOfDay, =, convertField, (, fields, ., hourOfDay, ,, converted, ), ;]
[converted, ), ;, fields, ., hourOfDay, =, convertField, (, fields, ., hourOfDay, ,, converted, ), ;, fields, ., hourOfHalfday, =]
[;, fields, ., hourOfDay, =, convertField, (, fields, ., hourOfDay, ,, converted, ), ;, fields, ., hourOfHalfday, =, convertField, (]
[;, fields, ., hourOfDay, =, convertField, (, fields, ., hourOfDay, ,, converted, ), ;, fields, ., hourOfHalfday, =, convertField, (]
[=, convertField, (, fields, ., hourOfDay, ,, converted, ), ;, fields, ., hourOfHalfday, =, convertField, (, fields, ., hourOfHalfday, ,]
[fields, ., hourOfDay, ,, converted, ), ;, fields, ., hourOfHalfday, =, convertField, (, fields, ., hourOfHalfday, ,, converted, ), ;]
[fields, ., hourOfDay, ,, converted, ), ;, fields, ., hourOfHalfday, =, convertField, (, fields, ., hourOfHalfday, ,, converted, ), ;]
[converted, ), ;, fields, ., hourOfHalfday, =, convertField, (, fields, ., hourOfHalfday, ,, converted, ), ;, fields, ., clockhourOfDay, =]
[;, fields, ., hourOfHalfday, =, convertField, (, fields, ., hourOfHalfday, ,, converted, ), ;, fields, ., clockhourOfDay, =, convertField, (]
[;, fields, ., hourOfHalfday, =, convertField, (, fields, ., hourOfHalfday, ,, converted, ), ;, fields, ., clockhourOfDay, =, convertField, (]
[=, convertField, (, fields, ., hourOfHalfday, ,, converted, ), ;, fields, ., clockhourOfDay, =, convertField, (, fields, ., clockhourOfDay, ,]
[fields, ., hourOfHalfday, ,, converted, ), ;, fields, ., clockhourOfDay, =, convertField, (, fields, ., clockhourOfDay, ,, converted, ), ;]
[fields, ., hourOfHalfday, ,, converted, ), ;, fields, ., clockhourOfDay, =, convertField, (, fields, ., clockhourOfDay, ,, converted, ), ;]
[converted, ), ;, fields, ., clockhourOfDay, =, convertField, (, fields, ., clockhourOfDay, ,, converted, ), ;, fields, ., clockhourOfHalfday, =]
[;, fields, ., clockhourOfDay, =, convertField, (, fields, ., clockhourOfDay, ,, converted, ), ;, fields, ., clockhourOfHalfday, =, convertField, (]
[;, fields, ., clockhourOfDay, =, convertField, (, fields, ., clockhourOfDay, ,, converted, ), ;, fields, ., clockhourOfHalfday, =, convertField, (]
[=, convertField, (, fields, ., clockhourOfDay, ,, converted, ), ;, fields, ., clockhourOfHalfday, =, convertField, (, fields, ., clockhourOfHalfday, ,]
[fields, ., clockhourOfDay, ,, converted, ), ;, fields, ., clockhourOfHalfday, =, convertField, (, fields, ., clockhourOfHalfday, ,, converted, ), ;]
[fields, ., clockhourOfDay, ,, converted, ), ;, fields, ., clockhourOfHalfday, =, convertField, (, fields, ., clockhourOfHalfday, ,, converted, ), ;]
[converted, ), ;, fields, ., clockhourOfHalfday, =, convertField, (, fields, ., clockhourOfHalfday, ,, converted, ), ;, fields, ., halfdayOfDay, =]
[;, fields, ., clockhourOfHalfday, =, convertField, (, fields, ., clockhourOfHalfday, ,, converted, ), ;, fields, ., halfdayOfDay, =, convertField, (]
[;, fields, ., clockhourOfHalfday, =, convertField, (, fields, ., clockhourOfHalfday, ,, converted, ), ;, fields, ., halfdayOfDay, =, convertField, (]
[=, convertField, (, fields, ., clockhourOfHalfday, ,, converted, ), ;, fields, ., halfdayOfDay, =, convertField, (, fields, ., halfdayOfDay, ,]
[;, }, private, DurationField, convertField, (, DurationField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (]
[;, }, private, DurationField, convertField, (, DurationField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (]
[;, }, private, DurationField, convertField, (, DurationField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (]
[private, DurationField, convertField, (, DurationField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (, field, ==]
[convertField, (, DurationField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (, field, ==, null, ||]
[(, DurationField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (, field, ==, null, ||, !]
[(, DurationField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (, field, ==, null, ||, !]
[Object, >, converted, ), {, if, (, field, ==, null, ||, !, field, ., isSupported, (, ), ), {, return]
[if, (, field, ==, null, ||, !, field, ., isSupported, (, ), ), {, return, field, ;, }, if, (]
[if, (, field, ==, null, ||, !, field, ., isSupported, (, ), ), {, return, field, ;, }, if, (]
[null, ||, !, field, ., isSupported, (, ), ), {, return, field, ;, }, if, (, converted, ., containsKey, (]
[isSupported, (, ), ), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {, return]
[), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DurationField, )]
[), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DurationField, )]
[;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DurationField, ), converted, ., get, (]
[(, field, ), ), {, return, (, DurationField, ), converted, ., get, (, field, ), ;, }, ZonedDurationField, zonedField, =]
[), {, return, (, DurationField, ), converted, ., get, (, field, ), ;, }, ZonedDurationField, zonedField, =, new, ZonedDurationField, (]
[return, (, DurationField, ), converted, ., get, (, field, ), ;, }, ZonedDurationField, zonedField, =, new, ZonedDurationField, (, field, ,]
[., get, (, field, ), ;, }, ZonedDurationField, zonedField, =, new, ZonedDurationField, (, field, ,, getZone, (, ), ), ;]
[., get, (, field, ), ;, }, ZonedDurationField, zonedField, =, new, ZonedDurationField, (, field, ,, getZone, (, ), ), ;]
[), ;, }, ZonedDurationField, zonedField, =, new, ZonedDurationField, (, field, ,, getZone, (, ), ), ;, converted, ., put, (]
[}, ZonedDurationField, zonedField, =, new, ZonedDurationField, (, field, ,, getZone, (, ), ), ;, converted, ., put, (, field, ,]
[new, ZonedDurationField, (, field, ,, getZone, (, ), ), ;, converted, ., put, (, field, ,, zonedField, ), ;, return]
[;, }, private, DateTimeField, convertField, (, DateTimeField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (]
[;, }, private, DateTimeField, convertField, (, DateTimeField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (]
[;, }, private, DateTimeField, convertField, (, DateTimeField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (]
[private, DateTimeField, convertField, (, DateTimeField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (, field, ==]
[convertField, (, DateTimeField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (, field, ==, null, ||]
[(, DateTimeField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (, field, ==, null, ||, !]
[(, DateTimeField, field, ,, HashMap, <, Object, ,, Object, >, converted, ), {, if, (, field, ==, null, ||, !]
[Object, >, converted, ), {, if, (, field, ==, null, ||, !, field, ., isSupported, (, ), ), {, return]
[if, (, field, ==, null, ||, !, field, ., isSupported, (, ), ), {, return, field, ;, }, if, (]
[if, (, field, ==, null, ||, !, field, ., isSupported, (, ), ), {, return, field, ;, }, if, (]
[null, ||, !, field, ., isSupported, (, ), ), {, return, field, ;, }, if, (, converted, ., containsKey, (]
[isSupported, (, ), ), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {, return]
[), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DateTimeField, )]
[), {, return, field, ;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DateTimeField, )]
[;, }, if, (, converted, ., containsKey, (, field, ), ), {, return, (, DateTimeField, ), converted, ., get, (]
[(, field, ), ), {, return, (, DateTimeField, ), converted, ., get, (, field, ), ;, }, ZonedDateTimeField, zonedField, =]
[), {, return, (, DateTimeField, ), converted, ., get, (, field, ), ;, }, ZonedDateTimeField, zonedField, =, new, ZonedDateTimeField, (]
[return, (, DateTimeField, ), converted, ., get, (, field, ), ;, }, ZonedDateTimeField, zonedField, =, new, ZonedDateTimeField, (, field, ,]
[converted, ., get, (, field, ), ;, }, ZonedDateTimeField, zonedField, =, new, ZonedDateTimeField, (, field, ,, getZone, (, ), ,]
[get, (, field, ), ;, }, ZonedDateTimeField, zonedField, =, new, ZonedDateTimeField, (, field, ,, getZone, (, ), ,, convertField, (]
[get, (, field, ), ;, }, ZonedDateTimeField, zonedField, =, new, ZonedDateTimeField, (, field, ,, getZone, (, ), ,, convertField, (]
[ZonedDateTimeField, zonedField, =, new, ZonedDateTimeField, (, field, ,, getZone, (, ), ,, convertField, (, field, ., getDurationField, (, ), ,]
[new, ZonedDateTimeField, (, field, ,, getZone, (, ), ,, convertField, (, field, ., getDurationField, (, ), ,, converted, ), ,]
[(, field, ,, getZone, (, ), ,, convertField, (, field, ., getDurationField, (, ), ,, converted, ), ,, convertField, (]
[(, field, ,, getZone, (, ), ,, convertField, (, field, ., getDurationField, (, ), ,, converted, ), ,, convertField, (]
[,, convertField, (, field, ., getDurationField, (, ), ,, converted, ), ,, convertField, (, field, ., getRangeDurationField, (, ), ,]
[field, ., getDurationField, (, ), ,, converted, ), ,, convertField, (, field, ., getRangeDurationField, (, ), ,, converted, ), ,]
[getDurationField, (, ), ,, converted, ), ,, convertField, (, field, ., getRangeDurationField, (, ), ,, converted, ), ,, convertField, (]
[getDurationField, (, ), ,, converted, ), ,, convertField, (, field, ., getRangeDurationField, (, ), ,, converted, ), ,, convertField, (]
[,, convertField, (, field, ., getRangeDurationField, (, ), ,, converted, ), ,, convertField, (, field, ., getLeapDurationField, (, ), ,]
[., getRangeDurationField, (, ), ,, converted, ), ,, convertField, (, field, ., getLeapDurationField, (, ), ,, converted, ), ), ;]
[., getRangeDurationField, (, ), ,, converted, ), ,, convertField, (, field, ., getLeapDurationField, (, ), ,, converted, ), ), ;]
[,, converted, ), ,, convertField, (, field, ., getLeapDurationField, (, ), ,, converted, ), ), ;, converted, ., put, (]
[), ,, convertField, (, field, ., getLeapDurationField, (, ), ,, converted, ), ), ;, converted, ., put, (, field, ,]
[field, ., getLeapDurationField, (, ), ,, converted, ), ), ;, converted, ., put, (, field, ,, zonedField, ), ;, return]
[(, field, ,, zonedField, ), ;, return, zonedField, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[(, field, ,, zonedField, ), ;, return, zonedField, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, zonedField, ), ;, return, zonedField, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[return, zonedField, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (]
[boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (]
[boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (]
[obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, if, (, obj, instanceof, ZonedChronology, ==]
[(, this, ==, obj, ), {, return, true, ;, }, if, (, obj, instanceof, ZonedChronology, ==, false, ), {, return]
[return, true, ;, }, if, (, obj, instanceof, ZonedChronology, ==, false, ), {, return, false, ;, }, ZonedChronology, chrono, =]
[}, if, (, obj, instanceof, ZonedChronology, ==, false, ), {, return, false, ;, }, ZonedChronology, chrono, =, (, ZonedChronology, )]
[obj, instanceof, ZonedChronology, ==, false, ), {, return, false, ;, }, ZonedChronology, chrono, =, (, ZonedChronology, ), obj, ;, return]
[obj, instanceof, ZonedChronology, ==, false, ), {, return, false, ;, }, ZonedChronology, chrono, =, (, ZonedChronology, ), obj, ;, return]
[obj, instanceof, ZonedChronology, ==, false, ), {, return, false, ;, }, ZonedChronology, chrono, =, (, ZonedChronology, ), obj, ;, return]
[{, return, false, ;, }, ZonedChronology, chrono, =, (, ZonedChronology, ), obj, ;, return, getBase, (, ), ., equals, (]
[{, return, false, ;, }, ZonedChronology, chrono, =, (, ZonedChronology, ), obj, ;, return, getBase, (, ), ., equals, (]
[=, (, ZonedChronology, ), obj, ;, return, getBase, (, ), ., equals, (, chrono, ., getBase, (, ), ), &&]
[=, (, ZonedChronology, ), obj, ;, return, getBase, (, ), ., equals, (, chrono, ., getBase, (, ), ), &&]
[return, getBase, (, ), ., equals, (, chrono, ., getBase, (, ), ), &&, getZone, (, ), ., equals, (]
[return, getBase, (, ), ., equals, (, chrono, ., getBase, (, ), ), &&, getZone, (, ), ., equals, (]
[(, ), ., equals, (, chrono, ., getZone, (, ), ), ;, }, public, int, hashCode, (, ), {, return]
[(, ), ., equals, (, chrono, ., getZone, (, ), ), ;, }, public, int, hashCode, (, ), {, return]
[(, ), ., equals, (, chrono, ., getZone, (, ), ), ;, }, public, int, hashCode, (, ), {, return]
[., equals, (, chrono, ., getZone, (, ), ), ;, }, public, int, hashCode, (, ), {, return, 326565, +]
[., equals, (, chrono, ., getZone, (, ), ), ;, }, public, int, hashCode, (, ), {, return, 326565, +]
[., equals, (, chrono, ., getZone, (, ), ), ;, }, public, int, hashCode, (, ), {, return, 326565, +]
[), ;, }, public, int, hashCode, (, ), {, return, 326565, +, getZone, (, ), ., hashCode, (, ), *]
[}, public, int, hashCode, (, ), {, return, 326565, +, getZone, (, ), ., hashCode, (, ), *, 11, +]
[}, public, int, hashCode, (, ), {, return, 326565, +, getZone, (, ), ., hashCode, (, ), *, 11, +]
[}, public, int, hashCode, (, ), {, return, 326565, +, getZone, (, ), ., hashCode, (, ), *, 11, +]
[326565, +, getZone, (, ), ., hashCode, (, ), *, 11, +, getBase, (, ), ., hashCode, (, ), *]
[11, +, getBase, (, ), ., hashCode, (, ), *, 7, ;, }, public, String, toString, (, ), {, return]
[11, +, getBase, (, ), ., hashCode, (, ), *, 7, ;, }, public, String, toString, (, ), {, return]
[11, +, getBase, (, ), ., hashCode, (, ), *, 7, ;, }, public, String, toString, (, ), {, return]
[11, +, getBase, (, ), ., hashCode, (, ), *, 7, ;, }, public, String, toString, (, ), {, return]
[11, +, getBase, (, ), ., hashCode, (, ), *, 7, ;, }, public, String, toString, (, ), {, return]
[getBase, (, ), ., hashCode, (, ), *, 7, ;, }, public, String, toString, (, ), {, return, "ZonedChronology[", +]
[hashCode, (, ), *, 7, ;, }, public, String, toString, (, ), {, return, "ZonedChronology[", +, getBase, (, ), +]
[), *, 7, ;, }, public, String, toString, (, ), {, return, "ZonedChronology[", +, getBase, (, ), +, ", ", +]
[), *, 7, ;, }, public, String, toString, (, ), {, return, "ZonedChronology[", +, getBase, (, ), +, ", ", +]
[(, ), {, return, "ZonedChronology[", +, getBase, (, ), +, ", ", +, getZone, (, ), ., getID, (, ), +]
[., getID, (, ), +, ']', ;, }, static, class, ZonedDurationField, extends, BaseDurationField, {, private, static, final, long, serialVersionUID, =]
[getID, (, ), +, ']', ;, }, static, class, ZonedDurationField, extends, BaseDurationField, {, private, static, final, long, serialVersionUID, =, -]
[;, final, boolean, iTimeField, ;, final, DateTimeZone, iZone, ;, ZonedDurationField, (, DurationField, field, ,, DateTimeZone, zone, ), {, super, (]
[;, final, boolean, iTimeField, ;, final, DateTimeZone, iZone, ;, ZonedDurationField, (, DurationField, field, ,, DateTimeZone, zone, ), {, super, (]
[ZonedDurationField, (, DurationField, field, ,, DateTimeZone, zone, ), {, super, (, field, ., getType, (, ), ), ;, if, (]
[(, DurationField, field, ,, DateTimeZone, zone, ), {, super, (, field, ., getType, (, ), ), ;, if, (, !]
[(, DurationField, field, ,, DateTimeZone, zone, ), {, super, (, field, ., getType, (, ), ), ;, if, (, !]
[super, (, field, ., getType, (, ), ), ;, if, (, !, field, ., isSupported, (, ), ), {, throw]
[), ), ;, if, (, !, field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }]
[;, if, (, !, field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =]
[(, !, field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;]
[field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iTimeField, =]
[isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iTimeField, =, useTimeArithmetic, (]
[), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iTimeField, =, useTimeArithmetic, (, field, ), ;]
[throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iTimeField, =, useTimeArithmetic, (, field, ), ;, iZone, =]
[;, iTimeField, =, useTimeArithmetic, (, field, ), ;, iZone, =, zone, ;, }, public, boolean, isPrecise, (, ), {, return]
[;, iTimeField, =, useTimeArithmetic, (, field, ), ;, iZone, =, zone, ;, }, public, boolean, isPrecise, (, ), {, return]
[=, useTimeArithmetic, (, field, ), ;, iZone, =, zone, ;, }, public, boolean, isPrecise, (, ), {, return, iTimeField, ?]
[=, useTimeArithmetic, (, field, ), ;, iZone, =, zone, ;, }, public, boolean, isPrecise, (, ), {, return, iTimeField, ?]
[iZone, =, zone, ;, }, public, boolean, isPrecise, (, ), {, return, iTimeField, ?, iField, ., isPrecise, (, ), :]
[iZone, =, zone, ;, }, public, boolean, isPrecise, (, ), {, return, iTimeField, ?, iField, ., isPrecise, (, ), :]
[iZone, =, zone, ;, }, public, boolean, isPrecise, (, ), {, return, iTimeField, ?, iField, ., isPrecise, (, ), :]
[boolean, isPrecise, (, ), {, return, iTimeField, ?, iField, ., isPrecise, (, ), :, iField, ., isPrecise, (, ), &&]
[boolean, isPrecise, (, ), {, return, iTimeField, ?, iField, ., isPrecise, (, ), :, iField, ., isPrecise, (, ), &&]
[boolean, isPrecise, (, ), {, return, iTimeField, ?, iField, ., isPrecise, (, ), :, iField, ., isPrecise, (, ), &&]
[isPrecise, (, ), &&, this, ., iZone, ., isFixed, (, ), ;, }, public, long, getUnitMillis, (, ), {, return]
[isPrecise, (, ), &&, this, ., iZone, ., isFixed, (, ), ;, }, public, long, getUnitMillis, (, ), {, return]
[return, iField, ., getUnitMillis, (, ), ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return]
[return, iField, ., getUnitMillis, (, ), ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return]
[(, ), ;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return, iField, ., getValue, (]
[;, }, public, int, getValue, (, long, duration, ,, long, instant, ), {, return, iField, ., getValue, (, duration, ,]
[public, int, getValue, (, long, duration, ,, long, instant, ), {, return, iField, ., getValue, (, duration, ,, addOffset, (]
[,, addOffset, (, instant, ), ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return]
[,, addOffset, (, instant, ), ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return]
[), ), ;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, iField, ., getValueAsLong, (]
[;, }, public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, iField, ., getValueAsLong, (, duration, ,]
[public, long, getValueAsLong, (, long, duration, ,, long, instant, ), {, return, iField, ., getValueAsLong, (, duration, ,, addOffset, (]
[,, addOffset, (, instant, ), ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return]
[,, addOffset, (, instant, ), ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return]
[), ), ;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, iField, ., getMillis, (]
[;, }, public, long, getMillis, (, int, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value, ,]
[public, long, getMillis, (, int, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value, ,, addOffset, (]
[,, addOffset, (, instant, ), ), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return]
[,, addOffset, (, instant, ), ), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return]
[), ), ;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, iField, ., getMillis, (]
[;, }, public, long, getMillis, (, long, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value, ,]
[public, long, getMillis, (, long, value, ,, long, instant, ), {, return, iField, ., getMillis, (, value, ,, addOffset, (]
[(, instant, ), ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, int, offset, =]
[), ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, int, offset, =, getOffsetToAdd, (]
[}, public, long, add, (, long, instant, ,, int, value, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;]
[long, add, (, long, instant, ,, int, value, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =]
[long, add, (, long, instant, ,, int, value, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =]
[instant, ,, int, value, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., add, (]
[instant, ,, int, value, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., add, (]
[int, value, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., add, (, instant, +]
[), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., add, (, instant, +, offset, ,]
[=, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return]
[=, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return]
[(, instant, ), ;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -]
[instant, ), ;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (]
[instant, ), ;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (]
[;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?]
[=, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :]
[., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (]
[(, instant, ), ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, int, offset, =]
[), ), ;, }, public, long, add, (, long, instant, ,, long, value, ), {, int, offset, =, getOffsetToAdd, (]
[}, public, long, add, (, long, instant, ,, long, value, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;]
[long, add, (, long, instant, ,, long, value, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =]
[long, add, (, long, instant, ,, long, value, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =]
[instant, ,, long, value, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., add, (]
[instant, ,, long, value, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., add, (]
[long, value, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., add, (, instant, +]
[), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., add, (, instant, +, offset, ,]
[=, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return]
[=, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return]
[(, instant, ), ;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -]
[instant, ), ;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (]
[instant, ), ;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (]
[;, instant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?]
[=, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :]
[., add, (, instant, +, offset, ,, value, ), ;, return, instant, -, (, iTimeField, ?, offset, :, getOffsetFromLocalToSubtract, (]
[(, instant, ), ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =]
[), ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (]
[public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return]
[public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return]
[long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (]
[long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (]
[,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (, minuendInstant, +]
[long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (, minuendInstant, +, (]
[long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (, minuendInstant, +, (]
[), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?]
[int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :]
[=, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (]
[), ;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,]
[), ;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,]
[return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +]
[subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =]
[offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (]
[public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return]
[public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return]
[long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (]
[long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (]
[,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +]
[long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (]
[long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (]
[), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?]
[int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :]
[=, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (]
[), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,]
[), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,]
[return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +]
[), ), ,, subtrahendInstant, +, offset, ), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =]
[), ), ,, subtrahendInstant, +, offset, ), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =]
[), ), ,, subtrahendInstant, +, offset, ), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =]
[), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffset, (]
[(, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =]
[(, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =]
[instant, ), {, int, offset, =, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +]
[offset, =, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (]
[offset, =, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (]
[offset, =, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (]
[=, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (]
[=, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (]
[., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^]
[getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <]
[instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&]
[instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&]
[), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (]
[), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (]
[long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (, instant, ^]
[instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=]
[if, (, (, instant, ^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw]
[instant, ^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (]
[0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return]
[(, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, int, getOffsetFromLocalToSubtract, (, long, instant, ), {, int, offset, =]
[(, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, int, getOffsetFromLocalToSubtract, (, long, instant, ), {, int, offset, =]
[(, "Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, int, getOffsetFromLocalToSubtract, (, long, instant, ), {, int, offset, =]
[offset, ;, }, private, int, getOffsetFromLocalToSubtract, (, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffsetFromLocal, (]
[(, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffsetFromLocal, (, instant, ), ;, long, diff, =]
[(, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffsetFromLocal, (, instant, ), ;, long, diff, =]
[instant, ), {, int, offset, =, this, ., iZone, ., getOffsetFromLocal, (, instant, ), ;, long, diff, =, instant, -]
[offset, =, this, ., iZone, ., getOffsetFromLocal, (, instant, ), ;, long, diff, =, instant, -, offset, ;, if, (]
[offset, =, this, ., iZone, ., getOffsetFromLocal, (, instant, ), ;, long, diff, =, instant, -, offset, ;, if, (]
[offset, =, this, ., iZone, ., getOffsetFromLocal, (, instant, ), ;, long, diff, =, instant, -, offset, ;, if, (]
[=, this, ., iZone, ., getOffsetFromLocal, (, instant, ), ;, long, diff, =, instant, -, offset, ;, if, (, (]
[=, this, ., iZone, ., getOffsetFromLocal, (, instant, ), ;, long, diff, =, instant, -, offset, ;, if, (, (]
[., iZone, ., getOffsetFromLocal, (, instant, ), ;, long, diff, =, instant, -, offset, ;, if, (, (, instant, ^]
[getOffsetFromLocal, (, instant, ), ;, long, diff, =, instant, -, offset, ;, if, (, (, instant, ^, diff, ), <]
[instant, ), ;, long, diff, =, instant, -, offset, ;, if, (, (, instant, ^, diff, ), <, 0, &&]
[instant, ), ;, long, diff, =, instant, -, offset, ;, if, (, (, instant, ^, diff, ), <, 0, &&]
[), ;, long, diff, =, instant, -, offset, ;, if, (, (, instant, ^, diff, ), <, 0, &&, (]
[), ;, long, diff, =, instant, -, offset, ;, if, (, (, instant, ^, diff, ), <, 0, &&, (]
[long, diff, =, instant, -, offset, ;, if, (, (, instant, ^, diff, ), <, 0, &&, (, instant, ^]
[instant, -, offset, ;, if, (, (, instant, ^, diff, ), <, 0, &&, (, instant, ^, offset, ), <]
[if, (, (, instant, ^, diff, ), <, 0, &&, (, instant, ^, offset, ), <, 0, ), {, throw]
[instant, ^, diff, ), <, 0, &&, (, instant, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (]
[0, &&, (, instant, ^, offset, ), <, 0, ), {, throw, new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return]
[new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, long, addOffset, (, long, instant, ), {, return]
[new, ArithmeticException, (, "Subtracting time zone offset caused overflow", ), ;, }, return, offset, ;, }, private, long, addOffset, (, long, instant, ), {, return]
[), ;, }, return, offset, ;, }, private, long, addOffset, (, long, instant, ), {, return, iZone, ., convertUTCToLocal, (]
[iZone, ., convertUTCToLocal, (, instant, ), ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (]
[iZone, ., convertUTCToLocal, (, instant, ), ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (]
[convertUTCToLocal, (, instant, ), ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, else, if, (]
[equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, else, if, (]
[this, ==, obj, ), {, return, true, ;, }, else, if, (, obj, instanceof, ZonedDurationField, ), {, ZonedDurationField, other, =]
[), {, return, true, ;, }, else, if, (, obj, instanceof, ZonedDurationField, ), {, ZonedDurationField, other, =, (, ZonedDurationField, )]
[true, ;, }, else, if, (, obj, instanceof, ZonedDurationField, ), {, ZonedDurationField, other, =, (, ZonedDurationField, ), obj, ;, return]
[true, ;, }, else, if, (, obj, instanceof, ZonedDurationField, ), {, ZonedDurationField, other, =, (, ZonedDurationField, ), obj, ;, return]
[true, ;, }, else, if, (, obj, instanceof, ZonedDurationField, ), {, ZonedDurationField, other, =, (, ZonedDurationField, ), obj, ;, return]
[if, (, obj, instanceof, ZonedDurationField, ), {, ZonedDurationField, other, =, (, ZonedDurationField, ), obj, ;, return, iField, ., equals, (]
[if, (, obj, instanceof, ZonedDurationField, ), {, ZonedDurationField, other, =, (, ZonedDurationField, ), obj, ;, return, iField, ., equals, (]
[), {, ZonedDurationField, other, =, (, ZonedDurationField, ), obj, ;, return, iField, ., equals, (, other, ., iField, ), &&]
[), {, ZonedDurationField, other, =, (, ZonedDurationField, ), obj, ;, return, iField, ., equals, (, other, ., iField, ), &&]
[=, (, ZonedDurationField, ), obj, ;, return, iField, ., equals, (, other, ., iField, ), &&, iZone, ., equals, (]
[=, (, ZonedDurationField, ), obj, ;, return, iField, ., equals, (, other, ., iField, ), &&, iZone, ., equals, (]
[iField, ., equals, (, other, ., iField, ), &&, iZone, ., equals, (, other, ., iZone, ), ;, }, return]
[(, other, ., iZone, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return]
[(, other, ., iZone, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return]
[(, other, ., iZone, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return]
[}, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, iField, ., hashCode, (, ), ^]
[}, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, iField, ., hashCode, (, ), ^]
[., hashCode, (, ), ^, iZone, ., hashCode, (, ), ;, }, }, static, final, class, ZonedDateTimeField, extends, BaseDateTimeField, {]
[), ^, iZone, ., hashCode, (, ), ;, }, }, static, final, class, ZonedDateTimeField, extends, BaseDateTimeField, {, @, SuppressWarnings, (]
[}, }, static, final, class, ZonedDateTimeField, extends, BaseDateTimeField, {, @, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID, =]
[}, static, final, class, ZonedDateTimeField, extends, BaseDateTimeField, {, @, SuppressWarnings, (, "unused", ), private, static, final, long, serialVersionUID, =, -]
[ZonedDateTimeField, (, DateTimeField, field, ,, DateTimeZone, zone, ,, DurationField, durationField, ,, DurationField, rangeDurationField, ,, DurationField, leapDurationField, ), {, super, (]
[ZonedDateTimeField, (, DateTimeField, field, ,, DateTimeZone, zone, ,, DurationField, durationField, ,, DurationField, rangeDurationField, ,, DurationField, leapDurationField, ), {, super, (]
[durationField, ,, DurationField, rangeDurationField, ,, DurationField, leapDurationField, ), {, super, (, field, ., getType, (, ), ), ;, if, (]
[,, DurationField, rangeDurationField, ,, DurationField, leapDurationField, ), {, super, (, field, ., getType, (, ), ), ;, if, (, !]
[,, DurationField, rangeDurationField, ,, DurationField, leapDurationField, ), {, super, (, field, ., getType, (, ), ), ;, if, (, !]
[super, (, field, ., getType, (, ), ), ;, if, (, !, field, ., isSupported, (, ), ), {, throw]
[), ), ;, if, (, !, field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }]
[;, if, (, !, field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =]
[(, !, field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;]
[field, ., isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iZone, =]
[isSupported, (, ), ), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iZone, =, zone, ;]
[), ), {, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iZone, =, zone, ;, iDurationField, =]
[{, throw, new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iZone, =, zone, ;, iDurationField, =, durationField, ;]
[new, IllegalArgumentException, (, ), ;, }, iField, =, field, ;, iZone, =, zone, ;, iDurationField, =, durationField, ;, iTimeField, =]
[(, ), ;, }, iField, =, field, ;, iZone, =, zone, ;, iDurationField, =, durationField, ;, iTimeField, =, useTimeArithmetic, (]
[}, iField, =, field, ;, iZone, =, zone, ;, iDurationField, =, durationField, ;, iTimeField, =, useTimeArithmetic, (, durationField, ), ;]
[=, field, ;, iZone, =, zone, ;, iDurationField, =, durationField, ;, iTimeField, =, useTimeArithmetic, (, durationField, ), ;, iRangeDurationField, =]
[;, iZone, =, zone, ;, iDurationField, =, durationField, ;, iTimeField, =, useTimeArithmetic, (, durationField, ), ;, iRangeDurationField, =, rangeDurationField, ;]
[=, zone, ;, iDurationField, =, durationField, ;, iTimeField, =, useTimeArithmetic, (, durationField, ), ;, iRangeDurationField, =, rangeDurationField, ;, iLeapDurationField, =]
[(, durationField, ), ;, iRangeDurationField, =, rangeDurationField, ;, iLeapDurationField, =, leapDurationField, ;, }, public, boolean, isLenient, (, ), {, return]
[(, durationField, ), ;, iRangeDurationField, =, rangeDurationField, ;, iLeapDurationField, =, leapDurationField, ;, }, public, boolean, isLenient, (, ), {, return]
[{, return, iField, ., isLenient, (, ), ;, }, public, int, get, (, long, instant, ), {, long, localInstant, =]
[{, return, iField, ., isLenient, (, ), ;, }, public, int, get, (, long, instant, ), {, long, localInstant, =]
[isLenient, (, ), ;, }, public, int, get, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[}, public, int, get, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[}, public, int, get, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[(, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return, iField, ., get, (]
[get, (, localInstant, ), ;, }, public, String, getAsText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =]
[get, (, localInstant, ), ;, }, public, String, getAsText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =]
[;, }, public, String, getAsText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[getAsText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[getAsText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return, iField, ., getAsText, (]
[locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return, iField, ., getAsText, (, localInstant, ,]
[localInstant, ,, locale, ), ;, }, public, String, getAsShortText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =]
[localInstant, ,, locale, ), ;, }, public, String, getAsShortText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =]
[;, }, public, String, getAsShortText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[getAsShortText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[getAsShortText, (, long, instant, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return, iField, ., getAsShortText, (]
[locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return, iField, ., getAsShortText, (, localInstant, ,]
[getAsShortText, (, localInstant, ,, locale, ), ;, }, public, String, getAsText, (, int, fieldValue, ,, Locale, locale, ), {, return]
[getAsShortText, (, localInstant, ,, locale, ), ;, }, public, String, getAsText, (, int, fieldValue, ,, Locale, locale, ), {, return]
[locale, ), ;, }, public, String, getAsText, (, int, fieldValue, ,, Locale, locale, ), {, return, iField, ., getAsText, (]
[;, }, public, String, getAsText, (, int, fieldValue, ,, Locale, locale, ), {, return, iField, ., getAsText, (, fieldValue, ,]
[getAsText, (, fieldValue, ,, locale, ), ;, }, public, String, getAsShortText, (, int, fieldValue, ,, Locale, locale, ), {, return]
[getAsText, (, fieldValue, ,, locale, ), ;, }, public, String, getAsShortText, (, int, fieldValue, ,, Locale, locale, ), {, return]
[locale, ), ;, }, public, String, getAsShortText, (, int, fieldValue, ,, Locale, locale, ), {, return, iField, ., getAsShortText, (]
[;, }, public, String, getAsShortText, (, int, fieldValue, ,, Locale, locale, ), {, return, iField, ., getAsShortText, (, fieldValue, ,]
[(, fieldValue, ,, locale, ), ;, }, public, long, add, (, long, instant, ,, int, value, ), {, if, (]
[}, public, long, add, (, long, instant, ,, int, value, ), {, if, (, iTimeField, ), {, int, offset, =]
[long, add, (, long, instant, ,, int, value, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (]
[int, value, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =]
[int, value, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =]
[if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (]
[if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (]
[iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (, instant, +]
[{, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (, instant, +, offset, ,]
[getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return]
[getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return]
[instant, ), ;, long, localInstant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, localInstant, -]
[add, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =]
[add, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =]
[offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (]
[else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (, localInstant, ,]
[=, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return]
[=, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return]
[(, instant, ), ;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (]
[), ;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,]
[localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,]
[false, ,, instant, ), ;, }, }, public, long, add, (, long, instant, ,, long, value, ), {, if, (]
[}, public, long, add, (, long, instant, ,, long, value, ), {, if, (, iTimeField, ), {, int, offset, =]
[long, add, (, long, instant, ,, long, value, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (]
[long, value, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =]
[long, value, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =]
[if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (]
[if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (]
[iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (, instant, +]
[{, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (, instant, +, offset, ,]
[getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return]
[getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return]
[instant, ), ;, long, localInstant, =, iField, ., add, (, instant, +, offset, ,, value, ), ;, return, localInstant, -]
[add, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =]
[add, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =]
[offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (]
[else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (, localInstant, ,]
[=, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return]
[=, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return]
[(, instant, ), ;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (]
[), ;, localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,]
[localInstant, =, iField, ., add, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,]
[false, ,, instant, ), ;, }, }, public, long, addWrapField, (, long, instant, ,, int, value, ), {, if, (]
[}, public, long, addWrapField, (, long, instant, ,, int, value, ), {, if, (, iTimeField, ), {, int, offset, =]
[long, addWrapField, (, long, instant, ,, int, value, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (]
[int, value, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =]
[int, value, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =]
[if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., addWrapField, (]
[if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., addWrapField, (]
[iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., addWrapField, (, instant, +]
[{, int, offset, =, getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., addWrapField, (, instant, +, offset, ,]
[getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., addWrapField, (, instant, +, offset, ,, value, ), ;, return]
[getOffsetToAdd, (, instant, ), ;, long, localInstant, =, iField, ., addWrapField, (, instant, +, offset, ,, value, ), ;, return]
[instant, ), ;, long, localInstant, =, iField, ., addWrapField, (, instant, +, offset, ,, value, ), ;, return, localInstant, -]
[addWrapField, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =]
[addWrapField, (, instant, +, offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =]
[offset, ,, value, ), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[), ;, return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[return, localInstant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., addWrapField, (]
[else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., addWrapField, (, localInstant, ,]
[=, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., addWrapField, (, localInstant, ,, value, ), ;, return]
[=, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., addWrapField, (, localInstant, ,, value, ), ;, return]
[(, instant, ), ;, localInstant, =, iField, ., addWrapField, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (]
[), ;, localInstant, =, iField, ., addWrapField, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,]
[localInstant, =, iField, ., addWrapField, (, localInstant, ,, value, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,]
[,, instant, ), ;, }, }, public, long, set, (, long, instant, ,, int, value, ), {, long, localInstant, =]
[,, instant, ), ;, }, }, public, long, set, (, long, instant, ,, int, value, ), {, long, localInstant, =]
[}, }, public, long, set, (, long, instant, ,, int, value, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[long, set, (, long, instant, ,, int, value, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[(, long, instant, ,, int, value, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[(, long, instant, ,, int, value, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[int, value, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., set, (]
[), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., set, (, localInstant, ,]
[., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., set, (, localInstant, ,, value, ), ;, long, result, =]
[., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., set, (, localInstant, ,, value, ), ;, long, result, =]
[), ;, localInstant, =, iField, ., set, (, localInstant, ,, value, ), ;, long, result, =, iZone, ., convertLocalToUTC, (]
[localInstant, =, iField, ., set, (, localInstant, ,, value, ), ;, long, result, =, iZone, ., convertLocalToUTC, (, localInstant, ,]
[iField, ., set, (, localInstant, ,, value, ), ;, long, result, =, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,]
[,, value, ), ;, long, result, =, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, if, (]
[,, value, ), ;, long, result, =, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, if, (]
[), ;, long, result, =, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, if, (, get, (]
[result, =, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, if, (, get, (, result, ), !=]
[localInstant, ,, false, ,, instant, ), ;, if, (, get, (, result, ), !=, value, ), {, IllegalInstantException, cause, =]
[,, instant, ), ;, if, (, get, (, result, ), !=, value, ), {, IllegalInstantException, cause, =, new, IllegalInstantException, (]
[), ;, if, (, get, (, result, ), !=, value, ), {, IllegalInstantException, cause, =, new, IllegalInstantException, (, localInstant, ,]
[), ;, if, (, get, (, result, ), !=, value, ), {, IllegalInstantException, cause, =, new, IllegalInstantException, (, localInstant, ,]
[), {, IllegalInstantException, cause, =, new, IllegalInstantException, (, localInstant, ,, iZone, ., getID, (, ), ), ;, IllegalFieldValueException, ex, =]
[cause, =, new, IllegalInstantException, (, localInstant, ,, iZone, ., getID, (, ), ), ;, IllegalFieldValueException, ex, =, new, IllegalFieldValueException, (]
[cause, =, new, IllegalInstantException, (, localInstant, ,, iZone, ., getID, (, ), ), ;, IllegalFieldValueException, ex, =, new, IllegalFieldValueException, (]
[,, iZone, ., getID, (, ), ), ;, IllegalFieldValueException, ex, =, new, IllegalFieldValueException, (, iField, ., getType, (, ), ,]
[,, iZone, ., getID, (, ), ), ;, IllegalFieldValueException, ex, =, new, IllegalFieldValueException, (, iField, ., getType, (, ), ,]
[(, ), ), ;, IllegalFieldValueException, ex, =, new, IllegalFieldValueException, (, iField, ., getType, (, ), ,, Integer, ., valueOf, (]
[;, IllegalFieldValueException, ex, =, new, IllegalFieldValueException, (, iField, ., getType, (, ), ,, Integer, ., valueOf, (, value, ), ,]
[;, IllegalFieldValueException, ex, =, new, IllegalFieldValueException, (, iField, ., getType, (, ), ,, Integer, ., valueOf, (, value, ), ,]
[iField, ., getType, (, ), ,, Integer, ., valueOf, (, value, ), ,, cause, ., getMessage, (, ), ), ;]
[iField, ., getType, (, ), ,, Integer, ., valueOf, (, value, ), ,, cause, ., getMessage, (, ), ), ;]
[), ,, Integer, ., valueOf, (, value, ), ,, cause, ., getMessage, (, ), ), ;, ex, ., initCause, (]
[valueOf, (, value, ), ,, cause, ., getMessage, (, ), ), ;, ex, ., initCause, (, cause, ), ;, throw]
[,, cause, ., getMessage, (, ), ), ;, ex, ., initCause, (, cause, ), ;, throw, ex, ;, }, return]
[result, ;, }, public, long, set, (, long, instant, ,, String, text, ,, Locale, locale, ), {, long, localInstant, =]
[result, ;, }, public, long, set, (, long, instant, ,, String, text, ,, Locale, locale, ), {, long, localInstant, =]
[long, set, (, long, instant, ,, String, text, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[long, instant, ,, String, text, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[,, String, text, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[,, String, text, ,, Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[Locale, locale, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., set, (]
[), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., set, (, localInstant, ,]
[long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., set, (, localInstant, ,, text, ,]
[., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., set, (, localInstant, ,, text, ,, locale, ), ;, return]
[., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., set, (, localInstant, ,, text, ,, locale, ), ;, return]
[), ;, localInstant, =, iField, ., set, (, localInstant, ,, text, ,, locale, ), ;, return, iZone, ., convertLocalToUTC, (]
[localInstant, =, iField, ., set, (, localInstant, ,, text, ,, locale, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,]
[iField, ., set, (, localInstant, ,, text, ,, locale, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,]
[false, ,, instant, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =]
[instant, ), ;, }, public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (]
[public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return]
[public, int, getDifference, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return]
[long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (]
[long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (]
[,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (, minuendInstant, +]
[long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (, minuendInstant, +, (]
[long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (, minuendInstant, +, (]
[), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?]
[int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :]
[=, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (]
[), ;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,]
[), ;, return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,]
[return, iField, ., getDifference, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +]
[subtrahendInstant, +, offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =]
[offset, ), ;, }, public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (]
[public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return]
[public, long, getDifferenceAsLong, (, long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return]
[long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (]
[long, minuendInstant, ,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (]
[,, long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +]
[long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (]
[long, subtrahendInstant, ), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (]
[), {, int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?]
[int, offset, =, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :]
[=, getOffsetToAdd, (, subtrahendInstant, ), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (]
[), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,]
[), ;, return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,]
[return, iField, ., getDifferenceAsLong, (, minuendInstant, +, (, iTimeField, ?, offset, :, getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +]
[getOffsetToAdd, (, minuendInstant, ), ), ,, subtrahendInstant, +, offset, ), ;, }, public, final, DurationField, getDurationField, (, ), {, return]
[}, public, final, DurationField, getDurationField, (, ), {, return, iDurationField, ;, }, public, final, DurationField, getRangeDurationField, (, ), {, return]
[DurationField, getRangeDurationField, (, ), {, return, iRangeDurationField, ;, }, public, boolean, isLeap, (, long, instant, ), {, long, localInstant, =]
[DurationField, getRangeDurationField, (, ), {, return, iRangeDurationField, ;, }, public, boolean, isLeap, (, long, instant, ), {, long, localInstant, =]
[{, return, iRangeDurationField, ;, }, public, boolean, isLeap, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[}, public, boolean, isLeap, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[}, public, boolean, isLeap, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[(, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return, iField, ., isLeap, (]
[return, iField, ., isLeap, (, localInstant, ), ;, }, public, int, getLeapAmount, (, long, instant, ), {, long, localInstant, =]
[return, iField, ., isLeap, (, localInstant, ), ;, }, public, int, getLeapAmount, (, long, instant, ), {, long, localInstant, =]
[(, localInstant, ), ;, }, public, int, getLeapAmount, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[}, public, int, getLeapAmount, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[}, public, int, getLeapAmount, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[(, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return, iField, ., getLeapAmount, (]
[instant, ), ;, return, iField, ., getLeapAmount, (, localInstant, ), ;, }, public, final, DurationField, getLeapDurationField, (, ), {, return]
[final, DurationField, getLeapDurationField, (, ), {, return, iLeapDurationField, ;, }, public, long, roundFloor, (, long, instant, ), {, if, (]
[return, iLeapDurationField, ;, }, public, long, roundFloor, (, long, instant, ), {, if, (, iTimeField, ), {, int, offset, =]
[;, }, public, long, roundFloor, (, long, instant, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (]
[long, roundFloor, (, long, instant, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;]
[(, long, instant, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =]
[(, long, instant, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =]
[{, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundFloor, (]
[{, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundFloor, (]
[(, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundFloor, (, instant, +]
[int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundFloor, (, instant, +, offset, ), ;, return]
[int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundFloor, (, instant, +, offset, ), ;, return]
[=, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundFloor, (, instant, +, offset, ), ;, return, instant, -]
[iField, ., roundFloor, (, instant, +, offset, ), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =]
[iField, ., roundFloor, (, instant, +, offset, ), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =]
[instant, +, offset, ), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundFloor, (]
[long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundFloor, (, localInstant, ), ;, return]
[long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundFloor, (, localInstant, ), ;, return]
[., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundFloor, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (]
[(, instant, ), ;, localInstant, =, iField, ., roundFloor, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,]
[), ;, localInstant, =, iField, ., roundFloor, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,]
[(, localInstant, ,, false, ,, instant, ), ;, }, }, public, long, roundCeiling, (, long, instant, ), {, if, (]
[), ;, }, }, public, long, roundCeiling, (, long, instant, ), {, if, (, iTimeField, ), {, int, offset, =]
[}, }, public, long, roundCeiling, (, long, instant, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (]
[long, roundCeiling, (, long, instant, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;]
[(, long, instant, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =]
[(, long, instant, ), {, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =]
[{, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundCeiling, (]
[{, if, (, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundCeiling, (]
[(, iTimeField, ), {, int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundCeiling, (, instant, +]
[int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundCeiling, (, instant, +, offset, ), ;, return]
[int, offset, =, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundCeiling, (, instant, +, offset, ), ;, return]
[=, getOffsetToAdd, (, instant, ), ;, instant, =, iField, ., roundCeiling, (, instant, +, offset, ), ;, return, instant, -]
[iField, ., roundCeiling, (, instant, +, offset, ), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =]
[iField, ., roundCeiling, (, instant, +, offset, ), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =]
[instant, +, offset, ), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[), ;, return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;]
[return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[return, instant, -, offset, ;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =]
[;, }, else, {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundCeiling, (]
[long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundCeiling, (, localInstant, ), ;, return]
[long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundCeiling, (, localInstant, ), ;, return]
[., convertUTCToLocal, (, instant, ), ;, localInstant, =, iField, ., roundCeiling, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (]
[(, instant, ), ;, localInstant, =, iField, ., roundCeiling, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,]
[), ;, localInstant, =, iField, ., roundCeiling, (, localInstant, ), ;, return, iZone, ., convertLocalToUTC, (, localInstant, ,, false, ,]
[localInstant, ,, false, ,, instant, ), ;, }, }, public, long, remainder, (, long, instant, ), {, long, localInstant, =]
[localInstant, ,, false, ,, instant, ), ;, }, }, public, long, remainder, (, long, instant, ), {, long, localInstant, =]
[instant, ), ;, }, }, public, long, remainder, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[}, public, long, remainder, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[}, public, long, remainder, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[(, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return, iField, ., remainder, (]
[(, instant, ), ;, return, iField, ., remainder, (, localInstant, ), ;, }, public, int, getMinimumValue, (, ), {, return]
[(, instant, ), ;, return, iField, ., remainder, (, localInstant, ), ;, }, public, int, getMinimumValue, (, ), {, return]
[{, return, iField, ., getMinimumValue, (, ), ;, }, public, int, getMinimumValue, (, long, instant, ), {, long, localInstant, =]
[{, return, iField, ., getMinimumValue, (, ), ;, }, public, int, getMinimumValue, (, long, instant, ), {, long, localInstant, =]
[getMinimumValue, (, ), ;, }, public, int, getMinimumValue, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[}, public, int, getMinimumValue, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[}, public, int, getMinimumValue, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[(, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return, iField, ., getMinimumValue, (]
[), ;, return, iField, ., getMinimumValue, (, localInstant, ), ;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ), {, return]
[), ;, return, iField, ., getMinimumValue, (, localInstant, ), ;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ), {, return]
[., getMinimumValue, (, localInstant, ), ;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ), {, return, iField, ., getMinimumValue, (]
[getMinimumValue, (, instant, ), ;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return]
[getMinimumValue, (, instant, ), ;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return]
[;, }, public, int, getMinimumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return, iField, ., getMinimumValue, (]
[public, int, getMinimumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return, iField, ., getMinimumValue, (, instant, ,]
[), {, return, iField, ., getMinimumValue, (, instant, ,, values, ), ;, }, public, int, getMaximumValue, (, ), {, return]
[), {, return, iField, ., getMinimumValue, (, instant, ,, values, ), ;, }, public, int, getMaximumValue, (, ), {, return]
[{, return, iField, ., getMaximumValue, (, ), ;, }, public, int, getMaximumValue, (, long, instant, ), {, long, localInstant, =]
[{, return, iField, ., getMaximumValue, (, ), ;, }, public, int, getMaximumValue, (, long, instant, ), {, long, localInstant, =]
[getMaximumValue, (, ), ;, }, public, int, getMaximumValue, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (]
[}, public, int, getMaximumValue, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[}, public, int, getMaximumValue, (, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return]
[(, long, instant, ), {, long, localInstant, =, iZone, ., convertUTCToLocal, (, instant, ), ;, return, iField, ., getMaximumValue, (]
[), ;, return, iField, ., getMaximumValue, (, localInstant, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, return]
[), ;, return, iField, ., getMaximumValue, (, localInstant, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, return]
[., getMaximumValue, (, localInstant, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ), {, return, iField, ., getMaximumValue, (]
[getMaximumValue, (, instant, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return]
[getMaximumValue, (, instant, ), ;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return]
[;, }, public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return, iField, ., getMaximumValue, (]
[public, int, getMaximumValue, (, ReadablePartial, instant, ,, int, [, ], values, ), {, return, iField, ., getMaximumValue, (, instant, ,]
[return, iField, ., getMaximumValue, (, instant, ,, values, ), ;, }, public, int, getMaximumTextLength, (, Locale, locale, ), {, return]
[return, iField, ., getMaximumValue, (, instant, ,, values, ), ;, }, public, int, getMaximumTextLength, (, Locale, locale, ), {, return]
[(, instant, ,, values, ), ;, }, public, int, getMaximumTextLength, (, Locale, locale, ), {, return, iField, ., getMaximumTextLength, (]
[), {, return, iField, ., getMaximumTextLength, (, locale, ), ;, }, public, int, getMaximumShortTextLength, (, Locale, locale, ), {, return]
[), {, return, iField, ., getMaximumTextLength, (, locale, ), ;, }, public, int, getMaximumShortTextLength, (, Locale, locale, ), {, return]
[., getMaximumTextLength, (, locale, ), ;, }, public, int, getMaximumShortTextLength, (, Locale, locale, ), {, return, iField, ., getMaximumShortTextLength, (]
[return, iField, ., getMaximumShortTextLength, (, locale, ), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =]
[return, iField, ., getMaximumShortTextLength, (, locale, ), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =]
[return, iField, ., getMaximumShortTextLength, (, locale, ), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =]
[), ;, }, private, int, getOffsetToAdd, (, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffset, (]
[(, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =]
[(, long, instant, ), {, int, offset, =, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =]
[instant, ), {, int, offset, =, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +]
[offset, =, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (]
[offset, =, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (]
[offset, =, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (]
[=, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (]
[=, this, ., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (]
[., iZone, ., getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^]
[getOffset, (, instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <]
[instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&]
[instant, ), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&]
[), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (]
[), ;, long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (]
[long, sum, =, instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (, instant, ^]
[instant, +, offset, ;, if, (, (, instant, ^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=]
[if, (, (, instant, ^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw]
[instant, ^, sum, ), <, 0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (]
[0, &&, (, instant, ^, offset, ), >=, 0, ), {, throw, new, ArithmeticException, (, "Adding time zone offset caused overflow", ), ;, }, return]
["Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (]
["Adding time zone offset caused overflow", ), ;, }, return, offset, ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (]
[;, }, return, offset, ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, else, if, (]
[equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true, ;, }, else, if, (]
[this, ==, obj, ), {, return, true, ;, }, else, if, (, obj, instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =]
[), {, return, true, ;, }, else, if, (, obj, instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, )]
[true, ;, }, else, if, (, obj, instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, ), obj, ;, return]
[true, ;, }, else, if, (, obj, instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, ), obj, ;, return]
[true, ;, }, else, if, (, obj, instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, ), obj, ;, return]
[true, ;, }, else, if, (, obj, instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, ), obj, ;, return]
[true, ;, }, else, if, (, obj, instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, ), obj, ;, return]
[if, (, obj, instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, ), obj, ;, return, iField, ., equals, (]
[if, (, obj, instanceof, ZonedDateTimeField, ), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, ), obj, ;, return, iField, ., equals, (]
[), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, ), obj, ;, return, iField, ., equals, (, other, ., iField, ), &&]
[), {, ZonedDateTimeField, other, =, (, ZonedDateTimeField, ), obj, ;, return, iField, ., equals, (, other, ., iField, ), &&]
[=, (, ZonedDateTimeField, ), obj, ;, return, iField, ., equals, (, other, ., iField, ), &&, iZone, ., equals, (]
[=, (, ZonedDateTimeField, ), obj, ;, return, iField, ., equals, (, other, ., iField, ), &&, iZone, ., equals, (]
[;, return, iField, ., equals, (, other, ., iField, ), &&, iZone, ., equals, (, other, ., iZone, ), &&]
[;, return, iField, ., equals, (, other, ., iField, ), &&, iZone, ., equals, (, other, ., iZone, ), &&]
[equals, (, other, ., iField, ), &&, iZone, ., equals, (, other, ., iZone, ), &&, iDurationField, ., equals, (]
[equals, (, other, ., iField, ), &&, iZone, ., equals, (, other, ., iZone, ), &&, iDurationField, ., equals, (]
[), &&, iZone, ., equals, (, other, ., iZone, ), &&, iDurationField, ., equals, (, other, ., iDurationField, ), &&]
[), &&, iZone, ., equals, (, other, ., iZone, ), &&, iDurationField, ., equals, (, other, ., iDurationField, ), &&]
[equals, (, other, ., iZone, ), &&, iDurationField, ., equals, (, other, ., iDurationField, ), &&, iRangeDurationField, ., equals, (]
[equals, (, other, ., iZone, ), &&, iDurationField, ., equals, (, other, ., iDurationField, ), &&, iRangeDurationField, ., equals, (]
[iDurationField, ., equals, (, other, ., iDurationField, ), &&, iRangeDurationField, ., equals, (, other, ., iRangeDurationField, ), ;, }, return]
[(, other, ., iRangeDurationField, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return]
[(, other, ., iRangeDurationField, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return]
[(, other, ., iRangeDurationField, ), ;, }, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return]
[}, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, iField, ., hashCode, (, ), ^]
[}, return, false, ;, }, @, Override, public, int, hashCode, (, ), {, return, iField, ., hashCode, (, ), ^]
