[., io, ., Serializable, ;, public, abstract, class, TickUnit, implements, Comparable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[long, serialVersionUID, =, 510179855057013974L, ;, private, double, size, ;, private, int, minorTickCount, ;, public, TickUnit, (, double, size, ), {]
[long, serialVersionUID, =, 510179855057013974L, ;, private, double, size, ;, private, int, minorTickCount, ;, public, TickUnit, (, double, size, ), {]
[;, private, double, size, ;, private, int, minorTickCount, ;, public, TickUnit, (, double, size, ), {, this, ., size, =]
[size, ), {, this, ., size, =, size, ;, }, public, TickUnit, (, double, size, ,, int, minorTickCount, ), {]
[size, ), {, this, ., size, =, size, ;, }, public, TickUnit, (, double, size, ,, int, minorTickCount, ), {]
[., size, =, size, ;, }, public, TickUnit, (, double, size, ,, int, minorTickCount, ), {, this, ., size, =]
[=, size, ;, }, public, TickUnit, (, double, size, ,, int, minorTickCount, ), {, this, ., size, =, size, ;]
[=, size, ;, }, public, TickUnit, (, double, size, ,, int, minorTickCount, ), {, this, ., size, =, size, ;]
[public, TickUnit, (, double, size, ,, int, minorTickCount, ), {, this, ., size, =, size, ;, this, ., minorTickCount, =]
[this, ., size, =, size, ;, this, ., minorTickCount, =, minorTickCount, ;, }, public, double, getSize, (, ), {, return]
[this, ., size, =, size, ;, this, ., minorTickCount, =, minorTickCount, ;, }, public, double, getSize, (, ), {, return]
[}, public, double, getSize, (, ), {, return, this, ., size, ;, }, public, int, getMinorTickCount, (, ), {, return]
[}, public, double, getSize, (, ), {, return, this, ., size, ;, }, public, int, getMinorTickCount, (, ), {, return]
[int, getMinorTickCount, (, ), {, return, this, ., minorTickCount, ;, }, public, String, valueToString, (, double, value, ), {, return]
[int, getMinorTickCount, (, ), {, return, this, ., minorTickCount, ;, }, public, String, valueToString, (, double, value, ), {, return]
[{, return, this, ., minorTickCount, ;, }, public, String, valueToString, (, double, value, ), {, return, String, ., valueOf, (]
[{, return, String, ., valueOf, (, value, ), ;, }, public, int, compareTo, (, Object, object, ), {, if, (]
[{, return, String, ., valueOf, (, value, ), ;, }, public, int, compareTo, (, Object, object, ), {, if, (]
[;, }, public, int, compareTo, (, Object, object, ), {, if, (, object, instanceof, TickUnit, ), {, TickUnit, other, =]
[int, compareTo, (, Object, object, ), {, if, (, object, instanceof, TickUnit, ), {, TickUnit, other, =, (, TickUnit, )]
[object, ), {, if, (, object, instanceof, TickUnit, ), {, TickUnit, other, =, (, TickUnit, ), object, ;, if, (]
[object, ), {, if, (, object, instanceof, TickUnit, ), {, TickUnit, other, =, (, TickUnit, ), object, ;, if, (]
[object, ), {, if, (, object, instanceof, TickUnit, ), {, TickUnit, other, =, (, TickUnit, ), object, ;, if, (]
[(, object, instanceof, TickUnit, ), {, TickUnit, other, =, (, TickUnit, ), object, ;, if, (, this, ., size, >]
[(, object, instanceof, TickUnit, ), {, TickUnit, other, =, (, TickUnit, ), object, ;, if, (, this, ., size, >]
[=, (, TickUnit, ), object, ;, if, (, this, ., size, >, other, ., getSize, (, ), ), {, return]
[if, (, this, ., size, >, other, ., getSize, (, ), ), {, return, 1, ;, }, else, if, (]
[if, (, this, ., size, >, other, ., getSize, (, ), ), {, return, 1, ;, }, else, if, (]
[if, (, this, ., size, >, other, ., getSize, (, ), ), {, return, 1, ;, }, else, if, (]
[size, >, other, ., getSize, (, ), ), {, return, 1, ;, }, else, if, (, this, ., size, <]
[size, >, other, ., getSize, (, ), ), {, return, 1, ;, }, else, if, (, this, ., size, <]
[{, return, 1, ;, }, else, if, (, this, ., size, <, other, ., getSize, (, ), ), {, return]
[return, 1, ;, }, else, if, (, this, ., size, <, other, ., getSize, (, ), ), {, return, -]
[(, this, ., size, <, other, ., getSize, (, ), ), {, return, -, 1, ;, }, else, {, return]
[getSize, (, ), ), {, return, -, 1, ;, }, else, {, return, 0, ;, }, }, else, {, return]
[(, ), ), {, return, -, 1, ;, }, else, {, return, 0, ;, }, }, else, {, return, -]
[}, }, else, {, return, -, 1, ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[}, }, else, {, return, -, 1, ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[else, {, return, -, 1, ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[1, ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, TickUnit, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, TickUnit, ), ), {, return, false, ;, }, TickUnit, that, =]
[if, (, !, (, obj, instanceof, TickUnit, ), ), {, return, false, ;, }, TickUnit, that, =, (, TickUnit, )]
[obj, instanceof, TickUnit, ), ), {, return, false, ;, }, TickUnit, that, =, (, TickUnit, ), obj, ;, if, (]
[obj, instanceof, TickUnit, ), ), {, return, false, ;, }, TickUnit, that, =, (, TickUnit, ), obj, ;, if, (]
[obj, instanceof, TickUnit, ), ), {, return, false, ;, }, TickUnit, that, =, (, TickUnit, ), obj, ;, if, (]
[), {, return, false, ;, }, TickUnit, that, =, (, TickUnit, ), obj, ;, if, (, this, ., size, !=]
[), {, return, false, ;, }, TickUnit, that, =, (, TickUnit, ), obj, ;, if, (, this, ., size, !=]
[TickUnit, that, =, (, TickUnit, ), obj, ;, if, (, this, ., size, !=, that, ., size, ), {, return]
[), obj, ;, if, (, this, ., size, !=, that, ., size, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., size, !=, that, ., size, ), {, return, false, ;, }, if, (]
[), obj, ;, if, (, this, ., size, !=, that, ., size, ), {, return, false, ;, }, if, (]
[(, this, ., size, !=, that, ., size, ), {, return, false, ;, }, if, (, this, ., minorTickCount, !=]
[(, this, ., size, !=, that, ., size, ), {, return, false, ;, }, if, (, this, ., minorTickCount, !=]
[., size, ), {, return, false, ;, }, if, (, this, ., minorTickCount, !=, that, ., minorTickCount, ), {, return]
[return, false, ;, }, if, (, this, ., minorTickCount, !=, that, ., minorTickCount, ), {, return, false, ;, }, return]
[minorTickCount, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, long, temp, =]
[minorTickCount, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, long, temp, =]
[minorTickCount, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, long, temp, =]
[minorTickCount, ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, long, temp, =]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, long, temp, =, this, ., size, !=]
[;, }, return, true, ;, }, public, int, hashCode, (, ), {, long, temp, =, this, ., size, !=, +]
[return, true, ;, }, public, int, hashCode, (, ), {, long, temp, =, this, ., size, !=, +, 0.0d, ?]
[return, true, ;, }, public, int, hashCode, (, ), {, long, temp, =, this, ., size, !=, +, 0.0d, ?]
[public, int, hashCode, (, ), {, long, temp, =, this, ., size, !=, +, 0.0d, ?, Double, ., doubleToLongBits, (]
[public, int, hashCode, (, ), {, long, temp, =, this, ., size, !=, +, 0.0d, ?, Double, ., doubleToLongBits, (]
[{, long, temp, =, this, ., size, !=, +, 0.0d, ?, Double, ., doubleToLongBits, (, this, ., size, ), :]
[=, this, ., size, !=, +, 0.0d, ?, Double, ., doubleToLongBits, (, this, ., size, ), :, 0L, ;, return]
[size, !=, +, 0.0d, ?, Double, ., doubleToLongBits, (, this, ., size, ), :, 0L, ;, return, (, int, )]
[!=, +, 0.0d, ?, Double, ., doubleToLongBits, (, this, ., size, ), :, 0L, ;, return, (, int, ), (]
[!=, +, 0.0d, ?, Double, ., doubleToLongBits, (, this, ., size, ), :, 0L, ;, return, (, int, ), (]
[0.0d, ?, Double, ., doubleToLongBits, (, this, ., size, ), :, 0L, ;, return, (, int, ), (, temp, ^]
[?, Double, ., doubleToLongBits, (, this, ., size, ), :, 0L, ;, return, (, int, ), (, temp, ^, (]
[?, Double, ., doubleToLongBits, (, this, ., size, ), :, 0L, ;, return, (, int, ), (, temp, ^, (]
[(, this, ., size, ), :, 0L, ;, return, (, int, ), (, temp, ^, (, temp, >, >, >]
