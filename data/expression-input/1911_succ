[;, public, MultiBackgroundInitializer, (, ), {, super, (, ), ;, }, public, MultiBackgroundInitializer, (, final, ExecutorService, exec, ), {, super]
[), ;, }, public, void, addInitializer, (, final, String, name, ,, final, BackgroundInitializer, <, ?, >, init, ), {, if]
[), {, throw, new, IllegalArgumentException, (, "Name of child initializer must not be null!", ), ;, }, if, (, init, ==, null, ), {, throw, new, IllegalArgumentException]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Name of child initializer must not be null!", ), ;, }, if, (, init, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Name of child initializer must not be null!", ), ;, }, if, (, init, ==, null, ), {, throw, new, IllegalArgumentException]
[;, }, if, (, init, ==, null, ), {, throw, new, IllegalArgumentException, (, "Child initializer must not be null!", ), ;, }, synchronized, (, this]
[), ;, }, if, (, init, ==, null, ), {, throw, new, IllegalArgumentException, (, "Child initializer must not be null!", ), ;, }, synchronized, (]
[), {, throw, new, IllegalArgumentException, (, "Child initializer must not be null!", ), ;, }, synchronized, (, this, ), {, if, (, isStarted, (, )]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Child initializer must not be null!", ), ;, }, synchronized, (, this, ), {, if, (, isStarted]
[), {, throw, new, IllegalArgumentException, (, "Child initializer must not be null!", ), ;, }, synchronized, (, this, ), {, if, (, isStarted, (, )]
[;, }, synchronized, (, this, ), {, if, (, isStarted, (, ), ), {, throw, new, IllegalStateException, (, "addInitializer() must not be called after start()!", )]
[), ;, }, synchronized, (, this, ), {, if, (, isStarted, (, ), ), {, throw, new, IllegalStateException, (, "addInitializer() must not be called after start()!"]
[), {, if, (, isStarted, (, ), ), {, throw, new, IllegalStateException, (, "addInitializer() must not be called after start()!", ), ;, }, childInitializers, ., put]
[), {, throw, new, IllegalStateException, (, "addInitializer() must not be called after start()!", ), ;, }, childInitializers, ., put, (, name, ,, init, ), ;, }]
[;, }, childInitializers, ., put, (, name, ,, init, ), ;, }, }, @, Override, protected, int, getTaskCount, (, )]
[), ;, }, childInitializers, ., put, (, name, ,, init, ), ;, }, }, @, Override, protected, int, getTaskCount, (]
[;, }, }, @, Override, protected, int, getTaskCount, (, ), {, int, result, =, 1, ;, for, (, final, BackgroundInitializer]
[., put, (, name, ,, init, ), ;, }, }, @, Override, protected, int, getTaskCount, (, ), {, int, result]
[,, init, ), ;, }, }, @, Override, protected, int, getTaskCount, (, ), {, int, result, =, 1, ;, for]
[), ;, }, }, @, Override, protected, int, getTaskCount, (, ), {, int, result, =, 1, ;, for, (, final]
[;, for, (, final, BackgroundInitializer, <, ?, >, bi, :, childInitializers, ., values, (, ), ), {, result, +=, bi]
[), {, result, +=, bi, ., getTaskCount, (, ), ;, }, return, result, ;, }, @, Override, protected, MultiBackgroundInitializerResults, initialize]
[., values, (, ), ), {, result, +=, bi, ., getTaskCount, (, ), ;, }, return, result, ;, }, @]
[+=, bi, ., getTaskCount, (, ), ;, }, return, result, ;, }, @, Override, protected, MultiBackgroundInitializerResults, initialize, (, ), throws]
[;, }, return, result, ;, }, @, Override, protected, MultiBackgroundInitializerResults, initialize, (, ), throws, Exception, {, Map, <, String, ,]
[., getTaskCount, (, ), ;, }, return, result, ;, }, @, Override, protected, MultiBackgroundInitializerResults, initialize, (, ), throws, Exception, {]
[;, }, @, Override, protected, MultiBackgroundInitializerResults, initialize, (, ), throws, Exception, {, Map, <, String, ,, BackgroundInitializer, <, ?, >]
[), {, inits, =, new, HashMap, <, String, ,, BackgroundInitializer, <, ?, >, >, (, childInitializers, ), ;, }, final]
[=, new, HashMap, <, String, ,, BackgroundInitializer, <, ?, >, >, (, childInitializers, ), ;, }, final, ExecutorService, exec, =]
[;, }, final, ExecutorService, exec, =, getActiveExecutor, (, ), ;, for, (, final, BackgroundInitializer, <, ?, >, bi, :, inits]
[), ;, }, final, ExecutorService, exec, =, getActiveExecutor, (, ), ;, for, (, final, BackgroundInitializer, <, ?, >, bi, :]
[;, for, (, final, BackgroundInitializer, <, ?, >, bi, :, inits, ., values, (, ), ), {, if, (, bi]
[), {, if, (, bi, ., getExternalExecutor, (, ), ==, null, ), {, bi, ., setExternalExecutor, (, exec, ), ;]
[., values, (, ), ), {, if, (, bi, ., getExternalExecutor, (, ), ==, null, ), {, bi, ., setExternalExecutor]
[), {, bi, ., setExternalExecutor, (, exec, ), ;, }, bi, ., start, (, ), ;, }, final, Map, <]
[==, null, ), {, bi, ., setExternalExecutor, (, exec, ), ;, }, bi, ., start, (, ), ;, }, final]
[., getExternalExecutor, (, ), ==, null, ), {, bi, ., setExternalExecutor, (, exec, ), ;, }, bi, ., start, (]
[), {, bi, ., setExternalExecutor, (, exec, ), ;, }, bi, ., start, (, ), ;, }, final, Map, <]
[;, }, bi, ., start, (, ), ;, }, final, Map, <, String, ,, Object, >, results, =, new, HashMap]
[., setExternalExecutor, (, exec, ), ;, }, bi, ., start, (, ), ;, }, final, Map, <, String, ,, Object]
[), ;, }, bi, ., start, (, ), ;, }, final, Map, <, String, ,, Object, >, results, =, new]
[;, }, final, Map, <, String, ,, Object, >, results, =, new, HashMap, <, String, ,, Object, >, (, )]
[., start, (, ), ;, }, final, Map, <, String, ,, Object, >, results, =, new, HashMap, <, String, ,]
[;, final, Map, <, String, ,, ConcurrentException, >, excepts, =, new, HashMap, <, String, ,, ConcurrentException, >, (, ), ;]
[;, for, (, final, Map, ., Entry, <, String, ,, BackgroundInitializer, <, ?, >, >, e, :, inits, ., entrySet]
[), {, try, {, results, ., put, (, e, ., getKey, (, ), ,, e, ., getValue, (, ), .]
[., entrySet, (, ), ), {, try, {, results, ., put, (, e, ., getKey, (, ), ,, e, .]
[;, }, catch, (, final, ConcurrentException, cex, ), {, excepts, ., put, (, e, ., getKey, (, ), ,, cex]
[., put, (, e, ., getKey, (, ), ,, e, ., getValue, (, ), ., get, (, ), ), ;]
[,, e, ., getValue, (, ), ., get, (, ), ), ;, }, catch, (, final, ConcurrentException, cex, ), {]
[., getKey, (, ), ,, e, ., getValue, (, ), ., get, (, ), ), ;, }, catch, (, final]
[), ;, }, catch, (, final, ConcurrentException, cex, ), {, excepts, ., put, (, e, ., getKey, (, ), ,]
[., get, (, ), ), ;, }, catch, (, final, ConcurrentException, cex, ), {, excepts, ., put, (, e, .]
[., getValue, (, ), ., get, (, ), ), ;, }, catch, (, final, ConcurrentException, cex, ), {, excepts, .]
[;, }, }, return, new, MultiBackgroundInitializerResults, (, inits, ,, results, ,, excepts, ), ;, }, public, static, class, MultiBackgroundInitializerResults, {]
[., put, (, e, ., getKey, (, ), ,, cex, ), ;, }, }, return, new, MultiBackgroundInitializerResults, (, inits, ,]
[,, cex, ), ;, }, }, return, new, MultiBackgroundInitializerResults, (, inits, ,, results, ,, excepts, ), ;, }, public, static]
[., getKey, (, ), ,, cex, ), ;, }, }, return, new, MultiBackgroundInitializerResults, (, inits, ,, results, ,, excepts, )]
[), ;, }, }, return, new, MultiBackgroundInitializerResults, (, inits, ,, results, ,, excepts, ), ;, }, public, static, class, MultiBackgroundInitializerResults]
[;, }, public, static, class, MultiBackgroundInitializerResults, {, private, final, Map, <, String, ,, BackgroundInitializer, <, ?, >, >, initializers, ;]
[,, results, ,, excepts, ), ;, }, public, static, class, MultiBackgroundInitializerResults, {, private, final, Map, <, String, ,, BackgroundInitializer, <]
[,, excepts, ), ;, }, public, static, class, MultiBackgroundInitializerResults, {, private, final, Map, <, String, ,, BackgroundInitializer, <, ?, >]
[), ;, }, public, static, class, MultiBackgroundInitializerResults, {, private, final, Map, <, String, ,, BackgroundInitializer, <, ?, >, >, initializers]
[=, inits, ;, resultObjects, =, results, ;, exceptions, =, excepts, ;, }, public, BackgroundInitializer, <, ?, >, getInitializer, (, final]
[;, resultObjects, =, results, ;, exceptions, =, excepts, ;, }, public, BackgroundInitializer, <, ?, >, getInitializer, (, final, String, name]
[=, results, ;, exceptions, =, excepts, ;, }, public, BackgroundInitializer, <, ?, >, getInitializer, (, final, String, name, ), {]
[;, exceptions, =, excepts, ;, }, public, BackgroundInitializer, <, ?, >, getInitializer, (, final, String, name, ), {, return, checkName]
[=, excepts, ;, }, public, BackgroundInitializer, <, ?, >, getInitializer, (, final, String, name, ), {, return, checkName, (, name]
[;, }, public, BackgroundInitializer, <, ?, >, getInitializer, (, final, String, name, ), {, return, checkName, (, name, ), ;]
[;, }, public, Object, getResultObject, (, final, String, name, ), {, checkName, (, name, ), ;, return, resultObjects, ., get]
[), ;, }, public, Object, getResultObject, (, final, String, name, ), {, checkName, (, name, ), ;, return, resultObjects, .]
[;, return, resultObjects, ., get, (, name, ), ;, }, public, boolean, isException, (, final, String, name, ), {, checkName]
[), ;, return, resultObjects, ., get, (, name, ), ;, }, public, boolean, isException, (, final, String, name, ), {]
[;, }, public, boolean, isException, (, final, String, name, ), {, checkName, (, name, ), ;, return, exceptions, ., containsKey]
[., get, (, name, ), ;, }, public, boolean, isException, (, final, String, name, ), {, checkName, (, name, )]
[), ;, }, public, boolean, isException, (, final, String, name, ), {, checkName, (, name, ), ;, return, exceptions, .]
[;, return, exceptions, ., containsKey, (, name, ), ;, }, public, ConcurrentException, getException, (, final, String, name, ), {, checkName]
[), ;, return, exceptions, ., containsKey, (, name, ), ;, }, public, ConcurrentException, getException, (, final, String, name, ), {]
[;, }, public, ConcurrentException, getException, (, final, String, name, ), {, checkName, (, name, ), ;, return, exceptions, ., get]
[., containsKey, (, name, ), ;, }, public, ConcurrentException, getException, (, final, String, name, ), {, checkName, (, name, )]
[), ;, }, public, ConcurrentException, getException, (, final, String, name, ), {, checkName, (, name, ), ;, return, exceptions, .]
[;, return, exceptions, ., get, (, name, ), ;, }, public, Set, <, String, >, initializerNames, (, ), {, return]
[), ;, return, exceptions, ., get, (, name, ), ;, }, public, Set, <, String, >, initializerNames, (, ), {]
[;, }, public, Set, <, String, >, initializerNames, (, ), {, return, Collections, ., unmodifiableSet, (, initializers, ., keySet, (]
[., get, (, name, ), ;, }, public, Set, <, String, >, initializerNames, (, ), {, return, Collections, ., unmodifiableSet]
[), ;, }, public, Set, <, String, >, initializerNames, (, ), {, return, Collections, ., unmodifiableSet, (, initializers, ., keySet]
[;, }, public, boolean, isSuccessful, (, ), {, return, exceptions, ., isEmpty, (, ), ;, }, private, BackgroundInitializer, <, ?]
[., unmodifiableSet, (, initializers, ., keySet, (, ), ), ;, }, public, boolean, isSuccessful, (, ), {, return, exceptions, .]
[), ;, }, public, boolean, isSuccessful, (, ), {, return, exceptions, ., isEmpty, (, ), ;, }, private, BackgroundInitializer, <]
[., keySet, (, ), ), ;, }, public, boolean, isSuccessful, (, ), {, return, exceptions, ., isEmpty, (, ), ;]
[;, }, private, BackgroundInitializer, <, ?, >, checkName, (, final, String, name, ), {, final, BackgroundInitializer, <, ?, >, init]
[., isEmpty, (, ), ;, }, private, BackgroundInitializer, <, ?, >, checkName, (, final, String, name, ), {, final, BackgroundInitializer]
[;, if, (, init, ==, null, ), {, throw, new, NoSuchElementException, (, "No child initializer with name ", +, name, ), ;, }, return, init]
[., get, (, name, ), ;, if, (, init, ==, null, ), {, throw, new, NoSuchElementException, (, "No child initializer with name ", +, name]
[), ;, if, (, init, ==, null, ), {, throw, new, NoSuchElementException, (, "No child initializer with name ", +, name, ), ;, }, return]
[), {, throw, new, NoSuchElementException, (, "No child initializer with name ", +, name, ), ;, }, return, init, ;, }, }, }]
[==, null, ), {, throw, new, NoSuchElementException, (, "No child initializer with name ", +, name, ), ;, }, return, init, ;, }, }, }]
[), {, throw, new, NoSuchElementException, (, "No child initializer with name ", +, name, ), ;, }, return, init, ;, }, }, }]
[;, }, return, init, ;, }, }, }]
[), ;, }, return, init, ;, }, }, }]
[+, name, ), ;, }, return, init, ;, }, }, }]
[), ;, }, return, init, ;, }, }, }]
[;, }, }, }]
