[class, VectorSeriesCollection, extends, AbstractXYDataset, implements, VectorXYDataset, ,, PublicCloneable, ,, Serializable, {, private, List, data, ;, public, VectorSeriesCollection, (, ), {]
[class, VectorSeriesCollection, extends, AbstractXYDataset, implements, VectorXYDataset, ,, PublicCloneable, ,, Serializable, {, private, List, data, ;, public, VectorSeriesCollection, (, ), {]
[implements, VectorXYDataset, ,, PublicCloneable, ,, Serializable, {, private, List, data, ;, public, VectorSeriesCollection, (, ), {, this, ., data, =]
[new, java, ., util, ., ArrayList, (, ), ;, }, public, void, addSeries, (, VectorSeries, series, ), {, if, (]
[new, java, ., util, ., ArrayList, (, ), ;, }, public, void, addSeries, (, VectorSeries, series, ), {, if, (]
[., util, ., ArrayList, (, ), ;, }, public, void, addSeries, (, VectorSeries, series, ), {, if, (, series, ==]
[(, ), ;, }, public, void, addSeries, (, VectorSeries, series, ), {, if, (, series, ==, null, ), {, throw]
[}, public, void, addSeries, (, VectorSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, VectorSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }]
[(, VectorSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }]
[(, VectorSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }]
[(, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, this, ., data, ., add, (]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, this, ., data, ., add, (, series, ), ;]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, this, ., data, ., add, (, series, ), ;]
[new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (]
["Null 'series' argument.", ), ;, }, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;]
[;, }, this, ., data, ., add, (, series, ), ;, series, ., addChangeListener, (, this, ), ;, fireDatasetChanged, (]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, removeSeries, (, VectorSeries, series, ), {, if, (]
[;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, removeSeries, (, VectorSeries, series, ), {, if, (]
[(, new, DatasetChangeInfo, (, ), ), ;, }, public, boolean, removeSeries, (, VectorSeries, series, ), {, if, (, series, ==]
[), ), ;, }, public, boolean, removeSeries, (, VectorSeries, series, ), {, if, (, series, ==, null, ), {, throw]
[}, public, boolean, removeSeries, (, VectorSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, boolean, removed, =]
[), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, boolean, removed, =]
[), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, boolean, removed, =]
[null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, boolean, removed, =, this, ., data, ., remove, (]
[IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, boolean, removed, =, this, ., data, ., remove, (, series, ), ;, if, (]
[), ;, }, boolean, removed, =, this, ., data, ., remove, (, series, ), ;, if, (, removed, ), {]
[), ;, }, boolean, removed, =, this, ., data, ., remove, (, series, ), ;, if, (, removed, ), {]
[removed, =, this, ., data, ., remove, (, series, ), ;, if, (, removed, ), {, series, ., removeChangeListener, (]
[., data, ., remove, (, series, ), ;, if, (, removed, ), {, series, ., removeChangeListener, (, this, ), ;]
[., remove, (, series, ), ;, if, (, removed, ), {, series, ., removeChangeListener, (, this, ), ;, fireDatasetChanged, (]
[removed, ), {, series, ., removeChangeListener, (, this, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, return]
[(, ), ), ;, }, return, removed, ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =]
[), ;, }, return, removed, ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;]
[), ;, }, return, removed, ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;]
[}, return, removed, ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;, i, <]
[}, return, removed, ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;, i, <]
[}, return, removed, ;, }, public, void, removeAllSeries, (, ), {, for, (, int, i, =, 0, ;, i, <]
[(, ), {, for, (, int, i, =, 0, ;, i, <, this, ., data, ., size, (, ), ;]
[(, ), {, for, (, int, i, =, 0, ;, i, <, this, ., data, ., size, (, ), ;]
[=, 0, ;, i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, VectorSeries, series, =]
[i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, VectorSeries, series, =, (, VectorSeries, )]
[i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, VectorSeries, series, =, (, VectorSeries, )]
[i, <, this, ., data, ., size, (, ), ;, i, ++, ), {, VectorSeries, series, =, (, VectorSeries, )]
[size, (, ), ;, i, ++, ), {, VectorSeries, series, =, (, VectorSeries, ), this, ., data, ., get, (]
[;, i, ++, ), {, VectorSeries, series, =, (, VectorSeries, ), this, ., data, ., get, (, i, ), ;]
[;, i, ++, ), {, VectorSeries, series, =, (, VectorSeries, ), this, ., data, ., get, (, i, ), ;]
[{, VectorSeries, series, =, (, VectorSeries, ), this, ., data, ., get, (, i, ), ;, series, ., removeChangeListener, (]
[(, VectorSeries, ), this, ., data, ., get, (, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }]
[(, VectorSeries, ), this, ., data, ., get, (, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }]
[(, VectorSeries, ), this, ., data, ., get, (, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }]
[(, i, ), ;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (, ), ;]
[), ;, series, ., removeChangeListener, (, this, ), ;, }, this, ., data, ., clear, (, ), ;, fireDatasetChanged, (]
[clear, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, int, getSeriesCount, (, ), {, return]
[clear, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, int, getSeriesCount, (, ), {, return]
[clear, (, ), ;, fireDatasetChanged, (, new, DatasetChangeInfo, (, ), ), ;, }, public, int, getSeriesCount, (, ), {, return]
[return, this, ., data, ., size, (, ), ;, }, public, VectorSeries, getSeries, (, int, series, ), {, if, (]
[return, this, ., data, ., size, (, ), ;, }, public, VectorSeries, getSeries, (, int, series, ), {, if, (]
[this, ., data, ., size, (, ), ;, }, public, VectorSeries, getSeries, (, int, series, ), {, if, (, (]
[this, ., data, ., size, (, ), ;, }, public, VectorSeries, getSeries, (, int, series, ), {, if, (, (]
[data, ., size, (, ), ;, }, public, VectorSeries, getSeries, (, int, series, ), {, if, (, (, series, <]
[(, ), ;, }, public, VectorSeries, getSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||]
[), ;, }, public, VectorSeries, getSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[), ;, }, public, VectorSeries, getSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (]
[}, public, VectorSeries, getSeries, (, int, series, ), {, if, (, (, series, <, 0, ), ||, (, series, >=]
[), {, if, (, (, series, <, 0, ), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw]
[(, (, series, <, 0, ), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (]
[), ||, (, series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return]
[series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, VectorSeries, )]
[series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, VectorSeries, )]
[series, >=, getSeriesCount, (, ), ), ), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, VectorSeries, )]
[), {, throw, new, IllegalArgumentException, (, "Series index out of bounds", ), ;, }, return, (, VectorSeries, ), this, ., data, ., get, (]
[), this, ., data, ., get, (, series, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return]
[), this, ., data, ., get, (, series, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return]
[., data, ., get, (, series, ), ;, }, public, Comparable, getSeriesKey, (, int, series, ), {, return, getSeries, (]
[getSeries, (, series, ), ., getKey, (, ), ;, }, public, int, indexOf, (, VectorSeries, series, ), {, if, (]
[getSeries, (, series, ), ., getKey, (, ), ;, }, public, int, indexOf, (, VectorSeries, series, ), {, if, (]
[series, ), ., getKey, (, ), ;, }, public, int, indexOf, (, VectorSeries, series, ), {, if, (, series, ==]
[(, ), ;, }, public, int, indexOf, (, VectorSeries, series, ), {, if, (, series, ==, null, ), {, throw]
[}, public, int, indexOf, (, VectorSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (]
[VectorSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, return]
[VectorSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, return]
[VectorSeries, series, ), {, if, (, series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, return]
[series, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'series' argument.", ), ;, }, return, this, ., data, ., indexOf, (]
[return, this, ., data, ., indexOf, (, series, ), ;, }, public, int, getItemCount, (, int, series, ), {, return]
[return, this, ., data, ., indexOf, (, series, ), ;, }, public, int, getItemCount, (, int, series, ), {, return]
[., data, ., indexOf, (, series, ), ;, }, public, int, getItemCount, (, int, series, ), {, return, getSeries, (]
[., getItemCount, (, ), ;, }, public, double, getXValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =]
[), ;, }, public, double, getXValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[), ;, }, public, double, getXValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[), ;, }, public, double, getXValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[(, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, ), this, ., data, ., get, (]
[), {, VectorSeries, s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =]
[s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, )]
[s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, )]
[), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (]
[., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (, item, ), ;, return]
[., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (, item, ), ;, return]
[return, di, ., getXValue, (, ), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, return]
[getXValue, (, ), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, return, new, Double, (]
[), ;, }, public, Number, getX, (, int, series, ,, int, item, ), {, return, new, Double, (, getXValue, (]
[}, public, Number, getX, (, int, series, ,, int, item, ), {, return, new, Double, (, getXValue, (, series, ,]
[,, item, ), ), ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =]
[), ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[), ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[), ;, }, public, double, getYValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[(, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, ), this, ., data, ., get, (]
[), {, VectorSeries, s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =]
[s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, )]
[s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, )]
[), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (]
[., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (, item, ), ;, return]
[., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (, item, ), ;, return]
[return, di, ., getYValue, (, ), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return]
[getYValue, (, ), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (]
[), ;, }, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (, getYValue, (]
[}, public, Number, getY, (, int, series, ,, int, item, ), {, return, new, Double, (, getYValue, (, series, ,]
[,, item, ), ), ;, }, public, Vector, getVector, (, int, series, ,, int, item, ), {, VectorSeries, s, =]
[), ;, }, public, Vector, getVector, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[), ;, }, public, Vector, getVector, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[), ;, }, public, Vector, getVector, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[(, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, ), this, ., data, ., get, (]
[), {, VectorSeries, s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =]
[s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, )]
[s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, )]
[), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (]
[., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (, item, ), ;, return]
[., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (, item, ), ;, return]
[., getVector, (, ), ;, }, public, double, getVectorXValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =]
[), ;, }, public, double, getVectorXValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[), ;, }, public, double, getVectorXValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[), ;, }, public, double, getVectorXValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[(, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, ), this, ., data, ., get, (]
[), {, VectorSeries, s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =]
[s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, )]
[s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, )]
[), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (]
[., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (, item, ), ;, return]
[., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (, item, ), ;, return]
[., getVectorX, (, ), ;, }, public, double, getVectorYValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =]
[), ;, }, public, double, getVectorYValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[), ;, }, public, double, getVectorYValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[), ;, }, public, double, getVectorYValue, (, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, )]
[(, int, series, ,, int, item, ), {, VectorSeries, s, =, (, VectorSeries, ), this, ., data, ., get, (]
[), {, VectorSeries, s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =]
[s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, )]
[s, =, (, VectorSeries, ), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, )]
[), this, ., data, ., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (]
[., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (, item, ), ;, return]
[., get, (, series, ), ;, VectorDataItem, di, =, (, VectorDataItem, ), s, ., getDataItem, (, item, ), ;, return]
[), ;, return, di, ., getVectorY, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), ;, return, di, ., getVectorY, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[return, di, ., getVectorY, (, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[(, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, VectorSeriesCollection, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, VectorSeriesCollection, ), ), {, return, false, ;, }, VectorSeriesCollection, that, =]
[if, (, !, (, obj, instanceof, VectorSeriesCollection, ), ), {, return, false, ;, }, VectorSeriesCollection, that, =, (, VectorSeriesCollection, )]
[(, obj, instanceof, VectorSeriesCollection, ), ), {, return, false, ;, }, VectorSeriesCollection, that, =, (, VectorSeriesCollection, ), obj, ;, return]
[(, obj, instanceof, VectorSeriesCollection, ), ), {, return, false, ;, }, VectorSeriesCollection, that, =, (, VectorSeriesCollection, ), obj, ;, return]
[), ), {, return, false, ;, }, VectorSeriesCollection, that, =, (, VectorSeriesCollection, ), obj, ;, return, ObjectUtilities, ., equal, (]
[), ), {, return, false, ;, }, VectorSeriesCollection, that, =, (, VectorSeriesCollection, ), obj, ;, return, ObjectUtilities, ., equal, (]
[false, ;, }, VectorSeriesCollection, that, =, (, VectorSeriesCollection, ), obj, ;, return, ObjectUtilities, ., equal, (, this, ., data, ,]
[false, ;, }, VectorSeriesCollection, that, =, (, VectorSeriesCollection, ), obj, ;, return, ObjectUtilities, ., equal, (, this, ., data, ,]
[., data, ,, that, ., data, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, VectorSeriesCollection, clone, =]
[that, ., data, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, VectorSeriesCollection, clone, =, (, VectorSeriesCollection, )]
[that, ., data, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, VectorSeriesCollection, clone, =, (, VectorSeriesCollection, )]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, VectorSeriesCollection, clone, =, (, VectorSeriesCollection, ), super, ., clone, (, ), ;]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, VectorSeriesCollection, clone, =, (, VectorSeriesCollection, ), super, ., clone, (, ), ;]
[), throws, CloneNotSupportedException, {, VectorSeriesCollection, clone, =, (, VectorSeriesCollection, ), super, ., clone, (, ), ;, clone, ., data, =]
[{, VectorSeriesCollection, clone, =, (, VectorSeriesCollection, ), super, ., clone, (, ), ;, clone, ., data, =, (, List, )]
[{, VectorSeriesCollection, clone, =, (, VectorSeriesCollection, ), super, ., clone, (, ), ;, clone, ., data, =, (, List, )]
[(, VectorSeriesCollection, ), super, ., clone, (, ), ;, clone, ., data, =, (, List, ), ObjectUtilities, ., deepClone, (]
[(, VectorSeriesCollection, ), super, ., clone, (, ), ;, clone, ., data, =, (, List, ), ObjectUtilities, ., deepClone, (]
[(, ), ;, clone, ., data, =, (, List, ), ObjectUtilities, ., deepClone, (, this, ., data, ), ;, return]
