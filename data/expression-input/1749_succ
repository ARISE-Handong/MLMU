[;, private, final, Chronology, iBase, ;, public, static, DateTimeField, getInstance, (, DateTimeField, field, ,, Chronology, base, ), {, if, (]
[), {, return, null, ;, }, if, (, field, instanceof, StrictDateTimeField, ), {, field, =, (, (, StrictDateTimeField, ), field]
[==, null, ), {, return, null, ;, }, if, (, field, instanceof, StrictDateTimeField, ), {, field, =, (, (, StrictDateTimeField]
[), {, return, null, ;, }, if, (, field, instanceof, StrictDateTimeField, ), {, field, =, (, (, StrictDateTimeField, ), field]
[;, }, if, (, field, instanceof, StrictDateTimeField, ), {, field, =, (, (, StrictDateTimeField, ), field, ), ., getWrappedField, (]
[), {, field, =, (, (, StrictDateTimeField, ), field, ), ., getWrappedField, (, ), ;, }, if, (, field, .]
[instanceof, StrictDateTimeField, ), {, field, =, (, (, StrictDateTimeField, ), field, ), ., getWrappedField, (, ), ;, }, if, (]
[=, (, (, StrictDateTimeField, ), field, ), ., getWrappedField, (, ), ;, }, if, (, field, ., isLenient, (, )]
[;, }, if, (, field, ., isLenient, (, ), ), {, return, field, ;, }, return, new, LenientDateTimeField, (, field]
[., getWrappedField, (, ), ;, }, if, (, field, ., isLenient, (, ), ), {, return, field, ;, }, return]
[), ., getWrappedField, (, ), ;, }, if, (, field, ., isLenient, (, ), ), {, return, field, ;, }]
[), ., getWrappedField, (, ), ;, }, if, (, field, ., isLenient, (, ), ), {, return, field, ;, }]
[), {, return, field, ;, }, return, new, LenientDateTimeField, (, field, ,, base, ), ;, }, protected, LenientDateTimeField, (, DateTimeField]
[., isLenient, (, ), ), {, return, field, ;, }, return, new, LenientDateTimeField, (, field, ,, base, ), ;, }]
[;, }, return, new, LenientDateTimeField, (, field, ,, base, ), ;, }, protected, LenientDateTimeField, (, DateTimeField, field, ,, Chronology, base]
[;, }, protected, LenientDateTimeField, (, DateTimeField, field, ,, Chronology, base, ), {, super, (, field, ), ;, iBase, =, base]
[,, base, ), ;, }, protected, LenientDateTimeField, (, DateTimeField, field, ,, Chronology, base, ), {, super, (, field, ), ;]
[), ;, }, protected, LenientDateTimeField, (, DateTimeField, field, ,, Chronology, base, ), {, super, (, field, ), ;, iBase, =]
[), ;, iBase, =, base, ;, }, public, final, boolean, isLenient, (, ), {, return, true, ;, }, public, long]
[=, base, ;, }, public, final, boolean, isLenient, (, ), {, return, true, ;, }, public, long, set, (, long]
[;, }, public, final, boolean, isLenient, (, ), {, return, true, ;, }, public, long, set, (, long, instant, ,]
[;, }, public, long, set, (, long, instant, ,, int, value, ), {, long, localInstant, =, iBase, ., getZone, (]
[;, long, difference, =, FieldUtils, ., safeSubtract, (, value, ,, get, (, instant, ), ), ;, localInstant, =, getType, (]
[., convertUTCToLocal, (, instant, ), ;, long, difference, =, FieldUtils, ., safeSubtract, (, value, ,, get, (, instant, ), )]
[., getZone, (, ), ., convertUTCToLocal, (, instant, ), ;, long, difference, =, FieldUtils, ., safeSubtract, (, value, ,, get]
[), ;, long, difference, =, FieldUtils, ., safeSubtract, (, value, ,, get, (, instant, ), ), ;, localInstant, =, getType]
[;, localInstant, =, getType, (, ), ., getField, (, iBase, ., withUTC, (, ), ), ., add, (, localInstant, ,]
[., safeSubtract, (, value, ,, get, (, instant, ), ), ;, localInstant, =, getType, (, ), ., getField, (, iBase]
[,, get, (, instant, ), ), ;, localInstant, =, getType, (, ), ., getField, (, iBase, ., withUTC, (, )]
[), ;, localInstant, =, getType, (, ), ., getField, (, iBase, ., withUTC, (, ), ), ., add, (, localInstant]
[), ), ;, localInstant, =, getType, (, ), ., getField, (, iBase, ., withUTC, (, ), ), ., add, (]
[=, getType, (, ), ., getField, (, iBase, ., withUTC, (, ), ), ., add, (, localInstant, ,, difference, )]
[;, return, iBase, ., getZone, (, ), ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }]
[., add, (, localInstant, ,, difference, ), ;, return, iBase, ., getZone, (, ), ., convertLocalToUTC, (, localInstant, ,, false]
[., getField, (, iBase, ., withUTC, (, ), ), ., add, (, localInstant, ,, difference, ), ;, return, iBase, .]
[), ., add, (, localInstant, ,, difference, ), ;, return, iBase, ., getZone, (, ), ., convertLocalToUTC, (, localInstant, ,]
[., withUTC, (, ), ), ., add, (, localInstant, ,, difference, ), ;, return, iBase, ., getZone, (, ), .]
[,, difference, ), ;, return, iBase, ., getZone, (, ), ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;]
[), ;, return, iBase, ., getZone, (, ), ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }]
[;, }, }]
[., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }]
[., getZone, (, ), ., convertLocalToUTC, (, localInstant, ,, false, ,, instant, ), ;, }, }]
[,, false, ,, instant, ), ;, }, }]
[,, instant, ), ;, }, }]
[), ;, }, }]
