[), {, super, (, ), ;, }, public, PolyhedronsSet, (, final, BSPTree, <, Euclidean3D, >, tree, ), {, super, (]
[tree, ), ;, }, public, PolyhedronsSet, (, final, Collection, <, SubHyperplane, <, Euclidean3D, >, >, boundary, ), {, super, (]
[,, final, double, yMin, ,, final, double, yMax, ,, final, double, zMin, ,, final, double, zMax, ), {, super, (]
[double, yMin, ,, final, double, yMax, ,, final, double, zMin, ,, final, double, zMax, ), {, super, (, buildBoundary, (]
[,, final, double, yMax, ,, final, double, zMin, ,, final, double, zMax, ), {, super, (, buildBoundary, (, xMin, ,]
[double, yMax, ,, final, double, zMin, ,, final, double, zMax, ), {, super, (, buildBoundary, (, xMin, ,, xMax, ,]
[,, final, double, zMin, ,, final, double, zMax, ), {, super, (, buildBoundary, (, xMin, ,, xMax, ,, yMin, ,]
[double, zMin, ,, final, double, zMax, ), {, super, (, buildBoundary, (, xMin, ,, xMax, ,, yMin, ,, yMax, ,]
[,, final, double, zMax, ), {, super, (, buildBoundary, (, xMin, ,, xMax, ,, yMin, ,, yMax, ,, zMin, ,]
[double, yMin, ,, final, double, yMax, ,, final, double, zMin, ,, final, double, zMax, ), {, final, Plane, pxMin, =]
[final, double, yMax, ,, final, double, zMin, ,, final, double, zMax, ), {, final, Plane, pxMin, =, new, Plane, (]
[,, final, double, zMin, ,, final, double, zMax, ), {, final, Plane, pxMin, =, new, Plane, (, new, Vector3D, (]
[double, zMin, ,, final, double, zMax, ), {, final, Plane, pxMin, =, new, Plane, (, new, Vector3D, (, xMin, ,]
[,, final, double, zMax, ), {, final, Plane, pxMin, =, new, Plane, (, new, Vector3D, (, xMin, ,, 0, ,]
[zMax, ), {, final, Plane, pxMin, =, new, Plane, (, new, Vector3D, (, xMin, ,, 0, ,, 0, ), ,]
[zMax, ), {, final, Plane, pxMin, =, new, Plane, (, new, Vector3D, (, xMin, ,, 0, ,, 0, ), ,]
[(, new, Vector3D, (, xMin, ,, 0, ,, 0, ), ,, Vector3D, ., MINUS_I, ), ;, final, Plane, pxMax, =]
[(, xMin, ,, 0, ,, 0, ), ,, Vector3D, ., MINUS_I, ), ;, final, Plane, pxMax, =, new, Plane, (]
[0, ,, 0, ), ,, Vector3D, ., MINUS_I, ), ;, final, Plane, pxMax, =, new, Plane, (, new, Vector3D, (]
[0, ), ,, Vector3D, ., MINUS_I, ), ;, final, Plane, pxMax, =, new, Plane, (, new, Vector3D, (, xMax, ,]
[,, Vector3D, ., MINUS_I, ), ;, final, Plane, pxMax, =, new, Plane, (, new, Vector3D, (, xMax, ,, 0, ,]
[MINUS_I, ), ;, final, Plane, pxMax, =, new, Plane, (, new, Vector3D, (, xMax, ,, 0, ,, 0, ), ,]
[MINUS_I, ), ;, final, Plane, pxMax, =, new, Plane, (, new, Vector3D, (, xMax, ,, 0, ,, 0, ), ,]
[(, new, Vector3D, (, xMax, ,, 0, ,, 0, ), ,, Vector3D, ., PLUS_I, ), ;, final, Plane, pyMin, =]
[(, xMax, ,, 0, ,, 0, ), ,, Vector3D, ., PLUS_I, ), ;, final, Plane, pyMin, =, new, Plane, (]
[0, ,, 0, ), ,, Vector3D, ., PLUS_I, ), ;, final, Plane, pyMin, =, new, Plane, (, new, Vector3D, (]
[0, ), ,, Vector3D, ., PLUS_I, ), ;, final, Plane, pyMin, =, new, Plane, (, new, Vector3D, (, 0, ,]
[,, Vector3D, ., PLUS_I, ), ;, final, Plane, pyMin, =, new, Plane, (, new, Vector3D, (, 0, ,, yMin, ,]
[PLUS_I, ), ;, final, Plane, pyMin, =, new, Plane, (, new, Vector3D, (, 0, ,, yMin, ,, 0, ), ,]
[PLUS_I, ), ;, final, Plane, pyMin, =, new, Plane, (, new, Vector3D, (, 0, ,, yMin, ,, 0, ), ,]
[(, new, Vector3D, (, 0, ,, yMin, ,, 0, ), ,, Vector3D, ., MINUS_J, ), ;, final, Plane, pyMax, =]
[(, 0, ,, yMin, ,, 0, ), ,, Vector3D, ., MINUS_J, ), ;, final, Plane, pyMax, =, new, Plane, (]
[yMin, ,, 0, ), ,, Vector3D, ., MINUS_J, ), ;, final, Plane, pyMax, =, new, Plane, (, new, Vector3D, (]
[0, ), ,, Vector3D, ., MINUS_J, ), ;, final, Plane, pyMax, =, new, Plane, (, new, Vector3D, (, 0, ,]
[,, Vector3D, ., MINUS_J, ), ;, final, Plane, pyMax, =, new, Plane, (, new, Vector3D, (, 0, ,, yMax, ,]
[MINUS_J, ), ;, final, Plane, pyMax, =, new, Plane, (, new, Vector3D, (, 0, ,, yMax, ,, 0, ), ,]
[MINUS_J, ), ;, final, Plane, pyMax, =, new, Plane, (, new, Vector3D, (, 0, ,, yMax, ,, 0, ), ,]
[(, new, Vector3D, (, 0, ,, yMax, ,, 0, ), ,, Vector3D, ., PLUS_J, ), ;, final, Plane, pzMin, =]
[(, 0, ,, yMax, ,, 0, ), ,, Vector3D, ., PLUS_J, ), ;, final, Plane, pzMin, =, new, Plane, (]
[yMax, ,, 0, ), ,, Vector3D, ., PLUS_J, ), ;, final, Plane, pzMin, =, new, Plane, (, new, Vector3D, (]
[0, ), ,, Vector3D, ., PLUS_J, ), ;, final, Plane, pzMin, =, new, Plane, (, new, Vector3D, (, 0, ,]
[,, Vector3D, ., PLUS_J, ), ;, final, Plane, pzMin, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,]
[PLUS_J, ), ;, final, Plane, pzMin, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,, zMin, ), ,]
[PLUS_J, ), ;, final, Plane, pzMin, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,, zMin, ), ,]
[(, new, Vector3D, (, 0, ,, 0, ,, zMin, ), ,, Vector3D, ., MINUS_K, ), ;, final, Plane, pzMax, =]
[(, 0, ,, 0, ,, zMin, ), ,, Vector3D, ., MINUS_K, ), ;, final, Plane, pzMax, =, new, Plane, (]
[0, ,, zMin, ), ,, Vector3D, ., MINUS_K, ), ;, final, Plane, pzMax, =, new, Plane, (, new, Vector3D, (]
[zMin, ), ,, Vector3D, ., MINUS_K, ), ;, final, Plane, pzMax, =, new, Plane, (, new, Vector3D, (, 0, ,]
[,, Vector3D, ., MINUS_K, ), ;, final, Plane, pzMax, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,]
[MINUS_K, ), ;, final, Plane, pzMax, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,, zMax, ), ,]
[MINUS_K, ), ;, final, Plane, pzMax, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,, zMax, ), ,]
[pzMax, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,, zMax, ), ,, Vector3D, ., PLUS_K, ), ;]
[Plane, (, new, Vector3D, (, 0, ,, 0, ,, zMax, ), ,, Vector3D, ., PLUS_K, ), ;, @, SuppressWarnings, (]
[zMax, ), ,, Vector3D, ., PLUS_K, ), ;, @, SuppressWarnings, (, "unchecked", ), final, Region, <, Euclidean3D, >, boundary, =]
[zMax, ), ,, Vector3D, ., PLUS_K, ), ;, @, SuppressWarnings, (, "unchecked", ), final, Region, <, Euclidean3D, >, boundary, =]
[(, "unchecked", ), final, Region, <, Euclidean3D, >, boundary, =, new, RegionFactory, <, Euclidean3D, >, (, ), ., buildConvex, (]
[), final, Region, <, Euclidean3D, >, boundary, =, new, RegionFactory, <, Euclidean3D, >, (, ), ., buildConvex, (, pxMin, ,]
[Region, <, Euclidean3D, >, boundary, =, new, RegionFactory, <, Euclidean3D, >, (, ), ., buildConvex, (, pxMin, ,, pxMax, ,]
[Euclidean3D, >, boundary, =, new, RegionFactory, <, Euclidean3D, >, (, ), ., buildConvex, (, pxMin, ,, pxMax, ,, pyMin, ,]
[boundary, =, new, RegionFactory, <, Euclidean3D, >, (, ), ., buildConvex, (, pxMin, ,, pxMax, ,, pyMin, ,, pyMax, ,]
[new, RegionFactory, <, Euclidean3D, >, (, ), ., buildConvex, (, pxMin, ,, pxMax, ,, pyMin, ,, pyMax, ,, pzMin, ,]
[>, (, ), ., buildConvex, (, pxMin, ,, pxMax, ,, pyMin, ,, pyMax, ,, pzMin, ,, pzMax, ), ;, return]
[>, (, ), ., buildConvex, (, pxMin, ,, pxMax, ,, pyMin, ,, pyMax, ,, pzMin, ,, pzMax, ), ;, return]
[buildConvex, (, pxMin, ,, pxMax, ,, pyMin, ,, pyMax, ,, pzMin, ,, pzMax, ), ;, return, boundary, ., getTree, (]
[(, false, ), ;, }, @, Override, public, PolyhedronsSet, buildNew, (, final, BSPTree, <, Euclidean3D, >, tree, ), {, return]
[;, }, @, Override, public, PolyhedronsSet, buildNew, (, final, BSPTree, <, Euclidean3D, >, tree, ), {, return, new, PolyhedronsSet, (]
[>, tree, ), {, return, new, PolyhedronsSet, (, tree, ), ;, }, @, Override, protected, void, computeGeometricalProperties, (, ), {]
[>, tree, ), {, return, new, PolyhedronsSet, (, tree, ), ;, }, @, Override, protected, void, computeGeometricalProperties, (, ), {]
[), {, return, new, PolyhedronsSet, (, tree, ), ;, }, @, Override, protected, void, computeGeometricalProperties, (, ), {, getTree, (]
[(, tree, ), ;, }, @, Override, protected, void, computeGeometricalProperties, (, ), {, getTree, (, true, ), ., visit, (]
[void, computeGeometricalProperties, (, ), {, getTree, (, true, ), ., visit, (, new, FacetsContributionVisitor, (, ), ), ;, if, (]
[void, computeGeometricalProperties, (, ), {, getTree, (, true, ), ., visit, (, new, FacetsContributionVisitor, (, ), ), ;, if, (]
[{, getTree, (, true, ), ., visit, (, new, FacetsContributionVisitor, (, ), ), ;, if, (, getSize, (, ), <]
[true, ), ., visit, (, new, FacetsContributionVisitor, (, ), ), ;, if, (, getSize, (, ), <, 0, ), {]
[., visit, (, new, FacetsContributionVisitor, (, ), ), ;, if, (, getSize, (, ), <, 0, ), {, setSize, (]
[., visit, (, new, FacetsContributionVisitor, (, ), ), ;, if, (, getSize, (, ), <, 0, ), {, setSize, (]
[(, ), ), ;, if, (, getSize, (, ), <, 0, ), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;]
[), ;, if, (, getSize, (, ), <, 0, ), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (]
[), ;, if, (, getSize, (, ), <, 0, ), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (]
[0, ), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {]
[{, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, setSize, (]
[{, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, setSize, (]
[., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, setSize, (, getSize, (, ), /]
[;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, setSize, (, getSize, (, ), /, 3.0, ), ;]
[(, Vector3D, ., NaN, ), ;, }, else, {, setSize, (, getSize, (, ), /, 3.0, ), ;, setBarycenter, (]
[NaN, ), ;, }, else, {, setSize, (, getSize, (, ), /, 3.0, ), ;, setBarycenter, (, new, Vector3D, (]
[NaN, ), ;, }, else, {, setSize, (, getSize, (, ), /, 3.0, ), ;, setBarycenter, (, new, Vector3D, (]
[;, }, else, {, setSize, (, getSize, (, ), /, 3.0, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, /]
[}, else, {, setSize, (, getSize, (, ), /, 3.0, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, /, (]
[}, else, {, setSize, (, getSize, (, ), /, 3.0, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, /, (]
[{, setSize, (, getSize, (, ), /, 3.0, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, /, (, 4, *]
[), /, 3.0, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, /, (, 4, *, getSize, (, ), ), ,]
[), ;, setBarycenter, (, new, Vector3D, (, 1.0, /, (, 4, *, getSize, (, ), ), ,, (, Vector3D, )]
[), ), ), ;, }, }, private, class, FacetsContributionVisitor, implements, BSPTreeVisitor, <, Euclidean3D, >, {, public, FacetsContributionVisitor, (, ), {]
[), ;, }, }, private, class, FacetsContributionVisitor, implements, BSPTreeVisitor, <, Euclidean3D, >, {, public, FacetsContributionVisitor, (, ), {, setSize, (]
[}, private, class, FacetsContributionVisitor, implements, BSPTreeVisitor, <, Euclidean3D, >, {, public, FacetsContributionVisitor, (, ), {, setSize, (, 0, ), ;]
[class, FacetsContributionVisitor, implements, BSPTreeVisitor, <, Euclidean3D, >, {, public, FacetsContributionVisitor, (, ), {, setSize, (, 0, ), ;, setBarycenter, (]
[BSPTreeVisitor, <, Euclidean3D, >, {, public, FacetsContributionVisitor, (, ), {, setSize, (, 0, ), ;, setBarycenter, (, new, Vector3D, (]
[Euclidean3D, >, {, public, FacetsContributionVisitor, (, ), {, setSize, (, 0, ), ;, setBarycenter, (, new, Vector3D, (, 0, ,]
[{, public, FacetsContributionVisitor, (, ), {, setSize, (, 0, ), ;, setBarycenter, (, new, Vector3D, (, 0, ,, 0, ,]
[0, ,, 0, ), ), ;, }, public, Order, visitOrder, (, final, BSPTree, <, Euclidean3D, >, node, ), {, return]
[0, ,, 0, ), ), ;, }, public, Order, visitOrder, (, final, BSPTree, <, Euclidean3D, >, node, ), {, return]
[), {, return, Order, ., MINUS_SUB_PLUS, ;, }, public, void, visitInternalNode, (, final, BSPTree, <, Euclidean3D, >, node, ), {]
[Order, ., MINUS_SUB_PLUS, ;, }, public, void, visitInternalNode, (, final, BSPTree, <, Euclidean3D, >, node, ), {, @, SuppressWarnings, (]
[final, BSPTree, <, Euclidean3D, >, node, ), {, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, Euclidean3D, >, attribute, =]
[), {, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, )]
[), {, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, )]
[BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;, if, (]
[BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;, if, (]
[BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;, if, (]
[(, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;, if, (, attribute, ., getPlusOutside, (, ), !=]
[Euclidean3D, >, ), node, ., getAttribute, (, ), ;, if, (, attribute, ., getPlusOutside, (, ), !=, null, ), {]
[), node, ., getAttribute, (, ), ;, if, (, attribute, ., getPlusOutside, (, ), !=, null, ), {, addContribution, (]
[), node, ., getAttribute, (, ), ;, if, (, attribute, ., getPlusOutside, (, ), !=, null, ), {, addContribution, (]
[;, if, (, attribute, ., getPlusOutside, (, ), !=, null, ), {, addContribution, (, attribute, ., getPlusOutside, (, ), ,]
[(, ), !=, null, ), {, addContribution, (, attribute, ., getPlusOutside, (, ), ,, false, ), ;, }, if, (]
[(, ), !=, null, ), {, addContribution, (, attribute, ., getPlusOutside, (, ), ,, false, ), ;, }, if, (]
[(, ), !=, null, ), {, addContribution, (, attribute, ., getPlusOutside, (, ), ,, false, ), ;, }, if, (]
[addContribution, (, attribute, ., getPlusOutside, (, ), ,, false, ), ;, }, if, (, attribute, ., getPlusInside, (, ), !=]
[., getPlusOutside, (, ), ,, false, ), ;, }, if, (, attribute, ., getPlusInside, (, ), !=, null, ), {]
[(, ), ,, false, ), ;, }, if, (, attribute, ., getPlusInside, (, ), !=, null, ), {, addContribution, (]
[(, ), ,, false, ), ;, }, if, (, attribute, ., getPlusInside, (, ), !=, null, ), {, addContribution, (]
[}, if, (, attribute, ., getPlusInside, (, ), !=, null, ), {, addContribution, (, attribute, ., getPlusInside, (, ), ,]
[(, final, SubHyperplane, <, Euclidean3D, >, facet, ,, final, boolean, reversed, ), {, final, Region, <, Euclidean2D, >, polygon, =]
[(, final, SubHyperplane, <, Euclidean3D, >, facet, ,, final, boolean, reversed, ), {, final, Region, <, Euclidean2D, >, polygon, =]
[final, SubHyperplane, <, Euclidean3D, >, facet, ,, final, boolean, reversed, ), {, final, Region, <, Euclidean2D, >, polygon, =, (]
[Euclidean3D, >, facet, ,, final, boolean, reversed, ), {, final, Region, <, Euclidean2D, >, polygon, =, (, (, SubPlane, )]
[<, Euclidean2D, >, polygon, =, (, (, SubPlane, ), facet, ), ., getRemainingRegion, (, ), ;, final, double, area, =]
[<, Euclidean2D, >, polygon, =, (, (, SubPlane, ), facet, ), ., getRemainingRegion, (, ), ;, final, double, area, =]
[), facet, ), ., getRemainingRegion, (, ), ;, final, double, area, =, polygon, ., getSize, (, ), ;, if, (]
[), facet, ), ., getRemainingRegion, (, ), ;, final, double, area, =, polygon, ., getSize, (, ), ;, if, (]
[getRemainingRegion, (, ), ;, final, double, area, =, polygon, ., getSize, (, ), ;, if, (, Double, ., isInfinite, (]
[final, double, area, =, polygon, ., getSize, (, ), ;, if, (, Double, ., isInfinite, (, area, ), ), {]
[area, =, polygon, ., getSize, (, ), ;, if, (, Double, ., isInfinite, (, area, ), ), {, setSize, (]
[area, =, polygon, ., getSize, (, ), ;, if, (, Double, ., isInfinite, (, area, ), ), {, setSize, (]
[(, ), ;, if, (, Double, ., isInfinite, (, area, ), ), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;]
[;, if, (, Double, ., isInfinite, (, area, ), ), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (]
[;, if, (, Double, ., isInfinite, (, area, ), ), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (]
[(, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, final, Plane, plane, =]
[POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, final, Plane, plane, =, (, Plane, )]
[POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, final, Plane, plane, =, (, Plane, )]
[}, else, {, final, Plane, plane, =, (, Plane, ), facet, ., getHyperplane, (, ), ;, final, Vector3D, facetB, =]
[}, else, {, final, Plane, plane, =, (, Plane, ), facet, ., getHyperplane, (, ), ;, final, Vector3D, facetB, =]
[Plane, plane, =, (, Plane, ), facet, ., getHyperplane, (, ), ;, final, Vector3D, facetB, =, plane, ., toSpace, (]
[Plane, plane, =, (, Plane, ), facet, ., getHyperplane, (, ), ;, final, Vector3D, facetB, =, plane, ., toSpace, (]
[), ;, final, Vector3D, facetB, =, plane, ., toSpace, (, polygon, ., getBarycenter, (, ), ), ;, double, scaled, =]
[), ;, final, Vector3D, facetB, =, plane, ., toSpace, (, polygon, ., getBarycenter, (, ), ), ;, double, scaled, =]
[final, Vector3D, facetB, =, plane, ., toSpace, (, polygon, ., getBarycenter, (, ), ), ;, double, scaled, =, area, *]
[final, Vector3D, facetB, =, plane, ., toSpace, (, polygon, ., getBarycenter, (, ), ), ;, double, scaled, =, area, *]
[plane, ., toSpace, (, polygon, ., getBarycenter, (, ), ), ;, double, scaled, =, area, *, facetB, ., dotProduct, (]
[plane, ., toSpace, (, polygon, ., getBarycenter, (, ), ), ;, double, scaled, =, area, *, facetB, ., dotProduct, (]
[), ;, double, scaled, =, area, *, facetB, ., dotProduct, (, plane, ., getNormal, (, ), ), ;, if, (]
[scaled, =, area, *, facetB, ., dotProduct, (, plane, ., getNormal, (, ), ), ;, if, (, reversed, ), {]
[area, *, facetB, ., dotProduct, (, plane, ., getNormal, (, ), ), ;, if, (, reversed, ), {, scaled, =]
[*, facetB, ., dotProduct, (, plane, ., getNormal, (, ), ), ;, if, (, reversed, ), {, scaled, =, -]
[dotProduct, (, plane, ., getNormal, (, ), ), ;, if, (, reversed, ), {, scaled, =, -, scaled, ;, }]
[plane, ., getNormal, (, ), ), ;, if, (, reversed, ), {, scaled, =, -, scaled, ;, }, setSize, (]
[plane, ., getNormal, (, ), ), ;, if, (, reversed, ), {, scaled, =, -, scaled, ;, }, setSize, (]
[), ), ;, if, (, reversed, ), {, scaled, =, -, scaled, ;, }, setSize, (, getSize, (, ), +]
[if, (, reversed, ), {, scaled, =, -, scaled, ;, }, setSize, (, getSize, (, ), +, scaled, ), ;]
[reversed, ), {, scaled, =, -, scaled, ;, }, setSize, (, getSize, (, ), +, scaled, ), ;, setBarycenter, (]
[scaled, =, -, scaled, ;, }, setSize, (, getSize, (, ), +, scaled, ), ;, setBarycenter, (, new, Vector3D, (]
[-, scaled, ;, }, setSize, (, getSize, (, ), +, scaled, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, ,]
[}, setSize, (, getSize, (, ), +, scaled, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, ,, (, Vector3D, )]
[(, ), +, scaled, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, ,, (, Vector3D, ), getBarycenter, (, ), ,]
[+, scaled, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, ,, (, Vector3D, ), getBarycenter, (, ), ,, scaled, ,]
[}, }, }, public, SubHyperplane, <, Euclidean3D, >, firstIntersection, (, final, Vector3D, point, ,, final, Line, line, ), {, return]
[}, public, SubHyperplane, <, Euclidean3D, >, firstIntersection, (, final, Vector3D, point, ,, final, Line, line, ), {, return, recurseFirstIntersection, (]
[SubHyperplane, <, Euclidean3D, >, firstIntersection, (, final, Vector3D, point, ,, final, Line, line, ), {, return, recurseFirstIntersection, (, getTree, (]
[>, firstIntersection, (, final, Vector3D, point, ,, final, Line, line, ), {, return, recurseFirstIntersection, (, getTree, (, true, ), ,]
[(, final, Vector3D, point, ,, final, Line, line, ), {, return, recurseFirstIntersection, (, getTree, (, true, ), ,, point, ,]
[Euclidean3D, >, node, ,, final, Vector3D, point, ,, final, Line, line, ), {, final, SubHyperplane, <, Euclidean3D, >, cut, =]
[Euclidean3D, >, node, ,, final, Vector3D, point, ,, final, Line, line, ), {, final, SubHyperplane, <, Euclidean3D, >, cut, =]
[final, Line, line, ), {, final, SubHyperplane, <, Euclidean3D, >, cut, =, node, ., getCut, (, ), ;, if, (]
[final, Line, line, ), {, final, SubHyperplane, <, Euclidean3D, >, cut, =, node, ., getCut, (, ), ;, if, (]
[line, ), {, final, SubHyperplane, <, Euclidean3D, >, cut, =, node, ., getCut, (, ), ;, if, (, cut, ==]
[SubHyperplane, <, Euclidean3D, >, cut, =, node, ., getCut, (, ), ;, if, (, cut, ==, null, ), {, return]
[), ;, if, (, cut, ==, null, ), {, return, null, ;, }, final, BSPTree, <, Euclidean3D, >, minus, =]
[), ;, if, (, cut, ==, null, ), {, return, null, ;, }, final, BSPTree, <, Euclidean3D, >, minus, =]
[final, BSPTree, <, Euclidean3D, >, minus, =, node, ., getMinus, (, ), ;, final, BSPTree, <, Euclidean3D, >, plus, =]
[final, BSPTree, <, Euclidean3D, >, minus, =, node, ., getMinus, (, ), ;, final, BSPTree, <, Euclidean3D, >, plus, =]
[(, ), ;, final, BSPTree, <, Euclidean3D, >, plus, =, node, ., getPlus, (, ), ;, final, Plane, plane, =]
[final, BSPTree, <, Euclidean3D, >, plus, =, node, ., getPlus, (, ), ;, final, Plane, plane, =, (, Plane, )]
[final, BSPTree, <, Euclidean3D, >, plus, =, node, ., getPlus, (, ), ;, final, Plane, plane, =, (, Plane, )]
[(, ), ;, final, Plane, plane, =, (, Plane, ), cut, ., getHyperplane, (, ), ;, final, double, offset, =]
[(, ), ;, final, Plane, plane, =, (, Plane, ), cut, ., getHyperplane, (, ), ;, final, double, offset, =]
[Plane, plane, =, (, Plane, ), cut, ., getHyperplane, (, ), ;, final, double, offset, =, plane, ., getOffset, (]
[., getHyperplane, (, ), ;, final, double, offset, =, plane, ., getOffset, (, point, ), ;, final, boolean, in, =]
[., getHyperplane, (, ), ;, final, double, offset, =, plane, ., getOffset, (, point, ), ;, final, boolean, in, =]
[., getHyperplane, (, ), ;, final, double, offset, =, plane, ., getOffset, (, point, ), ;, final, boolean, in, =]
[;, final, double, offset, =, plane, ., getOffset, (, point, ), ;, final, boolean, in, =, FastMath, ., abs, (]
[offset, =, plane, ., getOffset, (, point, ), ;, final, boolean, in, =, FastMath, ., abs, (, offset, ), <]
[), <, 1.0e-10, ;, final, BSPTree, <, Euclidean3D, >, near, ;, final, BSPTree, <, Euclidean3D, >, far, ;, if, (]
[), <, 1.0e-10, ;, final, BSPTree, <, Euclidean3D, >, near, ;, final, BSPTree, <, Euclidean3D, >, far, ;, if, (]
[1.0e-10, ;, final, BSPTree, <, Euclidean3D, >, near, ;, final, BSPTree, <, Euclidean3D, >, far, ;, if, (, offset, <]
[BSPTree, <, Euclidean3D, >, near, ;, final, BSPTree, <, Euclidean3D, >, far, ;, if, (, offset, <, 0, ), {]
[Euclidean3D, >, near, ;, final, BSPTree, <, Euclidean3D, >, far, ;, if, (, offset, <, 0, ), {, near, =]
[near, ;, final, BSPTree, <, Euclidean3D, >, far, ;, if, (, offset, <, 0, ), {, near, =, minus, ;]
[final, BSPTree, <, Euclidean3D, >, far, ;, if, (, offset, <, 0, ), {, near, =, minus, ;, far, =]
[far, ;, if, (, offset, <, 0, ), {, near, =, minus, ;, far, =, plus, ;, }, else, {]
[if, (, offset, <, 0, ), {, near, =, minus, ;, far, =, plus, ;, }, else, {, near, =]
[offset, <, 0, ), {, near, =, minus, ;, far, =, plus, ;, }, else, {, near, =, plus, ;]
[0, ), {, near, =, minus, ;, far, =, plus, ;, }, else, {, near, =, plus, ;, far, =]
[minus, ;, far, =, plus, ;, }, else, {, near, =, plus, ;, far, =, minus, ;, }, if, (]
[=, plus, ;, far, =, minus, ;, }, if, (, in, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =]
[;, far, =, minus, ;, }, if, (, in, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (]
[=, minus, ;, }, if, (, in, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, point, ,]
[(, in, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, point, ,, node, ), ;, if, (]
[(, in, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, point, ,, node, ), ;, if, (]
[), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, point, ,, node, ), ;, if, (, facet, !=]
[<, Euclidean3D, >, facet, =, boundaryFacet, (, point, ,, node, ), ;, if, (, facet, !=, null, ), {, return]
[;, if, (, facet, !=, null, ), {, return, facet, ;, }, }, final, SubHyperplane, <, Euclidean3D, >, crossed, =]
[(, facet, !=, null, ), {, return, facet, ;, }, }, final, SubHyperplane, <, Euclidean3D, >, crossed, =, recurseFirstIntersection, (]
[!=, null, ), {, return, facet, ;, }, }, final, SubHyperplane, <, Euclidean3D, >, crossed, =, recurseFirstIntersection, (, near, ,]
[), {, return, facet, ;, }, }, final, SubHyperplane, <, Euclidean3D, >, crossed, =, recurseFirstIntersection, (, near, ,, point, ,]
[}, }, final, SubHyperplane, <, Euclidean3D, >, crossed, =, recurseFirstIntersection, (, near, ,, point, ,, line, ), ;, if, (]
[}, }, final, SubHyperplane, <, Euclidean3D, >, crossed, =, recurseFirstIntersection, (, near, ,, point, ,, line, ), ;, if, (]
[final, SubHyperplane, <, Euclidean3D, >, crossed, =, recurseFirstIntersection, (, near, ,, point, ,, line, ), ;, if, (, crossed, !=]
[>, crossed, =, recurseFirstIntersection, (, near, ,, point, ,, line, ), ;, if, (, crossed, !=, null, ), {, return]
[near, ,, point, ,, line, ), ;, if, (, crossed, !=, null, ), {, return, crossed, ;, }, if, (]
[,, point, ,, line, ), ;, if, (, crossed, !=, null, ), {, return, crossed, ;, }, if, (, !]
[(, crossed, !=, null, ), {, return, crossed, ;, }, if, (, !, in, ), {, final, Vector3D, hit3D, =]
[(, crossed, !=, null, ), {, return, crossed, ;, }, if, (, !, in, ), {, final, Vector3D, hit3D, =]
[), {, return, crossed, ;, }, if, (, !, in, ), {, final, Vector3D, hit3D, =, plane, ., intersection, (]
[}, if, (, !, in, ), {, final, Vector3D, hit3D, =, plane, ., intersection, (, line, ), ;, if, (]
[}, if, (, !, in, ), {, final, Vector3D, hit3D, =, plane, ., intersection, (, line, ), ;, if, (]
[(, !, in, ), {, final, Vector3D, hit3D, =, plane, ., intersection, (, line, ), ;, if, (, hit3D, !=]
[., intersection, (, line, ), ;, if, (, hit3D, !=, null, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =]
[(, line, ), ;, if, (, hit3D, !=, null, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (]
[), ;, if, (, hit3D, !=, null, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, hit3D, ,]
[!=, null, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, hit3D, ,, node, ), ;, if, (]
[!=, null, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, hit3D, ,, node, ), ;, if, (]
[), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, hit3D, ,, node, ), ;, if, (, facet, !=]
[<, Euclidean3D, >, facet, =, boundaryFacet, (, hit3D, ,, node, ), ;, if, (, facet, !=, null, ), {, return]
[(, hit3D, ,, node, ), ;, if, (, facet, !=, null, ), {, return, facet, ;, }, }, }, return]
[,, node, ), ;, if, (, facet, !=, null, ), {, return, facet, ;, }, }, }, return, recurseFirstIntersection, (]
[), ;, if, (, facet, !=, null, ), {, return, facet, ;, }, }, }, return, recurseFirstIntersection, (, far, ,]
[if, (, facet, !=, null, ), {, return, facet, ;, }, }, }, return, recurseFirstIntersection, (, far, ,, point, ,]
[Euclidean3D, >, boundaryFacet, (, final, Vector3D, point, ,, final, BSPTree, <, Euclidean3D, >, node, ), {, final, Vector2D, point2D, =]
[Euclidean3D, >, boundaryFacet, (, final, Vector3D, point, ,, final, BSPTree, <, Euclidean3D, >, node, ), {, final, Vector2D, point2D, =]
[>, boundaryFacet, (, final, Vector3D, point, ,, final, BSPTree, <, Euclidean3D, >, node, ), {, final, Vector2D, point2D, =, (]
[final, Vector3D, point, ,, final, BSPTree, <, Euclidean3D, >, node, ), {, final, Vector2D, point2D, =, (, (, Plane, )]
[final, Vector3D, point, ,, final, BSPTree, <, Euclidean3D, >, node, ), {, final, Vector2D, point2D, =, (, (, Plane, )]
[final, Vector3D, point, ,, final, BSPTree, <, Euclidean3D, >, node, ), {, final, Vector2D, point2D, =, (, (, Plane, )]
[Vector2D, point2D, =, (, (, Plane, ), node, ., getCut, (, ), ., getHyperplane, (, ), ), ., toSubSpace, (]
[(, (, Plane, ), node, ., getCut, (, ), ., getHyperplane, (, ), ), ., toSubSpace, (, point, ), ;]
[), node, ., getCut, (, ), ., getHyperplane, (, ), ), ., toSubSpace, (, point, ), ;, @, SuppressWarnings, (]
[), ), ., toSubSpace, (, point, ), ;, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, Euclidean3D, >, attribute, =]
[), ;, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, )]
[), ;, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, )]
[BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;, if, (]
[BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;, if, (]
[<, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;, if, (, (]
[<, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;, if, (, (]
[<, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;, if, (, (]
[BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;, if, (, (, attribute, ., getPlusOutside, (, ), !=]
[>, ), node, ., getAttribute, (, ), ;, if, (, (, attribute, ., getPlusOutside, (, ), !=, null, ), &&]
[), node, ., getAttribute, (, ), ;, if, (, (, attribute, ., getPlusOutside, (, ), !=, null, ), &&, (]
[), node, ., getAttribute, (, ), ;, if, (, (, attribute, ., getPlusOutside, (, ), !=, null, ), &&, (]
[), node, ., getAttribute, (, ), ;, if, (, (, attribute, ., getPlusOutside, (, ), !=, null, ), &&, (]
[), node, ., getAttribute, (, ), ;, if, (, (, attribute, ., getPlusOutside, (, ), !=, null, ), &&, (]
[node, ., getAttribute, (, ), ;, if, (, (, attribute, ., getPlusOutside, (, ), !=, null, ), &&, (, (]
[(, ), ;, if, (, (, attribute, ., getPlusOutside, (, ), !=, null, ), &&, (, (, (, SubPlane, )]
[(, ), ;, if, (, (, attribute, ., getPlusOutside, (, ), !=, null, ), &&, (, (, (, SubPlane, )]
[), &&, (, (, (, SubPlane, ), attribute, ., getPlusOutside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (]
[(, (, SubPlane, ), attribute, ., getPlusOutside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==]
[(, (, SubPlane, ), attribute, ., getPlusOutside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==]
[(, ), ), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), ), {, return]
[(, ), ), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), ), {, return]
[(, point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusOutside, (, ), ;, }, if, (]
[(, point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusOutside, (, ), ;, }, if, (]
[point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusOutside, (, ), ;, }, if, (, (]
[point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusOutside, (, ), ;, }, if, (, (]
[point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusOutside, (, ), ;, }, if, (, (]
[), ), {, return, attribute, ., getPlusOutside, (, ), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=]
[return, attribute, ., getPlusOutside, (, ), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=, null, ), &&]
[attribute, ., getPlusOutside, (, ), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=, null, ), &&, (]
[attribute, ., getPlusOutside, (, ), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=, null, ), &&, (]
[attribute, ., getPlusOutside, (, ), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=, null, ), &&, (]
[attribute, ., getPlusOutside, (, ), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=, null, ), &&, (]
[., getPlusOutside, (, ), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=, null, ), &&, (, (]
[), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=, null, ), &&, (, (, (, SubPlane, )]
[), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=, null, ), &&, (, (, (, SubPlane, )]
[), &&, (, (, (, SubPlane, ), attribute, ., getPlusInside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (]
[(, (, SubPlane, ), attribute, ., getPlusInside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==]
[(, (, SubPlane, ), attribute, ., getPlusInside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==]
[(, ), ), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), ), {, return]
[(, ), ), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), ), {, return]
[checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusInside, (, ), ;, }, return]
[;, }, return, null, ;, }, public, PolyhedronsSet, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, return]
[null, ;, }, public, PolyhedronsSet, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, return, (, PolyhedronsSet, )]
[}, public, PolyhedronsSet, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, return, (, PolyhedronsSet, ), applyTransform, (]
[rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, return, (, PolyhedronsSet, ), applyTransform, (, new, RotationTransform, (]
[final, Vector3D, center, ,, final, Rotation, rotation, ), {, return, (, PolyhedronsSet, ), applyTransform, (, new, RotationTransform, (, center, ,]
[Transform, <, Euclidean2D, ,, Euclidean1D, >, cachedTransform, ;, public, RotationTransform, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {]
[Transform, <, Euclidean2D, ,, Euclidean1D, >, cachedTransform, ;, public, RotationTransform, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {]
[Euclidean1D, >, cachedTransform, ;, public, RotationTransform, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, this, ., center, =]
[cachedTransform, ;, public, RotationTransform, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, this, ., center, =, center, ;]
[cachedTransform, ;, public, RotationTransform, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, this, ., center, =, center, ;]
[(, final, Vector3D, center, ,, final, Rotation, rotation, ), {, this, ., center, =, center, ;, this, ., rotation, =]
[=, rotation, ;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, final, Vector3D, delta, =]
[=, rotation, ;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, final, Vector3D, delta, =]
[rotation, ;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, final, Vector3D, delta, =, (]
[public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, final, Vector3D, delta, =, (, (, Vector3D, )]
[Vector, <, Euclidean3D, >, point, ), {, final, Vector3D, delta, =, (, (, Vector3D, ), point, ), ., subtract, (]
[point, ), {, final, Vector3D, delta, =, (, (, Vector3D, ), point, ), ., subtract, (, center, ), ;, return]
[final, Vector3D, delta, =, (, (, Vector3D, ), point, ), ., subtract, (, center, ), ;, return, new, Vector3D, (]
[delta, =, (, (, Vector3D, ), point, ), ., subtract, (, center, ), ;, return, new, Vector3D, (, 1.0, ,]
[(, (, Vector3D, ), point, ), ., subtract, (, center, ), ;, return, new, Vector3D, (, 1.0, ,, center, ,]
[Vector3D, ), point, ), ., subtract, (, center, ), ;, return, new, Vector3D, (, 1.0, ,, center, ,, 1.0, ,]
[Vector3D, ), point, ), ., subtract, (, center, ), ;, return, new, Vector3D, (, 1.0, ,, center, ,, 1.0, ,]
[., subtract, (, center, ), ;, return, new, Vector3D, (, 1.0, ,, center, ,, 1.0, ,, rotation, ., applyTo, (]
[applyTo, (, delta, ), ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return]
[applyTo, (, delta, ), ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return]
[(, delta, ), ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return, (]
[), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return, (, (, Plane, )]
[apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return, (, (, Plane, ), hyperplane, ), ., rotate, (]
[final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return, (, (, Plane, ), hyperplane, ), ., rotate, (, center, ,]
[>, sub, ,, final, Hyperplane, <, Euclidean3D, >, original, ,, final, Hyperplane, <, Euclidean3D, >, transformed, ), {, if, (]
[>, sub, ,, final, Hyperplane, <, Euclidean3D, >, original, ,, final, Hyperplane, <, Euclidean3D, >, transformed, ), {, if, (]
[,, final, Hyperplane, <, Euclidean3D, >, original, ,, final, Hyperplane, <, Euclidean3D, >, transformed, ), {, if, (, original, !=]
[,, final, Hyperplane, <, Euclidean3D, >, transformed, ), {, if, (, original, !=, cachedOriginal, ), {, final, Plane, oPlane, =]
[<, Euclidean3D, >, transformed, ), {, if, (, original, !=, cachedOriginal, ), {, final, Plane, oPlane, =, (, Plane, )]
[if, (, original, !=, cachedOriginal, ), {, final, Plane, oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =]
[!=, cachedOriginal, ), {, final, Plane, oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =, (, Plane, )]
[oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =, (, Plane, ), transformed, ;, final, Vector3D, p00, =]
[oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =, (, Plane, ), transformed, ;, final, Vector3D, p00, =]
[=, (, Plane, ), transformed, ;, final, Vector3D, p00, =, oPlane, ., getOrigin, (, ), ;, final, Vector3D, p10, =]
[=, (, Plane, ), transformed, ;, final, Vector3D, p00, =, oPlane, ., getOrigin, (, ), ;, final, Vector3D, p10, =]
[transformed, ;, final, Vector3D, p00, =, oPlane, ., getOrigin, (, ), ;, final, Vector3D, p10, =, oPlane, ., toSpace, (]
[Vector3D, p00, =, oPlane, ., getOrigin, (, ), ;, final, Vector3D, p10, =, oPlane, ., toSpace, (, new, Vector2D, (]
[=, oPlane, ., getOrigin, (, ), ;, final, Vector3D, p10, =, oPlane, ., toSpace, (, new, Vector2D, (, 1.0, ,]
[Vector3D, p10, =, oPlane, ., toSpace, (, new, Vector2D, (, 1.0, ,, 0.0, ), ), ;, final, Vector3D, p01, =]
[Vector3D, p10, =, oPlane, ., toSpace, (, new, Vector2D, (, 1.0, ,, 0.0, ), ), ;, final, Vector3D, p01, =]
[., toSpace, (, new, Vector2D, (, 1.0, ,, 0.0, ), ), ;, final, Vector3D, p01, =, oPlane, ., toSpace, (]
[new, Vector2D, (, 1.0, ,, 0.0, ), ), ;, final, Vector3D, p01, =, oPlane, ., toSpace, (, new, Vector2D, (]
[(, 1.0, ,, 0.0, ), ), ;, final, Vector3D, p01, =, oPlane, ., toSpace, (, new, Vector2D, (, 0.0, ,]
[Vector3D, p01, =, oPlane, ., toSpace, (, new, Vector2D, (, 0.0, ,, 1.0, ), ), ;, final, Vector2D, tP00, =]
[Vector3D, p01, =, oPlane, ., toSpace, (, new, Vector2D, (, 0.0, ,, 1.0, ), ), ;, final, Vector2D, tP00, =]
[., toSpace, (, new, Vector2D, (, 0.0, ,, 1.0, ), ), ;, final, Vector2D, tP00, =, tPlane, ., toSubSpace, (]
[(, new, Vector2D, (, 0.0, ,, 1.0, ), ), ;, final, Vector2D, tP00, =, tPlane, ., toSubSpace, (, apply, (]
[), ;, final, Vector2D, tP00, =, tPlane, ., toSubSpace, (, apply, (, p00, ), ), ;, final, Vector2D, tP10, =]
[), ;, final, Vector2D, tP00, =, tPlane, ., toSubSpace, (, apply, (, p00, ), ), ;, final, Vector2D, tP10, =]
[tP00, =, tPlane, ., toSubSpace, (, apply, (, p00, ), ), ;, final, Vector2D, tP10, =, tPlane, ., toSubSpace, (]
[tPlane, ., toSubSpace, (, apply, (, p00, ), ), ;, final, Vector2D, tP10, =, tPlane, ., toSubSpace, (, apply, (]
[), ;, final, Vector2D, tP10, =, tPlane, ., toSubSpace, (, apply, (, p10, ), ), ;, final, Vector2D, tP01, =]
[), ;, final, Vector2D, tP10, =, tPlane, ., toSubSpace, (, apply, (, p10, ), ), ;, final, Vector2D, tP01, =]
[tP10, =, tPlane, ., toSubSpace, (, apply, (, p10, ), ), ;, final, Vector2D, tP01, =, tPlane, ., toSubSpace, (]
[tPlane, ., toSubSpace, (, apply, (, p10, ), ), ;, final, Vector2D, tP01, =, tPlane, ., toSubSpace, (, apply, (]
[), ;, final, Vector2D, tP01, =, tPlane, ., toSubSpace, (, apply, (, p01, ), ), ;, final, AffineTransform, at, =]
[Vector2D, tP01, =, tPlane, ., toSubSpace, (, apply, (, p01, ), ), ;, final, AffineTransform, at, =, new, AffineTransform, (]
[Vector2D, tP01, =, tPlane, ., toSubSpace, (, apply, (, p01, ), ), ;, final, AffineTransform, at, =, new, AffineTransform, (]
[Vector2D, tP01, =, tPlane, ., toSubSpace, (, apply, (, p01, ), ), ;, final, AffineTransform, at, =, new, AffineTransform, (]
[(, apply, (, p01, ), ), ;, final, AffineTransform, at, =, new, AffineTransform, (, tP10, ., getX, (, ), -]
[(, apply, (, p01, ), ), ;, final, AffineTransform, at, =, new, AffineTransform, (, tP10, ., getX, (, ), -]
[;, final, AffineTransform, at, =, new, AffineTransform, (, tP10, ., getX, (, ), -, tP00, ., getX, (, ), ,]
[;, final, AffineTransform, at, =, new, AffineTransform, (, tP10, ., getX, (, ), -, tP00, ., getX, (, ), ,]
[;, final, AffineTransform, at, =, new, AffineTransform, (, tP10, ., getX, (, ), -, tP00, ., getX, (, ), ,]
[AffineTransform, (, tP10, ., getX, (, ), -, tP00, ., getX, (, ), ,, tP10, ., getY, (, ), -]
[AffineTransform, (, tP10, ., getX, (, ), -, tP00, ., getX, (, ), ,, tP10, ., getY, (, ), -]
[), -, tP00, ., getX, (, ), ,, tP10, ., getY, (, ), -, tP00, ., getY, (, ), ,]
[), -, tP00, ., getX, (, ), ,, tP10, ., getY, (, ), -, tP00, ., getY, (, ), ,]
[), -, tP00, ., getX, (, ), ,, tP10, ., getY, (, ), -, tP00, ., getY, (, ), ,]
[), ,, tP10, ., getY, (, ), -, tP00, ., getY, (, ), ,, tP01, ., getX, (, ), -]
[), ,, tP10, ., getY, (, ), -, tP00, ., getY, (, ), ,, tP01, ., getX, (, ), -]
[), -, tP00, ., getY, (, ), ,, tP01, ., getX, (, ), -, tP00, ., getX, (, ), ,]
[), -, tP00, ., getY, (, ), ,, tP01, ., getX, (, ), -, tP00, ., getX, (, ), ,]
[), -, tP00, ., getY, (, ), ,, tP01, ., getX, (, ), -, tP00, ., getX, (, ), ,]
[), ,, tP01, ., getX, (, ), -, tP00, ., getX, (, ), ,, tP01, ., getY, (, ), -]
[), ,, tP01, ., getX, (, ), -, tP00, ., getX, (, ), ,, tP01, ., getY, (, ), -]
[), -, tP00, ., getX, (, ), ,, tP01, ., getY, (, ), -, tP00, ., getY, (, ), ,]
[), -, tP00, ., getX, (, ), ,, tP01, ., getY, (, ), -, tP00, ., getY, (, ), ,]
[), ,, tP01, ., getY, (, ), -, tP00, ., getY, (, ), ,, tP00, ., getX, (, ), ,]
[), ,, tP01, ., getY, (, ), -, tP00, ., getY, (, ), ,, tP00, ., getX, (, ), ,]
[-, tP00, ., getY, (, ), ,, tP00, ., getX, (, ), ,, tP00, ., getY, (, ), ), ;]
[., getY, (, ), ,, tP00, ., getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =]
[), ,, tP00, ., getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, )]
[tP00, ., getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;]
[getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[cachedTransform, =, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (]
[., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return]
[., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return]
[commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return, (]
[., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return, (, (, SubLine, )]
[twod, ., Line, ., getTransform, (, at, ), ;, }, return, (, (, SubLine, ), sub, ), ., applyTransform, (]
[sub, ), ., applyTransform, (, cachedTransform, ), ;, }, }, public, PolyhedronsSet, translate, (, final, Vector3D, translation, ), {, return]
[applyTransform, (, cachedTransform, ), ;, }, }, public, PolyhedronsSet, translate, (, final, Vector3D, translation, ), {, return, (, PolyhedronsSet, )]
[cachedTransform, ), ;, }, }, public, PolyhedronsSet, translate, (, final, Vector3D, translation, ), {, return, (, PolyhedronsSet, ), applyTransform, (]
[}, }, public, PolyhedronsSet, translate, (, final, Vector3D, translation, ), {, return, (, PolyhedronsSet, ), applyTransform, (, new, TranslationTransform, (]
[Plane, cachedOriginal, ;, private, Transform, <, Euclidean2D, ,, Euclidean1D, >, cachedTransform, ;, public, TranslationTransform, (, final, Vector3D, translation, ), {]
[Plane, cachedOriginal, ;, private, Transform, <, Euclidean2D, ,, Euclidean1D, >, cachedTransform, ;, public, TranslationTransform, (, final, Vector3D, translation, ), {]
[Transform, <, Euclidean2D, ,, Euclidean1D, >, cachedTransform, ;, public, TranslationTransform, (, final, Vector3D, translation, ), {, this, ., translation, =]
[this, ., translation, =, translation, ;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, return]
[=, translation, ;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, return, new, Vector3D, (]
[;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, return, new, Vector3D, (, 1.0, ,]
[Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, return, new, Vector3D, (, 1.0, ,, (, Vector3D, )]
[(, final, Vector, <, Euclidean3D, >, point, ), {, return, new, Vector3D, (, 1.0, ,, (, Vector3D, ), point, ,]
[Vector, <, Euclidean3D, >, point, ), {, return, new, Vector3D, (, 1.0, ,, (, Vector3D, ), point, ,, 1.0, ,]
[,, 1.0, ,, translation, ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return]
[,, 1.0, ,, translation, ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return]
[1.0, ,, translation, ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return, (]
[), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return, (, (, Plane, )]
[apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return, (, (, Plane, ), hyperplane, ), ., translate, (]
[>, sub, ,, final, Hyperplane, <, Euclidean3D, >, original, ,, final, Hyperplane, <, Euclidean3D, >, transformed, ), {, if, (]
[>, sub, ,, final, Hyperplane, <, Euclidean3D, >, original, ,, final, Hyperplane, <, Euclidean3D, >, transformed, ), {, if, (]
[,, final, Hyperplane, <, Euclidean3D, >, original, ,, final, Hyperplane, <, Euclidean3D, >, transformed, ), {, if, (, original, !=]
[,, final, Hyperplane, <, Euclidean3D, >, transformed, ), {, if, (, original, !=, cachedOriginal, ), {, final, Plane, oPlane, =]
[<, Euclidean3D, >, transformed, ), {, if, (, original, !=, cachedOriginal, ), {, final, Plane, oPlane, =, (, Plane, )]
[if, (, original, !=, cachedOriginal, ), {, final, Plane, oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =]
[!=, cachedOriginal, ), {, final, Plane, oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =, (, Plane, )]
[oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =, (, Plane, ), transformed, ;, final, Vector2D, shift, =]
[oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =, (, Plane, ), transformed, ;, final, Vector2D, shift, =]
[), original, ;, final, Plane, tPlane, =, (, Plane, ), transformed, ;, final, Vector2D, shift, =, tPlane, ., toSubSpace, (]
[;, final, Plane, tPlane, =, (, Plane, ), transformed, ;, final, Vector2D, shift, =, tPlane, ., toSubSpace, (, apply, (]
[;, final, Plane, tPlane, =, (, Plane, ), transformed, ;, final, Vector2D, shift, =, tPlane, ., toSubSpace, (, apply, (]
[shift, =, tPlane, ., toSubSpace, (, apply, (, oPlane, ., getOrigin, (, ), ), ), ;, final, AffineTransform, at, =]
[shift, =, tPlane, ., toSubSpace, (, apply, (, oPlane, ., getOrigin, (, ), ), ), ;, final, AffineTransform, at, =]
[toSubSpace, (, apply, (, oPlane, ., getOrigin, (, ), ), ), ;, final, AffineTransform, at, =, AffineTransform, ., getTranslateInstance, (]
[toSubSpace, (, apply, (, oPlane, ., getOrigin, (, ), ), ), ;, final, AffineTransform, at, =, AffineTransform, ., getTranslateInstance, (]
[getOrigin, (, ), ), ), ;, final, AffineTransform, at, =, AffineTransform, ., getTranslateInstance, (, shift, ., getX, (, ), ,]
[getOrigin, (, ), ), ), ;, final, AffineTransform, at, =, AffineTransform, ., getTranslateInstance, (, shift, ., getX, (, ), ,]
[AffineTransform, at, =, AffineTransform, ., getTranslateInstance, (, shift, ., getX, (, ), ,, shift, ., getY, (, ), ), ;]
[=, AffineTransform, ., getTranslateInstance, (, shift, ., getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =]
[getTranslateInstance, (, shift, ., getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, )]
[shift, ., getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;]
[getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =]
[cachedTransform, =, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (]
[., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return]
[., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return]
[commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return, (]
[., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return, (, (, SubLine, )]
[twod, ., Line, ., getTransform, (, at, ), ;, }, return, (, (, SubLine, ), sub, ), ., applyTransform, (]
