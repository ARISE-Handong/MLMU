[public, class, ArgumentMatcherStorageImpl, implements, ArgumentMatcherStorage, {, public, static, final, int, TWO_SUB_MATCHERS, =, 2, ;, public, static, final, int, ONE_SUB_MATCHER, =]
[), public, class, ArgumentMatcherStorageImpl, implements, ArgumentMatcherStorage, {, public, static, final, int, TWO_SUB_MATCHERS, =, 2, ;, public, static, final, int, ONE_SUB_MATCHER]
[;, public, static, final, int, ONE_SUB_MATCHER, =, 1, ;, private, final, Stack, <, LocalizedMatcher, >, matcherStack, =, new, Stack, <]
[;, private, final, Stack, <, LocalizedMatcher, >, matcherStack, =, new, Stack, <, LocalizedMatcher, >, (, ), ;, public, HandyReturnValues, reportMatcher]
[;, public, HandyReturnValues, reportMatcher, (, Matcher, matcher, ), {, matcherStack, ., push, (, new, LocalizedMatcher, (, matcher, ), ), ;]
[;, return, new, HandyReturnValues, (, ), ;, }, public, List, <, LocalizedMatcher, >, pullLocalizedMatchers, (, ), {, if, (, matcherStack]
[., push, (, new, LocalizedMatcher, (, matcher, ), ), ;, return, new, HandyReturnValues, (, ), ;, }, public, List, <]
[), ;, return, new, HandyReturnValues, (, ), ;, }, public, List, <, LocalizedMatcher, >, pullLocalizedMatchers, (, ), {, if, (]
[), ), ;, return, new, HandyReturnValues, (, ), ;, }, public, List, <, LocalizedMatcher, >, pullLocalizedMatchers, (, ), {, if]
[;, }, public, List, <, LocalizedMatcher, >, pullLocalizedMatchers, (, ), {, if, (, matcherStack, ., isEmpty, (, ), ), {]
[), {, return, Collections, ., emptyList, (, ), ;, }, List, <, LocalizedMatcher, >, matchers, =, new, ArrayList, <, LocalizedMatcher]
[., isEmpty, (, ), ), {, return, Collections, ., emptyList, (, ), ;, }, List, <, LocalizedMatcher, >, matchers, =]
[;, }, List, <, LocalizedMatcher, >, matchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, ., clear]
[., emptyList, (, ), ;, }, List, <, LocalizedMatcher, >, matchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, )]
[;, matcherStack, ., clear, (, ), ;, return, (, List, ), matchers, ;, }, public, HandyReturnValues, reportAnd, (, ), {]
[), ;, matcherStack, ., clear, (, ), ;, return, (, List, ), matchers, ;, }, public, HandyReturnValues, reportAnd, (, )]
[;, return, (, List, ), matchers, ;, }, public, HandyReturnValues, reportAnd, (, ), {, assertStateFor, (, "And(?)", ,, TWO_SUB_MATCHERS, )]
[., clear, (, ), ;, return, (, List, ), matchers, ;, }, public, HandyReturnValues, reportAnd, (, ), {, assertStateFor, (]
[;, }, public, HandyReturnValues, reportAnd, (, ), {, assertStateFor, (, "And(?)", ,, TWO_SUB_MATCHERS, ), ;, And, and, =, new, And]
[;, }, public, HandyReturnValues, reportAnd, (, ), {, assertStateFor, (, "And(?)", ,, TWO_SUB_MATCHERS, ), ;, And, and, =, new, And]
[;, And, and, =, new, And, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;, matcherStack, ., push, (, new, LocalizedMatcher, (]
[,, TWO_SUB_MATCHERS, ), ;, And, and, =, new, And, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;, matcherStack, ., push, (]
[), ;, And, and, =, new, And, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;, matcherStack, ., push, (, new, LocalizedMatcher]
[;, matcherStack, ., push, (, new, LocalizedMatcher, (, and, ), ), ;, return, new, HandyReturnValues, (, ), ;, }, public]
[), ;, matcherStack, ., push, (, new, LocalizedMatcher, (, and, ), ), ;, return, new, HandyReturnValues, (, ), ;, }]
[), ), ;, matcherStack, ., push, (, new, LocalizedMatcher, (, and, ), ), ;, return, new, HandyReturnValues, (, ), ;]
[;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportOr, (, ), {, assertStateFor, (, "Or(?)", ,, TWO_SUB_MATCHERS, )]
[., push, (, new, LocalizedMatcher, (, and, ), ), ;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportOr]
[), ;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportOr, (, ), {, assertStateFor, (, "Or(?)", ,, TWO_SUB_MATCHERS]
[), ), ;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportOr, (, ), {, assertStateFor, (, "Or(?)", ,]
[;, }, public, HandyReturnValues, reportOr, (, ), {, assertStateFor, (, "Or(?)", ,, TWO_SUB_MATCHERS, ), ;, Or, or, =, new, Or]
[;, Or, or, =, new, Or, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;, matcherStack, ., push, (, new, LocalizedMatcher, (]
[,, TWO_SUB_MATCHERS, ), ;, Or, or, =, new, Or, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;, matcherStack, ., push, (]
[), ;, Or, or, =, new, Or, (, popLastArgumentMatchers, (, TWO_SUB_MATCHERS, ), ), ;, matcherStack, ., push, (, new, LocalizedMatcher]
[;, matcherStack, ., push, (, new, LocalizedMatcher, (, or, ), ), ;, return, new, HandyReturnValues, (, ), ;, }, public]
[), ;, matcherStack, ., push, (, new, LocalizedMatcher, (, or, ), ), ;, return, new, HandyReturnValues, (, ), ;, }]
[), ), ;, matcherStack, ., push, (, new, LocalizedMatcher, (, or, ), ), ;, return, new, HandyReturnValues, (, ), ;]
[;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportNot, (, ), {, assertStateFor, (, "Not(?)", ,, ONE_SUB_MATCHER, )]
[., push, (, new, LocalizedMatcher, (, or, ), ), ;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportNot]
[), ;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportNot, (, ), {, assertStateFor, (, "Not(?)", ,, ONE_SUB_MATCHER]
[), ), ;, return, new, HandyReturnValues, (, ), ;, }, public, HandyReturnValues, reportNot, (, ), {, assertStateFor, (, "Not(?)", ,]
[;, }, public, HandyReturnValues, reportNot, (, ), {, assertStateFor, (, "Not(?)", ,, ONE_SUB_MATCHER, ), ;, Not, not, =, new, Not]
[;, Not, not, =, new, Not, (, popLastArgumentMatchers, (, ONE_SUB_MATCHER, ), ., get, (, 0, ), ), ;, matcherStack, .]
[,, ONE_SUB_MATCHER, ), ;, Not, not, =, new, Not, (, popLastArgumentMatchers, (, ONE_SUB_MATCHER, ), ., get, (, 0, ), )]
[), ;, Not, not, =, new, Not, (, popLastArgumentMatchers, (, ONE_SUB_MATCHER, ), ., get, (, 0, ), ), ;, matcherStack]
[;, matcherStack, ., push, (, new, LocalizedMatcher, (, not, ), ), ;, return, new, HandyReturnValues, (, ), ;, }, private]
[), ;, matcherStack, ., push, (, new, LocalizedMatcher, (, not, ), ), ;, return, new, HandyReturnValues, (, ), ;, }]
[., get, (, 0, ), ), ;, matcherStack, ., push, (, new, LocalizedMatcher, (, not, ), ), ;, return, new]
[), ., get, (, 0, ), ), ;, matcherStack, ., push, (, new, LocalizedMatcher, (, not, ), ), ;, return]
[), ), ;, matcherStack, ., push, (, new, LocalizedMatcher, (, not, ), ), ;, return, new, HandyReturnValues, (, ), ;]
[;, return, new, HandyReturnValues, (, ), ;, }, private, void, assertStateFor, (, String, additionalMatcherName, ,, int, subMatchersCount, ), {, assertMatchersFoundFor]
[., push, (, new, LocalizedMatcher, (, not, ), ), ;, return, new, HandyReturnValues, (, ), ;, }, private, void, assertStateFor]
[), ;, return, new, HandyReturnValues, (, ), ;, }, private, void, assertStateFor, (, String, additionalMatcherName, ,, int, subMatchersCount, ), {]
[), ), ;, return, new, HandyReturnValues, (, ), ;, }, private, void, assertStateFor, (, String, additionalMatcherName, ,, int, subMatchersCount, )]
[;, }, private, void, assertStateFor, (, String, additionalMatcherName, ,, int, subMatchersCount, ), {, assertMatchersFoundFor, (, additionalMatcherName, ), ;, assertIncorrectUseOfAdditionalMatchers, (]
[;, assertIncorrectUseOfAdditionalMatchers, (, additionalMatcherName, ,, subMatchersCount, ), ;, }, private, List, <, Matcher, >, popLastArgumentMatchers, (, int, count, ), {]
[), ;, assertIncorrectUseOfAdditionalMatchers, (, additionalMatcherName, ,, subMatchersCount, ), ;, }, private, List, <, Matcher, >, popLastArgumentMatchers, (, int, count, )]
[;, }, private, List, <, Matcher, >, popLastArgumentMatchers, (, int, count, ), {, List, <, Matcher, >, result, =, new]
[,, subMatchersCount, ), ;, }, private, List, <, Matcher, >, popLastArgumentMatchers, (, int, count, ), {, List, <, Matcher, >]
[), ;, }, private, List, <, Matcher, >, popLastArgumentMatchers, (, int, count, ), {, List, <, Matcher, >, result, =]
[;, result, ., addAll, (, matcherStack, ., subList, (, matcherStack, ., size, (, ), -, count, ,, matcherStack, ., size]
[;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, matcherStack, ., pop, (]
[., addAll, (, matcherStack, ., subList, (, matcherStack, ., size, (, ), -, count, ,, matcherStack, ., size, (, )]
[), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, matcherStack, ., pop]
[., subList, (, matcherStack, ., size, (, ), -, count, ,, matcherStack, ., size, (, ), ), ), ;, for]
[,, matcherStack, ., size, (, ), ), ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[-, count, ,, matcherStack, ., size, (, ), ), ), ;, for, (, int, i, =, 0, ;, i, <]
[., size, (, ), -, count, ,, matcherStack, ., size, (, ), ), ), ;, for, (, int, i, =]
[,, matcherStack, ., size, (, ), ), ), ;, for, (, int, i, =, 0, ;, i, <, count, ;]
[), ), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++, ), {, matcherStack, .]
[., size, (, ), ), ), ;, for, (, int, i, =, 0, ;, i, <, count, ;, i, ++]
[;, i, <, count, ;, i, ++, ), {, matcherStack, ., pop, (, ), ;, }, return, result, ;, }]
[;, i, ++, ), {, matcherStack, ., pop, (, ), ;, }, return, result, ;, }, private, void, assertMatchersFoundFor, (]
[<, count, ;, i, ++, ), {, matcherStack, ., pop, (, ), ;, }, return, result, ;, }, private, void]
[;, i, ++, ), {, matcherStack, ., pop, (, ), ;, }, return, result, ;, }, private, void, assertMatchersFoundFor, (]
[), {, matcherStack, ., pop, (, ), ;, }, return, result, ;, }, private, void, assertMatchersFoundFor, (, String, additionalMatcherName, )]
[++, ), {, matcherStack, ., pop, (, ), ;, }, return, result, ;, }, private, void, assertMatchersFoundFor, (, String, additionalMatcherName]
[;, }, return, result, ;, }, private, void, assertMatchersFoundFor, (, String, additionalMatcherName, ), {, if, (, matcherStack, ., isEmpty, (]
[., pop, (, ), ;, }, return, result, ;, }, private, void, assertMatchersFoundFor, (, String, additionalMatcherName, ), {, if, (]
[;, }, private, void, assertMatchersFoundFor, (, String, additionalMatcherName, ), {, if, (, matcherStack, ., isEmpty, (, ), ), {, matcherStack]
[), {, matcherStack, ., clear, (, ), ;, new, Reporter, (, ), ., reportNoSubMatchersFound, (, additionalMatcherName, ), ;, }, }]
[., isEmpty, (, ), ), {, matcherStack, ., clear, (, ), ;, new, Reporter, (, ), ., reportNoSubMatchersFound, (, additionalMatcherName]
[;, new, Reporter, (, ), ., reportNoSubMatchersFound, (, additionalMatcherName, ), ;, }, }, private, void, assertIncorrectUseOfAdditionalMatchers, (, String, additionalMatcherName, ,]
[., clear, (, ), ;, new, Reporter, (, ), ., reportNoSubMatchersFound, (, additionalMatcherName, ), ;, }, }, private, void, assertIncorrectUseOfAdditionalMatchers]
[;, }, }, private, void, assertIncorrectUseOfAdditionalMatchers, (, String, additionalMatcherName, ,, int, count, ), {, if, (, matcherStack, ., size, (]
[., reportNoSubMatchersFound, (, additionalMatcherName, ), ;, }, }, private, void, assertIncorrectUseOfAdditionalMatchers, (, String, additionalMatcherName, ,, int, count, ), {, if]
[), ;, }, }, private, void, assertIncorrectUseOfAdditionalMatchers, (, String, additionalMatcherName, ,, int, count, ), {, if, (, matcherStack, ., size]
[), {, ArrayList, <, LocalizedMatcher, >, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, ., clear]
[<, count, ), {, ArrayList, <, LocalizedMatcher, >, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack]
[., size, (, ), <, count, ), {, ArrayList, <, LocalizedMatcher, >, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (]
[), {, ArrayList, <, LocalizedMatcher, >, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, ., clear]
[;, matcherStack, ., clear, (, ), ;, new, Reporter, (, ), ., incorrectUseOfAdditionalMatchers, (, additionalMatcherName, ,, count, ,, lastMatchers, )]
[), ;, matcherStack, ., clear, (, ), ;, new, Reporter, (, ), ., incorrectUseOfAdditionalMatchers, (, additionalMatcherName, ,, count, ,, lastMatchers]
[;, new, Reporter, (, ), ., incorrectUseOfAdditionalMatchers, (, additionalMatcherName, ,, count, ,, lastMatchers, ), ;, }, }, public, void, validateState]
[., clear, (, ), ;, new, Reporter, (, ), ., incorrectUseOfAdditionalMatchers, (, additionalMatcherName, ,, count, ,, lastMatchers, ), ;, }]
[;, }, }, public, void, validateState, (, ), {, if, (, !, matcherStack, ., isEmpty, (, ), ), {, ArrayList]
[., incorrectUseOfAdditionalMatchers, (, additionalMatcherName, ,, count, ,, lastMatchers, ), ;, }, }, public, void, validateState, (, ), {, if, (]
[,, count, ,, lastMatchers, ), ;, }, }, public, void, validateState, (, ), {, if, (, !, matcherStack, ., isEmpty]
[,, lastMatchers, ), ;, }, }, public, void, validateState, (, ), {, if, (, !, matcherStack, ., isEmpty, (, )]
[), ;, }, }, public, void, validateState, (, ), {, if, (, !, matcherStack, ., isEmpty, (, ), ), {]
[), {, ArrayList, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, ., clear, (, ), ;]
[), {, ArrayList, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, ., clear, (, ), ;]
[., isEmpty, (, ), ), {, ArrayList, lastMatchers, =, new, ArrayList, <, LocalizedMatcher, >, (, matcherStack, ), ;, matcherStack, .]
[;, matcherStack, ., clear, (, ), ;, new, Reporter, (, ), ., misplacedArgumentMatcher, (, lastMatchers, ), ;, }, }, public]
[), ;, matcherStack, ., clear, (, ), ;, new, Reporter, (, ), ., misplacedArgumentMatcher, (, lastMatchers, ), ;, }, }]
[;, new, Reporter, (, ), ., misplacedArgumentMatcher, (, lastMatchers, ), ;, }, }, public, void, reset, (, ), {, matcherStack]
[., clear, (, ), ;, new, Reporter, (, ), ., misplacedArgumentMatcher, (, lastMatchers, ), ;, }, }, public, void, reset]
[;, }, }, public, void, reset, (, ), {, matcherStack, ., clear, (, ), ;, }, }]
[., misplacedArgumentMatcher, (, lastMatchers, ), ;, }, }, public, void, reset, (, ), {, matcherStack, ., clear, (, ), ;]
[), ;, }, }, public, void, reset, (, ), {, matcherStack, ., clear, (, ), ;, }, }]
[;, }, }]
[., clear, (, ), ;, }, }]
