[;, public, static, final, RectangleAnchor, CENTER, =, new, RectangleAnchor, (, "RectangleAnchor.CENTER", ), ;, public, static, final, RectangleAnchor, TOP, =, new]
[;, public, static, final, RectangleAnchor, CENTER, =, new, RectangleAnchor, (, "RectangleAnchor.CENTER", ), ;, public, static, final, RectangleAnchor, TOP, =, new]
[;, public, static, final, RectangleAnchor, TOP, =, new, RectangleAnchor, (, "RectangleAnchor.TOP", ), ;, public, static, final, RectangleAnchor, TOP_LEFT, =, new]
[), ;, public, static, final, RectangleAnchor, TOP, =, new, RectangleAnchor, (, "RectangleAnchor.TOP", ), ;, public, static, final, RectangleAnchor, TOP_LEFT, =]
[;, public, static, final, RectangleAnchor, TOP_LEFT, =, new, RectangleAnchor, (, "RectangleAnchor.TOP_LEFT", ), ;, public, static, final, RectangleAnchor, TOP_RIGHT, =, new]
[), ;, public, static, final, RectangleAnchor, TOP_LEFT, =, new, RectangleAnchor, (, "RectangleAnchor.TOP_LEFT", ), ;, public, static, final, RectangleAnchor, TOP_RIGHT, =]
[;, public, static, final, RectangleAnchor, TOP_RIGHT, =, new, RectangleAnchor, (, "RectangleAnchor.TOP_RIGHT", ), ;, public, static, final, RectangleAnchor, BOTTOM, =, new]
[), ;, public, static, final, RectangleAnchor, TOP_RIGHT, =, new, RectangleAnchor, (, "RectangleAnchor.TOP_RIGHT", ), ;, public, static, final, RectangleAnchor, BOTTOM, =]
[;, public, static, final, RectangleAnchor, BOTTOM, =, new, RectangleAnchor, (, "RectangleAnchor.BOTTOM", ), ;, public, static, final, RectangleAnchor, BOTTOM_LEFT, =, new]
[), ;, public, static, final, RectangleAnchor, BOTTOM, =, new, RectangleAnchor, (, "RectangleAnchor.BOTTOM", ), ;, public, static, final, RectangleAnchor, BOTTOM_LEFT, =]
[;, public, static, final, RectangleAnchor, BOTTOM_LEFT, =, new, RectangleAnchor, (, "RectangleAnchor.BOTTOM_LEFT", ), ;, public, static, final, RectangleAnchor, BOTTOM_RIGHT, =, new]
[), ;, public, static, final, RectangleAnchor, BOTTOM_LEFT, =, new, RectangleAnchor, (, "RectangleAnchor.BOTTOM_LEFT", ), ;, public, static, final, RectangleAnchor, BOTTOM_RIGHT, =]
[;, public, static, final, RectangleAnchor, BOTTOM_RIGHT, =, new, RectangleAnchor, (, "RectangleAnchor.BOTTOM_RIGHT", ), ;, public, static, final, RectangleAnchor, LEFT, =, new]
[), ;, public, static, final, RectangleAnchor, BOTTOM_RIGHT, =, new, RectangleAnchor, (, "RectangleAnchor.BOTTOM_RIGHT", ), ;, public, static, final, RectangleAnchor, LEFT, =]
[;, public, static, final, RectangleAnchor, LEFT, =, new, RectangleAnchor, (, "RectangleAnchor.LEFT", ), ;, public, static, final, RectangleAnchor, RIGHT, =, new]
[), ;, public, static, final, RectangleAnchor, LEFT, =, new, RectangleAnchor, (, "RectangleAnchor.LEFT", ), ;, public, static, final, RectangleAnchor, RIGHT, =]
[;, public, static, final, RectangleAnchor, RIGHT, =, new, RectangleAnchor, (, "RectangleAnchor.RIGHT", ), ;, private, String, name, ;, private, RectangleAnchor, (]
[), ;, public, static, final, RectangleAnchor, RIGHT, =, new, RectangleAnchor, (, "RectangleAnchor.RIGHT", ), ;, private, String, name, ;, private, RectangleAnchor]
[;, private, String, name, ;, private, RectangleAnchor, (, final, String, name, ), {, this, ., name, =, name, ;, }]
[), ;, private, String, name, ;, private, RectangleAnchor, (, final, String, name, ), {, this, ., name, =, name, ;]
[=, name, ;, }, public, String, toString, (, ), {, return, this, ., name, ;, }, public, boolean, equals, (]
[., name, =, name, ;, }, public, String, toString, (, ), {, return, this, ., name, ;, }, public, boolean]
[;, }, public, String, toString, (, ), {, return, this, ., name, ;, }, public, boolean, equals, (, final, Object]
[;, }, public, boolean, equals, (, final, Object, obj, ), {, if, (, this, ==, obj, ), {, return, true]
[., name, ;, }, public, boolean, equals, (, final, Object, obj, ), {, if, (, this, ==, obj, ), {]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, RectangleAnchor, ), ), {, return, false, ;, }]
[==, obj, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, RectangleAnchor, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, RectangleAnchor, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, RectangleAnchor, ), ), {, return, false, ;, }, final, RectangleAnchor, order, =]
[), {, return, false, ;, }, final, RectangleAnchor, order, =, (, RectangleAnchor, ), obj, ;, if, (, !, this, .]
[), {, return, false, ;, }, final, RectangleAnchor, order, =, (, RectangleAnchor, ), obj, ;, if, (, !, this, .]
[), ), {, return, false, ;, }, final, RectangleAnchor, order, =, (, RectangleAnchor, ), obj, ;, if, (, !, this]
[instanceof, RectangleAnchor, ), ), {, return, false, ;, }, final, RectangleAnchor, order, =, (, RectangleAnchor, ), obj, ;, if, (]
[;, }, final, RectangleAnchor, order, =, (, RectangleAnchor, ), obj, ;, if, (, !, this, ., name, ., equals, (]
[;, if, (, !, this, ., name, ., equals, (, order, ., name, ), ), {, return, false, ;, }]
[;, if, (, !, this, ., name, ., equals, (, order, ., name, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, this, ., name]
[), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, this, ., name]
[., equals, (, order, ., name, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode]
[., name, ., equals, (, order, ., name, ), ), {, return, false, ;, }, return, true, ;, }, public]
[), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, this, .]
[., name, ), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, return]
[;, }, return, true, ;, }, public, int, hashCode, (, ), {, return, this, ., name, ., hashCode, (, )]
[;, }, public, int, hashCode, (, ), {, return, this, ., name, ., hashCode, (, ), ;, }, public, static]
[;, }, public, static, Point2D, coordinates, (, final, Rectangle2D, rectangle, ,, final, RectangleAnchor, anchor, ), {, Point2D, result, =, new]
[., hashCode, (, ), ;, }, public, static, Point2D, coordinates, (, final, Rectangle2D, rectangle, ,, final, RectangleAnchor, anchor, ), {]
[., name, ., hashCode, (, ), ;, }, public, static, Point2D, coordinates, (, final, Rectangle2D, rectangle, ,, final, RectangleAnchor, anchor]
[;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,]
[), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }]
[==, RectangleAnchor, ., CENTER, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getCenterY, (]
[), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }]
[., CENTER, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getCenterY, (, ), )]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (]
[., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (]
[,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result]
[., getCenterX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, ., setLocation, (, rectangle, ., getCenterX]
[., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, ., setLocation]
[), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }]
[==, RectangleAnchor, ., TOP, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMinY, (]
[), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }]
[., TOP, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMinY, (, ), )]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (]
[., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (]
[,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result]
[., getCenterX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, ., setLocation, (, rectangle, ., getCenterX]
[., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, ., setLocation]
[), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }]
[==, RectangleAnchor, ., BOTTOM, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMaxY, (]
[), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }]
[., BOTTOM, ), {, result, ., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMaxY, (, ), )]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (]
[., setLocation, (, rectangle, ., getCenterX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (]
[,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result]
[., getCenterX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX]
[., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, ., setLocation]
[), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }]
[==, RectangleAnchor, ., LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getCenterY, (]
[), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }]
[., LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getCenterY, (, ), )]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (]
[., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (]
[,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result]
[., getMinX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX]
[., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, ., setLocation]
[), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }]
[==, RectangleAnchor, ., RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getCenterY, (]
[), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }]
[., RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getCenterY, (, ), )]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (]
[., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (]
[,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result]
[., getMaxX, (, ), ,, rectangle, ., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX]
[., getCenterY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, ., setLocation]
[), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }]
[==, RectangleAnchor, ., TOP_LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMinY, (]
[), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }]
[., TOP_LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMinY, (, ), )]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (]
[., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (]
[,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result]
[., getMinX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX]
[., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, ., setLocation]
[), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }]
[==, RectangleAnchor, ., TOP_RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMinY, (]
[), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }]
[., TOP_RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMinY, (, ), )]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (]
[., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (]
[,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result]
[., getMaxX, (, ), ,, rectangle, ., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX]
[., getMinY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, ., setLocation]
[), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }]
[==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMaxY, (]
[), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }]
[., BOTTOM_LEFT, ), {, result, ., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMaxY, (, ), )]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (]
[., setLocation, (, rectangle, ., getMinX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (]
[,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result]
[., getMinX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX]
[., getMaxY, (, ), ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, ., setLocation]
[), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }]
[==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMaxY, (]
[), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }]
[., BOTTOM_RIGHT, ), {, result, ., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMaxY, (, ), )]
[;, }, return, result, ;, }, public, static, Rectangle2D, createRectangle, (, final, Size2D, dimensions, ,, final, double, anchorX, ,, final]
[., setLocation, (, rectangle, ., getMaxX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, return, result, ;]
[,, rectangle, ., getMaxY, (, ), ), ;, }, return, result, ;, }, public, static, Rectangle2D, createRectangle, (, final, Size2D]
[., getMaxX, (, ), ,, rectangle, ., getMaxY, (, ), ), ;, }, return, result, ;, }, public, static, Rectangle2D]
[), ;, }, return, result, ;, }, public, static, Rectangle2D, createRectangle, (, final, Size2D, dimensions, ,, final, double, anchorX, ,]
[., getMaxY, (, ), ), ;, }, return, result, ;, }, public, static, Rectangle2D, createRectangle, (, final, Size2D, dimensions, ,]
[;, }, public, static, Rectangle2D, createRectangle, (, final, Size2D, dimensions, ,, final, double, anchorX, ,, final, double, anchorY, ,, final]
[;, final, double, w, =, dimensions, ., getWidth, (, ), ;, final, double, h, =, dimensions, ., getHeight, (, )]
[;, final, double, h, =, dimensions, ., getHeight, (, ), ;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {]
[., getWidth, (, ), ;, final, double, h, =, dimensions, ., getHeight, (, ), ;, if, (, anchor, ==, RectangleAnchor]
[;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w]
[., getHeight, (, ), ;, if, (, anchor, ==, RectangleAnchor, ., CENTER, ), {, result, =, new, Rectangle2D, ., Double]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[==, RectangleAnchor, ., CENTER, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[., CENTER, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, =, new]
[-, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, )]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, =, new]
[/, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, =, new]
[,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, =, new, Rectangle2D, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP, ), {, result, =, new, Rectangle2D, ., Double, (]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[==, RectangleAnchor, ., TOP, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[., TOP, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =, new]
[-, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, )]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =, new]
[/, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =, new]
[,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =, new, Rectangle2D, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[==, RectangleAnchor, ., BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[., BOTTOM, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, =, new]
[-, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, )]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, =, new]
[/, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, =, new]
[,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, =, new, Rectangle2D, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., LEFT, ), {, result, =, new, Rectangle2D, ., Double, (]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, ,, anchorY, -, h, /, 2.0, ,, w, ,, h]
[==, RectangleAnchor, ., LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, ,, anchorY, -, h, /, 2.0]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, ,, anchorY, -, h, /, 2.0, ,, w, ,, h]
[., LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, ,, anchorY, -, h, /, 2.0, ,, w]
[=, new, Rectangle2D, ., Double, (, anchorX, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =, new]
[-, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, )]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =, new]
[/, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =, new]
[,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =, new, Rectangle2D, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, ,, anchorY, -, h, /, 2.0, ,, w]
[==, RectangleAnchor, ., RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, ,, anchorY, -, h]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, ,, anchorY, -, h, /, 2.0, ,, w]
[., RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, ,, anchorY, -, h, /, 2.0]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, )]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[-, w, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new]
[-, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, )]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new]
[/, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new]
[,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new, Rectangle2D, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[==, RectangleAnchor, ., TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[., TOP_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new]
[-, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, )]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new]
[/, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new]
[,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new, Rectangle2D, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[==, RectangleAnchor, ., TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[., TOP_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new]
[-, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, )]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new]
[/, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new]
[,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[==, RectangleAnchor, ., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[., BOTTOM_LEFT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, .]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new]
[-, h, /, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, )]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new]
[/, 2.0, ,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result]
[,, w, ,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new]
[,, h, ), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, .]
[), ;, }, else, if, (, anchor, ==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[==, RectangleAnchor, ., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY]
[), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0]
[., BOTTOM_RIGHT, ), {, result, =, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h]
[=, new, Rectangle2D, ., Double, (, anchorX, -, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,]
[;, }, return, result, ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, RectangleAnchor, result, =, null, ;, if]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, return, result, ;, }, private, Object, readResolve]
[-, w, /, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, return, result, ;]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, return, result, ;, }, private, Object, readResolve]
[/, 2.0, ,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, return, result, ;, }, private]
[,, anchorY, -, h, /, 2.0, ,, w, ,, h, ), ;, }, return, result, ;, }, private, Object, readResolve]
[,, w, ,, h, ), ;, }, return, result, ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, RectangleAnchor]
[-, h, /, 2.0, ,, w, ,, h, ), ;, }, return, result, ;, }, private, Object, readResolve, (, )]
[,, w, ,, h, ), ;, }, return, result, ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, RectangleAnchor]
[/, 2.0, ,, w, ,, h, ), ;, }, return, result, ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException]
[,, w, ,, h, ), ;, }, return, result, ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, RectangleAnchor]
[,, h, ), ;, }, return, result, ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, RectangleAnchor, result, =]
[), ;, }, return, result, ;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, RectangleAnchor, result, =, null, ;]
[;, }, private, Object, readResolve, (, ), throws, ObjectStreamException, {, RectangleAnchor, result, =, null, ;, if, (, this, ., equals]
[;, if, (, this, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, result, =, RectangleAnchor, ., CENTER, ;, }]
[), {, result, =, RectangleAnchor, ., CENTER, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP, )]
[., equals, (, RectangleAnchor, ., CENTER, ), ), {, result, =, RectangleAnchor, ., CENTER, ;, }, else, if, (, this]
[), ), {, result, =, RectangleAnchor, ., CENTER, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP]
[., CENTER, ), ), {, result, =, RectangleAnchor, ., CENTER, ;, }, else, if, (, this, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., CENTER, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result]
[;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor, ., TOP]
[., CENTER, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM, )]
[., equals, (, RectangleAnchor, ., TOP, ), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, this]
[), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM]
[., TOP, ), ), {, result, =, RectangleAnchor, ., TOP, ;, }, else, if, (, this, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., TOP, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result]
[;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor, ., BOTTOM]
[., TOP, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., LEFT, )]
[., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, this]
[), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., LEFT]
[., BOTTOM, ), ), {, result, =, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, this, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., BOTTOM, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result]
[;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor, ., LEFT]
[., BOTTOM, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., RIGHT, )]
[., equals, (, RectangleAnchor, ., LEFT, ), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, this]
[), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., RIGHT]
[., LEFT, ), ), {, result, =, RectangleAnchor, ., LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result]
[;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor, ., RIGHT]
[., LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_LEFT, )]
[., equals, (, RectangleAnchor, ., RIGHT, ), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, this]
[), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_LEFT]
[., RIGHT, ), ), {, result, =, RectangleAnchor, ., RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result]
[;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT]
[., RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_RIGHT, )]
[., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, this]
[), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_RIGHT]
[., TOP_LEFT, ), ), {, result, =, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., TOP_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result]
[;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT]
[., TOP_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, )]
[., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, this]
[), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT]
[., TOP_RIGHT, ), ), {, result, =, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., TOP_RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result]
[;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT]
[., TOP_RIGHT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, )]
[., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, this]
[), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT]
[., BOTTOM_LEFT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor]
[=, RectangleAnchor, ., BOTTOM_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result]
[;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT]
[., BOTTOM_LEFT, ;, }, else, if, (, this, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor]
[), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, return, result, ;, }, }]
[., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, return, result, ;, }]
[), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, return, result, ;, }, }]
[., BOTTOM_RIGHT, ), ), {, result, =, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, return, result, ;, }, }]
[=, RectangleAnchor, ., BOTTOM_RIGHT, ;, }, return, result, ;, }, }]
[;, }, return, result, ;, }, }]
[., BOTTOM_RIGHT, ;, }, return, result, ;, }, }]
[;, }, }]
