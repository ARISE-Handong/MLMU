[., plot, ;, import, java, ., util, ., Collections, ;, public, class, PieLabelDistributor, extends, AbstractPieLabelDistributor, {, private, double, minGap, =]
[int, labelCount, ), {, super, (, ), ;, }, public, void, distributeLabels, (, double, minY, ,, double, height, ), {]
[), ;, }, public, void, distributeLabels, (, double, minY, ,, double, height, ), {, sort, (, ), ;, if, (]
[distributeLabels, (, double, minY, ,, double, height, ), {, sort, (, ), ;, if, (, isOverlap, (, ), ), {]
[double, minY, ,, double, height, ), {, sort, (, ), ;, if, (, isOverlap, (, ), ), {, adjustDownwards, (]
[,, double, height, ), {, sort, (, ), ;, if, (, isOverlap, (, ), ), {, adjustDownwards, (, minY, ,]
[(, ), ;, if, (, isOverlap, (, ), ), {, adjustDownwards, (, minY, ,, height, ), ;, }, if, (]
[isOverlap, (, ), ), {, adjustDownwards, (, minY, ,, height, ), ;, }, if, (, isOverlap, (, ), ), {]
[), ), {, adjustDownwards, (, minY, ,, height, ), ;, }, if, (, isOverlap, (, ), ), {, adjustUpwards, (]
[{, adjustDownwards, (, minY, ,, height, ), ;, }, if, (, isOverlap, (, ), ), {, adjustUpwards, (, minY, ,]
[), ;, }, if, (, isOverlap, (, ), ), {, adjustUpwards, (, minY, ,, height, ), ;, }, if, (]
[isOverlap, (, ), ), {, adjustUpwards, (, minY, ,, height, ), ;, }, if, (, isOverlap, (, ), ), {]
[), ), {, adjustUpwards, (, minY, ,, height, ), ;, }, if, (, isOverlap, (, ), ), {, spreadEvenly, (]
[{, adjustUpwards, (, minY, ,, height, ), ;, }, if, (, isOverlap, (, ), ), {, spreadEvenly, (, minY, ,]
[), {, spreadEvenly, (, minY, ,, height, ), ;, }, }, private, boolean, isOverlap, (, ), {, double, y, =]
[), ;, }, }, private, boolean, isOverlap, (, ), {, double, y, =, 0.0, ;, for, (, int, i, =]
[}, }, private, boolean, isOverlap, (, ), {, double, y, =, 0.0, ;, for, (, int, i, =, 0, ;]
[}, }, private, boolean, isOverlap, (, ), {, double, y, =, 0.0, ;, for, (, int, i, =, 0, ;]
[private, boolean, isOverlap, (, ), {, double, y, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <]
[private, boolean, isOverlap, (, ), {, double, y, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <]
[private, boolean, isOverlap, (, ), {, double, y, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <]
[=, 0.0, ;, for, (, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;]
[=, 0.0, ;, for, (, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;]
[=, 0, ;, i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {, PieLabelRecord, plr, =]
[;, i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {, PieLabelRecord, plr, =, getPieLabelRecord, (]
[labels, ., size, (, ), ;, i, ++, ), {, PieLabelRecord, plr, =, getPieLabelRecord, (, i, ), ;, if, (]
[labels, ., size, (, ), ;, i, ++, ), {, PieLabelRecord, plr, =, getPieLabelRecord, (, i, ), ;, if, (]
[size, (, ), ;, i, ++, ), {, PieLabelRecord, plr, =, getPieLabelRecord, (, i, ), ;, if, (, y, >]
[size, (, ), ;, i, ++, ), {, PieLabelRecord, plr, =, getPieLabelRecord, (, i, ), ;, if, (, y, >]
[PieLabelRecord, plr, =, getPieLabelRecord, (, i, ), ;, if, (, y, >, plr, ., getLowerY, (, ), ), {, return]
[getPieLabelRecord, (, i, ), ;, if, (, y, >, plr, ., getLowerY, (, ), ), {, return, true, ;, }]
[i, ), ;, if, (, y, >, plr, ., getLowerY, (, ), ), {, return, true, ;, }, y, =]
[i, ), ;, if, (, y, >, plr, ., getLowerY, (, ), ), {, return, true, ;, }, y, =]
[., getLowerY, (, ), ), {, return, true, ;, }, y, =, plr, ., getUpperY, (, ), ;, }, return]
[plr, ., getUpperY, (, ), ;, }, return, false, ;, }, protected, void, adjustInwards, (, ), {, int, lower, =]
[;, }, return, false, ;, }, protected, void, adjustInwards, (, ), {, int, lower, =, 0, ;, int, upper, =]
[;, }, return, false, ;, }, protected, void, adjustInwards, (, ), {, int, lower, =, 0, ;, int, upper, =]
[;, }, return, false, ;, }, protected, void, adjustInwards, (, ), {, int, lower, =, 0, ;, int, upper, =]
[;, }, return, false, ;, }, protected, void, adjustInwards, (, ), {, int, lower, =, 0, ;, int, upper, =]
[adjustInwards, (, ), {, int, lower, =, 0, ;, int, upper, =, this, ., labels, ., size, (, ), -]
[int, lower, =, 0, ;, int, upper, =, this, ., labels, ., size, (, ), -, 1, ;, while, (]
[int, lower, =, 0, ;, int, upper, =, this, ., labels, ., size, (, ), -, 1, ;, while, (]
[=, 0, ;, int, upper, =, this, ., labels, ., size, (, ), -, 1, ;, while, (, upper, >]
[=, this, ., labels, ., size, (, ), -, 1, ;, while, (, upper, >, lower, ), {, if, (]
[=, this, ., labels, ., size, (, ), -, 1, ;, while, (, upper, >, lower, ), {, if, (]
[., labels, ., size, (, ), -, 1, ;, while, (, upper, >, lower, ), {, if, (, lower, <]
[., labels, ., size, (, ), -, 1, ;, while, (, upper, >, lower, ), {, if, (, lower, <]
[., size, (, ), -, 1, ;, while, (, upper, >, lower, ), {, if, (, lower, <, upper, -]
[;, while, (, upper, >, lower, ), {, if, (, lower, <, upper, -, 1, ), {, PieLabelRecord, r0, =]
[(, upper, >, lower, ), {, if, (, lower, <, upper, -, 1, ), {, PieLabelRecord, r0, =, getPieLabelRecord, (]
[if, (, lower, <, upper, -, 1, ), {, PieLabelRecord, r0, =, getPieLabelRecord, (, lower, ), ;, PieLabelRecord, r1, =]
[lower, <, upper, -, 1, ), {, PieLabelRecord, r0, =, getPieLabelRecord, (, lower, ), ;, PieLabelRecord, r1, =, getPieLabelRecord, (]
[lower, <, upper, -, 1, ), {, PieLabelRecord, r0, =, getPieLabelRecord, (, lower, ), ;, PieLabelRecord, r1, =, getPieLabelRecord, (]
[upper, -, 1, ), {, PieLabelRecord, r0, =, getPieLabelRecord, (, lower, ), ;, PieLabelRecord, r1, =, getPieLabelRecord, (, lower, +]
[PieLabelRecord, r0, =, getPieLabelRecord, (, lower, ), ;, PieLabelRecord, r1, =, getPieLabelRecord, (, lower, +, 1, ), ;, if, (]
[PieLabelRecord, r0, =, getPieLabelRecord, (, lower, ), ;, PieLabelRecord, r1, =, getPieLabelRecord, (, lower, +, 1, ), ;, if, (]
[PieLabelRecord, r0, =, getPieLabelRecord, (, lower, ), ;, PieLabelRecord, r1, =, getPieLabelRecord, (, lower, +, 1, ), ;, if, (]
[), ;, PieLabelRecord, r1, =, getPieLabelRecord, (, lower, +, 1, ), ;, if, (, r1, ., getLowerY, (, ), <]
[), ;, PieLabelRecord, r1, =, getPieLabelRecord, (, lower, +, 1, ), ;, if, (, r1, ., getLowerY, (, ), <]
[), ;, if, (, r1, ., getLowerY, (, ), <, r0, ., getUpperY, (, ), ), {, double, adjust, =]
[), ;, if, (, r1, ., getLowerY, (, ), <, r0, ., getUpperY, (, ), ), {, double, adjust, =]
[), ;, if, (, r1, ., getLowerY, (, ), <, r0, ., getUpperY, (, ), ), {, double, adjust, =]
[), ;, if, (, r1, ., getLowerY, (, ), <, r0, ., getUpperY, (, ), ), {, double, adjust, =]
[getLowerY, (, ), <, r0, ., getUpperY, (, ), ), {, double, adjust, =, r0, ., getUpperY, (, ), -]
[getLowerY, (, ), <, r0, ., getUpperY, (, ), ), {, double, adjust, =, r0, ., getUpperY, (, ), -]
[getUpperY, (, ), ), {, double, adjust, =, r0, ., getUpperY, (, ), -, r1, ., getLowerY, (, ), +]
[getUpperY, (, ), ), {, double, adjust, =, r0, ., getUpperY, (, ), -, r1, ., getLowerY, (, ), +]
[{, double, adjust, =, r0, ., getUpperY, (, ), -, r1, ., getLowerY, (, ), +, this, ., minGap, ;]
[{, double, adjust, =, r0, ., getUpperY, (, ), -, r1, ., getLowerY, (, ), +, this, ., minGap, ;]
[r0, ., getUpperY, (, ), -, r1, ., getLowerY, (, ), +, this, ., minGap, ;, r1, ., setAllocatedY, (]
[r0, ., getUpperY, (, ), -, r1, ., getLowerY, (, ), +, this, ., minGap, ;, r1, ., setAllocatedY, (]
[r0, ., getUpperY, (, ), -, r1, ., getLowerY, (, ), +, this, ., minGap, ;, r1, ., setAllocatedY, (]
[r1, ., getLowerY, (, ), +, this, ., minGap, ;, r1, ., setAllocatedY, (, r1, ., getAllocatedY, (, ), +]
[minGap, ;, r1, ., setAllocatedY, (, r1, ., getAllocatedY, (, ), +, adjust, ), ;, }, }, PieLabelRecord, r2, =]
[r1, ., setAllocatedY, (, r1, ., getAllocatedY, (, ), +, adjust, ), ;, }, }, PieLabelRecord, r2, =, getPieLabelRecord, (]
[r1, ., setAllocatedY, (, r1, ., getAllocatedY, (, ), +, adjust, ), ;, }, }, PieLabelRecord, r2, =, getPieLabelRecord, (]
[setAllocatedY, (, r1, ., getAllocatedY, (, ), +, adjust, ), ;, }, }, PieLabelRecord, r2, =, getPieLabelRecord, (, upper, -]
[), +, adjust, ), ;, }, }, PieLabelRecord, r2, =, getPieLabelRecord, (, upper, -, 1, ), ;, PieLabelRecord, r3, =]
[adjust, ), ;, }, }, PieLabelRecord, r2, =, getPieLabelRecord, (, upper, -, 1, ), ;, PieLabelRecord, r3, =, getPieLabelRecord, (]
[PieLabelRecord, r2, =, getPieLabelRecord, (, upper, -, 1, ), ;, PieLabelRecord, r3, =, getPieLabelRecord, (, upper, ), ;, if, (]
[PieLabelRecord, r2, =, getPieLabelRecord, (, upper, -, 1, ), ;, PieLabelRecord, r3, =, getPieLabelRecord, (, upper, ), ;, if, (]
[PieLabelRecord, r2, =, getPieLabelRecord, (, upper, -, 1, ), ;, PieLabelRecord, r3, =, getPieLabelRecord, (, upper, ), ;, if, (]
[-, 1, ), ;, PieLabelRecord, r3, =, getPieLabelRecord, (, upper, ), ;, if, (, r2, ., getUpperY, (, ), >]
[-, 1, ), ;, PieLabelRecord, r3, =, getPieLabelRecord, (, upper, ), ;, if, (, r2, ., getUpperY, (, ), >]
[), ;, if, (, r2, ., getUpperY, (, ), >, r3, ., getLowerY, (, ), ), {, double, adjust, =]
[), ;, if, (, r2, ., getUpperY, (, ), >, r3, ., getLowerY, (, ), ), {, double, adjust, =]
[;, if, (, r2, ., getUpperY, (, ), >, r3, ., getLowerY, (, ), ), {, double, adjust, =, (]
[;, if, (, r2, ., getUpperY, (, ), >, r3, ., getLowerY, (, ), ), {, double, adjust, =, (]
[;, if, (, r2, ., getUpperY, (, ), >, r3, ., getLowerY, (, ), ), {, double, adjust, =, (]
[(, ), >, r3, ., getLowerY, (, ), ), {, double, adjust, =, (, r2, ., getUpperY, (, ), -]
[(, ), >, r3, ., getLowerY, (, ), ), {, double, adjust, =, (, r2, ., getUpperY, (, ), -]
[), ), {, double, adjust, =, (, r2, ., getUpperY, (, ), -, r3, ., getLowerY, (, ), ), +]
[), ), {, double, adjust, =, (, r2, ., getUpperY, (, ), -, r3, ., getLowerY, (, ), ), +]
[adjust, =, (, r2, ., getUpperY, (, ), -, r3, ., getLowerY, (, ), ), +, this, ., minGap, ;]
[adjust, =, (, r2, ., getUpperY, (, ), -, r3, ., getLowerY, (, ), ), +, this, ., minGap, ;]
[., getUpperY, (, ), -, r3, ., getLowerY, (, ), ), +, this, ., minGap, ;, r3, ., setAllocatedY, (]
[., getUpperY, (, ), -, r3, ., getLowerY, (, ), ), +, this, ., minGap, ;, r3, ., setAllocatedY, (]
[., getUpperY, (, ), -, r3, ., getLowerY, (, ), ), +, this, ., minGap, ;, r3, ., setAllocatedY, (]
[., getLowerY, (, ), ), +, this, ., minGap, ;, r3, ., setAllocatedY, (, r3, ., getAllocatedY, (, ), +]
[), +, this, ., minGap, ;, r3, ., setAllocatedY, (, r3, ., getAllocatedY, (, ), +, adjust, ), ;, }]
[), +, this, ., minGap, ;, r3, ., setAllocatedY, (, r3, ., getAllocatedY, (, ), +, adjust, ), ;, }]
[., minGap, ;, r3, ., setAllocatedY, (, r3, ., getAllocatedY, (, ), +, adjust, ), ;, }, lower, ++, ;]
[., minGap, ;, r3, ., setAllocatedY, (, r3, ., getAllocatedY, (, ), +, adjust, ), ;, }, lower, ++, ;]
[--, ;, }, }, protected, void, adjustDownwards, (, double, minY, ,, double, height, ), {, for, (, int, i, =]
[}, }, protected, void, adjustDownwards, (, double, minY, ,, double, height, ), {, for, (, int, i, =, 0, ;]
[}, }, protected, void, adjustDownwards, (, double, minY, ,, double, height, ), {, for, (, int, i, =, 0, ;]
[protected, void, adjustDownwards, (, double, minY, ,, double, height, ), {, for, (, int, i, =, 0, ;, i, <]
[protected, void, adjustDownwards, (, double, minY, ,, double, height, ), {, for, (, int, i, =, 0, ;, i, <]
[protected, void, adjustDownwards, (, double, minY, ,, double, height, ), {, for, (, int, i, =, 0, ;, i, <]
[protected, void, adjustDownwards, (, double, minY, ,, double, height, ), {, for, (, int, i, =, 0, ;, i, <]
[height, ), {, for, (, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), -]
[{, for, (, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), -, 1, ;]
[{, for, (, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), -, 1, ;]
[;, i, <, this, ., labels, ., size, (, ), -, 1, ;, i, ++, ), {, PieLabelRecord, record0, =]
[<, this, ., labels, ., size, (, ), -, 1, ;, i, ++, ), {, PieLabelRecord, record0, =, getPieLabelRecord, (]
[(, ), -, 1, ;, i, ++, ), {, PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =]
[-, 1, ;, i, ++, ), {, PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =, getPieLabelRecord, (]
[-, 1, ;, i, ++, ), {, PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =, getPieLabelRecord, (]
[;, i, ++, ), {, PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =, getPieLabelRecord, (, i, +]
[PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =, getPieLabelRecord, (, i, +, 1, ), ;, if, (]
[PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =, getPieLabelRecord, (, i, +, 1, ), ;, if, (]
[PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =, getPieLabelRecord, (, i, +, 1, ), ;, if, (]
[), ;, PieLabelRecord, record1, =, getPieLabelRecord, (, i, +, 1, ), ;, if, (, record1, ., getLowerY, (, ), <]
[), ;, PieLabelRecord, record1, =, getPieLabelRecord, (, i, +, 1, ), ;, if, (, record1, ., getLowerY, (, ), <]
[i, +, 1, ), ;, if, (, record1, ., getLowerY, (, ), <, record0, ., getUpperY, (, ), ), {]
[i, +, 1, ), ;, if, (, record1, ., getLowerY, (, ), <, record0, ., getUpperY, (, ), ), {]
[;, if, (, record1, ., getLowerY, (, ), <, record0, ., getUpperY, (, ), ), {, record1, ., setAllocatedY, (]
[;, if, (, record1, ., getLowerY, (, ), <, record0, ., getUpperY, (, ), ), {, record1, ., setAllocatedY, (]
[., getLowerY, (, ), <, record0, ., getUpperY, (, ), ), {, record1, ., setAllocatedY, (, Math, ., min, (]
[., getLowerY, (, ), <, record0, ., getUpperY, (, ), ), {, record1, ., setAllocatedY, (, Math, ., min, (]
[., getLowerY, (, ), <, record0, ., getUpperY, (, ), ), {, record1, ., setAllocatedY, (, Math, ., min, (]
[(, ), <, record0, ., getUpperY, (, ), ), {, record1, ., setAllocatedY, (, Math, ., min, (, minY, +]
[<, record0, ., getUpperY, (, ), ), {, record1, ., setAllocatedY, (, Math, ., min, (, minY, +, height, -]
[<, record0, ., getUpperY, (, ), ), {, record1, ., setAllocatedY, (, Math, ., min, (, minY, +, height, -]
[<, record0, ., getUpperY, (, ), ), {, record1, ., setAllocatedY, (, Math, ., min, (, minY, +, height, -]
[), {, record1, ., setAllocatedY, (, Math, ., min, (, minY, +, height, -, record1, ., getLabelHeight, (, ), /]
[record1, ., setAllocatedY, (, Math, ., min, (, minY, +, height, -, record1, ., getLabelHeight, (, ), /, 2.0, ,]
[record1, ., setAllocatedY, (, Math, ., min, (, minY, +, height, -, record1, ., getLabelHeight, (, ), /, 2.0, ,]
[record1, ., setAllocatedY, (, Math, ., min, (, minY, +, height, -, record1, ., getLabelHeight, (, ), /, 2.0, ,]
[record1, ., setAllocatedY, (, Math, ., min, (, minY, +, height, -, record1, ., getLabelHeight, (, ), /, 2.0, ,]
[min, (, minY, +, height, -, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getUpperY, (, ), +]
[min, (, minY, +, height, -, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getUpperY, (, ), +]
[height, -, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getUpperY, (, ), +, this, ., minGap, +]
[height, -, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getUpperY, (, ), +, this, ., minGap, +]
[height, -, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getUpperY, (, ), +, this, ., minGap, +]
[), /, 2.0, ,, record0, ., getUpperY, (, ), +, this, ., minGap, +, record1, ., getLabelHeight, (, ), /]
[;, }, }, }, protected, void, adjustUpwards, (, double, minY, ,, double, height, ), {, for, (, int, i, =]
[;, }, }, }, protected, void, adjustUpwards, (, double, minY, ,, double, height, ), {, for, (, int, i, =]
[;, }, }, }, protected, void, adjustUpwards, (, double, minY, ,, double, height, ), {, for, (, int, i, =]
[;, }, }, }, protected, void, adjustUpwards, (, double, minY, ,, double, height, ), {, for, (, int, i, =]
[double, minY, ,, double, height, ), {, for, (, int, i, =, this, ., labels, ., size, (, ), -]
[,, double, height, ), {, for, (, int, i, =, this, ., labels, ., size, (, ), -, 1, ;]
[,, double, height, ), {, for, (, int, i, =, this, ., labels, ., size, (, ), -, 1, ;]
[height, ), {, for, (, int, i, =, this, ., labels, ., size, (, ), -, 1, ;, i, >]
[{, for, (, int, i, =, this, ., labels, ., size, (, ), -, 1, ;, i, >, 0, ;]
[{, for, (, int, i, =, this, ., labels, ., size, (, ), -, 1, ;, i, >, 0, ;]
[., labels, ., size, (, ), -, 1, ;, i, >, 0, ;, i, --, ), {, PieLabelRecord, record0, =]
[., size, (, ), -, 1, ;, i, >, 0, ;, i, --, ), {, PieLabelRecord, record0, =, getPieLabelRecord, (]
[;, i, >, 0, ;, i, --, ), {, PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =]
[>, 0, ;, i, --, ), {, PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =, getPieLabelRecord, (]
[>, 0, ;, i, --, ), {, PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =, getPieLabelRecord, (]
[;, i, --, ), {, PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =, getPieLabelRecord, (, i, -]
[PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =, getPieLabelRecord, (, i, -, 1, ), ;, if, (]
[PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =, getPieLabelRecord, (, i, -, 1, ), ;, if, (]
[PieLabelRecord, record0, =, getPieLabelRecord, (, i, ), ;, PieLabelRecord, record1, =, getPieLabelRecord, (, i, -, 1, ), ;, if, (]
[), ;, PieLabelRecord, record1, =, getPieLabelRecord, (, i, -, 1, ), ;, if, (, record1, ., getUpperY, (, ), >]
[), ;, PieLabelRecord, record1, =, getPieLabelRecord, (, i, -, 1, ), ;, if, (, record1, ., getUpperY, (, ), >]
[i, -, 1, ), ;, if, (, record1, ., getUpperY, (, ), >, record0, ., getLowerY, (, ), ), {]
[i, -, 1, ), ;, if, (, record1, ., getUpperY, (, ), >, record0, ., getLowerY, (, ), ), {]
[;, if, (, record1, ., getUpperY, (, ), >, record0, ., getLowerY, (, ), ), {, record1, ., setAllocatedY, (]
[;, if, (, record1, ., getUpperY, (, ), >, record0, ., getLowerY, (, ), ), {, record1, ., setAllocatedY, (]
[., getUpperY, (, ), >, record0, ., getLowerY, (, ), ), {, record1, ., setAllocatedY, (, Math, ., max, (]
[., getUpperY, (, ), >, record0, ., getLowerY, (, ), ), {, record1, ., setAllocatedY, (, Math, ., max, (]
[(, ), >, record0, ., getLowerY, (, ), ), {, record1, ., setAllocatedY, (, Math, ., max, (, minY, +]
[(, ), >, record0, ., getLowerY, (, ), ), {, record1, ., setAllocatedY, (, Math, ., max, (, minY, +]
[(, ), >, record0, ., getLowerY, (, ), ), {, record1, ., setAllocatedY, (, Math, ., max, (, minY, +]
[(, ), ), {, record1, ., setAllocatedY, (, Math, ., max, (, minY, +, record1, ., getLabelHeight, (, ), /]
[), {, record1, ., setAllocatedY, (, Math, ., max, (, minY, +, record1, ., getLabelHeight, (, ), /, 2.0, ,]
[), {, record1, ., setAllocatedY, (, Math, ., max, (, minY, +, record1, ., getLabelHeight, (, ), /, 2.0, ,]
[), {, record1, ., setAllocatedY, (, Math, ., max, (, minY, +, record1, ., getLabelHeight, (, ), /, 2.0, ,]
[), {, record1, ., setAllocatedY, (, Math, ., max, (, minY, +, record1, ., getLabelHeight, (, ), /, 2.0, ,]
[Math, ., max, (, minY, +, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getLowerY, (, ), -]
[Math, ., max, (, minY, +, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getLowerY, (, ), -]
[minY, +, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getLowerY, (, ), -, this, ., minGap, -]
[minY, +, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getLowerY, (, ), -, this, ., minGap, -]
[minY, +, record1, ., getLabelHeight, (, ), /, 2.0, ,, record0, ., getLowerY, (, ), -, this, ., minGap, -]
[), /, 2.0, ,, record0, ., getLowerY, (, ), -, this, ., minGap, -, record1, ., getLabelHeight, (, ), /]
[), ), ;, }, }, }, protected, void, spreadEvenly, (, double, minY, ,, double, height, ), {, double, y, =]
[}, protected, void, spreadEvenly, (, double, minY, ,, double, height, ), {, double, y, =, minY, ;, double, sumOfLabelHeights, =]
[,, double, height, ), {, double, y, =, minY, ;, double, sumOfLabelHeights, =, 0.0, ;, for, (, int, i, =]
[height, ), {, double, y, =, minY, ;, double, sumOfLabelHeights, =, 0.0, ;, for, (, int, i, =, 0, ;]
[height, ), {, double, y, =, minY, ;, double, sumOfLabelHeights, =, 0.0, ;, for, (, int, i, =, 0, ;]
[{, double, y, =, minY, ;, double, sumOfLabelHeights, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <]
[{, double, y, =, minY, ;, double, sumOfLabelHeights, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <]
[{, double, y, =, minY, ;, double, sumOfLabelHeights, =, 0.0, ;, for, (, int, i, =, 0, ;, i, <]
[=, 0.0, ;, for, (, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;]
[=, 0.0, ;, for, (, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;]
[(, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {]
[i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {, sumOfLabelHeights, +=]
[i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {, sumOfLabelHeights, +=]
[0, ;, i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {, sumOfLabelHeights, +=, getPieLabelRecord, (]
[;, i, ++, ), {, sumOfLabelHeights, +=, getPieLabelRecord, (, i, ), ., getLabelHeight, (, ), ;, }, double, gap, =]
[;, i, ++, ), {, sumOfLabelHeights, +=, getPieLabelRecord, (, i, ), ., getLabelHeight, (, ), ;, }, double, gap, =]
[++, ), {, sumOfLabelHeights, +=, getPieLabelRecord, (, i, ), ., getLabelHeight, (, ), ;, }, double, gap, =, height, -]
[+=, getPieLabelRecord, (, i, ), ., getLabelHeight, (, ), ;, }, double, gap, =, height, -, sumOfLabelHeights, ;, if, (]
[+=, getPieLabelRecord, (, i, ), ., getLabelHeight, (, ), ;, }, double, gap, =, height, -, sumOfLabelHeights, ;, if, (]
[+=, getPieLabelRecord, (, i, ), ., getLabelHeight, (, ), ;, }, double, gap, =, height, -, sumOfLabelHeights, ;, if, (]
[+=, getPieLabelRecord, (, i, ), ., getLabelHeight, (, ), ;, }, double, gap, =, height, -, sumOfLabelHeights, ;, if, (]
[), ;, }, double, gap, =, height, -, sumOfLabelHeights, ;, if, (, this, ., labels, ., size, (, ), >]
[double, gap, =, height, -, sumOfLabelHeights, ;, if, (, this, ., labels, ., size, (, ), >, 1, ), {]
[=, height, -, sumOfLabelHeights, ;, if, (, this, ., labels, ., size, (, ), >, 1, ), {, gap, =]
[=, height, -, sumOfLabelHeights, ;, if, (, this, ., labels, ., size, (, ), >, 1, ), {, gap, =]
[-, sumOfLabelHeights, ;, if, (, this, ., labels, ., size, (, ), >, 1, ), {, gap, =, gap, /]
[sumOfLabelHeights, ;, if, (, this, ., labels, ., size, (, ), >, 1, ), {, gap, =, gap, /, (]
[sumOfLabelHeights, ;, if, (, this, ., labels, ., size, (, ), >, 1, ), {, gap, =, gap, /, (]
[sumOfLabelHeights, ;, if, (, this, ., labels, ., size, (, ), >, 1, ), {, gap, =, gap, /, (]
[sumOfLabelHeights, ;, if, (, this, ., labels, ., size, (, ), >, 1, ), {, gap, =, gap, /, (]
[size, (, ), >, 1, ), {, gap, =, gap, /, (, this, ., labels, ., size, (, ), -]
[gap, /, (, this, ., labels, ., size, (, ), -, 1, ), ;, }, for, (, int, i, =]
[(, this, ., labels, ., size, (, ), -, 1, ), ;, }, for, (, int, i, =, 0, ;]
[(, this, ., labels, ., size, (, ), -, 1, ), ;, }, for, (, int, i, =, 0, ;]
[., labels, ., size, (, ), -, 1, ), ;, }, for, (, int, i, =, 0, ;, i, <]
[., labels, ., size, (, ), -, 1, ), ;, }, for, (, int, i, =, 0, ;, i, <]
[., labels, ., size, (, ), -, 1, ), ;, }, for, (, int, i, =, 0, ;, i, <]
[), ;, }, for, (, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;]
[), ;, }, for, (, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;]
[=, 0, ;, i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {, PieLabelRecord, record, =]
[;, i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {, PieLabelRecord, record, =, getPieLabelRecord, (]
[this, ., labels, ., size, (, ), ;, i, ++, ), {, PieLabelRecord, record, =, getPieLabelRecord, (, i, ), ;]
[labels, ., size, (, ), ;, i, ++, ), {, PieLabelRecord, record, =, getPieLabelRecord, (, i, ), ;, y, =]
[labels, ., size, (, ), ;, i, ++, ), {, PieLabelRecord, record, =, getPieLabelRecord, (, i, ), ;, y, =]
[size, (, ), ;, i, ++, ), {, PieLabelRecord, record, =, getPieLabelRecord, (, i, ), ;, y, =, y, +]
[size, (, ), ;, i, ++, ), {, PieLabelRecord, record, =, getPieLabelRecord, (, i, ), ;, y, =, y, +]
[size, (, ), ;, i, ++, ), {, PieLabelRecord, record, =, getPieLabelRecord, (, i, ), ;, y, =, y, +]
[), {, PieLabelRecord, record, =, getPieLabelRecord, (, i, ), ;, y, =, y, +, record, ., getLabelHeight, (, ), /]
[PieLabelRecord, record, =, getPieLabelRecord, (, i, ), ;, y, =, y, +, record, ., getLabelHeight, (, ), /, 2.0, ;]
[PieLabelRecord, record, =, getPieLabelRecord, (, i, ), ;, y, =, y, +, record, ., getLabelHeight, (, ), /, 2.0, ;]
[(, i, ), ;, y, =, y, +, record, ., getLabelHeight, (, ), /, 2.0, ;, record, ., setAllocatedY, (]
[;, y, =, y, +, record, ., getLabelHeight, (, ), /, 2.0, ;, record, ., setAllocatedY, (, y, ), ;]
[=, y, +, record, ., getLabelHeight, (, ), /, 2.0, ;, record, ., setAllocatedY, (, y, ), ;, y, =]
[=, y, +, record, ., getLabelHeight, (, ), /, 2.0, ;, record, ., setAllocatedY, (, y, ), ;, y, =]
[=, y, +, record, ., getLabelHeight, (, ), /, 2.0, ;, record, ., setAllocatedY, (, y, ), ;, y, =]
[+, record, ., getLabelHeight, (, ), /, 2.0, ;, record, ., setAllocatedY, (, y, ), ;, y, =, y, +]
[+, record, ., getLabelHeight, (, ), /, 2.0, ;, record, ., setAllocatedY, (, y, ), ;, y, =, y, +]
[+, record, ., getLabelHeight, (, ), /, 2.0, ;, record, ., setAllocatedY, (, y, ), ;, y, =, y, +]
[/, 2.0, ;, record, ., setAllocatedY, (, y, ), ;, y, =, y, +, record, ., getLabelHeight, (, ), /]
[;, record, ., setAllocatedY, (, y, ), ;, y, =, y, +, record, ., getLabelHeight, (, ), /, 2.0, +]
[y, +, record, ., getLabelHeight, (, ), /, 2.0, +, gap, ;, }, }, public, void, sort, (, ), {]
[y, +, record, ., getLabelHeight, (, ), /, 2.0, +, gap, ;, }, }, public, void, sort, (, ), {]
[getLabelHeight, (, ), /, 2.0, +, gap, ;, }, }, public, void, sort, (, ), {, Collections, ., sort, (]
[getLabelHeight, (, ), /, 2.0, +, gap, ;, }, }, public, void, sort, (, ), {, Collections, ., sort, (]
[{, Collections, ., sort, (, this, ., labels, ), ;, }, public, String, toString, (, ), {, StringBuffer, result, =]
[}, public, String, toString, (, ), {, StringBuffer, result, =, new, StringBuffer, (, ), ;, for, (, int, i, =]
[String, toString, (, ), {, StringBuffer, result, =, new, StringBuffer, (, ), ;, for, (, int, i, =, 0, ;]
[String, toString, (, ), {, StringBuffer, result, =, new, StringBuffer, (, ), ;, for, (, int, i, =, 0, ;]
[(, ), {, StringBuffer, result, =, new, StringBuffer, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[(, ), {, StringBuffer, result, =, new, StringBuffer, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[(, ), {, StringBuffer, result, =, new, StringBuffer, (, ), ;, for, (, int, i, =, 0, ;, i, <]
[(, ), ;, for, (, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;]
[(, ), ;, for, (, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;]
[(, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {]
[(, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {]
[(, int, i, =, 0, ;, i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {]
[0, ;, i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {, result, ., append, (]
[0, ;, i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {, result, ., append, (]
[i, <, this, ., labels, ., size, (, ), ;, i, ++, ), {, result, ., append, (, getPieLabelRecord, (]
[i, ++, ), {, result, ., append, (, getPieLabelRecord, (, i, ), ., toString, (, ), ), ., append, (]
[., append, (, getPieLabelRecord, (, i, ), ., toString, (, ), ), ., append, (, "\n", ), ;, }, return]
[., append, (, getPieLabelRecord, (, i, ), ., toString, (, ), ), ., append, (, "\n", ), ;, }, return]
