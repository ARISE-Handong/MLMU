[;, private, int, curCodeSizeEstimate, =, -, 1, ;, private, int, curZippedCodeSizeEstimate, =, -, 1, ;, private, Deque, <, String, >]
[;, private, int, curZippedCodeSizeEstimate, =, -, 1, ;, private, Deque, <, String, >, currentRunningPass, =, new, ArrayDeque, <, String, >]
[;, private, int, curZippedCodeSizeEstimate, =, -, 1, ;, private, Deque, <, String, >, currentRunningPass, =, new, ArrayDeque, <, String, >]
[;, private, Deque, <, String, >, currentRunningPass, =, new, ArrayDeque, <, String, >, (, ), ;, private, final, Map, <]
[;, private, Deque, <, String, >, currentRunningPass, =, new, ArrayDeque, <, String, >, (, ), ;, private, final, Map, <]
[;, private, final, Map, <, String, ,, Stats, >, summary, =, Maps, ., newHashMap, (, ), ;, private, ImmutableMap, <]
[;, private, ImmutableMap, <, String, ,, Stats, >, summaryCopy, =, null, ;, private, final, List, <, Stats, >, log, =]
[., newHashMap, (, ), ;, private, ImmutableMap, <, String, ,, Stats, >, summaryCopy, =, null, ;, private, final, List, <]
[;, private, final, List, <, Stats, >, log, =, Lists, ., newArrayList, (, ), ;, public, static, class, Stats, {]
[;, public, static, class, Stats, {, public, Stats, (, String, pass, ), {, this, ., pass, =, pass, ;, }]
[., newArrayList, (, ), ;, public, static, class, Stats, {, public, Stats, (, String, pass, ), {, this, ., pass]
[=, pass, ;, }, public, final, String, pass, ;, public, long, runtime, =, 0, ;, public, int, runs, =, 0]
[., pass, =, pass, ;, }, public, final, String, pass, ;, public, long, runtime, =, 0, ;, public, int, runs]
[;, }, public, final, String, pass, ;, public, long, runtime, =, 0, ;, public, int, runs, =, 0, ;, public]
[;, public, int, runs, =, 0, ;, public, int, changes, =, 0, ;, public, int, diff, =, 0, ;, public]
[;, public, int, changes, =, 0, ;, public, int, diff, =, 0, ;, public, int, gzDiff, =, 0, ;, public]
[;, public, int, diff, =, 0, ;, public, int, gzDiff, =, 0, ;, public, int, size, =, 0, ;, public]
[;, public, int, gzDiff, =, 0, ;, public, int, size, =, 0, ;, public, int, gzSize, =, 0, ;, }]
[;, public, int, size, =, 0, ;, public, int, gzSize, =, 0, ;, }, PerformanceTracker, (, Node, jsRoot, ,, TracerMode]
[;, public, int, gzSize, =, 0, ;, }, PerformanceTracker, (, Node, jsRoot, ,, TracerMode, mode, ), {, this, ., jsRoot]
[;, }, PerformanceTracker, (, Node, jsRoot, ,, TracerMode, mode, ), {, this, ., jsRoot, =, jsRoot, ;, switch, (, mode]
[=, jsRoot, ;, switch, (, mode, ), {, case, TIMING_ONLY, :, this, ., trackSize, =, false, ;, this, ., trackGzippedSize]
[., jsRoot, =, jsRoot, ;, switch, (, mode, ), {, case, TIMING_ONLY, :, this, ., trackSize, =, false, ;, this]
[;, switch, (, mode, ), {, case, TIMING_ONLY, :, this, ., trackSize, =, false, ;, this, ., trackGzippedSize, =, false]
[), {, case, TIMING_ONLY, :, this, ., trackSize, =, false, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case]
[:, this, ., trackSize, =, false, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, RAW_SIZE, :, this, .]
[=, false, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, RAW_SIZE, :, this, ., trackSize, =, true, ;]
[., trackSize, =, false, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, RAW_SIZE, :, this, ., trackSize, =]
[;, this, ., trackGzippedSize, =, false, ;, break, ;, case, RAW_SIZE, :, this, ., trackSize, =, true, ;, this, .]
[=, false, ;, break, ;, case, RAW_SIZE, :, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =, false, ;]
[., trackGzippedSize, =, false, ;, break, ;, case, RAW_SIZE, :, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =]
[;, break, ;, case, RAW_SIZE, :, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =, false, ;, break, ;]
[:, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, ALL, :, this, .]
[=, true, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, ALL, :, this, ., trackSize, =, true, ;]
[., trackSize, =, true, ;, this, ., trackGzippedSize, =, false, ;, break, ;, case, ALL, :, this, ., trackSize, =]
[;, this, ., trackGzippedSize, =, false, ;, break, ;, case, ALL, :, this, ., trackSize, =, true, ;, this, .]
[=, false, ;, break, ;, case, ALL, :, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =, true, ;]
[., trackGzippedSize, =, false, ;, break, ;, case, ALL, :, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =]
[;, break, ;, case, ALL, :, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =, true, ;, break, ;]
[:, this, ., trackSize, =, true, ;, this, ., trackGzippedSize, =, true, ;, break, ;, case, OFF, :, default, :]
[=, true, ;, this, ., trackGzippedSize, =, true, ;, break, ;, case, OFF, :, default, :, throw, new, UnsupportedOperationException, (]
[., trackSize, =, true, ;, this, ., trackGzippedSize, =, true, ;, break, ;, case, OFF, :, default, :, throw, new]
[;, this, ., trackGzippedSize, =, true, ;, break, ;, case, OFF, :, default, :, throw, new, UnsupportedOperationException, (, ), ;]
[=, true, ;, break, ;, case, OFF, :, default, :, throw, new, UnsupportedOperationException, (, ), ;, }, }, CodeChangeHandler, getCodeChangeHandler]
[., trackGzippedSize, =, true, ;, break, ;, case, OFF, :, default, :, throw, new, UnsupportedOperationException, (, ), ;, }, }]
[;, break, ;, case, OFF, :, default, :, throw, new, UnsupportedOperationException, (, ), ;, }, }, CodeChangeHandler, getCodeChangeHandler, (, )]
[:, default, :, throw, new, UnsupportedOperationException, (, ), ;, }, }, CodeChangeHandler, getCodeChangeHandler, (, ), {, return, codeChange, ;, }]
[;, }, }, CodeChangeHandler, getCodeChangeHandler, (, ), {, return, codeChange, ;, }, void, recordPassStart, (, String, passName, ), {, currentRunningPass]
[;, }, void, recordPassStart, (, String, passName, ), {, currentRunningPass, ., push, (, passName, ), ;, codeChange, ., reset, (]
[;, codeChange, ., reset, (, ), ;, }, void, recordPassStop, (, String, passName, ,, long, result, ), {, String, currentPassName]
[., push, (, passName, ), ;, codeChange, ., reset, (, ), ;, }, void, recordPassStop, (, String, passName, ,, long]
[), ;, codeChange, ., reset, (, ), ;, }, void, recordPassStop, (, String, passName, ,, long, result, ), {, String]
[;, }, void, recordPassStop, (, String, passName, ,, long, result, ), {, String, currentPassName, =, currentRunningPass, ., pop, (, )]
[., reset, (, ), ;, }, void, recordPassStop, (, String, passName, ,, long, result, ), {, String, currentPassName, =, currentRunningPass]
[;, if, (, !, passName, ., equals, (, currentPassName, ), ), {, throw, new, RuntimeException, (, passName, +, " is not running.", )]
[., pop, (, ), ;, if, (, !, passName, ., equals, (, currentPassName, ), ), {, throw, new, RuntimeException, (]
[), {, throw, new, RuntimeException, (, passName, +, " is not running.", ), ;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (, codeChange]
[), {, throw, new, RuntimeException, (, passName, +, " is not running.", ), ;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (, codeChange]
[., equals, (, currentPassName, ), ), {, throw, new, RuntimeException, (, passName, +, " is not running.", ), ;, }, CodeSizeEstimatePrinter, printer, =]
[), ), {, throw, new, RuntimeException, (, passName, +, " is not running.", ), ;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (]
[;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (, codeChange, ., hasCodeChanged, (, ), &&, (, trackSize, ||, trackGzippedSize, )]
[), ;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (, codeChange, ., hasCodeChanged, (, ), &&, (, trackSize, ||, trackGzippedSize]
[+, " is not running.", ), ;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (, codeChange, ., hasCodeChanged, (, ), &&, (, trackSize]
[), ;, }, CodeSizeEstimatePrinter, printer, =, null, ;, if, (, codeChange, ., hasCodeChanged, (, ), &&, (, trackSize, ||, trackGzippedSize]
[;, if, (, codeChange, ., hasCodeChanged, (, ), &&, (, trackSize, ||, trackGzippedSize, ), ), {, printer, =, estimateCodeSize, (]
[), {, printer, =, estimateCodeSize, (, jsRoot, ), ;, }, Stats, logStats, =, new, Stats, (, currentPassName, ), ;, log]
[&&, (, trackSize, ||, trackGzippedSize, ), ), {, printer, =, estimateCodeSize, (, jsRoot, ), ;, }, Stats, logStats, =, new]
[., hasCodeChanged, (, ), &&, (, trackSize, ||, trackGzippedSize, ), ), {, printer, =, estimateCodeSize, (, jsRoot, ), ;, }]
[), {, printer, =, estimateCodeSize, (, jsRoot, ), ;, }, Stats, logStats, =, new, Stats, (, currentPassName, ), ;, log]
[), ), {, printer, =, estimateCodeSize, (, jsRoot, ), ;, }, Stats, logStats, =, new, Stats, (, currentPassName, ), ;]
[||, trackGzippedSize, ), ), {, printer, =, estimateCodeSize, (, jsRoot, ), ;, }, Stats, logStats, =, new, Stats, (, currentPassName]
[), ), {, printer, =, estimateCodeSize, (, jsRoot, ), ;, }, Stats, logStats, =, new, Stats, (, currentPassName, ), ;]
[=, estimateCodeSize, (, jsRoot, ), ;, }, Stats, logStats, =, new, Stats, (, currentPassName, ), ;, log, ., add, (]
[;, }, Stats, logStats, =, new, Stats, (, currentPassName, ), ;, log, ., add, (, logStats, ), ;, updateStats, (]
[), ;, }, Stats, logStats, =, new, Stats, (, currentPassName, ), ;, log, ., add, (, logStats, ), ;, updateStats]
[;, log, ., add, (, logStats, ), ;, updateStats, (, logStats, ,, result, ,, printer, ), ;, Stats, summaryStats, =]
[), ;, log, ., add, (, logStats, ), ;, updateStats, (, logStats, ,, result, ,, printer, ), ;, Stats, summaryStats]
[;, updateStats, (, logStats, ,, result, ,, printer, ), ;, Stats, summaryStats, =, summary, ., get, (, passName, ), ;]
[., add, (, logStats, ), ;, updateStats, (, logStats, ,, result, ,, printer, ), ;, Stats, summaryStats, =, summary, .]
[), ;, updateStats, (, logStats, ,, result, ,, printer, ), ;, Stats, summaryStats, =, summary, ., get, (, passName, )]
[;, Stats, summaryStats, =, summary, ., get, (, passName, ), ;, if, (, summaryStats, ==, null, ), {, summaryStats, =]
[,, result, ,, printer, ), ;, Stats, summaryStats, =, summary, ., get, (, passName, ), ;, if, (, summaryStats, ==]
[,, printer, ), ;, Stats, summaryStats, =, summary, ., get, (, passName, ), ;, if, (, summaryStats, ==, null, )]
[), ;, Stats, summaryStats, =, summary, ., get, (, passName, ), ;, if, (, summaryStats, ==, null, ), {, summaryStats]
[;, if, (, summaryStats, ==, null, ), {, summaryStats, =, new, Stats, (, passName, ), ;, summary, ., put, (]
[., get, (, passName, ), ;, if, (, summaryStats, ==, null, ), {, summaryStats, =, new, Stats, (, passName, )]
[), ;, if, (, summaryStats, ==, null, ), {, summaryStats, =, new, Stats, (, passName, ), ;, summary, ., put]
[), {, summaryStats, =, new, Stats, (, passName, ), ;, summary, ., put, (, passName, ,, summaryStats, ), ;, }]
[==, null, ), {, summaryStats, =, new, Stats, (, passName, ), ;, summary, ., put, (, passName, ,, summaryStats, )]
[), {, summaryStats, =, new, Stats, (, passName, ), ;, summary, ., put, (, passName, ,, summaryStats, ), ;, }]
[=, new, Stats, (, passName, ), ;, summary, ., put, (, passName, ,, summaryStats, ), ;, }, updateStats, (, summaryStats]
[;, summary, ., put, (, passName, ,, summaryStats, ), ;, }, updateStats, (, summaryStats, ,, result, ,, printer, ), ;]
[), ;, summary, ., put, (, passName, ,, summaryStats, ), ;, }, updateStats, (, summaryStats, ,, result, ,, printer, )]
[;, }, updateStats, (, summaryStats, ,, result, ,, printer, ), ;, if, (, printer, !=, null, ), {, if, (]
[., put, (, passName, ,, summaryStats, ), ;, }, updateStats, (, summaryStats, ,, result, ,, printer, ), ;, if, (]
[,, summaryStats, ), ;, }, updateStats, (, summaryStats, ,, result, ,, printer, ), ;, if, (, printer, !=, null, )]
[), ;, }, updateStats, (, summaryStats, ,, result, ,, printer, ), ;, if, (, printer, !=, null, ), {, if]
[;, if, (, printer, !=, null, ), {, if, (, trackSize, ), {, curCodeSizeEstimate, =, printer, ., calcSize, (, )]
[,, result, ,, printer, ), ;, if, (, printer, !=, null, ), {, if, (, trackSize, ), {, curCodeSizeEstimate, =]
[,, printer, ), ;, if, (, printer, !=, null, ), {, if, (, trackSize, ), {, curCodeSizeEstimate, =, printer, .]
[), ;, if, (, printer, !=, null, ), {, if, (, trackSize, ), {, curCodeSizeEstimate, =, printer, ., calcSize, (]
[), {, if, (, trackSize, ), {, curCodeSizeEstimate, =, printer, ., calcSize, (, ), ;, }, if, (, trackGzippedSize, )]
[!=, null, ), {, if, (, trackSize, ), {, curCodeSizeEstimate, =, printer, ., calcSize, (, ), ;, }, if, (]
[), {, if, (, trackSize, ), {, curCodeSizeEstimate, =, printer, ., calcSize, (, ), ;, }, if, (, trackGzippedSize, )]
[), {, curCodeSizeEstimate, =, printer, ., calcSize, (, ), ;, }, if, (, trackGzippedSize, ), {, curZippedCodeSizeEstimate, =, printer, .]
[=, printer, ., calcSize, (, ), ;, }, if, (, trackGzippedSize, ), {, curZippedCodeSizeEstimate, =, printer, ., calcZippedSize, (, )]
[;, }, if, (, trackGzippedSize, ), {, curZippedCodeSizeEstimate, =, printer, ., calcZippedSize, (, ), ;, }, }, }, private, void]
[., calcSize, (, ), ;, }, if, (, trackGzippedSize, ), {, curZippedCodeSizeEstimate, =, printer, ., calcZippedSize, (, ), ;, }]
[), {, curZippedCodeSizeEstimate, =, printer, ., calcZippedSize, (, ), ;, }, }, }, private, void, updateStats, (, Stats, stats, ,]
[=, printer, ., calcZippedSize, (, ), ;, }, }, }, private, void, updateStats, (, Stats, stats, ,, long, result, ,]
[;, }, }, }, private, void, updateStats, (, Stats, stats, ,, long, result, ,, CodeSizeEstimatePrinter, printer, ), {, stats, .]
[., calcZippedSize, (, ), ;, }, }, }, private, void, updateStats, (, Stats, stats, ,, long, result, ,, CodeSizeEstimatePrinter, printer]
[+=, result, ;, stats, ., runs, +=, 1, ;, if, (, codeChange, ., hasCodeChanged, (, ), ), {, stats, .]
[., runtime, +=, result, ;, stats, ., runs, +=, 1, ;, if, (, codeChange, ., hasCodeChanged, (, ), ), {]
[;, stats, ., runs, +=, 1, ;, if, (, codeChange, ., hasCodeChanged, (, ), ), {, stats, ., changes, +=]
[+=, 1, ;, if, (, codeChange, ., hasCodeChanged, (, ), ), {, stats, ., changes, +=, 1, ;, }, if]
[., runs, +=, 1, ;, if, (, codeChange, ., hasCodeChanged, (, ), ), {, stats, ., changes, +=, 1, ;]
[;, if, (, codeChange, ., hasCodeChanged, (, ), ), {, stats, ., changes, +=, 1, ;, }, if, (, printer]
[), {, stats, ., changes, +=, 1, ;, }, if, (, printer, !=, null, ), {, recordSizeChange, (, curCodeSizeEstimate, ,]
[., hasCodeChanged, (, ), ), {, stats, ., changes, +=, 1, ;, }, if, (, printer, !=, null, ), {]
[+=, 1, ;, }, if, (, printer, !=, null, ), {, recordSizeChange, (, curCodeSizeEstimate, ,, printer, ., calcSize, (, )]
[., changes, +=, 1, ;, }, if, (, printer, !=, null, ), {, recordSizeChange, (, curCodeSizeEstimate, ,, printer, ., calcSize]
[;, }, if, (, printer, !=, null, ), {, recordSizeChange, (, curCodeSizeEstimate, ,, printer, ., calcSize, (, ), ,, stats]
[), {, recordSizeChange, (, curCodeSizeEstimate, ,, printer, ., calcSize, (, ), ,, stats, ), ;, recordGzSizeChange, (, curZippedCodeSizeEstimate, ,, printer]
[!=, null, ), {, recordSizeChange, (, curCodeSizeEstimate, ,, printer, ., calcSize, (, ), ,, stats, ), ;, recordGzSizeChange, (, curZippedCodeSizeEstimate]
[), {, recordSizeChange, (, curCodeSizeEstimate, ,, printer, ., calcSize, (, ), ,, stats, ), ;, recordGzSizeChange, (, curZippedCodeSizeEstimate, ,, printer]
[;, recordGzSizeChange, (, curZippedCodeSizeEstimate, ,, printer, ., calcZippedSize, (, ), ,, stats, ), ;, }, }, private, static, void, recordSizeChange]
[,, printer, ., calcSize, (, ), ,, stats, ), ;, recordGzSizeChange, (, curZippedCodeSizeEstimate, ,, printer, ., calcZippedSize, (, ), ,]
[,, stats, ), ;, recordGzSizeChange, (, curZippedCodeSizeEstimate, ,, printer, ., calcZippedSize, (, ), ,, stats, ), ;, }, }, private]
[., calcSize, (, ), ,, stats, ), ;, recordGzSizeChange, (, curZippedCodeSizeEstimate, ,, printer, ., calcZippedSize, (, ), ,, stats, )]
[), ;, recordGzSizeChange, (, curZippedCodeSizeEstimate, ,, printer, ., calcZippedSize, (, ), ,, stats, ), ;, }, }, private, static, void]
[;, }, }, private, static, void, recordSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (]
[,, printer, ., calcZippedSize, (, ), ,, stats, ), ;, }, }, private, static, void, recordSizeChange, (, int, oldSize, ,]
[,, stats, ), ;, }, }, private, static, void, recordSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record, )]
[., calcZippedSize, (, ), ,, stats, ), ;, }, }, private, static, void, recordSizeChange, (, int, oldSize, ,, int, newSize]
[), ;, }, }, private, static, void, recordSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record, ), {, if]
[), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {, record, ., diff, +=]
[!=, -, 1, ), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {, record]
[), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {, record, ., diff, +=]
[), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {, record, ., diff, +=]
[;, if, (, delta, >, 0, ), {, record, ., diff, +=, delta, ;, }, }, if, (, newSize, !=]
[-, newSize, ;, if, (, delta, >, 0, ), {, record, ., diff, +=, delta, ;, }, }, if, (]
[;, if, (, delta, >, 0, ), {, record, ., diff, +=, delta, ;, }, }, if, (, newSize, !=]
[), {, record, ., diff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {, record, .]
[>, 0, ), {, record, ., diff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {]
[), {, record, ., diff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {, record, .]
[+=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {, record, ., size, =, newSize, ;, }]
[., diff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {, record, ., size, =, newSize]
[;, }, }, if, (, newSize, !=, -, 1, ), {, record, ., size, =, newSize, ;, }, }, private]
[), {, record, ., size, =, newSize, ;, }, }, private, static, void, recordGzSizeChange, (, int, oldSize, ,, int, newSize]
[!=, -, 1, ), {, record, ., size, =, newSize, ;, }, }, private, static, void, recordGzSizeChange, (, int, oldSize]
[), {, record, ., size, =, newSize, ;, }, }, private, static, void, recordGzSizeChange, (, int, oldSize, ,, int, newSize]
[), {, record, ., size, =, newSize, ;, }, }, private, static, void, recordGzSizeChange, (, int, oldSize, ,, int, newSize]
[=, newSize, ;, }, }, private, static, void, recordGzSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record, ), {]
[., size, =, newSize, ;, }, }, private, static, void, recordGzSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record]
[;, }, }, private, static, void, recordGzSizeChange, (, int, oldSize, ,, int, newSize, ,, Stats, record, ), {, if, (]
[), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {, record, ., gzDiff, +=]
[!=, -, 1, ), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {, record]
[), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {, record, ., gzDiff, +=]
[), {, int, delta, =, oldSize, -, newSize, ;, if, (, delta, >, 0, ), {, record, ., gzDiff, +=]
[;, if, (, delta, >, 0, ), {, record, ., gzDiff, +=, delta, ;, }, }, if, (, newSize, !=]
[-, newSize, ;, if, (, delta, >, 0, ), {, record, ., gzDiff, +=, delta, ;, }, }, if, (]
[;, if, (, delta, >, 0, ), {, record, ., gzDiff, +=, delta, ;, }, }, if, (, newSize, !=]
[), {, record, ., gzDiff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {, record, .]
[>, 0, ), {, record, ., gzDiff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {]
[), {, record, ., gzDiff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {, record, .]
[+=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {, record, ., gzSize, =, newSize, ;, }]
[., gzDiff, +=, delta, ;, }, }, if, (, newSize, !=, -, 1, ), {, record, ., gzSize, =, newSize]
[;, }, }, if, (, newSize, !=, -, 1, ), {, record, ., gzSize, =, newSize, ;, }, }, private]
[), {, record, ., gzSize, =, newSize, ;, }, }, private, final, CodeSizeEstimatePrinter, estimateCodeSize, (, Node, root, ), {, CodeSizeEstimatePrinter]
[!=, -, 1, ), {, record, ., gzSize, =, newSize, ;, }, }, private, final, CodeSizeEstimatePrinter, estimateCodeSize, (, Node, root]
[), {, record, ., gzSize, =, newSize, ;, }, }, private, final, CodeSizeEstimatePrinter, estimateCodeSize, (, Node, root, ), {, CodeSizeEstimatePrinter]
[), {, record, ., gzSize, =, newSize, ;, }, }, private, final, CodeSizeEstimatePrinter, estimateCodeSize, (, Node, root, ), {, CodeSizeEstimatePrinter]
[=, newSize, ;, }, }, private, final, CodeSizeEstimatePrinter, estimateCodeSize, (, Node, root, ), {, CodeSizeEstimatePrinter, cp, =, new, CodeSizeEstimatePrinter, (]
[., gzSize, =, newSize, ;, }, }, private, final, CodeSizeEstimatePrinter, estimateCodeSize, (, Node, root, ), {, CodeSizeEstimatePrinter, cp, =, new]
[;, }, }, private, final, CodeSizeEstimatePrinter, estimateCodeSize, (, Node, root, ), {, CodeSizeEstimatePrinter, cp, =, new, CodeSizeEstimatePrinter, (, trackGzippedSize, )]
[;, CodeGenerator, cg, =, CodeGenerator, ., forCostEstimation, (, cp, ), ;, cg, ., add, (, root, ), ;, return, cp]
[), ;, CodeGenerator, cg, =, CodeGenerator, ., forCostEstimation, (, cp, ), ;, cg, ., add, (, root, ), ;, return]
[;, cg, ., add, (, root, ), ;, return, cp, ;, }, public, ImmutableMap, <, String, ,, Stats, >, getStats]
[., forCostEstimation, (, cp, ), ;, cg, ., add, (, root, ), ;, return, cp, ;, }, public, ImmutableMap, <]
[), ;, cg, ., add, (, root, ), ;, return, cp, ;, }, public, ImmutableMap, <, String, ,, Stats, >]
[;, return, cp, ;, }, public, ImmutableMap, <, String, ,, Stats, >, getStats, (, ), {, if, (, summaryCopy, ==]
[., add, (, root, ), ;, return, cp, ;, }, public, ImmutableMap, <, String, ,, Stats, >, getStats, (, )]
[), ;, return, cp, ;, }, public, ImmutableMap, <, String, ,, Stats, >, getStats, (, ), {, if, (, summaryCopy]
[;, }, public, ImmutableMap, <, String, ,, Stats, >, getStats, (, ), {, if, (, summaryCopy, ==, null, ), {]
[), {, summaryCopy, =, ImmutableMap, ., copyOf, (, summary, ), ;, }, return, summaryCopy, ;, }, class, CmpEntries, implements, Comparator]
[==, null, ), {, summaryCopy, =, ImmutableMap, ., copyOf, (, summary, ), ;, }, return, summaryCopy, ;, }, class, CmpEntries]
[), {, summaryCopy, =, ImmutableMap, ., copyOf, (, summary, ), ;, }, return, summaryCopy, ;, }, class, CmpEntries, implements, Comparator]
[=, ImmutableMap, ., copyOf, (, summary, ), ;, }, return, summaryCopy, ;, }, class, CmpEntries, implements, Comparator, <, Entry, <]
[;, }, return, summaryCopy, ;, }, class, CmpEntries, implements, Comparator, <, Entry, <, String, ,, Stats, >, >, {, @]
[., copyOf, (, summary, ), ;, }, return, summaryCopy, ;, }, class, CmpEntries, implements, Comparator, <, Entry, <, String, ,]
[), ;, }, return, summaryCopy, ;, }, class, CmpEntries, implements, Comparator, <, Entry, <, String, ,, Stats, >, >, {]
[;, }, class, CmpEntries, implements, Comparator, <, Entry, <, String, ,, Stats, >, >, {, @, Override, public, int, compare]
[;, }, }, public, void, outputTracerReport, (, PrintStream, pstr, ), {, JvmMetrics, ., maybeWriteJvmMetrics, (, pstr, ,, "verbose:pretty:all", ), ;]
[;, }, }, public, void, outputTracerReport, (, PrintStream, pstr, ), {, JvmMetrics, ., maybeWriteJvmMetrics, (, pstr, ,, "verbose:pretty:all", ), ;]
[), ;, }, }, public, void, outputTracerReport, (, PrintStream, pstr, ), {, JvmMetrics, ., maybeWriteJvmMetrics, (, pstr, ,, "verbose:pretty:all", )]
[-, e2, ., getValue, (, ), ., runtime, ), ;, }, }, public, void, outputTracerReport, (, PrintStream, pstr, ), {]
[., runtime, -, e2, ., getValue, (, ), ., runtime, ), ;, }, }, public, void, outputTracerReport, (, PrintStream, pstr]
[., getValue, (, ), ., runtime, -, e2, ., getValue, (, ), ., runtime, ), ;, }, }, public, void]
[), ;, }, }, public, void, outputTracerReport, (, PrintStream, pstr, ), {, JvmMetrics, ., maybeWriteJvmMetrics, (, pstr, ,, "verbose:pretty:all", )]
[., runtime, ), ;, }, }, public, void, outputTracerReport, (, PrintStream, pstr, ), {, JvmMetrics, ., maybeWriteJvmMetrics, (, pstr, ,]
[., getValue, (, ), ., runtime, ), ;, }, }, public, void, outputTracerReport, (, PrintStream, pstr, ), {, JvmMetrics, .]
[;, OutputStreamWriter, output, =, new, OutputStreamWriter, (, pstr, ), ;, try, {, int, runtime, =, 0, ;, int, runs, =]
[., maybeWriteJvmMetrics, (, pstr, ,, "verbose:pretty:all", ), ;, OutputStreamWriter, output, =, new, OutputStreamWriter, (, pstr, ), ;, try, {, int]
[,, "verbose:pretty:all", ), ;, OutputStreamWriter, output, =, new, OutputStreamWriter, (, pstr, ), ;, try, {, int, runtime, =, 0, ;]
[), ;, OutputStreamWriter, output, =, new, OutputStreamWriter, (, pstr, ), ;, try, {, int, runtime, =, 0, ;, int, runs]
[;, try, {, int, runtime, =, 0, ;, int, runs, =, 0, ;, int, changes, =, 0, ;, int, diff]
[), ;, try, {, int, runtime, =, 0, ;, int, runs, =, 0, ;, int, changes, =, 0, ;, int]
[;, int, runs, =, 0, ;, int, changes, =, 0, ;, int, diff, =, 0, ;, int, gzDiff, =, 0]
[;, int, changes, =, 0, ;, int, diff, =, 0, ;, int, gzDiff, =, 0, ;, output, ., write, (]
[;, int, diff, =, 0, ;, int, gzDiff, =, 0, ;, output, ., write, (, "Summary:\n", ), ;, output, .]
[;, int, gzDiff, =, 0, ;, output, ., write, (, "Summary:\n", ), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction\n", ), ;]
[;, output, ., write, (, "Summary:\n", ), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction\n", ), ;, ArrayList, <, Entry, <, String]
[;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction\n", ), ;, ArrayList, <, Entry, <, String, ,, Stats, >, >, a, =, new]
[., write, (, "Summary:\n", ), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction\n", ), ;, ArrayList, <, Entry, <, String, ,, Stats]
[), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction\n", ), ;, ArrayList, <, Entry, <, String, ,, Stats, >, >, a, =]
[;, ArrayList, <, Entry, <, String, ,, Stats, >, >, a, =, new, ArrayList, <, Entry, <, String, ,, Stats]
[., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction\n", ), ;, ArrayList, <, Entry, <, String, ,, Stats, >, >, a, =, new, ArrayList, <]
[), ;, ArrayList, <, Entry, <, String, ,, Stats, >, >, a, =, new, ArrayList, <, Entry, <, String, ,]
[;, for, (, Entry, <, String, ,, Stats, >, entry, :, summary, ., entrySet, (, ), ), {, a, .]
[), {, a, ., add, (, entry, ), ;, }, Collections, ., sort, (, a, ,, new, CmpEntries, (, )]
[., entrySet, (, ), ), {, a, ., add, (, entry, ), ;, }, Collections, ., sort, (, a, ,]
[;, }, Collections, ., sort, (, a, ,, new, CmpEntries, (, ), ), ;, for, (, Entry, <, String, ,]
[., add, (, entry, ), ;, }, Collections, ., sort, (, a, ,, new, CmpEntries, (, ), ), ;, for]
[), ;, }, Collections, ., sort, (, a, ,, new, CmpEntries, (, ), ), ;, for, (, Entry, <, String]
[;, for, (, Entry, <, String, ,, Stats, >, entry, :, a, ), {, String, key, =, entry, ., getKey]
[., sort, (, a, ,, new, CmpEntries, (, ), ), ;, for, (, Entry, <, String, ,, Stats, >, entry]
[,, new, CmpEntries, (, ), ), ;, for, (, Entry, <, String, ,, Stats, >, entry, :, a, ), {]
[), ;, for, (, Entry, <, String, ,, Stats, >, entry, :, a, ), {, String, key, =, entry, .]
[), {, String, key, =, entry, ., getKey, (, ), ;, Stats, stats, =, entry, ., getValue, (, ), ;]
[;, Stats, stats, =, entry, ., getValue, (, ), ;, output, ., write, (, key, ), ;, output, ., write]
[., getKey, (, ), ;, Stats, stats, =, entry, ., getValue, (, ), ;, output, ., write, (, key, )]
[;, output, ., write, (, key, ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String]
[., getValue, (, ), ;, output, ., write, (, key, ), ;, output, ., write, (, ",", ), ;, output]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, )]
[., write, (, key, ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf]
[), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime]
[;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;, runtime, +=, stats, ., runtime]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;, runtime, +=, stats, .]
[;, runtime, +=, stats, ., runtime, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, .]
[., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;, runtime, +=, stats, ., runtime, ;, output]
[), ;, runtime, +=, stats, ., runtime, ;, output, ., write, (, ",", ), ;, output, ., write, (, String]
[., valueOf, (, stats, ., runtime, ), ), ;, runtime, +=, stats, ., runtime, ;, output, ., write, (, ","]
[), ), ;, runtime, +=, stats, ., runtime, ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., runtime, ), ), ;, runtime, +=, stats, ., runtime, ;, output, ., write, (, ",", ), ;, output, .]
[+=, stats, ., runtime, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runs, )]
[., runtime, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, .]
[;, output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;, runs, +=, stats, ., runs]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;, runs, +=, stats, .]
[;, runs, +=, stats, ., runs, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, .]
[., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;, runs, +=, stats, ., runs, ;, output]
[), ;, runs, +=, stats, ., runs, ;, output, ., write, (, ",", ), ;, output, ., write, (, String]
[., valueOf, (, stats, ., runs, ), ), ;, runs, +=, stats, ., runs, ;, output, ., write, (, ","]
[), ), ;, runs, +=, stats, ., runs, ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., runs, ), ), ;, runs, +=, stats, ., runs, ;, output, ., write, (, ",", ), ;, output, .]
[+=, stats, ., runs, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., changes, )]
[., runs, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, .]
[;, output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;, changes, +=, stats, ., changes]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;, changes, +=, stats, .]
[;, changes, +=, stats, ., changes, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, .]
[., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;, changes, +=, stats, ., changes, ;, output]
[), ;, changes, +=, stats, ., changes, ;, output, ., write, (, ",", ), ;, output, ., write, (, String]
[., valueOf, (, stats, ., changes, ), ), ;, changes, +=, stats, ., changes, ;, output, ., write, (, ","]
[), ), ;, changes, +=, stats, ., changes, ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., changes, ), ), ;, changes, +=, stats, ., changes, ;, output, ., write, (, ",", ), ;, output, .]
[+=, stats, ., changes, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., diff, )]
[., changes, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, .]
[;, output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;, diff, +=, stats, ., diff]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;, diff, +=, stats, .]
[;, diff, +=, stats, ., diff, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, .]
[., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;, diff, +=, stats, ., diff, ;, output]
[), ;, diff, +=, stats, ., diff, ;, output, ., write, (, ",", ), ;, output, ., write, (, String]
[., valueOf, (, stats, ., diff, ), ), ;, diff, +=, stats, ., diff, ;, output, ., write, (, ","]
[), ), ;, diff, +=, stats, ., diff, ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., diff, ), ), ;, diff, +=, stats, ., diff, ;, output, ., write, (, ",", ), ;, output, .]
[+=, stats, ., diff, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, )]
[., diff, ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, .]
[;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;, gzDiff, +=, stats, ., gzDiff]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;, gzDiff, +=, stats, .]
[;, gzDiff, +=, stats, ., gzDiff, ;, output, ., write, (, "\n", ), ;, }, output, ., write, (, "TOTAL"]
[., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;, gzDiff, +=, stats, ., gzDiff, ;, output]
[), ;, gzDiff, +=, stats, ., gzDiff, ;, output, ., write, (, "\n", ), ;, }, output, ., write, (]
[., valueOf, (, stats, ., gzDiff, ), ), ;, gzDiff, +=, stats, ., gzDiff, ;, output, ., write, (, "\n"]
[), ), ;, gzDiff, +=, stats, ., gzDiff, ;, output, ., write, (, "\n", ), ;, }, output, ., write]
[., gzDiff, ), ), ;, gzDiff, +=, stats, ., gzDiff, ;, output, ., write, (, "\n", ), ;, }, output]
[+=, stats, ., gzDiff, ;, output, ., write, (, "\n", ), ;, }, output, ., write, (, "TOTAL", ), ;]
[;, output, ., write, (, "\n", ), ;, }, output, ., write, (, "TOTAL", ), ;, output, ., write, (]
[., gzDiff, ;, output, ., write, (, "\n", ), ;, }, output, ., write, (, "TOTAL", ), ;, output, .]
[;, }, output, ., write, (, "TOTAL", ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[., write, (, "\n", ), ;, }, output, ., write, (, "TOTAL", ), ;, output, ., write, (, ",", )]
[), ;, }, output, ., write, (, "TOTAL", ), ;, output, ., write, (, ",", ), ;, output, ., write]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, runtime, ), ), ;]
[., write, (, "TOTAL", ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf]
[), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, runtime, ), )]
[;, output, ., write, (, String, ., valueOf, (, runtime, ), ), ;, output, ., write, (, ",", ), ;]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, runtime, ), ), ;, output, .]
[), ;, output, ., write, (, String, ., valueOf, (, runtime, ), ), ;, output, ., write, (, ",", )]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, runs, ), ), ;]
[., write, (, String, ., valueOf, (, runtime, ), ), ;, output, ., write, (, ",", ), ;, output, .]
[), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, runs, ), )]
[., valueOf, (, runtime, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, .]
[), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, runs, )]
[;, output, ., write, (, String, ., valueOf, (, runs, ), ), ;, output, ., write, (, ",", ), ;]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, runs, ), ), ;, output, .]
[), ;, output, ., write, (, String, ., valueOf, (, runs, ), ), ;, output, ., write, (, ",", )]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, changes, ), ), ;]
[., write, (, String, ., valueOf, (, runs, ), ), ;, output, ., write, (, ",", ), ;, output, .]
[), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, changes, ), )]
[., valueOf, (, runs, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, .]
[), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, changes, )]
[;, output, ., write, (, String, ., valueOf, (, changes, ), ), ;, output, ., write, (, ",", ), ;]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, changes, ), ), ;, output, .]
[), ;, output, ., write, (, String, ., valueOf, (, changes, ), ), ;, output, ., write, (, ",", )]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, diff, ), ), ;]
[., write, (, String, ., valueOf, (, changes, ), ), ;, output, ., write, (, ",", ), ;, output, .]
[), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, diff, ), )]
[., valueOf, (, changes, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, .]
[), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, diff, )]
[;, output, ., write, (, String, ., valueOf, (, diff, ), ), ;, output, ., write, (, ",", ), ;]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, diff, ), ), ;, output, .]
[), ;, output, ., write, (, String, ., valueOf, (, diff, ), ), ;, output, ., write, (, ",", )]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, gzDiff, ), ), ;]
[., write, (, String, ., valueOf, (, diff, ), ), ;, output, ., write, (, ",", ), ;, output, .]
[), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, gzDiff, ), )]
[., valueOf, (, diff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, .]
[), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, gzDiff, )]
[;, output, ., write, (, String, ., valueOf, (, gzDiff, ), ), ;, output, ., write, (, "\n", ), ;]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, gzDiff, ), ), ;, output, .]
[), ;, output, ., write, (, String, ., valueOf, (, gzDiff, ), ), ;, output, ., write, (, "\n", )]
[;, output, ., write, (, "\n", ), ;, output, ., write, (, "\n", ), ;, output, ., write, (, "Log:\n"]
[., write, (, String, ., valueOf, (, gzDiff, ), ), ;, output, ., write, (, "\n", ), ;, output, .]
[), ;, output, ., write, (, "\n", ), ;, output, ., write, (, "\n", ), ;, output, ., write, (]
[., valueOf, (, gzDiff, ), ), ;, output, ., write, (, "\n", ), ;, output, ., write, (, "\n", )]
[), ), ;, output, ., write, (, "\n", ), ;, output, ., write, (, "\n", ), ;, output, ., write]
[;, output, ., write, (, "\n", ), ;, output, ., write, (, "Log:\n", ), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n"]
[., write, (, "\n", ), ;, output, ., write, (, "\n", ), ;, output, ., write, (, "Log:\n", ), ;]
[), ;, output, ., write, (, "\n", ), ;, output, ., write, (, "Log:\n", ), ;, output, ., write, (]
[;, output, ., write, (, "Log:\n", ), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;, for, (, Stats, stats, :]
[., write, (, "\n", ), ;, output, ., write, (, "Log:\n", ), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;]
[), ;, output, ., write, (, "Log:\n", ), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;, for, (, Stats, stats]
[;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;, for, (, Stats, stats, :, log, ), {, output, ., write, (]
[., write, (, "Log:\n", ), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;, for, (, Stats, stats, :, log, )]
[), ;, output, ., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;, for, (, Stats, stats, :, log, ), {, output, ., write]
[;, for, (, Stats, stats, :, log, ), {, output, ., write, (, stats, ., pass, ), ;, output, .]
[., write, (, "pass,runtime,runs,changingRuns,reduction,gzReduction,size,gzSize\n", ), ;, for, (, Stats, stats, :, log, ), {, output, ., write, (, stats, .]
[), ;, for, (, Stats, stats, :, log, ), {, output, ., write, (, stats, ., pass, ), ;, output]
[), {, output, ., write, (, stats, ., pass, ), ;, output, ., write, (, ",", ), ;, output, .]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, )]
[., write, (, stats, ., pass, ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String]
[), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime]
[., pass, ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats]
[;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;, output, ., write, (, ","]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;, output, ., write, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runs, )]
[., write, (, String, ., valueOf, (, stats, ., runtime, ), ), ;, output, ., write, (, ",", ), ;]
[), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runs]
[., valueOf, (, stats, ., runtime, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, .]
[., runtime, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;, output, ., write, (, ","]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;, output, ., write, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., changes, )]
[., write, (, String, ., valueOf, (, stats, ., runs, ), ), ;, output, ., write, (, ",", ), ;]
[), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., changes]
[., valueOf, (, stats, ., runs, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, .]
[., runs, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;, output, ., write, (, ","]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;, output, ., write, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., diff, )]
[., write, (, String, ., valueOf, (, stats, ., changes, ), ), ;, output, ., write, (, ",", ), ;]
[), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., diff]
[., valueOf, (, stats, ., changes, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, .]
[., changes, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;, output, ., write, (, ","]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;, output, ., write, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, )]
[., write, (, String, ., valueOf, (, stats, ., diff, ), ), ;, output, ., write, (, ",", ), ;]
[), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff]
[., valueOf, (, stats, ., diff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, .]
[., diff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;, output, ., write, (, ","]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;, output, ., write, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., size, )]
[., write, (, String, ., valueOf, (, stats, ., gzDiff, ), ), ;, output, ., write, (, ",", ), ;]
[), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., size]
[., valueOf, (, stats, ., gzDiff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, .]
[., gzDiff, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, String, ., valueOf, (, stats, ., size, ), ), ;, output, ., write, (, ","]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., size, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., size, ), ), ;, output, ., write, (]
[;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzSize, )]
[., write, (, String, ., valueOf, (, stats, ., size, ), ), ;, output, ., write, (, ",", ), ;]
[), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzSize]
[., valueOf, (, stats, ., size, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (]
[), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, .]
[., size, ), ), ;, output, ., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (]
[;, output, ., write, (, String, ., valueOf, (, stats, ., gzSize, ), ), ;, output, ., write, (, "\n"]
[., write, (, ",", ), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzSize, ), ), ;]
[), ;, output, ., write, (, String, ., valueOf, (, stats, ., gzSize, ), ), ;, output, ., write, (]
[;, output, ., write, (, "\n", ), ;, }, output, ., write, (, "\n", ), ;, output, ., close, (]
[., write, (, String, ., valueOf, (, stats, ., gzSize, ), ), ;, output, ., write, (, "\n", ), ;]
[), ;, output, ., write, (, "\n", ), ;, }, output, ., write, (, "\n", ), ;, output, ., close]
[., valueOf, (, stats, ., gzSize, ), ), ;, output, ., write, (, "\n", ), ;, }, output, ., write]
[), ), ;, output, ., write, (, "\n", ), ;, }, output, ., write, (, "\n", ), ;, output, .]
[., gzSize, ), ), ;, output, ., write, (, "\n", ), ;, }, output, ., write, (, "\n", ), ;]
[;, }, output, ., write, (, "\n", ), ;, output, ., close, (, ), ;, }, catch, (, IOException, e]
[., write, (, "\n", ), ;, }, output, ., write, (, "\n", ), ;, output, ., close, (, ), ;]
[), ;, }, output, ., write, (, "\n", ), ;, output, ., close, (, ), ;, }, catch, (, IOException]
[;, output, ., close, (, ), ;, }, catch, (, IOException, e, ), {, e, ., printStackTrace, (, ), ;]
[., write, (, "\n", ), ;, output, ., close, (, ), ;, }, catch, (, IOException, e, ), {, e]
[), ;, output, ., close, (, ), ;, }, catch, (, IOException, e, ), {, e, ., printStackTrace, (, )]
[;, }, catch, (, IOException, e, ), {, e, ., printStackTrace, (, ), ;, }, }, private, static, final, class]
[., close, (, ), ;, }, catch, (, IOException, e, ), {, e, ., printStackTrace, (, ), ;, }, }]
[;, }, }, private, static, final, class, CodeSizeEstimatePrinter, extends, CodeConsumer, {, private, final, boolean, trackGzippedSize, ;, private, int, size, =]
[., printStackTrace, (, ), ;, }, }, private, static, final, class, CodeSizeEstimatePrinter, extends, CodeConsumer, {, private, final, boolean, trackGzippedSize, ;]
[;, private, char, lastChar, =, '\0', ;, private, final, ByteArrayOutputStream, output, =, new, ByteArrayOutputStream, (, ), ;, private, final, GZIPOutputStream]
[;, private, final, ByteArrayOutputStream, output, =, new, ByteArrayOutputStream, (, ), ;, private, final, GZIPOutputStream, stream, ;, private, CodeSizeEstimatePrinter, (, boolean]
[;, private, final, GZIPOutputStream, stream, ;, private, CodeSizeEstimatePrinter, (, boolean, trackGzippedSize, ), {, this, ., trackGzippedSize, =, trackGzippedSize, ;, try]
[=, trackGzippedSize, ;, try, {, stream, =, new, GZIPOutputStream, (, output, ), ;, }, catch, (, IOException, e, ), {]
[., trackGzippedSize, =, trackGzippedSize, ;, try, {, stream, =, new, GZIPOutputStream, (, output, ), ;, }, catch, (, IOException, e]
[;, try, {, stream, =, new, GZIPOutputStream, (, output, ), ;, }, catch, (, IOException, e, ), {, throw, new]
[=, new, GZIPOutputStream, (, output, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, )]
[;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, }, @, Override, void]
[), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, }, @, Override]
[;, }, }, @, Override, void, append, (, String, str, ), {, int, len, =, str, ., length, (, )]
[), ;, }, }, @, Override, void, append, (, String, str, ), {, int, len, =, str, ., length, (]
[;, if, (, len, >, 0, ), {, size, +=, len, ;, lastChar, =, str, ., charAt, (, len, -]
[., length, (, ), ;, if, (, len, >, 0, ), {, size, +=, len, ;, lastChar, =, str, .]
[), {, size, +=, len, ;, lastChar, =, str, ., charAt, (, len, -, 1, ), ;, if, (, trackGzippedSize]
[>, 0, ), {, size, +=, len, ;, lastChar, =, str, ., charAt, (, len, -, 1, ), ;, if]
[), {, size, +=, len, ;, lastChar, =, str, ., charAt, (, len, -, 1, ), ;, if, (, trackGzippedSize]
[+=, len, ;, lastChar, =, str, ., charAt, (, len, -, 1, ), ;, if, (, trackGzippedSize, ), {, try]
[;, lastChar, =, str, ., charAt, (, len, -, 1, ), ;, if, (, trackGzippedSize, ), {, try, {, stream]
[=, str, ., charAt, (, len, -, 1, ), ;, if, (, trackGzippedSize, ), {, try, {, stream, ., write]
[;, if, (, trackGzippedSize, ), {, try, {, stream, ., write, (, str, ., getBytes, (, ), ), ;, }]
[., charAt, (, len, -, 1, ), ;, if, (, trackGzippedSize, ), {, try, {, stream, ., write, (, str]
[), ;, if, (, trackGzippedSize, ), {, try, {, stream, ., write, (, str, ., getBytes, (, ), ), ;]
[-, 1, ), ;, if, (, trackGzippedSize, ), {, try, {, stream, ., write, (, str, ., getBytes, (, )]
[), ;, if, (, trackGzippedSize, ), {, try, {, stream, ., write, (, str, ., getBytes, (, ), ), ;]
[), {, try, {, stream, ., write, (, str, ., getBytes, (, ), ), ;, }, catch, (, IOException, e]
[;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, }, }, }, @]
[., write, (, str, ., getBytes, (, ), ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException]
[), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, }, }, }]
[., getBytes, (, ), ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;]
[;, }, }, }, }, @, Override, char, getLastChar, (, ), {, return, lastChar, ;, }, private, int, calcSize, (]
[), ;, }, }, }, }, @, Override, char, getLastChar, (, ), {, return, lastChar, ;, }, private, int, calcSize]
[;, }, private, int, calcSize, (, ), {, return, size, ;, }, private, int, calcZippedSize, (, ), {, if, (]
[;, }, private, int, calcZippedSize, (, ), {, if, (, trackGzippedSize, ), {, try, {, stream, ., finish, (, )]
[), {, try, {, stream, ., finish, (, ), ;, stream, ., flush, (, ), ;, stream, ., close, (]
[;, stream, ., flush, (, ), ;, stream, ., close, (, ), ;, return, output, ., size, (, ), ;]
[., finish, (, ), ;, stream, ., flush, (, ), ;, stream, ., close, (, ), ;, return, output, .]
[;, stream, ., close, (, ), ;, return, output, ., size, (, ), ;, }, catch, (, IOException, e, )]
[., flush, (, ), ;, stream, ., close, (, ), ;, return, output, ., size, (, ), ;, }, catch]
[;, return, output, ., size, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e]
[., close, (, ), ;, return, output, ., size, (, ), ;, }, catch, (, IOException, e, ), {, throw]
[;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }, }, else, {, return]
[., size, (, ), ;, }, catch, (, IOException, e, ), {, throw, new, RuntimeException, (, e, ), ;, }]
[;, }, }, else, {, return, -, 1, ;, }, }, }, }]
[), ;, }, }, else, {, return, -, 1, ;, }, }, }, }]
[;, }, }, }, }]
[;, }, }, }, }]
