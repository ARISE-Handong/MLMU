[public, abstract, class, BaseAbstractMultivariateVectorOptimizer, <, FUNC, extends, MultivariateVectorFunction, >, implements, BaseMultivariateVectorOptimizer, <, FUNC, >, {, protected, final, Incrementor, evaluations, =]
[;, private, double, [, ], start, ;, private, FUNC, function, ;, @, Deprecated, protected, BaseAbstractMultivariateVectorOptimizer, (, ), {, this, (]
[{, this, (, new, SimpleVectorValueChecker, (, ), ), ;, }, protected, BaseAbstractMultivariateVectorOptimizer, (, ConvergenceChecker, <, PointVectorValuePair, >, checker, ), {]
[{, this, (, new, SimpleVectorValueChecker, (, ), ), ;, }, protected, BaseAbstractMultivariateVectorOptimizer, (, ConvergenceChecker, <, PointVectorValuePair, >, checker, ), {]
[SimpleVectorValueChecker, (, ), ), ;, }, protected, BaseAbstractMultivariateVectorOptimizer, (, ConvergenceChecker, <, PointVectorValuePair, >, checker, ), {, this, ., checker, =]
[<, PointVectorValuePair, >, checker, ), {, this, ., checker, =, checker, ;, }, public, int, getMaxEvaluations, (, ), {, return]
[<, PointVectorValuePair, >, checker, ), {, this, ., checker, =, checker, ;, }, public, int, getMaxEvaluations, (, ), {, return]
[int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (, ), {, return]
[int, getMaxEvaluations, (, ), {, return, evaluations, ., getMaximalCount, (, ), ;, }, public, int, getEvaluations, (, ), {, return]
[), {, return, evaluations, ., getCount, (, ), ;, }, public, ConvergenceChecker, <, PointVectorValuePair, >, getConvergenceChecker, (, ), {, return]
[), {, return, checker, ;, }, protected, double, [, ], computeObjectiveValue, (, double, [, ], point, ), {, try, {]
[), {, return, checker, ;, }, protected, double, [, ], computeObjectiveValue, (, double, [, ], point, ), {, try, {]
[], point, ), {, try, {, evaluations, ., incrementCount, (, ), ;, }, catch, (, MaxCountExceededException, e, ), {, throw]
[{, try, {, evaluations, ., incrementCount, (, ), ;, }, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (]
[{, try, {, evaluations, ., incrementCount, (, ), ;, }, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (]
[}, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (, e, ., getMax, (, ), ), ;, }, return]
[}, catch, (, MaxCountExceededException, e, ), {, throw, new, TooManyEvaluationsException, (, e, ., getMax, (, ), ), ;, }, return]
[e, ), {, throw, new, TooManyEvaluationsException, (, e, ., getMax, (, ), ), ;, }, return, function, ., value, (]
[FUNC, f, ,, double, [, ], t, ,, double, [, ], w, ,, double, [, ], startPoint, ), {, return]
[,, double, [, ], t, ,, double, [, ], w, ,, double, [, ], startPoint, ), {, return, optimizeInternal, (]
[[, ], t, ,, double, [, ], w, ,, double, [, ], startPoint, ), {, return, optimizeInternal, (, maxEval, ,]
[t, ,, double, [, ], w, ,, double, [, ], startPoint, ), {, return, optimizeInternal, (, maxEval, ,, f, ,]
[double, [, ], w, ,, double, [, ], startPoint, ), {, return, optimizeInternal, (, maxEval, ,, f, ,, t, ,]
[], w, ,, double, [, ], startPoint, ), {, return, optimizeInternal, (, maxEval, ,, f, ,, t, ,, w, ,]
[protected, PointVectorValuePair, optimize, (, int, maxEval, ,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, return]
[optimize, (, int, maxEval, ,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, return, optimizeInternal, (]
[int, maxEval, ,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, return, optimizeInternal, (, maxEval, ,]
[,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, return, optimizeInternal, (, maxEval, ,, f, ,]
[double, [, ], t, ,, final, double, [, ], w, ,, final, double, [, ], startPoint, ), {, if, (]
[double, [, ], t, ,, final, double, [, ], w, ,, final, double, [, ], startPoint, ), {, if, (]
[], t, ,, final, double, [, ], w, ,, final, double, [, ], startPoint, ), {, if, (, f, ==]
[double, [, ], w, ,, final, double, [, ], startPoint, ), {, if, (, f, ==, null, ), {, throw]
[], startPoint, ), {, if, (, f, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (]
[], startPoint, ), {, if, (, f, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (]
[), {, if, (, f, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, t, ==]
[f, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, t, ==, null, ), {, throw]
[(, ), ;, }, if, (, t, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (]
[(, ), ;, }, if, (, t, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (]
[;, }, if, (, t, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, w, ==]
[t, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, w, ==, null, ), {, throw]
[(, ), ;, }, if, (, w, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (]
[(, ), ;, }, if, (, w, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (]
[;, }, if, (, w, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, startPoint, ==]
[w, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, startPoint, ==, null, ), {, throw]
[(, ), ;, }, if, (, startPoint, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (]
[(, ), ;, }, if, (, startPoint, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (]
[(, ), ;, }, if, (, startPoint, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (]
[if, (, startPoint, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, t, ., length, !=]
[if, (, startPoint, ==, null, ), {, throw, new, NullArgumentException, (, ), ;, }, if, (, t, ., length, !=]
[{, throw, new, NullArgumentException, (, ), ;, }, if, (, t, ., length, !=, w, ., length, ), {, throw]
[NullArgumentException, (, ), ;, }, if, (, t, ., length, !=, w, ., length, ), {, throw, new, DimensionMismatchException, (]
[NullArgumentException, (, ), ;, }, if, (, t, ., length, !=, w, ., length, ), {, throw, new, DimensionMismatchException, (]
[}, if, (, t, ., length, !=, w, ., length, ), {, throw, new, DimensionMismatchException, (, t, ., length, ,]
[}, if, (, t, ., length, !=, w, ., length, ), {, throw, new, DimensionMismatchException, (, t, ., length, ,]
[w, ., length, ), {, throw, new, DimensionMismatchException, (, t, ., length, ,, w, ., length, ), ;, }, return]
[length, ), {, throw, new, DimensionMismatchException, (, t, ., length, ,, w, ., length, ), ;, }, return, optimizeInternal, (]
[{, throw, new, DimensionMismatchException, (, t, ., length, ,, w, ., length, ), ;, }, return, optimizeInternal, (, maxEval, ,]
[new, DimensionMismatchException, (, t, ., length, ,, w, ., length, ), ;, }, return, optimizeInternal, (, maxEval, ,, f, ,]
[t, ., length, ,, w, ., length, ), ;, }, return, optimizeInternal, (, maxEval, ,, f, ,, new, Target, (]
[,, w, ., length, ), ;, }, return, optimizeInternal, (, maxEval, ,, f, ,, new, Target, (, t, ), ,]
[length, ), ;, }, return, optimizeInternal, (, maxEval, ,, f, ,, new, Target, (, t, ), ,, new, Weight, (]
[}, return, optimizeInternal, (, maxEval, ,, f, ,, new, Target, (, t, ), ,, new, Weight, (, w, ), ,]
[(, maxEval, ,, f, ,, new, Target, (, t, ), ,, new, Weight, (, w, ), ,, new, InitialGuess, (]
[}, protected, PointVectorValuePair, optimizeInternal, (, int, maxEval, ,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {]
[}, protected, PointVectorValuePair, optimizeInternal, (, int, maxEval, ,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {]
[(, int, maxEval, ,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, evaluations, ., setMaximalCount, (]
[,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, evaluations, ., setMaximalCount, (, maxEval, ), ;]
[,, FUNC, f, ,, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, evaluations, ., setMaximalCount, (, maxEval, ), ;]
[optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;]
[throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;, function, =]
[,, DimensionMismatchException, {, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;, function, =, f, ;]
[{, evaluations, ., setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;, function, =, f, ;, parseOptimizationData, (]
[setMaximalCount, (, maxEval, ), ;, evaluations, ., resetCount, (, ), ;, function, =, f, ;, parseOptimizationData, (, optData, ), ;]
[;, evaluations, ., resetCount, (, ), ;, function, =, f, ;, parseOptimizationData, (, optData, ), ;, checkParameters, (, ), ;]
[), ;, function, =, f, ;, parseOptimizationData, (, optData, ), ;, checkParameters, (, ), ;, setUp, (, ), ;, return]
[;, setUp, (, ), ;, return, doOptimize, (, ), ;, }, public, double, [, ], getStartPoint, (, ), {, return]
[;, setUp, (, ), ;, return, doOptimize, (, ), ;, }, public, double, [, ], getStartPoint, (, ), {, return]
[], getStartPoint, (, ), {, return, start, ., clone, (, ), ;, }, public, RealMatrix, getWeight, (, ), {, return]
[], getStartPoint, (, ), {, return, start, ., clone, (, ), ;, }, public, RealMatrix, getWeight, (, ), {, return]
[(, ), {, return, weightMatrix, ., copy, (, ), ;, }, public, double, [, ], getTarget, (, ), {, return]
[(, ), {, return, weightMatrix, ., copy, (, ), ;, }, public, double, [, ], getTarget, (, ), {, return]
[], getTarget, (, ), {, return, target, ., clone, (, ), ;, }, protected, FUNC, getObjectiveFunction, (, ), {, return]
[;, }, protected, abstract, PointVectorValuePair, doOptimize, (, ), ;, @, Deprecated, protected, double, [, ], getTargetRef, (, ), {, return]
[], getTargetRef, (, ), {, return, target, ;, }, @, Deprecated, protected, double, [, ], getWeightRef, (, ), {, return]
[[, ], getWeightRef, (, ), {, return, weight, ;, }, protected, void, setUp, (, ), {, final, int, dim, =]
[[, ], getWeightRef, (, ), {, return, weight, ;, }, protected, void, setUp, (, ), {, final, int, dim, =]
[), {, return, weight, ;, }, protected, void, setUp, (, ), {, final, int, dim, =, target, ., length, ;]
[return, weight, ;, }, protected, void, setUp, (, ), {, final, int, dim, =, target, ., length, ;, weight, =]
[}, protected, void, setUp, (, ), {, final, int, dim, =, target, ., length, ;, weight, =, new, double, []
[int, dim, =, target, ., length, ;, weight, =, new, double, [, dim, ], ;, for, (, int, i, =]
[=, target, ., length, ;, weight, =, new, double, [, dim, ], ;, for, (, int, i, =, 0, ;]
[=, target, ., length, ;, weight, =, new, double, [, dim, ], ;, for, (, int, i, =, 0, ;]
[., length, ;, weight, =, new, double, [, dim, ], ;, for, (, int, i, =, 0, ;, i, <]
[;, weight, =, new, double, [, dim, ], ;, for, (, int, i, =, 0, ;, i, <, dim, ;]
[;, weight, =, new, double, [, dim, ], ;, for, (, int, i, =, 0, ;, i, <, dim, ;]
[double, [, dim, ], ;, for, (, int, i, =, 0, ;, i, <, dim, ;, i, ++, ), {]
[double, [, dim, ], ;, for, (, int, i, =, 0, ;, i, <, dim, ;, i, ++, ), {]
[dim, ], ;, for, (, int, i, =, 0, ;, i, <, dim, ;, i, ++, ), {, weight, []
[for, (, int, i, =, 0, ;, i, <, dim, ;, i, ++, ), {, weight, [, i, ], =]
[for, (, int, i, =, 0, ;, i, <, dim, ;, i, ++, ), {, weight, [, i, ], =]
[=, 0, ;, i, <, dim, ;, i, ++, ), {, weight, [, i, ], =, weightMatrix, ., getEntry, (]
[;, i, <, dim, ;, i, ++, ), {, weight, [, i, ], =, weightMatrix, ., getEntry, (, i, ,]
[,, i, ), ;, }, }, private, void, parseOptimizationData, (, OptimizationData, ..., optData, ), {, for, (, OptimizationData, data, :]
[}, private, void, parseOptimizationData, (, OptimizationData, ..., optData, ), {, for, (, OptimizationData, data, :, optData, ), {, if, (]
[}, private, void, parseOptimizationData, (, OptimizationData, ..., optData, ), {, for, (, OptimizationData, data, :, optData, ), {, if, (]
[OptimizationData, ..., optData, ), {, for, (, OptimizationData, data, :, optData, ), {, if, (, data, instanceof, Target, ), {]
[optData, ), {, for, (, OptimizationData, data, :, optData, ), {, if, (, data, instanceof, Target, ), {, target, =]
[optData, ), {, for, (, OptimizationData, data, :, optData, ), {, if, (, data, instanceof, Target, ), {, target, =]
[), {, for, (, OptimizationData, data, :, optData, ), {, if, (, data, instanceof, Target, ), {, target, =, (]
[(, OptimizationData, data, :, optData, ), {, if, (, data, instanceof, Target, ), {, target, =, (, (, Target, )]
[), {, target, =, (, (, Target, ), data, ), ., getTarget, (, ), ;, continue, ;, }, if, (]
[), {, target, =, (, (, Target, ), data, ), ., getTarget, (, ), ;, continue, ;, }, if, (]
[(, Target, ), data, ), ., getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight, ), {]
[), data, ), ., getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight, ), {, weightMatrix, =]
[), data, ), ., getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight, ), {, weightMatrix, =]
[data, ), ., getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight, ), {, weightMatrix, =, (]
[getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight, ), {, weightMatrix, =, (, (, Weight, )]
[), {, weightMatrix, =, (, (, Weight, ), data, ), ., getWeight, (, ), ;, continue, ;, }, if, (]
[), {, weightMatrix, =, (, (, Weight, ), data, ), ., getWeight, (, ), ;, continue, ;, }, if, (]
[(, Weight, ), data, ), ., getWeight, (, ), ;, continue, ;, }, if, (, data, instanceof, InitialGuess, ), {]
[), data, ), ., getWeight, (, ), ;, continue, ;, }, if, (, data, instanceof, InitialGuess, ), {, start, =]
[), data, ), ., getWeight, (, ), ;, continue, ;, }, if, (, data, instanceof, InitialGuess, ), {, start, =]
[data, ), ., getWeight, (, ), ;, continue, ;, }, if, (, data, instanceof, InitialGuess, ), {, start, =, (]
[getWeight, (, ), ;, continue, ;, }, if, (, data, instanceof, InitialGuess, ), {, start, =, (, (, InitialGuess, )]
[data, ), ., getInitialGuess, (, ), ;, continue, ;, }, }, }, private, void, checkParameters, (, ), {, if, (]
[data, ), ., getInitialGuess, (, ), ;, continue, ;, }, }, }, private, void, checkParameters, (, ), {, if, (]
[data, ), ., getInitialGuess, (, ), ;, continue, ;, }, }, }, private, void, checkParameters, (, ), {, if, (]
[(, ), ;, continue, ;, }, }, }, private, void, checkParameters, (, ), {, if, (, target, ., length, !=]
[(, ), ;, continue, ;, }, }, }, private, void, checkParameters, (, ), {, if, (, target, ., length, !=]
[private, void, checkParameters, (, ), {, if, (, target, ., length, !=, weightMatrix, ., getColumnDimension, (, ), ), {, throw]
[(, ), {, if, (, target, ., length, !=, weightMatrix, ., getColumnDimension, (, ), ), {, throw, new, DimensionMismatchException, (]
[(, ), {, if, (, target, ., length, !=, weightMatrix, ., getColumnDimension, (, ), ), {, throw, new, DimensionMismatchException, (]
[(, target, ., length, !=, weightMatrix, ., getColumnDimension, (, ), ), {, throw, new, DimensionMismatchException, (, target, ., length, ,]
[(, target, ., length, !=, weightMatrix, ., getColumnDimension, (, ), ), {, throw, new, DimensionMismatchException, (, target, ., length, ,]
