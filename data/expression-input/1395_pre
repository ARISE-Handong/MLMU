[util, ., Date, ;, public, class, SimpleTimePeriod, implements, TimePeriod, ,, Comparable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[private, long, start, ;, private, long, end, ;, public, SimpleTimePeriod, (, long, start, ,, long, end, ), {, if, (]
[private, long, start, ;, private, long, end, ;, public, SimpleTimePeriod, (, long, start, ,, long, end, ), {, if, (]
[start, ;, private, long, end, ;, public, SimpleTimePeriod, (, long, start, ,, long, end, ), {, if, (, start, >]
[end, ;, public, SimpleTimePeriod, (, long, start, ,, long, end, ), {, if, (, start, >, end, ), {, throw]
[SimpleTimePeriod, (, long, start, ,, long, end, ), {, if, (, start, >, end, ), {, throw, new, IllegalArgumentException, (]
[,, long, end, ), {, if, (, start, >, end, ), {, throw, new, IllegalArgumentException, (, "Requires start <= end.", ), ;, }]
[,, long, end, ), {, if, (, start, >, end, ), {, throw, new, IllegalArgumentException, (, "Requires start <= end.", ), ;, }]
[{, if, (, start, >, end, ), {, throw, new, IllegalArgumentException, (, "Requires start <= end.", ), ;, }, this, ., start, =]
[(, start, >, end, ), {, throw, new, IllegalArgumentException, (, "Requires start <= end.", ), ;, }, this, ., start, =, start, ;]
[(, start, >, end, ), {, throw, new, IllegalArgumentException, (, "Requires start <= end.", ), ;, }, this, ., start, =, start, ;]
[), {, throw, new, IllegalArgumentException, (, "Requires start <= end.", ), ;, }, this, ., start, =, start, ;, this, ., end, =]
[;, this, ., end, =, end, ;, }, public, SimpleTimePeriod, (, Date, start, ,, Date, end, ), {, this, (]
[;, this, ., end, =, end, ;, }, public, SimpleTimePeriod, (, Date, start, ,, Date, end, ), {, this, (]
[;, }, public, SimpleTimePeriod, (, Date, start, ,, Date, end, ), {, this, (, start, ., getTime, (, ), ,]
[;, }, public, SimpleTimePeriod, (, Date, start, ,, Date, end, ), {, this, (, start, ., getTime, (, ), ,]
[., getTime, (, ), ,, end, ., getTime, (, ), ), ;, }, public, Date, getStart, (, ), {, return]
[), ,, end, ., getTime, (, ), ), ;, }, public, Date, getStart, (, ), {, return, new, Date, (]
[), ,, end, ., getTime, (, ), ), ;, }, public, Date, getStart, (, ), {, return, new, Date, (]
[(, ), {, return, new, Date, (, this, ., start, ), ;, }, public, long, getStartMillis, (, ), {, return]
[(, ), {, return, new, Date, (, this, ., start, ), ;, }, public, long, getStartMillis, (, ), {, return]
[}, public, long, getStartMillis, (, ), {, return, this, ., start, ;, }, public, Date, getEnd, (, ), {, return]
[getStartMillis, (, ), {, return, this, ., start, ;, }, public, Date, getEnd, (, ), {, return, new, Date, (]
[getStartMillis, (, ), {, return, this, ., start, ;, }, public, Date, getEnd, (, ), {, return, new, Date, (]
[(, ), {, return, new, Date, (, this, ., end, ), ;, }, public, long, getEndMillis, (, ), {, return]
[(, ), {, return, new, Date, (, this, ., end, ), ;, }, public, long, getEndMillis, (, ), {, return]
[getEndMillis, (, ), {, return, this, ., end, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[getEndMillis, (, ), {, return, this, ., end, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[), {, return, this, ., end, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[., end, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, TimePeriod, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, TimePeriod, ), ), {, return, false, ;, }, TimePeriod, that, =]
[if, (, !, (, obj, instanceof, TimePeriod, ), ), {, return, false, ;, }, TimePeriod, that, =, (, TimePeriod, )]
[obj, instanceof, TimePeriod, ), ), {, return, false, ;, }, TimePeriod, that, =, (, TimePeriod, ), obj, ;, if, (]
[instanceof, TimePeriod, ), ), {, return, false, ;, }, TimePeriod, that, =, (, TimePeriod, ), obj, ;, if, (, !]
[instanceof, TimePeriod, ), ), {, return, false, ;, }, TimePeriod, that, =, (, TimePeriod, ), obj, ;, if, (, !]
[instanceof, TimePeriod, ), ), {, return, false, ;, }, TimePeriod, that, =, (, TimePeriod, ), obj, ;, if, (, !]
[}, TimePeriod, that, =, (, TimePeriod, ), obj, ;, if, (, !, this, ., getStart, (, ), ., equals, (]
[}, TimePeriod, that, =, (, TimePeriod, ), obj, ;, if, (, !, this, ., getStart, (, ), ., equals, (]
[if, (, !, this, ., getStart, (, ), ., equals, (, that, ., getStart, (, ), ), ), {, return]
[getStart, (, ), ., equals, (, that, ., getStart, (, ), ), ), {, return, false, ;, }, if, (]
[(, ), ., equals, (, that, ., getStart, (, ), ), ), {, return, false, ;, }, if, (, !]
[(, ), ., equals, (, that, ., getStart, (, ), ), ), {, return, false, ;, }, if, (, !]
[(, ), ., equals, (, that, ., getStart, (, ), ), ), {, return, false, ;, }, if, (, !]
[(, ), ), ), {, return, false, ;, }, if, (, !, this, ., getEnd, (, ), ., equals, (]
[(, ), ), ), {, return, false, ;, }, if, (, !, this, ., getEnd, (, ), ., equals, (]
[if, (, !, this, ., getEnd, (, ), ., equals, (, that, ., getEnd, (, ), ), ), {, return]
[., getEnd, (, ), ., equals, (, that, ., getEnd, (, ), ), ), {, return, false, ;, }, return]
[{, return, false, ;, }, return, true, ;, }, public, int, compareTo, (, Object, obj, ), {, TimePeriod, that, =]
[;, }, return, true, ;, }, public, int, compareTo, (, Object, obj, ), {, TimePeriod, that, =, (, TimePeriod, )]
[}, public, int, compareTo, (, Object, obj, ), {, TimePeriod, that, =, (, TimePeriod, ), obj, ;, long, t0, =]
[}, public, int, compareTo, (, Object, obj, ), {, TimePeriod, that, =, (, TimePeriod, ), obj, ;, long, t0, =]
[=, (, TimePeriod, ), obj, ;, long, t0, =, getStart, (, ), ., getTime, (, ), ;, long, t1, =]
[=, (, TimePeriod, ), obj, ;, long, t0, =, getStart, (, ), ., getTime, (, ), ;, long, t1, =]
[), ., getTime, (, ), ;, long, t1, =, getEnd, (, ), ., getTime, (, ), ;, long, m0, =]
[), ., getTime, (, ), ;, long, t1, =, getEnd, (, ), ., getTime, (, ), ;, long, m0, =]
[getTime, (, ), ;, long, t1, =, getEnd, (, ), ., getTime, (, ), ;, long, m0, =, t0, +]
[getTime, (, ), ;, long, t1, =, getEnd, (, ), ., getTime, (, ), ;, long, m0, =, t0, +]
[(, ), ;, long, t1, =, getEnd, (, ), ., getTime, (, ), ;, long, m0, =, t0, +, (]
[(, ), ;, long, t1, =, getEnd, (, ), ., getTime, (, ), ;, long, m0, =, t0, +, (]
[;, long, t1, =, getEnd, (, ), ., getTime, (, ), ;, long, m0, =, t0, +, (, t1, -]
[=, getEnd, (, ), ., getTime, (, ), ;, long, m0, =, t0, +, (, t1, -, t0, ), /]
[getTime, (, ), ;, long, m0, =, t0, +, (, t1, -, t0, ), /, 2L, ;, long, t2, =]
[getTime, (, ), ;, long, m0, =, t0, +, (, t1, -, t0, ), /, 2L, ;, long, t2, =]
[getTime, (, ), ;, long, m0, =, t0, +, (, t1, -, t0, ), /, 2L, ;, long, t2, =]
[), /, 2L, ;, long, t2, =, that, ., getStart, (, ), ., getTime, (, ), ;, long, t3, =]
[), /, 2L, ;, long, t2, =, that, ., getStart, (, ), ., getTime, (, ), ;, long, t3, =]
[), /, 2L, ;, long, t2, =, that, ., getStart, (, ), ., getTime, (, ), ;, long, t3, =]
[getTime, (, ), ;, long, t3, =, that, ., getEnd, (, ), ., getTime, (, ), ;, long, m1, =]
[getTime, (, ), ;, long, t3, =, that, ., getEnd, (, ), ., getTime, (, ), ;, long, m1, =]
[), ;, long, t3, =, that, ., getEnd, (, ), ., getTime, (, ), ;, long, m1, =, t2, +]
[), ;, long, t3, =, that, ., getEnd, (, ), ., getTime, (, ), ;, long, m1, =, t2, +]
[;, long, t3, =, that, ., getEnd, (, ), ., getTime, (, ), ;, long, m1, =, t2, +, (]
[;, long, t3, =, that, ., getEnd, (, ), ., getTime, (, ), ;, long, m1, =, t2, +, (]
[t3, =, that, ., getEnd, (, ), ., getTime, (, ), ;, long, m1, =, t2, +, (, t3, -]
[., getEnd, (, ), ., getTime, (, ), ;, long, m1, =, t2, +, (, t3, -, t2, ), /]
[., getTime, (, ), ;, long, m1, =, t2, +, (, t3, -, t2, ), /, 2L, ;, if, (]
[., getTime, (, ), ;, long, m1, =, t2, +, (, t3, -, t2, ), /, 2L, ;, if, (]
[(, ), ;, long, m1, =, t2, +, (, t3, -, t2, ), /, 2L, ;, if, (, m0, <]
[m1, =, t2, +, (, t3, -, t2, ), /, 2L, ;, if, (, m0, <, m1, ), {, return]
[=, t2, +, (, t3, -, t2, ), /, 2L, ;, if, (, m0, <, m1, ), {, return, -]
[t2, ), /, 2L, ;, if, (, m0, <, m1, ), {, return, -, 1, ;, }, else, if, (]
[t2, ), /, 2L, ;, if, (, m0, <, m1, ), {, return, -, 1, ;, }, else, if, (]
[/, 2L, ;, if, (, m0, <, m1, ), {, return, -, 1, ;, }, else, if, (, m0, >]
[(, m0, <, m1, ), {, return, -, 1, ;, }, else, if, (, m0, >, m1, ), {, return]
[-, 1, ;, }, else, if, (, m0, >, m1, ), {, return, 1, ;, }, else, {, if, (]
[-, 1, ;, }, else, if, (, m0, >, m1, ), {, return, 1, ;, }, else, {, if, (]
[;, }, else, if, (, m0, >, m1, ), {, return, 1, ;, }, else, {, if, (, t0, <]
[(, m0, >, m1, ), {, return, 1, ;, }, else, {, if, (, t0, <, t2, ), {, return]
[m0, >, m1, ), {, return, 1, ;, }, else, {, if, (, t0, <, t2, ), {, return, -]
[1, ;, }, else, {, if, (, t0, <, t2, ), {, return, -, 1, ;, }, else, if, (]
[1, ;, }, else, {, if, (, t0, <, t2, ), {, return, -, 1, ;, }, else, if, (]
[}, else, {, if, (, t0, <, t2, ), {, return, -, 1, ;, }, else, if, (, t0, >]
[(, t0, <, t2, ), {, return, -, 1, ;, }, else, if, (, t0, >, t2, ), {, return]
[-, 1, ;, }, else, if, (, t0, >, t2, ), {, return, 1, ;, }, else, {, if, (]
[-, 1, ;, }, else, if, (, t0, >, t2, ), {, return, 1, ;, }, else, {, if, (]
[;, }, else, if, (, t0, >, t2, ), {, return, 1, ;, }, else, {, if, (, t1, <]
[(, t0, >, t2, ), {, return, 1, ;, }, else, {, if, (, t1, <, t3, ), {, return]
[t0, >, t2, ), {, return, 1, ;, }, else, {, if, (, t1, <, t3, ), {, return, -]
[1, ;, }, else, {, if, (, t1, <, t3, ), {, return, -, 1, ;, }, else, if, (]
[1, ;, }, else, {, if, (, t1, <, t3, ), {, return, -, 1, ;, }, else, if, (]
[}, else, {, if, (, t1, <, t3, ), {, return, -, 1, ;, }, else, if, (, t1, >]
[(, t1, <, t3, ), {, return, -, 1, ;, }, else, if, (, t1, >, t3, ), {, return]
[return, -, 1, ;, }, else, if, (, t1, >, t3, ), {, return, 1, ;, }, else, {, return]
[;, }, else, {, return, 0, ;, }, }, }, }, public, int, hashCode, (, ), {, int, result, =]
[else, {, return, 0, ;, }, }, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;]
[return, 0, ;, }, }, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =]
[return, 0, ;, }, }, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =]
[return, 0, ;, }, }, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =]
[;, }, }, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *]
[}, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *, result, +]
[public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, (, int, )]
[public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, (, int, )]
[), {, int, result, =, 17, ;, result, =, 37, *, result, +, (, int, ), this, ., start, ;]
[int, result, =, 17, ;, result, =, 37, *, result, +, (, int, ), this, ., start, ;, result, =]
[int, result, =, 17, ;, result, =, 37, *, result, +, (, int, ), this, ., start, ;, result, =]
[int, result, =, 17, ;, result, =, 37, *, result, +, (, int, ), this, ., start, ;, result, =]
[=, 17, ;, result, =, 37, *, result, +, (, int, ), this, ., start, ;, result, =, 37, *]
[;, result, =, 37, *, result, +, (, int, ), this, ., start, ;, result, =, 37, *, result, +]
[37, *, result, +, (, int, ), this, ., start, ;, result, =, 37, *, result, +, (, int, )]
[37, *, result, +, (, int, ), this, ., start, ;, result, =, 37, *, result, +, (, int, )]
[int, ), this, ., start, ;, result, =, 37, *, result, +, (, int, ), this, ., end, ;, return]
