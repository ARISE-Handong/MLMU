[;, protected, long, n, ;, protected, double, m1, ;, protected, double, dev, ;, protected, double, nDev, ;, public, FirstMoment, (]
[=, 0, ;, m1, =, Double, ., NaN, ;, dev, =, Double, ., NaN, ;, nDev, =, Double, ., NaN]
[;, m1, =, Double, ., NaN, ;, dev, =, Double, ., NaN, ;, nDev, =, Double, ., NaN, ;, }]
[=, Double, ., NaN, ;, dev, =, Double, ., NaN, ;, nDev, =, Double, ., NaN, ;, }, public, FirstMoment]
[;, dev, =, Double, ., NaN, ;, nDev, =, Double, ., NaN, ;, }, public, FirstMoment, (, FirstMoment, original, )]
[., NaN, ;, dev, =, Double, ., NaN, ;, nDev, =, Double, ., NaN, ;, }, public, FirstMoment, (, FirstMoment]
[=, Double, ., NaN, ;, nDev, =, Double, ., NaN, ;, }, public, FirstMoment, (, FirstMoment, original, ), throws, NullArgumentException]
[;, nDev, =, Double, ., NaN, ;, }, public, FirstMoment, (, FirstMoment, original, ), throws, NullArgumentException, {, super, (, )]
[., NaN, ;, nDev, =, Double, ., NaN, ;, }, public, FirstMoment, (, FirstMoment, original, ), throws, NullArgumentException, {, super]
[=, Double, ., NaN, ;, }, public, FirstMoment, (, FirstMoment, original, ), throws, NullArgumentException, {, super, (, ), ;, copy]
[;, }, public, FirstMoment, (, FirstMoment, original, ), throws, NullArgumentException, {, super, (, ), ;, copy, (, original, ,, this]
[., NaN, ;, }, public, FirstMoment, (, FirstMoment, original, ), throws, NullArgumentException, {, super, (, ), ;, copy, (, original]
[;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, n, ==, 0, ), {]
[,, this, ), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, n, ==]
[), ;, }, @, Override, public, void, increment, (, final, double, d, ), {, if, (, n, ==, 0, )]
[), {, m1, =, 0.0, ;, }, n, ++, ;, double, n0, =, n, ;, dev, =, d, -, m1]
[==, 0, ), {, m1, =, 0.0, ;, }, n, ++, ;, double, n0, =, n, ;, dev, =, d]
[), {, m1, =, 0.0, ;, }, n, ++, ;, double, n0, =, n, ;, dev, =, d, -, m1]
[=, 0.0, ;, }, n, ++, ;, double, n0, =, n, ;, dev, =, d, -, m1, ;, nDev, =]
[;, }, n, ++, ;, double, n0, =, n, ;, dev, =, d, -, m1, ;, nDev, =, dev, /]
[;, double, n0, =, n, ;, dev, =, d, -, m1, ;, nDev, =, dev, /, n0, ;, m1, +=]
[++, ;, double, n0, =, n, ;, dev, =, d, -, m1, ;, nDev, =, dev, /, n0, ;, m1]
[;, dev, =, d, -, m1, ;, nDev, =, dev, /, n0, ;, m1, +=, nDev, ;, }, @, Override]
[=, d, -, m1, ;, nDev, =, dev, /, n0, ;, m1, +=, nDev, ;, }, @, Override, public, void]
[;, nDev, =, dev, /, n0, ;, m1, +=, nDev, ;, }, @, Override, public, void, clear, (, ), {]
[-, m1, ;, nDev, =, dev, /, n0, ;, m1, +=, nDev, ;, }, @, Override, public, void, clear, (]
[;, nDev, =, dev, /, n0, ;, m1, +=, nDev, ;, }, @, Override, public, void, clear, (, ), {]
[=, dev, /, n0, ;, m1, +=, nDev, ;, }, @, Override, public, void, clear, (, ), {, m1, =]
[;, m1, +=, nDev, ;, }, @, Override, public, void, clear, (, ), {, m1, =, Double, ., NaN, ;]
[/, n0, ;, m1, +=, nDev, ;, }, @, Override, public, void, clear, (, ), {, m1, =, Double, .]
[;, m1, +=, nDev, ;, }, @, Override, public, void, clear, (, ), {, m1, =, Double, ., NaN, ;]
[+=, nDev, ;, }, @, Override, public, void, clear, (, ), {, m1, =, Double, ., NaN, ;, n, =]
[;, }, @, Override, public, void, clear, (, ), {, m1, =, Double, ., NaN, ;, n, =, 0, ;]
[=, Double, ., NaN, ;, n, =, 0, ;, dev, =, Double, ., NaN, ;, nDev, =, Double, ., NaN]
[;, n, =, 0, ;, dev, =, Double, ., NaN, ;, nDev, =, Double, ., NaN, ;, }, @, Override]
[., NaN, ;, n, =, 0, ;, dev, =, Double, ., NaN, ;, nDev, =, Double, ., NaN, ;, }]
[=, 0, ;, dev, =, Double, ., NaN, ;, nDev, =, Double, ., NaN, ;, }, @, Override, public, double]
[;, dev, =, Double, ., NaN, ;, nDev, =, Double, ., NaN, ;, }, @, Override, public, double, getResult, (]
[=, Double, ., NaN, ;, nDev, =, Double, ., NaN, ;, }, @, Override, public, double, getResult, (, ), {]
[;, nDev, =, Double, ., NaN, ;, }, @, Override, public, double, getResult, (, ), {, return, m1, ;, }]
[., NaN, ;, nDev, =, Double, ., NaN, ;, }, @, Override, public, double, getResult, (, ), {, return, m1]
[=, Double, ., NaN, ;, }, @, Override, public, double, getResult, (, ), {, return, m1, ;, }, public, long]
[;, }, @, Override, public, double, getResult, (, ), {, return, m1, ;, }, public, long, getN, (, ), {]
[., NaN, ;, }, @, Override, public, double, getResult, (, ), {, return, m1, ;, }, public, long, getN, (]
[;, }, public, long, getN, (, ), {, return, n, ;, }, @, Override, public, FirstMoment, copy, (, ), {]
[;, }, @, Override, public, FirstMoment, copy, (, ), {, FirstMoment, result, =, new, FirstMoment, (, ), ;, copy, (]
[;, copy, (, this, ,, result, ), ;, return, result, ;, }, public, static, void, copy, (, FirstMoment, source, ,]
[;, return, result, ;, }, public, static, void, copy, (, FirstMoment, source, ,, FirstMoment, dest, ), throws, NullArgumentException, {, MathUtils]
[,, result, ), ;, return, result, ;, }, public, static, void, copy, (, FirstMoment, source, ,, FirstMoment, dest, ), throws]
[), ;, return, result, ;, }, public, static, void, copy, (, FirstMoment, source, ,, FirstMoment, dest, ), throws, NullArgumentException, {]
[;, }, public, static, void, copy, (, FirstMoment, source, ,, FirstMoment, dest, ), throws, NullArgumentException, {, MathUtils, ., checkNotNull, (]
[;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest]
[., checkNotNull, (, source, ), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef]
[), ;, MathUtils, ., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;]
[;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., n, =, source, ., n, ;]
[., checkNotNull, (, dest, ), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., n]
[), ;, dest, ., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., n, =, source, ., n]
[;, dest, ., n, =, source, ., n, ;, dest, ., m1, =, source, ., m1, ;, dest, ., dev]
[., setData, (, source, ., getDataRef, (, ), ), ;, dest, ., n, =, source, ., n, ;, dest, .]
[), ;, dest, ., n, =, source, ., n, ;, dest, ., m1, =, source, ., m1, ;, dest, .]
[., getDataRef, (, ), ), ;, dest, ., n, =, source, ., n, ;, dest, ., m1, =, source, .]
[=, source, ., n, ;, dest, ., m1, =, source, ., m1, ;, dest, ., dev, =, source, ., dev]
[., n, =, source, ., n, ;, dest, ., m1, =, source, ., m1, ;, dest, ., dev, =, source]
[;, dest, ., m1, =, source, ., m1, ;, dest, ., dev, =, source, ., dev, ;, dest, ., nDev]
[., n, ;, dest, ., m1, =, source, ., m1, ;, dest, ., dev, =, source, ., dev, ;, dest]
[=, source, ., m1, ;, dest, ., dev, =, source, ., dev, ;, dest, ., nDev, =, source, ., nDev]
[., m1, =, source, ., m1, ;, dest, ., dev, =, source, ., dev, ;, dest, ., nDev, =, source]
[;, dest, ., dev, =, source, ., dev, ;, dest, ., nDev, =, source, ., nDev, ;, }, }]
[., m1, ;, dest, ., dev, =, source, ., dev, ;, dest, ., nDev, =, source, ., nDev, ;, }]
[=, source, ., dev, ;, dest, ., nDev, =, source, ., nDev, ;, }, }]
[., dev, =, source, ., dev, ;, dest, ., nDev, =, source, ., nDev, ;, }, }]
[;, dest, ., nDev, =, source, ., nDev, ;, }, }]
[., dev, ;, dest, ., nDev, =, source, ., nDev, ;, }, }]
[=, source, ., nDev, ;, }, }]
[., nDev, =, source, ., nDev, ;, }, }]
[;, }, }]
[., nDev, ;, }, }]
