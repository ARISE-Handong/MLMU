[google, ., javascript, ., rhino, ., Node, ;, public, class, EnumElementType, extends, ObjectType, {, private, static, final, long, serialVersionUID, =]
[;, private, final, String, name, ;, EnumElementType, (, JSTypeRegistry, registry, ,, JSType, elementType, ,, String, name, ), {, super, (]
[String, name, ;, EnumElementType, (, JSTypeRegistry, registry, ,, JSType, elementType, ,, String, name, ), {, super, (, registry, ), ;]
[String, name, ;, EnumElementType, (, JSTypeRegistry, registry, ,, JSType, elementType, ,, String, name, ), {, super, (, registry, ), ;]
[(, JSTypeRegistry, registry, ,, JSType, elementType, ,, String, name, ), {, super, (, registry, ), ;, this, ., primitiveType, =]
[registry, ,, JSType, elementType, ,, String, name, ), {, super, (, registry, ), ;, this, ., primitiveType, =, elementType, ;]
[registry, ,, JSType, elementType, ,, String, name, ), {, super, (, registry, ), ;, this, ., primitiveType, =, elementType, ;]
[,, String, name, ), {, super, (, registry, ), ;, this, ., primitiveType, =, elementType, ;, this, ., primitiveObjectType, =]
[,, String, name, ), {, super, (, registry, ), ;, this, ., primitiveType, =, elementType, ;, this, ., primitiveObjectType, =]
[(, registry, ), ;, this, ., primitiveType, =, elementType, ;, this, ., primitiveObjectType, =, elementType, ., toObjectType, (, ), ;]
[(, registry, ), ;, this, ., primitiveType, =, elementType, ;, this, ., primitiveObjectType, =, elementType, ., toObjectType, (, ), ;]
[this, ., primitiveType, =, elementType, ;, this, ., primitiveObjectType, =, elementType, ., toObjectType, (, ), ;, this, ., name, =]
[toObjectType, (, ), ;, this, ., name, =, name, ;, }, @, Override, public, PropertyMap, getPropertyMap, (, ), {, return]
[toObjectType, (, ), ;, this, ., name, =, name, ;, }, @, Override, public, PropertyMap, getPropertyMap, (, ), {, return]
[toObjectType, (, ), ;, this, ., name, =, name, ;, }, @, Override, public, PropertyMap, getPropertyMap, (, ), {, return]
[), ;, this, ., name, =, name, ;, }, @, Override, public, PropertyMap, getPropertyMap, (, ), {, return, primitiveObjectType, ==]
[this, ., name, =, name, ;, }, @, Override, public, PropertyMap, getPropertyMap, (, ), {, return, primitiveObjectType, ==, null, ?]
[this, ., name, =, name, ;, }, @, Override, public, PropertyMap, getPropertyMap, (, ), {, return, primitiveObjectType, ==, null, ?]
[}, @, Override, public, PropertyMap, getPropertyMap, (, ), {, return, primitiveObjectType, ==, null, ?, PropertyMap, ., immutableEmptyMap, (, ), :]
[}, @, Override, public, PropertyMap, getPropertyMap, (, ), {, return, primitiveObjectType, ==, null, ?, PropertyMap, ., immutableEmptyMap, (, ), :]
[immutableEmptyMap, (, ), :, primitiveObjectType, ., getPropertyMap, (, ), ;, }, @, Override, public, EnumElementType, toMaybeEnumElementType, (, ), {, return]
[Override, public, EnumElementType, toMaybeEnumElementType, (, ), {, return, this, ;, }, @, Override, public, boolean, matchesNumberContext, (, ), {, return]
[Override, public, EnumElementType, toMaybeEnumElementType, (, ), {, return, this, ;, }, @, Override, public, boolean, matchesNumberContext, (, ), {, return]
[(, ), {, return, primitiveType, ., matchesNumberContext, (, ), ;, }, @, Override, public, boolean, matchesStringContext, (, ), {, return]
[(, ), {, return, primitiveType, ., matchesNumberContext, (, ), ;, }, @, Override, public, boolean, matchesStringContext, (, ), {, return]
[(, ), {, return, primitiveType, ., matchesStringContext, (, ), ;, }, @, Override, public, boolean, matchesObjectContext, (, ), {, return]
[(, ), {, return, primitiveType, ., matchesStringContext, (, ), ;, }, @, Override, public, boolean, matchesObjectContext, (, ), {, return]
[(, ), {, return, primitiveType, ., matchesObjectContext, (, ), ;, }, @, Override, public, boolean, canBeCalled, (, ), {, return]
[(, ), {, return, primitiveType, ., matchesObjectContext, (, ), ;, }, @, Override, public, boolean, canBeCalled, (, ), {, return]
[(, ), {, return, primitiveType, ., canBeCalled, (, ), ;, }, @, Override, public, boolean, isObject, (, ), {, return]
[(, ), {, return, primitiveType, ., canBeCalled, (, ), ;, }, @, Override, public, boolean, isObject, (, ), {, return]
[{, return, primitiveType, ., isObject, (, ), ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, return]
[{, return, primitiveType, ., isObject, (, ), ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, return]
[isObject, (, ), ;, }, @, Override, public, TernaryValue, testForEquality, (, JSType, that, ), {, return, primitiveType, ., testForEquality, (]
[), {, return, primitiveType, ., testForEquality, (, that, ), ;, }, @, Override, public, boolean, isNullable, (, ), {, return]
[), {, return, primitiveType, ., testForEquality, (, that, ), ;, }, @, Override, public, boolean, isNullable, (, ), {, return]
[(, ), {, return, primitiveType, ., isNullable, (, ), ;, }, @, Override, public, boolean, isNominalType, (, ), {, return]
[isNominalType, (, ), {, return, hasReferenceName, (, ), ;, }, @, Override, public, int, hashCode, (, ), {, if, (]
[(, ), ;, }, @, Override, public, int, hashCode, (, ), {, if, (, hasReferenceName, (, ), ), {, return]
[(, ), ;, }, @, Override, public, int, hashCode, (, ), {, if, (, hasReferenceName, (, ), ), {, return]
[if, (, hasReferenceName, (, ), ), {, return, getReferenceName, (, ), ., hashCode, (, ), ;, }, else, {, return]
[if, (, hasReferenceName, (, ), ), {, return, getReferenceName, (, ), ., hashCode, (, ), ;, }, else, {, return]
[{, return, super, ., hashCode, (, ), ;, }, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return]
[{, return, super, ., hashCode, (, ), ;, }, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return]
[super, ., hashCode, (, ), ;, }, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return, forAnnotations, ?]
[super, ., hashCode, (, ), ;, }, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return, forAnnotations, ?]
[}, }, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return, forAnnotations, ?, primitiveType, ., toString, (, ), :]
[}, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return, forAnnotations, ?, primitiveType, ., toString, (, ), :, (]
[}, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return, forAnnotations, ?, primitiveType, ., toString, (, ), :, (]
[}, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return, forAnnotations, ?, primitiveType, ., toString, (, ), :, (]
[}, @, Override, String, toStringHelper, (, boolean, forAnnotations, ), {, return, forAnnotations, ?, primitiveType, ., toString, (, ), :, (]
[toStringHelper, (, boolean, forAnnotations, ), {, return, forAnnotations, ?, primitiveType, ., toString, (, ), :, (, getReferenceName, (, ), +]
[boolean, forAnnotations, ), {, return, forAnnotations, ?, primitiveType, ., toString, (, ), :, (, getReferenceName, (, ), +, ".<", +]
[), {, return, forAnnotations, ?, primitiveType, ., toString, (, ), :, (, getReferenceName, (, ), +, ".<", +, primitiveType, +]
[(, ), +, ".<", +, primitiveType, +, ">", ), ;, }, @, Override, public, String, getReferenceName, (, ), {, return]
[Override, public, String, getReferenceName, (, ), {, return, name, ;, }, @, Override, public, boolean, hasReferenceName, (, ), {, return]
[hasReferenceName, (, ), {, return, true, ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, if, (]
[hasReferenceName, (, ), {, return, true, ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, if, (]
[return, true, ;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, if, (, JSType, ., isSubtypeHelper, (]
[;, }, @, Override, public, boolean, isSubtype, (, JSType, that, ), {, if, (, JSType, ., isSubtypeHelper, (, this, ,]
[boolean, isSubtype, (, JSType, that, ), {, if, (, JSType, ., isSubtypeHelper, (, this, ,, that, ), ), {, return]
[{, if, (, JSType, ., isSubtypeHelper, (, this, ,, that, ), ), {, return, true, ;, }, else, {, return]
[{, if, (, JSType, ., isSubtypeHelper, (, this, ,, that, ), ), {, return, true, ;, }, else, {, return]
[., isSubtypeHelper, (, this, ,, that, ), ), {, return, true, ;, }, else, {, return, primitiveType, ., isSubtype, (]
[;, }, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, return]
[;, }, }, @, Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, return]
[Override, public, <, T, >, T, visit, (, Visitor, <, T, >, visitor, ), {, return, visitor, ., caseEnumElementType, (]
[}, @, Override, <, T, >, T, visit, (, RelationshipVisitor, <, T, >, visitor, ,, JSType, that, ), {, return]
[}, @, Override, <, T, >, T, visit, (, RelationshipVisitor, <, T, >, visitor, ,, JSType, that, ), {, return]
[T, >, T, visit, (, RelationshipVisitor, <, T, >, visitor, ,, JSType, that, ), {, return, visitor, ., caseEnumElementType, (]
[T, visit, (, RelationshipVisitor, <, T, >, visitor, ,, JSType, that, ), {, return, visitor, ., caseEnumElementType, (, this, ,]
[}, @, Override, boolean, defineProperty, (, String, propertyName, ,, JSType, type, ,, boolean, inferred, ,, Node, propertyNode, ), {, return]
[boolean, inferred, ,, Node, propertyNode, ), {, return, true, ;, }, @, Override, public, ObjectType, getImplicitPrototype, (, ), {, return]
[ObjectType, getImplicitPrototype, (, ), {, return, null, ;, }, @, Override, public, JSType, findPropertyType, (, String, propertyName, ), {, return]
[ObjectType, getImplicitPrototype, (, ), {, return, null, ;, }, @, Override, public, JSType, findPropertyType, (, String, propertyName, ), {, return]
[{, return, null, ;, }, @, Override, public, JSType, findPropertyType, (, String, propertyName, ), {, return, primitiveType, ., findPropertyType, (]
[), {, return, primitiveType, ., findPropertyType, (, propertyName, ), ;, }, @, Override, public, FunctionType, getConstructor, (, ), {, return]
[), {, return, primitiveType, ., findPropertyType, (, propertyName, ), ;, }, @, Override, public, FunctionType, getConstructor, (, ), {, return]
[), {, return, primitiveType, ., findPropertyType, (, propertyName, ), ;, }, @, Override, public, FunctionType, getConstructor, (, ), {, return]
[return, primitiveType, ., findPropertyType, (, propertyName, ), ;, }, @, Override, public, FunctionType, getConstructor, (, ), {, return, primitiveObjectType, ==]
[., findPropertyType, (, propertyName, ), ;, }, @, Override, public, FunctionType, getConstructor, (, ), {, return, primitiveObjectType, ==, null, ?]
[(, propertyName, ), ;, }, @, Override, public, FunctionType, getConstructor, (, ), {, return, primitiveObjectType, ==, null, ?, null, :]
[(, propertyName, ), ;, }, @, Override, public, FunctionType, getConstructor, (, ), {, return, primitiveObjectType, ==, null, ?, null, :]
[null, ?, null, :, primitiveObjectType, ., getConstructor, (, ), ;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return]
[null, ?, null, :, primitiveObjectType, ., getConstructor, (, ), ;, }, @, Override, public, JSType, autoboxesTo, (, ), {, return]
[JSType, autoboxesTo, (, ), {, return, primitiveType, ., autoboxesTo, (, ), ;, }, public, JSType, getPrimitiveType, (, ), {, return]
[public, JSType, getPrimitiveType, (, ), {, return, primitiveType, ;, }, JSType, meet, (, JSType, that, ), {, JSType, meetPrimitive, =]
[public, JSType, getPrimitiveType, (, ), {, return, primitiveType, ;, }, JSType, meet, (, JSType, that, ), {, JSType, meetPrimitive, =]
[), {, return, primitiveType, ;, }, JSType, meet, (, JSType, that, ), {, JSType, meetPrimitive, =, primitiveType, ., getGreatestSubtype, (]
[}, JSType, meet, (, JSType, that, ), {, JSType, meetPrimitive, =, primitiveType, ., getGreatestSubtype, (, that, ), ;, if, (]
[}, JSType, meet, (, JSType, that, ), {, JSType, meetPrimitive, =, primitiveType, ., getGreatestSubtype, (, that, ), ;, if, (]
[JSType, meetPrimitive, =, primitiveType, ., getGreatestSubtype, (, that, ), ;, if, (, meetPrimitive, ., isEmptyType, (, ), ), {, return]
[(, that, ), ;, if, (, meetPrimitive, ., isEmptyType, (, ), ), {, return, null, ;, }, else, {, return]
[;, if, (, meetPrimitive, ., isEmptyType, (, ), ), {, return, null, ;, }, else, {, return, new, EnumElementType, (]
[(, meetPrimitive, ., isEmptyType, (, ), ), {, return, null, ;, }, else, {, return, new, EnumElementType, (, registry, ,]
[., isEmptyType, (, ), ), {, return, null, ;, }, else, {, return, new, EnumElementType, (, registry, ,, meetPrimitive, ,]
[name, ), ;, }, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {]
[;, }, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, primitiveType, =]
[;, }, }, @, Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, primitiveType, =]
[Override, JSType, resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, primitiveType, =, primitiveType, ., resolve, (]
[resolveInternal, (, ErrorReporter, t, ,, StaticScope, <, JSType, >, scope, ), {, primitiveType, =, primitiveType, ., resolve, (, t, ,]
[t, ,, StaticScope, <, JSType, >, scope, ), {, primitiveType, =, primitiveType, ., resolve, (, t, ,, scope, ), ;]
[StaticScope, <, JSType, >, scope, ), {, primitiveType, =, primitiveType, ., resolve, (, t, ,, scope, ), ;, primitiveObjectType, =]
[StaticScope, <, JSType, >, scope, ), {, primitiveType, =, primitiveType, ., resolve, (, t, ,, scope, ), ;, primitiveObjectType, =]
[scope, ), {, primitiveType, =, primitiveType, ., resolve, (, t, ,, scope, ), ;, primitiveObjectType, =, ObjectType, ., cast, (]
[=, primitiveType, ., resolve, (, t, ,, scope, ), ;, primitiveObjectType, =, ObjectType, ., cast, (, primitiveType, ), ;, return]
