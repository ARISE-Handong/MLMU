[;, public, static, final, double, DEFAULT_ITEM_MARGIN, =, 0.20, ;, private, double, itemMargin, ;, private, double, maxItemWidth, ;, public, LevelRenderer, (]
[;, public, static, final, double, DEFAULT_ITEM_MARGIN, =, 0.20, ;, private, double, itemMargin, ;, private, double, maxItemWidth, ;, public, LevelRenderer, (]
[;, private, double, itemMargin, ;, private, double, maxItemWidth, ;, public, LevelRenderer, (, ), {, super, (, ), ;, this, .]
[=, DEFAULT_ITEM_MARGIN, ;, this, ., maxItemWidth, =, 1.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Float, (, -, 5.0f, ,, -]
[., itemMargin, =, DEFAULT_ITEM_MARGIN, ;, this, ., maxItemWidth, =, 1.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Float, (, -, 5.0f]
[;, this, ., maxItemWidth, =, 1.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Float, (, -, 5.0f, ,, -, 1.0f, ,]
[=, 1.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Float, (, -, 5.0f, ,, -, 1.0f, ,, 10.0f, ,, 2.0f, )]
[., maxItemWidth, =, 1.0, ;, setBaseLegendShape, (, new, Rectangle2D, ., Float, (, -, 5.0f, ,, -, 1.0f, ,, 10.0f, ,]
[;, setBaseLegendShape, (, new, Rectangle2D, ., Float, (, -, 5.0f, ,, -, 1.0f, ,, 10.0f, ,, 2.0f, ), ), ;]
[;, setBaseOutlinePaint, (, new, Color, (, 0, ,, 0, ,, 0, ,, 0, ), ), ;, }, public, double, getItemMargin]
[), ;, setBaseOutlinePaint, (, new, Color, (, 0, ,, 0, ,, 0, ,, 0, ), ), ;, }, public, double]
[,, -, 1.0f, ,, 10.0f, ,, 2.0f, ), ), ;, setBaseOutlinePaint, (, new, Color, (, 0, ,, 0, ,, 0]
[,, -, 1.0f, ,, 10.0f, ,, 2.0f, ), ), ;, setBaseOutlinePaint, (, new, Color, (, 0, ,, 0, ,, 0]
[,, 10.0f, ,, 2.0f, ), ), ;, setBaseOutlinePaint, (, new, Color, (, 0, ,, 0, ,, 0, ,, 0, )]
[,, 10.0f, ,, 2.0f, ), ), ;, setBaseOutlinePaint, (, new, Color, (, 0, ,, 0, ,, 0, ,, 0, )]
[,, 2.0f, ), ), ;, setBaseOutlinePaint, (, new, Color, (, 0, ,, 0, ,, 0, ,, 0, ), ), ;]
[), ), ;, setBaseOutlinePaint, (, new, Color, (, 0, ,, 0, ,, 0, ,, 0, ), ), ;, }, public]
[;, }, public, double, getItemMargin, (, ), {, return, this, ., itemMargin, ;, }, public, void, setItemMargin, (, double, percent]
[), ;, }, public, double, getItemMargin, (, ), {, return, this, ., itemMargin, ;, }, public, void, setItemMargin, (, double]
[,, 0, ,, 0, ,, 0, ), ), ;, }, public, double, getItemMargin, (, ), {, return, this, ., itemMargin]
[,, 0, ,, 0, ), ), ;, }, public, double, getItemMargin, (, ), {, return, this, ., itemMargin, ;, }]
[,, 0, ), ), ;, }, public, double, getItemMargin, (, ), {, return, this, ., itemMargin, ;, }, public, void]
[), ), ;, }, public, double, getItemMargin, (, ), {, return, this, ., itemMargin, ;, }, public, void, setItemMargin, (]
[;, }, public, void, setItemMargin, (, double, percent, ), {, this, ., itemMargin, =, percent, ;, fireChangeEvent, (, ), ;]
[., itemMargin, ;, }, public, void, setItemMargin, (, double, percent, ), {, this, ., itemMargin, =, percent, ;, fireChangeEvent, (]
[=, percent, ;, fireChangeEvent, (, ), ;, }, public, double, getMaximumItemWidth, (, ), {, return, this, ., maxItemWidth, ;, }]
[., itemMargin, =, percent, ;, fireChangeEvent, (, ), ;, }, public, double, getMaximumItemWidth, (, ), {, return, this, ., maxItemWidth]
[;, fireChangeEvent, (, ), ;, }, public, double, getMaximumItemWidth, (, ), {, return, this, ., maxItemWidth, ;, }, public, void]
[;, }, public, double, getMaximumItemWidth, (, ), {, return, this, ., maxItemWidth, ;, }, public, void, setMaximumItemWidth, (, double, percent]
[;, }, public, void, setMaximumItemWidth, (, double, percent, ), {, this, ., maxItemWidth, =, percent, ;, fireChangeEvent, (, ), ;]
[., maxItemWidth, ;, }, public, void, setMaximumItemWidth, (, double, percent, ), {, this, ., maxItemWidth, =, percent, ;, fireChangeEvent, (]
[=, percent, ;, fireChangeEvent, (, ), ;, }, public, CategoryItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot]
[., maxItemWidth, =, percent, ;, fireChangeEvent, (, ), ;, }, public, CategoryItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,]
[;, fireChangeEvent, (, ), ;, }, public, CategoryItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryDataset]
[;, }, public, CategoryItemRendererState, initialise, (, Graphics2D, g2, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryDataset, dataset, ,, PlotRenderingInfo, info]
[;, calculateItemWidth, (, plot, ,, dataArea, ,, dataset, ,, state, ), ;, return, state, ;, }, protected, void, calculateItemWidth, (]
[., initialise, (, g2, ,, dataArea, ,, plot, ,, dataset, ,, info, ), ;, calculateItemWidth, (, plot, ,, dataArea, ,]
[,, dataArea, ,, plot, ,, dataset, ,, info, ), ;, calculateItemWidth, (, plot, ,, dataArea, ,, dataset, ,, state, )]
[,, plot, ,, dataset, ,, info, ), ;, calculateItemWidth, (, plot, ,, dataArea, ,, dataset, ,, state, ), ;, return]
[,, dataset, ,, info, ), ;, calculateItemWidth, (, plot, ,, dataArea, ,, dataset, ,, state, ), ;, return, state, ;]
[,, info, ), ;, calculateItemWidth, (, plot, ,, dataArea, ,, dataset, ,, state, ), ;, return, state, ;, }, protected]
[), ;, calculateItemWidth, (, plot, ,, dataArea, ,, dataset, ,, state, ), ;, return, state, ;, }, protected, void, calculateItemWidth]
[;, return, state, ;, }, protected, void, calculateItemWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState, state]
[,, dataArea, ,, dataset, ,, state, ), ;, return, state, ;, }, protected, void, calculateItemWidth, (, CategoryPlot, plot, ,, Rectangle2D]
[,, dataset, ,, state, ), ;, return, state, ;, }, protected, void, calculateItemWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,]
[,, state, ), ;, return, state, ;, }, protected, void, calculateItemWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset]
[), ;, return, state, ;, }, protected, void, calculateItemWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState]
[;, }, protected, void, calculateItemWidth, (, CategoryPlot, plot, ,, Rectangle2D, dataArea, ,, CategoryDataset, dataset, ,, CategoryItemRendererState, state, ), {, CategoryAxis]
[;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =]
[,, dataset, ), ;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;]
[), ;, if, (, dataset, !=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows]
[), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, state, ., getVisibleSeriesCount, (, ), >=]
[!=, null, ), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, state, ., getVisibleSeriesCount, (]
[), {, int, columns, =, dataset, ., getColumnCount, (, ), ;, int, rows, =, state, ., getVisibleSeriesCount, (, ), >=]
[;, int, rows, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, dataset, .]
[., getColumnCount, (, ), ;, int, rows, =, state, ., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (]
[;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation]
[?, state, ., getVisibleSeriesCount, (, ), :, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation]
[>=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;]
[., getVisibleSeriesCount, (, ), >=, 0, ?, state, ., getVisibleSeriesCount, (, ), :, dataset, ., getRowCount, (, ), ;, double]
[?, state, ., getVisibleSeriesCount, (, ), :, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation]
[:, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, )]
[., getVisibleSeriesCount, (, ), :, dataset, ., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot]
[;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation]
[., getRowCount, (, ), ;, double, space, =, 0.0, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if]
[;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else]
[., getOrientation, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, )]
[., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, .]
[=, dataArea, ., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =]
[;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;]
[., getHeight, (, ), ;, }, else, if, (, orientation, ==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, .]
[), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumItemWidth, (, ), ;]
[==, PlotOrientation, ., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *]
[), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumItemWidth, (, ), ;]
[., VERTICAL, ), {, space, =, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumItemWidth, (]
[=, dataArea, ., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumItemWidth, (, ), ;, double, categoryMargin, =]
[;, }, double, maxWidth, =, space, *, getMaximumItemWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0]
[., getWidth, (, ), ;, }, double, maxWidth, =, space, *, getMaximumItemWidth, (, ), ;, double, categoryMargin, =, 0.0, ;]
[;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =]
[*, getMaximumItemWidth, (, ), ;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1]
[;, double, categoryMargin, =, 0.0, ;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =]
[;, double, currentItemMargin, =, 0.0, ;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, )]
[;, if, (, columns, >, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows]
[), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =]
[>, 1, ), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {]
[), {, categoryMargin, =, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =]
[=, domainAxis, ., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, )]
[;, }, if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space]
[., getCategoryMargin, (, ), ;, }, if, (, rows, >, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }]
[), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin]
[>, 1, ), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis]
[), {, currentItemMargin, =, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin]
[=, getItemMargin, (, ), ;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -]
[;, }, double, used, =, space, *, (, 1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (]
[;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[*, (, 1, -, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, )]
[;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (]
[), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min]
[-, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math]
[-, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth]
[-, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >]
[-, domainAxis, ., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (]
[-, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >]
[., getLowerMargin, (, ), -, domainAxis, ., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows]
[-, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth]
[., getUpperMargin, (, ), -, categoryMargin, -, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, )]
[-, currentItemMargin, ), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math]
[), ;, if, (, (, rows, *, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min]
[), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *, columns, ), ,, maxWidth, )]
[>, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *, columns, ), ,]
[), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *, columns, )]
[*, columns, ), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *]
[), >, 0, ), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *, columns, )]
[), {, state, ., setBarWidth, (, Math, ., min, (, used, /, (, rows, *, columns, ), ,, maxWidth, )]
[;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }, }]
[., setBarWidth, (, Math, ., min, (, used, /, (, rows, *, columns, ), ,, maxWidth, ), ), ;, }]
[), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }]
[., min, (, used, /, (, rows, *, columns, ), ,, maxWidth, ), ), ;, }, else, {, state, .]
[,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, )]
[/, (, rows, *, columns, ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, .]
[,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, )]
[), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth]
[*, columns, ), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used]
[), ,, maxWidth, ), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth]
[), ), ;, }, else, {, state, ., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;]
[;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation, orientation, ,, Rectangle2D, dataArea, ,, CategoryAxis, domainAxis, ,]
[., setBarWidth, (, Math, ., min, (, used, ,, maxWidth, ), ), ;, }, }, }, protected, double, calculateBarW0, (]
[), ;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation, orientation, ,, Rectangle2D, dataArea, ,, CategoryAxis, domainAxis]
[., min, (, used, ,, maxWidth, ), ), ;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation]
[,, maxWidth, ), ), ;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation, orientation, ,, Rectangle2D, dataArea]
[), ), ;, }, }, }, protected, double, calculateBarW0, (, CategoryPlot, plot, ,, PlotOrientation, orientation, ,, Rectangle2D, dataArea, ,, CategoryAxis]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, )]
[==, PlotOrientation, ., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea]
[), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, )]
[., HORIZONTAL, ), {, space, =, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth]
[=, dataArea, ., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double]
[;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (]
[., getHeight, (, ), ;, }, else, {, space, =, dataArea, ., getWidth, (, ), ;, }, double, barW0, =]
[=, dataArea, ., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, )]
[;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge]
[., getWidth, (, ), ;, }, double, barW0, =, domainAxis, ., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea]
[;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), ;, if, (, seriesCount, <, 0, ), {, seriesCount, =, getRowCount]
[., getCategoryStart, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =, state, ., getVisibleSeriesCount]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), ;, if]
[,, plot, ., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), ;, if, (, seriesCount]
[), ;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), ;, if, (, seriesCount, <, 0, ), {, seriesCount, =]
[., getDomainAxisEdge, (, ), ), ;, int, seriesCount, =, state, ., getVisibleSeriesCount, (, ), ;, if, (, seriesCount, <, 0]
[;, if, (, seriesCount, <, 0, ), {, seriesCount, =, getRowCount, (, ), ;, }, int, categoryCount, =, getColumnCount, (]
[., getVisibleSeriesCount, (, ), ;, if, (, seriesCount, <, 0, ), {, seriesCount, =, getRowCount, (, ), ;, }, int]
[), {, seriesCount, =, getRowCount, (, ), ;, }, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >]
[<, 0, ), {, seriesCount, =, getRowCount, (, ), ;, }, int, categoryCount, =, getColumnCount, (, ), ;, if, (]
[), {, seriesCount, =, getRowCount, (, ), ;, }, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >]
[=, getRowCount, (, ), ;, }, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {]
[;, }, int, categoryCount, =, getColumnCount, (, ), ;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, space]
[;, if, (, seriesCount, >, 1, ), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *]
[), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), )]
[>, 1, ), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1]
[), {, double, seriesGap, =, space, *, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), )]
[;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row]
[/, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,]
[*, getItemMargin, (, ), /, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (]
[/, (, categoryCount, *, (, seriesCount, -, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,]
[;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row]
[), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +]
[*, (, seriesCount, -, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount]
[), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +]
[), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0]
[-, 1, ), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0]
[), ), ;, double, seriesW, =, calculateSeriesWidth, (, space, ,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0]
[;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (]
[,, domainAxis, ,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +]
[,, categoryCount, ,, seriesCount, ), ;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW]
[,, seriesCount, ), ;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0]
[), ;, barW0, =, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -]
[=, barW0, +, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (, state, .]
[;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, .]
[-, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (]
[+, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {]
[+, row, *, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (]
[+, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {]
[*, (, seriesW, +, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /]
[+, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {]
[), +, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else]
[+, seriesGap, ), +, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;]
[), +, (, seriesW, /, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else]
[-, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (]
[), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle]
[/, 2.0, ), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis]
[), -, (, state, ., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle]
[;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, .]
[), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot]
[/, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea]
[., getBarWidth, (, ), /, 2.0, ), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount]
[), ;, }, else, {, barW0, =, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot]
[=, domainAxis, ., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -]
[;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot]
[-, state, ., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D, g2]
[., getCategoryMiddle, (, column, ,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, .]
[,, getColumnCount, (, ), ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return]
[,, plot, ., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;]
[), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D]
[., getDomainAxisEdge, (, ), ), -, state, ., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;, }, public]
[;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot]
[/, 2.0, ;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea]
[., getBarWidth, (, ), /, 2.0, ;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState]
[;, }, return, barW0, ;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot]
[;, }, public, void, drawItem, (, Graphics2D, g2, ,, CategoryItemRendererState, state, ,, Rectangle2D, dataArea, ,, CategoryPlot, plot, ,, CategoryAxis, domainAxis]
[;, if, (, visibleRow, <, 0, ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,]
[., getVisibleSeriesIndex, (, row, ), ;, if, (, visibleRow, <, 0, ), {, return, ;, }, Number, dataValue, =, dataset]
[), ;, if, (, visibleRow, <, 0, ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row]
[), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue]
[<, 0, ), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if]
[), {, return, ;, }, Number, dataValue, =, dataset, ., getValue, (, row, ,, column, ), ;, if, (, dataValue]
[;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;]
[., getValue, (, row, ,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value]
[,, column, ), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue]
[), ;, if, (, dataValue, ==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, )]
[), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation]
[==, null, ), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot]
[), {, return, ;, }, double, value, =, dataValue, ., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation]
[;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea]
[., doubleValue, (, ), ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot]
[;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, )]
[., getOrientation, (, ), ;, double, barW0, =, calculateBarW0, (, plot, ,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,]
[;, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, barL, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea]
[,, orientation, ,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, RectangleEdge, edge, =, plot, ., getRangeAxisEdge]
[,, dataArea, ,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, )]
[,, domainAxis, ,, state, ,, visibleRow, ,, column, ), ;, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double]
[,, state, ,, visibleRow, ,, column, ), ;, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, barL, =]
[,, visibleRow, ,, column, ), ;, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, barL, =, rangeAxis, .]
[,, column, ), ;, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, barL, =, rangeAxis, ., valueToJava2D, (]
[), ;, RectangleEdge, edge, =, plot, ., getRangeAxisEdge, (, ), ;, double, barL, =, rangeAxis, ., valueToJava2D, (, value, ,]
[;, double, barL, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, Line2D, line, =, null, ;]
[., getRangeAxisEdge, (, ), ;, double, barL, =, rangeAxis, ., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, Line2D]
[;, Line2D, line, =, null, ;, double, x, =, 0.0, ;, double, y, =, 0.0, ;, if, (, orientation, ==]
[., valueToJava2D, (, value, ,, dataArea, ,, edge, ), ;, Line2D, line, =, null, ;, double, x, =, 0.0, ;]
[,, dataArea, ,, edge, ), ;, Line2D, line, =, null, ;, double, x, =, 0.0, ;, double, y, =, 0.0]
[,, edge, ), ;, Line2D, line, =, null, ;, double, x, =, 0.0, ;, double, y, =, 0.0, ;, if]
[), ;, Line2D, line, =, null, ;, double, x, =, 0.0, ;, double, y, =, 0.0, ;, if, (, orientation]
[;, double, x, =, 0.0, ;, double, y, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {]
[;, double, y, =, 0.0, ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, x, =, barL, ;, y]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, x, =, barL, ;, y, =, barW0, +, state, .]
[), {, x, =, barL, ;, y, =, barW0, +, state, ., getBarWidth, (, ), /, 2.0, ;, line, =]
[==, PlotOrientation, ., HORIZONTAL, ), {, x, =, barL, ;, y, =, barW0, +, state, ., getBarWidth, (, ), /]
[), {, x, =, barL, ;, y, =, barW0, +, state, ., getBarWidth, (, ), /, 2.0, ;, line, =]
[., HORIZONTAL, ), {, x, =, barL, ;, y, =, barW0, +, state, ., getBarWidth, (, ), /, 2.0, ;]
[=, barL, ;, y, =, barW0, +, state, ., getBarWidth, (, ), /, 2.0, ;, line, =, new, Line2D, .]
[;, y, =, barW0, +, state, ., getBarWidth, (, ), /, 2.0, ;, line, =, new, Line2D, ., Double, (]
[=, barW0, +, state, ., getBarWidth, (, ), /, 2.0, ;, line, =, new, Line2D, ., Double, (, barL, ,]
[;, line, =, new, Line2D, ., Double, (, barL, ,, barW0, ,, barL, ,, barW0, +, state, ., getBarWidth, (]
[+, state, ., getBarWidth, (, ), /, 2.0, ;, line, =, new, Line2D, ., Double, (, barL, ,, barW0, ,]
[;, line, =, new, Line2D, ., Double, (, barL, ,, barW0, ,, barL, ,, barW0, +, state, ., getBarWidth, (]
[/, 2.0, ;, line, =, new, Line2D, ., Double, (, barL, ,, barW0, ,, barL, ,, barW0, +, state, .]
[., getBarWidth, (, ), /, 2.0, ;, line, =, new, Line2D, ., Double, (, barL, ,, barW0, ,, barL, ,]
[;, line, =, new, Line2D, ., Double, (, barL, ,, barW0, ,, barL, ,, barW0, +, state, ., getBarWidth, (]
[=, new, Line2D, ., Double, (, barL, ,, barW0, ,, barL, ,, barW0, +, state, ., getBarWidth, (, ), )]
[;, }, else, {, x, =, barW0, +, state, ., getBarWidth, (, ), /, 2.0, ;, y, =, barL, ;]
[,, barW0, ,, barL, ,, barW0, +, state, ., getBarWidth, (, ), ), ;, }, else, {, x, =, barW0]
[,, barL, ,, barW0, +, state, ., getBarWidth, (, ), ), ;, }, else, {, x, =, barW0, +, state]
[,, barW0, +, state, ., getBarWidth, (, ), ), ;, }, else, {, x, =, barW0, +, state, ., getBarWidth]
[), ;, }, else, {, x, =, barW0, +, state, ., getBarWidth, (, ), /, 2.0, ;, y, =, barL]
[+, state, ., getBarWidth, (, ), ), ;, }, else, {, x, =, barW0, +, state, ., getBarWidth, (, )]
[), ;, }, else, {, x, =, barW0, +, state, ., getBarWidth, (, ), /, 2.0, ;, y, =, barL]
[., getBarWidth, (, ), ), ;, }, else, {, x, =, barW0, +, state, ., getBarWidth, (, ), /, 2.0]
[=, barW0, +, state, ., getBarWidth, (, ), /, 2.0, ;, y, =, barL, ;, line, =, new, Line2D, .]
[;, y, =, barL, ;, line, =, new, Line2D, ., Double, (, barW0, ,, barL, ,, barW0, +, state, .]
[+, state, ., getBarWidth, (, ), /, 2.0, ;, y, =, barL, ;, line, =, new, Line2D, ., Double, (]
[;, y, =, barL, ;, line, =, new, Line2D, ., Double, (, barW0, ,, barL, ,, barW0, +, state, .]
[/, 2.0, ;, y, =, barL, ;, line, =, new, Line2D, ., Double, (, barW0, ,, barL, ,, barW0, +]
[., getBarWidth, (, ), /, 2.0, ;, y, =, barL, ;, line, =, new, Line2D, ., Double, (, barW0, ,]
[;, y, =, barL, ;, line, =, new, Line2D, ., Double, (, barW0, ,, barL, ,, barW0, +, state, .]
[=, barL, ;, line, =, new, Line2D, ., Double, (, barW0, ,, barL, ,, barW0, +, state, ., getBarWidth, (]
[;, line, =, new, Line2D, ., Double, (, barW0, ,, barL, ,, barW0, +, state, ., getBarWidth, (, ), ,]
[=, new, Line2D, ., Double, (, barW0, ,, barL, ,, barW0, +, state, ., getBarWidth, (, ), ,, barL, )]
[;, }, Stroke, itemStroke, =, getItemStroke, (, row, ,, column, ,, selected, ), ;, Paint, itemPaint, =, getItemPaint, (, row]
[,, barL, ,, barW0, +, state, ., getBarWidth, (, ), ,, barL, ), ;, }, Stroke, itemStroke, =, getItemStroke, (]
[,, barW0, +, state, ., getBarWidth, (, ), ,, barL, ), ;, }, Stroke, itemStroke, =, getItemStroke, (, row, ,]
[,, barL, ), ;, }, Stroke, itemStroke, =, getItemStroke, (, row, ,, column, ,, selected, ), ;, Paint, itemPaint, =]
[+, state, ., getBarWidth, (, ), ,, barL, ), ;, }, Stroke, itemStroke, =, getItemStroke, (, row, ,, column, ,]
[,, barL, ), ;, }, Stroke, itemStroke, =, getItemStroke, (, row, ,, column, ,, selected, ), ;, Paint, itemPaint, =]
[., getBarWidth, (, ), ,, barL, ), ;, }, Stroke, itemStroke, =, getItemStroke, (, row, ,, column, ,, selected, )]
[), ;, }, Stroke, itemStroke, =, getItemStroke, (, row, ,, column, ,, selected, ), ;, Paint, itemPaint, =, getItemPaint, (]
[;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, g2, ., setStroke, (, itemStroke, ), ;]
[,, column, ,, selected, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, g2, .]
[,, selected, ), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, g2, ., setStroke, (]
[), ;, Paint, itemPaint, =, getItemPaint, (, row, ,, column, ,, selected, ), ;, g2, ., setStroke, (, itemStroke, )]
[;, g2, ., setStroke, (, itemStroke, ), ;, g2, ., setPaint, (, itemPaint, ), ;, g2, ., draw, (, line]
[,, column, ,, selected, ), ;, g2, ., setStroke, (, itemStroke, ), ;, g2, ., setPaint, (, itemPaint, ), ;]
[,, selected, ), ;, g2, ., setStroke, (, itemStroke, ), ;, g2, ., setPaint, (, itemPaint, ), ;, g2, .]
[), ;, g2, ., setStroke, (, itemStroke, ), ;, g2, ., setPaint, (, itemPaint, ), ;, g2, ., draw, (]
[;, g2, ., setPaint, (, itemPaint, ), ;, g2, ., draw, (, line, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (]
[., setStroke, (, itemStroke, ), ;, g2, ., setPaint, (, itemPaint, ), ;, g2, ., draw, (, line, ), ;]
[), ;, g2, ., setPaint, (, itemPaint, ), ;, g2, ., draw, (, line, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator]
[;, g2, ., draw, (, line, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;]
[., setPaint, (, itemPaint, ), ;, g2, ., draw, (, line, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,]
[), ;, g2, ., draw, (, line, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, )]
[;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible]
[., draw, (, line, ), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (]
[), ;, CategoryItemLabelGenerator, generator, =, getItemLabelGenerator, (, row, ,, column, ,, selected, ), ;, if, (, generator, !=, null, &&]
[;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabel, (, g2]
[,, column, ,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, )]
[,, selected, ), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {]
[), ;, if, (, generator, !=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabel, (]
[), {, drawItemLabel, (, g2, ,, orientation, ,, dataset, ,, row, ,, column, ,, selected, ,, x, ,, y, ,]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabel, (, g2, ,, orientation, ,, dataset, ,, row]
[!=, null, &&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabel, (, g2, ,, orientation, ,, dataset]
[&&, isItemLabelVisible, (, row, ,, column, ,, selected, ), ), {, drawItemLabel, (, g2, ,, orientation, ,, dataset, ,, row]
[), {, drawItemLabel, (, g2, ,, orientation, ,, dataset, ,, row, ,, column, ,, selected, ,, x, ,, y, ,]
[,, column, ,, selected, ), ), {, drawItemLabel, (, g2, ,, orientation, ,, dataset, ,, row, ,, column, ,, selected]
[,, selected, ), ), {, drawItemLabel, (, g2, ,, orientation, ,, dataset, ,, row, ,, column, ,, selected, ,, x]
[), ), {, drawItemLabel, (, g2, ,, orientation, ,, dataset, ,, row, ,, column, ,, selected, ,, x, ,, y]
[;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,]
[,, orientation, ,, dataset, ,, row, ,, column, ,, selected, ,, x, ,, y, ,, (, value, <, 0.0, )]
[,, dataset, ,, row, ,, column, ,, selected, ,, x, ,, y, ,, (, value, <, 0.0, ), ), ;]
[,, row, ,, column, ,, selected, ,, x, ,, y, ,, (, value, <, 0.0, ), ), ;, }, int]
[,, column, ,, selected, ,, x, ,, y, ,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =]
[,, selected, ,, x, ,, y, ,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =, plot, .]
[,, x, ,, y, ,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (]
[,, y, ,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, )]
[,, (, value, <, 0.0, ), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues]
[), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (, )]
[), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (]
[<, 0.0, ), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, .]
[), ), ;, }, int, datasetIndex, =, plot, ., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (]
[;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,, dataset, ., getRowKey, (, row, ), ,, dataset, ., getColumnKey, (]
[., indexOf, (, dataset, ), ;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,, dataset, ., getRowKey, (, row, )]
[), ;, updateCrosshairValues, (, state, ., getCrosshairState, (, ), ,, dataset, ., getRowKey, (, row, ), ,, dataset, ., getColumnKey]
[;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities]
[,, dataset, ., getRowKey, (, row, ), ,, dataset, ., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0]
[., getCrosshairState, (, ), ,, dataset, ., getRowKey, (, row, ), ,, dataset, ., getColumnKey, (, column, ), ,, value]
[,, dataset, ., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0, ,, barL, ,, orientation, ), ;, EntityCollection]
[., getRowKey, (, row, ), ,, dataset, ., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0, ,, barL]
[), ,, dataset, ., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0, ,, barL, ,, orientation, ), ;]
[,, value, ,, datasetIndex, ,, barW0, ,, barL, ,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, )]
[., getColumnKey, (, column, ), ,, value, ,, datasetIndex, ,, barW0, ,, barL, ,, orientation, ), ;, EntityCollection, entities, =]
[), ,, value, ,, datasetIndex, ,, barW0, ,, barL, ,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (]
[,, datasetIndex, ,, barW0, ,, barL, ,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if]
[,, barW0, ,, barL, ,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities]
[,, barL, ,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null]
[,, orientation, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {]
[), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, line, ., getBounds, (, ), ,, dataset, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, line, ., getBounds, (]
[), {, addEntity, (, entities, ,, line, ., getBounds, (, ), ,, dataset, ,, row, ,, column, ,, selected, )]
[!=, null, ), {, addEntity, (, entities, ,, line, ., getBounds, (, ), ,, dataset, ,, row, ,, column, ,]
[), {, addEntity, (, entities, ,, line, ., getBounds, (, ), ,, dataset, ,, row, ,, column, ,, selected, )]
[;, }, }, protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,, int, categories, ,, int, series, ), {]
[,, line, ., getBounds, (, ), ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, double]
[,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis]
[., getBounds, (, ), ,, dataset, ,, row, ,, column, ,, selected, ), ;, }, }, protected, double, calculateSeriesWidth, (]
[,, row, ,, column, ,, selected, ), ;, }, }, protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,]
[,, column, ,, selected, ), ;, }, }, protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,, int, categories]
[,, selected, ), ;, }, }, protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,, int, categories, ,, int]
[), ;, }, }, protected, double, calculateSeriesWidth, (, double, space, ,, CategoryAxis, axis, ,, int, categories, ,, int, series, )]
[;, if, (, categories, >, 1, ), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return]
[-, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {, factor, =, factor, -, axis, .]
[-, axis, ., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {]
[-, getItemMargin, (, ), -, axis, ., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories]
[-, axis, ., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {]
[-, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {, factor, =, factor, -, axis, .]
[., getLowerMargin, (, ), -, axis, ., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {, factor, =]
[;, if, (, categories, >, 1, ), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return]
[., getUpperMargin, (, ), ;, if, (, categories, >, 1, ), {, factor, =, factor, -, axis, ., getCategoryMargin, (]
[), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /]
[>, 1, ), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor]
[), {, factor, =, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /]
[=, factor, -, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /, (, categories, *]
[;, }, return, (, space, *, factor, ), /, (, categories, *, series, ), ;, }, public, double, getItemMiddle, (]
[-, axis, ., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /, (, categories, *, series, )]
[;, }, return, (, space, *, factor, ), /, (, categories, *, series, ), ;, }, public, double, getItemMiddle, (]
[., getCategoryMargin, (, ), ;, }, return, (, space, *, factor, ), /, (, categories, *, series, ), ;, }]
[;, }, public, double, getItemMiddle, (, Comparable, rowKey, ,, Comparable, columnKey, ,, CategoryDataset, dataset, ,, CategoryAxis, axis, ,, Rectangle2D, area]
[/, (, categories, *, series, ), ;, }, public, double, getItemMiddle, (, Comparable, rowKey, ,, Comparable, columnKey, ,, CategoryDataset, dataset]
[), /, (, categories, *, series, ), ;, }, public, double, getItemMiddle, (, Comparable, rowKey, ,, Comparable, columnKey, ,, CategoryDataset]
[*, factor, ), /, (, categories, *, series, ), ;, }, public, double, getItemMiddle, (, Comparable, rowKey, ,, Comparable, columnKey]
[), /, (, categories, *, series, ), ;, }, public, double, getItemMiddle, (, Comparable, rowKey, ,, Comparable, columnKey, ,, CategoryDataset]
[;, }, public, double, getItemMiddle, (, Comparable, rowKey, ,, Comparable, columnKey, ,, CategoryDataset, dataset, ,, CategoryAxis, axis, ,, Rectangle2D, area]
[), ;, }, public, double, getItemMiddle, (, Comparable, rowKey, ,, Comparable, columnKey, ,, CategoryDataset, dataset, ,, CategoryAxis, axis, ,, Rectangle2D]
[*, series, ), ;, }, public, double, getItemMiddle, (, Comparable, rowKey, ,, Comparable, columnKey, ,, CategoryDataset, dataset, ,, CategoryAxis, axis]
[), ;, }, public, double, getItemMiddle, (, Comparable, rowKey, ,, Comparable, columnKey, ,, CategoryDataset, dataset, ,, CategoryAxis, axis, ,, Rectangle2D]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[., getCategorySeriesMiddle, (, columnKey, ,, rowKey, ,, dataset, ,, this, ., itemMargin, ,, area, ,, edge, ), ;, }, public]
[,, rowKey, ,, dataset, ,, this, ., itemMargin, ,, area, ,, edge, ), ;, }, public, boolean, equals, (, Object]
[,, dataset, ,, this, ., itemMargin, ,, area, ,, edge, ), ;, }, public, boolean, equals, (, Object, obj, )]
[,, this, ., itemMargin, ,, area, ,, edge, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if]
[,, area, ,, edge, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this]
[., itemMargin, ,, area, ,, edge, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj]
[,, edge, ), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[), ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, LevelRenderer, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, LevelRenderer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, LevelRenderer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, LevelRenderer, ), ), {, return, false, ;, }, LevelRenderer, that, =, (]
[), {, return, false, ;, }, LevelRenderer, that, =, (, LevelRenderer, ), obj, ;, if, (, this, ., itemMargin, !=]
[), {, return, false, ;, }, LevelRenderer, that, =, (, LevelRenderer, ), obj, ;, if, (, this, ., itemMargin, !=]
[), ), {, return, false, ;, }, LevelRenderer, that, =, (, LevelRenderer, ), obj, ;, if, (, this, ., itemMargin]
[instanceof, LevelRenderer, ), ), {, return, false, ;, }, LevelRenderer, that, =, (, LevelRenderer, ), obj, ;, if, (, this]
[;, }, LevelRenderer, that, =, (, LevelRenderer, ), obj, ;, if, (, this, ., itemMargin, !=, that, ., itemMargin, )]
[;, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (, this, .]
[;, if, (, this, ., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (, this, .]
[), {, return, false, ;, }, if, (, this, ., maxItemWidth, !=, that, ., maxItemWidth, ), {, return, false, ;]
[!=, that, ., itemMargin, ), {, return, false, ;, }, if, (, this, ., maxItemWidth, !=, that, ., maxItemWidth, )]
[., itemMargin, !=, that, ., itemMargin, ), {, return, false, ;, }, if, (, this, ., maxItemWidth, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., maxItemWidth, !=, that, ., maxItemWidth, ), {, return, false, ;]
[., itemMargin, ), {, return, false, ;, }, if, (, this, ., maxItemWidth, !=, that, ., maxItemWidth, ), {, return]
[;, }, if, (, this, ., maxItemWidth, !=, that, ., maxItemWidth, ), {, return, false, ;, }, return, super, .]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[!=, that, ., maxItemWidth, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public]
[., maxItemWidth, !=, that, ., maxItemWidth, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, )]
[., maxItemWidth, ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, hash, =]
[;, }, public, int, hashCode, (, ), {, int, hash, =, super, ., hashCode, (, ), ;, hash, =, HashUtilities]
[., equals, (, obj, ), ;, }, public, int, hashCode, (, ), {, int, hash, =, super, ., hashCode, (]
[), ;, }, public, int, hashCode, (, ), {, int, hash, =, super, ., hashCode, (, ), ;, hash, =]
[;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., itemMargin, ), ;, hash, =, HashUtilities, ., hashCode, (]
[., hashCode, (, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., itemMargin, ), ;, hash, =]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., itemMargin, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,]
[;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., maxItemWidth, ), ;, return, hash, ;, }, }]
[., hashCode, (, hash, ,, this, ., itemMargin, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, .]
[,, this, ., itemMargin, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., maxItemWidth, ), ;, return]
[), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., maxItemWidth, ), ;, return, hash, ;, }, }]
[., itemMargin, ), ;, hash, =, HashUtilities, ., hashCode, (, hash, ,, this, ., maxItemWidth, ), ;, return, hash, ;]
[=, HashUtilities, ., hashCode, (, hash, ,, this, ., maxItemWidth, ), ;, return, hash, ;, }, }]
[;, return, hash, ;, }, }]
[., hashCode, (, hash, ,, this, ., maxItemWidth, ), ;, return, hash, ;, }, }]
[,, this, ., maxItemWidth, ), ;, return, hash, ;, }, }]
[), ;, return, hash, ;, }, }]
[., maxItemWidth, ), ;, return, hash, ;, }, }]
[;, }, }]
