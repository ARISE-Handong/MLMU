[;, }, @, Override, public, boolean, isConnected, (, N, n1, ,, E, e, ,, N, n2, ), {, return, isConnectedInDirection]
[||, isConnectedInDirection, (, n2, ,, n1, ), ;, }, @, Override, public, boolean, isConnected, (, N, n1, ,, E, e]
[,, n2, ), ||, isConnectedInDirection, (, n2, ,, n1, ), ;, }, @, Override, public, boolean, isConnected, (, N, n1]
[), ||, isConnectedInDirection, (, n2, ,, n1, ), ;, }, @, Override, public, boolean, isConnected, (, N, n1, ,, E]
[;, }, @, Override, public, boolean, isConnected, (, N, n1, ,, E, e, ,, N, n2, ), {, return, isConnectedInDirection]
[,, n1, ), ;, }, @, Override, public, boolean, isConnected, (, N, n1, ,, E, e, ,, N, n2, )]
[), ;, }, @, Override, public, boolean, isConnected, (, N, n1, ,, E, e, ,, N, n2, ), {, return]
[;, }, public, static, interface, DiGraphNode, <, N, ,, E, >, extends, GraphNode, <, N, ,, E, >, {, public]
[||, isConnectedInDirection, (, n2, ,, e, ,, n1, ), ;, }, public, static, interface, DiGraphNode, <, N, ,, E, >]
[,, e, ,, n2, ), ||, isConnectedInDirection, (, n2, ,, e, ,, n1, ), ;, }, public, static, interface, DiGraphNode]
[,, n2, ), ||, isConnectedInDirection, (, n2, ,, e, ,, n1, ), ;, }, public, static, interface, DiGraphNode, <, N]
[), ||, isConnectedInDirection, (, n2, ,, e, ,, n1, ), ;, }, public, static, interface, DiGraphNode, <, N, ,, E]
[;, }, public, static, interface, DiGraphNode, <, N, ,, E, >, extends, GraphNode, <, N, ,, E, >, {, public]
[,, e, ,, n1, ), ;, }, public, static, interface, DiGraphNode, <, N, ,, E, >, extends, GraphNode, <, N]
[,, n1, ), ;, }, public, static, interface, DiGraphNode, <, N, ,, E, >, extends, GraphNode, <, N, ,, E]
[), ;, }, public, static, interface, DiGraphNode, <, N, ,, E, >, extends, GraphNode, <, N, ,, E, >, {]
