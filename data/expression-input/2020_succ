[;, private, final, Mean, [, ], means, ;, public, VectorialMean, (, int, dimension, ), {, means, =, new, Mean, []
[=, new, Mean, [, dimension, ], ;, for, (, int, i, =, 0, ;, i, <, dimension, ;, ++, i]
[;, for, (, int, i, =, 0, ;, i, <, dimension, ;, ++, i, ), {, means, [, i, ]]
[], ;, for, (, int, i, =, 0, ;, i, <, dimension, ;, ++, i, ), {, means, [, i]
[;, i, <, dimension, ;, ++, i, ), {, means, [, i, ], =, new, Mean, (, ), ;, }]
[;, ++, i, ), {, means, [, i, ], =, new, Mean, (, ), ;, }, }, public, void, increment]
[<, dimension, ;, ++, i, ), {, means, [, i, ], =, new, Mean, (, ), ;, }, }, public]
[;, ++, i, ), {, means, [, i, ], =, new, Mean, (, ), ;, }, }, public, void, increment]
[), {, means, [, i, ], =, new, Mean, (, ), ;, }, }, public, void, increment, (, double, []
[), {, means, [, i, ], =, new, Mean, (, ), ;, }, }, public, void, increment, (, double, []
[=, new, Mean, (, ), ;, }, }, public, void, increment, (, double, [, ], v, ), throws, DimensionMismatchException, {]
[[, i, ], =, new, Mean, (, ), ;, }, }, public, void, increment, (, double, [, ], v, )]
[], =, new, Mean, (, ), ;, }, }, public, void, increment, (, double, [, ], v, ), throws, DimensionMismatchException]
[;, }, }, public, void, increment, (, double, [, ], v, ), throws, DimensionMismatchException, {, if, (, v, ., length]
[), {, throw, new, DimensionMismatchException, (, v, ., length, ,, means, ., length, ), ;, }, for, (, int, i]
[!=, means, ., length, ), {, throw, new, DimensionMismatchException, (, v, ., length, ,, means, ., length, ), ;, }]
[., length, !=, means, ., length, ), {, throw, new, DimensionMismatchException, (, v, ., length, ,, means, ., length, )]
[), {, throw, new, DimensionMismatchException, (, v, ., length, ,, means, ., length, ), ;, }, for, (, int, i]
[., length, ), {, throw, new, DimensionMismatchException, (, v, ., length, ,, means, ., length, ), ;, }, for, (]
[;, }, for, (, int, i, =, 0, ;, i, <, v, ., length, ;, ++, i, ), {, means]
[,, means, ., length, ), ;, }, for, (, int, i, =, 0, ;, i, <, v, ., length, ;]
[., length, ,, means, ., length, ), ;, }, for, (, int, i, =, 0, ;, i, <, v, .]
[), ;, }, for, (, int, i, =, 0, ;, i, <, v, ., length, ;, ++, i, ), {]
[., length, ), ;, }, for, (, int, i, =, 0, ;, i, <, v, ., length, ;, ++, i]
[;, i, <, v, ., length, ;, ++, i, ), {, means, [, i, ], ., increment, (, v, []
[;, ++, i, ), {, means, [, i, ], ., increment, (, v, [, i, ], ), ;, }, }]
[<, v, ., length, ;, ++, i, ), {, means, [, i, ], ., increment, (, v, [, i, ]]
[;, ++, i, ), {, means, [, i, ], ., increment, (, v, [, i, ], ), ;, }, }]
[., length, ;, ++, i, ), {, means, [, i, ], ., increment, (, v, [, i, ], ), ;]
[), {, means, [, i, ], ., increment, (, v, [, i, ], ), ;, }, }, public, double, []
[), {, means, [, i, ], ., increment, (, v, [, i, ], ), ;, }, }, public, double, []
[;, }, }, public, double, [, ], getResult, (, ), {, double, [, ], result, =, new, double, [, means]
[., increment, (, v, [, i, ], ), ;, }, }, public, double, [, ], getResult, (, ), {, double]
[[, i, ], ., increment, (, v, [, i, ], ), ;, }, }, public, double, [, ], getResult, (]
[], ., increment, (, v, [, i, ], ), ;, }, }, public, double, [, ], getResult, (, ), {]
[), ;, }, }, public, double, [, ], getResult, (, ), {, double, [, ], result, =, new, double, []
[[, i, ], ), ;, }, }, public, double, [, ], getResult, (, ), {, double, [, ], result, =]
[], ), ;, }, }, public, double, [, ], getResult, (, ), {, double, [, ], result, =, new, double]
[;, for, (, int, i, =, 0, ;, i, <, result, ., length, ;, ++, i, ), {, result, []
[], ;, for, (, int, i, =, 0, ;, i, <, result, ., length, ;, ++, i, ), {, result]
[., length, ], ;, for, (, int, i, =, 0, ;, i, <, result, ., length, ;, ++, i, )]
[;, i, <, result, ., length, ;, ++, i, ), {, result, [, i, ], =, means, [, i, ]]
[;, ++, i, ), {, result, [, i, ], =, means, [, i, ], ., getResult, (, ), ;, }]
[<, result, ., length, ;, ++, i, ), {, result, [, i, ], =, means, [, i, ], ., getResult]
[;, ++, i, ), {, result, [, i, ], =, means, [, i, ], ., getResult, (, ), ;, }]
[., length, ;, ++, i, ), {, result, [, i, ], =, means, [, i, ], ., getResult, (, )]
[), {, result, [, i, ], =, means, [, i, ], ., getResult, (, ), ;, }, return, result, ;]
[), {, result, [, i, ], =, means, [, i, ], ., getResult, (, ), ;, }, return, result, ;]
[=, means, [, i, ], ., getResult, (, ), ;, }, return, result, ;, }, public, long, getN, (, )]
[[, i, ], =, means, [, i, ], ., getResult, (, ), ;, }, return, result, ;, }, public, long]
[], =, means, [, i, ], ., getResult, (, ), ;, }, return, result, ;, }, public, long, getN, (]
[;, }, return, result, ;, }, public, long, getN, (, ), {, return, (, means, ., length, ==, 0, )]
[., getResult, (, ), ;, }, return, result, ;, }, public, long, getN, (, ), {, return, (, means, .]
[[, i, ], ., getResult, (, ), ;, }, return, result, ;, }, public, long, getN, (, ), {, return]
[], ., getResult, (, ), ;, }, return, result, ;, }, public, long, getN, (, ), {, return, (, means]
[;, }, public, long, getN, (, ), {, return, (, means, ., length, ==, 0, ), ?, 0, :, means]
[;, }, @, Override, public, int, hashCode, (, ), {, final, int, prime, =, 31, ;, int, result, =, 1]
[?, 0, :, means, [, 0, ], ., getN, (, ), ;, }, @, Override, public, int, hashCode, (, )]
[), ?, 0, :, means, [, 0, ], ., getN, (, ), ;, }, @, Override, public, int, hashCode, (]
[==, 0, ), ?, 0, :, means, [, 0, ], ., getN, (, ), ;, }, @, Override, public, int]
[., length, ==, 0, ), ?, 0, :, means, [, 0, ], ., getN, (, ), ;, }, @, Override]
[), ?, 0, :, means, [, 0, ], ., getN, (, ), ;, }, @, Override, public, int, hashCode, (]
[:, means, [, 0, ], ., getN, (, ), ;, }, @, Override, public, int, hashCode, (, ), {, final]
[;, }, @, Override, public, int, hashCode, (, ), {, final, int, prime, =, 31, ;, int, result, =, 1]
[., getN, (, ), ;, }, @, Override, public, int, hashCode, (, ), {, final, int, prime, =, 31, ;]
[[, 0, ], ., getN, (, ), ;, }, @, Override, public, int, hashCode, (, ), {, final, int, prime]
[], ., getN, (, ), ;, }, @, Override, public, int, hashCode, (, ), {, final, int, prime, =, 31]
[;, int, result, =, 1, ;, result, =, prime, *, result, +, Arrays, ., hashCode, (, means, ), ;, return]
[;, result, =, prime, *, result, +, Arrays, ., hashCode, (, means, ), ;, return, result, ;, }, @, Override]
[=, prime, *, result, +, Arrays, ., hashCode, (, means, ), ;, return, result, ;, }, @, Override, public, boolean]
[;, return, result, ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj]
[+, Arrays, ., hashCode, (, means, ), ;, return, result, ;, }, @, Override, public, boolean, equals, (, Object, obj]
[*, result, +, Arrays, ., hashCode, (, means, ), ;, return, result, ;, }, @, Override, public, boolean, equals, (]
[+, Arrays, ., hashCode, (, means, ), ;, return, result, ;, }, @, Override, public, boolean, equals, (, Object, obj]
[;, return, result, ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj]
[., hashCode, (, means, ), ;, return, result, ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {]
[), ;, return, result, ;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==]
[;, }, @, Override, public, boolean, equals, (, Object, obj, ), {, if, (, this, ==, obj, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, VectorialMean, ), ), {, return, false, ;, }]
[==, obj, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, VectorialMean, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, VectorialMean, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, VectorialMean, ), ), {, return, false, ;, }, VectorialMean, other, =, (]
[), {, return, false, ;, }, VectorialMean, other, =, (, VectorialMean, ), obj, ;, if, (, !, Arrays, ., equals]
[), {, return, false, ;, }, VectorialMean, other, =, (, VectorialMean, ), obj, ;, if, (, !, Arrays, ., equals]
[), ), {, return, false, ;, }, VectorialMean, other, =, (, VectorialMean, ), obj, ;, if, (, !, Arrays, .]
[instanceof, VectorialMean, ), ), {, return, false, ;, }, VectorialMean, other, =, (, VectorialMean, ), obj, ;, if, (, !]
[;, }, VectorialMean, other, =, (, VectorialMean, ), obj, ;, if, (, !, Arrays, ., equals, (, means, ,, other]
[;, if, (, !, Arrays, ., equals, (, means, ,, other, ., means, ), ), {, return, false, ;, }]
[;, if, (, !, Arrays, ., equals, (, means, ,, other, ., means, ), ), {, return, false, ;, }]
[), {, return, false, ;, }, return, true, ;, }, }]
[), {, return, false, ;, }, return, true, ;, }, }]
[., equals, (, means, ,, other, ., means, ), ), {, return, false, ;, }, return, true, ;, }, }]
[,, other, ., means, ), ), {, return, false, ;, }, return, true, ;, }, }]
[), ), {, return, false, ;, }, return, true, ;, }, }]
[., means, ), ), {, return, false, ;, }, return, true, ;, }, }]
[;, }, return, true, ;, }, }]
[;, }, }]
