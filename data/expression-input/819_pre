[;, import, java, ., util, ., TreeSet, ;, public, class, ComposeWarningsGuard, extends, WarningsGuard, {, private, static, final, long, serialVersionUID, =]
[WarningsGuard, {, private, static, final, long, serialVersionUID, =, 1L, ;, private, final, Map, <, WarningsGuard, ,, Integer, >, orderOfAddition, =]
[WarningsGuard, {, private, static, final, long, serialVersionUID, =, 1L, ;, private, final, Map, <, WarningsGuard, ,, Integer, >, orderOfAddition, =]
[private, final, Map, <, WarningsGuard, ,, Integer, >, orderOfAddition, =, Maps, ., newHashMap, (, ), ;, private, int, numberOfAdds, =]
[Maps, ., newHashMap, (, ), ;, private, int, numberOfAdds, =, 0, ;, private, final, Comparator, <, WarningsGuard, >, guardComparator, =]
[(, ), ;, private, int, numberOfAdds, =, 0, ;, private, final, Comparator, <, WarningsGuard, >, guardComparator, =, new, GuardComparator, (]
[0, ;, private, final, Comparator, <, WarningsGuard, >, guardComparator, =, new, GuardComparator, (, orderOfAddition, ), ;, private, boolean, demoteErrors, =]
[false, ;, private, static, class, GuardComparator, implements, Comparator, <, WarningsGuard, >, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[Map, <, WarningsGuard, ,, Integer, >, orderOfAddition, ;, private, GuardComparator, (, Map, <, WarningsGuard, ,, Integer, >, orderOfAddition, ), {]
[Map, <, WarningsGuard, ,, Integer, >, orderOfAddition, ;, private, GuardComparator, (, Map, <, WarningsGuard, ,, Integer, >, orderOfAddition, ), {]
[Integer, >, orderOfAddition, ;, private, GuardComparator, (, Map, <, WarningsGuard, ,, Integer, >, orderOfAddition, ), {, this, ., orderOfAddition, =]
[=, orderOfAddition, ;, }, @, Override, public, int, compare, (, WarningsGuard, a, ,, WarningsGuard, b, ), {, int, priorityDiff, =]
[=, orderOfAddition, ;, }, @, Override, public, int, compare, (, WarningsGuard, a, ,, WarningsGuard, b, ), {, int, priorityDiff, =]
[=, orderOfAddition, ;, }, @, Override, public, int, compare, (, WarningsGuard, a, ,, WarningsGuard, b, ), {, int, priorityDiff, =]
[public, int, compare, (, WarningsGuard, a, ,, WarningsGuard, b, ), {, int, priorityDiff, =, a, ., getPriority, (, ), -]
[public, int, compare, (, WarningsGuard, a, ,, WarningsGuard, b, ), {, int, priorityDiff, =, a, ., getPriority, (, ), -]
[b, ), {, int, priorityDiff, =, a, ., getPriority, (, ), -, b, ., getPriority, (, ), ;, if, (]
[b, ), {, int, priorityDiff, =, a, ., getPriority, (, ), -, b, ., getPriority, (, ), ;, if, (]
[{, int, priorityDiff, =, a, ., getPriority, (, ), -, b, ., getPriority, (, ), ;, if, (, priorityDiff, !=]
[a, ., getPriority, (, ), -, b, ., getPriority, (, ), ;, if, (, priorityDiff, !=, 0, ), {, return]
[), -, b, ., getPriority, (, ), ;, if, (, priorityDiff, !=, 0, ), {, return, priorityDiff, ;, }, return]
[), -, b, ., getPriority, (, ), ;, if, (, priorityDiff, !=, 0, ), {, return, priorityDiff, ;, }, return]
[), -, b, ., getPriority, (, ), ;, if, (, priorityDiff, !=, 0, ), {, return, priorityDiff, ;, }, return]
[), -, b, ., getPriority, (, ), ;, if, (, priorityDiff, !=, 0, ), {, return, priorityDiff, ;, }, return]
[getPriority, (, ), ;, if, (, priorityDiff, !=, 0, ), {, return, priorityDiff, ;, }, return, orderOfAddition, ., get, (]
[!=, 0, ), {, return, priorityDiff, ;, }, return, orderOfAddition, ., get, (, b, ), ., intValue, (, ), -]
[!=, 0, ), {, return, priorityDiff, ;, }, return, orderOfAddition, ., get, (, b, ), ., intValue, (, ), -]
[!=, 0, ), {, return, priorityDiff, ;, }, return, orderOfAddition, ., get, (, b, ), ., intValue, (, ), -]
[return, priorityDiff, ;, }, return, orderOfAddition, ., get, (, b, ), ., intValue, (, ), -, orderOfAddition, ., get, (]
[., get, (, a, ), ., intValue, (, ), ;, }, }, private, final, TreeSet, <, WarningsGuard, >, guards, =]
[intValue, (, ), ;, }, }, private, final, TreeSet, <, WarningsGuard, >, guards, =, new, TreeSet, <, WarningsGuard, >, (]
[=, new, TreeSet, <, WarningsGuard, >, (, guardComparator, ), ;, public, ComposeWarningsGuard, (, List, <, WarningsGuard, >, guards, ), {]
[TreeSet, <, WarningsGuard, >, (, guardComparator, ), ;, public, ComposeWarningsGuard, (, List, <, WarningsGuard, >, guards, ), {, addGuards, (]
[>, guards, ), {, addGuards, (, guards, ), ;, }, public, ComposeWarningsGuard, (, WarningsGuard, ..., guards, ), {, this, (]
[>, guards, ), {, addGuards, (, guards, ), ;, }, public, ComposeWarningsGuard, (, WarningsGuard, ..., guards, ), {, this, (]
[addGuards, (, guards, ), ;, }, public, ComposeWarningsGuard, (, WarningsGuard, ..., guards, ), {, this, (, Lists, ., newArrayList, (]
[this, (, Lists, ., newArrayList, (, guards, ), ), ;, }, void, addGuard, (, WarningsGuard, guard, ), {, if, (]
[this, (, Lists, ., newArrayList, (, guards, ), ), ;, }, void, addGuard, (, WarningsGuard, guard, ), {, if, (]
[), ;, }, void, addGuard, (, WarningsGuard, guard, ), {, if, (, guard, instanceof, ComposeWarningsGuard, ), {, ComposeWarningsGuard, composeGuard, =]
[void, addGuard, (, WarningsGuard, guard, ), {, if, (, guard, instanceof, ComposeWarningsGuard, ), {, ComposeWarningsGuard, composeGuard, =, (, ComposeWarningsGuard, )]
[guard, ), {, if, (, guard, instanceof, ComposeWarningsGuard, ), {, ComposeWarningsGuard, composeGuard, =, (, ComposeWarningsGuard, ), guard, ;, if, (]
[guard, ), {, if, (, guard, instanceof, ComposeWarningsGuard, ), {, ComposeWarningsGuard, composeGuard, =, (, ComposeWarningsGuard, ), guard, ;, if, (]
[guard, instanceof, ComposeWarningsGuard, ), {, ComposeWarningsGuard, composeGuard, =, (, ComposeWarningsGuard, ), guard, ;, if, (, composeGuard, ., demoteErrors, ), {]
[guard, instanceof, ComposeWarningsGuard, ), {, ComposeWarningsGuard, composeGuard, =, (, ComposeWarningsGuard, ), guard, ;, if, (, composeGuard, ., demoteErrors, ), {]
[{, ComposeWarningsGuard, composeGuard, =, (, ComposeWarningsGuard, ), guard, ;, if, (, composeGuard, ., demoteErrors, ), {, this, ., demoteErrors, =]
[{, ComposeWarningsGuard, composeGuard, =, (, ComposeWarningsGuard, ), guard, ;, if, (, composeGuard, ., demoteErrors, ), {, this, ., demoteErrors, =]
[ComposeWarningsGuard, ), guard, ;, if, (, composeGuard, ., demoteErrors, ), {, this, ., demoteErrors, =, composeGuard, ., demoteErrors, ;, }]
[guard, ;, if, (, composeGuard, ., demoteErrors, ), {, this, ., demoteErrors, =, composeGuard, ., demoteErrors, ;, }, addGuards, (]
[guard, ;, if, (, composeGuard, ., demoteErrors, ), {, this, ., demoteErrors, =, composeGuard, ., demoteErrors, ;, }, addGuards, (]
[composeGuard, ., demoteErrors, ), {, this, ., demoteErrors, =, composeGuard, ., demoteErrors, ;, }, addGuards, (, Lists, ., newArrayList, (]
[composeGuard, ., demoteErrors, ), {, this, ., demoteErrors, =, composeGuard, ., demoteErrors, ;, }, addGuards, (, Lists, ., newArrayList, (]
[composeGuard, ., demoteErrors, ), {, this, ., demoteErrors, =, composeGuard, ., demoteErrors, ;, }, addGuards, (, Lists, ., newArrayList, (]
[}, addGuards, (, Lists, ., newArrayList, (, composeGuard, ., guards, ., descendingSet, (, ), ), ), ;, }, else, {]
[}, addGuards, (, Lists, ., newArrayList, (, composeGuard, ., guards, ., descendingSet, (, ), ), ), ;, }, else, {]
[Lists, ., newArrayList, (, composeGuard, ., guards, ., descendingSet, (, ), ), ), ;, }, else, {, numberOfAdds, ++, ;]
[Lists, ., newArrayList, (, composeGuard, ., guards, ., descendingSet, (, ), ), ), ;, }, else, {, numberOfAdds, ++, ;]
[composeGuard, ., guards, ., descendingSet, (, ), ), ), ;, }, else, {, numberOfAdds, ++, ;, orderOfAddition, ., put, (]
[guards, ., descendingSet, (, ), ), ), ;, }, else, {, numberOfAdds, ++, ;, orderOfAddition, ., put, (, guard, ,]
[(, ), ), ), ;, }, else, {, numberOfAdds, ++, ;, orderOfAddition, ., put, (, guard, ,, numberOfAdds, ), ;]
[(, ), ), ), ;, }, else, {, numberOfAdds, ++, ;, orderOfAddition, ., put, (, guard, ,, numberOfAdds, ), ;]
[;, }, else, {, numberOfAdds, ++, ;, orderOfAddition, ., put, (, guard, ,, numberOfAdds, ), ;, guards, ., remove, (]
[{, numberOfAdds, ++, ;, orderOfAddition, ., put, (, guard, ,, numberOfAdds, ), ;, guards, ., remove, (, guard, ), ;]
[{, numberOfAdds, ++, ;, orderOfAddition, ., put, (, guard, ,, numberOfAdds, ), ;, guards, ., remove, (, guard, ), ;]
[orderOfAddition, ., put, (, guard, ,, numberOfAdds, ), ;, guards, ., remove, (, guard, ), ;, guards, ., add, (]
[), ;, }, }, private, void, addGuards, (, Iterable, <, WarningsGuard, >, guards, ), {, for, (, WarningsGuard, guard, :]
[}, private, void, addGuards, (, Iterable, <, WarningsGuard, >, guards, ), {, for, (, WarningsGuard, guard, :, guards, ), {]
[void, addGuards, (, Iterable, <, WarningsGuard, >, guards, ), {, for, (, WarningsGuard, guard, :, guards, ), {, addGuard, (]
[guard, ), ;, }, }, @, Override, public, CheckLevel, level, (, JSError, error, ), {, for, (, WarningsGuard, guard, :]
[Override, public, CheckLevel, level, (, JSError, error, ), {, for, (, WarningsGuard, guard, :, guards, ), {, CheckLevel, newLevel, =]
[Override, public, CheckLevel, level, (, JSError, error, ), {, for, (, WarningsGuard, guard, :, guards, ), {, CheckLevel, newLevel, =]
[(, JSError, error, ), {, for, (, WarningsGuard, guard, :, guards, ), {, CheckLevel, newLevel, =, guard, ., level, (]
[for, (, WarningsGuard, guard, :, guards, ), {, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (]
[for, (, WarningsGuard, guard, :, guards, ), {, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (]
[WarningsGuard, guard, :, guards, ), {, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (, newLevel, !=]
[{, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (, newLevel, !=, null, ), {, if, (]
[{, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (, newLevel, !=, null, ), {, if, (]
[newLevel, =, guard, ., level, (, error, ), ;, if, (, newLevel, !=, null, ), {, if, (, demoteErrors, &&]
[newLevel, =, guard, ., level, (, error, ), ;, if, (, newLevel, !=, null, ), {, if, (, demoteErrors, &&]
[guard, ., level, (, error, ), ;, if, (, newLevel, !=, null, ), {, if, (, demoteErrors, &&, newLevel, ==]
[guard, ., level, (, error, ), ;, if, (, newLevel, !=, null, ), {, if, (, demoteErrors, &&, newLevel, ==]
[;, if, (, newLevel, !=, null, ), {, if, (, demoteErrors, &&, newLevel, ==, CheckLevel, ., ERROR, ), {, return]
[;, if, (, newLevel, !=, null, ), {, if, (, demoteErrors, &&, newLevel, ==, CheckLevel, ., ERROR, ), {, return]
[), {, if, (, demoteErrors, &&, newLevel, ==, CheckLevel, ., ERROR, ), {, return, CheckLevel, ., WARNING, ;, }, return]
[&&, newLevel, ==, CheckLevel, ., ERROR, ), {, return, CheckLevel, ., WARNING, ;, }, return, newLevel, ;, }, }, return]
[null, ;, }, @, Override, public, boolean, disables, (, DiagnosticGroup, group, ), {, nextSingleton, :, for, (, DiagnosticType, type, :]
[null, ;, }, @, Override, public, boolean, disables, (, DiagnosticGroup, group, ), {, nextSingleton, :, for, (, DiagnosticType, type, :]
[group, ), {, nextSingleton, :, for, (, DiagnosticType, type, :, group, ., getTypes, (, ), ), {, DiagnosticGroup, singleton, =]
[group, ), {, nextSingleton, :, for, (, DiagnosticType, type, :, group, ., getTypes, (, ), ), {, DiagnosticGroup, singleton, =]
[:, for, (, DiagnosticType, type, :, group, ., getTypes, (, ), ), {, DiagnosticGroup, singleton, =, DiagnosticGroup, ., forType, (]
[getTypes, (, ), ), {, DiagnosticGroup, singleton, =, DiagnosticGroup, ., forType, (, type, ), ;, for, (, WarningsGuard, guard, :]
[DiagnosticGroup, singleton, =, DiagnosticGroup, ., forType, (, type, ), ;, for, (, WarningsGuard, guard, :, guards, ), {, if, (]
[DiagnosticGroup, singleton, =, DiagnosticGroup, ., forType, (, type, ), ;, for, (, WarningsGuard, guard, :, guards, ), {, if, (]
[., forType, (, type, ), ;, for, (, WarningsGuard, guard, :, guards, ), {, if, (, guard, ., disables, (]
[guards, ), {, if, (, guard, ., disables, (, singleton, ), ), {, continue, nextSingleton, ;, }, else, if, (]
[guards, ), {, if, (, guard, ., disables, (, singleton, ), ), {, continue, nextSingleton, ;, }, else, if, (]
[(, guard, ., disables, (, singleton, ), ), {, continue, nextSingleton, ;, }, else, if, (, guard, ., enables, (]
[singleton, ), ), {, continue, nextSingleton, ;, }, else, if, (, guard, ., enables, (, singleton, ), ), {, return]
[nextSingleton, ;, }, else, if, (, guard, ., enables, (, singleton, ), ), {, return, false, ;, }, }, return]
[if, (, guard, ., enables, (, singleton, ), ), {, return, false, ;, }, }, return, false, ;, }, return]
[}, return, true, ;, }, @, Override, public, boolean, enables, (, DiagnosticGroup, group, ), {, for, (, WarningsGuard, guard, :]
[@, Override, public, boolean, enables, (, DiagnosticGroup, group, ), {, for, (, WarningsGuard, guard, :, guards, ), {, if, (]
[@, Override, public, boolean, enables, (, DiagnosticGroup, group, ), {, for, (, WarningsGuard, guard, :, guards, ), {, if, (]
[enables, (, DiagnosticGroup, group, ), {, for, (, WarningsGuard, guard, :, guards, ), {, if, (, guard, ., enables, (]
[{, for, (, WarningsGuard, guard, :, guards, ), {, if, (, guard, ., enables, (, group, ), ), {, return]
[guards, ), {, if, (, guard, ., enables, (, group, ), ), {, return, true, ;, }, else, if, (]
[guards, ), {, if, (, guard, ., enables, (, group, ), ), {, return, true, ;, }, else, if, (]
[(, guard, ., enables, (, group, ), ), {, return, true, ;, }, else, if, (, guard, ., disables, (]
[group, ), ), {, return, true, ;, }, else, if, (, guard, ., disables, (, group, ), ), {, return]
[true, ;, }, else, if, (, guard, ., disables, (, group, ), ), {, return, false, ;, }, }, return]
[), {, return, false, ;, }, }, return, false, ;, }, List, <, WarningsGuard, >, getGuards, (, ), {, return]
[), {, return, false, ;, }, }, return, false, ;, }, List, <, WarningsGuard, >, getGuards, (, ), {, return]
[;, }, }, return, false, ;, }, List, <, WarningsGuard, >, getGuards, (, ), {, return, Collections, ., unmodifiableList, (]
[;, }, }, return, false, ;, }, List, <, WarningsGuard, >, getGuards, (, ), {, return, Collections, ., unmodifiableList, (]
[false, ;, }, List, <, WarningsGuard, >, getGuards, (, ), {, return, Collections, ., unmodifiableList, (, Lists, ., newArrayList, (]
[., unmodifiableList, (, Lists, ., newArrayList, (, guards, ), ), ;, }, ComposeWarningsGuard, makeEmergencyFailSafeGuard, (, ), {, ComposeWarningsGuard, safeGuard, =]
[newArrayList, (, guards, ), ), ;, }, ComposeWarningsGuard, makeEmergencyFailSafeGuard, (, ), {, ComposeWarningsGuard, safeGuard, =, new, ComposeWarningsGuard, (, ), ;]
[newArrayList, (, guards, ), ), ;, }, ComposeWarningsGuard, makeEmergencyFailSafeGuard, (, ), {, ComposeWarningsGuard, safeGuard, =, new, ComposeWarningsGuard, (, ), ;]
[), ;, }, ComposeWarningsGuard, makeEmergencyFailSafeGuard, (, ), {, ComposeWarningsGuard, safeGuard, =, new, ComposeWarningsGuard, (, ), ;, safeGuard, ., demoteErrors, =]
[{, ComposeWarningsGuard, safeGuard, =, new, ComposeWarningsGuard, (, ), ;, safeGuard, ., demoteErrors, =, true, ;, for, (, WarningsGuard, guard, :]
[{, ComposeWarningsGuard, safeGuard, =, new, ComposeWarningsGuard, (, ), ;, safeGuard, ., demoteErrors, =, true, ;, for, (, WarningsGuard, guard, :]
[), ;, safeGuard, ., demoteErrors, =, true, ;, for, (, WarningsGuard, guard, :, guards, ., descendingSet, (, ), ), {]
[), ;, safeGuard, ., demoteErrors, =, true, ;, for, (, WarningsGuard, guard, :, guards, ., descendingSet, (, ), ), {]
[demoteErrors, =, true, ;, for, (, WarningsGuard, guard, :, guards, ., descendingSet, (, ), ), {, safeGuard, ., addGuard, (]
[(, WarningsGuard, guard, :, guards, ., descendingSet, (, ), ), {, safeGuard, ., addGuard, (, guard, ), ;, }, return]
[., addGuard, (, guard, ), ;, }, return, safeGuard, ;, }, @, Override, public, String, toString, (, ), {, return]
[., addGuard, (, guard, ), ;, }, return, safeGuard, ;, }, @, Override, public, String, toString, (, ), {, return]
[., addGuard, (, guard, ), ;, }, return, safeGuard, ;, }, @, Override, public, String, toString, (, ), {, return]
[), ;, }, return, safeGuard, ;, }, @, Override, public, String, toString, (, ), {, return, Joiner, ., on, (]
[;, }, @, Override, public, String, toString, (, ), {, return, Joiner, ., on, (, ", ", ), ., join, (]
