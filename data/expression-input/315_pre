[XYDataset, ;, public, class, MultipleXYSeriesLabelGenerator, implements, XYSeriesLabelGenerator, ,, Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =]
[Cloneable, ,, PublicCloneable, ,, Serializable, {, private, static, final, long, serialVersionUID, =, 138976236941898560L, ;, public, static, final, String, DEFAULT_LABEL_FORMAT, =]
[;, private, String, formatPattern, ;, private, String, additionalFormatPattern, ;, private, Map, seriesLabelLists, ;, public, MultipleXYSeriesLabelGenerator, (, ), {, this, (]
[public, MultipleXYSeriesLabelGenerator, (, ), {, this, (, DEFAULT_LABEL_FORMAT, ), ;, }, public, MultipleXYSeriesLabelGenerator, (, String, format, ), {, if, (]
[public, MultipleXYSeriesLabelGenerator, (, ), {, this, (, DEFAULT_LABEL_FORMAT, ), ;, }, public, MultipleXYSeriesLabelGenerator, (, String, format, ), {, if, (]
[(, ), {, this, (, DEFAULT_LABEL_FORMAT, ), ;, }, public, MultipleXYSeriesLabelGenerator, (, String, format, ), {, if, (, format, ==]
[(, DEFAULT_LABEL_FORMAT, ), ;, }, public, MultipleXYSeriesLabelGenerator, (, String, format, ), {, if, (, format, ==, null, ), {, throw]
[;, }, public, MultipleXYSeriesLabelGenerator, (, String, format, ), {, if, (, format, ==, null, ), {, throw, new, IllegalArgumentException, (]
[(, String, format, ), {, if, (, format, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'format' argument.", ), ;, }]
[(, String, format, ), {, if, (, format, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'format' argument.", ), ;, }]
[{, if, (, format, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'format' argument.", ), ;, }, this, ., formatPattern, =]
[(, format, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'format' argument.", ), ;, }, this, ., formatPattern, =, format, ;]
[(, format, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'format' argument.", ), ;, }, this, ., formatPattern, =, format, ;]
[), {, throw, new, IllegalArgumentException, (, "Null 'format' argument.", ), ;, }, this, ., formatPattern, =, format, ;, this, ., additionalFormatPattern, =]
[throw, new, IllegalArgumentException, (, "Null 'format' argument.", ), ;, }, this, ., formatPattern, =, format, ;, this, ., additionalFormatPattern, =, "\n{0}", ;]
[throw, new, IllegalArgumentException, (, "Null 'format' argument.", ), ;, }, this, ., formatPattern, =, format, ;, this, ., additionalFormatPattern, =, "\n{0}", ;]
["Null 'format' argument.", ), ;, }, this, ., formatPattern, =, format, ;, this, ., additionalFormatPattern, =, "\n{0}", ;, this, ., seriesLabelLists, =]
[new, HashMap, (, ), ;, }, public, void, addSeriesLabel, (, int, series, ,, String, label, ), {, Integer, key, =]
[), ;, }, public, void, addSeriesLabel, (, int, series, ,, String, label, ), {, Integer, key, =, new, Integer, (]
[(, int, series, ,, String, label, ), {, Integer, key, =, new, Integer, (, series, ), ;, List, labelList, =]
[,, String, label, ), {, Integer, key, =, new, Integer, (, series, ), ;, List, labelList, =, (, List, )]
[,, String, label, ), {, Integer, key, =, new, Integer, (, series, ), ;, List, labelList, =, (, List, )]
[,, String, label, ), {, Integer, key, =, new, Integer, (, series, ), ;, List, labelList, =, (, List, )]
[key, =, new, Integer, (, series, ), ;, List, labelList, =, (, List, ), this, ., seriesLabelLists, ., get, (]
[series, ), ;, List, labelList, =, (, List, ), this, ., seriesLabelLists, ., get, (, key, ), ;, if, (]
[series, ), ;, List, labelList, =, (, List, ), this, ., seriesLabelLists, ., get, (, key, ), ;, if, (]
[;, List, labelList, =, (, List, ), this, ., seriesLabelLists, ., get, (, key, ), ;, if, (, labelList, ==]
[=, (, List, ), this, ., seriesLabelLists, ., get, (, key, ), ;, if, (, labelList, ==, null, ), {]
[List, ), this, ., seriesLabelLists, ., get, (, key, ), ;, if, (, labelList, ==, null, ), {, labelList, =]
[), ;, if, (, labelList, ==, null, ), {, labelList, =, new, java, ., util, ., ArrayList, (, ), ;]
[), ;, if, (, labelList, ==, null, ), {, labelList, =, new, java, ., util, ., ArrayList, (, ), ;]
[), ;, if, (, labelList, ==, null, ), {, labelList, =, new, java, ., util, ., ArrayList, (, ), ;]
[null, ), {, labelList, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., seriesLabelLists, ., put, (]
[{, labelList, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., seriesLabelLists, ., put, (, key, ,]
[java, ., util, ., ArrayList, (, ), ;, this, ., seriesLabelLists, ., put, (, key, ,, labelList, ), ;, }]
[java, ., util, ., ArrayList, (, ), ;, this, ., seriesLabelLists, ., put, (, key, ,, labelList, ), ;, }]
[ArrayList, (, ), ;, this, ., seriesLabelLists, ., put, (, key, ,, labelList, ), ;, }, labelList, ., add, (]
[}, labelList, ., add, (, label, ), ;, }, public, void, clearSeriesLabels, (, int, series, ), {, Integer, key, =]
[add, (, label, ), ;, }, public, void, clearSeriesLabels, (, int, series, ), {, Integer, key, =, new, Integer, (]
[), ;, }, public, void, clearSeriesLabels, (, int, series, ), {, Integer, key, =, new, Integer, (, series, ), ;]
[), ;, }, public, void, clearSeriesLabels, (, int, series, ), {, Integer, key, =, new, Integer, (, series, ), ;]
[), ;, }, public, void, clearSeriesLabels, (, int, series, ), {, Integer, key, =, new, Integer, (, series, ), ;]
[(, int, series, ), {, Integer, key, =, new, Integer, (, series, ), ;, this, ., seriesLabelLists, ., put, (]
[series, ), {, Integer, key, =, new, Integer, (, series, ), ;, this, ., seriesLabelLists, ., put, (, key, ,]
[(, key, ,, null, ), ;, }, public, String, generateLabel, (, XYDataset, dataset, ,, int, series, ), {, if, (]
[(, key, ,, null, ), ;, }, public, String, generateLabel, (, XYDataset, dataset, ,, int, series, ), {, if, (]
[,, null, ), ;, }, public, String, generateLabel, (, XYDataset, dataset, ,, int, series, ), {, if, (, dataset, ==]
[}, public, String, generateLabel, (, XYDataset, dataset, ,, int, series, ), {, if, (, dataset, ==, null, ), {, throw]
[generateLabel, (, XYDataset, dataset, ,, int, series, ), {, if, (, dataset, ==, null, ), {, throw, new, IllegalArgumentException, (]
[), {, if, (, dataset, ==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, StringBuffer, label, =]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, StringBuffer, label, =, new, StringBuffer, (, ), ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, StringBuffer, label, =, new, StringBuffer, (, ), ;]
[throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, StringBuffer, label, =, new, StringBuffer, (, ), ;, label, ., append, (]
[throw, new, IllegalArgumentException, (, "Null 'dataset' argument.", ), ;, }, StringBuffer, label, =, new, StringBuffer, (, ), ;, label, ., append, (]
["Null 'dataset' argument.", ), ;, }, StringBuffer, label, =, new, StringBuffer, (, ), ;, label, ., append, (, MessageFormat, ., format, (]
["Null 'dataset' argument.", ), ;, }, StringBuffer, label, =, new, StringBuffer, (, ), ;, label, ., append, (, MessageFormat, ., format, (]
[StringBuffer, label, =, new, StringBuffer, (, ), ;, label, ., append, (, MessageFormat, ., format, (, this, ., formatPattern, ,]
[=, new, StringBuffer, (, ), ;, label, ., append, (, MessageFormat, ., format, (, this, ., formatPattern, ,, createItemArray, (]
[StringBuffer, (, ), ;, label, ., append, (, MessageFormat, ., format, (, this, ., formatPattern, ,, createItemArray, (, dataset, ,]
[MessageFormat, ., format, (, this, ., formatPattern, ,, createItemArray, (, dataset, ,, series, ), ), ), ;, Integer, key, =]
[(, this, ., formatPattern, ,, createItemArray, (, dataset, ,, series, ), ), ), ;, Integer, key, =, new, Integer, (]
[(, dataset, ,, series, ), ), ), ;, Integer, key, =, new, Integer, (, series, ), ;, List, extraLabels, =]
[series, ), ), ), ;, Integer, key, =, new, Integer, (, series, ), ;, List, extraLabels, =, (, List, )]
[series, ), ), ), ;, Integer, key, =, new, Integer, (, series, ), ;, List, extraLabels, =, (, List, )]
[series, ), ), ), ;, Integer, key, =, new, Integer, (, series, ), ;, List, extraLabels, =, (, List, )]
[key, =, new, Integer, (, series, ), ;, List, extraLabels, =, (, List, ), this, ., seriesLabelLists, ., get, (]
[series, ), ;, List, extraLabels, =, (, List, ), this, ., seriesLabelLists, ., get, (, key, ), ;, if, (]
[series, ), ;, List, extraLabels, =, (, List, ), this, ., seriesLabelLists, ., get, (, key, ), ;, if, (]
[;, List, extraLabels, =, (, List, ), this, ., seriesLabelLists, ., get, (, key, ), ;, if, (, extraLabels, !=]
[., seriesLabelLists, ., get, (, key, ), ;, if, (, extraLabels, !=, null, ), {, Object, [, ], temp, =]
[get, (, key, ), ;, if, (, extraLabels, !=, null, ), {, Object, [, ], temp, =, new, Object, []
[!=, null, ), {, Object, [, ], temp, =, new, Object, [, 1, ], ;, for, (, int, i, =]
[), {, Object, [, ], temp, =, new, Object, [, 1, ], ;, for, (, int, i, =, 0, ;]
[), {, Object, [, ], temp, =, new, Object, [, 1, ], ;, for, (, int, i, =, 0, ;]
[Object, [, ], temp, =, new, Object, [, 1, ], ;, for, (, int, i, =, 0, ;, i, <]
[Object, [, ], temp, =, new, Object, [, 1, ], ;, for, (, int, i, =, 0, ;, i, <]
[Object, [, 1, ], ;, for, (, int, i, =, 0, ;, i, <, extraLabels, ., size, (, ), ;]
[Object, [, 1, ], ;, for, (, int, i, =, 0, ;, i, <, extraLabels, ., size, (, ), ;]
[;, for, (, int, i, =, 0, ;, i, <, extraLabels, ., size, (, ), ;, i, ++, ), {]
[;, for, (, int, i, =, 0, ;, i, <, extraLabels, ., size, (, ), ;, i, ++, ), {]
[(, int, i, =, 0, ;, i, <, extraLabels, ., size, (, ), ;, i, ++, ), {, temp, []
[=, 0, ;, i, <, extraLabels, ., size, (, ), ;, i, ++, ), {, temp, [, 0, ], =]
[=, 0, ;, i, <, extraLabels, ., size, (, ), ;, i, ++, ), {, temp, [, 0, ], =]
[<, extraLabels, ., size, (, ), ;, i, ++, ), {, temp, [, 0, ], =, extraLabels, ., get, (]
[;, i, ++, ), {, temp, [, 0, ], =, extraLabels, ., get, (, i, ), ;, String, labelAddition, =]
[;, i, ++, ), {, temp, [, 0, ], =, extraLabels, ., get, (, i, ), ;, String, labelAddition, =]
[{, temp, [, 0, ], =, extraLabels, ., get, (, i, ), ;, String, labelAddition, =, MessageFormat, ., format, (]
[{, temp, [, 0, ], =, extraLabels, ., get, (, i, ), ;, String, labelAddition, =, MessageFormat, ., format, (]
[], =, extraLabels, ., get, (, i, ), ;, String, labelAddition, =, MessageFormat, ., format, (, this, ., additionalFormatPattern, ,]
[., get, (, i, ), ;, String, labelAddition, =, MessageFormat, ., format, (, this, ., additionalFormatPattern, ,, temp, ), ;]
[., get, (, i, ), ;, String, labelAddition, =, MessageFormat, ., format, (, this, ., additionalFormatPattern, ,, temp, ), ;]
[), ;, String, labelAddition, =, MessageFormat, ., format, (, this, ., additionalFormatPattern, ,, temp, ), ;, label, ., append, (]
[., format, (, this, ., additionalFormatPattern, ,, temp, ), ;, label, ., append, (, labelAddition, ), ;, }, }, return]
[., format, (, this, ., additionalFormatPattern, ,, temp, ), ;, label, ., append, (, labelAddition, ), ;, }, }, return]
[;, }, protected, Object, [, ], createItemArray, (, XYDataset, dataset, ,, int, series, ), {, Object, [, ], result, =]
[Object, [, ], createItemArray, (, XYDataset, dataset, ,, int, series, ), {, Object, [, ], result, =, new, Object, []
[createItemArray, (, XYDataset, dataset, ,, int, series, ), {, Object, [, ], result, =, new, Object, [, 1, ], ;]
[createItemArray, (, XYDataset, dataset, ,, int, series, ), {, Object, [, ], result, =, new, Object, [, 1, ], ;]
[XYDataset, dataset, ,, int, series, ), {, Object, [, ], result, =, new, Object, [, 1, ], ;, result, []
[int, series, ), {, Object, [, ], result, =, new, Object, [, 1, ], ;, result, [, 0, ], =]
[int, series, ), {, Object, [, ], result, =, new, Object, [, 1, ], ;, result, [, 0, ], =]
[int, series, ), {, Object, [, ], result, =, new, Object, [, 1, ], ;, result, [, 0, ], =]
[Object, [, ], result, =, new, Object, [, 1, ], ;, result, [, 0, ], =, dataset, ., getSeriesKey, (]
[1, ], ;, result, [, 0, ], =, dataset, ., getSeriesKey, (, series, ), ., toString, (, ), ;, return]
[., toString, (, ), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, MultipleXYSeriesLabelGenerator, clone, =]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, MultipleXYSeriesLabelGenerator, clone, =, (, MultipleXYSeriesLabelGenerator, )]
[), ;, return, result, ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, MultipleXYSeriesLabelGenerator, clone, =, (, MultipleXYSeriesLabelGenerator, )]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, MultipleXYSeriesLabelGenerator, clone, =, (, MultipleXYSeriesLabelGenerator, ), super, ., clone, (, ), ;]
[public, Object, clone, (, ), throws, CloneNotSupportedException, {, MultipleXYSeriesLabelGenerator, clone, =, (, MultipleXYSeriesLabelGenerator, ), super, ., clone, (, ), ;]
[), throws, CloneNotSupportedException, {, MultipleXYSeriesLabelGenerator, clone, =, (, MultipleXYSeriesLabelGenerator, ), super, ., clone, (, ), ;, clone, ., seriesLabelLists, =]
[MultipleXYSeriesLabelGenerator, ), super, ., clone, (, ), ;, clone, ., seriesLabelLists, =, new, HashMap, (, ), ;, Set, keys, =]
[MultipleXYSeriesLabelGenerator, ), super, ., clone, (, ), ;, clone, ., seriesLabelLists, =, new, HashMap, (, ), ;, Set, keys, =]
[MultipleXYSeriesLabelGenerator, ), super, ., clone, (, ), ;, clone, ., seriesLabelLists, =, new, HashMap, (, ), ;, Set, keys, =]
[=, new, HashMap, (, ), ;, Set, keys, =, this, ., seriesLabelLists, ., keySet, (, ), ;, Iterator, iterator, =]
[=, new, HashMap, (, ), ;, Set, keys, =, this, ., seriesLabelLists, ., keySet, (, ), ;, Iterator, iterator, =]
[=, this, ., seriesLabelLists, ., keySet, (, ), ;, Iterator, iterator, =, keys, ., iterator, (, ), ;, while, (]
[=, this, ., seriesLabelLists, ., keySet, (, ), ;, Iterator, iterator, =, keys, ., iterator, (, ), ;, while, (]
[iterator, =, keys, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Object, key, =]
[iterator, =, keys, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, Object, key, =]
[(, iterator, ., hasNext, (, ), ), {, Object, key, =, iterator, ., next, (, ), ;, Object, entry, =]
[(, iterator, ., hasNext, (, ), ), {, Object, key, =, iterator, ., next, (, ), ;, Object, entry, =]
[(, iterator, ., hasNext, (, ), ), {, Object, key, =, iterator, ., next, (, ), ;, Object, entry, =]
[), {, Object, key, =, iterator, ., next, (, ), ;, Object, entry, =, this, ., seriesLabelLists, ., get, (]
[., next, (, ), ;, Object, entry, =, this, ., seriesLabelLists, ., get, (, key, ), ;, Object, toAdd, =]
[;, Object, entry, =, this, ., seriesLabelLists, ., get, (, key, ), ;, Object, toAdd, =, entry, ;, if, (]
[;, Object, entry, =, this, ., seriesLabelLists, ., get, (, key, ), ;, Object, toAdd, =, entry, ;, if, (]
[get, (, key, ), ;, Object, toAdd, =, entry, ;, if, (, entry, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =]
[), ;, Object, toAdd, =, entry, ;, if, (, entry, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, )]
[Object, toAdd, =, entry, ;, if, (, entry, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), entry, ;]
[=, entry, ;, if, (, entry, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), entry, ;, toAdd, =]
[=, entry, ;, if, (, entry, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), entry, ;, toAdd, =]
[PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), entry, ;, toAdd, =, pc, ., clone, (, ), ;, }]
[PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), entry, ;, toAdd, =, pc, ., clone, (, ), ;, }]
[PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), entry, ;, toAdd, =, pc, ., clone, (, ), ;, }]
[(, PublicCloneable, ), entry, ;, toAdd, =, pc, ., clone, (, ), ;, }, clone, ., seriesLabelLists, ., put, (]
[), entry, ;, toAdd, =, pc, ., clone, (, ), ;, }, clone, ., seriesLabelLists, ., put, (, key, ,]
[pc, ., clone, (, ), ;, }, clone, ., seriesLabelLists, ., put, (, key, ,, toAdd, ), ;, }, return]
[key, ,, toAdd, ), ;, }, return, clone, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[key, ,, toAdd, ), ;, }, return, clone, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[toAdd, ), ;, }, return, clone, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[return, clone, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (]
[equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[(, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;, }, if, (, !, (]
[obj, ==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, MultipleXYSeriesLabelGenerator, ), ), {, return]
[true, ;, }, if, (, !, (, obj, instanceof, MultipleXYSeriesLabelGenerator, ), ), {, return, false, ;, }, MultipleXYSeriesLabelGenerator, that, =]
[if, (, !, (, obj, instanceof, MultipleXYSeriesLabelGenerator, ), ), {, return, false, ;, }, MultipleXYSeriesLabelGenerator, that, =, (, MultipleXYSeriesLabelGenerator, )]
[obj, instanceof, MultipleXYSeriesLabelGenerator, ), ), {, return, false, ;, }, MultipleXYSeriesLabelGenerator, that, =, (, MultipleXYSeriesLabelGenerator, ), obj, ;, if, (]
[instanceof, MultipleXYSeriesLabelGenerator, ), ), {, return, false, ;, }, MultipleXYSeriesLabelGenerator, that, =, (, MultipleXYSeriesLabelGenerator, ), obj, ;, if, (, !]
[instanceof, MultipleXYSeriesLabelGenerator, ), ), {, return, false, ;, }, MultipleXYSeriesLabelGenerator, that, =, (, MultipleXYSeriesLabelGenerator, ), obj, ;, if, (, !]
[instanceof, MultipleXYSeriesLabelGenerator, ), ), {, return, false, ;, }, MultipleXYSeriesLabelGenerator, that, =, (, MultipleXYSeriesLabelGenerator, ), obj, ;, if, (, !]
[false, ;, }, MultipleXYSeriesLabelGenerator, that, =, (, MultipleXYSeriesLabelGenerator, ), obj, ;, if, (, !, this, ., formatPattern, ., equals, (]
[false, ;, }, MultipleXYSeriesLabelGenerator, that, =, (, MultipleXYSeriesLabelGenerator, ), obj, ;, if, (, !, this, ., formatPattern, ., equals, (]
[MultipleXYSeriesLabelGenerator, ), obj, ;, if, (, !, this, ., formatPattern, ., equals, (, that, ., formatPattern, ), ), {, return]
[(, !, this, ., formatPattern, ., equals, (, that, ., formatPattern, ), ), {, return, false, ;, }, if, (]
[!, this, ., formatPattern, ., equals, (, that, ., formatPattern, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., formatPattern, ., equals, (, that, ., formatPattern, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., formatPattern, ., equals, (, that, ., formatPattern, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., formatPattern, ), ), {, return, false, ;, }, if, (, !, this, ., additionalFormatPattern, ., equals, (]
[(, that, ., formatPattern, ), ), {, return, false, ;, }, if, (, !, this, ., additionalFormatPattern, ., equals, (]
[return, false, ;, }, if, (, !, this, ., additionalFormatPattern, ., equals, (, that, ., additionalFormatPattern, ), ), {, return]
[(, !, this, ., additionalFormatPattern, ., equals, (, that, ., additionalFormatPattern, ), ), {, return, false, ;, }, if, (]
[!, this, ., additionalFormatPattern, ., equals, (, that, ., additionalFormatPattern, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., additionalFormatPattern, ., equals, (, that, ., additionalFormatPattern, ), ), {, return, false, ;, }, if, (, !]
[!, this, ., additionalFormatPattern, ., equals, (, that, ., additionalFormatPattern, ), ), {, return, false, ;, }, if, (, !]
[(, that, ., additionalFormatPattern, ), ), {, return, false, ;, }, if, (, !, this, ., seriesLabelLists, ., equals, (]
[(, that, ., additionalFormatPattern, ), ), {, return, false, ;, }, if, (, !, this, ., seriesLabelLists, ., equals, (]
[return, false, ;, }, if, (, !, this, ., seriesLabelLists, ., equals, (, that, ., seriesLabelLists, ), ), {, return]
[if, (, !, this, ., seriesLabelLists, ., equals, (, that, ., seriesLabelLists, ), ), {, return, false, ;, }, return]
[), ), {, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =]
[{, return, false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 127, ;]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 127, ;, result, =]
[false, ;, }, return, true, ;, }, public, int, hashCode, (, ), {, int, result, =, 127, ;, result, =]
[true, ;, }, public, int, hashCode, (, ), {, int, result, =, 127, ;, result, =, HashUtilities, ., hashCode, (]
[}, public, int, hashCode, (, ), {, int, result, =, 127, ;, result, =, HashUtilities, ., hashCode, (, result, ,]
[}, public, int, hashCode, (, ), {, int, result, =, 127, ;, result, =, HashUtilities, ., hashCode, (, result, ,]
[), {, int, result, =, 127, ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., formatPattern, ), ;]
[int, result, =, 127, ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., formatPattern, ), ;, result, =]
[int, result, =, 127, ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., formatPattern, ), ;, result, =]
[;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., formatPattern, ), ;, result, =, HashUtilities, ., hashCode, (]
[=, HashUtilities, ., hashCode, (, result, ,, this, ., formatPattern, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,]
[=, HashUtilities, ., hashCode, (, result, ,, this, ., formatPattern, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,]
[result, ,, this, ., formatPattern, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., additionalFormatPattern, ), ;]
[this, ., formatPattern, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., additionalFormatPattern, ), ;, result, =]
[this, ., formatPattern, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., additionalFormatPattern, ), ;, result, =]
[;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., additionalFormatPattern, ), ;, result, =, HashUtilities, ., hashCode, (]
[=, HashUtilities, ., hashCode, (, result, ,, this, ., additionalFormatPattern, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,]
[=, HashUtilities, ., hashCode, (, result, ,, this, ., additionalFormatPattern, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,]
[,, this, ., additionalFormatPattern, ), ;, result, =, HashUtilities, ., hashCode, (, result, ,, this, ., seriesLabelLists, ), ;, return]
