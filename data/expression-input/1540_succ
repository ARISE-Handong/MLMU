[;, private, double, blockHeight, =, 1.0, ;, private, RectangleAnchor, blockAnchor, =, RectangleAnchor, ., CENTER, ;, private, double, xOffset, ;, private]
[;, private, RectangleAnchor, blockAnchor, =, RectangleAnchor, ., CENTER, ;, private, double, xOffset, ;, private, double, yOffset, ;, private, PaintScale, paintScale]
[;, private, double, xOffset, ;, private, double, yOffset, ;, private, PaintScale, paintScale, ;, public, XYBlockRenderer, (, ), {, updateOffsets, (]
[., CENTER, ;, private, double, xOffset, ;, private, double, yOffset, ;, private, PaintScale, paintScale, ;, public, XYBlockRenderer, (, ), {]
[;, this, ., paintScale, =, new, LookupPaintScale, (, ), ;, }, public, double, getBlockWidth, (, ), {, return, this, .]
[=, new, LookupPaintScale, (, ), ;, }, public, double, getBlockWidth, (, ), {, return, this, ., blockWidth, ;, }, public]
[., paintScale, =, new, LookupPaintScale, (, ), ;, }, public, double, getBlockWidth, (, ), {, return, this, ., blockWidth, ;]
[;, }, public, double, getBlockWidth, (, ), {, return, this, ., blockWidth, ;, }, public, void, setBlockWidth, (, double, width]
[;, }, public, void, setBlockWidth, (, double, width, ), {, if, (, width, <=, 0.0, ), {, throw, new, IllegalArgumentException]
[., blockWidth, ;, }, public, void, setBlockWidth, (, double, width, ), {, if, (, width, <=, 0.0, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "The 'width' argument must be > 0.0", ), ;, }, this, ., blockWidth, =, width, ;, updateOffsets, (, ), ;]
[<=, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'width' argument must be > 0.0", ), ;, }, this, ., blockWidth, =, width, ;, updateOffsets, (]
[), {, throw, new, IllegalArgumentException, (, "The 'width' argument must be > 0.0", ), ;, }, this, ., blockWidth, =, width, ;, updateOffsets, (, ), ;]
[;, }, this, ., blockWidth, =, width, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, double, getBlockHeight]
[), ;, }, this, ., blockWidth, =, width, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, double]
[=, width, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, double, getBlockHeight, (, ), {, return, this]
[., blockWidth, =, width, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, double, getBlockHeight, (, ), {]
[;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, double, getBlockHeight, (, ), {, return, this, ., blockHeight]
[;, fireChangeEvent, (, ), ;, }, public, double, getBlockHeight, (, ), {, return, this, ., blockHeight, ;, }, public, void]
[;, }, public, double, getBlockHeight, (, ), {, return, this, ., blockHeight, ;, }, public, void, setBlockHeight, (, double, height]
[;, }, public, void, setBlockHeight, (, double, height, ), {, if, (, height, <=, 0.0, ), {, throw, new, IllegalArgumentException]
[., blockHeight, ;, }, public, void, setBlockHeight, (, double, height, ), {, if, (, height, <=, 0.0, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "The 'height' argument must be > 0.0", ), ;, }, this, ., blockHeight, =, height, ;, updateOffsets, (, ), ;]
[<=, 0.0, ), {, throw, new, IllegalArgumentException, (, "The 'height' argument must be > 0.0", ), ;, }, this, ., blockHeight, =, height, ;, updateOffsets, (]
[), {, throw, new, IllegalArgumentException, (, "The 'height' argument must be > 0.0", ), ;, }, this, ., blockHeight, =, height, ;, updateOffsets, (, ), ;]
[;, }, this, ., blockHeight, =, height, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, RectangleAnchor, getBlockAnchor]
[), ;, }, this, ., blockHeight, =, height, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, RectangleAnchor]
[=, height, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, RectangleAnchor, getBlockAnchor, (, ), {, return, this]
[., blockHeight, =, height, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, RectangleAnchor, getBlockAnchor, (, ), {]
[;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, RectangleAnchor, getBlockAnchor, (, ), {, return, this, ., blockAnchor]
[;, fireChangeEvent, (, ), ;, }, public, RectangleAnchor, getBlockAnchor, (, ), {, return, this, ., blockAnchor, ;, }, public, void]
[;, }, public, RectangleAnchor, getBlockAnchor, (, ), {, return, this, ., blockAnchor, ;, }, public, void, setBlockAnchor, (, RectangleAnchor, anchor]
[;, }, public, void, setBlockAnchor, (, RectangleAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw, new, IllegalArgumentException]
[., blockAnchor, ;, }, public, void, setBlockAnchor, (, RectangleAnchor, anchor, ), {, if, (, anchor, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, if, (, this, ., blockAnchor, ., equals, (, anchor, )]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, if, (, this, ., blockAnchor, ., equals, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'anchor' argument.", ), ;, }, if, (, this, ., blockAnchor, ., equals, (, anchor, )]
[;, }, if, (, this, ., blockAnchor, ., equals, (, anchor, ), ), {, return, ;, }, this, ., blockAnchor]
[), ;, }, if, (, this, ., blockAnchor, ., equals, (, anchor, ), ), {, return, ;, }, this, .]
[), {, return, ;, }, this, ., blockAnchor, =, anchor, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }]
[., equals, (, anchor, ), ), {, return, ;, }, this, ., blockAnchor, =, anchor, ;, updateOffsets, (, ), ;]
[., blockAnchor, ., equals, (, anchor, ), ), {, return, ;, }, this, ., blockAnchor, =, anchor, ;, updateOffsets, (]
[), ), {, return, ;, }, this, ., blockAnchor, =, anchor, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;]
[=, anchor, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, PaintScale, getPaintScale, (, ), {, return, this]
[., blockAnchor, =, anchor, ;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, PaintScale, getPaintScale, (, ), {]
[;, updateOffsets, (, ), ;, fireChangeEvent, (, ), ;, }, public, PaintScale, getPaintScale, (, ), {, return, this, ., paintScale]
[;, fireChangeEvent, (, ), ;, }, public, PaintScale, getPaintScale, (, ), {, return, this, ., paintScale, ;, }, public, void]
[;, }, public, PaintScale, getPaintScale, (, ), {, return, this, ., paintScale, ;, }, public, void, setPaintScale, (, PaintScale, scale]
[;, }, public, void, setPaintScale, (, PaintScale, scale, ), {, if, (, scale, ==, null, ), {, throw, new, IllegalArgumentException]
[., paintScale, ;, }, public, void, setPaintScale, (, PaintScale, scale, ), {, if, (, scale, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, this, ., paintScale, =, scale, ;, fireChangeEvent, (, ), ;]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, this, ., paintScale, =, scale, ;, fireChangeEvent, (]
[), {, throw, new, IllegalArgumentException, (, "Null 'scale' argument.", ), ;, }, this, ., paintScale, =, scale, ;, fireChangeEvent, (, ), ;]
[;, }, this, ., paintScale, =, scale, ;, fireChangeEvent, (, ), ;, }, private, void, updateOffsets, (, ), {, if]
[), ;, }, this, ., paintScale, =, scale, ;, fireChangeEvent, (, ), ;, }, private, void, updateOffsets, (, ), {]
[=, scale, ;, fireChangeEvent, (, ), ;, }, private, void, updateOffsets, (, ), {, if, (, this, ., blockAnchor, .]
[., paintScale, =, scale, ;, fireChangeEvent, (, ), ;, }, private, void, updateOffsets, (, ), {, if, (, this, .]
[;, fireChangeEvent, (, ), ;, }, private, void, updateOffsets, (, ), {, if, (, this, ., blockAnchor, ., equals, (]
[;, }, private, void, updateOffsets, (, ), {, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, )]
[), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, .]
[., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, 0.0]
[., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset]
[), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this]
[., BOTTOM_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if]
[=, 0.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor]
[., xOffset, =, 0.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals]
[;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM]
[=, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, this]
[., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), )]
[;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, this, ., xOffset]
[), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, 0.0, ;, }]
[., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;]
[., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /]
[), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, 0.0, ;]
[., BOTTOM, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =]
[=, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, .]
[., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (]
[;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT]
[/, 2.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor]
[/, 2.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor]
[., blockWidth, /, 2.0, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals]
[;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT]
[=, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, this]
[., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), )]
[;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, this, ., xOffset]
[), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, 0.0, ;, }, else, if]
[., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, .]
[., blockAnchor, ., equals, (, RectangleAnchor, ., BOTTOM_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;]
[), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, 0.0, ;, }, else]
[., BOTTOM_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, 0.0, ;]
[=, -, this, ., blockWidth, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, .]
[., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, .]
[;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., LEFT]
[;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., LEFT]
[., blockWidth, ;, this, ., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor]
[=, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, this]
[., yOffset, =, 0.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., LEFT, ), )]
[;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, this, ., xOffset]
[), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }]
[., equals, (, RectangleAnchor, ., LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -]
[., blockAnchor, ., equals, (, RectangleAnchor, ., LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset]
[), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;]
[., LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /]
[=, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, .]
[., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (]
[;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, .]
[=, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, .]
[., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, this, ., xOffset]
[/, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, this]
[/, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, this]
[., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., CENTER, ), )]
[;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, this, ., xOffset]
[), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, .]
[., equals, (, RectangleAnchor, ., CENTER, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;]
[., blockAnchor, ., equals, (, RectangleAnchor, ., CENTER, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /]
[), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this]
[., CENTER, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =]
[=, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }]
[., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0]
[;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, .]
[/, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, .]
[/, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, .]
[., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (]
[;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, .]
[=, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, .]
[., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, this, ., xOffset]
[/, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, this]
[/, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, this]
[., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., RIGHT, ), )]
[;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, this, ., xOffset]
[), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight, /]
[., equals, (, RectangleAnchor, ., RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, .]
[., blockAnchor, ., equals, (, RectangleAnchor, ., RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;]
[), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight]
[., RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, -, this]
[=, -, this, ., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if]
[., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }]
[;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, .]
[;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, .]
[., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, .]
[=, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, .]
[., yOffset, =, -, this, ., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, this, ., xOffset]
[/, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, this]
[/, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, this]
[., blockHeight, /, 2.0, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), )]
[;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, this, ., xOffset]
[), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if]
[., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -]
[., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset]
[), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else]
[., TOP_LEFT, ), ), {, this, ., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;]
[=, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, .]
[., xOffset, =, 0.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, .]
[;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[=, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP, )]
[., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, .]
[;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, this, ., xOffset]
[;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, this, ., xOffset]
[., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, this]
[), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, .]
[., equals, (, RectangleAnchor, ., TOP, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;]
[., blockAnchor, ., equals, (, RectangleAnchor, ., TOP, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /]
[), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this]
[., TOP, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =]
[=, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if]
[., xOffset, =, -, this, ., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }]
[;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[/, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, .]
[/, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, .]
[., blockWidth, /, 2.0, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, .]
[;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (]
[=, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, )]
[., yOffset, =, -, this, ., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, .]
[;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, this, ., xOffset]
[;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, this, ., xOffset]
[., blockHeight, ;, }, else, if, (, this, ., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, this]
[), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight, ;]
[., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, .]
[., blockAnchor, ., equals, (, RectangleAnchor, ., TOP_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;]
[), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight]
[., TOP_RIGHT, ), ), {, this, ., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, -, this]
[=, -, this, ., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, }, public, Range, findDomainBounds]
[., xOffset, =, -, this, ., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, }, public]
[;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {]
[;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {]
[., blockWidth, ;, this, ., yOffset, =, -, this, ., blockHeight, ;, }, }, public, Range, findDomainBounds, (, XYDataset, dataset]
[=, -, this, ., blockHeight, ;, }, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=]
[., yOffset, =, -, this, ., blockHeight, ;, }, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (]
[;, }, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, Range, r]
[;, }, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, Range, r]
[., blockHeight, ;, }, }, public, Range, findDomainBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {]
[), {, Range, r, =, DatasetUtilities, ., findDomainBounds, (, dataset, ,, false, ), ;, if, (, r, ==, null, )]
[!=, null, ), {, Range, r, =, DatasetUtilities, ., findDomainBounds, (, dataset, ,, false, ), ;, if, (, r, ==]
[), {, Range, r, =, DatasetUtilities, ., findDomainBounds, (, dataset, ,, false, ), ;, if, (, r, ==, null, )]
[;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return, new, Range, (, r, .]
[., findDomainBounds, (, dataset, ,, false, ), ;, if, (, r, ==, null, ), {, return, null, ;, }, else]
[,, false, ), ;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return, new, Range]
[), ;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return, new, Range, (, r]
[), {, return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, .]
[==, null, ), {, return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +]
[), {, return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, .]
[;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., xOffset, ,, r, .]
[;, }, }, else, {, return, null, ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (]
[,, r, ., getUpperBound, (, ), +, this, ., blockWidth, +, this, ., xOffset, ), ;, }, }, else, {]
[+, this, ., xOffset, ,, r, ., getUpperBound, (, ), +, this, ., blockWidth, +, this, ., xOffset, ), ;]
[., getLowerBound, (, ), +, this, ., xOffset, ,, r, ., getUpperBound, (, ), +, this, ., blockWidth, +, this]
[,, r, ., getUpperBound, (, ), +, this, ., blockWidth, +, this, ., xOffset, ), ;, }, }, else, {]
[., xOffset, ,, r, ., getUpperBound, (, ), +, this, ., blockWidth, +, this, ., xOffset, ), ;, }, }]
[), ;, }, }, else, {, return, null, ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if]
[+, this, ., xOffset, ), ;, }, }, else, {, return, null, ;, }, }, public, Range, findRangeBounds, (, XYDataset]
[+, this, ., blockWidth, +, this, ., xOffset, ), ;, }, }, else, {, return, null, ;, }, }, public]
[., getUpperBound, (, ), +, this, ., blockWidth, +, this, ., xOffset, ), ;, }, }, else, {, return, null]
[+, this, ., xOffset, ), ;, }, }, else, {, return, null, ;, }, }, public, Range, findRangeBounds, (, XYDataset]
[., blockWidth, +, this, ., xOffset, ), ;, }, }, else, {, return, null, ;, }, }, public, Range, findRangeBounds]
[), ;, }, }, else, {, return, null, ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if]
[., xOffset, ), ;, }, }, else, {, return, null, ;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, )]
[;, }, }, public, Range, findRangeBounds, (, XYDataset, dataset, ), {, if, (, dataset, !=, null, ), {, Range, r]
[), {, Range, r, =, DatasetUtilities, ., findRangeBounds, (, dataset, ,, false, ), ;, if, (, r, ==, null, )]
[!=, null, ), {, Range, r, =, DatasetUtilities, ., findRangeBounds, (, dataset, ,, false, ), ;, if, (, r, ==]
[), {, Range, r, =, DatasetUtilities, ., findRangeBounds, (, dataset, ,, false, ), ;, if, (, r, ==, null, )]
[;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return, new, Range, (, r, .]
[., findRangeBounds, (, dataset, ,, false, ), ;, if, (, r, ==, null, ), {, return, null, ;, }, else]
[,, false, ), ;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return, new, Range]
[), ;, if, (, r, ==, null, ), {, return, null, ;, }, else, {, return, new, Range, (, r]
[), {, return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, .]
[==, null, ), {, return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +]
[), {, return, null, ;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, .]
[;, }, else, {, return, new, Range, (, r, ., getLowerBound, (, ), +, this, ., yOffset, ,, r, .]
[;, }, }, else, {, return, null, ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,]
[,, r, ., getUpperBound, (, ), +, this, ., blockHeight, +, this, ., yOffset, ), ;, }, }, else, {]
[+, this, ., yOffset, ,, r, ., getUpperBound, (, ), +, this, ., blockHeight, +, this, ., yOffset, ), ;]
[., getLowerBound, (, ), +, this, ., yOffset, ,, r, ., getUpperBound, (, ), +, this, ., blockHeight, +, this]
[,, r, ., getUpperBound, (, ), +, this, ., blockHeight, +, this, ., yOffset, ), ;, }, }, else, {]
[., yOffset, ,, r, ., getUpperBound, (, ), +, this, ., blockHeight, +, this, ., yOffset, ), ;, }, }]
[), ;, }, }, else, {, return, null, ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state]
[+, this, ., yOffset, ), ;, }, }, else, {, return, null, ;, }, }, public, void, drawItem, (, Graphics2D]
[+, this, ., blockHeight, +, this, ., yOffset, ), ;, }, }, else, {, return, null, ;, }, }, public]
[., getUpperBound, (, ), +, this, ., blockHeight, +, this, ., yOffset, ), ;, }, }, else, {, return, null]
[+, this, ., yOffset, ), ;, }, }, else, {, return, null, ;, }, }, public, void, drawItem, (, Graphics2D]
[., blockHeight, +, this, ., yOffset, ), ;, }, }, else, {, return, null, ;, }, }, public, void, drawItem]
[), ;, }, }, else, {, return, null, ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state]
[., yOffset, ), ;, }, }, else, {, return, null, ;, }, }, public, void, drawItem, (, Graphics2D, g2, ,]
[;, }, }, public, void, drawItem, (, Graphics2D, g2, ,, XYItemRendererState, state, ,, Rectangle2D, dataArea, ,, XYPlot, plot, ,, ValueAxis]
[;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, double, z, =, 0.0, ;, if, (]
[., getXValue, (, series, ,, item, ), ;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;]
[,, item, ), ;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, double, z, =, 0.0]
[), ;, double, y, =, dataset, ., getYValue, (, series, ,, item, ), ;, double, z, =, 0.0, ;, if]
[;, double, z, =, 0.0, ;, if, (, dataset, instanceof, XYZDataset, ), {, z, =, (, (, XYZDataset, ), dataset]
[., getYValue, (, series, ,, item, ), ;, double, z, =, 0.0, ;, if, (, dataset, instanceof, XYZDataset, ), {]
[,, item, ), ;, double, z, =, 0.0, ;, if, (, dataset, instanceof, XYZDataset, ), {, z, =, (, (]
[), ;, double, z, =, 0.0, ;, if, (, dataset, instanceof, XYZDataset, ), {, z, =, (, (, XYZDataset, )]
[;, if, (, dataset, instanceof, XYZDataset, ), {, z, =, (, (, XYZDataset, ), dataset, ), ., getZValue, (, series]
[), {, z, =, (, (, XYZDataset, ), dataset, ), ., getZValue, (, series, ,, item, ), ;, }, Paint]
[instanceof, XYZDataset, ), {, z, =, (, (, XYZDataset, ), dataset, ), ., getZValue, (, series, ,, item, ), ;]
[=, (, (, XYZDataset, ), dataset, ), ., getZValue, (, series, ,, item, ), ;, }, Paint, p, =, this]
[;, }, Paint, p, =, this, ., paintScale, ., getPaint, (, z, ), ;, double, xx0, =, domainAxis, ., valueToJava2D]
[., getZValue, (, series, ,, item, ), ;, }, Paint, p, =, this, ., paintScale, ., getPaint, (, z, )]
[), ., getZValue, (, series, ,, item, ), ;, }, Paint, p, =, this, ., paintScale, ., getPaint, (, z]
[), ., getZValue, (, series, ,, item, ), ;, }, Paint, p, =, this, ., paintScale, ., getPaint, (, z]
[,, item, ), ;, }, Paint, p, =, this, ., paintScale, ., getPaint, (, z, ), ;, double, xx0, =]
[), ;, }, Paint, p, =, this, ., paintScale, ., getPaint, (, z, ), ;, double, xx0, =, domainAxis, .]
[;, double, xx0, =, domainAxis, ., valueToJava2D, (, x, +, this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (]
[., getPaint, (, z, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (, x, +, this, ., xOffset, ,, dataArea]
[., paintScale, ., getPaint, (, z, ), ;, double, xx0, =, domainAxis, ., valueToJava2D, (, x, +, this, ., xOffset]
[), ;, double, xx0, =, domainAxis, ., valueToJava2D, (, x, +, this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge]
[;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (]
[., valueToJava2D, (, x, +, this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, +, this]
[+, this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, +, this]
[., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y]
[,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., yOffset]
[), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge]
[., getDomainAxisEdge, (, ), ), ;, double, yy0, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., yOffset, ,, dataArea]
[;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, this, ., blockWidth, +, this, ., xOffset, ,, dataArea, ,]
[., valueToJava2D, (, y, +, this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1]
[,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, this]
[+, this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D]
[,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, this]
[., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x]
[,, plot, ., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, this, ., blockWidth]
[), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, this, ., blockWidth, +, this, ., xOffset, ,, dataArea]
[., getRangeAxisEdge, (, ), ), ;, double, xx1, =, domainAxis, ., valueToJava2D, (, x, +, this, ., blockWidth, +, this]
[;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., blockHeight, +, this, ., yOffset, ,, dataArea, ,]
[., valueToJava2D, (, x, +, this, ., blockWidth, +, this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, )]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, this]
[+, this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D]
[+, this, ., blockWidth, +, this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1]
[+, this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D]
[., blockWidth, +, this, ., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis]
[,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, this]
[., xOffset, ,, dataArea, ,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y]
[,, plot, ., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., blockHeight]
[), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., blockHeight, +, this, ., yOffset, ,, dataArea]
[., getDomainAxisEdge, (, ), ), ;, double, yy1, =, rangeAxis, ., valueToJava2D, (, y, +, this, ., blockHeight, +, this]
[;, Rectangle2D, block, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ., equals, (, PlotOrientation]
[., valueToJava2D, (, y, +, this, ., blockHeight, +, this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, )]
[,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (]
[+, this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =]
[+, this, ., blockHeight, +, this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Rectangle2D, block]
[+, this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =]
[., blockHeight, +, this, ., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Rectangle2D, block, ;, PlotOrientation]
[,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (]
[., yOffset, ,, dataArea, ,, plot, ., getRangeAxisEdge, (, ), ), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =, plot, .]
[,, plot, ., getRangeAxisEdge, (, ), ), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;]
[), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (, orientation, ., equals, (]
[., getRangeAxisEdge, (, ), ), ;, Rectangle2D, block, ;, PlotOrientation, orientation, =, plot, ., getOrientation, (, ), ;, if, (]
[;, if, (, orientation, ., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, block, =, new, Rectangle2D, ., Double, (]
[., getOrientation, (, ), ;, if, (, orientation, ., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, block, =, new]
[), {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, yy0, ,, yy1, ), ,, Math, .]
[., equals, (, PlotOrientation, ., HORIZONTAL, ), ), {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (]
[), ), {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, yy0, ,, yy1, ), ,, Math]
[., HORIZONTAL, ), ), {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, yy0, ,, yy1, )]
[=, new, Rectangle2D, ., Double, (, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., min, (, xx0]
[;, }, else, {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, xx0, ,, xx1, ), ,]
[,, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., abs, (, yy1, -, yy0, ), ,, Math]
[., min, (, yy0, ,, yy1, ), ,, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., abs]
[,, yy1, ), ,, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., abs, (, yy1, -, yy0]
[), ,, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., abs, (, yy1, -, yy0, ), ,]
[,, Math, ., abs, (, yy1, -, yy0, ), ,, Math, ., abs, (, xx0, -, xx1, ), ), ;]
[., min, (, xx0, ,, xx1, ), ,, Math, ., abs, (, yy1, -, yy0, ), ,, Math, ., abs]
[,, xx1, ), ,, Math, ., abs, (, yy1, -, yy0, ), ,, Math, ., abs, (, xx0, -, xx1]
[), ,, Math, ., abs, (, yy1, -, yy0, ), ,, Math, ., abs, (, xx0, -, xx1, ), )]
[,, Math, ., abs, (, xx0, -, xx1, ), ), ;, }, else, {, block, =, new, Rectangle2D, ., Double]
[., abs, (, yy1, -, yy0, ), ,, Math, ., abs, (, xx0, -, xx1, ), ), ;, }, else]
[), ,, Math, ., abs, (, xx0, -, xx1, ), ), ;, }, else, {, block, =, new, Rectangle2D, .]
[-, yy0, ), ,, Math, ., abs, (, xx0, -, xx1, ), ), ;, }, else, {, block, =, new]
[), ,, Math, ., abs, (, xx0, -, xx1, ), ), ;, }, else, {, block, =, new, Rectangle2D, .]
[), ;, }, else, {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, xx0, ,, xx1, )]
[., abs, (, xx0, -, xx1, ), ), ;, }, else, {, block, =, new, Rectangle2D, ., Double, (, Math]
[), ), ;, }, else, {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, xx0, ,, xx1]
[-, xx1, ), ), ;, }, else, {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, xx0]
[), ), ;, }, else, {, block, =, new, Rectangle2D, ., Double, (, Math, ., min, (, xx0, ,, xx1]
[=, new, Rectangle2D, ., Double, (, Math, ., min, (, xx0, ,, xx1, ), ,, Math, ., min, (, yy0]
[;, }, g2, ., setPaint, (, p, ), ;, g2, ., fill, (, block, ), ;, g2, ., setStroke, (]
[,, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., abs, (, xx1, -, xx0, ), ,, Math]
[., min, (, xx0, ,, xx1, ), ,, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., abs]
[,, xx1, ), ,, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., abs, (, xx1, -, xx0]
[), ,, Math, ., min, (, yy0, ,, yy1, ), ,, Math, ., abs, (, xx1, -, xx0, ), ,]
[,, Math, ., abs, (, xx1, -, xx0, ), ,, Math, ., abs, (, yy1, -, yy0, ), ), ;]
[., min, (, yy0, ,, yy1, ), ,, Math, ., abs, (, xx1, -, xx0, ), ,, Math, ., abs]
[,, yy1, ), ,, Math, ., abs, (, xx1, -, xx0, ), ,, Math, ., abs, (, yy1, -, yy0]
[), ,, Math, ., abs, (, xx1, -, xx0, ), ,, Math, ., abs, (, yy1, -, yy0, ), )]
[,, Math, ., abs, (, yy1, -, yy0, ), ), ;, }, g2, ., setPaint, (, p, ), ;, g2]
[., abs, (, xx1, -, xx0, ), ,, Math, ., abs, (, yy1, -, yy0, ), ), ;, }, g2]
[), ,, Math, ., abs, (, yy1, -, yy0, ), ), ;, }, g2, ., setPaint, (, p, ), ;]
[-, xx0, ), ,, Math, ., abs, (, yy1, -, yy0, ), ), ;, }, g2, ., setPaint, (, p]
[), ,, Math, ., abs, (, yy1, -, yy0, ), ), ;, }, g2, ., setPaint, (, p, ), ;]
[), ;, }, g2, ., setPaint, (, p, ), ;, g2, ., fill, (, block, ), ;, g2, ., setStroke]
[., abs, (, yy1, -, yy0, ), ), ;, }, g2, ., setPaint, (, p, ), ;, g2, ., fill]
[), ), ;, }, g2, ., setPaint, (, p, ), ;, g2, ., fill, (, block, ), ;, g2, .]
[-, yy0, ), ), ;, }, g2, ., setPaint, (, p, ), ;, g2, ., fill, (, block, ), ;]
[), ), ;, }, g2, ., setPaint, (, p, ), ;, g2, ., fill, (, block, ), ;, g2, .]
[;, g2, ., fill, (, block, ), ;, g2, ., setStroke, (, new, BasicStroke, (, 1.0f, ), ), ;, g2]
[., setPaint, (, p, ), ;, g2, ., fill, (, block, ), ;, g2, ., setStroke, (, new, BasicStroke, (]
[), ;, g2, ., fill, (, block, ), ;, g2, ., setStroke, (, new, BasicStroke, (, 1.0f, ), ), ;]
[;, g2, ., setStroke, (, new, BasicStroke, (, 1.0f, ), ), ;, g2, ., draw, (, block, ), ;, EntityCollection]
[., fill, (, block, ), ;, g2, ., setStroke, (, new, BasicStroke, (, 1.0f, ), ), ;, g2, ., draw]
[), ;, g2, ., setStroke, (, new, BasicStroke, (, 1.0f, ), ), ;, g2, ., draw, (, block, ), ;]
[;, g2, ., draw, (, block, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities]
[., setStroke, (, new, BasicStroke, (, 1.0f, ), ), ;, g2, ., draw, (, block, ), ;, EntityCollection, entities, =]
[), ;, g2, ., draw, (, block, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (]
[), ), ;, g2, ., draw, (, block, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if]
[;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities]
[., draw, (, block, ), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null]
[), ;, EntityCollection, entities, =, state, ., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (]
[;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, block, ,, dataset, ,, series, ,, item, ,]
[., getEntityCollection, (, ), ;, if, (, entities, !=, null, ), {, addEntity, (, entities, ,, block, ,, dataset, ,]
[), {, addEntity, (, entities, ,, block, ,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, )]
[!=, null, ), {, addEntity, (, entities, ,, block, ,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,]
[), {, addEntity, (, entities, ,, block, ,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, )]
[;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true]
[,, block, ,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, public, boolean]
[,, dataset, ,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, public, boolean, equals, (]
[,, series, ,, item, ,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, public, boolean, equals, (, Object, obj]
[,, item, ,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {]
[,, selected, ,, 0.0, ,, 0.0, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[,, 0.0, ,, 0.0, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[,, 0.0, ), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, )]
[), ;, }, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, XYBlockRenderer, ), ), {, return, false, ;, }]
[==, this, ), {, return, true, ;, }, if, (, !, (, obj, instanceof, XYBlockRenderer, ), ), {, return, false]
[), {, return, true, ;, }, if, (, !, (, obj, instanceof, XYBlockRenderer, ), ), {, return, false, ;, }]
[;, }, if, (, !, (, obj, instanceof, XYBlockRenderer, ), ), {, return, false, ;, }, XYBlockRenderer, that, =, (]
[), {, return, false, ;, }, XYBlockRenderer, that, =, (, XYBlockRenderer, ), obj, ;, if, (, this, ., blockHeight, !=]
[), {, return, false, ;, }, XYBlockRenderer, that, =, (, XYBlockRenderer, ), obj, ;, if, (, this, ., blockHeight, !=]
[), ), {, return, false, ;, }, XYBlockRenderer, that, =, (, XYBlockRenderer, ), obj, ;, if, (, this, ., blockHeight]
[instanceof, XYBlockRenderer, ), ), {, return, false, ;, }, XYBlockRenderer, that, =, (, XYBlockRenderer, ), obj, ;, if, (, this]
[;, }, XYBlockRenderer, that, =, (, XYBlockRenderer, ), obj, ;, if, (, this, ., blockHeight, !=, that, ., blockHeight, )]
[;, if, (, this, ., blockHeight, !=, that, ., blockHeight, ), {, return, false, ;, }, if, (, this, .]
[;, if, (, this, ., blockHeight, !=, that, ., blockHeight, ), {, return, false, ;, }, if, (, this, .]
[), {, return, false, ;, }, if, (, this, ., blockWidth, !=, that, ., blockWidth, ), {, return, false, ;]
[!=, that, ., blockHeight, ), {, return, false, ;, }, if, (, this, ., blockWidth, !=, that, ., blockWidth, )]
[., blockHeight, !=, that, ., blockHeight, ), {, return, false, ;, }, if, (, this, ., blockWidth, !=, that, .]
[), {, return, false, ;, }, if, (, this, ., blockWidth, !=, that, ., blockWidth, ), {, return, false, ;]
[., blockHeight, ), {, return, false, ;, }, if, (, this, ., blockWidth, !=, that, ., blockWidth, ), {, return]
[;, }, if, (, this, ., blockWidth, !=, that, ., blockWidth, ), {, return, false, ;, }, if, (, !]
[), {, return, false, ;, }, if, (, !, this, ., blockAnchor, ., equals, (, that, ., blockAnchor, ), )]
[!=, that, ., blockWidth, ), {, return, false, ;, }, if, (, !, this, ., blockAnchor, ., equals, (, that]
[., blockWidth, !=, that, ., blockWidth, ), {, return, false, ;, }, if, (, !, this, ., blockAnchor, ., equals]
[), {, return, false, ;, }, if, (, !, this, ., blockAnchor, ., equals, (, that, ., blockAnchor, ), )]
[., blockWidth, ), {, return, false, ;, }, if, (, !, this, ., blockAnchor, ., equals, (, that, ., blockAnchor]
[;, }, if, (, !, this, ., blockAnchor, ., equals, (, that, ., blockAnchor, ), ), {, return, false, ;]
[), {, return, false, ;, }, if, (, !, this, ., paintScale, ., equals, (, that, ., paintScale, ), )]
[), {, return, false, ;, }, if, (, !, this, ., paintScale, ., equals, (, that, ., paintScale, ), )]
[., equals, (, that, ., blockAnchor, ), ), {, return, false, ;, }, if, (, !, this, ., paintScale, .]
[., blockAnchor, ., equals, (, that, ., blockAnchor, ), ), {, return, false, ;, }, if, (, !, this, .]
[), ), {, return, false, ;, }, if, (, !, this, ., paintScale, ., equals, (, that, ., paintScale, )]
[., blockAnchor, ), ), {, return, false, ;, }, if, (, !, this, ., paintScale, ., equals, (, that, .]
[;, }, if, (, !, this, ., paintScale, ., equals, (, that, ., paintScale, ), ), {, return, false, ;]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, )]
[), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, )]
[., equals, (, that, ., paintScale, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, )]
[., paintScale, ., equals, (, that, ., paintScale, ), ), {, return, false, ;, }, return, super, ., equals, (]
[), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (]
[., paintScale, ), ), {, return, false, ;, }, return, super, ., equals, (, obj, ), ;, }, public, Object]
[;, }, return, super, ., equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, XYBlockRenderer]
[;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, XYBlockRenderer, clone, =, (, XYBlockRenderer, ), super, ., clone, (]
[., equals, (, obj, ), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, XYBlockRenderer, clone, =, (, XYBlockRenderer]
[), ;, }, public, Object, clone, (, ), throws, CloneNotSupportedException, {, XYBlockRenderer, clone, =, (, XYBlockRenderer, ), super, ., clone]
[;, if, (, this, ., paintScale, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., paintScale, ;]
[;, if, (, this, ., paintScale, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., paintScale, ;]
[., clone, (, ), ;, if, (, this, ., paintScale, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, )]
[), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., paintScale, ;, clone, ., paintScale, =, (, PaintScale, ), pc]
[instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., paintScale, ;, clone, ., paintScale, =, (, PaintScale]
[., paintScale, instanceof, PublicCloneable, ), {, PublicCloneable, pc, =, (, PublicCloneable, ), this, ., paintScale, ;, clone, ., paintScale, =]
[;, clone, ., paintScale, =, (, PaintScale, ), pc, ., clone, (, ), ;, }, return, clone, ;, }, }]
[;, clone, ., paintScale, =, (, PaintScale, ), pc, ., clone, (, ), ;, }, return, clone, ;, }, }]
[., paintScale, ;, clone, ., paintScale, =, (, PaintScale, ), pc, ., clone, (, ), ;, }, return, clone, ;]
[=, (, PaintScale, ), pc, ., clone, (, ), ;, }, return, clone, ;, }, }]
[., paintScale, =, (, PaintScale, ), pc, ., clone, (, ), ;, }, return, clone, ;, }, }]
[;, }, return, clone, ;, }, }]
[;, }, return, clone, ;, }, }]
[., clone, (, ), ;, }, return, clone, ;, }, }]
[;, }, }]
