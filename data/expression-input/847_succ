[;, private, List, lines, ;, private, HorizontalAlignment, lineAlignment, ;, public, TextBlock, (, ), {, this, ., lines, =, new, java]
[;, private, List, lines, ;, private, HorizontalAlignment, lineAlignment, ;, public, TextBlock, (, ), {, this, ., lines, =, new, java]
[=, new, java, ., util, ., ArrayList, (, ), ;, this, ., lineAlignment, =, HorizontalAlignment, ., CENTER, ;, }, public]
[., lines, =, new, java, ., util, ., ArrayList, (, ), ;, this, ., lineAlignment, =, HorizontalAlignment, ., CENTER, ;]
[;, this, ., lineAlignment, =, HorizontalAlignment, ., CENTER, ;, }, public, HorizontalAlignment, getLineAlignment, (, ), {, return, this, ., lineAlignment]
[=, HorizontalAlignment, ., CENTER, ;, }, public, HorizontalAlignment, getLineAlignment, (, ), {, return, this, ., lineAlignment, ;, }, public, void]
[., lineAlignment, =, HorizontalAlignment, ., CENTER, ;, }, public, HorizontalAlignment, getLineAlignment, (, ), {, return, this, ., lineAlignment, ;, }]
[;, }, public, HorizontalAlignment, getLineAlignment, (, ), {, return, this, ., lineAlignment, ;, }, public, void, setLineAlignment, (, HorizontalAlignment, alignment]
[., CENTER, ;, }, public, HorizontalAlignment, getLineAlignment, (, ), {, return, this, ., lineAlignment, ;, }, public, void, setLineAlignment, (]
[;, }, public, void, setLineAlignment, (, HorizontalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw, new, IllegalArgumentException]
[., lineAlignment, ;, }, public, void, setLineAlignment, (, HorizontalAlignment, alignment, ), {, if, (, alignment, ==, null, ), {, throw]
[), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, this, ., lineAlignment, =, alignment, ;, }, public, void, addLine]
[==, null, ), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, this, ., lineAlignment, =, alignment, ;, }, public]
[), {, throw, new, IllegalArgumentException, (, "Null 'alignment' argument.", ), ;, }, this, ., lineAlignment, =, alignment, ;, }, public, void, addLine]
[;, }, this, ., lineAlignment, =, alignment, ;, }, public, void, addLine, (, String, text, ,, Font, font, ,, Paint]
[), ;, }, this, ., lineAlignment, =, alignment, ;, }, public, void, addLine, (, String, text, ,, Font, font, ,]
[=, alignment, ;, }, public, void, addLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {, addLine, (]
[., lineAlignment, =, alignment, ;, }, public, void, addLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {]
[;, }, public, void, addLine, (, String, text, ,, Font, font, ,, Paint, paint, ), {, addLine, (, new, TextLine]
[;, }, public, void, addLine, (, TextLine, line, ), {, this, ., lines, ., add, (, line, ), ;, }]
[), ;, }, public, void, addLine, (, TextLine, line, ), {, this, ., lines, ., add, (, line, ), ;]
[,, font, ,, paint, ), ), ;, }, public, void, addLine, (, TextLine, line, ), {, this, ., lines, .]
[,, paint, ), ), ;, }, public, void, addLine, (, TextLine, line, ), {, this, ., lines, ., add, (]
[), ), ;, }, public, void, addLine, (, TextLine, line, ), {, this, ., lines, ., add, (, line, )]
[;, }, public, TextLine, getLastLine, (, ), {, TextLine, last, =, null, ;, final, int, index, =, this, ., lines]
[., add, (, line, ), ;, }, public, TextLine, getLastLine, (, ), {, TextLine, last, =, null, ;, final, int]
[., lines, ., add, (, line, ), ;, }, public, TextLine, getLastLine, (, ), {, TextLine, last, =, null, ;]
[), ;, }, public, TextLine, getLastLine, (, ), {, TextLine, last, =, null, ;, final, int, index, =, this, .]
[;, final, int, index, =, this, ., lines, ., size, (, ), -, 1, ;, if, (, index, >=, 0]
[;, if, (, index, >=, 0, ), {, last, =, (, TextLine, ), this, ., lines, ., get, (, index]
[-, 1, ;, if, (, index, >=, 0, ), {, last, =, (, TextLine, ), this, ., lines, ., get]
[., size, (, ), -, 1, ;, if, (, index, >=, 0, ), {, last, =, (, TextLine, ), this]
[., lines, ., size, (, ), -, 1, ;, if, (, index, >=, 0, ), {, last, =, (, TextLine]
[;, if, (, index, >=, 0, ), {, last, =, (, TextLine, ), this, ., lines, ., get, (, index]
[), {, last, =, (, TextLine, ), this, ., lines, ., get, (, index, ), ;, }, return, last, ;]
[>=, 0, ), {, last, =, (, TextLine, ), this, ., lines, ., get, (, index, ), ;, }, return]
[), {, last, =, (, TextLine, ), this, ., lines, ., get, (, index, ), ;, }, return, last, ;]
[=, (, TextLine, ), this, ., lines, ., get, (, index, ), ;, }, return, last, ;, }, public, List]
[;, }, return, last, ;, }, public, List, getLines, (, ), {, return, Collections, ., unmodifiableList, (, this, ., lines]
[;, }, return, last, ;, }, public, List, getLines, (, ), {, return, Collections, ., unmodifiableList, (, this, ., lines]
[., get, (, index, ), ;, }, return, last, ;, }, public, List, getLines, (, ), {, return, Collections, .]
[., lines, ., get, (, index, ), ;, }, return, last, ;, }, public, List, getLines, (, ), {, return]
[), ;, }, return, last, ;, }, public, List, getLines, (, ), {, return, Collections, ., unmodifiableList, (, this, .]
[;, }, public, List, getLines, (, ), {, return, Collections, ., unmodifiableList, (, this, ., lines, ), ;, }, public]
[;, }, public, Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height, =, 0.0, ;]
[., unmodifiableList, (, this, ., lines, ), ;, }, public, Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =]
[), ;, }, public, Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height, =, 0.0]
[., lines, ), ;, }, public, Size2D, calculateDimensions, (, Graphics2D, g2, ), {, double, width, =, 0.0, ;, double, height]
[;, double, height, =, 0.0, ;, Iterator, iterator, =, this, ., lines, ., iterator, (, ), ;, while, (, iterator]
[;, Iterator, iterator, =, this, ., lines, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), )]
[;, while, (, iterator, ., hasNext, (, ), ), {, TextLine, line, =, (, TextLine, ), iterator, ., next, (]
[., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextLine, line, =, (, TextLine, )]
[., lines, ., iterator, (, ), ;, while, (, iterator, ., hasNext, (, ), ), {, TextLine, line, =, (]
[), {, TextLine, line, =, (, TextLine, ), iterator, ., next, (, ), ;, Size2D, dimension, =, line, ., calculateDimensions]
[., hasNext, (, ), ), {, TextLine, line, =, (, TextLine, ), iterator, ., next, (, ), ;, Size2D, dimension]
[;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, width, =, Math, ., max, (, width, ,, dimension]
[;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, width, =, Math, ., max, (, width, ,, dimension]
[., next, (, ), ;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, width, =, Math, ., max]
[;, width, =, Math, ., max, (, width, ,, dimension, ., getWidth, (, ), ), ;, height, =, height, +]
[., calculateDimensions, (, g2, ), ;, width, =, Math, ., max, (, width, ,, dimension, ., getWidth, (, ), )]
[), ;, width, =, Math, ., max, (, width, ,, dimension, ., getWidth, (, ), ), ;, height, =, height]
[=, Math, ., max, (, width, ,, dimension, ., getWidth, (, ), ), ;, height, =, height, +, dimension, .]
[;, height, =, height, +, dimension, ., getHeight, (, ), ;, }, return, new, Size2D, (, width, ,, height, )]
[., max, (, width, ,, dimension, ., getWidth, (, ), ), ;, height, =, height, +, dimension, ., getHeight, (]
[,, dimension, ., getWidth, (, ), ), ;, height, =, height, +, dimension, ., getHeight, (, ), ;, }, return]
[), ;, height, =, height, +, dimension, ., getHeight, (, ), ;, }, return, new, Size2D, (, width, ,, height]
[., getWidth, (, ), ), ;, height, =, height, +, dimension, ., getHeight, (, ), ;, }, return, new, Size2D]
[=, height, +, dimension, ., getHeight, (, ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }]
[;, }, return, new, Size2D, (, width, ,, height, ), ;, }, public, Shape, calculateBounds, (, Graphics2D, g2, ,, float]
[+, dimension, ., getHeight, (, ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, public, Shape]
[;, }, return, new, Size2D, (, width, ,, height, ), ;, }, public, Shape, calculateBounds, (, Graphics2D, g2, ,, float]
[., getHeight, (, ), ;, }, return, new, Size2D, (, width, ,, height, ), ;, }, public, Shape, calculateBounds, (]
[;, }, public, Shape, calculateBounds, (, Graphics2D, g2, ,, float, anchorX, ,, float, anchorY, ,, TextBlockAnchor, anchor, ,, float, rotateX]
[,, height, ), ;, }, public, Shape, calculateBounds, (, Graphics2D, g2, ,, float, anchorX, ,, float, anchorY, ,, TextBlockAnchor, anchor]
[), ;, }, public, Shape, calculateBounds, (, Graphics2D, g2, ,, float, anchorX, ,, float, anchorY, ,, TextBlockAnchor, anchor, ,, float]
[;, float, [, ], offsets, =, calculateOffsets, (, anchor, ,, d, ., getWidth, (, ), ,, d, ., getHeight, (]
[), ;, float, [, ], offsets, =, calculateOffsets, (, anchor, ,, d, ., getWidth, (, ), ,, d, ., getHeight]
[;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (, anchorX, +, offsets, [, 0, ], ,, anchorY, +, offsets, []
[,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Rectangle2D, bounds, =, new, Rectangle2D, .]
[,, d, ., getHeight, (, ), ), ;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (, anchorX, +, offsets, []
[., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (]
[), ;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (, anchorX, +, offsets, [, 0, ], ,, anchorY, +, offsets]
[., getHeight, (, ), ), ;, Rectangle2D, bounds, =, new, Rectangle2D, ., Double, (, anchorX, +, offsets, [, 0, ]]
[;, Shape, rotatedBounds, =, ShapeUtilities, ., rotateShape, (, bounds, ,, angle, ,, rotateX, ,, rotateY, ), ;, return, rotatedBounds, ;]
[,, anchorY, +, offsets, [, 1, ], ,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), )]
[+, offsets, [, 0, ], ,, anchorY, +, offsets, [, 1, ], ,, d, ., getWidth, (, ), ,, d]
[,, anchorY, +, offsets, [, 1, ], ,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), )]
[[, 0, ], ,, anchorY, +, offsets, [, 1, ], ,, d, ., getWidth, (, ), ,, d, ., getHeight]
[], ,, anchorY, +, offsets, [, 1, ], ,, d, ., getWidth, (, ), ,, d, ., getHeight, (, )]
[,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Shape, rotatedBounds, =, ShapeUtilities, ., rotateShape]
[+, offsets, [, 1, ], ,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Shape]
[,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Shape, rotatedBounds, =, ShapeUtilities, ., rotateShape]
[[, 1, ], ,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Shape, rotatedBounds, =]
[], ,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Shape, rotatedBounds, =, ShapeUtilities, .]
[,, d, ., getHeight, (, ), ), ;, Shape, rotatedBounds, =, ShapeUtilities, ., rotateShape, (, bounds, ,, angle, ,, rotateX]
[., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Shape, rotatedBounds, =, ShapeUtilities, ., rotateShape, (, bounds]
[), ;, Shape, rotatedBounds, =, ShapeUtilities, ., rotateShape, (, bounds, ,, angle, ,, rotateX, ,, rotateY, ), ;, return, rotatedBounds]
[., getHeight, (, ), ), ;, Shape, rotatedBounds, =, ShapeUtilities, ., rotateShape, (, bounds, ,, angle, ,, rotateX, ,, rotateY]
[;, return, rotatedBounds, ;, }, public, void, draw, (, Graphics2D, g2, ,, float, x, ,, float, y, ,, TextBlockAnchor, anchor]
[., rotateShape, (, bounds, ,, angle, ,, rotateX, ,, rotateY, ), ;, return, rotatedBounds, ;, }, public, void, draw, (]
[,, angle, ,, rotateX, ,, rotateY, ), ;, return, rotatedBounds, ;, }, public, void, draw, (, Graphics2D, g2, ,, float]
[,, rotateX, ,, rotateY, ), ;, return, rotatedBounds, ;, }, public, void, draw, (, Graphics2D, g2, ,, float, x, ,]
[,, rotateY, ), ;, return, rotatedBounds, ;, }, public, void, draw, (, Graphics2D, g2, ,, float, x, ,, float, y]
[), ;, return, rotatedBounds, ;, }, public, void, draw, (, Graphics2D, g2, ,, float, x, ,, float, y, ,, TextBlockAnchor]
[;, }, public, void, draw, (, Graphics2D, g2, ,, float, x, ,, float, y, ,, TextBlockAnchor, anchor, ), {, draw]
[;, }, public, void, draw, (, Graphics2D, g2, ,, float, anchorX, ,, float, anchorY, ,, TextBlockAnchor, anchor, ,, float, rotateX]
[,, x, ,, y, ,, anchor, ,, 0.0f, ,, 0.0f, ,, 0.0, ), ;, }, public, void, draw, (, Graphics2D]
[,, y, ,, anchor, ,, 0.0f, ,, 0.0f, ,, 0.0, ), ;, }, public, void, draw, (, Graphics2D, g2, ,]
[,, anchor, ,, 0.0f, ,, 0.0f, ,, 0.0, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, float, anchorX]
[,, 0.0f, ,, 0.0f, ,, 0.0, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, float, anchorX, ,, float]
[,, 0.0f, ,, 0.0, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, float, anchorX, ,, float, anchorY, ,]
[,, 0.0, ), ;, }, public, void, draw, (, Graphics2D, g2, ,, float, anchorX, ,, float, anchorY, ,, TextBlockAnchor, anchor]
[), ;, }, public, void, draw, (, Graphics2D, g2, ,, float, anchorX, ,, float, anchorY, ,, TextBlockAnchor, anchor, ,, float]
[;, float, [, ], offsets, =, calculateOffsets, (, anchor, ,, d, ., getWidth, (, ), ,, d, ., getHeight, (]
[), ;, float, [, ], offsets, =, calculateOffsets, (, anchor, ,, d, ., getWidth, (, ), ,, d, ., getHeight]
[;, Iterator, iterator, =, this, ., lines, ., iterator, (, ), ;, float, yCursor, =, 0.0f, ;, while, (, iterator]
[,, d, ., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Iterator, iterator, =, this, ., lines]
[,, d, ., getHeight, (, ), ), ;, Iterator, iterator, =, this, ., lines, ., iterator, (, ), ;, float]
[., getWidth, (, ), ,, d, ., getHeight, (, ), ), ;, Iterator, iterator, =, this, ., lines, ., iterator]
[), ;, Iterator, iterator, =, this, ., lines, ., iterator, (, ), ;, float, yCursor, =, 0.0f, ;, while, (]
[., getHeight, (, ), ), ;, Iterator, iterator, =, this, ., lines, ., iterator, (, ), ;, float, yCursor, =]
[;, float, yCursor, =, 0.0f, ;, while, (, iterator, ., hasNext, (, ), ), {, TextLine, line, =, (, TextLine]
[., iterator, (, ), ;, float, yCursor, =, 0.0f, ;, while, (, iterator, ., hasNext, (, ), ), {, TextLine]
[., lines, ., iterator, (, ), ;, float, yCursor, =, 0.0f, ;, while, (, iterator, ., hasNext, (, ), )]
[;, while, (, iterator, ., hasNext, (, ), ), {, TextLine, line, =, (, TextLine, ), iterator, ., next, (]
[), {, TextLine, line, =, (, TextLine, ), iterator, ., next, (, ), ;, Size2D, dimension, =, line, ., calculateDimensions]
[., hasNext, (, ), ), {, TextLine, line, =, (, TextLine, ), iterator, ., next, (, ), ;, Size2D, dimension]
[;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, float, lineOffset, =, 0.0f, ;, if, (, this, .]
[;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, float, lineOffset, =, 0.0f, ;, if, (, this, .]
[., next, (, ), ;, Size2D, dimension, =, line, ., calculateDimensions, (, g2, ), ;, float, lineOffset, =, 0.0f, ;]
[;, float, lineOffset, =, 0.0f, ;, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., CENTER, ), {, lineOffset, =, (]
[., calculateDimensions, (, g2, ), ;, float, lineOffset, =, 0.0f, ;, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., CENTER]
[), ;, float, lineOffset, =, 0.0f, ;, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., CENTER, ), {, lineOffset, =]
[;, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., CENTER, ), {, lineOffset, =, (, float, ), (, d, .]
[), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), )]
[==, HorizontalAlignment, ., CENTER, ), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -, dimension, .]
[., lineAlignment, ==, HorizontalAlignment, ., CENTER, ), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -]
[), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), )]
[., CENTER, ), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -, dimension, ., getWidth, (]
[=, (, float, ), (, d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), ), /, 2.0f, ;]
[;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (, float, ), (]
[/, 2.0f, ;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (, float]
[/, 2.0f, ;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (, float]
[), /, 2.0f, ;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (]
[-, dimension, ., getWidth, (, ), ), /, 2.0f, ;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, .]
[., getWidth, (, ), -, dimension, ., getWidth, (, ), ), /, 2.0f, ;, }, else, if, (, this, .]
[), /, 2.0f, ;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (]
[., getWidth, (, ), ), /, 2.0f, ;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., RIGHT, )]
[;, }, else, if, (, this, ., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (, float, ), (]
[), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), )]
[==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -, dimension, .]
[., lineAlignment, ==, HorizontalAlignment, ., RIGHT, ), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -]
[), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), )]
[., RIGHT, ), {, lineOffset, =, (, float, ), (, d, ., getWidth, (, ), -, dimension, ., getWidth, (]
[=, (, float, ), (, d, ., getWidth, (, ), -, dimension, ., getWidth, (, ), ), ;, }, line]
[;, }, line, ., draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,, anchorY, +, offsets]
[;, }, line, ., draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,, anchorY, +, offsets]
[), ;, }, line, ., draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,, anchorY, +]
[-, dimension, ., getWidth, (, ), ), ;, }, line, ., draw, (, g2, ,, anchorX, +, offsets, [, 0]
[., getWidth, (, ), -, dimension, ., getWidth, (, ), ), ;, }, line, ., draw, (, g2, ,, anchorX]
[), ;, }, line, ., draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,, anchorY, +]
[., getWidth, (, ), ), ;, }, line, ., draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +]
[;, yCursor, =, yCursor, +, (, float, ), dimension, ., getHeight, (, ), ;, }, }, private, float, [, ]]
[., draw, (, g2, ,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,, anchorY, +, offsets, [, 1, ]]
[,, anchorX, +, offsets, [, 0, ], +, lineOffset, ,, anchorY, +, offsets, [, 1, ], +, yCursor, ,, TextAnchor]
[,, anchorY, +, offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, )]
[+, lineOffset, ,, anchorY, +, offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,]
[+, offsets, [, 0, ], +, lineOffset, ,, anchorY, +, offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT]
[+, lineOffset, ,, anchorY, +, offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,]
[[, 0, ], +, lineOffset, ,, anchorY, +, offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX]
[], +, lineOffset, ,, anchorY, +, offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY]
[,, anchorY, +, offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, )]
[,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor, =, yCursor, +, (, float, ), dimension]
[+, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor, =, yCursor, +, (, float]
[+, offsets, [, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor]
[+, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor, =, yCursor, +, (, float]
[[, 1, ], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor, =, yCursor]
[], +, yCursor, ,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor, =, yCursor, +, (]
[,, TextAnchor, ., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor, =, yCursor, +, (, float, ), dimension]
[,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor, =, yCursor, +, (, float, ), dimension, ., getHeight, (, )]
[., TOP_LEFT, ,, rotateX, ,, rotateY, ,, angle, ), ;, yCursor, =, yCursor, +, (, float, ), dimension, ., getHeight]
[,, rotateY, ,, angle, ), ;, yCursor, =, yCursor, +, (, float, ), dimension, ., getHeight, (, ), ;, }]
[,, angle, ), ;, yCursor, =, yCursor, +, (, float, ), dimension, ., getHeight, (, ), ;, }, }, private]
[), ;, yCursor, =, yCursor, +, (, float, ), dimension, ., getHeight, (, ), ;, }, }, private, float, []
[=, yCursor, +, (, float, ), dimension, ., getHeight, (, ), ;, }, }, private, float, [, ], calculateOffsets, (]
[;, }, }, private, float, [, ], calculateOffsets, (, TextBlockAnchor, anchor, ,, double, width, ,, double, height, ), {, float]
[+, (, float, ), dimension, ., getHeight, (, ), ;, }, }, private, float, [, ], calculateOffsets, (, TextBlockAnchor, anchor]
[;, }, }, private, float, [, ], calculateOffsets, (, TextBlockAnchor, anchor, ,, double, width, ,, double, height, ), {, float]
[;, }, }, private, float, [, ], calculateOffsets, (, TextBlockAnchor, anchor, ,, double, width, ,, double, height, ), {, float]
[., getHeight, (, ), ;, }, }, private, float, [, ], calculateOffsets, (, TextBlockAnchor, anchor, ,, double, width, ,, double]
[;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor]
[], ;, float, xAdj, =, 0.0f, ;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||]
[;, float, yAdj, =, 0.0f, ;, if, (, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||]
[;, if, (, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER]
[), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, .]
[||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else]
[||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -]
[==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =]
[||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -]
[., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float]
[||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else]
[==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /]
[||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else]
[., CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;]
[), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, .]
[==, TextBlockAnchor, ., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else, if, (]
[), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, .]
[., BOTTOM_CENTER, ), {, xAdj, =, (, float, ), -, width, /, 2.0f, ;, }, else, if, (, anchor, ==]
[=, (, float, ), -, width, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor]
[;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor]
[;, }, else, if, (, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor]
[), {, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor]
[||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor]
[||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -]
[==, TextBlockAnchor, ., TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =]
[||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -]
[., TOP_RIGHT, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float]
[||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor]
[==, TextBlockAnchor, ., CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;]
[||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor]
[., CENTER_RIGHT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if]
[), {, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor]
[==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor, ==, TextBlockAnchor]
[), {, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor]
[., BOTTOM_RIGHT, ), {, xAdj, =, (, float, ), -, width, ;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT]
[=, (, float, ), -, width, ;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor, ==, TextBlockAnchor, .]
[;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, .]
[;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, .]
[;, }, if, (, anchor, ==, TextBlockAnchor, ., TOP_LEFT, ||, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, .]
[), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, .]
[||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, .]
[||, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else]
[==, TextBlockAnchor, ., TOP_LEFT, ||, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else]
[., TOP_LEFT, ||, anchor, ==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;]
[||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, .]
[==, TextBlockAnchor, ., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (]
[||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, .]
[., TOP_CENTER, ||, anchor, ==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==]
[), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, .]
[==, TextBlockAnchor, ., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||]
[), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, .]
[., TOP_RIGHT, ), {, yAdj, =, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==]
[=, 0.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor]
[;, }, else, if, (, anchor, ==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor]
[), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, .]
[||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else]
[||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -]
[==, TextBlockAnchor, ., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -]
[., CENTER_LEFT, ||, anchor, ==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float]
[||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else]
[==, TextBlockAnchor, ., CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /]
[||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else]
[., CENTER, ||, anchor, ==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;]
[), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, .]
[==, TextBlockAnchor, ., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else, if, (]
[), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, .]
[., CENTER_RIGHT, ), {, yAdj, =, (, float, ), -, height, /, 2.0f, ;, }, else, if, (, anchor, ==]
[=, (, float, ), -, height, /, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor]
[;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor]
[/, 2.0f, ;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor]
[;, }, else, if, (, anchor, ==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor]
[), {, yAdj, =, (, float, ), -, height, ;, }, result, [, 0, ], =, xAdj, ;, result, []
[||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -, height, ;, }, result, [, 0]
[||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -]
[==, TextBlockAnchor, ., BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =]
[||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -]
[., BOTTOM_LEFT, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float]
[||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -, height, ;, }, result, [, 0]
[==, TextBlockAnchor, ., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -, height, ;]
[||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -, height, ;, }, result, [, 0]
[., BOTTOM_CENTER, ||, anchor, ==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -, height, ;, }, result]
[), {, yAdj, =, (, float, ), -, height, ;, }, result, [, 0, ], =, xAdj, ;, result, []
[==, TextBlockAnchor, ., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -, height, ;, }, result, [, 0, ], =]
[), {, yAdj, =, (, float, ), -, height, ;, }, result, [, 0, ], =, xAdj, ;, result, []
[., BOTTOM_RIGHT, ), {, yAdj, =, (, float, ), -, height, ;, }, result, [, 0, ], =, xAdj, ;]
[=, (, float, ), -, height, ;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =]
[;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }]
[;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }]
[;, }, result, [, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }]
[=, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, public, boolean, equals, (, Object, obj]
[[, 0, ], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, public, boolean, equals]
[], =, xAdj, ;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, public, boolean, equals, (, Object]
[;, result, [, 1, ], =, yAdj, ;, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {]
[=, yAdj, ;, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this]
[[, 1, ], =, yAdj, ;, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[], =, yAdj, ;, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==]
[;, return, result, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {]
[;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, ==, this, ), {, return, true, ;]
[), {, return, true, ;, }, if, (, obj, instanceof, TextBlock, ), {, final, TextBlock, block, =, (, TextBlock, )]
[==, this, ), {, return, true, ;, }, if, (, obj, instanceof, TextBlock, ), {, final, TextBlock, block, =, (]
[), {, return, true, ;, }, if, (, obj, instanceof, TextBlock, ), {, final, TextBlock, block, =, (, TextBlock, )]
[;, }, if, (, obj, instanceof, TextBlock, ), {, final, TextBlock, block, =, (, TextBlock, ), obj, ;, return, this]
[), {, final, TextBlock, block, =, (, TextBlock, ), obj, ;, return, this, ., lines, ., equals, (, block, .]
[instanceof, TextBlock, ), {, final, TextBlock, block, =, (, TextBlock, ), obj, ;, return, this, ., lines, ., equals, (]
[;, return, this, ., lines, ., equals, (, block, ., lines, ), ;, }, return, false, ;, }, public, int]
[;, return, this, ., lines, ., equals, (, block, ., lines, ), ;, }, return, false, ;, }, public, int]
[;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., lines, !=, null, ?]
[., equals, (, block, ., lines, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return]
[., lines, ., equals, (, block, ., lines, ), ;, }, return, false, ;, }, public, int, hashCode, (, )]
[), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., lines, !=, null]
[., lines, ), ;, }, return, false, ;, }, public, int, hashCode, (, ), {, return, (, this, ., lines]
[;, }, public, int, hashCode, (, ), {, return, (, this, ., lines, !=, null, ?, this, ., lines, .]
[;, }, }]
[), ;, }, }]
[?, this, ., lines, ., hashCode, (, ), :, 0, ), ;, }, }]
[!=, null, ?, this, ., lines, ., hashCode, (, ), :, 0, ), ;, }, }]
[., lines, !=, null, ?, this, ., lines, ., hashCode, (, ), :, 0, ), ;, }, }]
[?, this, ., lines, ., hashCode, (, ), :, 0, ), ;, }, }]
[:, 0, ), ;, }, }]
[., hashCode, (, ), :, 0, ), ;, }, }]
[., lines, ., hashCode, (, ), :, 0, ), ;, }, }]
[), ;, }, }]
