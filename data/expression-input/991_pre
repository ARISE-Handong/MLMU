[private, RealMatrix, weightMatrix, ;, private, MultivariateVectorFunction, model, ;, protected, MultivariateVectorOptimizer, (, ConvergenceChecker, <, PointVectorValuePair, >, checker, ), {, super, (]
[), {, super, (, checker, ), ;, }, protected, double, [, ], computeObjectiveValue, (, double, [, ], params, ), {]
[), {, super, (, checker, ), ;, }, protected, double, [, ], computeObjectiveValue, (, double, [, ], params, ), {]
[}, protected, double, [, ], computeObjectiveValue, (, double, [, ], params, ), {, super, ., incrementEvaluationCount, (, ), ;, return]
[}, protected, double, [, ], computeObjectiveValue, (, double, [, ], params, ), {, super, ., incrementEvaluationCount, (, ), ;, return]
[], computeObjectiveValue, (, double, [, ], params, ), {, super, ., incrementEvaluationCount, (, ), ;, return, model, ., value, (]
[params, ), ;, }, @, Override, public, PointVectorValuePair, optimize, (, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, return]
[params, ), ;, }, @, Override, public, PointVectorValuePair, optimize, (, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, return]
[@, Override, public, PointVectorValuePair, optimize, (, OptimizationData, ..., optData, ), throws, TooManyEvaluationsException, ,, DimensionMismatchException, {, return, super, ., optimize, (]
[TooManyEvaluationsException, ,, DimensionMismatchException, {, return, super, ., optimize, (, optData, ), ;, }, public, RealMatrix, getWeight, (, ), {, return]
[TooManyEvaluationsException, ,, DimensionMismatchException, {, return, super, ., optimize, (, optData, ), ;, }, public, RealMatrix, getWeight, (, ), {, return]
[(, ), {, return, weightMatrix, ., copy, (, ), ;, }, public, double, [, ], getTarget, (, ), {, return]
[(, ), {, return, weightMatrix, ., copy, (, ), ;, }, public, double, [, ], getTarget, (, ), {, return]
[], getTarget, (, ), {, return, target, ., clone, (, ), ;, }, public, int, getTargetSize, (, ), {, return]
[], getTarget, (, ), {, return, target, ., clone, (, ), ;, }, public, int, getTargetSize, (, ), {, return]
[(, ), {, return, target, ., length, ;, }, @, Override, protected, void, parseOptimizationData, (, OptimizationData, ..., optData, ), {]
[(, ), {, return, target, ., length, ;, }, @, Override, protected, void, parseOptimizationData, (, OptimizationData, ..., optData, ), {]
[target, ., length, ;, }, @, Override, protected, void, parseOptimizationData, (, OptimizationData, ..., optData, ), {, super, ., parseOptimizationData, (]
[void, parseOptimizationData, (, OptimizationData, ..., optData, ), {, super, ., parseOptimizationData, (, optData, ), ;, for, (, OptimizationData, data, :]
[optData, ), {, super, ., parseOptimizationData, (, optData, ), ;, for, (, OptimizationData, data, :, optData, ), {, if, (]
[optData, ), {, super, ., parseOptimizationData, (, optData, ), ;, for, (, OptimizationData, data, :, optData, ), {, if, (]
[parseOptimizationData, (, optData, ), ;, for, (, OptimizationData, data, :, optData, ), {, if, (, data, instanceof, ModelFunction, ), {]
[optData, ), ;, for, (, OptimizationData, data, :, optData, ), {, if, (, data, instanceof, ModelFunction, ), {, model, =]
[optData, ), ;, for, (, OptimizationData, data, :, optData, ), {, if, (, data, instanceof, ModelFunction, ), {, model, =]
[), ;, for, (, OptimizationData, data, :, optData, ), {, if, (, data, instanceof, ModelFunction, ), {, model, =, (]
[(, OptimizationData, data, :, optData, ), {, if, (, data, instanceof, ModelFunction, ), {, model, =, (, (, ModelFunction, )]
[), {, model, =, (, (, ModelFunction, ), data, ), ., getModelFunction, (, ), ;, continue, ;, }, if, (]
[), {, model, =, (, (, ModelFunction, ), data, ), ., getModelFunction, (, ), ;, continue, ;, }, if, (]
[(, ModelFunction, ), data, ), ., getModelFunction, (, ), ;, continue, ;, }, if, (, data, instanceof, Target, ), {]
[), data, ), ., getModelFunction, (, ), ;, continue, ;, }, if, (, data, instanceof, Target, ), {, target, =]
[), data, ), ., getModelFunction, (, ), ;, continue, ;, }, if, (, data, instanceof, Target, ), {, target, =]
[data, ), ., getModelFunction, (, ), ;, continue, ;, }, if, (, data, instanceof, Target, ), {, target, =, (]
[getModelFunction, (, ), ;, continue, ;, }, if, (, data, instanceof, Target, ), {, target, =, (, (, Target, )]
[), {, target, =, (, (, Target, ), data, ), ., getTarget, (, ), ;, continue, ;, }, if, (]
[), {, target, =, (, (, Target, ), data, ), ., getTarget, (, ), ;, continue, ;, }, if, (]
[(, Target, ), data, ), ., getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight, ), {]
[), data, ), ., getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight, ), {, weightMatrix, =]
[), data, ), ., getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight, ), {, weightMatrix, =]
[data, ), ., getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight, ), {, weightMatrix, =, (]
[getTarget, (, ), ;, continue, ;, }, if, (, data, instanceof, Weight, ), {, weightMatrix, =, (, (, Weight, )]
[Weight, ), {, weightMatrix, =, (, (, Weight, ), data, ), ., getWeight, (, ), ;, continue, ;, }, }]
[(, ), ;, continue, ;, }, }, checkParameters, (, ), ;, }, private, void, checkParameters, (, ), {, if, (]
[(, ), ;, continue, ;, }, }, checkParameters, (, ), ;, }, private, void, checkParameters, (, ), {, if, (]
[(, ), ;, continue, ;, }, }, checkParameters, (, ), ;, }, private, void, checkParameters, (, ), {, if, (]
[;, }, }, checkParameters, (, ), ;, }, private, void, checkParameters, (, ), {, if, (, target, ., length, !=]
[;, }, }, checkParameters, (, ), ;, }, private, void, checkParameters, (, ), {, if, (, target, ., length, !=]
[private, void, checkParameters, (, ), {, if, (, target, ., length, !=, weightMatrix, ., getColumnDimension, (, ), ), {, throw]
[(, ), {, if, (, target, ., length, !=, weightMatrix, ., getColumnDimension, (, ), ), {, throw, new, DimensionMismatchException, (]
[(, ), {, if, (, target, ., length, !=, weightMatrix, ., getColumnDimension, (, ), ), {, throw, new, DimensionMismatchException, (]
[(, target, ., length, !=, weightMatrix, ., getColumnDimension, (, ), ), {, throw, new, DimensionMismatchException, (, target, ., length, ,]
[(, target, ., length, !=, weightMatrix, ., getColumnDimension, (, ), ), {, throw, new, DimensionMismatchException, (, target, ., length, ,]
