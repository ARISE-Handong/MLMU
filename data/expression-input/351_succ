[;, private, double, anchorX, ;, private, double, anchorY, ;, private, Point2D, anchor, ;, private, double, crosshairX, ;, private, double, crosshairY]
[), ;, }, public, CrosshairState, (, boolean, calculateDistanceInDataSpace, ), {, this, ., calculateDistanceInDataSpace, =, calculateDistanceInDataSpace, ;, }, public, double, getCrosshairDistance]
[=, calculateDistanceInDataSpace, ;, }, public, double, getCrosshairDistance, (, ), {, return, this, ., distance, ;, }, public, void, setCrosshairDistance, (]
[., calculateDistanceInDataSpace, =, calculateDistanceInDataSpace, ;, }, public, double, getCrosshairDistance, (, ), {, return, this, ., distance, ;, }, public, void]
[;, }, public, double, getCrosshairDistance, (, ), {, return, this, ., distance, ;, }, public, void, setCrosshairDistance, (, double, distance]
[;, }, public, void, setCrosshairDistance, (, double, distance, ), {, this, ., distance, =, distance, ;, }, public, void, updateCrosshairPoint]
[., distance, ;, }, public, void, setCrosshairDistance, (, double, distance, ), {, this, ., distance, =, distance, ;, }, public]
[=, distance, ;, }, public, void, updateCrosshairPoint, (, double, x, ,, double, y, ,, double, transX, ,, double, transY, ,]
[., distance, =, distance, ;, }, public, void, updateCrosshairPoint, (, double, x, ,, double, y, ,, double, transX, ,, double]
[;, }, public, void, updateCrosshairPoint, (, double, x, ,, double, y, ,, double, transX, ,, double, transY, ,, PlotOrientation, orientation]
[;, }, public, void, updateCrosshairPoint, (, double, x, ,, double, y, ,, int, domainAxisIndex, ,, int, rangeAxisIndex, ,, double, transX]
[,, y, ,, 0, ,, 0, ,, transX, ,, transY, ,, orientation, ), ;, }, public, void, updateCrosshairPoint, (, double]
[,, 0, ,, 0, ,, transX, ,, transY, ,, orientation, ), ;, }, public, void, updateCrosshairPoint, (, double, x, ,]
[,, 0, ,, transX, ,, transY, ,, orientation, ), ;, }, public, void, updateCrosshairPoint, (, double, x, ,, double, y]
[,, transX, ,, transY, ,, orientation, ), ;, }, public, void, updateCrosshairPoint, (, double, x, ,, double, y, ,, int]
[,, transY, ,, orientation, ), ;, }, public, void, updateCrosshairPoint, (, double, x, ,, double, y, ,, int, domainAxisIndex, ,]
[,, orientation, ), ;, }, public, void, updateCrosshairPoint, (, double, x, ,, double, y, ,, int, domainAxisIndex, ,, int, rangeAxisIndex]
[), ;, }, public, void, updateCrosshairPoint, (, double, x, ,, double, y, ,, int, domainAxisIndex, ,, int, rangeAxisIndex, ,, double]
[), {, double, d, =, 0.0, ;, if, (, this, ., calculateDistanceInDataSpace, ), {, d, =, (, x, -, this]
[!=, null, ), {, double, d, =, 0.0, ;, if, (, this, ., calculateDistanceInDataSpace, ), {, d, =, (, x]
[., anchor, !=, null, ), {, double, d, =, 0.0, ;, if, (, this, ., calculateDistanceInDataSpace, ), {, d, =]
[), {, double, d, =, 0.0, ;, if, (, this, ., calculateDistanceInDataSpace, ), {, d, =, (, x, -, this]
[;, if, (, this, ., calculateDistanceInDataSpace, ), {, d, =, (, x, -, this, ., anchorX, ), *, (, x]
[), {, d, =, (, x, -, this, ., anchorX, ), *, (, x, -, this, ., anchorX, ), +]
[., calculateDistanceInDataSpace, ), {, d, =, (, x, -, this, ., anchorX, ), *, (, x, -, this, ., anchorX]
[=, (, x, -, this, ., anchorX, ), *, (, x, -, this, ., anchorX, ), +, (, y, -]
[;, }, else, {, double, xx, =, this, ., anchor, ., getX, (, ), ;, double, yy, =, this, .]
[+, (, y, -, this, ., anchorY, ), *, (, y, -, this, ., anchorY, ), ;, }, else, {]
[*, (, x, -, this, ., anchorX, ), +, (, y, -, this, ., anchorY, ), *, (, y, -]
[), *, (, x, -, this, ., anchorX, ), +, (, y, -, this, ., anchorY, ), *, (, y]
[-, this, ., anchorX, ), *, (, x, -, this, ., anchorX, ), +, (, y, -, this, ., anchorY]
[), *, (, x, -, this, ., anchorX, ), +, (, y, -, this, ., anchorY, ), *, (, y]
[., anchorX, ), *, (, x, -, this, ., anchorX, ), +, (, y, -, this, ., anchorY, ), *]
[+, (, y, -, this, ., anchorY, ), *, (, y, -, this, ., anchorY, ), ;, }, else, {]
[), +, (, y, -, this, ., anchorY, ), *, (, y, -, this, ., anchorY, ), ;, }, else]
[-, this, ., anchorX, ), +, (, y, -, this, ., anchorY, ), *, (, y, -, this, ., anchorY]
[), +, (, y, -, this, ., anchorY, ), *, (, y, -, this, ., anchorY, ), ;, }, else]
[., anchorX, ), +, (, y, -, this, ., anchorY, ), *, (, y, -, this, ., anchorY, ), ;]
[;, }, else, {, double, xx, =, this, ., anchor, ., getX, (, ), ;, double, yy, =, this, .]
[*, (, y, -, this, ., anchorY, ), ;, }, else, {, double, xx, =, this, ., anchor, ., getX]
[), *, (, y, -, this, ., anchorY, ), ;, }, else, {, double, xx, =, this, ., anchor, .]
[-, this, ., anchorY, ), *, (, y, -, this, ., anchorY, ), ;, }, else, {, double, xx, =]
[), *, (, y, -, this, ., anchorY, ), ;, }, else, {, double, xx, =, this, ., anchor, .]
[., anchorY, ), *, (, y, -, this, ., anchorY, ), ;, }, else, {, double, xx, =, this, .]
[;, }, else, {, double, xx, =, this, ., anchor, ., getX, (, ), ;, double, yy, =, this, .]
[), ;, }, else, {, double, xx, =, this, ., anchor, ., getX, (, ), ;, double, yy, =, this]
[-, this, ., anchorY, ), ;, }, else, {, double, xx, =, this, ., anchor, ., getX, (, ), ;]
[), ;, }, else, {, double, xx, =, this, ., anchor, ., getX, (, ), ;, double, yy, =, this]
[., anchorY, ), ;, }, else, {, double, xx, =, this, ., anchor, ., getX, (, ), ;, double, yy]
[;, double, yy, =, this, ., anchor, ., getY, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, )]
[., getX, (, ), ;, double, yy, =, this, ., anchor, ., getY, (, ), ;, if, (, orientation, ==]
[., anchor, ., getX, (, ), ;, double, yy, =, this, ., anchor, ., getY, (, ), ;, if, (]
[;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, double, temp, =, yy, ;, yy, =, xx, ;, xx]
[., getY, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, double, temp, =, yy, ;, yy]
[., anchor, ., getY, (, ), ;, if, (, orientation, ==, PlotOrientation, ., HORIZONTAL, ), {, double, temp, =, yy]
[), {, double, temp, =, yy, ;, yy, =, xx, ;, xx, =, temp, ;, }, d, =, (, transX]
[==, PlotOrientation, ., HORIZONTAL, ), {, double, temp, =, yy, ;, yy, =, xx, ;, xx, =, temp, ;, }]
[), {, double, temp, =, yy, ;, yy, =, xx, ;, xx, =, temp, ;, }, d, =, (, transX]
[., HORIZONTAL, ), {, double, temp, =, yy, ;, yy, =, xx, ;, xx, =, temp, ;, }, d, =]
[;, yy, =, xx, ;, xx, =, temp, ;, }, d, =, (, transX, -, xx, ), *, (, transX]
[=, xx, ;, xx, =, temp, ;, }, d, =, (, transX, -, xx, ), *, (, transX, -, xx]
[;, xx, =, temp, ;, }, d, =, (, transX, -, xx, ), *, (, transX, -, xx, ), +]
[=, temp, ;, }, d, =, (, transX, -, xx, ), *, (, transX, -, xx, ), +, (, transY]
[;, }, d, =, (, transX, -, xx, ), *, (, transX, -, xx, ), +, (, transY, -, yy]
[=, (, transX, -, xx, ), *, (, transX, -, xx, ), +, (, transY, -, yy, ), *, (]
[;, }, if, (, d, <, this, ., distance, ), {, this, ., crosshairX, =, x, ;, this, ., crosshairY]
[+, (, transY, -, yy, ), *, (, transY, -, yy, ), ;, }, if, (, d, <, this, .]
[*, (, transX, -, xx, ), +, (, transY, -, yy, ), *, (, transY, -, yy, ), ;, }]
[), *, (, transX, -, xx, ), +, (, transY, -, yy, ), *, (, transY, -, yy, ), ;]
[-, xx, ), *, (, transX, -, xx, ), +, (, transY, -, yy, ), *, (, transY, -, yy]
[), *, (, transX, -, xx, ), +, (, transY, -, yy, ), *, (, transY, -, yy, ), ;]
[+, (, transY, -, yy, ), *, (, transY, -, yy, ), ;, }, if, (, d, <, this, .]
[), +, (, transY, -, yy, ), *, (, transY, -, yy, ), ;, }, if, (, d, <, this]
[-, xx, ), +, (, transY, -, yy, ), *, (, transY, -, yy, ), ;, }, if, (, d]
[), +, (, transY, -, yy, ), *, (, transY, -, yy, ), ;, }, if, (, d, <, this]
[;, }, if, (, d, <, this, ., distance, ), {, this, ., crosshairX, =, x, ;, this, ., crosshairY]
[*, (, transY, -, yy, ), ;, }, if, (, d, <, this, ., distance, ), {, this, ., crosshairX]
[), *, (, transY, -, yy, ), ;, }, if, (, d, <, this, ., distance, ), {, this, .]
[-, yy, ), *, (, transY, -, yy, ), ;, }, if, (, d, <, this, ., distance, ), {]
[), *, (, transY, -, yy, ), ;, }, if, (, d, <, this, ., distance, ), {, this, .]
[;, }, if, (, d, <, this, ., distance, ), {, this, ., crosshairX, =, x, ;, this, ., crosshairY]
[), ;, }, if, (, d, <, this, ., distance, ), {, this, ., crosshairX, =, x, ;, this, .]
[-, yy, ), ;, }, if, (, d, <, this, ., distance, ), {, this, ., crosshairX, =, x, ;]
[), ;, }, if, (, d, <, this, ., distance, ), {, this, ., crosshairX, =, x, ;, this, .]
[), {, this, ., crosshairX, =, x, ;, this, ., crosshairY, =, y, ;, this, ., domainAxisIndex, =, domainAxisIndex, ;]
[<, this, ., distance, ), {, this, ., crosshairX, =, x, ;, this, ., crosshairY, =, y, ;, this, .]
[), {, this, ., crosshairX, =, x, ;, this, ., crosshairY, =, y, ;, this, ., domainAxisIndex, =, domainAxisIndex, ;]
[., distance, ), {, this, ., crosshairX, =, x, ;, this, ., crosshairY, =, y, ;, this, ., domainAxisIndex, =]
[=, x, ;, this, ., crosshairY, =, y, ;, this, ., domainAxisIndex, =, domainAxisIndex, ;, this, ., rangeAxisIndex, =, rangeAxisIndex]
[., crosshairX, =, x, ;, this, ., crosshairY, =, y, ;, this, ., domainAxisIndex, =, domainAxisIndex, ;, this, ., rangeAxisIndex]
[;, this, ., crosshairY, =, y, ;, this, ., domainAxisIndex, =, domainAxisIndex, ;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this]
[=, y, ;, this, ., domainAxisIndex, =, domainAxisIndex, ;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance, =, d]
[., crosshairY, =, y, ;, this, ., domainAxisIndex, =, domainAxisIndex, ;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance]
[;, this, ., domainAxisIndex, =, domainAxisIndex, ;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance, =, d, ;, }]
[=, domainAxisIndex, ;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance, =, d, ;, }, }, }, public, void]
[., domainAxisIndex, =, domainAxisIndex, ;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance, =, d, ;, }, }, }]
[;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance, =, d, ;, }, }, }, public, void, updateCrosshairX, (]
[=, rangeAxisIndex, ;, this, ., distance, =, d, ;, }, }, }, public, void, updateCrosshairX, (, double, candidateX, ), {]
[., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance, =, d, ;, }, }, }, public, void, updateCrosshairX, (, double, candidateX]
[;, this, ., distance, =, d, ;, }, }, }, public, void, updateCrosshairX, (, double, candidateX, ), {, updateCrosshairX, (]
[=, d, ;, }, }, }, public, void, updateCrosshairX, (, double, candidateX, ), {, updateCrosshairX, (, candidateX, ,, 0, )]
[., distance, =, d, ;, }, }, }, public, void, updateCrosshairX, (, double, candidateX, ), {, updateCrosshairX, (, candidateX, ,]
[;, }, }, }, public, void, updateCrosshairX, (, double, candidateX, ), {, updateCrosshairX, (, candidateX, ,, 0, ), ;, }]
[;, }, public, void, updateCrosshairX, (, double, candidateX, ,, int, domainAxisIndex, ), {, double, d, =, Math, ., abs, (]
[,, 0, ), ;, }, public, void, updateCrosshairX, (, double, candidateX, ,, int, domainAxisIndex, ), {, double, d, =, Math]
[), ;, }, public, void, updateCrosshairX, (, double, candidateX, ,, int, domainAxisIndex, ), {, double, d, =, Math, ., abs]
[;, if, (, d, <, this, ., distance, ), {, this, ., crosshairX, =, candidateX, ;, this, ., domainAxisIndex, =]
[., abs, (, candidateX, -, this, ., anchorX, ), ;, if, (, d, <, this, ., distance, ), {, this]
[), ;, if, (, d, <, this, ., distance, ), {, this, ., crosshairX, =, candidateX, ;, this, ., domainAxisIndex]
[-, this, ., anchorX, ), ;, if, (, d, <, this, ., distance, ), {, this, ., crosshairX, =, candidateX]
[), ;, if, (, d, <, this, ., distance, ), {, this, ., crosshairX, =, candidateX, ;, this, ., domainAxisIndex]
[., anchorX, ), ;, if, (, d, <, this, ., distance, ), {, this, ., crosshairX, =, candidateX, ;, this]
[), {, this, ., crosshairX, =, candidateX, ;, this, ., domainAxisIndex, =, domainAxisIndex, ;, this, ., distance, =, d, ;]
[<, this, ., distance, ), {, this, ., crosshairX, =, candidateX, ;, this, ., domainAxisIndex, =, domainAxisIndex, ;, this, .]
[), {, this, ., crosshairX, =, candidateX, ;, this, ., domainAxisIndex, =, domainAxisIndex, ;, this, ., distance, =, d, ;]
[., distance, ), {, this, ., crosshairX, =, candidateX, ;, this, ., domainAxisIndex, =, domainAxisIndex, ;, this, ., distance, =]
[=, candidateX, ;, this, ., domainAxisIndex, =, domainAxisIndex, ;, this, ., distance, =, d, ;, }, }, public, void, updateCrosshairY]
[., crosshairX, =, candidateX, ;, this, ., domainAxisIndex, =, domainAxisIndex, ;, this, ., distance, =, d, ;, }, }, public]
[;, this, ., domainAxisIndex, =, domainAxisIndex, ;, this, ., distance, =, d, ;, }, }, public, void, updateCrosshairY, (, double]
[=, domainAxisIndex, ;, this, ., distance, =, d, ;, }, }, public, void, updateCrosshairY, (, double, candidateY, ), {, updateCrosshairY]
[., domainAxisIndex, =, domainAxisIndex, ;, this, ., distance, =, d, ;, }, }, public, void, updateCrosshairY, (, double, candidateY, )]
[;, this, ., distance, =, d, ;, }, }, public, void, updateCrosshairY, (, double, candidateY, ), {, updateCrosshairY, (, candidateY]
[=, d, ;, }, }, public, void, updateCrosshairY, (, double, candidateY, ), {, updateCrosshairY, (, candidateY, ,, 0, ), ;]
[., distance, =, d, ;, }, }, public, void, updateCrosshairY, (, double, candidateY, ), {, updateCrosshairY, (, candidateY, ,, 0]
[;, }, }, public, void, updateCrosshairY, (, double, candidateY, ), {, updateCrosshairY, (, candidateY, ,, 0, ), ;, }, public]
[;, }, public, void, updateCrosshairY, (, double, candidateY, ,, int, rangeAxisIndex, ), {, double, d, =, Math, ., abs, (]
[,, 0, ), ;, }, public, void, updateCrosshairY, (, double, candidateY, ,, int, rangeAxisIndex, ), {, double, d, =, Math]
[), ;, }, public, void, updateCrosshairY, (, double, candidateY, ,, int, rangeAxisIndex, ), {, double, d, =, Math, ., abs]
[;, if, (, d, <, this, ., distance, ), {, this, ., crosshairY, =, candidateY, ;, this, ., rangeAxisIndex, =]
[., abs, (, candidateY, -, this, ., anchorY, ), ;, if, (, d, <, this, ., distance, ), {, this]
[), ;, if, (, d, <, this, ., distance, ), {, this, ., crosshairY, =, candidateY, ;, this, ., rangeAxisIndex]
[-, this, ., anchorY, ), ;, if, (, d, <, this, ., distance, ), {, this, ., crosshairY, =, candidateY]
[), ;, if, (, d, <, this, ., distance, ), {, this, ., crosshairY, =, candidateY, ;, this, ., rangeAxisIndex]
[., anchorY, ), ;, if, (, d, <, this, ., distance, ), {, this, ., crosshairY, =, candidateY, ;, this]
[), {, this, ., crosshairY, =, candidateY, ;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance, =, d, ;]
[<, this, ., distance, ), {, this, ., crosshairY, =, candidateY, ;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this, .]
[), {, this, ., crosshairY, =, candidateY, ;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance, =, d, ;]
[., distance, ), {, this, ., crosshairY, =, candidateY, ;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance, =]
[=, candidateY, ;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance, =, d, ;, }, }, public, Point2D, getAnchor]
[., crosshairY, =, candidateY, ;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance, =, d, ;, }, }, public]
[;, this, ., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance, =, d, ;, }, }, public, Point2D, getAnchor, (, )]
[=, rangeAxisIndex, ;, this, ., distance, =, d, ;, }, }, public, Point2D, getAnchor, (, ), {, return, this, .]
[., rangeAxisIndex, =, rangeAxisIndex, ;, this, ., distance, =, d, ;, }, }, public, Point2D, getAnchor, (, ), {, return]
[;, this, ., distance, =, d, ;, }, }, public, Point2D, getAnchor, (, ), {, return, this, ., anchor, ;]
[=, d, ;, }, }, public, Point2D, getAnchor, (, ), {, return, this, ., anchor, ;, }, public, void, setAnchor]
[., distance, =, d, ;, }, }, public, Point2D, getAnchor, (, ), {, return, this, ., anchor, ;, }, public]
[;, }, }, public, Point2D, getAnchor, (, ), {, return, this, ., anchor, ;, }, public, void, setAnchor, (, Point2D]
[;, }, public, void, setAnchor, (, Point2D, anchor, ), {, this, ., anchor, =, anchor, ;, }, public, double, getAnchorX]
[., anchor, ;, }, public, void, setAnchor, (, Point2D, anchor, ), {, this, ., anchor, =, anchor, ;, }, public]
[=, anchor, ;, }, public, double, getAnchorX, (, ), {, return, this, ., anchorX, ;, }, public, void, setAnchorX, (]
[., anchor, =, anchor, ;, }, public, double, getAnchorX, (, ), {, return, this, ., anchorX, ;, }, public, void]
[;, }, public, double, getAnchorX, (, ), {, return, this, ., anchorX, ;, }, public, void, setAnchorX, (, double, x]
[;, }, public, void, setAnchorX, (, double, x, ), {, this, ., anchorX, =, x, ;, }, public, double, getAnchorY]
[., anchorX, ;, }, public, void, setAnchorX, (, double, x, ), {, this, ., anchorX, =, x, ;, }, public]
[=, x, ;, }, public, double, getAnchorY, (, ), {, return, this, ., anchorY, ;, }, public, void, setAnchorY, (]
[., anchorX, =, x, ;, }, public, double, getAnchorY, (, ), {, return, this, ., anchorY, ;, }, public, void]
[;, }, public, double, getAnchorY, (, ), {, return, this, ., anchorY, ;, }, public, void, setAnchorY, (, double, y]
[;, }, public, void, setAnchorY, (, double, y, ), {, this, ., anchorY, =, y, ;, }, public, double, getCrosshairX]
[., anchorY, ;, }, public, void, setAnchorY, (, double, y, ), {, this, ., anchorY, =, y, ;, }, public]
[=, y, ;, }, public, double, getCrosshairX, (, ), {, return, this, ., crosshairX, ;, }, public, void, setCrosshairX, (]
[., anchorY, =, y, ;, }, public, double, getCrosshairX, (, ), {, return, this, ., crosshairX, ;, }, public, void]
[;, }, public, double, getCrosshairX, (, ), {, return, this, ., crosshairX, ;, }, public, void, setCrosshairX, (, double, x]
[;, }, public, void, setCrosshairX, (, double, x, ), {, this, ., crosshairX, =, x, ;, }, public, double, getCrosshairY]
[., crosshairX, ;, }, public, void, setCrosshairX, (, double, x, ), {, this, ., crosshairX, =, x, ;, }, public]
[=, x, ;, }, public, double, getCrosshairY, (, ), {, return, this, ., crosshairY, ;, }, public, void, setCrosshairY, (]
[., crosshairX, =, x, ;, }, public, double, getCrosshairY, (, ), {, return, this, ., crosshairY, ;, }, public, void]
[;, }, public, double, getCrosshairY, (, ), {, return, this, ., crosshairY, ;, }, public, void, setCrosshairY, (, double, y]
[;, }, public, void, setCrosshairY, (, double, y, ), {, this, ., crosshairY, =, y, ;, }, public, int, getDatasetIndex]
[., crosshairY, ;, }, public, void, setCrosshairY, (, double, y, ), {, this, ., crosshairY, =, y, ;, }, public]
[=, y, ;, }, public, int, getDatasetIndex, (, ), {, return, this, ., datasetIndex, ;, }, public, void, setDatasetIndex, (]
[., crosshairY, =, y, ;, }, public, int, getDatasetIndex, (, ), {, return, this, ., datasetIndex, ;, }, public, void]
[;, }, public, int, getDatasetIndex, (, ), {, return, this, ., datasetIndex, ;, }, public, void, setDatasetIndex, (, int, index]
[;, }, public, void, setDatasetIndex, (, int, index, ), {, this, ., datasetIndex, =, index, ;, }, public, int, getDomainAxisIndex]
[., datasetIndex, ;, }, public, void, setDatasetIndex, (, int, index, ), {, this, ., datasetIndex, =, index, ;, }, public]
[=, index, ;, }, public, int, getDomainAxisIndex, (, ), {, return, this, ., domainAxisIndex, ;, }, public, int, getRangeAxisIndex, (]
[., datasetIndex, =, index, ;, }, public, int, getDomainAxisIndex, (, ), {, return, this, ., domainAxisIndex, ;, }, public, int]
[;, }, public, int, getDomainAxisIndex, (, ), {, return, this, ., domainAxisIndex, ;, }, public, int, getRangeAxisIndex, (, ), {]
[;, }, public, int, getRangeAxisIndex, (, ), {, return, this, ., rangeAxisIndex, ;, }, }]
[., domainAxisIndex, ;, }, public, int, getRangeAxisIndex, (, ), {, return, this, ., rangeAxisIndex, ;, }, }]
[;, }, }]
[., rangeAxisIndex, ;, }, }]
