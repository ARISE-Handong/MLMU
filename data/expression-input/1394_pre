[java, ., util, ., TimeZone, ;, public, class, Quarter, extends, RegularTimePeriod, implements, Serializable, {, private, static, final, long, serialVersionUID, =]
[Quarter, extends, RegularTimePeriod, implements, Serializable, {, private, static, final, long, serialVersionUID, =, 3810061714380888671L, ;, public, static, final, int, FIRST_QUARTER, =]
[final, long, serialVersionUID, =, 3810061714380888671L, ;, public, static, final, int, FIRST_QUARTER, =, 1, ;, public, static, final, int, LAST_QUARTER, =]
[FIRST_QUARTER, =, 1, ;, public, static, final, int, LAST_QUARTER, =, 4, ;, public, static, final, int, [, ], FIRST_MONTH_IN_QUARTER, =]
[=, 1, ;, public, static, final, int, LAST_QUARTER, =, 4, ;, public, static, final, int, [, ], FIRST_MONTH_IN_QUARTER, =, {]
[;, public, static, final, int, LAST_QUARTER, =, 4, ;, public, static, final, int, [, ], FIRST_MONTH_IN_QUARTER, =, {, 0, ,]
[;, public, static, final, int, LAST_QUARTER, =, 4, ;, public, static, final, int, [, ], FIRST_MONTH_IN_QUARTER, =, {, 0, ,]
[int, LAST_QUARTER, =, 4, ;, public, static, final, int, [, ], FIRST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., JANUARY, ,]
[int, LAST_QUARTER, =, 4, ;, public, static, final, int, [, ], FIRST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., JANUARY, ,]
[;, public, static, final, int, [, ], FIRST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., JANUARY, ,, MonthConstants, ., APRIL, ,]
[;, public, static, final, int, [, ], FIRST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., JANUARY, ,, MonthConstants, ., APRIL, ,]
[int, [, ], FIRST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., JANUARY, ,, MonthConstants, ., APRIL, ,, MonthConstants, ., JULY, ,]
[int, [, ], FIRST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., JANUARY, ,, MonthConstants, ., APRIL, ,, MonthConstants, ., JULY, ,]
[., APRIL, ,, MonthConstants, ., JULY, ,, MonthConstants, ., OCTOBER, }, ;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =]
[APRIL, ,, MonthConstants, ., JULY, ,, MonthConstants, ., OCTOBER, }, ;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =, {]
[MonthConstants, ., JULY, ,, MonthConstants, ., OCTOBER, }, ;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0, ,]
[MonthConstants, ., JULY, ,, MonthConstants, ., OCTOBER, }, ;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0, ,]
[MonthConstants, ., OCTOBER, }, ;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., MARCH, ,]
[MonthConstants, ., OCTOBER, }, ;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., MARCH, ,]
[;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., MARCH, ,, MonthConstants, ., JUNE, ,]
[;, public, static, final, int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., MARCH, ,, MonthConstants, ., JUNE, ,]
[int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., MARCH, ,, MonthConstants, ., JUNE, ,, MonthConstants, ., SEPTEMBER, ,]
[int, [, ], LAST_MONTH_IN_QUARTER, =, {, 0, ,, MonthConstants, ., MARCH, ,, MonthConstants, ., JUNE, ,, MonthConstants, ., SEPTEMBER, ,]
[;, private, byte, quarter, ;, private, long, firstMillisecond, ;, private, long, lastMillisecond, ;, public, Quarter, (, ), {, this, (]
[(, new, Date, (, ), ), ;, }, public, Quarter, (, int, quarter, ,, int, year, ), {, if, (]
[(, new, Date, (, ), ), ;, }, public, Quarter, (, int, quarter, ,, int, year, ), {, if, (]
[new, Date, (, ), ), ;, }, public, Quarter, (, int, quarter, ,, int, year, ), {, if, (, (]
[new, Date, (, ), ), ;, }, public, Quarter, (, int, quarter, ,, int, year, ), {, if, (, (]
[(, ), ), ;, }, public, Quarter, (, int, quarter, ,, int, year, ), {, if, (, (, quarter, <]
[;, }, public, Quarter, (, int, quarter, ,, int, year, ), {, if, (, (, quarter, <, FIRST_QUARTER, ), ||]
[}, public, Quarter, (, int, quarter, ,, int, year, ), {, if, (, (, quarter, <, FIRST_QUARTER, ), ||, (]
[}, public, Quarter, (, int, quarter, ,, int, year, ), {, if, (, (, quarter, <, FIRST_QUARTER, ), ||, (]
[Quarter, (, int, quarter, ,, int, year, ), {, if, (, (, quarter, <, FIRST_QUARTER, ), ||, (, quarter, >]
[int, year, ), {, if, (, (, quarter, <, FIRST_QUARTER, ), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw]
[{, if, (, (, quarter, <, FIRST_QUARTER, ), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (]
[quarter, <, FIRST_QUARTER, ), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }]
[quarter, <, FIRST_QUARTER, ), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }]
[||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =]
[>, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, )]
[), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;]
[), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;]
[new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;, this, ., quarter, =]
["Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ;, this, ., quarter, =, (, byte, )]
[;, }, this, ., year, =, (, short, ), year, ;, this, ., quarter, =, (, byte, ), quarter, ;]
[this, ., year, =, (, short, ), year, ;, this, ., quarter, =, (, byte, ), quarter, ;, peg, (]
[this, ., year, =, (, short, ), year, ;, this, ., quarter, =, (, byte, ), quarter, ;, peg, (]
[Calendar, ., getInstance, (, ), ), ;, }, public, Quarter, (, int, quarter, ,, Year, year, ), {, if, (]
[Calendar, ., getInstance, (, ), ), ;, }, public, Quarter, (, int, quarter, ,, Year, year, ), {, if, (]
[., getInstance, (, ), ), ;, }, public, Quarter, (, int, quarter, ,, Year, year, ), {, if, (, (]
[., getInstance, (, ), ), ;, }, public, Quarter, (, int, quarter, ,, Year, year, ), {, if, (, (]
[(, ), ), ;, }, public, Quarter, (, int, quarter, ,, Year, year, ), {, if, (, (, quarter, <]
[;, }, public, Quarter, (, int, quarter, ,, Year, year, ), {, if, (, (, quarter, <, FIRST_QUARTER, ), ||]
[}, public, Quarter, (, int, quarter, ,, Year, year, ), {, if, (, (, quarter, <, FIRST_QUARTER, ), ||, (]
[}, public, Quarter, (, int, quarter, ,, Year, year, ), {, if, (, (, quarter, <, FIRST_QUARTER, ), ||, (]
[Quarter, (, int, quarter, ,, Year, year, ), {, if, (, (, quarter, <, FIRST_QUARTER, ), ||, (, quarter, >]
[Year, year, ), {, if, (, (, quarter, <, FIRST_QUARTER, ), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw]
[{, if, (, (, quarter, <, FIRST_QUARTER, ), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (]
[quarter, <, FIRST_QUARTER, ), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }]
[quarter, <, FIRST_QUARTER, ), ||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }]
[||, (, quarter, >, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =]
[>, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, )]
[>, LAST_QUARTER, ), ), {, throw, new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, )]
[new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ., getYear, (, ), ;]
[new, IllegalArgumentException, (, "Quarter outside valid range.", ), ;, }, this, ., year, =, (, short, ), year, ., getYear, (, ), ;]
[), ;, }, this, ., year, =, (, short, ), year, ., getYear, (, ), ;, this, ., quarter, =]
[this, ., year, =, (, short, ), year, ., getYear, (, ), ;, this, ., quarter, =, (, byte, )]
[year, =, (, short, ), year, ., getYear, (, ), ;, this, ., quarter, =, (, byte, ), quarter, ;]
[(, short, ), year, ., getYear, (, ), ;, this, ., quarter, =, (, byte, ), quarter, ;, peg, (]
[(, short, ), year, ., getYear, (, ), ;, this, ., quarter, =, (, byte, ), quarter, ;, peg, (]
[;, peg, (, Calendar, ., getInstance, (, ), ), ;, }, public, Quarter, (, Date, time, ), {, this, (]
[(, Calendar, ., getInstance, (, ), ), ;, }, public, Quarter, (, Date, time, ), {, this, (, time, ,]
[(, Calendar, ., getInstance, (, ), ), ;, }, public, Quarter, (, Date, time, ), {, this, (, time, ,]
[TimeZone, ., getDefault, (, ), ), ;, }, public, Quarter, (, Date, time, ,, TimeZone, zone, ), {, this, (]
[getDefault, (, ), ), ;, }, public, Quarter, (, Date, time, ,, TimeZone, zone, ), {, this, (, time, ,]
[), ), ;, }, public, Quarter, (, Date, time, ,, TimeZone, zone, ), {, this, (, time, ,, zone, ,]
[), ), ;, }, public, Quarter, (, Date, time, ,, TimeZone, zone, ), {, this, (, time, ,, zone, ,]
[), ), ;, }, public, Quarter, (, Date, time, ,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =]
[), ), ;, }, public, Quarter, (, Date, time, ,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =]
[public, Quarter, (, Date, time, ,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =, Calendar, ., getInstance, (]
[(, Date, time, ,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ,]
[,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ,, locale, ), ;]
[,, TimeZone, zone, ,, Locale, locale, ), {, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ,, locale, ), ;]
[Locale, locale, ), {, Calendar, calendar, =, Calendar, ., getInstance, (, zone, ,, locale, ), ;, calendar, ., setTime, (]
[=, Calendar, ., getInstance, (, zone, ,, locale, ), ;, calendar, ., setTime, (, time, ), ;, int, month, =]
[=, Calendar, ., getInstance, (, zone, ,, locale, ), ;, calendar, ., setTime, (, time, ), ;, int, month, =]
[=, Calendar, ., getInstance, (, zone, ,, locale, ), ;, calendar, ., setTime, (, time, ), ;, int, month, =]
[(, zone, ,, locale, ), ;, calendar, ., setTime, (, time, ), ;, int, month, =, calendar, ., get, (]
[(, zone, ,, locale, ), ;, calendar, ., setTime, (, time, ), ;, int, month, =, calendar, ., get, (]
[;, calendar, ., setTime, (, time, ), ;, int, month, =, calendar, ., get, (, Calendar, ., MONTH, ), +]
[., setTime, (, time, ), ;, int, month, =, calendar, ., get, (, Calendar, ., MONTH, ), +, 1, ;]
[., setTime, (, time, ), ;, int, month, =, calendar, ., get, (, Calendar, ., MONTH, ), +, 1, ;]
[), ;, int, month, =, calendar, ., get, (, Calendar, ., MONTH, ), +, 1, ;, this, ., quarter, =]
[month, =, calendar, ., get, (, Calendar, ., MONTH, ), +, 1, ;, this, ., quarter, =, (, byte, )]
[month, =, calendar, ., get, (, Calendar, ., MONTH, ), +, 1, ;, this, ., quarter, =, (, byte, )]
[get, (, Calendar, ., MONTH, ), +, 1, ;, this, ., quarter, =, (, byte, ), SerialDate, ., monthCodeToQuarter, (]
[., MONTH, ), +, 1, ;, this, ., quarter, =, (, byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;]
[., MONTH, ), +, 1, ;, this, ., quarter, =, (, byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;]
[1, ;, this, ., quarter, =, (, byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;, this, ., year, =]
[., quarter, =, (, byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;, this, ., year, =, (, short, )]
[., quarter, =, (, byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;, this, ., year, =, (, short, )]
[byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;, this, ., year, =, (, short, ), calendar, ., get, (]
[byte, ), SerialDate, ., monthCodeToQuarter, (, month, ), ;, this, ., year, =, (, short, ), calendar, ., get, (]
[(, month, ), ;, this, ., year, =, (, short, ), calendar, ., get, (, Calendar, ., YEAR, ), ;]
[), ;, this, ., year, =, (, short, ), calendar, ., get, (, Calendar, ., YEAR, ), ;, peg, (]
[get, (, Calendar, ., YEAR, ), ;, peg, (, calendar, ), ;, }, public, int, getQuarter, (, ), {, return]
[get, (, Calendar, ., YEAR, ), ;, peg, (, calendar, ), ;, }, public, int, getQuarter, (, ), {, return]
[}, public, int, getQuarter, (, ), {, return, this, ., quarter, ;, }, public, Year, getYear, (, ), {, return]
[getQuarter, (, ), {, return, this, ., quarter, ;, }, public, Year, getYear, (, ), {, return, new, Year, (]
[getQuarter, (, ), {, return, this, ., quarter, ;, }, public, Year, getYear, (, ), {, return, new, Year, (]
[(, ), {, return, new, Year, (, this, ., year, ), ;, }, public, int, getYearValue, (, ), {, return]
[(, ), {, return, new, Year, (, this, ., year, ), ;, }, public, int, getYearValue, (, ), {, return]
[}, public, int, getYearValue, (, ), {, return, this, ., year, ;, }, public, long, getFirstMillisecond, (, ), {, return]
[}, public, int, getYearValue, (, ), {, return, this, ., year, ;, }, public, long, getFirstMillisecond, (, ), {, return]
[}, public, long, getFirstMillisecond, (, ), {, return, this, ., firstMillisecond, ;, }, public, long, getLastMillisecond, (, ), {, return]
[}, public, long, getFirstMillisecond, (, ), {, return, this, ., firstMillisecond, ;, }, public, long, getLastMillisecond, (, ), {, return]
[public, long, getLastMillisecond, (, ), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {]
[public, long, getLastMillisecond, (, ), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {]
[), {, return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =]
[return, this, ., lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (]
[lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;]
[lastMillisecond, ;, }, public, void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;]
[void, peg, (, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;, this, ., lastMillisecond, =]
[(, Calendar, calendar, ), {, this, ., firstMillisecond, =, getFirstMillisecond, (, calendar, ), ;, this, ., lastMillisecond, =, getLastMillisecond, (]
[., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Quarter, result, ;, if, (]
[., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Quarter, result, ;, if, (]
[., lastMillisecond, =, getLastMillisecond, (, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Quarter, result, ;, if, (]
[(, calendar, ), ;, }, public, RegularTimePeriod, previous, (, ), {, Quarter, result, ;, if, (, this, ., quarter, >]
[;, }, public, RegularTimePeriod, previous, (, ), {, Quarter, result, ;, if, (, this, ., quarter, >, FIRST_QUARTER, ), {]
[public, RegularTimePeriod, previous, (, ), {, Quarter, result, ;, if, (, this, ., quarter, >, FIRST_QUARTER, ), {, result, =]
[(, ), {, Quarter, result, ;, if, (, this, ., quarter, >, FIRST_QUARTER, ), {, result, =, new, Quarter, (]
[(, ), {, Quarter, result, ;, if, (, this, ., quarter, >, FIRST_QUARTER, ), {, result, =, new, Quarter, (]
[(, ), {, Quarter, result, ;, if, (, this, ., quarter, >, FIRST_QUARTER, ), {, result, =, new, Quarter, (]
[result, ;, if, (, this, ., quarter, >, FIRST_QUARTER, ), {, result, =, new, Quarter, (, this, ., quarter, -]
[if, (, this, ., quarter, >, FIRST_QUARTER, ), {, result, =, new, Quarter, (, this, ., quarter, -, 1, ,]
[if, (, this, ., quarter, >, FIRST_QUARTER, ), {, result, =, new, Quarter, (, this, ., quarter, -, 1, ,]
[=, new, Quarter, (, this, ., quarter, -, 1, ,, this, ., year, ), ;, }, else, {, if, (]
[=, new, Quarter, (, this, ., quarter, -, 1, ,, this, ., year, ), ;, }, else, {, if, (]
[=, new, Quarter, (, this, ., quarter, -, 1, ,, this, ., year, ), ;, }, else, {, if, (]
[this, ., quarter, -, 1, ,, this, ., year, ), ;, }, else, {, if, (, this, ., year, >]
[-, 1, ,, this, ., year, ), ;, }, else, {, if, (, this, ., year, >, 1900, ), {]
[,, this, ., year, ), ;, }, else, {, if, (, this, ., year, >, 1900, ), {, result, =]
[year, ), ;, }, else, {, if, (, this, ., year, >, 1900, ), {, result, =, new, Quarter, (]
[;, }, else, {, if, (, this, ., year, >, 1900, ), {, result, =, new, Quarter, (, LAST_QUARTER, ,]
[;, }, else, {, if, (, this, ., year, >, 1900, ), {, result, =, new, Quarter, (, LAST_QUARTER, ,]
[;, }, else, {, if, (, this, ., year, >, 1900, ), {, result, =, new, Quarter, (, LAST_QUARTER, ,]
[if, (, this, ., year, >, 1900, ), {, result, =, new, Quarter, (, LAST_QUARTER, ,, this, ., year, -]
[1900, ), {, result, =, new, Quarter, (, LAST_QUARTER, ,, this, ., year, -, 1, ), ;, }, else, {]
[{, result, =, new, Quarter, (, LAST_QUARTER, ,, this, ., year, -, 1, ), ;, }, else, {, result, =]
[(, LAST_QUARTER, ,, this, ., year, -, 1, ), ;, }, else, {, result, =, null, ;, }, }, return]
[=, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Quarter, result, ;, if, (]
[=, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Quarter, result, ;, if, (]
[=, null, ;, }, }, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Quarter, result, ;, if, (]
[}, return, result, ;, }, public, RegularTimePeriod, next, (, ), {, Quarter, result, ;, if, (, this, ., quarter, <]
[;, }, public, RegularTimePeriod, next, (, ), {, Quarter, result, ;, if, (, this, ., quarter, <, LAST_QUARTER, ), {]
[public, RegularTimePeriod, next, (, ), {, Quarter, result, ;, if, (, this, ., quarter, <, LAST_QUARTER, ), {, result, =]
[(, ), {, Quarter, result, ;, if, (, this, ., quarter, <, LAST_QUARTER, ), {, result, =, new, Quarter, (]
[(, ), {, Quarter, result, ;, if, (, this, ., quarter, <, LAST_QUARTER, ), {, result, =, new, Quarter, (]
[(, ), {, Quarter, result, ;, if, (, this, ., quarter, <, LAST_QUARTER, ), {, result, =, new, Quarter, (]
[result, ;, if, (, this, ., quarter, <, LAST_QUARTER, ), {, result, =, new, Quarter, (, this, ., quarter, +]
[if, (, this, ., quarter, <, LAST_QUARTER, ), {, result, =, new, Quarter, (, this, ., quarter, +, 1, ,]
[if, (, this, ., quarter, <, LAST_QUARTER, ), {, result, =, new, Quarter, (, this, ., quarter, +, 1, ,]
[=, new, Quarter, (, this, ., quarter, +, 1, ,, this, ., year, ), ;, }, else, {, if, (]
[=, new, Quarter, (, this, ., quarter, +, 1, ,, this, ., year, ), ;, }, else, {, if, (]
[=, new, Quarter, (, this, ., quarter, +, 1, ,, this, ., year, ), ;, }, else, {, if, (]
[this, ., quarter, +, 1, ,, this, ., year, ), ;, }, else, {, if, (, this, ., year, <]
[+, 1, ,, this, ., year, ), ;, }, else, {, if, (, this, ., year, <, 9999, ), {]
[,, this, ., year, ), ;, }, else, {, if, (, this, ., year, <, 9999, ), {, result, =]
[year, ), ;, }, else, {, if, (, this, ., year, <, 9999, ), {, result, =, new, Quarter, (]
[;, }, else, {, if, (, this, ., year, <, 9999, ), {, result, =, new, Quarter, (, FIRST_QUARTER, ,]
[;, }, else, {, if, (, this, ., year, <, 9999, ), {, result, =, new, Quarter, (, FIRST_QUARTER, ,]
[;, }, else, {, if, (, this, ., year, <, 9999, ), {, result, =, new, Quarter, (, FIRST_QUARTER, ,]
[if, (, this, ., year, <, 9999, ), {, result, =, new, Quarter, (, FIRST_QUARTER, ,, this, ., year, +]
[9999, ), {, result, =, new, Quarter, (, FIRST_QUARTER, ,, this, ., year, +, 1, ), ;, }, else, {]
[{, result, =, new, Quarter, (, FIRST_QUARTER, ,, this, ., year, +, 1, ), ;, }, else, {, result, =]
[(, FIRST_QUARTER, ,, this, ., year, +, 1, ), ;, }, else, {, result, =, null, ;, }, }, return]
[}, else, {, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return]
[}, else, {, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return]
[}, else, {, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return]
[}, else, {, result, =, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return]
[=, null, ;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return, this, ., year, *]
[;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return, this, ., year, *, 4L, +]
[;, }, }, return, result, ;, }, public, long, getSerialIndex, (, ), {, return, this, ., year, *, 4L, +]
[., year, *, 4L, +, this, ., quarter, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[., year, *, 4L, +, this, ., quarter, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (]
[*, 4L, +, this, ., quarter, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, !=]
[quarter, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, !=, null, ), {, if, (]
[quarter, ;, }, public, boolean, equals, (, Object, obj, ), {, if, (, obj, !=, null, ), {, if, (]
[obj, ), {, if, (, obj, !=, null, ), {, if, (, obj, instanceof, Quarter, ), {, Quarter, target, =]
[if, (, obj, !=, null, ), {, if, (, obj, instanceof, Quarter, ), {, Quarter, target, =, (, Quarter, )]
[!=, null, ), {, if, (, obj, instanceof, Quarter, ), {, Quarter, target, =, (, Quarter, ), obj, ;, return]
[null, ), {, if, (, obj, instanceof, Quarter, ), {, Quarter, target, =, (, Quarter, ), obj, ;, return, (]
[null, ), {, if, (, obj, instanceof, Quarter, ), {, Quarter, target, =, (, Quarter, ), obj, ;, return, (]
[null, ), {, if, (, obj, instanceof, Quarter, ), {, Quarter, target, =, (, Quarter, ), obj, ;, return, (]
[null, ), {, if, (, obj, instanceof, Quarter, ), {, Quarter, target, =, (, Quarter, ), obj, ;, return, (]
[(, obj, instanceof, Quarter, ), {, Quarter, target, =, (, Quarter, ), obj, ;, return, (, this, ., quarter, ==]
[(, obj, instanceof, Quarter, ), {, Quarter, target, =, (, Quarter, ), obj, ;, return, (, this, ., quarter, ==]
[Quarter, target, =, (, Quarter, ), obj, ;, return, (, this, ., quarter, ==, target, ., getQuarter, (, ), &&]
[target, =, (, Quarter, ), obj, ;, return, (, this, ., quarter, ==, target, ., getQuarter, (, ), &&, (]
[target, =, (, Quarter, ), obj, ;, return, (, this, ., quarter, ==, target, ., getQuarter, (, ), &&, (]
[target, =, (, Quarter, ), obj, ;, return, (, this, ., quarter, ==, target, ., getQuarter, (, ), &&, (]
[), obj, ;, return, (, this, ., quarter, ==, target, ., getQuarter, (, ), &&, (, this, ., year, ==]
[), obj, ;, return, (, this, ., quarter, ==, target, ., getQuarter, (, ), &&, (, this, ., year, ==]
[(, ), &&, (, this, ., year, ==, target, ., getYearValue, (, ), ), ), ;, }, else, {, return]
[==, target, ., getYearValue, (, ), ), ), ;, }, else, {, return, false, ;, }, }, else, {, return]
[false, ;, }, }, else, {, return, false, ;, }, }, public, int, hashCode, (, ), {, int, result, =]
[}, }, else, {, return, false, ;, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;]
[else, {, return, false, ;, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =]
[else, {, return, false, ;, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =]
[else, {, return, false, ;, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =]
[return, false, ;, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *]
[;, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *, result, +]
[;, }, }, public, int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *, result, +]
[int, hashCode, (, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., quarter, ;]
[(, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., quarter, ;, result, =]
[(, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., quarter, ;, result, =]
[(, ), {, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., quarter, ;, result, =]
[{, int, result, =, 17, ;, result, =, 37, *, result, +, this, ., quarter, ;, result, =, 37, *]
[result, =, 17, ;, result, =, 37, *, result, +, this, ., quarter, ;, result, =, 37, *, result, +]
[result, =, 17, ;, result, =, 37, *, result, +, this, ., quarter, ;, result, =, 37, *, result, +]
[=, 37, *, result, +, this, ., quarter, ;, result, =, 37, *, result, +, this, ., year, ;, return]
[., year, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (]
[., year, ;, return, result, ;, }, public, int, compareTo, (, Object, o1, ), {, int, result, ;, if, (]
[int, compareTo, (, Object, o1, ), {, int, result, ;, if, (, o1, instanceof, Quarter, ), {, Quarter, q, =]
[Object, o1, ), {, int, result, ;, if, (, o1, instanceof, Quarter, ), {, Quarter, q, =, (, Quarter, )]
[), {, int, result, ;, if, (, o1, instanceof, Quarter, ), {, Quarter, q, =, (, Quarter, ), o1, ;]
[int, result, ;, if, (, o1, instanceof, Quarter, ), {, Quarter, q, =, (, Quarter, ), o1, ;, result, =]
[int, result, ;, if, (, o1, instanceof, Quarter, ), {, Quarter, q, =, (, Quarter, ), o1, ;, result, =]
[int, result, ;, if, (, o1, instanceof, Quarter, ), {, Quarter, q, =, (, Quarter, ), o1, ;, result, =]
[(, o1, instanceof, Quarter, ), {, Quarter, q, =, (, Quarter, ), o1, ;, result, =, this, ., year, -]
[(, o1, instanceof, Quarter, ), {, Quarter, q, =, (, Quarter, ), o1, ;, result, =, this, ., year, -]
[=, (, Quarter, ), o1, ;, result, =, this, ., year, -, q, ., getYearValue, (, ), ;, if, (]
[=, (, Quarter, ), o1, ;, result, =, this, ., year, -, q, ., getYearValue, (, ), ;, if, (]
[Quarter, ), o1, ;, result, =, this, ., year, -, q, ., getYearValue, (, ), ;, if, (, result, ==]
[;, result, =, this, ., year, -, q, ., getYearValue, (, ), ;, if, (, result, ==, 0, ), {]
[=, this, ., year, -, q, ., getYearValue, (, ), ;, if, (, result, ==, 0, ), {, result, =]
[=, this, ., year, -, q, ., getYearValue, (, ), ;, if, (, result, ==, 0, ), {, result, =]
[=, this, ., year, -, q, ., getYearValue, (, ), ;, if, (, result, ==, 0, ), {, result, =]
[-, q, ., getYearValue, (, ), ;, if, (, result, ==, 0, ), {, result, =, this, ., quarter, -]
[-, q, ., getYearValue, (, ), ;, if, (, result, ==, 0, ), {, result, =, this, ., quarter, -]
[0, ), {, result, =, this, ., quarter, -, q, ., getQuarter, (, ), ;, }, }, else, if, (]
[0, ), {, result, =, this, ., quarter, -, q, ., getQuarter, (, ), ;, }, }, else, if, (]
[this, ., quarter, -, q, ., getQuarter, (, ), ;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {]
[quarter, -, q, ., getQuarter, (, ), ;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =]
[(, ), ;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {]
[;, }, }, else, if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =]
[if, (, o1, instanceof, RegularTimePeriod, ), {, result, =, 0, ;, }, else, {, result, =, 1, ;, }, return]
[;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return]
[;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return]
[;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return]
[;, }, else, {, result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return]
[else, {, result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return, "Q", +]
[else, {, result, =, 1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return, "Q", +]
[1, ;, }, return, result, ;, }, public, String, toString, (, ), {, return, "Q", +, this, ., quarter, +]
[}, return, result, ;, }, public, String, toString, (, ), {, return, "Q", +, this, ., quarter, +, "/", +]
[}, return, result, ;, }, public, String, toString, (, ), {, return, "Q", +, this, ., quarter, +, "/", +]
[quarter, +, "/", +, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =]
[quarter, +, "/", +, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =]
[quarter, +, "/", +, this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =]
[this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter, ., FIRST_MONTH_IN_QUARTER, []
[this, ., year, ;, }, public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter, ., FIRST_MONTH_IN_QUARTER, []
[public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter, ., FIRST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;]
[public, long, getFirstMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter, ., FIRST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;]
[Calendar, calendar, ), {, int, month, =, Quarter, ., FIRST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;, calendar, ., set, (]
[Calendar, calendar, ), {, int, month, =, Quarter, ., FIRST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;, calendar, ., set, (]
[int, month, =, Quarter, ., FIRST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;, calendar, ., set, (, this, ., year, ,]
[int, month, =, Quarter, ., FIRST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;, calendar, ., set, (, this, ., year, ,]
[=, Quarter, ., FIRST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;, calendar, ., set, (, this, ., year, ,, month, -]
[., FIRST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,]
[[, this, ., quarter, ], ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, 1, ,]
[., quarter, ], ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, 1, ,, 0, ,]
[], ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, 1, ,, 0, ,, 0, ,]
[., set, (, this, ., year, ,, month, -, 1, ,, 1, ,, 0, ,, 0, ,, 0, ), ;]
[., set, (, this, ., year, ,, month, -, 1, ,, 1, ,, 0, ,, 0, ,, 0, ), ;]
[., year, ,, month, -, 1, ,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (]
[., year, ,, month, -, 1, ,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (]
[-, 1, ,, 1, ,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,]
[,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[,, 0, ,, 0, ,, 0, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 0, ), ;, return]
[getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, month, =]
[getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, month, =]
[getTime, (, ), ., getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, month, =]
[getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter, ., LAST_MONTH_IN_QUARTER, []
[getTime, (, ), ;, }, public, long, getLastMillisecond, (, Calendar, calendar, ), {, int, month, =, Quarter, ., LAST_MONTH_IN_QUARTER, []
[(, Calendar, calendar, ), {, int, month, =, Quarter, ., LAST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;, int, eom, =]
[(, Calendar, calendar, ), {, int, month, =, Quarter, ., LAST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;, int, eom, =]
[{, int, month, =, Quarter, ., LAST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;, int, eom, =, SerialDate, ., lastDayOfMonth, (]
[month, =, Quarter, ., LAST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;, int, eom, =, SerialDate, ., lastDayOfMonth, (, month, ,]
[month, =, Quarter, ., LAST_MONTH_IN_QUARTER, [, this, ., quarter, ], ;, int, eom, =, SerialDate, ., lastDayOfMonth, (, month, ,]
[[, this, ., quarter, ], ;, int, eom, =, SerialDate, ., lastDayOfMonth, (, month, ,, this, ., year, ), ;]
[[, this, ., quarter, ], ;, int, eom, =, SerialDate, ., lastDayOfMonth, (, month, ,, this, ., year, ), ;]
[], ;, int, eom, =, SerialDate, ., lastDayOfMonth, (, month, ,, this, ., year, ), ;, calendar, ., set, (]
[], ;, int, eom, =, SerialDate, ., lastDayOfMonth, (, month, ,, this, ., year, ), ;, calendar, ., set, (]
[=, SerialDate, ., lastDayOfMonth, (, month, ,, this, ., year, ), ;, calendar, ., set, (, this, ., year, ,]
[=, SerialDate, ., lastDayOfMonth, (, month, ,, this, ., year, ), ;, calendar, ., set, (, this, ., year, ,]
[., lastDayOfMonth, (, month, ,, this, ., year, ), ;, calendar, ., set, (, this, ., year, ,, month, -]
[(, month, ,, this, ., year, ), ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,]
[,, this, ., year, ), ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, eom, ,]
[., year, ), ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, eom, ,, 23, ,]
[), ;, calendar, ., set, (, this, ., year, ,, month, -, 1, ,, eom, ,, 23, ,, 59, ,]
[., set, (, this, ., year, ,, month, -, 1, ,, eom, ,, 23, ,, 59, ,, 59, ), ;]
[., set, (, this, ., year, ,, month, -, 1, ,, eom, ,, 23, ,, 59, ,, 59, ), ;]
[., year, ,, month, -, 1, ,, eom, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (]
[., year, ,, month, -, 1, ,, eom, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (]
[-, 1, ,, eom, ,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,]
[,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[,, 23, ,, 59, ,, 59, ), ;, calendar, ., set, (, Calendar, ., MILLISECOND, ,, 999, ), ;, return]
[(, ), ., getTime, (, ), ;, }, public, static, Quarter, parseQuarter, (, String, s, ), {, int, i, =]
[(, ), ., getTime, (, ), ;, }, public, static, Quarter, parseQuarter, (, String, s, ), {, int, i, =]
[(, ), ;, }, public, static, Quarter, parseQuarter, (, String, s, ), {, int, i, =, s, ., indexOf, (]
[static, Quarter, parseQuarter, (, String, s, ), {, int, i, =, s, ., indexOf, (, "Q", ), ;, if, (]
[static, Quarter, parseQuarter, (, String, s, ), {, int, i, =, s, ., indexOf, (, "Q", ), ;, if, (]
[parseQuarter, (, String, s, ), {, int, i, =, s, ., indexOf, (, "Q", ), ;, if, (, i, ==]
[(, String, s, ), {, int, i, =, s, ., indexOf, (, "Q", ), ;, if, (, i, ==, -]
[{, int, i, =, s, ., indexOf, (, "Q", ), ;, if, (, i, ==, -, 1, ), {, throw]
[=, s, ., indexOf, (, "Q", ), ;, if, (, i, ==, -, 1, ), {, throw, new, TimePeriodFormatException, (]
[), ;, if, (, i, ==, -, 1, ), {, throw, new, TimePeriodFormatException, (, "Missing Q.", ), ;, }, if, (]
[), ;, if, (, i, ==, -, 1, ), {, throw, new, TimePeriodFormatException, (, "Missing Q.", ), ;, }, if, (]
[if, (, i, ==, -, 1, ), {, throw, new, TimePeriodFormatException, (, "Missing Q.", ), ;, }, if, (, i, ==]
[if, (, i, ==, -, 1, ), {, throw, new, TimePeriodFormatException, (, "Missing Q.", ), ;, }, if, (, i, ==]
[if, (, i, ==, -, 1, ), {, throw, new, TimePeriodFormatException, (, "Missing Q.", ), ;, }, if, (, i, ==]
[), {, throw, new, TimePeriodFormatException, (, "Missing Q.", ), ;, }, if, (, i, ==, s, ., length, (, ), -]
[TimePeriodFormatException, (, "Missing Q.", ), ;, }, if, (, i, ==, s, ., length, (, ), -, 1, ), {, throw]
[), ;, }, if, (, i, ==, s, ., length, (, ), -, 1, ), {, throw, new, TimePeriodFormatException, (]
[s, ., length, (, ), -, 1, ), {, throw, new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr, =]
[s, ., length, (, ), -, 1, ), {, throw, new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr, =]
[), -, 1, ), {, throw, new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr, =, s, ., substring, (]
[), -, 1, ), {, throw, new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr, =, s, ., substring, (]
[1, ), {, throw, new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr, =, s, ., substring, (, i, +]
[{, throw, new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr, =, s, ., substring, (, i, +, 1, ,]
[{, throw, new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr, =, s, ., substring, (, i, +, 1, ,]
[new, TimePeriodFormatException, (, "Q found at end of string.", ), ;, }, String, qstr, =, s, ., substring, (, i, +, 1, ,, i, +]
[}, String, qstr, =, s, ., substring, (, i, +, 1, ,, i, +, 2, ), ;, int, quarter, =]
[}, String, qstr, =, s, ., substring, (, i, +, 1, ,, i, +, 2, ), ;, int, quarter, =]
[s, ., substring, (, i, +, 1, ,, i, +, 2, ), ;, int, quarter, =, Integer, ., parseInt, (]
[1, ,, i, +, 2, ), ;, int, quarter, =, Integer, ., parseInt, (, qstr, ), ;, String, remaining, =]
[1, ,, i, +, 2, ), ;, int, quarter, =, Integer, ., parseInt, (, qstr, ), ;, String, remaining, =]
[1, ,, i, +, 2, ), ;, int, quarter, =, Integer, ., parseInt, (, qstr, ), ;, String, remaining, =]
[2, ), ;, int, quarter, =, Integer, ., parseInt, (, qstr, ), ;, String, remaining, =, s, ., substring, (]
[;, int, quarter, =, Integer, ., parseInt, (, qstr, ), ;, String, remaining, =, s, ., substring, (, 0, ,]
[=, Integer, ., parseInt, (, qstr, ), ;, String, remaining, =, s, ., substring, (, 0, ,, i, ), +]
[=, Integer, ., parseInt, (, qstr, ), ;, String, remaining, =, s, ., substring, (, 0, ,, i, ), +]
[(, qstr, ), ;, String, remaining, =, s, ., substring, (, 0, ,, i, ), +, s, ., substring, (]
[(, qstr, ), ;, String, remaining, =, s, ., substring, (, 0, ,, i, ), +, s, ., substring, (]
[), ;, String, remaining, =, s, ., substring, (, 0, ,, i, ), +, s, ., substring, (, i, +]
[String, remaining, =, s, ., substring, (, 0, ,, i, ), +, s, ., substring, (, i, +, 2, ,]
[String, remaining, =, s, ., substring, (, 0, ,, i, ), +, s, ., substring, (, i, +, 2, ,]
[0, ,, i, ), +, s, ., substring, (, i, +, 2, ,, s, ., length, (, ), ), ;]
[i, ), +, s, ., substring, (, i, +, 2, ,, s, ., length, (, ), ), ;, remaining, =]
[i, ), +, s, ., substring, (, i, +, 2, ,, s, ., length, (, ), ), ;, remaining, =]
[., substring, (, i, +, 2, ,, s, ., length, (, ), ), ;, remaining, =, remaining, ., replace, (]
[(, i, +, 2, ,, s, ., length, (, ), ), ;, remaining, =, remaining, ., replace, (, '/', ,]
[2, ,, s, ., length, (, ), ), ;, remaining, =, remaining, ., replace, (, '/', ,, ' ', ), ;]
[s, ., length, (, ), ), ;, remaining, =, remaining, ., replace, (, '/', ,, ' ', ), ;, remaining, =]
[s, ., length, (, ), ), ;, remaining, =, remaining, ., replace, (, '/', ,, ' ', ), ;, remaining, =]
[), ), ;, remaining, =, remaining, ., replace, (, '/', ,, ' ', ), ;, remaining, =, remaining, ., replace, (]
[;, remaining, =, remaining, ., replace, (, '/', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, ',', ,]
[remaining, ., replace, (, '/', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, ',', ,, ' ', ), ;]
[replace, (, '/', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, ',', ,, ' ', ), ;, remaining, =]
[replace, (, '/', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, ',', ,, ' ', ), ;, remaining, =]
[' ', ), ;, remaining, =, remaining, ., replace, (, ',', ,, ' ', ), ;, remaining, =, remaining, ., replace, (]
[;, remaining, =, remaining, ., replace, (, ',', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, '-', ,]
[(, ',', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, '-', ,, ' ', ), ;, Year, year, =]
[(, ',', ,, ' ', ), ;, remaining, =, remaining, ., replace, (, '-', ,, ' ', ), ;, Year, year, =]
[), ;, remaining, =, remaining, ., replace, (, '-', ,, ' ', ), ;, Year, year, =, Year, ., parseYear, (]
[), ;, remaining, =, remaining, ., replace, (, '-', ,, ' ', ), ;, Year, year, =, Year, ., parseYear, (]
[' ', ), ;, Year, year, =, Year, ., parseYear, (, remaining, ., trim, (, ), ), ;, Quarter, result, =]
[Year, year, =, Year, ., parseYear, (, remaining, ., trim, (, ), ), ;, Quarter, result, =, new, Quarter, (]
[=, Year, ., parseYear, (, remaining, ., trim, (, ), ), ;, Quarter, result, =, new, Quarter, (, quarter, ,]
[(, remaining, ., trim, (, ), ), ;, Quarter, result, =, new, Quarter, (, quarter, ,, year, ), ;, return]
