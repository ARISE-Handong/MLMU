[;, private, FunctionArgumentInjector, (, ), {, }, static, Node, inject, (, AbstractCompiler, compiler, ,, Node, node, ,, Node, parent, ,]
[;, }, static, Node, inject, (, AbstractCompiler, compiler, ,, Node, node, ,, Node, parent, ,, Map, <, String, ,, Node]
[,, node, ,, parent, ,, replacements, ,, true, ), ;, }, static, Node, inject, (, AbstractCompiler, compiler, ,, Node, node]
[,, parent, ,, replacements, ,, true, ), ;, }, static, Node, inject, (, AbstractCompiler, compiler, ,, Node, node, ,, Node]
[,, replacements, ,, true, ), ;, }, static, Node, inject, (, AbstractCompiler, compiler, ,, Node, node, ,, Node, parent, ,]
[,, true, ), ;, }, static, Node, inject, (, AbstractCompiler, compiler, ,, Node, node, ,, Node, parent, ,, Map, <]
[), ;, }, static, Node, inject, (, AbstractCompiler, compiler, ,, Node, node, ,, Node, parent, ,, Map, <, String, ,]
[), {, Node, replacementTemplate, =, replacements, ., get, (, node, ., getString, (, ), ), ;, if, (, replacementTemplate, !=]
[., isName, (, ), ), {, Node, replacementTemplate, =, replacements, ., get, (, node, ., getString, (, ), ), ;]
[;, if, (, replacementTemplate, !=, null, ), {, Preconditions, ., checkState, (, !, parent, ., isFunction, (, ), ||, !]
[., get, (, node, ., getString, (, ), ), ;, if, (, replacementTemplate, !=, null, ), {, Preconditions, ., checkState]
[), ;, if, (, replacementTemplate, !=, null, ), {, Preconditions, ., checkState, (, !, parent, ., isFunction, (, ), ||]
[., getString, (, ), ), ;, if, (, replacementTemplate, !=, null, ), {, Preconditions, ., checkState, (, !, parent, .]
[), {, Preconditions, ., checkState, (, !, parent, ., isFunction, (, ), ||, !, parent, ., isVar, (, ), ||]
[!=, null, ), {, Preconditions, ., checkState, (, !, parent, ., isFunction, (, ), ||, !, parent, ., isVar, (]
[), {, Preconditions, ., checkState, (, !, parent, ., isFunction, (, ), ||, !, parent, ., isVar, (, ), ||]
[;, Node, replacement, =, replacementTemplate, ., cloneTree, (, ), ;, parent, ., replaceChild, (, node, ,, replacement, ), ;, return]
[., checkState, (, !, parent, ., isFunction, (, ), ||, !, parent, ., isVar, (, ), ||, !, parent, .]
[), ;, Node, replacement, =, replacementTemplate, ., cloneTree, (, ), ;, parent, ., replaceChild, (, node, ,, replacement, ), ;]
[||, !, parent, ., isCatch, (, ), ), ;, Node, replacement, =, replacementTemplate, ., cloneTree, (, ), ;, parent, .]
[||, !, parent, ., isVar, (, ), ||, !, parent, ., isCatch, (, ), ), ;, Node, replacement, =, replacementTemplate]
[||, !, parent, ., isVar, (, ), ||, !, parent, ., isCatch, (, ), ), ;, Node, replacement, =, replacementTemplate]
[., isFunction, (, ), ||, !, parent, ., isVar, (, ), ||, !, parent, ., isCatch, (, ), ), ;]
[||, !, parent, ., isCatch, (, ), ), ;, Node, replacement, =, replacementTemplate, ., cloneTree, (, ), ;, parent, .]
[||, !, parent, ., isCatch, (, ), ), ;, Node, replacement, =, replacementTemplate, ., cloneTree, (, ), ;, parent, .]
[., isVar, (, ), ||, !, parent, ., isCatch, (, ), ), ;, Node, replacement, =, replacementTemplate, ., cloneTree, (]
[), ;, Node, replacement, =, replacementTemplate, ., cloneTree, (, ), ;, parent, ., replaceChild, (, node, ,, replacement, ), ;]
[), ;, Node, replacement, =, replacementTemplate, ., cloneTree, (, ), ;, parent, ., replaceChild, (, node, ,, replacement, ), ;]
[., isCatch, (, ), ), ;, Node, replacement, =, replacementTemplate, ., cloneTree, (, ), ;, parent, ., replaceChild, (, node]
[;, parent, ., replaceChild, (, node, ,, replacement, ), ;, return, replacement, ;, }, }, else, if, (, replaceThis, &&]
[., cloneTree, (, ), ;, parent, ., replaceChild, (, node, ,, replacement, ), ;, return, replacement, ;, }, }, else]
[;, return, replacement, ;, }, }, else, if, (, replaceThis, &&, node, ., isThis, (, ), ), {, Node, replacementTemplate]
[., replaceChild, (, node, ,, replacement, ), ;, return, replacement, ;, }, }, else, if, (, replaceThis, &&, node, .]
[,, replacement, ), ;, return, replacement, ;, }, }, else, if, (, replaceThis, &&, node, ., isThis, (, ), )]
[), ;, return, replacement, ;, }, }, else, if, (, replaceThis, &&, node, ., isThis, (, ), ), {, Node]
[;, }, }, else, if, (, replaceThis, &&, node, ., isThis, (, ), ), {, Node, replacementTemplate, =, replacements, .]
[), {, Node, replacementTemplate, =, replacements, ., get, (, THIS_MARKER, ), ;, Preconditions, ., checkNotNull, (, replacementTemplate, ), ;, if]
[&&, node, ., isThis, (, ), ), {, Node, replacementTemplate, =, replacements, ., get, (, THIS_MARKER, ), ;, Preconditions, .]
[), {, Node, replacementTemplate, =, replacements, ., get, (, THIS_MARKER, ), ;, Preconditions, ., checkNotNull, (, replacementTemplate, ), ;, if]
[., isThis, (, ), ), {, Node, replacementTemplate, =, replacements, ., get, (, THIS_MARKER, ), ;, Preconditions, ., checkNotNull, (]
[;, Preconditions, ., checkNotNull, (, replacementTemplate, ), ;, if, (, !, replacementTemplate, ., isThis, (, ), ), {, Node, replacement]
[., get, (, THIS_MARKER, ), ;, Preconditions, ., checkNotNull, (, replacementTemplate, ), ;, if, (, !, replacementTemplate, ., isThis, (]
[), ;, Preconditions, ., checkNotNull, (, replacementTemplate, ), ;, if, (, !, replacementTemplate, ., isThis, (, ), ), {, Node]
[;, if, (, !, replacementTemplate, ., isThis, (, ), ), {, Node, replacement, =, replacementTemplate, ., cloneTree, (, ), ;]
[., checkNotNull, (, replacementTemplate, ), ;, if, (, !, replacementTemplate, ., isThis, (, ), ), {, Node, replacement, =, replacementTemplate]
[), ;, if, (, !, replacementTemplate, ., isThis, (, ), ), {, Node, replacement, =, replacementTemplate, ., cloneTree, (, )]
[), {, Node, replacement, =, replacementTemplate, ., cloneTree, (, ), ;, parent, ., replaceChild, (, node, ,, replacement, ), ;]
[), {, Node, replacement, =, replacementTemplate, ., cloneTree, (, ), ;, parent, ., replaceChild, (, node, ,, replacement, ), ;]
[., isThis, (, ), ), {, Node, replacement, =, replacementTemplate, ., cloneTree, (, ), ;, parent, ., replaceChild, (, node]
[;, parent, ., replaceChild, (, node, ,, replacement, ), ;, if, (, NodeUtil, ., mayHaveSideEffects, (, replacementTemplate, ,, compiler, )]
[., cloneTree, (, ), ;, parent, ., replaceChild, (, node, ,, replacement, ), ;, if, (, NodeUtil, ., mayHaveSideEffects, (]
[;, if, (, NodeUtil, ., mayHaveSideEffects, (, replacementTemplate, ,, compiler, ), ), {, replacements, ., remove, (, THIS_MARKER, ), ;]
[., replaceChild, (, node, ,, replacement, ), ;, if, (, NodeUtil, ., mayHaveSideEffects, (, replacementTemplate, ,, compiler, ), ), {]
[,, replacement, ), ;, if, (, NodeUtil, ., mayHaveSideEffects, (, replacementTemplate, ,, compiler, ), ), {, replacements, ., remove, (]
[), ;, if, (, NodeUtil, ., mayHaveSideEffects, (, replacementTemplate, ,, compiler, ), ), {, replacements, ., remove, (, THIS_MARKER, )]
[), {, replacements, ., remove, (, THIS_MARKER, ), ;, }, return, replacement, ;, }, }, else, if, (, node, .]
[., mayHaveSideEffects, (, replacementTemplate, ,, compiler, ), ), {, replacements, ., remove, (, THIS_MARKER, ), ;, }, return, replacement, ;]
[,, compiler, ), ), {, replacements, ., remove, (, THIS_MARKER, ), ;, }, return, replacement, ;, }, }, else, if]
[), ), {, replacements, ., remove, (, THIS_MARKER, ), ;, }, return, replacement, ;, }, }, else, if, (, node]
[;, }, return, replacement, ;, }, }, else, if, (, node, ., isFunction, (, ), ), {, replaceThis, =, false]
[., remove, (, THIS_MARKER, ), ;, }, return, replacement, ;, }, }, else, if, (, node, ., isFunction, (, )]
[), ;, }, return, replacement, ;, }, }, else, if, (, node, ., isFunction, (, ), ), {, replaceThis, =]
[;, }, }, else, if, (, node, ., isFunction, (, ), ), {, replaceThis, =, false, ;, }, for, (]
[), {, replaceThis, =, false, ;, }, for, (, Node, c, =, node, ., getFirstChild, (, ), ;, c, !=]
[., isFunction, (, ), ), {, replaceThis, =, false, ;, }, for, (, Node, c, =, node, ., getFirstChild, (]
[=, false, ;, }, for, (, Node, c, =, node, ., getFirstChild, (, ), ;, c, !=, null, ;, c]
[;, }, for, (, Node, c, =, node, ., getFirstChild, (, ), ;, c, !=, null, ;, c, =, c]
[;, c, !=, null, ;, c, =, c, ., getNext, (, ), ), {, c, =, inject, (, compiler, ,]
[., getFirstChild, (, ), ;, c, !=, null, ;, c, =, c, ., getNext, (, ), ), {, c, =]
[;, c, =, c, ., getNext, (, ), ), {, c, =, inject, (, compiler, ,, c, ,, node, ,]
[!=, null, ;, c, =, c, ., getNext, (, ), ), {, c, =, inject, (, compiler, ,, c, ,]
[;, c, =, c, ., getNext, (, ), ), {, c, =, inject, (, compiler, ,, c, ,, node, ,]
[=, c, ., getNext, (, ), ), {, c, =, inject, (, compiler, ,, c, ,, node, ,, replacements, ,]
[), {, c, =, inject, (, compiler, ,, c, ,, node, ,, replacements, ,, replaceThis, ), ;, }, return, node]
[., getNext, (, ), ), {, c, =, inject, (, compiler, ,, c, ,, node, ,, replacements, ,, replaceThis, )]
[=, inject, (, compiler, ,, c, ,, node, ,, replacements, ,, replaceThis, ), ;, }, return, node, ;, }, static]
[;, }, return, node, ;, }, static, LinkedHashMap, <, String, ,, Node, >, getFunctionCallParameterMap, (, Node, fnNode, ,, Node, callNode]
[,, c, ,, node, ,, replacements, ,, replaceThis, ), ;, }, return, node, ;, }, static, LinkedHashMap, <, String, ,]
[,, node, ,, replacements, ,, replaceThis, ), ;, }, return, node, ;, }, static, LinkedHashMap, <, String, ,, Node, >]
[,, replacements, ,, replaceThis, ), ;, }, return, node, ;, }, static, LinkedHashMap, <, String, ,, Node, >, getFunctionCallParameterMap, (]
[,, replaceThis, ), ;, }, return, node, ;, }, static, LinkedHashMap, <, String, ,, Node, >, getFunctionCallParameterMap, (, Node, fnNode]
[), ;, }, return, node, ;, }, static, LinkedHashMap, <, String, ,, Node, >, getFunctionCallParameterMap, (, Node, fnNode, ,, Node]
[;, }, static, LinkedHashMap, <, String, ,, Node, >, getFunctionCallParameterMap, (, Node, fnNode, ,, Node, callNode, ,, Supplier, <, String]
[;, Node, cArg, =, callNode, ., getFirstChild, (, ), ., getNext, (, ), ;, if, (, cArg, !=, null, &&]
[., newLinkedHashMap, (, ), ;, Node, cArg, =, callNode, ., getFirstChild, (, ), ., getNext, (, ), ;, if, (]
[;, if, (, cArg, !=, null, &&, NodeUtil, ., isFunctionObjectCall, (, callNode, ), ), {, argMap, ., put, (, THIS_MARKER]
[., getNext, (, ), ;, if, (, cArg, !=, null, &&, NodeUtil, ., isFunctionObjectCall, (, callNode, ), ), {, argMap]
[., getFirstChild, (, ), ., getNext, (, ), ;, if, (, cArg, !=, null, &&, NodeUtil, ., isFunctionObjectCall, (, callNode]
[), {, argMap, ., put, (, THIS_MARKER, ,, cArg, ), ;, cArg, =, cArg, ., getNext, (, ), ;, }]
[&&, NodeUtil, ., isFunctionObjectCall, (, callNode, ), ), {, argMap, ., put, (, THIS_MARKER, ,, cArg, ), ;, cArg, =]
[!=, null, &&, NodeUtil, ., isFunctionObjectCall, (, callNode, ), ), {, argMap, ., put, (, THIS_MARKER, ,, cArg, ), ;]
[&&, NodeUtil, ., isFunctionObjectCall, (, callNode, ), ), {, argMap, ., put, (, THIS_MARKER, ,, cArg, ), ;, cArg, =]
[), {, argMap, ., put, (, THIS_MARKER, ,, cArg, ), ;, cArg, =, cArg, ., getNext, (, ), ;, }]
[., isFunctionObjectCall, (, callNode, ), ), {, argMap, ., put, (, THIS_MARKER, ,, cArg, ), ;, cArg, =, cArg, .]
[), ), {, argMap, ., put, (, THIS_MARKER, ,, cArg, ), ;, cArg, =, cArg, ., getNext, (, ), ;]
[;, cArg, =, cArg, ., getNext, (, ), ;, }, else, {, Preconditions, ., checkState, (, !, NodeUtil, ., isFunctionObjectApply]
[., put, (, THIS_MARKER, ,, cArg, ), ;, cArg, =, cArg, ., getNext, (, ), ;, }, else, {, Preconditions]
[,, cArg, ), ;, cArg, =, cArg, ., getNext, (, ), ;, }, else, {, Preconditions, ., checkState, (, !]
[), ;, cArg, =, cArg, ., getNext, (, ), ;, }, else, {, Preconditions, ., checkState, (, !, NodeUtil, .]
[=, cArg, ., getNext, (, ), ;, }, else, {, Preconditions, ., checkState, (, !, NodeUtil, ., isFunctionObjectApply, (, callNode]
[;, }, else, {, Preconditions, ., checkState, (, !, NodeUtil, ., isFunctionObjectApply, (, callNode, ), ), ;, argMap, ., put]
[., getNext, (, ), ;, }, else, {, Preconditions, ., checkState, (, !, NodeUtil, ., isFunctionObjectApply, (, callNode, ), )]
[;, argMap, ., put, (, THIS_MARKER, ,, NodeUtil, ., newUndefinedNode, (, callNode, ), ), ;, }, for, (, Node, fnArg]
[., checkState, (, !, NodeUtil, ., isFunctionObjectApply, (, callNode, ), ), ;, argMap, ., put, (, THIS_MARKER, ,, NodeUtil, .]
[), ;, argMap, ., put, (, THIS_MARKER, ,, NodeUtil, ., newUndefinedNode, (, callNode, ), ), ;, }, for, (, Node]
[), ;, argMap, ., put, (, THIS_MARKER, ,, NodeUtil, ., newUndefinedNode, (, callNode, ), ), ;, }, for, (, Node]
[., isFunctionObjectApply, (, callNode, ), ), ;, argMap, ., put, (, THIS_MARKER, ,, NodeUtil, ., newUndefinedNode, (, callNode, ), )]
[), ), ;, argMap, ., put, (, THIS_MARKER, ,, NodeUtil, ., newUndefinedNode, (, callNode, ), ), ;, }, for, (]
[;, }, for, (, Node, fnArg, :, NodeUtil, ., getFunctionParameters, (, fnNode, ), ., children, (, ), ), {, if]
[., put, (, THIS_MARKER, ,, NodeUtil, ., newUndefinedNode, (, callNode, ), ), ;, }, for, (, Node, fnArg, :, NodeUtil]
[,, NodeUtil, ., newUndefinedNode, (, callNode, ), ), ;, }, for, (, Node, fnArg, :, NodeUtil, ., getFunctionParameters, (, fnNode]
[), ;, }, for, (, Node, fnArg, :, NodeUtil, ., getFunctionParameters, (, fnNode, ), ., children, (, ), ), {]
[., newUndefinedNode, (, callNode, ), ), ;, }, for, (, Node, fnArg, :, NodeUtil, ., getFunctionParameters, (, fnNode, ), .]
[), ), ;, }, for, (, Node, fnArg, :, NodeUtil, ., getFunctionParameters, (, fnNode, ), ., children, (, ), )]
[), {, if, (, cArg, !=, null, ), {, argMap, ., put, (, fnArg, ., getString, (, ), ,, cArg]
[., children, (, ), ), {, if, (, cArg, !=, null, ), {, argMap, ., put, (, fnArg, ., getString]
[., getFunctionParameters, (, fnNode, ), ., children, (, ), ), {, if, (, cArg, !=, null, ), {, argMap, .]
[), ., children, (, ), ), {, if, (, cArg, !=, null, ), {, argMap, ., put, (, fnArg, .]
[), {, argMap, ., put, (, fnArg, ., getString, (, ), ,, cArg, ), ;, cArg, =, cArg, ., getNext]
[!=, null, ), {, argMap, ., put, (, fnArg, ., getString, (, ), ,, cArg, ), ;, cArg, =, cArg]
[), {, argMap, ., put, (, fnArg, ., getString, (, ), ,, cArg, ), ;, cArg, =, cArg, ., getNext]
[;, cArg, =, cArg, ., getNext, (, ), ;, }, else, {, Node, srcLocation, =, callNode, ;, argMap, ., put]
[., put, (, fnArg, ., getString, (, ), ,, cArg, ), ;, cArg, =, cArg, ., getNext, (, ), ;]
[,, cArg, ), ;, cArg, =, cArg, ., getNext, (, ), ;, }, else, {, Node, srcLocation, =, callNode, ;]
[., getString, (, ), ,, cArg, ), ;, cArg, =, cArg, ., getNext, (, ), ;, }, else, {, Node]
[), ;, cArg, =, cArg, ., getNext, (, ), ;, }, else, {, Node, srcLocation, =, callNode, ;, argMap, .]
[=, cArg, ., getNext, (, ), ;, }, else, {, Node, srcLocation, =, callNode, ;, argMap, ., put, (, fnArg]
[;, }, else, {, Node, srcLocation, =, callNode, ;, argMap, ., put, (, fnArg, ., getString, (, ), ,, NodeUtil]
[., getNext, (, ), ;, }, else, {, Node, srcLocation, =, callNode, ;, argMap, ., put, (, fnArg, ., getString]
[;, argMap, ., put, (, fnArg, ., getString, (, ), ,, NodeUtil, ., newUndefinedNode, (, srcLocation, ), ), ;, }]
[;, }, }, int, anonArg, =, 0, ;, while, (, cArg, !=, null, ), {, String, uniquePlaceholder, =, getUniqueAnonymousParameterName, (]
[., put, (, fnArg, ., getString, (, ), ,, NodeUtil, ., newUndefinedNode, (, srcLocation, ), ), ;, }, }, int]
[,, NodeUtil, ., newUndefinedNode, (, srcLocation, ), ), ;, }, }, int, anonArg, =, 0, ;, while, (, cArg, !=]
[., getString, (, ), ,, NodeUtil, ., newUndefinedNode, (, srcLocation, ), ), ;, }, }, int, anonArg, =, 0, ;]
[), ;, }, }, int, anonArg, =, 0, ;, while, (, cArg, !=, null, ), {, String, uniquePlaceholder, =, getUniqueAnonymousParameterName]
[., newUndefinedNode, (, srcLocation, ), ), ;, }, }, int, anonArg, =, 0, ;, while, (, cArg, !=, null, )]
[), ), ;, }, }, int, anonArg, =, 0, ;, while, (, cArg, !=, null, ), {, String, uniquePlaceholder, =]
[;, while, (, cArg, !=, null, ), {, String, uniquePlaceholder, =, getUniqueAnonymousParameterName, (, safeNameIdSupplier, ), ;, argMap, ., put, (]
[), {, String, uniquePlaceholder, =, getUniqueAnonymousParameterName, (, safeNameIdSupplier, ), ;, argMap, ., put, (, uniquePlaceholder, ,, cArg, ), ;, cArg]
[!=, null, ), {, String, uniquePlaceholder, =, getUniqueAnonymousParameterName, (, safeNameIdSupplier, ), ;, argMap, ., put, (, uniquePlaceholder, ,, cArg, )]
[), {, String, uniquePlaceholder, =, getUniqueAnonymousParameterName, (, safeNameIdSupplier, ), ;, argMap, ., put, (, uniquePlaceholder, ,, cArg, ), ;, cArg]
[;, argMap, ., put, (, uniquePlaceholder, ,, cArg, ), ;, cArg, =, cArg, ., getNext, (, ), ;, }, return]
[), ;, argMap, ., put, (, uniquePlaceholder, ,, cArg, ), ;, cArg, =, cArg, ., getNext, (, ), ;, }]
[;, cArg, =, cArg, ., getNext, (, ), ;, }, return, argMap, ;, }, private, static, String, getUniqueAnonymousParameterName, (, Supplier]
[., put, (, uniquePlaceholder, ,, cArg, ), ;, cArg, =, cArg, ., getNext, (, ), ;, }, return, argMap, ;]
[,, cArg, ), ;, cArg, =, cArg, ., getNext, (, ), ;, }, return, argMap, ;, }, private, static, String]
[), ;, cArg, =, cArg, ., getNext, (, ), ;, }, return, argMap, ;, }, private, static, String, getUniqueAnonymousParameterName, (]
[=, cArg, ., getNext, (, ), ;, }, return, argMap, ;, }, private, static, String, getUniqueAnonymousParameterName, (, Supplier, <, String]
[;, }, return, argMap, ;, }, private, static, String, getUniqueAnonymousParameterName, (, Supplier, <, String, >, safeNameIdSupplier, ), {, return, "JSCompiler_inline_anon_param_"]
[., getNext, (, ), ;, }, return, argMap, ;, }, private, static, String, getUniqueAnonymousParameterName, (, Supplier, <, String, >, safeNameIdSupplier]
[;, }, private, static, String, getUniqueAnonymousParameterName, (, Supplier, <, String, >, safeNameIdSupplier, ), {, return, "JSCompiler_inline_anon_param_", +, safeNameIdSupplier, ., get]
[;, }, static, Set, <, String, >, findModifiedParameters, (, Node, fnNode, ), {, Set, <, String, >, names, =, getFunctionParameterSet]
[+, safeNameIdSupplier, ., get, (, ), ;, }, static, Set, <, String, >, findModifiedParameters, (, Node, fnNode, ), {, Set]
[;, }, static, Set, <, String, >, findModifiedParameters, (, Node, fnNode, ), {, Set, <, String, >, names, =, getFunctionParameterSet]
[., get, (, ), ;, }, static, Set, <, String, >, findModifiedParameters, (, Node, fnNode, ), {, Set, <, String]
[;, Set, <, String, >, unsafeNames, =, Sets, ., newHashSet, (, ), ;, return, findModifiedParameters, (, fnNode, ., getLastChild, (]
[), ;, Set, <, String, >, unsafeNames, =, Sets, ., newHashSet, (, ), ;, return, findModifiedParameters, (, fnNode, ., getLastChild]
[;, return, findModifiedParameters, (, fnNode, ., getLastChild, (, ), ,, null, ,, names, ,, unsafeNames, ,, false, ), ;, }]
[., newHashSet, (, ), ;, return, findModifiedParameters, (, fnNode, ., getLastChild, (, ), ,, null, ,, names, ,, unsafeNames, ,]
[;, }, private, static, Set, <, String, >, findModifiedParameters, (, Node, n, ,, Node, parent, ,, Set, <, String, >]
[,, null, ,, names, ,, unsafeNames, ,, false, ), ;, }, private, static, Set, <, String, >, findModifiedParameters, (, Node]
[., getLastChild, (, ), ,, null, ,, names, ,, unsafeNames, ,, false, ), ;, }, private, static, Set, <, String]
[,, names, ,, unsafeNames, ,, false, ), ;, }, private, static, Set, <, String, >, findModifiedParameters, (, Node, n, ,]
[,, unsafeNames, ,, false, ), ;, }, private, static, Set, <, String, >, findModifiedParameters, (, Node, n, ,, Node, parent]
[,, false, ), ;, }, private, static, Set, <, String, >, findModifiedParameters, (, Node, n, ,, Node, parent, ,, Set]
[), ;, }, private, static, Set, <, String, >, findModifiedParameters, (, Node, n, ,, Node, parent, ,, Set, <, String]
[;, if, (, n, ., isName, (, ), ), {, if, (, names, ., contains, (, n, ., getString, (]
[., checkArgument, (, unsafe, !=, null, ), ;, if, (, n, ., isName, (, ), ), {, if, (, names]
[), ;, if, (, n, ., isName, (, ), ), {, if, (, names, ., contains, (, n, ., getString]
[!=, null, ), ;, if, (, n, ., isName, (, ), ), {, if, (, names, ., contains, (, n]
[), ;, if, (, n, ., isName, (, ), ), {, if, (, names, ., contains, (, n, ., getString]
[), {, if, (, names, ., contains, (, n, ., getString, (, ), ), ), {, if, (, inInnerFunction, ||]
[., isName, (, ), ), {, if, (, names, ., contains, (, n, ., getString, (, ), ), ), {]
[), {, if, (, inInnerFunction, ||, canNameValueChange, (, n, ,, parent, ), ), {, unsafe, ., add, (, n, .]
[., contains, (, n, ., getString, (, ), ), ), {, if, (, inInnerFunction, ||, canNameValueChange, (, n, ,, parent]
[), ), {, if, (, inInnerFunction, ||, canNameValueChange, (, n, ,, parent, ), ), {, unsafe, ., add, (, n]
[., getString, (, ), ), ), {, if, (, inInnerFunction, ||, canNameValueChange, (, n, ,, parent, ), ), {, unsafe]
[), {, unsafe, ., add, (, n, ., getString, (, ), ), ;, }, }, }, else, if, (, n]
[||, canNameValueChange, (, n, ,, parent, ), ), {, unsafe, ., add, (, n, ., getString, (, ), ), ;]
[), {, unsafe, ., add, (, n, ., getString, (, ), ), ;, }, }, }, else, if, (, n]
[,, parent, ), ), {, unsafe, ., add, (, n, ., getString, (, ), ), ;, }, }, }, else]
[), ), {, unsafe, ., add, (, n, ., getString, (, ), ), ;, }, }, }, else, if, (]
[;, }, }, }, else, if, (, n, ., isFunction, (, ), ), {, inInnerFunction, =, true, ;, }, for]
[., add, (, n, ., getString, (, ), ), ;, }, }, }, else, if, (, n, ., isFunction, (]
[), ;, }, }, }, else, if, (, n, ., isFunction, (, ), ), {, inInnerFunction, =, true, ;, }]
[., getString, (, ), ), ;, }, }, }, else, if, (, n, ., isFunction, (, ), ), {, inInnerFunction]
[), {, inInnerFunction, =, true, ;, }, for, (, Node, c, :, n, ., children, (, ), ), {, findModifiedParameters]
[., isFunction, (, ), ), {, inInnerFunction, =, true, ;, }, for, (, Node, c, :, n, ., children, (]
[=, true, ;, }, for, (, Node, c, :, n, ., children, (, ), ), {, findModifiedParameters, (, c, ,]
[;, }, for, (, Node, c, :, n, ., children, (, ), ), {, findModifiedParameters, (, c, ,, n, ,]
[), {, findModifiedParameters, (, c, ,, n, ,, names, ,, unsafe, ,, inInnerFunction, ), ;, }, return, unsafe, ;, }]
[., children, (, ), ), {, findModifiedParameters, (, c, ,, n, ,, names, ,, unsafe, ,, inInnerFunction, ), ;, }]
[;, }, return, unsafe, ;, }, private, static, boolean, canNameValueChange, (, Node, n, ,, Node, parent, ), {, int, type]
[,, n, ,, names, ,, unsafe, ,, inInnerFunction, ), ;, }, return, unsafe, ;, }, private, static, boolean, canNameValueChange, (]
[,, names, ,, unsafe, ,, inInnerFunction, ), ;, }, return, unsafe, ;, }, private, static, boolean, canNameValueChange, (, Node, n]
[,, unsafe, ,, inInnerFunction, ), ;, }, return, unsafe, ;, }, private, static, boolean, canNameValueChange, (, Node, n, ,, Node]
[,, inInnerFunction, ), ;, }, return, unsafe, ;, }, private, static, boolean, canNameValueChange, (, Node, n, ,, Node, parent, )]
[), ;, }, return, unsafe, ;, }, private, static, boolean, canNameValueChange, (, Node, n, ,, Node, parent, ), {, int]
[;, }, private, static, boolean, canNameValueChange, (, Node, n, ,, Node, parent, ), {, int, type, =, parent, ., getType]
[;, return, (, type, ==, Token, ., VAR, ||, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC]
[., getType, (, ), ;, return, (, type, ==, Token, ., VAR, ||, type, ==, Token, ., INC, ||, type]
[;, }, static, void, maybeAddTempsForCallArguments, (, Node, fnNode, ,, Map, <, String, ,, Node, >, argMap, ,, Set, <, String]
[), ;, }, static, void, maybeAddTempsForCallArguments, (, Node, fnNode, ,, Map, <, String, ,, Node, >, argMap, ,, Set, <]
[||, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, ), ==, n, ), ), ;, }]
[||, type, ==, Token, ., DEC, ||, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, )]
[||, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC, ||, (, NodeUtil, ., isAssignmentOp, (, parent, )]
[==, Token, ., VAR, ||, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC, ||, (, NodeUtil, .]
[||, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC, ||, (, NodeUtil, ., isAssignmentOp, (, parent, )]
[., VAR, ||, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC, ||, (, NodeUtil, ., isAssignmentOp, (]
[||, type, ==, Token, ., DEC, ||, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, )]
[==, Token, ., INC, ||, type, ==, Token, ., DEC, ||, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent]
[||, type, ==, Token, ., DEC, ||, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, )]
[., INC, ||, type, ==, Token, ., DEC, ||, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild]
[||, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, ), ==, n, ), ), ;, }]
[==, Token, ., DEC, ||, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, ), ==, n]
[||, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, ), ==, n, ), ), ;, }]
[., DEC, ||, (, NodeUtil, ., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, ), ==, n, ), )]
[), ;, }, static, void, maybeAddTempsForCallArguments, (, Node, fnNode, ,, Map, <, String, ,, Node, >, argMap, ,, Set, <]
[), ), ;, }, static, void, maybeAddTempsForCallArguments, (, Node, fnNode, ,, Map, <, String, ,, Node, >, argMap, ,, Set]
[&&, parent, ., getFirstChild, (, ), ==, n, ), ), ;, }, static, void, maybeAddTempsForCallArguments, (, Node, fnNode, ,, Map]
[., isAssignmentOp, (, parent, ), &&, parent, ., getFirstChild, (, ), ==, n, ), ), ;, }, static, void, maybeAddTempsForCallArguments]
[), &&, parent, ., getFirstChild, (, ), ==, n, ), ), ;, }, static, void, maybeAddTempsForCallArguments, (, Node, fnNode, ,]
[), ), ;, }, static, void, maybeAddTempsForCallArguments, (, Node, fnNode, ,, Map, <, String, ,, Node, >, argMap, ,, Set]
[==, n, ), ), ;, }, static, void, maybeAddTempsForCallArguments, (, Node, fnNode, ,, Map, <, String, ,, Node, >, argMap]
[., getFirstChild, (, ), ==, n, ), ), ;, }, static, void, maybeAddTempsForCallArguments, (, Node, fnNode, ,, Map, <, String]
[), ), ;, }, static, void, maybeAddTempsForCallArguments, (, Node, fnNode, ,, Map, <, String, ,, Node, >, argMap, ,, Set]
[), {, return, ;, }, Preconditions, ., checkArgument, (, fnNode, ., isFunction, (, ), ), ;, Node, block, =, fnNode]
[., isEmpty, (, ), ), {, return, ;, }, Preconditions, ., checkArgument, (, fnNode, ., isFunction, (, ), ), ;]
[;, Node, block, =, fnNode, ., getLastChild, (, ), ;, Set, <, String, >, parameters, =, argMap, ., keySet, (]
[., checkArgument, (, fnNode, ., isFunction, (, ), ), ;, Node, block, =, fnNode, ., getLastChild, (, ), ;, Set]
[), ;, Node, block, =, fnNode, ., getLastChild, (, ), ;, Set, <, String, >, parameters, =, argMap, ., keySet]
[., isFunction, (, ), ), ;, Node, block, =, fnNode, ., getLastChild, (, ), ;, Set, <, String, >, parameters]
[;, Set, <, String, >, parameters, =, argMap, ., keySet, (, ), ;, Set, <, String, >, namesAfterSideEffects, =, findParametersReferencedAfterSideEffect]
[., getLastChild, (, ), ;, Set, <, String, >, parameters, =, argMap, ., keySet, (, ), ;, Set, <, String]
[;, Set, <, String, >, namesAfterSideEffects, =, findParametersReferencedAfterSideEffect, (, parameters, ,, block, ), ;, for, (, Map, ., Entry, <]
[., keySet, (, ), ;, Set, <, String, >, namesAfterSideEffects, =, findParametersReferencedAfterSideEffect, (, parameters, ,, block, ), ;, for, (]
[;, for, (, Map, ., Entry, <, String, ,, Node, >, entry, :, argMap, ., entrySet, (, ), ), {]
[,, block, ), ;, for, (, Map, ., Entry, <, String, ,, Node, >, entry, :, argMap, ., entrySet, (]
[), ;, for, (, Map, ., Entry, <, String, ,, Node, >, entry, :, argMap, ., entrySet, (, ), )]
[), {, String, argName, =, entry, ., getKey, (, ), ;, if, (, namesNeedingTemps, ., contains, (, argName, ), )]
[., entrySet, (, ), ), {, String, argName, =, entry, ., getKey, (, ), ;, if, (, namesNeedingTemps, ., contains]
[;, if, (, namesNeedingTemps, ., contains, (, argName, ), ), {, continue, ;, }, Node, cArg, =, entry, ., getValue]
[., getKey, (, ), ;, if, (, namesNeedingTemps, ., contains, (, argName, ), ), {, continue, ;, }, Node, cArg]
[), {, continue, ;, }, Node, cArg, =, entry, ., getValue, (, ), ;, boolean, safe, =, true, ;, int]
[., contains, (, argName, ), ), {, continue, ;, }, Node, cArg, =, entry, ., getValue, (, ), ;, boolean]
[), ), {, continue, ;, }, Node, cArg, =, entry, ., getValue, (, ), ;, boolean, safe, =, true, ;]
[;, boolean, safe, =, true, ;, int, references, =, NodeUtil, ., getNameReferenceCount, (, block, ,, argName, ), ;, if, (]
[., getValue, (, ), ;, boolean, safe, =, true, ;, int, references, =, NodeUtil, ., getNameReferenceCount, (, block, ,, argName]
[;, int, references, =, NodeUtil, ., getNameReferenceCount, (, block, ,, argName, ), ;, if, (, NodeUtil, ., mayEffectMutableState, (, cArg]
[;, if, (, NodeUtil, ., mayEffectMutableState, (, cArg, ), &&, references, >, 0, ), {, safe, =, false, ;, }]
[., getNameReferenceCount, (, block, ,, argName, ), ;, if, (, NodeUtil, ., mayEffectMutableState, (, cArg, ), &&, references, >, 0]
[,, argName, ), ;, if, (, NodeUtil, ., mayEffectMutableState, (, cArg, ), &&, references, >, 0, ), {, safe, =]
[), ;, if, (, NodeUtil, ., mayEffectMutableState, (, cArg, ), &&, references, >, 0, ), {, safe, =, false, ;]
[), {, safe, =, false, ;, }, else, if, (, NodeUtil, ., mayHaveSideEffects, (, cArg, ), ), {, safe, =]
[&&, references, >, 0, ), {, safe, =, false, ;, }, else, if, (, NodeUtil, ., mayHaveSideEffects, (, cArg, )]
[., mayEffectMutableState, (, cArg, ), &&, references, >, 0, ), {, safe, =, false, ;, }, else, if, (, NodeUtil]
[), &&, references, >, 0, ), {, safe, =, false, ;, }, else, if, (, NodeUtil, ., mayHaveSideEffects, (, cArg]
[), {, safe, =, false, ;, }, else, if, (, NodeUtil, ., mayHaveSideEffects, (, cArg, ), ), {, safe, =]
[>, 0, ), {, safe, =, false, ;, }, else, if, (, NodeUtil, ., mayHaveSideEffects, (, cArg, ), ), {]
[), {, safe, =, false, ;, }, else, if, (, NodeUtil, ., mayHaveSideEffects, (, cArg, ), ), {, safe, =]
[=, false, ;, }, else, if, (, NodeUtil, ., mayHaveSideEffects, (, cArg, ), ), {, safe, =, false, ;, }]
[;, }, else, if, (, NodeUtil, ., mayHaveSideEffects, (, cArg, ), ), {, safe, =, false, ;, }, else, if]
[), {, safe, =, false, ;, }, else, if, (, NodeUtil, ., canBeSideEffected, (, cArg, ), &&, namesAfterSideEffects, ., contains]
[., mayHaveSideEffects, (, cArg, ), ), {, safe, =, false, ;, }, else, if, (, NodeUtil, ., canBeSideEffected, (, cArg]
[), ), {, safe, =, false, ;, }, else, if, (, NodeUtil, ., canBeSideEffected, (, cArg, ), &&, namesAfterSideEffects, .]
[=, false, ;, }, else, if, (, NodeUtil, ., canBeSideEffected, (, cArg, ), &&, namesAfterSideEffects, ., contains, (, argName, )]
[;, }, else, if, (, NodeUtil, ., canBeSideEffected, (, cArg, ), &&, namesAfterSideEffects, ., contains, (, argName, ), ), {]
[), {, safe, =, false, ;, }, else, if, (, references, >, 1, ), {, switch, (, cArg, ., getType]
[&&, namesAfterSideEffects, ., contains, (, argName, ), ), {, safe, =, false, ;, }, else, if, (, references, >, 1]
[., canBeSideEffected, (, cArg, ), &&, namesAfterSideEffects, ., contains, (, argName, ), ), {, safe, =, false, ;, }, else]
[), &&, namesAfterSideEffects, ., contains, (, argName, ), ), {, safe, =, false, ;, }, else, if, (, references, >]
[), {, safe, =, false, ;, }, else, if, (, references, >, 1, ), {, switch, (, cArg, ., getType]
[., contains, (, argName, ), ), {, safe, =, false, ;, }, else, if, (, references, >, 1, ), {]
[), ), {, safe, =, false, ;, }, else, if, (, references, >, 1, ), {, switch, (, cArg, .]
[=, false, ;, }, else, if, (, references, >, 1, ), {, switch, (, cArg, ., getType, (, ), )]
[;, }, else, if, (, references, >, 1, ), {, switch, (, cArg, ., getType, (, ), ), {, case]
[), {, switch, (, cArg, ., getType, (, ), ), {, case, Token, ., NAME, :, String, name, =, cArg]
[>, 1, ), {, switch, (, cArg, ., getType, (, ), ), {, case, Token, ., NAME, :, String, name]
[), {, switch, (, cArg, ., getType, (, ), ), {, case, Token, ., NAME, :, String, name, =, cArg]
[), {, case, Token, ., NAME, :, String, name, =, cArg, ., getString, (, ), ;, safe, =, !, (]
[., getType, (, ), ), {, case, Token, ., NAME, :, String, name, =, cArg, ., getString, (, ), ;]
[:, String, name, =, cArg, ., getString, (, ), ;, safe, =, !, (, convention, ., isExported, (, name, )]
[., NAME, :, String, name, =, cArg, ., getString, (, ), ;, safe, =, !, (, convention, ., isExported, (]
[;, safe, =, !, (, convention, ., isExported, (, name, ), ), ;, break, ;, case, Token, ., THIS, :]
[., getString, (, ), ;, safe, =, !, (, convention, ., isExported, (, name, ), ), ;, break, ;, case]
[=, !, (, convention, ., isExported, (, name, ), ), ;, break, ;, case, Token, ., THIS, :, safe, =]
[;, break, ;, case, Token, ., THIS, :, safe, =, true, ;, break, ;, case, Token, ., STRING, :, safe]
[;, break, ;, case, Token, ., THIS, :, safe, =, true, ;, break, ;, case, Token, ., STRING, :, safe]
[), ;, break, ;, case, Token, ., THIS, :, safe, =, true, ;, break, ;, case, Token, ., STRING, :]
[., isExported, (, name, ), ), ;, break, ;, case, Token, ., THIS, :, safe, =, true, ;, break, ;]
[), ), ;, break, ;, case, Token, ., THIS, :, safe, =, true, ;, break, ;, case, Token, ., STRING]
[:, safe, =, true, ;, break, ;, case, Token, ., STRING, :, safe, =, (, cArg, ., getString, (, )]
[., THIS, :, safe, =, true, ;, break, ;, case, Token, ., STRING, :, safe, =, (, cArg, ., getString]
[=, true, ;, break, ;, case, Token, ., STRING, :, safe, =, (, cArg, ., getString, (, ), ., length]
[;, break, ;, case, Token, ., STRING, :, safe, =, (, cArg, ., getString, (, ), ., length, (, )]
[:, safe, =, (, cArg, ., getString, (, ), ., length, (, ), <, 2, ), ;, break, ;, default]
[., STRING, :, safe, =, (, cArg, ., getString, (, ), ., length, (, ), <, 2, ), ;, break]
[=, (, cArg, ., getString, (, ), ., length, (, ), <, 2, ), ;, break, ;, default, :, safe]
[;, break, ;, default, :, safe, =, NodeUtil, ., isImmutableValue, (, cArg, ), ;, break, ;, }, }, if, (]
[), ;, break, ;, default, :, safe, =, NodeUtil, ., isImmutableValue, (, cArg, ), ;, break, ;, }, }, if]
[<, 2, ), ;, break, ;, default, :, safe, =, NodeUtil, ., isImmutableValue, (, cArg, ), ;, break, ;, }]
[., length, (, ), <, 2, ), ;, break, ;, default, :, safe, =, NodeUtil, ., isImmutableValue, (, cArg, )]
[., getString, (, ), ., length, (, ), <, 2, ), ;, break, ;, default, :, safe, =, NodeUtil, .]
[), ;, break, ;, default, :, safe, =, NodeUtil, ., isImmutableValue, (, cArg, ), ;, break, ;, }, }, if]
[=, NodeUtil, ., isImmutableValue, (, cArg, ), ;, break, ;, }, }, if, (, !, safe, ), {, namesNeedingTemps, .]
[;, break, ;, }, }, if, (, !, safe, ), {, namesNeedingTemps, ., add, (, argName, ), ;, }, }]
[., isImmutableValue, (, cArg, ), ;, break, ;, }, }, if, (, !, safe, ), {, namesNeedingTemps, ., add, (]
[), ;, break, ;, }, }, if, (, !, safe, ), {, namesNeedingTemps, ., add, (, argName, ), ;, }]
[), {, namesNeedingTemps, ., add, (, argName, ), ;, }, }, }, private, static, Set, <, String, >, findParametersReferencedAfterSideEffect, (]
[), {, namesNeedingTemps, ., add, (, argName, ), ;, }, }, }, private, static, Set, <, String, >, findParametersReferencedAfterSideEffect, (]
[;, }, }, }, private, static, Set, <, String, >, findParametersReferencedAfterSideEffect, (, Set, <, String, >, parameters, ,, Node, root]
[., add, (, argName, ), ;, }, }, }, private, static, Set, <, String, >, findParametersReferencedAfterSideEffect, (, Set, <, String]
[), ;, }, }, }, private, static, Set, <, String, >, findParametersReferencedAfterSideEffect, (, Set, <, String, >, parameters, ,, Node]
[;, gatherLocalNames, (, root, ,, locals, ), ;, ReferencedAfterSideEffect, collector, =, new, ReferencedAfterSideEffect, (, parameters, ,, locals, ), ;, NodeUtil]
[., newHashSet, (, parameters, ), ;, gatherLocalNames, (, root, ,, locals, ), ;, ReferencedAfterSideEffect, collector, =, new, ReferencedAfterSideEffect, (, parameters]
[), ;, gatherLocalNames, (, root, ,, locals, ), ;, ReferencedAfterSideEffect, collector, =, new, ReferencedAfterSideEffect, (, parameters, ,, locals, ), ;]
[;, ReferencedAfterSideEffect, collector, =, new, ReferencedAfterSideEffect, (, parameters, ,, locals, ), ;, NodeUtil, ., visitPostOrder, (, root, ,, collector, ,]
[,, locals, ), ;, ReferencedAfterSideEffect, collector, =, new, ReferencedAfterSideEffect, (, parameters, ,, locals, ), ;, NodeUtil, ., visitPostOrder, (, root]
[), ;, ReferencedAfterSideEffect, collector, =, new, ReferencedAfterSideEffect, (, parameters, ,, locals, ), ;, NodeUtil, ., visitPostOrder, (, root, ,, collector]
[;, NodeUtil, ., visitPostOrder, (, root, ,, collector, ,, collector, ), ;, return, collector, ., getResults, (, ), ;, }]
[,, locals, ), ;, NodeUtil, ., visitPostOrder, (, root, ,, collector, ,, collector, ), ;, return, collector, ., getResults, (]
[), ;, NodeUtil, ., visitPostOrder, (, root, ,, collector, ,, collector, ), ;, return, collector, ., getResults, (, ), ;]
[;, return, collector, ., getResults, (, ), ;, }, private, static, class, ReferencedAfterSideEffect, implements, Visitor, ,, Predicate, <, Node, >]
[., visitPostOrder, (, root, ,, collector, ,, collector, ), ;, return, collector, ., getResults, (, ), ;, }, private, static]
[,, collector, ,, collector, ), ;, return, collector, ., getResults, (, ), ;, }, private, static, class, ReferencedAfterSideEffect, implements, Visitor]
[,, collector, ), ;, return, collector, ., getResults, (, ), ;, }, private, static, class, ReferencedAfterSideEffect, implements, Visitor, ,, Predicate]
[), ;, return, collector, ., getResults, (, ), ;, }, private, static, class, ReferencedAfterSideEffect, implements, Visitor, ,, Predicate, <, Node]
[;, }, private, static, class, ReferencedAfterSideEffect, implements, Visitor, ,, Predicate, <, Node, >, {, private, final, Set, <, String, >]
[., getResults, (, ), ;, }, private, static, class, ReferencedAfterSideEffect, implements, Visitor, ,, Predicate, <, Node, >, {, private, final]
[;, private, Set, <, String, >, parametersReferenced, =, Sets, ., newHashSet, (, ), ;, private, int, loopsEntered, =, 0, ;]
[;, private, int, loopsEntered, =, 0, ;, ReferencedAfterSideEffect, (, Set, <, String, >, parameters, ,, Set, <, String, >, locals]
[., newHashSet, (, ), ;, private, int, loopsEntered, =, 0, ;, ReferencedAfterSideEffect, (, Set, <, String, >, parameters, ,, Set]
[;, ReferencedAfterSideEffect, (, Set, <, String, >, parameters, ,, Set, <, String, >, locals, ), {, this, ., parameters, =]
[=, parameters, ;, this, ., locals, =, locals, ;, }, Set, <, String, >, getResults, (, ), {, return, parametersReferenced]
[., parameters, =, parameters, ;, this, ., locals, =, locals, ;, }, Set, <, String, >, getResults, (, ), {]
[;, this, ., locals, =, locals, ;, }, Set, <, String, >, getResults, (, ), {, return, parametersReferenced, ;, }]
[=, locals, ;, }, Set, <, String, >, getResults, (, ), {, return, parametersReferenced, ;, }, @, Override, public, boolean]
[., locals, =, locals, ;, }, Set, <, String, >, getResults, (, ), {, return, parametersReferenced, ;, }, @, Override]
[;, }, Set, <, String, >, getResults, (, ), {, return, parametersReferenced, ;, }, @, Override, public, boolean, apply, (]
[;, }, @, Override, public, boolean, apply, (, Node, node, ), {, if, (, NodeUtil, ., isLoopStructure, (, node, )]
[), {, loopsEntered, ++, ;, }, return, !, (, sideEffectSeen, &&, parameters, ., size, (, ), ==, parametersReferenced, ., size]
[., isLoopStructure, (, node, ), ), {, loopsEntered, ++, ;, }, return, !, (, sideEffectSeen, &&, parameters, ., size, (]
[), ), {, loopsEntered, ++, ;, }, return, !, (, sideEffectSeen, &&, parameters, ., size, (, ), ==, parametersReferenced, .]
[;, }, return, !, (, sideEffectSeen, &&, parameters, ., size, (, ), ==, parametersReferenced, ., size, (, ), ), ;]
[++, ;, }, return, !, (, sideEffectSeen, &&, parameters, ., size, (, ), ==, parametersReferenced, ., size, (, ), )]
[;, }, boolean, inLoop, (, ), {, return, loopsEntered, !=, 0, ;, }, @, Override, public, void, visit, (, Node]
[;, }, boolean, inLoop, (, ), {, return, loopsEntered, !=, 0, ;, }, @, Override, public, void, visit, (, Node]
[), ;, }, boolean, inLoop, (, ), {, return, loopsEntered, !=, 0, ;, }, @, Override, public, void, visit, (]
[&&, parameters, ., size, (, ), ==, parametersReferenced, ., size, (, ), ), ;, }, boolean, inLoop, (, ), {]
[), ;, }, boolean, inLoop, (, ), {, return, loopsEntered, !=, 0, ;, }, @, Override, public, void, visit, (]
[==, parametersReferenced, ., size, (, ), ), ;, }, boolean, inLoop, (, ), {, return, loopsEntered, !=, 0, ;, }]
[., size, (, ), ==, parametersReferenced, ., size, (, ), ), ;, }, boolean, inLoop, (, ), {, return, loopsEntered]
[), ;, }, boolean, inLoop, (, ), {, return, loopsEntered, !=, 0, ;, }, @, Override, public, void, visit, (]
[., size, (, ), ), ;, }, boolean, inLoop, (, ), {, return, loopsEntered, !=, 0, ;, }, @, Override]
[;, }, @, Override, public, void, visit, (, Node, n, ), {, if, (, NodeUtil, ., isLoopStructure, (, n, )]
[!=, 0, ;, }, @, Override, public, void, visit, (, Node, n, ), {, if, (, NodeUtil, ., isLoopStructure, (]
[;, }, @, Override, public, void, visit, (, Node, n, ), {, if, (, NodeUtil, ., isLoopStructure, (, n, )]
[), {, loopsEntered, --, ;, if, (, !, inLoop, (, ), &&, !, sideEffectSeen, ), {, parametersReferenced, ., clear, (]
[., isLoopStructure, (, n, ), ), {, loopsEntered, --, ;, if, (, !, inLoop, (, ), &&, !, sideEffectSeen, )]
[), ), {, loopsEntered, --, ;, if, (, !, inLoop, (, ), &&, !, sideEffectSeen, ), {, parametersReferenced, ., clear]
[;, if, (, !, inLoop, (, ), &&, !, sideEffectSeen, ), {, parametersReferenced, ., clear, (, ), ;, }, }]
[--, ;, if, (, !, inLoop, (, ), &&, !, sideEffectSeen, ), {, parametersReferenced, ., clear, (, ), ;, }]
[), {, parametersReferenced, ., clear, (, ), ;, }, }, if, (, !, sideEffectSeen, ), {, if, (, hasNonLocalSideEffect, (]
[&&, !, sideEffectSeen, ), {, parametersReferenced, ., clear, (, ), ;, }, }, if, (, !, sideEffectSeen, ), {, if]
[&&, !, sideEffectSeen, ), {, parametersReferenced, ., clear, (, ), ;, }, }, if, (, !, sideEffectSeen, ), {, if]
[), {, parametersReferenced, ., clear, (, ), ;, }, }, if, (, !, sideEffectSeen, ), {, if, (, hasNonLocalSideEffect, (]
[), {, parametersReferenced, ., clear, (, ), ;, }, }, if, (, !, sideEffectSeen, ), {, if, (, hasNonLocalSideEffect, (]
[;, }, }, if, (, !, sideEffectSeen, ), {, if, (, hasNonLocalSideEffect, (, n, ), ), {, sideEffectSeen, =, true]
[., clear, (, ), ;, }, }, if, (, !, sideEffectSeen, ), {, if, (, hasNonLocalSideEffect, (, n, ), )]
[), {, if, (, hasNonLocalSideEffect, (, n, ), ), {, sideEffectSeen, =, true, ;, }, }, if, (, inLoop, (]
[), {, if, (, hasNonLocalSideEffect, (, n, ), ), {, sideEffectSeen, =, true, ;, }, }, if, (, inLoop, (]
[), {, sideEffectSeen, =, true, ;, }, }, if, (, inLoop, (, ), ||, sideEffectSeen, ), {, if, (, n]
[), ), {, sideEffectSeen, =, true, ;, }, }, if, (, inLoop, (, ), ||, sideEffectSeen, ), {, if, (]
[=, true, ;, }, }, if, (, inLoop, (, ), ||, sideEffectSeen, ), {, if, (, n, ., isName, (]
[;, }, }, if, (, inLoop, (, ), ||, sideEffectSeen, ), {, if, (, n, ., isName, (, ), )]
[), {, if, (, n, ., isName, (, ), ), {, String, name, =, n, ., getString, (, ), ;]
[||, sideEffectSeen, ), {, if, (, n, ., isName, (, ), ), {, String, name, =, n, ., getString, (]
[), {, if, (, n, ., isName, (, ), ), {, String, name, =, n, ., getString, (, ), ;]
[), {, String, name, =, n, ., getString, (, ), ;, if, (, parameters, ., contains, (, name, ), )]
[., isName, (, ), ), {, String, name, =, n, ., getString, (, ), ;, if, (, parameters, ., contains]
[;, if, (, parameters, ., contains, (, name, ), ), {, parametersReferenced, ., add, (, name, ), ;, }, }]
[., getString, (, ), ;, if, (, parameters, ., contains, (, name, ), ), {, parametersReferenced, ., add, (, name]
[), {, parametersReferenced, ., add, (, name, ), ;, }, }, else, if, (, n, ., isThis, (, ), )]
[., contains, (, name, ), ), {, parametersReferenced, ., add, (, name, ), ;, }, }, else, if, (, n]
[), ), {, parametersReferenced, ., add, (, name, ), ;, }, }, else, if, (, n, ., isThis, (, )]
[;, }, }, else, if, (, n, ., isThis, (, ), ), {, parametersReferenced, ., add, (, THIS_MARKER, ), ;]
[., add, (, name, ), ;, }, }, else, if, (, n, ., isThis, (, ), ), {, parametersReferenced, .]
[), ;, }, }, else, if, (, n, ., isThis, (, ), ), {, parametersReferenced, ., add, (, THIS_MARKER, )]
[), {, parametersReferenced, ., add, (, THIS_MARKER, ), ;, }, }, }, private, boolean, hasNonLocalSideEffect, (, Node, n, ), {]
[., isThis, (, ), ), {, parametersReferenced, ., add, (, THIS_MARKER, ), ;, }, }, }, private, boolean, hasNonLocalSideEffect, (]
[;, }, }, }, private, boolean, hasNonLocalSideEffect, (, Node, n, ), {, boolean, sideEffect, =, false, ;, int, type, =]
[., add, (, THIS_MARKER, ), ;, }, }, }, private, boolean, hasNonLocalSideEffect, (, Node, n, ), {, boolean, sideEffect, =]
[), ;, }, }, }, private, boolean, hasNonLocalSideEffect, (, Node, n, ), {, boolean, sideEffect, =, false, ;, int, type]
[;, int, type, =, n, ., getType, (, ), ;, if, (, NodeUtil, ., isAssignmentOp, (, n, ), ||, type]
[;, if, (, NodeUtil, ., isAssignmentOp, (, n, ), ||, type, ==, Token, ., INC, ||, type, ==, Token, .]
[., getType, (, ), ;, if, (, NodeUtil, ., isAssignmentOp, (, n, ), ||, type, ==, Token, ., INC, ||]
[), {, Node, lhs, =, n, ., getFirstChild, (, ), ;, if, (, !, isLocalName, (, lhs, ), ), {]
[||, type, ==, Token, ., DEC, ), {, Node, lhs, =, n, ., getFirstChild, (, ), ;, if, (, !]
[||, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC, ), {, Node, lhs, =, n, ., getFirstChild]
[., isAssignmentOp, (, n, ), ||, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC, ), {, Node]
[), ||, type, ==, Token, ., INC, ||, type, ==, Token, ., DEC, ), {, Node, lhs, =, n, .]
[||, type, ==, Token, ., DEC, ), {, Node, lhs, =, n, ., getFirstChild, (, ), ;, if, (, !]
[==, Token, ., INC, ||, type, ==, Token, ., DEC, ), {, Node, lhs, =, n, ., getFirstChild, (, )]
[||, type, ==, Token, ., DEC, ), {, Node, lhs, =, n, ., getFirstChild, (, ), ;, if, (, !]
[., INC, ||, type, ==, Token, ., DEC, ), {, Node, lhs, =, n, ., getFirstChild, (, ), ;, if]
[), {, Node, lhs, =, n, ., getFirstChild, (, ), ;, if, (, !, isLocalName, (, lhs, ), ), {]
[==, Token, ., DEC, ), {, Node, lhs, =, n, ., getFirstChild, (, ), ;, if, (, !, isLocalName, (]
[), {, Node, lhs, =, n, ., getFirstChild, (, ), ;, if, (, !, isLocalName, (, lhs, ), ), {]
[., DEC, ), {, Node, lhs, =, n, ., getFirstChild, (, ), ;, if, (, !, isLocalName, (, lhs, )]
[;, if, (, !, isLocalName, (, lhs, ), ), {, sideEffect, =, true, ;, }, }, else, if, (, type]
[., getFirstChild, (, ), ;, if, (, !, isLocalName, (, lhs, ), ), {, sideEffect, =, true, ;, }, }]
[), {, sideEffect, =, true, ;, }, }, else, if, (, type, ==, Token, ., CALL, ), {, sideEffect, =]
[), {, sideEffect, =, true, ;, }, }, else, if, (, type, ==, Token, ., CALL, ), {, sideEffect, =]
[), ), {, sideEffect, =, true, ;, }, }, else, if, (, type, ==, Token, ., CALL, ), {, sideEffect]
[=, true, ;, }, }, else, if, (, type, ==, Token, ., CALL, ), {, sideEffect, =, NodeUtil, ., functionCallHasSideEffects]
[;, }, }, else, if, (, type, ==, Token, ., CALL, ), {, sideEffect, =, NodeUtil, ., functionCallHasSideEffects, (, n]
[), {, sideEffect, =, NodeUtil, ., functionCallHasSideEffects, (, n, ), ;, }, else, if, (, type, ==, Token, ., NEW]
[==, Token, ., CALL, ), {, sideEffect, =, NodeUtil, ., functionCallHasSideEffects, (, n, ), ;, }, else, if, (, type]
[), {, sideEffect, =, NodeUtil, ., functionCallHasSideEffects, (, n, ), ;, }, else, if, (, type, ==, Token, ., NEW]
[., CALL, ), {, sideEffect, =, NodeUtil, ., functionCallHasSideEffects, (, n, ), ;, }, else, if, (, type, ==, Token]
[=, NodeUtil, ., functionCallHasSideEffects, (, n, ), ;, }, else, if, (, type, ==, Token, ., NEW, ), {, sideEffect]
[;, }, else, if, (, type, ==, Token, ., NEW, ), {, sideEffect, =, NodeUtil, ., constructorCallHasSideEffects, (, n, )]
[., functionCallHasSideEffects, (, n, ), ;, }, else, if, (, type, ==, Token, ., NEW, ), {, sideEffect, =, NodeUtil]
[), ;, }, else, if, (, type, ==, Token, ., NEW, ), {, sideEffect, =, NodeUtil, ., constructorCallHasSideEffects, (, n]
[), {, sideEffect, =, NodeUtil, ., constructorCallHasSideEffects, (, n, ), ;, }, else, if, (, type, ==, Token, ., DELPROP]
[==, Token, ., NEW, ), {, sideEffect, =, NodeUtil, ., constructorCallHasSideEffects, (, n, ), ;, }, else, if, (, type]
[), {, sideEffect, =, NodeUtil, ., constructorCallHasSideEffects, (, n, ), ;, }, else, if, (, type, ==, Token, ., DELPROP]
[., NEW, ), {, sideEffect, =, NodeUtil, ., constructorCallHasSideEffects, (, n, ), ;, }, else, if, (, type, ==, Token]
[=, NodeUtil, ., constructorCallHasSideEffects, (, n, ), ;, }, else, if, (, type, ==, Token, ., DELPROP, ), {, sideEffect]
[;, }, else, if, (, type, ==, Token, ., DELPROP, ), {, sideEffect, =, true, ;, }, return, sideEffect, ;]
[., constructorCallHasSideEffects, (, n, ), ;, }, else, if, (, type, ==, Token, ., DELPROP, ), {, sideEffect, =, true]
[), ;, }, else, if, (, type, ==, Token, ., DELPROP, ), {, sideEffect, =, true, ;, }, return, sideEffect]
[), {, sideEffect, =, true, ;, }, return, sideEffect, ;, }, private, boolean, isLocalName, (, Node, node, ), {, if]
[==, Token, ., DELPROP, ), {, sideEffect, =, true, ;, }, return, sideEffect, ;, }, private, boolean, isLocalName, (, Node]
[), {, sideEffect, =, true, ;, }, return, sideEffect, ;, }, private, boolean, isLocalName, (, Node, node, ), {, if]
[., DELPROP, ), {, sideEffect, =, true, ;, }, return, sideEffect, ;, }, private, boolean, isLocalName, (, Node, node, )]
[=, true, ;, }, return, sideEffect, ;, }, private, boolean, isLocalName, (, Node, node, ), {, if, (, node, .]
[;, }, return, sideEffect, ;, }, private, boolean, isLocalName, (, Node, node, ), {, if, (, node, ., isName, (]
[;, }, private, boolean, isLocalName, (, Node, node, ), {, if, (, node, ., isName, (, ), ), {, String]
[), {, String, name, =, node, ., getString, (, ), ;, return, locals, ., contains, (, name, ), ;, }]
[., isName, (, ), ), {, String, name, =, node, ., getString, (, ), ;, return, locals, ., contains, (]
[;, return, locals, ., contains, (, name, ), ;, }, return, false, ;, }, }, private, static, void, gatherLocalNames, (]
[., getString, (, ), ;, return, locals, ., contains, (, name, ), ;, }, return, false, ;, }, }, private]
[;, }, return, false, ;, }, }, private, static, void, gatherLocalNames, (, Node, n, ,, Set, <, String, >, names]
[., contains, (, name, ), ;, }, return, false, ;, }, }, private, static, void, gatherLocalNames, (, Node, n, ,]
[), ;, }, return, false, ;, }, }, private, static, void, gatherLocalNames, (, Node, n, ,, Set, <, String, >]
[;, }, }, private, static, void, gatherLocalNames, (, Node, n, ,, Set, <, String, >, names, ), {, if, (]
[), {, if, (, NodeUtil, ., isFunctionDeclaration, (, n, ), ), {, names, ., add, (, n, ., getFirstChild, (]
[., isFunction, (, ), ), {, if, (, NodeUtil, ., isFunctionDeclaration, (, n, ), ), {, names, ., add, (]
[), {, names, ., add, (, n, ., getFirstChild, (, ), ., getString, (, ), ), ;, }, return, ;]
[., isFunctionDeclaration, (, n, ), ), {, names, ., add, (, n, ., getFirstChild, (, ), ., getString, (, )]
[), ), {, names, ., add, (, n, ., getFirstChild, (, ), ., getString, (, ), ), ;, }, return]
[;, }, return, ;, }, else, if, (, n, ., isName, (, ), ), {, switch, (, n, ., getParent]
[., add, (, n, ., getFirstChild, (, ), ., getString, (, ), ), ;, }, return, ;, }, else, if]
[), ;, }, return, ;, }, else, if, (, n, ., isName, (, ), ), {, switch, (, n, .]
[., getString, (, ), ), ;, }, return, ;, }, else, if, (, n, ., isName, (, ), ), {]
[., getFirstChild, (, ), ., getString, (, ), ), ;, }, return, ;, }, else, if, (, n, ., isName]
[), {, switch, (, n, ., getParent, (, ), ., getType, (, ), ), {, case, Token, ., VAR, :]
[., isName, (, ), ), {, switch, (, n, ., getParent, (, ), ., getType, (, ), ), {, case]
[), {, case, Token, ., VAR, :, case, Token, ., CATCH, :, names, ., add, (, n, ., getString, (]
[., getType, (, ), ), {, case, Token, ., VAR, :, case, Token, ., CATCH, :, names, ., add, (]
[., getParent, (, ), ., getType, (, ), ), {, case, Token, ., VAR, :, case, Token, ., CATCH, :]
[:, case, Token, ., CATCH, :, names, ., add, (, n, ., getString, (, ), ), ;, }, }, for]
[., VAR, :, case, Token, ., CATCH, :, names, ., add, (, n, ., getString, (, ), ), ;, }]
[:, names, ., add, (, n, ., getString, (, ), ), ;, }, }, for, (, Node, c, =, n]
[., CATCH, :, names, ., add, (, n, ., getString, (, ), ), ;, }, }, for, (, Node, c]
[;, }, }, for, (, Node, c, =, n, ., getFirstChild, (, ), ;, c, !=, null, ;, c, =]
[., add, (, n, ., getString, (, ), ), ;, }, }, for, (, Node, c, =, n, ., getFirstChild]
[), ;, }, }, for, (, Node, c, =, n, ., getFirstChild, (, ), ;, c, !=, null, ;, c]
[., getString, (, ), ), ;, }, }, for, (, Node, c, =, n, ., getFirstChild, (, ), ;, c]
[;, c, !=, null, ;, c, =, c, ., getNext, (, ), ), {, gatherLocalNames, (, c, ,, names, )]
[., getFirstChild, (, ), ;, c, !=, null, ;, c, =, c, ., getNext, (, ), ), {, gatherLocalNames, (]
[;, c, =, c, ., getNext, (, ), ), {, gatherLocalNames, (, c, ,, names, ), ;, }, }, private]
[!=, null, ;, c, =, c, ., getNext, (, ), ), {, gatherLocalNames, (, c, ,, names, ), ;, }]
[;, c, =, c, ., getNext, (, ), ), {, gatherLocalNames, (, c, ,, names, ), ;, }, }, private]
[=, c, ., getNext, (, ), ), {, gatherLocalNames, (, c, ,, names, ), ;, }, }, private, static, Set]
[), {, gatherLocalNames, (, c, ,, names, ), ;, }, }, private, static, Set, <, String, >, getFunctionParameterSet, (, Node]
[., getNext, (, ), ), {, gatherLocalNames, (, c, ,, names, ), ;, }, }, private, static, Set, <, String]
[;, }, }, private, static, Set, <, String, >, getFunctionParameterSet, (, Node, fnNode, ), {, Set, <, String, >, set]
[,, names, ), ;, }, }, private, static, Set, <, String, >, getFunctionParameterSet, (, Node, fnNode, ), {, Set, <]
[), ;, }, }, private, static, Set, <, String, >, getFunctionParameterSet, (, Node, fnNode, ), {, Set, <, String, >]
[;, for, (, Node, n, :, NodeUtil, ., getFunctionParameters, (, fnNode, ), ., children, (, ), ), {, set, .]
[., newHashSet, (, ), ;, for, (, Node, n, :, NodeUtil, ., getFunctionParameters, (, fnNode, ), ., children, (, )]
[), {, set, ., add, (, n, ., getString, (, ), ), ;, }, return, set, ;, }, }]
[., children, (, ), ), {, set, ., add, (, n, ., getString, (, ), ), ;, }, return, set]
[., getFunctionParameters, (, fnNode, ), ., children, (, ), ), {, set, ., add, (, n, ., getString, (, )]
[), ., children, (, ), ), {, set, ., add, (, n, ., getString, (, ), ), ;, }, return]
[;, }, return, set, ;, }, }]
[., add, (, n, ., getString, (, ), ), ;, }, return, set, ;, }, }]
[), ;, }, return, set, ;, }, }]
[., getString, (, ), ), ;, }, return, set, ;, }, }]
[;, }, }]
