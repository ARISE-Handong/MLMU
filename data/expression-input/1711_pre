[., DefaultHandler, ;, public, class, RootHandler, extends, DefaultHandler, implements, DatasetTags, {, private, Stack, subHandlers, ;, public, RootHandler, (, ), {]
[., DefaultHandler, ;, public, class, RootHandler, extends, DefaultHandler, implements, DatasetTags, {, private, Stack, subHandlers, ;, public, RootHandler, (, ), {]
[class, RootHandler, extends, DefaultHandler, implements, DatasetTags, {, private, Stack, subHandlers, ;, public, RootHandler, (, ), {, this, ., subHandlers, =]
[(, ), {, this, ., subHandlers, =, new, Stack, (, ), ;, }, public, Stack, getSubHandlers, (, ), {, return]
[(, ), {, this, ., subHandlers, =, new, Stack, (, ), ;, }, public, Stack, getSubHandlers, (, ), {, return]
[void, characters, (, char, [, ], ch, ,, int, start, ,, int, length, ), throws, SAXException, {, DefaultHandler, handler, =]
[ch, ,, int, start, ,, int, length, ), throws, SAXException, {, DefaultHandler, handler, =, getCurrentHandler, (, ), ;, if, (]
[ch, ,, int, start, ,, int, length, ), throws, SAXException, {, DefaultHandler, handler, =, getCurrentHandler, (, ), ;, if, (]
[int, start, ,, int, length, ), throws, SAXException, {, DefaultHandler, handler, =, getCurrentHandler, (, ), ;, if, (, handler, !=]
[int, length, ), throws, SAXException, {, DefaultHandler, handler, =, getCurrentHandler, (, ), ;, if, (, handler, !=, this, ), {]
[int, length, ), throws, SAXException, {, DefaultHandler, handler, =, getCurrentHandler, (, ), ;, if, (, handler, !=, this, ), {]
[SAXException, {, DefaultHandler, handler, =, getCurrentHandler, (, ), ;, if, (, handler, !=, this, ), {, handler, ., characters, (]
[DefaultHandler, handler, =, getCurrentHandler, (, ), ;, if, (, handler, !=, this, ), {, handler, ., characters, (, ch, ,]
[=, getCurrentHandler, (, ), ;, if, (, handler, !=, this, ), {, handler, ., characters, (, ch, ,, start, ,]
[characters, (, ch, ,, start, ,, length, ), ;, }, }, public, DefaultHandler, getCurrentHandler, (, ), {, DefaultHandler, result, =]
[start, ,, length, ), ;, }, }, public, DefaultHandler, getCurrentHandler, (, ), {, DefaultHandler, result, =, this, ;, if, (]
[start, ,, length, ), ;, }, }, public, DefaultHandler, getCurrentHandler, (, ), {, DefaultHandler, result, =, this, ;, if, (]
[start, ,, length, ), ;, }, }, public, DefaultHandler, getCurrentHandler, (, ), {, DefaultHandler, result, =, this, ;, if, (]
[;, }, }, public, DefaultHandler, getCurrentHandler, (, ), {, DefaultHandler, result, =, this, ;, if, (, this, ., subHandlers, !=]
[getCurrentHandler, (, ), {, DefaultHandler, result, =, this, ;, if, (, this, ., subHandlers, !=, null, ), {, if, (]
[getCurrentHandler, (, ), {, DefaultHandler, result, =, this, ;, if, (, this, ., subHandlers, !=, null, ), {, if, (]
[getCurrentHandler, (, ), {, DefaultHandler, result, =, this, ;, if, (, this, ., subHandlers, !=, null, ), {, if, (]
[getCurrentHandler, (, ), {, DefaultHandler, result, =, this, ;, if, (, this, ., subHandlers, !=, null, ), {, if, (]
[;, if, (, this, ., subHandlers, !=, null, ), {, if, (, this, ., subHandlers, ., size, (, ), >]
[!=, null, ), {, if, (, this, ., subHandlers, ., size, (, ), >, 0, ), {, Object, top, =]
[!=, null, ), {, if, (, this, ., subHandlers, ., size, (, ), >, 0, ), {, Object, top, =]
[!=, null, ), {, if, (, this, ., subHandlers, ., size, (, ), >, 0, ), {, Object, top, =]
[size, (, ), >, 0, ), {, Object, top, =, this, ., subHandlers, ., peek, (, ), ;, if, (]
[size, (, ), >, 0, ), {, Object, top, =, this, ., subHandlers, ., peek, (, ), ;, if, (]
[), >, 0, ), {, Object, top, =, this, ., subHandlers, ., peek, (, ), ;, if, (, top, !=]
[), {, Object, top, =, this, ., subHandlers, ., peek, (, ), ;, if, (, top, !=, null, ), {]
[Object, top, =, this, ., subHandlers, ., peek, (, ), ;, if, (, top, !=, null, ), {, result, =]
[this, ., subHandlers, ., peek, (, ), ;, if, (, top, !=, null, ), {, result, =, (, DefaultHandler, )]
[), ;, if, (, top, !=, null, ), {, result, =, (, DefaultHandler, ), top, ;, }, }, }, return]
[(, DefaultHandler, ), top, ;, }, }, }, return, result, ;, }, public, void, pushSubHandler, (, DefaultHandler, subhandler, ), {]
[(, DefaultHandler, ), top, ;, }, }, }, return, result, ;, }, public, void, pushSubHandler, (, DefaultHandler, subhandler, ), {]
[(, DefaultHandler, ), top, ;, }, }, }, return, result, ;, }, public, void, pushSubHandler, (, DefaultHandler, subhandler, ), {]
[}, }, return, result, ;, }, public, void, pushSubHandler, (, DefaultHandler, subhandler, ), {, this, ., subHandlers, ., push, (]
[subhandler, ), {, this, ., subHandlers, ., push, (, subhandler, ), ;, }, public, DefaultHandler, popSubHandler, (, ), {, return]
[this, ., subHandlers, ., push, (, subhandler, ), ;, }, public, DefaultHandler, popSubHandler, (, ), {, return, (, DefaultHandler, )]
[this, ., subHandlers, ., push, (, subhandler, ), ;, }, public, DefaultHandler, popSubHandler, (, ), {, return, (, DefaultHandler, )]
[this, ., subHandlers, ., push, (, subhandler, ), ;, }, public, DefaultHandler, popSubHandler, (, ), {, return, (, DefaultHandler, )]
