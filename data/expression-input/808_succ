[), ;, }, public, PolyhedronsSet, (, final, Collection, <, SubHyperplane, <, Euclidean3D, >, >, boundary, ), {, super, (, boundary]
[), ;, }, public, PolyhedronsSet, (, final, double, xMin, ,, final, double, xMax, ,, final, double, yMin, ,, final, double]
[), ;, }, private, static, BSPTree, <, Euclidean3D, >, buildBoundary, (, final, double, xMin, ,, final, double, xMax, ,, final]
[,, xMax, ,, yMin, ,, yMax, ,, zMin, ,, zMax, ), ), ;, }, private, static, BSPTree, <, Euclidean3D, >]
[,, yMin, ,, yMax, ,, zMin, ,, zMax, ), ), ;, }, private, static, BSPTree, <, Euclidean3D, >, buildBoundary, (]
[,, yMax, ,, zMin, ,, zMax, ), ), ;, }, private, static, BSPTree, <, Euclidean3D, >, buildBoundary, (, final, double]
[,, zMin, ,, zMax, ), ), ;, }, private, static, BSPTree, <, Euclidean3D, >, buildBoundary, (, final, double, xMin, ,]
[,, zMax, ), ), ;, }, private, static, BSPTree, <, Euclidean3D, >, buildBoundary, (, final, double, xMin, ,, final, double]
[), ), ;, }, private, static, BSPTree, <, Euclidean3D, >, buildBoundary, (, final, double, xMin, ,, final, double, xMax, ,]
[;, final, Plane, pxMax, =, new, Plane, (, new, Vector3D, (, xMax, ,, 0, ,, 0, ), ,, Vector3D, .]
[,, Vector3D, ., MINUS_I, ), ;, final, Plane, pxMax, =, new, Plane, (, new, Vector3D, (, xMax, ,, 0, ,]
[,, 0, ,, 0, ), ,, Vector3D, ., MINUS_I, ), ;, final, Plane, pxMax, =, new, Plane, (, new, Vector3D]
[,, 0, ), ,, Vector3D, ., MINUS_I, ), ;, final, Plane, pxMax, =, new, Plane, (, new, Vector3D, (, xMax]
[), ,, Vector3D, ., MINUS_I, ), ;, final, Plane, pxMax, =, new, Plane, (, new, Vector3D, (, xMax, ,, 0]
[), ;, final, Plane, pxMax, =, new, Plane, (, new, Vector3D, (, xMax, ,, 0, ,, 0, ), ,, Vector3D]
[., MINUS_I, ), ;, final, Plane, pxMax, =, new, Plane, (, new, Vector3D, (, xMax, ,, 0, ,, 0, )]
[;, final, Plane, pyMin, =, new, Plane, (, new, Vector3D, (, 0, ,, yMin, ,, 0, ), ,, Vector3D, .]
[,, Vector3D, ., PLUS_I, ), ;, final, Plane, pyMin, =, new, Plane, (, new, Vector3D, (, 0, ,, yMin, ,]
[,, 0, ,, 0, ), ,, Vector3D, ., PLUS_I, ), ;, final, Plane, pyMin, =, new, Plane, (, new, Vector3D]
[,, 0, ), ,, Vector3D, ., PLUS_I, ), ;, final, Plane, pyMin, =, new, Plane, (, new, Vector3D, (, 0]
[), ,, Vector3D, ., PLUS_I, ), ;, final, Plane, pyMin, =, new, Plane, (, new, Vector3D, (, 0, ,, yMin]
[), ;, final, Plane, pyMin, =, new, Plane, (, new, Vector3D, (, 0, ,, yMin, ,, 0, ), ,, Vector3D]
[., PLUS_I, ), ;, final, Plane, pyMin, =, new, Plane, (, new, Vector3D, (, 0, ,, yMin, ,, 0, )]
[;, final, Plane, pyMax, =, new, Plane, (, new, Vector3D, (, 0, ,, yMax, ,, 0, ), ,, Vector3D, .]
[,, Vector3D, ., MINUS_J, ), ;, final, Plane, pyMax, =, new, Plane, (, new, Vector3D, (, 0, ,, yMax, ,]
[,, yMin, ,, 0, ), ,, Vector3D, ., MINUS_J, ), ;, final, Plane, pyMax, =, new, Plane, (, new, Vector3D]
[,, 0, ), ,, Vector3D, ., MINUS_J, ), ;, final, Plane, pyMax, =, new, Plane, (, new, Vector3D, (, 0]
[), ,, Vector3D, ., MINUS_J, ), ;, final, Plane, pyMax, =, new, Plane, (, new, Vector3D, (, 0, ,, yMax]
[), ;, final, Plane, pyMax, =, new, Plane, (, new, Vector3D, (, 0, ,, yMax, ,, 0, ), ,, Vector3D]
[., MINUS_J, ), ;, final, Plane, pyMax, =, new, Plane, (, new, Vector3D, (, 0, ,, yMax, ,, 0, )]
[;, final, Plane, pzMin, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,, zMin, ), ,, Vector3D, .]
[,, Vector3D, ., PLUS_J, ), ;, final, Plane, pzMin, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,]
[,, yMax, ,, 0, ), ,, Vector3D, ., PLUS_J, ), ;, final, Plane, pzMin, =, new, Plane, (, new, Vector3D]
[,, 0, ), ,, Vector3D, ., PLUS_J, ), ;, final, Plane, pzMin, =, new, Plane, (, new, Vector3D, (, 0]
[), ,, Vector3D, ., PLUS_J, ), ;, final, Plane, pzMin, =, new, Plane, (, new, Vector3D, (, 0, ,, 0]
[), ;, final, Plane, pzMin, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,, zMin, ), ,, Vector3D]
[., PLUS_J, ), ;, final, Plane, pzMin, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,, zMin, )]
[;, final, Plane, pzMax, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,, zMax, ), ,, Vector3D, .]
[,, Vector3D, ., MINUS_K, ), ;, final, Plane, pzMax, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,]
[,, 0, ,, zMin, ), ,, Vector3D, ., MINUS_K, ), ;, final, Plane, pzMax, =, new, Plane, (, new, Vector3D]
[,, zMin, ), ,, Vector3D, ., MINUS_K, ), ;, final, Plane, pzMax, =, new, Plane, (, new, Vector3D, (, 0]
[), ,, Vector3D, ., MINUS_K, ), ;, final, Plane, pzMax, =, new, Plane, (, new, Vector3D, (, 0, ,, 0]
[), ;, final, Plane, pzMax, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,, zMax, ), ,, Vector3D]
[., MINUS_K, ), ;, final, Plane, pzMax, =, new, Plane, (, new, Vector3D, (, 0, ,, 0, ,, zMax, )]
[;, @, SuppressWarnings, (, "unchecked", ), final, Region, <, Euclidean3D, >, boundary, =, new, RegionFactory, <, Euclidean3D, >, (, )]
[,, Vector3D, ., PLUS_K, ), ;, @, SuppressWarnings, (, "unchecked", ), final, Region, <, Euclidean3D, >, boundary, =, new, RegionFactory]
[,, 0, ,, zMax, ), ,, Vector3D, ., PLUS_K, ), ;, @, SuppressWarnings, (, "unchecked", ), final, Region, <, Euclidean3D]
[,, zMax, ), ,, Vector3D, ., PLUS_K, ), ;, @, SuppressWarnings, (, "unchecked", ), final, Region, <, Euclidean3D, >, boundary]
[), ,, Vector3D, ., PLUS_K, ), ;, @, SuppressWarnings, (, "unchecked", ), final, Region, <, Euclidean3D, >, boundary, =, new]
[), ;, @, SuppressWarnings, (, "unchecked", ), final, Region, <, Euclidean3D, >, boundary, =, new, RegionFactory, <, Euclidean3D, >, (]
[., PLUS_K, ), ;, @, SuppressWarnings, (, "unchecked", ), final, Region, <, Euclidean3D, >, boundary, =, new, RegionFactory, <, Euclidean3D]
[final, Region, <, Euclidean3D, >, boundary, =, new, RegionFactory, <, Euclidean3D, >, (, ), ., buildConvex, (, pxMin, ,, pxMax]
[), final, Region, <, Euclidean3D, >, boundary, =, new, RegionFactory, <, Euclidean3D, >, (, ), ., buildConvex, (, pxMin, ,]
[;, return, boundary, ., getTree, (, false, ), ;, }, @, Override, public, PolyhedronsSet, buildNew, (, final, BSPTree, <, Euclidean3D]
[., buildConvex, (, pxMin, ,, pxMax, ,, pyMin, ,, pyMax, ,, pzMin, ,, pzMax, ), ;, return, boundary, ., getTree]
[,, pxMax, ,, pyMin, ,, pyMax, ,, pzMin, ,, pzMax, ), ;, return, boundary, ., getTree, (, false, ), ;]
[,, pyMin, ,, pyMax, ,, pzMin, ,, pzMax, ), ;, return, boundary, ., getTree, (, false, ), ;, }, @]
[,, pyMax, ,, pzMin, ,, pzMax, ), ;, return, boundary, ., getTree, (, false, ), ;, }, @, Override, public]
[,, pzMin, ,, pzMax, ), ;, return, boundary, ., getTree, (, false, ), ;, }, @, Override, public, PolyhedronsSet, buildNew]
[,, pzMax, ), ;, return, boundary, ., getTree, (, false, ), ;, }, @, Override, public, PolyhedronsSet, buildNew, (, final]
[), ;, return, boundary, ., getTree, (, false, ), ;, }, @, Override, public, PolyhedronsSet, buildNew, (, final, BSPTree, <]
[;, }, @, Override, public, PolyhedronsSet, buildNew, (, final, BSPTree, <, Euclidean3D, >, tree, ), {, return, new, PolyhedronsSet, (]
[., getTree, (, false, ), ;, }, @, Override, public, PolyhedronsSet, buildNew, (, final, BSPTree, <, Euclidean3D, >, tree, )]
[), ;, }, @, Override, public, PolyhedronsSet, buildNew, (, final, BSPTree, <, Euclidean3D, >, tree, ), {, return, new, PolyhedronsSet]
[;, }, @, Override, protected, void, computeGeometricalProperties, (, ), {, getTree, (, true, ), ., visit, (, new, FacetsContributionVisitor, (]
[), ;, }, @, Override, protected, void, computeGeometricalProperties, (, ), {, getTree, (, true, ), ., visit, (, new, FacetsContributionVisitor]
[;, if, (, getSize, (, ), <, 0, ), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D]
[., visit, (, new, FacetsContributionVisitor, (, ), ), ;, if, (, getSize, (, ), <, 0, ), {, setSize, (]
[), ., visit, (, new, FacetsContributionVisitor, (, ), ), ;, if, (, getSize, (, ), <, 0, ), {, setSize]
[), ;, if, (, getSize, (, ), <, 0, ), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (]
[), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, setSize]
[<, 0, ), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else]
[), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, setSize]
[;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, setSize, (, getSize, (, ), /, 3.0, ), ;]
[), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, setSize, (, getSize, (, ), /, 3.0, )]
[., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, setSize, (, getSize, (, ), /]
[;, }, else, {, setSize, (, getSize, (, ), /, 3.0, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, /]
[), ;, }, else, {, setSize, (, getSize, (, ), /, 3.0, ), ;, setBarycenter, (, new, Vector3D, (, 1.0]
[., NaN, ), ;, }, else, {, setSize, (, getSize, (, ), /, 3.0, ), ;, setBarycenter, (, new, Vector3D]
[;, setBarycenter, (, new, Vector3D, (, 1.0, /, (, 4, *, getSize, (, ), ), ,, (, Vector3D, ), getBarycenter]
[), ;, setBarycenter, (, new, Vector3D, (, 1.0, /, (, 4, *, getSize, (, ), ), ,, (, Vector3D, )]
[/, 3.0, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, /, (, 4, *, getSize, (, ), ), ,, (]
[), ;, setBarycenter, (, new, Vector3D, (, 1.0, /, (, 4, *, getSize, (, ), ), ,, (, Vector3D, )]
[;, }, }, private, class, FacetsContributionVisitor, implements, BSPTreeVisitor, <, Euclidean3D, >, {, public, FacetsContributionVisitor, (, ), {, setSize, (, 0]
[), ;, }, }, private, class, FacetsContributionVisitor, implements, BSPTreeVisitor, <, Euclidean3D, >, {, public, FacetsContributionVisitor, (, ), {, setSize, (]
[,, (, Vector3D, ), getBarycenter, (, ), ), ), ;, }, }, private, class, FacetsContributionVisitor, implements, BSPTreeVisitor, <, Euclidean3D, >]
[/, (, 4, *, getSize, (, ), ), ,, (, Vector3D, ), getBarycenter, (, ), ), ), ;, }, }]
[,, (, Vector3D, ), getBarycenter, (, ), ), ), ;, }, }, private, class, FacetsContributionVisitor, implements, BSPTreeVisitor, <, Euclidean3D, >]
[), ,, (, Vector3D, ), getBarycenter, (, ), ), ), ;, }, }, private, class, FacetsContributionVisitor, implements, BSPTreeVisitor, <, Euclidean3D]
[*, getSize, (, ), ), ,, (, Vector3D, ), getBarycenter, (, ), ), ), ;, }, }, private, class, FacetsContributionVisitor]
[), ,, (, Vector3D, ), getBarycenter, (, ), ), ), ;, }, }, private, class, FacetsContributionVisitor, implements, BSPTreeVisitor, <, Euclidean3D]
[), ), ;, }, }, private, class, FacetsContributionVisitor, implements, BSPTreeVisitor, <, Euclidean3D, >, {, public, FacetsContributionVisitor, (, ), {, setSize]
[), ), ;, }, }, private, class, FacetsContributionVisitor, implements, BSPTreeVisitor, <, Euclidean3D, >, {, public, FacetsContributionVisitor, (, ), {, setSize]
[;, setBarycenter, (, new, Vector3D, (, 0, ,, 0, ,, 0, ), ), ;, }, public, Order, visitOrder, (, final]
[), ;, setBarycenter, (, new, Vector3D, (, 0, ,, 0, ,, 0, ), ), ;, }, public, Order, visitOrder, (]
[;, }, public, Order, visitOrder, (, final, BSPTree, <, Euclidean3D, >, node, ), {, return, Order, ., MINUS_SUB_PLUS, ;, }]
[), ;, }, public, Order, visitOrder, (, final, BSPTree, <, Euclidean3D, >, node, ), {, return, Order, ., MINUS_SUB_PLUS, ;]
[,, 0, ,, 0, ), ), ;, }, public, Order, visitOrder, (, final, BSPTree, <, Euclidean3D, >, node, ), {]
[,, 0, ), ), ;, }, public, Order, visitOrder, (, final, BSPTree, <, Euclidean3D, >, node, ), {, return, Order]
[), ), ;, }, public, Order, visitOrder, (, final, BSPTree, <, Euclidean3D, >, node, ), {, return, Order, ., MINUS_SUB_PLUS]
[;, }, public, void, visitInternalNode, (, final, BSPTree, <, Euclidean3D, >, node, ), {, @, SuppressWarnings, (, "unchecked", ), final]
[., MINUS_SUB_PLUS, ;, }, public, void, visitInternalNode, (, final, BSPTree, <, Euclidean3D, >, node, ), {, @, SuppressWarnings, (, "unchecked"]
[final, BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;, if]
[), final, BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;]
[;, if, (, attribute, ., getPlusOutside, (, ), !=, null, ), {, addContribution, (, attribute, ., getPlusOutside, (, ), ,]
[;, if, (, attribute, ., getPlusOutside, (, ), !=, null, ), {, addContribution, (, attribute, ., getPlusOutside, (, ), ,]
[., getAttribute, (, ), ;, if, (, attribute, ., getPlusOutside, (, ), !=, null, ), {, addContribution, (, attribute, .]
[), {, addContribution, (, attribute, ., getPlusOutside, (, ), ,, false, ), ;, }, if, (, attribute, ., getPlusInside, (]
[!=, null, ), {, addContribution, (, attribute, ., getPlusOutside, (, ), ,, false, ), ;, }, if, (, attribute, .]
[., getPlusOutside, (, ), !=, null, ), {, addContribution, (, attribute, ., getPlusOutside, (, ), ,, false, ), ;, }]
[), {, addContribution, (, attribute, ., getPlusOutside, (, ), ,, false, ), ;, }, if, (, attribute, ., getPlusInside, (]
[;, }, if, (, attribute, ., getPlusInside, (, ), !=, null, ), {, addContribution, (, attribute, ., getPlusInside, (, )]
[,, false, ), ;, }, if, (, attribute, ., getPlusInside, (, ), !=, null, ), {, addContribution, (, attribute, .]
[., getPlusOutside, (, ), ,, false, ), ;, }, if, (, attribute, ., getPlusInside, (, ), !=, null, ), {]
[), ;, }, if, (, attribute, ., getPlusInside, (, ), !=, null, ), {, addContribution, (, attribute, ., getPlusInside, (]
[), {, addContribution, (, attribute, ., getPlusInside, (, ), ,, true, ), ;, }, }, public, void, visitLeafNode, (, final]
[!=, null, ), {, addContribution, (, attribute, ., getPlusInside, (, ), ,, true, ), ;, }, }, public, void, visitLeafNode]
[., getPlusInside, (, ), !=, null, ), {, addContribution, (, attribute, ., getPlusInside, (, ), ,, true, ), ;, }]
[), {, addContribution, (, attribute, ., getPlusInside, (, ), ,, true, ), ;, }, }, public, void, visitLeafNode, (, final]
[;, }, }, public, void, visitLeafNode, (, final, BSPTree, <, Euclidean3D, >, node, ), {, }, private, void, addContribution, (]
[,, true, ), ;, }, }, public, void, visitLeafNode, (, final, BSPTree, <, Euclidean3D, >, node, ), {, }, private]
[., getPlusInside, (, ), ,, true, ), ;, }, }, public, void, visitLeafNode, (, final, BSPTree, <, Euclidean3D, >, node]
[), ;, }, }, public, void, visitLeafNode, (, final, BSPTree, <, Euclidean3D, >, node, ), {, }, private, void, addContribution]
[;, final, double, area, =, polygon, ., getSize, (, ), ;, if, (, Double, ., isInfinite, (, area, ), )]
[., getRemainingRegion, (, ), ;, final, double, area, =, polygon, ., getSize, (, ), ;, if, (, Double, ., isInfinite]
[), ., getRemainingRegion, (, ), ;, final, double, area, =, polygon, ., getSize, (, ), ;, if, (, Double, .]
[), ., getRemainingRegion, (, ), ;, final, double, area, =, polygon, ., getSize, (, ), ;, if, (, Double, .]
[;, if, (, Double, ., isInfinite, (, area, ), ), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (]
[., getSize, (, ), ;, if, (, Double, ., isInfinite, (, area, ), ), {, setSize, (, Double, ., POSITIVE_INFINITY]
[), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, final]
[., isInfinite, (, area, ), ), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, )]
[), ), {, setSize, (, Double, ., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {]
[;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, final, Plane, plane, =, (, Plane, ), facet, .]
[), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, final, Plane, plane, =, (, Plane, ), facet]
[., POSITIVE_INFINITY, ), ;, setBarycenter, (, Vector3D, ., NaN, ), ;, }, else, {, final, Plane, plane, =, (, Plane]
[;, }, else, {, final, Plane, plane, =, (, Plane, ), facet, ., getHyperplane, (, ), ;, final, Vector3D, facetB]
[), ;, }, else, {, final, Plane, plane, =, (, Plane, ), facet, ., getHyperplane, (, ), ;, final, Vector3D]
[., NaN, ), ;, }, else, {, final, Plane, plane, =, (, Plane, ), facet, ., getHyperplane, (, ), ;]
[;, final, Vector3D, facetB, =, plane, ., toSpace, (, polygon, ., getBarycenter, (, ), ), ;, double, scaled, =, area]
[;, final, Vector3D, facetB, =, plane, ., toSpace, (, polygon, ., getBarycenter, (, ), ), ;, double, scaled, =, area]
[., getHyperplane, (, ), ;, final, Vector3D, facetB, =, plane, ., toSpace, (, polygon, ., getBarycenter, (, ), ), ;]
[;, double, scaled, =, area, *, facetB, ., dotProduct, (, plane, ., getNormal, (, ), ), ;, if, (, reversed]
[., toSpace, (, polygon, ., getBarycenter, (, ), ), ;, double, scaled, =, area, *, facetB, ., dotProduct, (, plane]
[), ;, double, scaled, =, area, *, facetB, ., dotProduct, (, plane, ., getNormal, (, ), ), ;, if, (]
[., getBarycenter, (, ), ), ;, double, scaled, =, area, *, facetB, ., dotProduct, (, plane, ., getNormal, (, )]
[;, if, (, reversed, ), {, scaled, =, -, scaled, ;, }, setSize, (, getSize, (, ), +, scaled, )]
[*, facetB, ., dotProduct, (, plane, ., getNormal, (, ), ), ;, if, (, reversed, ), {, scaled, =, -]
[;, if, (, reversed, ), {, scaled, =, -, scaled, ;, }, setSize, (, getSize, (, ), +, scaled, )]
[., dotProduct, (, plane, ., getNormal, (, ), ), ;, if, (, reversed, ), {, scaled, =, -, scaled, ;]
[), ;, if, (, reversed, ), {, scaled, =, -, scaled, ;, }, setSize, (, getSize, (, ), +, scaled]
[., getNormal, (, ), ), ;, if, (, reversed, ), {, scaled, =, -, scaled, ;, }, setSize, (, getSize]
[), {, scaled, =, -, scaled, ;, }, setSize, (, getSize, (, ), +, scaled, ), ;, setBarycenter, (, new]
[=, -, scaled, ;, }, setSize, (, getSize, (, ), +, scaled, ), ;, setBarycenter, (, new, Vector3D, (, 1.0]
[;, }, setSize, (, getSize, (, ), +, scaled, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, ,, (, Vector3D]
[;, }, setSize, (, getSize, (, ), +, scaled, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, ,, (, Vector3D]
[;, setBarycenter, (, new, Vector3D, (, 1.0, ,, (, Vector3D, ), getBarycenter, (, ), ,, scaled, ,, facetB, ), )]
[), ;, setBarycenter, (, new, Vector3D, (, 1.0, ,, (, Vector3D, ), getBarycenter, (, ), ,, scaled, ,, facetB, )]
[+, scaled, ), ;, setBarycenter, (, new, Vector3D, (, 1.0, ,, (, Vector3D, ), getBarycenter, (, ), ,, scaled, ,]
[), ;, setBarycenter, (, new, Vector3D, (, 1.0, ,, (, Vector3D, ), getBarycenter, (, ), ,, scaled, ,, facetB, )]
[;, }, }, }, public, SubHyperplane, <, Euclidean3D, >, firstIntersection, (, final, Vector3D, point, ,, final, Line, line, ), {]
[), ;, }, }, }, public, SubHyperplane, <, Euclidean3D, >, firstIntersection, (, final, Vector3D, point, ,, final, Line, line, )]
[,, (, Vector3D, ), getBarycenter, (, ), ,, scaled, ,, facetB, ), ), ;, }, }, }, public, SubHyperplane, <]
[,, scaled, ,, facetB, ), ), ;, }, }, }, public, SubHyperplane, <, Euclidean3D, >, firstIntersection, (, final, Vector3D, point]
[,, scaled, ,, facetB, ), ), ;, }, }, }, public, SubHyperplane, <, Euclidean3D, >, firstIntersection, (, final, Vector3D, point]
[,, facetB, ), ), ;, }, }, }, public, SubHyperplane, <, Euclidean3D, >, firstIntersection, (, final, Vector3D, point, ,, final]
[), ), ;, }, }, }, public, SubHyperplane, <, Euclidean3D, >, firstIntersection, (, final, Vector3D, point, ,, final, Line, line]
[;, }, private, SubHyperplane, <, Euclidean3D, >, recurseFirstIntersection, (, final, BSPTree, <, Euclidean3D, >, node, ,, final, Vector3D, point, ,]
[,, point, ,, line, ), ;, }, private, SubHyperplane, <, Euclidean3D, >, recurseFirstIntersection, (, final, BSPTree, <, Euclidean3D, >, node]
[), ,, point, ,, line, ), ;, }, private, SubHyperplane, <, Euclidean3D, >, recurseFirstIntersection, (, final, BSPTree, <, Euclidean3D, >]
[,, line, ), ;, }, private, SubHyperplane, <, Euclidean3D, >, recurseFirstIntersection, (, final, BSPTree, <, Euclidean3D, >, node, ,, final]
[), ;, }, private, SubHyperplane, <, Euclidean3D, >, recurseFirstIntersection, (, final, BSPTree, <, Euclidean3D, >, node, ,, final, Vector3D, point]
[;, if, (, cut, ==, null, ), {, return, null, ;, }, final, BSPTree, <, Euclidean3D, >, minus, =, node]
[., getCut, (, ), ;, if, (, cut, ==, null, ), {, return, null, ;, }, final, BSPTree, <, Euclidean3D]
[), {, return, null, ;, }, final, BSPTree, <, Euclidean3D, >, minus, =, node, ., getMinus, (, ), ;, final]
[==, null, ), {, return, null, ;, }, final, BSPTree, <, Euclidean3D, >, minus, =, node, ., getMinus, (, )]
[), {, return, null, ;, }, final, BSPTree, <, Euclidean3D, >, minus, =, node, ., getMinus, (, ), ;, final]
[;, }, final, BSPTree, <, Euclidean3D, >, minus, =, node, ., getMinus, (, ), ;, final, BSPTree, <, Euclidean3D, >]
[;, final, BSPTree, <, Euclidean3D, >, plus, =, node, ., getPlus, (, ), ;, final, Plane, plane, =, (, Plane]
[., getMinus, (, ), ;, final, BSPTree, <, Euclidean3D, >, plus, =, node, ., getPlus, (, ), ;, final, Plane]
[;, final, Plane, plane, =, (, Plane, ), cut, ., getHyperplane, (, ), ;, final, double, offset, =, plane, .]
[., getPlus, (, ), ;, final, Plane, plane, =, (, Plane, ), cut, ., getHyperplane, (, ), ;, final, double]
[;, final, double, offset, =, plane, ., getOffset, (, point, ), ;, final, boolean, in, =, FastMath, ., abs, (]
[;, final, double, offset, =, plane, ., getOffset, (, point, ), ;, final, boolean, in, =, FastMath, ., abs, (]
[., getHyperplane, (, ), ;, final, double, offset, =, plane, ., getOffset, (, point, ), ;, final, boolean, in, =]
[;, final, boolean, in, =, FastMath, ., abs, (, offset, ), <, 1.0e-10, ;, final, BSPTree, <, Euclidean3D, >, near]
[., getOffset, (, point, ), ;, final, boolean, in, =, FastMath, ., abs, (, offset, ), <, 1.0e-10, ;, final]
[), ;, final, boolean, in, =, FastMath, ., abs, (, offset, ), <, 1.0e-10, ;, final, BSPTree, <, Euclidean3D, >]
[;, final, BSPTree, <, Euclidean3D, >, near, ;, final, BSPTree, <, Euclidean3D, >, far, ;, if, (, offset, <, 0]
[<, 1.0e-10, ;, final, BSPTree, <, Euclidean3D, >, near, ;, final, BSPTree, <, Euclidean3D, >, far, ;, if, (, offset]
[., abs, (, offset, ), <, 1.0e-10, ;, final, BSPTree, <, Euclidean3D, >, near, ;, final, BSPTree, <, Euclidean3D, >]
[), <, 1.0e-10, ;, final, BSPTree, <, Euclidean3D, >, near, ;, final, BSPTree, <, Euclidean3D, >, far, ;, if, (]
[;, final, BSPTree, <, Euclidean3D, >, near, ;, final, BSPTree, <, Euclidean3D, >, far, ;, if, (, offset, <, 0]
[), {, near, =, minus, ;, far, =, plus, ;, }, else, {, near, =, plus, ;, far, =, minus]
[<, 0, ), {, near, =, minus, ;, far, =, plus, ;, }, else, {, near, =, plus, ;, far]
[), {, near, =, minus, ;, far, =, plus, ;, }, else, {, near, =, plus, ;, far, =, minus]
[=, minus, ;, far, =, plus, ;, }, else, {, near, =, plus, ;, far, =, minus, ;, }, if]
[;, far, =, plus, ;, }, else, {, near, =, plus, ;, far, =, minus, ;, }, if, (, in]
[=, plus, ;, }, else, {, near, =, plus, ;, far, =, minus, ;, }, if, (, in, ), {]
[;, }, else, {, near, =, plus, ;, far, =, minus, ;, }, if, (, in, ), {, final, SubHyperplane]
[=, plus, ;, far, =, minus, ;, }, if, (, in, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =]
[;, far, =, minus, ;, }, if, (, in, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (]
[=, minus, ;, }, if, (, in, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, point, ,]
[;, }, if, (, in, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, point, ,, node, )]
[), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, point, ,, node, ), ;, if, (, facet, !=]
[;, if, (, facet, !=, null, ), {, return, facet, ;, }, }, final, SubHyperplane, <, Euclidean3D, >, crossed, =]
[,, node, ), ;, if, (, facet, !=, null, ), {, return, facet, ;, }, }, final, SubHyperplane, <, Euclidean3D]
[), ;, if, (, facet, !=, null, ), {, return, facet, ;, }, }, final, SubHyperplane, <, Euclidean3D, >, crossed]
[), {, return, facet, ;, }, }, final, SubHyperplane, <, Euclidean3D, >, crossed, =, recurseFirstIntersection, (, near, ,, point, ,]
[!=, null, ), {, return, facet, ;, }, }, final, SubHyperplane, <, Euclidean3D, >, crossed, =, recurseFirstIntersection, (, near, ,]
[), {, return, facet, ;, }, }, final, SubHyperplane, <, Euclidean3D, >, crossed, =, recurseFirstIntersection, (, near, ,, point, ,]
[;, }, }, final, SubHyperplane, <, Euclidean3D, >, crossed, =, recurseFirstIntersection, (, near, ,, point, ,, line, ), ;, if]
[;, if, (, crossed, !=, null, ), {, return, crossed, ;, }, if, (, !, in, ), {, final, Vector3D]
[,, point, ,, line, ), ;, if, (, crossed, !=, null, ), {, return, crossed, ;, }, if, (, !]
[,, line, ), ;, if, (, crossed, !=, null, ), {, return, crossed, ;, }, if, (, !, in, )]
[), ;, if, (, crossed, !=, null, ), {, return, crossed, ;, }, if, (, !, in, ), {, final]
[), {, return, crossed, ;, }, if, (, !, in, ), {, final, Vector3D, hit3D, =, plane, ., intersection, (]
[!=, null, ), {, return, crossed, ;, }, if, (, !, in, ), {, final, Vector3D, hit3D, =, plane, .]
[), {, return, crossed, ;, }, if, (, !, in, ), {, final, Vector3D, hit3D, =, plane, ., intersection, (]
[;, }, if, (, !, in, ), {, final, Vector3D, hit3D, =, plane, ., intersection, (, line, ), ;, if]
[), {, final, Vector3D, hit3D, =, plane, ., intersection, (, line, ), ;, if, (, hit3D, !=, null, ), {]
[), {, final, Vector3D, hit3D, =, plane, ., intersection, (, line, ), ;, if, (, hit3D, !=, null, ), {]
[;, if, (, hit3D, !=, null, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, hit3D, ,, node]
[., intersection, (, line, ), ;, if, (, hit3D, !=, null, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =]
[), ;, if, (, hit3D, !=, null, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, hit3D, ,]
[), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, hit3D, ,, node, ), ;, if, (, facet, !=]
[!=, null, ), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, hit3D, ,, node, ), ;, if, (]
[), {, final, SubHyperplane, <, Euclidean3D, >, facet, =, boundaryFacet, (, hit3D, ,, node, ), ;, if, (, facet, !=]
[;, if, (, facet, !=, null, ), {, return, facet, ;, }, }, }, return, recurseFirstIntersection, (, far, ,, point]
[,, node, ), ;, if, (, facet, !=, null, ), {, return, facet, ;, }, }, }, return, recurseFirstIntersection, (]
[), ;, if, (, facet, !=, null, ), {, return, facet, ;, }, }, }, return, recurseFirstIntersection, (, far, ,]
[), {, return, facet, ;, }, }, }, return, recurseFirstIntersection, (, far, ,, point, ,, line, ), ;, }, private]
[!=, null, ), {, return, facet, ;, }, }, }, return, recurseFirstIntersection, (, far, ,, point, ,, line, ), ;]
[), {, return, facet, ;, }, }, }, return, recurseFirstIntersection, (, far, ,, point, ,, line, ), ;, }, private]
[;, }, }, }, return, recurseFirstIntersection, (, far, ,, point, ,, line, ), ;, }, private, SubHyperplane, <, Euclidean3D, >]
[;, }, private, SubHyperplane, <, Euclidean3D, >, boundaryFacet, (, final, Vector3D, point, ,, final, BSPTree, <, Euclidean3D, >, node, )]
[,, point, ,, line, ), ;, }, private, SubHyperplane, <, Euclidean3D, >, boundaryFacet, (, final, Vector3D, point, ,, final, BSPTree]
[,, line, ), ;, }, private, SubHyperplane, <, Euclidean3D, >, boundaryFacet, (, final, Vector3D, point, ,, final, BSPTree, <, Euclidean3D]
[), ;, }, private, SubHyperplane, <, Euclidean3D, >, boundaryFacet, (, final, Vector3D, point, ,, final, BSPTree, <, Euclidean3D, >, node]
[;, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, ), node]
[., toSubSpace, (, point, ), ;, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute]
[), ., toSubSpace, (, point, ), ;, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, Euclidean3D, >, attribute, =, (]
[), ., toSubSpace, (, point, ), ;, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, Euclidean3D, >, attribute, =, (]
[., getHyperplane, (, ), ), ., toSubSpace, (, point, ), ;, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, Euclidean3D]
[., getCut, (, ), ., getHyperplane, (, ), ), ., toSubSpace, (, point, ), ;, @, SuppressWarnings, (, "unchecked", )]
[), ;, @, SuppressWarnings, (, "unchecked", ), final, BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, )]
[final, BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;, if]
[), final, BoundaryAttribute, <, Euclidean3D, >, attribute, =, (, BoundaryAttribute, <, Euclidean3D, >, ), node, ., getAttribute, (, ), ;]
[;, if, (, (, attribute, ., getPlusOutside, (, ), !=, null, ), &&, (, (, (, SubPlane, ), attribute, .]
[;, if, (, (, attribute, ., getPlusOutside, (, ), !=, null, ), &&, (, (, (, SubPlane, ), attribute, .]
[., getAttribute, (, ), ;, if, (, (, attribute, ., getPlusOutside, (, ), !=, null, ), &&, (, (, (]
[), {, return, attribute, ., getPlusOutside, (, ), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=, null]
[&&, (, (, (, SubPlane, ), attribute, ., getPlusOutside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (, point2D]
[), &&, (, (, (, SubPlane, ), attribute, ., getPlusOutside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (]
[!=, null, ), &&, (, (, (, SubPlane, ), attribute, ., getPlusOutside, (, ), ), ., getRemainingRegion, (, ), .]
[., getPlusOutside, (, ), !=, null, ), &&, (, (, (, SubPlane, ), attribute, ., getPlusOutside, (, ), ), .]
[), &&, (, (, (, SubPlane, ), attribute, ., getPlusOutside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (]
[), {, return, attribute, ., getPlusOutside, (, ), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=, null]
[), ), {, return, attribute, ., getPlusOutside, (, ), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=]
[==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusOutside, (, ), ;, }, if, (, (, attribute, .]
[., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusOutside, (, ), ;, }]
[., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusOutside]
[), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, .]
[), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, .]
[., getPlusOutside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), )]
[), ==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusOutside, (, ), ;, }, if, (, (, attribute]
[), ), {, return, attribute, ., getPlusOutside, (, ), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=]
[., INSIDE, ), ), {, return, attribute, ., getPlusOutside, (, ), ;, }, if, (, (, attribute, ., getPlusInside, (]
[;, }, if, (, (, attribute, ., getPlusInside, (, ), !=, null, ), &&, (, (, (, SubPlane, ), attribute]
[., getPlusOutside, (, ), ;, }, if, (, (, attribute, ., getPlusInside, (, ), !=, null, ), &&, (, (]
[), {, return, attribute, ., getPlusInside, (, ), ;, }, return, null, ;, }, public, PolyhedronsSet, rotate, (, final, Vector3D]
[&&, (, (, (, SubPlane, ), attribute, ., getPlusInside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (, point2D]
[), &&, (, (, (, SubPlane, ), attribute, ., getPlusInside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (]
[!=, null, ), &&, (, (, (, SubPlane, ), attribute, ., getPlusInside, (, ), ), ., getRemainingRegion, (, ), .]
[., getPlusInside, (, ), !=, null, ), &&, (, (, (, SubPlane, ), attribute, ., getPlusInside, (, ), ), .]
[), &&, (, (, (, SubPlane, ), attribute, ., getPlusInside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (]
[), {, return, attribute, ., getPlusInside, (, ), ;, }, return, null, ;, }, public, PolyhedronsSet, rotate, (, final, Vector3D]
[), ), {, return, attribute, ., getPlusInside, (, ), ;, }, return, null, ;, }, public, PolyhedronsSet, rotate, (, final]
[==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusInside, (, ), ;, }, return, null, ;, }, public]
[., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusInside, (, ), ;, }]
[., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusInside]
[), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, .]
[), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), ), {, return, attribute, .]
[., getPlusInside, (, ), ), ., getRemainingRegion, (, ), ., checkPoint, (, point2D, ), ==, Location, ., INSIDE, ), )]
[), ==, Location, ., INSIDE, ), ), {, return, attribute, ., getPlusInside, (, ), ;, }, return, null, ;, }]
[), ), {, return, attribute, ., getPlusInside, (, ), ;, }, return, null, ;, }, public, PolyhedronsSet, rotate, (, final]
[., INSIDE, ), ), {, return, attribute, ., getPlusInside, (, ), ;, }, return, null, ;, }, public, PolyhedronsSet, rotate]
[;, }, return, null, ;, }, public, PolyhedronsSet, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, return]
[., getPlusInside, (, ), ;, }, return, null, ;, }, public, PolyhedronsSet, rotate, (, final, Vector3D, center, ,, final, Rotation]
[;, }, public, PolyhedronsSet, rotate, (, final, Vector3D, center, ,, final, Rotation, rotation, ), {, return, (, PolyhedronsSet, ), applyTransform]
[;, }, private, static, class, RotationTransform, implements, Transform, <, Euclidean3D, ,, Euclidean2D, >, {, private, Vector3D, center, ;, private, Rotation]
[;, }, private, static, class, RotationTransform, implements, Transform, <, Euclidean3D, ,, Euclidean2D, >, {, private, Vector3D, center, ;, private, Rotation]
[), ;, }, private, static, class, RotationTransform, implements, Transform, <, Euclidean3D, ,, Euclidean2D, >, {, private, Vector3D, center, ;, private]
[,, rotation, ), ), ;, }, private, static, class, RotationTransform, implements, Transform, <, Euclidean3D, ,, Euclidean2D, >, {, private, Vector3D]
[), ), ;, }, private, static, class, RotationTransform, implements, Transform, <, Euclidean3D, ,, Euclidean2D, >, {, private, Vector3D, center, ;]
[=, center, ;, this, ., rotation, =, rotation, ;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point]
[., center, =, center, ;, this, ., rotation, =, rotation, ;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D]
[;, this, ., rotation, =, rotation, ;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {]
[=, rotation, ;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, final, Vector3D, delta, =]
[., rotation, =, rotation, ;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, final, Vector3D]
[;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, final, Vector3D, delta, =, (, (]
[;, return, new, Vector3D, (, 1.0, ,, center, ,, 1.0, ,, rotation, ., applyTo, (, delta, ), ), ;, }]
[., subtract, (, center, ), ;, return, new, Vector3D, (, 1.0, ,, center, ,, 1.0, ,, rotation, ., applyTo, (]
[), ., subtract, (, center, ), ;, return, new, Vector3D, (, 1.0, ,, center, ,, 1.0, ,, rotation, ., applyTo]
[), ., subtract, (, center, ), ;, return, new, Vector3D, (, 1.0, ,, center, ,, 1.0, ,, rotation, ., applyTo]
[), ;, return, new, Vector3D, (, 1.0, ,, center, ,, 1.0, ,, rotation, ., applyTo, (, delta, ), ), ;]
[;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return, (, (, Plane, ), hyperplane]
[,, center, ,, 1.0, ,, rotation, ., applyTo, (, delta, ), ), ;, }, public, Plane, apply, (, final, Hyperplane]
[,, 1.0, ,, rotation, ., applyTo, (, delta, ), ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D]
[,, rotation, ., applyTo, (, delta, ), ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane]
[), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return, (, (, Plane, )]
[., applyTo, (, delta, ), ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {]
[), ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return, (, (, Plane]
[;, }, public, SubHyperplane, <, Euclidean2D, >, apply, (, final, SubHyperplane, <, Euclidean2D, >, sub, ,, final, Hyperplane, <, Euclidean3D]
[., rotate, (, center, ,, rotation, ), ;, }, public, SubHyperplane, <, Euclidean2D, >, apply, (, final, SubHyperplane, <, Euclidean2D]
[), ., rotate, (, center, ,, rotation, ), ;, }, public, SubHyperplane, <, Euclidean2D, >, apply, (, final, SubHyperplane, <]
[), ., rotate, (, center, ,, rotation, ), ;, }, public, SubHyperplane, <, Euclidean2D, >, apply, (, final, SubHyperplane, <]
[,, rotation, ), ;, }, public, SubHyperplane, <, Euclidean2D, >, apply, (, final, SubHyperplane, <, Euclidean2D, >, sub, ,, final]
[), ;, }, public, SubHyperplane, <, Euclidean2D, >, apply, (, final, SubHyperplane, <, Euclidean2D, >, sub, ,, final, Hyperplane, <]
[), {, final, Plane, oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =, (, Plane, ), transformed, ;]
[!=, cachedOriginal, ), {, final, Plane, oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =, (, Plane, )]
[), {, final, Plane, oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =, (, Plane, ), transformed, ;]
[;, final, Plane, tPlane, =, (, Plane, ), transformed, ;, final, Vector3D, p00, =, oPlane, ., getOrigin, (, ), ;]
[;, final, Plane, tPlane, =, (, Plane, ), transformed, ;, final, Vector3D, p00, =, oPlane, ., getOrigin, (, ), ;]
[;, final, Vector3D, p00, =, oPlane, ., getOrigin, (, ), ;, final, Vector3D, p10, =, oPlane, ., toSpace, (, new]
[;, final, Vector3D, p00, =, oPlane, ., getOrigin, (, ), ;, final, Vector3D, p10, =, oPlane, ., toSpace, (, new]
[;, final, Vector3D, p10, =, oPlane, ., toSpace, (, new, Vector2D, (, 1.0, ,, 0.0, ), ), ;, final, Vector3D]
[., getOrigin, (, ), ;, final, Vector3D, p10, =, oPlane, ., toSpace, (, new, Vector2D, (, 1.0, ,, 0.0, )]
[;, final, Vector3D, p01, =, oPlane, ., toSpace, (, new, Vector2D, (, 0.0, ,, 1.0, ), ), ;, final, Vector2D]
[., toSpace, (, new, Vector2D, (, 1.0, ,, 0.0, ), ), ;, final, Vector3D, p01, =, oPlane, ., toSpace, (]
[), ;, final, Vector3D, p01, =, oPlane, ., toSpace, (, new, Vector2D, (, 0.0, ,, 1.0, ), ), ;, final]
[,, 0.0, ), ), ;, final, Vector3D, p01, =, oPlane, ., toSpace, (, new, Vector2D, (, 0.0, ,, 1.0, )]
[), ), ;, final, Vector3D, p01, =, oPlane, ., toSpace, (, new, Vector2D, (, 0.0, ,, 1.0, ), ), ;]
[;, final, Vector2D, tP00, =, tPlane, ., toSubSpace, (, apply, (, p00, ), ), ;, final, Vector2D, tP10, =, tPlane]
[., toSpace, (, new, Vector2D, (, 0.0, ,, 1.0, ), ), ;, final, Vector2D, tP00, =, tPlane, ., toSubSpace, (]
[), ;, final, Vector2D, tP00, =, tPlane, ., toSubSpace, (, apply, (, p00, ), ), ;, final, Vector2D, tP10, =]
[,, 1.0, ), ), ;, final, Vector2D, tP00, =, tPlane, ., toSubSpace, (, apply, (, p00, ), ), ;, final]
[), ), ;, final, Vector2D, tP00, =, tPlane, ., toSubSpace, (, apply, (, p00, ), ), ;, final, Vector2D, tP10]
[;, final, Vector2D, tP10, =, tPlane, ., toSubSpace, (, apply, (, p10, ), ), ;, final, Vector2D, tP01, =, tPlane]
[., toSubSpace, (, apply, (, p00, ), ), ;, final, Vector2D, tP10, =, tPlane, ., toSubSpace, (, apply, (, p10]
[), ;, final, Vector2D, tP10, =, tPlane, ., toSubSpace, (, apply, (, p10, ), ), ;, final, Vector2D, tP01, =]
[), ), ;, final, Vector2D, tP10, =, tPlane, ., toSubSpace, (, apply, (, p10, ), ), ;, final, Vector2D, tP01]
[;, final, Vector2D, tP01, =, tPlane, ., toSubSpace, (, apply, (, p01, ), ), ;, final, AffineTransform, at, =, new]
[., toSubSpace, (, apply, (, p10, ), ), ;, final, Vector2D, tP01, =, tPlane, ., toSubSpace, (, apply, (, p01]
[), ;, final, Vector2D, tP01, =, tPlane, ., toSubSpace, (, apply, (, p01, ), ), ;, final, AffineTransform, at, =]
[), ), ;, final, Vector2D, tP01, =, tPlane, ., toSubSpace, (, apply, (, p01, ), ), ;, final, AffineTransform, at]
[;, final, AffineTransform, at, =, new, AffineTransform, (, tP10, ., getX, (, ), -, tP00, ., getX, (, ), ,]
[., toSubSpace, (, apply, (, p01, ), ), ;, final, AffineTransform, at, =, new, AffineTransform, (, tP10, ., getX, (]
[), ;, final, AffineTransform, at, =, new, AffineTransform, (, tP10, ., getX, (, ), -, tP00, ., getX, (, )]
[), ), ;, final, AffineTransform, at, =, new, AffineTransform, (, tP10, ., getX, (, ), -, tP00, ., getX, (]
[;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =, org, ., apache, ., commons, ., math3, ., geometry, .]
[,, tP10, ., getY, (, ), -, tP00, ., getY, (, ), ,, tP01, ., getX, (, ), -, tP00]
[-, tP00, ., getX, (, ), ,, tP10, ., getY, (, ), -, tP00, ., getY, (, ), ,, tP01]
[., getX, (, ), -, tP00, ., getX, (, ), ,, tP10, ., getY, (, ), -, tP00, ., getY]
[,, tP10, ., getY, (, ), -, tP00, ., getY, (, ), ,, tP01, ., getX, (, ), -, tP00]
[., getX, (, ), ,, tP10, ., getY, (, ), -, tP00, ., getY, (, ), ,, tP01, ., getX]
[,, tP01, ., getX, (, ), -, tP00, ., getX, (, ), ,, tP01, ., getY, (, ), -, tP00]
[-, tP00, ., getY, (, ), ,, tP01, ., getX, (, ), -, tP00, ., getX, (, ), ,, tP01]
[., getY, (, ), -, tP00, ., getY, (, ), ,, tP01, ., getX, (, ), -, tP00, ., getX]
[,, tP01, ., getX, (, ), -, tP00, ., getX, (, ), ,, tP01, ., getY, (, ), -, tP00]
[., getY, (, ), ,, tP01, ., getX, (, ), -, tP00, ., getX, (, ), ,, tP01, ., getY]
[,, tP01, ., getY, (, ), -, tP00, ., getY, (, ), ,, tP00, ., getX, (, ), ,, tP00]
[-, tP00, ., getX, (, ), ,, tP01, ., getY, (, ), -, tP00, ., getY, (, ), ,, tP00]
[., getX, (, ), -, tP00, ., getX, (, ), ,, tP01, ., getY, (, ), -, tP00, ., getY]
[,, tP01, ., getY, (, ), -, tP00, ., getY, (, ), ,, tP00, ., getX, (, ), ,, tP00]
[., getX, (, ), ,, tP01, ., getY, (, ), -, tP00, ., getY, (, ), ,, tP00, ., getX]
[,, tP00, ., getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original]
[-, tP00, ., getY, (, ), ,, tP00, ., getX, (, ), ,, tP00, ., getY, (, ), ), ;]
[., getY, (, ), -, tP00, ., getY, (, ), ,, tP00, ., getX, (, ), ,, tP00, ., getY]
[,, tP00, ., getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original]
[., getY, (, ), ,, tP00, ., getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =]
[,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =, org, ., apache]
[., getX, (, ), ,, tP00, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform]
[), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =, org, ., apache, ., commons, ., math3, ., geometry]
[., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =, org, ., apache, ., commons]
[=, (, Plane, ), original, ;, cachedTransform, =, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, .]
[;, cachedTransform, =, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform]
[;, cachedTransform, =, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform]
[=, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at]
[;, }, return, (, (, SubLine, ), sub, ), ., applyTransform, (, cachedTransform, ), ;, }, }, public, PolyhedronsSet, translate]
[., getTransform, (, at, ), ;, }, return, (, (, SubLine, ), sub, ), ., applyTransform, (, cachedTransform, ), ;]
[., Line, ., getTransform, (, at, ), ;, }, return, (, (, SubLine, ), sub, ), ., applyTransform, (, cachedTransform]
[., twod, ., Line, ., getTransform, (, at, ), ;, }, return, (, (, SubLine, ), sub, ), ., applyTransform]
[., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return, (, (, SubLine, ), sub, )]
[., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return, (, (, SubLine, )]
[., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return, (, (]
[., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return]
[., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;]
[), ;, }, return, (, (, SubLine, ), sub, ), ., applyTransform, (, cachedTransform, ), ;, }, }, public, PolyhedronsSet]
[;, }, }, public, PolyhedronsSet, translate, (, final, Vector3D, translation, ), {, return, (, PolyhedronsSet, ), applyTransform, (, new, TranslationTransform]
[., applyTransform, (, cachedTransform, ), ;, }, }, public, PolyhedronsSet, translate, (, final, Vector3D, translation, ), {, return, (, PolyhedronsSet]
[), ., applyTransform, (, cachedTransform, ), ;, }, }, public, PolyhedronsSet, translate, (, final, Vector3D, translation, ), {, return, (]
[), ., applyTransform, (, cachedTransform, ), ;, }, }, public, PolyhedronsSet, translate, (, final, Vector3D, translation, ), {, return, (]
[), ;, }, }, public, PolyhedronsSet, translate, (, final, Vector3D, translation, ), {, return, (, PolyhedronsSet, ), applyTransform, (, new]
[;, }, private, static, class, TranslationTransform, implements, Transform, <, Euclidean3D, ,, Euclidean2D, >, {, private, Vector3D, translation, ;, private, Plane]
[;, }, private, static, class, TranslationTransform, implements, Transform, <, Euclidean3D, ,, Euclidean2D, >, {, private, Vector3D, translation, ;, private, Plane]
[), ;, }, private, static, class, TranslationTransform, implements, Transform, <, Euclidean3D, ,, Euclidean2D, >, {, private, Vector3D, translation, ;, private]
[), ), ;, }, private, static, class, TranslationTransform, implements, Transform, <, Euclidean3D, ,, Euclidean2D, >, {, private, Vector3D, translation, ;]
[=, translation, ;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, return, new, Vector3D, (]
[., translation, =, translation, ;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, return, new]
[;, }, public, Vector3D, apply, (, final, Vector, <, Euclidean3D, >, point, ), {, return, new, Vector3D, (, 1.0, ,]
[;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return, (, (, Plane, ), hyperplane]
[,, (, Vector3D, ), point, ,, 1.0, ,, translation, ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D]
[,, 1.0, ,, translation, ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return]
[,, 1.0, ,, translation, ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return]
[,, translation, ), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return, (, (]
[), ;, }, public, Plane, apply, (, final, Hyperplane, <, Euclidean3D, >, hyperplane, ), {, return, (, (, Plane, )]
[;, }, public, SubHyperplane, <, Euclidean2D, >, apply, (, final, SubHyperplane, <, Euclidean2D, >, sub, ,, final, Hyperplane, <, Euclidean3D]
[., translate, (, translation, ), ;, }, public, SubHyperplane, <, Euclidean2D, >, apply, (, final, SubHyperplane, <, Euclidean2D, >, sub]
[), ., translate, (, translation, ), ;, }, public, SubHyperplane, <, Euclidean2D, >, apply, (, final, SubHyperplane, <, Euclidean2D, >]
[), ., translate, (, translation, ), ;, }, public, SubHyperplane, <, Euclidean2D, >, apply, (, final, SubHyperplane, <, Euclidean2D, >]
[), ;, }, public, SubHyperplane, <, Euclidean2D, >, apply, (, final, SubHyperplane, <, Euclidean2D, >, sub, ,, final, Hyperplane, <]
[), {, final, Plane, oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =, (, Plane, ), transformed, ;]
[!=, cachedOriginal, ), {, final, Plane, oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =, (, Plane, )]
[), {, final, Plane, oPlane, =, (, Plane, ), original, ;, final, Plane, tPlane, =, (, Plane, ), transformed, ;]
[;, final, Plane, tPlane, =, (, Plane, ), transformed, ;, final, Vector2D, shift, =, tPlane, ., toSubSpace, (, apply, (]
[;, final, Plane, tPlane, =, (, Plane, ), transformed, ;, final, Vector2D, shift, =, tPlane, ., toSubSpace, (, apply, (]
[;, final, Vector2D, shift, =, tPlane, ., toSubSpace, (, apply, (, oPlane, ., getOrigin, (, ), ), ), ;, final]
[;, final, Vector2D, shift, =, tPlane, ., toSubSpace, (, apply, (, oPlane, ., getOrigin, (, ), ), ), ;, final]
[;, final, AffineTransform, at, =, AffineTransform, ., getTranslateInstance, (, shift, ., getX, (, ), ,, shift, ., getY, (, )]
[., toSubSpace, (, apply, (, oPlane, ., getOrigin, (, ), ), ), ;, final, AffineTransform, at, =, AffineTransform, ., getTranslateInstance]
[), ;, final, AffineTransform, at, =, AffineTransform, ., getTranslateInstance, (, shift, ., getX, (, ), ,, shift, ., getY, (]
[), ), ;, final, AffineTransform, at, =, AffineTransform, ., getTranslateInstance, (, shift, ., getX, (, ), ,, shift, ., getY]
[., getOrigin, (, ), ), ), ;, final, AffineTransform, at, =, AffineTransform, ., getTranslateInstance, (, shift, ., getX, (, )]
[;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =, org, ., apache, ., commons, ., math3, ., geometry, .]
[., getTranslateInstance, (, shift, ., getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane]
[,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =, org, ., apache]
[., getX, (, ), ,, shift, ., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform]
[), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =, org, ., apache, ., commons, ., math3, ., geometry]
[., getY, (, ), ), ;, cachedOriginal, =, (, Plane, ), original, ;, cachedTransform, =, org, ., apache, ., commons]
[=, (, Plane, ), original, ;, cachedTransform, =, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, .]
[;, cachedTransform, =, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform]
[;, cachedTransform, =, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform]
[=, org, ., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at]
[;, }, return, (, (, SubLine, ), sub, ), ., applyTransform, (, cachedTransform, ), ;, }, }, }]
[., getTransform, (, at, ), ;, }, return, (, (, SubLine, ), sub, ), ., applyTransform, (, cachedTransform, ), ;]
[., Line, ., getTransform, (, at, ), ;, }, return, (, (, SubLine, ), sub, ), ., applyTransform, (, cachedTransform]
[., twod, ., Line, ., getTransform, (, at, ), ;, }, return, (, (, SubLine, ), sub, ), ., applyTransform]
[., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return, (, (, SubLine, ), sub, )]
[., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return, (, (, SubLine, )]
[., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return, (, (]
[., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;, }, return]
[., apache, ., commons, ., math3, ., geometry, ., euclidean, ., twod, ., Line, ., getTransform, (, at, ), ;]
[), ;, }, return, (, (, SubLine, ), sub, ), ., applyTransform, (, cachedTransform, ), ;, }, }, }]
[;, }, }, }]
[., applyTransform, (, cachedTransform, ), ;, }, }, }]
[), ., applyTransform, (, cachedTransform, ), ;, }, }, }]
[), ., applyTransform, (, cachedTransform, ), ;, }, }, }]
[), ;, }, }, }]
