[Token, ;, import, java, ., util, ., Map, ;, class, SuppressDocWarningsGuard, extends, WarningsGuard, {, private, static, final, long, serialVersionUID, =]
[WarningsGuard, {, private, static, final, long, serialVersionUID, =, 1L, ;, private, final, Map, <, String, ,, DiagnosticGroupWarningsGuard, >, suppressors, =]
[WarningsGuard, {, private, static, final, long, serialVersionUID, =, 1L, ;, private, final, Map, <, String, ,, DiagnosticGroupWarningsGuard, >, suppressors, =]
[<, String, ,, DiagnosticGroup, >, suppressibleGroups, ), {, for, (, Map, ., Entry, <, String, ,, DiagnosticGroup, >, entry, :]
[<, String, ,, DiagnosticGroup, >, suppressibleGroups, ), {, for, (, Map, ., Entry, <, String, ,, DiagnosticGroup, >, entry, :]
[{, for, (, Map, ., Entry, <, String, ,, DiagnosticGroup, >, entry, :, suppressibleGroups, ., entrySet, (, ), ), {]
[{, for, (, Map, ., Entry, <, String, ,, DiagnosticGroup, >, entry, :, suppressibleGroups, ., entrySet, (, ), ), {]
[., Entry, <, String, ,, DiagnosticGroup, >, entry, :, suppressibleGroups, ., entrySet, (, ), ), {, suppressors, ., put, (]
[., Entry, <, String, ,, DiagnosticGroup, >, entry, :, suppressibleGroups, ., entrySet, (, ), ), {, suppressors, ., put, (]
[>, entry, :, suppressibleGroups, ., entrySet, (, ), ), {, suppressors, ., put, (, entry, ., getKey, (, ), ,]
[suppressibleGroups, ., entrySet, (, ), ), {, suppressors, ., put, (, entry, ., getKey, (, ), ,, new, DiagnosticGroupWarningsGuard, (]
[suppressibleGroups, ., entrySet, (, ), ), {, suppressors, ., put, (, entry, ., getKey, (, ), ,, new, DiagnosticGroupWarningsGuard, (]
[{, suppressors, ., put, (, entry, ., getKey, (, ), ,, new, DiagnosticGroupWarningsGuard, (, entry, ., getValue, (, ), ,]
[{, suppressors, ., put, (, entry, ., getKey, (, ), ,, new, DiagnosticGroupWarningsGuard, (, entry, ., getValue, (, ), ,]
[., OFF, ), ), ;, }, }, @, Override, public, CheckLevel, level, (, JSError, error, ), {, Node, node, =]
[., OFF, ), ), ;, }, }, @, Override, public, CheckLevel, level, (, JSError, error, ), {, Node, node, =]
[}, @, Override, public, CheckLevel, level, (, JSError, error, ), {, Node, node, =, error, ., node, ;, if, (]
[}, @, Override, public, CheckLevel, level, (, JSError, error, ), {, Node, node, =, error, ., node, ;, if, (]
[Override, public, CheckLevel, level, (, JSError, error, ), {, Node, node, =, error, ., node, ;, if, (, node, !=]
[{, Node, node, =, error, ., node, ;, if, (, node, !=, null, ), {, for, (, Node, current, =]
[node, =, error, ., node, ;, if, (, node, !=, null, ), {, for, (, Node, current, =, node, ;]
[node, =, error, ., node, ;, if, (, node, !=, null, ), {, for, (, Node, current, =, node, ;]
[error, ., node, ;, if, (, node, !=, null, ), {, for, (, Node, current, =, node, ;, current, !=]
[node, ;, if, (, node, !=, null, ), {, for, (, Node, current, =, node, ;, current, !=, null, ;]
[if, (, node, !=, null, ), {, for, (, Node, current, =, node, ;, current, !=, null, ;, current, =]
[if, (, node, !=, null, ), {, for, (, Node, current, =, node, ;, current, !=, null, ;, current, =]
[current, =, node, ;, current, !=, null, ;, current, =, current, ., getParent, (, ), ), {, int, type, =]
[current, =, node, ;, current, !=, null, ;, current, =, current, ., getParent, (, ), ), {, int, type, =]
[=, current, ., getParent, (, ), ), {, int, type, =, current, ., getType, (, ), ;, JSDocInfo, info, =]
[(, ), ), {, int, type, =, current, ., getType, (, ), ;, JSDocInfo, info, =, null, ;, if, (]
[(, ), ), {, int, type, =, current, ., getType, (, ), ;, JSDocInfo, info, =, null, ;, if, (]
[), {, int, type, =, current, ., getType, (, ), ;, JSDocInfo, info, =, null, ;, if, (, type, ==]
[), {, int, type, =, current, ., getType, (, ), ;, JSDocInfo, info, =, null, ;, if, (, type, ==]
[current, ., getType, (, ), ;, JSDocInfo, info, =, null, ;, if, (, type, ==, Token, ., FUNCTION, ), {]
[getType, (, ), ;, JSDocInfo, info, =, null, ;, if, (, type, ==, Token, ., FUNCTION, ), {, info, =]
[getType, (, ), ;, JSDocInfo, info, =, null, ;, if, (, type, ==, Token, ., FUNCTION, ), {, info, =]
[JSDocInfo, info, =, null, ;, if, (, type, ==, Token, ., FUNCTION, ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (]
[type, ==, Token, ., FUNCTION, ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, current, ), ;, }, else, if, (]
[type, ==, Token, ., FUNCTION, ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, current, ), ;, }, else, if, (]
[Token, ., FUNCTION, ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, current, ), ;, }, else, if, (, type, ==]
[Token, ., FUNCTION, ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, current, ), ;, }, else, if, (, type, ==]
[info, =, NodeUtil, ., getFunctionJSDocInfo, (, current, ), ;, }, else, if, (, type, ==, Token, ., SCRIPT, ), {]
[NodeUtil, ., getFunctionJSDocInfo, (, current, ), ;, }, else, if, (, type, ==, Token, ., SCRIPT, ), {, info, =]
[NodeUtil, ., getFunctionJSDocInfo, (, current, ), ;, }, else, if, (, type, ==, Token, ., SCRIPT, ), {, info, =]
[(, type, ==, Token, ., SCRIPT, ), {, info, =, current, ., getJSDocInfo, (, ), ;, }, else, if, (]
[(, type, ==, Token, ., SCRIPT, ), {, info, =, current, ., getJSDocInfo, (, ), ;, }, else, if, (]
[==, Token, ., SCRIPT, ), {, info, =, current, ., getJSDocInfo, (, ), ;, }, else, if, (, type, ==]
[==, Token, ., SCRIPT, ), {, info, =, current, ., getJSDocInfo, (, ), ;, }, else, if, (, type, ==]
[current, ., getJSDocInfo, (, ), ;, }, else, if, (, type, ==, Token, ., ASSIGN, ), {, Node, rhs, =]
[current, ., getJSDocInfo, (, ), ;, }, else, if, (, type, ==, Token, ., ASSIGN, ), {, Node, rhs, =]
[if, (, type, ==, Token, ., ASSIGN, ), {, Node, rhs, =, current, ., getLastChild, (, ), ;, if, (]
[if, (, type, ==, Token, ., ASSIGN, ), {, Node, rhs, =, current, ., getLastChild, (, ), ;, if, (]
[), {, Node, rhs, =, current, ., getLastChild, (, ), ;, if, (, rhs, ., isFunction, (, ), ), {]
[Node, rhs, =, current, ., getLastChild, (, ), ;, if, (, rhs, ., isFunction, (, ), ), {, info, =]
[Node, rhs, =, current, ., getLastChild, (, ), ;, if, (, rhs, ., isFunction, (, ), ), {, info, =]
[., getLastChild, (, ), ;, if, (, rhs, ., isFunction, (, ), ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (]
[rhs, ., isFunction, (, ), ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, rhs, ), ;, }, }, if, (]
[rhs, ., isFunction, (, ), ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, rhs, ), ;, }, }, if, (]
[isFunction, (, ), ), {, info, =, NodeUtil, ., getFunctionJSDocInfo, (, rhs, ), ;, }, }, if, (, info, !=]
[., getFunctionJSDocInfo, (, rhs, ), ;, }, }, if, (, info, !=, null, ), {, for, (, String, suppressor, :]
[., getFunctionJSDocInfo, (, rhs, ), ;, }, }, if, (, info, !=, null, ), {, for, (, String, suppressor, :]
[info, !=, null, ), {, for, (, String, suppressor, :, info, ., getSuppressions, (, ), ), {, WarningsGuard, guard, =]
[info, !=, null, ), {, for, (, String, suppressor, :, info, ., getSuppressions, (, ), ), {, WarningsGuard, guard, =]
[{, for, (, String, suppressor, :, info, ., getSuppressions, (, ), ), {, WarningsGuard, guard, =, suppressors, ., get, (]
[:, info, ., getSuppressions, (, ), ), {, WarningsGuard, guard, =, suppressors, ., get, (, suppressor, ), ;, if, (]
[:, info, ., getSuppressions, (, ), ), {, WarningsGuard, guard, =, suppressors, ., get, (, suppressor, ), ;, if, (]
[., getSuppressions, (, ), ), {, WarningsGuard, guard, =, suppressors, ., get, (, suppressor, ), ;, if, (, guard, !=]
[WarningsGuard, guard, =, suppressors, ., get, (, suppressor, ), ;, if, (, guard, !=, null, ), {, CheckLevel, newLevel, =]
[WarningsGuard, guard, =, suppressors, ., get, (, suppressor, ), ;, if, (, guard, !=, null, ), {, CheckLevel, newLevel, =]
[., get, (, suppressor, ), ;, if, (, guard, !=, null, ), {, CheckLevel, newLevel, =, guard, ., level, (]
[;, if, (, guard, !=, null, ), {, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (]
[;, if, (, guard, !=, null, ), {, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (]
[(, guard, !=, null, ), {, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (, newLevel, !=]
[), {, CheckLevel, newLevel, =, guard, ., level, (, error, ), ;, if, (, newLevel, !=, null, ), {, return]
[error, ), ;, if, (, newLevel, !=, null, ), {, return, newLevel, ;, }, }, }, }, }, }, return]
[;, }, }, }, }, }, }, return, null, ;, }, @, Override, public, int, getPriority, (, ), {, return]
[;, }, }, }, }, }, }, return, null, ;, }, @, Override, public, int, getPriority, (, ), {, return]
[;, }, }, }, }, }, }, return, null, ;, }, @, Override, public, int, getPriority, (, ), {, return]
[;, }, }, }, }, }, }, return, null, ;, }, @, Override, public, int, getPriority, (, ), {, return]
